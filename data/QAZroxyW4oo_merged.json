{"video_id": "QAZroxyW4oo", "title": "6.13 Machine Learning development process |Transfer learning using data from a different task -ML Ng", "description": "Second Course:\nAdvanced Learning Algorithms.\n\n\nIf you liked the content please subscribe and put a little blue thumb.\nTake heart!", "author": "Machine Learning", "keywords": [], "channel_url": "https://www.youtube.com/channel/UClG5HEAJJFOavT_UolqYROQ", "length": 730, "views": 56, "publish_date": "11/04/2022", "timestamp": 1661817600, "entity": "ML Specialization, Andrew Ng (2022)", "transcript": {"text": " For an application where you don't have that much data, transfer learning is a wonderful technique that lets you use data from a different task to help on your application. This is one of those techniques that I use very frequently. Let's take a look at how transfer learning works. Here's how transfer learning works. Let's say you want to recognize the handwritten digits from zero through nine, but you don't have that much labeled data of these handwritten digits. Here's what you can do. Say you find a very large data set of one million images, of pictures of cats, dogs, cars, people, and so on, thousand classes. You can then start by training a neural network on this large data set of a million images with a thousand different classes, and train the algorithm to take as input an image X, and learn to recognize any of these 1,000 different classes. In this process, you end up learning parameters for the first layer of the neural network, W1, B1, for the second layer, W2, B2, and so on. W3, B3, W4, B4, and W5, B5 for the upper layer. To apply transfer learning, what you do is then make a copy of this neural network, where you would keep the parameters W1, B1, W2, B2, W3, B3, and W4, B4. But for the last layer, you would eliminate the upper layer and replace it with a much smaller upper layer, with just 10 rather than 1,000 upper units. These 10 upper units will correspond to the classes zero, one, through nine that you want your neural network to recognize. Notice that the parameters W5, B5, they can't be copied over because the dimension of this layer has changed. So you need to come up with new parameters, W5, B5, that you need to train from scratch rather than just copy it from the previous neural network. In transfer learning, what you can do is use the parameters from the first four layers, really all the layers except the final upper layer as a starting point for the parameters and then run an optimization algorithm such as gradient descent, or the Adam optimization algorithm with the parameters initialized using the values from this neural network up on top. So in detail, there are two options for how you can train this neural network's parameters. Option one is you only train the upper layers parameters. So you would take the parameters W1, B1, W2, B2, through W4, P4 as the values from on top and just hold them fixed and don't even bother to change them and use an algorithm like stochastic gradient descent or the Adam optimization algorithm to only update W5, B5 to lower the cost function, the usual cost function that you use for learning to recognize these digits zero to nine from a small training set of these digits zero to nine. So there's option one. Option two would be to train all the parameters in the network, including W1, B1, W2, B2, all the way through W5, B5. But the first four layers parameters would be initialized using the values that you had trained on top. If you have a very, very small training set, then option one might work a little bit better. But if you have a training set that's a little bit larger, then option two might work a little bit better. This algorithm is called transfer learning because the intuition is by learning to recognize cats, dogs, cars, people, and so on, it will hopefully have learned some plausible sets of parameters for the earlier layers for processing image inputs. Then by transferring these parameters to the new neural network, the new neural network starts off with the parameters in a much better place. So that with just a little bit of further learning, hopefully it can end up at a pretty good model. These two steps are first training on a large data set and then tuning the parameters further on a smaller data set. Go by the name of supervised pre-training for the step on top. That's when you train the neural network on a very large data set of say a million images, not quite a related task. And then the second step is called fine tuning, where you take the parameters that you had initialized or gotten from supervised pre-training and then run gradient descent further to fine tune the ways to suit the specific application of handwritten digit recognition that you may have. And so if you have a small data set, even tens or hundreds or thousands or just tens of thousands of images of the handwritten digits, being able to learn from this million images of a not quite related task can actually help your learning algorithms performance a lot. One nice thing about transfer learning as well is maybe you don't need to be the one to carry out supervised pre-training. For a lot of neural networks, there will already be researchers that have already trained a neural network on a large image and will have posted a trained neural networks on the internet, freely licensed for anyone to download and use. And what that means is rather than carrying out the first step yourself, you can just download a neural network that someone else may have spent weeks training and then replace the upper layer with your own upper layer and carry out either option one or option two to fine tune a neural network that someone else has already carried out supervised pre-training on and just do a little bit of fine tuning to quickly be able to get to neural network that performs well on your task. Downloading a pre-trained model that someone else has trained and provided for free is one of those techniques where by building on each other's work in the machine learning community, we can all get much better results by the generosity of other researchers that have pre-trained and posted their neural networks online. But why does transfer learning even work? How could you possibly take parameters obtained by recognizing cats, dogs, cars, and people and use that to help you recognize something as different as handwritten digits? Here's some intuition behind it. If you are training a neural network to detect, say, different objects from images, then the first layer of a neural network may learn to detect edges in the image. We think of these as somewhat low-level features in the image, which is to detect edges. Each of these squares is a visualization of what a single neuron has learned to detect, has learned to group together pixels to find edges in an image. The next layer of the neural network then learns to group together edges to detect corners. And so each of these is a visualization of what one neuron may have learned to detect and has learned to detect little simple shapes like corner-like shapes like this. And the next layer of the neural network may have learned to detect somewhat more complex but still generic shapes like basic curves or small little shapes like these. And that's why by learning on detecting lots of different images, you're teaching the neural network to detect edges, corners, and basic shapes. And that's why by training a neural network to detect things as diverse as cats and dogs and cars and people, you are helping it to learn to detect these pretty generic features of images. And finding edges, corners, curves, basic shapes, this is useful for many other computer vision tasks such as recognizing handwritten digits. One restriction of pre-training though is that the image type X has to be the same for the pre-training and the fine-tuning steps. So if the final task you want to solve is a computer vision task, then the pre-training step also has to be a neural network trained on the same type of input, namely an image of the desired dimensions. Conversely, if your goal is to build a speech recognition system to process audio, then a neural network pre-trained on images probably won't do much good on audio. Instead, you want a neural network pre-trained on audio data that you then fine-tune on your own audio data set. And the same for other types of applications. You can pre-train a neural network on text data, and if your application has the same feature input X of text data, then you can fine-tune that neural network on your own data. To summarize, these are the two steps for transfer learning. Step one is download a neural network with parameters that have been pre-trained on a large data set with the same input type as your application. And that input type could be images, audio, text, or something else. Or if you don't want to download a neural network, maybe you can train your own. But in practice, if you're using images, say, it's much more common to download someone else's pre-trained neural network. Then further train or fine-tune the network on your own data. And I found that if you can get a neural network pre-trained on a large data set, say a million images, then sometimes you can use a much smaller data set, maybe a thousand images, maybe even smaller, to fine-tune the neural network on your own data and get pretty good results. And I've sometimes trained neural networks on as few as 50 images that work quite well using this technique when it has already been pre-trained on a much larger data set. This technique isn't panacea. You can't get every application to work just on 50 images, but it does help a lot when the data set you have for your application isn't that large. And by the way, if you've heard of advanced techniques in the news like GPT-3 or BERT or neural networks pre-trained on ImageNet, those are actually examples of neural networks that someone else has pre-trained on a very large image data set or a text data set that can then be fine-tuned on other applications. If you haven't heard of GPT-3 or BERT or ImageNet, don't worry about it, but you have. Those have been successful applications of pre-training in the machine learning literature. If you haven't heard of GPT-3 or BERT or ImageNet, don't worry about it, but you have. Those have been successful applications of transfer learning in the machine learning literature. One of the things I like about transfer learning is it's been one of the ways that the machine learning community has shared ideas and code and even parameters with each other, because thanks to the researchers that have pre-trained large neural networks and posted the parameters on the internet freely for anyone else to download and use, this empowers anyone to take models they're pre-trained to fine-tune on potentially a much smaller data set. In machine learning, all of us end up often building on the work of each other, and that open sharing of ideas, of code, of trained parameters is one of the ways that the machine learning community, all of us collectively, manage to do much better work than any single person by themselves can. I hope that you, joining the machine learning community, will someday maybe find a way to contribute back to this community as well. That's it for pre-training. I hope you find this technique useful. In the next video, I'd like to share with you some thoughts on the full cycle of a machine learning project. When building a machine learning system, what are all the steps that are worth thinking about? We'll look at that in the next video.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 5.68, "text": " For an application where you don't have that much data,", "tokens": [50364, 1171, 364, 3861, 689, 291, 500, 380, 362, 300, 709, 1412, 11, 50648, 50648, 5003, 2539, 307, 257, 3715, 6532, 300, 6653, 291, 764, 50810, 50810, 1412, 490, 257, 819, 5633, 281, 854, 322, 428, 3861, 13, 51015, 51015, 639, 307, 472, 295, 729, 7512, 300, 286, 764, 588, 10374, 13, 51171, 51171, 961, 311, 747, 257, 574, 412, 577, 5003, 2539, 1985, 13, 51330, 51330, 1692, 311, 577, 5003, 2539, 1985, 13, 51491, 51491, 961, 311, 584, 291, 528, 281, 5521, 51602, 51602, 264, 1011, 26859, 27011, 490, 4018, 807, 4949, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1284028279412653, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.012235993519425392}, {"id": 1, "seek": 0, "start": 5.68, "end": 8.92, "text": " transfer learning is a wonderful technique that lets you use", "tokens": [50364, 1171, 364, 3861, 689, 291, 500, 380, 362, 300, 709, 1412, 11, 50648, 50648, 5003, 2539, 307, 257, 3715, 6532, 300, 6653, 291, 764, 50810, 50810, 1412, 490, 257, 819, 5633, 281, 854, 322, 428, 3861, 13, 51015, 51015, 639, 307, 472, 295, 729, 7512, 300, 286, 764, 588, 10374, 13, 51171, 51171, 961, 311, 747, 257, 574, 412, 577, 5003, 2539, 1985, 13, 51330, 51330, 1692, 311, 577, 5003, 2539, 1985, 13, 51491, 51491, 961, 311, 584, 291, 528, 281, 5521, 51602, 51602, 264, 1011, 26859, 27011, 490, 4018, 807, 4949, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1284028279412653, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.012235993519425392}, {"id": 2, "seek": 0, "start": 8.92, "end": 13.02, "text": " data from a different task to help on your application.", "tokens": [50364, 1171, 364, 3861, 689, 291, 500, 380, 362, 300, 709, 1412, 11, 50648, 50648, 5003, 2539, 307, 257, 3715, 6532, 300, 6653, 291, 764, 50810, 50810, 1412, 490, 257, 819, 5633, 281, 854, 322, 428, 3861, 13, 51015, 51015, 639, 307, 472, 295, 729, 7512, 300, 286, 764, 588, 10374, 13, 51171, 51171, 961, 311, 747, 257, 574, 412, 577, 5003, 2539, 1985, 13, 51330, 51330, 1692, 311, 577, 5003, 2539, 1985, 13, 51491, 51491, 961, 311, 584, 291, 528, 281, 5521, 51602, 51602, 264, 1011, 26859, 27011, 490, 4018, 807, 4949, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1284028279412653, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.012235993519425392}, {"id": 3, "seek": 0, "start": 13.02, "end": 16.14, "text": " This is one of those techniques that I use very frequently.", "tokens": [50364, 1171, 364, 3861, 689, 291, 500, 380, 362, 300, 709, 1412, 11, 50648, 50648, 5003, 2539, 307, 257, 3715, 6532, 300, 6653, 291, 764, 50810, 50810, 1412, 490, 257, 819, 5633, 281, 854, 322, 428, 3861, 13, 51015, 51015, 639, 307, 472, 295, 729, 7512, 300, 286, 764, 588, 10374, 13, 51171, 51171, 961, 311, 747, 257, 574, 412, 577, 5003, 2539, 1985, 13, 51330, 51330, 1692, 311, 577, 5003, 2539, 1985, 13, 51491, 51491, 961, 311, 584, 291, 528, 281, 5521, 51602, 51602, 264, 1011, 26859, 27011, 490, 4018, 807, 4949, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1284028279412653, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.012235993519425392}, {"id": 4, "seek": 0, "start": 16.14, "end": 19.32, "text": " Let's take a look at how transfer learning works.", "tokens": [50364, 1171, 364, 3861, 689, 291, 500, 380, 362, 300, 709, 1412, 11, 50648, 50648, 5003, 2539, 307, 257, 3715, 6532, 300, 6653, 291, 764, 50810, 50810, 1412, 490, 257, 819, 5633, 281, 854, 322, 428, 3861, 13, 51015, 51015, 639, 307, 472, 295, 729, 7512, 300, 286, 764, 588, 10374, 13, 51171, 51171, 961, 311, 747, 257, 574, 412, 577, 5003, 2539, 1985, 13, 51330, 51330, 1692, 311, 577, 5003, 2539, 1985, 13, 51491, 51491, 961, 311, 584, 291, 528, 281, 5521, 51602, 51602, 264, 1011, 26859, 27011, 490, 4018, 807, 4949, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1284028279412653, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.012235993519425392}, {"id": 5, "seek": 0, "start": 19.32, "end": 22.54, "text": " Here's how transfer learning works.", "tokens": [50364, 1171, 364, 3861, 689, 291, 500, 380, 362, 300, 709, 1412, 11, 50648, 50648, 5003, 2539, 307, 257, 3715, 6532, 300, 6653, 291, 764, 50810, 50810, 1412, 490, 257, 819, 5633, 281, 854, 322, 428, 3861, 13, 51015, 51015, 639, 307, 472, 295, 729, 7512, 300, 286, 764, 588, 10374, 13, 51171, 51171, 961, 311, 747, 257, 574, 412, 577, 5003, 2539, 1985, 13, 51330, 51330, 1692, 311, 577, 5003, 2539, 1985, 13, 51491, 51491, 961, 311, 584, 291, 528, 281, 5521, 51602, 51602, 264, 1011, 26859, 27011, 490, 4018, 807, 4949, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1284028279412653, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.012235993519425392}, {"id": 6, "seek": 0, "start": 22.54, "end": 24.76, "text": " Let's say you want to recognize", "tokens": [50364, 1171, 364, 3861, 689, 291, 500, 380, 362, 300, 709, 1412, 11, 50648, 50648, 5003, 2539, 307, 257, 3715, 6532, 300, 6653, 291, 764, 50810, 50810, 1412, 490, 257, 819, 5633, 281, 854, 322, 428, 3861, 13, 51015, 51015, 639, 307, 472, 295, 729, 7512, 300, 286, 764, 588, 10374, 13, 51171, 51171, 961, 311, 747, 257, 574, 412, 577, 5003, 2539, 1985, 13, 51330, 51330, 1692, 311, 577, 5003, 2539, 1985, 13, 51491, 51491, 961, 311, 584, 291, 528, 281, 5521, 51602, 51602, 264, 1011, 26859, 27011, 490, 4018, 807, 4949, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1284028279412653, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.012235993519425392}, {"id": 7, "seek": 0, "start": 24.76, "end": 28.72, "text": " the handwritten digits from zero through nine,", "tokens": [50364, 1171, 364, 3861, 689, 291, 500, 380, 362, 300, 709, 1412, 11, 50648, 50648, 5003, 2539, 307, 257, 3715, 6532, 300, 6653, 291, 764, 50810, 50810, 1412, 490, 257, 819, 5633, 281, 854, 322, 428, 3861, 13, 51015, 51015, 639, 307, 472, 295, 729, 7512, 300, 286, 764, 588, 10374, 13, 51171, 51171, 961, 311, 747, 257, 574, 412, 577, 5003, 2539, 1985, 13, 51330, 51330, 1692, 311, 577, 5003, 2539, 1985, 13, 51491, 51491, 961, 311, 584, 291, 528, 281, 5521, 51602, 51602, 264, 1011, 26859, 27011, 490, 4018, 807, 4949, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1284028279412653, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.012235993519425392}, {"id": 8, "seek": 2872, "start": 28.72, "end": 32.82, "text": " but you don't have that much labeled data of these handwritten digits.", "tokens": [50364, 457, 291, 500, 380, 362, 300, 709, 21335, 1412, 295, 613, 1011, 26859, 27011, 13, 50569, 50569, 1692, 311, 437, 291, 393, 360, 13, 50652, 50652, 6463, 291, 915, 257, 588, 2416, 1412, 992, 295, 472, 2459, 5267, 11, 50912, 50912, 295, 5242, 295, 11111, 11, 7197, 11, 51036, 51036, 5163, 11, 561, 11, 293, 370, 322, 11, 4714, 5359, 13, 51216, 51216, 509, 393, 550, 722, 538, 3097, 257, 18161, 3209, 322, 51388, 51388, 341, 2416, 1412, 992, 295, 257, 2459, 5267, 365, 257, 4714, 819, 5359, 11, 51606, 51606, 293, 3847, 264, 9284, 281, 747, 382, 4846, 364, 3256, 1783, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16727331642792603, "compression_ratio": 1.6778242677824269, "no_speech_prob": 6.240585207706317e-06}, {"id": 9, "seek": 2872, "start": 32.82, "end": 34.48, "text": " Here's what you can do.", "tokens": [50364, 457, 291, 500, 380, 362, 300, 709, 21335, 1412, 295, 613, 1011, 26859, 27011, 13, 50569, 50569, 1692, 311, 437, 291, 393, 360, 13, 50652, 50652, 6463, 291, 915, 257, 588, 2416, 1412, 992, 295, 472, 2459, 5267, 11, 50912, 50912, 295, 5242, 295, 11111, 11, 7197, 11, 51036, 51036, 5163, 11, 561, 11, 293, 370, 322, 11, 4714, 5359, 13, 51216, 51216, 509, 393, 550, 722, 538, 3097, 257, 18161, 3209, 322, 51388, 51388, 341, 2416, 1412, 992, 295, 257, 2459, 5267, 365, 257, 4714, 819, 5359, 11, 51606, 51606, 293, 3847, 264, 9284, 281, 747, 382, 4846, 364, 3256, 1783, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16727331642792603, "compression_ratio": 1.6778242677824269, "no_speech_prob": 6.240585207706317e-06}, {"id": 10, "seek": 2872, "start": 34.48, "end": 39.68, "text": " Say you find a very large data set of one million images,", "tokens": [50364, 457, 291, 500, 380, 362, 300, 709, 21335, 1412, 295, 613, 1011, 26859, 27011, 13, 50569, 50569, 1692, 311, 437, 291, 393, 360, 13, 50652, 50652, 6463, 291, 915, 257, 588, 2416, 1412, 992, 295, 472, 2459, 5267, 11, 50912, 50912, 295, 5242, 295, 11111, 11, 7197, 11, 51036, 51036, 5163, 11, 561, 11, 293, 370, 322, 11, 4714, 5359, 13, 51216, 51216, 509, 393, 550, 722, 538, 3097, 257, 18161, 3209, 322, 51388, 51388, 341, 2416, 1412, 992, 295, 257, 2459, 5267, 365, 257, 4714, 819, 5359, 11, 51606, 51606, 293, 3847, 264, 9284, 281, 747, 382, 4846, 364, 3256, 1783, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16727331642792603, "compression_ratio": 1.6778242677824269, "no_speech_prob": 6.240585207706317e-06}, {"id": 11, "seek": 2872, "start": 39.68, "end": 42.16, "text": " of pictures of cats, dogs,", "tokens": [50364, 457, 291, 500, 380, 362, 300, 709, 21335, 1412, 295, 613, 1011, 26859, 27011, 13, 50569, 50569, 1692, 311, 437, 291, 393, 360, 13, 50652, 50652, 6463, 291, 915, 257, 588, 2416, 1412, 992, 295, 472, 2459, 5267, 11, 50912, 50912, 295, 5242, 295, 11111, 11, 7197, 11, 51036, 51036, 5163, 11, 561, 11, 293, 370, 322, 11, 4714, 5359, 13, 51216, 51216, 509, 393, 550, 722, 538, 3097, 257, 18161, 3209, 322, 51388, 51388, 341, 2416, 1412, 992, 295, 257, 2459, 5267, 365, 257, 4714, 819, 5359, 11, 51606, 51606, 293, 3847, 264, 9284, 281, 747, 382, 4846, 364, 3256, 1783, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16727331642792603, "compression_ratio": 1.6778242677824269, "no_speech_prob": 6.240585207706317e-06}, {"id": 12, "seek": 2872, "start": 42.16, "end": 45.76, "text": " cars, people, and so on, thousand classes.", "tokens": [50364, 457, 291, 500, 380, 362, 300, 709, 21335, 1412, 295, 613, 1011, 26859, 27011, 13, 50569, 50569, 1692, 311, 437, 291, 393, 360, 13, 50652, 50652, 6463, 291, 915, 257, 588, 2416, 1412, 992, 295, 472, 2459, 5267, 11, 50912, 50912, 295, 5242, 295, 11111, 11, 7197, 11, 51036, 51036, 5163, 11, 561, 11, 293, 370, 322, 11, 4714, 5359, 13, 51216, 51216, 509, 393, 550, 722, 538, 3097, 257, 18161, 3209, 322, 51388, 51388, 341, 2416, 1412, 992, 295, 257, 2459, 5267, 365, 257, 4714, 819, 5359, 11, 51606, 51606, 293, 3847, 264, 9284, 281, 747, 382, 4846, 364, 3256, 1783, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16727331642792603, "compression_ratio": 1.6778242677824269, "no_speech_prob": 6.240585207706317e-06}, {"id": 13, "seek": 2872, "start": 45.76, "end": 49.2, "text": " You can then start by training a neural network on", "tokens": [50364, 457, 291, 500, 380, 362, 300, 709, 21335, 1412, 295, 613, 1011, 26859, 27011, 13, 50569, 50569, 1692, 311, 437, 291, 393, 360, 13, 50652, 50652, 6463, 291, 915, 257, 588, 2416, 1412, 992, 295, 472, 2459, 5267, 11, 50912, 50912, 295, 5242, 295, 11111, 11, 7197, 11, 51036, 51036, 5163, 11, 561, 11, 293, 370, 322, 11, 4714, 5359, 13, 51216, 51216, 509, 393, 550, 722, 538, 3097, 257, 18161, 3209, 322, 51388, 51388, 341, 2416, 1412, 992, 295, 257, 2459, 5267, 365, 257, 4714, 819, 5359, 11, 51606, 51606, 293, 3847, 264, 9284, 281, 747, 382, 4846, 364, 3256, 1783, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16727331642792603, "compression_ratio": 1.6778242677824269, "no_speech_prob": 6.240585207706317e-06}, {"id": 14, "seek": 2872, "start": 49.2, "end": 53.56, "text": " this large data set of a million images with a thousand different classes,", "tokens": [50364, 457, 291, 500, 380, 362, 300, 709, 21335, 1412, 295, 613, 1011, 26859, 27011, 13, 50569, 50569, 1692, 311, 437, 291, 393, 360, 13, 50652, 50652, 6463, 291, 915, 257, 588, 2416, 1412, 992, 295, 472, 2459, 5267, 11, 50912, 50912, 295, 5242, 295, 11111, 11, 7197, 11, 51036, 51036, 5163, 11, 561, 11, 293, 370, 322, 11, 4714, 5359, 13, 51216, 51216, 509, 393, 550, 722, 538, 3097, 257, 18161, 3209, 322, 51388, 51388, 341, 2416, 1412, 992, 295, 257, 2459, 5267, 365, 257, 4714, 819, 5359, 11, 51606, 51606, 293, 3847, 264, 9284, 281, 747, 382, 4846, 364, 3256, 1783, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16727331642792603, "compression_ratio": 1.6778242677824269, "no_speech_prob": 6.240585207706317e-06}, {"id": 15, "seek": 2872, "start": 53.56, "end": 57.0, "text": " and train the algorithm to take as input an image X,", "tokens": [50364, 457, 291, 500, 380, 362, 300, 709, 21335, 1412, 295, 613, 1011, 26859, 27011, 13, 50569, 50569, 1692, 311, 437, 291, 393, 360, 13, 50652, 50652, 6463, 291, 915, 257, 588, 2416, 1412, 992, 295, 472, 2459, 5267, 11, 50912, 50912, 295, 5242, 295, 11111, 11, 7197, 11, 51036, 51036, 5163, 11, 561, 11, 293, 370, 322, 11, 4714, 5359, 13, 51216, 51216, 509, 393, 550, 722, 538, 3097, 257, 18161, 3209, 322, 51388, 51388, 341, 2416, 1412, 992, 295, 257, 2459, 5267, 365, 257, 4714, 819, 5359, 11, 51606, 51606, 293, 3847, 264, 9284, 281, 747, 382, 4846, 364, 3256, 1783, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16727331642792603, "compression_ratio": 1.6778242677824269, "no_speech_prob": 6.240585207706317e-06}, {"id": 16, "seek": 5700, "start": 57.0, "end": 61.4, "text": " and learn to recognize any of these 1,000 different classes.", "tokens": [50364, 293, 1466, 281, 5521, 604, 295, 613, 502, 11, 1360, 819, 5359, 13, 50584, 50584, 682, 341, 1399, 11, 291, 917, 493, 2539, 9834, 337, 264, 700, 4583, 295, 264, 18161, 3209, 11, 50850, 50850, 343, 16, 11, 363, 16, 11, 337, 264, 1150, 4583, 11, 343, 17, 11, 363, 17, 11, 293, 370, 322, 13, 51064, 51064, 343, 18, 11, 363, 18, 11, 343, 19, 11, 363, 19, 11, 293, 343, 20, 11, 51210, 51210, 363, 20, 337, 264, 6597, 4583, 13, 51336, 51336, 1407, 3079, 5003, 2539, 11, 51474, 51474, 437, 291, 360, 307, 550, 652, 257, 5055, 295, 341, 18161, 3209, 11, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1604238737613783, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.2098560091544641e-06}, {"id": 17, "seek": 5700, "start": 61.4, "end": 66.72, "text": " In this process, you end up learning parameters for the first layer of the neural network,", "tokens": [50364, 293, 1466, 281, 5521, 604, 295, 613, 502, 11, 1360, 819, 5359, 13, 50584, 50584, 682, 341, 1399, 11, 291, 917, 493, 2539, 9834, 337, 264, 700, 4583, 295, 264, 18161, 3209, 11, 50850, 50850, 343, 16, 11, 363, 16, 11, 337, 264, 1150, 4583, 11, 343, 17, 11, 363, 17, 11, 293, 370, 322, 13, 51064, 51064, 343, 18, 11, 363, 18, 11, 343, 19, 11, 363, 19, 11, 293, 343, 20, 11, 51210, 51210, 363, 20, 337, 264, 6597, 4583, 13, 51336, 51336, 1407, 3079, 5003, 2539, 11, 51474, 51474, 437, 291, 360, 307, 550, 652, 257, 5055, 295, 341, 18161, 3209, 11, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1604238737613783, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.2098560091544641e-06}, {"id": 18, "seek": 5700, "start": 66.72, "end": 71.0, "text": " W1, B1, for the second layer, W2, B2, and so on.", "tokens": [50364, 293, 1466, 281, 5521, 604, 295, 613, 502, 11, 1360, 819, 5359, 13, 50584, 50584, 682, 341, 1399, 11, 291, 917, 493, 2539, 9834, 337, 264, 700, 4583, 295, 264, 18161, 3209, 11, 50850, 50850, 343, 16, 11, 363, 16, 11, 337, 264, 1150, 4583, 11, 343, 17, 11, 363, 17, 11, 293, 370, 322, 13, 51064, 51064, 343, 18, 11, 363, 18, 11, 343, 19, 11, 363, 19, 11, 293, 343, 20, 11, 51210, 51210, 363, 20, 337, 264, 6597, 4583, 13, 51336, 51336, 1407, 3079, 5003, 2539, 11, 51474, 51474, 437, 291, 360, 307, 550, 652, 257, 5055, 295, 341, 18161, 3209, 11, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1604238737613783, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.2098560091544641e-06}, {"id": 19, "seek": 5700, "start": 71.0, "end": 73.92, "text": " W3, B3, W4, B4, and W5,", "tokens": [50364, 293, 1466, 281, 5521, 604, 295, 613, 502, 11, 1360, 819, 5359, 13, 50584, 50584, 682, 341, 1399, 11, 291, 917, 493, 2539, 9834, 337, 264, 700, 4583, 295, 264, 18161, 3209, 11, 50850, 50850, 343, 16, 11, 363, 16, 11, 337, 264, 1150, 4583, 11, 343, 17, 11, 363, 17, 11, 293, 370, 322, 13, 51064, 51064, 343, 18, 11, 363, 18, 11, 343, 19, 11, 363, 19, 11, 293, 343, 20, 11, 51210, 51210, 363, 20, 337, 264, 6597, 4583, 13, 51336, 51336, 1407, 3079, 5003, 2539, 11, 51474, 51474, 437, 291, 360, 307, 550, 652, 257, 5055, 295, 341, 18161, 3209, 11, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1604238737613783, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.2098560091544641e-06}, {"id": 20, "seek": 5700, "start": 73.92, "end": 76.44, "text": " B5 for the upper layer.", "tokens": [50364, 293, 1466, 281, 5521, 604, 295, 613, 502, 11, 1360, 819, 5359, 13, 50584, 50584, 682, 341, 1399, 11, 291, 917, 493, 2539, 9834, 337, 264, 700, 4583, 295, 264, 18161, 3209, 11, 50850, 50850, 343, 16, 11, 363, 16, 11, 337, 264, 1150, 4583, 11, 343, 17, 11, 363, 17, 11, 293, 370, 322, 13, 51064, 51064, 343, 18, 11, 363, 18, 11, 343, 19, 11, 363, 19, 11, 293, 343, 20, 11, 51210, 51210, 363, 20, 337, 264, 6597, 4583, 13, 51336, 51336, 1407, 3079, 5003, 2539, 11, 51474, 51474, 437, 291, 360, 307, 550, 652, 257, 5055, 295, 341, 18161, 3209, 11, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1604238737613783, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.2098560091544641e-06}, {"id": 21, "seek": 5700, "start": 76.44, "end": 79.2, "text": " To apply transfer learning,", "tokens": [50364, 293, 1466, 281, 5521, 604, 295, 613, 502, 11, 1360, 819, 5359, 13, 50584, 50584, 682, 341, 1399, 11, 291, 917, 493, 2539, 9834, 337, 264, 700, 4583, 295, 264, 18161, 3209, 11, 50850, 50850, 343, 16, 11, 363, 16, 11, 337, 264, 1150, 4583, 11, 343, 17, 11, 363, 17, 11, 293, 370, 322, 13, 51064, 51064, 343, 18, 11, 363, 18, 11, 343, 19, 11, 363, 19, 11, 293, 343, 20, 11, 51210, 51210, 363, 20, 337, 264, 6597, 4583, 13, 51336, 51336, 1407, 3079, 5003, 2539, 11, 51474, 51474, 437, 291, 360, 307, 550, 652, 257, 5055, 295, 341, 18161, 3209, 11, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1604238737613783, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.2098560091544641e-06}, {"id": 22, "seek": 5700, "start": 79.2, "end": 83.06, "text": " what you do is then make a copy of this neural network,", "tokens": [50364, 293, 1466, 281, 5521, 604, 295, 613, 502, 11, 1360, 819, 5359, 13, 50584, 50584, 682, 341, 1399, 11, 291, 917, 493, 2539, 9834, 337, 264, 700, 4583, 295, 264, 18161, 3209, 11, 50850, 50850, 343, 16, 11, 363, 16, 11, 337, 264, 1150, 4583, 11, 343, 17, 11, 363, 17, 11, 293, 370, 322, 13, 51064, 51064, 343, 18, 11, 363, 18, 11, 343, 19, 11, 363, 19, 11, 293, 343, 20, 11, 51210, 51210, 363, 20, 337, 264, 6597, 4583, 13, 51336, 51336, 1407, 3079, 5003, 2539, 11, 51474, 51474, 437, 291, 360, 307, 550, 652, 257, 5055, 295, 341, 18161, 3209, 11, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1604238737613783, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.2098560091544641e-06}, {"id": 23, "seek": 8306, "start": 83.06, "end": 87.32000000000001, "text": " where you would keep the parameters W1, B1,", "tokens": [50364, 689, 291, 576, 1066, 264, 9834, 343, 16, 11, 363, 16, 11, 50577, 50577, 343, 17, 11, 363, 17, 11, 343, 18, 11, 363, 18, 11, 293, 343, 19, 11, 363, 19, 13, 50829, 50829, 583, 337, 264, 1036, 4583, 11, 50945, 50945, 291, 576, 13819, 264, 6597, 4583, 293, 7406, 309, 365, 257, 709, 4356, 6597, 4583, 11, 51263, 51263, 365, 445, 1266, 2831, 813, 502, 11, 1360, 6597, 6815, 13, 51573, 51573, 1981, 1266, 6597, 6815, 486, 6805, 281, 264, 5359, 4018, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1264469703931487, "compression_ratio": 1.5524861878453038, "no_speech_prob": 2.947994744317839e-06}, {"id": 24, "seek": 8306, "start": 87.32000000000001, "end": 92.36, "text": " W2, B2, W3, B3, and W4, B4.", "tokens": [50364, 689, 291, 576, 1066, 264, 9834, 343, 16, 11, 363, 16, 11, 50577, 50577, 343, 17, 11, 363, 17, 11, 343, 18, 11, 363, 18, 11, 293, 343, 19, 11, 363, 19, 13, 50829, 50829, 583, 337, 264, 1036, 4583, 11, 50945, 50945, 291, 576, 13819, 264, 6597, 4583, 293, 7406, 309, 365, 257, 709, 4356, 6597, 4583, 11, 51263, 51263, 365, 445, 1266, 2831, 813, 502, 11, 1360, 6597, 6815, 13, 51573, 51573, 1981, 1266, 6597, 6815, 486, 6805, 281, 264, 5359, 4018, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1264469703931487, "compression_ratio": 1.5524861878453038, "no_speech_prob": 2.947994744317839e-06}, {"id": 25, "seek": 8306, "start": 92.36, "end": 94.68, "text": " But for the last layer,", "tokens": [50364, 689, 291, 576, 1066, 264, 9834, 343, 16, 11, 363, 16, 11, 50577, 50577, 343, 17, 11, 363, 17, 11, 343, 18, 11, 363, 18, 11, 293, 343, 19, 11, 363, 19, 13, 50829, 50829, 583, 337, 264, 1036, 4583, 11, 50945, 50945, 291, 576, 13819, 264, 6597, 4583, 293, 7406, 309, 365, 257, 709, 4356, 6597, 4583, 11, 51263, 51263, 365, 445, 1266, 2831, 813, 502, 11, 1360, 6597, 6815, 13, 51573, 51573, 1981, 1266, 6597, 6815, 486, 6805, 281, 264, 5359, 4018, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1264469703931487, "compression_ratio": 1.5524861878453038, "no_speech_prob": 2.947994744317839e-06}, {"id": 26, "seek": 8306, "start": 94.68, "end": 101.04, "text": " you would eliminate the upper layer and replace it with a much smaller upper layer,", "tokens": [50364, 689, 291, 576, 1066, 264, 9834, 343, 16, 11, 363, 16, 11, 50577, 50577, 343, 17, 11, 363, 17, 11, 343, 18, 11, 363, 18, 11, 293, 343, 19, 11, 363, 19, 13, 50829, 50829, 583, 337, 264, 1036, 4583, 11, 50945, 50945, 291, 576, 13819, 264, 6597, 4583, 293, 7406, 309, 365, 257, 709, 4356, 6597, 4583, 11, 51263, 51263, 365, 445, 1266, 2831, 813, 502, 11, 1360, 6597, 6815, 13, 51573, 51573, 1981, 1266, 6597, 6815, 486, 6805, 281, 264, 5359, 4018, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1264469703931487, "compression_ratio": 1.5524861878453038, "no_speech_prob": 2.947994744317839e-06}, {"id": 27, "seek": 8306, "start": 101.04, "end": 107.24000000000001, "text": " with just 10 rather than 1,000 upper units.", "tokens": [50364, 689, 291, 576, 1066, 264, 9834, 343, 16, 11, 363, 16, 11, 50577, 50577, 343, 17, 11, 363, 17, 11, 343, 18, 11, 363, 18, 11, 293, 343, 19, 11, 363, 19, 13, 50829, 50829, 583, 337, 264, 1036, 4583, 11, 50945, 50945, 291, 576, 13819, 264, 6597, 4583, 293, 7406, 309, 365, 257, 709, 4356, 6597, 4583, 11, 51263, 51263, 365, 445, 1266, 2831, 813, 502, 11, 1360, 6597, 6815, 13, 51573, 51573, 1981, 1266, 6597, 6815, 486, 6805, 281, 264, 5359, 4018, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1264469703931487, "compression_ratio": 1.5524861878453038, "no_speech_prob": 2.947994744317839e-06}, {"id": 28, "seek": 8306, "start": 107.24000000000001, "end": 110.76, "text": " These 10 upper units will correspond to the classes zero,", "tokens": [50364, 689, 291, 576, 1066, 264, 9834, 343, 16, 11, 363, 16, 11, 50577, 50577, 343, 17, 11, 363, 17, 11, 343, 18, 11, 363, 18, 11, 293, 343, 19, 11, 363, 19, 13, 50829, 50829, 583, 337, 264, 1036, 4583, 11, 50945, 50945, 291, 576, 13819, 264, 6597, 4583, 293, 7406, 309, 365, 257, 709, 4356, 6597, 4583, 11, 51263, 51263, 365, 445, 1266, 2831, 813, 502, 11, 1360, 6597, 6815, 13, 51573, 51573, 1981, 1266, 6597, 6815, 486, 6805, 281, 264, 5359, 4018, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1264469703931487, "compression_ratio": 1.5524861878453038, "no_speech_prob": 2.947994744317839e-06}, {"id": 29, "seek": 11076, "start": 110.76, "end": 114.68, "text": " one, through nine that you want your neural network to recognize.", "tokens": [50364, 472, 11, 807, 4949, 300, 291, 528, 428, 18161, 3209, 281, 5521, 13, 50560, 50560, 13428, 300, 264, 9834, 343, 20, 11, 50674, 50674, 363, 20, 11, 436, 393, 380, 312, 25365, 670, 570, 264, 10139, 295, 341, 4583, 575, 3105, 13, 50938, 50938, 407, 291, 643, 281, 808, 493, 365, 777, 9834, 11, 51110, 51110, 343, 20, 11, 363, 20, 11, 300, 291, 643, 281, 3847, 490, 8459, 2831, 813, 445, 51344, 51344, 5055, 309, 490, 264, 3894, 18161, 3209, 13, 51556, 51556, 682, 5003, 2539, 11, 437, 291, 393, 360, 307, 764, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12855670890029597, "compression_ratio": 1.6383928571428572, "no_speech_prob": 1.3081647693979903e-06}, {"id": 30, "seek": 11076, "start": 114.68, "end": 116.96000000000001, "text": " Notice that the parameters W5,", "tokens": [50364, 472, 11, 807, 4949, 300, 291, 528, 428, 18161, 3209, 281, 5521, 13, 50560, 50560, 13428, 300, 264, 9834, 343, 20, 11, 50674, 50674, 363, 20, 11, 436, 393, 380, 312, 25365, 670, 570, 264, 10139, 295, 341, 4583, 575, 3105, 13, 50938, 50938, 407, 291, 643, 281, 808, 493, 365, 777, 9834, 11, 51110, 51110, 343, 20, 11, 363, 20, 11, 300, 291, 643, 281, 3847, 490, 8459, 2831, 813, 445, 51344, 51344, 5055, 309, 490, 264, 3894, 18161, 3209, 13, 51556, 51556, 682, 5003, 2539, 11, 437, 291, 393, 360, 307, 764, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12855670890029597, "compression_ratio": 1.6383928571428572, "no_speech_prob": 1.3081647693979903e-06}, {"id": 31, "seek": 11076, "start": 116.96000000000001, "end": 122.24000000000001, "text": " B5, they can't be copied over because the dimension of this layer has changed.", "tokens": [50364, 472, 11, 807, 4949, 300, 291, 528, 428, 18161, 3209, 281, 5521, 13, 50560, 50560, 13428, 300, 264, 9834, 343, 20, 11, 50674, 50674, 363, 20, 11, 436, 393, 380, 312, 25365, 670, 570, 264, 10139, 295, 341, 4583, 575, 3105, 13, 50938, 50938, 407, 291, 643, 281, 808, 493, 365, 777, 9834, 11, 51110, 51110, 343, 20, 11, 363, 20, 11, 300, 291, 643, 281, 3847, 490, 8459, 2831, 813, 445, 51344, 51344, 5055, 309, 490, 264, 3894, 18161, 3209, 13, 51556, 51556, 682, 5003, 2539, 11, 437, 291, 393, 360, 307, 764, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12855670890029597, "compression_ratio": 1.6383928571428572, "no_speech_prob": 1.3081647693979903e-06}, {"id": 32, "seek": 11076, "start": 122.24000000000001, "end": 125.68, "text": " So you need to come up with new parameters,", "tokens": [50364, 472, 11, 807, 4949, 300, 291, 528, 428, 18161, 3209, 281, 5521, 13, 50560, 50560, 13428, 300, 264, 9834, 343, 20, 11, 50674, 50674, 363, 20, 11, 436, 393, 380, 312, 25365, 670, 570, 264, 10139, 295, 341, 4583, 575, 3105, 13, 50938, 50938, 407, 291, 643, 281, 808, 493, 365, 777, 9834, 11, 51110, 51110, 343, 20, 11, 363, 20, 11, 300, 291, 643, 281, 3847, 490, 8459, 2831, 813, 445, 51344, 51344, 5055, 309, 490, 264, 3894, 18161, 3209, 13, 51556, 51556, 682, 5003, 2539, 11, 437, 291, 393, 360, 307, 764, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12855670890029597, "compression_ratio": 1.6383928571428572, "no_speech_prob": 1.3081647693979903e-06}, {"id": 33, "seek": 11076, "start": 125.68, "end": 130.36, "text": " W5, B5, that you need to train from scratch rather than just", "tokens": [50364, 472, 11, 807, 4949, 300, 291, 528, 428, 18161, 3209, 281, 5521, 13, 50560, 50560, 13428, 300, 264, 9834, 343, 20, 11, 50674, 50674, 363, 20, 11, 436, 393, 380, 312, 25365, 670, 570, 264, 10139, 295, 341, 4583, 575, 3105, 13, 50938, 50938, 407, 291, 643, 281, 808, 493, 365, 777, 9834, 11, 51110, 51110, 343, 20, 11, 363, 20, 11, 300, 291, 643, 281, 3847, 490, 8459, 2831, 813, 445, 51344, 51344, 5055, 309, 490, 264, 3894, 18161, 3209, 13, 51556, 51556, 682, 5003, 2539, 11, 437, 291, 393, 360, 307, 764, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12855670890029597, "compression_ratio": 1.6383928571428572, "no_speech_prob": 1.3081647693979903e-06}, {"id": 34, "seek": 11076, "start": 130.36, "end": 134.6, "text": " copy it from the previous neural network.", "tokens": [50364, 472, 11, 807, 4949, 300, 291, 528, 428, 18161, 3209, 281, 5521, 13, 50560, 50560, 13428, 300, 264, 9834, 343, 20, 11, 50674, 50674, 363, 20, 11, 436, 393, 380, 312, 25365, 670, 570, 264, 10139, 295, 341, 4583, 575, 3105, 13, 50938, 50938, 407, 291, 643, 281, 808, 493, 365, 777, 9834, 11, 51110, 51110, 343, 20, 11, 363, 20, 11, 300, 291, 643, 281, 3847, 490, 8459, 2831, 813, 445, 51344, 51344, 5055, 309, 490, 264, 3894, 18161, 3209, 13, 51556, 51556, 682, 5003, 2539, 11, 437, 291, 393, 360, 307, 764, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12855670890029597, "compression_ratio": 1.6383928571428572, "no_speech_prob": 1.3081647693979903e-06}, {"id": 35, "seek": 11076, "start": 134.6, "end": 138.64000000000001, "text": " In transfer learning, what you can do is use", "tokens": [50364, 472, 11, 807, 4949, 300, 291, 528, 428, 18161, 3209, 281, 5521, 13, 50560, 50560, 13428, 300, 264, 9834, 343, 20, 11, 50674, 50674, 363, 20, 11, 436, 393, 380, 312, 25365, 670, 570, 264, 10139, 295, 341, 4583, 575, 3105, 13, 50938, 50938, 407, 291, 643, 281, 808, 493, 365, 777, 9834, 11, 51110, 51110, 343, 20, 11, 363, 20, 11, 300, 291, 643, 281, 3847, 490, 8459, 2831, 813, 445, 51344, 51344, 5055, 309, 490, 264, 3894, 18161, 3209, 13, 51556, 51556, 682, 5003, 2539, 11, 437, 291, 393, 360, 307, 764, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12855670890029597, "compression_ratio": 1.6383928571428572, "no_speech_prob": 1.3081647693979903e-06}, {"id": 36, "seek": 13864, "start": 138.64, "end": 142.64, "text": " the parameters from the first four layers,", "tokens": [50364, 264, 9834, 490, 264, 700, 1451, 7914, 11, 50564, 50564, 534, 439, 264, 7914, 3993, 264, 2572, 6597, 4583, 382, 257, 2891, 935, 337, 50762, 50762, 264, 9834, 293, 550, 1190, 364, 19618, 9284, 1270, 382, 16235, 23475, 11, 50984, 50984, 420, 264, 7938, 19618, 9284, 365, 51104, 51104, 264, 9834, 5883, 1602, 1228, 264, 4190, 490, 341, 18161, 3209, 493, 322, 1192, 13, 51344, 51344, 407, 294, 2607, 11, 456, 366, 732, 3956, 337, 577, 291, 393, 3847, 341, 18161, 3209, 311, 9834, 13, 51656, 51656, 29284, 472, 307, 291, 787, 3847, 264, 6597, 7914, 9834, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13777935738657035, "compression_ratio": 1.9297520661157024, "no_speech_prob": 1.248248395313567e-06}, {"id": 37, "seek": 13864, "start": 142.64, "end": 146.6, "text": " really all the layers except the final upper layer as a starting point for", "tokens": [50364, 264, 9834, 490, 264, 700, 1451, 7914, 11, 50564, 50564, 534, 439, 264, 7914, 3993, 264, 2572, 6597, 4583, 382, 257, 2891, 935, 337, 50762, 50762, 264, 9834, 293, 550, 1190, 364, 19618, 9284, 1270, 382, 16235, 23475, 11, 50984, 50984, 420, 264, 7938, 19618, 9284, 365, 51104, 51104, 264, 9834, 5883, 1602, 1228, 264, 4190, 490, 341, 18161, 3209, 493, 322, 1192, 13, 51344, 51344, 407, 294, 2607, 11, 456, 366, 732, 3956, 337, 577, 291, 393, 3847, 341, 18161, 3209, 311, 9834, 13, 51656, 51656, 29284, 472, 307, 291, 787, 3847, 264, 6597, 7914, 9834, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13777935738657035, "compression_ratio": 1.9297520661157024, "no_speech_prob": 1.248248395313567e-06}, {"id": 38, "seek": 13864, "start": 146.6, "end": 151.04, "text": " the parameters and then run an optimization algorithm such as gradient descent,", "tokens": [50364, 264, 9834, 490, 264, 700, 1451, 7914, 11, 50564, 50564, 534, 439, 264, 7914, 3993, 264, 2572, 6597, 4583, 382, 257, 2891, 935, 337, 50762, 50762, 264, 9834, 293, 550, 1190, 364, 19618, 9284, 1270, 382, 16235, 23475, 11, 50984, 50984, 420, 264, 7938, 19618, 9284, 365, 51104, 51104, 264, 9834, 5883, 1602, 1228, 264, 4190, 490, 341, 18161, 3209, 493, 322, 1192, 13, 51344, 51344, 407, 294, 2607, 11, 456, 366, 732, 3956, 337, 577, 291, 393, 3847, 341, 18161, 3209, 311, 9834, 13, 51656, 51656, 29284, 472, 307, 291, 787, 3847, 264, 6597, 7914, 9834, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13777935738657035, "compression_ratio": 1.9297520661157024, "no_speech_prob": 1.248248395313567e-06}, {"id": 39, "seek": 13864, "start": 151.04, "end": 153.44, "text": " or the Adam optimization algorithm with", "tokens": [50364, 264, 9834, 490, 264, 700, 1451, 7914, 11, 50564, 50564, 534, 439, 264, 7914, 3993, 264, 2572, 6597, 4583, 382, 257, 2891, 935, 337, 50762, 50762, 264, 9834, 293, 550, 1190, 364, 19618, 9284, 1270, 382, 16235, 23475, 11, 50984, 50984, 420, 264, 7938, 19618, 9284, 365, 51104, 51104, 264, 9834, 5883, 1602, 1228, 264, 4190, 490, 341, 18161, 3209, 493, 322, 1192, 13, 51344, 51344, 407, 294, 2607, 11, 456, 366, 732, 3956, 337, 577, 291, 393, 3847, 341, 18161, 3209, 311, 9834, 13, 51656, 51656, 29284, 472, 307, 291, 787, 3847, 264, 6597, 7914, 9834, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13777935738657035, "compression_ratio": 1.9297520661157024, "no_speech_prob": 1.248248395313567e-06}, {"id": 40, "seek": 13864, "start": 153.44, "end": 158.23999999999998, "text": " the parameters initialized using the values from this neural network up on top.", "tokens": [50364, 264, 9834, 490, 264, 700, 1451, 7914, 11, 50564, 50564, 534, 439, 264, 7914, 3993, 264, 2572, 6597, 4583, 382, 257, 2891, 935, 337, 50762, 50762, 264, 9834, 293, 550, 1190, 364, 19618, 9284, 1270, 382, 16235, 23475, 11, 50984, 50984, 420, 264, 7938, 19618, 9284, 365, 51104, 51104, 264, 9834, 5883, 1602, 1228, 264, 4190, 490, 341, 18161, 3209, 493, 322, 1192, 13, 51344, 51344, 407, 294, 2607, 11, 456, 366, 732, 3956, 337, 577, 291, 393, 3847, 341, 18161, 3209, 311, 9834, 13, 51656, 51656, 29284, 472, 307, 291, 787, 3847, 264, 6597, 7914, 9834, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13777935738657035, "compression_ratio": 1.9297520661157024, "no_speech_prob": 1.248248395313567e-06}, {"id": 41, "seek": 13864, "start": 158.23999999999998, "end": 164.48, "text": " So in detail, there are two options for how you can train this neural network's parameters.", "tokens": [50364, 264, 9834, 490, 264, 700, 1451, 7914, 11, 50564, 50564, 534, 439, 264, 7914, 3993, 264, 2572, 6597, 4583, 382, 257, 2891, 935, 337, 50762, 50762, 264, 9834, 293, 550, 1190, 364, 19618, 9284, 1270, 382, 16235, 23475, 11, 50984, 50984, 420, 264, 7938, 19618, 9284, 365, 51104, 51104, 264, 9834, 5883, 1602, 1228, 264, 4190, 490, 341, 18161, 3209, 493, 322, 1192, 13, 51344, 51344, 407, 294, 2607, 11, 456, 366, 732, 3956, 337, 577, 291, 393, 3847, 341, 18161, 3209, 311, 9834, 13, 51656, 51656, 29284, 472, 307, 291, 787, 3847, 264, 6597, 7914, 9834, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13777935738657035, "compression_ratio": 1.9297520661157024, "no_speech_prob": 1.248248395313567e-06}, {"id": 42, "seek": 13864, "start": 164.48, "end": 168.04, "text": " Option one is you only train the upper layers parameters.", "tokens": [50364, 264, 9834, 490, 264, 700, 1451, 7914, 11, 50564, 50564, 534, 439, 264, 7914, 3993, 264, 2572, 6597, 4583, 382, 257, 2891, 935, 337, 50762, 50762, 264, 9834, 293, 550, 1190, 364, 19618, 9284, 1270, 382, 16235, 23475, 11, 50984, 50984, 420, 264, 7938, 19618, 9284, 365, 51104, 51104, 264, 9834, 5883, 1602, 1228, 264, 4190, 490, 341, 18161, 3209, 493, 322, 1192, 13, 51344, 51344, 407, 294, 2607, 11, 456, 366, 732, 3956, 337, 577, 291, 393, 3847, 341, 18161, 3209, 311, 9834, 13, 51656, 51656, 29284, 472, 307, 291, 787, 3847, 264, 6597, 7914, 9834, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13777935738657035, "compression_ratio": 1.9297520661157024, "no_speech_prob": 1.248248395313567e-06}, {"id": 43, "seek": 16804, "start": 168.04, "end": 171.2, "text": " So you would take the parameters W1,", "tokens": [50364, 407, 291, 576, 747, 264, 9834, 343, 16, 11, 50522, 50522, 363, 16, 11, 343, 17, 11, 363, 17, 11, 807, 343, 19, 11, 50624, 50624, 430, 19, 382, 264, 4190, 490, 322, 1192, 293, 445, 1797, 552, 50784, 50784, 6806, 293, 500, 380, 754, 8677, 281, 1319, 552, 293, 764, 364, 9284, 411, 50976, 50976, 342, 8997, 2750, 16235, 23475, 420, 264, 7938, 19618, 9284, 281, 787, 5623, 51186, 51186, 343, 20, 11, 363, 20, 281, 3126, 264, 2063, 2445, 11, 51400, 51400, 264, 7713, 2063, 2445, 300, 291, 764, 337, 2539, 281, 5521, 51574, 51574, 613, 27011, 4018, 281, 4949, 490, 257, 1359, 3097, 992, 295, 613, 27011, 4018, 281, 4949, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14532748723434188, "compression_ratio": 1.6795366795366795, "no_speech_prob": 3.3930775771295885e-06}, {"id": 44, "seek": 16804, "start": 171.2, "end": 173.23999999999998, "text": " B1, W2, B2, through W4,", "tokens": [50364, 407, 291, 576, 747, 264, 9834, 343, 16, 11, 50522, 50522, 363, 16, 11, 343, 17, 11, 363, 17, 11, 807, 343, 19, 11, 50624, 50624, 430, 19, 382, 264, 4190, 490, 322, 1192, 293, 445, 1797, 552, 50784, 50784, 6806, 293, 500, 380, 754, 8677, 281, 1319, 552, 293, 764, 364, 9284, 411, 50976, 50976, 342, 8997, 2750, 16235, 23475, 420, 264, 7938, 19618, 9284, 281, 787, 5623, 51186, 51186, 343, 20, 11, 363, 20, 281, 3126, 264, 2063, 2445, 11, 51400, 51400, 264, 7713, 2063, 2445, 300, 291, 764, 337, 2539, 281, 5521, 51574, 51574, 613, 27011, 4018, 281, 4949, 490, 257, 1359, 3097, 992, 295, 613, 27011, 4018, 281, 4949, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14532748723434188, "compression_ratio": 1.6795366795366795, "no_speech_prob": 3.3930775771295885e-06}, {"id": 45, "seek": 16804, "start": 173.23999999999998, "end": 176.44, "text": " P4 as the values from on top and just hold them", "tokens": [50364, 407, 291, 576, 747, 264, 9834, 343, 16, 11, 50522, 50522, 363, 16, 11, 343, 17, 11, 363, 17, 11, 807, 343, 19, 11, 50624, 50624, 430, 19, 382, 264, 4190, 490, 322, 1192, 293, 445, 1797, 552, 50784, 50784, 6806, 293, 500, 380, 754, 8677, 281, 1319, 552, 293, 764, 364, 9284, 411, 50976, 50976, 342, 8997, 2750, 16235, 23475, 420, 264, 7938, 19618, 9284, 281, 787, 5623, 51186, 51186, 343, 20, 11, 363, 20, 281, 3126, 264, 2063, 2445, 11, 51400, 51400, 264, 7713, 2063, 2445, 300, 291, 764, 337, 2539, 281, 5521, 51574, 51574, 613, 27011, 4018, 281, 4949, 490, 257, 1359, 3097, 992, 295, 613, 27011, 4018, 281, 4949, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14532748723434188, "compression_ratio": 1.6795366795366795, "no_speech_prob": 3.3930775771295885e-06}, {"id": 46, "seek": 16804, "start": 176.44, "end": 180.28, "text": " fixed and don't even bother to change them and use an algorithm like", "tokens": [50364, 407, 291, 576, 747, 264, 9834, 343, 16, 11, 50522, 50522, 363, 16, 11, 343, 17, 11, 363, 17, 11, 807, 343, 19, 11, 50624, 50624, 430, 19, 382, 264, 4190, 490, 322, 1192, 293, 445, 1797, 552, 50784, 50784, 6806, 293, 500, 380, 754, 8677, 281, 1319, 552, 293, 764, 364, 9284, 411, 50976, 50976, 342, 8997, 2750, 16235, 23475, 420, 264, 7938, 19618, 9284, 281, 787, 5623, 51186, 51186, 343, 20, 11, 363, 20, 281, 3126, 264, 2063, 2445, 11, 51400, 51400, 264, 7713, 2063, 2445, 300, 291, 764, 337, 2539, 281, 5521, 51574, 51574, 613, 27011, 4018, 281, 4949, 490, 257, 1359, 3097, 992, 295, 613, 27011, 4018, 281, 4949, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14532748723434188, "compression_ratio": 1.6795366795366795, "no_speech_prob": 3.3930775771295885e-06}, {"id": 47, "seek": 16804, "start": 180.28, "end": 184.48, "text": " stochastic gradient descent or the Adam optimization algorithm to only update", "tokens": [50364, 407, 291, 576, 747, 264, 9834, 343, 16, 11, 50522, 50522, 363, 16, 11, 343, 17, 11, 363, 17, 11, 807, 343, 19, 11, 50624, 50624, 430, 19, 382, 264, 4190, 490, 322, 1192, 293, 445, 1797, 552, 50784, 50784, 6806, 293, 500, 380, 754, 8677, 281, 1319, 552, 293, 764, 364, 9284, 411, 50976, 50976, 342, 8997, 2750, 16235, 23475, 420, 264, 7938, 19618, 9284, 281, 787, 5623, 51186, 51186, 343, 20, 11, 363, 20, 281, 3126, 264, 2063, 2445, 11, 51400, 51400, 264, 7713, 2063, 2445, 300, 291, 764, 337, 2539, 281, 5521, 51574, 51574, 613, 27011, 4018, 281, 4949, 490, 257, 1359, 3097, 992, 295, 613, 27011, 4018, 281, 4949, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14532748723434188, "compression_ratio": 1.6795366795366795, "no_speech_prob": 3.3930775771295885e-06}, {"id": 48, "seek": 16804, "start": 184.48, "end": 188.76, "text": " W5, B5 to lower the cost function,", "tokens": [50364, 407, 291, 576, 747, 264, 9834, 343, 16, 11, 50522, 50522, 363, 16, 11, 343, 17, 11, 363, 17, 11, 807, 343, 19, 11, 50624, 50624, 430, 19, 382, 264, 4190, 490, 322, 1192, 293, 445, 1797, 552, 50784, 50784, 6806, 293, 500, 380, 754, 8677, 281, 1319, 552, 293, 764, 364, 9284, 411, 50976, 50976, 342, 8997, 2750, 16235, 23475, 420, 264, 7938, 19618, 9284, 281, 787, 5623, 51186, 51186, 343, 20, 11, 363, 20, 281, 3126, 264, 2063, 2445, 11, 51400, 51400, 264, 7713, 2063, 2445, 300, 291, 764, 337, 2539, 281, 5521, 51574, 51574, 613, 27011, 4018, 281, 4949, 490, 257, 1359, 3097, 992, 295, 613, 27011, 4018, 281, 4949, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14532748723434188, "compression_ratio": 1.6795366795366795, "no_speech_prob": 3.3930775771295885e-06}, {"id": 49, "seek": 16804, "start": 188.76, "end": 192.23999999999998, "text": " the usual cost function that you use for learning to recognize", "tokens": [50364, 407, 291, 576, 747, 264, 9834, 343, 16, 11, 50522, 50522, 363, 16, 11, 343, 17, 11, 363, 17, 11, 807, 343, 19, 11, 50624, 50624, 430, 19, 382, 264, 4190, 490, 322, 1192, 293, 445, 1797, 552, 50784, 50784, 6806, 293, 500, 380, 754, 8677, 281, 1319, 552, 293, 764, 364, 9284, 411, 50976, 50976, 342, 8997, 2750, 16235, 23475, 420, 264, 7938, 19618, 9284, 281, 787, 5623, 51186, 51186, 343, 20, 11, 363, 20, 281, 3126, 264, 2063, 2445, 11, 51400, 51400, 264, 7713, 2063, 2445, 300, 291, 764, 337, 2539, 281, 5521, 51574, 51574, 613, 27011, 4018, 281, 4949, 490, 257, 1359, 3097, 992, 295, 613, 27011, 4018, 281, 4949, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14532748723434188, "compression_ratio": 1.6795366795366795, "no_speech_prob": 3.3930775771295885e-06}, {"id": 50, "seek": 16804, "start": 192.23999999999998, "end": 196.68, "text": " these digits zero to nine from a small training set of these digits zero to nine.", "tokens": [50364, 407, 291, 576, 747, 264, 9834, 343, 16, 11, 50522, 50522, 363, 16, 11, 343, 17, 11, 363, 17, 11, 807, 343, 19, 11, 50624, 50624, 430, 19, 382, 264, 4190, 490, 322, 1192, 293, 445, 1797, 552, 50784, 50784, 6806, 293, 500, 380, 754, 8677, 281, 1319, 552, 293, 764, 364, 9284, 411, 50976, 50976, 342, 8997, 2750, 16235, 23475, 420, 264, 7938, 19618, 9284, 281, 787, 5623, 51186, 51186, 343, 20, 11, 363, 20, 281, 3126, 264, 2063, 2445, 11, 51400, 51400, 264, 7713, 2063, 2445, 300, 291, 764, 337, 2539, 281, 5521, 51574, 51574, 613, 27011, 4018, 281, 4949, 490, 257, 1359, 3097, 992, 295, 613, 27011, 4018, 281, 4949, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14532748723434188, "compression_ratio": 1.6795366795366795, "no_speech_prob": 3.3930775771295885e-06}, {"id": 51, "seek": 19668, "start": 196.68, "end": 198.48000000000002, "text": " So there's option one.", "tokens": [50364, 407, 456, 311, 3614, 472, 13, 50454, 50454, 29284, 732, 576, 312, 281, 3847, 439, 264, 9834, 294, 264, 3209, 11, 50626, 50626, 3009, 343, 16, 11, 363, 16, 11, 343, 17, 11, 363, 17, 11, 50744, 50744, 439, 264, 636, 807, 343, 20, 11, 363, 20, 13, 50864, 50864, 583, 264, 700, 1451, 7914, 9834, 576, 312, 51006, 51006, 5883, 1602, 1228, 264, 4190, 300, 291, 632, 8895, 322, 1192, 13, 51196, 51196, 759, 291, 362, 257, 588, 11, 588, 1359, 3097, 992, 11, 51378, 51378, 550, 3614, 472, 1062, 589, 257, 707, 857, 1101, 13, 51520, 51520, 583, 498, 291, 362, 257, 3097, 992, 300, 311, 257, 707, 857, 4833, 11, 51694, 51694, 550, 3614, 732, 1062, 589, 257, 707, 857, 1101, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.13352355661318283, "compression_ratio": 1.8734177215189873, "no_speech_prob": 4.425425231602276e-06}, {"id": 52, "seek": 19668, "start": 198.48000000000002, "end": 201.92000000000002, "text": " Option two would be to train all the parameters in the network,", "tokens": [50364, 407, 456, 311, 3614, 472, 13, 50454, 50454, 29284, 732, 576, 312, 281, 3847, 439, 264, 9834, 294, 264, 3209, 11, 50626, 50626, 3009, 343, 16, 11, 363, 16, 11, 343, 17, 11, 363, 17, 11, 50744, 50744, 439, 264, 636, 807, 343, 20, 11, 363, 20, 13, 50864, 50864, 583, 264, 700, 1451, 7914, 9834, 576, 312, 51006, 51006, 5883, 1602, 1228, 264, 4190, 300, 291, 632, 8895, 322, 1192, 13, 51196, 51196, 759, 291, 362, 257, 588, 11, 588, 1359, 3097, 992, 11, 51378, 51378, 550, 3614, 472, 1062, 589, 257, 707, 857, 1101, 13, 51520, 51520, 583, 498, 291, 362, 257, 3097, 992, 300, 311, 257, 707, 857, 4833, 11, 51694, 51694, 550, 3614, 732, 1062, 589, 257, 707, 857, 1101, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.13352355661318283, "compression_ratio": 1.8734177215189873, "no_speech_prob": 4.425425231602276e-06}, {"id": 53, "seek": 19668, "start": 201.92000000000002, "end": 204.28, "text": " including W1, B1, W2, B2,", "tokens": [50364, 407, 456, 311, 3614, 472, 13, 50454, 50454, 29284, 732, 576, 312, 281, 3847, 439, 264, 9834, 294, 264, 3209, 11, 50626, 50626, 3009, 343, 16, 11, 363, 16, 11, 343, 17, 11, 363, 17, 11, 50744, 50744, 439, 264, 636, 807, 343, 20, 11, 363, 20, 13, 50864, 50864, 583, 264, 700, 1451, 7914, 9834, 576, 312, 51006, 51006, 5883, 1602, 1228, 264, 4190, 300, 291, 632, 8895, 322, 1192, 13, 51196, 51196, 759, 291, 362, 257, 588, 11, 588, 1359, 3097, 992, 11, 51378, 51378, 550, 3614, 472, 1062, 589, 257, 707, 857, 1101, 13, 51520, 51520, 583, 498, 291, 362, 257, 3097, 992, 300, 311, 257, 707, 857, 4833, 11, 51694, 51694, 550, 3614, 732, 1062, 589, 257, 707, 857, 1101, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.13352355661318283, "compression_ratio": 1.8734177215189873, "no_speech_prob": 4.425425231602276e-06}, {"id": 54, "seek": 19668, "start": 204.28, "end": 206.68, "text": " all the way through W5, B5.", "tokens": [50364, 407, 456, 311, 3614, 472, 13, 50454, 50454, 29284, 732, 576, 312, 281, 3847, 439, 264, 9834, 294, 264, 3209, 11, 50626, 50626, 3009, 343, 16, 11, 363, 16, 11, 343, 17, 11, 363, 17, 11, 50744, 50744, 439, 264, 636, 807, 343, 20, 11, 363, 20, 13, 50864, 50864, 583, 264, 700, 1451, 7914, 9834, 576, 312, 51006, 51006, 5883, 1602, 1228, 264, 4190, 300, 291, 632, 8895, 322, 1192, 13, 51196, 51196, 759, 291, 362, 257, 588, 11, 588, 1359, 3097, 992, 11, 51378, 51378, 550, 3614, 472, 1062, 589, 257, 707, 857, 1101, 13, 51520, 51520, 583, 498, 291, 362, 257, 3097, 992, 300, 311, 257, 707, 857, 4833, 11, 51694, 51694, 550, 3614, 732, 1062, 589, 257, 707, 857, 1101, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.13352355661318283, "compression_ratio": 1.8734177215189873, "no_speech_prob": 4.425425231602276e-06}, {"id": 55, "seek": 19668, "start": 206.68, "end": 209.52, "text": " But the first four layers parameters would be", "tokens": [50364, 407, 456, 311, 3614, 472, 13, 50454, 50454, 29284, 732, 576, 312, 281, 3847, 439, 264, 9834, 294, 264, 3209, 11, 50626, 50626, 3009, 343, 16, 11, 363, 16, 11, 343, 17, 11, 363, 17, 11, 50744, 50744, 439, 264, 636, 807, 343, 20, 11, 363, 20, 13, 50864, 50864, 583, 264, 700, 1451, 7914, 9834, 576, 312, 51006, 51006, 5883, 1602, 1228, 264, 4190, 300, 291, 632, 8895, 322, 1192, 13, 51196, 51196, 759, 291, 362, 257, 588, 11, 588, 1359, 3097, 992, 11, 51378, 51378, 550, 3614, 472, 1062, 589, 257, 707, 857, 1101, 13, 51520, 51520, 583, 498, 291, 362, 257, 3097, 992, 300, 311, 257, 707, 857, 4833, 11, 51694, 51694, 550, 3614, 732, 1062, 589, 257, 707, 857, 1101, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.13352355661318283, "compression_ratio": 1.8734177215189873, "no_speech_prob": 4.425425231602276e-06}, {"id": 56, "seek": 19668, "start": 209.52, "end": 213.32, "text": " initialized using the values that you had trained on top.", "tokens": [50364, 407, 456, 311, 3614, 472, 13, 50454, 50454, 29284, 732, 576, 312, 281, 3847, 439, 264, 9834, 294, 264, 3209, 11, 50626, 50626, 3009, 343, 16, 11, 363, 16, 11, 343, 17, 11, 363, 17, 11, 50744, 50744, 439, 264, 636, 807, 343, 20, 11, 363, 20, 13, 50864, 50864, 583, 264, 700, 1451, 7914, 9834, 576, 312, 51006, 51006, 5883, 1602, 1228, 264, 4190, 300, 291, 632, 8895, 322, 1192, 13, 51196, 51196, 759, 291, 362, 257, 588, 11, 588, 1359, 3097, 992, 11, 51378, 51378, 550, 3614, 472, 1062, 589, 257, 707, 857, 1101, 13, 51520, 51520, 583, 498, 291, 362, 257, 3097, 992, 300, 311, 257, 707, 857, 4833, 11, 51694, 51694, 550, 3614, 732, 1062, 589, 257, 707, 857, 1101, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.13352355661318283, "compression_ratio": 1.8734177215189873, "no_speech_prob": 4.425425231602276e-06}, {"id": 57, "seek": 19668, "start": 213.32, "end": 216.96, "text": " If you have a very, very small training set,", "tokens": [50364, 407, 456, 311, 3614, 472, 13, 50454, 50454, 29284, 732, 576, 312, 281, 3847, 439, 264, 9834, 294, 264, 3209, 11, 50626, 50626, 3009, 343, 16, 11, 363, 16, 11, 343, 17, 11, 363, 17, 11, 50744, 50744, 439, 264, 636, 807, 343, 20, 11, 363, 20, 13, 50864, 50864, 583, 264, 700, 1451, 7914, 9834, 576, 312, 51006, 51006, 5883, 1602, 1228, 264, 4190, 300, 291, 632, 8895, 322, 1192, 13, 51196, 51196, 759, 291, 362, 257, 588, 11, 588, 1359, 3097, 992, 11, 51378, 51378, 550, 3614, 472, 1062, 589, 257, 707, 857, 1101, 13, 51520, 51520, 583, 498, 291, 362, 257, 3097, 992, 300, 311, 257, 707, 857, 4833, 11, 51694, 51694, 550, 3614, 732, 1062, 589, 257, 707, 857, 1101, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.13352355661318283, "compression_ratio": 1.8734177215189873, "no_speech_prob": 4.425425231602276e-06}, {"id": 58, "seek": 19668, "start": 216.96, "end": 219.8, "text": " then option one might work a little bit better.", "tokens": [50364, 407, 456, 311, 3614, 472, 13, 50454, 50454, 29284, 732, 576, 312, 281, 3847, 439, 264, 9834, 294, 264, 3209, 11, 50626, 50626, 3009, 343, 16, 11, 363, 16, 11, 343, 17, 11, 363, 17, 11, 50744, 50744, 439, 264, 636, 807, 343, 20, 11, 363, 20, 13, 50864, 50864, 583, 264, 700, 1451, 7914, 9834, 576, 312, 51006, 51006, 5883, 1602, 1228, 264, 4190, 300, 291, 632, 8895, 322, 1192, 13, 51196, 51196, 759, 291, 362, 257, 588, 11, 588, 1359, 3097, 992, 11, 51378, 51378, 550, 3614, 472, 1062, 589, 257, 707, 857, 1101, 13, 51520, 51520, 583, 498, 291, 362, 257, 3097, 992, 300, 311, 257, 707, 857, 4833, 11, 51694, 51694, 550, 3614, 732, 1062, 589, 257, 707, 857, 1101, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.13352355661318283, "compression_ratio": 1.8734177215189873, "no_speech_prob": 4.425425231602276e-06}, {"id": 59, "seek": 19668, "start": 219.8, "end": 223.28, "text": " But if you have a training set that's a little bit larger,", "tokens": [50364, 407, 456, 311, 3614, 472, 13, 50454, 50454, 29284, 732, 576, 312, 281, 3847, 439, 264, 9834, 294, 264, 3209, 11, 50626, 50626, 3009, 343, 16, 11, 363, 16, 11, 343, 17, 11, 363, 17, 11, 50744, 50744, 439, 264, 636, 807, 343, 20, 11, 363, 20, 13, 50864, 50864, 583, 264, 700, 1451, 7914, 9834, 576, 312, 51006, 51006, 5883, 1602, 1228, 264, 4190, 300, 291, 632, 8895, 322, 1192, 13, 51196, 51196, 759, 291, 362, 257, 588, 11, 588, 1359, 3097, 992, 11, 51378, 51378, 550, 3614, 472, 1062, 589, 257, 707, 857, 1101, 13, 51520, 51520, 583, 498, 291, 362, 257, 3097, 992, 300, 311, 257, 707, 857, 4833, 11, 51694, 51694, 550, 3614, 732, 1062, 589, 257, 707, 857, 1101, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.13352355661318283, "compression_ratio": 1.8734177215189873, "no_speech_prob": 4.425425231602276e-06}, {"id": 60, "seek": 19668, "start": 223.28, "end": 226.20000000000002, "text": " then option two might work a little bit better.", "tokens": [50364, 407, 456, 311, 3614, 472, 13, 50454, 50454, 29284, 732, 576, 312, 281, 3847, 439, 264, 9834, 294, 264, 3209, 11, 50626, 50626, 3009, 343, 16, 11, 363, 16, 11, 343, 17, 11, 363, 17, 11, 50744, 50744, 439, 264, 636, 807, 343, 20, 11, 363, 20, 13, 50864, 50864, 583, 264, 700, 1451, 7914, 9834, 576, 312, 51006, 51006, 5883, 1602, 1228, 264, 4190, 300, 291, 632, 8895, 322, 1192, 13, 51196, 51196, 759, 291, 362, 257, 588, 11, 588, 1359, 3097, 992, 11, 51378, 51378, 550, 3614, 472, 1062, 589, 257, 707, 857, 1101, 13, 51520, 51520, 583, 498, 291, 362, 257, 3097, 992, 300, 311, 257, 707, 857, 4833, 11, 51694, 51694, 550, 3614, 732, 1062, 589, 257, 707, 857, 1101, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.13352355661318283, "compression_ratio": 1.8734177215189873, "no_speech_prob": 4.425425231602276e-06}, {"id": 61, "seek": 22620, "start": 226.2, "end": 232.04, "text": " This algorithm is called transfer learning because the intuition is by", "tokens": [50364, 639, 9284, 307, 1219, 5003, 2539, 570, 264, 24002, 307, 538, 50656, 50656, 2539, 281, 5521, 11111, 11, 7197, 11, 5163, 11, 561, 11, 293, 370, 322, 11, 50834, 50834, 309, 486, 4696, 362, 3264, 512, 39925, 6352, 295, 9834, 337, 51040, 51040, 264, 3071, 7914, 337, 9007, 3256, 15743, 13, 51222, 51222, 1396, 538, 31437, 613, 9834, 281, 264, 777, 18161, 3209, 11, 51422, 51422, 264, 777, 18161, 3209, 3719, 766, 365, 264, 9834, 294, 257, 709, 1101, 1081, 13, 51664, 51664, 407, 300, 365, 445, 257, 707, 857, 295, 3052, 2539, 11, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.16159266841654873, "compression_ratio": 1.764, "no_speech_prob": 1.0187835641772836e-06}, {"id": 62, "seek": 22620, "start": 232.04, "end": 235.6, "text": " learning to recognize cats, dogs, cars, people, and so on,", "tokens": [50364, 639, 9284, 307, 1219, 5003, 2539, 570, 264, 24002, 307, 538, 50656, 50656, 2539, 281, 5521, 11111, 11, 7197, 11, 5163, 11, 561, 11, 293, 370, 322, 11, 50834, 50834, 309, 486, 4696, 362, 3264, 512, 39925, 6352, 295, 9834, 337, 51040, 51040, 264, 3071, 7914, 337, 9007, 3256, 15743, 13, 51222, 51222, 1396, 538, 31437, 613, 9834, 281, 264, 777, 18161, 3209, 11, 51422, 51422, 264, 777, 18161, 3209, 3719, 766, 365, 264, 9834, 294, 257, 709, 1101, 1081, 13, 51664, 51664, 407, 300, 365, 445, 257, 707, 857, 295, 3052, 2539, 11, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.16159266841654873, "compression_ratio": 1.764, "no_speech_prob": 1.0187835641772836e-06}, {"id": 63, "seek": 22620, "start": 235.6, "end": 239.72, "text": " it will hopefully have learned some plausible sets of parameters for", "tokens": [50364, 639, 9284, 307, 1219, 5003, 2539, 570, 264, 24002, 307, 538, 50656, 50656, 2539, 281, 5521, 11111, 11, 7197, 11, 5163, 11, 561, 11, 293, 370, 322, 11, 50834, 50834, 309, 486, 4696, 362, 3264, 512, 39925, 6352, 295, 9834, 337, 51040, 51040, 264, 3071, 7914, 337, 9007, 3256, 15743, 13, 51222, 51222, 1396, 538, 31437, 613, 9834, 281, 264, 777, 18161, 3209, 11, 51422, 51422, 264, 777, 18161, 3209, 3719, 766, 365, 264, 9834, 294, 257, 709, 1101, 1081, 13, 51664, 51664, 407, 300, 365, 445, 257, 707, 857, 295, 3052, 2539, 11, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.16159266841654873, "compression_ratio": 1.764, "no_speech_prob": 1.0187835641772836e-06}, {"id": 64, "seek": 22620, "start": 239.72, "end": 243.35999999999999, "text": " the earlier layers for processing image inputs.", "tokens": [50364, 639, 9284, 307, 1219, 5003, 2539, 570, 264, 24002, 307, 538, 50656, 50656, 2539, 281, 5521, 11111, 11, 7197, 11, 5163, 11, 561, 11, 293, 370, 322, 11, 50834, 50834, 309, 486, 4696, 362, 3264, 512, 39925, 6352, 295, 9834, 337, 51040, 51040, 264, 3071, 7914, 337, 9007, 3256, 15743, 13, 51222, 51222, 1396, 538, 31437, 613, 9834, 281, 264, 777, 18161, 3209, 11, 51422, 51422, 264, 777, 18161, 3209, 3719, 766, 365, 264, 9834, 294, 257, 709, 1101, 1081, 13, 51664, 51664, 407, 300, 365, 445, 257, 707, 857, 295, 3052, 2539, 11, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.16159266841654873, "compression_ratio": 1.764, "no_speech_prob": 1.0187835641772836e-06}, {"id": 65, "seek": 22620, "start": 243.35999999999999, "end": 247.35999999999999, "text": " Then by transferring these parameters to the new neural network,", "tokens": [50364, 639, 9284, 307, 1219, 5003, 2539, 570, 264, 24002, 307, 538, 50656, 50656, 2539, 281, 5521, 11111, 11, 7197, 11, 5163, 11, 561, 11, 293, 370, 322, 11, 50834, 50834, 309, 486, 4696, 362, 3264, 512, 39925, 6352, 295, 9834, 337, 51040, 51040, 264, 3071, 7914, 337, 9007, 3256, 15743, 13, 51222, 51222, 1396, 538, 31437, 613, 9834, 281, 264, 777, 18161, 3209, 11, 51422, 51422, 264, 777, 18161, 3209, 3719, 766, 365, 264, 9834, 294, 257, 709, 1101, 1081, 13, 51664, 51664, 407, 300, 365, 445, 257, 707, 857, 295, 3052, 2539, 11, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.16159266841654873, "compression_ratio": 1.764, "no_speech_prob": 1.0187835641772836e-06}, {"id": 66, "seek": 22620, "start": 247.35999999999999, "end": 252.2, "text": " the new neural network starts off with the parameters in a much better place.", "tokens": [50364, 639, 9284, 307, 1219, 5003, 2539, 570, 264, 24002, 307, 538, 50656, 50656, 2539, 281, 5521, 11111, 11, 7197, 11, 5163, 11, 561, 11, 293, 370, 322, 11, 50834, 50834, 309, 486, 4696, 362, 3264, 512, 39925, 6352, 295, 9834, 337, 51040, 51040, 264, 3071, 7914, 337, 9007, 3256, 15743, 13, 51222, 51222, 1396, 538, 31437, 613, 9834, 281, 264, 777, 18161, 3209, 11, 51422, 51422, 264, 777, 18161, 3209, 3719, 766, 365, 264, 9834, 294, 257, 709, 1101, 1081, 13, 51664, 51664, 407, 300, 365, 445, 257, 707, 857, 295, 3052, 2539, 11, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.16159266841654873, "compression_ratio": 1.764, "no_speech_prob": 1.0187835641772836e-06}, {"id": 67, "seek": 22620, "start": 252.2, "end": 255.04, "text": " So that with just a little bit of further learning,", "tokens": [50364, 639, 9284, 307, 1219, 5003, 2539, 570, 264, 24002, 307, 538, 50656, 50656, 2539, 281, 5521, 11111, 11, 7197, 11, 5163, 11, 561, 11, 293, 370, 322, 11, 50834, 50834, 309, 486, 4696, 362, 3264, 512, 39925, 6352, 295, 9834, 337, 51040, 51040, 264, 3071, 7914, 337, 9007, 3256, 15743, 13, 51222, 51222, 1396, 538, 31437, 613, 9834, 281, 264, 777, 18161, 3209, 11, 51422, 51422, 264, 777, 18161, 3209, 3719, 766, 365, 264, 9834, 294, 257, 709, 1101, 1081, 13, 51664, 51664, 407, 300, 365, 445, 257, 707, 857, 295, 3052, 2539, 11, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.16159266841654873, "compression_ratio": 1.764, "no_speech_prob": 1.0187835641772836e-06}, {"id": 68, "seek": 25504, "start": 255.04, "end": 258.08, "text": " hopefully it can end up at a pretty good model.", "tokens": [50364, 4696, 309, 393, 917, 493, 412, 257, 1238, 665, 2316, 13, 50516, 50516, 1981, 732, 4439, 366, 700, 3097, 322, 257, 2416, 1412, 992, 293, 50714, 50714, 550, 15164, 264, 9834, 3052, 322, 257, 4356, 1412, 992, 13, 50932, 50932, 1037, 538, 264, 1315, 295, 46533, 659, 12, 17227, 1760, 337, 264, 1823, 322, 1192, 13, 51154, 51154, 663, 311, 562, 291, 3847, 264, 18161, 3209, 322, 257, 588, 2416, 1412, 992, 295, 584, 257, 2459, 51370, 51370, 5267, 11, 406, 1596, 257, 4077, 5633, 13, 51534, 51534, 400, 550, 264, 1150, 1823, 307, 1219, 2489, 15164, 11, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.16645276312734567, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.9033107037103036e-06}, {"id": 69, "seek": 25504, "start": 258.08, "end": 262.03999999999996, "text": " These two steps are first training on a large data set and", "tokens": [50364, 4696, 309, 393, 917, 493, 412, 257, 1238, 665, 2316, 13, 50516, 50516, 1981, 732, 4439, 366, 700, 3097, 322, 257, 2416, 1412, 992, 293, 50714, 50714, 550, 15164, 264, 9834, 3052, 322, 257, 4356, 1412, 992, 13, 50932, 50932, 1037, 538, 264, 1315, 295, 46533, 659, 12, 17227, 1760, 337, 264, 1823, 322, 1192, 13, 51154, 51154, 663, 311, 562, 291, 3847, 264, 18161, 3209, 322, 257, 588, 2416, 1412, 992, 295, 584, 257, 2459, 51370, 51370, 5267, 11, 406, 1596, 257, 4077, 5633, 13, 51534, 51534, 400, 550, 264, 1150, 1823, 307, 1219, 2489, 15164, 11, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.16645276312734567, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.9033107037103036e-06}, {"id": 70, "seek": 25504, "start": 262.03999999999996, "end": 266.4, "text": " then tuning the parameters further on a smaller data set.", "tokens": [50364, 4696, 309, 393, 917, 493, 412, 257, 1238, 665, 2316, 13, 50516, 50516, 1981, 732, 4439, 366, 700, 3097, 322, 257, 2416, 1412, 992, 293, 50714, 50714, 550, 15164, 264, 9834, 3052, 322, 257, 4356, 1412, 992, 13, 50932, 50932, 1037, 538, 264, 1315, 295, 46533, 659, 12, 17227, 1760, 337, 264, 1823, 322, 1192, 13, 51154, 51154, 663, 311, 562, 291, 3847, 264, 18161, 3209, 322, 257, 588, 2416, 1412, 992, 295, 584, 257, 2459, 51370, 51370, 5267, 11, 406, 1596, 257, 4077, 5633, 13, 51534, 51534, 400, 550, 264, 1150, 1823, 307, 1219, 2489, 15164, 11, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.16645276312734567, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.9033107037103036e-06}, {"id": 71, "seek": 25504, "start": 266.4, "end": 270.84, "text": " Go by the name of supervised pre-training for the step on top.", "tokens": [50364, 4696, 309, 393, 917, 493, 412, 257, 1238, 665, 2316, 13, 50516, 50516, 1981, 732, 4439, 366, 700, 3097, 322, 257, 2416, 1412, 992, 293, 50714, 50714, 550, 15164, 264, 9834, 3052, 322, 257, 4356, 1412, 992, 13, 50932, 50932, 1037, 538, 264, 1315, 295, 46533, 659, 12, 17227, 1760, 337, 264, 1823, 322, 1192, 13, 51154, 51154, 663, 311, 562, 291, 3847, 264, 18161, 3209, 322, 257, 588, 2416, 1412, 992, 295, 584, 257, 2459, 51370, 51370, 5267, 11, 406, 1596, 257, 4077, 5633, 13, 51534, 51534, 400, 550, 264, 1150, 1823, 307, 1219, 2489, 15164, 11, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.16645276312734567, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.9033107037103036e-06}, {"id": 72, "seek": 25504, "start": 270.84, "end": 275.15999999999997, "text": " That's when you train the neural network on a very large data set of say a million", "tokens": [50364, 4696, 309, 393, 917, 493, 412, 257, 1238, 665, 2316, 13, 50516, 50516, 1981, 732, 4439, 366, 700, 3097, 322, 257, 2416, 1412, 992, 293, 50714, 50714, 550, 15164, 264, 9834, 3052, 322, 257, 4356, 1412, 992, 13, 50932, 50932, 1037, 538, 264, 1315, 295, 46533, 659, 12, 17227, 1760, 337, 264, 1823, 322, 1192, 13, 51154, 51154, 663, 311, 562, 291, 3847, 264, 18161, 3209, 322, 257, 588, 2416, 1412, 992, 295, 584, 257, 2459, 51370, 51370, 5267, 11, 406, 1596, 257, 4077, 5633, 13, 51534, 51534, 400, 550, 264, 1150, 1823, 307, 1219, 2489, 15164, 11, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.16645276312734567, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.9033107037103036e-06}, {"id": 73, "seek": 25504, "start": 275.15999999999997, "end": 278.44, "text": " images, not quite a related task.", "tokens": [50364, 4696, 309, 393, 917, 493, 412, 257, 1238, 665, 2316, 13, 50516, 50516, 1981, 732, 4439, 366, 700, 3097, 322, 257, 2416, 1412, 992, 293, 50714, 50714, 550, 15164, 264, 9834, 3052, 322, 257, 4356, 1412, 992, 13, 50932, 50932, 1037, 538, 264, 1315, 295, 46533, 659, 12, 17227, 1760, 337, 264, 1823, 322, 1192, 13, 51154, 51154, 663, 311, 562, 291, 3847, 264, 18161, 3209, 322, 257, 588, 2416, 1412, 992, 295, 584, 257, 2459, 51370, 51370, 5267, 11, 406, 1596, 257, 4077, 5633, 13, 51534, 51534, 400, 550, 264, 1150, 1823, 307, 1219, 2489, 15164, 11, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.16645276312734567, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.9033107037103036e-06}, {"id": 74, "seek": 25504, "start": 278.44, "end": 282.24, "text": " And then the second step is called fine tuning,", "tokens": [50364, 4696, 309, 393, 917, 493, 412, 257, 1238, 665, 2316, 13, 50516, 50516, 1981, 732, 4439, 366, 700, 3097, 322, 257, 2416, 1412, 992, 293, 50714, 50714, 550, 15164, 264, 9834, 3052, 322, 257, 4356, 1412, 992, 13, 50932, 50932, 1037, 538, 264, 1315, 295, 46533, 659, 12, 17227, 1760, 337, 264, 1823, 322, 1192, 13, 51154, 51154, 663, 311, 562, 291, 3847, 264, 18161, 3209, 322, 257, 588, 2416, 1412, 992, 295, 584, 257, 2459, 51370, 51370, 5267, 11, 406, 1596, 257, 4077, 5633, 13, 51534, 51534, 400, 550, 264, 1150, 1823, 307, 1219, 2489, 15164, 11, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.16645276312734567, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.9033107037103036e-06}, {"id": 75, "seek": 28224, "start": 282.24, "end": 285.2, "text": " where you take the parameters that you had initialized or", "tokens": [50364, 689, 291, 747, 264, 9834, 300, 291, 632, 5883, 1602, 420, 50512, 50512, 5768, 490, 46533, 659, 12, 17227, 1760, 293, 550, 1190, 16235, 23475, 3052, 281, 50746, 50746, 2489, 10864, 264, 2098, 281, 5722, 264, 2685, 3861, 295, 50956, 50956, 1011, 26859, 14293, 11150, 300, 291, 815, 362, 13, 51088, 51088, 400, 370, 498, 291, 362, 257, 1359, 1412, 992, 11, 754, 10688, 420, 6779, 420, 5383, 420, 51332, 51332, 445, 10688, 295, 5383, 295, 5267, 295, 264, 1011, 26859, 27011, 11, 51500, 51500, 885, 1075, 281, 1466, 490, 341, 2459, 5267, 295, 257, 406, 1596, 4077, 5633, 393, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.14916508014385516, "compression_ratio": 1.7578125, "no_speech_prob": 7.453563739545643e-07}, {"id": 76, "seek": 28224, "start": 285.2, "end": 289.88, "text": " gotten from supervised pre-training and then run gradient descent further to", "tokens": [50364, 689, 291, 747, 264, 9834, 300, 291, 632, 5883, 1602, 420, 50512, 50512, 5768, 490, 46533, 659, 12, 17227, 1760, 293, 550, 1190, 16235, 23475, 3052, 281, 50746, 50746, 2489, 10864, 264, 2098, 281, 5722, 264, 2685, 3861, 295, 50956, 50956, 1011, 26859, 14293, 11150, 300, 291, 815, 362, 13, 51088, 51088, 400, 370, 498, 291, 362, 257, 1359, 1412, 992, 11, 754, 10688, 420, 6779, 420, 5383, 420, 51332, 51332, 445, 10688, 295, 5383, 295, 5267, 295, 264, 1011, 26859, 27011, 11, 51500, 51500, 885, 1075, 281, 1466, 490, 341, 2459, 5267, 295, 257, 406, 1596, 4077, 5633, 393, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.14916508014385516, "compression_ratio": 1.7578125, "no_speech_prob": 7.453563739545643e-07}, {"id": 77, "seek": 28224, "start": 289.88, "end": 294.08, "text": " fine tune the ways to suit the specific application of", "tokens": [50364, 689, 291, 747, 264, 9834, 300, 291, 632, 5883, 1602, 420, 50512, 50512, 5768, 490, 46533, 659, 12, 17227, 1760, 293, 550, 1190, 16235, 23475, 3052, 281, 50746, 50746, 2489, 10864, 264, 2098, 281, 5722, 264, 2685, 3861, 295, 50956, 50956, 1011, 26859, 14293, 11150, 300, 291, 815, 362, 13, 51088, 51088, 400, 370, 498, 291, 362, 257, 1359, 1412, 992, 11, 754, 10688, 420, 6779, 420, 5383, 420, 51332, 51332, 445, 10688, 295, 5383, 295, 5267, 295, 264, 1011, 26859, 27011, 11, 51500, 51500, 885, 1075, 281, 1466, 490, 341, 2459, 5267, 295, 257, 406, 1596, 4077, 5633, 393, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.14916508014385516, "compression_ratio": 1.7578125, "no_speech_prob": 7.453563739545643e-07}, {"id": 78, "seek": 28224, "start": 294.08, "end": 296.72, "text": " handwritten digit recognition that you may have.", "tokens": [50364, 689, 291, 747, 264, 9834, 300, 291, 632, 5883, 1602, 420, 50512, 50512, 5768, 490, 46533, 659, 12, 17227, 1760, 293, 550, 1190, 16235, 23475, 3052, 281, 50746, 50746, 2489, 10864, 264, 2098, 281, 5722, 264, 2685, 3861, 295, 50956, 50956, 1011, 26859, 14293, 11150, 300, 291, 815, 362, 13, 51088, 51088, 400, 370, 498, 291, 362, 257, 1359, 1412, 992, 11, 754, 10688, 420, 6779, 420, 5383, 420, 51332, 51332, 445, 10688, 295, 5383, 295, 5267, 295, 264, 1011, 26859, 27011, 11, 51500, 51500, 885, 1075, 281, 1466, 490, 341, 2459, 5267, 295, 257, 406, 1596, 4077, 5633, 393, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.14916508014385516, "compression_ratio": 1.7578125, "no_speech_prob": 7.453563739545643e-07}, {"id": 79, "seek": 28224, "start": 296.72, "end": 301.6, "text": " And so if you have a small data set, even tens or hundreds or thousands or", "tokens": [50364, 689, 291, 747, 264, 9834, 300, 291, 632, 5883, 1602, 420, 50512, 50512, 5768, 490, 46533, 659, 12, 17227, 1760, 293, 550, 1190, 16235, 23475, 3052, 281, 50746, 50746, 2489, 10864, 264, 2098, 281, 5722, 264, 2685, 3861, 295, 50956, 50956, 1011, 26859, 14293, 11150, 300, 291, 815, 362, 13, 51088, 51088, 400, 370, 498, 291, 362, 257, 1359, 1412, 992, 11, 754, 10688, 420, 6779, 420, 5383, 420, 51332, 51332, 445, 10688, 295, 5383, 295, 5267, 295, 264, 1011, 26859, 27011, 11, 51500, 51500, 885, 1075, 281, 1466, 490, 341, 2459, 5267, 295, 257, 406, 1596, 4077, 5633, 393, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.14916508014385516, "compression_ratio": 1.7578125, "no_speech_prob": 7.453563739545643e-07}, {"id": 80, "seek": 28224, "start": 301.6, "end": 304.96000000000004, "text": " just tens of thousands of images of the handwritten digits,", "tokens": [50364, 689, 291, 747, 264, 9834, 300, 291, 632, 5883, 1602, 420, 50512, 50512, 5768, 490, 46533, 659, 12, 17227, 1760, 293, 550, 1190, 16235, 23475, 3052, 281, 50746, 50746, 2489, 10864, 264, 2098, 281, 5722, 264, 2685, 3861, 295, 50956, 50956, 1011, 26859, 14293, 11150, 300, 291, 815, 362, 13, 51088, 51088, 400, 370, 498, 291, 362, 257, 1359, 1412, 992, 11, 754, 10688, 420, 6779, 420, 5383, 420, 51332, 51332, 445, 10688, 295, 5383, 295, 5267, 295, 264, 1011, 26859, 27011, 11, 51500, 51500, 885, 1075, 281, 1466, 490, 341, 2459, 5267, 295, 257, 406, 1596, 4077, 5633, 393, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.14916508014385516, "compression_ratio": 1.7578125, "no_speech_prob": 7.453563739545643e-07}, {"id": 81, "seek": 28224, "start": 304.96000000000004, "end": 309.52, "text": " being able to learn from this million images of a not quite related task can", "tokens": [50364, 689, 291, 747, 264, 9834, 300, 291, 632, 5883, 1602, 420, 50512, 50512, 5768, 490, 46533, 659, 12, 17227, 1760, 293, 550, 1190, 16235, 23475, 3052, 281, 50746, 50746, 2489, 10864, 264, 2098, 281, 5722, 264, 2685, 3861, 295, 50956, 50956, 1011, 26859, 14293, 11150, 300, 291, 815, 362, 13, 51088, 51088, 400, 370, 498, 291, 362, 257, 1359, 1412, 992, 11, 754, 10688, 420, 6779, 420, 5383, 420, 51332, 51332, 445, 10688, 295, 5383, 295, 5267, 295, 264, 1011, 26859, 27011, 11, 51500, 51500, 885, 1075, 281, 1466, 490, 341, 2459, 5267, 295, 257, 406, 1596, 4077, 5633, 393, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.14916508014385516, "compression_ratio": 1.7578125, "no_speech_prob": 7.453563739545643e-07}, {"id": 82, "seek": 30952, "start": 309.52, "end": 314.03999999999996, "text": " actually help your learning algorithms performance a lot.", "tokens": [50364, 767, 854, 428, 2539, 14642, 3389, 257, 688, 13, 50590, 50590, 1485, 1481, 551, 466, 5003, 2539, 382, 731, 307, 1310, 291, 500, 380, 643, 281, 312, 50868, 50868, 264, 472, 281, 3985, 484, 46533, 659, 12, 17227, 1760, 13, 51032, 51032, 1171, 257, 688, 295, 18161, 9590, 11, 456, 486, 1217, 312, 10309, 300, 362, 1217, 51228, 51228, 8895, 257, 18161, 3209, 322, 257, 2416, 3256, 293, 486, 362, 9437, 257, 8895, 51534, 51534, 18161, 9590, 322, 264, 4705, 11, 16433, 25225, 337, 2878, 281, 5484, 293, 764, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.18909095196013756, "compression_ratio": 1.7405857740585775, "no_speech_prob": 3.6687386000266997e-06}, {"id": 83, "seek": 30952, "start": 314.03999999999996, "end": 319.59999999999997, "text": " One nice thing about transfer learning as well is maybe you don't need to be", "tokens": [50364, 767, 854, 428, 2539, 14642, 3389, 257, 688, 13, 50590, 50590, 1485, 1481, 551, 466, 5003, 2539, 382, 731, 307, 1310, 291, 500, 380, 643, 281, 312, 50868, 50868, 264, 472, 281, 3985, 484, 46533, 659, 12, 17227, 1760, 13, 51032, 51032, 1171, 257, 688, 295, 18161, 9590, 11, 456, 486, 1217, 312, 10309, 300, 362, 1217, 51228, 51228, 8895, 257, 18161, 3209, 322, 257, 2416, 3256, 293, 486, 362, 9437, 257, 8895, 51534, 51534, 18161, 9590, 322, 264, 4705, 11, 16433, 25225, 337, 2878, 281, 5484, 293, 764, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.18909095196013756, "compression_ratio": 1.7405857740585775, "no_speech_prob": 3.6687386000266997e-06}, {"id": 84, "seek": 30952, "start": 319.59999999999997, "end": 322.88, "text": " the one to carry out supervised pre-training.", "tokens": [50364, 767, 854, 428, 2539, 14642, 3389, 257, 688, 13, 50590, 50590, 1485, 1481, 551, 466, 5003, 2539, 382, 731, 307, 1310, 291, 500, 380, 643, 281, 312, 50868, 50868, 264, 472, 281, 3985, 484, 46533, 659, 12, 17227, 1760, 13, 51032, 51032, 1171, 257, 688, 295, 18161, 9590, 11, 456, 486, 1217, 312, 10309, 300, 362, 1217, 51228, 51228, 8895, 257, 18161, 3209, 322, 257, 2416, 3256, 293, 486, 362, 9437, 257, 8895, 51534, 51534, 18161, 9590, 322, 264, 4705, 11, 16433, 25225, 337, 2878, 281, 5484, 293, 764, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.18909095196013756, "compression_ratio": 1.7405857740585775, "no_speech_prob": 3.6687386000266997e-06}, {"id": 85, "seek": 30952, "start": 322.88, "end": 326.79999999999995, "text": " For a lot of neural networks, there will already be researchers that have already", "tokens": [50364, 767, 854, 428, 2539, 14642, 3389, 257, 688, 13, 50590, 50590, 1485, 1481, 551, 466, 5003, 2539, 382, 731, 307, 1310, 291, 500, 380, 643, 281, 312, 50868, 50868, 264, 472, 281, 3985, 484, 46533, 659, 12, 17227, 1760, 13, 51032, 51032, 1171, 257, 688, 295, 18161, 9590, 11, 456, 486, 1217, 312, 10309, 300, 362, 1217, 51228, 51228, 8895, 257, 18161, 3209, 322, 257, 2416, 3256, 293, 486, 362, 9437, 257, 8895, 51534, 51534, 18161, 9590, 322, 264, 4705, 11, 16433, 25225, 337, 2878, 281, 5484, 293, 764, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.18909095196013756, "compression_ratio": 1.7405857740585775, "no_speech_prob": 3.6687386000266997e-06}, {"id": 86, "seek": 30952, "start": 326.79999999999995, "end": 332.91999999999996, "text": " trained a neural network on a large image and will have posted a trained", "tokens": [50364, 767, 854, 428, 2539, 14642, 3389, 257, 688, 13, 50590, 50590, 1485, 1481, 551, 466, 5003, 2539, 382, 731, 307, 1310, 291, 500, 380, 643, 281, 312, 50868, 50868, 264, 472, 281, 3985, 484, 46533, 659, 12, 17227, 1760, 13, 51032, 51032, 1171, 257, 688, 295, 18161, 9590, 11, 456, 486, 1217, 312, 10309, 300, 362, 1217, 51228, 51228, 8895, 257, 18161, 3209, 322, 257, 2416, 3256, 293, 486, 362, 9437, 257, 8895, 51534, 51534, 18161, 9590, 322, 264, 4705, 11, 16433, 25225, 337, 2878, 281, 5484, 293, 764, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.18909095196013756, "compression_ratio": 1.7405857740585775, "no_speech_prob": 3.6687386000266997e-06}, {"id": 87, "seek": 30952, "start": 332.91999999999996, "end": 338.4, "text": " neural networks on the internet, freely licensed for anyone to download and use.", "tokens": [50364, 767, 854, 428, 2539, 14642, 3389, 257, 688, 13, 50590, 50590, 1485, 1481, 551, 466, 5003, 2539, 382, 731, 307, 1310, 291, 500, 380, 643, 281, 312, 50868, 50868, 264, 472, 281, 3985, 484, 46533, 659, 12, 17227, 1760, 13, 51032, 51032, 1171, 257, 688, 295, 18161, 9590, 11, 456, 486, 1217, 312, 10309, 300, 362, 1217, 51228, 51228, 8895, 257, 18161, 3209, 322, 257, 2416, 3256, 293, 486, 362, 9437, 257, 8895, 51534, 51534, 18161, 9590, 322, 264, 4705, 11, 16433, 25225, 337, 2878, 281, 5484, 293, 764, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.18909095196013756, "compression_ratio": 1.7405857740585775, "no_speech_prob": 3.6687386000266997e-06}, {"id": 88, "seek": 33840, "start": 338.4, "end": 342.47999999999996, "text": " And what that means is rather than carrying out the first step yourself,", "tokens": [50364, 400, 437, 300, 1355, 307, 2831, 813, 9792, 484, 264, 700, 1823, 1803, 11, 50568, 50568, 291, 393, 445, 5484, 257, 18161, 3209, 300, 1580, 1646, 815, 362, 4418, 3259, 50752, 50752, 3097, 293, 550, 7406, 264, 6597, 4583, 365, 428, 1065, 6597, 4583, 293, 50994, 50994, 3985, 484, 2139, 3614, 472, 420, 3614, 732, 281, 2489, 10864, 257, 18161, 3209, 300, 51252, 51252, 1580, 1646, 575, 1217, 9094, 484, 46533, 659, 12, 17227, 1760, 322, 293, 445, 360, 257, 51468, 51468, 707, 857, 295, 2489, 15164, 281, 2661, 312, 1075, 281, 483, 281, 18161, 3209, 300, 51650, 51650, 26213, 731, 322, 428, 5633, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.15811253468924708, "compression_ratio": 1.9123505976095618, "no_speech_prob": 2.3687198336119764e-06}, {"id": 89, "seek": 33840, "start": 342.47999999999996, "end": 346.15999999999997, "text": " you can just download a neural network that someone else may have spent weeks", "tokens": [50364, 400, 437, 300, 1355, 307, 2831, 813, 9792, 484, 264, 700, 1823, 1803, 11, 50568, 50568, 291, 393, 445, 5484, 257, 18161, 3209, 300, 1580, 1646, 815, 362, 4418, 3259, 50752, 50752, 3097, 293, 550, 7406, 264, 6597, 4583, 365, 428, 1065, 6597, 4583, 293, 50994, 50994, 3985, 484, 2139, 3614, 472, 420, 3614, 732, 281, 2489, 10864, 257, 18161, 3209, 300, 51252, 51252, 1580, 1646, 575, 1217, 9094, 484, 46533, 659, 12, 17227, 1760, 322, 293, 445, 360, 257, 51468, 51468, 707, 857, 295, 2489, 15164, 281, 2661, 312, 1075, 281, 483, 281, 18161, 3209, 300, 51650, 51650, 26213, 731, 322, 428, 5633, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.15811253468924708, "compression_ratio": 1.9123505976095618, "no_speech_prob": 2.3687198336119764e-06}, {"id": 90, "seek": 33840, "start": 346.15999999999997, "end": 351.0, "text": " training and then replace the upper layer with your own upper layer and", "tokens": [50364, 400, 437, 300, 1355, 307, 2831, 813, 9792, 484, 264, 700, 1823, 1803, 11, 50568, 50568, 291, 393, 445, 5484, 257, 18161, 3209, 300, 1580, 1646, 815, 362, 4418, 3259, 50752, 50752, 3097, 293, 550, 7406, 264, 6597, 4583, 365, 428, 1065, 6597, 4583, 293, 50994, 50994, 3985, 484, 2139, 3614, 472, 420, 3614, 732, 281, 2489, 10864, 257, 18161, 3209, 300, 51252, 51252, 1580, 1646, 575, 1217, 9094, 484, 46533, 659, 12, 17227, 1760, 322, 293, 445, 360, 257, 51468, 51468, 707, 857, 295, 2489, 15164, 281, 2661, 312, 1075, 281, 483, 281, 18161, 3209, 300, 51650, 51650, 26213, 731, 322, 428, 5633, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.15811253468924708, "compression_ratio": 1.9123505976095618, "no_speech_prob": 2.3687198336119764e-06}, {"id": 91, "seek": 33840, "start": 351.0, "end": 356.15999999999997, "text": " carry out either option one or option two to fine tune a neural network that", "tokens": [50364, 400, 437, 300, 1355, 307, 2831, 813, 9792, 484, 264, 700, 1823, 1803, 11, 50568, 50568, 291, 393, 445, 5484, 257, 18161, 3209, 300, 1580, 1646, 815, 362, 4418, 3259, 50752, 50752, 3097, 293, 550, 7406, 264, 6597, 4583, 365, 428, 1065, 6597, 4583, 293, 50994, 50994, 3985, 484, 2139, 3614, 472, 420, 3614, 732, 281, 2489, 10864, 257, 18161, 3209, 300, 51252, 51252, 1580, 1646, 575, 1217, 9094, 484, 46533, 659, 12, 17227, 1760, 322, 293, 445, 360, 257, 51468, 51468, 707, 857, 295, 2489, 15164, 281, 2661, 312, 1075, 281, 483, 281, 18161, 3209, 300, 51650, 51650, 26213, 731, 322, 428, 5633, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.15811253468924708, "compression_ratio": 1.9123505976095618, "no_speech_prob": 2.3687198336119764e-06}, {"id": 92, "seek": 33840, "start": 356.15999999999997, "end": 360.47999999999996, "text": " someone else has already carried out supervised pre-training on and just do a", "tokens": [50364, 400, 437, 300, 1355, 307, 2831, 813, 9792, 484, 264, 700, 1823, 1803, 11, 50568, 50568, 291, 393, 445, 5484, 257, 18161, 3209, 300, 1580, 1646, 815, 362, 4418, 3259, 50752, 50752, 3097, 293, 550, 7406, 264, 6597, 4583, 365, 428, 1065, 6597, 4583, 293, 50994, 50994, 3985, 484, 2139, 3614, 472, 420, 3614, 732, 281, 2489, 10864, 257, 18161, 3209, 300, 51252, 51252, 1580, 1646, 575, 1217, 9094, 484, 46533, 659, 12, 17227, 1760, 322, 293, 445, 360, 257, 51468, 51468, 707, 857, 295, 2489, 15164, 281, 2661, 312, 1075, 281, 483, 281, 18161, 3209, 300, 51650, 51650, 26213, 731, 322, 428, 5633, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.15811253468924708, "compression_ratio": 1.9123505976095618, "no_speech_prob": 2.3687198336119764e-06}, {"id": 93, "seek": 33840, "start": 360.47999999999996, "end": 364.12, "text": " little bit of fine tuning to quickly be able to get to neural network that", "tokens": [50364, 400, 437, 300, 1355, 307, 2831, 813, 9792, 484, 264, 700, 1823, 1803, 11, 50568, 50568, 291, 393, 445, 5484, 257, 18161, 3209, 300, 1580, 1646, 815, 362, 4418, 3259, 50752, 50752, 3097, 293, 550, 7406, 264, 6597, 4583, 365, 428, 1065, 6597, 4583, 293, 50994, 50994, 3985, 484, 2139, 3614, 472, 420, 3614, 732, 281, 2489, 10864, 257, 18161, 3209, 300, 51252, 51252, 1580, 1646, 575, 1217, 9094, 484, 46533, 659, 12, 17227, 1760, 322, 293, 445, 360, 257, 51468, 51468, 707, 857, 295, 2489, 15164, 281, 2661, 312, 1075, 281, 483, 281, 18161, 3209, 300, 51650, 51650, 26213, 731, 322, 428, 5633, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.15811253468924708, "compression_ratio": 1.9123505976095618, "no_speech_prob": 2.3687198336119764e-06}, {"id": 94, "seek": 33840, "start": 364.12, "end": 366.03999999999996, "text": " performs well on your task.", "tokens": [50364, 400, 437, 300, 1355, 307, 2831, 813, 9792, 484, 264, 700, 1823, 1803, 11, 50568, 50568, 291, 393, 445, 5484, 257, 18161, 3209, 300, 1580, 1646, 815, 362, 4418, 3259, 50752, 50752, 3097, 293, 550, 7406, 264, 6597, 4583, 365, 428, 1065, 6597, 4583, 293, 50994, 50994, 3985, 484, 2139, 3614, 472, 420, 3614, 732, 281, 2489, 10864, 257, 18161, 3209, 300, 51252, 51252, 1580, 1646, 575, 1217, 9094, 484, 46533, 659, 12, 17227, 1760, 322, 293, 445, 360, 257, 51468, 51468, 707, 857, 295, 2489, 15164, 281, 2661, 312, 1075, 281, 483, 281, 18161, 3209, 300, 51650, 51650, 26213, 731, 322, 428, 5633, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.15811253468924708, "compression_ratio": 1.9123505976095618, "no_speech_prob": 2.3687198336119764e-06}, {"id": 95, "seek": 36604, "start": 366.04, "end": 370.84000000000003, "text": " Downloading a pre-trained model that someone else has trained and provided for", "tokens": [50364, 32282, 278, 257, 659, 12, 17227, 2001, 2316, 300, 1580, 1646, 575, 8895, 293, 5649, 337, 50604, 50604, 1737, 307, 472, 295, 729, 7512, 689, 538, 2390, 322, 1184, 661, 311, 589, 294, 264, 50836, 50836, 3479, 2539, 1768, 11, 321, 393, 439, 483, 709, 1101, 3542, 538, 264, 30178, 51066, 51066, 295, 661, 10309, 300, 362, 659, 12, 17227, 2001, 293, 9437, 641, 18161, 9590, 2950, 13, 51306, 51306, 583, 983, 775, 5003, 2539, 754, 589, 30, 51456, 51456, 1012, 727, 291, 6264, 747, 9834, 14879, 538, 18538, 11111, 11, 7197, 11, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.11732250882178238, "compression_ratio": 1.6466165413533835, "no_speech_prob": 5.954837888566544e-06}, {"id": 96, "seek": 36604, "start": 370.84000000000003, "end": 375.48, "text": " free is one of those techniques where by building on each other's work in the", "tokens": [50364, 32282, 278, 257, 659, 12, 17227, 2001, 2316, 300, 1580, 1646, 575, 8895, 293, 5649, 337, 50604, 50604, 1737, 307, 472, 295, 729, 7512, 689, 538, 2390, 322, 1184, 661, 311, 589, 294, 264, 50836, 50836, 3479, 2539, 1768, 11, 321, 393, 439, 483, 709, 1101, 3542, 538, 264, 30178, 51066, 51066, 295, 661, 10309, 300, 362, 659, 12, 17227, 2001, 293, 9437, 641, 18161, 9590, 2950, 13, 51306, 51306, 583, 983, 775, 5003, 2539, 754, 589, 30, 51456, 51456, 1012, 727, 291, 6264, 747, 9834, 14879, 538, 18538, 11111, 11, 7197, 11, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.11732250882178238, "compression_ratio": 1.6466165413533835, "no_speech_prob": 5.954837888566544e-06}, {"id": 97, "seek": 36604, "start": 375.48, "end": 380.08000000000004, "text": " machine learning community, we can all get much better results by the generosity", "tokens": [50364, 32282, 278, 257, 659, 12, 17227, 2001, 2316, 300, 1580, 1646, 575, 8895, 293, 5649, 337, 50604, 50604, 1737, 307, 472, 295, 729, 7512, 689, 538, 2390, 322, 1184, 661, 311, 589, 294, 264, 50836, 50836, 3479, 2539, 1768, 11, 321, 393, 439, 483, 709, 1101, 3542, 538, 264, 30178, 51066, 51066, 295, 661, 10309, 300, 362, 659, 12, 17227, 2001, 293, 9437, 641, 18161, 9590, 2950, 13, 51306, 51306, 583, 983, 775, 5003, 2539, 754, 589, 30, 51456, 51456, 1012, 727, 291, 6264, 747, 9834, 14879, 538, 18538, 11111, 11, 7197, 11, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.11732250882178238, "compression_ratio": 1.6466165413533835, "no_speech_prob": 5.954837888566544e-06}, {"id": 98, "seek": 36604, "start": 380.08000000000004, "end": 384.88, "text": " of other researchers that have pre-trained and posted their neural networks online.", "tokens": [50364, 32282, 278, 257, 659, 12, 17227, 2001, 2316, 300, 1580, 1646, 575, 8895, 293, 5649, 337, 50604, 50604, 1737, 307, 472, 295, 729, 7512, 689, 538, 2390, 322, 1184, 661, 311, 589, 294, 264, 50836, 50836, 3479, 2539, 1768, 11, 321, 393, 439, 483, 709, 1101, 3542, 538, 264, 30178, 51066, 51066, 295, 661, 10309, 300, 362, 659, 12, 17227, 2001, 293, 9437, 641, 18161, 9590, 2950, 13, 51306, 51306, 583, 983, 775, 5003, 2539, 754, 589, 30, 51456, 51456, 1012, 727, 291, 6264, 747, 9834, 14879, 538, 18538, 11111, 11, 7197, 11, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.11732250882178238, "compression_ratio": 1.6466165413533835, "no_speech_prob": 5.954837888566544e-06}, {"id": 99, "seek": 36604, "start": 384.88, "end": 387.88, "text": " But why does transfer learning even work?", "tokens": [50364, 32282, 278, 257, 659, 12, 17227, 2001, 2316, 300, 1580, 1646, 575, 8895, 293, 5649, 337, 50604, 50604, 1737, 307, 472, 295, 729, 7512, 689, 538, 2390, 322, 1184, 661, 311, 589, 294, 264, 50836, 50836, 3479, 2539, 1768, 11, 321, 393, 439, 483, 709, 1101, 3542, 538, 264, 30178, 51066, 51066, 295, 661, 10309, 300, 362, 659, 12, 17227, 2001, 293, 9437, 641, 18161, 9590, 2950, 13, 51306, 51306, 583, 983, 775, 5003, 2539, 754, 589, 30, 51456, 51456, 1012, 727, 291, 6264, 747, 9834, 14879, 538, 18538, 11111, 11, 7197, 11, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.11732250882178238, "compression_ratio": 1.6466165413533835, "no_speech_prob": 5.954837888566544e-06}, {"id": 100, "seek": 36604, "start": 387.88, "end": 391.84000000000003, "text": " How could you possibly take parameters obtained by recognizing cats, dogs,", "tokens": [50364, 32282, 278, 257, 659, 12, 17227, 2001, 2316, 300, 1580, 1646, 575, 8895, 293, 5649, 337, 50604, 50604, 1737, 307, 472, 295, 729, 7512, 689, 538, 2390, 322, 1184, 661, 311, 589, 294, 264, 50836, 50836, 3479, 2539, 1768, 11, 321, 393, 439, 483, 709, 1101, 3542, 538, 264, 30178, 51066, 51066, 295, 661, 10309, 300, 362, 659, 12, 17227, 2001, 293, 9437, 641, 18161, 9590, 2950, 13, 51306, 51306, 583, 983, 775, 5003, 2539, 754, 589, 30, 51456, 51456, 1012, 727, 291, 6264, 747, 9834, 14879, 538, 18538, 11111, 11, 7197, 11, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.11732250882178238, "compression_ratio": 1.6466165413533835, "no_speech_prob": 5.954837888566544e-06}, {"id": 101, "seek": 39184, "start": 391.84, "end": 396.79999999999995, "text": " cars, and people and use that to help you recognize something as different as", "tokens": [50364, 5163, 11, 293, 561, 293, 764, 300, 281, 854, 291, 5521, 746, 382, 819, 382, 50612, 50612, 1011, 26859, 27011, 30, 50716, 50716, 1692, 311, 512, 24002, 2261, 309, 13, 50858, 50858, 759, 291, 366, 3097, 257, 18161, 3209, 281, 5531, 11, 584, 11, 819, 6565, 490, 5267, 11, 51230, 51230, 550, 264, 700, 4583, 295, 257, 18161, 3209, 815, 1466, 281, 5531, 8819, 294, 264, 3256, 13, 51538, 51538, 492, 519, 295, 613, 382, 8344, 2295, 12, 12418, 4122, 294, 264, 3256, 11, 51714, 51714, 597, 307, 281, 5531, 8819, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12664108475049338, "compression_ratio": 1.7066666666666668, "no_speech_prob": 7.071467280184152e-06}, {"id": 102, "seek": 39184, "start": 396.79999999999995, "end": 398.88, "text": " handwritten digits?", "tokens": [50364, 5163, 11, 293, 561, 293, 764, 300, 281, 854, 291, 5521, 746, 382, 819, 382, 50612, 50612, 1011, 26859, 27011, 30, 50716, 50716, 1692, 311, 512, 24002, 2261, 309, 13, 50858, 50858, 759, 291, 366, 3097, 257, 18161, 3209, 281, 5531, 11, 584, 11, 819, 6565, 490, 5267, 11, 51230, 51230, 550, 264, 700, 4583, 295, 257, 18161, 3209, 815, 1466, 281, 5531, 8819, 294, 264, 3256, 13, 51538, 51538, 492, 519, 295, 613, 382, 8344, 2295, 12, 12418, 4122, 294, 264, 3256, 11, 51714, 51714, 597, 307, 281, 5531, 8819, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12664108475049338, "compression_ratio": 1.7066666666666668, "no_speech_prob": 7.071467280184152e-06}, {"id": 103, "seek": 39184, "start": 398.88, "end": 401.71999999999997, "text": " Here's some intuition behind it.", "tokens": [50364, 5163, 11, 293, 561, 293, 764, 300, 281, 854, 291, 5521, 746, 382, 819, 382, 50612, 50612, 1011, 26859, 27011, 30, 50716, 50716, 1692, 311, 512, 24002, 2261, 309, 13, 50858, 50858, 759, 291, 366, 3097, 257, 18161, 3209, 281, 5531, 11, 584, 11, 819, 6565, 490, 5267, 11, 51230, 51230, 550, 264, 700, 4583, 295, 257, 18161, 3209, 815, 1466, 281, 5531, 8819, 294, 264, 3256, 13, 51538, 51538, 492, 519, 295, 613, 382, 8344, 2295, 12, 12418, 4122, 294, 264, 3256, 11, 51714, 51714, 597, 307, 281, 5531, 8819, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12664108475049338, "compression_ratio": 1.7066666666666668, "no_speech_prob": 7.071467280184152e-06}, {"id": 104, "seek": 39184, "start": 401.71999999999997, "end": 409.15999999999997, "text": " If you are training a neural network to detect, say, different objects from images,", "tokens": [50364, 5163, 11, 293, 561, 293, 764, 300, 281, 854, 291, 5521, 746, 382, 819, 382, 50612, 50612, 1011, 26859, 27011, 30, 50716, 50716, 1692, 311, 512, 24002, 2261, 309, 13, 50858, 50858, 759, 291, 366, 3097, 257, 18161, 3209, 281, 5531, 11, 584, 11, 819, 6565, 490, 5267, 11, 51230, 51230, 550, 264, 700, 4583, 295, 257, 18161, 3209, 815, 1466, 281, 5531, 8819, 294, 264, 3256, 13, 51538, 51538, 492, 519, 295, 613, 382, 8344, 2295, 12, 12418, 4122, 294, 264, 3256, 11, 51714, 51714, 597, 307, 281, 5531, 8819, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12664108475049338, "compression_ratio": 1.7066666666666668, "no_speech_prob": 7.071467280184152e-06}, {"id": 105, "seek": 39184, "start": 409.15999999999997, "end": 415.32, "text": " then the first layer of a neural network may learn to detect edges in the image.", "tokens": [50364, 5163, 11, 293, 561, 293, 764, 300, 281, 854, 291, 5521, 746, 382, 819, 382, 50612, 50612, 1011, 26859, 27011, 30, 50716, 50716, 1692, 311, 512, 24002, 2261, 309, 13, 50858, 50858, 759, 291, 366, 3097, 257, 18161, 3209, 281, 5531, 11, 584, 11, 819, 6565, 490, 5267, 11, 51230, 51230, 550, 264, 700, 4583, 295, 257, 18161, 3209, 815, 1466, 281, 5531, 8819, 294, 264, 3256, 13, 51538, 51538, 492, 519, 295, 613, 382, 8344, 2295, 12, 12418, 4122, 294, 264, 3256, 11, 51714, 51714, 597, 307, 281, 5531, 8819, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12664108475049338, "compression_ratio": 1.7066666666666668, "no_speech_prob": 7.071467280184152e-06}, {"id": 106, "seek": 39184, "start": 415.32, "end": 418.84, "text": " We think of these as somewhat low-level features in the image,", "tokens": [50364, 5163, 11, 293, 561, 293, 764, 300, 281, 854, 291, 5521, 746, 382, 819, 382, 50612, 50612, 1011, 26859, 27011, 30, 50716, 50716, 1692, 311, 512, 24002, 2261, 309, 13, 50858, 50858, 759, 291, 366, 3097, 257, 18161, 3209, 281, 5531, 11, 584, 11, 819, 6565, 490, 5267, 11, 51230, 51230, 550, 264, 700, 4583, 295, 257, 18161, 3209, 815, 1466, 281, 5531, 8819, 294, 264, 3256, 13, 51538, 51538, 492, 519, 295, 613, 382, 8344, 2295, 12, 12418, 4122, 294, 264, 3256, 11, 51714, 51714, 597, 307, 281, 5531, 8819, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12664108475049338, "compression_ratio": 1.7066666666666668, "no_speech_prob": 7.071467280184152e-06}, {"id": 107, "seek": 39184, "start": 418.84, "end": 420.96, "text": " which is to detect edges.", "tokens": [50364, 5163, 11, 293, 561, 293, 764, 300, 281, 854, 291, 5521, 746, 382, 819, 382, 50612, 50612, 1011, 26859, 27011, 30, 50716, 50716, 1692, 311, 512, 24002, 2261, 309, 13, 50858, 50858, 759, 291, 366, 3097, 257, 18161, 3209, 281, 5531, 11, 584, 11, 819, 6565, 490, 5267, 11, 51230, 51230, 550, 264, 700, 4583, 295, 257, 18161, 3209, 815, 1466, 281, 5531, 8819, 294, 264, 3256, 13, 51538, 51538, 492, 519, 295, 613, 382, 8344, 2295, 12, 12418, 4122, 294, 264, 3256, 11, 51714, 51714, 597, 307, 281, 5531, 8819, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12664108475049338, "compression_ratio": 1.7066666666666668, "no_speech_prob": 7.071467280184152e-06}, {"id": 108, "seek": 42096, "start": 420.96, "end": 424.84, "text": " Each of these squares is a visualization of what a single neuron has learned to", "tokens": [50364, 6947, 295, 613, 19368, 307, 257, 25801, 295, 437, 257, 2167, 34090, 575, 3264, 281, 50558, 50558, 5531, 11, 575, 3264, 281, 1594, 1214, 18668, 281, 915, 8819, 294, 364, 3256, 13, 50852, 50852, 440, 958, 4583, 295, 264, 18161, 3209, 550, 27152, 281, 1594, 1214, 8819, 281, 5531, 51070, 51070, 12413, 13, 51158, 51158, 400, 370, 1184, 295, 613, 307, 257, 25801, 295, 437, 472, 34090, 815, 362, 3264, 281, 51410, 51410, 5531, 293, 575, 3264, 281, 5531, 707, 2199, 10854, 411, 4538, 12, 4092, 10854, 51620, 51620, 411, 341, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.12014285723368327, "compression_ratio": 2.004878048780488, "no_speech_prob": 1.0952667253150139e-05}, {"id": 109, "seek": 42096, "start": 424.84, "end": 430.71999999999997, "text": " detect, has learned to group together pixels to find edges in an image.", "tokens": [50364, 6947, 295, 613, 19368, 307, 257, 25801, 295, 437, 257, 2167, 34090, 575, 3264, 281, 50558, 50558, 5531, 11, 575, 3264, 281, 1594, 1214, 18668, 281, 915, 8819, 294, 364, 3256, 13, 50852, 50852, 440, 958, 4583, 295, 264, 18161, 3209, 550, 27152, 281, 1594, 1214, 8819, 281, 5531, 51070, 51070, 12413, 13, 51158, 51158, 400, 370, 1184, 295, 613, 307, 257, 25801, 295, 437, 472, 34090, 815, 362, 3264, 281, 51410, 51410, 5531, 293, 575, 3264, 281, 5531, 707, 2199, 10854, 411, 4538, 12, 4092, 10854, 51620, 51620, 411, 341, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.12014285723368327, "compression_ratio": 2.004878048780488, "no_speech_prob": 1.0952667253150139e-05}, {"id": 110, "seek": 42096, "start": 430.71999999999997, "end": 435.08, "text": " The next layer of the neural network then learns to group together edges to detect", "tokens": [50364, 6947, 295, 613, 19368, 307, 257, 25801, 295, 437, 257, 2167, 34090, 575, 3264, 281, 50558, 50558, 5531, 11, 575, 3264, 281, 1594, 1214, 18668, 281, 915, 8819, 294, 364, 3256, 13, 50852, 50852, 440, 958, 4583, 295, 264, 18161, 3209, 550, 27152, 281, 1594, 1214, 8819, 281, 5531, 51070, 51070, 12413, 13, 51158, 51158, 400, 370, 1184, 295, 613, 307, 257, 25801, 295, 437, 472, 34090, 815, 362, 3264, 281, 51410, 51410, 5531, 293, 575, 3264, 281, 5531, 707, 2199, 10854, 411, 4538, 12, 4092, 10854, 51620, 51620, 411, 341, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.12014285723368327, "compression_ratio": 2.004878048780488, "no_speech_prob": 1.0952667253150139e-05}, {"id": 111, "seek": 42096, "start": 435.08, "end": 436.84, "text": " corners.", "tokens": [50364, 6947, 295, 613, 19368, 307, 257, 25801, 295, 437, 257, 2167, 34090, 575, 3264, 281, 50558, 50558, 5531, 11, 575, 3264, 281, 1594, 1214, 18668, 281, 915, 8819, 294, 364, 3256, 13, 50852, 50852, 440, 958, 4583, 295, 264, 18161, 3209, 550, 27152, 281, 1594, 1214, 8819, 281, 5531, 51070, 51070, 12413, 13, 51158, 51158, 400, 370, 1184, 295, 613, 307, 257, 25801, 295, 437, 472, 34090, 815, 362, 3264, 281, 51410, 51410, 5531, 293, 575, 3264, 281, 5531, 707, 2199, 10854, 411, 4538, 12, 4092, 10854, 51620, 51620, 411, 341, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.12014285723368327, "compression_ratio": 2.004878048780488, "no_speech_prob": 1.0952667253150139e-05}, {"id": 112, "seek": 42096, "start": 436.84, "end": 441.88, "text": " And so each of these is a visualization of what one neuron may have learned to", "tokens": [50364, 6947, 295, 613, 19368, 307, 257, 25801, 295, 437, 257, 2167, 34090, 575, 3264, 281, 50558, 50558, 5531, 11, 575, 3264, 281, 1594, 1214, 18668, 281, 915, 8819, 294, 364, 3256, 13, 50852, 50852, 440, 958, 4583, 295, 264, 18161, 3209, 550, 27152, 281, 1594, 1214, 8819, 281, 5531, 51070, 51070, 12413, 13, 51158, 51158, 400, 370, 1184, 295, 613, 307, 257, 25801, 295, 437, 472, 34090, 815, 362, 3264, 281, 51410, 51410, 5531, 293, 575, 3264, 281, 5531, 707, 2199, 10854, 411, 4538, 12, 4092, 10854, 51620, 51620, 411, 341, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.12014285723368327, "compression_ratio": 2.004878048780488, "no_speech_prob": 1.0952667253150139e-05}, {"id": 113, "seek": 42096, "start": 441.88, "end": 446.08, "text": " detect and has learned to detect little simple shapes like corner-like shapes", "tokens": [50364, 6947, 295, 613, 19368, 307, 257, 25801, 295, 437, 257, 2167, 34090, 575, 3264, 281, 50558, 50558, 5531, 11, 575, 3264, 281, 1594, 1214, 18668, 281, 915, 8819, 294, 364, 3256, 13, 50852, 50852, 440, 958, 4583, 295, 264, 18161, 3209, 550, 27152, 281, 1594, 1214, 8819, 281, 5531, 51070, 51070, 12413, 13, 51158, 51158, 400, 370, 1184, 295, 613, 307, 257, 25801, 295, 437, 472, 34090, 815, 362, 3264, 281, 51410, 51410, 5531, 293, 575, 3264, 281, 5531, 707, 2199, 10854, 411, 4538, 12, 4092, 10854, 51620, 51620, 411, 341, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.12014285723368327, "compression_ratio": 2.004878048780488, "no_speech_prob": 1.0952667253150139e-05}, {"id": 114, "seek": 42096, "start": 446.08, "end": 447.28, "text": " like this.", "tokens": [50364, 6947, 295, 613, 19368, 307, 257, 25801, 295, 437, 257, 2167, 34090, 575, 3264, 281, 50558, 50558, 5531, 11, 575, 3264, 281, 1594, 1214, 18668, 281, 915, 8819, 294, 364, 3256, 13, 50852, 50852, 440, 958, 4583, 295, 264, 18161, 3209, 550, 27152, 281, 1594, 1214, 8819, 281, 5531, 51070, 51070, 12413, 13, 51158, 51158, 400, 370, 1184, 295, 613, 307, 257, 25801, 295, 437, 472, 34090, 815, 362, 3264, 281, 51410, 51410, 5531, 293, 575, 3264, 281, 5531, 707, 2199, 10854, 411, 4538, 12, 4092, 10854, 51620, 51620, 411, 341, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.12014285723368327, "compression_ratio": 2.004878048780488, "no_speech_prob": 1.0952667253150139e-05}, {"id": 115, "seek": 44728, "start": 447.28, "end": 451.15999999999997, "text": " And the next layer of the neural network may have learned to detect somewhat more", "tokens": [50364, 400, 264, 958, 4583, 295, 264, 18161, 3209, 815, 362, 3264, 281, 5531, 8344, 544, 50558, 50558, 3997, 457, 920, 19577, 10854, 411, 3875, 19490, 420, 1359, 707, 10854, 411, 50814, 50814, 613, 13, 50878, 50878, 400, 300, 311, 983, 538, 2539, 322, 40237, 3195, 295, 819, 5267, 11, 291, 434, 51166, 51166, 4571, 264, 18161, 3209, 281, 5531, 8819, 11, 12413, 11, 293, 3875, 10854, 13, 51372, 51372, 400, 300, 311, 983, 538, 3097, 257, 18161, 3209, 281, 5531, 721, 382, 9521, 382, 51564, 51564, 11111, 293, 7197, 293, 5163, 293, 561, 11, 291, 366, 4315, 309, 281, 1466, 281, 5531, 613, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10483682935482988, "compression_ratio": 1.933609958506224, "no_speech_prob": 2.2958938643569127e-06}, {"id": 116, "seek": 44728, "start": 451.15999999999997, "end": 456.28, "text": " complex but still generic shapes like basic curves or small little shapes like", "tokens": [50364, 400, 264, 958, 4583, 295, 264, 18161, 3209, 815, 362, 3264, 281, 5531, 8344, 544, 50558, 50558, 3997, 457, 920, 19577, 10854, 411, 3875, 19490, 420, 1359, 707, 10854, 411, 50814, 50814, 613, 13, 50878, 50878, 400, 300, 311, 983, 538, 2539, 322, 40237, 3195, 295, 819, 5267, 11, 291, 434, 51166, 51166, 4571, 264, 18161, 3209, 281, 5531, 8819, 11, 12413, 11, 293, 3875, 10854, 13, 51372, 51372, 400, 300, 311, 983, 538, 3097, 257, 18161, 3209, 281, 5531, 721, 382, 9521, 382, 51564, 51564, 11111, 293, 7197, 293, 5163, 293, 561, 11, 291, 366, 4315, 309, 281, 1466, 281, 5531, 613, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10483682935482988, "compression_ratio": 1.933609958506224, "no_speech_prob": 2.2958938643569127e-06}, {"id": 117, "seek": 44728, "start": 456.28, "end": 457.55999999999995, "text": " these.", "tokens": [50364, 400, 264, 958, 4583, 295, 264, 18161, 3209, 815, 362, 3264, 281, 5531, 8344, 544, 50558, 50558, 3997, 457, 920, 19577, 10854, 411, 3875, 19490, 420, 1359, 707, 10854, 411, 50814, 50814, 613, 13, 50878, 50878, 400, 300, 311, 983, 538, 2539, 322, 40237, 3195, 295, 819, 5267, 11, 291, 434, 51166, 51166, 4571, 264, 18161, 3209, 281, 5531, 8819, 11, 12413, 11, 293, 3875, 10854, 13, 51372, 51372, 400, 300, 311, 983, 538, 3097, 257, 18161, 3209, 281, 5531, 721, 382, 9521, 382, 51564, 51564, 11111, 293, 7197, 293, 5163, 293, 561, 11, 291, 366, 4315, 309, 281, 1466, 281, 5531, 613, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10483682935482988, "compression_ratio": 1.933609958506224, "no_speech_prob": 2.2958938643569127e-06}, {"id": 118, "seek": 44728, "start": 457.55999999999995, "end": 463.32, "text": " And that's why by learning on detecting lots of different images, you're", "tokens": [50364, 400, 264, 958, 4583, 295, 264, 18161, 3209, 815, 362, 3264, 281, 5531, 8344, 544, 50558, 50558, 3997, 457, 920, 19577, 10854, 411, 3875, 19490, 420, 1359, 707, 10854, 411, 50814, 50814, 613, 13, 50878, 50878, 400, 300, 311, 983, 538, 2539, 322, 40237, 3195, 295, 819, 5267, 11, 291, 434, 51166, 51166, 4571, 264, 18161, 3209, 281, 5531, 8819, 11, 12413, 11, 293, 3875, 10854, 13, 51372, 51372, 400, 300, 311, 983, 538, 3097, 257, 18161, 3209, 281, 5531, 721, 382, 9521, 382, 51564, 51564, 11111, 293, 7197, 293, 5163, 293, 561, 11, 291, 366, 4315, 309, 281, 1466, 281, 5531, 613, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10483682935482988, "compression_ratio": 1.933609958506224, "no_speech_prob": 2.2958938643569127e-06}, {"id": 119, "seek": 44728, "start": 463.32, "end": 467.44, "text": " teaching the neural network to detect edges, corners, and basic shapes.", "tokens": [50364, 400, 264, 958, 4583, 295, 264, 18161, 3209, 815, 362, 3264, 281, 5531, 8344, 544, 50558, 50558, 3997, 457, 920, 19577, 10854, 411, 3875, 19490, 420, 1359, 707, 10854, 411, 50814, 50814, 613, 13, 50878, 50878, 400, 300, 311, 983, 538, 2539, 322, 40237, 3195, 295, 819, 5267, 11, 291, 434, 51166, 51166, 4571, 264, 18161, 3209, 281, 5531, 8819, 11, 12413, 11, 293, 3875, 10854, 13, 51372, 51372, 400, 300, 311, 983, 538, 3097, 257, 18161, 3209, 281, 5531, 721, 382, 9521, 382, 51564, 51564, 11111, 293, 7197, 293, 5163, 293, 561, 11, 291, 366, 4315, 309, 281, 1466, 281, 5531, 613, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10483682935482988, "compression_ratio": 1.933609958506224, "no_speech_prob": 2.2958938643569127e-06}, {"id": 120, "seek": 44728, "start": 467.44, "end": 471.28, "text": " And that's why by training a neural network to detect things as diverse as", "tokens": [50364, 400, 264, 958, 4583, 295, 264, 18161, 3209, 815, 362, 3264, 281, 5531, 8344, 544, 50558, 50558, 3997, 457, 920, 19577, 10854, 411, 3875, 19490, 420, 1359, 707, 10854, 411, 50814, 50814, 613, 13, 50878, 50878, 400, 300, 311, 983, 538, 2539, 322, 40237, 3195, 295, 819, 5267, 11, 291, 434, 51166, 51166, 4571, 264, 18161, 3209, 281, 5531, 8819, 11, 12413, 11, 293, 3875, 10854, 13, 51372, 51372, 400, 300, 311, 983, 538, 3097, 257, 18161, 3209, 281, 5531, 721, 382, 9521, 382, 51564, 51564, 11111, 293, 7197, 293, 5163, 293, 561, 11, 291, 366, 4315, 309, 281, 1466, 281, 5531, 613, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10483682935482988, "compression_ratio": 1.933609958506224, "no_speech_prob": 2.2958938643569127e-06}, {"id": 121, "seek": 44728, "start": 471.28, "end": 475.88, "text": " cats and dogs and cars and people, you are helping it to learn to detect these", "tokens": [50364, 400, 264, 958, 4583, 295, 264, 18161, 3209, 815, 362, 3264, 281, 5531, 8344, 544, 50558, 50558, 3997, 457, 920, 19577, 10854, 411, 3875, 19490, 420, 1359, 707, 10854, 411, 50814, 50814, 613, 13, 50878, 50878, 400, 300, 311, 983, 538, 2539, 322, 40237, 3195, 295, 819, 5267, 11, 291, 434, 51166, 51166, 4571, 264, 18161, 3209, 281, 5531, 8819, 11, 12413, 11, 293, 3875, 10854, 13, 51372, 51372, 400, 300, 311, 983, 538, 3097, 257, 18161, 3209, 281, 5531, 721, 382, 9521, 382, 51564, 51564, 11111, 293, 7197, 293, 5163, 293, 561, 11, 291, 366, 4315, 309, 281, 1466, 281, 5531, 613, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10483682935482988, "compression_ratio": 1.933609958506224, "no_speech_prob": 2.2958938643569127e-06}, {"id": 122, "seek": 47588, "start": 475.88, "end": 479.76, "text": " pretty generic features of images.", "tokens": [50364, 1238, 19577, 4122, 295, 5267, 13, 50558, 50558, 400, 5006, 8819, 11, 12413, 11, 19490, 11, 3875, 10854, 11, 341, 307, 4420, 337, 867, 661, 50868, 50868, 3820, 5201, 9608, 1270, 382, 18538, 1011, 26859, 27011, 13, 51114, 51114, 1485, 29529, 295, 659, 12, 17227, 1760, 1673, 307, 300, 264, 3256, 2010, 1783, 575, 281, 312, 264, 51388, 51388, 912, 337, 264, 659, 12, 17227, 1760, 293, 264, 2489, 12, 83, 37726, 4439, 13, 51556, 51556, 407, 498, 264, 2572, 5633, 291, 528, 281, 5039, 307, 257, 3820, 5201, 5633, 11, 550, 264, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.08893435763329574, "compression_ratio": 1.668122270742358, "no_speech_prob": 3.966883923567366e-06}, {"id": 123, "seek": 47588, "start": 479.76, "end": 485.96, "text": " And finding edges, corners, curves, basic shapes, this is useful for many other", "tokens": [50364, 1238, 19577, 4122, 295, 5267, 13, 50558, 50558, 400, 5006, 8819, 11, 12413, 11, 19490, 11, 3875, 10854, 11, 341, 307, 4420, 337, 867, 661, 50868, 50868, 3820, 5201, 9608, 1270, 382, 18538, 1011, 26859, 27011, 13, 51114, 51114, 1485, 29529, 295, 659, 12, 17227, 1760, 1673, 307, 300, 264, 3256, 2010, 1783, 575, 281, 312, 264, 51388, 51388, 912, 337, 264, 659, 12, 17227, 1760, 293, 264, 2489, 12, 83, 37726, 4439, 13, 51556, 51556, 407, 498, 264, 2572, 5633, 291, 528, 281, 5039, 307, 257, 3820, 5201, 5633, 11, 550, 264, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.08893435763329574, "compression_ratio": 1.668122270742358, "no_speech_prob": 3.966883923567366e-06}, {"id": 124, "seek": 47588, "start": 485.96, "end": 490.88, "text": " computer vision tasks such as recognizing handwritten digits.", "tokens": [50364, 1238, 19577, 4122, 295, 5267, 13, 50558, 50558, 400, 5006, 8819, 11, 12413, 11, 19490, 11, 3875, 10854, 11, 341, 307, 4420, 337, 867, 661, 50868, 50868, 3820, 5201, 9608, 1270, 382, 18538, 1011, 26859, 27011, 13, 51114, 51114, 1485, 29529, 295, 659, 12, 17227, 1760, 1673, 307, 300, 264, 3256, 2010, 1783, 575, 281, 312, 264, 51388, 51388, 912, 337, 264, 659, 12, 17227, 1760, 293, 264, 2489, 12, 83, 37726, 4439, 13, 51556, 51556, 407, 498, 264, 2572, 5633, 291, 528, 281, 5039, 307, 257, 3820, 5201, 5633, 11, 550, 264, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.08893435763329574, "compression_ratio": 1.668122270742358, "no_speech_prob": 3.966883923567366e-06}, {"id": 125, "seek": 47588, "start": 490.88, "end": 496.36, "text": " One restriction of pre-training though is that the image type X has to be the", "tokens": [50364, 1238, 19577, 4122, 295, 5267, 13, 50558, 50558, 400, 5006, 8819, 11, 12413, 11, 19490, 11, 3875, 10854, 11, 341, 307, 4420, 337, 867, 661, 50868, 50868, 3820, 5201, 9608, 1270, 382, 18538, 1011, 26859, 27011, 13, 51114, 51114, 1485, 29529, 295, 659, 12, 17227, 1760, 1673, 307, 300, 264, 3256, 2010, 1783, 575, 281, 312, 264, 51388, 51388, 912, 337, 264, 659, 12, 17227, 1760, 293, 264, 2489, 12, 83, 37726, 4439, 13, 51556, 51556, 407, 498, 264, 2572, 5633, 291, 528, 281, 5039, 307, 257, 3820, 5201, 5633, 11, 550, 264, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.08893435763329574, "compression_ratio": 1.668122270742358, "no_speech_prob": 3.966883923567366e-06}, {"id": 126, "seek": 47588, "start": 496.36, "end": 499.71999999999997, "text": " same for the pre-training and the fine-tuning steps.", "tokens": [50364, 1238, 19577, 4122, 295, 5267, 13, 50558, 50558, 400, 5006, 8819, 11, 12413, 11, 19490, 11, 3875, 10854, 11, 341, 307, 4420, 337, 867, 661, 50868, 50868, 3820, 5201, 9608, 1270, 382, 18538, 1011, 26859, 27011, 13, 51114, 51114, 1485, 29529, 295, 659, 12, 17227, 1760, 1673, 307, 300, 264, 3256, 2010, 1783, 575, 281, 312, 264, 51388, 51388, 912, 337, 264, 659, 12, 17227, 1760, 293, 264, 2489, 12, 83, 37726, 4439, 13, 51556, 51556, 407, 498, 264, 2572, 5633, 291, 528, 281, 5039, 307, 257, 3820, 5201, 5633, 11, 550, 264, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.08893435763329574, "compression_ratio": 1.668122270742358, "no_speech_prob": 3.966883923567366e-06}, {"id": 127, "seek": 47588, "start": 499.71999999999997, "end": 504.71999999999997, "text": " So if the final task you want to solve is a computer vision task, then the", "tokens": [50364, 1238, 19577, 4122, 295, 5267, 13, 50558, 50558, 400, 5006, 8819, 11, 12413, 11, 19490, 11, 3875, 10854, 11, 341, 307, 4420, 337, 867, 661, 50868, 50868, 3820, 5201, 9608, 1270, 382, 18538, 1011, 26859, 27011, 13, 51114, 51114, 1485, 29529, 295, 659, 12, 17227, 1760, 1673, 307, 300, 264, 3256, 2010, 1783, 575, 281, 312, 264, 51388, 51388, 912, 337, 264, 659, 12, 17227, 1760, 293, 264, 2489, 12, 83, 37726, 4439, 13, 51556, 51556, 407, 498, 264, 2572, 5633, 291, 528, 281, 5039, 307, 257, 3820, 5201, 5633, 11, 550, 264, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.08893435763329574, "compression_ratio": 1.668122270742358, "no_speech_prob": 3.966883923567366e-06}, {"id": 128, "seek": 50472, "start": 504.72, "end": 508.84000000000003, "text": " pre-training step also has to be a neural network trained on the same type of", "tokens": [50364, 659, 12, 17227, 1760, 1823, 611, 575, 281, 312, 257, 18161, 3209, 8895, 322, 264, 912, 2010, 295, 50570, 50570, 4846, 11, 20926, 364, 3256, 295, 264, 14721, 12819, 13, 50784, 50784, 33247, 736, 11, 498, 428, 3387, 307, 281, 1322, 257, 6218, 11150, 1185, 281, 1399, 51028, 51028, 6278, 11, 550, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 5267, 1391, 1582, 380, 360, 709, 665, 322, 51268, 51268, 6278, 13, 51318, 51318, 7156, 11, 291, 528, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 6278, 1412, 300, 291, 550, 51504, 51504, 2489, 12, 83, 2613, 322, 428, 1065, 6278, 1412, 992, 13, 51622, 51622, 400, 264, 912, 337, 661, 3467, 295, 5821, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.11800394939775226, "compression_ratio": 1.8333333333333333, "no_speech_prob": 5.285432962409686e-07}, {"id": 129, "seek": 50472, "start": 508.84000000000003, "end": 513.12, "text": " input, namely an image of the desired dimensions.", "tokens": [50364, 659, 12, 17227, 1760, 1823, 611, 575, 281, 312, 257, 18161, 3209, 8895, 322, 264, 912, 2010, 295, 50570, 50570, 4846, 11, 20926, 364, 3256, 295, 264, 14721, 12819, 13, 50784, 50784, 33247, 736, 11, 498, 428, 3387, 307, 281, 1322, 257, 6218, 11150, 1185, 281, 1399, 51028, 51028, 6278, 11, 550, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 5267, 1391, 1582, 380, 360, 709, 665, 322, 51268, 51268, 6278, 13, 51318, 51318, 7156, 11, 291, 528, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 6278, 1412, 300, 291, 550, 51504, 51504, 2489, 12, 83, 2613, 322, 428, 1065, 6278, 1412, 992, 13, 51622, 51622, 400, 264, 912, 337, 661, 3467, 295, 5821, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.11800394939775226, "compression_ratio": 1.8333333333333333, "no_speech_prob": 5.285432962409686e-07}, {"id": 130, "seek": 50472, "start": 513.12, "end": 518.0, "text": " Conversely, if your goal is to build a speech recognition system to process", "tokens": [50364, 659, 12, 17227, 1760, 1823, 611, 575, 281, 312, 257, 18161, 3209, 8895, 322, 264, 912, 2010, 295, 50570, 50570, 4846, 11, 20926, 364, 3256, 295, 264, 14721, 12819, 13, 50784, 50784, 33247, 736, 11, 498, 428, 3387, 307, 281, 1322, 257, 6218, 11150, 1185, 281, 1399, 51028, 51028, 6278, 11, 550, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 5267, 1391, 1582, 380, 360, 709, 665, 322, 51268, 51268, 6278, 13, 51318, 51318, 7156, 11, 291, 528, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 6278, 1412, 300, 291, 550, 51504, 51504, 2489, 12, 83, 2613, 322, 428, 1065, 6278, 1412, 992, 13, 51622, 51622, 400, 264, 912, 337, 661, 3467, 295, 5821, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.11800394939775226, "compression_ratio": 1.8333333333333333, "no_speech_prob": 5.285432962409686e-07}, {"id": 131, "seek": 50472, "start": 518.0, "end": 522.8000000000001, "text": " audio, then a neural network pre-trained on images probably won't do much good on", "tokens": [50364, 659, 12, 17227, 1760, 1823, 611, 575, 281, 312, 257, 18161, 3209, 8895, 322, 264, 912, 2010, 295, 50570, 50570, 4846, 11, 20926, 364, 3256, 295, 264, 14721, 12819, 13, 50784, 50784, 33247, 736, 11, 498, 428, 3387, 307, 281, 1322, 257, 6218, 11150, 1185, 281, 1399, 51028, 51028, 6278, 11, 550, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 5267, 1391, 1582, 380, 360, 709, 665, 322, 51268, 51268, 6278, 13, 51318, 51318, 7156, 11, 291, 528, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 6278, 1412, 300, 291, 550, 51504, 51504, 2489, 12, 83, 2613, 322, 428, 1065, 6278, 1412, 992, 13, 51622, 51622, 400, 264, 912, 337, 661, 3467, 295, 5821, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.11800394939775226, "compression_ratio": 1.8333333333333333, "no_speech_prob": 5.285432962409686e-07}, {"id": 132, "seek": 50472, "start": 522.8000000000001, "end": 523.8000000000001, "text": " audio.", "tokens": [50364, 659, 12, 17227, 1760, 1823, 611, 575, 281, 312, 257, 18161, 3209, 8895, 322, 264, 912, 2010, 295, 50570, 50570, 4846, 11, 20926, 364, 3256, 295, 264, 14721, 12819, 13, 50784, 50784, 33247, 736, 11, 498, 428, 3387, 307, 281, 1322, 257, 6218, 11150, 1185, 281, 1399, 51028, 51028, 6278, 11, 550, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 5267, 1391, 1582, 380, 360, 709, 665, 322, 51268, 51268, 6278, 13, 51318, 51318, 7156, 11, 291, 528, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 6278, 1412, 300, 291, 550, 51504, 51504, 2489, 12, 83, 2613, 322, 428, 1065, 6278, 1412, 992, 13, 51622, 51622, 400, 264, 912, 337, 661, 3467, 295, 5821, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.11800394939775226, "compression_ratio": 1.8333333333333333, "no_speech_prob": 5.285432962409686e-07}, {"id": 133, "seek": 50472, "start": 523.8000000000001, "end": 527.52, "text": " Instead, you want a neural network pre-trained on audio data that you then", "tokens": [50364, 659, 12, 17227, 1760, 1823, 611, 575, 281, 312, 257, 18161, 3209, 8895, 322, 264, 912, 2010, 295, 50570, 50570, 4846, 11, 20926, 364, 3256, 295, 264, 14721, 12819, 13, 50784, 50784, 33247, 736, 11, 498, 428, 3387, 307, 281, 1322, 257, 6218, 11150, 1185, 281, 1399, 51028, 51028, 6278, 11, 550, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 5267, 1391, 1582, 380, 360, 709, 665, 322, 51268, 51268, 6278, 13, 51318, 51318, 7156, 11, 291, 528, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 6278, 1412, 300, 291, 550, 51504, 51504, 2489, 12, 83, 2613, 322, 428, 1065, 6278, 1412, 992, 13, 51622, 51622, 400, 264, 912, 337, 661, 3467, 295, 5821, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.11800394939775226, "compression_ratio": 1.8333333333333333, "no_speech_prob": 5.285432962409686e-07}, {"id": 134, "seek": 50472, "start": 527.52, "end": 529.88, "text": " fine-tune on your own audio data set.", "tokens": [50364, 659, 12, 17227, 1760, 1823, 611, 575, 281, 312, 257, 18161, 3209, 8895, 322, 264, 912, 2010, 295, 50570, 50570, 4846, 11, 20926, 364, 3256, 295, 264, 14721, 12819, 13, 50784, 50784, 33247, 736, 11, 498, 428, 3387, 307, 281, 1322, 257, 6218, 11150, 1185, 281, 1399, 51028, 51028, 6278, 11, 550, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 5267, 1391, 1582, 380, 360, 709, 665, 322, 51268, 51268, 6278, 13, 51318, 51318, 7156, 11, 291, 528, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 6278, 1412, 300, 291, 550, 51504, 51504, 2489, 12, 83, 2613, 322, 428, 1065, 6278, 1412, 992, 13, 51622, 51622, 400, 264, 912, 337, 661, 3467, 295, 5821, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.11800394939775226, "compression_ratio": 1.8333333333333333, "no_speech_prob": 5.285432962409686e-07}, {"id": 135, "seek": 50472, "start": 529.88, "end": 532.08, "text": " And the same for other types of applications.", "tokens": [50364, 659, 12, 17227, 1760, 1823, 611, 575, 281, 312, 257, 18161, 3209, 8895, 322, 264, 912, 2010, 295, 50570, 50570, 4846, 11, 20926, 364, 3256, 295, 264, 14721, 12819, 13, 50784, 50784, 33247, 736, 11, 498, 428, 3387, 307, 281, 1322, 257, 6218, 11150, 1185, 281, 1399, 51028, 51028, 6278, 11, 550, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 5267, 1391, 1582, 380, 360, 709, 665, 322, 51268, 51268, 6278, 13, 51318, 51318, 7156, 11, 291, 528, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 6278, 1412, 300, 291, 550, 51504, 51504, 2489, 12, 83, 2613, 322, 428, 1065, 6278, 1412, 992, 13, 51622, 51622, 400, 264, 912, 337, 661, 3467, 295, 5821, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.11800394939775226, "compression_ratio": 1.8333333333333333, "no_speech_prob": 5.285432962409686e-07}, {"id": 136, "seek": 53208, "start": 532.08, "end": 537.1600000000001, "text": " You can pre-train a neural network on text data, and if your application has the", "tokens": [50364, 509, 393, 659, 12, 83, 7146, 257, 18161, 3209, 322, 2487, 1412, 11, 293, 498, 428, 3861, 575, 264, 50618, 50618, 912, 4111, 4846, 1783, 295, 2487, 1412, 11, 550, 291, 393, 2489, 12, 83, 2613, 300, 18161, 3209, 322, 50868, 50868, 428, 1065, 1412, 13, 50938, 50938, 1407, 20858, 11, 613, 366, 264, 732, 4439, 337, 5003, 2539, 13, 51128, 51128, 5470, 472, 307, 5484, 257, 18161, 3209, 365, 9834, 300, 362, 668, 659, 12, 17227, 2001, 51422, 51422, 322, 257, 2416, 1412, 992, 365, 264, 912, 4846, 2010, 382, 428, 3861, 13, 51634, 51634, 400, 300, 4846, 2010, 727, 312, 5267, 11, 6278, 11, 2487, 11, 420, 746, 1646, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12092603486159752, "compression_ratio": 1.834008097165992, "no_speech_prob": 1.4593425703424145e-06}, {"id": 137, "seek": 53208, "start": 537.1600000000001, "end": 542.1600000000001, "text": " same feature input X of text data, then you can fine-tune that neural network on", "tokens": [50364, 509, 393, 659, 12, 83, 7146, 257, 18161, 3209, 322, 2487, 1412, 11, 293, 498, 428, 3861, 575, 264, 50618, 50618, 912, 4111, 4846, 1783, 295, 2487, 1412, 11, 550, 291, 393, 2489, 12, 83, 2613, 300, 18161, 3209, 322, 50868, 50868, 428, 1065, 1412, 13, 50938, 50938, 1407, 20858, 11, 613, 366, 264, 732, 4439, 337, 5003, 2539, 13, 51128, 51128, 5470, 472, 307, 5484, 257, 18161, 3209, 365, 9834, 300, 362, 668, 659, 12, 17227, 2001, 51422, 51422, 322, 257, 2416, 1412, 992, 365, 264, 912, 4846, 2010, 382, 428, 3861, 13, 51634, 51634, 400, 300, 4846, 2010, 727, 312, 5267, 11, 6278, 11, 2487, 11, 420, 746, 1646, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12092603486159752, "compression_ratio": 1.834008097165992, "no_speech_prob": 1.4593425703424145e-06}, {"id": 138, "seek": 53208, "start": 542.1600000000001, "end": 543.5600000000001, "text": " your own data.", "tokens": [50364, 509, 393, 659, 12, 83, 7146, 257, 18161, 3209, 322, 2487, 1412, 11, 293, 498, 428, 3861, 575, 264, 50618, 50618, 912, 4111, 4846, 1783, 295, 2487, 1412, 11, 550, 291, 393, 2489, 12, 83, 2613, 300, 18161, 3209, 322, 50868, 50868, 428, 1065, 1412, 13, 50938, 50938, 1407, 20858, 11, 613, 366, 264, 732, 4439, 337, 5003, 2539, 13, 51128, 51128, 5470, 472, 307, 5484, 257, 18161, 3209, 365, 9834, 300, 362, 668, 659, 12, 17227, 2001, 51422, 51422, 322, 257, 2416, 1412, 992, 365, 264, 912, 4846, 2010, 382, 428, 3861, 13, 51634, 51634, 400, 300, 4846, 2010, 727, 312, 5267, 11, 6278, 11, 2487, 11, 420, 746, 1646, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12092603486159752, "compression_ratio": 1.834008097165992, "no_speech_prob": 1.4593425703424145e-06}, {"id": 139, "seek": 53208, "start": 543.5600000000001, "end": 547.36, "text": " To summarize, these are the two steps for transfer learning.", "tokens": [50364, 509, 393, 659, 12, 83, 7146, 257, 18161, 3209, 322, 2487, 1412, 11, 293, 498, 428, 3861, 575, 264, 50618, 50618, 912, 4111, 4846, 1783, 295, 2487, 1412, 11, 550, 291, 393, 2489, 12, 83, 2613, 300, 18161, 3209, 322, 50868, 50868, 428, 1065, 1412, 13, 50938, 50938, 1407, 20858, 11, 613, 366, 264, 732, 4439, 337, 5003, 2539, 13, 51128, 51128, 5470, 472, 307, 5484, 257, 18161, 3209, 365, 9834, 300, 362, 668, 659, 12, 17227, 2001, 51422, 51422, 322, 257, 2416, 1412, 992, 365, 264, 912, 4846, 2010, 382, 428, 3861, 13, 51634, 51634, 400, 300, 4846, 2010, 727, 312, 5267, 11, 6278, 11, 2487, 11, 420, 746, 1646, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12092603486159752, "compression_ratio": 1.834008097165992, "no_speech_prob": 1.4593425703424145e-06}, {"id": 140, "seek": 53208, "start": 547.36, "end": 553.24, "text": " Step one is download a neural network with parameters that have been pre-trained", "tokens": [50364, 509, 393, 659, 12, 83, 7146, 257, 18161, 3209, 322, 2487, 1412, 11, 293, 498, 428, 3861, 575, 264, 50618, 50618, 912, 4111, 4846, 1783, 295, 2487, 1412, 11, 550, 291, 393, 2489, 12, 83, 2613, 300, 18161, 3209, 322, 50868, 50868, 428, 1065, 1412, 13, 50938, 50938, 1407, 20858, 11, 613, 366, 264, 732, 4439, 337, 5003, 2539, 13, 51128, 51128, 5470, 472, 307, 5484, 257, 18161, 3209, 365, 9834, 300, 362, 668, 659, 12, 17227, 2001, 51422, 51422, 322, 257, 2416, 1412, 992, 365, 264, 912, 4846, 2010, 382, 428, 3861, 13, 51634, 51634, 400, 300, 4846, 2010, 727, 312, 5267, 11, 6278, 11, 2487, 11, 420, 746, 1646, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12092603486159752, "compression_ratio": 1.834008097165992, "no_speech_prob": 1.4593425703424145e-06}, {"id": 141, "seek": 53208, "start": 553.24, "end": 557.48, "text": " on a large data set with the same input type as your application.", "tokens": [50364, 509, 393, 659, 12, 83, 7146, 257, 18161, 3209, 322, 2487, 1412, 11, 293, 498, 428, 3861, 575, 264, 50618, 50618, 912, 4111, 4846, 1783, 295, 2487, 1412, 11, 550, 291, 393, 2489, 12, 83, 2613, 300, 18161, 3209, 322, 50868, 50868, 428, 1065, 1412, 13, 50938, 50938, 1407, 20858, 11, 613, 366, 264, 732, 4439, 337, 5003, 2539, 13, 51128, 51128, 5470, 472, 307, 5484, 257, 18161, 3209, 365, 9834, 300, 362, 668, 659, 12, 17227, 2001, 51422, 51422, 322, 257, 2416, 1412, 992, 365, 264, 912, 4846, 2010, 382, 428, 3861, 13, 51634, 51634, 400, 300, 4846, 2010, 727, 312, 5267, 11, 6278, 11, 2487, 11, 420, 746, 1646, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12092603486159752, "compression_ratio": 1.834008097165992, "no_speech_prob": 1.4593425703424145e-06}, {"id": 142, "seek": 53208, "start": 557.48, "end": 561.2800000000001, "text": " And that input type could be images, audio, text, or something else.", "tokens": [50364, 509, 393, 659, 12, 83, 7146, 257, 18161, 3209, 322, 2487, 1412, 11, 293, 498, 428, 3861, 575, 264, 50618, 50618, 912, 4111, 4846, 1783, 295, 2487, 1412, 11, 550, 291, 393, 2489, 12, 83, 2613, 300, 18161, 3209, 322, 50868, 50868, 428, 1065, 1412, 13, 50938, 50938, 1407, 20858, 11, 613, 366, 264, 732, 4439, 337, 5003, 2539, 13, 51128, 51128, 5470, 472, 307, 5484, 257, 18161, 3209, 365, 9834, 300, 362, 668, 659, 12, 17227, 2001, 51422, 51422, 322, 257, 2416, 1412, 992, 365, 264, 912, 4846, 2010, 382, 428, 3861, 13, 51634, 51634, 400, 300, 4846, 2010, 727, 312, 5267, 11, 6278, 11, 2487, 11, 420, 746, 1646, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12092603486159752, "compression_ratio": 1.834008097165992, "no_speech_prob": 1.4593425703424145e-06}, {"id": 143, "seek": 56128, "start": 561.28, "end": 565.4399999999999, "text": " Or if you don't want to download a neural network, maybe you can train your own.", "tokens": [50364, 1610, 498, 291, 500, 380, 528, 281, 5484, 257, 18161, 3209, 11, 1310, 291, 393, 3847, 428, 1065, 13, 50572, 50572, 583, 294, 3124, 11, 498, 291, 434, 1228, 5267, 11, 584, 11, 309, 311, 709, 544, 2689, 281, 5484, 50812, 50812, 1580, 1646, 311, 659, 12, 17227, 2001, 18161, 3209, 13, 50930, 50930, 1396, 3052, 3847, 420, 2489, 12, 83, 2613, 264, 3209, 322, 428, 1065, 1412, 13, 51260, 51260, 400, 286, 1352, 300, 498, 291, 393, 483, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 257, 2416, 1412, 992, 11, 51466, 51466, 584, 257, 2459, 5267, 11, 550, 2171, 291, 393, 764, 257, 709, 4356, 1412, 992, 11, 1310, 257, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.10440990842621901, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.3496852488970035e-06}, {"id": 144, "seek": 56128, "start": 565.4399999999999, "end": 570.24, "text": " But in practice, if you're using images, say, it's much more common to download", "tokens": [50364, 1610, 498, 291, 500, 380, 528, 281, 5484, 257, 18161, 3209, 11, 1310, 291, 393, 3847, 428, 1065, 13, 50572, 50572, 583, 294, 3124, 11, 498, 291, 434, 1228, 5267, 11, 584, 11, 309, 311, 709, 544, 2689, 281, 5484, 50812, 50812, 1580, 1646, 311, 659, 12, 17227, 2001, 18161, 3209, 13, 50930, 50930, 1396, 3052, 3847, 420, 2489, 12, 83, 2613, 264, 3209, 322, 428, 1065, 1412, 13, 51260, 51260, 400, 286, 1352, 300, 498, 291, 393, 483, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 257, 2416, 1412, 992, 11, 51466, 51466, 584, 257, 2459, 5267, 11, 550, 2171, 291, 393, 764, 257, 709, 4356, 1412, 992, 11, 1310, 257, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.10440990842621901, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.3496852488970035e-06}, {"id": 145, "seek": 56128, "start": 570.24, "end": 572.6, "text": " someone else's pre-trained neural network.", "tokens": [50364, 1610, 498, 291, 500, 380, 528, 281, 5484, 257, 18161, 3209, 11, 1310, 291, 393, 3847, 428, 1065, 13, 50572, 50572, 583, 294, 3124, 11, 498, 291, 434, 1228, 5267, 11, 584, 11, 309, 311, 709, 544, 2689, 281, 5484, 50812, 50812, 1580, 1646, 311, 659, 12, 17227, 2001, 18161, 3209, 13, 50930, 50930, 1396, 3052, 3847, 420, 2489, 12, 83, 2613, 264, 3209, 322, 428, 1065, 1412, 13, 51260, 51260, 400, 286, 1352, 300, 498, 291, 393, 483, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 257, 2416, 1412, 992, 11, 51466, 51466, 584, 257, 2459, 5267, 11, 550, 2171, 291, 393, 764, 257, 709, 4356, 1412, 992, 11, 1310, 257, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.10440990842621901, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.3496852488970035e-06}, {"id": 146, "seek": 56128, "start": 572.6, "end": 579.1999999999999, "text": " Then further train or fine-tune the network on your own data.", "tokens": [50364, 1610, 498, 291, 500, 380, 528, 281, 5484, 257, 18161, 3209, 11, 1310, 291, 393, 3847, 428, 1065, 13, 50572, 50572, 583, 294, 3124, 11, 498, 291, 434, 1228, 5267, 11, 584, 11, 309, 311, 709, 544, 2689, 281, 5484, 50812, 50812, 1580, 1646, 311, 659, 12, 17227, 2001, 18161, 3209, 13, 50930, 50930, 1396, 3052, 3847, 420, 2489, 12, 83, 2613, 264, 3209, 322, 428, 1065, 1412, 13, 51260, 51260, 400, 286, 1352, 300, 498, 291, 393, 483, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 257, 2416, 1412, 992, 11, 51466, 51466, 584, 257, 2459, 5267, 11, 550, 2171, 291, 393, 764, 257, 709, 4356, 1412, 992, 11, 1310, 257, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.10440990842621901, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.3496852488970035e-06}, {"id": 147, "seek": 56128, "start": 579.1999999999999, "end": 583.3199999999999, "text": " And I found that if you can get a neural network pre-trained on a large data set,", "tokens": [50364, 1610, 498, 291, 500, 380, 528, 281, 5484, 257, 18161, 3209, 11, 1310, 291, 393, 3847, 428, 1065, 13, 50572, 50572, 583, 294, 3124, 11, 498, 291, 434, 1228, 5267, 11, 584, 11, 309, 311, 709, 544, 2689, 281, 5484, 50812, 50812, 1580, 1646, 311, 659, 12, 17227, 2001, 18161, 3209, 13, 50930, 50930, 1396, 3052, 3847, 420, 2489, 12, 83, 2613, 264, 3209, 322, 428, 1065, 1412, 13, 51260, 51260, 400, 286, 1352, 300, 498, 291, 393, 483, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 257, 2416, 1412, 992, 11, 51466, 51466, 584, 257, 2459, 5267, 11, 550, 2171, 291, 393, 764, 257, 709, 4356, 1412, 992, 11, 1310, 257, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.10440990842621901, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.3496852488970035e-06}, {"id": 148, "seek": 56128, "start": 583.3199999999999, "end": 588.76, "text": " say a million images, then sometimes you can use a much smaller data set, maybe a", "tokens": [50364, 1610, 498, 291, 500, 380, 528, 281, 5484, 257, 18161, 3209, 11, 1310, 291, 393, 3847, 428, 1065, 13, 50572, 50572, 583, 294, 3124, 11, 498, 291, 434, 1228, 5267, 11, 584, 11, 309, 311, 709, 544, 2689, 281, 5484, 50812, 50812, 1580, 1646, 311, 659, 12, 17227, 2001, 18161, 3209, 13, 50930, 50930, 1396, 3052, 3847, 420, 2489, 12, 83, 2613, 264, 3209, 322, 428, 1065, 1412, 13, 51260, 51260, 400, 286, 1352, 300, 498, 291, 393, 483, 257, 18161, 3209, 659, 12, 17227, 2001, 322, 257, 2416, 1412, 992, 11, 51466, 51466, 584, 257, 2459, 5267, 11, 550, 2171, 291, 393, 764, 257, 709, 4356, 1412, 992, 11, 1310, 257, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.10440990842621901, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.3496852488970035e-06}, {"id": 149, "seek": 58876, "start": 588.76, "end": 593.4399999999999, "text": " thousand images, maybe even smaller, to fine-tune the neural network on your own", "tokens": [50364, 4714, 5267, 11, 1310, 754, 4356, 11, 281, 2489, 12, 83, 2613, 264, 18161, 3209, 322, 428, 1065, 50598, 50598, 1412, 293, 483, 1238, 665, 3542, 13, 50744, 50744, 400, 286, 600, 2171, 8895, 18161, 9590, 322, 382, 1326, 382, 2625, 5267, 300, 589, 50990, 50990, 1596, 731, 1228, 341, 6532, 562, 309, 575, 1217, 668, 659, 12, 17227, 2001, 322, 257, 709, 51222, 51222, 4833, 1412, 992, 13, 51298, 51298, 639, 6532, 1943, 380, 2462, 617, 64, 13, 51376, 51376, 509, 393, 380, 483, 633, 3861, 281, 589, 445, 322, 2625, 5267, 11, 457, 309, 775, 854, 257, 688, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.09641662010779747, "compression_ratio": 1.5983935742971886, "no_speech_prob": 4.092801191291073e-06}, {"id": 150, "seek": 58876, "start": 593.4399999999999, "end": 596.36, "text": " data and get pretty good results.", "tokens": [50364, 4714, 5267, 11, 1310, 754, 4356, 11, 281, 2489, 12, 83, 2613, 264, 18161, 3209, 322, 428, 1065, 50598, 50598, 1412, 293, 483, 1238, 665, 3542, 13, 50744, 50744, 400, 286, 600, 2171, 8895, 18161, 9590, 322, 382, 1326, 382, 2625, 5267, 300, 589, 50990, 50990, 1596, 731, 1228, 341, 6532, 562, 309, 575, 1217, 668, 659, 12, 17227, 2001, 322, 257, 709, 51222, 51222, 4833, 1412, 992, 13, 51298, 51298, 639, 6532, 1943, 380, 2462, 617, 64, 13, 51376, 51376, 509, 393, 380, 483, 633, 3861, 281, 589, 445, 322, 2625, 5267, 11, 457, 309, 775, 854, 257, 688, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.09641662010779747, "compression_ratio": 1.5983935742971886, "no_speech_prob": 4.092801191291073e-06}, {"id": 151, "seek": 58876, "start": 596.36, "end": 601.28, "text": " And I've sometimes trained neural networks on as few as 50 images that work", "tokens": [50364, 4714, 5267, 11, 1310, 754, 4356, 11, 281, 2489, 12, 83, 2613, 264, 18161, 3209, 322, 428, 1065, 50598, 50598, 1412, 293, 483, 1238, 665, 3542, 13, 50744, 50744, 400, 286, 600, 2171, 8895, 18161, 9590, 322, 382, 1326, 382, 2625, 5267, 300, 589, 50990, 50990, 1596, 731, 1228, 341, 6532, 562, 309, 575, 1217, 668, 659, 12, 17227, 2001, 322, 257, 709, 51222, 51222, 4833, 1412, 992, 13, 51298, 51298, 639, 6532, 1943, 380, 2462, 617, 64, 13, 51376, 51376, 509, 393, 380, 483, 633, 3861, 281, 589, 445, 322, 2625, 5267, 11, 457, 309, 775, 854, 257, 688, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.09641662010779747, "compression_ratio": 1.5983935742971886, "no_speech_prob": 4.092801191291073e-06}, {"id": 152, "seek": 58876, "start": 601.28, "end": 605.92, "text": " quite well using this technique when it has already been pre-trained on a much", "tokens": [50364, 4714, 5267, 11, 1310, 754, 4356, 11, 281, 2489, 12, 83, 2613, 264, 18161, 3209, 322, 428, 1065, 50598, 50598, 1412, 293, 483, 1238, 665, 3542, 13, 50744, 50744, 400, 286, 600, 2171, 8895, 18161, 9590, 322, 382, 1326, 382, 2625, 5267, 300, 589, 50990, 50990, 1596, 731, 1228, 341, 6532, 562, 309, 575, 1217, 668, 659, 12, 17227, 2001, 322, 257, 709, 51222, 51222, 4833, 1412, 992, 13, 51298, 51298, 639, 6532, 1943, 380, 2462, 617, 64, 13, 51376, 51376, 509, 393, 380, 483, 633, 3861, 281, 589, 445, 322, 2625, 5267, 11, 457, 309, 775, 854, 257, 688, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.09641662010779747, "compression_ratio": 1.5983935742971886, "no_speech_prob": 4.092801191291073e-06}, {"id": 153, "seek": 58876, "start": 605.92, "end": 607.4399999999999, "text": " larger data set.", "tokens": [50364, 4714, 5267, 11, 1310, 754, 4356, 11, 281, 2489, 12, 83, 2613, 264, 18161, 3209, 322, 428, 1065, 50598, 50598, 1412, 293, 483, 1238, 665, 3542, 13, 50744, 50744, 400, 286, 600, 2171, 8895, 18161, 9590, 322, 382, 1326, 382, 2625, 5267, 300, 589, 50990, 50990, 1596, 731, 1228, 341, 6532, 562, 309, 575, 1217, 668, 659, 12, 17227, 2001, 322, 257, 709, 51222, 51222, 4833, 1412, 992, 13, 51298, 51298, 639, 6532, 1943, 380, 2462, 617, 64, 13, 51376, 51376, 509, 393, 380, 483, 633, 3861, 281, 589, 445, 322, 2625, 5267, 11, 457, 309, 775, 854, 257, 688, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.09641662010779747, "compression_ratio": 1.5983935742971886, "no_speech_prob": 4.092801191291073e-06}, {"id": 154, "seek": 58876, "start": 607.4399999999999, "end": 609.0, "text": " This technique isn't panacea.", "tokens": [50364, 4714, 5267, 11, 1310, 754, 4356, 11, 281, 2489, 12, 83, 2613, 264, 18161, 3209, 322, 428, 1065, 50598, 50598, 1412, 293, 483, 1238, 665, 3542, 13, 50744, 50744, 400, 286, 600, 2171, 8895, 18161, 9590, 322, 382, 1326, 382, 2625, 5267, 300, 589, 50990, 50990, 1596, 731, 1228, 341, 6532, 562, 309, 575, 1217, 668, 659, 12, 17227, 2001, 322, 257, 709, 51222, 51222, 4833, 1412, 992, 13, 51298, 51298, 639, 6532, 1943, 380, 2462, 617, 64, 13, 51376, 51376, 509, 393, 380, 483, 633, 3861, 281, 589, 445, 322, 2625, 5267, 11, 457, 309, 775, 854, 257, 688, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.09641662010779747, "compression_ratio": 1.5983935742971886, "no_speech_prob": 4.092801191291073e-06}, {"id": 155, "seek": 58876, "start": 609.0, "end": 613.88, "text": " You can't get every application to work just on 50 images, but it does help a lot", "tokens": [50364, 4714, 5267, 11, 1310, 754, 4356, 11, 281, 2489, 12, 83, 2613, 264, 18161, 3209, 322, 428, 1065, 50598, 50598, 1412, 293, 483, 1238, 665, 3542, 13, 50744, 50744, 400, 286, 600, 2171, 8895, 18161, 9590, 322, 382, 1326, 382, 2625, 5267, 300, 589, 50990, 50990, 1596, 731, 1228, 341, 6532, 562, 309, 575, 1217, 668, 659, 12, 17227, 2001, 322, 257, 709, 51222, 51222, 4833, 1412, 992, 13, 51298, 51298, 639, 6532, 1943, 380, 2462, 617, 64, 13, 51376, 51376, 509, 393, 380, 483, 633, 3861, 281, 589, 445, 322, 2625, 5267, 11, 457, 309, 775, 854, 257, 688, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.09641662010779747, "compression_ratio": 1.5983935742971886, "no_speech_prob": 4.092801191291073e-06}, {"id": 156, "seek": 61388, "start": 613.88, "end": 618.96, "text": " when the data set you have for your application isn't that large.", "tokens": [50364, 562, 264, 1412, 992, 291, 362, 337, 428, 3861, 1943, 380, 300, 2416, 13, 50618, 50618, 400, 538, 264, 636, 11, 498, 291, 600, 2198, 295, 7339, 7512, 294, 264, 2583, 411, 26039, 51, 12, 18, 420, 363, 31479, 50892, 50892, 420, 18161, 9590, 659, 12, 17227, 2001, 322, 29903, 31890, 11, 729, 366, 767, 5110, 295, 18161, 9590, 51216, 51216, 300, 1580, 1646, 575, 659, 12, 17227, 2001, 322, 257, 588, 2416, 3256, 1412, 992, 420, 257, 2487, 1412, 992, 300, 51506, 51506, 393, 550, 312, 2489, 12, 83, 43703, 322, 661, 5821, 13, 51642, 51642, 759, 291, 2378, 380, 2198, 295, 26039, 51, 12, 18, 420, 363, 31479, 420, 29903, 31890, 11, 500, 380, 3292, 466, 309, 11, 457, 291, 362, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.1632138043642044, "compression_ratio": 1.7709923664122138, "no_speech_prob": 2.5214872039214242e-06}, {"id": 157, "seek": 61388, "start": 618.96, "end": 624.4399999999999, "text": " And by the way, if you've heard of advanced techniques in the news like GPT-3 or BERT", "tokens": [50364, 562, 264, 1412, 992, 291, 362, 337, 428, 3861, 1943, 380, 300, 2416, 13, 50618, 50618, 400, 538, 264, 636, 11, 498, 291, 600, 2198, 295, 7339, 7512, 294, 264, 2583, 411, 26039, 51, 12, 18, 420, 363, 31479, 50892, 50892, 420, 18161, 9590, 659, 12, 17227, 2001, 322, 29903, 31890, 11, 729, 366, 767, 5110, 295, 18161, 9590, 51216, 51216, 300, 1580, 1646, 575, 659, 12, 17227, 2001, 322, 257, 588, 2416, 3256, 1412, 992, 420, 257, 2487, 1412, 992, 300, 51506, 51506, 393, 550, 312, 2489, 12, 83, 43703, 322, 661, 5821, 13, 51642, 51642, 759, 291, 2378, 380, 2198, 295, 26039, 51, 12, 18, 420, 363, 31479, 420, 29903, 31890, 11, 500, 380, 3292, 466, 309, 11, 457, 291, 362, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.1632138043642044, "compression_ratio": 1.7709923664122138, "no_speech_prob": 2.5214872039214242e-06}, {"id": 158, "seek": 61388, "start": 624.4399999999999, "end": 630.92, "text": " or neural networks pre-trained on ImageNet, those are actually examples of neural networks", "tokens": [50364, 562, 264, 1412, 992, 291, 362, 337, 428, 3861, 1943, 380, 300, 2416, 13, 50618, 50618, 400, 538, 264, 636, 11, 498, 291, 600, 2198, 295, 7339, 7512, 294, 264, 2583, 411, 26039, 51, 12, 18, 420, 363, 31479, 50892, 50892, 420, 18161, 9590, 659, 12, 17227, 2001, 322, 29903, 31890, 11, 729, 366, 767, 5110, 295, 18161, 9590, 51216, 51216, 300, 1580, 1646, 575, 659, 12, 17227, 2001, 322, 257, 588, 2416, 3256, 1412, 992, 420, 257, 2487, 1412, 992, 300, 51506, 51506, 393, 550, 312, 2489, 12, 83, 43703, 322, 661, 5821, 13, 51642, 51642, 759, 291, 2378, 380, 2198, 295, 26039, 51, 12, 18, 420, 363, 31479, 420, 29903, 31890, 11, 500, 380, 3292, 466, 309, 11, 457, 291, 362, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.1632138043642044, "compression_ratio": 1.7709923664122138, "no_speech_prob": 2.5214872039214242e-06}, {"id": 159, "seek": 61388, "start": 630.92, "end": 636.72, "text": " that someone else has pre-trained on a very large image data set or a text data set that", "tokens": [50364, 562, 264, 1412, 992, 291, 362, 337, 428, 3861, 1943, 380, 300, 2416, 13, 50618, 50618, 400, 538, 264, 636, 11, 498, 291, 600, 2198, 295, 7339, 7512, 294, 264, 2583, 411, 26039, 51, 12, 18, 420, 363, 31479, 50892, 50892, 420, 18161, 9590, 659, 12, 17227, 2001, 322, 29903, 31890, 11, 729, 366, 767, 5110, 295, 18161, 9590, 51216, 51216, 300, 1580, 1646, 575, 659, 12, 17227, 2001, 322, 257, 588, 2416, 3256, 1412, 992, 420, 257, 2487, 1412, 992, 300, 51506, 51506, 393, 550, 312, 2489, 12, 83, 43703, 322, 661, 5821, 13, 51642, 51642, 759, 291, 2378, 380, 2198, 295, 26039, 51, 12, 18, 420, 363, 31479, 420, 29903, 31890, 11, 500, 380, 3292, 466, 309, 11, 457, 291, 362, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.1632138043642044, "compression_ratio": 1.7709923664122138, "no_speech_prob": 2.5214872039214242e-06}, {"id": 160, "seek": 61388, "start": 636.72, "end": 639.44, "text": " can then be fine-tuned on other applications.", "tokens": [50364, 562, 264, 1412, 992, 291, 362, 337, 428, 3861, 1943, 380, 300, 2416, 13, 50618, 50618, 400, 538, 264, 636, 11, 498, 291, 600, 2198, 295, 7339, 7512, 294, 264, 2583, 411, 26039, 51, 12, 18, 420, 363, 31479, 50892, 50892, 420, 18161, 9590, 659, 12, 17227, 2001, 322, 29903, 31890, 11, 729, 366, 767, 5110, 295, 18161, 9590, 51216, 51216, 300, 1580, 1646, 575, 659, 12, 17227, 2001, 322, 257, 588, 2416, 3256, 1412, 992, 420, 257, 2487, 1412, 992, 300, 51506, 51506, 393, 550, 312, 2489, 12, 83, 43703, 322, 661, 5821, 13, 51642, 51642, 759, 291, 2378, 380, 2198, 295, 26039, 51, 12, 18, 420, 363, 31479, 420, 29903, 31890, 11, 500, 380, 3292, 466, 309, 11, 457, 291, 362, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.1632138043642044, "compression_ratio": 1.7709923664122138, "no_speech_prob": 2.5214872039214242e-06}, {"id": 161, "seek": 61388, "start": 639.44, "end": 643.8, "text": " If you haven't heard of GPT-3 or BERT or ImageNet, don't worry about it, but you have.", "tokens": [50364, 562, 264, 1412, 992, 291, 362, 337, 428, 3861, 1943, 380, 300, 2416, 13, 50618, 50618, 400, 538, 264, 636, 11, 498, 291, 600, 2198, 295, 7339, 7512, 294, 264, 2583, 411, 26039, 51, 12, 18, 420, 363, 31479, 50892, 50892, 420, 18161, 9590, 659, 12, 17227, 2001, 322, 29903, 31890, 11, 729, 366, 767, 5110, 295, 18161, 9590, 51216, 51216, 300, 1580, 1646, 575, 659, 12, 17227, 2001, 322, 257, 588, 2416, 3256, 1412, 992, 420, 257, 2487, 1412, 992, 300, 51506, 51506, 393, 550, 312, 2489, 12, 83, 43703, 322, 661, 5821, 13, 51642, 51642, 759, 291, 2378, 380, 2198, 295, 26039, 51, 12, 18, 420, 363, 31479, 420, 29903, 31890, 11, 500, 380, 3292, 466, 309, 11, 457, 291, 362, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.1632138043642044, "compression_ratio": 1.7709923664122138, "no_speech_prob": 2.5214872039214242e-06}, {"id": 162, "seek": 64380, "start": 643.8, "end": 648.4799999999999, "text": " Those have been successful applications of pre-training in the machine learning literature.", "tokens": [50364, 3950, 362, 668, 4406, 5821, 295, 659, 12, 17227, 1760, 294, 264, 3479, 2539, 10394, 13, 50598, 50598, 759, 291, 2378, 380, 2198, 295, 26039, 51, 12, 18, 420, 363, 31479, 420, 29903, 31890, 11, 500, 380, 3292, 466, 309, 11, 457, 291, 362, 13, 50810, 50810, 3950, 362, 668, 4406, 5821, 295, 5003, 2539, 294, 264, 3479, 2539, 10394, 13, 51046, 51046, 1485, 295, 264, 721, 286, 411, 466, 5003, 2539, 307, 309, 311, 668, 472, 295, 264, 2098, 300, 264, 3479, 51254, 51254, 2539, 1768, 575, 5507, 3487, 293, 3089, 293, 754, 9834, 365, 1184, 661, 11, 570, 51552, 51552, 3231, 281, 264, 10309, 300, 362, 659, 12, 17227, 2001, 2416, 18161, 9590, 293, 9437, 264, 9834, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13289874937476182, "compression_ratio": 1.9716312056737588, "no_speech_prob": 4.860246008320246e-06}, {"id": 163, "seek": 64380, "start": 648.4799999999999, "end": 652.7199999999999, "text": " If you haven't heard of GPT-3 or BERT or ImageNet, don't worry about it, but you have.", "tokens": [50364, 3950, 362, 668, 4406, 5821, 295, 659, 12, 17227, 1760, 294, 264, 3479, 2539, 10394, 13, 50598, 50598, 759, 291, 2378, 380, 2198, 295, 26039, 51, 12, 18, 420, 363, 31479, 420, 29903, 31890, 11, 500, 380, 3292, 466, 309, 11, 457, 291, 362, 13, 50810, 50810, 3950, 362, 668, 4406, 5821, 295, 5003, 2539, 294, 264, 3479, 2539, 10394, 13, 51046, 51046, 1485, 295, 264, 721, 286, 411, 466, 5003, 2539, 307, 309, 311, 668, 472, 295, 264, 2098, 300, 264, 3479, 51254, 51254, 2539, 1768, 575, 5507, 3487, 293, 3089, 293, 754, 9834, 365, 1184, 661, 11, 570, 51552, 51552, 3231, 281, 264, 10309, 300, 362, 659, 12, 17227, 2001, 2416, 18161, 9590, 293, 9437, 264, 9834, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13289874937476182, "compression_ratio": 1.9716312056737588, "no_speech_prob": 4.860246008320246e-06}, {"id": 164, "seek": 64380, "start": 652.7199999999999, "end": 657.4399999999999, "text": " Those have been successful applications of transfer learning in the machine learning literature.", "tokens": [50364, 3950, 362, 668, 4406, 5821, 295, 659, 12, 17227, 1760, 294, 264, 3479, 2539, 10394, 13, 50598, 50598, 759, 291, 2378, 380, 2198, 295, 26039, 51, 12, 18, 420, 363, 31479, 420, 29903, 31890, 11, 500, 380, 3292, 466, 309, 11, 457, 291, 362, 13, 50810, 50810, 3950, 362, 668, 4406, 5821, 295, 5003, 2539, 294, 264, 3479, 2539, 10394, 13, 51046, 51046, 1485, 295, 264, 721, 286, 411, 466, 5003, 2539, 307, 309, 311, 668, 472, 295, 264, 2098, 300, 264, 3479, 51254, 51254, 2539, 1768, 575, 5507, 3487, 293, 3089, 293, 754, 9834, 365, 1184, 661, 11, 570, 51552, 51552, 3231, 281, 264, 10309, 300, 362, 659, 12, 17227, 2001, 2416, 18161, 9590, 293, 9437, 264, 9834, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13289874937476182, "compression_ratio": 1.9716312056737588, "no_speech_prob": 4.860246008320246e-06}, {"id": 165, "seek": 64380, "start": 657.4399999999999, "end": 661.5999999999999, "text": " One of the things I like about transfer learning is it's been one of the ways that the machine", "tokens": [50364, 3950, 362, 668, 4406, 5821, 295, 659, 12, 17227, 1760, 294, 264, 3479, 2539, 10394, 13, 50598, 50598, 759, 291, 2378, 380, 2198, 295, 26039, 51, 12, 18, 420, 363, 31479, 420, 29903, 31890, 11, 500, 380, 3292, 466, 309, 11, 457, 291, 362, 13, 50810, 50810, 3950, 362, 668, 4406, 5821, 295, 5003, 2539, 294, 264, 3479, 2539, 10394, 13, 51046, 51046, 1485, 295, 264, 721, 286, 411, 466, 5003, 2539, 307, 309, 311, 668, 472, 295, 264, 2098, 300, 264, 3479, 51254, 51254, 2539, 1768, 575, 5507, 3487, 293, 3089, 293, 754, 9834, 365, 1184, 661, 11, 570, 51552, 51552, 3231, 281, 264, 10309, 300, 362, 659, 12, 17227, 2001, 2416, 18161, 9590, 293, 9437, 264, 9834, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13289874937476182, "compression_ratio": 1.9716312056737588, "no_speech_prob": 4.860246008320246e-06}, {"id": 166, "seek": 64380, "start": 661.5999999999999, "end": 667.56, "text": " learning community has shared ideas and code and even parameters with each other, because", "tokens": [50364, 3950, 362, 668, 4406, 5821, 295, 659, 12, 17227, 1760, 294, 264, 3479, 2539, 10394, 13, 50598, 50598, 759, 291, 2378, 380, 2198, 295, 26039, 51, 12, 18, 420, 363, 31479, 420, 29903, 31890, 11, 500, 380, 3292, 466, 309, 11, 457, 291, 362, 13, 50810, 50810, 3950, 362, 668, 4406, 5821, 295, 5003, 2539, 294, 264, 3479, 2539, 10394, 13, 51046, 51046, 1485, 295, 264, 721, 286, 411, 466, 5003, 2539, 307, 309, 311, 668, 472, 295, 264, 2098, 300, 264, 3479, 51254, 51254, 2539, 1768, 575, 5507, 3487, 293, 3089, 293, 754, 9834, 365, 1184, 661, 11, 570, 51552, 51552, 3231, 281, 264, 10309, 300, 362, 659, 12, 17227, 2001, 2416, 18161, 9590, 293, 9437, 264, 9834, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13289874937476182, "compression_ratio": 1.9716312056737588, "no_speech_prob": 4.860246008320246e-06}, {"id": 167, "seek": 64380, "start": 667.56, "end": 672.8399999999999, "text": " thanks to the researchers that have pre-trained large neural networks and posted the parameters", "tokens": [50364, 3950, 362, 668, 4406, 5821, 295, 659, 12, 17227, 1760, 294, 264, 3479, 2539, 10394, 13, 50598, 50598, 759, 291, 2378, 380, 2198, 295, 26039, 51, 12, 18, 420, 363, 31479, 420, 29903, 31890, 11, 500, 380, 3292, 466, 309, 11, 457, 291, 362, 13, 50810, 50810, 3950, 362, 668, 4406, 5821, 295, 5003, 2539, 294, 264, 3479, 2539, 10394, 13, 51046, 51046, 1485, 295, 264, 721, 286, 411, 466, 5003, 2539, 307, 309, 311, 668, 472, 295, 264, 2098, 300, 264, 3479, 51254, 51254, 2539, 1768, 575, 5507, 3487, 293, 3089, 293, 754, 9834, 365, 1184, 661, 11, 570, 51552, 51552, 3231, 281, 264, 10309, 300, 362, 659, 12, 17227, 2001, 2416, 18161, 9590, 293, 9437, 264, 9834, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13289874937476182, "compression_ratio": 1.9716312056737588, "no_speech_prob": 4.860246008320246e-06}, {"id": 168, "seek": 67284, "start": 672.84, "end": 678.36, "text": " on the internet freely for anyone else to download and use, this empowers anyone to", "tokens": [50364, 322, 264, 4705, 16433, 337, 2878, 1646, 281, 5484, 293, 764, 11, 341, 4012, 23054, 2878, 281, 50640, 50640, 747, 5245, 436, 434, 659, 12, 17227, 2001, 281, 2489, 12, 83, 2613, 322, 7263, 257, 709, 4356, 1412, 992, 13, 50912, 50912, 682, 3479, 2539, 11, 439, 295, 505, 917, 493, 2049, 2390, 322, 264, 589, 295, 1184, 661, 11, 293, 300, 51172, 51172, 1269, 5414, 295, 3487, 11, 295, 3089, 11, 295, 8895, 9834, 307, 472, 295, 264, 2098, 300, 264, 3479, 51506, 51506, 2539, 1768, 11, 439, 295, 505, 24341, 11, 3067, 281, 360, 709, 1101, 589, 813, 604, 2167, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.09479435434881246, "compression_ratio": 1.748, "no_speech_prob": 8.397057172260247e-06}, {"id": 169, "seek": 67284, "start": 678.36, "end": 683.8000000000001, "text": " take models they're pre-trained to fine-tune on potentially a much smaller data set.", "tokens": [50364, 322, 264, 4705, 16433, 337, 2878, 1646, 281, 5484, 293, 764, 11, 341, 4012, 23054, 2878, 281, 50640, 50640, 747, 5245, 436, 434, 659, 12, 17227, 2001, 281, 2489, 12, 83, 2613, 322, 7263, 257, 709, 4356, 1412, 992, 13, 50912, 50912, 682, 3479, 2539, 11, 439, 295, 505, 917, 493, 2049, 2390, 322, 264, 589, 295, 1184, 661, 11, 293, 300, 51172, 51172, 1269, 5414, 295, 3487, 11, 295, 3089, 11, 295, 8895, 9834, 307, 472, 295, 264, 2098, 300, 264, 3479, 51506, 51506, 2539, 1768, 11, 439, 295, 505, 24341, 11, 3067, 281, 360, 709, 1101, 589, 813, 604, 2167, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.09479435434881246, "compression_ratio": 1.748, "no_speech_prob": 8.397057172260247e-06}, {"id": 170, "seek": 67284, "start": 683.8000000000001, "end": 689.0, "text": " In machine learning, all of us end up often building on the work of each other, and that", "tokens": [50364, 322, 264, 4705, 16433, 337, 2878, 1646, 281, 5484, 293, 764, 11, 341, 4012, 23054, 2878, 281, 50640, 50640, 747, 5245, 436, 434, 659, 12, 17227, 2001, 281, 2489, 12, 83, 2613, 322, 7263, 257, 709, 4356, 1412, 992, 13, 50912, 50912, 682, 3479, 2539, 11, 439, 295, 505, 917, 493, 2049, 2390, 322, 264, 589, 295, 1184, 661, 11, 293, 300, 51172, 51172, 1269, 5414, 295, 3487, 11, 295, 3089, 11, 295, 8895, 9834, 307, 472, 295, 264, 2098, 300, 264, 3479, 51506, 51506, 2539, 1768, 11, 439, 295, 505, 24341, 11, 3067, 281, 360, 709, 1101, 589, 813, 604, 2167, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.09479435434881246, "compression_ratio": 1.748, "no_speech_prob": 8.397057172260247e-06}, {"id": 171, "seek": 67284, "start": 689.0, "end": 695.6800000000001, "text": " open sharing of ideas, of code, of trained parameters is one of the ways that the machine", "tokens": [50364, 322, 264, 4705, 16433, 337, 2878, 1646, 281, 5484, 293, 764, 11, 341, 4012, 23054, 2878, 281, 50640, 50640, 747, 5245, 436, 434, 659, 12, 17227, 2001, 281, 2489, 12, 83, 2613, 322, 7263, 257, 709, 4356, 1412, 992, 13, 50912, 50912, 682, 3479, 2539, 11, 439, 295, 505, 917, 493, 2049, 2390, 322, 264, 589, 295, 1184, 661, 11, 293, 300, 51172, 51172, 1269, 5414, 295, 3487, 11, 295, 3089, 11, 295, 8895, 9834, 307, 472, 295, 264, 2098, 300, 264, 3479, 51506, 51506, 2539, 1768, 11, 439, 295, 505, 24341, 11, 3067, 281, 360, 709, 1101, 589, 813, 604, 2167, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.09479435434881246, "compression_ratio": 1.748, "no_speech_prob": 8.397057172260247e-06}, {"id": 172, "seek": 67284, "start": 695.6800000000001, "end": 700.64, "text": " learning community, all of us collectively, manage to do much better work than any single", "tokens": [50364, 322, 264, 4705, 16433, 337, 2878, 1646, 281, 5484, 293, 764, 11, 341, 4012, 23054, 2878, 281, 50640, 50640, 747, 5245, 436, 434, 659, 12, 17227, 2001, 281, 2489, 12, 83, 2613, 322, 7263, 257, 709, 4356, 1412, 992, 13, 50912, 50912, 682, 3479, 2539, 11, 439, 295, 505, 917, 493, 2049, 2390, 322, 264, 589, 295, 1184, 661, 11, 293, 300, 51172, 51172, 1269, 5414, 295, 3487, 11, 295, 3089, 11, 295, 8895, 9834, 307, 472, 295, 264, 2098, 300, 264, 3479, 51506, 51506, 2539, 1768, 11, 439, 295, 505, 24341, 11, 3067, 281, 360, 709, 1101, 589, 813, 604, 2167, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.09479435434881246, "compression_ratio": 1.748, "no_speech_prob": 8.397057172260247e-06}, {"id": 173, "seek": 70064, "start": 700.64, "end": 702.92, "text": " person by themselves can.", "tokens": [50364, 954, 538, 2969, 393, 13, 50478, 50478, 286, 1454, 300, 291, 11, 5549, 264, 3479, 2539, 1768, 11, 486, 19412, 1310, 915, 257, 636, 281, 50712, 50712, 10586, 646, 281, 341, 1768, 382, 731, 13, 50880, 50880, 663, 311, 309, 337, 659, 12, 17227, 1760, 13, 50998, 50998, 286, 1454, 291, 915, 341, 6532, 4420, 13, 51144, 51144, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 2073, 365, 291, 512, 4598, 322, 264, 1577, 6586, 295, 257, 3479, 51424, 51424, 2539, 1716, 13, 51522, 51522, 1133, 2390, 257, 3479, 2539, 1185, 11, 437, 366, 439, 264, 4439, 300, 366, 3163, 1953, 51722, 51722, 466, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.11879532553932884, "compression_ratio": 1.688976377952756, "no_speech_prob": 8.800617251836229e-06}, {"id": 174, "seek": 70064, "start": 702.92, "end": 707.6, "text": " I hope that you, joining the machine learning community, will someday maybe find a way to", "tokens": [50364, 954, 538, 2969, 393, 13, 50478, 50478, 286, 1454, 300, 291, 11, 5549, 264, 3479, 2539, 1768, 11, 486, 19412, 1310, 915, 257, 636, 281, 50712, 50712, 10586, 646, 281, 341, 1768, 382, 731, 13, 50880, 50880, 663, 311, 309, 337, 659, 12, 17227, 1760, 13, 50998, 50998, 286, 1454, 291, 915, 341, 6532, 4420, 13, 51144, 51144, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 2073, 365, 291, 512, 4598, 322, 264, 1577, 6586, 295, 257, 3479, 51424, 51424, 2539, 1716, 13, 51522, 51522, 1133, 2390, 257, 3479, 2539, 1185, 11, 437, 366, 439, 264, 4439, 300, 366, 3163, 1953, 51722, 51722, 466, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.11879532553932884, "compression_ratio": 1.688976377952756, "no_speech_prob": 8.800617251836229e-06}, {"id": 175, "seek": 70064, "start": 707.6, "end": 710.96, "text": " contribute back to this community as well.", "tokens": [50364, 954, 538, 2969, 393, 13, 50478, 50478, 286, 1454, 300, 291, 11, 5549, 264, 3479, 2539, 1768, 11, 486, 19412, 1310, 915, 257, 636, 281, 50712, 50712, 10586, 646, 281, 341, 1768, 382, 731, 13, 50880, 50880, 663, 311, 309, 337, 659, 12, 17227, 1760, 13, 50998, 50998, 286, 1454, 291, 915, 341, 6532, 4420, 13, 51144, 51144, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 2073, 365, 291, 512, 4598, 322, 264, 1577, 6586, 295, 257, 3479, 51424, 51424, 2539, 1716, 13, 51522, 51522, 1133, 2390, 257, 3479, 2539, 1185, 11, 437, 366, 439, 264, 4439, 300, 366, 3163, 1953, 51722, 51722, 466, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.11879532553932884, "compression_ratio": 1.688976377952756, "no_speech_prob": 8.800617251836229e-06}, {"id": 176, "seek": 70064, "start": 710.96, "end": 713.3199999999999, "text": " That's it for pre-training.", "tokens": [50364, 954, 538, 2969, 393, 13, 50478, 50478, 286, 1454, 300, 291, 11, 5549, 264, 3479, 2539, 1768, 11, 486, 19412, 1310, 915, 257, 636, 281, 50712, 50712, 10586, 646, 281, 341, 1768, 382, 731, 13, 50880, 50880, 663, 311, 309, 337, 659, 12, 17227, 1760, 13, 50998, 50998, 286, 1454, 291, 915, 341, 6532, 4420, 13, 51144, 51144, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 2073, 365, 291, 512, 4598, 322, 264, 1577, 6586, 295, 257, 3479, 51424, 51424, 2539, 1716, 13, 51522, 51522, 1133, 2390, 257, 3479, 2539, 1185, 11, 437, 366, 439, 264, 4439, 300, 366, 3163, 1953, 51722, 51722, 466, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.11879532553932884, "compression_ratio": 1.688976377952756, "no_speech_prob": 8.800617251836229e-06}, {"id": 177, "seek": 70064, "start": 713.3199999999999, "end": 716.24, "text": " I hope you find this technique useful.", "tokens": [50364, 954, 538, 2969, 393, 13, 50478, 50478, 286, 1454, 300, 291, 11, 5549, 264, 3479, 2539, 1768, 11, 486, 19412, 1310, 915, 257, 636, 281, 50712, 50712, 10586, 646, 281, 341, 1768, 382, 731, 13, 50880, 50880, 663, 311, 309, 337, 659, 12, 17227, 1760, 13, 50998, 50998, 286, 1454, 291, 915, 341, 6532, 4420, 13, 51144, 51144, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 2073, 365, 291, 512, 4598, 322, 264, 1577, 6586, 295, 257, 3479, 51424, 51424, 2539, 1716, 13, 51522, 51522, 1133, 2390, 257, 3479, 2539, 1185, 11, 437, 366, 439, 264, 4439, 300, 366, 3163, 1953, 51722, 51722, 466, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.11879532553932884, "compression_ratio": 1.688976377952756, "no_speech_prob": 8.800617251836229e-06}, {"id": 178, "seek": 70064, "start": 716.24, "end": 721.84, "text": " In the next video, I'd like to share with you some thoughts on the full cycle of a machine", "tokens": [50364, 954, 538, 2969, 393, 13, 50478, 50478, 286, 1454, 300, 291, 11, 5549, 264, 3479, 2539, 1768, 11, 486, 19412, 1310, 915, 257, 636, 281, 50712, 50712, 10586, 646, 281, 341, 1768, 382, 731, 13, 50880, 50880, 663, 311, 309, 337, 659, 12, 17227, 1760, 13, 50998, 50998, 286, 1454, 291, 915, 341, 6532, 4420, 13, 51144, 51144, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 2073, 365, 291, 512, 4598, 322, 264, 1577, 6586, 295, 257, 3479, 51424, 51424, 2539, 1716, 13, 51522, 51522, 1133, 2390, 257, 3479, 2539, 1185, 11, 437, 366, 439, 264, 4439, 300, 366, 3163, 1953, 51722, 51722, 466, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.11879532553932884, "compression_ratio": 1.688976377952756, "no_speech_prob": 8.800617251836229e-06}, {"id": 179, "seek": 70064, "start": 721.84, "end": 723.8, "text": " learning project.", "tokens": [50364, 954, 538, 2969, 393, 13, 50478, 50478, 286, 1454, 300, 291, 11, 5549, 264, 3479, 2539, 1768, 11, 486, 19412, 1310, 915, 257, 636, 281, 50712, 50712, 10586, 646, 281, 341, 1768, 382, 731, 13, 50880, 50880, 663, 311, 309, 337, 659, 12, 17227, 1760, 13, 50998, 50998, 286, 1454, 291, 915, 341, 6532, 4420, 13, 51144, 51144, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 2073, 365, 291, 512, 4598, 322, 264, 1577, 6586, 295, 257, 3479, 51424, 51424, 2539, 1716, 13, 51522, 51522, 1133, 2390, 257, 3479, 2539, 1185, 11, 437, 366, 439, 264, 4439, 300, 366, 3163, 1953, 51722, 51722, 466, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.11879532553932884, "compression_ratio": 1.688976377952756, "no_speech_prob": 8.800617251836229e-06}, {"id": 180, "seek": 70064, "start": 723.8, "end": 727.8, "text": " When building a machine learning system, what are all the steps that are worth thinking", "tokens": [50364, 954, 538, 2969, 393, 13, 50478, 50478, 286, 1454, 300, 291, 11, 5549, 264, 3479, 2539, 1768, 11, 486, 19412, 1310, 915, 257, 636, 281, 50712, 50712, 10586, 646, 281, 341, 1768, 382, 731, 13, 50880, 50880, 663, 311, 309, 337, 659, 12, 17227, 1760, 13, 50998, 50998, 286, 1454, 291, 915, 341, 6532, 4420, 13, 51144, 51144, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 2073, 365, 291, 512, 4598, 322, 264, 1577, 6586, 295, 257, 3479, 51424, 51424, 2539, 1716, 13, 51522, 51522, 1133, 2390, 257, 3479, 2539, 1185, 11, 437, 366, 439, 264, 4439, 300, 366, 3163, 1953, 51722, 51722, 466, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.11879532553932884, "compression_ratio": 1.688976377952756, "no_speech_prob": 8.800617251836229e-06}, {"id": 181, "seek": 70064, "start": 727.8, "end": 728.8, "text": " about?", "tokens": [50364, 954, 538, 2969, 393, 13, 50478, 50478, 286, 1454, 300, 291, 11, 5549, 264, 3479, 2539, 1768, 11, 486, 19412, 1310, 915, 257, 636, 281, 50712, 50712, 10586, 646, 281, 341, 1768, 382, 731, 13, 50880, 50880, 663, 311, 309, 337, 659, 12, 17227, 1760, 13, 50998, 50998, 286, 1454, 291, 915, 341, 6532, 4420, 13, 51144, 51144, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 2073, 365, 291, 512, 4598, 322, 264, 1577, 6586, 295, 257, 3479, 51424, 51424, 2539, 1716, 13, 51522, 51522, 1133, 2390, 257, 3479, 2539, 1185, 11, 437, 366, 439, 264, 4439, 300, 366, 3163, 1953, 51722, 51722, 466, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.11879532553932884, "compression_ratio": 1.688976377952756, "no_speech_prob": 8.800617251836229e-06}, {"id": 182, "seek": 72880, "start": 728.8, "end": 730.8, "text": " We'll look at that in the next video.", "tokens": [50364, 492, 603, 574, 412, 300, 294, 264, 958, 960, 13, 50464], "temperature": 0.0, "avg_logprob": -0.2583898947789119, "compression_ratio": 0.8809523809523809, "no_speech_prob": 0.00016316348046530038}], "language": "en", "video_id": "QAZroxyW4oo", "entity": "ML Specialization, Andrew Ng (2022)"}}