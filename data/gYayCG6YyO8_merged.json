{"video_id": "gYayCG6YyO8", "title": "Week 14 \u2013 Lecture: Structured prediction with energy based models", "description": "Course website: http://bit.ly/pDL-home\nPlaylist: http://bit.ly/pDL-YouTube\nSpeaker: Yann LeCun\nWeek 14: http://bit.ly/pDL-en-14\n\n0:00:00 \u2013 Week 14 \u2013 Lecture\n\nLECTURE Part A: http://bit.ly/pDL-en-14-1\nIn this section, we discussed the structured prediction. We first introduced the Energy-Based factor graph and efficient inference for it. Then we gave some examples for simple Energy-Based factor graphs with \u201cshallow\u201d factors. Finally, we discussed the Graph Transformer Net.\n0:00:25 \u2013 Structured Prediction, Energy based factor graphs, Sequence Labeling\n0:18:06 \u2013 Efficient Inference for Energy-Based Factor Graph and Some Simple Energy-Based Factor Graphs\n0:43:30 \u2013 Graph Transformer Net\n\nLECTURE Part B: http://bit.ly/pDL-en-14-2\nThe second leg of the lecture further discusses the application of graphical model methods to energy-based models. After spending some time comparing different loss functions, we discuss the application of the Viterbi algorithm and forward algorithm to graphical transformer networks. We then transition to discussing the Lagrangian formulation of backpropagation and then variational inference for energy-based models.\n1:00:22 \u2013 Comparing Losses and the start of language models as graphs\n1:15:18 \u2013 Forward algorithm in Graph Transformer Networks\n1:32:53 \u2013 Lagrangian formulation of back prop and neural ODE\n1:48:42 \u2013 Variational Inference in terms of Energy", "author": "Alfredo Canziani", "keywords": ["Yann LeCun", "Deep Learning", "PyTorch", "NYU", "Structured Prediction", "Energy based factor graphs", "Sequence Labeling", "Conditional Random Field", "Max Margin Markov Nets", "Latent SVM", "Graph Transformer Net"], "channel_url": "https://www.youtube.com/channel/UCupQLyNchb9-2Z5lmUOIijw", "length": 7650, "views": 7608, "publish_date": "11/02/2022", "timestamp": 1600300800, "entity": "Yann LeCun", "transcript": {"text": " OK, there's a number of topics I want to talk about today. This is our last lecture, and I want to keep some time at the end for random questions on random topics that you might want to ask. Maybe general questions in general about approaches to machine learning, AI, deep learning, et cetera. Maybe questions really maybe a little more philosophical. But let me start with something more concrete. So I want to talk about structure prediction. I alluded to this topic a number of times during the previous lectures, but I think not enough in depth for most people to understand. So I want to come back to this. So structure prediction is basically the problem of predicting a variable that itself is not just like a single category or a single object, but basically a sort of combinatorial object. So for example, things like a sentence, you're doing speech recognition, you're doing handwriting recognition, you're doing natural language generation or translation. And what you need to output is a sort of grammatically correct consistent sequence of symbols. And there is no, you can't say that there is a finite number of possibilities of the output, because the length of the output might be variable. But even if the length has a maximum and the number is in principle finite, because it's combinatorial, there's no way to enumerate all possible different outputs. And so to express the type constraint that the output has to reflect, that's what's called structure prediction. And there's a lot of work on this going back to basically the early days of speech recognition. So this is not a recent problem. In fact, I'm going to start by a little bit of history. In my mind, the first model to do structured prediction combined with things like neural networks trained discriminatively was this speech recognition model for words by Xavier Drinocourt and Leon Boutou back in the early 90s, 1991. And there was kind of similar work about the same time by Yoshua Bengio and about a year or two later by Patrick Hefner. So these are people who worked on discriminative training for systems that were supposed to produce a sequence of symbols from a signal, let's say, speech or handwriting, and where once the first step basically is a neural net. Here, this neural net, I wrote TDNN. This means time-delay neural net is basically a temporal convolutional net. So this is the first model I can find of structured prediction hybridized with neural nets if you want. So the problem that Xavier Drinocourt and Leon Boutou are trying to solve was recognizing words using a neural net. And to some extent, the modern approaches are kind of similar to this, but in some ways. So the speech signal is represented as a sequence of acoustic vectors. So those are, you slice the signal into little chunks. And then on one of the chunks, you do a Fourier transform, which Fredo has explained to you. And you turn it into basically a feature vector. And you have one of those vectors. It's typically 30 dimensions or so, maybe 40. And you want one of those vectors every 10 milliseconds, so about 100 times per second. So you have a sequence of 40-dimensional vectors, about 100 per second. And you run this through a convolutional net, a temporal convolutional net. And at the output of it, what you get is a sequence of feature vectors. You can think of it this way. In modern systems, those feature vectors are actually kind of softmax vectors that indicate a category. But in their case, it wasn't. And those can be at the same rate, or they can be slower. So if the neural net has, if the convolutional net has temporal subsampling, you're not going to get 10 of those feature vectors per second. You might get 25, 2 and 1 half or something. I'm sorry. At the input, there is 100. So if you have a subsampling by a factor of 4, you will get 25 feature vectors per second, not 100, or something like that. Now, here is the problem. The problem is you want to recognize which word was just pronounced. And different people will pronounce the same word at different speeds. And so what you need to do is what's called dynamic time-wrapping. And I explained this already in the past. So let's imagine that you've recorded this person. You don't want to do speaker-independent speech recognition for now, just speaker-specific. So you've recorded that person saying, let's say, the 10 digits, spoken digits, like 0, 1, 2, 3, 4, 5, et cetera, because you're only interested in recognizing spoken digits, isolated spoken digits. Maybe this is a system that is supposed to dial a number on your phone. So it just needs to recognize sequences of digits. Or perhaps it's a very simple speech recognition system that tries to spot the wake-up word for Amazon Alexa or something like this. So the only thing the system is supposed to recognize is Alexa or hey, Google or something like that, a wake-up word. So the system may have a bunch of pre-recorded templates that correspond to sequences of feature vectors that were produced by someone speaking each of the words. And now the way you want to train the system is that you would like to train the neural net at the same time as the template so that the overall system recognizes the words as best as possible. This is a classification problem. But there is a latent variable in it. And the latent variable is how are you going to time warp the sequence of feature vectors so that it matches the length of those templates? And again, I'm kind of repeating myself, because I talked a little bit about this before. So you do this with dummy time warping. And what that consists of is that you line up all the feature vectors along the bottom here of this. So think of this as a matrix. You line up all the feature vectors at the input. So you get the sequence of feature vectors are here. And then you put the sequence of template vectors, so feature vectors coming out of the template on this axis. And then each entry in the matrix is an indication of the distance between the feature vector here and the feature vector there. So you get this probability matrix with distances between feature vectors, essentially. And the best way to map the sequence of feature vector into another one to see if they fit is to basically view this matrix as kind of a set of nodes in a graph. And what you want is go from the lower left hand corner of that graph to the upper right hand corner by going through a path that minimizes the sum of the distances along the path. So obviously, you're going to have to go horizontally more steps than you go vertically. So on a few occasions, you're going to do diagonally. On a few occasions, you're going to go vertically up. But on many occasions, you're probably going to go horizontally to the right. And that would be the situation where you have multiple feature vectors here that are essentially identical that match a single feature vector in the template. So for example, you pronounce the word 7 very slowly. The ah initially is going to be repeated multiple times because you stick on it for like a quarter of a second. So you're going to have 25 instances of this. And all of this would be mapped to maybe a single feature vector here that corresponds to this sound, ah. So finding this path that best warps the sequence into the template sequence is like minimizing with respect to a latent variable z. So it's like you have an energy function. You're minimizing this energy function with respect to the latent variable. The latent variable is the path in that graph. So now what you have is the best warping that matches the sequence of feature vector to the first template. Now, you keep doing this with all the templates. So for every template, every word, from 0, 1, 2, 3, to 9, you have the best way to warp the feature vector to that template. And now you can, if your system has been trained, you pick the category of the word template with the smallest distance. OK, as simple as that. That's for classification. Now, how about training? So for training, this is a latent variable model, essentially. And what you need to do is you need to make the energy for the correct answer as small as possible and make sure the energy for the incorrect answers are larger. OK, so let's imagine the correct answer is this word here, the second last one, that correspond to 0, 1, 2, 3, the category 3, for example. OK, so we know the correct answer is 3. So what we need to do now is basically change the word template here a little bit so that it gets closer to the feature vector sequence, and then change the feature vector sequence so that it gets closer to the template. You can think of this DTW distance, this dynamic time-werping distance, as a kind of distance which involves minimization with respect to a path, but in the end, it's some sort of distance or divergence. And what you need to do is, and that's basically your energy, so what you need to do is make that distance smaller for the correct answer. So the energy of the correct answer goes down. And simultaneously, you need to make sure the energy of all the incorrect answers are larger. So you might need to push them away. So you might need to have an objective function that is going to take the templates for the wrong words and somehow push them away from the current sequence of features. So that's how you learn the templates. And then simultaneously, you're going to have a combination of gradients that are going to back propagate through this DTW. One is going to try to make that sequence and feature vector such that once you go the time-werping, it gets closer to the correct word template, but also change it so that it gets away from the other templates, the templates for the other categories. So that is simply back propagating through the dynamic time-werping. And the dynamic time-werping really is a switch. It's a giant switch. It basically tells you those values here along the path matter because they are the ones that indicate whether my input vector matches my template vector. All the other ones that my path is not taking are irrelevant. They don't matter. So the distance is just the sum of those values. So when I back propagate, I just get, for each vector here, a gradient that corresponds to the gradient of basically the distance to the corresponding vector in the template. So for the correct template, this is going to cause all those vectors to get closer to the corresponding vector in the template and all those vectors to move away from the corresponding vector in the bad templates that you decide to push away. And then you can just back propagate those gradients all the way through. Now, I'm kind of explaining the mechanics of it, but you don't actually have to think about it. In principle, kind of conceptually, it's just a energy-based model with latent variable. And you just compute the gradient of your energy with respect to everything in your network for values of latent variables that depend on the position of this switch here. You can think of this switch as the one that tells you which of the answers is correct. And so it's nothing more than an energy-based model. Now there's a question. So why am I introducing this before talking about structure prediction? Because this is a very simple form of structure prediction, particularly if now the problem is not to recognize a single word, but it is to recognize a sequence of words. So a word is a sequence of sounds, but a sentence is a sequence of words, and so therefore also a sequence of sounds. So I could build a collection of possible sequences which are grammatically correct sequences of words, which correspond to some grammatically correct sequences of sounds. And then this kind of dynamic time-warping, if you want, will sort of find among all the possible sequences of symbols or sounds or words, we'll find the one that has the lowest energy, that this feature vector is closest to somehow. OK, so that's the general problem of sequence labeling. And it can be formulated at a general level in this way. Now I'm kind of set the stage a little bit, and now I'm going to talk about something that you're not going to see immediately as connected, but it's going to come up at the end. OK, so let's say you have a learning system that is composed of an input x. It gets an input x, and it's an energy model in which the energy is a sum of three terms in this case. So those blue squares here are basically factors in a factor graph. They're energy terms, additive energy terms in your energy function. And your output is a sequence, in this case a sequence of four symbols. And those symbols do not all contribute to all the terms in the energy. So basically, your energy function, the first term, takes into account the first two symbols or variables in your sequence of output. The second one takes the second two. The third one takes the third and fourth. Now imagine that this were a sequence of words, and your system was supposed to do something like speech recognition or something. So x is the speech signal. In the blue boxes, you have neural nets and various other things. There might be another neural net that looks at x and then produces feature vectors that go into those boxes, but that's a detail for now. And what those blue boxes would have to implement is basically grammatical constraints. So in English, certain words can follow others, but not others. So you rarely have two verbs that follow each other. And so you could implement this in this energy term that would make you pay a price for making a verb follow another verb or having, I don't know, two prepositions. You can have two adjectives that follow each other, things like that. So basically, those would implement basic grammatical rules. And you can think of this as a language model. So I know what word came before. Tell me what word can come after. And I can train this on the corpus of text to learn this energy function. So it would be a very basic crude language model. So this type of model would implement a very crude language model by just taking the previous word and then telling you what next words are possible, making you pay a price for picking a word that is not correct. OK, so how you do inference? This is just basically an energy model here, which in this case doesn't actually have a latent variable. But basically, I give you an x, and you have to find the sequence of y that minimizes the energy. But in this case, because the energy is a sum of three terms, there are efficient ways to find the sequence of y's that minimize the energy that may not require a completely exhaustive search or gradient descent or something like this. OK, and I'm going to place myself in a situation where the y's are actually discrete. So there's things like words or sounds or categories of some kind. And so this applies to this situation where the variables you need to infer are all outputs, which means they're going to be visible on the training set. And you can train your system to infer them correctly. But it could also be another situation where some of the variables are observed, like x here on the left and y is observed during training on the right. But then all the intermediate variables are never observed. There are latent variables you need to minimize over as well. But again, here, this factor graph is factorized in the sense that the energy is a sum of different terms that only take subsets of the variables into account. All right, OK. So let's take a very concrete example now. And let's say the energy here in this case is a sum of four energy terms. The first two depend on x, the observation. The last two depend on y, which is the variable you need to predict, which you're given during training but not during test. And then two other nodes are latent variable nodes. And let's say x is some high dimensional variable. We don't care what it is because we just observe it. And z1 is binary, z2 is binary, y1 is binary, and y2 is ternary. So it can take three values, 0, 1, 2. Now, if you count how many possible configurations of z1, z2, y1, y2 there are, there are basically 24. 2 times 2 times 2 times 3, right? That's 24 different possible configurations of value. So if you wanted to do exact inference, you might have to try all 24 of those configurations and then compute the energy of all 24 of those configurations and then pick the one with the lowest energy to do inference, right? And in fact, those 24 configurations correspond to 24 times 3 evaluations of those energy terms, right, because you have three energy terms. So you will have to compute 96 different energies to be able to do this. And this is a small example where the sequence is short and the variables are binary. This goes exponentially with the length of the sequence. Sorry, with the number of possible values of the z's and the length of the sequence. So if you have n possibilities for each of the variables and the length is l, it's n to the l, right? So it's financial in the length. So this is a small example of how you can do this, but the thing is there is a more efficient way of figuring out what is the configuration of lowest energy. And it's due to the fact that you have those kind of this local structure, right? So z1 can only take two values, and z2 can also only take two values. So this energy term here can only take four values. It's ever going to see only four different values, because it can only see 0, 0, 0, 1, 1, 0, 1, 1, right? So you can imagine pre-computing those four values. This guy is also going to see only four values, right? Because this is binary and that's binary. So you can pre-compute those four values. So that's another four evaluation of an objective function. We're up to eight. And this guy has six different values, because this variable is binary, this one ternary. So it's 2 times 3. So now you have six different configurations. So by pre-computing the four here, the four here, and the six here, you have computed all the possible configurations, basically. And that's going to represent it here at the bottom. So this is called a trellis. And it's basically a graph that has a source node and a target node. And every path in a graph corresponds to a particular assignment of the variables. So for example, if I go through this path, it means z1 equals 1, z2 equals 0, y1 equals 1, and y2 equals 2, let's say. And if I add up the terms on each arc, I get the overall energy. Each arc is basically annotated by the energy term, the value of the energy that corresponds to this configuration. So for example, this arc here is this energy. And that's the value of this energy term for y1 equals 1 and y2 equals 2. So each of these arcs is a value of this energy term. Each of these arcs is a value of that energy term, et cetera. And now, finding the best lowest energy configuration of z1, z2, y1, y2 simply consists in finding the shortest paths in this graph. And to do that, you have to find the shortest path to do this. I only have to evaluate four terms of energy here, four terms here, and six terms here, and that's it. So that's 14. I don't know why I said 16 here. Oh, 16 because of the first two here, yes. So 16 values total. So that's a lot less than 96. And that's because the energy is a sum of terms, and you can use those efficient algorithms to do the inference. So this is a simple case where the output is a sequence. And when the output is a sequence, there is a simple algorithm. And it's basically shortest paths in a graph, in a trellis. So that's just dynamic programming. And it's very simple, it's efficient, it's nice. So to train a system like this, what you need to tell it is you need to tell it, here is the correct configuration of y1, y2. I don't know what z1, z2 is because it's a latent variable. So find me the paths that goes to the correct combination of y1, y2. So you know that, let's say, y1 equal 1 and y2 equal 2. So you know that the correct path has to include this link. And so there's only a subset of paths for the previous ones that are possible. You can't go to y1 equals 0 because that would be incorrect. So basically, only this guy survives. And then the other paths, you can take whatever you want as long as it gets to that point. So you can just find the one that minimizes the energy here. So minimize the energy with respect to z1, z2, so that y1, y2 take the right value, because training y1, y2 take the right value. And the way you train the system now is that you, by grid and descent, you back propagate the gradient of the overall energy for this particular y and this particular x and the z that you obtain by minimizing. You back propagate the gradient of this energy with respect to the parameters of all those energy terms. And you try to make that smaller. You know you have the correct y, the correct x, and whatever z value z must take. Try to make that energy lower by tweaking the parameters. At the same time, you have to make sure the energy of incorrect answers for y1 and y2 that are incorrect is higher. So you take other values of y1, y2, including y1 equals 0 and y2 equals whatever it wants. And for all of those other configurations of y1, y2, you want to make sure whatever energy you get by minimizing over z is higher than whatever you got for the correct one. So your loss function is going to be something where you take the energy of the correct answer, you try to make it lower, and then you take the energies of incorrect answers and you try to make them larger. That's discriminative training for structure prediction. Structure prediction, because the structure here is represented by this sequence of costs. But conceptually, at a high level, it's no different from everything we talked about before, when we have a latent variable, and when we train with a criterion that says, I want to make the energy of the correct answer small and the energy of all the other answers higher. Any questions at this point? I had a question. So based on this diagram, it seems like this network only really takes discrete values. And my understanding was that back propagation isn't really effective if you just have only working with discrete values. So I'm wondering if I'm missing something, or if that's how you connect those things. Right, OK, so in this case, z1, z2, y1, y2 are not variables that you learn. They're labels, essentially. OK, they're discrete. So y1, y2 are discrete, just like the class, the category, the output of the component is discrete. Except you have two of them, but whatever. z1, z2 are basically of the same nature. They're discrete variables. They're not things you can learn by gradient descent. They're just latent variables you have to minimize over to do inference, right? Let's not talk about learning for now. Once your system is trained, I give you an x. And by energy minimization, you find z1, z2, y1, y2 that minimizes the energy. And because you've trained the correct y1, y2 to have the lowest energy among all possible configurations of y1, y2, you're going to get the correct one. Now, for training, the training takes place, basically affects the parameters of each of those factors. Inside those factors, there are parameters, wa, wb, wc, wd, which I didn't represent here. And the way you train the system is you say, at the gradient of the energy of the correct answer, with respect to those parameters, I'm going to tweak the parameters so that energy goes down. That's continuous, differentiable. And then simultaneously, you have the energy of bad answers. I'm going to back propagate gradients. And according to my loss function, I'm going to push up the energy of those so that my energy, my loss function goes down. My training objective goes down. Not my energy. So now what I'm explaining down there with the trail list is the fact that because those variables are discrete, you can't use gradient descent to infer them. And so you have to infer them by combinatorial search, essentially. And the first solution I mentioned with the 96-factor evaluations basically is exhaustive search. Try every combination of z1, z2, y1, y2, and figure out which one has the lowest energy. But the whole point of this is that this is wasteful in the sense that because the energy decomposes into terms that only take subsets of variables, you can actually decompose this into, you can reduce this to finding the shortest paths in a graph, where the transitions in this graph are annotated by the energies that correspond to the value of the variables of the two corresponding nodes. Now, this is a slightly more general form of what I told you about earlier. So this model here with the dynamic time-wrapping is very much the same. The z1, z2 here are basically the paths in the dynamic time wrapping module. The y is which of the word template matches. And the training consists in just doing gradient descent to make the energy of the correct answer small and the energy of the incorrect answer larger, using some loss function, which I leave unspecified at the moment. Professor, when you say that you're finding the shortest path, you're saying that the distance between nodes is the energy between the nodes? The shortest path is the path that has the smallest sum of terms along the edges. So each edge here is marked by an energy. So for example, this edge here is marked by the energy of the term b when z1 equals 0 and z2 equals 1. So if I take this path, I'm going to pay that energy. And if I take this edge, I'm going to pay that energy. And so finding the lowest energy configuration of variables consists in finding the path with the smallest sum of value on the edges along that path. So it's the shortest path in the graph. Is that clear? Yeah, that makes sense. Thank you. And then so the zeros before the black node, those are zeros just because the summation itself is zero energy, right? Is that what that is? Yeah, that's right. Yeah. OK. I'm not counting. Yeah, I don't care which of those paths it is. I don't have an energy term here for like what is the energy of the path. I don't have an energy term here for like what's the value of y2. So if I had an extra factor here that only took y2, then that factor would basically put an energy here. It would replace those zeros. Right? OK. There is a question here coming from the students. So we are pushing down on the energy. Oh, we are actually doing a minimization for training and inference. But then when are we actually pushing up just during training? Right. So let me remind you how training energy-based models work, right? Particularly contrastive methods. And if you have latent variables, right? So you have your energy function, E of x, y, z. Sorry, the arguments are in the wrong order here. It doesn't matter. So you have your energy function, E of x, y, z. I give you an x. So in training mode, I give you an x and a y. I don't give you z ever. But I give you an x and a y. Here is a training sample. It's an x and a y. The first thing you do is you find a z that minimizes the energy E of x, y, z. And you call that f of x, y. Right? But the way you compute it is just min over z of E of x, y, z. Now, for the correct y in your training set, you want that energy to be small, right? And for your inference algorithm to work, at test time, I don't give you the y. I just give you the x. And what you have to find is the y that has the smallest energy. So for this to work, it has to be the case that the correct y has the lowest energy among all possible y's. Right? So what I need to do now during training is that I give you the correct y. And what you need to do is give a low energy to the correct y and give a higher energy to every other possible configuration of y. Right? And exactly how you do this or how all those energies enter in your objective function depends on the objectives that you choose. We're going to come to this in a minute. OK? But almost certainly, you're going to have one term in your last function that's going to say, make the energy of the correct answer low, and another term that's going to say, make the energy of all the other answers or some of them high. And we talked about this last time, actually, three weeks ago. OK? But I'm going to come back to it. Right? Is that clear, or do you need another clarification? I don't see any reply here. OK. All right. Another one would be, what if the factor graph is not possible? Do we have to search for all possible combination of y's? Maybe I think this is the continuous case, I think. No, not necessarily. So I mean, this idea of decomposing into energies also gives you an advantage even in the case of continuous variables, right? Because you can do independent optimizations. Like the combination of values of z1 and z2 only affects EV, even if z1 and z2 are continuous. And so you can do a little bit of the equivalent of dynamic programming there. It's a little more complicated in the continuous case, but it could be possible. Yeah, I mean, the worst situation is when all the z's and the y's enter a giant factor, and there is no way of factorizing it. And then you have to do exhaustive search or some approximate search heuristics, OK? Inference algorithm that minimizes the energy. Yeah, that was actually the case. The student was referring it. And the other student is also satisfied. So you answer both questions. Yeah, don't hesitate to ask if you did something that's not clear. OK, so here is an instance of this. And if you encounter this in the literature, you'll know what it is. It's called a conditional random field. So conditional random field is a very special type of such structure prediction model, where here you have y's or z's. Doesn't matter. Here there are only y's. But the way those factors are parameterized is that there is a fixed feature extractor. It's called f of x, y1, y2 in this case here. And then a weight vector that just computes the dot product of this feature vector with this weight vector. And that gives you a score here, just an energy, OK? The overall energy is just the sum of all those terms. So basically, those are shallow neural nets, if you want. Single layer neural nets with a feature extractor at the input. And then we can think about what type of loss function are we going to minimize to train something like this. So one possibility is to use the negative log likelihood loss. So basically, you say, I want the energy of the correct answer to be low. And I want the log of the sum of the exponentials of all the energies of all the answers, including the good one, to be large. In fact, more correctly, you want the minus log of the sum over all configurations of your outputs of the exponential minus the energy of all those configurations to be as small as possible. So basically, you want the combination of energies of that answers to be as large as possible. And we've encountered that loss function before. That's basically what's used in Softmax. Softmax says that. Softmax says, I want the negative log probability of the correct answer to be as low as possible, the probability of the correct answer to be as large as possible. That's like an energy. But then simultaneously, I compute the log of the sum of the exponentials of all the answers. And I want that to be small. I want all those energies to be large. I want all those probabilities to be small. Softmax does that to you. Or log Softmax criterion, when you back propagate, it does classification. And it does exactly that. It pushes down the energy of the correct answer. It pushes up the energies of all the other answers by computing the log of the sum of all the answers of exponential minus the energies. So here, conditional random field is basically an example of that. But you're not doing classification. You're doing kind of structured prediction. And in the positive case, you have the correct configuration of y1, y2, y4. And the incorrect ones are not incorrect categories as in classification. But there are incorrect configurations of y1, y2, y3, y4. Other than that, it's just back prop. I mean, it's not even back prop here, it's a shallow network. If you put a whole neural net in there, a parameterized by w's, that would be perfectly kosher. And that would be kind of a deep conditional random field if you want, which happened to actually exist before conditional random fields. Here's another idea. You can use a hinge loss. So the hinge loss says, I want the energy of the correct answer to be low. And then among all possible configurations of incorrect answers, incorrect configurations of y's, I'm going to look for the one that has the lowest energy among all the bad ones. And that one I'm going to push up. I don't need to push the other ones because they are larger anyway. So I'm just going to figure out which configuration of y1, y2, y3, y4 is both incorrect, but among all incorrect configurations, has the lowest energy. And I'm going to push that up. And the way I push up and push down is I'm going to put the difference of those two energies in a hinge loss so that the hinge will push the energy of the correct answer to be low and will push the energy of the incorrect, most offending answer to be higher by at least some margin. So let's go to the maximum margin Markov net if you regularize the weights with e square and if you have this kind of linear parameterization of the energy terms. You can also use the perceptual loss. And Michael Collins, who is a well-known professor at Columbia in NLP, actually made a success, built his career around this idea of using perceptual loss for a structure prediction. Does that perceptual loss only works if you have linear parameterization of the factors? If you make them deep neural nets, you can't use the perceptual loss anymore. It's because the margin is zero. We talked about this a little bit before, but I'll come back to it in a minute. Right. So those ideas have been around for a long time. Probably the first people to think about things like this were people who worked on what's called discriminative training for speech recognition. And that goes back to the late 80s, early 90s. So Yoyet and Rabiner, for example, at AT&T had something they called minimum empirical error loss. And this is kind of a particular loss for speech recognition system. They didn't have neural nets. They had some other way of kind of turning speech signals into basically sound categories, if you want. But they had this way of training at the sequence level by not telling the system, here is this sound at that location, that sound at that location, but just telling it, here is an input sentence, here is the transcription of it in terms of words. Figure it out by doing this time warping in the context of Fiedel-Markov models, which is kind of very similar to the dynamic time warping I was talking about earlier. Then, as I said, in the early 90s, people started working on using neural nets to kind of feed one of those kind of structural prediction system. As I said, the first one I know about is by Xavier de L'Encouarnier, number two, for speech recognition. They had a time delay neural net. Yoshe Benjou did his PhD on this and had some results around 1992. And Patrick Hefner, the year after that. Leon Boutoul, Yoshe Benjou, and Patrick Hefner are the co-authors of my paper from 1998 about handwriting recognition, because I hired all three of them at AT&T to work on this problem. They had basically figured out some way of doing this in their PhD thesis. And I knew that was the trick that needed to be worked on for things like handwriting recognition, structural prediction with neural nets. Right, let's see. OK, so here is a way. And I only alluded to this really quickly in an earlier lecture. Here is a way to sort of put this in the context of deep learning. So as I said before, one way to do this in the context of deep learning is you make those factors deep neural nets, basically. They just compute some energy. And they are parameterized by a bunch of parameters. And nothing changes. We know how to do backprop. And we have PyTorch. But here is a slightly different idea, which kind of draws on the same type of model. And this is when the structure is more complex than just a bunch of fixed factors with a known structure, if you want. And so the example I'm going to use here is handwriting recognition. But because there's a long history of it and I have drawings that are prepared for this, that have been around for a long time. But OK, so here the problem we have is that we have a sequence of digits at the input. And we don't know how to segment this sequence into individual digits, because we don't know what the parts are for each of the digits. The four here is kind of broken into two parts. And so what we can do is build a graph in which each path is a possible way of breaking up this sequence of blobs into characters. So I can group. I can make each of the separate pieces a separate character. So that's the path at the top. I can group the first two pieces, three, four, and the left part of the four, and then have the last two be separate. Or I can have the first p by itself, the following two be regrouped, and then the last one be by itself. So what have I done here? I've basically said, OK, the way I do I did inference in the context of circuit prediction was by having energy terms that tell me the cost of a particular combination of variables. So this graph here represents, basically, is an explicit representation of that energy model, as long as I put on those arcs here the energies that are computed by those modules for each value. But what if I just manipulate this graph? So what if the state that I manipulate in the neural net is not a particular assignment of variable together with something to compute energies, but it's directly a graph like this? So a graph like this, basically, you can think of as representing a list of energies for every possible configurations of the variables of interest. It's a compact way of representing a list of energies for all configurations of the sequences of symbols. So what if I build a neural net so that the internal states of that neural net are basically those graphs? And the graphs are just, again, I repeat, a compact way of representing a list of energies for every possible configurations of the variable of interest. Nothing more. So but I can use this for other things that energies. So here, a path in a graph corresponds to a particular way of breaking up this blobs of ink into characters. And each path is a particular way of grouping those blobs into characters. I can run those images. So now this graph is annotated in the neural net. So I can run this graph. And I can see that the graph is annotated by images, not by energies. I can run those images through a conv net. The conv net is going to tell me for each arcs in this graph, it's going to tell me, well, this is very likely to be a 3. And here is the energy for that 3. Low energy, if it's a good 3. High energy, if it's a bad 3. It could also tell me, well, this may be a 2, but with a higher energy. Or it could be a 0 with a higher energy. So it's going to build this graph, which you can call the interpretation graph. Each path in this graph is a possible labeling of each path in this graph. And the labels indicate the categories. And the energies attached to the arcs are basically the energies produced by a conv net here for each of those answers. So I can run those images. And I'm going to look at each of those answers. So this conv net is going to look at this little piece of a 4 and is going to tell me, well, that looks kind of like a 2 with a low energy. Or that may look like a piece of a 4 with a higher energy. The guy that looks at this piece, somewhere here, is going to tell me, well, this is a 4. I'm quite sure of it with low energy. And he's going to tell me, maybe it's something else with higher energy. So it's going to be replaced by 10 arcs. I only represented two here. But essentially, 10 arcs corresponding to the 10 possible categories, each of them with a different energy that is just the output of the corresponding output of the conv net that I applied here. Now inference, again, is finding the shortest paths in this graph. So finding the path with a minimum energy, basically. So finding the shortest path. So it's basically, you can think of it as that selects the shortest path. In fact, it's this one here. I call it the Fitterby transformer. So the word transformer in the context of neural nets was used in 1997. But it's been kind of recycled for something else now. Right. OK, so here's a complete example of how this might work. So again, we have an input image. We run this through this kind of segmenter that proposes multiple alternative segmentations, which are ways to group those blob of inks together. Each path in this graph corresponds to one particular way of grouping the blobs of ink. We run each of those through a neural net, identical copies of the same conv net that just is trained to do character recognition. OK? Each of those conv nets produces a list of 10 scores. So this guy tells me this is 1 with energy 0.1. This is 4 with energy 2.4, et cetera. This guy tells me, well, this piece is 4 with energy 0.6 or 9 with energy 1.2, or whatever, et cetera, et cetera. This guy is going to give me kind of relatively high energy for everything, because that doesn't look good. Same for this guy. OK, so this is the input image. OK? So now I get a graph here. And think of it as kind of a weird form of tensor, right? It's a sparse tensor, really. OK? It's something that says it's a tensor that, for each possible configuration of this variable, tells me the cost of that variable. So it's more like a distribution over tensors, if you want. OK? Or log distribution. It's not normalized, because we're talking about energies. OK, then I take this graph. And I want to compute the energy of the correct answer, because I might want to train the system, right? So I'm telling you, the correct answer is 3, 4. Select within those paths the one that actually says 3, 4. OK, and there's two of them. There's 3, 4 with energy 0.1 plus 0.6. And then there is 3, 4 with energy 3.4 plus 2.4, which is much higher, right? So I get those two paths. And then among those two paths, I pick the best one, 3, 4. OK? So I told the system, here is the correct answer. Give me the path that has the lowest energy, but yet gives me the correct answer. OK? So finding that path is like minimizing over a latent variable, where the latent variable is which path you pick, right? Because actually, it's an energy model, where the latent variable is a path. Professor? Yes? 3 or 4 in the graph should be labeled before training, or that latent variable will figure out for the system? So here, I'm putting myself in a situation where I'm going to train the system supervised. I know the correct answer. This is the desired answer. Think of this as a target. OK? So we just know the target, but I don't know which part is 3 and which part is 4. Well, that's right. So we know what the target is. We don't know which path is the correct segmentation. It could be this path, or it could be that path. And here, what we do is we just pick the one with the lowest energy, which happened to be the correct one here. OK, so. Is this recognition transformer, is each of these N, N box, are each, are those all shared? Yeah. OK. Yeah. This is multiple copies of the same neural net, right? It's just a character recognition neural net in this case. OK, now we have the energy of the correct answer. It's 0.7. It's the sum of 0.1 and 0.6. OK? And what we need to do now is backpropagate gradient through this entire structure so that we can change the weights of that neural net in such a way that this energy goes down. OK? And this looks daunting, but it's entirely possible because this entire system here is built out of elements that we already know about. That's just a regular neural net. And those path selectors and V2B transformers are basically switches that pick a particular edge or not, right? So it's like a switch. It's like max pooling, except it's mean pooling, if you want. OK? Right, so how do I backpropagate? Well, this 0.7 is just the sum of this 0.1 and this 0.6. So if I compute the gradient of this with respect to this 0.1, it's just 1. The gradient of this output with respect to this value here, 0.6, is also 1, OK? Because that is just the sum of those two things. And just backpropagating 1 to a sum, and that's just a y connection. OK, now backpropagating to the V2B transformer, this guy just selected one path among two. So what it's going to do is it's going to take those gradients here and just copy them on the corresponding edge on the input graph and then set the gradients for the other path that was not selected to 0. It's exactly what's happening in max pooling or mean pooling. You're propagating through the switch at that right position, but not propagating next to it. So it's nothing fancy, OK? Path selector is the same. It's just a system that selects the path that could produce the correct answer. And so I'm just going to set whatever through this. I'm going to propagate the plus 1 to the arcs that appear here. So this arc is that one. You see a 0 here, but I'm coming back to this in a minute. It should be a 1 for now. And plus 1 here, and that corresponds to this plus 1 here, OK? And then you can propagate those gradients all the way through the neural net and adjust the weights so that this energy goes down. OK, so that will take care of making the energy of the correct answer small, by back propagating through this thing. Now, what's important about this is that this structure here is dynamic in the sense that if I give you a new input, the number of instances of this neural net will change with the number of segments. The graph here will change. Those graphs will change completely. And so I need to be able to back propagate through this kind of dynamical structure, if you want. And this is situations where things like pytorch are really important because you want to be able to handle those kind of dynamical structures that change with every sample. OK, so this back propagation phase takes care of making the energy of the correct answer small. Now, how do we make the energy of incorrect answer large? Well, there's going to be a second phase where in this case, we're just going to let the system pick whatever answer it wants. And this is kind of a simplified form of discriminative training for structure prediction that uses a form of the perceptron loss, if you want. OK, so the first few stages are exactly identical to what I talked about earlier. But here, the Viterbi transformer just picks the best path among all the paths. You don't constrain it to pick the correct one. You just let it pick whatever it wants. So it's going to pick the best path that has the lowest energy that it gives the correct answer. Now, the energy you get out of this necessarily is going to be smaller or equal to the one you got previously because this one is the smallest of all the possible configurations. The other ones is not the smallest of all possible ones. It's only the smallest of the correct ones. So this guy necessarily is going to get smaller. So we don't pick the one. Sorry, I lost you. Do we take out the one that are actually producing the correct sequence or not? OK, so you have two forms of it. The form I'm explaining here, you're not taking out the correct one. OK? In fact, in this particular example, it wouldn't make any difference. But if you want the system to work properly, what you should do here is have a path selector that takes out the correct answers. Yeah, exactly. Yes, yes, yes. That's right. So you would want to tell the system, give me your best shot at a wrong answer, the lowest energy wrong answer. Exactly, the white bar in your paper, right? That would be the white bar. Here, I'm not doing this. I'm just asking it, what's your best shot? I don't care if it's correct or incorrect. All right? We'll come back to this in a minute. OK, putting this all together, my loss function is going to be the difference between the energy I get for the correct answer minus the energy I get for whatever answer the system wants to produce. OK? So I compute the difference between those two, and that's my loss function. Now, I can back propagate through this entire thing. I told you I was back propagating just to make the energy here small. I'm not actually doing this. I'm computing a loss function here, which in this case is just the difference between this and that. And I'm back propagating gradient through this entire structure, right? So whatever path appears only on the left will get a plus 1. So this guy gets a plus 1 because this edge only appears on this side, and so it gets a plus 1. The path that only appear on the right side, like this guy, sorry, like this guy, get a minus 1. OK? The gradient here gets a minus 1 because you have a minus sign here. So the gradients, when they back propagate, they end up being minus 1. OK, this guy also gets minus 1. This guy here appears on both sides, and so the minus 1 and the plus 1 cancel, and this guy gets 0 gradient. It's in the correct path, but it's also in the path that the system produces, so you shouldn't change anything. It's OK, right? So the guys that have a minus 1 are the incorrect paths. The other paths that are in the incorrect answer, but not in the correct answer. The one that I have a plus 1 are the edges that are in the correct answer, but not in the incorrect one. OK, the one that has 0 are in neither, or they are in both. Right? So now you get gradients here. Those gradients are gradients for all the outputs of all those neural nets. You back propagate through the neural nets and update the weights. OK? And if you do this, then the system will eventually minimize its loss function, which is the difference between the energy of the correct answer and the energy of the best answer, whatever it is. That loss function is the perceptron loss. And we talked about this before. In fact, let me go to this just now. OK. Right, so the loss function we just talked about is the second one in this list here. This is the energy of the correct answer minus the energy of whatever answer your system wants to produce. OK? That's the perceptron loss, or the generalized perceptron loss, if you want. And the bad news about this loss function is that it doesn't have a margin. So it doesn't ensure that the energy of the incorrect answers is larger, strictly larger, than the energy of the good answer. It might just collapse. It might just make every energy 0 or the same. OK? So it's not a good loss function to use. It just happens to work when your energy is linearly parameterizing w. But in the general case, it doesn't work. So you're much better off using something like this, a hinge. But in the case of a hinge, what you need to have here is this y bar, which is the energy of the most offending incorrect answer. So basically, in the second phase, as Alfredo was pointing out, instead of picking the path with the lowest energy, the answer with the lowest energy, you constrain the system to pick a wrong answer. And then among all of those, pick the one with the lowest energy. And then you take the difference between those two energies, so energy of correct answer, energy of most offending incorrect answer, compute the difference between them, and plug this into a hinge so that you want this energy to be lower than that energy by at least m. OK? And this is the kind of objective here that Driancu and Boutou used. So it looks very similar. This is something called NCE that people in speech recognition produce. This looks a bit like a sigmoid. So basically, it's a sigmoid function. You take the difference between the energy of the correct answer and the energy of incorrect answers, and you plug them into a sigmoid. It's 1 over 1 plus exponential minus blah, blah. And so it basically wants to make that difference kind of small, but then it doesn't care if it's too small. And if it's too large, it kind of gives up. And then you have this is the negative likelihood loss. So make the energy of the correct answer small, and then make the log of the sum over all answers of e to the minus the energy of those answers large. OK? Make the minus log large, which means make the log small, which means makes those energies large. OK? And then the Yoje-Rabiner thing I was telling you about is another form of objective function that sort of pushes down and push up. Most of those are derived from sort of probabilistic principles, but many of them aren't. OK? All the ones at the top aren't. Hey, professor. I had a question about the margin of the losses. I think in a previous lecture, we discussed how the negative likelihood loss converges to the perceptron loss when beta is going towards infinity or something like that. But how come the NNL loss has a positive margin and the perceptron loss doesn't? Well, just because the temperature is, I mean, the 1 over beta, because beta is not infinite, because 1 over beta is not 0. So yeah, I mean, if you take the limit of this for beta goes to infinity, this 1 over beta log sum converges to min over y of energy of W y x i. And so that's exactly what the perceptron does. OK? So the perceptron is a zero temperature limit or infinite beta limit of negative likelihood. Indeed. But the margin is essentially infinite in this case, whereas the margin here is 0. OK? So there's a bit of a discontinuity here. Admittedly, though, if you make beta very large here numerically, the energies of anything but the lowest energy term, I mean, the role of the importance of the terms for values y's in this sum will kind of diminish. And so numerically, it may actually start behaving very much like the perceptron early on. There's a problem with it also, which I mentioned before, which is that this wants to make the energy of incorrect answers infinite. And it's not going to make them infinite, because as they get larger and larger, the gradient of this sum with respect to each of them gets very small. But they're going to get pushed to infinity. And so it's not necessarily a good thing. The hinge is better. It's not necessarily a good thing. The hinge is better in a way, because it just says, well, I just want it to be larger by some value. I don't care how much. I give you another form of the hinge loss in the past, where you have a sum over y. So instead of just taking the most of any incorrect answer in the hinge, you take all answers, and you sum over all of them. And for each of them, you have a different margin, on the yi and the yi bar. That's a more general form. It might be more expensive, depending on how you compute it. There are a bunch of questions here. So first, there are a few students asking about the segmenter. Do we learn the segmenter? Is he also, do we back prop there? Is he a latent variable, something? In this particular case, no. It's just handcrafted heuristics. But you could imagine building a differentiable segmenter, and then back propagating all the way through it. Yes. This was actually one of the original plans when we built this thing in the mid-90s. We never got to it. And the reason we never got to it is because there is another approach to character recognition, which is the sliding window approach, which I explained. So you just take the input. You never segment it. You just apply the neural net to every location on the input, and you record the output. And then you do structure prediction on top of that. So now you have to have some sort of sequence models that tells you, if I observe 3, 3, 3 blank, blank, 2, 4, 4, 4, 4, it's actually 3, 4. The blank and the 2 basically are spurious. So you would have a grammar that would indicate, what are correct combinations of characters on the output? And you would do this to finding the shortest paths in the graph. So the graph on the bottom is generated by the segmenter, is it? Correct. The one with the one hop, like two hops, or two hops, one hop, one hop. Yep. OK. You could think of this as a simple form of graph neural net, or a specific form of graph neural nets, where this entire deep learning architecture manipulates graphs instead of tensors as its way of representing inputs, or states. So think of this as a multilayer architecture, where the states are graphs, are annotated graphs. And then you can have modules here that turns graph into other graphs. We used to call these graph transformers. In fact, this is called a graph transformer network. So this is from 1997. This is not recent. And in fact, 1996. The first paper is in 1997. And then those can be, as long as the way you compute those scores is with differentiable functions that are parameterized, you can backpropagate gradient through this entire thing. And I can demonstrate how you do this in this particular case. I see. Then there's another question, which I may not be able to understand, which is, what are the dimensions of the interpretation graphs? I don't know what dimensions. Dimensions. So basically, each arc, you can view it in two ways. The way I've represented it here is that each arc has a label, 3 here for this particular edge, and an energy, 3.4. And then the number in parentheses is the gradient that comes from the top. So here is a scalar. But here, on the graph at the bottom, the annotation is an entire tensor. It's an image. OK. So I don't specify what you can annotate the graphs with, as long as whatever it is that you annotate it with, if it's computed by some continuous functions, you want to be able to propagate gradient through it. Now, another way of representing this graph is not by having a separate arc here for each category, but by having a vector. And the vector just contains the list of categories together with a list of scores. So 0 through 9. And then the list of energies for each of the thing. And that would be just one arc, but it would be annotated by this vector. I see. I see. OK. But because this guy, the Viterbi and the path selector selects individual paths, it's clear if you write it this way. How you implement it is up to you. So those graph transformer networks, there are speech recognition systems today that, so basically in a speech recognition system, this whole way of inferring the correct sequence using, for example, a language model is called a decoder. So a decoder, at the output of a neural net, generally you have a sequence of vectors that indicate the score, the energy, the probability, whatever you want, of individual sounds or phonemes or sometimes words. And then you have to pass this to a language model that tells you this sequence is possible, that other sequence isn't. And then it picks out the best possible interpretation according to the language model and according to the scores produced by your system. Let's go to decoder. And the big question is, how do you back propagate gradient to the decoder? There's only a very small number of speech recognition systems today that actually do this. The latest one, I think, is by Ronan Colbert, the original author of Torch. And here is how this works. So let's say you want to, so this is a particular concept called graph composition or graph transducers, which kind of explains how you can combine graphs with each other, for example, together with a language model. So you can think of a language model as a graph. You can represent it as a graph or as a neural net. It doesn't matter. But I'm going to represent it as a graph. So here, this is basically a lexicon that is represented as a tree, tree, T-R-I-E. And it can represent the words barn, butt, cute, cure, cap, cat, and card. So each terminal node is a word. And each path and each terminal node corresponds to a path. And each path is a word, basically. The sequence of symbols is a word. So let's imagine our entire lexicon is this. And we have a neural net or something that produces a trellis of possible interpretation that corresponds to this graph. So it says, the first character, I can't tell you exactly what it is, but I think it's C with energy 0.4. It's O with energy 1 or is D with energy 1.8. It says it's a character recognizer. And the second one says it's X with energy 0.1 or A with 0.2 or U with 0.8. And the last one, P with 0.2, T with 0.8. So what we need to do now is, what is the best interpretation of this, the best path in this, that also happens to be present in our lexicon? And the operation you need to do for this is a concept that was invented by Fernando Pereira, who is head of the NLP research group. And more than that, actually, at Google Research. But that was back when he was at AT&T Bell Labs in the early 90s. And it was implemented in an open source library called the FSM Library, which was implemented by Maria Mori, who is a professor at NYU. He did this when he was at AT&T and then at Google. And the way you do this is this composition operation. So you start from the initial node of both of those graphs, and you say, is there a path I can take in this graph that is legal here? So here, I can have B or C. And here, I can have C, O, or D. Only C is common between the two. So I'm going to combine those two by saying, in my output graph, I'm going to have one of those transitions, which is the only transition that is common here and here. So now, I'm in this node here. I'm in that node there. Here, I can take x, a, or u. And here, I can take u or a. So I have two possibilities, u or a. a with 0.2, u with 0.8. And so I add those two here. So basically, what I'm doing here is whenever I come at a node and I have to take a transition, I find which of the nodes that can be in here. I look at the possible transitions. And if the transition exists, if there is one that matches, I create a going arc. And I annotate it by the energy of whatever arc I had here. If I also had an energy in this arc, I could just add those two terms or combine them in some way. OK? So now, I have two nodes here. And the last one can be p or t. So I can start from those two nodes and have either p or t. And it can be either in this node or this node. So I can go here with t, or I can go here with p, or here with t. And I end up with those three things. So now, my interpretation is either cap or cap or cut. These are the three interpretations that are grammatically correct and, at the same time, are present as a possibility produced by my neural net. And I just have to find the shortest path there. And that's my answer. OK? So that operation here is called graph composition. And it basically allows you to basically combine two graphs, essentially, or combine two knowledge bases that are conceptually graphs, but they could be represented by neural nets. So here, I can represent this thing, this whole language model, by neural net. When I'm at a particular location, it means, when I'm here, it means I observed the sequence cu. And then I can run cu in my language model and ask my neural net to predict, so what's the next letter? And my neural net will say, well, it's either t or r. In its softmax output with the 26 letters, it's going to tell me t and r have five probabilities. The other ones have low probabilities. Or if it produces energy, it's going to say, t and r have low energies. The other ones have higher energies. OK, so it doesn't matter how you actually represent this. If it's represented as a neural net, then implicitly, then you can train this neural net. You can train the language model, because you can back propagate gradient through this entire thing. So that would be sort of an example of what people call differentiable programming. I mean, basically, the way to implement this is a really, really complicated program. What you need to do is back propagate gradient through this entire program. And this program has loops and ifs and recursions. So not trivial. I'm not telling you how we actually implemented this in 1994, 1995. But that's basically how our check reading system back in those days was implemented. So the loss function we used in the end to train the system was actually the negative low likelihood loss function. So negative low likelihood says you have an interpretation graph here where each path is a possible interpretation. And the sum of the energies along the path is the energy of that interpretation. You give it the correct answer. You select the paths that have the correct interpretation. Same on the other side. So here you combine with the grammar. So the grammar restricts the sequences to those that are syntactically correct. So if it's an amount on the check, for example, it's got a decimal dot. It might have a dollar sign in front. It might have stars. There's a grammar for it, which you can build by hand. It's a finite state grammar. You compose those two graphs and you get the set of paths in this graph that actually contain grammatically correct interpretation. And now you don't do Viterbi. You do forward. What is forward? So Viterbi computes the path in a graph that has a minimum energy. Basically, it minimizes with respect to the latent variable where the latent variable is a path in the graph. Forward computes the log of the sum of the exponentials of minus the energies of all the paths. So basically, it marginalizes over the latent variable, which is the path in the graph. Now, it turns out that you can do this very easily. And it's very cheap. It doesn't cost more than doing Viterbi. And you can backpropagate to it. And I don't have a slide for this, so I'm going to switch to drawing it. All right. So you have one path. You have another path. And maybe another path that skips over here. And each of those guys has an energy, right? E1, E2, E3, E4, E5, E6, let's say. So if you do Viterbi shortest path in a graph, you're just going to find the path that has a minimum energy. But what I'm going to talk about here is computing. So think of the path as a latent variable z. And remember, to compute f of x, y, you can do two things. You can do min over z of e of x, y, z. And remember, z is the path. Or if you want to marginalize, you do minus 1 over beta log sum over all z's of e to the minus beta e of x, y, z. And that's marginalizing. It's a discrete sum if z is a discrete variable, which is the case here, because it's a discrete path. So this is f beta of x, y. And you can think of this as f infinity, right? This is the limit for beta goes to infinity of the one at the bottom. Professor, is the unip function some simple loss function or neural network to be trained in the model? I didn't understand the question. I'm sorry. Can you repeat? Is the energy function here some simple function, like loss function, or some neural networks to be trained in the model? It doesn't matter. This is the energy that you use to measure the score of an answer y. The observation is x. The answer you are supposed to predict, in this case, a sequence of symbols, is y. And so each of those things here is annotated with a particular y. So this could be each of those arcs is annotated by a symbol. So let's say a, and this is b, and this is b, and c, and this is, I don't know, x, and this is g or something. So here, the possible interpretation for y. So y would be a string of symbols. And it can be either a, b, or it can be b, c, g, or it can be c, g, if this is c. That's an x. That was an x, right? E, c, x. I'm sorry. I'm sorry. You're right. This is a 6. It's x. Thanks. You're right. Sorry about that. Those are the only three possible interpretations in that graph that can come out of that graph. And z is which path you're taking. So if z is the first path, then the output would be a, b. If z is the second path, the output would be b, c, g, et cetera. OK, thank you. But this is not used for training. This is the energy function used for inference. OK, so the log of the sum of the exponentials of the energies for all the path, the sum over all the paths, OK, so the sum here is over path. OK, that's like marginalizing over z. And we saw that before, right? We explained that before. Now, how do I compute this? Now, it turns out it's very simple. It's done using what's called a forward algorithm. I'm actually going to draw a different graph. The graph is going to look more like the one I had before, which was kind of like this, right? So this is the first one. So this is the second one. OK, so y is a sequence of three symbols in this case. And the first symbol can be, oh, I'm sorry. I'm using nodes here instead of arcs. That's a little confusing. Let me correct that. OK, so each path in this graph is a possible interpretation. So for each edge I'm taking, I'm emitting a symbol. And I don't have skipping connections. So here, they all have exactly four symbols coming out, because every path is of length four. But how do I compute this sum? This sum, basically, I go at a node. OK, when I'm at a node here, let's take this node right here. I'm going to call it red. OK, the cost from the input node, the energy from the input node to that node is the log of the sum of the exponentials of the energies from along all paths to go from the input node to that node. So and, of course, I have an energy right here, which is just the energy of that branch. I have an energy here, which is just the energy of that branch. I have an f here. And to compute the f for this guy, I just compute the log of the sum of the exponentials of those two guys. OK, right. So let me unwrap this. I've got an energy here, y1. I've got an energy here, y2. I've got one here, y3. Sorry, I want here, this guy is e4. All right, the f I'm going to get here. OK, so this is, I'm going to call this, and I'm going to call it anything. So the value I should have here is e1 plus e3, exponential of that minus beta that, plus exponential minus beta e2 plus e4. And I take minus 1 over beta log of this. So how is the e1 calculated? I mean, the smaller e1. Whatever comes out of your energy, right? Each of those graphs, as I said, you represent possible interpretations as a graph. Each node in the graph has an energy. And a complete energy of the function, which is an f of x, y for a particular y and a particular z following a path, is e of x, y, z. And now what you want to compute is log of sum of e to the minus e of x, y, z, which is the marginalization over all the paths. So it's basically combining the cost of all the paths in kind of a soft minimum way, right? But the algorithm is super simple because you maintain a variable basically for each node. For each node, you compute a variable alpha for a particular node. And it's going to be equal to minus log sum over all the nodes that are up from i. So all the parent nodes of i. And then you do e to the minus beta the alpha k. And you add to it e of ki, which would be the energy of the link coming from node k to node i. OK? That's called a forward algorithm. And if you've heard about this, it's actually a special case of the so-called belief propagation algorithm. So belief propagation is a general algorithm for graphical algorithm. So it's a general algorithm for graphically defined models, and the forward algorithm is a special case when your graph is basically a chain graph. OK? But I'm not going to go into this. You can take a course on vision nets or graphical models or probabilistic methods. You take a course with Rajesh. He will explain that to you. This would take us to the next slide. This would take us too far. But that would be kind of the thing. OK, so now this is just a feedforward neural net where basically where the function at each node is a log of sum of exponentials plus addition of some term. Right? This is a neural net where alpha i is the activation and of the neurons, if you want, the nodes. And the weights are those e of ki that link unit k to unit i. OK? And the operations you do is log sum exponentials. So instead of a neural net in which you do a product by a weight and then you sum the products, here you add the weights and then you do a log sum exponential. Algebraically, it's actually equal to the sum algebraically, it's actually equivalent. This is like weighted sum in the log domain. OK? But the point is you can do this forward prop, this forward algorithm, and you can back propagate gradient. So whatever f you get at the end, by the time you've run through this network, at the end here, you basically get f of x, y. The value of that node, the alpha here, is f of x, y. And you've eliminated z by doing this log of sum of exponentials over all paths. Right? Now, if you want to compute the gradient of f of x, y with respect to each of the e, ki, which themselves probably are outputs of some neural net, you can do that. You can back propagate through this network. OK? It's a neural net whose, again, whose structure is dynamic. It changes from example to example. But you can clearly back propagate gradient through it. And that's basically what we do here. In this system, we run the forward algorithm on this graph, and we get a score, which is a log of the sum of the exponentials of minus the energies for all the paths. OK? We do the same here. We get another score. I mean, it's minus log of the sum of the exponentials of minus the energy. OK? This guy necessarily is larger than this one. You compute the difference, and that's the negative log likelihood loss. It's the difference between the log sum x of energy over the latent variable of the correct answer and log sum x over the latent variable of every answer. Although here, these are grammatical answers, but it's the same. And then you just back propagate gradient through this entire thing. And then you just back propagate gradient through this graph here, which you can think of as some sort of weird neural net with where the node operation is this log sum exponentials. And you get gradients for each of the e's, and each of the e's are the values that you get here, which are produced by the neural net. And so you get gradients with respect to the parameters of the neural net. OK, so that's structural prediction for you. There's a couple more topics I wanted to talk about today, and variational methods in Bayesian inference, because we talked about it in the context of VAE, but without really explaining what it was. At least I didn't. Maybe you did, Alfredo. But the general form of variational inference. Or I can talk about the Lagrangian formulation of backprop. I can actually do both, because it's kind of fast. It will take more than five minutes, but you can leave whenever you want. OK, then let's go for both. The Lagrange thing is short, so I'm going to do that first. OK. OK, so you can formulate backprop as a minimization under constraint. So you have an input variable x is going through a first functional module. Let's call it f1 of xw1. And it produces, we're going to call it z1. Actually, let me call this f0. OK, and then the second one is going to be f1 of z1w1. And that produces z2, et cetera. So and then at the end, we have the last module, and it goes into some sort of energy term. OK, let's say it is output if we do supervised running, but it doesn't matter. It's just a cost. Let's call this guy zn. Zn and y. OK, so the forward pass can be written as zk plus 1 is equal to fk of zk wk. OK, that's just a forward pass. And then you have a cost function. And then you have a cost function c, which you want to minimize, which is c of zn y. That's just whatever cost function you want to minimize. Now, you can write the entire back problem as a minimization of the constraint. And the statement is minimize c with the constraint such that the above constraint is verified. And when you have a minimization problem and a constraint, the best thing to do is to write a Lagrangian. So you write a Lagrange function. And I'm going to tell you right away what is this function of. And for a single training sample xy is going to be the cost zn y. Well, the other thing we might say also is there is another constraint, which is that z0 equals x. Plus sum over layers. So we're going to have an index k from 1 to n. And Lagrange multiplier. And a constraint which should be equal to 0. And that constraint is going to be zk plus 1 minus fk of zk wk. And I need to, I'm going to call this lambda k plus 1. And this is going to have to be up to n minus 1. And probably starting at 0, actually. So this is a Lagrangian formulation of my back problem where basically you have an overall cost function. And I have a bunch of constraints. The constraints are that the input to layer k is the output of layer k minus 1. So this Lagrangian is a function of x, y, all the lambdas, the lambda k's, all the z's, and w. All the w's. So what I need to do now to do this minimization of the constraint is I need to do dl over d lambda k equals 0. And if I, this condition, the gradient of l with respect to lambda k is just this. Right? Lambda k plus 1, I'm sorry. It's just this parenthesis. So I just get zk plus 1 equal fk of zk wk, which is just the forward propagation formula. If I do dl over dzk equals 0, it's a little more complicated. So I get the first term, which is lambda k, because I'm going to have a zk here. And that zk is going to be a factor of this lambda k here. So I guess I get lambda k transpose. And then I get minus. And then for this zk, I have a lambda k plus 1 here times the Jacobian function of this with respect to z. So it's going to be something like dfk of zk w over zk. That's it. Times, ooh, OK, times lambda k plus 1 transpose. And that should be equal to 0. So I'm going to rearrange all that stuff. And what I get is lambda k equals dfk of zk w with respect to zk. So the Jacobian matrix of f transpose times lambda k plus 1. And funnily enough, this is a very simple formula. Funnily enough, this is actually the backpropagation formula. This is the thing that gives you the gradients at level k. Given the gradients at level k plus 1, you multiply by the Jacobian of the box that you propagated through. So you don't have to think about it. You just kind of write backprop as a constraint optimization problem. And backprop naturally comes out of it. Now, the first people to figure this out were people in control theory. In fact, the first people to figure this out were people like Lagrange or Euler or people like Hamilton and Jacobi. That's the classical formulation of mechanics, if you want. And in mechanics, when you write something like this, you say, where C of zn y would be the energy of the system, like a potential energy of something like this. And then the other term basically implements the dynamic constraints, the fact that you have a differential equation that tells you that the state at time q plus 1 is a function of the state at time t with some constraint. So that's the dynamic constraint. And then if you do this, you figure out that if you have an energy for every C of k now as a time step and the forward propagation as a differential equation that governs a system, and then you could have a term here that is not just an energy term at the output, but basically an energy term that you can have one of those terms for every time step. So the Lagrangian function would be sum over time steps of C for that time step of zk. And there might be some external variable. Let's call it yk plus those constraints. k plus 1 minus fk of zk wk. k. And the sum takes place over all things. When you look at Lagrangian formulation of classical mechanics, that's basically the way they are expressed. C is the energy and the second term are the constraints. Now, in classical mechanics, the lambda variable is actually the momentum. So z is the position variables and lambda becomes the momentum. So the second term becomes basically the kinetic energy or the negative kinetic energy more specifically. Anyway, this is just an apartheid. Why am I telling you this? Because conceptually, the mathematics of this is super simple if you know Lagrangian minimization of the constraint. And this is something you can use also in a new class of model called neural ODE. So neural ordinary differential equation. And this is something Alfredo wanted me to talk about. Thank you. So neural ODE. So this is a type of neural net, which is basically a recurrent neural net, where you say my state at time t plus delta t is equal to my state at time t plus delta t times some function, which is a constant function of zt and a bunch of parameters. Which are fixed. They don't vary with time. I can write it this way. I can write it in a differential equation form where I can say dz over dt at time t is equal to f of zt w. So that's a differential equation, ordinary differential equation. In this case, a first order. Well, it depends what's in z. But I can express just about anything this way. And the question is how do you train something like this? And basically, if you write the Lagrangian formulation of this, it's trivial. So there are two ways you might want to train something like this. You might want to train the system to map one point z at time 0 to a particular point z at time big T after some trajectory. You may not want to constrain the trajectory. You just want it to reach that point. And you don't care what it does afterwards. You just want it to reach that point. And so you can have a cost function, which is basically the distance of z to that target point z of big T. I'm going to call it w. I'm going to call it y. And then so the target would be a point y. And then your cost function would be the distance between zt and y, or something like that. Another thing you might want to do is you might want to train the system so that it has stable states at particular points y. So that for a particular point y that you decide from your training set, f of this particular y, w, equals 0, which means that state is going to be stable. The trajectory, so you would have a point y in your space. And then you might start from the point that when you arrive at that point, the dynamics stops. So if you formulate this in terms of Lagrangian, it becomes super simple in the sense that the gradients now, contrary to backprop through time. So if you were to unfold this network here, consider this a recurrent net. And you unfold it in time. To compute the gradient of the endpoint with respect to the parameters, you kind of have to, and with respect to the initial, you have to backprop again through time. You have to kind of remember the entire sequence and then do backprop through time. But if what you're interested in is just learning a stable state like this, then you don't need to store the trajectory. You start from some point, you converge to some other point, and you want to make y a stable state. What you just need to do is ensure that this is true. And the way you can do this is basically by minimizing your cost, which would be something like the norm, the square norm of f of y, w. But the point is that you don't need to remember the entire trajectory. The gradient with respect to the weights is the same as the gradient with respect to the time. The gradient with respect to the weights can be obtained by running a very similar type of differential equation backwards in time. And I'm sorry I'm not going to be able to go into details of that. I can refer you to a paper. So this is an oral ADE paper, which doesn't really mention that. But there is an earlier paper of mine called Theoretical Framework for Backpropagation. And basically, it explains this Lagrange formulation, as well as how you apply it for recurrent nets that might be sort of continuous in time and that you want to train to go to particular fixed points. This is a paper from 1988. It's not recent. You'll find it on my web page, down on the bottom of the publication page. But I don't want to go into the details of this. And there is the Bayesian stuff. Bayesian stuff, yes. People are still here. I don't know. They are enjoying it. Stick around. You don't have to. I don't want to. It's not the Bayesian stuff. It's more the variational. Oh, sorry. Yeah, you're right. I am not confused. So let's say I have some loss function. And I'm going to talk about a loss, not an energy. But it's the same thing. And my loss function is a marginalized loss function over a latent variable. So remember, I talked about this before. If you have an energy function, f of x, y, let's say, and you want to derive it from a more elementary energy function, E of x, y, z, by doing the equivalent operation of marginalizing over z's. Yeah, so the way you marginalize is you do minus beta e to the minus u sum over all z's. And you take minus 1 over beta log. So this is the formula for marginalizing a latent variable. And that also applies to loss functions. Whatever function you want to marginalize over a latent variable, that's what you compute. So let's say you have a model with a latent variable. And you don't know what the value of the latent variable is. And you want to compute what is my loss, which would be the log of some of the exponentials of the loss over all values of the latent variable. So I'm kind of marginalizing over this latent variable. Let's say it's a rational autoencoder or something. I have a latent variable in the middle. And I want to compute the minus 1 over beta log sum over all values of my latent variable of e to the minus beta l. I'm using l, but I could use just any symbol here. This is whatever function you need to compute. But it's useful for things you want to minimize, like energies or objectives. So here, this loss function here is no longer a function of z. It's only a function of x and y. I can rewrite this as the following. q of z e to the minus beta l of x, y, z over q of z. I've just multiplied and divided by q of z. I've done nothing. Now q of z here, I assume, is a probability distribution over z. So it's a density function that integrates to 1 when I integrate over z. So you can interpret this integral as the expected value with respect to that distribution of e to the minus beta l of x, y, z divided by q of z. Now, let's look at the Now, q of z here, I assume, is a probability distribution over z. So it's a density function that integrates to 1 when I integrate over z. So you can interpret this integral as the expected value with respect to that distribution of e to the minus beta l of x, y, z divided by q of z. Now, here's the trick. There's something called Jensen's inequality. And Jensen's inequality says something very interesting. It says, let's imagine I have a convex function, like say, minus log. I'm not drawing minus log here very well, but it looks a bit like minus log. Now, if I take a bunch of values over a range and I compute the average of the value of the function, minus log, over that range, because the function is convex, I'm going to get a value that is smaller than the function applied to the average. So my diagram is not that great because the curvature is not high enough. Let me draw it again. So here's a convex function. I'm going to vary a variable here over a range. And I compute the average of that function over that range. So it's going to give me some value probably around here. And then I'm going to take the average of all those values in this range, the average of the range, the midpoint of that range, and pass it through the function. And I get something below this. So I didn't draw this properly. So if I take the average of this plus this, this, this, this, this, and this, I'm going to get something that's higher than that because the function is convex. If the function was straight, then the average after going through the function would be the same as before going through the function. If I computed the average of all those values, all the y values of those points, I would be at the same place as the function applied to the average. So you can make the intercept between the convex function in a line that goes from those two extremas. That's right. Yeah, there you go. So the mean would be at that point. That's right. So the mean applied to the function values would be something like this chord. It wouldn't be that, but it would be close to that. Now, let's forget about a function like that. Actually, I should have explained this in a much simpler way, which is two values. Let's say it's just a sum of two terms. So you have a convex function. You have two values. The average of those two values after I pass through the function. So basically, let's say this is my function is minus log. So the average of minus log of, let's call it x1 and x2, minus log of x1 plus minus log of x2 divided by 2 is this point. And then minus log of x1 plus x2 divided by 2 is that point. And that's below. And Jetson's inequality basically says if you have a convex function like minus log, then you have a convex function. So that's the point. So that's the point. So that's the point. So like minus log, then here I computed an average. But it's true for any expectation. It says the expectation. So basically, convex of expectation over any distribution of some function h. Well, that would be z in that case. OK. I have to write this in the proper way. It's less than or equal to sum over z qz of this convex function applied to h of z. OK, that's Jetson's inequality. So this works with minus log, which means I can write that the function of x1 my objective function here is less than minus 1 over beta, which I'm going to actually put inside. I take this back. It's going to be less than sum over z of q of z times minus 1 over beta log e to the minus beta l of xyz divided by q of z. OK, obviously, the minus 1 over beta log exponential minus beta cancel. So what I get is sum over z q of z l of xyz. So that's just the expected value of l averaged over the distribution q of z. And then I get a second term. And the second term is the negative log, 1 over beta, the negative log of q of z. But q of z is a denominator, so I'm going to bring it to the top. That's going to cancel the minus 1 over beta. And so I'm going to get something like plus 1 over beta log q of z. And I can write this again as sum over z of q of z l xyz plus sum over z 1 over beta q of z log q of z. This is the average loss energy, whatever it is. Let's call it energy. And this is minus 1 over beta times the entropy of q. The entropy of a distribution is minus sum over the random variable of distribution log distribution. So this is minus 1 over beta e entropy. So what does that mean? What it means is that I have an upper bound on my last function that I want to minimize, l of xy, for my energy that I want to minimize, whatever it is. Whatever function it is I want to minimize. I have an upper bound on it now. And this upper bound is the sum of two terms. One is the average of the energy I get by basically sampling the latent variable. So I have a system with a latent variable. I sample some value of the latent variable according to some distribution q, which, of course, I pick a q from which I can easily sample. I can choose q whatever I want. Whatever I want, right? So I pick a q, Gaussian, whatever. And I pick a z according to that distribution. And I compute the expected value of the function I want to minimize with respect to that q. And I can do this by just sampling z from the q distribution and then computing the average of the function l that I obtain as a result. So that's the first term. And then the second term is the entropy of z. So what I need to do is basically change my distribution z in such a way that the entropy is maximized. So if it's a Gaussian, for example, it means I need to make the variance of z as large as possible. But if I make it too large, then the average energy term is going to blow up. So I need to optimize this overall, this whole function. And if I optimize this whole function with respect to q and with respect to whatever parameter of l I want to minimize, because l is an objective function with respect to, I don't know, weights of a neural net or something, right? So I can simultaneously minimize with respect to those parameters w, which I didn't write here, and with respect to the q distribution. And if the q distribution is in a family that's wide enough, then this upper bound will be fairly close to the actual loss that I want to minimize, which is the marginalized loss over the latent variable. But I never need to actually compute explicitly the marginalization of a latent variable. So this is a way of marginalizing over a latent variable without actually doing it, by marginalizing over a latent variable that you can sample from, like a Gaussian. But what you have to do is maximize its entropy. And when you think about variational autoencoders, that's just what they do. They minimize the expected reconstruction error, which is l of x, y, z, with respect to the parameters by sampling the latent variable z according to a Gaussian distribution. But at the same time, there is what's called a KL term, which is the second term. It basically tries to make the distribution as high entropy as possible. Now, this formula is exactly identical to a formula that people use in statistical physics. So physicists have a very famous formula, which is this. It says the free energy is equal to the average energy minus the temperature times the entropy. What they call the temperature is what I call 1 over beta. OK? And that's identical to this formula, because here this is the minus entropy. OK, this is the same formula. So what we're minimizing now is a free energy. And if Q of z is sufficiently powerful to actually be the actual distribution that it needs to be, then the inequality becomes an inequality. But that's the idea of variational methods. You basically use gensense inequality to turn the log of an average into the average of the log. OK, and now you get an upper bound. Right? It's this step right here. When I turn the equality that was here into an inequality by applying gensense inequality, what I did is that I put the log inside. There was a log outside, and I put it inside. So now it's the expectation of a log instead of a log of an expectation. OK? And then because this is a ratio, it's a difference of two logs. And because this is exponential of an energy, and I take the log, and I divide by beta, I get this kind of nice formula. And now this is called a variational free energy. OK? And you get the expected value of the energy minus the inverse temperature times the entropy of the distribution. Now, how you minimize this is another story. But what that means now is that you can use a surrogate distribution to sample your latent variable from. You don't have to sample from the real distribution, which is the same as the real distribution. You know, here, the real distribution of z is really complicated. I should have written it. The real distribution of z, P of z, is e to the minus beta. This actually would be a different beta. It doesn't have to be the same. E of x, y, z divided by the integral of e of x, y, z. That's the real. If you plug this P into here, the inequality here becomes an equality. OK? You can show that the smallest value for this variable is when Q equals P. OK? And then the two terms in the inequality are equal. OK, so that's kind of the sort of energy view, if you want, of variational inference. If you need to compute the log of a sum of exponentials, replace it by the average of your function plus entropy term. And that would give you an upper bound. You minimize the upper bound. And because you push down on the upper bound, you also push down on the function you actually want to minimize. Beautiful. It's like the bare bones kind of simplest formulation of variational inference in terms of energy. I mean, you can replace L by P with some normalized stuff, but it makes it more complicated. I mean, it doesn't make any difference, really, but it makes it harder to interpret. OK, I think we're done. Whoever stuck around for this extra curricular session of more than half an hour. Yeah, 40 people. It was a pleasure teaching this class, particularly given the circumstances. See you tomorrow, guys, and stay safe. All right. Take care. Good night.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 3.52, "text": " OK, there's a number of topics I want to talk about today.", "tokens": [50364, 2264, 11, 456, 311, 257, 1230, 295, 8378, 286, 528, 281, 751, 466, 965, 13, 50540, 50540, 639, 307, 527, 1036, 7991, 11, 293, 286, 528, 50614, 50614, 281, 1066, 512, 565, 412, 264, 917, 337, 4974, 1651, 50764, 50764, 322, 4974, 8378, 300, 291, 1062, 528, 281, 1029, 13, 50880, 50880, 2704, 2674, 1651, 294, 2674, 50972, 50972, 466, 11587, 281, 3479, 2539, 11, 7318, 11, 2452, 2539, 11, 51122, 51122, 1030, 11458, 13, 51220, 51220, 2704, 1651, 534, 1310, 257, 707, 544, 25066, 13, 51426, 51426, 583, 718, 385, 722, 365, 746, 544, 9859, 13, 51632, 51632, 407, 286, 528, 281, 751, 466, 3877, 17630, 13, 51758, 51758, 286, 33919, 281, 341, 4829, 257, 1230, 295, 1413, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1886131162565898, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.0024316473864018917}, {"id": 1, "seek": 0, "start": 3.52, "end": 5.0, "text": " This is our last lecture, and I want", "tokens": [50364, 2264, 11, 456, 311, 257, 1230, 295, 8378, 286, 528, 281, 751, 466, 965, 13, 50540, 50540, 639, 307, 527, 1036, 7991, 11, 293, 286, 528, 50614, 50614, 281, 1066, 512, 565, 412, 264, 917, 337, 4974, 1651, 50764, 50764, 322, 4974, 8378, 300, 291, 1062, 528, 281, 1029, 13, 50880, 50880, 2704, 2674, 1651, 294, 2674, 50972, 50972, 466, 11587, 281, 3479, 2539, 11, 7318, 11, 2452, 2539, 11, 51122, 51122, 1030, 11458, 13, 51220, 51220, 2704, 1651, 534, 1310, 257, 707, 544, 25066, 13, 51426, 51426, 583, 718, 385, 722, 365, 746, 544, 9859, 13, 51632, 51632, 407, 286, 528, 281, 751, 466, 3877, 17630, 13, 51758, 51758, 286, 33919, 281, 341, 4829, 257, 1230, 295, 1413, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1886131162565898, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.0024316473864018917}, {"id": 2, "seek": 0, "start": 5.0, "end": 8.0, "text": " to keep some time at the end for random questions", "tokens": [50364, 2264, 11, 456, 311, 257, 1230, 295, 8378, 286, 528, 281, 751, 466, 965, 13, 50540, 50540, 639, 307, 527, 1036, 7991, 11, 293, 286, 528, 50614, 50614, 281, 1066, 512, 565, 412, 264, 917, 337, 4974, 1651, 50764, 50764, 322, 4974, 8378, 300, 291, 1062, 528, 281, 1029, 13, 50880, 50880, 2704, 2674, 1651, 294, 2674, 50972, 50972, 466, 11587, 281, 3479, 2539, 11, 7318, 11, 2452, 2539, 11, 51122, 51122, 1030, 11458, 13, 51220, 51220, 2704, 1651, 534, 1310, 257, 707, 544, 25066, 13, 51426, 51426, 583, 718, 385, 722, 365, 746, 544, 9859, 13, 51632, 51632, 407, 286, 528, 281, 751, 466, 3877, 17630, 13, 51758, 51758, 286, 33919, 281, 341, 4829, 257, 1230, 295, 1413, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1886131162565898, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.0024316473864018917}, {"id": 3, "seek": 0, "start": 8.0, "end": 10.32, "text": " on random topics that you might want to ask.", "tokens": [50364, 2264, 11, 456, 311, 257, 1230, 295, 8378, 286, 528, 281, 751, 466, 965, 13, 50540, 50540, 639, 307, 527, 1036, 7991, 11, 293, 286, 528, 50614, 50614, 281, 1066, 512, 565, 412, 264, 917, 337, 4974, 1651, 50764, 50764, 322, 4974, 8378, 300, 291, 1062, 528, 281, 1029, 13, 50880, 50880, 2704, 2674, 1651, 294, 2674, 50972, 50972, 466, 11587, 281, 3479, 2539, 11, 7318, 11, 2452, 2539, 11, 51122, 51122, 1030, 11458, 13, 51220, 51220, 2704, 1651, 534, 1310, 257, 707, 544, 25066, 13, 51426, 51426, 583, 718, 385, 722, 365, 746, 544, 9859, 13, 51632, 51632, 407, 286, 528, 281, 751, 466, 3877, 17630, 13, 51758, 51758, 286, 33919, 281, 341, 4829, 257, 1230, 295, 1413, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1886131162565898, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.0024316473864018917}, {"id": 4, "seek": 0, "start": 10.32, "end": 12.16, "text": " Maybe general questions in general", "tokens": [50364, 2264, 11, 456, 311, 257, 1230, 295, 8378, 286, 528, 281, 751, 466, 965, 13, 50540, 50540, 639, 307, 527, 1036, 7991, 11, 293, 286, 528, 50614, 50614, 281, 1066, 512, 565, 412, 264, 917, 337, 4974, 1651, 50764, 50764, 322, 4974, 8378, 300, 291, 1062, 528, 281, 1029, 13, 50880, 50880, 2704, 2674, 1651, 294, 2674, 50972, 50972, 466, 11587, 281, 3479, 2539, 11, 7318, 11, 2452, 2539, 11, 51122, 51122, 1030, 11458, 13, 51220, 51220, 2704, 1651, 534, 1310, 257, 707, 544, 25066, 13, 51426, 51426, 583, 718, 385, 722, 365, 746, 544, 9859, 13, 51632, 51632, 407, 286, 528, 281, 751, 466, 3877, 17630, 13, 51758, 51758, 286, 33919, 281, 341, 4829, 257, 1230, 295, 1413, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1886131162565898, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.0024316473864018917}, {"id": 5, "seek": 0, "start": 12.16, "end": 15.16, "text": " about approaches to machine learning, AI, deep learning,", "tokens": [50364, 2264, 11, 456, 311, 257, 1230, 295, 8378, 286, 528, 281, 751, 466, 965, 13, 50540, 50540, 639, 307, 527, 1036, 7991, 11, 293, 286, 528, 50614, 50614, 281, 1066, 512, 565, 412, 264, 917, 337, 4974, 1651, 50764, 50764, 322, 4974, 8378, 300, 291, 1062, 528, 281, 1029, 13, 50880, 50880, 2704, 2674, 1651, 294, 2674, 50972, 50972, 466, 11587, 281, 3479, 2539, 11, 7318, 11, 2452, 2539, 11, 51122, 51122, 1030, 11458, 13, 51220, 51220, 2704, 1651, 534, 1310, 257, 707, 544, 25066, 13, 51426, 51426, 583, 718, 385, 722, 365, 746, 544, 9859, 13, 51632, 51632, 407, 286, 528, 281, 751, 466, 3877, 17630, 13, 51758, 51758, 286, 33919, 281, 341, 4829, 257, 1230, 295, 1413, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1886131162565898, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.0024316473864018917}, {"id": 6, "seek": 0, "start": 15.16, "end": 17.12, "text": " et cetera.", "tokens": [50364, 2264, 11, 456, 311, 257, 1230, 295, 8378, 286, 528, 281, 751, 466, 965, 13, 50540, 50540, 639, 307, 527, 1036, 7991, 11, 293, 286, 528, 50614, 50614, 281, 1066, 512, 565, 412, 264, 917, 337, 4974, 1651, 50764, 50764, 322, 4974, 8378, 300, 291, 1062, 528, 281, 1029, 13, 50880, 50880, 2704, 2674, 1651, 294, 2674, 50972, 50972, 466, 11587, 281, 3479, 2539, 11, 7318, 11, 2452, 2539, 11, 51122, 51122, 1030, 11458, 13, 51220, 51220, 2704, 1651, 534, 1310, 257, 707, 544, 25066, 13, 51426, 51426, 583, 718, 385, 722, 365, 746, 544, 9859, 13, 51632, 51632, 407, 286, 528, 281, 751, 466, 3877, 17630, 13, 51758, 51758, 286, 33919, 281, 341, 4829, 257, 1230, 295, 1413, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1886131162565898, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.0024316473864018917}, {"id": 7, "seek": 0, "start": 17.12, "end": 21.240000000000002, "text": " Maybe questions really maybe a little more philosophical.", "tokens": [50364, 2264, 11, 456, 311, 257, 1230, 295, 8378, 286, 528, 281, 751, 466, 965, 13, 50540, 50540, 639, 307, 527, 1036, 7991, 11, 293, 286, 528, 50614, 50614, 281, 1066, 512, 565, 412, 264, 917, 337, 4974, 1651, 50764, 50764, 322, 4974, 8378, 300, 291, 1062, 528, 281, 1029, 13, 50880, 50880, 2704, 2674, 1651, 294, 2674, 50972, 50972, 466, 11587, 281, 3479, 2539, 11, 7318, 11, 2452, 2539, 11, 51122, 51122, 1030, 11458, 13, 51220, 51220, 2704, 1651, 534, 1310, 257, 707, 544, 25066, 13, 51426, 51426, 583, 718, 385, 722, 365, 746, 544, 9859, 13, 51632, 51632, 407, 286, 528, 281, 751, 466, 3877, 17630, 13, 51758, 51758, 286, 33919, 281, 341, 4829, 257, 1230, 295, 1413, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1886131162565898, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.0024316473864018917}, {"id": 8, "seek": 0, "start": 21.240000000000002, "end": 25.36, "text": " But let me start with something more concrete.", "tokens": [50364, 2264, 11, 456, 311, 257, 1230, 295, 8378, 286, 528, 281, 751, 466, 965, 13, 50540, 50540, 639, 307, 527, 1036, 7991, 11, 293, 286, 528, 50614, 50614, 281, 1066, 512, 565, 412, 264, 917, 337, 4974, 1651, 50764, 50764, 322, 4974, 8378, 300, 291, 1062, 528, 281, 1029, 13, 50880, 50880, 2704, 2674, 1651, 294, 2674, 50972, 50972, 466, 11587, 281, 3479, 2539, 11, 7318, 11, 2452, 2539, 11, 51122, 51122, 1030, 11458, 13, 51220, 51220, 2704, 1651, 534, 1310, 257, 707, 544, 25066, 13, 51426, 51426, 583, 718, 385, 722, 365, 746, 544, 9859, 13, 51632, 51632, 407, 286, 528, 281, 751, 466, 3877, 17630, 13, 51758, 51758, 286, 33919, 281, 341, 4829, 257, 1230, 295, 1413, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1886131162565898, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.0024316473864018917}, {"id": 9, "seek": 0, "start": 25.36, "end": 27.88, "text": " So I want to talk about structure prediction.", "tokens": [50364, 2264, 11, 456, 311, 257, 1230, 295, 8378, 286, 528, 281, 751, 466, 965, 13, 50540, 50540, 639, 307, 527, 1036, 7991, 11, 293, 286, 528, 50614, 50614, 281, 1066, 512, 565, 412, 264, 917, 337, 4974, 1651, 50764, 50764, 322, 4974, 8378, 300, 291, 1062, 528, 281, 1029, 13, 50880, 50880, 2704, 2674, 1651, 294, 2674, 50972, 50972, 466, 11587, 281, 3479, 2539, 11, 7318, 11, 2452, 2539, 11, 51122, 51122, 1030, 11458, 13, 51220, 51220, 2704, 1651, 534, 1310, 257, 707, 544, 25066, 13, 51426, 51426, 583, 718, 385, 722, 365, 746, 544, 9859, 13, 51632, 51632, 407, 286, 528, 281, 751, 466, 3877, 17630, 13, 51758, 51758, 286, 33919, 281, 341, 4829, 257, 1230, 295, 1413, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1886131162565898, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.0024316473864018917}, {"id": 10, "seek": 0, "start": 27.88, "end": 29.64, "text": " I alluded to this topic a number of times", "tokens": [50364, 2264, 11, 456, 311, 257, 1230, 295, 8378, 286, 528, 281, 751, 466, 965, 13, 50540, 50540, 639, 307, 527, 1036, 7991, 11, 293, 286, 528, 50614, 50614, 281, 1066, 512, 565, 412, 264, 917, 337, 4974, 1651, 50764, 50764, 322, 4974, 8378, 300, 291, 1062, 528, 281, 1029, 13, 50880, 50880, 2704, 2674, 1651, 294, 2674, 50972, 50972, 466, 11587, 281, 3479, 2539, 11, 7318, 11, 2452, 2539, 11, 51122, 51122, 1030, 11458, 13, 51220, 51220, 2704, 1651, 534, 1310, 257, 707, 544, 25066, 13, 51426, 51426, 583, 718, 385, 722, 365, 746, 544, 9859, 13, 51632, 51632, 407, 286, 528, 281, 751, 466, 3877, 17630, 13, 51758, 51758, 286, 33919, 281, 341, 4829, 257, 1230, 295, 1413, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1886131162565898, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.0024316473864018917}, {"id": 11, "seek": 2964, "start": 29.64, "end": 32.4, "text": " during the previous lectures, but I", "tokens": [50364, 1830, 264, 3894, 16564, 11, 457, 286, 50502, 50502, 519, 406, 1547, 294, 7161, 337, 881, 561, 281, 1223, 13, 50720, 50720, 407, 286, 528, 281, 808, 646, 281, 341, 13, 50832, 50832, 407, 3877, 17630, 307, 1936, 50990, 50990, 264, 1154, 295, 32884, 257, 7006, 300, 2564, 307, 406, 51204, 51204, 445, 411, 257, 2167, 7719, 420, 257, 2167, 2657, 11, 51420, 51420, 457, 1936, 257, 1333, 295, 2512, 31927, 831, 2657, 13, 51568, 51568, 407, 337, 1365, 11, 721, 411, 257, 8174, 11, 51678, 51678, 291, 434, 884, 6218, 11150, 11, 291, 434, 51749, 51749, 884, 39179, 11150, 11, 291, 434, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12447240419476946, "compression_ratio": 1.7654320987654322, "no_speech_prob": 7.13077824912034e-05}, {"id": 12, "seek": 2964, "start": 32.4, "end": 36.76, "text": " think not enough in depth for most people to understand.", "tokens": [50364, 1830, 264, 3894, 16564, 11, 457, 286, 50502, 50502, 519, 406, 1547, 294, 7161, 337, 881, 561, 281, 1223, 13, 50720, 50720, 407, 286, 528, 281, 808, 646, 281, 341, 13, 50832, 50832, 407, 3877, 17630, 307, 1936, 50990, 50990, 264, 1154, 295, 32884, 257, 7006, 300, 2564, 307, 406, 51204, 51204, 445, 411, 257, 2167, 7719, 420, 257, 2167, 2657, 11, 51420, 51420, 457, 1936, 257, 1333, 295, 2512, 31927, 831, 2657, 13, 51568, 51568, 407, 337, 1365, 11, 721, 411, 257, 8174, 11, 51678, 51678, 291, 434, 884, 6218, 11150, 11, 291, 434, 51749, 51749, 884, 39179, 11150, 11, 291, 434, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12447240419476946, "compression_ratio": 1.7654320987654322, "no_speech_prob": 7.13077824912034e-05}, {"id": 13, "seek": 2964, "start": 36.76, "end": 39.0, "text": " So I want to come back to this.", "tokens": [50364, 1830, 264, 3894, 16564, 11, 457, 286, 50502, 50502, 519, 406, 1547, 294, 7161, 337, 881, 561, 281, 1223, 13, 50720, 50720, 407, 286, 528, 281, 808, 646, 281, 341, 13, 50832, 50832, 407, 3877, 17630, 307, 1936, 50990, 50990, 264, 1154, 295, 32884, 257, 7006, 300, 2564, 307, 406, 51204, 51204, 445, 411, 257, 2167, 7719, 420, 257, 2167, 2657, 11, 51420, 51420, 457, 1936, 257, 1333, 295, 2512, 31927, 831, 2657, 13, 51568, 51568, 407, 337, 1365, 11, 721, 411, 257, 8174, 11, 51678, 51678, 291, 434, 884, 6218, 11150, 11, 291, 434, 51749, 51749, 884, 39179, 11150, 11, 291, 434, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12447240419476946, "compression_ratio": 1.7654320987654322, "no_speech_prob": 7.13077824912034e-05}, {"id": 14, "seek": 2964, "start": 39.0, "end": 42.16, "text": " So structure prediction is basically", "tokens": [50364, 1830, 264, 3894, 16564, 11, 457, 286, 50502, 50502, 519, 406, 1547, 294, 7161, 337, 881, 561, 281, 1223, 13, 50720, 50720, 407, 286, 528, 281, 808, 646, 281, 341, 13, 50832, 50832, 407, 3877, 17630, 307, 1936, 50990, 50990, 264, 1154, 295, 32884, 257, 7006, 300, 2564, 307, 406, 51204, 51204, 445, 411, 257, 2167, 7719, 420, 257, 2167, 2657, 11, 51420, 51420, 457, 1936, 257, 1333, 295, 2512, 31927, 831, 2657, 13, 51568, 51568, 407, 337, 1365, 11, 721, 411, 257, 8174, 11, 51678, 51678, 291, 434, 884, 6218, 11150, 11, 291, 434, 51749, 51749, 884, 39179, 11150, 11, 291, 434, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12447240419476946, "compression_ratio": 1.7654320987654322, "no_speech_prob": 7.13077824912034e-05}, {"id": 15, "seek": 2964, "start": 42.16, "end": 46.44, "text": " the problem of predicting a variable that itself is not", "tokens": [50364, 1830, 264, 3894, 16564, 11, 457, 286, 50502, 50502, 519, 406, 1547, 294, 7161, 337, 881, 561, 281, 1223, 13, 50720, 50720, 407, 286, 528, 281, 808, 646, 281, 341, 13, 50832, 50832, 407, 3877, 17630, 307, 1936, 50990, 50990, 264, 1154, 295, 32884, 257, 7006, 300, 2564, 307, 406, 51204, 51204, 445, 411, 257, 2167, 7719, 420, 257, 2167, 2657, 11, 51420, 51420, 457, 1936, 257, 1333, 295, 2512, 31927, 831, 2657, 13, 51568, 51568, 407, 337, 1365, 11, 721, 411, 257, 8174, 11, 51678, 51678, 291, 434, 884, 6218, 11150, 11, 291, 434, 51749, 51749, 884, 39179, 11150, 11, 291, 434, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12447240419476946, "compression_ratio": 1.7654320987654322, "no_speech_prob": 7.13077824912034e-05}, {"id": 16, "seek": 2964, "start": 46.44, "end": 50.760000000000005, "text": " just like a single category or a single object,", "tokens": [50364, 1830, 264, 3894, 16564, 11, 457, 286, 50502, 50502, 519, 406, 1547, 294, 7161, 337, 881, 561, 281, 1223, 13, 50720, 50720, 407, 286, 528, 281, 808, 646, 281, 341, 13, 50832, 50832, 407, 3877, 17630, 307, 1936, 50990, 50990, 264, 1154, 295, 32884, 257, 7006, 300, 2564, 307, 406, 51204, 51204, 445, 411, 257, 2167, 7719, 420, 257, 2167, 2657, 11, 51420, 51420, 457, 1936, 257, 1333, 295, 2512, 31927, 831, 2657, 13, 51568, 51568, 407, 337, 1365, 11, 721, 411, 257, 8174, 11, 51678, 51678, 291, 434, 884, 6218, 11150, 11, 291, 434, 51749, 51749, 884, 39179, 11150, 11, 291, 434, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12447240419476946, "compression_ratio": 1.7654320987654322, "no_speech_prob": 7.13077824912034e-05}, {"id": 17, "seek": 2964, "start": 50.760000000000005, "end": 53.72, "text": " but basically a sort of combinatorial object.", "tokens": [50364, 1830, 264, 3894, 16564, 11, 457, 286, 50502, 50502, 519, 406, 1547, 294, 7161, 337, 881, 561, 281, 1223, 13, 50720, 50720, 407, 286, 528, 281, 808, 646, 281, 341, 13, 50832, 50832, 407, 3877, 17630, 307, 1936, 50990, 50990, 264, 1154, 295, 32884, 257, 7006, 300, 2564, 307, 406, 51204, 51204, 445, 411, 257, 2167, 7719, 420, 257, 2167, 2657, 11, 51420, 51420, 457, 1936, 257, 1333, 295, 2512, 31927, 831, 2657, 13, 51568, 51568, 407, 337, 1365, 11, 721, 411, 257, 8174, 11, 51678, 51678, 291, 434, 884, 6218, 11150, 11, 291, 434, 51749, 51749, 884, 39179, 11150, 11, 291, 434, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12447240419476946, "compression_ratio": 1.7654320987654322, "no_speech_prob": 7.13077824912034e-05}, {"id": 18, "seek": 2964, "start": 53.72, "end": 55.92, "text": " So for example, things like a sentence,", "tokens": [50364, 1830, 264, 3894, 16564, 11, 457, 286, 50502, 50502, 519, 406, 1547, 294, 7161, 337, 881, 561, 281, 1223, 13, 50720, 50720, 407, 286, 528, 281, 808, 646, 281, 341, 13, 50832, 50832, 407, 3877, 17630, 307, 1936, 50990, 50990, 264, 1154, 295, 32884, 257, 7006, 300, 2564, 307, 406, 51204, 51204, 445, 411, 257, 2167, 7719, 420, 257, 2167, 2657, 11, 51420, 51420, 457, 1936, 257, 1333, 295, 2512, 31927, 831, 2657, 13, 51568, 51568, 407, 337, 1365, 11, 721, 411, 257, 8174, 11, 51678, 51678, 291, 434, 884, 6218, 11150, 11, 291, 434, 51749, 51749, 884, 39179, 11150, 11, 291, 434, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12447240419476946, "compression_ratio": 1.7654320987654322, "no_speech_prob": 7.13077824912034e-05}, {"id": 19, "seek": 2964, "start": 55.92, "end": 57.34, "text": " you're doing speech recognition, you're", "tokens": [50364, 1830, 264, 3894, 16564, 11, 457, 286, 50502, 50502, 519, 406, 1547, 294, 7161, 337, 881, 561, 281, 1223, 13, 50720, 50720, 407, 286, 528, 281, 808, 646, 281, 341, 13, 50832, 50832, 407, 3877, 17630, 307, 1936, 50990, 50990, 264, 1154, 295, 32884, 257, 7006, 300, 2564, 307, 406, 51204, 51204, 445, 411, 257, 2167, 7719, 420, 257, 2167, 2657, 11, 51420, 51420, 457, 1936, 257, 1333, 295, 2512, 31927, 831, 2657, 13, 51568, 51568, 407, 337, 1365, 11, 721, 411, 257, 8174, 11, 51678, 51678, 291, 434, 884, 6218, 11150, 11, 291, 434, 51749, 51749, 884, 39179, 11150, 11, 291, 434, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12447240419476946, "compression_ratio": 1.7654320987654322, "no_speech_prob": 7.13077824912034e-05}, {"id": 20, "seek": 2964, "start": 57.34, "end": 59.36, "text": " doing handwriting recognition, you're", "tokens": [50364, 1830, 264, 3894, 16564, 11, 457, 286, 50502, 50502, 519, 406, 1547, 294, 7161, 337, 881, 561, 281, 1223, 13, 50720, 50720, 407, 286, 528, 281, 808, 646, 281, 341, 13, 50832, 50832, 407, 3877, 17630, 307, 1936, 50990, 50990, 264, 1154, 295, 32884, 257, 7006, 300, 2564, 307, 406, 51204, 51204, 445, 411, 257, 2167, 7719, 420, 257, 2167, 2657, 11, 51420, 51420, 457, 1936, 257, 1333, 295, 2512, 31927, 831, 2657, 13, 51568, 51568, 407, 337, 1365, 11, 721, 411, 257, 8174, 11, 51678, 51678, 291, 434, 884, 6218, 11150, 11, 291, 434, 51749, 51749, 884, 39179, 11150, 11, 291, 434, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12447240419476946, "compression_ratio": 1.7654320987654322, "no_speech_prob": 7.13077824912034e-05}, {"id": 21, "seek": 5936, "start": 59.36, "end": 63.68, "text": " doing natural language generation or translation.", "tokens": [50364, 884, 3303, 2856, 5125, 420, 12853, 13, 50580, 50580, 400, 437, 291, 643, 281, 5598, 307, 257, 1333, 50760, 50760, 295, 17570, 5030, 3006, 8398, 8310, 295, 16944, 13, 51038, 51038, 400, 456, 307, 572, 11, 291, 393, 380, 584, 300, 456, 51152, 51152, 307, 257, 19362, 1230, 295, 12178, 295, 264, 5598, 11, 51364, 51364, 570, 264, 4641, 295, 264, 5598, 1062, 312, 7006, 13, 51530, 51530, 583, 754, 498, 264, 4641, 575, 257, 6674, 51688, 51688, 293, 264, 1230, 307, 294, 8665, 19362, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12818009058634441, "compression_ratio": 1.6743119266055047, "no_speech_prob": 1.8331524188397452e-05}, {"id": 22, "seek": 5936, "start": 63.68, "end": 67.28, "text": " And what you need to output is a sort", "tokens": [50364, 884, 3303, 2856, 5125, 420, 12853, 13, 50580, 50580, 400, 437, 291, 643, 281, 5598, 307, 257, 1333, 50760, 50760, 295, 17570, 5030, 3006, 8398, 8310, 295, 16944, 13, 51038, 51038, 400, 456, 307, 572, 11, 291, 393, 380, 584, 300, 456, 51152, 51152, 307, 257, 19362, 1230, 295, 12178, 295, 264, 5598, 11, 51364, 51364, 570, 264, 4641, 295, 264, 5598, 1062, 312, 7006, 13, 51530, 51530, 583, 754, 498, 264, 4641, 575, 257, 6674, 51688, 51688, 293, 264, 1230, 307, 294, 8665, 19362, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12818009058634441, "compression_ratio": 1.6743119266055047, "no_speech_prob": 1.8331524188397452e-05}, {"id": 23, "seek": 5936, "start": 67.28, "end": 72.84, "text": " of grammatically correct consistent sequence of symbols.", "tokens": [50364, 884, 3303, 2856, 5125, 420, 12853, 13, 50580, 50580, 400, 437, 291, 643, 281, 5598, 307, 257, 1333, 50760, 50760, 295, 17570, 5030, 3006, 8398, 8310, 295, 16944, 13, 51038, 51038, 400, 456, 307, 572, 11, 291, 393, 380, 584, 300, 456, 51152, 51152, 307, 257, 19362, 1230, 295, 12178, 295, 264, 5598, 11, 51364, 51364, 570, 264, 4641, 295, 264, 5598, 1062, 312, 7006, 13, 51530, 51530, 583, 754, 498, 264, 4641, 575, 257, 6674, 51688, 51688, 293, 264, 1230, 307, 294, 8665, 19362, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12818009058634441, "compression_ratio": 1.6743119266055047, "no_speech_prob": 1.8331524188397452e-05}, {"id": 24, "seek": 5936, "start": 72.84, "end": 75.12, "text": " And there is no, you can't say that there", "tokens": [50364, 884, 3303, 2856, 5125, 420, 12853, 13, 50580, 50580, 400, 437, 291, 643, 281, 5598, 307, 257, 1333, 50760, 50760, 295, 17570, 5030, 3006, 8398, 8310, 295, 16944, 13, 51038, 51038, 400, 456, 307, 572, 11, 291, 393, 380, 584, 300, 456, 51152, 51152, 307, 257, 19362, 1230, 295, 12178, 295, 264, 5598, 11, 51364, 51364, 570, 264, 4641, 295, 264, 5598, 1062, 312, 7006, 13, 51530, 51530, 583, 754, 498, 264, 4641, 575, 257, 6674, 51688, 51688, 293, 264, 1230, 307, 294, 8665, 19362, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12818009058634441, "compression_ratio": 1.6743119266055047, "no_speech_prob": 1.8331524188397452e-05}, {"id": 25, "seek": 5936, "start": 75.12, "end": 79.36, "text": " is a finite number of possibilities of the output,", "tokens": [50364, 884, 3303, 2856, 5125, 420, 12853, 13, 50580, 50580, 400, 437, 291, 643, 281, 5598, 307, 257, 1333, 50760, 50760, 295, 17570, 5030, 3006, 8398, 8310, 295, 16944, 13, 51038, 51038, 400, 456, 307, 572, 11, 291, 393, 380, 584, 300, 456, 51152, 51152, 307, 257, 19362, 1230, 295, 12178, 295, 264, 5598, 11, 51364, 51364, 570, 264, 4641, 295, 264, 5598, 1062, 312, 7006, 13, 51530, 51530, 583, 754, 498, 264, 4641, 575, 257, 6674, 51688, 51688, 293, 264, 1230, 307, 294, 8665, 19362, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12818009058634441, "compression_ratio": 1.6743119266055047, "no_speech_prob": 1.8331524188397452e-05}, {"id": 26, "seek": 5936, "start": 79.36, "end": 82.68, "text": " because the length of the output might be variable.", "tokens": [50364, 884, 3303, 2856, 5125, 420, 12853, 13, 50580, 50580, 400, 437, 291, 643, 281, 5598, 307, 257, 1333, 50760, 50760, 295, 17570, 5030, 3006, 8398, 8310, 295, 16944, 13, 51038, 51038, 400, 456, 307, 572, 11, 291, 393, 380, 584, 300, 456, 51152, 51152, 307, 257, 19362, 1230, 295, 12178, 295, 264, 5598, 11, 51364, 51364, 570, 264, 4641, 295, 264, 5598, 1062, 312, 7006, 13, 51530, 51530, 583, 754, 498, 264, 4641, 575, 257, 6674, 51688, 51688, 293, 264, 1230, 307, 294, 8665, 19362, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12818009058634441, "compression_ratio": 1.6743119266055047, "no_speech_prob": 1.8331524188397452e-05}, {"id": 27, "seek": 5936, "start": 82.68, "end": 85.84, "text": " But even if the length has a maximum", "tokens": [50364, 884, 3303, 2856, 5125, 420, 12853, 13, 50580, 50580, 400, 437, 291, 643, 281, 5598, 307, 257, 1333, 50760, 50760, 295, 17570, 5030, 3006, 8398, 8310, 295, 16944, 13, 51038, 51038, 400, 456, 307, 572, 11, 291, 393, 380, 584, 300, 456, 51152, 51152, 307, 257, 19362, 1230, 295, 12178, 295, 264, 5598, 11, 51364, 51364, 570, 264, 4641, 295, 264, 5598, 1062, 312, 7006, 13, 51530, 51530, 583, 754, 498, 264, 4641, 575, 257, 6674, 51688, 51688, 293, 264, 1230, 307, 294, 8665, 19362, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12818009058634441, "compression_ratio": 1.6743119266055047, "no_speech_prob": 1.8331524188397452e-05}, {"id": 28, "seek": 5936, "start": 85.84, "end": 88.0, "text": " and the number is in principle finite,", "tokens": [50364, 884, 3303, 2856, 5125, 420, 12853, 13, 50580, 50580, 400, 437, 291, 643, 281, 5598, 307, 257, 1333, 50760, 50760, 295, 17570, 5030, 3006, 8398, 8310, 295, 16944, 13, 51038, 51038, 400, 456, 307, 572, 11, 291, 393, 380, 584, 300, 456, 51152, 51152, 307, 257, 19362, 1230, 295, 12178, 295, 264, 5598, 11, 51364, 51364, 570, 264, 4641, 295, 264, 5598, 1062, 312, 7006, 13, 51530, 51530, 583, 754, 498, 264, 4641, 575, 257, 6674, 51688, 51688, 293, 264, 1230, 307, 294, 8665, 19362, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12818009058634441, "compression_ratio": 1.6743119266055047, "no_speech_prob": 1.8331524188397452e-05}, {"id": 29, "seek": 8800, "start": 88.0, "end": 91.2, "text": " because it's combinatorial, there's", "tokens": [50364, 570, 309, 311, 2512, 31927, 831, 11, 456, 311, 50524, 50524, 572, 636, 281, 465, 15583, 473, 439, 1944, 819, 23930, 13, 50704, 50704, 400, 370, 281, 5109, 264, 2010, 25534, 50862, 50862, 300, 264, 5598, 575, 281, 5031, 11, 300, 311, 50978, 50978, 437, 311, 1219, 3877, 17630, 13, 51102, 51102, 400, 456, 311, 257, 688, 295, 589, 322, 341, 516, 646, 51374, 51374, 281, 1936, 264, 2440, 1708, 295, 6218, 11150, 13, 51488, 51488, 407, 341, 307, 406, 257, 5162, 1154, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14550031315196643, "compression_ratio": 1.5817307692307692, "no_speech_prob": 2.246277108497452e-05}, {"id": 30, "seek": 8800, "start": 91.2, "end": 94.8, "text": " no way to enumerate all possible different outputs.", "tokens": [50364, 570, 309, 311, 2512, 31927, 831, 11, 456, 311, 50524, 50524, 572, 636, 281, 465, 15583, 473, 439, 1944, 819, 23930, 13, 50704, 50704, 400, 370, 281, 5109, 264, 2010, 25534, 50862, 50862, 300, 264, 5598, 575, 281, 5031, 11, 300, 311, 50978, 50978, 437, 311, 1219, 3877, 17630, 13, 51102, 51102, 400, 456, 311, 257, 688, 295, 589, 322, 341, 516, 646, 51374, 51374, 281, 1936, 264, 2440, 1708, 295, 6218, 11150, 13, 51488, 51488, 407, 341, 307, 406, 257, 5162, 1154, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14550031315196643, "compression_ratio": 1.5817307692307692, "no_speech_prob": 2.246277108497452e-05}, {"id": 31, "seek": 8800, "start": 94.8, "end": 97.96000000000001, "text": " And so to express the type constraint", "tokens": [50364, 570, 309, 311, 2512, 31927, 831, 11, 456, 311, 50524, 50524, 572, 636, 281, 465, 15583, 473, 439, 1944, 819, 23930, 13, 50704, 50704, 400, 370, 281, 5109, 264, 2010, 25534, 50862, 50862, 300, 264, 5598, 575, 281, 5031, 11, 300, 311, 50978, 50978, 437, 311, 1219, 3877, 17630, 13, 51102, 51102, 400, 456, 311, 257, 688, 295, 589, 322, 341, 516, 646, 51374, 51374, 281, 1936, 264, 2440, 1708, 295, 6218, 11150, 13, 51488, 51488, 407, 341, 307, 406, 257, 5162, 1154, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14550031315196643, "compression_ratio": 1.5817307692307692, "no_speech_prob": 2.246277108497452e-05}, {"id": 32, "seek": 8800, "start": 97.96000000000001, "end": 100.28, "text": " that the output has to reflect, that's", "tokens": [50364, 570, 309, 311, 2512, 31927, 831, 11, 456, 311, 50524, 50524, 572, 636, 281, 465, 15583, 473, 439, 1944, 819, 23930, 13, 50704, 50704, 400, 370, 281, 5109, 264, 2010, 25534, 50862, 50862, 300, 264, 5598, 575, 281, 5031, 11, 300, 311, 50978, 50978, 437, 311, 1219, 3877, 17630, 13, 51102, 51102, 400, 456, 311, 257, 688, 295, 589, 322, 341, 516, 646, 51374, 51374, 281, 1936, 264, 2440, 1708, 295, 6218, 11150, 13, 51488, 51488, 407, 341, 307, 406, 257, 5162, 1154, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14550031315196643, "compression_ratio": 1.5817307692307692, "no_speech_prob": 2.246277108497452e-05}, {"id": 33, "seek": 8800, "start": 100.28, "end": 102.76, "text": " what's called structure prediction.", "tokens": [50364, 570, 309, 311, 2512, 31927, 831, 11, 456, 311, 50524, 50524, 572, 636, 281, 465, 15583, 473, 439, 1944, 819, 23930, 13, 50704, 50704, 400, 370, 281, 5109, 264, 2010, 25534, 50862, 50862, 300, 264, 5598, 575, 281, 5031, 11, 300, 311, 50978, 50978, 437, 311, 1219, 3877, 17630, 13, 51102, 51102, 400, 456, 311, 257, 688, 295, 589, 322, 341, 516, 646, 51374, 51374, 281, 1936, 264, 2440, 1708, 295, 6218, 11150, 13, 51488, 51488, 407, 341, 307, 406, 257, 5162, 1154, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14550031315196643, "compression_ratio": 1.5817307692307692, "no_speech_prob": 2.246277108497452e-05}, {"id": 34, "seek": 8800, "start": 102.76, "end": 108.2, "text": " And there's a lot of work on this going back", "tokens": [50364, 570, 309, 311, 2512, 31927, 831, 11, 456, 311, 50524, 50524, 572, 636, 281, 465, 15583, 473, 439, 1944, 819, 23930, 13, 50704, 50704, 400, 370, 281, 5109, 264, 2010, 25534, 50862, 50862, 300, 264, 5598, 575, 281, 5031, 11, 300, 311, 50978, 50978, 437, 311, 1219, 3877, 17630, 13, 51102, 51102, 400, 456, 311, 257, 688, 295, 589, 322, 341, 516, 646, 51374, 51374, 281, 1936, 264, 2440, 1708, 295, 6218, 11150, 13, 51488, 51488, 407, 341, 307, 406, 257, 5162, 1154, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14550031315196643, "compression_ratio": 1.5817307692307692, "no_speech_prob": 2.246277108497452e-05}, {"id": 35, "seek": 8800, "start": 108.2, "end": 110.48, "text": " to basically the early days of speech recognition.", "tokens": [50364, 570, 309, 311, 2512, 31927, 831, 11, 456, 311, 50524, 50524, 572, 636, 281, 465, 15583, 473, 439, 1944, 819, 23930, 13, 50704, 50704, 400, 370, 281, 5109, 264, 2010, 25534, 50862, 50862, 300, 264, 5598, 575, 281, 5031, 11, 300, 311, 50978, 50978, 437, 311, 1219, 3877, 17630, 13, 51102, 51102, 400, 456, 311, 257, 688, 295, 589, 322, 341, 516, 646, 51374, 51374, 281, 1936, 264, 2440, 1708, 295, 6218, 11150, 13, 51488, 51488, 407, 341, 307, 406, 257, 5162, 1154, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14550031315196643, "compression_ratio": 1.5817307692307692, "no_speech_prob": 2.246277108497452e-05}, {"id": 36, "seek": 8800, "start": 110.48, "end": 113.03999999999999, "text": " So this is not a recent problem.", "tokens": [50364, 570, 309, 311, 2512, 31927, 831, 11, 456, 311, 50524, 50524, 572, 636, 281, 465, 15583, 473, 439, 1944, 819, 23930, 13, 50704, 50704, 400, 370, 281, 5109, 264, 2010, 25534, 50862, 50862, 300, 264, 5598, 575, 281, 5031, 11, 300, 311, 50978, 50978, 437, 311, 1219, 3877, 17630, 13, 51102, 51102, 400, 456, 311, 257, 688, 295, 589, 322, 341, 516, 646, 51374, 51374, 281, 1936, 264, 2440, 1708, 295, 6218, 11150, 13, 51488, 51488, 407, 341, 307, 406, 257, 5162, 1154, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14550031315196643, "compression_ratio": 1.5817307692307692, "no_speech_prob": 2.246277108497452e-05}, {"id": 37, "seek": 11304, "start": 113.04, "end": 118.04, "text": " In fact, I'm going to start by a little bit of history.", "tokens": [50364, 682, 1186, 11, 286, 478, 516, 281, 722, 538, 257, 707, 857, 295, 2503, 13, 50614, 50614, 682, 452, 1575, 11, 264, 700, 2316, 281, 360, 18519, 17630, 50858, 50858, 9354, 365, 721, 411, 18161, 9590, 50996, 50996, 8895, 20828, 19020, 390, 341, 6218, 11150, 51162, 51162, 2316, 337, 2283, 538, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51422, 51422, 646, 294, 264, 2440, 4289, 82, 11, 24097, 13, 51546, 51546, 400, 456, 390, 733, 295, 2531, 589, 466, 264, 912, 565, 51652, 51652, 538, 38949, 4398, 29425, 1004, 293, 466, 257, 1064, 420, 732, 1780, 51784, 51784, 538, 13980, 634, 69, 1193, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.21720207489288604, "compression_ratio": 1.5148148148148148, "no_speech_prob": 1.8040866052615456e-05}, {"id": 38, "seek": 11304, "start": 118.04, "end": 122.92, "text": " In my mind, the first model to do structured prediction", "tokens": [50364, 682, 1186, 11, 286, 478, 516, 281, 722, 538, 257, 707, 857, 295, 2503, 13, 50614, 50614, 682, 452, 1575, 11, 264, 700, 2316, 281, 360, 18519, 17630, 50858, 50858, 9354, 365, 721, 411, 18161, 9590, 50996, 50996, 8895, 20828, 19020, 390, 341, 6218, 11150, 51162, 51162, 2316, 337, 2283, 538, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51422, 51422, 646, 294, 264, 2440, 4289, 82, 11, 24097, 13, 51546, 51546, 400, 456, 390, 733, 295, 2531, 589, 466, 264, 912, 565, 51652, 51652, 538, 38949, 4398, 29425, 1004, 293, 466, 257, 1064, 420, 732, 1780, 51784, 51784, 538, 13980, 634, 69, 1193, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.21720207489288604, "compression_ratio": 1.5148148148148148, "no_speech_prob": 1.8040866052615456e-05}, {"id": 39, "seek": 11304, "start": 122.92, "end": 125.68, "text": " combined with things like neural networks", "tokens": [50364, 682, 1186, 11, 286, 478, 516, 281, 722, 538, 257, 707, 857, 295, 2503, 13, 50614, 50614, 682, 452, 1575, 11, 264, 700, 2316, 281, 360, 18519, 17630, 50858, 50858, 9354, 365, 721, 411, 18161, 9590, 50996, 50996, 8895, 20828, 19020, 390, 341, 6218, 11150, 51162, 51162, 2316, 337, 2283, 538, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51422, 51422, 646, 294, 264, 2440, 4289, 82, 11, 24097, 13, 51546, 51546, 400, 456, 390, 733, 295, 2531, 589, 466, 264, 912, 565, 51652, 51652, 538, 38949, 4398, 29425, 1004, 293, 466, 257, 1064, 420, 732, 1780, 51784, 51784, 538, 13980, 634, 69, 1193, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.21720207489288604, "compression_ratio": 1.5148148148148148, "no_speech_prob": 1.8040866052615456e-05}, {"id": 40, "seek": 11304, "start": 125.68, "end": 129.0, "text": " trained discriminatively was this speech recognition", "tokens": [50364, 682, 1186, 11, 286, 478, 516, 281, 722, 538, 257, 707, 857, 295, 2503, 13, 50614, 50614, 682, 452, 1575, 11, 264, 700, 2316, 281, 360, 18519, 17630, 50858, 50858, 9354, 365, 721, 411, 18161, 9590, 50996, 50996, 8895, 20828, 19020, 390, 341, 6218, 11150, 51162, 51162, 2316, 337, 2283, 538, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51422, 51422, 646, 294, 264, 2440, 4289, 82, 11, 24097, 13, 51546, 51546, 400, 456, 390, 733, 295, 2531, 589, 466, 264, 912, 565, 51652, 51652, 538, 38949, 4398, 29425, 1004, 293, 466, 257, 1064, 420, 732, 1780, 51784, 51784, 538, 13980, 634, 69, 1193, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.21720207489288604, "compression_ratio": 1.5148148148148148, "no_speech_prob": 1.8040866052615456e-05}, {"id": 41, "seek": 11304, "start": 129.0, "end": 134.20000000000002, "text": " model for words by Xavier Drinocourt and Leon Boutou", "tokens": [50364, 682, 1186, 11, 286, 478, 516, 281, 722, 538, 257, 707, 857, 295, 2503, 13, 50614, 50614, 682, 452, 1575, 11, 264, 700, 2316, 281, 360, 18519, 17630, 50858, 50858, 9354, 365, 721, 411, 18161, 9590, 50996, 50996, 8895, 20828, 19020, 390, 341, 6218, 11150, 51162, 51162, 2316, 337, 2283, 538, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51422, 51422, 646, 294, 264, 2440, 4289, 82, 11, 24097, 13, 51546, 51546, 400, 456, 390, 733, 295, 2531, 589, 466, 264, 912, 565, 51652, 51652, 538, 38949, 4398, 29425, 1004, 293, 466, 257, 1064, 420, 732, 1780, 51784, 51784, 538, 13980, 634, 69, 1193, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.21720207489288604, "compression_ratio": 1.5148148148148148, "no_speech_prob": 1.8040866052615456e-05}, {"id": 42, "seek": 11304, "start": 134.20000000000002, "end": 136.68, "text": " back in the early 90s, 1991.", "tokens": [50364, 682, 1186, 11, 286, 478, 516, 281, 722, 538, 257, 707, 857, 295, 2503, 13, 50614, 50614, 682, 452, 1575, 11, 264, 700, 2316, 281, 360, 18519, 17630, 50858, 50858, 9354, 365, 721, 411, 18161, 9590, 50996, 50996, 8895, 20828, 19020, 390, 341, 6218, 11150, 51162, 51162, 2316, 337, 2283, 538, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51422, 51422, 646, 294, 264, 2440, 4289, 82, 11, 24097, 13, 51546, 51546, 400, 456, 390, 733, 295, 2531, 589, 466, 264, 912, 565, 51652, 51652, 538, 38949, 4398, 29425, 1004, 293, 466, 257, 1064, 420, 732, 1780, 51784, 51784, 538, 13980, 634, 69, 1193, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.21720207489288604, "compression_ratio": 1.5148148148148148, "no_speech_prob": 1.8040866052615456e-05}, {"id": 43, "seek": 11304, "start": 136.68, "end": 138.8, "text": " And there was kind of similar work about the same time", "tokens": [50364, 682, 1186, 11, 286, 478, 516, 281, 722, 538, 257, 707, 857, 295, 2503, 13, 50614, 50614, 682, 452, 1575, 11, 264, 700, 2316, 281, 360, 18519, 17630, 50858, 50858, 9354, 365, 721, 411, 18161, 9590, 50996, 50996, 8895, 20828, 19020, 390, 341, 6218, 11150, 51162, 51162, 2316, 337, 2283, 538, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51422, 51422, 646, 294, 264, 2440, 4289, 82, 11, 24097, 13, 51546, 51546, 400, 456, 390, 733, 295, 2531, 589, 466, 264, 912, 565, 51652, 51652, 538, 38949, 4398, 29425, 1004, 293, 466, 257, 1064, 420, 732, 1780, 51784, 51784, 538, 13980, 634, 69, 1193, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.21720207489288604, "compression_ratio": 1.5148148148148148, "no_speech_prob": 1.8040866052615456e-05}, {"id": 44, "seek": 11304, "start": 138.8, "end": 141.44, "text": " by Yoshua Bengio and about a year or two later", "tokens": [50364, 682, 1186, 11, 286, 478, 516, 281, 722, 538, 257, 707, 857, 295, 2503, 13, 50614, 50614, 682, 452, 1575, 11, 264, 700, 2316, 281, 360, 18519, 17630, 50858, 50858, 9354, 365, 721, 411, 18161, 9590, 50996, 50996, 8895, 20828, 19020, 390, 341, 6218, 11150, 51162, 51162, 2316, 337, 2283, 538, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51422, 51422, 646, 294, 264, 2440, 4289, 82, 11, 24097, 13, 51546, 51546, 400, 456, 390, 733, 295, 2531, 589, 466, 264, 912, 565, 51652, 51652, 538, 38949, 4398, 29425, 1004, 293, 466, 257, 1064, 420, 732, 1780, 51784, 51784, 538, 13980, 634, 69, 1193, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.21720207489288604, "compression_ratio": 1.5148148148148148, "no_speech_prob": 1.8040866052615456e-05}, {"id": 45, "seek": 11304, "start": 141.44, "end": 142.60000000000002, "text": " by Patrick Hefner.", "tokens": [50364, 682, 1186, 11, 286, 478, 516, 281, 722, 538, 257, 707, 857, 295, 2503, 13, 50614, 50614, 682, 452, 1575, 11, 264, 700, 2316, 281, 360, 18519, 17630, 50858, 50858, 9354, 365, 721, 411, 18161, 9590, 50996, 50996, 8895, 20828, 19020, 390, 341, 6218, 11150, 51162, 51162, 2316, 337, 2283, 538, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51422, 51422, 646, 294, 264, 2440, 4289, 82, 11, 24097, 13, 51546, 51546, 400, 456, 390, 733, 295, 2531, 589, 466, 264, 912, 565, 51652, 51652, 538, 38949, 4398, 29425, 1004, 293, 466, 257, 1064, 420, 732, 1780, 51784, 51784, 538, 13980, 634, 69, 1193, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.21720207489288604, "compression_ratio": 1.5148148148148148, "no_speech_prob": 1.8040866052615456e-05}, {"id": 46, "seek": 14260, "start": 142.6, "end": 145.96, "text": " So these are people who worked on discriminative training", "tokens": [50364, 407, 613, 366, 561, 567, 2732, 322, 20828, 1166, 3097, 50532, 50532, 337, 3652, 300, 645, 3442, 281, 5258, 257, 8310, 295, 16944, 50694, 50694, 490, 257, 6358, 11, 718, 311, 584, 11, 6218, 420, 39179, 11, 50960, 50960, 293, 689, 1564, 264, 700, 1823, 1936, 307, 257, 18161, 2533, 13, 51250, 51250, 1692, 11, 341, 18161, 2533, 11, 286, 4114, 42606, 45, 45, 13, 51394, 51394, 639, 1355, 565, 12, 18105, 320, 18161, 2533, 307, 1936, 51486, 51486, 257, 30881, 45216, 304, 2533, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2023710615179512, "compression_ratio": 1.5384615384615385, "no_speech_prob": 2.3162334400694817e-05}, {"id": 47, "seek": 14260, "start": 145.96, "end": 149.2, "text": " for systems that were supposed to produce a sequence of symbols", "tokens": [50364, 407, 613, 366, 561, 567, 2732, 322, 20828, 1166, 3097, 50532, 50532, 337, 3652, 300, 645, 3442, 281, 5258, 257, 8310, 295, 16944, 50694, 50694, 490, 257, 6358, 11, 718, 311, 584, 11, 6218, 420, 39179, 11, 50960, 50960, 293, 689, 1564, 264, 700, 1823, 1936, 307, 257, 18161, 2533, 13, 51250, 51250, 1692, 11, 341, 18161, 2533, 11, 286, 4114, 42606, 45, 45, 13, 51394, 51394, 639, 1355, 565, 12, 18105, 320, 18161, 2533, 307, 1936, 51486, 51486, 257, 30881, 45216, 304, 2533, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2023710615179512, "compression_ratio": 1.5384615384615385, "no_speech_prob": 2.3162334400694817e-05}, {"id": 48, "seek": 14260, "start": 149.2, "end": 154.51999999999998, "text": " from a signal, let's say, speech or handwriting,", "tokens": [50364, 407, 613, 366, 561, 567, 2732, 322, 20828, 1166, 3097, 50532, 50532, 337, 3652, 300, 645, 3442, 281, 5258, 257, 8310, 295, 16944, 50694, 50694, 490, 257, 6358, 11, 718, 311, 584, 11, 6218, 420, 39179, 11, 50960, 50960, 293, 689, 1564, 264, 700, 1823, 1936, 307, 257, 18161, 2533, 13, 51250, 51250, 1692, 11, 341, 18161, 2533, 11, 286, 4114, 42606, 45, 45, 13, 51394, 51394, 639, 1355, 565, 12, 18105, 320, 18161, 2533, 307, 1936, 51486, 51486, 257, 30881, 45216, 304, 2533, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2023710615179512, "compression_ratio": 1.5384615384615385, "no_speech_prob": 2.3162334400694817e-05}, {"id": 49, "seek": 14260, "start": 154.51999999999998, "end": 160.32, "text": " and where once the first step basically is a neural net.", "tokens": [50364, 407, 613, 366, 561, 567, 2732, 322, 20828, 1166, 3097, 50532, 50532, 337, 3652, 300, 645, 3442, 281, 5258, 257, 8310, 295, 16944, 50694, 50694, 490, 257, 6358, 11, 718, 311, 584, 11, 6218, 420, 39179, 11, 50960, 50960, 293, 689, 1564, 264, 700, 1823, 1936, 307, 257, 18161, 2533, 13, 51250, 51250, 1692, 11, 341, 18161, 2533, 11, 286, 4114, 42606, 45, 45, 13, 51394, 51394, 639, 1355, 565, 12, 18105, 320, 18161, 2533, 307, 1936, 51486, 51486, 257, 30881, 45216, 304, 2533, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2023710615179512, "compression_ratio": 1.5384615384615385, "no_speech_prob": 2.3162334400694817e-05}, {"id": 50, "seek": 14260, "start": 160.32, "end": 163.2, "text": " Here, this neural net, I wrote TDNN.", "tokens": [50364, 407, 613, 366, 561, 567, 2732, 322, 20828, 1166, 3097, 50532, 50532, 337, 3652, 300, 645, 3442, 281, 5258, 257, 8310, 295, 16944, 50694, 50694, 490, 257, 6358, 11, 718, 311, 584, 11, 6218, 420, 39179, 11, 50960, 50960, 293, 689, 1564, 264, 700, 1823, 1936, 307, 257, 18161, 2533, 13, 51250, 51250, 1692, 11, 341, 18161, 2533, 11, 286, 4114, 42606, 45, 45, 13, 51394, 51394, 639, 1355, 565, 12, 18105, 320, 18161, 2533, 307, 1936, 51486, 51486, 257, 30881, 45216, 304, 2533, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2023710615179512, "compression_ratio": 1.5384615384615385, "no_speech_prob": 2.3162334400694817e-05}, {"id": 51, "seek": 14260, "start": 163.2, "end": 165.04, "text": " This means time-delay neural net is basically", "tokens": [50364, 407, 613, 366, 561, 567, 2732, 322, 20828, 1166, 3097, 50532, 50532, 337, 3652, 300, 645, 3442, 281, 5258, 257, 8310, 295, 16944, 50694, 50694, 490, 257, 6358, 11, 718, 311, 584, 11, 6218, 420, 39179, 11, 50960, 50960, 293, 689, 1564, 264, 700, 1823, 1936, 307, 257, 18161, 2533, 13, 51250, 51250, 1692, 11, 341, 18161, 2533, 11, 286, 4114, 42606, 45, 45, 13, 51394, 51394, 639, 1355, 565, 12, 18105, 320, 18161, 2533, 307, 1936, 51486, 51486, 257, 30881, 45216, 304, 2533, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2023710615179512, "compression_ratio": 1.5384615384615385, "no_speech_prob": 2.3162334400694817e-05}, {"id": 52, "seek": 14260, "start": 165.04, "end": 166.72, "text": " a temporal convolutional net.", "tokens": [50364, 407, 613, 366, 561, 567, 2732, 322, 20828, 1166, 3097, 50532, 50532, 337, 3652, 300, 645, 3442, 281, 5258, 257, 8310, 295, 16944, 50694, 50694, 490, 257, 6358, 11, 718, 311, 584, 11, 6218, 420, 39179, 11, 50960, 50960, 293, 689, 1564, 264, 700, 1823, 1936, 307, 257, 18161, 2533, 13, 51250, 51250, 1692, 11, 341, 18161, 2533, 11, 286, 4114, 42606, 45, 45, 13, 51394, 51394, 639, 1355, 565, 12, 18105, 320, 18161, 2533, 307, 1936, 51486, 51486, 257, 30881, 45216, 304, 2533, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2023710615179512, "compression_ratio": 1.5384615384615385, "no_speech_prob": 2.3162334400694817e-05}, {"id": 53, "seek": 16672, "start": 166.72, "end": 176.28, "text": " So this is the first model I can find of structured prediction", "tokens": [50364, 407, 341, 307, 264, 700, 2316, 286, 393, 915, 295, 18519, 17630, 50842, 50842, 13051, 1602, 365, 18161, 36170, 498, 291, 528, 13, 50946, 50946, 407, 264, 1154, 300, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51084, 51084, 366, 1382, 281, 5039, 390, 18538, 2283, 51218, 51218, 1228, 257, 18161, 2533, 13, 51376, 51376, 400, 281, 512, 8396, 11, 264, 4363, 11587, 51508, 51508, 366, 733, 295, 2531, 281, 341, 11, 457, 294, 512, 2098, 13, 51708, 51708, 407, 264, 6218, 6358, 307, 10379, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.1221223873096508, "compression_ratio": 1.5221238938053097, "no_speech_prob": 1.2015569154755212e-05}, {"id": 54, "seek": 16672, "start": 176.28, "end": 178.36, "text": " hybridized with neural nets if you want.", "tokens": [50364, 407, 341, 307, 264, 700, 2316, 286, 393, 915, 295, 18519, 17630, 50842, 50842, 13051, 1602, 365, 18161, 36170, 498, 291, 528, 13, 50946, 50946, 407, 264, 1154, 300, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51084, 51084, 366, 1382, 281, 5039, 390, 18538, 2283, 51218, 51218, 1228, 257, 18161, 2533, 13, 51376, 51376, 400, 281, 512, 8396, 11, 264, 4363, 11587, 51508, 51508, 366, 733, 295, 2531, 281, 341, 11, 457, 294, 512, 2098, 13, 51708, 51708, 407, 264, 6218, 6358, 307, 10379, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.1221223873096508, "compression_ratio": 1.5221238938053097, "no_speech_prob": 1.2015569154755212e-05}, {"id": 55, "seek": 16672, "start": 178.36, "end": 181.12, "text": " So the problem that Xavier Drinocourt and Leon Boutou", "tokens": [50364, 407, 341, 307, 264, 700, 2316, 286, 393, 915, 295, 18519, 17630, 50842, 50842, 13051, 1602, 365, 18161, 36170, 498, 291, 528, 13, 50946, 50946, 407, 264, 1154, 300, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51084, 51084, 366, 1382, 281, 5039, 390, 18538, 2283, 51218, 51218, 1228, 257, 18161, 2533, 13, 51376, 51376, 400, 281, 512, 8396, 11, 264, 4363, 11587, 51508, 51508, 366, 733, 295, 2531, 281, 341, 11, 457, 294, 512, 2098, 13, 51708, 51708, 407, 264, 6218, 6358, 307, 10379, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.1221223873096508, "compression_ratio": 1.5221238938053097, "no_speech_prob": 1.2015569154755212e-05}, {"id": 56, "seek": 16672, "start": 181.12, "end": 183.8, "text": " are trying to solve was recognizing words", "tokens": [50364, 407, 341, 307, 264, 700, 2316, 286, 393, 915, 295, 18519, 17630, 50842, 50842, 13051, 1602, 365, 18161, 36170, 498, 291, 528, 13, 50946, 50946, 407, 264, 1154, 300, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51084, 51084, 366, 1382, 281, 5039, 390, 18538, 2283, 51218, 51218, 1228, 257, 18161, 2533, 13, 51376, 51376, 400, 281, 512, 8396, 11, 264, 4363, 11587, 51508, 51508, 366, 733, 295, 2531, 281, 341, 11, 457, 294, 512, 2098, 13, 51708, 51708, 407, 264, 6218, 6358, 307, 10379, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.1221223873096508, "compression_ratio": 1.5221238938053097, "no_speech_prob": 1.2015569154755212e-05}, {"id": 57, "seek": 16672, "start": 183.8, "end": 186.96, "text": " using a neural net.", "tokens": [50364, 407, 341, 307, 264, 700, 2316, 286, 393, 915, 295, 18519, 17630, 50842, 50842, 13051, 1602, 365, 18161, 36170, 498, 291, 528, 13, 50946, 50946, 407, 264, 1154, 300, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51084, 51084, 366, 1382, 281, 5039, 390, 18538, 2283, 51218, 51218, 1228, 257, 18161, 2533, 13, 51376, 51376, 400, 281, 512, 8396, 11, 264, 4363, 11587, 51508, 51508, 366, 733, 295, 2531, 281, 341, 11, 457, 294, 512, 2098, 13, 51708, 51708, 407, 264, 6218, 6358, 307, 10379, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.1221223873096508, "compression_ratio": 1.5221238938053097, "no_speech_prob": 1.2015569154755212e-05}, {"id": 58, "seek": 16672, "start": 186.96, "end": 189.6, "text": " And to some extent, the modern approaches", "tokens": [50364, 407, 341, 307, 264, 700, 2316, 286, 393, 915, 295, 18519, 17630, 50842, 50842, 13051, 1602, 365, 18161, 36170, 498, 291, 528, 13, 50946, 50946, 407, 264, 1154, 300, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51084, 51084, 366, 1382, 281, 5039, 390, 18538, 2283, 51218, 51218, 1228, 257, 18161, 2533, 13, 51376, 51376, 400, 281, 512, 8396, 11, 264, 4363, 11587, 51508, 51508, 366, 733, 295, 2531, 281, 341, 11, 457, 294, 512, 2098, 13, 51708, 51708, 407, 264, 6218, 6358, 307, 10379, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.1221223873096508, "compression_ratio": 1.5221238938053097, "no_speech_prob": 1.2015569154755212e-05}, {"id": 59, "seek": 16672, "start": 189.6, "end": 193.6, "text": " are kind of similar to this, but in some ways.", "tokens": [50364, 407, 341, 307, 264, 700, 2316, 286, 393, 915, 295, 18519, 17630, 50842, 50842, 13051, 1602, 365, 18161, 36170, 498, 291, 528, 13, 50946, 50946, 407, 264, 1154, 300, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51084, 51084, 366, 1382, 281, 5039, 390, 18538, 2283, 51218, 51218, 1228, 257, 18161, 2533, 13, 51376, 51376, 400, 281, 512, 8396, 11, 264, 4363, 11587, 51508, 51508, 366, 733, 295, 2531, 281, 341, 11, 457, 294, 512, 2098, 13, 51708, 51708, 407, 264, 6218, 6358, 307, 10379, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.1221223873096508, "compression_ratio": 1.5221238938053097, "no_speech_prob": 1.2015569154755212e-05}, {"id": 60, "seek": 16672, "start": 193.6, "end": 195.68, "text": " So the speech signal is represented", "tokens": [50364, 407, 341, 307, 264, 700, 2316, 286, 393, 915, 295, 18519, 17630, 50842, 50842, 13051, 1602, 365, 18161, 36170, 498, 291, 528, 13, 50946, 50946, 407, 264, 1154, 300, 44653, 2491, 259, 905, 33403, 293, 13244, 363, 346, 263, 51084, 51084, 366, 1382, 281, 5039, 390, 18538, 2283, 51218, 51218, 1228, 257, 18161, 2533, 13, 51376, 51376, 400, 281, 512, 8396, 11, 264, 4363, 11587, 51508, 51508, 366, 733, 295, 2531, 281, 341, 11, 457, 294, 512, 2098, 13, 51708, 51708, 407, 264, 6218, 6358, 307, 10379, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.1221223873096508, "compression_ratio": 1.5221238938053097, "no_speech_prob": 1.2015569154755212e-05}, {"id": 61, "seek": 19568, "start": 195.68, "end": 197.56, "text": " as a sequence of acoustic vectors.", "tokens": [50364, 382, 257, 8310, 295, 26753, 18875, 13, 50458, 50458, 407, 729, 366, 11, 291, 13153, 264, 6358, 666, 707, 24004, 13, 50696, 50696, 400, 550, 322, 472, 295, 264, 24004, 11, 291, 50772, 50772, 360, 257, 36810, 4088, 11, 597, 10112, 78, 575, 8825, 281, 291, 13, 50948, 50948, 400, 291, 1261, 309, 666, 1936, 257, 4111, 8062, 13, 51056, 51056, 400, 291, 362, 472, 295, 729, 18875, 13, 51132, 51132, 467, 311, 5850, 2217, 12819, 420, 370, 11, 1310, 3356, 13, 51288, 51288, 400, 291, 528, 472, 295, 729, 18875, 633, 1266, 34184, 11, 51454, 51454, 370, 466, 2319, 1413, 680, 1150, 13, 51562, 51562, 407, 291, 362, 257, 8310, 295, 3356, 12, 18759, 18875, 11, 51764, 51764, 466, 2319, 680, 1150, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1491825431585312, "compression_ratio": 1.8294573643410852, "no_speech_prob": 5.899176903767511e-05}, {"id": 62, "seek": 19568, "start": 197.56, "end": 202.32, "text": " So those are, you slice the signal into little chunks.", "tokens": [50364, 382, 257, 8310, 295, 26753, 18875, 13, 50458, 50458, 407, 729, 366, 11, 291, 13153, 264, 6358, 666, 707, 24004, 13, 50696, 50696, 400, 550, 322, 472, 295, 264, 24004, 11, 291, 50772, 50772, 360, 257, 36810, 4088, 11, 597, 10112, 78, 575, 8825, 281, 291, 13, 50948, 50948, 400, 291, 1261, 309, 666, 1936, 257, 4111, 8062, 13, 51056, 51056, 400, 291, 362, 472, 295, 729, 18875, 13, 51132, 51132, 467, 311, 5850, 2217, 12819, 420, 370, 11, 1310, 3356, 13, 51288, 51288, 400, 291, 528, 472, 295, 729, 18875, 633, 1266, 34184, 11, 51454, 51454, 370, 466, 2319, 1413, 680, 1150, 13, 51562, 51562, 407, 291, 362, 257, 8310, 295, 3356, 12, 18759, 18875, 11, 51764, 51764, 466, 2319, 680, 1150, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1491825431585312, "compression_ratio": 1.8294573643410852, "no_speech_prob": 5.899176903767511e-05}, {"id": 63, "seek": 19568, "start": 202.32, "end": 203.84, "text": " And then on one of the chunks, you", "tokens": [50364, 382, 257, 8310, 295, 26753, 18875, 13, 50458, 50458, 407, 729, 366, 11, 291, 13153, 264, 6358, 666, 707, 24004, 13, 50696, 50696, 400, 550, 322, 472, 295, 264, 24004, 11, 291, 50772, 50772, 360, 257, 36810, 4088, 11, 597, 10112, 78, 575, 8825, 281, 291, 13, 50948, 50948, 400, 291, 1261, 309, 666, 1936, 257, 4111, 8062, 13, 51056, 51056, 400, 291, 362, 472, 295, 729, 18875, 13, 51132, 51132, 467, 311, 5850, 2217, 12819, 420, 370, 11, 1310, 3356, 13, 51288, 51288, 400, 291, 528, 472, 295, 729, 18875, 633, 1266, 34184, 11, 51454, 51454, 370, 466, 2319, 1413, 680, 1150, 13, 51562, 51562, 407, 291, 362, 257, 8310, 295, 3356, 12, 18759, 18875, 11, 51764, 51764, 466, 2319, 680, 1150, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1491825431585312, "compression_ratio": 1.8294573643410852, "no_speech_prob": 5.899176903767511e-05}, {"id": 64, "seek": 19568, "start": 203.84, "end": 207.36, "text": " do a Fourier transform, which Fredo has explained to you.", "tokens": [50364, 382, 257, 8310, 295, 26753, 18875, 13, 50458, 50458, 407, 729, 366, 11, 291, 13153, 264, 6358, 666, 707, 24004, 13, 50696, 50696, 400, 550, 322, 472, 295, 264, 24004, 11, 291, 50772, 50772, 360, 257, 36810, 4088, 11, 597, 10112, 78, 575, 8825, 281, 291, 13, 50948, 50948, 400, 291, 1261, 309, 666, 1936, 257, 4111, 8062, 13, 51056, 51056, 400, 291, 362, 472, 295, 729, 18875, 13, 51132, 51132, 467, 311, 5850, 2217, 12819, 420, 370, 11, 1310, 3356, 13, 51288, 51288, 400, 291, 528, 472, 295, 729, 18875, 633, 1266, 34184, 11, 51454, 51454, 370, 466, 2319, 1413, 680, 1150, 13, 51562, 51562, 407, 291, 362, 257, 8310, 295, 3356, 12, 18759, 18875, 11, 51764, 51764, 466, 2319, 680, 1150, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1491825431585312, "compression_ratio": 1.8294573643410852, "no_speech_prob": 5.899176903767511e-05}, {"id": 65, "seek": 19568, "start": 207.36, "end": 209.52, "text": " And you turn it into basically a feature vector.", "tokens": [50364, 382, 257, 8310, 295, 26753, 18875, 13, 50458, 50458, 407, 729, 366, 11, 291, 13153, 264, 6358, 666, 707, 24004, 13, 50696, 50696, 400, 550, 322, 472, 295, 264, 24004, 11, 291, 50772, 50772, 360, 257, 36810, 4088, 11, 597, 10112, 78, 575, 8825, 281, 291, 13, 50948, 50948, 400, 291, 1261, 309, 666, 1936, 257, 4111, 8062, 13, 51056, 51056, 400, 291, 362, 472, 295, 729, 18875, 13, 51132, 51132, 467, 311, 5850, 2217, 12819, 420, 370, 11, 1310, 3356, 13, 51288, 51288, 400, 291, 528, 472, 295, 729, 18875, 633, 1266, 34184, 11, 51454, 51454, 370, 466, 2319, 1413, 680, 1150, 13, 51562, 51562, 407, 291, 362, 257, 8310, 295, 3356, 12, 18759, 18875, 11, 51764, 51764, 466, 2319, 680, 1150, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1491825431585312, "compression_ratio": 1.8294573643410852, "no_speech_prob": 5.899176903767511e-05}, {"id": 66, "seek": 19568, "start": 209.52, "end": 211.04000000000002, "text": " And you have one of those vectors.", "tokens": [50364, 382, 257, 8310, 295, 26753, 18875, 13, 50458, 50458, 407, 729, 366, 11, 291, 13153, 264, 6358, 666, 707, 24004, 13, 50696, 50696, 400, 550, 322, 472, 295, 264, 24004, 11, 291, 50772, 50772, 360, 257, 36810, 4088, 11, 597, 10112, 78, 575, 8825, 281, 291, 13, 50948, 50948, 400, 291, 1261, 309, 666, 1936, 257, 4111, 8062, 13, 51056, 51056, 400, 291, 362, 472, 295, 729, 18875, 13, 51132, 51132, 467, 311, 5850, 2217, 12819, 420, 370, 11, 1310, 3356, 13, 51288, 51288, 400, 291, 528, 472, 295, 729, 18875, 633, 1266, 34184, 11, 51454, 51454, 370, 466, 2319, 1413, 680, 1150, 13, 51562, 51562, 407, 291, 362, 257, 8310, 295, 3356, 12, 18759, 18875, 11, 51764, 51764, 466, 2319, 680, 1150, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1491825431585312, "compression_ratio": 1.8294573643410852, "no_speech_prob": 5.899176903767511e-05}, {"id": 67, "seek": 19568, "start": 211.04000000000002, "end": 214.16, "text": " It's typically 30 dimensions or so, maybe 40.", "tokens": [50364, 382, 257, 8310, 295, 26753, 18875, 13, 50458, 50458, 407, 729, 366, 11, 291, 13153, 264, 6358, 666, 707, 24004, 13, 50696, 50696, 400, 550, 322, 472, 295, 264, 24004, 11, 291, 50772, 50772, 360, 257, 36810, 4088, 11, 597, 10112, 78, 575, 8825, 281, 291, 13, 50948, 50948, 400, 291, 1261, 309, 666, 1936, 257, 4111, 8062, 13, 51056, 51056, 400, 291, 362, 472, 295, 729, 18875, 13, 51132, 51132, 467, 311, 5850, 2217, 12819, 420, 370, 11, 1310, 3356, 13, 51288, 51288, 400, 291, 528, 472, 295, 729, 18875, 633, 1266, 34184, 11, 51454, 51454, 370, 466, 2319, 1413, 680, 1150, 13, 51562, 51562, 407, 291, 362, 257, 8310, 295, 3356, 12, 18759, 18875, 11, 51764, 51764, 466, 2319, 680, 1150, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1491825431585312, "compression_ratio": 1.8294573643410852, "no_speech_prob": 5.899176903767511e-05}, {"id": 68, "seek": 19568, "start": 214.16, "end": 217.48000000000002, "text": " And you want one of those vectors every 10 milliseconds,", "tokens": [50364, 382, 257, 8310, 295, 26753, 18875, 13, 50458, 50458, 407, 729, 366, 11, 291, 13153, 264, 6358, 666, 707, 24004, 13, 50696, 50696, 400, 550, 322, 472, 295, 264, 24004, 11, 291, 50772, 50772, 360, 257, 36810, 4088, 11, 597, 10112, 78, 575, 8825, 281, 291, 13, 50948, 50948, 400, 291, 1261, 309, 666, 1936, 257, 4111, 8062, 13, 51056, 51056, 400, 291, 362, 472, 295, 729, 18875, 13, 51132, 51132, 467, 311, 5850, 2217, 12819, 420, 370, 11, 1310, 3356, 13, 51288, 51288, 400, 291, 528, 472, 295, 729, 18875, 633, 1266, 34184, 11, 51454, 51454, 370, 466, 2319, 1413, 680, 1150, 13, 51562, 51562, 407, 291, 362, 257, 8310, 295, 3356, 12, 18759, 18875, 11, 51764, 51764, 466, 2319, 680, 1150, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1491825431585312, "compression_ratio": 1.8294573643410852, "no_speech_prob": 5.899176903767511e-05}, {"id": 69, "seek": 19568, "start": 217.48000000000002, "end": 219.64000000000001, "text": " so about 100 times per second.", "tokens": [50364, 382, 257, 8310, 295, 26753, 18875, 13, 50458, 50458, 407, 729, 366, 11, 291, 13153, 264, 6358, 666, 707, 24004, 13, 50696, 50696, 400, 550, 322, 472, 295, 264, 24004, 11, 291, 50772, 50772, 360, 257, 36810, 4088, 11, 597, 10112, 78, 575, 8825, 281, 291, 13, 50948, 50948, 400, 291, 1261, 309, 666, 1936, 257, 4111, 8062, 13, 51056, 51056, 400, 291, 362, 472, 295, 729, 18875, 13, 51132, 51132, 467, 311, 5850, 2217, 12819, 420, 370, 11, 1310, 3356, 13, 51288, 51288, 400, 291, 528, 472, 295, 729, 18875, 633, 1266, 34184, 11, 51454, 51454, 370, 466, 2319, 1413, 680, 1150, 13, 51562, 51562, 407, 291, 362, 257, 8310, 295, 3356, 12, 18759, 18875, 11, 51764, 51764, 466, 2319, 680, 1150, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1491825431585312, "compression_ratio": 1.8294573643410852, "no_speech_prob": 5.899176903767511e-05}, {"id": 70, "seek": 19568, "start": 219.64000000000001, "end": 223.68, "text": " So you have a sequence of 40-dimensional vectors,", "tokens": [50364, 382, 257, 8310, 295, 26753, 18875, 13, 50458, 50458, 407, 729, 366, 11, 291, 13153, 264, 6358, 666, 707, 24004, 13, 50696, 50696, 400, 550, 322, 472, 295, 264, 24004, 11, 291, 50772, 50772, 360, 257, 36810, 4088, 11, 597, 10112, 78, 575, 8825, 281, 291, 13, 50948, 50948, 400, 291, 1261, 309, 666, 1936, 257, 4111, 8062, 13, 51056, 51056, 400, 291, 362, 472, 295, 729, 18875, 13, 51132, 51132, 467, 311, 5850, 2217, 12819, 420, 370, 11, 1310, 3356, 13, 51288, 51288, 400, 291, 528, 472, 295, 729, 18875, 633, 1266, 34184, 11, 51454, 51454, 370, 466, 2319, 1413, 680, 1150, 13, 51562, 51562, 407, 291, 362, 257, 8310, 295, 3356, 12, 18759, 18875, 11, 51764, 51764, 466, 2319, 680, 1150, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1491825431585312, "compression_ratio": 1.8294573643410852, "no_speech_prob": 5.899176903767511e-05}, {"id": 71, "seek": 19568, "start": 223.68, "end": 224.76000000000002, "text": " about 100 per second.", "tokens": [50364, 382, 257, 8310, 295, 26753, 18875, 13, 50458, 50458, 407, 729, 366, 11, 291, 13153, 264, 6358, 666, 707, 24004, 13, 50696, 50696, 400, 550, 322, 472, 295, 264, 24004, 11, 291, 50772, 50772, 360, 257, 36810, 4088, 11, 597, 10112, 78, 575, 8825, 281, 291, 13, 50948, 50948, 400, 291, 1261, 309, 666, 1936, 257, 4111, 8062, 13, 51056, 51056, 400, 291, 362, 472, 295, 729, 18875, 13, 51132, 51132, 467, 311, 5850, 2217, 12819, 420, 370, 11, 1310, 3356, 13, 51288, 51288, 400, 291, 528, 472, 295, 729, 18875, 633, 1266, 34184, 11, 51454, 51454, 370, 466, 2319, 1413, 680, 1150, 13, 51562, 51562, 407, 291, 362, 257, 8310, 295, 3356, 12, 18759, 18875, 11, 51764, 51764, 466, 2319, 680, 1150, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1491825431585312, "compression_ratio": 1.8294573643410852, "no_speech_prob": 5.899176903767511e-05}, {"id": 72, "seek": 22476, "start": 224.76, "end": 226.95999999999998, "text": " And you run this through a convolutional net,", "tokens": [50364, 400, 291, 1190, 341, 807, 257, 45216, 304, 2533, 11, 50474, 50474, 257, 30881, 45216, 304, 2533, 13, 50558, 50558, 400, 412, 264, 5598, 295, 309, 11, 437, 291, 483, 50672, 50672, 307, 257, 8310, 295, 4111, 18875, 13, 50770, 50770, 509, 393, 519, 295, 309, 341, 636, 13, 50850, 50850, 682, 4363, 3652, 11, 729, 4111, 18875, 50933, 50933, 366, 767, 733, 295, 2787, 41167, 18875, 51090, 51090, 300, 13330, 257, 7719, 13, 51154, 51154, 583, 294, 641, 1389, 11, 309, 2067, 380, 13, 51320, 51320, 400, 729, 393, 312, 412, 264, 912, 3314, 11, 420, 436, 393, 312, 14009, 13, 51508, 51508, 407, 498, 264, 18161, 2533, 575, 11, 498, 264, 45216, 304, 2533, 51666, 51666, 575, 30881, 2090, 335, 11970, 11, 291, 434, 406, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.12415869909388419, "compression_ratio": 1.7992125984251968, "no_speech_prob": 2.1090185327921063e-05}, {"id": 73, "seek": 22476, "start": 226.95999999999998, "end": 228.64, "text": " a temporal convolutional net.", "tokens": [50364, 400, 291, 1190, 341, 807, 257, 45216, 304, 2533, 11, 50474, 50474, 257, 30881, 45216, 304, 2533, 13, 50558, 50558, 400, 412, 264, 5598, 295, 309, 11, 437, 291, 483, 50672, 50672, 307, 257, 8310, 295, 4111, 18875, 13, 50770, 50770, 509, 393, 519, 295, 309, 341, 636, 13, 50850, 50850, 682, 4363, 3652, 11, 729, 4111, 18875, 50933, 50933, 366, 767, 733, 295, 2787, 41167, 18875, 51090, 51090, 300, 13330, 257, 7719, 13, 51154, 51154, 583, 294, 641, 1389, 11, 309, 2067, 380, 13, 51320, 51320, 400, 729, 393, 312, 412, 264, 912, 3314, 11, 420, 436, 393, 312, 14009, 13, 51508, 51508, 407, 498, 264, 18161, 2533, 575, 11, 498, 264, 45216, 304, 2533, 51666, 51666, 575, 30881, 2090, 335, 11970, 11, 291, 434, 406, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.12415869909388419, "compression_ratio": 1.7992125984251968, "no_speech_prob": 2.1090185327921063e-05}, {"id": 74, "seek": 22476, "start": 228.64, "end": 230.92, "text": " And at the output of it, what you get", "tokens": [50364, 400, 291, 1190, 341, 807, 257, 45216, 304, 2533, 11, 50474, 50474, 257, 30881, 45216, 304, 2533, 13, 50558, 50558, 400, 412, 264, 5598, 295, 309, 11, 437, 291, 483, 50672, 50672, 307, 257, 8310, 295, 4111, 18875, 13, 50770, 50770, 509, 393, 519, 295, 309, 341, 636, 13, 50850, 50850, 682, 4363, 3652, 11, 729, 4111, 18875, 50933, 50933, 366, 767, 733, 295, 2787, 41167, 18875, 51090, 51090, 300, 13330, 257, 7719, 13, 51154, 51154, 583, 294, 641, 1389, 11, 309, 2067, 380, 13, 51320, 51320, 400, 729, 393, 312, 412, 264, 912, 3314, 11, 420, 436, 393, 312, 14009, 13, 51508, 51508, 407, 498, 264, 18161, 2533, 575, 11, 498, 264, 45216, 304, 2533, 51666, 51666, 575, 30881, 2090, 335, 11970, 11, 291, 434, 406, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.12415869909388419, "compression_ratio": 1.7992125984251968, "no_speech_prob": 2.1090185327921063e-05}, {"id": 75, "seek": 22476, "start": 230.92, "end": 232.88, "text": " is a sequence of feature vectors.", "tokens": [50364, 400, 291, 1190, 341, 807, 257, 45216, 304, 2533, 11, 50474, 50474, 257, 30881, 45216, 304, 2533, 13, 50558, 50558, 400, 412, 264, 5598, 295, 309, 11, 437, 291, 483, 50672, 50672, 307, 257, 8310, 295, 4111, 18875, 13, 50770, 50770, 509, 393, 519, 295, 309, 341, 636, 13, 50850, 50850, 682, 4363, 3652, 11, 729, 4111, 18875, 50933, 50933, 366, 767, 733, 295, 2787, 41167, 18875, 51090, 51090, 300, 13330, 257, 7719, 13, 51154, 51154, 583, 294, 641, 1389, 11, 309, 2067, 380, 13, 51320, 51320, 400, 729, 393, 312, 412, 264, 912, 3314, 11, 420, 436, 393, 312, 14009, 13, 51508, 51508, 407, 498, 264, 18161, 2533, 575, 11, 498, 264, 45216, 304, 2533, 51666, 51666, 575, 30881, 2090, 335, 11970, 11, 291, 434, 406, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.12415869909388419, "compression_ratio": 1.7992125984251968, "no_speech_prob": 2.1090185327921063e-05}, {"id": 76, "seek": 22476, "start": 232.88, "end": 234.48, "text": " You can think of it this way.", "tokens": [50364, 400, 291, 1190, 341, 807, 257, 45216, 304, 2533, 11, 50474, 50474, 257, 30881, 45216, 304, 2533, 13, 50558, 50558, 400, 412, 264, 5598, 295, 309, 11, 437, 291, 483, 50672, 50672, 307, 257, 8310, 295, 4111, 18875, 13, 50770, 50770, 509, 393, 519, 295, 309, 341, 636, 13, 50850, 50850, 682, 4363, 3652, 11, 729, 4111, 18875, 50933, 50933, 366, 767, 733, 295, 2787, 41167, 18875, 51090, 51090, 300, 13330, 257, 7719, 13, 51154, 51154, 583, 294, 641, 1389, 11, 309, 2067, 380, 13, 51320, 51320, 400, 729, 393, 312, 412, 264, 912, 3314, 11, 420, 436, 393, 312, 14009, 13, 51508, 51508, 407, 498, 264, 18161, 2533, 575, 11, 498, 264, 45216, 304, 2533, 51666, 51666, 575, 30881, 2090, 335, 11970, 11, 291, 434, 406, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.12415869909388419, "compression_ratio": 1.7992125984251968, "no_speech_prob": 2.1090185327921063e-05}, {"id": 77, "seek": 22476, "start": 234.48, "end": 236.14, "text": " In modern systems, those feature vectors", "tokens": [50364, 400, 291, 1190, 341, 807, 257, 45216, 304, 2533, 11, 50474, 50474, 257, 30881, 45216, 304, 2533, 13, 50558, 50558, 400, 412, 264, 5598, 295, 309, 11, 437, 291, 483, 50672, 50672, 307, 257, 8310, 295, 4111, 18875, 13, 50770, 50770, 509, 393, 519, 295, 309, 341, 636, 13, 50850, 50850, 682, 4363, 3652, 11, 729, 4111, 18875, 50933, 50933, 366, 767, 733, 295, 2787, 41167, 18875, 51090, 51090, 300, 13330, 257, 7719, 13, 51154, 51154, 583, 294, 641, 1389, 11, 309, 2067, 380, 13, 51320, 51320, 400, 729, 393, 312, 412, 264, 912, 3314, 11, 420, 436, 393, 312, 14009, 13, 51508, 51508, 407, 498, 264, 18161, 2533, 575, 11, 498, 264, 45216, 304, 2533, 51666, 51666, 575, 30881, 2090, 335, 11970, 11, 291, 434, 406, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.12415869909388419, "compression_ratio": 1.7992125984251968, "no_speech_prob": 2.1090185327921063e-05}, {"id": 78, "seek": 22476, "start": 236.14, "end": 239.28, "text": " are actually kind of softmax vectors", "tokens": [50364, 400, 291, 1190, 341, 807, 257, 45216, 304, 2533, 11, 50474, 50474, 257, 30881, 45216, 304, 2533, 13, 50558, 50558, 400, 412, 264, 5598, 295, 309, 11, 437, 291, 483, 50672, 50672, 307, 257, 8310, 295, 4111, 18875, 13, 50770, 50770, 509, 393, 519, 295, 309, 341, 636, 13, 50850, 50850, 682, 4363, 3652, 11, 729, 4111, 18875, 50933, 50933, 366, 767, 733, 295, 2787, 41167, 18875, 51090, 51090, 300, 13330, 257, 7719, 13, 51154, 51154, 583, 294, 641, 1389, 11, 309, 2067, 380, 13, 51320, 51320, 400, 729, 393, 312, 412, 264, 912, 3314, 11, 420, 436, 393, 312, 14009, 13, 51508, 51508, 407, 498, 264, 18161, 2533, 575, 11, 498, 264, 45216, 304, 2533, 51666, 51666, 575, 30881, 2090, 335, 11970, 11, 291, 434, 406, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.12415869909388419, "compression_ratio": 1.7992125984251968, "no_speech_prob": 2.1090185327921063e-05}, {"id": 79, "seek": 22476, "start": 239.28, "end": 240.56, "text": " that indicate a category.", "tokens": [50364, 400, 291, 1190, 341, 807, 257, 45216, 304, 2533, 11, 50474, 50474, 257, 30881, 45216, 304, 2533, 13, 50558, 50558, 400, 412, 264, 5598, 295, 309, 11, 437, 291, 483, 50672, 50672, 307, 257, 8310, 295, 4111, 18875, 13, 50770, 50770, 509, 393, 519, 295, 309, 341, 636, 13, 50850, 50850, 682, 4363, 3652, 11, 729, 4111, 18875, 50933, 50933, 366, 767, 733, 295, 2787, 41167, 18875, 51090, 51090, 300, 13330, 257, 7719, 13, 51154, 51154, 583, 294, 641, 1389, 11, 309, 2067, 380, 13, 51320, 51320, 400, 729, 393, 312, 412, 264, 912, 3314, 11, 420, 436, 393, 312, 14009, 13, 51508, 51508, 407, 498, 264, 18161, 2533, 575, 11, 498, 264, 45216, 304, 2533, 51666, 51666, 575, 30881, 2090, 335, 11970, 11, 291, 434, 406, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.12415869909388419, "compression_ratio": 1.7992125984251968, "no_speech_prob": 2.1090185327921063e-05}, {"id": 80, "seek": 22476, "start": 240.56, "end": 243.88, "text": " But in their case, it wasn't.", "tokens": [50364, 400, 291, 1190, 341, 807, 257, 45216, 304, 2533, 11, 50474, 50474, 257, 30881, 45216, 304, 2533, 13, 50558, 50558, 400, 412, 264, 5598, 295, 309, 11, 437, 291, 483, 50672, 50672, 307, 257, 8310, 295, 4111, 18875, 13, 50770, 50770, 509, 393, 519, 295, 309, 341, 636, 13, 50850, 50850, 682, 4363, 3652, 11, 729, 4111, 18875, 50933, 50933, 366, 767, 733, 295, 2787, 41167, 18875, 51090, 51090, 300, 13330, 257, 7719, 13, 51154, 51154, 583, 294, 641, 1389, 11, 309, 2067, 380, 13, 51320, 51320, 400, 729, 393, 312, 412, 264, 912, 3314, 11, 420, 436, 393, 312, 14009, 13, 51508, 51508, 407, 498, 264, 18161, 2533, 575, 11, 498, 264, 45216, 304, 2533, 51666, 51666, 575, 30881, 2090, 335, 11970, 11, 291, 434, 406, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.12415869909388419, "compression_ratio": 1.7992125984251968, "no_speech_prob": 2.1090185327921063e-05}, {"id": 81, "seek": 22476, "start": 243.88, "end": 247.64, "text": " And those can be at the same rate, or they can be slower.", "tokens": [50364, 400, 291, 1190, 341, 807, 257, 45216, 304, 2533, 11, 50474, 50474, 257, 30881, 45216, 304, 2533, 13, 50558, 50558, 400, 412, 264, 5598, 295, 309, 11, 437, 291, 483, 50672, 50672, 307, 257, 8310, 295, 4111, 18875, 13, 50770, 50770, 509, 393, 519, 295, 309, 341, 636, 13, 50850, 50850, 682, 4363, 3652, 11, 729, 4111, 18875, 50933, 50933, 366, 767, 733, 295, 2787, 41167, 18875, 51090, 51090, 300, 13330, 257, 7719, 13, 51154, 51154, 583, 294, 641, 1389, 11, 309, 2067, 380, 13, 51320, 51320, 400, 729, 393, 312, 412, 264, 912, 3314, 11, 420, 436, 393, 312, 14009, 13, 51508, 51508, 407, 498, 264, 18161, 2533, 575, 11, 498, 264, 45216, 304, 2533, 51666, 51666, 575, 30881, 2090, 335, 11970, 11, 291, 434, 406, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.12415869909388419, "compression_ratio": 1.7992125984251968, "no_speech_prob": 2.1090185327921063e-05}, {"id": 82, "seek": 22476, "start": 247.64, "end": 250.79999999999998, "text": " So if the neural net has, if the convolutional net", "tokens": [50364, 400, 291, 1190, 341, 807, 257, 45216, 304, 2533, 11, 50474, 50474, 257, 30881, 45216, 304, 2533, 13, 50558, 50558, 400, 412, 264, 5598, 295, 309, 11, 437, 291, 483, 50672, 50672, 307, 257, 8310, 295, 4111, 18875, 13, 50770, 50770, 509, 393, 519, 295, 309, 341, 636, 13, 50850, 50850, 682, 4363, 3652, 11, 729, 4111, 18875, 50933, 50933, 366, 767, 733, 295, 2787, 41167, 18875, 51090, 51090, 300, 13330, 257, 7719, 13, 51154, 51154, 583, 294, 641, 1389, 11, 309, 2067, 380, 13, 51320, 51320, 400, 729, 393, 312, 412, 264, 912, 3314, 11, 420, 436, 393, 312, 14009, 13, 51508, 51508, 407, 498, 264, 18161, 2533, 575, 11, 498, 264, 45216, 304, 2533, 51666, 51666, 575, 30881, 2090, 335, 11970, 11, 291, 434, 406, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.12415869909388419, "compression_ratio": 1.7992125984251968, "no_speech_prob": 2.1090185327921063e-05}, {"id": 83, "seek": 22476, "start": 250.79999999999998, "end": 253.14, "text": " has temporal subsampling, you're not", "tokens": [50364, 400, 291, 1190, 341, 807, 257, 45216, 304, 2533, 11, 50474, 50474, 257, 30881, 45216, 304, 2533, 13, 50558, 50558, 400, 412, 264, 5598, 295, 309, 11, 437, 291, 483, 50672, 50672, 307, 257, 8310, 295, 4111, 18875, 13, 50770, 50770, 509, 393, 519, 295, 309, 341, 636, 13, 50850, 50850, 682, 4363, 3652, 11, 729, 4111, 18875, 50933, 50933, 366, 767, 733, 295, 2787, 41167, 18875, 51090, 51090, 300, 13330, 257, 7719, 13, 51154, 51154, 583, 294, 641, 1389, 11, 309, 2067, 380, 13, 51320, 51320, 400, 729, 393, 312, 412, 264, 912, 3314, 11, 420, 436, 393, 312, 14009, 13, 51508, 51508, 407, 498, 264, 18161, 2533, 575, 11, 498, 264, 45216, 304, 2533, 51666, 51666, 575, 30881, 2090, 335, 11970, 11, 291, 434, 406, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.12415869909388419, "compression_ratio": 1.7992125984251968, "no_speech_prob": 2.1090185327921063e-05}, {"id": 84, "seek": 25314, "start": 253.14, "end": 255.2, "text": " going to get 10 of those feature vectors per second.", "tokens": [50364, 516, 281, 483, 1266, 295, 729, 4111, 18875, 680, 1150, 13, 50467, 50467, 509, 1062, 483, 3552, 11, 568, 293, 502, 1922, 420, 746, 13, 50713, 50713, 286, 478, 2597, 13, 50745, 50745, 1711, 264, 4846, 11, 456, 307, 2319, 13, 50799, 50799, 407, 498, 291, 362, 257, 2090, 335, 11970, 538, 257, 5952, 295, 1017, 11, 50931, 50931, 291, 486, 483, 3552, 4111, 18875, 680, 1150, 11, 406, 2319, 11, 51139, 51139, 420, 746, 411, 300, 13, 51189, 51189, 823, 11, 510, 307, 264, 1154, 13, 51237, 51237, 440, 1154, 307, 291, 528, 281, 5521, 597, 1349, 390, 445, 51357, 51357, 23155, 13, 51461, 51461, 400, 819, 561, 486, 19567, 264, 912, 1349, 51679, 51679, 412, 819, 16411, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.18357806051931075, "compression_ratio": 1.6771653543307086, "no_speech_prob": 4.710544089903124e-06}, {"id": 85, "seek": 25314, "start": 255.2, "end": 260.12, "text": " You might get 25, 2 and 1 half or something.", "tokens": [50364, 516, 281, 483, 1266, 295, 729, 4111, 18875, 680, 1150, 13, 50467, 50467, 509, 1062, 483, 3552, 11, 568, 293, 502, 1922, 420, 746, 13, 50713, 50713, 286, 478, 2597, 13, 50745, 50745, 1711, 264, 4846, 11, 456, 307, 2319, 13, 50799, 50799, 407, 498, 291, 362, 257, 2090, 335, 11970, 538, 257, 5952, 295, 1017, 11, 50931, 50931, 291, 486, 483, 3552, 4111, 18875, 680, 1150, 11, 406, 2319, 11, 51139, 51139, 420, 746, 411, 300, 13, 51189, 51189, 823, 11, 510, 307, 264, 1154, 13, 51237, 51237, 440, 1154, 307, 291, 528, 281, 5521, 597, 1349, 390, 445, 51357, 51357, 23155, 13, 51461, 51461, 400, 819, 561, 486, 19567, 264, 912, 1349, 51679, 51679, 412, 819, 16411, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.18357806051931075, "compression_ratio": 1.6771653543307086, "no_speech_prob": 4.710544089903124e-06}, {"id": 86, "seek": 25314, "start": 260.12, "end": 260.76, "text": " I'm sorry.", "tokens": [50364, 516, 281, 483, 1266, 295, 729, 4111, 18875, 680, 1150, 13, 50467, 50467, 509, 1062, 483, 3552, 11, 568, 293, 502, 1922, 420, 746, 13, 50713, 50713, 286, 478, 2597, 13, 50745, 50745, 1711, 264, 4846, 11, 456, 307, 2319, 13, 50799, 50799, 407, 498, 291, 362, 257, 2090, 335, 11970, 538, 257, 5952, 295, 1017, 11, 50931, 50931, 291, 486, 483, 3552, 4111, 18875, 680, 1150, 11, 406, 2319, 11, 51139, 51139, 420, 746, 411, 300, 13, 51189, 51189, 823, 11, 510, 307, 264, 1154, 13, 51237, 51237, 440, 1154, 307, 291, 528, 281, 5521, 597, 1349, 390, 445, 51357, 51357, 23155, 13, 51461, 51461, 400, 819, 561, 486, 19567, 264, 912, 1349, 51679, 51679, 412, 819, 16411, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.18357806051931075, "compression_ratio": 1.6771653543307086, "no_speech_prob": 4.710544089903124e-06}, {"id": 87, "seek": 25314, "start": 260.76, "end": 261.84, "text": " At the input, there is 100.", "tokens": [50364, 516, 281, 483, 1266, 295, 729, 4111, 18875, 680, 1150, 13, 50467, 50467, 509, 1062, 483, 3552, 11, 568, 293, 502, 1922, 420, 746, 13, 50713, 50713, 286, 478, 2597, 13, 50745, 50745, 1711, 264, 4846, 11, 456, 307, 2319, 13, 50799, 50799, 407, 498, 291, 362, 257, 2090, 335, 11970, 538, 257, 5952, 295, 1017, 11, 50931, 50931, 291, 486, 483, 3552, 4111, 18875, 680, 1150, 11, 406, 2319, 11, 51139, 51139, 420, 746, 411, 300, 13, 51189, 51189, 823, 11, 510, 307, 264, 1154, 13, 51237, 51237, 440, 1154, 307, 291, 528, 281, 5521, 597, 1349, 390, 445, 51357, 51357, 23155, 13, 51461, 51461, 400, 819, 561, 486, 19567, 264, 912, 1349, 51679, 51679, 412, 819, 16411, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.18357806051931075, "compression_ratio": 1.6771653543307086, "no_speech_prob": 4.710544089903124e-06}, {"id": 88, "seek": 25314, "start": 261.84, "end": 264.47999999999996, "text": " So if you have a subsampling by a factor of 4,", "tokens": [50364, 516, 281, 483, 1266, 295, 729, 4111, 18875, 680, 1150, 13, 50467, 50467, 509, 1062, 483, 3552, 11, 568, 293, 502, 1922, 420, 746, 13, 50713, 50713, 286, 478, 2597, 13, 50745, 50745, 1711, 264, 4846, 11, 456, 307, 2319, 13, 50799, 50799, 407, 498, 291, 362, 257, 2090, 335, 11970, 538, 257, 5952, 295, 1017, 11, 50931, 50931, 291, 486, 483, 3552, 4111, 18875, 680, 1150, 11, 406, 2319, 11, 51139, 51139, 420, 746, 411, 300, 13, 51189, 51189, 823, 11, 510, 307, 264, 1154, 13, 51237, 51237, 440, 1154, 307, 291, 528, 281, 5521, 597, 1349, 390, 445, 51357, 51357, 23155, 13, 51461, 51461, 400, 819, 561, 486, 19567, 264, 912, 1349, 51679, 51679, 412, 819, 16411, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.18357806051931075, "compression_ratio": 1.6771653543307086, "no_speech_prob": 4.710544089903124e-06}, {"id": 89, "seek": 25314, "start": 264.47999999999996, "end": 268.64, "text": " you will get 25 feature vectors per second, not 100,", "tokens": [50364, 516, 281, 483, 1266, 295, 729, 4111, 18875, 680, 1150, 13, 50467, 50467, 509, 1062, 483, 3552, 11, 568, 293, 502, 1922, 420, 746, 13, 50713, 50713, 286, 478, 2597, 13, 50745, 50745, 1711, 264, 4846, 11, 456, 307, 2319, 13, 50799, 50799, 407, 498, 291, 362, 257, 2090, 335, 11970, 538, 257, 5952, 295, 1017, 11, 50931, 50931, 291, 486, 483, 3552, 4111, 18875, 680, 1150, 11, 406, 2319, 11, 51139, 51139, 420, 746, 411, 300, 13, 51189, 51189, 823, 11, 510, 307, 264, 1154, 13, 51237, 51237, 440, 1154, 307, 291, 528, 281, 5521, 597, 1349, 390, 445, 51357, 51357, 23155, 13, 51461, 51461, 400, 819, 561, 486, 19567, 264, 912, 1349, 51679, 51679, 412, 819, 16411, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.18357806051931075, "compression_ratio": 1.6771653543307086, "no_speech_prob": 4.710544089903124e-06}, {"id": 90, "seek": 25314, "start": 268.64, "end": 269.64, "text": " or something like that.", "tokens": [50364, 516, 281, 483, 1266, 295, 729, 4111, 18875, 680, 1150, 13, 50467, 50467, 509, 1062, 483, 3552, 11, 568, 293, 502, 1922, 420, 746, 13, 50713, 50713, 286, 478, 2597, 13, 50745, 50745, 1711, 264, 4846, 11, 456, 307, 2319, 13, 50799, 50799, 407, 498, 291, 362, 257, 2090, 335, 11970, 538, 257, 5952, 295, 1017, 11, 50931, 50931, 291, 486, 483, 3552, 4111, 18875, 680, 1150, 11, 406, 2319, 11, 51139, 51139, 420, 746, 411, 300, 13, 51189, 51189, 823, 11, 510, 307, 264, 1154, 13, 51237, 51237, 440, 1154, 307, 291, 528, 281, 5521, 597, 1349, 390, 445, 51357, 51357, 23155, 13, 51461, 51461, 400, 819, 561, 486, 19567, 264, 912, 1349, 51679, 51679, 412, 819, 16411, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.18357806051931075, "compression_ratio": 1.6771653543307086, "no_speech_prob": 4.710544089903124e-06}, {"id": 91, "seek": 25314, "start": 269.64, "end": 270.59999999999997, "text": " Now, here is the problem.", "tokens": [50364, 516, 281, 483, 1266, 295, 729, 4111, 18875, 680, 1150, 13, 50467, 50467, 509, 1062, 483, 3552, 11, 568, 293, 502, 1922, 420, 746, 13, 50713, 50713, 286, 478, 2597, 13, 50745, 50745, 1711, 264, 4846, 11, 456, 307, 2319, 13, 50799, 50799, 407, 498, 291, 362, 257, 2090, 335, 11970, 538, 257, 5952, 295, 1017, 11, 50931, 50931, 291, 486, 483, 3552, 4111, 18875, 680, 1150, 11, 406, 2319, 11, 51139, 51139, 420, 746, 411, 300, 13, 51189, 51189, 823, 11, 510, 307, 264, 1154, 13, 51237, 51237, 440, 1154, 307, 291, 528, 281, 5521, 597, 1349, 390, 445, 51357, 51357, 23155, 13, 51461, 51461, 400, 819, 561, 486, 19567, 264, 912, 1349, 51679, 51679, 412, 819, 16411, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.18357806051931075, "compression_ratio": 1.6771653543307086, "no_speech_prob": 4.710544089903124e-06}, {"id": 92, "seek": 25314, "start": 270.59999999999997, "end": 273.0, "text": " The problem is you want to recognize which word was just", "tokens": [50364, 516, 281, 483, 1266, 295, 729, 4111, 18875, 680, 1150, 13, 50467, 50467, 509, 1062, 483, 3552, 11, 568, 293, 502, 1922, 420, 746, 13, 50713, 50713, 286, 478, 2597, 13, 50745, 50745, 1711, 264, 4846, 11, 456, 307, 2319, 13, 50799, 50799, 407, 498, 291, 362, 257, 2090, 335, 11970, 538, 257, 5952, 295, 1017, 11, 50931, 50931, 291, 486, 483, 3552, 4111, 18875, 680, 1150, 11, 406, 2319, 11, 51139, 51139, 420, 746, 411, 300, 13, 51189, 51189, 823, 11, 510, 307, 264, 1154, 13, 51237, 51237, 440, 1154, 307, 291, 528, 281, 5521, 597, 1349, 390, 445, 51357, 51357, 23155, 13, 51461, 51461, 400, 819, 561, 486, 19567, 264, 912, 1349, 51679, 51679, 412, 819, 16411, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.18357806051931075, "compression_ratio": 1.6771653543307086, "no_speech_prob": 4.710544089903124e-06}, {"id": 93, "seek": 25314, "start": 273.0, "end": 275.08, "text": " pronounced.", "tokens": [50364, 516, 281, 483, 1266, 295, 729, 4111, 18875, 680, 1150, 13, 50467, 50467, 509, 1062, 483, 3552, 11, 568, 293, 502, 1922, 420, 746, 13, 50713, 50713, 286, 478, 2597, 13, 50745, 50745, 1711, 264, 4846, 11, 456, 307, 2319, 13, 50799, 50799, 407, 498, 291, 362, 257, 2090, 335, 11970, 538, 257, 5952, 295, 1017, 11, 50931, 50931, 291, 486, 483, 3552, 4111, 18875, 680, 1150, 11, 406, 2319, 11, 51139, 51139, 420, 746, 411, 300, 13, 51189, 51189, 823, 11, 510, 307, 264, 1154, 13, 51237, 51237, 440, 1154, 307, 291, 528, 281, 5521, 597, 1349, 390, 445, 51357, 51357, 23155, 13, 51461, 51461, 400, 819, 561, 486, 19567, 264, 912, 1349, 51679, 51679, 412, 819, 16411, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.18357806051931075, "compression_ratio": 1.6771653543307086, "no_speech_prob": 4.710544089903124e-06}, {"id": 94, "seek": 25314, "start": 275.08, "end": 279.44, "text": " And different people will pronounce the same word", "tokens": [50364, 516, 281, 483, 1266, 295, 729, 4111, 18875, 680, 1150, 13, 50467, 50467, 509, 1062, 483, 3552, 11, 568, 293, 502, 1922, 420, 746, 13, 50713, 50713, 286, 478, 2597, 13, 50745, 50745, 1711, 264, 4846, 11, 456, 307, 2319, 13, 50799, 50799, 407, 498, 291, 362, 257, 2090, 335, 11970, 538, 257, 5952, 295, 1017, 11, 50931, 50931, 291, 486, 483, 3552, 4111, 18875, 680, 1150, 11, 406, 2319, 11, 51139, 51139, 420, 746, 411, 300, 13, 51189, 51189, 823, 11, 510, 307, 264, 1154, 13, 51237, 51237, 440, 1154, 307, 291, 528, 281, 5521, 597, 1349, 390, 445, 51357, 51357, 23155, 13, 51461, 51461, 400, 819, 561, 486, 19567, 264, 912, 1349, 51679, 51679, 412, 819, 16411, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.18357806051931075, "compression_ratio": 1.6771653543307086, "no_speech_prob": 4.710544089903124e-06}, {"id": 95, "seek": 25314, "start": 279.44, "end": 281.71999999999997, "text": " at different speeds.", "tokens": [50364, 516, 281, 483, 1266, 295, 729, 4111, 18875, 680, 1150, 13, 50467, 50467, 509, 1062, 483, 3552, 11, 568, 293, 502, 1922, 420, 746, 13, 50713, 50713, 286, 478, 2597, 13, 50745, 50745, 1711, 264, 4846, 11, 456, 307, 2319, 13, 50799, 50799, 407, 498, 291, 362, 257, 2090, 335, 11970, 538, 257, 5952, 295, 1017, 11, 50931, 50931, 291, 486, 483, 3552, 4111, 18875, 680, 1150, 11, 406, 2319, 11, 51139, 51139, 420, 746, 411, 300, 13, 51189, 51189, 823, 11, 510, 307, 264, 1154, 13, 51237, 51237, 440, 1154, 307, 291, 528, 281, 5521, 597, 1349, 390, 445, 51357, 51357, 23155, 13, 51461, 51461, 400, 819, 561, 486, 19567, 264, 912, 1349, 51679, 51679, 412, 819, 16411, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.18357806051931075, "compression_ratio": 1.6771653543307086, "no_speech_prob": 4.710544089903124e-06}, {"id": 96, "seek": 28172, "start": 281.72, "end": 283.6, "text": " And so what you need to do is what's", "tokens": [50364, 400, 370, 437, 291, 643, 281, 360, 307, 437, 311, 50458, 50458, 1219, 8546, 565, 12, 86, 424, 3759, 13, 50518, 50518, 400, 286, 8825, 341, 1217, 294, 264, 1791, 13, 50666, 50666, 407, 718, 311, 3811, 300, 291, 600, 8287, 341, 954, 13, 50790, 50790, 509, 500, 380, 528, 281, 360, 8145, 12, 471, 4217, 317, 6218, 50920, 50920, 11150, 337, 586, 11, 445, 8145, 12, 29258, 13, 51096, 51096, 407, 291, 600, 8287, 300, 954, 1566, 11, 51344, 51344, 718, 311, 584, 11, 264, 1266, 27011, 11, 10759, 27011, 11, 411, 1958, 11, 502, 11, 568, 11, 805, 11, 1017, 11, 51626, 51626, 1025, 11, 1030, 11458, 11, 570, 291, 434, 787, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.1377852650012, "compression_ratio": 1.6176470588235294, "no_speech_prob": 5.506986781256273e-06}, {"id": 97, "seek": 28172, "start": 283.6, "end": 284.8, "text": " called dynamic time-wrapping.", "tokens": [50364, 400, 370, 437, 291, 643, 281, 360, 307, 437, 311, 50458, 50458, 1219, 8546, 565, 12, 86, 424, 3759, 13, 50518, 50518, 400, 286, 8825, 341, 1217, 294, 264, 1791, 13, 50666, 50666, 407, 718, 311, 3811, 300, 291, 600, 8287, 341, 954, 13, 50790, 50790, 509, 500, 380, 528, 281, 360, 8145, 12, 471, 4217, 317, 6218, 50920, 50920, 11150, 337, 586, 11, 445, 8145, 12, 29258, 13, 51096, 51096, 407, 291, 600, 8287, 300, 954, 1566, 11, 51344, 51344, 718, 311, 584, 11, 264, 1266, 27011, 11, 10759, 27011, 11, 411, 1958, 11, 502, 11, 568, 11, 805, 11, 1017, 11, 51626, 51626, 1025, 11, 1030, 11458, 11, 570, 291, 434, 787, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.1377852650012, "compression_ratio": 1.6176470588235294, "no_speech_prob": 5.506986781256273e-06}, {"id": 98, "seek": 28172, "start": 284.8, "end": 287.76000000000005, "text": " And I explained this already in the past.", "tokens": [50364, 400, 370, 437, 291, 643, 281, 360, 307, 437, 311, 50458, 50458, 1219, 8546, 565, 12, 86, 424, 3759, 13, 50518, 50518, 400, 286, 8825, 341, 1217, 294, 264, 1791, 13, 50666, 50666, 407, 718, 311, 3811, 300, 291, 600, 8287, 341, 954, 13, 50790, 50790, 509, 500, 380, 528, 281, 360, 8145, 12, 471, 4217, 317, 6218, 50920, 50920, 11150, 337, 586, 11, 445, 8145, 12, 29258, 13, 51096, 51096, 407, 291, 600, 8287, 300, 954, 1566, 11, 51344, 51344, 718, 311, 584, 11, 264, 1266, 27011, 11, 10759, 27011, 11, 411, 1958, 11, 502, 11, 568, 11, 805, 11, 1017, 11, 51626, 51626, 1025, 11, 1030, 11458, 11, 570, 291, 434, 787, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.1377852650012, "compression_ratio": 1.6176470588235294, "no_speech_prob": 5.506986781256273e-06}, {"id": 99, "seek": 28172, "start": 287.76000000000005, "end": 290.24, "text": " So let's imagine that you've recorded this person.", "tokens": [50364, 400, 370, 437, 291, 643, 281, 360, 307, 437, 311, 50458, 50458, 1219, 8546, 565, 12, 86, 424, 3759, 13, 50518, 50518, 400, 286, 8825, 341, 1217, 294, 264, 1791, 13, 50666, 50666, 407, 718, 311, 3811, 300, 291, 600, 8287, 341, 954, 13, 50790, 50790, 509, 500, 380, 528, 281, 360, 8145, 12, 471, 4217, 317, 6218, 50920, 50920, 11150, 337, 586, 11, 445, 8145, 12, 29258, 13, 51096, 51096, 407, 291, 600, 8287, 300, 954, 1566, 11, 51344, 51344, 718, 311, 584, 11, 264, 1266, 27011, 11, 10759, 27011, 11, 411, 1958, 11, 502, 11, 568, 11, 805, 11, 1017, 11, 51626, 51626, 1025, 11, 1030, 11458, 11, 570, 291, 434, 787, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.1377852650012, "compression_ratio": 1.6176470588235294, "no_speech_prob": 5.506986781256273e-06}, {"id": 100, "seek": 28172, "start": 290.24, "end": 292.84000000000003, "text": " You don't want to do speaker-independent speech", "tokens": [50364, 400, 370, 437, 291, 643, 281, 360, 307, 437, 311, 50458, 50458, 1219, 8546, 565, 12, 86, 424, 3759, 13, 50518, 50518, 400, 286, 8825, 341, 1217, 294, 264, 1791, 13, 50666, 50666, 407, 718, 311, 3811, 300, 291, 600, 8287, 341, 954, 13, 50790, 50790, 509, 500, 380, 528, 281, 360, 8145, 12, 471, 4217, 317, 6218, 50920, 50920, 11150, 337, 586, 11, 445, 8145, 12, 29258, 13, 51096, 51096, 407, 291, 600, 8287, 300, 954, 1566, 11, 51344, 51344, 718, 311, 584, 11, 264, 1266, 27011, 11, 10759, 27011, 11, 411, 1958, 11, 502, 11, 568, 11, 805, 11, 1017, 11, 51626, 51626, 1025, 11, 1030, 11458, 11, 570, 291, 434, 787, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.1377852650012, "compression_ratio": 1.6176470588235294, "no_speech_prob": 5.506986781256273e-06}, {"id": 101, "seek": 28172, "start": 292.84000000000003, "end": 296.36, "text": " recognition for now, just speaker-specific.", "tokens": [50364, 400, 370, 437, 291, 643, 281, 360, 307, 437, 311, 50458, 50458, 1219, 8546, 565, 12, 86, 424, 3759, 13, 50518, 50518, 400, 286, 8825, 341, 1217, 294, 264, 1791, 13, 50666, 50666, 407, 718, 311, 3811, 300, 291, 600, 8287, 341, 954, 13, 50790, 50790, 509, 500, 380, 528, 281, 360, 8145, 12, 471, 4217, 317, 6218, 50920, 50920, 11150, 337, 586, 11, 445, 8145, 12, 29258, 13, 51096, 51096, 407, 291, 600, 8287, 300, 954, 1566, 11, 51344, 51344, 718, 311, 584, 11, 264, 1266, 27011, 11, 10759, 27011, 11, 411, 1958, 11, 502, 11, 568, 11, 805, 11, 1017, 11, 51626, 51626, 1025, 11, 1030, 11458, 11, 570, 291, 434, 787, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.1377852650012, "compression_ratio": 1.6176470588235294, "no_speech_prob": 5.506986781256273e-06}, {"id": 102, "seek": 28172, "start": 296.36, "end": 301.32000000000005, "text": " So you've recorded that person saying,", "tokens": [50364, 400, 370, 437, 291, 643, 281, 360, 307, 437, 311, 50458, 50458, 1219, 8546, 565, 12, 86, 424, 3759, 13, 50518, 50518, 400, 286, 8825, 341, 1217, 294, 264, 1791, 13, 50666, 50666, 407, 718, 311, 3811, 300, 291, 600, 8287, 341, 954, 13, 50790, 50790, 509, 500, 380, 528, 281, 360, 8145, 12, 471, 4217, 317, 6218, 50920, 50920, 11150, 337, 586, 11, 445, 8145, 12, 29258, 13, 51096, 51096, 407, 291, 600, 8287, 300, 954, 1566, 11, 51344, 51344, 718, 311, 584, 11, 264, 1266, 27011, 11, 10759, 27011, 11, 411, 1958, 11, 502, 11, 568, 11, 805, 11, 1017, 11, 51626, 51626, 1025, 11, 1030, 11458, 11, 570, 291, 434, 787, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.1377852650012, "compression_ratio": 1.6176470588235294, "no_speech_prob": 5.506986781256273e-06}, {"id": 103, "seek": 28172, "start": 301.32000000000005, "end": 306.96000000000004, "text": " let's say, the 10 digits, spoken digits, like 0, 1, 2, 3, 4,", "tokens": [50364, 400, 370, 437, 291, 643, 281, 360, 307, 437, 311, 50458, 50458, 1219, 8546, 565, 12, 86, 424, 3759, 13, 50518, 50518, 400, 286, 8825, 341, 1217, 294, 264, 1791, 13, 50666, 50666, 407, 718, 311, 3811, 300, 291, 600, 8287, 341, 954, 13, 50790, 50790, 509, 500, 380, 528, 281, 360, 8145, 12, 471, 4217, 317, 6218, 50920, 50920, 11150, 337, 586, 11, 445, 8145, 12, 29258, 13, 51096, 51096, 407, 291, 600, 8287, 300, 954, 1566, 11, 51344, 51344, 718, 311, 584, 11, 264, 1266, 27011, 11, 10759, 27011, 11, 411, 1958, 11, 502, 11, 568, 11, 805, 11, 1017, 11, 51626, 51626, 1025, 11, 1030, 11458, 11, 570, 291, 434, 787, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.1377852650012, "compression_ratio": 1.6176470588235294, "no_speech_prob": 5.506986781256273e-06}, {"id": 104, "seek": 28172, "start": 306.96000000000004, "end": 309.12, "text": " 5, et cetera, because you're only", "tokens": [50364, 400, 370, 437, 291, 643, 281, 360, 307, 437, 311, 50458, 50458, 1219, 8546, 565, 12, 86, 424, 3759, 13, 50518, 50518, 400, 286, 8825, 341, 1217, 294, 264, 1791, 13, 50666, 50666, 407, 718, 311, 3811, 300, 291, 600, 8287, 341, 954, 13, 50790, 50790, 509, 500, 380, 528, 281, 360, 8145, 12, 471, 4217, 317, 6218, 50920, 50920, 11150, 337, 586, 11, 445, 8145, 12, 29258, 13, 51096, 51096, 407, 291, 600, 8287, 300, 954, 1566, 11, 51344, 51344, 718, 311, 584, 11, 264, 1266, 27011, 11, 10759, 27011, 11, 411, 1958, 11, 502, 11, 568, 11, 805, 11, 1017, 11, 51626, 51626, 1025, 11, 1030, 11458, 11, 570, 291, 434, 787, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.1377852650012, "compression_ratio": 1.6176470588235294, "no_speech_prob": 5.506986781256273e-06}, {"id": 105, "seek": 30912, "start": 309.12, "end": 312.84000000000003, "text": " interested in recognizing spoken digits,", "tokens": [50364, 3102, 294, 18538, 10759, 27011, 11, 50550, 50550, 14621, 10759, 27011, 13, 50602, 50602, 2704, 341, 307, 257, 1185, 300, 307, 3442, 50708, 50708, 281, 5502, 257, 1230, 322, 428, 2593, 13, 50954, 50954, 407, 309, 445, 2203, 281, 5521, 22978, 295, 27011, 13, 51102, 51102, 1610, 4317, 309, 311, 257, 588, 2199, 6218, 11150, 1185, 300, 51276, 51276, 9898, 281, 4008, 264, 6634, 12, 1010, 1349, 337, 6795, 22595, 51528, 51528, 420, 746, 411, 341, 13, 51586, 51586, 407, 264, 787, 551, 264, 1185, 307, 3442, 281, 5521, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.144969847894484, "compression_ratio": 1.6923076923076923, "no_speech_prob": 1.4503207239613403e-05}, {"id": 106, "seek": 30912, "start": 312.84000000000003, "end": 313.88, "text": " isolated spoken digits.", "tokens": [50364, 3102, 294, 18538, 10759, 27011, 11, 50550, 50550, 14621, 10759, 27011, 13, 50602, 50602, 2704, 341, 307, 257, 1185, 300, 307, 3442, 50708, 50708, 281, 5502, 257, 1230, 322, 428, 2593, 13, 50954, 50954, 407, 309, 445, 2203, 281, 5521, 22978, 295, 27011, 13, 51102, 51102, 1610, 4317, 309, 311, 257, 588, 2199, 6218, 11150, 1185, 300, 51276, 51276, 9898, 281, 4008, 264, 6634, 12, 1010, 1349, 337, 6795, 22595, 51528, 51528, 420, 746, 411, 341, 13, 51586, 51586, 407, 264, 787, 551, 264, 1185, 307, 3442, 281, 5521, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.144969847894484, "compression_ratio": 1.6923076923076923, "no_speech_prob": 1.4503207239613403e-05}, {"id": 107, "seek": 30912, "start": 313.88, "end": 316.0, "text": " Maybe this is a system that is supposed", "tokens": [50364, 3102, 294, 18538, 10759, 27011, 11, 50550, 50550, 14621, 10759, 27011, 13, 50602, 50602, 2704, 341, 307, 257, 1185, 300, 307, 3442, 50708, 50708, 281, 5502, 257, 1230, 322, 428, 2593, 13, 50954, 50954, 407, 309, 445, 2203, 281, 5521, 22978, 295, 27011, 13, 51102, 51102, 1610, 4317, 309, 311, 257, 588, 2199, 6218, 11150, 1185, 300, 51276, 51276, 9898, 281, 4008, 264, 6634, 12, 1010, 1349, 337, 6795, 22595, 51528, 51528, 420, 746, 411, 341, 13, 51586, 51586, 407, 264, 787, 551, 264, 1185, 307, 3442, 281, 5521, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.144969847894484, "compression_ratio": 1.6923076923076923, "no_speech_prob": 1.4503207239613403e-05}, {"id": 108, "seek": 30912, "start": 316.0, "end": 320.92, "text": " to dial a number on your phone.", "tokens": [50364, 3102, 294, 18538, 10759, 27011, 11, 50550, 50550, 14621, 10759, 27011, 13, 50602, 50602, 2704, 341, 307, 257, 1185, 300, 307, 3442, 50708, 50708, 281, 5502, 257, 1230, 322, 428, 2593, 13, 50954, 50954, 407, 309, 445, 2203, 281, 5521, 22978, 295, 27011, 13, 51102, 51102, 1610, 4317, 309, 311, 257, 588, 2199, 6218, 11150, 1185, 300, 51276, 51276, 9898, 281, 4008, 264, 6634, 12, 1010, 1349, 337, 6795, 22595, 51528, 51528, 420, 746, 411, 341, 13, 51586, 51586, 407, 264, 787, 551, 264, 1185, 307, 3442, 281, 5521, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.144969847894484, "compression_ratio": 1.6923076923076923, "no_speech_prob": 1.4503207239613403e-05}, {"id": 109, "seek": 30912, "start": 320.92, "end": 323.88, "text": " So it just needs to recognize sequences of digits.", "tokens": [50364, 3102, 294, 18538, 10759, 27011, 11, 50550, 50550, 14621, 10759, 27011, 13, 50602, 50602, 2704, 341, 307, 257, 1185, 300, 307, 3442, 50708, 50708, 281, 5502, 257, 1230, 322, 428, 2593, 13, 50954, 50954, 407, 309, 445, 2203, 281, 5521, 22978, 295, 27011, 13, 51102, 51102, 1610, 4317, 309, 311, 257, 588, 2199, 6218, 11150, 1185, 300, 51276, 51276, 9898, 281, 4008, 264, 6634, 12, 1010, 1349, 337, 6795, 22595, 51528, 51528, 420, 746, 411, 341, 13, 51586, 51586, 407, 264, 787, 551, 264, 1185, 307, 3442, 281, 5521, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.144969847894484, "compression_ratio": 1.6923076923076923, "no_speech_prob": 1.4503207239613403e-05}, {"id": 110, "seek": 30912, "start": 323.88, "end": 327.36, "text": " Or perhaps it's a very simple speech recognition system that", "tokens": [50364, 3102, 294, 18538, 10759, 27011, 11, 50550, 50550, 14621, 10759, 27011, 13, 50602, 50602, 2704, 341, 307, 257, 1185, 300, 307, 3442, 50708, 50708, 281, 5502, 257, 1230, 322, 428, 2593, 13, 50954, 50954, 407, 309, 445, 2203, 281, 5521, 22978, 295, 27011, 13, 51102, 51102, 1610, 4317, 309, 311, 257, 588, 2199, 6218, 11150, 1185, 300, 51276, 51276, 9898, 281, 4008, 264, 6634, 12, 1010, 1349, 337, 6795, 22595, 51528, 51528, 420, 746, 411, 341, 13, 51586, 51586, 407, 264, 787, 551, 264, 1185, 307, 3442, 281, 5521, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.144969847894484, "compression_ratio": 1.6923076923076923, "no_speech_prob": 1.4503207239613403e-05}, {"id": 111, "seek": 30912, "start": 327.36, "end": 332.4, "text": " tries to spot the wake-up word for Amazon Alexa", "tokens": [50364, 3102, 294, 18538, 10759, 27011, 11, 50550, 50550, 14621, 10759, 27011, 13, 50602, 50602, 2704, 341, 307, 257, 1185, 300, 307, 3442, 50708, 50708, 281, 5502, 257, 1230, 322, 428, 2593, 13, 50954, 50954, 407, 309, 445, 2203, 281, 5521, 22978, 295, 27011, 13, 51102, 51102, 1610, 4317, 309, 311, 257, 588, 2199, 6218, 11150, 1185, 300, 51276, 51276, 9898, 281, 4008, 264, 6634, 12, 1010, 1349, 337, 6795, 22595, 51528, 51528, 420, 746, 411, 341, 13, 51586, 51586, 407, 264, 787, 551, 264, 1185, 307, 3442, 281, 5521, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.144969847894484, "compression_ratio": 1.6923076923076923, "no_speech_prob": 1.4503207239613403e-05}, {"id": 112, "seek": 30912, "start": 332.4, "end": 333.56, "text": " or something like this.", "tokens": [50364, 3102, 294, 18538, 10759, 27011, 11, 50550, 50550, 14621, 10759, 27011, 13, 50602, 50602, 2704, 341, 307, 257, 1185, 300, 307, 3442, 50708, 50708, 281, 5502, 257, 1230, 322, 428, 2593, 13, 50954, 50954, 407, 309, 445, 2203, 281, 5521, 22978, 295, 27011, 13, 51102, 51102, 1610, 4317, 309, 311, 257, 588, 2199, 6218, 11150, 1185, 300, 51276, 51276, 9898, 281, 4008, 264, 6634, 12, 1010, 1349, 337, 6795, 22595, 51528, 51528, 420, 746, 411, 341, 13, 51586, 51586, 407, 264, 787, 551, 264, 1185, 307, 3442, 281, 5521, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.144969847894484, "compression_ratio": 1.6923076923076923, "no_speech_prob": 1.4503207239613403e-05}, {"id": 113, "seek": 30912, "start": 333.56, "end": 335.8, "text": " So the only thing the system is supposed to recognize", "tokens": [50364, 3102, 294, 18538, 10759, 27011, 11, 50550, 50550, 14621, 10759, 27011, 13, 50602, 50602, 2704, 341, 307, 257, 1185, 300, 307, 3442, 50708, 50708, 281, 5502, 257, 1230, 322, 428, 2593, 13, 50954, 50954, 407, 309, 445, 2203, 281, 5521, 22978, 295, 27011, 13, 51102, 51102, 1610, 4317, 309, 311, 257, 588, 2199, 6218, 11150, 1185, 300, 51276, 51276, 9898, 281, 4008, 264, 6634, 12, 1010, 1349, 337, 6795, 22595, 51528, 51528, 420, 746, 411, 341, 13, 51586, 51586, 407, 264, 787, 551, 264, 1185, 307, 3442, 281, 5521, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.144969847894484, "compression_ratio": 1.6923076923076923, "no_speech_prob": 1.4503207239613403e-05}, {"id": 114, "seek": 33580, "start": 335.8, "end": 340.16, "text": " is Alexa or hey, Google or something like that, a wake-up", "tokens": [50364, 307, 22595, 420, 4177, 11, 3329, 420, 746, 411, 300, 11, 257, 6634, 12, 1010, 50582, 50582, 1349, 13, 50654, 50654, 407, 264, 1185, 815, 362, 257, 3840, 295, 659, 12, 38500, 292, 21165, 50872, 50872, 300, 6805, 281, 22978, 295, 4111, 18875, 51068, 51068, 300, 645, 7126, 538, 1580, 4124, 1184, 295, 264, 2283, 13, 51448, 51448, 400, 586, 264, 636, 291, 528, 281, 3847, 264, 1185, 51556, 51556, 307, 300, 291, 576, 411, 281, 3847, 264, 18161, 2533, 412, 264, 912, 565, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14558088779449463, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.047899660188705e-06}, {"id": 115, "seek": 33580, "start": 340.16, "end": 341.6, "text": " word.", "tokens": [50364, 307, 22595, 420, 4177, 11, 3329, 420, 746, 411, 300, 11, 257, 6634, 12, 1010, 50582, 50582, 1349, 13, 50654, 50654, 407, 264, 1185, 815, 362, 257, 3840, 295, 659, 12, 38500, 292, 21165, 50872, 50872, 300, 6805, 281, 22978, 295, 4111, 18875, 51068, 51068, 300, 645, 7126, 538, 1580, 4124, 1184, 295, 264, 2283, 13, 51448, 51448, 400, 586, 264, 636, 291, 528, 281, 3847, 264, 1185, 51556, 51556, 307, 300, 291, 576, 411, 281, 3847, 264, 18161, 2533, 412, 264, 912, 565, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14558088779449463, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.047899660188705e-06}, {"id": 116, "seek": 33580, "start": 341.6, "end": 345.96000000000004, "text": " So the system may have a bunch of pre-recorded templates", "tokens": [50364, 307, 22595, 420, 4177, 11, 3329, 420, 746, 411, 300, 11, 257, 6634, 12, 1010, 50582, 50582, 1349, 13, 50654, 50654, 407, 264, 1185, 815, 362, 257, 3840, 295, 659, 12, 38500, 292, 21165, 50872, 50872, 300, 6805, 281, 22978, 295, 4111, 18875, 51068, 51068, 300, 645, 7126, 538, 1580, 4124, 1184, 295, 264, 2283, 13, 51448, 51448, 400, 586, 264, 636, 291, 528, 281, 3847, 264, 1185, 51556, 51556, 307, 300, 291, 576, 411, 281, 3847, 264, 18161, 2533, 412, 264, 912, 565, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14558088779449463, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.047899660188705e-06}, {"id": 117, "seek": 33580, "start": 345.96000000000004, "end": 349.88, "text": " that correspond to sequences of feature vectors", "tokens": [50364, 307, 22595, 420, 4177, 11, 3329, 420, 746, 411, 300, 11, 257, 6634, 12, 1010, 50582, 50582, 1349, 13, 50654, 50654, 407, 264, 1185, 815, 362, 257, 3840, 295, 659, 12, 38500, 292, 21165, 50872, 50872, 300, 6805, 281, 22978, 295, 4111, 18875, 51068, 51068, 300, 645, 7126, 538, 1580, 4124, 1184, 295, 264, 2283, 13, 51448, 51448, 400, 586, 264, 636, 291, 528, 281, 3847, 264, 1185, 51556, 51556, 307, 300, 291, 576, 411, 281, 3847, 264, 18161, 2533, 412, 264, 912, 565, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14558088779449463, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.047899660188705e-06}, {"id": 118, "seek": 33580, "start": 349.88, "end": 357.48, "text": " that were produced by someone speaking each of the words.", "tokens": [50364, 307, 22595, 420, 4177, 11, 3329, 420, 746, 411, 300, 11, 257, 6634, 12, 1010, 50582, 50582, 1349, 13, 50654, 50654, 407, 264, 1185, 815, 362, 257, 3840, 295, 659, 12, 38500, 292, 21165, 50872, 50872, 300, 6805, 281, 22978, 295, 4111, 18875, 51068, 51068, 300, 645, 7126, 538, 1580, 4124, 1184, 295, 264, 2283, 13, 51448, 51448, 400, 586, 264, 636, 291, 528, 281, 3847, 264, 1185, 51556, 51556, 307, 300, 291, 576, 411, 281, 3847, 264, 18161, 2533, 412, 264, 912, 565, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14558088779449463, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.047899660188705e-06}, {"id": 119, "seek": 33580, "start": 357.48, "end": 359.64, "text": " And now the way you want to train the system", "tokens": [50364, 307, 22595, 420, 4177, 11, 3329, 420, 746, 411, 300, 11, 257, 6634, 12, 1010, 50582, 50582, 1349, 13, 50654, 50654, 407, 264, 1185, 815, 362, 257, 3840, 295, 659, 12, 38500, 292, 21165, 50872, 50872, 300, 6805, 281, 22978, 295, 4111, 18875, 51068, 51068, 300, 645, 7126, 538, 1580, 4124, 1184, 295, 264, 2283, 13, 51448, 51448, 400, 586, 264, 636, 291, 528, 281, 3847, 264, 1185, 51556, 51556, 307, 300, 291, 576, 411, 281, 3847, 264, 18161, 2533, 412, 264, 912, 565, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14558088779449463, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.047899660188705e-06}, {"id": 120, "seek": 33580, "start": 359.64, "end": 363.96000000000004, "text": " is that you would like to train the neural net at the same time", "tokens": [50364, 307, 22595, 420, 4177, 11, 3329, 420, 746, 411, 300, 11, 257, 6634, 12, 1010, 50582, 50582, 1349, 13, 50654, 50654, 407, 264, 1185, 815, 362, 257, 3840, 295, 659, 12, 38500, 292, 21165, 50872, 50872, 300, 6805, 281, 22978, 295, 4111, 18875, 51068, 51068, 300, 645, 7126, 538, 1580, 4124, 1184, 295, 264, 2283, 13, 51448, 51448, 400, 586, 264, 636, 291, 528, 281, 3847, 264, 1185, 51556, 51556, 307, 300, 291, 576, 411, 281, 3847, 264, 18161, 2533, 412, 264, 912, 565, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14558088779449463, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.047899660188705e-06}, {"id": 121, "seek": 36396, "start": 363.96, "end": 366.96, "text": " as the template so that the overall system recognizes", "tokens": [50364, 382, 264, 12379, 370, 300, 264, 4787, 1185, 26564, 50514, 50514, 264, 2283, 382, 1151, 382, 1944, 13, 50630, 50630, 639, 307, 257, 21538, 1154, 13, 50732, 50732, 583, 456, 307, 257, 48994, 7006, 294, 309, 13, 50812, 50812, 400, 264, 48994, 7006, 307, 577, 366, 291, 50926, 50926, 516, 281, 565, 36030, 264, 8310, 295, 4111, 18875, 51044, 51044, 370, 300, 309, 10676, 264, 4641, 295, 729, 21165, 30, 51174, 51174, 400, 797, 11, 286, 478, 733, 295, 18617, 2059, 11, 51252, 51252, 570, 286, 2825, 257, 707, 857, 466, 341, 949, 13, 51404, 51404, 407, 291, 360, 341, 365, 35064, 565, 1516, 3381, 13, 51486, 51486, 400, 437, 300, 14689, 295, 307, 300, 291, 1622, 493, 51670, 51670, 439, 264, 4111, 18875, 2051, 264, 2767, 510, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15513433109630237, "compression_ratio": 1.7559322033898306, "no_speech_prob": 1.1298535355308559e-05}, {"id": 122, "seek": 36396, "start": 366.96, "end": 369.28, "text": " the words as best as possible.", "tokens": [50364, 382, 264, 12379, 370, 300, 264, 4787, 1185, 26564, 50514, 50514, 264, 2283, 382, 1151, 382, 1944, 13, 50630, 50630, 639, 307, 257, 21538, 1154, 13, 50732, 50732, 583, 456, 307, 257, 48994, 7006, 294, 309, 13, 50812, 50812, 400, 264, 48994, 7006, 307, 577, 366, 291, 50926, 50926, 516, 281, 565, 36030, 264, 8310, 295, 4111, 18875, 51044, 51044, 370, 300, 309, 10676, 264, 4641, 295, 729, 21165, 30, 51174, 51174, 400, 797, 11, 286, 478, 733, 295, 18617, 2059, 11, 51252, 51252, 570, 286, 2825, 257, 707, 857, 466, 341, 949, 13, 51404, 51404, 407, 291, 360, 341, 365, 35064, 565, 1516, 3381, 13, 51486, 51486, 400, 437, 300, 14689, 295, 307, 300, 291, 1622, 493, 51670, 51670, 439, 264, 4111, 18875, 2051, 264, 2767, 510, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15513433109630237, "compression_ratio": 1.7559322033898306, "no_speech_prob": 1.1298535355308559e-05}, {"id": 123, "seek": 36396, "start": 369.28, "end": 371.32, "text": " This is a classification problem.", "tokens": [50364, 382, 264, 12379, 370, 300, 264, 4787, 1185, 26564, 50514, 50514, 264, 2283, 382, 1151, 382, 1944, 13, 50630, 50630, 639, 307, 257, 21538, 1154, 13, 50732, 50732, 583, 456, 307, 257, 48994, 7006, 294, 309, 13, 50812, 50812, 400, 264, 48994, 7006, 307, 577, 366, 291, 50926, 50926, 516, 281, 565, 36030, 264, 8310, 295, 4111, 18875, 51044, 51044, 370, 300, 309, 10676, 264, 4641, 295, 729, 21165, 30, 51174, 51174, 400, 797, 11, 286, 478, 733, 295, 18617, 2059, 11, 51252, 51252, 570, 286, 2825, 257, 707, 857, 466, 341, 949, 13, 51404, 51404, 407, 291, 360, 341, 365, 35064, 565, 1516, 3381, 13, 51486, 51486, 400, 437, 300, 14689, 295, 307, 300, 291, 1622, 493, 51670, 51670, 439, 264, 4111, 18875, 2051, 264, 2767, 510, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15513433109630237, "compression_ratio": 1.7559322033898306, "no_speech_prob": 1.1298535355308559e-05}, {"id": 124, "seek": 36396, "start": 371.32, "end": 372.91999999999996, "text": " But there is a latent variable in it.", "tokens": [50364, 382, 264, 12379, 370, 300, 264, 4787, 1185, 26564, 50514, 50514, 264, 2283, 382, 1151, 382, 1944, 13, 50630, 50630, 639, 307, 257, 21538, 1154, 13, 50732, 50732, 583, 456, 307, 257, 48994, 7006, 294, 309, 13, 50812, 50812, 400, 264, 48994, 7006, 307, 577, 366, 291, 50926, 50926, 516, 281, 565, 36030, 264, 8310, 295, 4111, 18875, 51044, 51044, 370, 300, 309, 10676, 264, 4641, 295, 729, 21165, 30, 51174, 51174, 400, 797, 11, 286, 478, 733, 295, 18617, 2059, 11, 51252, 51252, 570, 286, 2825, 257, 707, 857, 466, 341, 949, 13, 51404, 51404, 407, 291, 360, 341, 365, 35064, 565, 1516, 3381, 13, 51486, 51486, 400, 437, 300, 14689, 295, 307, 300, 291, 1622, 493, 51670, 51670, 439, 264, 4111, 18875, 2051, 264, 2767, 510, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15513433109630237, "compression_ratio": 1.7559322033898306, "no_speech_prob": 1.1298535355308559e-05}, {"id": 125, "seek": 36396, "start": 372.91999999999996, "end": 375.2, "text": " And the latent variable is how are you", "tokens": [50364, 382, 264, 12379, 370, 300, 264, 4787, 1185, 26564, 50514, 50514, 264, 2283, 382, 1151, 382, 1944, 13, 50630, 50630, 639, 307, 257, 21538, 1154, 13, 50732, 50732, 583, 456, 307, 257, 48994, 7006, 294, 309, 13, 50812, 50812, 400, 264, 48994, 7006, 307, 577, 366, 291, 50926, 50926, 516, 281, 565, 36030, 264, 8310, 295, 4111, 18875, 51044, 51044, 370, 300, 309, 10676, 264, 4641, 295, 729, 21165, 30, 51174, 51174, 400, 797, 11, 286, 478, 733, 295, 18617, 2059, 11, 51252, 51252, 570, 286, 2825, 257, 707, 857, 466, 341, 949, 13, 51404, 51404, 407, 291, 360, 341, 365, 35064, 565, 1516, 3381, 13, 51486, 51486, 400, 437, 300, 14689, 295, 307, 300, 291, 1622, 493, 51670, 51670, 439, 264, 4111, 18875, 2051, 264, 2767, 510, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15513433109630237, "compression_ratio": 1.7559322033898306, "no_speech_prob": 1.1298535355308559e-05}, {"id": 126, "seek": 36396, "start": 375.2, "end": 377.56, "text": " going to time warp the sequence of feature vectors", "tokens": [50364, 382, 264, 12379, 370, 300, 264, 4787, 1185, 26564, 50514, 50514, 264, 2283, 382, 1151, 382, 1944, 13, 50630, 50630, 639, 307, 257, 21538, 1154, 13, 50732, 50732, 583, 456, 307, 257, 48994, 7006, 294, 309, 13, 50812, 50812, 400, 264, 48994, 7006, 307, 577, 366, 291, 50926, 50926, 516, 281, 565, 36030, 264, 8310, 295, 4111, 18875, 51044, 51044, 370, 300, 309, 10676, 264, 4641, 295, 729, 21165, 30, 51174, 51174, 400, 797, 11, 286, 478, 733, 295, 18617, 2059, 11, 51252, 51252, 570, 286, 2825, 257, 707, 857, 466, 341, 949, 13, 51404, 51404, 407, 291, 360, 341, 365, 35064, 565, 1516, 3381, 13, 51486, 51486, 400, 437, 300, 14689, 295, 307, 300, 291, 1622, 493, 51670, 51670, 439, 264, 4111, 18875, 2051, 264, 2767, 510, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15513433109630237, "compression_ratio": 1.7559322033898306, "no_speech_prob": 1.1298535355308559e-05}, {"id": 127, "seek": 36396, "start": 377.56, "end": 380.15999999999997, "text": " so that it matches the length of those templates?", "tokens": [50364, 382, 264, 12379, 370, 300, 264, 4787, 1185, 26564, 50514, 50514, 264, 2283, 382, 1151, 382, 1944, 13, 50630, 50630, 639, 307, 257, 21538, 1154, 13, 50732, 50732, 583, 456, 307, 257, 48994, 7006, 294, 309, 13, 50812, 50812, 400, 264, 48994, 7006, 307, 577, 366, 291, 50926, 50926, 516, 281, 565, 36030, 264, 8310, 295, 4111, 18875, 51044, 51044, 370, 300, 309, 10676, 264, 4641, 295, 729, 21165, 30, 51174, 51174, 400, 797, 11, 286, 478, 733, 295, 18617, 2059, 11, 51252, 51252, 570, 286, 2825, 257, 707, 857, 466, 341, 949, 13, 51404, 51404, 407, 291, 360, 341, 365, 35064, 565, 1516, 3381, 13, 51486, 51486, 400, 437, 300, 14689, 295, 307, 300, 291, 1622, 493, 51670, 51670, 439, 264, 4111, 18875, 2051, 264, 2767, 510, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15513433109630237, "compression_ratio": 1.7559322033898306, "no_speech_prob": 1.1298535355308559e-05}, {"id": 128, "seek": 36396, "start": 380.15999999999997, "end": 381.71999999999997, "text": " And again, I'm kind of repeating myself,", "tokens": [50364, 382, 264, 12379, 370, 300, 264, 4787, 1185, 26564, 50514, 50514, 264, 2283, 382, 1151, 382, 1944, 13, 50630, 50630, 639, 307, 257, 21538, 1154, 13, 50732, 50732, 583, 456, 307, 257, 48994, 7006, 294, 309, 13, 50812, 50812, 400, 264, 48994, 7006, 307, 577, 366, 291, 50926, 50926, 516, 281, 565, 36030, 264, 8310, 295, 4111, 18875, 51044, 51044, 370, 300, 309, 10676, 264, 4641, 295, 729, 21165, 30, 51174, 51174, 400, 797, 11, 286, 478, 733, 295, 18617, 2059, 11, 51252, 51252, 570, 286, 2825, 257, 707, 857, 466, 341, 949, 13, 51404, 51404, 407, 291, 360, 341, 365, 35064, 565, 1516, 3381, 13, 51486, 51486, 400, 437, 300, 14689, 295, 307, 300, 291, 1622, 493, 51670, 51670, 439, 264, 4111, 18875, 2051, 264, 2767, 510, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15513433109630237, "compression_ratio": 1.7559322033898306, "no_speech_prob": 1.1298535355308559e-05}, {"id": 129, "seek": 36396, "start": 381.71999999999997, "end": 384.76, "text": " because I talked a little bit about this before.", "tokens": [50364, 382, 264, 12379, 370, 300, 264, 4787, 1185, 26564, 50514, 50514, 264, 2283, 382, 1151, 382, 1944, 13, 50630, 50630, 639, 307, 257, 21538, 1154, 13, 50732, 50732, 583, 456, 307, 257, 48994, 7006, 294, 309, 13, 50812, 50812, 400, 264, 48994, 7006, 307, 577, 366, 291, 50926, 50926, 516, 281, 565, 36030, 264, 8310, 295, 4111, 18875, 51044, 51044, 370, 300, 309, 10676, 264, 4641, 295, 729, 21165, 30, 51174, 51174, 400, 797, 11, 286, 478, 733, 295, 18617, 2059, 11, 51252, 51252, 570, 286, 2825, 257, 707, 857, 466, 341, 949, 13, 51404, 51404, 407, 291, 360, 341, 365, 35064, 565, 1516, 3381, 13, 51486, 51486, 400, 437, 300, 14689, 295, 307, 300, 291, 1622, 493, 51670, 51670, 439, 264, 4111, 18875, 2051, 264, 2767, 510, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15513433109630237, "compression_ratio": 1.7559322033898306, "no_speech_prob": 1.1298535355308559e-05}, {"id": 130, "seek": 36396, "start": 384.76, "end": 386.4, "text": " So you do this with dummy time warping.", "tokens": [50364, 382, 264, 12379, 370, 300, 264, 4787, 1185, 26564, 50514, 50514, 264, 2283, 382, 1151, 382, 1944, 13, 50630, 50630, 639, 307, 257, 21538, 1154, 13, 50732, 50732, 583, 456, 307, 257, 48994, 7006, 294, 309, 13, 50812, 50812, 400, 264, 48994, 7006, 307, 577, 366, 291, 50926, 50926, 516, 281, 565, 36030, 264, 8310, 295, 4111, 18875, 51044, 51044, 370, 300, 309, 10676, 264, 4641, 295, 729, 21165, 30, 51174, 51174, 400, 797, 11, 286, 478, 733, 295, 18617, 2059, 11, 51252, 51252, 570, 286, 2825, 257, 707, 857, 466, 341, 949, 13, 51404, 51404, 407, 291, 360, 341, 365, 35064, 565, 1516, 3381, 13, 51486, 51486, 400, 437, 300, 14689, 295, 307, 300, 291, 1622, 493, 51670, 51670, 439, 264, 4111, 18875, 2051, 264, 2767, 510, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15513433109630237, "compression_ratio": 1.7559322033898306, "no_speech_prob": 1.1298535355308559e-05}, {"id": 131, "seek": 36396, "start": 386.4, "end": 390.08, "text": " And what that consists of is that you line up", "tokens": [50364, 382, 264, 12379, 370, 300, 264, 4787, 1185, 26564, 50514, 50514, 264, 2283, 382, 1151, 382, 1944, 13, 50630, 50630, 639, 307, 257, 21538, 1154, 13, 50732, 50732, 583, 456, 307, 257, 48994, 7006, 294, 309, 13, 50812, 50812, 400, 264, 48994, 7006, 307, 577, 366, 291, 50926, 50926, 516, 281, 565, 36030, 264, 8310, 295, 4111, 18875, 51044, 51044, 370, 300, 309, 10676, 264, 4641, 295, 729, 21165, 30, 51174, 51174, 400, 797, 11, 286, 478, 733, 295, 18617, 2059, 11, 51252, 51252, 570, 286, 2825, 257, 707, 857, 466, 341, 949, 13, 51404, 51404, 407, 291, 360, 341, 365, 35064, 565, 1516, 3381, 13, 51486, 51486, 400, 437, 300, 14689, 295, 307, 300, 291, 1622, 493, 51670, 51670, 439, 264, 4111, 18875, 2051, 264, 2767, 510, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15513433109630237, "compression_ratio": 1.7559322033898306, "no_speech_prob": 1.1298535355308559e-05}, {"id": 132, "seek": 36396, "start": 390.08, "end": 393.67999999999995, "text": " all the feature vectors along the bottom here", "tokens": [50364, 382, 264, 12379, 370, 300, 264, 4787, 1185, 26564, 50514, 50514, 264, 2283, 382, 1151, 382, 1944, 13, 50630, 50630, 639, 307, 257, 21538, 1154, 13, 50732, 50732, 583, 456, 307, 257, 48994, 7006, 294, 309, 13, 50812, 50812, 400, 264, 48994, 7006, 307, 577, 366, 291, 50926, 50926, 516, 281, 565, 36030, 264, 8310, 295, 4111, 18875, 51044, 51044, 370, 300, 309, 10676, 264, 4641, 295, 729, 21165, 30, 51174, 51174, 400, 797, 11, 286, 478, 733, 295, 18617, 2059, 11, 51252, 51252, 570, 286, 2825, 257, 707, 857, 466, 341, 949, 13, 51404, 51404, 407, 291, 360, 341, 365, 35064, 565, 1516, 3381, 13, 51486, 51486, 400, 437, 300, 14689, 295, 307, 300, 291, 1622, 493, 51670, 51670, 439, 264, 4111, 18875, 2051, 264, 2767, 510, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15513433109630237, "compression_ratio": 1.7559322033898306, "no_speech_prob": 1.1298535355308559e-05}, {"id": 133, "seek": 39368, "start": 393.68, "end": 394.2, "text": " of this.", "tokens": [50364, 295, 341, 13, 50390, 50390, 407, 519, 295, 341, 382, 257, 8141, 13, 50494, 50494, 509, 1622, 493, 439, 264, 4111, 18875, 412, 264, 4846, 13, 50666, 50666, 407, 291, 483, 264, 8310, 295, 4111, 18875, 366, 510, 13, 50834, 50834, 400, 550, 291, 829, 264, 8310, 295, 12379, 18875, 11, 50946, 50946, 370, 4111, 18875, 1348, 484, 295, 264, 12379, 322, 341, 10298, 13, 51192, 51192, 400, 550, 1184, 8729, 294, 264, 8141, 51352, 51352, 307, 364, 18877, 295, 264, 4560, 1296, 264, 4111, 8062, 510, 51562, 51562, 293, 264, 4111, 8062, 456, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.15226580879905008, "compression_ratio": 2.037433155080214, "no_speech_prob": 1.5201684618659783e-05}, {"id": 134, "seek": 39368, "start": 394.2, "end": 396.28000000000003, "text": " So think of this as a matrix.", "tokens": [50364, 295, 341, 13, 50390, 50390, 407, 519, 295, 341, 382, 257, 8141, 13, 50494, 50494, 509, 1622, 493, 439, 264, 4111, 18875, 412, 264, 4846, 13, 50666, 50666, 407, 291, 483, 264, 8310, 295, 4111, 18875, 366, 510, 13, 50834, 50834, 400, 550, 291, 829, 264, 8310, 295, 12379, 18875, 11, 50946, 50946, 370, 4111, 18875, 1348, 484, 295, 264, 12379, 322, 341, 10298, 13, 51192, 51192, 400, 550, 1184, 8729, 294, 264, 8141, 51352, 51352, 307, 364, 18877, 295, 264, 4560, 1296, 264, 4111, 8062, 510, 51562, 51562, 293, 264, 4111, 8062, 456, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.15226580879905008, "compression_ratio": 2.037433155080214, "no_speech_prob": 1.5201684618659783e-05}, {"id": 135, "seek": 39368, "start": 396.28000000000003, "end": 399.72, "text": " You line up all the feature vectors at the input.", "tokens": [50364, 295, 341, 13, 50390, 50390, 407, 519, 295, 341, 382, 257, 8141, 13, 50494, 50494, 509, 1622, 493, 439, 264, 4111, 18875, 412, 264, 4846, 13, 50666, 50666, 407, 291, 483, 264, 8310, 295, 4111, 18875, 366, 510, 13, 50834, 50834, 400, 550, 291, 829, 264, 8310, 295, 12379, 18875, 11, 50946, 50946, 370, 4111, 18875, 1348, 484, 295, 264, 12379, 322, 341, 10298, 13, 51192, 51192, 400, 550, 1184, 8729, 294, 264, 8141, 51352, 51352, 307, 364, 18877, 295, 264, 4560, 1296, 264, 4111, 8062, 510, 51562, 51562, 293, 264, 4111, 8062, 456, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.15226580879905008, "compression_ratio": 2.037433155080214, "no_speech_prob": 1.5201684618659783e-05}, {"id": 136, "seek": 39368, "start": 399.72, "end": 403.08, "text": " So you get the sequence of feature vectors are here.", "tokens": [50364, 295, 341, 13, 50390, 50390, 407, 519, 295, 341, 382, 257, 8141, 13, 50494, 50494, 509, 1622, 493, 439, 264, 4111, 18875, 412, 264, 4846, 13, 50666, 50666, 407, 291, 483, 264, 8310, 295, 4111, 18875, 366, 510, 13, 50834, 50834, 400, 550, 291, 829, 264, 8310, 295, 12379, 18875, 11, 50946, 50946, 370, 4111, 18875, 1348, 484, 295, 264, 12379, 322, 341, 10298, 13, 51192, 51192, 400, 550, 1184, 8729, 294, 264, 8141, 51352, 51352, 307, 364, 18877, 295, 264, 4560, 1296, 264, 4111, 8062, 510, 51562, 51562, 293, 264, 4111, 8062, 456, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.15226580879905008, "compression_ratio": 2.037433155080214, "no_speech_prob": 1.5201684618659783e-05}, {"id": 137, "seek": 39368, "start": 403.08, "end": 405.32, "text": " And then you put the sequence of template vectors,", "tokens": [50364, 295, 341, 13, 50390, 50390, 407, 519, 295, 341, 382, 257, 8141, 13, 50494, 50494, 509, 1622, 493, 439, 264, 4111, 18875, 412, 264, 4846, 13, 50666, 50666, 407, 291, 483, 264, 8310, 295, 4111, 18875, 366, 510, 13, 50834, 50834, 400, 550, 291, 829, 264, 8310, 295, 12379, 18875, 11, 50946, 50946, 370, 4111, 18875, 1348, 484, 295, 264, 12379, 322, 341, 10298, 13, 51192, 51192, 400, 550, 1184, 8729, 294, 264, 8141, 51352, 51352, 307, 364, 18877, 295, 264, 4560, 1296, 264, 4111, 8062, 510, 51562, 51562, 293, 264, 4111, 8062, 456, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.15226580879905008, "compression_ratio": 2.037433155080214, "no_speech_prob": 1.5201684618659783e-05}, {"id": 138, "seek": 39368, "start": 405.32, "end": 410.24, "text": " so feature vectors coming out of the template on this axis.", "tokens": [50364, 295, 341, 13, 50390, 50390, 407, 519, 295, 341, 382, 257, 8141, 13, 50494, 50494, 509, 1622, 493, 439, 264, 4111, 18875, 412, 264, 4846, 13, 50666, 50666, 407, 291, 483, 264, 8310, 295, 4111, 18875, 366, 510, 13, 50834, 50834, 400, 550, 291, 829, 264, 8310, 295, 12379, 18875, 11, 50946, 50946, 370, 4111, 18875, 1348, 484, 295, 264, 12379, 322, 341, 10298, 13, 51192, 51192, 400, 550, 1184, 8729, 294, 264, 8141, 51352, 51352, 307, 364, 18877, 295, 264, 4560, 1296, 264, 4111, 8062, 510, 51562, 51562, 293, 264, 4111, 8062, 456, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.15226580879905008, "compression_ratio": 2.037433155080214, "no_speech_prob": 1.5201684618659783e-05}, {"id": 139, "seek": 39368, "start": 410.24, "end": 413.44, "text": " And then each entry in the matrix", "tokens": [50364, 295, 341, 13, 50390, 50390, 407, 519, 295, 341, 382, 257, 8141, 13, 50494, 50494, 509, 1622, 493, 439, 264, 4111, 18875, 412, 264, 4846, 13, 50666, 50666, 407, 291, 483, 264, 8310, 295, 4111, 18875, 366, 510, 13, 50834, 50834, 400, 550, 291, 829, 264, 8310, 295, 12379, 18875, 11, 50946, 50946, 370, 4111, 18875, 1348, 484, 295, 264, 12379, 322, 341, 10298, 13, 51192, 51192, 400, 550, 1184, 8729, 294, 264, 8141, 51352, 51352, 307, 364, 18877, 295, 264, 4560, 1296, 264, 4111, 8062, 510, 51562, 51562, 293, 264, 4111, 8062, 456, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.15226580879905008, "compression_ratio": 2.037433155080214, "no_speech_prob": 1.5201684618659783e-05}, {"id": 140, "seek": 39368, "start": 413.44, "end": 417.64, "text": " is an indication of the distance between the feature vector here", "tokens": [50364, 295, 341, 13, 50390, 50390, 407, 519, 295, 341, 382, 257, 8141, 13, 50494, 50494, 509, 1622, 493, 439, 264, 4111, 18875, 412, 264, 4846, 13, 50666, 50666, 407, 291, 483, 264, 8310, 295, 4111, 18875, 366, 510, 13, 50834, 50834, 400, 550, 291, 829, 264, 8310, 295, 12379, 18875, 11, 50946, 50946, 370, 4111, 18875, 1348, 484, 295, 264, 12379, 322, 341, 10298, 13, 51192, 51192, 400, 550, 1184, 8729, 294, 264, 8141, 51352, 51352, 307, 364, 18877, 295, 264, 4560, 1296, 264, 4111, 8062, 510, 51562, 51562, 293, 264, 4111, 8062, 456, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.15226580879905008, "compression_ratio": 2.037433155080214, "no_speech_prob": 1.5201684618659783e-05}, {"id": 141, "seek": 39368, "start": 417.64, "end": 420.76, "text": " and the feature vector there.", "tokens": [50364, 295, 341, 13, 50390, 50390, 407, 519, 295, 341, 382, 257, 8141, 13, 50494, 50494, 509, 1622, 493, 439, 264, 4111, 18875, 412, 264, 4846, 13, 50666, 50666, 407, 291, 483, 264, 8310, 295, 4111, 18875, 366, 510, 13, 50834, 50834, 400, 550, 291, 829, 264, 8310, 295, 12379, 18875, 11, 50946, 50946, 370, 4111, 18875, 1348, 484, 295, 264, 12379, 322, 341, 10298, 13, 51192, 51192, 400, 550, 1184, 8729, 294, 264, 8141, 51352, 51352, 307, 364, 18877, 295, 264, 4560, 1296, 264, 4111, 8062, 510, 51562, 51562, 293, 264, 4111, 8062, 456, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.15226580879905008, "compression_ratio": 2.037433155080214, "no_speech_prob": 1.5201684618659783e-05}, {"id": 142, "seek": 42076, "start": 420.76, "end": 423.92, "text": " So you get this probability matrix with distances", "tokens": [50364, 407, 291, 483, 341, 8482, 8141, 365, 22182, 50522, 50522, 1296, 4111, 18875, 11, 4476, 13, 50674, 50674, 400, 264, 1151, 636, 281, 4471, 264, 8310, 295, 4111, 8062, 50858, 50858, 666, 1071, 472, 281, 536, 498, 436, 3318, 50990, 50990, 307, 281, 1936, 1910, 341, 8141, 382, 733, 51150, 51150, 295, 257, 992, 295, 13891, 294, 257, 4295, 13, 51324, 51324, 400, 437, 291, 528, 307, 352, 490, 264, 3126, 1411, 1011, 51486, 51486, 4538, 295, 300, 4295, 281, 264, 6597, 558, 1011, 4538, 51648, 51648, 538, 516, 807, 257, 3100, 300, 4464, 5660, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10949130973430594, "compression_ratio": 1.683982683982684, "no_speech_prob": 6.5381477725168224e-06}, {"id": 143, "seek": 42076, "start": 423.92, "end": 426.96, "text": " between feature vectors, essentially.", "tokens": [50364, 407, 291, 483, 341, 8482, 8141, 365, 22182, 50522, 50522, 1296, 4111, 18875, 11, 4476, 13, 50674, 50674, 400, 264, 1151, 636, 281, 4471, 264, 8310, 295, 4111, 8062, 50858, 50858, 666, 1071, 472, 281, 536, 498, 436, 3318, 50990, 50990, 307, 281, 1936, 1910, 341, 8141, 382, 733, 51150, 51150, 295, 257, 992, 295, 13891, 294, 257, 4295, 13, 51324, 51324, 400, 437, 291, 528, 307, 352, 490, 264, 3126, 1411, 1011, 51486, 51486, 4538, 295, 300, 4295, 281, 264, 6597, 558, 1011, 4538, 51648, 51648, 538, 516, 807, 257, 3100, 300, 4464, 5660, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10949130973430594, "compression_ratio": 1.683982683982684, "no_speech_prob": 6.5381477725168224e-06}, {"id": 144, "seek": 42076, "start": 426.96, "end": 430.64, "text": " And the best way to map the sequence of feature vector", "tokens": [50364, 407, 291, 483, 341, 8482, 8141, 365, 22182, 50522, 50522, 1296, 4111, 18875, 11, 4476, 13, 50674, 50674, 400, 264, 1151, 636, 281, 4471, 264, 8310, 295, 4111, 8062, 50858, 50858, 666, 1071, 472, 281, 536, 498, 436, 3318, 50990, 50990, 307, 281, 1936, 1910, 341, 8141, 382, 733, 51150, 51150, 295, 257, 992, 295, 13891, 294, 257, 4295, 13, 51324, 51324, 400, 437, 291, 528, 307, 352, 490, 264, 3126, 1411, 1011, 51486, 51486, 4538, 295, 300, 4295, 281, 264, 6597, 558, 1011, 4538, 51648, 51648, 538, 516, 807, 257, 3100, 300, 4464, 5660, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10949130973430594, "compression_ratio": 1.683982683982684, "no_speech_prob": 6.5381477725168224e-06}, {"id": 145, "seek": 42076, "start": 430.64, "end": 433.28, "text": " into another one to see if they fit", "tokens": [50364, 407, 291, 483, 341, 8482, 8141, 365, 22182, 50522, 50522, 1296, 4111, 18875, 11, 4476, 13, 50674, 50674, 400, 264, 1151, 636, 281, 4471, 264, 8310, 295, 4111, 8062, 50858, 50858, 666, 1071, 472, 281, 536, 498, 436, 3318, 50990, 50990, 307, 281, 1936, 1910, 341, 8141, 382, 733, 51150, 51150, 295, 257, 992, 295, 13891, 294, 257, 4295, 13, 51324, 51324, 400, 437, 291, 528, 307, 352, 490, 264, 3126, 1411, 1011, 51486, 51486, 4538, 295, 300, 4295, 281, 264, 6597, 558, 1011, 4538, 51648, 51648, 538, 516, 807, 257, 3100, 300, 4464, 5660, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10949130973430594, "compression_ratio": 1.683982683982684, "no_speech_prob": 6.5381477725168224e-06}, {"id": 146, "seek": 42076, "start": 433.28, "end": 436.48, "text": " is to basically view this matrix as kind", "tokens": [50364, 407, 291, 483, 341, 8482, 8141, 365, 22182, 50522, 50522, 1296, 4111, 18875, 11, 4476, 13, 50674, 50674, 400, 264, 1151, 636, 281, 4471, 264, 8310, 295, 4111, 8062, 50858, 50858, 666, 1071, 472, 281, 536, 498, 436, 3318, 50990, 50990, 307, 281, 1936, 1910, 341, 8141, 382, 733, 51150, 51150, 295, 257, 992, 295, 13891, 294, 257, 4295, 13, 51324, 51324, 400, 437, 291, 528, 307, 352, 490, 264, 3126, 1411, 1011, 51486, 51486, 4538, 295, 300, 4295, 281, 264, 6597, 558, 1011, 4538, 51648, 51648, 538, 516, 807, 257, 3100, 300, 4464, 5660, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10949130973430594, "compression_ratio": 1.683982683982684, "no_speech_prob": 6.5381477725168224e-06}, {"id": 147, "seek": 42076, "start": 436.48, "end": 439.96, "text": " of a set of nodes in a graph.", "tokens": [50364, 407, 291, 483, 341, 8482, 8141, 365, 22182, 50522, 50522, 1296, 4111, 18875, 11, 4476, 13, 50674, 50674, 400, 264, 1151, 636, 281, 4471, 264, 8310, 295, 4111, 8062, 50858, 50858, 666, 1071, 472, 281, 536, 498, 436, 3318, 50990, 50990, 307, 281, 1936, 1910, 341, 8141, 382, 733, 51150, 51150, 295, 257, 992, 295, 13891, 294, 257, 4295, 13, 51324, 51324, 400, 437, 291, 528, 307, 352, 490, 264, 3126, 1411, 1011, 51486, 51486, 4538, 295, 300, 4295, 281, 264, 6597, 558, 1011, 4538, 51648, 51648, 538, 516, 807, 257, 3100, 300, 4464, 5660, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10949130973430594, "compression_ratio": 1.683982683982684, "no_speech_prob": 6.5381477725168224e-06}, {"id": 148, "seek": 42076, "start": 439.96, "end": 443.2, "text": " And what you want is go from the lower left hand", "tokens": [50364, 407, 291, 483, 341, 8482, 8141, 365, 22182, 50522, 50522, 1296, 4111, 18875, 11, 4476, 13, 50674, 50674, 400, 264, 1151, 636, 281, 4471, 264, 8310, 295, 4111, 8062, 50858, 50858, 666, 1071, 472, 281, 536, 498, 436, 3318, 50990, 50990, 307, 281, 1936, 1910, 341, 8141, 382, 733, 51150, 51150, 295, 257, 992, 295, 13891, 294, 257, 4295, 13, 51324, 51324, 400, 437, 291, 528, 307, 352, 490, 264, 3126, 1411, 1011, 51486, 51486, 4538, 295, 300, 4295, 281, 264, 6597, 558, 1011, 4538, 51648, 51648, 538, 516, 807, 257, 3100, 300, 4464, 5660, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10949130973430594, "compression_ratio": 1.683982683982684, "no_speech_prob": 6.5381477725168224e-06}, {"id": 149, "seek": 42076, "start": 443.2, "end": 446.44, "text": " corner of that graph to the upper right hand corner", "tokens": [50364, 407, 291, 483, 341, 8482, 8141, 365, 22182, 50522, 50522, 1296, 4111, 18875, 11, 4476, 13, 50674, 50674, 400, 264, 1151, 636, 281, 4471, 264, 8310, 295, 4111, 8062, 50858, 50858, 666, 1071, 472, 281, 536, 498, 436, 3318, 50990, 50990, 307, 281, 1936, 1910, 341, 8141, 382, 733, 51150, 51150, 295, 257, 992, 295, 13891, 294, 257, 4295, 13, 51324, 51324, 400, 437, 291, 528, 307, 352, 490, 264, 3126, 1411, 1011, 51486, 51486, 4538, 295, 300, 4295, 281, 264, 6597, 558, 1011, 4538, 51648, 51648, 538, 516, 807, 257, 3100, 300, 4464, 5660, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10949130973430594, "compression_ratio": 1.683982683982684, "no_speech_prob": 6.5381477725168224e-06}, {"id": 150, "seek": 42076, "start": 446.44, "end": 450.36, "text": " by going through a path that minimizes", "tokens": [50364, 407, 291, 483, 341, 8482, 8141, 365, 22182, 50522, 50522, 1296, 4111, 18875, 11, 4476, 13, 50674, 50674, 400, 264, 1151, 636, 281, 4471, 264, 8310, 295, 4111, 8062, 50858, 50858, 666, 1071, 472, 281, 536, 498, 436, 3318, 50990, 50990, 307, 281, 1936, 1910, 341, 8141, 382, 733, 51150, 51150, 295, 257, 992, 295, 13891, 294, 257, 4295, 13, 51324, 51324, 400, 437, 291, 528, 307, 352, 490, 264, 3126, 1411, 1011, 51486, 51486, 4538, 295, 300, 4295, 281, 264, 6597, 558, 1011, 4538, 51648, 51648, 538, 516, 807, 257, 3100, 300, 4464, 5660, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10949130973430594, "compression_ratio": 1.683982683982684, "no_speech_prob": 6.5381477725168224e-06}, {"id": 151, "seek": 45036, "start": 450.36, "end": 454.56, "text": " the sum of the distances along the path.", "tokens": [50364, 264, 2408, 295, 264, 22182, 2051, 264, 3100, 13, 50574, 50574, 407, 2745, 11, 291, 434, 516, 281, 362, 281, 352, 33796, 544, 50744, 50744, 4439, 813, 291, 352, 28450, 13, 50802, 50802, 407, 322, 257, 1326, 20641, 11, 291, 434, 516, 281, 360, 17405, 379, 13, 50920, 50920, 1282, 257, 1326, 20641, 11, 291, 434, 516, 281, 352, 28450, 493, 13, 51020, 51020, 583, 322, 867, 20641, 11, 291, 434, 1391, 51095, 51095, 516, 281, 352, 33796, 281, 264, 558, 13, 51314, 51314, 400, 300, 576, 312, 264, 2590, 689, 51400, 51400, 291, 362, 3866, 4111, 18875, 510, 51478, 51478, 300, 366, 4476, 14800, 300, 2995, 257, 2167, 4111, 51638, 51638, 8062, 294, 264, 12379, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1450501276441842, "compression_ratio": 1.962809917355372, "no_speech_prob": 1.7229212971869856e-05}, {"id": 152, "seek": 45036, "start": 454.56, "end": 457.96000000000004, "text": " So obviously, you're going to have to go horizontally more", "tokens": [50364, 264, 2408, 295, 264, 22182, 2051, 264, 3100, 13, 50574, 50574, 407, 2745, 11, 291, 434, 516, 281, 362, 281, 352, 33796, 544, 50744, 50744, 4439, 813, 291, 352, 28450, 13, 50802, 50802, 407, 322, 257, 1326, 20641, 11, 291, 434, 516, 281, 360, 17405, 379, 13, 50920, 50920, 1282, 257, 1326, 20641, 11, 291, 434, 516, 281, 352, 28450, 493, 13, 51020, 51020, 583, 322, 867, 20641, 11, 291, 434, 1391, 51095, 51095, 516, 281, 352, 33796, 281, 264, 558, 13, 51314, 51314, 400, 300, 576, 312, 264, 2590, 689, 51400, 51400, 291, 362, 3866, 4111, 18875, 510, 51478, 51478, 300, 366, 4476, 14800, 300, 2995, 257, 2167, 4111, 51638, 51638, 8062, 294, 264, 12379, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1450501276441842, "compression_ratio": 1.962809917355372, "no_speech_prob": 1.7229212971869856e-05}, {"id": 153, "seek": 45036, "start": 457.96000000000004, "end": 459.12, "text": " steps than you go vertically.", "tokens": [50364, 264, 2408, 295, 264, 22182, 2051, 264, 3100, 13, 50574, 50574, 407, 2745, 11, 291, 434, 516, 281, 362, 281, 352, 33796, 544, 50744, 50744, 4439, 813, 291, 352, 28450, 13, 50802, 50802, 407, 322, 257, 1326, 20641, 11, 291, 434, 516, 281, 360, 17405, 379, 13, 50920, 50920, 1282, 257, 1326, 20641, 11, 291, 434, 516, 281, 352, 28450, 493, 13, 51020, 51020, 583, 322, 867, 20641, 11, 291, 434, 1391, 51095, 51095, 516, 281, 352, 33796, 281, 264, 558, 13, 51314, 51314, 400, 300, 576, 312, 264, 2590, 689, 51400, 51400, 291, 362, 3866, 4111, 18875, 510, 51478, 51478, 300, 366, 4476, 14800, 300, 2995, 257, 2167, 4111, 51638, 51638, 8062, 294, 264, 12379, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1450501276441842, "compression_ratio": 1.962809917355372, "no_speech_prob": 1.7229212971869856e-05}, {"id": 154, "seek": 45036, "start": 459.12, "end": 461.48, "text": " So on a few occasions, you're going to do diagonally.", "tokens": [50364, 264, 2408, 295, 264, 22182, 2051, 264, 3100, 13, 50574, 50574, 407, 2745, 11, 291, 434, 516, 281, 362, 281, 352, 33796, 544, 50744, 50744, 4439, 813, 291, 352, 28450, 13, 50802, 50802, 407, 322, 257, 1326, 20641, 11, 291, 434, 516, 281, 360, 17405, 379, 13, 50920, 50920, 1282, 257, 1326, 20641, 11, 291, 434, 516, 281, 352, 28450, 493, 13, 51020, 51020, 583, 322, 867, 20641, 11, 291, 434, 1391, 51095, 51095, 516, 281, 352, 33796, 281, 264, 558, 13, 51314, 51314, 400, 300, 576, 312, 264, 2590, 689, 51400, 51400, 291, 362, 3866, 4111, 18875, 510, 51478, 51478, 300, 366, 4476, 14800, 300, 2995, 257, 2167, 4111, 51638, 51638, 8062, 294, 264, 12379, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1450501276441842, "compression_ratio": 1.962809917355372, "no_speech_prob": 1.7229212971869856e-05}, {"id": 155, "seek": 45036, "start": 461.48, "end": 463.48, "text": " On a few occasions, you're going to go vertically up.", "tokens": [50364, 264, 2408, 295, 264, 22182, 2051, 264, 3100, 13, 50574, 50574, 407, 2745, 11, 291, 434, 516, 281, 362, 281, 352, 33796, 544, 50744, 50744, 4439, 813, 291, 352, 28450, 13, 50802, 50802, 407, 322, 257, 1326, 20641, 11, 291, 434, 516, 281, 360, 17405, 379, 13, 50920, 50920, 1282, 257, 1326, 20641, 11, 291, 434, 516, 281, 352, 28450, 493, 13, 51020, 51020, 583, 322, 867, 20641, 11, 291, 434, 1391, 51095, 51095, 516, 281, 352, 33796, 281, 264, 558, 13, 51314, 51314, 400, 300, 576, 312, 264, 2590, 689, 51400, 51400, 291, 362, 3866, 4111, 18875, 510, 51478, 51478, 300, 366, 4476, 14800, 300, 2995, 257, 2167, 4111, 51638, 51638, 8062, 294, 264, 12379, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1450501276441842, "compression_ratio": 1.962809917355372, "no_speech_prob": 1.7229212971869856e-05}, {"id": 156, "seek": 45036, "start": 463.48, "end": 464.98, "text": " But on many occasions, you're probably", "tokens": [50364, 264, 2408, 295, 264, 22182, 2051, 264, 3100, 13, 50574, 50574, 407, 2745, 11, 291, 434, 516, 281, 362, 281, 352, 33796, 544, 50744, 50744, 4439, 813, 291, 352, 28450, 13, 50802, 50802, 407, 322, 257, 1326, 20641, 11, 291, 434, 516, 281, 360, 17405, 379, 13, 50920, 50920, 1282, 257, 1326, 20641, 11, 291, 434, 516, 281, 352, 28450, 493, 13, 51020, 51020, 583, 322, 867, 20641, 11, 291, 434, 1391, 51095, 51095, 516, 281, 352, 33796, 281, 264, 558, 13, 51314, 51314, 400, 300, 576, 312, 264, 2590, 689, 51400, 51400, 291, 362, 3866, 4111, 18875, 510, 51478, 51478, 300, 366, 4476, 14800, 300, 2995, 257, 2167, 4111, 51638, 51638, 8062, 294, 264, 12379, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1450501276441842, "compression_ratio": 1.962809917355372, "no_speech_prob": 1.7229212971869856e-05}, {"id": 157, "seek": 45036, "start": 464.98, "end": 469.36, "text": " going to go horizontally to the right.", "tokens": [50364, 264, 2408, 295, 264, 22182, 2051, 264, 3100, 13, 50574, 50574, 407, 2745, 11, 291, 434, 516, 281, 362, 281, 352, 33796, 544, 50744, 50744, 4439, 813, 291, 352, 28450, 13, 50802, 50802, 407, 322, 257, 1326, 20641, 11, 291, 434, 516, 281, 360, 17405, 379, 13, 50920, 50920, 1282, 257, 1326, 20641, 11, 291, 434, 516, 281, 352, 28450, 493, 13, 51020, 51020, 583, 322, 867, 20641, 11, 291, 434, 1391, 51095, 51095, 516, 281, 352, 33796, 281, 264, 558, 13, 51314, 51314, 400, 300, 576, 312, 264, 2590, 689, 51400, 51400, 291, 362, 3866, 4111, 18875, 510, 51478, 51478, 300, 366, 4476, 14800, 300, 2995, 257, 2167, 4111, 51638, 51638, 8062, 294, 264, 12379, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1450501276441842, "compression_ratio": 1.962809917355372, "no_speech_prob": 1.7229212971869856e-05}, {"id": 158, "seek": 45036, "start": 469.36, "end": 471.08000000000004, "text": " And that would be the situation where", "tokens": [50364, 264, 2408, 295, 264, 22182, 2051, 264, 3100, 13, 50574, 50574, 407, 2745, 11, 291, 434, 516, 281, 362, 281, 352, 33796, 544, 50744, 50744, 4439, 813, 291, 352, 28450, 13, 50802, 50802, 407, 322, 257, 1326, 20641, 11, 291, 434, 516, 281, 360, 17405, 379, 13, 50920, 50920, 1282, 257, 1326, 20641, 11, 291, 434, 516, 281, 352, 28450, 493, 13, 51020, 51020, 583, 322, 867, 20641, 11, 291, 434, 1391, 51095, 51095, 516, 281, 352, 33796, 281, 264, 558, 13, 51314, 51314, 400, 300, 576, 312, 264, 2590, 689, 51400, 51400, 291, 362, 3866, 4111, 18875, 510, 51478, 51478, 300, 366, 4476, 14800, 300, 2995, 257, 2167, 4111, 51638, 51638, 8062, 294, 264, 12379, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1450501276441842, "compression_ratio": 1.962809917355372, "no_speech_prob": 1.7229212971869856e-05}, {"id": 159, "seek": 45036, "start": 471.08000000000004, "end": 472.64, "text": " you have multiple feature vectors here", "tokens": [50364, 264, 2408, 295, 264, 22182, 2051, 264, 3100, 13, 50574, 50574, 407, 2745, 11, 291, 434, 516, 281, 362, 281, 352, 33796, 544, 50744, 50744, 4439, 813, 291, 352, 28450, 13, 50802, 50802, 407, 322, 257, 1326, 20641, 11, 291, 434, 516, 281, 360, 17405, 379, 13, 50920, 50920, 1282, 257, 1326, 20641, 11, 291, 434, 516, 281, 352, 28450, 493, 13, 51020, 51020, 583, 322, 867, 20641, 11, 291, 434, 1391, 51095, 51095, 516, 281, 352, 33796, 281, 264, 558, 13, 51314, 51314, 400, 300, 576, 312, 264, 2590, 689, 51400, 51400, 291, 362, 3866, 4111, 18875, 510, 51478, 51478, 300, 366, 4476, 14800, 300, 2995, 257, 2167, 4111, 51638, 51638, 8062, 294, 264, 12379, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1450501276441842, "compression_ratio": 1.962809917355372, "no_speech_prob": 1.7229212971869856e-05}, {"id": 160, "seek": 45036, "start": 472.64, "end": 475.84000000000003, "text": " that are essentially identical that match a single feature", "tokens": [50364, 264, 2408, 295, 264, 22182, 2051, 264, 3100, 13, 50574, 50574, 407, 2745, 11, 291, 434, 516, 281, 362, 281, 352, 33796, 544, 50744, 50744, 4439, 813, 291, 352, 28450, 13, 50802, 50802, 407, 322, 257, 1326, 20641, 11, 291, 434, 516, 281, 360, 17405, 379, 13, 50920, 50920, 1282, 257, 1326, 20641, 11, 291, 434, 516, 281, 352, 28450, 493, 13, 51020, 51020, 583, 322, 867, 20641, 11, 291, 434, 1391, 51095, 51095, 516, 281, 352, 33796, 281, 264, 558, 13, 51314, 51314, 400, 300, 576, 312, 264, 2590, 689, 51400, 51400, 291, 362, 3866, 4111, 18875, 510, 51478, 51478, 300, 366, 4476, 14800, 300, 2995, 257, 2167, 4111, 51638, 51638, 8062, 294, 264, 12379, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1450501276441842, "compression_ratio": 1.962809917355372, "no_speech_prob": 1.7229212971869856e-05}, {"id": 161, "seek": 45036, "start": 475.84000000000003, "end": 477.6, "text": " vector in the template.", "tokens": [50364, 264, 2408, 295, 264, 22182, 2051, 264, 3100, 13, 50574, 50574, 407, 2745, 11, 291, 434, 516, 281, 362, 281, 352, 33796, 544, 50744, 50744, 4439, 813, 291, 352, 28450, 13, 50802, 50802, 407, 322, 257, 1326, 20641, 11, 291, 434, 516, 281, 360, 17405, 379, 13, 50920, 50920, 1282, 257, 1326, 20641, 11, 291, 434, 516, 281, 352, 28450, 493, 13, 51020, 51020, 583, 322, 867, 20641, 11, 291, 434, 1391, 51095, 51095, 516, 281, 352, 33796, 281, 264, 558, 13, 51314, 51314, 400, 300, 576, 312, 264, 2590, 689, 51400, 51400, 291, 362, 3866, 4111, 18875, 510, 51478, 51478, 300, 366, 4476, 14800, 300, 2995, 257, 2167, 4111, 51638, 51638, 8062, 294, 264, 12379, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1450501276441842, "compression_ratio": 1.962809917355372, "no_speech_prob": 1.7229212971869856e-05}, {"id": 162, "seek": 47760, "start": 477.6, "end": 480.64000000000004, "text": " So for example, you pronounce the word 7 very slowly.", "tokens": [50364, 407, 337, 1365, 11, 291, 19567, 264, 1349, 1614, 588, 5692, 13, 50516, 50516, 440, 3716, 9105, 307, 516, 281, 312, 10477, 3866, 1413, 50708, 50708, 570, 291, 2897, 322, 309, 337, 411, 257, 6555, 295, 257, 1150, 13, 50826, 50826, 407, 291, 434, 516, 281, 362, 3552, 14519, 295, 341, 13, 50992, 50992, 400, 439, 295, 341, 576, 312, 33318, 281, 1310, 257, 2167, 4111, 51136, 51136, 8062, 510, 300, 23249, 281, 341, 1626, 11, 3716, 13, 51344, 51344, 407, 5006, 341, 3100, 300, 1151, 1516, 1878, 264, 8310, 51622, 51622, 666, 264, 12379, 8310, 307, 411, 46608, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11229894693615367, "compression_ratio": 1.5945945945945945, "no_speech_prob": 7.764770089124795e-06}, {"id": 163, "seek": 47760, "start": 480.64000000000004, "end": 484.48, "text": " The ah initially is going to be repeated multiple times", "tokens": [50364, 407, 337, 1365, 11, 291, 19567, 264, 1349, 1614, 588, 5692, 13, 50516, 50516, 440, 3716, 9105, 307, 516, 281, 312, 10477, 3866, 1413, 50708, 50708, 570, 291, 2897, 322, 309, 337, 411, 257, 6555, 295, 257, 1150, 13, 50826, 50826, 407, 291, 434, 516, 281, 362, 3552, 14519, 295, 341, 13, 50992, 50992, 400, 439, 295, 341, 576, 312, 33318, 281, 1310, 257, 2167, 4111, 51136, 51136, 8062, 510, 300, 23249, 281, 341, 1626, 11, 3716, 13, 51344, 51344, 407, 5006, 341, 3100, 300, 1151, 1516, 1878, 264, 8310, 51622, 51622, 666, 264, 12379, 8310, 307, 411, 46608, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11229894693615367, "compression_ratio": 1.5945945945945945, "no_speech_prob": 7.764770089124795e-06}, {"id": 164, "seek": 47760, "start": 484.48, "end": 486.84000000000003, "text": " because you stick on it for like a quarter of a second.", "tokens": [50364, 407, 337, 1365, 11, 291, 19567, 264, 1349, 1614, 588, 5692, 13, 50516, 50516, 440, 3716, 9105, 307, 516, 281, 312, 10477, 3866, 1413, 50708, 50708, 570, 291, 2897, 322, 309, 337, 411, 257, 6555, 295, 257, 1150, 13, 50826, 50826, 407, 291, 434, 516, 281, 362, 3552, 14519, 295, 341, 13, 50992, 50992, 400, 439, 295, 341, 576, 312, 33318, 281, 1310, 257, 2167, 4111, 51136, 51136, 8062, 510, 300, 23249, 281, 341, 1626, 11, 3716, 13, 51344, 51344, 407, 5006, 341, 3100, 300, 1151, 1516, 1878, 264, 8310, 51622, 51622, 666, 264, 12379, 8310, 307, 411, 46608, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11229894693615367, "compression_ratio": 1.5945945945945945, "no_speech_prob": 7.764770089124795e-06}, {"id": 165, "seek": 47760, "start": 486.84000000000003, "end": 490.16, "text": " So you're going to have 25 instances of this.", "tokens": [50364, 407, 337, 1365, 11, 291, 19567, 264, 1349, 1614, 588, 5692, 13, 50516, 50516, 440, 3716, 9105, 307, 516, 281, 312, 10477, 3866, 1413, 50708, 50708, 570, 291, 2897, 322, 309, 337, 411, 257, 6555, 295, 257, 1150, 13, 50826, 50826, 407, 291, 434, 516, 281, 362, 3552, 14519, 295, 341, 13, 50992, 50992, 400, 439, 295, 341, 576, 312, 33318, 281, 1310, 257, 2167, 4111, 51136, 51136, 8062, 510, 300, 23249, 281, 341, 1626, 11, 3716, 13, 51344, 51344, 407, 5006, 341, 3100, 300, 1151, 1516, 1878, 264, 8310, 51622, 51622, 666, 264, 12379, 8310, 307, 411, 46608, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11229894693615367, "compression_ratio": 1.5945945945945945, "no_speech_prob": 7.764770089124795e-06}, {"id": 166, "seek": 47760, "start": 490.16, "end": 493.04, "text": " And all of this would be mapped to maybe a single feature", "tokens": [50364, 407, 337, 1365, 11, 291, 19567, 264, 1349, 1614, 588, 5692, 13, 50516, 50516, 440, 3716, 9105, 307, 516, 281, 312, 10477, 3866, 1413, 50708, 50708, 570, 291, 2897, 322, 309, 337, 411, 257, 6555, 295, 257, 1150, 13, 50826, 50826, 407, 291, 434, 516, 281, 362, 3552, 14519, 295, 341, 13, 50992, 50992, 400, 439, 295, 341, 576, 312, 33318, 281, 1310, 257, 2167, 4111, 51136, 51136, 8062, 510, 300, 23249, 281, 341, 1626, 11, 3716, 13, 51344, 51344, 407, 5006, 341, 3100, 300, 1151, 1516, 1878, 264, 8310, 51622, 51622, 666, 264, 12379, 8310, 307, 411, 46608, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11229894693615367, "compression_ratio": 1.5945945945945945, "no_speech_prob": 7.764770089124795e-06}, {"id": 167, "seek": 47760, "start": 493.04, "end": 497.20000000000005, "text": " vector here that corresponds to this sound, ah.", "tokens": [50364, 407, 337, 1365, 11, 291, 19567, 264, 1349, 1614, 588, 5692, 13, 50516, 50516, 440, 3716, 9105, 307, 516, 281, 312, 10477, 3866, 1413, 50708, 50708, 570, 291, 2897, 322, 309, 337, 411, 257, 6555, 295, 257, 1150, 13, 50826, 50826, 407, 291, 434, 516, 281, 362, 3552, 14519, 295, 341, 13, 50992, 50992, 400, 439, 295, 341, 576, 312, 33318, 281, 1310, 257, 2167, 4111, 51136, 51136, 8062, 510, 300, 23249, 281, 341, 1626, 11, 3716, 13, 51344, 51344, 407, 5006, 341, 3100, 300, 1151, 1516, 1878, 264, 8310, 51622, 51622, 666, 264, 12379, 8310, 307, 411, 46608, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11229894693615367, "compression_ratio": 1.5945945945945945, "no_speech_prob": 7.764770089124795e-06}, {"id": 168, "seek": 47760, "start": 497.20000000000005, "end": 502.76000000000005, "text": " So finding this path that best warps the sequence", "tokens": [50364, 407, 337, 1365, 11, 291, 19567, 264, 1349, 1614, 588, 5692, 13, 50516, 50516, 440, 3716, 9105, 307, 516, 281, 312, 10477, 3866, 1413, 50708, 50708, 570, 291, 2897, 322, 309, 337, 411, 257, 6555, 295, 257, 1150, 13, 50826, 50826, 407, 291, 434, 516, 281, 362, 3552, 14519, 295, 341, 13, 50992, 50992, 400, 439, 295, 341, 576, 312, 33318, 281, 1310, 257, 2167, 4111, 51136, 51136, 8062, 510, 300, 23249, 281, 341, 1626, 11, 3716, 13, 51344, 51344, 407, 5006, 341, 3100, 300, 1151, 1516, 1878, 264, 8310, 51622, 51622, 666, 264, 12379, 8310, 307, 411, 46608, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11229894693615367, "compression_ratio": 1.5945945945945945, "no_speech_prob": 7.764770089124795e-06}, {"id": 169, "seek": 47760, "start": 502.76000000000005, "end": 505.8, "text": " into the template sequence is like minimizing", "tokens": [50364, 407, 337, 1365, 11, 291, 19567, 264, 1349, 1614, 588, 5692, 13, 50516, 50516, 440, 3716, 9105, 307, 516, 281, 312, 10477, 3866, 1413, 50708, 50708, 570, 291, 2897, 322, 309, 337, 411, 257, 6555, 295, 257, 1150, 13, 50826, 50826, 407, 291, 434, 516, 281, 362, 3552, 14519, 295, 341, 13, 50992, 50992, 400, 439, 295, 341, 576, 312, 33318, 281, 1310, 257, 2167, 4111, 51136, 51136, 8062, 510, 300, 23249, 281, 341, 1626, 11, 3716, 13, 51344, 51344, 407, 5006, 341, 3100, 300, 1151, 1516, 1878, 264, 8310, 51622, 51622, 666, 264, 12379, 8310, 307, 411, 46608, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11229894693615367, "compression_ratio": 1.5945945945945945, "no_speech_prob": 7.764770089124795e-06}, {"id": 170, "seek": 50580, "start": 505.8, "end": 508.0, "text": " with respect to a latent variable z.", "tokens": [50364, 365, 3104, 281, 257, 48994, 7006, 710, 13, 50474, 50474, 407, 309, 311, 411, 291, 362, 364, 2281, 2445, 13, 50566, 50566, 509, 434, 46608, 341, 2281, 2445, 50658, 50658, 365, 3104, 281, 264, 48994, 7006, 13, 50732, 50732, 440, 48994, 7006, 307, 264, 3100, 294, 300, 4295, 13, 50944, 50944, 407, 586, 437, 291, 362, 307, 264, 1151, 1516, 3381, 51060, 51060, 300, 10676, 264, 8310, 295, 4111, 8062, 51156, 51156, 281, 264, 700, 12379, 13, 51234, 51234, 823, 11, 291, 1066, 884, 341, 365, 439, 264, 21165, 13, 51462, 51462, 407, 337, 633, 12379, 11, 633, 1349, 11, 490, 1958, 11, 502, 11, 568, 11, 805, 11, 281, 1722, 11, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17590578671159415, "compression_ratio": 1.800865800865801, "no_speech_prob": 9.97116876533255e-06}, {"id": 171, "seek": 50580, "start": 508.0, "end": 509.84000000000003, "text": " So it's like you have an energy function.", "tokens": [50364, 365, 3104, 281, 257, 48994, 7006, 710, 13, 50474, 50474, 407, 309, 311, 411, 291, 362, 364, 2281, 2445, 13, 50566, 50566, 509, 434, 46608, 341, 2281, 2445, 50658, 50658, 365, 3104, 281, 264, 48994, 7006, 13, 50732, 50732, 440, 48994, 7006, 307, 264, 3100, 294, 300, 4295, 13, 50944, 50944, 407, 586, 437, 291, 362, 307, 264, 1151, 1516, 3381, 51060, 51060, 300, 10676, 264, 8310, 295, 4111, 8062, 51156, 51156, 281, 264, 700, 12379, 13, 51234, 51234, 823, 11, 291, 1066, 884, 341, 365, 439, 264, 21165, 13, 51462, 51462, 407, 337, 633, 12379, 11, 633, 1349, 11, 490, 1958, 11, 502, 11, 568, 11, 805, 11, 281, 1722, 11, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17590578671159415, "compression_ratio": 1.800865800865801, "no_speech_prob": 9.97116876533255e-06}, {"id": 172, "seek": 50580, "start": 509.84000000000003, "end": 511.68, "text": " You're minimizing this energy function", "tokens": [50364, 365, 3104, 281, 257, 48994, 7006, 710, 13, 50474, 50474, 407, 309, 311, 411, 291, 362, 364, 2281, 2445, 13, 50566, 50566, 509, 434, 46608, 341, 2281, 2445, 50658, 50658, 365, 3104, 281, 264, 48994, 7006, 13, 50732, 50732, 440, 48994, 7006, 307, 264, 3100, 294, 300, 4295, 13, 50944, 50944, 407, 586, 437, 291, 362, 307, 264, 1151, 1516, 3381, 51060, 51060, 300, 10676, 264, 8310, 295, 4111, 8062, 51156, 51156, 281, 264, 700, 12379, 13, 51234, 51234, 823, 11, 291, 1066, 884, 341, 365, 439, 264, 21165, 13, 51462, 51462, 407, 337, 633, 12379, 11, 633, 1349, 11, 490, 1958, 11, 502, 11, 568, 11, 805, 11, 281, 1722, 11, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17590578671159415, "compression_ratio": 1.800865800865801, "no_speech_prob": 9.97116876533255e-06}, {"id": 173, "seek": 50580, "start": 511.68, "end": 513.16, "text": " with respect to the latent variable.", "tokens": [50364, 365, 3104, 281, 257, 48994, 7006, 710, 13, 50474, 50474, 407, 309, 311, 411, 291, 362, 364, 2281, 2445, 13, 50566, 50566, 509, 434, 46608, 341, 2281, 2445, 50658, 50658, 365, 3104, 281, 264, 48994, 7006, 13, 50732, 50732, 440, 48994, 7006, 307, 264, 3100, 294, 300, 4295, 13, 50944, 50944, 407, 586, 437, 291, 362, 307, 264, 1151, 1516, 3381, 51060, 51060, 300, 10676, 264, 8310, 295, 4111, 8062, 51156, 51156, 281, 264, 700, 12379, 13, 51234, 51234, 823, 11, 291, 1066, 884, 341, 365, 439, 264, 21165, 13, 51462, 51462, 407, 337, 633, 12379, 11, 633, 1349, 11, 490, 1958, 11, 502, 11, 568, 11, 805, 11, 281, 1722, 11, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17590578671159415, "compression_ratio": 1.800865800865801, "no_speech_prob": 9.97116876533255e-06}, {"id": 174, "seek": 50580, "start": 513.16, "end": 517.4, "text": " The latent variable is the path in that graph.", "tokens": [50364, 365, 3104, 281, 257, 48994, 7006, 710, 13, 50474, 50474, 407, 309, 311, 411, 291, 362, 364, 2281, 2445, 13, 50566, 50566, 509, 434, 46608, 341, 2281, 2445, 50658, 50658, 365, 3104, 281, 264, 48994, 7006, 13, 50732, 50732, 440, 48994, 7006, 307, 264, 3100, 294, 300, 4295, 13, 50944, 50944, 407, 586, 437, 291, 362, 307, 264, 1151, 1516, 3381, 51060, 51060, 300, 10676, 264, 8310, 295, 4111, 8062, 51156, 51156, 281, 264, 700, 12379, 13, 51234, 51234, 823, 11, 291, 1066, 884, 341, 365, 439, 264, 21165, 13, 51462, 51462, 407, 337, 633, 12379, 11, 633, 1349, 11, 490, 1958, 11, 502, 11, 568, 11, 805, 11, 281, 1722, 11, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17590578671159415, "compression_ratio": 1.800865800865801, "no_speech_prob": 9.97116876533255e-06}, {"id": 175, "seek": 50580, "start": 517.4, "end": 519.72, "text": " So now what you have is the best warping", "tokens": [50364, 365, 3104, 281, 257, 48994, 7006, 710, 13, 50474, 50474, 407, 309, 311, 411, 291, 362, 364, 2281, 2445, 13, 50566, 50566, 509, 434, 46608, 341, 2281, 2445, 50658, 50658, 365, 3104, 281, 264, 48994, 7006, 13, 50732, 50732, 440, 48994, 7006, 307, 264, 3100, 294, 300, 4295, 13, 50944, 50944, 407, 586, 437, 291, 362, 307, 264, 1151, 1516, 3381, 51060, 51060, 300, 10676, 264, 8310, 295, 4111, 8062, 51156, 51156, 281, 264, 700, 12379, 13, 51234, 51234, 823, 11, 291, 1066, 884, 341, 365, 439, 264, 21165, 13, 51462, 51462, 407, 337, 633, 12379, 11, 633, 1349, 11, 490, 1958, 11, 502, 11, 568, 11, 805, 11, 281, 1722, 11, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17590578671159415, "compression_ratio": 1.800865800865801, "no_speech_prob": 9.97116876533255e-06}, {"id": 176, "seek": 50580, "start": 519.72, "end": 521.64, "text": " that matches the sequence of feature vector", "tokens": [50364, 365, 3104, 281, 257, 48994, 7006, 710, 13, 50474, 50474, 407, 309, 311, 411, 291, 362, 364, 2281, 2445, 13, 50566, 50566, 509, 434, 46608, 341, 2281, 2445, 50658, 50658, 365, 3104, 281, 264, 48994, 7006, 13, 50732, 50732, 440, 48994, 7006, 307, 264, 3100, 294, 300, 4295, 13, 50944, 50944, 407, 586, 437, 291, 362, 307, 264, 1151, 1516, 3381, 51060, 51060, 300, 10676, 264, 8310, 295, 4111, 8062, 51156, 51156, 281, 264, 700, 12379, 13, 51234, 51234, 823, 11, 291, 1066, 884, 341, 365, 439, 264, 21165, 13, 51462, 51462, 407, 337, 633, 12379, 11, 633, 1349, 11, 490, 1958, 11, 502, 11, 568, 11, 805, 11, 281, 1722, 11, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17590578671159415, "compression_ratio": 1.800865800865801, "no_speech_prob": 9.97116876533255e-06}, {"id": 177, "seek": 50580, "start": 521.64, "end": 523.2, "text": " to the first template.", "tokens": [50364, 365, 3104, 281, 257, 48994, 7006, 710, 13, 50474, 50474, 407, 309, 311, 411, 291, 362, 364, 2281, 2445, 13, 50566, 50566, 509, 434, 46608, 341, 2281, 2445, 50658, 50658, 365, 3104, 281, 264, 48994, 7006, 13, 50732, 50732, 440, 48994, 7006, 307, 264, 3100, 294, 300, 4295, 13, 50944, 50944, 407, 586, 437, 291, 362, 307, 264, 1151, 1516, 3381, 51060, 51060, 300, 10676, 264, 8310, 295, 4111, 8062, 51156, 51156, 281, 264, 700, 12379, 13, 51234, 51234, 823, 11, 291, 1066, 884, 341, 365, 439, 264, 21165, 13, 51462, 51462, 407, 337, 633, 12379, 11, 633, 1349, 11, 490, 1958, 11, 502, 11, 568, 11, 805, 11, 281, 1722, 11, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17590578671159415, "compression_ratio": 1.800865800865801, "no_speech_prob": 9.97116876533255e-06}, {"id": 178, "seek": 50580, "start": 523.2, "end": 527.76, "text": " Now, you keep doing this with all the templates.", "tokens": [50364, 365, 3104, 281, 257, 48994, 7006, 710, 13, 50474, 50474, 407, 309, 311, 411, 291, 362, 364, 2281, 2445, 13, 50566, 50566, 509, 434, 46608, 341, 2281, 2445, 50658, 50658, 365, 3104, 281, 264, 48994, 7006, 13, 50732, 50732, 440, 48994, 7006, 307, 264, 3100, 294, 300, 4295, 13, 50944, 50944, 407, 586, 437, 291, 362, 307, 264, 1151, 1516, 3381, 51060, 51060, 300, 10676, 264, 8310, 295, 4111, 8062, 51156, 51156, 281, 264, 700, 12379, 13, 51234, 51234, 823, 11, 291, 1066, 884, 341, 365, 439, 264, 21165, 13, 51462, 51462, 407, 337, 633, 12379, 11, 633, 1349, 11, 490, 1958, 11, 502, 11, 568, 11, 805, 11, 281, 1722, 11, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17590578671159415, "compression_ratio": 1.800865800865801, "no_speech_prob": 9.97116876533255e-06}, {"id": 179, "seek": 50580, "start": 527.76, "end": 532.64, "text": " So for every template, every word, from 0, 1, 2, 3, to 9,", "tokens": [50364, 365, 3104, 281, 257, 48994, 7006, 710, 13, 50474, 50474, 407, 309, 311, 411, 291, 362, 364, 2281, 2445, 13, 50566, 50566, 509, 434, 46608, 341, 2281, 2445, 50658, 50658, 365, 3104, 281, 264, 48994, 7006, 13, 50732, 50732, 440, 48994, 7006, 307, 264, 3100, 294, 300, 4295, 13, 50944, 50944, 407, 586, 437, 291, 362, 307, 264, 1151, 1516, 3381, 51060, 51060, 300, 10676, 264, 8310, 295, 4111, 8062, 51156, 51156, 281, 264, 700, 12379, 13, 51234, 51234, 823, 11, 291, 1066, 884, 341, 365, 439, 264, 21165, 13, 51462, 51462, 407, 337, 633, 12379, 11, 633, 1349, 11, 490, 1958, 11, 502, 11, 568, 11, 805, 11, 281, 1722, 11, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17590578671159415, "compression_ratio": 1.800865800865801, "no_speech_prob": 9.97116876533255e-06}, {"id": 180, "seek": 53264, "start": 532.64, "end": 536.4, "text": " you have the best way to warp the feature vector", "tokens": [50364, 291, 362, 264, 1151, 636, 281, 36030, 264, 4111, 8062, 50552, 50552, 281, 300, 12379, 13, 50698, 50698, 400, 586, 291, 393, 11, 498, 428, 1185, 575, 668, 8895, 11, 50978, 50978, 291, 1888, 264, 7719, 295, 264, 1349, 12379, 51148, 51148, 365, 264, 16998, 4560, 13, 51226, 51226, 2264, 11, 382, 2199, 382, 300, 13, 51304, 51304, 663, 311, 337, 21538, 13, 51360, 51360, 823, 11, 577, 466, 3097, 30, 51408, 51408, 407, 337, 3097, 11, 341, 307, 257, 48994, 7006, 2316, 11, 51564, 51564, 4476, 13, 51590, 51590, 400, 437, 291, 643, 281, 360, 307, 291, 643, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.153889063492562, "compression_ratio": 1.5764192139737991, "no_speech_prob": 3.340097237014561e-06}, {"id": 181, "seek": 53264, "start": 536.4, "end": 539.3199999999999, "text": " to that template.", "tokens": [50364, 291, 362, 264, 1151, 636, 281, 36030, 264, 4111, 8062, 50552, 50552, 281, 300, 12379, 13, 50698, 50698, 400, 586, 291, 393, 11, 498, 428, 1185, 575, 668, 8895, 11, 50978, 50978, 291, 1888, 264, 7719, 295, 264, 1349, 12379, 51148, 51148, 365, 264, 16998, 4560, 13, 51226, 51226, 2264, 11, 382, 2199, 382, 300, 13, 51304, 51304, 663, 311, 337, 21538, 13, 51360, 51360, 823, 11, 577, 466, 3097, 30, 51408, 51408, 407, 337, 3097, 11, 341, 307, 257, 48994, 7006, 2316, 11, 51564, 51564, 4476, 13, 51590, 51590, 400, 437, 291, 643, 281, 360, 307, 291, 643, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.153889063492562, "compression_ratio": 1.5764192139737991, "no_speech_prob": 3.340097237014561e-06}, {"id": 182, "seek": 53264, "start": 539.3199999999999, "end": 544.92, "text": " And now you can, if your system has been trained,", "tokens": [50364, 291, 362, 264, 1151, 636, 281, 36030, 264, 4111, 8062, 50552, 50552, 281, 300, 12379, 13, 50698, 50698, 400, 586, 291, 393, 11, 498, 428, 1185, 575, 668, 8895, 11, 50978, 50978, 291, 1888, 264, 7719, 295, 264, 1349, 12379, 51148, 51148, 365, 264, 16998, 4560, 13, 51226, 51226, 2264, 11, 382, 2199, 382, 300, 13, 51304, 51304, 663, 311, 337, 21538, 13, 51360, 51360, 823, 11, 577, 466, 3097, 30, 51408, 51408, 407, 337, 3097, 11, 341, 307, 257, 48994, 7006, 2316, 11, 51564, 51564, 4476, 13, 51590, 51590, 400, 437, 291, 643, 281, 360, 307, 291, 643, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.153889063492562, "compression_ratio": 1.5764192139737991, "no_speech_prob": 3.340097237014561e-06}, {"id": 183, "seek": 53264, "start": 544.92, "end": 548.3199999999999, "text": " you pick the category of the word template", "tokens": [50364, 291, 362, 264, 1151, 636, 281, 36030, 264, 4111, 8062, 50552, 50552, 281, 300, 12379, 13, 50698, 50698, 400, 586, 291, 393, 11, 498, 428, 1185, 575, 668, 8895, 11, 50978, 50978, 291, 1888, 264, 7719, 295, 264, 1349, 12379, 51148, 51148, 365, 264, 16998, 4560, 13, 51226, 51226, 2264, 11, 382, 2199, 382, 300, 13, 51304, 51304, 663, 311, 337, 21538, 13, 51360, 51360, 823, 11, 577, 466, 3097, 30, 51408, 51408, 407, 337, 3097, 11, 341, 307, 257, 48994, 7006, 2316, 11, 51564, 51564, 4476, 13, 51590, 51590, 400, 437, 291, 643, 281, 360, 307, 291, 643, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.153889063492562, "compression_ratio": 1.5764192139737991, "no_speech_prob": 3.340097237014561e-06}, {"id": 184, "seek": 53264, "start": 548.3199999999999, "end": 549.88, "text": " with the smallest distance.", "tokens": [50364, 291, 362, 264, 1151, 636, 281, 36030, 264, 4111, 8062, 50552, 50552, 281, 300, 12379, 13, 50698, 50698, 400, 586, 291, 393, 11, 498, 428, 1185, 575, 668, 8895, 11, 50978, 50978, 291, 1888, 264, 7719, 295, 264, 1349, 12379, 51148, 51148, 365, 264, 16998, 4560, 13, 51226, 51226, 2264, 11, 382, 2199, 382, 300, 13, 51304, 51304, 663, 311, 337, 21538, 13, 51360, 51360, 823, 11, 577, 466, 3097, 30, 51408, 51408, 407, 337, 3097, 11, 341, 307, 257, 48994, 7006, 2316, 11, 51564, 51564, 4476, 13, 51590, 51590, 400, 437, 291, 643, 281, 360, 307, 291, 643, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.153889063492562, "compression_ratio": 1.5764192139737991, "no_speech_prob": 3.340097237014561e-06}, {"id": 185, "seek": 53264, "start": 549.88, "end": 551.4399999999999, "text": " OK, as simple as that.", "tokens": [50364, 291, 362, 264, 1151, 636, 281, 36030, 264, 4111, 8062, 50552, 50552, 281, 300, 12379, 13, 50698, 50698, 400, 586, 291, 393, 11, 498, 428, 1185, 575, 668, 8895, 11, 50978, 50978, 291, 1888, 264, 7719, 295, 264, 1349, 12379, 51148, 51148, 365, 264, 16998, 4560, 13, 51226, 51226, 2264, 11, 382, 2199, 382, 300, 13, 51304, 51304, 663, 311, 337, 21538, 13, 51360, 51360, 823, 11, 577, 466, 3097, 30, 51408, 51408, 407, 337, 3097, 11, 341, 307, 257, 48994, 7006, 2316, 11, 51564, 51564, 4476, 13, 51590, 51590, 400, 437, 291, 643, 281, 360, 307, 291, 643, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.153889063492562, "compression_ratio": 1.5764192139737991, "no_speech_prob": 3.340097237014561e-06}, {"id": 186, "seek": 53264, "start": 551.4399999999999, "end": 552.56, "text": " That's for classification.", "tokens": [50364, 291, 362, 264, 1151, 636, 281, 36030, 264, 4111, 8062, 50552, 50552, 281, 300, 12379, 13, 50698, 50698, 400, 586, 291, 393, 11, 498, 428, 1185, 575, 668, 8895, 11, 50978, 50978, 291, 1888, 264, 7719, 295, 264, 1349, 12379, 51148, 51148, 365, 264, 16998, 4560, 13, 51226, 51226, 2264, 11, 382, 2199, 382, 300, 13, 51304, 51304, 663, 311, 337, 21538, 13, 51360, 51360, 823, 11, 577, 466, 3097, 30, 51408, 51408, 407, 337, 3097, 11, 341, 307, 257, 48994, 7006, 2316, 11, 51564, 51564, 4476, 13, 51590, 51590, 400, 437, 291, 643, 281, 360, 307, 291, 643, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.153889063492562, "compression_ratio": 1.5764192139737991, "no_speech_prob": 3.340097237014561e-06}, {"id": 187, "seek": 53264, "start": 552.56, "end": 553.52, "text": " Now, how about training?", "tokens": [50364, 291, 362, 264, 1151, 636, 281, 36030, 264, 4111, 8062, 50552, 50552, 281, 300, 12379, 13, 50698, 50698, 400, 586, 291, 393, 11, 498, 428, 1185, 575, 668, 8895, 11, 50978, 50978, 291, 1888, 264, 7719, 295, 264, 1349, 12379, 51148, 51148, 365, 264, 16998, 4560, 13, 51226, 51226, 2264, 11, 382, 2199, 382, 300, 13, 51304, 51304, 663, 311, 337, 21538, 13, 51360, 51360, 823, 11, 577, 466, 3097, 30, 51408, 51408, 407, 337, 3097, 11, 341, 307, 257, 48994, 7006, 2316, 11, 51564, 51564, 4476, 13, 51590, 51590, 400, 437, 291, 643, 281, 360, 307, 291, 643, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.153889063492562, "compression_ratio": 1.5764192139737991, "no_speech_prob": 3.340097237014561e-06}, {"id": 188, "seek": 53264, "start": 553.52, "end": 556.64, "text": " So for training, this is a latent variable model,", "tokens": [50364, 291, 362, 264, 1151, 636, 281, 36030, 264, 4111, 8062, 50552, 50552, 281, 300, 12379, 13, 50698, 50698, 400, 586, 291, 393, 11, 498, 428, 1185, 575, 668, 8895, 11, 50978, 50978, 291, 1888, 264, 7719, 295, 264, 1349, 12379, 51148, 51148, 365, 264, 16998, 4560, 13, 51226, 51226, 2264, 11, 382, 2199, 382, 300, 13, 51304, 51304, 663, 311, 337, 21538, 13, 51360, 51360, 823, 11, 577, 466, 3097, 30, 51408, 51408, 407, 337, 3097, 11, 341, 307, 257, 48994, 7006, 2316, 11, 51564, 51564, 4476, 13, 51590, 51590, 400, 437, 291, 643, 281, 360, 307, 291, 643, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.153889063492562, "compression_ratio": 1.5764192139737991, "no_speech_prob": 3.340097237014561e-06}, {"id": 189, "seek": 53264, "start": 556.64, "end": 557.16, "text": " essentially.", "tokens": [50364, 291, 362, 264, 1151, 636, 281, 36030, 264, 4111, 8062, 50552, 50552, 281, 300, 12379, 13, 50698, 50698, 400, 586, 291, 393, 11, 498, 428, 1185, 575, 668, 8895, 11, 50978, 50978, 291, 1888, 264, 7719, 295, 264, 1349, 12379, 51148, 51148, 365, 264, 16998, 4560, 13, 51226, 51226, 2264, 11, 382, 2199, 382, 300, 13, 51304, 51304, 663, 311, 337, 21538, 13, 51360, 51360, 823, 11, 577, 466, 3097, 30, 51408, 51408, 407, 337, 3097, 11, 341, 307, 257, 48994, 7006, 2316, 11, 51564, 51564, 4476, 13, 51590, 51590, 400, 437, 291, 643, 281, 360, 307, 291, 643, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.153889063492562, "compression_ratio": 1.5764192139737991, "no_speech_prob": 3.340097237014561e-06}, {"id": 190, "seek": 53264, "start": 557.16, "end": 559.52, "text": " And what you need to do is you need", "tokens": [50364, 291, 362, 264, 1151, 636, 281, 36030, 264, 4111, 8062, 50552, 50552, 281, 300, 12379, 13, 50698, 50698, 400, 586, 291, 393, 11, 498, 428, 1185, 575, 668, 8895, 11, 50978, 50978, 291, 1888, 264, 7719, 295, 264, 1349, 12379, 51148, 51148, 365, 264, 16998, 4560, 13, 51226, 51226, 2264, 11, 382, 2199, 382, 300, 13, 51304, 51304, 663, 311, 337, 21538, 13, 51360, 51360, 823, 11, 577, 466, 3097, 30, 51408, 51408, 407, 337, 3097, 11, 341, 307, 257, 48994, 7006, 2316, 11, 51564, 51564, 4476, 13, 51590, 51590, 400, 437, 291, 643, 281, 360, 307, 291, 643, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.153889063492562, "compression_ratio": 1.5764192139737991, "no_speech_prob": 3.340097237014561e-06}, {"id": 191, "seek": 55952, "start": 559.52, "end": 563.64, "text": " to make the energy for the correct answer", "tokens": [50364, 281, 652, 264, 2281, 337, 264, 3006, 1867, 50570, 50570, 382, 1359, 382, 1944, 293, 652, 988, 264, 2281, 50726, 50726, 337, 264, 18424, 6338, 366, 4833, 13, 50886, 50886, 2264, 11, 370, 718, 311, 3811, 264, 3006, 1867, 307, 341, 1349, 510, 11, 51316, 51316, 264, 1150, 1036, 472, 11, 300, 6805, 281, 1958, 11, 502, 11, 568, 11, 805, 11, 51494, 51494, 264, 7719, 805, 11, 337, 1365, 13, 51602, 51602, 2264, 11, 370, 321, 458, 264, 3006, 1867, 307, 805, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.15907079523259943, "compression_ratio": 1.8263473053892216, "no_speech_prob": 1.2218250958540011e-05}, {"id": 192, "seek": 55952, "start": 563.64, "end": 566.76, "text": " as small as possible and make sure the energy", "tokens": [50364, 281, 652, 264, 2281, 337, 264, 3006, 1867, 50570, 50570, 382, 1359, 382, 1944, 293, 652, 988, 264, 2281, 50726, 50726, 337, 264, 18424, 6338, 366, 4833, 13, 50886, 50886, 2264, 11, 370, 718, 311, 3811, 264, 3006, 1867, 307, 341, 1349, 510, 11, 51316, 51316, 264, 1150, 1036, 472, 11, 300, 6805, 281, 1958, 11, 502, 11, 568, 11, 805, 11, 51494, 51494, 264, 7719, 805, 11, 337, 1365, 13, 51602, 51602, 2264, 11, 370, 321, 458, 264, 3006, 1867, 307, 805, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.15907079523259943, "compression_ratio": 1.8263473053892216, "no_speech_prob": 1.2218250958540011e-05}, {"id": 193, "seek": 55952, "start": 566.76, "end": 569.96, "text": " for the incorrect answers are larger.", "tokens": [50364, 281, 652, 264, 2281, 337, 264, 3006, 1867, 50570, 50570, 382, 1359, 382, 1944, 293, 652, 988, 264, 2281, 50726, 50726, 337, 264, 18424, 6338, 366, 4833, 13, 50886, 50886, 2264, 11, 370, 718, 311, 3811, 264, 3006, 1867, 307, 341, 1349, 510, 11, 51316, 51316, 264, 1150, 1036, 472, 11, 300, 6805, 281, 1958, 11, 502, 11, 568, 11, 805, 11, 51494, 51494, 264, 7719, 805, 11, 337, 1365, 13, 51602, 51602, 2264, 11, 370, 321, 458, 264, 3006, 1867, 307, 805, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.15907079523259943, "compression_ratio": 1.8263473053892216, "no_speech_prob": 1.2218250958540011e-05}, {"id": 194, "seek": 55952, "start": 569.96, "end": 578.56, "text": " OK, so let's imagine the correct answer is this word here,", "tokens": [50364, 281, 652, 264, 2281, 337, 264, 3006, 1867, 50570, 50570, 382, 1359, 382, 1944, 293, 652, 988, 264, 2281, 50726, 50726, 337, 264, 18424, 6338, 366, 4833, 13, 50886, 50886, 2264, 11, 370, 718, 311, 3811, 264, 3006, 1867, 307, 341, 1349, 510, 11, 51316, 51316, 264, 1150, 1036, 472, 11, 300, 6805, 281, 1958, 11, 502, 11, 568, 11, 805, 11, 51494, 51494, 264, 7719, 805, 11, 337, 1365, 13, 51602, 51602, 2264, 11, 370, 321, 458, 264, 3006, 1867, 307, 805, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.15907079523259943, "compression_ratio": 1.8263473053892216, "no_speech_prob": 1.2218250958540011e-05}, {"id": 195, "seek": 55952, "start": 578.56, "end": 582.12, "text": " the second last one, that correspond to 0, 1, 2, 3,", "tokens": [50364, 281, 652, 264, 2281, 337, 264, 3006, 1867, 50570, 50570, 382, 1359, 382, 1944, 293, 652, 988, 264, 2281, 50726, 50726, 337, 264, 18424, 6338, 366, 4833, 13, 50886, 50886, 2264, 11, 370, 718, 311, 3811, 264, 3006, 1867, 307, 341, 1349, 510, 11, 51316, 51316, 264, 1150, 1036, 472, 11, 300, 6805, 281, 1958, 11, 502, 11, 568, 11, 805, 11, 51494, 51494, 264, 7719, 805, 11, 337, 1365, 13, 51602, 51602, 2264, 11, 370, 321, 458, 264, 3006, 1867, 307, 805, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.15907079523259943, "compression_ratio": 1.8263473053892216, "no_speech_prob": 1.2218250958540011e-05}, {"id": 196, "seek": 55952, "start": 582.12, "end": 584.28, "text": " the category 3, for example.", "tokens": [50364, 281, 652, 264, 2281, 337, 264, 3006, 1867, 50570, 50570, 382, 1359, 382, 1944, 293, 652, 988, 264, 2281, 50726, 50726, 337, 264, 18424, 6338, 366, 4833, 13, 50886, 50886, 2264, 11, 370, 718, 311, 3811, 264, 3006, 1867, 307, 341, 1349, 510, 11, 51316, 51316, 264, 1150, 1036, 472, 11, 300, 6805, 281, 1958, 11, 502, 11, 568, 11, 805, 11, 51494, 51494, 264, 7719, 805, 11, 337, 1365, 13, 51602, 51602, 2264, 11, 370, 321, 458, 264, 3006, 1867, 307, 805, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.15907079523259943, "compression_ratio": 1.8263473053892216, "no_speech_prob": 1.2218250958540011e-05}, {"id": 197, "seek": 55952, "start": 584.28, "end": 586.76, "text": " OK, so we know the correct answer is 3.", "tokens": [50364, 281, 652, 264, 2281, 337, 264, 3006, 1867, 50570, 50570, 382, 1359, 382, 1944, 293, 652, 988, 264, 2281, 50726, 50726, 337, 264, 18424, 6338, 366, 4833, 13, 50886, 50886, 2264, 11, 370, 718, 311, 3811, 264, 3006, 1867, 307, 341, 1349, 510, 11, 51316, 51316, 264, 1150, 1036, 472, 11, 300, 6805, 281, 1958, 11, 502, 11, 568, 11, 805, 11, 51494, 51494, 264, 7719, 805, 11, 337, 1365, 13, 51602, 51602, 2264, 11, 370, 321, 458, 264, 3006, 1867, 307, 805, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.15907079523259943, "compression_ratio": 1.8263473053892216, "no_speech_prob": 1.2218250958540011e-05}, {"id": 198, "seek": 58676, "start": 586.76, "end": 591.0, "text": " So what we need to do now is basically", "tokens": [50364, 407, 437, 321, 643, 281, 360, 586, 307, 1936, 50576, 50576, 1319, 264, 1349, 12379, 510, 257, 707, 857, 50672, 50672, 370, 300, 309, 2170, 4966, 281, 264, 4111, 8062, 8310, 11, 50958, 50958, 293, 550, 1319, 264, 4111, 8062, 8310, 51042, 51042, 370, 300, 309, 2170, 4966, 281, 264, 12379, 13, 51168, 51168, 509, 393, 519, 295, 341, 413, 51, 54, 4560, 11, 51354, 51354, 341, 8546, 565, 12, 1554, 3381, 4560, 11, 51418, 51418, 382, 257, 733, 295, 4560, 597, 11626, 4464, 2144, 51588, 51588, 365, 3104, 281, 257, 3100, 11, 457, 294, 264, 917, 11, 51665, 51665, 309, 311, 512, 1333, 295, 4560, 420, 47387, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16123130258205717, "compression_ratio": 1.781512605042017, "no_speech_prob": 3.904844561475329e-06}, {"id": 199, "seek": 58676, "start": 591.0, "end": 592.92, "text": " change the word template here a little bit", "tokens": [50364, 407, 437, 321, 643, 281, 360, 586, 307, 1936, 50576, 50576, 1319, 264, 1349, 12379, 510, 257, 707, 857, 50672, 50672, 370, 300, 309, 2170, 4966, 281, 264, 4111, 8062, 8310, 11, 50958, 50958, 293, 550, 1319, 264, 4111, 8062, 8310, 51042, 51042, 370, 300, 309, 2170, 4966, 281, 264, 12379, 13, 51168, 51168, 509, 393, 519, 295, 341, 413, 51, 54, 4560, 11, 51354, 51354, 341, 8546, 565, 12, 1554, 3381, 4560, 11, 51418, 51418, 382, 257, 733, 295, 4560, 597, 11626, 4464, 2144, 51588, 51588, 365, 3104, 281, 257, 3100, 11, 457, 294, 264, 917, 11, 51665, 51665, 309, 311, 512, 1333, 295, 4560, 420, 47387, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16123130258205717, "compression_ratio": 1.781512605042017, "no_speech_prob": 3.904844561475329e-06}, {"id": 200, "seek": 58676, "start": 592.92, "end": 598.64, "text": " so that it gets closer to the feature vector sequence,", "tokens": [50364, 407, 437, 321, 643, 281, 360, 586, 307, 1936, 50576, 50576, 1319, 264, 1349, 12379, 510, 257, 707, 857, 50672, 50672, 370, 300, 309, 2170, 4966, 281, 264, 4111, 8062, 8310, 11, 50958, 50958, 293, 550, 1319, 264, 4111, 8062, 8310, 51042, 51042, 370, 300, 309, 2170, 4966, 281, 264, 12379, 13, 51168, 51168, 509, 393, 519, 295, 341, 413, 51, 54, 4560, 11, 51354, 51354, 341, 8546, 565, 12, 1554, 3381, 4560, 11, 51418, 51418, 382, 257, 733, 295, 4560, 597, 11626, 4464, 2144, 51588, 51588, 365, 3104, 281, 257, 3100, 11, 457, 294, 264, 917, 11, 51665, 51665, 309, 311, 512, 1333, 295, 4560, 420, 47387, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16123130258205717, "compression_ratio": 1.781512605042017, "no_speech_prob": 3.904844561475329e-06}, {"id": 201, "seek": 58676, "start": 598.64, "end": 600.3199999999999, "text": " and then change the feature vector sequence", "tokens": [50364, 407, 437, 321, 643, 281, 360, 586, 307, 1936, 50576, 50576, 1319, 264, 1349, 12379, 510, 257, 707, 857, 50672, 50672, 370, 300, 309, 2170, 4966, 281, 264, 4111, 8062, 8310, 11, 50958, 50958, 293, 550, 1319, 264, 4111, 8062, 8310, 51042, 51042, 370, 300, 309, 2170, 4966, 281, 264, 12379, 13, 51168, 51168, 509, 393, 519, 295, 341, 413, 51, 54, 4560, 11, 51354, 51354, 341, 8546, 565, 12, 1554, 3381, 4560, 11, 51418, 51418, 382, 257, 733, 295, 4560, 597, 11626, 4464, 2144, 51588, 51588, 365, 3104, 281, 257, 3100, 11, 457, 294, 264, 917, 11, 51665, 51665, 309, 311, 512, 1333, 295, 4560, 420, 47387, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16123130258205717, "compression_ratio": 1.781512605042017, "no_speech_prob": 3.904844561475329e-06}, {"id": 202, "seek": 58676, "start": 600.3199999999999, "end": 602.84, "text": " so that it gets closer to the template.", "tokens": [50364, 407, 437, 321, 643, 281, 360, 586, 307, 1936, 50576, 50576, 1319, 264, 1349, 12379, 510, 257, 707, 857, 50672, 50672, 370, 300, 309, 2170, 4966, 281, 264, 4111, 8062, 8310, 11, 50958, 50958, 293, 550, 1319, 264, 4111, 8062, 8310, 51042, 51042, 370, 300, 309, 2170, 4966, 281, 264, 12379, 13, 51168, 51168, 509, 393, 519, 295, 341, 413, 51, 54, 4560, 11, 51354, 51354, 341, 8546, 565, 12, 1554, 3381, 4560, 11, 51418, 51418, 382, 257, 733, 295, 4560, 597, 11626, 4464, 2144, 51588, 51588, 365, 3104, 281, 257, 3100, 11, 457, 294, 264, 917, 11, 51665, 51665, 309, 311, 512, 1333, 295, 4560, 420, 47387, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16123130258205717, "compression_ratio": 1.781512605042017, "no_speech_prob": 3.904844561475329e-06}, {"id": 203, "seek": 58676, "start": 602.84, "end": 606.56, "text": " You can think of this DTW distance,", "tokens": [50364, 407, 437, 321, 643, 281, 360, 586, 307, 1936, 50576, 50576, 1319, 264, 1349, 12379, 510, 257, 707, 857, 50672, 50672, 370, 300, 309, 2170, 4966, 281, 264, 4111, 8062, 8310, 11, 50958, 50958, 293, 550, 1319, 264, 4111, 8062, 8310, 51042, 51042, 370, 300, 309, 2170, 4966, 281, 264, 12379, 13, 51168, 51168, 509, 393, 519, 295, 341, 413, 51, 54, 4560, 11, 51354, 51354, 341, 8546, 565, 12, 1554, 3381, 4560, 11, 51418, 51418, 382, 257, 733, 295, 4560, 597, 11626, 4464, 2144, 51588, 51588, 365, 3104, 281, 257, 3100, 11, 457, 294, 264, 917, 11, 51665, 51665, 309, 311, 512, 1333, 295, 4560, 420, 47387, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16123130258205717, "compression_ratio": 1.781512605042017, "no_speech_prob": 3.904844561475329e-06}, {"id": 204, "seek": 58676, "start": 606.56, "end": 607.84, "text": " this dynamic time-werping distance,", "tokens": [50364, 407, 437, 321, 643, 281, 360, 586, 307, 1936, 50576, 50576, 1319, 264, 1349, 12379, 510, 257, 707, 857, 50672, 50672, 370, 300, 309, 2170, 4966, 281, 264, 4111, 8062, 8310, 11, 50958, 50958, 293, 550, 1319, 264, 4111, 8062, 8310, 51042, 51042, 370, 300, 309, 2170, 4966, 281, 264, 12379, 13, 51168, 51168, 509, 393, 519, 295, 341, 413, 51, 54, 4560, 11, 51354, 51354, 341, 8546, 565, 12, 1554, 3381, 4560, 11, 51418, 51418, 382, 257, 733, 295, 4560, 597, 11626, 4464, 2144, 51588, 51588, 365, 3104, 281, 257, 3100, 11, 457, 294, 264, 917, 11, 51665, 51665, 309, 311, 512, 1333, 295, 4560, 420, 47387, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16123130258205717, "compression_ratio": 1.781512605042017, "no_speech_prob": 3.904844561475329e-06}, {"id": 205, "seek": 58676, "start": 607.84, "end": 611.24, "text": " as a kind of distance which involves minimization", "tokens": [50364, 407, 437, 321, 643, 281, 360, 586, 307, 1936, 50576, 50576, 1319, 264, 1349, 12379, 510, 257, 707, 857, 50672, 50672, 370, 300, 309, 2170, 4966, 281, 264, 4111, 8062, 8310, 11, 50958, 50958, 293, 550, 1319, 264, 4111, 8062, 8310, 51042, 51042, 370, 300, 309, 2170, 4966, 281, 264, 12379, 13, 51168, 51168, 509, 393, 519, 295, 341, 413, 51, 54, 4560, 11, 51354, 51354, 341, 8546, 565, 12, 1554, 3381, 4560, 11, 51418, 51418, 382, 257, 733, 295, 4560, 597, 11626, 4464, 2144, 51588, 51588, 365, 3104, 281, 257, 3100, 11, 457, 294, 264, 917, 11, 51665, 51665, 309, 311, 512, 1333, 295, 4560, 420, 47387, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16123130258205717, "compression_ratio": 1.781512605042017, "no_speech_prob": 3.904844561475329e-06}, {"id": 206, "seek": 58676, "start": 611.24, "end": 612.78, "text": " with respect to a path, but in the end,", "tokens": [50364, 407, 437, 321, 643, 281, 360, 586, 307, 1936, 50576, 50576, 1319, 264, 1349, 12379, 510, 257, 707, 857, 50672, 50672, 370, 300, 309, 2170, 4966, 281, 264, 4111, 8062, 8310, 11, 50958, 50958, 293, 550, 1319, 264, 4111, 8062, 8310, 51042, 51042, 370, 300, 309, 2170, 4966, 281, 264, 12379, 13, 51168, 51168, 509, 393, 519, 295, 341, 413, 51, 54, 4560, 11, 51354, 51354, 341, 8546, 565, 12, 1554, 3381, 4560, 11, 51418, 51418, 382, 257, 733, 295, 4560, 597, 11626, 4464, 2144, 51588, 51588, 365, 3104, 281, 257, 3100, 11, 457, 294, 264, 917, 11, 51665, 51665, 309, 311, 512, 1333, 295, 4560, 420, 47387, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16123130258205717, "compression_ratio": 1.781512605042017, "no_speech_prob": 3.904844561475329e-06}, {"id": 207, "seek": 58676, "start": 612.78, "end": 615.88, "text": " it's some sort of distance or divergence.", "tokens": [50364, 407, 437, 321, 643, 281, 360, 586, 307, 1936, 50576, 50576, 1319, 264, 1349, 12379, 510, 257, 707, 857, 50672, 50672, 370, 300, 309, 2170, 4966, 281, 264, 4111, 8062, 8310, 11, 50958, 50958, 293, 550, 1319, 264, 4111, 8062, 8310, 51042, 51042, 370, 300, 309, 2170, 4966, 281, 264, 12379, 13, 51168, 51168, 509, 393, 519, 295, 341, 413, 51, 54, 4560, 11, 51354, 51354, 341, 8546, 565, 12, 1554, 3381, 4560, 11, 51418, 51418, 382, 257, 733, 295, 4560, 597, 11626, 4464, 2144, 51588, 51588, 365, 3104, 281, 257, 3100, 11, 457, 294, 264, 917, 11, 51665, 51665, 309, 311, 512, 1333, 295, 4560, 420, 47387, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16123130258205717, "compression_ratio": 1.781512605042017, "no_speech_prob": 3.904844561475329e-06}, {"id": 208, "seek": 61588, "start": 615.88, "end": 618.6, "text": " And what you need to do is, and that's basically your energy,", "tokens": [50364, 400, 437, 291, 643, 281, 360, 307, 11, 293, 300, 311, 1936, 428, 2281, 11, 50500, 50500, 370, 437, 291, 643, 281, 360, 307, 652, 300, 4560, 4356, 50606, 50606, 337, 264, 3006, 1867, 13, 50688, 50688, 407, 264, 2281, 295, 264, 3006, 1867, 1709, 760, 13, 50844, 50844, 400, 16561, 11, 291, 643, 281, 652, 50928, 50928, 988, 264, 2281, 295, 439, 264, 18424, 6338, 366, 4833, 13, 51148, 51148, 407, 291, 1062, 643, 281, 2944, 552, 1314, 13, 51242, 51242, 407, 291, 1062, 643, 281, 362, 364, 10024, 2445, 300, 51360, 51360, 307, 516, 281, 747, 264, 21165, 337, 264, 2085, 2283, 51538, 51538, 293, 6063, 2944, 552, 1314, 490, 264, 2190, 8310, 51666, 51666, 295, 4122, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0948933555233863, "compression_ratio": 1.9596774193548387, "no_speech_prob": 9.22245453693904e-06}, {"id": 209, "seek": 61588, "start": 618.6, "end": 620.72, "text": " so what you need to do is make that distance smaller", "tokens": [50364, 400, 437, 291, 643, 281, 360, 307, 11, 293, 300, 311, 1936, 428, 2281, 11, 50500, 50500, 370, 437, 291, 643, 281, 360, 307, 652, 300, 4560, 4356, 50606, 50606, 337, 264, 3006, 1867, 13, 50688, 50688, 407, 264, 2281, 295, 264, 3006, 1867, 1709, 760, 13, 50844, 50844, 400, 16561, 11, 291, 643, 281, 652, 50928, 50928, 988, 264, 2281, 295, 439, 264, 18424, 6338, 366, 4833, 13, 51148, 51148, 407, 291, 1062, 643, 281, 2944, 552, 1314, 13, 51242, 51242, 407, 291, 1062, 643, 281, 362, 364, 10024, 2445, 300, 51360, 51360, 307, 516, 281, 747, 264, 21165, 337, 264, 2085, 2283, 51538, 51538, 293, 6063, 2944, 552, 1314, 490, 264, 2190, 8310, 51666, 51666, 295, 4122, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0948933555233863, "compression_ratio": 1.9596774193548387, "no_speech_prob": 9.22245453693904e-06}, {"id": 210, "seek": 61588, "start": 620.72, "end": 622.36, "text": " for the correct answer.", "tokens": [50364, 400, 437, 291, 643, 281, 360, 307, 11, 293, 300, 311, 1936, 428, 2281, 11, 50500, 50500, 370, 437, 291, 643, 281, 360, 307, 652, 300, 4560, 4356, 50606, 50606, 337, 264, 3006, 1867, 13, 50688, 50688, 407, 264, 2281, 295, 264, 3006, 1867, 1709, 760, 13, 50844, 50844, 400, 16561, 11, 291, 643, 281, 652, 50928, 50928, 988, 264, 2281, 295, 439, 264, 18424, 6338, 366, 4833, 13, 51148, 51148, 407, 291, 1062, 643, 281, 2944, 552, 1314, 13, 51242, 51242, 407, 291, 1062, 643, 281, 362, 364, 10024, 2445, 300, 51360, 51360, 307, 516, 281, 747, 264, 21165, 337, 264, 2085, 2283, 51538, 51538, 293, 6063, 2944, 552, 1314, 490, 264, 2190, 8310, 51666, 51666, 295, 4122, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0948933555233863, "compression_ratio": 1.9596774193548387, "no_speech_prob": 9.22245453693904e-06}, {"id": 211, "seek": 61588, "start": 622.36, "end": 625.48, "text": " So the energy of the correct answer goes down.", "tokens": [50364, 400, 437, 291, 643, 281, 360, 307, 11, 293, 300, 311, 1936, 428, 2281, 11, 50500, 50500, 370, 437, 291, 643, 281, 360, 307, 652, 300, 4560, 4356, 50606, 50606, 337, 264, 3006, 1867, 13, 50688, 50688, 407, 264, 2281, 295, 264, 3006, 1867, 1709, 760, 13, 50844, 50844, 400, 16561, 11, 291, 643, 281, 652, 50928, 50928, 988, 264, 2281, 295, 439, 264, 18424, 6338, 366, 4833, 13, 51148, 51148, 407, 291, 1062, 643, 281, 2944, 552, 1314, 13, 51242, 51242, 407, 291, 1062, 643, 281, 362, 364, 10024, 2445, 300, 51360, 51360, 307, 516, 281, 747, 264, 21165, 337, 264, 2085, 2283, 51538, 51538, 293, 6063, 2944, 552, 1314, 490, 264, 2190, 8310, 51666, 51666, 295, 4122, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0948933555233863, "compression_ratio": 1.9596774193548387, "no_speech_prob": 9.22245453693904e-06}, {"id": 212, "seek": 61588, "start": 625.48, "end": 627.16, "text": " And simultaneously, you need to make", "tokens": [50364, 400, 437, 291, 643, 281, 360, 307, 11, 293, 300, 311, 1936, 428, 2281, 11, 50500, 50500, 370, 437, 291, 643, 281, 360, 307, 652, 300, 4560, 4356, 50606, 50606, 337, 264, 3006, 1867, 13, 50688, 50688, 407, 264, 2281, 295, 264, 3006, 1867, 1709, 760, 13, 50844, 50844, 400, 16561, 11, 291, 643, 281, 652, 50928, 50928, 988, 264, 2281, 295, 439, 264, 18424, 6338, 366, 4833, 13, 51148, 51148, 407, 291, 1062, 643, 281, 2944, 552, 1314, 13, 51242, 51242, 407, 291, 1062, 643, 281, 362, 364, 10024, 2445, 300, 51360, 51360, 307, 516, 281, 747, 264, 21165, 337, 264, 2085, 2283, 51538, 51538, 293, 6063, 2944, 552, 1314, 490, 264, 2190, 8310, 51666, 51666, 295, 4122, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0948933555233863, "compression_ratio": 1.9596774193548387, "no_speech_prob": 9.22245453693904e-06}, {"id": 213, "seek": 61588, "start": 627.16, "end": 631.56, "text": " sure the energy of all the incorrect answers are larger.", "tokens": [50364, 400, 437, 291, 643, 281, 360, 307, 11, 293, 300, 311, 1936, 428, 2281, 11, 50500, 50500, 370, 437, 291, 643, 281, 360, 307, 652, 300, 4560, 4356, 50606, 50606, 337, 264, 3006, 1867, 13, 50688, 50688, 407, 264, 2281, 295, 264, 3006, 1867, 1709, 760, 13, 50844, 50844, 400, 16561, 11, 291, 643, 281, 652, 50928, 50928, 988, 264, 2281, 295, 439, 264, 18424, 6338, 366, 4833, 13, 51148, 51148, 407, 291, 1062, 643, 281, 2944, 552, 1314, 13, 51242, 51242, 407, 291, 1062, 643, 281, 362, 364, 10024, 2445, 300, 51360, 51360, 307, 516, 281, 747, 264, 21165, 337, 264, 2085, 2283, 51538, 51538, 293, 6063, 2944, 552, 1314, 490, 264, 2190, 8310, 51666, 51666, 295, 4122, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0948933555233863, "compression_ratio": 1.9596774193548387, "no_speech_prob": 9.22245453693904e-06}, {"id": 214, "seek": 61588, "start": 631.56, "end": 633.4399999999999, "text": " So you might need to push them away.", "tokens": [50364, 400, 437, 291, 643, 281, 360, 307, 11, 293, 300, 311, 1936, 428, 2281, 11, 50500, 50500, 370, 437, 291, 643, 281, 360, 307, 652, 300, 4560, 4356, 50606, 50606, 337, 264, 3006, 1867, 13, 50688, 50688, 407, 264, 2281, 295, 264, 3006, 1867, 1709, 760, 13, 50844, 50844, 400, 16561, 11, 291, 643, 281, 652, 50928, 50928, 988, 264, 2281, 295, 439, 264, 18424, 6338, 366, 4833, 13, 51148, 51148, 407, 291, 1062, 643, 281, 2944, 552, 1314, 13, 51242, 51242, 407, 291, 1062, 643, 281, 362, 364, 10024, 2445, 300, 51360, 51360, 307, 516, 281, 747, 264, 21165, 337, 264, 2085, 2283, 51538, 51538, 293, 6063, 2944, 552, 1314, 490, 264, 2190, 8310, 51666, 51666, 295, 4122, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0948933555233863, "compression_ratio": 1.9596774193548387, "no_speech_prob": 9.22245453693904e-06}, {"id": 215, "seek": 61588, "start": 633.4399999999999, "end": 635.8, "text": " So you might need to have an objective function that", "tokens": [50364, 400, 437, 291, 643, 281, 360, 307, 11, 293, 300, 311, 1936, 428, 2281, 11, 50500, 50500, 370, 437, 291, 643, 281, 360, 307, 652, 300, 4560, 4356, 50606, 50606, 337, 264, 3006, 1867, 13, 50688, 50688, 407, 264, 2281, 295, 264, 3006, 1867, 1709, 760, 13, 50844, 50844, 400, 16561, 11, 291, 643, 281, 652, 50928, 50928, 988, 264, 2281, 295, 439, 264, 18424, 6338, 366, 4833, 13, 51148, 51148, 407, 291, 1062, 643, 281, 2944, 552, 1314, 13, 51242, 51242, 407, 291, 1062, 643, 281, 362, 364, 10024, 2445, 300, 51360, 51360, 307, 516, 281, 747, 264, 21165, 337, 264, 2085, 2283, 51538, 51538, 293, 6063, 2944, 552, 1314, 490, 264, 2190, 8310, 51666, 51666, 295, 4122, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0948933555233863, "compression_ratio": 1.9596774193548387, "no_speech_prob": 9.22245453693904e-06}, {"id": 216, "seek": 61588, "start": 635.8, "end": 639.36, "text": " is going to take the templates for the wrong words", "tokens": [50364, 400, 437, 291, 643, 281, 360, 307, 11, 293, 300, 311, 1936, 428, 2281, 11, 50500, 50500, 370, 437, 291, 643, 281, 360, 307, 652, 300, 4560, 4356, 50606, 50606, 337, 264, 3006, 1867, 13, 50688, 50688, 407, 264, 2281, 295, 264, 3006, 1867, 1709, 760, 13, 50844, 50844, 400, 16561, 11, 291, 643, 281, 652, 50928, 50928, 988, 264, 2281, 295, 439, 264, 18424, 6338, 366, 4833, 13, 51148, 51148, 407, 291, 1062, 643, 281, 2944, 552, 1314, 13, 51242, 51242, 407, 291, 1062, 643, 281, 362, 364, 10024, 2445, 300, 51360, 51360, 307, 516, 281, 747, 264, 21165, 337, 264, 2085, 2283, 51538, 51538, 293, 6063, 2944, 552, 1314, 490, 264, 2190, 8310, 51666, 51666, 295, 4122, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0948933555233863, "compression_ratio": 1.9596774193548387, "no_speech_prob": 9.22245453693904e-06}, {"id": 217, "seek": 61588, "start": 639.36, "end": 641.92, "text": " and somehow push them away from the current sequence", "tokens": [50364, 400, 437, 291, 643, 281, 360, 307, 11, 293, 300, 311, 1936, 428, 2281, 11, 50500, 50500, 370, 437, 291, 643, 281, 360, 307, 652, 300, 4560, 4356, 50606, 50606, 337, 264, 3006, 1867, 13, 50688, 50688, 407, 264, 2281, 295, 264, 3006, 1867, 1709, 760, 13, 50844, 50844, 400, 16561, 11, 291, 643, 281, 652, 50928, 50928, 988, 264, 2281, 295, 439, 264, 18424, 6338, 366, 4833, 13, 51148, 51148, 407, 291, 1062, 643, 281, 2944, 552, 1314, 13, 51242, 51242, 407, 291, 1062, 643, 281, 362, 364, 10024, 2445, 300, 51360, 51360, 307, 516, 281, 747, 264, 21165, 337, 264, 2085, 2283, 51538, 51538, 293, 6063, 2944, 552, 1314, 490, 264, 2190, 8310, 51666, 51666, 295, 4122, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0948933555233863, "compression_ratio": 1.9596774193548387, "no_speech_prob": 9.22245453693904e-06}, {"id": 218, "seek": 61588, "start": 641.92, "end": 644.64, "text": " of features.", "tokens": [50364, 400, 437, 291, 643, 281, 360, 307, 11, 293, 300, 311, 1936, 428, 2281, 11, 50500, 50500, 370, 437, 291, 643, 281, 360, 307, 652, 300, 4560, 4356, 50606, 50606, 337, 264, 3006, 1867, 13, 50688, 50688, 407, 264, 2281, 295, 264, 3006, 1867, 1709, 760, 13, 50844, 50844, 400, 16561, 11, 291, 643, 281, 652, 50928, 50928, 988, 264, 2281, 295, 439, 264, 18424, 6338, 366, 4833, 13, 51148, 51148, 407, 291, 1062, 643, 281, 2944, 552, 1314, 13, 51242, 51242, 407, 291, 1062, 643, 281, 362, 364, 10024, 2445, 300, 51360, 51360, 307, 516, 281, 747, 264, 21165, 337, 264, 2085, 2283, 51538, 51538, 293, 6063, 2944, 552, 1314, 490, 264, 2190, 8310, 51666, 51666, 295, 4122, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0948933555233863, "compression_ratio": 1.9596774193548387, "no_speech_prob": 9.22245453693904e-06}, {"id": 219, "seek": 64464, "start": 644.64, "end": 648.16, "text": " So that's how you learn the templates.", "tokens": [50364, 407, 300, 311, 577, 291, 1466, 264, 21165, 13, 50540, 50540, 400, 550, 16561, 11, 291, 434, 516, 50774, 50774, 281, 362, 257, 6562, 295, 2771, 2448, 50886, 50886, 300, 366, 516, 281, 646, 48256, 807, 341, 413, 51, 54, 13, 50998, 50998, 1485, 307, 516, 281, 853, 281, 652, 300, 8310, 293, 4111, 8062, 51276, 51276, 1270, 300, 1564, 291, 352, 264, 565, 12, 1554, 3381, 11, 51390, 51390, 309, 2170, 4966, 281, 264, 3006, 1349, 12379, 11, 51530, 51530, 457, 611, 1319, 309, 370, 300, 309, 2170, 1314, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15811092295545212, "compression_ratio": 1.5963302752293578, "no_speech_prob": 9.97078950604191e-06}, {"id": 220, "seek": 64464, "start": 648.16, "end": 652.84, "text": " And then simultaneously, you're going", "tokens": [50364, 407, 300, 311, 577, 291, 1466, 264, 21165, 13, 50540, 50540, 400, 550, 16561, 11, 291, 434, 516, 50774, 50774, 281, 362, 257, 6562, 295, 2771, 2448, 50886, 50886, 300, 366, 516, 281, 646, 48256, 807, 341, 413, 51, 54, 13, 50998, 50998, 1485, 307, 516, 281, 853, 281, 652, 300, 8310, 293, 4111, 8062, 51276, 51276, 1270, 300, 1564, 291, 352, 264, 565, 12, 1554, 3381, 11, 51390, 51390, 309, 2170, 4966, 281, 264, 3006, 1349, 12379, 11, 51530, 51530, 457, 611, 1319, 309, 370, 300, 309, 2170, 1314, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15811092295545212, "compression_ratio": 1.5963302752293578, "no_speech_prob": 9.97078950604191e-06}, {"id": 221, "seek": 64464, "start": 652.84, "end": 655.08, "text": " to have a combination of gradients", "tokens": [50364, 407, 300, 311, 577, 291, 1466, 264, 21165, 13, 50540, 50540, 400, 550, 16561, 11, 291, 434, 516, 50774, 50774, 281, 362, 257, 6562, 295, 2771, 2448, 50886, 50886, 300, 366, 516, 281, 646, 48256, 807, 341, 413, 51, 54, 13, 50998, 50998, 1485, 307, 516, 281, 853, 281, 652, 300, 8310, 293, 4111, 8062, 51276, 51276, 1270, 300, 1564, 291, 352, 264, 565, 12, 1554, 3381, 11, 51390, 51390, 309, 2170, 4966, 281, 264, 3006, 1349, 12379, 11, 51530, 51530, 457, 611, 1319, 309, 370, 300, 309, 2170, 1314, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15811092295545212, "compression_ratio": 1.5963302752293578, "no_speech_prob": 9.97078950604191e-06}, {"id": 222, "seek": 64464, "start": 655.08, "end": 657.3199999999999, "text": " that are going to back propagate through this DTW.", "tokens": [50364, 407, 300, 311, 577, 291, 1466, 264, 21165, 13, 50540, 50540, 400, 550, 16561, 11, 291, 434, 516, 50774, 50774, 281, 362, 257, 6562, 295, 2771, 2448, 50886, 50886, 300, 366, 516, 281, 646, 48256, 807, 341, 413, 51, 54, 13, 50998, 50998, 1485, 307, 516, 281, 853, 281, 652, 300, 8310, 293, 4111, 8062, 51276, 51276, 1270, 300, 1564, 291, 352, 264, 565, 12, 1554, 3381, 11, 51390, 51390, 309, 2170, 4966, 281, 264, 3006, 1349, 12379, 11, 51530, 51530, 457, 611, 1319, 309, 370, 300, 309, 2170, 1314, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15811092295545212, "compression_ratio": 1.5963302752293578, "no_speech_prob": 9.97078950604191e-06}, {"id": 223, "seek": 64464, "start": 657.3199999999999, "end": 662.88, "text": " One is going to try to make that sequence and feature vector", "tokens": [50364, 407, 300, 311, 577, 291, 1466, 264, 21165, 13, 50540, 50540, 400, 550, 16561, 11, 291, 434, 516, 50774, 50774, 281, 362, 257, 6562, 295, 2771, 2448, 50886, 50886, 300, 366, 516, 281, 646, 48256, 807, 341, 413, 51, 54, 13, 50998, 50998, 1485, 307, 516, 281, 853, 281, 652, 300, 8310, 293, 4111, 8062, 51276, 51276, 1270, 300, 1564, 291, 352, 264, 565, 12, 1554, 3381, 11, 51390, 51390, 309, 2170, 4966, 281, 264, 3006, 1349, 12379, 11, 51530, 51530, 457, 611, 1319, 309, 370, 300, 309, 2170, 1314, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15811092295545212, "compression_ratio": 1.5963302752293578, "no_speech_prob": 9.97078950604191e-06}, {"id": 224, "seek": 64464, "start": 662.88, "end": 665.16, "text": " such that once you go the time-werping,", "tokens": [50364, 407, 300, 311, 577, 291, 1466, 264, 21165, 13, 50540, 50540, 400, 550, 16561, 11, 291, 434, 516, 50774, 50774, 281, 362, 257, 6562, 295, 2771, 2448, 50886, 50886, 300, 366, 516, 281, 646, 48256, 807, 341, 413, 51, 54, 13, 50998, 50998, 1485, 307, 516, 281, 853, 281, 652, 300, 8310, 293, 4111, 8062, 51276, 51276, 1270, 300, 1564, 291, 352, 264, 565, 12, 1554, 3381, 11, 51390, 51390, 309, 2170, 4966, 281, 264, 3006, 1349, 12379, 11, 51530, 51530, 457, 611, 1319, 309, 370, 300, 309, 2170, 1314, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15811092295545212, "compression_ratio": 1.5963302752293578, "no_speech_prob": 9.97078950604191e-06}, {"id": 225, "seek": 64464, "start": 665.16, "end": 667.96, "text": " it gets closer to the correct word template,", "tokens": [50364, 407, 300, 311, 577, 291, 1466, 264, 21165, 13, 50540, 50540, 400, 550, 16561, 11, 291, 434, 516, 50774, 50774, 281, 362, 257, 6562, 295, 2771, 2448, 50886, 50886, 300, 366, 516, 281, 646, 48256, 807, 341, 413, 51, 54, 13, 50998, 50998, 1485, 307, 516, 281, 853, 281, 652, 300, 8310, 293, 4111, 8062, 51276, 51276, 1270, 300, 1564, 291, 352, 264, 565, 12, 1554, 3381, 11, 51390, 51390, 309, 2170, 4966, 281, 264, 3006, 1349, 12379, 11, 51530, 51530, 457, 611, 1319, 309, 370, 300, 309, 2170, 1314, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15811092295545212, "compression_ratio": 1.5963302752293578, "no_speech_prob": 9.97078950604191e-06}, {"id": 226, "seek": 64464, "start": 667.96, "end": 672.72, "text": " but also change it so that it gets away", "tokens": [50364, 407, 300, 311, 577, 291, 1466, 264, 21165, 13, 50540, 50540, 400, 550, 16561, 11, 291, 434, 516, 50774, 50774, 281, 362, 257, 6562, 295, 2771, 2448, 50886, 50886, 300, 366, 516, 281, 646, 48256, 807, 341, 413, 51, 54, 13, 50998, 50998, 1485, 307, 516, 281, 853, 281, 652, 300, 8310, 293, 4111, 8062, 51276, 51276, 1270, 300, 1564, 291, 352, 264, 565, 12, 1554, 3381, 11, 51390, 51390, 309, 2170, 4966, 281, 264, 3006, 1349, 12379, 11, 51530, 51530, 457, 611, 1319, 309, 370, 300, 309, 2170, 1314, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15811092295545212, "compression_ratio": 1.5963302752293578, "no_speech_prob": 9.97078950604191e-06}, {"id": 227, "seek": 67272, "start": 672.72, "end": 675.44, "text": " from the other templates, the templates", "tokens": [50364, 490, 264, 661, 21165, 11, 264, 21165, 50500, 50500, 337, 264, 661, 10479, 13, 50670, 50670, 407, 300, 307, 2935, 646, 12425, 990, 50792, 50792, 807, 264, 8546, 565, 12, 1554, 3381, 13, 50966, 50966, 400, 264, 8546, 565, 12, 1554, 3381, 534, 307, 257, 3679, 13, 51066, 51066, 467, 311, 257, 7410, 3679, 13, 51140, 51140, 467, 1936, 5112, 291, 729, 4190, 510, 2051, 264, 3100, 51366, 51366, 1871, 570, 436, 366, 264, 2306, 300, 51492, 51492, 13330, 1968, 452, 4846, 8062, 10676, 452, 12379, 8062, 13, 51712, 51712, 1057, 264, 661, 2306, 300, 452, 3100, 307, 406, 1940, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10012922837184025, "compression_ratio": 1.7920353982300885, "no_speech_prob": 1.1299333891656715e-05}, {"id": 228, "seek": 67272, "start": 675.44, "end": 678.84, "text": " for the other categories.", "tokens": [50364, 490, 264, 661, 21165, 11, 264, 21165, 50500, 50500, 337, 264, 661, 10479, 13, 50670, 50670, 407, 300, 307, 2935, 646, 12425, 990, 50792, 50792, 807, 264, 8546, 565, 12, 1554, 3381, 13, 50966, 50966, 400, 264, 8546, 565, 12, 1554, 3381, 534, 307, 257, 3679, 13, 51066, 51066, 467, 311, 257, 7410, 3679, 13, 51140, 51140, 467, 1936, 5112, 291, 729, 4190, 510, 2051, 264, 3100, 51366, 51366, 1871, 570, 436, 366, 264, 2306, 300, 51492, 51492, 13330, 1968, 452, 4846, 8062, 10676, 452, 12379, 8062, 13, 51712, 51712, 1057, 264, 661, 2306, 300, 452, 3100, 307, 406, 1940, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10012922837184025, "compression_ratio": 1.7920353982300885, "no_speech_prob": 1.1299333891656715e-05}, {"id": 229, "seek": 67272, "start": 678.84, "end": 681.28, "text": " So that is simply back propagating", "tokens": [50364, 490, 264, 661, 21165, 11, 264, 21165, 50500, 50500, 337, 264, 661, 10479, 13, 50670, 50670, 407, 300, 307, 2935, 646, 12425, 990, 50792, 50792, 807, 264, 8546, 565, 12, 1554, 3381, 13, 50966, 50966, 400, 264, 8546, 565, 12, 1554, 3381, 534, 307, 257, 3679, 13, 51066, 51066, 467, 311, 257, 7410, 3679, 13, 51140, 51140, 467, 1936, 5112, 291, 729, 4190, 510, 2051, 264, 3100, 51366, 51366, 1871, 570, 436, 366, 264, 2306, 300, 51492, 51492, 13330, 1968, 452, 4846, 8062, 10676, 452, 12379, 8062, 13, 51712, 51712, 1057, 264, 661, 2306, 300, 452, 3100, 307, 406, 1940, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10012922837184025, "compression_ratio": 1.7920353982300885, "no_speech_prob": 1.1299333891656715e-05}, {"id": 230, "seek": 67272, "start": 681.28, "end": 684.76, "text": " through the dynamic time-werping.", "tokens": [50364, 490, 264, 661, 21165, 11, 264, 21165, 50500, 50500, 337, 264, 661, 10479, 13, 50670, 50670, 407, 300, 307, 2935, 646, 12425, 990, 50792, 50792, 807, 264, 8546, 565, 12, 1554, 3381, 13, 50966, 50966, 400, 264, 8546, 565, 12, 1554, 3381, 534, 307, 257, 3679, 13, 51066, 51066, 467, 311, 257, 7410, 3679, 13, 51140, 51140, 467, 1936, 5112, 291, 729, 4190, 510, 2051, 264, 3100, 51366, 51366, 1871, 570, 436, 366, 264, 2306, 300, 51492, 51492, 13330, 1968, 452, 4846, 8062, 10676, 452, 12379, 8062, 13, 51712, 51712, 1057, 264, 661, 2306, 300, 452, 3100, 307, 406, 1940, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10012922837184025, "compression_ratio": 1.7920353982300885, "no_speech_prob": 1.1299333891656715e-05}, {"id": 231, "seek": 67272, "start": 684.76, "end": 686.76, "text": " And the dynamic time-werping really is a switch.", "tokens": [50364, 490, 264, 661, 21165, 11, 264, 21165, 50500, 50500, 337, 264, 661, 10479, 13, 50670, 50670, 407, 300, 307, 2935, 646, 12425, 990, 50792, 50792, 807, 264, 8546, 565, 12, 1554, 3381, 13, 50966, 50966, 400, 264, 8546, 565, 12, 1554, 3381, 534, 307, 257, 3679, 13, 51066, 51066, 467, 311, 257, 7410, 3679, 13, 51140, 51140, 467, 1936, 5112, 291, 729, 4190, 510, 2051, 264, 3100, 51366, 51366, 1871, 570, 436, 366, 264, 2306, 300, 51492, 51492, 13330, 1968, 452, 4846, 8062, 10676, 452, 12379, 8062, 13, 51712, 51712, 1057, 264, 661, 2306, 300, 452, 3100, 307, 406, 1940, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10012922837184025, "compression_ratio": 1.7920353982300885, "no_speech_prob": 1.1299333891656715e-05}, {"id": 232, "seek": 67272, "start": 686.76, "end": 688.24, "text": " It's a giant switch.", "tokens": [50364, 490, 264, 661, 21165, 11, 264, 21165, 50500, 50500, 337, 264, 661, 10479, 13, 50670, 50670, 407, 300, 307, 2935, 646, 12425, 990, 50792, 50792, 807, 264, 8546, 565, 12, 1554, 3381, 13, 50966, 50966, 400, 264, 8546, 565, 12, 1554, 3381, 534, 307, 257, 3679, 13, 51066, 51066, 467, 311, 257, 7410, 3679, 13, 51140, 51140, 467, 1936, 5112, 291, 729, 4190, 510, 2051, 264, 3100, 51366, 51366, 1871, 570, 436, 366, 264, 2306, 300, 51492, 51492, 13330, 1968, 452, 4846, 8062, 10676, 452, 12379, 8062, 13, 51712, 51712, 1057, 264, 661, 2306, 300, 452, 3100, 307, 406, 1940, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10012922837184025, "compression_ratio": 1.7920353982300885, "no_speech_prob": 1.1299333891656715e-05}, {"id": 233, "seek": 67272, "start": 688.24, "end": 692.76, "text": " It basically tells you those values here along the path", "tokens": [50364, 490, 264, 661, 21165, 11, 264, 21165, 50500, 50500, 337, 264, 661, 10479, 13, 50670, 50670, 407, 300, 307, 2935, 646, 12425, 990, 50792, 50792, 807, 264, 8546, 565, 12, 1554, 3381, 13, 50966, 50966, 400, 264, 8546, 565, 12, 1554, 3381, 534, 307, 257, 3679, 13, 51066, 51066, 467, 311, 257, 7410, 3679, 13, 51140, 51140, 467, 1936, 5112, 291, 729, 4190, 510, 2051, 264, 3100, 51366, 51366, 1871, 570, 436, 366, 264, 2306, 300, 51492, 51492, 13330, 1968, 452, 4846, 8062, 10676, 452, 12379, 8062, 13, 51712, 51712, 1057, 264, 661, 2306, 300, 452, 3100, 307, 406, 1940, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10012922837184025, "compression_ratio": 1.7920353982300885, "no_speech_prob": 1.1299333891656715e-05}, {"id": 234, "seek": 67272, "start": 692.76, "end": 695.28, "text": " matter because they are the ones that", "tokens": [50364, 490, 264, 661, 21165, 11, 264, 21165, 50500, 50500, 337, 264, 661, 10479, 13, 50670, 50670, 407, 300, 307, 2935, 646, 12425, 990, 50792, 50792, 807, 264, 8546, 565, 12, 1554, 3381, 13, 50966, 50966, 400, 264, 8546, 565, 12, 1554, 3381, 534, 307, 257, 3679, 13, 51066, 51066, 467, 311, 257, 7410, 3679, 13, 51140, 51140, 467, 1936, 5112, 291, 729, 4190, 510, 2051, 264, 3100, 51366, 51366, 1871, 570, 436, 366, 264, 2306, 300, 51492, 51492, 13330, 1968, 452, 4846, 8062, 10676, 452, 12379, 8062, 13, 51712, 51712, 1057, 264, 661, 2306, 300, 452, 3100, 307, 406, 1940, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10012922837184025, "compression_ratio": 1.7920353982300885, "no_speech_prob": 1.1299333891656715e-05}, {"id": 235, "seek": 67272, "start": 695.28, "end": 699.6800000000001, "text": " indicate whether my input vector matches my template vector.", "tokens": [50364, 490, 264, 661, 21165, 11, 264, 21165, 50500, 50500, 337, 264, 661, 10479, 13, 50670, 50670, 407, 300, 307, 2935, 646, 12425, 990, 50792, 50792, 807, 264, 8546, 565, 12, 1554, 3381, 13, 50966, 50966, 400, 264, 8546, 565, 12, 1554, 3381, 534, 307, 257, 3679, 13, 51066, 51066, 467, 311, 257, 7410, 3679, 13, 51140, 51140, 467, 1936, 5112, 291, 729, 4190, 510, 2051, 264, 3100, 51366, 51366, 1871, 570, 436, 366, 264, 2306, 300, 51492, 51492, 13330, 1968, 452, 4846, 8062, 10676, 452, 12379, 8062, 13, 51712, 51712, 1057, 264, 661, 2306, 300, 452, 3100, 307, 406, 1940, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10012922837184025, "compression_ratio": 1.7920353982300885, "no_speech_prob": 1.1299333891656715e-05}, {"id": 236, "seek": 67272, "start": 699.6800000000001, "end": 702.32, "text": " All the other ones that my path is not taking", "tokens": [50364, 490, 264, 661, 21165, 11, 264, 21165, 50500, 50500, 337, 264, 661, 10479, 13, 50670, 50670, 407, 300, 307, 2935, 646, 12425, 990, 50792, 50792, 807, 264, 8546, 565, 12, 1554, 3381, 13, 50966, 50966, 400, 264, 8546, 565, 12, 1554, 3381, 534, 307, 257, 3679, 13, 51066, 51066, 467, 311, 257, 7410, 3679, 13, 51140, 51140, 467, 1936, 5112, 291, 729, 4190, 510, 2051, 264, 3100, 51366, 51366, 1871, 570, 436, 366, 264, 2306, 300, 51492, 51492, 13330, 1968, 452, 4846, 8062, 10676, 452, 12379, 8062, 13, 51712, 51712, 1057, 264, 661, 2306, 300, 452, 3100, 307, 406, 1940, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10012922837184025, "compression_ratio": 1.7920353982300885, "no_speech_prob": 1.1299333891656715e-05}, {"id": 237, "seek": 70232, "start": 702.32, "end": 703.0, "text": " are irrelevant.", "tokens": [50364, 366, 28682, 13, 50398, 50398, 814, 500, 380, 1871, 13, 50478, 50478, 407, 264, 4560, 307, 445, 264, 2408, 295, 729, 4190, 13, 50604, 50604, 407, 562, 286, 646, 48256, 11, 286, 445, 483, 11, 337, 1184, 8062, 510, 11, 50812, 50812, 257, 16235, 300, 23249, 281, 264, 16235, 295, 1936, 51070, 51070, 264, 4560, 281, 264, 11760, 8062, 51258, 51258, 294, 264, 12379, 13, 51396, 51396, 407, 337, 264, 3006, 12379, 11, 341, 51530, 51530, 307, 516, 281, 3082, 439, 729, 18875, 51618, 51618, 281, 483, 4966, 281, 264, 11760, 8062, 51696, 51696, 294, 264, 12379, 293, 439, 729, 18875, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13786602020263672, "compression_ratio": 1.9521531100478469, "no_speech_prob": 8.664361303090118e-06}, {"id": 238, "seek": 70232, "start": 703.0, "end": 704.6, "text": " They don't matter.", "tokens": [50364, 366, 28682, 13, 50398, 50398, 814, 500, 380, 1871, 13, 50478, 50478, 407, 264, 4560, 307, 445, 264, 2408, 295, 729, 4190, 13, 50604, 50604, 407, 562, 286, 646, 48256, 11, 286, 445, 483, 11, 337, 1184, 8062, 510, 11, 50812, 50812, 257, 16235, 300, 23249, 281, 264, 16235, 295, 1936, 51070, 51070, 264, 4560, 281, 264, 11760, 8062, 51258, 51258, 294, 264, 12379, 13, 51396, 51396, 407, 337, 264, 3006, 12379, 11, 341, 51530, 51530, 307, 516, 281, 3082, 439, 729, 18875, 51618, 51618, 281, 483, 4966, 281, 264, 11760, 8062, 51696, 51696, 294, 264, 12379, 293, 439, 729, 18875, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13786602020263672, "compression_ratio": 1.9521531100478469, "no_speech_prob": 8.664361303090118e-06}, {"id": 239, "seek": 70232, "start": 704.6, "end": 707.12, "text": " So the distance is just the sum of those values.", "tokens": [50364, 366, 28682, 13, 50398, 50398, 814, 500, 380, 1871, 13, 50478, 50478, 407, 264, 4560, 307, 445, 264, 2408, 295, 729, 4190, 13, 50604, 50604, 407, 562, 286, 646, 48256, 11, 286, 445, 483, 11, 337, 1184, 8062, 510, 11, 50812, 50812, 257, 16235, 300, 23249, 281, 264, 16235, 295, 1936, 51070, 51070, 264, 4560, 281, 264, 11760, 8062, 51258, 51258, 294, 264, 12379, 13, 51396, 51396, 407, 337, 264, 3006, 12379, 11, 341, 51530, 51530, 307, 516, 281, 3082, 439, 729, 18875, 51618, 51618, 281, 483, 4966, 281, 264, 11760, 8062, 51696, 51696, 294, 264, 12379, 293, 439, 729, 18875, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13786602020263672, "compression_ratio": 1.9521531100478469, "no_speech_prob": 8.664361303090118e-06}, {"id": 240, "seek": 70232, "start": 707.12, "end": 711.2800000000001, "text": " So when I back propagate, I just get, for each vector here,", "tokens": [50364, 366, 28682, 13, 50398, 50398, 814, 500, 380, 1871, 13, 50478, 50478, 407, 264, 4560, 307, 445, 264, 2408, 295, 729, 4190, 13, 50604, 50604, 407, 562, 286, 646, 48256, 11, 286, 445, 483, 11, 337, 1184, 8062, 510, 11, 50812, 50812, 257, 16235, 300, 23249, 281, 264, 16235, 295, 1936, 51070, 51070, 264, 4560, 281, 264, 11760, 8062, 51258, 51258, 294, 264, 12379, 13, 51396, 51396, 407, 337, 264, 3006, 12379, 11, 341, 51530, 51530, 307, 516, 281, 3082, 439, 729, 18875, 51618, 51618, 281, 483, 4966, 281, 264, 11760, 8062, 51696, 51696, 294, 264, 12379, 293, 439, 729, 18875, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13786602020263672, "compression_ratio": 1.9521531100478469, "no_speech_prob": 8.664361303090118e-06}, {"id": 241, "seek": 70232, "start": 711.2800000000001, "end": 716.44, "text": " a gradient that corresponds to the gradient of basically", "tokens": [50364, 366, 28682, 13, 50398, 50398, 814, 500, 380, 1871, 13, 50478, 50478, 407, 264, 4560, 307, 445, 264, 2408, 295, 729, 4190, 13, 50604, 50604, 407, 562, 286, 646, 48256, 11, 286, 445, 483, 11, 337, 1184, 8062, 510, 11, 50812, 50812, 257, 16235, 300, 23249, 281, 264, 16235, 295, 1936, 51070, 51070, 264, 4560, 281, 264, 11760, 8062, 51258, 51258, 294, 264, 12379, 13, 51396, 51396, 407, 337, 264, 3006, 12379, 11, 341, 51530, 51530, 307, 516, 281, 3082, 439, 729, 18875, 51618, 51618, 281, 483, 4966, 281, 264, 11760, 8062, 51696, 51696, 294, 264, 12379, 293, 439, 729, 18875, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13786602020263672, "compression_ratio": 1.9521531100478469, "no_speech_prob": 8.664361303090118e-06}, {"id": 242, "seek": 70232, "start": 716.44, "end": 720.2, "text": " the distance to the corresponding vector", "tokens": [50364, 366, 28682, 13, 50398, 50398, 814, 500, 380, 1871, 13, 50478, 50478, 407, 264, 4560, 307, 445, 264, 2408, 295, 729, 4190, 13, 50604, 50604, 407, 562, 286, 646, 48256, 11, 286, 445, 483, 11, 337, 1184, 8062, 510, 11, 50812, 50812, 257, 16235, 300, 23249, 281, 264, 16235, 295, 1936, 51070, 51070, 264, 4560, 281, 264, 11760, 8062, 51258, 51258, 294, 264, 12379, 13, 51396, 51396, 407, 337, 264, 3006, 12379, 11, 341, 51530, 51530, 307, 516, 281, 3082, 439, 729, 18875, 51618, 51618, 281, 483, 4966, 281, 264, 11760, 8062, 51696, 51696, 294, 264, 12379, 293, 439, 729, 18875, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13786602020263672, "compression_ratio": 1.9521531100478469, "no_speech_prob": 8.664361303090118e-06}, {"id": 243, "seek": 70232, "start": 720.2, "end": 722.96, "text": " in the template.", "tokens": [50364, 366, 28682, 13, 50398, 50398, 814, 500, 380, 1871, 13, 50478, 50478, 407, 264, 4560, 307, 445, 264, 2408, 295, 729, 4190, 13, 50604, 50604, 407, 562, 286, 646, 48256, 11, 286, 445, 483, 11, 337, 1184, 8062, 510, 11, 50812, 50812, 257, 16235, 300, 23249, 281, 264, 16235, 295, 1936, 51070, 51070, 264, 4560, 281, 264, 11760, 8062, 51258, 51258, 294, 264, 12379, 13, 51396, 51396, 407, 337, 264, 3006, 12379, 11, 341, 51530, 51530, 307, 516, 281, 3082, 439, 729, 18875, 51618, 51618, 281, 483, 4966, 281, 264, 11760, 8062, 51696, 51696, 294, 264, 12379, 293, 439, 729, 18875, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13786602020263672, "compression_ratio": 1.9521531100478469, "no_speech_prob": 8.664361303090118e-06}, {"id": 244, "seek": 70232, "start": 722.96, "end": 725.6400000000001, "text": " So for the correct template, this", "tokens": [50364, 366, 28682, 13, 50398, 50398, 814, 500, 380, 1871, 13, 50478, 50478, 407, 264, 4560, 307, 445, 264, 2408, 295, 729, 4190, 13, 50604, 50604, 407, 562, 286, 646, 48256, 11, 286, 445, 483, 11, 337, 1184, 8062, 510, 11, 50812, 50812, 257, 16235, 300, 23249, 281, 264, 16235, 295, 1936, 51070, 51070, 264, 4560, 281, 264, 11760, 8062, 51258, 51258, 294, 264, 12379, 13, 51396, 51396, 407, 337, 264, 3006, 12379, 11, 341, 51530, 51530, 307, 516, 281, 3082, 439, 729, 18875, 51618, 51618, 281, 483, 4966, 281, 264, 11760, 8062, 51696, 51696, 294, 264, 12379, 293, 439, 729, 18875, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13786602020263672, "compression_ratio": 1.9521531100478469, "no_speech_prob": 8.664361303090118e-06}, {"id": 245, "seek": 70232, "start": 725.6400000000001, "end": 727.4000000000001, "text": " is going to cause all those vectors", "tokens": [50364, 366, 28682, 13, 50398, 50398, 814, 500, 380, 1871, 13, 50478, 50478, 407, 264, 4560, 307, 445, 264, 2408, 295, 729, 4190, 13, 50604, 50604, 407, 562, 286, 646, 48256, 11, 286, 445, 483, 11, 337, 1184, 8062, 510, 11, 50812, 50812, 257, 16235, 300, 23249, 281, 264, 16235, 295, 1936, 51070, 51070, 264, 4560, 281, 264, 11760, 8062, 51258, 51258, 294, 264, 12379, 13, 51396, 51396, 407, 337, 264, 3006, 12379, 11, 341, 51530, 51530, 307, 516, 281, 3082, 439, 729, 18875, 51618, 51618, 281, 483, 4966, 281, 264, 11760, 8062, 51696, 51696, 294, 264, 12379, 293, 439, 729, 18875, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13786602020263672, "compression_ratio": 1.9521531100478469, "no_speech_prob": 8.664361303090118e-06}, {"id": 246, "seek": 70232, "start": 727.4000000000001, "end": 728.96, "text": " to get closer to the corresponding vector", "tokens": [50364, 366, 28682, 13, 50398, 50398, 814, 500, 380, 1871, 13, 50478, 50478, 407, 264, 4560, 307, 445, 264, 2408, 295, 729, 4190, 13, 50604, 50604, 407, 562, 286, 646, 48256, 11, 286, 445, 483, 11, 337, 1184, 8062, 510, 11, 50812, 50812, 257, 16235, 300, 23249, 281, 264, 16235, 295, 1936, 51070, 51070, 264, 4560, 281, 264, 11760, 8062, 51258, 51258, 294, 264, 12379, 13, 51396, 51396, 407, 337, 264, 3006, 12379, 11, 341, 51530, 51530, 307, 516, 281, 3082, 439, 729, 18875, 51618, 51618, 281, 483, 4966, 281, 264, 11760, 8062, 51696, 51696, 294, 264, 12379, 293, 439, 729, 18875, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13786602020263672, "compression_ratio": 1.9521531100478469, "no_speech_prob": 8.664361303090118e-06}, {"id": 247, "seek": 70232, "start": 728.96, "end": 730.6, "text": " in the template and all those vectors", "tokens": [50364, 366, 28682, 13, 50398, 50398, 814, 500, 380, 1871, 13, 50478, 50478, 407, 264, 4560, 307, 445, 264, 2408, 295, 729, 4190, 13, 50604, 50604, 407, 562, 286, 646, 48256, 11, 286, 445, 483, 11, 337, 1184, 8062, 510, 11, 50812, 50812, 257, 16235, 300, 23249, 281, 264, 16235, 295, 1936, 51070, 51070, 264, 4560, 281, 264, 11760, 8062, 51258, 51258, 294, 264, 12379, 13, 51396, 51396, 407, 337, 264, 3006, 12379, 11, 341, 51530, 51530, 307, 516, 281, 3082, 439, 729, 18875, 51618, 51618, 281, 483, 4966, 281, 264, 11760, 8062, 51696, 51696, 294, 264, 12379, 293, 439, 729, 18875, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13786602020263672, "compression_ratio": 1.9521531100478469, "no_speech_prob": 8.664361303090118e-06}, {"id": 248, "seek": 73060, "start": 730.6, "end": 732.8000000000001, "text": " to move away from the corresponding vector", "tokens": [50364, 281, 1286, 1314, 490, 264, 11760, 8062, 50474, 50474, 294, 264, 1578, 21165, 300, 291, 4536, 281, 2944, 1314, 13, 50602, 50602, 400, 550, 291, 393, 445, 646, 48256, 729, 2771, 2448, 50700, 50700, 439, 264, 636, 807, 13, 50750, 50750, 823, 11, 286, 478, 733, 295, 13468, 264, 12939, 295, 309, 11, 50908, 50908, 457, 291, 500, 380, 767, 362, 281, 519, 466, 309, 13, 51058, 51058, 682, 8665, 11, 733, 295, 3410, 671, 11, 51320, 51320, 309, 311, 445, 257, 2281, 12, 6032, 2316, 365, 48994, 7006, 13, 51524, 51524, 400, 291, 445, 14722, 264, 16235, 295, 428, 2281, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.15035807291666667, "compression_ratio": 1.6169354838709677, "no_speech_prob": 3.726552677107975e-06}, {"id": 249, "seek": 73060, "start": 732.8000000000001, "end": 735.36, "text": " in the bad templates that you decide to push away.", "tokens": [50364, 281, 1286, 1314, 490, 264, 11760, 8062, 50474, 50474, 294, 264, 1578, 21165, 300, 291, 4536, 281, 2944, 1314, 13, 50602, 50602, 400, 550, 291, 393, 445, 646, 48256, 729, 2771, 2448, 50700, 50700, 439, 264, 636, 807, 13, 50750, 50750, 823, 11, 286, 478, 733, 295, 13468, 264, 12939, 295, 309, 11, 50908, 50908, 457, 291, 500, 380, 767, 362, 281, 519, 466, 309, 13, 51058, 51058, 682, 8665, 11, 733, 295, 3410, 671, 11, 51320, 51320, 309, 311, 445, 257, 2281, 12, 6032, 2316, 365, 48994, 7006, 13, 51524, 51524, 400, 291, 445, 14722, 264, 16235, 295, 428, 2281, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.15035807291666667, "compression_ratio": 1.6169354838709677, "no_speech_prob": 3.726552677107975e-06}, {"id": 250, "seek": 73060, "start": 735.36, "end": 737.32, "text": " And then you can just back propagate those gradients", "tokens": [50364, 281, 1286, 1314, 490, 264, 11760, 8062, 50474, 50474, 294, 264, 1578, 21165, 300, 291, 4536, 281, 2944, 1314, 13, 50602, 50602, 400, 550, 291, 393, 445, 646, 48256, 729, 2771, 2448, 50700, 50700, 439, 264, 636, 807, 13, 50750, 50750, 823, 11, 286, 478, 733, 295, 13468, 264, 12939, 295, 309, 11, 50908, 50908, 457, 291, 500, 380, 767, 362, 281, 519, 466, 309, 13, 51058, 51058, 682, 8665, 11, 733, 295, 3410, 671, 11, 51320, 51320, 309, 311, 445, 257, 2281, 12, 6032, 2316, 365, 48994, 7006, 13, 51524, 51524, 400, 291, 445, 14722, 264, 16235, 295, 428, 2281, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.15035807291666667, "compression_ratio": 1.6169354838709677, "no_speech_prob": 3.726552677107975e-06}, {"id": 251, "seek": 73060, "start": 737.32, "end": 738.32, "text": " all the way through.", "tokens": [50364, 281, 1286, 1314, 490, 264, 11760, 8062, 50474, 50474, 294, 264, 1578, 21165, 300, 291, 4536, 281, 2944, 1314, 13, 50602, 50602, 400, 550, 291, 393, 445, 646, 48256, 729, 2771, 2448, 50700, 50700, 439, 264, 636, 807, 13, 50750, 50750, 823, 11, 286, 478, 733, 295, 13468, 264, 12939, 295, 309, 11, 50908, 50908, 457, 291, 500, 380, 767, 362, 281, 519, 466, 309, 13, 51058, 51058, 682, 8665, 11, 733, 295, 3410, 671, 11, 51320, 51320, 309, 311, 445, 257, 2281, 12, 6032, 2316, 365, 48994, 7006, 13, 51524, 51524, 400, 291, 445, 14722, 264, 16235, 295, 428, 2281, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.15035807291666667, "compression_ratio": 1.6169354838709677, "no_speech_prob": 3.726552677107975e-06}, {"id": 252, "seek": 73060, "start": 738.32, "end": 741.48, "text": " Now, I'm kind of explaining the mechanics of it,", "tokens": [50364, 281, 1286, 1314, 490, 264, 11760, 8062, 50474, 50474, 294, 264, 1578, 21165, 300, 291, 4536, 281, 2944, 1314, 13, 50602, 50602, 400, 550, 291, 393, 445, 646, 48256, 729, 2771, 2448, 50700, 50700, 439, 264, 636, 807, 13, 50750, 50750, 823, 11, 286, 478, 733, 295, 13468, 264, 12939, 295, 309, 11, 50908, 50908, 457, 291, 500, 380, 767, 362, 281, 519, 466, 309, 13, 51058, 51058, 682, 8665, 11, 733, 295, 3410, 671, 11, 51320, 51320, 309, 311, 445, 257, 2281, 12, 6032, 2316, 365, 48994, 7006, 13, 51524, 51524, 400, 291, 445, 14722, 264, 16235, 295, 428, 2281, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.15035807291666667, "compression_ratio": 1.6169354838709677, "no_speech_prob": 3.726552677107975e-06}, {"id": 253, "seek": 73060, "start": 741.48, "end": 744.48, "text": " but you don't actually have to think about it.", "tokens": [50364, 281, 1286, 1314, 490, 264, 11760, 8062, 50474, 50474, 294, 264, 1578, 21165, 300, 291, 4536, 281, 2944, 1314, 13, 50602, 50602, 400, 550, 291, 393, 445, 646, 48256, 729, 2771, 2448, 50700, 50700, 439, 264, 636, 807, 13, 50750, 50750, 823, 11, 286, 478, 733, 295, 13468, 264, 12939, 295, 309, 11, 50908, 50908, 457, 291, 500, 380, 767, 362, 281, 519, 466, 309, 13, 51058, 51058, 682, 8665, 11, 733, 295, 3410, 671, 11, 51320, 51320, 309, 311, 445, 257, 2281, 12, 6032, 2316, 365, 48994, 7006, 13, 51524, 51524, 400, 291, 445, 14722, 264, 16235, 295, 428, 2281, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.15035807291666667, "compression_ratio": 1.6169354838709677, "no_speech_prob": 3.726552677107975e-06}, {"id": 254, "seek": 73060, "start": 744.48, "end": 749.72, "text": " In principle, kind of conceptually,", "tokens": [50364, 281, 1286, 1314, 490, 264, 11760, 8062, 50474, 50474, 294, 264, 1578, 21165, 300, 291, 4536, 281, 2944, 1314, 13, 50602, 50602, 400, 550, 291, 393, 445, 646, 48256, 729, 2771, 2448, 50700, 50700, 439, 264, 636, 807, 13, 50750, 50750, 823, 11, 286, 478, 733, 295, 13468, 264, 12939, 295, 309, 11, 50908, 50908, 457, 291, 500, 380, 767, 362, 281, 519, 466, 309, 13, 51058, 51058, 682, 8665, 11, 733, 295, 3410, 671, 11, 51320, 51320, 309, 311, 445, 257, 2281, 12, 6032, 2316, 365, 48994, 7006, 13, 51524, 51524, 400, 291, 445, 14722, 264, 16235, 295, 428, 2281, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.15035807291666667, "compression_ratio": 1.6169354838709677, "no_speech_prob": 3.726552677107975e-06}, {"id": 255, "seek": 73060, "start": 749.72, "end": 753.8000000000001, "text": " it's just a energy-based model with latent variable.", "tokens": [50364, 281, 1286, 1314, 490, 264, 11760, 8062, 50474, 50474, 294, 264, 1578, 21165, 300, 291, 4536, 281, 2944, 1314, 13, 50602, 50602, 400, 550, 291, 393, 445, 646, 48256, 729, 2771, 2448, 50700, 50700, 439, 264, 636, 807, 13, 50750, 50750, 823, 11, 286, 478, 733, 295, 13468, 264, 12939, 295, 309, 11, 50908, 50908, 457, 291, 500, 380, 767, 362, 281, 519, 466, 309, 13, 51058, 51058, 682, 8665, 11, 733, 295, 3410, 671, 11, 51320, 51320, 309, 311, 445, 257, 2281, 12, 6032, 2316, 365, 48994, 7006, 13, 51524, 51524, 400, 291, 445, 14722, 264, 16235, 295, 428, 2281, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.15035807291666667, "compression_ratio": 1.6169354838709677, "no_speech_prob": 3.726552677107975e-06}, {"id": 256, "seek": 73060, "start": 753.8000000000001, "end": 755.84, "text": " And you just compute the gradient of your energy", "tokens": [50364, 281, 1286, 1314, 490, 264, 11760, 8062, 50474, 50474, 294, 264, 1578, 21165, 300, 291, 4536, 281, 2944, 1314, 13, 50602, 50602, 400, 550, 291, 393, 445, 646, 48256, 729, 2771, 2448, 50700, 50700, 439, 264, 636, 807, 13, 50750, 50750, 823, 11, 286, 478, 733, 295, 13468, 264, 12939, 295, 309, 11, 50908, 50908, 457, 291, 500, 380, 767, 362, 281, 519, 466, 309, 13, 51058, 51058, 682, 8665, 11, 733, 295, 3410, 671, 11, 51320, 51320, 309, 311, 445, 257, 2281, 12, 6032, 2316, 365, 48994, 7006, 13, 51524, 51524, 400, 291, 445, 14722, 264, 16235, 295, 428, 2281, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.15035807291666667, "compression_ratio": 1.6169354838709677, "no_speech_prob": 3.726552677107975e-06}, {"id": 257, "seek": 75584, "start": 755.84, "end": 761.4, "text": " with respect to everything in your network", "tokens": [50364, 365, 3104, 281, 1203, 294, 428, 3209, 50642, 50642, 337, 4190, 295, 48994, 9102, 300, 50774, 50774, 5672, 322, 264, 2535, 295, 341, 3679, 510, 13, 50996, 50996, 509, 393, 519, 295, 341, 3679, 382, 264, 472, 300, 5112, 291, 51116, 51116, 597, 295, 264, 6338, 307, 3006, 13, 51288, 51288, 400, 370, 309, 311, 1825, 544, 813, 364, 2281, 12, 6032, 2316, 13, 51456, 51456, 823, 456, 311, 257, 1168, 13, 51584, 51584, 407, 983, 669, 286, 15424, 341, 949, 1417, 51690, 51690, 466, 3877, 17630, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.13367721308832584, "compression_ratio": 1.5745614035087718, "no_speech_prob": 1.749835610098671e-05}, {"id": 258, "seek": 75584, "start": 761.4, "end": 764.0400000000001, "text": " for values of latent variables that", "tokens": [50364, 365, 3104, 281, 1203, 294, 428, 3209, 50642, 50642, 337, 4190, 295, 48994, 9102, 300, 50774, 50774, 5672, 322, 264, 2535, 295, 341, 3679, 510, 13, 50996, 50996, 509, 393, 519, 295, 341, 3679, 382, 264, 472, 300, 5112, 291, 51116, 51116, 597, 295, 264, 6338, 307, 3006, 13, 51288, 51288, 400, 370, 309, 311, 1825, 544, 813, 364, 2281, 12, 6032, 2316, 13, 51456, 51456, 823, 456, 311, 257, 1168, 13, 51584, 51584, 407, 983, 669, 286, 15424, 341, 949, 1417, 51690, 51690, 466, 3877, 17630, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.13367721308832584, "compression_ratio": 1.5745614035087718, "no_speech_prob": 1.749835610098671e-05}, {"id": 259, "seek": 75584, "start": 764.0400000000001, "end": 768.48, "text": " depend on the position of this switch here.", "tokens": [50364, 365, 3104, 281, 1203, 294, 428, 3209, 50642, 50642, 337, 4190, 295, 48994, 9102, 300, 50774, 50774, 5672, 322, 264, 2535, 295, 341, 3679, 510, 13, 50996, 50996, 509, 393, 519, 295, 341, 3679, 382, 264, 472, 300, 5112, 291, 51116, 51116, 597, 295, 264, 6338, 307, 3006, 13, 51288, 51288, 400, 370, 309, 311, 1825, 544, 813, 364, 2281, 12, 6032, 2316, 13, 51456, 51456, 823, 456, 311, 257, 1168, 13, 51584, 51584, 407, 983, 669, 286, 15424, 341, 949, 1417, 51690, 51690, 466, 3877, 17630, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.13367721308832584, "compression_ratio": 1.5745614035087718, "no_speech_prob": 1.749835610098671e-05}, {"id": 260, "seek": 75584, "start": 768.48, "end": 770.88, "text": " You can think of this switch as the one that tells you", "tokens": [50364, 365, 3104, 281, 1203, 294, 428, 3209, 50642, 50642, 337, 4190, 295, 48994, 9102, 300, 50774, 50774, 5672, 322, 264, 2535, 295, 341, 3679, 510, 13, 50996, 50996, 509, 393, 519, 295, 341, 3679, 382, 264, 472, 300, 5112, 291, 51116, 51116, 597, 295, 264, 6338, 307, 3006, 13, 51288, 51288, 400, 370, 309, 311, 1825, 544, 813, 364, 2281, 12, 6032, 2316, 13, 51456, 51456, 823, 456, 311, 257, 1168, 13, 51584, 51584, 407, 983, 669, 286, 15424, 341, 949, 1417, 51690, 51690, 466, 3877, 17630, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.13367721308832584, "compression_ratio": 1.5745614035087718, "no_speech_prob": 1.749835610098671e-05}, {"id": 261, "seek": 75584, "start": 770.88, "end": 774.32, "text": " which of the answers is correct.", "tokens": [50364, 365, 3104, 281, 1203, 294, 428, 3209, 50642, 50642, 337, 4190, 295, 48994, 9102, 300, 50774, 50774, 5672, 322, 264, 2535, 295, 341, 3679, 510, 13, 50996, 50996, 509, 393, 519, 295, 341, 3679, 382, 264, 472, 300, 5112, 291, 51116, 51116, 597, 295, 264, 6338, 307, 3006, 13, 51288, 51288, 400, 370, 309, 311, 1825, 544, 813, 364, 2281, 12, 6032, 2316, 13, 51456, 51456, 823, 456, 311, 257, 1168, 13, 51584, 51584, 407, 983, 669, 286, 15424, 341, 949, 1417, 51690, 51690, 466, 3877, 17630, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.13367721308832584, "compression_ratio": 1.5745614035087718, "no_speech_prob": 1.749835610098671e-05}, {"id": 262, "seek": 75584, "start": 774.32, "end": 777.6800000000001, "text": " And so it's nothing more than an energy-based model.", "tokens": [50364, 365, 3104, 281, 1203, 294, 428, 3209, 50642, 50642, 337, 4190, 295, 48994, 9102, 300, 50774, 50774, 5672, 322, 264, 2535, 295, 341, 3679, 510, 13, 50996, 50996, 509, 393, 519, 295, 341, 3679, 382, 264, 472, 300, 5112, 291, 51116, 51116, 597, 295, 264, 6338, 307, 3006, 13, 51288, 51288, 400, 370, 309, 311, 1825, 544, 813, 364, 2281, 12, 6032, 2316, 13, 51456, 51456, 823, 456, 311, 257, 1168, 13, 51584, 51584, 407, 983, 669, 286, 15424, 341, 949, 1417, 51690, 51690, 466, 3877, 17630, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.13367721308832584, "compression_ratio": 1.5745614035087718, "no_speech_prob": 1.749835610098671e-05}, {"id": 263, "seek": 75584, "start": 777.6800000000001, "end": 780.24, "text": " Now there's a question.", "tokens": [50364, 365, 3104, 281, 1203, 294, 428, 3209, 50642, 50642, 337, 4190, 295, 48994, 9102, 300, 50774, 50774, 5672, 322, 264, 2535, 295, 341, 3679, 510, 13, 50996, 50996, 509, 393, 519, 295, 341, 3679, 382, 264, 472, 300, 5112, 291, 51116, 51116, 597, 295, 264, 6338, 307, 3006, 13, 51288, 51288, 400, 370, 309, 311, 1825, 544, 813, 364, 2281, 12, 6032, 2316, 13, 51456, 51456, 823, 456, 311, 257, 1168, 13, 51584, 51584, 407, 983, 669, 286, 15424, 341, 949, 1417, 51690, 51690, 466, 3877, 17630, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.13367721308832584, "compression_ratio": 1.5745614035087718, "no_speech_prob": 1.749835610098671e-05}, {"id": 264, "seek": 75584, "start": 780.24, "end": 782.36, "text": " So why am I introducing this before talking", "tokens": [50364, 365, 3104, 281, 1203, 294, 428, 3209, 50642, 50642, 337, 4190, 295, 48994, 9102, 300, 50774, 50774, 5672, 322, 264, 2535, 295, 341, 3679, 510, 13, 50996, 50996, 509, 393, 519, 295, 341, 3679, 382, 264, 472, 300, 5112, 291, 51116, 51116, 597, 295, 264, 6338, 307, 3006, 13, 51288, 51288, 400, 370, 309, 311, 1825, 544, 813, 364, 2281, 12, 6032, 2316, 13, 51456, 51456, 823, 456, 311, 257, 1168, 13, 51584, 51584, 407, 983, 669, 286, 15424, 341, 949, 1417, 51690, 51690, 466, 3877, 17630, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.13367721308832584, "compression_ratio": 1.5745614035087718, "no_speech_prob": 1.749835610098671e-05}, {"id": 265, "seek": 75584, "start": 782.36, "end": 783.44, "text": " about structure prediction?", "tokens": [50364, 365, 3104, 281, 1203, 294, 428, 3209, 50642, 50642, 337, 4190, 295, 48994, 9102, 300, 50774, 50774, 5672, 322, 264, 2535, 295, 341, 3679, 510, 13, 50996, 50996, 509, 393, 519, 295, 341, 3679, 382, 264, 472, 300, 5112, 291, 51116, 51116, 597, 295, 264, 6338, 307, 3006, 13, 51288, 51288, 400, 370, 309, 311, 1825, 544, 813, 364, 2281, 12, 6032, 2316, 13, 51456, 51456, 823, 456, 311, 257, 1168, 13, 51584, 51584, 407, 983, 669, 286, 15424, 341, 949, 1417, 51690, 51690, 466, 3877, 17630, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.13367721308832584, "compression_ratio": 1.5745614035087718, "no_speech_prob": 1.749835610098671e-05}, {"id": 266, "seek": 78344, "start": 783.44, "end": 786.6400000000001, "text": " Because this is a very simple form of structure prediction,", "tokens": [50364, 1436, 341, 307, 257, 588, 2199, 1254, 295, 3877, 17630, 11, 50524, 50524, 4098, 498, 586, 264, 1154, 307, 406, 50620, 50620, 281, 5521, 257, 2167, 1349, 11, 457, 309, 50724, 50724, 307, 281, 5521, 257, 8310, 295, 2283, 13, 50848, 50848, 407, 257, 1349, 307, 257, 8310, 295, 3263, 11, 50990, 50990, 457, 257, 8174, 307, 257, 8310, 295, 2283, 11, 51090, 51090, 293, 370, 4412, 611, 257, 8310, 295, 3263, 13, 51228, 51228, 407, 286, 727, 1322, 257, 5765, 295, 1944, 22978, 51450, 51450, 597, 366, 17570, 5030, 3006, 22978, 295, 2283, 11, 597, 51600, 51600, 6805, 281, 512, 17570, 5030, 3006, 22978, 295, 3263, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.09470187766211373, "compression_ratio": 1.9827586206896552, "no_speech_prob": 2.211884748248849e-05}, {"id": 267, "seek": 78344, "start": 786.6400000000001, "end": 788.5600000000001, "text": " particularly if now the problem is not", "tokens": [50364, 1436, 341, 307, 257, 588, 2199, 1254, 295, 3877, 17630, 11, 50524, 50524, 4098, 498, 586, 264, 1154, 307, 406, 50620, 50620, 281, 5521, 257, 2167, 1349, 11, 457, 309, 50724, 50724, 307, 281, 5521, 257, 8310, 295, 2283, 13, 50848, 50848, 407, 257, 1349, 307, 257, 8310, 295, 3263, 11, 50990, 50990, 457, 257, 8174, 307, 257, 8310, 295, 2283, 11, 51090, 51090, 293, 370, 4412, 611, 257, 8310, 295, 3263, 13, 51228, 51228, 407, 286, 727, 1322, 257, 5765, 295, 1944, 22978, 51450, 51450, 597, 366, 17570, 5030, 3006, 22978, 295, 2283, 11, 597, 51600, 51600, 6805, 281, 512, 17570, 5030, 3006, 22978, 295, 3263, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.09470187766211373, "compression_ratio": 1.9827586206896552, "no_speech_prob": 2.211884748248849e-05}, {"id": 268, "seek": 78344, "start": 788.5600000000001, "end": 790.6400000000001, "text": " to recognize a single word, but it", "tokens": [50364, 1436, 341, 307, 257, 588, 2199, 1254, 295, 3877, 17630, 11, 50524, 50524, 4098, 498, 586, 264, 1154, 307, 406, 50620, 50620, 281, 5521, 257, 2167, 1349, 11, 457, 309, 50724, 50724, 307, 281, 5521, 257, 8310, 295, 2283, 13, 50848, 50848, 407, 257, 1349, 307, 257, 8310, 295, 3263, 11, 50990, 50990, 457, 257, 8174, 307, 257, 8310, 295, 2283, 11, 51090, 51090, 293, 370, 4412, 611, 257, 8310, 295, 3263, 13, 51228, 51228, 407, 286, 727, 1322, 257, 5765, 295, 1944, 22978, 51450, 51450, 597, 366, 17570, 5030, 3006, 22978, 295, 2283, 11, 597, 51600, 51600, 6805, 281, 512, 17570, 5030, 3006, 22978, 295, 3263, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.09470187766211373, "compression_ratio": 1.9827586206896552, "no_speech_prob": 2.211884748248849e-05}, {"id": 269, "seek": 78344, "start": 790.6400000000001, "end": 793.12, "text": " is to recognize a sequence of words.", "tokens": [50364, 1436, 341, 307, 257, 588, 2199, 1254, 295, 3877, 17630, 11, 50524, 50524, 4098, 498, 586, 264, 1154, 307, 406, 50620, 50620, 281, 5521, 257, 2167, 1349, 11, 457, 309, 50724, 50724, 307, 281, 5521, 257, 8310, 295, 2283, 13, 50848, 50848, 407, 257, 1349, 307, 257, 8310, 295, 3263, 11, 50990, 50990, 457, 257, 8174, 307, 257, 8310, 295, 2283, 11, 51090, 51090, 293, 370, 4412, 611, 257, 8310, 295, 3263, 13, 51228, 51228, 407, 286, 727, 1322, 257, 5765, 295, 1944, 22978, 51450, 51450, 597, 366, 17570, 5030, 3006, 22978, 295, 2283, 11, 597, 51600, 51600, 6805, 281, 512, 17570, 5030, 3006, 22978, 295, 3263, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.09470187766211373, "compression_ratio": 1.9827586206896552, "no_speech_prob": 2.211884748248849e-05}, {"id": 270, "seek": 78344, "start": 793.12, "end": 795.96, "text": " So a word is a sequence of sounds,", "tokens": [50364, 1436, 341, 307, 257, 588, 2199, 1254, 295, 3877, 17630, 11, 50524, 50524, 4098, 498, 586, 264, 1154, 307, 406, 50620, 50620, 281, 5521, 257, 2167, 1349, 11, 457, 309, 50724, 50724, 307, 281, 5521, 257, 8310, 295, 2283, 13, 50848, 50848, 407, 257, 1349, 307, 257, 8310, 295, 3263, 11, 50990, 50990, 457, 257, 8174, 307, 257, 8310, 295, 2283, 11, 51090, 51090, 293, 370, 4412, 611, 257, 8310, 295, 3263, 13, 51228, 51228, 407, 286, 727, 1322, 257, 5765, 295, 1944, 22978, 51450, 51450, 597, 366, 17570, 5030, 3006, 22978, 295, 2283, 11, 597, 51600, 51600, 6805, 281, 512, 17570, 5030, 3006, 22978, 295, 3263, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.09470187766211373, "compression_ratio": 1.9827586206896552, "no_speech_prob": 2.211884748248849e-05}, {"id": 271, "seek": 78344, "start": 795.96, "end": 797.96, "text": " but a sentence is a sequence of words,", "tokens": [50364, 1436, 341, 307, 257, 588, 2199, 1254, 295, 3877, 17630, 11, 50524, 50524, 4098, 498, 586, 264, 1154, 307, 406, 50620, 50620, 281, 5521, 257, 2167, 1349, 11, 457, 309, 50724, 50724, 307, 281, 5521, 257, 8310, 295, 2283, 13, 50848, 50848, 407, 257, 1349, 307, 257, 8310, 295, 3263, 11, 50990, 50990, 457, 257, 8174, 307, 257, 8310, 295, 2283, 11, 51090, 51090, 293, 370, 4412, 611, 257, 8310, 295, 3263, 13, 51228, 51228, 407, 286, 727, 1322, 257, 5765, 295, 1944, 22978, 51450, 51450, 597, 366, 17570, 5030, 3006, 22978, 295, 2283, 11, 597, 51600, 51600, 6805, 281, 512, 17570, 5030, 3006, 22978, 295, 3263, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.09470187766211373, "compression_ratio": 1.9827586206896552, "no_speech_prob": 2.211884748248849e-05}, {"id": 272, "seek": 78344, "start": 797.96, "end": 800.72, "text": " and so therefore also a sequence of sounds.", "tokens": [50364, 1436, 341, 307, 257, 588, 2199, 1254, 295, 3877, 17630, 11, 50524, 50524, 4098, 498, 586, 264, 1154, 307, 406, 50620, 50620, 281, 5521, 257, 2167, 1349, 11, 457, 309, 50724, 50724, 307, 281, 5521, 257, 8310, 295, 2283, 13, 50848, 50848, 407, 257, 1349, 307, 257, 8310, 295, 3263, 11, 50990, 50990, 457, 257, 8174, 307, 257, 8310, 295, 2283, 11, 51090, 51090, 293, 370, 4412, 611, 257, 8310, 295, 3263, 13, 51228, 51228, 407, 286, 727, 1322, 257, 5765, 295, 1944, 22978, 51450, 51450, 597, 366, 17570, 5030, 3006, 22978, 295, 2283, 11, 597, 51600, 51600, 6805, 281, 512, 17570, 5030, 3006, 22978, 295, 3263, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.09470187766211373, "compression_ratio": 1.9827586206896552, "no_speech_prob": 2.211884748248849e-05}, {"id": 273, "seek": 78344, "start": 800.72, "end": 805.1600000000001, "text": " So I could build a collection of possible sequences", "tokens": [50364, 1436, 341, 307, 257, 588, 2199, 1254, 295, 3877, 17630, 11, 50524, 50524, 4098, 498, 586, 264, 1154, 307, 406, 50620, 50620, 281, 5521, 257, 2167, 1349, 11, 457, 309, 50724, 50724, 307, 281, 5521, 257, 8310, 295, 2283, 13, 50848, 50848, 407, 257, 1349, 307, 257, 8310, 295, 3263, 11, 50990, 50990, 457, 257, 8174, 307, 257, 8310, 295, 2283, 11, 51090, 51090, 293, 370, 4412, 611, 257, 8310, 295, 3263, 13, 51228, 51228, 407, 286, 727, 1322, 257, 5765, 295, 1944, 22978, 51450, 51450, 597, 366, 17570, 5030, 3006, 22978, 295, 2283, 11, 597, 51600, 51600, 6805, 281, 512, 17570, 5030, 3006, 22978, 295, 3263, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.09470187766211373, "compression_ratio": 1.9827586206896552, "no_speech_prob": 2.211884748248849e-05}, {"id": 274, "seek": 78344, "start": 805.1600000000001, "end": 808.1600000000001, "text": " which are grammatically correct sequences of words, which", "tokens": [50364, 1436, 341, 307, 257, 588, 2199, 1254, 295, 3877, 17630, 11, 50524, 50524, 4098, 498, 586, 264, 1154, 307, 406, 50620, 50620, 281, 5521, 257, 2167, 1349, 11, 457, 309, 50724, 50724, 307, 281, 5521, 257, 8310, 295, 2283, 13, 50848, 50848, 407, 257, 1349, 307, 257, 8310, 295, 3263, 11, 50990, 50990, 457, 257, 8174, 307, 257, 8310, 295, 2283, 11, 51090, 51090, 293, 370, 4412, 611, 257, 8310, 295, 3263, 13, 51228, 51228, 407, 286, 727, 1322, 257, 5765, 295, 1944, 22978, 51450, 51450, 597, 366, 17570, 5030, 3006, 22978, 295, 2283, 11, 597, 51600, 51600, 6805, 281, 512, 17570, 5030, 3006, 22978, 295, 3263, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.09470187766211373, "compression_ratio": 1.9827586206896552, "no_speech_prob": 2.211884748248849e-05}, {"id": 275, "seek": 78344, "start": 808.1600000000001, "end": 813.08, "text": " correspond to some grammatically correct sequences of sounds.", "tokens": [50364, 1436, 341, 307, 257, 588, 2199, 1254, 295, 3877, 17630, 11, 50524, 50524, 4098, 498, 586, 264, 1154, 307, 406, 50620, 50620, 281, 5521, 257, 2167, 1349, 11, 457, 309, 50724, 50724, 307, 281, 5521, 257, 8310, 295, 2283, 13, 50848, 50848, 407, 257, 1349, 307, 257, 8310, 295, 3263, 11, 50990, 50990, 457, 257, 8174, 307, 257, 8310, 295, 2283, 11, 51090, 51090, 293, 370, 4412, 611, 257, 8310, 295, 3263, 13, 51228, 51228, 407, 286, 727, 1322, 257, 5765, 295, 1944, 22978, 51450, 51450, 597, 366, 17570, 5030, 3006, 22978, 295, 2283, 11, 597, 51600, 51600, 6805, 281, 512, 17570, 5030, 3006, 22978, 295, 3263, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.09470187766211373, "compression_ratio": 1.9827586206896552, "no_speech_prob": 2.211884748248849e-05}, {"id": 276, "seek": 81308, "start": 813.08, "end": 816.0, "text": " And then this kind of dynamic time-warping, if you want,", "tokens": [50364, 400, 550, 341, 733, 295, 8546, 565, 12, 6925, 3381, 11, 498, 291, 528, 11, 50510, 50510, 486, 1333, 295, 915, 3654, 439, 264, 1944, 22978, 295, 16944, 50750, 50750, 420, 3263, 420, 2283, 11, 321, 603, 915, 264, 472, 300, 50906, 50906, 575, 264, 12437, 2281, 11, 300, 341, 4111, 8062, 307, 51080, 51080, 13699, 281, 6063, 13, 51134, 51356, 407, 300, 311, 264, 2674, 1154, 295, 8310, 40244, 13, 51482], "temperature": 0.0, "avg_logprob": -0.2168598948298274, "compression_ratio": 1.5159574468085106, "no_speech_prob": 3.7263462218106724e-06}, {"id": 277, "seek": 81308, "start": 816.0, "end": 820.8000000000001, "text": " will sort of find among all the possible sequences of symbols", "tokens": [50364, 400, 550, 341, 733, 295, 8546, 565, 12, 6925, 3381, 11, 498, 291, 528, 11, 50510, 50510, 486, 1333, 295, 915, 3654, 439, 264, 1944, 22978, 295, 16944, 50750, 50750, 420, 3263, 420, 2283, 11, 321, 603, 915, 264, 472, 300, 50906, 50906, 575, 264, 12437, 2281, 11, 300, 341, 4111, 8062, 307, 51080, 51080, 13699, 281, 6063, 13, 51134, 51356, 407, 300, 311, 264, 2674, 1154, 295, 8310, 40244, 13, 51482], "temperature": 0.0, "avg_logprob": -0.2168598948298274, "compression_ratio": 1.5159574468085106, "no_speech_prob": 3.7263462218106724e-06}, {"id": 278, "seek": 81308, "start": 820.8000000000001, "end": 823.9200000000001, "text": " or sounds or words, we'll find the one that", "tokens": [50364, 400, 550, 341, 733, 295, 8546, 565, 12, 6925, 3381, 11, 498, 291, 528, 11, 50510, 50510, 486, 1333, 295, 915, 3654, 439, 264, 1944, 22978, 295, 16944, 50750, 50750, 420, 3263, 420, 2283, 11, 321, 603, 915, 264, 472, 300, 50906, 50906, 575, 264, 12437, 2281, 11, 300, 341, 4111, 8062, 307, 51080, 51080, 13699, 281, 6063, 13, 51134, 51356, 407, 300, 311, 264, 2674, 1154, 295, 8310, 40244, 13, 51482], "temperature": 0.0, "avg_logprob": -0.2168598948298274, "compression_ratio": 1.5159574468085106, "no_speech_prob": 3.7263462218106724e-06}, {"id": 279, "seek": 81308, "start": 823.9200000000001, "end": 827.4000000000001, "text": " has the lowest energy, that this feature vector is", "tokens": [50364, 400, 550, 341, 733, 295, 8546, 565, 12, 6925, 3381, 11, 498, 291, 528, 11, 50510, 50510, 486, 1333, 295, 915, 3654, 439, 264, 1944, 22978, 295, 16944, 50750, 50750, 420, 3263, 420, 2283, 11, 321, 603, 915, 264, 472, 300, 50906, 50906, 575, 264, 12437, 2281, 11, 300, 341, 4111, 8062, 307, 51080, 51080, 13699, 281, 6063, 13, 51134, 51356, 407, 300, 311, 264, 2674, 1154, 295, 8310, 40244, 13, 51482], "temperature": 0.0, "avg_logprob": -0.2168598948298274, "compression_ratio": 1.5159574468085106, "no_speech_prob": 3.7263462218106724e-06}, {"id": 280, "seek": 81308, "start": 827.4000000000001, "end": 828.48, "text": " closest to somehow.", "tokens": [50364, 400, 550, 341, 733, 295, 8546, 565, 12, 6925, 3381, 11, 498, 291, 528, 11, 50510, 50510, 486, 1333, 295, 915, 3654, 439, 264, 1944, 22978, 295, 16944, 50750, 50750, 420, 3263, 420, 2283, 11, 321, 603, 915, 264, 472, 300, 50906, 50906, 575, 264, 12437, 2281, 11, 300, 341, 4111, 8062, 307, 51080, 51080, 13699, 281, 6063, 13, 51134, 51356, 407, 300, 311, 264, 2674, 1154, 295, 8310, 40244, 13, 51482], "temperature": 0.0, "avg_logprob": -0.2168598948298274, "compression_ratio": 1.5159574468085106, "no_speech_prob": 3.7263462218106724e-06}, {"id": 281, "seek": 82848, "start": 828.48, "end": 841.6800000000001, "text": " OK, so that's the general problem of sequence labeling.", "tokens": [50364, 2264, 11, 370, 300, 311, 264, 2674, 1154, 295, 8310, 40244, 13, 51024, 51024, 400, 309, 393, 312, 48936, 412, 257, 2674, 1496, 294, 341, 636, 13, 51354, 51354, 823, 286, 478, 733, 295, 992, 264, 3233, 257, 707, 857, 11, 51466, 51466, 293, 586, 286, 478, 516, 281, 751, 466, 746, 51550, 51550, 300, 291, 434, 406, 516, 281, 536, 4258, 382, 4582, 11, 51670, 51670, 457, 309, 311, 516, 281, 808, 493, 412, 264, 917, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.17381409900944408, "compression_ratio": 1.515625, "no_speech_prob": 3.8444945857918356e-06}, {"id": 282, "seek": 82848, "start": 841.6800000000001, "end": 848.28, "text": " And it can be formulated at a general level in this way.", "tokens": [50364, 2264, 11, 370, 300, 311, 264, 2674, 1154, 295, 8310, 40244, 13, 51024, 51024, 400, 309, 393, 312, 48936, 412, 257, 2674, 1496, 294, 341, 636, 13, 51354, 51354, 823, 286, 478, 733, 295, 992, 264, 3233, 257, 707, 857, 11, 51466, 51466, 293, 586, 286, 478, 516, 281, 751, 466, 746, 51550, 51550, 300, 291, 434, 406, 516, 281, 536, 4258, 382, 4582, 11, 51670, 51670, 457, 309, 311, 516, 281, 808, 493, 412, 264, 917, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.17381409900944408, "compression_ratio": 1.515625, "no_speech_prob": 3.8444945857918356e-06}, {"id": 283, "seek": 82848, "start": 848.28, "end": 850.52, "text": " Now I'm kind of set the stage a little bit,", "tokens": [50364, 2264, 11, 370, 300, 311, 264, 2674, 1154, 295, 8310, 40244, 13, 51024, 51024, 400, 309, 393, 312, 48936, 412, 257, 2674, 1496, 294, 341, 636, 13, 51354, 51354, 823, 286, 478, 733, 295, 992, 264, 3233, 257, 707, 857, 11, 51466, 51466, 293, 586, 286, 478, 516, 281, 751, 466, 746, 51550, 51550, 300, 291, 434, 406, 516, 281, 536, 4258, 382, 4582, 11, 51670, 51670, 457, 309, 311, 516, 281, 808, 493, 412, 264, 917, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.17381409900944408, "compression_ratio": 1.515625, "no_speech_prob": 3.8444945857918356e-06}, {"id": 284, "seek": 82848, "start": 850.52, "end": 852.2, "text": " and now I'm going to talk about something", "tokens": [50364, 2264, 11, 370, 300, 311, 264, 2674, 1154, 295, 8310, 40244, 13, 51024, 51024, 400, 309, 393, 312, 48936, 412, 257, 2674, 1496, 294, 341, 636, 13, 51354, 51354, 823, 286, 478, 733, 295, 992, 264, 3233, 257, 707, 857, 11, 51466, 51466, 293, 586, 286, 478, 516, 281, 751, 466, 746, 51550, 51550, 300, 291, 434, 406, 516, 281, 536, 4258, 382, 4582, 11, 51670, 51670, 457, 309, 311, 516, 281, 808, 493, 412, 264, 917, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.17381409900944408, "compression_ratio": 1.515625, "no_speech_prob": 3.8444945857918356e-06}, {"id": 285, "seek": 82848, "start": 852.2, "end": 854.6, "text": " that you're not going to see immediately as connected,", "tokens": [50364, 2264, 11, 370, 300, 311, 264, 2674, 1154, 295, 8310, 40244, 13, 51024, 51024, 400, 309, 393, 312, 48936, 412, 257, 2674, 1496, 294, 341, 636, 13, 51354, 51354, 823, 286, 478, 733, 295, 992, 264, 3233, 257, 707, 857, 11, 51466, 51466, 293, 586, 286, 478, 516, 281, 751, 466, 746, 51550, 51550, 300, 291, 434, 406, 516, 281, 536, 4258, 382, 4582, 11, 51670, 51670, 457, 309, 311, 516, 281, 808, 493, 412, 264, 917, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.17381409900944408, "compression_ratio": 1.515625, "no_speech_prob": 3.8444945857918356e-06}, {"id": 286, "seek": 82848, "start": 854.6, "end": 858.24, "text": " but it's going to come up at the end.", "tokens": [50364, 2264, 11, 370, 300, 311, 264, 2674, 1154, 295, 8310, 40244, 13, 51024, 51024, 400, 309, 393, 312, 48936, 412, 257, 2674, 1496, 294, 341, 636, 13, 51354, 51354, 823, 286, 478, 733, 295, 992, 264, 3233, 257, 707, 857, 11, 51466, 51466, 293, 586, 286, 478, 516, 281, 751, 466, 746, 51550, 51550, 300, 291, 434, 406, 516, 281, 536, 4258, 382, 4582, 11, 51670, 51670, 457, 309, 311, 516, 281, 808, 493, 412, 264, 917, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.17381409900944408, "compression_ratio": 1.515625, "no_speech_prob": 3.8444945857918356e-06}, {"id": 287, "seek": 85824, "start": 858.24, "end": 861.4, "text": " OK, so let's say you have a learning system that", "tokens": [50364, 2264, 11, 370, 718, 311, 584, 291, 362, 257, 2539, 1185, 300, 50522, 50522, 307, 18204, 295, 364, 4846, 2031, 13, 50634, 50634, 467, 2170, 364, 4846, 2031, 11, 293, 309, 311, 364, 2281, 2316, 50818, 50818, 294, 597, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 294, 341, 1389, 13, 50964, 50964, 407, 729, 3344, 19368, 510, 366, 1936, 51190, 51190, 6771, 294, 257, 5952, 4295, 13, 51264, 51264, 814, 434, 2281, 2115, 11, 45558, 2281, 2115, 51366, 51366, 294, 428, 2281, 2445, 13, 51480, 51480, 400, 428, 5598, 307, 257, 8310, 11, 294, 341, 1389, 51668, 51668, 257, 8310, 295, 1451, 16944, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12721143075085561, "compression_ratio": 1.682608695652174, "no_speech_prob": 6.396157550625503e-05}, {"id": 288, "seek": 85824, "start": 861.4, "end": 863.64, "text": " is composed of an input x.", "tokens": [50364, 2264, 11, 370, 718, 311, 584, 291, 362, 257, 2539, 1185, 300, 50522, 50522, 307, 18204, 295, 364, 4846, 2031, 13, 50634, 50634, 467, 2170, 364, 4846, 2031, 11, 293, 309, 311, 364, 2281, 2316, 50818, 50818, 294, 597, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 294, 341, 1389, 13, 50964, 50964, 407, 729, 3344, 19368, 510, 366, 1936, 51190, 51190, 6771, 294, 257, 5952, 4295, 13, 51264, 51264, 814, 434, 2281, 2115, 11, 45558, 2281, 2115, 51366, 51366, 294, 428, 2281, 2445, 13, 51480, 51480, 400, 428, 5598, 307, 257, 8310, 11, 294, 341, 1389, 51668, 51668, 257, 8310, 295, 1451, 16944, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12721143075085561, "compression_ratio": 1.682608695652174, "no_speech_prob": 6.396157550625503e-05}, {"id": 289, "seek": 85824, "start": 863.64, "end": 867.32, "text": " It gets an input x, and it's an energy model", "tokens": [50364, 2264, 11, 370, 718, 311, 584, 291, 362, 257, 2539, 1185, 300, 50522, 50522, 307, 18204, 295, 364, 4846, 2031, 13, 50634, 50634, 467, 2170, 364, 4846, 2031, 11, 293, 309, 311, 364, 2281, 2316, 50818, 50818, 294, 597, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 294, 341, 1389, 13, 50964, 50964, 407, 729, 3344, 19368, 510, 366, 1936, 51190, 51190, 6771, 294, 257, 5952, 4295, 13, 51264, 51264, 814, 434, 2281, 2115, 11, 45558, 2281, 2115, 51366, 51366, 294, 428, 2281, 2445, 13, 51480, 51480, 400, 428, 5598, 307, 257, 8310, 11, 294, 341, 1389, 51668, 51668, 257, 8310, 295, 1451, 16944, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12721143075085561, "compression_ratio": 1.682608695652174, "no_speech_prob": 6.396157550625503e-05}, {"id": 290, "seek": 85824, "start": 867.32, "end": 870.24, "text": " in which the energy is a sum of three terms in this case.", "tokens": [50364, 2264, 11, 370, 718, 311, 584, 291, 362, 257, 2539, 1185, 300, 50522, 50522, 307, 18204, 295, 364, 4846, 2031, 13, 50634, 50634, 467, 2170, 364, 4846, 2031, 11, 293, 309, 311, 364, 2281, 2316, 50818, 50818, 294, 597, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 294, 341, 1389, 13, 50964, 50964, 407, 729, 3344, 19368, 510, 366, 1936, 51190, 51190, 6771, 294, 257, 5952, 4295, 13, 51264, 51264, 814, 434, 2281, 2115, 11, 45558, 2281, 2115, 51366, 51366, 294, 428, 2281, 2445, 13, 51480, 51480, 400, 428, 5598, 307, 257, 8310, 11, 294, 341, 1389, 51668, 51668, 257, 8310, 295, 1451, 16944, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12721143075085561, "compression_ratio": 1.682608695652174, "no_speech_prob": 6.396157550625503e-05}, {"id": 291, "seek": 85824, "start": 870.24, "end": 874.76, "text": " So those blue squares here are basically", "tokens": [50364, 2264, 11, 370, 718, 311, 584, 291, 362, 257, 2539, 1185, 300, 50522, 50522, 307, 18204, 295, 364, 4846, 2031, 13, 50634, 50634, 467, 2170, 364, 4846, 2031, 11, 293, 309, 311, 364, 2281, 2316, 50818, 50818, 294, 597, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 294, 341, 1389, 13, 50964, 50964, 407, 729, 3344, 19368, 510, 366, 1936, 51190, 51190, 6771, 294, 257, 5952, 4295, 13, 51264, 51264, 814, 434, 2281, 2115, 11, 45558, 2281, 2115, 51366, 51366, 294, 428, 2281, 2445, 13, 51480, 51480, 400, 428, 5598, 307, 257, 8310, 11, 294, 341, 1389, 51668, 51668, 257, 8310, 295, 1451, 16944, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12721143075085561, "compression_ratio": 1.682608695652174, "no_speech_prob": 6.396157550625503e-05}, {"id": 292, "seek": 85824, "start": 874.76, "end": 876.24, "text": " factors in a factor graph.", "tokens": [50364, 2264, 11, 370, 718, 311, 584, 291, 362, 257, 2539, 1185, 300, 50522, 50522, 307, 18204, 295, 364, 4846, 2031, 13, 50634, 50634, 467, 2170, 364, 4846, 2031, 11, 293, 309, 311, 364, 2281, 2316, 50818, 50818, 294, 597, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 294, 341, 1389, 13, 50964, 50964, 407, 729, 3344, 19368, 510, 366, 1936, 51190, 51190, 6771, 294, 257, 5952, 4295, 13, 51264, 51264, 814, 434, 2281, 2115, 11, 45558, 2281, 2115, 51366, 51366, 294, 428, 2281, 2445, 13, 51480, 51480, 400, 428, 5598, 307, 257, 8310, 11, 294, 341, 1389, 51668, 51668, 257, 8310, 295, 1451, 16944, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12721143075085561, "compression_ratio": 1.682608695652174, "no_speech_prob": 6.396157550625503e-05}, {"id": 293, "seek": 85824, "start": 876.24, "end": 878.28, "text": " They're energy terms, additive energy terms", "tokens": [50364, 2264, 11, 370, 718, 311, 584, 291, 362, 257, 2539, 1185, 300, 50522, 50522, 307, 18204, 295, 364, 4846, 2031, 13, 50634, 50634, 467, 2170, 364, 4846, 2031, 11, 293, 309, 311, 364, 2281, 2316, 50818, 50818, 294, 597, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 294, 341, 1389, 13, 50964, 50964, 407, 729, 3344, 19368, 510, 366, 1936, 51190, 51190, 6771, 294, 257, 5952, 4295, 13, 51264, 51264, 814, 434, 2281, 2115, 11, 45558, 2281, 2115, 51366, 51366, 294, 428, 2281, 2445, 13, 51480, 51480, 400, 428, 5598, 307, 257, 8310, 11, 294, 341, 1389, 51668, 51668, 257, 8310, 295, 1451, 16944, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12721143075085561, "compression_ratio": 1.682608695652174, "no_speech_prob": 6.396157550625503e-05}, {"id": 294, "seek": 85824, "start": 878.28, "end": 880.5600000000001, "text": " in your energy function.", "tokens": [50364, 2264, 11, 370, 718, 311, 584, 291, 362, 257, 2539, 1185, 300, 50522, 50522, 307, 18204, 295, 364, 4846, 2031, 13, 50634, 50634, 467, 2170, 364, 4846, 2031, 11, 293, 309, 311, 364, 2281, 2316, 50818, 50818, 294, 597, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 294, 341, 1389, 13, 50964, 50964, 407, 729, 3344, 19368, 510, 366, 1936, 51190, 51190, 6771, 294, 257, 5952, 4295, 13, 51264, 51264, 814, 434, 2281, 2115, 11, 45558, 2281, 2115, 51366, 51366, 294, 428, 2281, 2445, 13, 51480, 51480, 400, 428, 5598, 307, 257, 8310, 11, 294, 341, 1389, 51668, 51668, 257, 8310, 295, 1451, 16944, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12721143075085561, "compression_ratio": 1.682608695652174, "no_speech_prob": 6.396157550625503e-05}, {"id": 295, "seek": 85824, "start": 880.5600000000001, "end": 884.32, "text": " And your output is a sequence, in this case", "tokens": [50364, 2264, 11, 370, 718, 311, 584, 291, 362, 257, 2539, 1185, 300, 50522, 50522, 307, 18204, 295, 364, 4846, 2031, 13, 50634, 50634, 467, 2170, 364, 4846, 2031, 11, 293, 309, 311, 364, 2281, 2316, 50818, 50818, 294, 597, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 294, 341, 1389, 13, 50964, 50964, 407, 729, 3344, 19368, 510, 366, 1936, 51190, 51190, 6771, 294, 257, 5952, 4295, 13, 51264, 51264, 814, 434, 2281, 2115, 11, 45558, 2281, 2115, 51366, 51366, 294, 428, 2281, 2445, 13, 51480, 51480, 400, 428, 5598, 307, 257, 8310, 11, 294, 341, 1389, 51668, 51668, 257, 8310, 295, 1451, 16944, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12721143075085561, "compression_ratio": 1.682608695652174, "no_speech_prob": 6.396157550625503e-05}, {"id": 296, "seek": 85824, "start": 884.32, "end": 887.12, "text": " a sequence of four symbols.", "tokens": [50364, 2264, 11, 370, 718, 311, 584, 291, 362, 257, 2539, 1185, 300, 50522, 50522, 307, 18204, 295, 364, 4846, 2031, 13, 50634, 50634, 467, 2170, 364, 4846, 2031, 11, 293, 309, 311, 364, 2281, 2316, 50818, 50818, 294, 597, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 294, 341, 1389, 13, 50964, 50964, 407, 729, 3344, 19368, 510, 366, 1936, 51190, 51190, 6771, 294, 257, 5952, 4295, 13, 51264, 51264, 814, 434, 2281, 2115, 11, 45558, 2281, 2115, 51366, 51366, 294, 428, 2281, 2445, 13, 51480, 51480, 400, 428, 5598, 307, 257, 8310, 11, 294, 341, 1389, 51668, 51668, 257, 8310, 295, 1451, 16944, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12721143075085561, "compression_ratio": 1.682608695652174, "no_speech_prob": 6.396157550625503e-05}, {"id": 297, "seek": 88712, "start": 887.12, "end": 892.84, "text": " And those symbols do not all contribute to all the terms", "tokens": [50364, 400, 729, 16944, 360, 406, 439, 10586, 281, 439, 264, 2115, 50650, 50650, 294, 264, 2281, 13, 50678, 50678, 407, 1936, 11, 428, 2281, 2445, 11, 264, 700, 1433, 11, 50804, 50804, 2516, 666, 2696, 264, 700, 732, 16944, 420, 9102, 51146, 51146, 294, 428, 8310, 295, 5598, 13, 51260, 51260, 440, 1150, 472, 2516, 264, 1150, 732, 13, 51352, 51352, 440, 2636, 472, 2516, 264, 2636, 293, 6409, 13, 51558, 51558, 823, 3811, 300, 341, 645, 257, 8310, 295, 2283, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1484576380530069, "compression_ratio": 1.7382198952879582, "no_speech_prob": 5.337810762284789e-06}, {"id": 298, "seek": 88712, "start": 892.84, "end": 893.4, "text": " in the energy.", "tokens": [50364, 400, 729, 16944, 360, 406, 439, 10586, 281, 439, 264, 2115, 50650, 50650, 294, 264, 2281, 13, 50678, 50678, 407, 1936, 11, 428, 2281, 2445, 11, 264, 700, 1433, 11, 50804, 50804, 2516, 666, 2696, 264, 700, 732, 16944, 420, 9102, 51146, 51146, 294, 428, 8310, 295, 5598, 13, 51260, 51260, 440, 1150, 472, 2516, 264, 1150, 732, 13, 51352, 51352, 440, 2636, 472, 2516, 264, 2636, 293, 6409, 13, 51558, 51558, 823, 3811, 300, 341, 645, 257, 8310, 295, 2283, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1484576380530069, "compression_ratio": 1.7382198952879582, "no_speech_prob": 5.337810762284789e-06}, {"id": 299, "seek": 88712, "start": 893.4, "end": 895.92, "text": " So basically, your energy function, the first term,", "tokens": [50364, 400, 729, 16944, 360, 406, 439, 10586, 281, 439, 264, 2115, 50650, 50650, 294, 264, 2281, 13, 50678, 50678, 407, 1936, 11, 428, 2281, 2445, 11, 264, 700, 1433, 11, 50804, 50804, 2516, 666, 2696, 264, 700, 732, 16944, 420, 9102, 51146, 51146, 294, 428, 8310, 295, 5598, 13, 51260, 51260, 440, 1150, 472, 2516, 264, 1150, 732, 13, 51352, 51352, 440, 2636, 472, 2516, 264, 2636, 293, 6409, 13, 51558, 51558, 823, 3811, 300, 341, 645, 257, 8310, 295, 2283, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1484576380530069, "compression_ratio": 1.7382198952879582, "no_speech_prob": 5.337810762284789e-06}, {"id": 300, "seek": 88712, "start": 895.92, "end": 902.76, "text": " takes into account the first two symbols or variables", "tokens": [50364, 400, 729, 16944, 360, 406, 439, 10586, 281, 439, 264, 2115, 50650, 50650, 294, 264, 2281, 13, 50678, 50678, 407, 1936, 11, 428, 2281, 2445, 11, 264, 700, 1433, 11, 50804, 50804, 2516, 666, 2696, 264, 700, 732, 16944, 420, 9102, 51146, 51146, 294, 428, 8310, 295, 5598, 13, 51260, 51260, 440, 1150, 472, 2516, 264, 1150, 732, 13, 51352, 51352, 440, 2636, 472, 2516, 264, 2636, 293, 6409, 13, 51558, 51558, 823, 3811, 300, 341, 645, 257, 8310, 295, 2283, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1484576380530069, "compression_ratio": 1.7382198952879582, "no_speech_prob": 5.337810762284789e-06}, {"id": 301, "seek": 88712, "start": 902.76, "end": 905.04, "text": " in your sequence of output.", "tokens": [50364, 400, 729, 16944, 360, 406, 439, 10586, 281, 439, 264, 2115, 50650, 50650, 294, 264, 2281, 13, 50678, 50678, 407, 1936, 11, 428, 2281, 2445, 11, 264, 700, 1433, 11, 50804, 50804, 2516, 666, 2696, 264, 700, 732, 16944, 420, 9102, 51146, 51146, 294, 428, 8310, 295, 5598, 13, 51260, 51260, 440, 1150, 472, 2516, 264, 1150, 732, 13, 51352, 51352, 440, 2636, 472, 2516, 264, 2636, 293, 6409, 13, 51558, 51558, 823, 3811, 300, 341, 645, 257, 8310, 295, 2283, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1484576380530069, "compression_ratio": 1.7382198952879582, "no_speech_prob": 5.337810762284789e-06}, {"id": 302, "seek": 88712, "start": 905.04, "end": 906.88, "text": " The second one takes the second two.", "tokens": [50364, 400, 729, 16944, 360, 406, 439, 10586, 281, 439, 264, 2115, 50650, 50650, 294, 264, 2281, 13, 50678, 50678, 407, 1936, 11, 428, 2281, 2445, 11, 264, 700, 1433, 11, 50804, 50804, 2516, 666, 2696, 264, 700, 732, 16944, 420, 9102, 51146, 51146, 294, 428, 8310, 295, 5598, 13, 51260, 51260, 440, 1150, 472, 2516, 264, 1150, 732, 13, 51352, 51352, 440, 2636, 472, 2516, 264, 2636, 293, 6409, 13, 51558, 51558, 823, 3811, 300, 341, 645, 257, 8310, 295, 2283, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1484576380530069, "compression_ratio": 1.7382198952879582, "no_speech_prob": 5.337810762284789e-06}, {"id": 303, "seek": 88712, "start": 906.88, "end": 911.0, "text": " The third one takes the third and fourth.", "tokens": [50364, 400, 729, 16944, 360, 406, 439, 10586, 281, 439, 264, 2115, 50650, 50650, 294, 264, 2281, 13, 50678, 50678, 407, 1936, 11, 428, 2281, 2445, 11, 264, 700, 1433, 11, 50804, 50804, 2516, 666, 2696, 264, 700, 732, 16944, 420, 9102, 51146, 51146, 294, 428, 8310, 295, 5598, 13, 51260, 51260, 440, 1150, 472, 2516, 264, 1150, 732, 13, 51352, 51352, 440, 2636, 472, 2516, 264, 2636, 293, 6409, 13, 51558, 51558, 823, 3811, 300, 341, 645, 257, 8310, 295, 2283, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1484576380530069, "compression_ratio": 1.7382198952879582, "no_speech_prob": 5.337810762284789e-06}, {"id": 304, "seek": 88712, "start": 911.0, "end": 916.04, "text": " Now imagine that this were a sequence of words,", "tokens": [50364, 400, 729, 16944, 360, 406, 439, 10586, 281, 439, 264, 2115, 50650, 50650, 294, 264, 2281, 13, 50678, 50678, 407, 1936, 11, 428, 2281, 2445, 11, 264, 700, 1433, 11, 50804, 50804, 2516, 666, 2696, 264, 700, 732, 16944, 420, 9102, 51146, 51146, 294, 428, 8310, 295, 5598, 13, 51260, 51260, 440, 1150, 472, 2516, 264, 1150, 732, 13, 51352, 51352, 440, 2636, 472, 2516, 264, 2636, 293, 6409, 13, 51558, 51558, 823, 3811, 300, 341, 645, 257, 8310, 295, 2283, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1484576380530069, "compression_ratio": 1.7382198952879582, "no_speech_prob": 5.337810762284789e-06}, {"id": 305, "seek": 91604, "start": 916.04, "end": 918.16, "text": " and your system was supposed to do something like speech", "tokens": [50364, 293, 428, 1185, 390, 3442, 281, 360, 746, 411, 6218, 50470, 50470, 11150, 420, 746, 13, 50528, 50528, 407, 2031, 307, 264, 6218, 6358, 13, 50640, 50640, 682, 264, 3344, 9002, 11, 291, 362, 18161, 36170, 50720, 50720, 293, 3683, 661, 721, 13, 50778, 50778, 821, 1062, 312, 1071, 18161, 2533, 300, 1542, 412, 2031, 50908, 50908, 293, 550, 14725, 4111, 18875, 50972, 50972, 300, 352, 666, 729, 9002, 11, 457, 300, 311, 257, 2607, 337, 586, 13, 51194, 51194, 400, 437, 729, 3344, 9002, 576, 362, 281, 4445, 51454, 51454, 307, 1936, 17570, 267, 804, 18491, 13, 51558, 51558, 407, 294, 3669, 11, 1629, 2283, 393, 1524, 2357, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1391336625082451, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.165473622677382e-05}, {"id": 306, "seek": 91604, "start": 918.16, "end": 919.3199999999999, "text": " recognition or something.", "tokens": [50364, 293, 428, 1185, 390, 3442, 281, 360, 746, 411, 6218, 50470, 50470, 11150, 420, 746, 13, 50528, 50528, 407, 2031, 307, 264, 6218, 6358, 13, 50640, 50640, 682, 264, 3344, 9002, 11, 291, 362, 18161, 36170, 50720, 50720, 293, 3683, 661, 721, 13, 50778, 50778, 821, 1062, 312, 1071, 18161, 2533, 300, 1542, 412, 2031, 50908, 50908, 293, 550, 14725, 4111, 18875, 50972, 50972, 300, 352, 666, 729, 9002, 11, 457, 300, 311, 257, 2607, 337, 586, 13, 51194, 51194, 400, 437, 729, 3344, 9002, 576, 362, 281, 4445, 51454, 51454, 307, 1936, 17570, 267, 804, 18491, 13, 51558, 51558, 407, 294, 3669, 11, 1629, 2283, 393, 1524, 2357, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1391336625082451, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.165473622677382e-05}, {"id": 307, "seek": 91604, "start": 919.3199999999999, "end": 921.56, "text": " So x is the speech signal.", "tokens": [50364, 293, 428, 1185, 390, 3442, 281, 360, 746, 411, 6218, 50470, 50470, 11150, 420, 746, 13, 50528, 50528, 407, 2031, 307, 264, 6218, 6358, 13, 50640, 50640, 682, 264, 3344, 9002, 11, 291, 362, 18161, 36170, 50720, 50720, 293, 3683, 661, 721, 13, 50778, 50778, 821, 1062, 312, 1071, 18161, 2533, 300, 1542, 412, 2031, 50908, 50908, 293, 550, 14725, 4111, 18875, 50972, 50972, 300, 352, 666, 729, 9002, 11, 457, 300, 311, 257, 2607, 337, 586, 13, 51194, 51194, 400, 437, 729, 3344, 9002, 576, 362, 281, 4445, 51454, 51454, 307, 1936, 17570, 267, 804, 18491, 13, 51558, 51558, 407, 294, 3669, 11, 1629, 2283, 393, 1524, 2357, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1391336625082451, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.165473622677382e-05}, {"id": 308, "seek": 91604, "start": 921.56, "end": 923.16, "text": " In the blue boxes, you have neural nets", "tokens": [50364, 293, 428, 1185, 390, 3442, 281, 360, 746, 411, 6218, 50470, 50470, 11150, 420, 746, 13, 50528, 50528, 407, 2031, 307, 264, 6218, 6358, 13, 50640, 50640, 682, 264, 3344, 9002, 11, 291, 362, 18161, 36170, 50720, 50720, 293, 3683, 661, 721, 13, 50778, 50778, 821, 1062, 312, 1071, 18161, 2533, 300, 1542, 412, 2031, 50908, 50908, 293, 550, 14725, 4111, 18875, 50972, 50972, 300, 352, 666, 729, 9002, 11, 457, 300, 311, 257, 2607, 337, 586, 13, 51194, 51194, 400, 437, 729, 3344, 9002, 576, 362, 281, 4445, 51454, 51454, 307, 1936, 17570, 267, 804, 18491, 13, 51558, 51558, 407, 294, 3669, 11, 1629, 2283, 393, 1524, 2357, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1391336625082451, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.165473622677382e-05}, {"id": 309, "seek": 91604, "start": 923.16, "end": 924.3199999999999, "text": " and various other things.", "tokens": [50364, 293, 428, 1185, 390, 3442, 281, 360, 746, 411, 6218, 50470, 50470, 11150, 420, 746, 13, 50528, 50528, 407, 2031, 307, 264, 6218, 6358, 13, 50640, 50640, 682, 264, 3344, 9002, 11, 291, 362, 18161, 36170, 50720, 50720, 293, 3683, 661, 721, 13, 50778, 50778, 821, 1062, 312, 1071, 18161, 2533, 300, 1542, 412, 2031, 50908, 50908, 293, 550, 14725, 4111, 18875, 50972, 50972, 300, 352, 666, 729, 9002, 11, 457, 300, 311, 257, 2607, 337, 586, 13, 51194, 51194, 400, 437, 729, 3344, 9002, 576, 362, 281, 4445, 51454, 51454, 307, 1936, 17570, 267, 804, 18491, 13, 51558, 51558, 407, 294, 3669, 11, 1629, 2283, 393, 1524, 2357, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1391336625082451, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.165473622677382e-05}, {"id": 310, "seek": 91604, "start": 924.3199999999999, "end": 926.92, "text": " There might be another neural net that looks at x", "tokens": [50364, 293, 428, 1185, 390, 3442, 281, 360, 746, 411, 6218, 50470, 50470, 11150, 420, 746, 13, 50528, 50528, 407, 2031, 307, 264, 6218, 6358, 13, 50640, 50640, 682, 264, 3344, 9002, 11, 291, 362, 18161, 36170, 50720, 50720, 293, 3683, 661, 721, 13, 50778, 50778, 821, 1062, 312, 1071, 18161, 2533, 300, 1542, 412, 2031, 50908, 50908, 293, 550, 14725, 4111, 18875, 50972, 50972, 300, 352, 666, 729, 9002, 11, 457, 300, 311, 257, 2607, 337, 586, 13, 51194, 51194, 400, 437, 729, 3344, 9002, 576, 362, 281, 4445, 51454, 51454, 307, 1936, 17570, 267, 804, 18491, 13, 51558, 51558, 407, 294, 3669, 11, 1629, 2283, 393, 1524, 2357, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1391336625082451, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.165473622677382e-05}, {"id": 311, "seek": 91604, "start": 926.92, "end": 928.1999999999999, "text": " and then produces feature vectors", "tokens": [50364, 293, 428, 1185, 390, 3442, 281, 360, 746, 411, 6218, 50470, 50470, 11150, 420, 746, 13, 50528, 50528, 407, 2031, 307, 264, 6218, 6358, 13, 50640, 50640, 682, 264, 3344, 9002, 11, 291, 362, 18161, 36170, 50720, 50720, 293, 3683, 661, 721, 13, 50778, 50778, 821, 1062, 312, 1071, 18161, 2533, 300, 1542, 412, 2031, 50908, 50908, 293, 550, 14725, 4111, 18875, 50972, 50972, 300, 352, 666, 729, 9002, 11, 457, 300, 311, 257, 2607, 337, 586, 13, 51194, 51194, 400, 437, 729, 3344, 9002, 576, 362, 281, 4445, 51454, 51454, 307, 1936, 17570, 267, 804, 18491, 13, 51558, 51558, 407, 294, 3669, 11, 1629, 2283, 393, 1524, 2357, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1391336625082451, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.165473622677382e-05}, {"id": 312, "seek": 91604, "start": 928.1999999999999, "end": 932.64, "text": " that go into those boxes, but that's a detail for now.", "tokens": [50364, 293, 428, 1185, 390, 3442, 281, 360, 746, 411, 6218, 50470, 50470, 11150, 420, 746, 13, 50528, 50528, 407, 2031, 307, 264, 6218, 6358, 13, 50640, 50640, 682, 264, 3344, 9002, 11, 291, 362, 18161, 36170, 50720, 50720, 293, 3683, 661, 721, 13, 50778, 50778, 821, 1062, 312, 1071, 18161, 2533, 300, 1542, 412, 2031, 50908, 50908, 293, 550, 14725, 4111, 18875, 50972, 50972, 300, 352, 666, 729, 9002, 11, 457, 300, 311, 257, 2607, 337, 586, 13, 51194, 51194, 400, 437, 729, 3344, 9002, 576, 362, 281, 4445, 51454, 51454, 307, 1936, 17570, 267, 804, 18491, 13, 51558, 51558, 407, 294, 3669, 11, 1629, 2283, 393, 1524, 2357, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1391336625082451, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.165473622677382e-05}, {"id": 313, "seek": 91604, "start": 932.64, "end": 937.8399999999999, "text": " And what those blue boxes would have to implement", "tokens": [50364, 293, 428, 1185, 390, 3442, 281, 360, 746, 411, 6218, 50470, 50470, 11150, 420, 746, 13, 50528, 50528, 407, 2031, 307, 264, 6218, 6358, 13, 50640, 50640, 682, 264, 3344, 9002, 11, 291, 362, 18161, 36170, 50720, 50720, 293, 3683, 661, 721, 13, 50778, 50778, 821, 1062, 312, 1071, 18161, 2533, 300, 1542, 412, 2031, 50908, 50908, 293, 550, 14725, 4111, 18875, 50972, 50972, 300, 352, 666, 729, 9002, 11, 457, 300, 311, 257, 2607, 337, 586, 13, 51194, 51194, 400, 437, 729, 3344, 9002, 576, 362, 281, 4445, 51454, 51454, 307, 1936, 17570, 267, 804, 18491, 13, 51558, 51558, 407, 294, 3669, 11, 1629, 2283, 393, 1524, 2357, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1391336625082451, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.165473622677382e-05}, {"id": 314, "seek": 91604, "start": 937.8399999999999, "end": 939.92, "text": " is basically grammatical constraints.", "tokens": [50364, 293, 428, 1185, 390, 3442, 281, 360, 746, 411, 6218, 50470, 50470, 11150, 420, 746, 13, 50528, 50528, 407, 2031, 307, 264, 6218, 6358, 13, 50640, 50640, 682, 264, 3344, 9002, 11, 291, 362, 18161, 36170, 50720, 50720, 293, 3683, 661, 721, 13, 50778, 50778, 821, 1062, 312, 1071, 18161, 2533, 300, 1542, 412, 2031, 50908, 50908, 293, 550, 14725, 4111, 18875, 50972, 50972, 300, 352, 666, 729, 9002, 11, 457, 300, 311, 257, 2607, 337, 586, 13, 51194, 51194, 400, 437, 729, 3344, 9002, 576, 362, 281, 4445, 51454, 51454, 307, 1936, 17570, 267, 804, 18491, 13, 51558, 51558, 407, 294, 3669, 11, 1629, 2283, 393, 1524, 2357, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1391336625082451, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.165473622677382e-05}, {"id": 315, "seek": 91604, "start": 939.92, "end": 944.52, "text": " So in English, certain words can follow others,", "tokens": [50364, 293, 428, 1185, 390, 3442, 281, 360, 746, 411, 6218, 50470, 50470, 11150, 420, 746, 13, 50528, 50528, 407, 2031, 307, 264, 6218, 6358, 13, 50640, 50640, 682, 264, 3344, 9002, 11, 291, 362, 18161, 36170, 50720, 50720, 293, 3683, 661, 721, 13, 50778, 50778, 821, 1062, 312, 1071, 18161, 2533, 300, 1542, 412, 2031, 50908, 50908, 293, 550, 14725, 4111, 18875, 50972, 50972, 300, 352, 666, 729, 9002, 11, 457, 300, 311, 257, 2607, 337, 586, 13, 51194, 51194, 400, 437, 729, 3344, 9002, 576, 362, 281, 4445, 51454, 51454, 307, 1936, 17570, 267, 804, 18491, 13, 51558, 51558, 407, 294, 3669, 11, 1629, 2283, 393, 1524, 2357, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1391336625082451, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.165473622677382e-05}, {"id": 316, "seek": 94452, "start": 944.52, "end": 946.48, "text": " but not others.", "tokens": [50364, 457, 406, 2357, 13, 50462, 50462, 407, 291, 13752, 362, 732, 30051, 300, 1524, 1184, 661, 13, 50704, 50704, 400, 370, 291, 727, 4445, 341, 294, 341, 2281, 1433, 50946, 50946, 300, 576, 652, 291, 1689, 257, 3218, 337, 1455, 51138, 51138, 257, 9595, 1524, 1071, 9595, 420, 1419, 11, 51338, 51338, 286, 500, 380, 458, 11, 732, 2666, 329, 2451, 13, 51426, 51426, 509, 393, 362, 732, 29378, 1539, 300, 1524, 1184, 661, 11, 51544, 51544, 721, 411, 300, 13, 51596, 51596, 407, 1936, 11, 729, 576, 4445, 51696, 51696, 3875, 17570, 267, 804, 4474, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1272292184357596, "compression_ratio": 1.7089201877934272, "no_speech_prob": 3.5006673897441942e-06}, {"id": 317, "seek": 94452, "start": 946.48, "end": 951.3199999999999, "text": " So you rarely have two verbs that follow each other.", "tokens": [50364, 457, 406, 2357, 13, 50462, 50462, 407, 291, 13752, 362, 732, 30051, 300, 1524, 1184, 661, 13, 50704, 50704, 400, 370, 291, 727, 4445, 341, 294, 341, 2281, 1433, 50946, 50946, 300, 576, 652, 291, 1689, 257, 3218, 337, 1455, 51138, 51138, 257, 9595, 1524, 1071, 9595, 420, 1419, 11, 51338, 51338, 286, 500, 380, 458, 11, 732, 2666, 329, 2451, 13, 51426, 51426, 509, 393, 362, 732, 29378, 1539, 300, 1524, 1184, 661, 11, 51544, 51544, 721, 411, 300, 13, 51596, 51596, 407, 1936, 11, 729, 576, 4445, 51696, 51696, 3875, 17570, 267, 804, 4474, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1272292184357596, "compression_ratio": 1.7089201877934272, "no_speech_prob": 3.5006673897441942e-06}, {"id": 318, "seek": 94452, "start": 951.3199999999999, "end": 956.16, "text": " And so you could implement this in this energy term", "tokens": [50364, 457, 406, 2357, 13, 50462, 50462, 407, 291, 13752, 362, 732, 30051, 300, 1524, 1184, 661, 13, 50704, 50704, 400, 370, 291, 727, 4445, 341, 294, 341, 2281, 1433, 50946, 50946, 300, 576, 652, 291, 1689, 257, 3218, 337, 1455, 51138, 51138, 257, 9595, 1524, 1071, 9595, 420, 1419, 11, 51338, 51338, 286, 500, 380, 458, 11, 732, 2666, 329, 2451, 13, 51426, 51426, 509, 393, 362, 732, 29378, 1539, 300, 1524, 1184, 661, 11, 51544, 51544, 721, 411, 300, 13, 51596, 51596, 407, 1936, 11, 729, 576, 4445, 51696, 51696, 3875, 17570, 267, 804, 4474, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1272292184357596, "compression_ratio": 1.7089201877934272, "no_speech_prob": 3.5006673897441942e-06}, {"id": 319, "seek": 94452, "start": 956.16, "end": 960.0, "text": " that would make you pay a price for making", "tokens": [50364, 457, 406, 2357, 13, 50462, 50462, 407, 291, 13752, 362, 732, 30051, 300, 1524, 1184, 661, 13, 50704, 50704, 400, 370, 291, 727, 4445, 341, 294, 341, 2281, 1433, 50946, 50946, 300, 576, 652, 291, 1689, 257, 3218, 337, 1455, 51138, 51138, 257, 9595, 1524, 1071, 9595, 420, 1419, 11, 51338, 51338, 286, 500, 380, 458, 11, 732, 2666, 329, 2451, 13, 51426, 51426, 509, 393, 362, 732, 29378, 1539, 300, 1524, 1184, 661, 11, 51544, 51544, 721, 411, 300, 13, 51596, 51596, 407, 1936, 11, 729, 576, 4445, 51696, 51696, 3875, 17570, 267, 804, 4474, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1272292184357596, "compression_ratio": 1.7089201877934272, "no_speech_prob": 3.5006673897441942e-06}, {"id": 320, "seek": 94452, "start": 960.0, "end": 964.0, "text": " a verb follow another verb or having,", "tokens": [50364, 457, 406, 2357, 13, 50462, 50462, 407, 291, 13752, 362, 732, 30051, 300, 1524, 1184, 661, 13, 50704, 50704, 400, 370, 291, 727, 4445, 341, 294, 341, 2281, 1433, 50946, 50946, 300, 576, 652, 291, 1689, 257, 3218, 337, 1455, 51138, 51138, 257, 9595, 1524, 1071, 9595, 420, 1419, 11, 51338, 51338, 286, 500, 380, 458, 11, 732, 2666, 329, 2451, 13, 51426, 51426, 509, 393, 362, 732, 29378, 1539, 300, 1524, 1184, 661, 11, 51544, 51544, 721, 411, 300, 13, 51596, 51596, 407, 1936, 11, 729, 576, 4445, 51696, 51696, 3875, 17570, 267, 804, 4474, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1272292184357596, "compression_ratio": 1.7089201877934272, "no_speech_prob": 3.5006673897441942e-06}, {"id": 321, "seek": 94452, "start": 964.0, "end": 965.76, "text": " I don't know, two prepositions.", "tokens": [50364, 457, 406, 2357, 13, 50462, 50462, 407, 291, 13752, 362, 732, 30051, 300, 1524, 1184, 661, 13, 50704, 50704, 400, 370, 291, 727, 4445, 341, 294, 341, 2281, 1433, 50946, 50946, 300, 576, 652, 291, 1689, 257, 3218, 337, 1455, 51138, 51138, 257, 9595, 1524, 1071, 9595, 420, 1419, 11, 51338, 51338, 286, 500, 380, 458, 11, 732, 2666, 329, 2451, 13, 51426, 51426, 509, 393, 362, 732, 29378, 1539, 300, 1524, 1184, 661, 11, 51544, 51544, 721, 411, 300, 13, 51596, 51596, 407, 1936, 11, 729, 576, 4445, 51696, 51696, 3875, 17570, 267, 804, 4474, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1272292184357596, "compression_ratio": 1.7089201877934272, "no_speech_prob": 3.5006673897441942e-06}, {"id": 322, "seek": 94452, "start": 965.76, "end": 968.12, "text": " You can have two adjectives that follow each other,", "tokens": [50364, 457, 406, 2357, 13, 50462, 50462, 407, 291, 13752, 362, 732, 30051, 300, 1524, 1184, 661, 13, 50704, 50704, 400, 370, 291, 727, 4445, 341, 294, 341, 2281, 1433, 50946, 50946, 300, 576, 652, 291, 1689, 257, 3218, 337, 1455, 51138, 51138, 257, 9595, 1524, 1071, 9595, 420, 1419, 11, 51338, 51338, 286, 500, 380, 458, 11, 732, 2666, 329, 2451, 13, 51426, 51426, 509, 393, 362, 732, 29378, 1539, 300, 1524, 1184, 661, 11, 51544, 51544, 721, 411, 300, 13, 51596, 51596, 407, 1936, 11, 729, 576, 4445, 51696, 51696, 3875, 17570, 267, 804, 4474, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1272292184357596, "compression_ratio": 1.7089201877934272, "no_speech_prob": 3.5006673897441942e-06}, {"id": 323, "seek": 94452, "start": 968.12, "end": 969.16, "text": " things like that.", "tokens": [50364, 457, 406, 2357, 13, 50462, 50462, 407, 291, 13752, 362, 732, 30051, 300, 1524, 1184, 661, 13, 50704, 50704, 400, 370, 291, 727, 4445, 341, 294, 341, 2281, 1433, 50946, 50946, 300, 576, 652, 291, 1689, 257, 3218, 337, 1455, 51138, 51138, 257, 9595, 1524, 1071, 9595, 420, 1419, 11, 51338, 51338, 286, 500, 380, 458, 11, 732, 2666, 329, 2451, 13, 51426, 51426, 509, 393, 362, 732, 29378, 1539, 300, 1524, 1184, 661, 11, 51544, 51544, 721, 411, 300, 13, 51596, 51596, 407, 1936, 11, 729, 576, 4445, 51696, 51696, 3875, 17570, 267, 804, 4474, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1272292184357596, "compression_ratio": 1.7089201877934272, "no_speech_prob": 3.5006673897441942e-06}, {"id": 324, "seek": 94452, "start": 969.16, "end": 971.16, "text": " So basically, those would implement", "tokens": [50364, 457, 406, 2357, 13, 50462, 50462, 407, 291, 13752, 362, 732, 30051, 300, 1524, 1184, 661, 13, 50704, 50704, 400, 370, 291, 727, 4445, 341, 294, 341, 2281, 1433, 50946, 50946, 300, 576, 652, 291, 1689, 257, 3218, 337, 1455, 51138, 51138, 257, 9595, 1524, 1071, 9595, 420, 1419, 11, 51338, 51338, 286, 500, 380, 458, 11, 732, 2666, 329, 2451, 13, 51426, 51426, 509, 393, 362, 732, 29378, 1539, 300, 1524, 1184, 661, 11, 51544, 51544, 721, 411, 300, 13, 51596, 51596, 407, 1936, 11, 729, 576, 4445, 51696, 51696, 3875, 17570, 267, 804, 4474, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1272292184357596, "compression_ratio": 1.7089201877934272, "no_speech_prob": 3.5006673897441942e-06}, {"id": 325, "seek": 94452, "start": 971.16, "end": 972.64, "text": " basic grammatical rules.", "tokens": [50364, 457, 406, 2357, 13, 50462, 50462, 407, 291, 13752, 362, 732, 30051, 300, 1524, 1184, 661, 13, 50704, 50704, 400, 370, 291, 727, 4445, 341, 294, 341, 2281, 1433, 50946, 50946, 300, 576, 652, 291, 1689, 257, 3218, 337, 1455, 51138, 51138, 257, 9595, 1524, 1071, 9595, 420, 1419, 11, 51338, 51338, 286, 500, 380, 458, 11, 732, 2666, 329, 2451, 13, 51426, 51426, 509, 393, 362, 732, 29378, 1539, 300, 1524, 1184, 661, 11, 51544, 51544, 721, 411, 300, 13, 51596, 51596, 407, 1936, 11, 729, 576, 4445, 51696, 51696, 3875, 17570, 267, 804, 4474, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1272292184357596, "compression_ratio": 1.7089201877934272, "no_speech_prob": 3.5006673897441942e-06}, {"id": 326, "seek": 97264, "start": 972.64, "end": 974.84, "text": " And you can think of this as a language model.", "tokens": [50364, 400, 291, 393, 519, 295, 341, 382, 257, 2856, 2316, 13, 50474, 50474, 407, 286, 458, 437, 1349, 1361, 949, 13, 50602, 50602, 5115, 385, 437, 1349, 393, 808, 934, 13, 50708, 50708, 400, 286, 393, 3847, 341, 322, 264, 1181, 31624, 295, 2487, 50814, 50814, 281, 1466, 341, 2281, 2445, 13, 50964, 50964, 407, 309, 576, 312, 257, 588, 3875, 30796, 2856, 2316, 13, 51172, 51172, 407, 341, 2010, 295, 2316, 576, 4445, 257, 588, 30796, 2856, 51320, 51320, 2316, 538, 445, 1940, 264, 3894, 1349, 51430, 51430, 293, 550, 3585, 291, 437, 958, 2283, 366, 1944, 11, 51618, 51618, 1455, 291, 1689, 257, 3218, 337, 8867, 257, 1349, 300, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09011754574983016, "compression_ratio": 1.778688524590164, "no_speech_prob": 1.028729366225889e-05}, {"id": 327, "seek": 97264, "start": 974.84, "end": 977.4, "text": " So I know what word came before.", "tokens": [50364, 400, 291, 393, 519, 295, 341, 382, 257, 2856, 2316, 13, 50474, 50474, 407, 286, 458, 437, 1349, 1361, 949, 13, 50602, 50602, 5115, 385, 437, 1349, 393, 808, 934, 13, 50708, 50708, 400, 286, 393, 3847, 341, 322, 264, 1181, 31624, 295, 2487, 50814, 50814, 281, 1466, 341, 2281, 2445, 13, 50964, 50964, 407, 309, 576, 312, 257, 588, 3875, 30796, 2856, 2316, 13, 51172, 51172, 407, 341, 2010, 295, 2316, 576, 4445, 257, 588, 30796, 2856, 51320, 51320, 2316, 538, 445, 1940, 264, 3894, 1349, 51430, 51430, 293, 550, 3585, 291, 437, 958, 2283, 366, 1944, 11, 51618, 51618, 1455, 291, 1689, 257, 3218, 337, 8867, 257, 1349, 300, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09011754574983016, "compression_ratio": 1.778688524590164, "no_speech_prob": 1.028729366225889e-05}, {"id": 328, "seek": 97264, "start": 977.4, "end": 979.52, "text": " Tell me what word can come after.", "tokens": [50364, 400, 291, 393, 519, 295, 341, 382, 257, 2856, 2316, 13, 50474, 50474, 407, 286, 458, 437, 1349, 1361, 949, 13, 50602, 50602, 5115, 385, 437, 1349, 393, 808, 934, 13, 50708, 50708, 400, 286, 393, 3847, 341, 322, 264, 1181, 31624, 295, 2487, 50814, 50814, 281, 1466, 341, 2281, 2445, 13, 50964, 50964, 407, 309, 576, 312, 257, 588, 3875, 30796, 2856, 2316, 13, 51172, 51172, 407, 341, 2010, 295, 2316, 576, 4445, 257, 588, 30796, 2856, 51320, 51320, 2316, 538, 445, 1940, 264, 3894, 1349, 51430, 51430, 293, 550, 3585, 291, 437, 958, 2283, 366, 1944, 11, 51618, 51618, 1455, 291, 1689, 257, 3218, 337, 8867, 257, 1349, 300, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09011754574983016, "compression_ratio": 1.778688524590164, "no_speech_prob": 1.028729366225889e-05}, {"id": 329, "seek": 97264, "start": 979.52, "end": 981.64, "text": " And I can train this on the corpus of text", "tokens": [50364, 400, 291, 393, 519, 295, 341, 382, 257, 2856, 2316, 13, 50474, 50474, 407, 286, 458, 437, 1349, 1361, 949, 13, 50602, 50602, 5115, 385, 437, 1349, 393, 808, 934, 13, 50708, 50708, 400, 286, 393, 3847, 341, 322, 264, 1181, 31624, 295, 2487, 50814, 50814, 281, 1466, 341, 2281, 2445, 13, 50964, 50964, 407, 309, 576, 312, 257, 588, 3875, 30796, 2856, 2316, 13, 51172, 51172, 407, 341, 2010, 295, 2316, 576, 4445, 257, 588, 30796, 2856, 51320, 51320, 2316, 538, 445, 1940, 264, 3894, 1349, 51430, 51430, 293, 550, 3585, 291, 437, 958, 2283, 366, 1944, 11, 51618, 51618, 1455, 291, 1689, 257, 3218, 337, 8867, 257, 1349, 300, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09011754574983016, "compression_ratio": 1.778688524590164, "no_speech_prob": 1.028729366225889e-05}, {"id": 330, "seek": 97264, "start": 981.64, "end": 984.64, "text": " to learn this energy function.", "tokens": [50364, 400, 291, 393, 519, 295, 341, 382, 257, 2856, 2316, 13, 50474, 50474, 407, 286, 458, 437, 1349, 1361, 949, 13, 50602, 50602, 5115, 385, 437, 1349, 393, 808, 934, 13, 50708, 50708, 400, 286, 393, 3847, 341, 322, 264, 1181, 31624, 295, 2487, 50814, 50814, 281, 1466, 341, 2281, 2445, 13, 50964, 50964, 407, 309, 576, 312, 257, 588, 3875, 30796, 2856, 2316, 13, 51172, 51172, 407, 341, 2010, 295, 2316, 576, 4445, 257, 588, 30796, 2856, 51320, 51320, 2316, 538, 445, 1940, 264, 3894, 1349, 51430, 51430, 293, 550, 3585, 291, 437, 958, 2283, 366, 1944, 11, 51618, 51618, 1455, 291, 1689, 257, 3218, 337, 8867, 257, 1349, 300, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09011754574983016, "compression_ratio": 1.778688524590164, "no_speech_prob": 1.028729366225889e-05}, {"id": 331, "seek": 97264, "start": 984.64, "end": 988.8, "text": " So it would be a very basic crude language model.", "tokens": [50364, 400, 291, 393, 519, 295, 341, 382, 257, 2856, 2316, 13, 50474, 50474, 407, 286, 458, 437, 1349, 1361, 949, 13, 50602, 50602, 5115, 385, 437, 1349, 393, 808, 934, 13, 50708, 50708, 400, 286, 393, 3847, 341, 322, 264, 1181, 31624, 295, 2487, 50814, 50814, 281, 1466, 341, 2281, 2445, 13, 50964, 50964, 407, 309, 576, 312, 257, 588, 3875, 30796, 2856, 2316, 13, 51172, 51172, 407, 341, 2010, 295, 2316, 576, 4445, 257, 588, 30796, 2856, 51320, 51320, 2316, 538, 445, 1940, 264, 3894, 1349, 51430, 51430, 293, 550, 3585, 291, 437, 958, 2283, 366, 1944, 11, 51618, 51618, 1455, 291, 1689, 257, 3218, 337, 8867, 257, 1349, 300, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09011754574983016, "compression_ratio": 1.778688524590164, "no_speech_prob": 1.028729366225889e-05}, {"id": 332, "seek": 97264, "start": 988.8, "end": 991.76, "text": " So this type of model would implement a very crude language", "tokens": [50364, 400, 291, 393, 519, 295, 341, 382, 257, 2856, 2316, 13, 50474, 50474, 407, 286, 458, 437, 1349, 1361, 949, 13, 50602, 50602, 5115, 385, 437, 1349, 393, 808, 934, 13, 50708, 50708, 400, 286, 393, 3847, 341, 322, 264, 1181, 31624, 295, 2487, 50814, 50814, 281, 1466, 341, 2281, 2445, 13, 50964, 50964, 407, 309, 576, 312, 257, 588, 3875, 30796, 2856, 2316, 13, 51172, 51172, 407, 341, 2010, 295, 2316, 576, 4445, 257, 588, 30796, 2856, 51320, 51320, 2316, 538, 445, 1940, 264, 3894, 1349, 51430, 51430, 293, 550, 3585, 291, 437, 958, 2283, 366, 1944, 11, 51618, 51618, 1455, 291, 1689, 257, 3218, 337, 8867, 257, 1349, 300, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09011754574983016, "compression_ratio": 1.778688524590164, "no_speech_prob": 1.028729366225889e-05}, {"id": 333, "seek": 97264, "start": 991.76, "end": 993.96, "text": " model by just taking the previous word", "tokens": [50364, 400, 291, 393, 519, 295, 341, 382, 257, 2856, 2316, 13, 50474, 50474, 407, 286, 458, 437, 1349, 1361, 949, 13, 50602, 50602, 5115, 385, 437, 1349, 393, 808, 934, 13, 50708, 50708, 400, 286, 393, 3847, 341, 322, 264, 1181, 31624, 295, 2487, 50814, 50814, 281, 1466, 341, 2281, 2445, 13, 50964, 50964, 407, 309, 576, 312, 257, 588, 3875, 30796, 2856, 2316, 13, 51172, 51172, 407, 341, 2010, 295, 2316, 576, 4445, 257, 588, 30796, 2856, 51320, 51320, 2316, 538, 445, 1940, 264, 3894, 1349, 51430, 51430, 293, 550, 3585, 291, 437, 958, 2283, 366, 1944, 11, 51618, 51618, 1455, 291, 1689, 257, 3218, 337, 8867, 257, 1349, 300, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09011754574983016, "compression_ratio": 1.778688524590164, "no_speech_prob": 1.028729366225889e-05}, {"id": 334, "seek": 97264, "start": 993.96, "end": 997.72, "text": " and then telling you what next words are possible,", "tokens": [50364, 400, 291, 393, 519, 295, 341, 382, 257, 2856, 2316, 13, 50474, 50474, 407, 286, 458, 437, 1349, 1361, 949, 13, 50602, 50602, 5115, 385, 437, 1349, 393, 808, 934, 13, 50708, 50708, 400, 286, 393, 3847, 341, 322, 264, 1181, 31624, 295, 2487, 50814, 50814, 281, 1466, 341, 2281, 2445, 13, 50964, 50964, 407, 309, 576, 312, 257, 588, 3875, 30796, 2856, 2316, 13, 51172, 51172, 407, 341, 2010, 295, 2316, 576, 4445, 257, 588, 30796, 2856, 51320, 51320, 2316, 538, 445, 1940, 264, 3894, 1349, 51430, 51430, 293, 550, 3585, 291, 437, 958, 2283, 366, 1944, 11, 51618, 51618, 1455, 291, 1689, 257, 3218, 337, 8867, 257, 1349, 300, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09011754574983016, "compression_ratio": 1.778688524590164, "no_speech_prob": 1.028729366225889e-05}, {"id": 335, "seek": 97264, "start": 997.72, "end": 1000.0, "text": " making you pay a price for picking a word that", "tokens": [50364, 400, 291, 393, 519, 295, 341, 382, 257, 2856, 2316, 13, 50474, 50474, 407, 286, 458, 437, 1349, 1361, 949, 13, 50602, 50602, 5115, 385, 437, 1349, 393, 808, 934, 13, 50708, 50708, 400, 286, 393, 3847, 341, 322, 264, 1181, 31624, 295, 2487, 50814, 50814, 281, 1466, 341, 2281, 2445, 13, 50964, 50964, 407, 309, 576, 312, 257, 588, 3875, 30796, 2856, 2316, 13, 51172, 51172, 407, 341, 2010, 295, 2316, 576, 4445, 257, 588, 30796, 2856, 51320, 51320, 2316, 538, 445, 1940, 264, 3894, 1349, 51430, 51430, 293, 550, 3585, 291, 437, 958, 2283, 366, 1944, 11, 51618, 51618, 1455, 291, 1689, 257, 3218, 337, 8867, 257, 1349, 300, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09011754574983016, "compression_ratio": 1.778688524590164, "no_speech_prob": 1.028729366225889e-05}, {"id": 336, "seek": 100000, "start": 1000.0, "end": 1004.4, "text": " is not correct.", "tokens": [50364, 307, 406, 3006, 13, 50584, 50584, 2264, 11, 370, 577, 291, 360, 38253, 30, 50740, 50740, 639, 307, 445, 1936, 364, 2281, 2316, 510, 11, 50894, 50894, 597, 294, 341, 1389, 1177, 380, 767, 50972, 50972, 362, 257, 48994, 7006, 13, 51020, 51020, 583, 1936, 11, 286, 976, 291, 364, 2031, 11, 293, 291, 51158, 51158, 362, 281, 915, 264, 8310, 295, 288, 300, 4464, 5660, 264, 2281, 13, 51290, 51290, 583, 294, 341, 1389, 11, 570, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 11, 51452, 51452, 456, 366, 7148, 2098, 281, 915, 264, 8310, 295, 288, 311, 51594, 51594, 300, 17522, 264, 2281, 300, 815, 406, 51676, 51676, 3651, 257, 2584, 14687, 488, 3164, 420, 16235, 23475, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16050058070237075, "compression_ratio": 1.751908396946565, "no_speech_prob": 1.2605738447746262e-05}, {"id": 337, "seek": 100000, "start": 1004.4, "end": 1007.52, "text": " OK, so how you do inference?", "tokens": [50364, 307, 406, 3006, 13, 50584, 50584, 2264, 11, 370, 577, 291, 360, 38253, 30, 50740, 50740, 639, 307, 445, 1936, 364, 2281, 2316, 510, 11, 50894, 50894, 597, 294, 341, 1389, 1177, 380, 767, 50972, 50972, 362, 257, 48994, 7006, 13, 51020, 51020, 583, 1936, 11, 286, 976, 291, 364, 2031, 11, 293, 291, 51158, 51158, 362, 281, 915, 264, 8310, 295, 288, 300, 4464, 5660, 264, 2281, 13, 51290, 51290, 583, 294, 341, 1389, 11, 570, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 11, 51452, 51452, 456, 366, 7148, 2098, 281, 915, 264, 8310, 295, 288, 311, 51594, 51594, 300, 17522, 264, 2281, 300, 815, 406, 51676, 51676, 3651, 257, 2584, 14687, 488, 3164, 420, 16235, 23475, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16050058070237075, "compression_ratio": 1.751908396946565, "no_speech_prob": 1.2605738447746262e-05}, {"id": 338, "seek": 100000, "start": 1007.52, "end": 1010.6, "text": " This is just basically an energy model here,", "tokens": [50364, 307, 406, 3006, 13, 50584, 50584, 2264, 11, 370, 577, 291, 360, 38253, 30, 50740, 50740, 639, 307, 445, 1936, 364, 2281, 2316, 510, 11, 50894, 50894, 597, 294, 341, 1389, 1177, 380, 767, 50972, 50972, 362, 257, 48994, 7006, 13, 51020, 51020, 583, 1936, 11, 286, 976, 291, 364, 2031, 11, 293, 291, 51158, 51158, 362, 281, 915, 264, 8310, 295, 288, 300, 4464, 5660, 264, 2281, 13, 51290, 51290, 583, 294, 341, 1389, 11, 570, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 11, 51452, 51452, 456, 366, 7148, 2098, 281, 915, 264, 8310, 295, 288, 311, 51594, 51594, 300, 17522, 264, 2281, 300, 815, 406, 51676, 51676, 3651, 257, 2584, 14687, 488, 3164, 420, 16235, 23475, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16050058070237075, "compression_ratio": 1.751908396946565, "no_speech_prob": 1.2605738447746262e-05}, {"id": 339, "seek": 100000, "start": 1010.6, "end": 1012.16, "text": " which in this case doesn't actually", "tokens": [50364, 307, 406, 3006, 13, 50584, 50584, 2264, 11, 370, 577, 291, 360, 38253, 30, 50740, 50740, 639, 307, 445, 1936, 364, 2281, 2316, 510, 11, 50894, 50894, 597, 294, 341, 1389, 1177, 380, 767, 50972, 50972, 362, 257, 48994, 7006, 13, 51020, 51020, 583, 1936, 11, 286, 976, 291, 364, 2031, 11, 293, 291, 51158, 51158, 362, 281, 915, 264, 8310, 295, 288, 300, 4464, 5660, 264, 2281, 13, 51290, 51290, 583, 294, 341, 1389, 11, 570, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 11, 51452, 51452, 456, 366, 7148, 2098, 281, 915, 264, 8310, 295, 288, 311, 51594, 51594, 300, 17522, 264, 2281, 300, 815, 406, 51676, 51676, 3651, 257, 2584, 14687, 488, 3164, 420, 16235, 23475, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16050058070237075, "compression_ratio": 1.751908396946565, "no_speech_prob": 1.2605738447746262e-05}, {"id": 340, "seek": 100000, "start": 1012.16, "end": 1013.12, "text": " have a latent variable.", "tokens": [50364, 307, 406, 3006, 13, 50584, 50584, 2264, 11, 370, 577, 291, 360, 38253, 30, 50740, 50740, 639, 307, 445, 1936, 364, 2281, 2316, 510, 11, 50894, 50894, 597, 294, 341, 1389, 1177, 380, 767, 50972, 50972, 362, 257, 48994, 7006, 13, 51020, 51020, 583, 1936, 11, 286, 976, 291, 364, 2031, 11, 293, 291, 51158, 51158, 362, 281, 915, 264, 8310, 295, 288, 300, 4464, 5660, 264, 2281, 13, 51290, 51290, 583, 294, 341, 1389, 11, 570, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 11, 51452, 51452, 456, 366, 7148, 2098, 281, 915, 264, 8310, 295, 288, 311, 51594, 51594, 300, 17522, 264, 2281, 300, 815, 406, 51676, 51676, 3651, 257, 2584, 14687, 488, 3164, 420, 16235, 23475, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16050058070237075, "compression_ratio": 1.751908396946565, "no_speech_prob": 1.2605738447746262e-05}, {"id": 341, "seek": 100000, "start": 1013.12, "end": 1015.88, "text": " But basically, I give you an x, and you", "tokens": [50364, 307, 406, 3006, 13, 50584, 50584, 2264, 11, 370, 577, 291, 360, 38253, 30, 50740, 50740, 639, 307, 445, 1936, 364, 2281, 2316, 510, 11, 50894, 50894, 597, 294, 341, 1389, 1177, 380, 767, 50972, 50972, 362, 257, 48994, 7006, 13, 51020, 51020, 583, 1936, 11, 286, 976, 291, 364, 2031, 11, 293, 291, 51158, 51158, 362, 281, 915, 264, 8310, 295, 288, 300, 4464, 5660, 264, 2281, 13, 51290, 51290, 583, 294, 341, 1389, 11, 570, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 11, 51452, 51452, 456, 366, 7148, 2098, 281, 915, 264, 8310, 295, 288, 311, 51594, 51594, 300, 17522, 264, 2281, 300, 815, 406, 51676, 51676, 3651, 257, 2584, 14687, 488, 3164, 420, 16235, 23475, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16050058070237075, "compression_ratio": 1.751908396946565, "no_speech_prob": 1.2605738447746262e-05}, {"id": 342, "seek": 100000, "start": 1015.88, "end": 1018.52, "text": " have to find the sequence of y that minimizes the energy.", "tokens": [50364, 307, 406, 3006, 13, 50584, 50584, 2264, 11, 370, 577, 291, 360, 38253, 30, 50740, 50740, 639, 307, 445, 1936, 364, 2281, 2316, 510, 11, 50894, 50894, 597, 294, 341, 1389, 1177, 380, 767, 50972, 50972, 362, 257, 48994, 7006, 13, 51020, 51020, 583, 1936, 11, 286, 976, 291, 364, 2031, 11, 293, 291, 51158, 51158, 362, 281, 915, 264, 8310, 295, 288, 300, 4464, 5660, 264, 2281, 13, 51290, 51290, 583, 294, 341, 1389, 11, 570, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 11, 51452, 51452, 456, 366, 7148, 2098, 281, 915, 264, 8310, 295, 288, 311, 51594, 51594, 300, 17522, 264, 2281, 300, 815, 406, 51676, 51676, 3651, 257, 2584, 14687, 488, 3164, 420, 16235, 23475, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16050058070237075, "compression_ratio": 1.751908396946565, "no_speech_prob": 1.2605738447746262e-05}, {"id": 343, "seek": 100000, "start": 1018.52, "end": 1021.76, "text": " But in this case, because the energy is a sum of three terms,", "tokens": [50364, 307, 406, 3006, 13, 50584, 50584, 2264, 11, 370, 577, 291, 360, 38253, 30, 50740, 50740, 639, 307, 445, 1936, 364, 2281, 2316, 510, 11, 50894, 50894, 597, 294, 341, 1389, 1177, 380, 767, 50972, 50972, 362, 257, 48994, 7006, 13, 51020, 51020, 583, 1936, 11, 286, 976, 291, 364, 2031, 11, 293, 291, 51158, 51158, 362, 281, 915, 264, 8310, 295, 288, 300, 4464, 5660, 264, 2281, 13, 51290, 51290, 583, 294, 341, 1389, 11, 570, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 11, 51452, 51452, 456, 366, 7148, 2098, 281, 915, 264, 8310, 295, 288, 311, 51594, 51594, 300, 17522, 264, 2281, 300, 815, 406, 51676, 51676, 3651, 257, 2584, 14687, 488, 3164, 420, 16235, 23475, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16050058070237075, "compression_ratio": 1.751908396946565, "no_speech_prob": 1.2605738447746262e-05}, {"id": 344, "seek": 100000, "start": 1021.76, "end": 1024.6, "text": " there are efficient ways to find the sequence of y's", "tokens": [50364, 307, 406, 3006, 13, 50584, 50584, 2264, 11, 370, 577, 291, 360, 38253, 30, 50740, 50740, 639, 307, 445, 1936, 364, 2281, 2316, 510, 11, 50894, 50894, 597, 294, 341, 1389, 1177, 380, 767, 50972, 50972, 362, 257, 48994, 7006, 13, 51020, 51020, 583, 1936, 11, 286, 976, 291, 364, 2031, 11, 293, 291, 51158, 51158, 362, 281, 915, 264, 8310, 295, 288, 300, 4464, 5660, 264, 2281, 13, 51290, 51290, 583, 294, 341, 1389, 11, 570, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 11, 51452, 51452, 456, 366, 7148, 2098, 281, 915, 264, 8310, 295, 288, 311, 51594, 51594, 300, 17522, 264, 2281, 300, 815, 406, 51676, 51676, 3651, 257, 2584, 14687, 488, 3164, 420, 16235, 23475, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16050058070237075, "compression_ratio": 1.751908396946565, "no_speech_prob": 1.2605738447746262e-05}, {"id": 345, "seek": 100000, "start": 1024.6, "end": 1026.24, "text": " that minimize the energy that may not", "tokens": [50364, 307, 406, 3006, 13, 50584, 50584, 2264, 11, 370, 577, 291, 360, 38253, 30, 50740, 50740, 639, 307, 445, 1936, 364, 2281, 2316, 510, 11, 50894, 50894, 597, 294, 341, 1389, 1177, 380, 767, 50972, 50972, 362, 257, 48994, 7006, 13, 51020, 51020, 583, 1936, 11, 286, 976, 291, 364, 2031, 11, 293, 291, 51158, 51158, 362, 281, 915, 264, 8310, 295, 288, 300, 4464, 5660, 264, 2281, 13, 51290, 51290, 583, 294, 341, 1389, 11, 570, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 11, 51452, 51452, 456, 366, 7148, 2098, 281, 915, 264, 8310, 295, 288, 311, 51594, 51594, 300, 17522, 264, 2281, 300, 815, 406, 51676, 51676, 3651, 257, 2584, 14687, 488, 3164, 420, 16235, 23475, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16050058070237075, "compression_ratio": 1.751908396946565, "no_speech_prob": 1.2605738447746262e-05}, {"id": 346, "seek": 100000, "start": 1026.24, "end": 1029.2, "text": " require a completely exhaustive search or gradient descent", "tokens": [50364, 307, 406, 3006, 13, 50584, 50584, 2264, 11, 370, 577, 291, 360, 38253, 30, 50740, 50740, 639, 307, 445, 1936, 364, 2281, 2316, 510, 11, 50894, 50894, 597, 294, 341, 1389, 1177, 380, 767, 50972, 50972, 362, 257, 48994, 7006, 13, 51020, 51020, 583, 1936, 11, 286, 976, 291, 364, 2031, 11, 293, 291, 51158, 51158, 362, 281, 915, 264, 8310, 295, 288, 300, 4464, 5660, 264, 2281, 13, 51290, 51290, 583, 294, 341, 1389, 11, 570, 264, 2281, 307, 257, 2408, 295, 1045, 2115, 11, 51452, 51452, 456, 366, 7148, 2098, 281, 915, 264, 8310, 295, 288, 311, 51594, 51594, 300, 17522, 264, 2281, 300, 815, 406, 51676, 51676, 3651, 257, 2584, 14687, 488, 3164, 420, 16235, 23475, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16050058070237075, "compression_ratio": 1.751908396946565, "no_speech_prob": 1.2605738447746262e-05}, {"id": 347, "seek": 102920, "start": 1029.2, "end": 1030.4, "text": " or something like this.", "tokens": [50364, 420, 746, 411, 341, 13, 50424, 50424, 2264, 11, 293, 286, 478, 516, 281, 1081, 2059, 294, 257, 2590, 50532, 50532, 689, 264, 288, 311, 366, 767, 27706, 13, 50672, 50672, 407, 456, 311, 721, 411, 2283, 420, 3263, 420, 10479, 50834, 50834, 295, 512, 733, 13, 50860, 51104, 400, 370, 341, 13165, 281, 341, 2590, 51366, 51366, 689, 264, 9102, 291, 643, 281, 13596, 366, 439, 23930, 11, 597, 51570, 51570, 1355, 436, 434, 516, 281, 312, 8974, 322, 264, 3097, 992, 13, 51676, 51676, 400, 291, 393, 3847, 428, 1185, 281, 13596, 552, 8944, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19830307157913057, "compression_ratio": 1.6812227074235808, "no_speech_prob": 2.225113803433487e-06}, {"id": 348, "seek": 102920, "start": 1030.4, "end": 1032.56, "text": " OK, and I'm going to place myself in a situation", "tokens": [50364, 420, 746, 411, 341, 13, 50424, 50424, 2264, 11, 293, 286, 478, 516, 281, 1081, 2059, 294, 257, 2590, 50532, 50532, 689, 264, 288, 311, 366, 767, 27706, 13, 50672, 50672, 407, 456, 311, 721, 411, 2283, 420, 3263, 420, 10479, 50834, 50834, 295, 512, 733, 13, 50860, 51104, 400, 370, 341, 13165, 281, 341, 2590, 51366, 51366, 689, 264, 9102, 291, 643, 281, 13596, 366, 439, 23930, 11, 597, 51570, 51570, 1355, 436, 434, 516, 281, 312, 8974, 322, 264, 3097, 992, 13, 51676, 51676, 400, 291, 393, 3847, 428, 1185, 281, 13596, 552, 8944, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19830307157913057, "compression_ratio": 1.6812227074235808, "no_speech_prob": 2.225113803433487e-06}, {"id": 349, "seek": 102920, "start": 1032.56, "end": 1035.3600000000001, "text": " where the y's are actually discrete.", "tokens": [50364, 420, 746, 411, 341, 13, 50424, 50424, 2264, 11, 293, 286, 478, 516, 281, 1081, 2059, 294, 257, 2590, 50532, 50532, 689, 264, 288, 311, 366, 767, 27706, 13, 50672, 50672, 407, 456, 311, 721, 411, 2283, 420, 3263, 420, 10479, 50834, 50834, 295, 512, 733, 13, 50860, 51104, 400, 370, 341, 13165, 281, 341, 2590, 51366, 51366, 689, 264, 9102, 291, 643, 281, 13596, 366, 439, 23930, 11, 597, 51570, 51570, 1355, 436, 434, 516, 281, 312, 8974, 322, 264, 3097, 992, 13, 51676, 51676, 400, 291, 393, 3847, 428, 1185, 281, 13596, 552, 8944, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19830307157913057, "compression_ratio": 1.6812227074235808, "no_speech_prob": 2.225113803433487e-06}, {"id": 350, "seek": 102920, "start": 1035.3600000000001, "end": 1038.6000000000001, "text": " So there's things like words or sounds or categories", "tokens": [50364, 420, 746, 411, 341, 13, 50424, 50424, 2264, 11, 293, 286, 478, 516, 281, 1081, 2059, 294, 257, 2590, 50532, 50532, 689, 264, 288, 311, 366, 767, 27706, 13, 50672, 50672, 407, 456, 311, 721, 411, 2283, 420, 3263, 420, 10479, 50834, 50834, 295, 512, 733, 13, 50860, 51104, 400, 370, 341, 13165, 281, 341, 2590, 51366, 51366, 689, 264, 9102, 291, 643, 281, 13596, 366, 439, 23930, 11, 597, 51570, 51570, 1355, 436, 434, 516, 281, 312, 8974, 322, 264, 3097, 992, 13, 51676, 51676, 400, 291, 393, 3847, 428, 1185, 281, 13596, 552, 8944, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19830307157913057, "compression_ratio": 1.6812227074235808, "no_speech_prob": 2.225113803433487e-06}, {"id": 351, "seek": 102920, "start": 1038.6000000000001, "end": 1039.1200000000001, "text": " of some kind.", "tokens": [50364, 420, 746, 411, 341, 13, 50424, 50424, 2264, 11, 293, 286, 478, 516, 281, 1081, 2059, 294, 257, 2590, 50532, 50532, 689, 264, 288, 311, 366, 767, 27706, 13, 50672, 50672, 407, 456, 311, 721, 411, 2283, 420, 3263, 420, 10479, 50834, 50834, 295, 512, 733, 13, 50860, 51104, 400, 370, 341, 13165, 281, 341, 2590, 51366, 51366, 689, 264, 9102, 291, 643, 281, 13596, 366, 439, 23930, 11, 597, 51570, 51570, 1355, 436, 434, 516, 281, 312, 8974, 322, 264, 3097, 992, 13, 51676, 51676, 400, 291, 393, 3847, 428, 1185, 281, 13596, 552, 8944, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19830307157913057, "compression_ratio": 1.6812227074235808, "no_speech_prob": 2.225113803433487e-06}, {"id": 352, "seek": 102920, "start": 1044.0, "end": 1049.24, "text": " And so this applies to this situation", "tokens": [50364, 420, 746, 411, 341, 13, 50424, 50424, 2264, 11, 293, 286, 478, 516, 281, 1081, 2059, 294, 257, 2590, 50532, 50532, 689, 264, 288, 311, 366, 767, 27706, 13, 50672, 50672, 407, 456, 311, 721, 411, 2283, 420, 3263, 420, 10479, 50834, 50834, 295, 512, 733, 13, 50860, 51104, 400, 370, 341, 13165, 281, 341, 2590, 51366, 51366, 689, 264, 9102, 291, 643, 281, 13596, 366, 439, 23930, 11, 597, 51570, 51570, 1355, 436, 434, 516, 281, 312, 8974, 322, 264, 3097, 992, 13, 51676, 51676, 400, 291, 393, 3847, 428, 1185, 281, 13596, 552, 8944, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19830307157913057, "compression_ratio": 1.6812227074235808, "no_speech_prob": 2.225113803433487e-06}, {"id": 353, "seek": 102920, "start": 1049.24, "end": 1053.32, "text": " where the variables you need to infer are all outputs, which", "tokens": [50364, 420, 746, 411, 341, 13, 50424, 50424, 2264, 11, 293, 286, 478, 516, 281, 1081, 2059, 294, 257, 2590, 50532, 50532, 689, 264, 288, 311, 366, 767, 27706, 13, 50672, 50672, 407, 456, 311, 721, 411, 2283, 420, 3263, 420, 10479, 50834, 50834, 295, 512, 733, 13, 50860, 51104, 400, 370, 341, 13165, 281, 341, 2590, 51366, 51366, 689, 264, 9102, 291, 643, 281, 13596, 366, 439, 23930, 11, 597, 51570, 51570, 1355, 436, 434, 516, 281, 312, 8974, 322, 264, 3097, 992, 13, 51676, 51676, 400, 291, 393, 3847, 428, 1185, 281, 13596, 552, 8944, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19830307157913057, "compression_ratio": 1.6812227074235808, "no_speech_prob": 2.225113803433487e-06}, {"id": 354, "seek": 102920, "start": 1053.32, "end": 1055.44, "text": " means they're going to be visible on the training set.", "tokens": [50364, 420, 746, 411, 341, 13, 50424, 50424, 2264, 11, 293, 286, 478, 516, 281, 1081, 2059, 294, 257, 2590, 50532, 50532, 689, 264, 288, 311, 366, 767, 27706, 13, 50672, 50672, 407, 456, 311, 721, 411, 2283, 420, 3263, 420, 10479, 50834, 50834, 295, 512, 733, 13, 50860, 51104, 400, 370, 341, 13165, 281, 341, 2590, 51366, 51366, 689, 264, 9102, 291, 643, 281, 13596, 366, 439, 23930, 11, 597, 51570, 51570, 1355, 436, 434, 516, 281, 312, 8974, 322, 264, 3097, 992, 13, 51676, 51676, 400, 291, 393, 3847, 428, 1185, 281, 13596, 552, 8944, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19830307157913057, "compression_ratio": 1.6812227074235808, "no_speech_prob": 2.225113803433487e-06}, {"id": 355, "seek": 102920, "start": 1055.44, "end": 1058.68, "text": " And you can train your system to infer them correctly.", "tokens": [50364, 420, 746, 411, 341, 13, 50424, 50424, 2264, 11, 293, 286, 478, 516, 281, 1081, 2059, 294, 257, 2590, 50532, 50532, 689, 264, 288, 311, 366, 767, 27706, 13, 50672, 50672, 407, 456, 311, 721, 411, 2283, 420, 3263, 420, 10479, 50834, 50834, 295, 512, 733, 13, 50860, 51104, 400, 370, 341, 13165, 281, 341, 2590, 51366, 51366, 689, 264, 9102, 291, 643, 281, 13596, 366, 439, 23930, 11, 597, 51570, 51570, 1355, 436, 434, 516, 281, 312, 8974, 322, 264, 3097, 992, 13, 51676, 51676, 400, 291, 393, 3847, 428, 1185, 281, 13596, 552, 8944, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19830307157913057, "compression_ratio": 1.6812227074235808, "no_speech_prob": 2.225113803433487e-06}, {"id": 356, "seek": 105868, "start": 1058.68, "end": 1061.24, "text": " But it could also be another situation", "tokens": [50364, 583, 309, 727, 611, 312, 1071, 2590, 50492, 50492, 689, 512, 295, 264, 9102, 366, 13095, 11, 50630, 50630, 411, 2031, 510, 322, 264, 1411, 293, 288, 307, 13095, 50784, 50784, 1830, 3097, 322, 264, 558, 13, 50866, 50866, 583, 550, 439, 264, 19376, 9102, 366, 1128, 13095, 13, 50982, 50982, 821, 366, 48994, 9102, 291, 643, 281, 17522, 670, 382, 731, 13, 51186, 51186, 583, 797, 11, 510, 11, 341, 5952, 4295, 51258, 51258, 307, 5952, 1602, 294, 264, 2020, 300, 264, 2281, 51376, 51376, 307, 257, 2408, 295, 819, 2115, 300, 787, 747, 51604, 51604, 2090, 1385, 295, 264, 9102, 666, 2696, 13, 51686, 51810, 1057, 558, 11, 2264, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15328247793789568, "compression_ratio": 1.75390625, "no_speech_prob": 7.766252565488685e-06}, {"id": 357, "seek": 105868, "start": 1061.24, "end": 1064.0, "text": " where some of the variables are observed,", "tokens": [50364, 583, 309, 727, 611, 312, 1071, 2590, 50492, 50492, 689, 512, 295, 264, 9102, 366, 13095, 11, 50630, 50630, 411, 2031, 510, 322, 264, 1411, 293, 288, 307, 13095, 50784, 50784, 1830, 3097, 322, 264, 558, 13, 50866, 50866, 583, 550, 439, 264, 19376, 9102, 366, 1128, 13095, 13, 50982, 50982, 821, 366, 48994, 9102, 291, 643, 281, 17522, 670, 382, 731, 13, 51186, 51186, 583, 797, 11, 510, 11, 341, 5952, 4295, 51258, 51258, 307, 5952, 1602, 294, 264, 2020, 300, 264, 2281, 51376, 51376, 307, 257, 2408, 295, 819, 2115, 300, 787, 747, 51604, 51604, 2090, 1385, 295, 264, 9102, 666, 2696, 13, 51686, 51810, 1057, 558, 11, 2264, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15328247793789568, "compression_ratio": 1.75390625, "no_speech_prob": 7.766252565488685e-06}, {"id": 358, "seek": 105868, "start": 1064.0, "end": 1067.0800000000002, "text": " like x here on the left and y is observed", "tokens": [50364, 583, 309, 727, 611, 312, 1071, 2590, 50492, 50492, 689, 512, 295, 264, 9102, 366, 13095, 11, 50630, 50630, 411, 2031, 510, 322, 264, 1411, 293, 288, 307, 13095, 50784, 50784, 1830, 3097, 322, 264, 558, 13, 50866, 50866, 583, 550, 439, 264, 19376, 9102, 366, 1128, 13095, 13, 50982, 50982, 821, 366, 48994, 9102, 291, 643, 281, 17522, 670, 382, 731, 13, 51186, 51186, 583, 797, 11, 510, 11, 341, 5952, 4295, 51258, 51258, 307, 5952, 1602, 294, 264, 2020, 300, 264, 2281, 51376, 51376, 307, 257, 2408, 295, 819, 2115, 300, 787, 747, 51604, 51604, 2090, 1385, 295, 264, 9102, 666, 2696, 13, 51686, 51810, 1057, 558, 11, 2264, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15328247793789568, "compression_ratio": 1.75390625, "no_speech_prob": 7.766252565488685e-06}, {"id": 359, "seek": 105868, "start": 1067.0800000000002, "end": 1068.72, "text": " during training on the right.", "tokens": [50364, 583, 309, 727, 611, 312, 1071, 2590, 50492, 50492, 689, 512, 295, 264, 9102, 366, 13095, 11, 50630, 50630, 411, 2031, 510, 322, 264, 1411, 293, 288, 307, 13095, 50784, 50784, 1830, 3097, 322, 264, 558, 13, 50866, 50866, 583, 550, 439, 264, 19376, 9102, 366, 1128, 13095, 13, 50982, 50982, 821, 366, 48994, 9102, 291, 643, 281, 17522, 670, 382, 731, 13, 51186, 51186, 583, 797, 11, 510, 11, 341, 5952, 4295, 51258, 51258, 307, 5952, 1602, 294, 264, 2020, 300, 264, 2281, 51376, 51376, 307, 257, 2408, 295, 819, 2115, 300, 787, 747, 51604, 51604, 2090, 1385, 295, 264, 9102, 666, 2696, 13, 51686, 51810, 1057, 558, 11, 2264, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15328247793789568, "compression_ratio": 1.75390625, "no_speech_prob": 7.766252565488685e-06}, {"id": 360, "seek": 105868, "start": 1068.72, "end": 1071.04, "text": " But then all the intermediate variables are never observed.", "tokens": [50364, 583, 309, 727, 611, 312, 1071, 2590, 50492, 50492, 689, 512, 295, 264, 9102, 366, 13095, 11, 50630, 50630, 411, 2031, 510, 322, 264, 1411, 293, 288, 307, 13095, 50784, 50784, 1830, 3097, 322, 264, 558, 13, 50866, 50866, 583, 550, 439, 264, 19376, 9102, 366, 1128, 13095, 13, 50982, 50982, 821, 366, 48994, 9102, 291, 643, 281, 17522, 670, 382, 731, 13, 51186, 51186, 583, 797, 11, 510, 11, 341, 5952, 4295, 51258, 51258, 307, 5952, 1602, 294, 264, 2020, 300, 264, 2281, 51376, 51376, 307, 257, 2408, 295, 819, 2115, 300, 787, 747, 51604, 51604, 2090, 1385, 295, 264, 9102, 666, 2696, 13, 51686, 51810, 1057, 558, 11, 2264, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15328247793789568, "compression_ratio": 1.75390625, "no_speech_prob": 7.766252565488685e-06}, {"id": 361, "seek": 105868, "start": 1071.04, "end": 1075.1200000000001, "text": " There are latent variables you need to minimize over as well.", "tokens": [50364, 583, 309, 727, 611, 312, 1071, 2590, 50492, 50492, 689, 512, 295, 264, 9102, 366, 13095, 11, 50630, 50630, 411, 2031, 510, 322, 264, 1411, 293, 288, 307, 13095, 50784, 50784, 1830, 3097, 322, 264, 558, 13, 50866, 50866, 583, 550, 439, 264, 19376, 9102, 366, 1128, 13095, 13, 50982, 50982, 821, 366, 48994, 9102, 291, 643, 281, 17522, 670, 382, 731, 13, 51186, 51186, 583, 797, 11, 510, 11, 341, 5952, 4295, 51258, 51258, 307, 5952, 1602, 294, 264, 2020, 300, 264, 2281, 51376, 51376, 307, 257, 2408, 295, 819, 2115, 300, 787, 747, 51604, 51604, 2090, 1385, 295, 264, 9102, 666, 2696, 13, 51686, 51810, 1057, 558, 11, 2264, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15328247793789568, "compression_ratio": 1.75390625, "no_speech_prob": 7.766252565488685e-06}, {"id": 362, "seek": 105868, "start": 1075.1200000000001, "end": 1076.5600000000002, "text": " But again, here, this factor graph", "tokens": [50364, 583, 309, 727, 611, 312, 1071, 2590, 50492, 50492, 689, 512, 295, 264, 9102, 366, 13095, 11, 50630, 50630, 411, 2031, 510, 322, 264, 1411, 293, 288, 307, 13095, 50784, 50784, 1830, 3097, 322, 264, 558, 13, 50866, 50866, 583, 550, 439, 264, 19376, 9102, 366, 1128, 13095, 13, 50982, 50982, 821, 366, 48994, 9102, 291, 643, 281, 17522, 670, 382, 731, 13, 51186, 51186, 583, 797, 11, 510, 11, 341, 5952, 4295, 51258, 51258, 307, 5952, 1602, 294, 264, 2020, 300, 264, 2281, 51376, 51376, 307, 257, 2408, 295, 819, 2115, 300, 787, 747, 51604, 51604, 2090, 1385, 295, 264, 9102, 666, 2696, 13, 51686, 51810, 1057, 558, 11, 2264, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15328247793789568, "compression_ratio": 1.75390625, "no_speech_prob": 7.766252565488685e-06}, {"id": 363, "seek": 105868, "start": 1076.5600000000002, "end": 1078.92, "text": " is factorized in the sense that the energy", "tokens": [50364, 583, 309, 727, 611, 312, 1071, 2590, 50492, 50492, 689, 512, 295, 264, 9102, 366, 13095, 11, 50630, 50630, 411, 2031, 510, 322, 264, 1411, 293, 288, 307, 13095, 50784, 50784, 1830, 3097, 322, 264, 558, 13, 50866, 50866, 583, 550, 439, 264, 19376, 9102, 366, 1128, 13095, 13, 50982, 50982, 821, 366, 48994, 9102, 291, 643, 281, 17522, 670, 382, 731, 13, 51186, 51186, 583, 797, 11, 510, 11, 341, 5952, 4295, 51258, 51258, 307, 5952, 1602, 294, 264, 2020, 300, 264, 2281, 51376, 51376, 307, 257, 2408, 295, 819, 2115, 300, 787, 747, 51604, 51604, 2090, 1385, 295, 264, 9102, 666, 2696, 13, 51686, 51810, 1057, 558, 11, 2264, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15328247793789568, "compression_ratio": 1.75390625, "no_speech_prob": 7.766252565488685e-06}, {"id": 364, "seek": 105868, "start": 1078.92, "end": 1083.48, "text": " is a sum of different terms that only take", "tokens": [50364, 583, 309, 727, 611, 312, 1071, 2590, 50492, 50492, 689, 512, 295, 264, 9102, 366, 13095, 11, 50630, 50630, 411, 2031, 510, 322, 264, 1411, 293, 288, 307, 13095, 50784, 50784, 1830, 3097, 322, 264, 558, 13, 50866, 50866, 583, 550, 439, 264, 19376, 9102, 366, 1128, 13095, 13, 50982, 50982, 821, 366, 48994, 9102, 291, 643, 281, 17522, 670, 382, 731, 13, 51186, 51186, 583, 797, 11, 510, 11, 341, 5952, 4295, 51258, 51258, 307, 5952, 1602, 294, 264, 2020, 300, 264, 2281, 51376, 51376, 307, 257, 2408, 295, 819, 2115, 300, 787, 747, 51604, 51604, 2090, 1385, 295, 264, 9102, 666, 2696, 13, 51686, 51810, 1057, 558, 11, 2264, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15328247793789568, "compression_ratio": 1.75390625, "no_speech_prob": 7.766252565488685e-06}, {"id": 365, "seek": 105868, "start": 1083.48, "end": 1085.1200000000001, "text": " subsets of the variables into account.", "tokens": [50364, 583, 309, 727, 611, 312, 1071, 2590, 50492, 50492, 689, 512, 295, 264, 9102, 366, 13095, 11, 50630, 50630, 411, 2031, 510, 322, 264, 1411, 293, 288, 307, 13095, 50784, 50784, 1830, 3097, 322, 264, 558, 13, 50866, 50866, 583, 550, 439, 264, 19376, 9102, 366, 1128, 13095, 13, 50982, 50982, 821, 366, 48994, 9102, 291, 643, 281, 17522, 670, 382, 731, 13, 51186, 51186, 583, 797, 11, 510, 11, 341, 5952, 4295, 51258, 51258, 307, 5952, 1602, 294, 264, 2020, 300, 264, 2281, 51376, 51376, 307, 257, 2408, 295, 819, 2115, 300, 787, 747, 51604, 51604, 2090, 1385, 295, 264, 9102, 666, 2696, 13, 51686, 51810, 1057, 558, 11, 2264, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15328247793789568, "compression_ratio": 1.75390625, "no_speech_prob": 7.766252565488685e-06}, {"id": 366, "seek": 105868, "start": 1087.6000000000001, "end": 1088.44, "text": " All right, OK.", "tokens": [50364, 583, 309, 727, 611, 312, 1071, 2590, 50492, 50492, 689, 512, 295, 264, 9102, 366, 13095, 11, 50630, 50630, 411, 2031, 510, 322, 264, 1411, 293, 288, 307, 13095, 50784, 50784, 1830, 3097, 322, 264, 558, 13, 50866, 50866, 583, 550, 439, 264, 19376, 9102, 366, 1128, 13095, 13, 50982, 50982, 821, 366, 48994, 9102, 291, 643, 281, 17522, 670, 382, 731, 13, 51186, 51186, 583, 797, 11, 510, 11, 341, 5952, 4295, 51258, 51258, 307, 5952, 1602, 294, 264, 2020, 300, 264, 2281, 51376, 51376, 307, 257, 2408, 295, 819, 2115, 300, 787, 747, 51604, 51604, 2090, 1385, 295, 264, 9102, 666, 2696, 13, 51686, 51810, 1057, 558, 11, 2264, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15328247793789568, "compression_ratio": 1.75390625, "no_speech_prob": 7.766252565488685e-06}, {"id": 367, "seek": 108844, "start": 1088.44, "end": 1091.8, "text": " So let's take a very concrete example now.", "tokens": [50364, 407, 718, 311, 747, 257, 588, 9859, 1365, 586, 13, 50532, 50532, 400, 718, 311, 584, 264, 2281, 510, 294, 341, 1389, 50798, 50798, 307, 257, 2408, 295, 1451, 2281, 2115, 13, 50930, 51098, 440, 700, 732, 5672, 322, 2031, 11, 264, 14816, 13, 51306, 51306, 440, 1036, 732, 5672, 322, 288, 11, 597, 307, 264, 7006, 51440, 51440, 291, 643, 281, 6069, 11, 597, 291, 434, 51502, 51502, 2212, 1830, 3097, 457, 406, 1830, 1500, 13, 51592, 51592, 400, 550, 732, 661, 13891, 366, 48994, 7006, 13891, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.16261138710924375, "compression_ratio": 1.6600985221674878, "no_speech_prob": 4.7839339458732866e-06}, {"id": 368, "seek": 108844, "start": 1091.8, "end": 1097.1200000000001, "text": " And let's say the energy here in this case", "tokens": [50364, 407, 718, 311, 747, 257, 588, 9859, 1365, 586, 13, 50532, 50532, 400, 718, 311, 584, 264, 2281, 510, 294, 341, 1389, 50798, 50798, 307, 257, 2408, 295, 1451, 2281, 2115, 13, 50930, 51098, 440, 700, 732, 5672, 322, 2031, 11, 264, 14816, 13, 51306, 51306, 440, 1036, 732, 5672, 322, 288, 11, 597, 307, 264, 7006, 51440, 51440, 291, 643, 281, 6069, 11, 597, 291, 434, 51502, 51502, 2212, 1830, 3097, 457, 406, 1830, 1500, 13, 51592, 51592, 400, 550, 732, 661, 13891, 366, 48994, 7006, 13891, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.16261138710924375, "compression_ratio": 1.6600985221674878, "no_speech_prob": 4.7839339458732866e-06}, {"id": 369, "seek": 108844, "start": 1097.1200000000001, "end": 1099.76, "text": " is a sum of four energy terms.", "tokens": [50364, 407, 718, 311, 747, 257, 588, 9859, 1365, 586, 13, 50532, 50532, 400, 718, 311, 584, 264, 2281, 510, 294, 341, 1389, 50798, 50798, 307, 257, 2408, 295, 1451, 2281, 2115, 13, 50930, 51098, 440, 700, 732, 5672, 322, 2031, 11, 264, 14816, 13, 51306, 51306, 440, 1036, 732, 5672, 322, 288, 11, 597, 307, 264, 7006, 51440, 51440, 291, 643, 281, 6069, 11, 597, 291, 434, 51502, 51502, 2212, 1830, 3097, 457, 406, 1830, 1500, 13, 51592, 51592, 400, 550, 732, 661, 13891, 366, 48994, 7006, 13891, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.16261138710924375, "compression_ratio": 1.6600985221674878, "no_speech_prob": 4.7839339458732866e-06}, {"id": 370, "seek": 108844, "start": 1103.1200000000001, "end": 1107.28, "text": " The first two depend on x, the observation.", "tokens": [50364, 407, 718, 311, 747, 257, 588, 9859, 1365, 586, 13, 50532, 50532, 400, 718, 311, 584, 264, 2281, 510, 294, 341, 1389, 50798, 50798, 307, 257, 2408, 295, 1451, 2281, 2115, 13, 50930, 51098, 440, 700, 732, 5672, 322, 2031, 11, 264, 14816, 13, 51306, 51306, 440, 1036, 732, 5672, 322, 288, 11, 597, 307, 264, 7006, 51440, 51440, 291, 643, 281, 6069, 11, 597, 291, 434, 51502, 51502, 2212, 1830, 3097, 457, 406, 1830, 1500, 13, 51592, 51592, 400, 550, 732, 661, 13891, 366, 48994, 7006, 13891, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.16261138710924375, "compression_ratio": 1.6600985221674878, "no_speech_prob": 4.7839339458732866e-06}, {"id": 371, "seek": 108844, "start": 1107.28, "end": 1109.96, "text": " The last two depend on y, which is the variable", "tokens": [50364, 407, 718, 311, 747, 257, 588, 9859, 1365, 586, 13, 50532, 50532, 400, 718, 311, 584, 264, 2281, 510, 294, 341, 1389, 50798, 50798, 307, 257, 2408, 295, 1451, 2281, 2115, 13, 50930, 51098, 440, 700, 732, 5672, 322, 2031, 11, 264, 14816, 13, 51306, 51306, 440, 1036, 732, 5672, 322, 288, 11, 597, 307, 264, 7006, 51440, 51440, 291, 643, 281, 6069, 11, 597, 291, 434, 51502, 51502, 2212, 1830, 3097, 457, 406, 1830, 1500, 13, 51592, 51592, 400, 550, 732, 661, 13891, 366, 48994, 7006, 13891, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.16261138710924375, "compression_ratio": 1.6600985221674878, "no_speech_prob": 4.7839339458732866e-06}, {"id": 372, "seek": 108844, "start": 1109.96, "end": 1111.2, "text": " you need to predict, which you're", "tokens": [50364, 407, 718, 311, 747, 257, 588, 9859, 1365, 586, 13, 50532, 50532, 400, 718, 311, 584, 264, 2281, 510, 294, 341, 1389, 50798, 50798, 307, 257, 2408, 295, 1451, 2281, 2115, 13, 50930, 51098, 440, 700, 732, 5672, 322, 2031, 11, 264, 14816, 13, 51306, 51306, 440, 1036, 732, 5672, 322, 288, 11, 597, 307, 264, 7006, 51440, 51440, 291, 643, 281, 6069, 11, 597, 291, 434, 51502, 51502, 2212, 1830, 3097, 457, 406, 1830, 1500, 13, 51592, 51592, 400, 550, 732, 661, 13891, 366, 48994, 7006, 13891, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.16261138710924375, "compression_ratio": 1.6600985221674878, "no_speech_prob": 4.7839339458732866e-06}, {"id": 373, "seek": 108844, "start": 1111.2, "end": 1113.0, "text": " given during training but not during test.", "tokens": [50364, 407, 718, 311, 747, 257, 588, 9859, 1365, 586, 13, 50532, 50532, 400, 718, 311, 584, 264, 2281, 510, 294, 341, 1389, 50798, 50798, 307, 257, 2408, 295, 1451, 2281, 2115, 13, 50930, 51098, 440, 700, 732, 5672, 322, 2031, 11, 264, 14816, 13, 51306, 51306, 440, 1036, 732, 5672, 322, 288, 11, 597, 307, 264, 7006, 51440, 51440, 291, 643, 281, 6069, 11, 597, 291, 434, 51502, 51502, 2212, 1830, 3097, 457, 406, 1830, 1500, 13, 51592, 51592, 400, 550, 732, 661, 13891, 366, 48994, 7006, 13891, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.16261138710924375, "compression_ratio": 1.6600985221674878, "no_speech_prob": 4.7839339458732866e-06}, {"id": 374, "seek": 108844, "start": 1113.0, "end": 1116.1200000000001, "text": " And then two other nodes are latent variable nodes.", "tokens": [50364, 407, 718, 311, 747, 257, 588, 9859, 1365, 586, 13, 50532, 50532, 400, 718, 311, 584, 264, 2281, 510, 294, 341, 1389, 50798, 50798, 307, 257, 2408, 295, 1451, 2281, 2115, 13, 50930, 51098, 440, 700, 732, 5672, 322, 2031, 11, 264, 14816, 13, 51306, 51306, 440, 1036, 732, 5672, 322, 288, 11, 597, 307, 264, 7006, 51440, 51440, 291, 643, 281, 6069, 11, 597, 291, 434, 51502, 51502, 2212, 1830, 3097, 457, 406, 1830, 1500, 13, 51592, 51592, 400, 550, 732, 661, 13891, 366, 48994, 7006, 13891, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.16261138710924375, "compression_ratio": 1.6600985221674878, "no_speech_prob": 4.7839339458732866e-06}, {"id": 375, "seek": 111612, "start": 1116.12, "end": 1120.32, "text": " And let's say x is some high dimensional variable.", "tokens": [50364, 400, 718, 311, 584, 2031, 307, 512, 1090, 18795, 7006, 13, 50574, 50574, 492, 500, 380, 1127, 437, 309, 307, 570, 321, 445, 11441, 309, 13, 50700, 50700, 400, 710, 16, 307, 17434, 11, 710, 17, 307, 17434, 11, 288, 16, 307, 17434, 11, 50956, 50956, 293, 288, 17, 307, 256, 1248, 822, 13, 51042, 51042, 407, 309, 393, 747, 1045, 4190, 11, 1958, 11, 502, 11, 568, 13, 51246, 51246, 823, 11, 498, 291, 1207, 577, 867, 1944, 31493, 295, 710, 16, 11, 51448, 51448, 710, 17, 11, 288, 16, 11, 288, 17, 456, 366, 11, 456, 366, 1936, 4022, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1236572265625, "compression_ratio": 1.497584541062802, "no_speech_prob": 2.7693558877217583e-06}, {"id": 376, "seek": 111612, "start": 1120.32, "end": 1122.84, "text": " We don't care what it is because we just observe it.", "tokens": [50364, 400, 718, 311, 584, 2031, 307, 512, 1090, 18795, 7006, 13, 50574, 50574, 492, 500, 380, 1127, 437, 309, 307, 570, 321, 445, 11441, 309, 13, 50700, 50700, 400, 710, 16, 307, 17434, 11, 710, 17, 307, 17434, 11, 288, 16, 307, 17434, 11, 50956, 50956, 293, 288, 17, 307, 256, 1248, 822, 13, 51042, 51042, 407, 309, 393, 747, 1045, 4190, 11, 1958, 11, 502, 11, 568, 13, 51246, 51246, 823, 11, 498, 291, 1207, 577, 867, 1944, 31493, 295, 710, 16, 11, 51448, 51448, 710, 17, 11, 288, 16, 11, 288, 17, 456, 366, 11, 456, 366, 1936, 4022, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1236572265625, "compression_ratio": 1.497584541062802, "no_speech_prob": 2.7693558877217583e-06}, {"id": 377, "seek": 111612, "start": 1122.84, "end": 1127.9599999999998, "text": " And z1 is binary, z2 is binary, y1 is binary,", "tokens": [50364, 400, 718, 311, 584, 2031, 307, 512, 1090, 18795, 7006, 13, 50574, 50574, 492, 500, 380, 1127, 437, 309, 307, 570, 321, 445, 11441, 309, 13, 50700, 50700, 400, 710, 16, 307, 17434, 11, 710, 17, 307, 17434, 11, 288, 16, 307, 17434, 11, 50956, 50956, 293, 288, 17, 307, 256, 1248, 822, 13, 51042, 51042, 407, 309, 393, 747, 1045, 4190, 11, 1958, 11, 502, 11, 568, 13, 51246, 51246, 823, 11, 498, 291, 1207, 577, 867, 1944, 31493, 295, 710, 16, 11, 51448, 51448, 710, 17, 11, 288, 16, 11, 288, 17, 456, 366, 11, 456, 366, 1936, 4022, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1236572265625, "compression_ratio": 1.497584541062802, "no_speech_prob": 2.7693558877217583e-06}, {"id": 378, "seek": 111612, "start": 1127.9599999999998, "end": 1129.6799999999998, "text": " and y2 is ternary.", "tokens": [50364, 400, 718, 311, 584, 2031, 307, 512, 1090, 18795, 7006, 13, 50574, 50574, 492, 500, 380, 1127, 437, 309, 307, 570, 321, 445, 11441, 309, 13, 50700, 50700, 400, 710, 16, 307, 17434, 11, 710, 17, 307, 17434, 11, 288, 16, 307, 17434, 11, 50956, 50956, 293, 288, 17, 307, 256, 1248, 822, 13, 51042, 51042, 407, 309, 393, 747, 1045, 4190, 11, 1958, 11, 502, 11, 568, 13, 51246, 51246, 823, 11, 498, 291, 1207, 577, 867, 1944, 31493, 295, 710, 16, 11, 51448, 51448, 710, 17, 11, 288, 16, 11, 288, 17, 456, 366, 11, 456, 366, 1936, 4022, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1236572265625, "compression_ratio": 1.497584541062802, "no_speech_prob": 2.7693558877217583e-06}, {"id": 379, "seek": 111612, "start": 1129.6799999999998, "end": 1133.76, "text": " So it can take three values, 0, 1, 2.", "tokens": [50364, 400, 718, 311, 584, 2031, 307, 512, 1090, 18795, 7006, 13, 50574, 50574, 492, 500, 380, 1127, 437, 309, 307, 570, 321, 445, 11441, 309, 13, 50700, 50700, 400, 710, 16, 307, 17434, 11, 710, 17, 307, 17434, 11, 288, 16, 307, 17434, 11, 50956, 50956, 293, 288, 17, 307, 256, 1248, 822, 13, 51042, 51042, 407, 309, 393, 747, 1045, 4190, 11, 1958, 11, 502, 11, 568, 13, 51246, 51246, 823, 11, 498, 291, 1207, 577, 867, 1944, 31493, 295, 710, 16, 11, 51448, 51448, 710, 17, 11, 288, 16, 11, 288, 17, 456, 366, 11, 456, 366, 1936, 4022, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1236572265625, "compression_ratio": 1.497584541062802, "no_speech_prob": 2.7693558877217583e-06}, {"id": 380, "seek": 111612, "start": 1133.76, "end": 1137.8, "text": " Now, if you count how many possible configurations of z1,", "tokens": [50364, 400, 718, 311, 584, 2031, 307, 512, 1090, 18795, 7006, 13, 50574, 50574, 492, 500, 380, 1127, 437, 309, 307, 570, 321, 445, 11441, 309, 13, 50700, 50700, 400, 710, 16, 307, 17434, 11, 710, 17, 307, 17434, 11, 288, 16, 307, 17434, 11, 50956, 50956, 293, 288, 17, 307, 256, 1248, 822, 13, 51042, 51042, 407, 309, 393, 747, 1045, 4190, 11, 1958, 11, 502, 11, 568, 13, 51246, 51246, 823, 11, 498, 291, 1207, 577, 867, 1944, 31493, 295, 710, 16, 11, 51448, 51448, 710, 17, 11, 288, 16, 11, 288, 17, 456, 366, 11, 456, 366, 1936, 4022, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1236572265625, "compression_ratio": 1.497584541062802, "no_speech_prob": 2.7693558877217583e-06}, {"id": 381, "seek": 111612, "start": 1137.8, "end": 1146.0, "text": " z2, y1, y2 there are, there are basically 24.", "tokens": [50364, 400, 718, 311, 584, 2031, 307, 512, 1090, 18795, 7006, 13, 50574, 50574, 492, 500, 380, 1127, 437, 309, 307, 570, 321, 445, 11441, 309, 13, 50700, 50700, 400, 710, 16, 307, 17434, 11, 710, 17, 307, 17434, 11, 288, 16, 307, 17434, 11, 50956, 50956, 293, 288, 17, 307, 256, 1248, 822, 13, 51042, 51042, 407, 309, 393, 747, 1045, 4190, 11, 1958, 11, 502, 11, 568, 13, 51246, 51246, 823, 11, 498, 291, 1207, 577, 867, 1944, 31493, 295, 710, 16, 11, 51448, 51448, 710, 17, 11, 288, 16, 11, 288, 17, 456, 366, 11, 456, 366, 1936, 4022, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1236572265625, "compression_ratio": 1.497584541062802, "no_speech_prob": 2.7693558877217583e-06}, {"id": 382, "seek": 114600, "start": 1146.0, "end": 1148.92, "text": " 2 times 2 times 2 times 3, right?", "tokens": [50364, 568, 1413, 568, 1413, 568, 1413, 805, 11, 558, 30, 50510, 50510, 663, 311, 4022, 819, 1944, 31493, 295, 2158, 13, 50762, 50762, 407, 498, 291, 1415, 281, 360, 1900, 38253, 11, 50942, 50942, 291, 1062, 362, 281, 853, 439, 4022, 295, 729, 31493, 51084, 51084, 293, 550, 14722, 264, 2281, 295, 439, 4022, 51170, 51170, 295, 729, 31493, 293, 550, 1888, 264, 472, 51266, 51266, 365, 264, 12437, 2281, 281, 360, 38253, 11, 558, 30, 51472, 51472, 400, 294, 1186, 11, 729, 4022, 31493, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1345830231570126, "compression_ratio": 1.831578947368421, "no_speech_prob": 8.939136932895053e-06}, {"id": 383, "seek": 114600, "start": 1148.92, "end": 1153.96, "text": " That's 24 different possible configurations of value.", "tokens": [50364, 568, 1413, 568, 1413, 568, 1413, 805, 11, 558, 30, 50510, 50510, 663, 311, 4022, 819, 1944, 31493, 295, 2158, 13, 50762, 50762, 407, 498, 291, 1415, 281, 360, 1900, 38253, 11, 50942, 50942, 291, 1062, 362, 281, 853, 439, 4022, 295, 729, 31493, 51084, 51084, 293, 550, 14722, 264, 2281, 295, 439, 4022, 51170, 51170, 295, 729, 31493, 293, 550, 1888, 264, 472, 51266, 51266, 365, 264, 12437, 2281, 281, 360, 38253, 11, 558, 30, 51472, 51472, 400, 294, 1186, 11, 729, 4022, 31493, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1345830231570126, "compression_ratio": 1.831578947368421, "no_speech_prob": 8.939136932895053e-06}, {"id": 384, "seek": 114600, "start": 1153.96, "end": 1157.56, "text": " So if you wanted to do exact inference,", "tokens": [50364, 568, 1413, 568, 1413, 568, 1413, 805, 11, 558, 30, 50510, 50510, 663, 311, 4022, 819, 1944, 31493, 295, 2158, 13, 50762, 50762, 407, 498, 291, 1415, 281, 360, 1900, 38253, 11, 50942, 50942, 291, 1062, 362, 281, 853, 439, 4022, 295, 729, 31493, 51084, 51084, 293, 550, 14722, 264, 2281, 295, 439, 4022, 51170, 51170, 295, 729, 31493, 293, 550, 1888, 264, 472, 51266, 51266, 365, 264, 12437, 2281, 281, 360, 38253, 11, 558, 30, 51472, 51472, 400, 294, 1186, 11, 729, 4022, 31493, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1345830231570126, "compression_ratio": 1.831578947368421, "no_speech_prob": 8.939136932895053e-06}, {"id": 385, "seek": 114600, "start": 1157.56, "end": 1160.4, "text": " you might have to try all 24 of those configurations", "tokens": [50364, 568, 1413, 568, 1413, 568, 1413, 805, 11, 558, 30, 50510, 50510, 663, 311, 4022, 819, 1944, 31493, 295, 2158, 13, 50762, 50762, 407, 498, 291, 1415, 281, 360, 1900, 38253, 11, 50942, 50942, 291, 1062, 362, 281, 853, 439, 4022, 295, 729, 31493, 51084, 51084, 293, 550, 14722, 264, 2281, 295, 439, 4022, 51170, 51170, 295, 729, 31493, 293, 550, 1888, 264, 472, 51266, 51266, 365, 264, 12437, 2281, 281, 360, 38253, 11, 558, 30, 51472, 51472, 400, 294, 1186, 11, 729, 4022, 31493, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1345830231570126, "compression_ratio": 1.831578947368421, "no_speech_prob": 8.939136932895053e-06}, {"id": 386, "seek": 114600, "start": 1160.4, "end": 1162.12, "text": " and then compute the energy of all 24", "tokens": [50364, 568, 1413, 568, 1413, 568, 1413, 805, 11, 558, 30, 50510, 50510, 663, 311, 4022, 819, 1944, 31493, 295, 2158, 13, 50762, 50762, 407, 498, 291, 1415, 281, 360, 1900, 38253, 11, 50942, 50942, 291, 1062, 362, 281, 853, 439, 4022, 295, 729, 31493, 51084, 51084, 293, 550, 14722, 264, 2281, 295, 439, 4022, 51170, 51170, 295, 729, 31493, 293, 550, 1888, 264, 472, 51266, 51266, 365, 264, 12437, 2281, 281, 360, 38253, 11, 558, 30, 51472, 51472, 400, 294, 1186, 11, 729, 4022, 31493, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1345830231570126, "compression_ratio": 1.831578947368421, "no_speech_prob": 8.939136932895053e-06}, {"id": 387, "seek": 114600, "start": 1162.12, "end": 1164.04, "text": " of those configurations and then pick the one", "tokens": [50364, 568, 1413, 568, 1413, 568, 1413, 805, 11, 558, 30, 50510, 50510, 663, 311, 4022, 819, 1944, 31493, 295, 2158, 13, 50762, 50762, 407, 498, 291, 1415, 281, 360, 1900, 38253, 11, 50942, 50942, 291, 1062, 362, 281, 853, 439, 4022, 295, 729, 31493, 51084, 51084, 293, 550, 14722, 264, 2281, 295, 439, 4022, 51170, 51170, 295, 729, 31493, 293, 550, 1888, 264, 472, 51266, 51266, 365, 264, 12437, 2281, 281, 360, 38253, 11, 558, 30, 51472, 51472, 400, 294, 1186, 11, 729, 4022, 31493, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1345830231570126, "compression_ratio": 1.831578947368421, "no_speech_prob": 8.939136932895053e-06}, {"id": 388, "seek": 114600, "start": 1164.04, "end": 1168.16, "text": " with the lowest energy to do inference, right?", "tokens": [50364, 568, 1413, 568, 1413, 568, 1413, 805, 11, 558, 30, 50510, 50510, 663, 311, 4022, 819, 1944, 31493, 295, 2158, 13, 50762, 50762, 407, 498, 291, 1415, 281, 360, 1900, 38253, 11, 50942, 50942, 291, 1062, 362, 281, 853, 439, 4022, 295, 729, 31493, 51084, 51084, 293, 550, 14722, 264, 2281, 295, 439, 4022, 51170, 51170, 295, 729, 31493, 293, 550, 1888, 264, 472, 51266, 51266, 365, 264, 12437, 2281, 281, 360, 38253, 11, 558, 30, 51472, 51472, 400, 294, 1186, 11, 729, 4022, 31493, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1345830231570126, "compression_ratio": 1.831578947368421, "no_speech_prob": 8.939136932895053e-06}, {"id": 389, "seek": 114600, "start": 1168.16, "end": 1172.24, "text": " And in fact, those 24 configurations", "tokens": [50364, 568, 1413, 568, 1413, 568, 1413, 805, 11, 558, 30, 50510, 50510, 663, 311, 4022, 819, 1944, 31493, 295, 2158, 13, 50762, 50762, 407, 498, 291, 1415, 281, 360, 1900, 38253, 11, 50942, 50942, 291, 1062, 362, 281, 853, 439, 4022, 295, 729, 31493, 51084, 51084, 293, 550, 14722, 264, 2281, 295, 439, 4022, 51170, 51170, 295, 729, 31493, 293, 550, 1888, 264, 472, 51266, 51266, 365, 264, 12437, 2281, 281, 360, 38253, 11, 558, 30, 51472, 51472, 400, 294, 1186, 11, 729, 4022, 31493, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1345830231570126, "compression_ratio": 1.831578947368421, "no_speech_prob": 8.939136932895053e-06}, {"id": 390, "seek": 117224, "start": 1172.24, "end": 1178.48, "text": " correspond to 24 times 3 evaluations of those energy", "tokens": [50364, 6805, 281, 4022, 1413, 805, 43085, 295, 729, 2281, 50676, 50676, 2115, 11, 558, 11, 570, 291, 362, 1045, 2281, 2115, 13, 50778, 50778, 407, 291, 486, 362, 281, 14722, 24124, 819, 25737, 50890, 50890, 281, 312, 1075, 281, 360, 341, 13, 50988, 50988, 400, 341, 307, 257, 1359, 1365, 689, 264, 8310, 307, 2099, 51102, 51102, 293, 264, 9102, 366, 17434, 13, 51274, 51274, 639, 1709, 37330, 365, 264, 4641, 295, 264, 8310, 13, 51454, 51794], "temperature": 0.0, "avg_logprob": -0.18827668926383875, "compression_ratio": 1.5485436893203883, "no_speech_prob": 1.7495551219326444e-05}, {"id": 391, "seek": 117224, "start": 1178.48, "end": 1180.52, "text": " terms, right, because you have three energy terms.", "tokens": [50364, 6805, 281, 4022, 1413, 805, 43085, 295, 729, 2281, 50676, 50676, 2115, 11, 558, 11, 570, 291, 362, 1045, 2281, 2115, 13, 50778, 50778, 407, 291, 486, 362, 281, 14722, 24124, 819, 25737, 50890, 50890, 281, 312, 1075, 281, 360, 341, 13, 50988, 50988, 400, 341, 307, 257, 1359, 1365, 689, 264, 8310, 307, 2099, 51102, 51102, 293, 264, 9102, 366, 17434, 13, 51274, 51274, 639, 1709, 37330, 365, 264, 4641, 295, 264, 8310, 13, 51454, 51794], "temperature": 0.0, "avg_logprob": -0.18827668926383875, "compression_ratio": 1.5485436893203883, "no_speech_prob": 1.7495551219326444e-05}, {"id": 392, "seek": 117224, "start": 1180.52, "end": 1182.76, "text": " So you will have to compute 96 different energies", "tokens": [50364, 6805, 281, 4022, 1413, 805, 43085, 295, 729, 2281, 50676, 50676, 2115, 11, 558, 11, 570, 291, 362, 1045, 2281, 2115, 13, 50778, 50778, 407, 291, 486, 362, 281, 14722, 24124, 819, 25737, 50890, 50890, 281, 312, 1075, 281, 360, 341, 13, 50988, 50988, 400, 341, 307, 257, 1359, 1365, 689, 264, 8310, 307, 2099, 51102, 51102, 293, 264, 9102, 366, 17434, 13, 51274, 51274, 639, 1709, 37330, 365, 264, 4641, 295, 264, 8310, 13, 51454, 51794], "temperature": 0.0, "avg_logprob": -0.18827668926383875, "compression_ratio": 1.5485436893203883, "no_speech_prob": 1.7495551219326444e-05}, {"id": 393, "seek": 117224, "start": 1182.76, "end": 1184.72, "text": " to be able to do this.", "tokens": [50364, 6805, 281, 4022, 1413, 805, 43085, 295, 729, 2281, 50676, 50676, 2115, 11, 558, 11, 570, 291, 362, 1045, 2281, 2115, 13, 50778, 50778, 407, 291, 486, 362, 281, 14722, 24124, 819, 25737, 50890, 50890, 281, 312, 1075, 281, 360, 341, 13, 50988, 50988, 400, 341, 307, 257, 1359, 1365, 689, 264, 8310, 307, 2099, 51102, 51102, 293, 264, 9102, 366, 17434, 13, 51274, 51274, 639, 1709, 37330, 365, 264, 4641, 295, 264, 8310, 13, 51454, 51794], "temperature": 0.0, "avg_logprob": -0.18827668926383875, "compression_ratio": 1.5485436893203883, "no_speech_prob": 1.7495551219326444e-05}, {"id": 394, "seek": 117224, "start": 1184.72, "end": 1187.0, "text": " And this is a small example where the sequence is short", "tokens": [50364, 6805, 281, 4022, 1413, 805, 43085, 295, 729, 2281, 50676, 50676, 2115, 11, 558, 11, 570, 291, 362, 1045, 2281, 2115, 13, 50778, 50778, 407, 291, 486, 362, 281, 14722, 24124, 819, 25737, 50890, 50890, 281, 312, 1075, 281, 360, 341, 13, 50988, 50988, 400, 341, 307, 257, 1359, 1365, 689, 264, 8310, 307, 2099, 51102, 51102, 293, 264, 9102, 366, 17434, 13, 51274, 51274, 639, 1709, 37330, 365, 264, 4641, 295, 264, 8310, 13, 51454, 51794], "temperature": 0.0, "avg_logprob": -0.18827668926383875, "compression_ratio": 1.5485436893203883, "no_speech_prob": 1.7495551219326444e-05}, {"id": 395, "seek": 117224, "start": 1187.0, "end": 1190.44, "text": " and the variables are binary.", "tokens": [50364, 6805, 281, 4022, 1413, 805, 43085, 295, 729, 2281, 50676, 50676, 2115, 11, 558, 11, 570, 291, 362, 1045, 2281, 2115, 13, 50778, 50778, 407, 291, 486, 362, 281, 14722, 24124, 819, 25737, 50890, 50890, 281, 312, 1075, 281, 360, 341, 13, 50988, 50988, 400, 341, 307, 257, 1359, 1365, 689, 264, 8310, 307, 2099, 51102, 51102, 293, 264, 9102, 366, 17434, 13, 51274, 51274, 639, 1709, 37330, 365, 264, 4641, 295, 264, 8310, 13, 51454, 51794], "temperature": 0.0, "avg_logprob": -0.18827668926383875, "compression_ratio": 1.5485436893203883, "no_speech_prob": 1.7495551219326444e-05}, {"id": 396, "seek": 117224, "start": 1190.44, "end": 1194.04, "text": " This goes exponentially with the length of the sequence.", "tokens": [50364, 6805, 281, 4022, 1413, 805, 43085, 295, 729, 2281, 50676, 50676, 2115, 11, 558, 11, 570, 291, 362, 1045, 2281, 2115, 13, 50778, 50778, 407, 291, 486, 362, 281, 14722, 24124, 819, 25737, 50890, 50890, 281, 312, 1075, 281, 360, 341, 13, 50988, 50988, 400, 341, 307, 257, 1359, 1365, 689, 264, 8310, 307, 2099, 51102, 51102, 293, 264, 9102, 366, 17434, 13, 51274, 51274, 639, 1709, 37330, 365, 264, 4641, 295, 264, 8310, 13, 51454, 51794], "temperature": 0.0, "avg_logprob": -0.18827668926383875, "compression_ratio": 1.5485436893203883, "no_speech_prob": 1.7495551219326444e-05}, {"id": 397, "seek": 119404, "start": 1194.04, "end": 1202.48, "text": " Sorry, with the number of possible values of the z's", "tokens": [50364, 4919, 11, 365, 264, 1230, 295, 1944, 4190, 295, 264, 710, 311, 50786, 50786, 293, 264, 4641, 295, 264, 8310, 13, 50854, 50854, 407, 498, 291, 362, 297, 12178, 337, 1184, 295, 264, 9102, 51174, 51174, 293, 264, 4641, 307, 287, 11, 309, 311, 297, 281, 264, 287, 11, 558, 30, 51288, 51288, 407, 309, 311, 4669, 294, 264, 4641, 13, 51356, 51558, 407, 341, 307, 257, 1359, 1365, 295, 577, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.4487585957845052, "compression_ratio": 1.5714285714285714, "no_speech_prob": 4.252268990967423e-05}, {"id": 398, "seek": 119404, "start": 1202.48, "end": 1203.84, "text": " and the length of the sequence.", "tokens": [50364, 4919, 11, 365, 264, 1230, 295, 1944, 4190, 295, 264, 710, 311, 50786, 50786, 293, 264, 4641, 295, 264, 8310, 13, 50854, 50854, 407, 498, 291, 362, 297, 12178, 337, 1184, 295, 264, 9102, 51174, 51174, 293, 264, 4641, 307, 287, 11, 309, 311, 297, 281, 264, 287, 11, 558, 30, 51288, 51288, 407, 309, 311, 4669, 294, 264, 4641, 13, 51356, 51558, 407, 341, 307, 257, 1359, 1365, 295, 577, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.4487585957845052, "compression_ratio": 1.5714285714285714, "no_speech_prob": 4.252268990967423e-05}, {"id": 399, "seek": 119404, "start": 1203.84, "end": 1210.24, "text": " So if you have n possibilities for each of the variables", "tokens": [50364, 4919, 11, 365, 264, 1230, 295, 1944, 4190, 295, 264, 710, 311, 50786, 50786, 293, 264, 4641, 295, 264, 8310, 13, 50854, 50854, 407, 498, 291, 362, 297, 12178, 337, 1184, 295, 264, 9102, 51174, 51174, 293, 264, 4641, 307, 287, 11, 309, 311, 297, 281, 264, 287, 11, 558, 30, 51288, 51288, 407, 309, 311, 4669, 294, 264, 4641, 13, 51356, 51558, 407, 341, 307, 257, 1359, 1365, 295, 577, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.4487585957845052, "compression_ratio": 1.5714285714285714, "no_speech_prob": 4.252268990967423e-05}, {"id": 400, "seek": 119404, "start": 1210.24, "end": 1212.52, "text": " and the length is l, it's n to the l, right?", "tokens": [50364, 4919, 11, 365, 264, 1230, 295, 1944, 4190, 295, 264, 710, 311, 50786, 50786, 293, 264, 4641, 295, 264, 8310, 13, 50854, 50854, 407, 498, 291, 362, 297, 12178, 337, 1184, 295, 264, 9102, 51174, 51174, 293, 264, 4641, 307, 287, 11, 309, 311, 297, 281, 264, 287, 11, 558, 30, 51288, 51288, 407, 309, 311, 4669, 294, 264, 4641, 13, 51356, 51558, 407, 341, 307, 257, 1359, 1365, 295, 577, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.4487585957845052, "compression_ratio": 1.5714285714285714, "no_speech_prob": 4.252268990967423e-05}, {"id": 401, "seek": 119404, "start": 1212.52, "end": 1213.8799999999999, "text": " So it's financial in the length.", "tokens": [50364, 4919, 11, 365, 264, 1230, 295, 1944, 4190, 295, 264, 710, 311, 50786, 50786, 293, 264, 4641, 295, 264, 8310, 13, 50854, 50854, 407, 498, 291, 362, 297, 12178, 337, 1184, 295, 264, 9102, 51174, 51174, 293, 264, 4641, 307, 287, 11, 309, 311, 297, 281, 264, 287, 11, 558, 30, 51288, 51288, 407, 309, 311, 4669, 294, 264, 4641, 13, 51356, 51558, 407, 341, 307, 257, 1359, 1365, 295, 577, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.4487585957845052, "compression_ratio": 1.5714285714285714, "no_speech_prob": 4.252268990967423e-05}, {"id": 402, "seek": 119404, "start": 1217.92, "end": 1220.0, "text": " So this is a small example of how", "tokens": [50364, 4919, 11, 365, 264, 1230, 295, 1944, 4190, 295, 264, 710, 311, 50786, 50786, 293, 264, 4641, 295, 264, 8310, 13, 50854, 50854, 407, 498, 291, 362, 297, 12178, 337, 1184, 295, 264, 9102, 51174, 51174, 293, 264, 4641, 307, 287, 11, 309, 311, 297, 281, 264, 287, 11, 558, 30, 51288, 51288, 407, 309, 311, 4669, 294, 264, 4641, 13, 51356, 51558, 407, 341, 307, 257, 1359, 1365, 295, 577, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.4487585957845052, "compression_ratio": 1.5714285714285714, "no_speech_prob": 4.252268990967423e-05}, {"id": 403, "seek": 122000, "start": 1220.0, "end": 1226.24, "text": " you can do this, but the thing is", "tokens": [50364, 291, 393, 360, 341, 11, 457, 264, 551, 307, 50676, 50676, 456, 307, 257, 544, 7148, 636, 295, 15213, 484, 50774, 50774, 437, 307, 264, 11694, 295, 12437, 2281, 13, 51006, 51006, 400, 309, 311, 3462, 281, 264, 1186, 300, 291, 362, 51080, 51080, 729, 733, 295, 341, 2654, 3877, 11, 558, 30, 51218, 51218, 407, 710, 16, 393, 787, 747, 732, 4190, 11, 293, 710, 17, 393, 611, 787, 747, 51510, 51510, 732, 4190, 13, 51564, 51564, 407, 341, 2281, 1433, 510, 393, 787, 747, 1451, 4190, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24804439339586484, "compression_ratio": 1.64321608040201, "no_speech_prob": 1.618399801373016e-05}, {"id": 404, "seek": 122000, "start": 1226.24, "end": 1228.2, "text": " there is a more efficient way of figuring out", "tokens": [50364, 291, 393, 360, 341, 11, 457, 264, 551, 307, 50676, 50676, 456, 307, 257, 544, 7148, 636, 295, 15213, 484, 50774, 50774, 437, 307, 264, 11694, 295, 12437, 2281, 13, 51006, 51006, 400, 309, 311, 3462, 281, 264, 1186, 300, 291, 362, 51080, 51080, 729, 733, 295, 341, 2654, 3877, 11, 558, 30, 51218, 51218, 407, 710, 16, 393, 787, 747, 732, 4190, 11, 293, 710, 17, 393, 611, 787, 747, 51510, 51510, 732, 4190, 13, 51564, 51564, 407, 341, 2281, 1433, 510, 393, 787, 747, 1451, 4190, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24804439339586484, "compression_ratio": 1.64321608040201, "no_speech_prob": 1.618399801373016e-05}, {"id": 405, "seek": 122000, "start": 1228.2, "end": 1232.84, "text": " what is the configuration of lowest energy.", "tokens": [50364, 291, 393, 360, 341, 11, 457, 264, 551, 307, 50676, 50676, 456, 307, 257, 544, 7148, 636, 295, 15213, 484, 50774, 50774, 437, 307, 264, 11694, 295, 12437, 2281, 13, 51006, 51006, 400, 309, 311, 3462, 281, 264, 1186, 300, 291, 362, 51080, 51080, 729, 733, 295, 341, 2654, 3877, 11, 558, 30, 51218, 51218, 407, 710, 16, 393, 787, 747, 732, 4190, 11, 293, 710, 17, 393, 611, 787, 747, 51510, 51510, 732, 4190, 13, 51564, 51564, 407, 341, 2281, 1433, 510, 393, 787, 747, 1451, 4190, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24804439339586484, "compression_ratio": 1.64321608040201, "no_speech_prob": 1.618399801373016e-05}, {"id": 406, "seek": 122000, "start": 1232.84, "end": 1234.32, "text": " And it's due to the fact that you have", "tokens": [50364, 291, 393, 360, 341, 11, 457, 264, 551, 307, 50676, 50676, 456, 307, 257, 544, 7148, 636, 295, 15213, 484, 50774, 50774, 437, 307, 264, 11694, 295, 12437, 2281, 13, 51006, 51006, 400, 309, 311, 3462, 281, 264, 1186, 300, 291, 362, 51080, 51080, 729, 733, 295, 341, 2654, 3877, 11, 558, 30, 51218, 51218, 407, 710, 16, 393, 787, 747, 732, 4190, 11, 293, 710, 17, 393, 611, 787, 747, 51510, 51510, 732, 4190, 13, 51564, 51564, 407, 341, 2281, 1433, 510, 393, 787, 747, 1451, 4190, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24804439339586484, "compression_ratio": 1.64321608040201, "no_speech_prob": 1.618399801373016e-05}, {"id": 407, "seek": 122000, "start": 1234.32, "end": 1237.08, "text": " those kind of this local structure, right?", "tokens": [50364, 291, 393, 360, 341, 11, 457, 264, 551, 307, 50676, 50676, 456, 307, 257, 544, 7148, 636, 295, 15213, 484, 50774, 50774, 437, 307, 264, 11694, 295, 12437, 2281, 13, 51006, 51006, 400, 309, 311, 3462, 281, 264, 1186, 300, 291, 362, 51080, 51080, 729, 733, 295, 341, 2654, 3877, 11, 558, 30, 51218, 51218, 407, 710, 16, 393, 787, 747, 732, 4190, 11, 293, 710, 17, 393, 611, 787, 747, 51510, 51510, 732, 4190, 13, 51564, 51564, 407, 341, 2281, 1433, 510, 393, 787, 747, 1451, 4190, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24804439339586484, "compression_ratio": 1.64321608040201, "no_speech_prob": 1.618399801373016e-05}, {"id": 408, "seek": 122000, "start": 1237.08, "end": 1242.92, "text": " So z1 can only take two values, and z2 can also only take", "tokens": [50364, 291, 393, 360, 341, 11, 457, 264, 551, 307, 50676, 50676, 456, 307, 257, 544, 7148, 636, 295, 15213, 484, 50774, 50774, 437, 307, 264, 11694, 295, 12437, 2281, 13, 51006, 51006, 400, 309, 311, 3462, 281, 264, 1186, 300, 291, 362, 51080, 51080, 729, 733, 295, 341, 2654, 3877, 11, 558, 30, 51218, 51218, 407, 710, 16, 393, 787, 747, 732, 4190, 11, 293, 710, 17, 393, 611, 787, 747, 51510, 51510, 732, 4190, 13, 51564, 51564, 407, 341, 2281, 1433, 510, 393, 787, 747, 1451, 4190, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24804439339586484, "compression_ratio": 1.64321608040201, "no_speech_prob": 1.618399801373016e-05}, {"id": 409, "seek": 122000, "start": 1242.92, "end": 1244.0, "text": " two values.", "tokens": [50364, 291, 393, 360, 341, 11, 457, 264, 551, 307, 50676, 50676, 456, 307, 257, 544, 7148, 636, 295, 15213, 484, 50774, 50774, 437, 307, 264, 11694, 295, 12437, 2281, 13, 51006, 51006, 400, 309, 311, 3462, 281, 264, 1186, 300, 291, 362, 51080, 51080, 729, 733, 295, 341, 2654, 3877, 11, 558, 30, 51218, 51218, 407, 710, 16, 393, 787, 747, 732, 4190, 11, 293, 710, 17, 393, 611, 787, 747, 51510, 51510, 732, 4190, 13, 51564, 51564, 407, 341, 2281, 1433, 510, 393, 787, 747, 1451, 4190, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24804439339586484, "compression_ratio": 1.64321608040201, "no_speech_prob": 1.618399801373016e-05}, {"id": 410, "seek": 122000, "start": 1244.0, "end": 1246.88, "text": " So this energy term here can only take four values.", "tokens": [50364, 291, 393, 360, 341, 11, 457, 264, 551, 307, 50676, 50676, 456, 307, 257, 544, 7148, 636, 295, 15213, 484, 50774, 50774, 437, 307, 264, 11694, 295, 12437, 2281, 13, 51006, 51006, 400, 309, 311, 3462, 281, 264, 1186, 300, 291, 362, 51080, 51080, 729, 733, 295, 341, 2654, 3877, 11, 558, 30, 51218, 51218, 407, 710, 16, 393, 787, 747, 732, 4190, 11, 293, 710, 17, 393, 611, 787, 747, 51510, 51510, 732, 4190, 13, 51564, 51564, 407, 341, 2281, 1433, 510, 393, 787, 747, 1451, 4190, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24804439339586484, "compression_ratio": 1.64321608040201, "no_speech_prob": 1.618399801373016e-05}, {"id": 411, "seek": 124688, "start": 1246.88, "end": 1250.0, "text": " It's ever going to see only four different values,", "tokens": [50364, 467, 311, 1562, 516, 281, 536, 787, 1451, 819, 4190, 11, 50520, 50520, 570, 309, 393, 787, 536, 1958, 11, 1958, 11, 1958, 11, 502, 11, 502, 11, 1958, 11, 502, 11, 502, 11, 558, 30, 50782, 50782, 407, 291, 393, 3811, 659, 12, 1112, 2582, 278, 729, 1451, 4190, 13, 50976, 50976, 639, 2146, 307, 611, 516, 281, 536, 787, 1451, 4190, 11, 558, 30, 51194, 51194, 1436, 341, 307, 17434, 293, 300, 311, 17434, 13, 51316, 51316, 407, 291, 393, 659, 12, 21541, 1169, 729, 1451, 4190, 13, 51472, 51472, 407, 300, 311, 1071, 1451, 13344, 51542, 51542, 295, 364, 10024, 2445, 13, 51608, 51608, 492, 434, 493, 281, 3180, 13, 51674, 51674, 400, 341, 2146, 575, 2309, 819, 4190, 11, 51752, 51752, 570, 341, 7006, 307, 17434, 11, 341, 472, 256, 1248, 822, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14916357757351922, "compression_ratio": 1.9620253164556962, "no_speech_prob": 3.611623924371088e-06}, {"id": 412, "seek": 124688, "start": 1250.0, "end": 1255.24, "text": " because it can only see 0, 0, 0, 1, 1, 0, 1, 1, right?", "tokens": [50364, 467, 311, 1562, 516, 281, 536, 787, 1451, 819, 4190, 11, 50520, 50520, 570, 309, 393, 787, 536, 1958, 11, 1958, 11, 1958, 11, 502, 11, 502, 11, 1958, 11, 502, 11, 502, 11, 558, 30, 50782, 50782, 407, 291, 393, 3811, 659, 12, 1112, 2582, 278, 729, 1451, 4190, 13, 50976, 50976, 639, 2146, 307, 611, 516, 281, 536, 787, 1451, 4190, 11, 558, 30, 51194, 51194, 1436, 341, 307, 17434, 293, 300, 311, 17434, 13, 51316, 51316, 407, 291, 393, 659, 12, 21541, 1169, 729, 1451, 4190, 13, 51472, 51472, 407, 300, 311, 1071, 1451, 13344, 51542, 51542, 295, 364, 10024, 2445, 13, 51608, 51608, 492, 434, 493, 281, 3180, 13, 51674, 51674, 400, 341, 2146, 575, 2309, 819, 4190, 11, 51752, 51752, 570, 341, 7006, 307, 17434, 11, 341, 472, 256, 1248, 822, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14916357757351922, "compression_ratio": 1.9620253164556962, "no_speech_prob": 3.611623924371088e-06}, {"id": 413, "seek": 124688, "start": 1255.24, "end": 1259.1200000000001, "text": " So you can imagine pre-computing those four values.", "tokens": [50364, 467, 311, 1562, 516, 281, 536, 787, 1451, 819, 4190, 11, 50520, 50520, 570, 309, 393, 787, 536, 1958, 11, 1958, 11, 1958, 11, 502, 11, 502, 11, 1958, 11, 502, 11, 502, 11, 558, 30, 50782, 50782, 407, 291, 393, 3811, 659, 12, 1112, 2582, 278, 729, 1451, 4190, 13, 50976, 50976, 639, 2146, 307, 611, 516, 281, 536, 787, 1451, 4190, 11, 558, 30, 51194, 51194, 1436, 341, 307, 17434, 293, 300, 311, 17434, 13, 51316, 51316, 407, 291, 393, 659, 12, 21541, 1169, 729, 1451, 4190, 13, 51472, 51472, 407, 300, 311, 1071, 1451, 13344, 51542, 51542, 295, 364, 10024, 2445, 13, 51608, 51608, 492, 434, 493, 281, 3180, 13, 51674, 51674, 400, 341, 2146, 575, 2309, 819, 4190, 11, 51752, 51752, 570, 341, 7006, 307, 17434, 11, 341, 472, 256, 1248, 822, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14916357757351922, "compression_ratio": 1.9620253164556962, "no_speech_prob": 3.611623924371088e-06}, {"id": 414, "seek": 124688, "start": 1259.1200000000001, "end": 1263.48, "text": " This guy is also going to see only four values, right?", "tokens": [50364, 467, 311, 1562, 516, 281, 536, 787, 1451, 819, 4190, 11, 50520, 50520, 570, 309, 393, 787, 536, 1958, 11, 1958, 11, 1958, 11, 502, 11, 502, 11, 1958, 11, 502, 11, 502, 11, 558, 30, 50782, 50782, 407, 291, 393, 3811, 659, 12, 1112, 2582, 278, 729, 1451, 4190, 13, 50976, 50976, 639, 2146, 307, 611, 516, 281, 536, 787, 1451, 4190, 11, 558, 30, 51194, 51194, 1436, 341, 307, 17434, 293, 300, 311, 17434, 13, 51316, 51316, 407, 291, 393, 659, 12, 21541, 1169, 729, 1451, 4190, 13, 51472, 51472, 407, 300, 311, 1071, 1451, 13344, 51542, 51542, 295, 364, 10024, 2445, 13, 51608, 51608, 492, 434, 493, 281, 3180, 13, 51674, 51674, 400, 341, 2146, 575, 2309, 819, 4190, 11, 51752, 51752, 570, 341, 7006, 307, 17434, 11, 341, 472, 256, 1248, 822, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14916357757351922, "compression_ratio": 1.9620253164556962, "no_speech_prob": 3.611623924371088e-06}, {"id": 415, "seek": 124688, "start": 1263.48, "end": 1265.92, "text": " Because this is binary and that's binary.", "tokens": [50364, 467, 311, 1562, 516, 281, 536, 787, 1451, 819, 4190, 11, 50520, 50520, 570, 309, 393, 787, 536, 1958, 11, 1958, 11, 1958, 11, 502, 11, 502, 11, 1958, 11, 502, 11, 502, 11, 558, 30, 50782, 50782, 407, 291, 393, 3811, 659, 12, 1112, 2582, 278, 729, 1451, 4190, 13, 50976, 50976, 639, 2146, 307, 611, 516, 281, 536, 787, 1451, 4190, 11, 558, 30, 51194, 51194, 1436, 341, 307, 17434, 293, 300, 311, 17434, 13, 51316, 51316, 407, 291, 393, 659, 12, 21541, 1169, 729, 1451, 4190, 13, 51472, 51472, 407, 300, 311, 1071, 1451, 13344, 51542, 51542, 295, 364, 10024, 2445, 13, 51608, 51608, 492, 434, 493, 281, 3180, 13, 51674, 51674, 400, 341, 2146, 575, 2309, 819, 4190, 11, 51752, 51752, 570, 341, 7006, 307, 17434, 11, 341, 472, 256, 1248, 822, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14916357757351922, "compression_ratio": 1.9620253164556962, "no_speech_prob": 3.611623924371088e-06}, {"id": 416, "seek": 124688, "start": 1265.92, "end": 1269.0400000000002, "text": " So you can pre-compute those four values.", "tokens": [50364, 467, 311, 1562, 516, 281, 536, 787, 1451, 819, 4190, 11, 50520, 50520, 570, 309, 393, 787, 536, 1958, 11, 1958, 11, 1958, 11, 502, 11, 502, 11, 1958, 11, 502, 11, 502, 11, 558, 30, 50782, 50782, 407, 291, 393, 3811, 659, 12, 1112, 2582, 278, 729, 1451, 4190, 13, 50976, 50976, 639, 2146, 307, 611, 516, 281, 536, 787, 1451, 4190, 11, 558, 30, 51194, 51194, 1436, 341, 307, 17434, 293, 300, 311, 17434, 13, 51316, 51316, 407, 291, 393, 659, 12, 21541, 1169, 729, 1451, 4190, 13, 51472, 51472, 407, 300, 311, 1071, 1451, 13344, 51542, 51542, 295, 364, 10024, 2445, 13, 51608, 51608, 492, 434, 493, 281, 3180, 13, 51674, 51674, 400, 341, 2146, 575, 2309, 819, 4190, 11, 51752, 51752, 570, 341, 7006, 307, 17434, 11, 341, 472, 256, 1248, 822, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14916357757351922, "compression_ratio": 1.9620253164556962, "no_speech_prob": 3.611623924371088e-06}, {"id": 417, "seek": 124688, "start": 1269.0400000000002, "end": 1270.44, "text": " So that's another four evaluation", "tokens": [50364, 467, 311, 1562, 516, 281, 536, 787, 1451, 819, 4190, 11, 50520, 50520, 570, 309, 393, 787, 536, 1958, 11, 1958, 11, 1958, 11, 502, 11, 502, 11, 1958, 11, 502, 11, 502, 11, 558, 30, 50782, 50782, 407, 291, 393, 3811, 659, 12, 1112, 2582, 278, 729, 1451, 4190, 13, 50976, 50976, 639, 2146, 307, 611, 516, 281, 536, 787, 1451, 4190, 11, 558, 30, 51194, 51194, 1436, 341, 307, 17434, 293, 300, 311, 17434, 13, 51316, 51316, 407, 291, 393, 659, 12, 21541, 1169, 729, 1451, 4190, 13, 51472, 51472, 407, 300, 311, 1071, 1451, 13344, 51542, 51542, 295, 364, 10024, 2445, 13, 51608, 51608, 492, 434, 493, 281, 3180, 13, 51674, 51674, 400, 341, 2146, 575, 2309, 819, 4190, 11, 51752, 51752, 570, 341, 7006, 307, 17434, 11, 341, 472, 256, 1248, 822, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14916357757351922, "compression_ratio": 1.9620253164556962, "no_speech_prob": 3.611623924371088e-06}, {"id": 418, "seek": 124688, "start": 1270.44, "end": 1271.7600000000002, "text": " of an objective function.", "tokens": [50364, 467, 311, 1562, 516, 281, 536, 787, 1451, 819, 4190, 11, 50520, 50520, 570, 309, 393, 787, 536, 1958, 11, 1958, 11, 1958, 11, 502, 11, 502, 11, 1958, 11, 502, 11, 502, 11, 558, 30, 50782, 50782, 407, 291, 393, 3811, 659, 12, 1112, 2582, 278, 729, 1451, 4190, 13, 50976, 50976, 639, 2146, 307, 611, 516, 281, 536, 787, 1451, 4190, 11, 558, 30, 51194, 51194, 1436, 341, 307, 17434, 293, 300, 311, 17434, 13, 51316, 51316, 407, 291, 393, 659, 12, 21541, 1169, 729, 1451, 4190, 13, 51472, 51472, 407, 300, 311, 1071, 1451, 13344, 51542, 51542, 295, 364, 10024, 2445, 13, 51608, 51608, 492, 434, 493, 281, 3180, 13, 51674, 51674, 400, 341, 2146, 575, 2309, 819, 4190, 11, 51752, 51752, 570, 341, 7006, 307, 17434, 11, 341, 472, 256, 1248, 822, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14916357757351922, "compression_ratio": 1.9620253164556962, "no_speech_prob": 3.611623924371088e-06}, {"id": 419, "seek": 124688, "start": 1271.7600000000002, "end": 1273.0800000000002, "text": " We're up to eight.", "tokens": [50364, 467, 311, 1562, 516, 281, 536, 787, 1451, 819, 4190, 11, 50520, 50520, 570, 309, 393, 787, 536, 1958, 11, 1958, 11, 1958, 11, 502, 11, 502, 11, 1958, 11, 502, 11, 502, 11, 558, 30, 50782, 50782, 407, 291, 393, 3811, 659, 12, 1112, 2582, 278, 729, 1451, 4190, 13, 50976, 50976, 639, 2146, 307, 611, 516, 281, 536, 787, 1451, 4190, 11, 558, 30, 51194, 51194, 1436, 341, 307, 17434, 293, 300, 311, 17434, 13, 51316, 51316, 407, 291, 393, 659, 12, 21541, 1169, 729, 1451, 4190, 13, 51472, 51472, 407, 300, 311, 1071, 1451, 13344, 51542, 51542, 295, 364, 10024, 2445, 13, 51608, 51608, 492, 434, 493, 281, 3180, 13, 51674, 51674, 400, 341, 2146, 575, 2309, 819, 4190, 11, 51752, 51752, 570, 341, 7006, 307, 17434, 11, 341, 472, 256, 1248, 822, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14916357757351922, "compression_ratio": 1.9620253164556962, "no_speech_prob": 3.611623924371088e-06}, {"id": 420, "seek": 124688, "start": 1273.0800000000002, "end": 1274.64, "text": " And this guy has six different values,", "tokens": [50364, 467, 311, 1562, 516, 281, 536, 787, 1451, 819, 4190, 11, 50520, 50520, 570, 309, 393, 787, 536, 1958, 11, 1958, 11, 1958, 11, 502, 11, 502, 11, 1958, 11, 502, 11, 502, 11, 558, 30, 50782, 50782, 407, 291, 393, 3811, 659, 12, 1112, 2582, 278, 729, 1451, 4190, 13, 50976, 50976, 639, 2146, 307, 611, 516, 281, 536, 787, 1451, 4190, 11, 558, 30, 51194, 51194, 1436, 341, 307, 17434, 293, 300, 311, 17434, 13, 51316, 51316, 407, 291, 393, 659, 12, 21541, 1169, 729, 1451, 4190, 13, 51472, 51472, 407, 300, 311, 1071, 1451, 13344, 51542, 51542, 295, 364, 10024, 2445, 13, 51608, 51608, 492, 434, 493, 281, 3180, 13, 51674, 51674, 400, 341, 2146, 575, 2309, 819, 4190, 11, 51752, 51752, 570, 341, 7006, 307, 17434, 11, 341, 472, 256, 1248, 822, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14916357757351922, "compression_ratio": 1.9620253164556962, "no_speech_prob": 3.611623924371088e-06}, {"id": 421, "seek": 124688, "start": 1274.64, "end": 1276.8000000000002, "text": " because this variable is binary, this one ternary.", "tokens": [50364, 467, 311, 1562, 516, 281, 536, 787, 1451, 819, 4190, 11, 50520, 50520, 570, 309, 393, 787, 536, 1958, 11, 1958, 11, 1958, 11, 502, 11, 502, 11, 1958, 11, 502, 11, 502, 11, 558, 30, 50782, 50782, 407, 291, 393, 3811, 659, 12, 1112, 2582, 278, 729, 1451, 4190, 13, 50976, 50976, 639, 2146, 307, 611, 516, 281, 536, 787, 1451, 4190, 11, 558, 30, 51194, 51194, 1436, 341, 307, 17434, 293, 300, 311, 17434, 13, 51316, 51316, 407, 291, 393, 659, 12, 21541, 1169, 729, 1451, 4190, 13, 51472, 51472, 407, 300, 311, 1071, 1451, 13344, 51542, 51542, 295, 364, 10024, 2445, 13, 51608, 51608, 492, 434, 493, 281, 3180, 13, 51674, 51674, 400, 341, 2146, 575, 2309, 819, 4190, 11, 51752, 51752, 570, 341, 7006, 307, 17434, 11, 341, 472, 256, 1248, 822, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14916357757351922, "compression_ratio": 1.9620253164556962, "no_speech_prob": 3.611623924371088e-06}, {"id": 422, "seek": 127680, "start": 1276.8, "end": 1279.04, "text": " So it's 2 times 3.", "tokens": [50364, 407, 309, 311, 568, 1413, 805, 13, 50476, 50476, 407, 586, 291, 362, 2309, 819, 31493, 13, 50576, 50576, 407, 538, 659, 12, 1112, 2582, 278, 264, 1451, 510, 11, 264, 1451, 510, 11, 50706, 50706, 293, 264, 2309, 510, 11, 291, 362, 40610, 439, 264, 1944, 51198, 51198, 31493, 11, 1936, 13, 51298, 51518, 400, 300, 311, 516, 281, 2906, 309, 510, 412, 264, 2767, 13, 51664, 51664, 407, 341, 307, 1219, 257, 2192, 285, 271, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.16847609310615352, "compression_ratio": 1.6235294117647059, "no_speech_prob": 3.905227003997425e-06}, {"id": 423, "seek": 127680, "start": 1279.04, "end": 1281.04, "text": " So now you have six different configurations.", "tokens": [50364, 407, 309, 311, 568, 1413, 805, 13, 50476, 50476, 407, 586, 291, 362, 2309, 819, 31493, 13, 50576, 50576, 407, 538, 659, 12, 1112, 2582, 278, 264, 1451, 510, 11, 264, 1451, 510, 11, 50706, 50706, 293, 264, 2309, 510, 11, 291, 362, 40610, 439, 264, 1944, 51198, 51198, 31493, 11, 1936, 13, 51298, 51518, 400, 300, 311, 516, 281, 2906, 309, 510, 412, 264, 2767, 13, 51664, 51664, 407, 341, 307, 1219, 257, 2192, 285, 271, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.16847609310615352, "compression_ratio": 1.6235294117647059, "no_speech_prob": 3.905227003997425e-06}, {"id": 424, "seek": 127680, "start": 1281.04, "end": 1283.6399999999999, "text": " So by pre-computing the four here, the four here,", "tokens": [50364, 407, 309, 311, 568, 1413, 805, 13, 50476, 50476, 407, 586, 291, 362, 2309, 819, 31493, 13, 50576, 50576, 407, 538, 659, 12, 1112, 2582, 278, 264, 1451, 510, 11, 264, 1451, 510, 11, 50706, 50706, 293, 264, 2309, 510, 11, 291, 362, 40610, 439, 264, 1944, 51198, 51198, 31493, 11, 1936, 13, 51298, 51518, 400, 300, 311, 516, 281, 2906, 309, 510, 412, 264, 2767, 13, 51664, 51664, 407, 341, 307, 1219, 257, 2192, 285, 271, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.16847609310615352, "compression_ratio": 1.6235294117647059, "no_speech_prob": 3.905227003997425e-06}, {"id": 425, "seek": 127680, "start": 1283.6399999999999, "end": 1293.48, "text": " and the six here, you have computed all the possible", "tokens": [50364, 407, 309, 311, 568, 1413, 805, 13, 50476, 50476, 407, 586, 291, 362, 2309, 819, 31493, 13, 50576, 50576, 407, 538, 659, 12, 1112, 2582, 278, 264, 1451, 510, 11, 264, 1451, 510, 11, 50706, 50706, 293, 264, 2309, 510, 11, 291, 362, 40610, 439, 264, 1944, 51198, 51198, 31493, 11, 1936, 13, 51298, 51518, 400, 300, 311, 516, 281, 2906, 309, 510, 412, 264, 2767, 13, 51664, 51664, 407, 341, 307, 1219, 257, 2192, 285, 271, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.16847609310615352, "compression_ratio": 1.6235294117647059, "no_speech_prob": 3.905227003997425e-06}, {"id": 426, "seek": 127680, "start": 1293.48, "end": 1295.48, "text": " configurations, basically.", "tokens": [50364, 407, 309, 311, 568, 1413, 805, 13, 50476, 50476, 407, 586, 291, 362, 2309, 819, 31493, 13, 50576, 50576, 407, 538, 659, 12, 1112, 2582, 278, 264, 1451, 510, 11, 264, 1451, 510, 11, 50706, 50706, 293, 264, 2309, 510, 11, 291, 362, 40610, 439, 264, 1944, 51198, 51198, 31493, 11, 1936, 13, 51298, 51518, 400, 300, 311, 516, 281, 2906, 309, 510, 412, 264, 2767, 13, 51664, 51664, 407, 341, 307, 1219, 257, 2192, 285, 271, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.16847609310615352, "compression_ratio": 1.6235294117647059, "no_speech_prob": 3.905227003997425e-06}, {"id": 427, "seek": 127680, "start": 1299.8799999999999, "end": 1302.8, "text": " And that's going to represent it here at the bottom.", "tokens": [50364, 407, 309, 311, 568, 1413, 805, 13, 50476, 50476, 407, 586, 291, 362, 2309, 819, 31493, 13, 50576, 50576, 407, 538, 659, 12, 1112, 2582, 278, 264, 1451, 510, 11, 264, 1451, 510, 11, 50706, 50706, 293, 264, 2309, 510, 11, 291, 362, 40610, 439, 264, 1944, 51198, 51198, 31493, 11, 1936, 13, 51298, 51518, 400, 300, 311, 516, 281, 2906, 309, 510, 412, 264, 2767, 13, 51664, 51664, 407, 341, 307, 1219, 257, 2192, 285, 271, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.16847609310615352, "compression_ratio": 1.6235294117647059, "no_speech_prob": 3.905227003997425e-06}, {"id": 428, "seek": 127680, "start": 1302.8, "end": 1304.56, "text": " So this is called a trellis.", "tokens": [50364, 407, 309, 311, 568, 1413, 805, 13, 50476, 50476, 407, 586, 291, 362, 2309, 819, 31493, 13, 50576, 50576, 407, 538, 659, 12, 1112, 2582, 278, 264, 1451, 510, 11, 264, 1451, 510, 11, 50706, 50706, 293, 264, 2309, 510, 11, 291, 362, 40610, 439, 264, 1944, 51198, 51198, 31493, 11, 1936, 13, 51298, 51518, 400, 300, 311, 516, 281, 2906, 309, 510, 412, 264, 2767, 13, 51664, 51664, 407, 341, 307, 1219, 257, 2192, 285, 271, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.16847609310615352, "compression_ratio": 1.6235294117647059, "no_speech_prob": 3.905227003997425e-06}, {"id": 429, "seek": 130456, "start": 1304.56, "end": 1307.84, "text": " And it's basically a graph that has a source node and a target", "tokens": [50364, 400, 309, 311, 1936, 257, 4295, 300, 575, 257, 4009, 9984, 293, 257, 3779, 50528, 50528, 9984, 13, 50558, 50558, 400, 633, 3100, 294, 257, 4295, 23249, 50654, 50654, 281, 257, 1729, 15187, 295, 264, 9102, 13, 50926, 50926, 407, 337, 1365, 11, 498, 286, 352, 807, 341, 3100, 11, 51144, 51144, 309, 1355, 710, 16, 6915, 502, 11, 710, 17, 6915, 1958, 11, 288, 16, 6915, 502, 11, 293, 288, 17, 6915, 568, 11, 51588, 51588, 718, 311, 584, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.11696100795970243, "compression_ratio": 1.4754098360655739, "no_speech_prob": 1.1123905096610542e-05}, {"id": 430, "seek": 130456, "start": 1307.84, "end": 1308.44, "text": " node.", "tokens": [50364, 400, 309, 311, 1936, 257, 4295, 300, 575, 257, 4009, 9984, 293, 257, 3779, 50528, 50528, 9984, 13, 50558, 50558, 400, 633, 3100, 294, 257, 4295, 23249, 50654, 50654, 281, 257, 1729, 15187, 295, 264, 9102, 13, 50926, 50926, 407, 337, 1365, 11, 498, 286, 352, 807, 341, 3100, 11, 51144, 51144, 309, 1355, 710, 16, 6915, 502, 11, 710, 17, 6915, 1958, 11, 288, 16, 6915, 502, 11, 293, 288, 17, 6915, 568, 11, 51588, 51588, 718, 311, 584, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.11696100795970243, "compression_ratio": 1.4754098360655739, "no_speech_prob": 1.1123905096610542e-05}, {"id": 431, "seek": 130456, "start": 1308.44, "end": 1310.36, "text": " And every path in a graph corresponds", "tokens": [50364, 400, 309, 311, 1936, 257, 4295, 300, 575, 257, 4009, 9984, 293, 257, 3779, 50528, 50528, 9984, 13, 50558, 50558, 400, 633, 3100, 294, 257, 4295, 23249, 50654, 50654, 281, 257, 1729, 15187, 295, 264, 9102, 13, 50926, 50926, 407, 337, 1365, 11, 498, 286, 352, 807, 341, 3100, 11, 51144, 51144, 309, 1355, 710, 16, 6915, 502, 11, 710, 17, 6915, 1958, 11, 288, 16, 6915, 502, 11, 293, 288, 17, 6915, 568, 11, 51588, 51588, 718, 311, 584, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.11696100795970243, "compression_ratio": 1.4754098360655739, "no_speech_prob": 1.1123905096610542e-05}, {"id": 432, "seek": 130456, "start": 1310.36, "end": 1315.8, "text": " to a particular assignment of the variables.", "tokens": [50364, 400, 309, 311, 1936, 257, 4295, 300, 575, 257, 4009, 9984, 293, 257, 3779, 50528, 50528, 9984, 13, 50558, 50558, 400, 633, 3100, 294, 257, 4295, 23249, 50654, 50654, 281, 257, 1729, 15187, 295, 264, 9102, 13, 50926, 50926, 407, 337, 1365, 11, 498, 286, 352, 807, 341, 3100, 11, 51144, 51144, 309, 1355, 710, 16, 6915, 502, 11, 710, 17, 6915, 1958, 11, 288, 16, 6915, 502, 11, 293, 288, 17, 6915, 568, 11, 51588, 51588, 718, 311, 584, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.11696100795970243, "compression_ratio": 1.4754098360655739, "no_speech_prob": 1.1123905096610542e-05}, {"id": 433, "seek": 130456, "start": 1315.8, "end": 1320.1599999999999, "text": " So for example, if I go through this path,", "tokens": [50364, 400, 309, 311, 1936, 257, 4295, 300, 575, 257, 4009, 9984, 293, 257, 3779, 50528, 50528, 9984, 13, 50558, 50558, 400, 633, 3100, 294, 257, 4295, 23249, 50654, 50654, 281, 257, 1729, 15187, 295, 264, 9102, 13, 50926, 50926, 407, 337, 1365, 11, 498, 286, 352, 807, 341, 3100, 11, 51144, 51144, 309, 1355, 710, 16, 6915, 502, 11, 710, 17, 6915, 1958, 11, 288, 16, 6915, 502, 11, 293, 288, 17, 6915, 568, 11, 51588, 51588, 718, 311, 584, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.11696100795970243, "compression_ratio": 1.4754098360655739, "no_speech_prob": 1.1123905096610542e-05}, {"id": 434, "seek": 130456, "start": 1320.1599999999999, "end": 1329.04, "text": " it means z1 equals 1, z2 equals 0, y1 equals 1, and y2 equals 2,", "tokens": [50364, 400, 309, 311, 1936, 257, 4295, 300, 575, 257, 4009, 9984, 293, 257, 3779, 50528, 50528, 9984, 13, 50558, 50558, 400, 633, 3100, 294, 257, 4295, 23249, 50654, 50654, 281, 257, 1729, 15187, 295, 264, 9102, 13, 50926, 50926, 407, 337, 1365, 11, 498, 286, 352, 807, 341, 3100, 11, 51144, 51144, 309, 1355, 710, 16, 6915, 502, 11, 710, 17, 6915, 1958, 11, 288, 16, 6915, 502, 11, 293, 288, 17, 6915, 568, 11, 51588, 51588, 718, 311, 584, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.11696100795970243, "compression_ratio": 1.4754098360655739, "no_speech_prob": 1.1123905096610542e-05}, {"id": 435, "seek": 130456, "start": 1329.04, "end": 1331.2, "text": " let's say.", "tokens": [50364, 400, 309, 311, 1936, 257, 4295, 300, 575, 257, 4009, 9984, 293, 257, 3779, 50528, 50528, 9984, 13, 50558, 50558, 400, 633, 3100, 294, 257, 4295, 23249, 50654, 50654, 281, 257, 1729, 15187, 295, 264, 9102, 13, 50926, 50926, 407, 337, 1365, 11, 498, 286, 352, 807, 341, 3100, 11, 51144, 51144, 309, 1355, 710, 16, 6915, 502, 11, 710, 17, 6915, 1958, 11, 288, 16, 6915, 502, 11, 293, 288, 17, 6915, 568, 11, 51588, 51588, 718, 311, 584, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.11696100795970243, "compression_ratio": 1.4754098360655739, "no_speech_prob": 1.1123905096610542e-05}, {"id": 436, "seek": 133120, "start": 1331.2, "end": 1336.8400000000001, "text": " And if I add up the terms on each arc,", "tokens": [50364, 400, 498, 286, 909, 493, 264, 2115, 322, 1184, 10346, 11, 50646, 50646, 286, 483, 264, 4787, 2281, 13, 50706, 50706, 6947, 10346, 307, 1936, 25339, 770, 538, 264, 2281, 1433, 11, 51030, 51030, 264, 2158, 295, 264, 2281, 300, 23249, 51116, 51116, 281, 341, 11694, 13, 51168, 51168, 407, 337, 1365, 11, 341, 10346, 510, 307, 341, 2281, 13, 51352, 51352, 400, 300, 311, 264, 2158, 295, 341, 2281, 1433, 337, 288, 16, 6915, 502, 51556, 51556, 293, 288, 17, 6915, 568, 13, 51618, 51850], "temperature": 0.0, "avg_logprob": -0.12758523767644708, "compression_ratio": 1.6483516483516483, "no_speech_prob": 6.438719992729602e-06}, {"id": 437, "seek": 133120, "start": 1336.8400000000001, "end": 1338.04, "text": " I get the overall energy.", "tokens": [50364, 400, 498, 286, 909, 493, 264, 2115, 322, 1184, 10346, 11, 50646, 50646, 286, 483, 264, 4787, 2281, 13, 50706, 50706, 6947, 10346, 307, 1936, 25339, 770, 538, 264, 2281, 1433, 11, 51030, 51030, 264, 2158, 295, 264, 2281, 300, 23249, 51116, 51116, 281, 341, 11694, 13, 51168, 51168, 407, 337, 1365, 11, 341, 10346, 510, 307, 341, 2281, 13, 51352, 51352, 400, 300, 311, 264, 2158, 295, 341, 2281, 1433, 337, 288, 16, 6915, 502, 51556, 51556, 293, 288, 17, 6915, 568, 13, 51618, 51850], "temperature": 0.0, "avg_logprob": -0.12758523767644708, "compression_ratio": 1.6483516483516483, "no_speech_prob": 6.438719992729602e-06}, {"id": 438, "seek": 133120, "start": 1338.04, "end": 1344.52, "text": " Each arc is basically annotated by the energy term,", "tokens": [50364, 400, 498, 286, 909, 493, 264, 2115, 322, 1184, 10346, 11, 50646, 50646, 286, 483, 264, 4787, 2281, 13, 50706, 50706, 6947, 10346, 307, 1936, 25339, 770, 538, 264, 2281, 1433, 11, 51030, 51030, 264, 2158, 295, 264, 2281, 300, 23249, 51116, 51116, 281, 341, 11694, 13, 51168, 51168, 407, 337, 1365, 11, 341, 10346, 510, 307, 341, 2281, 13, 51352, 51352, 400, 300, 311, 264, 2158, 295, 341, 2281, 1433, 337, 288, 16, 6915, 502, 51556, 51556, 293, 288, 17, 6915, 568, 13, 51618, 51850], "temperature": 0.0, "avg_logprob": -0.12758523767644708, "compression_ratio": 1.6483516483516483, "no_speech_prob": 6.438719992729602e-06}, {"id": 439, "seek": 133120, "start": 1344.52, "end": 1346.24, "text": " the value of the energy that corresponds", "tokens": [50364, 400, 498, 286, 909, 493, 264, 2115, 322, 1184, 10346, 11, 50646, 50646, 286, 483, 264, 4787, 2281, 13, 50706, 50706, 6947, 10346, 307, 1936, 25339, 770, 538, 264, 2281, 1433, 11, 51030, 51030, 264, 2158, 295, 264, 2281, 300, 23249, 51116, 51116, 281, 341, 11694, 13, 51168, 51168, 407, 337, 1365, 11, 341, 10346, 510, 307, 341, 2281, 13, 51352, 51352, 400, 300, 311, 264, 2158, 295, 341, 2281, 1433, 337, 288, 16, 6915, 502, 51556, 51556, 293, 288, 17, 6915, 568, 13, 51618, 51850], "temperature": 0.0, "avg_logprob": -0.12758523767644708, "compression_ratio": 1.6483516483516483, "no_speech_prob": 6.438719992729602e-06}, {"id": 440, "seek": 133120, "start": 1346.24, "end": 1347.28, "text": " to this configuration.", "tokens": [50364, 400, 498, 286, 909, 493, 264, 2115, 322, 1184, 10346, 11, 50646, 50646, 286, 483, 264, 4787, 2281, 13, 50706, 50706, 6947, 10346, 307, 1936, 25339, 770, 538, 264, 2281, 1433, 11, 51030, 51030, 264, 2158, 295, 264, 2281, 300, 23249, 51116, 51116, 281, 341, 11694, 13, 51168, 51168, 407, 337, 1365, 11, 341, 10346, 510, 307, 341, 2281, 13, 51352, 51352, 400, 300, 311, 264, 2158, 295, 341, 2281, 1433, 337, 288, 16, 6915, 502, 51556, 51556, 293, 288, 17, 6915, 568, 13, 51618, 51850], "temperature": 0.0, "avg_logprob": -0.12758523767644708, "compression_ratio": 1.6483516483516483, "no_speech_prob": 6.438719992729602e-06}, {"id": 441, "seek": 133120, "start": 1347.28, "end": 1350.96, "text": " So for example, this arc here is this energy.", "tokens": [50364, 400, 498, 286, 909, 493, 264, 2115, 322, 1184, 10346, 11, 50646, 50646, 286, 483, 264, 4787, 2281, 13, 50706, 50706, 6947, 10346, 307, 1936, 25339, 770, 538, 264, 2281, 1433, 11, 51030, 51030, 264, 2158, 295, 264, 2281, 300, 23249, 51116, 51116, 281, 341, 11694, 13, 51168, 51168, 407, 337, 1365, 11, 341, 10346, 510, 307, 341, 2281, 13, 51352, 51352, 400, 300, 311, 264, 2158, 295, 341, 2281, 1433, 337, 288, 16, 6915, 502, 51556, 51556, 293, 288, 17, 6915, 568, 13, 51618, 51850], "temperature": 0.0, "avg_logprob": -0.12758523767644708, "compression_ratio": 1.6483516483516483, "no_speech_prob": 6.438719992729602e-06}, {"id": 442, "seek": 133120, "start": 1350.96, "end": 1355.04, "text": " And that's the value of this energy term for y1 equals 1", "tokens": [50364, 400, 498, 286, 909, 493, 264, 2115, 322, 1184, 10346, 11, 50646, 50646, 286, 483, 264, 4787, 2281, 13, 50706, 50706, 6947, 10346, 307, 1936, 25339, 770, 538, 264, 2281, 1433, 11, 51030, 51030, 264, 2158, 295, 264, 2281, 300, 23249, 51116, 51116, 281, 341, 11694, 13, 51168, 51168, 407, 337, 1365, 11, 341, 10346, 510, 307, 341, 2281, 13, 51352, 51352, 400, 300, 311, 264, 2158, 295, 341, 2281, 1433, 337, 288, 16, 6915, 502, 51556, 51556, 293, 288, 17, 6915, 568, 13, 51618, 51850], "temperature": 0.0, "avg_logprob": -0.12758523767644708, "compression_ratio": 1.6483516483516483, "no_speech_prob": 6.438719992729602e-06}, {"id": 443, "seek": 133120, "start": 1355.04, "end": 1356.28, "text": " and y2 equals 2.", "tokens": [50364, 400, 498, 286, 909, 493, 264, 2115, 322, 1184, 10346, 11, 50646, 50646, 286, 483, 264, 4787, 2281, 13, 50706, 50706, 6947, 10346, 307, 1936, 25339, 770, 538, 264, 2281, 1433, 11, 51030, 51030, 264, 2158, 295, 264, 2281, 300, 23249, 51116, 51116, 281, 341, 11694, 13, 51168, 51168, 407, 337, 1365, 11, 341, 10346, 510, 307, 341, 2281, 13, 51352, 51352, 400, 300, 311, 264, 2158, 295, 341, 2281, 1433, 337, 288, 16, 6915, 502, 51556, 51556, 293, 288, 17, 6915, 568, 13, 51618, 51850], "temperature": 0.0, "avg_logprob": -0.12758523767644708, "compression_ratio": 1.6483516483516483, "no_speech_prob": 6.438719992729602e-06}, {"id": 444, "seek": 135628, "start": 1356.28, "end": 1361.6, "text": " So each of these arcs is a value of this energy term.", "tokens": [50364, 407, 1184, 295, 613, 10346, 82, 307, 257, 2158, 295, 341, 2281, 1433, 13, 50630, 50630, 6947, 295, 613, 10346, 82, 307, 257, 2158, 295, 300, 2281, 1433, 11, 1030, 11458, 13, 50870, 50870, 400, 586, 11, 5006, 264, 1151, 12437, 2281, 11694, 295, 710, 16, 11, 51198, 51198, 710, 17, 11, 288, 16, 11, 288, 17, 2935, 14689, 294, 5006, 264, 31875, 51354, 51354, 14518, 294, 341, 4295, 13, 51402, 51594, 400, 281, 360, 300, 11, 291, 362, 281, 915, 264, 31875, 3100, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.3650233962319114, "compression_ratio": 1.7797619047619047, "no_speech_prob": 5.2544587560987566e-06}, {"id": 445, "seek": 135628, "start": 1361.6, "end": 1366.3999999999999, "text": " Each of these arcs is a value of that energy term, et cetera.", "tokens": [50364, 407, 1184, 295, 613, 10346, 82, 307, 257, 2158, 295, 341, 2281, 1433, 13, 50630, 50630, 6947, 295, 613, 10346, 82, 307, 257, 2158, 295, 300, 2281, 1433, 11, 1030, 11458, 13, 50870, 50870, 400, 586, 11, 5006, 264, 1151, 12437, 2281, 11694, 295, 710, 16, 11, 51198, 51198, 710, 17, 11, 288, 16, 11, 288, 17, 2935, 14689, 294, 5006, 264, 31875, 51354, 51354, 14518, 294, 341, 4295, 13, 51402, 51594, 400, 281, 360, 300, 11, 291, 362, 281, 915, 264, 31875, 3100, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.3650233962319114, "compression_ratio": 1.7797619047619047, "no_speech_prob": 5.2544587560987566e-06}, {"id": 446, "seek": 135628, "start": 1366.3999999999999, "end": 1372.96, "text": " And now, finding the best lowest energy configuration of z1,", "tokens": [50364, 407, 1184, 295, 613, 10346, 82, 307, 257, 2158, 295, 341, 2281, 1433, 13, 50630, 50630, 6947, 295, 613, 10346, 82, 307, 257, 2158, 295, 300, 2281, 1433, 11, 1030, 11458, 13, 50870, 50870, 400, 586, 11, 5006, 264, 1151, 12437, 2281, 11694, 295, 710, 16, 11, 51198, 51198, 710, 17, 11, 288, 16, 11, 288, 17, 2935, 14689, 294, 5006, 264, 31875, 51354, 51354, 14518, 294, 341, 4295, 13, 51402, 51594, 400, 281, 360, 300, 11, 291, 362, 281, 915, 264, 31875, 3100, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.3650233962319114, "compression_ratio": 1.7797619047619047, "no_speech_prob": 5.2544587560987566e-06}, {"id": 447, "seek": 135628, "start": 1372.96, "end": 1376.08, "text": " z2, y1, y2 simply consists in finding the shortest", "tokens": [50364, 407, 1184, 295, 613, 10346, 82, 307, 257, 2158, 295, 341, 2281, 1433, 13, 50630, 50630, 6947, 295, 613, 10346, 82, 307, 257, 2158, 295, 300, 2281, 1433, 11, 1030, 11458, 13, 50870, 50870, 400, 586, 11, 5006, 264, 1151, 12437, 2281, 11694, 295, 710, 16, 11, 51198, 51198, 710, 17, 11, 288, 16, 11, 288, 17, 2935, 14689, 294, 5006, 264, 31875, 51354, 51354, 14518, 294, 341, 4295, 13, 51402, 51594, 400, 281, 360, 300, 11, 291, 362, 281, 915, 264, 31875, 3100, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.3650233962319114, "compression_ratio": 1.7797619047619047, "no_speech_prob": 5.2544587560987566e-06}, {"id": 448, "seek": 135628, "start": 1376.08, "end": 1377.04, "text": " paths in this graph.", "tokens": [50364, 407, 1184, 295, 613, 10346, 82, 307, 257, 2158, 295, 341, 2281, 1433, 13, 50630, 50630, 6947, 295, 613, 10346, 82, 307, 257, 2158, 295, 300, 2281, 1433, 11, 1030, 11458, 13, 50870, 50870, 400, 586, 11, 5006, 264, 1151, 12437, 2281, 11694, 295, 710, 16, 11, 51198, 51198, 710, 17, 11, 288, 16, 11, 288, 17, 2935, 14689, 294, 5006, 264, 31875, 51354, 51354, 14518, 294, 341, 4295, 13, 51402, 51594, 400, 281, 360, 300, 11, 291, 362, 281, 915, 264, 31875, 3100, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.3650233962319114, "compression_ratio": 1.7797619047619047, "no_speech_prob": 5.2544587560987566e-06}, {"id": 449, "seek": 135628, "start": 1380.8799999999999, "end": 1386.2, "text": " And to do that, you have to find the shortest path", "tokens": [50364, 407, 1184, 295, 613, 10346, 82, 307, 257, 2158, 295, 341, 2281, 1433, 13, 50630, 50630, 6947, 295, 613, 10346, 82, 307, 257, 2158, 295, 300, 2281, 1433, 11, 1030, 11458, 13, 50870, 50870, 400, 586, 11, 5006, 264, 1151, 12437, 2281, 11694, 295, 710, 16, 11, 51198, 51198, 710, 17, 11, 288, 16, 11, 288, 17, 2935, 14689, 294, 5006, 264, 31875, 51354, 51354, 14518, 294, 341, 4295, 13, 51402, 51594, 400, 281, 360, 300, 11, 291, 362, 281, 915, 264, 31875, 3100, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.3650233962319114, "compression_ratio": 1.7797619047619047, "no_speech_prob": 5.2544587560987566e-06}, {"id": 450, "seek": 138620, "start": 1386.2, "end": 1387.56, "text": " to do this.", "tokens": [50364, 281, 360, 341, 13, 50432, 50432, 286, 787, 362, 281, 13059, 1451, 2115, 295, 2281, 510, 11, 50660, 50660, 1451, 2115, 510, 11, 293, 2309, 2115, 510, 11, 293, 300, 311, 309, 13, 50756, 50900, 407, 300, 311, 3499, 13, 51030, 51030, 286, 500, 380, 458, 983, 286, 848, 3165, 510, 13, 51096, 51096, 876, 11, 3165, 570, 295, 264, 700, 732, 510, 11, 2086, 13, 51230, 51230, 407, 3165, 4190, 3217, 13, 51296, 51570, 407, 300, 311, 257, 688, 1570, 813, 24124, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.19903555783358487, "compression_ratio": 1.5582822085889572, "no_speech_prob": 1.618419810256455e-05}, {"id": 451, "seek": 138620, "start": 1387.56, "end": 1392.1200000000001, "text": " I only have to evaluate four terms of energy here,", "tokens": [50364, 281, 360, 341, 13, 50432, 50432, 286, 787, 362, 281, 13059, 1451, 2115, 295, 2281, 510, 11, 50660, 50660, 1451, 2115, 510, 11, 293, 2309, 2115, 510, 11, 293, 300, 311, 309, 13, 50756, 50900, 407, 300, 311, 3499, 13, 51030, 51030, 286, 500, 380, 458, 983, 286, 848, 3165, 510, 13, 51096, 51096, 876, 11, 3165, 570, 295, 264, 700, 732, 510, 11, 2086, 13, 51230, 51230, 407, 3165, 4190, 3217, 13, 51296, 51570, 407, 300, 311, 257, 688, 1570, 813, 24124, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.19903555783358487, "compression_ratio": 1.5582822085889572, "no_speech_prob": 1.618419810256455e-05}, {"id": 452, "seek": 138620, "start": 1392.1200000000001, "end": 1394.04, "text": " four terms here, and six terms here, and that's it.", "tokens": [50364, 281, 360, 341, 13, 50432, 50432, 286, 787, 362, 281, 13059, 1451, 2115, 295, 2281, 510, 11, 50660, 50660, 1451, 2115, 510, 11, 293, 2309, 2115, 510, 11, 293, 300, 311, 309, 13, 50756, 50900, 407, 300, 311, 3499, 13, 51030, 51030, 286, 500, 380, 458, 983, 286, 848, 3165, 510, 13, 51096, 51096, 876, 11, 3165, 570, 295, 264, 700, 732, 510, 11, 2086, 13, 51230, 51230, 407, 3165, 4190, 3217, 13, 51296, 51570, 407, 300, 311, 257, 688, 1570, 813, 24124, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.19903555783358487, "compression_ratio": 1.5582822085889572, "no_speech_prob": 1.618419810256455e-05}, {"id": 453, "seek": 138620, "start": 1396.92, "end": 1399.52, "text": " So that's 14.", "tokens": [50364, 281, 360, 341, 13, 50432, 50432, 286, 787, 362, 281, 13059, 1451, 2115, 295, 2281, 510, 11, 50660, 50660, 1451, 2115, 510, 11, 293, 2309, 2115, 510, 11, 293, 300, 311, 309, 13, 50756, 50900, 407, 300, 311, 3499, 13, 51030, 51030, 286, 500, 380, 458, 983, 286, 848, 3165, 510, 13, 51096, 51096, 876, 11, 3165, 570, 295, 264, 700, 732, 510, 11, 2086, 13, 51230, 51230, 407, 3165, 4190, 3217, 13, 51296, 51570, 407, 300, 311, 257, 688, 1570, 813, 24124, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.19903555783358487, "compression_ratio": 1.5582822085889572, "no_speech_prob": 1.618419810256455e-05}, {"id": 454, "seek": 138620, "start": 1399.52, "end": 1400.8400000000001, "text": " I don't know why I said 16 here.", "tokens": [50364, 281, 360, 341, 13, 50432, 50432, 286, 787, 362, 281, 13059, 1451, 2115, 295, 2281, 510, 11, 50660, 50660, 1451, 2115, 510, 11, 293, 2309, 2115, 510, 11, 293, 300, 311, 309, 13, 50756, 50900, 407, 300, 311, 3499, 13, 51030, 51030, 286, 500, 380, 458, 983, 286, 848, 3165, 510, 13, 51096, 51096, 876, 11, 3165, 570, 295, 264, 700, 732, 510, 11, 2086, 13, 51230, 51230, 407, 3165, 4190, 3217, 13, 51296, 51570, 407, 300, 311, 257, 688, 1570, 813, 24124, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.19903555783358487, "compression_ratio": 1.5582822085889572, "no_speech_prob": 1.618419810256455e-05}, {"id": 455, "seek": 138620, "start": 1400.8400000000001, "end": 1403.52, "text": " Oh, 16 because of the first two here, yes.", "tokens": [50364, 281, 360, 341, 13, 50432, 50432, 286, 787, 362, 281, 13059, 1451, 2115, 295, 2281, 510, 11, 50660, 50660, 1451, 2115, 510, 11, 293, 2309, 2115, 510, 11, 293, 300, 311, 309, 13, 50756, 50900, 407, 300, 311, 3499, 13, 51030, 51030, 286, 500, 380, 458, 983, 286, 848, 3165, 510, 13, 51096, 51096, 876, 11, 3165, 570, 295, 264, 700, 732, 510, 11, 2086, 13, 51230, 51230, 407, 3165, 4190, 3217, 13, 51296, 51570, 407, 300, 311, 257, 688, 1570, 813, 24124, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.19903555783358487, "compression_ratio": 1.5582822085889572, "no_speech_prob": 1.618419810256455e-05}, {"id": 456, "seek": 138620, "start": 1403.52, "end": 1404.8400000000001, "text": " So 16 values total.", "tokens": [50364, 281, 360, 341, 13, 50432, 50432, 286, 787, 362, 281, 13059, 1451, 2115, 295, 2281, 510, 11, 50660, 50660, 1451, 2115, 510, 11, 293, 2309, 2115, 510, 11, 293, 300, 311, 309, 13, 50756, 50900, 407, 300, 311, 3499, 13, 51030, 51030, 286, 500, 380, 458, 983, 286, 848, 3165, 510, 13, 51096, 51096, 876, 11, 3165, 570, 295, 264, 700, 732, 510, 11, 2086, 13, 51230, 51230, 407, 3165, 4190, 3217, 13, 51296, 51570, 407, 300, 311, 257, 688, 1570, 813, 24124, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.19903555783358487, "compression_ratio": 1.5582822085889572, "no_speech_prob": 1.618419810256455e-05}, {"id": 457, "seek": 138620, "start": 1410.32, "end": 1414.32, "text": " So that's a lot less than 96.", "tokens": [50364, 281, 360, 341, 13, 50432, 50432, 286, 787, 362, 281, 13059, 1451, 2115, 295, 2281, 510, 11, 50660, 50660, 1451, 2115, 510, 11, 293, 2309, 2115, 510, 11, 293, 300, 311, 309, 13, 50756, 50900, 407, 300, 311, 3499, 13, 51030, 51030, 286, 500, 380, 458, 983, 286, 848, 3165, 510, 13, 51096, 51096, 876, 11, 3165, 570, 295, 264, 700, 732, 510, 11, 2086, 13, 51230, 51230, 407, 3165, 4190, 3217, 13, 51296, 51570, 407, 300, 311, 257, 688, 1570, 813, 24124, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.19903555783358487, "compression_ratio": 1.5582822085889572, "no_speech_prob": 1.618419810256455e-05}, {"id": 458, "seek": 141432, "start": 1414.32, "end": 1417.72, "text": " And that's because the energy is a sum of terms,", "tokens": [50364, 400, 300, 311, 570, 264, 2281, 307, 257, 2408, 295, 2115, 11, 50534, 50534, 293, 291, 393, 764, 729, 7148, 14642, 281, 360, 264, 38253, 13, 50798, 50798, 407, 341, 307, 257, 2199, 1389, 689, 264, 5598, 307, 257, 8310, 13, 50962, 50962, 400, 562, 264, 5598, 307, 257, 8310, 11, 51033, 51033, 456, 307, 257, 2199, 9284, 13, 51126, 51126, 400, 309, 311, 1936, 31875, 14518, 294, 257, 4295, 11, 294, 257, 2192, 285, 271, 13, 51326, 51326, 407, 300, 311, 445, 8546, 9410, 13, 51504, 51504, 400, 309, 311, 588, 2199, 11, 309, 311, 7148, 11, 309, 311, 1481, 13, 51704, 51704, 407, 281, 3847, 257, 1185, 411, 341, 11, 437, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1419311751667251, "compression_ratio": 1.8444444444444446, "no_speech_prob": 6.2404960772255436e-06}, {"id": 459, "seek": 141432, "start": 1417.72, "end": 1423.0, "text": " and you can use those efficient algorithms to do the inference.", "tokens": [50364, 400, 300, 311, 570, 264, 2281, 307, 257, 2408, 295, 2115, 11, 50534, 50534, 293, 291, 393, 764, 729, 7148, 14642, 281, 360, 264, 38253, 13, 50798, 50798, 407, 341, 307, 257, 2199, 1389, 689, 264, 5598, 307, 257, 8310, 13, 50962, 50962, 400, 562, 264, 5598, 307, 257, 8310, 11, 51033, 51033, 456, 307, 257, 2199, 9284, 13, 51126, 51126, 400, 309, 311, 1936, 31875, 14518, 294, 257, 4295, 11, 294, 257, 2192, 285, 271, 13, 51326, 51326, 407, 300, 311, 445, 8546, 9410, 13, 51504, 51504, 400, 309, 311, 588, 2199, 11, 309, 311, 7148, 11, 309, 311, 1481, 13, 51704, 51704, 407, 281, 3847, 257, 1185, 411, 341, 11, 437, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1419311751667251, "compression_ratio": 1.8444444444444446, "no_speech_prob": 6.2404960772255436e-06}, {"id": 460, "seek": 141432, "start": 1423.0, "end": 1426.28, "text": " So this is a simple case where the output is a sequence.", "tokens": [50364, 400, 300, 311, 570, 264, 2281, 307, 257, 2408, 295, 2115, 11, 50534, 50534, 293, 291, 393, 764, 729, 7148, 14642, 281, 360, 264, 38253, 13, 50798, 50798, 407, 341, 307, 257, 2199, 1389, 689, 264, 5598, 307, 257, 8310, 13, 50962, 50962, 400, 562, 264, 5598, 307, 257, 8310, 11, 51033, 51033, 456, 307, 257, 2199, 9284, 13, 51126, 51126, 400, 309, 311, 1936, 31875, 14518, 294, 257, 4295, 11, 294, 257, 2192, 285, 271, 13, 51326, 51326, 407, 300, 311, 445, 8546, 9410, 13, 51504, 51504, 400, 309, 311, 588, 2199, 11, 309, 311, 7148, 11, 309, 311, 1481, 13, 51704, 51704, 407, 281, 3847, 257, 1185, 411, 341, 11, 437, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1419311751667251, "compression_ratio": 1.8444444444444446, "no_speech_prob": 6.2404960772255436e-06}, {"id": 461, "seek": 141432, "start": 1426.28, "end": 1427.7, "text": " And when the output is a sequence,", "tokens": [50364, 400, 300, 311, 570, 264, 2281, 307, 257, 2408, 295, 2115, 11, 50534, 50534, 293, 291, 393, 764, 729, 7148, 14642, 281, 360, 264, 38253, 13, 50798, 50798, 407, 341, 307, 257, 2199, 1389, 689, 264, 5598, 307, 257, 8310, 13, 50962, 50962, 400, 562, 264, 5598, 307, 257, 8310, 11, 51033, 51033, 456, 307, 257, 2199, 9284, 13, 51126, 51126, 400, 309, 311, 1936, 31875, 14518, 294, 257, 4295, 11, 294, 257, 2192, 285, 271, 13, 51326, 51326, 407, 300, 311, 445, 8546, 9410, 13, 51504, 51504, 400, 309, 311, 588, 2199, 11, 309, 311, 7148, 11, 309, 311, 1481, 13, 51704, 51704, 407, 281, 3847, 257, 1185, 411, 341, 11, 437, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1419311751667251, "compression_ratio": 1.8444444444444446, "no_speech_prob": 6.2404960772255436e-06}, {"id": 462, "seek": 141432, "start": 1427.7, "end": 1429.56, "text": " there is a simple algorithm.", "tokens": [50364, 400, 300, 311, 570, 264, 2281, 307, 257, 2408, 295, 2115, 11, 50534, 50534, 293, 291, 393, 764, 729, 7148, 14642, 281, 360, 264, 38253, 13, 50798, 50798, 407, 341, 307, 257, 2199, 1389, 689, 264, 5598, 307, 257, 8310, 13, 50962, 50962, 400, 562, 264, 5598, 307, 257, 8310, 11, 51033, 51033, 456, 307, 257, 2199, 9284, 13, 51126, 51126, 400, 309, 311, 1936, 31875, 14518, 294, 257, 4295, 11, 294, 257, 2192, 285, 271, 13, 51326, 51326, 407, 300, 311, 445, 8546, 9410, 13, 51504, 51504, 400, 309, 311, 588, 2199, 11, 309, 311, 7148, 11, 309, 311, 1481, 13, 51704, 51704, 407, 281, 3847, 257, 1185, 411, 341, 11, 437, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1419311751667251, "compression_ratio": 1.8444444444444446, "no_speech_prob": 6.2404960772255436e-06}, {"id": 463, "seek": 141432, "start": 1429.56, "end": 1433.56, "text": " And it's basically shortest paths in a graph, in a trellis.", "tokens": [50364, 400, 300, 311, 570, 264, 2281, 307, 257, 2408, 295, 2115, 11, 50534, 50534, 293, 291, 393, 764, 729, 7148, 14642, 281, 360, 264, 38253, 13, 50798, 50798, 407, 341, 307, 257, 2199, 1389, 689, 264, 5598, 307, 257, 8310, 13, 50962, 50962, 400, 562, 264, 5598, 307, 257, 8310, 11, 51033, 51033, 456, 307, 257, 2199, 9284, 13, 51126, 51126, 400, 309, 311, 1936, 31875, 14518, 294, 257, 4295, 11, 294, 257, 2192, 285, 271, 13, 51326, 51326, 407, 300, 311, 445, 8546, 9410, 13, 51504, 51504, 400, 309, 311, 588, 2199, 11, 309, 311, 7148, 11, 309, 311, 1481, 13, 51704, 51704, 407, 281, 3847, 257, 1185, 411, 341, 11, 437, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1419311751667251, "compression_ratio": 1.8444444444444446, "no_speech_prob": 6.2404960772255436e-06}, {"id": 464, "seek": 141432, "start": 1433.56, "end": 1437.12, "text": " So that's just dynamic programming.", "tokens": [50364, 400, 300, 311, 570, 264, 2281, 307, 257, 2408, 295, 2115, 11, 50534, 50534, 293, 291, 393, 764, 729, 7148, 14642, 281, 360, 264, 38253, 13, 50798, 50798, 407, 341, 307, 257, 2199, 1389, 689, 264, 5598, 307, 257, 8310, 13, 50962, 50962, 400, 562, 264, 5598, 307, 257, 8310, 11, 51033, 51033, 456, 307, 257, 2199, 9284, 13, 51126, 51126, 400, 309, 311, 1936, 31875, 14518, 294, 257, 4295, 11, 294, 257, 2192, 285, 271, 13, 51326, 51326, 407, 300, 311, 445, 8546, 9410, 13, 51504, 51504, 400, 309, 311, 588, 2199, 11, 309, 311, 7148, 11, 309, 311, 1481, 13, 51704, 51704, 407, 281, 3847, 257, 1185, 411, 341, 11, 437, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1419311751667251, "compression_ratio": 1.8444444444444446, "no_speech_prob": 6.2404960772255436e-06}, {"id": 465, "seek": 141432, "start": 1437.12, "end": 1441.12, "text": " And it's very simple, it's efficient, it's nice.", "tokens": [50364, 400, 300, 311, 570, 264, 2281, 307, 257, 2408, 295, 2115, 11, 50534, 50534, 293, 291, 393, 764, 729, 7148, 14642, 281, 360, 264, 38253, 13, 50798, 50798, 407, 341, 307, 257, 2199, 1389, 689, 264, 5598, 307, 257, 8310, 13, 50962, 50962, 400, 562, 264, 5598, 307, 257, 8310, 11, 51033, 51033, 456, 307, 257, 2199, 9284, 13, 51126, 51126, 400, 309, 311, 1936, 31875, 14518, 294, 257, 4295, 11, 294, 257, 2192, 285, 271, 13, 51326, 51326, 407, 300, 311, 445, 8546, 9410, 13, 51504, 51504, 400, 309, 311, 588, 2199, 11, 309, 311, 7148, 11, 309, 311, 1481, 13, 51704, 51704, 407, 281, 3847, 257, 1185, 411, 341, 11, 437, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1419311751667251, "compression_ratio": 1.8444444444444446, "no_speech_prob": 6.2404960772255436e-06}, {"id": 466, "seek": 141432, "start": 1441.12, "end": 1443.48, "text": " So to train a system like this, what", "tokens": [50364, 400, 300, 311, 570, 264, 2281, 307, 257, 2408, 295, 2115, 11, 50534, 50534, 293, 291, 393, 764, 729, 7148, 14642, 281, 360, 264, 38253, 13, 50798, 50798, 407, 341, 307, 257, 2199, 1389, 689, 264, 5598, 307, 257, 8310, 13, 50962, 50962, 400, 562, 264, 5598, 307, 257, 8310, 11, 51033, 51033, 456, 307, 257, 2199, 9284, 13, 51126, 51126, 400, 309, 311, 1936, 31875, 14518, 294, 257, 4295, 11, 294, 257, 2192, 285, 271, 13, 51326, 51326, 407, 300, 311, 445, 8546, 9410, 13, 51504, 51504, 400, 309, 311, 588, 2199, 11, 309, 311, 7148, 11, 309, 311, 1481, 13, 51704, 51704, 407, 281, 3847, 257, 1185, 411, 341, 11, 437, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1419311751667251, "compression_ratio": 1.8444444444444446, "no_speech_prob": 6.2404960772255436e-06}, {"id": 467, "seek": 144348, "start": 1443.48, "end": 1445.44, "text": " you need to tell it is you need to tell it,", "tokens": [50364, 291, 643, 281, 980, 309, 307, 291, 643, 281, 980, 309, 11, 50462, 50462, 510, 307, 264, 3006, 11694, 295, 288, 16, 11, 288, 17, 13, 50578, 50578, 286, 500, 380, 458, 437, 710, 16, 11, 710, 17, 307, 570, 309, 311, 257, 48994, 7006, 13, 50720, 50720, 407, 915, 385, 264, 14518, 300, 1709, 281, 264, 3006, 6562, 50970, 50970, 295, 288, 16, 11, 288, 17, 13, 51138, 51138, 407, 291, 458, 300, 11, 718, 311, 584, 11, 288, 16, 2681, 502, 293, 288, 17, 2681, 568, 13, 51284, 51284, 407, 291, 458, 300, 264, 3006, 3100, 575, 281, 4090, 341, 2113, 13, 51668, 51668, 400, 370, 456, 311, 787, 257, 25993, 295, 14518, 337, 264, 3894, 2306, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.14058094489865186, "compression_ratio": 1.7702702702702702, "no_speech_prob": 3.7009536754339933e-05}, {"id": 468, "seek": 144348, "start": 1445.44, "end": 1447.76, "text": " here is the correct configuration of y1, y2.", "tokens": [50364, 291, 643, 281, 980, 309, 307, 291, 643, 281, 980, 309, 11, 50462, 50462, 510, 307, 264, 3006, 11694, 295, 288, 16, 11, 288, 17, 13, 50578, 50578, 286, 500, 380, 458, 437, 710, 16, 11, 710, 17, 307, 570, 309, 311, 257, 48994, 7006, 13, 50720, 50720, 407, 915, 385, 264, 14518, 300, 1709, 281, 264, 3006, 6562, 50970, 50970, 295, 288, 16, 11, 288, 17, 13, 51138, 51138, 407, 291, 458, 300, 11, 718, 311, 584, 11, 288, 16, 2681, 502, 293, 288, 17, 2681, 568, 13, 51284, 51284, 407, 291, 458, 300, 264, 3006, 3100, 575, 281, 4090, 341, 2113, 13, 51668, 51668, 400, 370, 456, 311, 787, 257, 25993, 295, 14518, 337, 264, 3894, 2306, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.14058094489865186, "compression_ratio": 1.7702702702702702, "no_speech_prob": 3.7009536754339933e-05}, {"id": 469, "seek": 144348, "start": 1447.76, "end": 1450.6, "text": " I don't know what z1, z2 is because it's a latent variable.", "tokens": [50364, 291, 643, 281, 980, 309, 307, 291, 643, 281, 980, 309, 11, 50462, 50462, 510, 307, 264, 3006, 11694, 295, 288, 16, 11, 288, 17, 13, 50578, 50578, 286, 500, 380, 458, 437, 710, 16, 11, 710, 17, 307, 570, 309, 311, 257, 48994, 7006, 13, 50720, 50720, 407, 915, 385, 264, 14518, 300, 1709, 281, 264, 3006, 6562, 50970, 50970, 295, 288, 16, 11, 288, 17, 13, 51138, 51138, 407, 291, 458, 300, 11, 718, 311, 584, 11, 288, 16, 2681, 502, 293, 288, 17, 2681, 568, 13, 51284, 51284, 407, 291, 458, 300, 264, 3006, 3100, 575, 281, 4090, 341, 2113, 13, 51668, 51668, 400, 370, 456, 311, 787, 257, 25993, 295, 14518, 337, 264, 3894, 2306, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.14058094489865186, "compression_ratio": 1.7702702702702702, "no_speech_prob": 3.7009536754339933e-05}, {"id": 470, "seek": 144348, "start": 1450.6, "end": 1455.6, "text": " So find me the paths that goes to the correct combination", "tokens": [50364, 291, 643, 281, 980, 309, 307, 291, 643, 281, 980, 309, 11, 50462, 50462, 510, 307, 264, 3006, 11694, 295, 288, 16, 11, 288, 17, 13, 50578, 50578, 286, 500, 380, 458, 437, 710, 16, 11, 710, 17, 307, 570, 309, 311, 257, 48994, 7006, 13, 50720, 50720, 407, 915, 385, 264, 14518, 300, 1709, 281, 264, 3006, 6562, 50970, 50970, 295, 288, 16, 11, 288, 17, 13, 51138, 51138, 407, 291, 458, 300, 11, 718, 311, 584, 11, 288, 16, 2681, 502, 293, 288, 17, 2681, 568, 13, 51284, 51284, 407, 291, 458, 300, 264, 3006, 3100, 575, 281, 4090, 341, 2113, 13, 51668, 51668, 400, 370, 456, 311, 787, 257, 25993, 295, 14518, 337, 264, 3894, 2306, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.14058094489865186, "compression_ratio": 1.7702702702702702, "no_speech_prob": 3.7009536754339933e-05}, {"id": 471, "seek": 144348, "start": 1455.6, "end": 1458.96, "text": " of y1, y2.", "tokens": [50364, 291, 643, 281, 980, 309, 307, 291, 643, 281, 980, 309, 11, 50462, 50462, 510, 307, 264, 3006, 11694, 295, 288, 16, 11, 288, 17, 13, 50578, 50578, 286, 500, 380, 458, 437, 710, 16, 11, 710, 17, 307, 570, 309, 311, 257, 48994, 7006, 13, 50720, 50720, 407, 915, 385, 264, 14518, 300, 1709, 281, 264, 3006, 6562, 50970, 50970, 295, 288, 16, 11, 288, 17, 13, 51138, 51138, 407, 291, 458, 300, 11, 718, 311, 584, 11, 288, 16, 2681, 502, 293, 288, 17, 2681, 568, 13, 51284, 51284, 407, 291, 458, 300, 264, 3006, 3100, 575, 281, 4090, 341, 2113, 13, 51668, 51668, 400, 370, 456, 311, 787, 257, 25993, 295, 14518, 337, 264, 3894, 2306, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.14058094489865186, "compression_ratio": 1.7702702702702702, "no_speech_prob": 3.7009536754339933e-05}, {"id": 472, "seek": 144348, "start": 1458.96, "end": 1461.88, "text": " So you know that, let's say, y1 equal 1 and y2 equal 2.", "tokens": [50364, 291, 643, 281, 980, 309, 307, 291, 643, 281, 980, 309, 11, 50462, 50462, 510, 307, 264, 3006, 11694, 295, 288, 16, 11, 288, 17, 13, 50578, 50578, 286, 500, 380, 458, 437, 710, 16, 11, 710, 17, 307, 570, 309, 311, 257, 48994, 7006, 13, 50720, 50720, 407, 915, 385, 264, 14518, 300, 1709, 281, 264, 3006, 6562, 50970, 50970, 295, 288, 16, 11, 288, 17, 13, 51138, 51138, 407, 291, 458, 300, 11, 718, 311, 584, 11, 288, 16, 2681, 502, 293, 288, 17, 2681, 568, 13, 51284, 51284, 407, 291, 458, 300, 264, 3006, 3100, 575, 281, 4090, 341, 2113, 13, 51668, 51668, 400, 370, 456, 311, 787, 257, 25993, 295, 14518, 337, 264, 3894, 2306, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.14058094489865186, "compression_ratio": 1.7702702702702702, "no_speech_prob": 3.7009536754339933e-05}, {"id": 473, "seek": 144348, "start": 1461.88, "end": 1469.56, "text": " So you know that the correct path has to include this link.", "tokens": [50364, 291, 643, 281, 980, 309, 307, 291, 643, 281, 980, 309, 11, 50462, 50462, 510, 307, 264, 3006, 11694, 295, 288, 16, 11, 288, 17, 13, 50578, 50578, 286, 500, 380, 458, 437, 710, 16, 11, 710, 17, 307, 570, 309, 311, 257, 48994, 7006, 13, 50720, 50720, 407, 915, 385, 264, 14518, 300, 1709, 281, 264, 3006, 6562, 50970, 50970, 295, 288, 16, 11, 288, 17, 13, 51138, 51138, 407, 291, 458, 300, 11, 718, 311, 584, 11, 288, 16, 2681, 502, 293, 288, 17, 2681, 568, 13, 51284, 51284, 407, 291, 458, 300, 264, 3006, 3100, 575, 281, 4090, 341, 2113, 13, 51668, 51668, 400, 370, 456, 311, 787, 257, 25993, 295, 14518, 337, 264, 3894, 2306, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.14058094489865186, "compression_ratio": 1.7702702702702702, "no_speech_prob": 3.7009536754339933e-05}, {"id": 474, "seek": 144348, "start": 1469.56, "end": 1473.44, "text": " And so there's only a subset of paths for the previous ones", "tokens": [50364, 291, 643, 281, 980, 309, 307, 291, 643, 281, 980, 309, 11, 50462, 50462, 510, 307, 264, 3006, 11694, 295, 288, 16, 11, 288, 17, 13, 50578, 50578, 286, 500, 380, 458, 437, 710, 16, 11, 710, 17, 307, 570, 309, 311, 257, 48994, 7006, 13, 50720, 50720, 407, 915, 385, 264, 14518, 300, 1709, 281, 264, 3006, 6562, 50970, 50970, 295, 288, 16, 11, 288, 17, 13, 51138, 51138, 407, 291, 458, 300, 11, 718, 311, 584, 11, 288, 16, 2681, 502, 293, 288, 17, 2681, 568, 13, 51284, 51284, 407, 291, 458, 300, 264, 3006, 3100, 575, 281, 4090, 341, 2113, 13, 51668, 51668, 400, 370, 456, 311, 787, 257, 25993, 295, 14518, 337, 264, 3894, 2306, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.14058094489865186, "compression_ratio": 1.7702702702702702, "no_speech_prob": 3.7009536754339933e-05}, {"id": 475, "seek": 147344, "start": 1473.44, "end": 1474.64, "text": " that are possible.", "tokens": [50364, 300, 366, 1944, 13, 50424, 50424, 509, 393, 380, 352, 281, 288, 16, 6915, 1958, 570, 300, 576, 312, 18424, 13, 50684, 50684, 407, 1936, 11, 787, 341, 2146, 46231, 13, 50798, 50798, 400, 550, 264, 661, 14518, 11, 291, 393, 747, 2035, 291, 528, 50916, 50916, 382, 938, 382, 309, 2170, 281, 300, 935, 13, 51000, 51000, 407, 291, 393, 445, 915, 264, 472, 300, 4464, 5660, 264, 2281, 510, 13, 51135, 51135, 407, 17522, 264, 2281, 365, 3104, 281, 710, 16, 11, 710, 17, 11, 51264, 51264, 370, 300, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 11, 51448, 51448, 570, 3097, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 13, 51620, 51620, 400, 264, 636, 291, 3847, 264, 1185, 586, 51690, 51690, 307, 300, 291, 11, 538, 10748, 293, 23475, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.17923442295619418, "compression_ratio": 1.7735849056603774, "no_speech_prob": 1.7499429304734804e-05}, {"id": 476, "seek": 147344, "start": 1474.64, "end": 1479.8400000000001, "text": " You can't go to y1 equals 0 because that would be incorrect.", "tokens": [50364, 300, 366, 1944, 13, 50424, 50424, 509, 393, 380, 352, 281, 288, 16, 6915, 1958, 570, 300, 576, 312, 18424, 13, 50684, 50684, 407, 1936, 11, 787, 341, 2146, 46231, 13, 50798, 50798, 400, 550, 264, 661, 14518, 11, 291, 393, 747, 2035, 291, 528, 50916, 50916, 382, 938, 382, 309, 2170, 281, 300, 935, 13, 51000, 51000, 407, 291, 393, 445, 915, 264, 472, 300, 4464, 5660, 264, 2281, 510, 13, 51135, 51135, 407, 17522, 264, 2281, 365, 3104, 281, 710, 16, 11, 710, 17, 11, 51264, 51264, 370, 300, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 11, 51448, 51448, 570, 3097, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 13, 51620, 51620, 400, 264, 636, 291, 3847, 264, 1185, 586, 51690, 51690, 307, 300, 291, 11, 538, 10748, 293, 23475, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.17923442295619418, "compression_ratio": 1.7735849056603774, "no_speech_prob": 1.7499429304734804e-05}, {"id": 477, "seek": 147344, "start": 1479.8400000000001, "end": 1482.1200000000001, "text": " So basically, only this guy survives.", "tokens": [50364, 300, 366, 1944, 13, 50424, 50424, 509, 393, 380, 352, 281, 288, 16, 6915, 1958, 570, 300, 576, 312, 18424, 13, 50684, 50684, 407, 1936, 11, 787, 341, 2146, 46231, 13, 50798, 50798, 400, 550, 264, 661, 14518, 11, 291, 393, 747, 2035, 291, 528, 50916, 50916, 382, 938, 382, 309, 2170, 281, 300, 935, 13, 51000, 51000, 407, 291, 393, 445, 915, 264, 472, 300, 4464, 5660, 264, 2281, 510, 13, 51135, 51135, 407, 17522, 264, 2281, 365, 3104, 281, 710, 16, 11, 710, 17, 11, 51264, 51264, 370, 300, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 11, 51448, 51448, 570, 3097, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 13, 51620, 51620, 400, 264, 636, 291, 3847, 264, 1185, 586, 51690, 51690, 307, 300, 291, 11, 538, 10748, 293, 23475, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.17923442295619418, "compression_ratio": 1.7735849056603774, "no_speech_prob": 1.7499429304734804e-05}, {"id": 478, "seek": 147344, "start": 1482.1200000000001, "end": 1484.48, "text": " And then the other paths, you can take whatever you want", "tokens": [50364, 300, 366, 1944, 13, 50424, 50424, 509, 393, 380, 352, 281, 288, 16, 6915, 1958, 570, 300, 576, 312, 18424, 13, 50684, 50684, 407, 1936, 11, 787, 341, 2146, 46231, 13, 50798, 50798, 400, 550, 264, 661, 14518, 11, 291, 393, 747, 2035, 291, 528, 50916, 50916, 382, 938, 382, 309, 2170, 281, 300, 935, 13, 51000, 51000, 407, 291, 393, 445, 915, 264, 472, 300, 4464, 5660, 264, 2281, 510, 13, 51135, 51135, 407, 17522, 264, 2281, 365, 3104, 281, 710, 16, 11, 710, 17, 11, 51264, 51264, 370, 300, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 11, 51448, 51448, 570, 3097, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 13, 51620, 51620, 400, 264, 636, 291, 3847, 264, 1185, 586, 51690, 51690, 307, 300, 291, 11, 538, 10748, 293, 23475, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.17923442295619418, "compression_ratio": 1.7735849056603774, "no_speech_prob": 1.7499429304734804e-05}, {"id": 479, "seek": 147344, "start": 1484.48, "end": 1486.16, "text": " as long as it gets to that point.", "tokens": [50364, 300, 366, 1944, 13, 50424, 50424, 509, 393, 380, 352, 281, 288, 16, 6915, 1958, 570, 300, 576, 312, 18424, 13, 50684, 50684, 407, 1936, 11, 787, 341, 2146, 46231, 13, 50798, 50798, 400, 550, 264, 661, 14518, 11, 291, 393, 747, 2035, 291, 528, 50916, 50916, 382, 938, 382, 309, 2170, 281, 300, 935, 13, 51000, 51000, 407, 291, 393, 445, 915, 264, 472, 300, 4464, 5660, 264, 2281, 510, 13, 51135, 51135, 407, 17522, 264, 2281, 365, 3104, 281, 710, 16, 11, 710, 17, 11, 51264, 51264, 370, 300, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 11, 51448, 51448, 570, 3097, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 13, 51620, 51620, 400, 264, 636, 291, 3847, 264, 1185, 586, 51690, 51690, 307, 300, 291, 11, 538, 10748, 293, 23475, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.17923442295619418, "compression_ratio": 1.7735849056603774, "no_speech_prob": 1.7499429304734804e-05}, {"id": 480, "seek": 147344, "start": 1486.16, "end": 1488.8600000000001, "text": " So you can just find the one that minimizes the energy here.", "tokens": [50364, 300, 366, 1944, 13, 50424, 50424, 509, 393, 380, 352, 281, 288, 16, 6915, 1958, 570, 300, 576, 312, 18424, 13, 50684, 50684, 407, 1936, 11, 787, 341, 2146, 46231, 13, 50798, 50798, 400, 550, 264, 661, 14518, 11, 291, 393, 747, 2035, 291, 528, 50916, 50916, 382, 938, 382, 309, 2170, 281, 300, 935, 13, 51000, 51000, 407, 291, 393, 445, 915, 264, 472, 300, 4464, 5660, 264, 2281, 510, 13, 51135, 51135, 407, 17522, 264, 2281, 365, 3104, 281, 710, 16, 11, 710, 17, 11, 51264, 51264, 370, 300, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 11, 51448, 51448, 570, 3097, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 13, 51620, 51620, 400, 264, 636, 291, 3847, 264, 1185, 586, 51690, 51690, 307, 300, 291, 11, 538, 10748, 293, 23475, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.17923442295619418, "compression_ratio": 1.7735849056603774, "no_speech_prob": 1.7499429304734804e-05}, {"id": 481, "seek": 147344, "start": 1488.8600000000001, "end": 1491.44, "text": " So minimize the energy with respect to z1, z2,", "tokens": [50364, 300, 366, 1944, 13, 50424, 50424, 509, 393, 380, 352, 281, 288, 16, 6915, 1958, 570, 300, 576, 312, 18424, 13, 50684, 50684, 407, 1936, 11, 787, 341, 2146, 46231, 13, 50798, 50798, 400, 550, 264, 661, 14518, 11, 291, 393, 747, 2035, 291, 528, 50916, 50916, 382, 938, 382, 309, 2170, 281, 300, 935, 13, 51000, 51000, 407, 291, 393, 445, 915, 264, 472, 300, 4464, 5660, 264, 2281, 510, 13, 51135, 51135, 407, 17522, 264, 2281, 365, 3104, 281, 710, 16, 11, 710, 17, 11, 51264, 51264, 370, 300, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 11, 51448, 51448, 570, 3097, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 13, 51620, 51620, 400, 264, 636, 291, 3847, 264, 1185, 586, 51690, 51690, 307, 300, 291, 11, 538, 10748, 293, 23475, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.17923442295619418, "compression_ratio": 1.7735849056603774, "no_speech_prob": 1.7499429304734804e-05}, {"id": 482, "seek": 147344, "start": 1491.44, "end": 1495.1200000000001, "text": " so that y1, y2 take the right value,", "tokens": [50364, 300, 366, 1944, 13, 50424, 50424, 509, 393, 380, 352, 281, 288, 16, 6915, 1958, 570, 300, 576, 312, 18424, 13, 50684, 50684, 407, 1936, 11, 787, 341, 2146, 46231, 13, 50798, 50798, 400, 550, 264, 661, 14518, 11, 291, 393, 747, 2035, 291, 528, 50916, 50916, 382, 938, 382, 309, 2170, 281, 300, 935, 13, 51000, 51000, 407, 291, 393, 445, 915, 264, 472, 300, 4464, 5660, 264, 2281, 510, 13, 51135, 51135, 407, 17522, 264, 2281, 365, 3104, 281, 710, 16, 11, 710, 17, 11, 51264, 51264, 370, 300, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 11, 51448, 51448, 570, 3097, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 13, 51620, 51620, 400, 264, 636, 291, 3847, 264, 1185, 586, 51690, 51690, 307, 300, 291, 11, 538, 10748, 293, 23475, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.17923442295619418, "compression_ratio": 1.7735849056603774, "no_speech_prob": 1.7499429304734804e-05}, {"id": 483, "seek": 147344, "start": 1495.1200000000001, "end": 1498.56, "text": " because training y1, y2 take the right value.", "tokens": [50364, 300, 366, 1944, 13, 50424, 50424, 509, 393, 380, 352, 281, 288, 16, 6915, 1958, 570, 300, 576, 312, 18424, 13, 50684, 50684, 407, 1936, 11, 787, 341, 2146, 46231, 13, 50798, 50798, 400, 550, 264, 661, 14518, 11, 291, 393, 747, 2035, 291, 528, 50916, 50916, 382, 938, 382, 309, 2170, 281, 300, 935, 13, 51000, 51000, 407, 291, 393, 445, 915, 264, 472, 300, 4464, 5660, 264, 2281, 510, 13, 51135, 51135, 407, 17522, 264, 2281, 365, 3104, 281, 710, 16, 11, 710, 17, 11, 51264, 51264, 370, 300, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 11, 51448, 51448, 570, 3097, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 13, 51620, 51620, 400, 264, 636, 291, 3847, 264, 1185, 586, 51690, 51690, 307, 300, 291, 11, 538, 10748, 293, 23475, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.17923442295619418, "compression_ratio": 1.7735849056603774, "no_speech_prob": 1.7499429304734804e-05}, {"id": 484, "seek": 147344, "start": 1498.56, "end": 1499.96, "text": " And the way you train the system now", "tokens": [50364, 300, 366, 1944, 13, 50424, 50424, 509, 393, 380, 352, 281, 288, 16, 6915, 1958, 570, 300, 576, 312, 18424, 13, 50684, 50684, 407, 1936, 11, 787, 341, 2146, 46231, 13, 50798, 50798, 400, 550, 264, 661, 14518, 11, 291, 393, 747, 2035, 291, 528, 50916, 50916, 382, 938, 382, 309, 2170, 281, 300, 935, 13, 51000, 51000, 407, 291, 393, 445, 915, 264, 472, 300, 4464, 5660, 264, 2281, 510, 13, 51135, 51135, 407, 17522, 264, 2281, 365, 3104, 281, 710, 16, 11, 710, 17, 11, 51264, 51264, 370, 300, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 11, 51448, 51448, 570, 3097, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 13, 51620, 51620, 400, 264, 636, 291, 3847, 264, 1185, 586, 51690, 51690, 307, 300, 291, 11, 538, 10748, 293, 23475, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.17923442295619418, "compression_ratio": 1.7735849056603774, "no_speech_prob": 1.7499429304734804e-05}, {"id": 485, "seek": 147344, "start": 1499.96, "end": 1503.16, "text": " is that you, by grid and descent,", "tokens": [50364, 300, 366, 1944, 13, 50424, 50424, 509, 393, 380, 352, 281, 288, 16, 6915, 1958, 570, 300, 576, 312, 18424, 13, 50684, 50684, 407, 1936, 11, 787, 341, 2146, 46231, 13, 50798, 50798, 400, 550, 264, 661, 14518, 11, 291, 393, 747, 2035, 291, 528, 50916, 50916, 382, 938, 382, 309, 2170, 281, 300, 935, 13, 51000, 51000, 407, 291, 393, 445, 915, 264, 472, 300, 4464, 5660, 264, 2281, 510, 13, 51135, 51135, 407, 17522, 264, 2281, 365, 3104, 281, 710, 16, 11, 710, 17, 11, 51264, 51264, 370, 300, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 11, 51448, 51448, 570, 3097, 288, 16, 11, 288, 17, 747, 264, 558, 2158, 13, 51620, 51620, 400, 264, 636, 291, 3847, 264, 1185, 586, 51690, 51690, 307, 300, 291, 11, 538, 10748, 293, 23475, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.17923442295619418, "compression_ratio": 1.7735849056603774, "no_speech_prob": 1.7499429304734804e-05}, {"id": 486, "seek": 150316, "start": 1503.16, "end": 1507.0400000000002, "text": " you back propagate the gradient of the overall energy", "tokens": [50364, 291, 646, 48256, 264, 16235, 295, 264, 4787, 2281, 50558, 50558, 337, 341, 1729, 288, 293, 341, 1729, 2031, 50682, 50682, 293, 264, 710, 300, 291, 12701, 538, 46608, 13, 50802, 50802, 509, 646, 48256, 264, 16235, 295, 341, 2281, 51064, 51064, 365, 3104, 281, 264, 9834, 295, 439, 729, 2281, 2115, 13, 51204, 51204, 400, 291, 853, 281, 652, 300, 4356, 13, 51322, 51322, 509, 458, 291, 362, 264, 3006, 288, 11, 264, 3006, 2031, 11, 293, 2035, 51462, 51462, 710, 2158, 710, 1633, 747, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10706817710792625, "compression_ratio": 1.7860696517412935, "no_speech_prob": 9.817905265663285e-06}, {"id": 487, "seek": 150316, "start": 1507.0400000000002, "end": 1509.52, "text": " for this particular y and this particular x", "tokens": [50364, 291, 646, 48256, 264, 16235, 295, 264, 4787, 2281, 50558, 50558, 337, 341, 1729, 288, 293, 341, 1729, 2031, 50682, 50682, 293, 264, 710, 300, 291, 12701, 538, 46608, 13, 50802, 50802, 509, 646, 48256, 264, 16235, 295, 341, 2281, 51064, 51064, 365, 3104, 281, 264, 9834, 295, 439, 729, 2281, 2115, 13, 51204, 51204, 400, 291, 853, 281, 652, 300, 4356, 13, 51322, 51322, 509, 458, 291, 362, 264, 3006, 288, 11, 264, 3006, 2031, 11, 293, 2035, 51462, 51462, 710, 2158, 710, 1633, 747, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10706817710792625, "compression_ratio": 1.7860696517412935, "no_speech_prob": 9.817905265663285e-06}, {"id": 488, "seek": 150316, "start": 1509.52, "end": 1511.92, "text": " and the z that you obtain by minimizing.", "tokens": [50364, 291, 646, 48256, 264, 16235, 295, 264, 4787, 2281, 50558, 50558, 337, 341, 1729, 288, 293, 341, 1729, 2031, 50682, 50682, 293, 264, 710, 300, 291, 12701, 538, 46608, 13, 50802, 50802, 509, 646, 48256, 264, 16235, 295, 341, 2281, 51064, 51064, 365, 3104, 281, 264, 9834, 295, 439, 729, 2281, 2115, 13, 51204, 51204, 400, 291, 853, 281, 652, 300, 4356, 13, 51322, 51322, 509, 458, 291, 362, 264, 3006, 288, 11, 264, 3006, 2031, 11, 293, 2035, 51462, 51462, 710, 2158, 710, 1633, 747, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10706817710792625, "compression_ratio": 1.7860696517412935, "no_speech_prob": 9.817905265663285e-06}, {"id": 489, "seek": 150316, "start": 1511.92, "end": 1517.16, "text": " You back propagate the gradient of this energy", "tokens": [50364, 291, 646, 48256, 264, 16235, 295, 264, 4787, 2281, 50558, 50558, 337, 341, 1729, 288, 293, 341, 1729, 2031, 50682, 50682, 293, 264, 710, 300, 291, 12701, 538, 46608, 13, 50802, 50802, 509, 646, 48256, 264, 16235, 295, 341, 2281, 51064, 51064, 365, 3104, 281, 264, 9834, 295, 439, 729, 2281, 2115, 13, 51204, 51204, 400, 291, 853, 281, 652, 300, 4356, 13, 51322, 51322, 509, 458, 291, 362, 264, 3006, 288, 11, 264, 3006, 2031, 11, 293, 2035, 51462, 51462, 710, 2158, 710, 1633, 747, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10706817710792625, "compression_ratio": 1.7860696517412935, "no_speech_prob": 9.817905265663285e-06}, {"id": 490, "seek": 150316, "start": 1517.16, "end": 1519.96, "text": " with respect to the parameters of all those energy terms.", "tokens": [50364, 291, 646, 48256, 264, 16235, 295, 264, 4787, 2281, 50558, 50558, 337, 341, 1729, 288, 293, 341, 1729, 2031, 50682, 50682, 293, 264, 710, 300, 291, 12701, 538, 46608, 13, 50802, 50802, 509, 646, 48256, 264, 16235, 295, 341, 2281, 51064, 51064, 365, 3104, 281, 264, 9834, 295, 439, 729, 2281, 2115, 13, 51204, 51204, 400, 291, 853, 281, 652, 300, 4356, 13, 51322, 51322, 509, 458, 291, 362, 264, 3006, 288, 11, 264, 3006, 2031, 11, 293, 2035, 51462, 51462, 710, 2158, 710, 1633, 747, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10706817710792625, "compression_ratio": 1.7860696517412935, "no_speech_prob": 9.817905265663285e-06}, {"id": 491, "seek": 150316, "start": 1519.96, "end": 1522.3200000000002, "text": " And you try to make that smaller.", "tokens": [50364, 291, 646, 48256, 264, 16235, 295, 264, 4787, 2281, 50558, 50558, 337, 341, 1729, 288, 293, 341, 1729, 2031, 50682, 50682, 293, 264, 710, 300, 291, 12701, 538, 46608, 13, 50802, 50802, 509, 646, 48256, 264, 16235, 295, 341, 2281, 51064, 51064, 365, 3104, 281, 264, 9834, 295, 439, 729, 2281, 2115, 13, 51204, 51204, 400, 291, 853, 281, 652, 300, 4356, 13, 51322, 51322, 509, 458, 291, 362, 264, 3006, 288, 11, 264, 3006, 2031, 11, 293, 2035, 51462, 51462, 710, 2158, 710, 1633, 747, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10706817710792625, "compression_ratio": 1.7860696517412935, "no_speech_prob": 9.817905265663285e-06}, {"id": 492, "seek": 150316, "start": 1522.3200000000002, "end": 1525.1200000000001, "text": " You know you have the correct y, the correct x, and whatever", "tokens": [50364, 291, 646, 48256, 264, 16235, 295, 264, 4787, 2281, 50558, 50558, 337, 341, 1729, 288, 293, 341, 1729, 2031, 50682, 50682, 293, 264, 710, 300, 291, 12701, 538, 46608, 13, 50802, 50802, 509, 646, 48256, 264, 16235, 295, 341, 2281, 51064, 51064, 365, 3104, 281, 264, 9834, 295, 439, 729, 2281, 2115, 13, 51204, 51204, 400, 291, 853, 281, 652, 300, 4356, 13, 51322, 51322, 509, 458, 291, 362, 264, 3006, 288, 11, 264, 3006, 2031, 11, 293, 2035, 51462, 51462, 710, 2158, 710, 1633, 747, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10706817710792625, "compression_ratio": 1.7860696517412935, "no_speech_prob": 9.817905265663285e-06}, {"id": 493, "seek": 150316, "start": 1525.1200000000001, "end": 1528.76, "text": " z value z must take.", "tokens": [50364, 291, 646, 48256, 264, 16235, 295, 264, 4787, 2281, 50558, 50558, 337, 341, 1729, 288, 293, 341, 1729, 2031, 50682, 50682, 293, 264, 710, 300, 291, 12701, 538, 46608, 13, 50802, 50802, 509, 646, 48256, 264, 16235, 295, 341, 2281, 51064, 51064, 365, 3104, 281, 264, 9834, 295, 439, 729, 2281, 2115, 13, 51204, 51204, 400, 291, 853, 281, 652, 300, 4356, 13, 51322, 51322, 509, 458, 291, 362, 264, 3006, 288, 11, 264, 3006, 2031, 11, 293, 2035, 51462, 51462, 710, 2158, 710, 1633, 747, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10706817710792625, "compression_ratio": 1.7860696517412935, "no_speech_prob": 9.817905265663285e-06}, {"id": 494, "seek": 152876, "start": 1528.76, "end": 1533.8, "text": " Try to make that energy lower by tweaking the parameters.", "tokens": [50364, 6526, 281, 652, 300, 2281, 3126, 538, 6986, 2456, 264, 9834, 13, 50616, 50616, 1711, 264, 912, 565, 11, 291, 362, 281, 652, 988, 50746, 50746, 264, 2281, 295, 18424, 6338, 337, 288, 16, 293, 288, 17, 300, 366, 18424, 50950, 50950, 307, 2946, 13, 51054, 51054, 407, 291, 747, 661, 4190, 295, 288, 16, 11, 288, 17, 11, 3009, 288, 16, 6915, 1958, 51354, 51354, 293, 288, 17, 6915, 2035, 309, 2738, 13, 51492, 51492, 400, 337, 439, 295, 729, 661, 31493, 295, 288, 16, 11, 288, 17, 11, 51642, 51642, 291, 528, 281, 652, 988, 2035, 2281, 291, 483, 538, 46608, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09839100704014858, "compression_ratio": 1.737327188940092, "no_speech_prob": 2.443949597363826e-06}, {"id": 495, "seek": 152876, "start": 1533.8, "end": 1536.4, "text": " At the same time, you have to make sure", "tokens": [50364, 6526, 281, 652, 300, 2281, 3126, 538, 6986, 2456, 264, 9834, 13, 50616, 50616, 1711, 264, 912, 565, 11, 291, 362, 281, 652, 988, 50746, 50746, 264, 2281, 295, 18424, 6338, 337, 288, 16, 293, 288, 17, 300, 366, 18424, 50950, 50950, 307, 2946, 13, 51054, 51054, 407, 291, 747, 661, 4190, 295, 288, 16, 11, 288, 17, 11, 3009, 288, 16, 6915, 1958, 51354, 51354, 293, 288, 17, 6915, 2035, 309, 2738, 13, 51492, 51492, 400, 337, 439, 295, 729, 661, 31493, 295, 288, 16, 11, 288, 17, 11, 51642, 51642, 291, 528, 281, 652, 988, 2035, 2281, 291, 483, 538, 46608, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09839100704014858, "compression_ratio": 1.737327188940092, "no_speech_prob": 2.443949597363826e-06}, {"id": 496, "seek": 152876, "start": 1536.4, "end": 1540.48, "text": " the energy of incorrect answers for y1 and y2 that are incorrect", "tokens": [50364, 6526, 281, 652, 300, 2281, 3126, 538, 6986, 2456, 264, 9834, 13, 50616, 50616, 1711, 264, 912, 565, 11, 291, 362, 281, 652, 988, 50746, 50746, 264, 2281, 295, 18424, 6338, 337, 288, 16, 293, 288, 17, 300, 366, 18424, 50950, 50950, 307, 2946, 13, 51054, 51054, 407, 291, 747, 661, 4190, 295, 288, 16, 11, 288, 17, 11, 3009, 288, 16, 6915, 1958, 51354, 51354, 293, 288, 17, 6915, 2035, 309, 2738, 13, 51492, 51492, 400, 337, 439, 295, 729, 661, 31493, 295, 288, 16, 11, 288, 17, 11, 51642, 51642, 291, 528, 281, 652, 988, 2035, 2281, 291, 483, 538, 46608, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09839100704014858, "compression_ratio": 1.737327188940092, "no_speech_prob": 2.443949597363826e-06}, {"id": 497, "seek": 152876, "start": 1540.48, "end": 1542.56, "text": " is higher.", "tokens": [50364, 6526, 281, 652, 300, 2281, 3126, 538, 6986, 2456, 264, 9834, 13, 50616, 50616, 1711, 264, 912, 565, 11, 291, 362, 281, 652, 988, 50746, 50746, 264, 2281, 295, 18424, 6338, 337, 288, 16, 293, 288, 17, 300, 366, 18424, 50950, 50950, 307, 2946, 13, 51054, 51054, 407, 291, 747, 661, 4190, 295, 288, 16, 11, 288, 17, 11, 3009, 288, 16, 6915, 1958, 51354, 51354, 293, 288, 17, 6915, 2035, 309, 2738, 13, 51492, 51492, 400, 337, 439, 295, 729, 661, 31493, 295, 288, 16, 11, 288, 17, 11, 51642, 51642, 291, 528, 281, 652, 988, 2035, 2281, 291, 483, 538, 46608, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09839100704014858, "compression_ratio": 1.737327188940092, "no_speech_prob": 2.443949597363826e-06}, {"id": 498, "seek": 152876, "start": 1542.56, "end": 1548.56, "text": " So you take other values of y1, y2, including y1 equals 0", "tokens": [50364, 6526, 281, 652, 300, 2281, 3126, 538, 6986, 2456, 264, 9834, 13, 50616, 50616, 1711, 264, 912, 565, 11, 291, 362, 281, 652, 988, 50746, 50746, 264, 2281, 295, 18424, 6338, 337, 288, 16, 293, 288, 17, 300, 366, 18424, 50950, 50950, 307, 2946, 13, 51054, 51054, 407, 291, 747, 661, 4190, 295, 288, 16, 11, 288, 17, 11, 3009, 288, 16, 6915, 1958, 51354, 51354, 293, 288, 17, 6915, 2035, 309, 2738, 13, 51492, 51492, 400, 337, 439, 295, 729, 661, 31493, 295, 288, 16, 11, 288, 17, 11, 51642, 51642, 291, 528, 281, 652, 988, 2035, 2281, 291, 483, 538, 46608, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09839100704014858, "compression_ratio": 1.737327188940092, "no_speech_prob": 2.443949597363826e-06}, {"id": 499, "seek": 152876, "start": 1548.56, "end": 1551.32, "text": " and y2 equals whatever it wants.", "tokens": [50364, 6526, 281, 652, 300, 2281, 3126, 538, 6986, 2456, 264, 9834, 13, 50616, 50616, 1711, 264, 912, 565, 11, 291, 362, 281, 652, 988, 50746, 50746, 264, 2281, 295, 18424, 6338, 337, 288, 16, 293, 288, 17, 300, 366, 18424, 50950, 50950, 307, 2946, 13, 51054, 51054, 407, 291, 747, 661, 4190, 295, 288, 16, 11, 288, 17, 11, 3009, 288, 16, 6915, 1958, 51354, 51354, 293, 288, 17, 6915, 2035, 309, 2738, 13, 51492, 51492, 400, 337, 439, 295, 729, 661, 31493, 295, 288, 16, 11, 288, 17, 11, 51642, 51642, 291, 528, 281, 652, 988, 2035, 2281, 291, 483, 538, 46608, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09839100704014858, "compression_ratio": 1.737327188940092, "no_speech_prob": 2.443949597363826e-06}, {"id": 500, "seek": 152876, "start": 1551.32, "end": 1554.32, "text": " And for all of those other configurations of y1, y2,", "tokens": [50364, 6526, 281, 652, 300, 2281, 3126, 538, 6986, 2456, 264, 9834, 13, 50616, 50616, 1711, 264, 912, 565, 11, 291, 362, 281, 652, 988, 50746, 50746, 264, 2281, 295, 18424, 6338, 337, 288, 16, 293, 288, 17, 300, 366, 18424, 50950, 50950, 307, 2946, 13, 51054, 51054, 407, 291, 747, 661, 4190, 295, 288, 16, 11, 288, 17, 11, 3009, 288, 16, 6915, 1958, 51354, 51354, 293, 288, 17, 6915, 2035, 309, 2738, 13, 51492, 51492, 400, 337, 439, 295, 729, 661, 31493, 295, 288, 16, 11, 288, 17, 11, 51642, 51642, 291, 528, 281, 652, 988, 2035, 2281, 291, 483, 538, 46608, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09839100704014858, "compression_ratio": 1.737327188940092, "no_speech_prob": 2.443949597363826e-06}, {"id": 501, "seek": 152876, "start": 1554.32, "end": 1557.04, "text": " you want to make sure whatever energy you get by minimizing", "tokens": [50364, 6526, 281, 652, 300, 2281, 3126, 538, 6986, 2456, 264, 9834, 13, 50616, 50616, 1711, 264, 912, 565, 11, 291, 362, 281, 652, 988, 50746, 50746, 264, 2281, 295, 18424, 6338, 337, 288, 16, 293, 288, 17, 300, 366, 18424, 50950, 50950, 307, 2946, 13, 51054, 51054, 407, 291, 747, 661, 4190, 295, 288, 16, 11, 288, 17, 11, 3009, 288, 16, 6915, 1958, 51354, 51354, 293, 288, 17, 6915, 2035, 309, 2738, 13, 51492, 51492, 400, 337, 439, 295, 729, 661, 31493, 295, 288, 16, 11, 288, 17, 11, 51642, 51642, 291, 528, 281, 652, 988, 2035, 2281, 291, 483, 538, 46608, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09839100704014858, "compression_ratio": 1.737327188940092, "no_speech_prob": 2.443949597363826e-06}, {"id": 502, "seek": 155704, "start": 1557.04, "end": 1561.68, "text": " over z is higher than whatever you got for the correct one.", "tokens": [50364, 670, 710, 307, 2946, 813, 2035, 291, 658, 337, 264, 3006, 472, 13, 50596, 50596, 407, 428, 4470, 2445, 307, 516, 281, 312, 746, 689, 291, 747, 50746, 50746, 264, 2281, 295, 264, 3006, 1867, 11, 50818, 50818, 291, 853, 281, 652, 309, 3126, 11, 293, 550, 291, 50884, 50884, 747, 264, 25737, 295, 18424, 6338, 50964, 50964, 293, 291, 853, 281, 652, 552, 4833, 13, 51128, 51128, 663, 311, 20828, 1166, 3097, 337, 3877, 17630, 13, 51364, 51364, 745, 2885, 17630, 11, 570, 264, 3877, 510, 307, 51508, 51508, 10379, 538, 341, 8310, 295, 5497, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14668340966252996, "compression_ratio": 1.8733031674208145, "no_speech_prob": 2.4822779778332915e-06}, {"id": 503, "seek": 155704, "start": 1561.68, "end": 1564.68, "text": " So your loss function is going to be something where you take", "tokens": [50364, 670, 710, 307, 2946, 813, 2035, 291, 658, 337, 264, 3006, 472, 13, 50596, 50596, 407, 428, 4470, 2445, 307, 516, 281, 312, 746, 689, 291, 747, 50746, 50746, 264, 2281, 295, 264, 3006, 1867, 11, 50818, 50818, 291, 853, 281, 652, 309, 3126, 11, 293, 550, 291, 50884, 50884, 747, 264, 25737, 295, 18424, 6338, 50964, 50964, 293, 291, 853, 281, 652, 552, 4833, 13, 51128, 51128, 663, 311, 20828, 1166, 3097, 337, 3877, 17630, 13, 51364, 51364, 745, 2885, 17630, 11, 570, 264, 3877, 510, 307, 51508, 51508, 10379, 538, 341, 8310, 295, 5497, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14668340966252996, "compression_ratio": 1.8733031674208145, "no_speech_prob": 2.4822779778332915e-06}, {"id": 504, "seek": 155704, "start": 1564.68, "end": 1566.12, "text": " the energy of the correct answer,", "tokens": [50364, 670, 710, 307, 2946, 813, 2035, 291, 658, 337, 264, 3006, 472, 13, 50596, 50596, 407, 428, 4470, 2445, 307, 516, 281, 312, 746, 689, 291, 747, 50746, 50746, 264, 2281, 295, 264, 3006, 1867, 11, 50818, 50818, 291, 853, 281, 652, 309, 3126, 11, 293, 550, 291, 50884, 50884, 747, 264, 25737, 295, 18424, 6338, 50964, 50964, 293, 291, 853, 281, 652, 552, 4833, 13, 51128, 51128, 663, 311, 20828, 1166, 3097, 337, 3877, 17630, 13, 51364, 51364, 745, 2885, 17630, 11, 570, 264, 3877, 510, 307, 51508, 51508, 10379, 538, 341, 8310, 295, 5497, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14668340966252996, "compression_ratio": 1.8733031674208145, "no_speech_prob": 2.4822779778332915e-06}, {"id": 505, "seek": 155704, "start": 1566.12, "end": 1567.44, "text": " you try to make it lower, and then you", "tokens": [50364, 670, 710, 307, 2946, 813, 2035, 291, 658, 337, 264, 3006, 472, 13, 50596, 50596, 407, 428, 4470, 2445, 307, 516, 281, 312, 746, 689, 291, 747, 50746, 50746, 264, 2281, 295, 264, 3006, 1867, 11, 50818, 50818, 291, 853, 281, 652, 309, 3126, 11, 293, 550, 291, 50884, 50884, 747, 264, 25737, 295, 18424, 6338, 50964, 50964, 293, 291, 853, 281, 652, 552, 4833, 13, 51128, 51128, 663, 311, 20828, 1166, 3097, 337, 3877, 17630, 13, 51364, 51364, 745, 2885, 17630, 11, 570, 264, 3877, 510, 307, 51508, 51508, 10379, 538, 341, 8310, 295, 5497, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14668340966252996, "compression_ratio": 1.8733031674208145, "no_speech_prob": 2.4822779778332915e-06}, {"id": 506, "seek": 155704, "start": 1567.44, "end": 1569.04, "text": " take the energies of incorrect answers", "tokens": [50364, 670, 710, 307, 2946, 813, 2035, 291, 658, 337, 264, 3006, 472, 13, 50596, 50596, 407, 428, 4470, 2445, 307, 516, 281, 312, 746, 689, 291, 747, 50746, 50746, 264, 2281, 295, 264, 3006, 1867, 11, 50818, 50818, 291, 853, 281, 652, 309, 3126, 11, 293, 550, 291, 50884, 50884, 747, 264, 25737, 295, 18424, 6338, 50964, 50964, 293, 291, 853, 281, 652, 552, 4833, 13, 51128, 51128, 663, 311, 20828, 1166, 3097, 337, 3877, 17630, 13, 51364, 51364, 745, 2885, 17630, 11, 570, 264, 3877, 510, 307, 51508, 51508, 10379, 538, 341, 8310, 295, 5497, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14668340966252996, "compression_ratio": 1.8733031674208145, "no_speech_prob": 2.4822779778332915e-06}, {"id": 507, "seek": 155704, "start": 1569.04, "end": 1572.32, "text": " and you try to make them larger.", "tokens": [50364, 670, 710, 307, 2946, 813, 2035, 291, 658, 337, 264, 3006, 472, 13, 50596, 50596, 407, 428, 4470, 2445, 307, 516, 281, 312, 746, 689, 291, 747, 50746, 50746, 264, 2281, 295, 264, 3006, 1867, 11, 50818, 50818, 291, 853, 281, 652, 309, 3126, 11, 293, 550, 291, 50884, 50884, 747, 264, 25737, 295, 18424, 6338, 50964, 50964, 293, 291, 853, 281, 652, 552, 4833, 13, 51128, 51128, 663, 311, 20828, 1166, 3097, 337, 3877, 17630, 13, 51364, 51364, 745, 2885, 17630, 11, 570, 264, 3877, 510, 307, 51508, 51508, 10379, 538, 341, 8310, 295, 5497, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14668340966252996, "compression_ratio": 1.8733031674208145, "no_speech_prob": 2.4822779778332915e-06}, {"id": 508, "seek": 155704, "start": 1572.32, "end": 1577.04, "text": " That's discriminative training for structure prediction.", "tokens": [50364, 670, 710, 307, 2946, 813, 2035, 291, 658, 337, 264, 3006, 472, 13, 50596, 50596, 407, 428, 4470, 2445, 307, 516, 281, 312, 746, 689, 291, 747, 50746, 50746, 264, 2281, 295, 264, 3006, 1867, 11, 50818, 50818, 291, 853, 281, 652, 309, 3126, 11, 293, 550, 291, 50884, 50884, 747, 264, 25737, 295, 18424, 6338, 50964, 50964, 293, 291, 853, 281, 652, 552, 4833, 13, 51128, 51128, 663, 311, 20828, 1166, 3097, 337, 3877, 17630, 13, 51364, 51364, 745, 2885, 17630, 11, 570, 264, 3877, 510, 307, 51508, 51508, 10379, 538, 341, 8310, 295, 5497, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14668340966252996, "compression_ratio": 1.8733031674208145, "no_speech_prob": 2.4822779778332915e-06}, {"id": 509, "seek": 155704, "start": 1577.04, "end": 1579.92, "text": " Structure prediction, because the structure here is", "tokens": [50364, 670, 710, 307, 2946, 813, 2035, 291, 658, 337, 264, 3006, 472, 13, 50596, 50596, 407, 428, 4470, 2445, 307, 516, 281, 312, 746, 689, 291, 747, 50746, 50746, 264, 2281, 295, 264, 3006, 1867, 11, 50818, 50818, 291, 853, 281, 652, 309, 3126, 11, 293, 550, 291, 50884, 50884, 747, 264, 25737, 295, 18424, 6338, 50964, 50964, 293, 291, 853, 281, 652, 552, 4833, 13, 51128, 51128, 663, 311, 20828, 1166, 3097, 337, 3877, 17630, 13, 51364, 51364, 745, 2885, 17630, 11, 570, 264, 3877, 510, 307, 51508, 51508, 10379, 538, 341, 8310, 295, 5497, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14668340966252996, "compression_ratio": 1.8733031674208145, "no_speech_prob": 2.4822779778332915e-06}, {"id": 510, "seek": 155704, "start": 1579.92, "end": 1585.68, "text": " represented by this sequence of costs.", "tokens": [50364, 670, 710, 307, 2946, 813, 2035, 291, 658, 337, 264, 3006, 472, 13, 50596, 50596, 407, 428, 4470, 2445, 307, 516, 281, 312, 746, 689, 291, 747, 50746, 50746, 264, 2281, 295, 264, 3006, 1867, 11, 50818, 50818, 291, 853, 281, 652, 309, 3126, 11, 293, 550, 291, 50884, 50884, 747, 264, 25737, 295, 18424, 6338, 50964, 50964, 293, 291, 853, 281, 652, 552, 4833, 13, 51128, 51128, 663, 311, 20828, 1166, 3097, 337, 3877, 17630, 13, 51364, 51364, 745, 2885, 17630, 11, 570, 264, 3877, 510, 307, 51508, 51508, 10379, 538, 341, 8310, 295, 5497, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14668340966252996, "compression_ratio": 1.8733031674208145, "no_speech_prob": 2.4822779778332915e-06}, {"id": 511, "seek": 158568, "start": 1585.68, "end": 1587.8400000000001, "text": " But conceptually, at a high level,", "tokens": [50364, 583, 3410, 671, 11, 412, 257, 1090, 1496, 11, 50472, 50472, 309, 311, 572, 819, 490, 1203, 50566, 50566, 321, 2825, 466, 949, 11, 562, 321, 362, 257, 48994, 7006, 11, 50710, 50710, 293, 562, 321, 3847, 365, 257, 46691, 300, 1619, 11, 50810, 50810, 286, 528, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50920, 50920, 293, 264, 2281, 295, 439, 264, 661, 6338, 2946, 13, 51160, 51160, 2639, 1651, 412, 341, 935, 30, 51248, 51248, 286, 632, 257, 1168, 13, 51292, 51292, 407, 2361, 322, 341, 10686, 11, 309, 2544, 411, 341, 3209, 787, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.1799047111284615, "compression_ratio": 1.590717299578059, "no_speech_prob": 1.1300074220343959e-05}, {"id": 512, "seek": 158568, "start": 1587.8400000000001, "end": 1589.72, "text": " it's no different from everything", "tokens": [50364, 583, 3410, 671, 11, 412, 257, 1090, 1496, 11, 50472, 50472, 309, 311, 572, 819, 490, 1203, 50566, 50566, 321, 2825, 466, 949, 11, 562, 321, 362, 257, 48994, 7006, 11, 50710, 50710, 293, 562, 321, 3847, 365, 257, 46691, 300, 1619, 11, 50810, 50810, 286, 528, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50920, 50920, 293, 264, 2281, 295, 439, 264, 661, 6338, 2946, 13, 51160, 51160, 2639, 1651, 412, 341, 935, 30, 51248, 51248, 286, 632, 257, 1168, 13, 51292, 51292, 407, 2361, 322, 341, 10686, 11, 309, 2544, 411, 341, 3209, 787, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.1799047111284615, "compression_ratio": 1.590717299578059, "no_speech_prob": 1.1300074220343959e-05}, {"id": 513, "seek": 158568, "start": 1589.72, "end": 1592.6000000000001, "text": " we talked about before, when we have a latent variable,", "tokens": [50364, 583, 3410, 671, 11, 412, 257, 1090, 1496, 11, 50472, 50472, 309, 311, 572, 819, 490, 1203, 50566, 50566, 321, 2825, 466, 949, 11, 562, 321, 362, 257, 48994, 7006, 11, 50710, 50710, 293, 562, 321, 3847, 365, 257, 46691, 300, 1619, 11, 50810, 50810, 286, 528, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50920, 50920, 293, 264, 2281, 295, 439, 264, 661, 6338, 2946, 13, 51160, 51160, 2639, 1651, 412, 341, 935, 30, 51248, 51248, 286, 632, 257, 1168, 13, 51292, 51292, 407, 2361, 322, 341, 10686, 11, 309, 2544, 411, 341, 3209, 787, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.1799047111284615, "compression_ratio": 1.590717299578059, "no_speech_prob": 1.1300074220343959e-05}, {"id": 514, "seek": 158568, "start": 1592.6000000000001, "end": 1594.6000000000001, "text": " and when we train with a criterion that says,", "tokens": [50364, 583, 3410, 671, 11, 412, 257, 1090, 1496, 11, 50472, 50472, 309, 311, 572, 819, 490, 1203, 50566, 50566, 321, 2825, 466, 949, 11, 562, 321, 362, 257, 48994, 7006, 11, 50710, 50710, 293, 562, 321, 3847, 365, 257, 46691, 300, 1619, 11, 50810, 50810, 286, 528, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50920, 50920, 293, 264, 2281, 295, 439, 264, 661, 6338, 2946, 13, 51160, 51160, 2639, 1651, 412, 341, 935, 30, 51248, 51248, 286, 632, 257, 1168, 13, 51292, 51292, 407, 2361, 322, 341, 10686, 11, 309, 2544, 411, 341, 3209, 787, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.1799047111284615, "compression_ratio": 1.590717299578059, "no_speech_prob": 1.1300074220343959e-05}, {"id": 515, "seek": 158568, "start": 1594.6000000000001, "end": 1596.8, "text": " I want to make the energy of the correct answer small", "tokens": [50364, 583, 3410, 671, 11, 412, 257, 1090, 1496, 11, 50472, 50472, 309, 311, 572, 819, 490, 1203, 50566, 50566, 321, 2825, 466, 949, 11, 562, 321, 362, 257, 48994, 7006, 11, 50710, 50710, 293, 562, 321, 3847, 365, 257, 46691, 300, 1619, 11, 50810, 50810, 286, 528, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50920, 50920, 293, 264, 2281, 295, 439, 264, 661, 6338, 2946, 13, 51160, 51160, 2639, 1651, 412, 341, 935, 30, 51248, 51248, 286, 632, 257, 1168, 13, 51292, 51292, 407, 2361, 322, 341, 10686, 11, 309, 2544, 411, 341, 3209, 787, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.1799047111284615, "compression_ratio": 1.590717299578059, "no_speech_prob": 1.1300074220343959e-05}, {"id": 516, "seek": 158568, "start": 1596.8, "end": 1601.6000000000001, "text": " and the energy of all the other answers higher.", "tokens": [50364, 583, 3410, 671, 11, 412, 257, 1090, 1496, 11, 50472, 50472, 309, 311, 572, 819, 490, 1203, 50566, 50566, 321, 2825, 466, 949, 11, 562, 321, 362, 257, 48994, 7006, 11, 50710, 50710, 293, 562, 321, 3847, 365, 257, 46691, 300, 1619, 11, 50810, 50810, 286, 528, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50920, 50920, 293, 264, 2281, 295, 439, 264, 661, 6338, 2946, 13, 51160, 51160, 2639, 1651, 412, 341, 935, 30, 51248, 51248, 286, 632, 257, 1168, 13, 51292, 51292, 407, 2361, 322, 341, 10686, 11, 309, 2544, 411, 341, 3209, 787, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.1799047111284615, "compression_ratio": 1.590717299578059, "no_speech_prob": 1.1300074220343959e-05}, {"id": 517, "seek": 158568, "start": 1601.6000000000001, "end": 1603.3600000000001, "text": " Any questions at this point?", "tokens": [50364, 583, 3410, 671, 11, 412, 257, 1090, 1496, 11, 50472, 50472, 309, 311, 572, 819, 490, 1203, 50566, 50566, 321, 2825, 466, 949, 11, 562, 321, 362, 257, 48994, 7006, 11, 50710, 50710, 293, 562, 321, 3847, 365, 257, 46691, 300, 1619, 11, 50810, 50810, 286, 528, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50920, 50920, 293, 264, 2281, 295, 439, 264, 661, 6338, 2946, 13, 51160, 51160, 2639, 1651, 412, 341, 935, 30, 51248, 51248, 286, 632, 257, 1168, 13, 51292, 51292, 407, 2361, 322, 341, 10686, 11, 309, 2544, 411, 341, 3209, 787, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.1799047111284615, "compression_ratio": 1.590717299578059, "no_speech_prob": 1.1300074220343959e-05}, {"id": 518, "seek": 158568, "start": 1603.3600000000001, "end": 1604.24, "text": " I had a question.", "tokens": [50364, 583, 3410, 671, 11, 412, 257, 1090, 1496, 11, 50472, 50472, 309, 311, 572, 819, 490, 1203, 50566, 50566, 321, 2825, 466, 949, 11, 562, 321, 362, 257, 48994, 7006, 11, 50710, 50710, 293, 562, 321, 3847, 365, 257, 46691, 300, 1619, 11, 50810, 50810, 286, 528, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50920, 50920, 293, 264, 2281, 295, 439, 264, 661, 6338, 2946, 13, 51160, 51160, 2639, 1651, 412, 341, 935, 30, 51248, 51248, 286, 632, 257, 1168, 13, 51292, 51292, 407, 2361, 322, 341, 10686, 11, 309, 2544, 411, 341, 3209, 787, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.1799047111284615, "compression_ratio": 1.590717299578059, "no_speech_prob": 1.1300074220343959e-05}, {"id": 519, "seek": 158568, "start": 1604.24, "end": 1612.88, "text": " So based on this diagram, it seems like this network only", "tokens": [50364, 583, 3410, 671, 11, 412, 257, 1090, 1496, 11, 50472, 50472, 309, 311, 572, 819, 490, 1203, 50566, 50566, 321, 2825, 466, 949, 11, 562, 321, 362, 257, 48994, 7006, 11, 50710, 50710, 293, 562, 321, 3847, 365, 257, 46691, 300, 1619, 11, 50810, 50810, 286, 528, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50920, 50920, 293, 264, 2281, 295, 439, 264, 661, 6338, 2946, 13, 51160, 51160, 2639, 1651, 412, 341, 935, 30, 51248, 51248, 286, 632, 257, 1168, 13, 51292, 51292, 407, 2361, 322, 341, 10686, 11, 309, 2544, 411, 341, 3209, 787, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.1799047111284615, "compression_ratio": 1.590717299578059, "no_speech_prob": 1.1300074220343959e-05}, {"id": 520, "seek": 161288, "start": 1612.88, "end": 1617.2, "text": " really takes discrete values.", "tokens": [50364, 534, 2516, 27706, 4190, 13, 50580, 50580, 400, 452, 3701, 390, 300, 646, 38377, 50796, 50796, 1943, 380, 534, 4942, 498, 291, 445, 362, 787, 51026, 51026, 1364, 365, 27706, 4190, 13, 51112, 51112, 407, 286, 478, 6359, 498, 286, 478, 5361, 746, 11, 51210, 51210, 420, 498, 300, 311, 577, 291, 1745, 729, 721, 13, 51484, 51484, 1779, 11, 2264, 11, 370, 294, 341, 1389, 11, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51660, 51660, 366, 406, 9102, 300, 291, 1466, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14712323199261676, "compression_ratio": 1.4952380952380953, "no_speech_prob": 5.421836704044836e-06}, {"id": 521, "seek": 161288, "start": 1617.2, "end": 1621.5200000000002, "text": " And my understanding was that back propagation", "tokens": [50364, 534, 2516, 27706, 4190, 13, 50580, 50580, 400, 452, 3701, 390, 300, 646, 38377, 50796, 50796, 1943, 380, 534, 4942, 498, 291, 445, 362, 787, 51026, 51026, 1364, 365, 27706, 4190, 13, 51112, 51112, 407, 286, 478, 6359, 498, 286, 478, 5361, 746, 11, 51210, 51210, 420, 498, 300, 311, 577, 291, 1745, 729, 721, 13, 51484, 51484, 1779, 11, 2264, 11, 370, 294, 341, 1389, 11, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51660, 51660, 366, 406, 9102, 300, 291, 1466, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14712323199261676, "compression_ratio": 1.4952380952380953, "no_speech_prob": 5.421836704044836e-06}, {"id": 522, "seek": 161288, "start": 1621.5200000000002, "end": 1626.1200000000001, "text": " isn't really effective if you just have only", "tokens": [50364, 534, 2516, 27706, 4190, 13, 50580, 50580, 400, 452, 3701, 390, 300, 646, 38377, 50796, 50796, 1943, 380, 534, 4942, 498, 291, 445, 362, 787, 51026, 51026, 1364, 365, 27706, 4190, 13, 51112, 51112, 407, 286, 478, 6359, 498, 286, 478, 5361, 746, 11, 51210, 51210, 420, 498, 300, 311, 577, 291, 1745, 729, 721, 13, 51484, 51484, 1779, 11, 2264, 11, 370, 294, 341, 1389, 11, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51660, 51660, 366, 406, 9102, 300, 291, 1466, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14712323199261676, "compression_ratio": 1.4952380952380953, "no_speech_prob": 5.421836704044836e-06}, {"id": 523, "seek": 161288, "start": 1626.1200000000001, "end": 1627.8400000000001, "text": " working with discrete values.", "tokens": [50364, 534, 2516, 27706, 4190, 13, 50580, 50580, 400, 452, 3701, 390, 300, 646, 38377, 50796, 50796, 1943, 380, 534, 4942, 498, 291, 445, 362, 787, 51026, 51026, 1364, 365, 27706, 4190, 13, 51112, 51112, 407, 286, 478, 6359, 498, 286, 478, 5361, 746, 11, 51210, 51210, 420, 498, 300, 311, 577, 291, 1745, 729, 721, 13, 51484, 51484, 1779, 11, 2264, 11, 370, 294, 341, 1389, 11, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51660, 51660, 366, 406, 9102, 300, 291, 1466, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14712323199261676, "compression_ratio": 1.4952380952380953, "no_speech_prob": 5.421836704044836e-06}, {"id": 524, "seek": 161288, "start": 1627.8400000000001, "end": 1629.8000000000002, "text": " So I'm wondering if I'm missing something,", "tokens": [50364, 534, 2516, 27706, 4190, 13, 50580, 50580, 400, 452, 3701, 390, 300, 646, 38377, 50796, 50796, 1943, 380, 534, 4942, 498, 291, 445, 362, 787, 51026, 51026, 1364, 365, 27706, 4190, 13, 51112, 51112, 407, 286, 478, 6359, 498, 286, 478, 5361, 746, 11, 51210, 51210, 420, 498, 300, 311, 577, 291, 1745, 729, 721, 13, 51484, 51484, 1779, 11, 2264, 11, 370, 294, 341, 1389, 11, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51660, 51660, 366, 406, 9102, 300, 291, 1466, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14712323199261676, "compression_ratio": 1.4952380952380953, "no_speech_prob": 5.421836704044836e-06}, {"id": 525, "seek": 161288, "start": 1629.8000000000002, "end": 1635.2800000000002, "text": " or if that's how you connect those things.", "tokens": [50364, 534, 2516, 27706, 4190, 13, 50580, 50580, 400, 452, 3701, 390, 300, 646, 38377, 50796, 50796, 1943, 380, 534, 4942, 498, 291, 445, 362, 787, 51026, 51026, 1364, 365, 27706, 4190, 13, 51112, 51112, 407, 286, 478, 6359, 498, 286, 478, 5361, 746, 11, 51210, 51210, 420, 498, 300, 311, 577, 291, 1745, 729, 721, 13, 51484, 51484, 1779, 11, 2264, 11, 370, 294, 341, 1389, 11, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51660, 51660, 366, 406, 9102, 300, 291, 1466, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14712323199261676, "compression_ratio": 1.4952380952380953, "no_speech_prob": 5.421836704044836e-06}, {"id": 526, "seek": 161288, "start": 1635.2800000000002, "end": 1638.8000000000002, "text": " Right, OK, so in this case, z1, z2, y1, y2", "tokens": [50364, 534, 2516, 27706, 4190, 13, 50580, 50580, 400, 452, 3701, 390, 300, 646, 38377, 50796, 50796, 1943, 380, 534, 4942, 498, 291, 445, 362, 787, 51026, 51026, 1364, 365, 27706, 4190, 13, 51112, 51112, 407, 286, 478, 6359, 498, 286, 478, 5361, 746, 11, 51210, 51210, 420, 498, 300, 311, 577, 291, 1745, 729, 721, 13, 51484, 51484, 1779, 11, 2264, 11, 370, 294, 341, 1389, 11, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51660, 51660, 366, 406, 9102, 300, 291, 1466, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14712323199261676, "compression_ratio": 1.4952380952380953, "no_speech_prob": 5.421836704044836e-06}, {"id": 527, "seek": 161288, "start": 1638.8000000000002, "end": 1641.92, "text": " are not variables that you learn.", "tokens": [50364, 534, 2516, 27706, 4190, 13, 50580, 50580, 400, 452, 3701, 390, 300, 646, 38377, 50796, 50796, 1943, 380, 534, 4942, 498, 291, 445, 362, 787, 51026, 51026, 1364, 365, 27706, 4190, 13, 51112, 51112, 407, 286, 478, 6359, 498, 286, 478, 5361, 746, 11, 51210, 51210, 420, 498, 300, 311, 577, 291, 1745, 729, 721, 13, 51484, 51484, 1779, 11, 2264, 11, 370, 294, 341, 1389, 11, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51660, 51660, 366, 406, 9102, 300, 291, 1466, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14712323199261676, "compression_ratio": 1.4952380952380953, "no_speech_prob": 5.421836704044836e-06}, {"id": 528, "seek": 164192, "start": 1641.92, "end": 1644.0, "text": " They're labels, essentially.", "tokens": [50364, 814, 434, 16949, 11, 4476, 13, 50468, 50468, 2264, 11, 436, 434, 27706, 13, 50522, 50522, 407, 288, 16, 11, 288, 17, 366, 27706, 11, 445, 411, 264, 1508, 11, 264, 7719, 11, 50750, 50750, 264, 5598, 295, 264, 6542, 307, 27706, 13, 50848, 50848, 16192, 291, 362, 732, 295, 552, 11, 457, 2035, 13, 51012, 51012, 710, 16, 11, 710, 17, 366, 1936, 295, 264, 912, 3687, 13, 51106, 51106, 814, 434, 27706, 9102, 13, 51178, 51178, 814, 434, 406, 721, 291, 393, 1466, 538, 16235, 23475, 13, 51268, 51268, 814, 434, 445, 48994, 9102, 291, 51348, 51348, 362, 281, 17522, 670, 281, 360, 38253, 11, 558, 30, 51494, 51494, 961, 311, 406, 751, 466, 2539, 337, 586, 13, 51594, 51594, 3443, 428, 1185, 307, 8895, 11, 286, 976, 291, 364, 2031, 13, 51716, 51716, 400, 538, 2281, 4464, 2144, 11, 291, 915, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17798369785524765, "compression_ratio": 1.7418300653594772, "no_speech_prob": 6.438019227061886e-06}, {"id": 529, "seek": 164192, "start": 1644.0, "end": 1645.0800000000002, "text": " OK, they're discrete.", "tokens": [50364, 814, 434, 16949, 11, 4476, 13, 50468, 50468, 2264, 11, 436, 434, 27706, 13, 50522, 50522, 407, 288, 16, 11, 288, 17, 366, 27706, 11, 445, 411, 264, 1508, 11, 264, 7719, 11, 50750, 50750, 264, 5598, 295, 264, 6542, 307, 27706, 13, 50848, 50848, 16192, 291, 362, 732, 295, 552, 11, 457, 2035, 13, 51012, 51012, 710, 16, 11, 710, 17, 366, 1936, 295, 264, 912, 3687, 13, 51106, 51106, 814, 434, 27706, 9102, 13, 51178, 51178, 814, 434, 406, 721, 291, 393, 1466, 538, 16235, 23475, 13, 51268, 51268, 814, 434, 445, 48994, 9102, 291, 51348, 51348, 362, 281, 17522, 670, 281, 360, 38253, 11, 558, 30, 51494, 51494, 961, 311, 406, 751, 466, 2539, 337, 586, 13, 51594, 51594, 3443, 428, 1185, 307, 8895, 11, 286, 976, 291, 364, 2031, 13, 51716, 51716, 400, 538, 2281, 4464, 2144, 11, 291, 915, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17798369785524765, "compression_ratio": 1.7418300653594772, "no_speech_prob": 6.438019227061886e-06}, {"id": 530, "seek": 164192, "start": 1645.0800000000002, "end": 1649.64, "text": " So y1, y2 are discrete, just like the class, the category,", "tokens": [50364, 814, 434, 16949, 11, 4476, 13, 50468, 50468, 2264, 11, 436, 434, 27706, 13, 50522, 50522, 407, 288, 16, 11, 288, 17, 366, 27706, 11, 445, 411, 264, 1508, 11, 264, 7719, 11, 50750, 50750, 264, 5598, 295, 264, 6542, 307, 27706, 13, 50848, 50848, 16192, 291, 362, 732, 295, 552, 11, 457, 2035, 13, 51012, 51012, 710, 16, 11, 710, 17, 366, 1936, 295, 264, 912, 3687, 13, 51106, 51106, 814, 434, 27706, 9102, 13, 51178, 51178, 814, 434, 406, 721, 291, 393, 1466, 538, 16235, 23475, 13, 51268, 51268, 814, 434, 445, 48994, 9102, 291, 51348, 51348, 362, 281, 17522, 670, 281, 360, 38253, 11, 558, 30, 51494, 51494, 961, 311, 406, 751, 466, 2539, 337, 586, 13, 51594, 51594, 3443, 428, 1185, 307, 8895, 11, 286, 976, 291, 364, 2031, 13, 51716, 51716, 400, 538, 2281, 4464, 2144, 11, 291, 915, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17798369785524765, "compression_ratio": 1.7418300653594772, "no_speech_prob": 6.438019227061886e-06}, {"id": 531, "seek": 164192, "start": 1649.64, "end": 1651.6000000000001, "text": " the output of the component is discrete.", "tokens": [50364, 814, 434, 16949, 11, 4476, 13, 50468, 50468, 2264, 11, 436, 434, 27706, 13, 50522, 50522, 407, 288, 16, 11, 288, 17, 366, 27706, 11, 445, 411, 264, 1508, 11, 264, 7719, 11, 50750, 50750, 264, 5598, 295, 264, 6542, 307, 27706, 13, 50848, 50848, 16192, 291, 362, 732, 295, 552, 11, 457, 2035, 13, 51012, 51012, 710, 16, 11, 710, 17, 366, 1936, 295, 264, 912, 3687, 13, 51106, 51106, 814, 434, 27706, 9102, 13, 51178, 51178, 814, 434, 406, 721, 291, 393, 1466, 538, 16235, 23475, 13, 51268, 51268, 814, 434, 445, 48994, 9102, 291, 51348, 51348, 362, 281, 17522, 670, 281, 360, 38253, 11, 558, 30, 51494, 51494, 961, 311, 406, 751, 466, 2539, 337, 586, 13, 51594, 51594, 3443, 428, 1185, 307, 8895, 11, 286, 976, 291, 364, 2031, 13, 51716, 51716, 400, 538, 2281, 4464, 2144, 11, 291, 915, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17798369785524765, "compression_ratio": 1.7418300653594772, "no_speech_prob": 6.438019227061886e-06}, {"id": 532, "seek": 164192, "start": 1651.6000000000001, "end": 1654.88, "text": " Except you have two of them, but whatever.", "tokens": [50364, 814, 434, 16949, 11, 4476, 13, 50468, 50468, 2264, 11, 436, 434, 27706, 13, 50522, 50522, 407, 288, 16, 11, 288, 17, 366, 27706, 11, 445, 411, 264, 1508, 11, 264, 7719, 11, 50750, 50750, 264, 5598, 295, 264, 6542, 307, 27706, 13, 50848, 50848, 16192, 291, 362, 732, 295, 552, 11, 457, 2035, 13, 51012, 51012, 710, 16, 11, 710, 17, 366, 1936, 295, 264, 912, 3687, 13, 51106, 51106, 814, 434, 27706, 9102, 13, 51178, 51178, 814, 434, 406, 721, 291, 393, 1466, 538, 16235, 23475, 13, 51268, 51268, 814, 434, 445, 48994, 9102, 291, 51348, 51348, 362, 281, 17522, 670, 281, 360, 38253, 11, 558, 30, 51494, 51494, 961, 311, 406, 751, 466, 2539, 337, 586, 13, 51594, 51594, 3443, 428, 1185, 307, 8895, 11, 286, 976, 291, 364, 2031, 13, 51716, 51716, 400, 538, 2281, 4464, 2144, 11, 291, 915, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17798369785524765, "compression_ratio": 1.7418300653594772, "no_speech_prob": 6.438019227061886e-06}, {"id": 533, "seek": 164192, "start": 1654.88, "end": 1656.76, "text": " z1, z2 are basically of the same nature.", "tokens": [50364, 814, 434, 16949, 11, 4476, 13, 50468, 50468, 2264, 11, 436, 434, 27706, 13, 50522, 50522, 407, 288, 16, 11, 288, 17, 366, 27706, 11, 445, 411, 264, 1508, 11, 264, 7719, 11, 50750, 50750, 264, 5598, 295, 264, 6542, 307, 27706, 13, 50848, 50848, 16192, 291, 362, 732, 295, 552, 11, 457, 2035, 13, 51012, 51012, 710, 16, 11, 710, 17, 366, 1936, 295, 264, 912, 3687, 13, 51106, 51106, 814, 434, 27706, 9102, 13, 51178, 51178, 814, 434, 406, 721, 291, 393, 1466, 538, 16235, 23475, 13, 51268, 51268, 814, 434, 445, 48994, 9102, 291, 51348, 51348, 362, 281, 17522, 670, 281, 360, 38253, 11, 558, 30, 51494, 51494, 961, 311, 406, 751, 466, 2539, 337, 586, 13, 51594, 51594, 3443, 428, 1185, 307, 8895, 11, 286, 976, 291, 364, 2031, 13, 51716, 51716, 400, 538, 2281, 4464, 2144, 11, 291, 915, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17798369785524765, "compression_ratio": 1.7418300653594772, "no_speech_prob": 6.438019227061886e-06}, {"id": 534, "seek": 164192, "start": 1656.76, "end": 1658.2, "text": " They're discrete variables.", "tokens": [50364, 814, 434, 16949, 11, 4476, 13, 50468, 50468, 2264, 11, 436, 434, 27706, 13, 50522, 50522, 407, 288, 16, 11, 288, 17, 366, 27706, 11, 445, 411, 264, 1508, 11, 264, 7719, 11, 50750, 50750, 264, 5598, 295, 264, 6542, 307, 27706, 13, 50848, 50848, 16192, 291, 362, 732, 295, 552, 11, 457, 2035, 13, 51012, 51012, 710, 16, 11, 710, 17, 366, 1936, 295, 264, 912, 3687, 13, 51106, 51106, 814, 434, 27706, 9102, 13, 51178, 51178, 814, 434, 406, 721, 291, 393, 1466, 538, 16235, 23475, 13, 51268, 51268, 814, 434, 445, 48994, 9102, 291, 51348, 51348, 362, 281, 17522, 670, 281, 360, 38253, 11, 558, 30, 51494, 51494, 961, 311, 406, 751, 466, 2539, 337, 586, 13, 51594, 51594, 3443, 428, 1185, 307, 8895, 11, 286, 976, 291, 364, 2031, 13, 51716, 51716, 400, 538, 2281, 4464, 2144, 11, 291, 915, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17798369785524765, "compression_ratio": 1.7418300653594772, "no_speech_prob": 6.438019227061886e-06}, {"id": 535, "seek": 164192, "start": 1658.2, "end": 1660.0, "text": " They're not things you can learn by gradient descent.", "tokens": [50364, 814, 434, 16949, 11, 4476, 13, 50468, 50468, 2264, 11, 436, 434, 27706, 13, 50522, 50522, 407, 288, 16, 11, 288, 17, 366, 27706, 11, 445, 411, 264, 1508, 11, 264, 7719, 11, 50750, 50750, 264, 5598, 295, 264, 6542, 307, 27706, 13, 50848, 50848, 16192, 291, 362, 732, 295, 552, 11, 457, 2035, 13, 51012, 51012, 710, 16, 11, 710, 17, 366, 1936, 295, 264, 912, 3687, 13, 51106, 51106, 814, 434, 27706, 9102, 13, 51178, 51178, 814, 434, 406, 721, 291, 393, 1466, 538, 16235, 23475, 13, 51268, 51268, 814, 434, 445, 48994, 9102, 291, 51348, 51348, 362, 281, 17522, 670, 281, 360, 38253, 11, 558, 30, 51494, 51494, 961, 311, 406, 751, 466, 2539, 337, 586, 13, 51594, 51594, 3443, 428, 1185, 307, 8895, 11, 286, 976, 291, 364, 2031, 13, 51716, 51716, 400, 538, 2281, 4464, 2144, 11, 291, 915, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17798369785524765, "compression_ratio": 1.7418300653594772, "no_speech_prob": 6.438019227061886e-06}, {"id": 536, "seek": 164192, "start": 1660.0, "end": 1661.6000000000001, "text": " They're just latent variables you", "tokens": [50364, 814, 434, 16949, 11, 4476, 13, 50468, 50468, 2264, 11, 436, 434, 27706, 13, 50522, 50522, 407, 288, 16, 11, 288, 17, 366, 27706, 11, 445, 411, 264, 1508, 11, 264, 7719, 11, 50750, 50750, 264, 5598, 295, 264, 6542, 307, 27706, 13, 50848, 50848, 16192, 291, 362, 732, 295, 552, 11, 457, 2035, 13, 51012, 51012, 710, 16, 11, 710, 17, 366, 1936, 295, 264, 912, 3687, 13, 51106, 51106, 814, 434, 27706, 9102, 13, 51178, 51178, 814, 434, 406, 721, 291, 393, 1466, 538, 16235, 23475, 13, 51268, 51268, 814, 434, 445, 48994, 9102, 291, 51348, 51348, 362, 281, 17522, 670, 281, 360, 38253, 11, 558, 30, 51494, 51494, 961, 311, 406, 751, 466, 2539, 337, 586, 13, 51594, 51594, 3443, 428, 1185, 307, 8895, 11, 286, 976, 291, 364, 2031, 13, 51716, 51716, 400, 538, 2281, 4464, 2144, 11, 291, 915, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17798369785524765, "compression_ratio": 1.7418300653594772, "no_speech_prob": 6.438019227061886e-06}, {"id": 537, "seek": 164192, "start": 1661.6000000000001, "end": 1664.52, "text": " have to minimize over to do inference, right?", "tokens": [50364, 814, 434, 16949, 11, 4476, 13, 50468, 50468, 2264, 11, 436, 434, 27706, 13, 50522, 50522, 407, 288, 16, 11, 288, 17, 366, 27706, 11, 445, 411, 264, 1508, 11, 264, 7719, 11, 50750, 50750, 264, 5598, 295, 264, 6542, 307, 27706, 13, 50848, 50848, 16192, 291, 362, 732, 295, 552, 11, 457, 2035, 13, 51012, 51012, 710, 16, 11, 710, 17, 366, 1936, 295, 264, 912, 3687, 13, 51106, 51106, 814, 434, 27706, 9102, 13, 51178, 51178, 814, 434, 406, 721, 291, 393, 1466, 538, 16235, 23475, 13, 51268, 51268, 814, 434, 445, 48994, 9102, 291, 51348, 51348, 362, 281, 17522, 670, 281, 360, 38253, 11, 558, 30, 51494, 51494, 961, 311, 406, 751, 466, 2539, 337, 586, 13, 51594, 51594, 3443, 428, 1185, 307, 8895, 11, 286, 976, 291, 364, 2031, 13, 51716, 51716, 400, 538, 2281, 4464, 2144, 11, 291, 915, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17798369785524765, "compression_ratio": 1.7418300653594772, "no_speech_prob": 6.438019227061886e-06}, {"id": 538, "seek": 164192, "start": 1664.52, "end": 1666.52, "text": " Let's not talk about learning for now.", "tokens": [50364, 814, 434, 16949, 11, 4476, 13, 50468, 50468, 2264, 11, 436, 434, 27706, 13, 50522, 50522, 407, 288, 16, 11, 288, 17, 366, 27706, 11, 445, 411, 264, 1508, 11, 264, 7719, 11, 50750, 50750, 264, 5598, 295, 264, 6542, 307, 27706, 13, 50848, 50848, 16192, 291, 362, 732, 295, 552, 11, 457, 2035, 13, 51012, 51012, 710, 16, 11, 710, 17, 366, 1936, 295, 264, 912, 3687, 13, 51106, 51106, 814, 434, 27706, 9102, 13, 51178, 51178, 814, 434, 406, 721, 291, 393, 1466, 538, 16235, 23475, 13, 51268, 51268, 814, 434, 445, 48994, 9102, 291, 51348, 51348, 362, 281, 17522, 670, 281, 360, 38253, 11, 558, 30, 51494, 51494, 961, 311, 406, 751, 466, 2539, 337, 586, 13, 51594, 51594, 3443, 428, 1185, 307, 8895, 11, 286, 976, 291, 364, 2031, 13, 51716, 51716, 400, 538, 2281, 4464, 2144, 11, 291, 915, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17798369785524765, "compression_ratio": 1.7418300653594772, "no_speech_prob": 6.438019227061886e-06}, {"id": 539, "seek": 164192, "start": 1666.52, "end": 1668.96, "text": " Once your system is trained, I give you an x.", "tokens": [50364, 814, 434, 16949, 11, 4476, 13, 50468, 50468, 2264, 11, 436, 434, 27706, 13, 50522, 50522, 407, 288, 16, 11, 288, 17, 366, 27706, 11, 445, 411, 264, 1508, 11, 264, 7719, 11, 50750, 50750, 264, 5598, 295, 264, 6542, 307, 27706, 13, 50848, 50848, 16192, 291, 362, 732, 295, 552, 11, 457, 2035, 13, 51012, 51012, 710, 16, 11, 710, 17, 366, 1936, 295, 264, 912, 3687, 13, 51106, 51106, 814, 434, 27706, 9102, 13, 51178, 51178, 814, 434, 406, 721, 291, 393, 1466, 538, 16235, 23475, 13, 51268, 51268, 814, 434, 445, 48994, 9102, 291, 51348, 51348, 362, 281, 17522, 670, 281, 360, 38253, 11, 558, 30, 51494, 51494, 961, 311, 406, 751, 466, 2539, 337, 586, 13, 51594, 51594, 3443, 428, 1185, 307, 8895, 11, 286, 976, 291, 364, 2031, 13, 51716, 51716, 400, 538, 2281, 4464, 2144, 11, 291, 915, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17798369785524765, "compression_ratio": 1.7418300653594772, "no_speech_prob": 6.438019227061886e-06}, {"id": 540, "seek": 164192, "start": 1668.96, "end": 1671.88, "text": " And by energy minimization, you find z1, z2, y1, y2", "tokens": [50364, 814, 434, 16949, 11, 4476, 13, 50468, 50468, 2264, 11, 436, 434, 27706, 13, 50522, 50522, 407, 288, 16, 11, 288, 17, 366, 27706, 11, 445, 411, 264, 1508, 11, 264, 7719, 11, 50750, 50750, 264, 5598, 295, 264, 6542, 307, 27706, 13, 50848, 50848, 16192, 291, 362, 732, 295, 552, 11, 457, 2035, 13, 51012, 51012, 710, 16, 11, 710, 17, 366, 1936, 295, 264, 912, 3687, 13, 51106, 51106, 814, 434, 27706, 9102, 13, 51178, 51178, 814, 434, 406, 721, 291, 393, 1466, 538, 16235, 23475, 13, 51268, 51268, 814, 434, 445, 48994, 9102, 291, 51348, 51348, 362, 281, 17522, 670, 281, 360, 38253, 11, 558, 30, 51494, 51494, 961, 311, 406, 751, 466, 2539, 337, 586, 13, 51594, 51594, 3443, 428, 1185, 307, 8895, 11, 286, 976, 291, 364, 2031, 13, 51716, 51716, 400, 538, 2281, 4464, 2144, 11, 291, 915, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17798369785524765, "compression_ratio": 1.7418300653594772, "no_speech_prob": 6.438019227061886e-06}, {"id": 541, "seek": 167188, "start": 1671.88, "end": 1672.96, "text": " that minimizes the energy.", "tokens": [50364, 300, 4464, 5660, 264, 2281, 13, 50418, 50536, 400, 570, 291, 600, 8895, 264, 3006, 288, 16, 11, 288, 17, 50716, 50716, 281, 362, 264, 12437, 2281, 3654, 439, 1944, 31493, 50832, 50832, 295, 288, 16, 11, 288, 17, 11, 291, 434, 516, 281, 483, 264, 3006, 472, 13, 50994, 50994, 823, 11, 337, 3097, 11, 264, 3097, 2516, 1081, 11, 51282, 51282, 1936, 11807, 264, 9834, 295, 1184, 295, 729, 6771, 13, 51452, 51452, 15123, 729, 6771, 11, 456, 366, 9834, 11, 51594, 51594, 5406, 11, 261, 65, 11, 261, 66, 11, 261, 67, 11, 597, 286, 994, 380, 2906, 510, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17685207473897488, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.282618879689835e-05}, {"id": 542, "seek": 167188, "start": 1675.3200000000002, "end": 1678.92, "text": " And because you've trained the correct y1, y2", "tokens": [50364, 300, 4464, 5660, 264, 2281, 13, 50418, 50536, 400, 570, 291, 600, 8895, 264, 3006, 288, 16, 11, 288, 17, 50716, 50716, 281, 362, 264, 12437, 2281, 3654, 439, 1944, 31493, 50832, 50832, 295, 288, 16, 11, 288, 17, 11, 291, 434, 516, 281, 483, 264, 3006, 472, 13, 50994, 50994, 823, 11, 337, 3097, 11, 264, 3097, 2516, 1081, 11, 51282, 51282, 1936, 11807, 264, 9834, 295, 1184, 295, 729, 6771, 13, 51452, 51452, 15123, 729, 6771, 11, 456, 366, 9834, 11, 51594, 51594, 5406, 11, 261, 65, 11, 261, 66, 11, 261, 67, 11, 597, 286, 994, 380, 2906, 510, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17685207473897488, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.282618879689835e-05}, {"id": 543, "seek": 167188, "start": 1678.92, "end": 1681.24, "text": " to have the lowest energy among all possible configurations", "tokens": [50364, 300, 4464, 5660, 264, 2281, 13, 50418, 50536, 400, 570, 291, 600, 8895, 264, 3006, 288, 16, 11, 288, 17, 50716, 50716, 281, 362, 264, 12437, 2281, 3654, 439, 1944, 31493, 50832, 50832, 295, 288, 16, 11, 288, 17, 11, 291, 434, 516, 281, 483, 264, 3006, 472, 13, 50994, 50994, 823, 11, 337, 3097, 11, 264, 3097, 2516, 1081, 11, 51282, 51282, 1936, 11807, 264, 9834, 295, 1184, 295, 729, 6771, 13, 51452, 51452, 15123, 729, 6771, 11, 456, 366, 9834, 11, 51594, 51594, 5406, 11, 261, 65, 11, 261, 66, 11, 261, 67, 11, 597, 286, 994, 380, 2906, 510, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17685207473897488, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.282618879689835e-05}, {"id": 544, "seek": 167188, "start": 1681.24, "end": 1684.48, "text": " of y1, y2, you're going to get the correct one.", "tokens": [50364, 300, 4464, 5660, 264, 2281, 13, 50418, 50536, 400, 570, 291, 600, 8895, 264, 3006, 288, 16, 11, 288, 17, 50716, 50716, 281, 362, 264, 12437, 2281, 3654, 439, 1944, 31493, 50832, 50832, 295, 288, 16, 11, 288, 17, 11, 291, 434, 516, 281, 483, 264, 3006, 472, 13, 50994, 50994, 823, 11, 337, 3097, 11, 264, 3097, 2516, 1081, 11, 51282, 51282, 1936, 11807, 264, 9834, 295, 1184, 295, 729, 6771, 13, 51452, 51452, 15123, 729, 6771, 11, 456, 366, 9834, 11, 51594, 51594, 5406, 11, 261, 65, 11, 261, 66, 11, 261, 67, 11, 597, 286, 994, 380, 2906, 510, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17685207473897488, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.282618879689835e-05}, {"id": 545, "seek": 167188, "start": 1684.48, "end": 1690.24, "text": " Now, for training, the training takes place,", "tokens": [50364, 300, 4464, 5660, 264, 2281, 13, 50418, 50536, 400, 570, 291, 600, 8895, 264, 3006, 288, 16, 11, 288, 17, 50716, 50716, 281, 362, 264, 12437, 2281, 3654, 439, 1944, 31493, 50832, 50832, 295, 288, 16, 11, 288, 17, 11, 291, 434, 516, 281, 483, 264, 3006, 472, 13, 50994, 50994, 823, 11, 337, 3097, 11, 264, 3097, 2516, 1081, 11, 51282, 51282, 1936, 11807, 264, 9834, 295, 1184, 295, 729, 6771, 13, 51452, 51452, 15123, 729, 6771, 11, 456, 366, 9834, 11, 51594, 51594, 5406, 11, 261, 65, 11, 261, 66, 11, 261, 67, 11, 597, 286, 994, 380, 2906, 510, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17685207473897488, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.282618879689835e-05}, {"id": 546, "seek": 167188, "start": 1690.24, "end": 1693.64, "text": " basically affects the parameters of each of those factors.", "tokens": [50364, 300, 4464, 5660, 264, 2281, 13, 50418, 50536, 400, 570, 291, 600, 8895, 264, 3006, 288, 16, 11, 288, 17, 50716, 50716, 281, 362, 264, 12437, 2281, 3654, 439, 1944, 31493, 50832, 50832, 295, 288, 16, 11, 288, 17, 11, 291, 434, 516, 281, 483, 264, 3006, 472, 13, 50994, 50994, 823, 11, 337, 3097, 11, 264, 3097, 2516, 1081, 11, 51282, 51282, 1936, 11807, 264, 9834, 295, 1184, 295, 729, 6771, 13, 51452, 51452, 15123, 729, 6771, 11, 456, 366, 9834, 11, 51594, 51594, 5406, 11, 261, 65, 11, 261, 66, 11, 261, 67, 11, 597, 286, 994, 380, 2906, 510, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17685207473897488, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.282618879689835e-05}, {"id": 547, "seek": 167188, "start": 1693.64, "end": 1696.48, "text": " Inside those factors, there are parameters,", "tokens": [50364, 300, 4464, 5660, 264, 2281, 13, 50418, 50536, 400, 570, 291, 600, 8895, 264, 3006, 288, 16, 11, 288, 17, 50716, 50716, 281, 362, 264, 12437, 2281, 3654, 439, 1944, 31493, 50832, 50832, 295, 288, 16, 11, 288, 17, 11, 291, 434, 516, 281, 483, 264, 3006, 472, 13, 50994, 50994, 823, 11, 337, 3097, 11, 264, 3097, 2516, 1081, 11, 51282, 51282, 1936, 11807, 264, 9834, 295, 1184, 295, 729, 6771, 13, 51452, 51452, 15123, 729, 6771, 11, 456, 366, 9834, 11, 51594, 51594, 5406, 11, 261, 65, 11, 261, 66, 11, 261, 67, 11, 597, 286, 994, 380, 2906, 510, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17685207473897488, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.282618879689835e-05}, {"id": 548, "seek": 167188, "start": 1696.48, "end": 1701.3600000000001, "text": " wa, wb, wc, wd, which I didn't represent here.", "tokens": [50364, 300, 4464, 5660, 264, 2281, 13, 50418, 50536, 400, 570, 291, 600, 8895, 264, 3006, 288, 16, 11, 288, 17, 50716, 50716, 281, 362, 264, 12437, 2281, 3654, 439, 1944, 31493, 50832, 50832, 295, 288, 16, 11, 288, 17, 11, 291, 434, 516, 281, 483, 264, 3006, 472, 13, 50994, 50994, 823, 11, 337, 3097, 11, 264, 3097, 2516, 1081, 11, 51282, 51282, 1936, 11807, 264, 9834, 295, 1184, 295, 729, 6771, 13, 51452, 51452, 15123, 729, 6771, 11, 456, 366, 9834, 11, 51594, 51594, 5406, 11, 261, 65, 11, 261, 66, 11, 261, 67, 11, 597, 286, 994, 380, 2906, 510, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17685207473897488, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.282618879689835e-05}, {"id": 549, "seek": 170136, "start": 1701.36, "end": 1704.28, "text": " And the way you train the system is you say,", "tokens": [50364, 400, 264, 636, 291, 3847, 264, 1185, 307, 291, 584, 11, 50510, 50510, 412, 264, 16235, 295, 264, 2281, 295, 264, 3006, 1867, 11, 50702, 50702, 365, 3104, 281, 729, 9834, 11, 50774, 50774, 286, 478, 516, 281, 29879, 264, 9834, 50824, 50824, 370, 300, 2281, 1709, 760, 13, 50882, 50882, 663, 311, 10957, 11, 819, 9364, 13, 51084, 51084, 400, 550, 16561, 11, 291, 362, 264, 2281, 295, 1578, 6338, 13, 51228, 51228, 286, 478, 516, 281, 646, 48256, 2771, 2448, 13, 51307, 51307, 400, 4650, 281, 452, 4470, 2445, 11, 51402, 51402, 286, 478, 516, 281, 2944, 493, 264, 2281, 295, 729, 51510, 51510, 370, 300, 452, 2281, 11, 452, 4470, 2445, 1709, 760, 13, 51730, 51730, 1222, 3097, 10024, 1709, 760, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.21481932410898136, "compression_ratio": 1.9435483870967742, "no_speech_prob": 1.92212282854598e-05}, {"id": 550, "seek": 170136, "start": 1704.28, "end": 1708.12, "text": " at the gradient of the energy of the correct answer,", "tokens": [50364, 400, 264, 636, 291, 3847, 264, 1185, 307, 291, 584, 11, 50510, 50510, 412, 264, 16235, 295, 264, 2281, 295, 264, 3006, 1867, 11, 50702, 50702, 365, 3104, 281, 729, 9834, 11, 50774, 50774, 286, 478, 516, 281, 29879, 264, 9834, 50824, 50824, 370, 300, 2281, 1709, 760, 13, 50882, 50882, 663, 311, 10957, 11, 819, 9364, 13, 51084, 51084, 400, 550, 16561, 11, 291, 362, 264, 2281, 295, 1578, 6338, 13, 51228, 51228, 286, 478, 516, 281, 646, 48256, 2771, 2448, 13, 51307, 51307, 400, 4650, 281, 452, 4470, 2445, 11, 51402, 51402, 286, 478, 516, 281, 2944, 493, 264, 2281, 295, 729, 51510, 51510, 370, 300, 452, 2281, 11, 452, 4470, 2445, 1709, 760, 13, 51730, 51730, 1222, 3097, 10024, 1709, 760, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.21481932410898136, "compression_ratio": 1.9435483870967742, "no_speech_prob": 1.92212282854598e-05}, {"id": 551, "seek": 170136, "start": 1708.12, "end": 1709.56, "text": " with respect to those parameters,", "tokens": [50364, 400, 264, 636, 291, 3847, 264, 1185, 307, 291, 584, 11, 50510, 50510, 412, 264, 16235, 295, 264, 2281, 295, 264, 3006, 1867, 11, 50702, 50702, 365, 3104, 281, 729, 9834, 11, 50774, 50774, 286, 478, 516, 281, 29879, 264, 9834, 50824, 50824, 370, 300, 2281, 1709, 760, 13, 50882, 50882, 663, 311, 10957, 11, 819, 9364, 13, 51084, 51084, 400, 550, 16561, 11, 291, 362, 264, 2281, 295, 1578, 6338, 13, 51228, 51228, 286, 478, 516, 281, 646, 48256, 2771, 2448, 13, 51307, 51307, 400, 4650, 281, 452, 4470, 2445, 11, 51402, 51402, 286, 478, 516, 281, 2944, 493, 264, 2281, 295, 729, 51510, 51510, 370, 300, 452, 2281, 11, 452, 4470, 2445, 1709, 760, 13, 51730, 51730, 1222, 3097, 10024, 1709, 760, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.21481932410898136, "compression_ratio": 1.9435483870967742, "no_speech_prob": 1.92212282854598e-05}, {"id": 552, "seek": 170136, "start": 1709.56, "end": 1710.56, "text": " I'm going to tweak the parameters", "tokens": [50364, 400, 264, 636, 291, 3847, 264, 1185, 307, 291, 584, 11, 50510, 50510, 412, 264, 16235, 295, 264, 2281, 295, 264, 3006, 1867, 11, 50702, 50702, 365, 3104, 281, 729, 9834, 11, 50774, 50774, 286, 478, 516, 281, 29879, 264, 9834, 50824, 50824, 370, 300, 2281, 1709, 760, 13, 50882, 50882, 663, 311, 10957, 11, 819, 9364, 13, 51084, 51084, 400, 550, 16561, 11, 291, 362, 264, 2281, 295, 1578, 6338, 13, 51228, 51228, 286, 478, 516, 281, 646, 48256, 2771, 2448, 13, 51307, 51307, 400, 4650, 281, 452, 4470, 2445, 11, 51402, 51402, 286, 478, 516, 281, 2944, 493, 264, 2281, 295, 729, 51510, 51510, 370, 300, 452, 2281, 11, 452, 4470, 2445, 1709, 760, 13, 51730, 51730, 1222, 3097, 10024, 1709, 760, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.21481932410898136, "compression_ratio": 1.9435483870967742, "no_speech_prob": 1.92212282854598e-05}, {"id": 553, "seek": 170136, "start": 1710.56, "end": 1711.7199999999998, "text": " so that energy goes down.", "tokens": [50364, 400, 264, 636, 291, 3847, 264, 1185, 307, 291, 584, 11, 50510, 50510, 412, 264, 16235, 295, 264, 2281, 295, 264, 3006, 1867, 11, 50702, 50702, 365, 3104, 281, 729, 9834, 11, 50774, 50774, 286, 478, 516, 281, 29879, 264, 9834, 50824, 50824, 370, 300, 2281, 1709, 760, 13, 50882, 50882, 663, 311, 10957, 11, 819, 9364, 13, 51084, 51084, 400, 550, 16561, 11, 291, 362, 264, 2281, 295, 1578, 6338, 13, 51228, 51228, 286, 478, 516, 281, 646, 48256, 2771, 2448, 13, 51307, 51307, 400, 4650, 281, 452, 4470, 2445, 11, 51402, 51402, 286, 478, 516, 281, 2944, 493, 264, 2281, 295, 729, 51510, 51510, 370, 300, 452, 2281, 11, 452, 4470, 2445, 1709, 760, 13, 51730, 51730, 1222, 3097, 10024, 1709, 760, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.21481932410898136, "compression_ratio": 1.9435483870967742, "no_speech_prob": 1.92212282854598e-05}, {"id": 554, "seek": 170136, "start": 1711.7199999999998, "end": 1715.76, "text": " That's continuous, differentiable.", "tokens": [50364, 400, 264, 636, 291, 3847, 264, 1185, 307, 291, 584, 11, 50510, 50510, 412, 264, 16235, 295, 264, 2281, 295, 264, 3006, 1867, 11, 50702, 50702, 365, 3104, 281, 729, 9834, 11, 50774, 50774, 286, 478, 516, 281, 29879, 264, 9834, 50824, 50824, 370, 300, 2281, 1709, 760, 13, 50882, 50882, 663, 311, 10957, 11, 819, 9364, 13, 51084, 51084, 400, 550, 16561, 11, 291, 362, 264, 2281, 295, 1578, 6338, 13, 51228, 51228, 286, 478, 516, 281, 646, 48256, 2771, 2448, 13, 51307, 51307, 400, 4650, 281, 452, 4470, 2445, 11, 51402, 51402, 286, 478, 516, 281, 2944, 493, 264, 2281, 295, 729, 51510, 51510, 370, 300, 452, 2281, 11, 452, 4470, 2445, 1709, 760, 13, 51730, 51730, 1222, 3097, 10024, 1709, 760, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.21481932410898136, "compression_ratio": 1.9435483870967742, "no_speech_prob": 1.92212282854598e-05}, {"id": 555, "seek": 170136, "start": 1715.76, "end": 1718.6399999999999, "text": " And then simultaneously, you have the energy of bad answers.", "tokens": [50364, 400, 264, 636, 291, 3847, 264, 1185, 307, 291, 584, 11, 50510, 50510, 412, 264, 16235, 295, 264, 2281, 295, 264, 3006, 1867, 11, 50702, 50702, 365, 3104, 281, 729, 9834, 11, 50774, 50774, 286, 478, 516, 281, 29879, 264, 9834, 50824, 50824, 370, 300, 2281, 1709, 760, 13, 50882, 50882, 663, 311, 10957, 11, 819, 9364, 13, 51084, 51084, 400, 550, 16561, 11, 291, 362, 264, 2281, 295, 1578, 6338, 13, 51228, 51228, 286, 478, 516, 281, 646, 48256, 2771, 2448, 13, 51307, 51307, 400, 4650, 281, 452, 4470, 2445, 11, 51402, 51402, 286, 478, 516, 281, 2944, 493, 264, 2281, 295, 729, 51510, 51510, 370, 300, 452, 2281, 11, 452, 4470, 2445, 1709, 760, 13, 51730, 51730, 1222, 3097, 10024, 1709, 760, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.21481932410898136, "compression_ratio": 1.9435483870967742, "no_speech_prob": 1.92212282854598e-05}, {"id": 556, "seek": 170136, "start": 1718.6399999999999, "end": 1720.2199999999998, "text": " I'm going to back propagate gradients.", "tokens": [50364, 400, 264, 636, 291, 3847, 264, 1185, 307, 291, 584, 11, 50510, 50510, 412, 264, 16235, 295, 264, 2281, 295, 264, 3006, 1867, 11, 50702, 50702, 365, 3104, 281, 729, 9834, 11, 50774, 50774, 286, 478, 516, 281, 29879, 264, 9834, 50824, 50824, 370, 300, 2281, 1709, 760, 13, 50882, 50882, 663, 311, 10957, 11, 819, 9364, 13, 51084, 51084, 400, 550, 16561, 11, 291, 362, 264, 2281, 295, 1578, 6338, 13, 51228, 51228, 286, 478, 516, 281, 646, 48256, 2771, 2448, 13, 51307, 51307, 400, 4650, 281, 452, 4470, 2445, 11, 51402, 51402, 286, 478, 516, 281, 2944, 493, 264, 2281, 295, 729, 51510, 51510, 370, 300, 452, 2281, 11, 452, 4470, 2445, 1709, 760, 13, 51730, 51730, 1222, 3097, 10024, 1709, 760, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.21481932410898136, "compression_ratio": 1.9435483870967742, "no_speech_prob": 1.92212282854598e-05}, {"id": 557, "seek": 170136, "start": 1720.2199999999998, "end": 1722.12, "text": " And according to my loss function,", "tokens": [50364, 400, 264, 636, 291, 3847, 264, 1185, 307, 291, 584, 11, 50510, 50510, 412, 264, 16235, 295, 264, 2281, 295, 264, 3006, 1867, 11, 50702, 50702, 365, 3104, 281, 729, 9834, 11, 50774, 50774, 286, 478, 516, 281, 29879, 264, 9834, 50824, 50824, 370, 300, 2281, 1709, 760, 13, 50882, 50882, 663, 311, 10957, 11, 819, 9364, 13, 51084, 51084, 400, 550, 16561, 11, 291, 362, 264, 2281, 295, 1578, 6338, 13, 51228, 51228, 286, 478, 516, 281, 646, 48256, 2771, 2448, 13, 51307, 51307, 400, 4650, 281, 452, 4470, 2445, 11, 51402, 51402, 286, 478, 516, 281, 2944, 493, 264, 2281, 295, 729, 51510, 51510, 370, 300, 452, 2281, 11, 452, 4470, 2445, 1709, 760, 13, 51730, 51730, 1222, 3097, 10024, 1709, 760, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.21481932410898136, "compression_ratio": 1.9435483870967742, "no_speech_prob": 1.92212282854598e-05}, {"id": 558, "seek": 170136, "start": 1722.12, "end": 1724.28, "text": " I'm going to push up the energy of those", "tokens": [50364, 400, 264, 636, 291, 3847, 264, 1185, 307, 291, 584, 11, 50510, 50510, 412, 264, 16235, 295, 264, 2281, 295, 264, 3006, 1867, 11, 50702, 50702, 365, 3104, 281, 729, 9834, 11, 50774, 50774, 286, 478, 516, 281, 29879, 264, 9834, 50824, 50824, 370, 300, 2281, 1709, 760, 13, 50882, 50882, 663, 311, 10957, 11, 819, 9364, 13, 51084, 51084, 400, 550, 16561, 11, 291, 362, 264, 2281, 295, 1578, 6338, 13, 51228, 51228, 286, 478, 516, 281, 646, 48256, 2771, 2448, 13, 51307, 51307, 400, 4650, 281, 452, 4470, 2445, 11, 51402, 51402, 286, 478, 516, 281, 2944, 493, 264, 2281, 295, 729, 51510, 51510, 370, 300, 452, 2281, 11, 452, 4470, 2445, 1709, 760, 13, 51730, 51730, 1222, 3097, 10024, 1709, 760, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.21481932410898136, "compression_ratio": 1.9435483870967742, "no_speech_prob": 1.92212282854598e-05}, {"id": 559, "seek": 170136, "start": 1724.28, "end": 1728.6799999999998, "text": " so that my energy, my loss function goes down.", "tokens": [50364, 400, 264, 636, 291, 3847, 264, 1185, 307, 291, 584, 11, 50510, 50510, 412, 264, 16235, 295, 264, 2281, 295, 264, 3006, 1867, 11, 50702, 50702, 365, 3104, 281, 729, 9834, 11, 50774, 50774, 286, 478, 516, 281, 29879, 264, 9834, 50824, 50824, 370, 300, 2281, 1709, 760, 13, 50882, 50882, 663, 311, 10957, 11, 819, 9364, 13, 51084, 51084, 400, 550, 16561, 11, 291, 362, 264, 2281, 295, 1578, 6338, 13, 51228, 51228, 286, 478, 516, 281, 646, 48256, 2771, 2448, 13, 51307, 51307, 400, 4650, 281, 452, 4470, 2445, 11, 51402, 51402, 286, 478, 516, 281, 2944, 493, 264, 2281, 295, 729, 51510, 51510, 370, 300, 452, 2281, 11, 452, 4470, 2445, 1709, 760, 13, 51730, 51730, 1222, 3097, 10024, 1709, 760, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.21481932410898136, "compression_ratio": 1.9435483870967742, "no_speech_prob": 1.92212282854598e-05}, {"id": 560, "seek": 170136, "start": 1728.6799999999998, "end": 1731.28, "text": " My training objective goes down.", "tokens": [50364, 400, 264, 636, 291, 3847, 264, 1185, 307, 291, 584, 11, 50510, 50510, 412, 264, 16235, 295, 264, 2281, 295, 264, 3006, 1867, 11, 50702, 50702, 365, 3104, 281, 729, 9834, 11, 50774, 50774, 286, 478, 516, 281, 29879, 264, 9834, 50824, 50824, 370, 300, 2281, 1709, 760, 13, 50882, 50882, 663, 311, 10957, 11, 819, 9364, 13, 51084, 51084, 400, 550, 16561, 11, 291, 362, 264, 2281, 295, 1578, 6338, 13, 51228, 51228, 286, 478, 516, 281, 646, 48256, 2771, 2448, 13, 51307, 51307, 400, 4650, 281, 452, 4470, 2445, 11, 51402, 51402, 286, 478, 516, 281, 2944, 493, 264, 2281, 295, 729, 51510, 51510, 370, 300, 452, 2281, 11, 452, 4470, 2445, 1709, 760, 13, 51730, 51730, 1222, 3097, 10024, 1709, 760, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.21481932410898136, "compression_ratio": 1.9435483870967742, "no_speech_prob": 1.92212282854598e-05}, {"id": 561, "seek": 173128, "start": 1731.28, "end": 1731.8799999999999, "text": " Not my energy.", "tokens": [50364, 1726, 452, 2281, 13, 50394, 50570, 407, 586, 437, 286, 478, 13468, 760, 456, 365, 264, 9924, 1329, 50716, 50716, 307, 264, 1186, 300, 570, 729, 9102, 366, 27706, 11, 50892, 50892, 291, 393, 380, 764, 16235, 23475, 281, 13596, 552, 13, 51124, 51124, 400, 370, 291, 362, 281, 13596, 552, 538, 2512, 31927, 831, 3164, 11, 51348, 51348, 4476, 13, 51426, 51426, 400, 264, 700, 3827, 286, 2835, 51576, 51576, 365, 264, 24124, 12, 69, 15104, 43085, 1936, 307, 14687, 488, 3164, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1535578641024503, "compression_ratio": 1.540909090909091, "no_speech_prob": 3.905032372131245e-06}, {"id": 562, "seek": 173128, "start": 1735.3999999999999, "end": 1738.32, "text": " So now what I'm explaining down there with the trail list", "tokens": [50364, 1726, 452, 2281, 13, 50394, 50570, 407, 586, 437, 286, 478, 13468, 760, 456, 365, 264, 9924, 1329, 50716, 50716, 307, 264, 1186, 300, 570, 729, 9102, 366, 27706, 11, 50892, 50892, 291, 393, 380, 764, 16235, 23475, 281, 13596, 552, 13, 51124, 51124, 400, 370, 291, 362, 281, 13596, 552, 538, 2512, 31927, 831, 3164, 11, 51348, 51348, 4476, 13, 51426, 51426, 400, 264, 700, 3827, 286, 2835, 51576, 51576, 365, 264, 24124, 12, 69, 15104, 43085, 1936, 307, 14687, 488, 3164, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1535578641024503, "compression_ratio": 1.540909090909091, "no_speech_prob": 3.905032372131245e-06}, {"id": 563, "seek": 173128, "start": 1738.32, "end": 1741.84, "text": " is the fact that because those variables are discrete,", "tokens": [50364, 1726, 452, 2281, 13, 50394, 50570, 407, 586, 437, 286, 478, 13468, 760, 456, 365, 264, 9924, 1329, 50716, 50716, 307, 264, 1186, 300, 570, 729, 9102, 366, 27706, 11, 50892, 50892, 291, 393, 380, 764, 16235, 23475, 281, 13596, 552, 13, 51124, 51124, 400, 370, 291, 362, 281, 13596, 552, 538, 2512, 31927, 831, 3164, 11, 51348, 51348, 4476, 13, 51426, 51426, 400, 264, 700, 3827, 286, 2835, 51576, 51576, 365, 264, 24124, 12, 69, 15104, 43085, 1936, 307, 14687, 488, 3164, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1535578641024503, "compression_ratio": 1.540909090909091, "no_speech_prob": 3.905032372131245e-06}, {"id": 564, "seek": 173128, "start": 1741.84, "end": 1746.48, "text": " you can't use gradient descent to infer them.", "tokens": [50364, 1726, 452, 2281, 13, 50394, 50570, 407, 586, 437, 286, 478, 13468, 760, 456, 365, 264, 9924, 1329, 50716, 50716, 307, 264, 1186, 300, 570, 729, 9102, 366, 27706, 11, 50892, 50892, 291, 393, 380, 764, 16235, 23475, 281, 13596, 552, 13, 51124, 51124, 400, 370, 291, 362, 281, 13596, 552, 538, 2512, 31927, 831, 3164, 11, 51348, 51348, 4476, 13, 51426, 51426, 400, 264, 700, 3827, 286, 2835, 51576, 51576, 365, 264, 24124, 12, 69, 15104, 43085, 1936, 307, 14687, 488, 3164, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1535578641024503, "compression_ratio": 1.540909090909091, "no_speech_prob": 3.905032372131245e-06}, {"id": 565, "seek": 173128, "start": 1746.48, "end": 1750.96, "text": " And so you have to infer them by combinatorial search,", "tokens": [50364, 1726, 452, 2281, 13, 50394, 50570, 407, 586, 437, 286, 478, 13468, 760, 456, 365, 264, 9924, 1329, 50716, 50716, 307, 264, 1186, 300, 570, 729, 9102, 366, 27706, 11, 50892, 50892, 291, 393, 380, 764, 16235, 23475, 281, 13596, 552, 13, 51124, 51124, 400, 370, 291, 362, 281, 13596, 552, 538, 2512, 31927, 831, 3164, 11, 51348, 51348, 4476, 13, 51426, 51426, 400, 264, 700, 3827, 286, 2835, 51576, 51576, 365, 264, 24124, 12, 69, 15104, 43085, 1936, 307, 14687, 488, 3164, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1535578641024503, "compression_ratio": 1.540909090909091, "no_speech_prob": 3.905032372131245e-06}, {"id": 566, "seek": 173128, "start": 1750.96, "end": 1752.52, "text": " essentially.", "tokens": [50364, 1726, 452, 2281, 13, 50394, 50570, 407, 586, 437, 286, 478, 13468, 760, 456, 365, 264, 9924, 1329, 50716, 50716, 307, 264, 1186, 300, 570, 729, 9102, 366, 27706, 11, 50892, 50892, 291, 393, 380, 764, 16235, 23475, 281, 13596, 552, 13, 51124, 51124, 400, 370, 291, 362, 281, 13596, 552, 538, 2512, 31927, 831, 3164, 11, 51348, 51348, 4476, 13, 51426, 51426, 400, 264, 700, 3827, 286, 2835, 51576, 51576, 365, 264, 24124, 12, 69, 15104, 43085, 1936, 307, 14687, 488, 3164, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1535578641024503, "compression_ratio": 1.540909090909091, "no_speech_prob": 3.905032372131245e-06}, {"id": 567, "seek": 173128, "start": 1752.52, "end": 1755.52, "text": " And the first solution I mentioned", "tokens": [50364, 1726, 452, 2281, 13, 50394, 50570, 407, 586, 437, 286, 478, 13468, 760, 456, 365, 264, 9924, 1329, 50716, 50716, 307, 264, 1186, 300, 570, 729, 9102, 366, 27706, 11, 50892, 50892, 291, 393, 380, 764, 16235, 23475, 281, 13596, 552, 13, 51124, 51124, 400, 370, 291, 362, 281, 13596, 552, 538, 2512, 31927, 831, 3164, 11, 51348, 51348, 4476, 13, 51426, 51426, 400, 264, 700, 3827, 286, 2835, 51576, 51576, 365, 264, 24124, 12, 69, 15104, 43085, 1936, 307, 14687, 488, 3164, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1535578641024503, "compression_ratio": 1.540909090909091, "no_speech_prob": 3.905032372131245e-06}, {"id": 568, "seek": 173128, "start": 1755.52, "end": 1760.04, "text": " with the 96-factor evaluations basically is exhaustive search.", "tokens": [50364, 1726, 452, 2281, 13, 50394, 50570, 407, 586, 437, 286, 478, 13468, 760, 456, 365, 264, 9924, 1329, 50716, 50716, 307, 264, 1186, 300, 570, 729, 9102, 366, 27706, 11, 50892, 50892, 291, 393, 380, 764, 16235, 23475, 281, 13596, 552, 13, 51124, 51124, 400, 370, 291, 362, 281, 13596, 552, 538, 2512, 31927, 831, 3164, 11, 51348, 51348, 4476, 13, 51426, 51426, 400, 264, 700, 3827, 286, 2835, 51576, 51576, 365, 264, 24124, 12, 69, 15104, 43085, 1936, 307, 14687, 488, 3164, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1535578641024503, "compression_ratio": 1.540909090909091, "no_speech_prob": 3.905032372131245e-06}, {"id": 569, "seek": 176004, "start": 1760.04, "end": 1763.52, "text": " Try every combination of z1, z2, y1, y2,", "tokens": [50364, 6526, 633, 6562, 295, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 11, 50538, 50538, 293, 2573, 484, 597, 472, 575, 264, 12437, 2281, 13, 50694, 50694, 583, 264, 1379, 935, 295, 341, 307, 300, 341, 50830, 50830, 307, 5964, 906, 294, 264, 2020, 300, 570, 264, 2281, 22867, 4201, 51022, 51022, 666, 2115, 300, 787, 747, 2090, 1385, 295, 9102, 11, 51148, 51148, 291, 393, 767, 22867, 541, 341, 666, 11, 51288, 51288, 291, 393, 5407, 341, 281, 5006, 264, 31875, 14518, 294, 257, 4295, 11, 51472, 51472, 689, 264, 23767, 294, 341, 4295, 51640, 51640, 366, 25339, 770, 538, 264, 25737, 300, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12915620717916404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 3.821112841251306e-05}, {"id": 570, "seek": 176004, "start": 1763.52, "end": 1766.6399999999999, "text": " and figure out which one has the lowest energy.", "tokens": [50364, 6526, 633, 6562, 295, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 11, 50538, 50538, 293, 2573, 484, 597, 472, 575, 264, 12437, 2281, 13, 50694, 50694, 583, 264, 1379, 935, 295, 341, 307, 300, 341, 50830, 50830, 307, 5964, 906, 294, 264, 2020, 300, 570, 264, 2281, 22867, 4201, 51022, 51022, 666, 2115, 300, 787, 747, 2090, 1385, 295, 9102, 11, 51148, 51148, 291, 393, 767, 22867, 541, 341, 666, 11, 51288, 51288, 291, 393, 5407, 341, 281, 5006, 264, 31875, 14518, 294, 257, 4295, 11, 51472, 51472, 689, 264, 23767, 294, 341, 4295, 51640, 51640, 366, 25339, 770, 538, 264, 25737, 300, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12915620717916404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 3.821112841251306e-05}, {"id": 571, "seek": 176004, "start": 1766.6399999999999, "end": 1769.36, "text": " But the whole point of this is that this", "tokens": [50364, 6526, 633, 6562, 295, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 11, 50538, 50538, 293, 2573, 484, 597, 472, 575, 264, 12437, 2281, 13, 50694, 50694, 583, 264, 1379, 935, 295, 341, 307, 300, 341, 50830, 50830, 307, 5964, 906, 294, 264, 2020, 300, 570, 264, 2281, 22867, 4201, 51022, 51022, 666, 2115, 300, 787, 747, 2090, 1385, 295, 9102, 11, 51148, 51148, 291, 393, 767, 22867, 541, 341, 666, 11, 51288, 51288, 291, 393, 5407, 341, 281, 5006, 264, 31875, 14518, 294, 257, 4295, 11, 51472, 51472, 689, 264, 23767, 294, 341, 4295, 51640, 51640, 366, 25339, 770, 538, 264, 25737, 300, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12915620717916404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 3.821112841251306e-05}, {"id": 572, "seek": 176004, "start": 1769.36, "end": 1773.2, "text": " is wasteful in the sense that because the energy decomposes", "tokens": [50364, 6526, 633, 6562, 295, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 11, 50538, 50538, 293, 2573, 484, 597, 472, 575, 264, 12437, 2281, 13, 50694, 50694, 583, 264, 1379, 935, 295, 341, 307, 300, 341, 50830, 50830, 307, 5964, 906, 294, 264, 2020, 300, 570, 264, 2281, 22867, 4201, 51022, 51022, 666, 2115, 300, 787, 747, 2090, 1385, 295, 9102, 11, 51148, 51148, 291, 393, 767, 22867, 541, 341, 666, 11, 51288, 51288, 291, 393, 5407, 341, 281, 5006, 264, 31875, 14518, 294, 257, 4295, 11, 51472, 51472, 689, 264, 23767, 294, 341, 4295, 51640, 51640, 366, 25339, 770, 538, 264, 25737, 300, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12915620717916404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 3.821112841251306e-05}, {"id": 573, "seek": 176004, "start": 1773.2, "end": 1775.72, "text": " into terms that only take subsets of variables,", "tokens": [50364, 6526, 633, 6562, 295, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 11, 50538, 50538, 293, 2573, 484, 597, 472, 575, 264, 12437, 2281, 13, 50694, 50694, 583, 264, 1379, 935, 295, 341, 307, 300, 341, 50830, 50830, 307, 5964, 906, 294, 264, 2020, 300, 570, 264, 2281, 22867, 4201, 51022, 51022, 666, 2115, 300, 787, 747, 2090, 1385, 295, 9102, 11, 51148, 51148, 291, 393, 767, 22867, 541, 341, 666, 11, 51288, 51288, 291, 393, 5407, 341, 281, 5006, 264, 31875, 14518, 294, 257, 4295, 11, 51472, 51472, 689, 264, 23767, 294, 341, 4295, 51640, 51640, 366, 25339, 770, 538, 264, 25737, 300, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12915620717916404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 3.821112841251306e-05}, {"id": 574, "seek": 176004, "start": 1775.72, "end": 1778.52, "text": " you can actually decompose this into,", "tokens": [50364, 6526, 633, 6562, 295, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 11, 50538, 50538, 293, 2573, 484, 597, 472, 575, 264, 12437, 2281, 13, 50694, 50694, 583, 264, 1379, 935, 295, 341, 307, 300, 341, 50830, 50830, 307, 5964, 906, 294, 264, 2020, 300, 570, 264, 2281, 22867, 4201, 51022, 51022, 666, 2115, 300, 787, 747, 2090, 1385, 295, 9102, 11, 51148, 51148, 291, 393, 767, 22867, 541, 341, 666, 11, 51288, 51288, 291, 393, 5407, 341, 281, 5006, 264, 31875, 14518, 294, 257, 4295, 11, 51472, 51472, 689, 264, 23767, 294, 341, 4295, 51640, 51640, 366, 25339, 770, 538, 264, 25737, 300, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12915620717916404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 3.821112841251306e-05}, {"id": 575, "seek": 176004, "start": 1778.52, "end": 1782.2, "text": " you can reduce this to finding the shortest paths in a graph,", "tokens": [50364, 6526, 633, 6562, 295, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 11, 50538, 50538, 293, 2573, 484, 597, 472, 575, 264, 12437, 2281, 13, 50694, 50694, 583, 264, 1379, 935, 295, 341, 307, 300, 341, 50830, 50830, 307, 5964, 906, 294, 264, 2020, 300, 570, 264, 2281, 22867, 4201, 51022, 51022, 666, 2115, 300, 787, 747, 2090, 1385, 295, 9102, 11, 51148, 51148, 291, 393, 767, 22867, 541, 341, 666, 11, 51288, 51288, 291, 393, 5407, 341, 281, 5006, 264, 31875, 14518, 294, 257, 4295, 11, 51472, 51472, 689, 264, 23767, 294, 341, 4295, 51640, 51640, 366, 25339, 770, 538, 264, 25737, 300, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12915620717916404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 3.821112841251306e-05}, {"id": 576, "seek": 176004, "start": 1782.2, "end": 1785.56, "text": " where the transitions in this graph", "tokens": [50364, 6526, 633, 6562, 295, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 11, 50538, 50538, 293, 2573, 484, 597, 472, 575, 264, 12437, 2281, 13, 50694, 50694, 583, 264, 1379, 935, 295, 341, 307, 300, 341, 50830, 50830, 307, 5964, 906, 294, 264, 2020, 300, 570, 264, 2281, 22867, 4201, 51022, 51022, 666, 2115, 300, 787, 747, 2090, 1385, 295, 9102, 11, 51148, 51148, 291, 393, 767, 22867, 541, 341, 666, 11, 51288, 51288, 291, 393, 5407, 341, 281, 5006, 264, 31875, 14518, 294, 257, 4295, 11, 51472, 51472, 689, 264, 23767, 294, 341, 4295, 51640, 51640, 366, 25339, 770, 538, 264, 25737, 300, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12915620717916404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 3.821112841251306e-05}, {"id": 577, "seek": 176004, "start": 1785.56, "end": 1788.52, "text": " are annotated by the energies that", "tokens": [50364, 6526, 633, 6562, 295, 710, 16, 11, 710, 17, 11, 288, 16, 11, 288, 17, 11, 50538, 50538, 293, 2573, 484, 597, 472, 575, 264, 12437, 2281, 13, 50694, 50694, 583, 264, 1379, 935, 295, 341, 307, 300, 341, 50830, 50830, 307, 5964, 906, 294, 264, 2020, 300, 570, 264, 2281, 22867, 4201, 51022, 51022, 666, 2115, 300, 787, 747, 2090, 1385, 295, 9102, 11, 51148, 51148, 291, 393, 767, 22867, 541, 341, 666, 11, 51288, 51288, 291, 393, 5407, 341, 281, 5006, 264, 31875, 14518, 294, 257, 4295, 11, 51472, 51472, 689, 264, 23767, 294, 341, 4295, 51640, 51640, 366, 25339, 770, 538, 264, 25737, 300, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12915620717916404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 3.821112841251306e-05}, {"id": 578, "seek": 178852, "start": 1788.52, "end": 1792.8, "text": " correspond to the value of the variables of the two", "tokens": [50364, 6805, 281, 264, 2158, 295, 264, 9102, 295, 264, 732, 50578, 50578, 11760, 13891, 13, 50720, 50720, 823, 11, 341, 307, 257, 4748, 544, 2674, 1254, 50836, 50836, 295, 437, 286, 1907, 291, 466, 3071, 13, 51002, 51002, 407, 341, 2316, 510, 365, 264, 8546, 565, 12, 86, 424, 3759, 51178, 51178, 307, 588, 709, 264, 912, 13, 51328, 51328, 440, 710, 16, 11, 710, 17, 510, 366, 1936, 264, 14518, 294, 264, 8546, 565, 51482, 51482, 21993, 10088, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.17649010249546596, "compression_ratio": 1.5602094240837696, "no_speech_prob": 3.7264580896589905e-06}, {"id": 579, "seek": 178852, "start": 1792.8, "end": 1795.6399999999999, "text": " corresponding nodes.", "tokens": [50364, 6805, 281, 264, 2158, 295, 264, 9102, 295, 264, 732, 50578, 50578, 11760, 13891, 13, 50720, 50720, 823, 11, 341, 307, 257, 4748, 544, 2674, 1254, 50836, 50836, 295, 437, 286, 1907, 291, 466, 3071, 13, 51002, 51002, 407, 341, 2316, 510, 365, 264, 8546, 565, 12, 86, 424, 3759, 51178, 51178, 307, 588, 709, 264, 912, 13, 51328, 51328, 440, 710, 16, 11, 710, 17, 510, 366, 1936, 264, 14518, 294, 264, 8546, 565, 51482, 51482, 21993, 10088, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.17649010249546596, "compression_ratio": 1.5602094240837696, "no_speech_prob": 3.7264580896589905e-06}, {"id": 580, "seek": 178852, "start": 1795.6399999999999, "end": 1797.96, "text": " Now, this is a slightly more general form", "tokens": [50364, 6805, 281, 264, 2158, 295, 264, 9102, 295, 264, 732, 50578, 50578, 11760, 13891, 13, 50720, 50720, 823, 11, 341, 307, 257, 4748, 544, 2674, 1254, 50836, 50836, 295, 437, 286, 1907, 291, 466, 3071, 13, 51002, 51002, 407, 341, 2316, 510, 365, 264, 8546, 565, 12, 86, 424, 3759, 51178, 51178, 307, 588, 709, 264, 912, 13, 51328, 51328, 440, 710, 16, 11, 710, 17, 510, 366, 1936, 264, 14518, 294, 264, 8546, 565, 51482, 51482, 21993, 10088, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.17649010249546596, "compression_ratio": 1.5602094240837696, "no_speech_prob": 3.7264580896589905e-06}, {"id": 581, "seek": 178852, "start": 1797.96, "end": 1801.28, "text": " of what I told you about earlier.", "tokens": [50364, 6805, 281, 264, 2158, 295, 264, 9102, 295, 264, 732, 50578, 50578, 11760, 13891, 13, 50720, 50720, 823, 11, 341, 307, 257, 4748, 544, 2674, 1254, 50836, 50836, 295, 437, 286, 1907, 291, 466, 3071, 13, 51002, 51002, 407, 341, 2316, 510, 365, 264, 8546, 565, 12, 86, 424, 3759, 51178, 51178, 307, 588, 709, 264, 912, 13, 51328, 51328, 440, 710, 16, 11, 710, 17, 510, 366, 1936, 264, 14518, 294, 264, 8546, 565, 51482, 51482, 21993, 10088, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.17649010249546596, "compression_ratio": 1.5602094240837696, "no_speech_prob": 3.7264580896589905e-06}, {"id": 582, "seek": 178852, "start": 1801.28, "end": 1804.8, "text": " So this model here with the dynamic time-wrapping", "tokens": [50364, 6805, 281, 264, 2158, 295, 264, 9102, 295, 264, 732, 50578, 50578, 11760, 13891, 13, 50720, 50720, 823, 11, 341, 307, 257, 4748, 544, 2674, 1254, 50836, 50836, 295, 437, 286, 1907, 291, 466, 3071, 13, 51002, 51002, 407, 341, 2316, 510, 365, 264, 8546, 565, 12, 86, 424, 3759, 51178, 51178, 307, 588, 709, 264, 912, 13, 51328, 51328, 440, 710, 16, 11, 710, 17, 510, 366, 1936, 264, 14518, 294, 264, 8546, 565, 51482, 51482, 21993, 10088, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.17649010249546596, "compression_ratio": 1.5602094240837696, "no_speech_prob": 3.7264580896589905e-06}, {"id": 583, "seek": 178852, "start": 1804.8, "end": 1807.8, "text": " is very much the same.", "tokens": [50364, 6805, 281, 264, 2158, 295, 264, 9102, 295, 264, 732, 50578, 50578, 11760, 13891, 13, 50720, 50720, 823, 11, 341, 307, 257, 4748, 544, 2674, 1254, 50836, 50836, 295, 437, 286, 1907, 291, 466, 3071, 13, 51002, 51002, 407, 341, 2316, 510, 365, 264, 8546, 565, 12, 86, 424, 3759, 51178, 51178, 307, 588, 709, 264, 912, 13, 51328, 51328, 440, 710, 16, 11, 710, 17, 510, 366, 1936, 264, 14518, 294, 264, 8546, 565, 51482, 51482, 21993, 10088, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.17649010249546596, "compression_ratio": 1.5602094240837696, "no_speech_prob": 3.7264580896589905e-06}, {"id": 584, "seek": 178852, "start": 1807.8, "end": 1810.8799999999999, "text": " The z1, z2 here are basically the paths in the dynamic time", "tokens": [50364, 6805, 281, 264, 2158, 295, 264, 9102, 295, 264, 732, 50578, 50578, 11760, 13891, 13, 50720, 50720, 823, 11, 341, 307, 257, 4748, 544, 2674, 1254, 50836, 50836, 295, 437, 286, 1907, 291, 466, 3071, 13, 51002, 51002, 407, 341, 2316, 510, 365, 264, 8546, 565, 12, 86, 424, 3759, 51178, 51178, 307, 588, 709, 264, 912, 13, 51328, 51328, 440, 710, 16, 11, 710, 17, 510, 366, 1936, 264, 14518, 294, 264, 8546, 565, 51482, 51482, 21993, 10088, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.17649010249546596, "compression_ratio": 1.5602094240837696, "no_speech_prob": 3.7264580896589905e-06}, {"id": 585, "seek": 178852, "start": 1810.8799999999999, "end": 1814.68, "text": " wrapping module.", "tokens": [50364, 6805, 281, 264, 2158, 295, 264, 9102, 295, 264, 732, 50578, 50578, 11760, 13891, 13, 50720, 50720, 823, 11, 341, 307, 257, 4748, 544, 2674, 1254, 50836, 50836, 295, 437, 286, 1907, 291, 466, 3071, 13, 51002, 51002, 407, 341, 2316, 510, 365, 264, 8546, 565, 12, 86, 424, 3759, 51178, 51178, 307, 588, 709, 264, 912, 13, 51328, 51328, 440, 710, 16, 11, 710, 17, 510, 366, 1936, 264, 14518, 294, 264, 8546, 565, 51482, 51482, 21993, 10088, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.17649010249546596, "compression_ratio": 1.5602094240837696, "no_speech_prob": 3.7264580896589905e-06}, {"id": 586, "seek": 181468, "start": 1814.68, "end": 1819.16, "text": " The y is which of the word template matches.", "tokens": [50364, 440, 288, 307, 597, 295, 264, 1349, 12379, 10676, 13, 50588, 50588, 400, 264, 3097, 14689, 294, 445, 884, 16235, 23475, 50766, 50766, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50880, 50880, 293, 264, 2281, 295, 264, 18424, 1867, 4833, 11, 51040, 51040, 1228, 512, 4470, 2445, 11, 597, 286, 1856, 2693, 494, 66, 2587, 51186, 51186, 412, 264, 1623, 13, 51258, 51258, 8419, 11, 562, 291, 584, 300, 291, 434, 5006, 264, 31875, 51452, 51452, 3100, 11, 291, 434, 1566, 300, 264, 4560, 1296, 13891, 51576, 51576, 307, 264, 2281, 1296, 264, 13891, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1260314412636332, "compression_ratio": 1.7339055793991416, "no_speech_prob": 2.141524055332411e-05}, {"id": 587, "seek": 181468, "start": 1819.16, "end": 1822.72, "text": " And the training consists in just doing gradient descent", "tokens": [50364, 440, 288, 307, 597, 295, 264, 1349, 12379, 10676, 13, 50588, 50588, 400, 264, 3097, 14689, 294, 445, 884, 16235, 23475, 50766, 50766, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50880, 50880, 293, 264, 2281, 295, 264, 18424, 1867, 4833, 11, 51040, 51040, 1228, 512, 4470, 2445, 11, 597, 286, 1856, 2693, 494, 66, 2587, 51186, 51186, 412, 264, 1623, 13, 51258, 51258, 8419, 11, 562, 291, 584, 300, 291, 434, 5006, 264, 31875, 51452, 51452, 3100, 11, 291, 434, 1566, 300, 264, 4560, 1296, 13891, 51576, 51576, 307, 264, 2281, 1296, 264, 13891, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1260314412636332, "compression_ratio": 1.7339055793991416, "no_speech_prob": 2.141524055332411e-05}, {"id": 588, "seek": 181468, "start": 1822.72, "end": 1825.0, "text": " to make the energy of the correct answer small", "tokens": [50364, 440, 288, 307, 597, 295, 264, 1349, 12379, 10676, 13, 50588, 50588, 400, 264, 3097, 14689, 294, 445, 884, 16235, 23475, 50766, 50766, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50880, 50880, 293, 264, 2281, 295, 264, 18424, 1867, 4833, 11, 51040, 51040, 1228, 512, 4470, 2445, 11, 597, 286, 1856, 2693, 494, 66, 2587, 51186, 51186, 412, 264, 1623, 13, 51258, 51258, 8419, 11, 562, 291, 584, 300, 291, 434, 5006, 264, 31875, 51452, 51452, 3100, 11, 291, 434, 1566, 300, 264, 4560, 1296, 13891, 51576, 51576, 307, 264, 2281, 1296, 264, 13891, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1260314412636332, "compression_ratio": 1.7339055793991416, "no_speech_prob": 2.141524055332411e-05}, {"id": 589, "seek": 181468, "start": 1825.0, "end": 1828.2, "text": " and the energy of the incorrect answer larger,", "tokens": [50364, 440, 288, 307, 597, 295, 264, 1349, 12379, 10676, 13, 50588, 50588, 400, 264, 3097, 14689, 294, 445, 884, 16235, 23475, 50766, 50766, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50880, 50880, 293, 264, 2281, 295, 264, 18424, 1867, 4833, 11, 51040, 51040, 1228, 512, 4470, 2445, 11, 597, 286, 1856, 2693, 494, 66, 2587, 51186, 51186, 412, 264, 1623, 13, 51258, 51258, 8419, 11, 562, 291, 584, 300, 291, 434, 5006, 264, 31875, 51452, 51452, 3100, 11, 291, 434, 1566, 300, 264, 4560, 1296, 13891, 51576, 51576, 307, 264, 2281, 1296, 264, 13891, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1260314412636332, "compression_ratio": 1.7339055793991416, "no_speech_prob": 2.141524055332411e-05}, {"id": 590, "seek": 181468, "start": 1828.2, "end": 1831.1200000000001, "text": " using some loss function, which I leave unspecified", "tokens": [50364, 440, 288, 307, 597, 295, 264, 1349, 12379, 10676, 13, 50588, 50588, 400, 264, 3097, 14689, 294, 445, 884, 16235, 23475, 50766, 50766, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50880, 50880, 293, 264, 2281, 295, 264, 18424, 1867, 4833, 11, 51040, 51040, 1228, 512, 4470, 2445, 11, 597, 286, 1856, 2693, 494, 66, 2587, 51186, 51186, 412, 264, 1623, 13, 51258, 51258, 8419, 11, 562, 291, 584, 300, 291, 434, 5006, 264, 31875, 51452, 51452, 3100, 11, 291, 434, 1566, 300, 264, 4560, 1296, 13891, 51576, 51576, 307, 264, 2281, 1296, 264, 13891, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1260314412636332, "compression_ratio": 1.7339055793991416, "no_speech_prob": 2.141524055332411e-05}, {"id": 591, "seek": 181468, "start": 1831.1200000000001, "end": 1832.5600000000002, "text": " at the moment.", "tokens": [50364, 440, 288, 307, 597, 295, 264, 1349, 12379, 10676, 13, 50588, 50588, 400, 264, 3097, 14689, 294, 445, 884, 16235, 23475, 50766, 50766, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50880, 50880, 293, 264, 2281, 295, 264, 18424, 1867, 4833, 11, 51040, 51040, 1228, 512, 4470, 2445, 11, 597, 286, 1856, 2693, 494, 66, 2587, 51186, 51186, 412, 264, 1623, 13, 51258, 51258, 8419, 11, 562, 291, 584, 300, 291, 434, 5006, 264, 31875, 51452, 51452, 3100, 11, 291, 434, 1566, 300, 264, 4560, 1296, 13891, 51576, 51576, 307, 264, 2281, 1296, 264, 13891, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1260314412636332, "compression_ratio": 1.7339055793991416, "no_speech_prob": 2.141524055332411e-05}, {"id": 592, "seek": 181468, "start": 1832.5600000000002, "end": 1836.44, "text": " Professor, when you say that you're finding the shortest", "tokens": [50364, 440, 288, 307, 597, 295, 264, 1349, 12379, 10676, 13, 50588, 50588, 400, 264, 3097, 14689, 294, 445, 884, 16235, 23475, 50766, 50766, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50880, 50880, 293, 264, 2281, 295, 264, 18424, 1867, 4833, 11, 51040, 51040, 1228, 512, 4470, 2445, 11, 597, 286, 1856, 2693, 494, 66, 2587, 51186, 51186, 412, 264, 1623, 13, 51258, 51258, 8419, 11, 562, 291, 584, 300, 291, 434, 5006, 264, 31875, 51452, 51452, 3100, 11, 291, 434, 1566, 300, 264, 4560, 1296, 13891, 51576, 51576, 307, 264, 2281, 1296, 264, 13891, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1260314412636332, "compression_ratio": 1.7339055793991416, "no_speech_prob": 2.141524055332411e-05}, {"id": 593, "seek": 181468, "start": 1836.44, "end": 1838.92, "text": " path, you're saying that the distance between nodes", "tokens": [50364, 440, 288, 307, 597, 295, 264, 1349, 12379, 10676, 13, 50588, 50588, 400, 264, 3097, 14689, 294, 445, 884, 16235, 23475, 50766, 50766, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50880, 50880, 293, 264, 2281, 295, 264, 18424, 1867, 4833, 11, 51040, 51040, 1228, 512, 4470, 2445, 11, 597, 286, 1856, 2693, 494, 66, 2587, 51186, 51186, 412, 264, 1623, 13, 51258, 51258, 8419, 11, 562, 291, 584, 300, 291, 434, 5006, 264, 31875, 51452, 51452, 3100, 11, 291, 434, 1566, 300, 264, 4560, 1296, 13891, 51576, 51576, 307, 264, 2281, 1296, 264, 13891, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1260314412636332, "compression_ratio": 1.7339055793991416, "no_speech_prob": 2.141524055332411e-05}, {"id": 594, "seek": 181468, "start": 1838.92, "end": 1841.68, "text": " is the energy between the nodes?", "tokens": [50364, 440, 288, 307, 597, 295, 264, 1349, 12379, 10676, 13, 50588, 50588, 400, 264, 3097, 14689, 294, 445, 884, 16235, 23475, 50766, 50766, 281, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 50880, 50880, 293, 264, 2281, 295, 264, 18424, 1867, 4833, 11, 51040, 51040, 1228, 512, 4470, 2445, 11, 597, 286, 1856, 2693, 494, 66, 2587, 51186, 51186, 412, 264, 1623, 13, 51258, 51258, 8419, 11, 562, 291, 584, 300, 291, 434, 5006, 264, 31875, 51452, 51452, 3100, 11, 291, 434, 1566, 300, 264, 4560, 1296, 13891, 51576, 51576, 307, 264, 2281, 1296, 264, 13891, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1260314412636332, "compression_ratio": 1.7339055793991416, "no_speech_prob": 2.141524055332411e-05}, {"id": 595, "seek": 184168, "start": 1841.68, "end": 1845.76, "text": " The shortest path is the path that", "tokens": [50364, 440, 31875, 3100, 307, 264, 3100, 300, 50568, 50568, 575, 264, 16998, 2408, 295, 2115, 2051, 264, 8819, 13, 50886, 50886, 407, 1184, 4691, 510, 307, 12658, 538, 364, 2281, 13, 51058, 51058, 407, 337, 1365, 11, 341, 4691, 510, 307, 51128, 51128, 12658, 538, 264, 2281, 295, 264, 1433, 272, 562, 710, 16, 6915, 1958, 51554, 51554, 293, 710, 17, 6915, 502, 13, 51616, 51772], "temperature": 0.0, "avg_logprob": -0.13092763283673456, "compression_ratio": 1.6028368794326242, "no_speech_prob": 3.533229391905479e-05}, {"id": 596, "seek": 184168, "start": 1845.76, "end": 1852.1200000000001, "text": " has the smallest sum of terms along the edges.", "tokens": [50364, 440, 31875, 3100, 307, 264, 3100, 300, 50568, 50568, 575, 264, 16998, 2408, 295, 2115, 2051, 264, 8819, 13, 50886, 50886, 407, 1184, 4691, 510, 307, 12658, 538, 364, 2281, 13, 51058, 51058, 407, 337, 1365, 11, 341, 4691, 510, 307, 51128, 51128, 12658, 538, 264, 2281, 295, 264, 1433, 272, 562, 710, 16, 6915, 1958, 51554, 51554, 293, 710, 17, 6915, 502, 13, 51616, 51772], "temperature": 0.0, "avg_logprob": -0.13092763283673456, "compression_ratio": 1.6028368794326242, "no_speech_prob": 3.533229391905479e-05}, {"id": 597, "seek": 184168, "start": 1852.1200000000001, "end": 1855.5600000000002, "text": " So each edge here is marked by an energy.", "tokens": [50364, 440, 31875, 3100, 307, 264, 3100, 300, 50568, 50568, 575, 264, 16998, 2408, 295, 2115, 2051, 264, 8819, 13, 50886, 50886, 407, 1184, 4691, 510, 307, 12658, 538, 364, 2281, 13, 51058, 51058, 407, 337, 1365, 11, 341, 4691, 510, 307, 51128, 51128, 12658, 538, 264, 2281, 295, 264, 1433, 272, 562, 710, 16, 6915, 1958, 51554, 51554, 293, 710, 17, 6915, 502, 13, 51616, 51772], "temperature": 0.0, "avg_logprob": -0.13092763283673456, "compression_ratio": 1.6028368794326242, "no_speech_prob": 3.533229391905479e-05}, {"id": 598, "seek": 184168, "start": 1855.5600000000002, "end": 1856.96, "text": " So for example, this edge here is", "tokens": [50364, 440, 31875, 3100, 307, 264, 3100, 300, 50568, 50568, 575, 264, 16998, 2408, 295, 2115, 2051, 264, 8819, 13, 50886, 50886, 407, 1184, 4691, 510, 307, 12658, 538, 364, 2281, 13, 51058, 51058, 407, 337, 1365, 11, 341, 4691, 510, 307, 51128, 51128, 12658, 538, 264, 2281, 295, 264, 1433, 272, 562, 710, 16, 6915, 1958, 51554, 51554, 293, 710, 17, 6915, 502, 13, 51616, 51772], "temperature": 0.0, "avg_logprob": -0.13092763283673456, "compression_ratio": 1.6028368794326242, "no_speech_prob": 3.533229391905479e-05}, {"id": 599, "seek": 184168, "start": 1856.96, "end": 1865.48, "text": " marked by the energy of the term b when z1 equals 0", "tokens": [50364, 440, 31875, 3100, 307, 264, 3100, 300, 50568, 50568, 575, 264, 16998, 2408, 295, 2115, 2051, 264, 8819, 13, 50886, 50886, 407, 1184, 4691, 510, 307, 12658, 538, 364, 2281, 13, 51058, 51058, 407, 337, 1365, 11, 341, 4691, 510, 307, 51128, 51128, 12658, 538, 264, 2281, 295, 264, 1433, 272, 562, 710, 16, 6915, 1958, 51554, 51554, 293, 710, 17, 6915, 502, 13, 51616, 51772], "temperature": 0.0, "avg_logprob": -0.13092763283673456, "compression_ratio": 1.6028368794326242, "no_speech_prob": 3.533229391905479e-05}, {"id": 600, "seek": 184168, "start": 1865.48, "end": 1866.72, "text": " and z2 equals 1.", "tokens": [50364, 440, 31875, 3100, 307, 264, 3100, 300, 50568, 50568, 575, 264, 16998, 2408, 295, 2115, 2051, 264, 8819, 13, 50886, 50886, 407, 1184, 4691, 510, 307, 12658, 538, 364, 2281, 13, 51058, 51058, 407, 337, 1365, 11, 341, 4691, 510, 307, 51128, 51128, 12658, 538, 264, 2281, 295, 264, 1433, 272, 562, 710, 16, 6915, 1958, 51554, 51554, 293, 710, 17, 6915, 502, 13, 51616, 51772], "temperature": 0.0, "avg_logprob": -0.13092763283673456, "compression_ratio": 1.6028368794326242, "no_speech_prob": 3.533229391905479e-05}, {"id": 601, "seek": 186672, "start": 1866.72, "end": 1871.4, "text": " So if I take this path, I'm going to pay that energy.", "tokens": [50364, 407, 498, 286, 747, 341, 3100, 11, 286, 478, 516, 281, 1689, 300, 2281, 13, 50598, 50598, 400, 498, 286, 747, 341, 4691, 11, 286, 478, 516, 281, 1689, 300, 2281, 13, 50832, 50832, 400, 370, 5006, 264, 12437, 2281, 11694, 295, 9102, 51032, 51032, 14689, 294, 5006, 264, 3100, 365, 264, 16998, 51246, 51246, 2408, 295, 2158, 322, 264, 8819, 2051, 300, 3100, 13, 51512, 51512, 407, 309, 311, 264, 31875, 3100, 294, 264, 4295, 13, 51590, 51750], "temperature": 0.0, "avg_logprob": -0.2978634068995346, "compression_ratio": 1.784431137724551, "no_speech_prob": 1.834002250689082e-05}, {"id": 602, "seek": 186672, "start": 1871.4, "end": 1876.08, "text": " And if I take this edge, I'm going to pay that energy.", "tokens": [50364, 407, 498, 286, 747, 341, 3100, 11, 286, 478, 516, 281, 1689, 300, 2281, 13, 50598, 50598, 400, 498, 286, 747, 341, 4691, 11, 286, 478, 516, 281, 1689, 300, 2281, 13, 50832, 50832, 400, 370, 5006, 264, 12437, 2281, 11694, 295, 9102, 51032, 51032, 14689, 294, 5006, 264, 3100, 365, 264, 16998, 51246, 51246, 2408, 295, 2158, 322, 264, 8819, 2051, 300, 3100, 13, 51512, 51512, 407, 309, 311, 264, 31875, 3100, 294, 264, 4295, 13, 51590, 51750], "temperature": 0.0, "avg_logprob": -0.2978634068995346, "compression_ratio": 1.784431137724551, "no_speech_prob": 1.834002250689082e-05}, {"id": 603, "seek": 186672, "start": 1876.08, "end": 1880.08, "text": " And so finding the lowest energy configuration of variables", "tokens": [50364, 407, 498, 286, 747, 341, 3100, 11, 286, 478, 516, 281, 1689, 300, 2281, 13, 50598, 50598, 400, 498, 286, 747, 341, 4691, 11, 286, 478, 516, 281, 1689, 300, 2281, 13, 50832, 50832, 400, 370, 5006, 264, 12437, 2281, 11694, 295, 9102, 51032, 51032, 14689, 294, 5006, 264, 3100, 365, 264, 16998, 51246, 51246, 2408, 295, 2158, 322, 264, 8819, 2051, 300, 3100, 13, 51512, 51512, 407, 309, 311, 264, 31875, 3100, 294, 264, 4295, 13, 51590, 51750], "temperature": 0.0, "avg_logprob": -0.2978634068995346, "compression_ratio": 1.784431137724551, "no_speech_prob": 1.834002250689082e-05}, {"id": 604, "seek": 186672, "start": 1880.08, "end": 1884.3600000000001, "text": " consists in finding the path with the smallest", "tokens": [50364, 407, 498, 286, 747, 341, 3100, 11, 286, 478, 516, 281, 1689, 300, 2281, 13, 50598, 50598, 400, 498, 286, 747, 341, 4691, 11, 286, 478, 516, 281, 1689, 300, 2281, 13, 50832, 50832, 400, 370, 5006, 264, 12437, 2281, 11694, 295, 9102, 51032, 51032, 14689, 294, 5006, 264, 3100, 365, 264, 16998, 51246, 51246, 2408, 295, 2158, 322, 264, 8819, 2051, 300, 3100, 13, 51512, 51512, 407, 309, 311, 264, 31875, 3100, 294, 264, 4295, 13, 51590, 51750], "temperature": 0.0, "avg_logprob": -0.2978634068995346, "compression_ratio": 1.784431137724551, "no_speech_prob": 1.834002250689082e-05}, {"id": 605, "seek": 186672, "start": 1884.3600000000001, "end": 1889.68, "text": " sum of value on the edges along that path.", "tokens": [50364, 407, 498, 286, 747, 341, 3100, 11, 286, 478, 516, 281, 1689, 300, 2281, 13, 50598, 50598, 400, 498, 286, 747, 341, 4691, 11, 286, 478, 516, 281, 1689, 300, 2281, 13, 50832, 50832, 400, 370, 5006, 264, 12437, 2281, 11694, 295, 9102, 51032, 51032, 14689, 294, 5006, 264, 3100, 365, 264, 16998, 51246, 51246, 2408, 295, 2158, 322, 264, 8819, 2051, 300, 3100, 13, 51512, 51512, 407, 309, 311, 264, 31875, 3100, 294, 264, 4295, 13, 51590, 51750], "temperature": 0.0, "avg_logprob": -0.2978634068995346, "compression_ratio": 1.784431137724551, "no_speech_prob": 1.834002250689082e-05}, {"id": 606, "seek": 186672, "start": 1889.68, "end": 1891.24, "text": " So it's the shortest path in the graph.", "tokens": [50364, 407, 498, 286, 747, 341, 3100, 11, 286, 478, 516, 281, 1689, 300, 2281, 13, 50598, 50598, 400, 498, 286, 747, 341, 4691, 11, 286, 478, 516, 281, 1689, 300, 2281, 13, 50832, 50832, 400, 370, 5006, 264, 12437, 2281, 11694, 295, 9102, 51032, 51032, 14689, 294, 5006, 264, 3100, 365, 264, 16998, 51246, 51246, 2408, 295, 2158, 322, 264, 8819, 2051, 300, 3100, 13, 51512, 51512, 407, 309, 311, 264, 31875, 3100, 294, 264, 4295, 13, 51590, 51750], "temperature": 0.0, "avg_logprob": -0.2978634068995346, "compression_ratio": 1.784431137724551, "no_speech_prob": 1.834002250689082e-05}, {"id": 607, "seek": 189124, "start": 1891.24, "end": 1894.52, "text": " Is that clear?", "tokens": [50364, 1119, 300, 1850, 30, 50528, 50528, 865, 11, 300, 1669, 2020, 13, 50582, 50582, 1044, 291, 13, 50620, 50620, 400, 550, 370, 264, 35193, 949, 264, 2211, 9984, 11, 50790, 50790, 729, 366, 35193, 445, 570, 264, 28811, 2564, 307, 4018, 50940, 50940, 2281, 11, 558, 30, 51016, 51016, 1119, 300, 437, 300, 307, 30, 51054, 51054, 865, 11, 300, 311, 558, 13, 51090, 51090, 865, 13, 51116, 51116, 2264, 13, 51140, 51140, 286, 478, 406, 13251, 13, 51290, 51290, 865, 11, 286, 500, 380, 1127, 597, 295, 729, 14518, 309, 307, 13, 51390, 51390, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 51612, 51612, 307, 264, 2281, 295, 264, 3100, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.4920367713735885, "compression_ratio": 1.6651162790697673, "no_speech_prob": 8.663897460792214e-06}, {"id": 608, "seek": 189124, "start": 1894.52, "end": 1895.6, "text": " Yeah, that makes sense.", "tokens": [50364, 1119, 300, 1850, 30, 50528, 50528, 865, 11, 300, 1669, 2020, 13, 50582, 50582, 1044, 291, 13, 50620, 50620, 400, 550, 370, 264, 35193, 949, 264, 2211, 9984, 11, 50790, 50790, 729, 366, 35193, 445, 570, 264, 28811, 2564, 307, 4018, 50940, 50940, 2281, 11, 558, 30, 51016, 51016, 1119, 300, 437, 300, 307, 30, 51054, 51054, 865, 11, 300, 311, 558, 13, 51090, 51090, 865, 13, 51116, 51116, 2264, 13, 51140, 51140, 286, 478, 406, 13251, 13, 51290, 51290, 865, 11, 286, 500, 380, 1127, 597, 295, 729, 14518, 309, 307, 13, 51390, 51390, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 51612, 51612, 307, 264, 2281, 295, 264, 3100, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.4920367713735885, "compression_ratio": 1.6651162790697673, "no_speech_prob": 8.663897460792214e-06}, {"id": 609, "seek": 189124, "start": 1895.6, "end": 1896.36, "text": " Thank you.", "tokens": [50364, 1119, 300, 1850, 30, 50528, 50528, 865, 11, 300, 1669, 2020, 13, 50582, 50582, 1044, 291, 13, 50620, 50620, 400, 550, 370, 264, 35193, 949, 264, 2211, 9984, 11, 50790, 50790, 729, 366, 35193, 445, 570, 264, 28811, 2564, 307, 4018, 50940, 50940, 2281, 11, 558, 30, 51016, 51016, 1119, 300, 437, 300, 307, 30, 51054, 51054, 865, 11, 300, 311, 558, 13, 51090, 51090, 865, 13, 51116, 51116, 2264, 13, 51140, 51140, 286, 478, 406, 13251, 13, 51290, 51290, 865, 11, 286, 500, 380, 1127, 597, 295, 729, 14518, 309, 307, 13, 51390, 51390, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 51612, 51612, 307, 264, 2281, 295, 264, 3100, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.4920367713735885, "compression_ratio": 1.6651162790697673, "no_speech_prob": 8.663897460792214e-06}, {"id": 610, "seek": 189124, "start": 1896.36, "end": 1899.76, "text": " And then so the zeros before the black node,", "tokens": [50364, 1119, 300, 1850, 30, 50528, 50528, 865, 11, 300, 1669, 2020, 13, 50582, 50582, 1044, 291, 13, 50620, 50620, 400, 550, 370, 264, 35193, 949, 264, 2211, 9984, 11, 50790, 50790, 729, 366, 35193, 445, 570, 264, 28811, 2564, 307, 4018, 50940, 50940, 2281, 11, 558, 30, 51016, 51016, 1119, 300, 437, 300, 307, 30, 51054, 51054, 865, 11, 300, 311, 558, 13, 51090, 51090, 865, 13, 51116, 51116, 2264, 13, 51140, 51140, 286, 478, 406, 13251, 13, 51290, 51290, 865, 11, 286, 500, 380, 1127, 597, 295, 729, 14518, 309, 307, 13, 51390, 51390, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 51612, 51612, 307, 264, 2281, 295, 264, 3100, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.4920367713735885, "compression_ratio": 1.6651162790697673, "no_speech_prob": 8.663897460792214e-06}, {"id": 611, "seek": 189124, "start": 1899.76, "end": 1902.76, "text": " those are zeros just because the summation itself is zero", "tokens": [50364, 1119, 300, 1850, 30, 50528, 50528, 865, 11, 300, 1669, 2020, 13, 50582, 50582, 1044, 291, 13, 50620, 50620, 400, 550, 370, 264, 35193, 949, 264, 2211, 9984, 11, 50790, 50790, 729, 366, 35193, 445, 570, 264, 28811, 2564, 307, 4018, 50940, 50940, 2281, 11, 558, 30, 51016, 51016, 1119, 300, 437, 300, 307, 30, 51054, 51054, 865, 11, 300, 311, 558, 13, 51090, 51090, 865, 13, 51116, 51116, 2264, 13, 51140, 51140, 286, 478, 406, 13251, 13, 51290, 51290, 865, 11, 286, 500, 380, 1127, 597, 295, 729, 14518, 309, 307, 13, 51390, 51390, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 51612, 51612, 307, 264, 2281, 295, 264, 3100, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.4920367713735885, "compression_ratio": 1.6651162790697673, "no_speech_prob": 8.663897460792214e-06}, {"id": 612, "seek": 189124, "start": 1902.76, "end": 1904.28, "text": " energy, right?", "tokens": [50364, 1119, 300, 1850, 30, 50528, 50528, 865, 11, 300, 1669, 2020, 13, 50582, 50582, 1044, 291, 13, 50620, 50620, 400, 550, 370, 264, 35193, 949, 264, 2211, 9984, 11, 50790, 50790, 729, 366, 35193, 445, 570, 264, 28811, 2564, 307, 4018, 50940, 50940, 2281, 11, 558, 30, 51016, 51016, 1119, 300, 437, 300, 307, 30, 51054, 51054, 865, 11, 300, 311, 558, 13, 51090, 51090, 865, 13, 51116, 51116, 2264, 13, 51140, 51140, 286, 478, 406, 13251, 13, 51290, 51290, 865, 11, 286, 500, 380, 1127, 597, 295, 729, 14518, 309, 307, 13, 51390, 51390, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 51612, 51612, 307, 264, 2281, 295, 264, 3100, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.4920367713735885, "compression_ratio": 1.6651162790697673, "no_speech_prob": 8.663897460792214e-06}, {"id": 613, "seek": 189124, "start": 1904.28, "end": 1905.04, "text": " Is that what that is?", "tokens": [50364, 1119, 300, 1850, 30, 50528, 50528, 865, 11, 300, 1669, 2020, 13, 50582, 50582, 1044, 291, 13, 50620, 50620, 400, 550, 370, 264, 35193, 949, 264, 2211, 9984, 11, 50790, 50790, 729, 366, 35193, 445, 570, 264, 28811, 2564, 307, 4018, 50940, 50940, 2281, 11, 558, 30, 51016, 51016, 1119, 300, 437, 300, 307, 30, 51054, 51054, 865, 11, 300, 311, 558, 13, 51090, 51090, 865, 13, 51116, 51116, 2264, 13, 51140, 51140, 286, 478, 406, 13251, 13, 51290, 51290, 865, 11, 286, 500, 380, 1127, 597, 295, 729, 14518, 309, 307, 13, 51390, 51390, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 51612, 51612, 307, 264, 2281, 295, 264, 3100, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.4920367713735885, "compression_ratio": 1.6651162790697673, "no_speech_prob": 8.663897460792214e-06}, {"id": 614, "seek": 189124, "start": 1905.04, "end": 1905.76, "text": " Yeah, that's right.", "tokens": [50364, 1119, 300, 1850, 30, 50528, 50528, 865, 11, 300, 1669, 2020, 13, 50582, 50582, 1044, 291, 13, 50620, 50620, 400, 550, 370, 264, 35193, 949, 264, 2211, 9984, 11, 50790, 50790, 729, 366, 35193, 445, 570, 264, 28811, 2564, 307, 4018, 50940, 50940, 2281, 11, 558, 30, 51016, 51016, 1119, 300, 437, 300, 307, 30, 51054, 51054, 865, 11, 300, 311, 558, 13, 51090, 51090, 865, 13, 51116, 51116, 2264, 13, 51140, 51140, 286, 478, 406, 13251, 13, 51290, 51290, 865, 11, 286, 500, 380, 1127, 597, 295, 729, 14518, 309, 307, 13, 51390, 51390, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 51612, 51612, 307, 264, 2281, 295, 264, 3100, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.4920367713735885, "compression_ratio": 1.6651162790697673, "no_speech_prob": 8.663897460792214e-06}, {"id": 615, "seek": 189124, "start": 1905.76, "end": 1906.28, "text": " Yeah.", "tokens": [50364, 1119, 300, 1850, 30, 50528, 50528, 865, 11, 300, 1669, 2020, 13, 50582, 50582, 1044, 291, 13, 50620, 50620, 400, 550, 370, 264, 35193, 949, 264, 2211, 9984, 11, 50790, 50790, 729, 366, 35193, 445, 570, 264, 28811, 2564, 307, 4018, 50940, 50940, 2281, 11, 558, 30, 51016, 51016, 1119, 300, 437, 300, 307, 30, 51054, 51054, 865, 11, 300, 311, 558, 13, 51090, 51090, 865, 13, 51116, 51116, 2264, 13, 51140, 51140, 286, 478, 406, 13251, 13, 51290, 51290, 865, 11, 286, 500, 380, 1127, 597, 295, 729, 14518, 309, 307, 13, 51390, 51390, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 51612, 51612, 307, 264, 2281, 295, 264, 3100, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.4920367713735885, "compression_ratio": 1.6651162790697673, "no_speech_prob": 8.663897460792214e-06}, {"id": 616, "seek": 189124, "start": 1906.28, "end": 1906.76, "text": " OK.", "tokens": [50364, 1119, 300, 1850, 30, 50528, 50528, 865, 11, 300, 1669, 2020, 13, 50582, 50582, 1044, 291, 13, 50620, 50620, 400, 550, 370, 264, 35193, 949, 264, 2211, 9984, 11, 50790, 50790, 729, 366, 35193, 445, 570, 264, 28811, 2564, 307, 4018, 50940, 50940, 2281, 11, 558, 30, 51016, 51016, 1119, 300, 437, 300, 307, 30, 51054, 51054, 865, 11, 300, 311, 558, 13, 51090, 51090, 865, 13, 51116, 51116, 2264, 13, 51140, 51140, 286, 478, 406, 13251, 13, 51290, 51290, 865, 11, 286, 500, 380, 1127, 597, 295, 729, 14518, 309, 307, 13, 51390, 51390, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 51612, 51612, 307, 264, 2281, 295, 264, 3100, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.4920367713735885, "compression_ratio": 1.6651162790697673, "no_speech_prob": 8.663897460792214e-06}, {"id": 617, "seek": 189124, "start": 1906.76, "end": 1909.76, "text": " I'm not counting.", "tokens": [50364, 1119, 300, 1850, 30, 50528, 50528, 865, 11, 300, 1669, 2020, 13, 50582, 50582, 1044, 291, 13, 50620, 50620, 400, 550, 370, 264, 35193, 949, 264, 2211, 9984, 11, 50790, 50790, 729, 366, 35193, 445, 570, 264, 28811, 2564, 307, 4018, 50940, 50940, 2281, 11, 558, 30, 51016, 51016, 1119, 300, 437, 300, 307, 30, 51054, 51054, 865, 11, 300, 311, 558, 13, 51090, 51090, 865, 13, 51116, 51116, 2264, 13, 51140, 51140, 286, 478, 406, 13251, 13, 51290, 51290, 865, 11, 286, 500, 380, 1127, 597, 295, 729, 14518, 309, 307, 13, 51390, 51390, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 51612, 51612, 307, 264, 2281, 295, 264, 3100, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.4920367713735885, "compression_ratio": 1.6651162790697673, "no_speech_prob": 8.663897460792214e-06}, {"id": 618, "seek": 189124, "start": 1909.76, "end": 1911.76, "text": " Yeah, I don't care which of those paths it is.", "tokens": [50364, 1119, 300, 1850, 30, 50528, 50528, 865, 11, 300, 1669, 2020, 13, 50582, 50582, 1044, 291, 13, 50620, 50620, 400, 550, 370, 264, 35193, 949, 264, 2211, 9984, 11, 50790, 50790, 729, 366, 35193, 445, 570, 264, 28811, 2564, 307, 4018, 50940, 50940, 2281, 11, 558, 30, 51016, 51016, 1119, 300, 437, 300, 307, 30, 51054, 51054, 865, 11, 300, 311, 558, 13, 51090, 51090, 865, 13, 51116, 51116, 2264, 13, 51140, 51140, 286, 478, 406, 13251, 13, 51290, 51290, 865, 11, 286, 500, 380, 1127, 597, 295, 729, 14518, 309, 307, 13, 51390, 51390, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 51612, 51612, 307, 264, 2281, 295, 264, 3100, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.4920367713735885, "compression_ratio": 1.6651162790697673, "no_speech_prob": 8.663897460792214e-06}, {"id": 619, "seek": 189124, "start": 1911.76, "end": 1916.2, "text": " I don't have an energy term here for like what", "tokens": [50364, 1119, 300, 1850, 30, 50528, 50528, 865, 11, 300, 1669, 2020, 13, 50582, 50582, 1044, 291, 13, 50620, 50620, 400, 550, 370, 264, 35193, 949, 264, 2211, 9984, 11, 50790, 50790, 729, 366, 35193, 445, 570, 264, 28811, 2564, 307, 4018, 50940, 50940, 2281, 11, 558, 30, 51016, 51016, 1119, 300, 437, 300, 307, 30, 51054, 51054, 865, 11, 300, 311, 558, 13, 51090, 51090, 865, 13, 51116, 51116, 2264, 13, 51140, 51140, 286, 478, 406, 13251, 13, 51290, 51290, 865, 11, 286, 500, 380, 1127, 597, 295, 729, 14518, 309, 307, 13, 51390, 51390, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 51612, 51612, 307, 264, 2281, 295, 264, 3100, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.4920367713735885, "compression_ratio": 1.6651162790697673, "no_speech_prob": 8.663897460792214e-06}, {"id": 620, "seek": 189124, "start": 1916.2, "end": 1917.76, "text": " is the energy of the path.", "tokens": [50364, 1119, 300, 1850, 30, 50528, 50528, 865, 11, 300, 1669, 2020, 13, 50582, 50582, 1044, 291, 13, 50620, 50620, 400, 550, 370, 264, 35193, 949, 264, 2211, 9984, 11, 50790, 50790, 729, 366, 35193, 445, 570, 264, 28811, 2564, 307, 4018, 50940, 50940, 2281, 11, 558, 30, 51016, 51016, 1119, 300, 437, 300, 307, 30, 51054, 51054, 865, 11, 300, 311, 558, 13, 51090, 51090, 865, 13, 51116, 51116, 2264, 13, 51140, 51140, 286, 478, 406, 13251, 13, 51290, 51290, 865, 11, 286, 500, 380, 1127, 597, 295, 729, 14518, 309, 307, 13, 51390, 51390, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 51612, 51612, 307, 264, 2281, 295, 264, 3100, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.4920367713735885, "compression_ratio": 1.6651162790697673, "no_speech_prob": 8.663897460792214e-06}, {"id": 621, "seek": 191776, "start": 1917.76, "end": 1921.44, "text": " I don't have an energy term here for like what's", "tokens": [50364, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 311, 50548, 50548, 264, 2158, 295, 288, 17, 13, 50594, 50594, 407, 498, 286, 632, 364, 2857, 5952, 510, 300, 787, 1890, 288, 17, 11, 50810, 50810, 550, 300, 5952, 576, 1936, 829, 364, 2281, 510, 13, 50960, 51074, 467, 576, 7406, 729, 35193, 13, 51126, 51252, 1779, 30, 51276, 51532, 2264, 13, 51576, 51576, 821, 307, 257, 1168, 510, 1348, 490, 264, 1731, 13, 51696, 51696, 407, 321, 366, 7380, 760, 322, 264, 2281, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.2585462842668806, "compression_ratio": 1.5075376884422111, "no_speech_prob": 5.77158016312751e-06}, {"id": 622, "seek": 191776, "start": 1921.44, "end": 1922.36, "text": " the value of y2.", "tokens": [50364, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 311, 50548, 50548, 264, 2158, 295, 288, 17, 13, 50594, 50594, 407, 498, 286, 632, 364, 2857, 5952, 510, 300, 787, 1890, 288, 17, 11, 50810, 50810, 550, 300, 5952, 576, 1936, 829, 364, 2281, 510, 13, 50960, 51074, 467, 576, 7406, 729, 35193, 13, 51126, 51252, 1779, 30, 51276, 51532, 2264, 13, 51576, 51576, 821, 307, 257, 1168, 510, 1348, 490, 264, 1731, 13, 51696, 51696, 407, 321, 366, 7380, 760, 322, 264, 2281, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.2585462842668806, "compression_ratio": 1.5075376884422111, "no_speech_prob": 5.77158016312751e-06}, {"id": 623, "seek": 191776, "start": 1922.36, "end": 1926.68, "text": " So if I had an extra factor here that only took y2,", "tokens": [50364, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 311, 50548, 50548, 264, 2158, 295, 288, 17, 13, 50594, 50594, 407, 498, 286, 632, 364, 2857, 5952, 510, 300, 787, 1890, 288, 17, 11, 50810, 50810, 550, 300, 5952, 576, 1936, 829, 364, 2281, 510, 13, 50960, 51074, 467, 576, 7406, 729, 35193, 13, 51126, 51252, 1779, 30, 51276, 51532, 2264, 13, 51576, 51576, 821, 307, 257, 1168, 510, 1348, 490, 264, 1731, 13, 51696, 51696, 407, 321, 366, 7380, 760, 322, 264, 2281, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.2585462842668806, "compression_ratio": 1.5075376884422111, "no_speech_prob": 5.77158016312751e-06}, {"id": 624, "seek": 191776, "start": 1926.68, "end": 1929.68, "text": " then that factor would basically put an energy here.", "tokens": [50364, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 311, 50548, 50548, 264, 2158, 295, 288, 17, 13, 50594, 50594, 407, 498, 286, 632, 364, 2857, 5952, 510, 300, 787, 1890, 288, 17, 11, 50810, 50810, 550, 300, 5952, 576, 1936, 829, 364, 2281, 510, 13, 50960, 51074, 467, 576, 7406, 729, 35193, 13, 51126, 51252, 1779, 30, 51276, 51532, 2264, 13, 51576, 51576, 821, 307, 257, 1168, 510, 1348, 490, 264, 1731, 13, 51696, 51696, 407, 321, 366, 7380, 760, 322, 264, 2281, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.2585462842668806, "compression_ratio": 1.5075376884422111, "no_speech_prob": 5.77158016312751e-06}, {"id": 625, "seek": 191776, "start": 1931.96, "end": 1933.0, "text": " It would replace those zeros.", "tokens": [50364, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 311, 50548, 50548, 264, 2158, 295, 288, 17, 13, 50594, 50594, 407, 498, 286, 632, 364, 2857, 5952, 510, 300, 787, 1890, 288, 17, 11, 50810, 50810, 550, 300, 5952, 576, 1936, 829, 364, 2281, 510, 13, 50960, 51074, 467, 576, 7406, 729, 35193, 13, 51126, 51252, 1779, 30, 51276, 51532, 2264, 13, 51576, 51576, 821, 307, 257, 1168, 510, 1348, 490, 264, 1731, 13, 51696, 51696, 407, 321, 366, 7380, 760, 322, 264, 2281, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.2585462842668806, "compression_ratio": 1.5075376884422111, "no_speech_prob": 5.77158016312751e-06}, {"id": 626, "seek": 191776, "start": 1935.52, "end": 1936.0, "text": " Right?", "tokens": [50364, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 311, 50548, 50548, 264, 2158, 295, 288, 17, 13, 50594, 50594, 407, 498, 286, 632, 364, 2857, 5952, 510, 300, 787, 1890, 288, 17, 11, 50810, 50810, 550, 300, 5952, 576, 1936, 829, 364, 2281, 510, 13, 50960, 51074, 467, 576, 7406, 729, 35193, 13, 51126, 51252, 1779, 30, 51276, 51532, 2264, 13, 51576, 51576, 821, 307, 257, 1168, 510, 1348, 490, 264, 1731, 13, 51696, 51696, 407, 321, 366, 7380, 760, 322, 264, 2281, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.2585462842668806, "compression_ratio": 1.5075376884422111, "no_speech_prob": 5.77158016312751e-06}, {"id": 627, "seek": 191776, "start": 1941.12, "end": 1942.0, "text": " OK.", "tokens": [50364, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 311, 50548, 50548, 264, 2158, 295, 288, 17, 13, 50594, 50594, 407, 498, 286, 632, 364, 2857, 5952, 510, 300, 787, 1890, 288, 17, 11, 50810, 50810, 550, 300, 5952, 576, 1936, 829, 364, 2281, 510, 13, 50960, 51074, 467, 576, 7406, 729, 35193, 13, 51126, 51252, 1779, 30, 51276, 51532, 2264, 13, 51576, 51576, 821, 307, 257, 1168, 510, 1348, 490, 264, 1731, 13, 51696, 51696, 407, 321, 366, 7380, 760, 322, 264, 2281, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.2585462842668806, "compression_ratio": 1.5075376884422111, "no_speech_prob": 5.77158016312751e-06}, {"id": 628, "seek": 191776, "start": 1942.0, "end": 1944.4, "text": " There is a question here coming from the students.", "tokens": [50364, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 311, 50548, 50548, 264, 2158, 295, 288, 17, 13, 50594, 50594, 407, 498, 286, 632, 364, 2857, 5952, 510, 300, 787, 1890, 288, 17, 11, 50810, 50810, 550, 300, 5952, 576, 1936, 829, 364, 2281, 510, 13, 50960, 51074, 467, 576, 7406, 729, 35193, 13, 51126, 51252, 1779, 30, 51276, 51532, 2264, 13, 51576, 51576, 821, 307, 257, 1168, 510, 1348, 490, 264, 1731, 13, 51696, 51696, 407, 321, 366, 7380, 760, 322, 264, 2281, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.2585462842668806, "compression_ratio": 1.5075376884422111, "no_speech_prob": 5.77158016312751e-06}, {"id": 629, "seek": 191776, "start": 1944.4, "end": 1946.8799999999999, "text": " So we are pushing down on the energy.", "tokens": [50364, 286, 500, 380, 362, 364, 2281, 1433, 510, 337, 411, 437, 311, 50548, 50548, 264, 2158, 295, 288, 17, 13, 50594, 50594, 407, 498, 286, 632, 364, 2857, 5952, 510, 300, 787, 1890, 288, 17, 11, 50810, 50810, 550, 300, 5952, 576, 1936, 829, 364, 2281, 510, 13, 50960, 51074, 467, 576, 7406, 729, 35193, 13, 51126, 51252, 1779, 30, 51276, 51532, 2264, 13, 51576, 51576, 821, 307, 257, 1168, 510, 1348, 490, 264, 1731, 13, 51696, 51696, 407, 321, 366, 7380, 760, 322, 264, 2281, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.2585462842668806, "compression_ratio": 1.5075376884422111, "no_speech_prob": 5.77158016312751e-06}, {"id": 630, "seek": 194688, "start": 1946.88, "end": 1948.8400000000001, "text": " Oh, we are actually doing a minimization", "tokens": [50364, 876, 11, 321, 366, 767, 884, 257, 4464, 2144, 50462, 50462, 337, 3097, 293, 38253, 13, 50572, 50572, 583, 550, 562, 366, 321, 767, 7380, 493, 445, 1830, 3097, 30, 50774, 50774, 1779, 13, 50800, 50800, 407, 718, 385, 4160, 291, 577, 3097, 2281, 12, 6032, 5245, 50992, 50992, 589, 11, 558, 30, 51038, 51038, 32281, 8712, 488, 7150, 13, 51226, 51226, 400, 498, 291, 362, 48994, 9102, 11, 558, 30, 51298, 51298, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51480, 51480, 4919, 11, 264, 12869, 366, 294, 264, 2085, 1668, 510, 13, 51584, 51584, 467, 1177, 380, 1871, 13, 51638, 51638, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51740, 51740, 286, 976, 291, 364, 2031, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20264959683383468, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.0450261470396072e-05}, {"id": 631, "seek": 194688, "start": 1948.8400000000001, "end": 1951.0400000000002, "text": " for training and inference.", "tokens": [50364, 876, 11, 321, 366, 767, 884, 257, 4464, 2144, 50462, 50462, 337, 3097, 293, 38253, 13, 50572, 50572, 583, 550, 562, 366, 321, 767, 7380, 493, 445, 1830, 3097, 30, 50774, 50774, 1779, 13, 50800, 50800, 407, 718, 385, 4160, 291, 577, 3097, 2281, 12, 6032, 5245, 50992, 50992, 589, 11, 558, 30, 51038, 51038, 32281, 8712, 488, 7150, 13, 51226, 51226, 400, 498, 291, 362, 48994, 9102, 11, 558, 30, 51298, 51298, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51480, 51480, 4919, 11, 264, 12869, 366, 294, 264, 2085, 1668, 510, 13, 51584, 51584, 467, 1177, 380, 1871, 13, 51638, 51638, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51740, 51740, 286, 976, 291, 364, 2031, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20264959683383468, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.0450261470396072e-05}, {"id": 632, "seek": 194688, "start": 1951.0400000000002, "end": 1955.0800000000002, "text": " But then when are we actually pushing up just during training?", "tokens": [50364, 876, 11, 321, 366, 767, 884, 257, 4464, 2144, 50462, 50462, 337, 3097, 293, 38253, 13, 50572, 50572, 583, 550, 562, 366, 321, 767, 7380, 493, 445, 1830, 3097, 30, 50774, 50774, 1779, 13, 50800, 50800, 407, 718, 385, 4160, 291, 577, 3097, 2281, 12, 6032, 5245, 50992, 50992, 589, 11, 558, 30, 51038, 51038, 32281, 8712, 488, 7150, 13, 51226, 51226, 400, 498, 291, 362, 48994, 9102, 11, 558, 30, 51298, 51298, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51480, 51480, 4919, 11, 264, 12869, 366, 294, 264, 2085, 1668, 510, 13, 51584, 51584, 467, 1177, 380, 1871, 13, 51638, 51638, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51740, 51740, 286, 976, 291, 364, 2031, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20264959683383468, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.0450261470396072e-05}, {"id": 633, "seek": 194688, "start": 1955.0800000000002, "end": 1955.6000000000001, "text": " Right.", "tokens": [50364, 876, 11, 321, 366, 767, 884, 257, 4464, 2144, 50462, 50462, 337, 3097, 293, 38253, 13, 50572, 50572, 583, 550, 562, 366, 321, 767, 7380, 493, 445, 1830, 3097, 30, 50774, 50774, 1779, 13, 50800, 50800, 407, 718, 385, 4160, 291, 577, 3097, 2281, 12, 6032, 5245, 50992, 50992, 589, 11, 558, 30, 51038, 51038, 32281, 8712, 488, 7150, 13, 51226, 51226, 400, 498, 291, 362, 48994, 9102, 11, 558, 30, 51298, 51298, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51480, 51480, 4919, 11, 264, 12869, 366, 294, 264, 2085, 1668, 510, 13, 51584, 51584, 467, 1177, 380, 1871, 13, 51638, 51638, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51740, 51740, 286, 976, 291, 364, 2031, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20264959683383468, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.0450261470396072e-05}, {"id": 634, "seek": 194688, "start": 1955.6000000000001, "end": 1959.44, "text": " So let me remind you how training energy-based models", "tokens": [50364, 876, 11, 321, 366, 767, 884, 257, 4464, 2144, 50462, 50462, 337, 3097, 293, 38253, 13, 50572, 50572, 583, 550, 562, 366, 321, 767, 7380, 493, 445, 1830, 3097, 30, 50774, 50774, 1779, 13, 50800, 50800, 407, 718, 385, 4160, 291, 577, 3097, 2281, 12, 6032, 5245, 50992, 50992, 589, 11, 558, 30, 51038, 51038, 32281, 8712, 488, 7150, 13, 51226, 51226, 400, 498, 291, 362, 48994, 9102, 11, 558, 30, 51298, 51298, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51480, 51480, 4919, 11, 264, 12869, 366, 294, 264, 2085, 1668, 510, 13, 51584, 51584, 467, 1177, 380, 1871, 13, 51638, 51638, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51740, 51740, 286, 976, 291, 364, 2031, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20264959683383468, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.0450261470396072e-05}, {"id": 635, "seek": 194688, "start": 1959.44, "end": 1960.3600000000001, "text": " work, right?", "tokens": [50364, 876, 11, 321, 366, 767, 884, 257, 4464, 2144, 50462, 50462, 337, 3097, 293, 38253, 13, 50572, 50572, 583, 550, 562, 366, 321, 767, 7380, 493, 445, 1830, 3097, 30, 50774, 50774, 1779, 13, 50800, 50800, 407, 718, 385, 4160, 291, 577, 3097, 2281, 12, 6032, 5245, 50992, 50992, 589, 11, 558, 30, 51038, 51038, 32281, 8712, 488, 7150, 13, 51226, 51226, 400, 498, 291, 362, 48994, 9102, 11, 558, 30, 51298, 51298, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51480, 51480, 4919, 11, 264, 12869, 366, 294, 264, 2085, 1668, 510, 13, 51584, 51584, 467, 1177, 380, 1871, 13, 51638, 51638, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51740, 51740, 286, 976, 291, 364, 2031, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20264959683383468, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.0450261470396072e-05}, {"id": 636, "seek": 194688, "start": 1960.3600000000001, "end": 1964.1200000000001, "text": " Particularly contrastive methods.", "tokens": [50364, 876, 11, 321, 366, 767, 884, 257, 4464, 2144, 50462, 50462, 337, 3097, 293, 38253, 13, 50572, 50572, 583, 550, 562, 366, 321, 767, 7380, 493, 445, 1830, 3097, 30, 50774, 50774, 1779, 13, 50800, 50800, 407, 718, 385, 4160, 291, 577, 3097, 2281, 12, 6032, 5245, 50992, 50992, 589, 11, 558, 30, 51038, 51038, 32281, 8712, 488, 7150, 13, 51226, 51226, 400, 498, 291, 362, 48994, 9102, 11, 558, 30, 51298, 51298, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51480, 51480, 4919, 11, 264, 12869, 366, 294, 264, 2085, 1668, 510, 13, 51584, 51584, 467, 1177, 380, 1871, 13, 51638, 51638, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51740, 51740, 286, 976, 291, 364, 2031, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20264959683383468, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.0450261470396072e-05}, {"id": 637, "seek": 194688, "start": 1964.1200000000001, "end": 1965.5600000000002, "text": " And if you have latent variables, right?", "tokens": [50364, 876, 11, 321, 366, 767, 884, 257, 4464, 2144, 50462, 50462, 337, 3097, 293, 38253, 13, 50572, 50572, 583, 550, 562, 366, 321, 767, 7380, 493, 445, 1830, 3097, 30, 50774, 50774, 1779, 13, 50800, 50800, 407, 718, 385, 4160, 291, 577, 3097, 2281, 12, 6032, 5245, 50992, 50992, 589, 11, 558, 30, 51038, 51038, 32281, 8712, 488, 7150, 13, 51226, 51226, 400, 498, 291, 362, 48994, 9102, 11, 558, 30, 51298, 51298, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51480, 51480, 4919, 11, 264, 12869, 366, 294, 264, 2085, 1668, 510, 13, 51584, 51584, 467, 1177, 380, 1871, 13, 51638, 51638, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51740, 51740, 286, 976, 291, 364, 2031, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20264959683383468, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.0450261470396072e-05}, {"id": 638, "seek": 194688, "start": 1965.5600000000002, "end": 1969.2, "text": " So you have your energy function, E of x, y, z.", "tokens": [50364, 876, 11, 321, 366, 767, 884, 257, 4464, 2144, 50462, 50462, 337, 3097, 293, 38253, 13, 50572, 50572, 583, 550, 562, 366, 321, 767, 7380, 493, 445, 1830, 3097, 30, 50774, 50774, 1779, 13, 50800, 50800, 407, 718, 385, 4160, 291, 577, 3097, 2281, 12, 6032, 5245, 50992, 50992, 589, 11, 558, 30, 51038, 51038, 32281, 8712, 488, 7150, 13, 51226, 51226, 400, 498, 291, 362, 48994, 9102, 11, 558, 30, 51298, 51298, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51480, 51480, 4919, 11, 264, 12869, 366, 294, 264, 2085, 1668, 510, 13, 51584, 51584, 467, 1177, 380, 1871, 13, 51638, 51638, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51740, 51740, 286, 976, 291, 364, 2031, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20264959683383468, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.0450261470396072e-05}, {"id": 639, "seek": 194688, "start": 1969.2, "end": 1971.2800000000002, "text": " Sorry, the arguments are in the wrong order here.", "tokens": [50364, 876, 11, 321, 366, 767, 884, 257, 4464, 2144, 50462, 50462, 337, 3097, 293, 38253, 13, 50572, 50572, 583, 550, 562, 366, 321, 767, 7380, 493, 445, 1830, 3097, 30, 50774, 50774, 1779, 13, 50800, 50800, 407, 718, 385, 4160, 291, 577, 3097, 2281, 12, 6032, 5245, 50992, 50992, 589, 11, 558, 30, 51038, 51038, 32281, 8712, 488, 7150, 13, 51226, 51226, 400, 498, 291, 362, 48994, 9102, 11, 558, 30, 51298, 51298, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51480, 51480, 4919, 11, 264, 12869, 366, 294, 264, 2085, 1668, 510, 13, 51584, 51584, 467, 1177, 380, 1871, 13, 51638, 51638, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51740, 51740, 286, 976, 291, 364, 2031, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20264959683383468, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.0450261470396072e-05}, {"id": 640, "seek": 194688, "start": 1971.2800000000002, "end": 1972.3600000000001, "text": " It doesn't matter.", "tokens": [50364, 876, 11, 321, 366, 767, 884, 257, 4464, 2144, 50462, 50462, 337, 3097, 293, 38253, 13, 50572, 50572, 583, 550, 562, 366, 321, 767, 7380, 493, 445, 1830, 3097, 30, 50774, 50774, 1779, 13, 50800, 50800, 407, 718, 385, 4160, 291, 577, 3097, 2281, 12, 6032, 5245, 50992, 50992, 589, 11, 558, 30, 51038, 51038, 32281, 8712, 488, 7150, 13, 51226, 51226, 400, 498, 291, 362, 48994, 9102, 11, 558, 30, 51298, 51298, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51480, 51480, 4919, 11, 264, 12869, 366, 294, 264, 2085, 1668, 510, 13, 51584, 51584, 467, 1177, 380, 1871, 13, 51638, 51638, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51740, 51740, 286, 976, 291, 364, 2031, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20264959683383468, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.0450261470396072e-05}, {"id": 641, "seek": 194688, "start": 1972.3600000000001, "end": 1974.4, "text": " So you have your energy function, E of x, y, z.", "tokens": [50364, 876, 11, 321, 366, 767, 884, 257, 4464, 2144, 50462, 50462, 337, 3097, 293, 38253, 13, 50572, 50572, 583, 550, 562, 366, 321, 767, 7380, 493, 445, 1830, 3097, 30, 50774, 50774, 1779, 13, 50800, 50800, 407, 718, 385, 4160, 291, 577, 3097, 2281, 12, 6032, 5245, 50992, 50992, 589, 11, 558, 30, 51038, 51038, 32281, 8712, 488, 7150, 13, 51226, 51226, 400, 498, 291, 362, 48994, 9102, 11, 558, 30, 51298, 51298, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51480, 51480, 4919, 11, 264, 12869, 366, 294, 264, 2085, 1668, 510, 13, 51584, 51584, 467, 1177, 380, 1871, 13, 51638, 51638, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51740, 51740, 286, 976, 291, 364, 2031, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20264959683383468, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.0450261470396072e-05}, {"id": 642, "seek": 194688, "start": 1974.4, "end": 1976.72, "text": " I give you an x.", "tokens": [50364, 876, 11, 321, 366, 767, 884, 257, 4464, 2144, 50462, 50462, 337, 3097, 293, 38253, 13, 50572, 50572, 583, 550, 562, 366, 321, 767, 7380, 493, 445, 1830, 3097, 30, 50774, 50774, 1779, 13, 50800, 50800, 407, 718, 385, 4160, 291, 577, 3097, 2281, 12, 6032, 5245, 50992, 50992, 589, 11, 558, 30, 51038, 51038, 32281, 8712, 488, 7150, 13, 51226, 51226, 400, 498, 291, 362, 48994, 9102, 11, 558, 30, 51298, 51298, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51480, 51480, 4919, 11, 264, 12869, 366, 294, 264, 2085, 1668, 510, 13, 51584, 51584, 467, 1177, 380, 1871, 13, 51638, 51638, 407, 291, 362, 428, 2281, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 13, 51740, 51740, 286, 976, 291, 364, 2031, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20264959683383468, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.0450261470396072e-05}, {"id": 643, "seek": 197672, "start": 1976.72, "end": 1980.28, "text": " So in training mode, I give you an x and a y.", "tokens": [50364, 407, 294, 3097, 4391, 11, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50542, 50542, 286, 500, 380, 976, 291, 710, 1562, 13, 50614, 50614, 583, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50678, 50678, 1692, 307, 257, 3097, 6889, 13, 50748, 50748, 467, 311, 364, 2031, 293, 257, 288, 13, 50820, 50820, 440, 700, 551, 291, 360, 307, 291, 915, 257, 710, 300, 4464, 5660, 50944, 50944, 264, 2281, 462, 295, 2031, 11, 288, 11, 710, 13, 51122, 51122, 400, 291, 818, 300, 283, 295, 2031, 11, 288, 13, 51280, 51280, 1779, 30, 51334, 51334, 583, 264, 636, 291, 14722, 309, 307, 445, 923, 670, 710, 295, 462, 295, 2031, 11, 288, 11, 51460, 51460, 710, 13, 51542, 51542, 823, 11, 337, 264, 3006, 288, 294, 428, 3097, 992, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.16574851326320483, "compression_ratio": 1.719626168224299, "no_speech_prob": 1.1841909326903988e-05}, {"id": 644, "seek": 197672, "start": 1980.28, "end": 1981.72, "text": " I don't give you z ever.", "tokens": [50364, 407, 294, 3097, 4391, 11, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50542, 50542, 286, 500, 380, 976, 291, 710, 1562, 13, 50614, 50614, 583, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50678, 50678, 1692, 307, 257, 3097, 6889, 13, 50748, 50748, 467, 311, 364, 2031, 293, 257, 288, 13, 50820, 50820, 440, 700, 551, 291, 360, 307, 291, 915, 257, 710, 300, 4464, 5660, 50944, 50944, 264, 2281, 462, 295, 2031, 11, 288, 11, 710, 13, 51122, 51122, 400, 291, 818, 300, 283, 295, 2031, 11, 288, 13, 51280, 51280, 1779, 30, 51334, 51334, 583, 264, 636, 291, 14722, 309, 307, 445, 923, 670, 710, 295, 462, 295, 2031, 11, 288, 11, 51460, 51460, 710, 13, 51542, 51542, 823, 11, 337, 264, 3006, 288, 294, 428, 3097, 992, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.16574851326320483, "compression_ratio": 1.719626168224299, "no_speech_prob": 1.1841909326903988e-05}, {"id": 645, "seek": 197672, "start": 1981.72, "end": 1983.0, "text": " But I give you an x and a y.", "tokens": [50364, 407, 294, 3097, 4391, 11, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50542, 50542, 286, 500, 380, 976, 291, 710, 1562, 13, 50614, 50614, 583, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50678, 50678, 1692, 307, 257, 3097, 6889, 13, 50748, 50748, 467, 311, 364, 2031, 293, 257, 288, 13, 50820, 50820, 440, 700, 551, 291, 360, 307, 291, 915, 257, 710, 300, 4464, 5660, 50944, 50944, 264, 2281, 462, 295, 2031, 11, 288, 11, 710, 13, 51122, 51122, 400, 291, 818, 300, 283, 295, 2031, 11, 288, 13, 51280, 51280, 1779, 30, 51334, 51334, 583, 264, 636, 291, 14722, 309, 307, 445, 923, 670, 710, 295, 462, 295, 2031, 11, 288, 11, 51460, 51460, 710, 13, 51542, 51542, 823, 11, 337, 264, 3006, 288, 294, 428, 3097, 992, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.16574851326320483, "compression_ratio": 1.719626168224299, "no_speech_prob": 1.1841909326903988e-05}, {"id": 646, "seek": 197672, "start": 1983.0, "end": 1984.4, "text": " Here is a training sample.", "tokens": [50364, 407, 294, 3097, 4391, 11, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50542, 50542, 286, 500, 380, 976, 291, 710, 1562, 13, 50614, 50614, 583, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50678, 50678, 1692, 307, 257, 3097, 6889, 13, 50748, 50748, 467, 311, 364, 2031, 293, 257, 288, 13, 50820, 50820, 440, 700, 551, 291, 360, 307, 291, 915, 257, 710, 300, 4464, 5660, 50944, 50944, 264, 2281, 462, 295, 2031, 11, 288, 11, 710, 13, 51122, 51122, 400, 291, 818, 300, 283, 295, 2031, 11, 288, 13, 51280, 51280, 1779, 30, 51334, 51334, 583, 264, 636, 291, 14722, 309, 307, 445, 923, 670, 710, 295, 462, 295, 2031, 11, 288, 11, 51460, 51460, 710, 13, 51542, 51542, 823, 11, 337, 264, 3006, 288, 294, 428, 3097, 992, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.16574851326320483, "compression_ratio": 1.719626168224299, "no_speech_prob": 1.1841909326903988e-05}, {"id": 647, "seek": 197672, "start": 1984.4, "end": 1985.84, "text": " It's an x and a y.", "tokens": [50364, 407, 294, 3097, 4391, 11, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50542, 50542, 286, 500, 380, 976, 291, 710, 1562, 13, 50614, 50614, 583, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50678, 50678, 1692, 307, 257, 3097, 6889, 13, 50748, 50748, 467, 311, 364, 2031, 293, 257, 288, 13, 50820, 50820, 440, 700, 551, 291, 360, 307, 291, 915, 257, 710, 300, 4464, 5660, 50944, 50944, 264, 2281, 462, 295, 2031, 11, 288, 11, 710, 13, 51122, 51122, 400, 291, 818, 300, 283, 295, 2031, 11, 288, 13, 51280, 51280, 1779, 30, 51334, 51334, 583, 264, 636, 291, 14722, 309, 307, 445, 923, 670, 710, 295, 462, 295, 2031, 11, 288, 11, 51460, 51460, 710, 13, 51542, 51542, 823, 11, 337, 264, 3006, 288, 294, 428, 3097, 992, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.16574851326320483, "compression_ratio": 1.719626168224299, "no_speech_prob": 1.1841909326903988e-05}, {"id": 648, "seek": 197672, "start": 1985.84, "end": 1988.32, "text": " The first thing you do is you find a z that minimizes", "tokens": [50364, 407, 294, 3097, 4391, 11, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50542, 50542, 286, 500, 380, 976, 291, 710, 1562, 13, 50614, 50614, 583, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50678, 50678, 1692, 307, 257, 3097, 6889, 13, 50748, 50748, 467, 311, 364, 2031, 293, 257, 288, 13, 50820, 50820, 440, 700, 551, 291, 360, 307, 291, 915, 257, 710, 300, 4464, 5660, 50944, 50944, 264, 2281, 462, 295, 2031, 11, 288, 11, 710, 13, 51122, 51122, 400, 291, 818, 300, 283, 295, 2031, 11, 288, 13, 51280, 51280, 1779, 30, 51334, 51334, 583, 264, 636, 291, 14722, 309, 307, 445, 923, 670, 710, 295, 462, 295, 2031, 11, 288, 11, 51460, 51460, 710, 13, 51542, 51542, 823, 11, 337, 264, 3006, 288, 294, 428, 3097, 992, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.16574851326320483, "compression_ratio": 1.719626168224299, "no_speech_prob": 1.1841909326903988e-05}, {"id": 649, "seek": 197672, "start": 1988.32, "end": 1991.88, "text": " the energy E of x, y, z.", "tokens": [50364, 407, 294, 3097, 4391, 11, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50542, 50542, 286, 500, 380, 976, 291, 710, 1562, 13, 50614, 50614, 583, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50678, 50678, 1692, 307, 257, 3097, 6889, 13, 50748, 50748, 467, 311, 364, 2031, 293, 257, 288, 13, 50820, 50820, 440, 700, 551, 291, 360, 307, 291, 915, 257, 710, 300, 4464, 5660, 50944, 50944, 264, 2281, 462, 295, 2031, 11, 288, 11, 710, 13, 51122, 51122, 400, 291, 818, 300, 283, 295, 2031, 11, 288, 13, 51280, 51280, 1779, 30, 51334, 51334, 583, 264, 636, 291, 14722, 309, 307, 445, 923, 670, 710, 295, 462, 295, 2031, 11, 288, 11, 51460, 51460, 710, 13, 51542, 51542, 823, 11, 337, 264, 3006, 288, 294, 428, 3097, 992, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.16574851326320483, "compression_ratio": 1.719626168224299, "no_speech_prob": 1.1841909326903988e-05}, {"id": 650, "seek": 197672, "start": 1991.88, "end": 1995.04, "text": " And you call that f of x, y.", "tokens": [50364, 407, 294, 3097, 4391, 11, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50542, 50542, 286, 500, 380, 976, 291, 710, 1562, 13, 50614, 50614, 583, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50678, 50678, 1692, 307, 257, 3097, 6889, 13, 50748, 50748, 467, 311, 364, 2031, 293, 257, 288, 13, 50820, 50820, 440, 700, 551, 291, 360, 307, 291, 915, 257, 710, 300, 4464, 5660, 50944, 50944, 264, 2281, 462, 295, 2031, 11, 288, 11, 710, 13, 51122, 51122, 400, 291, 818, 300, 283, 295, 2031, 11, 288, 13, 51280, 51280, 1779, 30, 51334, 51334, 583, 264, 636, 291, 14722, 309, 307, 445, 923, 670, 710, 295, 462, 295, 2031, 11, 288, 11, 51460, 51460, 710, 13, 51542, 51542, 823, 11, 337, 264, 3006, 288, 294, 428, 3097, 992, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.16574851326320483, "compression_ratio": 1.719626168224299, "no_speech_prob": 1.1841909326903988e-05}, {"id": 651, "seek": 197672, "start": 1995.04, "end": 1996.1200000000001, "text": " Right?", "tokens": [50364, 407, 294, 3097, 4391, 11, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50542, 50542, 286, 500, 380, 976, 291, 710, 1562, 13, 50614, 50614, 583, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50678, 50678, 1692, 307, 257, 3097, 6889, 13, 50748, 50748, 467, 311, 364, 2031, 293, 257, 288, 13, 50820, 50820, 440, 700, 551, 291, 360, 307, 291, 915, 257, 710, 300, 4464, 5660, 50944, 50944, 264, 2281, 462, 295, 2031, 11, 288, 11, 710, 13, 51122, 51122, 400, 291, 818, 300, 283, 295, 2031, 11, 288, 13, 51280, 51280, 1779, 30, 51334, 51334, 583, 264, 636, 291, 14722, 309, 307, 445, 923, 670, 710, 295, 462, 295, 2031, 11, 288, 11, 51460, 51460, 710, 13, 51542, 51542, 823, 11, 337, 264, 3006, 288, 294, 428, 3097, 992, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.16574851326320483, "compression_ratio": 1.719626168224299, "no_speech_prob": 1.1841909326903988e-05}, {"id": 652, "seek": 197672, "start": 1996.1200000000001, "end": 1998.64, "text": " But the way you compute it is just min over z of E of x, y,", "tokens": [50364, 407, 294, 3097, 4391, 11, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50542, 50542, 286, 500, 380, 976, 291, 710, 1562, 13, 50614, 50614, 583, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50678, 50678, 1692, 307, 257, 3097, 6889, 13, 50748, 50748, 467, 311, 364, 2031, 293, 257, 288, 13, 50820, 50820, 440, 700, 551, 291, 360, 307, 291, 915, 257, 710, 300, 4464, 5660, 50944, 50944, 264, 2281, 462, 295, 2031, 11, 288, 11, 710, 13, 51122, 51122, 400, 291, 818, 300, 283, 295, 2031, 11, 288, 13, 51280, 51280, 1779, 30, 51334, 51334, 583, 264, 636, 291, 14722, 309, 307, 445, 923, 670, 710, 295, 462, 295, 2031, 11, 288, 11, 51460, 51460, 710, 13, 51542, 51542, 823, 11, 337, 264, 3006, 288, 294, 428, 3097, 992, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.16574851326320483, "compression_ratio": 1.719626168224299, "no_speech_prob": 1.1841909326903988e-05}, {"id": 653, "seek": 197672, "start": 1998.64, "end": 2000.28, "text": " z.", "tokens": [50364, 407, 294, 3097, 4391, 11, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50542, 50542, 286, 500, 380, 976, 291, 710, 1562, 13, 50614, 50614, 583, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50678, 50678, 1692, 307, 257, 3097, 6889, 13, 50748, 50748, 467, 311, 364, 2031, 293, 257, 288, 13, 50820, 50820, 440, 700, 551, 291, 360, 307, 291, 915, 257, 710, 300, 4464, 5660, 50944, 50944, 264, 2281, 462, 295, 2031, 11, 288, 11, 710, 13, 51122, 51122, 400, 291, 818, 300, 283, 295, 2031, 11, 288, 13, 51280, 51280, 1779, 30, 51334, 51334, 583, 264, 636, 291, 14722, 309, 307, 445, 923, 670, 710, 295, 462, 295, 2031, 11, 288, 11, 51460, 51460, 710, 13, 51542, 51542, 823, 11, 337, 264, 3006, 288, 294, 428, 3097, 992, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.16574851326320483, "compression_ratio": 1.719626168224299, "no_speech_prob": 1.1841909326903988e-05}, {"id": 654, "seek": 197672, "start": 2000.28, "end": 2005.96, "text": " Now, for the correct y in your training set,", "tokens": [50364, 407, 294, 3097, 4391, 11, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50542, 50542, 286, 500, 380, 976, 291, 710, 1562, 13, 50614, 50614, 583, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 50678, 50678, 1692, 307, 257, 3097, 6889, 13, 50748, 50748, 467, 311, 364, 2031, 293, 257, 288, 13, 50820, 50820, 440, 700, 551, 291, 360, 307, 291, 915, 257, 710, 300, 4464, 5660, 50944, 50944, 264, 2281, 462, 295, 2031, 11, 288, 11, 710, 13, 51122, 51122, 400, 291, 818, 300, 283, 295, 2031, 11, 288, 13, 51280, 51280, 1779, 30, 51334, 51334, 583, 264, 636, 291, 14722, 309, 307, 445, 923, 670, 710, 295, 462, 295, 2031, 11, 288, 11, 51460, 51460, 710, 13, 51542, 51542, 823, 11, 337, 264, 3006, 288, 294, 428, 3097, 992, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.16574851326320483, "compression_ratio": 1.719626168224299, "no_speech_prob": 1.1841909326903988e-05}, {"id": 655, "seek": 200596, "start": 2005.96, "end": 2009.2, "text": " you want that energy to be small, right?", "tokens": [50364, 291, 528, 300, 2281, 281, 312, 1359, 11, 558, 30, 50526, 50526, 400, 337, 428, 38253, 9284, 281, 589, 11, 412, 1500, 565, 11, 50780, 50780, 286, 500, 380, 976, 291, 264, 288, 13, 50826, 50826, 286, 445, 976, 291, 264, 2031, 13, 50882, 50882, 400, 437, 291, 362, 281, 915, 307, 264, 288, 300, 50962, 50962, 575, 264, 16998, 2281, 13, 51030, 51030, 407, 337, 341, 281, 589, 11, 309, 575, 281, 312, 264, 1389, 51172, 51172, 300, 264, 3006, 288, 575, 264, 12437, 51268, 51268, 2281, 3654, 439, 1944, 288, 311, 13, 51366, 51366, 1779, 30, 51442, 51442, 407, 437, 286, 643, 281, 360, 586, 1830, 3097, 51582, 51582, 307, 300, 286, 976, 291, 264, 3006, 288, 13, 51726, 51726, 400, 437, 291, 643, 281, 360, 307, 976, 257, 2295, 2281, 281, 264, 3006, 288, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11898933572972074, "compression_ratio": 1.9327731092436975, "no_speech_prob": 3.611716920204344e-06}, {"id": 656, "seek": 200596, "start": 2009.2, "end": 2014.28, "text": " And for your inference algorithm to work, at test time,", "tokens": [50364, 291, 528, 300, 2281, 281, 312, 1359, 11, 558, 30, 50526, 50526, 400, 337, 428, 38253, 9284, 281, 589, 11, 412, 1500, 565, 11, 50780, 50780, 286, 500, 380, 976, 291, 264, 288, 13, 50826, 50826, 286, 445, 976, 291, 264, 2031, 13, 50882, 50882, 400, 437, 291, 362, 281, 915, 307, 264, 288, 300, 50962, 50962, 575, 264, 16998, 2281, 13, 51030, 51030, 407, 337, 341, 281, 589, 11, 309, 575, 281, 312, 264, 1389, 51172, 51172, 300, 264, 3006, 288, 575, 264, 12437, 51268, 51268, 2281, 3654, 439, 1944, 288, 311, 13, 51366, 51366, 1779, 30, 51442, 51442, 407, 437, 286, 643, 281, 360, 586, 1830, 3097, 51582, 51582, 307, 300, 286, 976, 291, 264, 3006, 288, 13, 51726, 51726, 400, 437, 291, 643, 281, 360, 307, 976, 257, 2295, 2281, 281, 264, 3006, 288, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11898933572972074, "compression_ratio": 1.9327731092436975, "no_speech_prob": 3.611716920204344e-06}, {"id": 657, "seek": 200596, "start": 2014.28, "end": 2015.2, "text": " I don't give you the y.", "tokens": [50364, 291, 528, 300, 2281, 281, 312, 1359, 11, 558, 30, 50526, 50526, 400, 337, 428, 38253, 9284, 281, 589, 11, 412, 1500, 565, 11, 50780, 50780, 286, 500, 380, 976, 291, 264, 288, 13, 50826, 50826, 286, 445, 976, 291, 264, 2031, 13, 50882, 50882, 400, 437, 291, 362, 281, 915, 307, 264, 288, 300, 50962, 50962, 575, 264, 16998, 2281, 13, 51030, 51030, 407, 337, 341, 281, 589, 11, 309, 575, 281, 312, 264, 1389, 51172, 51172, 300, 264, 3006, 288, 575, 264, 12437, 51268, 51268, 2281, 3654, 439, 1944, 288, 311, 13, 51366, 51366, 1779, 30, 51442, 51442, 407, 437, 286, 643, 281, 360, 586, 1830, 3097, 51582, 51582, 307, 300, 286, 976, 291, 264, 3006, 288, 13, 51726, 51726, 400, 437, 291, 643, 281, 360, 307, 976, 257, 2295, 2281, 281, 264, 3006, 288, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11898933572972074, "compression_ratio": 1.9327731092436975, "no_speech_prob": 3.611716920204344e-06}, {"id": 658, "seek": 200596, "start": 2015.2, "end": 2016.32, "text": " I just give you the x.", "tokens": [50364, 291, 528, 300, 2281, 281, 312, 1359, 11, 558, 30, 50526, 50526, 400, 337, 428, 38253, 9284, 281, 589, 11, 412, 1500, 565, 11, 50780, 50780, 286, 500, 380, 976, 291, 264, 288, 13, 50826, 50826, 286, 445, 976, 291, 264, 2031, 13, 50882, 50882, 400, 437, 291, 362, 281, 915, 307, 264, 288, 300, 50962, 50962, 575, 264, 16998, 2281, 13, 51030, 51030, 407, 337, 341, 281, 589, 11, 309, 575, 281, 312, 264, 1389, 51172, 51172, 300, 264, 3006, 288, 575, 264, 12437, 51268, 51268, 2281, 3654, 439, 1944, 288, 311, 13, 51366, 51366, 1779, 30, 51442, 51442, 407, 437, 286, 643, 281, 360, 586, 1830, 3097, 51582, 51582, 307, 300, 286, 976, 291, 264, 3006, 288, 13, 51726, 51726, 400, 437, 291, 643, 281, 360, 307, 976, 257, 2295, 2281, 281, 264, 3006, 288, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11898933572972074, "compression_ratio": 1.9327731092436975, "no_speech_prob": 3.611716920204344e-06}, {"id": 659, "seek": 200596, "start": 2016.32, "end": 2017.92, "text": " And what you have to find is the y that", "tokens": [50364, 291, 528, 300, 2281, 281, 312, 1359, 11, 558, 30, 50526, 50526, 400, 337, 428, 38253, 9284, 281, 589, 11, 412, 1500, 565, 11, 50780, 50780, 286, 500, 380, 976, 291, 264, 288, 13, 50826, 50826, 286, 445, 976, 291, 264, 2031, 13, 50882, 50882, 400, 437, 291, 362, 281, 915, 307, 264, 288, 300, 50962, 50962, 575, 264, 16998, 2281, 13, 51030, 51030, 407, 337, 341, 281, 589, 11, 309, 575, 281, 312, 264, 1389, 51172, 51172, 300, 264, 3006, 288, 575, 264, 12437, 51268, 51268, 2281, 3654, 439, 1944, 288, 311, 13, 51366, 51366, 1779, 30, 51442, 51442, 407, 437, 286, 643, 281, 360, 586, 1830, 3097, 51582, 51582, 307, 300, 286, 976, 291, 264, 3006, 288, 13, 51726, 51726, 400, 437, 291, 643, 281, 360, 307, 976, 257, 2295, 2281, 281, 264, 3006, 288, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11898933572972074, "compression_ratio": 1.9327731092436975, "no_speech_prob": 3.611716920204344e-06}, {"id": 660, "seek": 200596, "start": 2017.92, "end": 2019.28, "text": " has the smallest energy.", "tokens": [50364, 291, 528, 300, 2281, 281, 312, 1359, 11, 558, 30, 50526, 50526, 400, 337, 428, 38253, 9284, 281, 589, 11, 412, 1500, 565, 11, 50780, 50780, 286, 500, 380, 976, 291, 264, 288, 13, 50826, 50826, 286, 445, 976, 291, 264, 2031, 13, 50882, 50882, 400, 437, 291, 362, 281, 915, 307, 264, 288, 300, 50962, 50962, 575, 264, 16998, 2281, 13, 51030, 51030, 407, 337, 341, 281, 589, 11, 309, 575, 281, 312, 264, 1389, 51172, 51172, 300, 264, 3006, 288, 575, 264, 12437, 51268, 51268, 2281, 3654, 439, 1944, 288, 311, 13, 51366, 51366, 1779, 30, 51442, 51442, 407, 437, 286, 643, 281, 360, 586, 1830, 3097, 51582, 51582, 307, 300, 286, 976, 291, 264, 3006, 288, 13, 51726, 51726, 400, 437, 291, 643, 281, 360, 307, 976, 257, 2295, 2281, 281, 264, 3006, 288, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11898933572972074, "compression_ratio": 1.9327731092436975, "no_speech_prob": 3.611716920204344e-06}, {"id": 661, "seek": 200596, "start": 2019.28, "end": 2022.1200000000001, "text": " So for this to work, it has to be the case", "tokens": [50364, 291, 528, 300, 2281, 281, 312, 1359, 11, 558, 30, 50526, 50526, 400, 337, 428, 38253, 9284, 281, 589, 11, 412, 1500, 565, 11, 50780, 50780, 286, 500, 380, 976, 291, 264, 288, 13, 50826, 50826, 286, 445, 976, 291, 264, 2031, 13, 50882, 50882, 400, 437, 291, 362, 281, 915, 307, 264, 288, 300, 50962, 50962, 575, 264, 16998, 2281, 13, 51030, 51030, 407, 337, 341, 281, 589, 11, 309, 575, 281, 312, 264, 1389, 51172, 51172, 300, 264, 3006, 288, 575, 264, 12437, 51268, 51268, 2281, 3654, 439, 1944, 288, 311, 13, 51366, 51366, 1779, 30, 51442, 51442, 407, 437, 286, 643, 281, 360, 586, 1830, 3097, 51582, 51582, 307, 300, 286, 976, 291, 264, 3006, 288, 13, 51726, 51726, 400, 437, 291, 643, 281, 360, 307, 976, 257, 2295, 2281, 281, 264, 3006, 288, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11898933572972074, "compression_ratio": 1.9327731092436975, "no_speech_prob": 3.611716920204344e-06}, {"id": 662, "seek": 200596, "start": 2022.1200000000001, "end": 2024.04, "text": " that the correct y has the lowest", "tokens": [50364, 291, 528, 300, 2281, 281, 312, 1359, 11, 558, 30, 50526, 50526, 400, 337, 428, 38253, 9284, 281, 589, 11, 412, 1500, 565, 11, 50780, 50780, 286, 500, 380, 976, 291, 264, 288, 13, 50826, 50826, 286, 445, 976, 291, 264, 2031, 13, 50882, 50882, 400, 437, 291, 362, 281, 915, 307, 264, 288, 300, 50962, 50962, 575, 264, 16998, 2281, 13, 51030, 51030, 407, 337, 341, 281, 589, 11, 309, 575, 281, 312, 264, 1389, 51172, 51172, 300, 264, 3006, 288, 575, 264, 12437, 51268, 51268, 2281, 3654, 439, 1944, 288, 311, 13, 51366, 51366, 1779, 30, 51442, 51442, 407, 437, 286, 643, 281, 360, 586, 1830, 3097, 51582, 51582, 307, 300, 286, 976, 291, 264, 3006, 288, 13, 51726, 51726, 400, 437, 291, 643, 281, 360, 307, 976, 257, 2295, 2281, 281, 264, 3006, 288, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11898933572972074, "compression_ratio": 1.9327731092436975, "no_speech_prob": 3.611716920204344e-06}, {"id": 663, "seek": 200596, "start": 2024.04, "end": 2026.0, "text": " energy among all possible y's.", "tokens": [50364, 291, 528, 300, 2281, 281, 312, 1359, 11, 558, 30, 50526, 50526, 400, 337, 428, 38253, 9284, 281, 589, 11, 412, 1500, 565, 11, 50780, 50780, 286, 500, 380, 976, 291, 264, 288, 13, 50826, 50826, 286, 445, 976, 291, 264, 2031, 13, 50882, 50882, 400, 437, 291, 362, 281, 915, 307, 264, 288, 300, 50962, 50962, 575, 264, 16998, 2281, 13, 51030, 51030, 407, 337, 341, 281, 589, 11, 309, 575, 281, 312, 264, 1389, 51172, 51172, 300, 264, 3006, 288, 575, 264, 12437, 51268, 51268, 2281, 3654, 439, 1944, 288, 311, 13, 51366, 51366, 1779, 30, 51442, 51442, 407, 437, 286, 643, 281, 360, 586, 1830, 3097, 51582, 51582, 307, 300, 286, 976, 291, 264, 3006, 288, 13, 51726, 51726, 400, 437, 291, 643, 281, 360, 307, 976, 257, 2295, 2281, 281, 264, 3006, 288, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11898933572972074, "compression_ratio": 1.9327731092436975, "no_speech_prob": 3.611716920204344e-06}, {"id": 664, "seek": 200596, "start": 2026.0, "end": 2027.52, "text": " Right?", "tokens": [50364, 291, 528, 300, 2281, 281, 312, 1359, 11, 558, 30, 50526, 50526, 400, 337, 428, 38253, 9284, 281, 589, 11, 412, 1500, 565, 11, 50780, 50780, 286, 500, 380, 976, 291, 264, 288, 13, 50826, 50826, 286, 445, 976, 291, 264, 2031, 13, 50882, 50882, 400, 437, 291, 362, 281, 915, 307, 264, 288, 300, 50962, 50962, 575, 264, 16998, 2281, 13, 51030, 51030, 407, 337, 341, 281, 589, 11, 309, 575, 281, 312, 264, 1389, 51172, 51172, 300, 264, 3006, 288, 575, 264, 12437, 51268, 51268, 2281, 3654, 439, 1944, 288, 311, 13, 51366, 51366, 1779, 30, 51442, 51442, 407, 437, 286, 643, 281, 360, 586, 1830, 3097, 51582, 51582, 307, 300, 286, 976, 291, 264, 3006, 288, 13, 51726, 51726, 400, 437, 291, 643, 281, 360, 307, 976, 257, 2295, 2281, 281, 264, 3006, 288, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11898933572972074, "compression_ratio": 1.9327731092436975, "no_speech_prob": 3.611716920204344e-06}, {"id": 665, "seek": 200596, "start": 2027.52, "end": 2030.32, "text": " So what I need to do now during training", "tokens": [50364, 291, 528, 300, 2281, 281, 312, 1359, 11, 558, 30, 50526, 50526, 400, 337, 428, 38253, 9284, 281, 589, 11, 412, 1500, 565, 11, 50780, 50780, 286, 500, 380, 976, 291, 264, 288, 13, 50826, 50826, 286, 445, 976, 291, 264, 2031, 13, 50882, 50882, 400, 437, 291, 362, 281, 915, 307, 264, 288, 300, 50962, 50962, 575, 264, 16998, 2281, 13, 51030, 51030, 407, 337, 341, 281, 589, 11, 309, 575, 281, 312, 264, 1389, 51172, 51172, 300, 264, 3006, 288, 575, 264, 12437, 51268, 51268, 2281, 3654, 439, 1944, 288, 311, 13, 51366, 51366, 1779, 30, 51442, 51442, 407, 437, 286, 643, 281, 360, 586, 1830, 3097, 51582, 51582, 307, 300, 286, 976, 291, 264, 3006, 288, 13, 51726, 51726, 400, 437, 291, 643, 281, 360, 307, 976, 257, 2295, 2281, 281, 264, 3006, 288, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11898933572972074, "compression_ratio": 1.9327731092436975, "no_speech_prob": 3.611716920204344e-06}, {"id": 666, "seek": 200596, "start": 2030.32, "end": 2033.2, "text": " is that I give you the correct y.", "tokens": [50364, 291, 528, 300, 2281, 281, 312, 1359, 11, 558, 30, 50526, 50526, 400, 337, 428, 38253, 9284, 281, 589, 11, 412, 1500, 565, 11, 50780, 50780, 286, 500, 380, 976, 291, 264, 288, 13, 50826, 50826, 286, 445, 976, 291, 264, 2031, 13, 50882, 50882, 400, 437, 291, 362, 281, 915, 307, 264, 288, 300, 50962, 50962, 575, 264, 16998, 2281, 13, 51030, 51030, 407, 337, 341, 281, 589, 11, 309, 575, 281, 312, 264, 1389, 51172, 51172, 300, 264, 3006, 288, 575, 264, 12437, 51268, 51268, 2281, 3654, 439, 1944, 288, 311, 13, 51366, 51366, 1779, 30, 51442, 51442, 407, 437, 286, 643, 281, 360, 586, 1830, 3097, 51582, 51582, 307, 300, 286, 976, 291, 264, 3006, 288, 13, 51726, 51726, 400, 437, 291, 643, 281, 360, 307, 976, 257, 2295, 2281, 281, 264, 3006, 288, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11898933572972074, "compression_ratio": 1.9327731092436975, "no_speech_prob": 3.611716920204344e-06}, {"id": 667, "seek": 200596, "start": 2033.2, "end": 2035.76, "text": " And what you need to do is give a low energy to the correct y", "tokens": [50364, 291, 528, 300, 2281, 281, 312, 1359, 11, 558, 30, 50526, 50526, 400, 337, 428, 38253, 9284, 281, 589, 11, 412, 1500, 565, 11, 50780, 50780, 286, 500, 380, 976, 291, 264, 288, 13, 50826, 50826, 286, 445, 976, 291, 264, 2031, 13, 50882, 50882, 400, 437, 291, 362, 281, 915, 307, 264, 288, 300, 50962, 50962, 575, 264, 16998, 2281, 13, 51030, 51030, 407, 337, 341, 281, 589, 11, 309, 575, 281, 312, 264, 1389, 51172, 51172, 300, 264, 3006, 288, 575, 264, 12437, 51268, 51268, 2281, 3654, 439, 1944, 288, 311, 13, 51366, 51366, 1779, 30, 51442, 51442, 407, 437, 286, 643, 281, 360, 586, 1830, 3097, 51582, 51582, 307, 300, 286, 976, 291, 264, 3006, 288, 13, 51726, 51726, 400, 437, 291, 643, 281, 360, 307, 976, 257, 2295, 2281, 281, 264, 3006, 288, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11898933572972074, "compression_ratio": 1.9327731092436975, "no_speech_prob": 3.611716920204344e-06}, {"id": 668, "seek": 203576, "start": 2035.76, "end": 2038.64, "text": " and give a higher energy to every other possible", "tokens": [50364, 293, 976, 257, 2946, 2281, 281, 633, 661, 1944, 50508, 50508, 11694, 295, 288, 13, 50636, 50636, 1779, 30, 50758, 50758, 400, 2293, 577, 291, 360, 341, 420, 577, 439, 729, 25737, 51012, 51012, 3242, 294, 428, 10024, 2445, 5946, 322, 264, 15961, 51224, 51224, 300, 291, 2826, 13, 51266, 51266, 492, 434, 516, 281, 808, 281, 341, 294, 257, 3456, 13, 51336, 51336, 2264, 30, 51364, 51364, 583, 1920, 3297, 11, 291, 434, 516, 51446, 51446, 281, 362, 472, 1433, 294, 428, 1036, 2445, 300, 311, 51546, 51546, 516, 281, 584, 11, 652, 264, 2281, 295, 264, 3006, 1867, 2295, 11, 51700, 51700, 293, 1071, 1433, 300, 311, 516, 281, 584, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11620250930134048, "compression_ratio": 1.7108433734939759, "no_speech_prob": 5.9549411162151955e-06}, {"id": 669, "seek": 203576, "start": 2038.64, "end": 2041.2, "text": " configuration of y.", "tokens": [50364, 293, 976, 257, 2946, 2281, 281, 633, 661, 1944, 50508, 50508, 11694, 295, 288, 13, 50636, 50636, 1779, 30, 50758, 50758, 400, 2293, 577, 291, 360, 341, 420, 577, 439, 729, 25737, 51012, 51012, 3242, 294, 428, 10024, 2445, 5946, 322, 264, 15961, 51224, 51224, 300, 291, 2826, 13, 51266, 51266, 492, 434, 516, 281, 808, 281, 341, 294, 257, 3456, 13, 51336, 51336, 2264, 30, 51364, 51364, 583, 1920, 3297, 11, 291, 434, 516, 51446, 51446, 281, 362, 472, 1433, 294, 428, 1036, 2445, 300, 311, 51546, 51546, 516, 281, 584, 11, 652, 264, 2281, 295, 264, 3006, 1867, 2295, 11, 51700, 51700, 293, 1071, 1433, 300, 311, 516, 281, 584, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11620250930134048, "compression_ratio": 1.7108433734939759, "no_speech_prob": 5.9549411162151955e-06}, {"id": 670, "seek": 203576, "start": 2041.2, "end": 2043.64, "text": " Right?", "tokens": [50364, 293, 976, 257, 2946, 2281, 281, 633, 661, 1944, 50508, 50508, 11694, 295, 288, 13, 50636, 50636, 1779, 30, 50758, 50758, 400, 2293, 577, 291, 360, 341, 420, 577, 439, 729, 25737, 51012, 51012, 3242, 294, 428, 10024, 2445, 5946, 322, 264, 15961, 51224, 51224, 300, 291, 2826, 13, 51266, 51266, 492, 434, 516, 281, 808, 281, 341, 294, 257, 3456, 13, 51336, 51336, 2264, 30, 51364, 51364, 583, 1920, 3297, 11, 291, 434, 516, 51446, 51446, 281, 362, 472, 1433, 294, 428, 1036, 2445, 300, 311, 51546, 51546, 516, 281, 584, 11, 652, 264, 2281, 295, 264, 3006, 1867, 2295, 11, 51700, 51700, 293, 1071, 1433, 300, 311, 516, 281, 584, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11620250930134048, "compression_ratio": 1.7108433734939759, "no_speech_prob": 5.9549411162151955e-06}, {"id": 671, "seek": 203576, "start": 2043.64, "end": 2048.72, "text": " And exactly how you do this or how all those energies", "tokens": [50364, 293, 976, 257, 2946, 2281, 281, 633, 661, 1944, 50508, 50508, 11694, 295, 288, 13, 50636, 50636, 1779, 30, 50758, 50758, 400, 2293, 577, 291, 360, 341, 420, 577, 439, 729, 25737, 51012, 51012, 3242, 294, 428, 10024, 2445, 5946, 322, 264, 15961, 51224, 51224, 300, 291, 2826, 13, 51266, 51266, 492, 434, 516, 281, 808, 281, 341, 294, 257, 3456, 13, 51336, 51336, 2264, 30, 51364, 51364, 583, 1920, 3297, 11, 291, 434, 516, 51446, 51446, 281, 362, 472, 1433, 294, 428, 1036, 2445, 300, 311, 51546, 51546, 516, 281, 584, 11, 652, 264, 2281, 295, 264, 3006, 1867, 2295, 11, 51700, 51700, 293, 1071, 1433, 300, 311, 516, 281, 584, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11620250930134048, "compression_ratio": 1.7108433734939759, "no_speech_prob": 5.9549411162151955e-06}, {"id": 672, "seek": 203576, "start": 2048.72, "end": 2052.96, "text": " enter in your objective function depends on the objectives", "tokens": [50364, 293, 976, 257, 2946, 2281, 281, 633, 661, 1944, 50508, 50508, 11694, 295, 288, 13, 50636, 50636, 1779, 30, 50758, 50758, 400, 2293, 577, 291, 360, 341, 420, 577, 439, 729, 25737, 51012, 51012, 3242, 294, 428, 10024, 2445, 5946, 322, 264, 15961, 51224, 51224, 300, 291, 2826, 13, 51266, 51266, 492, 434, 516, 281, 808, 281, 341, 294, 257, 3456, 13, 51336, 51336, 2264, 30, 51364, 51364, 583, 1920, 3297, 11, 291, 434, 516, 51446, 51446, 281, 362, 472, 1433, 294, 428, 1036, 2445, 300, 311, 51546, 51546, 516, 281, 584, 11, 652, 264, 2281, 295, 264, 3006, 1867, 2295, 11, 51700, 51700, 293, 1071, 1433, 300, 311, 516, 281, 584, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11620250930134048, "compression_ratio": 1.7108433734939759, "no_speech_prob": 5.9549411162151955e-06}, {"id": 673, "seek": 203576, "start": 2052.96, "end": 2053.8, "text": " that you choose.", "tokens": [50364, 293, 976, 257, 2946, 2281, 281, 633, 661, 1944, 50508, 50508, 11694, 295, 288, 13, 50636, 50636, 1779, 30, 50758, 50758, 400, 2293, 577, 291, 360, 341, 420, 577, 439, 729, 25737, 51012, 51012, 3242, 294, 428, 10024, 2445, 5946, 322, 264, 15961, 51224, 51224, 300, 291, 2826, 13, 51266, 51266, 492, 434, 516, 281, 808, 281, 341, 294, 257, 3456, 13, 51336, 51336, 2264, 30, 51364, 51364, 583, 1920, 3297, 11, 291, 434, 516, 51446, 51446, 281, 362, 472, 1433, 294, 428, 1036, 2445, 300, 311, 51546, 51546, 516, 281, 584, 11, 652, 264, 2281, 295, 264, 3006, 1867, 2295, 11, 51700, 51700, 293, 1071, 1433, 300, 311, 516, 281, 584, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11620250930134048, "compression_ratio": 1.7108433734939759, "no_speech_prob": 5.9549411162151955e-06}, {"id": 674, "seek": 203576, "start": 2053.8, "end": 2055.2, "text": " We're going to come to this in a minute.", "tokens": [50364, 293, 976, 257, 2946, 2281, 281, 633, 661, 1944, 50508, 50508, 11694, 295, 288, 13, 50636, 50636, 1779, 30, 50758, 50758, 400, 2293, 577, 291, 360, 341, 420, 577, 439, 729, 25737, 51012, 51012, 3242, 294, 428, 10024, 2445, 5946, 322, 264, 15961, 51224, 51224, 300, 291, 2826, 13, 51266, 51266, 492, 434, 516, 281, 808, 281, 341, 294, 257, 3456, 13, 51336, 51336, 2264, 30, 51364, 51364, 583, 1920, 3297, 11, 291, 434, 516, 51446, 51446, 281, 362, 472, 1433, 294, 428, 1036, 2445, 300, 311, 51546, 51546, 516, 281, 584, 11, 652, 264, 2281, 295, 264, 3006, 1867, 2295, 11, 51700, 51700, 293, 1071, 1433, 300, 311, 516, 281, 584, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11620250930134048, "compression_ratio": 1.7108433734939759, "no_speech_prob": 5.9549411162151955e-06}, {"id": 675, "seek": 203576, "start": 2055.2, "end": 2055.76, "text": " OK?", "tokens": [50364, 293, 976, 257, 2946, 2281, 281, 633, 661, 1944, 50508, 50508, 11694, 295, 288, 13, 50636, 50636, 1779, 30, 50758, 50758, 400, 2293, 577, 291, 360, 341, 420, 577, 439, 729, 25737, 51012, 51012, 3242, 294, 428, 10024, 2445, 5946, 322, 264, 15961, 51224, 51224, 300, 291, 2826, 13, 51266, 51266, 492, 434, 516, 281, 808, 281, 341, 294, 257, 3456, 13, 51336, 51336, 2264, 30, 51364, 51364, 583, 1920, 3297, 11, 291, 434, 516, 51446, 51446, 281, 362, 472, 1433, 294, 428, 1036, 2445, 300, 311, 51546, 51546, 516, 281, 584, 11, 652, 264, 2281, 295, 264, 3006, 1867, 2295, 11, 51700, 51700, 293, 1071, 1433, 300, 311, 516, 281, 584, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11620250930134048, "compression_ratio": 1.7108433734939759, "no_speech_prob": 5.9549411162151955e-06}, {"id": 676, "seek": 203576, "start": 2055.76, "end": 2057.4, "text": " But almost certainly, you're going", "tokens": [50364, 293, 976, 257, 2946, 2281, 281, 633, 661, 1944, 50508, 50508, 11694, 295, 288, 13, 50636, 50636, 1779, 30, 50758, 50758, 400, 2293, 577, 291, 360, 341, 420, 577, 439, 729, 25737, 51012, 51012, 3242, 294, 428, 10024, 2445, 5946, 322, 264, 15961, 51224, 51224, 300, 291, 2826, 13, 51266, 51266, 492, 434, 516, 281, 808, 281, 341, 294, 257, 3456, 13, 51336, 51336, 2264, 30, 51364, 51364, 583, 1920, 3297, 11, 291, 434, 516, 51446, 51446, 281, 362, 472, 1433, 294, 428, 1036, 2445, 300, 311, 51546, 51546, 516, 281, 584, 11, 652, 264, 2281, 295, 264, 3006, 1867, 2295, 11, 51700, 51700, 293, 1071, 1433, 300, 311, 516, 281, 584, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11620250930134048, "compression_ratio": 1.7108433734939759, "no_speech_prob": 5.9549411162151955e-06}, {"id": 677, "seek": 203576, "start": 2057.4, "end": 2059.4, "text": " to have one term in your last function that's", "tokens": [50364, 293, 976, 257, 2946, 2281, 281, 633, 661, 1944, 50508, 50508, 11694, 295, 288, 13, 50636, 50636, 1779, 30, 50758, 50758, 400, 2293, 577, 291, 360, 341, 420, 577, 439, 729, 25737, 51012, 51012, 3242, 294, 428, 10024, 2445, 5946, 322, 264, 15961, 51224, 51224, 300, 291, 2826, 13, 51266, 51266, 492, 434, 516, 281, 808, 281, 341, 294, 257, 3456, 13, 51336, 51336, 2264, 30, 51364, 51364, 583, 1920, 3297, 11, 291, 434, 516, 51446, 51446, 281, 362, 472, 1433, 294, 428, 1036, 2445, 300, 311, 51546, 51546, 516, 281, 584, 11, 652, 264, 2281, 295, 264, 3006, 1867, 2295, 11, 51700, 51700, 293, 1071, 1433, 300, 311, 516, 281, 584, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11620250930134048, "compression_ratio": 1.7108433734939759, "no_speech_prob": 5.9549411162151955e-06}, {"id": 678, "seek": 203576, "start": 2059.4, "end": 2062.48, "text": " going to say, make the energy of the correct answer low,", "tokens": [50364, 293, 976, 257, 2946, 2281, 281, 633, 661, 1944, 50508, 50508, 11694, 295, 288, 13, 50636, 50636, 1779, 30, 50758, 50758, 400, 2293, 577, 291, 360, 341, 420, 577, 439, 729, 25737, 51012, 51012, 3242, 294, 428, 10024, 2445, 5946, 322, 264, 15961, 51224, 51224, 300, 291, 2826, 13, 51266, 51266, 492, 434, 516, 281, 808, 281, 341, 294, 257, 3456, 13, 51336, 51336, 2264, 30, 51364, 51364, 583, 1920, 3297, 11, 291, 434, 516, 51446, 51446, 281, 362, 472, 1433, 294, 428, 1036, 2445, 300, 311, 51546, 51546, 516, 281, 584, 11, 652, 264, 2281, 295, 264, 3006, 1867, 2295, 11, 51700, 51700, 293, 1071, 1433, 300, 311, 516, 281, 584, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11620250930134048, "compression_ratio": 1.7108433734939759, "no_speech_prob": 5.9549411162151955e-06}, {"id": 679, "seek": 203576, "start": 2062.48, "end": 2064.4, "text": " and another term that's going to say,", "tokens": [50364, 293, 976, 257, 2946, 2281, 281, 633, 661, 1944, 50508, 50508, 11694, 295, 288, 13, 50636, 50636, 1779, 30, 50758, 50758, 400, 2293, 577, 291, 360, 341, 420, 577, 439, 729, 25737, 51012, 51012, 3242, 294, 428, 10024, 2445, 5946, 322, 264, 15961, 51224, 51224, 300, 291, 2826, 13, 51266, 51266, 492, 434, 516, 281, 808, 281, 341, 294, 257, 3456, 13, 51336, 51336, 2264, 30, 51364, 51364, 583, 1920, 3297, 11, 291, 434, 516, 51446, 51446, 281, 362, 472, 1433, 294, 428, 1036, 2445, 300, 311, 51546, 51546, 516, 281, 584, 11, 652, 264, 2281, 295, 264, 3006, 1867, 2295, 11, 51700, 51700, 293, 1071, 1433, 300, 311, 516, 281, 584, 11, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11620250930134048, "compression_ratio": 1.7108433734939759, "no_speech_prob": 5.9549411162151955e-06}, {"id": 680, "seek": 206440, "start": 2064.4, "end": 2067.76, "text": " make the energy of all the other answers or some of them high.", "tokens": [50364, 652, 264, 2281, 295, 439, 264, 661, 6338, 420, 512, 295, 552, 1090, 13, 50532, 50532, 400, 321, 2825, 466, 341, 1036, 565, 11, 767, 11, 1045, 3259, 2057, 13, 50720, 50720, 2264, 30, 50745, 50745, 583, 286, 478, 516, 281, 808, 646, 281, 309, 13, 50866, 50866, 1779, 30, 50946, 50946, 1119, 300, 1850, 11, 420, 360, 291, 643, 1071, 34449, 30, 51230, 51230, 286, 500, 380, 536, 604, 16972, 510, 13, 51296, 51518, 2264, 13, 51542, 51718, 1057, 558, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.2318727360215298, "compression_ratio": 1.4074074074074074, "no_speech_prob": 6.8524650487233885e-06}, {"id": 681, "seek": 206440, "start": 2067.76, "end": 2071.52, "text": " And we talked about this last time, actually, three weeks ago.", "tokens": [50364, 652, 264, 2281, 295, 439, 264, 661, 6338, 420, 512, 295, 552, 1090, 13, 50532, 50532, 400, 321, 2825, 466, 341, 1036, 565, 11, 767, 11, 1045, 3259, 2057, 13, 50720, 50720, 2264, 30, 50745, 50745, 583, 286, 478, 516, 281, 808, 646, 281, 309, 13, 50866, 50866, 1779, 30, 50946, 50946, 1119, 300, 1850, 11, 420, 360, 291, 643, 1071, 34449, 30, 51230, 51230, 286, 500, 380, 536, 604, 16972, 510, 13, 51296, 51518, 2264, 13, 51542, 51718, 1057, 558, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.2318727360215298, "compression_ratio": 1.4074074074074074, "no_speech_prob": 6.8524650487233885e-06}, {"id": 682, "seek": 206440, "start": 2071.52, "end": 2072.02, "text": " OK?", "tokens": [50364, 652, 264, 2281, 295, 439, 264, 661, 6338, 420, 512, 295, 552, 1090, 13, 50532, 50532, 400, 321, 2825, 466, 341, 1036, 565, 11, 767, 11, 1045, 3259, 2057, 13, 50720, 50720, 2264, 30, 50745, 50745, 583, 286, 478, 516, 281, 808, 646, 281, 309, 13, 50866, 50866, 1779, 30, 50946, 50946, 1119, 300, 1850, 11, 420, 360, 291, 643, 1071, 34449, 30, 51230, 51230, 286, 500, 380, 536, 604, 16972, 510, 13, 51296, 51518, 2264, 13, 51542, 51718, 1057, 558, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.2318727360215298, "compression_ratio": 1.4074074074074074, "no_speech_prob": 6.8524650487233885e-06}, {"id": 683, "seek": 206440, "start": 2072.02, "end": 2074.44, "text": " But I'm going to come back to it.", "tokens": [50364, 652, 264, 2281, 295, 439, 264, 661, 6338, 420, 512, 295, 552, 1090, 13, 50532, 50532, 400, 321, 2825, 466, 341, 1036, 565, 11, 767, 11, 1045, 3259, 2057, 13, 50720, 50720, 2264, 30, 50745, 50745, 583, 286, 478, 516, 281, 808, 646, 281, 309, 13, 50866, 50866, 1779, 30, 50946, 50946, 1119, 300, 1850, 11, 420, 360, 291, 643, 1071, 34449, 30, 51230, 51230, 286, 500, 380, 536, 604, 16972, 510, 13, 51296, 51518, 2264, 13, 51542, 51718, 1057, 558, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.2318727360215298, "compression_ratio": 1.4074074074074074, "no_speech_prob": 6.8524650487233885e-06}, {"id": 684, "seek": 206440, "start": 2074.44, "end": 2076.04, "text": " Right?", "tokens": [50364, 652, 264, 2281, 295, 439, 264, 661, 6338, 420, 512, 295, 552, 1090, 13, 50532, 50532, 400, 321, 2825, 466, 341, 1036, 565, 11, 767, 11, 1045, 3259, 2057, 13, 50720, 50720, 2264, 30, 50745, 50745, 583, 286, 478, 516, 281, 808, 646, 281, 309, 13, 50866, 50866, 1779, 30, 50946, 50946, 1119, 300, 1850, 11, 420, 360, 291, 643, 1071, 34449, 30, 51230, 51230, 286, 500, 380, 536, 604, 16972, 510, 13, 51296, 51518, 2264, 13, 51542, 51718, 1057, 558, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.2318727360215298, "compression_ratio": 1.4074074074074074, "no_speech_prob": 6.8524650487233885e-06}, {"id": 685, "seek": 206440, "start": 2076.04, "end": 2081.7200000000003, "text": " Is that clear, or do you need another clarification?", "tokens": [50364, 652, 264, 2281, 295, 439, 264, 661, 6338, 420, 512, 295, 552, 1090, 13, 50532, 50532, 400, 321, 2825, 466, 341, 1036, 565, 11, 767, 11, 1045, 3259, 2057, 13, 50720, 50720, 2264, 30, 50745, 50745, 583, 286, 478, 516, 281, 808, 646, 281, 309, 13, 50866, 50866, 1779, 30, 50946, 50946, 1119, 300, 1850, 11, 420, 360, 291, 643, 1071, 34449, 30, 51230, 51230, 286, 500, 380, 536, 604, 16972, 510, 13, 51296, 51518, 2264, 13, 51542, 51718, 1057, 558, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.2318727360215298, "compression_ratio": 1.4074074074074074, "no_speech_prob": 6.8524650487233885e-06}, {"id": 686, "seek": 206440, "start": 2081.7200000000003, "end": 2083.04, "text": " I don't see any reply here.", "tokens": [50364, 652, 264, 2281, 295, 439, 264, 661, 6338, 420, 512, 295, 552, 1090, 13, 50532, 50532, 400, 321, 2825, 466, 341, 1036, 565, 11, 767, 11, 1045, 3259, 2057, 13, 50720, 50720, 2264, 30, 50745, 50745, 583, 286, 478, 516, 281, 808, 646, 281, 309, 13, 50866, 50866, 1779, 30, 50946, 50946, 1119, 300, 1850, 11, 420, 360, 291, 643, 1071, 34449, 30, 51230, 51230, 286, 500, 380, 536, 604, 16972, 510, 13, 51296, 51518, 2264, 13, 51542, 51718, 1057, 558, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.2318727360215298, "compression_ratio": 1.4074074074074074, "no_speech_prob": 6.8524650487233885e-06}, {"id": 687, "seek": 206440, "start": 2087.48, "end": 2087.96, "text": " OK.", "tokens": [50364, 652, 264, 2281, 295, 439, 264, 661, 6338, 420, 512, 295, 552, 1090, 13, 50532, 50532, 400, 321, 2825, 466, 341, 1036, 565, 11, 767, 11, 1045, 3259, 2057, 13, 50720, 50720, 2264, 30, 50745, 50745, 583, 286, 478, 516, 281, 808, 646, 281, 309, 13, 50866, 50866, 1779, 30, 50946, 50946, 1119, 300, 1850, 11, 420, 360, 291, 643, 1071, 34449, 30, 51230, 51230, 286, 500, 380, 536, 604, 16972, 510, 13, 51296, 51518, 2264, 13, 51542, 51718, 1057, 558, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.2318727360215298, "compression_ratio": 1.4074074074074074, "no_speech_prob": 6.8524650487233885e-06}, {"id": 688, "seek": 206440, "start": 2091.48, "end": 2093.44, "text": " All right.", "tokens": [50364, 652, 264, 2281, 295, 439, 264, 661, 6338, 420, 512, 295, 552, 1090, 13, 50532, 50532, 400, 321, 2825, 466, 341, 1036, 565, 11, 767, 11, 1045, 3259, 2057, 13, 50720, 50720, 2264, 30, 50745, 50745, 583, 286, 478, 516, 281, 808, 646, 281, 309, 13, 50866, 50866, 1779, 30, 50946, 50946, 1119, 300, 1850, 11, 420, 360, 291, 643, 1071, 34449, 30, 51230, 51230, 286, 500, 380, 536, 604, 16972, 510, 13, 51296, 51518, 2264, 13, 51542, 51718, 1057, 558, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.2318727360215298, "compression_ratio": 1.4074074074074074, "no_speech_prob": 6.8524650487233885e-06}, {"id": 689, "seek": 209344, "start": 2093.44, "end": 2096.32, "text": " Another one would be, what if the factor graph is not", "tokens": [50364, 3996, 472, 576, 312, 11, 437, 498, 264, 5952, 4295, 307, 406, 50508, 50508, 1944, 30, 50552, 50552, 1144, 321, 362, 281, 3164, 337, 439, 1944, 6562, 295, 288, 311, 30, 50700, 50700, 2704, 286, 519, 341, 307, 264, 10957, 1389, 11, 286, 519, 13, 50876, 50876, 883, 11, 406, 4725, 13, 50930, 50930, 407, 286, 914, 11, 341, 1558, 295, 22867, 6110, 666, 25737, 51306, 51306, 611, 2709, 291, 364, 5002, 754, 294, 264, 1389, 51394, 51394, 295, 10957, 9102, 11, 558, 30, 51458, 51458, 1436, 291, 393, 360, 6695, 5028, 14455, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.14496067592075892, "compression_ratio": 1.5420168067226891, "no_speech_prob": 6.746719009242952e-06}, {"id": 690, "seek": 209344, "start": 2096.32, "end": 2097.2000000000003, "text": " possible?", "tokens": [50364, 3996, 472, 576, 312, 11, 437, 498, 264, 5952, 4295, 307, 406, 50508, 50508, 1944, 30, 50552, 50552, 1144, 321, 362, 281, 3164, 337, 439, 1944, 6562, 295, 288, 311, 30, 50700, 50700, 2704, 286, 519, 341, 307, 264, 10957, 1389, 11, 286, 519, 13, 50876, 50876, 883, 11, 406, 4725, 13, 50930, 50930, 407, 286, 914, 11, 341, 1558, 295, 22867, 6110, 666, 25737, 51306, 51306, 611, 2709, 291, 364, 5002, 754, 294, 264, 1389, 51394, 51394, 295, 10957, 9102, 11, 558, 30, 51458, 51458, 1436, 291, 393, 360, 6695, 5028, 14455, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.14496067592075892, "compression_ratio": 1.5420168067226891, "no_speech_prob": 6.746719009242952e-06}, {"id": 691, "seek": 209344, "start": 2097.2000000000003, "end": 2100.16, "text": " Do we have to search for all possible combination of y's?", "tokens": [50364, 3996, 472, 576, 312, 11, 437, 498, 264, 5952, 4295, 307, 406, 50508, 50508, 1944, 30, 50552, 50552, 1144, 321, 362, 281, 3164, 337, 439, 1944, 6562, 295, 288, 311, 30, 50700, 50700, 2704, 286, 519, 341, 307, 264, 10957, 1389, 11, 286, 519, 13, 50876, 50876, 883, 11, 406, 4725, 13, 50930, 50930, 407, 286, 914, 11, 341, 1558, 295, 22867, 6110, 666, 25737, 51306, 51306, 611, 2709, 291, 364, 5002, 754, 294, 264, 1389, 51394, 51394, 295, 10957, 9102, 11, 558, 30, 51458, 51458, 1436, 291, 393, 360, 6695, 5028, 14455, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.14496067592075892, "compression_ratio": 1.5420168067226891, "no_speech_prob": 6.746719009242952e-06}, {"id": 692, "seek": 209344, "start": 2100.16, "end": 2103.68, "text": " Maybe I think this is the continuous case, I think.", "tokens": [50364, 3996, 472, 576, 312, 11, 437, 498, 264, 5952, 4295, 307, 406, 50508, 50508, 1944, 30, 50552, 50552, 1144, 321, 362, 281, 3164, 337, 439, 1944, 6562, 295, 288, 311, 30, 50700, 50700, 2704, 286, 519, 341, 307, 264, 10957, 1389, 11, 286, 519, 13, 50876, 50876, 883, 11, 406, 4725, 13, 50930, 50930, 407, 286, 914, 11, 341, 1558, 295, 22867, 6110, 666, 25737, 51306, 51306, 611, 2709, 291, 364, 5002, 754, 294, 264, 1389, 51394, 51394, 295, 10957, 9102, 11, 558, 30, 51458, 51458, 1436, 291, 393, 360, 6695, 5028, 14455, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.14496067592075892, "compression_ratio": 1.5420168067226891, "no_speech_prob": 6.746719009242952e-06}, {"id": 693, "seek": 209344, "start": 2103.68, "end": 2104.76, "text": " No, not necessarily.", "tokens": [50364, 3996, 472, 576, 312, 11, 437, 498, 264, 5952, 4295, 307, 406, 50508, 50508, 1944, 30, 50552, 50552, 1144, 321, 362, 281, 3164, 337, 439, 1944, 6562, 295, 288, 311, 30, 50700, 50700, 2704, 286, 519, 341, 307, 264, 10957, 1389, 11, 286, 519, 13, 50876, 50876, 883, 11, 406, 4725, 13, 50930, 50930, 407, 286, 914, 11, 341, 1558, 295, 22867, 6110, 666, 25737, 51306, 51306, 611, 2709, 291, 364, 5002, 754, 294, 264, 1389, 51394, 51394, 295, 10957, 9102, 11, 558, 30, 51458, 51458, 1436, 291, 393, 360, 6695, 5028, 14455, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.14496067592075892, "compression_ratio": 1.5420168067226891, "no_speech_prob": 6.746719009242952e-06}, {"id": 694, "seek": 209344, "start": 2104.76, "end": 2112.28, "text": " So I mean, this idea of decomposing into energies", "tokens": [50364, 3996, 472, 576, 312, 11, 437, 498, 264, 5952, 4295, 307, 406, 50508, 50508, 1944, 30, 50552, 50552, 1144, 321, 362, 281, 3164, 337, 439, 1944, 6562, 295, 288, 311, 30, 50700, 50700, 2704, 286, 519, 341, 307, 264, 10957, 1389, 11, 286, 519, 13, 50876, 50876, 883, 11, 406, 4725, 13, 50930, 50930, 407, 286, 914, 11, 341, 1558, 295, 22867, 6110, 666, 25737, 51306, 51306, 611, 2709, 291, 364, 5002, 754, 294, 264, 1389, 51394, 51394, 295, 10957, 9102, 11, 558, 30, 51458, 51458, 1436, 291, 393, 360, 6695, 5028, 14455, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.14496067592075892, "compression_ratio": 1.5420168067226891, "no_speech_prob": 6.746719009242952e-06}, {"id": 695, "seek": 209344, "start": 2112.28, "end": 2114.04, "text": " also gives you an advantage even in the case", "tokens": [50364, 3996, 472, 576, 312, 11, 437, 498, 264, 5952, 4295, 307, 406, 50508, 50508, 1944, 30, 50552, 50552, 1144, 321, 362, 281, 3164, 337, 439, 1944, 6562, 295, 288, 311, 30, 50700, 50700, 2704, 286, 519, 341, 307, 264, 10957, 1389, 11, 286, 519, 13, 50876, 50876, 883, 11, 406, 4725, 13, 50930, 50930, 407, 286, 914, 11, 341, 1558, 295, 22867, 6110, 666, 25737, 51306, 51306, 611, 2709, 291, 364, 5002, 754, 294, 264, 1389, 51394, 51394, 295, 10957, 9102, 11, 558, 30, 51458, 51458, 1436, 291, 393, 360, 6695, 5028, 14455, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.14496067592075892, "compression_ratio": 1.5420168067226891, "no_speech_prob": 6.746719009242952e-06}, {"id": 696, "seek": 209344, "start": 2114.04, "end": 2115.32, "text": " of continuous variables, right?", "tokens": [50364, 3996, 472, 576, 312, 11, 437, 498, 264, 5952, 4295, 307, 406, 50508, 50508, 1944, 30, 50552, 50552, 1144, 321, 362, 281, 3164, 337, 439, 1944, 6562, 295, 288, 311, 30, 50700, 50700, 2704, 286, 519, 341, 307, 264, 10957, 1389, 11, 286, 519, 13, 50876, 50876, 883, 11, 406, 4725, 13, 50930, 50930, 407, 286, 914, 11, 341, 1558, 295, 22867, 6110, 666, 25737, 51306, 51306, 611, 2709, 291, 364, 5002, 754, 294, 264, 1389, 51394, 51394, 295, 10957, 9102, 11, 558, 30, 51458, 51458, 1436, 291, 393, 360, 6695, 5028, 14455, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.14496067592075892, "compression_ratio": 1.5420168067226891, "no_speech_prob": 6.746719009242952e-06}, {"id": 697, "seek": 209344, "start": 2115.32, "end": 2119.2000000000003, "text": " Because you can do independent optimizations.", "tokens": [50364, 3996, 472, 576, 312, 11, 437, 498, 264, 5952, 4295, 307, 406, 50508, 50508, 1944, 30, 50552, 50552, 1144, 321, 362, 281, 3164, 337, 439, 1944, 6562, 295, 288, 311, 30, 50700, 50700, 2704, 286, 519, 341, 307, 264, 10957, 1389, 11, 286, 519, 13, 50876, 50876, 883, 11, 406, 4725, 13, 50930, 50930, 407, 286, 914, 11, 341, 1558, 295, 22867, 6110, 666, 25737, 51306, 51306, 611, 2709, 291, 364, 5002, 754, 294, 264, 1389, 51394, 51394, 295, 10957, 9102, 11, 558, 30, 51458, 51458, 1436, 291, 393, 360, 6695, 5028, 14455, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.14496067592075892, "compression_ratio": 1.5420168067226891, "no_speech_prob": 6.746719009242952e-06}, {"id": 698, "seek": 211920, "start": 2119.2, "end": 2126.72, "text": " Like the combination of values of z1 and z2 only affects EV,", "tokens": [50364, 1743, 264, 6562, 295, 4190, 295, 710, 16, 293, 710, 17, 787, 11807, 15733, 11, 50740, 50740, 754, 498, 710, 16, 293, 710, 17, 366, 10957, 13, 50848, 50848, 400, 370, 291, 393, 360, 257, 707, 857, 295, 264, 10344, 50982, 50982, 295, 8546, 9410, 456, 13, 51050, 51050, 467, 311, 257, 707, 544, 6179, 294, 264, 10957, 1389, 11, 51190, 51190, 457, 309, 727, 312, 1944, 13, 51318, 51318, 865, 11, 286, 914, 11, 264, 5855, 2590, 51400, 51400, 307, 562, 439, 264, 710, 311, 293, 264, 288, 311, 3242, 257, 7410, 5952, 11, 51652, 51652, 293, 456, 307, 572, 636, 295, 5952, 3319, 309, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14960747796135979, "compression_ratio": 1.5809128630705394, "no_speech_prob": 1.1477240150270518e-05}, {"id": 699, "seek": 211920, "start": 2126.72, "end": 2128.8799999999997, "text": " even if z1 and z2 are continuous.", "tokens": [50364, 1743, 264, 6562, 295, 4190, 295, 710, 16, 293, 710, 17, 787, 11807, 15733, 11, 50740, 50740, 754, 498, 710, 16, 293, 710, 17, 366, 10957, 13, 50848, 50848, 400, 370, 291, 393, 360, 257, 707, 857, 295, 264, 10344, 50982, 50982, 295, 8546, 9410, 456, 13, 51050, 51050, 467, 311, 257, 707, 544, 6179, 294, 264, 10957, 1389, 11, 51190, 51190, 457, 309, 727, 312, 1944, 13, 51318, 51318, 865, 11, 286, 914, 11, 264, 5855, 2590, 51400, 51400, 307, 562, 439, 264, 710, 311, 293, 264, 288, 311, 3242, 257, 7410, 5952, 11, 51652, 51652, 293, 456, 307, 572, 636, 295, 5952, 3319, 309, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14960747796135979, "compression_ratio": 1.5809128630705394, "no_speech_prob": 1.1477240150270518e-05}, {"id": 700, "seek": 211920, "start": 2128.8799999999997, "end": 2131.56, "text": " And so you can do a little bit of the equivalent", "tokens": [50364, 1743, 264, 6562, 295, 4190, 295, 710, 16, 293, 710, 17, 787, 11807, 15733, 11, 50740, 50740, 754, 498, 710, 16, 293, 710, 17, 366, 10957, 13, 50848, 50848, 400, 370, 291, 393, 360, 257, 707, 857, 295, 264, 10344, 50982, 50982, 295, 8546, 9410, 456, 13, 51050, 51050, 467, 311, 257, 707, 544, 6179, 294, 264, 10957, 1389, 11, 51190, 51190, 457, 309, 727, 312, 1944, 13, 51318, 51318, 865, 11, 286, 914, 11, 264, 5855, 2590, 51400, 51400, 307, 562, 439, 264, 710, 311, 293, 264, 288, 311, 3242, 257, 7410, 5952, 11, 51652, 51652, 293, 456, 307, 572, 636, 295, 5952, 3319, 309, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14960747796135979, "compression_ratio": 1.5809128630705394, "no_speech_prob": 1.1477240150270518e-05}, {"id": 701, "seek": 211920, "start": 2131.56, "end": 2132.9199999999996, "text": " of dynamic programming there.", "tokens": [50364, 1743, 264, 6562, 295, 4190, 295, 710, 16, 293, 710, 17, 787, 11807, 15733, 11, 50740, 50740, 754, 498, 710, 16, 293, 710, 17, 366, 10957, 13, 50848, 50848, 400, 370, 291, 393, 360, 257, 707, 857, 295, 264, 10344, 50982, 50982, 295, 8546, 9410, 456, 13, 51050, 51050, 467, 311, 257, 707, 544, 6179, 294, 264, 10957, 1389, 11, 51190, 51190, 457, 309, 727, 312, 1944, 13, 51318, 51318, 865, 11, 286, 914, 11, 264, 5855, 2590, 51400, 51400, 307, 562, 439, 264, 710, 311, 293, 264, 288, 311, 3242, 257, 7410, 5952, 11, 51652, 51652, 293, 456, 307, 572, 636, 295, 5952, 3319, 309, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14960747796135979, "compression_ratio": 1.5809128630705394, "no_speech_prob": 1.1477240150270518e-05}, {"id": 702, "seek": 211920, "start": 2132.9199999999996, "end": 2135.72, "text": " It's a little more complicated in the continuous case,", "tokens": [50364, 1743, 264, 6562, 295, 4190, 295, 710, 16, 293, 710, 17, 787, 11807, 15733, 11, 50740, 50740, 754, 498, 710, 16, 293, 710, 17, 366, 10957, 13, 50848, 50848, 400, 370, 291, 393, 360, 257, 707, 857, 295, 264, 10344, 50982, 50982, 295, 8546, 9410, 456, 13, 51050, 51050, 467, 311, 257, 707, 544, 6179, 294, 264, 10957, 1389, 11, 51190, 51190, 457, 309, 727, 312, 1944, 13, 51318, 51318, 865, 11, 286, 914, 11, 264, 5855, 2590, 51400, 51400, 307, 562, 439, 264, 710, 311, 293, 264, 288, 311, 3242, 257, 7410, 5952, 11, 51652, 51652, 293, 456, 307, 572, 636, 295, 5952, 3319, 309, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14960747796135979, "compression_ratio": 1.5809128630705394, "no_speech_prob": 1.1477240150270518e-05}, {"id": 703, "seek": 211920, "start": 2135.72, "end": 2138.2799999999997, "text": " but it could be possible.", "tokens": [50364, 1743, 264, 6562, 295, 4190, 295, 710, 16, 293, 710, 17, 787, 11807, 15733, 11, 50740, 50740, 754, 498, 710, 16, 293, 710, 17, 366, 10957, 13, 50848, 50848, 400, 370, 291, 393, 360, 257, 707, 857, 295, 264, 10344, 50982, 50982, 295, 8546, 9410, 456, 13, 51050, 51050, 467, 311, 257, 707, 544, 6179, 294, 264, 10957, 1389, 11, 51190, 51190, 457, 309, 727, 312, 1944, 13, 51318, 51318, 865, 11, 286, 914, 11, 264, 5855, 2590, 51400, 51400, 307, 562, 439, 264, 710, 311, 293, 264, 288, 311, 3242, 257, 7410, 5952, 11, 51652, 51652, 293, 456, 307, 572, 636, 295, 5952, 3319, 309, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14960747796135979, "compression_ratio": 1.5809128630705394, "no_speech_prob": 1.1477240150270518e-05}, {"id": 704, "seek": 211920, "start": 2138.2799999999997, "end": 2139.9199999999996, "text": " Yeah, I mean, the worst situation", "tokens": [50364, 1743, 264, 6562, 295, 4190, 295, 710, 16, 293, 710, 17, 787, 11807, 15733, 11, 50740, 50740, 754, 498, 710, 16, 293, 710, 17, 366, 10957, 13, 50848, 50848, 400, 370, 291, 393, 360, 257, 707, 857, 295, 264, 10344, 50982, 50982, 295, 8546, 9410, 456, 13, 51050, 51050, 467, 311, 257, 707, 544, 6179, 294, 264, 10957, 1389, 11, 51190, 51190, 457, 309, 727, 312, 1944, 13, 51318, 51318, 865, 11, 286, 914, 11, 264, 5855, 2590, 51400, 51400, 307, 562, 439, 264, 710, 311, 293, 264, 288, 311, 3242, 257, 7410, 5952, 11, 51652, 51652, 293, 456, 307, 572, 636, 295, 5952, 3319, 309, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14960747796135979, "compression_ratio": 1.5809128630705394, "no_speech_prob": 1.1477240150270518e-05}, {"id": 705, "seek": 211920, "start": 2139.9199999999996, "end": 2144.96, "text": " is when all the z's and the y's enter a giant factor,", "tokens": [50364, 1743, 264, 6562, 295, 4190, 295, 710, 16, 293, 710, 17, 787, 11807, 15733, 11, 50740, 50740, 754, 498, 710, 16, 293, 710, 17, 366, 10957, 13, 50848, 50848, 400, 370, 291, 393, 360, 257, 707, 857, 295, 264, 10344, 50982, 50982, 295, 8546, 9410, 456, 13, 51050, 51050, 467, 311, 257, 707, 544, 6179, 294, 264, 10957, 1389, 11, 51190, 51190, 457, 309, 727, 312, 1944, 13, 51318, 51318, 865, 11, 286, 914, 11, 264, 5855, 2590, 51400, 51400, 307, 562, 439, 264, 710, 311, 293, 264, 288, 311, 3242, 257, 7410, 5952, 11, 51652, 51652, 293, 456, 307, 572, 636, 295, 5952, 3319, 309, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14960747796135979, "compression_ratio": 1.5809128630705394, "no_speech_prob": 1.1477240150270518e-05}, {"id": 706, "seek": 211920, "start": 2144.96, "end": 2147.72, "text": " and there is no way of factorizing it.", "tokens": [50364, 1743, 264, 6562, 295, 4190, 295, 710, 16, 293, 710, 17, 787, 11807, 15733, 11, 50740, 50740, 754, 498, 710, 16, 293, 710, 17, 366, 10957, 13, 50848, 50848, 400, 370, 291, 393, 360, 257, 707, 857, 295, 264, 10344, 50982, 50982, 295, 8546, 9410, 456, 13, 51050, 51050, 467, 311, 257, 707, 544, 6179, 294, 264, 10957, 1389, 11, 51190, 51190, 457, 309, 727, 312, 1944, 13, 51318, 51318, 865, 11, 286, 914, 11, 264, 5855, 2590, 51400, 51400, 307, 562, 439, 264, 710, 311, 293, 264, 288, 311, 3242, 257, 7410, 5952, 11, 51652, 51652, 293, 456, 307, 572, 636, 295, 5952, 3319, 309, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14960747796135979, "compression_ratio": 1.5809128630705394, "no_speech_prob": 1.1477240150270518e-05}, {"id": 707, "seek": 214772, "start": 2147.72, "end": 2150.2799999999997, "text": " And then you have to do exhaustive search", "tokens": [50364, 400, 550, 291, 362, 281, 360, 14687, 488, 3164, 50492, 50492, 420, 512, 30874, 3164, 415, 374, 6006, 11, 2264, 30, 50724, 50724, 682, 5158, 9284, 300, 4464, 5660, 264, 2281, 13, 50864, 50864, 865, 11, 300, 390, 767, 264, 1389, 13, 50952, 50952, 440, 3107, 390, 13761, 309, 13, 51028, 51028, 400, 264, 661, 3107, 307, 611, 11239, 13, 51130, 51130, 407, 291, 1867, 1293, 1651, 13, 51340, 51340, 865, 11, 500, 380, 20842, 281, 1029, 498, 291, 51418, 51418, 630, 746, 300, 311, 406, 1850, 13, 51520, 51520, 2264, 11, 370, 510, 307, 364, 5197, 295, 341, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18208953050466684, "compression_ratio": 1.550420168067227, "no_speech_prob": 1.2804244761355221e-05}, {"id": 708, "seek": 214772, "start": 2150.2799999999997, "end": 2154.9199999999996, "text": " or some approximate search heuristics, OK?", "tokens": [50364, 400, 550, 291, 362, 281, 360, 14687, 488, 3164, 50492, 50492, 420, 512, 30874, 3164, 415, 374, 6006, 11, 2264, 30, 50724, 50724, 682, 5158, 9284, 300, 4464, 5660, 264, 2281, 13, 50864, 50864, 865, 11, 300, 390, 767, 264, 1389, 13, 50952, 50952, 440, 3107, 390, 13761, 309, 13, 51028, 51028, 400, 264, 661, 3107, 307, 611, 11239, 13, 51130, 51130, 407, 291, 1867, 1293, 1651, 13, 51340, 51340, 865, 11, 500, 380, 20842, 281, 1029, 498, 291, 51418, 51418, 630, 746, 300, 311, 406, 1850, 13, 51520, 51520, 2264, 11, 370, 510, 307, 364, 5197, 295, 341, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18208953050466684, "compression_ratio": 1.550420168067227, "no_speech_prob": 1.2804244761355221e-05}, {"id": 709, "seek": 214772, "start": 2154.9199999999996, "end": 2157.72, "text": " Inference algorithm that minimizes the energy.", "tokens": [50364, 400, 550, 291, 362, 281, 360, 14687, 488, 3164, 50492, 50492, 420, 512, 30874, 3164, 415, 374, 6006, 11, 2264, 30, 50724, 50724, 682, 5158, 9284, 300, 4464, 5660, 264, 2281, 13, 50864, 50864, 865, 11, 300, 390, 767, 264, 1389, 13, 50952, 50952, 440, 3107, 390, 13761, 309, 13, 51028, 51028, 400, 264, 661, 3107, 307, 611, 11239, 13, 51130, 51130, 407, 291, 1867, 1293, 1651, 13, 51340, 51340, 865, 11, 500, 380, 20842, 281, 1029, 498, 291, 51418, 51418, 630, 746, 300, 311, 406, 1850, 13, 51520, 51520, 2264, 11, 370, 510, 307, 364, 5197, 295, 341, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18208953050466684, "compression_ratio": 1.550420168067227, "no_speech_prob": 1.2804244761355221e-05}, {"id": 710, "seek": 214772, "start": 2157.72, "end": 2159.48, "text": " Yeah, that was actually the case.", "tokens": [50364, 400, 550, 291, 362, 281, 360, 14687, 488, 3164, 50492, 50492, 420, 512, 30874, 3164, 415, 374, 6006, 11, 2264, 30, 50724, 50724, 682, 5158, 9284, 300, 4464, 5660, 264, 2281, 13, 50864, 50864, 865, 11, 300, 390, 767, 264, 1389, 13, 50952, 50952, 440, 3107, 390, 13761, 309, 13, 51028, 51028, 400, 264, 661, 3107, 307, 611, 11239, 13, 51130, 51130, 407, 291, 1867, 1293, 1651, 13, 51340, 51340, 865, 11, 500, 380, 20842, 281, 1029, 498, 291, 51418, 51418, 630, 746, 300, 311, 406, 1850, 13, 51520, 51520, 2264, 11, 370, 510, 307, 364, 5197, 295, 341, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18208953050466684, "compression_ratio": 1.550420168067227, "no_speech_prob": 1.2804244761355221e-05}, {"id": 711, "seek": 214772, "start": 2159.48, "end": 2161.0, "text": " The student was referring it.", "tokens": [50364, 400, 550, 291, 362, 281, 360, 14687, 488, 3164, 50492, 50492, 420, 512, 30874, 3164, 415, 374, 6006, 11, 2264, 30, 50724, 50724, 682, 5158, 9284, 300, 4464, 5660, 264, 2281, 13, 50864, 50864, 865, 11, 300, 390, 767, 264, 1389, 13, 50952, 50952, 440, 3107, 390, 13761, 309, 13, 51028, 51028, 400, 264, 661, 3107, 307, 611, 11239, 13, 51130, 51130, 407, 291, 1867, 1293, 1651, 13, 51340, 51340, 865, 11, 500, 380, 20842, 281, 1029, 498, 291, 51418, 51418, 630, 746, 300, 311, 406, 1850, 13, 51520, 51520, 2264, 11, 370, 510, 307, 364, 5197, 295, 341, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18208953050466684, "compression_ratio": 1.550420168067227, "no_speech_prob": 1.2804244761355221e-05}, {"id": 712, "seek": 214772, "start": 2161.0, "end": 2163.04, "text": " And the other student is also satisfied.", "tokens": [50364, 400, 550, 291, 362, 281, 360, 14687, 488, 3164, 50492, 50492, 420, 512, 30874, 3164, 415, 374, 6006, 11, 2264, 30, 50724, 50724, 682, 5158, 9284, 300, 4464, 5660, 264, 2281, 13, 50864, 50864, 865, 11, 300, 390, 767, 264, 1389, 13, 50952, 50952, 440, 3107, 390, 13761, 309, 13, 51028, 51028, 400, 264, 661, 3107, 307, 611, 11239, 13, 51130, 51130, 407, 291, 1867, 1293, 1651, 13, 51340, 51340, 865, 11, 500, 380, 20842, 281, 1029, 498, 291, 51418, 51418, 630, 746, 300, 311, 406, 1850, 13, 51520, 51520, 2264, 11, 370, 510, 307, 364, 5197, 295, 341, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18208953050466684, "compression_ratio": 1.550420168067227, "no_speech_prob": 1.2804244761355221e-05}, {"id": 713, "seek": 214772, "start": 2163.04, "end": 2167.24, "text": " So you answer both questions.", "tokens": [50364, 400, 550, 291, 362, 281, 360, 14687, 488, 3164, 50492, 50492, 420, 512, 30874, 3164, 415, 374, 6006, 11, 2264, 30, 50724, 50724, 682, 5158, 9284, 300, 4464, 5660, 264, 2281, 13, 50864, 50864, 865, 11, 300, 390, 767, 264, 1389, 13, 50952, 50952, 440, 3107, 390, 13761, 309, 13, 51028, 51028, 400, 264, 661, 3107, 307, 611, 11239, 13, 51130, 51130, 407, 291, 1867, 1293, 1651, 13, 51340, 51340, 865, 11, 500, 380, 20842, 281, 1029, 498, 291, 51418, 51418, 630, 746, 300, 311, 406, 1850, 13, 51520, 51520, 2264, 11, 370, 510, 307, 364, 5197, 295, 341, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18208953050466684, "compression_ratio": 1.550420168067227, "no_speech_prob": 1.2804244761355221e-05}, {"id": 714, "seek": 214772, "start": 2167.24, "end": 2168.7999999999997, "text": " Yeah, don't hesitate to ask if you", "tokens": [50364, 400, 550, 291, 362, 281, 360, 14687, 488, 3164, 50492, 50492, 420, 512, 30874, 3164, 415, 374, 6006, 11, 2264, 30, 50724, 50724, 682, 5158, 9284, 300, 4464, 5660, 264, 2281, 13, 50864, 50864, 865, 11, 300, 390, 767, 264, 1389, 13, 50952, 50952, 440, 3107, 390, 13761, 309, 13, 51028, 51028, 400, 264, 661, 3107, 307, 611, 11239, 13, 51130, 51130, 407, 291, 1867, 1293, 1651, 13, 51340, 51340, 865, 11, 500, 380, 20842, 281, 1029, 498, 291, 51418, 51418, 630, 746, 300, 311, 406, 1850, 13, 51520, 51520, 2264, 11, 370, 510, 307, 364, 5197, 295, 341, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18208953050466684, "compression_ratio": 1.550420168067227, "no_speech_prob": 1.2804244761355221e-05}, {"id": 715, "seek": 214772, "start": 2168.7999999999997, "end": 2170.8399999999997, "text": " did something that's not clear.", "tokens": [50364, 400, 550, 291, 362, 281, 360, 14687, 488, 3164, 50492, 50492, 420, 512, 30874, 3164, 415, 374, 6006, 11, 2264, 30, 50724, 50724, 682, 5158, 9284, 300, 4464, 5660, 264, 2281, 13, 50864, 50864, 865, 11, 300, 390, 767, 264, 1389, 13, 50952, 50952, 440, 3107, 390, 13761, 309, 13, 51028, 51028, 400, 264, 661, 3107, 307, 611, 11239, 13, 51130, 51130, 407, 291, 1867, 1293, 1651, 13, 51340, 51340, 865, 11, 500, 380, 20842, 281, 1029, 498, 291, 51418, 51418, 630, 746, 300, 311, 406, 1850, 13, 51520, 51520, 2264, 11, 370, 510, 307, 364, 5197, 295, 341, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18208953050466684, "compression_ratio": 1.550420168067227, "no_speech_prob": 1.2804244761355221e-05}, {"id": 716, "seek": 214772, "start": 2170.8399999999997, "end": 2175.2799999999997, "text": " OK, so here is an instance of this.", "tokens": [50364, 400, 550, 291, 362, 281, 360, 14687, 488, 3164, 50492, 50492, 420, 512, 30874, 3164, 415, 374, 6006, 11, 2264, 30, 50724, 50724, 682, 5158, 9284, 300, 4464, 5660, 264, 2281, 13, 50864, 50864, 865, 11, 300, 390, 767, 264, 1389, 13, 50952, 50952, 440, 3107, 390, 13761, 309, 13, 51028, 51028, 400, 264, 661, 3107, 307, 611, 11239, 13, 51130, 51130, 407, 291, 1867, 1293, 1651, 13, 51340, 51340, 865, 11, 500, 380, 20842, 281, 1029, 498, 291, 51418, 51418, 630, 746, 300, 311, 406, 1850, 13, 51520, 51520, 2264, 11, 370, 510, 307, 364, 5197, 295, 341, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18208953050466684, "compression_ratio": 1.550420168067227, "no_speech_prob": 1.2804244761355221e-05}, {"id": 717, "seek": 217528, "start": 2175.28, "end": 2177.84, "text": " And if you encounter this in the literature,", "tokens": [50364, 400, 498, 291, 8593, 341, 294, 264, 10394, 11, 50492, 50492, 291, 603, 458, 437, 309, 307, 13, 50536, 50536, 467, 311, 1219, 257, 27708, 4974, 2519, 13, 50644, 50644, 407, 27708, 4974, 2519, 307, 257, 588, 2121, 2010, 50808, 50808, 295, 1270, 3877, 17630, 2316, 11, 689, 510, 291, 362, 288, 311, 51088, 51088, 420, 710, 311, 13, 51114, 51114, 12955, 380, 1871, 13, 51156, 51156, 1692, 456, 366, 787, 288, 311, 13, 51244, 51244, 583, 264, 636, 729, 6771, 366, 13075, 1602, 51438, 51438, 307, 300, 456, 307, 257, 6806, 4111, 8947, 284, 13, 51566, 51566, 467, 311, 1219, 283, 295, 2031, 11, 288, 16, 11, 288, 17, 294, 341, 1389, 510, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1809490909095572, "compression_ratio": 1.6680497925311204, "no_speech_prob": 1.5204361261567101e-05}, {"id": 718, "seek": 217528, "start": 2177.84, "end": 2178.7200000000003, "text": " you'll know what it is.", "tokens": [50364, 400, 498, 291, 8593, 341, 294, 264, 10394, 11, 50492, 50492, 291, 603, 458, 437, 309, 307, 13, 50536, 50536, 467, 311, 1219, 257, 27708, 4974, 2519, 13, 50644, 50644, 407, 27708, 4974, 2519, 307, 257, 588, 2121, 2010, 50808, 50808, 295, 1270, 3877, 17630, 2316, 11, 689, 510, 291, 362, 288, 311, 51088, 51088, 420, 710, 311, 13, 51114, 51114, 12955, 380, 1871, 13, 51156, 51156, 1692, 456, 366, 787, 288, 311, 13, 51244, 51244, 583, 264, 636, 729, 6771, 366, 13075, 1602, 51438, 51438, 307, 300, 456, 307, 257, 6806, 4111, 8947, 284, 13, 51566, 51566, 467, 311, 1219, 283, 295, 2031, 11, 288, 16, 11, 288, 17, 294, 341, 1389, 510, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1809490909095572, "compression_ratio": 1.6680497925311204, "no_speech_prob": 1.5204361261567101e-05}, {"id": 719, "seek": 217528, "start": 2178.7200000000003, "end": 2180.88, "text": " It's called a conditional random field.", "tokens": [50364, 400, 498, 291, 8593, 341, 294, 264, 10394, 11, 50492, 50492, 291, 603, 458, 437, 309, 307, 13, 50536, 50536, 467, 311, 1219, 257, 27708, 4974, 2519, 13, 50644, 50644, 407, 27708, 4974, 2519, 307, 257, 588, 2121, 2010, 50808, 50808, 295, 1270, 3877, 17630, 2316, 11, 689, 510, 291, 362, 288, 311, 51088, 51088, 420, 710, 311, 13, 51114, 51114, 12955, 380, 1871, 13, 51156, 51156, 1692, 456, 366, 787, 288, 311, 13, 51244, 51244, 583, 264, 636, 729, 6771, 366, 13075, 1602, 51438, 51438, 307, 300, 456, 307, 257, 6806, 4111, 8947, 284, 13, 51566, 51566, 467, 311, 1219, 283, 295, 2031, 11, 288, 16, 11, 288, 17, 294, 341, 1389, 510, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1809490909095572, "compression_ratio": 1.6680497925311204, "no_speech_prob": 1.5204361261567101e-05}, {"id": 720, "seek": 217528, "start": 2180.88, "end": 2184.1600000000003, "text": " So conditional random field is a very special type", "tokens": [50364, 400, 498, 291, 8593, 341, 294, 264, 10394, 11, 50492, 50492, 291, 603, 458, 437, 309, 307, 13, 50536, 50536, 467, 311, 1219, 257, 27708, 4974, 2519, 13, 50644, 50644, 407, 27708, 4974, 2519, 307, 257, 588, 2121, 2010, 50808, 50808, 295, 1270, 3877, 17630, 2316, 11, 689, 510, 291, 362, 288, 311, 51088, 51088, 420, 710, 311, 13, 51114, 51114, 12955, 380, 1871, 13, 51156, 51156, 1692, 456, 366, 787, 288, 311, 13, 51244, 51244, 583, 264, 636, 729, 6771, 366, 13075, 1602, 51438, 51438, 307, 300, 456, 307, 257, 6806, 4111, 8947, 284, 13, 51566, 51566, 467, 311, 1219, 283, 295, 2031, 11, 288, 16, 11, 288, 17, 294, 341, 1389, 510, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1809490909095572, "compression_ratio": 1.6680497925311204, "no_speech_prob": 1.5204361261567101e-05}, {"id": 721, "seek": 217528, "start": 2184.1600000000003, "end": 2189.76, "text": " of such structure prediction model, where here you have y's", "tokens": [50364, 400, 498, 291, 8593, 341, 294, 264, 10394, 11, 50492, 50492, 291, 603, 458, 437, 309, 307, 13, 50536, 50536, 467, 311, 1219, 257, 27708, 4974, 2519, 13, 50644, 50644, 407, 27708, 4974, 2519, 307, 257, 588, 2121, 2010, 50808, 50808, 295, 1270, 3877, 17630, 2316, 11, 689, 510, 291, 362, 288, 311, 51088, 51088, 420, 710, 311, 13, 51114, 51114, 12955, 380, 1871, 13, 51156, 51156, 1692, 456, 366, 787, 288, 311, 13, 51244, 51244, 583, 264, 636, 729, 6771, 366, 13075, 1602, 51438, 51438, 307, 300, 456, 307, 257, 6806, 4111, 8947, 284, 13, 51566, 51566, 467, 311, 1219, 283, 295, 2031, 11, 288, 16, 11, 288, 17, 294, 341, 1389, 510, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1809490909095572, "compression_ratio": 1.6680497925311204, "no_speech_prob": 1.5204361261567101e-05}, {"id": 722, "seek": 217528, "start": 2189.76, "end": 2190.28, "text": " or z's.", "tokens": [50364, 400, 498, 291, 8593, 341, 294, 264, 10394, 11, 50492, 50492, 291, 603, 458, 437, 309, 307, 13, 50536, 50536, 467, 311, 1219, 257, 27708, 4974, 2519, 13, 50644, 50644, 407, 27708, 4974, 2519, 307, 257, 588, 2121, 2010, 50808, 50808, 295, 1270, 3877, 17630, 2316, 11, 689, 510, 291, 362, 288, 311, 51088, 51088, 420, 710, 311, 13, 51114, 51114, 12955, 380, 1871, 13, 51156, 51156, 1692, 456, 366, 787, 288, 311, 13, 51244, 51244, 583, 264, 636, 729, 6771, 366, 13075, 1602, 51438, 51438, 307, 300, 456, 307, 257, 6806, 4111, 8947, 284, 13, 51566, 51566, 467, 311, 1219, 283, 295, 2031, 11, 288, 16, 11, 288, 17, 294, 341, 1389, 510, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1809490909095572, "compression_ratio": 1.6680497925311204, "no_speech_prob": 1.5204361261567101e-05}, {"id": 723, "seek": 217528, "start": 2190.28, "end": 2191.1200000000003, "text": " Doesn't matter.", "tokens": [50364, 400, 498, 291, 8593, 341, 294, 264, 10394, 11, 50492, 50492, 291, 603, 458, 437, 309, 307, 13, 50536, 50536, 467, 311, 1219, 257, 27708, 4974, 2519, 13, 50644, 50644, 407, 27708, 4974, 2519, 307, 257, 588, 2121, 2010, 50808, 50808, 295, 1270, 3877, 17630, 2316, 11, 689, 510, 291, 362, 288, 311, 51088, 51088, 420, 710, 311, 13, 51114, 51114, 12955, 380, 1871, 13, 51156, 51156, 1692, 456, 366, 787, 288, 311, 13, 51244, 51244, 583, 264, 636, 729, 6771, 366, 13075, 1602, 51438, 51438, 307, 300, 456, 307, 257, 6806, 4111, 8947, 284, 13, 51566, 51566, 467, 311, 1219, 283, 295, 2031, 11, 288, 16, 11, 288, 17, 294, 341, 1389, 510, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1809490909095572, "compression_ratio": 1.6680497925311204, "no_speech_prob": 1.5204361261567101e-05}, {"id": 724, "seek": 217528, "start": 2191.1200000000003, "end": 2192.88, "text": " Here there are only y's.", "tokens": [50364, 400, 498, 291, 8593, 341, 294, 264, 10394, 11, 50492, 50492, 291, 603, 458, 437, 309, 307, 13, 50536, 50536, 467, 311, 1219, 257, 27708, 4974, 2519, 13, 50644, 50644, 407, 27708, 4974, 2519, 307, 257, 588, 2121, 2010, 50808, 50808, 295, 1270, 3877, 17630, 2316, 11, 689, 510, 291, 362, 288, 311, 51088, 51088, 420, 710, 311, 13, 51114, 51114, 12955, 380, 1871, 13, 51156, 51156, 1692, 456, 366, 787, 288, 311, 13, 51244, 51244, 583, 264, 636, 729, 6771, 366, 13075, 1602, 51438, 51438, 307, 300, 456, 307, 257, 6806, 4111, 8947, 284, 13, 51566, 51566, 467, 311, 1219, 283, 295, 2031, 11, 288, 16, 11, 288, 17, 294, 341, 1389, 510, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1809490909095572, "compression_ratio": 1.6680497925311204, "no_speech_prob": 1.5204361261567101e-05}, {"id": 725, "seek": 217528, "start": 2192.88, "end": 2196.76, "text": " But the way those factors are parameterized", "tokens": [50364, 400, 498, 291, 8593, 341, 294, 264, 10394, 11, 50492, 50492, 291, 603, 458, 437, 309, 307, 13, 50536, 50536, 467, 311, 1219, 257, 27708, 4974, 2519, 13, 50644, 50644, 407, 27708, 4974, 2519, 307, 257, 588, 2121, 2010, 50808, 50808, 295, 1270, 3877, 17630, 2316, 11, 689, 510, 291, 362, 288, 311, 51088, 51088, 420, 710, 311, 13, 51114, 51114, 12955, 380, 1871, 13, 51156, 51156, 1692, 456, 366, 787, 288, 311, 13, 51244, 51244, 583, 264, 636, 729, 6771, 366, 13075, 1602, 51438, 51438, 307, 300, 456, 307, 257, 6806, 4111, 8947, 284, 13, 51566, 51566, 467, 311, 1219, 283, 295, 2031, 11, 288, 16, 11, 288, 17, 294, 341, 1389, 510, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1809490909095572, "compression_ratio": 1.6680497925311204, "no_speech_prob": 1.5204361261567101e-05}, {"id": 726, "seek": 217528, "start": 2196.76, "end": 2199.32, "text": " is that there is a fixed feature extractor.", "tokens": [50364, 400, 498, 291, 8593, 341, 294, 264, 10394, 11, 50492, 50492, 291, 603, 458, 437, 309, 307, 13, 50536, 50536, 467, 311, 1219, 257, 27708, 4974, 2519, 13, 50644, 50644, 407, 27708, 4974, 2519, 307, 257, 588, 2121, 2010, 50808, 50808, 295, 1270, 3877, 17630, 2316, 11, 689, 510, 291, 362, 288, 311, 51088, 51088, 420, 710, 311, 13, 51114, 51114, 12955, 380, 1871, 13, 51156, 51156, 1692, 456, 366, 787, 288, 311, 13, 51244, 51244, 583, 264, 636, 729, 6771, 366, 13075, 1602, 51438, 51438, 307, 300, 456, 307, 257, 6806, 4111, 8947, 284, 13, 51566, 51566, 467, 311, 1219, 283, 295, 2031, 11, 288, 16, 11, 288, 17, 294, 341, 1389, 510, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1809490909095572, "compression_ratio": 1.6680497925311204, "no_speech_prob": 1.5204361261567101e-05}, {"id": 727, "seek": 217528, "start": 2199.32, "end": 2203.6000000000004, "text": " It's called f of x, y1, y2 in this case here.", "tokens": [50364, 400, 498, 291, 8593, 341, 294, 264, 10394, 11, 50492, 50492, 291, 603, 458, 437, 309, 307, 13, 50536, 50536, 467, 311, 1219, 257, 27708, 4974, 2519, 13, 50644, 50644, 407, 27708, 4974, 2519, 307, 257, 588, 2121, 2010, 50808, 50808, 295, 1270, 3877, 17630, 2316, 11, 689, 510, 291, 362, 288, 311, 51088, 51088, 420, 710, 311, 13, 51114, 51114, 12955, 380, 1871, 13, 51156, 51156, 1692, 456, 366, 787, 288, 311, 13, 51244, 51244, 583, 264, 636, 729, 6771, 366, 13075, 1602, 51438, 51438, 307, 300, 456, 307, 257, 6806, 4111, 8947, 284, 13, 51566, 51566, 467, 311, 1219, 283, 295, 2031, 11, 288, 16, 11, 288, 17, 294, 341, 1389, 510, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1809490909095572, "compression_ratio": 1.6680497925311204, "no_speech_prob": 1.5204361261567101e-05}, {"id": 728, "seek": 220360, "start": 2203.6, "end": 2205.8399999999997, "text": " And then a weight vector that just", "tokens": [50364, 400, 550, 257, 3364, 8062, 300, 445, 50476, 50476, 715, 1819, 264, 5893, 1674, 295, 341, 4111, 8062, 50658, 50658, 365, 341, 3364, 8062, 13, 50710, 50710, 400, 300, 2709, 291, 257, 6175, 510, 11, 445, 364, 2281, 11, 2264, 30, 50894, 50894, 440, 4787, 2281, 307, 445, 264, 2408, 295, 439, 729, 2115, 13, 51010, 51010, 407, 1936, 11, 729, 366, 20488, 18161, 36170, 11, 498, 291, 528, 13, 51130, 51130, 31248, 4583, 18161, 36170, 365, 257, 4111, 8947, 284, 412, 264, 4846, 13, 51276, 51398, 400, 550, 321, 393, 519, 466, 437, 2010, 295, 4470, 2445, 51566, 51566, 366, 321, 516, 281, 17522, 281, 3847, 746, 411, 341, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1582180520762568, "compression_ratio": 1.7061068702290076, "no_speech_prob": 6.143518930912251e-06}, {"id": 729, "seek": 220360, "start": 2205.8399999999997, "end": 2209.48, "text": " computes the dot product of this feature vector", "tokens": [50364, 400, 550, 257, 3364, 8062, 300, 445, 50476, 50476, 715, 1819, 264, 5893, 1674, 295, 341, 4111, 8062, 50658, 50658, 365, 341, 3364, 8062, 13, 50710, 50710, 400, 300, 2709, 291, 257, 6175, 510, 11, 445, 364, 2281, 11, 2264, 30, 50894, 50894, 440, 4787, 2281, 307, 445, 264, 2408, 295, 439, 729, 2115, 13, 51010, 51010, 407, 1936, 11, 729, 366, 20488, 18161, 36170, 11, 498, 291, 528, 13, 51130, 51130, 31248, 4583, 18161, 36170, 365, 257, 4111, 8947, 284, 412, 264, 4846, 13, 51276, 51398, 400, 550, 321, 393, 519, 466, 437, 2010, 295, 4470, 2445, 51566, 51566, 366, 321, 516, 281, 17522, 281, 3847, 746, 411, 341, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1582180520762568, "compression_ratio": 1.7061068702290076, "no_speech_prob": 6.143518930912251e-06}, {"id": 730, "seek": 220360, "start": 2209.48, "end": 2210.52, "text": " with this weight vector.", "tokens": [50364, 400, 550, 257, 3364, 8062, 300, 445, 50476, 50476, 715, 1819, 264, 5893, 1674, 295, 341, 4111, 8062, 50658, 50658, 365, 341, 3364, 8062, 13, 50710, 50710, 400, 300, 2709, 291, 257, 6175, 510, 11, 445, 364, 2281, 11, 2264, 30, 50894, 50894, 440, 4787, 2281, 307, 445, 264, 2408, 295, 439, 729, 2115, 13, 51010, 51010, 407, 1936, 11, 729, 366, 20488, 18161, 36170, 11, 498, 291, 528, 13, 51130, 51130, 31248, 4583, 18161, 36170, 365, 257, 4111, 8947, 284, 412, 264, 4846, 13, 51276, 51398, 400, 550, 321, 393, 519, 466, 437, 2010, 295, 4470, 2445, 51566, 51566, 366, 321, 516, 281, 17522, 281, 3847, 746, 411, 341, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1582180520762568, "compression_ratio": 1.7061068702290076, "no_speech_prob": 6.143518930912251e-06}, {"id": 731, "seek": 220360, "start": 2210.52, "end": 2214.2, "text": " And that gives you a score here, just an energy, OK?", "tokens": [50364, 400, 550, 257, 3364, 8062, 300, 445, 50476, 50476, 715, 1819, 264, 5893, 1674, 295, 341, 4111, 8062, 50658, 50658, 365, 341, 3364, 8062, 13, 50710, 50710, 400, 300, 2709, 291, 257, 6175, 510, 11, 445, 364, 2281, 11, 2264, 30, 50894, 50894, 440, 4787, 2281, 307, 445, 264, 2408, 295, 439, 729, 2115, 13, 51010, 51010, 407, 1936, 11, 729, 366, 20488, 18161, 36170, 11, 498, 291, 528, 13, 51130, 51130, 31248, 4583, 18161, 36170, 365, 257, 4111, 8947, 284, 412, 264, 4846, 13, 51276, 51398, 400, 550, 321, 393, 519, 466, 437, 2010, 295, 4470, 2445, 51566, 51566, 366, 321, 516, 281, 17522, 281, 3847, 746, 411, 341, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1582180520762568, "compression_ratio": 1.7061068702290076, "no_speech_prob": 6.143518930912251e-06}, {"id": 732, "seek": 220360, "start": 2214.2, "end": 2216.52, "text": " The overall energy is just the sum of all those terms.", "tokens": [50364, 400, 550, 257, 3364, 8062, 300, 445, 50476, 50476, 715, 1819, 264, 5893, 1674, 295, 341, 4111, 8062, 50658, 50658, 365, 341, 3364, 8062, 13, 50710, 50710, 400, 300, 2709, 291, 257, 6175, 510, 11, 445, 364, 2281, 11, 2264, 30, 50894, 50894, 440, 4787, 2281, 307, 445, 264, 2408, 295, 439, 729, 2115, 13, 51010, 51010, 407, 1936, 11, 729, 366, 20488, 18161, 36170, 11, 498, 291, 528, 13, 51130, 51130, 31248, 4583, 18161, 36170, 365, 257, 4111, 8947, 284, 412, 264, 4846, 13, 51276, 51398, 400, 550, 321, 393, 519, 466, 437, 2010, 295, 4470, 2445, 51566, 51566, 366, 321, 516, 281, 17522, 281, 3847, 746, 411, 341, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1582180520762568, "compression_ratio": 1.7061068702290076, "no_speech_prob": 6.143518930912251e-06}, {"id": 733, "seek": 220360, "start": 2216.52, "end": 2218.92, "text": " So basically, those are shallow neural nets, if you want.", "tokens": [50364, 400, 550, 257, 3364, 8062, 300, 445, 50476, 50476, 715, 1819, 264, 5893, 1674, 295, 341, 4111, 8062, 50658, 50658, 365, 341, 3364, 8062, 13, 50710, 50710, 400, 300, 2709, 291, 257, 6175, 510, 11, 445, 364, 2281, 11, 2264, 30, 50894, 50894, 440, 4787, 2281, 307, 445, 264, 2408, 295, 439, 729, 2115, 13, 51010, 51010, 407, 1936, 11, 729, 366, 20488, 18161, 36170, 11, 498, 291, 528, 13, 51130, 51130, 31248, 4583, 18161, 36170, 365, 257, 4111, 8947, 284, 412, 264, 4846, 13, 51276, 51398, 400, 550, 321, 393, 519, 466, 437, 2010, 295, 4470, 2445, 51566, 51566, 366, 321, 516, 281, 17522, 281, 3847, 746, 411, 341, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1582180520762568, "compression_ratio": 1.7061068702290076, "no_speech_prob": 6.143518930912251e-06}, {"id": 734, "seek": 220360, "start": 2218.92, "end": 2221.8399999999997, "text": " Single layer neural nets with a feature extractor at the input.", "tokens": [50364, 400, 550, 257, 3364, 8062, 300, 445, 50476, 50476, 715, 1819, 264, 5893, 1674, 295, 341, 4111, 8062, 50658, 50658, 365, 341, 3364, 8062, 13, 50710, 50710, 400, 300, 2709, 291, 257, 6175, 510, 11, 445, 364, 2281, 11, 2264, 30, 50894, 50894, 440, 4787, 2281, 307, 445, 264, 2408, 295, 439, 729, 2115, 13, 51010, 51010, 407, 1936, 11, 729, 366, 20488, 18161, 36170, 11, 498, 291, 528, 13, 51130, 51130, 31248, 4583, 18161, 36170, 365, 257, 4111, 8947, 284, 412, 264, 4846, 13, 51276, 51398, 400, 550, 321, 393, 519, 466, 437, 2010, 295, 4470, 2445, 51566, 51566, 366, 321, 516, 281, 17522, 281, 3847, 746, 411, 341, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1582180520762568, "compression_ratio": 1.7061068702290076, "no_speech_prob": 6.143518930912251e-06}, {"id": 735, "seek": 220360, "start": 2224.2799999999997, "end": 2227.64, "text": " And then we can think about what type of loss function", "tokens": [50364, 400, 550, 257, 3364, 8062, 300, 445, 50476, 50476, 715, 1819, 264, 5893, 1674, 295, 341, 4111, 8062, 50658, 50658, 365, 341, 3364, 8062, 13, 50710, 50710, 400, 300, 2709, 291, 257, 6175, 510, 11, 445, 364, 2281, 11, 2264, 30, 50894, 50894, 440, 4787, 2281, 307, 445, 264, 2408, 295, 439, 729, 2115, 13, 51010, 51010, 407, 1936, 11, 729, 366, 20488, 18161, 36170, 11, 498, 291, 528, 13, 51130, 51130, 31248, 4583, 18161, 36170, 365, 257, 4111, 8947, 284, 412, 264, 4846, 13, 51276, 51398, 400, 550, 321, 393, 519, 466, 437, 2010, 295, 4470, 2445, 51566, 51566, 366, 321, 516, 281, 17522, 281, 3847, 746, 411, 341, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1582180520762568, "compression_ratio": 1.7061068702290076, "no_speech_prob": 6.143518930912251e-06}, {"id": 736, "seek": 220360, "start": 2227.64, "end": 2230.8399999999997, "text": " are we going to minimize to train something like this.", "tokens": [50364, 400, 550, 257, 3364, 8062, 300, 445, 50476, 50476, 715, 1819, 264, 5893, 1674, 295, 341, 4111, 8062, 50658, 50658, 365, 341, 3364, 8062, 13, 50710, 50710, 400, 300, 2709, 291, 257, 6175, 510, 11, 445, 364, 2281, 11, 2264, 30, 50894, 50894, 440, 4787, 2281, 307, 445, 264, 2408, 295, 439, 729, 2115, 13, 51010, 51010, 407, 1936, 11, 729, 366, 20488, 18161, 36170, 11, 498, 291, 528, 13, 51130, 51130, 31248, 4583, 18161, 36170, 365, 257, 4111, 8947, 284, 412, 264, 4846, 13, 51276, 51398, 400, 550, 321, 393, 519, 466, 437, 2010, 295, 4470, 2445, 51566, 51566, 366, 321, 516, 281, 17522, 281, 3847, 746, 411, 341, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1582180520762568, "compression_ratio": 1.7061068702290076, "no_speech_prob": 6.143518930912251e-06}, {"id": 737, "seek": 223084, "start": 2230.84, "end": 2234.48, "text": " So one possibility is to use the negative log likelihood loss.", "tokens": [50364, 407, 472, 7959, 307, 281, 764, 264, 3671, 3565, 22119, 4470, 13, 50546, 50546, 407, 1936, 11, 291, 584, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 50734, 50734, 281, 312, 2295, 13, 50812, 50812, 400, 286, 528, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 51004, 51004, 295, 439, 264, 25737, 295, 439, 264, 6338, 11, 51142, 51142, 3009, 264, 665, 472, 11, 281, 312, 2416, 13, 51422, 51544, 682, 1186, 11, 544, 8944, 11, 291, 528, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13548174358549572, "compression_ratio": 1.6875, "no_speech_prob": 8.13835777080385e-06}, {"id": 738, "seek": 223084, "start": 2234.48, "end": 2238.2400000000002, "text": " So basically, you say, I want the energy of the correct answer", "tokens": [50364, 407, 472, 7959, 307, 281, 764, 264, 3671, 3565, 22119, 4470, 13, 50546, 50546, 407, 1936, 11, 291, 584, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 50734, 50734, 281, 312, 2295, 13, 50812, 50812, 400, 286, 528, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 51004, 51004, 295, 439, 264, 25737, 295, 439, 264, 6338, 11, 51142, 51142, 3009, 264, 665, 472, 11, 281, 312, 2416, 13, 51422, 51544, 682, 1186, 11, 544, 8944, 11, 291, 528, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13548174358549572, "compression_ratio": 1.6875, "no_speech_prob": 8.13835777080385e-06}, {"id": 739, "seek": 223084, "start": 2238.2400000000002, "end": 2239.8, "text": " to be low.", "tokens": [50364, 407, 472, 7959, 307, 281, 764, 264, 3671, 3565, 22119, 4470, 13, 50546, 50546, 407, 1936, 11, 291, 584, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 50734, 50734, 281, 312, 2295, 13, 50812, 50812, 400, 286, 528, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 51004, 51004, 295, 439, 264, 25737, 295, 439, 264, 6338, 11, 51142, 51142, 3009, 264, 665, 472, 11, 281, 312, 2416, 13, 51422, 51544, 682, 1186, 11, 544, 8944, 11, 291, 528, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13548174358549572, "compression_ratio": 1.6875, "no_speech_prob": 8.13835777080385e-06}, {"id": 740, "seek": 223084, "start": 2239.8, "end": 2243.6400000000003, "text": " And I want the log of the sum of the exponentials", "tokens": [50364, 407, 472, 7959, 307, 281, 764, 264, 3671, 3565, 22119, 4470, 13, 50546, 50546, 407, 1936, 11, 291, 584, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 50734, 50734, 281, 312, 2295, 13, 50812, 50812, 400, 286, 528, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 51004, 51004, 295, 439, 264, 25737, 295, 439, 264, 6338, 11, 51142, 51142, 3009, 264, 665, 472, 11, 281, 312, 2416, 13, 51422, 51544, 682, 1186, 11, 544, 8944, 11, 291, 528, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13548174358549572, "compression_ratio": 1.6875, "no_speech_prob": 8.13835777080385e-06}, {"id": 741, "seek": 223084, "start": 2243.6400000000003, "end": 2246.4, "text": " of all the energies of all the answers,", "tokens": [50364, 407, 472, 7959, 307, 281, 764, 264, 3671, 3565, 22119, 4470, 13, 50546, 50546, 407, 1936, 11, 291, 584, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 50734, 50734, 281, 312, 2295, 13, 50812, 50812, 400, 286, 528, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 51004, 51004, 295, 439, 264, 25737, 295, 439, 264, 6338, 11, 51142, 51142, 3009, 264, 665, 472, 11, 281, 312, 2416, 13, 51422, 51544, 682, 1186, 11, 544, 8944, 11, 291, 528, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13548174358549572, "compression_ratio": 1.6875, "no_speech_prob": 8.13835777080385e-06}, {"id": 742, "seek": 223084, "start": 2246.4, "end": 2252.0, "text": " including the good one, to be large.", "tokens": [50364, 407, 472, 7959, 307, 281, 764, 264, 3671, 3565, 22119, 4470, 13, 50546, 50546, 407, 1936, 11, 291, 584, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 50734, 50734, 281, 312, 2295, 13, 50812, 50812, 400, 286, 528, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 51004, 51004, 295, 439, 264, 25737, 295, 439, 264, 6338, 11, 51142, 51142, 3009, 264, 665, 472, 11, 281, 312, 2416, 13, 51422, 51544, 682, 1186, 11, 544, 8944, 11, 291, 528, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13548174358549572, "compression_ratio": 1.6875, "no_speech_prob": 8.13835777080385e-06}, {"id": 743, "seek": 223084, "start": 2254.44, "end": 2257.76, "text": " In fact, more correctly, you want", "tokens": [50364, 407, 472, 7959, 307, 281, 764, 264, 3671, 3565, 22119, 4470, 13, 50546, 50546, 407, 1936, 11, 291, 584, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 50734, 50734, 281, 312, 2295, 13, 50812, 50812, 400, 286, 528, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 51004, 51004, 295, 439, 264, 25737, 295, 439, 264, 6338, 11, 51142, 51142, 3009, 264, 665, 472, 11, 281, 312, 2416, 13, 51422, 51544, 682, 1186, 11, 544, 8944, 11, 291, 528, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13548174358549572, "compression_ratio": 1.6875, "no_speech_prob": 8.13835777080385e-06}, {"id": 744, "seek": 225776, "start": 2257.76, "end": 2261.76, "text": " the minus log of the sum over all configurations", "tokens": [50364, 264, 3175, 3565, 295, 264, 2408, 670, 439, 31493, 50564, 50564, 295, 428, 23930, 295, 264, 21510, 3175, 264, 2281, 50720, 50720, 295, 439, 729, 31493, 281, 312, 382, 1359, 382, 1944, 13, 50846, 51178, 407, 1936, 11, 291, 528, 264, 6562, 51274, 51274, 295, 25737, 295, 300, 6338, 281, 312, 382, 2416, 382, 1944, 13, 51382, 51558, 400, 321, 600, 20381, 300, 4470, 2445, 949, 13, 51682, 51682, 663, 311, 1936, 437, 311, 1143, 294, 16985, 41167, 13, 51762, 51762, 16985, 41167, 1619, 300, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.18863779703776043, "compression_ratio": 1.7647058823529411, "no_speech_prob": 1.0781512173707597e-05}, {"id": 745, "seek": 225776, "start": 2261.76, "end": 2264.88, "text": " of your outputs of the exponential minus the energy", "tokens": [50364, 264, 3175, 3565, 295, 264, 2408, 670, 439, 31493, 50564, 50564, 295, 428, 23930, 295, 264, 21510, 3175, 264, 2281, 50720, 50720, 295, 439, 729, 31493, 281, 312, 382, 1359, 382, 1944, 13, 50846, 51178, 407, 1936, 11, 291, 528, 264, 6562, 51274, 51274, 295, 25737, 295, 300, 6338, 281, 312, 382, 2416, 382, 1944, 13, 51382, 51558, 400, 321, 600, 20381, 300, 4470, 2445, 949, 13, 51682, 51682, 663, 311, 1936, 437, 311, 1143, 294, 16985, 41167, 13, 51762, 51762, 16985, 41167, 1619, 300, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.18863779703776043, "compression_ratio": 1.7647058823529411, "no_speech_prob": 1.0781512173707597e-05}, {"id": 746, "seek": 225776, "start": 2264.88, "end": 2267.4, "text": " of all those configurations to be as small as possible.", "tokens": [50364, 264, 3175, 3565, 295, 264, 2408, 670, 439, 31493, 50564, 50564, 295, 428, 23930, 295, 264, 21510, 3175, 264, 2281, 50720, 50720, 295, 439, 729, 31493, 281, 312, 382, 1359, 382, 1944, 13, 50846, 51178, 407, 1936, 11, 291, 528, 264, 6562, 51274, 51274, 295, 25737, 295, 300, 6338, 281, 312, 382, 2416, 382, 1944, 13, 51382, 51558, 400, 321, 600, 20381, 300, 4470, 2445, 949, 13, 51682, 51682, 663, 311, 1936, 437, 311, 1143, 294, 16985, 41167, 13, 51762, 51762, 16985, 41167, 1619, 300, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.18863779703776043, "compression_ratio": 1.7647058823529411, "no_speech_prob": 1.0781512173707597e-05}, {"id": 747, "seek": 225776, "start": 2274.0400000000004, "end": 2275.96, "text": " So basically, you want the combination", "tokens": [50364, 264, 3175, 3565, 295, 264, 2408, 670, 439, 31493, 50564, 50564, 295, 428, 23930, 295, 264, 21510, 3175, 264, 2281, 50720, 50720, 295, 439, 729, 31493, 281, 312, 382, 1359, 382, 1944, 13, 50846, 51178, 407, 1936, 11, 291, 528, 264, 6562, 51274, 51274, 295, 25737, 295, 300, 6338, 281, 312, 382, 2416, 382, 1944, 13, 51382, 51558, 400, 321, 600, 20381, 300, 4470, 2445, 949, 13, 51682, 51682, 663, 311, 1936, 437, 311, 1143, 294, 16985, 41167, 13, 51762, 51762, 16985, 41167, 1619, 300, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.18863779703776043, "compression_ratio": 1.7647058823529411, "no_speech_prob": 1.0781512173707597e-05}, {"id": 748, "seek": 225776, "start": 2275.96, "end": 2278.1200000000003, "text": " of energies of that answers to be as large as possible.", "tokens": [50364, 264, 3175, 3565, 295, 264, 2408, 670, 439, 31493, 50564, 50564, 295, 428, 23930, 295, 264, 21510, 3175, 264, 2281, 50720, 50720, 295, 439, 729, 31493, 281, 312, 382, 1359, 382, 1944, 13, 50846, 51178, 407, 1936, 11, 291, 528, 264, 6562, 51274, 51274, 295, 25737, 295, 300, 6338, 281, 312, 382, 2416, 382, 1944, 13, 51382, 51558, 400, 321, 600, 20381, 300, 4470, 2445, 949, 13, 51682, 51682, 663, 311, 1936, 437, 311, 1143, 294, 16985, 41167, 13, 51762, 51762, 16985, 41167, 1619, 300, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.18863779703776043, "compression_ratio": 1.7647058823529411, "no_speech_prob": 1.0781512173707597e-05}, {"id": 749, "seek": 225776, "start": 2281.6400000000003, "end": 2284.1200000000003, "text": " And we've encountered that loss function before.", "tokens": [50364, 264, 3175, 3565, 295, 264, 2408, 670, 439, 31493, 50564, 50564, 295, 428, 23930, 295, 264, 21510, 3175, 264, 2281, 50720, 50720, 295, 439, 729, 31493, 281, 312, 382, 1359, 382, 1944, 13, 50846, 51178, 407, 1936, 11, 291, 528, 264, 6562, 51274, 51274, 295, 25737, 295, 300, 6338, 281, 312, 382, 2416, 382, 1944, 13, 51382, 51558, 400, 321, 600, 20381, 300, 4470, 2445, 949, 13, 51682, 51682, 663, 311, 1936, 437, 311, 1143, 294, 16985, 41167, 13, 51762, 51762, 16985, 41167, 1619, 300, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.18863779703776043, "compression_ratio": 1.7647058823529411, "no_speech_prob": 1.0781512173707597e-05}, {"id": 750, "seek": 225776, "start": 2284.1200000000003, "end": 2285.7200000000003, "text": " That's basically what's used in Softmax.", "tokens": [50364, 264, 3175, 3565, 295, 264, 2408, 670, 439, 31493, 50564, 50564, 295, 428, 23930, 295, 264, 21510, 3175, 264, 2281, 50720, 50720, 295, 439, 729, 31493, 281, 312, 382, 1359, 382, 1944, 13, 50846, 51178, 407, 1936, 11, 291, 528, 264, 6562, 51274, 51274, 295, 25737, 295, 300, 6338, 281, 312, 382, 2416, 382, 1944, 13, 51382, 51558, 400, 321, 600, 20381, 300, 4470, 2445, 949, 13, 51682, 51682, 663, 311, 1936, 437, 311, 1143, 294, 16985, 41167, 13, 51762, 51762, 16985, 41167, 1619, 300, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.18863779703776043, "compression_ratio": 1.7647058823529411, "no_speech_prob": 1.0781512173707597e-05}, {"id": 751, "seek": 225776, "start": 2285.7200000000003, "end": 2286.5600000000004, "text": " Softmax says that.", "tokens": [50364, 264, 3175, 3565, 295, 264, 2408, 670, 439, 31493, 50564, 50564, 295, 428, 23930, 295, 264, 21510, 3175, 264, 2281, 50720, 50720, 295, 439, 729, 31493, 281, 312, 382, 1359, 382, 1944, 13, 50846, 51178, 407, 1936, 11, 291, 528, 264, 6562, 51274, 51274, 295, 25737, 295, 300, 6338, 281, 312, 382, 2416, 382, 1944, 13, 51382, 51558, 400, 321, 600, 20381, 300, 4470, 2445, 949, 13, 51682, 51682, 663, 311, 1936, 437, 311, 1143, 294, 16985, 41167, 13, 51762, 51762, 16985, 41167, 1619, 300, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.18863779703776043, "compression_ratio": 1.7647058823529411, "no_speech_prob": 1.0781512173707597e-05}, {"id": 752, "seek": 228656, "start": 2286.56, "end": 2291.56, "text": " Softmax says, I want the negative log", "tokens": [50364, 16985, 41167, 1619, 11, 286, 528, 264, 3671, 3565, 50614, 50614, 8482, 295, 264, 3006, 1867, 50686, 50686, 281, 312, 382, 2295, 382, 1944, 11, 264, 8482, 295, 264, 3006, 50788, 50788, 1867, 281, 312, 382, 2416, 382, 1944, 13, 50860, 50860, 663, 311, 411, 364, 2281, 13, 50902, 51046, 583, 550, 16561, 11, 286, 14722, 51244, 51244, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 439, 264, 6338, 13, 51452, 51452, 400, 286, 528, 300, 281, 312, 1359, 13, 51608, 51608, 286, 528, 439, 729, 25737, 281, 312, 2416, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1391974871920556, "compression_ratio": 1.831578947368421, "no_speech_prob": 2.1437090254039504e-05}, {"id": 753, "seek": 228656, "start": 2291.56, "end": 2293.0, "text": " probability of the correct answer", "tokens": [50364, 16985, 41167, 1619, 11, 286, 528, 264, 3671, 3565, 50614, 50614, 8482, 295, 264, 3006, 1867, 50686, 50686, 281, 312, 382, 2295, 382, 1944, 11, 264, 8482, 295, 264, 3006, 50788, 50788, 1867, 281, 312, 382, 2416, 382, 1944, 13, 50860, 50860, 663, 311, 411, 364, 2281, 13, 50902, 51046, 583, 550, 16561, 11, 286, 14722, 51244, 51244, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 439, 264, 6338, 13, 51452, 51452, 400, 286, 528, 300, 281, 312, 1359, 13, 51608, 51608, 286, 528, 439, 729, 25737, 281, 312, 2416, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1391974871920556, "compression_ratio": 1.831578947368421, "no_speech_prob": 2.1437090254039504e-05}, {"id": 754, "seek": 228656, "start": 2293.0, "end": 2295.04, "text": " to be as low as possible, the probability of the correct", "tokens": [50364, 16985, 41167, 1619, 11, 286, 528, 264, 3671, 3565, 50614, 50614, 8482, 295, 264, 3006, 1867, 50686, 50686, 281, 312, 382, 2295, 382, 1944, 11, 264, 8482, 295, 264, 3006, 50788, 50788, 1867, 281, 312, 382, 2416, 382, 1944, 13, 50860, 50860, 663, 311, 411, 364, 2281, 13, 50902, 51046, 583, 550, 16561, 11, 286, 14722, 51244, 51244, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 439, 264, 6338, 13, 51452, 51452, 400, 286, 528, 300, 281, 312, 1359, 13, 51608, 51608, 286, 528, 439, 729, 25737, 281, 312, 2416, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1391974871920556, "compression_ratio": 1.831578947368421, "no_speech_prob": 2.1437090254039504e-05}, {"id": 755, "seek": 228656, "start": 2295.04, "end": 2296.48, "text": " answer to be as large as possible.", "tokens": [50364, 16985, 41167, 1619, 11, 286, 528, 264, 3671, 3565, 50614, 50614, 8482, 295, 264, 3006, 1867, 50686, 50686, 281, 312, 382, 2295, 382, 1944, 11, 264, 8482, 295, 264, 3006, 50788, 50788, 1867, 281, 312, 382, 2416, 382, 1944, 13, 50860, 50860, 663, 311, 411, 364, 2281, 13, 50902, 51046, 583, 550, 16561, 11, 286, 14722, 51244, 51244, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 439, 264, 6338, 13, 51452, 51452, 400, 286, 528, 300, 281, 312, 1359, 13, 51608, 51608, 286, 528, 439, 729, 25737, 281, 312, 2416, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1391974871920556, "compression_ratio": 1.831578947368421, "no_speech_prob": 2.1437090254039504e-05}, {"id": 756, "seek": 228656, "start": 2296.48, "end": 2297.32, "text": " That's like an energy.", "tokens": [50364, 16985, 41167, 1619, 11, 286, 528, 264, 3671, 3565, 50614, 50614, 8482, 295, 264, 3006, 1867, 50686, 50686, 281, 312, 382, 2295, 382, 1944, 11, 264, 8482, 295, 264, 3006, 50788, 50788, 1867, 281, 312, 382, 2416, 382, 1944, 13, 50860, 50860, 663, 311, 411, 364, 2281, 13, 50902, 51046, 583, 550, 16561, 11, 286, 14722, 51244, 51244, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 439, 264, 6338, 13, 51452, 51452, 400, 286, 528, 300, 281, 312, 1359, 13, 51608, 51608, 286, 528, 439, 729, 25737, 281, 312, 2416, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1391974871920556, "compression_ratio": 1.831578947368421, "no_speech_prob": 2.1437090254039504e-05}, {"id": 757, "seek": 228656, "start": 2300.2, "end": 2304.16, "text": " But then simultaneously, I compute", "tokens": [50364, 16985, 41167, 1619, 11, 286, 528, 264, 3671, 3565, 50614, 50614, 8482, 295, 264, 3006, 1867, 50686, 50686, 281, 312, 382, 2295, 382, 1944, 11, 264, 8482, 295, 264, 3006, 50788, 50788, 1867, 281, 312, 382, 2416, 382, 1944, 13, 50860, 50860, 663, 311, 411, 364, 2281, 13, 50902, 51046, 583, 550, 16561, 11, 286, 14722, 51244, 51244, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 439, 264, 6338, 13, 51452, 51452, 400, 286, 528, 300, 281, 312, 1359, 13, 51608, 51608, 286, 528, 439, 729, 25737, 281, 312, 2416, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1391974871920556, "compression_ratio": 1.831578947368421, "no_speech_prob": 2.1437090254039504e-05}, {"id": 758, "seek": 228656, "start": 2304.16, "end": 2308.32, "text": " the log of the sum of the exponentials of all the answers.", "tokens": [50364, 16985, 41167, 1619, 11, 286, 528, 264, 3671, 3565, 50614, 50614, 8482, 295, 264, 3006, 1867, 50686, 50686, 281, 312, 382, 2295, 382, 1944, 11, 264, 8482, 295, 264, 3006, 50788, 50788, 1867, 281, 312, 382, 2416, 382, 1944, 13, 50860, 50860, 663, 311, 411, 364, 2281, 13, 50902, 51046, 583, 550, 16561, 11, 286, 14722, 51244, 51244, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 439, 264, 6338, 13, 51452, 51452, 400, 286, 528, 300, 281, 312, 1359, 13, 51608, 51608, 286, 528, 439, 729, 25737, 281, 312, 2416, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1391974871920556, "compression_ratio": 1.831578947368421, "no_speech_prob": 2.1437090254039504e-05}, {"id": 759, "seek": 228656, "start": 2308.32, "end": 2311.44, "text": " And I want that to be small.", "tokens": [50364, 16985, 41167, 1619, 11, 286, 528, 264, 3671, 3565, 50614, 50614, 8482, 295, 264, 3006, 1867, 50686, 50686, 281, 312, 382, 2295, 382, 1944, 11, 264, 8482, 295, 264, 3006, 50788, 50788, 1867, 281, 312, 382, 2416, 382, 1944, 13, 50860, 50860, 663, 311, 411, 364, 2281, 13, 50902, 51046, 583, 550, 16561, 11, 286, 14722, 51244, 51244, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 439, 264, 6338, 13, 51452, 51452, 400, 286, 528, 300, 281, 312, 1359, 13, 51608, 51608, 286, 528, 439, 729, 25737, 281, 312, 2416, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1391974871920556, "compression_ratio": 1.831578947368421, "no_speech_prob": 2.1437090254039504e-05}, {"id": 760, "seek": 228656, "start": 2311.44, "end": 2314.24, "text": " I want all those energies to be large.", "tokens": [50364, 16985, 41167, 1619, 11, 286, 528, 264, 3671, 3565, 50614, 50614, 8482, 295, 264, 3006, 1867, 50686, 50686, 281, 312, 382, 2295, 382, 1944, 11, 264, 8482, 295, 264, 3006, 50788, 50788, 1867, 281, 312, 382, 2416, 382, 1944, 13, 50860, 50860, 663, 311, 411, 364, 2281, 13, 50902, 51046, 583, 550, 16561, 11, 286, 14722, 51244, 51244, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 439, 264, 6338, 13, 51452, 51452, 400, 286, 528, 300, 281, 312, 1359, 13, 51608, 51608, 286, 528, 439, 729, 25737, 281, 312, 2416, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1391974871920556, "compression_ratio": 1.831578947368421, "no_speech_prob": 2.1437090254039504e-05}, {"id": 761, "seek": 231424, "start": 2314.24, "end": 2317.7599999999998, "text": " I want all those probabilities to be small.", "tokens": [50364, 286, 528, 439, 729, 33783, 281, 312, 1359, 13, 50540, 50540, 16985, 41167, 775, 300, 281, 291, 13, 50626, 50626, 1610, 3565, 16985, 41167, 46691, 11, 562, 291, 646, 48256, 11, 50784, 50784, 309, 775, 21538, 13, 50854, 50854, 400, 309, 775, 2293, 300, 13, 50904, 50904, 467, 21020, 760, 264, 2281, 295, 264, 3006, 1867, 13, 51010, 51010, 467, 21020, 493, 264, 25737, 295, 439, 264, 661, 6338, 51124, 51124, 538, 15866, 264, 3565, 295, 264, 2408, 295, 439, 264, 6338, 51240, 51240, 295, 21510, 3175, 264, 25737, 13, 51426, 51426, 407, 510, 11, 27708, 4974, 2519, 51540, 51540, 307, 1936, 364, 1365, 295, 300, 13, 51642, 51642, 583, 291, 434, 406, 884, 21538, 13, 51716, 51716, 509, 434, 884, 733, 295, 18519, 17630, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.15132086827204777, "compression_ratio": 1.8, "no_speech_prob": 1.0952351658488624e-05}, {"id": 762, "seek": 231424, "start": 2317.7599999999998, "end": 2319.4799999999996, "text": " Softmax does that to you.", "tokens": [50364, 286, 528, 439, 729, 33783, 281, 312, 1359, 13, 50540, 50540, 16985, 41167, 775, 300, 281, 291, 13, 50626, 50626, 1610, 3565, 16985, 41167, 46691, 11, 562, 291, 646, 48256, 11, 50784, 50784, 309, 775, 21538, 13, 50854, 50854, 400, 309, 775, 2293, 300, 13, 50904, 50904, 467, 21020, 760, 264, 2281, 295, 264, 3006, 1867, 13, 51010, 51010, 467, 21020, 493, 264, 25737, 295, 439, 264, 661, 6338, 51124, 51124, 538, 15866, 264, 3565, 295, 264, 2408, 295, 439, 264, 6338, 51240, 51240, 295, 21510, 3175, 264, 25737, 13, 51426, 51426, 407, 510, 11, 27708, 4974, 2519, 51540, 51540, 307, 1936, 364, 1365, 295, 300, 13, 51642, 51642, 583, 291, 434, 406, 884, 21538, 13, 51716, 51716, 509, 434, 884, 733, 295, 18519, 17630, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.15132086827204777, "compression_ratio": 1.8, "no_speech_prob": 1.0952351658488624e-05}, {"id": 763, "seek": 231424, "start": 2319.4799999999996, "end": 2322.64, "text": " Or log Softmax criterion, when you back propagate,", "tokens": [50364, 286, 528, 439, 729, 33783, 281, 312, 1359, 13, 50540, 50540, 16985, 41167, 775, 300, 281, 291, 13, 50626, 50626, 1610, 3565, 16985, 41167, 46691, 11, 562, 291, 646, 48256, 11, 50784, 50784, 309, 775, 21538, 13, 50854, 50854, 400, 309, 775, 2293, 300, 13, 50904, 50904, 467, 21020, 760, 264, 2281, 295, 264, 3006, 1867, 13, 51010, 51010, 467, 21020, 493, 264, 25737, 295, 439, 264, 661, 6338, 51124, 51124, 538, 15866, 264, 3565, 295, 264, 2408, 295, 439, 264, 6338, 51240, 51240, 295, 21510, 3175, 264, 25737, 13, 51426, 51426, 407, 510, 11, 27708, 4974, 2519, 51540, 51540, 307, 1936, 364, 1365, 295, 300, 13, 51642, 51642, 583, 291, 434, 406, 884, 21538, 13, 51716, 51716, 509, 434, 884, 733, 295, 18519, 17630, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.15132086827204777, "compression_ratio": 1.8, "no_speech_prob": 1.0952351658488624e-05}, {"id": 764, "seek": 231424, "start": 2322.64, "end": 2324.04, "text": " it does classification.", "tokens": [50364, 286, 528, 439, 729, 33783, 281, 312, 1359, 13, 50540, 50540, 16985, 41167, 775, 300, 281, 291, 13, 50626, 50626, 1610, 3565, 16985, 41167, 46691, 11, 562, 291, 646, 48256, 11, 50784, 50784, 309, 775, 21538, 13, 50854, 50854, 400, 309, 775, 2293, 300, 13, 50904, 50904, 467, 21020, 760, 264, 2281, 295, 264, 3006, 1867, 13, 51010, 51010, 467, 21020, 493, 264, 25737, 295, 439, 264, 661, 6338, 51124, 51124, 538, 15866, 264, 3565, 295, 264, 2408, 295, 439, 264, 6338, 51240, 51240, 295, 21510, 3175, 264, 25737, 13, 51426, 51426, 407, 510, 11, 27708, 4974, 2519, 51540, 51540, 307, 1936, 364, 1365, 295, 300, 13, 51642, 51642, 583, 291, 434, 406, 884, 21538, 13, 51716, 51716, 509, 434, 884, 733, 295, 18519, 17630, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.15132086827204777, "compression_ratio": 1.8, "no_speech_prob": 1.0952351658488624e-05}, {"id": 765, "seek": 231424, "start": 2324.04, "end": 2325.04, "text": " And it does exactly that.", "tokens": [50364, 286, 528, 439, 729, 33783, 281, 312, 1359, 13, 50540, 50540, 16985, 41167, 775, 300, 281, 291, 13, 50626, 50626, 1610, 3565, 16985, 41167, 46691, 11, 562, 291, 646, 48256, 11, 50784, 50784, 309, 775, 21538, 13, 50854, 50854, 400, 309, 775, 2293, 300, 13, 50904, 50904, 467, 21020, 760, 264, 2281, 295, 264, 3006, 1867, 13, 51010, 51010, 467, 21020, 493, 264, 25737, 295, 439, 264, 661, 6338, 51124, 51124, 538, 15866, 264, 3565, 295, 264, 2408, 295, 439, 264, 6338, 51240, 51240, 295, 21510, 3175, 264, 25737, 13, 51426, 51426, 407, 510, 11, 27708, 4974, 2519, 51540, 51540, 307, 1936, 364, 1365, 295, 300, 13, 51642, 51642, 583, 291, 434, 406, 884, 21538, 13, 51716, 51716, 509, 434, 884, 733, 295, 18519, 17630, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.15132086827204777, "compression_ratio": 1.8, "no_speech_prob": 1.0952351658488624e-05}, {"id": 766, "seek": 231424, "start": 2325.04, "end": 2327.16, "text": " It pushes down the energy of the correct answer.", "tokens": [50364, 286, 528, 439, 729, 33783, 281, 312, 1359, 13, 50540, 50540, 16985, 41167, 775, 300, 281, 291, 13, 50626, 50626, 1610, 3565, 16985, 41167, 46691, 11, 562, 291, 646, 48256, 11, 50784, 50784, 309, 775, 21538, 13, 50854, 50854, 400, 309, 775, 2293, 300, 13, 50904, 50904, 467, 21020, 760, 264, 2281, 295, 264, 3006, 1867, 13, 51010, 51010, 467, 21020, 493, 264, 25737, 295, 439, 264, 661, 6338, 51124, 51124, 538, 15866, 264, 3565, 295, 264, 2408, 295, 439, 264, 6338, 51240, 51240, 295, 21510, 3175, 264, 25737, 13, 51426, 51426, 407, 510, 11, 27708, 4974, 2519, 51540, 51540, 307, 1936, 364, 1365, 295, 300, 13, 51642, 51642, 583, 291, 434, 406, 884, 21538, 13, 51716, 51716, 509, 434, 884, 733, 295, 18519, 17630, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.15132086827204777, "compression_ratio": 1.8, "no_speech_prob": 1.0952351658488624e-05}, {"id": 767, "seek": 231424, "start": 2327.16, "end": 2329.4399999999996, "text": " It pushes up the energies of all the other answers", "tokens": [50364, 286, 528, 439, 729, 33783, 281, 312, 1359, 13, 50540, 50540, 16985, 41167, 775, 300, 281, 291, 13, 50626, 50626, 1610, 3565, 16985, 41167, 46691, 11, 562, 291, 646, 48256, 11, 50784, 50784, 309, 775, 21538, 13, 50854, 50854, 400, 309, 775, 2293, 300, 13, 50904, 50904, 467, 21020, 760, 264, 2281, 295, 264, 3006, 1867, 13, 51010, 51010, 467, 21020, 493, 264, 25737, 295, 439, 264, 661, 6338, 51124, 51124, 538, 15866, 264, 3565, 295, 264, 2408, 295, 439, 264, 6338, 51240, 51240, 295, 21510, 3175, 264, 25737, 13, 51426, 51426, 407, 510, 11, 27708, 4974, 2519, 51540, 51540, 307, 1936, 364, 1365, 295, 300, 13, 51642, 51642, 583, 291, 434, 406, 884, 21538, 13, 51716, 51716, 509, 434, 884, 733, 295, 18519, 17630, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.15132086827204777, "compression_ratio": 1.8, "no_speech_prob": 1.0952351658488624e-05}, {"id": 768, "seek": 231424, "start": 2329.4399999999996, "end": 2331.7599999999998, "text": " by computing the log of the sum of all the answers", "tokens": [50364, 286, 528, 439, 729, 33783, 281, 312, 1359, 13, 50540, 50540, 16985, 41167, 775, 300, 281, 291, 13, 50626, 50626, 1610, 3565, 16985, 41167, 46691, 11, 562, 291, 646, 48256, 11, 50784, 50784, 309, 775, 21538, 13, 50854, 50854, 400, 309, 775, 2293, 300, 13, 50904, 50904, 467, 21020, 760, 264, 2281, 295, 264, 3006, 1867, 13, 51010, 51010, 467, 21020, 493, 264, 25737, 295, 439, 264, 661, 6338, 51124, 51124, 538, 15866, 264, 3565, 295, 264, 2408, 295, 439, 264, 6338, 51240, 51240, 295, 21510, 3175, 264, 25737, 13, 51426, 51426, 407, 510, 11, 27708, 4974, 2519, 51540, 51540, 307, 1936, 364, 1365, 295, 300, 13, 51642, 51642, 583, 291, 434, 406, 884, 21538, 13, 51716, 51716, 509, 434, 884, 733, 295, 18519, 17630, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.15132086827204777, "compression_ratio": 1.8, "no_speech_prob": 1.0952351658488624e-05}, {"id": 769, "seek": 231424, "start": 2331.7599999999998, "end": 2335.4799999999996, "text": " of exponential minus the energies.", "tokens": [50364, 286, 528, 439, 729, 33783, 281, 312, 1359, 13, 50540, 50540, 16985, 41167, 775, 300, 281, 291, 13, 50626, 50626, 1610, 3565, 16985, 41167, 46691, 11, 562, 291, 646, 48256, 11, 50784, 50784, 309, 775, 21538, 13, 50854, 50854, 400, 309, 775, 2293, 300, 13, 50904, 50904, 467, 21020, 760, 264, 2281, 295, 264, 3006, 1867, 13, 51010, 51010, 467, 21020, 493, 264, 25737, 295, 439, 264, 661, 6338, 51124, 51124, 538, 15866, 264, 3565, 295, 264, 2408, 295, 439, 264, 6338, 51240, 51240, 295, 21510, 3175, 264, 25737, 13, 51426, 51426, 407, 510, 11, 27708, 4974, 2519, 51540, 51540, 307, 1936, 364, 1365, 295, 300, 13, 51642, 51642, 583, 291, 434, 406, 884, 21538, 13, 51716, 51716, 509, 434, 884, 733, 295, 18519, 17630, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.15132086827204777, "compression_ratio": 1.8, "no_speech_prob": 1.0952351658488624e-05}, {"id": 770, "seek": 231424, "start": 2335.4799999999996, "end": 2337.7599999999998, "text": " So here, conditional random field", "tokens": [50364, 286, 528, 439, 729, 33783, 281, 312, 1359, 13, 50540, 50540, 16985, 41167, 775, 300, 281, 291, 13, 50626, 50626, 1610, 3565, 16985, 41167, 46691, 11, 562, 291, 646, 48256, 11, 50784, 50784, 309, 775, 21538, 13, 50854, 50854, 400, 309, 775, 2293, 300, 13, 50904, 50904, 467, 21020, 760, 264, 2281, 295, 264, 3006, 1867, 13, 51010, 51010, 467, 21020, 493, 264, 25737, 295, 439, 264, 661, 6338, 51124, 51124, 538, 15866, 264, 3565, 295, 264, 2408, 295, 439, 264, 6338, 51240, 51240, 295, 21510, 3175, 264, 25737, 13, 51426, 51426, 407, 510, 11, 27708, 4974, 2519, 51540, 51540, 307, 1936, 364, 1365, 295, 300, 13, 51642, 51642, 583, 291, 434, 406, 884, 21538, 13, 51716, 51716, 509, 434, 884, 733, 295, 18519, 17630, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.15132086827204777, "compression_ratio": 1.8, "no_speech_prob": 1.0952351658488624e-05}, {"id": 771, "seek": 231424, "start": 2337.7599999999998, "end": 2339.7999999999997, "text": " is basically an example of that.", "tokens": [50364, 286, 528, 439, 729, 33783, 281, 312, 1359, 13, 50540, 50540, 16985, 41167, 775, 300, 281, 291, 13, 50626, 50626, 1610, 3565, 16985, 41167, 46691, 11, 562, 291, 646, 48256, 11, 50784, 50784, 309, 775, 21538, 13, 50854, 50854, 400, 309, 775, 2293, 300, 13, 50904, 50904, 467, 21020, 760, 264, 2281, 295, 264, 3006, 1867, 13, 51010, 51010, 467, 21020, 493, 264, 25737, 295, 439, 264, 661, 6338, 51124, 51124, 538, 15866, 264, 3565, 295, 264, 2408, 295, 439, 264, 6338, 51240, 51240, 295, 21510, 3175, 264, 25737, 13, 51426, 51426, 407, 510, 11, 27708, 4974, 2519, 51540, 51540, 307, 1936, 364, 1365, 295, 300, 13, 51642, 51642, 583, 291, 434, 406, 884, 21538, 13, 51716, 51716, 509, 434, 884, 733, 295, 18519, 17630, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.15132086827204777, "compression_ratio": 1.8, "no_speech_prob": 1.0952351658488624e-05}, {"id": 772, "seek": 231424, "start": 2339.7999999999997, "end": 2341.2799999999997, "text": " But you're not doing classification.", "tokens": [50364, 286, 528, 439, 729, 33783, 281, 312, 1359, 13, 50540, 50540, 16985, 41167, 775, 300, 281, 291, 13, 50626, 50626, 1610, 3565, 16985, 41167, 46691, 11, 562, 291, 646, 48256, 11, 50784, 50784, 309, 775, 21538, 13, 50854, 50854, 400, 309, 775, 2293, 300, 13, 50904, 50904, 467, 21020, 760, 264, 2281, 295, 264, 3006, 1867, 13, 51010, 51010, 467, 21020, 493, 264, 25737, 295, 439, 264, 661, 6338, 51124, 51124, 538, 15866, 264, 3565, 295, 264, 2408, 295, 439, 264, 6338, 51240, 51240, 295, 21510, 3175, 264, 25737, 13, 51426, 51426, 407, 510, 11, 27708, 4974, 2519, 51540, 51540, 307, 1936, 364, 1365, 295, 300, 13, 51642, 51642, 583, 291, 434, 406, 884, 21538, 13, 51716, 51716, 509, 434, 884, 733, 295, 18519, 17630, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.15132086827204777, "compression_ratio": 1.8, "no_speech_prob": 1.0952351658488624e-05}, {"id": 773, "seek": 231424, "start": 2341.2799999999997, "end": 2343.3599999999997, "text": " You're doing kind of structured prediction.", "tokens": [50364, 286, 528, 439, 729, 33783, 281, 312, 1359, 13, 50540, 50540, 16985, 41167, 775, 300, 281, 291, 13, 50626, 50626, 1610, 3565, 16985, 41167, 46691, 11, 562, 291, 646, 48256, 11, 50784, 50784, 309, 775, 21538, 13, 50854, 50854, 400, 309, 775, 2293, 300, 13, 50904, 50904, 467, 21020, 760, 264, 2281, 295, 264, 3006, 1867, 13, 51010, 51010, 467, 21020, 493, 264, 25737, 295, 439, 264, 661, 6338, 51124, 51124, 538, 15866, 264, 3565, 295, 264, 2408, 295, 439, 264, 6338, 51240, 51240, 295, 21510, 3175, 264, 25737, 13, 51426, 51426, 407, 510, 11, 27708, 4974, 2519, 51540, 51540, 307, 1936, 364, 1365, 295, 300, 13, 51642, 51642, 583, 291, 434, 406, 884, 21538, 13, 51716, 51716, 509, 434, 884, 733, 295, 18519, 17630, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.15132086827204777, "compression_ratio": 1.8, "no_speech_prob": 1.0952351658488624e-05}, {"id": 774, "seek": 234336, "start": 2343.36, "end": 2349.4, "text": " And in the positive case, you have the correct configuration", "tokens": [50364, 400, 294, 264, 3353, 1389, 11, 291, 362, 264, 3006, 11694, 50666, 50666, 295, 288, 16, 11, 288, 17, 11, 288, 19, 13, 50872, 50872, 400, 264, 18424, 2306, 366, 406, 18424, 10479, 51064, 51064, 382, 294, 21538, 13, 51188, 51188, 583, 456, 366, 18424, 31493, 295, 288, 16, 11, 288, 17, 11, 51316, 51316, 288, 18, 11, 288, 19, 13, 51348, 51532, 5358, 813, 300, 11, 309, 311, 445, 646, 2365, 13, 51756, 51756, 286, 914, 11, 309, 311, 406, 754, 646, 2365, 510, 11, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.2114105012681749, "compression_ratio": 1.6358381502890174, "no_speech_prob": 7.411028491333127e-06}, {"id": 775, "seek": 234336, "start": 2349.4, "end": 2353.52, "text": " of y1, y2, y4.", "tokens": [50364, 400, 294, 264, 3353, 1389, 11, 291, 362, 264, 3006, 11694, 50666, 50666, 295, 288, 16, 11, 288, 17, 11, 288, 19, 13, 50872, 50872, 400, 264, 18424, 2306, 366, 406, 18424, 10479, 51064, 51064, 382, 294, 21538, 13, 51188, 51188, 583, 456, 366, 18424, 31493, 295, 288, 16, 11, 288, 17, 11, 51316, 51316, 288, 18, 11, 288, 19, 13, 51348, 51532, 5358, 813, 300, 11, 309, 311, 445, 646, 2365, 13, 51756, 51756, 286, 914, 11, 309, 311, 406, 754, 646, 2365, 510, 11, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.2114105012681749, "compression_ratio": 1.6358381502890174, "no_speech_prob": 7.411028491333127e-06}, {"id": 776, "seek": 234336, "start": 2353.52, "end": 2357.36, "text": " And the incorrect ones are not incorrect categories", "tokens": [50364, 400, 294, 264, 3353, 1389, 11, 291, 362, 264, 3006, 11694, 50666, 50666, 295, 288, 16, 11, 288, 17, 11, 288, 19, 13, 50872, 50872, 400, 264, 18424, 2306, 366, 406, 18424, 10479, 51064, 51064, 382, 294, 21538, 13, 51188, 51188, 583, 456, 366, 18424, 31493, 295, 288, 16, 11, 288, 17, 11, 51316, 51316, 288, 18, 11, 288, 19, 13, 51348, 51532, 5358, 813, 300, 11, 309, 311, 445, 646, 2365, 13, 51756, 51756, 286, 914, 11, 309, 311, 406, 754, 646, 2365, 510, 11, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.2114105012681749, "compression_ratio": 1.6358381502890174, "no_speech_prob": 7.411028491333127e-06}, {"id": 777, "seek": 234336, "start": 2357.36, "end": 2359.84, "text": " as in classification.", "tokens": [50364, 400, 294, 264, 3353, 1389, 11, 291, 362, 264, 3006, 11694, 50666, 50666, 295, 288, 16, 11, 288, 17, 11, 288, 19, 13, 50872, 50872, 400, 264, 18424, 2306, 366, 406, 18424, 10479, 51064, 51064, 382, 294, 21538, 13, 51188, 51188, 583, 456, 366, 18424, 31493, 295, 288, 16, 11, 288, 17, 11, 51316, 51316, 288, 18, 11, 288, 19, 13, 51348, 51532, 5358, 813, 300, 11, 309, 311, 445, 646, 2365, 13, 51756, 51756, 286, 914, 11, 309, 311, 406, 754, 646, 2365, 510, 11, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.2114105012681749, "compression_ratio": 1.6358381502890174, "no_speech_prob": 7.411028491333127e-06}, {"id": 778, "seek": 234336, "start": 2359.84, "end": 2362.4, "text": " But there are incorrect configurations of y1, y2,", "tokens": [50364, 400, 294, 264, 3353, 1389, 11, 291, 362, 264, 3006, 11694, 50666, 50666, 295, 288, 16, 11, 288, 17, 11, 288, 19, 13, 50872, 50872, 400, 264, 18424, 2306, 366, 406, 18424, 10479, 51064, 51064, 382, 294, 21538, 13, 51188, 51188, 583, 456, 366, 18424, 31493, 295, 288, 16, 11, 288, 17, 11, 51316, 51316, 288, 18, 11, 288, 19, 13, 51348, 51532, 5358, 813, 300, 11, 309, 311, 445, 646, 2365, 13, 51756, 51756, 286, 914, 11, 309, 311, 406, 754, 646, 2365, 510, 11, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.2114105012681749, "compression_ratio": 1.6358381502890174, "no_speech_prob": 7.411028491333127e-06}, {"id": 779, "seek": 234336, "start": 2362.4, "end": 2363.04, "text": " y3, y4.", "tokens": [50364, 400, 294, 264, 3353, 1389, 11, 291, 362, 264, 3006, 11694, 50666, 50666, 295, 288, 16, 11, 288, 17, 11, 288, 19, 13, 50872, 50872, 400, 264, 18424, 2306, 366, 406, 18424, 10479, 51064, 51064, 382, 294, 21538, 13, 51188, 51188, 583, 456, 366, 18424, 31493, 295, 288, 16, 11, 288, 17, 11, 51316, 51316, 288, 18, 11, 288, 19, 13, 51348, 51532, 5358, 813, 300, 11, 309, 311, 445, 646, 2365, 13, 51756, 51756, 286, 914, 11, 309, 311, 406, 754, 646, 2365, 510, 11, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.2114105012681749, "compression_ratio": 1.6358381502890174, "no_speech_prob": 7.411028491333127e-06}, {"id": 780, "seek": 234336, "start": 2366.7200000000003, "end": 2371.2000000000003, "text": " Other than that, it's just back prop.", "tokens": [50364, 400, 294, 264, 3353, 1389, 11, 291, 362, 264, 3006, 11694, 50666, 50666, 295, 288, 16, 11, 288, 17, 11, 288, 19, 13, 50872, 50872, 400, 264, 18424, 2306, 366, 406, 18424, 10479, 51064, 51064, 382, 294, 21538, 13, 51188, 51188, 583, 456, 366, 18424, 31493, 295, 288, 16, 11, 288, 17, 11, 51316, 51316, 288, 18, 11, 288, 19, 13, 51348, 51532, 5358, 813, 300, 11, 309, 311, 445, 646, 2365, 13, 51756, 51756, 286, 914, 11, 309, 311, 406, 754, 646, 2365, 510, 11, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.2114105012681749, "compression_ratio": 1.6358381502890174, "no_speech_prob": 7.411028491333127e-06}, {"id": 781, "seek": 234336, "start": 2371.2000000000003, "end": 2372.84, "text": " I mean, it's not even back prop here,", "tokens": [50364, 400, 294, 264, 3353, 1389, 11, 291, 362, 264, 3006, 11694, 50666, 50666, 295, 288, 16, 11, 288, 17, 11, 288, 19, 13, 50872, 50872, 400, 264, 18424, 2306, 366, 406, 18424, 10479, 51064, 51064, 382, 294, 21538, 13, 51188, 51188, 583, 456, 366, 18424, 31493, 295, 288, 16, 11, 288, 17, 11, 51316, 51316, 288, 18, 11, 288, 19, 13, 51348, 51532, 5358, 813, 300, 11, 309, 311, 445, 646, 2365, 13, 51756, 51756, 286, 914, 11, 309, 311, 406, 754, 646, 2365, 510, 11, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.2114105012681749, "compression_ratio": 1.6358381502890174, "no_speech_prob": 7.411028491333127e-06}, {"id": 782, "seek": 237284, "start": 2372.84, "end": 2374.56, "text": " it's a shallow network.", "tokens": [50364, 309, 311, 257, 20488, 3209, 13, 50450, 50450, 759, 291, 829, 257, 1379, 18161, 2533, 294, 456, 11, 50528, 50528, 257, 13075, 1602, 538, 261, 311, 11, 300, 576, 312, 6239, 19532, 511, 13, 50678, 50678, 400, 300, 576, 312, 733, 295, 257, 2452, 27708, 4974, 2519, 50906, 50906, 498, 291, 528, 11, 597, 2011, 281, 767, 2514, 949, 27708, 51038, 51038, 4974, 7909, 13, 51128, 51128, 1692, 311, 1071, 1558, 13, 51174, 51174, 509, 393, 764, 257, 28822, 4470, 13, 51226, 51226, 407, 264, 28822, 4470, 1619, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 51408, 51408, 281, 312, 2295, 13, 51460, 51460, 400, 550, 3654, 439, 1944, 31493, 51566, 51566, 295, 18424, 6338, 11, 18424, 31493, 295, 288, 311, 11, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1997097946527436, "compression_ratio": 1.7865168539325842, "no_speech_prob": 7.182847184594721e-06}, {"id": 783, "seek": 237284, "start": 2374.56, "end": 2376.1200000000003, "text": " If you put a whole neural net in there,", "tokens": [50364, 309, 311, 257, 20488, 3209, 13, 50450, 50450, 759, 291, 829, 257, 1379, 18161, 2533, 294, 456, 11, 50528, 50528, 257, 13075, 1602, 538, 261, 311, 11, 300, 576, 312, 6239, 19532, 511, 13, 50678, 50678, 400, 300, 576, 312, 733, 295, 257, 2452, 27708, 4974, 2519, 50906, 50906, 498, 291, 528, 11, 597, 2011, 281, 767, 2514, 949, 27708, 51038, 51038, 4974, 7909, 13, 51128, 51128, 1692, 311, 1071, 1558, 13, 51174, 51174, 509, 393, 764, 257, 28822, 4470, 13, 51226, 51226, 407, 264, 28822, 4470, 1619, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 51408, 51408, 281, 312, 2295, 13, 51460, 51460, 400, 550, 3654, 439, 1944, 31493, 51566, 51566, 295, 18424, 6338, 11, 18424, 31493, 295, 288, 311, 11, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1997097946527436, "compression_ratio": 1.7865168539325842, "no_speech_prob": 7.182847184594721e-06}, {"id": 784, "seek": 237284, "start": 2376.1200000000003, "end": 2379.1200000000003, "text": " a parameterized by w's, that would be perfectly kosher.", "tokens": [50364, 309, 311, 257, 20488, 3209, 13, 50450, 50450, 759, 291, 829, 257, 1379, 18161, 2533, 294, 456, 11, 50528, 50528, 257, 13075, 1602, 538, 261, 311, 11, 300, 576, 312, 6239, 19532, 511, 13, 50678, 50678, 400, 300, 576, 312, 733, 295, 257, 2452, 27708, 4974, 2519, 50906, 50906, 498, 291, 528, 11, 597, 2011, 281, 767, 2514, 949, 27708, 51038, 51038, 4974, 7909, 13, 51128, 51128, 1692, 311, 1071, 1558, 13, 51174, 51174, 509, 393, 764, 257, 28822, 4470, 13, 51226, 51226, 407, 264, 28822, 4470, 1619, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 51408, 51408, 281, 312, 2295, 13, 51460, 51460, 400, 550, 3654, 439, 1944, 31493, 51566, 51566, 295, 18424, 6338, 11, 18424, 31493, 295, 288, 311, 11, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1997097946527436, "compression_ratio": 1.7865168539325842, "no_speech_prob": 7.182847184594721e-06}, {"id": 785, "seek": 237284, "start": 2379.1200000000003, "end": 2383.6800000000003, "text": " And that would be kind of a deep conditional random field", "tokens": [50364, 309, 311, 257, 20488, 3209, 13, 50450, 50450, 759, 291, 829, 257, 1379, 18161, 2533, 294, 456, 11, 50528, 50528, 257, 13075, 1602, 538, 261, 311, 11, 300, 576, 312, 6239, 19532, 511, 13, 50678, 50678, 400, 300, 576, 312, 733, 295, 257, 2452, 27708, 4974, 2519, 50906, 50906, 498, 291, 528, 11, 597, 2011, 281, 767, 2514, 949, 27708, 51038, 51038, 4974, 7909, 13, 51128, 51128, 1692, 311, 1071, 1558, 13, 51174, 51174, 509, 393, 764, 257, 28822, 4470, 13, 51226, 51226, 407, 264, 28822, 4470, 1619, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 51408, 51408, 281, 312, 2295, 13, 51460, 51460, 400, 550, 3654, 439, 1944, 31493, 51566, 51566, 295, 18424, 6338, 11, 18424, 31493, 295, 288, 311, 11, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1997097946527436, "compression_ratio": 1.7865168539325842, "no_speech_prob": 7.182847184594721e-06}, {"id": 786, "seek": 237284, "start": 2383.6800000000003, "end": 2386.32, "text": " if you want, which happened to actually exist before conditional", "tokens": [50364, 309, 311, 257, 20488, 3209, 13, 50450, 50450, 759, 291, 829, 257, 1379, 18161, 2533, 294, 456, 11, 50528, 50528, 257, 13075, 1602, 538, 261, 311, 11, 300, 576, 312, 6239, 19532, 511, 13, 50678, 50678, 400, 300, 576, 312, 733, 295, 257, 2452, 27708, 4974, 2519, 50906, 50906, 498, 291, 528, 11, 597, 2011, 281, 767, 2514, 949, 27708, 51038, 51038, 4974, 7909, 13, 51128, 51128, 1692, 311, 1071, 1558, 13, 51174, 51174, 509, 393, 764, 257, 28822, 4470, 13, 51226, 51226, 407, 264, 28822, 4470, 1619, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 51408, 51408, 281, 312, 2295, 13, 51460, 51460, 400, 550, 3654, 439, 1944, 31493, 51566, 51566, 295, 18424, 6338, 11, 18424, 31493, 295, 288, 311, 11, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1997097946527436, "compression_ratio": 1.7865168539325842, "no_speech_prob": 7.182847184594721e-06}, {"id": 787, "seek": 237284, "start": 2386.32, "end": 2388.1200000000003, "text": " random fields.", "tokens": [50364, 309, 311, 257, 20488, 3209, 13, 50450, 50450, 759, 291, 829, 257, 1379, 18161, 2533, 294, 456, 11, 50528, 50528, 257, 13075, 1602, 538, 261, 311, 11, 300, 576, 312, 6239, 19532, 511, 13, 50678, 50678, 400, 300, 576, 312, 733, 295, 257, 2452, 27708, 4974, 2519, 50906, 50906, 498, 291, 528, 11, 597, 2011, 281, 767, 2514, 949, 27708, 51038, 51038, 4974, 7909, 13, 51128, 51128, 1692, 311, 1071, 1558, 13, 51174, 51174, 509, 393, 764, 257, 28822, 4470, 13, 51226, 51226, 407, 264, 28822, 4470, 1619, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 51408, 51408, 281, 312, 2295, 13, 51460, 51460, 400, 550, 3654, 439, 1944, 31493, 51566, 51566, 295, 18424, 6338, 11, 18424, 31493, 295, 288, 311, 11, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1997097946527436, "compression_ratio": 1.7865168539325842, "no_speech_prob": 7.182847184594721e-06}, {"id": 788, "seek": 237284, "start": 2388.1200000000003, "end": 2389.04, "text": " Here's another idea.", "tokens": [50364, 309, 311, 257, 20488, 3209, 13, 50450, 50450, 759, 291, 829, 257, 1379, 18161, 2533, 294, 456, 11, 50528, 50528, 257, 13075, 1602, 538, 261, 311, 11, 300, 576, 312, 6239, 19532, 511, 13, 50678, 50678, 400, 300, 576, 312, 733, 295, 257, 2452, 27708, 4974, 2519, 50906, 50906, 498, 291, 528, 11, 597, 2011, 281, 767, 2514, 949, 27708, 51038, 51038, 4974, 7909, 13, 51128, 51128, 1692, 311, 1071, 1558, 13, 51174, 51174, 509, 393, 764, 257, 28822, 4470, 13, 51226, 51226, 407, 264, 28822, 4470, 1619, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 51408, 51408, 281, 312, 2295, 13, 51460, 51460, 400, 550, 3654, 439, 1944, 31493, 51566, 51566, 295, 18424, 6338, 11, 18424, 31493, 295, 288, 311, 11, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1997097946527436, "compression_ratio": 1.7865168539325842, "no_speech_prob": 7.182847184594721e-06}, {"id": 789, "seek": 237284, "start": 2389.04, "end": 2390.08, "text": " You can use a hinge loss.", "tokens": [50364, 309, 311, 257, 20488, 3209, 13, 50450, 50450, 759, 291, 829, 257, 1379, 18161, 2533, 294, 456, 11, 50528, 50528, 257, 13075, 1602, 538, 261, 311, 11, 300, 576, 312, 6239, 19532, 511, 13, 50678, 50678, 400, 300, 576, 312, 733, 295, 257, 2452, 27708, 4974, 2519, 50906, 50906, 498, 291, 528, 11, 597, 2011, 281, 767, 2514, 949, 27708, 51038, 51038, 4974, 7909, 13, 51128, 51128, 1692, 311, 1071, 1558, 13, 51174, 51174, 509, 393, 764, 257, 28822, 4470, 13, 51226, 51226, 407, 264, 28822, 4470, 1619, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 51408, 51408, 281, 312, 2295, 13, 51460, 51460, 400, 550, 3654, 439, 1944, 31493, 51566, 51566, 295, 18424, 6338, 11, 18424, 31493, 295, 288, 311, 11, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1997097946527436, "compression_ratio": 1.7865168539325842, "no_speech_prob": 7.182847184594721e-06}, {"id": 790, "seek": 237284, "start": 2390.08, "end": 2393.7200000000003, "text": " So the hinge loss says, I want the energy of the correct answer", "tokens": [50364, 309, 311, 257, 20488, 3209, 13, 50450, 50450, 759, 291, 829, 257, 1379, 18161, 2533, 294, 456, 11, 50528, 50528, 257, 13075, 1602, 538, 261, 311, 11, 300, 576, 312, 6239, 19532, 511, 13, 50678, 50678, 400, 300, 576, 312, 733, 295, 257, 2452, 27708, 4974, 2519, 50906, 50906, 498, 291, 528, 11, 597, 2011, 281, 767, 2514, 949, 27708, 51038, 51038, 4974, 7909, 13, 51128, 51128, 1692, 311, 1071, 1558, 13, 51174, 51174, 509, 393, 764, 257, 28822, 4470, 13, 51226, 51226, 407, 264, 28822, 4470, 1619, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 51408, 51408, 281, 312, 2295, 13, 51460, 51460, 400, 550, 3654, 439, 1944, 31493, 51566, 51566, 295, 18424, 6338, 11, 18424, 31493, 295, 288, 311, 11, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1997097946527436, "compression_ratio": 1.7865168539325842, "no_speech_prob": 7.182847184594721e-06}, {"id": 791, "seek": 237284, "start": 2393.7200000000003, "end": 2394.76, "text": " to be low.", "tokens": [50364, 309, 311, 257, 20488, 3209, 13, 50450, 50450, 759, 291, 829, 257, 1379, 18161, 2533, 294, 456, 11, 50528, 50528, 257, 13075, 1602, 538, 261, 311, 11, 300, 576, 312, 6239, 19532, 511, 13, 50678, 50678, 400, 300, 576, 312, 733, 295, 257, 2452, 27708, 4974, 2519, 50906, 50906, 498, 291, 528, 11, 597, 2011, 281, 767, 2514, 949, 27708, 51038, 51038, 4974, 7909, 13, 51128, 51128, 1692, 311, 1071, 1558, 13, 51174, 51174, 509, 393, 764, 257, 28822, 4470, 13, 51226, 51226, 407, 264, 28822, 4470, 1619, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 51408, 51408, 281, 312, 2295, 13, 51460, 51460, 400, 550, 3654, 439, 1944, 31493, 51566, 51566, 295, 18424, 6338, 11, 18424, 31493, 295, 288, 311, 11, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1997097946527436, "compression_ratio": 1.7865168539325842, "no_speech_prob": 7.182847184594721e-06}, {"id": 792, "seek": 237284, "start": 2394.76, "end": 2396.88, "text": " And then among all possible configurations", "tokens": [50364, 309, 311, 257, 20488, 3209, 13, 50450, 50450, 759, 291, 829, 257, 1379, 18161, 2533, 294, 456, 11, 50528, 50528, 257, 13075, 1602, 538, 261, 311, 11, 300, 576, 312, 6239, 19532, 511, 13, 50678, 50678, 400, 300, 576, 312, 733, 295, 257, 2452, 27708, 4974, 2519, 50906, 50906, 498, 291, 528, 11, 597, 2011, 281, 767, 2514, 949, 27708, 51038, 51038, 4974, 7909, 13, 51128, 51128, 1692, 311, 1071, 1558, 13, 51174, 51174, 509, 393, 764, 257, 28822, 4470, 13, 51226, 51226, 407, 264, 28822, 4470, 1619, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 51408, 51408, 281, 312, 2295, 13, 51460, 51460, 400, 550, 3654, 439, 1944, 31493, 51566, 51566, 295, 18424, 6338, 11, 18424, 31493, 295, 288, 311, 11, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1997097946527436, "compression_ratio": 1.7865168539325842, "no_speech_prob": 7.182847184594721e-06}, {"id": 793, "seek": 237284, "start": 2396.88, "end": 2400.4, "text": " of incorrect answers, incorrect configurations of y's,", "tokens": [50364, 309, 311, 257, 20488, 3209, 13, 50450, 50450, 759, 291, 829, 257, 1379, 18161, 2533, 294, 456, 11, 50528, 50528, 257, 13075, 1602, 538, 261, 311, 11, 300, 576, 312, 6239, 19532, 511, 13, 50678, 50678, 400, 300, 576, 312, 733, 295, 257, 2452, 27708, 4974, 2519, 50906, 50906, 498, 291, 528, 11, 597, 2011, 281, 767, 2514, 949, 27708, 51038, 51038, 4974, 7909, 13, 51128, 51128, 1692, 311, 1071, 1558, 13, 51174, 51174, 509, 393, 764, 257, 28822, 4470, 13, 51226, 51226, 407, 264, 28822, 4470, 1619, 11, 286, 528, 264, 2281, 295, 264, 3006, 1867, 51408, 51408, 281, 312, 2295, 13, 51460, 51460, 400, 550, 3654, 439, 1944, 31493, 51566, 51566, 295, 18424, 6338, 11, 18424, 31493, 295, 288, 311, 11, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1997097946527436, "compression_ratio": 1.7865168539325842, "no_speech_prob": 7.182847184594721e-06}, {"id": 794, "seek": 240040, "start": 2400.4, "end": 2403.08, "text": " I'm going to look for the one that has the lowest energy", "tokens": [50364, 286, 478, 516, 281, 574, 337, 264, 472, 300, 575, 264, 12437, 2281, 50498, 50498, 3654, 439, 264, 1578, 2306, 13, 50626, 50626, 400, 300, 472, 286, 478, 516, 281, 2944, 493, 13, 50712, 50712, 286, 500, 380, 643, 281, 2944, 264, 661, 2306, 50786, 50786, 570, 436, 366, 4833, 4033, 13, 50890, 50890, 407, 286, 478, 445, 516, 281, 2573, 484, 597, 51042, 51042, 11694, 295, 288, 16, 11, 288, 17, 11, 288, 18, 11, 288, 19, 307, 1293, 18424, 11, 51260, 51260, 457, 3654, 439, 18424, 31493, 11, 51368, 51368, 575, 264, 12437, 2281, 13, 51432, 51432, 400, 286, 478, 516, 281, 2944, 300, 493, 13, 51544, 51544, 400, 264, 636, 286, 2944, 493, 293, 2944, 760, 51620, 51620, 307, 286, 478, 516, 281, 829, 264, 2649, 295, 729, 732, 51718, 51718, 25737, 294, 257, 28822, 4470, 370, 300, 264, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1550837477592573, "compression_ratio": 1.924901185770751, "no_speech_prob": 5.475283251143992e-05}, {"id": 795, "seek": 240040, "start": 2403.08, "end": 2405.64, "text": " among all the bad ones.", "tokens": [50364, 286, 478, 516, 281, 574, 337, 264, 472, 300, 575, 264, 12437, 2281, 50498, 50498, 3654, 439, 264, 1578, 2306, 13, 50626, 50626, 400, 300, 472, 286, 478, 516, 281, 2944, 493, 13, 50712, 50712, 286, 500, 380, 643, 281, 2944, 264, 661, 2306, 50786, 50786, 570, 436, 366, 4833, 4033, 13, 50890, 50890, 407, 286, 478, 445, 516, 281, 2573, 484, 597, 51042, 51042, 11694, 295, 288, 16, 11, 288, 17, 11, 288, 18, 11, 288, 19, 307, 1293, 18424, 11, 51260, 51260, 457, 3654, 439, 18424, 31493, 11, 51368, 51368, 575, 264, 12437, 2281, 13, 51432, 51432, 400, 286, 478, 516, 281, 2944, 300, 493, 13, 51544, 51544, 400, 264, 636, 286, 2944, 493, 293, 2944, 760, 51620, 51620, 307, 286, 478, 516, 281, 829, 264, 2649, 295, 729, 732, 51718, 51718, 25737, 294, 257, 28822, 4470, 370, 300, 264, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1550837477592573, "compression_ratio": 1.924901185770751, "no_speech_prob": 5.475283251143992e-05}, {"id": 796, "seek": 240040, "start": 2405.64, "end": 2407.36, "text": " And that one I'm going to push up.", "tokens": [50364, 286, 478, 516, 281, 574, 337, 264, 472, 300, 575, 264, 12437, 2281, 50498, 50498, 3654, 439, 264, 1578, 2306, 13, 50626, 50626, 400, 300, 472, 286, 478, 516, 281, 2944, 493, 13, 50712, 50712, 286, 500, 380, 643, 281, 2944, 264, 661, 2306, 50786, 50786, 570, 436, 366, 4833, 4033, 13, 50890, 50890, 407, 286, 478, 445, 516, 281, 2573, 484, 597, 51042, 51042, 11694, 295, 288, 16, 11, 288, 17, 11, 288, 18, 11, 288, 19, 307, 1293, 18424, 11, 51260, 51260, 457, 3654, 439, 18424, 31493, 11, 51368, 51368, 575, 264, 12437, 2281, 13, 51432, 51432, 400, 286, 478, 516, 281, 2944, 300, 493, 13, 51544, 51544, 400, 264, 636, 286, 2944, 493, 293, 2944, 760, 51620, 51620, 307, 286, 478, 516, 281, 829, 264, 2649, 295, 729, 732, 51718, 51718, 25737, 294, 257, 28822, 4470, 370, 300, 264, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1550837477592573, "compression_ratio": 1.924901185770751, "no_speech_prob": 5.475283251143992e-05}, {"id": 797, "seek": 240040, "start": 2407.36, "end": 2408.84, "text": " I don't need to push the other ones", "tokens": [50364, 286, 478, 516, 281, 574, 337, 264, 472, 300, 575, 264, 12437, 2281, 50498, 50498, 3654, 439, 264, 1578, 2306, 13, 50626, 50626, 400, 300, 472, 286, 478, 516, 281, 2944, 493, 13, 50712, 50712, 286, 500, 380, 643, 281, 2944, 264, 661, 2306, 50786, 50786, 570, 436, 366, 4833, 4033, 13, 50890, 50890, 407, 286, 478, 445, 516, 281, 2573, 484, 597, 51042, 51042, 11694, 295, 288, 16, 11, 288, 17, 11, 288, 18, 11, 288, 19, 307, 1293, 18424, 11, 51260, 51260, 457, 3654, 439, 18424, 31493, 11, 51368, 51368, 575, 264, 12437, 2281, 13, 51432, 51432, 400, 286, 478, 516, 281, 2944, 300, 493, 13, 51544, 51544, 400, 264, 636, 286, 2944, 493, 293, 2944, 760, 51620, 51620, 307, 286, 478, 516, 281, 829, 264, 2649, 295, 729, 732, 51718, 51718, 25737, 294, 257, 28822, 4470, 370, 300, 264, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1550837477592573, "compression_ratio": 1.924901185770751, "no_speech_prob": 5.475283251143992e-05}, {"id": 798, "seek": 240040, "start": 2408.84, "end": 2410.92, "text": " because they are larger anyway.", "tokens": [50364, 286, 478, 516, 281, 574, 337, 264, 472, 300, 575, 264, 12437, 2281, 50498, 50498, 3654, 439, 264, 1578, 2306, 13, 50626, 50626, 400, 300, 472, 286, 478, 516, 281, 2944, 493, 13, 50712, 50712, 286, 500, 380, 643, 281, 2944, 264, 661, 2306, 50786, 50786, 570, 436, 366, 4833, 4033, 13, 50890, 50890, 407, 286, 478, 445, 516, 281, 2573, 484, 597, 51042, 51042, 11694, 295, 288, 16, 11, 288, 17, 11, 288, 18, 11, 288, 19, 307, 1293, 18424, 11, 51260, 51260, 457, 3654, 439, 18424, 31493, 11, 51368, 51368, 575, 264, 12437, 2281, 13, 51432, 51432, 400, 286, 478, 516, 281, 2944, 300, 493, 13, 51544, 51544, 400, 264, 636, 286, 2944, 493, 293, 2944, 760, 51620, 51620, 307, 286, 478, 516, 281, 829, 264, 2649, 295, 729, 732, 51718, 51718, 25737, 294, 257, 28822, 4470, 370, 300, 264, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1550837477592573, "compression_ratio": 1.924901185770751, "no_speech_prob": 5.475283251143992e-05}, {"id": 799, "seek": 240040, "start": 2410.92, "end": 2413.96, "text": " So I'm just going to figure out which", "tokens": [50364, 286, 478, 516, 281, 574, 337, 264, 472, 300, 575, 264, 12437, 2281, 50498, 50498, 3654, 439, 264, 1578, 2306, 13, 50626, 50626, 400, 300, 472, 286, 478, 516, 281, 2944, 493, 13, 50712, 50712, 286, 500, 380, 643, 281, 2944, 264, 661, 2306, 50786, 50786, 570, 436, 366, 4833, 4033, 13, 50890, 50890, 407, 286, 478, 445, 516, 281, 2573, 484, 597, 51042, 51042, 11694, 295, 288, 16, 11, 288, 17, 11, 288, 18, 11, 288, 19, 307, 1293, 18424, 11, 51260, 51260, 457, 3654, 439, 18424, 31493, 11, 51368, 51368, 575, 264, 12437, 2281, 13, 51432, 51432, 400, 286, 478, 516, 281, 2944, 300, 493, 13, 51544, 51544, 400, 264, 636, 286, 2944, 493, 293, 2944, 760, 51620, 51620, 307, 286, 478, 516, 281, 829, 264, 2649, 295, 729, 732, 51718, 51718, 25737, 294, 257, 28822, 4470, 370, 300, 264, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1550837477592573, "compression_ratio": 1.924901185770751, "no_speech_prob": 5.475283251143992e-05}, {"id": 800, "seek": 240040, "start": 2413.96, "end": 2418.32, "text": " configuration of y1, y2, y3, y4 is both incorrect,", "tokens": [50364, 286, 478, 516, 281, 574, 337, 264, 472, 300, 575, 264, 12437, 2281, 50498, 50498, 3654, 439, 264, 1578, 2306, 13, 50626, 50626, 400, 300, 472, 286, 478, 516, 281, 2944, 493, 13, 50712, 50712, 286, 500, 380, 643, 281, 2944, 264, 661, 2306, 50786, 50786, 570, 436, 366, 4833, 4033, 13, 50890, 50890, 407, 286, 478, 445, 516, 281, 2573, 484, 597, 51042, 51042, 11694, 295, 288, 16, 11, 288, 17, 11, 288, 18, 11, 288, 19, 307, 1293, 18424, 11, 51260, 51260, 457, 3654, 439, 18424, 31493, 11, 51368, 51368, 575, 264, 12437, 2281, 13, 51432, 51432, 400, 286, 478, 516, 281, 2944, 300, 493, 13, 51544, 51544, 400, 264, 636, 286, 2944, 493, 293, 2944, 760, 51620, 51620, 307, 286, 478, 516, 281, 829, 264, 2649, 295, 729, 732, 51718, 51718, 25737, 294, 257, 28822, 4470, 370, 300, 264, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1550837477592573, "compression_ratio": 1.924901185770751, "no_speech_prob": 5.475283251143992e-05}, {"id": 801, "seek": 240040, "start": 2418.32, "end": 2420.48, "text": " but among all incorrect configurations,", "tokens": [50364, 286, 478, 516, 281, 574, 337, 264, 472, 300, 575, 264, 12437, 2281, 50498, 50498, 3654, 439, 264, 1578, 2306, 13, 50626, 50626, 400, 300, 472, 286, 478, 516, 281, 2944, 493, 13, 50712, 50712, 286, 500, 380, 643, 281, 2944, 264, 661, 2306, 50786, 50786, 570, 436, 366, 4833, 4033, 13, 50890, 50890, 407, 286, 478, 445, 516, 281, 2573, 484, 597, 51042, 51042, 11694, 295, 288, 16, 11, 288, 17, 11, 288, 18, 11, 288, 19, 307, 1293, 18424, 11, 51260, 51260, 457, 3654, 439, 18424, 31493, 11, 51368, 51368, 575, 264, 12437, 2281, 13, 51432, 51432, 400, 286, 478, 516, 281, 2944, 300, 493, 13, 51544, 51544, 400, 264, 636, 286, 2944, 493, 293, 2944, 760, 51620, 51620, 307, 286, 478, 516, 281, 829, 264, 2649, 295, 729, 732, 51718, 51718, 25737, 294, 257, 28822, 4470, 370, 300, 264, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1550837477592573, "compression_ratio": 1.924901185770751, "no_speech_prob": 5.475283251143992e-05}, {"id": 802, "seek": 240040, "start": 2420.48, "end": 2421.76, "text": " has the lowest energy.", "tokens": [50364, 286, 478, 516, 281, 574, 337, 264, 472, 300, 575, 264, 12437, 2281, 50498, 50498, 3654, 439, 264, 1578, 2306, 13, 50626, 50626, 400, 300, 472, 286, 478, 516, 281, 2944, 493, 13, 50712, 50712, 286, 500, 380, 643, 281, 2944, 264, 661, 2306, 50786, 50786, 570, 436, 366, 4833, 4033, 13, 50890, 50890, 407, 286, 478, 445, 516, 281, 2573, 484, 597, 51042, 51042, 11694, 295, 288, 16, 11, 288, 17, 11, 288, 18, 11, 288, 19, 307, 1293, 18424, 11, 51260, 51260, 457, 3654, 439, 18424, 31493, 11, 51368, 51368, 575, 264, 12437, 2281, 13, 51432, 51432, 400, 286, 478, 516, 281, 2944, 300, 493, 13, 51544, 51544, 400, 264, 636, 286, 2944, 493, 293, 2944, 760, 51620, 51620, 307, 286, 478, 516, 281, 829, 264, 2649, 295, 729, 732, 51718, 51718, 25737, 294, 257, 28822, 4470, 370, 300, 264, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1550837477592573, "compression_ratio": 1.924901185770751, "no_speech_prob": 5.475283251143992e-05}, {"id": 803, "seek": 240040, "start": 2421.76, "end": 2424.0, "text": " And I'm going to push that up.", "tokens": [50364, 286, 478, 516, 281, 574, 337, 264, 472, 300, 575, 264, 12437, 2281, 50498, 50498, 3654, 439, 264, 1578, 2306, 13, 50626, 50626, 400, 300, 472, 286, 478, 516, 281, 2944, 493, 13, 50712, 50712, 286, 500, 380, 643, 281, 2944, 264, 661, 2306, 50786, 50786, 570, 436, 366, 4833, 4033, 13, 50890, 50890, 407, 286, 478, 445, 516, 281, 2573, 484, 597, 51042, 51042, 11694, 295, 288, 16, 11, 288, 17, 11, 288, 18, 11, 288, 19, 307, 1293, 18424, 11, 51260, 51260, 457, 3654, 439, 18424, 31493, 11, 51368, 51368, 575, 264, 12437, 2281, 13, 51432, 51432, 400, 286, 478, 516, 281, 2944, 300, 493, 13, 51544, 51544, 400, 264, 636, 286, 2944, 493, 293, 2944, 760, 51620, 51620, 307, 286, 478, 516, 281, 829, 264, 2649, 295, 729, 732, 51718, 51718, 25737, 294, 257, 28822, 4470, 370, 300, 264, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1550837477592573, "compression_ratio": 1.924901185770751, "no_speech_prob": 5.475283251143992e-05}, {"id": 804, "seek": 240040, "start": 2424.0, "end": 2425.52, "text": " And the way I push up and push down", "tokens": [50364, 286, 478, 516, 281, 574, 337, 264, 472, 300, 575, 264, 12437, 2281, 50498, 50498, 3654, 439, 264, 1578, 2306, 13, 50626, 50626, 400, 300, 472, 286, 478, 516, 281, 2944, 493, 13, 50712, 50712, 286, 500, 380, 643, 281, 2944, 264, 661, 2306, 50786, 50786, 570, 436, 366, 4833, 4033, 13, 50890, 50890, 407, 286, 478, 445, 516, 281, 2573, 484, 597, 51042, 51042, 11694, 295, 288, 16, 11, 288, 17, 11, 288, 18, 11, 288, 19, 307, 1293, 18424, 11, 51260, 51260, 457, 3654, 439, 18424, 31493, 11, 51368, 51368, 575, 264, 12437, 2281, 13, 51432, 51432, 400, 286, 478, 516, 281, 2944, 300, 493, 13, 51544, 51544, 400, 264, 636, 286, 2944, 493, 293, 2944, 760, 51620, 51620, 307, 286, 478, 516, 281, 829, 264, 2649, 295, 729, 732, 51718, 51718, 25737, 294, 257, 28822, 4470, 370, 300, 264, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1550837477592573, "compression_ratio": 1.924901185770751, "no_speech_prob": 5.475283251143992e-05}, {"id": 805, "seek": 240040, "start": 2425.52, "end": 2427.48, "text": " is I'm going to put the difference of those two", "tokens": [50364, 286, 478, 516, 281, 574, 337, 264, 472, 300, 575, 264, 12437, 2281, 50498, 50498, 3654, 439, 264, 1578, 2306, 13, 50626, 50626, 400, 300, 472, 286, 478, 516, 281, 2944, 493, 13, 50712, 50712, 286, 500, 380, 643, 281, 2944, 264, 661, 2306, 50786, 50786, 570, 436, 366, 4833, 4033, 13, 50890, 50890, 407, 286, 478, 445, 516, 281, 2573, 484, 597, 51042, 51042, 11694, 295, 288, 16, 11, 288, 17, 11, 288, 18, 11, 288, 19, 307, 1293, 18424, 11, 51260, 51260, 457, 3654, 439, 18424, 31493, 11, 51368, 51368, 575, 264, 12437, 2281, 13, 51432, 51432, 400, 286, 478, 516, 281, 2944, 300, 493, 13, 51544, 51544, 400, 264, 636, 286, 2944, 493, 293, 2944, 760, 51620, 51620, 307, 286, 478, 516, 281, 829, 264, 2649, 295, 729, 732, 51718, 51718, 25737, 294, 257, 28822, 4470, 370, 300, 264, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1550837477592573, "compression_ratio": 1.924901185770751, "no_speech_prob": 5.475283251143992e-05}, {"id": 806, "seek": 240040, "start": 2427.48, "end": 2430.36, "text": " energies in a hinge loss so that the", "tokens": [50364, 286, 478, 516, 281, 574, 337, 264, 472, 300, 575, 264, 12437, 2281, 50498, 50498, 3654, 439, 264, 1578, 2306, 13, 50626, 50626, 400, 300, 472, 286, 478, 516, 281, 2944, 493, 13, 50712, 50712, 286, 500, 380, 643, 281, 2944, 264, 661, 2306, 50786, 50786, 570, 436, 366, 4833, 4033, 13, 50890, 50890, 407, 286, 478, 445, 516, 281, 2573, 484, 597, 51042, 51042, 11694, 295, 288, 16, 11, 288, 17, 11, 288, 18, 11, 288, 19, 307, 1293, 18424, 11, 51260, 51260, 457, 3654, 439, 18424, 31493, 11, 51368, 51368, 575, 264, 12437, 2281, 13, 51432, 51432, 400, 286, 478, 516, 281, 2944, 300, 493, 13, 51544, 51544, 400, 264, 636, 286, 2944, 493, 293, 2944, 760, 51620, 51620, 307, 286, 478, 516, 281, 829, 264, 2649, 295, 729, 732, 51718, 51718, 25737, 294, 257, 28822, 4470, 370, 300, 264, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1550837477592573, "compression_ratio": 1.924901185770751, "no_speech_prob": 5.475283251143992e-05}, {"id": 807, "seek": 243036, "start": 2430.36, "end": 2433.88, "text": " hinge will push the energy of the correct answer to be low", "tokens": [50364, 28822, 486, 2944, 264, 2281, 295, 264, 3006, 1867, 281, 312, 2295, 50540, 50540, 293, 486, 2944, 264, 2281, 295, 264, 18424, 11, 881, 766, 2029, 50686, 50686, 1867, 281, 312, 2946, 538, 412, 1935, 512, 10270, 13, 50796, 50952, 407, 718, 311, 352, 281, 264, 6674, 10270, 3934, 5179, 2533, 51128, 51128, 498, 291, 3890, 1125, 264, 17443, 365, 308, 3732, 51236, 51236, 293, 498, 291, 362, 341, 733, 295, 8213, 13075, 2144, 51384, 51384, 295, 264, 2281, 2115, 13, 51484, 51484, 509, 393, 611, 764, 264, 43276, 901, 4470, 13, 51560, 51560, 400, 5116, 27973, 11, 567, 307, 257, 731, 12, 6861, 8304, 412, 17339, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1675844278421488, "compression_ratio": 1.7, "no_speech_prob": 1.6185493223019876e-05}, {"id": 808, "seek": 243036, "start": 2433.88, "end": 2436.8, "text": " and will push the energy of the incorrect, most offending", "tokens": [50364, 28822, 486, 2944, 264, 2281, 295, 264, 3006, 1867, 281, 312, 2295, 50540, 50540, 293, 486, 2944, 264, 2281, 295, 264, 18424, 11, 881, 766, 2029, 50686, 50686, 1867, 281, 312, 2946, 538, 412, 1935, 512, 10270, 13, 50796, 50952, 407, 718, 311, 352, 281, 264, 6674, 10270, 3934, 5179, 2533, 51128, 51128, 498, 291, 3890, 1125, 264, 17443, 365, 308, 3732, 51236, 51236, 293, 498, 291, 362, 341, 733, 295, 8213, 13075, 2144, 51384, 51384, 295, 264, 2281, 2115, 13, 51484, 51484, 509, 393, 611, 764, 264, 43276, 901, 4470, 13, 51560, 51560, 400, 5116, 27973, 11, 567, 307, 257, 731, 12, 6861, 8304, 412, 17339, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1675844278421488, "compression_ratio": 1.7, "no_speech_prob": 1.6185493223019876e-05}, {"id": 809, "seek": 243036, "start": 2436.8, "end": 2439.0, "text": " answer to be higher by at least some margin.", "tokens": [50364, 28822, 486, 2944, 264, 2281, 295, 264, 3006, 1867, 281, 312, 2295, 50540, 50540, 293, 486, 2944, 264, 2281, 295, 264, 18424, 11, 881, 766, 2029, 50686, 50686, 1867, 281, 312, 2946, 538, 412, 1935, 512, 10270, 13, 50796, 50952, 407, 718, 311, 352, 281, 264, 6674, 10270, 3934, 5179, 2533, 51128, 51128, 498, 291, 3890, 1125, 264, 17443, 365, 308, 3732, 51236, 51236, 293, 498, 291, 362, 341, 733, 295, 8213, 13075, 2144, 51384, 51384, 295, 264, 2281, 2115, 13, 51484, 51484, 509, 393, 611, 764, 264, 43276, 901, 4470, 13, 51560, 51560, 400, 5116, 27973, 11, 567, 307, 257, 731, 12, 6861, 8304, 412, 17339, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1675844278421488, "compression_ratio": 1.7, "no_speech_prob": 1.6185493223019876e-05}, {"id": 810, "seek": 243036, "start": 2442.1200000000003, "end": 2445.6400000000003, "text": " So let's go to the maximum margin Markov net", "tokens": [50364, 28822, 486, 2944, 264, 2281, 295, 264, 3006, 1867, 281, 312, 2295, 50540, 50540, 293, 486, 2944, 264, 2281, 295, 264, 18424, 11, 881, 766, 2029, 50686, 50686, 1867, 281, 312, 2946, 538, 412, 1935, 512, 10270, 13, 50796, 50952, 407, 718, 311, 352, 281, 264, 6674, 10270, 3934, 5179, 2533, 51128, 51128, 498, 291, 3890, 1125, 264, 17443, 365, 308, 3732, 51236, 51236, 293, 498, 291, 362, 341, 733, 295, 8213, 13075, 2144, 51384, 51384, 295, 264, 2281, 2115, 13, 51484, 51484, 509, 393, 611, 764, 264, 43276, 901, 4470, 13, 51560, 51560, 400, 5116, 27973, 11, 567, 307, 257, 731, 12, 6861, 8304, 412, 17339, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1675844278421488, "compression_ratio": 1.7, "no_speech_prob": 1.6185493223019876e-05}, {"id": 811, "seek": 243036, "start": 2445.6400000000003, "end": 2447.8, "text": " if you regularize the weights with e square", "tokens": [50364, 28822, 486, 2944, 264, 2281, 295, 264, 3006, 1867, 281, 312, 2295, 50540, 50540, 293, 486, 2944, 264, 2281, 295, 264, 18424, 11, 881, 766, 2029, 50686, 50686, 1867, 281, 312, 2946, 538, 412, 1935, 512, 10270, 13, 50796, 50952, 407, 718, 311, 352, 281, 264, 6674, 10270, 3934, 5179, 2533, 51128, 51128, 498, 291, 3890, 1125, 264, 17443, 365, 308, 3732, 51236, 51236, 293, 498, 291, 362, 341, 733, 295, 8213, 13075, 2144, 51384, 51384, 295, 264, 2281, 2115, 13, 51484, 51484, 509, 393, 611, 764, 264, 43276, 901, 4470, 13, 51560, 51560, 400, 5116, 27973, 11, 567, 307, 257, 731, 12, 6861, 8304, 412, 17339, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1675844278421488, "compression_ratio": 1.7, "no_speech_prob": 1.6185493223019876e-05}, {"id": 812, "seek": 243036, "start": 2447.8, "end": 2450.76, "text": " and if you have this kind of linear parameterization", "tokens": [50364, 28822, 486, 2944, 264, 2281, 295, 264, 3006, 1867, 281, 312, 2295, 50540, 50540, 293, 486, 2944, 264, 2281, 295, 264, 18424, 11, 881, 766, 2029, 50686, 50686, 1867, 281, 312, 2946, 538, 412, 1935, 512, 10270, 13, 50796, 50952, 407, 718, 311, 352, 281, 264, 6674, 10270, 3934, 5179, 2533, 51128, 51128, 498, 291, 3890, 1125, 264, 17443, 365, 308, 3732, 51236, 51236, 293, 498, 291, 362, 341, 733, 295, 8213, 13075, 2144, 51384, 51384, 295, 264, 2281, 2115, 13, 51484, 51484, 509, 393, 611, 764, 264, 43276, 901, 4470, 13, 51560, 51560, 400, 5116, 27973, 11, 567, 307, 257, 731, 12, 6861, 8304, 412, 17339, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1675844278421488, "compression_ratio": 1.7, "no_speech_prob": 1.6185493223019876e-05}, {"id": 813, "seek": 243036, "start": 2450.76, "end": 2452.76, "text": " of the energy terms.", "tokens": [50364, 28822, 486, 2944, 264, 2281, 295, 264, 3006, 1867, 281, 312, 2295, 50540, 50540, 293, 486, 2944, 264, 2281, 295, 264, 18424, 11, 881, 766, 2029, 50686, 50686, 1867, 281, 312, 2946, 538, 412, 1935, 512, 10270, 13, 50796, 50952, 407, 718, 311, 352, 281, 264, 6674, 10270, 3934, 5179, 2533, 51128, 51128, 498, 291, 3890, 1125, 264, 17443, 365, 308, 3732, 51236, 51236, 293, 498, 291, 362, 341, 733, 295, 8213, 13075, 2144, 51384, 51384, 295, 264, 2281, 2115, 13, 51484, 51484, 509, 393, 611, 764, 264, 43276, 901, 4470, 13, 51560, 51560, 400, 5116, 27973, 11, 567, 307, 257, 731, 12, 6861, 8304, 412, 17339, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1675844278421488, "compression_ratio": 1.7, "no_speech_prob": 1.6185493223019876e-05}, {"id": 814, "seek": 243036, "start": 2452.76, "end": 2454.28, "text": " You can also use the perceptual loss.", "tokens": [50364, 28822, 486, 2944, 264, 2281, 295, 264, 3006, 1867, 281, 312, 2295, 50540, 50540, 293, 486, 2944, 264, 2281, 295, 264, 18424, 11, 881, 766, 2029, 50686, 50686, 1867, 281, 312, 2946, 538, 412, 1935, 512, 10270, 13, 50796, 50952, 407, 718, 311, 352, 281, 264, 6674, 10270, 3934, 5179, 2533, 51128, 51128, 498, 291, 3890, 1125, 264, 17443, 365, 308, 3732, 51236, 51236, 293, 498, 291, 362, 341, 733, 295, 8213, 13075, 2144, 51384, 51384, 295, 264, 2281, 2115, 13, 51484, 51484, 509, 393, 611, 764, 264, 43276, 901, 4470, 13, 51560, 51560, 400, 5116, 27973, 11, 567, 307, 257, 731, 12, 6861, 8304, 412, 17339, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1675844278421488, "compression_ratio": 1.7, "no_speech_prob": 1.6185493223019876e-05}, {"id": 815, "seek": 243036, "start": 2454.28, "end": 2459.2400000000002, "text": " And Michael Collins, who is a well-known professor at Columbia", "tokens": [50364, 28822, 486, 2944, 264, 2281, 295, 264, 3006, 1867, 281, 312, 2295, 50540, 50540, 293, 486, 2944, 264, 2281, 295, 264, 18424, 11, 881, 766, 2029, 50686, 50686, 1867, 281, 312, 2946, 538, 412, 1935, 512, 10270, 13, 50796, 50952, 407, 718, 311, 352, 281, 264, 6674, 10270, 3934, 5179, 2533, 51128, 51128, 498, 291, 3890, 1125, 264, 17443, 365, 308, 3732, 51236, 51236, 293, 498, 291, 362, 341, 733, 295, 8213, 13075, 2144, 51384, 51384, 295, 264, 2281, 2115, 13, 51484, 51484, 509, 393, 611, 764, 264, 43276, 901, 4470, 13, 51560, 51560, 400, 5116, 27973, 11, 567, 307, 257, 731, 12, 6861, 8304, 412, 17339, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1675844278421488, "compression_ratio": 1.7, "no_speech_prob": 1.6185493223019876e-05}, {"id": 816, "seek": 245924, "start": 2459.24, "end": 2464.0, "text": " in NLP, actually made a success, built his career around this idea", "tokens": [50364, 294, 426, 45196, 11, 767, 1027, 257, 2245, 11, 3094, 702, 3988, 926, 341, 1558, 50602, 50602, 295, 1228, 43276, 901, 4470, 337, 257, 3877, 17630, 13, 50732, 50732, 4402, 300, 43276, 901, 4470, 787, 1985, 50808, 50808, 498, 291, 362, 8213, 13075, 2144, 295, 264, 6771, 30, 50960, 50960, 759, 291, 652, 552, 2452, 18161, 36170, 11, 51046, 51046, 291, 393, 380, 764, 264, 43276, 901, 4470, 3602, 13, 51136, 51136, 467, 311, 570, 264, 10270, 307, 4018, 13, 51218, 51218, 492, 2825, 466, 341, 257, 707, 857, 949, 11, 51282, 51282, 457, 286, 603, 808, 646, 281, 309, 294, 257, 3456, 13, 51362, 51632, 1779, 13, 51756, 51756, 407, 729, 3487, 362, 668, 926, 337, 257, 938, 565, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.22706796264648438, "compression_ratio": 1.6485507246376812, "no_speech_prob": 9.222024345945101e-06}, {"id": 817, "seek": 245924, "start": 2464.0, "end": 2466.6, "text": " of using perceptual loss for a structure prediction.", "tokens": [50364, 294, 426, 45196, 11, 767, 1027, 257, 2245, 11, 3094, 702, 3988, 926, 341, 1558, 50602, 50602, 295, 1228, 43276, 901, 4470, 337, 257, 3877, 17630, 13, 50732, 50732, 4402, 300, 43276, 901, 4470, 787, 1985, 50808, 50808, 498, 291, 362, 8213, 13075, 2144, 295, 264, 6771, 30, 50960, 50960, 759, 291, 652, 552, 2452, 18161, 36170, 11, 51046, 51046, 291, 393, 380, 764, 264, 43276, 901, 4470, 3602, 13, 51136, 51136, 467, 311, 570, 264, 10270, 307, 4018, 13, 51218, 51218, 492, 2825, 466, 341, 257, 707, 857, 949, 11, 51282, 51282, 457, 286, 603, 808, 646, 281, 309, 294, 257, 3456, 13, 51362, 51632, 1779, 13, 51756, 51756, 407, 729, 3487, 362, 668, 926, 337, 257, 938, 565, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.22706796264648438, "compression_ratio": 1.6485507246376812, "no_speech_prob": 9.222024345945101e-06}, {"id": 818, "seek": 245924, "start": 2466.6, "end": 2468.12, "text": " Does that perceptual loss only works", "tokens": [50364, 294, 426, 45196, 11, 767, 1027, 257, 2245, 11, 3094, 702, 3988, 926, 341, 1558, 50602, 50602, 295, 1228, 43276, 901, 4470, 337, 257, 3877, 17630, 13, 50732, 50732, 4402, 300, 43276, 901, 4470, 787, 1985, 50808, 50808, 498, 291, 362, 8213, 13075, 2144, 295, 264, 6771, 30, 50960, 50960, 759, 291, 652, 552, 2452, 18161, 36170, 11, 51046, 51046, 291, 393, 380, 764, 264, 43276, 901, 4470, 3602, 13, 51136, 51136, 467, 311, 570, 264, 10270, 307, 4018, 13, 51218, 51218, 492, 2825, 466, 341, 257, 707, 857, 949, 11, 51282, 51282, 457, 286, 603, 808, 646, 281, 309, 294, 257, 3456, 13, 51362, 51632, 1779, 13, 51756, 51756, 407, 729, 3487, 362, 668, 926, 337, 257, 938, 565, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.22706796264648438, "compression_ratio": 1.6485507246376812, "no_speech_prob": 9.222024345945101e-06}, {"id": 819, "seek": 245924, "start": 2468.12, "end": 2471.16, "text": " if you have linear parameterization of the factors?", "tokens": [50364, 294, 426, 45196, 11, 767, 1027, 257, 2245, 11, 3094, 702, 3988, 926, 341, 1558, 50602, 50602, 295, 1228, 43276, 901, 4470, 337, 257, 3877, 17630, 13, 50732, 50732, 4402, 300, 43276, 901, 4470, 787, 1985, 50808, 50808, 498, 291, 362, 8213, 13075, 2144, 295, 264, 6771, 30, 50960, 50960, 759, 291, 652, 552, 2452, 18161, 36170, 11, 51046, 51046, 291, 393, 380, 764, 264, 43276, 901, 4470, 3602, 13, 51136, 51136, 467, 311, 570, 264, 10270, 307, 4018, 13, 51218, 51218, 492, 2825, 466, 341, 257, 707, 857, 949, 11, 51282, 51282, 457, 286, 603, 808, 646, 281, 309, 294, 257, 3456, 13, 51362, 51632, 1779, 13, 51756, 51756, 407, 729, 3487, 362, 668, 926, 337, 257, 938, 565, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.22706796264648438, "compression_ratio": 1.6485507246376812, "no_speech_prob": 9.222024345945101e-06}, {"id": 820, "seek": 245924, "start": 2471.16, "end": 2472.8799999999997, "text": " If you make them deep neural nets,", "tokens": [50364, 294, 426, 45196, 11, 767, 1027, 257, 2245, 11, 3094, 702, 3988, 926, 341, 1558, 50602, 50602, 295, 1228, 43276, 901, 4470, 337, 257, 3877, 17630, 13, 50732, 50732, 4402, 300, 43276, 901, 4470, 787, 1985, 50808, 50808, 498, 291, 362, 8213, 13075, 2144, 295, 264, 6771, 30, 50960, 50960, 759, 291, 652, 552, 2452, 18161, 36170, 11, 51046, 51046, 291, 393, 380, 764, 264, 43276, 901, 4470, 3602, 13, 51136, 51136, 467, 311, 570, 264, 10270, 307, 4018, 13, 51218, 51218, 492, 2825, 466, 341, 257, 707, 857, 949, 11, 51282, 51282, 457, 286, 603, 808, 646, 281, 309, 294, 257, 3456, 13, 51362, 51632, 1779, 13, 51756, 51756, 407, 729, 3487, 362, 668, 926, 337, 257, 938, 565, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.22706796264648438, "compression_ratio": 1.6485507246376812, "no_speech_prob": 9.222024345945101e-06}, {"id": 821, "seek": 245924, "start": 2472.8799999999997, "end": 2474.68, "text": " you can't use the perceptual loss anymore.", "tokens": [50364, 294, 426, 45196, 11, 767, 1027, 257, 2245, 11, 3094, 702, 3988, 926, 341, 1558, 50602, 50602, 295, 1228, 43276, 901, 4470, 337, 257, 3877, 17630, 13, 50732, 50732, 4402, 300, 43276, 901, 4470, 787, 1985, 50808, 50808, 498, 291, 362, 8213, 13075, 2144, 295, 264, 6771, 30, 50960, 50960, 759, 291, 652, 552, 2452, 18161, 36170, 11, 51046, 51046, 291, 393, 380, 764, 264, 43276, 901, 4470, 3602, 13, 51136, 51136, 467, 311, 570, 264, 10270, 307, 4018, 13, 51218, 51218, 492, 2825, 466, 341, 257, 707, 857, 949, 11, 51282, 51282, 457, 286, 603, 808, 646, 281, 309, 294, 257, 3456, 13, 51362, 51632, 1779, 13, 51756, 51756, 407, 729, 3487, 362, 668, 926, 337, 257, 938, 565, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.22706796264648438, "compression_ratio": 1.6485507246376812, "no_speech_prob": 9.222024345945101e-06}, {"id": 822, "seek": 245924, "start": 2474.68, "end": 2476.3199999999997, "text": " It's because the margin is zero.", "tokens": [50364, 294, 426, 45196, 11, 767, 1027, 257, 2245, 11, 3094, 702, 3988, 926, 341, 1558, 50602, 50602, 295, 1228, 43276, 901, 4470, 337, 257, 3877, 17630, 13, 50732, 50732, 4402, 300, 43276, 901, 4470, 787, 1985, 50808, 50808, 498, 291, 362, 8213, 13075, 2144, 295, 264, 6771, 30, 50960, 50960, 759, 291, 652, 552, 2452, 18161, 36170, 11, 51046, 51046, 291, 393, 380, 764, 264, 43276, 901, 4470, 3602, 13, 51136, 51136, 467, 311, 570, 264, 10270, 307, 4018, 13, 51218, 51218, 492, 2825, 466, 341, 257, 707, 857, 949, 11, 51282, 51282, 457, 286, 603, 808, 646, 281, 309, 294, 257, 3456, 13, 51362, 51632, 1779, 13, 51756, 51756, 407, 729, 3487, 362, 668, 926, 337, 257, 938, 565, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.22706796264648438, "compression_ratio": 1.6485507246376812, "no_speech_prob": 9.222024345945101e-06}, {"id": 823, "seek": 245924, "start": 2476.3199999999997, "end": 2477.6, "text": " We talked about this a little bit before,", "tokens": [50364, 294, 426, 45196, 11, 767, 1027, 257, 2245, 11, 3094, 702, 3988, 926, 341, 1558, 50602, 50602, 295, 1228, 43276, 901, 4470, 337, 257, 3877, 17630, 13, 50732, 50732, 4402, 300, 43276, 901, 4470, 787, 1985, 50808, 50808, 498, 291, 362, 8213, 13075, 2144, 295, 264, 6771, 30, 50960, 50960, 759, 291, 652, 552, 2452, 18161, 36170, 11, 51046, 51046, 291, 393, 380, 764, 264, 43276, 901, 4470, 3602, 13, 51136, 51136, 467, 311, 570, 264, 10270, 307, 4018, 13, 51218, 51218, 492, 2825, 466, 341, 257, 707, 857, 949, 11, 51282, 51282, 457, 286, 603, 808, 646, 281, 309, 294, 257, 3456, 13, 51362, 51632, 1779, 13, 51756, 51756, 407, 729, 3487, 362, 668, 926, 337, 257, 938, 565, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.22706796264648438, "compression_ratio": 1.6485507246376812, "no_speech_prob": 9.222024345945101e-06}, {"id": 824, "seek": 245924, "start": 2477.6, "end": 2479.2, "text": " but I'll come back to it in a minute.", "tokens": [50364, 294, 426, 45196, 11, 767, 1027, 257, 2245, 11, 3094, 702, 3988, 926, 341, 1558, 50602, 50602, 295, 1228, 43276, 901, 4470, 337, 257, 3877, 17630, 13, 50732, 50732, 4402, 300, 43276, 901, 4470, 787, 1985, 50808, 50808, 498, 291, 362, 8213, 13075, 2144, 295, 264, 6771, 30, 50960, 50960, 759, 291, 652, 552, 2452, 18161, 36170, 11, 51046, 51046, 291, 393, 380, 764, 264, 43276, 901, 4470, 3602, 13, 51136, 51136, 467, 311, 570, 264, 10270, 307, 4018, 13, 51218, 51218, 492, 2825, 466, 341, 257, 707, 857, 949, 11, 51282, 51282, 457, 286, 603, 808, 646, 281, 309, 294, 257, 3456, 13, 51362, 51632, 1779, 13, 51756, 51756, 407, 729, 3487, 362, 668, 926, 337, 257, 938, 565, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.22706796264648438, "compression_ratio": 1.6485507246376812, "no_speech_prob": 9.222024345945101e-06}, {"id": 825, "seek": 245924, "start": 2484.6, "end": 2487.08, "text": " Right.", "tokens": [50364, 294, 426, 45196, 11, 767, 1027, 257, 2245, 11, 3094, 702, 3988, 926, 341, 1558, 50602, 50602, 295, 1228, 43276, 901, 4470, 337, 257, 3877, 17630, 13, 50732, 50732, 4402, 300, 43276, 901, 4470, 787, 1985, 50808, 50808, 498, 291, 362, 8213, 13075, 2144, 295, 264, 6771, 30, 50960, 50960, 759, 291, 652, 552, 2452, 18161, 36170, 11, 51046, 51046, 291, 393, 380, 764, 264, 43276, 901, 4470, 3602, 13, 51136, 51136, 467, 311, 570, 264, 10270, 307, 4018, 13, 51218, 51218, 492, 2825, 466, 341, 257, 707, 857, 949, 11, 51282, 51282, 457, 286, 603, 808, 646, 281, 309, 294, 257, 3456, 13, 51362, 51632, 1779, 13, 51756, 51756, 407, 729, 3487, 362, 668, 926, 337, 257, 938, 565, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.22706796264648438, "compression_ratio": 1.6485507246376812, "no_speech_prob": 9.222024345945101e-06}, {"id": 826, "seek": 245924, "start": 2487.08, "end": 2489.04, "text": " So those ideas have been around for a long time.", "tokens": [50364, 294, 426, 45196, 11, 767, 1027, 257, 2245, 11, 3094, 702, 3988, 926, 341, 1558, 50602, 50602, 295, 1228, 43276, 901, 4470, 337, 257, 3877, 17630, 13, 50732, 50732, 4402, 300, 43276, 901, 4470, 787, 1985, 50808, 50808, 498, 291, 362, 8213, 13075, 2144, 295, 264, 6771, 30, 50960, 50960, 759, 291, 652, 552, 2452, 18161, 36170, 11, 51046, 51046, 291, 393, 380, 764, 264, 43276, 901, 4470, 3602, 13, 51136, 51136, 467, 311, 570, 264, 10270, 307, 4018, 13, 51218, 51218, 492, 2825, 466, 341, 257, 707, 857, 949, 11, 51282, 51282, 457, 286, 603, 808, 646, 281, 309, 294, 257, 3456, 13, 51362, 51632, 1779, 13, 51756, 51756, 407, 729, 3487, 362, 668, 926, 337, 257, 938, 565, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.22706796264648438, "compression_ratio": 1.6485507246376812, "no_speech_prob": 9.222024345945101e-06}, {"id": 827, "seek": 248904, "start": 2489.04, "end": 2491.0, "text": " Probably the first people to think about things", "tokens": [50364, 9210, 264, 700, 561, 281, 519, 466, 721, 50462, 50462, 411, 341, 645, 561, 567, 2732, 322, 437, 311, 50576, 50576, 1219, 20828, 1166, 3097, 337, 6218, 11150, 13, 50762, 50762, 400, 300, 1709, 646, 281, 264, 3469, 4688, 82, 11, 2440, 4289, 82, 13, 50894, 50894, 407, 398, 939, 302, 293, 16781, 4564, 11, 337, 1365, 11, 412, 8872, 5, 51, 51066, 51066, 632, 746, 436, 1219, 7285, 31886, 6713, 4470, 13, 51226, 51226, 400, 341, 307, 733, 295, 257, 1729, 4470, 337, 6218, 11150, 51394, 51394, 1185, 13, 51430, 51430, 814, 994, 380, 362, 18161, 36170, 13, 51488, 51488, 814, 632, 512, 661, 636, 295, 733, 295, 6246, 6218, 12354, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.15169518569420123, "compression_ratio": 1.6654275092936803, "no_speech_prob": 5.919332033954561e-05}, {"id": 828, "seek": 248904, "start": 2491.0, "end": 2493.2799999999997, "text": " like this were people who worked on what's", "tokens": [50364, 9210, 264, 700, 561, 281, 519, 466, 721, 50462, 50462, 411, 341, 645, 561, 567, 2732, 322, 437, 311, 50576, 50576, 1219, 20828, 1166, 3097, 337, 6218, 11150, 13, 50762, 50762, 400, 300, 1709, 646, 281, 264, 3469, 4688, 82, 11, 2440, 4289, 82, 13, 50894, 50894, 407, 398, 939, 302, 293, 16781, 4564, 11, 337, 1365, 11, 412, 8872, 5, 51, 51066, 51066, 632, 746, 436, 1219, 7285, 31886, 6713, 4470, 13, 51226, 51226, 400, 341, 307, 733, 295, 257, 1729, 4470, 337, 6218, 11150, 51394, 51394, 1185, 13, 51430, 51430, 814, 994, 380, 362, 18161, 36170, 13, 51488, 51488, 814, 632, 512, 661, 636, 295, 733, 295, 6246, 6218, 12354, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.15169518569420123, "compression_ratio": 1.6654275092936803, "no_speech_prob": 5.919332033954561e-05}, {"id": 829, "seek": 248904, "start": 2493.2799999999997, "end": 2497.0, "text": " called discriminative training for speech recognition.", "tokens": [50364, 9210, 264, 700, 561, 281, 519, 466, 721, 50462, 50462, 411, 341, 645, 561, 567, 2732, 322, 437, 311, 50576, 50576, 1219, 20828, 1166, 3097, 337, 6218, 11150, 13, 50762, 50762, 400, 300, 1709, 646, 281, 264, 3469, 4688, 82, 11, 2440, 4289, 82, 13, 50894, 50894, 407, 398, 939, 302, 293, 16781, 4564, 11, 337, 1365, 11, 412, 8872, 5, 51, 51066, 51066, 632, 746, 436, 1219, 7285, 31886, 6713, 4470, 13, 51226, 51226, 400, 341, 307, 733, 295, 257, 1729, 4470, 337, 6218, 11150, 51394, 51394, 1185, 13, 51430, 51430, 814, 994, 380, 362, 18161, 36170, 13, 51488, 51488, 814, 632, 512, 661, 636, 295, 733, 295, 6246, 6218, 12354, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.15169518569420123, "compression_ratio": 1.6654275092936803, "no_speech_prob": 5.919332033954561e-05}, {"id": 830, "seek": 248904, "start": 2497.0, "end": 2499.64, "text": " And that goes back to the late 80s, early 90s.", "tokens": [50364, 9210, 264, 700, 561, 281, 519, 466, 721, 50462, 50462, 411, 341, 645, 561, 567, 2732, 322, 437, 311, 50576, 50576, 1219, 20828, 1166, 3097, 337, 6218, 11150, 13, 50762, 50762, 400, 300, 1709, 646, 281, 264, 3469, 4688, 82, 11, 2440, 4289, 82, 13, 50894, 50894, 407, 398, 939, 302, 293, 16781, 4564, 11, 337, 1365, 11, 412, 8872, 5, 51, 51066, 51066, 632, 746, 436, 1219, 7285, 31886, 6713, 4470, 13, 51226, 51226, 400, 341, 307, 733, 295, 257, 1729, 4470, 337, 6218, 11150, 51394, 51394, 1185, 13, 51430, 51430, 814, 994, 380, 362, 18161, 36170, 13, 51488, 51488, 814, 632, 512, 661, 636, 295, 733, 295, 6246, 6218, 12354, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.15169518569420123, "compression_ratio": 1.6654275092936803, "no_speech_prob": 5.919332033954561e-05}, {"id": 831, "seek": 248904, "start": 2499.64, "end": 2503.08, "text": " So Yoyet and Rabiner, for example, at AT&T", "tokens": [50364, 9210, 264, 700, 561, 281, 519, 466, 721, 50462, 50462, 411, 341, 645, 561, 567, 2732, 322, 437, 311, 50576, 50576, 1219, 20828, 1166, 3097, 337, 6218, 11150, 13, 50762, 50762, 400, 300, 1709, 646, 281, 264, 3469, 4688, 82, 11, 2440, 4289, 82, 13, 50894, 50894, 407, 398, 939, 302, 293, 16781, 4564, 11, 337, 1365, 11, 412, 8872, 5, 51, 51066, 51066, 632, 746, 436, 1219, 7285, 31886, 6713, 4470, 13, 51226, 51226, 400, 341, 307, 733, 295, 257, 1729, 4470, 337, 6218, 11150, 51394, 51394, 1185, 13, 51430, 51430, 814, 994, 380, 362, 18161, 36170, 13, 51488, 51488, 814, 632, 512, 661, 636, 295, 733, 295, 6246, 6218, 12354, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.15169518569420123, "compression_ratio": 1.6654275092936803, "no_speech_prob": 5.919332033954561e-05}, {"id": 832, "seek": 248904, "start": 2503.08, "end": 2506.2799999999997, "text": " had something they called minimum empirical error loss.", "tokens": [50364, 9210, 264, 700, 561, 281, 519, 466, 721, 50462, 50462, 411, 341, 645, 561, 567, 2732, 322, 437, 311, 50576, 50576, 1219, 20828, 1166, 3097, 337, 6218, 11150, 13, 50762, 50762, 400, 300, 1709, 646, 281, 264, 3469, 4688, 82, 11, 2440, 4289, 82, 13, 50894, 50894, 407, 398, 939, 302, 293, 16781, 4564, 11, 337, 1365, 11, 412, 8872, 5, 51, 51066, 51066, 632, 746, 436, 1219, 7285, 31886, 6713, 4470, 13, 51226, 51226, 400, 341, 307, 733, 295, 257, 1729, 4470, 337, 6218, 11150, 51394, 51394, 1185, 13, 51430, 51430, 814, 994, 380, 362, 18161, 36170, 13, 51488, 51488, 814, 632, 512, 661, 636, 295, 733, 295, 6246, 6218, 12354, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.15169518569420123, "compression_ratio": 1.6654275092936803, "no_speech_prob": 5.919332033954561e-05}, {"id": 833, "seek": 248904, "start": 2506.2799999999997, "end": 2509.64, "text": " And this is kind of a particular loss for speech recognition", "tokens": [50364, 9210, 264, 700, 561, 281, 519, 466, 721, 50462, 50462, 411, 341, 645, 561, 567, 2732, 322, 437, 311, 50576, 50576, 1219, 20828, 1166, 3097, 337, 6218, 11150, 13, 50762, 50762, 400, 300, 1709, 646, 281, 264, 3469, 4688, 82, 11, 2440, 4289, 82, 13, 50894, 50894, 407, 398, 939, 302, 293, 16781, 4564, 11, 337, 1365, 11, 412, 8872, 5, 51, 51066, 51066, 632, 746, 436, 1219, 7285, 31886, 6713, 4470, 13, 51226, 51226, 400, 341, 307, 733, 295, 257, 1729, 4470, 337, 6218, 11150, 51394, 51394, 1185, 13, 51430, 51430, 814, 994, 380, 362, 18161, 36170, 13, 51488, 51488, 814, 632, 512, 661, 636, 295, 733, 295, 6246, 6218, 12354, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.15169518569420123, "compression_ratio": 1.6654275092936803, "no_speech_prob": 5.919332033954561e-05}, {"id": 834, "seek": 248904, "start": 2509.64, "end": 2510.36, "text": " system.", "tokens": [50364, 9210, 264, 700, 561, 281, 519, 466, 721, 50462, 50462, 411, 341, 645, 561, 567, 2732, 322, 437, 311, 50576, 50576, 1219, 20828, 1166, 3097, 337, 6218, 11150, 13, 50762, 50762, 400, 300, 1709, 646, 281, 264, 3469, 4688, 82, 11, 2440, 4289, 82, 13, 50894, 50894, 407, 398, 939, 302, 293, 16781, 4564, 11, 337, 1365, 11, 412, 8872, 5, 51, 51066, 51066, 632, 746, 436, 1219, 7285, 31886, 6713, 4470, 13, 51226, 51226, 400, 341, 307, 733, 295, 257, 1729, 4470, 337, 6218, 11150, 51394, 51394, 1185, 13, 51430, 51430, 814, 994, 380, 362, 18161, 36170, 13, 51488, 51488, 814, 632, 512, 661, 636, 295, 733, 295, 6246, 6218, 12354, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.15169518569420123, "compression_ratio": 1.6654275092936803, "no_speech_prob": 5.919332033954561e-05}, {"id": 835, "seek": 248904, "start": 2510.36, "end": 2511.52, "text": " They didn't have neural nets.", "tokens": [50364, 9210, 264, 700, 561, 281, 519, 466, 721, 50462, 50462, 411, 341, 645, 561, 567, 2732, 322, 437, 311, 50576, 50576, 1219, 20828, 1166, 3097, 337, 6218, 11150, 13, 50762, 50762, 400, 300, 1709, 646, 281, 264, 3469, 4688, 82, 11, 2440, 4289, 82, 13, 50894, 50894, 407, 398, 939, 302, 293, 16781, 4564, 11, 337, 1365, 11, 412, 8872, 5, 51, 51066, 51066, 632, 746, 436, 1219, 7285, 31886, 6713, 4470, 13, 51226, 51226, 400, 341, 307, 733, 295, 257, 1729, 4470, 337, 6218, 11150, 51394, 51394, 1185, 13, 51430, 51430, 814, 994, 380, 362, 18161, 36170, 13, 51488, 51488, 814, 632, 512, 661, 636, 295, 733, 295, 6246, 6218, 12354, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.15169518569420123, "compression_ratio": 1.6654275092936803, "no_speech_prob": 5.919332033954561e-05}, {"id": 836, "seek": 248904, "start": 2511.52, "end": 2515.72, "text": " They had some other way of kind of turning speech signals", "tokens": [50364, 9210, 264, 700, 561, 281, 519, 466, 721, 50462, 50462, 411, 341, 645, 561, 567, 2732, 322, 437, 311, 50576, 50576, 1219, 20828, 1166, 3097, 337, 6218, 11150, 13, 50762, 50762, 400, 300, 1709, 646, 281, 264, 3469, 4688, 82, 11, 2440, 4289, 82, 13, 50894, 50894, 407, 398, 939, 302, 293, 16781, 4564, 11, 337, 1365, 11, 412, 8872, 5, 51, 51066, 51066, 632, 746, 436, 1219, 7285, 31886, 6713, 4470, 13, 51226, 51226, 400, 341, 307, 733, 295, 257, 1729, 4470, 337, 6218, 11150, 51394, 51394, 1185, 13, 51430, 51430, 814, 994, 380, 362, 18161, 36170, 13, 51488, 51488, 814, 632, 512, 661, 636, 295, 733, 295, 6246, 6218, 12354, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.15169518569420123, "compression_ratio": 1.6654275092936803, "no_speech_prob": 5.919332033954561e-05}, {"id": 837, "seek": 251572, "start": 2515.72, "end": 2519.9599999999996, "text": " into basically sound categories, if you want.", "tokens": [50364, 666, 1936, 1626, 10479, 11, 498, 291, 528, 13, 50576, 50576, 583, 436, 632, 341, 636, 295, 3097, 412, 264, 8310, 1496, 50764, 50764, 538, 406, 3585, 264, 1185, 11, 510, 307, 50850, 50850, 341, 1626, 412, 300, 4914, 11, 300, 1626, 412, 300, 4914, 11, 50970, 50970, 457, 445, 3585, 309, 11, 510, 307, 364, 4846, 8174, 11, 51192, 51192, 510, 307, 264, 35288, 295, 309, 294, 2115, 295, 2283, 13, 51322, 51322, 43225, 309, 484, 538, 884, 341, 565, 1516, 3381, 51490, 51490, 294, 264, 4319, 295, 479, 1091, 338, 12, 15168, 5179, 5245, 11, 597, 51578, 51578, 307, 733, 295, 588, 2531, 281, 264, 8546, 565, 1516, 3381, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17501666856848674, "compression_ratio": 1.763265306122449, "no_speech_prob": 1.59316277859034e-05}, {"id": 838, "seek": 251572, "start": 2519.9599999999996, "end": 2523.72, "text": " But they had this way of training at the sequence level", "tokens": [50364, 666, 1936, 1626, 10479, 11, 498, 291, 528, 13, 50576, 50576, 583, 436, 632, 341, 636, 295, 3097, 412, 264, 8310, 1496, 50764, 50764, 538, 406, 3585, 264, 1185, 11, 510, 307, 50850, 50850, 341, 1626, 412, 300, 4914, 11, 300, 1626, 412, 300, 4914, 11, 50970, 50970, 457, 445, 3585, 309, 11, 510, 307, 364, 4846, 8174, 11, 51192, 51192, 510, 307, 264, 35288, 295, 309, 294, 2115, 295, 2283, 13, 51322, 51322, 43225, 309, 484, 538, 884, 341, 565, 1516, 3381, 51490, 51490, 294, 264, 4319, 295, 479, 1091, 338, 12, 15168, 5179, 5245, 11, 597, 51578, 51578, 307, 733, 295, 588, 2531, 281, 264, 8546, 565, 1516, 3381, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17501666856848674, "compression_ratio": 1.763265306122449, "no_speech_prob": 1.59316277859034e-05}, {"id": 839, "seek": 251572, "start": 2523.72, "end": 2525.4399999999996, "text": " by not telling the system, here is", "tokens": [50364, 666, 1936, 1626, 10479, 11, 498, 291, 528, 13, 50576, 50576, 583, 436, 632, 341, 636, 295, 3097, 412, 264, 8310, 1496, 50764, 50764, 538, 406, 3585, 264, 1185, 11, 510, 307, 50850, 50850, 341, 1626, 412, 300, 4914, 11, 300, 1626, 412, 300, 4914, 11, 50970, 50970, 457, 445, 3585, 309, 11, 510, 307, 364, 4846, 8174, 11, 51192, 51192, 510, 307, 264, 35288, 295, 309, 294, 2115, 295, 2283, 13, 51322, 51322, 43225, 309, 484, 538, 884, 341, 565, 1516, 3381, 51490, 51490, 294, 264, 4319, 295, 479, 1091, 338, 12, 15168, 5179, 5245, 11, 597, 51578, 51578, 307, 733, 295, 588, 2531, 281, 264, 8546, 565, 1516, 3381, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17501666856848674, "compression_ratio": 1.763265306122449, "no_speech_prob": 1.59316277859034e-05}, {"id": 840, "seek": 251572, "start": 2525.4399999999996, "end": 2527.8399999999997, "text": " this sound at that location, that sound at that location,", "tokens": [50364, 666, 1936, 1626, 10479, 11, 498, 291, 528, 13, 50576, 50576, 583, 436, 632, 341, 636, 295, 3097, 412, 264, 8310, 1496, 50764, 50764, 538, 406, 3585, 264, 1185, 11, 510, 307, 50850, 50850, 341, 1626, 412, 300, 4914, 11, 300, 1626, 412, 300, 4914, 11, 50970, 50970, 457, 445, 3585, 309, 11, 510, 307, 364, 4846, 8174, 11, 51192, 51192, 510, 307, 264, 35288, 295, 309, 294, 2115, 295, 2283, 13, 51322, 51322, 43225, 309, 484, 538, 884, 341, 565, 1516, 3381, 51490, 51490, 294, 264, 4319, 295, 479, 1091, 338, 12, 15168, 5179, 5245, 11, 597, 51578, 51578, 307, 733, 295, 588, 2531, 281, 264, 8546, 565, 1516, 3381, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17501666856848674, "compression_ratio": 1.763265306122449, "no_speech_prob": 1.59316277859034e-05}, {"id": 841, "seek": 251572, "start": 2527.8399999999997, "end": 2532.2799999999997, "text": " but just telling it, here is an input sentence,", "tokens": [50364, 666, 1936, 1626, 10479, 11, 498, 291, 528, 13, 50576, 50576, 583, 436, 632, 341, 636, 295, 3097, 412, 264, 8310, 1496, 50764, 50764, 538, 406, 3585, 264, 1185, 11, 510, 307, 50850, 50850, 341, 1626, 412, 300, 4914, 11, 300, 1626, 412, 300, 4914, 11, 50970, 50970, 457, 445, 3585, 309, 11, 510, 307, 364, 4846, 8174, 11, 51192, 51192, 510, 307, 264, 35288, 295, 309, 294, 2115, 295, 2283, 13, 51322, 51322, 43225, 309, 484, 538, 884, 341, 565, 1516, 3381, 51490, 51490, 294, 264, 4319, 295, 479, 1091, 338, 12, 15168, 5179, 5245, 11, 597, 51578, 51578, 307, 733, 295, 588, 2531, 281, 264, 8546, 565, 1516, 3381, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17501666856848674, "compression_ratio": 1.763265306122449, "no_speech_prob": 1.59316277859034e-05}, {"id": 842, "seek": 251572, "start": 2532.2799999999997, "end": 2534.8799999999997, "text": " here is the transcription of it in terms of words.", "tokens": [50364, 666, 1936, 1626, 10479, 11, 498, 291, 528, 13, 50576, 50576, 583, 436, 632, 341, 636, 295, 3097, 412, 264, 8310, 1496, 50764, 50764, 538, 406, 3585, 264, 1185, 11, 510, 307, 50850, 50850, 341, 1626, 412, 300, 4914, 11, 300, 1626, 412, 300, 4914, 11, 50970, 50970, 457, 445, 3585, 309, 11, 510, 307, 364, 4846, 8174, 11, 51192, 51192, 510, 307, 264, 35288, 295, 309, 294, 2115, 295, 2283, 13, 51322, 51322, 43225, 309, 484, 538, 884, 341, 565, 1516, 3381, 51490, 51490, 294, 264, 4319, 295, 479, 1091, 338, 12, 15168, 5179, 5245, 11, 597, 51578, 51578, 307, 733, 295, 588, 2531, 281, 264, 8546, 565, 1516, 3381, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17501666856848674, "compression_ratio": 1.763265306122449, "no_speech_prob": 1.59316277859034e-05}, {"id": 843, "seek": 251572, "start": 2534.8799999999997, "end": 2538.24, "text": " Figure it out by doing this time warping", "tokens": [50364, 666, 1936, 1626, 10479, 11, 498, 291, 528, 13, 50576, 50576, 583, 436, 632, 341, 636, 295, 3097, 412, 264, 8310, 1496, 50764, 50764, 538, 406, 3585, 264, 1185, 11, 510, 307, 50850, 50850, 341, 1626, 412, 300, 4914, 11, 300, 1626, 412, 300, 4914, 11, 50970, 50970, 457, 445, 3585, 309, 11, 510, 307, 364, 4846, 8174, 11, 51192, 51192, 510, 307, 264, 35288, 295, 309, 294, 2115, 295, 2283, 13, 51322, 51322, 43225, 309, 484, 538, 884, 341, 565, 1516, 3381, 51490, 51490, 294, 264, 4319, 295, 479, 1091, 338, 12, 15168, 5179, 5245, 11, 597, 51578, 51578, 307, 733, 295, 588, 2531, 281, 264, 8546, 565, 1516, 3381, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17501666856848674, "compression_ratio": 1.763265306122449, "no_speech_prob": 1.59316277859034e-05}, {"id": 844, "seek": 251572, "start": 2538.24, "end": 2540.0, "text": " in the context of Fiedel-Markov models, which", "tokens": [50364, 666, 1936, 1626, 10479, 11, 498, 291, 528, 13, 50576, 50576, 583, 436, 632, 341, 636, 295, 3097, 412, 264, 8310, 1496, 50764, 50764, 538, 406, 3585, 264, 1185, 11, 510, 307, 50850, 50850, 341, 1626, 412, 300, 4914, 11, 300, 1626, 412, 300, 4914, 11, 50970, 50970, 457, 445, 3585, 309, 11, 510, 307, 364, 4846, 8174, 11, 51192, 51192, 510, 307, 264, 35288, 295, 309, 294, 2115, 295, 2283, 13, 51322, 51322, 43225, 309, 484, 538, 884, 341, 565, 1516, 3381, 51490, 51490, 294, 264, 4319, 295, 479, 1091, 338, 12, 15168, 5179, 5245, 11, 597, 51578, 51578, 307, 733, 295, 588, 2531, 281, 264, 8546, 565, 1516, 3381, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17501666856848674, "compression_ratio": 1.763265306122449, "no_speech_prob": 1.59316277859034e-05}, {"id": 845, "seek": 251572, "start": 2540.0, "end": 2543.2, "text": " is kind of very similar to the dynamic time warping", "tokens": [50364, 666, 1936, 1626, 10479, 11, 498, 291, 528, 13, 50576, 50576, 583, 436, 632, 341, 636, 295, 3097, 412, 264, 8310, 1496, 50764, 50764, 538, 406, 3585, 264, 1185, 11, 510, 307, 50850, 50850, 341, 1626, 412, 300, 4914, 11, 300, 1626, 412, 300, 4914, 11, 50970, 50970, 457, 445, 3585, 309, 11, 510, 307, 364, 4846, 8174, 11, 51192, 51192, 510, 307, 264, 35288, 295, 309, 294, 2115, 295, 2283, 13, 51322, 51322, 43225, 309, 484, 538, 884, 341, 565, 1516, 3381, 51490, 51490, 294, 264, 4319, 295, 479, 1091, 338, 12, 15168, 5179, 5245, 11, 597, 51578, 51578, 307, 733, 295, 588, 2531, 281, 264, 8546, 565, 1516, 3381, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17501666856848674, "compression_ratio": 1.763265306122449, "no_speech_prob": 1.59316277859034e-05}, {"id": 846, "seek": 254320, "start": 2543.2, "end": 2546.96, "text": " I was talking about earlier.", "tokens": [50364, 286, 390, 1417, 466, 3071, 13, 50552, 50552, 1396, 11, 382, 286, 848, 11, 294, 264, 2440, 4289, 82, 11, 50668, 50668, 561, 1409, 1364, 322, 1228, 18161, 36170, 50794, 50794, 281, 733, 295, 3154, 472, 295, 729, 733, 295, 15067, 17630, 50978, 50978, 1185, 13, 51058, 51058, 1018, 286, 848, 11, 264, 700, 472, 286, 458, 466, 51137, 51137, 307, 538, 44653, 368, 441, 6, 16257, 66, 263, 1083, 811, 11, 1230, 732, 11, 51218, 51218, 337, 6218, 11150, 13, 51304, 51304, 814, 632, 257, 565, 8577, 18161, 2533, 13, 51408, 51408, 398, 329, 675, 3964, 73, 263, 630, 702, 14476, 322, 341, 293, 632, 512, 3542, 51590, 51590, 926, 23952, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.2906973097059462, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.2038888346287422e-05}, {"id": 847, "seek": 254320, "start": 2546.96, "end": 2549.2799999999997, "text": " Then, as I said, in the early 90s,", "tokens": [50364, 286, 390, 1417, 466, 3071, 13, 50552, 50552, 1396, 11, 382, 286, 848, 11, 294, 264, 2440, 4289, 82, 11, 50668, 50668, 561, 1409, 1364, 322, 1228, 18161, 36170, 50794, 50794, 281, 733, 295, 3154, 472, 295, 729, 733, 295, 15067, 17630, 50978, 50978, 1185, 13, 51058, 51058, 1018, 286, 848, 11, 264, 700, 472, 286, 458, 466, 51137, 51137, 307, 538, 44653, 368, 441, 6, 16257, 66, 263, 1083, 811, 11, 1230, 732, 11, 51218, 51218, 337, 6218, 11150, 13, 51304, 51304, 814, 632, 257, 565, 8577, 18161, 2533, 13, 51408, 51408, 398, 329, 675, 3964, 73, 263, 630, 702, 14476, 322, 341, 293, 632, 512, 3542, 51590, 51590, 926, 23952, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.2906973097059462, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.2038888346287422e-05}, {"id": 848, "seek": 254320, "start": 2549.2799999999997, "end": 2551.7999999999997, "text": " people started working on using neural nets", "tokens": [50364, 286, 390, 1417, 466, 3071, 13, 50552, 50552, 1396, 11, 382, 286, 848, 11, 294, 264, 2440, 4289, 82, 11, 50668, 50668, 561, 1409, 1364, 322, 1228, 18161, 36170, 50794, 50794, 281, 733, 295, 3154, 472, 295, 729, 733, 295, 15067, 17630, 50978, 50978, 1185, 13, 51058, 51058, 1018, 286, 848, 11, 264, 700, 472, 286, 458, 466, 51137, 51137, 307, 538, 44653, 368, 441, 6, 16257, 66, 263, 1083, 811, 11, 1230, 732, 11, 51218, 51218, 337, 6218, 11150, 13, 51304, 51304, 814, 632, 257, 565, 8577, 18161, 2533, 13, 51408, 51408, 398, 329, 675, 3964, 73, 263, 630, 702, 14476, 322, 341, 293, 632, 512, 3542, 51590, 51590, 926, 23952, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.2906973097059462, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.2038888346287422e-05}, {"id": 849, "seek": 254320, "start": 2551.7999999999997, "end": 2555.48, "text": " to kind of feed one of those kind of structural prediction", "tokens": [50364, 286, 390, 1417, 466, 3071, 13, 50552, 50552, 1396, 11, 382, 286, 848, 11, 294, 264, 2440, 4289, 82, 11, 50668, 50668, 561, 1409, 1364, 322, 1228, 18161, 36170, 50794, 50794, 281, 733, 295, 3154, 472, 295, 729, 733, 295, 15067, 17630, 50978, 50978, 1185, 13, 51058, 51058, 1018, 286, 848, 11, 264, 700, 472, 286, 458, 466, 51137, 51137, 307, 538, 44653, 368, 441, 6, 16257, 66, 263, 1083, 811, 11, 1230, 732, 11, 51218, 51218, 337, 6218, 11150, 13, 51304, 51304, 814, 632, 257, 565, 8577, 18161, 2533, 13, 51408, 51408, 398, 329, 675, 3964, 73, 263, 630, 702, 14476, 322, 341, 293, 632, 512, 3542, 51590, 51590, 926, 23952, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.2906973097059462, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.2038888346287422e-05}, {"id": 850, "seek": 254320, "start": 2555.48, "end": 2557.08, "text": " system.", "tokens": [50364, 286, 390, 1417, 466, 3071, 13, 50552, 50552, 1396, 11, 382, 286, 848, 11, 294, 264, 2440, 4289, 82, 11, 50668, 50668, 561, 1409, 1364, 322, 1228, 18161, 36170, 50794, 50794, 281, 733, 295, 3154, 472, 295, 729, 733, 295, 15067, 17630, 50978, 50978, 1185, 13, 51058, 51058, 1018, 286, 848, 11, 264, 700, 472, 286, 458, 466, 51137, 51137, 307, 538, 44653, 368, 441, 6, 16257, 66, 263, 1083, 811, 11, 1230, 732, 11, 51218, 51218, 337, 6218, 11150, 13, 51304, 51304, 814, 632, 257, 565, 8577, 18161, 2533, 13, 51408, 51408, 398, 329, 675, 3964, 73, 263, 630, 702, 14476, 322, 341, 293, 632, 512, 3542, 51590, 51590, 926, 23952, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.2906973097059462, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.2038888346287422e-05}, {"id": 851, "seek": 254320, "start": 2557.08, "end": 2558.66, "text": " As I said, the first one I know about", "tokens": [50364, 286, 390, 1417, 466, 3071, 13, 50552, 50552, 1396, 11, 382, 286, 848, 11, 294, 264, 2440, 4289, 82, 11, 50668, 50668, 561, 1409, 1364, 322, 1228, 18161, 36170, 50794, 50794, 281, 733, 295, 3154, 472, 295, 729, 733, 295, 15067, 17630, 50978, 50978, 1185, 13, 51058, 51058, 1018, 286, 848, 11, 264, 700, 472, 286, 458, 466, 51137, 51137, 307, 538, 44653, 368, 441, 6, 16257, 66, 263, 1083, 811, 11, 1230, 732, 11, 51218, 51218, 337, 6218, 11150, 13, 51304, 51304, 814, 632, 257, 565, 8577, 18161, 2533, 13, 51408, 51408, 398, 329, 675, 3964, 73, 263, 630, 702, 14476, 322, 341, 293, 632, 512, 3542, 51590, 51590, 926, 23952, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.2906973097059462, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.2038888346287422e-05}, {"id": 852, "seek": 254320, "start": 2558.66, "end": 2560.2799999999997, "text": " is by Xavier de L'Encouarnier, number two,", "tokens": [50364, 286, 390, 1417, 466, 3071, 13, 50552, 50552, 1396, 11, 382, 286, 848, 11, 294, 264, 2440, 4289, 82, 11, 50668, 50668, 561, 1409, 1364, 322, 1228, 18161, 36170, 50794, 50794, 281, 733, 295, 3154, 472, 295, 729, 733, 295, 15067, 17630, 50978, 50978, 1185, 13, 51058, 51058, 1018, 286, 848, 11, 264, 700, 472, 286, 458, 466, 51137, 51137, 307, 538, 44653, 368, 441, 6, 16257, 66, 263, 1083, 811, 11, 1230, 732, 11, 51218, 51218, 337, 6218, 11150, 13, 51304, 51304, 814, 632, 257, 565, 8577, 18161, 2533, 13, 51408, 51408, 398, 329, 675, 3964, 73, 263, 630, 702, 14476, 322, 341, 293, 632, 512, 3542, 51590, 51590, 926, 23952, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.2906973097059462, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.2038888346287422e-05}, {"id": 853, "seek": 254320, "start": 2560.2799999999997, "end": 2562.0, "text": " for speech recognition.", "tokens": [50364, 286, 390, 1417, 466, 3071, 13, 50552, 50552, 1396, 11, 382, 286, 848, 11, 294, 264, 2440, 4289, 82, 11, 50668, 50668, 561, 1409, 1364, 322, 1228, 18161, 36170, 50794, 50794, 281, 733, 295, 3154, 472, 295, 729, 733, 295, 15067, 17630, 50978, 50978, 1185, 13, 51058, 51058, 1018, 286, 848, 11, 264, 700, 472, 286, 458, 466, 51137, 51137, 307, 538, 44653, 368, 441, 6, 16257, 66, 263, 1083, 811, 11, 1230, 732, 11, 51218, 51218, 337, 6218, 11150, 13, 51304, 51304, 814, 632, 257, 565, 8577, 18161, 2533, 13, 51408, 51408, 398, 329, 675, 3964, 73, 263, 630, 702, 14476, 322, 341, 293, 632, 512, 3542, 51590, 51590, 926, 23952, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.2906973097059462, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.2038888346287422e-05}, {"id": 854, "seek": 254320, "start": 2562.0, "end": 2564.08, "text": " They had a time delay neural net.", "tokens": [50364, 286, 390, 1417, 466, 3071, 13, 50552, 50552, 1396, 11, 382, 286, 848, 11, 294, 264, 2440, 4289, 82, 11, 50668, 50668, 561, 1409, 1364, 322, 1228, 18161, 36170, 50794, 50794, 281, 733, 295, 3154, 472, 295, 729, 733, 295, 15067, 17630, 50978, 50978, 1185, 13, 51058, 51058, 1018, 286, 848, 11, 264, 700, 472, 286, 458, 466, 51137, 51137, 307, 538, 44653, 368, 441, 6, 16257, 66, 263, 1083, 811, 11, 1230, 732, 11, 51218, 51218, 337, 6218, 11150, 13, 51304, 51304, 814, 632, 257, 565, 8577, 18161, 2533, 13, 51408, 51408, 398, 329, 675, 3964, 73, 263, 630, 702, 14476, 322, 341, 293, 632, 512, 3542, 51590, 51590, 926, 23952, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.2906973097059462, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.2038888346287422e-05}, {"id": 855, "seek": 254320, "start": 2564.08, "end": 2567.72, "text": " Yoshe Benjou did his PhD on this and had some results", "tokens": [50364, 286, 390, 1417, 466, 3071, 13, 50552, 50552, 1396, 11, 382, 286, 848, 11, 294, 264, 2440, 4289, 82, 11, 50668, 50668, 561, 1409, 1364, 322, 1228, 18161, 36170, 50794, 50794, 281, 733, 295, 3154, 472, 295, 729, 733, 295, 15067, 17630, 50978, 50978, 1185, 13, 51058, 51058, 1018, 286, 848, 11, 264, 700, 472, 286, 458, 466, 51137, 51137, 307, 538, 44653, 368, 441, 6, 16257, 66, 263, 1083, 811, 11, 1230, 732, 11, 51218, 51218, 337, 6218, 11150, 13, 51304, 51304, 814, 632, 257, 565, 8577, 18161, 2533, 13, 51408, 51408, 398, 329, 675, 3964, 73, 263, 630, 702, 14476, 322, 341, 293, 632, 512, 3542, 51590, 51590, 926, 23952, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.2906973097059462, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.2038888346287422e-05}, {"id": 856, "seek": 254320, "start": 2567.72, "end": 2569.3999999999996, "text": " around 1992.", "tokens": [50364, 286, 390, 1417, 466, 3071, 13, 50552, 50552, 1396, 11, 382, 286, 848, 11, 294, 264, 2440, 4289, 82, 11, 50668, 50668, 561, 1409, 1364, 322, 1228, 18161, 36170, 50794, 50794, 281, 733, 295, 3154, 472, 295, 729, 733, 295, 15067, 17630, 50978, 50978, 1185, 13, 51058, 51058, 1018, 286, 848, 11, 264, 700, 472, 286, 458, 466, 51137, 51137, 307, 538, 44653, 368, 441, 6, 16257, 66, 263, 1083, 811, 11, 1230, 732, 11, 51218, 51218, 337, 6218, 11150, 13, 51304, 51304, 814, 632, 257, 565, 8577, 18161, 2533, 13, 51408, 51408, 398, 329, 675, 3964, 73, 263, 630, 702, 14476, 322, 341, 293, 632, 512, 3542, 51590, 51590, 926, 23952, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.2906973097059462, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.2038888346287422e-05}, {"id": 857, "seek": 256940, "start": 2569.4, "end": 2573.32, "text": " And Patrick Hefner, the year after that.", "tokens": [50364, 400, 13980, 634, 69, 1193, 11, 264, 1064, 934, 300, 13, 50560, 50560, 13244, 363, 346, 3298, 11, 398, 329, 675, 3964, 73, 263, 11, 293, 13980, 634, 69, 1193, 50656, 50656, 366, 264, 598, 12, 40198, 830, 295, 452, 3035, 490, 21404, 50940, 50940, 466, 39179, 11150, 11, 570, 286, 13144, 439, 1045, 51128, 51128, 295, 552, 412, 8872, 5, 51, 281, 589, 322, 341, 1154, 13, 51364, 51364, 814, 632, 1936, 8932, 484, 512, 636, 295, 884, 341, 51524, 51524, 294, 641, 14476, 22288, 13, 51594, 51594, 400, 286, 2586, 300, 390, 264, 4282, 300, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1555298436986338, "compression_ratio": 1.4801762114537445, "no_speech_prob": 2.1406234736787155e-05}, {"id": 858, "seek": 256940, "start": 2573.32, "end": 2575.2400000000002, "text": " Leon Boutoul, Yoshe Benjou, and Patrick Hefner", "tokens": [50364, 400, 13980, 634, 69, 1193, 11, 264, 1064, 934, 300, 13, 50560, 50560, 13244, 363, 346, 3298, 11, 398, 329, 675, 3964, 73, 263, 11, 293, 13980, 634, 69, 1193, 50656, 50656, 366, 264, 598, 12, 40198, 830, 295, 452, 3035, 490, 21404, 50940, 50940, 466, 39179, 11150, 11, 570, 286, 13144, 439, 1045, 51128, 51128, 295, 552, 412, 8872, 5, 51, 281, 589, 322, 341, 1154, 13, 51364, 51364, 814, 632, 1936, 8932, 484, 512, 636, 295, 884, 341, 51524, 51524, 294, 641, 14476, 22288, 13, 51594, 51594, 400, 286, 2586, 300, 390, 264, 4282, 300, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1555298436986338, "compression_ratio": 1.4801762114537445, "no_speech_prob": 2.1406234736787155e-05}, {"id": 859, "seek": 256940, "start": 2575.2400000000002, "end": 2580.92, "text": " are the co-authors of my paper from 1998", "tokens": [50364, 400, 13980, 634, 69, 1193, 11, 264, 1064, 934, 300, 13, 50560, 50560, 13244, 363, 346, 3298, 11, 398, 329, 675, 3964, 73, 263, 11, 293, 13980, 634, 69, 1193, 50656, 50656, 366, 264, 598, 12, 40198, 830, 295, 452, 3035, 490, 21404, 50940, 50940, 466, 39179, 11150, 11, 570, 286, 13144, 439, 1045, 51128, 51128, 295, 552, 412, 8872, 5, 51, 281, 589, 322, 341, 1154, 13, 51364, 51364, 814, 632, 1936, 8932, 484, 512, 636, 295, 884, 341, 51524, 51524, 294, 641, 14476, 22288, 13, 51594, 51594, 400, 286, 2586, 300, 390, 264, 4282, 300, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1555298436986338, "compression_ratio": 1.4801762114537445, "no_speech_prob": 2.1406234736787155e-05}, {"id": 860, "seek": 256940, "start": 2580.92, "end": 2584.6800000000003, "text": " about handwriting recognition, because I hired all three", "tokens": [50364, 400, 13980, 634, 69, 1193, 11, 264, 1064, 934, 300, 13, 50560, 50560, 13244, 363, 346, 3298, 11, 398, 329, 675, 3964, 73, 263, 11, 293, 13980, 634, 69, 1193, 50656, 50656, 366, 264, 598, 12, 40198, 830, 295, 452, 3035, 490, 21404, 50940, 50940, 466, 39179, 11150, 11, 570, 286, 13144, 439, 1045, 51128, 51128, 295, 552, 412, 8872, 5, 51, 281, 589, 322, 341, 1154, 13, 51364, 51364, 814, 632, 1936, 8932, 484, 512, 636, 295, 884, 341, 51524, 51524, 294, 641, 14476, 22288, 13, 51594, 51594, 400, 286, 2586, 300, 390, 264, 4282, 300, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1555298436986338, "compression_ratio": 1.4801762114537445, "no_speech_prob": 2.1406234736787155e-05}, {"id": 861, "seek": 256940, "start": 2584.6800000000003, "end": 2589.4, "text": " of them at AT&T to work on this problem.", "tokens": [50364, 400, 13980, 634, 69, 1193, 11, 264, 1064, 934, 300, 13, 50560, 50560, 13244, 363, 346, 3298, 11, 398, 329, 675, 3964, 73, 263, 11, 293, 13980, 634, 69, 1193, 50656, 50656, 366, 264, 598, 12, 40198, 830, 295, 452, 3035, 490, 21404, 50940, 50940, 466, 39179, 11150, 11, 570, 286, 13144, 439, 1045, 51128, 51128, 295, 552, 412, 8872, 5, 51, 281, 589, 322, 341, 1154, 13, 51364, 51364, 814, 632, 1936, 8932, 484, 512, 636, 295, 884, 341, 51524, 51524, 294, 641, 14476, 22288, 13, 51594, 51594, 400, 286, 2586, 300, 390, 264, 4282, 300, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1555298436986338, "compression_ratio": 1.4801762114537445, "no_speech_prob": 2.1406234736787155e-05}, {"id": 862, "seek": 256940, "start": 2589.4, "end": 2592.6, "text": " They had basically figured out some way of doing this", "tokens": [50364, 400, 13980, 634, 69, 1193, 11, 264, 1064, 934, 300, 13, 50560, 50560, 13244, 363, 346, 3298, 11, 398, 329, 675, 3964, 73, 263, 11, 293, 13980, 634, 69, 1193, 50656, 50656, 366, 264, 598, 12, 40198, 830, 295, 452, 3035, 490, 21404, 50940, 50940, 466, 39179, 11150, 11, 570, 286, 13144, 439, 1045, 51128, 51128, 295, 552, 412, 8872, 5, 51, 281, 589, 322, 341, 1154, 13, 51364, 51364, 814, 632, 1936, 8932, 484, 512, 636, 295, 884, 341, 51524, 51524, 294, 641, 14476, 22288, 13, 51594, 51594, 400, 286, 2586, 300, 390, 264, 4282, 300, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1555298436986338, "compression_ratio": 1.4801762114537445, "no_speech_prob": 2.1406234736787155e-05}, {"id": 863, "seek": 256940, "start": 2592.6, "end": 2594.0, "text": " in their PhD thesis.", "tokens": [50364, 400, 13980, 634, 69, 1193, 11, 264, 1064, 934, 300, 13, 50560, 50560, 13244, 363, 346, 3298, 11, 398, 329, 675, 3964, 73, 263, 11, 293, 13980, 634, 69, 1193, 50656, 50656, 366, 264, 598, 12, 40198, 830, 295, 452, 3035, 490, 21404, 50940, 50940, 466, 39179, 11150, 11, 570, 286, 13144, 439, 1045, 51128, 51128, 295, 552, 412, 8872, 5, 51, 281, 589, 322, 341, 1154, 13, 51364, 51364, 814, 632, 1936, 8932, 484, 512, 636, 295, 884, 341, 51524, 51524, 294, 641, 14476, 22288, 13, 51594, 51594, 400, 286, 2586, 300, 390, 264, 4282, 300, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1555298436986338, "compression_ratio": 1.4801762114537445, "no_speech_prob": 2.1406234736787155e-05}, {"id": 864, "seek": 256940, "start": 2594.0, "end": 2597.6, "text": " And I knew that was the trick that", "tokens": [50364, 400, 13980, 634, 69, 1193, 11, 264, 1064, 934, 300, 13, 50560, 50560, 13244, 363, 346, 3298, 11, 398, 329, 675, 3964, 73, 263, 11, 293, 13980, 634, 69, 1193, 50656, 50656, 366, 264, 598, 12, 40198, 830, 295, 452, 3035, 490, 21404, 50940, 50940, 466, 39179, 11150, 11, 570, 286, 13144, 439, 1045, 51128, 51128, 295, 552, 412, 8872, 5, 51, 281, 589, 322, 341, 1154, 13, 51364, 51364, 814, 632, 1936, 8932, 484, 512, 636, 295, 884, 341, 51524, 51524, 294, 641, 14476, 22288, 13, 51594, 51594, 400, 286, 2586, 300, 390, 264, 4282, 300, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1555298436986338, "compression_ratio": 1.4801762114537445, "no_speech_prob": 2.1406234736787155e-05}, {"id": 865, "seek": 259760, "start": 2597.6, "end": 2599.72, "text": " needed to be worked on for things like handwriting", "tokens": [50364, 2978, 281, 312, 2732, 322, 337, 721, 411, 39179, 50470, 50470, 11150, 11, 15067, 17630, 365, 18161, 36170, 13, 50590, 50826, 1779, 11, 718, 311, 536, 13, 50902, 51058, 2264, 11, 370, 510, 307, 257, 636, 13, 51234, 51234, 400, 286, 787, 33919, 281, 341, 534, 2661, 51328, 51328, 294, 364, 3071, 7991, 13, 51382, 51382, 1692, 307, 257, 636, 281, 1333, 295, 829, 341, 51474, 51474, 294, 264, 4319, 295, 2452, 2539, 13, 51648, 51648, 407, 382, 286, 848, 949, 11, 472, 636, 281, 360, 341, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2072132865151206, "compression_ratio": 1.5144230769230769, "no_speech_prob": 2.456964284647256e-05}, {"id": 866, "seek": 259760, "start": 2599.72, "end": 2602.12, "text": " recognition, structural prediction with neural nets.", "tokens": [50364, 2978, 281, 312, 2732, 322, 337, 721, 411, 39179, 50470, 50470, 11150, 11, 15067, 17630, 365, 18161, 36170, 13, 50590, 50826, 1779, 11, 718, 311, 536, 13, 50902, 51058, 2264, 11, 370, 510, 307, 257, 636, 13, 51234, 51234, 400, 286, 787, 33919, 281, 341, 534, 2661, 51328, 51328, 294, 364, 3071, 7991, 13, 51382, 51382, 1692, 307, 257, 636, 281, 1333, 295, 829, 341, 51474, 51474, 294, 264, 4319, 295, 2452, 2539, 13, 51648, 51648, 407, 382, 286, 848, 949, 11, 472, 636, 281, 360, 341, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2072132865151206, "compression_ratio": 1.5144230769230769, "no_speech_prob": 2.456964284647256e-05}, {"id": 867, "seek": 259760, "start": 2606.8399999999997, "end": 2608.36, "text": " Right, let's see.", "tokens": [50364, 2978, 281, 312, 2732, 322, 337, 721, 411, 39179, 50470, 50470, 11150, 11, 15067, 17630, 365, 18161, 36170, 13, 50590, 50826, 1779, 11, 718, 311, 536, 13, 50902, 51058, 2264, 11, 370, 510, 307, 257, 636, 13, 51234, 51234, 400, 286, 787, 33919, 281, 341, 534, 2661, 51328, 51328, 294, 364, 3071, 7991, 13, 51382, 51382, 1692, 307, 257, 636, 281, 1333, 295, 829, 341, 51474, 51474, 294, 264, 4319, 295, 2452, 2539, 13, 51648, 51648, 407, 382, 286, 848, 949, 11, 472, 636, 281, 360, 341, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2072132865151206, "compression_ratio": 1.5144230769230769, "no_speech_prob": 2.456964284647256e-05}, {"id": 868, "seek": 259760, "start": 2611.48, "end": 2615.0, "text": " OK, so here is a way.", "tokens": [50364, 2978, 281, 312, 2732, 322, 337, 721, 411, 39179, 50470, 50470, 11150, 11, 15067, 17630, 365, 18161, 36170, 13, 50590, 50826, 1779, 11, 718, 311, 536, 13, 50902, 51058, 2264, 11, 370, 510, 307, 257, 636, 13, 51234, 51234, 400, 286, 787, 33919, 281, 341, 534, 2661, 51328, 51328, 294, 364, 3071, 7991, 13, 51382, 51382, 1692, 307, 257, 636, 281, 1333, 295, 829, 341, 51474, 51474, 294, 264, 4319, 295, 2452, 2539, 13, 51648, 51648, 407, 382, 286, 848, 949, 11, 472, 636, 281, 360, 341, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2072132865151206, "compression_ratio": 1.5144230769230769, "no_speech_prob": 2.456964284647256e-05}, {"id": 869, "seek": 259760, "start": 2615.0, "end": 2616.88, "text": " And I only alluded to this really quickly", "tokens": [50364, 2978, 281, 312, 2732, 322, 337, 721, 411, 39179, 50470, 50470, 11150, 11, 15067, 17630, 365, 18161, 36170, 13, 50590, 50826, 1779, 11, 718, 311, 536, 13, 50902, 51058, 2264, 11, 370, 510, 307, 257, 636, 13, 51234, 51234, 400, 286, 787, 33919, 281, 341, 534, 2661, 51328, 51328, 294, 364, 3071, 7991, 13, 51382, 51382, 1692, 307, 257, 636, 281, 1333, 295, 829, 341, 51474, 51474, 294, 264, 4319, 295, 2452, 2539, 13, 51648, 51648, 407, 382, 286, 848, 949, 11, 472, 636, 281, 360, 341, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2072132865151206, "compression_ratio": 1.5144230769230769, "no_speech_prob": 2.456964284647256e-05}, {"id": 870, "seek": 259760, "start": 2616.88, "end": 2617.96, "text": " in an earlier lecture.", "tokens": [50364, 2978, 281, 312, 2732, 322, 337, 721, 411, 39179, 50470, 50470, 11150, 11, 15067, 17630, 365, 18161, 36170, 13, 50590, 50826, 1779, 11, 718, 311, 536, 13, 50902, 51058, 2264, 11, 370, 510, 307, 257, 636, 13, 51234, 51234, 400, 286, 787, 33919, 281, 341, 534, 2661, 51328, 51328, 294, 364, 3071, 7991, 13, 51382, 51382, 1692, 307, 257, 636, 281, 1333, 295, 829, 341, 51474, 51474, 294, 264, 4319, 295, 2452, 2539, 13, 51648, 51648, 407, 382, 286, 848, 949, 11, 472, 636, 281, 360, 341, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2072132865151206, "compression_ratio": 1.5144230769230769, "no_speech_prob": 2.456964284647256e-05}, {"id": 871, "seek": 259760, "start": 2617.96, "end": 2619.7999999999997, "text": " Here is a way to sort of put this", "tokens": [50364, 2978, 281, 312, 2732, 322, 337, 721, 411, 39179, 50470, 50470, 11150, 11, 15067, 17630, 365, 18161, 36170, 13, 50590, 50826, 1779, 11, 718, 311, 536, 13, 50902, 51058, 2264, 11, 370, 510, 307, 257, 636, 13, 51234, 51234, 400, 286, 787, 33919, 281, 341, 534, 2661, 51328, 51328, 294, 364, 3071, 7991, 13, 51382, 51382, 1692, 307, 257, 636, 281, 1333, 295, 829, 341, 51474, 51474, 294, 264, 4319, 295, 2452, 2539, 13, 51648, 51648, 407, 382, 286, 848, 949, 11, 472, 636, 281, 360, 341, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2072132865151206, "compression_ratio": 1.5144230769230769, "no_speech_prob": 2.456964284647256e-05}, {"id": 872, "seek": 259760, "start": 2619.7999999999997, "end": 2623.2799999999997, "text": " in the context of deep learning.", "tokens": [50364, 2978, 281, 312, 2732, 322, 337, 721, 411, 39179, 50470, 50470, 11150, 11, 15067, 17630, 365, 18161, 36170, 13, 50590, 50826, 1779, 11, 718, 311, 536, 13, 50902, 51058, 2264, 11, 370, 510, 307, 257, 636, 13, 51234, 51234, 400, 286, 787, 33919, 281, 341, 534, 2661, 51328, 51328, 294, 364, 3071, 7991, 13, 51382, 51382, 1692, 307, 257, 636, 281, 1333, 295, 829, 341, 51474, 51474, 294, 264, 4319, 295, 2452, 2539, 13, 51648, 51648, 407, 382, 286, 848, 949, 11, 472, 636, 281, 360, 341, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2072132865151206, "compression_ratio": 1.5144230769230769, "no_speech_prob": 2.456964284647256e-05}, {"id": 873, "seek": 259760, "start": 2623.2799999999997, "end": 2626.2, "text": " So as I said before, one way to do this", "tokens": [50364, 2978, 281, 312, 2732, 322, 337, 721, 411, 39179, 50470, 50470, 11150, 11, 15067, 17630, 365, 18161, 36170, 13, 50590, 50826, 1779, 11, 718, 311, 536, 13, 50902, 51058, 2264, 11, 370, 510, 307, 257, 636, 13, 51234, 51234, 400, 286, 787, 33919, 281, 341, 534, 2661, 51328, 51328, 294, 364, 3071, 7991, 13, 51382, 51382, 1692, 307, 257, 636, 281, 1333, 295, 829, 341, 51474, 51474, 294, 264, 4319, 295, 2452, 2539, 13, 51648, 51648, 407, 382, 286, 848, 949, 11, 472, 636, 281, 360, 341, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2072132865151206, "compression_ratio": 1.5144230769230769, "no_speech_prob": 2.456964284647256e-05}, {"id": 874, "seek": 262620, "start": 2626.2, "end": 2630.16, "text": " in the context of deep learning is you make those factors deep", "tokens": [50364, 294, 264, 4319, 295, 2452, 2539, 307, 291, 652, 729, 6771, 2452, 50562, 50562, 18161, 36170, 11, 1936, 13, 50632, 50632, 814, 445, 14722, 512, 2281, 13, 50708, 50708, 400, 436, 366, 13075, 1602, 538, 257, 3840, 295, 9834, 13, 50814, 50814, 400, 1825, 2962, 13, 50954, 50954, 492, 458, 577, 281, 360, 646, 79, 1513, 13, 51038, 51038, 400, 321, 362, 9953, 51, 284, 339, 13, 51148, 51148, 583, 510, 307, 257, 4748, 819, 1558, 11, 51334, 51334, 597, 733, 295, 20045, 322, 264, 912, 2010, 295, 2316, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1875123368932846, "compression_ratio": 1.481818181818182, "no_speech_prob": 1.9507586330291815e-05}, {"id": 875, "seek": 262620, "start": 2630.16, "end": 2631.56, "text": " neural nets, basically.", "tokens": [50364, 294, 264, 4319, 295, 2452, 2539, 307, 291, 652, 729, 6771, 2452, 50562, 50562, 18161, 36170, 11, 1936, 13, 50632, 50632, 814, 445, 14722, 512, 2281, 13, 50708, 50708, 400, 436, 366, 13075, 1602, 538, 257, 3840, 295, 9834, 13, 50814, 50814, 400, 1825, 2962, 13, 50954, 50954, 492, 458, 577, 281, 360, 646, 79, 1513, 13, 51038, 51038, 400, 321, 362, 9953, 51, 284, 339, 13, 51148, 51148, 583, 510, 307, 257, 4748, 819, 1558, 11, 51334, 51334, 597, 733, 295, 20045, 322, 264, 912, 2010, 295, 2316, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1875123368932846, "compression_ratio": 1.481818181818182, "no_speech_prob": 1.9507586330291815e-05}, {"id": 876, "seek": 262620, "start": 2631.56, "end": 2633.08, "text": " They just compute some energy.", "tokens": [50364, 294, 264, 4319, 295, 2452, 2539, 307, 291, 652, 729, 6771, 2452, 50562, 50562, 18161, 36170, 11, 1936, 13, 50632, 50632, 814, 445, 14722, 512, 2281, 13, 50708, 50708, 400, 436, 366, 13075, 1602, 538, 257, 3840, 295, 9834, 13, 50814, 50814, 400, 1825, 2962, 13, 50954, 50954, 492, 458, 577, 281, 360, 646, 79, 1513, 13, 51038, 51038, 400, 321, 362, 9953, 51, 284, 339, 13, 51148, 51148, 583, 510, 307, 257, 4748, 819, 1558, 11, 51334, 51334, 597, 733, 295, 20045, 322, 264, 912, 2010, 295, 2316, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1875123368932846, "compression_ratio": 1.481818181818182, "no_speech_prob": 1.9507586330291815e-05}, {"id": 877, "seek": 262620, "start": 2633.08, "end": 2635.2, "text": " And they are parameterized by a bunch of parameters.", "tokens": [50364, 294, 264, 4319, 295, 2452, 2539, 307, 291, 652, 729, 6771, 2452, 50562, 50562, 18161, 36170, 11, 1936, 13, 50632, 50632, 814, 445, 14722, 512, 2281, 13, 50708, 50708, 400, 436, 366, 13075, 1602, 538, 257, 3840, 295, 9834, 13, 50814, 50814, 400, 1825, 2962, 13, 50954, 50954, 492, 458, 577, 281, 360, 646, 79, 1513, 13, 51038, 51038, 400, 321, 362, 9953, 51, 284, 339, 13, 51148, 51148, 583, 510, 307, 257, 4748, 819, 1558, 11, 51334, 51334, 597, 733, 295, 20045, 322, 264, 912, 2010, 295, 2316, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1875123368932846, "compression_ratio": 1.481818181818182, "no_speech_prob": 1.9507586330291815e-05}, {"id": 878, "seek": 262620, "start": 2635.2, "end": 2638.0, "text": " And nothing changes.", "tokens": [50364, 294, 264, 4319, 295, 2452, 2539, 307, 291, 652, 729, 6771, 2452, 50562, 50562, 18161, 36170, 11, 1936, 13, 50632, 50632, 814, 445, 14722, 512, 2281, 13, 50708, 50708, 400, 436, 366, 13075, 1602, 538, 257, 3840, 295, 9834, 13, 50814, 50814, 400, 1825, 2962, 13, 50954, 50954, 492, 458, 577, 281, 360, 646, 79, 1513, 13, 51038, 51038, 400, 321, 362, 9953, 51, 284, 339, 13, 51148, 51148, 583, 510, 307, 257, 4748, 819, 1558, 11, 51334, 51334, 597, 733, 295, 20045, 322, 264, 912, 2010, 295, 2316, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1875123368932846, "compression_ratio": 1.481818181818182, "no_speech_prob": 1.9507586330291815e-05}, {"id": 879, "seek": 262620, "start": 2638.0, "end": 2639.68, "text": " We know how to do backprop.", "tokens": [50364, 294, 264, 4319, 295, 2452, 2539, 307, 291, 652, 729, 6771, 2452, 50562, 50562, 18161, 36170, 11, 1936, 13, 50632, 50632, 814, 445, 14722, 512, 2281, 13, 50708, 50708, 400, 436, 366, 13075, 1602, 538, 257, 3840, 295, 9834, 13, 50814, 50814, 400, 1825, 2962, 13, 50954, 50954, 492, 458, 577, 281, 360, 646, 79, 1513, 13, 51038, 51038, 400, 321, 362, 9953, 51, 284, 339, 13, 51148, 51148, 583, 510, 307, 257, 4748, 819, 1558, 11, 51334, 51334, 597, 733, 295, 20045, 322, 264, 912, 2010, 295, 2316, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1875123368932846, "compression_ratio": 1.481818181818182, "no_speech_prob": 1.9507586330291815e-05}, {"id": 880, "seek": 262620, "start": 2639.68, "end": 2641.8799999999997, "text": " And we have PyTorch.", "tokens": [50364, 294, 264, 4319, 295, 2452, 2539, 307, 291, 652, 729, 6771, 2452, 50562, 50562, 18161, 36170, 11, 1936, 13, 50632, 50632, 814, 445, 14722, 512, 2281, 13, 50708, 50708, 400, 436, 366, 13075, 1602, 538, 257, 3840, 295, 9834, 13, 50814, 50814, 400, 1825, 2962, 13, 50954, 50954, 492, 458, 577, 281, 360, 646, 79, 1513, 13, 51038, 51038, 400, 321, 362, 9953, 51, 284, 339, 13, 51148, 51148, 583, 510, 307, 257, 4748, 819, 1558, 11, 51334, 51334, 597, 733, 295, 20045, 322, 264, 912, 2010, 295, 2316, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1875123368932846, "compression_ratio": 1.481818181818182, "no_speech_prob": 1.9507586330291815e-05}, {"id": 881, "seek": 262620, "start": 2641.8799999999997, "end": 2645.6, "text": " But here is a slightly different idea,", "tokens": [50364, 294, 264, 4319, 295, 2452, 2539, 307, 291, 652, 729, 6771, 2452, 50562, 50562, 18161, 36170, 11, 1936, 13, 50632, 50632, 814, 445, 14722, 512, 2281, 13, 50708, 50708, 400, 436, 366, 13075, 1602, 538, 257, 3840, 295, 9834, 13, 50814, 50814, 400, 1825, 2962, 13, 50954, 50954, 492, 458, 577, 281, 360, 646, 79, 1513, 13, 51038, 51038, 400, 321, 362, 9953, 51, 284, 339, 13, 51148, 51148, 583, 510, 307, 257, 4748, 819, 1558, 11, 51334, 51334, 597, 733, 295, 20045, 322, 264, 912, 2010, 295, 2316, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1875123368932846, "compression_ratio": 1.481818181818182, "no_speech_prob": 1.9507586330291815e-05}, {"id": 882, "seek": 262620, "start": 2645.6, "end": 2651.04, "text": " which kind of draws on the same type of model.", "tokens": [50364, 294, 264, 4319, 295, 2452, 2539, 307, 291, 652, 729, 6771, 2452, 50562, 50562, 18161, 36170, 11, 1936, 13, 50632, 50632, 814, 445, 14722, 512, 2281, 13, 50708, 50708, 400, 436, 366, 13075, 1602, 538, 257, 3840, 295, 9834, 13, 50814, 50814, 400, 1825, 2962, 13, 50954, 50954, 492, 458, 577, 281, 360, 646, 79, 1513, 13, 51038, 51038, 400, 321, 362, 9953, 51, 284, 339, 13, 51148, 51148, 583, 510, 307, 257, 4748, 819, 1558, 11, 51334, 51334, 597, 733, 295, 20045, 322, 264, 912, 2010, 295, 2316, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1875123368932846, "compression_ratio": 1.481818181818182, "no_speech_prob": 1.9507586330291815e-05}, {"id": 883, "seek": 265104, "start": 2651.04, "end": 2657.52, "text": " And this is when the structure is more complex than just", "tokens": [50364, 400, 341, 307, 562, 264, 3877, 307, 544, 3997, 813, 445, 50688, 50688, 257, 3840, 295, 6806, 6771, 365, 257, 2570, 3877, 11, 498, 291, 528, 13, 51136, 51136, 400, 370, 264, 1365, 286, 478, 516, 281, 764, 510, 51212, 51212, 307, 39179, 11150, 13, 51316, 51316, 583, 570, 456, 311, 257, 938, 2503, 295, 309, 51578, 51578, 293, 286, 362, 18618, 300, 366, 4927, 337, 341, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.13683051533169216, "compression_ratio": 1.491891891891892, "no_speech_prob": 1.749939110595733e-05}, {"id": 884, "seek": 265104, "start": 2657.52, "end": 2666.48, "text": " a bunch of fixed factors with a known structure, if you want.", "tokens": [50364, 400, 341, 307, 562, 264, 3877, 307, 544, 3997, 813, 445, 50688, 50688, 257, 3840, 295, 6806, 6771, 365, 257, 2570, 3877, 11, 498, 291, 528, 13, 51136, 51136, 400, 370, 264, 1365, 286, 478, 516, 281, 764, 510, 51212, 51212, 307, 39179, 11150, 13, 51316, 51316, 583, 570, 456, 311, 257, 938, 2503, 295, 309, 51578, 51578, 293, 286, 362, 18618, 300, 366, 4927, 337, 341, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.13683051533169216, "compression_ratio": 1.491891891891892, "no_speech_prob": 1.749939110595733e-05}, {"id": 885, "seek": 265104, "start": 2666.48, "end": 2668.0, "text": " And so the example I'm going to use here", "tokens": [50364, 400, 341, 307, 562, 264, 3877, 307, 544, 3997, 813, 445, 50688, 50688, 257, 3840, 295, 6806, 6771, 365, 257, 2570, 3877, 11, 498, 291, 528, 13, 51136, 51136, 400, 370, 264, 1365, 286, 478, 516, 281, 764, 510, 51212, 51212, 307, 39179, 11150, 13, 51316, 51316, 583, 570, 456, 311, 257, 938, 2503, 295, 309, 51578, 51578, 293, 286, 362, 18618, 300, 366, 4927, 337, 341, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.13683051533169216, "compression_ratio": 1.491891891891892, "no_speech_prob": 1.749939110595733e-05}, {"id": 886, "seek": 265104, "start": 2668.0, "end": 2670.08, "text": " is handwriting recognition.", "tokens": [50364, 400, 341, 307, 562, 264, 3877, 307, 544, 3997, 813, 445, 50688, 50688, 257, 3840, 295, 6806, 6771, 365, 257, 2570, 3877, 11, 498, 291, 528, 13, 51136, 51136, 400, 370, 264, 1365, 286, 478, 516, 281, 764, 510, 51212, 51212, 307, 39179, 11150, 13, 51316, 51316, 583, 570, 456, 311, 257, 938, 2503, 295, 309, 51578, 51578, 293, 286, 362, 18618, 300, 366, 4927, 337, 341, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.13683051533169216, "compression_ratio": 1.491891891891892, "no_speech_prob": 1.749939110595733e-05}, {"id": 887, "seek": 265104, "start": 2670.08, "end": 2675.32, "text": " But because there's a long history of it", "tokens": [50364, 400, 341, 307, 562, 264, 3877, 307, 544, 3997, 813, 445, 50688, 50688, 257, 3840, 295, 6806, 6771, 365, 257, 2570, 3877, 11, 498, 291, 528, 13, 51136, 51136, 400, 370, 264, 1365, 286, 478, 516, 281, 764, 510, 51212, 51212, 307, 39179, 11150, 13, 51316, 51316, 583, 570, 456, 311, 257, 938, 2503, 295, 309, 51578, 51578, 293, 286, 362, 18618, 300, 366, 4927, 337, 341, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.13683051533169216, "compression_ratio": 1.491891891891892, "no_speech_prob": 1.749939110595733e-05}, {"id": 888, "seek": 265104, "start": 2675.32, "end": 2680.96, "text": " and I have drawings that are prepared for this,", "tokens": [50364, 400, 341, 307, 562, 264, 3877, 307, 544, 3997, 813, 445, 50688, 50688, 257, 3840, 295, 6806, 6771, 365, 257, 2570, 3877, 11, 498, 291, 528, 13, 51136, 51136, 400, 370, 264, 1365, 286, 478, 516, 281, 764, 510, 51212, 51212, 307, 39179, 11150, 13, 51316, 51316, 583, 570, 456, 311, 257, 938, 2503, 295, 309, 51578, 51578, 293, 286, 362, 18618, 300, 366, 4927, 337, 341, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.13683051533169216, "compression_ratio": 1.491891891891892, "no_speech_prob": 1.749939110595733e-05}, {"id": 889, "seek": 268096, "start": 2680.96, "end": 2682.56, "text": " that have been around for a long time.", "tokens": [50364, 300, 362, 668, 926, 337, 257, 938, 565, 13, 50444, 50444, 583, 2264, 11, 370, 510, 264, 1154, 321, 362, 50624, 50624, 307, 300, 321, 362, 257, 8310, 295, 27011, 412, 264, 4846, 13, 50768, 50768, 400, 321, 500, 380, 458, 577, 281, 9469, 341, 8310, 51098, 51098, 666, 2609, 27011, 11, 570, 321, 51178, 51178, 500, 380, 458, 437, 264, 3166, 366, 337, 1184, 295, 264, 27011, 13, 51288, 51288, 440, 1451, 510, 307, 733, 295, 5463, 666, 732, 3166, 13, 51460, 51460, 400, 370, 437, 321, 393, 360, 307, 1322, 257, 4295, 294, 597, 1184, 3100, 307, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13460842614035004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.862463614088483e-05}, {"id": 890, "seek": 268096, "start": 2682.56, "end": 2686.16, "text": " But OK, so here the problem we have", "tokens": [50364, 300, 362, 668, 926, 337, 257, 938, 565, 13, 50444, 50444, 583, 2264, 11, 370, 510, 264, 1154, 321, 362, 50624, 50624, 307, 300, 321, 362, 257, 8310, 295, 27011, 412, 264, 4846, 13, 50768, 50768, 400, 321, 500, 380, 458, 577, 281, 9469, 341, 8310, 51098, 51098, 666, 2609, 27011, 11, 570, 321, 51178, 51178, 500, 380, 458, 437, 264, 3166, 366, 337, 1184, 295, 264, 27011, 13, 51288, 51288, 440, 1451, 510, 307, 733, 295, 5463, 666, 732, 3166, 13, 51460, 51460, 400, 370, 437, 321, 393, 360, 307, 1322, 257, 4295, 294, 597, 1184, 3100, 307, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13460842614035004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.862463614088483e-05}, {"id": 891, "seek": 268096, "start": 2686.16, "end": 2689.04, "text": " is that we have a sequence of digits at the input.", "tokens": [50364, 300, 362, 668, 926, 337, 257, 938, 565, 13, 50444, 50444, 583, 2264, 11, 370, 510, 264, 1154, 321, 362, 50624, 50624, 307, 300, 321, 362, 257, 8310, 295, 27011, 412, 264, 4846, 13, 50768, 50768, 400, 321, 500, 380, 458, 577, 281, 9469, 341, 8310, 51098, 51098, 666, 2609, 27011, 11, 570, 321, 51178, 51178, 500, 380, 458, 437, 264, 3166, 366, 337, 1184, 295, 264, 27011, 13, 51288, 51288, 440, 1451, 510, 307, 733, 295, 5463, 666, 732, 3166, 13, 51460, 51460, 400, 370, 437, 321, 393, 360, 307, 1322, 257, 4295, 294, 597, 1184, 3100, 307, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13460842614035004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.862463614088483e-05}, {"id": 892, "seek": 268096, "start": 2689.04, "end": 2695.64, "text": " And we don't know how to segment this sequence", "tokens": [50364, 300, 362, 668, 926, 337, 257, 938, 565, 13, 50444, 50444, 583, 2264, 11, 370, 510, 264, 1154, 321, 362, 50624, 50624, 307, 300, 321, 362, 257, 8310, 295, 27011, 412, 264, 4846, 13, 50768, 50768, 400, 321, 500, 380, 458, 577, 281, 9469, 341, 8310, 51098, 51098, 666, 2609, 27011, 11, 570, 321, 51178, 51178, 500, 380, 458, 437, 264, 3166, 366, 337, 1184, 295, 264, 27011, 13, 51288, 51288, 440, 1451, 510, 307, 733, 295, 5463, 666, 732, 3166, 13, 51460, 51460, 400, 370, 437, 321, 393, 360, 307, 1322, 257, 4295, 294, 597, 1184, 3100, 307, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13460842614035004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.862463614088483e-05}, {"id": 893, "seek": 268096, "start": 2695.64, "end": 2697.2400000000002, "text": " into individual digits, because we", "tokens": [50364, 300, 362, 668, 926, 337, 257, 938, 565, 13, 50444, 50444, 583, 2264, 11, 370, 510, 264, 1154, 321, 362, 50624, 50624, 307, 300, 321, 362, 257, 8310, 295, 27011, 412, 264, 4846, 13, 50768, 50768, 400, 321, 500, 380, 458, 577, 281, 9469, 341, 8310, 51098, 51098, 666, 2609, 27011, 11, 570, 321, 51178, 51178, 500, 380, 458, 437, 264, 3166, 366, 337, 1184, 295, 264, 27011, 13, 51288, 51288, 440, 1451, 510, 307, 733, 295, 5463, 666, 732, 3166, 13, 51460, 51460, 400, 370, 437, 321, 393, 360, 307, 1322, 257, 4295, 294, 597, 1184, 3100, 307, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13460842614035004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.862463614088483e-05}, {"id": 894, "seek": 268096, "start": 2697.2400000000002, "end": 2699.44, "text": " don't know what the parts are for each of the digits.", "tokens": [50364, 300, 362, 668, 926, 337, 257, 938, 565, 13, 50444, 50444, 583, 2264, 11, 370, 510, 264, 1154, 321, 362, 50624, 50624, 307, 300, 321, 362, 257, 8310, 295, 27011, 412, 264, 4846, 13, 50768, 50768, 400, 321, 500, 380, 458, 577, 281, 9469, 341, 8310, 51098, 51098, 666, 2609, 27011, 11, 570, 321, 51178, 51178, 500, 380, 458, 437, 264, 3166, 366, 337, 1184, 295, 264, 27011, 13, 51288, 51288, 440, 1451, 510, 307, 733, 295, 5463, 666, 732, 3166, 13, 51460, 51460, 400, 370, 437, 321, 393, 360, 307, 1322, 257, 4295, 294, 597, 1184, 3100, 307, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13460842614035004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.862463614088483e-05}, {"id": 895, "seek": 268096, "start": 2699.44, "end": 2702.88, "text": " The four here is kind of broken into two parts.", "tokens": [50364, 300, 362, 668, 926, 337, 257, 938, 565, 13, 50444, 50444, 583, 2264, 11, 370, 510, 264, 1154, 321, 362, 50624, 50624, 307, 300, 321, 362, 257, 8310, 295, 27011, 412, 264, 4846, 13, 50768, 50768, 400, 321, 500, 380, 458, 577, 281, 9469, 341, 8310, 51098, 51098, 666, 2609, 27011, 11, 570, 321, 51178, 51178, 500, 380, 458, 437, 264, 3166, 366, 337, 1184, 295, 264, 27011, 13, 51288, 51288, 440, 1451, 510, 307, 733, 295, 5463, 666, 732, 3166, 13, 51460, 51460, 400, 370, 437, 321, 393, 360, 307, 1322, 257, 4295, 294, 597, 1184, 3100, 307, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13460842614035004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.862463614088483e-05}, {"id": 896, "seek": 268096, "start": 2702.88, "end": 2706.68, "text": " And so what we can do is build a graph in which each path is", "tokens": [50364, 300, 362, 668, 926, 337, 257, 938, 565, 13, 50444, 50444, 583, 2264, 11, 370, 510, 264, 1154, 321, 362, 50624, 50624, 307, 300, 321, 362, 257, 8310, 295, 27011, 412, 264, 4846, 13, 50768, 50768, 400, 321, 500, 380, 458, 577, 281, 9469, 341, 8310, 51098, 51098, 666, 2609, 27011, 11, 570, 321, 51178, 51178, 500, 380, 458, 437, 264, 3166, 366, 337, 1184, 295, 264, 27011, 13, 51288, 51288, 440, 1451, 510, 307, 733, 295, 5463, 666, 732, 3166, 13, 51460, 51460, 400, 370, 437, 321, 393, 360, 307, 1322, 257, 4295, 294, 597, 1184, 3100, 307, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13460842614035004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.862463614088483e-05}, {"id": 897, "seek": 270668, "start": 2706.68, "end": 2712.3999999999996, "text": " a possible way of breaking up this sequence of blobs", "tokens": [50364, 257, 1944, 636, 295, 7697, 493, 341, 8310, 295, 1749, 929, 50650, 50650, 666, 4342, 13, 50770, 50770, 407, 286, 393, 1594, 13, 50856, 50856, 286, 393, 652, 1184, 295, 264, 4994, 3755, 257, 4994, 2517, 13, 51030, 51030, 407, 300, 311, 264, 3100, 412, 264, 1192, 13, 51120, 51120, 286, 393, 1594, 264, 700, 732, 3755, 11, 1045, 11, 1451, 11, 51264, 51264, 293, 264, 1411, 644, 295, 264, 1451, 11, 293, 550, 51346, 51346, 362, 264, 1036, 732, 312, 4994, 13, 51442, 51442, 1610, 286, 393, 362, 264, 700, 280, 538, 2564, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16941608082164417, "compression_ratio": 1.7945945945945947, "no_speech_prob": 1.3418271009868477e-05}, {"id": 898, "seek": 270668, "start": 2712.3999999999996, "end": 2714.7999999999997, "text": " into characters.", "tokens": [50364, 257, 1944, 636, 295, 7697, 493, 341, 8310, 295, 1749, 929, 50650, 50650, 666, 4342, 13, 50770, 50770, 407, 286, 393, 1594, 13, 50856, 50856, 286, 393, 652, 1184, 295, 264, 4994, 3755, 257, 4994, 2517, 13, 51030, 51030, 407, 300, 311, 264, 3100, 412, 264, 1192, 13, 51120, 51120, 286, 393, 1594, 264, 700, 732, 3755, 11, 1045, 11, 1451, 11, 51264, 51264, 293, 264, 1411, 644, 295, 264, 1451, 11, 293, 550, 51346, 51346, 362, 264, 1036, 732, 312, 4994, 13, 51442, 51442, 1610, 286, 393, 362, 264, 700, 280, 538, 2564, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16941608082164417, "compression_ratio": 1.7945945945945947, "no_speech_prob": 1.3418271009868477e-05}, {"id": 899, "seek": 270668, "start": 2714.7999999999997, "end": 2716.52, "text": " So I can group.", "tokens": [50364, 257, 1944, 636, 295, 7697, 493, 341, 8310, 295, 1749, 929, 50650, 50650, 666, 4342, 13, 50770, 50770, 407, 286, 393, 1594, 13, 50856, 50856, 286, 393, 652, 1184, 295, 264, 4994, 3755, 257, 4994, 2517, 13, 51030, 51030, 407, 300, 311, 264, 3100, 412, 264, 1192, 13, 51120, 51120, 286, 393, 1594, 264, 700, 732, 3755, 11, 1045, 11, 1451, 11, 51264, 51264, 293, 264, 1411, 644, 295, 264, 1451, 11, 293, 550, 51346, 51346, 362, 264, 1036, 732, 312, 4994, 13, 51442, 51442, 1610, 286, 393, 362, 264, 700, 280, 538, 2564, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16941608082164417, "compression_ratio": 1.7945945945945947, "no_speech_prob": 1.3418271009868477e-05}, {"id": 900, "seek": 270668, "start": 2716.52, "end": 2720.0, "text": " I can make each of the separate pieces a separate character.", "tokens": [50364, 257, 1944, 636, 295, 7697, 493, 341, 8310, 295, 1749, 929, 50650, 50650, 666, 4342, 13, 50770, 50770, 407, 286, 393, 1594, 13, 50856, 50856, 286, 393, 652, 1184, 295, 264, 4994, 3755, 257, 4994, 2517, 13, 51030, 51030, 407, 300, 311, 264, 3100, 412, 264, 1192, 13, 51120, 51120, 286, 393, 1594, 264, 700, 732, 3755, 11, 1045, 11, 1451, 11, 51264, 51264, 293, 264, 1411, 644, 295, 264, 1451, 11, 293, 550, 51346, 51346, 362, 264, 1036, 732, 312, 4994, 13, 51442, 51442, 1610, 286, 393, 362, 264, 700, 280, 538, 2564, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16941608082164417, "compression_ratio": 1.7945945945945947, "no_speech_prob": 1.3418271009868477e-05}, {"id": 901, "seek": 270668, "start": 2720.0, "end": 2721.7999999999997, "text": " So that's the path at the top.", "tokens": [50364, 257, 1944, 636, 295, 7697, 493, 341, 8310, 295, 1749, 929, 50650, 50650, 666, 4342, 13, 50770, 50770, 407, 286, 393, 1594, 13, 50856, 50856, 286, 393, 652, 1184, 295, 264, 4994, 3755, 257, 4994, 2517, 13, 51030, 51030, 407, 300, 311, 264, 3100, 412, 264, 1192, 13, 51120, 51120, 286, 393, 1594, 264, 700, 732, 3755, 11, 1045, 11, 1451, 11, 51264, 51264, 293, 264, 1411, 644, 295, 264, 1451, 11, 293, 550, 51346, 51346, 362, 264, 1036, 732, 312, 4994, 13, 51442, 51442, 1610, 286, 393, 362, 264, 700, 280, 538, 2564, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16941608082164417, "compression_ratio": 1.7945945945945947, "no_speech_prob": 1.3418271009868477e-05}, {"id": 902, "seek": 270668, "start": 2721.7999999999997, "end": 2724.68, "text": " I can group the first two pieces, three, four,", "tokens": [50364, 257, 1944, 636, 295, 7697, 493, 341, 8310, 295, 1749, 929, 50650, 50650, 666, 4342, 13, 50770, 50770, 407, 286, 393, 1594, 13, 50856, 50856, 286, 393, 652, 1184, 295, 264, 4994, 3755, 257, 4994, 2517, 13, 51030, 51030, 407, 300, 311, 264, 3100, 412, 264, 1192, 13, 51120, 51120, 286, 393, 1594, 264, 700, 732, 3755, 11, 1045, 11, 1451, 11, 51264, 51264, 293, 264, 1411, 644, 295, 264, 1451, 11, 293, 550, 51346, 51346, 362, 264, 1036, 732, 312, 4994, 13, 51442, 51442, 1610, 286, 393, 362, 264, 700, 280, 538, 2564, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16941608082164417, "compression_ratio": 1.7945945945945947, "no_speech_prob": 1.3418271009868477e-05}, {"id": 903, "seek": 270668, "start": 2724.68, "end": 2726.3199999999997, "text": " and the left part of the four, and then", "tokens": [50364, 257, 1944, 636, 295, 7697, 493, 341, 8310, 295, 1749, 929, 50650, 50650, 666, 4342, 13, 50770, 50770, 407, 286, 393, 1594, 13, 50856, 50856, 286, 393, 652, 1184, 295, 264, 4994, 3755, 257, 4994, 2517, 13, 51030, 51030, 407, 300, 311, 264, 3100, 412, 264, 1192, 13, 51120, 51120, 286, 393, 1594, 264, 700, 732, 3755, 11, 1045, 11, 1451, 11, 51264, 51264, 293, 264, 1411, 644, 295, 264, 1451, 11, 293, 550, 51346, 51346, 362, 264, 1036, 732, 312, 4994, 13, 51442, 51442, 1610, 286, 393, 362, 264, 700, 280, 538, 2564, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16941608082164417, "compression_ratio": 1.7945945945945947, "no_speech_prob": 1.3418271009868477e-05}, {"id": 904, "seek": 270668, "start": 2726.3199999999997, "end": 2728.24, "text": " have the last two be separate.", "tokens": [50364, 257, 1944, 636, 295, 7697, 493, 341, 8310, 295, 1749, 929, 50650, 50650, 666, 4342, 13, 50770, 50770, 407, 286, 393, 1594, 13, 50856, 50856, 286, 393, 652, 1184, 295, 264, 4994, 3755, 257, 4994, 2517, 13, 51030, 51030, 407, 300, 311, 264, 3100, 412, 264, 1192, 13, 51120, 51120, 286, 393, 1594, 264, 700, 732, 3755, 11, 1045, 11, 1451, 11, 51264, 51264, 293, 264, 1411, 644, 295, 264, 1451, 11, 293, 550, 51346, 51346, 362, 264, 1036, 732, 312, 4994, 13, 51442, 51442, 1610, 286, 393, 362, 264, 700, 280, 538, 2564, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16941608082164417, "compression_ratio": 1.7945945945945947, "no_speech_prob": 1.3418271009868477e-05}, {"id": 905, "seek": 270668, "start": 2728.24, "end": 2735.7999999999997, "text": " Or I can have the first p by itself,", "tokens": [50364, 257, 1944, 636, 295, 7697, 493, 341, 8310, 295, 1749, 929, 50650, 50650, 666, 4342, 13, 50770, 50770, 407, 286, 393, 1594, 13, 50856, 50856, 286, 393, 652, 1184, 295, 264, 4994, 3755, 257, 4994, 2517, 13, 51030, 51030, 407, 300, 311, 264, 3100, 412, 264, 1192, 13, 51120, 51120, 286, 393, 1594, 264, 700, 732, 3755, 11, 1045, 11, 1451, 11, 51264, 51264, 293, 264, 1411, 644, 295, 264, 1451, 11, 293, 550, 51346, 51346, 362, 264, 1036, 732, 312, 4994, 13, 51442, 51442, 1610, 286, 393, 362, 264, 700, 280, 538, 2564, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.16941608082164417, "compression_ratio": 1.7945945945945947, "no_speech_prob": 1.3418271009868477e-05}, {"id": 906, "seek": 273580, "start": 2735.8, "end": 2738.4, "text": " the following two be regrouped, and then the last one", "tokens": [50364, 264, 3480, 732, 312, 319, 17377, 292, 11, 293, 550, 264, 1036, 472, 50494, 50494, 312, 538, 2564, 13, 50602, 50602, 407, 437, 362, 286, 1096, 510, 30, 50656, 50656, 286, 600, 1936, 848, 11, 2264, 11, 264, 636, 286, 50936, 50936, 360, 286, 630, 38253, 294, 264, 4319, 295, 9048, 17630, 51138, 51138, 390, 538, 1419, 2281, 2115, 300, 980, 385, 51382, 51382, 264, 2063, 295, 257, 1729, 6562, 295, 9102, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11009026812268542, "compression_ratio": 1.4550264550264551, "no_speech_prob": 8.851128541209619e-07}, {"id": 907, "seek": 273580, "start": 2738.4, "end": 2740.5600000000004, "text": " be by itself.", "tokens": [50364, 264, 3480, 732, 312, 319, 17377, 292, 11, 293, 550, 264, 1036, 472, 50494, 50494, 312, 538, 2564, 13, 50602, 50602, 407, 437, 362, 286, 1096, 510, 30, 50656, 50656, 286, 600, 1936, 848, 11, 2264, 11, 264, 636, 286, 50936, 50936, 360, 286, 630, 38253, 294, 264, 4319, 295, 9048, 17630, 51138, 51138, 390, 538, 1419, 2281, 2115, 300, 980, 385, 51382, 51382, 264, 2063, 295, 257, 1729, 6562, 295, 9102, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11009026812268542, "compression_ratio": 1.4550264550264551, "no_speech_prob": 8.851128541209619e-07}, {"id": 908, "seek": 273580, "start": 2740.5600000000004, "end": 2741.6400000000003, "text": " So what have I done here?", "tokens": [50364, 264, 3480, 732, 312, 319, 17377, 292, 11, 293, 550, 264, 1036, 472, 50494, 50494, 312, 538, 2564, 13, 50602, 50602, 407, 437, 362, 286, 1096, 510, 30, 50656, 50656, 286, 600, 1936, 848, 11, 2264, 11, 264, 636, 286, 50936, 50936, 360, 286, 630, 38253, 294, 264, 4319, 295, 9048, 17630, 51138, 51138, 390, 538, 1419, 2281, 2115, 300, 980, 385, 51382, 51382, 264, 2063, 295, 257, 1729, 6562, 295, 9102, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11009026812268542, "compression_ratio": 1.4550264550264551, "no_speech_prob": 8.851128541209619e-07}, {"id": 909, "seek": 273580, "start": 2741.6400000000003, "end": 2747.2400000000002, "text": " I've basically said, OK, the way I", "tokens": [50364, 264, 3480, 732, 312, 319, 17377, 292, 11, 293, 550, 264, 1036, 472, 50494, 50494, 312, 538, 2564, 13, 50602, 50602, 407, 437, 362, 286, 1096, 510, 30, 50656, 50656, 286, 600, 1936, 848, 11, 2264, 11, 264, 636, 286, 50936, 50936, 360, 286, 630, 38253, 294, 264, 4319, 295, 9048, 17630, 51138, 51138, 390, 538, 1419, 2281, 2115, 300, 980, 385, 51382, 51382, 264, 2063, 295, 257, 1729, 6562, 295, 9102, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11009026812268542, "compression_ratio": 1.4550264550264551, "no_speech_prob": 8.851128541209619e-07}, {"id": 910, "seek": 273580, "start": 2747.2400000000002, "end": 2751.28, "text": " do I did inference in the context of circuit prediction", "tokens": [50364, 264, 3480, 732, 312, 319, 17377, 292, 11, 293, 550, 264, 1036, 472, 50494, 50494, 312, 538, 2564, 13, 50602, 50602, 407, 437, 362, 286, 1096, 510, 30, 50656, 50656, 286, 600, 1936, 848, 11, 2264, 11, 264, 636, 286, 50936, 50936, 360, 286, 630, 38253, 294, 264, 4319, 295, 9048, 17630, 51138, 51138, 390, 538, 1419, 2281, 2115, 300, 980, 385, 51382, 51382, 264, 2063, 295, 257, 1729, 6562, 295, 9102, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11009026812268542, "compression_ratio": 1.4550264550264551, "no_speech_prob": 8.851128541209619e-07}, {"id": 911, "seek": 273580, "start": 2751.28, "end": 2756.1600000000003, "text": " was by having energy terms that tell me", "tokens": [50364, 264, 3480, 732, 312, 319, 17377, 292, 11, 293, 550, 264, 1036, 472, 50494, 50494, 312, 538, 2564, 13, 50602, 50602, 407, 437, 362, 286, 1096, 510, 30, 50656, 50656, 286, 600, 1936, 848, 11, 2264, 11, 264, 636, 286, 50936, 50936, 360, 286, 630, 38253, 294, 264, 4319, 295, 9048, 17630, 51138, 51138, 390, 538, 1419, 2281, 2115, 300, 980, 385, 51382, 51382, 264, 2063, 295, 257, 1729, 6562, 295, 9102, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11009026812268542, "compression_ratio": 1.4550264550264551, "no_speech_prob": 8.851128541209619e-07}, {"id": 912, "seek": 273580, "start": 2756.1600000000003, "end": 2763.6000000000004, "text": " the cost of a particular combination of variables.", "tokens": [50364, 264, 3480, 732, 312, 319, 17377, 292, 11, 293, 550, 264, 1036, 472, 50494, 50494, 312, 538, 2564, 13, 50602, 50602, 407, 437, 362, 286, 1096, 510, 30, 50656, 50656, 286, 600, 1936, 848, 11, 2264, 11, 264, 636, 286, 50936, 50936, 360, 286, 630, 38253, 294, 264, 4319, 295, 9048, 17630, 51138, 51138, 390, 538, 1419, 2281, 2115, 300, 980, 385, 51382, 51382, 264, 2063, 295, 257, 1729, 6562, 295, 9102, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11009026812268542, "compression_ratio": 1.4550264550264551, "no_speech_prob": 8.851128541209619e-07}, {"id": 913, "seek": 276360, "start": 2763.6, "end": 2766.3199999999997, "text": " So this graph here represents, basically,", "tokens": [50364, 407, 341, 4295, 510, 8855, 11, 1936, 11, 50500, 50500, 307, 364, 13691, 10290, 295, 300, 2281, 2316, 11, 50756, 50756, 382, 938, 382, 286, 829, 322, 729, 10346, 82, 510, 50864, 50864, 264, 25737, 300, 366, 40610, 538, 729, 16679, 337, 1184, 2158, 13, 51120, 51120, 583, 437, 498, 286, 445, 20459, 341, 4295, 30, 51288, 51288, 407, 437, 498, 264, 1785, 300, 286, 20459, 294, 264, 18161, 2533, 51662, 51662, 307, 406, 257, 1729, 15187, 295, 7006, 1214, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11802030745006743, "compression_ratio": 1.638095238095238, "no_speech_prob": 1.7880344103105017e-06}, {"id": 914, "seek": 276360, "start": 2766.3199999999997, "end": 2771.44, "text": " is an explicit representation of that energy model,", "tokens": [50364, 407, 341, 4295, 510, 8855, 11, 1936, 11, 50500, 50500, 307, 364, 13691, 10290, 295, 300, 2281, 2316, 11, 50756, 50756, 382, 938, 382, 286, 829, 322, 729, 10346, 82, 510, 50864, 50864, 264, 25737, 300, 366, 40610, 538, 729, 16679, 337, 1184, 2158, 13, 51120, 51120, 583, 437, 498, 286, 445, 20459, 341, 4295, 30, 51288, 51288, 407, 437, 498, 264, 1785, 300, 286, 20459, 294, 264, 18161, 2533, 51662, 51662, 307, 406, 257, 1729, 15187, 295, 7006, 1214, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11802030745006743, "compression_ratio": 1.638095238095238, "no_speech_prob": 1.7880344103105017e-06}, {"id": 915, "seek": 276360, "start": 2771.44, "end": 2773.6, "text": " as long as I put on those arcs here", "tokens": [50364, 407, 341, 4295, 510, 8855, 11, 1936, 11, 50500, 50500, 307, 364, 13691, 10290, 295, 300, 2281, 2316, 11, 50756, 50756, 382, 938, 382, 286, 829, 322, 729, 10346, 82, 510, 50864, 50864, 264, 25737, 300, 366, 40610, 538, 729, 16679, 337, 1184, 2158, 13, 51120, 51120, 583, 437, 498, 286, 445, 20459, 341, 4295, 30, 51288, 51288, 407, 437, 498, 264, 1785, 300, 286, 20459, 294, 264, 18161, 2533, 51662, 51662, 307, 406, 257, 1729, 15187, 295, 7006, 1214, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11802030745006743, "compression_ratio": 1.638095238095238, "no_speech_prob": 1.7880344103105017e-06}, {"id": 916, "seek": 276360, "start": 2773.6, "end": 2778.72, "text": " the energies that are computed by those modules for each value.", "tokens": [50364, 407, 341, 4295, 510, 8855, 11, 1936, 11, 50500, 50500, 307, 364, 13691, 10290, 295, 300, 2281, 2316, 11, 50756, 50756, 382, 938, 382, 286, 829, 322, 729, 10346, 82, 510, 50864, 50864, 264, 25737, 300, 366, 40610, 538, 729, 16679, 337, 1184, 2158, 13, 51120, 51120, 583, 437, 498, 286, 445, 20459, 341, 4295, 30, 51288, 51288, 407, 437, 498, 264, 1785, 300, 286, 20459, 294, 264, 18161, 2533, 51662, 51662, 307, 406, 257, 1729, 15187, 295, 7006, 1214, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11802030745006743, "compression_ratio": 1.638095238095238, "no_speech_prob": 1.7880344103105017e-06}, {"id": 917, "seek": 276360, "start": 2778.72, "end": 2782.08, "text": " But what if I just manipulate this graph?", "tokens": [50364, 407, 341, 4295, 510, 8855, 11, 1936, 11, 50500, 50500, 307, 364, 13691, 10290, 295, 300, 2281, 2316, 11, 50756, 50756, 382, 938, 382, 286, 829, 322, 729, 10346, 82, 510, 50864, 50864, 264, 25737, 300, 366, 40610, 538, 729, 16679, 337, 1184, 2158, 13, 51120, 51120, 583, 437, 498, 286, 445, 20459, 341, 4295, 30, 51288, 51288, 407, 437, 498, 264, 1785, 300, 286, 20459, 294, 264, 18161, 2533, 51662, 51662, 307, 406, 257, 1729, 15187, 295, 7006, 1214, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11802030745006743, "compression_ratio": 1.638095238095238, "no_speech_prob": 1.7880344103105017e-06}, {"id": 918, "seek": 276360, "start": 2782.08, "end": 2789.56, "text": " So what if the state that I manipulate in the neural net", "tokens": [50364, 407, 341, 4295, 510, 8855, 11, 1936, 11, 50500, 50500, 307, 364, 13691, 10290, 295, 300, 2281, 2316, 11, 50756, 50756, 382, 938, 382, 286, 829, 322, 729, 10346, 82, 510, 50864, 50864, 264, 25737, 300, 366, 40610, 538, 729, 16679, 337, 1184, 2158, 13, 51120, 51120, 583, 437, 498, 286, 445, 20459, 341, 4295, 30, 51288, 51288, 407, 437, 498, 264, 1785, 300, 286, 20459, 294, 264, 18161, 2533, 51662, 51662, 307, 406, 257, 1729, 15187, 295, 7006, 1214, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11802030745006743, "compression_ratio": 1.638095238095238, "no_speech_prob": 1.7880344103105017e-06}, {"id": 919, "seek": 276360, "start": 2789.56, "end": 2792.2, "text": " is not a particular assignment of variable together", "tokens": [50364, 407, 341, 4295, 510, 8855, 11, 1936, 11, 50500, 50500, 307, 364, 13691, 10290, 295, 300, 2281, 2316, 11, 50756, 50756, 382, 938, 382, 286, 829, 322, 729, 10346, 82, 510, 50864, 50864, 264, 25737, 300, 366, 40610, 538, 729, 16679, 337, 1184, 2158, 13, 51120, 51120, 583, 437, 498, 286, 445, 20459, 341, 4295, 30, 51288, 51288, 407, 437, 498, 264, 1785, 300, 286, 20459, 294, 264, 18161, 2533, 51662, 51662, 307, 406, 257, 1729, 15187, 295, 7006, 1214, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11802030745006743, "compression_ratio": 1.638095238095238, "no_speech_prob": 1.7880344103105017e-06}, {"id": 920, "seek": 279220, "start": 2792.2, "end": 2794.4399999999996, "text": " with something to compute energies,", "tokens": [50364, 365, 746, 281, 14722, 25737, 11, 50476, 50476, 457, 309, 311, 3838, 257, 4295, 411, 341, 30, 50624, 50624, 407, 257, 4295, 411, 341, 11, 1936, 11, 291, 50708, 50708, 393, 519, 295, 382, 13460, 257, 1329, 295, 25737, 50874, 50874, 337, 633, 1944, 31493, 50980, 50980, 295, 264, 9102, 295, 1179, 13, 51144, 51144, 467, 311, 257, 14679, 636, 295, 13460, 51282, 51282, 257, 1329, 295, 25737, 337, 439, 31493, 51368, 51368, 295, 264, 22978, 295, 16944, 13, 51460, 51606], "temperature": 0.0, "avg_logprob": -0.10764404664556664, "compression_ratio": 1.7868852459016393, "no_speech_prob": 5.337615220923908e-06}, {"id": 921, "seek": 279220, "start": 2794.4399999999996, "end": 2797.3999999999996, "text": " but it's directly a graph like this?", "tokens": [50364, 365, 746, 281, 14722, 25737, 11, 50476, 50476, 457, 309, 311, 3838, 257, 4295, 411, 341, 30, 50624, 50624, 407, 257, 4295, 411, 341, 11, 1936, 11, 291, 50708, 50708, 393, 519, 295, 382, 13460, 257, 1329, 295, 25737, 50874, 50874, 337, 633, 1944, 31493, 50980, 50980, 295, 264, 9102, 295, 1179, 13, 51144, 51144, 467, 311, 257, 14679, 636, 295, 13460, 51282, 51282, 257, 1329, 295, 25737, 337, 439, 31493, 51368, 51368, 295, 264, 22978, 295, 16944, 13, 51460, 51606], "temperature": 0.0, "avg_logprob": -0.10764404664556664, "compression_ratio": 1.7868852459016393, "no_speech_prob": 5.337615220923908e-06}, {"id": 922, "seek": 279220, "start": 2797.3999999999996, "end": 2799.08, "text": " So a graph like this, basically, you", "tokens": [50364, 365, 746, 281, 14722, 25737, 11, 50476, 50476, 457, 309, 311, 3838, 257, 4295, 411, 341, 30, 50624, 50624, 407, 257, 4295, 411, 341, 11, 1936, 11, 291, 50708, 50708, 393, 519, 295, 382, 13460, 257, 1329, 295, 25737, 50874, 50874, 337, 633, 1944, 31493, 50980, 50980, 295, 264, 9102, 295, 1179, 13, 51144, 51144, 467, 311, 257, 14679, 636, 295, 13460, 51282, 51282, 257, 1329, 295, 25737, 337, 439, 31493, 51368, 51368, 295, 264, 22978, 295, 16944, 13, 51460, 51606], "temperature": 0.0, "avg_logprob": -0.10764404664556664, "compression_ratio": 1.7868852459016393, "no_speech_prob": 5.337615220923908e-06}, {"id": 923, "seek": 279220, "start": 2799.08, "end": 2802.3999999999996, "text": " can think of as representing a list of energies", "tokens": [50364, 365, 746, 281, 14722, 25737, 11, 50476, 50476, 457, 309, 311, 3838, 257, 4295, 411, 341, 30, 50624, 50624, 407, 257, 4295, 411, 341, 11, 1936, 11, 291, 50708, 50708, 393, 519, 295, 382, 13460, 257, 1329, 295, 25737, 50874, 50874, 337, 633, 1944, 31493, 50980, 50980, 295, 264, 9102, 295, 1179, 13, 51144, 51144, 467, 311, 257, 14679, 636, 295, 13460, 51282, 51282, 257, 1329, 295, 25737, 337, 439, 31493, 51368, 51368, 295, 264, 22978, 295, 16944, 13, 51460, 51606], "temperature": 0.0, "avg_logprob": -0.10764404664556664, "compression_ratio": 1.7868852459016393, "no_speech_prob": 5.337615220923908e-06}, {"id": 924, "seek": 279220, "start": 2802.3999999999996, "end": 2804.52, "text": " for every possible configurations", "tokens": [50364, 365, 746, 281, 14722, 25737, 11, 50476, 50476, 457, 309, 311, 3838, 257, 4295, 411, 341, 30, 50624, 50624, 407, 257, 4295, 411, 341, 11, 1936, 11, 291, 50708, 50708, 393, 519, 295, 382, 13460, 257, 1329, 295, 25737, 50874, 50874, 337, 633, 1944, 31493, 50980, 50980, 295, 264, 9102, 295, 1179, 13, 51144, 51144, 467, 311, 257, 14679, 636, 295, 13460, 51282, 51282, 257, 1329, 295, 25737, 337, 439, 31493, 51368, 51368, 295, 264, 22978, 295, 16944, 13, 51460, 51606], "temperature": 0.0, "avg_logprob": -0.10764404664556664, "compression_ratio": 1.7868852459016393, "no_speech_prob": 5.337615220923908e-06}, {"id": 925, "seek": 279220, "start": 2804.52, "end": 2807.7999999999997, "text": " of the variables of interest.", "tokens": [50364, 365, 746, 281, 14722, 25737, 11, 50476, 50476, 457, 309, 311, 3838, 257, 4295, 411, 341, 30, 50624, 50624, 407, 257, 4295, 411, 341, 11, 1936, 11, 291, 50708, 50708, 393, 519, 295, 382, 13460, 257, 1329, 295, 25737, 50874, 50874, 337, 633, 1944, 31493, 50980, 50980, 295, 264, 9102, 295, 1179, 13, 51144, 51144, 467, 311, 257, 14679, 636, 295, 13460, 51282, 51282, 257, 1329, 295, 25737, 337, 439, 31493, 51368, 51368, 295, 264, 22978, 295, 16944, 13, 51460, 51606], "temperature": 0.0, "avg_logprob": -0.10764404664556664, "compression_ratio": 1.7868852459016393, "no_speech_prob": 5.337615220923908e-06}, {"id": 926, "seek": 279220, "start": 2807.7999999999997, "end": 2810.56, "text": " It's a compact way of representing", "tokens": [50364, 365, 746, 281, 14722, 25737, 11, 50476, 50476, 457, 309, 311, 3838, 257, 4295, 411, 341, 30, 50624, 50624, 407, 257, 4295, 411, 341, 11, 1936, 11, 291, 50708, 50708, 393, 519, 295, 382, 13460, 257, 1329, 295, 25737, 50874, 50874, 337, 633, 1944, 31493, 50980, 50980, 295, 264, 9102, 295, 1179, 13, 51144, 51144, 467, 311, 257, 14679, 636, 295, 13460, 51282, 51282, 257, 1329, 295, 25737, 337, 439, 31493, 51368, 51368, 295, 264, 22978, 295, 16944, 13, 51460, 51606], "temperature": 0.0, "avg_logprob": -0.10764404664556664, "compression_ratio": 1.7868852459016393, "no_speech_prob": 5.337615220923908e-06}, {"id": 927, "seek": 279220, "start": 2810.56, "end": 2812.2799999999997, "text": " a list of energies for all configurations", "tokens": [50364, 365, 746, 281, 14722, 25737, 11, 50476, 50476, 457, 309, 311, 3838, 257, 4295, 411, 341, 30, 50624, 50624, 407, 257, 4295, 411, 341, 11, 1936, 11, 291, 50708, 50708, 393, 519, 295, 382, 13460, 257, 1329, 295, 25737, 50874, 50874, 337, 633, 1944, 31493, 50980, 50980, 295, 264, 9102, 295, 1179, 13, 51144, 51144, 467, 311, 257, 14679, 636, 295, 13460, 51282, 51282, 257, 1329, 295, 25737, 337, 439, 31493, 51368, 51368, 295, 264, 22978, 295, 16944, 13, 51460, 51606], "temperature": 0.0, "avg_logprob": -0.10764404664556664, "compression_ratio": 1.7868852459016393, "no_speech_prob": 5.337615220923908e-06}, {"id": 928, "seek": 279220, "start": 2812.2799999999997, "end": 2814.12, "text": " of the sequences of symbols.", "tokens": [50364, 365, 746, 281, 14722, 25737, 11, 50476, 50476, 457, 309, 311, 3838, 257, 4295, 411, 341, 30, 50624, 50624, 407, 257, 4295, 411, 341, 11, 1936, 11, 291, 50708, 50708, 393, 519, 295, 382, 13460, 257, 1329, 295, 25737, 50874, 50874, 337, 633, 1944, 31493, 50980, 50980, 295, 264, 9102, 295, 1179, 13, 51144, 51144, 467, 311, 257, 14679, 636, 295, 13460, 51282, 51282, 257, 1329, 295, 25737, 337, 439, 31493, 51368, 51368, 295, 264, 22978, 295, 16944, 13, 51460, 51606], "temperature": 0.0, "avg_logprob": -0.10764404664556664, "compression_ratio": 1.7868852459016393, "no_speech_prob": 5.337615220923908e-06}, {"id": 929, "seek": 281412, "start": 2814.12, "end": 2820.7999999999997, "text": " So what if I build a neural net so that the internal states", "tokens": [50364, 407, 437, 498, 286, 1322, 257, 18161, 2533, 370, 300, 264, 6920, 4368, 50698, 50698, 295, 300, 18161, 2533, 366, 1936, 729, 24877, 30, 50946, 50946, 400, 264, 24877, 366, 445, 11, 797, 11, 286, 51044, 51044, 7149, 11, 257, 14679, 636, 295, 13460, 51132, 51132, 257, 1329, 295, 25737, 337, 633, 1944, 31493, 51288, 51288, 295, 264, 7006, 295, 1179, 13, 51378, 51378, 6693, 544, 13, 51418, 51638], "temperature": 0.0, "avg_logprob": -0.31214104236011775, "compression_ratio": 1.5138121546961325, "no_speech_prob": 6.047377155482536e-06}, {"id": 930, "seek": 281412, "start": 2820.7999999999997, "end": 2825.7599999999998, "text": " of that neural net are basically those graphs?", "tokens": [50364, 407, 437, 498, 286, 1322, 257, 18161, 2533, 370, 300, 264, 6920, 4368, 50698, 50698, 295, 300, 18161, 2533, 366, 1936, 729, 24877, 30, 50946, 50946, 400, 264, 24877, 366, 445, 11, 797, 11, 286, 51044, 51044, 7149, 11, 257, 14679, 636, 295, 13460, 51132, 51132, 257, 1329, 295, 25737, 337, 633, 1944, 31493, 51288, 51288, 295, 264, 7006, 295, 1179, 13, 51378, 51378, 6693, 544, 13, 51418, 51638], "temperature": 0.0, "avg_logprob": -0.31214104236011775, "compression_ratio": 1.5138121546961325, "no_speech_prob": 6.047377155482536e-06}, {"id": 931, "seek": 281412, "start": 2825.7599999999998, "end": 2827.72, "text": " And the graphs are just, again, I", "tokens": [50364, 407, 437, 498, 286, 1322, 257, 18161, 2533, 370, 300, 264, 6920, 4368, 50698, 50698, 295, 300, 18161, 2533, 366, 1936, 729, 24877, 30, 50946, 50946, 400, 264, 24877, 366, 445, 11, 797, 11, 286, 51044, 51044, 7149, 11, 257, 14679, 636, 295, 13460, 51132, 51132, 257, 1329, 295, 25737, 337, 633, 1944, 31493, 51288, 51288, 295, 264, 7006, 295, 1179, 13, 51378, 51378, 6693, 544, 13, 51418, 51638], "temperature": 0.0, "avg_logprob": -0.31214104236011775, "compression_ratio": 1.5138121546961325, "no_speech_prob": 6.047377155482536e-06}, {"id": 932, "seek": 281412, "start": 2827.72, "end": 2829.48, "text": " repeat, a compact way of representing", "tokens": [50364, 407, 437, 498, 286, 1322, 257, 18161, 2533, 370, 300, 264, 6920, 4368, 50698, 50698, 295, 300, 18161, 2533, 366, 1936, 729, 24877, 30, 50946, 50946, 400, 264, 24877, 366, 445, 11, 797, 11, 286, 51044, 51044, 7149, 11, 257, 14679, 636, 295, 13460, 51132, 51132, 257, 1329, 295, 25737, 337, 633, 1944, 31493, 51288, 51288, 295, 264, 7006, 295, 1179, 13, 51378, 51378, 6693, 544, 13, 51418, 51638], "temperature": 0.0, "avg_logprob": -0.31214104236011775, "compression_ratio": 1.5138121546961325, "no_speech_prob": 6.047377155482536e-06}, {"id": 933, "seek": 281412, "start": 2829.48, "end": 2832.6, "text": " a list of energies for every possible configurations", "tokens": [50364, 407, 437, 498, 286, 1322, 257, 18161, 2533, 370, 300, 264, 6920, 4368, 50698, 50698, 295, 300, 18161, 2533, 366, 1936, 729, 24877, 30, 50946, 50946, 400, 264, 24877, 366, 445, 11, 797, 11, 286, 51044, 51044, 7149, 11, 257, 14679, 636, 295, 13460, 51132, 51132, 257, 1329, 295, 25737, 337, 633, 1944, 31493, 51288, 51288, 295, 264, 7006, 295, 1179, 13, 51378, 51378, 6693, 544, 13, 51418, 51638], "temperature": 0.0, "avg_logprob": -0.31214104236011775, "compression_ratio": 1.5138121546961325, "no_speech_prob": 6.047377155482536e-06}, {"id": 934, "seek": 281412, "start": 2832.6, "end": 2834.4, "text": " of the variable of interest.", "tokens": [50364, 407, 437, 498, 286, 1322, 257, 18161, 2533, 370, 300, 264, 6920, 4368, 50698, 50698, 295, 300, 18161, 2533, 366, 1936, 729, 24877, 30, 50946, 50946, 400, 264, 24877, 366, 445, 11, 797, 11, 286, 51044, 51044, 7149, 11, 257, 14679, 636, 295, 13460, 51132, 51132, 257, 1329, 295, 25737, 337, 633, 1944, 31493, 51288, 51288, 295, 264, 7006, 295, 1179, 13, 51378, 51378, 6693, 544, 13, 51418, 51638], "temperature": 0.0, "avg_logprob": -0.31214104236011775, "compression_ratio": 1.5138121546961325, "no_speech_prob": 6.047377155482536e-06}, {"id": 935, "seek": 281412, "start": 2834.4, "end": 2835.2, "text": " Nothing more.", "tokens": [50364, 407, 437, 498, 286, 1322, 257, 18161, 2533, 370, 300, 264, 6920, 4368, 50698, 50698, 295, 300, 18161, 2533, 366, 1936, 729, 24877, 30, 50946, 50946, 400, 264, 24877, 366, 445, 11, 797, 11, 286, 51044, 51044, 7149, 11, 257, 14679, 636, 295, 13460, 51132, 51132, 257, 1329, 295, 25737, 337, 633, 1944, 31493, 51288, 51288, 295, 264, 7006, 295, 1179, 13, 51378, 51378, 6693, 544, 13, 51418, 51638], "temperature": 0.0, "avg_logprob": -0.31214104236011775, "compression_ratio": 1.5138121546961325, "no_speech_prob": 6.047377155482536e-06}, {"id": 936, "seek": 283520, "start": 2835.2, "end": 2839.52, "text": " So but I can use this for other things that energies.", "tokens": [50364, 407, 457, 286, 393, 764, 341, 337, 661, 721, 300, 25737, 13, 50580, 50580, 407, 510, 11, 257, 3100, 294, 257, 4295, 23249, 50712, 50712, 281, 257, 1729, 636, 295, 7697, 493, 341, 1749, 929, 295, 11276, 50950, 50950, 666, 4342, 13, 51034, 51034, 400, 1184, 3100, 307, 257, 1729, 636, 51120, 51120, 295, 40149, 729, 1749, 929, 666, 4342, 13, 51308, 51308, 286, 393, 1190, 729, 5267, 13, 51400, 51400, 407, 586, 341, 4295, 307, 25339, 770, 294, 264, 18161, 2533, 13, 51538, 51538, 407, 286, 393, 1190, 341, 4295, 13, 51612, 51612, 400, 286, 393, 536, 300, 264, 4295, 307, 25339, 770, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.570877852263274, "compression_ratio": 1.899497487437186, "no_speech_prob": 5.507032255991362e-06}, {"id": 937, "seek": 283520, "start": 2839.52, "end": 2842.16, "text": " So here, a path in a graph corresponds", "tokens": [50364, 407, 457, 286, 393, 764, 341, 337, 661, 721, 300, 25737, 13, 50580, 50580, 407, 510, 11, 257, 3100, 294, 257, 4295, 23249, 50712, 50712, 281, 257, 1729, 636, 295, 7697, 493, 341, 1749, 929, 295, 11276, 50950, 50950, 666, 4342, 13, 51034, 51034, 400, 1184, 3100, 307, 257, 1729, 636, 51120, 51120, 295, 40149, 729, 1749, 929, 666, 4342, 13, 51308, 51308, 286, 393, 1190, 729, 5267, 13, 51400, 51400, 407, 586, 341, 4295, 307, 25339, 770, 294, 264, 18161, 2533, 13, 51538, 51538, 407, 286, 393, 1190, 341, 4295, 13, 51612, 51612, 400, 286, 393, 536, 300, 264, 4295, 307, 25339, 770, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.570877852263274, "compression_ratio": 1.899497487437186, "no_speech_prob": 5.507032255991362e-06}, {"id": 938, "seek": 283520, "start": 2842.16, "end": 2846.9199999999996, "text": " to a particular way of breaking up this blobs of ink", "tokens": [50364, 407, 457, 286, 393, 764, 341, 337, 661, 721, 300, 25737, 13, 50580, 50580, 407, 510, 11, 257, 3100, 294, 257, 4295, 23249, 50712, 50712, 281, 257, 1729, 636, 295, 7697, 493, 341, 1749, 929, 295, 11276, 50950, 50950, 666, 4342, 13, 51034, 51034, 400, 1184, 3100, 307, 257, 1729, 636, 51120, 51120, 295, 40149, 729, 1749, 929, 666, 4342, 13, 51308, 51308, 286, 393, 1190, 729, 5267, 13, 51400, 51400, 407, 586, 341, 4295, 307, 25339, 770, 294, 264, 18161, 2533, 13, 51538, 51538, 407, 286, 393, 1190, 341, 4295, 13, 51612, 51612, 400, 286, 393, 536, 300, 264, 4295, 307, 25339, 770, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.570877852263274, "compression_ratio": 1.899497487437186, "no_speech_prob": 5.507032255991362e-06}, {"id": 939, "seek": 283520, "start": 2846.9199999999996, "end": 2848.6, "text": " into characters.", "tokens": [50364, 407, 457, 286, 393, 764, 341, 337, 661, 721, 300, 25737, 13, 50580, 50580, 407, 510, 11, 257, 3100, 294, 257, 4295, 23249, 50712, 50712, 281, 257, 1729, 636, 295, 7697, 493, 341, 1749, 929, 295, 11276, 50950, 50950, 666, 4342, 13, 51034, 51034, 400, 1184, 3100, 307, 257, 1729, 636, 51120, 51120, 295, 40149, 729, 1749, 929, 666, 4342, 13, 51308, 51308, 286, 393, 1190, 729, 5267, 13, 51400, 51400, 407, 586, 341, 4295, 307, 25339, 770, 294, 264, 18161, 2533, 13, 51538, 51538, 407, 286, 393, 1190, 341, 4295, 13, 51612, 51612, 400, 286, 393, 536, 300, 264, 4295, 307, 25339, 770, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.570877852263274, "compression_ratio": 1.899497487437186, "no_speech_prob": 5.507032255991362e-06}, {"id": 940, "seek": 283520, "start": 2848.6, "end": 2850.3199999999997, "text": " And each path is a particular way", "tokens": [50364, 407, 457, 286, 393, 764, 341, 337, 661, 721, 300, 25737, 13, 50580, 50580, 407, 510, 11, 257, 3100, 294, 257, 4295, 23249, 50712, 50712, 281, 257, 1729, 636, 295, 7697, 493, 341, 1749, 929, 295, 11276, 50950, 50950, 666, 4342, 13, 51034, 51034, 400, 1184, 3100, 307, 257, 1729, 636, 51120, 51120, 295, 40149, 729, 1749, 929, 666, 4342, 13, 51308, 51308, 286, 393, 1190, 729, 5267, 13, 51400, 51400, 407, 586, 341, 4295, 307, 25339, 770, 294, 264, 18161, 2533, 13, 51538, 51538, 407, 286, 393, 1190, 341, 4295, 13, 51612, 51612, 400, 286, 393, 536, 300, 264, 4295, 307, 25339, 770, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.570877852263274, "compression_ratio": 1.899497487437186, "no_speech_prob": 5.507032255991362e-06}, {"id": 941, "seek": 283520, "start": 2850.3199999999997, "end": 2854.08, "text": " of grouping those blobs into characters.", "tokens": [50364, 407, 457, 286, 393, 764, 341, 337, 661, 721, 300, 25737, 13, 50580, 50580, 407, 510, 11, 257, 3100, 294, 257, 4295, 23249, 50712, 50712, 281, 257, 1729, 636, 295, 7697, 493, 341, 1749, 929, 295, 11276, 50950, 50950, 666, 4342, 13, 51034, 51034, 400, 1184, 3100, 307, 257, 1729, 636, 51120, 51120, 295, 40149, 729, 1749, 929, 666, 4342, 13, 51308, 51308, 286, 393, 1190, 729, 5267, 13, 51400, 51400, 407, 586, 341, 4295, 307, 25339, 770, 294, 264, 18161, 2533, 13, 51538, 51538, 407, 286, 393, 1190, 341, 4295, 13, 51612, 51612, 400, 286, 393, 536, 300, 264, 4295, 307, 25339, 770, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.570877852263274, "compression_ratio": 1.899497487437186, "no_speech_prob": 5.507032255991362e-06}, {"id": 942, "seek": 283520, "start": 2854.08, "end": 2855.9199999999996, "text": " I can run those images.", "tokens": [50364, 407, 457, 286, 393, 764, 341, 337, 661, 721, 300, 25737, 13, 50580, 50580, 407, 510, 11, 257, 3100, 294, 257, 4295, 23249, 50712, 50712, 281, 257, 1729, 636, 295, 7697, 493, 341, 1749, 929, 295, 11276, 50950, 50950, 666, 4342, 13, 51034, 51034, 400, 1184, 3100, 307, 257, 1729, 636, 51120, 51120, 295, 40149, 729, 1749, 929, 666, 4342, 13, 51308, 51308, 286, 393, 1190, 729, 5267, 13, 51400, 51400, 407, 586, 341, 4295, 307, 25339, 770, 294, 264, 18161, 2533, 13, 51538, 51538, 407, 286, 393, 1190, 341, 4295, 13, 51612, 51612, 400, 286, 393, 536, 300, 264, 4295, 307, 25339, 770, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.570877852263274, "compression_ratio": 1.899497487437186, "no_speech_prob": 5.507032255991362e-06}, {"id": 943, "seek": 283520, "start": 2855.9199999999996, "end": 2858.68, "text": " So now this graph is annotated in the neural net.", "tokens": [50364, 407, 457, 286, 393, 764, 341, 337, 661, 721, 300, 25737, 13, 50580, 50580, 407, 510, 11, 257, 3100, 294, 257, 4295, 23249, 50712, 50712, 281, 257, 1729, 636, 295, 7697, 493, 341, 1749, 929, 295, 11276, 50950, 50950, 666, 4342, 13, 51034, 51034, 400, 1184, 3100, 307, 257, 1729, 636, 51120, 51120, 295, 40149, 729, 1749, 929, 666, 4342, 13, 51308, 51308, 286, 393, 1190, 729, 5267, 13, 51400, 51400, 407, 586, 341, 4295, 307, 25339, 770, 294, 264, 18161, 2533, 13, 51538, 51538, 407, 286, 393, 1190, 341, 4295, 13, 51612, 51612, 400, 286, 393, 536, 300, 264, 4295, 307, 25339, 770, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.570877852263274, "compression_ratio": 1.899497487437186, "no_speech_prob": 5.507032255991362e-06}, {"id": 944, "seek": 283520, "start": 2858.68, "end": 2860.16, "text": " So I can run this graph.", "tokens": [50364, 407, 457, 286, 393, 764, 341, 337, 661, 721, 300, 25737, 13, 50580, 50580, 407, 510, 11, 257, 3100, 294, 257, 4295, 23249, 50712, 50712, 281, 257, 1729, 636, 295, 7697, 493, 341, 1749, 929, 295, 11276, 50950, 50950, 666, 4342, 13, 51034, 51034, 400, 1184, 3100, 307, 257, 1729, 636, 51120, 51120, 295, 40149, 729, 1749, 929, 666, 4342, 13, 51308, 51308, 286, 393, 1190, 729, 5267, 13, 51400, 51400, 407, 586, 341, 4295, 307, 25339, 770, 294, 264, 18161, 2533, 13, 51538, 51538, 407, 286, 393, 1190, 341, 4295, 13, 51612, 51612, 400, 286, 393, 536, 300, 264, 4295, 307, 25339, 770, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.570877852263274, "compression_ratio": 1.899497487437186, "no_speech_prob": 5.507032255991362e-06}, {"id": 945, "seek": 283520, "start": 2860.16, "end": 2862.3599999999997, "text": " And I can see that the graph is annotated", "tokens": [50364, 407, 457, 286, 393, 764, 341, 337, 661, 721, 300, 25737, 13, 50580, 50580, 407, 510, 11, 257, 3100, 294, 257, 4295, 23249, 50712, 50712, 281, 257, 1729, 636, 295, 7697, 493, 341, 1749, 929, 295, 11276, 50950, 50950, 666, 4342, 13, 51034, 51034, 400, 1184, 3100, 307, 257, 1729, 636, 51120, 51120, 295, 40149, 729, 1749, 929, 666, 4342, 13, 51308, 51308, 286, 393, 1190, 729, 5267, 13, 51400, 51400, 407, 586, 341, 4295, 307, 25339, 770, 294, 264, 18161, 2533, 13, 51538, 51538, 407, 286, 393, 1190, 341, 4295, 13, 51612, 51612, 400, 286, 393, 536, 300, 264, 4295, 307, 25339, 770, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.570877852263274, "compression_ratio": 1.899497487437186, "no_speech_prob": 5.507032255991362e-06}, {"id": 946, "seek": 286236, "start": 2862.36, "end": 2865.36, "text": " by images, not by energies.", "tokens": [50364, 538, 5267, 11, 406, 538, 25737, 13, 50514, 50514, 286, 393, 1190, 729, 5267, 807, 257, 3754, 2533, 13, 50618, 50618, 440, 3754, 2533, 307, 516, 281, 980, 385, 337, 1184, 10346, 82, 294, 341, 4295, 11, 50790, 50790, 309, 311, 516, 281, 980, 385, 11, 731, 11, 341, 50858, 50858, 307, 588, 3700, 281, 312, 257, 805, 13, 50922, 50922, 400, 510, 307, 264, 2281, 337, 300, 805, 13, 51058, 51058, 17078, 2281, 11, 498, 309, 311, 257, 665, 805, 13, 51120, 51120, 5229, 2281, 11, 498, 309, 311, 257, 1578, 805, 13, 51240, 51240, 467, 727, 611, 980, 385, 11, 731, 11, 341, 51320, 51320, 815, 312, 257, 568, 11, 457, 365, 257, 2946, 2281, 13, 51470, 51470, 1610, 309, 727, 312, 257, 1958, 365, 257, 2946, 2281, 13, 51610, 51610, 407, 309, 311, 516, 281, 1322, 341, 4295, 11, 597, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.27795361512459366, "compression_ratio": 1.8945147679324894, "no_speech_prob": 2.282481364090927e-05}, {"id": 947, "seek": 286236, "start": 2865.36, "end": 2867.44, "text": " I can run those images through a conv net.", "tokens": [50364, 538, 5267, 11, 406, 538, 25737, 13, 50514, 50514, 286, 393, 1190, 729, 5267, 807, 257, 3754, 2533, 13, 50618, 50618, 440, 3754, 2533, 307, 516, 281, 980, 385, 337, 1184, 10346, 82, 294, 341, 4295, 11, 50790, 50790, 309, 311, 516, 281, 980, 385, 11, 731, 11, 341, 50858, 50858, 307, 588, 3700, 281, 312, 257, 805, 13, 50922, 50922, 400, 510, 307, 264, 2281, 337, 300, 805, 13, 51058, 51058, 17078, 2281, 11, 498, 309, 311, 257, 665, 805, 13, 51120, 51120, 5229, 2281, 11, 498, 309, 311, 257, 1578, 805, 13, 51240, 51240, 467, 727, 611, 980, 385, 11, 731, 11, 341, 51320, 51320, 815, 312, 257, 568, 11, 457, 365, 257, 2946, 2281, 13, 51470, 51470, 1610, 309, 727, 312, 257, 1958, 365, 257, 2946, 2281, 13, 51610, 51610, 407, 309, 311, 516, 281, 1322, 341, 4295, 11, 597, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.27795361512459366, "compression_ratio": 1.8945147679324894, "no_speech_prob": 2.282481364090927e-05}, {"id": 948, "seek": 286236, "start": 2867.44, "end": 2870.88, "text": " The conv net is going to tell me for each arcs in this graph,", "tokens": [50364, 538, 5267, 11, 406, 538, 25737, 13, 50514, 50514, 286, 393, 1190, 729, 5267, 807, 257, 3754, 2533, 13, 50618, 50618, 440, 3754, 2533, 307, 516, 281, 980, 385, 337, 1184, 10346, 82, 294, 341, 4295, 11, 50790, 50790, 309, 311, 516, 281, 980, 385, 11, 731, 11, 341, 50858, 50858, 307, 588, 3700, 281, 312, 257, 805, 13, 50922, 50922, 400, 510, 307, 264, 2281, 337, 300, 805, 13, 51058, 51058, 17078, 2281, 11, 498, 309, 311, 257, 665, 805, 13, 51120, 51120, 5229, 2281, 11, 498, 309, 311, 257, 1578, 805, 13, 51240, 51240, 467, 727, 611, 980, 385, 11, 731, 11, 341, 51320, 51320, 815, 312, 257, 568, 11, 457, 365, 257, 2946, 2281, 13, 51470, 51470, 1610, 309, 727, 312, 257, 1958, 365, 257, 2946, 2281, 13, 51610, 51610, 407, 309, 311, 516, 281, 1322, 341, 4295, 11, 597, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.27795361512459366, "compression_ratio": 1.8945147679324894, "no_speech_prob": 2.282481364090927e-05}, {"id": 949, "seek": 286236, "start": 2870.88, "end": 2872.2400000000002, "text": " it's going to tell me, well, this", "tokens": [50364, 538, 5267, 11, 406, 538, 25737, 13, 50514, 50514, 286, 393, 1190, 729, 5267, 807, 257, 3754, 2533, 13, 50618, 50618, 440, 3754, 2533, 307, 516, 281, 980, 385, 337, 1184, 10346, 82, 294, 341, 4295, 11, 50790, 50790, 309, 311, 516, 281, 980, 385, 11, 731, 11, 341, 50858, 50858, 307, 588, 3700, 281, 312, 257, 805, 13, 50922, 50922, 400, 510, 307, 264, 2281, 337, 300, 805, 13, 51058, 51058, 17078, 2281, 11, 498, 309, 311, 257, 665, 805, 13, 51120, 51120, 5229, 2281, 11, 498, 309, 311, 257, 1578, 805, 13, 51240, 51240, 467, 727, 611, 980, 385, 11, 731, 11, 341, 51320, 51320, 815, 312, 257, 568, 11, 457, 365, 257, 2946, 2281, 13, 51470, 51470, 1610, 309, 727, 312, 257, 1958, 365, 257, 2946, 2281, 13, 51610, 51610, 407, 309, 311, 516, 281, 1322, 341, 4295, 11, 597, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.27795361512459366, "compression_ratio": 1.8945147679324894, "no_speech_prob": 2.282481364090927e-05}, {"id": 950, "seek": 286236, "start": 2872.2400000000002, "end": 2873.52, "text": " is very likely to be a 3.", "tokens": [50364, 538, 5267, 11, 406, 538, 25737, 13, 50514, 50514, 286, 393, 1190, 729, 5267, 807, 257, 3754, 2533, 13, 50618, 50618, 440, 3754, 2533, 307, 516, 281, 980, 385, 337, 1184, 10346, 82, 294, 341, 4295, 11, 50790, 50790, 309, 311, 516, 281, 980, 385, 11, 731, 11, 341, 50858, 50858, 307, 588, 3700, 281, 312, 257, 805, 13, 50922, 50922, 400, 510, 307, 264, 2281, 337, 300, 805, 13, 51058, 51058, 17078, 2281, 11, 498, 309, 311, 257, 665, 805, 13, 51120, 51120, 5229, 2281, 11, 498, 309, 311, 257, 1578, 805, 13, 51240, 51240, 467, 727, 611, 980, 385, 11, 731, 11, 341, 51320, 51320, 815, 312, 257, 568, 11, 457, 365, 257, 2946, 2281, 13, 51470, 51470, 1610, 309, 727, 312, 257, 1958, 365, 257, 2946, 2281, 13, 51610, 51610, 407, 309, 311, 516, 281, 1322, 341, 4295, 11, 597, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.27795361512459366, "compression_ratio": 1.8945147679324894, "no_speech_prob": 2.282481364090927e-05}, {"id": 951, "seek": 286236, "start": 2873.52, "end": 2876.2400000000002, "text": " And here is the energy for that 3.", "tokens": [50364, 538, 5267, 11, 406, 538, 25737, 13, 50514, 50514, 286, 393, 1190, 729, 5267, 807, 257, 3754, 2533, 13, 50618, 50618, 440, 3754, 2533, 307, 516, 281, 980, 385, 337, 1184, 10346, 82, 294, 341, 4295, 11, 50790, 50790, 309, 311, 516, 281, 980, 385, 11, 731, 11, 341, 50858, 50858, 307, 588, 3700, 281, 312, 257, 805, 13, 50922, 50922, 400, 510, 307, 264, 2281, 337, 300, 805, 13, 51058, 51058, 17078, 2281, 11, 498, 309, 311, 257, 665, 805, 13, 51120, 51120, 5229, 2281, 11, 498, 309, 311, 257, 1578, 805, 13, 51240, 51240, 467, 727, 611, 980, 385, 11, 731, 11, 341, 51320, 51320, 815, 312, 257, 568, 11, 457, 365, 257, 2946, 2281, 13, 51470, 51470, 1610, 309, 727, 312, 257, 1958, 365, 257, 2946, 2281, 13, 51610, 51610, 407, 309, 311, 516, 281, 1322, 341, 4295, 11, 597, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.27795361512459366, "compression_ratio": 1.8945147679324894, "no_speech_prob": 2.282481364090927e-05}, {"id": 952, "seek": 286236, "start": 2876.2400000000002, "end": 2877.48, "text": " Low energy, if it's a good 3.", "tokens": [50364, 538, 5267, 11, 406, 538, 25737, 13, 50514, 50514, 286, 393, 1190, 729, 5267, 807, 257, 3754, 2533, 13, 50618, 50618, 440, 3754, 2533, 307, 516, 281, 980, 385, 337, 1184, 10346, 82, 294, 341, 4295, 11, 50790, 50790, 309, 311, 516, 281, 980, 385, 11, 731, 11, 341, 50858, 50858, 307, 588, 3700, 281, 312, 257, 805, 13, 50922, 50922, 400, 510, 307, 264, 2281, 337, 300, 805, 13, 51058, 51058, 17078, 2281, 11, 498, 309, 311, 257, 665, 805, 13, 51120, 51120, 5229, 2281, 11, 498, 309, 311, 257, 1578, 805, 13, 51240, 51240, 467, 727, 611, 980, 385, 11, 731, 11, 341, 51320, 51320, 815, 312, 257, 568, 11, 457, 365, 257, 2946, 2281, 13, 51470, 51470, 1610, 309, 727, 312, 257, 1958, 365, 257, 2946, 2281, 13, 51610, 51610, 407, 309, 311, 516, 281, 1322, 341, 4295, 11, 597, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.27795361512459366, "compression_ratio": 1.8945147679324894, "no_speech_prob": 2.282481364090927e-05}, {"id": 953, "seek": 286236, "start": 2877.48, "end": 2879.88, "text": " High energy, if it's a bad 3.", "tokens": [50364, 538, 5267, 11, 406, 538, 25737, 13, 50514, 50514, 286, 393, 1190, 729, 5267, 807, 257, 3754, 2533, 13, 50618, 50618, 440, 3754, 2533, 307, 516, 281, 980, 385, 337, 1184, 10346, 82, 294, 341, 4295, 11, 50790, 50790, 309, 311, 516, 281, 980, 385, 11, 731, 11, 341, 50858, 50858, 307, 588, 3700, 281, 312, 257, 805, 13, 50922, 50922, 400, 510, 307, 264, 2281, 337, 300, 805, 13, 51058, 51058, 17078, 2281, 11, 498, 309, 311, 257, 665, 805, 13, 51120, 51120, 5229, 2281, 11, 498, 309, 311, 257, 1578, 805, 13, 51240, 51240, 467, 727, 611, 980, 385, 11, 731, 11, 341, 51320, 51320, 815, 312, 257, 568, 11, 457, 365, 257, 2946, 2281, 13, 51470, 51470, 1610, 309, 727, 312, 257, 1958, 365, 257, 2946, 2281, 13, 51610, 51610, 407, 309, 311, 516, 281, 1322, 341, 4295, 11, 597, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.27795361512459366, "compression_ratio": 1.8945147679324894, "no_speech_prob": 2.282481364090927e-05}, {"id": 954, "seek": 286236, "start": 2879.88, "end": 2881.48, "text": " It could also tell me, well, this", "tokens": [50364, 538, 5267, 11, 406, 538, 25737, 13, 50514, 50514, 286, 393, 1190, 729, 5267, 807, 257, 3754, 2533, 13, 50618, 50618, 440, 3754, 2533, 307, 516, 281, 980, 385, 337, 1184, 10346, 82, 294, 341, 4295, 11, 50790, 50790, 309, 311, 516, 281, 980, 385, 11, 731, 11, 341, 50858, 50858, 307, 588, 3700, 281, 312, 257, 805, 13, 50922, 50922, 400, 510, 307, 264, 2281, 337, 300, 805, 13, 51058, 51058, 17078, 2281, 11, 498, 309, 311, 257, 665, 805, 13, 51120, 51120, 5229, 2281, 11, 498, 309, 311, 257, 1578, 805, 13, 51240, 51240, 467, 727, 611, 980, 385, 11, 731, 11, 341, 51320, 51320, 815, 312, 257, 568, 11, 457, 365, 257, 2946, 2281, 13, 51470, 51470, 1610, 309, 727, 312, 257, 1958, 365, 257, 2946, 2281, 13, 51610, 51610, 407, 309, 311, 516, 281, 1322, 341, 4295, 11, 597, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.27795361512459366, "compression_ratio": 1.8945147679324894, "no_speech_prob": 2.282481364090927e-05}, {"id": 955, "seek": 286236, "start": 2881.48, "end": 2884.48, "text": " may be a 2, but with a higher energy.", "tokens": [50364, 538, 5267, 11, 406, 538, 25737, 13, 50514, 50514, 286, 393, 1190, 729, 5267, 807, 257, 3754, 2533, 13, 50618, 50618, 440, 3754, 2533, 307, 516, 281, 980, 385, 337, 1184, 10346, 82, 294, 341, 4295, 11, 50790, 50790, 309, 311, 516, 281, 980, 385, 11, 731, 11, 341, 50858, 50858, 307, 588, 3700, 281, 312, 257, 805, 13, 50922, 50922, 400, 510, 307, 264, 2281, 337, 300, 805, 13, 51058, 51058, 17078, 2281, 11, 498, 309, 311, 257, 665, 805, 13, 51120, 51120, 5229, 2281, 11, 498, 309, 311, 257, 1578, 805, 13, 51240, 51240, 467, 727, 611, 980, 385, 11, 731, 11, 341, 51320, 51320, 815, 312, 257, 568, 11, 457, 365, 257, 2946, 2281, 13, 51470, 51470, 1610, 309, 727, 312, 257, 1958, 365, 257, 2946, 2281, 13, 51610, 51610, 407, 309, 311, 516, 281, 1322, 341, 4295, 11, 597, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.27795361512459366, "compression_ratio": 1.8945147679324894, "no_speech_prob": 2.282481364090927e-05}, {"id": 956, "seek": 286236, "start": 2884.48, "end": 2887.28, "text": " Or it could be a 0 with a higher energy.", "tokens": [50364, 538, 5267, 11, 406, 538, 25737, 13, 50514, 50514, 286, 393, 1190, 729, 5267, 807, 257, 3754, 2533, 13, 50618, 50618, 440, 3754, 2533, 307, 516, 281, 980, 385, 337, 1184, 10346, 82, 294, 341, 4295, 11, 50790, 50790, 309, 311, 516, 281, 980, 385, 11, 731, 11, 341, 50858, 50858, 307, 588, 3700, 281, 312, 257, 805, 13, 50922, 50922, 400, 510, 307, 264, 2281, 337, 300, 805, 13, 51058, 51058, 17078, 2281, 11, 498, 309, 311, 257, 665, 805, 13, 51120, 51120, 5229, 2281, 11, 498, 309, 311, 257, 1578, 805, 13, 51240, 51240, 467, 727, 611, 980, 385, 11, 731, 11, 341, 51320, 51320, 815, 312, 257, 568, 11, 457, 365, 257, 2946, 2281, 13, 51470, 51470, 1610, 309, 727, 312, 257, 1958, 365, 257, 2946, 2281, 13, 51610, 51610, 407, 309, 311, 516, 281, 1322, 341, 4295, 11, 597, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.27795361512459366, "compression_ratio": 1.8945147679324894, "no_speech_prob": 2.282481364090927e-05}, {"id": 957, "seek": 286236, "start": 2887.28, "end": 2889.48, "text": " So it's going to build this graph, which you can", "tokens": [50364, 538, 5267, 11, 406, 538, 25737, 13, 50514, 50514, 286, 393, 1190, 729, 5267, 807, 257, 3754, 2533, 13, 50618, 50618, 440, 3754, 2533, 307, 516, 281, 980, 385, 337, 1184, 10346, 82, 294, 341, 4295, 11, 50790, 50790, 309, 311, 516, 281, 980, 385, 11, 731, 11, 341, 50858, 50858, 307, 588, 3700, 281, 312, 257, 805, 13, 50922, 50922, 400, 510, 307, 264, 2281, 337, 300, 805, 13, 51058, 51058, 17078, 2281, 11, 498, 309, 311, 257, 665, 805, 13, 51120, 51120, 5229, 2281, 11, 498, 309, 311, 257, 1578, 805, 13, 51240, 51240, 467, 727, 611, 980, 385, 11, 731, 11, 341, 51320, 51320, 815, 312, 257, 568, 11, 457, 365, 257, 2946, 2281, 13, 51470, 51470, 1610, 309, 727, 312, 257, 1958, 365, 257, 2946, 2281, 13, 51610, 51610, 407, 309, 311, 516, 281, 1322, 341, 4295, 11, 597, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.27795361512459366, "compression_ratio": 1.8945147679324894, "no_speech_prob": 2.282481364090927e-05}, {"id": 958, "seek": 288948, "start": 2889.48, "end": 2892.48, "text": " call the interpretation graph.", "tokens": [50364, 818, 264, 14174, 4295, 13, 50514, 50514, 6947, 3100, 294, 341, 4295, 307, 257, 1944, 40244, 50672, 50672, 295, 1184, 3100, 294, 341, 4295, 13, 50794, 50794, 400, 264, 16949, 13330, 264, 10479, 13, 51006, 51006, 400, 264, 25737, 8570, 281, 264, 10346, 82, 51216, 51216, 366, 1936, 264, 25737, 7126, 538, 257, 3754, 2533, 51418, 51418, 510, 337, 1184, 295, 729, 6338, 13, 51558, 51558, 407, 286, 393, 1190, 729, 5267, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.3836638710715554, "compression_ratio": 1.6685714285714286, "no_speech_prob": 6.8540307438524906e-06}, {"id": 959, "seek": 288948, "start": 2892.48, "end": 2895.64, "text": " Each path in this graph is a possible labeling", "tokens": [50364, 818, 264, 14174, 4295, 13, 50514, 50514, 6947, 3100, 294, 341, 4295, 307, 257, 1944, 40244, 50672, 50672, 295, 1184, 3100, 294, 341, 4295, 13, 50794, 50794, 400, 264, 16949, 13330, 264, 10479, 13, 51006, 51006, 400, 264, 25737, 8570, 281, 264, 10346, 82, 51216, 51216, 366, 1936, 264, 25737, 7126, 538, 257, 3754, 2533, 51418, 51418, 510, 337, 1184, 295, 729, 6338, 13, 51558, 51558, 407, 286, 393, 1190, 729, 5267, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.3836638710715554, "compression_ratio": 1.6685714285714286, "no_speech_prob": 6.8540307438524906e-06}, {"id": 960, "seek": 288948, "start": 2895.64, "end": 2898.08, "text": " of each path in this graph.", "tokens": [50364, 818, 264, 14174, 4295, 13, 50514, 50514, 6947, 3100, 294, 341, 4295, 307, 257, 1944, 40244, 50672, 50672, 295, 1184, 3100, 294, 341, 4295, 13, 50794, 50794, 400, 264, 16949, 13330, 264, 10479, 13, 51006, 51006, 400, 264, 25737, 8570, 281, 264, 10346, 82, 51216, 51216, 366, 1936, 264, 25737, 7126, 538, 257, 3754, 2533, 51418, 51418, 510, 337, 1184, 295, 729, 6338, 13, 51558, 51558, 407, 286, 393, 1190, 729, 5267, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.3836638710715554, "compression_ratio": 1.6685714285714286, "no_speech_prob": 6.8540307438524906e-06}, {"id": 961, "seek": 288948, "start": 2898.08, "end": 2902.32, "text": " And the labels indicate the categories.", "tokens": [50364, 818, 264, 14174, 4295, 13, 50514, 50514, 6947, 3100, 294, 341, 4295, 307, 257, 1944, 40244, 50672, 50672, 295, 1184, 3100, 294, 341, 4295, 13, 50794, 50794, 400, 264, 16949, 13330, 264, 10479, 13, 51006, 51006, 400, 264, 25737, 8570, 281, 264, 10346, 82, 51216, 51216, 366, 1936, 264, 25737, 7126, 538, 257, 3754, 2533, 51418, 51418, 510, 337, 1184, 295, 729, 6338, 13, 51558, 51558, 407, 286, 393, 1190, 729, 5267, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.3836638710715554, "compression_ratio": 1.6685714285714286, "no_speech_prob": 6.8540307438524906e-06}, {"id": 962, "seek": 288948, "start": 2902.32, "end": 2906.52, "text": " And the energies attached to the arcs", "tokens": [50364, 818, 264, 14174, 4295, 13, 50514, 50514, 6947, 3100, 294, 341, 4295, 307, 257, 1944, 40244, 50672, 50672, 295, 1184, 3100, 294, 341, 4295, 13, 50794, 50794, 400, 264, 16949, 13330, 264, 10479, 13, 51006, 51006, 400, 264, 25737, 8570, 281, 264, 10346, 82, 51216, 51216, 366, 1936, 264, 25737, 7126, 538, 257, 3754, 2533, 51418, 51418, 510, 337, 1184, 295, 729, 6338, 13, 51558, 51558, 407, 286, 393, 1190, 729, 5267, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.3836638710715554, "compression_ratio": 1.6685714285714286, "no_speech_prob": 6.8540307438524906e-06}, {"id": 963, "seek": 288948, "start": 2906.52, "end": 2910.56, "text": " are basically the energies produced by a conv net", "tokens": [50364, 818, 264, 14174, 4295, 13, 50514, 50514, 6947, 3100, 294, 341, 4295, 307, 257, 1944, 40244, 50672, 50672, 295, 1184, 3100, 294, 341, 4295, 13, 50794, 50794, 400, 264, 16949, 13330, 264, 10479, 13, 51006, 51006, 400, 264, 25737, 8570, 281, 264, 10346, 82, 51216, 51216, 366, 1936, 264, 25737, 7126, 538, 257, 3754, 2533, 51418, 51418, 510, 337, 1184, 295, 729, 6338, 13, 51558, 51558, 407, 286, 393, 1190, 729, 5267, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.3836638710715554, "compression_ratio": 1.6685714285714286, "no_speech_prob": 6.8540307438524906e-06}, {"id": 964, "seek": 288948, "start": 2910.56, "end": 2913.36, "text": " here for each of those answers.", "tokens": [50364, 818, 264, 14174, 4295, 13, 50514, 50514, 6947, 3100, 294, 341, 4295, 307, 257, 1944, 40244, 50672, 50672, 295, 1184, 3100, 294, 341, 4295, 13, 50794, 50794, 400, 264, 16949, 13330, 264, 10479, 13, 51006, 51006, 400, 264, 25737, 8570, 281, 264, 10346, 82, 51216, 51216, 366, 1936, 264, 25737, 7126, 538, 257, 3754, 2533, 51418, 51418, 510, 337, 1184, 295, 729, 6338, 13, 51558, 51558, 407, 286, 393, 1190, 729, 5267, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.3836638710715554, "compression_ratio": 1.6685714285714286, "no_speech_prob": 6.8540307438524906e-06}, {"id": 965, "seek": 288948, "start": 2913.36, "end": 2916.0, "text": " So I can run those images.", "tokens": [50364, 818, 264, 14174, 4295, 13, 50514, 50514, 6947, 3100, 294, 341, 4295, 307, 257, 1944, 40244, 50672, 50672, 295, 1184, 3100, 294, 341, 4295, 13, 50794, 50794, 400, 264, 16949, 13330, 264, 10479, 13, 51006, 51006, 400, 264, 25737, 8570, 281, 264, 10346, 82, 51216, 51216, 366, 1936, 264, 25737, 7126, 538, 257, 3754, 2533, 51418, 51418, 510, 337, 1184, 295, 729, 6338, 13, 51558, 51558, 407, 286, 393, 1190, 729, 5267, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.3836638710715554, "compression_ratio": 1.6685714285714286, "no_speech_prob": 6.8540307438524906e-06}, {"id": 966, "seek": 291600, "start": 2916.0, "end": 2920.84, "text": " And I'm going to look at each of those answers.", "tokens": [50364, 400, 286, 478, 516, 281, 574, 412, 1184, 295, 729, 6338, 13, 50606, 50606, 407, 341, 3754, 2533, 307, 516, 281, 574, 50700, 50700, 412, 341, 707, 2522, 295, 257, 1017, 293, 307, 516, 281, 980, 385, 11, 50860, 50860, 731, 11, 300, 1542, 733, 295, 411, 257, 568, 365, 257, 2295, 2281, 13, 50990, 50990, 1610, 300, 815, 574, 411, 257, 2522, 295, 257, 1017, 365, 257, 2946, 2281, 13, 51194, 51194, 440, 2146, 300, 1542, 412, 341, 2522, 11, 4079, 510, 11, 51402, 51402, 307, 516, 281, 980, 385, 11, 731, 11, 341, 307, 257, 1017, 13, 51476, 51476, 286, 478, 1596, 988, 295, 309, 365, 2295, 2281, 13, 51594, 51594, 400, 415, 311, 516, 281, 980, 385, 11, 1310, 309, 311, 51678, 51678, 746, 1646, 365, 2946, 2281, 13, 51766, 51766], "temperature": 0.4, "avg_logprob": -0.344057840459487, "compression_ratio": 1.9866666666666666, "no_speech_prob": 4.936802270094631e-06}, {"id": 967, "seek": 291600, "start": 2920.84, "end": 2922.72, "text": " So this conv net is going to look", "tokens": [50364, 400, 286, 478, 516, 281, 574, 412, 1184, 295, 729, 6338, 13, 50606, 50606, 407, 341, 3754, 2533, 307, 516, 281, 574, 50700, 50700, 412, 341, 707, 2522, 295, 257, 1017, 293, 307, 516, 281, 980, 385, 11, 50860, 50860, 731, 11, 300, 1542, 733, 295, 411, 257, 568, 365, 257, 2295, 2281, 13, 50990, 50990, 1610, 300, 815, 574, 411, 257, 2522, 295, 257, 1017, 365, 257, 2946, 2281, 13, 51194, 51194, 440, 2146, 300, 1542, 412, 341, 2522, 11, 4079, 510, 11, 51402, 51402, 307, 516, 281, 980, 385, 11, 731, 11, 341, 307, 257, 1017, 13, 51476, 51476, 286, 478, 1596, 988, 295, 309, 365, 2295, 2281, 13, 51594, 51594, 400, 415, 311, 516, 281, 980, 385, 11, 1310, 309, 311, 51678, 51678, 746, 1646, 365, 2946, 2281, 13, 51766, 51766], "temperature": 0.4, "avg_logprob": -0.344057840459487, "compression_ratio": 1.9866666666666666, "no_speech_prob": 4.936802270094631e-06}, {"id": 968, "seek": 291600, "start": 2922.72, "end": 2925.92, "text": " at this little piece of a 4 and is going to tell me,", "tokens": [50364, 400, 286, 478, 516, 281, 574, 412, 1184, 295, 729, 6338, 13, 50606, 50606, 407, 341, 3754, 2533, 307, 516, 281, 574, 50700, 50700, 412, 341, 707, 2522, 295, 257, 1017, 293, 307, 516, 281, 980, 385, 11, 50860, 50860, 731, 11, 300, 1542, 733, 295, 411, 257, 568, 365, 257, 2295, 2281, 13, 50990, 50990, 1610, 300, 815, 574, 411, 257, 2522, 295, 257, 1017, 365, 257, 2946, 2281, 13, 51194, 51194, 440, 2146, 300, 1542, 412, 341, 2522, 11, 4079, 510, 11, 51402, 51402, 307, 516, 281, 980, 385, 11, 731, 11, 341, 307, 257, 1017, 13, 51476, 51476, 286, 478, 1596, 988, 295, 309, 365, 2295, 2281, 13, 51594, 51594, 400, 415, 311, 516, 281, 980, 385, 11, 1310, 309, 311, 51678, 51678, 746, 1646, 365, 2946, 2281, 13, 51766, 51766], "temperature": 0.4, "avg_logprob": -0.344057840459487, "compression_ratio": 1.9866666666666666, "no_speech_prob": 4.936802270094631e-06}, {"id": 969, "seek": 291600, "start": 2925.92, "end": 2928.52, "text": " well, that looks kind of like a 2 with a low energy.", "tokens": [50364, 400, 286, 478, 516, 281, 574, 412, 1184, 295, 729, 6338, 13, 50606, 50606, 407, 341, 3754, 2533, 307, 516, 281, 574, 50700, 50700, 412, 341, 707, 2522, 295, 257, 1017, 293, 307, 516, 281, 980, 385, 11, 50860, 50860, 731, 11, 300, 1542, 733, 295, 411, 257, 568, 365, 257, 2295, 2281, 13, 50990, 50990, 1610, 300, 815, 574, 411, 257, 2522, 295, 257, 1017, 365, 257, 2946, 2281, 13, 51194, 51194, 440, 2146, 300, 1542, 412, 341, 2522, 11, 4079, 510, 11, 51402, 51402, 307, 516, 281, 980, 385, 11, 731, 11, 341, 307, 257, 1017, 13, 51476, 51476, 286, 478, 1596, 988, 295, 309, 365, 2295, 2281, 13, 51594, 51594, 400, 415, 311, 516, 281, 980, 385, 11, 1310, 309, 311, 51678, 51678, 746, 1646, 365, 2946, 2281, 13, 51766, 51766], "temperature": 0.4, "avg_logprob": -0.344057840459487, "compression_ratio": 1.9866666666666666, "no_speech_prob": 4.936802270094631e-06}, {"id": 970, "seek": 291600, "start": 2928.52, "end": 2932.6, "text": " Or that may look like a piece of a 4 with a higher energy.", "tokens": [50364, 400, 286, 478, 516, 281, 574, 412, 1184, 295, 729, 6338, 13, 50606, 50606, 407, 341, 3754, 2533, 307, 516, 281, 574, 50700, 50700, 412, 341, 707, 2522, 295, 257, 1017, 293, 307, 516, 281, 980, 385, 11, 50860, 50860, 731, 11, 300, 1542, 733, 295, 411, 257, 568, 365, 257, 2295, 2281, 13, 50990, 50990, 1610, 300, 815, 574, 411, 257, 2522, 295, 257, 1017, 365, 257, 2946, 2281, 13, 51194, 51194, 440, 2146, 300, 1542, 412, 341, 2522, 11, 4079, 510, 11, 51402, 51402, 307, 516, 281, 980, 385, 11, 731, 11, 341, 307, 257, 1017, 13, 51476, 51476, 286, 478, 1596, 988, 295, 309, 365, 2295, 2281, 13, 51594, 51594, 400, 415, 311, 516, 281, 980, 385, 11, 1310, 309, 311, 51678, 51678, 746, 1646, 365, 2946, 2281, 13, 51766, 51766], "temperature": 0.4, "avg_logprob": -0.344057840459487, "compression_ratio": 1.9866666666666666, "no_speech_prob": 4.936802270094631e-06}, {"id": 971, "seek": 291600, "start": 2932.6, "end": 2936.76, "text": " The guy that looks at this piece, somewhere here,", "tokens": [50364, 400, 286, 478, 516, 281, 574, 412, 1184, 295, 729, 6338, 13, 50606, 50606, 407, 341, 3754, 2533, 307, 516, 281, 574, 50700, 50700, 412, 341, 707, 2522, 295, 257, 1017, 293, 307, 516, 281, 980, 385, 11, 50860, 50860, 731, 11, 300, 1542, 733, 295, 411, 257, 568, 365, 257, 2295, 2281, 13, 50990, 50990, 1610, 300, 815, 574, 411, 257, 2522, 295, 257, 1017, 365, 257, 2946, 2281, 13, 51194, 51194, 440, 2146, 300, 1542, 412, 341, 2522, 11, 4079, 510, 11, 51402, 51402, 307, 516, 281, 980, 385, 11, 731, 11, 341, 307, 257, 1017, 13, 51476, 51476, 286, 478, 1596, 988, 295, 309, 365, 2295, 2281, 13, 51594, 51594, 400, 415, 311, 516, 281, 980, 385, 11, 1310, 309, 311, 51678, 51678, 746, 1646, 365, 2946, 2281, 13, 51766, 51766], "temperature": 0.4, "avg_logprob": -0.344057840459487, "compression_ratio": 1.9866666666666666, "no_speech_prob": 4.936802270094631e-06}, {"id": 972, "seek": 291600, "start": 2936.76, "end": 2938.24, "text": " is going to tell me, well, this is a 4.", "tokens": [50364, 400, 286, 478, 516, 281, 574, 412, 1184, 295, 729, 6338, 13, 50606, 50606, 407, 341, 3754, 2533, 307, 516, 281, 574, 50700, 50700, 412, 341, 707, 2522, 295, 257, 1017, 293, 307, 516, 281, 980, 385, 11, 50860, 50860, 731, 11, 300, 1542, 733, 295, 411, 257, 568, 365, 257, 2295, 2281, 13, 50990, 50990, 1610, 300, 815, 574, 411, 257, 2522, 295, 257, 1017, 365, 257, 2946, 2281, 13, 51194, 51194, 440, 2146, 300, 1542, 412, 341, 2522, 11, 4079, 510, 11, 51402, 51402, 307, 516, 281, 980, 385, 11, 731, 11, 341, 307, 257, 1017, 13, 51476, 51476, 286, 478, 1596, 988, 295, 309, 365, 2295, 2281, 13, 51594, 51594, 400, 415, 311, 516, 281, 980, 385, 11, 1310, 309, 311, 51678, 51678, 746, 1646, 365, 2946, 2281, 13, 51766, 51766], "temperature": 0.4, "avg_logprob": -0.344057840459487, "compression_ratio": 1.9866666666666666, "no_speech_prob": 4.936802270094631e-06}, {"id": 973, "seek": 291600, "start": 2938.24, "end": 2940.6, "text": " I'm quite sure of it with low energy.", "tokens": [50364, 400, 286, 478, 516, 281, 574, 412, 1184, 295, 729, 6338, 13, 50606, 50606, 407, 341, 3754, 2533, 307, 516, 281, 574, 50700, 50700, 412, 341, 707, 2522, 295, 257, 1017, 293, 307, 516, 281, 980, 385, 11, 50860, 50860, 731, 11, 300, 1542, 733, 295, 411, 257, 568, 365, 257, 2295, 2281, 13, 50990, 50990, 1610, 300, 815, 574, 411, 257, 2522, 295, 257, 1017, 365, 257, 2946, 2281, 13, 51194, 51194, 440, 2146, 300, 1542, 412, 341, 2522, 11, 4079, 510, 11, 51402, 51402, 307, 516, 281, 980, 385, 11, 731, 11, 341, 307, 257, 1017, 13, 51476, 51476, 286, 478, 1596, 988, 295, 309, 365, 2295, 2281, 13, 51594, 51594, 400, 415, 311, 516, 281, 980, 385, 11, 1310, 309, 311, 51678, 51678, 746, 1646, 365, 2946, 2281, 13, 51766, 51766], "temperature": 0.4, "avg_logprob": -0.344057840459487, "compression_ratio": 1.9866666666666666, "no_speech_prob": 4.936802270094631e-06}, {"id": 974, "seek": 291600, "start": 2940.6, "end": 2942.28, "text": " And he's going to tell me, maybe it's", "tokens": [50364, 400, 286, 478, 516, 281, 574, 412, 1184, 295, 729, 6338, 13, 50606, 50606, 407, 341, 3754, 2533, 307, 516, 281, 574, 50700, 50700, 412, 341, 707, 2522, 295, 257, 1017, 293, 307, 516, 281, 980, 385, 11, 50860, 50860, 731, 11, 300, 1542, 733, 295, 411, 257, 568, 365, 257, 2295, 2281, 13, 50990, 50990, 1610, 300, 815, 574, 411, 257, 2522, 295, 257, 1017, 365, 257, 2946, 2281, 13, 51194, 51194, 440, 2146, 300, 1542, 412, 341, 2522, 11, 4079, 510, 11, 51402, 51402, 307, 516, 281, 980, 385, 11, 731, 11, 341, 307, 257, 1017, 13, 51476, 51476, 286, 478, 1596, 988, 295, 309, 365, 2295, 2281, 13, 51594, 51594, 400, 415, 311, 516, 281, 980, 385, 11, 1310, 309, 311, 51678, 51678, 746, 1646, 365, 2946, 2281, 13, 51766, 51766], "temperature": 0.4, "avg_logprob": -0.344057840459487, "compression_ratio": 1.9866666666666666, "no_speech_prob": 4.936802270094631e-06}, {"id": 975, "seek": 291600, "start": 2942.28, "end": 2944.04, "text": " something else with higher energy.", "tokens": [50364, 400, 286, 478, 516, 281, 574, 412, 1184, 295, 729, 6338, 13, 50606, 50606, 407, 341, 3754, 2533, 307, 516, 281, 574, 50700, 50700, 412, 341, 707, 2522, 295, 257, 1017, 293, 307, 516, 281, 980, 385, 11, 50860, 50860, 731, 11, 300, 1542, 733, 295, 411, 257, 568, 365, 257, 2295, 2281, 13, 50990, 50990, 1610, 300, 815, 574, 411, 257, 2522, 295, 257, 1017, 365, 257, 2946, 2281, 13, 51194, 51194, 440, 2146, 300, 1542, 412, 341, 2522, 11, 4079, 510, 11, 51402, 51402, 307, 516, 281, 980, 385, 11, 731, 11, 341, 307, 257, 1017, 13, 51476, 51476, 286, 478, 1596, 988, 295, 309, 365, 2295, 2281, 13, 51594, 51594, 400, 415, 311, 516, 281, 980, 385, 11, 1310, 309, 311, 51678, 51678, 746, 1646, 365, 2946, 2281, 13, 51766, 51766], "temperature": 0.4, "avg_logprob": -0.344057840459487, "compression_ratio": 1.9866666666666666, "no_speech_prob": 4.936802270094631e-06}, {"id": 976, "seek": 294404, "start": 2944.04, "end": 2946.16, "text": " So it's going to be replaced by 10 arcs.", "tokens": [50364, 407, 309, 311, 516, 281, 312, 10772, 538, 1266, 10346, 82, 13, 50470, 50470, 286, 787, 10379, 732, 510, 13, 50536, 50536, 583, 4476, 11, 1266, 10346, 82, 11760, 50654, 50654, 281, 264, 1266, 1944, 10479, 11, 1184, 295, 552, 50790, 50790, 365, 257, 819, 2281, 300, 307, 445, 50910, 50910, 264, 5598, 295, 264, 11760, 5598, 295, 264, 3754, 2533, 51090, 51090, 300, 286, 6456, 510, 13, 51194, 51194, 823, 38253, 11, 797, 11, 307, 5006, 264, 31875, 51284, 51284, 14518, 294, 341, 4295, 13, 51374, 51374, 407, 5006, 264, 3100, 365, 257, 7285, 2281, 11, 1936, 13, 51602, 51602, 407, 5006, 264, 31875, 3100, 13, 51702, 51702, 407, 309, 311, 1936, 11, 291, 393, 519, 295, 309, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.3131612141927083, "compression_ratio": 1.8346774193548387, "no_speech_prob": 4.710414486908121e-06}, {"id": 977, "seek": 294404, "start": 2946.16, "end": 2947.48, "text": " I only represented two here.", "tokens": [50364, 407, 309, 311, 516, 281, 312, 10772, 538, 1266, 10346, 82, 13, 50470, 50470, 286, 787, 10379, 732, 510, 13, 50536, 50536, 583, 4476, 11, 1266, 10346, 82, 11760, 50654, 50654, 281, 264, 1266, 1944, 10479, 11, 1184, 295, 552, 50790, 50790, 365, 257, 819, 2281, 300, 307, 445, 50910, 50910, 264, 5598, 295, 264, 11760, 5598, 295, 264, 3754, 2533, 51090, 51090, 300, 286, 6456, 510, 13, 51194, 51194, 823, 38253, 11, 797, 11, 307, 5006, 264, 31875, 51284, 51284, 14518, 294, 341, 4295, 13, 51374, 51374, 407, 5006, 264, 3100, 365, 257, 7285, 2281, 11, 1936, 13, 51602, 51602, 407, 5006, 264, 31875, 3100, 13, 51702, 51702, 407, 309, 311, 1936, 11, 291, 393, 519, 295, 309, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.3131612141927083, "compression_ratio": 1.8346774193548387, "no_speech_prob": 4.710414486908121e-06}, {"id": 978, "seek": 294404, "start": 2947.48, "end": 2949.84, "text": " But essentially, 10 arcs corresponding", "tokens": [50364, 407, 309, 311, 516, 281, 312, 10772, 538, 1266, 10346, 82, 13, 50470, 50470, 286, 787, 10379, 732, 510, 13, 50536, 50536, 583, 4476, 11, 1266, 10346, 82, 11760, 50654, 50654, 281, 264, 1266, 1944, 10479, 11, 1184, 295, 552, 50790, 50790, 365, 257, 819, 2281, 300, 307, 445, 50910, 50910, 264, 5598, 295, 264, 11760, 5598, 295, 264, 3754, 2533, 51090, 51090, 300, 286, 6456, 510, 13, 51194, 51194, 823, 38253, 11, 797, 11, 307, 5006, 264, 31875, 51284, 51284, 14518, 294, 341, 4295, 13, 51374, 51374, 407, 5006, 264, 3100, 365, 257, 7285, 2281, 11, 1936, 13, 51602, 51602, 407, 5006, 264, 31875, 3100, 13, 51702, 51702, 407, 309, 311, 1936, 11, 291, 393, 519, 295, 309, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.3131612141927083, "compression_ratio": 1.8346774193548387, "no_speech_prob": 4.710414486908121e-06}, {"id": 979, "seek": 294404, "start": 2949.84, "end": 2952.56, "text": " to the 10 possible categories, each of them", "tokens": [50364, 407, 309, 311, 516, 281, 312, 10772, 538, 1266, 10346, 82, 13, 50470, 50470, 286, 787, 10379, 732, 510, 13, 50536, 50536, 583, 4476, 11, 1266, 10346, 82, 11760, 50654, 50654, 281, 264, 1266, 1944, 10479, 11, 1184, 295, 552, 50790, 50790, 365, 257, 819, 2281, 300, 307, 445, 50910, 50910, 264, 5598, 295, 264, 11760, 5598, 295, 264, 3754, 2533, 51090, 51090, 300, 286, 6456, 510, 13, 51194, 51194, 823, 38253, 11, 797, 11, 307, 5006, 264, 31875, 51284, 51284, 14518, 294, 341, 4295, 13, 51374, 51374, 407, 5006, 264, 3100, 365, 257, 7285, 2281, 11, 1936, 13, 51602, 51602, 407, 5006, 264, 31875, 3100, 13, 51702, 51702, 407, 309, 311, 1936, 11, 291, 393, 519, 295, 309, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.3131612141927083, "compression_ratio": 1.8346774193548387, "no_speech_prob": 4.710414486908121e-06}, {"id": 980, "seek": 294404, "start": 2952.56, "end": 2954.96, "text": " with a different energy that is just", "tokens": [50364, 407, 309, 311, 516, 281, 312, 10772, 538, 1266, 10346, 82, 13, 50470, 50470, 286, 787, 10379, 732, 510, 13, 50536, 50536, 583, 4476, 11, 1266, 10346, 82, 11760, 50654, 50654, 281, 264, 1266, 1944, 10479, 11, 1184, 295, 552, 50790, 50790, 365, 257, 819, 2281, 300, 307, 445, 50910, 50910, 264, 5598, 295, 264, 11760, 5598, 295, 264, 3754, 2533, 51090, 51090, 300, 286, 6456, 510, 13, 51194, 51194, 823, 38253, 11, 797, 11, 307, 5006, 264, 31875, 51284, 51284, 14518, 294, 341, 4295, 13, 51374, 51374, 407, 5006, 264, 3100, 365, 257, 7285, 2281, 11, 1936, 13, 51602, 51602, 407, 5006, 264, 31875, 3100, 13, 51702, 51702, 407, 309, 311, 1936, 11, 291, 393, 519, 295, 309, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.3131612141927083, "compression_ratio": 1.8346774193548387, "no_speech_prob": 4.710414486908121e-06}, {"id": 981, "seek": 294404, "start": 2954.96, "end": 2958.56, "text": " the output of the corresponding output of the conv net", "tokens": [50364, 407, 309, 311, 516, 281, 312, 10772, 538, 1266, 10346, 82, 13, 50470, 50470, 286, 787, 10379, 732, 510, 13, 50536, 50536, 583, 4476, 11, 1266, 10346, 82, 11760, 50654, 50654, 281, 264, 1266, 1944, 10479, 11, 1184, 295, 552, 50790, 50790, 365, 257, 819, 2281, 300, 307, 445, 50910, 50910, 264, 5598, 295, 264, 11760, 5598, 295, 264, 3754, 2533, 51090, 51090, 300, 286, 6456, 510, 13, 51194, 51194, 823, 38253, 11, 797, 11, 307, 5006, 264, 31875, 51284, 51284, 14518, 294, 341, 4295, 13, 51374, 51374, 407, 5006, 264, 3100, 365, 257, 7285, 2281, 11, 1936, 13, 51602, 51602, 407, 5006, 264, 31875, 3100, 13, 51702, 51702, 407, 309, 311, 1936, 11, 291, 393, 519, 295, 309, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.3131612141927083, "compression_ratio": 1.8346774193548387, "no_speech_prob": 4.710414486908121e-06}, {"id": 982, "seek": 294404, "start": 2958.56, "end": 2960.64, "text": " that I applied here.", "tokens": [50364, 407, 309, 311, 516, 281, 312, 10772, 538, 1266, 10346, 82, 13, 50470, 50470, 286, 787, 10379, 732, 510, 13, 50536, 50536, 583, 4476, 11, 1266, 10346, 82, 11760, 50654, 50654, 281, 264, 1266, 1944, 10479, 11, 1184, 295, 552, 50790, 50790, 365, 257, 819, 2281, 300, 307, 445, 50910, 50910, 264, 5598, 295, 264, 11760, 5598, 295, 264, 3754, 2533, 51090, 51090, 300, 286, 6456, 510, 13, 51194, 51194, 823, 38253, 11, 797, 11, 307, 5006, 264, 31875, 51284, 51284, 14518, 294, 341, 4295, 13, 51374, 51374, 407, 5006, 264, 3100, 365, 257, 7285, 2281, 11, 1936, 13, 51602, 51602, 407, 5006, 264, 31875, 3100, 13, 51702, 51702, 407, 309, 311, 1936, 11, 291, 393, 519, 295, 309, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.3131612141927083, "compression_ratio": 1.8346774193548387, "no_speech_prob": 4.710414486908121e-06}, {"id": 983, "seek": 294404, "start": 2960.64, "end": 2962.44, "text": " Now inference, again, is finding the shortest", "tokens": [50364, 407, 309, 311, 516, 281, 312, 10772, 538, 1266, 10346, 82, 13, 50470, 50470, 286, 787, 10379, 732, 510, 13, 50536, 50536, 583, 4476, 11, 1266, 10346, 82, 11760, 50654, 50654, 281, 264, 1266, 1944, 10479, 11, 1184, 295, 552, 50790, 50790, 365, 257, 819, 2281, 300, 307, 445, 50910, 50910, 264, 5598, 295, 264, 11760, 5598, 295, 264, 3754, 2533, 51090, 51090, 300, 286, 6456, 510, 13, 51194, 51194, 823, 38253, 11, 797, 11, 307, 5006, 264, 31875, 51284, 51284, 14518, 294, 341, 4295, 13, 51374, 51374, 407, 5006, 264, 3100, 365, 257, 7285, 2281, 11, 1936, 13, 51602, 51602, 407, 5006, 264, 31875, 3100, 13, 51702, 51702, 407, 309, 311, 1936, 11, 291, 393, 519, 295, 309, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.3131612141927083, "compression_ratio": 1.8346774193548387, "no_speech_prob": 4.710414486908121e-06}, {"id": 984, "seek": 294404, "start": 2962.44, "end": 2964.24, "text": " paths in this graph.", "tokens": [50364, 407, 309, 311, 516, 281, 312, 10772, 538, 1266, 10346, 82, 13, 50470, 50470, 286, 787, 10379, 732, 510, 13, 50536, 50536, 583, 4476, 11, 1266, 10346, 82, 11760, 50654, 50654, 281, 264, 1266, 1944, 10479, 11, 1184, 295, 552, 50790, 50790, 365, 257, 819, 2281, 300, 307, 445, 50910, 50910, 264, 5598, 295, 264, 11760, 5598, 295, 264, 3754, 2533, 51090, 51090, 300, 286, 6456, 510, 13, 51194, 51194, 823, 38253, 11, 797, 11, 307, 5006, 264, 31875, 51284, 51284, 14518, 294, 341, 4295, 13, 51374, 51374, 407, 5006, 264, 3100, 365, 257, 7285, 2281, 11, 1936, 13, 51602, 51602, 407, 5006, 264, 31875, 3100, 13, 51702, 51702, 407, 309, 311, 1936, 11, 291, 393, 519, 295, 309, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.3131612141927083, "compression_ratio": 1.8346774193548387, "no_speech_prob": 4.710414486908121e-06}, {"id": 985, "seek": 294404, "start": 2964.24, "end": 2968.8, "text": " So finding the path with a minimum energy, basically.", "tokens": [50364, 407, 309, 311, 516, 281, 312, 10772, 538, 1266, 10346, 82, 13, 50470, 50470, 286, 787, 10379, 732, 510, 13, 50536, 50536, 583, 4476, 11, 1266, 10346, 82, 11760, 50654, 50654, 281, 264, 1266, 1944, 10479, 11, 1184, 295, 552, 50790, 50790, 365, 257, 819, 2281, 300, 307, 445, 50910, 50910, 264, 5598, 295, 264, 11760, 5598, 295, 264, 3754, 2533, 51090, 51090, 300, 286, 6456, 510, 13, 51194, 51194, 823, 38253, 11, 797, 11, 307, 5006, 264, 31875, 51284, 51284, 14518, 294, 341, 4295, 13, 51374, 51374, 407, 5006, 264, 3100, 365, 257, 7285, 2281, 11, 1936, 13, 51602, 51602, 407, 5006, 264, 31875, 3100, 13, 51702, 51702, 407, 309, 311, 1936, 11, 291, 393, 519, 295, 309, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.3131612141927083, "compression_ratio": 1.8346774193548387, "no_speech_prob": 4.710414486908121e-06}, {"id": 986, "seek": 294404, "start": 2968.8, "end": 2970.8, "text": " So finding the shortest path.", "tokens": [50364, 407, 309, 311, 516, 281, 312, 10772, 538, 1266, 10346, 82, 13, 50470, 50470, 286, 787, 10379, 732, 510, 13, 50536, 50536, 583, 4476, 11, 1266, 10346, 82, 11760, 50654, 50654, 281, 264, 1266, 1944, 10479, 11, 1184, 295, 552, 50790, 50790, 365, 257, 819, 2281, 300, 307, 445, 50910, 50910, 264, 5598, 295, 264, 11760, 5598, 295, 264, 3754, 2533, 51090, 51090, 300, 286, 6456, 510, 13, 51194, 51194, 823, 38253, 11, 797, 11, 307, 5006, 264, 31875, 51284, 51284, 14518, 294, 341, 4295, 13, 51374, 51374, 407, 5006, 264, 3100, 365, 257, 7285, 2281, 11, 1936, 13, 51602, 51602, 407, 5006, 264, 31875, 3100, 13, 51702, 51702, 407, 309, 311, 1936, 11, 291, 393, 519, 295, 309, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.3131612141927083, "compression_ratio": 1.8346774193548387, "no_speech_prob": 4.710414486908121e-06}, {"id": 987, "seek": 294404, "start": 2970.8, "end": 2972.64, "text": " So it's basically, you can think of it", "tokens": [50364, 407, 309, 311, 516, 281, 312, 10772, 538, 1266, 10346, 82, 13, 50470, 50470, 286, 787, 10379, 732, 510, 13, 50536, 50536, 583, 4476, 11, 1266, 10346, 82, 11760, 50654, 50654, 281, 264, 1266, 1944, 10479, 11, 1184, 295, 552, 50790, 50790, 365, 257, 819, 2281, 300, 307, 445, 50910, 50910, 264, 5598, 295, 264, 11760, 5598, 295, 264, 3754, 2533, 51090, 51090, 300, 286, 6456, 510, 13, 51194, 51194, 823, 38253, 11, 797, 11, 307, 5006, 264, 31875, 51284, 51284, 14518, 294, 341, 4295, 13, 51374, 51374, 407, 5006, 264, 3100, 365, 257, 7285, 2281, 11, 1936, 13, 51602, 51602, 407, 5006, 264, 31875, 3100, 13, 51702, 51702, 407, 309, 311, 1936, 11, 291, 393, 519, 295, 309, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.3131612141927083, "compression_ratio": 1.8346774193548387, "no_speech_prob": 4.710414486908121e-06}, {"id": 988, "seek": 297264, "start": 2972.64, "end": 2975.8399999999997, "text": " as that selects the shortest path.", "tokens": [50364, 382, 300, 3048, 82, 264, 31875, 3100, 13, 50524, 50524, 682, 1186, 11, 309, 311, 341, 472, 510, 13, 50596, 50596, 286, 818, 309, 264, 479, 3904, 2322, 31782, 13, 50672, 50672, 407, 264, 1349, 31782, 294, 264, 4319, 295, 18161, 36170, 50810, 50810, 390, 1143, 294, 22383, 13, 50886, 50886, 583, 309, 311, 668, 733, 295, 30674, 337, 746, 1646, 586, 13, 51090, 51272, 1779, 13, 51400, 51400, 2264, 11, 370, 510, 311, 257, 3566, 1365, 295, 577, 341, 1062, 589, 13, 51518, 51666], "temperature": 0.0, "avg_logprob": -0.2651831528236126, "compression_ratio": 1.4572864321608041, "no_speech_prob": 3.904939603671664e-06}, {"id": 989, "seek": 297264, "start": 2975.8399999999997, "end": 2977.2799999999997, "text": " In fact, it's this one here.", "tokens": [50364, 382, 300, 3048, 82, 264, 31875, 3100, 13, 50524, 50524, 682, 1186, 11, 309, 311, 341, 472, 510, 13, 50596, 50596, 286, 818, 309, 264, 479, 3904, 2322, 31782, 13, 50672, 50672, 407, 264, 1349, 31782, 294, 264, 4319, 295, 18161, 36170, 50810, 50810, 390, 1143, 294, 22383, 13, 50886, 50886, 583, 309, 311, 668, 733, 295, 30674, 337, 746, 1646, 586, 13, 51090, 51272, 1779, 13, 51400, 51400, 2264, 11, 370, 510, 311, 257, 3566, 1365, 295, 577, 341, 1062, 589, 13, 51518, 51666], "temperature": 0.0, "avg_logprob": -0.2651831528236126, "compression_ratio": 1.4572864321608041, "no_speech_prob": 3.904939603671664e-06}, {"id": 990, "seek": 297264, "start": 2977.2799999999997, "end": 2978.7999999999997, "text": " I call it the Fitterby transformer.", "tokens": [50364, 382, 300, 3048, 82, 264, 31875, 3100, 13, 50524, 50524, 682, 1186, 11, 309, 311, 341, 472, 510, 13, 50596, 50596, 286, 818, 309, 264, 479, 3904, 2322, 31782, 13, 50672, 50672, 407, 264, 1349, 31782, 294, 264, 4319, 295, 18161, 36170, 50810, 50810, 390, 1143, 294, 22383, 13, 50886, 50886, 583, 309, 311, 668, 733, 295, 30674, 337, 746, 1646, 586, 13, 51090, 51272, 1779, 13, 51400, 51400, 2264, 11, 370, 510, 311, 257, 3566, 1365, 295, 577, 341, 1062, 589, 13, 51518, 51666], "temperature": 0.0, "avg_logprob": -0.2651831528236126, "compression_ratio": 1.4572864321608041, "no_speech_prob": 3.904939603671664e-06}, {"id": 991, "seek": 297264, "start": 2978.7999999999997, "end": 2981.56, "text": " So the word transformer in the context of neural nets", "tokens": [50364, 382, 300, 3048, 82, 264, 31875, 3100, 13, 50524, 50524, 682, 1186, 11, 309, 311, 341, 472, 510, 13, 50596, 50596, 286, 818, 309, 264, 479, 3904, 2322, 31782, 13, 50672, 50672, 407, 264, 1349, 31782, 294, 264, 4319, 295, 18161, 36170, 50810, 50810, 390, 1143, 294, 22383, 13, 50886, 50886, 583, 309, 311, 668, 733, 295, 30674, 337, 746, 1646, 586, 13, 51090, 51272, 1779, 13, 51400, 51400, 2264, 11, 370, 510, 311, 257, 3566, 1365, 295, 577, 341, 1062, 589, 13, 51518, 51666], "temperature": 0.0, "avg_logprob": -0.2651831528236126, "compression_ratio": 1.4572864321608041, "no_speech_prob": 3.904939603671664e-06}, {"id": 992, "seek": 297264, "start": 2981.56, "end": 2983.08, "text": " was used in 1997.", "tokens": [50364, 382, 300, 3048, 82, 264, 31875, 3100, 13, 50524, 50524, 682, 1186, 11, 309, 311, 341, 472, 510, 13, 50596, 50596, 286, 818, 309, 264, 479, 3904, 2322, 31782, 13, 50672, 50672, 407, 264, 1349, 31782, 294, 264, 4319, 295, 18161, 36170, 50810, 50810, 390, 1143, 294, 22383, 13, 50886, 50886, 583, 309, 311, 668, 733, 295, 30674, 337, 746, 1646, 586, 13, 51090, 51272, 1779, 13, 51400, 51400, 2264, 11, 370, 510, 311, 257, 3566, 1365, 295, 577, 341, 1062, 589, 13, 51518, 51666], "temperature": 0.0, "avg_logprob": -0.2651831528236126, "compression_ratio": 1.4572864321608041, "no_speech_prob": 3.904939603671664e-06}, {"id": 993, "seek": 297264, "start": 2983.08, "end": 2987.16, "text": " But it's been kind of recycled for something else now.", "tokens": [50364, 382, 300, 3048, 82, 264, 31875, 3100, 13, 50524, 50524, 682, 1186, 11, 309, 311, 341, 472, 510, 13, 50596, 50596, 286, 818, 309, 264, 479, 3904, 2322, 31782, 13, 50672, 50672, 407, 264, 1349, 31782, 294, 264, 4319, 295, 18161, 36170, 50810, 50810, 390, 1143, 294, 22383, 13, 50886, 50886, 583, 309, 311, 668, 733, 295, 30674, 337, 746, 1646, 586, 13, 51090, 51272, 1779, 13, 51400, 51400, 2264, 11, 370, 510, 311, 257, 3566, 1365, 295, 577, 341, 1062, 589, 13, 51518, 51666], "temperature": 0.0, "avg_logprob": -0.2651831528236126, "compression_ratio": 1.4572864321608041, "no_speech_prob": 3.904939603671664e-06}, {"id": 994, "seek": 297264, "start": 2990.7999999999997, "end": 2993.3599999999997, "text": " Right.", "tokens": [50364, 382, 300, 3048, 82, 264, 31875, 3100, 13, 50524, 50524, 682, 1186, 11, 309, 311, 341, 472, 510, 13, 50596, 50596, 286, 818, 309, 264, 479, 3904, 2322, 31782, 13, 50672, 50672, 407, 264, 1349, 31782, 294, 264, 4319, 295, 18161, 36170, 50810, 50810, 390, 1143, 294, 22383, 13, 50886, 50886, 583, 309, 311, 668, 733, 295, 30674, 337, 746, 1646, 586, 13, 51090, 51272, 1779, 13, 51400, 51400, 2264, 11, 370, 510, 311, 257, 3566, 1365, 295, 577, 341, 1062, 589, 13, 51518, 51666], "temperature": 0.0, "avg_logprob": -0.2651831528236126, "compression_ratio": 1.4572864321608041, "no_speech_prob": 3.904939603671664e-06}, {"id": 995, "seek": 297264, "start": 2993.3599999999997, "end": 2995.72, "text": " OK, so here's a complete example of how this might work.", "tokens": [50364, 382, 300, 3048, 82, 264, 31875, 3100, 13, 50524, 50524, 682, 1186, 11, 309, 311, 341, 472, 510, 13, 50596, 50596, 286, 818, 309, 264, 479, 3904, 2322, 31782, 13, 50672, 50672, 407, 264, 1349, 31782, 294, 264, 4319, 295, 18161, 36170, 50810, 50810, 390, 1143, 294, 22383, 13, 50886, 50886, 583, 309, 311, 668, 733, 295, 30674, 337, 746, 1646, 586, 13, 51090, 51272, 1779, 13, 51400, 51400, 2264, 11, 370, 510, 311, 257, 3566, 1365, 295, 577, 341, 1062, 589, 13, 51518, 51666], "temperature": 0.0, "avg_logprob": -0.2651831528236126, "compression_ratio": 1.4572864321608041, "no_speech_prob": 3.904939603671664e-06}, {"id": 996, "seek": 299572, "start": 2995.72, "end": 3001.52, "text": " So again, we have an input image.", "tokens": [50364, 407, 797, 11, 321, 362, 364, 4846, 3256, 13, 50654, 50654, 492, 1190, 341, 807, 341, 733, 295, 9469, 260, 50744, 50744, 300, 2365, 4201, 3866, 8535, 9469, 763, 11, 50934, 50934, 597, 366, 2098, 281, 1594, 729, 46115, 295, 294, 1694, 1214, 13, 51070, 51070, 6947, 3100, 294, 341, 4295, 23249, 51158, 51158, 281, 472, 1729, 636, 295, 40149, 264, 1749, 929, 295, 11276, 13, 51342, 51342, 492, 1190, 1184, 295, 729, 807, 257, 18161, 2533, 11, 51492, 51492, 14800, 14341, 295, 264, 912, 3754, 2533, 300, 445, 307, 8895, 51620, 51620, 281, 360, 2517, 11150, 13, 51690, 51690, 2264, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.28286278922602814, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.337720151350368e-06}, {"id": 997, "seek": 299572, "start": 3001.52, "end": 3003.3199999999997, "text": " We run this through this kind of segmenter", "tokens": [50364, 407, 797, 11, 321, 362, 364, 4846, 3256, 13, 50654, 50654, 492, 1190, 341, 807, 341, 733, 295, 9469, 260, 50744, 50744, 300, 2365, 4201, 3866, 8535, 9469, 763, 11, 50934, 50934, 597, 366, 2098, 281, 1594, 729, 46115, 295, 294, 1694, 1214, 13, 51070, 51070, 6947, 3100, 294, 341, 4295, 23249, 51158, 51158, 281, 472, 1729, 636, 295, 40149, 264, 1749, 929, 295, 11276, 13, 51342, 51342, 492, 1190, 1184, 295, 729, 807, 257, 18161, 2533, 11, 51492, 51492, 14800, 14341, 295, 264, 912, 3754, 2533, 300, 445, 307, 8895, 51620, 51620, 281, 360, 2517, 11150, 13, 51690, 51690, 2264, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.28286278922602814, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.337720151350368e-06}, {"id": 998, "seek": 299572, "start": 3003.3199999999997, "end": 3007.12, "text": " that proposes multiple alternative segmentations,", "tokens": [50364, 407, 797, 11, 321, 362, 364, 4846, 3256, 13, 50654, 50654, 492, 1190, 341, 807, 341, 733, 295, 9469, 260, 50744, 50744, 300, 2365, 4201, 3866, 8535, 9469, 763, 11, 50934, 50934, 597, 366, 2098, 281, 1594, 729, 46115, 295, 294, 1694, 1214, 13, 51070, 51070, 6947, 3100, 294, 341, 4295, 23249, 51158, 51158, 281, 472, 1729, 636, 295, 40149, 264, 1749, 929, 295, 11276, 13, 51342, 51342, 492, 1190, 1184, 295, 729, 807, 257, 18161, 2533, 11, 51492, 51492, 14800, 14341, 295, 264, 912, 3754, 2533, 300, 445, 307, 8895, 51620, 51620, 281, 360, 2517, 11150, 13, 51690, 51690, 2264, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.28286278922602814, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.337720151350368e-06}, {"id": 999, "seek": 299572, "start": 3007.12, "end": 3009.8399999999997, "text": " which are ways to group those blob of inks together.", "tokens": [50364, 407, 797, 11, 321, 362, 364, 4846, 3256, 13, 50654, 50654, 492, 1190, 341, 807, 341, 733, 295, 9469, 260, 50744, 50744, 300, 2365, 4201, 3866, 8535, 9469, 763, 11, 50934, 50934, 597, 366, 2098, 281, 1594, 729, 46115, 295, 294, 1694, 1214, 13, 51070, 51070, 6947, 3100, 294, 341, 4295, 23249, 51158, 51158, 281, 472, 1729, 636, 295, 40149, 264, 1749, 929, 295, 11276, 13, 51342, 51342, 492, 1190, 1184, 295, 729, 807, 257, 18161, 2533, 11, 51492, 51492, 14800, 14341, 295, 264, 912, 3754, 2533, 300, 445, 307, 8895, 51620, 51620, 281, 360, 2517, 11150, 13, 51690, 51690, 2264, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.28286278922602814, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.337720151350368e-06}, {"id": 1000, "seek": 299572, "start": 3009.8399999999997, "end": 3011.6, "text": " Each path in this graph corresponds", "tokens": [50364, 407, 797, 11, 321, 362, 364, 4846, 3256, 13, 50654, 50654, 492, 1190, 341, 807, 341, 733, 295, 9469, 260, 50744, 50744, 300, 2365, 4201, 3866, 8535, 9469, 763, 11, 50934, 50934, 597, 366, 2098, 281, 1594, 729, 46115, 295, 294, 1694, 1214, 13, 51070, 51070, 6947, 3100, 294, 341, 4295, 23249, 51158, 51158, 281, 472, 1729, 636, 295, 40149, 264, 1749, 929, 295, 11276, 13, 51342, 51342, 492, 1190, 1184, 295, 729, 807, 257, 18161, 2533, 11, 51492, 51492, 14800, 14341, 295, 264, 912, 3754, 2533, 300, 445, 307, 8895, 51620, 51620, 281, 360, 2517, 11150, 13, 51690, 51690, 2264, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.28286278922602814, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.337720151350368e-06}, {"id": 1001, "seek": 299572, "start": 3011.6, "end": 3015.2799999999997, "text": " to one particular way of grouping the blobs of ink.", "tokens": [50364, 407, 797, 11, 321, 362, 364, 4846, 3256, 13, 50654, 50654, 492, 1190, 341, 807, 341, 733, 295, 9469, 260, 50744, 50744, 300, 2365, 4201, 3866, 8535, 9469, 763, 11, 50934, 50934, 597, 366, 2098, 281, 1594, 729, 46115, 295, 294, 1694, 1214, 13, 51070, 51070, 6947, 3100, 294, 341, 4295, 23249, 51158, 51158, 281, 472, 1729, 636, 295, 40149, 264, 1749, 929, 295, 11276, 13, 51342, 51342, 492, 1190, 1184, 295, 729, 807, 257, 18161, 2533, 11, 51492, 51492, 14800, 14341, 295, 264, 912, 3754, 2533, 300, 445, 307, 8895, 51620, 51620, 281, 360, 2517, 11150, 13, 51690, 51690, 2264, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.28286278922602814, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.337720151350368e-06}, {"id": 1002, "seek": 299572, "start": 3015.2799999999997, "end": 3018.2799999999997, "text": " We run each of those through a neural net,", "tokens": [50364, 407, 797, 11, 321, 362, 364, 4846, 3256, 13, 50654, 50654, 492, 1190, 341, 807, 341, 733, 295, 9469, 260, 50744, 50744, 300, 2365, 4201, 3866, 8535, 9469, 763, 11, 50934, 50934, 597, 366, 2098, 281, 1594, 729, 46115, 295, 294, 1694, 1214, 13, 51070, 51070, 6947, 3100, 294, 341, 4295, 23249, 51158, 51158, 281, 472, 1729, 636, 295, 40149, 264, 1749, 929, 295, 11276, 13, 51342, 51342, 492, 1190, 1184, 295, 729, 807, 257, 18161, 2533, 11, 51492, 51492, 14800, 14341, 295, 264, 912, 3754, 2533, 300, 445, 307, 8895, 51620, 51620, 281, 360, 2517, 11150, 13, 51690, 51690, 2264, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.28286278922602814, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.337720151350368e-06}, {"id": 1003, "seek": 299572, "start": 3018.2799999999997, "end": 3020.8399999999997, "text": " identical copies of the same conv net that just is trained", "tokens": [50364, 407, 797, 11, 321, 362, 364, 4846, 3256, 13, 50654, 50654, 492, 1190, 341, 807, 341, 733, 295, 9469, 260, 50744, 50744, 300, 2365, 4201, 3866, 8535, 9469, 763, 11, 50934, 50934, 597, 366, 2098, 281, 1594, 729, 46115, 295, 294, 1694, 1214, 13, 51070, 51070, 6947, 3100, 294, 341, 4295, 23249, 51158, 51158, 281, 472, 1729, 636, 295, 40149, 264, 1749, 929, 295, 11276, 13, 51342, 51342, 492, 1190, 1184, 295, 729, 807, 257, 18161, 2533, 11, 51492, 51492, 14800, 14341, 295, 264, 912, 3754, 2533, 300, 445, 307, 8895, 51620, 51620, 281, 360, 2517, 11150, 13, 51690, 51690, 2264, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.28286278922602814, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.337720151350368e-06}, {"id": 1004, "seek": 299572, "start": 3020.8399999999997, "end": 3022.24, "text": " to do character recognition.", "tokens": [50364, 407, 797, 11, 321, 362, 364, 4846, 3256, 13, 50654, 50654, 492, 1190, 341, 807, 341, 733, 295, 9469, 260, 50744, 50744, 300, 2365, 4201, 3866, 8535, 9469, 763, 11, 50934, 50934, 597, 366, 2098, 281, 1594, 729, 46115, 295, 294, 1694, 1214, 13, 51070, 51070, 6947, 3100, 294, 341, 4295, 23249, 51158, 51158, 281, 472, 1729, 636, 295, 40149, 264, 1749, 929, 295, 11276, 13, 51342, 51342, 492, 1190, 1184, 295, 729, 807, 257, 18161, 2533, 11, 51492, 51492, 14800, 14341, 295, 264, 912, 3754, 2533, 300, 445, 307, 8895, 51620, 51620, 281, 360, 2517, 11150, 13, 51690, 51690, 2264, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.28286278922602814, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.337720151350368e-06}, {"id": 1005, "seek": 299572, "start": 3022.24, "end": 3023.72, "text": " OK?", "tokens": [50364, 407, 797, 11, 321, 362, 364, 4846, 3256, 13, 50654, 50654, 492, 1190, 341, 807, 341, 733, 295, 9469, 260, 50744, 50744, 300, 2365, 4201, 3866, 8535, 9469, 763, 11, 50934, 50934, 597, 366, 2098, 281, 1594, 729, 46115, 295, 294, 1694, 1214, 13, 51070, 51070, 6947, 3100, 294, 341, 4295, 23249, 51158, 51158, 281, 472, 1729, 636, 295, 40149, 264, 1749, 929, 295, 11276, 13, 51342, 51342, 492, 1190, 1184, 295, 729, 807, 257, 18161, 2533, 11, 51492, 51492, 14800, 14341, 295, 264, 912, 3754, 2533, 300, 445, 307, 8895, 51620, 51620, 281, 360, 2517, 11150, 13, 51690, 51690, 2264, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.28286278922602814, "compression_ratio": 1.6341463414634145, "no_speech_prob": 6.337720151350368e-06}, {"id": 1006, "seek": 302372, "start": 3023.72, "end": 3027.9199999999996, "text": " Each of those conv nets produces a list of 10 scores.", "tokens": [50364, 6947, 295, 729, 3754, 36170, 14725, 257, 1329, 295, 1266, 13444, 13, 50574, 50574, 407, 341, 2146, 5112, 385, 341, 307, 502, 365, 2281, 1958, 13, 16, 13, 50734, 50734, 639, 307, 1017, 365, 2281, 568, 13, 19, 11, 1030, 11458, 13, 50882, 50882, 639, 2146, 5112, 385, 11, 731, 11, 341, 2522, 307, 1017, 365, 2281, 1958, 13, 21, 51048, 51048, 420, 1722, 365, 2281, 502, 13, 17, 11, 420, 2035, 11, 1030, 11458, 11, 1030, 11458, 13, 51318, 51318, 639, 2146, 307, 516, 281, 976, 385, 733, 51402, 51402, 295, 7226, 1090, 2281, 337, 1203, 11, 51486, 51486, 570, 300, 1177, 380, 574, 665, 13, 51584, 51584, 10635, 337, 341, 2146, 13, 51696, 51696, 2264, 11, 370, 341, 307, 264, 4846, 3256, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.3032867076785065, "compression_ratio": 1.7606837606837606, "no_speech_prob": 1.4737905075890012e-05}, {"id": 1007, "seek": 302372, "start": 3027.9199999999996, "end": 3031.12, "text": " So this guy tells me this is 1 with energy 0.1.", "tokens": [50364, 6947, 295, 729, 3754, 36170, 14725, 257, 1329, 295, 1266, 13444, 13, 50574, 50574, 407, 341, 2146, 5112, 385, 341, 307, 502, 365, 2281, 1958, 13, 16, 13, 50734, 50734, 639, 307, 1017, 365, 2281, 568, 13, 19, 11, 1030, 11458, 13, 50882, 50882, 639, 2146, 5112, 385, 11, 731, 11, 341, 2522, 307, 1017, 365, 2281, 1958, 13, 21, 51048, 51048, 420, 1722, 365, 2281, 502, 13, 17, 11, 420, 2035, 11, 1030, 11458, 11, 1030, 11458, 13, 51318, 51318, 639, 2146, 307, 516, 281, 976, 385, 733, 51402, 51402, 295, 7226, 1090, 2281, 337, 1203, 11, 51486, 51486, 570, 300, 1177, 380, 574, 665, 13, 51584, 51584, 10635, 337, 341, 2146, 13, 51696, 51696, 2264, 11, 370, 341, 307, 264, 4846, 3256, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.3032867076785065, "compression_ratio": 1.7606837606837606, "no_speech_prob": 1.4737905075890012e-05}, {"id": 1008, "seek": 302372, "start": 3031.12, "end": 3034.08, "text": " This is 4 with energy 2.4, et cetera.", "tokens": [50364, 6947, 295, 729, 3754, 36170, 14725, 257, 1329, 295, 1266, 13444, 13, 50574, 50574, 407, 341, 2146, 5112, 385, 341, 307, 502, 365, 2281, 1958, 13, 16, 13, 50734, 50734, 639, 307, 1017, 365, 2281, 568, 13, 19, 11, 1030, 11458, 13, 50882, 50882, 639, 2146, 5112, 385, 11, 731, 11, 341, 2522, 307, 1017, 365, 2281, 1958, 13, 21, 51048, 51048, 420, 1722, 365, 2281, 502, 13, 17, 11, 420, 2035, 11, 1030, 11458, 11, 1030, 11458, 13, 51318, 51318, 639, 2146, 307, 516, 281, 976, 385, 733, 51402, 51402, 295, 7226, 1090, 2281, 337, 1203, 11, 51486, 51486, 570, 300, 1177, 380, 574, 665, 13, 51584, 51584, 10635, 337, 341, 2146, 13, 51696, 51696, 2264, 11, 370, 341, 307, 264, 4846, 3256, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.3032867076785065, "compression_ratio": 1.7606837606837606, "no_speech_prob": 1.4737905075890012e-05}, {"id": 1009, "seek": 302372, "start": 3034.08, "end": 3037.3999999999996, "text": " This guy tells me, well, this piece is 4 with energy 0.6", "tokens": [50364, 6947, 295, 729, 3754, 36170, 14725, 257, 1329, 295, 1266, 13444, 13, 50574, 50574, 407, 341, 2146, 5112, 385, 341, 307, 502, 365, 2281, 1958, 13, 16, 13, 50734, 50734, 639, 307, 1017, 365, 2281, 568, 13, 19, 11, 1030, 11458, 13, 50882, 50882, 639, 2146, 5112, 385, 11, 731, 11, 341, 2522, 307, 1017, 365, 2281, 1958, 13, 21, 51048, 51048, 420, 1722, 365, 2281, 502, 13, 17, 11, 420, 2035, 11, 1030, 11458, 11, 1030, 11458, 13, 51318, 51318, 639, 2146, 307, 516, 281, 976, 385, 733, 51402, 51402, 295, 7226, 1090, 2281, 337, 1203, 11, 51486, 51486, 570, 300, 1177, 380, 574, 665, 13, 51584, 51584, 10635, 337, 341, 2146, 13, 51696, 51696, 2264, 11, 370, 341, 307, 264, 4846, 3256, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.3032867076785065, "compression_ratio": 1.7606837606837606, "no_speech_prob": 1.4737905075890012e-05}, {"id": 1010, "seek": 302372, "start": 3037.3999999999996, "end": 3042.7999999999997, "text": " or 9 with energy 1.2, or whatever, et cetera, et cetera.", "tokens": [50364, 6947, 295, 729, 3754, 36170, 14725, 257, 1329, 295, 1266, 13444, 13, 50574, 50574, 407, 341, 2146, 5112, 385, 341, 307, 502, 365, 2281, 1958, 13, 16, 13, 50734, 50734, 639, 307, 1017, 365, 2281, 568, 13, 19, 11, 1030, 11458, 13, 50882, 50882, 639, 2146, 5112, 385, 11, 731, 11, 341, 2522, 307, 1017, 365, 2281, 1958, 13, 21, 51048, 51048, 420, 1722, 365, 2281, 502, 13, 17, 11, 420, 2035, 11, 1030, 11458, 11, 1030, 11458, 13, 51318, 51318, 639, 2146, 307, 516, 281, 976, 385, 733, 51402, 51402, 295, 7226, 1090, 2281, 337, 1203, 11, 51486, 51486, 570, 300, 1177, 380, 574, 665, 13, 51584, 51584, 10635, 337, 341, 2146, 13, 51696, 51696, 2264, 11, 370, 341, 307, 264, 4846, 3256, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.3032867076785065, "compression_ratio": 1.7606837606837606, "no_speech_prob": 1.4737905075890012e-05}, {"id": 1011, "seek": 302372, "start": 3042.7999999999997, "end": 3044.48, "text": " This guy is going to give me kind", "tokens": [50364, 6947, 295, 729, 3754, 36170, 14725, 257, 1329, 295, 1266, 13444, 13, 50574, 50574, 407, 341, 2146, 5112, 385, 341, 307, 502, 365, 2281, 1958, 13, 16, 13, 50734, 50734, 639, 307, 1017, 365, 2281, 568, 13, 19, 11, 1030, 11458, 13, 50882, 50882, 639, 2146, 5112, 385, 11, 731, 11, 341, 2522, 307, 1017, 365, 2281, 1958, 13, 21, 51048, 51048, 420, 1722, 365, 2281, 502, 13, 17, 11, 420, 2035, 11, 1030, 11458, 11, 1030, 11458, 13, 51318, 51318, 639, 2146, 307, 516, 281, 976, 385, 733, 51402, 51402, 295, 7226, 1090, 2281, 337, 1203, 11, 51486, 51486, 570, 300, 1177, 380, 574, 665, 13, 51584, 51584, 10635, 337, 341, 2146, 13, 51696, 51696, 2264, 11, 370, 341, 307, 264, 4846, 3256, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.3032867076785065, "compression_ratio": 1.7606837606837606, "no_speech_prob": 1.4737905075890012e-05}, {"id": 1012, "seek": 302372, "start": 3044.48, "end": 3046.16, "text": " of relatively high energy for everything,", "tokens": [50364, 6947, 295, 729, 3754, 36170, 14725, 257, 1329, 295, 1266, 13444, 13, 50574, 50574, 407, 341, 2146, 5112, 385, 341, 307, 502, 365, 2281, 1958, 13, 16, 13, 50734, 50734, 639, 307, 1017, 365, 2281, 568, 13, 19, 11, 1030, 11458, 13, 50882, 50882, 639, 2146, 5112, 385, 11, 731, 11, 341, 2522, 307, 1017, 365, 2281, 1958, 13, 21, 51048, 51048, 420, 1722, 365, 2281, 502, 13, 17, 11, 420, 2035, 11, 1030, 11458, 11, 1030, 11458, 13, 51318, 51318, 639, 2146, 307, 516, 281, 976, 385, 733, 51402, 51402, 295, 7226, 1090, 2281, 337, 1203, 11, 51486, 51486, 570, 300, 1177, 380, 574, 665, 13, 51584, 51584, 10635, 337, 341, 2146, 13, 51696, 51696, 2264, 11, 370, 341, 307, 264, 4846, 3256, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.3032867076785065, "compression_ratio": 1.7606837606837606, "no_speech_prob": 1.4737905075890012e-05}, {"id": 1013, "seek": 302372, "start": 3046.16, "end": 3048.12, "text": " because that doesn't look good.", "tokens": [50364, 6947, 295, 729, 3754, 36170, 14725, 257, 1329, 295, 1266, 13444, 13, 50574, 50574, 407, 341, 2146, 5112, 385, 341, 307, 502, 365, 2281, 1958, 13, 16, 13, 50734, 50734, 639, 307, 1017, 365, 2281, 568, 13, 19, 11, 1030, 11458, 13, 50882, 50882, 639, 2146, 5112, 385, 11, 731, 11, 341, 2522, 307, 1017, 365, 2281, 1958, 13, 21, 51048, 51048, 420, 1722, 365, 2281, 502, 13, 17, 11, 420, 2035, 11, 1030, 11458, 11, 1030, 11458, 13, 51318, 51318, 639, 2146, 307, 516, 281, 976, 385, 733, 51402, 51402, 295, 7226, 1090, 2281, 337, 1203, 11, 51486, 51486, 570, 300, 1177, 380, 574, 665, 13, 51584, 51584, 10635, 337, 341, 2146, 13, 51696, 51696, 2264, 11, 370, 341, 307, 264, 4846, 3256, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.3032867076785065, "compression_ratio": 1.7606837606837606, "no_speech_prob": 1.4737905075890012e-05}, {"id": 1014, "seek": 302372, "start": 3048.12, "end": 3050.3599999999997, "text": " Same for this guy.", "tokens": [50364, 6947, 295, 729, 3754, 36170, 14725, 257, 1329, 295, 1266, 13444, 13, 50574, 50574, 407, 341, 2146, 5112, 385, 341, 307, 502, 365, 2281, 1958, 13, 16, 13, 50734, 50734, 639, 307, 1017, 365, 2281, 568, 13, 19, 11, 1030, 11458, 13, 50882, 50882, 639, 2146, 5112, 385, 11, 731, 11, 341, 2522, 307, 1017, 365, 2281, 1958, 13, 21, 51048, 51048, 420, 1722, 365, 2281, 502, 13, 17, 11, 420, 2035, 11, 1030, 11458, 11, 1030, 11458, 13, 51318, 51318, 639, 2146, 307, 516, 281, 976, 385, 733, 51402, 51402, 295, 7226, 1090, 2281, 337, 1203, 11, 51486, 51486, 570, 300, 1177, 380, 574, 665, 13, 51584, 51584, 10635, 337, 341, 2146, 13, 51696, 51696, 2264, 11, 370, 341, 307, 264, 4846, 3256, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.3032867076785065, "compression_ratio": 1.7606837606837606, "no_speech_prob": 1.4737905075890012e-05}, {"id": 1015, "seek": 302372, "start": 3050.3599999999997, "end": 3052.12, "text": " OK, so this is the input image.", "tokens": [50364, 6947, 295, 729, 3754, 36170, 14725, 257, 1329, 295, 1266, 13444, 13, 50574, 50574, 407, 341, 2146, 5112, 385, 341, 307, 502, 365, 2281, 1958, 13, 16, 13, 50734, 50734, 639, 307, 1017, 365, 2281, 568, 13, 19, 11, 1030, 11458, 13, 50882, 50882, 639, 2146, 5112, 385, 11, 731, 11, 341, 2522, 307, 1017, 365, 2281, 1958, 13, 21, 51048, 51048, 420, 1722, 365, 2281, 502, 13, 17, 11, 420, 2035, 11, 1030, 11458, 11, 1030, 11458, 13, 51318, 51318, 639, 2146, 307, 516, 281, 976, 385, 733, 51402, 51402, 295, 7226, 1090, 2281, 337, 1203, 11, 51486, 51486, 570, 300, 1177, 380, 574, 665, 13, 51584, 51584, 10635, 337, 341, 2146, 13, 51696, 51696, 2264, 11, 370, 341, 307, 264, 4846, 3256, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.3032867076785065, "compression_ratio": 1.7606837606837606, "no_speech_prob": 1.4737905075890012e-05}, {"id": 1016, "seek": 305212, "start": 3052.12, "end": 3053.92, "text": " OK?", "tokens": [50364, 2264, 30, 50454, 50454, 407, 586, 286, 483, 257, 4295, 510, 13, 50570, 50570, 400, 519, 295, 309, 382, 733, 295, 257, 3657, 1254, 295, 40863, 11, 558, 30, 50704, 50704, 467, 311, 257, 637, 11668, 40863, 11, 534, 13, 50790, 50790, 2264, 30, 50824, 50824, 467, 311, 746, 300, 1619, 309, 311, 257, 40863, 50978, 50978, 300, 11, 337, 1184, 1944, 11694, 295, 341, 7006, 11, 51164, 51164, 5112, 385, 264, 2063, 295, 300, 7006, 13, 51358, 51358, 407, 309, 311, 544, 411, 257, 7316, 670, 10688, 830, 11, 498, 291, 528, 13, 51564, 51564, 2264, 30, 51620, 51620, 1610, 3565, 7316, 13, 51660, 51660, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 51780], "temperature": 0.0, "avg_logprob": -0.20298707189638754, "compression_ratio": 1.613821138211382, "no_speech_prob": 7.2958819146151654e-06}, {"id": 1017, "seek": 305212, "start": 3053.92, "end": 3056.24, "text": " So now I get a graph here.", "tokens": [50364, 2264, 30, 50454, 50454, 407, 586, 286, 483, 257, 4295, 510, 13, 50570, 50570, 400, 519, 295, 309, 382, 733, 295, 257, 3657, 1254, 295, 40863, 11, 558, 30, 50704, 50704, 467, 311, 257, 637, 11668, 40863, 11, 534, 13, 50790, 50790, 2264, 30, 50824, 50824, 467, 311, 746, 300, 1619, 309, 311, 257, 40863, 50978, 50978, 300, 11, 337, 1184, 1944, 11694, 295, 341, 7006, 11, 51164, 51164, 5112, 385, 264, 2063, 295, 300, 7006, 13, 51358, 51358, 407, 309, 311, 544, 411, 257, 7316, 670, 10688, 830, 11, 498, 291, 528, 13, 51564, 51564, 2264, 30, 51620, 51620, 1610, 3565, 7316, 13, 51660, 51660, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 51780], "temperature": 0.0, "avg_logprob": -0.20298707189638754, "compression_ratio": 1.613821138211382, "no_speech_prob": 7.2958819146151654e-06}, {"id": 1018, "seek": 305212, "start": 3056.24, "end": 3058.92, "text": " And think of it as kind of a weird form of tensor, right?", "tokens": [50364, 2264, 30, 50454, 50454, 407, 586, 286, 483, 257, 4295, 510, 13, 50570, 50570, 400, 519, 295, 309, 382, 733, 295, 257, 3657, 1254, 295, 40863, 11, 558, 30, 50704, 50704, 467, 311, 257, 637, 11668, 40863, 11, 534, 13, 50790, 50790, 2264, 30, 50824, 50824, 467, 311, 746, 300, 1619, 309, 311, 257, 40863, 50978, 50978, 300, 11, 337, 1184, 1944, 11694, 295, 341, 7006, 11, 51164, 51164, 5112, 385, 264, 2063, 295, 300, 7006, 13, 51358, 51358, 407, 309, 311, 544, 411, 257, 7316, 670, 10688, 830, 11, 498, 291, 528, 13, 51564, 51564, 2264, 30, 51620, 51620, 1610, 3565, 7316, 13, 51660, 51660, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 51780], "temperature": 0.0, "avg_logprob": -0.20298707189638754, "compression_ratio": 1.613821138211382, "no_speech_prob": 7.2958819146151654e-06}, {"id": 1019, "seek": 305212, "start": 3058.92, "end": 3060.64, "text": " It's a sparse tensor, really.", "tokens": [50364, 2264, 30, 50454, 50454, 407, 586, 286, 483, 257, 4295, 510, 13, 50570, 50570, 400, 519, 295, 309, 382, 733, 295, 257, 3657, 1254, 295, 40863, 11, 558, 30, 50704, 50704, 467, 311, 257, 637, 11668, 40863, 11, 534, 13, 50790, 50790, 2264, 30, 50824, 50824, 467, 311, 746, 300, 1619, 309, 311, 257, 40863, 50978, 50978, 300, 11, 337, 1184, 1944, 11694, 295, 341, 7006, 11, 51164, 51164, 5112, 385, 264, 2063, 295, 300, 7006, 13, 51358, 51358, 407, 309, 311, 544, 411, 257, 7316, 670, 10688, 830, 11, 498, 291, 528, 13, 51564, 51564, 2264, 30, 51620, 51620, 1610, 3565, 7316, 13, 51660, 51660, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 51780], "temperature": 0.0, "avg_logprob": -0.20298707189638754, "compression_ratio": 1.613821138211382, "no_speech_prob": 7.2958819146151654e-06}, {"id": 1020, "seek": 305212, "start": 3060.64, "end": 3061.3199999999997, "text": " OK?", "tokens": [50364, 2264, 30, 50454, 50454, 407, 586, 286, 483, 257, 4295, 510, 13, 50570, 50570, 400, 519, 295, 309, 382, 733, 295, 257, 3657, 1254, 295, 40863, 11, 558, 30, 50704, 50704, 467, 311, 257, 637, 11668, 40863, 11, 534, 13, 50790, 50790, 2264, 30, 50824, 50824, 467, 311, 746, 300, 1619, 309, 311, 257, 40863, 50978, 50978, 300, 11, 337, 1184, 1944, 11694, 295, 341, 7006, 11, 51164, 51164, 5112, 385, 264, 2063, 295, 300, 7006, 13, 51358, 51358, 407, 309, 311, 544, 411, 257, 7316, 670, 10688, 830, 11, 498, 291, 528, 13, 51564, 51564, 2264, 30, 51620, 51620, 1610, 3565, 7316, 13, 51660, 51660, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 51780], "temperature": 0.0, "avg_logprob": -0.20298707189638754, "compression_ratio": 1.613821138211382, "no_speech_prob": 7.2958819146151654e-06}, {"id": 1021, "seek": 305212, "start": 3061.3199999999997, "end": 3064.4, "text": " It's something that says it's a tensor", "tokens": [50364, 2264, 30, 50454, 50454, 407, 586, 286, 483, 257, 4295, 510, 13, 50570, 50570, 400, 519, 295, 309, 382, 733, 295, 257, 3657, 1254, 295, 40863, 11, 558, 30, 50704, 50704, 467, 311, 257, 637, 11668, 40863, 11, 534, 13, 50790, 50790, 2264, 30, 50824, 50824, 467, 311, 746, 300, 1619, 309, 311, 257, 40863, 50978, 50978, 300, 11, 337, 1184, 1944, 11694, 295, 341, 7006, 11, 51164, 51164, 5112, 385, 264, 2063, 295, 300, 7006, 13, 51358, 51358, 407, 309, 311, 544, 411, 257, 7316, 670, 10688, 830, 11, 498, 291, 528, 13, 51564, 51564, 2264, 30, 51620, 51620, 1610, 3565, 7316, 13, 51660, 51660, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 51780], "temperature": 0.0, "avg_logprob": -0.20298707189638754, "compression_ratio": 1.613821138211382, "no_speech_prob": 7.2958819146151654e-06}, {"id": 1022, "seek": 305212, "start": 3064.4, "end": 3068.12, "text": " that, for each possible configuration of this variable,", "tokens": [50364, 2264, 30, 50454, 50454, 407, 586, 286, 483, 257, 4295, 510, 13, 50570, 50570, 400, 519, 295, 309, 382, 733, 295, 257, 3657, 1254, 295, 40863, 11, 558, 30, 50704, 50704, 467, 311, 257, 637, 11668, 40863, 11, 534, 13, 50790, 50790, 2264, 30, 50824, 50824, 467, 311, 746, 300, 1619, 309, 311, 257, 40863, 50978, 50978, 300, 11, 337, 1184, 1944, 11694, 295, 341, 7006, 11, 51164, 51164, 5112, 385, 264, 2063, 295, 300, 7006, 13, 51358, 51358, 407, 309, 311, 544, 411, 257, 7316, 670, 10688, 830, 11, 498, 291, 528, 13, 51564, 51564, 2264, 30, 51620, 51620, 1610, 3565, 7316, 13, 51660, 51660, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 51780], "temperature": 0.0, "avg_logprob": -0.20298707189638754, "compression_ratio": 1.613821138211382, "no_speech_prob": 7.2958819146151654e-06}, {"id": 1023, "seek": 305212, "start": 3068.12, "end": 3072.0, "text": " tells me the cost of that variable.", "tokens": [50364, 2264, 30, 50454, 50454, 407, 586, 286, 483, 257, 4295, 510, 13, 50570, 50570, 400, 519, 295, 309, 382, 733, 295, 257, 3657, 1254, 295, 40863, 11, 558, 30, 50704, 50704, 467, 311, 257, 637, 11668, 40863, 11, 534, 13, 50790, 50790, 2264, 30, 50824, 50824, 467, 311, 746, 300, 1619, 309, 311, 257, 40863, 50978, 50978, 300, 11, 337, 1184, 1944, 11694, 295, 341, 7006, 11, 51164, 51164, 5112, 385, 264, 2063, 295, 300, 7006, 13, 51358, 51358, 407, 309, 311, 544, 411, 257, 7316, 670, 10688, 830, 11, 498, 291, 528, 13, 51564, 51564, 2264, 30, 51620, 51620, 1610, 3565, 7316, 13, 51660, 51660, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 51780], "temperature": 0.0, "avg_logprob": -0.20298707189638754, "compression_ratio": 1.613821138211382, "no_speech_prob": 7.2958819146151654e-06}, {"id": 1024, "seek": 305212, "start": 3072.0, "end": 3076.12, "text": " So it's more like a distribution over tensors, if you want.", "tokens": [50364, 2264, 30, 50454, 50454, 407, 586, 286, 483, 257, 4295, 510, 13, 50570, 50570, 400, 519, 295, 309, 382, 733, 295, 257, 3657, 1254, 295, 40863, 11, 558, 30, 50704, 50704, 467, 311, 257, 637, 11668, 40863, 11, 534, 13, 50790, 50790, 2264, 30, 50824, 50824, 467, 311, 746, 300, 1619, 309, 311, 257, 40863, 50978, 50978, 300, 11, 337, 1184, 1944, 11694, 295, 341, 7006, 11, 51164, 51164, 5112, 385, 264, 2063, 295, 300, 7006, 13, 51358, 51358, 407, 309, 311, 544, 411, 257, 7316, 670, 10688, 830, 11, 498, 291, 528, 13, 51564, 51564, 2264, 30, 51620, 51620, 1610, 3565, 7316, 13, 51660, 51660, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 51780], "temperature": 0.0, "avg_logprob": -0.20298707189638754, "compression_ratio": 1.613821138211382, "no_speech_prob": 7.2958819146151654e-06}, {"id": 1025, "seek": 305212, "start": 3076.12, "end": 3077.24, "text": " OK?", "tokens": [50364, 2264, 30, 50454, 50454, 407, 586, 286, 483, 257, 4295, 510, 13, 50570, 50570, 400, 519, 295, 309, 382, 733, 295, 257, 3657, 1254, 295, 40863, 11, 558, 30, 50704, 50704, 467, 311, 257, 637, 11668, 40863, 11, 534, 13, 50790, 50790, 2264, 30, 50824, 50824, 467, 311, 746, 300, 1619, 309, 311, 257, 40863, 50978, 50978, 300, 11, 337, 1184, 1944, 11694, 295, 341, 7006, 11, 51164, 51164, 5112, 385, 264, 2063, 295, 300, 7006, 13, 51358, 51358, 407, 309, 311, 544, 411, 257, 7316, 670, 10688, 830, 11, 498, 291, 528, 13, 51564, 51564, 2264, 30, 51620, 51620, 1610, 3565, 7316, 13, 51660, 51660, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 51780], "temperature": 0.0, "avg_logprob": -0.20298707189638754, "compression_ratio": 1.613821138211382, "no_speech_prob": 7.2958819146151654e-06}, {"id": 1026, "seek": 305212, "start": 3077.24, "end": 3078.04, "text": " Or log distribution.", "tokens": [50364, 2264, 30, 50454, 50454, 407, 586, 286, 483, 257, 4295, 510, 13, 50570, 50570, 400, 519, 295, 309, 382, 733, 295, 257, 3657, 1254, 295, 40863, 11, 558, 30, 50704, 50704, 467, 311, 257, 637, 11668, 40863, 11, 534, 13, 50790, 50790, 2264, 30, 50824, 50824, 467, 311, 746, 300, 1619, 309, 311, 257, 40863, 50978, 50978, 300, 11, 337, 1184, 1944, 11694, 295, 341, 7006, 11, 51164, 51164, 5112, 385, 264, 2063, 295, 300, 7006, 13, 51358, 51358, 407, 309, 311, 544, 411, 257, 7316, 670, 10688, 830, 11, 498, 291, 528, 13, 51564, 51564, 2264, 30, 51620, 51620, 1610, 3565, 7316, 13, 51660, 51660, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 51780], "temperature": 0.0, "avg_logprob": -0.20298707189638754, "compression_ratio": 1.613821138211382, "no_speech_prob": 7.2958819146151654e-06}, {"id": 1027, "seek": 307804, "start": 3078.04, "end": 3084.24, "text": " It's not normalized, because we're talking about energies.", "tokens": [50364, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 50674, 50674, 2264, 11, 550, 286, 747, 341, 4295, 13, 50792, 50792, 400, 286, 528, 281, 14722, 264, 2281, 295, 264, 3006, 1867, 11, 50996, 50996, 570, 286, 1062, 528, 281, 3847, 264, 1185, 11, 558, 30, 51172, 51172, 407, 286, 478, 3585, 291, 11, 264, 3006, 1867, 307, 805, 11, 1017, 13, 51340, 51340, 13638, 1951, 729, 14518, 264, 472, 300, 767, 1619, 805, 11, 1017, 13, 51548, 51548, 2264, 11, 293, 456, 311, 732, 295, 552, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.14722396449038858, "compression_ratio": 1.5497630331753554, "no_speech_prob": 1.618644455447793e-05}, {"id": 1028, "seek": 307804, "start": 3084.24, "end": 3086.6, "text": " OK, then I take this graph.", "tokens": [50364, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 50674, 50674, 2264, 11, 550, 286, 747, 341, 4295, 13, 50792, 50792, 400, 286, 528, 281, 14722, 264, 2281, 295, 264, 3006, 1867, 11, 50996, 50996, 570, 286, 1062, 528, 281, 3847, 264, 1185, 11, 558, 30, 51172, 51172, 407, 286, 478, 3585, 291, 11, 264, 3006, 1867, 307, 805, 11, 1017, 13, 51340, 51340, 13638, 1951, 729, 14518, 264, 472, 300, 767, 1619, 805, 11, 1017, 13, 51548, 51548, 2264, 11, 293, 456, 311, 732, 295, 552, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.14722396449038858, "compression_ratio": 1.5497630331753554, "no_speech_prob": 1.618644455447793e-05}, {"id": 1029, "seek": 307804, "start": 3086.6, "end": 3090.68, "text": " And I want to compute the energy of the correct answer,", "tokens": [50364, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 50674, 50674, 2264, 11, 550, 286, 747, 341, 4295, 13, 50792, 50792, 400, 286, 528, 281, 14722, 264, 2281, 295, 264, 3006, 1867, 11, 50996, 50996, 570, 286, 1062, 528, 281, 3847, 264, 1185, 11, 558, 30, 51172, 51172, 407, 286, 478, 3585, 291, 11, 264, 3006, 1867, 307, 805, 11, 1017, 13, 51340, 51340, 13638, 1951, 729, 14518, 264, 472, 300, 767, 1619, 805, 11, 1017, 13, 51548, 51548, 2264, 11, 293, 456, 311, 732, 295, 552, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.14722396449038858, "compression_ratio": 1.5497630331753554, "no_speech_prob": 1.618644455447793e-05}, {"id": 1030, "seek": 307804, "start": 3090.68, "end": 3094.2, "text": " because I might want to train the system, right?", "tokens": [50364, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 50674, 50674, 2264, 11, 550, 286, 747, 341, 4295, 13, 50792, 50792, 400, 286, 528, 281, 14722, 264, 2281, 295, 264, 3006, 1867, 11, 50996, 50996, 570, 286, 1062, 528, 281, 3847, 264, 1185, 11, 558, 30, 51172, 51172, 407, 286, 478, 3585, 291, 11, 264, 3006, 1867, 307, 805, 11, 1017, 13, 51340, 51340, 13638, 1951, 729, 14518, 264, 472, 300, 767, 1619, 805, 11, 1017, 13, 51548, 51548, 2264, 11, 293, 456, 311, 732, 295, 552, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.14722396449038858, "compression_ratio": 1.5497630331753554, "no_speech_prob": 1.618644455447793e-05}, {"id": 1031, "seek": 307804, "start": 3094.2, "end": 3097.56, "text": " So I'm telling you, the correct answer is 3, 4.", "tokens": [50364, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 50674, 50674, 2264, 11, 550, 286, 747, 341, 4295, 13, 50792, 50792, 400, 286, 528, 281, 14722, 264, 2281, 295, 264, 3006, 1867, 11, 50996, 50996, 570, 286, 1062, 528, 281, 3847, 264, 1185, 11, 558, 30, 51172, 51172, 407, 286, 478, 3585, 291, 11, 264, 3006, 1867, 307, 805, 11, 1017, 13, 51340, 51340, 13638, 1951, 729, 14518, 264, 472, 300, 767, 1619, 805, 11, 1017, 13, 51548, 51548, 2264, 11, 293, 456, 311, 732, 295, 552, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.14722396449038858, "compression_ratio": 1.5497630331753554, "no_speech_prob": 1.618644455447793e-05}, {"id": 1032, "seek": 307804, "start": 3097.56, "end": 3101.72, "text": " Select within those paths the one that actually says 3, 4.", "tokens": [50364, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 50674, 50674, 2264, 11, 550, 286, 747, 341, 4295, 13, 50792, 50792, 400, 286, 528, 281, 14722, 264, 2281, 295, 264, 3006, 1867, 11, 50996, 50996, 570, 286, 1062, 528, 281, 3847, 264, 1185, 11, 558, 30, 51172, 51172, 407, 286, 478, 3585, 291, 11, 264, 3006, 1867, 307, 805, 11, 1017, 13, 51340, 51340, 13638, 1951, 729, 14518, 264, 472, 300, 767, 1619, 805, 11, 1017, 13, 51548, 51548, 2264, 11, 293, 456, 311, 732, 295, 552, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.14722396449038858, "compression_ratio": 1.5497630331753554, "no_speech_prob": 1.618644455447793e-05}, {"id": 1033, "seek": 307804, "start": 3101.72, "end": 3102.96, "text": " OK, and there's two of them.", "tokens": [50364, 467, 311, 406, 48704, 11, 570, 321, 434, 1417, 466, 25737, 13, 50674, 50674, 2264, 11, 550, 286, 747, 341, 4295, 13, 50792, 50792, 400, 286, 528, 281, 14722, 264, 2281, 295, 264, 3006, 1867, 11, 50996, 50996, 570, 286, 1062, 528, 281, 3847, 264, 1185, 11, 558, 30, 51172, 51172, 407, 286, 478, 3585, 291, 11, 264, 3006, 1867, 307, 805, 11, 1017, 13, 51340, 51340, 13638, 1951, 729, 14518, 264, 472, 300, 767, 1619, 805, 11, 1017, 13, 51548, 51548, 2264, 11, 293, 456, 311, 732, 295, 552, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.14722396449038858, "compression_ratio": 1.5497630331753554, "no_speech_prob": 1.618644455447793e-05}, {"id": 1034, "seek": 310296, "start": 3102.96, "end": 3108.16, "text": " There's 3, 4 with energy 0.1 plus 0.6.", "tokens": [50364, 821, 311, 805, 11, 1017, 365, 2281, 1958, 13, 16, 1804, 1958, 13, 21, 13, 50624, 50624, 400, 550, 456, 307, 805, 11, 1017, 365, 2281, 805, 13, 19, 1804, 568, 13, 19, 11, 50854, 50854, 597, 307, 709, 2946, 11, 558, 30, 50934, 50934, 407, 286, 483, 729, 732, 14518, 13, 51014, 51014, 400, 550, 3654, 729, 732, 14518, 11, 286, 1888, 264, 1151, 472, 11, 805, 11, 1017, 13, 51266, 51266, 2264, 30, 51290, 51290, 407, 286, 1907, 264, 1185, 11, 510, 307, 264, 3006, 1867, 13, 51418, 51418, 5303, 385, 264, 3100, 300, 575, 264, 12437, 2281, 11, 51546, 51546, 457, 1939, 2709, 385, 264, 3006, 1867, 13, 51656, 51656, 2264, 30, 51692, 51692, 407, 5006, 300, 3100, 307, 411, 46608, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10237514972686768, "compression_ratio": 1.7162162162162162, "no_speech_prob": 6.240439688554034e-06}, {"id": 1035, "seek": 310296, "start": 3108.16, "end": 3112.76, "text": " And then there is 3, 4 with energy 3.4 plus 2.4,", "tokens": [50364, 821, 311, 805, 11, 1017, 365, 2281, 1958, 13, 16, 1804, 1958, 13, 21, 13, 50624, 50624, 400, 550, 456, 307, 805, 11, 1017, 365, 2281, 805, 13, 19, 1804, 568, 13, 19, 11, 50854, 50854, 597, 307, 709, 2946, 11, 558, 30, 50934, 50934, 407, 286, 483, 729, 732, 14518, 13, 51014, 51014, 400, 550, 3654, 729, 732, 14518, 11, 286, 1888, 264, 1151, 472, 11, 805, 11, 1017, 13, 51266, 51266, 2264, 30, 51290, 51290, 407, 286, 1907, 264, 1185, 11, 510, 307, 264, 3006, 1867, 13, 51418, 51418, 5303, 385, 264, 3100, 300, 575, 264, 12437, 2281, 11, 51546, 51546, 457, 1939, 2709, 385, 264, 3006, 1867, 13, 51656, 51656, 2264, 30, 51692, 51692, 407, 5006, 300, 3100, 307, 411, 46608, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10237514972686768, "compression_ratio": 1.7162162162162162, "no_speech_prob": 6.240439688554034e-06}, {"id": 1036, "seek": 310296, "start": 3112.76, "end": 3114.36, "text": " which is much higher, right?", "tokens": [50364, 821, 311, 805, 11, 1017, 365, 2281, 1958, 13, 16, 1804, 1958, 13, 21, 13, 50624, 50624, 400, 550, 456, 307, 805, 11, 1017, 365, 2281, 805, 13, 19, 1804, 568, 13, 19, 11, 50854, 50854, 597, 307, 709, 2946, 11, 558, 30, 50934, 50934, 407, 286, 483, 729, 732, 14518, 13, 51014, 51014, 400, 550, 3654, 729, 732, 14518, 11, 286, 1888, 264, 1151, 472, 11, 805, 11, 1017, 13, 51266, 51266, 2264, 30, 51290, 51290, 407, 286, 1907, 264, 1185, 11, 510, 307, 264, 3006, 1867, 13, 51418, 51418, 5303, 385, 264, 3100, 300, 575, 264, 12437, 2281, 11, 51546, 51546, 457, 1939, 2709, 385, 264, 3006, 1867, 13, 51656, 51656, 2264, 30, 51692, 51692, 407, 5006, 300, 3100, 307, 411, 46608, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10237514972686768, "compression_ratio": 1.7162162162162162, "no_speech_prob": 6.240439688554034e-06}, {"id": 1037, "seek": 310296, "start": 3114.36, "end": 3115.96, "text": " So I get those two paths.", "tokens": [50364, 821, 311, 805, 11, 1017, 365, 2281, 1958, 13, 16, 1804, 1958, 13, 21, 13, 50624, 50624, 400, 550, 456, 307, 805, 11, 1017, 365, 2281, 805, 13, 19, 1804, 568, 13, 19, 11, 50854, 50854, 597, 307, 709, 2946, 11, 558, 30, 50934, 50934, 407, 286, 483, 729, 732, 14518, 13, 51014, 51014, 400, 550, 3654, 729, 732, 14518, 11, 286, 1888, 264, 1151, 472, 11, 805, 11, 1017, 13, 51266, 51266, 2264, 30, 51290, 51290, 407, 286, 1907, 264, 1185, 11, 510, 307, 264, 3006, 1867, 13, 51418, 51418, 5303, 385, 264, 3100, 300, 575, 264, 12437, 2281, 11, 51546, 51546, 457, 1939, 2709, 385, 264, 3006, 1867, 13, 51656, 51656, 2264, 30, 51692, 51692, 407, 5006, 300, 3100, 307, 411, 46608, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10237514972686768, "compression_ratio": 1.7162162162162162, "no_speech_prob": 6.240439688554034e-06}, {"id": 1038, "seek": 310296, "start": 3115.96, "end": 3121.0, "text": " And then among those two paths, I pick the best one, 3, 4.", "tokens": [50364, 821, 311, 805, 11, 1017, 365, 2281, 1958, 13, 16, 1804, 1958, 13, 21, 13, 50624, 50624, 400, 550, 456, 307, 805, 11, 1017, 365, 2281, 805, 13, 19, 1804, 568, 13, 19, 11, 50854, 50854, 597, 307, 709, 2946, 11, 558, 30, 50934, 50934, 407, 286, 483, 729, 732, 14518, 13, 51014, 51014, 400, 550, 3654, 729, 732, 14518, 11, 286, 1888, 264, 1151, 472, 11, 805, 11, 1017, 13, 51266, 51266, 2264, 30, 51290, 51290, 407, 286, 1907, 264, 1185, 11, 510, 307, 264, 3006, 1867, 13, 51418, 51418, 5303, 385, 264, 3100, 300, 575, 264, 12437, 2281, 11, 51546, 51546, 457, 1939, 2709, 385, 264, 3006, 1867, 13, 51656, 51656, 2264, 30, 51692, 51692, 407, 5006, 300, 3100, 307, 411, 46608, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10237514972686768, "compression_ratio": 1.7162162162162162, "no_speech_prob": 6.240439688554034e-06}, {"id": 1039, "seek": 310296, "start": 3121.0, "end": 3121.48, "text": " OK?", "tokens": [50364, 821, 311, 805, 11, 1017, 365, 2281, 1958, 13, 16, 1804, 1958, 13, 21, 13, 50624, 50624, 400, 550, 456, 307, 805, 11, 1017, 365, 2281, 805, 13, 19, 1804, 568, 13, 19, 11, 50854, 50854, 597, 307, 709, 2946, 11, 558, 30, 50934, 50934, 407, 286, 483, 729, 732, 14518, 13, 51014, 51014, 400, 550, 3654, 729, 732, 14518, 11, 286, 1888, 264, 1151, 472, 11, 805, 11, 1017, 13, 51266, 51266, 2264, 30, 51290, 51290, 407, 286, 1907, 264, 1185, 11, 510, 307, 264, 3006, 1867, 13, 51418, 51418, 5303, 385, 264, 3100, 300, 575, 264, 12437, 2281, 11, 51546, 51546, 457, 1939, 2709, 385, 264, 3006, 1867, 13, 51656, 51656, 2264, 30, 51692, 51692, 407, 5006, 300, 3100, 307, 411, 46608, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10237514972686768, "compression_ratio": 1.7162162162162162, "no_speech_prob": 6.240439688554034e-06}, {"id": 1040, "seek": 310296, "start": 3121.48, "end": 3124.04, "text": " So I told the system, here is the correct answer.", "tokens": [50364, 821, 311, 805, 11, 1017, 365, 2281, 1958, 13, 16, 1804, 1958, 13, 21, 13, 50624, 50624, 400, 550, 456, 307, 805, 11, 1017, 365, 2281, 805, 13, 19, 1804, 568, 13, 19, 11, 50854, 50854, 597, 307, 709, 2946, 11, 558, 30, 50934, 50934, 407, 286, 483, 729, 732, 14518, 13, 51014, 51014, 400, 550, 3654, 729, 732, 14518, 11, 286, 1888, 264, 1151, 472, 11, 805, 11, 1017, 13, 51266, 51266, 2264, 30, 51290, 51290, 407, 286, 1907, 264, 1185, 11, 510, 307, 264, 3006, 1867, 13, 51418, 51418, 5303, 385, 264, 3100, 300, 575, 264, 12437, 2281, 11, 51546, 51546, 457, 1939, 2709, 385, 264, 3006, 1867, 13, 51656, 51656, 2264, 30, 51692, 51692, 407, 5006, 300, 3100, 307, 411, 46608, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10237514972686768, "compression_ratio": 1.7162162162162162, "no_speech_prob": 6.240439688554034e-06}, {"id": 1041, "seek": 310296, "start": 3124.04, "end": 3126.6, "text": " Give me the path that has the lowest energy,", "tokens": [50364, 821, 311, 805, 11, 1017, 365, 2281, 1958, 13, 16, 1804, 1958, 13, 21, 13, 50624, 50624, 400, 550, 456, 307, 805, 11, 1017, 365, 2281, 805, 13, 19, 1804, 568, 13, 19, 11, 50854, 50854, 597, 307, 709, 2946, 11, 558, 30, 50934, 50934, 407, 286, 483, 729, 732, 14518, 13, 51014, 51014, 400, 550, 3654, 729, 732, 14518, 11, 286, 1888, 264, 1151, 472, 11, 805, 11, 1017, 13, 51266, 51266, 2264, 30, 51290, 51290, 407, 286, 1907, 264, 1185, 11, 510, 307, 264, 3006, 1867, 13, 51418, 51418, 5303, 385, 264, 3100, 300, 575, 264, 12437, 2281, 11, 51546, 51546, 457, 1939, 2709, 385, 264, 3006, 1867, 13, 51656, 51656, 2264, 30, 51692, 51692, 407, 5006, 300, 3100, 307, 411, 46608, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10237514972686768, "compression_ratio": 1.7162162162162162, "no_speech_prob": 6.240439688554034e-06}, {"id": 1042, "seek": 310296, "start": 3126.6, "end": 3128.8, "text": " but yet gives me the correct answer.", "tokens": [50364, 821, 311, 805, 11, 1017, 365, 2281, 1958, 13, 16, 1804, 1958, 13, 21, 13, 50624, 50624, 400, 550, 456, 307, 805, 11, 1017, 365, 2281, 805, 13, 19, 1804, 568, 13, 19, 11, 50854, 50854, 597, 307, 709, 2946, 11, 558, 30, 50934, 50934, 407, 286, 483, 729, 732, 14518, 13, 51014, 51014, 400, 550, 3654, 729, 732, 14518, 11, 286, 1888, 264, 1151, 472, 11, 805, 11, 1017, 13, 51266, 51266, 2264, 30, 51290, 51290, 407, 286, 1907, 264, 1185, 11, 510, 307, 264, 3006, 1867, 13, 51418, 51418, 5303, 385, 264, 3100, 300, 575, 264, 12437, 2281, 11, 51546, 51546, 457, 1939, 2709, 385, 264, 3006, 1867, 13, 51656, 51656, 2264, 30, 51692, 51692, 407, 5006, 300, 3100, 307, 411, 46608, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10237514972686768, "compression_ratio": 1.7162162162162162, "no_speech_prob": 6.240439688554034e-06}, {"id": 1043, "seek": 310296, "start": 3128.8, "end": 3129.52, "text": " OK?", "tokens": [50364, 821, 311, 805, 11, 1017, 365, 2281, 1958, 13, 16, 1804, 1958, 13, 21, 13, 50624, 50624, 400, 550, 456, 307, 805, 11, 1017, 365, 2281, 805, 13, 19, 1804, 568, 13, 19, 11, 50854, 50854, 597, 307, 709, 2946, 11, 558, 30, 50934, 50934, 407, 286, 483, 729, 732, 14518, 13, 51014, 51014, 400, 550, 3654, 729, 732, 14518, 11, 286, 1888, 264, 1151, 472, 11, 805, 11, 1017, 13, 51266, 51266, 2264, 30, 51290, 51290, 407, 286, 1907, 264, 1185, 11, 510, 307, 264, 3006, 1867, 13, 51418, 51418, 5303, 385, 264, 3100, 300, 575, 264, 12437, 2281, 11, 51546, 51546, 457, 1939, 2709, 385, 264, 3006, 1867, 13, 51656, 51656, 2264, 30, 51692, 51692, 407, 5006, 300, 3100, 307, 411, 46608, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10237514972686768, "compression_ratio": 1.7162162162162162, "no_speech_prob": 6.240439688554034e-06}, {"id": 1044, "seek": 310296, "start": 3129.52, "end": 3132.32, "text": " So finding that path is like minimizing", "tokens": [50364, 821, 311, 805, 11, 1017, 365, 2281, 1958, 13, 16, 1804, 1958, 13, 21, 13, 50624, 50624, 400, 550, 456, 307, 805, 11, 1017, 365, 2281, 805, 13, 19, 1804, 568, 13, 19, 11, 50854, 50854, 597, 307, 709, 2946, 11, 558, 30, 50934, 50934, 407, 286, 483, 729, 732, 14518, 13, 51014, 51014, 400, 550, 3654, 729, 732, 14518, 11, 286, 1888, 264, 1151, 472, 11, 805, 11, 1017, 13, 51266, 51266, 2264, 30, 51290, 51290, 407, 286, 1907, 264, 1185, 11, 510, 307, 264, 3006, 1867, 13, 51418, 51418, 5303, 385, 264, 3100, 300, 575, 264, 12437, 2281, 11, 51546, 51546, 457, 1939, 2709, 385, 264, 3006, 1867, 13, 51656, 51656, 2264, 30, 51692, 51692, 407, 5006, 300, 3100, 307, 411, 46608, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10237514972686768, "compression_ratio": 1.7162162162162162, "no_speech_prob": 6.240439688554034e-06}, {"id": 1045, "seek": 313232, "start": 3132.32, "end": 3134.4, "text": " over a latent variable, where the latent variable is", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1046, "seek": 313232, "start": 3134.4, "end": 3136.48, "text": " which path you pick, right?", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1047, "seek": 313232, "start": 3136.48, "end": 3138.0800000000004, "text": " Because actually, it's an energy model,", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1048, "seek": 313232, "start": 3138.0800000000004, "end": 3140.8, "text": " where the latent variable is a path.", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1049, "seek": 313232, "start": 3140.8, "end": 3141.6800000000003, "text": " Professor?", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1050, "seek": 313232, "start": 3141.6800000000003, "end": 3142.2000000000003, "text": " Yes?", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1051, "seek": 313232, "start": 3142.2000000000003, "end": 3145.8, "text": " 3 or 4 in the graph should be labeled before training,", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1052, "seek": 313232, "start": 3145.8, "end": 3150.7200000000003, "text": " or that latent variable will figure out for the system?", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1053, "seek": 313232, "start": 3150.7200000000003, "end": 3153.4, "text": " So here, I'm putting myself in a situation", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1054, "seek": 313232, "start": 3153.4, "end": 3155.28, "text": " where I'm going to train the system supervised.", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1055, "seek": 313232, "start": 3155.28, "end": 3156.36, "text": " I know the correct answer.", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1056, "seek": 313232, "start": 3156.36, "end": 3157.44, "text": " This is the desired answer.", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1057, "seek": 313232, "start": 3157.44, "end": 3159.0800000000004, "text": " Think of this as a target.", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1058, "seek": 313232, "start": 3159.0800000000004, "end": 3159.5800000000004, "text": " OK?", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1059, "seek": 313232, "start": 3159.5800000000004, "end": 3161.52, "text": " So we just know the target, but I", "tokens": [50364, 670, 257, 48994, 7006, 11, 689, 264, 48994, 7006, 307, 50468, 50468, 597, 3100, 291, 1888, 11, 558, 30, 50572, 50572, 1436, 767, 11, 309, 311, 364, 2281, 2316, 11, 50652, 50652, 689, 264, 48994, 7006, 307, 257, 3100, 13, 50788, 50788, 8419, 30, 50832, 50832, 1079, 30, 50858, 50858, 805, 420, 1017, 294, 264, 4295, 820, 312, 21335, 949, 3097, 11, 51038, 51038, 420, 300, 48994, 7006, 486, 2573, 484, 337, 264, 1185, 30, 51284, 51284, 407, 510, 11, 286, 478, 3372, 2059, 294, 257, 2590, 51418, 51418, 689, 286, 478, 516, 281, 3847, 264, 1185, 46533, 13, 51512, 51512, 286, 458, 264, 3006, 1867, 13, 51566, 51566, 639, 307, 264, 14721, 1867, 13, 51620, 51620, 6557, 295, 341, 382, 257, 3779, 13, 51702, 51702, 2264, 30, 51727, 51727, 407, 321, 445, 458, 264, 3779, 11, 457, 286, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2339605318082796, "compression_ratio": 1.7553191489361701, "no_speech_prob": 1.8923936295323074e-05}, {"id": 1060, "seek": 316152, "start": 3161.52, "end": 3164.52, "text": " don't know which part is 3 and which part is 4.", "tokens": [50364, 500, 380, 458, 597, 644, 307, 805, 293, 597, 644, 307, 1017, 13, 50514, 50514, 1042, 11, 300, 311, 558, 13, 50544, 50544, 407, 321, 458, 437, 264, 3779, 307, 13, 50608, 50608, 492, 500, 380, 458, 597, 3100, 307, 264, 3006, 9469, 399, 13, 50826, 50826, 467, 727, 312, 341, 3100, 11, 420, 309, 727, 312, 300, 3100, 13, 50950, 51122, 400, 510, 11, 437, 321, 360, 307, 321, 445, 1888, 51208, 51208, 264, 472, 365, 264, 12437, 2281, 11, 597, 51280, 51280, 2011, 281, 312, 264, 3006, 472, 510, 13, 51444, 51444, 2264, 11, 370, 13, 51548, 51548, 1119, 341, 11150, 31782, 11, 307, 1184, 295, 613, 426, 11, 426, 2424, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.25845246395822297, "compression_ratio": 1.7085201793721974, "no_speech_prob": 5.771800260845339e-06}, {"id": 1061, "seek": 316152, "start": 3164.52, "end": 3165.12, "text": " Well, that's right.", "tokens": [50364, 500, 380, 458, 597, 644, 307, 805, 293, 597, 644, 307, 1017, 13, 50514, 50514, 1042, 11, 300, 311, 558, 13, 50544, 50544, 407, 321, 458, 437, 264, 3779, 307, 13, 50608, 50608, 492, 500, 380, 458, 597, 3100, 307, 264, 3006, 9469, 399, 13, 50826, 50826, 467, 727, 312, 341, 3100, 11, 420, 309, 727, 312, 300, 3100, 13, 50950, 51122, 400, 510, 11, 437, 321, 360, 307, 321, 445, 1888, 51208, 51208, 264, 472, 365, 264, 12437, 2281, 11, 597, 51280, 51280, 2011, 281, 312, 264, 3006, 472, 510, 13, 51444, 51444, 2264, 11, 370, 13, 51548, 51548, 1119, 341, 11150, 31782, 11, 307, 1184, 295, 613, 426, 11, 426, 2424, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.25845246395822297, "compression_ratio": 1.7085201793721974, "no_speech_prob": 5.771800260845339e-06}, {"id": 1062, "seek": 316152, "start": 3165.12, "end": 3166.4, "text": " So we know what the target is.", "tokens": [50364, 500, 380, 458, 597, 644, 307, 805, 293, 597, 644, 307, 1017, 13, 50514, 50514, 1042, 11, 300, 311, 558, 13, 50544, 50544, 407, 321, 458, 437, 264, 3779, 307, 13, 50608, 50608, 492, 500, 380, 458, 597, 3100, 307, 264, 3006, 9469, 399, 13, 50826, 50826, 467, 727, 312, 341, 3100, 11, 420, 309, 727, 312, 300, 3100, 13, 50950, 51122, 400, 510, 11, 437, 321, 360, 307, 321, 445, 1888, 51208, 51208, 264, 472, 365, 264, 12437, 2281, 11, 597, 51280, 51280, 2011, 281, 312, 264, 3006, 472, 510, 13, 51444, 51444, 2264, 11, 370, 13, 51548, 51548, 1119, 341, 11150, 31782, 11, 307, 1184, 295, 613, 426, 11, 426, 2424, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.25845246395822297, "compression_ratio": 1.7085201793721974, "no_speech_prob": 5.771800260845339e-06}, {"id": 1063, "seek": 316152, "start": 3166.4, "end": 3170.7599999999998, "text": " We don't know which path is the correct segmentation.", "tokens": [50364, 500, 380, 458, 597, 644, 307, 805, 293, 597, 644, 307, 1017, 13, 50514, 50514, 1042, 11, 300, 311, 558, 13, 50544, 50544, 407, 321, 458, 437, 264, 3779, 307, 13, 50608, 50608, 492, 500, 380, 458, 597, 3100, 307, 264, 3006, 9469, 399, 13, 50826, 50826, 467, 727, 312, 341, 3100, 11, 420, 309, 727, 312, 300, 3100, 13, 50950, 51122, 400, 510, 11, 437, 321, 360, 307, 321, 445, 1888, 51208, 51208, 264, 472, 365, 264, 12437, 2281, 11, 597, 51280, 51280, 2011, 281, 312, 264, 3006, 472, 510, 13, 51444, 51444, 2264, 11, 370, 13, 51548, 51548, 1119, 341, 11150, 31782, 11, 307, 1184, 295, 613, 426, 11, 426, 2424, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.25845246395822297, "compression_ratio": 1.7085201793721974, "no_speech_prob": 5.771800260845339e-06}, {"id": 1064, "seek": 316152, "start": 3170.7599999999998, "end": 3173.24, "text": " It could be this path, or it could be that path.", "tokens": [50364, 500, 380, 458, 597, 644, 307, 805, 293, 597, 644, 307, 1017, 13, 50514, 50514, 1042, 11, 300, 311, 558, 13, 50544, 50544, 407, 321, 458, 437, 264, 3779, 307, 13, 50608, 50608, 492, 500, 380, 458, 597, 3100, 307, 264, 3006, 9469, 399, 13, 50826, 50826, 467, 727, 312, 341, 3100, 11, 420, 309, 727, 312, 300, 3100, 13, 50950, 51122, 400, 510, 11, 437, 321, 360, 307, 321, 445, 1888, 51208, 51208, 264, 472, 365, 264, 12437, 2281, 11, 597, 51280, 51280, 2011, 281, 312, 264, 3006, 472, 510, 13, 51444, 51444, 2264, 11, 370, 13, 51548, 51548, 1119, 341, 11150, 31782, 11, 307, 1184, 295, 613, 426, 11, 426, 2424, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.25845246395822297, "compression_ratio": 1.7085201793721974, "no_speech_prob": 5.771800260845339e-06}, {"id": 1065, "seek": 316152, "start": 3176.68, "end": 3178.4, "text": " And here, what we do is we just pick", "tokens": [50364, 500, 380, 458, 597, 644, 307, 805, 293, 597, 644, 307, 1017, 13, 50514, 50514, 1042, 11, 300, 311, 558, 13, 50544, 50544, 407, 321, 458, 437, 264, 3779, 307, 13, 50608, 50608, 492, 500, 380, 458, 597, 3100, 307, 264, 3006, 9469, 399, 13, 50826, 50826, 467, 727, 312, 341, 3100, 11, 420, 309, 727, 312, 300, 3100, 13, 50950, 51122, 400, 510, 11, 437, 321, 360, 307, 321, 445, 1888, 51208, 51208, 264, 472, 365, 264, 12437, 2281, 11, 597, 51280, 51280, 2011, 281, 312, 264, 3006, 472, 510, 13, 51444, 51444, 2264, 11, 370, 13, 51548, 51548, 1119, 341, 11150, 31782, 11, 307, 1184, 295, 613, 426, 11, 426, 2424, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.25845246395822297, "compression_ratio": 1.7085201793721974, "no_speech_prob": 5.771800260845339e-06}, {"id": 1066, "seek": 316152, "start": 3178.4, "end": 3179.84, "text": " the one with the lowest energy, which", "tokens": [50364, 500, 380, 458, 597, 644, 307, 805, 293, 597, 644, 307, 1017, 13, 50514, 50514, 1042, 11, 300, 311, 558, 13, 50544, 50544, 407, 321, 458, 437, 264, 3779, 307, 13, 50608, 50608, 492, 500, 380, 458, 597, 3100, 307, 264, 3006, 9469, 399, 13, 50826, 50826, 467, 727, 312, 341, 3100, 11, 420, 309, 727, 312, 300, 3100, 13, 50950, 51122, 400, 510, 11, 437, 321, 360, 307, 321, 445, 1888, 51208, 51208, 264, 472, 365, 264, 12437, 2281, 11, 597, 51280, 51280, 2011, 281, 312, 264, 3006, 472, 510, 13, 51444, 51444, 2264, 11, 370, 13, 51548, 51548, 1119, 341, 11150, 31782, 11, 307, 1184, 295, 613, 426, 11, 426, 2424, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.25845246395822297, "compression_ratio": 1.7085201793721974, "no_speech_prob": 5.771800260845339e-06}, {"id": 1067, "seek": 316152, "start": 3179.84, "end": 3183.12, "text": " happened to be the correct one here.", "tokens": [50364, 500, 380, 458, 597, 644, 307, 805, 293, 597, 644, 307, 1017, 13, 50514, 50514, 1042, 11, 300, 311, 558, 13, 50544, 50544, 407, 321, 458, 437, 264, 3779, 307, 13, 50608, 50608, 492, 500, 380, 458, 597, 3100, 307, 264, 3006, 9469, 399, 13, 50826, 50826, 467, 727, 312, 341, 3100, 11, 420, 309, 727, 312, 300, 3100, 13, 50950, 51122, 400, 510, 11, 437, 321, 360, 307, 321, 445, 1888, 51208, 51208, 264, 472, 365, 264, 12437, 2281, 11, 597, 51280, 51280, 2011, 281, 312, 264, 3006, 472, 510, 13, 51444, 51444, 2264, 11, 370, 13, 51548, 51548, 1119, 341, 11150, 31782, 11, 307, 1184, 295, 613, 426, 11, 426, 2424, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.25845246395822297, "compression_ratio": 1.7085201793721974, "no_speech_prob": 5.771800260845339e-06}, {"id": 1068, "seek": 316152, "start": 3183.12, "end": 3185.2, "text": " OK, so.", "tokens": [50364, 500, 380, 458, 597, 644, 307, 805, 293, 597, 644, 307, 1017, 13, 50514, 50514, 1042, 11, 300, 311, 558, 13, 50544, 50544, 407, 321, 458, 437, 264, 3779, 307, 13, 50608, 50608, 492, 500, 380, 458, 597, 3100, 307, 264, 3006, 9469, 399, 13, 50826, 50826, 467, 727, 312, 341, 3100, 11, 420, 309, 727, 312, 300, 3100, 13, 50950, 51122, 400, 510, 11, 437, 321, 360, 307, 321, 445, 1888, 51208, 51208, 264, 472, 365, 264, 12437, 2281, 11, 597, 51280, 51280, 2011, 281, 312, 264, 3006, 472, 510, 13, 51444, 51444, 2264, 11, 370, 13, 51548, 51548, 1119, 341, 11150, 31782, 11, 307, 1184, 295, 613, 426, 11, 426, 2424, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.25845246395822297, "compression_ratio": 1.7085201793721974, "no_speech_prob": 5.771800260845339e-06}, {"id": 1069, "seek": 316152, "start": 3185.2, "end": 3191.48, "text": " Is this recognition transformer, is each of these N, N box,", "tokens": [50364, 500, 380, 458, 597, 644, 307, 805, 293, 597, 644, 307, 1017, 13, 50514, 50514, 1042, 11, 300, 311, 558, 13, 50544, 50544, 407, 321, 458, 437, 264, 3779, 307, 13, 50608, 50608, 492, 500, 380, 458, 597, 3100, 307, 264, 3006, 9469, 399, 13, 50826, 50826, 467, 727, 312, 341, 3100, 11, 420, 309, 727, 312, 300, 3100, 13, 50950, 51122, 400, 510, 11, 437, 321, 360, 307, 321, 445, 1888, 51208, 51208, 264, 472, 365, 264, 12437, 2281, 11, 597, 51280, 51280, 2011, 281, 312, 264, 3006, 472, 510, 13, 51444, 51444, 2264, 11, 370, 13, 51548, 51548, 1119, 341, 11150, 31782, 11, 307, 1184, 295, 613, 426, 11, 426, 2424, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.25845246395822297, "compression_ratio": 1.7085201793721974, "no_speech_prob": 5.771800260845339e-06}, {"id": 1070, "seek": 319148, "start": 3191.48, "end": 3194.08, "text": " are each, are those all shared?", "tokens": [50364, 366, 1184, 11, 366, 729, 439, 5507, 30, 50494, 50494, 865, 13, 50536, 50536, 2264, 13, 50574, 50574, 865, 13, 50652, 50652, 639, 307, 3866, 14341, 295, 264, 912, 18161, 2533, 11, 558, 30, 50766, 50766, 467, 311, 445, 257, 2517, 11150, 18161, 2533, 50868, 50868, 294, 341, 1389, 13, 50894, 51050, 2264, 11, 586, 321, 362, 264, 2281, 295, 264, 3006, 1867, 13, 51204, 51204, 467, 311, 1958, 13, 22, 13, 51258, 51258, 467, 311, 264, 2408, 295, 1958, 13, 16, 293, 1958, 13, 21, 13, 51438, 51438, 2264, 30, 51504, 51504, 400, 437, 321, 643, 281, 360, 586, 307, 646, 79, 1513, 559, 473, 16235, 51644, 51644, 807, 341, 2302, 3877, 370, 300, 321, 51746, 51746, 393, 1319, 264, 17443, 295, 300, 18161, 2533, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1814068134014423, "compression_ratio": 1.6049382716049383, "no_speech_prob": 4.092835752089741e-06}, {"id": 1071, "seek": 319148, "start": 3194.08, "end": 3194.92, "text": " Yeah.", "tokens": [50364, 366, 1184, 11, 366, 729, 439, 5507, 30, 50494, 50494, 865, 13, 50536, 50536, 2264, 13, 50574, 50574, 865, 13, 50652, 50652, 639, 307, 3866, 14341, 295, 264, 912, 18161, 2533, 11, 558, 30, 50766, 50766, 467, 311, 445, 257, 2517, 11150, 18161, 2533, 50868, 50868, 294, 341, 1389, 13, 50894, 51050, 2264, 11, 586, 321, 362, 264, 2281, 295, 264, 3006, 1867, 13, 51204, 51204, 467, 311, 1958, 13, 22, 13, 51258, 51258, 467, 311, 264, 2408, 295, 1958, 13, 16, 293, 1958, 13, 21, 13, 51438, 51438, 2264, 30, 51504, 51504, 400, 437, 321, 643, 281, 360, 586, 307, 646, 79, 1513, 559, 473, 16235, 51644, 51644, 807, 341, 2302, 3877, 370, 300, 321, 51746, 51746, 393, 1319, 264, 17443, 295, 300, 18161, 2533, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1814068134014423, "compression_ratio": 1.6049382716049383, "no_speech_prob": 4.092835752089741e-06}, {"id": 1072, "seek": 319148, "start": 3194.92, "end": 3195.68, "text": " OK.", "tokens": [50364, 366, 1184, 11, 366, 729, 439, 5507, 30, 50494, 50494, 865, 13, 50536, 50536, 2264, 13, 50574, 50574, 865, 13, 50652, 50652, 639, 307, 3866, 14341, 295, 264, 912, 18161, 2533, 11, 558, 30, 50766, 50766, 467, 311, 445, 257, 2517, 11150, 18161, 2533, 50868, 50868, 294, 341, 1389, 13, 50894, 51050, 2264, 11, 586, 321, 362, 264, 2281, 295, 264, 3006, 1867, 13, 51204, 51204, 467, 311, 1958, 13, 22, 13, 51258, 51258, 467, 311, 264, 2408, 295, 1958, 13, 16, 293, 1958, 13, 21, 13, 51438, 51438, 2264, 30, 51504, 51504, 400, 437, 321, 643, 281, 360, 586, 307, 646, 79, 1513, 559, 473, 16235, 51644, 51644, 807, 341, 2302, 3877, 370, 300, 321, 51746, 51746, 393, 1319, 264, 17443, 295, 300, 18161, 2533, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1814068134014423, "compression_ratio": 1.6049382716049383, "no_speech_prob": 4.092835752089741e-06}, {"id": 1073, "seek": 319148, "start": 3195.68, "end": 3197.2400000000002, "text": " Yeah.", "tokens": [50364, 366, 1184, 11, 366, 729, 439, 5507, 30, 50494, 50494, 865, 13, 50536, 50536, 2264, 13, 50574, 50574, 865, 13, 50652, 50652, 639, 307, 3866, 14341, 295, 264, 912, 18161, 2533, 11, 558, 30, 50766, 50766, 467, 311, 445, 257, 2517, 11150, 18161, 2533, 50868, 50868, 294, 341, 1389, 13, 50894, 51050, 2264, 11, 586, 321, 362, 264, 2281, 295, 264, 3006, 1867, 13, 51204, 51204, 467, 311, 1958, 13, 22, 13, 51258, 51258, 467, 311, 264, 2408, 295, 1958, 13, 16, 293, 1958, 13, 21, 13, 51438, 51438, 2264, 30, 51504, 51504, 400, 437, 321, 643, 281, 360, 586, 307, 646, 79, 1513, 559, 473, 16235, 51644, 51644, 807, 341, 2302, 3877, 370, 300, 321, 51746, 51746, 393, 1319, 264, 17443, 295, 300, 18161, 2533, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1814068134014423, "compression_ratio": 1.6049382716049383, "no_speech_prob": 4.092835752089741e-06}, {"id": 1074, "seek": 319148, "start": 3197.2400000000002, "end": 3199.52, "text": " This is multiple copies of the same neural net, right?", "tokens": [50364, 366, 1184, 11, 366, 729, 439, 5507, 30, 50494, 50494, 865, 13, 50536, 50536, 2264, 13, 50574, 50574, 865, 13, 50652, 50652, 639, 307, 3866, 14341, 295, 264, 912, 18161, 2533, 11, 558, 30, 50766, 50766, 467, 311, 445, 257, 2517, 11150, 18161, 2533, 50868, 50868, 294, 341, 1389, 13, 50894, 51050, 2264, 11, 586, 321, 362, 264, 2281, 295, 264, 3006, 1867, 13, 51204, 51204, 467, 311, 1958, 13, 22, 13, 51258, 51258, 467, 311, 264, 2408, 295, 1958, 13, 16, 293, 1958, 13, 21, 13, 51438, 51438, 2264, 30, 51504, 51504, 400, 437, 321, 643, 281, 360, 586, 307, 646, 79, 1513, 559, 473, 16235, 51644, 51644, 807, 341, 2302, 3877, 370, 300, 321, 51746, 51746, 393, 1319, 264, 17443, 295, 300, 18161, 2533, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1814068134014423, "compression_ratio": 1.6049382716049383, "no_speech_prob": 4.092835752089741e-06}, {"id": 1075, "seek": 319148, "start": 3199.52, "end": 3201.56, "text": " It's just a character recognition neural net", "tokens": [50364, 366, 1184, 11, 366, 729, 439, 5507, 30, 50494, 50494, 865, 13, 50536, 50536, 2264, 13, 50574, 50574, 865, 13, 50652, 50652, 639, 307, 3866, 14341, 295, 264, 912, 18161, 2533, 11, 558, 30, 50766, 50766, 467, 311, 445, 257, 2517, 11150, 18161, 2533, 50868, 50868, 294, 341, 1389, 13, 50894, 51050, 2264, 11, 586, 321, 362, 264, 2281, 295, 264, 3006, 1867, 13, 51204, 51204, 467, 311, 1958, 13, 22, 13, 51258, 51258, 467, 311, 264, 2408, 295, 1958, 13, 16, 293, 1958, 13, 21, 13, 51438, 51438, 2264, 30, 51504, 51504, 400, 437, 321, 643, 281, 360, 586, 307, 646, 79, 1513, 559, 473, 16235, 51644, 51644, 807, 341, 2302, 3877, 370, 300, 321, 51746, 51746, 393, 1319, 264, 17443, 295, 300, 18161, 2533, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1814068134014423, "compression_ratio": 1.6049382716049383, "no_speech_prob": 4.092835752089741e-06}, {"id": 1076, "seek": 319148, "start": 3201.56, "end": 3202.08, "text": " in this case.", "tokens": [50364, 366, 1184, 11, 366, 729, 439, 5507, 30, 50494, 50494, 865, 13, 50536, 50536, 2264, 13, 50574, 50574, 865, 13, 50652, 50652, 639, 307, 3866, 14341, 295, 264, 912, 18161, 2533, 11, 558, 30, 50766, 50766, 467, 311, 445, 257, 2517, 11150, 18161, 2533, 50868, 50868, 294, 341, 1389, 13, 50894, 51050, 2264, 11, 586, 321, 362, 264, 2281, 295, 264, 3006, 1867, 13, 51204, 51204, 467, 311, 1958, 13, 22, 13, 51258, 51258, 467, 311, 264, 2408, 295, 1958, 13, 16, 293, 1958, 13, 21, 13, 51438, 51438, 2264, 30, 51504, 51504, 400, 437, 321, 643, 281, 360, 586, 307, 646, 79, 1513, 559, 473, 16235, 51644, 51644, 807, 341, 2302, 3877, 370, 300, 321, 51746, 51746, 393, 1319, 264, 17443, 295, 300, 18161, 2533, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1814068134014423, "compression_ratio": 1.6049382716049383, "no_speech_prob": 4.092835752089741e-06}, {"id": 1077, "seek": 319148, "start": 3205.2, "end": 3208.28, "text": " OK, now we have the energy of the correct answer.", "tokens": [50364, 366, 1184, 11, 366, 729, 439, 5507, 30, 50494, 50494, 865, 13, 50536, 50536, 2264, 13, 50574, 50574, 865, 13, 50652, 50652, 639, 307, 3866, 14341, 295, 264, 912, 18161, 2533, 11, 558, 30, 50766, 50766, 467, 311, 445, 257, 2517, 11150, 18161, 2533, 50868, 50868, 294, 341, 1389, 13, 50894, 51050, 2264, 11, 586, 321, 362, 264, 2281, 295, 264, 3006, 1867, 13, 51204, 51204, 467, 311, 1958, 13, 22, 13, 51258, 51258, 467, 311, 264, 2408, 295, 1958, 13, 16, 293, 1958, 13, 21, 13, 51438, 51438, 2264, 30, 51504, 51504, 400, 437, 321, 643, 281, 360, 586, 307, 646, 79, 1513, 559, 473, 16235, 51644, 51644, 807, 341, 2302, 3877, 370, 300, 321, 51746, 51746, 393, 1319, 264, 17443, 295, 300, 18161, 2533, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1814068134014423, "compression_ratio": 1.6049382716049383, "no_speech_prob": 4.092835752089741e-06}, {"id": 1078, "seek": 319148, "start": 3208.28, "end": 3209.36, "text": " It's 0.7.", "tokens": [50364, 366, 1184, 11, 366, 729, 439, 5507, 30, 50494, 50494, 865, 13, 50536, 50536, 2264, 13, 50574, 50574, 865, 13, 50652, 50652, 639, 307, 3866, 14341, 295, 264, 912, 18161, 2533, 11, 558, 30, 50766, 50766, 467, 311, 445, 257, 2517, 11150, 18161, 2533, 50868, 50868, 294, 341, 1389, 13, 50894, 51050, 2264, 11, 586, 321, 362, 264, 2281, 295, 264, 3006, 1867, 13, 51204, 51204, 467, 311, 1958, 13, 22, 13, 51258, 51258, 467, 311, 264, 2408, 295, 1958, 13, 16, 293, 1958, 13, 21, 13, 51438, 51438, 2264, 30, 51504, 51504, 400, 437, 321, 643, 281, 360, 586, 307, 646, 79, 1513, 559, 473, 16235, 51644, 51644, 807, 341, 2302, 3877, 370, 300, 321, 51746, 51746, 393, 1319, 264, 17443, 295, 300, 18161, 2533, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1814068134014423, "compression_ratio": 1.6049382716049383, "no_speech_prob": 4.092835752089741e-06}, {"id": 1079, "seek": 319148, "start": 3209.36, "end": 3212.96, "text": " It's the sum of 0.1 and 0.6.", "tokens": [50364, 366, 1184, 11, 366, 729, 439, 5507, 30, 50494, 50494, 865, 13, 50536, 50536, 2264, 13, 50574, 50574, 865, 13, 50652, 50652, 639, 307, 3866, 14341, 295, 264, 912, 18161, 2533, 11, 558, 30, 50766, 50766, 467, 311, 445, 257, 2517, 11150, 18161, 2533, 50868, 50868, 294, 341, 1389, 13, 50894, 51050, 2264, 11, 586, 321, 362, 264, 2281, 295, 264, 3006, 1867, 13, 51204, 51204, 467, 311, 1958, 13, 22, 13, 51258, 51258, 467, 311, 264, 2408, 295, 1958, 13, 16, 293, 1958, 13, 21, 13, 51438, 51438, 2264, 30, 51504, 51504, 400, 437, 321, 643, 281, 360, 586, 307, 646, 79, 1513, 559, 473, 16235, 51644, 51644, 807, 341, 2302, 3877, 370, 300, 321, 51746, 51746, 393, 1319, 264, 17443, 295, 300, 18161, 2533, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1814068134014423, "compression_ratio": 1.6049382716049383, "no_speech_prob": 4.092835752089741e-06}, {"id": 1080, "seek": 319148, "start": 3212.96, "end": 3214.28, "text": " OK?", "tokens": [50364, 366, 1184, 11, 366, 729, 439, 5507, 30, 50494, 50494, 865, 13, 50536, 50536, 2264, 13, 50574, 50574, 865, 13, 50652, 50652, 639, 307, 3866, 14341, 295, 264, 912, 18161, 2533, 11, 558, 30, 50766, 50766, 467, 311, 445, 257, 2517, 11150, 18161, 2533, 50868, 50868, 294, 341, 1389, 13, 50894, 51050, 2264, 11, 586, 321, 362, 264, 2281, 295, 264, 3006, 1867, 13, 51204, 51204, 467, 311, 1958, 13, 22, 13, 51258, 51258, 467, 311, 264, 2408, 295, 1958, 13, 16, 293, 1958, 13, 21, 13, 51438, 51438, 2264, 30, 51504, 51504, 400, 437, 321, 643, 281, 360, 586, 307, 646, 79, 1513, 559, 473, 16235, 51644, 51644, 807, 341, 2302, 3877, 370, 300, 321, 51746, 51746, 393, 1319, 264, 17443, 295, 300, 18161, 2533, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1814068134014423, "compression_ratio": 1.6049382716049383, "no_speech_prob": 4.092835752089741e-06}, {"id": 1081, "seek": 319148, "start": 3214.28, "end": 3217.08, "text": " And what we need to do now is backpropagate gradient", "tokens": [50364, 366, 1184, 11, 366, 729, 439, 5507, 30, 50494, 50494, 865, 13, 50536, 50536, 2264, 13, 50574, 50574, 865, 13, 50652, 50652, 639, 307, 3866, 14341, 295, 264, 912, 18161, 2533, 11, 558, 30, 50766, 50766, 467, 311, 445, 257, 2517, 11150, 18161, 2533, 50868, 50868, 294, 341, 1389, 13, 50894, 51050, 2264, 11, 586, 321, 362, 264, 2281, 295, 264, 3006, 1867, 13, 51204, 51204, 467, 311, 1958, 13, 22, 13, 51258, 51258, 467, 311, 264, 2408, 295, 1958, 13, 16, 293, 1958, 13, 21, 13, 51438, 51438, 2264, 30, 51504, 51504, 400, 437, 321, 643, 281, 360, 586, 307, 646, 79, 1513, 559, 473, 16235, 51644, 51644, 807, 341, 2302, 3877, 370, 300, 321, 51746, 51746, 393, 1319, 264, 17443, 295, 300, 18161, 2533, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1814068134014423, "compression_ratio": 1.6049382716049383, "no_speech_prob": 4.092835752089741e-06}, {"id": 1082, "seek": 319148, "start": 3217.08, "end": 3219.12, "text": " through this entire structure so that we", "tokens": [50364, 366, 1184, 11, 366, 729, 439, 5507, 30, 50494, 50494, 865, 13, 50536, 50536, 2264, 13, 50574, 50574, 865, 13, 50652, 50652, 639, 307, 3866, 14341, 295, 264, 912, 18161, 2533, 11, 558, 30, 50766, 50766, 467, 311, 445, 257, 2517, 11150, 18161, 2533, 50868, 50868, 294, 341, 1389, 13, 50894, 51050, 2264, 11, 586, 321, 362, 264, 2281, 295, 264, 3006, 1867, 13, 51204, 51204, 467, 311, 1958, 13, 22, 13, 51258, 51258, 467, 311, 264, 2408, 295, 1958, 13, 16, 293, 1958, 13, 21, 13, 51438, 51438, 2264, 30, 51504, 51504, 400, 437, 321, 643, 281, 360, 586, 307, 646, 79, 1513, 559, 473, 16235, 51644, 51644, 807, 341, 2302, 3877, 370, 300, 321, 51746, 51746, 393, 1319, 264, 17443, 295, 300, 18161, 2533, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1814068134014423, "compression_ratio": 1.6049382716049383, "no_speech_prob": 4.092835752089741e-06}, {"id": 1083, "seek": 319148, "start": 3219.12, "end": 3221.2400000000002, "text": " can change the weights of that neural net", "tokens": [50364, 366, 1184, 11, 366, 729, 439, 5507, 30, 50494, 50494, 865, 13, 50536, 50536, 2264, 13, 50574, 50574, 865, 13, 50652, 50652, 639, 307, 3866, 14341, 295, 264, 912, 18161, 2533, 11, 558, 30, 50766, 50766, 467, 311, 445, 257, 2517, 11150, 18161, 2533, 50868, 50868, 294, 341, 1389, 13, 50894, 51050, 2264, 11, 586, 321, 362, 264, 2281, 295, 264, 3006, 1867, 13, 51204, 51204, 467, 311, 1958, 13, 22, 13, 51258, 51258, 467, 311, 264, 2408, 295, 1958, 13, 16, 293, 1958, 13, 21, 13, 51438, 51438, 2264, 30, 51504, 51504, 400, 437, 321, 643, 281, 360, 586, 307, 646, 79, 1513, 559, 473, 16235, 51644, 51644, 807, 341, 2302, 3877, 370, 300, 321, 51746, 51746, 393, 1319, 264, 17443, 295, 300, 18161, 2533, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1814068134014423, "compression_ratio": 1.6049382716049383, "no_speech_prob": 4.092835752089741e-06}, {"id": 1084, "seek": 322124, "start": 3221.24, "end": 3224.16, "text": " in such a way that this energy goes down.", "tokens": [50364, 294, 1270, 257, 636, 300, 341, 2281, 1709, 760, 13, 50510, 50510, 2264, 30, 50546, 50546, 400, 341, 1542, 37657, 11, 457, 309, 311, 7696, 1944, 50666, 50666, 570, 341, 2302, 1185, 510, 307, 3094, 484, 295, 4959, 50918, 50918, 300, 321, 1217, 458, 466, 13, 51000, 51000, 663, 311, 445, 257, 3890, 18161, 2533, 13, 51124, 51124, 400, 729, 3100, 3048, 830, 293, 691, 17, 33, 4088, 433, 51238, 51238, 366, 1936, 19458, 300, 1888, 257, 1729, 4691, 420, 406, 11, 51438, 51438, 558, 30, 51472, 51472, 407, 309, 311, 411, 257, 3679, 13, 51528, 51528, 467, 311, 411, 11469, 7005, 278, 11, 3993, 309, 311, 914, 7005, 278, 11, 498, 291, 528, 13, 51708, 51708, 2264, 30, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1507394992239107, "compression_ratio": 1.5795454545454546, "no_speech_prob": 1.1842547792184632e-05}, {"id": 1085, "seek": 322124, "start": 3224.16, "end": 3224.8799999999997, "text": " OK?", "tokens": [50364, 294, 1270, 257, 636, 300, 341, 2281, 1709, 760, 13, 50510, 50510, 2264, 30, 50546, 50546, 400, 341, 1542, 37657, 11, 457, 309, 311, 7696, 1944, 50666, 50666, 570, 341, 2302, 1185, 510, 307, 3094, 484, 295, 4959, 50918, 50918, 300, 321, 1217, 458, 466, 13, 51000, 51000, 663, 311, 445, 257, 3890, 18161, 2533, 13, 51124, 51124, 400, 729, 3100, 3048, 830, 293, 691, 17, 33, 4088, 433, 51238, 51238, 366, 1936, 19458, 300, 1888, 257, 1729, 4691, 420, 406, 11, 51438, 51438, 558, 30, 51472, 51472, 407, 309, 311, 411, 257, 3679, 13, 51528, 51528, 467, 311, 411, 11469, 7005, 278, 11, 3993, 309, 311, 914, 7005, 278, 11, 498, 291, 528, 13, 51708, 51708, 2264, 30, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1507394992239107, "compression_ratio": 1.5795454545454546, "no_speech_prob": 1.1842547792184632e-05}, {"id": 1086, "seek": 322124, "start": 3224.8799999999997, "end": 3227.2799999999997, "text": " And this looks daunting, but it's entirely possible", "tokens": [50364, 294, 1270, 257, 636, 300, 341, 2281, 1709, 760, 13, 50510, 50510, 2264, 30, 50546, 50546, 400, 341, 1542, 37657, 11, 457, 309, 311, 7696, 1944, 50666, 50666, 570, 341, 2302, 1185, 510, 307, 3094, 484, 295, 4959, 50918, 50918, 300, 321, 1217, 458, 466, 13, 51000, 51000, 663, 311, 445, 257, 3890, 18161, 2533, 13, 51124, 51124, 400, 729, 3100, 3048, 830, 293, 691, 17, 33, 4088, 433, 51238, 51238, 366, 1936, 19458, 300, 1888, 257, 1729, 4691, 420, 406, 11, 51438, 51438, 558, 30, 51472, 51472, 407, 309, 311, 411, 257, 3679, 13, 51528, 51528, 467, 311, 411, 11469, 7005, 278, 11, 3993, 309, 311, 914, 7005, 278, 11, 498, 291, 528, 13, 51708, 51708, 2264, 30, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1507394992239107, "compression_ratio": 1.5795454545454546, "no_speech_prob": 1.1842547792184632e-05}, {"id": 1087, "seek": 322124, "start": 3227.2799999999997, "end": 3232.3199999999997, "text": " because this entire system here is built out of elements", "tokens": [50364, 294, 1270, 257, 636, 300, 341, 2281, 1709, 760, 13, 50510, 50510, 2264, 30, 50546, 50546, 400, 341, 1542, 37657, 11, 457, 309, 311, 7696, 1944, 50666, 50666, 570, 341, 2302, 1185, 510, 307, 3094, 484, 295, 4959, 50918, 50918, 300, 321, 1217, 458, 466, 13, 51000, 51000, 663, 311, 445, 257, 3890, 18161, 2533, 13, 51124, 51124, 400, 729, 3100, 3048, 830, 293, 691, 17, 33, 4088, 433, 51238, 51238, 366, 1936, 19458, 300, 1888, 257, 1729, 4691, 420, 406, 11, 51438, 51438, 558, 30, 51472, 51472, 407, 309, 311, 411, 257, 3679, 13, 51528, 51528, 467, 311, 411, 11469, 7005, 278, 11, 3993, 309, 311, 914, 7005, 278, 11, 498, 291, 528, 13, 51708, 51708, 2264, 30, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1507394992239107, "compression_ratio": 1.5795454545454546, "no_speech_prob": 1.1842547792184632e-05}, {"id": 1088, "seek": 322124, "start": 3232.3199999999997, "end": 3233.9599999999996, "text": " that we already know about.", "tokens": [50364, 294, 1270, 257, 636, 300, 341, 2281, 1709, 760, 13, 50510, 50510, 2264, 30, 50546, 50546, 400, 341, 1542, 37657, 11, 457, 309, 311, 7696, 1944, 50666, 50666, 570, 341, 2302, 1185, 510, 307, 3094, 484, 295, 4959, 50918, 50918, 300, 321, 1217, 458, 466, 13, 51000, 51000, 663, 311, 445, 257, 3890, 18161, 2533, 13, 51124, 51124, 400, 729, 3100, 3048, 830, 293, 691, 17, 33, 4088, 433, 51238, 51238, 366, 1936, 19458, 300, 1888, 257, 1729, 4691, 420, 406, 11, 51438, 51438, 558, 30, 51472, 51472, 407, 309, 311, 411, 257, 3679, 13, 51528, 51528, 467, 311, 411, 11469, 7005, 278, 11, 3993, 309, 311, 914, 7005, 278, 11, 498, 291, 528, 13, 51708, 51708, 2264, 30, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1507394992239107, "compression_ratio": 1.5795454545454546, "no_speech_prob": 1.1842547792184632e-05}, {"id": 1089, "seek": 322124, "start": 3233.9599999999996, "end": 3236.4399999999996, "text": " That's just a regular neural net.", "tokens": [50364, 294, 1270, 257, 636, 300, 341, 2281, 1709, 760, 13, 50510, 50510, 2264, 30, 50546, 50546, 400, 341, 1542, 37657, 11, 457, 309, 311, 7696, 1944, 50666, 50666, 570, 341, 2302, 1185, 510, 307, 3094, 484, 295, 4959, 50918, 50918, 300, 321, 1217, 458, 466, 13, 51000, 51000, 663, 311, 445, 257, 3890, 18161, 2533, 13, 51124, 51124, 400, 729, 3100, 3048, 830, 293, 691, 17, 33, 4088, 433, 51238, 51238, 366, 1936, 19458, 300, 1888, 257, 1729, 4691, 420, 406, 11, 51438, 51438, 558, 30, 51472, 51472, 407, 309, 311, 411, 257, 3679, 13, 51528, 51528, 467, 311, 411, 11469, 7005, 278, 11, 3993, 309, 311, 914, 7005, 278, 11, 498, 291, 528, 13, 51708, 51708, 2264, 30, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1507394992239107, "compression_ratio": 1.5795454545454546, "no_speech_prob": 1.1842547792184632e-05}, {"id": 1090, "seek": 322124, "start": 3236.4399999999996, "end": 3238.72, "text": " And those path selectors and V2B transformers", "tokens": [50364, 294, 1270, 257, 636, 300, 341, 2281, 1709, 760, 13, 50510, 50510, 2264, 30, 50546, 50546, 400, 341, 1542, 37657, 11, 457, 309, 311, 7696, 1944, 50666, 50666, 570, 341, 2302, 1185, 510, 307, 3094, 484, 295, 4959, 50918, 50918, 300, 321, 1217, 458, 466, 13, 51000, 51000, 663, 311, 445, 257, 3890, 18161, 2533, 13, 51124, 51124, 400, 729, 3100, 3048, 830, 293, 691, 17, 33, 4088, 433, 51238, 51238, 366, 1936, 19458, 300, 1888, 257, 1729, 4691, 420, 406, 11, 51438, 51438, 558, 30, 51472, 51472, 407, 309, 311, 411, 257, 3679, 13, 51528, 51528, 467, 311, 411, 11469, 7005, 278, 11, 3993, 309, 311, 914, 7005, 278, 11, 498, 291, 528, 13, 51708, 51708, 2264, 30, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1507394992239107, "compression_ratio": 1.5795454545454546, "no_speech_prob": 1.1842547792184632e-05}, {"id": 1091, "seek": 322124, "start": 3238.72, "end": 3242.72, "text": " are basically switches that pick a particular edge or not,", "tokens": [50364, 294, 1270, 257, 636, 300, 341, 2281, 1709, 760, 13, 50510, 50510, 2264, 30, 50546, 50546, 400, 341, 1542, 37657, 11, 457, 309, 311, 7696, 1944, 50666, 50666, 570, 341, 2302, 1185, 510, 307, 3094, 484, 295, 4959, 50918, 50918, 300, 321, 1217, 458, 466, 13, 51000, 51000, 663, 311, 445, 257, 3890, 18161, 2533, 13, 51124, 51124, 400, 729, 3100, 3048, 830, 293, 691, 17, 33, 4088, 433, 51238, 51238, 366, 1936, 19458, 300, 1888, 257, 1729, 4691, 420, 406, 11, 51438, 51438, 558, 30, 51472, 51472, 407, 309, 311, 411, 257, 3679, 13, 51528, 51528, 467, 311, 411, 11469, 7005, 278, 11, 3993, 309, 311, 914, 7005, 278, 11, 498, 291, 528, 13, 51708, 51708, 2264, 30, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1507394992239107, "compression_ratio": 1.5795454545454546, "no_speech_prob": 1.1842547792184632e-05}, {"id": 1092, "seek": 322124, "start": 3242.72, "end": 3243.3999999999996, "text": " right?", "tokens": [50364, 294, 1270, 257, 636, 300, 341, 2281, 1709, 760, 13, 50510, 50510, 2264, 30, 50546, 50546, 400, 341, 1542, 37657, 11, 457, 309, 311, 7696, 1944, 50666, 50666, 570, 341, 2302, 1185, 510, 307, 3094, 484, 295, 4959, 50918, 50918, 300, 321, 1217, 458, 466, 13, 51000, 51000, 663, 311, 445, 257, 3890, 18161, 2533, 13, 51124, 51124, 400, 729, 3100, 3048, 830, 293, 691, 17, 33, 4088, 433, 51238, 51238, 366, 1936, 19458, 300, 1888, 257, 1729, 4691, 420, 406, 11, 51438, 51438, 558, 30, 51472, 51472, 407, 309, 311, 411, 257, 3679, 13, 51528, 51528, 467, 311, 411, 11469, 7005, 278, 11, 3993, 309, 311, 914, 7005, 278, 11, 498, 291, 528, 13, 51708, 51708, 2264, 30, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1507394992239107, "compression_ratio": 1.5795454545454546, "no_speech_prob": 1.1842547792184632e-05}, {"id": 1093, "seek": 322124, "start": 3243.3999999999996, "end": 3244.52, "text": " So it's like a switch.", "tokens": [50364, 294, 1270, 257, 636, 300, 341, 2281, 1709, 760, 13, 50510, 50510, 2264, 30, 50546, 50546, 400, 341, 1542, 37657, 11, 457, 309, 311, 7696, 1944, 50666, 50666, 570, 341, 2302, 1185, 510, 307, 3094, 484, 295, 4959, 50918, 50918, 300, 321, 1217, 458, 466, 13, 51000, 51000, 663, 311, 445, 257, 3890, 18161, 2533, 13, 51124, 51124, 400, 729, 3100, 3048, 830, 293, 691, 17, 33, 4088, 433, 51238, 51238, 366, 1936, 19458, 300, 1888, 257, 1729, 4691, 420, 406, 11, 51438, 51438, 558, 30, 51472, 51472, 407, 309, 311, 411, 257, 3679, 13, 51528, 51528, 467, 311, 411, 11469, 7005, 278, 11, 3993, 309, 311, 914, 7005, 278, 11, 498, 291, 528, 13, 51708, 51708, 2264, 30, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1507394992239107, "compression_ratio": 1.5795454545454546, "no_speech_prob": 1.1842547792184632e-05}, {"id": 1094, "seek": 322124, "start": 3244.52, "end": 3248.12, "text": " It's like max pooling, except it's mean pooling, if you want.", "tokens": [50364, 294, 1270, 257, 636, 300, 341, 2281, 1709, 760, 13, 50510, 50510, 2264, 30, 50546, 50546, 400, 341, 1542, 37657, 11, 457, 309, 311, 7696, 1944, 50666, 50666, 570, 341, 2302, 1185, 510, 307, 3094, 484, 295, 4959, 50918, 50918, 300, 321, 1217, 458, 466, 13, 51000, 51000, 663, 311, 445, 257, 3890, 18161, 2533, 13, 51124, 51124, 400, 729, 3100, 3048, 830, 293, 691, 17, 33, 4088, 433, 51238, 51238, 366, 1936, 19458, 300, 1888, 257, 1729, 4691, 420, 406, 11, 51438, 51438, 558, 30, 51472, 51472, 407, 309, 311, 411, 257, 3679, 13, 51528, 51528, 467, 311, 411, 11469, 7005, 278, 11, 3993, 309, 311, 914, 7005, 278, 11, 498, 291, 528, 13, 51708, 51708, 2264, 30, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1507394992239107, "compression_ratio": 1.5795454545454546, "no_speech_prob": 1.1842547792184632e-05}, {"id": 1095, "seek": 322124, "start": 3248.12, "end": 3249.56, "text": " OK?", "tokens": [50364, 294, 1270, 257, 636, 300, 341, 2281, 1709, 760, 13, 50510, 50510, 2264, 30, 50546, 50546, 400, 341, 1542, 37657, 11, 457, 309, 311, 7696, 1944, 50666, 50666, 570, 341, 2302, 1185, 510, 307, 3094, 484, 295, 4959, 50918, 50918, 300, 321, 1217, 458, 466, 13, 51000, 51000, 663, 311, 445, 257, 3890, 18161, 2533, 13, 51124, 51124, 400, 729, 3100, 3048, 830, 293, 691, 17, 33, 4088, 433, 51238, 51238, 366, 1936, 19458, 300, 1888, 257, 1729, 4691, 420, 406, 11, 51438, 51438, 558, 30, 51472, 51472, 407, 309, 311, 411, 257, 3679, 13, 51528, 51528, 467, 311, 411, 11469, 7005, 278, 11, 3993, 309, 311, 914, 7005, 278, 11, 498, 291, 528, 13, 51708, 51708, 2264, 30, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1507394992239107, "compression_ratio": 1.5795454545454546, "no_speech_prob": 1.1842547792184632e-05}, {"id": 1096, "seek": 324956, "start": 3249.56, "end": 3251.36, "text": " Right, so how do I backpropagate?", "tokens": [50364, 1779, 11, 370, 577, 360, 286, 646, 79, 1513, 559, 473, 30, 50454, 50454, 1042, 11, 341, 1958, 13, 22, 307, 445, 264, 2408, 295, 341, 1958, 13, 16, 293, 341, 1958, 13, 21, 13, 50618, 50618, 407, 498, 286, 14722, 264, 16235, 295, 341, 365, 3104, 281, 341, 1958, 13, 16, 11, 50954, 50954, 309, 311, 445, 502, 13, 51012, 51012, 440, 16235, 295, 341, 5598, 365, 3104, 281, 341, 2158, 510, 11, 51266, 51266, 1958, 13, 21, 11, 307, 611, 502, 11, 2264, 30, 51366, 51366, 1436, 300, 307, 445, 264, 2408, 295, 729, 732, 721, 13, 51470, 51470, 400, 445, 646, 79, 1513, 559, 990, 502, 281, 257, 2408, 11, 51638, 51638, 293, 300, 311, 445, 257, 288, 4984, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11407381343090628, "compression_ratio": 1.7681159420289856, "no_speech_prob": 1.834133217926137e-05}, {"id": 1097, "seek": 324956, "start": 3251.36, "end": 3254.64, "text": " Well, this 0.7 is just the sum of this 0.1 and this 0.6.", "tokens": [50364, 1779, 11, 370, 577, 360, 286, 646, 79, 1513, 559, 473, 30, 50454, 50454, 1042, 11, 341, 1958, 13, 22, 307, 445, 264, 2408, 295, 341, 1958, 13, 16, 293, 341, 1958, 13, 21, 13, 50618, 50618, 407, 498, 286, 14722, 264, 16235, 295, 341, 365, 3104, 281, 341, 1958, 13, 16, 11, 50954, 50954, 309, 311, 445, 502, 13, 51012, 51012, 440, 16235, 295, 341, 5598, 365, 3104, 281, 341, 2158, 510, 11, 51266, 51266, 1958, 13, 21, 11, 307, 611, 502, 11, 2264, 30, 51366, 51366, 1436, 300, 307, 445, 264, 2408, 295, 729, 732, 721, 13, 51470, 51470, 400, 445, 646, 79, 1513, 559, 990, 502, 281, 257, 2408, 11, 51638, 51638, 293, 300, 311, 445, 257, 288, 4984, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11407381343090628, "compression_ratio": 1.7681159420289856, "no_speech_prob": 1.834133217926137e-05}, {"id": 1098, "seek": 324956, "start": 3254.64, "end": 3261.36, "text": " So if I compute the gradient of this with respect to this 0.1,", "tokens": [50364, 1779, 11, 370, 577, 360, 286, 646, 79, 1513, 559, 473, 30, 50454, 50454, 1042, 11, 341, 1958, 13, 22, 307, 445, 264, 2408, 295, 341, 1958, 13, 16, 293, 341, 1958, 13, 21, 13, 50618, 50618, 407, 498, 286, 14722, 264, 16235, 295, 341, 365, 3104, 281, 341, 1958, 13, 16, 11, 50954, 50954, 309, 311, 445, 502, 13, 51012, 51012, 440, 16235, 295, 341, 5598, 365, 3104, 281, 341, 2158, 510, 11, 51266, 51266, 1958, 13, 21, 11, 307, 611, 502, 11, 2264, 30, 51366, 51366, 1436, 300, 307, 445, 264, 2408, 295, 729, 732, 721, 13, 51470, 51470, 400, 445, 646, 79, 1513, 559, 990, 502, 281, 257, 2408, 11, 51638, 51638, 293, 300, 311, 445, 257, 288, 4984, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11407381343090628, "compression_ratio": 1.7681159420289856, "no_speech_prob": 1.834133217926137e-05}, {"id": 1099, "seek": 324956, "start": 3261.36, "end": 3262.52, "text": " it's just 1.", "tokens": [50364, 1779, 11, 370, 577, 360, 286, 646, 79, 1513, 559, 473, 30, 50454, 50454, 1042, 11, 341, 1958, 13, 22, 307, 445, 264, 2408, 295, 341, 1958, 13, 16, 293, 341, 1958, 13, 21, 13, 50618, 50618, 407, 498, 286, 14722, 264, 16235, 295, 341, 365, 3104, 281, 341, 1958, 13, 16, 11, 50954, 50954, 309, 311, 445, 502, 13, 51012, 51012, 440, 16235, 295, 341, 5598, 365, 3104, 281, 341, 2158, 510, 11, 51266, 51266, 1958, 13, 21, 11, 307, 611, 502, 11, 2264, 30, 51366, 51366, 1436, 300, 307, 445, 264, 2408, 295, 729, 732, 721, 13, 51470, 51470, 400, 445, 646, 79, 1513, 559, 990, 502, 281, 257, 2408, 11, 51638, 51638, 293, 300, 311, 445, 257, 288, 4984, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11407381343090628, "compression_ratio": 1.7681159420289856, "no_speech_prob": 1.834133217926137e-05}, {"id": 1100, "seek": 324956, "start": 3262.52, "end": 3267.6, "text": " The gradient of this output with respect to this value here,", "tokens": [50364, 1779, 11, 370, 577, 360, 286, 646, 79, 1513, 559, 473, 30, 50454, 50454, 1042, 11, 341, 1958, 13, 22, 307, 445, 264, 2408, 295, 341, 1958, 13, 16, 293, 341, 1958, 13, 21, 13, 50618, 50618, 407, 498, 286, 14722, 264, 16235, 295, 341, 365, 3104, 281, 341, 1958, 13, 16, 11, 50954, 50954, 309, 311, 445, 502, 13, 51012, 51012, 440, 16235, 295, 341, 5598, 365, 3104, 281, 341, 2158, 510, 11, 51266, 51266, 1958, 13, 21, 11, 307, 611, 502, 11, 2264, 30, 51366, 51366, 1436, 300, 307, 445, 264, 2408, 295, 729, 732, 721, 13, 51470, 51470, 400, 445, 646, 79, 1513, 559, 990, 502, 281, 257, 2408, 11, 51638, 51638, 293, 300, 311, 445, 257, 288, 4984, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11407381343090628, "compression_ratio": 1.7681159420289856, "no_speech_prob": 1.834133217926137e-05}, {"id": 1101, "seek": 324956, "start": 3267.6, "end": 3269.6, "text": " 0.6, is also 1, OK?", "tokens": [50364, 1779, 11, 370, 577, 360, 286, 646, 79, 1513, 559, 473, 30, 50454, 50454, 1042, 11, 341, 1958, 13, 22, 307, 445, 264, 2408, 295, 341, 1958, 13, 16, 293, 341, 1958, 13, 21, 13, 50618, 50618, 407, 498, 286, 14722, 264, 16235, 295, 341, 365, 3104, 281, 341, 1958, 13, 16, 11, 50954, 50954, 309, 311, 445, 502, 13, 51012, 51012, 440, 16235, 295, 341, 5598, 365, 3104, 281, 341, 2158, 510, 11, 51266, 51266, 1958, 13, 21, 11, 307, 611, 502, 11, 2264, 30, 51366, 51366, 1436, 300, 307, 445, 264, 2408, 295, 729, 732, 721, 13, 51470, 51470, 400, 445, 646, 79, 1513, 559, 990, 502, 281, 257, 2408, 11, 51638, 51638, 293, 300, 311, 445, 257, 288, 4984, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11407381343090628, "compression_ratio": 1.7681159420289856, "no_speech_prob": 1.834133217926137e-05}, {"id": 1102, "seek": 324956, "start": 3269.6, "end": 3271.68, "text": " Because that is just the sum of those two things.", "tokens": [50364, 1779, 11, 370, 577, 360, 286, 646, 79, 1513, 559, 473, 30, 50454, 50454, 1042, 11, 341, 1958, 13, 22, 307, 445, 264, 2408, 295, 341, 1958, 13, 16, 293, 341, 1958, 13, 21, 13, 50618, 50618, 407, 498, 286, 14722, 264, 16235, 295, 341, 365, 3104, 281, 341, 1958, 13, 16, 11, 50954, 50954, 309, 311, 445, 502, 13, 51012, 51012, 440, 16235, 295, 341, 5598, 365, 3104, 281, 341, 2158, 510, 11, 51266, 51266, 1958, 13, 21, 11, 307, 611, 502, 11, 2264, 30, 51366, 51366, 1436, 300, 307, 445, 264, 2408, 295, 729, 732, 721, 13, 51470, 51470, 400, 445, 646, 79, 1513, 559, 990, 502, 281, 257, 2408, 11, 51638, 51638, 293, 300, 311, 445, 257, 288, 4984, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11407381343090628, "compression_ratio": 1.7681159420289856, "no_speech_prob": 1.834133217926137e-05}, {"id": 1103, "seek": 324956, "start": 3271.68, "end": 3275.04, "text": " And just backpropagating 1 to a sum,", "tokens": [50364, 1779, 11, 370, 577, 360, 286, 646, 79, 1513, 559, 473, 30, 50454, 50454, 1042, 11, 341, 1958, 13, 22, 307, 445, 264, 2408, 295, 341, 1958, 13, 16, 293, 341, 1958, 13, 21, 13, 50618, 50618, 407, 498, 286, 14722, 264, 16235, 295, 341, 365, 3104, 281, 341, 1958, 13, 16, 11, 50954, 50954, 309, 311, 445, 502, 13, 51012, 51012, 440, 16235, 295, 341, 5598, 365, 3104, 281, 341, 2158, 510, 11, 51266, 51266, 1958, 13, 21, 11, 307, 611, 502, 11, 2264, 30, 51366, 51366, 1436, 300, 307, 445, 264, 2408, 295, 729, 732, 721, 13, 51470, 51470, 400, 445, 646, 79, 1513, 559, 990, 502, 281, 257, 2408, 11, 51638, 51638, 293, 300, 311, 445, 257, 288, 4984, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11407381343090628, "compression_ratio": 1.7681159420289856, "no_speech_prob": 1.834133217926137e-05}, {"id": 1104, "seek": 324956, "start": 3275.04, "end": 3278.08, "text": " and that's just a y connection.", "tokens": [50364, 1779, 11, 370, 577, 360, 286, 646, 79, 1513, 559, 473, 30, 50454, 50454, 1042, 11, 341, 1958, 13, 22, 307, 445, 264, 2408, 295, 341, 1958, 13, 16, 293, 341, 1958, 13, 21, 13, 50618, 50618, 407, 498, 286, 14722, 264, 16235, 295, 341, 365, 3104, 281, 341, 1958, 13, 16, 11, 50954, 50954, 309, 311, 445, 502, 13, 51012, 51012, 440, 16235, 295, 341, 5598, 365, 3104, 281, 341, 2158, 510, 11, 51266, 51266, 1958, 13, 21, 11, 307, 611, 502, 11, 2264, 30, 51366, 51366, 1436, 300, 307, 445, 264, 2408, 295, 729, 732, 721, 13, 51470, 51470, 400, 445, 646, 79, 1513, 559, 990, 502, 281, 257, 2408, 11, 51638, 51638, 293, 300, 311, 445, 257, 288, 4984, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11407381343090628, "compression_ratio": 1.7681159420289856, "no_speech_prob": 1.834133217926137e-05}, {"id": 1105, "seek": 327808, "start": 3278.08, "end": 3280.52, "text": " OK, now backpropagating to the V2B transformer,", "tokens": [50364, 2264, 11, 586, 646, 79, 1513, 559, 990, 281, 264, 691, 17, 33, 31782, 11, 50486, 50486, 341, 2146, 445, 8209, 472, 3100, 3654, 732, 13, 50612, 50612, 407, 437, 309, 311, 516, 281, 360, 307, 309, 311, 516, 50690, 50690, 281, 747, 729, 2771, 2448, 510, 293, 445, 5055, 552, 50846, 50846, 322, 264, 11760, 4691, 322, 264, 4846, 4295, 50966, 50966, 293, 550, 992, 264, 2771, 2448, 337, 264, 661, 3100, 300, 51066, 51066, 390, 406, 8209, 281, 1958, 13, 51158, 51158, 467, 311, 2293, 437, 311, 2737, 294, 11469, 7005, 278, 420, 914, 7005, 278, 13, 51326, 51326, 509, 434, 12425, 990, 807, 264, 3679, 412, 300, 558, 2535, 11, 51474, 51474, 457, 406, 12425, 990, 958, 281, 309, 13, 51616, 51616, 407, 309, 311, 1825, 10247, 11, 2264, 30, 51770, 51770, 21914, 23264, 1672, 307, 264, 912, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10953080164243097, "compression_ratio": 1.7328767123287672, "no_speech_prob": 4.157239345659036e-06}, {"id": 1106, "seek": 327808, "start": 3280.52, "end": 3283.04, "text": " this guy just selected one path among two.", "tokens": [50364, 2264, 11, 586, 646, 79, 1513, 559, 990, 281, 264, 691, 17, 33, 31782, 11, 50486, 50486, 341, 2146, 445, 8209, 472, 3100, 3654, 732, 13, 50612, 50612, 407, 437, 309, 311, 516, 281, 360, 307, 309, 311, 516, 50690, 50690, 281, 747, 729, 2771, 2448, 510, 293, 445, 5055, 552, 50846, 50846, 322, 264, 11760, 4691, 322, 264, 4846, 4295, 50966, 50966, 293, 550, 992, 264, 2771, 2448, 337, 264, 661, 3100, 300, 51066, 51066, 390, 406, 8209, 281, 1958, 13, 51158, 51158, 467, 311, 2293, 437, 311, 2737, 294, 11469, 7005, 278, 420, 914, 7005, 278, 13, 51326, 51326, 509, 434, 12425, 990, 807, 264, 3679, 412, 300, 558, 2535, 11, 51474, 51474, 457, 406, 12425, 990, 958, 281, 309, 13, 51616, 51616, 407, 309, 311, 1825, 10247, 11, 2264, 30, 51770, 51770, 21914, 23264, 1672, 307, 264, 912, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10953080164243097, "compression_ratio": 1.7328767123287672, "no_speech_prob": 4.157239345659036e-06}, {"id": 1107, "seek": 327808, "start": 3283.04, "end": 3284.6, "text": " So what it's going to do is it's going", "tokens": [50364, 2264, 11, 586, 646, 79, 1513, 559, 990, 281, 264, 691, 17, 33, 31782, 11, 50486, 50486, 341, 2146, 445, 8209, 472, 3100, 3654, 732, 13, 50612, 50612, 407, 437, 309, 311, 516, 281, 360, 307, 309, 311, 516, 50690, 50690, 281, 747, 729, 2771, 2448, 510, 293, 445, 5055, 552, 50846, 50846, 322, 264, 11760, 4691, 322, 264, 4846, 4295, 50966, 50966, 293, 550, 992, 264, 2771, 2448, 337, 264, 661, 3100, 300, 51066, 51066, 390, 406, 8209, 281, 1958, 13, 51158, 51158, 467, 311, 2293, 437, 311, 2737, 294, 11469, 7005, 278, 420, 914, 7005, 278, 13, 51326, 51326, 509, 434, 12425, 990, 807, 264, 3679, 412, 300, 558, 2535, 11, 51474, 51474, 457, 406, 12425, 990, 958, 281, 309, 13, 51616, 51616, 407, 309, 311, 1825, 10247, 11, 2264, 30, 51770, 51770, 21914, 23264, 1672, 307, 264, 912, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10953080164243097, "compression_ratio": 1.7328767123287672, "no_speech_prob": 4.157239345659036e-06}, {"id": 1108, "seek": 327808, "start": 3284.6, "end": 3287.72, "text": " to take those gradients here and just copy them", "tokens": [50364, 2264, 11, 586, 646, 79, 1513, 559, 990, 281, 264, 691, 17, 33, 31782, 11, 50486, 50486, 341, 2146, 445, 8209, 472, 3100, 3654, 732, 13, 50612, 50612, 407, 437, 309, 311, 516, 281, 360, 307, 309, 311, 516, 50690, 50690, 281, 747, 729, 2771, 2448, 510, 293, 445, 5055, 552, 50846, 50846, 322, 264, 11760, 4691, 322, 264, 4846, 4295, 50966, 50966, 293, 550, 992, 264, 2771, 2448, 337, 264, 661, 3100, 300, 51066, 51066, 390, 406, 8209, 281, 1958, 13, 51158, 51158, 467, 311, 2293, 437, 311, 2737, 294, 11469, 7005, 278, 420, 914, 7005, 278, 13, 51326, 51326, 509, 434, 12425, 990, 807, 264, 3679, 412, 300, 558, 2535, 11, 51474, 51474, 457, 406, 12425, 990, 958, 281, 309, 13, 51616, 51616, 407, 309, 311, 1825, 10247, 11, 2264, 30, 51770, 51770, 21914, 23264, 1672, 307, 264, 912, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10953080164243097, "compression_ratio": 1.7328767123287672, "no_speech_prob": 4.157239345659036e-06}, {"id": 1109, "seek": 327808, "start": 3287.72, "end": 3290.12, "text": " on the corresponding edge on the input graph", "tokens": [50364, 2264, 11, 586, 646, 79, 1513, 559, 990, 281, 264, 691, 17, 33, 31782, 11, 50486, 50486, 341, 2146, 445, 8209, 472, 3100, 3654, 732, 13, 50612, 50612, 407, 437, 309, 311, 516, 281, 360, 307, 309, 311, 516, 50690, 50690, 281, 747, 729, 2771, 2448, 510, 293, 445, 5055, 552, 50846, 50846, 322, 264, 11760, 4691, 322, 264, 4846, 4295, 50966, 50966, 293, 550, 992, 264, 2771, 2448, 337, 264, 661, 3100, 300, 51066, 51066, 390, 406, 8209, 281, 1958, 13, 51158, 51158, 467, 311, 2293, 437, 311, 2737, 294, 11469, 7005, 278, 420, 914, 7005, 278, 13, 51326, 51326, 509, 434, 12425, 990, 807, 264, 3679, 412, 300, 558, 2535, 11, 51474, 51474, 457, 406, 12425, 990, 958, 281, 309, 13, 51616, 51616, 407, 309, 311, 1825, 10247, 11, 2264, 30, 51770, 51770, 21914, 23264, 1672, 307, 264, 912, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10953080164243097, "compression_ratio": 1.7328767123287672, "no_speech_prob": 4.157239345659036e-06}, {"id": 1110, "seek": 327808, "start": 3290.12, "end": 3292.12, "text": " and then set the gradients for the other path that", "tokens": [50364, 2264, 11, 586, 646, 79, 1513, 559, 990, 281, 264, 691, 17, 33, 31782, 11, 50486, 50486, 341, 2146, 445, 8209, 472, 3100, 3654, 732, 13, 50612, 50612, 407, 437, 309, 311, 516, 281, 360, 307, 309, 311, 516, 50690, 50690, 281, 747, 729, 2771, 2448, 510, 293, 445, 5055, 552, 50846, 50846, 322, 264, 11760, 4691, 322, 264, 4846, 4295, 50966, 50966, 293, 550, 992, 264, 2771, 2448, 337, 264, 661, 3100, 300, 51066, 51066, 390, 406, 8209, 281, 1958, 13, 51158, 51158, 467, 311, 2293, 437, 311, 2737, 294, 11469, 7005, 278, 420, 914, 7005, 278, 13, 51326, 51326, 509, 434, 12425, 990, 807, 264, 3679, 412, 300, 558, 2535, 11, 51474, 51474, 457, 406, 12425, 990, 958, 281, 309, 13, 51616, 51616, 407, 309, 311, 1825, 10247, 11, 2264, 30, 51770, 51770, 21914, 23264, 1672, 307, 264, 912, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10953080164243097, "compression_ratio": 1.7328767123287672, "no_speech_prob": 4.157239345659036e-06}, {"id": 1111, "seek": 327808, "start": 3292.12, "end": 3293.96, "text": " was not selected to 0.", "tokens": [50364, 2264, 11, 586, 646, 79, 1513, 559, 990, 281, 264, 691, 17, 33, 31782, 11, 50486, 50486, 341, 2146, 445, 8209, 472, 3100, 3654, 732, 13, 50612, 50612, 407, 437, 309, 311, 516, 281, 360, 307, 309, 311, 516, 50690, 50690, 281, 747, 729, 2771, 2448, 510, 293, 445, 5055, 552, 50846, 50846, 322, 264, 11760, 4691, 322, 264, 4846, 4295, 50966, 50966, 293, 550, 992, 264, 2771, 2448, 337, 264, 661, 3100, 300, 51066, 51066, 390, 406, 8209, 281, 1958, 13, 51158, 51158, 467, 311, 2293, 437, 311, 2737, 294, 11469, 7005, 278, 420, 914, 7005, 278, 13, 51326, 51326, 509, 434, 12425, 990, 807, 264, 3679, 412, 300, 558, 2535, 11, 51474, 51474, 457, 406, 12425, 990, 958, 281, 309, 13, 51616, 51616, 407, 309, 311, 1825, 10247, 11, 2264, 30, 51770, 51770, 21914, 23264, 1672, 307, 264, 912, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10953080164243097, "compression_ratio": 1.7328767123287672, "no_speech_prob": 4.157239345659036e-06}, {"id": 1112, "seek": 327808, "start": 3293.96, "end": 3297.3199999999997, "text": " It's exactly what's happening in max pooling or mean pooling.", "tokens": [50364, 2264, 11, 586, 646, 79, 1513, 559, 990, 281, 264, 691, 17, 33, 31782, 11, 50486, 50486, 341, 2146, 445, 8209, 472, 3100, 3654, 732, 13, 50612, 50612, 407, 437, 309, 311, 516, 281, 360, 307, 309, 311, 516, 50690, 50690, 281, 747, 729, 2771, 2448, 510, 293, 445, 5055, 552, 50846, 50846, 322, 264, 11760, 4691, 322, 264, 4846, 4295, 50966, 50966, 293, 550, 992, 264, 2771, 2448, 337, 264, 661, 3100, 300, 51066, 51066, 390, 406, 8209, 281, 1958, 13, 51158, 51158, 467, 311, 2293, 437, 311, 2737, 294, 11469, 7005, 278, 420, 914, 7005, 278, 13, 51326, 51326, 509, 434, 12425, 990, 807, 264, 3679, 412, 300, 558, 2535, 11, 51474, 51474, 457, 406, 12425, 990, 958, 281, 309, 13, 51616, 51616, 407, 309, 311, 1825, 10247, 11, 2264, 30, 51770, 51770, 21914, 23264, 1672, 307, 264, 912, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10953080164243097, "compression_ratio": 1.7328767123287672, "no_speech_prob": 4.157239345659036e-06}, {"id": 1113, "seek": 327808, "start": 3297.3199999999997, "end": 3300.2799999999997, "text": " You're propagating through the switch at that right position,", "tokens": [50364, 2264, 11, 586, 646, 79, 1513, 559, 990, 281, 264, 691, 17, 33, 31782, 11, 50486, 50486, 341, 2146, 445, 8209, 472, 3100, 3654, 732, 13, 50612, 50612, 407, 437, 309, 311, 516, 281, 360, 307, 309, 311, 516, 50690, 50690, 281, 747, 729, 2771, 2448, 510, 293, 445, 5055, 552, 50846, 50846, 322, 264, 11760, 4691, 322, 264, 4846, 4295, 50966, 50966, 293, 550, 992, 264, 2771, 2448, 337, 264, 661, 3100, 300, 51066, 51066, 390, 406, 8209, 281, 1958, 13, 51158, 51158, 467, 311, 2293, 437, 311, 2737, 294, 11469, 7005, 278, 420, 914, 7005, 278, 13, 51326, 51326, 509, 434, 12425, 990, 807, 264, 3679, 412, 300, 558, 2535, 11, 51474, 51474, 457, 406, 12425, 990, 958, 281, 309, 13, 51616, 51616, 407, 309, 311, 1825, 10247, 11, 2264, 30, 51770, 51770, 21914, 23264, 1672, 307, 264, 912, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10953080164243097, "compression_ratio": 1.7328767123287672, "no_speech_prob": 4.157239345659036e-06}, {"id": 1114, "seek": 327808, "start": 3300.2799999999997, "end": 3303.12, "text": " but not propagating next to it.", "tokens": [50364, 2264, 11, 586, 646, 79, 1513, 559, 990, 281, 264, 691, 17, 33, 31782, 11, 50486, 50486, 341, 2146, 445, 8209, 472, 3100, 3654, 732, 13, 50612, 50612, 407, 437, 309, 311, 516, 281, 360, 307, 309, 311, 516, 50690, 50690, 281, 747, 729, 2771, 2448, 510, 293, 445, 5055, 552, 50846, 50846, 322, 264, 11760, 4691, 322, 264, 4846, 4295, 50966, 50966, 293, 550, 992, 264, 2771, 2448, 337, 264, 661, 3100, 300, 51066, 51066, 390, 406, 8209, 281, 1958, 13, 51158, 51158, 467, 311, 2293, 437, 311, 2737, 294, 11469, 7005, 278, 420, 914, 7005, 278, 13, 51326, 51326, 509, 434, 12425, 990, 807, 264, 3679, 412, 300, 558, 2535, 11, 51474, 51474, 457, 406, 12425, 990, 958, 281, 309, 13, 51616, 51616, 407, 309, 311, 1825, 10247, 11, 2264, 30, 51770, 51770, 21914, 23264, 1672, 307, 264, 912, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10953080164243097, "compression_ratio": 1.7328767123287672, "no_speech_prob": 4.157239345659036e-06}, {"id": 1115, "seek": 327808, "start": 3303.12, "end": 3306.2, "text": " So it's nothing fancy, OK?", "tokens": [50364, 2264, 11, 586, 646, 79, 1513, 559, 990, 281, 264, 691, 17, 33, 31782, 11, 50486, 50486, 341, 2146, 445, 8209, 472, 3100, 3654, 732, 13, 50612, 50612, 407, 437, 309, 311, 516, 281, 360, 307, 309, 311, 516, 50690, 50690, 281, 747, 729, 2771, 2448, 510, 293, 445, 5055, 552, 50846, 50846, 322, 264, 11760, 4691, 322, 264, 4846, 4295, 50966, 50966, 293, 550, 992, 264, 2771, 2448, 337, 264, 661, 3100, 300, 51066, 51066, 390, 406, 8209, 281, 1958, 13, 51158, 51158, 467, 311, 2293, 437, 311, 2737, 294, 11469, 7005, 278, 420, 914, 7005, 278, 13, 51326, 51326, 509, 434, 12425, 990, 807, 264, 3679, 412, 300, 558, 2535, 11, 51474, 51474, 457, 406, 12425, 990, 958, 281, 309, 13, 51616, 51616, 407, 309, 311, 1825, 10247, 11, 2264, 30, 51770, 51770, 21914, 23264, 1672, 307, 264, 912, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10953080164243097, "compression_ratio": 1.7328767123287672, "no_speech_prob": 4.157239345659036e-06}, {"id": 1116, "seek": 327808, "start": 3306.2, "end": 3307.7599999999998, "text": " Path selector is the same.", "tokens": [50364, 2264, 11, 586, 646, 79, 1513, 559, 990, 281, 264, 691, 17, 33, 31782, 11, 50486, 50486, 341, 2146, 445, 8209, 472, 3100, 3654, 732, 13, 50612, 50612, 407, 437, 309, 311, 516, 281, 360, 307, 309, 311, 516, 50690, 50690, 281, 747, 729, 2771, 2448, 510, 293, 445, 5055, 552, 50846, 50846, 322, 264, 11760, 4691, 322, 264, 4846, 4295, 50966, 50966, 293, 550, 992, 264, 2771, 2448, 337, 264, 661, 3100, 300, 51066, 51066, 390, 406, 8209, 281, 1958, 13, 51158, 51158, 467, 311, 2293, 437, 311, 2737, 294, 11469, 7005, 278, 420, 914, 7005, 278, 13, 51326, 51326, 509, 434, 12425, 990, 807, 264, 3679, 412, 300, 558, 2535, 11, 51474, 51474, 457, 406, 12425, 990, 958, 281, 309, 13, 51616, 51616, 407, 309, 311, 1825, 10247, 11, 2264, 30, 51770, 51770, 21914, 23264, 1672, 307, 264, 912, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10953080164243097, "compression_ratio": 1.7328767123287672, "no_speech_prob": 4.157239345659036e-06}, {"id": 1117, "seek": 330776, "start": 3307.76, "end": 3309.5600000000004, "text": " It's just a system that selects the path that", "tokens": [50364, 467, 311, 445, 257, 1185, 300, 3048, 82, 264, 3100, 300, 50454, 50454, 727, 5258, 264, 3006, 1867, 13, 50556, 50556, 400, 370, 286, 478, 445, 516, 281, 992, 2035, 807, 341, 13, 50980, 50980, 286, 478, 516, 281, 48256, 264, 1804, 502, 281, 264, 10346, 82, 300, 4204, 510, 13, 51234, 51234, 407, 341, 10346, 307, 300, 472, 13, 51302, 51302, 509, 536, 257, 1958, 510, 11, 457, 286, 478, 1348, 646, 281, 341, 294, 257, 3456, 13, 51466, 51466, 467, 820, 312, 257, 502, 337, 586, 13, 51544, 51544, 400, 1804, 502, 510, 11, 293, 300, 23249, 281, 341, 1804, 502, 51668, 51668, 510, 11, 2264, 30, 51740, 51740, 400, 550, 291, 393, 48256, 729, 2771, 2448, 439, 264, 636, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.13731002807617188, "compression_ratio": 1.7336065573770492, "no_speech_prob": 1.2028640412609093e-05}, {"id": 1118, "seek": 330776, "start": 3309.5600000000004, "end": 3311.6000000000004, "text": " could produce the correct answer.", "tokens": [50364, 467, 311, 445, 257, 1185, 300, 3048, 82, 264, 3100, 300, 50454, 50454, 727, 5258, 264, 3006, 1867, 13, 50556, 50556, 400, 370, 286, 478, 445, 516, 281, 992, 2035, 807, 341, 13, 50980, 50980, 286, 478, 516, 281, 48256, 264, 1804, 502, 281, 264, 10346, 82, 300, 4204, 510, 13, 51234, 51234, 407, 341, 10346, 307, 300, 472, 13, 51302, 51302, 509, 536, 257, 1958, 510, 11, 457, 286, 478, 1348, 646, 281, 341, 294, 257, 3456, 13, 51466, 51466, 467, 820, 312, 257, 502, 337, 586, 13, 51544, 51544, 400, 1804, 502, 510, 11, 293, 300, 23249, 281, 341, 1804, 502, 51668, 51668, 510, 11, 2264, 30, 51740, 51740, 400, 550, 291, 393, 48256, 729, 2771, 2448, 439, 264, 636, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.13731002807617188, "compression_ratio": 1.7336065573770492, "no_speech_prob": 1.2028640412609093e-05}, {"id": 1119, "seek": 330776, "start": 3311.6000000000004, "end": 3320.0800000000004, "text": " And so I'm just going to set whatever through this.", "tokens": [50364, 467, 311, 445, 257, 1185, 300, 3048, 82, 264, 3100, 300, 50454, 50454, 727, 5258, 264, 3006, 1867, 13, 50556, 50556, 400, 370, 286, 478, 445, 516, 281, 992, 2035, 807, 341, 13, 50980, 50980, 286, 478, 516, 281, 48256, 264, 1804, 502, 281, 264, 10346, 82, 300, 4204, 510, 13, 51234, 51234, 407, 341, 10346, 307, 300, 472, 13, 51302, 51302, 509, 536, 257, 1958, 510, 11, 457, 286, 478, 1348, 646, 281, 341, 294, 257, 3456, 13, 51466, 51466, 467, 820, 312, 257, 502, 337, 586, 13, 51544, 51544, 400, 1804, 502, 510, 11, 293, 300, 23249, 281, 341, 1804, 502, 51668, 51668, 510, 11, 2264, 30, 51740, 51740, 400, 550, 291, 393, 48256, 729, 2771, 2448, 439, 264, 636, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.13731002807617188, "compression_ratio": 1.7336065573770492, "no_speech_prob": 1.2028640412609093e-05}, {"id": 1120, "seek": 330776, "start": 3320.0800000000004, "end": 3325.1600000000003, "text": " I'm going to propagate the plus 1 to the arcs that appear here.", "tokens": [50364, 467, 311, 445, 257, 1185, 300, 3048, 82, 264, 3100, 300, 50454, 50454, 727, 5258, 264, 3006, 1867, 13, 50556, 50556, 400, 370, 286, 478, 445, 516, 281, 992, 2035, 807, 341, 13, 50980, 50980, 286, 478, 516, 281, 48256, 264, 1804, 502, 281, 264, 10346, 82, 300, 4204, 510, 13, 51234, 51234, 407, 341, 10346, 307, 300, 472, 13, 51302, 51302, 509, 536, 257, 1958, 510, 11, 457, 286, 478, 1348, 646, 281, 341, 294, 257, 3456, 13, 51466, 51466, 467, 820, 312, 257, 502, 337, 586, 13, 51544, 51544, 400, 1804, 502, 510, 11, 293, 300, 23249, 281, 341, 1804, 502, 51668, 51668, 510, 11, 2264, 30, 51740, 51740, 400, 550, 291, 393, 48256, 729, 2771, 2448, 439, 264, 636, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.13731002807617188, "compression_ratio": 1.7336065573770492, "no_speech_prob": 1.2028640412609093e-05}, {"id": 1121, "seek": 330776, "start": 3325.1600000000003, "end": 3326.5200000000004, "text": " So this arc is that one.", "tokens": [50364, 467, 311, 445, 257, 1185, 300, 3048, 82, 264, 3100, 300, 50454, 50454, 727, 5258, 264, 3006, 1867, 13, 50556, 50556, 400, 370, 286, 478, 445, 516, 281, 992, 2035, 807, 341, 13, 50980, 50980, 286, 478, 516, 281, 48256, 264, 1804, 502, 281, 264, 10346, 82, 300, 4204, 510, 13, 51234, 51234, 407, 341, 10346, 307, 300, 472, 13, 51302, 51302, 509, 536, 257, 1958, 510, 11, 457, 286, 478, 1348, 646, 281, 341, 294, 257, 3456, 13, 51466, 51466, 467, 820, 312, 257, 502, 337, 586, 13, 51544, 51544, 400, 1804, 502, 510, 11, 293, 300, 23249, 281, 341, 1804, 502, 51668, 51668, 510, 11, 2264, 30, 51740, 51740, 400, 550, 291, 393, 48256, 729, 2771, 2448, 439, 264, 636, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.13731002807617188, "compression_ratio": 1.7336065573770492, "no_speech_prob": 1.2028640412609093e-05}, {"id": 1122, "seek": 330776, "start": 3326.5200000000004, "end": 3329.8, "text": " You see a 0 here, but I'm coming back to this in a minute.", "tokens": [50364, 467, 311, 445, 257, 1185, 300, 3048, 82, 264, 3100, 300, 50454, 50454, 727, 5258, 264, 3006, 1867, 13, 50556, 50556, 400, 370, 286, 478, 445, 516, 281, 992, 2035, 807, 341, 13, 50980, 50980, 286, 478, 516, 281, 48256, 264, 1804, 502, 281, 264, 10346, 82, 300, 4204, 510, 13, 51234, 51234, 407, 341, 10346, 307, 300, 472, 13, 51302, 51302, 509, 536, 257, 1958, 510, 11, 457, 286, 478, 1348, 646, 281, 341, 294, 257, 3456, 13, 51466, 51466, 467, 820, 312, 257, 502, 337, 586, 13, 51544, 51544, 400, 1804, 502, 510, 11, 293, 300, 23249, 281, 341, 1804, 502, 51668, 51668, 510, 11, 2264, 30, 51740, 51740, 400, 550, 291, 393, 48256, 729, 2771, 2448, 439, 264, 636, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.13731002807617188, "compression_ratio": 1.7336065573770492, "no_speech_prob": 1.2028640412609093e-05}, {"id": 1123, "seek": 330776, "start": 3329.8, "end": 3331.36, "text": " It should be a 1 for now.", "tokens": [50364, 467, 311, 445, 257, 1185, 300, 3048, 82, 264, 3100, 300, 50454, 50454, 727, 5258, 264, 3006, 1867, 13, 50556, 50556, 400, 370, 286, 478, 445, 516, 281, 992, 2035, 807, 341, 13, 50980, 50980, 286, 478, 516, 281, 48256, 264, 1804, 502, 281, 264, 10346, 82, 300, 4204, 510, 13, 51234, 51234, 407, 341, 10346, 307, 300, 472, 13, 51302, 51302, 509, 536, 257, 1958, 510, 11, 457, 286, 478, 1348, 646, 281, 341, 294, 257, 3456, 13, 51466, 51466, 467, 820, 312, 257, 502, 337, 586, 13, 51544, 51544, 400, 1804, 502, 510, 11, 293, 300, 23249, 281, 341, 1804, 502, 51668, 51668, 510, 11, 2264, 30, 51740, 51740, 400, 550, 291, 393, 48256, 729, 2771, 2448, 439, 264, 636, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.13731002807617188, "compression_ratio": 1.7336065573770492, "no_speech_prob": 1.2028640412609093e-05}, {"id": 1124, "seek": 330776, "start": 3331.36, "end": 3333.84, "text": " And plus 1 here, and that corresponds to this plus 1", "tokens": [50364, 467, 311, 445, 257, 1185, 300, 3048, 82, 264, 3100, 300, 50454, 50454, 727, 5258, 264, 3006, 1867, 13, 50556, 50556, 400, 370, 286, 478, 445, 516, 281, 992, 2035, 807, 341, 13, 50980, 50980, 286, 478, 516, 281, 48256, 264, 1804, 502, 281, 264, 10346, 82, 300, 4204, 510, 13, 51234, 51234, 407, 341, 10346, 307, 300, 472, 13, 51302, 51302, 509, 536, 257, 1958, 510, 11, 457, 286, 478, 1348, 646, 281, 341, 294, 257, 3456, 13, 51466, 51466, 467, 820, 312, 257, 502, 337, 586, 13, 51544, 51544, 400, 1804, 502, 510, 11, 293, 300, 23249, 281, 341, 1804, 502, 51668, 51668, 510, 11, 2264, 30, 51740, 51740, 400, 550, 291, 393, 48256, 729, 2771, 2448, 439, 264, 636, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.13731002807617188, "compression_ratio": 1.7336065573770492, "no_speech_prob": 1.2028640412609093e-05}, {"id": 1125, "seek": 330776, "start": 3333.84, "end": 3335.28, "text": " here, OK?", "tokens": [50364, 467, 311, 445, 257, 1185, 300, 3048, 82, 264, 3100, 300, 50454, 50454, 727, 5258, 264, 3006, 1867, 13, 50556, 50556, 400, 370, 286, 478, 445, 516, 281, 992, 2035, 807, 341, 13, 50980, 50980, 286, 478, 516, 281, 48256, 264, 1804, 502, 281, 264, 10346, 82, 300, 4204, 510, 13, 51234, 51234, 407, 341, 10346, 307, 300, 472, 13, 51302, 51302, 509, 536, 257, 1958, 510, 11, 457, 286, 478, 1348, 646, 281, 341, 294, 257, 3456, 13, 51466, 51466, 467, 820, 312, 257, 502, 337, 586, 13, 51544, 51544, 400, 1804, 502, 510, 11, 293, 300, 23249, 281, 341, 1804, 502, 51668, 51668, 510, 11, 2264, 30, 51740, 51740, 400, 550, 291, 393, 48256, 729, 2771, 2448, 439, 264, 636, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.13731002807617188, "compression_ratio": 1.7336065573770492, "no_speech_prob": 1.2028640412609093e-05}, {"id": 1126, "seek": 330776, "start": 3335.28, "end": 3337.2400000000002, "text": " And then you can propagate those gradients all the way", "tokens": [50364, 467, 311, 445, 257, 1185, 300, 3048, 82, 264, 3100, 300, 50454, 50454, 727, 5258, 264, 3006, 1867, 13, 50556, 50556, 400, 370, 286, 478, 445, 516, 281, 992, 2035, 807, 341, 13, 50980, 50980, 286, 478, 516, 281, 48256, 264, 1804, 502, 281, 264, 10346, 82, 300, 4204, 510, 13, 51234, 51234, 407, 341, 10346, 307, 300, 472, 13, 51302, 51302, 509, 536, 257, 1958, 510, 11, 457, 286, 478, 1348, 646, 281, 341, 294, 257, 3456, 13, 51466, 51466, 467, 820, 312, 257, 502, 337, 586, 13, 51544, 51544, 400, 1804, 502, 510, 11, 293, 300, 23249, 281, 341, 1804, 502, 51668, 51668, 510, 11, 2264, 30, 51740, 51740, 400, 550, 291, 393, 48256, 729, 2771, 2448, 439, 264, 636, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.13731002807617188, "compression_ratio": 1.7336065573770492, "no_speech_prob": 1.2028640412609093e-05}, {"id": 1127, "seek": 333724, "start": 3337.24, "end": 3339.08, "text": " through the neural net and adjust the weights", "tokens": [50364, 807, 264, 18161, 2533, 293, 4369, 264, 17443, 50456, 50456, 370, 300, 341, 2281, 1709, 760, 13, 50534, 50534, 2264, 11, 370, 300, 486, 747, 1127, 295, 1455, 50640, 50640, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 50824, 50824, 538, 646, 12425, 990, 807, 341, 551, 13, 50896, 50896, 823, 11, 437, 311, 1021, 466, 341, 307, 300, 341, 3877, 510, 51088, 51088, 307, 8546, 294, 264, 2020, 300, 498, 286, 976, 291, 257, 777, 4846, 11, 51284, 51284, 264, 1230, 295, 14519, 295, 341, 18161, 2533, 51390, 51390, 486, 1319, 365, 264, 1230, 295, 19904, 13, 51512, 51512, 440, 4295, 510, 486, 1319, 13, 51624, 51624, 3950, 24877, 486, 1319, 2584, 13, 51712, 51712, 400, 370, 286, 643, 281, 312, 1075, 281, 646, 48256, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14800586700439453, "compression_ratio": 1.773851590106007, "no_speech_prob": 1.34195652208291e-05}, {"id": 1128, "seek": 333724, "start": 3339.08, "end": 3340.64, "text": " so that this energy goes down.", "tokens": [50364, 807, 264, 18161, 2533, 293, 4369, 264, 17443, 50456, 50456, 370, 300, 341, 2281, 1709, 760, 13, 50534, 50534, 2264, 11, 370, 300, 486, 747, 1127, 295, 1455, 50640, 50640, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 50824, 50824, 538, 646, 12425, 990, 807, 341, 551, 13, 50896, 50896, 823, 11, 437, 311, 1021, 466, 341, 307, 300, 341, 3877, 510, 51088, 51088, 307, 8546, 294, 264, 2020, 300, 498, 286, 976, 291, 257, 777, 4846, 11, 51284, 51284, 264, 1230, 295, 14519, 295, 341, 18161, 2533, 51390, 51390, 486, 1319, 365, 264, 1230, 295, 19904, 13, 51512, 51512, 440, 4295, 510, 486, 1319, 13, 51624, 51624, 3950, 24877, 486, 1319, 2584, 13, 51712, 51712, 400, 370, 286, 643, 281, 312, 1075, 281, 646, 48256, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14800586700439453, "compression_ratio": 1.773851590106007, "no_speech_prob": 1.34195652208291e-05}, {"id": 1129, "seek": 333724, "start": 3340.64, "end": 3342.7599999999998, "text": " OK, so that will take care of making", "tokens": [50364, 807, 264, 18161, 2533, 293, 4369, 264, 17443, 50456, 50456, 370, 300, 341, 2281, 1709, 760, 13, 50534, 50534, 2264, 11, 370, 300, 486, 747, 1127, 295, 1455, 50640, 50640, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 50824, 50824, 538, 646, 12425, 990, 807, 341, 551, 13, 50896, 50896, 823, 11, 437, 311, 1021, 466, 341, 307, 300, 341, 3877, 510, 51088, 51088, 307, 8546, 294, 264, 2020, 300, 498, 286, 976, 291, 257, 777, 4846, 11, 51284, 51284, 264, 1230, 295, 14519, 295, 341, 18161, 2533, 51390, 51390, 486, 1319, 365, 264, 1230, 295, 19904, 13, 51512, 51512, 440, 4295, 510, 486, 1319, 13, 51624, 51624, 3950, 24877, 486, 1319, 2584, 13, 51712, 51712, 400, 370, 286, 643, 281, 312, 1075, 281, 646, 48256, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14800586700439453, "compression_ratio": 1.773851590106007, "no_speech_prob": 1.34195652208291e-05}, {"id": 1130, "seek": 333724, "start": 3342.7599999999998, "end": 3346.4399999999996, "text": " the energy of the correct answer small,", "tokens": [50364, 807, 264, 18161, 2533, 293, 4369, 264, 17443, 50456, 50456, 370, 300, 341, 2281, 1709, 760, 13, 50534, 50534, 2264, 11, 370, 300, 486, 747, 1127, 295, 1455, 50640, 50640, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 50824, 50824, 538, 646, 12425, 990, 807, 341, 551, 13, 50896, 50896, 823, 11, 437, 311, 1021, 466, 341, 307, 300, 341, 3877, 510, 51088, 51088, 307, 8546, 294, 264, 2020, 300, 498, 286, 976, 291, 257, 777, 4846, 11, 51284, 51284, 264, 1230, 295, 14519, 295, 341, 18161, 2533, 51390, 51390, 486, 1319, 365, 264, 1230, 295, 19904, 13, 51512, 51512, 440, 4295, 510, 486, 1319, 13, 51624, 51624, 3950, 24877, 486, 1319, 2584, 13, 51712, 51712, 400, 370, 286, 643, 281, 312, 1075, 281, 646, 48256, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14800586700439453, "compression_ratio": 1.773851590106007, "no_speech_prob": 1.34195652208291e-05}, {"id": 1131, "seek": 333724, "start": 3346.4399999999996, "end": 3347.8799999999997, "text": " by back propagating through this thing.", "tokens": [50364, 807, 264, 18161, 2533, 293, 4369, 264, 17443, 50456, 50456, 370, 300, 341, 2281, 1709, 760, 13, 50534, 50534, 2264, 11, 370, 300, 486, 747, 1127, 295, 1455, 50640, 50640, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 50824, 50824, 538, 646, 12425, 990, 807, 341, 551, 13, 50896, 50896, 823, 11, 437, 311, 1021, 466, 341, 307, 300, 341, 3877, 510, 51088, 51088, 307, 8546, 294, 264, 2020, 300, 498, 286, 976, 291, 257, 777, 4846, 11, 51284, 51284, 264, 1230, 295, 14519, 295, 341, 18161, 2533, 51390, 51390, 486, 1319, 365, 264, 1230, 295, 19904, 13, 51512, 51512, 440, 4295, 510, 486, 1319, 13, 51624, 51624, 3950, 24877, 486, 1319, 2584, 13, 51712, 51712, 400, 370, 286, 643, 281, 312, 1075, 281, 646, 48256, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14800586700439453, "compression_ratio": 1.773851590106007, "no_speech_prob": 1.34195652208291e-05}, {"id": 1132, "seek": 333724, "start": 3347.8799999999997, "end": 3351.72, "text": " Now, what's important about this is that this structure here", "tokens": [50364, 807, 264, 18161, 2533, 293, 4369, 264, 17443, 50456, 50456, 370, 300, 341, 2281, 1709, 760, 13, 50534, 50534, 2264, 11, 370, 300, 486, 747, 1127, 295, 1455, 50640, 50640, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 50824, 50824, 538, 646, 12425, 990, 807, 341, 551, 13, 50896, 50896, 823, 11, 437, 311, 1021, 466, 341, 307, 300, 341, 3877, 510, 51088, 51088, 307, 8546, 294, 264, 2020, 300, 498, 286, 976, 291, 257, 777, 4846, 11, 51284, 51284, 264, 1230, 295, 14519, 295, 341, 18161, 2533, 51390, 51390, 486, 1319, 365, 264, 1230, 295, 19904, 13, 51512, 51512, 440, 4295, 510, 486, 1319, 13, 51624, 51624, 3950, 24877, 486, 1319, 2584, 13, 51712, 51712, 400, 370, 286, 643, 281, 312, 1075, 281, 646, 48256, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14800586700439453, "compression_ratio": 1.773851590106007, "no_speech_prob": 1.34195652208291e-05}, {"id": 1133, "seek": 333724, "start": 3351.72, "end": 3355.64, "text": " is dynamic in the sense that if I give you a new input,", "tokens": [50364, 807, 264, 18161, 2533, 293, 4369, 264, 17443, 50456, 50456, 370, 300, 341, 2281, 1709, 760, 13, 50534, 50534, 2264, 11, 370, 300, 486, 747, 1127, 295, 1455, 50640, 50640, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 50824, 50824, 538, 646, 12425, 990, 807, 341, 551, 13, 50896, 50896, 823, 11, 437, 311, 1021, 466, 341, 307, 300, 341, 3877, 510, 51088, 51088, 307, 8546, 294, 264, 2020, 300, 498, 286, 976, 291, 257, 777, 4846, 11, 51284, 51284, 264, 1230, 295, 14519, 295, 341, 18161, 2533, 51390, 51390, 486, 1319, 365, 264, 1230, 295, 19904, 13, 51512, 51512, 440, 4295, 510, 486, 1319, 13, 51624, 51624, 3950, 24877, 486, 1319, 2584, 13, 51712, 51712, 400, 370, 286, 643, 281, 312, 1075, 281, 646, 48256, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14800586700439453, "compression_ratio": 1.773851590106007, "no_speech_prob": 1.34195652208291e-05}, {"id": 1134, "seek": 333724, "start": 3355.64, "end": 3357.7599999999998, "text": " the number of instances of this neural net", "tokens": [50364, 807, 264, 18161, 2533, 293, 4369, 264, 17443, 50456, 50456, 370, 300, 341, 2281, 1709, 760, 13, 50534, 50534, 2264, 11, 370, 300, 486, 747, 1127, 295, 1455, 50640, 50640, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 50824, 50824, 538, 646, 12425, 990, 807, 341, 551, 13, 50896, 50896, 823, 11, 437, 311, 1021, 466, 341, 307, 300, 341, 3877, 510, 51088, 51088, 307, 8546, 294, 264, 2020, 300, 498, 286, 976, 291, 257, 777, 4846, 11, 51284, 51284, 264, 1230, 295, 14519, 295, 341, 18161, 2533, 51390, 51390, 486, 1319, 365, 264, 1230, 295, 19904, 13, 51512, 51512, 440, 4295, 510, 486, 1319, 13, 51624, 51624, 3950, 24877, 486, 1319, 2584, 13, 51712, 51712, 400, 370, 286, 643, 281, 312, 1075, 281, 646, 48256, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14800586700439453, "compression_ratio": 1.773851590106007, "no_speech_prob": 1.34195652208291e-05}, {"id": 1135, "seek": 333724, "start": 3357.7599999999998, "end": 3360.2, "text": " will change with the number of segments.", "tokens": [50364, 807, 264, 18161, 2533, 293, 4369, 264, 17443, 50456, 50456, 370, 300, 341, 2281, 1709, 760, 13, 50534, 50534, 2264, 11, 370, 300, 486, 747, 1127, 295, 1455, 50640, 50640, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 50824, 50824, 538, 646, 12425, 990, 807, 341, 551, 13, 50896, 50896, 823, 11, 437, 311, 1021, 466, 341, 307, 300, 341, 3877, 510, 51088, 51088, 307, 8546, 294, 264, 2020, 300, 498, 286, 976, 291, 257, 777, 4846, 11, 51284, 51284, 264, 1230, 295, 14519, 295, 341, 18161, 2533, 51390, 51390, 486, 1319, 365, 264, 1230, 295, 19904, 13, 51512, 51512, 440, 4295, 510, 486, 1319, 13, 51624, 51624, 3950, 24877, 486, 1319, 2584, 13, 51712, 51712, 400, 370, 286, 643, 281, 312, 1075, 281, 646, 48256, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14800586700439453, "compression_ratio": 1.773851590106007, "no_speech_prob": 1.34195652208291e-05}, {"id": 1136, "seek": 333724, "start": 3360.2, "end": 3362.4399999999996, "text": " The graph here will change.", "tokens": [50364, 807, 264, 18161, 2533, 293, 4369, 264, 17443, 50456, 50456, 370, 300, 341, 2281, 1709, 760, 13, 50534, 50534, 2264, 11, 370, 300, 486, 747, 1127, 295, 1455, 50640, 50640, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 50824, 50824, 538, 646, 12425, 990, 807, 341, 551, 13, 50896, 50896, 823, 11, 437, 311, 1021, 466, 341, 307, 300, 341, 3877, 510, 51088, 51088, 307, 8546, 294, 264, 2020, 300, 498, 286, 976, 291, 257, 777, 4846, 11, 51284, 51284, 264, 1230, 295, 14519, 295, 341, 18161, 2533, 51390, 51390, 486, 1319, 365, 264, 1230, 295, 19904, 13, 51512, 51512, 440, 4295, 510, 486, 1319, 13, 51624, 51624, 3950, 24877, 486, 1319, 2584, 13, 51712, 51712, 400, 370, 286, 643, 281, 312, 1075, 281, 646, 48256, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14800586700439453, "compression_ratio": 1.773851590106007, "no_speech_prob": 1.34195652208291e-05}, {"id": 1137, "seek": 333724, "start": 3362.4399999999996, "end": 3364.2, "text": " Those graphs will change completely.", "tokens": [50364, 807, 264, 18161, 2533, 293, 4369, 264, 17443, 50456, 50456, 370, 300, 341, 2281, 1709, 760, 13, 50534, 50534, 2264, 11, 370, 300, 486, 747, 1127, 295, 1455, 50640, 50640, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 50824, 50824, 538, 646, 12425, 990, 807, 341, 551, 13, 50896, 50896, 823, 11, 437, 311, 1021, 466, 341, 307, 300, 341, 3877, 510, 51088, 51088, 307, 8546, 294, 264, 2020, 300, 498, 286, 976, 291, 257, 777, 4846, 11, 51284, 51284, 264, 1230, 295, 14519, 295, 341, 18161, 2533, 51390, 51390, 486, 1319, 365, 264, 1230, 295, 19904, 13, 51512, 51512, 440, 4295, 510, 486, 1319, 13, 51624, 51624, 3950, 24877, 486, 1319, 2584, 13, 51712, 51712, 400, 370, 286, 643, 281, 312, 1075, 281, 646, 48256, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14800586700439453, "compression_ratio": 1.773851590106007, "no_speech_prob": 1.34195652208291e-05}, {"id": 1138, "seek": 333724, "start": 3364.2, "end": 3365.8799999999997, "text": " And so I need to be able to back propagate", "tokens": [50364, 807, 264, 18161, 2533, 293, 4369, 264, 17443, 50456, 50456, 370, 300, 341, 2281, 1709, 760, 13, 50534, 50534, 2264, 11, 370, 300, 486, 747, 1127, 295, 1455, 50640, 50640, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 50824, 50824, 538, 646, 12425, 990, 807, 341, 551, 13, 50896, 50896, 823, 11, 437, 311, 1021, 466, 341, 307, 300, 341, 3877, 510, 51088, 51088, 307, 8546, 294, 264, 2020, 300, 498, 286, 976, 291, 257, 777, 4846, 11, 51284, 51284, 264, 1230, 295, 14519, 295, 341, 18161, 2533, 51390, 51390, 486, 1319, 365, 264, 1230, 295, 19904, 13, 51512, 51512, 440, 4295, 510, 486, 1319, 13, 51624, 51624, 3950, 24877, 486, 1319, 2584, 13, 51712, 51712, 400, 370, 286, 643, 281, 312, 1075, 281, 646, 48256, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14800586700439453, "compression_ratio": 1.773851590106007, "no_speech_prob": 1.34195652208291e-05}, {"id": 1139, "seek": 336588, "start": 3365.88, "end": 3368.84, "text": " through this kind of dynamical structure, if you want.", "tokens": [50364, 807, 341, 733, 295, 5999, 804, 3877, 11, 498, 291, 528, 13, 50512, 50512, 400, 341, 307, 6851, 689, 721, 411, 25878, 284, 339, 50634, 50634, 366, 534, 1021, 570, 291, 528, 50730, 50730, 281, 312, 1075, 281, 4813, 729, 733, 295, 5999, 804, 9227, 300, 50926, 50926, 1319, 365, 633, 6889, 13, 51010, 51010, 2264, 11, 370, 341, 646, 38377, 5574, 51142, 51142, 2516, 1127, 295, 1455, 264, 2281, 295, 264, 3006, 1867, 1359, 13, 51372, 51372, 823, 11, 577, 360, 321, 652, 264, 2281, 295, 18424, 1867, 2416, 30, 51566, 51566, 1042, 11, 456, 311, 516, 281, 312, 257, 1150, 5574, 689, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14758196583500616, "compression_ratio": 1.7298387096774193, "no_speech_prob": 8.939025974541437e-06}, {"id": 1140, "seek": 336588, "start": 3368.84, "end": 3371.28, "text": " And this is situations where things like pytorch", "tokens": [50364, 807, 341, 733, 295, 5999, 804, 3877, 11, 498, 291, 528, 13, 50512, 50512, 400, 341, 307, 6851, 689, 721, 411, 25878, 284, 339, 50634, 50634, 366, 534, 1021, 570, 291, 528, 50730, 50730, 281, 312, 1075, 281, 4813, 729, 733, 295, 5999, 804, 9227, 300, 50926, 50926, 1319, 365, 633, 6889, 13, 51010, 51010, 2264, 11, 370, 341, 646, 38377, 5574, 51142, 51142, 2516, 1127, 295, 1455, 264, 2281, 295, 264, 3006, 1867, 1359, 13, 51372, 51372, 823, 11, 577, 360, 321, 652, 264, 2281, 295, 18424, 1867, 2416, 30, 51566, 51566, 1042, 11, 456, 311, 516, 281, 312, 257, 1150, 5574, 689, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14758196583500616, "compression_ratio": 1.7298387096774193, "no_speech_prob": 8.939025974541437e-06}, {"id": 1141, "seek": 336588, "start": 3371.28, "end": 3373.2000000000003, "text": " are really important because you want", "tokens": [50364, 807, 341, 733, 295, 5999, 804, 3877, 11, 498, 291, 528, 13, 50512, 50512, 400, 341, 307, 6851, 689, 721, 411, 25878, 284, 339, 50634, 50634, 366, 534, 1021, 570, 291, 528, 50730, 50730, 281, 312, 1075, 281, 4813, 729, 733, 295, 5999, 804, 9227, 300, 50926, 50926, 1319, 365, 633, 6889, 13, 51010, 51010, 2264, 11, 370, 341, 646, 38377, 5574, 51142, 51142, 2516, 1127, 295, 1455, 264, 2281, 295, 264, 3006, 1867, 1359, 13, 51372, 51372, 823, 11, 577, 360, 321, 652, 264, 2281, 295, 18424, 1867, 2416, 30, 51566, 51566, 1042, 11, 456, 311, 516, 281, 312, 257, 1150, 5574, 689, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14758196583500616, "compression_ratio": 1.7298387096774193, "no_speech_prob": 8.939025974541437e-06}, {"id": 1142, "seek": 336588, "start": 3373.2000000000003, "end": 3377.12, "text": " to be able to handle those kind of dynamical structures that", "tokens": [50364, 807, 341, 733, 295, 5999, 804, 3877, 11, 498, 291, 528, 13, 50512, 50512, 400, 341, 307, 6851, 689, 721, 411, 25878, 284, 339, 50634, 50634, 366, 534, 1021, 570, 291, 528, 50730, 50730, 281, 312, 1075, 281, 4813, 729, 733, 295, 5999, 804, 9227, 300, 50926, 50926, 1319, 365, 633, 6889, 13, 51010, 51010, 2264, 11, 370, 341, 646, 38377, 5574, 51142, 51142, 2516, 1127, 295, 1455, 264, 2281, 295, 264, 3006, 1867, 1359, 13, 51372, 51372, 823, 11, 577, 360, 321, 652, 264, 2281, 295, 18424, 1867, 2416, 30, 51566, 51566, 1042, 11, 456, 311, 516, 281, 312, 257, 1150, 5574, 689, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14758196583500616, "compression_ratio": 1.7298387096774193, "no_speech_prob": 8.939025974541437e-06}, {"id": 1143, "seek": 336588, "start": 3377.12, "end": 3378.8, "text": " change with every sample.", "tokens": [50364, 807, 341, 733, 295, 5999, 804, 3877, 11, 498, 291, 528, 13, 50512, 50512, 400, 341, 307, 6851, 689, 721, 411, 25878, 284, 339, 50634, 50634, 366, 534, 1021, 570, 291, 528, 50730, 50730, 281, 312, 1075, 281, 4813, 729, 733, 295, 5999, 804, 9227, 300, 50926, 50926, 1319, 365, 633, 6889, 13, 51010, 51010, 2264, 11, 370, 341, 646, 38377, 5574, 51142, 51142, 2516, 1127, 295, 1455, 264, 2281, 295, 264, 3006, 1867, 1359, 13, 51372, 51372, 823, 11, 577, 360, 321, 652, 264, 2281, 295, 18424, 1867, 2416, 30, 51566, 51566, 1042, 11, 456, 311, 516, 281, 312, 257, 1150, 5574, 689, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14758196583500616, "compression_ratio": 1.7298387096774193, "no_speech_prob": 8.939025974541437e-06}, {"id": 1144, "seek": 336588, "start": 3378.8, "end": 3381.44, "text": " OK, so this back propagation phase", "tokens": [50364, 807, 341, 733, 295, 5999, 804, 3877, 11, 498, 291, 528, 13, 50512, 50512, 400, 341, 307, 6851, 689, 721, 411, 25878, 284, 339, 50634, 50634, 366, 534, 1021, 570, 291, 528, 50730, 50730, 281, 312, 1075, 281, 4813, 729, 733, 295, 5999, 804, 9227, 300, 50926, 50926, 1319, 365, 633, 6889, 13, 51010, 51010, 2264, 11, 370, 341, 646, 38377, 5574, 51142, 51142, 2516, 1127, 295, 1455, 264, 2281, 295, 264, 3006, 1867, 1359, 13, 51372, 51372, 823, 11, 577, 360, 321, 652, 264, 2281, 295, 18424, 1867, 2416, 30, 51566, 51566, 1042, 11, 456, 311, 516, 281, 312, 257, 1150, 5574, 689, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14758196583500616, "compression_ratio": 1.7298387096774193, "no_speech_prob": 8.939025974541437e-06}, {"id": 1145, "seek": 336588, "start": 3381.44, "end": 3386.04, "text": " takes care of making the energy of the correct answer small.", "tokens": [50364, 807, 341, 733, 295, 5999, 804, 3877, 11, 498, 291, 528, 13, 50512, 50512, 400, 341, 307, 6851, 689, 721, 411, 25878, 284, 339, 50634, 50634, 366, 534, 1021, 570, 291, 528, 50730, 50730, 281, 312, 1075, 281, 4813, 729, 733, 295, 5999, 804, 9227, 300, 50926, 50926, 1319, 365, 633, 6889, 13, 51010, 51010, 2264, 11, 370, 341, 646, 38377, 5574, 51142, 51142, 2516, 1127, 295, 1455, 264, 2281, 295, 264, 3006, 1867, 1359, 13, 51372, 51372, 823, 11, 577, 360, 321, 652, 264, 2281, 295, 18424, 1867, 2416, 30, 51566, 51566, 1042, 11, 456, 311, 516, 281, 312, 257, 1150, 5574, 689, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14758196583500616, "compression_ratio": 1.7298387096774193, "no_speech_prob": 8.939025974541437e-06}, {"id": 1146, "seek": 336588, "start": 3386.04, "end": 3389.92, "text": " Now, how do we make the energy of incorrect answer large?", "tokens": [50364, 807, 341, 733, 295, 5999, 804, 3877, 11, 498, 291, 528, 13, 50512, 50512, 400, 341, 307, 6851, 689, 721, 411, 25878, 284, 339, 50634, 50634, 366, 534, 1021, 570, 291, 528, 50730, 50730, 281, 312, 1075, 281, 4813, 729, 733, 295, 5999, 804, 9227, 300, 50926, 50926, 1319, 365, 633, 6889, 13, 51010, 51010, 2264, 11, 370, 341, 646, 38377, 5574, 51142, 51142, 2516, 1127, 295, 1455, 264, 2281, 295, 264, 3006, 1867, 1359, 13, 51372, 51372, 823, 11, 577, 360, 321, 652, 264, 2281, 295, 18424, 1867, 2416, 30, 51566, 51566, 1042, 11, 456, 311, 516, 281, 312, 257, 1150, 5574, 689, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14758196583500616, "compression_ratio": 1.7298387096774193, "no_speech_prob": 8.939025974541437e-06}, {"id": 1147, "seek": 336588, "start": 3389.92, "end": 3394.04, "text": " Well, there's going to be a second phase where", "tokens": [50364, 807, 341, 733, 295, 5999, 804, 3877, 11, 498, 291, 528, 13, 50512, 50512, 400, 341, 307, 6851, 689, 721, 411, 25878, 284, 339, 50634, 50634, 366, 534, 1021, 570, 291, 528, 50730, 50730, 281, 312, 1075, 281, 4813, 729, 733, 295, 5999, 804, 9227, 300, 50926, 50926, 1319, 365, 633, 6889, 13, 51010, 51010, 2264, 11, 370, 341, 646, 38377, 5574, 51142, 51142, 2516, 1127, 295, 1455, 264, 2281, 295, 264, 3006, 1867, 1359, 13, 51372, 51372, 823, 11, 577, 360, 321, 652, 264, 2281, 295, 18424, 1867, 2416, 30, 51566, 51566, 1042, 11, 456, 311, 516, 281, 312, 257, 1150, 5574, 689, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14758196583500616, "compression_ratio": 1.7298387096774193, "no_speech_prob": 8.939025974541437e-06}, {"id": 1148, "seek": 339404, "start": 3394.04, "end": 3396.44, "text": " in this case, we're just going to let the system pick whatever", "tokens": [50364, 294, 341, 1389, 11, 321, 434, 445, 516, 281, 718, 264, 1185, 1888, 2035, 50484, 50484, 1867, 309, 2738, 13, 50522, 50672, 400, 341, 307, 733, 295, 257, 26335, 1254, 50840, 50840, 295, 20828, 1166, 3097, 337, 3877, 17630, 50996, 50996, 300, 4960, 257, 1254, 295, 264, 43276, 2044, 4470, 11, 498, 291, 528, 13, 51272, 51272, 2264, 11, 370, 264, 700, 1326, 10232, 366, 2293, 51418, 51418, 14800, 281, 437, 286, 2825, 466, 3071, 13, 51568, 51568, 583, 510, 11, 264, 691, 1681, 5614, 31782, 51654, 51654, 445, 16137, 264, 1151, 3100, 3654, 439, 264, 14518, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1439336140950521, "compression_ratio": 1.5524193548387097, "no_speech_prob": 6.1436558098648675e-06}, {"id": 1149, "seek": 339404, "start": 3396.44, "end": 3397.2, "text": " answer it wants.", "tokens": [50364, 294, 341, 1389, 11, 321, 434, 445, 516, 281, 718, 264, 1185, 1888, 2035, 50484, 50484, 1867, 309, 2738, 13, 50522, 50672, 400, 341, 307, 733, 295, 257, 26335, 1254, 50840, 50840, 295, 20828, 1166, 3097, 337, 3877, 17630, 50996, 50996, 300, 4960, 257, 1254, 295, 264, 43276, 2044, 4470, 11, 498, 291, 528, 13, 51272, 51272, 2264, 11, 370, 264, 700, 1326, 10232, 366, 2293, 51418, 51418, 14800, 281, 437, 286, 2825, 466, 3071, 13, 51568, 51568, 583, 510, 11, 264, 691, 1681, 5614, 31782, 51654, 51654, 445, 16137, 264, 1151, 3100, 3654, 439, 264, 14518, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1439336140950521, "compression_ratio": 1.5524193548387097, "no_speech_prob": 6.1436558098648675e-06}, {"id": 1150, "seek": 339404, "start": 3400.2, "end": 3403.56, "text": " And this is kind of a simplified form", "tokens": [50364, 294, 341, 1389, 11, 321, 434, 445, 516, 281, 718, 264, 1185, 1888, 2035, 50484, 50484, 1867, 309, 2738, 13, 50522, 50672, 400, 341, 307, 733, 295, 257, 26335, 1254, 50840, 50840, 295, 20828, 1166, 3097, 337, 3877, 17630, 50996, 50996, 300, 4960, 257, 1254, 295, 264, 43276, 2044, 4470, 11, 498, 291, 528, 13, 51272, 51272, 2264, 11, 370, 264, 700, 1326, 10232, 366, 2293, 51418, 51418, 14800, 281, 437, 286, 2825, 466, 3071, 13, 51568, 51568, 583, 510, 11, 264, 691, 1681, 5614, 31782, 51654, 51654, 445, 16137, 264, 1151, 3100, 3654, 439, 264, 14518, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1439336140950521, "compression_ratio": 1.5524193548387097, "no_speech_prob": 6.1436558098648675e-06}, {"id": 1151, "seek": 339404, "start": 3403.56, "end": 3406.68, "text": " of discriminative training for structure prediction", "tokens": [50364, 294, 341, 1389, 11, 321, 434, 445, 516, 281, 718, 264, 1185, 1888, 2035, 50484, 50484, 1867, 309, 2738, 13, 50522, 50672, 400, 341, 307, 733, 295, 257, 26335, 1254, 50840, 50840, 295, 20828, 1166, 3097, 337, 3877, 17630, 50996, 50996, 300, 4960, 257, 1254, 295, 264, 43276, 2044, 4470, 11, 498, 291, 528, 13, 51272, 51272, 2264, 11, 370, 264, 700, 1326, 10232, 366, 2293, 51418, 51418, 14800, 281, 437, 286, 2825, 466, 3071, 13, 51568, 51568, 583, 510, 11, 264, 691, 1681, 5614, 31782, 51654, 51654, 445, 16137, 264, 1151, 3100, 3654, 439, 264, 14518, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1439336140950521, "compression_ratio": 1.5524193548387097, "no_speech_prob": 6.1436558098648675e-06}, {"id": 1152, "seek": 339404, "start": 3406.68, "end": 3412.2, "text": " that uses a form of the perceptron loss, if you want.", "tokens": [50364, 294, 341, 1389, 11, 321, 434, 445, 516, 281, 718, 264, 1185, 1888, 2035, 50484, 50484, 1867, 309, 2738, 13, 50522, 50672, 400, 341, 307, 733, 295, 257, 26335, 1254, 50840, 50840, 295, 20828, 1166, 3097, 337, 3877, 17630, 50996, 50996, 300, 4960, 257, 1254, 295, 264, 43276, 2044, 4470, 11, 498, 291, 528, 13, 51272, 51272, 2264, 11, 370, 264, 700, 1326, 10232, 366, 2293, 51418, 51418, 14800, 281, 437, 286, 2825, 466, 3071, 13, 51568, 51568, 583, 510, 11, 264, 691, 1681, 5614, 31782, 51654, 51654, 445, 16137, 264, 1151, 3100, 3654, 439, 264, 14518, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1439336140950521, "compression_ratio": 1.5524193548387097, "no_speech_prob": 6.1436558098648675e-06}, {"id": 1153, "seek": 339404, "start": 3412.2, "end": 3415.12, "text": " OK, so the first few stages are exactly", "tokens": [50364, 294, 341, 1389, 11, 321, 434, 445, 516, 281, 718, 264, 1185, 1888, 2035, 50484, 50484, 1867, 309, 2738, 13, 50522, 50672, 400, 341, 307, 733, 295, 257, 26335, 1254, 50840, 50840, 295, 20828, 1166, 3097, 337, 3877, 17630, 50996, 50996, 300, 4960, 257, 1254, 295, 264, 43276, 2044, 4470, 11, 498, 291, 528, 13, 51272, 51272, 2264, 11, 370, 264, 700, 1326, 10232, 366, 2293, 51418, 51418, 14800, 281, 437, 286, 2825, 466, 3071, 13, 51568, 51568, 583, 510, 11, 264, 691, 1681, 5614, 31782, 51654, 51654, 445, 16137, 264, 1151, 3100, 3654, 439, 264, 14518, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1439336140950521, "compression_ratio": 1.5524193548387097, "no_speech_prob": 6.1436558098648675e-06}, {"id": 1154, "seek": 339404, "start": 3415.12, "end": 3418.12, "text": " identical to what I talked about earlier.", "tokens": [50364, 294, 341, 1389, 11, 321, 434, 445, 516, 281, 718, 264, 1185, 1888, 2035, 50484, 50484, 1867, 309, 2738, 13, 50522, 50672, 400, 341, 307, 733, 295, 257, 26335, 1254, 50840, 50840, 295, 20828, 1166, 3097, 337, 3877, 17630, 50996, 50996, 300, 4960, 257, 1254, 295, 264, 43276, 2044, 4470, 11, 498, 291, 528, 13, 51272, 51272, 2264, 11, 370, 264, 700, 1326, 10232, 366, 2293, 51418, 51418, 14800, 281, 437, 286, 2825, 466, 3071, 13, 51568, 51568, 583, 510, 11, 264, 691, 1681, 5614, 31782, 51654, 51654, 445, 16137, 264, 1151, 3100, 3654, 439, 264, 14518, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1439336140950521, "compression_ratio": 1.5524193548387097, "no_speech_prob": 6.1436558098648675e-06}, {"id": 1155, "seek": 339404, "start": 3418.12, "end": 3419.84, "text": " But here, the Viterbi transformer", "tokens": [50364, 294, 341, 1389, 11, 321, 434, 445, 516, 281, 718, 264, 1185, 1888, 2035, 50484, 50484, 1867, 309, 2738, 13, 50522, 50672, 400, 341, 307, 733, 295, 257, 26335, 1254, 50840, 50840, 295, 20828, 1166, 3097, 337, 3877, 17630, 50996, 50996, 300, 4960, 257, 1254, 295, 264, 43276, 2044, 4470, 11, 498, 291, 528, 13, 51272, 51272, 2264, 11, 370, 264, 700, 1326, 10232, 366, 2293, 51418, 51418, 14800, 281, 437, 286, 2825, 466, 3071, 13, 51568, 51568, 583, 510, 11, 264, 691, 1681, 5614, 31782, 51654, 51654, 445, 16137, 264, 1151, 3100, 3654, 439, 264, 14518, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1439336140950521, "compression_ratio": 1.5524193548387097, "no_speech_prob": 6.1436558098648675e-06}, {"id": 1156, "seek": 339404, "start": 3419.84, "end": 3421.88, "text": " just picks the best path among all the paths.", "tokens": [50364, 294, 341, 1389, 11, 321, 434, 445, 516, 281, 718, 264, 1185, 1888, 2035, 50484, 50484, 1867, 309, 2738, 13, 50522, 50672, 400, 341, 307, 733, 295, 257, 26335, 1254, 50840, 50840, 295, 20828, 1166, 3097, 337, 3877, 17630, 50996, 50996, 300, 4960, 257, 1254, 295, 264, 43276, 2044, 4470, 11, 498, 291, 528, 13, 51272, 51272, 2264, 11, 370, 264, 700, 1326, 10232, 366, 2293, 51418, 51418, 14800, 281, 437, 286, 2825, 466, 3071, 13, 51568, 51568, 583, 510, 11, 264, 691, 1681, 5614, 31782, 51654, 51654, 445, 16137, 264, 1151, 3100, 3654, 439, 264, 14518, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1439336140950521, "compression_ratio": 1.5524193548387097, "no_speech_prob": 6.1436558098648675e-06}, {"id": 1157, "seek": 342188, "start": 3421.88, "end": 3426.28, "text": " You don't constrain it to pick the correct one.", "tokens": [50364, 509, 500, 380, 1817, 7146, 309, 281, 1888, 264, 3006, 472, 13, 50584, 50584, 509, 445, 718, 309, 1888, 2035, 309, 2738, 13, 50690, 50690, 407, 309, 311, 516, 281, 1888, 264, 1151, 3100, 50810, 50810, 300, 575, 264, 12437, 2281, 300, 309, 50944, 50944, 2709, 264, 3006, 1867, 13, 51032, 51032, 823, 11, 264, 2281, 291, 483, 484, 295, 341, 4725, 51176, 51176, 307, 516, 281, 312, 4356, 420, 2681, 281, 264, 472, 291, 658, 8046, 51396, 51396, 570, 341, 472, 307, 264, 16998, 295, 439, 264, 1944, 51504, 51504, 31493, 13, 51538, 51538, 440, 661, 2306, 307, 406, 264, 16998, 295, 439, 1944, 2306, 13, 51650, 51650, 467, 311, 787, 264, 16998, 295, 264, 3006, 2306, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.17043312196809102, "compression_ratio": 1.8709677419354838, "no_speech_prob": 5.014437192585319e-06}, {"id": 1158, "seek": 342188, "start": 3426.28, "end": 3428.4, "text": " You just let it pick whatever it wants.", "tokens": [50364, 509, 500, 380, 1817, 7146, 309, 281, 1888, 264, 3006, 472, 13, 50584, 50584, 509, 445, 718, 309, 1888, 2035, 309, 2738, 13, 50690, 50690, 407, 309, 311, 516, 281, 1888, 264, 1151, 3100, 50810, 50810, 300, 575, 264, 12437, 2281, 300, 309, 50944, 50944, 2709, 264, 3006, 1867, 13, 51032, 51032, 823, 11, 264, 2281, 291, 483, 484, 295, 341, 4725, 51176, 51176, 307, 516, 281, 312, 4356, 420, 2681, 281, 264, 472, 291, 658, 8046, 51396, 51396, 570, 341, 472, 307, 264, 16998, 295, 439, 264, 1944, 51504, 51504, 31493, 13, 51538, 51538, 440, 661, 2306, 307, 406, 264, 16998, 295, 439, 1944, 2306, 13, 51650, 51650, 467, 311, 787, 264, 16998, 295, 264, 3006, 2306, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.17043312196809102, "compression_ratio": 1.8709677419354838, "no_speech_prob": 5.014437192585319e-06}, {"id": 1159, "seek": 342188, "start": 3428.4, "end": 3430.8, "text": " So it's going to pick the best path", "tokens": [50364, 509, 500, 380, 1817, 7146, 309, 281, 1888, 264, 3006, 472, 13, 50584, 50584, 509, 445, 718, 309, 1888, 2035, 309, 2738, 13, 50690, 50690, 407, 309, 311, 516, 281, 1888, 264, 1151, 3100, 50810, 50810, 300, 575, 264, 12437, 2281, 300, 309, 50944, 50944, 2709, 264, 3006, 1867, 13, 51032, 51032, 823, 11, 264, 2281, 291, 483, 484, 295, 341, 4725, 51176, 51176, 307, 516, 281, 312, 4356, 420, 2681, 281, 264, 472, 291, 658, 8046, 51396, 51396, 570, 341, 472, 307, 264, 16998, 295, 439, 264, 1944, 51504, 51504, 31493, 13, 51538, 51538, 440, 661, 2306, 307, 406, 264, 16998, 295, 439, 1944, 2306, 13, 51650, 51650, 467, 311, 787, 264, 16998, 295, 264, 3006, 2306, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.17043312196809102, "compression_ratio": 1.8709677419354838, "no_speech_prob": 5.014437192585319e-06}, {"id": 1160, "seek": 342188, "start": 3430.8, "end": 3433.48, "text": " that has the lowest energy that it", "tokens": [50364, 509, 500, 380, 1817, 7146, 309, 281, 1888, 264, 3006, 472, 13, 50584, 50584, 509, 445, 718, 309, 1888, 2035, 309, 2738, 13, 50690, 50690, 407, 309, 311, 516, 281, 1888, 264, 1151, 3100, 50810, 50810, 300, 575, 264, 12437, 2281, 300, 309, 50944, 50944, 2709, 264, 3006, 1867, 13, 51032, 51032, 823, 11, 264, 2281, 291, 483, 484, 295, 341, 4725, 51176, 51176, 307, 516, 281, 312, 4356, 420, 2681, 281, 264, 472, 291, 658, 8046, 51396, 51396, 570, 341, 472, 307, 264, 16998, 295, 439, 264, 1944, 51504, 51504, 31493, 13, 51538, 51538, 440, 661, 2306, 307, 406, 264, 16998, 295, 439, 1944, 2306, 13, 51650, 51650, 467, 311, 787, 264, 16998, 295, 264, 3006, 2306, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.17043312196809102, "compression_ratio": 1.8709677419354838, "no_speech_prob": 5.014437192585319e-06}, {"id": 1161, "seek": 342188, "start": 3433.48, "end": 3435.2400000000002, "text": " gives the correct answer.", "tokens": [50364, 509, 500, 380, 1817, 7146, 309, 281, 1888, 264, 3006, 472, 13, 50584, 50584, 509, 445, 718, 309, 1888, 2035, 309, 2738, 13, 50690, 50690, 407, 309, 311, 516, 281, 1888, 264, 1151, 3100, 50810, 50810, 300, 575, 264, 12437, 2281, 300, 309, 50944, 50944, 2709, 264, 3006, 1867, 13, 51032, 51032, 823, 11, 264, 2281, 291, 483, 484, 295, 341, 4725, 51176, 51176, 307, 516, 281, 312, 4356, 420, 2681, 281, 264, 472, 291, 658, 8046, 51396, 51396, 570, 341, 472, 307, 264, 16998, 295, 439, 264, 1944, 51504, 51504, 31493, 13, 51538, 51538, 440, 661, 2306, 307, 406, 264, 16998, 295, 439, 1944, 2306, 13, 51650, 51650, 467, 311, 787, 264, 16998, 295, 264, 3006, 2306, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.17043312196809102, "compression_ratio": 1.8709677419354838, "no_speech_prob": 5.014437192585319e-06}, {"id": 1162, "seek": 342188, "start": 3435.2400000000002, "end": 3438.12, "text": " Now, the energy you get out of this necessarily", "tokens": [50364, 509, 500, 380, 1817, 7146, 309, 281, 1888, 264, 3006, 472, 13, 50584, 50584, 509, 445, 718, 309, 1888, 2035, 309, 2738, 13, 50690, 50690, 407, 309, 311, 516, 281, 1888, 264, 1151, 3100, 50810, 50810, 300, 575, 264, 12437, 2281, 300, 309, 50944, 50944, 2709, 264, 3006, 1867, 13, 51032, 51032, 823, 11, 264, 2281, 291, 483, 484, 295, 341, 4725, 51176, 51176, 307, 516, 281, 312, 4356, 420, 2681, 281, 264, 472, 291, 658, 8046, 51396, 51396, 570, 341, 472, 307, 264, 16998, 295, 439, 264, 1944, 51504, 51504, 31493, 13, 51538, 51538, 440, 661, 2306, 307, 406, 264, 16998, 295, 439, 1944, 2306, 13, 51650, 51650, 467, 311, 787, 264, 16998, 295, 264, 3006, 2306, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.17043312196809102, "compression_ratio": 1.8709677419354838, "no_speech_prob": 5.014437192585319e-06}, {"id": 1163, "seek": 342188, "start": 3438.12, "end": 3442.52, "text": " is going to be smaller or equal to the one you got previously", "tokens": [50364, 509, 500, 380, 1817, 7146, 309, 281, 1888, 264, 3006, 472, 13, 50584, 50584, 509, 445, 718, 309, 1888, 2035, 309, 2738, 13, 50690, 50690, 407, 309, 311, 516, 281, 1888, 264, 1151, 3100, 50810, 50810, 300, 575, 264, 12437, 2281, 300, 309, 50944, 50944, 2709, 264, 3006, 1867, 13, 51032, 51032, 823, 11, 264, 2281, 291, 483, 484, 295, 341, 4725, 51176, 51176, 307, 516, 281, 312, 4356, 420, 2681, 281, 264, 472, 291, 658, 8046, 51396, 51396, 570, 341, 472, 307, 264, 16998, 295, 439, 264, 1944, 51504, 51504, 31493, 13, 51538, 51538, 440, 661, 2306, 307, 406, 264, 16998, 295, 439, 1944, 2306, 13, 51650, 51650, 467, 311, 787, 264, 16998, 295, 264, 3006, 2306, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.17043312196809102, "compression_ratio": 1.8709677419354838, "no_speech_prob": 5.014437192585319e-06}, {"id": 1164, "seek": 342188, "start": 3442.52, "end": 3444.6800000000003, "text": " because this one is the smallest of all the possible", "tokens": [50364, 509, 500, 380, 1817, 7146, 309, 281, 1888, 264, 3006, 472, 13, 50584, 50584, 509, 445, 718, 309, 1888, 2035, 309, 2738, 13, 50690, 50690, 407, 309, 311, 516, 281, 1888, 264, 1151, 3100, 50810, 50810, 300, 575, 264, 12437, 2281, 300, 309, 50944, 50944, 2709, 264, 3006, 1867, 13, 51032, 51032, 823, 11, 264, 2281, 291, 483, 484, 295, 341, 4725, 51176, 51176, 307, 516, 281, 312, 4356, 420, 2681, 281, 264, 472, 291, 658, 8046, 51396, 51396, 570, 341, 472, 307, 264, 16998, 295, 439, 264, 1944, 51504, 51504, 31493, 13, 51538, 51538, 440, 661, 2306, 307, 406, 264, 16998, 295, 439, 1944, 2306, 13, 51650, 51650, 467, 311, 787, 264, 16998, 295, 264, 3006, 2306, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.17043312196809102, "compression_ratio": 1.8709677419354838, "no_speech_prob": 5.014437192585319e-06}, {"id": 1165, "seek": 342188, "start": 3444.6800000000003, "end": 3445.36, "text": " configurations.", "tokens": [50364, 509, 500, 380, 1817, 7146, 309, 281, 1888, 264, 3006, 472, 13, 50584, 50584, 509, 445, 718, 309, 1888, 2035, 309, 2738, 13, 50690, 50690, 407, 309, 311, 516, 281, 1888, 264, 1151, 3100, 50810, 50810, 300, 575, 264, 12437, 2281, 300, 309, 50944, 50944, 2709, 264, 3006, 1867, 13, 51032, 51032, 823, 11, 264, 2281, 291, 483, 484, 295, 341, 4725, 51176, 51176, 307, 516, 281, 312, 4356, 420, 2681, 281, 264, 472, 291, 658, 8046, 51396, 51396, 570, 341, 472, 307, 264, 16998, 295, 439, 264, 1944, 51504, 51504, 31493, 13, 51538, 51538, 440, 661, 2306, 307, 406, 264, 16998, 295, 439, 1944, 2306, 13, 51650, 51650, 467, 311, 787, 264, 16998, 295, 264, 3006, 2306, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.17043312196809102, "compression_ratio": 1.8709677419354838, "no_speech_prob": 5.014437192585319e-06}, {"id": 1166, "seek": 342188, "start": 3445.36, "end": 3447.6, "text": " The other ones is not the smallest of all possible ones.", "tokens": [50364, 509, 500, 380, 1817, 7146, 309, 281, 1888, 264, 3006, 472, 13, 50584, 50584, 509, 445, 718, 309, 1888, 2035, 309, 2738, 13, 50690, 50690, 407, 309, 311, 516, 281, 1888, 264, 1151, 3100, 50810, 50810, 300, 575, 264, 12437, 2281, 300, 309, 50944, 50944, 2709, 264, 3006, 1867, 13, 51032, 51032, 823, 11, 264, 2281, 291, 483, 484, 295, 341, 4725, 51176, 51176, 307, 516, 281, 312, 4356, 420, 2681, 281, 264, 472, 291, 658, 8046, 51396, 51396, 570, 341, 472, 307, 264, 16998, 295, 439, 264, 1944, 51504, 51504, 31493, 13, 51538, 51538, 440, 661, 2306, 307, 406, 264, 16998, 295, 439, 1944, 2306, 13, 51650, 51650, 467, 311, 787, 264, 16998, 295, 264, 3006, 2306, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.17043312196809102, "compression_ratio": 1.8709677419354838, "no_speech_prob": 5.014437192585319e-06}, {"id": 1167, "seek": 342188, "start": 3447.6, "end": 3450.04, "text": " It's only the smallest of the correct ones.", "tokens": [50364, 509, 500, 380, 1817, 7146, 309, 281, 1888, 264, 3006, 472, 13, 50584, 50584, 509, 445, 718, 309, 1888, 2035, 309, 2738, 13, 50690, 50690, 407, 309, 311, 516, 281, 1888, 264, 1151, 3100, 50810, 50810, 300, 575, 264, 12437, 2281, 300, 309, 50944, 50944, 2709, 264, 3006, 1867, 13, 51032, 51032, 823, 11, 264, 2281, 291, 483, 484, 295, 341, 4725, 51176, 51176, 307, 516, 281, 312, 4356, 420, 2681, 281, 264, 472, 291, 658, 8046, 51396, 51396, 570, 341, 472, 307, 264, 16998, 295, 439, 264, 1944, 51504, 51504, 31493, 13, 51538, 51538, 440, 661, 2306, 307, 406, 264, 16998, 295, 439, 1944, 2306, 13, 51650, 51650, 467, 311, 787, 264, 16998, 295, 264, 3006, 2306, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.17043312196809102, "compression_ratio": 1.8709677419354838, "no_speech_prob": 5.014437192585319e-06}, {"id": 1168, "seek": 345004, "start": 3450.04, "end": 3451.96, "text": " So this guy necessarily is going to get smaller.", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1169, "seek": 345004, "start": 3451.96, "end": 3453.0, "text": " So we don't pick the one.", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1170, "seek": 345004, "start": 3453.0, "end": 3455.52, "text": " Sorry, I lost you.", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1171, "seek": 345004, "start": 3455.52, "end": 3457.48, "text": " Do we take out the one that are actually producing", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1172, "seek": 345004, "start": 3457.48, "end": 3459.32, "text": " the correct sequence or not?", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1173, "seek": 345004, "start": 3459.32, "end": 3460.92, "text": " OK, so you have two forms of it.", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1174, "seek": 345004, "start": 3460.92, "end": 3462.58, "text": " The form I'm explaining here, you're not", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1175, "seek": 345004, "start": 3462.58, "end": 3464.7599999999998, "text": " taking out the correct one.", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1176, "seek": 345004, "start": 3464.7599999999998, "end": 3465.4, "text": " OK?", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1177, "seek": 345004, "start": 3465.4, "end": 3466.96, "text": " In fact, in this particular example,", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1178, "seek": 345004, "start": 3466.96, "end": 3468.2799999999997, "text": " it wouldn't make any difference.", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1179, "seek": 345004, "start": 3468.2799999999997, "end": 3471.7599999999998, "text": " But if you want the system to work properly,", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1180, "seek": 345004, "start": 3471.7599999999998, "end": 3474.8, "text": " what you should do here is have a path selector that", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1181, "seek": 345004, "start": 3474.8, "end": 3476.12, "text": " takes out the correct answers.", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1182, "seek": 345004, "start": 3476.12, "end": 3476.8, "text": " Yeah, exactly.", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1183, "seek": 345004, "start": 3476.8, "end": 3477.6, "text": " Yes, yes, yes.", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1184, "seek": 345004, "start": 3477.6, "end": 3479.04, "text": " That's right.", "tokens": [50364, 407, 341, 2146, 4725, 307, 516, 281, 483, 4356, 13, 50460, 50460, 407, 321, 500, 380, 1888, 264, 472, 13, 50512, 50512, 4919, 11, 286, 2731, 291, 13, 50638, 50638, 1144, 321, 747, 484, 264, 472, 300, 366, 767, 10501, 50736, 50736, 264, 3006, 8310, 420, 406, 30, 50828, 50828, 2264, 11, 370, 291, 362, 732, 6422, 295, 309, 13, 50908, 50908, 440, 1254, 286, 478, 13468, 510, 11, 291, 434, 406, 50991, 50991, 1940, 484, 264, 3006, 472, 13, 51100, 51100, 2264, 30, 51132, 51132, 682, 1186, 11, 294, 341, 1729, 1365, 11, 51210, 51210, 309, 2759, 380, 652, 604, 2649, 13, 51276, 51276, 583, 498, 291, 528, 264, 1185, 281, 589, 6108, 11, 51450, 51450, 437, 291, 820, 360, 510, 307, 362, 257, 3100, 23264, 1672, 300, 51602, 51602, 2516, 484, 264, 3006, 6338, 13, 51668, 51668, 865, 11, 2293, 13, 51702, 51702, 1079, 11, 2086, 11, 2086, 13, 51742, 51742, 663, 311, 558, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18699444599033144, "compression_ratio": 1.6571428571428573, "no_speech_prob": 4.609937604982406e-05}, {"id": 1185, "seek": 347904, "start": 3479.04, "end": 3481.32, "text": " So you would want to tell the system,", "tokens": [50364, 407, 291, 576, 528, 281, 980, 264, 1185, 11, 50478, 50478, 976, 385, 428, 1151, 3347, 412, 257, 2085, 1867, 11, 264, 12437, 50690, 50690, 2281, 2085, 1867, 13, 50776, 50776, 7587, 11, 264, 2418, 2159, 294, 428, 3035, 11, 558, 30, 50890, 50890, 663, 576, 312, 264, 2418, 2159, 13, 50974, 50974, 1692, 11, 286, 478, 406, 884, 341, 13, 51024, 51024, 286, 478, 445, 3365, 309, 11, 437, 311, 428, 1151, 3347, 30, 51124, 51124, 286, 500, 380, 1127, 498, 309, 311, 3006, 420, 18424, 13, 51254, 51254, 1057, 558, 30, 51366, 51366, 492, 603, 808, 646, 281, 341, 294, 257, 3456, 13, 51470, 51470, 2264, 11, 3372, 341, 439, 1214, 11, 452, 4470, 2445, 51606, 51606, 307, 516, 281, 312, 264, 2649, 1296, 264, 2281, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.17279831568400064, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.853970262454823e-06}, {"id": 1186, "seek": 347904, "start": 3481.32, "end": 3485.56, "text": " give me your best shot at a wrong answer, the lowest", "tokens": [50364, 407, 291, 576, 528, 281, 980, 264, 1185, 11, 50478, 50478, 976, 385, 428, 1151, 3347, 412, 257, 2085, 1867, 11, 264, 12437, 50690, 50690, 2281, 2085, 1867, 13, 50776, 50776, 7587, 11, 264, 2418, 2159, 294, 428, 3035, 11, 558, 30, 50890, 50890, 663, 576, 312, 264, 2418, 2159, 13, 50974, 50974, 1692, 11, 286, 478, 406, 884, 341, 13, 51024, 51024, 286, 478, 445, 3365, 309, 11, 437, 311, 428, 1151, 3347, 30, 51124, 51124, 286, 500, 380, 1127, 498, 309, 311, 3006, 420, 18424, 13, 51254, 51254, 1057, 558, 30, 51366, 51366, 492, 603, 808, 646, 281, 341, 294, 257, 3456, 13, 51470, 51470, 2264, 11, 3372, 341, 439, 1214, 11, 452, 4470, 2445, 51606, 51606, 307, 516, 281, 312, 264, 2649, 1296, 264, 2281, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.17279831568400064, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.853970262454823e-06}, {"id": 1187, "seek": 347904, "start": 3485.56, "end": 3487.2799999999997, "text": " energy wrong answer.", "tokens": [50364, 407, 291, 576, 528, 281, 980, 264, 1185, 11, 50478, 50478, 976, 385, 428, 1151, 3347, 412, 257, 2085, 1867, 11, 264, 12437, 50690, 50690, 2281, 2085, 1867, 13, 50776, 50776, 7587, 11, 264, 2418, 2159, 294, 428, 3035, 11, 558, 30, 50890, 50890, 663, 576, 312, 264, 2418, 2159, 13, 50974, 50974, 1692, 11, 286, 478, 406, 884, 341, 13, 51024, 51024, 286, 478, 445, 3365, 309, 11, 437, 311, 428, 1151, 3347, 30, 51124, 51124, 286, 500, 380, 1127, 498, 309, 311, 3006, 420, 18424, 13, 51254, 51254, 1057, 558, 30, 51366, 51366, 492, 603, 808, 646, 281, 341, 294, 257, 3456, 13, 51470, 51470, 2264, 11, 3372, 341, 439, 1214, 11, 452, 4470, 2445, 51606, 51606, 307, 516, 281, 312, 264, 2649, 1296, 264, 2281, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.17279831568400064, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.853970262454823e-06}, {"id": 1188, "seek": 347904, "start": 3487.2799999999997, "end": 3489.56, "text": " Exactly, the white bar in your paper, right?", "tokens": [50364, 407, 291, 576, 528, 281, 980, 264, 1185, 11, 50478, 50478, 976, 385, 428, 1151, 3347, 412, 257, 2085, 1867, 11, 264, 12437, 50690, 50690, 2281, 2085, 1867, 13, 50776, 50776, 7587, 11, 264, 2418, 2159, 294, 428, 3035, 11, 558, 30, 50890, 50890, 663, 576, 312, 264, 2418, 2159, 13, 50974, 50974, 1692, 11, 286, 478, 406, 884, 341, 13, 51024, 51024, 286, 478, 445, 3365, 309, 11, 437, 311, 428, 1151, 3347, 30, 51124, 51124, 286, 500, 380, 1127, 498, 309, 311, 3006, 420, 18424, 13, 51254, 51254, 1057, 558, 30, 51366, 51366, 492, 603, 808, 646, 281, 341, 294, 257, 3456, 13, 51470, 51470, 2264, 11, 3372, 341, 439, 1214, 11, 452, 4470, 2445, 51606, 51606, 307, 516, 281, 312, 264, 2649, 1296, 264, 2281, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.17279831568400064, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.853970262454823e-06}, {"id": 1189, "seek": 347904, "start": 3489.56, "end": 3491.24, "text": " That would be the white bar.", "tokens": [50364, 407, 291, 576, 528, 281, 980, 264, 1185, 11, 50478, 50478, 976, 385, 428, 1151, 3347, 412, 257, 2085, 1867, 11, 264, 12437, 50690, 50690, 2281, 2085, 1867, 13, 50776, 50776, 7587, 11, 264, 2418, 2159, 294, 428, 3035, 11, 558, 30, 50890, 50890, 663, 576, 312, 264, 2418, 2159, 13, 50974, 50974, 1692, 11, 286, 478, 406, 884, 341, 13, 51024, 51024, 286, 478, 445, 3365, 309, 11, 437, 311, 428, 1151, 3347, 30, 51124, 51124, 286, 500, 380, 1127, 498, 309, 311, 3006, 420, 18424, 13, 51254, 51254, 1057, 558, 30, 51366, 51366, 492, 603, 808, 646, 281, 341, 294, 257, 3456, 13, 51470, 51470, 2264, 11, 3372, 341, 439, 1214, 11, 452, 4470, 2445, 51606, 51606, 307, 516, 281, 312, 264, 2649, 1296, 264, 2281, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.17279831568400064, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.853970262454823e-06}, {"id": 1190, "seek": 347904, "start": 3491.24, "end": 3492.24, "text": " Here, I'm not doing this.", "tokens": [50364, 407, 291, 576, 528, 281, 980, 264, 1185, 11, 50478, 50478, 976, 385, 428, 1151, 3347, 412, 257, 2085, 1867, 11, 264, 12437, 50690, 50690, 2281, 2085, 1867, 13, 50776, 50776, 7587, 11, 264, 2418, 2159, 294, 428, 3035, 11, 558, 30, 50890, 50890, 663, 576, 312, 264, 2418, 2159, 13, 50974, 50974, 1692, 11, 286, 478, 406, 884, 341, 13, 51024, 51024, 286, 478, 445, 3365, 309, 11, 437, 311, 428, 1151, 3347, 30, 51124, 51124, 286, 500, 380, 1127, 498, 309, 311, 3006, 420, 18424, 13, 51254, 51254, 1057, 558, 30, 51366, 51366, 492, 603, 808, 646, 281, 341, 294, 257, 3456, 13, 51470, 51470, 2264, 11, 3372, 341, 439, 1214, 11, 452, 4470, 2445, 51606, 51606, 307, 516, 281, 312, 264, 2649, 1296, 264, 2281, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.17279831568400064, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.853970262454823e-06}, {"id": 1191, "seek": 347904, "start": 3492.24, "end": 3494.24, "text": " I'm just asking it, what's your best shot?", "tokens": [50364, 407, 291, 576, 528, 281, 980, 264, 1185, 11, 50478, 50478, 976, 385, 428, 1151, 3347, 412, 257, 2085, 1867, 11, 264, 12437, 50690, 50690, 2281, 2085, 1867, 13, 50776, 50776, 7587, 11, 264, 2418, 2159, 294, 428, 3035, 11, 558, 30, 50890, 50890, 663, 576, 312, 264, 2418, 2159, 13, 50974, 50974, 1692, 11, 286, 478, 406, 884, 341, 13, 51024, 51024, 286, 478, 445, 3365, 309, 11, 437, 311, 428, 1151, 3347, 30, 51124, 51124, 286, 500, 380, 1127, 498, 309, 311, 3006, 420, 18424, 13, 51254, 51254, 1057, 558, 30, 51366, 51366, 492, 603, 808, 646, 281, 341, 294, 257, 3456, 13, 51470, 51470, 2264, 11, 3372, 341, 439, 1214, 11, 452, 4470, 2445, 51606, 51606, 307, 516, 281, 312, 264, 2649, 1296, 264, 2281, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.17279831568400064, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.853970262454823e-06}, {"id": 1192, "seek": 347904, "start": 3494.24, "end": 3496.84, "text": " I don't care if it's correct or incorrect.", "tokens": [50364, 407, 291, 576, 528, 281, 980, 264, 1185, 11, 50478, 50478, 976, 385, 428, 1151, 3347, 412, 257, 2085, 1867, 11, 264, 12437, 50690, 50690, 2281, 2085, 1867, 13, 50776, 50776, 7587, 11, 264, 2418, 2159, 294, 428, 3035, 11, 558, 30, 50890, 50890, 663, 576, 312, 264, 2418, 2159, 13, 50974, 50974, 1692, 11, 286, 478, 406, 884, 341, 13, 51024, 51024, 286, 478, 445, 3365, 309, 11, 437, 311, 428, 1151, 3347, 30, 51124, 51124, 286, 500, 380, 1127, 498, 309, 311, 3006, 420, 18424, 13, 51254, 51254, 1057, 558, 30, 51366, 51366, 492, 603, 808, 646, 281, 341, 294, 257, 3456, 13, 51470, 51470, 2264, 11, 3372, 341, 439, 1214, 11, 452, 4470, 2445, 51606, 51606, 307, 516, 281, 312, 264, 2649, 1296, 264, 2281, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.17279831568400064, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.853970262454823e-06}, {"id": 1193, "seek": 347904, "start": 3496.84, "end": 3499.08, "text": " All right?", "tokens": [50364, 407, 291, 576, 528, 281, 980, 264, 1185, 11, 50478, 50478, 976, 385, 428, 1151, 3347, 412, 257, 2085, 1867, 11, 264, 12437, 50690, 50690, 2281, 2085, 1867, 13, 50776, 50776, 7587, 11, 264, 2418, 2159, 294, 428, 3035, 11, 558, 30, 50890, 50890, 663, 576, 312, 264, 2418, 2159, 13, 50974, 50974, 1692, 11, 286, 478, 406, 884, 341, 13, 51024, 51024, 286, 478, 445, 3365, 309, 11, 437, 311, 428, 1151, 3347, 30, 51124, 51124, 286, 500, 380, 1127, 498, 309, 311, 3006, 420, 18424, 13, 51254, 51254, 1057, 558, 30, 51366, 51366, 492, 603, 808, 646, 281, 341, 294, 257, 3456, 13, 51470, 51470, 2264, 11, 3372, 341, 439, 1214, 11, 452, 4470, 2445, 51606, 51606, 307, 516, 281, 312, 264, 2649, 1296, 264, 2281, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.17279831568400064, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.853970262454823e-06}, {"id": 1194, "seek": 347904, "start": 3499.08, "end": 3501.16, "text": " We'll come back to this in a minute.", "tokens": [50364, 407, 291, 576, 528, 281, 980, 264, 1185, 11, 50478, 50478, 976, 385, 428, 1151, 3347, 412, 257, 2085, 1867, 11, 264, 12437, 50690, 50690, 2281, 2085, 1867, 13, 50776, 50776, 7587, 11, 264, 2418, 2159, 294, 428, 3035, 11, 558, 30, 50890, 50890, 663, 576, 312, 264, 2418, 2159, 13, 50974, 50974, 1692, 11, 286, 478, 406, 884, 341, 13, 51024, 51024, 286, 478, 445, 3365, 309, 11, 437, 311, 428, 1151, 3347, 30, 51124, 51124, 286, 500, 380, 1127, 498, 309, 311, 3006, 420, 18424, 13, 51254, 51254, 1057, 558, 30, 51366, 51366, 492, 603, 808, 646, 281, 341, 294, 257, 3456, 13, 51470, 51470, 2264, 11, 3372, 341, 439, 1214, 11, 452, 4470, 2445, 51606, 51606, 307, 516, 281, 312, 264, 2649, 1296, 264, 2281, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.17279831568400064, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.853970262454823e-06}, {"id": 1195, "seek": 347904, "start": 3501.16, "end": 3503.88, "text": " OK, putting this all together, my loss function", "tokens": [50364, 407, 291, 576, 528, 281, 980, 264, 1185, 11, 50478, 50478, 976, 385, 428, 1151, 3347, 412, 257, 2085, 1867, 11, 264, 12437, 50690, 50690, 2281, 2085, 1867, 13, 50776, 50776, 7587, 11, 264, 2418, 2159, 294, 428, 3035, 11, 558, 30, 50890, 50890, 663, 576, 312, 264, 2418, 2159, 13, 50974, 50974, 1692, 11, 286, 478, 406, 884, 341, 13, 51024, 51024, 286, 478, 445, 3365, 309, 11, 437, 311, 428, 1151, 3347, 30, 51124, 51124, 286, 500, 380, 1127, 498, 309, 311, 3006, 420, 18424, 13, 51254, 51254, 1057, 558, 30, 51366, 51366, 492, 603, 808, 646, 281, 341, 294, 257, 3456, 13, 51470, 51470, 2264, 11, 3372, 341, 439, 1214, 11, 452, 4470, 2445, 51606, 51606, 307, 516, 281, 312, 264, 2649, 1296, 264, 2281, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.17279831568400064, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.853970262454823e-06}, {"id": 1196, "seek": 347904, "start": 3503.88, "end": 3507.32, "text": " is going to be the difference between the energy", "tokens": [50364, 407, 291, 576, 528, 281, 980, 264, 1185, 11, 50478, 50478, 976, 385, 428, 1151, 3347, 412, 257, 2085, 1867, 11, 264, 12437, 50690, 50690, 2281, 2085, 1867, 13, 50776, 50776, 7587, 11, 264, 2418, 2159, 294, 428, 3035, 11, 558, 30, 50890, 50890, 663, 576, 312, 264, 2418, 2159, 13, 50974, 50974, 1692, 11, 286, 478, 406, 884, 341, 13, 51024, 51024, 286, 478, 445, 3365, 309, 11, 437, 311, 428, 1151, 3347, 30, 51124, 51124, 286, 500, 380, 1127, 498, 309, 311, 3006, 420, 18424, 13, 51254, 51254, 1057, 558, 30, 51366, 51366, 492, 603, 808, 646, 281, 341, 294, 257, 3456, 13, 51470, 51470, 2264, 11, 3372, 341, 439, 1214, 11, 452, 4470, 2445, 51606, 51606, 307, 516, 281, 312, 264, 2649, 1296, 264, 2281, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.17279831568400064, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.853970262454823e-06}, {"id": 1197, "seek": 350732, "start": 3507.32, "end": 3509.7200000000003, "text": " I get for the correct answer minus the energy", "tokens": [50364, 286, 483, 337, 264, 3006, 1867, 3175, 264, 2281, 50484, 50484, 286, 483, 337, 2035, 1867, 264, 1185, 2738, 281, 5258, 13, 50686, 50686, 2264, 30, 50724, 50724, 407, 286, 14722, 264, 2649, 1296, 729, 732, 11, 50814, 50814, 293, 300, 311, 452, 4470, 2445, 13, 50878, 50878, 823, 11, 286, 393, 646, 48256, 807, 341, 2302, 551, 13, 50996, 50996, 286, 1907, 291, 286, 390, 646, 12425, 990, 445, 281, 652, 51075, 51075, 264, 2281, 510, 1359, 13, 51134, 51134, 286, 478, 406, 767, 884, 341, 13, 51202, 51202, 286, 478, 15866, 257, 4470, 2445, 510, 11, 51282, 51282, 597, 294, 341, 1389, 307, 445, 264, 2649, 1296, 341, 51396, 51396, 293, 300, 13, 51450, 51450, 400, 286, 478, 646, 12425, 990, 16235, 51512, 51512, 807, 341, 2302, 3877, 11, 558, 30, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.19245586256041144, "compression_ratio": 1.863468634686347, "no_speech_prob": 3.5007603855774505e-06}, {"id": 1198, "seek": 350732, "start": 3509.7200000000003, "end": 3513.76, "text": " I get for whatever answer the system wants to produce.", "tokens": [50364, 286, 483, 337, 264, 3006, 1867, 3175, 264, 2281, 50484, 50484, 286, 483, 337, 2035, 1867, 264, 1185, 2738, 281, 5258, 13, 50686, 50686, 2264, 30, 50724, 50724, 407, 286, 14722, 264, 2649, 1296, 729, 732, 11, 50814, 50814, 293, 300, 311, 452, 4470, 2445, 13, 50878, 50878, 823, 11, 286, 393, 646, 48256, 807, 341, 2302, 551, 13, 50996, 50996, 286, 1907, 291, 286, 390, 646, 12425, 990, 445, 281, 652, 51075, 51075, 264, 2281, 510, 1359, 13, 51134, 51134, 286, 478, 406, 767, 884, 341, 13, 51202, 51202, 286, 478, 15866, 257, 4470, 2445, 510, 11, 51282, 51282, 597, 294, 341, 1389, 307, 445, 264, 2649, 1296, 341, 51396, 51396, 293, 300, 13, 51450, 51450, 400, 286, 478, 646, 12425, 990, 16235, 51512, 51512, 807, 341, 2302, 3877, 11, 558, 30, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.19245586256041144, "compression_ratio": 1.863468634686347, "no_speech_prob": 3.5007603855774505e-06}, {"id": 1199, "seek": 350732, "start": 3513.76, "end": 3514.52, "text": " OK?", "tokens": [50364, 286, 483, 337, 264, 3006, 1867, 3175, 264, 2281, 50484, 50484, 286, 483, 337, 2035, 1867, 264, 1185, 2738, 281, 5258, 13, 50686, 50686, 2264, 30, 50724, 50724, 407, 286, 14722, 264, 2649, 1296, 729, 732, 11, 50814, 50814, 293, 300, 311, 452, 4470, 2445, 13, 50878, 50878, 823, 11, 286, 393, 646, 48256, 807, 341, 2302, 551, 13, 50996, 50996, 286, 1907, 291, 286, 390, 646, 12425, 990, 445, 281, 652, 51075, 51075, 264, 2281, 510, 1359, 13, 51134, 51134, 286, 478, 406, 767, 884, 341, 13, 51202, 51202, 286, 478, 15866, 257, 4470, 2445, 510, 11, 51282, 51282, 597, 294, 341, 1389, 307, 445, 264, 2649, 1296, 341, 51396, 51396, 293, 300, 13, 51450, 51450, 400, 286, 478, 646, 12425, 990, 16235, 51512, 51512, 807, 341, 2302, 3877, 11, 558, 30, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.19245586256041144, "compression_ratio": 1.863468634686347, "no_speech_prob": 3.5007603855774505e-06}, {"id": 1200, "seek": 350732, "start": 3514.52, "end": 3516.32, "text": " So I compute the difference between those two,", "tokens": [50364, 286, 483, 337, 264, 3006, 1867, 3175, 264, 2281, 50484, 50484, 286, 483, 337, 2035, 1867, 264, 1185, 2738, 281, 5258, 13, 50686, 50686, 2264, 30, 50724, 50724, 407, 286, 14722, 264, 2649, 1296, 729, 732, 11, 50814, 50814, 293, 300, 311, 452, 4470, 2445, 13, 50878, 50878, 823, 11, 286, 393, 646, 48256, 807, 341, 2302, 551, 13, 50996, 50996, 286, 1907, 291, 286, 390, 646, 12425, 990, 445, 281, 652, 51075, 51075, 264, 2281, 510, 1359, 13, 51134, 51134, 286, 478, 406, 767, 884, 341, 13, 51202, 51202, 286, 478, 15866, 257, 4470, 2445, 510, 11, 51282, 51282, 597, 294, 341, 1389, 307, 445, 264, 2649, 1296, 341, 51396, 51396, 293, 300, 13, 51450, 51450, 400, 286, 478, 646, 12425, 990, 16235, 51512, 51512, 807, 341, 2302, 3877, 11, 558, 30, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.19245586256041144, "compression_ratio": 1.863468634686347, "no_speech_prob": 3.5007603855774505e-06}, {"id": 1201, "seek": 350732, "start": 3516.32, "end": 3517.6000000000004, "text": " and that's my loss function.", "tokens": [50364, 286, 483, 337, 264, 3006, 1867, 3175, 264, 2281, 50484, 50484, 286, 483, 337, 2035, 1867, 264, 1185, 2738, 281, 5258, 13, 50686, 50686, 2264, 30, 50724, 50724, 407, 286, 14722, 264, 2649, 1296, 729, 732, 11, 50814, 50814, 293, 300, 311, 452, 4470, 2445, 13, 50878, 50878, 823, 11, 286, 393, 646, 48256, 807, 341, 2302, 551, 13, 50996, 50996, 286, 1907, 291, 286, 390, 646, 12425, 990, 445, 281, 652, 51075, 51075, 264, 2281, 510, 1359, 13, 51134, 51134, 286, 478, 406, 767, 884, 341, 13, 51202, 51202, 286, 478, 15866, 257, 4470, 2445, 510, 11, 51282, 51282, 597, 294, 341, 1389, 307, 445, 264, 2649, 1296, 341, 51396, 51396, 293, 300, 13, 51450, 51450, 400, 286, 478, 646, 12425, 990, 16235, 51512, 51512, 807, 341, 2302, 3877, 11, 558, 30, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.19245586256041144, "compression_ratio": 1.863468634686347, "no_speech_prob": 3.5007603855774505e-06}, {"id": 1202, "seek": 350732, "start": 3517.6000000000004, "end": 3519.96, "text": " Now, I can back propagate through this entire thing.", "tokens": [50364, 286, 483, 337, 264, 3006, 1867, 3175, 264, 2281, 50484, 50484, 286, 483, 337, 2035, 1867, 264, 1185, 2738, 281, 5258, 13, 50686, 50686, 2264, 30, 50724, 50724, 407, 286, 14722, 264, 2649, 1296, 729, 732, 11, 50814, 50814, 293, 300, 311, 452, 4470, 2445, 13, 50878, 50878, 823, 11, 286, 393, 646, 48256, 807, 341, 2302, 551, 13, 50996, 50996, 286, 1907, 291, 286, 390, 646, 12425, 990, 445, 281, 652, 51075, 51075, 264, 2281, 510, 1359, 13, 51134, 51134, 286, 478, 406, 767, 884, 341, 13, 51202, 51202, 286, 478, 15866, 257, 4470, 2445, 510, 11, 51282, 51282, 597, 294, 341, 1389, 307, 445, 264, 2649, 1296, 341, 51396, 51396, 293, 300, 13, 51450, 51450, 400, 286, 478, 646, 12425, 990, 16235, 51512, 51512, 807, 341, 2302, 3877, 11, 558, 30, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.19245586256041144, "compression_ratio": 1.863468634686347, "no_speech_prob": 3.5007603855774505e-06}, {"id": 1203, "seek": 350732, "start": 3519.96, "end": 3521.54, "text": " I told you I was back propagating just to make", "tokens": [50364, 286, 483, 337, 264, 3006, 1867, 3175, 264, 2281, 50484, 50484, 286, 483, 337, 2035, 1867, 264, 1185, 2738, 281, 5258, 13, 50686, 50686, 2264, 30, 50724, 50724, 407, 286, 14722, 264, 2649, 1296, 729, 732, 11, 50814, 50814, 293, 300, 311, 452, 4470, 2445, 13, 50878, 50878, 823, 11, 286, 393, 646, 48256, 807, 341, 2302, 551, 13, 50996, 50996, 286, 1907, 291, 286, 390, 646, 12425, 990, 445, 281, 652, 51075, 51075, 264, 2281, 510, 1359, 13, 51134, 51134, 286, 478, 406, 767, 884, 341, 13, 51202, 51202, 286, 478, 15866, 257, 4470, 2445, 510, 11, 51282, 51282, 597, 294, 341, 1389, 307, 445, 264, 2649, 1296, 341, 51396, 51396, 293, 300, 13, 51450, 51450, 400, 286, 478, 646, 12425, 990, 16235, 51512, 51512, 807, 341, 2302, 3877, 11, 558, 30, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.19245586256041144, "compression_ratio": 1.863468634686347, "no_speech_prob": 3.5007603855774505e-06}, {"id": 1204, "seek": 350732, "start": 3521.54, "end": 3522.7200000000003, "text": " the energy here small.", "tokens": [50364, 286, 483, 337, 264, 3006, 1867, 3175, 264, 2281, 50484, 50484, 286, 483, 337, 2035, 1867, 264, 1185, 2738, 281, 5258, 13, 50686, 50686, 2264, 30, 50724, 50724, 407, 286, 14722, 264, 2649, 1296, 729, 732, 11, 50814, 50814, 293, 300, 311, 452, 4470, 2445, 13, 50878, 50878, 823, 11, 286, 393, 646, 48256, 807, 341, 2302, 551, 13, 50996, 50996, 286, 1907, 291, 286, 390, 646, 12425, 990, 445, 281, 652, 51075, 51075, 264, 2281, 510, 1359, 13, 51134, 51134, 286, 478, 406, 767, 884, 341, 13, 51202, 51202, 286, 478, 15866, 257, 4470, 2445, 510, 11, 51282, 51282, 597, 294, 341, 1389, 307, 445, 264, 2649, 1296, 341, 51396, 51396, 293, 300, 13, 51450, 51450, 400, 286, 478, 646, 12425, 990, 16235, 51512, 51512, 807, 341, 2302, 3877, 11, 558, 30, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.19245586256041144, "compression_ratio": 1.863468634686347, "no_speech_prob": 3.5007603855774505e-06}, {"id": 1205, "seek": 350732, "start": 3522.7200000000003, "end": 3524.0800000000004, "text": " I'm not actually doing this.", "tokens": [50364, 286, 483, 337, 264, 3006, 1867, 3175, 264, 2281, 50484, 50484, 286, 483, 337, 2035, 1867, 264, 1185, 2738, 281, 5258, 13, 50686, 50686, 2264, 30, 50724, 50724, 407, 286, 14722, 264, 2649, 1296, 729, 732, 11, 50814, 50814, 293, 300, 311, 452, 4470, 2445, 13, 50878, 50878, 823, 11, 286, 393, 646, 48256, 807, 341, 2302, 551, 13, 50996, 50996, 286, 1907, 291, 286, 390, 646, 12425, 990, 445, 281, 652, 51075, 51075, 264, 2281, 510, 1359, 13, 51134, 51134, 286, 478, 406, 767, 884, 341, 13, 51202, 51202, 286, 478, 15866, 257, 4470, 2445, 510, 11, 51282, 51282, 597, 294, 341, 1389, 307, 445, 264, 2649, 1296, 341, 51396, 51396, 293, 300, 13, 51450, 51450, 400, 286, 478, 646, 12425, 990, 16235, 51512, 51512, 807, 341, 2302, 3877, 11, 558, 30, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.19245586256041144, "compression_ratio": 1.863468634686347, "no_speech_prob": 3.5007603855774505e-06}, {"id": 1206, "seek": 350732, "start": 3524.0800000000004, "end": 3525.6800000000003, "text": " I'm computing a loss function here,", "tokens": [50364, 286, 483, 337, 264, 3006, 1867, 3175, 264, 2281, 50484, 50484, 286, 483, 337, 2035, 1867, 264, 1185, 2738, 281, 5258, 13, 50686, 50686, 2264, 30, 50724, 50724, 407, 286, 14722, 264, 2649, 1296, 729, 732, 11, 50814, 50814, 293, 300, 311, 452, 4470, 2445, 13, 50878, 50878, 823, 11, 286, 393, 646, 48256, 807, 341, 2302, 551, 13, 50996, 50996, 286, 1907, 291, 286, 390, 646, 12425, 990, 445, 281, 652, 51075, 51075, 264, 2281, 510, 1359, 13, 51134, 51134, 286, 478, 406, 767, 884, 341, 13, 51202, 51202, 286, 478, 15866, 257, 4470, 2445, 510, 11, 51282, 51282, 597, 294, 341, 1389, 307, 445, 264, 2649, 1296, 341, 51396, 51396, 293, 300, 13, 51450, 51450, 400, 286, 478, 646, 12425, 990, 16235, 51512, 51512, 807, 341, 2302, 3877, 11, 558, 30, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.19245586256041144, "compression_ratio": 1.863468634686347, "no_speech_prob": 3.5007603855774505e-06}, {"id": 1207, "seek": 350732, "start": 3525.6800000000003, "end": 3527.96, "text": " which in this case is just the difference between this", "tokens": [50364, 286, 483, 337, 264, 3006, 1867, 3175, 264, 2281, 50484, 50484, 286, 483, 337, 2035, 1867, 264, 1185, 2738, 281, 5258, 13, 50686, 50686, 2264, 30, 50724, 50724, 407, 286, 14722, 264, 2649, 1296, 729, 732, 11, 50814, 50814, 293, 300, 311, 452, 4470, 2445, 13, 50878, 50878, 823, 11, 286, 393, 646, 48256, 807, 341, 2302, 551, 13, 50996, 50996, 286, 1907, 291, 286, 390, 646, 12425, 990, 445, 281, 652, 51075, 51075, 264, 2281, 510, 1359, 13, 51134, 51134, 286, 478, 406, 767, 884, 341, 13, 51202, 51202, 286, 478, 15866, 257, 4470, 2445, 510, 11, 51282, 51282, 597, 294, 341, 1389, 307, 445, 264, 2649, 1296, 341, 51396, 51396, 293, 300, 13, 51450, 51450, 400, 286, 478, 646, 12425, 990, 16235, 51512, 51512, 807, 341, 2302, 3877, 11, 558, 30, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.19245586256041144, "compression_ratio": 1.863468634686347, "no_speech_prob": 3.5007603855774505e-06}, {"id": 1208, "seek": 350732, "start": 3527.96, "end": 3529.04, "text": " and that.", "tokens": [50364, 286, 483, 337, 264, 3006, 1867, 3175, 264, 2281, 50484, 50484, 286, 483, 337, 2035, 1867, 264, 1185, 2738, 281, 5258, 13, 50686, 50686, 2264, 30, 50724, 50724, 407, 286, 14722, 264, 2649, 1296, 729, 732, 11, 50814, 50814, 293, 300, 311, 452, 4470, 2445, 13, 50878, 50878, 823, 11, 286, 393, 646, 48256, 807, 341, 2302, 551, 13, 50996, 50996, 286, 1907, 291, 286, 390, 646, 12425, 990, 445, 281, 652, 51075, 51075, 264, 2281, 510, 1359, 13, 51134, 51134, 286, 478, 406, 767, 884, 341, 13, 51202, 51202, 286, 478, 15866, 257, 4470, 2445, 510, 11, 51282, 51282, 597, 294, 341, 1389, 307, 445, 264, 2649, 1296, 341, 51396, 51396, 293, 300, 13, 51450, 51450, 400, 286, 478, 646, 12425, 990, 16235, 51512, 51512, 807, 341, 2302, 3877, 11, 558, 30, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.19245586256041144, "compression_ratio": 1.863468634686347, "no_speech_prob": 3.5007603855774505e-06}, {"id": 1209, "seek": 350732, "start": 3529.04, "end": 3530.28, "text": " And I'm back propagating gradient", "tokens": [50364, 286, 483, 337, 264, 3006, 1867, 3175, 264, 2281, 50484, 50484, 286, 483, 337, 2035, 1867, 264, 1185, 2738, 281, 5258, 13, 50686, 50686, 2264, 30, 50724, 50724, 407, 286, 14722, 264, 2649, 1296, 729, 732, 11, 50814, 50814, 293, 300, 311, 452, 4470, 2445, 13, 50878, 50878, 823, 11, 286, 393, 646, 48256, 807, 341, 2302, 551, 13, 50996, 50996, 286, 1907, 291, 286, 390, 646, 12425, 990, 445, 281, 652, 51075, 51075, 264, 2281, 510, 1359, 13, 51134, 51134, 286, 478, 406, 767, 884, 341, 13, 51202, 51202, 286, 478, 15866, 257, 4470, 2445, 510, 11, 51282, 51282, 597, 294, 341, 1389, 307, 445, 264, 2649, 1296, 341, 51396, 51396, 293, 300, 13, 51450, 51450, 400, 286, 478, 646, 12425, 990, 16235, 51512, 51512, 807, 341, 2302, 3877, 11, 558, 30, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.19245586256041144, "compression_ratio": 1.863468634686347, "no_speech_prob": 3.5007603855774505e-06}, {"id": 1210, "seek": 350732, "start": 3530.28, "end": 3532.48, "text": " through this entire structure, right?", "tokens": [50364, 286, 483, 337, 264, 3006, 1867, 3175, 264, 2281, 50484, 50484, 286, 483, 337, 2035, 1867, 264, 1185, 2738, 281, 5258, 13, 50686, 50686, 2264, 30, 50724, 50724, 407, 286, 14722, 264, 2649, 1296, 729, 732, 11, 50814, 50814, 293, 300, 311, 452, 4470, 2445, 13, 50878, 50878, 823, 11, 286, 393, 646, 48256, 807, 341, 2302, 551, 13, 50996, 50996, 286, 1907, 291, 286, 390, 646, 12425, 990, 445, 281, 652, 51075, 51075, 264, 2281, 510, 1359, 13, 51134, 51134, 286, 478, 406, 767, 884, 341, 13, 51202, 51202, 286, 478, 15866, 257, 4470, 2445, 510, 11, 51282, 51282, 597, 294, 341, 1389, 307, 445, 264, 2649, 1296, 341, 51396, 51396, 293, 300, 13, 51450, 51450, 400, 286, 478, 646, 12425, 990, 16235, 51512, 51512, 807, 341, 2302, 3877, 11, 558, 30, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.19245586256041144, "compression_ratio": 1.863468634686347, "no_speech_prob": 3.5007603855774505e-06}, {"id": 1211, "seek": 353248, "start": 3532.48, "end": 3539.32, "text": " So whatever path appears only on the left will get a plus 1.", "tokens": [50364, 407, 2035, 3100, 7038, 787, 322, 264, 1411, 486, 483, 257, 1804, 502, 13, 50706, 50706, 407, 341, 2146, 2170, 257, 1804, 502, 570, 341, 4691, 787, 50818, 50818, 7038, 322, 341, 1252, 11, 293, 370, 309, 2170, 257, 1804, 502, 13, 51032, 51032, 440, 3100, 300, 787, 4204, 322, 264, 558, 1252, 11, 411, 341, 2146, 11, 51236, 51236, 2597, 11, 411, 341, 2146, 11, 483, 257, 3175, 502, 13, 51408, 51408, 2264, 30, 51433, 51433, 440, 16235, 510, 2170, 257, 3175, 502, 570, 291, 51546, 51546, 362, 257, 3175, 1465, 510, 13, 51598, 51598, 407, 264, 2771, 2448, 11, 562, 436, 646, 48256, 11, 51694, 51694, 436, 917, 493, 885, 3175, 502, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1678511194822167, "compression_ratio": 1.9178743961352658, "no_speech_prob": 4.157324838161003e-06}, {"id": 1212, "seek": 353248, "start": 3539.32, "end": 3541.56, "text": " So this guy gets a plus 1 because this edge only", "tokens": [50364, 407, 2035, 3100, 7038, 787, 322, 264, 1411, 486, 483, 257, 1804, 502, 13, 50706, 50706, 407, 341, 2146, 2170, 257, 1804, 502, 570, 341, 4691, 787, 50818, 50818, 7038, 322, 341, 1252, 11, 293, 370, 309, 2170, 257, 1804, 502, 13, 51032, 51032, 440, 3100, 300, 787, 4204, 322, 264, 558, 1252, 11, 411, 341, 2146, 11, 51236, 51236, 2597, 11, 411, 341, 2146, 11, 483, 257, 3175, 502, 13, 51408, 51408, 2264, 30, 51433, 51433, 440, 16235, 510, 2170, 257, 3175, 502, 570, 291, 51546, 51546, 362, 257, 3175, 1465, 510, 13, 51598, 51598, 407, 264, 2771, 2448, 11, 562, 436, 646, 48256, 11, 51694, 51694, 436, 917, 493, 885, 3175, 502, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1678511194822167, "compression_ratio": 1.9178743961352658, "no_speech_prob": 4.157324838161003e-06}, {"id": 1213, "seek": 353248, "start": 3541.56, "end": 3545.84, "text": " appears on this side, and so it gets a plus 1.", "tokens": [50364, 407, 2035, 3100, 7038, 787, 322, 264, 1411, 486, 483, 257, 1804, 502, 13, 50706, 50706, 407, 341, 2146, 2170, 257, 1804, 502, 570, 341, 4691, 787, 50818, 50818, 7038, 322, 341, 1252, 11, 293, 370, 309, 2170, 257, 1804, 502, 13, 51032, 51032, 440, 3100, 300, 787, 4204, 322, 264, 558, 1252, 11, 411, 341, 2146, 11, 51236, 51236, 2597, 11, 411, 341, 2146, 11, 483, 257, 3175, 502, 13, 51408, 51408, 2264, 30, 51433, 51433, 440, 16235, 510, 2170, 257, 3175, 502, 570, 291, 51546, 51546, 362, 257, 3175, 1465, 510, 13, 51598, 51598, 407, 264, 2771, 2448, 11, 562, 436, 646, 48256, 11, 51694, 51694, 436, 917, 493, 885, 3175, 502, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1678511194822167, "compression_ratio": 1.9178743961352658, "no_speech_prob": 4.157324838161003e-06}, {"id": 1214, "seek": 353248, "start": 3545.84, "end": 3549.92, "text": " The path that only appear on the right side, like this guy,", "tokens": [50364, 407, 2035, 3100, 7038, 787, 322, 264, 1411, 486, 483, 257, 1804, 502, 13, 50706, 50706, 407, 341, 2146, 2170, 257, 1804, 502, 570, 341, 4691, 787, 50818, 50818, 7038, 322, 341, 1252, 11, 293, 370, 309, 2170, 257, 1804, 502, 13, 51032, 51032, 440, 3100, 300, 787, 4204, 322, 264, 558, 1252, 11, 411, 341, 2146, 11, 51236, 51236, 2597, 11, 411, 341, 2146, 11, 483, 257, 3175, 502, 13, 51408, 51408, 2264, 30, 51433, 51433, 440, 16235, 510, 2170, 257, 3175, 502, 570, 291, 51546, 51546, 362, 257, 3175, 1465, 510, 13, 51598, 51598, 407, 264, 2771, 2448, 11, 562, 436, 646, 48256, 11, 51694, 51694, 436, 917, 493, 885, 3175, 502, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1678511194822167, "compression_ratio": 1.9178743961352658, "no_speech_prob": 4.157324838161003e-06}, {"id": 1215, "seek": 353248, "start": 3549.92, "end": 3553.36, "text": " sorry, like this guy, get a minus 1.", "tokens": [50364, 407, 2035, 3100, 7038, 787, 322, 264, 1411, 486, 483, 257, 1804, 502, 13, 50706, 50706, 407, 341, 2146, 2170, 257, 1804, 502, 570, 341, 4691, 787, 50818, 50818, 7038, 322, 341, 1252, 11, 293, 370, 309, 2170, 257, 1804, 502, 13, 51032, 51032, 440, 3100, 300, 787, 4204, 322, 264, 558, 1252, 11, 411, 341, 2146, 11, 51236, 51236, 2597, 11, 411, 341, 2146, 11, 483, 257, 3175, 502, 13, 51408, 51408, 2264, 30, 51433, 51433, 440, 16235, 510, 2170, 257, 3175, 502, 570, 291, 51546, 51546, 362, 257, 3175, 1465, 510, 13, 51598, 51598, 407, 264, 2771, 2448, 11, 562, 436, 646, 48256, 11, 51694, 51694, 436, 917, 493, 885, 3175, 502, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1678511194822167, "compression_ratio": 1.9178743961352658, "no_speech_prob": 4.157324838161003e-06}, {"id": 1216, "seek": 353248, "start": 3553.36, "end": 3553.86, "text": " OK?", "tokens": [50364, 407, 2035, 3100, 7038, 787, 322, 264, 1411, 486, 483, 257, 1804, 502, 13, 50706, 50706, 407, 341, 2146, 2170, 257, 1804, 502, 570, 341, 4691, 787, 50818, 50818, 7038, 322, 341, 1252, 11, 293, 370, 309, 2170, 257, 1804, 502, 13, 51032, 51032, 440, 3100, 300, 787, 4204, 322, 264, 558, 1252, 11, 411, 341, 2146, 11, 51236, 51236, 2597, 11, 411, 341, 2146, 11, 483, 257, 3175, 502, 13, 51408, 51408, 2264, 30, 51433, 51433, 440, 16235, 510, 2170, 257, 3175, 502, 570, 291, 51546, 51546, 362, 257, 3175, 1465, 510, 13, 51598, 51598, 407, 264, 2771, 2448, 11, 562, 436, 646, 48256, 11, 51694, 51694, 436, 917, 493, 885, 3175, 502, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1678511194822167, "compression_ratio": 1.9178743961352658, "no_speech_prob": 4.157324838161003e-06}, {"id": 1217, "seek": 353248, "start": 3553.86, "end": 3556.12, "text": " The gradient here gets a minus 1 because you", "tokens": [50364, 407, 2035, 3100, 7038, 787, 322, 264, 1411, 486, 483, 257, 1804, 502, 13, 50706, 50706, 407, 341, 2146, 2170, 257, 1804, 502, 570, 341, 4691, 787, 50818, 50818, 7038, 322, 341, 1252, 11, 293, 370, 309, 2170, 257, 1804, 502, 13, 51032, 51032, 440, 3100, 300, 787, 4204, 322, 264, 558, 1252, 11, 411, 341, 2146, 11, 51236, 51236, 2597, 11, 411, 341, 2146, 11, 483, 257, 3175, 502, 13, 51408, 51408, 2264, 30, 51433, 51433, 440, 16235, 510, 2170, 257, 3175, 502, 570, 291, 51546, 51546, 362, 257, 3175, 1465, 510, 13, 51598, 51598, 407, 264, 2771, 2448, 11, 562, 436, 646, 48256, 11, 51694, 51694, 436, 917, 493, 885, 3175, 502, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1678511194822167, "compression_ratio": 1.9178743961352658, "no_speech_prob": 4.157324838161003e-06}, {"id": 1218, "seek": 353248, "start": 3556.12, "end": 3557.16, "text": " have a minus sign here.", "tokens": [50364, 407, 2035, 3100, 7038, 787, 322, 264, 1411, 486, 483, 257, 1804, 502, 13, 50706, 50706, 407, 341, 2146, 2170, 257, 1804, 502, 570, 341, 4691, 787, 50818, 50818, 7038, 322, 341, 1252, 11, 293, 370, 309, 2170, 257, 1804, 502, 13, 51032, 51032, 440, 3100, 300, 787, 4204, 322, 264, 558, 1252, 11, 411, 341, 2146, 11, 51236, 51236, 2597, 11, 411, 341, 2146, 11, 483, 257, 3175, 502, 13, 51408, 51408, 2264, 30, 51433, 51433, 440, 16235, 510, 2170, 257, 3175, 502, 570, 291, 51546, 51546, 362, 257, 3175, 1465, 510, 13, 51598, 51598, 407, 264, 2771, 2448, 11, 562, 436, 646, 48256, 11, 51694, 51694, 436, 917, 493, 885, 3175, 502, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1678511194822167, "compression_ratio": 1.9178743961352658, "no_speech_prob": 4.157324838161003e-06}, {"id": 1219, "seek": 353248, "start": 3557.16, "end": 3559.08, "text": " So the gradients, when they back propagate,", "tokens": [50364, 407, 2035, 3100, 7038, 787, 322, 264, 1411, 486, 483, 257, 1804, 502, 13, 50706, 50706, 407, 341, 2146, 2170, 257, 1804, 502, 570, 341, 4691, 787, 50818, 50818, 7038, 322, 341, 1252, 11, 293, 370, 309, 2170, 257, 1804, 502, 13, 51032, 51032, 440, 3100, 300, 787, 4204, 322, 264, 558, 1252, 11, 411, 341, 2146, 11, 51236, 51236, 2597, 11, 411, 341, 2146, 11, 483, 257, 3175, 502, 13, 51408, 51408, 2264, 30, 51433, 51433, 440, 16235, 510, 2170, 257, 3175, 502, 570, 291, 51546, 51546, 362, 257, 3175, 1465, 510, 13, 51598, 51598, 407, 264, 2771, 2448, 11, 562, 436, 646, 48256, 11, 51694, 51694, 436, 917, 493, 885, 3175, 502, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1678511194822167, "compression_ratio": 1.9178743961352658, "no_speech_prob": 4.157324838161003e-06}, {"id": 1220, "seek": 353248, "start": 3559.08, "end": 3561.76, "text": " they end up being minus 1.", "tokens": [50364, 407, 2035, 3100, 7038, 787, 322, 264, 1411, 486, 483, 257, 1804, 502, 13, 50706, 50706, 407, 341, 2146, 2170, 257, 1804, 502, 570, 341, 4691, 787, 50818, 50818, 7038, 322, 341, 1252, 11, 293, 370, 309, 2170, 257, 1804, 502, 13, 51032, 51032, 440, 3100, 300, 787, 4204, 322, 264, 558, 1252, 11, 411, 341, 2146, 11, 51236, 51236, 2597, 11, 411, 341, 2146, 11, 483, 257, 3175, 502, 13, 51408, 51408, 2264, 30, 51433, 51433, 440, 16235, 510, 2170, 257, 3175, 502, 570, 291, 51546, 51546, 362, 257, 3175, 1465, 510, 13, 51598, 51598, 407, 264, 2771, 2448, 11, 562, 436, 646, 48256, 11, 51694, 51694, 436, 917, 493, 885, 3175, 502, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1678511194822167, "compression_ratio": 1.9178743961352658, "no_speech_prob": 4.157324838161003e-06}, {"id": 1221, "seek": 356176, "start": 3561.76, "end": 3563.6800000000003, "text": " OK, this guy also gets minus 1.", "tokens": [50364, 2264, 11, 341, 2146, 611, 2170, 3175, 502, 13, 50460, 50460, 639, 2146, 510, 7038, 322, 1293, 4881, 11, 50608, 50608, 293, 370, 264, 3175, 502, 293, 264, 1804, 502, 10373, 11, 50742, 50742, 293, 341, 2146, 2170, 1958, 16235, 13, 50872, 50872, 467, 311, 294, 264, 3006, 3100, 11, 457, 309, 311, 611, 294, 264, 3100, 50998, 50998, 300, 264, 1185, 14725, 11, 370, 291, 4659, 380, 1319, 1340, 13, 51120, 51120, 467, 311, 2264, 11, 558, 30, 51220, 51220, 407, 264, 1074, 300, 362, 257, 3175, 502, 366, 264, 18424, 14518, 13, 51366, 51366, 440, 661, 14518, 300, 366, 294, 264, 18424, 1867, 11, 457, 406, 51487, 51487, 294, 264, 3006, 1867, 13, 51554, 51554, 440, 472, 300, 286, 362, 257, 1804, 502, 366, 264, 8819, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15125579544992157, "compression_ratio": 1.8865546218487395, "no_speech_prob": 7.071643267408945e-06}, {"id": 1222, "seek": 356176, "start": 3563.6800000000003, "end": 3566.6400000000003, "text": " This guy here appears on both sides,", "tokens": [50364, 2264, 11, 341, 2146, 611, 2170, 3175, 502, 13, 50460, 50460, 639, 2146, 510, 7038, 322, 1293, 4881, 11, 50608, 50608, 293, 370, 264, 3175, 502, 293, 264, 1804, 502, 10373, 11, 50742, 50742, 293, 341, 2146, 2170, 1958, 16235, 13, 50872, 50872, 467, 311, 294, 264, 3006, 3100, 11, 457, 309, 311, 611, 294, 264, 3100, 50998, 50998, 300, 264, 1185, 14725, 11, 370, 291, 4659, 380, 1319, 1340, 13, 51120, 51120, 467, 311, 2264, 11, 558, 30, 51220, 51220, 407, 264, 1074, 300, 362, 257, 3175, 502, 366, 264, 18424, 14518, 13, 51366, 51366, 440, 661, 14518, 300, 366, 294, 264, 18424, 1867, 11, 457, 406, 51487, 51487, 294, 264, 3006, 1867, 13, 51554, 51554, 440, 472, 300, 286, 362, 257, 1804, 502, 366, 264, 8819, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15125579544992157, "compression_ratio": 1.8865546218487395, "no_speech_prob": 7.071643267408945e-06}, {"id": 1223, "seek": 356176, "start": 3566.6400000000003, "end": 3569.32, "text": " and so the minus 1 and the plus 1 cancel,", "tokens": [50364, 2264, 11, 341, 2146, 611, 2170, 3175, 502, 13, 50460, 50460, 639, 2146, 510, 7038, 322, 1293, 4881, 11, 50608, 50608, 293, 370, 264, 3175, 502, 293, 264, 1804, 502, 10373, 11, 50742, 50742, 293, 341, 2146, 2170, 1958, 16235, 13, 50872, 50872, 467, 311, 294, 264, 3006, 3100, 11, 457, 309, 311, 611, 294, 264, 3100, 50998, 50998, 300, 264, 1185, 14725, 11, 370, 291, 4659, 380, 1319, 1340, 13, 51120, 51120, 467, 311, 2264, 11, 558, 30, 51220, 51220, 407, 264, 1074, 300, 362, 257, 3175, 502, 366, 264, 18424, 14518, 13, 51366, 51366, 440, 661, 14518, 300, 366, 294, 264, 18424, 1867, 11, 457, 406, 51487, 51487, 294, 264, 3006, 1867, 13, 51554, 51554, 440, 472, 300, 286, 362, 257, 1804, 502, 366, 264, 8819, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15125579544992157, "compression_ratio": 1.8865546218487395, "no_speech_prob": 7.071643267408945e-06}, {"id": 1224, "seek": 356176, "start": 3569.32, "end": 3571.92, "text": " and this guy gets 0 gradient.", "tokens": [50364, 2264, 11, 341, 2146, 611, 2170, 3175, 502, 13, 50460, 50460, 639, 2146, 510, 7038, 322, 1293, 4881, 11, 50608, 50608, 293, 370, 264, 3175, 502, 293, 264, 1804, 502, 10373, 11, 50742, 50742, 293, 341, 2146, 2170, 1958, 16235, 13, 50872, 50872, 467, 311, 294, 264, 3006, 3100, 11, 457, 309, 311, 611, 294, 264, 3100, 50998, 50998, 300, 264, 1185, 14725, 11, 370, 291, 4659, 380, 1319, 1340, 13, 51120, 51120, 467, 311, 2264, 11, 558, 30, 51220, 51220, 407, 264, 1074, 300, 362, 257, 3175, 502, 366, 264, 18424, 14518, 13, 51366, 51366, 440, 661, 14518, 300, 366, 294, 264, 18424, 1867, 11, 457, 406, 51487, 51487, 294, 264, 3006, 1867, 13, 51554, 51554, 440, 472, 300, 286, 362, 257, 1804, 502, 366, 264, 8819, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15125579544992157, "compression_ratio": 1.8865546218487395, "no_speech_prob": 7.071643267408945e-06}, {"id": 1225, "seek": 356176, "start": 3571.92, "end": 3574.44, "text": " It's in the correct path, but it's also in the path", "tokens": [50364, 2264, 11, 341, 2146, 611, 2170, 3175, 502, 13, 50460, 50460, 639, 2146, 510, 7038, 322, 1293, 4881, 11, 50608, 50608, 293, 370, 264, 3175, 502, 293, 264, 1804, 502, 10373, 11, 50742, 50742, 293, 341, 2146, 2170, 1958, 16235, 13, 50872, 50872, 467, 311, 294, 264, 3006, 3100, 11, 457, 309, 311, 611, 294, 264, 3100, 50998, 50998, 300, 264, 1185, 14725, 11, 370, 291, 4659, 380, 1319, 1340, 13, 51120, 51120, 467, 311, 2264, 11, 558, 30, 51220, 51220, 407, 264, 1074, 300, 362, 257, 3175, 502, 366, 264, 18424, 14518, 13, 51366, 51366, 440, 661, 14518, 300, 366, 294, 264, 18424, 1867, 11, 457, 406, 51487, 51487, 294, 264, 3006, 1867, 13, 51554, 51554, 440, 472, 300, 286, 362, 257, 1804, 502, 366, 264, 8819, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15125579544992157, "compression_ratio": 1.8865546218487395, "no_speech_prob": 7.071643267408945e-06}, {"id": 1226, "seek": 356176, "start": 3574.44, "end": 3576.88, "text": " that the system produces, so you shouldn't change anything.", "tokens": [50364, 2264, 11, 341, 2146, 611, 2170, 3175, 502, 13, 50460, 50460, 639, 2146, 510, 7038, 322, 1293, 4881, 11, 50608, 50608, 293, 370, 264, 3175, 502, 293, 264, 1804, 502, 10373, 11, 50742, 50742, 293, 341, 2146, 2170, 1958, 16235, 13, 50872, 50872, 467, 311, 294, 264, 3006, 3100, 11, 457, 309, 311, 611, 294, 264, 3100, 50998, 50998, 300, 264, 1185, 14725, 11, 370, 291, 4659, 380, 1319, 1340, 13, 51120, 51120, 467, 311, 2264, 11, 558, 30, 51220, 51220, 407, 264, 1074, 300, 362, 257, 3175, 502, 366, 264, 18424, 14518, 13, 51366, 51366, 440, 661, 14518, 300, 366, 294, 264, 18424, 1867, 11, 457, 406, 51487, 51487, 294, 264, 3006, 1867, 13, 51554, 51554, 440, 472, 300, 286, 362, 257, 1804, 502, 366, 264, 8819, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15125579544992157, "compression_ratio": 1.8865546218487395, "no_speech_prob": 7.071643267408945e-06}, {"id": 1227, "seek": 356176, "start": 3576.88, "end": 3578.88, "text": " It's OK, right?", "tokens": [50364, 2264, 11, 341, 2146, 611, 2170, 3175, 502, 13, 50460, 50460, 639, 2146, 510, 7038, 322, 1293, 4881, 11, 50608, 50608, 293, 370, 264, 3175, 502, 293, 264, 1804, 502, 10373, 11, 50742, 50742, 293, 341, 2146, 2170, 1958, 16235, 13, 50872, 50872, 467, 311, 294, 264, 3006, 3100, 11, 457, 309, 311, 611, 294, 264, 3100, 50998, 50998, 300, 264, 1185, 14725, 11, 370, 291, 4659, 380, 1319, 1340, 13, 51120, 51120, 467, 311, 2264, 11, 558, 30, 51220, 51220, 407, 264, 1074, 300, 362, 257, 3175, 502, 366, 264, 18424, 14518, 13, 51366, 51366, 440, 661, 14518, 300, 366, 294, 264, 18424, 1867, 11, 457, 406, 51487, 51487, 294, 264, 3006, 1867, 13, 51554, 51554, 440, 472, 300, 286, 362, 257, 1804, 502, 366, 264, 8819, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15125579544992157, "compression_ratio": 1.8865546218487395, "no_speech_prob": 7.071643267408945e-06}, {"id": 1228, "seek": 356176, "start": 3578.88, "end": 3581.8, "text": " So the guys that have a minus 1 are the incorrect paths.", "tokens": [50364, 2264, 11, 341, 2146, 611, 2170, 3175, 502, 13, 50460, 50460, 639, 2146, 510, 7038, 322, 1293, 4881, 11, 50608, 50608, 293, 370, 264, 3175, 502, 293, 264, 1804, 502, 10373, 11, 50742, 50742, 293, 341, 2146, 2170, 1958, 16235, 13, 50872, 50872, 467, 311, 294, 264, 3006, 3100, 11, 457, 309, 311, 611, 294, 264, 3100, 50998, 50998, 300, 264, 1185, 14725, 11, 370, 291, 4659, 380, 1319, 1340, 13, 51120, 51120, 467, 311, 2264, 11, 558, 30, 51220, 51220, 407, 264, 1074, 300, 362, 257, 3175, 502, 366, 264, 18424, 14518, 13, 51366, 51366, 440, 661, 14518, 300, 366, 294, 264, 18424, 1867, 11, 457, 406, 51487, 51487, 294, 264, 3006, 1867, 13, 51554, 51554, 440, 472, 300, 286, 362, 257, 1804, 502, 366, 264, 8819, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15125579544992157, "compression_ratio": 1.8865546218487395, "no_speech_prob": 7.071643267408945e-06}, {"id": 1229, "seek": 356176, "start": 3581.8, "end": 3584.2200000000003, "text": " The other paths that are in the incorrect answer, but not", "tokens": [50364, 2264, 11, 341, 2146, 611, 2170, 3175, 502, 13, 50460, 50460, 639, 2146, 510, 7038, 322, 1293, 4881, 11, 50608, 50608, 293, 370, 264, 3175, 502, 293, 264, 1804, 502, 10373, 11, 50742, 50742, 293, 341, 2146, 2170, 1958, 16235, 13, 50872, 50872, 467, 311, 294, 264, 3006, 3100, 11, 457, 309, 311, 611, 294, 264, 3100, 50998, 50998, 300, 264, 1185, 14725, 11, 370, 291, 4659, 380, 1319, 1340, 13, 51120, 51120, 467, 311, 2264, 11, 558, 30, 51220, 51220, 407, 264, 1074, 300, 362, 257, 3175, 502, 366, 264, 18424, 14518, 13, 51366, 51366, 440, 661, 14518, 300, 366, 294, 264, 18424, 1867, 11, 457, 406, 51487, 51487, 294, 264, 3006, 1867, 13, 51554, 51554, 440, 472, 300, 286, 362, 257, 1804, 502, 366, 264, 8819, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15125579544992157, "compression_ratio": 1.8865546218487395, "no_speech_prob": 7.071643267408945e-06}, {"id": 1230, "seek": 356176, "start": 3584.2200000000003, "end": 3585.5600000000004, "text": " in the correct answer.", "tokens": [50364, 2264, 11, 341, 2146, 611, 2170, 3175, 502, 13, 50460, 50460, 639, 2146, 510, 7038, 322, 1293, 4881, 11, 50608, 50608, 293, 370, 264, 3175, 502, 293, 264, 1804, 502, 10373, 11, 50742, 50742, 293, 341, 2146, 2170, 1958, 16235, 13, 50872, 50872, 467, 311, 294, 264, 3006, 3100, 11, 457, 309, 311, 611, 294, 264, 3100, 50998, 50998, 300, 264, 1185, 14725, 11, 370, 291, 4659, 380, 1319, 1340, 13, 51120, 51120, 467, 311, 2264, 11, 558, 30, 51220, 51220, 407, 264, 1074, 300, 362, 257, 3175, 502, 366, 264, 18424, 14518, 13, 51366, 51366, 440, 661, 14518, 300, 366, 294, 264, 18424, 1867, 11, 457, 406, 51487, 51487, 294, 264, 3006, 1867, 13, 51554, 51554, 440, 472, 300, 286, 362, 257, 1804, 502, 366, 264, 8819, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15125579544992157, "compression_ratio": 1.8865546218487395, "no_speech_prob": 7.071643267408945e-06}, {"id": 1231, "seek": 356176, "start": 3585.5600000000004, "end": 3588.32, "text": " The one that I have a plus 1 are the edges", "tokens": [50364, 2264, 11, 341, 2146, 611, 2170, 3175, 502, 13, 50460, 50460, 639, 2146, 510, 7038, 322, 1293, 4881, 11, 50608, 50608, 293, 370, 264, 3175, 502, 293, 264, 1804, 502, 10373, 11, 50742, 50742, 293, 341, 2146, 2170, 1958, 16235, 13, 50872, 50872, 467, 311, 294, 264, 3006, 3100, 11, 457, 309, 311, 611, 294, 264, 3100, 50998, 50998, 300, 264, 1185, 14725, 11, 370, 291, 4659, 380, 1319, 1340, 13, 51120, 51120, 467, 311, 2264, 11, 558, 30, 51220, 51220, 407, 264, 1074, 300, 362, 257, 3175, 502, 366, 264, 18424, 14518, 13, 51366, 51366, 440, 661, 14518, 300, 366, 294, 264, 18424, 1867, 11, 457, 406, 51487, 51487, 294, 264, 3006, 1867, 13, 51554, 51554, 440, 472, 300, 286, 362, 257, 1804, 502, 366, 264, 8819, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15125579544992157, "compression_ratio": 1.8865546218487395, "no_speech_prob": 7.071643267408945e-06}, {"id": 1232, "seek": 358832, "start": 3588.32, "end": 3593.6800000000003, "text": " that are in the correct answer, but not in the incorrect one.", "tokens": [50364, 300, 366, 294, 264, 3006, 1867, 11, 457, 406, 294, 264, 18424, 472, 13, 50632, 50632, 2264, 11, 264, 472, 300, 575, 1958, 366, 294, 9662, 11, 420, 436, 366, 294, 1293, 13, 50814, 50814, 1779, 30, 50852, 50852, 407, 586, 291, 483, 2771, 2448, 510, 13, 50954, 50954, 3950, 2771, 2448, 366, 2771, 2448, 337, 439, 264, 23930, 51058, 51058, 295, 439, 729, 18161, 36170, 13, 51108, 51108, 509, 646, 48256, 807, 264, 18161, 36170, 51228, 51228, 293, 5623, 264, 17443, 13, 51320, 51320, 2264, 30, 51350, 51350, 400, 498, 291, 360, 341, 11, 550, 264, 1185, 51471, 51471, 486, 4728, 17522, 1080, 4470, 2445, 11, 51570, 51570, 597, 307, 264, 2649, 1296, 264, 2281, 295, 264, 3006, 1867, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.19037312846029958, "compression_ratio": 1.7413127413127414, "no_speech_prob": 5.95493838773109e-06}, {"id": 1233, "seek": 358832, "start": 3593.6800000000003, "end": 3597.32, "text": " OK, the one that has 0 are in neither, or they are in both.", "tokens": [50364, 300, 366, 294, 264, 3006, 1867, 11, 457, 406, 294, 264, 18424, 472, 13, 50632, 50632, 2264, 11, 264, 472, 300, 575, 1958, 366, 294, 9662, 11, 420, 436, 366, 294, 1293, 13, 50814, 50814, 1779, 30, 50852, 50852, 407, 586, 291, 483, 2771, 2448, 510, 13, 50954, 50954, 3950, 2771, 2448, 366, 2771, 2448, 337, 439, 264, 23930, 51058, 51058, 295, 439, 729, 18161, 36170, 13, 51108, 51108, 509, 646, 48256, 807, 264, 18161, 36170, 51228, 51228, 293, 5623, 264, 17443, 13, 51320, 51320, 2264, 30, 51350, 51350, 400, 498, 291, 360, 341, 11, 550, 264, 1185, 51471, 51471, 486, 4728, 17522, 1080, 4470, 2445, 11, 51570, 51570, 597, 307, 264, 2649, 1296, 264, 2281, 295, 264, 3006, 1867, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.19037312846029958, "compression_ratio": 1.7413127413127414, "no_speech_prob": 5.95493838773109e-06}, {"id": 1234, "seek": 358832, "start": 3597.32, "end": 3598.0800000000004, "text": " Right?", "tokens": [50364, 300, 366, 294, 264, 3006, 1867, 11, 457, 406, 294, 264, 18424, 472, 13, 50632, 50632, 2264, 11, 264, 472, 300, 575, 1958, 366, 294, 9662, 11, 420, 436, 366, 294, 1293, 13, 50814, 50814, 1779, 30, 50852, 50852, 407, 586, 291, 483, 2771, 2448, 510, 13, 50954, 50954, 3950, 2771, 2448, 366, 2771, 2448, 337, 439, 264, 23930, 51058, 51058, 295, 439, 729, 18161, 36170, 13, 51108, 51108, 509, 646, 48256, 807, 264, 18161, 36170, 51228, 51228, 293, 5623, 264, 17443, 13, 51320, 51320, 2264, 30, 51350, 51350, 400, 498, 291, 360, 341, 11, 550, 264, 1185, 51471, 51471, 486, 4728, 17522, 1080, 4470, 2445, 11, 51570, 51570, 597, 307, 264, 2649, 1296, 264, 2281, 295, 264, 3006, 1867, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.19037312846029958, "compression_ratio": 1.7413127413127414, "no_speech_prob": 5.95493838773109e-06}, {"id": 1235, "seek": 358832, "start": 3598.0800000000004, "end": 3600.1200000000003, "text": " So now you get gradients here.", "tokens": [50364, 300, 366, 294, 264, 3006, 1867, 11, 457, 406, 294, 264, 18424, 472, 13, 50632, 50632, 2264, 11, 264, 472, 300, 575, 1958, 366, 294, 9662, 11, 420, 436, 366, 294, 1293, 13, 50814, 50814, 1779, 30, 50852, 50852, 407, 586, 291, 483, 2771, 2448, 510, 13, 50954, 50954, 3950, 2771, 2448, 366, 2771, 2448, 337, 439, 264, 23930, 51058, 51058, 295, 439, 729, 18161, 36170, 13, 51108, 51108, 509, 646, 48256, 807, 264, 18161, 36170, 51228, 51228, 293, 5623, 264, 17443, 13, 51320, 51320, 2264, 30, 51350, 51350, 400, 498, 291, 360, 341, 11, 550, 264, 1185, 51471, 51471, 486, 4728, 17522, 1080, 4470, 2445, 11, 51570, 51570, 597, 307, 264, 2649, 1296, 264, 2281, 295, 264, 3006, 1867, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.19037312846029958, "compression_ratio": 1.7413127413127414, "no_speech_prob": 5.95493838773109e-06}, {"id": 1236, "seek": 358832, "start": 3600.1200000000003, "end": 3602.2000000000003, "text": " Those gradients are gradients for all the outputs", "tokens": [50364, 300, 366, 294, 264, 3006, 1867, 11, 457, 406, 294, 264, 18424, 472, 13, 50632, 50632, 2264, 11, 264, 472, 300, 575, 1958, 366, 294, 9662, 11, 420, 436, 366, 294, 1293, 13, 50814, 50814, 1779, 30, 50852, 50852, 407, 586, 291, 483, 2771, 2448, 510, 13, 50954, 50954, 3950, 2771, 2448, 366, 2771, 2448, 337, 439, 264, 23930, 51058, 51058, 295, 439, 729, 18161, 36170, 13, 51108, 51108, 509, 646, 48256, 807, 264, 18161, 36170, 51228, 51228, 293, 5623, 264, 17443, 13, 51320, 51320, 2264, 30, 51350, 51350, 400, 498, 291, 360, 341, 11, 550, 264, 1185, 51471, 51471, 486, 4728, 17522, 1080, 4470, 2445, 11, 51570, 51570, 597, 307, 264, 2649, 1296, 264, 2281, 295, 264, 3006, 1867, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.19037312846029958, "compression_ratio": 1.7413127413127414, "no_speech_prob": 5.95493838773109e-06}, {"id": 1237, "seek": 358832, "start": 3602.2000000000003, "end": 3603.2000000000003, "text": " of all those neural nets.", "tokens": [50364, 300, 366, 294, 264, 3006, 1867, 11, 457, 406, 294, 264, 18424, 472, 13, 50632, 50632, 2264, 11, 264, 472, 300, 575, 1958, 366, 294, 9662, 11, 420, 436, 366, 294, 1293, 13, 50814, 50814, 1779, 30, 50852, 50852, 407, 586, 291, 483, 2771, 2448, 510, 13, 50954, 50954, 3950, 2771, 2448, 366, 2771, 2448, 337, 439, 264, 23930, 51058, 51058, 295, 439, 729, 18161, 36170, 13, 51108, 51108, 509, 646, 48256, 807, 264, 18161, 36170, 51228, 51228, 293, 5623, 264, 17443, 13, 51320, 51320, 2264, 30, 51350, 51350, 400, 498, 291, 360, 341, 11, 550, 264, 1185, 51471, 51471, 486, 4728, 17522, 1080, 4470, 2445, 11, 51570, 51570, 597, 307, 264, 2649, 1296, 264, 2281, 295, 264, 3006, 1867, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.19037312846029958, "compression_ratio": 1.7413127413127414, "no_speech_prob": 5.95493838773109e-06}, {"id": 1238, "seek": 358832, "start": 3603.2000000000003, "end": 3605.6000000000004, "text": " You back propagate through the neural nets", "tokens": [50364, 300, 366, 294, 264, 3006, 1867, 11, 457, 406, 294, 264, 18424, 472, 13, 50632, 50632, 2264, 11, 264, 472, 300, 575, 1958, 366, 294, 9662, 11, 420, 436, 366, 294, 1293, 13, 50814, 50814, 1779, 30, 50852, 50852, 407, 586, 291, 483, 2771, 2448, 510, 13, 50954, 50954, 3950, 2771, 2448, 366, 2771, 2448, 337, 439, 264, 23930, 51058, 51058, 295, 439, 729, 18161, 36170, 13, 51108, 51108, 509, 646, 48256, 807, 264, 18161, 36170, 51228, 51228, 293, 5623, 264, 17443, 13, 51320, 51320, 2264, 30, 51350, 51350, 400, 498, 291, 360, 341, 11, 550, 264, 1185, 51471, 51471, 486, 4728, 17522, 1080, 4470, 2445, 11, 51570, 51570, 597, 307, 264, 2649, 1296, 264, 2281, 295, 264, 3006, 1867, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.19037312846029958, "compression_ratio": 1.7413127413127414, "no_speech_prob": 5.95493838773109e-06}, {"id": 1239, "seek": 358832, "start": 3605.6000000000004, "end": 3607.44, "text": " and update the weights.", "tokens": [50364, 300, 366, 294, 264, 3006, 1867, 11, 457, 406, 294, 264, 18424, 472, 13, 50632, 50632, 2264, 11, 264, 472, 300, 575, 1958, 366, 294, 9662, 11, 420, 436, 366, 294, 1293, 13, 50814, 50814, 1779, 30, 50852, 50852, 407, 586, 291, 483, 2771, 2448, 510, 13, 50954, 50954, 3950, 2771, 2448, 366, 2771, 2448, 337, 439, 264, 23930, 51058, 51058, 295, 439, 729, 18161, 36170, 13, 51108, 51108, 509, 646, 48256, 807, 264, 18161, 36170, 51228, 51228, 293, 5623, 264, 17443, 13, 51320, 51320, 2264, 30, 51350, 51350, 400, 498, 291, 360, 341, 11, 550, 264, 1185, 51471, 51471, 486, 4728, 17522, 1080, 4470, 2445, 11, 51570, 51570, 597, 307, 264, 2649, 1296, 264, 2281, 295, 264, 3006, 1867, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.19037312846029958, "compression_ratio": 1.7413127413127414, "no_speech_prob": 5.95493838773109e-06}, {"id": 1240, "seek": 358832, "start": 3607.44, "end": 3608.04, "text": " OK?", "tokens": [50364, 300, 366, 294, 264, 3006, 1867, 11, 457, 406, 294, 264, 18424, 472, 13, 50632, 50632, 2264, 11, 264, 472, 300, 575, 1958, 366, 294, 9662, 11, 420, 436, 366, 294, 1293, 13, 50814, 50814, 1779, 30, 50852, 50852, 407, 586, 291, 483, 2771, 2448, 510, 13, 50954, 50954, 3950, 2771, 2448, 366, 2771, 2448, 337, 439, 264, 23930, 51058, 51058, 295, 439, 729, 18161, 36170, 13, 51108, 51108, 509, 646, 48256, 807, 264, 18161, 36170, 51228, 51228, 293, 5623, 264, 17443, 13, 51320, 51320, 2264, 30, 51350, 51350, 400, 498, 291, 360, 341, 11, 550, 264, 1185, 51471, 51471, 486, 4728, 17522, 1080, 4470, 2445, 11, 51570, 51570, 597, 307, 264, 2649, 1296, 264, 2281, 295, 264, 3006, 1867, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.19037312846029958, "compression_ratio": 1.7413127413127414, "no_speech_prob": 5.95493838773109e-06}, {"id": 1241, "seek": 358832, "start": 3608.04, "end": 3610.46, "text": " And if you do this, then the system", "tokens": [50364, 300, 366, 294, 264, 3006, 1867, 11, 457, 406, 294, 264, 18424, 472, 13, 50632, 50632, 2264, 11, 264, 472, 300, 575, 1958, 366, 294, 9662, 11, 420, 436, 366, 294, 1293, 13, 50814, 50814, 1779, 30, 50852, 50852, 407, 586, 291, 483, 2771, 2448, 510, 13, 50954, 50954, 3950, 2771, 2448, 366, 2771, 2448, 337, 439, 264, 23930, 51058, 51058, 295, 439, 729, 18161, 36170, 13, 51108, 51108, 509, 646, 48256, 807, 264, 18161, 36170, 51228, 51228, 293, 5623, 264, 17443, 13, 51320, 51320, 2264, 30, 51350, 51350, 400, 498, 291, 360, 341, 11, 550, 264, 1185, 51471, 51471, 486, 4728, 17522, 1080, 4470, 2445, 11, 51570, 51570, 597, 307, 264, 2649, 1296, 264, 2281, 295, 264, 3006, 1867, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.19037312846029958, "compression_ratio": 1.7413127413127414, "no_speech_prob": 5.95493838773109e-06}, {"id": 1242, "seek": 358832, "start": 3610.46, "end": 3612.44, "text": " will eventually minimize its loss function,", "tokens": [50364, 300, 366, 294, 264, 3006, 1867, 11, 457, 406, 294, 264, 18424, 472, 13, 50632, 50632, 2264, 11, 264, 472, 300, 575, 1958, 366, 294, 9662, 11, 420, 436, 366, 294, 1293, 13, 50814, 50814, 1779, 30, 50852, 50852, 407, 586, 291, 483, 2771, 2448, 510, 13, 50954, 50954, 3950, 2771, 2448, 366, 2771, 2448, 337, 439, 264, 23930, 51058, 51058, 295, 439, 729, 18161, 36170, 13, 51108, 51108, 509, 646, 48256, 807, 264, 18161, 36170, 51228, 51228, 293, 5623, 264, 17443, 13, 51320, 51320, 2264, 30, 51350, 51350, 400, 498, 291, 360, 341, 11, 550, 264, 1185, 51471, 51471, 486, 4728, 17522, 1080, 4470, 2445, 11, 51570, 51570, 597, 307, 264, 2649, 1296, 264, 2281, 295, 264, 3006, 1867, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.19037312846029958, "compression_ratio": 1.7413127413127414, "no_speech_prob": 5.95493838773109e-06}, {"id": 1243, "seek": 358832, "start": 3612.44, "end": 3615.2000000000003, "text": " which is the difference between the energy of the correct answer", "tokens": [50364, 300, 366, 294, 264, 3006, 1867, 11, 457, 406, 294, 264, 18424, 472, 13, 50632, 50632, 2264, 11, 264, 472, 300, 575, 1958, 366, 294, 9662, 11, 420, 436, 366, 294, 1293, 13, 50814, 50814, 1779, 30, 50852, 50852, 407, 586, 291, 483, 2771, 2448, 510, 13, 50954, 50954, 3950, 2771, 2448, 366, 2771, 2448, 337, 439, 264, 23930, 51058, 51058, 295, 439, 729, 18161, 36170, 13, 51108, 51108, 509, 646, 48256, 807, 264, 18161, 36170, 51228, 51228, 293, 5623, 264, 17443, 13, 51320, 51320, 2264, 30, 51350, 51350, 400, 498, 291, 360, 341, 11, 550, 264, 1185, 51471, 51471, 486, 4728, 17522, 1080, 4470, 2445, 11, 51570, 51570, 597, 307, 264, 2649, 1296, 264, 2281, 295, 264, 3006, 1867, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.19037312846029958, "compression_ratio": 1.7413127413127414, "no_speech_prob": 5.95493838773109e-06}, {"id": 1244, "seek": 361520, "start": 3615.2, "end": 3618.3599999999997, "text": " and the energy of the best answer, whatever it is.", "tokens": [50364, 293, 264, 2281, 295, 264, 1151, 1867, 11, 2035, 309, 307, 13, 50522, 50522, 663, 4470, 2445, 307, 264, 43276, 2044, 4470, 13, 50642, 50642, 400, 321, 2825, 466, 341, 949, 13, 50784, 50784, 682, 1186, 11, 718, 385, 352, 281, 341, 445, 586, 13, 50878, 50878, 2264, 13, 50972, 50972, 1779, 11, 370, 264, 4470, 2445, 321, 445, 2825, 466, 51096, 51096, 307, 264, 1150, 472, 294, 341, 1329, 510, 13, 51328, 51328, 639, 307, 264, 2281, 295, 264, 3006, 1867, 51466, 51466, 3175, 264, 2281, 295, 2035, 1867, 428, 1185, 2738, 51630, 51630, 281, 5258, 13, 51662, 51662, 2264, 30, 51698, 51698, 663, 311, 264, 43276, 2044, 4470, 11, 420, 264, 44498, 43276, 2044, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.13816580772399903, "compression_ratio": 1.8427947598253276, "no_speech_prob": 8.799916031421162e-06}, {"id": 1245, "seek": 361520, "start": 3618.3599999999997, "end": 3620.7599999999998, "text": " That loss function is the perceptron loss.", "tokens": [50364, 293, 264, 2281, 295, 264, 1151, 1867, 11, 2035, 309, 307, 13, 50522, 50522, 663, 4470, 2445, 307, 264, 43276, 2044, 4470, 13, 50642, 50642, 400, 321, 2825, 466, 341, 949, 13, 50784, 50784, 682, 1186, 11, 718, 385, 352, 281, 341, 445, 586, 13, 50878, 50878, 2264, 13, 50972, 50972, 1779, 11, 370, 264, 4470, 2445, 321, 445, 2825, 466, 51096, 51096, 307, 264, 1150, 472, 294, 341, 1329, 510, 13, 51328, 51328, 639, 307, 264, 2281, 295, 264, 3006, 1867, 51466, 51466, 3175, 264, 2281, 295, 2035, 1867, 428, 1185, 2738, 51630, 51630, 281, 5258, 13, 51662, 51662, 2264, 30, 51698, 51698, 663, 311, 264, 43276, 2044, 4470, 11, 420, 264, 44498, 43276, 2044, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.13816580772399903, "compression_ratio": 1.8427947598253276, "no_speech_prob": 8.799916031421162e-06}, {"id": 1246, "seek": 361520, "start": 3620.7599999999998, "end": 3623.6, "text": " And we talked about this before.", "tokens": [50364, 293, 264, 2281, 295, 264, 1151, 1867, 11, 2035, 309, 307, 13, 50522, 50522, 663, 4470, 2445, 307, 264, 43276, 2044, 4470, 13, 50642, 50642, 400, 321, 2825, 466, 341, 949, 13, 50784, 50784, 682, 1186, 11, 718, 385, 352, 281, 341, 445, 586, 13, 50878, 50878, 2264, 13, 50972, 50972, 1779, 11, 370, 264, 4470, 2445, 321, 445, 2825, 466, 51096, 51096, 307, 264, 1150, 472, 294, 341, 1329, 510, 13, 51328, 51328, 639, 307, 264, 2281, 295, 264, 3006, 1867, 51466, 51466, 3175, 264, 2281, 295, 2035, 1867, 428, 1185, 2738, 51630, 51630, 281, 5258, 13, 51662, 51662, 2264, 30, 51698, 51698, 663, 311, 264, 43276, 2044, 4470, 11, 420, 264, 44498, 43276, 2044, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.13816580772399903, "compression_ratio": 1.8427947598253276, "no_speech_prob": 8.799916031421162e-06}, {"id": 1247, "seek": 361520, "start": 3623.6, "end": 3625.48, "text": " In fact, let me go to this just now.", "tokens": [50364, 293, 264, 2281, 295, 264, 1151, 1867, 11, 2035, 309, 307, 13, 50522, 50522, 663, 4470, 2445, 307, 264, 43276, 2044, 4470, 13, 50642, 50642, 400, 321, 2825, 466, 341, 949, 13, 50784, 50784, 682, 1186, 11, 718, 385, 352, 281, 341, 445, 586, 13, 50878, 50878, 2264, 13, 50972, 50972, 1779, 11, 370, 264, 4470, 2445, 321, 445, 2825, 466, 51096, 51096, 307, 264, 1150, 472, 294, 341, 1329, 510, 13, 51328, 51328, 639, 307, 264, 2281, 295, 264, 3006, 1867, 51466, 51466, 3175, 264, 2281, 295, 2035, 1867, 428, 1185, 2738, 51630, 51630, 281, 5258, 13, 51662, 51662, 2264, 30, 51698, 51698, 663, 311, 264, 43276, 2044, 4470, 11, 420, 264, 44498, 43276, 2044, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.13816580772399903, "compression_ratio": 1.8427947598253276, "no_speech_prob": 8.799916031421162e-06}, {"id": 1248, "seek": 361520, "start": 3625.48, "end": 3627.3599999999997, "text": " OK.", "tokens": [50364, 293, 264, 2281, 295, 264, 1151, 1867, 11, 2035, 309, 307, 13, 50522, 50522, 663, 4470, 2445, 307, 264, 43276, 2044, 4470, 13, 50642, 50642, 400, 321, 2825, 466, 341, 949, 13, 50784, 50784, 682, 1186, 11, 718, 385, 352, 281, 341, 445, 586, 13, 50878, 50878, 2264, 13, 50972, 50972, 1779, 11, 370, 264, 4470, 2445, 321, 445, 2825, 466, 51096, 51096, 307, 264, 1150, 472, 294, 341, 1329, 510, 13, 51328, 51328, 639, 307, 264, 2281, 295, 264, 3006, 1867, 51466, 51466, 3175, 264, 2281, 295, 2035, 1867, 428, 1185, 2738, 51630, 51630, 281, 5258, 13, 51662, 51662, 2264, 30, 51698, 51698, 663, 311, 264, 43276, 2044, 4470, 11, 420, 264, 44498, 43276, 2044, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.13816580772399903, "compression_ratio": 1.8427947598253276, "no_speech_prob": 8.799916031421162e-06}, {"id": 1249, "seek": 361520, "start": 3627.3599999999997, "end": 3629.8399999999997, "text": " Right, so the loss function we just talked about", "tokens": [50364, 293, 264, 2281, 295, 264, 1151, 1867, 11, 2035, 309, 307, 13, 50522, 50522, 663, 4470, 2445, 307, 264, 43276, 2044, 4470, 13, 50642, 50642, 400, 321, 2825, 466, 341, 949, 13, 50784, 50784, 682, 1186, 11, 718, 385, 352, 281, 341, 445, 586, 13, 50878, 50878, 2264, 13, 50972, 50972, 1779, 11, 370, 264, 4470, 2445, 321, 445, 2825, 466, 51096, 51096, 307, 264, 1150, 472, 294, 341, 1329, 510, 13, 51328, 51328, 639, 307, 264, 2281, 295, 264, 3006, 1867, 51466, 51466, 3175, 264, 2281, 295, 2035, 1867, 428, 1185, 2738, 51630, 51630, 281, 5258, 13, 51662, 51662, 2264, 30, 51698, 51698, 663, 311, 264, 43276, 2044, 4470, 11, 420, 264, 44498, 43276, 2044, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.13816580772399903, "compression_ratio": 1.8427947598253276, "no_speech_prob": 8.799916031421162e-06}, {"id": 1250, "seek": 361520, "start": 3629.8399999999997, "end": 3634.48, "text": " is the second one in this list here.", "tokens": [50364, 293, 264, 2281, 295, 264, 1151, 1867, 11, 2035, 309, 307, 13, 50522, 50522, 663, 4470, 2445, 307, 264, 43276, 2044, 4470, 13, 50642, 50642, 400, 321, 2825, 466, 341, 949, 13, 50784, 50784, 682, 1186, 11, 718, 385, 352, 281, 341, 445, 586, 13, 50878, 50878, 2264, 13, 50972, 50972, 1779, 11, 370, 264, 4470, 2445, 321, 445, 2825, 466, 51096, 51096, 307, 264, 1150, 472, 294, 341, 1329, 510, 13, 51328, 51328, 639, 307, 264, 2281, 295, 264, 3006, 1867, 51466, 51466, 3175, 264, 2281, 295, 2035, 1867, 428, 1185, 2738, 51630, 51630, 281, 5258, 13, 51662, 51662, 2264, 30, 51698, 51698, 663, 311, 264, 43276, 2044, 4470, 11, 420, 264, 44498, 43276, 2044, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.13816580772399903, "compression_ratio": 1.8427947598253276, "no_speech_prob": 8.799916031421162e-06}, {"id": 1251, "seek": 361520, "start": 3634.48, "end": 3637.24, "text": " This is the energy of the correct answer", "tokens": [50364, 293, 264, 2281, 295, 264, 1151, 1867, 11, 2035, 309, 307, 13, 50522, 50522, 663, 4470, 2445, 307, 264, 43276, 2044, 4470, 13, 50642, 50642, 400, 321, 2825, 466, 341, 949, 13, 50784, 50784, 682, 1186, 11, 718, 385, 352, 281, 341, 445, 586, 13, 50878, 50878, 2264, 13, 50972, 50972, 1779, 11, 370, 264, 4470, 2445, 321, 445, 2825, 466, 51096, 51096, 307, 264, 1150, 472, 294, 341, 1329, 510, 13, 51328, 51328, 639, 307, 264, 2281, 295, 264, 3006, 1867, 51466, 51466, 3175, 264, 2281, 295, 2035, 1867, 428, 1185, 2738, 51630, 51630, 281, 5258, 13, 51662, 51662, 2264, 30, 51698, 51698, 663, 311, 264, 43276, 2044, 4470, 11, 420, 264, 44498, 43276, 2044, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.13816580772399903, "compression_ratio": 1.8427947598253276, "no_speech_prob": 8.799916031421162e-06}, {"id": 1252, "seek": 361520, "start": 3637.24, "end": 3640.52, "text": " minus the energy of whatever answer your system wants", "tokens": [50364, 293, 264, 2281, 295, 264, 1151, 1867, 11, 2035, 309, 307, 13, 50522, 50522, 663, 4470, 2445, 307, 264, 43276, 2044, 4470, 13, 50642, 50642, 400, 321, 2825, 466, 341, 949, 13, 50784, 50784, 682, 1186, 11, 718, 385, 352, 281, 341, 445, 586, 13, 50878, 50878, 2264, 13, 50972, 50972, 1779, 11, 370, 264, 4470, 2445, 321, 445, 2825, 466, 51096, 51096, 307, 264, 1150, 472, 294, 341, 1329, 510, 13, 51328, 51328, 639, 307, 264, 2281, 295, 264, 3006, 1867, 51466, 51466, 3175, 264, 2281, 295, 2035, 1867, 428, 1185, 2738, 51630, 51630, 281, 5258, 13, 51662, 51662, 2264, 30, 51698, 51698, 663, 311, 264, 43276, 2044, 4470, 11, 420, 264, 44498, 43276, 2044, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.13816580772399903, "compression_ratio": 1.8427947598253276, "no_speech_prob": 8.799916031421162e-06}, {"id": 1253, "seek": 361520, "start": 3640.52, "end": 3641.16, "text": " to produce.", "tokens": [50364, 293, 264, 2281, 295, 264, 1151, 1867, 11, 2035, 309, 307, 13, 50522, 50522, 663, 4470, 2445, 307, 264, 43276, 2044, 4470, 13, 50642, 50642, 400, 321, 2825, 466, 341, 949, 13, 50784, 50784, 682, 1186, 11, 718, 385, 352, 281, 341, 445, 586, 13, 50878, 50878, 2264, 13, 50972, 50972, 1779, 11, 370, 264, 4470, 2445, 321, 445, 2825, 466, 51096, 51096, 307, 264, 1150, 472, 294, 341, 1329, 510, 13, 51328, 51328, 639, 307, 264, 2281, 295, 264, 3006, 1867, 51466, 51466, 3175, 264, 2281, 295, 2035, 1867, 428, 1185, 2738, 51630, 51630, 281, 5258, 13, 51662, 51662, 2264, 30, 51698, 51698, 663, 311, 264, 43276, 2044, 4470, 11, 420, 264, 44498, 43276, 2044, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.13816580772399903, "compression_ratio": 1.8427947598253276, "no_speech_prob": 8.799916031421162e-06}, {"id": 1254, "seek": 361520, "start": 3641.16, "end": 3641.8799999999997, "text": " OK?", "tokens": [50364, 293, 264, 2281, 295, 264, 1151, 1867, 11, 2035, 309, 307, 13, 50522, 50522, 663, 4470, 2445, 307, 264, 43276, 2044, 4470, 13, 50642, 50642, 400, 321, 2825, 466, 341, 949, 13, 50784, 50784, 682, 1186, 11, 718, 385, 352, 281, 341, 445, 586, 13, 50878, 50878, 2264, 13, 50972, 50972, 1779, 11, 370, 264, 4470, 2445, 321, 445, 2825, 466, 51096, 51096, 307, 264, 1150, 472, 294, 341, 1329, 510, 13, 51328, 51328, 639, 307, 264, 2281, 295, 264, 3006, 1867, 51466, 51466, 3175, 264, 2281, 295, 2035, 1867, 428, 1185, 2738, 51630, 51630, 281, 5258, 13, 51662, 51662, 2264, 30, 51698, 51698, 663, 311, 264, 43276, 2044, 4470, 11, 420, 264, 44498, 43276, 2044, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.13816580772399903, "compression_ratio": 1.8427947598253276, "no_speech_prob": 8.799916031421162e-06}, {"id": 1255, "seek": 361520, "start": 3641.8799999999997, "end": 3644.7599999999998, "text": " That's the perceptron loss, or the generalized perceptron", "tokens": [50364, 293, 264, 2281, 295, 264, 1151, 1867, 11, 2035, 309, 307, 13, 50522, 50522, 663, 4470, 2445, 307, 264, 43276, 2044, 4470, 13, 50642, 50642, 400, 321, 2825, 466, 341, 949, 13, 50784, 50784, 682, 1186, 11, 718, 385, 352, 281, 341, 445, 586, 13, 50878, 50878, 2264, 13, 50972, 50972, 1779, 11, 370, 264, 4470, 2445, 321, 445, 2825, 466, 51096, 51096, 307, 264, 1150, 472, 294, 341, 1329, 510, 13, 51328, 51328, 639, 307, 264, 2281, 295, 264, 3006, 1867, 51466, 51466, 3175, 264, 2281, 295, 2035, 1867, 428, 1185, 2738, 51630, 51630, 281, 5258, 13, 51662, 51662, 2264, 30, 51698, 51698, 663, 311, 264, 43276, 2044, 4470, 11, 420, 264, 44498, 43276, 2044, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.13816580772399903, "compression_ratio": 1.8427947598253276, "no_speech_prob": 8.799916031421162e-06}, {"id": 1256, "seek": 364476, "start": 3644.76, "end": 3645.48, "text": " loss, if you want.", "tokens": [50364, 4470, 11, 498, 291, 528, 13, 50400, 50540, 400, 264, 1578, 2583, 466, 341, 4470, 2445, 50676, 50676, 307, 300, 309, 1177, 380, 362, 257, 10270, 13, 50744, 50744, 407, 309, 1177, 380, 5586, 300, 264, 2281, 295, 264, 18424, 6338, 50940, 50940, 307, 4833, 11, 20792, 4833, 11, 813, 264, 2281, 295, 264, 665, 1867, 13, 51198, 51198, 467, 1062, 445, 15584, 13, 51252, 51252, 467, 1062, 445, 652, 633, 2281, 1958, 420, 264, 912, 13, 51470, 51470, 2264, 30, 51548, 51548, 407, 309, 311, 406, 257, 665, 4470, 2445, 281, 764, 13, 51664, 51664, 467, 445, 2314, 281, 589, 562, 428, 2281, 307, 43586, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15020479722456498, "compression_ratio": 1.7443946188340806, "no_speech_prob": 1.3845158719050232e-05}, {"id": 1257, "seek": 364476, "start": 3648.28, "end": 3651.0, "text": " And the bad news about this loss function", "tokens": [50364, 4470, 11, 498, 291, 528, 13, 50400, 50540, 400, 264, 1578, 2583, 466, 341, 4470, 2445, 50676, 50676, 307, 300, 309, 1177, 380, 362, 257, 10270, 13, 50744, 50744, 407, 309, 1177, 380, 5586, 300, 264, 2281, 295, 264, 18424, 6338, 50940, 50940, 307, 4833, 11, 20792, 4833, 11, 813, 264, 2281, 295, 264, 665, 1867, 13, 51198, 51198, 467, 1062, 445, 15584, 13, 51252, 51252, 467, 1062, 445, 652, 633, 2281, 1958, 420, 264, 912, 13, 51470, 51470, 2264, 30, 51548, 51548, 407, 309, 311, 406, 257, 665, 4470, 2445, 281, 764, 13, 51664, 51664, 467, 445, 2314, 281, 589, 562, 428, 2281, 307, 43586, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15020479722456498, "compression_ratio": 1.7443946188340806, "no_speech_prob": 1.3845158719050232e-05}, {"id": 1258, "seek": 364476, "start": 3651.0, "end": 3652.36, "text": " is that it doesn't have a margin.", "tokens": [50364, 4470, 11, 498, 291, 528, 13, 50400, 50540, 400, 264, 1578, 2583, 466, 341, 4470, 2445, 50676, 50676, 307, 300, 309, 1177, 380, 362, 257, 10270, 13, 50744, 50744, 407, 309, 1177, 380, 5586, 300, 264, 2281, 295, 264, 18424, 6338, 50940, 50940, 307, 4833, 11, 20792, 4833, 11, 813, 264, 2281, 295, 264, 665, 1867, 13, 51198, 51198, 467, 1062, 445, 15584, 13, 51252, 51252, 467, 1062, 445, 652, 633, 2281, 1958, 420, 264, 912, 13, 51470, 51470, 2264, 30, 51548, 51548, 407, 309, 311, 406, 257, 665, 4470, 2445, 281, 764, 13, 51664, 51664, 467, 445, 2314, 281, 589, 562, 428, 2281, 307, 43586, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15020479722456498, "compression_ratio": 1.7443946188340806, "no_speech_prob": 1.3845158719050232e-05}, {"id": 1259, "seek": 364476, "start": 3652.36, "end": 3656.28, "text": " So it doesn't ensure that the energy of the incorrect answers", "tokens": [50364, 4470, 11, 498, 291, 528, 13, 50400, 50540, 400, 264, 1578, 2583, 466, 341, 4470, 2445, 50676, 50676, 307, 300, 309, 1177, 380, 362, 257, 10270, 13, 50744, 50744, 407, 309, 1177, 380, 5586, 300, 264, 2281, 295, 264, 18424, 6338, 50940, 50940, 307, 4833, 11, 20792, 4833, 11, 813, 264, 2281, 295, 264, 665, 1867, 13, 51198, 51198, 467, 1062, 445, 15584, 13, 51252, 51252, 467, 1062, 445, 652, 633, 2281, 1958, 420, 264, 912, 13, 51470, 51470, 2264, 30, 51548, 51548, 407, 309, 311, 406, 257, 665, 4470, 2445, 281, 764, 13, 51664, 51664, 467, 445, 2314, 281, 589, 562, 428, 2281, 307, 43586, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15020479722456498, "compression_ratio": 1.7443946188340806, "no_speech_prob": 1.3845158719050232e-05}, {"id": 1260, "seek": 364476, "start": 3656.28, "end": 3661.44, "text": " is larger, strictly larger, than the energy of the good answer.", "tokens": [50364, 4470, 11, 498, 291, 528, 13, 50400, 50540, 400, 264, 1578, 2583, 466, 341, 4470, 2445, 50676, 50676, 307, 300, 309, 1177, 380, 362, 257, 10270, 13, 50744, 50744, 407, 309, 1177, 380, 5586, 300, 264, 2281, 295, 264, 18424, 6338, 50940, 50940, 307, 4833, 11, 20792, 4833, 11, 813, 264, 2281, 295, 264, 665, 1867, 13, 51198, 51198, 467, 1062, 445, 15584, 13, 51252, 51252, 467, 1062, 445, 652, 633, 2281, 1958, 420, 264, 912, 13, 51470, 51470, 2264, 30, 51548, 51548, 407, 309, 311, 406, 257, 665, 4470, 2445, 281, 764, 13, 51664, 51664, 467, 445, 2314, 281, 589, 562, 428, 2281, 307, 43586, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15020479722456498, "compression_ratio": 1.7443946188340806, "no_speech_prob": 1.3845158719050232e-05}, {"id": 1261, "seek": 364476, "start": 3661.44, "end": 3662.5200000000004, "text": " It might just collapse.", "tokens": [50364, 4470, 11, 498, 291, 528, 13, 50400, 50540, 400, 264, 1578, 2583, 466, 341, 4470, 2445, 50676, 50676, 307, 300, 309, 1177, 380, 362, 257, 10270, 13, 50744, 50744, 407, 309, 1177, 380, 5586, 300, 264, 2281, 295, 264, 18424, 6338, 50940, 50940, 307, 4833, 11, 20792, 4833, 11, 813, 264, 2281, 295, 264, 665, 1867, 13, 51198, 51198, 467, 1062, 445, 15584, 13, 51252, 51252, 467, 1062, 445, 652, 633, 2281, 1958, 420, 264, 912, 13, 51470, 51470, 2264, 30, 51548, 51548, 407, 309, 311, 406, 257, 665, 4470, 2445, 281, 764, 13, 51664, 51664, 467, 445, 2314, 281, 589, 562, 428, 2281, 307, 43586, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15020479722456498, "compression_ratio": 1.7443946188340806, "no_speech_prob": 1.3845158719050232e-05}, {"id": 1262, "seek": 364476, "start": 3662.5200000000004, "end": 3666.88, "text": " It might just make every energy 0 or the same.", "tokens": [50364, 4470, 11, 498, 291, 528, 13, 50400, 50540, 400, 264, 1578, 2583, 466, 341, 4470, 2445, 50676, 50676, 307, 300, 309, 1177, 380, 362, 257, 10270, 13, 50744, 50744, 407, 309, 1177, 380, 5586, 300, 264, 2281, 295, 264, 18424, 6338, 50940, 50940, 307, 4833, 11, 20792, 4833, 11, 813, 264, 2281, 295, 264, 665, 1867, 13, 51198, 51198, 467, 1062, 445, 15584, 13, 51252, 51252, 467, 1062, 445, 652, 633, 2281, 1958, 420, 264, 912, 13, 51470, 51470, 2264, 30, 51548, 51548, 407, 309, 311, 406, 257, 665, 4470, 2445, 281, 764, 13, 51664, 51664, 467, 445, 2314, 281, 589, 562, 428, 2281, 307, 43586, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15020479722456498, "compression_ratio": 1.7443946188340806, "no_speech_prob": 1.3845158719050232e-05}, {"id": 1263, "seek": 364476, "start": 3666.88, "end": 3668.44, "text": " OK?", "tokens": [50364, 4470, 11, 498, 291, 528, 13, 50400, 50540, 400, 264, 1578, 2583, 466, 341, 4470, 2445, 50676, 50676, 307, 300, 309, 1177, 380, 362, 257, 10270, 13, 50744, 50744, 407, 309, 1177, 380, 5586, 300, 264, 2281, 295, 264, 18424, 6338, 50940, 50940, 307, 4833, 11, 20792, 4833, 11, 813, 264, 2281, 295, 264, 665, 1867, 13, 51198, 51198, 467, 1062, 445, 15584, 13, 51252, 51252, 467, 1062, 445, 652, 633, 2281, 1958, 420, 264, 912, 13, 51470, 51470, 2264, 30, 51548, 51548, 407, 309, 311, 406, 257, 665, 4470, 2445, 281, 764, 13, 51664, 51664, 467, 445, 2314, 281, 589, 562, 428, 2281, 307, 43586, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15020479722456498, "compression_ratio": 1.7443946188340806, "no_speech_prob": 1.3845158719050232e-05}, {"id": 1264, "seek": 364476, "start": 3668.44, "end": 3670.76, "text": " So it's not a good loss function to use.", "tokens": [50364, 4470, 11, 498, 291, 528, 13, 50400, 50540, 400, 264, 1578, 2583, 466, 341, 4470, 2445, 50676, 50676, 307, 300, 309, 1177, 380, 362, 257, 10270, 13, 50744, 50744, 407, 309, 1177, 380, 5586, 300, 264, 2281, 295, 264, 18424, 6338, 50940, 50940, 307, 4833, 11, 20792, 4833, 11, 813, 264, 2281, 295, 264, 665, 1867, 13, 51198, 51198, 467, 1062, 445, 15584, 13, 51252, 51252, 467, 1062, 445, 652, 633, 2281, 1958, 420, 264, 912, 13, 51470, 51470, 2264, 30, 51548, 51548, 407, 309, 311, 406, 257, 665, 4470, 2445, 281, 764, 13, 51664, 51664, 467, 445, 2314, 281, 589, 562, 428, 2281, 307, 43586, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15020479722456498, "compression_ratio": 1.7443946188340806, "no_speech_prob": 1.3845158719050232e-05}, {"id": 1265, "seek": 364476, "start": 3670.76, "end": 3673.2000000000003, "text": " It just happens to work when your energy is linearly", "tokens": [50364, 4470, 11, 498, 291, 528, 13, 50400, 50540, 400, 264, 1578, 2583, 466, 341, 4470, 2445, 50676, 50676, 307, 300, 309, 1177, 380, 362, 257, 10270, 13, 50744, 50744, 407, 309, 1177, 380, 5586, 300, 264, 2281, 295, 264, 18424, 6338, 50940, 50940, 307, 4833, 11, 20792, 4833, 11, 813, 264, 2281, 295, 264, 665, 1867, 13, 51198, 51198, 467, 1062, 445, 15584, 13, 51252, 51252, 467, 1062, 445, 652, 633, 2281, 1958, 420, 264, 912, 13, 51470, 51470, 2264, 30, 51548, 51548, 407, 309, 311, 406, 257, 665, 4470, 2445, 281, 764, 13, 51664, 51664, 467, 445, 2314, 281, 589, 562, 428, 2281, 307, 43586, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15020479722456498, "compression_ratio": 1.7443946188340806, "no_speech_prob": 1.3845158719050232e-05}, {"id": 1266, "seek": 367320, "start": 3673.2, "end": 3677.9199999999996, "text": " parameterizing w. But in the general case, it doesn't work.", "tokens": [50364, 13075, 3319, 261, 13, 583, 294, 264, 2674, 1389, 11, 309, 1177, 380, 589, 13, 50600, 50600, 407, 291, 434, 709, 1101, 766, 1228, 746, 411, 341, 11, 257, 28822, 13, 50818, 50818, 583, 294, 264, 1389, 295, 257, 28822, 11, 437, 291, 643, 281, 362, 510, 50964, 50964, 307, 341, 288, 2159, 11, 597, 307, 264, 2281, 295, 264, 881, 51124, 51124, 766, 2029, 18424, 1867, 13, 51242, 51242, 407, 1936, 11, 294, 264, 1150, 5574, 11, 51406, 51406, 382, 28327, 78, 390, 12166, 484, 11, 2602, 295, 8867, 264, 3100, 51688, 51688, 365, 264, 12437, 2281, 11, 264, 1867, 365, 264, 12437, 2281, 11, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0982562932101163, "compression_ratio": 1.7327586206896552, "no_speech_prob": 8.012990292627364e-06}, {"id": 1267, "seek": 367320, "start": 3677.9199999999996, "end": 3682.2799999999997, "text": " So you're much better off using something like this, a hinge.", "tokens": [50364, 13075, 3319, 261, 13, 583, 294, 264, 2674, 1389, 11, 309, 1177, 380, 589, 13, 50600, 50600, 407, 291, 434, 709, 1101, 766, 1228, 746, 411, 341, 11, 257, 28822, 13, 50818, 50818, 583, 294, 264, 1389, 295, 257, 28822, 11, 437, 291, 643, 281, 362, 510, 50964, 50964, 307, 341, 288, 2159, 11, 597, 307, 264, 2281, 295, 264, 881, 51124, 51124, 766, 2029, 18424, 1867, 13, 51242, 51242, 407, 1936, 11, 294, 264, 1150, 5574, 11, 51406, 51406, 382, 28327, 78, 390, 12166, 484, 11, 2602, 295, 8867, 264, 3100, 51688, 51688, 365, 264, 12437, 2281, 11, 264, 1867, 365, 264, 12437, 2281, 11, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0982562932101163, "compression_ratio": 1.7327586206896552, "no_speech_prob": 8.012990292627364e-06}, {"id": 1268, "seek": 367320, "start": 3682.2799999999997, "end": 3685.2, "text": " But in the case of a hinge, what you need to have here", "tokens": [50364, 13075, 3319, 261, 13, 583, 294, 264, 2674, 1389, 11, 309, 1177, 380, 589, 13, 50600, 50600, 407, 291, 434, 709, 1101, 766, 1228, 746, 411, 341, 11, 257, 28822, 13, 50818, 50818, 583, 294, 264, 1389, 295, 257, 28822, 11, 437, 291, 643, 281, 362, 510, 50964, 50964, 307, 341, 288, 2159, 11, 597, 307, 264, 2281, 295, 264, 881, 51124, 51124, 766, 2029, 18424, 1867, 13, 51242, 51242, 407, 1936, 11, 294, 264, 1150, 5574, 11, 51406, 51406, 382, 28327, 78, 390, 12166, 484, 11, 2602, 295, 8867, 264, 3100, 51688, 51688, 365, 264, 12437, 2281, 11, 264, 1867, 365, 264, 12437, 2281, 11, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0982562932101163, "compression_ratio": 1.7327586206896552, "no_speech_prob": 8.012990292627364e-06}, {"id": 1269, "seek": 367320, "start": 3685.2, "end": 3688.3999999999996, "text": " is this y bar, which is the energy of the most", "tokens": [50364, 13075, 3319, 261, 13, 583, 294, 264, 2674, 1389, 11, 309, 1177, 380, 589, 13, 50600, 50600, 407, 291, 434, 709, 1101, 766, 1228, 746, 411, 341, 11, 257, 28822, 13, 50818, 50818, 583, 294, 264, 1389, 295, 257, 28822, 11, 437, 291, 643, 281, 362, 510, 50964, 50964, 307, 341, 288, 2159, 11, 597, 307, 264, 2281, 295, 264, 881, 51124, 51124, 766, 2029, 18424, 1867, 13, 51242, 51242, 407, 1936, 11, 294, 264, 1150, 5574, 11, 51406, 51406, 382, 28327, 78, 390, 12166, 484, 11, 2602, 295, 8867, 264, 3100, 51688, 51688, 365, 264, 12437, 2281, 11, 264, 1867, 365, 264, 12437, 2281, 11, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0982562932101163, "compression_ratio": 1.7327586206896552, "no_speech_prob": 8.012990292627364e-06}, {"id": 1270, "seek": 367320, "start": 3688.3999999999996, "end": 3690.7599999999998, "text": " offending incorrect answer.", "tokens": [50364, 13075, 3319, 261, 13, 583, 294, 264, 2674, 1389, 11, 309, 1177, 380, 589, 13, 50600, 50600, 407, 291, 434, 709, 1101, 766, 1228, 746, 411, 341, 11, 257, 28822, 13, 50818, 50818, 583, 294, 264, 1389, 295, 257, 28822, 11, 437, 291, 643, 281, 362, 510, 50964, 50964, 307, 341, 288, 2159, 11, 597, 307, 264, 2281, 295, 264, 881, 51124, 51124, 766, 2029, 18424, 1867, 13, 51242, 51242, 407, 1936, 11, 294, 264, 1150, 5574, 11, 51406, 51406, 382, 28327, 78, 390, 12166, 484, 11, 2602, 295, 8867, 264, 3100, 51688, 51688, 365, 264, 12437, 2281, 11, 264, 1867, 365, 264, 12437, 2281, 11, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0982562932101163, "compression_ratio": 1.7327586206896552, "no_speech_prob": 8.012990292627364e-06}, {"id": 1271, "seek": 367320, "start": 3690.7599999999998, "end": 3694.04, "text": " So basically, in the second phase,", "tokens": [50364, 13075, 3319, 261, 13, 583, 294, 264, 2674, 1389, 11, 309, 1177, 380, 589, 13, 50600, 50600, 407, 291, 434, 709, 1101, 766, 1228, 746, 411, 341, 11, 257, 28822, 13, 50818, 50818, 583, 294, 264, 1389, 295, 257, 28822, 11, 437, 291, 643, 281, 362, 510, 50964, 50964, 307, 341, 288, 2159, 11, 597, 307, 264, 2281, 295, 264, 881, 51124, 51124, 766, 2029, 18424, 1867, 13, 51242, 51242, 407, 1936, 11, 294, 264, 1150, 5574, 11, 51406, 51406, 382, 28327, 78, 390, 12166, 484, 11, 2602, 295, 8867, 264, 3100, 51688, 51688, 365, 264, 12437, 2281, 11, 264, 1867, 365, 264, 12437, 2281, 11, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0982562932101163, "compression_ratio": 1.7327586206896552, "no_speech_prob": 8.012990292627364e-06}, {"id": 1272, "seek": 367320, "start": 3694.04, "end": 3699.68, "text": " as Alfredo was pointing out, instead of picking the path", "tokens": [50364, 13075, 3319, 261, 13, 583, 294, 264, 2674, 1389, 11, 309, 1177, 380, 589, 13, 50600, 50600, 407, 291, 434, 709, 1101, 766, 1228, 746, 411, 341, 11, 257, 28822, 13, 50818, 50818, 583, 294, 264, 1389, 295, 257, 28822, 11, 437, 291, 643, 281, 362, 510, 50964, 50964, 307, 341, 288, 2159, 11, 597, 307, 264, 2281, 295, 264, 881, 51124, 51124, 766, 2029, 18424, 1867, 13, 51242, 51242, 407, 1936, 11, 294, 264, 1150, 5574, 11, 51406, 51406, 382, 28327, 78, 390, 12166, 484, 11, 2602, 295, 8867, 264, 3100, 51688, 51688, 365, 264, 12437, 2281, 11, 264, 1867, 365, 264, 12437, 2281, 11, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0982562932101163, "compression_ratio": 1.7327586206896552, "no_speech_prob": 8.012990292627364e-06}, {"id": 1273, "seek": 367320, "start": 3699.68, "end": 3701.96, "text": " with the lowest energy, the answer with the lowest energy,", "tokens": [50364, 13075, 3319, 261, 13, 583, 294, 264, 2674, 1389, 11, 309, 1177, 380, 589, 13, 50600, 50600, 407, 291, 434, 709, 1101, 766, 1228, 746, 411, 341, 11, 257, 28822, 13, 50818, 50818, 583, 294, 264, 1389, 295, 257, 28822, 11, 437, 291, 643, 281, 362, 510, 50964, 50964, 307, 341, 288, 2159, 11, 597, 307, 264, 2281, 295, 264, 881, 51124, 51124, 766, 2029, 18424, 1867, 13, 51242, 51242, 407, 1936, 11, 294, 264, 1150, 5574, 11, 51406, 51406, 382, 28327, 78, 390, 12166, 484, 11, 2602, 295, 8867, 264, 3100, 51688, 51688, 365, 264, 12437, 2281, 11, 264, 1867, 365, 264, 12437, 2281, 11, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.0982562932101163, "compression_ratio": 1.7327586206896552, "no_speech_prob": 8.012990292627364e-06}, {"id": 1274, "seek": 370196, "start": 3701.96, "end": 3704.7200000000003, "text": " you constrain the system to pick a wrong answer.", "tokens": [50364, 291, 1817, 7146, 264, 1185, 281, 1888, 257, 2085, 1867, 13, 50502, 50502, 400, 550, 3654, 439, 295, 729, 11, 1888, 264, 472, 50582, 50582, 365, 264, 12437, 2281, 13, 50666, 50666, 400, 550, 291, 747, 264, 2649, 1296, 729, 732, 25737, 11, 50786, 50786, 370, 2281, 295, 3006, 1867, 11, 2281, 295, 881, 766, 2029, 50906, 50906, 18424, 1867, 11, 14722, 264, 2649, 1296, 552, 11, 51064, 51064, 293, 5452, 341, 666, 257, 28822, 370, 300, 291, 51226, 51226, 528, 341, 2281, 281, 312, 3126, 813, 300, 2281, 538, 412, 1935, 275, 13, 51482, 51482, 2264, 30, 51618, 51618, 400, 341, 307, 264, 733, 295, 10024, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13514418215365023, "compression_ratio": 1.8508771929824561, "no_speech_prob": 1.2602836250152905e-05}, {"id": 1275, "seek": 370196, "start": 3704.7200000000003, "end": 3706.32, "text": " And then among all of those, pick the one", "tokens": [50364, 291, 1817, 7146, 264, 1185, 281, 1888, 257, 2085, 1867, 13, 50502, 50502, 400, 550, 3654, 439, 295, 729, 11, 1888, 264, 472, 50582, 50582, 365, 264, 12437, 2281, 13, 50666, 50666, 400, 550, 291, 747, 264, 2649, 1296, 729, 732, 25737, 11, 50786, 50786, 370, 2281, 295, 3006, 1867, 11, 2281, 295, 881, 766, 2029, 50906, 50906, 18424, 1867, 11, 14722, 264, 2649, 1296, 552, 11, 51064, 51064, 293, 5452, 341, 666, 257, 28822, 370, 300, 291, 51226, 51226, 528, 341, 2281, 281, 312, 3126, 813, 300, 2281, 538, 412, 1935, 275, 13, 51482, 51482, 2264, 30, 51618, 51618, 400, 341, 307, 264, 733, 295, 10024, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13514418215365023, "compression_ratio": 1.8508771929824561, "no_speech_prob": 1.2602836250152905e-05}, {"id": 1276, "seek": 370196, "start": 3706.32, "end": 3708.0, "text": " with the lowest energy.", "tokens": [50364, 291, 1817, 7146, 264, 1185, 281, 1888, 257, 2085, 1867, 13, 50502, 50502, 400, 550, 3654, 439, 295, 729, 11, 1888, 264, 472, 50582, 50582, 365, 264, 12437, 2281, 13, 50666, 50666, 400, 550, 291, 747, 264, 2649, 1296, 729, 732, 25737, 11, 50786, 50786, 370, 2281, 295, 3006, 1867, 11, 2281, 295, 881, 766, 2029, 50906, 50906, 18424, 1867, 11, 14722, 264, 2649, 1296, 552, 11, 51064, 51064, 293, 5452, 341, 666, 257, 28822, 370, 300, 291, 51226, 51226, 528, 341, 2281, 281, 312, 3126, 813, 300, 2281, 538, 412, 1935, 275, 13, 51482, 51482, 2264, 30, 51618, 51618, 400, 341, 307, 264, 733, 295, 10024, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13514418215365023, "compression_ratio": 1.8508771929824561, "no_speech_prob": 1.2602836250152905e-05}, {"id": 1277, "seek": 370196, "start": 3708.0, "end": 3710.4, "text": " And then you take the difference between those two energies,", "tokens": [50364, 291, 1817, 7146, 264, 1185, 281, 1888, 257, 2085, 1867, 13, 50502, 50502, 400, 550, 3654, 439, 295, 729, 11, 1888, 264, 472, 50582, 50582, 365, 264, 12437, 2281, 13, 50666, 50666, 400, 550, 291, 747, 264, 2649, 1296, 729, 732, 25737, 11, 50786, 50786, 370, 2281, 295, 3006, 1867, 11, 2281, 295, 881, 766, 2029, 50906, 50906, 18424, 1867, 11, 14722, 264, 2649, 1296, 552, 11, 51064, 51064, 293, 5452, 341, 666, 257, 28822, 370, 300, 291, 51226, 51226, 528, 341, 2281, 281, 312, 3126, 813, 300, 2281, 538, 412, 1935, 275, 13, 51482, 51482, 2264, 30, 51618, 51618, 400, 341, 307, 264, 733, 295, 10024, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13514418215365023, "compression_ratio": 1.8508771929824561, "no_speech_prob": 1.2602836250152905e-05}, {"id": 1278, "seek": 370196, "start": 3710.4, "end": 3712.8, "text": " so energy of correct answer, energy of most offending", "tokens": [50364, 291, 1817, 7146, 264, 1185, 281, 1888, 257, 2085, 1867, 13, 50502, 50502, 400, 550, 3654, 439, 295, 729, 11, 1888, 264, 472, 50582, 50582, 365, 264, 12437, 2281, 13, 50666, 50666, 400, 550, 291, 747, 264, 2649, 1296, 729, 732, 25737, 11, 50786, 50786, 370, 2281, 295, 3006, 1867, 11, 2281, 295, 881, 766, 2029, 50906, 50906, 18424, 1867, 11, 14722, 264, 2649, 1296, 552, 11, 51064, 51064, 293, 5452, 341, 666, 257, 28822, 370, 300, 291, 51226, 51226, 528, 341, 2281, 281, 312, 3126, 813, 300, 2281, 538, 412, 1935, 275, 13, 51482, 51482, 2264, 30, 51618, 51618, 400, 341, 307, 264, 733, 295, 10024, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13514418215365023, "compression_ratio": 1.8508771929824561, "no_speech_prob": 1.2602836250152905e-05}, {"id": 1279, "seek": 370196, "start": 3712.8, "end": 3715.96, "text": " incorrect answer, compute the difference between them,", "tokens": [50364, 291, 1817, 7146, 264, 1185, 281, 1888, 257, 2085, 1867, 13, 50502, 50502, 400, 550, 3654, 439, 295, 729, 11, 1888, 264, 472, 50582, 50582, 365, 264, 12437, 2281, 13, 50666, 50666, 400, 550, 291, 747, 264, 2649, 1296, 729, 732, 25737, 11, 50786, 50786, 370, 2281, 295, 3006, 1867, 11, 2281, 295, 881, 766, 2029, 50906, 50906, 18424, 1867, 11, 14722, 264, 2649, 1296, 552, 11, 51064, 51064, 293, 5452, 341, 666, 257, 28822, 370, 300, 291, 51226, 51226, 528, 341, 2281, 281, 312, 3126, 813, 300, 2281, 538, 412, 1935, 275, 13, 51482, 51482, 2264, 30, 51618, 51618, 400, 341, 307, 264, 733, 295, 10024, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13514418215365023, "compression_ratio": 1.8508771929824561, "no_speech_prob": 1.2602836250152905e-05}, {"id": 1280, "seek": 370196, "start": 3715.96, "end": 3719.2, "text": " and plug this into a hinge so that you", "tokens": [50364, 291, 1817, 7146, 264, 1185, 281, 1888, 257, 2085, 1867, 13, 50502, 50502, 400, 550, 3654, 439, 295, 729, 11, 1888, 264, 472, 50582, 50582, 365, 264, 12437, 2281, 13, 50666, 50666, 400, 550, 291, 747, 264, 2649, 1296, 729, 732, 25737, 11, 50786, 50786, 370, 2281, 295, 3006, 1867, 11, 2281, 295, 881, 766, 2029, 50906, 50906, 18424, 1867, 11, 14722, 264, 2649, 1296, 552, 11, 51064, 51064, 293, 5452, 341, 666, 257, 28822, 370, 300, 291, 51226, 51226, 528, 341, 2281, 281, 312, 3126, 813, 300, 2281, 538, 412, 1935, 275, 13, 51482, 51482, 2264, 30, 51618, 51618, 400, 341, 307, 264, 733, 295, 10024, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13514418215365023, "compression_ratio": 1.8508771929824561, "no_speech_prob": 1.2602836250152905e-05}, {"id": 1281, "seek": 370196, "start": 3719.2, "end": 3724.32, "text": " want this energy to be lower than that energy by at least m.", "tokens": [50364, 291, 1817, 7146, 264, 1185, 281, 1888, 257, 2085, 1867, 13, 50502, 50502, 400, 550, 3654, 439, 295, 729, 11, 1888, 264, 472, 50582, 50582, 365, 264, 12437, 2281, 13, 50666, 50666, 400, 550, 291, 747, 264, 2649, 1296, 729, 732, 25737, 11, 50786, 50786, 370, 2281, 295, 3006, 1867, 11, 2281, 295, 881, 766, 2029, 50906, 50906, 18424, 1867, 11, 14722, 264, 2649, 1296, 552, 11, 51064, 51064, 293, 5452, 341, 666, 257, 28822, 370, 300, 291, 51226, 51226, 528, 341, 2281, 281, 312, 3126, 813, 300, 2281, 538, 412, 1935, 275, 13, 51482, 51482, 2264, 30, 51618, 51618, 400, 341, 307, 264, 733, 295, 10024, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13514418215365023, "compression_ratio": 1.8508771929824561, "no_speech_prob": 1.2602836250152905e-05}, {"id": 1282, "seek": 370196, "start": 3724.32, "end": 3727.04, "text": " OK?", "tokens": [50364, 291, 1817, 7146, 264, 1185, 281, 1888, 257, 2085, 1867, 13, 50502, 50502, 400, 550, 3654, 439, 295, 729, 11, 1888, 264, 472, 50582, 50582, 365, 264, 12437, 2281, 13, 50666, 50666, 400, 550, 291, 747, 264, 2649, 1296, 729, 732, 25737, 11, 50786, 50786, 370, 2281, 295, 3006, 1867, 11, 2281, 295, 881, 766, 2029, 50906, 50906, 18424, 1867, 11, 14722, 264, 2649, 1296, 552, 11, 51064, 51064, 293, 5452, 341, 666, 257, 28822, 370, 300, 291, 51226, 51226, 528, 341, 2281, 281, 312, 3126, 813, 300, 2281, 538, 412, 1935, 275, 13, 51482, 51482, 2264, 30, 51618, 51618, 400, 341, 307, 264, 733, 295, 10024, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13514418215365023, "compression_ratio": 1.8508771929824561, "no_speech_prob": 1.2602836250152905e-05}, {"id": 1283, "seek": 370196, "start": 3727.04, "end": 3729.7200000000003, "text": " And this is the kind of objective", "tokens": [50364, 291, 1817, 7146, 264, 1185, 281, 1888, 257, 2085, 1867, 13, 50502, 50502, 400, 550, 3654, 439, 295, 729, 11, 1888, 264, 472, 50582, 50582, 365, 264, 12437, 2281, 13, 50666, 50666, 400, 550, 291, 747, 264, 2649, 1296, 729, 732, 25737, 11, 50786, 50786, 370, 2281, 295, 3006, 1867, 11, 2281, 295, 881, 766, 2029, 50906, 50906, 18424, 1867, 11, 14722, 264, 2649, 1296, 552, 11, 51064, 51064, 293, 5452, 341, 666, 257, 28822, 370, 300, 291, 51226, 51226, 528, 341, 2281, 281, 312, 3126, 813, 300, 2281, 538, 412, 1935, 275, 13, 51482, 51482, 2264, 30, 51618, 51618, 400, 341, 307, 264, 733, 295, 10024, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13514418215365023, "compression_ratio": 1.8508771929824561, "no_speech_prob": 1.2602836250152905e-05}, {"id": 1284, "seek": 372972, "start": 3729.72, "end": 3734.64, "text": " here that Driancu and Boutou used.", "tokens": [50364, 510, 300, 2491, 952, 12032, 293, 363, 346, 263, 1143, 13, 50610, 50610, 407, 309, 1542, 588, 2531, 13, 50688, 50818, 639, 307, 746, 1219, 426, 4969, 300, 561, 294, 6218, 11150, 51058, 51058, 5258, 13, 51136, 51136, 639, 1542, 257, 857, 411, 257, 4556, 3280, 327, 13, 51220, 51220, 407, 1936, 11, 309, 311, 257, 4556, 3280, 327, 2445, 13, 51304, 51304, 509, 747, 264, 2649, 1296, 264, 2281, 51370, 51370, 295, 264, 3006, 1867, 293, 264, 2281, 295, 18424, 6338, 11, 51524, 51524, 293, 291, 5452, 552, 666, 257, 4556, 3280, 327, 13, 51624, 51624, 467, 311, 502, 670, 502, 1804, 21510, 3175, 12288, 11, 12288, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.19567567268304065, "compression_ratio": 1.6208333333333333, "no_speech_prob": 1.1839657418022398e-05}, {"id": 1285, "seek": 372972, "start": 3734.64, "end": 3736.2, "text": " So it looks very similar.", "tokens": [50364, 510, 300, 2491, 952, 12032, 293, 363, 346, 263, 1143, 13, 50610, 50610, 407, 309, 1542, 588, 2531, 13, 50688, 50818, 639, 307, 746, 1219, 426, 4969, 300, 561, 294, 6218, 11150, 51058, 51058, 5258, 13, 51136, 51136, 639, 1542, 257, 857, 411, 257, 4556, 3280, 327, 13, 51220, 51220, 407, 1936, 11, 309, 311, 257, 4556, 3280, 327, 2445, 13, 51304, 51304, 509, 747, 264, 2649, 1296, 264, 2281, 51370, 51370, 295, 264, 3006, 1867, 293, 264, 2281, 295, 18424, 6338, 11, 51524, 51524, 293, 291, 5452, 552, 666, 257, 4556, 3280, 327, 13, 51624, 51624, 467, 311, 502, 670, 502, 1804, 21510, 3175, 12288, 11, 12288, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.19567567268304065, "compression_ratio": 1.6208333333333333, "no_speech_prob": 1.1839657418022398e-05}, {"id": 1286, "seek": 372972, "start": 3738.7999999999997, "end": 3743.6, "text": " This is something called NCE that people in speech recognition", "tokens": [50364, 510, 300, 2491, 952, 12032, 293, 363, 346, 263, 1143, 13, 50610, 50610, 407, 309, 1542, 588, 2531, 13, 50688, 50818, 639, 307, 746, 1219, 426, 4969, 300, 561, 294, 6218, 11150, 51058, 51058, 5258, 13, 51136, 51136, 639, 1542, 257, 857, 411, 257, 4556, 3280, 327, 13, 51220, 51220, 407, 1936, 11, 309, 311, 257, 4556, 3280, 327, 2445, 13, 51304, 51304, 509, 747, 264, 2649, 1296, 264, 2281, 51370, 51370, 295, 264, 3006, 1867, 293, 264, 2281, 295, 18424, 6338, 11, 51524, 51524, 293, 291, 5452, 552, 666, 257, 4556, 3280, 327, 13, 51624, 51624, 467, 311, 502, 670, 502, 1804, 21510, 3175, 12288, 11, 12288, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.19567567268304065, "compression_ratio": 1.6208333333333333, "no_speech_prob": 1.1839657418022398e-05}, {"id": 1287, "seek": 372972, "start": 3743.6, "end": 3745.16, "text": " produce.", "tokens": [50364, 510, 300, 2491, 952, 12032, 293, 363, 346, 263, 1143, 13, 50610, 50610, 407, 309, 1542, 588, 2531, 13, 50688, 50818, 639, 307, 746, 1219, 426, 4969, 300, 561, 294, 6218, 11150, 51058, 51058, 5258, 13, 51136, 51136, 639, 1542, 257, 857, 411, 257, 4556, 3280, 327, 13, 51220, 51220, 407, 1936, 11, 309, 311, 257, 4556, 3280, 327, 2445, 13, 51304, 51304, 509, 747, 264, 2649, 1296, 264, 2281, 51370, 51370, 295, 264, 3006, 1867, 293, 264, 2281, 295, 18424, 6338, 11, 51524, 51524, 293, 291, 5452, 552, 666, 257, 4556, 3280, 327, 13, 51624, 51624, 467, 311, 502, 670, 502, 1804, 21510, 3175, 12288, 11, 12288, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.19567567268304065, "compression_ratio": 1.6208333333333333, "no_speech_prob": 1.1839657418022398e-05}, {"id": 1288, "seek": 372972, "start": 3745.16, "end": 3746.8399999999997, "text": " This looks a bit like a sigmoid.", "tokens": [50364, 510, 300, 2491, 952, 12032, 293, 363, 346, 263, 1143, 13, 50610, 50610, 407, 309, 1542, 588, 2531, 13, 50688, 50818, 639, 307, 746, 1219, 426, 4969, 300, 561, 294, 6218, 11150, 51058, 51058, 5258, 13, 51136, 51136, 639, 1542, 257, 857, 411, 257, 4556, 3280, 327, 13, 51220, 51220, 407, 1936, 11, 309, 311, 257, 4556, 3280, 327, 2445, 13, 51304, 51304, 509, 747, 264, 2649, 1296, 264, 2281, 51370, 51370, 295, 264, 3006, 1867, 293, 264, 2281, 295, 18424, 6338, 11, 51524, 51524, 293, 291, 5452, 552, 666, 257, 4556, 3280, 327, 13, 51624, 51624, 467, 311, 502, 670, 502, 1804, 21510, 3175, 12288, 11, 12288, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.19567567268304065, "compression_ratio": 1.6208333333333333, "no_speech_prob": 1.1839657418022398e-05}, {"id": 1289, "seek": 372972, "start": 3746.8399999999997, "end": 3748.52, "text": " So basically, it's a sigmoid function.", "tokens": [50364, 510, 300, 2491, 952, 12032, 293, 363, 346, 263, 1143, 13, 50610, 50610, 407, 309, 1542, 588, 2531, 13, 50688, 50818, 639, 307, 746, 1219, 426, 4969, 300, 561, 294, 6218, 11150, 51058, 51058, 5258, 13, 51136, 51136, 639, 1542, 257, 857, 411, 257, 4556, 3280, 327, 13, 51220, 51220, 407, 1936, 11, 309, 311, 257, 4556, 3280, 327, 2445, 13, 51304, 51304, 509, 747, 264, 2649, 1296, 264, 2281, 51370, 51370, 295, 264, 3006, 1867, 293, 264, 2281, 295, 18424, 6338, 11, 51524, 51524, 293, 291, 5452, 552, 666, 257, 4556, 3280, 327, 13, 51624, 51624, 467, 311, 502, 670, 502, 1804, 21510, 3175, 12288, 11, 12288, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.19567567268304065, "compression_ratio": 1.6208333333333333, "no_speech_prob": 1.1839657418022398e-05}, {"id": 1290, "seek": 372972, "start": 3748.52, "end": 3749.8399999999997, "text": " You take the difference between the energy", "tokens": [50364, 510, 300, 2491, 952, 12032, 293, 363, 346, 263, 1143, 13, 50610, 50610, 407, 309, 1542, 588, 2531, 13, 50688, 50818, 639, 307, 746, 1219, 426, 4969, 300, 561, 294, 6218, 11150, 51058, 51058, 5258, 13, 51136, 51136, 639, 1542, 257, 857, 411, 257, 4556, 3280, 327, 13, 51220, 51220, 407, 1936, 11, 309, 311, 257, 4556, 3280, 327, 2445, 13, 51304, 51304, 509, 747, 264, 2649, 1296, 264, 2281, 51370, 51370, 295, 264, 3006, 1867, 293, 264, 2281, 295, 18424, 6338, 11, 51524, 51524, 293, 291, 5452, 552, 666, 257, 4556, 3280, 327, 13, 51624, 51624, 467, 311, 502, 670, 502, 1804, 21510, 3175, 12288, 11, 12288, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.19567567268304065, "compression_ratio": 1.6208333333333333, "no_speech_prob": 1.1839657418022398e-05}, {"id": 1291, "seek": 372972, "start": 3749.8399999999997, "end": 3752.9199999999996, "text": " of the correct answer and the energy of incorrect answers,", "tokens": [50364, 510, 300, 2491, 952, 12032, 293, 363, 346, 263, 1143, 13, 50610, 50610, 407, 309, 1542, 588, 2531, 13, 50688, 50818, 639, 307, 746, 1219, 426, 4969, 300, 561, 294, 6218, 11150, 51058, 51058, 5258, 13, 51136, 51136, 639, 1542, 257, 857, 411, 257, 4556, 3280, 327, 13, 51220, 51220, 407, 1936, 11, 309, 311, 257, 4556, 3280, 327, 2445, 13, 51304, 51304, 509, 747, 264, 2649, 1296, 264, 2281, 51370, 51370, 295, 264, 3006, 1867, 293, 264, 2281, 295, 18424, 6338, 11, 51524, 51524, 293, 291, 5452, 552, 666, 257, 4556, 3280, 327, 13, 51624, 51624, 467, 311, 502, 670, 502, 1804, 21510, 3175, 12288, 11, 12288, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.19567567268304065, "compression_ratio": 1.6208333333333333, "no_speech_prob": 1.1839657418022398e-05}, {"id": 1292, "seek": 372972, "start": 3752.9199999999996, "end": 3754.9199999999996, "text": " and you plug them into a sigmoid.", "tokens": [50364, 510, 300, 2491, 952, 12032, 293, 363, 346, 263, 1143, 13, 50610, 50610, 407, 309, 1542, 588, 2531, 13, 50688, 50818, 639, 307, 746, 1219, 426, 4969, 300, 561, 294, 6218, 11150, 51058, 51058, 5258, 13, 51136, 51136, 639, 1542, 257, 857, 411, 257, 4556, 3280, 327, 13, 51220, 51220, 407, 1936, 11, 309, 311, 257, 4556, 3280, 327, 2445, 13, 51304, 51304, 509, 747, 264, 2649, 1296, 264, 2281, 51370, 51370, 295, 264, 3006, 1867, 293, 264, 2281, 295, 18424, 6338, 11, 51524, 51524, 293, 291, 5452, 552, 666, 257, 4556, 3280, 327, 13, 51624, 51624, 467, 311, 502, 670, 502, 1804, 21510, 3175, 12288, 11, 12288, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.19567567268304065, "compression_ratio": 1.6208333333333333, "no_speech_prob": 1.1839657418022398e-05}, {"id": 1293, "seek": 372972, "start": 3754.9199999999996, "end": 3757.64, "text": " It's 1 over 1 plus exponential minus blah, blah.", "tokens": [50364, 510, 300, 2491, 952, 12032, 293, 363, 346, 263, 1143, 13, 50610, 50610, 407, 309, 1542, 588, 2531, 13, 50688, 50818, 639, 307, 746, 1219, 426, 4969, 300, 561, 294, 6218, 11150, 51058, 51058, 5258, 13, 51136, 51136, 639, 1542, 257, 857, 411, 257, 4556, 3280, 327, 13, 51220, 51220, 407, 1936, 11, 309, 311, 257, 4556, 3280, 327, 2445, 13, 51304, 51304, 509, 747, 264, 2649, 1296, 264, 2281, 51370, 51370, 295, 264, 3006, 1867, 293, 264, 2281, 295, 18424, 6338, 11, 51524, 51524, 293, 291, 5452, 552, 666, 257, 4556, 3280, 327, 13, 51624, 51624, 467, 311, 502, 670, 502, 1804, 21510, 3175, 12288, 11, 12288, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.19567567268304065, "compression_ratio": 1.6208333333333333, "no_speech_prob": 1.1839657418022398e-05}, {"id": 1294, "seek": 375764, "start": 3757.64, "end": 3761.24, "text": " And so it basically wants to make that difference kind", "tokens": [50364, 400, 370, 309, 1936, 2738, 281, 652, 300, 2649, 733, 50544, 50544, 295, 1359, 11, 457, 550, 309, 1177, 380, 1127, 498, 309, 311, 886, 1359, 13, 50716, 50716, 400, 498, 309, 311, 886, 2416, 11, 309, 733, 295, 2709, 493, 13, 50800, 50926, 400, 550, 291, 362, 341, 307, 264, 3671, 22119, 4470, 13, 51090, 51090, 407, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 51208, 51208, 293, 550, 652, 264, 3565, 295, 264, 2408, 670, 439, 6338, 51384, 51384, 295, 308, 281, 264, 3175, 264, 2281, 295, 729, 6338, 2416, 13, 51656, 51656, 2264, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1779152926276712, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.2604939001903404e-05}, {"id": 1295, "seek": 375764, "start": 3761.24, "end": 3764.68, "text": " of small, but then it doesn't care if it's too small.", "tokens": [50364, 400, 370, 309, 1936, 2738, 281, 652, 300, 2649, 733, 50544, 50544, 295, 1359, 11, 457, 550, 309, 1177, 380, 1127, 498, 309, 311, 886, 1359, 13, 50716, 50716, 400, 498, 309, 311, 886, 2416, 11, 309, 733, 295, 2709, 493, 13, 50800, 50926, 400, 550, 291, 362, 341, 307, 264, 3671, 22119, 4470, 13, 51090, 51090, 407, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 51208, 51208, 293, 550, 652, 264, 3565, 295, 264, 2408, 670, 439, 6338, 51384, 51384, 295, 308, 281, 264, 3175, 264, 2281, 295, 729, 6338, 2416, 13, 51656, 51656, 2264, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1779152926276712, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.2604939001903404e-05}, {"id": 1296, "seek": 375764, "start": 3764.68, "end": 3766.3599999999997, "text": " And if it's too large, it kind of gives up.", "tokens": [50364, 400, 370, 309, 1936, 2738, 281, 652, 300, 2649, 733, 50544, 50544, 295, 1359, 11, 457, 550, 309, 1177, 380, 1127, 498, 309, 311, 886, 1359, 13, 50716, 50716, 400, 498, 309, 311, 886, 2416, 11, 309, 733, 295, 2709, 493, 13, 50800, 50926, 400, 550, 291, 362, 341, 307, 264, 3671, 22119, 4470, 13, 51090, 51090, 407, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 51208, 51208, 293, 550, 652, 264, 3565, 295, 264, 2408, 670, 439, 6338, 51384, 51384, 295, 308, 281, 264, 3175, 264, 2281, 295, 729, 6338, 2416, 13, 51656, 51656, 2264, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1779152926276712, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.2604939001903404e-05}, {"id": 1297, "seek": 375764, "start": 3768.8799999999997, "end": 3772.16, "text": " And then you have this is the negative likelihood loss.", "tokens": [50364, 400, 370, 309, 1936, 2738, 281, 652, 300, 2649, 733, 50544, 50544, 295, 1359, 11, 457, 550, 309, 1177, 380, 1127, 498, 309, 311, 886, 1359, 13, 50716, 50716, 400, 498, 309, 311, 886, 2416, 11, 309, 733, 295, 2709, 493, 13, 50800, 50926, 400, 550, 291, 362, 341, 307, 264, 3671, 22119, 4470, 13, 51090, 51090, 407, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 51208, 51208, 293, 550, 652, 264, 3565, 295, 264, 2408, 670, 439, 6338, 51384, 51384, 295, 308, 281, 264, 3175, 264, 2281, 295, 729, 6338, 2416, 13, 51656, 51656, 2264, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1779152926276712, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.2604939001903404e-05}, {"id": 1298, "seek": 375764, "start": 3772.16, "end": 3774.52, "text": " So make the energy of the correct answer small,", "tokens": [50364, 400, 370, 309, 1936, 2738, 281, 652, 300, 2649, 733, 50544, 50544, 295, 1359, 11, 457, 550, 309, 1177, 380, 1127, 498, 309, 311, 886, 1359, 13, 50716, 50716, 400, 498, 309, 311, 886, 2416, 11, 309, 733, 295, 2709, 493, 13, 50800, 50926, 400, 550, 291, 362, 341, 307, 264, 3671, 22119, 4470, 13, 51090, 51090, 407, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 51208, 51208, 293, 550, 652, 264, 3565, 295, 264, 2408, 670, 439, 6338, 51384, 51384, 295, 308, 281, 264, 3175, 264, 2281, 295, 729, 6338, 2416, 13, 51656, 51656, 2264, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1779152926276712, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.2604939001903404e-05}, {"id": 1299, "seek": 375764, "start": 3774.52, "end": 3778.04, "text": " and then make the log of the sum over all answers", "tokens": [50364, 400, 370, 309, 1936, 2738, 281, 652, 300, 2649, 733, 50544, 50544, 295, 1359, 11, 457, 550, 309, 1177, 380, 1127, 498, 309, 311, 886, 1359, 13, 50716, 50716, 400, 498, 309, 311, 886, 2416, 11, 309, 733, 295, 2709, 493, 13, 50800, 50926, 400, 550, 291, 362, 341, 307, 264, 3671, 22119, 4470, 13, 51090, 51090, 407, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 51208, 51208, 293, 550, 652, 264, 3565, 295, 264, 2408, 670, 439, 6338, 51384, 51384, 295, 308, 281, 264, 3175, 264, 2281, 295, 729, 6338, 2416, 13, 51656, 51656, 2264, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1779152926276712, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.2604939001903404e-05}, {"id": 1300, "seek": 375764, "start": 3778.04, "end": 3783.48, "text": " of e to the minus the energy of those answers large.", "tokens": [50364, 400, 370, 309, 1936, 2738, 281, 652, 300, 2649, 733, 50544, 50544, 295, 1359, 11, 457, 550, 309, 1177, 380, 1127, 498, 309, 311, 886, 1359, 13, 50716, 50716, 400, 498, 309, 311, 886, 2416, 11, 309, 733, 295, 2709, 493, 13, 50800, 50926, 400, 550, 291, 362, 341, 307, 264, 3671, 22119, 4470, 13, 51090, 51090, 407, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 51208, 51208, 293, 550, 652, 264, 3565, 295, 264, 2408, 670, 439, 6338, 51384, 51384, 295, 308, 281, 264, 3175, 264, 2281, 295, 729, 6338, 2416, 13, 51656, 51656, 2264, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1779152926276712, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.2604939001903404e-05}, {"id": 1301, "seek": 375764, "start": 3783.48, "end": 3785.24, "text": " OK?", "tokens": [50364, 400, 370, 309, 1936, 2738, 281, 652, 300, 2649, 733, 50544, 50544, 295, 1359, 11, 457, 550, 309, 1177, 380, 1127, 498, 309, 311, 886, 1359, 13, 50716, 50716, 400, 498, 309, 311, 886, 2416, 11, 309, 733, 295, 2709, 493, 13, 50800, 50926, 400, 550, 291, 362, 341, 307, 264, 3671, 22119, 4470, 13, 51090, 51090, 407, 652, 264, 2281, 295, 264, 3006, 1867, 1359, 11, 51208, 51208, 293, 550, 652, 264, 3565, 295, 264, 2408, 670, 439, 6338, 51384, 51384, 295, 308, 281, 264, 3175, 264, 2281, 295, 729, 6338, 2416, 13, 51656, 51656, 2264, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1779152926276712, "compression_ratio": 1.736842105263158, "no_speech_prob": 1.2604939001903404e-05}, {"id": 1302, "seek": 378524, "start": 3785.24, "end": 3788.7599999999998, "text": " Make the minus log large, which means make the log small,", "tokens": [50364, 4387, 264, 3175, 3565, 2416, 11, 597, 1355, 652, 264, 3565, 1359, 11, 50540, 50540, 597, 1355, 1669, 729, 25737, 2416, 13, 50658, 50658, 2264, 30, 50744, 50744, 400, 550, 264, 7616, 2884, 12, 49, 455, 4564, 551, 286, 390, 3585, 291, 466, 50902, 50902, 307, 1071, 1254, 295, 10024, 2445, 51004, 51004, 300, 1333, 295, 21020, 760, 293, 2944, 493, 13, 51126, 51126, 4534, 295, 729, 366, 18949, 490, 1333, 295, 31959, 3142, 51240, 51240, 9156, 11, 457, 867, 295, 552, 3212, 380, 13, 51344, 51344, 2264, 30, 51382, 51382, 1057, 264, 2306, 412, 264, 1192, 3212, 380, 13, 51500, 51500, 1911, 11, 8304, 13, 51534, 51534, 286, 632, 257, 1168, 466, 264, 10270, 295, 264, 15352, 13, 51662, 51662, 286, 519, 294, 257, 3894, 7991, 11, 321, 51730, 51730, 7152, 577, 264, 3671, 22119, 4470, 9652, 2880, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17693447566532589, "compression_ratio": 1.697674418604651, "no_speech_prob": 2.014367601077538e-05}, {"id": 1303, "seek": 378524, "start": 3788.7599999999998, "end": 3791.12, "text": " which means makes those energies large.", "tokens": [50364, 4387, 264, 3175, 3565, 2416, 11, 597, 1355, 652, 264, 3565, 1359, 11, 50540, 50540, 597, 1355, 1669, 729, 25737, 2416, 13, 50658, 50658, 2264, 30, 50744, 50744, 400, 550, 264, 7616, 2884, 12, 49, 455, 4564, 551, 286, 390, 3585, 291, 466, 50902, 50902, 307, 1071, 1254, 295, 10024, 2445, 51004, 51004, 300, 1333, 295, 21020, 760, 293, 2944, 493, 13, 51126, 51126, 4534, 295, 729, 366, 18949, 490, 1333, 295, 31959, 3142, 51240, 51240, 9156, 11, 457, 867, 295, 552, 3212, 380, 13, 51344, 51344, 2264, 30, 51382, 51382, 1057, 264, 2306, 412, 264, 1192, 3212, 380, 13, 51500, 51500, 1911, 11, 8304, 13, 51534, 51534, 286, 632, 257, 1168, 466, 264, 10270, 295, 264, 15352, 13, 51662, 51662, 286, 519, 294, 257, 3894, 7991, 11, 321, 51730, 51730, 7152, 577, 264, 3671, 22119, 4470, 9652, 2880, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17693447566532589, "compression_ratio": 1.697674418604651, "no_speech_prob": 2.014367601077538e-05}, {"id": 1304, "seek": 378524, "start": 3791.12, "end": 3792.8399999999997, "text": " OK?", "tokens": [50364, 4387, 264, 3175, 3565, 2416, 11, 597, 1355, 652, 264, 3565, 1359, 11, 50540, 50540, 597, 1355, 1669, 729, 25737, 2416, 13, 50658, 50658, 2264, 30, 50744, 50744, 400, 550, 264, 7616, 2884, 12, 49, 455, 4564, 551, 286, 390, 3585, 291, 466, 50902, 50902, 307, 1071, 1254, 295, 10024, 2445, 51004, 51004, 300, 1333, 295, 21020, 760, 293, 2944, 493, 13, 51126, 51126, 4534, 295, 729, 366, 18949, 490, 1333, 295, 31959, 3142, 51240, 51240, 9156, 11, 457, 867, 295, 552, 3212, 380, 13, 51344, 51344, 2264, 30, 51382, 51382, 1057, 264, 2306, 412, 264, 1192, 3212, 380, 13, 51500, 51500, 1911, 11, 8304, 13, 51534, 51534, 286, 632, 257, 1168, 466, 264, 10270, 295, 264, 15352, 13, 51662, 51662, 286, 519, 294, 257, 3894, 7991, 11, 321, 51730, 51730, 7152, 577, 264, 3671, 22119, 4470, 9652, 2880, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17693447566532589, "compression_ratio": 1.697674418604651, "no_speech_prob": 2.014367601077538e-05}, {"id": 1305, "seek": 378524, "start": 3792.8399999999997, "end": 3796.0, "text": " And then the Yoje-Rabiner thing I was telling you about", "tokens": [50364, 4387, 264, 3175, 3565, 2416, 11, 597, 1355, 652, 264, 3565, 1359, 11, 50540, 50540, 597, 1355, 1669, 729, 25737, 2416, 13, 50658, 50658, 2264, 30, 50744, 50744, 400, 550, 264, 7616, 2884, 12, 49, 455, 4564, 551, 286, 390, 3585, 291, 466, 50902, 50902, 307, 1071, 1254, 295, 10024, 2445, 51004, 51004, 300, 1333, 295, 21020, 760, 293, 2944, 493, 13, 51126, 51126, 4534, 295, 729, 366, 18949, 490, 1333, 295, 31959, 3142, 51240, 51240, 9156, 11, 457, 867, 295, 552, 3212, 380, 13, 51344, 51344, 2264, 30, 51382, 51382, 1057, 264, 2306, 412, 264, 1192, 3212, 380, 13, 51500, 51500, 1911, 11, 8304, 13, 51534, 51534, 286, 632, 257, 1168, 466, 264, 10270, 295, 264, 15352, 13, 51662, 51662, 286, 519, 294, 257, 3894, 7991, 11, 321, 51730, 51730, 7152, 577, 264, 3671, 22119, 4470, 9652, 2880, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17693447566532589, "compression_ratio": 1.697674418604651, "no_speech_prob": 2.014367601077538e-05}, {"id": 1306, "seek": 378524, "start": 3796.0, "end": 3798.04, "text": " is another form of objective function", "tokens": [50364, 4387, 264, 3175, 3565, 2416, 11, 597, 1355, 652, 264, 3565, 1359, 11, 50540, 50540, 597, 1355, 1669, 729, 25737, 2416, 13, 50658, 50658, 2264, 30, 50744, 50744, 400, 550, 264, 7616, 2884, 12, 49, 455, 4564, 551, 286, 390, 3585, 291, 466, 50902, 50902, 307, 1071, 1254, 295, 10024, 2445, 51004, 51004, 300, 1333, 295, 21020, 760, 293, 2944, 493, 13, 51126, 51126, 4534, 295, 729, 366, 18949, 490, 1333, 295, 31959, 3142, 51240, 51240, 9156, 11, 457, 867, 295, 552, 3212, 380, 13, 51344, 51344, 2264, 30, 51382, 51382, 1057, 264, 2306, 412, 264, 1192, 3212, 380, 13, 51500, 51500, 1911, 11, 8304, 13, 51534, 51534, 286, 632, 257, 1168, 466, 264, 10270, 295, 264, 15352, 13, 51662, 51662, 286, 519, 294, 257, 3894, 7991, 11, 321, 51730, 51730, 7152, 577, 264, 3671, 22119, 4470, 9652, 2880, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17693447566532589, "compression_ratio": 1.697674418604651, "no_speech_prob": 2.014367601077538e-05}, {"id": 1307, "seek": 378524, "start": 3798.04, "end": 3800.4799999999996, "text": " that sort of pushes down and push up.", "tokens": [50364, 4387, 264, 3175, 3565, 2416, 11, 597, 1355, 652, 264, 3565, 1359, 11, 50540, 50540, 597, 1355, 1669, 729, 25737, 2416, 13, 50658, 50658, 2264, 30, 50744, 50744, 400, 550, 264, 7616, 2884, 12, 49, 455, 4564, 551, 286, 390, 3585, 291, 466, 50902, 50902, 307, 1071, 1254, 295, 10024, 2445, 51004, 51004, 300, 1333, 295, 21020, 760, 293, 2944, 493, 13, 51126, 51126, 4534, 295, 729, 366, 18949, 490, 1333, 295, 31959, 3142, 51240, 51240, 9156, 11, 457, 867, 295, 552, 3212, 380, 13, 51344, 51344, 2264, 30, 51382, 51382, 1057, 264, 2306, 412, 264, 1192, 3212, 380, 13, 51500, 51500, 1911, 11, 8304, 13, 51534, 51534, 286, 632, 257, 1168, 466, 264, 10270, 295, 264, 15352, 13, 51662, 51662, 286, 519, 294, 257, 3894, 7991, 11, 321, 51730, 51730, 7152, 577, 264, 3671, 22119, 4470, 9652, 2880, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17693447566532589, "compression_ratio": 1.697674418604651, "no_speech_prob": 2.014367601077538e-05}, {"id": 1308, "seek": 378524, "start": 3800.4799999999996, "end": 3802.7599999999998, "text": " Most of those are derived from sort of probabilistic", "tokens": [50364, 4387, 264, 3175, 3565, 2416, 11, 597, 1355, 652, 264, 3565, 1359, 11, 50540, 50540, 597, 1355, 1669, 729, 25737, 2416, 13, 50658, 50658, 2264, 30, 50744, 50744, 400, 550, 264, 7616, 2884, 12, 49, 455, 4564, 551, 286, 390, 3585, 291, 466, 50902, 50902, 307, 1071, 1254, 295, 10024, 2445, 51004, 51004, 300, 1333, 295, 21020, 760, 293, 2944, 493, 13, 51126, 51126, 4534, 295, 729, 366, 18949, 490, 1333, 295, 31959, 3142, 51240, 51240, 9156, 11, 457, 867, 295, 552, 3212, 380, 13, 51344, 51344, 2264, 30, 51382, 51382, 1057, 264, 2306, 412, 264, 1192, 3212, 380, 13, 51500, 51500, 1911, 11, 8304, 13, 51534, 51534, 286, 632, 257, 1168, 466, 264, 10270, 295, 264, 15352, 13, 51662, 51662, 286, 519, 294, 257, 3894, 7991, 11, 321, 51730, 51730, 7152, 577, 264, 3671, 22119, 4470, 9652, 2880, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17693447566532589, "compression_ratio": 1.697674418604651, "no_speech_prob": 2.014367601077538e-05}, {"id": 1309, "seek": 378524, "start": 3802.7599999999998, "end": 3804.8399999999997, "text": " principles, but many of them aren't.", "tokens": [50364, 4387, 264, 3175, 3565, 2416, 11, 597, 1355, 652, 264, 3565, 1359, 11, 50540, 50540, 597, 1355, 1669, 729, 25737, 2416, 13, 50658, 50658, 2264, 30, 50744, 50744, 400, 550, 264, 7616, 2884, 12, 49, 455, 4564, 551, 286, 390, 3585, 291, 466, 50902, 50902, 307, 1071, 1254, 295, 10024, 2445, 51004, 51004, 300, 1333, 295, 21020, 760, 293, 2944, 493, 13, 51126, 51126, 4534, 295, 729, 366, 18949, 490, 1333, 295, 31959, 3142, 51240, 51240, 9156, 11, 457, 867, 295, 552, 3212, 380, 13, 51344, 51344, 2264, 30, 51382, 51382, 1057, 264, 2306, 412, 264, 1192, 3212, 380, 13, 51500, 51500, 1911, 11, 8304, 13, 51534, 51534, 286, 632, 257, 1168, 466, 264, 10270, 295, 264, 15352, 13, 51662, 51662, 286, 519, 294, 257, 3894, 7991, 11, 321, 51730, 51730, 7152, 577, 264, 3671, 22119, 4470, 9652, 2880, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17693447566532589, "compression_ratio": 1.697674418604651, "no_speech_prob": 2.014367601077538e-05}, {"id": 1310, "seek": 378524, "start": 3804.8399999999997, "end": 3805.6, "text": " OK?", "tokens": [50364, 4387, 264, 3175, 3565, 2416, 11, 597, 1355, 652, 264, 3565, 1359, 11, 50540, 50540, 597, 1355, 1669, 729, 25737, 2416, 13, 50658, 50658, 2264, 30, 50744, 50744, 400, 550, 264, 7616, 2884, 12, 49, 455, 4564, 551, 286, 390, 3585, 291, 466, 50902, 50902, 307, 1071, 1254, 295, 10024, 2445, 51004, 51004, 300, 1333, 295, 21020, 760, 293, 2944, 493, 13, 51126, 51126, 4534, 295, 729, 366, 18949, 490, 1333, 295, 31959, 3142, 51240, 51240, 9156, 11, 457, 867, 295, 552, 3212, 380, 13, 51344, 51344, 2264, 30, 51382, 51382, 1057, 264, 2306, 412, 264, 1192, 3212, 380, 13, 51500, 51500, 1911, 11, 8304, 13, 51534, 51534, 286, 632, 257, 1168, 466, 264, 10270, 295, 264, 15352, 13, 51662, 51662, 286, 519, 294, 257, 3894, 7991, 11, 321, 51730, 51730, 7152, 577, 264, 3671, 22119, 4470, 9652, 2880, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17693447566532589, "compression_ratio": 1.697674418604651, "no_speech_prob": 2.014367601077538e-05}, {"id": 1311, "seek": 378524, "start": 3805.6, "end": 3807.9599999999996, "text": " All the ones at the top aren't.", "tokens": [50364, 4387, 264, 3175, 3565, 2416, 11, 597, 1355, 652, 264, 3565, 1359, 11, 50540, 50540, 597, 1355, 1669, 729, 25737, 2416, 13, 50658, 50658, 2264, 30, 50744, 50744, 400, 550, 264, 7616, 2884, 12, 49, 455, 4564, 551, 286, 390, 3585, 291, 466, 50902, 50902, 307, 1071, 1254, 295, 10024, 2445, 51004, 51004, 300, 1333, 295, 21020, 760, 293, 2944, 493, 13, 51126, 51126, 4534, 295, 729, 366, 18949, 490, 1333, 295, 31959, 3142, 51240, 51240, 9156, 11, 457, 867, 295, 552, 3212, 380, 13, 51344, 51344, 2264, 30, 51382, 51382, 1057, 264, 2306, 412, 264, 1192, 3212, 380, 13, 51500, 51500, 1911, 11, 8304, 13, 51534, 51534, 286, 632, 257, 1168, 466, 264, 10270, 295, 264, 15352, 13, 51662, 51662, 286, 519, 294, 257, 3894, 7991, 11, 321, 51730, 51730, 7152, 577, 264, 3671, 22119, 4470, 9652, 2880, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17693447566532589, "compression_ratio": 1.697674418604651, "no_speech_prob": 2.014367601077538e-05}, {"id": 1312, "seek": 378524, "start": 3807.9599999999996, "end": 3808.64, "text": " Hey, professor.", "tokens": [50364, 4387, 264, 3175, 3565, 2416, 11, 597, 1355, 652, 264, 3565, 1359, 11, 50540, 50540, 597, 1355, 1669, 729, 25737, 2416, 13, 50658, 50658, 2264, 30, 50744, 50744, 400, 550, 264, 7616, 2884, 12, 49, 455, 4564, 551, 286, 390, 3585, 291, 466, 50902, 50902, 307, 1071, 1254, 295, 10024, 2445, 51004, 51004, 300, 1333, 295, 21020, 760, 293, 2944, 493, 13, 51126, 51126, 4534, 295, 729, 366, 18949, 490, 1333, 295, 31959, 3142, 51240, 51240, 9156, 11, 457, 867, 295, 552, 3212, 380, 13, 51344, 51344, 2264, 30, 51382, 51382, 1057, 264, 2306, 412, 264, 1192, 3212, 380, 13, 51500, 51500, 1911, 11, 8304, 13, 51534, 51534, 286, 632, 257, 1168, 466, 264, 10270, 295, 264, 15352, 13, 51662, 51662, 286, 519, 294, 257, 3894, 7991, 11, 321, 51730, 51730, 7152, 577, 264, 3671, 22119, 4470, 9652, 2880, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17693447566532589, "compression_ratio": 1.697674418604651, "no_speech_prob": 2.014367601077538e-05}, {"id": 1313, "seek": 378524, "start": 3808.64, "end": 3811.2, "text": " I had a question about the margin of the losses.", "tokens": [50364, 4387, 264, 3175, 3565, 2416, 11, 597, 1355, 652, 264, 3565, 1359, 11, 50540, 50540, 597, 1355, 1669, 729, 25737, 2416, 13, 50658, 50658, 2264, 30, 50744, 50744, 400, 550, 264, 7616, 2884, 12, 49, 455, 4564, 551, 286, 390, 3585, 291, 466, 50902, 50902, 307, 1071, 1254, 295, 10024, 2445, 51004, 51004, 300, 1333, 295, 21020, 760, 293, 2944, 493, 13, 51126, 51126, 4534, 295, 729, 366, 18949, 490, 1333, 295, 31959, 3142, 51240, 51240, 9156, 11, 457, 867, 295, 552, 3212, 380, 13, 51344, 51344, 2264, 30, 51382, 51382, 1057, 264, 2306, 412, 264, 1192, 3212, 380, 13, 51500, 51500, 1911, 11, 8304, 13, 51534, 51534, 286, 632, 257, 1168, 466, 264, 10270, 295, 264, 15352, 13, 51662, 51662, 286, 519, 294, 257, 3894, 7991, 11, 321, 51730, 51730, 7152, 577, 264, 3671, 22119, 4470, 9652, 2880, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17693447566532589, "compression_ratio": 1.697674418604651, "no_speech_prob": 2.014367601077538e-05}, {"id": 1314, "seek": 378524, "start": 3811.2, "end": 3812.56, "text": " I think in a previous lecture, we", "tokens": [50364, 4387, 264, 3175, 3565, 2416, 11, 597, 1355, 652, 264, 3565, 1359, 11, 50540, 50540, 597, 1355, 1669, 729, 25737, 2416, 13, 50658, 50658, 2264, 30, 50744, 50744, 400, 550, 264, 7616, 2884, 12, 49, 455, 4564, 551, 286, 390, 3585, 291, 466, 50902, 50902, 307, 1071, 1254, 295, 10024, 2445, 51004, 51004, 300, 1333, 295, 21020, 760, 293, 2944, 493, 13, 51126, 51126, 4534, 295, 729, 366, 18949, 490, 1333, 295, 31959, 3142, 51240, 51240, 9156, 11, 457, 867, 295, 552, 3212, 380, 13, 51344, 51344, 2264, 30, 51382, 51382, 1057, 264, 2306, 412, 264, 1192, 3212, 380, 13, 51500, 51500, 1911, 11, 8304, 13, 51534, 51534, 286, 632, 257, 1168, 466, 264, 10270, 295, 264, 15352, 13, 51662, 51662, 286, 519, 294, 257, 3894, 7991, 11, 321, 51730, 51730, 7152, 577, 264, 3671, 22119, 4470, 9652, 2880, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17693447566532589, "compression_ratio": 1.697674418604651, "no_speech_prob": 2.014367601077538e-05}, {"id": 1315, "seek": 378524, "start": 3812.56, "end": 3815.2, "text": " discussed how the negative likelihood loss converges", "tokens": [50364, 4387, 264, 3175, 3565, 2416, 11, 597, 1355, 652, 264, 3565, 1359, 11, 50540, 50540, 597, 1355, 1669, 729, 25737, 2416, 13, 50658, 50658, 2264, 30, 50744, 50744, 400, 550, 264, 7616, 2884, 12, 49, 455, 4564, 551, 286, 390, 3585, 291, 466, 50902, 50902, 307, 1071, 1254, 295, 10024, 2445, 51004, 51004, 300, 1333, 295, 21020, 760, 293, 2944, 493, 13, 51126, 51126, 4534, 295, 729, 366, 18949, 490, 1333, 295, 31959, 3142, 51240, 51240, 9156, 11, 457, 867, 295, 552, 3212, 380, 13, 51344, 51344, 2264, 30, 51382, 51382, 1057, 264, 2306, 412, 264, 1192, 3212, 380, 13, 51500, 51500, 1911, 11, 8304, 13, 51534, 51534, 286, 632, 257, 1168, 466, 264, 10270, 295, 264, 15352, 13, 51662, 51662, 286, 519, 294, 257, 3894, 7991, 11, 321, 51730, 51730, 7152, 577, 264, 3671, 22119, 4470, 9652, 2880, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17693447566532589, "compression_ratio": 1.697674418604651, "no_speech_prob": 2.014367601077538e-05}, {"id": 1316, "seek": 381520, "start": 3815.2, "end": 3819.0, "text": " to the perceptron loss when beta is going towards infinity", "tokens": [50364, 281, 264, 43276, 2044, 4470, 562, 9861, 307, 516, 3030, 13202, 50554, 50554, 420, 746, 411, 300, 13, 50610, 50610, 583, 577, 808, 264, 426, 45, 43, 4470, 575, 257, 3353, 10270, 50800, 50800, 293, 264, 43276, 2044, 4470, 1177, 380, 30, 50886, 50886, 1042, 11, 445, 570, 264, 4292, 307, 11, 51054, 51054, 286, 914, 11, 264, 502, 670, 9861, 11, 570, 9861, 307, 406, 13785, 11, 51262, 51262, 570, 502, 670, 9861, 307, 406, 1958, 13, 51352, 51352, 407, 1338, 11, 286, 914, 11, 498, 291, 747, 264, 4948, 295, 341, 337, 9861, 51490, 51490, 1709, 281, 13202, 11, 341, 502, 670, 9861, 3565, 2408, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.16354557415386578, "compression_ratio": 1.7545454545454546, "no_speech_prob": 2.5069610273931175e-05}, {"id": 1317, "seek": 381520, "start": 3819.0, "end": 3820.12, "text": " or something like that.", "tokens": [50364, 281, 264, 43276, 2044, 4470, 562, 9861, 307, 516, 3030, 13202, 50554, 50554, 420, 746, 411, 300, 13, 50610, 50610, 583, 577, 808, 264, 426, 45, 43, 4470, 575, 257, 3353, 10270, 50800, 50800, 293, 264, 43276, 2044, 4470, 1177, 380, 30, 50886, 50886, 1042, 11, 445, 570, 264, 4292, 307, 11, 51054, 51054, 286, 914, 11, 264, 502, 670, 9861, 11, 570, 9861, 307, 406, 13785, 11, 51262, 51262, 570, 502, 670, 9861, 307, 406, 1958, 13, 51352, 51352, 407, 1338, 11, 286, 914, 11, 498, 291, 747, 264, 4948, 295, 341, 337, 9861, 51490, 51490, 1709, 281, 13202, 11, 341, 502, 670, 9861, 3565, 2408, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.16354557415386578, "compression_ratio": 1.7545454545454546, "no_speech_prob": 2.5069610273931175e-05}, {"id": 1318, "seek": 381520, "start": 3820.12, "end": 3823.9199999999996, "text": " But how come the NNL loss has a positive margin", "tokens": [50364, 281, 264, 43276, 2044, 4470, 562, 9861, 307, 516, 3030, 13202, 50554, 50554, 420, 746, 411, 300, 13, 50610, 50610, 583, 577, 808, 264, 426, 45, 43, 4470, 575, 257, 3353, 10270, 50800, 50800, 293, 264, 43276, 2044, 4470, 1177, 380, 30, 50886, 50886, 1042, 11, 445, 570, 264, 4292, 307, 11, 51054, 51054, 286, 914, 11, 264, 502, 670, 9861, 11, 570, 9861, 307, 406, 13785, 11, 51262, 51262, 570, 502, 670, 9861, 307, 406, 1958, 13, 51352, 51352, 407, 1338, 11, 286, 914, 11, 498, 291, 747, 264, 4948, 295, 341, 337, 9861, 51490, 51490, 1709, 281, 13202, 11, 341, 502, 670, 9861, 3565, 2408, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.16354557415386578, "compression_ratio": 1.7545454545454546, "no_speech_prob": 2.5069610273931175e-05}, {"id": 1319, "seek": 381520, "start": 3823.9199999999996, "end": 3825.64, "text": " and the perceptron loss doesn't?", "tokens": [50364, 281, 264, 43276, 2044, 4470, 562, 9861, 307, 516, 3030, 13202, 50554, 50554, 420, 746, 411, 300, 13, 50610, 50610, 583, 577, 808, 264, 426, 45, 43, 4470, 575, 257, 3353, 10270, 50800, 50800, 293, 264, 43276, 2044, 4470, 1177, 380, 30, 50886, 50886, 1042, 11, 445, 570, 264, 4292, 307, 11, 51054, 51054, 286, 914, 11, 264, 502, 670, 9861, 11, 570, 9861, 307, 406, 13785, 11, 51262, 51262, 570, 502, 670, 9861, 307, 406, 1958, 13, 51352, 51352, 407, 1338, 11, 286, 914, 11, 498, 291, 747, 264, 4948, 295, 341, 337, 9861, 51490, 51490, 1709, 281, 13202, 11, 341, 502, 670, 9861, 3565, 2408, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.16354557415386578, "compression_ratio": 1.7545454545454546, "no_speech_prob": 2.5069610273931175e-05}, {"id": 1320, "seek": 381520, "start": 3825.64, "end": 3829.0, "text": " Well, just because the temperature is,", "tokens": [50364, 281, 264, 43276, 2044, 4470, 562, 9861, 307, 516, 3030, 13202, 50554, 50554, 420, 746, 411, 300, 13, 50610, 50610, 583, 577, 808, 264, 426, 45, 43, 4470, 575, 257, 3353, 10270, 50800, 50800, 293, 264, 43276, 2044, 4470, 1177, 380, 30, 50886, 50886, 1042, 11, 445, 570, 264, 4292, 307, 11, 51054, 51054, 286, 914, 11, 264, 502, 670, 9861, 11, 570, 9861, 307, 406, 13785, 11, 51262, 51262, 570, 502, 670, 9861, 307, 406, 1958, 13, 51352, 51352, 407, 1338, 11, 286, 914, 11, 498, 291, 747, 264, 4948, 295, 341, 337, 9861, 51490, 51490, 1709, 281, 13202, 11, 341, 502, 670, 9861, 3565, 2408, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.16354557415386578, "compression_ratio": 1.7545454545454546, "no_speech_prob": 2.5069610273931175e-05}, {"id": 1321, "seek": 381520, "start": 3829.0, "end": 3833.16, "text": " I mean, the 1 over beta, because beta is not infinite,", "tokens": [50364, 281, 264, 43276, 2044, 4470, 562, 9861, 307, 516, 3030, 13202, 50554, 50554, 420, 746, 411, 300, 13, 50610, 50610, 583, 577, 808, 264, 426, 45, 43, 4470, 575, 257, 3353, 10270, 50800, 50800, 293, 264, 43276, 2044, 4470, 1177, 380, 30, 50886, 50886, 1042, 11, 445, 570, 264, 4292, 307, 11, 51054, 51054, 286, 914, 11, 264, 502, 670, 9861, 11, 570, 9861, 307, 406, 13785, 11, 51262, 51262, 570, 502, 670, 9861, 307, 406, 1958, 13, 51352, 51352, 407, 1338, 11, 286, 914, 11, 498, 291, 747, 264, 4948, 295, 341, 337, 9861, 51490, 51490, 1709, 281, 13202, 11, 341, 502, 670, 9861, 3565, 2408, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.16354557415386578, "compression_ratio": 1.7545454545454546, "no_speech_prob": 2.5069610273931175e-05}, {"id": 1322, "seek": 381520, "start": 3833.16, "end": 3834.96, "text": " because 1 over beta is not 0.", "tokens": [50364, 281, 264, 43276, 2044, 4470, 562, 9861, 307, 516, 3030, 13202, 50554, 50554, 420, 746, 411, 300, 13, 50610, 50610, 583, 577, 808, 264, 426, 45, 43, 4470, 575, 257, 3353, 10270, 50800, 50800, 293, 264, 43276, 2044, 4470, 1177, 380, 30, 50886, 50886, 1042, 11, 445, 570, 264, 4292, 307, 11, 51054, 51054, 286, 914, 11, 264, 502, 670, 9861, 11, 570, 9861, 307, 406, 13785, 11, 51262, 51262, 570, 502, 670, 9861, 307, 406, 1958, 13, 51352, 51352, 407, 1338, 11, 286, 914, 11, 498, 291, 747, 264, 4948, 295, 341, 337, 9861, 51490, 51490, 1709, 281, 13202, 11, 341, 502, 670, 9861, 3565, 2408, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.16354557415386578, "compression_ratio": 1.7545454545454546, "no_speech_prob": 2.5069610273931175e-05}, {"id": 1323, "seek": 381520, "start": 3834.96, "end": 3837.72, "text": " So yeah, I mean, if you take the limit of this for beta", "tokens": [50364, 281, 264, 43276, 2044, 4470, 562, 9861, 307, 516, 3030, 13202, 50554, 50554, 420, 746, 411, 300, 13, 50610, 50610, 583, 577, 808, 264, 426, 45, 43, 4470, 575, 257, 3353, 10270, 50800, 50800, 293, 264, 43276, 2044, 4470, 1177, 380, 30, 50886, 50886, 1042, 11, 445, 570, 264, 4292, 307, 11, 51054, 51054, 286, 914, 11, 264, 502, 670, 9861, 11, 570, 9861, 307, 406, 13785, 11, 51262, 51262, 570, 502, 670, 9861, 307, 406, 1958, 13, 51352, 51352, 407, 1338, 11, 286, 914, 11, 498, 291, 747, 264, 4948, 295, 341, 337, 9861, 51490, 51490, 1709, 281, 13202, 11, 341, 502, 670, 9861, 3565, 2408, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.16354557415386578, "compression_ratio": 1.7545454545454546, "no_speech_prob": 2.5069610273931175e-05}, {"id": 1324, "seek": 381520, "start": 3837.72, "end": 3842.08, "text": " goes to infinity, this 1 over beta log sum", "tokens": [50364, 281, 264, 43276, 2044, 4470, 562, 9861, 307, 516, 3030, 13202, 50554, 50554, 420, 746, 411, 300, 13, 50610, 50610, 583, 577, 808, 264, 426, 45, 43, 4470, 575, 257, 3353, 10270, 50800, 50800, 293, 264, 43276, 2044, 4470, 1177, 380, 30, 50886, 50886, 1042, 11, 445, 570, 264, 4292, 307, 11, 51054, 51054, 286, 914, 11, 264, 502, 670, 9861, 11, 570, 9861, 307, 406, 13785, 11, 51262, 51262, 570, 502, 670, 9861, 307, 406, 1958, 13, 51352, 51352, 407, 1338, 11, 286, 914, 11, 498, 291, 747, 264, 4948, 295, 341, 337, 9861, 51490, 51490, 1709, 281, 13202, 11, 341, 502, 670, 9861, 3565, 2408, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.16354557415386578, "compression_ratio": 1.7545454545454546, "no_speech_prob": 2.5069610273931175e-05}, {"id": 1325, "seek": 384208, "start": 3842.08, "end": 3847.96, "text": " converges to min over y of energy of W y x i.", "tokens": [50364, 9652, 2880, 281, 923, 670, 288, 295, 2281, 295, 343, 288, 2031, 741, 13, 50658, 50658, 400, 370, 300, 311, 2293, 437, 264, 43276, 2044, 775, 13, 50778, 50778, 2264, 30, 50872, 50872, 407, 264, 43276, 2044, 307, 257, 4018, 4292, 4948, 50992, 50992, 420, 13785, 9861, 4948, 295, 3671, 22119, 13, 51226, 51226, 15061, 13, 51264, 51264, 583, 264, 10270, 307, 4476, 13785, 294, 341, 1389, 11, 51524, 51524, 9735, 264, 10270, 510, 307, 1958, 13, 51666, 51666, 2264, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.20146847893210018, "compression_ratio": 1.5573770491803278, "no_speech_prob": 4.709325367002748e-06}, {"id": 1326, "seek": 384208, "start": 3847.96, "end": 3850.36, "text": " And so that's exactly what the perceptron does.", "tokens": [50364, 9652, 2880, 281, 923, 670, 288, 295, 2281, 295, 343, 288, 2031, 741, 13, 50658, 50658, 400, 370, 300, 311, 2293, 437, 264, 43276, 2044, 775, 13, 50778, 50778, 2264, 30, 50872, 50872, 407, 264, 43276, 2044, 307, 257, 4018, 4292, 4948, 50992, 50992, 420, 13785, 9861, 4948, 295, 3671, 22119, 13, 51226, 51226, 15061, 13, 51264, 51264, 583, 264, 10270, 307, 4476, 13785, 294, 341, 1389, 11, 51524, 51524, 9735, 264, 10270, 510, 307, 1958, 13, 51666, 51666, 2264, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.20146847893210018, "compression_ratio": 1.5573770491803278, "no_speech_prob": 4.709325367002748e-06}, {"id": 1327, "seek": 384208, "start": 3850.36, "end": 3852.24, "text": " OK?", "tokens": [50364, 9652, 2880, 281, 923, 670, 288, 295, 2281, 295, 343, 288, 2031, 741, 13, 50658, 50658, 400, 370, 300, 311, 2293, 437, 264, 43276, 2044, 775, 13, 50778, 50778, 2264, 30, 50872, 50872, 407, 264, 43276, 2044, 307, 257, 4018, 4292, 4948, 50992, 50992, 420, 13785, 9861, 4948, 295, 3671, 22119, 13, 51226, 51226, 15061, 13, 51264, 51264, 583, 264, 10270, 307, 4476, 13785, 294, 341, 1389, 11, 51524, 51524, 9735, 264, 10270, 510, 307, 1958, 13, 51666, 51666, 2264, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.20146847893210018, "compression_ratio": 1.5573770491803278, "no_speech_prob": 4.709325367002748e-06}, {"id": 1328, "seek": 384208, "start": 3852.24, "end": 3854.64, "text": " So the perceptron is a zero temperature limit", "tokens": [50364, 9652, 2880, 281, 923, 670, 288, 295, 2281, 295, 343, 288, 2031, 741, 13, 50658, 50658, 400, 370, 300, 311, 2293, 437, 264, 43276, 2044, 775, 13, 50778, 50778, 2264, 30, 50872, 50872, 407, 264, 43276, 2044, 307, 257, 4018, 4292, 4948, 50992, 50992, 420, 13785, 9861, 4948, 295, 3671, 22119, 13, 51226, 51226, 15061, 13, 51264, 51264, 583, 264, 10270, 307, 4476, 13785, 294, 341, 1389, 11, 51524, 51524, 9735, 264, 10270, 510, 307, 1958, 13, 51666, 51666, 2264, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.20146847893210018, "compression_ratio": 1.5573770491803278, "no_speech_prob": 4.709325367002748e-06}, {"id": 1329, "seek": 384208, "start": 3854.64, "end": 3859.3199999999997, "text": " or infinite beta limit of negative likelihood.", "tokens": [50364, 9652, 2880, 281, 923, 670, 288, 295, 2281, 295, 343, 288, 2031, 741, 13, 50658, 50658, 400, 370, 300, 311, 2293, 437, 264, 43276, 2044, 775, 13, 50778, 50778, 2264, 30, 50872, 50872, 407, 264, 43276, 2044, 307, 257, 4018, 4292, 4948, 50992, 50992, 420, 13785, 9861, 4948, 295, 3671, 22119, 13, 51226, 51226, 15061, 13, 51264, 51264, 583, 264, 10270, 307, 4476, 13785, 294, 341, 1389, 11, 51524, 51524, 9735, 264, 10270, 510, 307, 1958, 13, 51666, 51666, 2264, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.20146847893210018, "compression_ratio": 1.5573770491803278, "no_speech_prob": 4.709325367002748e-06}, {"id": 1330, "seek": 384208, "start": 3859.3199999999997, "end": 3860.08, "text": " Indeed.", "tokens": [50364, 9652, 2880, 281, 923, 670, 288, 295, 2281, 295, 343, 288, 2031, 741, 13, 50658, 50658, 400, 370, 300, 311, 2293, 437, 264, 43276, 2044, 775, 13, 50778, 50778, 2264, 30, 50872, 50872, 407, 264, 43276, 2044, 307, 257, 4018, 4292, 4948, 50992, 50992, 420, 13785, 9861, 4948, 295, 3671, 22119, 13, 51226, 51226, 15061, 13, 51264, 51264, 583, 264, 10270, 307, 4476, 13785, 294, 341, 1389, 11, 51524, 51524, 9735, 264, 10270, 510, 307, 1958, 13, 51666, 51666, 2264, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.20146847893210018, "compression_ratio": 1.5573770491803278, "no_speech_prob": 4.709325367002748e-06}, {"id": 1331, "seek": 384208, "start": 3860.08, "end": 3865.2799999999997, "text": " But the margin is essentially infinite in this case,", "tokens": [50364, 9652, 2880, 281, 923, 670, 288, 295, 2281, 295, 343, 288, 2031, 741, 13, 50658, 50658, 400, 370, 300, 311, 2293, 437, 264, 43276, 2044, 775, 13, 50778, 50778, 2264, 30, 50872, 50872, 407, 264, 43276, 2044, 307, 257, 4018, 4292, 4948, 50992, 50992, 420, 13785, 9861, 4948, 295, 3671, 22119, 13, 51226, 51226, 15061, 13, 51264, 51264, 583, 264, 10270, 307, 4476, 13785, 294, 341, 1389, 11, 51524, 51524, 9735, 264, 10270, 510, 307, 1958, 13, 51666, 51666, 2264, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.20146847893210018, "compression_ratio": 1.5573770491803278, "no_speech_prob": 4.709325367002748e-06}, {"id": 1332, "seek": 384208, "start": 3865.2799999999997, "end": 3868.12, "text": " whereas the margin here is 0.", "tokens": [50364, 9652, 2880, 281, 923, 670, 288, 295, 2281, 295, 343, 288, 2031, 741, 13, 50658, 50658, 400, 370, 300, 311, 2293, 437, 264, 43276, 2044, 775, 13, 50778, 50778, 2264, 30, 50872, 50872, 407, 264, 43276, 2044, 307, 257, 4018, 4292, 4948, 50992, 50992, 420, 13785, 9861, 4948, 295, 3671, 22119, 13, 51226, 51226, 15061, 13, 51264, 51264, 583, 264, 10270, 307, 4476, 13785, 294, 341, 1389, 11, 51524, 51524, 9735, 264, 10270, 510, 307, 1958, 13, 51666, 51666, 2264, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.20146847893210018, "compression_ratio": 1.5573770491803278, "no_speech_prob": 4.709325367002748e-06}, {"id": 1333, "seek": 384208, "start": 3868.12, "end": 3868.68, "text": " OK?", "tokens": [50364, 9652, 2880, 281, 923, 670, 288, 295, 2281, 295, 343, 288, 2031, 741, 13, 50658, 50658, 400, 370, 300, 311, 2293, 437, 264, 43276, 2044, 775, 13, 50778, 50778, 2264, 30, 50872, 50872, 407, 264, 43276, 2044, 307, 257, 4018, 4292, 4948, 50992, 50992, 420, 13785, 9861, 4948, 295, 3671, 22119, 13, 51226, 51226, 15061, 13, 51264, 51264, 583, 264, 10270, 307, 4476, 13785, 294, 341, 1389, 11, 51524, 51524, 9735, 264, 10270, 510, 307, 1958, 13, 51666, 51666, 2264, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.20146847893210018, "compression_ratio": 1.5573770491803278, "no_speech_prob": 4.709325367002748e-06}, {"id": 1334, "seek": 386868, "start": 3868.68, "end": 3872.52, "text": " So there's a bit of a discontinuity here.", "tokens": [50364, 407, 456, 311, 257, 857, 295, 257, 31420, 21757, 510, 13, 50556, 50556, 46292, 3944, 356, 11, 1673, 11, 498, 291, 652, 9861, 588, 2416, 510, 50708, 50708, 7866, 984, 11, 264, 25737, 295, 1340, 50860, 50860, 457, 264, 12437, 2281, 1433, 11, 286, 914, 11, 51032, 51032, 264, 3090, 295, 264, 7379, 295, 264, 2115, 337, 4190, 288, 311, 51300, 51300, 294, 341, 2408, 486, 733, 295, 48696, 13, 51420, 51420, 400, 370, 7866, 984, 11, 309, 815, 767, 51558, 51558, 722, 35263, 588, 709, 411, 264, 43276, 2044, 2440, 322, 13, 51720, 51858], "temperature": 0.0, "avg_logprob": -0.12551740272757933, "compression_ratio": 1.5936073059360731, "no_speech_prob": 1.0952035154332407e-05}, {"id": 1335, "seek": 386868, "start": 3872.52, "end": 3875.56, "text": " Admittedly, though, if you make beta very large here", "tokens": [50364, 407, 456, 311, 257, 857, 295, 257, 31420, 21757, 510, 13, 50556, 50556, 46292, 3944, 356, 11, 1673, 11, 498, 291, 652, 9861, 588, 2416, 510, 50708, 50708, 7866, 984, 11, 264, 25737, 295, 1340, 50860, 50860, 457, 264, 12437, 2281, 1433, 11, 286, 914, 11, 51032, 51032, 264, 3090, 295, 264, 7379, 295, 264, 2115, 337, 4190, 288, 311, 51300, 51300, 294, 341, 2408, 486, 733, 295, 48696, 13, 51420, 51420, 400, 370, 7866, 984, 11, 309, 815, 767, 51558, 51558, 722, 35263, 588, 709, 411, 264, 43276, 2044, 2440, 322, 13, 51720, 51858], "temperature": 0.0, "avg_logprob": -0.12551740272757933, "compression_ratio": 1.5936073059360731, "no_speech_prob": 1.0952035154332407e-05}, {"id": 1336, "seek": 386868, "start": 3875.56, "end": 3878.6, "text": " numerically, the energies of anything", "tokens": [50364, 407, 456, 311, 257, 857, 295, 257, 31420, 21757, 510, 13, 50556, 50556, 46292, 3944, 356, 11, 1673, 11, 498, 291, 652, 9861, 588, 2416, 510, 50708, 50708, 7866, 984, 11, 264, 25737, 295, 1340, 50860, 50860, 457, 264, 12437, 2281, 1433, 11, 286, 914, 11, 51032, 51032, 264, 3090, 295, 264, 7379, 295, 264, 2115, 337, 4190, 288, 311, 51300, 51300, 294, 341, 2408, 486, 733, 295, 48696, 13, 51420, 51420, 400, 370, 7866, 984, 11, 309, 815, 767, 51558, 51558, 722, 35263, 588, 709, 411, 264, 43276, 2044, 2440, 322, 13, 51720, 51858], "temperature": 0.0, "avg_logprob": -0.12551740272757933, "compression_ratio": 1.5936073059360731, "no_speech_prob": 1.0952035154332407e-05}, {"id": 1337, "seek": 386868, "start": 3878.6, "end": 3882.04, "text": " but the lowest energy term, I mean,", "tokens": [50364, 407, 456, 311, 257, 857, 295, 257, 31420, 21757, 510, 13, 50556, 50556, 46292, 3944, 356, 11, 1673, 11, 498, 291, 652, 9861, 588, 2416, 510, 50708, 50708, 7866, 984, 11, 264, 25737, 295, 1340, 50860, 50860, 457, 264, 12437, 2281, 1433, 11, 286, 914, 11, 51032, 51032, 264, 3090, 295, 264, 7379, 295, 264, 2115, 337, 4190, 288, 311, 51300, 51300, 294, 341, 2408, 486, 733, 295, 48696, 13, 51420, 51420, 400, 370, 7866, 984, 11, 309, 815, 767, 51558, 51558, 722, 35263, 588, 709, 411, 264, 43276, 2044, 2440, 322, 13, 51720, 51858], "temperature": 0.0, "avg_logprob": -0.12551740272757933, "compression_ratio": 1.5936073059360731, "no_speech_prob": 1.0952035154332407e-05}, {"id": 1338, "seek": 386868, "start": 3882.04, "end": 3887.3999999999996, "text": " the role of the importance of the terms for values y's", "tokens": [50364, 407, 456, 311, 257, 857, 295, 257, 31420, 21757, 510, 13, 50556, 50556, 46292, 3944, 356, 11, 1673, 11, 498, 291, 652, 9861, 588, 2416, 510, 50708, 50708, 7866, 984, 11, 264, 25737, 295, 1340, 50860, 50860, 457, 264, 12437, 2281, 1433, 11, 286, 914, 11, 51032, 51032, 264, 3090, 295, 264, 7379, 295, 264, 2115, 337, 4190, 288, 311, 51300, 51300, 294, 341, 2408, 486, 733, 295, 48696, 13, 51420, 51420, 400, 370, 7866, 984, 11, 309, 815, 767, 51558, 51558, 722, 35263, 588, 709, 411, 264, 43276, 2044, 2440, 322, 13, 51720, 51858], "temperature": 0.0, "avg_logprob": -0.12551740272757933, "compression_ratio": 1.5936073059360731, "no_speech_prob": 1.0952035154332407e-05}, {"id": 1339, "seek": 386868, "start": 3887.3999999999996, "end": 3889.7999999999997, "text": " in this sum will kind of diminish.", "tokens": [50364, 407, 456, 311, 257, 857, 295, 257, 31420, 21757, 510, 13, 50556, 50556, 46292, 3944, 356, 11, 1673, 11, 498, 291, 652, 9861, 588, 2416, 510, 50708, 50708, 7866, 984, 11, 264, 25737, 295, 1340, 50860, 50860, 457, 264, 12437, 2281, 1433, 11, 286, 914, 11, 51032, 51032, 264, 3090, 295, 264, 7379, 295, 264, 2115, 337, 4190, 288, 311, 51300, 51300, 294, 341, 2408, 486, 733, 295, 48696, 13, 51420, 51420, 400, 370, 7866, 984, 11, 309, 815, 767, 51558, 51558, 722, 35263, 588, 709, 411, 264, 43276, 2044, 2440, 322, 13, 51720, 51858], "temperature": 0.0, "avg_logprob": -0.12551740272757933, "compression_ratio": 1.5936073059360731, "no_speech_prob": 1.0952035154332407e-05}, {"id": 1340, "seek": 386868, "start": 3889.7999999999997, "end": 3892.56, "text": " And so numerically, it may actually", "tokens": [50364, 407, 456, 311, 257, 857, 295, 257, 31420, 21757, 510, 13, 50556, 50556, 46292, 3944, 356, 11, 1673, 11, 498, 291, 652, 9861, 588, 2416, 510, 50708, 50708, 7866, 984, 11, 264, 25737, 295, 1340, 50860, 50860, 457, 264, 12437, 2281, 1433, 11, 286, 914, 11, 51032, 51032, 264, 3090, 295, 264, 7379, 295, 264, 2115, 337, 4190, 288, 311, 51300, 51300, 294, 341, 2408, 486, 733, 295, 48696, 13, 51420, 51420, 400, 370, 7866, 984, 11, 309, 815, 767, 51558, 51558, 722, 35263, 588, 709, 411, 264, 43276, 2044, 2440, 322, 13, 51720, 51858], "temperature": 0.0, "avg_logprob": -0.12551740272757933, "compression_ratio": 1.5936073059360731, "no_speech_prob": 1.0952035154332407e-05}, {"id": 1341, "seek": 386868, "start": 3892.56, "end": 3895.7999999999997, "text": " start behaving very much like the perceptron early on.", "tokens": [50364, 407, 456, 311, 257, 857, 295, 257, 31420, 21757, 510, 13, 50556, 50556, 46292, 3944, 356, 11, 1673, 11, 498, 291, 652, 9861, 588, 2416, 510, 50708, 50708, 7866, 984, 11, 264, 25737, 295, 1340, 50860, 50860, 457, 264, 12437, 2281, 1433, 11, 286, 914, 11, 51032, 51032, 264, 3090, 295, 264, 7379, 295, 264, 2115, 337, 4190, 288, 311, 51300, 51300, 294, 341, 2408, 486, 733, 295, 48696, 13, 51420, 51420, 400, 370, 7866, 984, 11, 309, 815, 767, 51558, 51558, 722, 35263, 588, 709, 411, 264, 43276, 2044, 2440, 322, 13, 51720, 51858], "temperature": 0.0, "avg_logprob": -0.12551740272757933, "compression_ratio": 1.5936073059360731, "no_speech_prob": 1.0952035154332407e-05}, {"id": 1342, "seek": 389580, "start": 3895.8, "end": 3898.04, "text": " There's a problem with it also, which I mentioned before,", "tokens": [50364, 821, 311, 257, 1154, 365, 309, 611, 11, 597, 286, 2835, 949, 11, 50476, 50476, 597, 307, 300, 341, 2738, 281, 652, 264, 2281, 295, 18424, 6338, 50752, 50752, 13785, 13, 50850, 50850, 400, 309, 311, 406, 516, 281, 652, 552, 13785, 11, 50962, 50962, 570, 382, 436, 483, 4833, 293, 4833, 11, 51212, 51212, 264, 16235, 295, 341, 2408, 365, 3104, 281, 1184, 295, 552, 51384, 51384, 2170, 588, 1359, 13, 51460, 51460, 583, 436, 434, 516, 281, 483, 9152, 281, 13202, 13, 51578, 51578, 400, 370, 309, 311, 406, 4725, 257, 665, 551, 13, 51702, 51702, 440, 28822, 307, 1101, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.25631100663514894, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.750042247294914e-05}, {"id": 1343, "seek": 389580, "start": 3898.04, "end": 3903.5600000000004, "text": " which is that this wants to make the energy of incorrect answers", "tokens": [50364, 821, 311, 257, 1154, 365, 309, 611, 11, 597, 286, 2835, 949, 11, 50476, 50476, 597, 307, 300, 341, 2738, 281, 652, 264, 2281, 295, 18424, 6338, 50752, 50752, 13785, 13, 50850, 50850, 400, 309, 311, 406, 516, 281, 652, 552, 13785, 11, 50962, 50962, 570, 382, 436, 483, 4833, 293, 4833, 11, 51212, 51212, 264, 16235, 295, 341, 2408, 365, 3104, 281, 1184, 295, 552, 51384, 51384, 2170, 588, 1359, 13, 51460, 51460, 583, 436, 434, 516, 281, 483, 9152, 281, 13202, 13, 51578, 51578, 400, 370, 309, 311, 406, 4725, 257, 665, 551, 13, 51702, 51702, 440, 28822, 307, 1101, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.25631100663514894, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.750042247294914e-05}, {"id": 1344, "seek": 389580, "start": 3903.5600000000004, "end": 3905.52, "text": " infinite.", "tokens": [50364, 821, 311, 257, 1154, 365, 309, 611, 11, 597, 286, 2835, 949, 11, 50476, 50476, 597, 307, 300, 341, 2738, 281, 652, 264, 2281, 295, 18424, 6338, 50752, 50752, 13785, 13, 50850, 50850, 400, 309, 311, 406, 516, 281, 652, 552, 13785, 11, 50962, 50962, 570, 382, 436, 483, 4833, 293, 4833, 11, 51212, 51212, 264, 16235, 295, 341, 2408, 365, 3104, 281, 1184, 295, 552, 51384, 51384, 2170, 588, 1359, 13, 51460, 51460, 583, 436, 434, 516, 281, 483, 9152, 281, 13202, 13, 51578, 51578, 400, 370, 309, 311, 406, 4725, 257, 665, 551, 13, 51702, 51702, 440, 28822, 307, 1101, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.25631100663514894, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.750042247294914e-05}, {"id": 1345, "seek": 389580, "start": 3905.52, "end": 3907.76, "text": " And it's not going to make them infinite,", "tokens": [50364, 821, 311, 257, 1154, 365, 309, 611, 11, 597, 286, 2835, 949, 11, 50476, 50476, 597, 307, 300, 341, 2738, 281, 652, 264, 2281, 295, 18424, 6338, 50752, 50752, 13785, 13, 50850, 50850, 400, 309, 311, 406, 516, 281, 652, 552, 13785, 11, 50962, 50962, 570, 382, 436, 483, 4833, 293, 4833, 11, 51212, 51212, 264, 16235, 295, 341, 2408, 365, 3104, 281, 1184, 295, 552, 51384, 51384, 2170, 588, 1359, 13, 51460, 51460, 583, 436, 434, 516, 281, 483, 9152, 281, 13202, 13, 51578, 51578, 400, 370, 309, 311, 406, 4725, 257, 665, 551, 13, 51702, 51702, 440, 28822, 307, 1101, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.25631100663514894, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.750042247294914e-05}, {"id": 1346, "seek": 389580, "start": 3907.76, "end": 3912.76, "text": " because as they get larger and larger,", "tokens": [50364, 821, 311, 257, 1154, 365, 309, 611, 11, 597, 286, 2835, 949, 11, 50476, 50476, 597, 307, 300, 341, 2738, 281, 652, 264, 2281, 295, 18424, 6338, 50752, 50752, 13785, 13, 50850, 50850, 400, 309, 311, 406, 516, 281, 652, 552, 13785, 11, 50962, 50962, 570, 382, 436, 483, 4833, 293, 4833, 11, 51212, 51212, 264, 16235, 295, 341, 2408, 365, 3104, 281, 1184, 295, 552, 51384, 51384, 2170, 588, 1359, 13, 51460, 51460, 583, 436, 434, 516, 281, 483, 9152, 281, 13202, 13, 51578, 51578, 400, 370, 309, 311, 406, 4725, 257, 665, 551, 13, 51702, 51702, 440, 28822, 307, 1101, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.25631100663514894, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.750042247294914e-05}, {"id": 1347, "seek": 389580, "start": 3912.76, "end": 3916.2000000000003, "text": " the gradient of this sum with respect to each of them", "tokens": [50364, 821, 311, 257, 1154, 365, 309, 611, 11, 597, 286, 2835, 949, 11, 50476, 50476, 597, 307, 300, 341, 2738, 281, 652, 264, 2281, 295, 18424, 6338, 50752, 50752, 13785, 13, 50850, 50850, 400, 309, 311, 406, 516, 281, 652, 552, 13785, 11, 50962, 50962, 570, 382, 436, 483, 4833, 293, 4833, 11, 51212, 51212, 264, 16235, 295, 341, 2408, 365, 3104, 281, 1184, 295, 552, 51384, 51384, 2170, 588, 1359, 13, 51460, 51460, 583, 436, 434, 516, 281, 483, 9152, 281, 13202, 13, 51578, 51578, 400, 370, 309, 311, 406, 4725, 257, 665, 551, 13, 51702, 51702, 440, 28822, 307, 1101, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.25631100663514894, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.750042247294914e-05}, {"id": 1348, "seek": 389580, "start": 3916.2000000000003, "end": 3917.7200000000003, "text": " gets very small.", "tokens": [50364, 821, 311, 257, 1154, 365, 309, 611, 11, 597, 286, 2835, 949, 11, 50476, 50476, 597, 307, 300, 341, 2738, 281, 652, 264, 2281, 295, 18424, 6338, 50752, 50752, 13785, 13, 50850, 50850, 400, 309, 311, 406, 516, 281, 652, 552, 13785, 11, 50962, 50962, 570, 382, 436, 483, 4833, 293, 4833, 11, 51212, 51212, 264, 16235, 295, 341, 2408, 365, 3104, 281, 1184, 295, 552, 51384, 51384, 2170, 588, 1359, 13, 51460, 51460, 583, 436, 434, 516, 281, 483, 9152, 281, 13202, 13, 51578, 51578, 400, 370, 309, 311, 406, 4725, 257, 665, 551, 13, 51702, 51702, 440, 28822, 307, 1101, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.25631100663514894, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.750042247294914e-05}, {"id": 1349, "seek": 389580, "start": 3917.7200000000003, "end": 3920.0800000000004, "text": " But they're going to get pushed to infinity.", "tokens": [50364, 821, 311, 257, 1154, 365, 309, 611, 11, 597, 286, 2835, 949, 11, 50476, 50476, 597, 307, 300, 341, 2738, 281, 652, 264, 2281, 295, 18424, 6338, 50752, 50752, 13785, 13, 50850, 50850, 400, 309, 311, 406, 516, 281, 652, 552, 13785, 11, 50962, 50962, 570, 382, 436, 483, 4833, 293, 4833, 11, 51212, 51212, 264, 16235, 295, 341, 2408, 365, 3104, 281, 1184, 295, 552, 51384, 51384, 2170, 588, 1359, 13, 51460, 51460, 583, 436, 434, 516, 281, 483, 9152, 281, 13202, 13, 51578, 51578, 400, 370, 309, 311, 406, 4725, 257, 665, 551, 13, 51702, 51702, 440, 28822, 307, 1101, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.25631100663514894, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.750042247294914e-05}, {"id": 1350, "seek": 389580, "start": 3920.0800000000004, "end": 3922.5600000000004, "text": " And so it's not necessarily a good thing.", "tokens": [50364, 821, 311, 257, 1154, 365, 309, 611, 11, 597, 286, 2835, 949, 11, 50476, 50476, 597, 307, 300, 341, 2738, 281, 652, 264, 2281, 295, 18424, 6338, 50752, 50752, 13785, 13, 50850, 50850, 400, 309, 311, 406, 516, 281, 652, 552, 13785, 11, 50962, 50962, 570, 382, 436, 483, 4833, 293, 4833, 11, 51212, 51212, 264, 16235, 295, 341, 2408, 365, 3104, 281, 1184, 295, 552, 51384, 51384, 2170, 588, 1359, 13, 51460, 51460, 583, 436, 434, 516, 281, 483, 9152, 281, 13202, 13, 51578, 51578, 400, 370, 309, 311, 406, 4725, 257, 665, 551, 13, 51702, 51702, 440, 28822, 307, 1101, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.25631100663514894, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.750042247294914e-05}, {"id": 1351, "seek": 389580, "start": 3922.5600000000004, "end": 3923.6000000000004, "text": " The hinge is better.", "tokens": [50364, 821, 311, 257, 1154, 365, 309, 611, 11, 597, 286, 2835, 949, 11, 50476, 50476, 597, 307, 300, 341, 2738, 281, 652, 264, 2281, 295, 18424, 6338, 50752, 50752, 13785, 13, 50850, 50850, 400, 309, 311, 406, 516, 281, 652, 552, 13785, 11, 50962, 50962, 570, 382, 436, 483, 4833, 293, 4833, 11, 51212, 51212, 264, 16235, 295, 341, 2408, 365, 3104, 281, 1184, 295, 552, 51384, 51384, 2170, 588, 1359, 13, 51460, 51460, 583, 436, 434, 516, 281, 483, 9152, 281, 13202, 13, 51578, 51578, 400, 370, 309, 311, 406, 4725, 257, 665, 551, 13, 51702, 51702, 440, 28822, 307, 1101, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.25631100663514894, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.750042247294914e-05}, {"id": 1352, "seek": 392360, "start": 3923.6, "end": 3926.0, "text": " It's not necessarily a good thing.", "tokens": [50364, 467, 311, 406, 4725, 257, 665, 551, 13, 50484, 50484, 440, 28822, 307, 1101, 294, 257, 636, 11, 570, 309, 445, 1619, 11, 50608, 50608, 731, 11, 286, 445, 528, 309, 281, 312, 4833, 538, 512, 2158, 13, 50808, 50808, 286, 500, 380, 1127, 577, 709, 13, 50944, 50944, 286, 976, 291, 1071, 1254, 295, 264, 28822, 4470, 294, 264, 1791, 11, 51148, 51148, 689, 291, 362, 257, 2408, 670, 288, 13, 51376, 51376, 407, 2602, 295, 445, 1940, 264, 881, 51454, 51454, 295, 604, 18424, 1867, 294, 264, 28822, 11, 51598, 51598, 291, 747, 439, 6338, 11, 293, 291, 2408, 670, 439, 295, 552, 13, 51728, 51728, 400, 337, 1184, 295, 552, 11, 291, 362, 257, 819, 10270, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.21106464632095828, "compression_ratio": 1.7061224489795919, "no_speech_prob": 1.9831766621791758e-05}, {"id": 1353, "seek": 392360, "start": 3926.0, "end": 3928.48, "text": " The hinge is better in a way, because it just says,", "tokens": [50364, 467, 311, 406, 4725, 257, 665, 551, 13, 50484, 50484, 440, 28822, 307, 1101, 294, 257, 636, 11, 570, 309, 445, 1619, 11, 50608, 50608, 731, 11, 286, 445, 528, 309, 281, 312, 4833, 538, 512, 2158, 13, 50808, 50808, 286, 500, 380, 1127, 577, 709, 13, 50944, 50944, 286, 976, 291, 1071, 1254, 295, 264, 28822, 4470, 294, 264, 1791, 11, 51148, 51148, 689, 291, 362, 257, 2408, 670, 288, 13, 51376, 51376, 407, 2602, 295, 445, 1940, 264, 881, 51454, 51454, 295, 604, 18424, 1867, 294, 264, 28822, 11, 51598, 51598, 291, 747, 439, 6338, 11, 293, 291, 2408, 670, 439, 295, 552, 13, 51728, 51728, 400, 337, 1184, 295, 552, 11, 291, 362, 257, 819, 10270, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.21106464632095828, "compression_ratio": 1.7061224489795919, "no_speech_prob": 1.9831766621791758e-05}, {"id": 1354, "seek": 392360, "start": 3928.48, "end": 3932.48, "text": " well, I just want it to be larger by some value.", "tokens": [50364, 467, 311, 406, 4725, 257, 665, 551, 13, 50484, 50484, 440, 28822, 307, 1101, 294, 257, 636, 11, 570, 309, 445, 1619, 11, 50608, 50608, 731, 11, 286, 445, 528, 309, 281, 312, 4833, 538, 512, 2158, 13, 50808, 50808, 286, 500, 380, 1127, 577, 709, 13, 50944, 50944, 286, 976, 291, 1071, 1254, 295, 264, 28822, 4470, 294, 264, 1791, 11, 51148, 51148, 689, 291, 362, 257, 2408, 670, 288, 13, 51376, 51376, 407, 2602, 295, 445, 1940, 264, 881, 51454, 51454, 295, 604, 18424, 1867, 294, 264, 28822, 11, 51598, 51598, 291, 747, 439, 6338, 11, 293, 291, 2408, 670, 439, 295, 552, 13, 51728, 51728, 400, 337, 1184, 295, 552, 11, 291, 362, 257, 819, 10270, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.21106464632095828, "compression_ratio": 1.7061224489795919, "no_speech_prob": 1.9831766621791758e-05}, {"id": 1355, "seek": 392360, "start": 3932.48, "end": 3935.2, "text": " I don't care how much.", "tokens": [50364, 467, 311, 406, 4725, 257, 665, 551, 13, 50484, 50484, 440, 28822, 307, 1101, 294, 257, 636, 11, 570, 309, 445, 1619, 11, 50608, 50608, 731, 11, 286, 445, 528, 309, 281, 312, 4833, 538, 512, 2158, 13, 50808, 50808, 286, 500, 380, 1127, 577, 709, 13, 50944, 50944, 286, 976, 291, 1071, 1254, 295, 264, 28822, 4470, 294, 264, 1791, 11, 51148, 51148, 689, 291, 362, 257, 2408, 670, 288, 13, 51376, 51376, 407, 2602, 295, 445, 1940, 264, 881, 51454, 51454, 295, 604, 18424, 1867, 294, 264, 28822, 11, 51598, 51598, 291, 747, 439, 6338, 11, 293, 291, 2408, 670, 439, 295, 552, 13, 51728, 51728, 400, 337, 1184, 295, 552, 11, 291, 362, 257, 819, 10270, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.21106464632095828, "compression_ratio": 1.7061224489795919, "no_speech_prob": 1.9831766621791758e-05}, {"id": 1356, "seek": 392360, "start": 3935.2, "end": 3939.2799999999997, "text": " I give you another form of the hinge loss in the past,", "tokens": [50364, 467, 311, 406, 4725, 257, 665, 551, 13, 50484, 50484, 440, 28822, 307, 1101, 294, 257, 636, 11, 570, 309, 445, 1619, 11, 50608, 50608, 731, 11, 286, 445, 528, 309, 281, 312, 4833, 538, 512, 2158, 13, 50808, 50808, 286, 500, 380, 1127, 577, 709, 13, 50944, 50944, 286, 976, 291, 1071, 1254, 295, 264, 28822, 4470, 294, 264, 1791, 11, 51148, 51148, 689, 291, 362, 257, 2408, 670, 288, 13, 51376, 51376, 407, 2602, 295, 445, 1940, 264, 881, 51454, 51454, 295, 604, 18424, 1867, 294, 264, 28822, 11, 51598, 51598, 291, 747, 439, 6338, 11, 293, 291, 2408, 670, 439, 295, 552, 13, 51728, 51728, 400, 337, 1184, 295, 552, 11, 291, 362, 257, 819, 10270, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.21106464632095828, "compression_ratio": 1.7061224489795919, "no_speech_prob": 1.9831766621791758e-05}, {"id": 1357, "seek": 392360, "start": 3939.2799999999997, "end": 3943.8399999999997, "text": " where you have a sum over y.", "tokens": [50364, 467, 311, 406, 4725, 257, 665, 551, 13, 50484, 50484, 440, 28822, 307, 1101, 294, 257, 636, 11, 570, 309, 445, 1619, 11, 50608, 50608, 731, 11, 286, 445, 528, 309, 281, 312, 4833, 538, 512, 2158, 13, 50808, 50808, 286, 500, 380, 1127, 577, 709, 13, 50944, 50944, 286, 976, 291, 1071, 1254, 295, 264, 28822, 4470, 294, 264, 1791, 11, 51148, 51148, 689, 291, 362, 257, 2408, 670, 288, 13, 51376, 51376, 407, 2602, 295, 445, 1940, 264, 881, 51454, 51454, 295, 604, 18424, 1867, 294, 264, 28822, 11, 51598, 51598, 291, 747, 439, 6338, 11, 293, 291, 2408, 670, 439, 295, 552, 13, 51728, 51728, 400, 337, 1184, 295, 552, 11, 291, 362, 257, 819, 10270, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.21106464632095828, "compression_ratio": 1.7061224489795919, "no_speech_prob": 1.9831766621791758e-05}, {"id": 1358, "seek": 392360, "start": 3943.8399999999997, "end": 3945.4, "text": " So instead of just taking the most", "tokens": [50364, 467, 311, 406, 4725, 257, 665, 551, 13, 50484, 50484, 440, 28822, 307, 1101, 294, 257, 636, 11, 570, 309, 445, 1619, 11, 50608, 50608, 731, 11, 286, 445, 528, 309, 281, 312, 4833, 538, 512, 2158, 13, 50808, 50808, 286, 500, 380, 1127, 577, 709, 13, 50944, 50944, 286, 976, 291, 1071, 1254, 295, 264, 28822, 4470, 294, 264, 1791, 11, 51148, 51148, 689, 291, 362, 257, 2408, 670, 288, 13, 51376, 51376, 407, 2602, 295, 445, 1940, 264, 881, 51454, 51454, 295, 604, 18424, 1867, 294, 264, 28822, 11, 51598, 51598, 291, 747, 439, 6338, 11, 293, 291, 2408, 670, 439, 295, 552, 13, 51728, 51728, 400, 337, 1184, 295, 552, 11, 291, 362, 257, 819, 10270, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.21106464632095828, "compression_ratio": 1.7061224489795919, "no_speech_prob": 1.9831766621791758e-05}, {"id": 1359, "seek": 392360, "start": 3945.4, "end": 3948.2799999999997, "text": " of any incorrect answer in the hinge,", "tokens": [50364, 467, 311, 406, 4725, 257, 665, 551, 13, 50484, 50484, 440, 28822, 307, 1101, 294, 257, 636, 11, 570, 309, 445, 1619, 11, 50608, 50608, 731, 11, 286, 445, 528, 309, 281, 312, 4833, 538, 512, 2158, 13, 50808, 50808, 286, 500, 380, 1127, 577, 709, 13, 50944, 50944, 286, 976, 291, 1071, 1254, 295, 264, 28822, 4470, 294, 264, 1791, 11, 51148, 51148, 689, 291, 362, 257, 2408, 670, 288, 13, 51376, 51376, 407, 2602, 295, 445, 1940, 264, 881, 51454, 51454, 295, 604, 18424, 1867, 294, 264, 28822, 11, 51598, 51598, 291, 747, 439, 6338, 11, 293, 291, 2408, 670, 439, 295, 552, 13, 51728, 51728, 400, 337, 1184, 295, 552, 11, 291, 362, 257, 819, 10270, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.21106464632095828, "compression_ratio": 1.7061224489795919, "no_speech_prob": 1.9831766621791758e-05}, {"id": 1360, "seek": 392360, "start": 3948.2799999999997, "end": 3950.88, "text": " you take all answers, and you sum over all of them.", "tokens": [50364, 467, 311, 406, 4725, 257, 665, 551, 13, 50484, 50484, 440, 28822, 307, 1101, 294, 257, 636, 11, 570, 309, 445, 1619, 11, 50608, 50608, 731, 11, 286, 445, 528, 309, 281, 312, 4833, 538, 512, 2158, 13, 50808, 50808, 286, 500, 380, 1127, 577, 709, 13, 50944, 50944, 286, 976, 291, 1071, 1254, 295, 264, 28822, 4470, 294, 264, 1791, 11, 51148, 51148, 689, 291, 362, 257, 2408, 670, 288, 13, 51376, 51376, 407, 2602, 295, 445, 1940, 264, 881, 51454, 51454, 295, 604, 18424, 1867, 294, 264, 28822, 11, 51598, 51598, 291, 747, 439, 6338, 11, 293, 291, 2408, 670, 439, 295, 552, 13, 51728, 51728, 400, 337, 1184, 295, 552, 11, 291, 362, 257, 819, 10270, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.21106464632095828, "compression_ratio": 1.7061224489795919, "no_speech_prob": 1.9831766621791758e-05}, {"id": 1361, "seek": 392360, "start": 3950.88, "end": 3952.8399999999997, "text": " And for each of them, you have a different margin,", "tokens": [50364, 467, 311, 406, 4725, 257, 665, 551, 13, 50484, 50484, 440, 28822, 307, 1101, 294, 257, 636, 11, 570, 309, 445, 1619, 11, 50608, 50608, 731, 11, 286, 445, 528, 309, 281, 312, 4833, 538, 512, 2158, 13, 50808, 50808, 286, 500, 380, 1127, 577, 709, 13, 50944, 50944, 286, 976, 291, 1071, 1254, 295, 264, 28822, 4470, 294, 264, 1791, 11, 51148, 51148, 689, 291, 362, 257, 2408, 670, 288, 13, 51376, 51376, 407, 2602, 295, 445, 1940, 264, 881, 51454, 51454, 295, 604, 18424, 1867, 294, 264, 28822, 11, 51598, 51598, 291, 747, 439, 6338, 11, 293, 291, 2408, 670, 439, 295, 552, 13, 51728, 51728, 400, 337, 1184, 295, 552, 11, 291, 362, 257, 819, 10270, 11, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.21106464632095828, "compression_ratio": 1.7061224489795919, "no_speech_prob": 1.9831766621791758e-05}, {"id": 1362, "seek": 395284, "start": 3952.84, "end": 3956.48, "text": " on the yi and the yi bar.", "tokens": [50364, 322, 264, 288, 72, 293, 264, 288, 72, 2159, 13, 50546, 50546, 663, 311, 257, 544, 2674, 1254, 13, 50600, 50600, 467, 1062, 312, 544, 5124, 11, 5413, 322, 577, 291, 14722, 309, 13, 50814, 50814, 821, 366, 257, 3840, 295, 1651, 510, 13, 50916, 50916, 407, 700, 11, 456, 366, 257, 1326, 1731, 51064, 51064, 3365, 466, 264, 9469, 260, 13, 51134, 51134, 1144, 321, 1466, 264, 9469, 260, 30, 51194, 51194, 1119, 415, 611, 11, 360, 321, 646, 2365, 456, 30, 51290, 51290, 1119, 415, 257, 48994, 7006, 11, 746, 30, 51442, 51442, 682, 341, 1729, 1389, 11, 572, 13, 51504, 51504, 467, 311, 445, 1011, 5611, 292, 415, 374, 6006, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1777368319236626, "compression_ratio": 1.5889830508474576, "no_speech_prob": 3.479349106783047e-05}, {"id": 1363, "seek": 395284, "start": 3956.48, "end": 3957.56, "text": " That's a more general form.", "tokens": [50364, 322, 264, 288, 72, 293, 264, 288, 72, 2159, 13, 50546, 50546, 663, 311, 257, 544, 2674, 1254, 13, 50600, 50600, 467, 1062, 312, 544, 5124, 11, 5413, 322, 577, 291, 14722, 309, 13, 50814, 50814, 821, 366, 257, 3840, 295, 1651, 510, 13, 50916, 50916, 407, 700, 11, 456, 366, 257, 1326, 1731, 51064, 51064, 3365, 466, 264, 9469, 260, 13, 51134, 51134, 1144, 321, 1466, 264, 9469, 260, 30, 51194, 51194, 1119, 415, 611, 11, 360, 321, 646, 2365, 456, 30, 51290, 51290, 1119, 415, 257, 48994, 7006, 11, 746, 30, 51442, 51442, 682, 341, 1729, 1389, 11, 572, 13, 51504, 51504, 467, 311, 445, 1011, 5611, 292, 415, 374, 6006, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1777368319236626, "compression_ratio": 1.5889830508474576, "no_speech_prob": 3.479349106783047e-05}, {"id": 1364, "seek": 395284, "start": 3957.56, "end": 3961.84, "text": " It might be more expensive, depending on how you compute it.", "tokens": [50364, 322, 264, 288, 72, 293, 264, 288, 72, 2159, 13, 50546, 50546, 663, 311, 257, 544, 2674, 1254, 13, 50600, 50600, 467, 1062, 312, 544, 5124, 11, 5413, 322, 577, 291, 14722, 309, 13, 50814, 50814, 821, 366, 257, 3840, 295, 1651, 510, 13, 50916, 50916, 407, 700, 11, 456, 366, 257, 1326, 1731, 51064, 51064, 3365, 466, 264, 9469, 260, 13, 51134, 51134, 1144, 321, 1466, 264, 9469, 260, 30, 51194, 51194, 1119, 415, 611, 11, 360, 321, 646, 2365, 456, 30, 51290, 51290, 1119, 415, 257, 48994, 7006, 11, 746, 30, 51442, 51442, 682, 341, 1729, 1389, 11, 572, 13, 51504, 51504, 467, 311, 445, 1011, 5611, 292, 415, 374, 6006, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1777368319236626, "compression_ratio": 1.5889830508474576, "no_speech_prob": 3.479349106783047e-05}, {"id": 1365, "seek": 395284, "start": 3961.84, "end": 3963.88, "text": " There are a bunch of questions here.", "tokens": [50364, 322, 264, 288, 72, 293, 264, 288, 72, 2159, 13, 50546, 50546, 663, 311, 257, 544, 2674, 1254, 13, 50600, 50600, 467, 1062, 312, 544, 5124, 11, 5413, 322, 577, 291, 14722, 309, 13, 50814, 50814, 821, 366, 257, 3840, 295, 1651, 510, 13, 50916, 50916, 407, 700, 11, 456, 366, 257, 1326, 1731, 51064, 51064, 3365, 466, 264, 9469, 260, 13, 51134, 51134, 1144, 321, 1466, 264, 9469, 260, 30, 51194, 51194, 1119, 415, 611, 11, 360, 321, 646, 2365, 456, 30, 51290, 51290, 1119, 415, 257, 48994, 7006, 11, 746, 30, 51442, 51442, 682, 341, 1729, 1389, 11, 572, 13, 51504, 51504, 467, 311, 445, 1011, 5611, 292, 415, 374, 6006, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1777368319236626, "compression_ratio": 1.5889830508474576, "no_speech_prob": 3.479349106783047e-05}, {"id": 1366, "seek": 395284, "start": 3963.88, "end": 3966.84, "text": " So first, there are a few students", "tokens": [50364, 322, 264, 288, 72, 293, 264, 288, 72, 2159, 13, 50546, 50546, 663, 311, 257, 544, 2674, 1254, 13, 50600, 50600, 467, 1062, 312, 544, 5124, 11, 5413, 322, 577, 291, 14722, 309, 13, 50814, 50814, 821, 366, 257, 3840, 295, 1651, 510, 13, 50916, 50916, 407, 700, 11, 456, 366, 257, 1326, 1731, 51064, 51064, 3365, 466, 264, 9469, 260, 13, 51134, 51134, 1144, 321, 1466, 264, 9469, 260, 30, 51194, 51194, 1119, 415, 611, 11, 360, 321, 646, 2365, 456, 30, 51290, 51290, 1119, 415, 257, 48994, 7006, 11, 746, 30, 51442, 51442, 682, 341, 1729, 1389, 11, 572, 13, 51504, 51504, 467, 311, 445, 1011, 5611, 292, 415, 374, 6006, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1777368319236626, "compression_ratio": 1.5889830508474576, "no_speech_prob": 3.479349106783047e-05}, {"id": 1367, "seek": 395284, "start": 3966.84, "end": 3968.2400000000002, "text": " asking about the segmenter.", "tokens": [50364, 322, 264, 288, 72, 293, 264, 288, 72, 2159, 13, 50546, 50546, 663, 311, 257, 544, 2674, 1254, 13, 50600, 50600, 467, 1062, 312, 544, 5124, 11, 5413, 322, 577, 291, 14722, 309, 13, 50814, 50814, 821, 366, 257, 3840, 295, 1651, 510, 13, 50916, 50916, 407, 700, 11, 456, 366, 257, 1326, 1731, 51064, 51064, 3365, 466, 264, 9469, 260, 13, 51134, 51134, 1144, 321, 1466, 264, 9469, 260, 30, 51194, 51194, 1119, 415, 611, 11, 360, 321, 646, 2365, 456, 30, 51290, 51290, 1119, 415, 257, 48994, 7006, 11, 746, 30, 51442, 51442, 682, 341, 1729, 1389, 11, 572, 13, 51504, 51504, 467, 311, 445, 1011, 5611, 292, 415, 374, 6006, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1777368319236626, "compression_ratio": 1.5889830508474576, "no_speech_prob": 3.479349106783047e-05}, {"id": 1368, "seek": 395284, "start": 3968.2400000000002, "end": 3969.44, "text": " Do we learn the segmenter?", "tokens": [50364, 322, 264, 288, 72, 293, 264, 288, 72, 2159, 13, 50546, 50546, 663, 311, 257, 544, 2674, 1254, 13, 50600, 50600, 467, 1062, 312, 544, 5124, 11, 5413, 322, 577, 291, 14722, 309, 13, 50814, 50814, 821, 366, 257, 3840, 295, 1651, 510, 13, 50916, 50916, 407, 700, 11, 456, 366, 257, 1326, 1731, 51064, 51064, 3365, 466, 264, 9469, 260, 13, 51134, 51134, 1144, 321, 1466, 264, 9469, 260, 30, 51194, 51194, 1119, 415, 611, 11, 360, 321, 646, 2365, 456, 30, 51290, 51290, 1119, 415, 257, 48994, 7006, 11, 746, 30, 51442, 51442, 682, 341, 1729, 1389, 11, 572, 13, 51504, 51504, 467, 311, 445, 1011, 5611, 292, 415, 374, 6006, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1777368319236626, "compression_ratio": 1.5889830508474576, "no_speech_prob": 3.479349106783047e-05}, {"id": 1369, "seek": 395284, "start": 3969.44, "end": 3971.36, "text": " Is he also, do we back prop there?", "tokens": [50364, 322, 264, 288, 72, 293, 264, 288, 72, 2159, 13, 50546, 50546, 663, 311, 257, 544, 2674, 1254, 13, 50600, 50600, 467, 1062, 312, 544, 5124, 11, 5413, 322, 577, 291, 14722, 309, 13, 50814, 50814, 821, 366, 257, 3840, 295, 1651, 510, 13, 50916, 50916, 407, 700, 11, 456, 366, 257, 1326, 1731, 51064, 51064, 3365, 466, 264, 9469, 260, 13, 51134, 51134, 1144, 321, 1466, 264, 9469, 260, 30, 51194, 51194, 1119, 415, 611, 11, 360, 321, 646, 2365, 456, 30, 51290, 51290, 1119, 415, 257, 48994, 7006, 11, 746, 30, 51442, 51442, 682, 341, 1729, 1389, 11, 572, 13, 51504, 51504, 467, 311, 445, 1011, 5611, 292, 415, 374, 6006, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1777368319236626, "compression_ratio": 1.5889830508474576, "no_speech_prob": 3.479349106783047e-05}, {"id": 1370, "seek": 395284, "start": 3971.36, "end": 3974.4, "text": " Is he a latent variable, something?", "tokens": [50364, 322, 264, 288, 72, 293, 264, 288, 72, 2159, 13, 50546, 50546, 663, 311, 257, 544, 2674, 1254, 13, 50600, 50600, 467, 1062, 312, 544, 5124, 11, 5413, 322, 577, 291, 14722, 309, 13, 50814, 50814, 821, 366, 257, 3840, 295, 1651, 510, 13, 50916, 50916, 407, 700, 11, 456, 366, 257, 1326, 1731, 51064, 51064, 3365, 466, 264, 9469, 260, 13, 51134, 51134, 1144, 321, 1466, 264, 9469, 260, 30, 51194, 51194, 1119, 415, 611, 11, 360, 321, 646, 2365, 456, 30, 51290, 51290, 1119, 415, 257, 48994, 7006, 11, 746, 30, 51442, 51442, 682, 341, 1729, 1389, 11, 572, 13, 51504, 51504, 467, 311, 445, 1011, 5611, 292, 415, 374, 6006, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1777368319236626, "compression_ratio": 1.5889830508474576, "no_speech_prob": 3.479349106783047e-05}, {"id": 1371, "seek": 395284, "start": 3974.4, "end": 3975.6400000000003, "text": " In this particular case, no.", "tokens": [50364, 322, 264, 288, 72, 293, 264, 288, 72, 2159, 13, 50546, 50546, 663, 311, 257, 544, 2674, 1254, 13, 50600, 50600, 467, 1062, 312, 544, 5124, 11, 5413, 322, 577, 291, 14722, 309, 13, 50814, 50814, 821, 366, 257, 3840, 295, 1651, 510, 13, 50916, 50916, 407, 700, 11, 456, 366, 257, 1326, 1731, 51064, 51064, 3365, 466, 264, 9469, 260, 13, 51134, 51134, 1144, 321, 1466, 264, 9469, 260, 30, 51194, 51194, 1119, 415, 611, 11, 360, 321, 646, 2365, 456, 30, 51290, 51290, 1119, 415, 257, 48994, 7006, 11, 746, 30, 51442, 51442, 682, 341, 1729, 1389, 11, 572, 13, 51504, 51504, 467, 311, 445, 1011, 5611, 292, 415, 374, 6006, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1777368319236626, "compression_ratio": 1.5889830508474576, "no_speech_prob": 3.479349106783047e-05}, {"id": 1372, "seek": 395284, "start": 3975.6400000000003, "end": 3981.28, "text": " It's just handcrafted heuristics.", "tokens": [50364, 322, 264, 288, 72, 293, 264, 288, 72, 2159, 13, 50546, 50546, 663, 311, 257, 544, 2674, 1254, 13, 50600, 50600, 467, 1062, 312, 544, 5124, 11, 5413, 322, 577, 291, 14722, 309, 13, 50814, 50814, 821, 366, 257, 3840, 295, 1651, 510, 13, 50916, 50916, 407, 700, 11, 456, 366, 257, 1326, 1731, 51064, 51064, 3365, 466, 264, 9469, 260, 13, 51134, 51134, 1144, 321, 1466, 264, 9469, 260, 30, 51194, 51194, 1119, 415, 611, 11, 360, 321, 646, 2365, 456, 30, 51290, 51290, 1119, 415, 257, 48994, 7006, 11, 746, 30, 51442, 51442, 682, 341, 1729, 1389, 11, 572, 13, 51504, 51504, 467, 311, 445, 1011, 5611, 292, 415, 374, 6006, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1777368319236626, "compression_ratio": 1.5889830508474576, "no_speech_prob": 3.479349106783047e-05}, {"id": 1373, "seek": 398128, "start": 3981.28, "end": 3984.5600000000004, "text": " But you could imagine building a differentiable segmenter,", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1374, "seek": 398128, "start": 3984.5600000000004, "end": 3986.1200000000003, "text": " and then back propagating all the way through it.", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1375, "seek": 398128, "start": 3986.1200000000003, "end": 3986.6800000000003, "text": " Yes.", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1376, "seek": 398128, "start": 3986.6800000000003, "end": 3988.2000000000003, "text": " This was actually one of the original plans", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1377, "seek": 398128, "start": 3988.2000000000003, "end": 3990.0400000000004, "text": " when we built this thing in the mid-90s.", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1378, "seek": 398128, "start": 3990.0400000000004, "end": 3992.1200000000003, "text": " We never got to it.", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1379, "seek": 398128, "start": 3992.1200000000003, "end": 3993.6000000000004, "text": " And the reason we never got to it", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1380, "seek": 398128, "start": 3993.6000000000004, "end": 3995.28, "text": " is because there is another approach", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1381, "seek": 398128, "start": 3995.28, "end": 3998.44, "text": " to character recognition, which is the sliding window", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1382, "seek": 398128, "start": 3998.44, "end": 3999.6800000000003, "text": " approach, which I explained.", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1383, "seek": 398128, "start": 3999.6800000000003, "end": 4001.0, "text": " So you just take the input.", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1384, "seek": 398128, "start": 4001.0, "end": 4002.1600000000003, "text": " You never segment it.", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1385, "seek": 398128, "start": 4002.1600000000003, "end": 4005.36, "text": " You just apply the neural net to every location on the input,", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1386, "seek": 398128, "start": 4005.36, "end": 4006.5600000000004, "text": " and you record the output.", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1387, "seek": 398128, "start": 4006.5600000000004, "end": 4008.7200000000003, "text": " And then you do structure prediction on top of that.", "tokens": [50364, 583, 291, 727, 3811, 2390, 257, 819, 9364, 9469, 260, 11, 50528, 50528, 293, 550, 646, 12425, 990, 439, 264, 636, 807, 309, 13, 50606, 50606, 1079, 13, 50634, 50634, 639, 390, 767, 472, 295, 264, 3380, 5482, 50710, 50710, 562, 321, 3094, 341, 551, 294, 264, 2062, 12, 7771, 82, 13, 50802, 50802, 492, 1128, 658, 281, 309, 13, 50906, 50906, 400, 264, 1778, 321, 1128, 658, 281, 309, 50980, 50980, 307, 570, 456, 307, 1071, 3109, 51064, 51064, 281, 2517, 11150, 11, 597, 307, 264, 21169, 4910, 51222, 51222, 3109, 11, 597, 286, 8825, 13, 51284, 51284, 407, 291, 445, 747, 264, 4846, 13, 51350, 51350, 509, 1128, 9469, 309, 13, 51408, 51408, 509, 445, 3079, 264, 18161, 2533, 281, 633, 4914, 322, 264, 4846, 11, 51568, 51568, 293, 291, 2136, 264, 5598, 13, 51628, 51628, 400, 550, 291, 360, 3877, 17630, 322, 1192, 295, 300, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.16357748492870455, "compression_ratio": 1.7848101265822784, "no_speech_prob": 1.3844261957274284e-05}, {"id": 1388, "seek": 400872, "start": 4008.72, "end": 4012.3599999999997, "text": " So now you have to have some sort of sequence models that", "tokens": [50364, 407, 586, 291, 362, 281, 362, 512, 1333, 295, 8310, 5245, 300, 50546, 50546, 5112, 291, 11, 498, 286, 11441, 805, 11, 805, 11, 805, 8247, 11, 8247, 11, 568, 11, 1017, 11, 1017, 11, 1017, 11, 51016, 51016, 1017, 11, 309, 311, 767, 805, 11, 1017, 13, 51086, 51086, 440, 8247, 293, 264, 568, 1936, 366, 637, 24274, 13, 51228, 51228, 407, 291, 576, 362, 257, 22317, 300, 576, 13330, 11, 51470, 51470, 437, 366, 3006, 21267, 295, 4342, 322, 264, 5598, 30, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.15214796499772507, "compression_ratio": 1.5263157894736843, "no_speech_prob": 6.338467301247874e-06}, {"id": 1389, "seek": 400872, "start": 4012.3599999999997, "end": 4021.7599999999998, "text": " tells you, if I observe 3, 3, 3 blank, blank, 2, 4, 4, 4,", "tokens": [50364, 407, 586, 291, 362, 281, 362, 512, 1333, 295, 8310, 5245, 300, 50546, 50546, 5112, 291, 11, 498, 286, 11441, 805, 11, 805, 11, 805, 8247, 11, 8247, 11, 568, 11, 1017, 11, 1017, 11, 1017, 11, 51016, 51016, 1017, 11, 309, 311, 767, 805, 11, 1017, 13, 51086, 51086, 440, 8247, 293, 264, 568, 1936, 366, 637, 24274, 13, 51228, 51228, 407, 291, 576, 362, 257, 22317, 300, 576, 13330, 11, 51470, 51470, 437, 366, 3006, 21267, 295, 4342, 322, 264, 5598, 30, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.15214796499772507, "compression_ratio": 1.5263157894736843, "no_speech_prob": 6.338467301247874e-06}, {"id": 1390, "seek": 400872, "start": 4021.7599999999998, "end": 4023.16, "text": " 4, it's actually 3, 4.", "tokens": [50364, 407, 586, 291, 362, 281, 362, 512, 1333, 295, 8310, 5245, 300, 50546, 50546, 5112, 291, 11, 498, 286, 11441, 805, 11, 805, 11, 805, 8247, 11, 8247, 11, 568, 11, 1017, 11, 1017, 11, 1017, 11, 51016, 51016, 1017, 11, 309, 311, 767, 805, 11, 1017, 13, 51086, 51086, 440, 8247, 293, 264, 568, 1936, 366, 637, 24274, 13, 51228, 51228, 407, 291, 576, 362, 257, 22317, 300, 576, 13330, 11, 51470, 51470, 437, 366, 3006, 21267, 295, 4342, 322, 264, 5598, 30, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.15214796499772507, "compression_ratio": 1.5263157894736843, "no_speech_prob": 6.338467301247874e-06}, {"id": 1391, "seek": 400872, "start": 4023.16, "end": 4026.0, "text": " The blank and the 2 basically are spurious.", "tokens": [50364, 407, 586, 291, 362, 281, 362, 512, 1333, 295, 8310, 5245, 300, 50546, 50546, 5112, 291, 11, 498, 286, 11441, 805, 11, 805, 11, 805, 8247, 11, 8247, 11, 568, 11, 1017, 11, 1017, 11, 1017, 11, 51016, 51016, 1017, 11, 309, 311, 767, 805, 11, 1017, 13, 51086, 51086, 440, 8247, 293, 264, 568, 1936, 366, 637, 24274, 13, 51228, 51228, 407, 291, 576, 362, 257, 22317, 300, 576, 13330, 11, 51470, 51470, 437, 366, 3006, 21267, 295, 4342, 322, 264, 5598, 30, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.15214796499772507, "compression_ratio": 1.5263157894736843, "no_speech_prob": 6.338467301247874e-06}, {"id": 1392, "seek": 400872, "start": 4026.0, "end": 4030.8399999999997, "text": " So you would have a grammar that would indicate,", "tokens": [50364, 407, 586, 291, 362, 281, 362, 512, 1333, 295, 8310, 5245, 300, 50546, 50546, 5112, 291, 11, 498, 286, 11441, 805, 11, 805, 11, 805, 8247, 11, 8247, 11, 568, 11, 1017, 11, 1017, 11, 1017, 11, 51016, 51016, 1017, 11, 309, 311, 767, 805, 11, 1017, 13, 51086, 51086, 440, 8247, 293, 264, 568, 1936, 366, 637, 24274, 13, 51228, 51228, 407, 291, 576, 362, 257, 22317, 300, 576, 13330, 11, 51470, 51470, 437, 366, 3006, 21267, 295, 4342, 322, 264, 5598, 30, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.15214796499772507, "compression_ratio": 1.5263157894736843, "no_speech_prob": 6.338467301247874e-06}, {"id": 1393, "seek": 400872, "start": 4030.8399999999997, "end": 4035.4399999999996, "text": " what are correct combinations of characters on the output?", "tokens": [50364, 407, 586, 291, 362, 281, 362, 512, 1333, 295, 8310, 5245, 300, 50546, 50546, 5112, 291, 11, 498, 286, 11441, 805, 11, 805, 11, 805, 8247, 11, 8247, 11, 568, 11, 1017, 11, 1017, 11, 1017, 11, 51016, 51016, 1017, 11, 309, 311, 767, 805, 11, 1017, 13, 51086, 51086, 440, 8247, 293, 264, 568, 1936, 366, 637, 24274, 13, 51228, 51228, 407, 291, 576, 362, 257, 22317, 300, 576, 13330, 11, 51470, 51470, 437, 366, 3006, 21267, 295, 4342, 322, 264, 5598, 30, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.15214796499772507, "compression_ratio": 1.5263157894736843, "no_speech_prob": 6.338467301247874e-06}, {"id": 1394, "seek": 403544, "start": 4035.44, "end": 4038.96, "text": " And you would do this to finding the shortest paths in the graph.", "tokens": [50364, 400, 291, 576, 360, 341, 281, 5006, 264, 31875, 14518, 294, 264, 4295, 13, 50540, 50540, 407, 264, 4295, 322, 264, 2767, 307, 10833, 538, 264, 9469, 260, 11, 50726, 50726, 307, 309, 30, 50752, 50752, 12753, 13, 50798, 50798, 440, 472, 365, 264, 472, 3818, 11, 411, 732, 47579, 11, 420, 732, 47579, 11, 472, 3818, 11, 50974, 50974, 472, 3818, 13, 51022, 51022, 7010, 13, 51086, 51086, 2264, 13, 51178, 51178, 509, 727, 519, 295, 341, 382, 257, 2199, 1254, 295, 4295, 18161, 2533, 11, 51320, 51320, 420, 257, 2685, 1254, 295, 4295, 18161, 36170, 11, 51428, 51428, 689, 341, 2302, 2452, 2539, 9482, 9258, 26192, 24877, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.24579255770793004, "compression_ratio": 1.72, "no_speech_prob": 1.5204944247670937e-05}, {"id": 1395, "seek": 403544, "start": 4038.96, "end": 4042.68, "text": " So the graph on the bottom is generated by the segmenter,", "tokens": [50364, 400, 291, 576, 360, 341, 281, 5006, 264, 31875, 14518, 294, 264, 4295, 13, 50540, 50540, 407, 264, 4295, 322, 264, 2767, 307, 10833, 538, 264, 9469, 260, 11, 50726, 50726, 307, 309, 30, 50752, 50752, 12753, 13, 50798, 50798, 440, 472, 365, 264, 472, 3818, 11, 411, 732, 47579, 11, 420, 732, 47579, 11, 472, 3818, 11, 50974, 50974, 472, 3818, 13, 51022, 51022, 7010, 13, 51086, 51086, 2264, 13, 51178, 51178, 509, 727, 519, 295, 341, 382, 257, 2199, 1254, 295, 4295, 18161, 2533, 11, 51320, 51320, 420, 257, 2685, 1254, 295, 4295, 18161, 36170, 11, 51428, 51428, 689, 341, 2302, 2452, 2539, 9482, 9258, 26192, 24877, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.24579255770793004, "compression_ratio": 1.72, "no_speech_prob": 1.5204944247670937e-05}, {"id": 1396, "seek": 403544, "start": 4042.68, "end": 4043.2000000000003, "text": " is it?", "tokens": [50364, 400, 291, 576, 360, 341, 281, 5006, 264, 31875, 14518, 294, 264, 4295, 13, 50540, 50540, 407, 264, 4295, 322, 264, 2767, 307, 10833, 538, 264, 9469, 260, 11, 50726, 50726, 307, 309, 30, 50752, 50752, 12753, 13, 50798, 50798, 440, 472, 365, 264, 472, 3818, 11, 411, 732, 47579, 11, 420, 732, 47579, 11, 472, 3818, 11, 50974, 50974, 472, 3818, 13, 51022, 51022, 7010, 13, 51086, 51086, 2264, 13, 51178, 51178, 509, 727, 519, 295, 341, 382, 257, 2199, 1254, 295, 4295, 18161, 2533, 11, 51320, 51320, 420, 257, 2685, 1254, 295, 4295, 18161, 36170, 11, 51428, 51428, 689, 341, 2302, 2452, 2539, 9482, 9258, 26192, 24877, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.24579255770793004, "compression_ratio": 1.72, "no_speech_prob": 1.5204944247670937e-05}, {"id": 1397, "seek": 403544, "start": 4043.2000000000003, "end": 4044.12, "text": " Correct.", "tokens": [50364, 400, 291, 576, 360, 341, 281, 5006, 264, 31875, 14518, 294, 264, 4295, 13, 50540, 50540, 407, 264, 4295, 322, 264, 2767, 307, 10833, 538, 264, 9469, 260, 11, 50726, 50726, 307, 309, 30, 50752, 50752, 12753, 13, 50798, 50798, 440, 472, 365, 264, 472, 3818, 11, 411, 732, 47579, 11, 420, 732, 47579, 11, 472, 3818, 11, 50974, 50974, 472, 3818, 13, 51022, 51022, 7010, 13, 51086, 51086, 2264, 13, 51178, 51178, 509, 727, 519, 295, 341, 382, 257, 2199, 1254, 295, 4295, 18161, 2533, 11, 51320, 51320, 420, 257, 2685, 1254, 295, 4295, 18161, 36170, 11, 51428, 51428, 689, 341, 2302, 2452, 2539, 9482, 9258, 26192, 24877, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.24579255770793004, "compression_ratio": 1.72, "no_speech_prob": 1.5204944247670937e-05}, {"id": 1398, "seek": 403544, "start": 4044.12, "end": 4047.64, "text": " The one with the one hop, like two hops, or two hops, one hop,", "tokens": [50364, 400, 291, 576, 360, 341, 281, 5006, 264, 31875, 14518, 294, 264, 4295, 13, 50540, 50540, 407, 264, 4295, 322, 264, 2767, 307, 10833, 538, 264, 9469, 260, 11, 50726, 50726, 307, 309, 30, 50752, 50752, 12753, 13, 50798, 50798, 440, 472, 365, 264, 472, 3818, 11, 411, 732, 47579, 11, 420, 732, 47579, 11, 472, 3818, 11, 50974, 50974, 472, 3818, 13, 51022, 51022, 7010, 13, 51086, 51086, 2264, 13, 51178, 51178, 509, 727, 519, 295, 341, 382, 257, 2199, 1254, 295, 4295, 18161, 2533, 11, 51320, 51320, 420, 257, 2685, 1254, 295, 4295, 18161, 36170, 11, 51428, 51428, 689, 341, 2302, 2452, 2539, 9482, 9258, 26192, 24877, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.24579255770793004, "compression_ratio": 1.72, "no_speech_prob": 1.5204944247670937e-05}, {"id": 1399, "seek": 403544, "start": 4047.64, "end": 4048.6, "text": " one hop.", "tokens": [50364, 400, 291, 576, 360, 341, 281, 5006, 264, 31875, 14518, 294, 264, 4295, 13, 50540, 50540, 407, 264, 4295, 322, 264, 2767, 307, 10833, 538, 264, 9469, 260, 11, 50726, 50726, 307, 309, 30, 50752, 50752, 12753, 13, 50798, 50798, 440, 472, 365, 264, 472, 3818, 11, 411, 732, 47579, 11, 420, 732, 47579, 11, 472, 3818, 11, 50974, 50974, 472, 3818, 13, 51022, 51022, 7010, 13, 51086, 51086, 2264, 13, 51178, 51178, 509, 727, 519, 295, 341, 382, 257, 2199, 1254, 295, 4295, 18161, 2533, 11, 51320, 51320, 420, 257, 2685, 1254, 295, 4295, 18161, 36170, 11, 51428, 51428, 689, 341, 2302, 2452, 2539, 9482, 9258, 26192, 24877, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.24579255770793004, "compression_ratio": 1.72, "no_speech_prob": 1.5204944247670937e-05}, {"id": 1400, "seek": 403544, "start": 4048.6, "end": 4049.88, "text": " Yep.", "tokens": [50364, 400, 291, 576, 360, 341, 281, 5006, 264, 31875, 14518, 294, 264, 4295, 13, 50540, 50540, 407, 264, 4295, 322, 264, 2767, 307, 10833, 538, 264, 9469, 260, 11, 50726, 50726, 307, 309, 30, 50752, 50752, 12753, 13, 50798, 50798, 440, 472, 365, 264, 472, 3818, 11, 411, 732, 47579, 11, 420, 732, 47579, 11, 472, 3818, 11, 50974, 50974, 472, 3818, 13, 51022, 51022, 7010, 13, 51086, 51086, 2264, 13, 51178, 51178, 509, 727, 519, 295, 341, 382, 257, 2199, 1254, 295, 4295, 18161, 2533, 11, 51320, 51320, 420, 257, 2685, 1254, 295, 4295, 18161, 36170, 11, 51428, 51428, 689, 341, 2302, 2452, 2539, 9482, 9258, 26192, 24877, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.24579255770793004, "compression_ratio": 1.72, "no_speech_prob": 1.5204944247670937e-05}, {"id": 1401, "seek": 403544, "start": 4049.88, "end": 4051.7200000000003, "text": " OK.", "tokens": [50364, 400, 291, 576, 360, 341, 281, 5006, 264, 31875, 14518, 294, 264, 4295, 13, 50540, 50540, 407, 264, 4295, 322, 264, 2767, 307, 10833, 538, 264, 9469, 260, 11, 50726, 50726, 307, 309, 30, 50752, 50752, 12753, 13, 50798, 50798, 440, 472, 365, 264, 472, 3818, 11, 411, 732, 47579, 11, 420, 732, 47579, 11, 472, 3818, 11, 50974, 50974, 472, 3818, 13, 51022, 51022, 7010, 13, 51086, 51086, 2264, 13, 51178, 51178, 509, 727, 519, 295, 341, 382, 257, 2199, 1254, 295, 4295, 18161, 2533, 11, 51320, 51320, 420, 257, 2685, 1254, 295, 4295, 18161, 36170, 11, 51428, 51428, 689, 341, 2302, 2452, 2539, 9482, 9258, 26192, 24877, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.24579255770793004, "compression_ratio": 1.72, "no_speech_prob": 1.5204944247670937e-05}, {"id": 1402, "seek": 403544, "start": 4051.7200000000003, "end": 4054.56, "text": " You could think of this as a simple form of graph neural net,", "tokens": [50364, 400, 291, 576, 360, 341, 281, 5006, 264, 31875, 14518, 294, 264, 4295, 13, 50540, 50540, 407, 264, 4295, 322, 264, 2767, 307, 10833, 538, 264, 9469, 260, 11, 50726, 50726, 307, 309, 30, 50752, 50752, 12753, 13, 50798, 50798, 440, 472, 365, 264, 472, 3818, 11, 411, 732, 47579, 11, 420, 732, 47579, 11, 472, 3818, 11, 50974, 50974, 472, 3818, 13, 51022, 51022, 7010, 13, 51086, 51086, 2264, 13, 51178, 51178, 509, 727, 519, 295, 341, 382, 257, 2199, 1254, 295, 4295, 18161, 2533, 11, 51320, 51320, 420, 257, 2685, 1254, 295, 4295, 18161, 36170, 11, 51428, 51428, 689, 341, 2302, 2452, 2539, 9482, 9258, 26192, 24877, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.24579255770793004, "compression_ratio": 1.72, "no_speech_prob": 1.5204944247670937e-05}, {"id": 1403, "seek": 403544, "start": 4054.56, "end": 4056.7200000000003, "text": " or a specific form of graph neural nets,", "tokens": [50364, 400, 291, 576, 360, 341, 281, 5006, 264, 31875, 14518, 294, 264, 4295, 13, 50540, 50540, 407, 264, 4295, 322, 264, 2767, 307, 10833, 538, 264, 9469, 260, 11, 50726, 50726, 307, 309, 30, 50752, 50752, 12753, 13, 50798, 50798, 440, 472, 365, 264, 472, 3818, 11, 411, 732, 47579, 11, 420, 732, 47579, 11, 472, 3818, 11, 50974, 50974, 472, 3818, 13, 51022, 51022, 7010, 13, 51086, 51086, 2264, 13, 51178, 51178, 509, 727, 519, 295, 341, 382, 257, 2199, 1254, 295, 4295, 18161, 2533, 11, 51320, 51320, 420, 257, 2685, 1254, 295, 4295, 18161, 36170, 11, 51428, 51428, 689, 341, 2302, 2452, 2539, 9482, 9258, 26192, 24877, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.24579255770793004, "compression_ratio": 1.72, "no_speech_prob": 1.5204944247670937e-05}, {"id": 1404, "seek": 403544, "start": 4056.7200000000003, "end": 4063.52, "text": " where this entire deep learning architecture manipulates graphs", "tokens": [50364, 400, 291, 576, 360, 341, 281, 5006, 264, 31875, 14518, 294, 264, 4295, 13, 50540, 50540, 407, 264, 4295, 322, 264, 2767, 307, 10833, 538, 264, 9469, 260, 11, 50726, 50726, 307, 309, 30, 50752, 50752, 12753, 13, 50798, 50798, 440, 472, 365, 264, 472, 3818, 11, 411, 732, 47579, 11, 420, 732, 47579, 11, 472, 3818, 11, 50974, 50974, 472, 3818, 13, 51022, 51022, 7010, 13, 51086, 51086, 2264, 13, 51178, 51178, 509, 727, 519, 295, 341, 382, 257, 2199, 1254, 295, 4295, 18161, 2533, 11, 51320, 51320, 420, 257, 2685, 1254, 295, 4295, 18161, 36170, 11, 51428, 51428, 689, 341, 2302, 2452, 2539, 9482, 9258, 26192, 24877, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.24579255770793004, "compression_ratio": 1.72, "no_speech_prob": 1.5204944247670937e-05}, {"id": 1405, "seek": 406352, "start": 4063.52, "end": 4069.92, "text": " instead of tensors as its way of representing inputs, or states.", "tokens": [50364, 2602, 295, 10688, 830, 382, 1080, 636, 295, 13460, 15743, 11, 420, 4368, 13, 50684, 50684, 407, 519, 295, 341, 382, 257, 2120, 388, 11167, 9482, 11, 50796, 50796, 689, 264, 4368, 366, 24877, 11, 366, 25339, 770, 24877, 13, 50986, 50986, 400, 550, 291, 393, 362, 16679, 510, 300, 4523, 4295, 51086, 51086, 666, 661, 24877, 13, 51168, 51168, 492, 1143, 281, 818, 613, 4295, 4088, 433, 13, 51250, 51250, 682, 1186, 11, 341, 307, 1219, 257, 4295, 31782, 3209, 13, 51480, 51480, 407, 341, 307, 490, 22383, 13, 51554, 51554, 639, 307, 406, 5162, 13, 51674, 51674, 400, 294, 1186, 11, 22690, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.19210703438575114, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93794003786752e-06}, {"id": 1406, "seek": 406352, "start": 4069.92, "end": 4072.16, "text": " So think of this as a multilayer architecture,", "tokens": [50364, 2602, 295, 10688, 830, 382, 1080, 636, 295, 13460, 15743, 11, 420, 4368, 13, 50684, 50684, 407, 519, 295, 341, 382, 257, 2120, 388, 11167, 9482, 11, 50796, 50796, 689, 264, 4368, 366, 24877, 11, 366, 25339, 770, 24877, 13, 50986, 50986, 400, 550, 291, 393, 362, 16679, 510, 300, 4523, 4295, 51086, 51086, 666, 661, 24877, 13, 51168, 51168, 492, 1143, 281, 818, 613, 4295, 4088, 433, 13, 51250, 51250, 682, 1186, 11, 341, 307, 1219, 257, 4295, 31782, 3209, 13, 51480, 51480, 407, 341, 307, 490, 22383, 13, 51554, 51554, 639, 307, 406, 5162, 13, 51674, 51674, 400, 294, 1186, 11, 22690, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.19210703438575114, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93794003786752e-06}, {"id": 1407, "seek": 406352, "start": 4072.16, "end": 4075.96, "text": " where the states are graphs, are annotated graphs.", "tokens": [50364, 2602, 295, 10688, 830, 382, 1080, 636, 295, 13460, 15743, 11, 420, 4368, 13, 50684, 50684, 407, 519, 295, 341, 382, 257, 2120, 388, 11167, 9482, 11, 50796, 50796, 689, 264, 4368, 366, 24877, 11, 366, 25339, 770, 24877, 13, 50986, 50986, 400, 550, 291, 393, 362, 16679, 510, 300, 4523, 4295, 51086, 51086, 666, 661, 24877, 13, 51168, 51168, 492, 1143, 281, 818, 613, 4295, 4088, 433, 13, 51250, 51250, 682, 1186, 11, 341, 307, 1219, 257, 4295, 31782, 3209, 13, 51480, 51480, 407, 341, 307, 490, 22383, 13, 51554, 51554, 639, 307, 406, 5162, 13, 51674, 51674, 400, 294, 1186, 11, 22690, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.19210703438575114, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93794003786752e-06}, {"id": 1408, "seek": 406352, "start": 4075.96, "end": 4077.96, "text": " And then you can have modules here that turns graph", "tokens": [50364, 2602, 295, 10688, 830, 382, 1080, 636, 295, 13460, 15743, 11, 420, 4368, 13, 50684, 50684, 407, 519, 295, 341, 382, 257, 2120, 388, 11167, 9482, 11, 50796, 50796, 689, 264, 4368, 366, 24877, 11, 366, 25339, 770, 24877, 13, 50986, 50986, 400, 550, 291, 393, 362, 16679, 510, 300, 4523, 4295, 51086, 51086, 666, 661, 24877, 13, 51168, 51168, 492, 1143, 281, 818, 613, 4295, 4088, 433, 13, 51250, 51250, 682, 1186, 11, 341, 307, 1219, 257, 4295, 31782, 3209, 13, 51480, 51480, 407, 341, 307, 490, 22383, 13, 51554, 51554, 639, 307, 406, 5162, 13, 51674, 51674, 400, 294, 1186, 11, 22690, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.19210703438575114, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93794003786752e-06}, {"id": 1409, "seek": 406352, "start": 4077.96, "end": 4079.6, "text": " into other graphs.", "tokens": [50364, 2602, 295, 10688, 830, 382, 1080, 636, 295, 13460, 15743, 11, 420, 4368, 13, 50684, 50684, 407, 519, 295, 341, 382, 257, 2120, 388, 11167, 9482, 11, 50796, 50796, 689, 264, 4368, 366, 24877, 11, 366, 25339, 770, 24877, 13, 50986, 50986, 400, 550, 291, 393, 362, 16679, 510, 300, 4523, 4295, 51086, 51086, 666, 661, 24877, 13, 51168, 51168, 492, 1143, 281, 818, 613, 4295, 4088, 433, 13, 51250, 51250, 682, 1186, 11, 341, 307, 1219, 257, 4295, 31782, 3209, 13, 51480, 51480, 407, 341, 307, 490, 22383, 13, 51554, 51554, 639, 307, 406, 5162, 13, 51674, 51674, 400, 294, 1186, 11, 22690, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.19210703438575114, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93794003786752e-06}, {"id": 1410, "seek": 406352, "start": 4079.6, "end": 4081.24, "text": " We used to call these graph transformers.", "tokens": [50364, 2602, 295, 10688, 830, 382, 1080, 636, 295, 13460, 15743, 11, 420, 4368, 13, 50684, 50684, 407, 519, 295, 341, 382, 257, 2120, 388, 11167, 9482, 11, 50796, 50796, 689, 264, 4368, 366, 24877, 11, 366, 25339, 770, 24877, 13, 50986, 50986, 400, 550, 291, 393, 362, 16679, 510, 300, 4523, 4295, 51086, 51086, 666, 661, 24877, 13, 51168, 51168, 492, 1143, 281, 818, 613, 4295, 4088, 433, 13, 51250, 51250, 682, 1186, 11, 341, 307, 1219, 257, 4295, 31782, 3209, 13, 51480, 51480, 407, 341, 307, 490, 22383, 13, 51554, 51554, 639, 307, 406, 5162, 13, 51674, 51674, 400, 294, 1186, 11, 22690, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.19210703438575114, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93794003786752e-06}, {"id": 1411, "seek": 406352, "start": 4081.24, "end": 4085.84, "text": " In fact, this is called a graph transformer network.", "tokens": [50364, 2602, 295, 10688, 830, 382, 1080, 636, 295, 13460, 15743, 11, 420, 4368, 13, 50684, 50684, 407, 519, 295, 341, 382, 257, 2120, 388, 11167, 9482, 11, 50796, 50796, 689, 264, 4368, 366, 24877, 11, 366, 25339, 770, 24877, 13, 50986, 50986, 400, 550, 291, 393, 362, 16679, 510, 300, 4523, 4295, 51086, 51086, 666, 661, 24877, 13, 51168, 51168, 492, 1143, 281, 818, 613, 4295, 4088, 433, 13, 51250, 51250, 682, 1186, 11, 341, 307, 1219, 257, 4295, 31782, 3209, 13, 51480, 51480, 407, 341, 307, 490, 22383, 13, 51554, 51554, 639, 307, 406, 5162, 13, 51674, 51674, 400, 294, 1186, 11, 22690, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.19210703438575114, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93794003786752e-06}, {"id": 1412, "seek": 406352, "start": 4085.84, "end": 4087.32, "text": " So this is from 1997.", "tokens": [50364, 2602, 295, 10688, 830, 382, 1080, 636, 295, 13460, 15743, 11, 420, 4368, 13, 50684, 50684, 407, 519, 295, 341, 382, 257, 2120, 388, 11167, 9482, 11, 50796, 50796, 689, 264, 4368, 366, 24877, 11, 366, 25339, 770, 24877, 13, 50986, 50986, 400, 550, 291, 393, 362, 16679, 510, 300, 4523, 4295, 51086, 51086, 666, 661, 24877, 13, 51168, 51168, 492, 1143, 281, 818, 613, 4295, 4088, 433, 13, 51250, 51250, 682, 1186, 11, 341, 307, 1219, 257, 4295, 31782, 3209, 13, 51480, 51480, 407, 341, 307, 490, 22383, 13, 51554, 51554, 639, 307, 406, 5162, 13, 51674, 51674, 400, 294, 1186, 11, 22690, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.19210703438575114, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93794003786752e-06}, {"id": 1413, "seek": 406352, "start": 4087.32, "end": 4089.72, "text": " This is not recent.", "tokens": [50364, 2602, 295, 10688, 830, 382, 1080, 636, 295, 13460, 15743, 11, 420, 4368, 13, 50684, 50684, 407, 519, 295, 341, 382, 257, 2120, 388, 11167, 9482, 11, 50796, 50796, 689, 264, 4368, 366, 24877, 11, 366, 25339, 770, 24877, 13, 50986, 50986, 400, 550, 291, 393, 362, 16679, 510, 300, 4523, 4295, 51086, 51086, 666, 661, 24877, 13, 51168, 51168, 492, 1143, 281, 818, 613, 4295, 4088, 433, 13, 51250, 51250, 682, 1186, 11, 341, 307, 1219, 257, 4295, 31782, 3209, 13, 51480, 51480, 407, 341, 307, 490, 22383, 13, 51554, 51554, 639, 307, 406, 5162, 13, 51674, 51674, 400, 294, 1186, 11, 22690, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.19210703438575114, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93794003786752e-06}, {"id": 1414, "seek": 406352, "start": 4089.72, "end": 4091.84, "text": " And in fact, 1996.", "tokens": [50364, 2602, 295, 10688, 830, 382, 1080, 636, 295, 13460, 15743, 11, 420, 4368, 13, 50684, 50684, 407, 519, 295, 341, 382, 257, 2120, 388, 11167, 9482, 11, 50796, 50796, 689, 264, 4368, 366, 24877, 11, 366, 25339, 770, 24877, 13, 50986, 50986, 400, 550, 291, 393, 362, 16679, 510, 300, 4523, 4295, 51086, 51086, 666, 661, 24877, 13, 51168, 51168, 492, 1143, 281, 818, 613, 4295, 4088, 433, 13, 51250, 51250, 682, 1186, 11, 341, 307, 1219, 257, 4295, 31782, 3209, 13, 51480, 51480, 407, 341, 307, 490, 22383, 13, 51554, 51554, 639, 307, 406, 5162, 13, 51674, 51674, 400, 294, 1186, 11, 22690, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.19210703438575114, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93794003786752e-06}, {"id": 1415, "seek": 409184, "start": 4091.84, "end": 4094.32, "text": " The first paper is in 1997.", "tokens": [50364, 440, 700, 3035, 307, 294, 22383, 13, 50488, 50488, 400, 550, 729, 393, 312, 11, 382, 938, 382, 264, 636, 291, 14722, 50774, 50774, 729, 13444, 307, 365, 819, 9364, 6828, 50944, 50944, 300, 366, 13075, 1602, 11, 291, 393, 646, 79, 1513, 559, 473, 16235, 51044, 51044, 807, 341, 2302, 551, 13, 51126, 51126, 400, 286, 393, 11698, 577, 291, 360, 341, 294, 341, 1729, 1389, 13, 51300, 51300, 286, 536, 13, 51332, 51332, 1396, 456, 311, 1071, 1168, 11, 597, 286, 815, 406, 51446, 51446, 312, 1075, 281, 1223, 11, 597, 307, 11, 437, 51560, 51560, 366, 264, 12819, 295, 264, 14174, 24877, 30, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16860998327081853, "compression_ratio": 1.625984251968504, "no_speech_prob": 8.662892469146755e-06}, {"id": 1416, "seek": 409184, "start": 4094.32, "end": 4100.04, "text": " And then those can be, as long as the way you compute", "tokens": [50364, 440, 700, 3035, 307, 294, 22383, 13, 50488, 50488, 400, 550, 729, 393, 312, 11, 382, 938, 382, 264, 636, 291, 14722, 50774, 50774, 729, 13444, 307, 365, 819, 9364, 6828, 50944, 50944, 300, 366, 13075, 1602, 11, 291, 393, 646, 79, 1513, 559, 473, 16235, 51044, 51044, 807, 341, 2302, 551, 13, 51126, 51126, 400, 286, 393, 11698, 577, 291, 360, 341, 294, 341, 1729, 1389, 13, 51300, 51300, 286, 536, 13, 51332, 51332, 1396, 456, 311, 1071, 1168, 11, 597, 286, 815, 406, 51446, 51446, 312, 1075, 281, 1223, 11, 597, 307, 11, 437, 51560, 51560, 366, 264, 12819, 295, 264, 14174, 24877, 30, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16860998327081853, "compression_ratio": 1.625984251968504, "no_speech_prob": 8.662892469146755e-06}, {"id": 1417, "seek": 409184, "start": 4100.04, "end": 4103.4400000000005, "text": " those scores is with differentiable functions", "tokens": [50364, 440, 700, 3035, 307, 294, 22383, 13, 50488, 50488, 400, 550, 729, 393, 312, 11, 382, 938, 382, 264, 636, 291, 14722, 50774, 50774, 729, 13444, 307, 365, 819, 9364, 6828, 50944, 50944, 300, 366, 13075, 1602, 11, 291, 393, 646, 79, 1513, 559, 473, 16235, 51044, 51044, 807, 341, 2302, 551, 13, 51126, 51126, 400, 286, 393, 11698, 577, 291, 360, 341, 294, 341, 1729, 1389, 13, 51300, 51300, 286, 536, 13, 51332, 51332, 1396, 456, 311, 1071, 1168, 11, 597, 286, 815, 406, 51446, 51446, 312, 1075, 281, 1223, 11, 597, 307, 11, 437, 51560, 51560, 366, 264, 12819, 295, 264, 14174, 24877, 30, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16860998327081853, "compression_ratio": 1.625984251968504, "no_speech_prob": 8.662892469146755e-06}, {"id": 1418, "seek": 409184, "start": 4103.4400000000005, "end": 4105.4400000000005, "text": " that are parameterized, you can backpropagate gradient", "tokens": [50364, 440, 700, 3035, 307, 294, 22383, 13, 50488, 50488, 400, 550, 729, 393, 312, 11, 382, 938, 382, 264, 636, 291, 14722, 50774, 50774, 729, 13444, 307, 365, 819, 9364, 6828, 50944, 50944, 300, 366, 13075, 1602, 11, 291, 393, 646, 79, 1513, 559, 473, 16235, 51044, 51044, 807, 341, 2302, 551, 13, 51126, 51126, 400, 286, 393, 11698, 577, 291, 360, 341, 294, 341, 1729, 1389, 13, 51300, 51300, 286, 536, 13, 51332, 51332, 1396, 456, 311, 1071, 1168, 11, 597, 286, 815, 406, 51446, 51446, 312, 1075, 281, 1223, 11, 597, 307, 11, 437, 51560, 51560, 366, 264, 12819, 295, 264, 14174, 24877, 30, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16860998327081853, "compression_ratio": 1.625984251968504, "no_speech_prob": 8.662892469146755e-06}, {"id": 1419, "seek": 409184, "start": 4105.4400000000005, "end": 4107.08, "text": " through this entire thing.", "tokens": [50364, 440, 700, 3035, 307, 294, 22383, 13, 50488, 50488, 400, 550, 729, 393, 312, 11, 382, 938, 382, 264, 636, 291, 14722, 50774, 50774, 729, 13444, 307, 365, 819, 9364, 6828, 50944, 50944, 300, 366, 13075, 1602, 11, 291, 393, 646, 79, 1513, 559, 473, 16235, 51044, 51044, 807, 341, 2302, 551, 13, 51126, 51126, 400, 286, 393, 11698, 577, 291, 360, 341, 294, 341, 1729, 1389, 13, 51300, 51300, 286, 536, 13, 51332, 51332, 1396, 456, 311, 1071, 1168, 11, 597, 286, 815, 406, 51446, 51446, 312, 1075, 281, 1223, 11, 597, 307, 11, 437, 51560, 51560, 366, 264, 12819, 295, 264, 14174, 24877, 30, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16860998327081853, "compression_ratio": 1.625984251968504, "no_speech_prob": 8.662892469146755e-06}, {"id": 1420, "seek": 409184, "start": 4107.08, "end": 4110.56, "text": " And I can demonstrate how you do this in this particular case.", "tokens": [50364, 440, 700, 3035, 307, 294, 22383, 13, 50488, 50488, 400, 550, 729, 393, 312, 11, 382, 938, 382, 264, 636, 291, 14722, 50774, 50774, 729, 13444, 307, 365, 819, 9364, 6828, 50944, 50944, 300, 366, 13075, 1602, 11, 291, 393, 646, 79, 1513, 559, 473, 16235, 51044, 51044, 807, 341, 2302, 551, 13, 51126, 51126, 400, 286, 393, 11698, 577, 291, 360, 341, 294, 341, 1729, 1389, 13, 51300, 51300, 286, 536, 13, 51332, 51332, 1396, 456, 311, 1071, 1168, 11, 597, 286, 815, 406, 51446, 51446, 312, 1075, 281, 1223, 11, 597, 307, 11, 437, 51560, 51560, 366, 264, 12819, 295, 264, 14174, 24877, 30, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16860998327081853, "compression_ratio": 1.625984251968504, "no_speech_prob": 8.662892469146755e-06}, {"id": 1421, "seek": 409184, "start": 4110.56, "end": 4111.2, "text": " I see.", "tokens": [50364, 440, 700, 3035, 307, 294, 22383, 13, 50488, 50488, 400, 550, 729, 393, 312, 11, 382, 938, 382, 264, 636, 291, 14722, 50774, 50774, 729, 13444, 307, 365, 819, 9364, 6828, 50944, 50944, 300, 366, 13075, 1602, 11, 291, 393, 646, 79, 1513, 559, 473, 16235, 51044, 51044, 807, 341, 2302, 551, 13, 51126, 51126, 400, 286, 393, 11698, 577, 291, 360, 341, 294, 341, 1729, 1389, 13, 51300, 51300, 286, 536, 13, 51332, 51332, 1396, 456, 311, 1071, 1168, 11, 597, 286, 815, 406, 51446, 51446, 312, 1075, 281, 1223, 11, 597, 307, 11, 437, 51560, 51560, 366, 264, 12819, 295, 264, 14174, 24877, 30, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16860998327081853, "compression_ratio": 1.625984251968504, "no_speech_prob": 8.662892469146755e-06}, {"id": 1422, "seek": 409184, "start": 4111.2, "end": 4113.4800000000005, "text": " Then there's another question, which I may not", "tokens": [50364, 440, 700, 3035, 307, 294, 22383, 13, 50488, 50488, 400, 550, 729, 393, 312, 11, 382, 938, 382, 264, 636, 291, 14722, 50774, 50774, 729, 13444, 307, 365, 819, 9364, 6828, 50944, 50944, 300, 366, 13075, 1602, 11, 291, 393, 646, 79, 1513, 559, 473, 16235, 51044, 51044, 807, 341, 2302, 551, 13, 51126, 51126, 400, 286, 393, 11698, 577, 291, 360, 341, 294, 341, 1729, 1389, 13, 51300, 51300, 286, 536, 13, 51332, 51332, 1396, 456, 311, 1071, 1168, 11, 597, 286, 815, 406, 51446, 51446, 312, 1075, 281, 1223, 11, 597, 307, 11, 437, 51560, 51560, 366, 264, 12819, 295, 264, 14174, 24877, 30, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16860998327081853, "compression_ratio": 1.625984251968504, "no_speech_prob": 8.662892469146755e-06}, {"id": 1423, "seek": 409184, "start": 4113.4800000000005, "end": 4115.76, "text": " be able to understand, which is, what", "tokens": [50364, 440, 700, 3035, 307, 294, 22383, 13, 50488, 50488, 400, 550, 729, 393, 312, 11, 382, 938, 382, 264, 636, 291, 14722, 50774, 50774, 729, 13444, 307, 365, 819, 9364, 6828, 50944, 50944, 300, 366, 13075, 1602, 11, 291, 393, 646, 79, 1513, 559, 473, 16235, 51044, 51044, 807, 341, 2302, 551, 13, 51126, 51126, 400, 286, 393, 11698, 577, 291, 360, 341, 294, 341, 1729, 1389, 13, 51300, 51300, 286, 536, 13, 51332, 51332, 1396, 456, 311, 1071, 1168, 11, 597, 286, 815, 406, 51446, 51446, 312, 1075, 281, 1223, 11, 597, 307, 11, 437, 51560, 51560, 366, 264, 12819, 295, 264, 14174, 24877, 30, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16860998327081853, "compression_ratio": 1.625984251968504, "no_speech_prob": 8.662892469146755e-06}, {"id": 1424, "seek": 409184, "start": 4115.76, "end": 4120.360000000001, "text": " are the dimensions of the interpretation graphs?", "tokens": [50364, 440, 700, 3035, 307, 294, 22383, 13, 50488, 50488, 400, 550, 729, 393, 312, 11, 382, 938, 382, 264, 636, 291, 14722, 50774, 50774, 729, 13444, 307, 365, 819, 9364, 6828, 50944, 50944, 300, 366, 13075, 1602, 11, 291, 393, 646, 79, 1513, 559, 473, 16235, 51044, 51044, 807, 341, 2302, 551, 13, 51126, 51126, 400, 286, 393, 11698, 577, 291, 360, 341, 294, 341, 1729, 1389, 13, 51300, 51300, 286, 536, 13, 51332, 51332, 1396, 456, 311, 1071, 1168, 11, 597, 286, 815, 406, 51446, 51446, 312, 1075, 281, 1223, 11, 597, 307, 11, 437, 51560, 51560, 366, 264, 12819, 295, 264, 14174, 24877, 30, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16860998327081853, "compression_ratio": 1.625984251968504, "no_speech_prob": 8.662892469146755e-06}, {"id": 1425, "seek": 412036, "start": 4120.36, "end": 4122.36, "text": " I don't know what dimensions.", "tokens": [50364, 286, 500, 380, 458, 437, 12819, 13, 50464, 50464, 20975, 8302, 13, 50490, 50490, 407, 1936, 11, 1184, 10346, 11, 291, 393, 1910, 309, 294, 732, 2098, 13, 50694, 50694, 440, 636, 286, 600, 10379, 309, 510, 307, 50772, 50772, 300, 1184, 10346, 575, 257, 7645, 11, 805, 510, 337, 341, 1729, 4691, 11, 51060, 51060, 293, 364, 2281, 11, 805, 13, 19, 13, 51158, 51158, 400, 550, 264, 1230, 294, 34153, 307, 264, 16235, 51252, 51252, 300, 1487, 490, 264, 1192, 13, 51392, 51392, 407, 510, 307, 257, 39684, 13, 51466, 51466, 583, 510, 11, 322, 264, 4295, 412, 264, 2767, 11, 51660, 51660, 264, 48654, 307, 364, 2302, 40863, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.17162283535661368, "compression_ratio": 1.594142259414226, "no_speech_prob": 1.4738131540070754e-05}, {"id": 1426, "seek": 412036, "start": 4122.36, "end": 4122.88, "text": " Dimensions.", "tokens": [50364, 286, 500, 380, 458, 437, 12819, 13, 50464, 50464, 20975, 8302, 13, 50490, 50490, 407, 1936, 11, 1184, 10346, 11, 291, 393, 1910, 309, 294, 732, 2098, 13, 50694, 50694, 440, 636, 286, 600, 10379, 309, 510, 307, 50772, 50772, 300, 1184, 10346, 575, 257, 7645, 11, 805, 510, 337, 341, 1729, 4691, 11, 51060, 51060, 293, 364, 2281, 11, 805, 13, 19, 13, 51158, 51158, 400, 550, 264, 1230, 294, 34153, 307, 264, 16235, 51252, 51252, 300, 1487, 490, 264, 1192, 13, 51392, 51392, 407, 510, 307, 257, 39684, 13, 51466, 51466, 583, 510, 11, 322, 264, 4295, 412, 264, 2767, 11, 51660, 51660, 264, 48654, 307, 364, 2302, 40863, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.17162283535661368, "compression_ratio": 1.594142259414226, "no_speech_prob": 1.4738131540070754e-05}, {"id": 1427, "seek": 412036, "start": 4122.88, "end": 4126.96, "text": " So basically, each arc, you can view it in two ways.", "tokens": [50364, 286, 500, 380, 458, 437, 12819, 13, 50464, 50464, 20975, 8302, 13, 50490, 50490, 407, 1936, 11, 1184, 10346, 11, 291, 393, 1910, 309, 294, 732, 2098, 13, 50694, 50694, 440, 636, 286, 600, 10379, 309, 510, 307, 50772, 50772, 300, 1184, 10346, 575, 257, 7645, 11, 805, 510, 337, 341, 1729, 4691, 11, 51060, 51060, 293, 364, 2281, 11, 805, 13, 19, 13, 51158, 51158, 400, 550, 264, 1230, 294, 34153, 307, 264, 16235, 51252, 51252, 300, 1487, 490, 264, 1192, 13, 51392, 51392, 407, 510, 307, 257, 39684, 13, 51466, 51466, 583, 510, 11, 322, 264, 4295, 412, 264, 2767, 11, 51660, 51660, 264, 48654, 307, 364, 2302, 40863, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.17162283535661368, "compression_ratio": 1.594142259414226, "no_speech_prob": 1.4738131540070754e-05}, {"id": 1428, "seek": 412036, "start": 4126.96, "end": 4128.5199999999995, "text": " The way I've represented it here is", "tokens": [50364, 286, 500, 380, 458, 437, 12819, 13, 50464, 50464, 20975, 8302, 13, 50490, 50490, 407, 1936, 11, 1184, 10346, 11, 291, 393, 1910, 309, 294, 732, 2098, 13, 50694, 50694, 440, 636, 286, 600, 10379, 309, 510, 307, 50772, 50772, 300, 1184, 10346, 575, 257, 7645, 11, 805, 510, 337, 341, 1729, 4691, 11, 51060, 51060, 293, 364, 2281, 11, 805, 13, 19, 13, 51158, 51158, 400, 550, 264, 1230, 294, 34153, 307, 264, 16235, 51252, 51252, 300, 1487, 490, 264, 1192, 13, 51392, 51392, 407, 510, 307, 257, 39684, 13, 51466, 51466, 583, 510, 11, 322, 264, 4295, 412, 264, 2767, 11, 51660, 51660, 264, 48654, 307, 364, 2302, 40863, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.17162283535661368, "compression_ratio": 1.594142259414226, "no_speech_prob": 1.4738131540070754e-05}, {"id": 1429, "seek": 412036, "start": 4128.5199999999995, "end": 4134.28, "text": " that each arc has a label, 3 here for this particular edge,", "tokens": [50364, 286, 500, 380, 458, 437, 12819, 13, 50464, 50464, 20975, 8302, 13, 50490, 50490, 407, 1936, 11, 1184, 10346, 11, 291, 393, 1910, 309, 294, 732, 2098, 13, 50694, 50694, 440, 636, 286, 600, 10379, 309, 510, 307, 50772, 50772, 300, 1184, 10346, 575, 257, 7645, 11, 805, 510, 337, 341, 1729, 4691, 11, 51060, 51060, 293, 364, 2281, 11, 805, 13, 19, 13, 51158, 51158, 400, 550, 264, 1230, 294, 34153, 307, 264, 16235, 51252, 51252, 300, 1487, 490, 264, 1192, 13, 51392, 51392, 407, 510, 307, 257, 39684, 13, 51466, 51466, 583, 510, 11, 322, 264, 4295, 412, 264, 2767, 11, 51660, 51660, 264, 48654, 307, 364, 2302, 40863, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.17162283535661368, "compression_ratio": 1.594142259414226, "no_speech_prob": 1.4738131540070754e-05}, {"id": 1430, "seek": 412036, "start": 4134.28, "end": 4136.24, "text": " and an energy, 3.4.", "tokens": [50364, 286, 500, 380, 458, 437, 12819, 13, 50464, 50464, 20975, 8302, 13, 50490, 50490, 407, 1936, 11, 1184, 10346, 11, 291, 393, 1910, 309, 294, 732, 2098, 13, 50694, 50694, 440, 636, 286, 600, 10379, 309, 510, 307, 50772, 50772, 300, 1184, 10346, 575, 257, 7645, 11, 805, 510, 337, 341, 1729, 4691, 11, 51060, 51060, 293, 364, 2281, 11, 805, 13, 19, 13, 51158, 51158, 400, 550, 264, 1230, 294, 34153, 307, 264, 16235, 51252, 51252, 300, 1487, 490, 264, 1192, 13, 51392, 51392, 407, 510, 307, 257, 39684, 13, 51466, 51466, 583, 510, 11, 322, 264, 4295, 412, 264, 2767, 11, 51660, 51660, 264, 48654, 307, 364, 2302, 40863, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.17162283535661368, "compression_ratio": 1.594142259414226, "no_speech_prob": 1.4738131540070754e-05}, {"id": 1431, "seek": 412036, "start": 4136.24, "end": 4138.12, "text": " And then the number in parentheses is the gradient", "tokens": [50364, 286, 500, 380, 458, 437, 12819, 13, 50464, 50464, 20975, 8302, 13, 50490, 50490, 407, 1936, 11, 1184, 10346, 11, 291, 393, 1910, 309, 294, 732, 2098, 13, 50694, 50694, 440, 636, 286, 600, 10379, 309, 510, 307, 50772, 50772, 300, 1184, 10346, 575, 257, 7645, 11, 805, 510, 337, 341, 1729, 4691, 11, 51060, 51060, 293, 364, 2281, 11, 805, 13, 19, 13, 51158, 51158, 400, 550, 264, 1230, 294, 34153, 307, 264, 16235, 51252, 51252, 300, 1487, 490, 264, 1192, 13, 51392, 51392, 407, 510, 307, 257, 39684, 13, 51466, 51466, 583, 510, 11, 322, 264, 4295, 412, 264, 2767, 11, 51660, 51660, 264, 48654, 307, 364, 2302, 40863, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.17162283535661368, "compression_ratio": 1.594142259414226, "no_speech_prob": 1.4738131540070754e-05}, {"id": 1432, "seek": 412036, "start": 4138.12, "end": 4140.92, "text": " that comes from the top.", "tokens": [50364, 286, 500, 380, 458, 437, 12819, 13, 50464, 50464, 20975, 8302, 13, 50490, 50490, 407, 1936, 11, 1184, 10346, 11, 291, 393, 1910, 309, 294, 732, 2098, 13, 50694, 50694, 440, 636, 286, 600, 10379, 309, 510, 307, 50772, 50772, 300, 1184, 10346, 575, 257, 7645, 11, 805, 510, 337, 341, 1729, 4691, 11, 51060, 51060, 293, 364, 2281, 11, 805, 13, 19, 13, 51158, 51158, 400, 550, 264, 1230, 294, 34153, 307, 264, 16235, 51252, 51252, 300, 1487, 490, 264, 1192, 13, 51392, 51392, 407, 510, 307, 257, 39684, 13, 51466, 51466, 583, 510, 11, 322, 264, 4295, 412, 264, 2767, 11, 51660, 51660, 264, 48654, 307, 364, 2302, 40863, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.17162283535661368, "compression_ratio": 1.594142259414226, "no_speech_prob": 1.4738131540070754e-05}, {"id": 1433, "seek": 412036, "start": 4140.92, "end": 4142.4, "text": " So here is a scalar.", "tokens": [50364, 286, 500, 380, 458, 437, 12819, 13, 50464, 50464, 20975, 8302, 13, 50490, 50490, 407, 1936, 11, 1184, 10346, 11, 291, 393, 1910, 309, 294, 732, 2098, 13, 50694, 50694, 440, 636, 286, 600, 10379, 309, 510, 307, 50772, 50772, 300, 1184, 10346, 575, 257, 7645, 11, 805, 510, 337, 341, 1729, 4691, 11, 51060, 51060, 293, 364, 2281, 11, 805, 13, 19, 13, 51158, 51158, 400, 550, 264, 1230, 294, 34153, 307, 264, 16235, 51252, 51252, 300, 1487, 490, 264, 1192, 13, 51392, 51392, 407, 510, 307, 257, 39684, 13, 51466, 51466, 583, 510, 11, 322, 264, 4295, 412, 264, 2767, 11, 51660, 51660, 264, 48654, 307, 364, 2302, 40863, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.17162283535661368, "compression_ratio": 1.594142259414226, "no_speech_prob": 1.4738131540070754e-05}, {"id": 1434, "seek": 412036, "start": 4142.4, "end": 4146.28, "text": " But here, on the graph at the bottom,", "tokens": [50364, 286, 500, 380, 458, 437, 12819, 13, 50464, 50464, 20975, 8302, 13, 50490, 50490, 407, 1936, 11, 1184, 10346, 11, 291, 393, 1910, 309, 294, 732, 2098, 13, 50694, 50694, 440, 636, 286, 600, 10379, 309, 510, 307, 50772, 50772, 300, 1184, 10346, 575, 257, 7645, 11, 805, 510, 337, 341, 1729, 4691, 11, 51060, 51060, 293, 364, 2281, 11, 805, 13, 19, 13, 51158, 51158, 400, 550, 264, 1230, 294, 34153, 307, 264, 16235, 51252, 51252, 300, 1487, 490, 264, 1192, 13, 51392, 51392, 407, 510, 307, 257, 39684, 13, 51466, 51466, 583, 510, 11, 322, 264, 4295, 412, 264, 2767, 11, 51660, 51660, 264, 48654, 307, 364, 2302, 40863, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.17162283535661368, "compression_ratio": 1.594142259414226, "no_speech_prob": 1.4738131540070754e-05}, {"id": 1435, "seek": 412036, "start": 4146.28, "end": 4148.679999999999, "text": " the annotation is an entire tensor.", "tokens": [50364, 286, 500, 380, 458, 437, 12819, 13, 50464, 50464, 20975, 8302, 13, 50490, 50490, 407, 1936, 11, 1184, 10346, 11, 291, 393, 1910, 309, 294, 732, 2098, 13, 50694, 50694, 440, 636, 286, 600, 10379, 309, 510, 307, 50772, 50772, 300, 1184, 10346, 575, 257, 7645, 11, 805, 510, 337, 341, 1729, 4691, 11, 51060, 51060, 293, 364, 2281, 11, 805, 13, 19, 13, 51158, 51158, 400, 550, 264, 1230, 294, 34153, 307, 264, 16235, 51252, 51252, 300, 1487, 490, 264, 1192, 13, 51392, 51392, 407, 510, 307, 257, 39684, 13, 51466, 51466, 583, 510, 11, 322, 264, 4295, 412, 264, 2767, 11, 51660, 51660, 264, 48654, 307, 364, 2302, 40863, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.17162283535661368, "compression_ratio": 1.594142259414226, "no_speech_prob": 1.4738131540070754e-05}, {"id": 1436, "seek": 414868, "start": 4148.68, "end": 4150.88, "text": " It's an image.", "tokens": [50364, 467, 311, 364, 3256, 13, 50474, 50474, 2264, 13, 50540, 50540, 407, 286, 500, 380, 16500, 437, 291, 393, 25339, 473, 264, 24877, 365, 11, 50854, 50854, 382, 938, 382, 2035, 309, 307, 300, 291, 25339, 473, 309, 365, 11, 51036, 51036, 498, 309, 311, 40610, 538, 512, 10957, 6828, 11, 51136, 51136, 291, 528, 281, 312, 1075, 281, 48256, 16235, 807, 309, 13, 51298, 51298, 823, 11, 1071, 636, 295, 13460, 341, 4295, 51394, 51394, 307, 406, 538, 1419, 257, 4994, 10346, 510, 337, 1184, 7719, 11, 51608, 51608, 457, 538, 1419, 257, 8062, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1023939323425293, "compression_ratio": 1.5663716814159292, "no_speech_prob": 3.844710590783507e-06}, {"id": 1437, "seek": 414868, "start": 4150.88, "end": 4152.200000000001, "text": " OK.", "tokens": [50364, 467, 311, 364, 3256, 13, 50474, 50474, 2264, 13, 50540, 50540, 407, 286, 500, 380, 16500, 437, 291, 393, 25339, 473, 264, 24877, 365, 11, 50854, 50854, 382, 938, 382, 2035, 309, 307, 300, 291, 25339, 473, 309, 365, 11, 51036, 51036, 498, 309, 311, 40610, 538, 512, 10957, 6828, 11, 51136, 51136, 291, 528, 281, 312, 1075, 281, 48256, 16235, 807, 309, 13, 51298, 51298, 823, 11, 1071, 636, 295, 13460, 341, 4295, 51394, 51394, 307, 406, 538, 1419, 257, 4994, 10346, 510, 337, 1184, 7719, 11, 51608, 51608, 457, 538, 1419, 257, 8062, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1023939323425293, "compression_ratio": 1.5663716814159292, "no_speech_prob": 3.844710590783507e-06}, {"id": 1438, "seek": 414868, "start": 4152.200000000001, "end": 4158.4800000000005, "text": " So I don't specify what you can annotate the graphs with,", "tokens": [50364, 467, 311, 364, 3256, 13, 50474, 50474, 2264, 13, 50540, 50540, 407, 286, 500, 380, 16500, 437, 291, 393, 25339, 473, 264, 24877, 365, 11, 50854, 50854, 382, 938, 382, 2035, 309, 307, 300, 291, 25339, 473, 309, 365, 11, 51036, 51036, 498, 309, 311, 40610, 538, 512, 10957, 6828, 11, 51136, 51136, 291, 528, 281, 312, 1075, 281, 48256, 16235, 807, 309, 13, 51298, 51298, 823, 11, 1071, 636, 295, 13460, 341, 4295, 51394, 51394, 307, 406, 538, 1419, 257, 4994, 10346, 510, 337, 1184, 7719, 11, 51608, 51608, 457, 538, 1419, 257, 8062, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1023939323425293, "compression_ratio": 1.5663716814159292, "no_speech_prob": 3.844710590783507e-06}, {"id": 1439, "seek": 414868, "start": 4158.4800000000005, "end": 4162.12, "text": " as long as whatever it is that you annotate it with,", "tokens": [50364, 467, 311, 364, 3256, 13, 50474, 50474, 2264, 13, 50540, 50540, 407, 286, 500, 380, 16500, 437, 291, 393, 25339, 473, 264, 24877, 365, 11, 50854, 50854, 382, 938, 382, 2035, 309, 307, 300, 291, 25339, 473, 309, 365, 11, 51036, 51036, 498, 309, 311, 40610, 538, 512, 10957, 6828, 11, 51136, 51136, 291, 528, 281, 312, 1075, 281, 48256, 16235, 807, 309, 13, 51298, 51298, 823, 11, 1071, 636, 295, 13460, 341, 4295, 51394, 51394, 307, 406, 538, 1419, 257, 4994, 10346, 510, 337, 1184, 7719, 11, 51608, 51608, 457, 538, 1419, 257, 8062, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1023939323425293, "compression_ratio": 1.5663716814159292, "no_speech_prob": 3.844710590783507e-06}, {"id": 1440, "seek": 414868, "start": 4162.12, "end": 4164.12, "text": " if it's computed by some continuous functions,", "tokens": [50364, 467, 311, 364, 3256, 13, 50474, 50474, 2264, 13, 50540, 50540, 407, 286, 500, 380, 16500, 437, 291, 393, 25339, 473, 264, 24877, 365, 11, 50854, 50854, 382, 938, 382, 2035, 309, 307, 300, 291, 25339, 473, 309, 365, 11, 51036, 51036, 498, 309, 311, 40610, 538, 512, 10957, 6828, 11, 51136, 51136, 291, 528, 281, 312, 1075, 281, 48256, 16235, 807, 309, 13, 51298, 51298, 823, 11, 1071, 636, 295, 13460, 341, 4295, 51394, 51394, 307, 406, 538, 1419, 257, 4994, 10346, 510, 337, 1184, 7719, 11, 51608, 51608, 457, 538, 1419, 257, 8062, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1023939323425293, "compression_ratio": 1.5663716814159292, "no_speech_prob": 3.844710590783507e-06}, {"id": 1441, "seek": 414868, "start": 4164.12, "end": 4167.360000000001, "text": " you want to be able to propagate gradient through it.", "tokens": [50364, 467, 311, 364, 3256, 13, 50474, 50474, 2264, 13, 50540, 50540, 407, 286, 500, 380, 16500, 437, 291, 393, 25339, 473, 264, 24877, 365, 11, 50854, 50854, 382, 938, 382, 2035, 309, 307, 300, 291, 25339, 473, 309, 365, 11, 51036, 51036, 498, 309, 311, 40610, 538, 512, 10957, 6828, 11, 51136, 51136, 291, 528, 281, 312, 1075, 281, 48256, 16235, 807, 309, 13, 51298, 51298, 823, 11, 1071, 636, 295, 13460, 341, 4295, 51394, 51394, 307, 406, 538, 1419, 257, 4994, 10346, 510, 337, 1184, 7719, 11, 51608, 51608, 457, 538, 1419, 257, 8062, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1023939323425293, "compression_ratio": 1.5663716814159292, "no_speech_prob": 3.844710590783507e-06}, {"id": 1442, "seek": 414868, "start": 4167.360000000001, "end": 4169.280000000001, "text": " Now, another way of representing this graph", "tokens": [50364, 467, 311, 364, 3256, 13, 50474, 50474, 2264, 13, 50540, 50540, 407, 286, 500, 380, 16500, 437, 291, 393, 25339, 473, 264, 24877, 365, 11, 50854, 50854, 382, 938, 382, 2035, 309, 307, 300, 291, 25339, 473, 309, 365, 11, 51036, 51036, 498, 309, 311, 40610, 538, 512, 10957, 6828, 11, 51136, 51136, 291, 528, 281, 312, 1075, 281, 48256, 16235, 807, 309, 13, 51298, 51298, 823, 11, 1071, 636, 295, 13460, 341, 4295, 51394, 51394, 307, 406, 538, 1419, 257, 4994, 10346, 510, 337, 1184, 7719, 11, 51608, 51608, 457, 538, 1419, 257, 8062, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1023939323425293, "compression_ratio": 1.5663716814159292, "no_speech_prob": 3.844710590783507e-06}, {"id": 1443, "seek": 414868, "start": 4169.280000000001, "end": 4173.56, "text": " is not by having a separate arc here for each category,", "tokens": [50364, 467, 311, 364, 3256, 13, 50474, 50474, 2264, 13, 50540, 50540, 407, 286, 500, 380, 16500, 437, 291, 393, 25339, 473, 264, 24877, 365, 11, 50854, 50854, 382, 938, 382, 2035, 309, 307, 300, 291, 25339, 473, 309, 365, 11, 51036, 51036, 498, 309, 311, 40610, 538, 512, 10957, 6828, 11, 51136, 51136, 291, 528, 281, 312, 1075, 281, 48256, 16235, 807, 309, 13, 51298, 51298, 823, 11, 1071, 636, 295, 13460, 341, 4295, 51394, 51394, 307, 406, 538, 1419, 257, 4994, 10346, 510, 337, 1184, 7719, 11, 51608, 51608, 457, 538, 1419, 257, 8062, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1023939323425293, "compression_ratio": 1.5663716814159292, "no_speech_prob": 3.844710590783507e-06}, {"id": 1444, "seek": 414868, "start": 4173.56, "end": 4175.280000000001, "text": " but by having a vector.", "tokens": [50364, 467, 311, 364, 3256, 13, 50474, 50474, 2264, 13, 50540, 50540, 407, 286, 500, 380, 16500, 437, 291, 393, 25339, 473, 264, 24877, 365, 11, 50854, 50854, 382, 938, 382, 2035, 309, 307, 300, 291, 25339, 473, 309, 365, 11, 51036, 51036, 498, 309, 311, 40610, 538, 512, 10957, 6828, 11, 51136, 51136, 291, 528, 281, 312, 1075, 281, 48256, 16235, 807, 309, 13, 51298, 51298, 823, 11, 1071, 636, 295, 13460, 341, 4295, 51394, 51394, 307, 406, 538, 1419, 257, 4994, 10346, 510, 337, 1184, 7719, 11, 51608, 51608, 457, 538, 1419, 257, 8062, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1023939323425293, "compression_ratio": 1.5663716814159292, "no_speech_prob": 3.844710590783507e-06}, {"id": 1445, "seek": 417528, "start": 4175.28, "end": 4181.28, "text": " And the vector just contains the list of categories", "tokens": [50364, 400, 264, 8062, 445, 8306, 264, 1329, 295, 10479, 50664, 50664, 1214, 365, 257, 1329, 295, 13444, 13, 50782, 50782, 407, 1958, 807, 1722, 13, 50874, 50874, 400, 550, 264, 1329, 295, 25737, 337, 1184, 295, 264, 551, 13, 50998, 50998, 400, 300, 576, 312, 445, 472, 10346, 11, 457, 309, 576, 312, 25339, 770, 538, 51166, 51166, 341, 8062, 13, 51196, 51196, 286, 536, 13, 51221, 51221, 286, 536, 13, 51246, 51246, 2264, 13, 51271, 51410, 583, 570, 341, 2146, 11, 264, 691, 1681, 5614, 293, 264, 3100, 23264, 1672, 51622, 51622, 3048, 82, 2609, 14518, 11, 309, 311, 1850, 498, 291, 2464, 309, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.21859658967464343, "compression_ratio": 1.6418604651162791, "no_speech_prob": 8.139051715261303e-06}, {"id": 1446, "seek": 417528, "start": 4181.28, "end": 4183.639999999999, "text": " together with a list of scores.", "tokens": [50364, 400, 264, 8062, 445, 8306, 264, 1329, 295, 10479, 50664, 50664, 1214, 365, 257, 1329, 295, 13444, 13, 50782, 50782, 407, 1958, 807, 1722, 13, 50874, 50874, 400, 550, 264, 1329, 295, 25737, 337, 1184, 295, 264, 551, 13, 50998, 50998, 400, 300, 576, 312, 445, 472, 10346, 11, 457, 309, 576, 312, 25339, 770, 538, 51166, 51166, 341, 8062, 13, 51196, 51196, 286, 536, 13, 51221, 51221, 286, 536, 13, 51246, 51246, 2264, 13, 51271, 51410, 583, 570, 341, 2146, 11, 264, 691, 1681, 5614, 293, 264, 3100, 23264, 1672, 51622, 51622, 3048, 82, 2609, 14518, 11, 309, 311, 1850, 498, 291, 2464, 309, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.21859658967464343, "compression_ratio": 1.6418604651162791, "no_speech_prob": 8.139051715261303e-06}, {"id": 1447, "seek": 417528, "start": 4183.639999999999, "end": 4185.48, "text": " So 0 through 9.", "tokens": [50364, 400, 264, 8062, 445, 8306, 264, 1329, 295, 10479, 50664, 50664, 1214, 365, 257, 1329, 295, 13444, 13, 50782, 50782, 407, 1958, 807, 1722, 13, 50874, 50874, 400, 550, 264, 1329, 295, 25737, 337, 1184, 295, 264, 551, 13, 50998, 50998, 400, 300, 576, 312, 445, 472, 10346, 11, 457, 309, 576, 312, 25339, 770, 538, 51166, 51166, 341, 8062, 13, 51196, 51196, 286, 536, 13, 51221, 51221, 286, 536, 13, 51246, 51246, 2264, 13, 51271, 51410, 583, 570, 341, 2146, 11, 264, 691, 1681, 5614, 293, 264, 3100, 23264, 1672, 51622, 51622, 3048, 82, 2609, 14518, 11, 309, 311, 1850, 498, 291, 2464, 309, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.21859658967464343, "compression_ratio": 1.6418604651162791, "no_speech_prob": 8.139051715261303e-06}, {"id": 1448, "seek": 417528, "start": 4185.48, "end": 4187.96, "text": " And then the list of energies for each of the thing.", "tokens": [50364, 400, 264, 8062, 445, 8306, 264, 1329, 295, 10479, 50664, 50664, 1214, 365, 257, 1329, 295, 13444, 13, 50782, 50782, 407, 1958, 807, 1722, 13, 50874, 50874, 400, 550, 264, 1329, 295, 25737, 337, 1184, 295, 264, 551, 13, 50998, 50998, 400, 300, 576, 312, 445, 472, 10346, 11, 457, 309, 576, 312, 25339, 770, 538, 51166, 51166, 341, 8062, 13, 51196, 51196, 286, 536, 13, 51221, 51221, 286, 536, 13, 51246, 51246, 2264, 13, 51271, 51410, 583, 570, 341, 2146, 11, 264, 691, 1681, 5614, 293, 264, 3100, 23264, 1672, 51622, 51622, 3048, 82, 2609, 14518, 11, 309, 311, 1850, 498, 291, 2464, 309, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.21859658967464343, "compression_ratio": 1.6418604651162791, "no_speech_prob": 8.139051715261303e-06}, {"id": 1449, "seek": 417528, "start": 4187.96, "end": 4191.32, "text": " And that would be just one arc, but it would be annotated by", "tokens": [50364, 400, 264, 8062, 445, 8306, 264, 1329, 295, 10479, 50664, 50664, 1214, 365, 257, 1329, 295, 13444, 13, 50782, 50782, 407, 1958, 807, 1722, 13, 50874, 50874, 400, 550, 264, 1329, 295, 25737, 337, 1184, 295, 264, 551, 13, 50998, 50998, 400, 300, 576, 312, 445, 472, 10346, 11, 457, 309, 576, 312, 25339, 770, 538, 51166, 51166, 341, 8062, 13, 51196, 51196, 286, 536, 13, 51221, 51221, 286, 536, 13, 51246, 51246, 2264, 13, 51271, 51410, 583, 570, 341, 2146, 11, 264, 691, 1681, 5614, 293, 264, 3100, 23264, 1672, 51622, 51622, 3048, 82, 2609, 14518, 11, 309, 311, 1850, 498, 291, 2464, 309, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.21859658967464343, "compression_ratio": 1.6418604651162791, "no_speech_prob": 8.139051715261303e-06}, {"id": 1450, "seek": 417528, "start": 4191.32, "end": 4191.92, "text": " this vector.", "tokens": [50364, 400, 264, 8062, 445, 8306, 264, 1329, 295, 10479, 50664, 50664, 1214, 365, 257, 1329, 295, 13444, 13, 50782, 50782, 407, 1958, 807, 1722, 13, 50874, 50874, 400, 550, 264, 1329, 295, 25737, 337, 1184, 295, 264, 551, 13, 50998, 50998, 400, 300, 576, 312, 445, 472, 10346, 11, 457, 309, 576, 312, 25339, 770, 538, 51166, 51166, 341, 8062, 13, 51196, 51196, 286, 536, 13, 51221, 51221, 286, 536, 13, 51246, 51246, 2264, 13, 51271, 51410, 583, 570, 341, 2146, 11, 264, 691, 1681, 5614, 293, 264, 3100, 23264, 1672, 51622, 51622, 3048, 82, 2609, 14518, 11, 309, 311, 1850, 498, 291, 2464, 309, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.21859658967464343, "compression_ratio": 1.6418604651162791, "no_speech_prob": 8.139051715261303e-06}, {"id": 1451, "seek": 417528, "start": 4191.92, "end": 4192.42, "text": " I see.", "tokens": [50364, 400, 264, 8062, 445, 8306, 264, 1329, 295, 10479, 50664, 50664, 1214, 365, 257, 1329, 295, 13444, 13, 50782, 50782, 407, 1958, 807, 1722, 13, 50874, 50874, 400, 550, 264, 1329, 295, 25737, 337, 1184, 295, 264, 551, 13, 50998, 50998, 400, 300, 576, 312, 445, 472, 10346, 11, 457, 309, 576, 312, 25339, 770, 538, 51166, 51166, 341, 8062, 13, 51196, 51196, 286, 536, 13, 51221, 51221, 286, 536, 13, 51246, 51246, 2264, 13, 51271, 51410, 583, 570, 341, 2146, 11, 264, 691, 1681, 5614, 293, 264, 3100, 23264, 1672, 51622, 51622, 3048, 82, 2609, 14518, 11, 309, 311, 1850, 498, 291, 2464, 309, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.21859658967464343, "compression_ratio": 1.6418604651162791, "no_speech_prob": 8.139051715261303e-06}, {"id": 1452, "seek": 417528, "start": 4192.42, "end": 4192.92, "text": " I see.", "tokens": [50364, 400, 264, 8062, 445, 8306, 264, 1329, 295, 10479, 50664, 50664, 1214, 365, 257, 1329, 295, 13444, 13, 50782, 50782, 407, 1958, 807, 1722, 13, 50874, 50874, 400, 550, 264, 1329, 295, 25737, 337, 1184, 295, 264, 551, 13, 50998, 50998, 400, 300, 576, 312, 445, 472, 10346, 11, 457, 309, 576, 312, 25339, 770, 538, 51166, 51166, 341, 8062, 13, 51196, 51196, 286, 536, 13, 51221, 51221, 286, 536, 13, 51246, 51246, 2264, 13, 51271, 51410, 583, 570, 341, 2146, 11, 264, 691, 1681, 5614, 293, 264, 3100, 23264, 1672, 51622, 51622, 3048, 82, 2609, 14518, 11, 309, 311, 1850, 498, 291, 2464, 309, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.21859658967464343, "compression_ratio": 1.6418604651162791, "no_speech_prob": 8.139051715261303e-06}, {"id": 1453, "seek": 417528, "start": 4192.92, "end": 4193.42, "text": " OK.", "tokens": [50364, 400, 264, 8062, 445, 8306, 264, 1329, 295, 10479, 50664, 50664, 1214, 365, 257, 1329, 295, 13444, 13, 50782, 50782, 407, 1958, 807, 1722, 13, 50874, 50874, 400, 550, 264, 1329, 295, 25737, 337, 1184, 295, 264, 551, 13, 50998, 50998, 400, 300, 576, 312, 445, 472, 10346, 11, 457, 309, 576, 312, 25339, 770, 538, 51166, 51166, 341, 8062, 13, 51196, 51196, 286, 536, 13, 51221, 51221, 286, 536, 13, 51246, 51246, 2264, 13, 51271, 51410, 583, 570, 341, 2146, 11, 264, 691, 1681, 5614, 293, 264, 3100, 23264, 1672, 51622, 51622, 3048, 82, 2609, 14518, 11, 309, 311, 1850, 498, 291, 2464, 309, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.21859658967464343, "compression_ratio": 1.6418604651162791, "no_speech_prob": 8.139051715261303e-06}, {"id": 1454, "seek": 417528, "start": 4196.2, "end": 4200.44, "text": " But because this guy, the Viterbi and the path selector", "tokens": [50364, 400, 264, 8062, 445, 8306, 264, 1329, 295, 10479, 50664, 50664, 1214, 365, 257, 1329, 295, 13444, 13, 50782, 50782, 407, 1958, 807, 1722, 13, 50874, 50874, 400, 550, 264, 1329, 295, 25737, 337, 1184, 295, 264, 551, 13, 50998, 50998, 400, 300, 576, 312, 445, 472, 10346, 11, 457, 309, 576, 312, 25339, 770, 538, 51166, 51166, 341, 8062, 13, 51196, 51196, 286, 536, 13, 51221, 51221, 286, 536, 13, 51246, 51246, 2264, 13, 51271, 51410, 583, 570, 341, 2146, 11, 264, 691, 1681, 5614, 293, 264, 3100, 23264, 1672, 51622, 51622, 3048, 82, 2609, 14518, 11, 309, 311, 1850, 498, 291, 2464, 309, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.21859658967464343, "compression_ratio": 1.6418604651162791, "no_speech_prob": 8.139051715261303e-06}, {"id": 1455, "seek": 417528, "start": 4200.44, "end": 4204.04, "text": " selects individual paths, it's clear if you write it", "tokens": [50364, 400, 264, 8062, 445, 8306, 264, 1329, 295, 10479, 50664, 50664, 1214, 365, 257, 1329, 295, 13444, 13, 50782, 50782, 407, 1958, 807, 1722, 13, 50874, 50874, 400, 550, 264, 1329, 295, 25737, 337, 1184, 295, 264, 551, 13, 50998, 50998, 400, 300, 576, 312, 445, 472, 10346, 11, 457, 309, 576, 312, 25339, 770, 538, 51166, 51166, 341, 8062, 13, 51196, 51196, 286, 536, 13, 51221, 51221, 286, 536, 13, 51246, 51246, 2264, 13, 51271, 51410, 583, 570, 341, 2146, 11, 264, 691, 1681, 5614, 293, 264, 3100, 23264, 1672, 51622, 51622, 3048, 82, 2609, 14518, 11, 309, 311, 1850, 498, 291, 2464, 309, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.21859658967464343, "compression_ratio": 1.6418604651162791, "no_speech_prob": 8.139051715261303e-06}, {"id": 1456, "seek": 420404, "start": 4204.04, "end": 4205.28, "text": " this way.", "tokens": [50364, 341, 636, 13, 50426, 50426, 1012, 291, 4445, 309, 307, 493, 281, 291, 13, 50590, 50590, 407, 729, 4295, 31782, 9590, 11, 50686, 50686, 456, 366, 6218, 11150, 3652, 965, 300, 11, 50864, 50864, 370, 1936, 294, 257, 6218, 11150, 1185, 11, 50976, 50976, 341, 1379, 636, 295, 13596, 2937, 264, 3006, 8310, 1228, 11, 51226, 51226, 337, 1365, 11, 257, 2856, 2316, 307, 1219, 257, 979, 19866, 13, 51372, 51372, 407, 257, 979, 19866, 11, 412, 264, 5598, 295, 257, 18161, 2533, 11, 51514, 51514, 5101, 291, 362, 257, 8310, 295, 18875, 51616, 51616, 300, 13330, 264, 6175, 11, 264, 2281, 11, 264, 8482, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.15564374056729405, "compression_ratio": 1.7016129032258065, "no_speech_prob": 1.618390524527058e-05}, {"id": 1457, "seek": 420404, "start": 4205.28, "end": 4208.56, "text": " How you implement it is up to you.", "tokens": [50364, 341, 636, 13, 50426, 50426, 1012, 291, 4445, 309, 307, 493, 281, 291, 13, 50590, 50590, 407, 729, 4295, 31782, 9590, 11, 50686, 50686, 456, 366, 6218, 11150, 3652, 965, 300, 11, 50864, 50864, 370, 1936, 294, 257, 6218, 11150, 1185, 11, 50976, 50976, 341, 1379, 636, 295, 13596, 2937, 264, 3006, 8310, 1228, 11, 51226, 51226, 337, 1365, 11, 257, 2856, 2316, 307, 1219, 257, 979, 19866, 13, 51372, 51372, 407, 257, 979, 19866, 11, 412, 264, 5598, 295, 257, 18161, 2533, 11, 51514, 51514, 5101, 291, 362, 257, 8310, 295, 18875, 51616, 51616, 300, 13330, 264, 6175, 11, 264, 2281, 11, 264, 8482, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.15564374056729405, "compression_ratio": 1.7016129032258065, "no_speech_prob": 1.618390524527058e-05}, {"id": 1458, "seek": 420404, "start": 4208.56, "end": 4210.48, "text": " So those graph transformer networks,", "tokens": [50364, 341, 636, 13, 50426, 50426, 1012, 291, 4445, 309, 307, 493, 281, 291, 13, 50590, 50590, 407, 729, 4295, 31782, 9590, 11, 50686, 50686, 456, 366, 6218, 11150, 3652, 965, 300, 11, 50864, 50864, 370, 1936, 294, 257, 6218, 11150, 1185, 11, 50976, 50976, 341, 1379, 636, 295, 13596, 2937, 264, 3006, 8310, 1228, 11, 51226, 51226, 337, 1365, 11, 257, 2856, 2316, 307, 1219, 257, 979, 19866, 13, 51372, 51372, 407, 257, 979, 19866, 11, 412, 264, 5598, 295, 257, 18161, 2533, 11, 51514, 51514, 5101, 291, 362, 257, 8310, 295, 18875, 51616, 51616, 300, 13330, 264, 6175, 11, 264, 2281, 11, 264, 8482, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.15564374056729405, "compression_ratio": 1.7016129032258065, "no_speech_prob": 1.618390524527058e-05}, {"id": 1459, "seek": 420404, "start": 4210.48, "end": 4214.04, "text": " there are speech recognition systems today that,", "tokens": [50364, 341, 636, 13, 50426, 50426, 1012, 291, 4445, 309, 307, 493, 281, 291, 13, 50590, 50590, 407, 729, 4295, 31782, 9590, 11, 50686, 50686, 456, 366, 6218, 11150, 3652, 965, 300, 11, 50864, 50864, 370, 1936, 294, 257, 6218, 11150, 1185, 11, 50976, 50976, 341, 1379, 636, 295, 13596, 2937, 264, 3006, 8310, 1228, 11, 51226, 51226, 337, 1365, 11, 257, 2856, 2316, 307, 1219, 257, 979, 19866, 13, 51372, 51372, 407, 257, 979, 19866, 11, 412, 264, 5598, 295, 257, 18161, 2533, 11, 51514, 51514, 5101, 291, 362, 257, 8310, 295, 18875, 51616, 51616, 300, 13330, 264, 6175, 11, 264, 2281, 11, 264, 8482, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.15564374056729405, "compression_ratio": 1.7016129032258065, "no_speech_prob": 1.618390524527058e-05}, {"id": 1460, "seek": 420404, "start": 4214.04, "end": 4216.28, "text": " so basically in a speech recognition system,", "tokens": [50364, 341, 636, 13, 50426, 50426, 1012, 291, 4445, 309, 307, 493, 281, 291, 13, 50590, 50590, 407, 729, 4295, 31782, 9590, 11, 50686, 50686, 456, 366, 6218, 11150, 3652, 965, 300, 11, 50864, 50864, 370, 1936, 294, 257, 6218, 11150, 1185, 11, 50976, 50976, 341, 1379, 636, 295, 13596, 2937, 264, 3006, 8310, 1228, 11, 51226, 51226, 337, 1365, 11, 257, 2856, 2316, 307, 1219, 257, 979, 19866, 13, 51372, 51372, 407, 257, 979, 19866, 11, 412, 264, 5598, 295, 257, 18161, 2533, 11, 51514, 51514, 5101, 291, 362, 257, 8310, 295, 18875, 51616, 51616, 300, 13330, 264, 6175, 11, 264, 2281, 11, 264, 8482, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.15564374056729405, "compression_ratio": 1.7016129032258065, "no_speech_prob": 1.618390524527058e-05}, {"id": 1461, "seek": 420404, "start": 4216.28, "end": 4221.28, "text": " this whole way of inferring the correct sequence using,", "tokens": [50364, 341, 636, 13, 50426, 50426, 1012, 291, 4445, 309, 307, 493, 281, 291, 13, 50590, 50590, 407, 729, 4295, 31782, 9590, 11, 50686, 50686, 456, 366, 6218, 11150, 3652, 965, 300, 11, 50864, 50864, 370, 1936, 294, 257, 6218, 11150, 1185, 11, 50976, 50976, 341, 1379, 636, 295, 13596, 2937, 264, 3006, 8310, 1228, 11, 51226, 51226, 337, 1365, 11, 257, 2856, 2316, 307, 1219, 257, 979, 19866, 13, 51372, 51372, 407, 257, 979, 19866, 11, 412, 264, 5598, 295, 257, 18161, 2533, 11, 51514, 51514, 5101, 291, 362, 257, 8310, 295, 18875, 51616, 51616, 300, 13330, 264, 6175, 11, 264, 2281, 11, 264, 8482, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.15564374056729405, "compression_ratio": 1.7016129032258065, "no_speech_prob": 1.618390524527058e-05}, {"id": 1462, "seek": 420404, "start": 4221.28, "end": 4224.2, "text": " for example, a language model is called a decoder.", "tokens": [50364, 341, 636, 13, 50426, 50426, 1012, 291, 4445, 309, 307, 493, 281, 291, 13, 50590, 50590, 407, 729, 4295, 31782, 9590, 11, 50686, 50686, 456, 366, 6218, 11150, 3652, 965, 300, 11, 50864, 50864, 370, 1936, 294, 257, 6218, 11150, 1185, 11, 50976, 50976, 341, 1379, 636, 295, 13596, 2937, 264, 3006, 8310, 1228, 11, 51226, 51226, 337, 1365, 11, 257, 2856, 2316, 307, 1219, 257, 979, 19866, 13, 51372, 51372, 407, 257, 979, 19866, 11, 412, 264, 5598, 295, 257, 18161, 2533, 11, 51514, 51514, 5101, 291, 362, 257, 8310, 295, 18875, 51616, 51616, 300, 13330, 264, 6175, 11, 264, 2281, 11, 264, 8482, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.15564374056729405, "compression_ratio": 1.7016129032258065, "no_speech_prob": 1.618390524527058e-05}, {"id": 1463, "seek": 420404, "start": 4224.2, "end": 4227.04, "text": " So a decoder, at the output of a neural net,", "tokens": [50364, 341, 636, 13, 50426, 50426, 1012, 291, 4445, 309, 307, 493, 281, 291, 13, 50590, 50590, 407, 729, 4295, 31782, 9590, 11, 50686, 50686, 456, 366, 6218, 11150, 3652, 965, 300, 11, 50864, 50864, 370, 1936, 294, 257, 6218, 11150, 1185, 11, 50976, 50976, 341, 1379, 636, 295, 13596, 2937, 264, 3006, 8310, 1228, 11, 51226, 51226, 337, 1365, 11, 257, 2856, 2316, 307, 1219, 257, 979, 19866, 13, 51372, 51372, 407, 257, 979, 19866, 11, 412, 264, 5598, 295, 257, 18161, 2533, 11, 51514, 51514, 5101, 291, 362, 257, 8310, 295, 18875, 51616, 51616, 300, 13330, 264, 6175, 11, 264, 2281, 11, 264, 8482, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.15564374056729405, "compression_ratio": 1.7016129032258065, "no_speech_prob": 1.618390524527058e-05}, {"id": 1464, "seek": 420404, "start": 4227.04, "end": 4229.08, "text": " generally you have a sequence of vectors", "tokens": [50364, 341, 636, 13, 50426, 50426, 1012, 291, 4445, 309, 307, 493, 281, 291, 13, 50590, 50590, 407, 729, 4295, 31782, 9590, 11, 50686, 50686, 456, 366, 6218, 11150, 3652, 965, 300, 11, 50864, 50864, 370, 1936, 294, 257, 6218, 11150, 1185, 11, 50976, 50976, 341, 1379, 636, 295, 13596, 2937, 264, 3006, 8310, 1228, 11, 51226, 51226, 337, 1365, 11, 257, 2856, 2316, 307, 1219, 257, 979, 19866, 13, 51372, 51372, 407, 257, 979, 19866, 11, 412, 264, 5598, 295, 257, 18161, 2533, 11, 51514, 51514, 5101, 291, 362, 257, 8310, 295, 18875, 51616, 51616, 300, 13330, 264, 6175, 11, 264, 2281, 11, 264, 8482, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.15564374056729405, "compression_ratio": 1.7016129032258065, "no_speech_prob": 1.618390524527058e-05}, {"id": 1465, "seek": 420404, "start": 4229.08, "end": 4232.28, "text": " that indicate the score, the energy, the probability,", "tokens": [50364, 341, 636, 13, 50426, 50426, 1012, 291, 4445, 309, 307, 493, 281, 291, 13, 50590, 50590, 407, 729, 4295, 31782, 9590, 11, 50686, 50686, 456, 366, 6218, 11150, 3652, 965, 300, 11, 50864, 50864, 370, 1936, 294, 257, 6218, 11150, 1185, 11, 50976, 50976, 341, 1379, 636, 295, 13596, 2937, 264, 3006, 8310, 1228, 11, 51226, 51226, 337, 1365, 11, 257, 2856, 2316, 307, 1219, 257, 979, 19866, 13, 51372, 51372, 407, 257, 979, 19866, 11, 412, 264, 5598, 295, 257, 18161, 2533, 11, 51514, 51514, 5101, 291, 362, 257, 8310, 295, 18875, 51616, 51616, 300, 13330, 264, 6175, 11, 264, 2281, 11, 264, 8482, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.15564374056729405, "compression_ratio": 1.7016129032258065, "no_speech_prob": 1.618390524527058e-05}, {"id": 1466, "seek": 423228, "start": 4232.28, "end": 4235.759999999999, "text": " whatever you want, of individual sounds or phonemes", "tokens": [50364, 2035, 291, 528, 11, 295, 2609, 3263, 420, 30754, 443, 279, 50538, 50538, 420, 2171, 2283, 13, 50580, 50580, 400, 550, 291, 362, 281, 1320, 341, 281, 257, 2856, 50670, 50670, 2316, 300, 5112, 291, 341, 8310, 307, 1944, 11, 50820, 50820, 300, 661, 8310, 1943, 380, 13, 50872, 50872, 400, 550, 309, 16137, 484, 264, 1151, 1944, 14174, 51056, 51056, 4650, 281, 264, 2856, 2316, 293, 4650, 281, 264, 13444, 51174, 51174, 7126, 538, 428, 1185, 13, 51252, 51252, 961, 311, 352, 281, 979, 19866, 13, 51374, 51374, 400, 264, 955, 1168, 307, 11, 577, 360, 291, 646, 48256, 16235, 51526, 51526, 281, 264, 979, 19866, 30, 51578, 51578, 821, 311, 787, 257, 588, 1359, 1230, 295, 6218, 11150, 3652, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17497529602050782, "compression_ratio": 1.7598566308243728, "no_speech_prob": 1.3208647033025045e-05}, {"id": 1467, "seek": 423228, "start": 4235.759999999999, "end": 4236.599999999999, "text": " or sometimes words.", "tokens": [50364, 2035, 291, 528, 11, 295, 2609, 3263, 420, 30754, 443, 279, 50538, 50538, 420, 2171, 2283, 13, 50580, 50580, 400, 550, 291, 362, 281, 1320, 341, 281, 257, 2856, 50670, 50670, 2316, 300, 5112, 291, 341, 8310, 307, 1944, 11, 50820, 50820, 300, 661, 8310, 1943, 380, 13, 50872, 50872, 400, 550, 309, 16137, 484, 264, 1151, 1944, 14174, 51056, 51056, 4650, 281, 264, 2856, 2316, 293, 4650, 281, 264, 13444, 51174, 51174, 7126, 538, 428, 1185, 13, 51252, 51252, 961, 311, 352, 281, 979, 19866, 13, 51374, 51374, 400, 264, 955, 1168, 307, 11, 577, 360, 291, 646, 48256, 16235, 51526, 51526, 281, 264, 979, 19866, 30, 51578, 51578, 821, 311, 787, 257, 588, 1359, 1230, 295, 6218, 11150, 3652, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17497529602050782, "compression_ratio": 1.7598566308243728, "no_speech_prob": 1.3208647033025045e-05}, {"id": 1468, "seek": 423228, "start": 4236.599999999999, "end": 4238.4, "text": " And then you have to pass this to a language", "tokens": [50364, 2035, 291, 528, 11, 295, 2609, 3263, 420, 30754, 443, 279, 50538, 50538, 420, 2171, 2283, 13, 50580, 50580, 400, 550, 291, 362, 281, 1320, 341, 281, 257, 2856, 50670, 50670, 2316, 300, 5112, 291, 341, 8310, 307, 1944, 11, 50820, 50820, 300, 661, 8310, 1943, 380, 13, 50872, 50872, 400, 550, 309, 16137, 484, 264, 1151, 1944, 14174, 51056, 51056, 4650, 281, 264, 2856, 2316, 293, 4650, 281, 264, 13444, 51174, 51174, 7126, 538, 428, 1185, 13, 51252, 51252, 961, 311, 352, 281, 979, 19866, 13, 51374, 51374, 400, 264, 955, 1168, 307, 11, 577, 360, 291, 646, 48256, 16235, 51526, 51526, 281, 264, 979, 19866, 30, 51578, 51578, 821, 311, 787, 257, 588, 1359, 1230, 295, 6218, 11150, 3652, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17497529602050782, "compression_ratio": 1.7598566308243728, "no_speech_prob": 1.3208647033025045e-05}, {"id": 1469, "seek": 423228, "start": 4238.4, "end": 4241.4, "text": " model that tells you this sequence is possible,", "tokens": [50364, 2035, 291, 528, 11, 295, 2609, 3263, 420, 30754, 443, 279, 50538, 50538, 420, 2171, 2283, 13, 50580, 50580, 400, 550, 291, 362, 281, 1320, 341, 281, 257, 2856, 50670, 50670, 2316, 300, 5112, 291, 341, 8310, 307, 1944, 11, 50820, 50820, 300, 661, 8310, 1943, 380, 13, 50872, 50872, 400, 550, 309, 16137, 484, 264, 1151, 1944, 14174, 51056, 51056, 4650, 281, 264, 2856, 2316, 293, 4650, 281, 264, 13444, 51174, 51174, 7126, 538, 428, 1185, 13, 51252, 51252, 961, 311, 352, 281, 979, 19866, 13, 51374, 51374, 400, 264, 955, 1168, 307, 11, 577, 360, 291, 646, 48256, 16235, 51526, 51526, 281, 264, 979, 19866, 30, 51578, 51578, 821, 311, 787, 257, 588, 1359, 1230, 295, 6218, 11150, 3652, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17497529602050782, "compression_ratio": 1.7598566308243728, "no_speech_prob": 1.3208647033025045e-05}, {"id": 1470, "seek": 423228, "start": 4241.4, "end": 4242.44, "text": " that other sequence isn't.", "tokens": [50364, 2035, 291, 528, 11, 295, 2609, 3263, 420, 30754, 443, 279, 50538, 50538, 420, 2171, 2283, 13, 50580, 50580, 400, 550, 291, 362, 281, 1320, 341, 281, 257, 2856, 50670, 50670, 2316, 300, 5112, 291, 341, 8310, 307, 1944, 11, 50820, 50820, 300, 661, 8310, 1943, 380, 13, 50872, 50872, 400, 550, 309, 16137, 484, 264, 1151, 1944, 14174, 51056, 51056, 4650, 281, 264, 2856, 2316, 293, 4650, 281, 264, 13444, 51174, 51174, 7126, 538, 428, 1185, 13, 51252, 51252, 961, 311, 352, 281, 979, 19866, 13, 51374, 51374, 400, 264, 955, 1168, 307, 11, 577, 360, 291, 646, 48256, 16235, 51526, 51526, 281, 264, 979, 19866, 30, 51578, 51578, 821, 311, 787, 257, 588, 1359, 1230, 295, 6218, 11150, 3652, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17497529602050782, "compression_ratio": 1.7598566308243728, "no_speech_prob": 1.3208647033025045e-05}, {"id": 1471, "seek": 423228, "start": 4242.44, "end": 4246.12, "text": " And then it picks out the best possible interpretation", "tokens": [50364, 2035, 291, 528, 11, 295, 2609, 3263, 420, 30754, 443, 279, 50538, 50538, 420, 2171, 2283, 13, 50580, 50580, 400, 550, 291, 362, 281, 1320, 341, 281, 257, 2856, 50670, 50670, 2316, 300, 5112, 291, 341, 8310, 307, 1944, 11, 50820, 50820, 300, 661, 8310, 1943, 380, 13, 50872, 50872, 400, 550, 309, 16137, 484, 264, 1151, 1944, 14174, 51056, 51056, 4650, 281, 264, 2856, 2316, 293, 4650, 281, 264, 13444, 51174, 51174, 7126, 538, 428, 1185, 13, 51252, 51252, 961, 311, 352, 281, 979, 19866, 13, 51374, 51374, 400, 264, 955, 1168, 307, 11, 577, 360, 291, 646, 48256, 16235, 51526, 51526, 281, 264, 979, 19866, 30, 51578, 51578, 821, 311, 787, 257, 588, 1359, 1230, 295, 6218, 11150, 3652, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17497529602050782, "compression_ratio": 1.7598566308243728, "no_speech_prob": 1.3208647033025045e-05}, {"id": 1472, "seek": 423228, "start": 4246.12, "end": 4248.48, "text": " according to the language model and according to the scores", "tokens": [50364, 2035, 291, 528, 11, 295, 2609, 3263, 420, 30754, 443, 279, 50538, 50538, 420, 2171, 2283, 13, 50580, 50580, 400, 550, 291, 362, 281, 1320, 341, 281, 257, 2856, 50670, 50670, 2316, 300, 5112, 291, 341, 8310, 307, 1944, 11, 50820, 50820, 300, 661, 8310, 1943, 380, 13, 50872, 50872, 400, 550, 309, 16137, 484, 264, 1151, 1944, 14174, 51056, 51056, 4650, 281, 264, 2856, 2316, 293, 4650, 281, 264, 13444, 51174, 51174, 7126, 538, 428, 1185, 13, 51252, 51252, 961, 311, 352, 281, 979, 19866, 13, 51374, 51374, 400, 264, 955, 1168, 307, 11, 577, 360, 291, 646, 48256, 16235, 51526, 51526, 281, 264, 979, 19866, 30, 51578, 51578, 821, 311, 787, 257, 588, 1359, 1230, 295, 6218, 11150, 3652, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17497529602050782, "compression_ratio": 1.7598566308243728, "no_speech_prob": 1.3208647033025045e-05}, {"id": 1473, "seek": 423228, "start": 4248.48, "end": 4250.04, "text": " produced by your system.", "tokens": [50364, 2035, 291, 528, 11, 295, 2609, 3263, 420, 30754, 443, 279, 50538, 50538, 420, 2171, 2283, 13, 50580, 50580, 400, 550, 291, 362, 281, 1320, 341, 281, 257, 2856, 50670, 50670, 2316, 300, 5112, 291, 341, 8310, 307, 1944, 11, 50820, 50820, 300, 661, 8310, 1943, 380, 13, 50872, 50872, 400, 550, 309, 16137, 484, 264, 1151, 1944, 14174, 51056, 51056, 4650, 281, 264, 2856, 2316, 293, 4650, 281, 264, 13444, 51174, 51174, 7126, 538, 428, 1185, 13, 51252, 51252, 961, 311, 352, 281, 979, 19866, 13, 51374, 51374, 400, 264, 955, 1168, 307, 11, 577, 360, 291, 646, 48256, 16235, 51526, 51526, 281, 264, 979, 19866, 30, 51578, 51578, 821, 311, 787, 257, 588, 1359, 1230, 295, 6218, 11150, 3652, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17497529602050782, "compression_ratio": 1.7598566308243728, "no_speech_prob": 1.3208647033025045e-05}, {"id": 1474, "seek": 423228, "start": 4250.04, "end": 4252.48, "text": " Let's go to decoder.", "tokens": [50364, 2035, 291, 528, 11, 295, 2609, 3263, 420, 30754, 443, 279, 50538, 50538, 420, 2171, 2283, 13, 50580, 50580, 400, 550, 291, 362, 281, 1320, 341, 281, 257, 2856, 50670, 50670, 2316, 300, 5112, 291, 341, 8310, 307, 1944, 11, 50820, 50820, 300, 661, 8310, 1943, 380, 13, 50872, 50872, 400, 550, 309, 16137, 484, 264, 1151, 1944, 14174, 51056, 51056, 4650, 281, 264, 2856, 2316, 293, 4650, 281, 264, 13444, 51174, 51174, 7126, 538, 428, 1185, 13, 51252, 51252, 961, 311, 352, 281, 979, 19866, 13, 51374, 51374, 400, 264, 955, 1168, 307, 11, 577, 360, 291, 646, 48256, 16235, 51526, 51526, 281, 264, 979, 19866, 30, 51578, 51578, 821, 311, 787, 257, 588, 1359, 1230, 295, 6218, 11150, 3652, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17497529602050782, "compression_ratio": 1.7598566308243728, "no_speech_prob": 1.3208647033025045e-05}, {"id": 1475, "seek": 423228, "start": 4252.48, "end": 4255.5199999999995, "text": " And the big question is, how do you back propagate gradient", "tokens": [50364, 2035, 291, 528, 11, 295, 2609, 3263, 420, 30754, 443, 279, 50538, 50538, 420, 2171, 2283, 13, 50580, 50580, 400, 550, 291, 362, 281, 1320, 341, 281, 257, 2856, 50670, 50670, 2316, 300, 5112, 291, 341, 8310, 307, 1944, 11, 50820, 50820, 300, 661, 8310, 1943, 380, 13, 50872, 50872, 400, 550, 309, 16137, 484, 264, 1151, 1944, 14174, 51056, 51056, 4650, 281, 264, 2856, 2316, 293, 4650, 281, 264, 13444, 51174, 51174, 7126, 538, 428, 1185, 13, 51252, 51252, 961, 311, 352, 281, 979, 19866, 13, 51374, 51374, 400, 264, 955, 1168, 307, 11, 577, 360, 291, 646, 48256, 16235, 51526, 51526, 281, 264, 979, 19866, 30, 51578, 51578, 821, 311, 787, 257, 588, 1359, 1230, 295, 6218, 11150, 3652, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17497529602050782, "compression_ratio": 1.7598566308243728, "no_speech_prob": 1.3208647033025045e-05}, {"id": 1476, "seek": 423228, "start": 4255.5199999999995, "end": 4256.5599999999995, "text": " to the decoder?", "tokens": [50364, 2035, 291, 528, 11, 295, 2609, 3263, 420, 30754, 443, 279, 50538, 50538, 420, 2171, 2283, 13, 50580, 50580, 400, 550, 291, 362, 281, 1320, 341, 281, 257, 2856, 50670, 50670, 2316, 300, 5112, 291, 341, 8310, 307, 1944, 11, 50820, 50820, 300, 661, 8310, 1943, 380, 13, 50872, 50872, 400, 550, 309, 16137, 484, 264, 1151, 1944, 14174, 51056, 51056, 4650, 281, 264, 2856, 2316, 293, 4650, 281, 264, 13444, 51174, 51174, 7126, 538, 428, 1185, 13, 51252, 51252, 961, 311, 352, 281, 979, 19866, 13, 51374, 51374, 400, 264, 955, 1168, 307, 11, 577, 360, 291, 646, 48256, 16235, 51526, 51526, 281, 264, 979, 19866, 30, 51578, 51578, 821, 311, 787, 257, 588, 1359, 1230, 295, 6218, 11150, 3652, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17497529602050782, "compression_ratio": 1.7598566308243728, "no_speech_prob": 1.3208647033025045e-05}, {"id": 1477, "seek": 423228, "start": 4256.5599999999995, "end": 4259.599999999999, "text": " There's only a very small number of speech recognition systems", "tokens": [50364, 2035, 291, 528, 11, 295, 2609, 3263, 420, 30754, 443, 279, 50538, 50538, 420, 2171, 2283, 13, 50580, 50580, 400, 550, 291, 362, 281, 1320, 341, 281, 257, 2856, 50670, 50670, 2316, 300, 5112, 291, 341, 8310, 307, 1944, 11, 50820, 50820, 300, 661, 8310, 1943, 380, 13, 50872, 50872, 400, 550, 309, 16137, 484, 264, 1151, 1944, 14174, 51056, 51056, 4650, 281, 264, 2856, 2316, 293, 4650, 281, 264, 13444, 51174, 51174, 7126, 538, 428, 1185, 13, 51252, 51252, 961, 311, 352, 281, 979, 19866, 13, 51374, 51374, 400, 264, 955, 1168, 307, 11, 577, 360, 291, 646, 48256, 16235, 51526, 51526, 281, 264, 979, 19866, 30, 51578, 51578, 821, 311, 787, 257, 588, 1359, 1230, 295, 6218, 11150, 3652, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17497529602050782, "compression_ratio": 1.7598566308243728, "no_speech_prob": 1.3208647033025045e-05}, {"id": 1478, "seek": 425960, "start": 4259.6, "end": 4262.72, "text": " today that actually do this.", "tokens": [50364, 965, 300, 767, 360, 341, 13, 50520, 50520, 440, 6792, 472, 11, 286, 519, 11, 307, 538, 9949, 282, 4004, 4290, 11, 50630, 50630, 264, 3380, 3793, 295, 7160, 339, 13, 50704, 50828, 400, 510, 307, 577, 341, 1985, 13, 50900, 50900, 407, 718, 311, 584, 291, 528, 281, 11, 370, 341, 51042, 51042, 307, 257, 1729, 3410, 1219, 4295, 12686, 420, 4295, 51216, 51216, 1145, 8117, 433, 11, 597, 733, 295, 13948, 51542, 51542, 577, 291, 393, 10432, 24877, 365, 1184, 661, 11, 337, 1365, 11, 51684, 51684, 1214, 365, 257, 2856, 2316, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1561030281914605, "compression_ratio": 1.517391304347826, "no_speech_prob": 2.013793528021779e-05}, {"id": 1479, "seek": 425960, "start": 4262.72, "end": 4264.92, "text": " The latest one, I think, is by Ronan Colbert,", "tokens": [50364, 965, 300, 767, 360, 341, 13, 50520, 50520, 440, 6792, 472, 11, 286, 519, 11, 307, 538, 9949, 282, 4004, 4290, 11, 50630, 50630, 264, 3380, 3793, 295, 7160, 339, 13, 50704, 50828, 400, 510, 307, 577, 341, 1985, 13, 50900, 50900, 407, 718, 311, 584, 291, 528, 281, 11, 370, 341, 51042, 51042, 307, 257, 1729, 3410, 1219, 4295, 12686, 420, 4295, 51216, 51216, 1145, 8117, 433, 11, 597, 733, 295, 13948, 51542, 51542, 577, 291, 393, 10432, 24877, 365, 1184, 661, 11, 337, 1365, 11, 51684, 51684, 1214, 365, 257, 2856, 2316, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1561030281914605, "compression_ratio": 1.517391304347826, "no_speech_prob": 2.013793528021779e-05}, {"id": 1480, "seek": 425960, "start": 4264.92, "end": 4266.400000000001, "text": " the original author of Torch.", "tokens": [50364, 965, 300, 767, 360, 341, 13, 50520, 50520, 440, 6792, 472, 11, 286, 519, 11, 307, 538, 9949, 282, 4004, 4290, 11, 50630, 50630, 264, 3380, 3793, 295, 7160, 339, 13, 50704, 50828, 400, 510, 307, 577, 341, 1985, 13, 50900, 50900, 407, 718, 311, 584, 291, 528, 281, 11, 370, 341, 51042, 51042, 307, 257, 1729, 3410, 1219, 4295, 12686, 420, 4295, 51216, 51216, 1145, 8117, 433, 11, 597, 733, 295, 13948, 51542, 51542, 577, 291, 393, 10432, 24877, 365, 1184, 661, 11, 337, 1365, 11, 51684, 51684, 1214, 365, 257, 2856, 2316, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1561030281914605, "compression_ratio": 1.517391304347826, "no_speech_prob": 2.013793528021779e-05}, {"id": 1481, "seek": 425960, "start": 4268.88, "end": 4270.320000000001, "text": " And here is how this works.", "tokens": [50364, 965, 300, 767, 360, 341, 13, 50520, 50520, 440, 6792, 472, 11, 286, 519, 11, 307, 538, 9949, 282, 4004, 4290, 11, 50630, 50630, 264, 3380, 3793, 295, 7160, 339, 13, 50704, 50828, 400, 510, 307, 577, 341, 1985, 13, 50900, 50900, 407, 718, 311, 584, 291, 528, 281, 11, 370, 341, 51042, 51042, 307, 257, 1729, 3410, 1219, 4295, 12686, 420, 4295, 51216, 51216, 1145, 8117, 433, 11, 597, 733, 295, 13948, 51542, 51542, 577, 291, 393, 10432, 24877, 365, 1184, 661, 11, 337, 1365, 11, 51684, 51684, 1214, 365, 257, 2856, 2316, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1561030281914605, "compression_ratio": 1.517391304347826, "no_speech_prob": 2.013793528021779e-05}, {"id": 1482, "seek": 425960, "start": 4270.320000000001, "end": 4273.160000000001, "text": " So let's say you want to, so this", "tokens": [50364, 965, 300, 767, 360, 341, 13, 50520, 50520, 440, 6792, 472, 11, 286, 519, 11, 307, 538, 9949, 282, 4004, 4290, 11, 50630, 50630, 264, 3380, 3793, 295, 7160, 339, 13, 50704, 50828, 400, 510, 307, 577, 341, 1985, 13, 50900, 50900, 407, 718, 311, 584, 291, 528, 281, 11, 370, 341, 51042, 51042, 307, 257, 1729, 3410, 1219, 4295, 12686, 420, 4295, 51216, 51216, 1145, 8117, 433, 11, 597, 733, 295, 13948, 51542, 51542, 577, 291, 393, 10432, 24877, 365, 1184, 661, 11, 337, 1365, 11, 51684, 51684, 1214, 365, 257, 2856, 2316, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1561030281914605, "compression_ratio": 1.517391304347826, "no_speech_prob": 2.013793528021779e-05}, {"id": 1483, "seek": 425960, "start": 4273.160000000001, "end": 4276.64, "text": " is a particular concept called graph composition or graph", "tokens": [50364, 965, 300, 767, 360, 341, 13, 50520, 50520, 440, 6792, 472, 11, 286, 519, 11, 307, 538, 9949, 282, 4004, 4290, 11, 50630, 50630, 264, 3380, 3793, 295, 7160, 339, 13, 50704, 50828, 400, 510, 307, 577, 341, 1985, 13, 50900, 50900, 407, 718, 311, 584, 291, 528, 281, 11, 370, 341, 51042, 51042, 307, 257, 1729, 3410, 1219, 4295, 12686, 420, 4295, 51216, 51216, 1145, 8117, 433, 11, 597, 733, 295, 13948, 51542, 51542, 577, 291, 393, 10432, 24877, 365, 1184, 661, 11, 337, 1365, 11, 51684, 51684, 1214, 365, 257, 2856, 2316, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1561030281914605, "compression_ratio": 1.517391304347826, "no_speech_prob": 2.013793528021779e-05}, {"id": 1484, "seek": 425960, "start": 4276.64, "end": 4283.160000000001, "text": " transducers, which kind of explains", "tokens": [50364, 965, 300, 767, 360, 341, 13, 50520, 50520, 440, 6792, 472, 11, 286, 519, 11, 307, 538, 9949, 282, 4004, 4290, 11, 50630, 50630, 264, 3380, 3793, 295, 7160, 339, 13, 50704, 50828, 400, 510, 307, 577, 341, 1985, 13, 50900, 50900, 407, 718, 311, 584, 291, 528, 281, 11, 370, 341, 51042, 51042, 307, 257, 1729, 3410, 1219, 4295, 12686, 420, 4295, 51216, 51216, 1145, 8117, 433, 11, 597, 733, 295, 13948, 51542, 51542, 577, 291, 393, 10432, 24877, 365, 1184, 661, 11, 337, 1365, 11, 51684, 51684, 1214, 365, 257, 2856, 2316, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1561030281914605, "compression_ratio": 1.517391304347826, "no_speech_prob": 2.013793528021779e-05}, {"id": 1485, "seek": 425960, "start": 4283.160000000001, "end": 4286.0, "text": " how you can combine graphs with each other, for example,", "tokens": [50364, 965, 300, 767, 360, 341, 13, 50520, 50520, 440, 6792, 472, 11, 286, 519, 11, 307, 538, 9949, 282, 4004, 4290, 11, 50630, 50630, 264, 3380, 3793, 295, 7160, 339, 13, 50704, 50828, 400, 510, 307, 577, 341, 1985, 13, 50900, 50900, 407, 718, 311, 584, 291, 528, 281, 11, 370, 341, 51042, 51042, 307, 257, 1729, 3410, 1219, 4295, 12686, 420, 4295, 51216, 51216, 1145, 8117, 433, 11, 597, 733, 295, 13948, 51542, 51542, 577, 291, 393, 10432, 24877, 365, 1184, 661, 11, 337, 1365, 11, 51684, 51684, 1214, 365, 257, 2856, 2316, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1561030281914605, "compression_ratio": 1.517391304347826, "no_speech_prob": 2.013793528021779e-05}, {"id": 1486, "seek": 425960, "start": 4286.0, "end": 4288.400000000001, "text": " together with a language model.", "tokens": [50364, 965, 300, 767, 360, 341, 13, 50520, 50520, 440, 6792, 472, 11, 286, 519, 11, 307, 538, 9949, 282, 4004, 4290, 11, 50630, 50630, 264, 3380, 3793, 295, 7160, 339, 13, 50704, 50828, 400, 510, 307, 577, 341, 1985, 13, 50900, 50900, 407, 718, 311, 584, 291, 528, 281, 11, 370, 341, 51042, 51042, 307, 257, 1729, 3410, 1219, 4295, 12686, 420, 4295, 51216, 51216, 1145, 8117, 433, 11, 597, 733, 295, 13948, 51542, 51542, 577, 291, 393, 10432, 24877, 365, 1184, 661, 11, 337, 1365, 11, 51684, 51684, 1214, 365, 257, 2856, 2316, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1561030281914605, "compression_ratio": 1.517391304347826, "no_speech_prob": 2.013793528021779e-05}, {"id": 1487, "seek": 428840, "start": 4288.4, "end": 4293.24, "text": " So you can think of a language model as a graph.", "tokens": [50364, 407, 291, 393, 519, 295, 257, 2856, 2316, 382, 257, 4295, 13, 50606, 50606, 509, 393, 2906, 309, 382, 257, 4295, 420, 382, 257, 18161, 2533, 13, 50722, 50722, 467, 1177, 380, 1871, 13, 50760, 50760, 583, 286, 478, 516, 281, 2906, 309, 382, 257, 4295, 13, 50918, 50918, 407, 510, 11, 341, 307, 1936, 257, 476, 87, 11911, 51034, 51034, 300, 307, 10379, 382, 257, 4230, 11, 4230, 11, 314, 12, 49, 12, 40, 12, 36, 13, 51312, 51312, 400, 309, 393, 2906, 264, 2283, 18492, 11, 6660, 11, 4052, 11, 13698, 11, 1410, 11, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.11519026756286621, "compression_ratio": 1.6170212765957446, "no_speech_prob": 7.07098433849751e-06}, {"id": 1488, "seek": 428840, "start": 4293.24, "end": 4295.5599999999995, "text": " You can represent it as a graph or as a neural net.", "tokens": [50364, 407, 291, 393, 519, 295, 257, 2856, 2316, 382, 257, 4295, 13, 50606, 50606, 509, 393, 2906, 309, 382, 257, 4295, 420, 382, 257, 18161, 2533, 13, 50722, 50722, 467, 1177, 380, 1871, 13, 50760, 50760, 583, 286, 478, 516, 281, 2906, 309, 382, 257, 4295, 13, 50918, 50918, 407, 510, 11, 341, 307, 1936, 257, 476, 87, 11911, 51034, 51034, 300, 307, 10379, 382, 257, 4230, 11, 4230, 11, 314, 12, 49, 12, 40, 12, 36, 13, 51312, 51312, 400, 309, 393, 2906, 264, 2283, 18492, 11, 6660, 11, 4052, 11, 13698, 11, 1410, 11, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.11519026756286621, "compression_ratio": 1.6170212765957446, "no_speech_prob": 7.07098433849751e-06}, {"id": 1489, "seek": 428840, "start": 4295.5599999999995, "end": 4296.32, "text": " It doesn't matter.", "tokens": [50364, 407, 291, 393, 519, 295, 257, 2856, 2316, 382, 257, 4295, 13, 50606, 50606, 509, 393, 2906, 309, 382, 257, 4295, 420, 382, 257, 18161, 2533, 13, 50722, 50722, 467, 1177, 380, 1871, 13, 50760, 50760, 583, 286, 478, 516, 281, 2906, 309, 382, 257, 4295, 13, 50918, 50918, 407, 510, 11, 341, 307, 1936, 257, 476, 87, 11911, 51034, 51034, 300, 307, 10379, 382, 257, 4230, 11, 4230, 11, 314, 12, 49, 12, 40, 12, 36, 13, 51312, 51312, 400, 309, 393, 2906, 264, 2283, 18492, 11, 6660, 11, 4052, 11, 13698, 11, 1410, 11, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.11519026756286621, "compression_ratio": 1.6170212765957446, "no_speech_prob": 7.07098433849751e-06}, {"id": 1490, "seek": 428840, "start": 4296.32, "end": 4299.48, "text": " But I'm going to represent it as a graph.", "tokens": [50364, 407, 291, 393, 519, 295, 257, 2856, 2316, 382, 257, 4295, 13, 50606, 50606, 509, 393, 2906, 309, 382, 257, 4295, 420, 382, 257, 18161, 2533, 13, 50722, 50722, 467, 1177, 380, 1871, 13, 50760, 50760, 583, 286, 478, 516, 281, 2906, 309, 382, 257, 4295, 13, 50918, 50918, 407, 510, 11, 341, 307, 1936, 257, 476, 87, 11911, 51034, 51034, 300, 307, 10379, 382, 257, 4230, 11, 4230, 11, 314, 12, 49, 12, 40, 12, 36, 13, 51312, 51312, 400, 309, 393, 2906, 264, 2283, 18492, 11, 6660, 11, 4052, 11, 13698, 11, 1410, 11, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.11519026756286621, "compression_ratio": 1.6170212765957446, "no_speech_prob": 7.07098433849751e-06}, {"id": 1491, "seek": 428840, "start": 4299.48, "end": 4301.799999999999, "text": " So here, this is basically a lexicon", "tokens": [50364, 407, 291, 393, 519, 295, 257, 2856, 2316, 382, 257, 4295, 13, 50606, 50606, 509, 393, 2906, 309, 382, 257, 4295, 420, 382, 257, 18161, 2533, 13, 50722, 50722, 467, 1177, 380, 1871, 13, 50760, 50760, 583, 286, 478, 516, 281, 2906, 309, 382, 257, 4295, 13, 50918, 50918, 407, 510, 11, 341, 307, 1936, 257, 476, 87, 11911, 51034, 51034, 300, 307, 10379, 382, 257, 4230, 11, 4230, 11, 314, 12, 49, 12, 40, 12, 36, 13, 51312, 51312, 400, 309, 393, 2906, 264, 2283, 18492, 11, 6660, 11, 4052, 11, 13698, 11, 1410, 11, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.11519026756286621, "compression_ratio": 1.6170212765957446, "no_speech_prob": 7.07098433849751e-06}, {"id": 1492, "seek": 428840, "start": 4301.799999999999, "end": 4307.36, "text": " that is represented as a tree, tree, T-R-I-E.", "tokens": [50364, 407, 291, 393, 519, 295, 257, 2856, 2316, 382, 257, 4295, 13, 50606, 50606, 509, 393, 2906, 309, 382, 257, 4295, 420, 382, 257, 18161, 2533, 13, 50722, 50722, 467, 1177, 380, 1871, 13, 50760, 50760, 583, 286, 478, 516, 281, 2906, 309, 382, 257, 4295, 13, 50918, 50918, 407, 510, 11, 341, 307, 1936, 257, 476, 87, 11911, 51034, 51034, 300, 307, 10379, 382, 257, 4230, 11, 4230, 11, 314, 12, 49, 12, 40, 12, 36, 13, 51312, 51312, 400, 309, 393, 2906, 264, 2283, 18492, 11, 6660, 11, 4052, 11, 13698, 11, 1410, 11, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.11519026756286621, "compression_ratio": 1.6170212765957446, "no_speech_prob": 7.07098433849751e-06}, {"id": 1493, "seek": 428840, "start": 4307.36, "end": 4315.92, "text": " And it can represent the words barn, butt, cute, cure, cap,", "tokens": [50364, 407, 291, 393, 519, 295, 257, 2856, 2316, 382, 257, 4295, 13, 50606, 50606, 509, 393, 2906, 309, 382, 257, 4295, 420, 382, 257, 18161, 2533, 13, 50722, 50722, 467, 1177, 380, 1871, 13, 50760, 50760, 583, 286, 478, 516, 281, 2906, 309, 382, 257, 4295, 13, 50918, 50918, 407, 510, 11, 341, 307, 1936, 257, 476, 87, 11911, 51034, 51034, 300, 307, 10379, 382, 257, 4230, 11, 4230, 11, 314, 12, 49, 12, 40, 12, 36, 13, 51312, 51312, 400, 309, 393, 2906, 264, 2283, 18492, 11, 6660, 11, 4052, 11, 13698, 11, 1410, 11, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.11519026756286621, "compression_ratio": 1.6170212765957446, "no_speech_prob": 7.07098433849751e-06}, {"id": 1494, "seek": 431592, "start": 4315.92, "end": 4318.56, "text": " cat, and card.", "tokens": [50364, 3857, 11, 293, 2920, 13, 50496, 50496, 407, 1184, 14709, 9984, 307, 257, 1349, 13, 50616, 50616, 400, 1184, 3100, 293, 1184, 14709, 9984, 23249, 281, 257, 3100, 13, 50772, 50772, 400, 1184, 3100, 307, 257, 1349, 11, 1936, 13, 50882, 50882, 440, 8310, 295, 16944, 307, 257, 1349, 13, 51050, 51050, 407, 718, 311, 3811, 527, 2302, 476, 87, 11911, 307, 341, 13, 51230, 51230, 400, 321, 362, 257, 18161, 2533, 420, 746, 51316, 51316, 300, 14725, 257, 2192, 285, 271, 295, 1944, 14174, 51476, 51476, 300, 23249, 281, 341, 4295, 13, 51540, 51540, 407, 309, 1619, 11, 264, 700, 2517, 11, 286, 51622, 51622, 393, 380, 980, 291, 2293, 437, 309, 307, 11, 51694, 51694, 457, 286, 519, 309, 311, 383, 365, 2281, 1958, 13, 19, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12503917952229207, "compression_ratio": 1.7045454545454546, "no_speech_prob": 6.747608495061286e-06}, {"id": 1495, "seek": 431592, "start": 4318.56, "end": 4320.96, "text": " So each terminal node is a word.", "tokens": [50364, 3857, 11, 293, 2920, 13, 50496, 50496, 407, 1184, 14709, 9984, 307, 257, 1349, 13, 50616, 50616, 400, 1184, 3100, 293, 1184, 14709, 9984, 23249, 281, 257, 3100, 13, 50772, 50772, 400, 1184, 3100, 307, 257, 1349, 11, 1936, 13, 50882, 50882, 440, 8310, 295, 16944, 307, 257, 1349, 13, 51050, 51050, 407, 718, 311, 3811, 527, 2302, 476, 87, 11911, 307, 341, 13, 51230, 51230, 400, 321, 362, 257, 18161, 2533, 420, 746, 51316, 51316, 300, 14725, 257, 2192, 285, 271, 295, 1944, 14174, 51476, 51476, 300, 23249, 281, 341, 4295, 13, 51540, 51540, 407, 309, 1619, 11, 264, 700, 2517, 11, 286, 51622, 51622, 393, 380, 980, 291, 2293, 437, 309, 307, 11, 51694, 51694, 457, 286, 519, 309, 311, 383, 365, 2281, 1958, 13, 19, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12503917952229207, "compression_ratio": 1.7045454545454546, "no_speech_prob": 6.747608495061286e-06}, {"id": 1496, "seek": 431592, "start": 4320.96, "end": 4324.08, "text": " And each path and each terminal node corresponds to a path.", "tokens": [50364, 3857, 11, 293, 2920, 13, 50496, 50496, 407, 1184, 14709, 9984, 307, 257, 1349, 13, 50616, 50616, 400, 1184, 3100, 293, 1184, 14709, 9984, 23249, 281, 257, 3100, 13, 50772, 50772, 400, 1184, 3100, 307, 257, 1349, 11, 1936, 13, 50882, 50882, 440, 8310, 295, 16944, 307, 257, 1349, 13, 51050, 51050, 407, 718, 311, 3811, 527, 2302, 476, 87, 11911, 307, 341, 13, 51230, 51230, 400, 321, 362, 257, 18161, 2533, 420, 746, 51316, 51316, 300, 14725, 257, 2192, 285, 271, 295, 1944, 14174, 51476, 51476, 300, 23249, 281, 341, 4295, 13, 51540, 51540, 407, 309, 1619, 11, 264, 700, 2517, 11, 286, 51622, 51622, 393, 380, 980, 291, 2293, 437, 309, 307, 11, 51694, 51694, 457, 286, 519, 309, 311, 383, 365, 2281, 1958, 13, 19, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12503917952229207, "compression_ratio": 1.7045454545454546, "no_speech_prob": 6.747608495061286e-06}, {"id": 1497, "seek": 431592, "start": 4324.08, "end": 4326.28, "text": " And each path is a word, basically.", "tokens": [50364, 3857, 11, 293, 2920, 13, 50496, 50496, 407, 1184, 14709, 9984, 307, 257, 1349, 13, 50616, 50616, 400, 1184, 3100, 293, 1184, 14709, 9984, 23249, 281, 257, 3100, 13, 50772, 50772, 400, 1184, 3100, 307, 257, 1349, 11, 1936, 13, 50882, 50882, 440, 8310, 295, 16944, 307, 257, 1349, 13, 51050, 51050, 407, 718, 311, 3811, 527, 2302, 476, 87, 11911, 307, 341, 13, 51230, 51230, 400, 321, 362, 257, 18161, 2533, 420, 746, 51316, 51316, 300, 14725, 257, 2192, 285, 271, 295, 1944, 14174, 51476, 51476, 300, 23249, 281, 341, 4295, 13, 51540, 51540, 407, 309, 1619, 11, 264, 700, 2517, 11, 286, 51622, 51622, 393, 380, 980, 291, 2293, 437, 309, 307, 11, 51694, 51694, 457, 286, 519, 309, 311, 383, 365, 2281, 1958, 13, 19, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12503917952229207, "compression_ratio": 1.7045454545454546, "no_speech_prob": 6.747608495061286e-06}, {"id": 1498, "seek": 431592, "start": 4326.28, "end": 4329.64, "text": " The sequence of symbols is a word.", "tokens": [50364, 3857, 11, 293, 2920, 13, 50496, 50496, 407, 1184, 14709, 9984, 307, 257, 1349, 13, 50616, 50616, 400, 1184, 3100, 293, 1184, 14709, 9984, 23249, 281, 257, 3100, 13, 50772, 50772, 400, 1184, 3100, 307, 257, 1349, 11, 1936, 13, 50882, 50882, 440, 8310, 295, 16944, 307, 257, 1349, 13, 51050, 51050, 407, 718, 311, 3811, 527, 2302, 476, 87, 11911, 307, 341, 13, 51230, 51230, 400, 321, 362, 257, 18161, 2533, 420, 746, 51316, 51316, 300, 14725, 257, 2192, 285, 271, 295, 1944, 14174, 51476, 51476, 300, 23249, 281, 341, 4295, 13, 51540, 51540, 407, 309, 1619, 11, 264, 700, 2517, 11, 286, 51622, 51622, 393, 380, 980, 291, 2293, 437, 309, 307, 11, 51694, 51694, 457, 286, 519, 309, 311, 383, 365, 2281, 1958, 13, 19, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12503917952229207, "compression_ratio": 1.7045454545454546, "no_speech_prob": 6.747608495061286e-06}, {"id": 1499, "seek": 431592, "start": 4329.64, "end": 4333.24, "text": " So let's imagine our entire lexicon is this.", "tokens": [50364, 3857, 11, 293, 2920, 13, 50496, 50496, 407, 1184, 14709, 9984, 307, 257, 1349, 13, 50616, 50616, 400, 1184, 3100, 293, 1184, 14709, 9984, 23249, 281, 257, 3100, 13, 50772, 50772, 400, 1184, 3100, 307, 257, 1349, 11, 1936, 13, 50882, 50882, 440, 8310, 295, 16944, 307, 257, 1349, 13, 51050, 51050, 407, 718, 311, 3811, 527, 2302, 476, 87, 11911, 307, 341, 13, 51230, 51230, 400, 321, 362, 257, 18161, 2533, 420, 746, 51316, 51316, 300, 14725, 257, 2192, 285, 271, 295, 1944, 14174, 51476, 51476, 300, 23249, 281, 341, 4295, 13, 51540, 51540, 407, 309, 1619, 11, 264, 700, 2517, 11, 286, 51622, 51622, 393, 380, 980, 291, 2293, 437, 309, 307, 11, 51694, 51694, 457, 286, 519, 309, 311, 383, 365, 2281, 1958, 13, 19, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12503917952229207, "compression_ratio": 1.7045454545454546, "no_speech_prob": 6.747608495061286e-06}, {"id": 1500, "seek": 431592, "start": 4333.24, "end": 4334.96, "text": " And we have a neural net or something", "tokens": [50364, 3857, 11, 293, 2920, 13, 50496, 50496, 407, 1184, 14709, 9984, 307, 257, 1349, 13, 50616, 50616, 400, 1184, 3100, 293, 1184, 14709, 9984, 23249, 281, 257, 3100, 13, 50772, 50772, 400, 1184, 3100, 307, 257, 1349, 11, 1936, 13, 50882, 50882, 440, 8310, 295, 16944, 307, 257, 1349, 13, 51050, 51050, 407, 718, 311, 3811, 527, 2302, 476, 87, 11911, 307, 341, 13, 51230, 51230, 400, 321, 362, 257, 18161, 2533, 420, 746, 51316, 51316, 300, 14725, 257, 2192, 285, 271, 295, 1944, 14174, 51476, 51476, 300, 23249, 281, 341, 4295, 13, 51540, 51540, 407, 309, 1619, 11, 264, 700, 2517, 11, 286, 51622, 51622, 393, 380, 980, 291, 2293, 437, 309, 307, 11, 51694, 51694, 457, 286, 519, 309, 311, 383, 365, 2281, 1958, 13, 19, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12503917952229207, "compression_ratio": 1.7045454545454546, "no_speech_prob": 6.747608495061286e-06}, {"id": 1501, "seek": 431592, "start": 4334.96, "end": 4338.16, "text": " that produces a trellis of possible interpretation", "tokens": [50364, 3857, 11, 293, 2920, 13, 50496, 50496, 407, 1184, 14709, 9984, 307, 257, 1349, 13, 50616, 50616, 400, 1184, 3100, 293, 1184, 14709, 9984, 23249, 281, 257, 3100, 13, 50772, 50772, 400, 1184, 3100, 307, 257, 1349, 11, 1936, 13, 50882, 50882, 440, 8310, 295, 16944, 307, 257, 1349, 13, 51050, 51050, 407, 718, 311, 3811, 527, 2302, 476, 87, 11911, 307, 341, 13, 51230, 51230, 400, 321, 362, 257, 18161, 2533, 420, 746, 51316, 51316, 300, 14725, 257, 2192, 285, 271, 295, 1944, 14174, 51476, 51476, 300, 23249, 281, 341, 4295, 13, 51540, 51540, 407, 309, 1619, 11, 264, 700, 2517, 11, 286, 51622, 51622, 393, 380, 980, 291, 2293, 437, 309, 307, 11, 51694, 51694, 457, 286, 519, 309, 311, 383, 365, 2281, 1958, 13, 19, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12503917952229207, "compression_ratio": 1.7045454545454546, "no_speech_prob": 6.747608495061286e-06}, {"id": 1502, "seek": 431592, "start": 4338.16, "end": 4339.4400000000005, "text": " that corresponds to this graph.", "tokens": [50364, 3857, 11, 293, 2920, 13, 50496, 50496, 407, 1184, 14709, 9984, 307, 257, 1349, 13, 50616, 50616, 400, 1184, 3100, 293, 1184, 14709, 9984, 23249, 281, 257, 3100, 13, 50772, 50772, 400, 1184, 3100, 307, 257, 1349, 11, 1936, 13, 50882, 50882, 440, 8310, 295, 16944, 307, 257, 1349, 13, 51050, 51050, 407, 718, 311, 3811, 527, 2302, 476, 87, 11911, 307, 341, 13, 51230, 51230, 400, 321, 362, 257, 18161, 2533, 420, 746, 51316, 51316, 300, 14725, 257, 2192, 285, 271, 295, 1944, 14174, 51476, 51476, 300, 23249, 281, 341, 4295, 13, 51540, 51540, 407, 309, 1619, 11, 264, 700, 2517, 11, 286, 51622, 51622, 393, 380, 980, 291, 2293, 437, 309, 307, 11, 51694, 51694, 457, 286, 519, 309, 311, 383, 365, 2281, 1958, 13, 19, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12503917952229207, "compression_ratio": 1.7045454545454546, "no_speech_prob": 6.747608495061286e-06}, {"id": 1503, "seek": 431592, "start": 4339.4400000000005, "end": 4341.08, "text": " So it says, the first character, I", "tokens": [50364, 3857, 11, 293, 2920, 13, 50496, 50496, 407, 1184, 14709, 9984, 307, 257, 1349, 13, 50616, 50616, 400, 1184, 3100, 293, 1184, 14709, 9984, 23249, 281, 257, 3100, 13, 50772, 50772, 400, 1184, 3100, 307, 257, 1349, 11, 1936, 13, 50882, 50882, 440, 8310, 295, 16944, 307, 257, 1349, 13, 51050, 51050, 407, 718, 311, 3811, 527, 2302, 476, 87, 11911, 307, 341, 13, 51230, 51230, 400, 321, 362, 257, 18161, 2533, 420, 746, 51316, 51316, 300, 14725, 257, 2192, 285, 271, 295, 1944, 14174, 51476, 51476, 300, 23249, 281, 341, 4295, 13, 51540, 51540, 407, 309, 1619, 11, 264, 700, 2517, 11, 286, 51622, 51622, 393, 380, 980, 291, 2293, 437, 309, 307, 11, 51694, 51694, 457, 286, 519, 309, 311, 383, 365, 2281, 1958, 13, 19, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12503917952229207, "compression_ratio": 1.7045454545454546, "no_speech_prob": 6.747608495061286e-06}, {"id": 1504, "seek": 431592, "start": 4341.08, "end": 4342.52, "text": " can't tell you exactly what it is,", "tokens": [50364, 3857, 11, 293, 2920, 13, 50496, 50496, 407, 1184, 14709, 9984, 307, 257, 1349, 13, 50616, 50616, 400, 1184, 3100, 293, 1184, 14709, 9984, 23249, 281, 257, 3100, 13, 50772, 50772, 400, 1184, 3100, 307, 257, 1349, 11, 1936, 13, 50882, 50882, 440, 8310, 295, 16944, 307, 257, 1349, 13, 51050, 51050, 407, 718, 311, 3811, 527, 2302, 476, 87, 11911, 307, 341, 13, 51230, 51230, 400, 321, 362, 257, 18161, 2533, 420, 746, 51316, 51316, 300, 14725, 257, 2192, 285, 271, 295, 1944, 14174, 51476, 51476, 300, 23249, 281, 341, 4295, 13, 51540, 51540, 407, 309, 1619, 11, 264, 700, 2517, 11, 286, 51622, 51622, 393, 380, 980, 291, 2293, 437, 309, 307, 11, 51694, 51694, 457, 286, 519, 309, 311, 383, 365, 2281, 1958, 13, 19, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12503917952229207, "compression_ratio": 1.7045454545454546, "no_speech_prob": 6.747608495061286e-06}, {"id": 1505, "seek": 431592, "start": 4342.52, "end": 4344.4, "text": " but I think it's C with energy 0.4.", "tokens": [50364, 3857, 11, 293, 2920, 13, 50496, 50496, 407, 1184, 14709, 9984, 307, 257, 1349, 13, 50616, 50616, 400, 1184, 3100, 293, 1184, 14709, 9984, 23249, 281, 257, 3100, 13, 50772, 50772, 400, 1184, 3100, 307, 257, 1349, 11, 1936, 13, 50882, 50882, 440, 8310, 295, 16944, 307, 257, 1349, 13, 51050, 51050, 407, 718, 311, 3811, 527, 2302, 476, 87, 11911, 307, 341, 13, 51230, 51230, 400, 321, 362, 257, 18161, 2533, 420, 746, 51316, 51316, 300, 14725, 257, 2192, 285, 271, 295, 1944, 14174, 51476, 51476, 300, 23249, 281, 341, 4295, 13, 51540, 51540, 407, 309, 1619, 11, 264, 700, 2517, 11, 286, 51622, 51622, 393, 380, 980, 291, 2293, 437, 309, 307, 11, 51694, 51694, 457, 286, 519, 309, 311, 383, 365, 2281, 1958, 13, 19, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12503917952229207, "compression_ratio": 1.7045454545454546, "no_speech_prob": 6.747608495061286e-06}, {"id": 1506, "seek": 434440, "start": 4344.4, "end": 4348.599999999999, "text": " It's O with energy 1 or is D with energy 1.8.", "tokens": [50364, 467, 311, 422, 365, 2281, 502, 420, 307, 413, 365, 2281, 502, 13, 23, 13, 50574, 50574, 467, 1619, 309, 311, 257, 2517, 3068, 6545, 13, 50668, 50668, 400, 264, 1150, 472, 1619, 309, 311, 1783, 365, 2281, 1958, 13, 16, 420, 316, 365, 1958, 13, 17, 50822, 50822, 420, 624, 365, 1958, 13, 23, 13, 50866, 50866, 400, 264, 1036, 472, 11, 430, 365, 1958, 13, 17, 11, 314, 365, 1958, 13, 23, 13, 51020, 51020, 407, 437, 321, 643, 281, 360, 586, 307, 11, 437, 51112, 51112, 307, 264, 1151, 14174, 295, 341, 11, 264, 1151, 3100, 294, 341, 11, 51486, 51486, 300, 611, 2314, 281, 312, 1974, 294, 527, 476, 87, 11911, 30, 51698, 51698, 400, 264, 6916, 291, 643, 281, 360, 337, 341, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1353681142093571, "compression_ratio": 1.7695852534562213, "no_speech_prob": 2.1232899598544464e-06}, {"id": 1507, "seek": 434440, "start": 4348.599999999999, "end": 4350.48, "text": " It says it's a character recognizer.", "tokens": [50364, 467, 311, 422, 365, 2281, 502, 420, 307, 413, 365, 2281, 502, 13, 23, 13, 50574, 50574, 467, 1619, 309, 311, 257, 2517, 3068, 6545, 13, 50668, 50668, 400, 264, 1150, 472, 1619, 309, 311, 1783, 365, 2281, 1958, 13, 16, 420, 316, 365, 1958, 13, 17, 50822, 50822, 420, 624, 365, 1958, 13, 23, 13, 50866, 50866, 400, 264, 1036, 472, 11, 430, 365, 1958, 13, 17, 11, 314, 365, 1958, 13, 23, 13, 51020, 51020, 407, 437, 321, 643, 281, 360, 586, 307, 11, 437, 51112, 51112, 307, 264, 1151, 14174, 295, 341, 11, 264, 1151, 3100, 294, 341, 11, 51486, 51486, 300, 611, 2314, 281, 312, 1974, 294, 527, 476, 87, 11911, 30, 51698, 51698, 400, 264, 6916, 291, 643, 281, 360, 337, 341, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1353681142093571, "compression_ratio": 1.7695852534562213, "no_speech_prob": 2.1232899598544464e-06}, {"id": 1508, "seek": 434440, "start": 4350.48, "end": 4353.5599999999995, "text": " And the second one says it's X with energy 0.1 or A with 0.2", "tokens": [50364, 467, 311, 422, 365, 2281, 502, 420, 307, 413, 365, 2281, 502, 13, 23, 13, 50574, 50574, 467, 1619, 309, 311, 257, 2517, 3068, 6545, 13, 50668, 50668, 400, 264, 1150, 472, 1619, 309, 311, 1783, 365, 2281, 1958, 13, 16, 420, 316, 365, 1958, 13, 17, 50822, 50822, 420, 624, 365, 1958, 13, 23, 13, 50866, 50866, 400, 264, 1036, 472, 11, 430, 365, 1958, 13, 17, 11, 314, 365, 1958, 13, 23, 13, 51020, 51020, 407, 437, 321, 643, 281, 360, 586, 307, 11, 437, 51112, 51112, 307, 264, 1151, 14174, 295, 341, 11, 264, 1151, 3100, 294, 341, 11, 51486, 51486, 300, 611, 2314, 281, 312, 1974, 294, 527, 476, 87, 11911, 30, 51698, 51698, 400, 264, 6916, 291, 643, 281, 360, 337, 341, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1353681142093571, "compression_ratio": 1.7695852534562213, "no_speech_prob": 2.1232899598544464e-06}, {"id": 1509, "seek": 434440, "start": 4353.5599999999995, "end": 4354.44, "text": " or U with 0.8.", "tokens": [50364, 467, 311, 422, 365, 2281, 502, 420, 307, 413, 365, 2281, 502, 13, 23, 13, 50574, 50574, 467, 1619, 309, 311, 257, 2517, 3068, 6545, 13, 50668, 50668, 400, 264, 1150, 472, 1619, 309, 311, 1783, 365, 2281, 1958, 13, 16, 420, 316, 365, 1958, 13, 17, 50822, 50822, 420, 624, 365, 1958, 13, 23, 13, 50866, 50866, 400, 264, 1036, 472, 11, 430, 365, 1958, 13, 17, 11, 314, 365, 1958, 13, 23, 13, 51020, 51020, 407, 437, 321, 643, 281, 360, 586, 307, 11, 437, 51112, 51112, 307, 264, 1151, 14174, 295, 341, 11, 264, 1151, 3100, 294, 341, 11, 51486, 51486, 300, 611, 2314, 281, 312, 1974, 294, 527, 476, 87, 11911, 30, 51698, 51698, 400, 264, 6916, 291, 643, 281, 360, 337, 341, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1353681142093571, "compression_ratio": 1.7695852534562213, "no_speech_prob": 2.1232899598544464e-06}, {"id": 1510, "seek": 434440, "start": 4354.44, "end": 4357.5199999999995, "text": " And the last one, P with 0.2, T with 0.8.", "tokens": [50364, 467, 311, 422, 365, 2281, 502, 420, 307, 413, 365, 2281, 502, 13, 23, 13, 50574, 50574, 467, 1619, 309, 311, 257, 2517, 3068, 6545, 13, 50668, 50668, 400, 264, 1150, 472, 1619, 309, 311, 1783, 365, 2281, 1958, 13, 16, 420, 316, 365, 1958, 13, 17, 50822, 50822, 420, 624, 365, 1958, 13, 23, 13, 50866, 50866, 400, 264, 1036, 472, 11, 430, 365, 1958, 13, 17, 11, 314, 365, 1958, 13, 23, 13, 51020, 51020, 407, 437, 321, 643, 281, 360, 586, 307, 11, 437, 51112, 51112, 307, 264, 1151, 14174, 295, 341, 11, 264, 1151, 3100, 294, 341, 11, 51486, 51486, 300, 611, 2314, 281, 312, 1974, 294, 527, 476, 87, 11911, 30, 51698, 51698, 400, 264, 6916, 291, 643, 281, 360, 337, 341, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1353681142093571, "compression_ratio": 1.7695852534562213, "no_speech_prob": 2.1232899598544464e-06}, {"id": 1511, "seek": 434440, "start": 4357.5199999999995, "end": 4359.36, "text": " So what we need to do now is, what", "tokens": [50364, 467, 311, 422, 365, 2281, 502, 420, 307, 413, 365, 2281, 502, 13, 23, 13, 50574, 50574, 467, 1619, 309, 311, 257, 2517, 3068, 6545, 13, 50668, 50668, 400, 264, 1150, 472, 1619, 309, 311, 1783, 365, 2281, 1958, 13, 16, 420, 316, 365, 1958, 13, 17, 50822, 50822, 420, 624, 365, 1958, 13, 23, 13, 50866, 50866, 400, 264, 1036, 472, 11, 430, 365, 1958, 13, 17, 11, 314, 365, 1958, 13, 23, 13, 51020, 51020, 407, 437, 321, 643, 281, 360, 586, 307, 11, 437, 51112, 51112, 307, 264, 1151, 14174, 295, 341, 11, 264, 1151, 3100, 294, 341, 11, 51486, 51486, 300, 611, 2314, 281, 312, 1974, 294, 527, 476, 87, 11911, 30, 51698, 51698, 400, 264, 6916, 291, 643, 281, 360, 337, 341, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1353681142093571, "compression_ratio": 1.7695852534562213, "no_speech_prob": 2.1232899598544464e-06}, {"id": 1512, "seek": 434440, "start": 4359.36, "end": 4366.839999999999, "text": " is the best interpretation of this, the best path in this,", "tokens": [50364, 467, 311, 422, 365, 2281, 502, 420, 307, 413, 365, 2281, 502, 13, 23, 13, 50574, 50574, 467, 1619, 309, 311, 257, 2517, 3068, 6545, 13, 50668, 50668, 400, 264, 1150, 472, 1619, 309, 311, 1783, 365, 2281, 1958, 13, 16, 420, 316, 365, 1958, 13, 17, 50822, 50822, 420, 624, 365, 1958, 13, 23, 13, 50866, 50866, 400, 264, 1036, 472, 11, 430, 365, 1958, 13, 17, 11, 314, 365, 1958, 13, 23, 13, 51020, 51020, 407, 437, 321, 643, 281, 360, 586, 307, 11, 437, 51112, 51112, 307, 264, 1151, 14174, 295, 341, 11, 264, 1151, 3100, 294, 341, 11, 51486, 51486, 300, 611, 2314, 281, 312, 1974, 294, 527, 476, 87, 11911, 30, 51698, 51698, 400, 264, 6916, 291, 643, 281, 360, 337, 341, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1353681142093571, "compression_ratio": 1.7695852534562213, "no_speech_prob": 2.1232899598544464e-06}, {"id": 1513, "seek": 434440, "start": 4366.839999999999, "end": 4371.08, "text": " that also happens to be present in our lexicon?", "tokens": [50364, 467, 311, 422, 365, 2281, 502, 420, 307, 413, 365, 2281, 502, 13, 23, 13, 50574, 50574, 467, 1619, 309, 311, 257, 2517, 3068, 6545, 13, 50668, 50668, 400, 264, 1150, 472, 1619, 309, 311, 1783, 365, 2281, 1958, 13, 16, 420, 316, 365, 1958, 13, 17, 50822, 50822, 420, 624, 365, 1958, 13, 23, 13, 50866, 50866, 400, 264, 1036, 472, 11, 430, 365, 1958, 13, 17, 11, 314, 365, 1958, 13, 23, 13, 51020, 51020, 407, 437, 321, 643, 281, 360, 586, 307, 11, 437, 51112, 51112, 307, 264, 1151, 14174, 295, 341, 11, 264, 1151, 3100, 294, 341, 11, 51486, 51486, 300, 611, 2314, 281, 312, 1974, 294, 527, 476, 87, 11911, 30, 51698, 51698, 400, 264, 6916, 291, 643, 281, 360, 337, 341, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1353681142093571, "compression_ratio": 1.7695852534562213, "no_speech_prob": 2.1232899598544464e-06}, {"id": 1514, "seek": 434440, "start": 4371.08, "end": 4373.04, "text": " And the operation you need to do for this", "tokens": [50364, 467, 311, 422, 365, 2281, 502, 420, 307, 413, 365, 2281, 502, 13, 23, 13, 50574, 50574, 467, 1619, 309, 311, 257, 2517, 3068, 6545, 13, 50668, 50668, 400, 264, 1150, 472, 1619, 309, 311, 1783, 365, 2281, 1958, 13, 16, 420, 316, 365, 1958, 13, 17, 50822, 50822, 420, 624, 365, 1958, 13, 23, 13, 50866, 50866, 400, 264, 1036, 472, 11, 430, 365, 1958, 13, 17, 11, 314, 365, 1958, 13, 23, 13, 51020, 51020, 407, 437, 321, 643, 281, 360, 586, 307, 11, 437, 51112, 51112, 307, 264, 1151, 14174, 295, 341, 11, 264, 1151, 3100, 294, 341, 11, 51486, 51486, 300, 611, 2314, 281, 312, 1974, 294, 527, 476, 87, 11911, 30, 51698, 51698, 400, 264, 6916, 291, 643, 281, 360, 337, 341, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1353681142093571, "compression_ratio": 1.7695852534562213, "no_speech_prob": 2.1232899598544464e-06}, {"id": 1515, "seek": 437304, "start": 4373.04, "end": 4375.36, "text": " is a concept that was invented by Fernando Pereira, who", "tokens": [50364, 307, 257, 3410, 300, 390, 14479, 538, 30190, 49349, 4271, 11, 567, 50480, 50480, 307, 1378, 295, 264, 426, 45196, 2132, 1594, 13, 50606, 50606, 400, 544, 813, 300, 11, 767, 11, 412, 3329, 10303, 13, 50708, 50708, 583, 300, 390, 646, 562, 415, 390, 412, 8872, 5, 51, 11485, 40047, 294, 264, 2440, 50924, 50924, 4289, 82, 13, 51030, 51030, 400, 309, 390, 12270, 294, 364, 1269, 4009, 6405, 1219, 264, 479, 26693, 51208, 51208, 12806, 11, 597, 390, 12270, 538, 12734, 5146, 72, 11, 567, 51316, 51316, 307, 257, 8304, 412, 42682, 13, 51470, 51470, 634, 630, 341, 562, 415, 390, 412, 8872, 5, 51, 293, 550, 412, 3329, 13, 51638, 51638, 400, 264, 636, 291, 360, 341, 307, 341, 12686, 6916, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.16378537259360618, "compression_ratio": 1.6917293233082706, "no_speech_prob": 2.8384372853906825e-05}, {"id": 1516, "seek": 437304, "start": 4375.36, "end": 4377.88, "text": " is head of the NLP research group.", "tokens": [50364, 307, 257, 3410, 300, 390, 14479, 538, 30190, 49349, 4271, 11, 567, 50480, 50480, 307, 1378, 295, 264, 426, 45196, 2132, 1594, 13, 50606, 50606, 400, 544, 813, 300, 11, 767, 11, 412, 3329, 10303, 13, 50708, 50708, 583, 300, 390, 646, 562, 415, 390, 412, 8872, 5, 51, 11485, 40047, 294, 264, 2440, 50924, 50924, 4289, 82, 13, 51030, 51030, 400, 309, 390, 12270, 294, 364, 1269, 4009, 6405, 1219, 264, 479, 26693, 51208, 51208, 12806, 11, 597, 390, 12270, 538, 12734, 5146, 72, 11, 567, 51316, 51316, 307, 257, 8304, 412, 42682, 13, 51470, 51470, 634, 630, 341, 562, 415, 390, 412, 8872, 5, 51, 293, 550, 412, 3329, 13, 51638, 51638, 400, 264, 636, 291, 360, 341, 307, 341, 12686, 6916, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.16378537259360618, "compression_ratio": 1.6917293233082706, "no_speech_prob": 2.8384372853906825e-05}, {"id": 1517, "seek": 437304, "start": 4377.88, "end": 4379.92, "text": " And more than that, actually, at Google Research.", "tokens": [50364, 307, 257, 3410, 300, 390, 14479, 538, 30190, 49349, 4271, 11, 567, 50480, 50480, 307, 1378, 295, 264, 426, 45196, 2132, 1594, 13, 50606, 50606, 400, 544, 813, 300, 11, 767, 11, 412, 3329, 10303, 13, 50708, 50708, 583, 300, 390, 646, 562, 415, 390, 412, 8872, 5, 51, 11485, 40047, 294, 264, 2440, 50924, 50924, 4289, 82, 13, 51030, 51030, 400, 309, 390, 12270, 294, 364, 1269, 4009, 6405, 1219, 264, 479, 26693, 51208, 51208, 12806, 11, 597, 390, 12270, 538, 12734, 5146, 72, 11, 567, 51316, 51316, 307, 257, 8304, 412, 42682, 13, 51470, 51470, 634, 630, 341, 562, 415, 390, 412, 8872, 5, 51, 293, 550, 412, 3329, 13, 51638, 51638, 400, 264, 636, 291, 360, 341, 307, 341, 12686, 6916, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.16378537259360618, "compression_ratio": 1.6917293233082706, "no_speech_prob": 2.8384372853906825e-05}, {"id": 1518, "seek": 437304, "start": 4379.92, "end": 4384.24, "text": " But that was back when he was at AT&T Bell Labs in the early", "tokens": [50364, 307, 257, 3410, 300, 390, 14479, 538, 30190, 49349, 4271, 11, 567, 50480, 50480, 307, 1378, 295, 264, 426, 45196, 2132, 1594, 13, 50606, 50606, 400, 544, 813, 300, 11, 767, 11, 412, 3329, 10303, 13, 50708, 50708, 583, 300, 390, 646, 562, 415, 390, 412, 8872, 5, 51, 11485, 40047, 294, 264, 2440, 50924, 50924, 4289, 82, 13, 51030, 51030, 400, 309, 390, 12270, 294, 364, 1269, 4009, 6405, 1219, 264, 479, 26693, 51208, 51208, 12806, 11, 597, 390, 12270, 538, 12734, 5146, 72, 11, 567, 51316, 51316, 307, 257, 8304, 412, 42682, 13, 51470, 51470, 634, 630, 341, 562, 415, 390, 412, 8872, 5, 51, 293, 550, 412, 3329, 13, 51638, 51638, 400, 264, 636, 291, 360, 341, 307, 341, 12686, 6916, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.16378537259360618, "compression_ratio": 1.6917293233082706, "no_speech_prob": 2.8384372853906825e-05}, {"id": 1519, "seek": 437304, "start": 4384.24, "end": 4386.36, "text": " 90s.", "tokens": [50364, 307, 257, 3410, 300, 390, 14479, 538, 30190, 49349, 4271, 11, 567, 50480, 50480, 307, 1378, 295, 264, 426, 45196, 2132, 1594, 13, 50606, 50606, 400, 544, 813, 300, 11, 767, 11, 412, 3329, 10303, 13, 50708, 50708, 583, 300, 390, 646, 562, 415, 390, 412, 8872, 5, 51, 11485, 40047, 294, 264, 2440, 50924, 50924, 4289, 82, 13, 51030, 51030, 400, 309, 390, 12270, 294, 364, 1269, 4009, 6405, 1219, 264, 479, 26693, 51208, 51208, 12806, 11, 597, 390, 12270, 538, 12734, 5146, 72, 11, 567, 51316, 51316, 307, 257, 8304, 412, 42682, 13, 51470, 51470, 634, 630, 341, 562, 415, 390, 412, 8872, 5, 51, 293, 550, 412, 3329, 13, 51638, 51638, 400, 264, 636, 291, 360, 341, 307, 341, 12686, 6916, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.16378537259360618, "compression_ratio": 1.6917293233082706, "no_speech_prob": 2.8384372853906825e-05}, {"id": 1520, "seek": 437304, "start": 4386.36, "end": 4389.92, "text": " And it was implemented in an open source library called the FSM", "tokens": [50364, 307, 257, 3410, 300, 390, 14479, 538, 30190, 49349, 4271, 11, 567, 50480, 50480, 307, 1378, 295, 264, 426, 45196, 2132, 1594, 13, 50606, 50606, 400, 544, 813, 300, 11, 767, 11, 412, 3329, 10303, 13, 50708, 50708, 583, 300, 390, 646, 562, 415, 390, 412, 8872, 5, 51, 11485, 40047, 294, 264, 2440, 50924, 50924, 4289, 82, 13, 51030, 51030, 400, 309, 390, 12270, 294, 364, 1269, 4009, 6405, 1219, 264, 479, 26693, 51208, 51208, 12806, 11, 597, 390, 12270, 538, 12734, 5146, 72, 11, 567, 51316, 51316, 307, 257, 8304, 412, 42682, 13, 51470, 51470, 634, 630, 341, 562, 415, 390, 412, 8872, 5, 51, 293, 550, 412, 3329, 13, 51638, 51638, 400, 264, 636, 291, 360, 341, 307, 341, 12686, 6916, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.16378537259360618, "compression_ratio": 1.6917293233082706, "no_speech_prob": 2.8384372853906825e-05}, {"id": 1521, "seek": 437304, "start": 4389.92, "end": 4392.08, "text": " Library, which was implemented by Maria Mori, who", "tokens": [50364, 307, 257, 3410, 300, 390, 14479, 538, 30190, 49349, 4271, 11, 567, 50480, 50480, 307, 1378, 295, 264, 426, 45196, 2132, 1594, 13, 50606, 50606, 400, 544, 813, 300, 11, 767, 11, 412, 3329, 10303, 13, 50708, 50708, 583, 300, 390, 646, 562, 415, 390, 412, 8872, 5, 51, 11485, 40047, 294, 264, 2440, 50924, 50924, 4289, 82, 13, 51030, 51030, 400, 309, 390, 12270, 294, 364, 1269, 4009, 6405, 1219, 264, 479, 26693, 51208, 51208, 12806, 11, 597, 390, 12270, 538, 12734, 5146, 72, 11, 567, 51316, 51316, 307, 257, 8304, 412, 42682, 13, 51470, 51470, 634, 630, 341, 562, 415, 390, 412, 8872, 5, 51, 293, 550, 412, 3329, 13, 51638, 51638, 400, 264, 636, 291, 360, 341, 307, 341, 12686, 6916, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.16378537259360618, "compression_ratio": 1.6917293233082706, "no_speech_prob": 2.8384372853906825e-05}, {"id": 1522, "seek": 437304, "start": 4392.08, "end": 4395.16, "text": " is a professor at NYU.", "tokens": [50364, 307, 257, 3410, 300, 390, 14479, 538, 30190, 49349, 4271, 11, 567, 50480, 50480, 307, 1378, 295, 264, 426, 45196, 2132, 1594, 13, 50606, 50606, 400, 544, 813, 300, 11, 767, 11, 412, 3329, 10303, 13, 50708, 50708, 583, 300, 390, 646, 562, 415, 390, 412, 8872, 5, 51, 11485, 40047, 294, 264, 2440, 50924, 50924, 4289, 82, 13, 51030, 51030, 400, 309, 390, 12270, 294, 364, 1269, 4009, 6405, 1219, 264, 479, 26693, 51208, 51208, 12806, 11, 597, 390, 12270, 538, 12734, 5146, 72, 11, 567, 51316, 51316, 307, 257, 8304, 412, 42682, 13, 51470, 51470, 634, 630, 341, 562, 415, 390, 412, 8872, 5, 51, 293, 550, 412, 3329, 13, 51638, 51638, 400, 264, 636, 291, 360, 341, 307, 341, 12686, 6916, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.16378537259360618, "compression_ratio": 1.6917293233082706, "no_speech_prob": 2.8384372853906825e-05}, {"id": 1523, "seek": 437304, "start": 4395.16, "end": 4398.5199999999995, "text": " He did this when he was at AT&T and then at Google.", "tokens": [50364, 307, 257, 3410, 300, 390, 14479, 538, 30190, 49349, 4271, 11, 567, 50480, 50480, 307, 1378, 295, 264, 426, 45196, 2132, 1594, 13, 50606, 50606, 400, 544, 813, 300, 11, 767, 11, 412, 3329, 10303, 13, 50708, 50708, 583, 300, 390, 646, 562, 415, 390, 412, 8872, 5, 51, 11485, 40047, 294, 264, 2440, 50924, 50924, 4289, 82, 13, 51030, 51030, 400, 309, 390, 12270, 294, 364, 1269, 4009, 6405, 1219, 264, 479, 26693, 51208, 51208, 12806, 11, 597, 390, 12270, 538, 12734, 5146, 72, 11, 567, 51316, 51316, 307, 257, 8304, 412, 42682, 13, 51470, 51470, 634, 630, 341, 562, 415, 390, 412, 8872, 5, 51, 293, 550, 412, 3329, 13, 51638, 51638, 400, 264, 636, 291, 360, 341, 307, 341, 12686, 6916, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.16378537259360618, "compression_ratio": 1.6917293233082706, "no_speech_prob": 2.8384372853906825e-05}, {"id": 1524, "seek": 437304, "start": 4398.5199999999995, "end": 4401.96, "text": " And the way you do this is this composition operation.", "tokens": [50364, 307, 257, 3410, 300, 390, 14479, 538, 30190, 49349, 4271, 11, 567, 50480, 50480, 307, 1378, 295, 264, 426, 45196, 2132, 1594, 13, 50606, 50606, 400, 544, 813, 300, 11, 767, 11, 412, 3329, 10303, 13, 50708, 50708, 583, 300, 390, 646, 562, 415, 390, 412, 8872, 5, 51, 11485, 40047, 294, 264, 2440, 50924, 50924, 4289, 82, 13, 51030, 51030, 400, 309, 390, 12270, 294, 364, 1269, 4009, 6405, 1219, 264, 479, 26693, 51208, 51208, 12806, 11, 597, 390, 12270, 538, 12734, 5146, 72, 11, 567, 51316, 51316, 307, 257, 8304, 412, 42682, 13, 51470, 51470, 634, 630, 341, 562, 415, 390, 412, 8872, 5, 51, 293, 550, 412, 3329, 13, 51638, 51638, 400, 264, 636, 291, 360, 341, 307, 341, 12686, 6916, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.16378537259360618, "compression_ratio": 1.6917293233082706, "no_speech_prob": 2.8384372853906825e-05}, {"id": 1525, "seek": 440196, "start": 4401.96, "end": 4405.4, "text": " So you start from the initial node of both of those graphs,", "tokens": [50364, 407, 291, 722, 490, 264, 5883, 9984, 295, 1293, 295, 729, 24877, 11, 50536, 50536, 293, 291, 584, 11, 307, 456, 257, 3100, 286, 393, 747, 294, 341, 4295, 300, 50772, 50772, 307, 5089, 510, 30, 50904, 50904, 407, 510, 11, 286, 393, 362, 363, 420, 383, 13, 400, 510, 11, 286, 393, 362, 383, 11, 422, 11, 420, 413, 13, 51180, 51180, 5686, 383, 307, 2689, 1296, 264, 732, 13, 51400, 51400, 407, 286, 478, 516, 281, 10432, 729, 732, 538, 1566, 11, 51528, 51528, 294, 452, 5598, 4295, 11, 286, 478, 516, 281, 362, 472, 295, 729, 23767, 11, 51684, 51684, 597, 307, 264, 787, 6034, 300, 307, 2689, 510, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09766368208260372, "compression_ratio": 1.7387387387387387, "no_speech_prob": 8.93923788680695e-06}, {"id": 1526, "seek": 440196, "start": 4405.4, "end": 4410.12, "text": " and you say, is there a path I can take in this graph that", "tokens": [50364, 407, 291, 722, 490, 264, 5883, 9984, 295, 1293, 295, 729, 24877, 11, 50536, 50536, 293, 291, 584, 11, 307, 456, 257, 3100, 286, 393, 747, 294, 341, 4295, 300, 50772, 50772, 307, 5089, 510, 30, 50904, 50904, 407, 510, 11, 286, 393, 362, 363, 420, 383, 13, 400, 510, 11, 286, 393, 362, 383, 11, 422, 11, 420, 413, 13, 51180, 51180, 5686, 383, 307, 2689, 1296, 264, 732, 13, 51400, 51400, 407, 286, 478, 516, 281, 10432, 729, 732, 538, 1566, 11, 51528, 51528, 294, 452, 5598, 4295, 11, 286, 478, 516, 281, 362, 472, 295, 729, 23767, 11, 51684, 51684, 597, 307, 264, 787, 6034, 300, 307, 2689, 510, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09766368208260372, "compression_ratio": 1.7387387387387387, "no_speech_prob": 8.93923788680695e-06}, {"id": 1527, "seek": 440196, "start": 4410.12, "end": 4412.76, "text": " is legal here?", "tokens": [50364, 407, 291, 722, 490, 264, 5883, 9984, 295, 1293, 295, 729, 24877, 11, 50536, 50536, 293, 291, 584, 11, 307, 456, 257, 3100, 286, 393, 747, 294, 341, 4295, 300, 50772, 50772, 307, 5089, 510, 30, 50904, 50904, 407, 510, 11, 286, 393, 362, 363, 420, 383, 13, 400, 510, 11, 286, 393, 362, 383, 11, 422, 11, 420, 413, 13, 51180, 51180, 5686, 383, 307, 2689, 1296, 264, 732, 13, 51400, 51400, 407, 286, 478, 516, 281, 10432, 729, 732, 538, 1566, 11, 51528, 51528, 294, 452, 5598, 4295, 11, 286, 478, 516, 281, 362, 472, 295, 729, 23767, 11, 51684, 51684, 597, 307, 264, 787, 6034, 300, 307, 2689, 510, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09766368208260372, "compression_ratio": 1.7387387387387387, "no_speech_prob": 8.93923788680695e-06}, {"id": 1528, "seek": 440196, "start": 4412.76, "end": 4418.28, "text": " So here, I can have B or C. And here, I can have C, O, or D.", "tokens": [50364, 407, 291, 722, 490, 264, 5883, 9984, 295, 1293, 295, 729, 24877, 11, 50536, 50536, 293, 291, 584, 11, 307, 456, 257, 3100, 286, 393, 747, 294, 341, 4295, 300, 50772, 50772, 307, 5089, 510, 30, 50904, 50904, 407, 510, 11, 286, 393, 362, 363, 420, 383, 13, 400, 510, 11, 286, 393, 362, 383, 11, 422, 11, 420, 413, 13, 51180, 51180, 5686, 383, 307, 2689, 1296, 264, 732, 13, 51400, 51400, 407, 286, 478, 516, 281, 10432, 729, 732, 538, 1566, 11, 51528, 51528, 294, 452, 5598, 4295, 11, 286, 478, 516, 281, 362, 472, 295, 729, 23767, 11, 51684, 51684, 597, 307, 264, 787, 6034, 300, 307, 2689, 510, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09766368208260372, "compression_ratio": 1.7387387387387387, "no_speech_prob": 8.93923788680695e-06}, {"id": 1529, "seek": 440196, "start": 4418.28, "end": 4422.68, "text": " Only C is common between the two.", "tokens": [50364, 407, 291, 722, 490, 264, 5883, 9984, 295, 1293, 295, 729, 24877, 11, 50536, 50536, 293, 291, 584, 11, 307, 456, 257, 3100, 286, 393, 747, 294, 341, 4295, 300, 50772, 50772, 307, 5089, 510, 30, 50904, 50904, 407, 510, 11, 286, 393, 362, 363, 420, 383, 13, 400, 510, 11, 286, 393, 362, 383, 11, 422, 11, 420, 413, 13, 51180, 51180, 5686, 383, 307, 2689, 1296, 264, 732, 13, 51400, 51400, 407, 286, 478, 516, 281, 10432, 729, 732, 538, 1566, 11, 51528, 51528, 294, 452, 5598, 4295, 11, 286, 478, 516, 281, 362, 472, 295, 729, 23767, 11, 51684, 51684, 597, 307, 264, 787, 6034, 300, 307, 2689, 510, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09766368208260372, "compression_ratio": 1.7387387387387387, "no_speech_prob": 8.93923788680695e-06}, {"id": 1530, "seek": 440196, "start": 4422.68, "end": 4425.24, "text": " So I'm going to combine those two by saying,", "tokens": [50364, 407, 291, 722, 490, 264, 5883, 9984, 295, 1293, 295, 729, 24877, 11, 50536, 50536, 293, 291, 584, 11, 307, 456, 257, 3100, 286, 393, 747, 294, 341, 4295, 300, 50772, 50772, 307, 5089, 510, 30, 50904, 50904, 407, 510, 11, 286, 393, 362, 363, 420, 383, 13, 400, 510, 11, 286, 393, 362, 383, 11, 422, 11, 420, 413, 13, 51180, 51180, 5686, 383, 307, 2689, 1296, 264, 732, 13, 51400, 51400, 407, 286, 478, 516, 281, 10432, 729, 732, 538, 1566, 11, 51528, 51528, 294, 452, 5598, 4295, 11, 286, 478, 516, 281, 362, 472, 295, 729, 23767, 11, 51684, 51684, 597, 307, 264, 787, 6034, 300, 307, 2689, 510, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09766368208260372, "compression_ratio": 1.7387387387387387, "no_speech_prob": 8.93923788680695e-06}, {"id": 1531, "seek": 440196, "start": 4425.24, "end": 4428.36, "text": " in my output graph, I'm going to have one of those transitions,", "tokens": [50364, 407, 291, 722, 490, 264, 5883, 9984, 295, 1293, 295, 729, 24877, 11, 50536, 50536, 293, 291, 584, 11, 307, 456, 257, 3100, 286, 393, 747, 294, 341, 4295, 300, 50772, 50772, 307, 5089, 510, 30, 50904, 50904, 407, 510, 11, 286, 393, 362, 363, 420, 383, 13, 400, 510, 11, 286, 393, 362, 383, 11, 422, 11, 420, 413, 13, 51180, 51180, 5686, 383, 307, 2689, 1296, 264, 732, 13, 51400, 51400, 407, 286, 478, 516, 281, 10432, 729, 732, 538, 1566, 11, 51528, 51528, 294, 452, 5598, 4295, 11, 286, 478, 516, 281, 362, 472, 295, 729, 23767, 11, 51684, 51684, 597, 307, 264, 787, 6034, 300, 307, 2689, 510, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09766368208260372, "compression_ratio": 1.7387387387387387, "no_speech_prob": 8.93923788680695e-06}, {"id": 1532, "seek": 440196, "start": 4428.36, "end": 4431.8, "text": " which is the only transition that is common here", "tokens": [50364, 407, 291, 722, 490, 264, 5883, 9984, 295, 1293, 295, 729, 24877, 11, 50536, 50536, 293, 291, 584, 11, 307, 456, 257, 3100, 286, 393, 747, 294, 341, 4295, 300, 50772, 50772, 307, 5089, 510, 30, 50904, 50904, 407, 510, 11, 286, 393, 362, 363, 420, 383, 13, 400, 510, 11, 286, 393, 362, 383, 11, 422, 11, 420, 413, 13, 51180, 51180, 5686, 383, 307, 2689, 1296, 264, 732, 13, 51400, 51400, 407, 286, 478, 516, 281, 10432, 729, 732, 538, 1566, 11, 51528, 51528, 294, 452, 5598, 4295, 11, 286, 478, 516, 281, 362, 472, 295, 729, 23767, 11, 51684, 51684, 597, 307, 264, 787, 6034, 300, 307, 2689, 510, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09766368208260372, "compression_ratio": 1.7387387387387387, "no_speech_prob": 8.93923788680695e-06}, {"id": 1533, "seek": 443180, "start": 4431.8, "end": 4433.0, "text": " and here.", "tokens": [50364, 293, 510, 13, 50424, 50424, 407, 586, 11, 286, 478, 294, 341, 9984, 510, 13, 50642, 50642, 286, 478, 294, 300, 9984, 456, 13, 50726, 50726, 1692, 11, 286, 393, 747, 2031, 11, 257, 11, 420, 344, 13, 50904, 50904, 400, 510, 11, 286, 393, 747, 344, 420, 257, 13, 51014, 51014, 407, 286, 362, 732, 12178, 11, 344, 420, 257, 13, 51132, 51132, 257, 365, 1958, 13, 17, 11, 344, 365, 1958, 13, 23, 13, 51244, 51244, 400, 370, 286, 909, 729, 732, 510, 13, 51356, 51356, 407, 1936, 11, 437, 286, 478, 884, 510, 51436, 51436, 307, 5699, 286, 808, 412, 257, 9984, 293, 286, 362, 281, 747, 257, 6034, 11, 51660, 51660, 286, 915, 597, 295, 264, 13891, 300, 393, 312, 294, 510, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14122999351443224, "compression_ratio": 1.7317073170731707, "no_speech_prob": 7.889032531238627e-06}, {"id": 1534, "seek": 443180, "start": 4433.0, "end": 4437.360000000001, "text": " So now, I'm in this node here.", "tokens": [50364, 293, 510, 13, 50424, 50424, 407, 586, 11, 286, 478, 294, 341, 9984, 510, 13, 50642, 50642, 286, 478, 294, 300, 9984, 456, 13, 50726, 50726, 1692, 11, 286, 393, 747, 2031, 11, 257, 11, 420, 344, 13, 50904, 50904, 400, 510, 11, 286, 393, 747, 344, 420, 257, 13, 51014, 51014, 407, 286, 362, 732, 12178, 11, 344, 420, 257, 13, 51132, 51132, 257, 365, 1958, 13, 17, 11, 344, 365, 1958, 13, 23, 13, 51244, 51244, 400, 370, 286, 909, 729, 732, 510, 13, 51356, 51356, 407, 1936, 11, 437, 286, 478, 884, 510, 51436, 51436, 307, 5699, 286, 808, 412, 257, 9984, 293, 286, 362, 281, 747, 257, 6034, 11, 51660, 51660, 286, 915, 597, 295, 264, 13891, 300, 393, 312, 294, 510, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14122999351443224, "compression_ratio": 1.7317073170731707, "no_speech_prob": 7.889032531238627e-06}, {"id": 1535, "seek": 443180, "start": 4437.360000000001, "end": 4439.04, "text": " I'm in that node there.", "tokens": [50364, 293, 510, 13, 50424, 50424, 407, 586, 11, 286, 478, 294, 341, 9984, 510, 13, 50642, 50642, 286, 478, 294, 300, 9984, 456, 13, 50726, 50726, 1692, 11, 286, 393, 747, 2031, 11, 257, 11, 420, 344, 13, 50904, 50904, 400, 510, 11, 286, 393, 747, 344, 420, 257, 13, 51014, 51014, 407, 286, 362, 732, 12178, 11, 344, 420, 257, 13, 51132, 51132, 257, 365, 1958, 13, 17, 11, 344, 365, 1958, 13, 23, 13, 51244, 51244, 400, 370, 286, 909, 729, 732, 510, 13, 51356, 51356, 407, 1936, 11, 437, 286, 478, 884, 510, 51436, 51436, 307, 5699, 286, 808, 412, 257, 9984, 293, 286, 362, 281, 747, 257, 6034, 11, 51660, 51660, 286, 915, 597, 295, 264, 13891, 300, 393, 312, 294, 510, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14122999351443224, "compression_ratio": 1.7317073170731707, "no_speech_prob": 7.889032531238627e-06}, {"id": 1536, "seek": 443180, "start": 4439.04, "end": 4442.6, "text": " Here, I can take x, a, or u.", "tokens": [50364, 293, 510, 13, 50424, 50424, 407, 586, 11, 286, 478, 294, 341, 9984, 510, 13, 50642, 50642, 286, 478, 294, 300, 9984, 456, 13, 50726, 50726, 1692, 11, 286, 393, 747, 2031, 11, 257, 11, 420, 344, 13, 50904, 50904, 400, 510, 11, 286, 393, 747, 344, 420, 257, 13, 51014, 51014, 407, 286, 362, 732, 12178, 11, 344, 420, 257, 13, 51132, 51132, 257, 365, 1958, 13, 17, 11, 344, 365, 1958, 13, 23, 13, 51244, 51244, 400, 370, 286, 909, 729, 732, 510, 13, 51356, 51356, 407, 1936, 11, 437, 286, 478, 884, 510, 51436, 51436, 307, 5699, 286, 808, 412, 257, 9984, 293, 286, 362, 281, 747, 257, 6034, 11, 51660, 51660, 286, 915, 597, 295, 264, 13891, 300, 393, 312, 294, 510, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14122999351443224, "compression_ratio": 1.7317073170731707, "no_speech_prob": 7.889032531238627e-06}, {"id": 1537, "seek": 443180, "start": 4442.6, "end": 4444.8, "text": " And here, I can take u or a.", "tokens": [50364, 293, 510, 13, 50424, 50424, 407, 586, 11, 286, 478, 294, 341, 9984, 510, 13, 50642, 50642, 286, 478, 294, 300, 9984, 456, 13, 50726, 50726, 1692, 11, 286, 393, 747, 2031, 11, 257, 11, 420, 344, 13, 50904, 50904, 400, 510, 11, 286, 393, 747, 344, 420, 257, 13, 51014, 51014, 407, 286, 362, 732, 12178, 11, 344, 420, 257, 13, 51132, 51132, 257, 365, 1958, 13, 17, 11, 344, 365, 1958, 13, 23, 13, 51244, 51244, 400, 370, 286, 909, 729, 732, 510, 13, 51356, 51356, 407, 1936, 11, 437, 286, 478, 884, 510, 51436, 51436, 307, 5699, 286, 808, 412, 257, 9984, 293, 286, 362, 281, 747, 257, 6034, 11, 51660, 51660, 286, 915, 597, 295, 264, 13891, 300, 393, 312, 294, 510, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14122999351443224, "compression_ratio": 1.7317073170731707, "no_speech_prob": 7.889032531238627e-06}, {"id": 1538, "seek": 443180, "start": 4444.8, "end": 4447.16, "text": " So I have two possibilities, u or a.", "tokens": [50364, 293, 510, 13, 50424, 50424, 407, 586, 11, 286, 478, 294, 341, 9984, 510, 13, 50642, 50642, 286, 478, 294, 300, 9984, 456, 13, 50726, 50726, 1692, 11, 286, 393, 747, 2031, 11, 257, 11, 420, 344, 13, 50904, 50904, 400, 510, 11, 286, 393, 747, 344, 420, 257, 13, 51014, 51014, 407, 286, 362, 732, 12178, 11, 344, 420, 257, 13, 51132, 51132, 257, 365, 1958, 13, 17, 11, 344, 365, 1958, 13, 23, 13, 51244, 51244, 400, 370, 286, 909, 729, 732, 510, 13, 51356, 51356, 407, 1936, 11, 437, 286, 478, 884, 510, 51436, 51436, 307, 5699, 286, 808, 412, 257, 9984, 293, 286, 362, 281, 747, 257, 6034, 11, 51660, 51660, 286, 915, 597, 295, 264, 13891, 300, 393, 312, 294, 510, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14122999351443224, "compression_ratio": 1.7317073170731707, "no_speech_prob": 7.889032531238627e-06}, {"id": 1539, "seek": 443180, "start": 4447.16, "end": 4449.400000000001, "text": " a with 0.2, u with 0.8.", "tokens": [50364, 293, 510, 13, 50424, 50424, 407, 586, 11, 286, 478, 294, 341, 9984, 510, 13, 50642, 50642, 286, 478, 294, 300, 9984, 456, 13, 50726, 50726, 1692, 11, 286, 393, 747, 2031, 11, 257, 11, 420, 344, 13, 50904, 50904, 400, 510, 11, 286, 393, 747, 344, 420, 257, 13, 51014, 51014, 407, 286, 362, 732, 12178, 11, 344, 420, 257, 13, 51132, 51132, 257, 365, 1958, 13, 17, 11, 344, 365, 1958, 13, 23, 13, 51244, 51244, 400, 370, 286, 909, 729, 732, 510, 13, 51356, 51356, 407, 1936, 11, 437, 286, 478, 884, 510, 51436, 51436, 307, 5699, 286, 808, 412, 257, 9984, 293, 286, 362, 281, 747, 257, 6034, 11, 51660, 51660, 286, 915, 597, 295, 264, 13891, 300, 393, 312, 294, 510, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14122999351443224, "compression_ratio": 1.7317073170731707, "no_speech_prob": 7.889032531238627e-06}, {"id": 1540, "seek": 443180, "start": 4449.400000000001, "end": 4451.64, "text": " And so I add those two here.", "tokens": [50364, 293, 510, 13, 50424, 50424, 407, 586, 11, 286, 478, 294, 341, 9984, 510, 13, 50642, 50642, 286, 478, 294, 300, 9984, 456, 13, 50726, 50726, 1692, 11, 286, 393, 747, 2031, 11, 257, 11, 420, 344, 13, 50904, 50904, 400, 510, 11, 286, 393, 747, 344, 420, 257, 13, 51014, 51014, 407, 286, 362, 732, 12178, 11, 344, 420, 257, 13, 51132, 51132, 257, 365, 1958, 13, 17, 11, 344, 365, 1958, 13, 23, 13, 51244, 51244, 400, 370, 286, 909, 729, 732, 510, 13, 51356, 51356, 407, 1936, 11, 437, 286, 478, 884, 510, 51436, 51436, 307, 5699, 286, 808, 412, 257, 9984, 293, 286, 362, 281, 747, 257, 6034, 11, 51660, 51660, 286, 915, 597, 295, 264, 13891, 300, 393, 312, 294, 510, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14122999351443224, "compression_ratio": 1.7317073170731707, "no_speech_prob": 7.889032531238627e-06}, {"id": 1541, "seek": 443180, "start": 4451.64, "end": 4453.24, "text": " So basically, what I'm doing here", "tokens": [50364, 293, 510, 13, 50424, 50424, 407, 586, 11, 286, 478, 294, 341, 9984, 510, 13, 50642, 50642, 286, 478, 294, 300, 9984, 456, 13, 50726, 50726, 1692, 11, 286, 393, 747, 2031, 11, 257, 11, 420, 344, 13, 50904, 50904, 400, 510, 11, 286, 393, 747, 344, 420, 257, 13, 51014, 51014, 407, 286, 362, 732, 12178, 11, 344, 420, 257, 13, 51132, 51132, 257, 365, 1958, 13, 17, 11, 344, 365, 1958, 13, 23, 13, 51244, 51244, 400, 370, 286, 909, 729, 732, 510, 13, 51356, 51356, 407, 1936, 11, 437, 286, 478, 884, 510, 51436, 51436, 307, 5699, 286, 808, 412, 257, 9984, 293, 286, 362, 281, 747, 257, 6034, 11, 51660, 51660, 286, 915, 597, 295, 264, 13891, 300, 393, 312, 294, 510, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14122999351443224, "compression_ratio": 1.7317073170731707, "no_speech_prob": 7.889032531238627e-06}, {"id": 1542, "seek": 443180, "start": 4453.24, "end": 4457.72, "text": " is whenever I come at a node and I have to take a transition,", "tokens": [50364, 293, 510, 13, 50424, 50424, 407, 586, 11, 286, 478, 294, 341, 9984, 510, 13, 50642, 50642, 286, 478, 294, 300, 9984, 456, 13, 50726, 50726, 1692, 11, 286, 393, 747, 2031, 11, 257, 11, 420, 344, 13, 50904, 50904, 400, 510, 11, 286, 393, 747, 344, 420, 257, 13, 51014, 51014, 407, 286, 362, 732, 12178, 11, 344, 420, 257, 13, 51132, 51132, 257, 365, 1958, 13, 17, 11, 344, 365, 1958, 13, 23, 13, 51244, 51244, 400, 370, 286, 909, 729, 732, 510, 13, 51356, 51356, 407, 1936, 11, 437, 286, 478, 884, 510, 51436, 51436, 307, 5699, 286, 808, 412, 257, 9984, 293, 286, 362, 281, 747, 257, 6034, 11, 51660, 51660, 286, 915, 597, 295, 264, 13891, 300, 393, 312, 294, 510, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14122999351443224, "compression_ratio": 1.7317073170731707, "no_speech_prob": 7.889032531238627e-06}, {"id": 1543, "seek": 443180, "start": 4457.72, "end": 4460.4400000000005, "text": " I find which of the nodes that can be in here.", "tokens": [50364, 293, 510, 13, 50424, 50424, 407, 586, 11, 286, 478, 294, 341, 9984, 510, 13, 50642, 50642, 286, 478, 294, 300, 9984, 456, 13, 50726, 50726, 1692, 11, 286, 393, 747, 2031, 11, 257, 11, 420, 344, 13, 50904, 50904, 400, 510, 11, 286, 393, 747, 344, 420, 257, 13, 51014, 51014, 407, 286, 362, 732, 12178, 11, 344, 420, 257, 13, 51132, 51132, 257, 365, 1958, 13, 17, 11, 344, 365, 1958, 13, 23, 13, 51244, 51244, 400, 370, 286, 909, 729, 732, 510, 13, 51356, 51356, 407, 1936, 11, 437, 286, 478, 884, 510, 51436, 51436, 307, 5699, 286, 808, 412, 257, 9984, 293, 286, 362, 281, 747, 257, 6034, 11, 51660, 51660, 286, 915, 597, 295, 264, 13891, 300, 393, 312, 294, 510, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14122999351443224, "compression_ratio": 1.7317073170731707, "no_speech_prob": 7.889032531238627e-06}, {"id": 1544, "seek": 446044, "start": 4460.44, "end": 4462.759999999999, "text": " I look at the possible transitions.", "tokens": [50364, 286, 574, 412, 264, 1944, 23767, 13, 50480, 50480, 400, 498, 264, 6034, 8198, 11, 498, 456, 307, 472, 300, 10676, 11, 50610, 50610, 286, 1884, 257, 516, 10346, 13, 50814, 50814, 400, 286, 25339, 473, 309, 538, 264, 2281, 295, 2035, 10346, 286, 632, 510, 13, 51034, 51034, 759, 286, 611, 632, 364, 2281, 294, 341, 10346, 11, 51124, 51124, 286, 727, 445, 909, 729, 732, 2115, 420, 10432, 552, 294, 512, 636, 13, 51282, 51282, 2264, 30, 51398, 51398, 407, 586, 11, 286, 362, 732, 13891, 510, 13, 51570, 51570, 400, 264, 1036, 472, 393, 312, 280, 420, 256, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1472376247621932, "compression_ratio": 1.602803738317757, "no_speech_prob": 4.494873792282306e-06}, {"id": 1545, "seek": 446044, "start": 4462.759999999999, "end": 4465.36, "text": " And if the transition exists, if there is one that matches,", "tokens": [50364, 286, 574, 412, 264, 1944, 23767, 13, 50480, 50480, 400, 498, 264, 6034, 8198, 11, 498, 456, 307, 472, 300, 10676, 11, 50610, 50610, 286, 1884, 257, 516, 10346, 13, 50814, 50814, 400, 286, 25339, 473, 309, 538, 264, 2281, 295, 2035, 10346, 286, 632, 510, 13, 51034, 51034, 759, 286, 611, 632, 364, 2281, 294, 341, 10346, 11, 51124, 51124, 286, 727, 445, 909, 729, 732, 2115, 420, 10432, 552, 294, 512, 636, 13, 51282, 51282, 2264, 30, 51398, 51398, 407, 586, 11, 286, 362, 732, 13891, 510, 13, 51570, 51570, 400, 264, 1036, 472, 393, 312, 280, 420, 256, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1472376247621932, "compression_ratio": 1.602803738317757, "no_speech_prob": 4.494873792282306e-06}, {"id": 1546, "seek": 446044, "start": 4465.36, "end": 4469.44, "text": " I create a going arc.", "tokens": [50364, 286, 574, 412, 264, 1944, 23767, 13, 50480, 50480, 400, 498, 264, 6034, 8198, 11, 498, 456, 307, 472, 300, 10676, 11, 50610, 50610, 286, 1884, 257, 516, 10346, 13, 50814, 50814, 400, 286, 25339, 473, 309, 538, 264, 2281, 295, 2035, 10346, 286, 632, 510, 13, 51034, 51034, 759, 286, 611, 632, 364, 2281, 294, 341, 10346, 11, 51124, 51124, 286, 727, 445, 909, 729, 732, 2115, 420, 10432, 552, 294, 512, 636, 13, 51282, 51282, 2264, 30, 51398, 51398, 407, 586, 11, 286, 362, 732, 13891, 510, 13, 51570, 51570, 400, 264, 1036, 472, 393, 312, 280, 420, 256, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1472376247621932, "compression_ratio": 1.602803738317757, "no_speech_prob": 4.494873792282306e-06}, {"id": 1547, "seek": 446044, "start": 4469.44, "end": 4473.839999999999, "text": " And I annotate it by the energy of whatever arc I had here.", "tokens": [50364, 286, 574, 412, 264, 1944, 23767, 13, 50480, 50480, 400, 498, 264, 6034, 8198, 11, 498, 456, 307, 472, 300, 10676, 11, 50610, 50610, 286, 1884, 257, 516, 10346, 13, 50814, 50814, 400, 286, 25339, 473, 309, 538, 264, 2281, 295, 2035, 10346, 286, 632, 510, 13, 51034, 51034, 759, 286, 611, 632, 364, 2281, 294, 341, 10346, 11, 51124, 51124, 286, 727, 445, 909, 729, 732, 2115, 420, 10432, 552, 294, 512, 636, 13, 51282, 51282, 2264, 30, 51398, 51398, 407, 586, 11, 286, 362, 732, 13891, 510, 13, 51570, 51570, 400, 264, 1036, 472, 393, 312, 280, 420, 256, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1472376247621932, "compression_ratio": 1.602803738317757, "no_speech_prob": 4.494873792282306e-06}, {"id": 1548, "seek": 446044, "start": 4473.839999999999, "end": 4475.639999999999, "text": " If I also had an energy in this arc,", "tokens": [50364, 286, 574, 412, 264, 1944, 23767, 13, 50480, 50480, 400, 498, 264, 6034, 8198, 11, 498, 456, 307, 472, 300, 10676, 11, 50610, 50610, 286, 1884, 257, 516, 10346, 13, 50814, 50814, 400, 286, 25339, 473, 309, 538, 264, 2281, 295, 2035, 10346, 286, 632, 510, 13, 51034, 51034, 759, 286, 611, 632, 364, 2281, 294, 341, 10346, 11, 51124, 51124, 286, 727, 445, 909, 729, 732, 2115, 420, 10432, 552, 294, 512, 636, 13, 51282, 51282, 2264, 30, 51398, 51398, 407, 586, 11, 286, 362, 732, 13891, 510, 13, 51570, 51570, 400, 264, 1036, 472, 393, 312, 280, 420, 256, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1472376247621932, "compression_ratio": 1.602803738317757, "no_speech_prob": 4.494873792282306e-06}, {"id": 1549, "seek": 446044, "start": 4475.639999999999, "end": 4478.799999999999, "text": " I could just add those two terms or combine them in some way.", "tokens": [50364, 286, 574, 412, 264, 1944, 23767, 13, 50480, 50480, 400, 498, 264, 6034, 8198, 11, 498, 456, 307, 472, 300, 10676, 11, 50610, 50610, 286, 1884, 257, 516, 10346, 13, 50814, 50814, 400, 286, 25339, 473, 309, 538, 264, 2281, 295, 2035, 10346, 286, 632, 510, 13, 51034, 51034, 759, 286, 611, 632, 364, 2281, 294, 341, 10346, 11, 51124, 51124, 286, 727, 445, 909, 729, 732, 2115, 420, 10432, 552, 294, 512, 636, 13, 51282, 51282, 2264, 30, 51398, 51398, 407, 586, 11, 286, 362, 732, 13891, 510, 13, 51570, 51570, 400, 264, 1036, 472, 393, 312, 280, 420, 256, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1472376247621932, "compression_ratio": 1.602803738317757, "no_speech_prob": 4.494873792282306e-06}, {"id": 1550, "seek": 446044, "start": 4478.799999999999, "end": 4481.12, "text": " OK?", "tokens": [50364, 286, 574, 412, 264, 1944, 23767, 13, 50480, 50480, 400, 498, 264, 6034, 8198, 11, 498, 456, 307, 472, 300, 10676, 11, 50610, 50610, 286, 1884, 257, 516, 10346, 13, 50814, 50814, 400, 286, 25339, 473, 309, 538, 264, 2281, 295, 2035, 10346, 286, 632, 510, 13, 51034, 51034, 759, 286, 611, 632, 364, 2281, 294, 341, 10346, 11, 51124, 51124, 286, 727, 445, 909, 729, 732, 2115, 420, 10432, 552, 294, 512, 636, 13, 51282, 51282, 2264, 30, 51398, 51398, 407, 586, 11, 286, 362, 732, 13891, 510, 13, 51570, 51570, 400, 264, 1036, 472, 393, 312, 280, 420, 256, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1472376247621932, "compression_ratio": 1.602803738317757, "no_speech_prob": 4.494873792282306e-06}, {"id": 1551, "seek": 446044, "start": 4481.12, "end": 4484.5599999999995, "text": " So now, I have two nodes here.", "tokens": [50364, 286, 574, 412, 264, 1944, 23767, 13, 50480, 50480, 400, 498, 264, 6034, 8198, 11, 498, 456, 307, 472, 300, 10676, 11, 50610, 50610, 286, 1884, 257, 516, 10346, 13, 50814, 50814, 400, 286, 25339, 473, 309, 538, 264, 2281, 295, 2035, 10346, 286, 632, 510, 13, 51034, 51034, 759, 286, 611, 632, 364, 2281, 294, 341, 10346, 11, 51124, 51124, 286, 727, 445, 909, 729, 732, 2115, 420, 10432, 552, 294, 512, 636, 13, 51282, 51282, 2264, 30, 51398, 51398, 407, 586, 11, 286, 362, 732, 13891, 510, 13, 51570, 51570, 400, 264, 1036, 472, 393, 312, 280, 420, 256, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1472376247621932, "compression_ratio": 1.602803738317757, "no_speech_prob": 4.494873792282306e-06}, {"id": 1552, "seek": 446044, "start": 4484.5599999999995, "end": 4487.799999999999, "text": " And the last one can be p or t.", "tokens": [50364, 286, 574, 412, 264, 1944, 23767, 13, 50480, 50480, 400, 498, 264, 6034, 8198, 11, 498, 456, 307, 472, 300, 10676, 11, 50610, 50610, 286, 1884, 257, 516, 10346, 13, 50814, 50814, 400, 286, 25339, 473, 309, 538, 264, 2281, 295, 2035, 10346, 286, 632, 510, 13, 51034, 51034, 759, 286, 611, 632, 364, 2281, 294, 341, 10346, 11, 51124, 51124, 286, 727, 445, 909, 729, 732, 2115, 420, 10432, 552, 294, 512, 636, 13, 51282, 51282, 2264, 30, 51398, 51398, 407, 586, 11, 286, 362, 732, 13891, 510, 13, 51570, 51570, 400, 264, 1036, 472, 393, 312, 280, 420, 256, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1472376247621932, "compression_ratio": 1.602803738317757, "no_speech_prob": 4.494873792282306e-06}, {"id": 1553, "seek": 448780, "start": 4487.8, "end": 4490.52, "text": " So I can start from those two nodes and have either p or t.", "tokens": [50364, 407, 286, 393, 722, 490, 729, 732, 13891, 293, 362, 2139, 280, 420, 256, 13, 50500, 50500, 400, 309, 393, 312, 2139, 294, 341, 9984, 420, 341, 9984, 13, 50598, 50598, 407, 286, 393, 352, 510, 365, 256, 11, 420, 286, 393, 352, 510, 365, 280, 11, 50714, 50714, 420, 510, 365, 256, 13, 50772, 50772, 400, 286, 917, 493, 365, 729, 1045, 721, 13, 50910, 50910, 407, 586, 11, 452, 14174, 307, 2139, 1410, 420, 1410, 420, 1723, 13, 51194, 51194, 1981, 366, 264, 1045, 37547, 51278, 51278, 300, 366, 17570, 5030, 3006, 293, 11, 412, 264, 912, 565, 11, 51434, 51434, 366, 1974, 382, 257, 7959, 7126, 538, 452, 18161, 2533, 13, 51612, 51612, 400, 286, 445, 362, 281, 915, 264, 31875, 3100, 456, 13, 51724, 51724, 400, 300, 311, 452, 1867, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1284008026123047, "compression_ratio": 1.8941176470588235, "no_speech_prob": 2.585894617368467e-05}, {"id": 1554, "seek": 448780, "start": 4490.52, "end": 4492.4800000000005, "text": " And it can be either in this node or this node.", "tokens": [50364, 407, 286, 393, 722, 490, 729, 732, 13891, 293, 362, 2139, 280, 420, 256, 13, 50500, 50500, 400, 309, 393, 312, 2139, 294, 341, 9984, 420, 341, 9984, 13, 50598, 50598, 407, 286, 393, 352, 510, 365, 256, 11, 420, 286, 393, 352, 510, 365, 280, 11, 50714, 50714, 420, 510, 365, 256, 13, 50772, 50772, 400, 286, 917, 493, 365, 729, 1045, 721, 13, 50910, 50910, 407, 586, 11, 452, 14174, 307, 2139, 1410, 420, 1410, 420, 1723, 13, 51194, 51194, 1981, 366, 264, 1045, 37547, 51278, 51278, 300, 366, 17570, 5030, 3006, 293, 11, 412, 264, 912, 565, 11, 51434, 51434, 366, 1974, 382, 257, 7959, 7126, 538, 452, 18161, 2533, 13, 51612, 51612, 400, 286, 445, 362, 281, 915, 264, 31875, 3100, 456, 13, 51724, 51724, 400, 300, 311, 452, 1867, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1284008026123047, "compression_ratio": 1.8941176470588235, "no_speech_prob": 2.585894617368467e-05}, {"id": 1555, "seek": 448780, "start": 4492.4800000000005, "end": 4494.8, "text": " So I can go here with t, or I can go here with p,", "tokens": [50364, 407, 286, 393, 722, 490, 729, 732, 13891, 293, 362, 2139, 280, 420, 256, 13, 50500, 50500, 400, 309, 393, 312, 2139, 294, 341, 9984, 420, 341, 9984, 13, 50598, 50598, 407, 286, 393, 352, 510, 365, 256, 11, 420, 286, 393, 352, 510, 365, 280, 11, 50714, 50714, 420, 510, 365, 256, 13, 50772, 50772, 400, 286, 917, 493, 365, 729, 1045, 721, 13, 50910, 50910, 407, 586, 11, 452, 14174, 307, 2139, 1410, 420, 1410, 420, 1723, 13, 51194, 51194, 1981, 366, 264, 1045, 37547, 51278, 51278, 300, 366, 17570, 5030, 3006, 293, 11, 412, 264, 912, 565, 11, 51434, 51434, 366, 1974, 382, 257, 7959, 7126, 538, 452, 18161, 2533, 13, 51612, 51612, 400, 286, 445, 362, 281, 915, 264, 31875, 3100, 456, 13, 51724, 51724, 400, 300, 311, 452, 1867, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1284008026123047, "compression_ratio": 1.8941176470588235, "no_speech_prob": 2.585894617368467e-05}, {"id": 1556, "seek": 448780, "start": 4494.8, "end": 4495.96, "text": " or here with t.", "tokens": [50364, 407, 286, 393, 722, 490, 729, 732, 13891, 293, 362, 2139, 280, 420, 256, 13, 50500, 50500, 400, 309, 393, 312, 2139, 294, 341, 9984, 420, 341, 9984, 13, 50598, 50598, 407, 286, 393, 352, 510, 365, 256, 11, 420, 286, 393, 352, 510, 365, 280, 11, 50714, 50714, 420, 510, 365, 256, 13, 50772, 50772, 400, 286, 917, 493, 365, 729, 1045, 721, 13, 50910, 50910, 407, 586, 11, 452, 14174, 307, 2139, 1410, 420, 1410, 420, 1723, 13, 51194, 51194, 1981, 366, 264, 1045, 37547, 51278, 51278, 300, 366, 17570, 5030, 3006, 293, 11, 412, 264, 912, 565, 11, 51434, 51434, 366, 1974, 382, 257, 7959, 7126, 538, 452, 18161, 2533, 13, 51612, 51612, 400, 286, 445, 362, 281, 915, 264, 31875, 3100, 456, 13, 51724, 51724, 400, 300, 311, 452, 1867, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1284008026123047, "compression_ratio": 1.8941176470588235, "no_speech_prob": 2.585894617368467e-05}, {"id": 1557, "seek": 448780, "start": 4495.96, "end": 4498.72, "text": " And I end up with those three things.", "tokens": [50364, 407, 286, 393, 722, 490, 729, 732, 13891, 293, 362, 2139, 280, 420, 256, 13, 50500, 50500, 400, 309, 393, 312, 2139, 294, 341, 9984, 420, 341, 9984, 13, 50598, 50598, 407, 286, 393, 352, 510, 365, 256, 11, 420, 286, 393, 352, 510, 365, 280, 11, 50714, 50714, 420, 510, 365, 256, 13, 50772, 50772, 400, 286, 917, 493, 365, 729, 1045, 721, 13, 50910, 50910, 407, 586, 11, 452, 14174, 307, 2139, 1410, 420, 1410, 420, 1723, 13, 51194, 51194, 1981, 366, 264, 1045, 37547, 51278, 51278, 300, 366, 17570, 5030, 3006, 293, 11, 412, 264, 912, 565, 11, 51434, 51434, 366, 1974, 382, 257, 7959, 7126, 538, 452, 18161, 2533, 13, 51612, 51612, 400, 286, 445, 362, 281, 915, 264, 31875, 3100, 456, 13, 51724, 51724, 400, 300, 311, 452, 1867, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1284008026123047, "compression_ratio": 1.8941176470588235, "no_speech_prob": 2.585894617368467e-05}, {"id": 1558, "seek": 448780, "start": 4498.72, "end": 4504.400000000001, "text": " So now, my interpretation is either cap or cap or cut.", "tokens": [50364, 407, 286, 393, 722, 490, 729, 732, 13891, 293, 362, 2139, 280, 420, 256, 13, 50500, 50500, 400, 309, 393, 312, 2139, 294, 341, 9984, 420, 341, 9984, 13, 50598, 50598, 407, 286, 393, 352, 510, 365, 256, 11, 420, 286, 393, 352, 510, 365, 280, 11, 50714, 50714, 420, 510, 365, 256, 13, 50772, 50772, 400, 286, 917, 493, 365, 729, 1045, 721, 13, 50910, 50910, 407, 586, 11, 452, 14174, 307, 2139, 1410, 420, 1410, 420, 1723, 13, 51194, 51194, 1981, 366, 264, 1045, 37547, 51278, 51278, 300, 366, 17570, 5030, 3006, 293, 11, 412, 264, 912, 565, 11, 51434, 51434, 366, 1974, 382, 257, 7959, 7126, 538, 452, 18161, 2533, 13, 51612, 51612, 400, 286, 445, 362, 281, 915, 264, 31875, 3100, 456, 13, 51724, 51724, 400, 300, 311, 452, 1867, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1284008026123047, "compression_ratio": 1.8941176470588235, "no_speech_prob": 2.585894617368467e-05}, {"id": 1559, "seek": 448780, "start": 4504.400000000001, "end": 4506.08, "text": " These are the three interpretations", "tokens": [50364, 407, 286, 393, 722, 490, 729, 732, 13891, 293, 362, 2139, 280, 420, 256, 13, 50500, 50500, 400, 309, 393, 312, 2139, 294, 341, 9984, 420, 341, 9984, 13, 50598, 50598, 407, 286, 393, 352, 510, 365, 256, 11, 420, 286, 393, 352, 510, 365, 280, 11, 50714, 50714, 420, 510, 365, 256, 13, 50772, 50772, 400, 286, 917, 493, 365, 729, 1045, 721, 13, 50910, 50910, 407, 586, 11, 452, 14174, 307, 2139, 1410, 420, 1410, 420, 1723, 13, 51194, 51194, 1981, 366, 264, 1045, 37547, 51278, 51278, 300, 366, 17570, 5030, 3006, 293, 11, 412, 264, 912, 565, 11, 51434, 51434, 366, 1974, 382, 257, 7959, 7126, 538, 452, 18161, 2533, 13, 51612, 51612, 400, 286, 445, 362, 281, 915, 264, 31875, 3100, 456, 13, 51724, 51724, 400, 300, 311, 452, 1867, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1284008026123047, "compression_ratio": 1.8941176470588235, "no_speech_prob": 2.585894617368467e-05}, {"id": 1560, "seek": 448780, "start": 4506.08, "end": 4509.2, "text": " that are grammatically correct and, at the same time,", "tokens": [50364, 407, 286, 393, 722, 490, 729, 732, 13891, 293, 362, 2139, 280, 420, 256, 13, 50500, 50500, 400, 309, 393, 312, 2139, 294, 341, 9984, 420, 341, 9984, 13, 50598, 50598, 407, 286, 393, 352, 510, 365, 256, 11, 420, 286, 393, 352, 510, 365, 280, 11, 50714, 50714, 420, 510, 365, 256, 13, 50772, 50772, 400, 286, 917, 493, 365, 729, 1045, 721, 13, 50910, 50910, 407, 586, 11, 452, 14174, 307, 2139, 1410, 420, 1410, 420, 1723, 13, 51194, 51194, 1981, 366, 264, 1045, 37547, 51278, 51278, 300, 366, 17570, 5030, 3006, 293, 11, 412, 264, 912, 565, 11, 51434, 51434, 366, 1974, 382, 257, 7959, 7126, 538, 452, 18161, 2533, 13, 51612, 51612, 400, 286, 445, 362, 281, 915, 264, 31875, 3100, 456, 13, 51724, 51724, 400, 300, 311, 452, 1867, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1284008026123047, "compression_ratio": 1.8941176470588235, "no_speech_prob": 2.585894617368467e-05}, {"id": 1561, "seek": 448780, "start": 4509.2, "end": 4512.76, "text": " are present as a possibility produced by my neural net.", "tokens": [50364, 407, 286, 393, 722, 490, 729, 732, 13891, 293, 362, 2139, 280, 420, 256, 13, 50500, 50500, 400, 309, 393, 312, 2139, 294, 341, 9984, 420, 341, 9984, 13, 50598, 50598, 407, 286, 393, 352, 510, 365, 256, 11, 420, 286, 393, 352, 510, 365, 280, 11, 50714, 50714, 420, 510, 365, 256, 13, 50772, 50772, 400, 286, 917, 493, 365, 729, 1045, 721, 13, 50910, 50910, 407, 586, 11, 452, 14174, 307, 2139, 1410, 420, 1410, 420, 1723, 13, 51194, 51194, 1981, 366, 264, 1045, 37547, 51278, 51278, 300, 366, 17570, 5030, 3006, 293, 11, 412, 264, 912, 565, 11, 51434, 51434, 366, 1974, 382, 257, 7959, 7126, 538, 452, 18161, 2533, 13, 51612, 51612, 400, 286, 445, 362, 281, 915, 264, 31875, 3100, 456, 13, 51724, 51724, 400, 300, 311, 452, 1867, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1284008026123047, "compression_ratio": 1.8941176470588235, "no_speech_prob": 2.585894617368467e-05}, {"id": 1562, "seek": 448780, "start": 4512.76, "end": 4515.0, "text": " And I just have to find the shortest path there.", "tokens": [50364, 407, 286, 393, 722, 490, 729, 732, 13891, 293, 362, 2139, 280, 420, 256, 13, 50500, 50500, 400, 309, 393, 312, 2139, 294, 341, 9984, 420, 341, 9984, 13, 50598, 50598, 407, 286, 393, 352, 510, 365, 256, 11, 420, 286, 393, 352, 510, 365, 280, 11, 50714, 50714, 420, 510, 365, 256, 13, 50772, 50772, 400, 286, 917, 493, 365, 729, 1045, 721, 13, 50910, 50910, 407, 586, 11, 452, 14174, 307, 2139, 1410, 420, 1410, 420, 1723, 13, 51194, 51194, 1981, 366, 264, 1045, 37547, 51278, 51278, 300, 366, 17570, 5030, 3006, 293, 11, 412, 264, 912, 565, 11, 51434, 51434, 366, 1974, 382, 257, 7959, 7126, 538, 452, 18161, 2533, 13, 51612, 51612, 400, 286, 445, 362, 281, 915, 264, 31875, 3100, 456, 13, 51724, 51724, 400, 300, 311, 452, 1867, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1284008026123047, "compression_ratio": 1.8941176470588235, "no_speech_prob": 2.585894617368467e-05}, {"id": 1563, "seek": 448780, "start": 4515.0, "end": 4517.2, "text": " And that's my answer.", "tokens": [50364, 407, 286, 393, 722, 490, 729, 732, 13891, 293, 362, 2139, 280, 420, 256, 13, 50500, 50500, 400, 309, 393, 312, 2139, 294, 341, 9984, 420, 341, 9984, 13, 50598, 50598, 407, 286, 393, 352, 510, 365, 256, 11, 420, 286, 393, 352, 510, 365, 280, 11, 50714, 50714, 420, 510, 365, 256, 13, 50772, 50772, 400, 286, 917, 493, 365, 729, 1045, 721, 13, 50910, 50910, 407, 586, 11, 452, 14174, 307, 2139, 1410, 420, 1410, 420, 1723, 13, 51194, 51194, 1981, 366, 264, 1045, 37547, 51278, 51278, 300, 366, 17570, 5030, 3006, 293, 11, 412, 264, 912, 565, 11, 51434, 51434, 366, 1974, 382, 257, 7959, 7126, 538, 452, 18161, 2533, 13, 51612, 51612, 400, 286, 445, 362, 281, 915, 264, 31875, 3100, 456, 13, 51724, 51724, 400, 300, 311, 452, 1867, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1284008026123047, "compression_ratio": 1.8941176470588235, "no_speech_prob": 2.585894617368467e-05}, {"id": 1564, "seek": 451720, "start": 4517.2, "end": 4518.48, "text": " OK?", "tokens": [50364, 2264, 30, 50428, 50428, 407, 300, 6916, 510, 307, 1219, 4295, 12686, 13, 50654, 50654, 400, 309, 1936, 4045, 291, 281, 1936, 10432, 50824, 50824, 732, 24877, 11, 4476, 11, 420, 10432, 732, 3601, 17949, 51040, 51040, 300, 366, 3410, 671, 24877, 11, 457, 436, 727, 51152, 51152, 312, 10379, 538, 18161, 36170, 13, 51218, 51218, 407, 510, 11, 286, 393, 2906, 341, 551, 11, 341, 1379, 2856, 51342, 51342, 2316, 11, 538, 18161, 2533, 13, 51434, 51434, 1133, 286, 478, 412, 257, 1729, 4914, 11, 309, 1355, 11, 51540, 51540, 562, 286, 478, 510, 11, 309, 1355, 286, 13095, 264, 8310, 2702, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13184425565931532, "compression_ratio": 1.6954732510288066, "no_speech_prob": 3.905358425981831e-06}, {"id": 1565, "seek": 451720, "start": 4518.48, "end": 4523.0, "text": " So that operation here is called graph composition.", "tokens": [50364, 2264, 30, 50428, 50428, 407, 300, 6916, 510, 307, 1219, 4295, 12686, 13, 50654, 50654, 400, 309, 1936, 4045, 291, 281, 1936, 10432, 50824, 50824, 732, 24877, 11, 4476, 11, 420, 10432, 732, 3601, 17949, 51040, 51040, 300, 366, 3410, 671, 24877, 11, 457, 436, 727, 51152, 51152, 312, 10379, 538, 18161, 36170, 13, 51218, 51218, 407, 510, 11, 286, 393, 2906, 341, 551, 11, 341, 1379, 2856, 51342, 51342, 2316, 11, 538, 18161, 2533, 13, 51434, 51434, 1133, 286, 478, 412, 257, 1729, 4914, 11, 309, 1355, 11, 51540, 51540, 562, 286, 478, 510, 11, 309, 1355, 286, 13095, 264, 8310, 2702, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13184425565931532, "compression_ratio": 1.6954732510288066, "no_speech_prob": 3.905358425981831e-06}, {"id": 1566, "seek": 451720, "start": 4523.0, "end": 4526.4, "text": " And it basically allows you to basically combine", "tokens": [50364, 2264, 30, 50428, 50428, 407, 300, 6916, 510, 307, 1219, 4295, 12686, 13, 50654, 50654, 400, 309, 1936, 4045, 291, 281, 1936, 10432, 50824, 50824, 732, 24877, 11, 4476, 11, 420, 10432, 732, 3601, 17949, 51040, 51040, 300, 366, 3410, 671, 24877, 11, 457, 436, 727, 51152, 51152, 312, 10379, 538, 18161, 36170, 13, 51218, 51218, 407, 510, 11, 286, 393, 2906, 341, 551, 11, 341, 1379, 2856, 51342, 51342, 2316, 11, 538, 18161, 2533, 13, 51434, 51434, 1133, 286, 478, 412, 257, 1729, 4914, 11, 309, 1355, 11, 51540, 51540, 562, 286, 478, 510, 11, 309, 1355, 286, 13095, 264, 8310, 2702, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13184425565931532, "compression_ratio": 1.6954732510288066, "no_speech_prob": 3.905358425981831e-06}, {"id": 1567, "seek": 451720, "start": 4526.4, "end": 4530.72, "text": " two graphs, essentially, or combine two knowledge bases", "tokens": [50364, 2264, 30, 50428, 50428, 407, 300, 6916, 510, 307, 1219, 4295, 12686, 13, 50654, 50654, 400, 309, 1936, 4045, 291, 281, 1936, 10432, 50824, 50824, 732, 24877, 11, 4476, 11, 420, 10432, 732, 3601, 17949, 51040, 51040, 300, 366, 3410, 671, 24877, 11, 457, 436, 727, 51152, 51152, 312, 10379, 538, 18161, 36170, 13, 51218, 51218, 407, 510, 11, 286, 393, 2906, 341, 551, 11, 341, 1379, 2856, 51342, 51342, 2316, 11, 538, 18161, 2533, 13, 51434, 51434, 1133, 286, 478, 412, 257, 1729, 4914, 11, 309, 1355, 11, 51540, 51540, 562, 286, 478, 510, 11, 309, 1355, 286, 13095, 264, 8310, 2702, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13184425565931532, "compression_ratio": 1.6954732510288066, "no_speech_prob": 3.905358425981831e-06}, {"id": 1568, "seek": 451720, "start": 4530.72, "end": 4532.96, "text": " that are conceptually graphs, but they could", "tokens": [50364, 2264, 30, 50428, 50428, 407, 300, 6916, 510, 307, 1219, 4295, 12686, 13, 50654, 50654, 400, 309, 1936, 4045, 291, 281, 1936, 10432, 50824, 50824, 732, 24877, 11, 4476, 11, 420, 10432, 732, 3601, 17949, 51040, 51040, 300, 366, 3410, 671, 24877, 11, 457, 436, 727, 51152, 51152, 312, 10379, 538, 18161, 36170, 13, 51218, 51218, 407, 510, 11, 286, 393, 2906, 341, 551, 11, 341, 1379, 2856, 51342, 51342, 2316, 11, 538, 18161, 2533, 13, 51434, 51434, 1133, 286, 478, 412, 257, 1729, 4914, 11, 309, 1355, 11, 51540, 51540, 562, 286, 478, 510, 11, 309, 1355, 286, 13095, 264, 8310, 2702, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13184425565931532, "compression_ratio": 1.6954732510288066, "no_speech_prob": 3.905358425981831e-06}, {"id": 1569, "seek": 451720, "start": 4532.96, "end": 4534.28, "text": " be represented by neural nets.", "tokens": [50364, 2264, 30, 50428, 50428, 407, 300, 6916, 510, 307, 1219, 4295, 12686, 13, 50654, 50654, 400, 309, 1936, 4045, 291, 281, 1936, 10432, 50824, 50824, 732, 24877, 11, 4476, 11, 420, 10432, 732, 3601, 17949, 51040, 51040, 300, 366, 3410, 671, 24877, 11, 457, 436, 727, 51152, 51152, 312, 10379, 538, 18161, 36170, 13, 51218, 51218, 407, 510, 11, 286, 393, 2906, 341, 551, 11, 341, 1379, 2856, 51342, 51342, 2316, 11, 538, 18161, 2533, 13, 51434, 51434, 1133, 286, 478, 412, 257, 1729, 4914, 11, 309, 1355, 11, 51540, 51540, 562, 286, 478, 510, 11, 309, 1355, 286, 13095, 264, 8310, 2702, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13184425565931532, "compression_ratio": 1.6954732510288066, "no_speech_prob": 3.905358425981831e-06}, {"id": 1570, "seek": 451720, "start": 4534.28, "end": 4536.76, "text": " So here, I can represent this thing, this whole language", "tokens": [50364, 2264, 30, 50428, 50428, 407, 300, 6916, 510, 307, 1219, 4295, 12686, 13, 50654, 50654, 400, 309, 1936, 4045, 291, 281, 1936, 10432, 50824, 50824, 732, 24877, 11, 4476, 11, 420, 10432, 732, 3601, 17949, 51040, 51040, 300, 366, 3410, 671, 24877, 11, 457, 436, 727, 51152, 51152, 312, 10379, 538, 18161, 36170, 13, 51218, 51218, 407, 510, 11, 286, 393, 2906, 341, 551, 11, 341, 1379, 2856, 51342, 51342, 2316, 11, 538, 18161, 2533, 13, 51434, 51434, 1133, 286, 478, 412, 257, 1729, 4914, 11, 309, 1355, 11, 51540, 51540, 562, 286, 478, 510, 11, 309, 1355, 286, 13095, 264, 8310, 2702, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13184425565931532, "compression_ratio": 1.6954732510288066, "no_speech_prob": 3.905358425981831e-06}, {"id": 1571, "seek": 451720, "start": 4536.76, "end": 4538.599999999999, "text": " model, by neural net.", "tokens": [50364, 2264, 30, 50428, 50428, 407, 300, 6916, 510, 307, 1219, 4295, 12686, 13, 50654, 50654, 400, 309, 1936, 4045, 291, 281, 1936, 10432, 50824, 50824, 732, 24877, 11, 4476, 11, 420, 10432, 732, 3601, 17949, 51040, 51040, 300, 366, 3410, 671, 24877, 11, 457, 436, 727, 51152, 51152, 312, 10379, 538, 18161, 36170, 13, 51218, 51218, 407, 510, 11, 286, 393, 2906, 341, 551, 11, 341, 1379, 2856, 51342, 51342, 2316, 11, 538, 18161, 2533, 13, 51434, 51434, 1133, 286, 478, 412, 257, 1729, 4914, 11, 309, 1355, 11, 51540, 51540, 562, 286, 478, 510, 11, 309, 1355, 286, 13095, 264, 8310, 2702, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13184425565931532, "compression_ratio": 1.6954732510288066, "no_speech_prob": 3.905358425981831e-06}, {"id": 1572, "seek": 451720, "start": 4538.599999999999, "end": 4540.72, "text": " When I'm at a particular location, it means,", "tokens": [50364, 2264, 30, 50428, 50428, 407, 300, 6916, 510, 307, 1219, 4295, 12686, 13, 50654, 50654, 400, 309, 1936, 4045, 291, 281, 1936, 10432, 50824, 50824, 732, 24877, 11, 4476, 11, 420, 10432, 732, 3601, 17949, 51040, 51040, 300, 366, 3410, 671, 24877, 11, 457, 436, 727, 51152, 51152, 312, 10379, 538, 18161, 36170, 13, 51218, 51218, 407, 510, 11, 286, 393, 2906, 341, 551, 11, 341, 1379, 2856, 51342, 51342, 2316, 11, 538, 18161, 2533, 13, 51434, 51434, 1133, 286, 478, 412, 257, 1729, 4914, 11, 309, 1355, 11, 51540, 51540, 562, 286, 478, 510, 11, 309, 1355, 286, 13095, 264, 8310, 2702, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13184425565931532, "compression_ratio": 1.6954732510288066, "no_speech_prob": 3.905358425981831e-06}, {"id": 1573, "seek": 451720, "start": 4540.72, "end": 4544.88, "text": " when I'm here, it means I observed the sequence cu.", "tokens": [50364, 2264, 30, 50428, 50428, 407, 300, 6916, 510, 307, 1219, 4295, 12686, 13, 50654, 50654, 400, 309, 1936, 4045, 291, 281, 1936, 10432, 50824, 50824, 732, 24877, 11, 4476, 11, 420, 10432, 732, 3601, 17949, 51040, 51040, 300, 366, 3410, 671, 24877, 11, 457, 436, 727, 51152, 51152, 312, 10379, 538, 18161, 36170, 13, 51218, 51218, 407, 510, 11, 286, 393, 2906, 341, 551, 11, 341, 1379, 2856, 51342, 51342, 2316, 11, 538, 18161, 2533, 13, 51434, 51434, 1133, 286, 478, 412, 257, 1729, 4914, 11, 309, 1355, 11, 51540, 51540, 562, 286, 478, 510, 11, 309, 1355, 286, 13095, 264, 8310, 2702, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13184425565931532, "compression_ratio": 1.6954732510288066, "no_speech_prob": 3.905358425981831e-06}, {"id": 1574, "seek": 454488, "start": 4544.88, "end": 4547.24, "text": " And then I can run cu in my language model", "tokens": [50364, 400, 550, 286, 393, 1190, 2702, 294, 452, 2856, 2316, 50482, 50482, 293, 1029, 452, 18161, 2533, 281, 6069, 11, 50550, 50550, 370, 437, 311, 264, 958, 5063, 30, 50614, 50614, 400, 452, 18161, 2533, 486, 584, 11, 731, 11, 309, 311, 2139, 256, 420, 367, 13, 50822, 50822, 682, 1080, 2787, 41167, 5598, 365, 264, 7551, 7825, 11, 50970, 50970, 309, 311, 516, 281, 980, 385, 256, 293, 367, 362, 1732, 33783, 13, 51100, 51100, 440, 661, 2306, 362, 2295, 33783, 13, 51174, 51174, 1610, 498, 309, 14725, 2281, 11, 309, 311, 516, 281, 584, 11, 51268, 51268, 256, 293, 367, 362, 2295, 25737, 13, 51350, 51350, 440, 661, 2306, 362, 2946, 25737, 13, 51510, 51510, 2264, 11, 370, 309, 1177, 380, 1871, 577, 291, 767, 2906, 341, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1610316376187908, "compression_ratio": 1.77992277992278, "no_speech_prob": 1.4969446056056768e-05}, {"id": 1575, "seek": 454488, "start": 4547.24, "end": 4548.6, "text": " and ask my neural net to predict,", "tokens": [50364, 400, 550, 286, 393, 1190, 2702, 294, 452, 2856, 2316, 50482, 50482, 293, 1029, 452, 18161, 2533, 281, 6069, 11, 50550, 50550, 370, 437, 311, 264, 958, 5063, 30, 50614, 50614, 400, 452, 18161, 2533, 486, 584, 11, 731, 11, 309, 311, 2139, 256, 420, 367, 13, 50822, 50822, 682, 1080, 2787, 41167, 5598, 365, 264, 7551, 7825, 11, 50970, 50970, 309, 311, 516, 281, 980, 385, 256, 293, 367, 362, 1732, 33783, 13, 51100, 51100, 440, 661, 2306, 362, 2295, 33783, 13, 51174, 51174, 1610, 498, 309, 14725, 2281, 11, 309, 311, 516, 281, 584, 11, 51268, 51268, 256, 293, 367, 362, 2295, 25737, 13, 51350, 51350, 440, 661, 2306, 362, 2946, 25737, 13, 51510, 51510, 2264, 11, 370, 309, 1177, 380, 1871, 577, 291, 767, 2906, 341, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1610316376187908, "compression_ratio": 1.77992277992278, "no_speech_prob": 1.4969446056056768e-05}, {"id": 1576, "seek": 454488, "start": 4548.6, "end": 4549.88, "text": " so what's the next letter?", "tokens": [50364, 400, 550, 286, 393, 1190, 2702, 294, 452, 2856, 2316, 50482, 50482, 293, 1029, 452, 18161, 2533, 281, 6069, 11, 50550, 50550, 370, 437, 311, 264, 958, 5063, 30, 50614, 50614, 400, 452, 18161, 2533, 486, 584, 11, 731, 11, 309, 311, 2139, 256, 420, 367, 13, 50822, 50822, 682, 1080, 2787, 41167, 5598, 365, 264, 7551, 7825, 11, 50970, 50970, 309, 311, 516, 281, 980, 385, 256, 293, 367, 362, 1732, 33783, 13, 51100, 51100, 440, 661, 2306, 362, 2295, 33783, 13, 51174, 51174, 1610, 498, 309, 14725, 2281, 11, 309, 311, 516, 281, 584, 11, 51268, 51268, 256, 293, 367, 362, 2295, 25737, 13, 51350, 51350, 440, 661, 2306, 362, 2946, 25737, 13, 51510, 51510, 2264, 11, 370, 309, 1177, 380, 1871, 577, 291, 767, 2906, 341, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1610316376187908, "compression_ratio": 1.77992277992278, "no_speech_prob": 1.4969446056056768e-05}, {"id": 1577, "seek": 454488, "start": 4549.88, "end": 4554.04, "text": " And my neural net will say, well, it's either t or r.", "tokens": [50364, 400, 550, 286, 393, 1190, 2702, 294, 452, 2856, 2316, 50482, 50482, 293, 1029, 452, 18161, 2533, 281, 6069, 11, 50550, 50550, 370, 437, 311, 264, 958, 5063, 30, 50614, 50614, 400, 452, 18161, 2533, 486, 584, 11, 731, 11, 309, 311, 2139, 256, 420, 367, 13, 50822, 50822, 682, 1080, 2787, 41167, 5598, 365, 264, 7551, 7825, 11, 50970, 50970, 309, 311, 516, 281, 980, 385, 256, 293, 367, 362, 1732, 33783, 13, 51100, 51100, 440, 661, 2306, 362, 2295, 33783, 13, 51174, 51174, 1610, 498, 309, 14725, 2281, 11, 309, 311, 516, 281, 584, 11, 51268, 51268, 256, 293, 367, 362, 2295, 25737, 13, 51350, 51350, 440, 661, 2306, 362, 2946, 25737, 13, 51510, 51510, 2264, 11, 370, 309, 1177, 380, 1871, 577, 291, 767, 2906, 341, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1610316376187908, "compression_ratio": 1.77992277992278, "no_speech_prob": 1.4969446056056768e-05}, {"id": 1578, "seek": 454488, "start": 4554.04, "end": 4557.0, "text": " In its softmax output with the 26 letters,", "tokens": [50364, 400, 550, 286, 393, 1190, 2702, 294, 452, 2856, 2316, 50482, 50482, 293, 1029, 452, 18161, 2533, 281, 6069, 11, 50550, 50550, 370, 437, 311, 264, 958, 5063, 30, 50614, 50614, 400, 452, 18161, 2533, 486, 584, 11, 731, 11, 309, 311, 2139, 256, 420, 367, 13, 50822, 50822, 682, 1080, 2787, 41167, 5598, 365, 264, 7551, 7825, 11, 50970, 50970, 309, 311, 516, 281, 980, 385, 256, 293, 367, 362, 1732, 33783, 13, 51100, 51100, 440, 661, 2306, 362, 2295, 33783, 13, 51174, 51174, 1610, 498, 309, 14725, 2281, 11, 309, 311, 516, 281, 584, 11, 51268, 51268, 256, 293, 367, 362, 2295, 25737, 13, 51350, 51350, 440, 661, 2306, 362, 2946, 25737, 13, 51510, 51510, 2264, 11, 370, 309, 1177, 380, 1871, 577, 291, 767, 2906, 341, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1610316376187908, "compression_ratio": 1.77992277992278, "no_speech_prob": 1.4969446056056768e-05}, {"id": 1579, "seek": 454488, "start": 4557.0, "end": 4559.6, "text": " it's going to tell me t and r have five probabilities.", "tokens": [50364, 400, 550, 286, 393, 1190, 2702, 294, 452, 2856, 2316, 50482, 50482, 293, 1029, 452, 18161, 2533, 281, 6069, 11, 50550, 50550, 370, 437, 311, 264, 958, 5063, 30, 50614, 50614, 400, 452, 18161, 2533, 486, 584, 11, 731, 11, 309, 311, 2139, 256, 420, 367, 13, 50822, 50822, 682, 1080, 2787, 41167, 5598, 365, 264, 7551, 7825, 11, 50970, 50970, 309, 311, 516, 281, 980, 385, 256, 293, 367, 362, 1732, 33783, 13, 51100, 51100, 440, 661, 2306, 362, 2295, 33783, 13, 51174, 51174, 1610, 498, 309, 14725, 2281, 11, 309, 311, 516, 281, 584, 11, 51268, 51268, 256, 293, 367, 362, 2295, 25737, 13, 51350, 51350, 440, 661, 2306, 362, 2946, 25737, 13, 51510, 51510, 2264, 11, 370, 309, 1177, 380, 1871, 577, 291, 767, 2906, 341, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1610316376187908, "compression_ratio": 1.77992277992278, "no_speech_prob": 1.4969446056056768e-05}, {"id": 1580, "seek": 454488, "start": 4559.6, "end": 4561.08, "text": " The other ones have low probabilities.", "tokens": [50364, 400, 550, 286, 393, 1190, 2702, 294, 452, 2856, 2316, 50482, 50482, 293, 1029, 452, 18161, 2533, 281, 6069, 11, 50550, 50550, 370, 437, 311, 264, 958, 5063, 30, 50614, 50614, 400, 452, 18161, 2533, 486, 584, 11, 731, 11, 309, 311, 2139, 256, 420, 367, 13, 50822, 50822, 682, 1080, 2787, 41167, 5598, 365, 264, 7551, 7825, 11, 50970, 50970, 309, 311, 516, 281, 980, 385, 256, 293, 367, 362, 1732, 33783, 13, 51100, 51100, 440, 661, 2306, 362, 2295, 33783, 13, 51174, 51174, 1610, 498, 309, 14725, 2281, 11, 309, 311, 516, 281, 584, 11, 51268, 51268, 256, 293, 367, 362, 2295, 25737, 13, 51350, 51350, 440, 661, 2306, 362, 2946, 25737, 13, 51510, 51510, 2264, 11, 370, 309, 1177, 380, 1871, 577, 291, 767, 2906, 341, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1610316376187908, "compression_ratio": 1.77992277992278, "no_speech_prob": 1.4969446056056768e-05}, {"id": 1581, "seek": 454488, "start": 4561.08, "end": 4562.96, "text": " Or if it produces energy, it's going to say,", "tokens": [50364, 400, 550, 286, 393, 1190, 2702, 294, 452, 2856, 2316, 50482, 50482, 293, 1029, 452, 18161, 2533, 281, 6069, 11, 50550, 50550, 370, 437, 311, 264, 958, 5063, 30, 50614, 50614, 400, 452, 18161, 2533, 486, 584, 11, 731, 11, 309, 311, 2139, 256, 420, 367, 13, 50822, 50822, 682, 1080, 2787, 41167, 5598, 365, 264, 7551, 7825, 11, 50970, 50970, 309, 311, 516, 281, 980, 385, 256, 293, 367, 362, 1732, 33783, 13, 51100, 51100, 440, 661, 2306, 362, 2295, 33783, 13, 51174, 51174, 1610, 498, 309, 14725, 2281, 11, 309, 311, 516, 281, 584, 11, 51268, 51268, 256, 293, 367, 362, 2295, 25737, 13, 51350, 51350, 440, 661, 2306, 362, 2946, 25737, 13, 51510, 51510, 2264, 11, 370, 309, 1177, 380, 1871, 577, 291, 767, 2906, 341, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1610316376187908, "compression_ratio": 1.77992277992278, "no_speech_prob": 1.4969446056056768e-05}, {"id": 1582, "seek": 454488, "start": 4562.96, "end": 4564.6, "text": " t and r have low energies.", "tokens": [50364, 400, 550, 286, 393, 1190, 2702, 294, 452, 2856, 2316, 50482, 50482, 293, 1029, 452, 18161, 2533, 281, 6069, 11, 50550, 50550, 370, 437, 311, 264, 958, 5063, 30, 50614, 50614, 400, 452, 18161, 2533, 486, 584, 11, 731, 11, 309, 311, 2139, 256, 420, 367, 13, 50822, 50822, 682, 1080, 2787, 41167, 5598, 365, 264, 7551, 7825, 11, 50970, 50970, 309, 311, 516, 281, 980, 385, 256, 293, 367, 362, 1732, 33783, 13, 51100, 51100, 440, 661, 2306, 362, 2295, 33783, 13, 51174, 51174, 1610, 498, 309, 14725, 2281, 11, 309, 311, 516, 281, 584, 11, 51268, 51268, 256, 293, 367, 362, 2295, 25737, 13, 51350, 51350, 440, 661, 2306, 362, 2946, 25737, 13, 51510, 51510, 2264, 11, 370, 309, 1177, 380, 1871, 577, 291, 767, 2906, 341, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1610316376187908, "compression_ratio": 1.77992277992278, "no_speech_prob": 1.4969446056056768e-05}, {"id": 1583, "seek": 454488, "start": 4564.6, "end": 4567.8, "text": " The other ones have higher energies.", "tokens": [50364, 400, 550, 286, 393, 1190, 2702, 294, 452, 2856, 2316, 50482, 50482, 293, 1029, 452, 18161, 2533, 281, 6069, 11, 50550, 50550, 370, 437, 311, 264, 958, 5063, 30, 50614, 50614, 400, 452, 18161, 2533, 486, 584, 11, 731, 11, 309, 311, 2139, 256, 420, 367, 13, 50822, 50822, 682, 1080, 2787, 41167, 5598, 365, 264, 7551, 7825, 11, 50970, 50970, 309, 311, 516, 281, 980, 385, 256, 293, 367, 362, 1732, 33783, 13, 51100, 51100, 440, 661, 2306, 362, 2295, 33783, 13, 51174, 51174, 1610, 498, 309, 14725, 2281, 11, 309, 311, 516, 281, 584, 11, 51268, 51268, 256, 293, 367, 362, 2295, 25737, 13, 51350, 51350, 440, 661, 2306, 362, 2946, 25737, 13, 51510, 51510, 2264, 11, 370, 309, 1177, 380, 1871, 577, 291, 767, 2906, 341, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1610316376187908, "compression_ratio": 1.77992277992278, "no_speech_prob": 1.4969446056056768e-05}, {"id": 1584, "seek": 454488, "start": 4567.8, "end": 4570.88, "text": " OK, so it doesn't matter how you actually represent this.", "tokens": [50364, 400, 550, 286, 393, 1190, 2702, 294, 452, 2856, 2316, 50482, 50482, 293, 1029, 452, 18161, 2533, 281, 6069, 11, 50550, 50550, 370, 437, 311, 264, 958, 5063, 30, 50614, 50614, 400, 452, 18161, 2533, 486, 584, 11, 731, 11, 309, 311, 2139, 256, 420, 367, 13, 50822, 50822, 682, 1080, 2787, 41167, 5598, 365, 264, 7551, 7825, 11, 50970, 50970, 309, 311, 516, 281, 980, 385, 256, 293, 367, 362, 1732, 33783, 13, 51100, 51100, 440, 661, 2306, 362, 2295, 33783, 13, 51174, 51174, 1610, 498, 309, 14725, 2281, 11, 309, 311, 516, 281, 584, 11, 51268, 51268, 256, 293, 367, 362, 2295, 25737, 13, 51350, 51350, 440, 661, 2306, 362, 2946, 25737, 13, 51510, 51510, 2264, 11, 370, 309, 1177, 380, 1871, 577, 291, 767, 2906, 341, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1610316376187908, "compression_ratio": 1.77992277992278, "no_speech_prob": 1.4969446056056768e-05}, {"id": 1585, "seek": 457088, "start": 4570.88, "end": 4575.0, "text": " If it's represented as a neural net, then implicitly,", "tokens": [50364, 759, 309, 311, 10379, 382, 257, 18161, 2533, 11, 550, 26947, 356, 11, 50570, 50570, 550, 291, 393, 3847, 341, 18161, 2533, 13, 50636, 50636, 509, 393, 3847, 264, 2856, 2316, 11, 50706, 50706, 570, 291, 393, 646, 48256, 16235, 50786, 50786, 807, 341, 2302, 551, 13, 50898, 50898, 407, 300, 576, 312, 1333, 295, 364, 1365, 295, 437, 561, 51012, 51012, 818, 819, 9364, 9410, 13, 51128, 51128, 286, 914, 11, 1936, 11, 264, 636, 281, 4445, 341, 51214, 51214, 307, 257, 534, 11, 534, 6179, 1461, 13, 51314, 51314, 708, 291, 643, 281, 360, 307, 646, 48256, 16235, 51410, 51410, 807, 341, 2302, 1461, 13, 51472, 51472, 400, 341, 1461, 575, 16121, 293, 498, 82, 293, 20560, 626, 13, 51666, 51666, 407, 406, 26703, 13, 51740], "temperature": 0.0, "avg_logprob": -0.1825537608220027, "compression_ratio": 1.8909774436090225, "no_speech_prob": 9.078910807147622e-06}, {"id": 1586, "seek": 457088, "start": 4575.0, "end": 4576.32, "text": " then you can train this neural net.", "tokens": [50364, 759, 309, 311, 10379, 382, 257, 18161, 2533, 11, 550, 26947, 356, 11, 50570, 50570, 550, 291, 393, 3847, 341, 18161, 2533, 13, 50636, 50636, 509, 393, 3847, 264, 2856, 2316, 11, 50706, 50706, 570, 291, 393, 646, 48256, 16235, 50786, 50786, 807, 341, 2302, 551, 13, 50898, 50898, 407, 300, 576, 312, 1333, 295, 364, 1365, 295, 437, 561, 51012, 51012, 818, 819, 9364, 9410, 13, 51128, 51128, 286, 914, 11, 1936, 11, 264, 636, 281, 4445, 341, 51214, 51214, 307, 257, 534, 11, 534, 6179, 1461, 13, 51314, 51314, 708, 291, 643, 281, 360, 307, 646, 48256, 16235, 51410, 51410, 807, 341, 2302, 1461, 13, 51472, 51472, 400, 341, 1461, 575, 16121, 293, 498, 82, 293, 20560, 626, 13, 51666, 51666, 407, 406, 26703, 13, 51740], "temperature": 0.0, "avg_logprob": -0.1825537608220027, "compression_ratio": 1.8909774436090225, "no_speech_prob": 9.078910807147622e-06}, {"id": 1587, "seek": 457088, "start": 4576.32, "end": 4577.72, "text": " You can train the language model,", "tokens": [50364, 759, 309, 311, 10379, 382, 257, 18161, 2533, 11, 550, 26947, 356, 11, 50570, 50570, 550, 291, 393, 3847, 341, 18161, 2533, 13, 50636, 50636, 509, 393, 3847, 264, 2856, 2316, 11, 50706, 50706, 570, 291, 393, 646, 48256, 16235, 50786, 50786, 807, 341, 2302, 551, 13, 50898, 50898, 407, 300, 576, 312, 1333, 295, 364, 1365, 295, 437, 561, 51012, 51012, 818, 819, 9364, 9410, 13, 51128, 51128, 286, 914, 11, 1936, 11, 264, 636, 281, 4445, 341, 51214, 51214, 307, 257, 534, 11, 534, 6179, 1461, 13, 51314, 51314, 708, 291, 643, 281, 360, 307, 646, 48256, 16235, 51410, 51410, 807, 341, 2302, 1461, 13, 51472, 51472, 400, 341, 1461, 575, 16121, 293, 498, 82, 293, 20560, 626, 13, 51666, 51666, 407, 406, 26703, 13, 51740], "temperature": 0.0, "avg_logprob": -0.1825537608220027, "compression_ratio": 1.8909774436090225, "no_speech_prob": 9.078910807147622e-06}, {"id": 1588, "seek": 457088, "start": 4577.72, "end": 4579.32, "text": " because you can back propagate gradient", "tokens": [50364, 759, 309, 311, 10379, 382, 257, 18161, 2533, 11, 550, 26947, 356, 11, 50570, 50570, 550, 291, 393, 3847, 341, 18161, 2533, 13, 50636, 50636, 509, 393, 3847, 264, 2856, 2316, 11, 50706, 50706, 570, 291, 393, 646, 48256, 16235, 50786, 50786, 807, 341, 2302, 551, 13, 50898, 50898, 407, 300, 576, 312, 1333, 295, 364, 1365, 295, 437, 561, 51012, 51012, 818, 819, 9364, 9410, 13, 51128, 51128, 286, 914, 11, 1936, 11, 264, 636, 281, 4445, 341, 51214, 51214, 307, 257, 534, 11, 534, 6179, 1461, 13, 51314, 51314, 708, 291, 643, 281, 360, 307, 646, 48256, 16235, 51410, 51410, 807, 341, 2302, 1461, 13, 51472, 51472, 400, 341, 1461, 575, 16121, 293, 498, 82, 293, 20560, 626, 13, 51666, 51666, 407, 406, 26703, 13, 51740], "temperature": 0.0, "avg_logprob": -0.1825537608220027, "compression_ratio": 1.8909774436090225, "no_speech_prob": 9.078910807147622e-06}, {"id": 1589, "seek": 457088, "start": 4579.32, "end": 4581.56, "text": " through this entire thing.", "tokens": [50364, 759, 309, 311, 10379, 382, 257, 18161, 2533, 11, 550, 26947, 356, 11, 50570, 50570, 550, 291, 393, 3847, 341, 18161, 2533, 13, 50636, 50636, 509, 393, 3847, 264, 2856, 2316, 11, 50706, 50706, 570, 291, 393, 646, 48256, 16235, 50786, 50786, 807, 341, 2302, 551, 13, 50898, 50898, 407, 300, 576, 312, 1333, 295, 364, 1365, 295, 437, 561, 51012, 51012, 818, 819, 9364, 9410, 13, 51128, 51128, 286, 914, 11, 1936, 11, 264, 636, 281, 4445, 341, 51214, 51214, 307, 257, 534, 11, 534, 6179, 1461, 13, 51314, 51314, 708, 291, 643, 281, 360, 307, 646, 48256, 16235, 51410, 51410, 807, 341, 2302, 1461, 13, 51472, 51472, 400, 341, 1461, 575, 16121, 293, 498, 82, 293, 20560, 626, 13, 51666, 51666, 407, 406, 26703, 13, 51740], "temperature": 0.0, "avg_logprob": -0.1825537608220027, "compression_ratio": 1.8909774436090225, "no_speech_prob": 9.078910807147622e-06}, {"id": 1590, "seek": 457088, "start": 4581.56, "end": 4583.84, "text": " So that would be sort of an example of what people", "tokens": [50364, 759, 309, 311, 10379, 382, 257, 18161, 2533, 11, 550, 26947, 356, 11, 50570, 50570, 550, 291, 393, 3847, 341, 18161, 2533, 13, 50636, 50636, 509, 393, 3847, 264, 2856, 2316, 11, 50706, 50706, 570, 291, 393, 646, 48256, 16235, 50786, 50786, 807, 341, 2302, 551, 13, 50898, 50898, 407, 300, 576, 312, 1333, 295, 364, 1365, 295, 437, 561, 51012, 51012, 818, 819, 9364, 9410, 13, 51128, 51128, 286, 914, 11, 1936, 11, 264, 636, 281, 4445, 341, 51214, 51214, 307, 257, 534, 11, 534, 6179, 1461, 13, 51314, 51314, 708, 291, 643, 281, 360, 307, 646, 48256, 16235, 51410, 51410, 807, 341, 2302, 1461, 13, 51472, 51472, 400, 341, 1461, 575, 16121, 293, 498, 82, 293, 20560, 626, 13, 51666, 51666, 407, 406, 26703, 13, 51740], "temperature": 0.0, "avg_logprob": -0.1825537608220027, "compression_ratio": 1.8909774436090225, "no_speech_prob": 9.078910807147622e-06}, {"id": 1591, "seek": 457088, "start": 4583.84, "end": 4586.16, "text": " call differentiable programming.", "tokens": [50364, 759, 309, 311, 10379, 382, 257, 18161, 2533, 11, 550, 26947, 356, 11, 50570, 50570, 550, 291, 393, 3847, 341, 18161, 2533, 13, 50636, 50636, 509, 393, 3847, 264, 2856, 2316, 11, 50706, 50706, 570, 291, 393, 646, 48256, 16235, 50786, 50786, 807, 341, 2302, 551, 13, 50898, 50898, 407, 300, 576, 312, 1333, 295, 364, 1365, 295, 437, 561, 51012, 51012, 818, 819, 9364, 9410, 13, 51128, 51128, 286, 914, 11, 1936, 11, 264, 636, 281, 4445, 341, 51214, 51214, 307, 257, 534, 11, 534, 6179, 1461, 13, 51314, 51314, 708, 291, 643, 281, 360, 307, 646, 48256, 16235, 51410, 51410, 807, 341, 2302, 1461, 13, 51472, 51472, 400, 341, 1461, 575, 16121, 293, 498, 82, 293, 20560, 626, 13, 51666, 51666, 407, 406, 26703, 13, 51740], "temperature": 0.0, "avg_logprob": -0.1825537608220027, "compression_ratio": 1.8909774436090225, "no_speech_prob": 9.078910807147622e-06}, {"id": 1592, "seek": 457088, "start": 4586.16, "end": 4587.88, "text": " I mean, basically, the way to implement this", "tokens": [50364, 759, 309, 311, 10379, 382, 257, 18161, 2533, 11, 550, 26947, 356, 11, 50570, 50570, 550, 291, 393, 3847, 341, 18161, 2533, 13, 50636, 50636, 509, 393, 3847, 264, 2856, 2316, 11, 50706, 50706, 570, 291, 393, 646, 48256, 16235, 50786, 50786, 807, 341, 2302, 551, 13, 50898, 50898, 407, 300, 576, 312, 1333, 295, 364, 1365, 295, 437, 561, 51012, 51012, 818, 819, 9364, 9410, 13, 51128, 51128, 286, 914, 11, 1936, 11, 264, 636, 281, 4445, 341, 51214, 51214, 307, 257, 534, 11, 534, 6179, 1461, 13, 51314, 51314, 708, 291, 643, 281, 360, 307, 646, 48256, 16235, 51410, 51410, 807, 341, 2302, 1461, 13, 51472, 51472, 400, 341, 1461, 575, 16121, 293, 498, 82, 293, 20560, 626, 13, 51666, 51666, 407, 406, 26703, 13, 51740], "temperature": 0.0, "avg_logprob": -0.1825537608220027, "compression_ratio": 1.8909774436090225, "no_speech_prob": 9.078910807147622e-06}, {"id": 1593, "seek": 457088, "start": 4587.88, "end": 4589.88, "text": " is a really, really complicated program.", "tokens": [50364, 759, 309, 311, 10379, 382, 257, 18161, 2533, 11, 550, 26947, 356, 11, 50570, 50570, 550, 291, 393, 3847, 341, 18161, 2533, 13, 50636, 50636, 509, 393, 3847, 264, 2856, 2316, 11, 50706, 50706, 570, 291, 393, 646, 48256, 16235, 50786, 50786, 807, 341, 2302, 551, 13, 50898, 50898, 407, 300, 576, 312, 1333, 295, 364, 1365, 295, 437, 561, 51012, 51012, 818, 819, 9364, 9410, 13, 51128, 51128, 286, 914, 11, 1936, 11, 264, 636, 281, 4445, 341, 51214, 51214, 307, 257, 534, 11, 534, 6179, 1461, 13, 51314, 51314, 708, 291, 643, 281, 360, 307, 646, 48256, 16235, 51410, 51410, 807, 341, 2302, 1461, 13, 51472, 51472, 400, 341, 1461, 575, 16121, 293, 498, 82, 293, 20560, 626, 13, 51666, 51666, 407, 406, 26703, 13, 51740], "temperature": 0.0, "avg_logprob": -0.1825537608220027, "compression_ratio": 1.8909774436090225, "no_speech_prob": 9.078910807147622e-06}, {"id": 1594, "seek": 457088, "start": 4589.88, "end": 4591.8, "text": " What you need to do is back propagate gradient", "tokens": [50364, 759, 309, 311, 10379, 382, 257, 18161, 2533, 11, 550, 26947, 356, 11, 50570, 50570, 550, 291, 393, 3847, 341, 18161, 2533, 13, 50636, 50636, 509, 393, 3847, 264, 2856, 2316, 11, 50706, 50706, 570, 291, 393, 646, 48256, 16235, 50786, 50786, 807, 341, 2302, 551, 13, 50898, 50898, 407, 300, 576, 312, 1333, 295, 364, 1365, 295, 437, 561, 51012, 51012, 818, 819, 9364, 9410, 13, 51128, 51128, 286, 914, 11, 1936, 11, 264, 636, 281, 4445, 341, 51214, 51214, 307, 257, 534, 11, 534, 6179, 1461, 13, 51314, 51314, 708, 291, 643, 281, 360, 307, 646, 48256, 16235, 51410, 51410, 807, 341, 2302, 1461, 13, 51472, 51472, 400, 341, 1461, 575, 16121, 293, 498, 82, 293, 20560, 626, 13, 51666, 51666, 407, 406, 26703, 13, 51740], "temperature": 0.0, "avg_logprob": -0.1825537608220027, "compression_ratio": 1.8909774436090225, "no_speech_prob": 9.078910807147622e-06}, {"id": 1595, "seek": 457088, "start": 4591.8, "end": 4593.04, "text": " through this entire program.", "tokens": [50364, 759, 309, 311, 10379, 382, 257, 18161, 2533, 11, 550, 26947, 356, 11, 50570, 50570, 550, 291, 393, 3847, 341, 18161, 2533, 13, 50636, 50636, 509, 393, 3847, 264, 2856, 2316, 11, 50706, 50706, 570, 291, 393, 646, 48256, 16235, 50786, 50786, 807, 341, 2302, 551, 13, 50898, 50898, 407, 300, 576, 312, 1333, 295, 364, 1365, 295, 437, 561, 51012, 51012, 818, 819, 9364, 9410, 13, 51128, 51128, 286, 914, 11, 1936, 11, 264, 636, 281, 4445, 341, 51214, 51214, 307, 257, 534, 11, 534, 6179, 1461, 13, 51314, 51314, 708, 291, 643, 281, 360, 307, 646, 48256, 16235, 51410, 51410, 807, 341, 2302, 1461, 13, 51472, 51472, 400, 341, 1461, 575, 16121, 293, 498, 82, 293, 20560, 626, 13, 51666, 51666, 407, 406, 26703, 13, 51740], "temperature": 0.0, "avg_logprob": -0.1825537608220027, "compression_ratio": 1.8909774436090225, "no_speech_prob": 9.078910807147622e-06}, {"id": 1596, "seek": 457088, "start": 4593.04, "end": 4596.92, "text": " And this program has loops and ifs and recursions.", "tokens": [50364, 759, 309, 311, 10379, 382, 257, 18161, 2533, 11, 550, 26947, 356, 11, 50570, 50570, 550, 291, 393, 3847, 341, 18161, 2533, 13, 50636, 50636, 509, 393, 3847, 264, 2856, 2316, 11, 50706, 50706, 570, 291, 393, 646, 48256, 16235, 50786, 50786, 807, 341, 2302, 551, 13, 50898, 50898, 407, 300, 576, 312, 1333, 295, 364, 1365, 295, 437, 561, 51012, 51012, 818, 819, 9364, 9410, 13, 51128, 51128, 286, 914, 11, 1936, 11, 264, 636, 281, 4445, 341, 51214, 51214, 307, 257, 534, 11, 534, 6179, 1461, 13, 51314, 51314, 708, 291, 643, 281, 360, 307, 646, 48256, 16235, 51410, 51410, 807, 341, 2302, 1461, 13, 51472, 51472, 400, 341, 1461, 575, 16121, 293, 498, 82, 293, 20560, 626, 13, 51666, 51666, 407, 406, 26703, 13, 51740], "temperature": 0.0, "avg_logprob": -0.1825537608220027, "compression_ratio": 1.8909774436090225, "no_speech_prob": 9.078910807147622e-06}, {"id": 1597, "seek": 459692, "start": 4596.92, "end": 4601.28, "text": " So not trivial.", "tokens": [50364, 407, 406, 26703, 13, 50582, 50582, 286, 478, 406, 3585, 291, 577, 321, 767, 12270, 341, 50688, 50688, 294, 22736, 11, 22601, 13, 50902, 50902, 583, 300, 311, 1936, 577, 527, 1520, 3760, 1185, 51020, 51020, 646, 294, 729, 1708, 390, 12270, 13, 51142, 51142, 407, 264, 4470, 2445, 321, 1143, 294, 264, 917, 281, 3847, 264, 1185, 51312, 51312, 390, 767, 264, 3671, 2295, 22119, 4470, 2445, 13, 51498, 51498, 407, 3671, 2295, 22119, 1619, 291, 51726, 51726, 362, 364, 14174, 4295, 510, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.14550758491862903, "compression_ratio": 1.6745283018867925, "no_speech_prob": 7.182299214036902e-06}, {"id": 1598, "seek": 459692, "start": 4601.28, "end": 4603.4, "text": " I'm not telling you how we actually implemented this", "tokens": [50364, 407, 406, 26703, 13, 50582, 50582, 286, 478, 406, 3585, 291, 577, 321, 767, 12270, 341, 50688, 50688, 294, 22736, 11, 22601, 13, 50902, 50902, 583, 300, 311, 1936, 577, 527, 1520, 3760, 1185, 51020, 51020, 646, 294, 729, 1708, 390, 12270, 13, 51142, 51142, 407, 264, 4470, 2445, 321, 1143, 294, 264, 917, 281, 3847, 264, 1185, 51312, 51312, 390, 767, 264, 3671, 2295, 22119, 4470, 2445, 13, 51498, 51498, 407, 3671, 2295, 22119, 1619, 291, 51726, 51726, 362, 364, 14174, 4295, 510, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.14550758491862903, "compression_ratio": 1.6745283018867925, "no_speech_prob": 7.182299214036902e-06}, {"id": 1599, "seek": 459692, "start": 4603.4, "end": 4607.68, "text": " in 1994, 1995.", "tokens": [50364, 407, 406, 26703, 13, 50582, 50582, 286, 478, 406, 3585, 291, 577, 321, 767, 12270, 341, 50688, 50688, 294, 22736, 11, 22601, 13, 50902, 50902, 583, 300, 311, 1936, 577, 527, 1520, 3760, 1185, 51020, 51020, 646, 294, 729, 1708, 390, 12270, 13, 51142, 51142, 407, 264, 4470, 2445, 321, 1143, 294, 264, 917, 281, 3847, 264, 1185, 51312, 51312, 390, 767, 264, 3671, 2295, 22119, 4470, 2445, 13, 51498, 51498, 407, 3671, 2295, 22119, 1619, 291, 51726, 51726, 362, 364, 14174, 4295, 510, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.14550758491862903, "compression_ratio": 1.6745283018867925, "no_speech_prob": 7.182299214036902e-06}, {"id": 1600, "seek": 459692, "start": 4607.68, "end": 4610.04, "text": " But that's basically how our check reading system", "tokens": [50364, 407, 406, 26703, 13, 50582, 50582, 286, 478, 406, 3585, 291, 577, 321, 767, 12270, 341, 50688, 50688, 294, 22736, 11, 22601, 13, 50902, 50902, 583, 300, 311, 1936, 577, 527, 1520, 3760, 1185, 51020, 51020, 646, 294, 729, 1708, 390, 12270, 13, 51142, 51142, 407, 264, 4470, 2445, 321, 1143, 294, 264, 917, 281, 3847, 264, 1185, 51312, 51312, 390, 767, 264, 3671, 2295, 22119, 4470, 2445, 13, 51498, 51498, 407, 3671, 2295, 22119, 1619, 291, 51726, 51726, 362, 364, 14174, 4295, 510, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.14550758491862903, "compression_ratio": 1.6745283018867925, "no_speech_prob": 7.182299214036902e-06}, {"id": 1601, "seek": 459692, "start": 4610.04, "end": 4612.4800000000005, "text": " back in those days was implemented.", "tokens": [50364, 407, 406, 26703, 13, 50582, 50582, 286, 478, 406, 3585, 291, 577, 321, 767, 12270, 341, 50688, 50688, 294, 22736, 11, 22601, 13, 50902, 50902, 583, 300, 311, 1936, 577, 527, 1520, 3760, 1185, 51020, 51020, 646, 294, 729, 1708, 390, 12270, 13, 51142, 51142, 407, 264, 4470, 2445, 321, 1143, 294, 264, 917, 281, 3847, 264, 1185, 51312, 51312, 390, 767, 264, 3671, 2295, 22119, 4470, 2445, 13, 51498, 51498, 407, 3671, 2295, 22119, 1619, 291, 51726, 51726, 362, 364, 14174, 4295, 510, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.14550758491862903, "compression_ratio": 1.6745283018867925, "no_speech_prob": 7.182299214036902e-06}, {"id": 1602, "seek": 459692, "start": 4612.4800000000005, "end": 4615.88, "text": " So the loss function we used in the end to train the system", "tokens": [50364, 407, 406, 26703, 13, 50582, 50582, 286, 478, 406, 3585, 291, 577, 321, 767, 12270, 341, 50688, 50688, 294, 22736, 11, 22601, 13, 50902, 50902, 583, 300, 311, 1936, 577, 527, 1520, 3760, 1185, 51020, 51020, 646, 294, 729, 1708, 390, 12270, 13, 51142, 51142, 407, 264, 4470, 2445, 321, 1143, 294, 264, 917, 281, 3847, 264, 1185, 51312, 51312, 390, 767, 264, 3671, 2295, 22119, 4470, 2445, 13, 51498, 51498, 407, 3671, 2295, 22119, 1619, 291, 51726, 51726, 362, 364, 14174, 4295, 510, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.14550758491862903, "compression_ratio": 1.6745283018867925, "no_speech_prob": 7.182299214036902e-06}, {"id": 1603, "seek": 459692, "start": 4615.88, "end": 4619.6, "text": " was actually the negative low likelihood loss function.", "tokens": [50364, 407, 406, 26703, 13, 50582, 50582, 286, 478, 406, 3585, 291, 577, 321, 767, 12270, 341, 50688, 50688, 294, 22736, 11, 22601, 13, 50902, 50902, 583, 300, 311, 1936, 577, 527, 1520, 3760, 1185, 51020, 51020, 646, 294, 729, 1708, 390, 12270, 13, 51142, 51142, 407, 264, 4470, 2445, 321, 1143, 294, 264, 917, 281, 3847, 264, 1185, 51312, 51312, 390, 767, 264, 3671, 2295, 22119, 4470, 2445, 13, 51498, 51498, 407, 3671, 2295, 22119, 1619, 291, 51726, 51726, 362, 364, 14174, 4295, 510, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.14550758491862903, "compression_ratio": 1.6745283018867925, "no_speech_prob": 7.182299214036902e-06}, {"id": 1604, "seek": 459692, "start": 4619.6, "end": 4624.16, "text": " So negative low likelihood says you", "tokens": [50364, 407, 406, 26703, 13, 50582, 50582, 286, 478, 406, 3585, 291, 577, 321, 767, 12270, 341, 50688, 50688, 294, 22736, 11, 22601, 13, 50902, 50902, 583, 300, 311, 1936, 577, 527, 1520, 3760, 1185, 51020, 51020, 646, 294, 729, 1708, 390, 12270, 13, 51142, 51142, 407, 264, 4470, 2445, 321, 1143, 294, 264, 917, 281, 3847, 264, 1185, 51312, 51312, 390, 767, 264, 3671, 2295, 22119, 4470, 2445, 13, 51498, 51498, 407, 3671, 2295, 22119, 1619, 291, 51726, 51726, 362, 364, 14174, 4295, 510, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.14550758491862903, "compression_ratio": 1.6745283018867925, "no_speech_prob": 7.182299214036902e-06}, {"id": 1605, "seek": 459692, "start": 4624.16, "end": 4626.4, "text": " have an interpretation graph here", "tokens": [50364, 407, 406, 26703, 13, 50582, 50582, 286, 478, 406, 3585, 291, 577, 321, 767, 12270, 341, 50688, 50688, 294, 22736, 11, 22601, 13, 50902, 50902, 583, 300, 311, 1936, 577, 527, 1520, 3760, 1185, 51020, 51020, 646, 294, 729, 1708, 390, 12270, 13, 51142, 51142, 407, 264, 4470, 2445, 321, 1143, 294, 264, 917, 281, 3847, 264, 1185, 51312, 51312, 390, 767, 264, 3671, 2295, 22119, 4470, 2445, 13, 51498, 51498, 407, 3671, 2295, 22119, 1619, 291, 51726, 51726, 362, 364, 14174, 4295, 510, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.14550758491862903, "compression_ratio": 1.6745283018867925, "no_speech_prob": 7.182299214036902e-06}, {"id": 1606, "seek": 462640, "start": 4626.4, "end": 4628.4, "text": " where each path is a possible interpretation.", "tokens": [50364, 689, 1184, 3100, 307, 257, 1944, 14174, 13, 50464, 50464, 400, 264, 2408, 295, 264, 25737, 2051, 264, 3100, 50578, 50578, 307, 264, 2281, 295, 300, 14174, 13, 50746, 50746, 509, 976, 309, 264, 3006, 1867, 13, 50808, 50808, 509, 3048, 264, 14518, 300, 362, 264, 3006, 14174, 13, 50968, 50968, 10635, 322, 264, 661, 1252, 13, 51030, 51030, 407, 510, 291, 10432, 365, 264, 22317, 13, 51104, 51104, 407, 264, 22317, 7694, 82, 264, 22978, 51300, 51300, 281, 729, 300, 366, 23980, 578, 984, 3006, 13, 51480, 51480, 407, 498, 309, 311, 364, 2372, 322, 264, 1520, 11, 337, 1365, 11, 51598, 51598, 309, 311, 658, 257, 26601, 5893, 13, 51730, 51730, 467, 1062, 362, 257, 7241, 1465, 294, 1868, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1202827256823343, "compression_ratio": 1.8464566929133859, "no_speech_prob": 4.6041190216783434e-05}, {"id": 1607, "seek": 462640, "start": 4628.4, "end": 4630.679999999999, "text": " And the sum of the energies along the path", "tokens": [50364, 689, 1184, 3100, 307, 257, 1944, 14174, 13, 50464, 50464, 400, 264, 2408, 295, 264, 25737, 2051, 264, 3100, 50578, 50578, 307, 264, 2281, 295, 300, 14174, 13, 50746, 50746, 509, 976, 309, 264, 3006, 1867, 13, 50808, 50808, 509, 3048, 264, 14518, 300, 362, 264, 3006, 14174, 13, 50968, 50968, 10635, 322, 264, 661, 1252, 13, 51030, 51030, 407, 510, 291, 10432, 365, 264, 22317, 13, 51104, 51104, 407, 264, 22317, 7694, 82, 264, 22978, 51300, 51300, 281, 729, 300, 366, 23980, 578, 984, 3006, 13, 51480, 51480, 407, 498, 309, 311, 364, 2372, 322, 264, 1520, 11, 337, 1365, 11, 51598, 51598, 309, 311, 658, 257, 26601, 5893, 13, 51730, 51730, 467, 1062, 362, 257, 7241, 1465, 294, 1868, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1202827256823343, "compression_ratio": 1.8464566929133859, "no_speech_prob": 4.6041190216783434e-05}, {"id": 1608, "seek": 462640, "start": 4630.679999999999, "end": 4634.04, "text": " is the energy of that interpretation.", "tokens": [50364, 689, 1184, 3100, 307, 257, 1944, 14174, 13, 50464, 50464, 400, 264, 2408, 295, 264, 25737, 2051, 264, 3100, 50578, 50578, 307, 264, 2281, 295, 300, 14174, 13, 50746, 50746, 509, 976, 309, 264, 3006, 1867, 13, 50808, 50808, 509, 3048, 264, 14518, 300, 362, 264, 3006, 14174, 13, 50968, 50968, 10635, 322, 264, 661, 1252, 13, 51030, 51030, 407, 510, 291, 10432, 365, 264, 22317, 13, 51104, 51104, 407, 264, 22317, 7694, 82, 264, 22978, 51300, 51300, 281, 729, 300, 366, 23980, 578, 984, 3006, 13, 51480, 51480, 407, 498, 309, 311, 364, 2372, 322, 264, 1520, 11, 337, 1365, 11, 51598, 51598, 309, 311, 658, 257, 26601, 5893, 13, 51730, 51730, 467, 1062, 362, 257, 7241, 1465, 294, 1868, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1202827256823343, "compression_ratio": 1.8464566929133859, "no_speech_prob": 4.6041190216783434e-05}, {"id": 1609, "seek": 462640, "start": 4634.04, "end": 4635.28, "text": " You give it the correct answer.", "tokens": [50364, 689, 1184, 3100, 307, 257, 1944, 14174, 13, 50464, 50464, 400, 264, 2408, 295, 264, 25737, 2051, 264, 3100, 50578, 50578, 307, 264, 2281, 295, 300, 14174, 13, 50746, 50746, 509, 976, 309, 264, 3006, 1867, 13, 50808, 50808, 509, 3048, 264, 14518, 300, 362, 264, 3006, 14174, 13, 50968, 50968, 10635, 322, 264, 661, 1252, 13, 51030, 51030, 407, 510, 291, 10432, 365, 264, 22317, 13, 51104, 51104, 407, 264, 22317, 7694, 82, 264, 22978, 51300, 51300, 281, 729, 300, 366, 23980, 578, 984, 3006, 13, 51480, 51480, 407, 498, 309, 311, 364, 2372, 322, 264, 1520, 11, 337, 1365, 11, 51598, 51598, 309, 311, 658, 257, 26601, 5893, 13, 51730, 51730, 467, 1062, 362, 257, 7241, 1465, 294, 1868, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1202827256823343, "compression_ratio": 1.8464566929133859, "no_speech_prob": 4.6041190216783434e-05}, {"id": 1610, "seek": 462640, "start": 4635.28, "end": 4638.48, "text": " You select the paths that have the correct interpretation.", "tokens": [50364, 689, 1184, 3100, 307, 257, 1944, 14174, 13, 50464, 50464, 400, 264, 2408, 295, 264, 25737, 2051, 264, 3100, 50578, 50578, 307, 264, 2281, 295, 300, 14174, 13, 50746, 50746, 509, 976, 309, 264, 3006, 1867, 13, 50808, 50808, 509, 3048, 264, 14518, 300, 362, 264, 3006, 14174, 13, 50968, 50968, 10635, 322, 264, 661, 1252, 13, 51030, 51030, 407, 510, 291, 10432, 365, 264, 22317, 13, 51104, 51104, 407, 264, 22317, 7694, 82, 264, 22978, 51300, 51300, 281, 729, 300, 366, 23980, 578, 984, 3006, 13, 51480, 51480, 407, 498, 309, 311, 364, 2372, 322, 264, 1520, 11, 337, 1365, 11, 51598, 51598, 309, 311, 658, 257, 26601, 5893, 13, 51730, 51730, 467, 1062, 362, 257, 7241, 1465, 294, 1868, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1202827256823343, "compression_ratio": 1.8464566929133859, "no_speech_prob": 4.6041190216783434e-05}, {"id": 1611, "seek": 462640, "start": 4638.48, "end": 4639.719999999999, "text": " Same on the other side.", "tokens": [50364, 689, 1184, 3100, 307, 257, 1944, 14174, 13, 50464, 50464, 400, 264, 2408, 295, 264, 25737, 2051, 264, 3100, 50578, 50578, 307, 264, 2281, 295, 300, 14174, 13, 50746, 50746, 509, 976, 309, 264, 3006, 1867, 13, 50808, 50808, 509, 3048, 264, 14518, 300, 362, 264, 3006, 14174, 13, 50968, 50968, 10635, 322, 264, 661, 1252, 13, 51030, 51030, 407, 510, 291, 10432, 365, 264, 22317, 13, 51104, 51104, 407, 264, 22317, 7694, 82, 264, 22978, 51300, 51300, 281, 729, 300, 366, 23980, 578, 984, 3006, 13, 51480, 51480, 407, 498, 309, 311, 364, 2372, 322, 264, 1520, 11, 337, 1365, 11, 51598, 51598, 309, 311, 658, 257, 26601, 5893, 13, 51730, 51730, 467, 1062, 362, 257, 7241, 1465, 294, 1868, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1202827256823343, "compression_ratio": 1.8464566929133859, "no_speech_prob": 4.6041190216783434e-05}, {"id": 1612, "seek": 462640, "start": 4639.719999999999, "end": 4641.2, "text": " So here you combine with the grammar.", "tokens": [50364, 689, 1184, 3100, 307, 257, 1944, 14174, 13, 50464, 50464, 400, 264, 2408, 295, 264, 25737, 2051, 264, 3100, 50578, 50578, 307, 264, 2281, 295, 300, 14174, 13, 50746, 50746, 509, 976, 309, 264, 3006, 1867, 13, 50808, 50808, 509, 3048, 264, 14518, 300, 362, 264, 3006, 14174, 13, 50968, 50968, 10635, 322, 264, 661, 1252, 13, 51030, 51030, 407, 510, 291, 10432, 365, 264, 22317, 13, 51104, 51104, 407, 264, 22317, 7694, 82, 264, 22978, 51300, 51300, 281, 729, 300, 366, 23980, 578, 984, 3006, 13, 51480, 51480, 407, 498, 309, 311, 364, 2372, 322, 264, 1520, 11, 337, 1365, 11, 51598, 51598, 309, 311, 658, 257, 26601, 5893, 13, 51730, 51730, 467, 1062, 362, 257, 7241, 1465, 294, 1868, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1202827256823343, "compression_ratio": 1.8464566929133859, "no_speech_prob": 4.6041190216783434e-05}, {"id": 1613, "seek": 462640, "start": 4641.2, "end": 4645.12, "text": " So the grammar restricts the sequences", "tokens": [50364, 689, 1184, 3100, 307, 257, 1944, 14174, 13, 50464, 50464, 400, 264, 2408, 295, 264, 25737, 2051, 264, 3100, 50578, 50578, 307, 264, 2281, 295, 300, 14174, 13, 50746, 50746, 509, 976, 309, 264, 3006, 1867, 13, 50808, 50808, 509, 3048, 264, 14518, 300, 362, 264, 3006, 14174, 13, 50968, 50968, 10635, 322, 264, 661, 1252, 13, 51030, 51030, 407, 510, 291, 10432, 365, 264, 22317, 13, 51104, 51104, 407, 264, 22317, 7694, 82, 264, 22978, 51300, 51300, 281, 729, 300, 366, 23980, 578, 984, 3006, 13, 51480, 51480, 407, 498, 309, 311, 364, 2372, 322, 264, 1520, 11, 337, 1365, 11, 51598, 51598, 309, 311, 658, 257, 26601, 5893, 13, 51730, 51730, 467, 1062, 362, 257, 7241, 1465, 294, 1868, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1202827256823343, "compression_ratio": 1.8464566929133859, "no_speech_prob": 4.6041190216783434e-05}, {"id": 1614, "seek": 462640, "start": 4645.12, "end": 4648.719999999999, "text": " to those that are syntactically correct.", "tokens": [50364, 689, 1184, 3100, 307, 257, 1944, 14174, 13, 50464, 50464, 400, 264, 2408, 295, 264, 25737, 2051, 264, 3100, 50578, 50578, 307, 264, 2281, 295, 300, 14174, 13, 50746, 50746, 509, 976, 309, 264, 3006, 1867, 13, 50808, 50808, 509, 3048, 264, 14518, 300, 362, 264, 3006, 14174, 13, 50968, 50968, 10635, 322, 264, 661, 1252, 13, 51030, 51030, 407, 510, 291, 10432, 365, 264, 22317, 13, 51104, 51104, 407, 264, 22317, 7694, 82, 264, 22978, 51300, 51300, 281, 729, 300, 366, 23980, 578, 984, 3006, 13, 51480, 51480, 407, 498, 309, 311, 364, 2372, 322, 264, 1520, 11, 337, 1365, 11, 51598, 51598, 309, 311, 658, 257, 26601, 5893, 13, 51730, 51730, 467, 1062, 362, 257, 7241, 1465, 294, 1868, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1202827256823343, "compression_ratio": 1.8464566929133859, "no_speech_prob": 4.6041190216783434e-05}, {"id": 1615, "seek": 462640, "start": 4648.719999999999, "end": 4651.08, "text": " So if it's an amount on the check, for example,", "tokens": [50364, 689, 1184, 3100, 307, 257, 1944, 14174, 13, 50464, 50464, 400, 264, 2408, 295, 264, 25737, 2051, 264, 3100, 50578, 50578, 307, 264, 2281, 295, 300, 14174, 13, 50746, 50746, 509, 976, 309, 264, 3006, 1867, 13, 50808, 50808, 509, 3048, 264, 14518, 300, 362, 264, 3006, 14174, 13, 50968, 50968, 10635, 322, 264, 661, 1252, 13, 51030, 51030, 407, 510, 291, 10432, 365, 264, 22317, 13, 51104, 51104, 407, 264, 22317, 7694, 82, 264, 22978, 51300, 51300, 281, 729, 300, 366, 23980, 578, 984, 3006, 13, 51480, 51480, 407, 498, 309, 311, 364, 2372, 322, 264, 1520, 11, 337, 1365, 11, 51598, 51598, 309, 311, 658, 257, 26601, 5893, 13, 51730, 51730, 467, 1062, 362, 257, 7241, 1465, 294, 1868, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1202827256823343, "compression_ratio": 1.8464566929133859, "no_speech_prob": 4.6041190216783434e-05}, {"id": 1616, "seek": 462640, "start": 4651.08, "end": 4653.719999999999, "text": " it's got a decimal dot.", "tokens": [50364, 689, 1184, 3100, 307, 257, 1944, 14174, 13, 50464, 50464, 400, 264, 2408, 295, 264, 25737, 2051, 264, 3100, 50578, 50578, 307, 264, 2281, 295, 300, 14174, 13, 50746, 50746, 509, 976, 309, 264, 3006, 1867, 13, 50808, 50808, 509, 3048, 264, 14518, 300, 362, 264, 3006, 14174, 13, 50968, 50968, 10635, 322, 264, 661, 1252, 13, 51030, 51030, 407, 510, 291, 10432, 365, 264, 22317, 13, 51104, 51104, 407, 264, 22317, 7694, 82, 264, 22978, 51300, 51300, 281, 729, 300, 366, 23980, 578, 984, 3006, 13, 51480, 51480, 407, 498, 309, 311, 364, 2372, 322, 264, 1520, 11, 337, 1365, 11, 51598, 51598, 309, 311, 658, 257, 26601, 5893, 13, 51730, 51730, 467, 1062, 362, 257, 7241, 1465, 294, 1868, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1202827256823343, "compression_ratio": 1.8464566929133859, "no_speech_prob": 4.6041190216783434e-05}, {"id": 1617, "seek": 462640, "start": 4653.719999999999, "end": 4655.92, "text": " It might have a dollar sign in front.", "tokens": [50364, 689, 1184, 3100, 307, 257, 1944, 14174, 13, 50464, 50464, 400, 264, 2408, 295, 264, 25737, 2051, 264, 3100, 50578, 50578, 307, 264, 2281, 295, 300, 14174, 13, 50746, 50746, 509, 976, 309, 264, 3006, 1867, 13, 50808, 50808, 509, 3048, 264, 14518, 300, 362, 264, 3006, 14174, 13, 50968, 50968, 10635, 322, 264, 661, 1252, 13, 51030, 51030, 407, 510, 291, 10432, 365, 264, 22317, 13, 51104, 51104, 407, 264, 22317, 7694, 82, 264, 22978, 51300, 51300, 281, 729, 300, 366, 23980, 578, 984, 3006, 13, 51480, 51480, 407, 498, 309, 311, 364, 2372, 322, 264, 1520, 11, 337, 1365, 11, 51598, 51598, 309, 311, 658, 257, 26601, 5893, 13, 51730, 51730, 467, 1062, 362, 257, 7241, 1465, 294, 1868, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1202827256823343, "compression_ratio": 1.8464566929133859, "no_speech_prob": 4.6041190216783434e-05}, {"id": 1618, "seek": 465592, "start": 4655.92, "end": 4658.28, "text": " It might have stars.", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1619, "seek": 465592, "start": 4658.28, "end": 4661.4, "text": " There's a grammar for it, which you can build by hand.", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1620, "seek": 465592, "start": 4661.4, "end": 4664.28, "text": " It's a finite state grammar.", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1621, "seek": 465592, "start": 4664.28, "end": 4666.0, "text": " You compose those two graphs and you", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1622, "seek": 465592, "start": 4666.0, "end": 4668.08, "text": " get the set of paths in this graph", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1623, "seek": 465592, "start": 4668.08, "end": 4670.52, "text": " that actually contain grammatically correct", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1624, "seek": 465592, "start": 4670.52, "end": 4671.4400000000005, "text": " interpretation.", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1625, "seek": 465592, "start": 4671.4400000000005, "end": 4672.56, "text": " And now you don't do Viterbi.", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1626, "seek": 465592, "start": 4672.56, "end": 4673.52, "text": " You do forward.", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1627, "seek": 465592, "start": 4673.52, "end": 4674.88, "text": " What is forward?", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1628, "seek": 465592, "start": 4674.88, "end": 4679.36, "text": " So Viterbi computes the path in a graph", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1629, "seek": 465592, "start": 4679.36, "end": 4680.52, "text": " that has a minimum energy.", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1630, "seek": 465592, "start": 4680.52, "end": 4682.32, "text": " Basically, it minimizes with respect", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1631, "seek": 465592, "start": 4682.32, "end": 4684.28, "text": " to the latent variable where the latent variable is", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1632, "seek": 465592, "start": 4684.28, "end": 4685.8, "text": " a path in the graph.", "tokens": [50364, 467, 1062, 362, 6105, 13, 50482, 50482, 821, 311, 257, 22317, 337, 309, 11, 597, 291, 393, 1322, 538, 1011, 13, 50638, 50638, 467, 311, 257, 19362, 1785, 22317, 13, 50782, 50782, 509, 35925, 729, 732, 24877, 293, 291, 50868, 50868, 483, 264, 992, 295, 14518, 294, 341, 4295, 50972, 50972, 300, 767, 5304, 17570, 5030, 3006, 51094, 51094, 14174, 13, 51140, 51140, 400, 586, 291, 500, 380, 360, 691, 1681, 5614, 13, 51196, 51196, 509, 360, 2128, 13, 51244, 51244, 708, 307, 2128, 30, 51312, 51312, 407, 691, 1681, 5614, 715, 1819, 264, 3100, 294, 257, 4295, 51536, 51536, 300, 575, 257, 7285, 2281, 13, 51594, 51594, 8537, 11, 309, 4464, 5660, 365, 3104, 51684, 51684, 281, 264, 48994, 7006, 689, 264, 48994, 7006, 307, 51782, 51782, 257, 3100, 294, 264, 4295, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.202808545983356, "compression_ratio": 1.75, "no_speech_prob": 4.637648544303374e-06}, {"id": 1633, "seek": 468580, "start": 4685.8, "end": 4688.0, "text": " Forward computes the log of the sum", "tokens": [50364, 35524, 715, 1819, 264, 3565, 295, 264, 2408, 50474, 50474, 295, 264, 21510, 82, 295, 3175, 264, 25737, 295, 439, 264, 14518, 13, 50644, 50784, 407, 1936, 11, 309, 16885, 5660, 670, 264, 48994, 7006, 11, 50948, 50948, 597, 307, 264, 3100, 294, 264, 4295, 13, 51054, 51054, 823, 11, 309, 4523, 484, 300, 291, 393, 360, 341, 588, 3612, 13, 51194, 51194, 400, 309, 311, 588, 7084, 13, 51294, 51294, 467, 1177, 380, 2063, 544, 813, 884, 691, 1681, 5614, 13, 51424, 51424, 400, 291, 393, 646, 79, 1513, 559, 473, 281, 309, 13, 51658, 51658, 400, 286, 500, 380, 362, 257, 4137, 337, 341, 11, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.12755019385535438, "compression_ratio": 1.5938864628820961, "no_speech_prob": 1.3925155144534074e-06}, {"id": 1634, "seek": 468580, "start": 4688.0, "end": 4691.400000000001, "text": " of the exponentials of minus the energies of all the paths.", "tokens": [50364, 35524, 715, 1819, 264, 3565, 295, 264, 2408, 50474, 50474, 295, 264, 21510, 82, 295, 3175, 264, 25737, 295, 439, 264, 14518, 13, 50644, 50784, 407, 1936, 11, 309, 16885, 5660, 670, 264, 48994, 7006, 11, 50948, 50948, 597, 307, 264, 3100, 294, 264, 4295, 13, 51054, 51054, 823, 11, 309, 4523, 484, 300, 291, 393, 360, 341, 588, 3612, 13, 51194, 51194, 400, 309, 311, 588, 7084, 13, 51294, 51294, 467, 1177, 380, 2063, 544, 813, 884, 691, 1681, 5614, 13, 51424, 51424, 400, 291, 393, 646, 79, 1513, 559, 473, 281, 309, 13, 51658, 51658, 400, 286, 500, 380, 362, 257, 4137, 337, 341, 11, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.12755019385535438, "compression_ratio": 1.5938864628820961, "no_speech_prob": 1.3925155144534074e-06}, {"id": 1635, "seek": 468580, "start": 4694.2, "end": 4697.4800000000005, "text": " So basically, it marginalizes over the latent variable,", "tokens": [50364, 35524, 715, 1819, 264, 3565, 295, 264, 2408, 50474, 50474, 295, 264, 21510, 82, 295, 3175, 264, 25737, 295, 439, 264, 14518, 13, 50644, 50784, 407, 1936, 11, 309, 16885, 5660, 670, 264, 48994, 7006, 11, 50948, 50948, 597, 307, 264, 3100, 294, 264, 4295, 13, 51054, 51054, 823, 11, 309, 4523, 484, 300, 291, 393, 360, 341, 588, 3612, 13, 51194, 51194, 400, 309, 311, 588, 7084, 13, 51294, 51294, 467, 1177, 380, 2063, 544, 813, 884, 691, 1681, 5614, 13, 51424, 51424, 400, 291, 393, 646, 79, 1513, 559, 473, 281, 309, 13, 51658, 51658, 400, 286, 500, 380, 362, 257, 4137, 337, 341, 11, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.12755019385535438, "compression_ratio": 1.5938864628820961, "no_speech_prob": 1.3925155144534074e-06}, {"id": 1636, "seek": 468580, "start": 4697.4800000000005, "end": 4699.6, "text": " which is the path in the graph.", "tokens": [50364, 35524, 715, 1819, 264, 3565, 295, 264, 2408, 50474, 50474, 295, 264, 21510, 82, 295, 3175, 264, 25737, 295, 439, 264, 14518, 13, 50644, 50784, 407, 1936, 11, 309, 16885, 5660, 670, 264, 48994, 7006, 11, 50948, 50948, 597, 307, 264, 3100, 294, 264, 4295, 13, 51054, 51054, 823, 11, 309, 4523, 484, 300, 291, 393, 360, 341, 588, 3612, 13, 51194, 51194, 400, 309, 311, 588, 7084, 13, 51294, 51294, 467, 1177, 380, 2063, 544, 813, 884, 691, 1681, 5614, 13, 51424, 51424, 400, 291, 393, 646, 79, 1513, 559, 473, 281, 309, 13, 51658, 51658, 400, 286, 500, 380, 362, 257, 4137, 337, 341, 11, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.12755019385535438, "compression_ratio": 1.5938864628820961, "no_speech_prob": 1.3925155144534074e-06}, {"id": 1637, "seek": 468580, "start": 4699.6, "end": 4702.400000000001, "text": " Now, it turns out that you can do this very easily.", "tokens": [50364, 35524, 715, 1819, 264, 3565, 295, 264, 2408, 50474, 50474, 295, 264, 21510, 82, 295, 3175, 264, 25737, 295, 439, 264, 14518, 13, 50644, 50784, 407, 1936, 11, 309, 16885, 5660, 670, 264, 48994, 7006, 11, 50948, 50948, 597, 307, 264, 3100, 294, 264, 4295, 13, 51054, 51054, 823, 11, 309, 4523, 484, 300, 291, 393, 360, 341, 588, 3612, 13, 51194, 51194, 400, 309, 311, 588, 7084, 13, 51294, 51294, 467, 1177, 380, 2063, 544, 813, 884, 691, 1681, 5614, 13, 51424, 51424, 400, 291, 393, 646, 79, 1513, 559, 473, 281, 309, 13, 51658, 51658, 400, 286, 500, 380, 362, 257, 4137, 337, 341, 11, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.12755019385535438, "compression_ratio": 1.5938864628820961, "no_speech_prob": 1.3925155144534074e-06}, {"id": 1638, "seek": 468580, "start": 4702.400000000001, "end": 4704.400000000001, "text": " And it's very cheap.", "tokens": [50364, 35524, 715, 1819, 264, 3565, 295, 264, 2408, 50474, 50474, 295, 264, 21510, 82, 295, 3175, 264, 25737, 295, 439, 264, 14518, 13, 50644, 50784, 407, 1936, 11, 309, 16885, 5660, 670, 264, 48994, 7006, 11, 50948, 50948, 597, 307, 264, 3100, 294, 264, 4295, 13, 51054, 51054, 823, 11, 309, 4523, 484, 300, 291, 393, 360, 341, 588, 3612, 13, 51194, 51194, 400, 309, 311, 588, 7084, 13, 51294, 51294, 467, 1177, 380, 2063, 544, 813, 884, 691, 1681, 5614, 13, 51424, 51424, 400, 291, 393, 646, 79, 1513, 559, 473, 281, 309, 13, 51658, 51658, 400, 286, 500, 380, 362, 257, 4137, 337, 341, 11, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.12755019385535438, "compression_ratio": 1.5938864628820961, "no_speech_prob": 1.3925155144534074e-06}, {"id": 1639, "seek": 468580, "start": 4704.400000000001, "end": 4707.0, "text": " It doesn't cost more than doing Viterbi.", "tokens": [50364, 35524, 715, 1819, 264, 3565, 295, 264, 2408, 50474, 50474, 295, 264, 21510, 82, 295, 3175, 264, 25737, 295, 439, 264, 14518, 13, 50644, 50784, 407, 1936, 11, 309, 16885, 5660, 670, 264, 48994, 7006, 11, 50948, 50948, 597, 307, 264, 3100, 294, 264, 4295, 13, 51054, 51054, 823, 11, 309, 4523, 484, 300, 291, 393, 360, 341, 588, 3612, 13, 51194, 51194, 400, 309, 311, 588, 7084, 13, 51294, 51294, 467, 1177, 380, 2063, 544, 813, 884, 691, 1681, 5614, 13, 51424, 51424, 400, 291, 393, 646, 79, 1513, 559, 473, 281, 309, 13, 51658, 51658, 400, 286, 500, 380, 362, 257, 4137, 337, 341, 11, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.12755019385535438, "compression_ratio": 1.5938864628820961, "no_speech_prob": 1.3925155144534074e-06}, {"id": 1640, "seek": 468580, "start": 4707.0, "end": 4711.68, "text": " And you can backpropagate to it.", "tokens": [50364, 35524, 715, 1819, 264, 3565, 295, 264, 2408, 50474, 50474, 295, 264, 21510, 82, 295, 3175, 264, 25737, 295, 439, 264, 14518, 13, 50644, 50784, 407, 1936, 11, 309, 16885, 5660, 670, 264, 48994, 7006, 11, 50948, 50948, 597, 307, 264, 3100, 294, 264, 4295, 13, 51054, 51054, 823, 11, 309, 4523, 484, 300, 291, 393, 360, 341, 588, 3612, 13, 51194, 51194, 400, 309, 311, 588, 7084, 13, 51294, 51294, 467, 1177, 380, 2063, 544, 813, 884, 691, 1681, 5614, 13, 51424, 51424, 400, 291, 393, 646, 79, 1513, 559, 473, 281, 309, 13, 51658, 51658, 400, 286, 500, 380, 362, 257, 4137, 337, 341, 11, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.12755019385535438, "compression_ratio": 1.5938864628820961, "no_speech_prob": 1.3925155144534074e-06}, {"id": 1641, "seek": 468580, "start": 4711.68, "end": 4713.400000000001, "text": " And I don't have a slide for this,", "tokens": [50364, 35524, 715, 1819, 264, 3565, 295, 264, 2408, 50474, 50474, 295, 264, 21510, 82, 295, 3175, 264, 25737, 295, 439, 264, 14518, 13, 50644, 50784, 407, 1936, 11, 309, 16885, 5660, 670, 264, 48994, 7006, 11, 50948, 50948, 597, 307, 264, 3100, 294, 264, 4295, 13, 51054, 51054, 823, 11, 309, 4523, 484, 300, 291, 393, 360, 341, 588, 3612, 13, 51194, 51194, 400, 309, 311, 588, 7084, 13, 51294, 51294, 467, 1177, 380, 2063, 544, 813, 884, 691, 1681, 5614, 13, 51424, 51424, 400, 291, 393, 646, 79, 1513, 559, 473, 281, 309, 13, 51658, 51658, 400, 286, 500, 380, 362, 257, 4137, 337, 341, 11, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.12755019385535438, "compression_ratio": 1.5938864628820961, "no_speech_prob": 1.3925155144534074e-06}, {"id": 1642, "seek": 471340, "start": 4713.4, "end": 4719.44, "text": " so I'm going to switch to drawing it.", "tokens": [50364, 370, 286, 478, 516, 281, 3679, 281, 6316, 309, 13, 50666, 51146, 1057, 558, 13, 51170, 51442, 407, 291, 362, 472, 3100, 13, 51538, 51538, 509, 362, 1071, 3100, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.2887276761672076, "compression_ratio": 1.1341463414634145, "no_speech_prob": 1.994296326301992e-06}, {"id": 1643, "seek": 471340, "start": 4729.04, "end": 4729.5199999999995, "text": " All right.", "tokens": [50364, 370, 286, 478, 516, 281, 3679, 281, 6316, 309, 13, 50666, 51146, 1057, 558, 13, 51170, 51442, 407, 291, 362, 472, 3100, 13, 51538, 51538, 509, 362, 1071, 3100, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.2887276761672076, "compression_ratio": 1.1341463414634145, "no_speech_prob": 1.994296326301992e-06}, {"id": 1644, "seek": 471340, "start": 4734.96, "end": 4736.879999999999, "text": " So you have one path.", "tokens": [50364, 370, 286, 478, 516, 281, 3679, 281, 6316, 309, 13, 50666, 51146, 1057, 558, 13, 51170, 51442, 407, 291, 362, 472, 3100, 13, 51538, 51538, 509, 362, 1071, 3100, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.2887276761672076, "compression_ratio": 1.1341463414634145, "no_speech_prob": 1.994296326301992e-06}, {"id": 1645, "seek": 471340, "start": 4736.879999999999, "end": 4740.16, "text": " You have another path.", "tokens": [50364, 370, 286, 478, 516, 281, 3679, 281, 6316, 309, 13, 50666, 51146, 1057, 558, 13, 51170, 51442, 407, 291, 362, 472, 3100, 13, 51538, 51538, 509, 362, 1071, 3100, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.2887276761672076, "compression_ratio": 1.1341463414634145, "no_speech_prob": 1.994296326301992e-06}, {"id": 1646, "seek": 474016, "start": 4740.16, "end": 4744.76, "text": " And maybe another path that skips over here.", "tokens": [50364, 400, 1310, 1071, 3100, 300, 1110, 2600, 670, 510, 13, 50594, 50812, 400, 1184, 295, 729, 1074, 575, 364, 2281, 11, 558, 30, 51028, 51028, 462, 16, 11, 462, 17, 11, 462, 18, 11, 462, 19, 11, 462, 20, 11, 462, 21, 11, 718, 311, 584, 13, 51470, 51470, 407, 498, 291, 360, 691, 1681, 5614, 31875, 3100, 294, 257, 4295, 11, 51610, 51610, 291, 434, 445, 516, 281, 915, 264, 3100, 300, 575, 257, 7285, 2281, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.1605942074845477, "compression_ratio": 1.3705882352941177, "no_speech_prob": 1.5534454860244296e-06}, {"id": 1647, "seek": 474016, "start": 4749.12, "end": 4753.44, "text": " And each of those guys has an energy, right?", "tokens": [50364, 400, 1310, 1071, 3100, 300, 1110, 2600, 670, 510, 13, 50594, 50812, 400, 1184, 295, 729, 1074, 575, 364, 2281, 11, 558, 30, 51028, 51028, 462, 16, 11, 462, 17, 11, 462, 18, 11, 462, 19, 11, 462, 20, 11, 462, 21, 11, 718, 311, 584, 13, 51470, 51470, 407, 498, 291, 360, 691, 1681, 5614, 31875, 3100, 294, 257, 4295, 11, 51610, 51610, 291, 434, 445, 516, 281, 915, 264, 3100, 300, 575, 257, 7285, 2281, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.1605942074845477, "compression_ratio": 1.3705882352941177, "no_speech_prob": 1.5534454860244296e-06}, {"id": 1648, "seek": 474016, "start": 4753.44, "end": 4762.28, "text": " E1, E2, E3, E4, E5, E6, let's say.", "tokens": [50364, 400, 1310, 1071, 3100, 300, 1110, 2600, 670, 510, 13, 50594, 50812, 400, 1184, 295, 729, 1074, 575, 364, 2281, 11, 558, 30, 51028, 51028, 462, 16, 11, 462, 17, 11, 462, 18, 11, 462, 19, 11, 462, 20, 11, 462, 21, 11, 718, 311, 584, 13, 51470, 51470, 407, 498, 291, 360, 691, 1681, 5614, 31875, 3100, 294, 257, 4295, 11, 51610, 51610, 291, 434, 445, 516, 281, 915, 264, 3100, 300, 575, 257, 7285, 2281, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.1605942074845477, "compression_ratio": 1.3705882352941177, "no_speech_prob": 1.5534454860244296e-06}, {"id": 1649, "seek": 474016, "start": 4762.28, "end": 4765.08, "text": " So if you do Viterbi shortest path in a graph,", "tokens": [50364, 400, 1310, 1071, 3100, 300, 1110, 2600, 670, 510, 13, 50594, 50812, 400, 1184, 295, 729, 1074, 575, 364, 2281, 11, 558, 30, 51028, 51028, 462, 16, 11, 462, 17, 11, 462, 18, 11, 462, 19, 11, 462, 20, 11, 462, 21, 11, 718, 311, 584, 13, 51470, 51470, 407, 498, 291, 360, 691, 1681, 5614, 31875, 3100, 294, 257, 4295, 11, 51610, 51610, 291, 434, 445, 516, 281, 915, 264, 3100, 300, 575, 257, 7285, 2281, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.1605942074845477, "compression_ratio": 1.3705882352941177, "no_speech_prob": 1.5534454860244296e-06}, {"id": 1650, "seek": 474016, "start": 4765.08, "end": 4768.12, "text": " you're just going to find the path that has a minimum energy.", "tokens": [50364, 400, 1310, 1071, 3100, 300, 1110, 2600, 670, 510, 13, 50594, 50812, 400, 1184, 295, 729, 1074, 575, 364, 2281, 11, 558, 30, 51028, 51028, 462, 16, 11, 462, 17, 11, 462, 18, 11, 462, 19, 11, 462, 20, 11, 462, 21, 11, 718, 311, 584, 13, 51470, 51470, 407, 498, 291, 360, 691, 1681, 5614, 31875, 3100, 294, 257, 4295, 11, 51610, 51610, 291, 434, 445, 516, 281, 915, 264, 3100, 300, 575, 257, 7285, 2281, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.1605942074845477, "compression_ratio": 1.3705882352941177, "no_speech_prob": 1.5534454860244296e-06}, {"id": 1651, "seek": 476812, "start": 4768.12, "end": 4772.48, "text": " But what I'm going to talk about here is computing.", "tokens": [50364, 583, 437, 286, 478, 516, 281, 751, 466, 510, 307, 15866, 13, 50582, 50582, 407, 519, 295, 264, 3100, 382, 257, 48994, 7006, 710, 13, 50708, 50708, 400, 1604, 11, 281, 14722, 283, 295, 2031, 11, 288, 11, 291, 393, 360, 732, 721, 13, 51000, 51000, 509, 393, 360, 923, 670, 710, 295, 308, 295, 2031, 11, 288, 11, 710, 13, 51214, 51214, 400, 1604, 11, 710, 307, 264, 3100, 13, 51342, 51342, 1610, 498, 291, 528, 281, 16885, 1125, 11, 291, 360, 3175, 502, 670, 9861, 3565, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.12231372750323752, "compression_ratio": 1.5635359116022098, "no_speech_prob": 5.771651103714248e-06}, {"id": 1652, "seek": 476812, "start": 4772.48, "end": 4775.0, "text": " So think of the path as a latent variable z.", "tokens": [50364, 583, 437, 286, 478, 516, 281, 751, 466, 510, 307, 15866, 13, 50582, 50582, 407, 519, 295, 264, 3100, 382, 257, 48994, 7006, 710, 13, 50708, 50708, 400, 1604, 11, 281, 14722, 283, 295, 2031, 11, 288, 11, 291, 393, 360, 732, 721, 13, 51000, 51000, 509, 393, 360, 923, 670, 710, 295, 308, 295, 2031, 11, 288, 11, 710, 13, 51214, 51214, 400, 1604, 11, 710, 307, 264, 3100, 13, 51342, 51342, 1610, 498, 291, 528, 281, 16885, 1125, 11, 291, 360, 3175, 502, 670, 9861, 3565, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.12231372750323752, "compression_ratio": 1.5635359116022098, "no_speech_prob": 5.771651103714248e-06}, {"id": 1653, "seek": 476812, "start": 4775.0, "end": 4780.84, "text": " And remember, to compute f of x, y, you can do two things.", "tokens": [50364, 583, 437, 286, 478, 516, 281, 751, 466, 510, 307, 15866, 13, 50582, 50582, 407, 519, 295, 264, 3100, 382, 257, 48994, 7006, 710, 13, 50708, 50708, 400, 1604, 11, 281, 14722, 283, 295, 2031, 11, 288, 11, 291, 393, 360, 732, 721, 13, 51000, 51000, 509, 393, 360, 923, 670, 710, 295, 308, 295, 2031, 11, 288, 11, 710, 13, 51214, 51214, 400, 1604, 11, 710, 307, 264, 3100, 13, 51342, 51342, 1610, 498, 291, 528, 281, 16885, 1125, 11, 291, 360, 3175, 502, 670, 9861, 3565, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.12231372750323752, "compression_ratio": 1.5635359116022098, "no_speech_prob": 5.771651103714248e-06}, {"id": 1654, "seek": 476812, "start": 4780.84, "end": 4785.12, "text": " You can do min over z of e of x, y, z.", "tokens": [50364, 583, 437, 286, 478, 516, 281, 751, 466, 510, 307, 15866, 13, 50582, 50582, 407, 519, 295, 264, 3100, 382, 257, 48994, 7006, 710, 13, 50708, 50708, 400, 1604, 11, 281, 14722, 283, 295, 2031, 11, 288, 11, 291, 393, 360, 732, 721, 13, 51000, 51000, 509, 393, 360, 923, 670, 710, 295, 308, 295, 2031, 11, 288, 11, 710, 13, 51214, 51214, 400, 1604, 11, 710, 307, 264, 3100, 13, 51342, 51342, 1610, 498, 291, 528, 281, 16885, 1125, 11, 291, 360, 3175, 502, 670, 9861, 3565, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.12231372750323752, "compression_ratio": 1.5635359116022098, "no_speech_prob": 5.771651103714248e-06}, {"id": 1655, "seek": 476812, "start": 4785.12, "end": 4787.68, "text": " And remember, z is the path.", "tokens": [50364, 583, 437, 286, 478, 516, 281, 751, 466, 510, 307, 15866, 13, 50582, 50582, 407, 519, 295, 264, 3100, 382, 257, 48994, 7006, 710, 13, 50708, 50708, 400, 1604, 11, 281, 14722, 283, 295, 2031, 11, 288, 11, 291, 393, 360, 732, 721, 13, 51000, 51000, 509, 393, 360, 923, 670, 710, 295, 308, 295, 2031, 11, 288, 11, 710, 13, 51214, 51214, 400, 1604, 11, 710, 307, 264, 3100, 13, 51342, 51342, 1610, 498, 291, 528, 281, 16885, 1125, 11, 291, 360, 3175, 502, 670, 9861, 3565, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.12231372750323752, "compression_ratio": 1.5635359116022098, "no_speech_prob": 5.771651103714248e-06}, {"id": 1656, "seek": 476812, "start": 4787.68, "end": 4793.0, "text": " Or if you want to marginalize, you do minus 1 over beta log", "tokens": [50364, 583, 437, 286, 478, 516, 281, 751, 466, 510, 307, 15866, 13, 50582, 50582, 407, 519, 295, 264, 3100, 382, 257, 48994, 7006, 710, 13, 50708, 50708, 400, 1604, 11, 281, 14722, 283, 295, 2031, 11, 288, 11, 291, 393, 360, 732, 721, 13, 51000, 51000, 509, 393, 360, 923, 670, 710, 295, 308, 295, 2031, 11, 288, 11, 710, 13, 51214, 51214, 400, 1604, 11, 710, 307, 264, 3100, 13, 51342, 51342, 1610, 498, 291, 528, 281, 16885, 1125, 11, 291, 360, 3175, 502, 670, 9861, 3565, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.12231372750323752, "compression_ratio": 1.5635359116022098, "no_speech_prob": 5.771651103714248e-06}, {"id": 1657, "seek": 479300, "start": 4793.0, "end": 4799.24, "text": " sum over all z's of e to the minus beta e of x, y, z.", "tokens": [50364, 2408, 670, 439, 710, 311, 295, 308, 281, 264, 3175, 9861, 308, 295, 2031, 11, 288, 11, 710, 13, 50676, 50676, 400, 300, 311, 16885, 3319, 13, 50800, 50800, 467, 311, 257, 27706, 2408, 498, 710, 307, 257, 27706, 7006, 11, 50902, 50902, 597, 307, 264, 1389, 510, 11, 570, 309, 311, 257, 27706, 3100, 13, 51112, 51112, 407, 341, 307, 283, 9861, 295, 2031, 11, 288, 13, 51264, 51264, 400, 291, 393, 519, 295, 341, 382, 283, 13202, 11, 558, 30, 51380, 51380, 639, 307, 264, 4948, 337, 9861, 1709, 281, 13202, 51470, 51470, 295, 264, 472, 412, 264, 2767, 13, 51600, 51600, 8419, 11, 307, 264, 517, 647, 2445, 512, 2199, 4470, 2445, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.17858011582318475, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.0580248474288965e-06}, {"id": 1658, "seek": 479300, "start": 4799.24, "end": 4801.72, "text": " And that's marginalizing.", "tokens": [50364, 2408, 670, 439, 710, 311, 295, 308, 281, 264, 3175, 9861, 308, 295, 2031, 11, 288, 11, 710, 13, 50676, 50676, 400, 300, 311, 16885, 3319, 13, 50800, 50800, 467, 311, 257, 27706, 2408, 498, 710, 307, 257, 27706, 7006, 11, 50902, 50902, 597, 307, 264, 1389, 510, 11, 570, 309, 311, 257, 27706, 3100, 13, 51112, 51112, 407, 341, 307, 283, 9861, 295, 2031, 11, 288, 13, 51264, 51264, 400, 291, 393, 519, 295, 341, 382, 283, 13202, 11, 558, 30, 51380, 51380, 639, 307, 264, 4948, 337, 9861, 1709, 281, 13202, 51470, 51470, 295, 264, 472, 412, 264, 2767, 13, 51600, 51600, 8419, 11, 307, 264, 517, 647, 2445, 512, 2199, 4470, 2445, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.17858011582318475, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.0580248474288965e-06}, {"id": 1659, "seek": 479300, "start": 4801.72, "end": 4803.76, "text": " It's a discrete sum if z is a discrete variable,", "tokens": [50364, 2408, 670, 439, 710, 311, 295, 308, 281, 264, 3175, 9861, 308, 295, 2031, 11, 288, 11, 710, 13, 50676, 50676, 400, 300, 311, 16885, 3319, 13, 50800, 50800, 467, 311, 257, 27706, 2408, 498, 710, 307, 257, 27706, 7006, 11, 50902, 50902, 597, 307, 264, 1389, 510, 11, 570, 309, 311, 257, 27706, 3100, 13, 51112, 51112, 407, 341, 307, 283, 9861, 295, 2031, 11, 288, 13, 51264, 51264, 400, 291, 393, 519, 295, 341, 382, 283, 13202, 11, 558, 30, 51380, 51380, 639, 307, 264, 4948, 337, 9861, 1709, 281, 13202, 51470, 51470, 295, 264, 472, 412, 264, 2767, 13, 51600, 51600, 8419, 11, 307, 264, 517, 647, 2445, 512, 2199, 4470, 2445, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.17858011582318475, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.0580248474288965e-06}, {"id": 1660, "seek": 479300, "start": 4803.76, "end": 4807.96, "text": " which is the case here, because it's a discrete path.", "tokens": [50364, 2408, 670, 439, 710, 311, 295, 308, 281, 264, 3175, 9861, 308, 295, 2031, 11, 288, 11, 710, 13, 50676, 50676, 400, 300, 311, 16885, 3319, 13, 50800, 50800, 467, 311, 257, 27706, 2408, 498, 710, 307, 257, 27706, 7006, 11, 50902, 50902, 597, 307, 264, 1389, 510, 11, 570, 309, 311, 257, 27706, 3100, 13, 51112, 51112, 407, 341, 307, 283, 9861, 295, 2031, 11, 288, 13, 51264, 51264, 400, 291, 393, 519, 295, 341, 382, 283, 13202, 11, 558, 30, 51380, 51380, 639, 307, 264, 4948, 337, 9861, 1709, 281, 13202, 51470, 51470, 295, 264, 472, 412, 264, 2767, 13, 51600, 51600, 8419, 11, 307, 264, 517, 647, 2445, 512, 2199, 4470, 2445, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.17858011582318475, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.0580248474288965e-06}, {"id": 1661, "seek": 479300, "start": 4807.96, "end": 4811.0, "text": " So this is f beta of x, y.", "tokens": [50364, 2408, 670, 439, 710, 311, 295, 308, 281, 264, 3175, 9861, 308, 295, 2031, 11, 288, 11, 710, 13, 50676, 50676, 400, 300, 311, 16885, 3319, 13, 50800, 50800, 467, 311, 257, 27706, 2408, 498, 710, 307, 257, 27706, 7006, 11, 50902, 50902, 597, 307, 264, 1389, 510, 11, 570, 309, 311, 257, 27706, 3100, 13, 51112, 51112, 407, 341, 307, 283, 9861, 295, 2031, 11, 288, 13, 51264, 51264, 400, 291, 393, 519, 295, 341, 382, 283, 13202, 11, 558, 30, 51380, 51380, 639, 307, 264, 4948, 337, 9861, 1709, 281, 13202, 51470, 51470, 295, 264, 472, 412, 264, 2767, 13, 51600, 51600, 8419, 11, 307, 264, 517, 647, 2445, 512, 2199, 4470, 2445, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.17858011582318475, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.0580248474288965e-06}, {"id": 1662, "seek": 479300, "start": 4811.0, "end": 4813.32, "text": " And you can think of this as f infinity, right?", "tokens": [50364, 2408, 670, 439, 710, 311, 295, 308, 281, 264, 3175, 9861, 308, 295, 2031, 11, 288, 11, 710, 13, 50676, 50676, 400, 300, 311, 16885, 3319, 13, 50800, 50800, 467, 311, 257, 27706, 2408, 498, 710, 307, 257, 27706, 7006, 11, 50902, 50902, 597, 307, 264, 1389, 510, 11, 570, 309, 311, 257, 27706, 3100, 13, 51112, 51112, 407, 341, 307, 283, 9861, 295, 2031, 11, 288, 13, 51264, 51264, 400, 291, 393, 519, 295, 341, 382, 283, 13202, 11, 558, 30, 51380, 51380, 639, 307, 264, 4948, 337, 9861, 1709, 281, 13202, 51470, 51470, 295, 264, 472, 412, 264, 2767, 13, 51600, 51600, 8419, 11, 307, 264, 517, 647, 2445, 512, 2199, 4470, 2445, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.17858011582318475, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.0580248474288965e-06}, {"id": 1663, "seek": 479300, "start": 4813.32, "end": 4815.12, "text": " This is the limit for beta goes to infinity", "tokens": [50364, 2408, 670, 439, 710, 311, 295, 308, 281, 264, 3175, 9861, 308, 295, 2031, 11, 288, 11, 710, 13, 50676, 50676, 400, 300, 311, 16885, 3319, 13, 50800, 50800, 467, 311, 257, 27706, 2408, 498, 710, 307, 257, 27706, 7006, 11, 50902, 50902, 597, 307, 264, 1389, 510, 11, 570, 309, 311, 257, 27706, 3100, 13, 51112, 51112, 407, 341, 307, 283, 9861, 295, 2031, 11, 288, 13, 51264, 51264, 400, 291, 393, 519, 295, 341, 382, 283, 13202, 11, 558, 30, 51380, 51380, 639, 307, 264, 4948, 337, 9861, 1709, 281, 13202, 51470, 51470, 295, 264, 472, 412, 264, 2767, 13, 51600, 51600, 8419, 11, 307, 264, 517, 647, 2445, 512, 2199, 4470, 2445, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.17858011582318475, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.0580248474288965e-06}, {"id": 1664, "seek": 479300, "start": 4815.12, "end": 4817.72, "text": " of the one at the bottom.", "tokens": [50364, 2408, 670, 439, 710, 311, 295, 308, 281, 264, 3175, 9861, 308, 295, 2031, 11, 288, 11, 710, 13, 50676, 50676, 400, 300, 311, 16885, 3319, 13, 50800, 50800, 467, 311, 257, 27706, 2408, 498, 710, 307, 257, 27706, 7006, 11, 50902, 50902, 597, 307, 264, 1389, 510, 11, 570, 309, 311, 257, 27706, 3100, 13, 51112, 51112, 407, 341, 307, 283, 9861, 295, 2031, 11, 288, 13, 51264, 51264, 400, 291, 393, 519, 295, 341, 382, 283, 13202, 11, 558, 30, 51380, 51380, 639, 307, 264, 4948, 337, 9861, 1709, 281, 13202, 51470, 51470, 295, 264, 472, 412, 264, 2767, 13, 51600, 51600, 8419, 11, 307, 264, 517, 647, 2445, 512, 2199, 4470, 2445, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.17858011582318475, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.0580248474288965e-06}, {"id": 1665, "seek": 479300, "start": 4817.72, "end": 4822.04, "text": " Professor, is the unip function some simple loss function", "tokens": [50364, 2408, 670, 439, 710, 311, 295, 308, 281, 264, 3175, 9861, 308, 295, 2031, 11, 288, 11, 710, 13, 50676, 50676, 400, 300, 311, 16885, 3319, 13, 50800, 50800, 467, 311, 257, 27706, 2408, 498, 710, 307, 257, 27706, 7006, 11, 50902, 50902, 597, 307, 264, 1389, 510, 11, 570, 309, 311, 257, 27706, 3100, 13, 51112, 51112, 407, 341, 307, 283, 9861, 295, 2031, 11, 288, 13, 51264, 51264, 400, 291, 393, 519, 295, 341, 382, 283, 13202, 11, 558, 30, 51380, 51380, 639, 307, 264, 4948, 337, 9861, 1709, 281, 13202, 51470, 51470, 295, 264, 472, 412, 264, 2767, 13, 51600, 51600, 8419, 11, 307, 264, 517, 647, 2445, 512, 2199, 4470, 2445, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.17858011582318475, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.0580248474288965e-06}, {"id": 1666, "seek": 482204, "start": 4822.04, "end": 4826.0, "text": " or neural network to be trained in the model?", "tokens": [50364, 420, 18161, 3209, 281, 312, 8895, 294, 264, 2316, 30, 50562, 50562, 286, 994, 380, 1223, 264, 1168, 13, 50634, 50634, 286, 478, 2597, 13, 50660, 50660, 1664, 291, 7149, 30, 50690, 50690, 1119, 264, 2281, 2445, 510, 512, 2199, 2445, 11, 50912, 50912, 411, 4470, 2445, 11, 420, 512, 18161, 9590, 51178, 51178, 281, 312, 8895, 294, 264, 2316, 30, 51256, 51256, 467, 1177, 380, 1871, 13, 51312, 51312, 639, 307, 264, 2281, 300, 291, 764, 281, 3481, 51494, 51494, 264, 6175, 295, 364, 1867, 288, 13, 51638, 51638, 440, 14816, 307, 2031, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.20981478450274227, "compression_ratio": 1.7244897959183674, "no_speech_prob": 1.9525217794580385e-05}, {"id": 1667, "seek": 482204, "start": 4826.0, "end": 4827.44, "text": " I didn't understand the question.", "tokens": [50364, 420, 18161, 3209, 281, 312, 8895, 294, 264, 2316, 30, 50562, 50562, 286, 994, 380, 1223, 264, 1168, 13, 50634, 50634, 286, 478, 2597, 13, 50660, 50660, 1664, 291, 7149, 30, 50690, 50690, 1119, 264, 2281, 2445, 510, 512, 2199, 2445, 11, 50912, 50912, 411, 4470, 2445, 11, 420, 512, 18161, 9590, 51178, 51178, 281, 312, 8895, 294, 264, 2316, 30, 51256, 51256, 467, 1177, 380, 1871, 13, 51312, 51312, 639, 307, 264, 2281, 300, 291, 764, 281, 3481, 51494, 51494, 264, 6175, 295, 364, 1867, 288, 13, 51638, 51638, 440, 14816, 307, 2031, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.20981478450274227, "compression_ratio": 1.7244897959183674, "no_speech_prob": 1.9525217794580385e-05}, {"id": 1668, "seek": 482204, "start": 4827.44, "end": 4827.96, "text": " I'm sorry.", "tokens": [50364, 420, 18161, 3209, 281, 312, 8895, 294, 264, 2316, 30, 50562, 50562, 286, 994, 380, 1223, 264, 1168, 13, 50634, 50634, 286, 478, 2597, 13, 50660, 50660, 1664, 291, 7149, 30, 50690, 50690, 1119, 264, 2281, 2445, 510, 512, 2199, 2445, 11, 50912, 50912, 411, 4470, 2445, 11, 420, 512, 18161, 9590, 51178, 51178, 281, 312, 8895, 294, 264, 2316, 30, 51256, 51256, 467, 1177, 380, 1871, 13, 51312, 51312, 639, 307, 264, 2281, 300, 291, 764, 281, 3481, 51494, 51494, 264, 6175, 295, 364, 1867, 288, 13, 51638, 51638, 440, 14816, 307, 2031, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.20981478450274227, "compression_ratio": 1.7244897959183674, "no_speech_prob": 1.9525217794580385e-05}, {"id": 1669, "seek": 482204, "start": 4827.96, "end": 4828.56, "text": " Can you repeat?", "tokens": [50364, 420, 18161, 3209, 281, 312, 8895, 294, 264, 2316, 30, 50562, 50562, 286, 994, 380, 1223, 264, 1168, 13, 50634, 50634, 286, 478, 2597, 13, 50660, 50660, 1664, 291, 7149, 30, 50690, 50690, 1119, 264, 2281, 2445, 510, 512, 2199, 2445, 11, 50912, 50912, 411, 4470, 2445, 11, 420, 512, 18161, 9590, 51178, 51178, 281, 312, 8895, 294, 264, 2316, 30, 51256, 51256, 467, 1177, 380, 1871, 13, 51312, 51312, 639, 307, 264, 2281, 300, 291, 764, 281, 3481, 51494, 51494, 264, 6175, 295, 364, 1867, 288, 13, 51638, 51638, 440, 14816, 307, 2031, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.20981478450274227, "compression_ratio": 1.7244897959183674, "no_speech_prob": 1.9525217794580385e-05}, {"id": 1670, "seek": 482204, "start": 4828.56, "end": 4833.0, "text": " Is the energy function here some simple function,", "tokens": [50364, 420, 18161, 3209, 281, 312, 8895, 294, 264, 2316, 30, 50562, 50562, 286, 994, 380, 1223, 264, 1168, 13, 50634, 50634, 286, 478, 2597, 13, 50660, 50660, 1664, 291, 7149, 30, 50690, 50690, 1119, 264, 2281, 2445, 510, 512, 2199, 2445, 11, 50912, 50912, 411, 4470, 2445, 11, 420, 512, 18161, 9590, 51178, 51178, 281, 312, 8895, 294, 264, 2316, 30, 51256, 51256, 467, 1177, 380, 1871, 13, 51312, 51312, 639, 307, 264, 2281, 300, 291, 764, 281, 3481, 51494, 51494, 264, 6175, 295, 364, 1867, 288, 13, 51638, 51638, 440, 14816, 307, 2031, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.20981478450274227, "compression_ratio": 1.7244897959183674, "no_speech_prob": 1.9525217794580385e-05}, {"id": 1671, "seek": 482204, "start": 4833.0, "end": 4838.32, "text": " like loss function, or some neural networks", "tokens": [50364, 420, 18161, 3209, 281, 312, 8895, 294, 264, 2316, 30, 50562, 50562, 286, 994, 380, 1223, 264, 1168, 13, 50634, 50634, 286, 478, 2597, 13, 50660, 50660, 1664, 291, 7149, 30, 50690, 50690, 1119, 264, 2281, 2445, 510, 512, 2199, 2445, 11, 50912, 50912, 411, 4470, 2445, 11, 420, 512, 18161, 9590, 51178, 51178, 281, 312, 8895, 294, 264, 2316, 30, 51256, 51256, 467, 1177, 380, 1871, 13, 51312, 51312, 639, 307, 264, 2281, 300, 291, 764, 281, 3481, 51494, 51494, 264, 6175, 295, 364, 1867, 288, 13, 51638, 51638, 440, 14816, 307, 2031, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.20981478450274227, "compression_ratio": 1.7244897959183674, "no_speech_prob": 1.9525217794580385e-05}, {"id": 1672, "seek": 482204, "start": 4838.32, "end": 4839.88, "text": " to be trained in the model?", "tokens": [50364, 420, 18161, 3209, 281, 312, 8895, 294, 264, 2316, 30, 50562, 50562, 286, 994, 380, 1223, 264, 1168, 13, 50634, 50634, 286, 478, 2597, 13, 50660, 50660, 1664, 291, 7149, 30, 50690, 50690, 1119, 264, 2281, 2445, 510, 512, 2199, 2445, 11, 50912, 50912, 411, 4470, 2445, 11, 420, 512, 18161, 9590, 51178, 51178, 281, 312, 8895, 294, 264, 2316, 30, 51256, 51256, 467, 1177, 380, 1871, 13, 51312, 51312, 639, 307, 264, 2281, 300, 291, 764, 281, 3481, 51494, 51494, 264, 6175, 295, 364, 1867, 288, 13, 51638, 51638, 440, 14816, 307, 2031, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.20981478450274227, "compression_ratio": 1.7244897959183674, "no_speech_prob": 1.9525217794580385e-05}, {"id": 1673, "seek": 482204, "start": 4839.88, "end": 4841.0, "text": " It doesn't matter.", "tokens": [50364, 420, 18161, 3209, 281, 312, 8895, 294, 264, 2316, 30, 50562, 50562, 286, 994, 380, 1223, 264, 1168, 13, 50634, 50634, 286, 478, 2597, 13, 50660, 50660, 1664, 291, 7149, 30, 50690, 50690, 1119, 264, 2281, 2445, 510, 512, 2199, 2445, 11, 50912, 50912, 411, 4470, 2445, 11, 420, 512, 18161, 9590, 51178, 51178, 281, 312, 8895, 294, 264, 2316, 30, 51256, 51256, 467, 1177, 380, 1871, 13, 51312, 51312, 639, 307, 264, 2281, 300, 291, 764, 281, 3481, 51494, 51494, 264, 6175, 295, 364, 1867, 288, 13, 51638, 51638, 440, 14816, 307, 2031, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.20981478450274227, "compression_ratio": 1.7244897959183674, "no_speech_prob": 1.9525217794580385e-05}, {"id": 1674, "seek": 482204, "start": 4841.0, "end": 4844.64, "text": " This is the energy that you use to measure", "tokens": [50364, 420, 18161, 3209, 281, 312, 8895, 294, 264, 2316, 30, 50562, 50562, 286, 994, 380, 1223, 264, 1168, 13, 50634, 50634, 286, 478, 2597, 13, 50660, 50660, 1664, 291, 7149, 30, 50690, 50690, 1119, 264, 2281, 2445, 510, 512, 2199, 2445, 11, 50912, 50912, 411, 4470, 2445, 11, 420, 512, 18161, 9590, 51178, 51178, 281, 312, 8895, 294, 264, 2316, 30, 51256, 51256, 467, 1177, 380, 1871, 13, 51312, 51312, 639, 307, 264, 2281, 300, 291, 764, 281, 3481, 51494, 51494, 264, 6175, 295, 364, 1867, 288, 13, 51638, 51638, 440, 14816, 307, 2031, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.20981478450274227, "compression_ratio": 1.7244897959183674, "no_speech_prob": 1.9525217794580385e-05}, {"id": 1675, "seek": 482204, "start": 4844.64, "end": 4847.5199999999995, "text": " the score of an answer y.", "tokens": [50364, 420, 18161, 3209, 281, 312, 8895, 294, 264, 2316, 30, 50562, 50562, 286, 994, 380, 1223, 264, 1168, 13, 50634, 50634, 286, 478, 2597, 13, 50660, 50660, 1664, 291, 7149, 30, 50690, 50690, 1119, 264, 2281, 2445, 510, 512, 2199, 2445, 11, 50912, 50912, 411, 4470, 2445, 11, 420, 512, 18161, 9590, 51178, 51178, 281, 312, 8895, 294, 264, 2316, 30, 51256, 51256, 467, 1177, 380, 1871, 13, 51312, 51312, 639, 307, 264, 2281, 300, 291, 764, 281, 3481, 51494, 51494, 264, 6175, 295, 364, 1867, 288, 13, 51638, 51638, 440, 14816, 307, 2031, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.20981478450274227, "compression_ratio": 1.7244897959183674, "no_speech_prob": 1.9525217794580385e-05}, {"id": 1676, "seek": 482204, "start": 4847.5199999999995, "end": 4850.0, "text": " The observation is x.", "tokens": [50364, 420, 18161, 3209, 281, 312, 8895, 294, 264, 2316, 30, 50562, 50562, 286, 994, 380, 1223, 264, 1168, 13, 50634, 50634, 286, 478, 2597, 13, 50660, 50660, 1664, 291, 7149, 30, 50690, 50690, 1119, 264, 2281, 2445, 510, 512, 2199, 2445, 11, 50912, 50912, 411, 4470, 2445, 11, 420, 512, 18161, 9590, 51178, 51178, 281, 312, 8895, 294, 264, 2316, 30, 51256, 51256, 467, 1177, 380, 1871, 13, 51312, 51312, 639, 307, 264, 2281, 300, 291, 764, 281, 3481, 51494, 51494, 264, 6175, 295, 364, 1867, 288, 13, 51638, 51638, 440, 14816, 307, 2031, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.20981478450274227, "compression_ratio": 1.7244897959183674, "no_speech_prob": 1.9525217794580385e-05}, {"id": 1677, "seek": 485000, "start": 4850.0, "end": 4852.88, "text": " The answer you are supposed to predict, in this case,", "tokens": [50364, 440, 1867, 291, 366, 3442, 281, 6069, 11, 294, 341, 1389, 11, 50508, 50508, 257, 8310, 295, 16944, 11, 307, 288, 13, 50754, 50754, 400, 370, 1184, 295, 729, 721, 510, 307, 50868, 50868, 25339, 770, 365, 257, 1729, 288, 13, 50990, 50990, 407, 341, 727, 312, 1184, 295, 729, 10346, 82, 307, 25339, 770, 538, 257, 5986, 13, 51518, 51518], "temperature": 0.0, "avg_logprob": -0.17641299111502512, "compression_ratio": 1.5071428571428571, "no_speech_prob": 7.527587968070293e-06}, {"id": 1678, "seek": 485000, "start": 4852.88, "end": 4857.8, "text": " a sequence of symbols, is y.", "tokens": [50364, 440, 1867, 291, 366, 3442, 281, 6069, 11, 294, 341, 1389, 11, 50508, 50508, 257, 8310, 295, 16944, 11, 307, 288, 13, 50754, 50754, 400, 370, 1184, 295, 729, 721, 510, 307, 50868, 50868, 25339, 770, 365, 257, 1729, 288, 13, 50990, 50990, 407, 341, 727, 312, 1184, 295, 729, 10346, 82, 307, 25339, 770, 538, 257, 5986, 13, 51518, 51518], "temperature": 0.0, "avg_logprob": -0.17641299111502512, "compression_ratio": 1.5071428571428571, "no_speech_prob": 7.527587968070293e-06}, {"id": 1679, "seek": 485000, "start": 4857.8, "end": 4860.08, "text": " And so each of those things here is", "tokens": [50364, 440, 1867, 291, 366, 3442, 281, 6069, 11, 294, 341, 1389, 11, 50508, 50508, 257, 8310, 295, 16944, 11, 307, 288, 13, 50754, 50754, 400, 370, 1184, 295, 729, 721, 510, 307, 50868, 50868, 25339, 770, 365, 257, 1729, 288, 13, 50990, 50990, 407, 341, 727, 312, 1184, 295, 729, 10346, 82, 307, 25339, 770, 538, 257, 5986, 13, 51518, 51518], "temperature": 0.0, "avg_logprob": -0.17641299111502512, "compression_ratio": 1.5071428571428571, "no_speech_prob": 7.527587968070293e-06}, {"id": 1680, "seek": 485000, "start": 4860.08, "end": 4862.52, "text": " annotated with a particular y.", "tokens": [50364, 440, 1867, 291, 366, 3442, 281, 6069, 11, 294, 341, 1389, 11, 50508, 50508, 257, 8310, 295, 16944, 11, 307, 288, 13, 50754, 50754, 400, 370, 1184, 295, 729, 721, 510, 307, 50868, 50868, 25339, 770, 365, 257, 1729, 288, 13, 50990, 50990, 407, 341, 727, 312, 1184, 295, 729, 10346, 82, 307, 25339, 770, 538, 257, 5986, 13, 51518, 51518], "temperature": 0.0, "avg_logprob": -0.17641299111502512, "compression_ratio": 1.5071428571428571, "no_speech_prob": 7.527587968070293e-06}, {"id": 1681, "seek": 485000, "start": 4862.52, "end": 4873.08, "text": " So this could be each of those arcs is annotated by a symbol.", "tokens": [50364, 440, 1867, 291, 366, 3442, 281, 6069, 11, 294, 341, 1389, 11, 50508, 50508, 257, 8310, 295, 16944, 11, 307, 288, 13, 50754, 50754, 400, 370, 1184, 295, 729, 721, 510, 307, 50868, 50868, 25339, 770, 365, 257, 1729, 288, 13, 50990, 50990, 407, 341, 727, 312, 1184, 295, 729, 10346, 82, 307, 25339, 770, 538, 257, 5986, 13, 51518, 51518], "temperature": 0.0, "avg_logprob": -0.17641299111502512, "compression_ratio": 1.5071428571428571, "no_speech_prob": 7.527587968070293e-06}, {"id": 1682, "seek": 487308, "start": 4873.08, "end": 4880.6, "text": " So let's say a, and this is b, and this is b, and c,", "tokens": [50364, 407, 718, 311, 584, 257, 11, 293, 341, 307, 272, 11, 293, 341, 307, 272, 11, 293, 269, 11, 50740, 50740, 293, 341, 307, 11, 286, 500, 380, 458, 11, 2031, 11, 293, 341, 307, 290, 420, 746, 13, 51060, 51060, 407, 510, 11, 264, 1944, 14174, 337, 288, 13, 51204, 51204, 407, 288, 576, 312, 257, 6798, 295, 16944, 13, 51278, 51278, 400, 309, 393, 312, 2139, 410, 11, 420, 309, 393, 312, 272, 66, 70, 11, 420, 309, 393, 312, 269, 70, 13, 51794], "temperature": 0.0, "avg_logprob": -0.13193258372220126, "compression_ratio": 1.66, "no_speech_prob": 2.1907133032073034e-06}, {"id": 1683, "seek": 487308, "start": 4880.6, "end": 4887.0, "text": " and this is, I don't know, x, and this is g or something.", "tokens": [50364, 407, 718, 311, 584, 257, 11, 293, 341, 307, 272, 11, 293, 341, 307, 272, 11, 293, 269, 11, 50740, 50740, 293, 341, 307, 11, 286, 500, 380, 458, 11, 2031, 11, 293, 341, 307, 290, 420, 746, 13, 51060, 51060, 407, 510, 11, 264, 1944, 14174, 337, 288, 13, 51204, 51204, 407, 288, 576, 312, 257, 6798, 295, 16944, 13, 51278, 51278, 400, 309, 393, 312, 2139, 410, 11, 420, 309, 393, 312, 272, 66, 70, 11, 420, 309, 393, 312, 269, 70, 13, 51794], "temperature": 0.0, "avg_logprob": -0.13193258372220126, "compression_ratio": 1.66, "no_speech_prob": 2.1907133032073034e-06}, {"id": 1684, "seek": 487308, "start": 4887.0, "end": 4889.88, "text": " So here, the possible interpretation for y.", "tokens": [50364, 407, 718, 311, 584, 257, 11, 293, 341, 307, 272, 11, 293, 341, 307, 272, 11, 293, 269, 11, 50740, 50740, 293, 341, 307, 11, 286, 500, 380, 458, 11, 2031, 11, 293, 341, 307, 290, 420, 746, 13, 51060, 51060, 407, 510, 11, 264, 1944, 14174, 337, 288, 13, 51204, 51204, 407, 288, 576, 312, 257, 6798, 295, 16944, 13, 51278, 51278, 400, 309, 393, 312, 2139, 410, 11, 420, 309, 393, 312, 272, 66, 70, 11, 420, 309, 393, 312, 269, 70, 13, 51794], "temperature": 0.0, "avg_logprob": -0.13193258372220126, "compression_ratio": 1.66, "no_speech_prob": 2.1907133032073034e-06}, {"id": 1685, "seek": 487308, "start": 4889.88, "end": 4891.36, "text": " So y would be a string of symbols.", "tokens": [50364, 407, 718, 311, 584, 257, 11, 293, 341, 307, 272, 11, 293, 341, 307, 272, 11, 293, 269, 11, 50740, 50740, 293, 341, 307, 11, 286, 500, 380, 458, 11, 2031, 11, 293, 341, 307, 290, 420, 746, 13, 51060, 51060, 407, 510, 11, 264, 1944, 14174, 337, 288, 13, 51204, 51204, 407, 288, 576, 312, 257, 6798, 295, 16944, 13, 51278, 51278, 400, 309, 393, 312, 2139, 410, 11, 420, 309, 393, 312, 272, 66, 70, 11, 420, 309, 393, 312, 269, 70, 13, 51794], "temperature": 0.0, "avg_logprob": -0.13193258372220126, "compression_ratio": 1.66, "no_speech_prob": 2.1907133032073034e-06}, {"id": 1686, "seek": 489136, "start": 4891.36, "end": 4904.12, "text": " And it can be either a, b, or it can be b, c, g, or it can be c, g,", "tokens": [50364, 400, 309, 393, 312, 2139, 257, 11, 272, 11, 420, 309, 393, 312, 272, 11, 269, 11, 290, 11, 420, 309, 393, 312, 269, 11, 290, 11, 51002, 51002, 498, 341, 307, 269, 13, 51036, 51168, 663, 311, 364, 2031, 13, 51220, 51220, 663, 390, 364, 2031, 11, 558, 30, 51276, 51276, 462, 11, 269, 11, 2031, 13, 51340, 51340, 286, 478, 2597, 13, 51374, 51374, 286, 478, 2597, 13, 51398, 51398, 509, 434, 558, 13, 51424, 51424, 639, 307, 257, 1386, 13, 51478, 51478, 467, 311, 2031, 13, 51522, 51522, 2561, 13, 51550, 51550, 509, 434, 558, 13, 51616, 51616, 4919, 466, 300, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.3004776490937679, "compression_ratio": 1.669172932330827, "no_speech_prob": 6.852570095361443e-06}, {"id": 1687, "seek": 489136, "start": 4904.12, "end": 4904.799999999999, "text": " if this is c.", "tokens": [50364, 400, 309, 393, 312, 2139, 257, 11, 272, 11, 420, 309, 393, 312, 272, 11, 269, 11, 290, 11, 420, 309, 393, 312, 269, 11, 290, 11, 51002, 51002, 498, 341, 307, 269, 13, 51036, 51168, 663, 311, 364, 2031, 13, 51220, 51220, 663, 390, 364, 2031, 11, 558, 30, 51276, 51276, 462, 11, 269, 11, 2031, 13, 51340, 51340, 286, 478, 2597, 13, 51374, 51374, 286, 478, 2597, 13, 51398, 51398, 509, 434, 558, 13, 51424, 51424, 639, 307, 257, 1386, 13, 51478, 51478, 467, 311, 2031, 13, 51522, 51522, 2561, 13, 51550, 51550, 509, 434, 558, 13, 51616, 51616, 4919, 466, 300, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.3004776490937679, "compression_ratio": 1.669172932330827, "no_speech_prob": 6.852570095361443e-06}, {"id": 1688, "seek": 489136, "start": 4907.44, "end": 4908.48, "text": " That's an x.", "tokens": [50364, 400, 309, 393, 312, 2139, 257, 11, 272, 11, 420, 309, 393, 312, 272, 11, 269, 11, 290, 11, 420, 309, 393, 312, 269, 11, 290, 11, 51002, 51002, 498, 341, 307, 269, 13, 51036, 51168, 663, 311, 364, 2031, 13, 51220, 51220, 663, 390, 364, 2031, 11, 558, 30, 51276, 51276, 462, 11, 269, 11, 2031, 13, 51340, 51340, 286, 478, 2597, 13, 51374, 51374, 286, 478, 2597, 13, 51398, 51398, 509, 434, 558, 13, 51424, 51424, 639, 307, 257, 1386, 13, 51478, 51478, 467, 311, 2031, 13, 51522, 51522, 2561, 13, 51550, 51550, 509, 434, 558, 13, 51616, 51616, 4919, 466, 300, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.3004776490937679, "compression_ratio": 1.669172932330827, "no_speech_prob": 6.852570095361443e-06}, {"id": 1689, "seek": 489136, "start": 4908.48, "end": 4909.599999999999, "text": " That was an x, right?", "tokens": [50364, 400, 309, 393, 312, 2139, 257, 11, 272, 11, 420, 309, 393, 312, 272, 11, 269, 11, 290, 11, 420, 309, 393, 312, 269, 11, 290, 11, 51002, 51002, 498, 341, 307, 269, 13, 51036, 51168, 663, 311, 364, 2031, 13, 51220, 51220, 663, 390, 364, 2031, 11, 558, 30, 51276, 51276, 462, 11, 269, 11, 2031, 13, 51340, 51340, 286, 478, 2597, 13, 51374, 51374, 286, 478, 2597, 13, 51398, 51398, 509, 434, 558, 13, 51424, 51424, 639, 307, 257, 1386, 13, 51478, 51478, 467, 311, 2031, 13, 51522, 51522, 2561, 13, 51550, 51550, 509, 434, 558, 13, 51616, 51616, 4919, 466, 300, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.3004776490937679, "compression_ratio": 1.669172932330827, "no_speech_prob": 6.852570095361443e-06}, {"id": 1690, "seek": 489136, "start": 4909.599999999999, "end": 4910.88, "text": " E, c, x.", "tokens": [50364, 400, 309, 393, 312, 2139, 257, 11, 272, 11, 420, 309, 393, 312, 272, 11, 269, 11, 290, 11, 420, 309, 393, 312, 269, 11, 290, 11, 51002, 51002, 498, 341, 307, 269, 13, 51036, 51168, 663, 311, 364, 2031, 13, 51220, 51220, 663, 390, 364, 2031, 11, 558, 30, 51276, 51276, 462, 11, 269, 11, 2031, 13, 51340, 51340, 286, 478, 2597, 13, 51374, 51374, 286, 478, 2597, 13, 51398, 51398, 509, 434, 558, 13, 51424, 51424, 639, 307, 257, 1386, 13, 51478, 51478, 467, 311, 2031, 13, 51522, 51522, 2561, 13, 51550, 51550, 509, 434, 558, 13, 51616, 51616, 4919, 466, 300, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.3004776490937679, "compression_ratio": 1.669172932330827, "no_speech_prob": 6.852570095361443e-06}, {"id": 1691, "seek": 489136, "start": 4910.88, "end": 4911.5599999999995, "text": " I'm sorry.", "tokens": [50364, 400, 309, 393, 312, 2139, 257, 11, 272, 11, 420, 309, 393, 312, 272, 11, 269, 11, 290, 11, 420, 309, 393, 312, 269, 11, 290, 11, 51002, 51002, 498, 341, 307, 269, 13, 51036, 51168, 663, 311, 364, 2031, 13, 51220, 51220, 663, 390, 364, 2031, 11, 558, 30, 51276, 51276, 462, 11, 269, 11, 2031, 13, 51340, 51340, 286, 478, 2597, 13, 51374, 51374, 286, 478, 2597, 13, 51398, 51398, 509, 434, 558, 13, 51424, 51424, 639, 307, 257, 1386, 13, 51478, 51478, 467, 311, 2031, 13, 51522, 51522, 2561, 13, 51550, 51550, 509, 434, 558, 13, 51616, 51616, 4919, 466, 300, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.3004776490937679, "compression_ratio": 1.669172932330827, "no_speech_prob": 6.852570095361443e-06}, {"id": 1692, "seek": 489136, "start": 4911.5599999999995, "end": 4912.04, "text": " I'm sorry.", "tokens": [50364, 400, 309, 393, 312, 2139, 257, 11, 272, 11, 420, 309, 393, 312, 272, 11, 269, 11, 290, 11, 420, 309, 393, 312, 269, 11, 290, 11, 51002, 51002, 498, 341, 307, 269, 13, 51036, 51168, 663, 311, 364, 2031, 13, 51220, 51220, 663, 390, 364, 2031, 11, 558, 30, 51276, 51276, 462, 11, 269, 11, 2031, 13, 51340, 51340, 286, 478, 2597, 13, 51374, 51374, 286, 478, 2597, 13, 51398, 51398, 509, 434, 558, 13, 51424, 51424, 639, 307, 257, 1386, 13, 51478, 51478, 467, 311, 2031, 13, 51522, 51522, 2561, 13, 51550, 51550, 509, 434, 558, 13, 51616, 51616, 4919, 466, 300, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.3004776490937679, "compression_ratio": 1.669172932330827, "no_speech_prob": 6.852570095361443e-06}, {"id": 1693, "seek": 489136, "start": 4912.04, "end": 4912.5599999999995, "text": " You're right.", "tokens": [50364, 400, 309, 393, 312, 2139, 257, 11, 272, 11, 420, 309, 393, 312, 272, 11, 269, 11, 290, 11, 420, 309, 393, 312, 269, 11, 290, 11, 51002, 51002, 498, 341, 307, 269, 13, 51036, 51168, 663, 311, 364, 2031, 13, 51220, 51220, 663, 390, 364, 2031, 11, 558, 30, 51276, 51276, 462, 11, 269, 11, 2031, 13, 51340, 51340, 286, 478, 2597, 13, 51374, 51374, 286, 478, 2597, 13, 51398, 51398, 509, 434, 558, 13, 51424, 51424, 639, 307, 257, 1386, 13, 51478, 51478, 467, 311, 2031, 13, 51522, 51522, 2561, 13, 51550, 51550, 509, 434, 558, 13, 51616, 51616, 4919, 466, 300, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.3004776490937679, "compression_ratio": 1.669172932330827, "no_speech_prob": 6.852570095361443e-06}, {"id": 1694, "seek": 489136, "start": 4912.5599999999995, "end": 4913.639999999999, "text": " This is a 6.", "tokens": [50364, 400, 309, 393, 312, 2139, 257, 11, 272, 11, 420, 309, 393, 312, 272, 11, 269, 11, 290, 11, 420, 309, 393, 312, 269, 11, 290, 11, 51002, 51002, 498, 341, 307, 269, 13, 51036, 51168, 663, 311, 364, 2031, 13, 51220, 51220, 663, 390, 364, 2031, 11, 558, 30, 51276, 51276, 462, 11, 269, 11, 2031, 13, 51340, 51340, 286, 478, 2597, 13, 51374, 51374, 286, 478, 2597, 13, 51398, 51398, 509, 434, 558, 13, 51424, 51424, 639, 307, 257, 1386, 13, 51478, 51478, 467, 311, 2031, 13, 51522, 51522, 2561, 13, 51550, 51550, 509, 434, 558, 13, 51616, 51616, 4919, 466, 300, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.3004776490937679, "compression_ratio": 1.669172932330827, "no_speech_prob": 6.852570095361443e-06}, {"id": 1695, "seek": 489136, "start": 4913.639999999999, "end": 4914.5199999999995, "text": " It's x.", "tokens": [50364, 400, 309, 393, 312, 2139, 257, 11, 272, 11, 420, 309, 393, 312, 272, 11, 269, 11, 290, 11, 420, 309, 393, 312, 269, 11, 290, 11, 51002, 51002, 498, 341, 307, 269, 13, 51036, 51168, 663, 311, 364, 2031, 13, 51220, 51220, 663, 390, 364, 2031, 11, 558, 30, 51276, 51276, 462, 11, 269, 11, 2031, 13, 51340, 51340, 286, 478, 2597, 13, 51374, 51374, 286, 478, 2597, 13, 51398, 51398, 509, 434, 558, 13, 51424, 51424, 639, 307, 257, 1386, 13, 51478, 51478, 467, 311, 2031, 13, 51522, 51522, 2561, 13, 51550, 51550, 509, 434, 558, 13, 51616, 51616, 4919, 466, 300, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.3004776490937679, "compression_ratio": 1.669172932330827, "no_speech_prob": 6.852570095361443e-06}, {"id": 1696, "seek": 489136, "start": 4914.5199999999995, "end": 4915.08, "text": " Thanks.", "tokens": [50364, 400, 309, 393, 312, 2139, 257, 11, 272, 11, 420, 309, 393, 312, 272, 11, 269, 11, 290, 11, 420, 309, 393, 312, 269, 11, 290, 11, 51002, 51002, 498, 341, 307, 269, 13, 51036, 51168, 663, 311, 364, 2031, 13, 51220, 51220, 663, 390, 364, 2031, 11, 558, 30, 51276, 51276, 462, 11, 269, 11, 2031, 13, 51340, 51340, 286, 478, 2597, 13, 51374, 51374, 286, 478, 2597, 13, 51398, 51398, 509, 434, 558, 13, 51424, 51424, 639, 307, 257, 1386, 13, 51478, 51478, 467, 311, 2031, 13, 51522, 51522, 2561, 13, 51550, 51550, 509, 434, 558, 13, 51616, 51616, 4919, 466, 300, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.3004776490937679, "compression_ratio": 1.669172932330827, "no_speech_prob": 6.852570095361443e-06}, {"id": 1697, "seek": 489136, "start": 4915.08, "end": 4916.4, "text": " You're right.", "tokens": [50364, 400, 309, 393, 312, 2139, 257, 11, 272, 11, 420, 309, 393, 312, 272, 11, 269, 11, 290, 11, 420, 309, 393, 312, 269, 11, 290, 11, 51002, 51002, 498, 341, 307, 269, 13, 51036, 51168, 663, 311, 364, 2031, 13, 51220, 51220, 663, 390, 364, 2031, 11, 558, 30, 51276, 51276, 462, 11, 269, 11, 2031, 13, 51340, 51340, 286, 478, 2597, 13, 51374, 51374, 286, 478, 2597, 13, 51398, 51398, 509, 434, 558, 13, 51424, 51424, 639, 307, 257, 1386, 13, 51478, 51478, 467, 311, 2031, 13, 51522, 51522, 2561, 13, 51550, 51550, 509, 434, 558, 13, 51616, 51616, 4919, 466, 300, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.3004776490937679, "compression_ratio": 1.669172932330827, "no_speech_prob": 6.852570095361443e-06}, {"id": 1698, "seek": 489136, "start": 4916.4, "end": 4919.08, "text": " Sorry about that.", "tokens": [50364, 400, 309, 393, 312, 2139, 257, 11, 272, 11, 420, 309, 393, 312, 272, 11, 269, 11, 290, 11, 420, 309, 393, 312, 269, 11, 290, 11, 51002, 51002, 498, 341, 307, 269, 13, 51036, 51168, 663, 311, 364, 2031, 13, 51220, 51220, 663, 390, 364, 2031, 11, 558, 30, 51276, 51276, 462, 11, 269, 11, 2031, 13, 51340, 51340, 286, 478, 2597, 13, 51374, 51374, 286, 478, 2597, 13, 51398, 51398, 509, 434, 558, 13, 51424, 51424, 639, 307, 257, 1386, 13, 51478, 51478, 467, 311, 2031, 13, 51522, 51522, 2561, 13, 51550, 51550, 509, 434, 558, 13, 51616, 51616, 4919, 466, 300, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.3004776490937679, "compression_ratio": 1.669172932330827, "no_speech_prob": 6.852570095361443e-06}, {"id": 1699, "seek": 491908, "start": 4919.08, "end": 4921.88, "text": " Those are the only three possible interpretations", "tokens": [50364, 3950, 366, 264, 787, 1045, 1944, 37547, 50504, 50504, 294, 300, 4295, 300, 393, 808, 484, 295, 300, 4295, 13, 50608, 50740, 400, 710, 307, 597, 3100, 291, 434, 1940, 13, 50926, 50926, 407, 498, 710, 307, 264, 700, 3100, 11, 550, 264, 5598, 576, 312, 257, 11, 272, 13, 51108, 51108, 759, 710, 307, 264, 1150, 3100, 11, 264, 5598, 576, 312, 272, 11, 269, 11, 290, 11, 1030, 51246, 51246, 11458, 13, 51320, 51320, 2264, 11, 1309, 291, 13, 51388, 51388, 583, 341, 307, 406, 1143, 337, 3097, 13, 51456, 51456, 639, 307, 264, 2281, 2445, 1143, 337, 38253, 13, 51574, 51782], "temperature": 0.0, "avg_logprob": -0.17981763155955188, "compression_ratio": 1.6372093023255814, "no_speech_prob": 1.6955322280409746e-05}, {"id": 1700, "seek": 491908, "start": 4921.88, "end": 4923.96, "text": " in that graph that can come out of that graph.", "tokens": [50364, 3950, 366, 264, 787, 1045, 1944, 37547, 50504, 50504, 294, 300, 4295, 300, 393, 808, 484, 295, 300, 4295, 13, 50608, 50740, 400, 710, 307, 597, 3100, 291, 434, 1940, 13, 50926, 50926, 407, 498, 710, 307, 264, 700, 3100, 11, 550, 264, 5598, 576, 312, 257, 11, 272, 13, 51108, 51108, 759, 710, 307, 264, 1150, 3100, 11, 264, 5598, 576, 312, 272, 11, 269, 11, 290, 11, 1030, 51246, 51246, 11458, 13, 51320, 51320, 2264, 11, 1309, 291, 13, 51388, 51388, 583, 341, 307, 406, 1143, 337, 3097, 13, 51456, 51456, 639, 307, 264, 2281, 2445, 1143, 337, 38253, 13, 51574, 51782], "temperature": 0.0, "avg_logprob": -0.17981763155955188, "compression_ratio": 1.6372093023255814, "no_speech_prob": 1.6955322280409746e-05}, {"id": 1701, "seek": 491908, "start": 4926.6, "end": 4930.32, "text": " And z is which path you're taking.", "tokens": [50364, 3950, 366, 264, 787, 1045, 1944, 37547, 50504, 50504, 294, 300, 4295, 300, 393, 808, 484, 295, 300, 4295, 13, 50608, 50740, 400, 710, 307, 597, 3100, 291, 434, 1940, 13, 50926, 50926, 407, 498, 710, 307, 264, 700, 3100, 11, 550, 264, 5598, 576, 312, 257, 11, 272, 13, 51108, 51108, 759, 710, 307, 264, 1150, 3100, 11, 264, 5598, 576, 312, 272, 11, 269, 11, 290, 11, 1030, 51246, 51246, 11458, 13, 51320, 51320, 2264, 11, 1309, 291, 13, 51388, 51388, 583, 341, 307, 406, 1143, 337, 3097, 13, 51456, 51456, 639, 307, 264, 2281, 2445, 1143, 337, 38253, 13, 51574, 51782], "temperature": 0.0, "avg_logprob": -0.17981763155955188, "compression_ratio": 1.6372093023255814, "no_speech_prob": 1.6955322280409746e-05}, {"id": 1702, "seek": 491908, "start": 4930.32, "end": 4933.96, "text": " So if z is the first path, then the output would be a, b.", "tokens": [50364, 3950, 366, 264, 787, 1045, 1944, 37547, 50504, 50504, 294, 300, 4295, 300, 393, 808, 484, 295, 300, 4295, 13, 50608, 50740, 400, 710, 307, 597, 3100, 291, 434, 1940, 13, 50926, 50926, 407, 498, 710, 307, 264, 700, 3100, 11, 550, 264, 5598, 576, 312, 257, 11, 272, 13, 51108, 51108, 759, 710, 307, 264, 1150, 3100, 11, 264, 5598, 576, 312, 272, 11, 269, 11, 290, 11, 1030, 51246, 51246, 11458, 13, 51320, 51320, 2264, 11, 1309, 291, 13, 51388, 51388, 583, 341, 307, 406, 1143, 337, 3097, 13, 51456, 51456, 639, 307, 264, 2281, 2445, 1143, 337, 38253, 13, 51574, 51782], "temperature": 0.0, "avg_logprob": -0.17981763155955188, "compression_ratio": 1.6372093023255814, "no_speech_prob": 1.6955322280409746e-05}, {"id": 1703, "seek": 491908, "start": 4933.96, "end": 4936.72, "text": " If z is the second path, the output would be b, c, g, et", "tokens": [50364, 3950, 366, 264, 787, 1045, 1944, 37547, 50504, 50504, 294, 300, 4295, 300, 393, 808, 484, 295, 300, 4295, 13, 50608, 50740, 400, 710, 307, 597, 3100, 291, 434, 1940, 13, 50926, 50926, 407, 498, 710, 307, 264, 700, 3100, 11, 550, 264, 5598, 576, 312, 257, 11, 272, 13, 51108, 51108, 759, 710, 307, 264, 1150, 3100, 11, 264, 5598, 576, 312, 272, 11, 269, 11, 290, 11, 1030, 51246, 51246, 11458, 13, 51320, 51320, 2264, 11, 1309, 291, 13, 51388, 51388, 583, 341, 307, 406, 1143, 337, 3097, 13, 51456, 51456, 639, 307, 264, 2281, 2445, 1143, 337, 38253, 13, 51574, 51782], "temperature": 0.0, "avg_logprob": -0.17981763155955188, "compression_ratio": 1.6372093023255814, "no_speech_prob": 1.6955322280409746e-05}, {"id": 1704, "seek": 491908, "start": 4936.72, "end": 4938.2, "text": " cetera.", "tokens": [50364, 3950, 366, 264, 787, 1045, 1944, 37547, 50504, 50504, 294, 300, 4295, 300, 393, 808, 484, 295, 300, 4295, 13, 50608, 50740, 400, 710, 307, 597, 3100, 291, 434, 1940, 13, 50926, 50926, 407, 498, 710, 307, 264, 700, 3100, 11, 550, 264, 5598, 576, 312, 257, 11, 272, 13, 51108, 51108, 759, 710, 307, 264, 1150, 3100, 11, 264, 5598, 576, 312, 272, 11, 269, 11, 290, 11, 1030, 51246, 51246, 11458, 13, 51320, 51320, 2264, 11, 1309, 291, 13, 51388, 51388, 583, 341, 307, 406, 1143, 337, 3097, 13, 51456, 51456, 639, 307, 264, 2281, 2445, 1143, 337, 38253, 13, 51574, 51782], "temperature": 0.0, "avg_logprob": -0.17981763155955188, "compression_ratio": 1.6372093023255814, "no_speech_prob": 1.6955322280409746e-05}, {"id": 1705, "seek": 491908, "start": 4938.2, "end": 4939.5599999999995, "text": " OK, thank you.", "tokens": [50364, 3950, 366, 264, 787, 1045, 1944, 37547, 50504, 50504, 294, 300, 4295, 300, 393, 808, 484, 295, 300, 4295, 13, 50608, 50740, 400, 710, 307, 597, 3100, 291, 434, 1940, 13, 50926, 50926, 407, 498, 710, 307, 264, 700, 3100, 11, 550, 264, 5598, 576, 312, 257, 11, 272, 13, 51108, 51108, 759, 710, 307, 264, 1150, 3100, 11, 264, 5598, 576, 312, 272, 11, 269, 11, 290, 11, 1030, 51246, 51246, 11458, 13, 51320, 51320, 2264, 11, 1309, 291, 13, 51388, 51388, 583, 341, 307, 406, 1143, 337, 3097, 13, 51456, 51456, 639, 307, 264, 2281, 2445, 1143, 337, 38253, 13, 51574, 51782], "temperature": 0.0, "avg_logprob": -0.17981763155955188, "compression_ratio": 1.6372093023255814, "no_speech_prob": 1.6955322280409746e-05}, {"id": 1706, "seek": 491908, "start": 4939.5599999999995, "end": 4940.92, "text": " But this is not used for training.", "tokens": [50364, 3950, 366, 264, 787, 1045, 1944, 37547, 50504, 50504, 294, 300, 4295, 300, 393, 808, 484, 295, 300, 4295, 13, 50608, 50740, 400, 710, 307, 597, 3100, 291, 434, 1940, 13, 50926, 50926, 407, 498, 710, 307, 264, 700, 3100, 11, 550, 264, 5598, 576, 312, 257, 11, 272, 13, 51108, 51108, 759, 710, 307, 264, 1150, 3100, 11, 264, 5598, 576, 312, 272, 11, 269, 11, 290, 11, 1030, 51246, 51246, 11458, 13, 51320, 51320, 2264, 11, 1309, 291, 13, 51388, 51388, 583, 341, 307, 406, 1143, 337, 3097, 13, 51456, 51456, 639, 307, 264, 2281, 2445, 1143, 337, 38253, 13, 51574, 51782], "temperature": 0.0, "avg_logprob": -0.17981763155955188, "compression_ratio": 1.6372093023255814, "no_speech_prob": 1.6955322280409746e-05}, {"id": 1707, "seek": 491908, "start": 4940.92, "end": 4943.28, "text": " This is the energy function used for inference.", "tokens": [50364, 3950, 366, 264, 787, 1045, 1944, 37547, 50504, 50504, 294, 300, 4295, 300, 393, 808, 484, 295, 300, 4295, 13, 50608, 50740, 400, 710, 307, 597, 3100, 291, 434, 1940, 13, 50926, 50926, 407, 498, 710, 307, 264, 700, 3100, 11, 550, 264, 5598, 576, 312, 257, 11, 272, 13, 51108, 51108, 759, 710, 307, 264, 1150, 3100, 11, 264, 5598, 576, 312, 272, 11, 269, 11, 290, 11, 1030, 51246, 51246, 11458, 13, 51320, 51320, 2264, 11, 1309, 291, 13, 51388, 51388, 583, 341, 307, 406, 1143, 337, 3097, 13, 51456, 51456, 639, 307, 264, 2281, 2445, 1143, 337, 38253, 13, 51574, 51782], "temperature": 0.0, "avg_logprob": -0.17981763155955188, "compression_ratio": 1.6372093023255814, "no_speech_prob": 1.6955322280409746e-05}, {"id": 1708, "seek": 494328, "start": 4943.28, "end": 4948.28, "text": " OK, so the log of the sum of the exponentials of the energies", "tokens": [50364, 2264, 11, 370, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 264, 25737, 50614, 50614, 337, 439, 264, 3100, 11, 264, 2408, 670, 439, 264, 14518, 11, 50762, 50762, 2264, 11, 370, 264, 2408, 510, 307, 670, 3100, 13, 50934, 51082, 2264, 11, 300, 311, 411, 16885, 3319, 670, 710, 13, 51372, 51372, 400, 321, 1866, 300, 949, 11, 558, 30, 51466, 51466, 492, 8825, 300, 949, 13, 51634, 51634, 823, 11, 577, 360, 286, 14722, 341, 30, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.35044231868925546, "compression_ratio": 1.6196319018404908, "no_speech_prob": 1.983073161682114e-05}, {"id": 1709, "seek": 494328, "start": 4948.28, "end": 4951.24, "text": " for all the path, the sum over all the paths,", "tokens": [50364, 2264, 11, 370, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 264, 25737, 50614, 50614, 337, 439, 264, 3100, 11, 264, 2408, 670, 439, 264, 14518, 11, 50762, 50762, 2264, 11, 370, 264, 2408, 510, 307, 670, 3100, 13, 50934, 51082, 2264, 11, 300, 311, 411, 16885, 3319, 670, 710, 13, 51372, 51372, 400, 321, 1866, 300, 949, 11, 558, 30, 51466, 51466, 492, 8825, 300, 949, 13, 51634, 51634, 823, 11, 577, 360, 286, 14722, 341, 30, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.35044231868925546, "compression_ratio": 1.6196319018404908, "no_speech_prob": 1.983073161682114e-05}, {"id": 1710, "seek": 494328, "start": 4951.24, "end": 4954.679999999999, "text": " OK, so the sum here is over path.", "tokens": [50364, 2264, 11, 370, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 264, 25737, 50614, 50614, 337, 439, 264, 3100, 11, 264, 2408, 670, 439, 264, 14518, 11, 50762, 50762, 2264, 11, 370, 264, 2408, 510, 307, 670, 3100, 13, 50934, 51082, 2264, 11, 300, 311, 411, 16885, 3319, 670, 710, 13, 51372, 51372, 400, 321, 1866, 300, 949, 11, 558, 30, 51466, 51466, 492, 8825, 300, 949, 13, 51634, 51634, 823, 11, 577, 360, 286, 14722, 341, 30, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.35044231868925546, "compression_ratio": 1.6196319018404908, "no_speech_prob": 1.983073161682114e-05}, {"id": 1711, "seek": 494328, "start": 4957.639999999999, "end": 4963.44, "text": " OK, that's like marginalizing over z.", "tokens": [50364, 2264, 11, 370, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 264, 25737, 50614, 50614, 337, 439, 264, 3100, 11, 264, 2408, 670, 439, 264, 14518, 11, 50762, 50762, 2264, 11, 370, 264, 2408, 510, 307, 670, 3100, 13, 50934, 51082, 2264, 11, 300, 311, 411, 16885, 3319, 670, 710, 13, 51372, 51372, 400, 321, 1866, 300, 949, 11, 558, 30, 51466, 51466, 492, 8825, 300, 949, 13, 51634, 51634, 823, 11, 577, 360, 286, 14722, 341, 30, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.35044231868925546, "compression_ratio": 1.6196319018404908, "no_speech_prob": 1.983073161682114e-05}, {"id": 1712, "seek": 494328, "start": 4963.44, "end": 4965.32, "text": " And we saw that before, right?", "tokens": [50364, 2264, 11, 370, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 264, 25737, 50614, 50614, 337, 439, 264, 3100, 11, 264, 2408, 670, 439, 264, 14518, 11, 50762, 50762, 2264, 11, 370, 264, 2408, 510, 307, 670, 3100, 13, 50934, 51082, 2264, 11, 300, 311, 411, 16885, 3319, 670, 710, 13, 51372, 51372, 400, 321, 1866, 300, 949, 11, 558, 30, 51466, 51466, 492, 8825, 300, 949, 13, 51634, 51634, 823, 11, 577, 360, 286, 14722, 341, 30, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.35044231868925546, "compression_ratio": 1.6196319018404908, "no_speech_prob": 1.983073161682114e-05}, {"id": 1713, "seek": 494328, "start": 4965.32, "end": 4968.679999999999, "text": " We explained that before.", "tokens": [50364, 2264, 11, 370, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 264, 25737, 50614, 50614, 337, 439, 264, 3100, 11, 264, 2408, 670, 439, 264, 14518, 11, 50762, 50762, 2264, 11, 370, 264, 2408, 510, 307, 670, 3100, 13, 50934, 51082, 2264, 11, 300, 311, 411, 16885, 3319, 670, 710, 13, 51372, 51372, 400, 321, 1866, 300, 949, 11, 558, 30, 51466, 51466, 492, 8825, 300, 949, 13, 51634, 51634, 823, 11, 577, 360, 286, 14722, 341, 30, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.35044231868925546, "compression_ratio": 1.6196319018404908, "no_speech_prob": 1.983073161682114e-05}, {"id": 1714, "seek": 494328, "start": 4968.679999999999, "end": 4970.12, "text": " Now, how do I compute this?", "tokens": [50364, 2264, 11, 370, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 264, 25737, 50614, 50614, 337, 439, 264, 3100, 11, 264, 2408, 670, 439, 264, 14518, 11, 50762, 50762, 2264, 11, 370, 264, 2408, 510, 307, 670, 3100, 13, 50934, 51082, 2264, 11, 300, 311, 411, 16885, 3319, 670, 710, 13, 51372, 51372, 400, 321, 1866, 300, 949, 11, 558, 30, 51466, 51466, 492, 8825, 300, 949, 13, 51634, 51634, 823, 11, 577, 360, 286, 14722, 341, 30, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.35044231868925546, "compression_ratio": 1.6196319018404908, "no_speech_prob": 1.983073161682114e-05}, {"id": 1715, "seek": 497012, "start": 4970.12, "end": 4973.76, "text": " Now, it turns out it's very simple.", "tokens": [50364, 823, 11, 309, 4523, 484, 309, 311, 588, 2199, 13, 50546, 50546, 467, 311, 1096, 1228, 437, 311, 1219, 257, 2128, 9284, 13, 50650, 50650, 286, 478, 767, 516, 281, 2642, 257, 819, 4295, 13, 50882, 50882, 440, 4295, 307, 516, 281, 574, 544, 411, 264, 472, 286, 632, 949, 11, 51122, 51122, 597, 390, 733, 295, 411, 341, 11, 558, 30, 51200, 51558, 407, 341, 307, 264, 700, 472, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.5113314819335938, "compression_ratio": 1.4457142857142857, "no_speech_prob": 2.1904804725636495e-06}, {"id": 1716, "seek": 497012, "start": 4973.76, "end": 4975.84, "text": " It's done using what's called a forward algorithm.", "tokens": [50364, 823, 11, 309, 4523, 484, 309, 311, 588, 2199, 13, 50546, 50546, 467, 311, 1096, 1228, 437, 311, 1219, 257, 2128, 9284, 13, 50650, 50650, 286, 478, 767, 516, 281, 2642, 257, 819, 4295, 13, 50882, 50882, 440, 4295, 307, 516, 281, 574, 544, 411, 264, 472, 286, 632, 949, 11, 51122, 51122, 597, 390, 733, 295, 411, 341, 11, 558, 30, 51200, 51558, 407, 341, 307, 264, 700, 472, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.5113314819335938, "compression_ratio": 1.4457142857142857, "no_speech_prob": 2.1904804725636495e-06}, {"id": 1717, "seek": 497012, "start": 4975.84, "end": 4980.48, "text": " I'm actually going to draw a different graph.", "tokens": [50364, 823, 11, 309, 4523, 484, 309, 311, 588, 2199, 13, 50546, 50546, 467, 311, 1096, 1228, 437, 311, 1219, 257, 2128, 9284, 13, 50650, 50650, 286, 478, 767, 516, 281, 2642, 257, 819, 4295, 13, 50882, 50882, 440, 4295, 307, 516, 281, 574, 544, 411, 264, 472, 286, 632, 949, 11, 51122, 51122, 597, 390, 733, 295, 411, 341, 11, 558, 30, 51200, 51558, 407, 341, 307, 264, 700, 472, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.5113314819335938, "compression_ratio": 1.4457142857142857, "no_speech_prob": 2.1904804725636495e-06}, {"id": 1718, "seek": 497012, "start": 4980.48, "end": 4985.28, "text": " The graph is going to look more like the one I had before,", "tokens": [50364, 823, 11, 309, 4523, 484, 309, 311, 588, 2199, 13, 50546, 50546, 467, 311, 1096, 1228, 437, 311, 1219, 257, 2128, 9284, 13, 50650, 50650, 286, 478, 767, 516, 281, 2642, 257, 819, 4295, 13, 50882, 50882, 440, 4295, 307, 516, 281, 574, 544, 411, 264, 472, 286, 632, 949, 11, 51122, 51122, 597, 390, 733, 295, 411, 341, 11, 558, 30, 51200, 51558, 407, 341, 307, 264, 700, 472, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.5113314819335938, "compression_ratio": 1.4457142857142857, "no_speech_prob": 2.1904804725636495e-06}, {"id": 1719, "seek": 497012, "start": 4985.28, "end": 4986.84, "text": " which was kind of like this, right?", "tokens": [50364, 823, 11, 309, 4523, 484, 309, 311, 588, 2199, 13, 50546, 50546, 467, 311, 1096, 1228, 437, 311, 1219, 257, 2128, 9284, 13, 50650, 50650, 286, 478, 767, 516, 281, 2642, 257, 819, 4295, 13, 50882, 50882, 440, 4295, 307, 516, 281, 574, 544, 411, 264, 472, 286, 632, 949, 11, 51122, 51122, 597, 390, 733, 295, 411, 341, 11, 558, 30, 51200, 51558, 407, 341, 307, 264, 700, 472, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.5113314819335938, "compression_ratio": 1.4457142857142857, "no_speech_prob": 2.1904804725636495e-06}, {"id": 1720, "seek": 497012, "start": 4994.0, "end": 4995.5599999999995, "text": " So this is the first one.", "tokens": [50364, 823, 11, 309, 4523, 484, 309, 311, 588, 2199, 13, 50546, 50546, 467, 311, 1096, 1228, 437, 311, 1219, 257, 2128, 9284, 13, 50650, 50650, 286, 478, 767, 516, 281, 2642, 257, 819, 4295, 13, 50882, 50882, 440, 4295, 307, 516, 281, 574, 544, 411, 264, 472, 286, 632, 949, 11, 51122, 51122, 597, 390, 733, 295, 411, 341, 11, 558, 30, 51200, 51558, 407, 341, 307, 264, 700, 472, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.5113314819335938, "compression_ratio": 1.4457142857142857, "no_speech_prob": 2.1904804725636495e-06}, {"id": 1721, "seek": 499556, "start": 4995.56, "end": 5000.320000000001, "text": " So this is the second one.", "tokens": [50364, 407, 341, 307, 264, 1150, 472, 13, 50602, 50602, 2264, 11, 370, 288, 307, 257, 8310, 295, 1045, 16944, 294, 341, 1389, 13, 50994, 51294, 400, 264, 700, 5986, 393, 312, 11, 1954, 11, 286, 478, 2597, 13, 51580, 51580, 286, 478, 1228, 13891, 510, 2602, 295, 10346, 82, 13, 51696, 51696, 663, 311, 257, 707, 13181, 13, 51760], "temperature": 0.0, "avg_logprob": -0.37254267833271965, "compression_ratio": 1.3404255319148937, "no_speech_prob": 1.0186421377511579e-06}, {"id": 1722, "seek": 499556, "start": 5000.320000000001, "end": 5008.160000000001, "text": " OK, so y is a sequence of three symbols in this case.", "tokens": [50364, 407, 341, 307, 264, 1150, 472, 13, 50602, 50602, 2264, 11, 370, 288, 307, 257, 8310, 295, 1045, 16944, 294, 341, 1389, 13, 50994, 51294, 400, 264, 700, 5986, 393, 312, 11, 1954, 11, 286, 478, 2597, 13, 51580, 51580, 286, 478, 1228, 13891, 510, 2602, 295, 10346, 82, 13, 51696, 51696, 663, 311, 257, 707, 13181, 13, 51760], "temperature": 0.0, "avg_logprob": -0.37254267833271965, "compression_ratio": 1.3404255319148937, "no_speech_prob": 1.0186421377511579e-06}, {"id": 1723, "seek": 499556, "start": 5014.160000000001, "end": 5019.88, "text": " And the first symbol can be, oh, I'm sorry.", "tokens": [50364, 407, 341, 307, 264, 1150, 472, 13, 50602, 50602, 2264, 11, 370, 288, 307, 257, 8310, 295, 1045, 16944, 294, 341, 1389, 13, 50994, 51294, 400, 264, 700, 5986, 393, 312, 11, 1954, 11, 286, 478, 2597, 13, 51580, 51580, 286, 478, 1228, 13891, 510, 2602, 295, 10346, 82, 13, 51696, 51696, 663, 311, 257, 707, 13181, 13, 51760], "temperature": 0.0, "avg_logprob": -0.37254267833271965, "compression_ratio": 1.3404255319148937, "no_speech_prob": 1.0186421377511579e-06}, {"id": 1724, "seek": 499556, "start": 5019.88, "end": 5022.200000000001, "text": " I'm using nodes here instead of arcs.", "tokens": [50364, 407, 341, 307, 264, 1150, 472, 13, 50602, 50602, 2264, 11, 370, 288, 307, 257, 8310, 295, 1045, 16944, 294, 341, 1389, 13, 50994, 51294, 400, 264, 700, 5986, 393, 312, 11, 1954, 11, 286, 478, 2597, 13, 51580, 51580, 286, 478, 1228, 13891, 510, 2602, 295, 10346, 82, 13, 51696, 51696, 663, 311, 257, 707, 13181, 13, 51760], "temperature": 0.0, "avg_logprob": -0.37254267833271965, "compression_ratio": 1.3404255319148937, "no_speech_prob": 1.0186421377511579e-06}, {"id": 1725, "seek": 502220, "start": 5022.2, "end": 5026.08, "text": " That's a little confusing.", "tokens": [50364, 663, 311, 257, 707, 13181, 13, 50558, 50558, 961, 385, 3006, 300, 13, 50612, 50880, 2264, 11, 370, 1184, 3100, 294, 341, 4295, 307, 257, 1944, 14174, 13, 51082, 51082, 407, 337, 1184, 4691, 286, 478, 1940, 11, 286, 478, 846, 2414, 257, 5986, 13, 51338, 51338, 400, 286, 500, 380, 362, 31533, 9271, 13, 51426, 51426, 407, 510, 11, 436, 439, 362, 2293, 1451, 16944, 1348, 484, 11, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13820517553042058, "compression_ratio": 1.4245810055865922, "no_speech_prob": 2.225093112429022e-06}, {"id": 1726, "seek": 502220, "start": 5026.08, "end": 5027.16, "text": " Let me correct that.", "tokens": [50364, 663, 311, 257, 707, 13181, 13, 50558, 50558, 961, 385, 3006, 300, 13, 50612, 50880, 2264, 11, 370, 1184, 3100, 294, 341, 4295, 307, 257, 1944, 14174, 13, 51082, 51082, 407, 337, 1184, 4691, 286, 478, 1940, 11, 286, 478, 846, 2414, 257, 5986, 13, 51338, 51338, 400, 286, 500, 380, 362, 31533, 9271, 13, 51426, 51426, 407, 510, 11, 436, 439, 362, 2293, 1451, 16944, 1348, 484, 11, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13820517553042058, "compression_ratio": 1.4245810055865922, "no_speech_prob": 2.225093112429022e-06}, {"id": 1727, "seek": 502220, "start": 5032.5199999999995, "end": 5036.5599999999995, "text": " OK, so each path in this graph is a possible interpretation.", "tokens": [50364, 663, 311, 257, 707, 13181, 13, 50558, 50558, 961, 385, 3006, 300, 13, 50612, 50880, 2264, 11, 370, 1184, 3100, 294, 341, 4295, 307, 257, 1944, 14174, 13, 51082, 51082, 407, 337, 1184, 4691, 286, 478, 1940, 11, 286, 478, 846, 2414, 257, 5986, 13, 51338, 51338, 400, 286, 500, 380, 362, 31533, 9271, 13, 51426, 51426, 407, 510, 11, 436, 439, 362, 2293, 1451, 16944, 1348, 484, 11, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13820517553042058, "compression_ratio": 1.4245810055865922, "no_speech_prob": 2.225093112429022e-06}, {"id": 1728, "seek": 502220, "start": 5036.5599999999995, "end": 5041.679999999999, "text": " So for each edge I'm taking, I'm emitting a symbol.", "tokens": [50364, 663, 311, 257, 707, 13181, 13, 50558, 50558, 961, 385, 3006, 300, 13, 50612, 50880, 2264, 11, 370, 1184, 3100, 294, 341, 4295, 307, 257, 1944, 14174, 13, 51082, 51082, 407, 337, 1184, 4691, 286, 478, 1940, 11, 286, 478, 846, 2414, 257, 5986, 13, 51338, 51338, 400, 286, 500, 380, 362, 31533, 9271, 13, 51426, 51426, 407, 510, 11, 436, 439, 362, 2293, 1451, 16944, 1348, 484, 11, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13820517553042058, "compression_ratio": 1.4245810055865922, "no_speech_prob": 2.225093112429022e-06}, {"id": 1729, "seek": 502220, "start": 5041.679999999999, "end": 5043.44, "text": " And I don't have skipping connections.", "tokens": [50364, 663, 311, 257, 707, 13181, 13, 50558, 50558, 961, 385, 3006, 300, 13, 50612, 50880, 2264, 11, 370, 1184, 3100, 294, 341, 4295, 307, 257, 1944, 14174, 13, 51082, 51082, 407, 337, 1184, 4691, 286, 478, 1940, 11, 286, 478, 846, 2414, 257, 5986, 13, 51338, 51338, 400, 286, 500, 380, 362, 31533, 9271, 13, 51426, 51426, 407, 510, 11, 436, 439, 362, 2293, 1451, 16944, 1348, 484, 11, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13820517553042058, "compression_ratio": 1.4245810055865922, "no_speech_prob": 2.225093112429022e-06}, {"id": 1730, "seek": 502220, "start": 5043.44, "end": 5048.599999999999, "text": " So here, they all have exactly four symbols coming out,", "tokens": [50364, 663, 311, 257, 707, 13181, 13, 50558, 50558, 961, 385, 3006, 300, 13, 50612, 50880, 2264, 11, 370, 1184, 3100, 294, 341, 4295, 307, 257, 1944, 14174, 13, 51082, 51082, 407, 337, 1184, 4691, 286, 478, 1940, 11, 286, 478, 846, 2414, 257, 5986, 13, 51338, 51338, 400, 286, 500, 380, 362, 31533, 9271, 13, 51426, 51426, 407, 510, 11, 436, 439, 362, 2293, 1451, 16944, 1348, 484, 11, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13820517553042058, "compression_ratio": 1.4245810055865922, "no_speech_prob": 2.225093112429022e-06}, {"id": 1731, "seek": 504860, "start": 5048.6, "end": 5053.04, "text": " because every path is of length four.", "tokens": [50364, 570, 633, 3100, 307, 295, 4641, 1451, 13, 50586, 50586, 583, 577, 360, 286, 14722, 341, 2408, 30, 50684, 50684, 639, 2408, 11, 1936, 11, 286, 352, 412, 257, 9984, 13, 50890, 50890, 2264, 11, 562, 286, 478, 412, 257, 9984, 510, 11, 718, 311, 747, 341, 9984, 558, 510, 13, 51068, 51068, 286, 478, 516, 281, 818, 309, 2182, 13, 51120, 51342, 2264, 11, 264, 2063, 490, 264, 4846, 9984, 11, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1668321458916915, "compression_ratio": 1.4276729559748427, "no_speech_prob": 5.337842594599351e-06}, {"id": 1732, "seek": 504860, "start": 5053.04, "end": 5055.0, "text": " But how do I compute this sum?", "tokens": [50364, 570, 633, 3100, 307, 295, 4641, 1451, 13, 50586, 50586, 583, 577, 360, 286, 14722, 341, 2408, 30, 50684, 50684, 639, 2408, 11, 1936, 11, 286, 352, 412, 257, 9984, 13, 50890, 50890, 2264, 11, 562, 286, 478, 412, 257, 9984, 510, 11, 718, 311, 747, 341, 9984, 558, 510, 13, 51068, 51068, 286, 478, 516, 281, 818, 309, 2182, 13, 51120, 51342, 2264, 11, 264, 2063, 490, 264, 4846, 9984, 11, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1668321458916915, "compression_ratio": 1.4276729559748427, "no_speech_prob": 5.337842594599351e-06}, {"id": 1733, "seek": 504860, "start": 5055.0, "end": 5059.120000000001, "text": " This sum, basically, I go at a node.", "tokens": [50364, 570, 633, 3100, 307, 295, 4641, 1451, 13, 50586, 50586, 583, 577, 360, 286, 14722, 341, 2408, 30, 50684, 50684, 639, 2408, 11, 1936, 11, 286, 352, 412, 257, 9984, 13, 50890, 50890, 2264, 11, 562, 286, 478, 412, 257, 9984, 510, 11, 718, 311, 747, 341, 9984, 558, 510, 13, 51068, 51068, 286, 478, 516, 281, 818, 309, 2182, 13, 51120, 51342, 2264, 11, 264, 2063, 490, 264, 4846, 9984, 11, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1668321458916915, "compression_ratio": 1.4276729559748427, "no_speech_prob": 5.337842594599351e-06}, {"id": 1734, "seek": 504860, "start": 5059.120000000001, "end": 5062.68, "text": " OK, when I'm at a node here, let's take this node right here.", "tokens": [50364, 570, 633, 3100, 307, 295, 4641, 1451, 13, 50586, 50586, 583, 577, 360, 286, 14722, 341, 2408, 30, 50684, 50684, 639, 2408, 11, 1936, 11, 286, 352, 412, 257, 9984, 13, 50890, 50890, 2264, 11, 562, 286, 478, 412, 257, 9984, 510, 11, 718, 311, 747, 341, 9984, 558, 510, 13, 51068, 51068, 286, 478, 516, 281, 818, 309, 2182, 13, 51120, 51342, 2264, 11, 264, 2063, 490, 264, 4846, 9984, 11, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1668321458916915, "compression_ratio": 1.4276729559748427, "no_speech_prob": 5.337842594599351e-06}, {"id": 1735, "seek": 504860, "start": 5062.68, "end": 5063.72, "text": " I'm going to call it red.", "tokens": [50364, 570, 633, 3100, 307, 295, 4641, 1451, 13, 50586, 50586, 583, 577, 360, 286, 14722, 341, 2408, 30, 50684, 50684, 639, 2408, 11, 1936, 11, 286, 352, 412, 257, 9984, 13, 50890, 50890, 2264, 11, 562, 286, 478, 412, 257, 9984, 510, 11, 718, 311, 747, 341, 9984, 558, 510, 13, 51068, 51068, 286, 478, 516, 281, 818, 309, 2182, 13, 51120, 51342, 2264, 11, 264, 2063, 490, 264, 4846, 9984, 11, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1668321458916915, "compression_ratio": 1.4276729559748427, "no_speech_prob": 5.337842594599351e-06}, {"id": 1736, "seek": 504860, "start": 5068.160000000001, "end": 5076.320000000001, "text": " OK, the cost from the input node,", "tokens": [50364, 570, 633, 3100, 307, 295, 4641, 1451, 13, 50586, 50586, 583, 577, 360, 286, 14722, 341, 2408, 30, 50684, 50684, 639, 2408, 11, 1936, 11, 286, 352, 412, 257, 9984, 13, 50890, 50890, 2264, 11, 562, 286, 478, 412, 257, 9984, 510, 11, 718, 311, 747, 341, 9984, 558, 510, 13, 51068, 51068, 286, 478, 516, 281, 818, 309, 2182, 13, 51120, 51342, 2264, 11, 264, 2063, 490, 264, 4846, 9984, 11, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1668321458916915, "compression_ratio": 1.4276729559748427, "no_speech_prob": 5.337842594599351e-06}, {"id": 1737, "seek": 507632, "start": 5076.32, "end": 5081.28, "text": " the energy from the input node to that node", "tokens": [50364, 264, 2281, 490, 264, 4846, 9984, 281, 300, 9984, 50612, 50612, 307, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 264, 25737, 50744, 50744, 490, 2051, 439, 14518, 281, 352, 490, 264, 4846, 9984, 281, 300, 9984, 13, 51156, 51156, 407, 293, 11, 295, 1164, 11, 286, 362, 364, 2281, 558, 510, 11, 51464, 51464, 597, 307, 445, 264, 2281, 295, 300, 9819, 13, 51630, 51630, 286, 362, 364, 2281, 510, 11, 597, 307, 445, 264, 2281, 295, 300, 9819, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.14764481029291263, "compression_ratio": 2.0860927152317883, "no_speech_prob": 2.683407274162164e-06}, {"id": 1738, "seek": 507632, "start": 5081.28, "end": 5083.92, "text": " is the log of the sum of the exponentials of the energies", "tokens": [50364, 264, 2281, 490, 264, 4846, 9984, 281, 300, 9984, 50612, 50612, 307, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 264, 25737, 50744, 50744, 490, 2051, 439, 14518, 281, 352, 490, 264, 4846, 9984, 281, 300, 9984, 13, 51156, 51156, 407, 293, 11, 295, 1164, 11, 286, 362, 364, 2281, 558, 510, 11, 51464, 51464, 597, 307, 445, 264, 2281, 295, 300, 9819, 13, 51630, 51630, 286, 362, 364, 2281, 510, 11, 597, 307, 445, 264, 2281, 295, 300, 9819, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.14764481029291263, "compression_ratio": 2.0860927152317883, "no_speech_prob": 2.683407274162164e-06}, {"id": 1739, "seek": 507632, "start": 5083.92, "end": 5092.16, "text": " from along all paths to go from the input node to that node.", "tokens": [50364, 264, 2281, 490, 264, 4846, 9984, 281, 300, 9984, 50612, 50612, 307, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 264, 25737, 50744, 50744, 490, 2051, 439, 14518, 281, 352, 490, 264, 4846, 9984, 281, 300, 9984, 13, 51156, 51156, 407, 293, 11, 295, 1164, 11, 286, 362, 364, 2281, 558, 510, 11, 51464, 51464, 597, 307, 445, 264, 2281, 295, 300, 9819, 13, 51630, 51630, 286, 362, 364, 2281, 510, 11, 597, 307, 445, 264, 2281, 295, 300, 9819, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.14764481029291263, "compression_ratio": 2.0860927152317883, "no_speech_prob": 2.683407274162164e-06}, {"id": 1740, "seek": 507632, "start": 5092.16, "end": 5098.32, "text": " So and, of course, I have an energy right here,", "tokens": [50364, 264, 2281, 490, 264, 4846, 9984, 281, 300, 9984, 50612, 50612, 307, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 264, 25737, 50744, 50744, 490, 2051, 439, 14518, 281, 352, 490, 264, 4846, 9984, 281, 300, 9984, 13, 51156, 51156, 407, 293, 11, 295, 1164, 11, 286, 362, 364, 2281, 558, 510, 11, 51464, 51464, 597, 307, 445, 264, 2281, 295, 300, 9819, 13, 51630, 51630, 286, 362, 364, 2281, 510, 11, 597, 307, 445, 264, 2281, 295, 300, 9819, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.14764481029291263, "compression_ratio": 2.0860927152317883, "no_speech_prob": 2.683407274162164e-06}, {"id": 1741, "seek": 507632, "start": 5098.32, "end": 5101.639999999999, "text": " which is just the energy of that branch.", "tokens": [50364, 264, 2281, 490, 264, 4846, 9984, 281, 300, 9984, 50612, 50612, 307, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 264, 25737, 50744, 50744, 490, 2051, 439, 14518, 281, 352, 490, 264, 4846, 9984, 281, 300, 9984, 13, 51156, 51156, 407, 293, 11, 295, 1164, 11, 286, 362, 364, 2281, 558, 510, 11, 51464, 51464, 597, 307, 445, 264, 2281, 295, 300, 9819, 13, 51630, 51630, 286, 362, 364, 2281, 510, 11, 597, 307, 445, 264, 2281, 295, 300, 9819, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.14764481029291263, "compression_ratio": 2.0860927152317883, "no_speech_prob": 2.683407274162164e-06}, {"id": 1742, "seek": 507632, "start": 5101.639999999999, "end": 5105.12, "text": " I have an energy here, which is just the energy of that branch.", "tokens": [50364, 264, 2281, 490, 264, 4846, 9984, 281, 300, 9984, 50612, 50612, 307, 264, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 264, 25737, 50744, 50744, 490, 2051, 439, 14518, 281, 352, 490, 264, 4846, 9984, 281, 300, 9984, 13, 51156, 51156, 407, 293, 11, 295, 1164, 11, 286, 362, 364, 2281, 558, 510, 11, 51464, 51464, 597, 307, 445, 264, 2281, 295, 300, 9819, 13, 51630, 51630, 286, 362, 364, 2281, 510, 11, 597, 307, 445, 264, 2281, 295, 300, 9819, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.14764481029291263, "compression_ratio": 2.0860927152317883, "no_speech_prob": 2.683407274162164e-06}, {"id": 1743, "seek": 510512, "start": 5105.12, "end": 5108.44, "text": " I have an f here.", "tokens": [50364, 286, 362, 364, 283, 510, 13, 50530, 50530, 400, 281, 14722, 264, 283, 337, 341, 2146, 11, 50714, 50714, 286, 445, 14722, 264, 3565, 295, 264, 2408, 50882, 50882, 295, 264, 21510, 82, 295, 729, 732, 1074, 13, 50970, 51170, 2264, 11, 558, 13, 51272, 51272, 407, 718, 385, 14853, 4007, 341, 13, 51406, 51406, 286, 600, 658, 364, 2281, 510, 11, 288, 16, 13, 51470, 51470, 286, 600, 658, 364, 2281, 510, 11, 288, 17, 13, 51548, 51548, 286, 600, 658, 472, 510, 11, 288, 18, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18807058748991592, "compression_ratio": 1.6, "no_speech_prob": 7.525314686063211e-06}, {"id": 1744, "seek": 510512, "start": 5108.44, "end": 5112.12, "text": " And to compute the f for this guy,", "tokens": [50364, 286, 362, 364, 283, 510, 13, 50530, 50530, 400, 281, 14722, 264, 283, 337, 341, 2146, 11, 50714, 50714, 286, 445, 14722, 264, 3565, 295, 264, 2408, 50882, 50882, 295, 264, 21510, 82, 295, 729, 732, 1074, 13, 50970, 51170, 2264, 11, 558, 13, 51272, 51272, 407, 718, 385, 14853, 4007, 341, 13, 51406, 51406, 286, 600, 658, 364, 2281, 510, 11, 288, 16, 13, 51470, 51470, 286, 600, 658, 364, 2281, 510, 11, 288, 17, 13, 51548, 51548, 286, 600, 658, 472, 510, 11, 288, 18, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18807058748991592, "compression_ratio": 1.6, "no_speech_prob": 7.525314686063211e-06}, {"id": 1745, "seek": 510512, "start": 5112.12, "end": 5115.48, "text": " I just compute the log of the sum", "tokens": [50364, 286, 362, 364, 283, 510, 13, 50530, 50530, 400, 281, 14722, 264, 283, 337, 341, 2146, 11, 50714, 50714, 286, 445, 14722, 264, 3565, 295, 264, 2408, 50882, 50882, 295, 264, 21510, 82, 295, 729, 732, 1074, 13, 50970, 51170, 2264, 11, 558, 13, 51272, 51272, 407, 718, 385, 14853, 4007, 341, 13, 51406, 51406, 286, 600, 658, 364, 2281, 510, 11, 288, 16, 13, 51470, 51470, 286, 600, 658, 364, 2281, 510, 11, 288, 17, 13, 51548, 51548, 286, 600, 658, 472, 510, 11, 288, 18, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18807058748991592, "compression_ratio": 1.6, "no_speech_prob": 7.525314686063211e-06}, {"id": 1746, "seek": 510512, "start": 5115.48, "end": 5117.24, "text": " of the exponentials of those two guys.", "tokens": [50364, 286, 362, 364, 283, 510, 13, 50530, 50530, 400, 281, 14722, 264, 283, 337, 341, 2146, 11, 50714, 50714, 286, 445, 14722, 264, 3565, 295, 264, 2408, 50882, 50882, 295, 264, 21510, 82, 295, 729, 732, 1074, 13, 50970, 51170, 2264, 11, 558, 13, 51272, 51272, 407, 718, 385, 14853, 4007, 341, 13, 51406, 51406, 286, 600, 658, 364, 2281, 510, 11, 288, 16, 13, 51470, 51470, 286, 600, 658, 364, 2281, 510, 11, 288, 17, 13, 51548, 51548, 286, 600, 658, 472, 510, 11, 288, 18, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18807058748991592, "compression_ratio": 1.6, "no_speech_prob": 7.525314686063211e-06}, {"id": 1747, "seek": 510512, "start": 5121.24, "end": 5123.28, "text": " OK, right.", "tokens": [50364, 286, 362, 364, 283, 510, 13, 50530, 50530, 400, 281, 14722, 264, 283, 337, 341, 2146, 11, 50714, 50714, 286, 445, 14722, 264, 3565, 295, 264, 2408, 50882, 50882, 295, 264, 21510, 82, 295, 729, 732, 1074, 13, 50970, 51170, 2264, 11, 558, 13, 51272, 51272, 407, 718, 385, 14853, 4007, 341, 13, 51406, 51406, 286, 600, 658, 364, 2281, 510, 11, 288, 16, 13, 51470, 51470, 286, 600, 658, 364, 2281, 510, 11, 288, 17, 13, 51548, 51548, 286, 600, 658, 472, 510, 11, 288, 18, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18807058748991592, "compression_ratio": 1.6, "no_speech_prob": 7.525314686063211e-06}, {"id": 1748, "seek": 510512, "start": 5123.28, "end": 5125.96, "text": " So let me unwrap this.", "tokens": [50364, 286, 362, 364, 283, 510, 13, 50530, 50530, 400, 281, 14722, 264, 283, 337, 341, 2146, 11, 50714, 50714, 286, 445, 14722, 264, 3565, 295, 264, 2408, 50882, 50882, 295, 264, 21510, 82, 295, 729, 732, 1074, 13, 50970, 51170, 2264, 11, 558, 13, 51272, 51272, 407, 718, 385, 14853, 4007, 341, 13, 51406, 51406, 286, 600, 658, 364, 2281, 510, 11, 288, 16, 13, 51470, 51470, 286, 600, 658, 364, 2281, 510, 11, 288, 17, 13, 51548, 51548, 286, 600, 658, 472, 510, 11, 288, 18, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18807058748991592, "compression_ratio": 1.6, "no_speech_prob": 7.525314686063211e-06}, {"id": 1749, "seek": 510512, "start": 5125.96, "end": 5127.24, "text": " I've got an energy here, y1.", "tokens": [50364, 286, 362, 364, 283, 510, 13, 50530, 50530, 400, 281, 14722, 264, 283, 337, 341, 2146, 11, 50714, 50714, 286, 445, 14722, 264, 3565, 295, 264, 2408, 50882, 50882, 295, 264, 21510, 82, 295, 729, 732, 1074, 13, 50970, 51170, 2264, 11, 558, 13, 51272, 51272, 407, 718, 385, 14853, 4007, 341, 13, 51406, 51406, 286, 600, 658, 364, 2281, 510, 11, 288, 16, 13, 51470, 51470, 286, 600, 658, 364, 2281, 510, 11, 288, 17, 13, 51548, 51548, 286, 600, 658, 472, 510, 11, 288, 18, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18807058748991592, "compression_ratio": 1.6, "no_speech_prob": 7.525314686063211e-06}, {"id": 1750, "seek": 510512, "start": 5127.24, "end": 5128.8, "text": " I've got an energy here, y2.", "tokens": [50364, 286, 362, 364, 283, 510, 13, 50530, 50530, 400, 281, 14722, 264, 283, 337, 341, 2146, 11, 50714, 50714, 286, 445, 14722, 264, 3565, 295, 264, 2408, 50882, 50882, 295, 264, 21510, 82, 295, 729, 732, 1074, 13, 50970, 51170, 2264, 11, 558, 13, 51272, 51272, 407, 718, 385, 14853, 4007, 341, 13, 51406, 51406, 286, 600, 658, 364, 2281, 510, 11, 288, 16, 13, 51470, 51470, 286, 600, 658, 364, 2281, 510, 11, 288, 17, 13, 51548, 51548, 286, 600, 658, 472, 510, 11, 288, 18, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18807058748991592, "compression_ratio": 1.6, "no_speech_prob": 7.525314686063211e-06}, {"id": 1751, "seek": 510512, "start": 5128.8, "end": 5130.12, "text": " I've got one here, y3.", "tokens": [50364, 286, 362, 364, 283, 510, 13, 50530, 50530, 400, 281, 14722, 264, 283, 337, 341, 2146, 11, 50714, 50714, 286, 445, 14722, 264, 3565, 295, 264, 2408, 50882, 50882, 295, 264, 21510, 82, 295, 729, 732, 1074, 13, 50970, 51170, 2264, 11, 558, 13, 51272, 51272, 407, 718, 385, 14853, 4007, 341, 13, 51406, 51406, 286, 600, 658, 364, 2281, 510, 11, 288, 16, 13, 51470, 51470, 286, 600, 658, 364, 2281, 510, 11, 288, 17, 13, 51548, 51548, 286, 600, 658, 472, 510, 11, 288, 18, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18807058748991592, "compression_ratio": 1.6, "no_speech_prob": 7.525314686063211e-06}, {"id": 1752, "seek": 513012, "start": 5130.12, "end": 5136.96, "text": " Sorry, I want here, this guy is e4.", "tokens": [50364, 4919, 11, 286, 528, 510, 11, 341, 2146, 307, 308, 19, 13, 50706, 50706, 1057, 558, 11, 264, 283, 286, 478, 516, 281, 483, 510, 13, 50838, 51024, 2264, 11, 370, 341, 307, 11, 286, 478, 516, 281, 818, 341, 11, 51386, 51386, 293, 286, 478, 516, 281, 818, 309, 1340, 13, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.29537504059927805, "compression_ratio": 1.3761467889908257, "no_speech_prob": 1.5533942132606171e-06}, {"id": 1753, "seek": 513012, "start": 5136.96, "end": 5139.599999999999, "text": " All right, the f I'm going to get here.", "tokens": [50364, 4919, 11, 286, 528, 510, 11, 341, 2146, 307, 308, 19, 13, 50706, 50706, 1057, 558, 11, 264, 283, 286, 478, 516, 281, 483, 510, 13, 50838, 51024, 2264, 11, 370, 341, 307, 11, 286, 478, 516, 281, 818, 341, 11, 51386, 51386, 293, 286, 478, 516, 281, 818, 309, 1340, 13, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.29537504059927805, "compression_ratio": 1.3761467889908257, "no_speech_prob": 1.5533942132606171e-06}, {"id": 1754, "seek": 513012, "start": 5143.32, "end": 5150.5599999999995, "text": " OK, so this is, I'm going to call this,", "tokens": [50364, 4919, 11, 286, 528, 510, 11, 341, 2146, 307, 308, 19, 13, 50706, 50706, 1057, 558, 11, 264, 283, 286, 478, 516, 281, 483, 510, 13, 50838, 51024, 2264, 11, 370, 341, 307, 11, 286, 478, 516, 281, 818, 341, 11, 51386, 51386, 293, 286, 478, 516, 281, 818, 309, 1340, 13, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.29537504059927805, "compression_ratio": 1.3761467889908257, "no_speech_prob": 1.5533942132606171e-06}, {"id": 1755, "seek": 513012, "start": 5150.5599999999995, "end": 5152.5199999999995, "text": " and I'm going to call it anything.", "tokens": [50364, 4919, 11, 286, 528, 510, 11, 341, 2146, 307, 308, 19, 13, 50706, 50706, 1057, 558, 11, 264, 283, 286, 478, 516, 281, 483, 510, 13, 50838, 51024, 2264, 11, 370, 341, 307, 11, 286, 478, 516, 281, 818, 341, 11, 51386, 51386, 293, 286, 478, 516, 281, 818, 309, 1340, 13, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.29537504059927805, "compression_ratio": 1.3761467889908257, "no_speech_prob": 1.5533942132606171e-06}, {"id": 1756, "seek": 515252, "start": 5152.52, "end": 5171.52, "text": " So the value I should have here is e1 plus e3,", "tokens": [50364, 407, 264, 2158, 286, 820, 362, 510, 307, 308, 16, 1804, 308, 18, 11, 51314, 51314, 21510, 295, 300, 3175, 9861, 300, 11, 51528, 51528], "temperature": 0.0, "avg_logprob": -0.15011835098266602, "compression_ratio": 1.0375, "no_speech_prob": 7.688737468924955e-07}, {"id": 1757, "seek": 515252, "start": 5171.52, "end": 5175.8, "text": " exponential of that minus beta that,", "tokens": [50364, 407, 264, 2158, 286, 820, 362, 510, 307, 308, 16, 1804, 308, 18, 11, 51314, 51314, 21510, 295, 300, 3175, 9861, 300, 11, 51528, 51528], "temperature": 0.0, "avg_logprob": -0.15011835098266602, "compression_ratio": 1.0375, "no_speech_prob": 7.688737468924955e-07}, {"id": 1758, "seek": 517580, "start": 5175.8, "end": 5183.400000000001, "text": " plus exponential minus beta e2 plus e4.", "tokens": [50364, 1804, 21510, 3175, 9861, 308, 17, 1804, 308, 19, 13, 50744, 50882, 400, 286, 747, 3175, 502, 670, 9861, 3565, 295, 341, 13, 51102, 51398, 407, 577, 307, 264, 308, 16, 15598, 30, 51548, 51548, 286, 914, 11, 264, 4356, 308, 16, 13, 51690, 51690, 8541, 1487, 484, 295, 428, 2281, 11, 558, 30, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.2787427244515255, "compression_ratio": 1.2941176470588236, "no_speech_prob": 3.5007203678105725e-06}, {"id": 1759, "seek": 517580, "start": 5186.16, "end": 5190.56, "text": " And I take minus 1 over beta log of this.", "tokens": [50364, 1804, 21510, 3175, 9861, 308, 17, 1804, 308, 19, 13, 50744, 50882, 400, 286, 747, 3175, 502, 670, 9861, 3565, 295, 341, 13, 51102, 51398, 407, 577, 307, 264, 308, 16, 15598, 30, 51548, 51548, 286, 914, 11, 264, 4356, 308, 16, 13, 51690, 51690, 8541, 1487, 484, 295, 428, 2281, 11, 558, 30, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.2787427244515255, "compression_ratio": 1.2941176470588236, "no_speech_prob": 3.5007203678105725e-06}, {"id": 1760, "seek": 517580, "start": 5196.4800000000005, "end": 5199.4800000000005, "text": " So how is the e1 calculated?", "tokens": [50364, 1804, 21510, 3175, 9861, 308, 17, 1804, 308, 19, 13, 50744, 50882, 400, 286, 747, 3175, 502, 670, 9861, 3565, 295, 341, 13, 51102, 51398, 407, 577, 307, 264, 308, 16, 15598, 30, 51548, 51548, 286, 914, 11, 264, 4356, 308, 16, 13, 51690, 51690, 8541, 1487, 484, 295, 428, 2281, 11, 558, 30, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.2787427244515255, "compression_ratio": 1.2941176470588236, "no_speech_prob": 3.5007203678105725e-06}, {"id": 1761, "seek": 517580, "start": 5199.4800000000005, "end": 5202.320000000001, "text": " I mean, the smaller e1.", "tokens": [50364, 1804, 21510, 3175, 9861, 308, 17, 1804, 308, 19, 13, 50744, 50882, 400, 286, 747, 3175, 502, 670, 9861, 3565, 295, 341, 13, 51102, 51398, 407, 577, 307, 264, 308, 16, 15598, 30, 51548, 51548, 286, 914, 11, 264, 4356, 308, 16, 13, 51690, 51690, 8541, 1487, 484, 295, 428, 2281, 11, 558, 30, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.2787427244515255, "compression_ratio": 1.2941176470588236, "no_speech_prob": 3.5007203678105725e-06}, {"id": 1762, "seek": 517580, "start": 5202.320000000001, "end": 5204.96, "text": " Whatever comes out of your energy, right?", "tokens": [50364, 1804, 21510, 3175, 9861, 308, 17, 1804, 308, 19, 13, 50744, 50882, 400, 286, 747, 3175, 502, 670, 9861, 3565, 295, 341, 13, 51102, 51398, 407, 577, 307, 264, 308, 16, 15598, 30, 51548, 51548, 286, 914, 11, 264, 4356, 308, 16, 13, 51690, 51690, 8541, 1487, 484, 295, 428, 2281, 11, 558, 30, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.2787427244515255, "compression_ratio": 1.2941176470588236, "no_speech_prob": 3.5007203678105725e-06}, {"id": 1763, "seek": 520496, "start": 5204.96, "end": 5206.72, "text": " Each of those graphs, as I said, you", "tokens": [50364, 6947, 295, 729, 24877, 11, 382, 286, 848, 11, 291, 50452, 50452, 2906, 1944, 37547, 382, 257, 4295, 13, 50638, 50638, 6947, 9984, 294, 264, 4295, 575, 364, 2281, 13, 50734, 50734, 400, 257, 3566, 2281, 295, 264, 2445, 11, 50846, 50846, 597, 307, 364, 283, 295, 2031, 11, 288, 337, 257, 1729, 288, 293, 257, 1729, 710, 51032, 51032, 3480, 257, 3100, 11, 307, 308, 295, 2031, 11, 288, 11, 710, 13, 51310, 51310, 400, 586, 437, 291, 528, 281, 14722, 307, 3565, 295, 2408, 295, 308, 51462, 51462, 281, 264, 3175, 308, 295, 2031, 11, 288, 11, 710, 11, 597, 307, 264, 16885, 2144, 51716, 51716, 670, 439, 264, 14518, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1450139396211021, "compression_ratio": 1.740909090909091, "no_speech_prob": 3.479688166407868e-05}, {"id": 1764, "seek": 520496, "start": 5206.72, "end": 5210.44, "text": " represent possible interpretations as a graph.", "tokens": [50364, 6947, 295, 729, 24877, 11, 382, 286, 848, 11, 291, 50452, 50452, 2906, 1944, 37547, 382, 257, 4295, 13, 50638, 50638, 6947, 9984, 294, 264, 4295, 575, 364, 2281, 13, 50734, 50734, 400, 257, 3566, 2281, 295, 264, 2445, 11, 50846, 50846, 597, 307, 364, 283, 295, 2031, 11, 288, 337, 257, 1729, 288, 293, 257, 1729, 710, 51032, 51032, 3480, 257, 3100, 11, 307, 308, 295, 2031, 11, 288, 11, 710, 13, 51310, 51310, 400, 586, 437, 291, 528, 281, 14722, 307, 3565, 295, 2408, 295, 308, 51462, 51462, 281, 264, 3175, 308, 295, 2031, 11, 288, 11, 710, 11, 597, 307, 264, 16885, 2144, 51716, 51716, 670, 439, 264, 14518, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1450139396211021, "compression_ratio": 1.740909090909091, "no_speech_prob": 3.479688166407868e-05}, {"id": 1765, "seek": 520496, "start": 5210.44, "end": 5212.36, "text": " Each node in the graph has an energy.", "tokens": [50364, 6947, 295, 729, 24877, 11, 382, 286, 848, 11, 291, 50452, 50452, 2906, 1944, 37547, 382, 257, 4295, 13, 50638, 50638, 6947, 9984, 294, 264, 4295, 575, 364, 2281, 13, 50734, 50734, 400, 257, 3566, 2281, 295, 264, 2445, 11, 50846, 50846, 597, 307, 364, 283, 295, 2031, 11, 288, 337, 257, 1729, 288, 293, 257, 1729, 710, 51032, 51032, 3480, 257, 3100, 11, 307, 308, 295, 2031, 11, 288, 11, 710, 13, 51310, 51310, 400, 586, 437, 291, 528, 281, 14722, 307, 3565, 295, 2408, 295, 308, 51462, 51462, 281, 264, 3175, 308, 295, 2031, 11, 288, 11, 710, 11, 597, 307, 264, 16885, 2144, 51716, 51716, 670, 439, 264, 14518, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1450139396211021, "compression_ratio": 1.740909090909091, "no_speech_prob": 3.479688166407868e-05}, {"id": 1766, "seek": 520496, "start": 5212.36, "end": 5214.6, "text": " And a complete energy of the function,", "tokens": [50364, 6947, 295, 729, 24877, 11, 382, 286, 848, 11, 291, 50452, 50452, 2906, 1944, 37547, 382, 257, 4295, 13, 50638, 50638, 6947, 9984, 294, 264, 4295, 575, 364, 2281, 13, 50734, 50734, 400, 257, 3566, 2281, 295, 264, 2445, 11, 50846, 50846, 597, 307, 364, 283, 295, 2031, 11, 288, 337, 257, 1729, 288, 293, 257, 1729, 710, 51032, 51032, 3480, 257, 3100, 11, 307, 308, 295, 2031, 11, 288, 11, 710, 13, 51310, 51310, 400, 586, 437, 291, 528, 281, 14722, 307, 3565, 295, 2408, 295, 308, 51462, 51462, 281, 264, 3175, 308, 295, 2031, 11, 288, 11, 710, 11, 597, 307, 264, 16885, 2144, 51716, 51716, 670, 439, 264, 14518, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1450139396211021, "compression_ratio": 1.740909090909091, "no_speech_prob": 3.479688166407868e-05}, {"id": 1767, "seek": 520496, "start": 5214.6, "end": 5218.32, "text": " which is an f of x, y for a particular y and a particular z", "tokens": [50364, 6947, 295, 729, 24877, 11, 382, 286, 848, 11, 291, 50452, 50452, 2906, 1944, 37547, 382, 257, 4295, 13, 50638, 50638, 6947, 9984, 294, 264, 4295, 575, 364, 2281, 13, 50734, 50734, 400, 257, 3566, 2281, 295, 264, 2445, 11, 50846, 50846, 597, 307, 364, 283, 295, 2031, 11, 288, 337, 257, 1729, 288, 293, 257, 1729, 710, 51032, 51032, 3480, 257, 3100, 11, 307, 308, 295, 2031, 11, 288, 11, 710, 13, 51310, 51310, 400, 586, 437, 291, 528, 281, 14722, 307, 3565, 295, 2408, 295, 308, 51462, 51462, 281, 264, 3175, 308, 295, 2031, 11, 288, 11, 710, 11, 597, 307, 264, 16885, 2144, 51716, 51716, 670, 439, 264, 14518, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1450139396211021, "compression_ratio": 1.740909090909091, "no_speech_prob": 3.479688166407868e-05}, {"id": 1768, "seek": 520496, "start": 5218.32, "end": 5223.88, "text": " following a path, is e of x, y, z.", "tokens": [50364, 6947, 295, 729, 24877, 11, 382, 286, 848, 11, 291, 50452, 50452, 2906, 1944, 37547, 382, 257, 4295, 13, 50638, 50638, 6947, 9984, 294, 264, 4295, 575, 364, 2281, 13, 50734, 50734, 400, 257, 3566, 2281, 295, 264, 2445, 11, 50846, 50846, 597, 307, 364, 283, 295, 2031, 11, 288, 337, 257, 1729, 288, 293, 257, 1729, 710, 51032, 51032, 3480, 257, 3100, 11, 307, 308, 295, 2031, 11, 288, 11, 710, 13, 51310, 51310, 400, 586, 437, 291, 528, 281, 14722, 307, 3565, 295, 2408, 295, 308, 51462, 51462, 281, 264, 3175, 308, 295, 2031, 11, 288, 11, 710, 11, 597, 307, 264, 16885, 2144, 51716, 51716, 670, 439, 264, 14518, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1450139396211021, "compression_ratio": 1.740909090909091, "no_speech_prob": 3.479688166407868e-05}, {"id": 1769, "seek": 520496, "start": 5223.88, "end": 5226.92, "text": " And now what you want to compute is log of sum of e", "tokens": [50364, 6947, 295, 729, 24877, 11, 382, 286, 848, 11, 291, 50452, 50452, 2906, 1944, 37547, 382, 257, 4295, 13, 50638, 50638, 6947, 9984, 294, 264, 4295, 575, 364, 2281, 13, 50734, 50734, 400, 257, 3566, 2281, 295, 264, 2445, 11, 50846, 50846, 597, 307, 364, 283, 295, 2031, 11, 288, 337, 257, 1729, 288, 293, 257, 1729, 710, 51032, 51032, 3480, 257, 3100, 11, 307, 308, 295, 2031, 11, 288, 11, 710, 13, 51310, 51310, 400, 586, 437, 291, 528, 281, 14722, 307, 3565, 295, 2408, 295, 308, 51462, 51462, 281, 264, 3175, 308, 295, 2031, 11, 288, 11, 710, 11, 597, 307, 264, 16885, 2144, 51716, 51716, 670, 439, 264, 14518, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1450139396211021, "compression_ratio": 1.740909090909091, "no_speech_prob": 3.479688166407868e-05}, {"id": 1770, "seek": 520496, "start": 5226.92, "end": 5232.0, "text": " to the minus e of x, y, z, which is the marginalization", "tokens": [50364, 6947, 295, 729, 24877, 11, 382, 286, 848, 11, 291, 50452, 50452, 2906, 1944, 37547, 382, 257, 4295, 13, 50638, 50638, 6947, 9984, 294, 264, 4295, 575, 364, 2281, 13, 50734, 50734, 400, 257, 3566, 2281, 295, 264, 2445, 11, 50846, 50846, 597, 307, 364, 283, 295, 2031, 11, 288, 337, 257, 1729, 288, 293, 257, 1729, 710, 51032, 51032, 3480, 257, 3100, 11, 307, 308, 295, 2031, 11, 288, 11, 710, 13, 51310, 51310, 400, 586, 437, 291, 528, 281, 14722, 307, 3565, 295, 2408, 295, 308, 51462, 51462, 281, 264, 3175, 308, 295, 2031, 11, 288, 11, 710, 11, 597, 307, 264, 16885, 2144, 51716, 51716, 670, 439, 264, 14518, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1450139396211021, "compression_ratio": 1.740909090909091, "no_speech_prob": 3.479688166407868e-05}, {"id": 1771, "seek": 520496, "start": 5232.0, "end": 5232.88, "text": " over all the paths.", "tokens": [50364, 6947, 295, 729, 24877, 11, 382, 286, 848, 11, 291, 50452, 50452, 2906, 1944, 37547, 382, 257, 4295, 13, 50638, 50638, 6947, 9984, 294, 264, 4295, 575, 364, 2281, 13, 50734, 50734, 400, 257, 3566, 2281, 295, 264, 2445, 11, 50846, 50846, 597, 307, 364, 283, 295, 2031, 11, 288, 337, 257, 1729, 288, 293, 257, 1729, 710, 51032, 51032, 3480, 257, 3100, 11, 307, 308, 295, 2031, 11, 288, 11, 710, 13, 51310, 51310, 400, 586, 437, 291, 528, 281, 14722, 307, 3565, 295, 2408, 295, 308, 51462, 51462, 281, 264, 3175, 308, 295, 2031, 11, 288, 11, 710, 11, 597, 307, 264, 16885, 2144, 51716, 51716, 670, 439, 264, 14518, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1450139396211021, "compression_ratio": 1.740909090909091, "no_speech_prob": 3.479688166407868e-05}, {"id": 1772, "seek": 523288, "start": 5232.88, "end": 5236.68, "text": " So it's basically combining the cost of all the paths", "tokens": [50364, 407, 309, 311, 1936, 21928, 264, 2063, 295, 439, 264, 14518, 50554, 50554, 294, 733, 295, 257, 2787, 7285, 636, 11, 558, 30, 50738, 50738, 583, 264, 9284, 307, 1687, 2199, 50842, 50842, 570, 291, 6909, 257, 7006, 1936, 337, 1184, 9984, 13, 51122, 51122, 1171, 1184, 9984, 11, 291, 14722, 257, 7006, 8961, 51308, 51308, 337, 257, 1729, 9984, 13, 51362, 51362, 400, 309, 311, 516, 281, 312, 2681, 281, 3175, 3565, 2408, 670, 439, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12608324289321898, "compression_ratio": 1.5729166666666667, "no_speech_prob": 2.642510253281216e-06}, {"id": 1773, "seek": 523288, "start": 5236.68, "end": 5240.36, "text": " in kind of a soft minimum way, right?", "tokens": [50364, 407, 309, 311, 1936, 21928, 264, 2063, 295, 439, 264, 14518, 50554, 50554, 294, 733, 295, 257, 2787, 7285, 636, 11, 558, 30, 50738, 50738, 583, 264, 9284, 307, 1687, 2199, 50842, 50842, 570, 291, 6909, 257, 7006, 1936, 337, 1184, 9984, 13, 51122, 51122, 1171, 1184, 9984, 11, 291, 14722, 257, 7006, 8961, 51308, 51308, 337, 257, 1729, 9984, 13, 51362, 51362, 400, 309, 311, 516, 281, 312, 2681, 281, 3175, 3565, 2408, 670, 439, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12608324289321898, "compression_ratio": 1.5729166666666667, "no_speech_prob": 2.642510253281216e-06}, {"id": 1774, "seek": 523288, "start": 5240.36, "end": 5242.4400000000005, "text": " But the algorithm is super simple", "tokens": [50364, 407, 309, 311, 1936, 21928, 264, 2063, 295, 439, 264, 14518, 50554, 50554, 294, 733, 295, 257, 2787, 7285, 636, 11, 558, 30, 50738, 50738, 583, 264, 9284, 307, 1687, 2199, 50842, 50842, 570, 291, 6909, 257, 7006, 1936, 337, 1184, 9984, 13, 51122, 51122, 1171, 1184, 9984, 11, 291, 14722, 257, 7006, 8961, 51308, 51308, 337, 257, 1729, 9984, 13, 51362, 51362, 400, 309, 311, 516, 281, 312, 2681, 281, 3175, 3565, 2408, 670, 439, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12608324289321898, "compression_ratio": 1.5729166666666667, "no_speech_prob": 2.642510253281216e-06}, {"id": 1775, "seek": 523288, "start": 5242.4400000000005, "end": 5248.04, "text": " because you maintain a variable basically for each node.", "tokens": [50364, 407, 309, 311, 1936, 21928, 264, 2063, 295, 439, 264, 14518, 50554, 50554, 294, 733, 295, 257, 2787, 7285, 636, 11, 558, 30, 50738, 50738, 583, 264, 9284, 307, 1687, 2199, 50842, 50842, 570, 291, 6909, 257, 7006, 1936, 337, 1184, 9984, 13, 51122, 51122, 1171, 1184, 9984, 11, 291, 14722, 257, 7006, 8961, 51308, 51308, 337, 257, 1729, 9984, 13, 51362, 51362, 400, 309, 311, 516, 281, 312, 2681, 281, 3175, 3565, 2408, 670, 439, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12608324289321898, "compression_ratio": 1.5729166666666667, "no_speech_prob": 2.642510253281216e-06}, {"id": 1776, "seek": 523288, "start": 5248.04, "end": 5251.76, "text": " For each node, you compute a variable alpha", "tokens": [50364, 407, 309, 311, 1936, 21928, 264, 2063, 295, 439, 264, 14518, 50554, 50554, 294, 733, 295, 257, 2787, 7285, 636, 11, 558, 30, 50738, 50738, 583, 264, 9284, 307, 1687, 2199, 50842, 50842, 570, 291, 6909, 257, 7006, 1936, 337, 1184, 9984, 13, 51122, 51122, 1171, 1184, 9984, 11, 291, 14722, 257, 7006, 8961, 51308, 51308, 337, 257, 1729, 9984, 13, 51362, 51362, 400, 309, 311, 516, 281, 312, 2681, 281, 3175, 3565, 2408, 670, 439, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12608324289321898, "compression_ratio": 1.5729166666666667, "no_speech_prob": 2.642510253281216e-06}, {"id": 1777, "seek": 523288, "start": 5251.76, "end": 5252.84, "text": " for a particular node.", "tokens": [50364, 407, 309, 311, 1936, 21928, 264, 2063, 295, 439, 264, 14518, 50554, 50554, 294, 733, 295, 257, 2787, 7285, 636, 11, 558, 30, 50738, 50738, 583, 264, 9284, 307, 1687, 2199, 50842, 50842, 570, 291, 6909, 257, 7006, 1936, 337, 1184, 9984, 13, 51122, 51122, 1171, 1184, 9984, 11, 291, 14722, 257, 7006, 8961, 51308, 51308, 337, 257, 1729, 9984, 13, 51362, 51362, 400, 309, 311, 516, 281, 312, 2681, 281, 3175, 3565, 2408, 670, 439, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12608324289321898, "compression_ratio": 1.5729166666666667, "no_speech_prob": 2.642510253281216e-06}, {"id": 1778, "seek": 523288, "start": 5252.84, "end": 5259.24, "text": " And it's going to be equal to minus log sum over all", "tokens": [50364, 407, 309, 311, 1936, 21928, 264, 2063, 295, 439, 264, 14518, 50554, 50554, 294, 733, 295, 257, 2787, 7285, 636, 11, 558, 30, 50738, 50738, 583, 264, 9284, 307, 1687, 2199, 50842, 50842, 570, 291, 6909, 257, 7006, 1936, 337, 1184, 9984, 13, 51122, 51122, 1171, 1184, 9984, 11, 291, 14722, 257, 7006, 8961, 51308, 51308, 337, 257, 1729, 9984, 13, 51362, 51362, 400, 309, 311, 516, 281, 312, 2681, 281, 3175, 3565, 2408, 670, 439, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12608324289321898, "compression_ratio": 1.5729166666666667, "no_speech_prob": 2.642510253281216e-06}, {"id": 1779, "seek": 525924, "start": 5259.24, "end": 5269.48, "text": " the nodes that are up from i.", "tokens": [50364, 264, 13891, 300, 366, 493, 490, 741, 13, 50876, 50876, 407, 439, 264, 2596, 13891, 295, 741, 13, 51018, 51018, 400, 550, 291, 360, 308, 281, 264, 3175, 9861, 264, 8961, 350, 13, 51364, 51594], "temperature": 0.0, "avg_logprob": -0.22820838722022804, "compression_ratio": 1.2413793103448276, "no_speech_prob": 1.3844823115505278e-05}, {"id": 1780, "seek": 525924, "start": 5269.48, "end": 5272.32, "text": " So all the parent nodes of i.", "tokens": [50364, 264, 13891, 300, 366, 493, 490, 741, 13, 50876, 50876, 407, 439, 264, 2596, 13891, 295, 741, 13, 51018, 51018, 400, 550, 291, 360, 308, 281, 264, 3175, 9861, 264, 8961, 350, 13, 51364, 51594], "temperature": 0.0, "avg_logprob": -0.22820838722022804, "compression_ratio": 1.2413793103448276, "no_speech_prob": 1.3844823115505278e-05}, {"id": 1781, "seek": 525924, "start": 5272.32, "end": 5279.24, "text": " And then you do e to the minus beta the alpha k.", "tokens": [50364, 264, 13891, 300, 366, 493, 490, 741, 13, 50876, 50876, 407, 439, 264, 2596, 13891, 295, 741, 13, 51018, 51018, 400, 550, 291, 360, 308, 281, 264, 3175, 9861, 264, 8961, 350, 13, 51364, 51594], "temperature": 0.0, "avg_logprob": -0.22820838722022804, "compression_ratio": 1.2413793103448276, "no_speech_prob": 1.3844823115505278e-05}, {"id": 1782, "seek": 527924, "start": 5279.24, "end": 5290.5599999999995, "text": " And you add to it e of ki, which would", "tokens": [50364, 400, 291, 909, 281, 309, 308, 295, 6315, 11, 597, 576, 50930, 50930, 312, 264, 2281, 295, 264, 2113, 1348, 490, 9984, 350, 281, 9984, 741, 13, 51132, 51286, 2264, 30, 51312, 51312, 663, 311, 1219, 257, 2128, 9284, 13, 51382, 51782], "temperature": 0.0, "avg_logprob": -0.4946323741566051, "compression_ratio": 1.176991150442478, "no_speech_prob": 1.0283530173182953e-05}, {"id": 1783, "seek": 527924, "start": 5290.5599999999995, "end": 5294.599999999999, "text": " be the energy of the link coming from node k to node i.", "tokens": [50364, 400, 291, 909, 281, 309, 308, 295, 6315, 11, 597, 576, 50930, 50930, 312, 264, 2281, 295, 264, 2113, 1348, 490, 9984, 350, 281, 9984, 741, 13, 51132, 51286, 2264, 30, 51312, 51312, 663, 311, 1219, 257, 2128, 9284, 13, 51382, 51782], "temperature": 0.0, "avg_logprob": -0.4946323741566051, "compression_ratio": 1.176991150442478, "no_speech_prob": 1.0283530173182953e-05}, {"id": 1784, "seek": 527924, "start": 5297.679999999999, "end": 5298.2, "text": " OK?", "tokens": [50364, 400, 291, 909, 281, 309, 308, 295, 6315, 11, 597, 576, 50930, 50930, 312, 264, 2281, 295, 264, 2113, 1348, 490, 9984, 350, 281, 9984, 741, 13, 51132, 51286, 2264, 30, 51312, 51312, 663, 311, 1219, 257, 2128, 9284, 13, 51382, 51782], "temperature": 0.0, "avg_logprob": -0.4946323741566051, "compression_ratio": 1.176991150442478, "no_speech_prob": 1.0283530173182953e-05}, {"id": 1785, "seek": 527924, "start": 5298.2, "end": 5299.599999999999, "text": " That's called a forward algorithm.", "tokens": [50364, 400, 291, 909, 281, 309, 308, 295, 6315, 11, 597, 576, 50930, 50930, 312, 264, 2281, 295, 264, 2113, 1348, 490, 9984, 350, 281, 9984, 741, 13, 51132, 51286, 2264, 30, 51312, 51312, 663, 311, 1219, 257, 2128, 9284, 13, 51382, 51782], "temperature": 0.0, "avg_logprob": -0.4946323741566051, "compression_ratio": 1.176991150442478, "no_speech_prob": 1.0283530173182953e-05}, {"id": 1786, "seek": 529960, "start": 5299.6, "end": 5301.88, "text": " And if you've heard about this, it's", "tokens": [50364, 400, 498, 291, 600, 2198, 466, 341, 11, 309, 311, 50478, 50478, 767, 257, 2121, 1389, 295, 264, 370, 12, 11880, 7107, 38377, 50688, 50688, 9284, 13, 50714, 51066, 407, 7107, 38377, 307, 257, 2674, 9284, 51216, 51216, 337, 35942, 9284, 13, 51384, 51384, 407, 309, 311, 257, 2674, 9284, 337, 4295, 984, 51508, 51508], "temperature": 0.0, "avg_logprob": -0.6277114466616982, "compression_ratio": 1.6870229007633588, "no_speech_prob": 9.199885425914545e-06}, {"id": 1787, "seek": 529960, "start": 5301.88, "end": 5306.08, "text": " actually a special case of the so-called belief propagation", "tokens": [50364, 400, 498, 291, 600, 2198, 466, 341, 11, 309, 311, 50478, 50478, 767, 257, 2121, 1389, 295, 264, 370, 12, 11880, 7107, 38377, 50688, 50688, 9284, 13, 50714, 51066, 407, 7107, 38377, 307, 257, 2674, 9284, 51216, 51216, 337, 35942, 9284, 13, 51384, 51384, 407, 309, 311, 257, 2674, 9284, 337, 4295, 984, 51508, 51508], "temperature": 0.0, "avg_logprob": -0.6277114466616982, "compression_ratio": 1.6870229007633588, "no_speech_prob": 9.199885425914545e-06}, {"id": 1788, "seek": 529960, "start": 5306.08, "end": 5306.6, "text": " algorithm.", "tokens": [50364, 400, 498, 291, 600, 2198, 466, 341, 11, 309, 311, 50478, 50478, 767, 257, 2121, 1389, 295, 264, 370, 12, 11880, 7107, 38377, 50688, 50688, 9284, 13, 50714, 51066, 407, 7107, 38377, 307, 257, 2674, 9284, 51216, 51216, 337, 35942, 9284, 13, 51384, 51384, 407, 309, 311, 257, 2674, 9284, 337, 4295, 984, 51508, 51508], "temperature": 0.0, "avg_logprob": -0.6277114466616982, "compression_ratio": 1.6870229007633588, "no_speech_prob": 9.199885425914545e-06}, {"id": 1789, "seek": 529960, "start": 5313.64, "end": 5316.64, "text": " So belief propagation is a general algorithm", "tokens": [50364, 400, 498, 291, 600, 2198, 466, 341, 11, 309, 311, 50478, 50478, 767, 257, 2121, 1389, 295, 264, 370, 12, 11880, 7107, 38377, 50688, 50688, 9284, 13, 50714, 51066, 407, 7107, 38377, 307, 257, 2674, 9284, 51216, 51216, 337, 35942, 9284, 13, 51384, 51384, 407, 309, 311, 257, 2674, 9284, 337, 4295, 984, 51508, 51508], "temperature": 0.0, "avg_logprob": -0.6277114466616982, "compression_ratio": 1.6870229007633588, "no_speech_prob": 9.199885425914545e-06}, {"id": 1790, "seek": 529960, "start": 5316.64, "end": 5320.0, "text": " for graphical algorithm.", "tokens": [50364, 400, 498, 291, 600, 2198, 466, 341, 11, 309, 311, 50478, 50478, 767, 257, 2121, 1389, 295, 264, 370, 12, 11880, 7107, 38377, 50688, 50688, 9284, 13, 50714, 51066, 407, 7107, 38377, 307, 257, 2674, 9284, 51216, 51216, 337, 35942, 9284, 13, 51384, 51384, 407, 309, 311, 257, 2674, 9284, 337, 4295, 984, 51508, 51508], "temperature": 0.0, "avg_logprob": -0.6277114466616982, "compression_ratio": 1.6870229007633588, "no_speech_prob": 9.199885425914545e-06}, {"id": 1791, "seek": 529960, "start": 5320.0, "end": 5322.4800000000005, "text": " So it's a general algorithm for graphically", "tokens": [50364, 400, 498, 291, 600, 2198, 466, 341, 11, 309, 311, 50478, 50478, 767, 257, 2121, 1389, 295, 264, 370, 12, 11880, 7107, 38377, 50688, 50688, 9284, 13, 50714, 51066, 407, 7107, 38377, 307, 257, 2674, 9284, 51216, 51216, 337, 35942, 9284, 13, 51384, 51384, 407, 309, 311, 257, 2674, 9284, 337, 4295, 984, 51508, 51508], "temperature": 0.0, "avg_logprob": -0.6277114466616982, "compression_ratio": 1.6870229007633588, "no_speech_prob": 9.199885425914545e-06}, {"id": 1792, "seek": 532248, "start": 5322.48, "end": 5329.919999999999, "text": " defined models, and the forward algorithm is a special case", "tokens": [50364, 7642, 5245, 11, 293, 264, 2128, 9284, 307, 257, 2121, 1389, 50736, 50736, 562, 428, 4295, 307, 1936, 257, 5021, 4295, 13, 50896, 50896, 2264, 30, 50972, 50972, 583, 286, 478, 406, 516, 281, 352, 666, 341, 13, 51048, 51048, 509, 393, 747, 257, 1164, 322, 5201, 36170, 420, 35942, 5245, 51244, 51244, 420, 31959, 3142, 7150, 13, 51312, 51312, 509, 747, 257, 1164, 365, 16745, 14935, 13, 51384, 51384, 634, 486, 2903, 300, 281, 291, 13, 51548, 51548, 639, 576, 747, 505, 281, 264, 958, 4137, 13, 51706, 51706], "temperature": 0.2, "avg_logprob": -0.5285860559214717, "compression_ratio": 1.5093457943925233, "no_speech_prob": 3.137943849651492e-06}, {"id": 1793, "seek": 532248, "start": 5329.919999999999, "end": 5333.12, "text": " when your graph is basically a chain graph.", "tokens": [50364, 7642, 5245, 11, 293, 264, 2128, 9284, 307, 257, 2121, 1389, 50736, 50736, 562, 428, 4295, 307, 1936, 257, 5021, 4295, 13, 50896, 50896, 2264, 30, 50972, 50972, 583, 286, 478, 406, 516, 281, 352, 666, 341, 13, 51048, 51048, 509, 393, 747, 257, 1164, 322, 5201, 36170, 420, 35942, 5245, 51244, 51244, 420, 31959, 3142, 7150, 13, 51312, 51312, 509, 747, 257, 1164, 365, 16745, 14935, 13, 51384, 51384, 634, 486, 2903, 300, 281, 291, 13, 51548, 51548, 639, 576, 747, 505, 281, 264, 958, 4137, 13, 51706, 51706], "temperature": 0.2, "avg_logprob": -0.5285860559214717, "compression_ratio": 1.5093457943925233, "no_speech_prob": 3.137943849651492e-06}, {"id": 1794, "seek": 532248, "start": 5333.12, "end": 5334.639999999999, "text": " OK?", "tokens": [50364, 7642, 5245, 11, 293, 264, 2128, 9284, 307, 257, 2121, 1389, 50736, 50736, 562, 428, 4295, 307, 1936, 257, 5021, 4295, 13, 50896, 50896, 2264, 30, 50972, 50972, 583, 286, 478, 406, 516, 281, 352, 666, 341, 13, 51048, 51048, 509, 393, 747, 257, 1164, 322, 5201, 36170, 420, 35942, 5245, 51244, 51244, 420, 31959, 3142, 7150, 13, 51312, 51312, 509, 747, 257, 1164, 365, 16745, 14935, 13, 51384, 51384, 634, 486, 2903, 300, 281, 291, 13, 51548, 51548, 639, 576, 747, 505, 281, 264, 958, 4137, 13, 51706, 51706], "temperature": 0.2, "avg_logprob": -0.5285860559214717, "compression_ratio": 1.5093457943925233, "no_speech_prob": 3.137943849651492e-06}, {"id": 1795, "seek": 532248, "start": 5334.639999999999, "end": 5336.16, "text": " But I'm not going to go into this.", "tokens": [50364, 7642, 5245, 11, 293, 264, 2128, 9284, 307, 257, 2121, 1389, 50736, 50736, 562, 428, 4295, 307, 1936, 257, 5021, 4295, 13, 50896, 50896, 2264, 30, 50972, 50972, 583, 286, 478, 406, 516, 281, 352, 666, 341, 13, 51048, 51048, 509, 393, 747, 257, 1164, 322, 5201, 36170, 420, 35942, 5245, 51244, 51244, 420, 31959, 3142, 7150, 13, 51312, 51312, 509, 747, 257, 1164, 365, 16745, 14935, 13, 51384, 51384, 634, 486, 2903, 300, 281, 291, 13, 51548, 51548, 639, 576, 747, 505, 281, 264, 958, 4137, 13, 51706, 51706], "temperature": 0.2, "avg_logprob": -0.5285860559214717, "compression_ratio": 1.5093457943925233, "no_speech_prob": 3.137943849651492e-06}, {"id": 1796, "seek": 532248, "start": 5336.16, "end": 5340.08, "text": " You can take a course on vision nets or graphical models", "tokens": [50364, 7642, 5245, 11, 293, 264, 2128, 9284, 307, 257, 2121, 1389, 50736, 50736, 562, 428, 4295, 307, 1936, 257, 5021, 4295, 13, 50896, 50896, 2264, 30, 50972, 50972, 583, 286, 478, 406, 516, 281, 352, 666, 341, 13, 51048, 51048, 509, 393, 747, 257, 1164, 322, 5201, 36170, 420, 35942, 5245, 51244, 51244, 420, 31959, 3142, 7150, 13, 51312, 51312, 509, 747, 257, 1164, 365, 16745, 14935, 13, 51384, 51384, 634, 486, 2903, 300, 281, 291, 13, 51548, 51548, 639, 576, 747, 505, 281, 264, 958, 4137, 13, 51706, 51706], "temperature": 0.2, "avg_logprob": -0.5285860559214717, "compression_ratio": 1.5093457943925233, "no_speech_prob": 3.137943849651492e-06}, {"id": 1797, "seek": 532248, "start": 5340.08, "end": 5341.44, "text": " or probabilistic methods.", "tokens": [50364, 7642, 5245, 11, 293, 264, 2128, 9284, 307, 257, 2121, 1389, 50736, 50736, 562, 428, 4295, 307, 1936, 257, 5021, 4295, 13, 50896, 50896, 2264, 30, 50972, 50972, 583, 286, 478, 406, 516, 281, 352, 666, 341, 13, 51048, 51048, 509, 393, 747, 257, 1164, 322, 5201, 36170, 420, 35942, 5245, 51244, 51244, 420, 31959, 3142, 7150, 13, 51312, 51312, 509, 747, 257, 1164, 365, 16745, 14935, 13, 51384, 51384, 634, 486, 2903, 300, 281, 291, 13, 51548, 51548, 639, 576, 747, 505, 281, 264, 958, 4137, 13, 51706, 51706], "temperature": 0.2, "avg_logprob": -0.5285860559214717, "compression_ratio": 1.5093457943925233, "no_speech_prob": 3.137943849651492e-06}, {"id": 1798, "seek": 532248, "start": 5341.44, "end": 5342.879999999999, "text": " You take a course with Rajesh.", "tokens": [50364, 7642, 5245, 11, 293, 264, 2128, 9284, 307, 257, 2121, 1389, 50736, 50736, 562, 428, 4295, 307, 1936, 257, 5021, 4295, 13, 50896, 50896, 2264, 30, 50972, 50972, 583, 286, 478, 406, 516, 281, 352, 666, 341, 13, 51048, 51048, 509, 393, 747, 257, 1164, 322, 5201, 36170, 420, 35942, 5245, 51244, 51244, 420, 31959, 3142, 7150, 13, 51312, 51312, 509, 747, 257, 1164, 365, 16745, 14935, 13, 51384, 51384, 634, 486, 2903, 300, 281, 291, 13, 51548, 51548, 639, 576, 747, 505, 281, 264, 958, 4137, 13, 51706, 51706], "temperature": 0.2, "avg_logprob": -0.5285860559214717, "compression_ratio": 1.5093457943925233, "no_speech_prob": 3.137943849651492e-06}, {"id": 1799, "seek": 532248, "start": 5342.879999999999, "end": 5346.16, "text": " He will explain that to you.", "tokens": [50364, 7642, 5245, 11, 293, 264, 2128, 9284, 307, 257, 2121, 1389, 50736, 50736, 562, 428, 4295, 307, 1936, 257, 5021, 4295, 13, 50896, 50896, 2264, 30, 50972, 50972, 583, 286, 478, 406, 516, 281, 352, 666, 341, 13, 51048, 51048, 509, 393, 747, 257, 1164, 322, 5201, 36170, 420, 35942, 5245, 51244, 51244, 420, 31959, 3142, 7150, 13, 51312, 51312, 509, 747, 257, 1164, 365, 16745, 14935, 13, 51384, 51384, 634, 486, 2903, 300, 281, 291, 13, 51548, 51548, 639, 576, 747, 505, 281, 264, 958, 4137, 13, 51706, 51706], "temperature": 0.2, "avg_logprob": -0.5285860559214717, "compression_ratio": 1.5093457943925233, "no_speech_prob": 3.137943849651492e-06}, {"id": 1800, "seek": 532248, "start": 5346.16, "end": 5349.32, "text": " This would take us to the next slide.", "tokens": [50364, 7642, 5245, 11, 293, 264, 2128, 9284, 307, 257, 2121, 1389, 50736, 50736, 562, 428, 4295, 307, 1936, 257, 5021, 4295, 13, 50896, 50896, 2264, 30, 50972, 50972, 583, 286, 478, 406, 516, 281, 352, 666, 341, 13, 51048, 51048, 509, 393, 747, 257, 1164, 322, 5201, 36170, 420, 35942, 5245, 51244, 51244, 420, 31959, 3142, 7150, 13, 51312, 51312, 509, 747, 257, 1164, 365, 16745, 14935, 13, 51384, 51384, 634, 486, 2903, 300, 281, 291, 13, 51548, 51548, 639, 576, 747, 505, 281, 264, 958, 4137, 13, 51706, 51706], "temperature": 0.2, "avg_logprob": -0.5285860559214717, "compression_ratio": 1.5093457943925233, "no_speech_prob": 3.137943849651492e-06}, {"id": 1801, "seek": 534932, "start": 5349.32, "end": 5352.719999999999, "text": " This would take us too far.", "tokens": [50364, 639, 576, 747, 505, 886, 1400, 13, 50534, 50534, 583, 300, 576, 312, 733, 295, 264, 551, 13, 50714, 50714, 2264, 11, 370, 586, 341, 307, 445, 257, 3154, 13305, 18161, 2533, 50944, 50944, 689, 1936, 689, 264, 2445, 412, 1184, 9984, 51188, 51188, 307, 257, 3565, 295, 2408, 295, 21510, 82, 1804, 4500, 295, 512, 1433, 13, 51458, 51458, 1779, 30, 51508, 51508, 639, 307, 257, 18161, 2533, 689, 8961, 741, 307, 264, 24433, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.312660289716117, "compression_ratio": 1.5271739130434783, "no_speech_prob": 7.18279034117586e-06}, {"id": 1802, "seek": 534932, "start": 5352.719999999999, "end": 5356.32, "text": " But that would be kind of the thing.", "tokens": [50364, 639, 576, 747, 505, 886, 1400, 13, 50534, 50534, 583, 300, 576, 312, 733, 295, 264, 551, 13, 50714, 50714, 2264, 11, 370, 586, 341, 307, 445, 257, 3154, 13305, 18161, 2533, 50944, 50944, 689, 1936, 689, 264, 2445, 412, 1184, 9984, 51188, 51188, 307, 257, 3565, 295, 2408, 295, 21510, 82, 1804, 4500, 295, 512, 1433, 13, 51458, 51458, 1779, 30, 51508, 51508, 639, 307, 257, 18161, 2533, 689, 8961, 741, 307, 264, 24433, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.312660289716117, "compression_ratio": 1.5271739130434783, "no_speech_prob": 7.18279034117586e-06}, {"id": 1803, "seek": 534932, "start": 5356.32, "end": 5360.92, "text": " OK, so now this is just a feedforward neural net", "tokens": [50364, 639, 576, 747, 505, 886, 1400, 13, 50534, 50534, 583, 300, 576, 312, 733, 295, 264, 551, 13, 50714, 50714, 2264, 11, 370, 586, 341, 307, 445, 257, 3154, 13305, 18161, 2533, 50944, 50944, 689, 1936, 689, 264, 2445, 412, 1184, 9984, 51188, 51188, 307, 257, 3565, 295, 2408, 295, 21510, 82, 1804, 4500, 295, 512, 1433, 13, 51458, 51458, 1779, 30, 51508, 51508, 639, 307, 257, 18161, 2533, 689, 8961, 741, 307, 264, 24433, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.312660289716117, "compression_ratio": 1.5271739130434783, "no_speech_prob": 7.18279034117586e-06}, {"id": 1804, "seek": 534932, "start": 5360.92, "end": 5365.799999999999, "text": " where basically where the function at each node", "tokens": [50364, 639, 576, 747, 505, 886, 1400, 13, 50534, 50534, 583, 300, 576, 312, 733, 295, 264, 551, 13, 50714, 50714, 2264, 11, 370, 586, 341, 307, 445, 257, 3154, 13305, 18161, 2533, 50944, 50944, 689, 1936, 689, 264, 2445, 412, 1184, 9984, 51188, 51188, 307, 257, 3565, 295, 2408, 295, 21510, 82, 1804, 4500, 295, 512, 1433, 13, 51458, 51458, 1779, 30, 51508, 51508, 639, 307, 257, 18161, 2533, 689, 8961, 741, 307, 264, 24433, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.312660289716117, "compression_ratio": 1.5271739130434783, "no_speech_prob": 7.18279034117586e-06}, {"id": 1805, "seek": 534932, "start": 5365.799999999999, "end": 5371.2, "text": " is a log of sum of exponentials plus addition of some term.", "tokens": [50364, 639, 576, 747, 505, 886, 1400, 13, 50534, 50534, 583, 300, 576, 312, 733, 295, 264, 551, 13, 50714, 50714, 2264, 11, 370, 586, 341, 307, 445, 257, 3154, 13305, 18161, 2533, 50944, 50944, 689, 1936, 689, 264, 2445, 412, 1184, 9984, 51188, 51188, 307, 257, 3565, 295, 2408, 295, 21510, 82, 1804, 4500, 295, 512, 1433, 13, 51458, 51458, 1779, 30, 51508, 51508, 639, 307, 257, 18161, 2533, 689, 8961, 741, 307, 264, 24433, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.312660289716117, "compression_ratio": 1.5271739130434783, "no_speech_prob": 7.18279034117586e-06}, {"id": 1806, "seek": 534932, "start": 5371.2, "end": 5372.2, "text": " Right?", "tokens": [50364, 639, 576, 747, 505, 886, 1400, 13, 50534, 50534, 583, 300, 576, 312, 733, 295, 264, 551, 13, 50714, 50714, 2264, 11, 370, 586, 341, 307, 445, 257, 3154, 13305, 18161, 2533, 50944, 50944, 689, 1936, 689, 264, 2445, 412, 1184, 9984, 51188, 51188, 307, 257, 3565, 295, 2408, 295, 21510, 82, 1804, 4500, 295, 512, 1433, 13, 51458, 51458, 1779, 30, 51508, 51508, 639, 307, 257, 18161, 2533, 689, 8961, 741, 307, 264, 24433, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.312660289716117, "compression_ratio": 1.5271739130434783, "no_speech_prob": 7.18279034117586e-06}, {"id": 1807, "seek": 534932, "start": 5372.2, "end": 5375.88, "text": " This is a neural net where alpha i is the activation", "tokens": [50364, 639, 576, 747, 505, 886, 1400, 13, 50534, 50534, 583, 300, 576, 312, 733, 295, 264, 551, 13, 50714, 50714, 2264, 11, 370, 586, 341, 307, 445, 257, 3154, 13305, 18161, 2533, 50944, 50944, 689, 1936, 689, 264, 2445, 412, 1184, 9984, 51188, 51188, 307, 257, 3565, 295, 2408, 295, 21510, 82, 1804, 4500, 295, 512, 1433, 13, 51458, 51458, 1779, 30, 51508, 51508, 639, 307, 257, 18161, 2533, 689, 8961, 741, 307, 264, 24433, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.312660289716117, "compression_ratio": 1.5271739130434783, "no_speech_prob": 7.18279034117586e-06}, {"id": 1808, "seek": 537588, "start": 5375.88, "end": 5380.04, "text": " and of the neurons, if you want, the nodes.", "tokens": [50364, 293, 295, 264, 22027, 11, 498, 291, 528, 11, 264, 13891, 13, 50572, 50572, 400, 264, 17443, 366, 729, 308, 295, 6315, 300, 2113, 4985, 350, 281, 4985, 741, 13, 51008, 51008, 2264, 30, 51034, 51034, 400, 264, 7705, 291, 360, 307, 3565, 2408, 21510, 82, 13, 51154, 51154, 407, 2602, 295, 257, 18161, 2533, 294, 597, 291, 360, 257, 1674, 51328, 51328, 538, 257, 3364, 293, 550, 291, 2408, 264, 3383, 11, 51480, 51480, 510, 291, 909, 264, 17443, 293, 550, 291, 51588, 51588, 360, 257, 3565, 2408, 21510, 13, 51700, 51700, 967, 19983, 984, 11, 309, 311, 767, 2681, 281, 264, 2408, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.2854899123862938, "compression_ratio": 1.7345971563981042, "no_speech_prob": 1.0781933269754518e-05}, {"id": 1809, "seek": 537588, "start": 5380.04, "end": 5388.76, "text": " And the weights are those e of ki that link unit k to unit i.", "tokens": [50364, 293, 295, 264, 22027, 11, 498, 291, 528, 11, 264, 13891, 13, 50572, 50572, 400, 264, 17443, 366, 729, 308, 295, 6315, 300, 2113, 4985, 350, 281, 4985, 741, 13, 51008, 51008, 2264, 30, 51034, 51034, 400, 264, 7705, 291, 360, 307, 3565, 2408, 21510, 82, 13, 51154, 51154, 407, 2602, 295, 257, 18161, 2533, 294, 597, 291, 360, 257, 1674, 51328, 51328, 538, 257, 3364, 293, 550, 291, 2408, 264, 3383, 11, 51480, 51480, 510, 291, 909, 264, 17443, 293, 550, 291, 51588, 51588, 360, 257, 3565, 2408, 21510, 13, 51700, 51700, 967, 19983, 984, 11, 309, 311, 767, 2681, 281, 264, 2408, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.2854899123862938, "compression_ratio": 1.7345971563981042, "no_speech_prob": 1.0781933269754518e-05}, {"id": 1810, "seek": 537588, "start": 5388.76, "end": 5389.28, "text": " OK?", "tokens": [50364, 293, 295, 264, 22027, 11, 498, 291, 528, 11, 264, 13891, 13, 50572, 50572, 400, 264, 17443, 366, 729, 308, 295, 6315, 300, 2113, 4985, 350, 281, 4985, 741, 13, 51008, 51008, 2264, 30, 51034, 51034, 400, 264, 7705, 291, 360, 307, 3565, 2408, 21510, 82, 13, 51154, 51154, 407, 2602, 295, 257, 18161, 2533, 294, 597, 291, 360, 257, 1674, 51328, 51328, 538, 257, 3364, 293, 550, 291, 2408, 264, 3383, 11, 51480, 51480, 510, 291, 909, 264, 17443, 293, 550, 291, 51588, 51588, 360, 257, 3565, 2408, 21510, 13, 51700, 51700, 967, 19983, 984, 11, 309, 311, 767, 2681, 281, 264, 2408, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.2854899123862938, "compression_ratio": 1.7345971563981042, "no_speech_prob": 1.0781933269754518e-05}, {"id": 1811, "seek": 537588, "start": 5389.28, "end": 5391.68, "text": " And the operations you do is log sum exponentials.", "tokens": [50364, 293, 295, 264, 22027, 11, 498, 291, 528, 11, 264, 13891, 13, 50572, 50572, 400, 264, 17443, 366, 729, 308, 295, 6315, 300, 2113, 4985, 350, 281, 4985, 741, 13, 51008, 51008, 2264, 30, 51034, 51034, 400, 264, 7705, 291, 360, 307, 3565, 2408, 21510, 82, 13, 51154, 51154, 407, 2602, 295, 257, 18161, 2533, 294, 597, 291, 360, 257, 1674, 51328, 51328, 538, 257, 3364, 293, 550, 291, 2408, 264, 3383, 11, 51480, 51480, 510, 291, 909, 264, 17443, 293, 550, 291, 51588, 51588, 360, 257, 3565, 2408, 21510, 13, 51700, 51700, 967, 19983, 984, 11, 309, 311, 767, 2681, 281, 264, 2408, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.2854899123862938, "compression_ratio": 1.7345971563981042, "no_speech_prob": 1.0781933269754518e-05}, {"id": 1812, "seek": 537588, "start": 5391.68, "end": 5395.16, "text": " So instead of a neural net in which you do a product", "tokens": [50364, 293, 295, 264, 22027, 11, 498, 291, 528, 11, 264, 13891, 13, 50572, 50572, 400, 264, 17443, 366, 729, 308, 295, 6315, 300, 2113, 4985, 350, 281, 4985, 741, 13, 51008, 51008, 2264, 30, 51034, 51034, 400, 264, 7705, 291, 360, 307, 3565, 2408, 21510, 82, 13, 51154, 51154, 407, 2602, 295, 257, 18161, 2533, 294, 597, 291, 360, 257, 1674, 51328, 51328, 538, 257, 3364, 293, 550, 291, 2408, 264, 3383, 11, 51480, 51480, 510, 291, 909, 264, 17443, 293, 550, 291, 51588, 51588, 360, 257, 3565, 2408, 21510, 13, 51700, 51700, 967, 19983, 984, 11, 309, 311, 767, 2681, 281, 264, 2408, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.2854899123862938, "compression_ratio": 1.7345971563981042, "no_speech_prob": 1.0781933269754518e-05}, {"id": 1813, "seek": 537588, "start": 5395.16, "end": 5398.2, "text": " by a weight and then you sum the products,", "tokens": [50364, 293, 295, 264, 22027, 11, 498, 291, 528, 11, 264, 13891, 13, 50572, 50572, 400, 264, 17443, 366, 729, 308, 295, 6315, 300, 2113, 4985, 350, 281, 4985, 741, 13, 51008, 51008, 2264, 30, 51034, 51034, 400, 264, 7705, 291, 360, 307, 3565, 2408, 21510, 82, 13, 51154, 51154, 407, 2602, 295, 257, 18161, 2533, 294, 597, 291, 360, 257, 1674, 51328, 51328, 538, 257, 3364, 293, 550, 291, 2408, 264, 3383, 11, 51480, 51480, 510, 291, 909, 264, 17443, 293, 550, 291, 51588, 51588, 360, 257, 3565, 2408, 21510, 13, 51700, 51700, 967, 19983, 984, 11, 309, 311, 767, 2681, 281, 264, 2408, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.2854899123862938, "compression_ratio": 1.7345971563981042, "no_speech_prob": 1.0781933269754518e-05}, {"id": 1814, "seek": 537588, "start": 5398.2, "end": 5400.36, "text": " here you add the weights and then you", "tokens": [50364, 293, 295, 264, 22027, 11, 498, 291, 528, 11, 264, 13891, 13, 50572, 50572, 400, 264, 17443, 366, 729, 308, 295, 6315, 300, 2113, 4985, 350, 281, 4985, 741, 13, 51008, 51008, 2264, 30, 51034, 51034, 400, 264, 7705, 291, 360, 307, 3565, 2408, 21510, 82, 13, 51154, 51154, 407, 2602, 295, 257, 18161, 2533, 294, 597, 291, 360, 257, 1674, 51328, 51328, 538, 257, 3364, 293, 550, 291, 2408, 264, 3383, 11, 51480, 51480, 510, 291, 909, 264, 17443, 293, 550, 291, 51588, 51588, 360, 257, 3565, 2408, 21510, 13, 51700, 51700, 967, 19983, 984, 11, 309, 311, 767, 2681, 281, 264, 2408, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.2854899123862938, "compression_ratio": 1.7345971563981042, "no_speech_prob": 1.0781933269754518e-05}, {"id": 1815, "seek": 537588, "start": 5400.36, "end": 5402.6, "text": " do a log sum exponential.", "tokens": [50364, 293, 295, 264, 22027, 11, 498, 291, 528, 11, 264, 13891, 13, 50572, 50572, 400, 264, 17443, 366, 729, 308, 295, 6315, 300, 2113, 4985, 350, 281, 4985, 741, 13, 51008, 51008, 2264, 30, 51034, 51034, 400, 264, 7705, 291, 360, 307, 3565, 2408, 21510, 82, 13, 51154, 51154, 407, 2602, 295, 257, 18161, 2533, 294, 597, 291, 360, 257, 1674, 51328, 51328, 538, 257, 3364, 293, 550, 291, 2408, 264, 3383, 11, 51480, 51480, 510, 291, 909, 264, 17443, 293, 550, 291, 51588, 51588, 360, 257, 3565, 2408, 21510, 13, 51700, 51700, 967, 19983, 984, 11, 309, 311, 767, 2681, 281, 264, 2408, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.2854899123862938, "compression_ratio": 1.7345971563981042, "no_speech_prob": 1.0781933269754518e-05}, {"id": 1816, "seek": 537588, "start": 5402.6, "end": 5404.68, "text": " Algebraically, it's actually equal to the sum", "tokens": [50364, 293, 295, 264, 22027, 11, 498, 291, 528, 11, 264, 13891, 13, 50572, 50572, 400, 264, 17443, 366, 729, 308, 295, 6315, 300, 2113, 4985, 350, 281, 4985, 741, 13, 51008, 51008, 2264, 30, 51034, 51034, 400, 264, 7705, 291, 360, 307, 3565, 2408, 21510, 82, 13, 51154, 51154, 407, 2602, 295, 257, 18161, 2533, 294, 597, 291, 360, 257, 1674, 51328, 51328, 538, 257, 3364, 293, 550, 291, 2408, 264, 3383, 11, 51480, 51480, 510, 291, 909, 264, 17443, 293, 550, 291, 51588, 51588, 360, 257, 3565, 2408, 21510, 13, 51700, 51700, 967, 19983, 984, 11, 309, 311, 767, 2681, 281, 264, 2408, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.2854899123862938, "compression_ratio": 1.7345971563981042, "no_speech_prob": 1.0781933269754518e-05}, {"id": 1817, "seek": 540468, "start": 5404.68, "end": 5407.400000000001, "text": " algebraically, it's actually equivalent.", "tokens": [50364, 21989, 984, 11, 309, 311, 767, 10344, 13, 50500, 50500, 639, 307, 411, 32807, 2408, 294, 264, 3565, 9274, 13, 50616, 50752, 2264, 30, 50794, 50794, 583, 264, 935, 307, 291, 393, 360, 341, 2128, 2365, 11, 50946, 50946, 341, 2128, 9284, 11, 293, 291, 393, 646, 48256, 16235, 13, 51060, 51060, 407, 2035, 283, 291, 483, 412, 264, 917, 11, 538, 264, 565, 51200, 51200, 291, 600, 1190, 807, 341, 3209, 11, 412, 264, 917, 510, 11, 51368, 51368, 291, 1936, 483, 283, 295, 2031, 11, 288, 13, 51600, 51600, 440, 2158, 295, 300, 9984, 11, 264, 8961, 510, 11, 307, 283, 295, 2031, 11, 288, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16834921496255056, "compression_ratio": 1.6419213973799127, "no_speech_prob": 7.571053970423236e-07}, {"id": 1818, "seek": 540468, "start": 5407.400000000001, "end": 5409.72, "text": " This is like weighted sum in the log domain.", "tokens": [50364, 21989, 984, 11, 309, 311, 767, 10344, 13, 50500, 50500, 639, 307, 411, 32807, 2408, 294, 264, 3565, 9274, 13, 50616, 50752, 2264, 30, 50794, 50794, 583, 264, 935, 307, 291, 393, 360, 341, 2128, 2365, 11, 50946, 50946, 341, 2128, 9284, 11, 293, 291, 393, 646, 48256, 16235, 13, 51060, 51060, 407, 2035, 283, 291, 483, 412, 264, 917, 11, 538, 264, 565, 51200, 51200, 291, 600, 1190, 807, 341, 3209, 11, 412, 264, 917, 510, 11, 51368, 51368, 291, 1936, 483, 283, 295, 2031, 11, 288, 13, 51600, 51600, 440, 2158, 295, 300, 9984, 11, 264, 8961, 510, 11, 307, 283, 295, 2031, 11, 288, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16834921496255056, "compression_ratio": 1.6419213973799127, "no_speech_prob": 7.571053970423236e-07}, {"id": 1819, "seek": 540468, "start": 5412.4400000000005, "end": 5413.280000000001, "text": " OK?", "tokens": [50364, 21989, 984, 11, 309, 311, 767, 10344, 13, 50500, 50500, 639, 307, 411, 32807, 2408, 294, 264, 3565, 9274, 13, 50616, 50752, 2264, 30, 50794, 50794, 583, 264, 935, 307, 291, 393, 360, 341, 2128, 2365, 11, 50946, 50946, 341, 2128, 9284, 11, 293, 291, 393, 646, 48256, 16235, 13, 51060, 51060, 407, 2035, 283, 291, 483, 412, 264, 917, 11, 538, 264, 565, 51200, 51200, 291, 600, 1190, 807, 341, 3209, 11, 412, 264, 917, 510, 11, 51368, 51368, 291, 1936, 483, 283, 295, 2031, 11, 288, 13, 51600, 51600, 440, 2158, 295, 300, 9984, 11, 264, 8961, 510, 11, 307, 283, 295, 2031, 11, 288, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16834921496255056, "compression_ratio": 1.6419213973799127, "no_speech_prob": 7.571053970423236e-07}, {"id": 1820, "seek": 540468, "start": 5413.280000000001, "end": 5416.320000000001, "text": " But the point is you can do this forward prop,", "tokens": [50364, 21989, 984, 11, 309, 311, 767, 10344, 13, 50500, 50500, 639, 307, 411, 32807, 2408, 294, 264, 3565, 9274, 13, 50616, 50752, 2264, 30, 50794, 50794, 583, 264, 935, 307, 291, 393, 360, 341, 2128, 2365, 11, 50946, 50946, 341, 2128, 9284, 11, 293, 291, 393, 646, 48256, 16235, 13, 51060, 51060, 407, 2035, 283, 291, 483, 412, 264, 917, 11, 538, 264, 565, 51200, 51200, 291, 600, 1190, 807, 341, 3209, 11, 412, 264, 917, 510, 11, 51368, 51368, 291, 1936, 483, 283, 295, 2031, 11, 288, 13, 51600, 51600, 440, 2158, 295, 300, 9984, 11, 264, 8961, 510, 11, 307, 283, 295, 2031, 11, 288, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16834921496255056, "compression_ratio": 1.6419213973799127, "no_speech_prob": 7.571053970423236e-07}, {"id": 1821, "seek": 540468, "start": 5416.320000000001, "end": 5418.6, "text": " this forward algorithm, and you can back propagate gradient.", "tokens": [50364, 21989, 984, 11, 309, 311, 767, 10344, 13, 50500, 50500, 639, 307, 411, 32807, 2408, 294, 264, 3565, 9274, 13, 50616, 50752, 2264, 30, 50794, 50794, 583, 264, 935, 307, 291, 393, 360, 341, 2128, 2365, 11, 50946, 50946, 341, 2128, 9284, 11, 293, 291, 393, 646, 48256, 16235, 13, 51060, 51060, 407, 2035, 283, 291, 483, 412, 264, 917, 11, 538, 264, 565, 51200, 51200, 291, 600, 1190, 807, 341, 3209, 11, 412, 264, 917, 510, 11, 51368, 51368, 291, 1936, 483, 283, 295, 2031, 11, 288, 13, 51600, 51600, 440, 2158, 295, 300, 9984, 11, 264, 8961, 510, 11, 307, 283, 295, 2031, 11, 288, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16834921496255056, "compression_ratio": 1.6419213973799127, "no_speech_prob": 7.571053970423236e-07}, {"id": 1822, "seek": 540468, "start": 5418.6, "end": 5421.400000000001, "text": " So whatever f you get at the end, by the time", "tokens": [50364, 21989, 984, 11, 309, 311, 767, 10344, 13, 50500, 50500, 639, 307, 411, 32807, 2408, 294, 264, 3565, 9274, 13, 50616, 50752, 2264, 30, 50794, 50794, 583, 264, 935, 307, 291, 393, 360, 341, 2128, 2365, 11, 50946, 50946, 341, 2128, 9284, 11, 293, 291, 393, 646, 48256, 16235, 13, 51060, 51060, 407, 2035, 283, 291, 483, 412, 264, 917, 11, 538, 264, 565, 51200, 51200, 291, 600, 1190, 807, 341, 3209, 11, 412, 264, 917, 510, 11, 51368, 51368, 291, 1936, 483, 283, 295, 2031, 11, 288, 13, 51600, 51600, 440, 2158, 295, 300, 9984, 11, 264, 8961, 510, 11, 307, 283, 295, 2031, 11, 288, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16834921496255056, "compression_ratio": 1.6419213973799127, "no_speech_prob": 7.571053970423236e-07}, {"id": 1823, "seek": 540468, "start": 5421.400000000001, "end": 5424.76, "text": " you've run through this network, at the end here,", "tokens": [50364, 21989, 984, 11, 309, 311, 767, 10344, 13, 50500, 50500, 639, 307, 411, 32807, 2408, 294, 264, 3565, 9274, 13, 50616, 50752, 2264, 30, 50794, 50794, 583, 264, 935, 307, 291, 393, 360, 341, 2128, 2365, 11, 50946, 50946, 341, 2128, 9284, 11, 293, 291, 393, 646, 48256, 16235, 13, 51060, 51060, 407, 2035, 283, 291, 483, 412, 264, 917, 11, 538, 264, 565, 51200, 51200, 291, 600, 1190, 807, 341, 3209, 11, 412, 264, 917, 510, 11, 51368, 51368, 291, 1936, 483, 283, 295, 2031, 11, 288, 13, 51600, 51600, 440, 2158, 295, 300, 9984, 11, 264, 8961, 510, 11, 307, 283, 295, 2031, 11, 288, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16834921496255056, "compression_ratio": 1.6419213973799127, "no_speech_prob": 7.571053970423236e-07}, {"id": 1824, "seek": 540468, "start": 5424.76, "end": 5429.400000000001, "text": " you basically get f of x, y.", "tokens": [50364, 21989, 984, 11, 309, 311, 767, 10344, 13, 50500, 50500, 639, 307, 411, 32807, 2408, 294, 264, 3565, 9274, 13, 50616, 50752, 2264, 30, 50794, 50794, 583, 264, 935, 307, 291, 393, 360, 341, 2128, 2365, 11, 50946, 50946, 341, 2128, 9284, 11, 293, 291, 393, 646, 48256, 16235, 13, 51060, 51060, 407, 2035, 283, 291, 483, 412, 264, 917, 11, 538, 264, 565, 51200, 51200, 291, 600, 1190, 807, 341, 3209, 11, 412, 264, 917, 510, 11, 51368, 51368, 291, 1936, 483, 283, 295, 2031, 11, 288, 13, 51600, 51600, 440, 2158, 295, 300, 9984, 11, 264, 8961, 510, 11, 307, 283, 295, 2031, 11, 288, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16834921496255056, "compression_ratio": 1.6419213973799127, "no_speech_prob": 7.571053970423236e-07}, {"id": 1825, "seek": 540468, "start": 5429.400000000001, "end": 5434.280000000001, "text": " The value of that node, the alpha here, is f of x, y.", "tokens": [50364, 21989, 984, 11, 309, 311, 767, 10344, 13, 50500, 50500, 639, 307, 411, 32807, 2408, 294, 264, 3565, 9274, 13, 50616, 50752, 2264, 30, 50794, 50794, 583, 264, 935, 307, 291, 393, 360, 341, 2128, 2365, 11, 50946, 50946, 341, 2128, 9284, 11, 293, 291, 393, 646, 48256, 16235, 13, 51060, 51060, 407, 2035, 283, 291, 483, 412, 264, 917, 11, 538, 264, 565, 51200, 51200, 291, 600, 1190, 807, 341, 3209, 11, 412, 264, 917, 510, 11, 51368, 51368, 291, 1936, 483, 283, 295, 2031, 11, 288, 13, 51600, 51600, 440, 2158, 295, 300, 9984, 11, 264, 8961, 510, 11, 307, 283, 295, 2031, 11, 288, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16834921496255056, "compression_ratio": 1.6419213973799127, "no_speech_prob": 7.571053970423236e-07}, {"id": 1826, "seek": 543428, "start": 5434.28, "end": 5438.28, "text": " And you've eliminated z by doing this log of sum", "tokens": [50364, 400, 291, 600, 20308, 710, 538, 884, 341, 3565, 295, 2408, 50564, 50564, 295, 21510, 82, 670, 439, 14518, 13, 50632, 50808, 1779, 30, 50850, 50850, 823, 11, 498, 291, 528, 281, 14722, 264, 16235, 295, 283, 295, 2031, 11, 288, 51046, 51046, 365, 3104, 281, 1184, 295, 264, 308, 11, 6315, 11, 597, 2969, 1391, 51194, 51194, 366, 23930, 295, 512, 18161, 2533, 11, 291, 393, 360, 300, 13, 51298, 51298, 509, 393, 646, 48256, 807, 341, 3209, 13, 51404, 51404, 2264, 30, 51430, 51430, 467, 311, 257, 18161, 2533, 6104, 11, 797, 11, 6104, 3877, 307, 8546, 13, 51648, 51648, 467, 2962, 490, 1365, 281, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17174908123185148, "compression_ratio": 1.5348837209302326, "no_speech_prob": 5.593954483629204e-06}, {"id": 1827, "seek": 543428, "start": 5438.28, "end": 5439.639999999999, "text": " of exponentials over all paths.", "tokens": [50364, 400, 291, 600, 20308, 710, 538, 884, 341, 3565, 295, 2408, 50564, 50564, 295, 21510, 82, 670, 439, 14518, 13, 50632, 50808, 1779, 30, 50850, 50850, 823, 11, 498, 291, 528, 281, 14722, 264, 16235, 295, 283, 295, 2031, 11, 288, 51046, 51046, 365, 3104, 281, 1184, 295, 264, 308, 11, 6315, 11, 597, 2969, 1391, 51194, 51194, 366, 23930, 295, 512, 18161, 2533, 11, 291, 393, 360, 300, 13, 51298, 51298, 509, 393, 646, 48256, 807, 341, 3209, 13, 51404, 51404, 2264, 30, 51430, 51430, 467, 311, 257, 18161, 2533, 6104, 11, 797, 11, 6104, 3877, 307, 8546, 13, 51648, 51648, 467, 2962, 490, 1365, 281, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17174908123185148, "compression_ratio": 1.5348837209302326, "no_speech_prob": 5.593954483629204e-06}, {"id": 1828, "seek": 543428, "start": 5443.16, "end": 5444.0, "text": " Right?", "tokens": [50364, 400, 291, 600, 20308, 710, 538, 884, 341, 3565, 295, 2408, 50564, 50564, 295, 21510, 82, 670, 439, 14518, 13, 50632, 50808, 1779, 30, 50850, 50850, 823, 11, 498, 291, 528, 281, 14722, 264, 16235, 295, 283, 295, 2031, 11, 288, 51046, 51046, 365, 3104, 281, 1184, 295, 264, 308, 11, 6315, 11, 597, 2969, 1391, 51194, 51194, 366, 23930, 295, 512, 18161, 2533, 11, 291, 393, 360, 300, 13, 51298, 51298, 509, 393, 646, 48256, 807, 341, 3209, 13, 51404, 51404, 2264, 30, 51430, 51430, 467, 311, 257, 18161, 2533, 6104, 11, 797, 11, 6104, 3877, 307, 8546, 13, 51648, 51648, 467, 2962, 490, 1365, 281, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17174908123185148, "compression_ratio": 1.5348837209302326, "no_speech_prob": 5.593954483629204e-06}, {"id": 1829, "seek": 543428, "start": 5444.0, "end": 5447.92, "text": " Now, if you want to compute the gradient of f of x, y", "tokens": [50364, 400, 291, 600, 20308, 710, 538, 884, 341, 3565, 295, 2408, 50564, 50564, 295, 21510, 82, 670, 439, 14518, 13, 50632, 50808, 1779, 30, 50850, 50850, 823, 11, 498, 291, 528, 281, 14722, 264, 16235, 295, 283, 295, 2031, 11, 288, 51046, 51046, 365, 3104, 281, 1184, 295, 264, 308, 11, 6315, 11, 597, 2969, 1391, 51194, 51194, 366, 23930, 295, 512, 18161, 2533, 11, 291, 393, 360, 300, 13, 51298, 51298, 509, 393, 646, 48256, 807, 341, 3209, 13, 51404, 51404, 2264, 30, 51430, 51430, 467, 311, 257, 18161, 2533, 6104, 11, 797, 11, 6104, 3877, 307, 8546, 13, 51648, 51648, 467, 2962, 490, 1365, 281, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17174908123185148, "compression_ratio": 1.5348837209302326, "no_speech_prob": 5.593954483629204e-06}, {"id": 1830, "seek": 543428, "start": 5447.92, "end": 5450.88, "text": " with respect to each of the e, ki, which themselves probably", "tokens": [50364, 400, 291, 600, 20308, 710, 538, 884, 341, 3565, 295, 2408, 50564, 50564, 295, 21510, 82, 670, 439, 14518, 13, 50632, 50808, 1779, 30, 50850, 50850, 823, 11, 498, 291, 528, 281, 14722, 264, 16235, 295, 283, 295, 2031, 11, 288, 51046, 51046, 365, 3104, 281, 1184, 295, 264, 308, 11, 6315, 11, 597, 2969, 1391, 51194, 51194, 366, 23930, 295, 512, 18161, 2533, 11, 291, 393, 360, 300, 13, 51298, 51298, 509, 393, 646, 48256, 807, 341, 3209, 13, 51404, 51404, 2264, 30, 51430, 51430, 467, 311, 257, 18161, 2533, 6104, 11, 797, 11, 6104, 3877, 307, 8546, 13, 51648, 51648, 467, 2962, 490, 1365, 281, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17174908123185148, "compression_ratio": 1.5348837209302326, "no_speech_prob": 5.593954483629204e-06}, {"id": 1831, "seek": 543428, "start": 5450.88, "end": 5452.96, "text": " are outputs of some neural net, you can do that.", "tokens": [50364, 400, 291, 600, 20308, 710, 538, 884, 341, 3565, 295, 2408, 50564, 50564, 295, 21510, 82, 670, 439, 14518, 13, 50632, 50808, 1779, 30, 50850, 50850, 823, 11, 498, 291, 528, 281, 14722, 264, 16235, 295, 283, 295, 2031, 11, 288, 51046, 51046, 365, 3104, 281, 1184, 295, 264, 308, 11, 6315, 11, 597, 2969, 1391, 51194, 51194, 366, 23930, 295, 512, 18161, 2533, 11, 291, 393, 360, 300, 13, 51298, 51298, 509, 393, 646, 48256, 807, 341, 3209, 13, 51404, 51404, 2264, 30, 51430, 51430, 467, 311, 257, 18161, 2533, 6104, 11, 797, 11, 6104, 3877, 307, 8546, 13, 51648, 51648, 467, 2962, 490, 1365, 281, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17174908123185148, "compression_ratio": 1.5348837209302326, "no_speech_prob": 5.593954483629204e-06}, {"id": 1832, "seek": 543428, "start": 5452.96, "end": 5455.08, "text": " You can back propagate through this network.", "tokens": [50364, 400, 291, 600, 20308, 710, 538, 884, 341, 3565, 295, 2408, 50564, 50564, 295, 21510, 82, 670, 439, 14518, 13, 50632, 50808, 1779, 30, 50850, 50850, 823, 11, 498, 291, 528, 281, 14722, 264, 16235, 295, 283, 295, 2031, 11, 288, 51046, 51046, 365, 3104, 281, 1184, 295, 264, 308, 11, 6315, 11, 597, 2969, 1391, 51194, 51194, 366, 23930, 295, 512, 18161, 2533, 11, 291, 393, 360, 300, 13, 51298, 51298, 509, 393, 646, 48256, 807, 341, 3209, 13, 51404, 51404, 2264, 30, 51430, 51430, 467, 311, 257, 18161, 2533, 6104, 11, 797, 11, 6104, 3877, 307, 8546, 13, 51648, 51648, 467, 2962, 490, 1365, 281, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17174908123185148, "compression_ratio": 1.5348837209302326, "no_speech_prob": 5.593954483629204e-06}, {"id": 1833, "seek": 543428, "start": 5455.08, "end": 5455.599999999999, "text": " OK?", "tokens": [50364, 400, 291, 600, 20308, 710, 538, 884, 341, 3565, 295, 2408, 50564, 50564, 295, 21510, 82, 670, 439, 14518, 13, 50632, 50808, 1779, 30, 50850, 50850, 823, 11, 498, 291, 528, 281, 14722, 264, 16235, 295, 283, 295, 2031, 11, 288, 51046, 51046, 365, 3104, 281, 1184, 295, 264, 308, 11, 6315, 11, 597, 2969, 1391, 51194, 51194, 366, 23930, 295, 512, 18161, 2533, 11, 291, 393, 360, 300, 13, 51298, 51298, 509, 393, 646, 48256, 807, 341, 3209, 13, 51404, 51404, 2264, 30, 51430, 51430, 467, 311, 257, 18161, 2533, 6104, 11, 797, 11, 6104, 3877, 307, 8546, 13, 51648, 51648, 467, 2962, 490, 1365, 281, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17174908123185148, "compression_ratio": 1.5348837209302326, "no_speech_prob": 5.593954483629204e-06}, {"id": 1834, "seek": 543428, "start": 5455.599999999999, "end": 5459.96, "text": " It's a neural net whose, again, whose structure is dynamic.", "tokens": [50364, 400, 291, 600, 20308, 710, 538, 884, 341, 3565, 295, 2408, 50564, 50564, 295, 21510, 82, 670, 439, 14518, 13, 50632, 50808, 1779, 30, 50850, 50850, 823, 11, 498, 291, 528, 281, 14722, 264, 16235, 295, 283, 295, 2031, 11, 288, 51046, 51046, 365, 3104, 281, 1184, 295, 264, 308, 11, 6315, 11, 597, 2969, 1391, 51194, 51194, 366, 23930, 295, 512, 18161, 2533, 11, 291, 393, 360, 300, 13, 51298, 51298, 509, 393, 646, 48256, 807, 341, 3209, 13, 51404, 51404, 2264, 30, 51430, 51430, 467, 311, 257, 18161, 2533, 6104, 11, 797, 11, 6104, 3877, 307, 8546, 13, 51648, 51648, 467, 2962, 490, 1365, 281, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17174908123185148, "compression_ratio": 1.5348837209302326, "no_speech_prob": 5.593954483629204e-06}, {"id": 1835, "seek": 543428, "start": 5459.96, "end": 5463.28, "text": " It changes from example to example.", "tokens": [50364, 400, 291, 600, 20308, 710, 538, 884, 341, 3565, 295, 2408, 50564, 50564, 295, 21510, 82, 670, 439, 14518, 13, 50632, 50808, 1779, 30, 50850, 50850, 823, 11, 498, 291, 528, 281, 14722, 264, 16235, 295, 283, 295, 2031, 11, 288, 51046, 51046, 365, 3104, 281, 1184, 295, 264, 308, 11, 6315, 11, 597, 2969, 1391, 51194, 51194, 366, 23930, 295, 512, 18161, 2533, 11, 291, 393, 360, 300, 13, 51298, 51298, 509, 393, 646, 48256, 807, 341, 3209, 13, 51404, 51404, 2264, 30, 51430, 51430, 467, 311, 257, 18161, 2533, 6104, 11, 797, 11, 6104, 3877, 307, 8546, 13, 51648, 51648, 467, 2962, 490, 1365, 281, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17174908123185148, "compression_ratio": 1.5348837209302326, "no_speech_prob": 5.593954483629204e-06}, {"id": 1836, "seek": 546328, "start": 5463.28, "end": 5467.12, "text": " But you can clearly back propagate gradient through it.", "tokens": [50364, 583, 291, 393, 4448, 646, 48256, 16235, 807, 309, 13, 50556, 50556, 400, 300, 311, 1936, 437, 321, 360, 510, 13, 50662, 50806, 682, 341, 1185, 11, 321, 1190, 264, 2128, 9284, 50994, 50994, 322, 341, 4295, 11, 293, 321, 483, 257, 6175, 11, 51114, 51114, 597, 307, 257, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 3175, 51252, 51252, 264, 25737, 337, 439, 264, 14518, 13, 51372, 51372, 2264, 30, 51408, 51408, 492, 360, 264, 912, 510, 13, 51462, 51462, 492, 483, 1071, 6175, 13, 51520, 51520, 286, 914, 11, 309, 311, 3175, 3565, 295, 264, 2408, 51590, 51590, 295, 264, 21510, 82, 295, 3175, 264, 2281, 13, 51758, 51758, 2264, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16430006188861393, "compression_ratio": 1.7706422018348624, "no_speech_prob": 1.202845396619523e-05}, {"id": 1837, "seek": 546328, "start": 5467.12, "end": 5469.24, "text": " And that's basically what we do here.", "tokens": [50364, 583, 291, 393, 4448, 646, 48256, 16235, 807, 309, 13, 50556, 50556, 400, 300, 311, 1936, 437, 321, 360, 510, 13, 50662, 50806, 682, 341, 1185, 11, 321, 1190, 264, 2128, 9284, 50994, 50994, 322, 341, 4295, 11, 293, 321, 483, 257, 6175, 11, 51114, 51114, 597, 307, 257, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 3175, 51252, 51252, 264, 25737, 337, 439, 264, 14518, 13, 51372, 51372, 2264, 30, 51408, 51408, 492, 360, 264, 912, 510, 13, 51462, 51462, 492, 483, 1071, 6175, 13, 51520, 51520, 286, 914, 11, 309, 311, 3175, 3565, 295, 264, 2408, 51590, 51590, 295, 264, 21510, 82, 295, 3175, 264, 2281, 13, 51758, 51758, 2264, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16430006188861393, "compression_ratio": 1.7706422018348624, "no_speech_prob": 1.202845396619523e-05}, {"id": 1838, "seek": 546328, "start": 5472.12, "end": 5475.88, "text": " In this system, we run the forward algorithm", "tokens": [50364, 583, 291, 393, 4448, 646, 48256, 16235, 807, 309, 13, 50556, 50556, 400, 300, 311, 1936, 437, 321, 360, 510, 13, 50662, 50806, 682, 341, 1185, 11, 321, 1190, 264, 2128, 9284, 50994, 50994, 322, 341, 4295, 11, 293, 321, 483, 257, 6175, 11, 51114, 51114, 597, 307, 257, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 3175, 51252, 51252, 264, 25737, 337, 439, 264, 14518, 13, 51372, 51372, 2264, 30, 51408, 51408, 492, 360, 264, 912, 510, 13, 51462, 51462, 492, 483, 1071, 6175, 13, 51520, 51520, 286, 914, 11, 309, 311, 3175, 3565, 295, 264, 2408, 51590, 51590, 295, 264, 21510, 82, 295, 3175, 264, 2281, 13, 51758, 51758, 2264, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16430006188861393, "compression_ratio": 1.7706422018348624, "no_speech_prob": 1.202845396619523e-05}, {"id": 1839, "seek": 546328, "start": 5475.88, "end": 5478.28, "text": " on this graph, and we get a score,", "tokens": [50364, 583, 291, 393, 4448, 646, 48256, 16235, 807, 309, 13, 50556, 50556, 400, 300, 311, 1936, 437, 321, 360, 510, 13, 50662, 50806, 682, 341, 1185, 11, 321, 1190, 264, 2128, 9284, 50994, 50994, 322, 341, 4295, 11, 293, 321, 483, 257, 6175, 11, 51114, 51114, 597, 307, 257, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 3175, 51252, 51252, 264, 25737, 337, 439, 264, 14518, 13, 51372, 51372, 2264, 30, 51408, 51408, 492, 360, 264, 912, 510, 13, 51462, 51462, 492, 483, 1071, 6175, 13, 51520, 51520, 286, 914, 11, 309, 311, 3175, 3565, 295, 264, 2408, 51590, 51590, 295, 264, 21510, 82, 295, 3175, 264, 2281, 13, 51758, 51758, 2264, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16430006188861393, "compression_ratio": 1.7706422018348624, "no_speech_prob": 1.202845396619523e-05}, {"id": 1840, "seek": 546328, "start": 5478.28, "end": 5481.04, "text": " which is a log of the sum of the exponentials of minus", "tokens": [50364, 583, 291, 393, 4448, 646, 48256, 16235, 807, 309, 13, 50556, 50556, 400, 300, 311, 1936, 437, 321, 360, 510, 13, 50662, 50806, 682, 341, 1185, 11, 321, 1190, 264, 2128, 9284, 50994, 50994, 322, 341, 4295, 11, 293, 321, 483, 257, 6175, 11, 51114, 51114, 597, 307, 257, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 3175, 51252, 51252, 264, 25737, 337, 439, 264, 14518, 13, 51372, 51372, 2264, 30, 51408, 51408, 492, 360, 264, 912, 510, 13, 51462, 51462, 492, 483, 1071, 6175, 13, 51520, 51520, 286, 914, 11, 309, 311, 3175, 3565, 295, 264, 2408, 51590, 51590, 295, 264, 21510, 82, 295, 3175, 264, 2281, 13, 51758, 51758, 2264, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16430006188861393, "compression_ratio": 1.7706422018348624, "no_speech_prob": 1.202845396619523e-05}, {"id": 1841, "seek": 546328, "start": 5481.04, "end": 5483.44, "text": " the energies for all the paths.", "tokens": [50364, 583, 291, 393, 4448, 646, 48256, 16235, 807, 309, 13, 50556, 50556, 400, 300, 311, 1936, 437, 321, 360, 510, 13, 50662, 50806, 682, 341, 1185, 11, 321, 1190, 264, 2128, 9284, 50994, 50994, 322, 341, 4295, 11, 293, 321, 483, 257, 6175, 11, 51114, 51114, 597, 307, 257, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 3175, 51252, 51252, 264, 25737, 337, 439, 264, 14518, 13, 51372, 51372, 2264, 30, 51408, 51408, 492, 360, 264, 912, 510, 13, 51462, 51462, 492, 483, 1071, 6175, 13, 51520, 51520, 286, 914, 11, 309, 311, 3175, 3565, 295, 264, 2408, 51590, 51590, 295, 264, 21510, 82, 295, 3175, 264, 2281, 13, 51758, 51758, 2264, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16430006188861393, "compression_ratio": 1.7706422018348624, "no_speech_prob": 1.202845396619523e-05}, {"id": 1842, "seek": 546328, "start": 5483.44, "end": 5484.16, "text": " OK?", "tokens": [50364, 583, 291, 393, 4448, 646, 48256, 16235, 807, 309, 13, 50556, 50556, 400, 300, 311, 1936, 437, 321, 360, 510, 13, 50662, 50806, 682, 341, 1185, 11, 321, 1190, 264, 2128, 9284, 50994, 50994, 322, 341, 4295, 11, 293, 321, 483, 257, 6175, 11, 51114, 51114, 597, 307, 257, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 3175, 51252, 51252, 264, 25737, 337, 439, 264, 14518, 13, 51372, 51372, 2264, 30, 51408, 51408, 492, 360, 264, 912, 510, 13, 51462, 51462, 492, 483, 1071, 6175, 13, 51520, 51520, 286, 914, 11, 309, 311, 3175, 3565, 295, 264, 2408, 51590, 51590, 295, 264, 21510, 82, 295, 3175, 264, 2281, 13, 51758, 51758, 2264, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16430006188861393, "compression_ratio": 1.7706422018348624, "no_speech_prob": 1.202845396619523e-05}, {"id": 1843, "seek": 546328, "start": 5484.16, "end": 5485.24, "text": " We do the same here.", "tokens": [50364, 583, 291, 393, 4448, 646, 48256, 16235, 807, 309, 13, 50556, 50556, 400, 300, 311, 1936, 437, 321, 360, 510, 13, 50662, 50806, 682, 341, 1185, 11, 321, 1190, 264, 2128, 9284, 50994, 50994, 322, 341, 4295, 11, 293, 321, 483, 257, 6175, 11, 51114, 51114, 597, 307, 257, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 3175, 51252, 51252, 264, 25737, 337, 439, 264, 14518, 13, 51372, 51372, 2264, 30, 51408, 51408, 492, 360, 264, 912, 510, 13, 51462, 51462, 492, 483, 1071, 6175, 13, 51520, 51520, 286, 914, 11, 309, 311, 3175, 3565, 295, 264, 2408, 51590, 51590, 295, 264, 21510, 82, 295, 3175, 264, 2281, 13, 51758, 51758, 2264, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16430006188861393, "compression_ratio": 1.7706422018348624, "no_speech_prob": 1.202845396619523e-05}, {"id": 1844, "seek": 546328, "start": 5485.24, "end": 5486.4, "text": " We get another score.", "tokens": [50364, 583, 291, 393, 4448, 646, 48256, 16235, 807, 309, 13, 50556, 50556, 400, 300, 311, 1936, 437, 321, 360, 510, 13, 50662, 50806, 682, 341, 1185, 11, 321, 1190, 264, 2128, 9284, 50994, 50994, 322, 341, 4295, 11, 293, 321, 483, 257, 6175, 11, 51114, 51114, 597, 307, 257, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 3175, 51252, 51252, 264, 25737, 337, 439, 264, 14518, 13, 51372, 51372, 2264, 30, 51408, 51408, 492, 360, 264, 912, 510, 13, 51462, 51462, 492, 483, 1071, 6175, 13, 51520, 51520, 286, 914, 11, 309, 311, 3175, 3565, 295, 264, 2408, 51590, 51590, 295, 264, 21510, 82, 295, 3175, 264, 2281, 13, 51758, 51758, 2264, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16430006188861393, "compression_ratio": 1.7706422018348624, "no_speech_prob": 1.202845396619523e-05}, {"id": 1845, "seek": 546328, "start": 5486.4, "end": 5487.8, "text": " I mean, it's minus log of the sum", "tokens": [50364, 583, 291, 393, 4448, 646, 48256, 16235, 807, 309, 13, 50556, 50556, 400, 300, 311, 1936, 437, 321, 360, 510, 13, 50662, 50806, 682, 341, 1185, 11, 321, 1190, 264, 2128, 9284, 50994, 50994, 322, 341, 4295, 11, 293, 321, 483, 257, 6175, 11, 51114, 51114, 597, 307, 257, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 3175, 51252, 51252, 264, 25737, 337, 439, 264, 14518, 13, 51372, 51372, 2264, 30, 51408, 51408, 492, 360, 264, 912, 510, 13, 51462, 51462, 492, 483, 1071, 6175, 13, 51520, 51520, 286, 914, 11, 309, 311, 3175, 3565, 295, 264, 2408, 51590, 51590, 295, 264, 21510, 82, 295, 3175, 264, 2281, 13, 51758, 51758, 2264, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16430006188861393, "compression_ratio": 1.7706422018348624, "no_speech_prob": 1.202845396619523e-05}, {"id": 1846, "seek": 546328, "start": 5487.8, "end": 5491.16, "text": " of the exponentials of minus the energy.", "tokens": [50364, 583, 291, 393, 4448, 646, 48256, 16235, 807, 309, 13, 50556, 50556, 400, 300, 311, 1936, 437, 321, 360, 510, 13, 50662, 50806, 682, 341, 1185, 11, 321, 1190, 264, 2128, 9284, 50994, 50994, 322, 341, 4295, 11, 293, 321, 483, 257, 6175, 11, 51114, 51114, 597, 307, 257, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 3175, 51252, 51252, 264, 25737, 337, 439, 264, 14518, 13, 51372, 51372, 2264, 30, 51408, 51408, 492, 360, 264, 912, 510, 13, 51462, 51462, 492, 483, 1071, 6175, 13, 51520, 51520, 286, 914, 11, 309, 311, 3175, 3565, 295, 264, 2408, 51590, 51590, 295, 264, 21510, 82, 295, 3175, 264, 2281, 13, 51758, 51758, 2264, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16430006188861393, "compression_ratio": 1.7706422018348624, "no_speech_prob": 1.202845396619523e-05}, {"id": 1847, "seek": 546328, "start": 5491.16, "end": 5493.16, "text": " OK?", "tokens": [50364, 583, 291, 393, 4448, 646, 48256, 16235, 807, 309, 13, 50556, 50556, 400, 300, 311, 1936, 437, 321, 360, 510, 13, 50662, 50806, 682, 341, 1185, 11, 321, 1190, 264, 2128, 9284, 50994, 50994, 322, 341, 4295, 11, 293, 321, 483, 257, 6175, 11, 51114, 51114, 597, 307, 257, 3565, 295, 264, 2408, 295, 264, 21510, 82, 295, 3175, 51252, 51252, 264, 25737, 337, 439, 264, 14518, 13, 51372, 51372, 2264, 30, 51408, 51408, 492, 360, 264, 912, 510, 13, 51462, 51462, 492, 483, 1071, 6175, 13, 51520, 51520, 286, 914, 11, 309, 311, 3175, 3565, 295, 264, 2408, 51590, 51590, 295, 264, 21510, 82, 295, 3175, 264, 2281, 13, 51758, 51758, 2264, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16430006188861393, "compression_ratio": 1.7706422018348624, "no_speech_prob": 1.202845396619523e-05}, {"id": 1848, "seek": 549316, "start": 5493.16, "end": 5495.32, "text": " This guy necessarily is larger than this one.", "tokens": [50364, 639, 2146, 4725, 307, 4833, 813, 341, 472, 13, 50472, 50472, 509, 14722, 264, 2649, 11, 293, 300, 311, 50550, 50550, 264, 3671, 3565, 22119, 4470, 13, 50620, 50620, 467, 311, 264, 2649, 1296, 264, 3565, 2408, 50756, 50756, 2031, 295, 2281, 670, 264, 48994, 7006, 295, 264, 3006, 1867, 50938, 50938, 293, 3565, 2408, 2031, 670, 264, 48994, 7006, 295, 633, 1867, 13, 51166, 51166, 5780, 510, 11, 613, 366, 17570, 267, 804, 6338, 11, 51272, 51272, 457, 309, 311, 264, 912, 13, 51358, 51358, 400, 550, 291, 445, 646, 48256, 16235, 51450, 51450, 807, 341, 2302, 551, 13, 51516, 51516, 400, 550, 291, 445, 646, 48256, 16235, 51610, 51610, 807, 341, 4295, 510, 11, 597, 291, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.221333878939269, "compression_ratio": 1.9437751004016064, "no_speech_prob": 1.4063222806726117e-05}, {"id": 1849, "seek": 549316, "start": 5495.32, "end": 5496.88, "text": " You compute the difference, and that's", "tokens": [50364, 639, 2146, 4725, 307, 4833, 813, 341, 472, 13, 50472, 50472, 509, 14722, 264, 2649, 11, 293, 300, 311, 50550, 50550, 264, 3671, 3565, 22119, 4470, 13, 50620, 50620, 467, 311, 264, 2649, 1296, 264, 3565, 2408, 50756, 50756, 2031, 295, 2281, 670, 264, 48994, 7006, 295, 264, 3006, 1867, 50938, 50938, 293, 3565, 2408, 2031, 670, 264, 48994, 7006, 295, 633, 1867, 13, 51166, 51166, 5780, 510, 11, 613, 366, 17570, 267, 804, 6338, 11, 51272, 51272, 457, 309, 311, 264, 912, 13, 51358, 51358, 400, 550, 291, 445, 646, 48256, 16235, 51450, 51450, 807, 341, 2302, 551, 13, 51516, 51516, 400, 550, 291, 445, 646, 48256, 16235, 51610, 51610, 807, 341, 4295, 510, 11, 597, 291, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.221333878939269, "compression_ratio": 1.9437751004016064, "no_speech_prob": 1.4063222806726117e-05}, {"id": 1850, "seek": 549316, "start": 5496.88, "end": 5498.28, "text": " the negative log likelihood loss.", "tokens": [50364, 639, 2146, 4725, 307, 4833, 813, 341, 472, 13, 50472, 50472, 509, 14722, 264, 2649, 11, 293, 300, 311, 50550, 50550, 264, 3671, 3565, 22119, 4470, 13, 50620, 50620, 467, 311, 264, 2649, 1296, 264, 3565, 2408, 50756, 50756, 2031, 295, 2281, 670, 264, 48994, 7006, 295, 264, 3006, 1867, 50938, 50938, 293, 3565, 2408, 2031, 670, 264, 48994, 7006, 295, 633, 1867, 13, 51166, 51166, 5780, 510, 11, 613, 366, 17570, 267, 804, 6338, 11, 51272, 51272, 457, 309, 311, 264, 912, 13, 51358, 51358, 400, 550, 291, 445, 646, 48256, 16235, 51450, 51450, 807, 341, 2302, 551, 13, 51516, 51516, 400, 550, 291, 445, 646, 48256, 16235, 51610, 51610, 807, 341, 4295, 510, 11, 597, 291, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.221333878939269, "compression_ratio": 1.9437751004016064, "no_speech_prob": 1.4063222806726117e-05}, {"id": 1851, "seek": 549316, "start": 5498.28, "end": 5501.0, "text": " It's the difference between the log sum", "tokens": [50364, 639, 2146, 4725, 307, 4833, 813, 341, 472, 13, 50472, 50472, 509, 14722, 264, 2649, 11, 293, 300, 311, 50550, 50550, 264, 3671, 3565, 22119, 4470, 13, 50620, 50620, 467, 311, 264, 2649, 1296, 264, 3565, 2408, 50756, 50756, 2031, 295, 2281, 670, 264, 48994, 7006, 295, 264, 3006, 1867, 50938, 50938, 293, 3565, 2408, 2031, 670, 264, 48994, 7006, 295, 633, 1867, 13, 51166, 51166, 5780, 510, 11, 613, 366, 17570, 267, 804, 6338, 11, 51272, 51272, 457, 309, 311, 264, 912, 13, 51358, 51358, 400, 550, 291, 445, 646, 48256, 16235, 51450, 51450, 807, 341, 2302, 551, 13, 51516, 51516, 400, 550, 291, 445, 646, 48256, 16235, 51610, 51610, 807, 341, 4295, 510, 11, 597, 291, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.221333878939269, "compression_ratio": 1.9437751004016064, "no_speech_prob": 1.4063222806726117e-05}, {"id": 1852, "seek": 549316, "start": 5501.0, "end": 5504.639999999999, "text": " x of energy over the latent variable of the correct answer", "tokens": [50364, 639, 2146, 4725, 307, 4833, 813, 341, 472, 13, 50472, 50472, 509, 14722, 264, 2649, 11, 293, 300, 311, 50550, 50550, 264, 3671, 3565, 22119, 4470, 13, 50620, 50620, 467, 311, 264, 2649, 1296, 264, 3565, 2408, 50756, 50756, 2031, 295, 2281, 670, 264, 48994, 7006, 295, 264, 3006, 1867, 50938, 50938, 293, 3565, 2408, 2031, 670, 264, 48994, 7006, 295, 633, 1867, 13, 51166, 51166, 5780, 510, 11, 613, 366, 17570, 267, 804, 6338, 11, 51272, 51272, 457, 309, 311, 264, 912, 13, 51358, 51358, 400, 550, 291, 445, 646, 48256, 16235, 51450, 51450, 807, 341, 2302, 551, 13, 51516, 51516, 400, 550, 291, 445, 646, 48256, 16235, 51610, 51610, 807, 341, 4295, 510, 11, 597, 291, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.221333878939269, "compression_ratio": 1.9437751004016064, "no_speech_prob": 1.4063222806726117e-05}, {"id": 1853, "seek": 549316, "start": 5504.639999999999, "end": 5509.2, "text": " and log sum x over the latent variable of every answer.", "tokens": [50364, 639, 2146, 4725, 307, 4833, 813, 341, 472, 13, 50472, 50472, 509, 14722, 264, 2649, 11, 293, 300, 311, 50550, 50550, 264, 3671, 3565, 22119, 4470, 13, 50620, 50620, 467, 311, 264, 2649, 1296, 264, 3565, 2408, 50756, 50756, 2031, 295, 2281, 670, 264, 48994, 7006, 295, 264, 3006, 1867, 50938, 50938, 293, 3565, 2408, 2031, 670, 264, 48994, 7006, 295, 633, 1867, 13, 51166, 51166, 5780, 510, 11, 613, 366, 17570, 267, 804, 6338, 11, 51272, 51272, 457, 309, 311, 264, 912, 13, 51358, 51358, 400, 550, 291, 445, 646, 48256, 16235, 51450, 51450, 807, 341, 2302, 551, 13, 51516, 51516, 400, 550, 291, 445, 646, 48256, 16235, 51610, 51610, 807, 341, 4295, 510, 11, 597, 291, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.221333878939269, "compression_ratio": 1.9437751004016064, "no_speech_prob": 1.4063222806726117e-05}, {"id": 1854, "seek": 549316, "start": 5509.2, "end": 5511.32, "text": " Although here, these are grammatical answers,", "tokens": [50364, 639, 2146, 4725, 307, 4833, 813, 341, 472, 13, 50472, 50472, 509, 14722, 264, 2649, 11, 293, 300, 311, 50550, 50550, 264, 3671, 3565, 22119, 4470, 13, 50620, 50620, 467, 311, 264, 2649, 1296, 264, 3565, 2408, 50756, 50756, 2031, 295, 2281, 670, 264, 48994, 7006, 295, 264, 3006, 1867, 50938, 50938, 293, 3565, 2408, 2031, 670, 264, 48994, 7006, 295, 633, 1867, 13, 51166, 51166, 5780, 510, 11, 613, 366, 17570, 267, 804, 6338, 11, 51272, 51272, 457, 309, 311, 264, 912, 13, 51358, 51358, 400, 550, 291, 445, 646, 48256, 16235, 51450, 51450, 807, 341, 2302, 551, 13, 51516, 51516, 400, 550, 291, 445, 646, 48256, 16235, 51610, 51610, 807, 341, 4295, 510, 11, 597, 291, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.221333878939269, "compression_ratio": 1.9437751004016064, "no_speech_prob": 1.4063222806726117e-05}, {"id": 1855, "seek": 549316, "start": 5511.32, "end": 5513.04, "text": " but it's the same.", "tokens": [50364, 639, 2146, 4725, 307, 4833, 813, 341, 472, 13, 50472, 50472, 509, 14722, 264, 2649, 11, 293, 300, 311, 50550, 50550, 264, 3671, 3565, 22119, 4470, 13, 50620, 50620, 467, 311, 264, 2649, 1296, 264, 3565, 2408, 50756, 50756, 2031, 295, 2281, 670, 264, 48994, 7006, 295, 264, 3006, 1867, 50938, 50938, 293, 3565, 2408, 2031, 670, 264, 48994, 7006, 295, 633, 1867, 13, 51166, 51166, 5780, 510, 11, 613, 366, 17570, 267, 804, 6338, 11, 51272, 51272, 457, 309, 311, 264, 912, 13, 51358, 51358, 400, 550, 291, 445, 646, 48256, 16235, 51450, 51450, 807, 341, 2302, 551, 13, 51516, 51516, 400, 550, 291, 445, 646, 48256, 16235, 51610, 51610, 807, 341, 4295, 510, 11, 597, 291, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.221333878939269, "compression_ratio": 1.9437751004016064, "no_speech_prob": 1.4063222806726117e-05}, {"id": 1856, "seek": 549316, "start": 5513.04, "end": 5514.88, "text": " And then you just back propagate gradient", "tokens": [50364, 639, 2146, 4725, 307, 4833, 813, 341, 472, 13, 50472, 50472, 509, 14722, 264, 2649, 11, 293, 300, 311, 50550, 50550, 264, 3671, 3565, 22119, 4470, 13, 50620, 50620, 467, 311, 264, 2649, 1296, 264, 3565, 2408, 50756, 50756, 2031, 295, 2281, 670, 264, 48994, 7006, 295, 264, 3006, 1867, 50938, 50938, 293, 3565, 2408, 2031, 670, 264, 48994, 7006, 295, 633, 1867, 13, 51166, 51166, 5780, 510, 11, 613, 366, 17570, 267, 804, 6338, 11, 51272, 51272, 457, 309, 311, 264, 912, 13, 51358, 51358, 400, 550, 291, 445, 646, 48256, 16235, 51450, 51450, 807, 341, 2302, 551, 13, 51516, 51516, 400, 550, 291, 445, 646, 48256, 16235, 51610, 51610, 807, 341, 4295, 510, 11, 597, 291, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.221333878939269, "compression_ratio": 1.9437751004016064, "no_speech_prob": 1.4063222806726117e-05}, {"id": 1857, "seek": 549316, "start": 5514.88, "end": 5516.2, "text": " through this entire thing.", "tokens": [50364, 639, 2146, 4725, 307, 4833, 813, 341, 472, 13, 50472, 50472, 509, 14722, 264, 2649, 11, 293, 300, 311, 50550, 50550, 264, 3671, 3565, 22119, 4470, 13, 50620, 50620, 467, 311, 264, 2649, 1296, 264, 3565, 2408, 50756, 50756, 2031, 295, 2281, 670, 264, 48994, 7006, 295, 264, 3006, 1867, 50938, 50938, 293, 3565, 2408, 2031, 670, 264, 48994, 7006, 295, 633, 1867, 13, 51166, 51166, 5780, 510, 11, 613, 366, 17570, 267, 804, 6338, 11, 51272, 51272, 457, 309, 311, 264, 912, 13, 51358, 51358, 400, 550, 291, 445, 646, 48256, 16235, 51450, 51450, 807, 341, 2302, 551, 13, 51516, 51516, 400, 550, 291, 445, 646, 48256, 16235, 51610, 51610, 807, 341, 4295, 510, 11, 597, 291, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.221333878939269, "compression_ratio": 1.9437751004016064, "no_speech_prob": 1.4063222806726117e-05}, {"id": 1858, "seek": 549316, "start": 5516.2, "end": 5518.08, "text": " And then you just back propagate gradient", "tokens": [50364, 639, 2146, 4725, 307, 4833, 813, 341, 472, 13, 50472, 50472, 509, 14722, 264, 2649, 11, 293, 300, 311, 50550, 50550, 264, 3671, 3565, 22119, 4470, 13, 50620, 50620, 467, 311, 264, 2649, 1296, 264, 3565, 2408, 50756, 50756, 2031, 295, 2281, 670, 264, 48994, 7006, 295, 264, 3006, 1867, 50938, 50938, 293, 3565, 2408, 2031, 670, 264, 48994, 7006, 295, 633, 1867, 13, 51166, 51166, 5780, 510, 11, 613, 366, 17570, 267, 804, 6338, 11, 51272, 51272, 457, 309, 311, 264, 912, 13, 51358, 51358, 400, 550, 291, 445, 646, 48256, 16235, 51450, 51450, 807, 341, 2302, 551, 13, 51516, 51516, 400, 550, 291, 445, 646, 48256, 16235, 51610, 51610, 807, 341, 4295, 510, 11, 597, 291, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.221333878939269, "compression_ratio": 1.9437751004016064, "no_speech_prob": 1.4063222806726117e-05}, {"id": 1859, "seek": 549316, "start": 5518.08, "end": 5520.8, "text": " through this graph here, which you", "tokens": [50364, 639, 2146, 4725, 307, 4833, 813, 341, 472, 13, 50472, 50472, 509, 14722, 264, 2649, 11, 293, 300, 311, 50550, 50550, 264, 3671, 3565, 22119, 4470, 13, 50620, 50620, 467, 311, 264, 2649, 1296, 264, 3565, 2408, 50756, 50756, 2031, 295, 2281, 670, 264, 48994, 7006, 295, 264, 3006, 1867, 50938, 50938, 293, 3565, 2408, 2031, 670, 264, 48994, 7006, 295, 633, 1867, 13, 51166, 51166, 5780, 510, 11, 613, 366, 17570, 267, 804, 6338, 11, 51272, 51272, 457, 309, 311, 264, 912, 13, 51358, 51358, 400, 550, 291, 445, 646, 48256, 16235, 51450, 51450, 807, 341, 2302, 551, 13, 51516, 51516, 400, 550, 291, 445, 646, 48256, 16235, 51610, 51610, 807, 341, 4295, 510, 11, 597, 291, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.221333878939269, "compression_ratio": 1.9437751004016064, "no_speech_prob": 1.4063222806726117e-05}, {"id": 1860, "seek": 552080, "start": 5520.8, "end": 5523.360000000001, "text": " can think of as some sort of weird neural net with where", "tokens": [50364, 393, 519, 295, 382, 512, 1333, 295, 3657, 18161, 2533, 365, 689, 50492, 50492, 264, 9984, 6916, 307, 341, 3565, 2408, 21510, 82, 13, 50646, 50646, 400, 291, 483, 2771, 2448, 337, 1184, 295, 264, 308, 311, 11, 50734, 50734, 293, 1184, 295, 264, 308, 311, 366, 264, 4190, 50848, 50848, 300, 291, 483, 510, 11, 597, 366, 7126, 538, 264, 18161, 2533, 13, 50980, 50980, 400, 370, 291, 483, 2771, 2448, 365, 3104, 51080, 51080, 281, 264, 9834, 295, 264, 18161, 2533, 13, 51156, 51454, 2264, 11, 370, 300, 311, 15067, 17630, 337, 291, 13, 51624, 51624, 821, 311, 257, 1916, 544, 8378, 286, 1415, 281, 751, 466, 965, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.19177848152492358, "compression_ratio": 1.7385892116182573, "no_speech_prob": 8.138304110616446e-06}, {"id": 1861, "seek": 552080, "start": 5523.360000000001, "end": 5526.4400000000005, "text": " the node operation is this log sum exponentials.", "tokens": [50364, 393, 519, 295, 382, 512, 1333, 295, 3657, 18161, 2533, 365, 689, 50492, 50492, 264, 9984, 6916, 307, 341, 3565, 2408, 21510, 82, 13, 50646, 50646, 400, 291, 483, 2771, 2448, 337, 1184, 295, 264, 308, 311, 11, 50734, 50734, 293, 1184, 295, 264, 308, 311, 366, 264, 4190, 50848, 50848, 300, 291, 483, 510, 11, 597, 366, 7126, 538, 264, 18161, 2533, 13, 50980, 50980, 400, 370, 291, 483, 2771, 2448, 365, 3104, 51080, 51080, 281, 264, 9834, 295, 264, 18161, 2533, 13, 51156, 51454, 2264, 11, 370, 300, 311, 15067, 17630, 337, 291, 13, 51624, 51624, 821, 311, 257, 1916, 544, 8378, 286, 1415, 281, 751, 466, 965, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.19177848152492358, "compression_ratio": 1.7385892116182573, "no_speech_prob": 8.138304110616446e-06}, {"id": 1862, "seek": 552080, "start": 5526.4400000000005, "end": 5528.2, "text": " And you get gradients for each of the e's,", "tokens": [50364, 393, 519, 295, 382, 512, 1333, 295, 3657, 18161, 2533, 365, 689, 50492, 50492, 264, 9984, 6916, 307, 341, 3565, 2408, 21510, 82, 13, 50646, 50646, 400, 291, 483, 2771, 2448, 337, 1184, 295, 264, 308, 311, 11, 50734, 50734, 293, 1184, 295, 264, 308, 311, 366, 264, 4190, 50848, 50848, 300, 291, 483, 510, 11, 597, 366, 7126, 538, 264, 18161, 2533, 13, 50980, 50980, 400, 370, 291, 483, 2771, 2448, 365, 3104, 51080, 51080, 281, 264, 9834, 295, 264, 18161, 2533, 13, 51156, 51454, 2264, 11, 370, 300, 311, 15067, 17630, 337, 291, 13, 51624, 51624, 821, 311, 257, 1916, 544, 8378, 286, 1415, 281, 751, 466, 965, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.19177848152492358, "compression_ratio": 1.7385892116182573, "no_speech_prob": 8.138304110616446e-06}, {"id": 1863, "seek": 552080, "start": 5528.2, "end": 5530.4800000000005, "text": " and each of the e's are the values", "tokens": [50364, 393, 519, 295, 382, 512, 1333, 295, 3657, 18161, 2533, 365, 689, 50492, 50492, 264, 9984, 6916, 307, 341, 3565, 2408, 21510, 82, 13, 50646, 50646, 400, 291, 483, 2771, 2448, 337, 1184, 295, 264, 308, 311, 11, 50734, 50734, 293, 1184, 295, 264, 308, 311, 366, 264, 4190, 50848, 50848, 300, 291, 483, 510, 11, 597, 366, 7126, 538, 264, 18161, 2533, 13, 50980, 50980, 400, 370, 291, 483, 2771, 2448, 365, 3104, 51080, 51080, 281, 264, 9834, 295, 264, 18161, 2533, 13, 51156, 51454, 2264, 11, 370, 300, 311, 15067, 17630, 337, 291, 13, 51624, 51624, 821, 311, 257, 1916, 544, 8378, 286, 1415, 281, 751, 466, 965, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.19177848152492358, "compression_ratio": 1.7385892116182573, "no_speech_prob": 8.138304110616446e-06}, {"id": 1864, "seek": 552080, "start": 5530.4800000000005, "end": 5533.12, "text": " that you get here, which are produced by the neural net.", "tokens": [50364, 393, 519, 295, 382, 512, 1333, 295, 3657, 18161, 2533, 365, 689, 50492, 50492, 264, 9984, 6916, 307, 341, 3565, 2408, 21510, 82, 13, 50646, 50646, 400, 291, 483, 2771, 2448, 337, 1184, 295, 264, 308, 311, 11, 50734, 50734, 293, 1184, 295, 264, 308, 311, 366, 264, 4190, 50848, 50848, 300, 291, 483, 510, 11, 597, 366, 7126, 538, 264, 18161, 2533, 13, 50980, 50980, 400, 370, 291, 483, 2771, 2448, 365, 3104, 51080, 51080, 281, 264, 9834, 295, 264, 18161, 2533, 13, 51156, 51454, 2264, 11, 370, 300, 311, 15067, 17630, 337, 291, 13, 51624, 51624, 821, 311, 257, 1916, 544, 8378, 286, 1415, 281, 751, 466, 965, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.19177848152492358, "compression_ratio": 1.7385892116182573, "no_speech_prob": 8.138304110616446e-06}, {"id": 1865, "seek": 552080, "start": 5533.12, "end": 5535.12, "text": " And so you get gradients with respect", "tokens": [50364, 393, 519, 295, 382, 512, 1333, 295, 3657, 18161, 2533, 365, 689, 50492, 50492, 264, 9984, 6916, 307, 341, 3565, 2408, 21510, 82, 13, 50646, 50646, 400, 291, 483, 2771, 2448, 337, 1184, 295, 264, 308, 311, 11, 50734, 50734, 293, 1184, 295, 264, 308, 311, 366, 264, 4190, 50848, 50848, 300, 291, 483, 510, 11, 597, 366, 7126, 538, 264, 18161, 2533, 13, 50980, 50980, 400, 370, 291, 483, 2771, 2448, 365, 3104, 51080, 51080, 281, 264, 9834, 295, 264, 18161, 2533, 13, 51156, 51454, 2264, 11, 370, 300, 311, 15067, 17630, 337, 291, 13, 51624, 51624, 821, 311, 257, 1916, 544, 8378, 286, 1415, 281, 751, 466, 965, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.19177848152492358, "compression_ratio": 1.7385892116182573, "no_speech_prob": 8.138304110616446e-06}, {"id": 1866, "seek": 552080, "start": 5535.12, "end": 5536.64, "text": " to the parameters of the neural net.", "tokens": [50364, 393, 519, 295, 382, 512, 1333, 295, 3657, 18161, 2533, 365, 689, 50492, 50492, 264, 9984, 6916, 307, 341, 3565, 2408, 21510, 82, 13, 50646, 50646, 400, 291, 483, 2771, 2448, 337, 1184, 295, 264, 308, 311, 11, 50734, 50734, 293, 1184, 295, 264, 308, 311, 366, 264, 4190, 50848, 50848, 300, 291, 483, 510, 11, 597, 366, 7126, 538, 264, 18161, 2533, 13, 50980, 50980, 400, 370, 291, 483, 2771, 2448, 365, 3104, 51080, 51080, 281, 264, 9834, 295, 264, 18161, 2533, 13, 51156, 51454, 2264, 11, 370, 300, 311, 15067, 17630, 337, 291, 13, 51624, 51624, 821, 311, 257, 1916, 544, 8378, 286, 1415, 281, 751, 466, 965, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.19177848152492358, "compression_ratio": 1.7385892116182573, "no_speech_prob": 8.138304110616446e-06}, {"id": 1867, "seek": 552080, "start": 5542.6, "end": 5546.0, "text": " OK, so that's structural prediction for you.", "tokens": [50364, 393, 519, 295, 382, 512, 1333, 295, 3657, 18161, 2533, 365, 689, 50492, 50492, 264, 9984, 6916, 307, 341, 3565, 2408, 21510, 82, 13, 50646, 50646, 400, 291, 483, 2771, 2448, 337, 1184, 295, 264, 308, 311, 11, 50734, 50734, 293, 1184, 295, 264, 308, 311, 366, 264, 4190, 50848, 50848, 300, 291, 483, 510, 11, 597, 366, 7126, 538, 264, 18161, 2533, 13, 50980, 50980, 400, 370, 291, 483, 2771, 2448, 365, 3104, 51080, 51080, 281, 264, 9834, 295, 264, 18161, 2533, 13, 51156, 51454, 2264, 11, 370, 300, 311, 15067, 17630, 337, 291, 13, 51624, 51624, 821, 311, 257, 1916, 544, 8378, 286, 1415, 281, 751, 466, 965, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.19177848152492358, "compression_ratio": 1.7385892116182573, "no_speech_prob": 8.138304110616446e-06}, {"id": 1868, "seek": 552080, "start": 5546.0, "end": 5548.5, "text": " There's a couple more topics I wanted to talk about today,", "tokens": [50364, 393, 519, 295, 382, 512, 1333, 295, 3657, 18161, 2533, 365, 689, 50492, 50492, 264, 9984, 6916, 307, 341, 3565, 2408, 21510, 82, 13, 50646, 50646, 400, 291, 483, 2771, 2448, 337, 1184, 295, 264, 308, 311, 11, 50734, 50734, 293, 1184, 295, 264, 308, 311, 366, 264, 4190, 50848, 50848, 300, 291, 483, 510, 11, 597, 366, 7126, 538, 264, 18161, 2533, 13, 50980, 50980, 400, 370, 291, 483, 2771, 2448, 365, 3104, 51080, 51080, 281, 264, 9834, 295, 264, 18161, 2533, 13, 51156, 51454, 2264, 11, 370, 300, 311, 15067, 17630, 337, 291, 13, 51624, 51624, 821, 311, 257, 1916, 544, 8378, 286, 1415, 281, 751, 466, 965, 11, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.19177848152492358, "compression_ratio": 1.7385892116182573, "no_speech_prob": 8.138304110616446e-06}, {"id": 1869, "seek": 554850, "start": 5548.5, "end": 5551.92, "text": " and variational methods in Bayesian inference,", "tokens": [50364, 293, 3034, 1478, 7150, 294, 7840, 42434, 38253, 11, 50535, 50535, 570, 321, 2825, 466, 309, 294, 264, 4319, 295, 18527, 36, 11, 50655, 50655, 457, 1553, 534, 13468, 437, 309, 390, 13, 50801, 50801, 1711, 1935, 286, 994, 380, 13, 50843, 50843, 2704, 291, 630, 11, 28327, 78, 13, 51015, 51015, 583, 264, 2674, 1254, 295, 3034, 1478, 38253, 13, 51125, 51125, 1610, 286, 393, 751, 466, 264, 24886, 32926, 952, 37642, 51223, 51223, 295, 646, 79, 1513, 13, 51297, 51297, 286, 393, 767, 360, 1293, 11, 570, 309, 311, 733, 295, 2370, 13, 51409, 51409, 467, 486, 747, 544, 813, 1732, 2077, 11, 51459, 51459, 457, 291, 393, 1856, 5699, 291, 528, 13, 51547, 51547, 2264, 11, 550, 718, 311, 352, 337, 1293, 13, 51645, 51645, 440, 24886, 14521, 551, 307, 2099, 11, 370, 286, 478, 516, 281, 360, 300, 700, 13, 51771, 51771, 2264, 13, 51796], "temperature": 0.0, "avg_logprob": -0.19094123587703074, "compression_ratio": 1.6644736842105263, "no_speech_prob": 1.5203963812382426e-05}, {"id": 1870, "seek": 554850, "start": 5551.92, "end": 5554.32, "text": " because we talked about it in the context of VAE,", "tokens": [50364, 293, 3034, 1478, 7150, 294, 7840, 42434, 38253, 11, 50535, 50535, 570, 321, 2825, 466, 309, 294, 264, 4319, 295, 18527, 36, 11, 50655, 50655, 457, 1553, 534, 13468, 437, 309, 390, 13, 50801, 50801, 1711, 1935, 286, 994, 380, 13, 50843, 50843, 2704, 291, 630, 11, 28327, 78, 13, 51015, 51015, 583, 264, 2674, 1254, 295, 3034, 1478, 38253, 13, 51125, 51125, 1610, 286, 393, 751, 466, 264, 24886, 32926, 952, 37642, 51223, 51223, 295, 646, 79, 1513, 13, 51297, 51297, 286, 393, 767, 360, 1293, 11, 570, 309, 311, 733, 295, 2370, 13, 51409, 51409, 467, 486, 747, 544, 813, 1732, 2077, 11, 51459, 51459, 457, 291, 393, 1856, 5699, 291, 528, 13, 51547, 51547, 2264, 11, 550, 718, 311, 352, 337, 1293, 13, 51645, 51645, 440, 24886, 14521, 551, 307, 2099, 11, 370, 286, 478, 516, 281, 360, 300, 700, 13, 51771, 51771, 2264, 13, 51796], "temperature": 0.0, "avg_logprob": -0.19094123587703074, "compression_ratio": 1.6644736842105263, "no_speech_prob": 1.5203963812382426e-05}, {"id": 1871, "seek": 554850, "start": 5554.32, "end": 5557.24, "text": " but without really explaining what it was.", "tokens": [50364, 293, 3034, 1478, 7150, 294, 7840, 42434, 38253, 11, 50535, 50535, 570, 321, 2825, 466, 309, 294, 264, 4319, 295, 18527, 36, 11, 50655, 50655, 457, 1553, 534, 13468, 437, 309, 390, 13, 50801, 50801, 1711, 1935, 286, 994, 380, 13, 50843, 50843, 2704, 291, 630, 11, 28327, 78, 13, 51015, 51015, 583, 264, 2674, 1254, 295, 3034, 1478, 38253, 13, 51125, 51125, 1610, 286, 393, 751, 466, 264, 24886, 32926, 952, 37642, 51223, 51223, 295, 646, 79, 1513, 13, 51297, 51297, 286, 393, 767, 360, 1293, 11, 570, 309, 311, 733, 295, 2370, 13, 51409, 51409, 467, 486, 747, 544, 813, 1732, 2077, 11, 51459, 51459, 457, 291, 393, 1856, 5699, 291, 528, 13, 51547, 51547, 2264, 11, 550, 718, 311, 352, 337, 1293, 13, 51645, 51645, 440, 24886, 14521, 551, 307, 2099, 11, 370, 286, 478, 516, 281, 360, 300, 700, 13, 51771, 51771, 2264, 13, 51796], "temperature": 0.0, "avg_logprob": -0.19094123587703074, "compression_ratio": 1.6644736842105263, "no_speech_prob": 1.5203963812382426e-05}, {"id": 1872, "seek": 554850, "start": 5557.24, "end": 5558.08, "text": " At least I didn't.", "tokens": [50364, 293, 3034, 1478, 7150, 294, 7840, 42434, 38253, 11, 50535, 50535, 570, 321, 2825, 466, 309, 294, 264, 4319, 295, 18527, 36, 11, 50655, 50655, 457, 1553, 534, 13468, 437, 309, 390, 13, 50801, 50801, 1711, 1935, 286, 994, 380, 13, 50843, 50843, 2704, 291, 630, 11, 28327, 78, 13, 51015, 51015, 583, 264, 2674, 1254, 295, 3034, 1478, 38253, 13, 51125, 51125, 1610, 286, 393, 751, 466, 264, 24886, 32926, 952, 37642, 51223, 51223, 295, 646, 79, 1513, 13, 51297, 51297, 286, 393, 767, 360, 1293, 11, 570, 309, 311, 733, 295, 2370, 13, 51409, 51409, 467, 486, 747, 544, 813, 1732, 2077, 11, 51459, 51459, 457, 291, 393, 1856, 5699, 291, 528, 13, 51547, 51547, 2264, 11, 550, 718, 311, 352, 337, 1293, 13, 51645, 51645, 440, 24886, 14521, 551, 307, 2099, 11, 370, 286, 478, 516, 281, 360, 300, 700, 13, 51771, 51771, 2264, 13, 51796], "temperature": 0.0, "avg_logprob": -0.19094123587703074, "compression_ratio": 1.6644736842105263, "no_speech_prob": 1.5203963812382426e-05}, {"id": 1873, "seek": 554850, "start": 5558.08, "end": 5561.52, "text": " Maybe you did, Alfredo.", "tokens": [50364, 293, 3034, 1478, 7150, 294, 7840, 42434, 38253, 11, 50535, 50535, 570, 321, 2825, 466, 309, 294, 264, 4319, 295, 18527, 36, 11, 50655, 50655, 457, 1553, 534, 13468, 437, 309, 390, 13, 50801, 50801, 1711, 1935, 286, 994, 380, 13, 50843, 50843, 2704, 291, 630, 11, 28327, 78, 13, 51015, 51015, 583, 264, 2674, 1254, 295, 3034, 1478, 38253, 13, 51125, 51125, 1610, 286, 393, 751, 466, 264, 24886, 32926, 952, 37642, 51223, 51223, 295, 646, 79, 1513, 13, 51297, 51297, 286, 393, 767, 360, 1293, 11, 570, 309, 311, 733, 295, 2370, 13, 51409, 51409, 467, 486, 747, 544, 813, 1732, 2077, 11, 51459, 51459, 457, 291, 393, 1856, 5699, 291, 528, 13, 51547, 51547, 2264, 11, 550, 718, 311, 352, 337, 1293, 13, 51645, 51645, 440, 24886, 14521, 551, 307, 2099, 11, 370, 286, 478, 516, 281, 360, 300, 700, 13, 51771, 51771, 2264, 13, 51796], "temperature": 0.0, "avg_logprob": -0.19094123587703074, "compression_ratio": 1.6644736842105263, "no_speech_prob": 1.5203963812382426e-05}, {"id": 1874, "seek": 554850, "start": 5561.52, "end": 5563.72, "text": " But the general form of variational inference.", "tokens": [50364, 293, 3034, 1478, 7150, 294, 7840, 42434, 38253, 11, 50535, 50535, 570, 321, 2825, 466, 309, 294, 264, 4319, 295, 18527, 36, 11, 50655, 50655, 457, 1553, 534, 13468, 437, 309, 390, 13, 50801, 50801, 1711, 1935, 286, 994, 380, 13, 50843, 50843, 2704, 291, 630, 11, 28327, 78, 13, 51015, 51015, 583, 264, 2674, 1254, 295, 3034, 1478, 38253, 13, 51125, 51125, 1610, 286, 393, 751, 466, 264, 24886, 32926, 952, 37642, 51223, 51223, 295, 646, 79, 1513, 13, 51297, 51297, 286, 393, 767, 360, 1293, 11, 570, 309, 311, 733, 295, 2370, 13, 51409, 51409, 467, 486, 747, 544, 813, 1732, 2077, 11, 51459, 51459, 457, 291, 393, 1856, 5699, 291, 528, 13, 51547, 51547, 2264, 11, 550, 718, 311, 352, 337, 1293, 13, 51645, 51645, 440, 24886, 14521, 551, 307, 2099, 11, 370, 286, 478, 516, 281, 360, 300, 700, 13, 51771, 51771, 2264, 13, 51796], "temperature": 0.0, "avg_logprob": -0.19094123587703074, "compression_ratio": 1.6644736842105263, "no_speech_prob": 1.5203963812382426e-05}, {"id": 1875, "seek": 554850, "start": 5563.72, "end": 5565.68, "text": " Or I can talk about the Lagrangian formulation", "tokens": [50364, 293, 3034, 1478, 7150, 294, 7840, 42434, 38253, 11, 50535, 50535, 570, 321, 2825, 466, 309, 294, 264, 4319, 295, 18527, 36, 11, 50655, 50655, 457, 1553, 534, 13468, 437, 309, 390, 13, 50801, 50801, 1711, 1935, 286, 994, 380, 13, 50843, 50843, 2704, 291, 630, 11, 28327, 78, 13, 51015, 51015, 583, 264, 2674, 1254, 295, 3034, 1478, 38253, 13, 51125, 51125, 1610, 286, 393, 751, 466, 264, 24886, 32926, 952, 37642, 51223, 51223, 295, 646, 79, 1513, 13, 51297, 51297, 286, 393, 767, 360, 1293, 11, 570, 309, 311, 733, 295, 2370, 13, 51409, 51409, 467, 486, 747, 544, 813, 1732, 2077, 11, 51459, 51459, 457, 291, 393, 1856, 5699, 291, 528, 13, 51547, 51547, 2264, 11, 550, 718, 311, 352, 337, 1293, 13, 51645, 51645, 440, 24886, 14521, 551, 307, 2099, 11, 370, 286, 478, 516, 281, 360, 300, 700, 13, 51771, 51771, 2264, 13, 51796], "temperature": 0.0, "avg_logprob": -0.19094123587703074, "compression_ratio": 1.6644736842105263, "no_speech_prob": 1.5203963812382426e-05}, {"id": 1876, "seek": 554850, "start": 5565.68, "end": 5567.16, "text": " of backprop.", "tokens": [50364, 293, 3034, 1478, 7150, 294, 7840, 42434, 38253, 11, 50535, 50535, 570, 321, 2825, 466, 309, 294, 264, 4319, 295, 18527, 36, 11, 50655, 50655, 457, 1553, 534, 13468, 437, 309, 390, 13, 50801, 50801, 1711, 1935, 286, 994, 380, 13, 50843, 50843, 2704, 291, 630, 11, 28327, 78, 13, 51015, 51015, 583, 264, 2674, 1254, 295, 3034, 1478, 38253, 13, 51125, 51125, 1610, 286, 393, 751, 466, 264, 24886, 32926, 952, 37642, 51223, 51223, 295, 646, 79, 1513, 13, 51297, 51297, 286, 393, 767, 360, 1293, 11, 570, 309, 311, 733, 295, 2370, 13, 51409, 51409, 467, 486, 747, 544, 813, 1732, 2077, 11, 51459, 51459, 457, 291, 393, 1856, 5699, 291, 528, 13, 51547, 51547, 2264, 11, 550, 718, 311, 352, 337, 1293, 13, 51645, 51645, 440, 24886, 14521, 551, 307, 2099, 11, 370, 286, 478, 516, 281, 360, 300, 700, 13, 51771, 51771, 2264, 13, 51796], "temperature": 0.0, "avg_logprob": -0.19094123587703074, "compression_ratio": 1.6644736842105263, "no_speech_prob": 1.5203963812382426e-05}, {"id": 1877, "seek": 554850, "start": 5567.16, "end": 5569.4, "text": " I can actually do both, because it's kind of fast.", "tokens": [50364, 293, 3034, 1478, 7150, 294, 7840, 42434, 38253, 11, 50535, 50535, 570, 321, 2825, 466, 309, 294, 264, 4319, 295, 18527, 36, 11, 50655, 50655, 457, 1553, 534, 13468, 437, 309, 390, 13, 50801, 50801, 1711, 1935, 286, 994, 380, 13, 50843, 50843, 2704, 291, 630, 11, 28327, 78, 13, 51015, 51015, 583, 264, 2674, 1254, 295, 3034, 1478, 38253, 13, 51125, 51125, 1610, 286, 393, 751, 466, 264, 24886, 32926, 952, 37642, 51223, 51223, 295, 646, 79, 1513, 13, 51297, 51297, 286, 393, 767, 360, 1293, 11, 570, 309, 311, 733, 295, 2370, 13, 51409, 51409, 467, 486, 747, 544, 813, 1732, 2077, 11, 51459, 51459, 457, 291, 393, 1856, 5699, 291, 528, 13, 51547, 51547, 2264, 11, 550, 718, 311, 352, 337, 1293, 13, 51645, 51645, 440, 24886, 14521, 551, 307, 2099, 11, 370, 286, 478, 516, 281, 360, 300, 700, 13, 51771, 51771, 2264, 13, 51796], "temperature": 0.0, "avg_logprob": -0.19094123587703074, "compression_ratio": 1.6644736842105263, "no_speech_prob": 1.5203963812382426e-05}, {"id": 1878, "seek": 554850, "start": 5569.4, "end": 5570.4, "text": " It will take more than five minutes,", "tokens": [50364, 293, 3034, 1478, 7150, 294, 7840, 42434, 38253, 11, 50535, 50535, 570, 321, 2825, 466, 309, 294, 264, 4319, 295, 18527, 36, 11, 50655, 50655, 457, 1553, 534, 13468, 437, 309, 390, 13, 50801, 50801, 1711, 1935, 286, 994, 380, 13, 50843, 50843, 2704, 291, 630, 11, 28327, 78, 13, 51015, 51015, 583, 264, 2674, 1254, 295, 3034, 1478, 38253, 13, 51125, 51125, 1610, 286, 393, 751, 466, 264, 24886, 32926, 952, 37642, 51223, 51223, 295, 646, 79, 1513, 13, 51297, 51297, 286, 393, 767, 360, 1293, 11, 570, 309, 311, 733, 295, 2370, 13, 51409, 51409, 467, 486, 747, 544, 813, 1732, 2077, 11, 51459, 51459, 457, 291, 393, 1856, 5699, 291, 528, 13, 51547, 51547, 2264, 11, 550, 718, 311, 352, 337, 1293, 13, 51645, 51645, 440, 24886, 14521, 551, 307, 2099, 11, 370, 286, 478, 516, 281, 360, 300, 700, 13, 51771, 51771, 2264, 13, 51796], "temperature": 0.0, "avg_logprob": -0.19094123587703074, "compression_ratio": 1.6644736842105263, "no_speech_prob": 1.5203963812382426e-05}, {"id": 1879, "seek": 554850, "start": 5570.4, "end": 5572.16, "text": " but you can leave whenever you want.", "tokens": [50364, 293, 3034, 1478, 7150, 294, 7840, 42434, 38253, 11, 50535, 50535, 570, 321, 2825, 466, 309, 294, 264, 4319, 295, 18527, 36, 11, 50655, 50655, 457, 1553, 534, 13468, 437, 309, 390, 13, 50801, 50801, 1711, 1935, 286, 994, 380, 13, 50843, 50843, 2704, 291, 630, 11, 28327, 78, 13, 51015, 51015, 583, 264, 2674, 1254, 295, 3034, 1478, 38253, 13, 51125, 51125, 1610, 286, 393, 751, 466, 264, 24886, 32926, 952, 37642, 51223, 51223, 295, 646, 79, 1513, 13, 51297, 51297, 286, 393, 767, 360, 1293, 11, 570, 309, 311, 733, 295, 2370, 13, 51409, 51409, 467, 486, 747, 544, 813, 1732, 2077, 11, 51459, 51459, 457, 291, 393, 1856, 5699, 291, 528, 13, 51547, 51547, 2264, 11, 550, 718, 311, 352, 337, 1293, 13, 51645, 51645, 440, 24886, 14521, 551, 307, 2099, 11, 370, 286, 478, 516, 281, 360, 300, 700, 13, 51771, 51771, 2264, 13, 51796], "temperature": 0.0, "avg_logprob": -0.19094123587703074, "compression_ratio": 1.6644736842105263, "no_speech_prob": 1.5203963812382426e-05}, {"id": 1880, "seek": 554850, "start": 5572.16, "end": 5574.12, "text": " OK, then let's go for both.", "tokens": [50364, 293, 3034, 1478, 7150, 294, 7840, 42434, 38253, 11, 50535, 50535, 570, 321, 2825, 466, 309, 294, 264, 4319, 295, 18527, 36, 11, 50655, 50655, 457, 1553, 534, 13468, 437, 309, 390, 13, 50801, 50801, 1711, 1935, 286, 994, 380, 13, 50843, 50843, 2704, 291, 630, 11, 28327, 78, 13, 51015, 51015, 583, 264, 2674, 1254, 295, 3034, 1478, 38253, 13, 51125, 51125, 1610, 286, 393, 751, 466, 264, 24886, 32926, 952, 37642, 51223, 51223, 295, 646, 79, 1513, 13, 51297, 51297, 286, 393, 767, 360, 1293, 11, 570, 309, 311, 733, 295, 2370, 13, 51409, 51409, 467, 486, 747, 544, 813, 1732, 2077, 11, 51459, 51459, 457, 291, 393, 1856, 5699, 291, 528, 13, 51547, 51547, 2264, 11, 550, 718, 311, 352, 337, 1293, 13, 51645, 51645, 440, 24886, 14521, 551, 307, 2099, 11, 370, 286, 478, 516, 281, 360, 300, 700, 13, 51771, 51771, 2264, 13, 51796], "temperature": 0.0, "avg_logprob": -0.19094123587703074, "compression_ratio": 1.6644736842105263, "no_speech_prob": 1.5203963812382426e-05}, {"id": 1881, "seek": 554850, "start": 5574.12, "end": 5576.64, "text": " The Lagrange thing is short, so I'm going to do that first.", "tokens": [50364, 293, 3034, 1478, 7150, 294, 7840, 42434, 38253, 11, 50535, 50535, 570, 321, 2825, 466, 309, 294, 264, 4319, 295, 18527, 36, 11, 50655, 50655, 457, 1553, 534, 13468, 437, 309, 390, 13, 50801, 50801, 1711, 1935, 286, 994, 380, 13, 50843, 50843, 2704, 291, 630, 11, 28327, 78, 13, 51015, 51015, 583, 264, 2674, 1254, 295, 3034, 1478, 38253, 13, 51125, 51125, 1610, 286, 393, 751, 466, 264, 24886, 32926, 952, 37642, 51223, 51223, 295, 646, 79, 1513, 13, 51297, 51297, 286, 393, 767, 360, 1293, 11, 570, 309, 311, 733, 295, 2370, 13, 51409, 51409, 467, 486, 747, 544, 813, 1732, 2077, 11, 51459, 51459, 457, 291, 393, 1856, 5699, 291, 528, 13, 51547, 51547, 2264, 11, 550, 718, 311, 352, 337, 1293, 13, 51645, 51645, 440, 24886, 14521, 551, 307, 2099, 11, 370, 286, 478, 516, 281, 360, 300, 700, 13, 51771, 51771, 2264, 13, 51796], "temperature": 0.0, "avg_logprob": -0.19094123587703074, "compression_ratio": 1.6644736842105263, "no_speech_prob": 1.5203963812382426e-05}, {"id": 1882, "seek": 557664, "start": 5576.64, "end": 5578.64, "text": " OK.", "tokens": [50364, 2264, 13, 50464, 50464, 2264, 11, 370, 291, 393, 47881, 646, 79, 1513, 382, 257, 4464, 2144, 50752, 50752, 833, 25534, 13, 50834, 50834, 407, 291, 362, 364, 4846, 7006, 2031, 307, 516, 807, 257, 700, 51084, 51084, 11745, 10088, 13, 51188, 51188, 961, 311, 818, 309, 283, 16, 295, 2031, 86, 16, 13, 51541, 51541], "temperature": 0.0, "avg_logprob": -0.272523518266349, "compression_ratio": 1.2428571428571429, "no_speech_prob": 2.8128476969868643e-06}, {"id": 1883, "seek": 557664, "start": 5578.64, "end": 5584.400000000001, "text": " OK, so you can formulate backprop as a minimization", "tokens": [50364, 2264, 13, 50464, 50464, 2264, 11, 370, 291, 393, 47881, 646, 79, 1513, 382, 257, 4464, 2144, 50752, 50752, 833, 25534, 13, 50834, 50834, 407, 291, 362, 364, 4846, 7006, 2031, 307, 516, 807, 257, 700, 51084, 51084, 11745, 10088, 13, 51188, 51188, 961, 311, 818, 309, 283, 16, 295, 2031, 86, 16, 13, 51541, 51541], "temperature": 0.0, "avg_logprob": -0.272523518266349, "compression_ratio": 1.2428571428571429, "no_speech_prob": 2.8128476969868643e-06}, {"id": 1884, "seek": 557664, "start": 5584.400000000001, "end": 5586.04, "text": " under constraint.", "tokens": [50364, 2264, 13, 50464, 50464, 2264, 11, 370, 291, 393, 47881, 646, 79, 1513, 382, 257, 4464, 2144, 50752, 50752, 833, 25534, 13, 50834, 50834, 407, 291, 362, 364, 4846, 7006, 2031, 307, 516, 807, 257, 700, 51084, 51084, 11745, 10088, 13, 51188, 51188, 961, 311, 818, 309, 283, 16, 295, 2031, 86, 16, 13, 51541, 51541], "temperature": 0.0, "avg_logprob": -0.272523518266349, "compression_ratio": 1.2428571428571429, "no_speech_prob": 2.8128476969868643e-06}, {"id": 1885, "seek": 557664, "start": 5586.04, "end": 5591.04, "text": " So you have an input variable x is going through a first", "tokens": [50364, 2264, 13, 50464, 50464, 2264, 11, 370, 291, 393, 47881, 646, 79, 1513, 382, 257, 4464, 2144, 50752, 50752, 833, 25534, 13, 50834, 50834, 407, 291, 362, 364, 4846, 7006, 2031, 307, 516, 807, 257, 700, 51084, 51084, 11745, 10088, 13, 51188, 51188, 961, 311, 818, 309, 283, 16, 295, 2031, 86, 16, 13, 51541, 51541], "temperature": 0.0, "avg_logprob": -0.272523518266349, "compression_ratio": 1.2428571428571429, "no_speech_prob": 2.8128476969868643e-06}, {"id": 1886, "seek": 557664, "start": 5591.04, "end": 5593.12, "text": " functional module.", "tokens": [50364, 2264, 13, 50464, 50464, 2264, 11, 370, 291, 393, 47881, 646, 79, 1513, 382, 257, 4464, 2144, 50752, 50752, 833, 25534, 13, 50834, 50834, 407, 291, 362, 364, 4846, 7006, 2031, 307, 516, 807, 257, 700, 51084, 51084, 11745, 10088, 13, 51188, 51188, 961, 311, 818, 309, 283, 16, 295, 2031, 86, 16, 13, 51541, 51541], "temperature": 0.0, "avg_logprob": -0.272523518266349, "compression_ratio": 1.2428571428571429, "no_speech_prob": 2.8128476969868643e-06}, {"id": 1887, "seek": 557664, "start": 5593.12, "end": 5600.18, "text": " Let's call it f1 of xw1.", "tokens": [50364, 2264, 13, 50464, 50464, 2264, 11, 370, 291, 393, 47881, 646, 79, 1513, 382, 257, 4464, 2144, 50752, 50752, 833, 25534, 13, 50834, 50834, 407, 291, 362, 364, 4846, 7006, 2031, 307, 516, 807, 257, 700, 51084, 51084, 11745, 10088, 13, 51188, 51188, 961, 311, 818, 309, 283, 16, 295, 2031, 86, 16, 13, 51541, 51541], "temperature": 0.0, "avg_logprob": -0.272523518266349, "compression_ratio": 1.2428571428571429, "no_speech_prob": 2.8128476969868643e-06}, {"id": 1888, "seek": 560018, "start": 5600.18, "end": 5607.8, "text": " And it produces, we're going to call it z1.", "tokens": [50364, 400, 309, 14725, 11, 321, 434, 516, 281, 818, 309, 710, 16, 13, 50745, 50745, 5135, 11, 718, 385, 818, 341, 283, 15, 13, 50937, 50937, 2264, 11, 293, 550, 264, 1150, 472, 307, 516, 281, 312, 283, 16, 295, 710, 16, 86, 16, 13, 51323, 51323, 400, 300, 14725, 710, 17, 11, 1030, 11458, 13, 51531, 51531, 407, 293, 550, 412, 264, 917, 11, 321, 362, 264, 1036, 10088, 11, 51759, 51759], "temperature": 0.0, "avg_logprob": -0.18753477732340496, "compression_ratio": 1.4256756756756757, "no_speech_prob": 3.089104438913637e-06}, {"id": 1889, "seek": 560018, "start": 5607.8, "end": 5611.64, "text": " Actually, let me call this f0.", "tokens": [50364, 400, 309, 14725, 11, 321, 434, 516, 281, 818, 309, 710, 16, 13, 50745, 50745, 5135, 11, 718, 385, 818, 341, 283, 15, 13, 50937, 50937, 2264, 11, 293, 550, 264, 1150, 472, 307, 516, 281, 312, 283, 16, 295, 710, 16, 86, 16, 13, 51323, 51323, 400, 300, 14725, 710, 17, 11, 1030, 11458, 13, 51531, 51531, 407, 293, 550, 412, 264, 917, 11, 321, 362, 264, 1036, 10088, 11, 51759, 51759], "temperature": 0.0, "avg_logprob": -0.18753477732340496, "compression_ratio": 1.4256756756756757, "no_speech_prob": 3.089104438913637e-06}, {"id": 1890, "seek": 560018, "start": 5611.64, "end": 5619.360000000001, "text": " OK, and then the second one is going to be f1 of z1w1.", "tokens": [50364, 400, 309, 14725, 11, 321, 434, 516, 281, 818, 309, 710, 16, 13, 50745, 50745, 5135, 11, 718, 385, 818, 341, 283, 15, 13, 50937, 50937, 2264, 11, 293, 550, 264, 1150, 472, 307, 516, 281, 312, 283, 16, 295, 710, 16, 86, 16, 13, 51323, 51323, 400, 300, 14725, 710, 17, 11, 1030, 11458, 13, 51531, 51531, 407, 293, 550, 412, 264, 917, 11, 321, 362, 264, 1036, 10088, 11, 51759, 51759], "temperature": 0.0, "avg_logprob": -0.18753477732340496, "compression_ratio": 1.4256756756756757, "no_speech_prob": 3.089104438913637e-06}, {"id": 1891, "seek": 560018, "start": 5619.360000000001, "end": 5623.52, "text": " And that produces z2, et cetera.", "tokens": [50364, 400, 309, 14725, 11, 321, 434, 516, 281, 818, 309, 710, 16, 13, 50745, 50745, 5135, 11, 718, 385, 818, 341, 283, 15, 13, 50937, 50937, 2264, 11, 293, 550, 264, 1150, 472, 307, 516, 281, 312, 283, 16, 295, 710, 16, 86, 16, 13, 51323, 51323, 400, 300, 14725, 710, 17, 11, 1030, 11458, 13, 51531, 51531, 407, 293, 550, 412, 264, 917, 11, 321, 362, 264, 1036, 10088, 11, 51759, 51759], "temperature": 0.0, "avg_logprob": -0.18753477732340496, "compression_ratio": 1.4256756756756757, "no_speech_prob": 3.089104438913637e-06}, {"id": 1892, "seek": 560018, "start": 5623.52, "end": 5628.08, "text": " So and then at the end, we have the last module,", "tokens": [50364, 400, 309, 14725, 11, 321, 434, 516, 281, 818, 309, 710, 16, 13, 50745, 50745, 5135, 11, 718, 385, 818, 341, 283, 15, 13, 50937, 50937, 2264, 11, 293, 550, 264, 1150, 472, 307, 516, 281, 312, 283, 16, 295, 710, 16, 86, 16, 13, 51323, 51323, 400, 300, 14725, 710, 17, 11, 1030, 11458, 13, 51531, 51531, 407, 293, 550, 412, 264, 917, 11, 321, 362, 264, 1036, 10088, 11, 51759, 51759], "temperature": 0.0, "avg_logprob": -0.18753477732340496, "compression_ratio": 1.4256756756756757, "no_speech_prob": 3.089104438913637e-06}, {"id": 1893, "seek": 562808, "start": 5628.08, "end": 5633.96, "text": " and it goes into some sort of energy term.", "tokens": [50364, 293, 309, 1709, 666, 512, 1333, 295, 2281, 1433, 13, 50658, 50658, 2264, 11, 718, 311, 584, 309, 307, 5598, 498, 321, 360, 46533, 2614, 11, 50778, 50778, 457, 309, 1177, 380, 1871, 13, 50824, 50824, 467, 311, 445, 257, 2063, 13, 50852, 51024, 961, 311, 818, 341, 2146, 710, 77, 13, 51076, 51400, 1176, 77, 293, 288, 13, 51474, 51650], "temperature": 0.0, "avg_logprob": -0.3653841472807385, "compression_ratio": 1.2720588235294117, "no_speech_prob": 1.4142741520117852e-06}, {"id": 1894, "seek": 562808, "start": 5633.96, "end": 5636.36, "text": " OK, let's say it is output if we do supervised running,", "tokens": [50364, 293, 309, 1709, 666, 512, 1333, 295, 2281, 1433, 13, 50658, 50658, 2264, 11, 718, 311, 584, 309, 307, 5598, 498, 321, 360, 46533, 2614, 11, 50778, 50778, 457, 309, 1177, 380, 1871, 13, 50824, 50824, 467, 311, 445, 257, 2063, 13, 50852, 51024, 961, 311, 818, 341, 2146, 710, 77, 13, 51076, 51400, 1176, 77, 293, 288, 13, 51474, 51650], "temperature": 0.0, "avg_logprob": -0.3653841472807385, "compression_ratio": 1.2720588235294117, "no_speech_prob": 1.4142741520117852e-06}, {"id": 1895, "seek": 562808, "start": 5636.36, "end": 5637.28, "text": " but it doesn't matter.", "tokens": [50364, 293, 309, 1709, 666, 512, 1333, 295, 2281, 1433, 13, 50658, 50658, 2264, 11, 718, 311, 584, 309, 307, 5598, 498, 321, 360, 46533, 2614, 11, 50778, 50778, 457, 309, 1177, 380, 1871, 13, 50824, 50824, 467, 311, 445, 257, 2063, 13, 50852, 51024, 961, 311, 818, 341, 2146, 710, 77, 13, 51076, 51400, 1176, 77, 293, 288, 13, 51474, 51650], "temperature": 0.0, "avg_logprob": -0.3653841472807385, "compression_ratio": 1.2720588235294117, "no_speech_prob": 1.4142741520117852e-06}, {"id": 1896, "seek": 562808, "start": 5637.28, "end": 5637.84, "text": " It's just a cost.", "tokens": [50364, 293, 309, 1709, 666, 512, 1333, 295, 2281, 1433, 13, 50658, 50658, 2264, 11, 718, 311, 584, 309, 307, 5598, 498, 321, 360, 46533, 2614, 11, 50778, 50778, 457, 309, 1177, 380, 1871, 13, 50824, 50824, 467, 311, 445, 257, 2063, 13, 50852, 51024, 961, 311, 818, 341, 2146, 710, 77, 13, 51076, 51400, 1176, 77, 293, 288, 13, 51474, 51650], "temperature": 0.0, "avg_logprob": -0.3653841472807385, "compression_ratio": 1.2720588235294117, "no_speech_prob": 1.4142741520117852e-06}, {"id": 1897, "seek": 562808, "start": 5641.28, "end": 5642.32, "text": " Let's call this guy zn.", "tokens": [50364, 293, 309, 1709, 666, 512, 1333, 295, 2281, 1433, 13, 50658, 50658, 2264, 11, 718, 311, 584, 309, 307, 5598, 498, 321, 360, 46533, 2614, 11, 50778, 50778, 457, 309, 1177, 380, 1871, 13, 50824, 50824, 467, 311, 445, 257, 2063, 13, 50852, 51024, 961, 311, 818, 341, 2146, 710, 77, 13, 51076, 51400, 1176, 77, 293, 288, 13, 51474, 51650], "temperature": 0.0, "avg_logprob": -0.3653841472807385, "compression_ratio": 1.2720588235294117, "no_speech_prob": 1.4142741520117852e-06}, {"id": 1898, "seek": 562808, "start": 5648.8, "end": 5650.28, "text": " Zn and y.", "tokens": [50364, 293, 309, 1709, 666, 512, 1333, 295, 2281, 1433, 13, 50658, 50658, 2264, 11, 718, 311, 584, 309, 307, 5598, 498, 321, 360, 46533, 2614, 11, 50778, 50778, 457, 309, 1177, 380, 1871, 13, 50824, 50824, 467, 311, 445, 257, 2063, 13, 50852, 51024, 961, 311, 818, 341, 2146, 710, 77, 13, 51076, 51400, 1176, 77, 293, 288, 13, 51474, 51650], "temperature": 0.0, "avg_logprob": -0.3653841472807385, "compression_ratio": 1.2720588235294117, "no_speech_prob": 1.4142741520117852e-06}, {"id": 1899, "seek": 565028, "start": 5650.28, "end": 5663.4, "text": " OK, so the forward pass can be written as zk plus 1", "tokens": [50364, 2264, 11, 370, 264, 2128, 1320, 393, 312, 3720, 382, 710, 74, 1804, 502, 51020, 51020, 307, 2681, 281, 283, 74, 295, 710, 74, 261, 74, 13, 51512, 51512, 2264, 11, 300, 311, 445, 257, 2128, 1320, 13, 51662, 51662, 400, 550, 291, 362, 257, 2063, 2445, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.34770264992347133, "compression_ratio": 1.2434782608695651, "no_speech_prob": 8.059243441493891e-07}, {"id": 1900, "seek": 565028, "start": 5663.4, "end": 5673.24, "text": " is equal to fk of zk wk.", "tokens": [50364, 2264, 11, 370, 264, 2128, 1320, 393, 312, 3720, 382, 710, 74, 1804, 502, 51020, 51020, 307, 2681, 281, 283, 74, 295, 710, 74, 261, 74, 13, 51512, 51512, 2264, 11, 300, 311, 445, 257, 2128, 1320, 13, 51662, 51662, 400, 550, 291, 362, 257, 2063, 2445, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.34770264992347133, "compression_ratio": 1.2434782608695651, "no_speech_prob": 8.059243441493891e-07}, {"id": 1901, "seek": 565028, "start": 5673.24, "end": 5676.24, "text": " OK, that's just a forward pass.", "tokens": [50364, 2264, 11, 370, 264, 2128, 1320, 393, 312, 3720, 382, 710, 74, 1804, 502, 51020, 51020, 307, 2681, 281, 283, 74, 295, 710, 74, 261, 74, 13, 51512, 51512, 2264, 11, 300, 311, 445, 257, 2128, 1320, 13, 51662, 51662, 400, 550, 291, 362, 257, 2063, 2445, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.34770264992347133, "compression_ratio": 1.2434782608695651, "no_speech_prob": 8.059243441493891e-07}, {"id": 1902, "seek": 565028, "start": 5676.24, "end": 5678.2, "text": " And then you have a cost function.", "tokens": [50364, 2264, 11, 370, 264, 2128, 1320, 393, 312, 3720, 382, 710, 74, 1804, 502, 51020, 51020, 307, 2681, 281, 283, 74, 295, 710, 74, 261, 74, 13, 51512, 51512, 2264, 11, 300, 311, 445, 257, 2128, 1320, 13, 51662, 51662, 400, 550, 291, 362, 257, 2063, 2445, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.34770264992347133, "compression_ratio": 1.2434782608695651, "no_speech_prob": 8.059243441493891e-07}, {"id": 1903, "seek": 567820, "start": 5678.2, "end": 5682.04, "text": " And then you have a cost function c,", "tokens": [50364, 400, 550, 291, 362, 257, 2063, 2445, 269, 11, 50556, 50556, 597, 291, 528, 281, 17522, 11, 597, 307, 269, 295, 710, 77, 288, 13, 50878, 50878, 663, 311, 445, 2035, 2063, 2445, 291, 528, 281, 17522, 13, 51003, 51180, 823, 11, 291, 393, 2464, 264, 2302, 646, 1154, 51382, 51382, 382, 257, 4464, 2144, 295, 264, 25534, 13, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.2959885975671193, "compression_ratio": 1.5454545454545454, "no_speech_prob": 1.8737385971689946e-06}, {"id": 1904, "seek": 567820, "start": 5682.04, "end": 5688.48, "text": " which you want to minimize, which is c of zn y.", "tokens": [50364, 400, 550, 291, 362, 257, 2063, 2445, 269, 11, 50556, 50556, 597, 291, 528, 281, 17522, 11, 597, 307, 269, 295, 710, 77, 288, 13, 50878, 50878, 663, 311, 445, 2035, 2063, 2445, 291, 528, 281, 17522, 13, 51003, 51180, 823, 11, 291, 393, 2464, 264, 2302, 646, 1154, 51382, 51382, 382, 257, 4464, 2144, 295, 264, 25534, 13, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.2959885975671193, "compression_ratio": 1.5454545454545454, "no_speech_prob": 1.8737385971689946e-06}, {"id": 1905, "seek": 567820, "start": 5688.48, "end": 5690.98, "text": " That's just whatever cost function you want to minimize.", "tokens": [50364, 400, 550, 291, 362, 257, 2063, 2445, 269, 11, 50556, 50556, 597, 291, 528, 281, 17522, 11, 597, 307, 269, 295, 710, 77, 288, 13, 50878, 50878, 663, 311, 445, 2035, 2063, 2445, 291, 528, 281, 17522, 13, 51003, 51180, 823, 11, 291, 393, 2464, 264, 2302, 646, 1154, 51382, 51382, 382, 257, 4464, 2144, 295, 264, 25534, 13, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.2959885975671193, "compression_ratio": 1.5454545454545454, "no_speech_prob": 1.8737385971689946e-06}, {"id": 1906, "seek": 567820, "start": 5694.5199999999995, "end": 5698.5599999999995, "text": " Now, you can write the entire back problem", "tokens": [50364, 400, 550, 291, 362, 257, 2063, 2445, 269, 11, 50556, 50556, 597, 291, 528, 281, 17522, 11, 597, 307, 269, 295, 710, 77, 288, 13, 50878, 50878, 663, 311, 445, 2035, 2063, 2445, 291, 528, 281, 17522, 13, 51003, 51180, 823, 11, 291, 393, 2464, 264, 2302, 646, 1154, 51382, 51382, 382, 257, 4464, 2144, 295, 264, 25534, 13, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.2959885975671193, "compression_ratio": 1.5454545454545454, "no_speech_prob": 1.8737385971689946e-06}, {"id": 1907, "seek": 567820, "start": 5698.5599999999995, "end": 5701.32, "text": " as a minimization of the constraint.", "tokens": [50364, 400, 550, 291, 362, 257, 2063, 2445, 269, 11, 50556, 50556, 597, 291, 528, 281, 17522, 11, 597, 307, 269, 295, 710, 77, 288, 13, 50878, 50878, 663, 311, 445, 2035, 2063, 2445, 291, 528, 281, 17522, 13, 51003, 51180, 823, 11, 291, 393, 2464, 264, 2302, 646, 1154, 51382, 51382, 382, 257, 4464, 2144, 295, 264, 25534, 13, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.2959885975671193, "compression_ratio": 1.5454545454545454, "no_speech_prob": 1.8737385971689946e-06}, {"id": 1908, "seek": 570132, "start": 5701.32, "end": 5712.12, "text": " And the statement is minimize c with the constraint", "tokens": [50364, 400, 264, 5629, 307, 17522, 269, 365, 264, 25534, 50904, 50904, 1270, 300, 264, 3673, 25534, 307, 31197, 13, 51262, 51506, 400, 562, 291, 362, 257, 4464, 2144, 1154, 293, 257, 25534, 11, 51676, 51676, 264, 1151, 551, 281, 360, 307, 281, 2464, 257, 24886, 32926, 952, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.14698794254889855, "compression_ratio": 1.5, "no_speech_prob": 2.6010638976003975e-06}, {"id": 1909, "seek": 570132, "start": 5712.12, "end": 5719.28, "text": " such that the above constraint is verified.", "tokens": [50364, 400, 264, 5629, 307, 17522, 269, 365, 264, 25534, 50904, 50904, 1270, 300, 264, 3673, 25534, 307, 31197, 13, 51262, 51506, 400, 562, 291, 362, 257, 4464, 2144, 1154, 293, 257, 25534, 11, 51676, 51676, 264, 1151, 551, 281, 360, 307, 281, 2464, 257, 24886, 32926, 952, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.14698794254889855, "compression_ratio": 1.5, "no_speech_prob": 2.6010638976003975e-06}, {"id": 1910, "seek": 570132, "start": 5724.16, "end": 5727.5599999999995, "text": " And when you have a minimization problem and a constraint,", "tokens": [50364, 400, 264, 5629, 307, 17522, 269, 365, 264, 25534, 50904, 50904, 1270, 300, 264, 3673, 25534, 307, 31197, 13, 51262, 51506, 400, 562, 291, 362, 257, 4464, 2144, 1154, 293, 257, 25534, 11, 51676, 51676, 264, 1151, 551, 281, 360, 307, 281, 2464, 257, 24886, 32926, 952, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.14698794254889855, "compression_ratio": 1.5, "no_speech_prob": 2.6010638976003975e-06}, {"id": 1911, "seek": 570132, "start": 5727.5599999999995, "end": 5729.799999999999, "text": " the best thing to do is to write a Lagrangian.", "tokens": [50364, 400, 264, 5629, 307, 17522, 269, 365, 264, 25534, 50904, 50904, 1270, 300, 264, 3673, 25534, 307, 31197, 13, 51262, 51506, 400, 562, 291, 362, 257, 4464, 2144, 1154, 293, 257, 25534, 11, 51676, 51676, 264, 1151, 551, 281, 360, 307, 281, 2464, 257, 24886, 32926, 952, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.14698794254889855, "compression_ratio": 1.5, "no_speech_prob": 2.6010638976003975e-06}, {"id": 1912, "seek": 572980, "start": 5729.8, "end": 5733.08, "text": " So you write a Lagrange function.", "tokens": [50364, 407, 291, 2464, 257, 24886, 14521, 2445, 13, 50528, 50528, 400, 286, 478, 516, 281, 980, 291, 558, 1314, 437, 307, 341, 2445, 295, 13, 50738, 50738, 400, 337, 257, 2167, 3097, 6889, 2031, 88, 50870, 50870, 307, 516, 281, 312, 264, 2063, 710, 77, 288, 13, 51118, 51334, 1042, 11, 264, 661, 551, 321, 1062, 584, 611, 51432, 51432, 307, 456, 307, 1071, 25534, 11, 597, 307, 300, 710, 15, 6915, 2031, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.19022791202251726, "compression_ratio": 1.5086705202312138, "no_speech_prob": 2.3320112632063683e-06}, {"id": 1913, "seek": 572980, "start": 5733.08, "end": 5737.28, "text": " And I'm going to tell you right away what is this function of.", "tokens": [50364, 407, 291, 2464, 257, 24886, 14521, 2445, 13, 50528, 50528, 400, 286, 478, 516, 281, 980, 291, 558, 1314, 437, 307, 341, 2445, 295, 13, 50738, 50738, 400, 337, 257, 2167, 3097, 6889, 2031, 88, 50870, 50870, 307, 516, 281, 312, 264, 2063, 710, 77, 288, 13, 51118, 51334, 1042, 11, 264, 661, 551, 321, 1062, 584, 611, 51432, 51432, 307, 456, 307, 1071, 25534, 11, 597, 307, 300, 710, 15, 6915, 2031, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.19022791202251726, "compression_ratio": 1.5086705202312138, "no_speech_prob": 2.3320112632063683e-06}, {"id": 1914, "seek": 572980, "start": 5737.28, "end": 5739.92, "text": " And for a single training sample xy", "tokens": [50364, 407, 291, 2464, 257, 24886, 14521, 2445, 13, 50528, 50528, 400, 286, 478, 516, 281, 980, 291, 558, 1314, 437, 307, 341, 2445, 295, 13, 50738, 50738, 400, 337, 257, 2167, 3097, 6889, 2031, 88, 50870, 50870, 307, 516, 281, 312, 264, 2063, 710, 77, 288, 13, 51118, 51334, 1042, 11, 264, 661, 551, 321, 1062, 584, 611, 51432, 51432, 307, 456, 307, 1071, 25534, 11, 597, 307, 300, 710, 15, 6915, 2031, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.19022791202251726, "compression_ratio": 1.5086705202312138, "no_speech_prob": 2.3320112632063683e-06}, {"id": 1915, "seek": 572980, "start": 5739.92, "end": 5744.88, "text": " is going to be the cost zn y.", "tokens": [50364, 407, 291, 2464, 257, 24886, 14521, 2445, 13, 50528, 50528, 400, 286, 478, 516, 281, 980, 291, 558, 1314, 437, 307, 341, 2445, 295, 13, 50738, 50738, 400, 337, 257, 2167, 3097, 6889, 2031, 88, 50870, 50870, 307, 516, 281, 312, 264, 2063, 710, 77, 288, 13, 51118, 51334, 1042, 11, 264, 661, 551, 321, 1062, 584, 611, 51432, 51432, 307, 456, 307, 1071, 25534, 11, 597, 307, 300, 710, 15, 6915, 2031, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.19022791202251726, "compression_ratio": 1.5086705202312138, "no_speech_prob": 2.3320112632063683e-06}, {"id": 1916, "seek": 572980, "start": 5749.2, "end": 5751.16, "text": " Well, the other thing we might say also", "tokens": [50364, 407, 291, 2464, 257, 24886, 14521, 2445, 13, 50528, 50528, 400, 286, 478, 516, 281, 980, 291, 558, 1314, 437, 307, 341, 2445, 295, 13, 50738, 50738, 400, 337, 257, 2167, 3097, 6889, 2031, 88, 50870, 50870, 307, 516, 281, 312, 264, 2063, 710, 77, 288, 13, 51118, 51334, 1042, 11, 264, 661, 551, 321, 1062, 584, 611, 51432, 51432, 307, 456, 307, 1071, 25534, 11, 597, 307, 300, 710, 15, 6915, 2031, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.19022791202251726, "compression_ratio": 1.5086705202312138, "no_speech_prob": 2.3320112632063683e-06}, {"id": 1917, "seek": 572980, "start": 5751.16, "end": 5757.52, "text": " is there is another constraint, which is that z0 equals x.", "tokens": [50364, 407, 291, 2464, 257, 24886, 14521, 2445, 13, 50528, 50528, 400, 286, 478, 516, 281, 980, 291, 558, 1314, 437, 307, 341, 2445, 295, 13, 50738, 50738, 400, 337, 257, 2167, 3097, 6889, 2031, 88, 50870, 50870, 307, 516, 281, 312, 264, 2063, 710, 77, 288, 13, 51118, 51334, 1042, 11, 264, 661, 551, 321, 1062, 584, 611, 51432, 51432, 307, 456, 307, 1071, 25534, 11, 597, 307, 300, 710, 15, 6915, 2031, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.19022791202251726, "compression_ratio": 1.5086705202312138, "no_speech_prob": 2.3320112632063683e-06}, {"id": 1918, "seek": 575752, "start": 5757.52, "end": 5761.040000000001, "text": " Plus sum over layers.", "tokens": [50364, 7721, 2408, 670, 7914, 13, 50540, 50540, 407, 321, 434, 516, 281, 362, 364, 8186, 350, 490, 502, 281, 297, 13, 50894, 50894, 400, 24886, 14521, 44106, 13, 51156, 51156, 400, 257, 25534, 597, 820, 312, 2681, 281, 1958, 13, 51288, 51288, 400, 300, 25534, 307, 516, 281, 312, 710, 74, 1804, 502, 3175, 283, 74, 295, 710, 74, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.2008227999248202, "compression_ratio": 1.3655172413793104, "no_speech_prob": 9.366975973534863e-06}, {"id": 1919, "seek": 575752, "start": 5761.040000000001, "end": 5768.120000000001, "text": " So we're going to have an index k from 1 to n.", "tokens": [50364, 7721, 2408, 670, 7914, 13, 50540, 50540, 407, 321, 434, 516, 281, 362, 364, 8186, 350, 490, 502, 281, 297, 13, 50894, 50894, 400, 24886, 14521, 44106, 13, 51156, 51156, 400, 257, 25534, 597, 820, 312, 2681, 281, 1958, 13, 51288, 51288, 400, 300, 25534, 307, 516, 281, 312, 710, 74, 1804, 502, 3175, 283, 74, 295, 710, 74, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.2008227999248202, "compression_ratio": 1.3655172413793104, "no_speech_prob": 9.366975973534863e-06}, {"id": 1920, "seek": 575752, "start": 5768.120000000001, "end": 5773.360000000001, "text": " And Lagrange multiplier.", "tokens": [50364, 7721, 2408, 670, 7914, 13, 50540, 50540, 407, 321, 434, 516, 281, 362, 364, 8186, 350, 490, 502, 281, 297, 13, 50894, 50894, 400, 24886, 14521, 44106, 13, 51156, 51156, 400, 257, 25534, 597, 820, 312, 2681, 281, 1958, 13, 51288, 51288, 400, 300, 25534, 307, 516, 281, 312, 710, 74, 1804, 502, 3175, 283, 74, 295, 710, 74, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.2008227999248202, "compression_ratio": 1.3655172413793104, "no_speech_prob": 9.366975973534863e-06}, {"id": 1921, "seek": 575752, "start": 5773.360000000001, "end": 5776.0, "text": " And a constraint which should be equal to 0.", "tokens": [50364, 7721, 2408, 670, 7914, 13, 50540, 50540, 407, 321, 434, 516, 281, 362, 364, 8186, 350, 490, 502, 281, 297, 13, 50894, 50894, 400, 24886, 14521, 44106, 13, 51156, 51156, 400, 257, 25534, 597, 820, 312, 2681, 281, 1958, 13, 51288, 51288, 400, 300, 25534, 307, 516, 281, 312, 710, 74, 1804, 502, 3175, 283, 74, 295, 710, 74, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.2008227999248202, "compression_ratio": 1.3655172413793104, "no_speech_prob": 9.366975973534863e-06}, {"id": 1922, "seek": 575752, "start": 5776.0, "end": 5786.84, "text": " And that constraint is going to be zk plus 1 minus fk of zk", "tokens": [50364, 7721, 2408, 670, 7914, 13, 50540, 50540, 407, 321, 434, 516, 281, 362, 364, 8186, 350, 490, 502, 281, 297, 13, 50894, 50894, 400, 24886, 14521, 44106, 13, 51156, 51156, 400, 257, 25534, 597, 820, 312, 2681, 281, 1958, 13, 51288, 51288, 400, 300, 25534, 307, 516, 281, 312, 710, 74, 1804, 502, 3175, 283, 74, 295, 710, 74, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.2008227999248202, "compression_ratio": 1.3655172413793104, "no_speech_prob": 9.366975973534863e-06}, {"id": 1923, "seek": 578684, "start": 5786.84, "end": 5789.2, "text": " wk.", "tokens": [50364, 261, 74, 13, 50482, 50482, 400, 286, 643, 281, 11, 286, 478, 516, 281, 818, 341, 13607, 350, 1804, 502, 13, 50718, 50718, 400, 341, 307, 516, 281, 362, 281, 312, 493, 281, 297, 3175, 502, 13, 50948, 50948, 400, 1391, 2891, 412, 1958, 11, 767, 13, 51042, 51240, 407, 341, 307, 257, 24886, 32926, 952, 37642, 51356, 51356, 295, 452, 646, 1154, 689, 1936, 291, 51576, 51576, 362, 364, 4787, 2063, 2445, 13, 51650, 51650, 400, 286, 362, 257, 3840, 295, 18491, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1919323964552446, "compression_ratio": 1.545945945945946, "no_speech_prob": 2.295882723046816e-06}, {"id": 1924, "seek": 578684, "start": 5789.2, "end": 5793.92, "text": " And I need to, I'm going to call this lambda k plus 1.", "tokens": [50364, 261, 74, 13, 50482, 50482, 400, 286, 643, 281, 11, 286, 478, 516, 281, 818, 341, 13607, 350, 1804, 502, 13, 50718, 50718, 400, 341, 307, 516, 281, 362, 281, 312, 493, 281, 297, 3175, 502, 13, 50948, 50948, 400, 1391, 2891, 412, 1958, 11, 767, 13, 51042, 51240, 407, 341, 307, 257, 24886, 32926, 952, 37642, 51356, 51356, 295, 452, 646, 1154, 689, 1936, 291, 51576, 51576, 362, 364, 4787, 2063, 2445, 13, 51650, 51650, 400, 286, 362, 257, 3840, 295, 18491, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1919323964552446, "compression_ratio": 1.545945945945946, "no_speech_prob": 2.295882723046816e-06}, {"id": 1925, "seek": 578684, "start": 5793.92, "end": 5798.52, "text": " And this is going to have to be up to n minus 1.", "tokens": [50364, 261, 74, 13, 50482, 50482, 400, 286, 643, 281, 11, 286, 478, 516, 281, 818, 341, 13607, 350, 1804, 502, 13, 50718, 50718, 400, 341, 307, 516, 281, 362, 281, 312, 493, 281, 297, 3175, 502, 13, 50948, 50948, 400, 1391, 2891, 412, 1958, 11, 767, 13, 51042, 51240, 407, 341, 307, 257, 24886, 32926, 952, 37642, 51356, 51356, 295, 452, 646, 1154, 689, 1936, 291, 51576, 51576, 362, 364, 4787, 2063, 2445, 13, 51650, 51650, 400, 286, 362, 257, 3840, 295, 18491, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1919323964552446, "compression_ratio": 1.545945945945946, "no_speech_prob": 2.295882723046816e-06}, {"id": 1926, "seek": 578684, "start": 5798.52, "end": 5800.400000000001, "text": " And probably starting at 0, actually.", "tokens": [50364, 261, 74, 13, 50482, 50482, 400, 286, 643, 281, 11, 286, 478, 516, 281, 818, 341, 13607, 350, 1804, 502, 13, 50718, 50718, 400, 341, 307, 516, 281, 362, 281, 312, 493, 281, 297, 3175, 502, 13, 50948, 50948, 400, 1391, 2891, 412, 1958, 11, 767, 13, 51042, 51240, 407, 341, 307, 257, 24886, 32926, 952, 37642, 51356, 51356, 295, 452, 646, 1154, 689, 1936, 291, 51576, 51576, 362, 364, 4787, 2063, 2445, 13, 51650, 51650, 400, 286, 362, 257, 3840, 295, 18491, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1919323964552446, "compression_ratio": 1.545945945945946, "no_speech_prob": 2.295882723046816e-06}, {"id": 1927, "seek": 578684, "start": 5804.360000000001, "end": 5806.68, "text": " So this is a Lagrangian formulation", "tokens": [50364, 261, 74, 13, 50482, 50482, 400, 286, 643, 281, 11, 286, 478, 516, 281, 818, 341, 13607, 350, 1804, 502, 13, 50718, 50718, 400, 341, 307, 516, 281, 362, 281, 312, 493, 281, 297, 3175, 502, 13, 50948, 50948, 400, 1391, 2891, 412, 1958, 11, 767, 13, 51042, 51240, 407, 341, 307, 257, 24886, 32926, 952, 37642, 51356, 51356, 295, 452, 646, 1154, 689, 1936, 291, 51576, 51576, 362, 364, 4787, 2063, 2445, 13, 51650, 51650, 400, 286, 362, 257, 3840, 295, 18491, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1919323964552446, "compression_ratio": 1.545945945945946, "no_speech_prob": 2.295882723046816e-06}, {"id": 1928, "seek": 578684, "start": 5806.68, "end": 5811.08, "text": " of my back problem where basically you", "tokens": [50364, 261, 74, 13, 50482, 50482, 400, 286, 643, 281, 11, 286, 478, 516, 281, 818, 341, 13607, 350, 1804, 502, 13, 50718, 50718, 400, 341, 307, 516, 281, 362, 281, 312, 493, 281, 297, 3175, 502, 13, 50948, 50948, 400, 1391, 2891, 412, 1958, 11, 767, 13, 51042, 51240, 407, 341, 307, 257, 24886, 32926, 952, 37642, 51356, 51356, 295, 452, 646, 1154, 689, 1936, 291, 51576, 51576, 362, 364, 4787, 2063, 2445, 13, 51650, 51650, 400, 286, 362, 257, 3840, 295, 18491, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1919323964552446, "compression_ratio": 1.545945945945946, "no_speech_prob": 2.295882723046816e-06}, {"id": 1929, "seek": 578684, "start": 5811.08, "end": 5812.56, "text": " have an overall cost function.", "tokens": [50364, 261, 74, 13, 50482, 50482, 400, 286, 643, 281, 11, 286, 478, 516, 281, 818, 341, 13607, 350, 1804, 502, 13, 50718, 50718, 400, 341, 307, 516, 281, 362, 281, 312, 493, 281, 297, 3175, 502, 13, 50948, 50948, 400, 1391, 2891, 412, 1958, 11, 767, 13, 51042, 51240, 407, 341, 307, 257, 24886, 32926, 952, 37642, 51356, 51356, 295, 452, 646, 1154, 689, 1936, 291, 51576, 51576, 362, 364, 4787, 2063, 2445, 13, 51650, 51650, 400, 286, 362, 257, 3840, 295, 18491, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1919323964552446, "compression_ratio": 1.545945945945946, "no_speech_prob": 2.295882723046816e-06}, {"id": 1930, "seek": 578684, "start": 5812.56, "end": 5814.360000000001, "text": " And I have a bunch of constraints.", "tokens": [50364, 261, 74, 13, 50482, 50482, 400, 286, 643, 281, 11, 286, 478, 516, 281, 818, 341, 13607, 350, 1804, 502, 13, 50718, 50718, 400, 341, 307, 516, 281, 362, 281, 312, 493, 281, 297, 3175, 502, 13, 50948, 50948, 400, 1391, 2891, 412, 1958, 11, 767, 13, 51042, 51240, 407, 341, 307, 257, 24886, 32926, 952, 37642, 51356, 51356, 295, 452, 646, 1154, 689, 1936, 291, 51576, 51576, 362, 364, 4787, 2063, 2445, 13, 51650, 51650, 400, 286, 362, 257, 3840, 295, 18491, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1919323964552446, "compression_ratio": 1.545945945945946, "no_speech_prob": 2.295882723046816e-06}, {"id": 1931, "seek": 581436, "start": 5814.36, "end": 5817.96, "text": " The constraints are that the input to layer k", "tokens": [50364, 440, 18491, 366, 300, 264, 4846, 281, 4583, 350, 50544, 50544, 307, 264, 5598, 295, 4583, 350, 3175, 502, 13, 50640, 50846, 407, 341, 24886, 32926, 952, 307, 257, 2445, 295, 2031, 11, 288, 11, 439, 264, 10097, 27476, 11, 51090, 51090, 264, 13607, 350, 311, 11, 439, 264, 710, 311, 11, 293, 261, 13, 51450, 51450, 1057, 264, 261, 311, 13, 51488, 51686, 407, 437, 286, 643, 281, 360, 586, 281, 360, 341, 4464, 2144, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.16949172019958497, "compression_ratio": 1.5031847133757963, "no_speech_prob": 8.137451914080884e-06}, {"id": 1932, "seek": 581436, "start": 5817.96, "end": 5819.88, "text": " is the output of layer k minus 1.", "tokens": [50364, 440, 18491, 366, 300, 264, 4846, 281, 4583, 350, 50544, 50544, 307, 264, 5598, 295, 4583, 350, 3175, 502, 13, 50640, 50846, 407, 341, 24886, 32926, 952, 307, 257, 2445, 295, 2031, 11, 288, 11, 439, 264, 10097, 27476, 11, 51090, 51090, 264, 13607, 350, 311, 11, 439, 264, 710, 311, 11, 293, 261, 13, 51450, 51450, 1057, 264, 261, 311, 13, 51488, 51686, 407, 437, 286, 643, 281, 360, 586, 281, 360, 341, 4464, 2144, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.16949172019958497, "compression_ratio": 1.5031847133757963, "no_speech_prob": 8.137451914080884e-06}, {"id": 1933, "seek": 581436, "start": 5824.0, "end": 5828.88, "text": " So this Lagrangian is a function of x, y, all the lambdas,", "tokens": [50364, 440, 18491, 366, 300, 264, 4846, 281, 4583, 350, 50544, 50544, 307, 264, 5598, 295, 4583, 350, 3175, 502, 13, 50640, 50846, 407, 341, 24886, 32926, 952, 307, 257, 2445, 295, 2031, 11, 288, 11, 439, 264, 10097, 27476, 11, 51090, 51090, 264, 13607, 350, 311, 11, 439, 264, 710, 311, 11, 293, 261, 13, 51450, 51450, 1057, 264, 261, 311, 13, 51488, 51686, 407, 437, 286, 643, 281, 360, 586, 281, 360, 341, 4464, 2144, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.16949172019958497, "compression_ratio": 1.5031847133757963, "no_speech_prob": 8.137451914080884e-06}, {"id": 1934, "seek": 581436, "start": 5828.88, "end": 5836.08, "text": " the lambda k's, all the z's, and w.", "tokens": [50364, 440, 18491, 366, 300, 264, 4846, 281, 4583, 350, 50544, 50544, 307, 264, 5598, 295, 4583, 350, 3175, 502, 13, 50640, 50846, 407, 341, 24886, 32926, 952, 307, 257, 2445, 295, 2031, 11, 288, 11, 439, 264, 10097, 27476, 11, 51090, 51090, 264, 13607, 350, 311, 11, 439, 264, 710, 311, 11, 293, 261, 13, 51450, 51450, 1057, 264, 261, 311, 13, 51488, 51686, 407, 437, 286, 643, 281, 360, 586, 281, 360, 341, 4464, 2144, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.16949172019958497, "compression_ratio": 1.5031847133757963, "no_speech_prob": 8.137451914080884e-06}, {"id": 1935, "seek": 581436, "start": 5836.08, "end": 5836.839999999999, "text": " All the w's.", "tokens": [50364, 440, 18491, 366, 300, 264, 4846, 281, 4583, 350, 50544, 50544, 307, 264, 5598, 295, 4583, 350, 3175, 502, 13, 50640, 50846, 407, 341, 24886, 32926, 952, 307, 257, 2445, 295, 2031, 11, 288, 11, 439, 264, 10097, 27476, 11, 51090, 51090, 264, 13607, 350, 311, 11, 439, 264, 710, 311, 11, 293, 261, 13, 51450, 51450, 1057, 264, 261, 311, 13, 51488, 51686, 407, 437, 286, 643, 281, 360, 586, 281, 360, 341, 4464, 2144, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.16949172019958497, "compression_ratio": 1.5031847133757963, "no_speech_prob": 8.137451914080884e-06}, {"id": 1936, "seek": 581436, "start": 5840.799999999999, "end": 5843.5199999999995, "text": " So what I need to do now to do this minimization", "tokens": [50364, 440, 18491, 366, 300, 264, 4846, 281, 4583, 350, 50544, 50544, 307, 264, 5598, 295, 4583, 350, 3175, 502, 13, 50640, 50846, 407, 341, 24886, 32926, 952, 307, 257, 2445, 295, 2031, 11, 288, 11, 439, 264, 10097, 27476, 11, 51090, 51090, 264, 13607, 350, 311, 11, 439, 264, 710, 311, 11, 293, 261, 13, 51450, 51450, 1057, 264, 261, 311, 13, 51488, 51686, 407, 437, 286, 643, 281, 360, 586, 281, 360, 341, 4464, 2144, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.16949172019958497, "compression_ratio": 1.5031847133757963, "no_speech_prob": 8.137451914080884e-06}, {"id": 1937, "seek": 584352, "start": 5843.52, "end": 5851.56, "text": " of the constraint is I need to do dl over d lambda k equals 0.", "tokens": [50364, 295, 264, 25534, 307, 286, 643, 281, 360, 37873, 670, 274, 13607, 350, 6915, 1958, 13, 50766, 50766, 400, 498, 286, 11, 341, 4188, 11, 264, 16235, 295, 287, 365, 3104, 51028, 51028, 281, 13607, 350, 307, 445, 341, 13, 51246, 51246, 1779, 30, 51354, 51354, 45691, 350, 1804, 502, 11, 286, 478, 2597, 13, 51476, 51476, 467, 311, 445, 341, 23350, 9374, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.21910977363586426, "compression_ratio": 1.3866666666666667, "no_speech_prob": 1.0129583642992657e-05}, {"id": 1938, "seek": 584352, "start": 5851.56, "end": 5856.8, "text": " And if I, this condition, the gradient of l with respect", "tokens": [50364, 295, 264, 25534, 307, 286, 643, 281, 360, 37873, 670, 274, 13607, 350, 6915, 1958, 13, 50766, 50766, 400, 498, 286, 11, 341, 4188, 11, 264, 16235, 295, 287, 365, 3104, 51028, 51028, 281, 13607, 350, 307, 445, 341, 13, 51246, 51246, 1779, 30, 51354, 51354, 45691, 350, 1804, 502, 11, 286, 478, 2597, 13, 51476, 51476, 467, 311, 445, 341, 23350, 9374, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.21910977363586426, "compression_ratio": 1.3866666666666667, "no_speech_prob": 1.0129583642992657e-05}, {"id": 1939, "seek": 584352, "start": 5856.8, "end": 5861.160000000001, "text": " to lambda k is just this.", "tokens": [50364, 295, 264, 25534, 307, 286, 643, 281, 360, 37873, 670, 274, 13607, 350, 6915, 1958, 13, 50766, 50766, 400, 498, 286, 11, 341, 4188, 11, 264, 16235, 295, 287, 365, 3104, 51028, 51028, 281, 13607, 350, 307, 445, 341, 13, 51246, 51246, 1779, 30, 51354, 51354, 45691, 350, 1804, 502, 11, 286, 478, 2597, 13, 51476, 51476, 467, 311, 445, 341, 23350, 9374, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.21910977363586426, "compression_ratio": 1.3866666666666667, "no_speech_prob": 1.0129583642992657e-05}, {"id": 1940, "seek": 584352, "start": 5861.160000000001, "end": 5863.320000000001, "text": " Right?", "tokens": [50364, 295, 264, 25534, 307, 286, 643, 281, 360, 37873, 670, 274, 13607, 350, 6915, 1958, 13, 50766, 50766, 400, 498, 286, 11, 341, 4188, 11, 264, 16235, 295, 287, 365, 3104, 51028, 51028, 281, 13607, 350, 307, 445, 341, 13, 51246, 51246, 1779, 30, 51354, 51354, 45691, 350, 1804, 502, 11, 286, 478, 2597, 13, 51476, 51476, 467, 311, 445, 341, 23350, 9374, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.21910977363586426, "compression_ratio": 1.3866666666666667, "no_speech_prob": 1.0129583642992657e-05}, {"id": 1941, "seek": 584352, "start": 5863.320000000001, "end": 5865.76, "text": " Lambda k plus 1, I'm sorry.", "tokens": [50364, 295, 264, 25534, 307, 286, 643, 281, 360, 37873, 670, 274, 13607, 350, 6915, 1958, 13, 50766, 50766, 400, 498, 286, 11, 341, 4188, 11, 264, 16235, 295, 287, 365, 3104, 51028, 51028, 281, 13607, 350, 307, 445, 341, 13, 51246, 51246, 1779, 30, 51354, 51354, 45691, 350, 1804, 502, 11, 286, 478, 2597, 13, 51476, 51476, 467, 311, 445, 341, 23350, 9374, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.21910977363586426, "compression_ratio": 1.3866666666666667, "no_speech_prob": 1.0129583642992657e-05}, {"id": 1942, "seek": 584352, "start": 5865.76, "end": 5867.4400000000005, "text": " It's just this parenthesis.", "tokens": [50364, 295, 264, 25534, 307, 286, 643, 281, 360, 37873, 670, 274, 13607, 350, 6915, 1958, 13, 50766, 50766, 400, 498, 286, 11, 341, 4188, 11, 264, 16235, 295, 287, 365, 3104, 51028, 51028, 281, 13607, 350, 307, 445, 341, 13, 51246, 51246, 1779, 30, 51354, 51354, 45691, 350, 1804, 502, 11, 286, 478, 2597, 13, 51476, 51476, 467, 311, 445, 341, 23350, 9374, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.21910977363586426, "compression_ratio": 1.3866666666666667, "no_speech_prob": 1.0129583642992657e-05}, {"id": 1943, "seek": 586744, "start": 5867.44, "end": 5875.599999999999, "text": " So I just get zk plus 1 equal fk of zk wk,", "tokens": [50364, 407, 286, 445, 483, 710, 74, 1804, 502, 2681, 283, 74, 295, 710, 74, 261, 74, 11, 50772, 50772, 597, 307, 445, 264, 2128, 38377, 8513, 13, 50882, 51020, 759, 286, 360, 37873, 670, 9758, 74, 6915, 1958, 11, 309, 311, 257, 707, 544, 6179, 13, 51520, 51520, 407, 286, 483, 264, 700, 1433, 11, 597, 307, 13607, 350, 11, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.16171085834503174, "compression_ratio": 1.3636363636363635, "no_speech_prob": 1.7060747268260457e-06}, {"id": 1944, "seek": 586744, "start": 5875.599999999999, "end": 5877.799999999999, "text": " which is just the forward propagation formula.", "tokens": [50364, 407, 286, 445, 483, 710, 74, 1804, 502, 2681, 283, 74, 295, 710, 74, 261, 74, 11, 50772, 50772, 597, 307, 445, 264, 2128, 38377, 8513, 13, 50882, 51020, 759, 286, 360, 37873, 670, 9758, 74, 6915, 1958, 11, 309, 311, 257, 707, 544, 6179, 13, 51520, 51520, 407, 286, 483, 264, 700, 1433, 11, 597, 307, 13607, 350, 11, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.16171085834503174, "compression_ratio": 1.3636363636363635, "no_speech_prob": 1.7060747268260457e-06}, {"id": 1945, "seek": 586744, "start": 5880.5599999999995, "end": 5890.5599999999995, "text": " If I do dl over dzk equals 0, it's a little more complicated.", "tokens": [50364, 407, 286, 445, 483, 710, 74, 1804, 502, 2681, 283, 74, 295, 710, 74, 261, 74, 11, 50772, 50772, 597, 307, 445, 264, 2128, 38377, 8513, 13, 50882, 51020, 759, 286, 360, 37873, 670, 9758, 74, 6915, 1958, 11, 309, 311, 257, 707, 544, 6179, 13, 51520, 51520, 407, 286, 483, 264, 700, 1433, 11, 597, 307, 13607, 350, 11, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.16171085834503174, "compression_ratio": 1.3636363636363635, "no_speech_prob": 1.7060747268260457e-06}, {"id": 1946, "seek": 586744, "start": 5890.5599999999995, "end": 5894.839999999999, "text": " So I get the first term, which is lambda k,", "tokens": [50364, 407, 286, 445, 483, 710, 74, 1804, 502, 2681, 283, 74, 295, 710, 74, 261, 74, 11, 50772, 50772, 597, 307, 445, 264, 2128, 38377, 8513, 13, 50882, 51020, 759, 286, 360, 37873, 670, 9758, 74, 6915, 1958, 11, 309, 311, 257, 707, 544, 6179, 13, 51520, 51520, 407, 286, 483, 264, 700, 1433, 11, 597, 307, 13607, 350, 11, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.16171085834503174, "compression_ratio": 1.3636363636363635, "no_speech_prob": 1.7060747268260457e-06}, {"id": 1947, "seek": 589484, "start": 5894.84, "end": 5897.64, "text": " because I'm going to have a zk here.", "tokens": [50364, 570, 286, 478, 516, 281, 362, 257, 710, 74, 510, 13, 50504, 50504, 400, 300, 710, 74, 307, 516, 281, 312, 257, 5952, 295, 341, 13607, 350, 510, 13, 50758, 50758, 407, 286, 2041, 286, 483, 13607, 350, 25167, 13, 50962, 51104, 400, 550, 286, 483, 3175, 13, 51190, 51190, 400, 550, 337, 341, 710, 74, 11, 286, 362, 257, 13607, 350, 1804, 502, 51356, 51356, 510, 1413, 264, 14117, 952, 2445, 295, 341, 365, 3104, 281, 710, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.13551173152693782, "compression_ratio": 1.6211180124223603, "no_speech_prob": 1.028898168442538e-05}, {"id": 1948, "seek": 589484, "start": 5897.64, "end": 5902.72, "text": " And that zk is going to be a factor of this lambda k here.", "tokens": [50364, 570, 286, 478, 516, 281, 362, 257, 710, 74, 510, 13, 50504, 50504, 400, 300, 710, 74, 307, 516, 281, 312, 257, 5952, 295, 341, 13607, 350, 510, 13, 50758, 50758, 407, 286, 2041, 286, 483, 13607, 350, 25167, 13, 50962, 51104, 400, 550, 286, 483, 3175, 13, 51190, 51190, 400, 550, 337, 341, 710, 74, 11, 286, 362, 257, 13607, 350, 1804, 502, 51356, 51356, 510, 1413, 264, 14117, 952, 2445, 295, 341, 365, 3104, 281, 710, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.13551173152693782, "compression_ratio": 1.6211180124223603, "no_speech_prob": 1.028898168442538e-05}, {"id": 1949, "seek": 589484, "start": 5902.72, "end": 5906.8, "text": " So I guess I get lambda k transpose.", "tokens": [50364, 570, 286, 478, 516, 281, 362, 257, 710, 74, 510, 13, 50504, 50504, 400, 300, 710, 74, 307, 516, 281, 312, 257, 5952, 295, 341, 13607, 350, 510, 13, 50758, 50758, 407, 286, 2041, 286, 483, 13607, 350, 25167, 13, 50962, 51104, 400, 550, 286, 483, 3175, 13, 51190, 51190, 400, 550, 337, 341, 710, 74, 11, 286, 362, 257, 13607, 350, 1804, 502, 51356, 51356, 510, 1413, 264, 14117, 952, 2445, 295, 341, 365, 3104, 281, 710, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.13551173152693782, "compression_ratio": 1.6211180124223603, "no_speech_prob": 1.028898168442538e-05}, {"id": 1950, "seek": 589484, "start": 5909.64, "end": 5911.360000000001, "text": " And then I get minus.", "tokens": [50364, 570, 286, 478, 516, 281, 362, 257, 710, 74, 510, 13, 50504, 50504, 400, 300, 710, 74, 307, 516, 281, 312, 257, 5952, 295, 341, 13607, 350, 510, 13, 50758, 50758, 407, 286, 2041, 286, 483, 13607, 350, 25167, 13, 50962, 51104, 400, 550, 286, 483, 3175, 13, 51190, 51190, 400, 550, 337, 341, 710, 74, 11, 286, 362, 257, 13607, 350, 1804, 502, 51356, 51356, 510, 1413, 264, 14117, 952, 2445, 295, 341, 365, 3104, 281, 710, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.13551173152693782, "compression_ratio": 1.6211180124223603, "no_speech_prob": 1.028898168442538e-05}, {"id": 1951, "seek": 589484, "start": 5911.360000000001, "end": 5914.68, "text": " And then for this zk, I have a lambda k plus 1", "tokens": [50364, 570, 286, 478, 516, 281, 362, 257, 710, 74, 510, 13, 50504, 50504, 400, 300, 710, 74, 307, 516, 281, 312, 257, 5952, 295, 341, 13607, 350, 510, 13, 50758, 50758, 407, 286, 2041, 286, 483, 13607, 350, 25167, 13, 50962, 51104, 400, 550, 286, 483, 3175, 13, 51190, 51190, 400, 550, 337, 341, 710, 74, 11, 286, 362, 257, 13607, 350, 1804, 502, 51356, 51356, 510, 1413, 264, 14117, 952, 2445, 295, 341, 365, 3104, 281, 710, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.13551173152693782, "compression_ratio": 1.6211180124223603, "no_speech_prob": 1.028898168442538e-05}, {"id": 1952, "seek": 589484, "start": 5914.68, "end": 5920.8, "text": " here times the Jacobian function of this with respect to z.", "tokens": [50364, 570, 286, 478, 516, 281, 362, 257, 710, 74, 510, 13, 50504, 50504, 400, 300, 710, 74, 307, 516, 281, 312, 257, 5952, 295, 341, 13607, 350, 510, 13, 50758, 50758, 407, 286, 2041, 286, 483, 13607, 350, 25167, 13, 50962, 51104, 400, 550, 286, 483, 3175, 13, 51190, 51190, 400, 550, 337, 341, 710, 74, 11, 286, 362, 257, 13607, 350, 1804, 502, 51356, 51356, 510, 1413, 264, 14117, 952, 2445, 295, 341, 365, 3104, 281, 710, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.13551173152693782, "compression_ratio": 1.6211180124223603, "no_speech_prob": 1.028898168442538e-05}, {"id": 1953, "seek": 592080, "start": 5920.8, "end": 5929.64, "text": " So it's going to be something like dfk of zk w over zk.", "tokens": [50364, 407, 309, 311, 516, 281, 312, 746, 411, 274, 69, 74, 295, 710, 74, 261, 670, 710, 74, 13, 50806, 51022, 663, 311, 309, 13, 51070, 51070, 11366, 11, 17024, 11, 2264, 11, 1413, 13607, 350, 1804, 502, 25167, 13, 51712, 51848], "temperature": 0.0, "avg_logprob": -0.25602672316811304, "compression_ratio": 1.1274509803921569, "no_speech_prob": 1.9945034637203207e-06}, {"id": 1954, "seek": 592080, "start": 5933.96, "end": 5934.92, "text": " That's it.", "tokens": [50364, 407, 309, 311, 516, 281, 312, 746, 411, 274, 69, 74, 295, 710, 74, 261, 670, 710, 74, 13, 50806, 51022, 663, 311, 309, 13, 51070, 51070, 11366, 11, 17024, 11, 2264, 11, 1413, 13607, 350, 1804, 502, 25167, 13, 51712, 51848], "temperature": 0.0, "avg_logprob": -0.25602672316811304, "compression_ratio": 1.1274509803921569, "no_speech_prob": 1.9945034637203207e-06}, {"id": 1955, "seek": 592080, "start": 5934.92, "end": 5947.76, "text": " Times, ooh, OK, times lambda k plus 1 transpose.", "tokens": [50364, 407, 309, 311, 516, 281, 312, 746, 411, 274, 69, 74, 295, 710, 74, 261, 670, 710, 74, 13, 50806, 51022, 663, 311, 309, 13, 51070, 51070, 11366, 11, 17024, 11, 2264, 11, 1413, 13607, 350, 1804, 502, 25167, 13, 51712, 51848], "temperature": 0.0, "avg_logprob": -0.25602672316811304, "compression_ratio": 1.1274509803921569, "no_speech_prob": 1.9945034637203207e-06}, {"id": 1956, "seek": 594776, "start": 5947.76, "end": 5949.6, "text": " And that should be equal to 0.", "tokens": [50364, 400, 300, 820, 312, 2681, 281, 1958, 13, 50456, 50456, 407, 286, 478, 516, 281, 39568, 439, 300, 1507, 13, 50570, 50570, 400, 437, 286, 483, 307, 13607, 350, 6915, 274, 69, 74, 295, 710, 74, 261, 365, 3104, 51212, 51212, 281, 710, 74, 13, 51250, 51250, 407, 264, 14117, 952, 8141, 295, 283, 25167, 1413, 13607, 350, 51528, 51528, 1804, 502, 13, 51650, 51650, 400, 1019, 77, 953, 1547, 11, 341, 307, 257, 588, 2199, 8513, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.38761608775069073, "compression_ratio": 1.3966480446927374, "no_speech_prob": 1.529244173070765e-06}, {"id": 1957, "seek": 594776, "start": 5949.6, "end": 5951.88, "text": " So I'm going to rearrange all that stuff.", "tokens": [50364, 400, 300, 820, 312, 2681, 281, 1958, 13, 50456, 50456, 407, 286, 478, 516, 281, 39568, 439, 300, 1507, 13, 50570, 50570, 400, 437, 286, 483, 307, 13607, 350, 6915, 274, 69, 74, 295, 710, 74, 261, 365, 3104, 51212, 51212, 281, 710, 74, 13, 51250, 51250, 407, 264, 14117, 952, 8141, 295, 283, 25167, 1413, 13607, 350, 51528, 51528, 1804, 502, 13, 51650, 51650, 400, 1019, 77, 953, 1547, 11, 341, 307, 257, 588, 2199, 8513, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.38761608775069073, "compression_ratio": 1.3966480446927374, "no_speech_prob": 1.529244173070765e-06}, {"id": 1958, "seek": 594776, "start": 5951.88, "end": 5964.72, "text": " And what I get is lambda k equals dfk of zk w with respect", "tokens": [50364, 400, 300, 820, 312, 2681, 281, 1958, 13, 50456, 50456, 407, 286, 478, 516, 281, 39568, 439, 300, 1507, 13, 50570, 50570, 400, 437, 286, 483, 307, 13607, 350, 6915, 274, 69, 74, 295, 710, 74, 261, 365, 3104, 51212, 51212, 281, 710, 74, 13, 51250, 51250, 407, 264, 14117, 952, 8141, 295, 283, 25167, 1413, 13607, 350, 51528, 51528, 1804, 502, 13, 51650, 51650, 400, 1019, 77, 953, 1547, 11, 341, 307, 257, 588, 2199, 8513, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.38761608775069073, "compression_ratio": 1.3966480446927374, "no_speech_prob": 1.529244173070765e-06}, {"id": 1959, "seek": 594776, "start": 5964.72, "end": 5965.4800000000005, "text": " to zk.", "tokens": [50364, 400, 300, 820, 312, 2681, 281, 1958, 13, 50456, 50456, 407, 286, 478, 516, 281, 39568, 439, 300, 1507, 13, 50570, 50570, 400, 437, 286, 483, 307, 13607, 350, 6915, 274, 69, 74, 295, 710, 74, 261, 365, 3104, 51212, 51212, 281, 710, 74, 13, 51250, 51250, 407, 264, 14117, 952, 8141, 295, 283, 25167, 1413, 13607, 350, 51528, 51528, 1804, 502, 13, 51650, 51650, 400, 1019, 77, 953, 1547, 11, 341, 307, 257, 588, 2199, 8513, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.38761608775069073, "compression_ratio": 1.3966480446927374, "no_speech_prob": 1.529244173070765e-06}, {"id": 1960, "seek": 594776, "start": 5965.4800000000005, "end": 5971.04, "text": " So the Jacobian matrix of f transpose times lambda k", "tokens": [50364, 400, 300, 820, 312, 2681, 281, 1958, 13, 50456, 50456, 407, 286, 478, 516, 281, 39568, 439, 300, 1507, 13, 50570, 50570, 400, 437, 286, 483, 307, 13607, 350, 6915, 274, 69, 74, 295, 710, 74, 261, 365, 3104, 51212, 51212, 281, 710, 74, 13, 51250, 51250, 407, 264, 14117, 952, 8141, 295, 283, 25167, 1413, 13607, 350, 51528, 51528, 1804, 502, 13, 51650, 51650, 400, 1019, 77, 953, 1547, 11, 341, 307, 257, 588, 2199, 8513, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.38761608775069073, "compression_ratio": 1.3966480446927374, "no_speech_prob": 1.529244173070765e-06}, {"id": 1961, "seek": 594776, "start": 5971.04, "end": 5973.4800000000005, "text": " plus 1.", "tokens": [50364, 400, 300, 820, 312, 2681, 281, 1958, 13, 50456, 50456, 407, 286, 478, 516, 281, 39568, 439, 300, 1507, 13, 50570, 50570, 400, 437, 286, 483, 307, 13607, 350, 6915, 274, 69, 74, 295, 710, 74, 261, 365, 3104, 51212, 51212, 281, 710, 74, 13, 51250, 51250, 407, 264, 14117, 952, 8141, 295, 283, 25167, 1413, 13607, 350, 51528, 51528, 1804, 502, 13, 51650, 51650, 400, 1019, 77, 953, 1547, 11, 341, 307, 257, 588, 2199, 8513, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.38761608775069073, "compression_ratio": 1.3966480446927374, "no_speech_prob": 1.529244173070765e-06}, {"id": 1962, "seek": 594776, "start": 5973.4800000000005, "end": 5976.92, "text": " And funnily enough, this is a very simple formula.", "tokens": [50364, 400, 300, 820, 312, 2681, 281, 1958, 13, 50456, 50456, 407, 286, 478, 516, 281, 39568, 439, 300, 1507, 13, 50570, 50570, 400, 437, 286, 483, 307, 13607, 350, 6915, 274, 69, 74, 295, 710, 74, 261, 365, 3104, 51212, 51212, 281, 710, 74, 13, 51250, 51250, 407, 264, 14117, 952, 8141, 295, 283, 25167, 1413, 13607, 350, 51528, 51528, 1804, 502, 13, 51650, 51650, 400, 1019, 77, 953, 1547, 11, 341, 307, 257, 588, 2199, 8513, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.38761608775069073, "compression_ratio": 1.3966480446927374, "no_speech_prob": 1.529244173070765e-06}, {"id": 1963, "seek": 597692, "start": 5976.92, "end": 5981.32, "text": " Funnily enough, this is actually the backpropagation formula.", "tokens": [50364, 11166, 77, 953, 1547, 11, 341, 307, 767, 264, 646, 79, 1513, 559, 399, 8513, 13, 50584, 50584, 639, 307, 264, 551, 300, 2709, 291, 264, 2771, 2448, 412, 1496, 350, 13, 50764, 50764, 18600, 264, 2771, 2448, 412, 1496, 350, 1804, 502, 11, 50902, 50902, 291, 12972, 538, 264, 14117, 952, 295, 264, 2424, 51162, 51162, 300, 291, 12425, 770, 807, 13, 51308, 51308, 407, 291, 500, 380, 362, 281, 519, 466, 309, 13, 51460, 51460, 509, 445, 733, 295, 2464, 646, 79, 1513, 382, 257, 25534, 19618, 51666, 51666, 1154, 13, 51692, 51692, 400, 646, 79, 1513, 8195, 1487, 484, 295, 309, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10783276864148061, "compression_ratio": 1.6375545851528384, "no_speech_prob": 1.2214898561069276e-05}, {"id": 1964, "seek": 597692, "start": 5981.32, "end": 5984.92, "text": " This is the thing that gives you the gradients at level k.", "tokens": [50364, 11166, 77, 953, 1547, 11, 341, 307, 767, 264, 646, 79, 1513, 559, 399, 8513, 13, 50584, 50584, 639, 307, 264, 551, 300, 2709, 291, 264, 2771, 2448, 412, 1496, 350, 13, 50764, 50764, 18600, 264, 2771, 2448, 412, 1496, 350, 1804, 502, 11, 50902, 50902, 291, 12972, 538, 264, 14117, 952, 295, 264, 2424, 51162, 51162, 300, 291, 12425, 770, 807, 13, 51308, 51308, 407, 291, 500, 380, 362, 281, 519, 466, 309, 13, 51460, 51460, 509, 445, 733, 295, 2464, 646, 79, 1513, 382, 257, 25534, 19618, 51666, 51666, 1154, 13, 51692, 51692, 400, 646, 79, 1513, 8195, 1487, 484, 295, 309, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10783276864148061, "compression_ratio": 1.6375545851528384, "no_speech_prob": 1.2214898561069276e-05}, {"id": 1965, "seek": 597692, "start": 5984.92, "end": 5987.68, "text": " Given the gradients at level k plus 1,", "tokens": [50364, 11166, 77, 953, 1547, 11, 341, 307, 767, 264, 646, 79, 1513, 559, 399, 8513, 13, 50584, 50584, 639, 307, 264, 551, 300, 2709, 291, 264, 2771, 2448, 412, 1496, 350, 13, 50764, 50764, 18600, 264, 2771, 2448, 412, 1496, 350, 1804, 502, 11, 50902, 50902, 291, 12972, 538, 264, 14117, 952, 295, 264, 2424, 51162, 51162, 300, 291, 12425, 770, 807, 13, 51308, 51308, 407, 291, 500, 380, 362, 281, 519, 466, 309, 13, 51460, 51460, 509, 445, 733, 295, 2464, 646, 79, 1513, 382, 257, 25534, 19618, 51666, 51666, 1154, 13, 51692, 51692, 400, 646, 79, 1513, 8195, 1487, 484, 295, 309, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10783276864148061, "compression_ratio": 1.6375545851528384, "no_speech_prob": 1.2214898561069276e-05}, {"id": 1966, "seek": 597692, "start": 5987.68, "end": 5992.88, "text": " you multiply by the Jacobian of the box", "tokens": [50364, 11166, 77, 953, 1547, 11, 341, 307, 767, 264, 646, 79, 1513, 559, 399, 8513, 13, 50584, 50584, 639, 307, 264, 551, 300, 2709, 291, 264, 2771, 2448, 412, 1496, 350, 13, 50764, 50764, 18600, 264, 2771, 2448, 412, 1496, 350, 1804, 502, 11, 50902, 50902, 291, 12972, 538, 264, 14117, 952, 295, 264, 2424, 51162, 51162, 300, 291, 12425, 770, 807, 13, 51308, 51308, 407, 291, 500, 380, 362, 281, 519, 466, 309, 13, 51460, 51460, 509, 445, 733, 295, 2464, 646, 79, 1513, 382, 257, 25534, 19618, 51666, 51666, 1154, 13, 51692, 51692, 400, 646, 79, 1513, 8195, 1487, 484, 295, 309, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10783276864148061, "compression_ratio": 1.6375545851528384, "no_speech_prob": 1.2214898561069276e-05}, {"id": 1967, "seek": 597692, "start": 5992.88, "end": 5995.8, "text": " that you propagated through.", "tokens": [50364, 11166, 77, 953, 1547, 11, 341, 307, 767, 264, 646, 79, 1513, 559, 399, 8513, 13, 50584, 50584, 639, 307, 264, 551, 300, 2709, 291, 264, 2771, 2448, 412, 1496, 350, 13, 50764, 50764, 18600, 264, 2771, 2448, 412, 1496, 350, 1804, 502, 11, 50902, 50902, 291, 12972, 538, 264, 14117, 952, 295, 264, 2424, 51162, 51162, 300, 291, 12425, 770, 807, 13, 51308, 51308, 407, 291, 500, 380, 362, 281, 519, 466, 309, 13, 51460, 51460, 509, 445, 733, 295, 2464, 646, 79, 1513, 382, 257, 25534, 19618, 51666, 51666, 1154, 13, 51692, 51692, 400, 646, 79, 1513, 8195, 1487, 484, 295, 309, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10783276864148061, "compression_ratio": 1.6375545851528384, "no_speech_prob": 1.2214898561069276e-05}, {"id": 1968, "seek": 597692, "start": 5995.8, "end": 5998.84, "text": " So you don't have to think about it.", "tokens": [50364, 11166, 77, 953, 1547, 11, 341, 307, 767, 264, 646, 79, 1513, 559, 399, 8513, 13, 50584, 50584, 639, 307, 264, 551, 300, 2709, 291, 264, 2771, 2448, 412, 1496, 350, 13, 50764, 50764, 18600, 264, 2771, 2448, 412, 1496, 350, 1804, 502, 11, 50902, 50902, 291, 12972, 538, 264, 14117, 952, 295, 264, 2424, 51162, 51162, 300, 291, 12425, 770, 807, 13, 51308, 51308, 407, 291, 500, 380, 362, 281, 519, 466, 309, 13, 51460, 51460, 509, 445, 733, 295, 2464, 646, 79, 1513, 382, 257, 25534, 19618, 51666, 51666, 1154, 13, 51692, 51692, 400, 646, 79, 1513, 8195, 1487, 484, 295, 309, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10783276864148061, "compression_ratio": 1.6375545851528384, "no_speech_prob": 1.2214898561069276e-05}, {"id": 1969, "seek": 597692, "start": 5998.84, "end": 6002.96, "text": " You just kind of write backprop as a constraint optimization", "tokens": [50364, 11166, 77, 953, 1547, 11, 341, 307, 767, 264, 646, 79, 1513, 559, 399, 8513, 13, 50584, 50584, 639, 307, 264, 551, 300, 2709, 291, 264, 2771, 2448, 412, 1496, 350, 13, 50764, 50764, 18600, 264, 2771, 2448, 412, 1496, 350, 1804, 502, 11, 50902, 50902, 291, 12972, 538, 264, 14117, 952, 295, 264, 2424, 51162, 51162, 300, 291, 12425, 770, 807, 13, 51308, 51308, 407, 291, 500, 380, 362, 281, 519, 466, 309, 13, 51460, 51460, 509, 445, 733, 295, 2464, 646, 79, 1513, 382, 257, 25534, 19618, 51666, 51666, 1154, 13, 51692, 51692, 400, 646, 79, 1513, 8195, 1487, 484, 295, 309, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10783276864148061, "compression_ratio": 1.6375545851528384, "no_speech_prob": 1.2214898561069276e-05}, {"id": 1970, "seek": 597692, "start": 6002.96, "end": 6003.4800000000005, "text": " problem.", "tokens": [50364, 11166, 77, 953, 1547, 11, 341, 307, 767, 264, 646, 79, 1513, 559, 399, 8513, 13, 50584, 50584, 639, 307, 264, 551, 300, 2709, 291, 264, 2771, 2448, 412, 1496, 350, 13, 50764, 50764, 18600, 264, 2771, 2448, 412, 1496, 350, 1804, 502, 11, 50902, 50902, 291, 12972, 538, 264, 14117, 952, 295, 264, 2424, 51162, 51162, 300, 291, 12425, 770, 807, 13, 51308, 51308, 407, 291, 500, 380, 362, 281, 519, 466, 309, 13, 51460, 51460, 509, 445, 733, 295, 2464, 646, 79, 1513, 382, 257, 25534, 19618, 51666, 51666, 1154, 13, 51692, 51692, 400, 646, 79, 1513, 8195, 1487, 484, 295, 309, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10783276864148061, "compression_ratio": 1.6375545851528384, "no_speech_prob": 1.2214898561069276e-05}, {"id": 1971, "seek": 597692, "start": 6003.4800000000005, "end": 6006.24, "text": " And backprop naturally comes out of it.", "tokens": [50364, 11166, 77, 953, 1547, 11, 341, 307, 767, 264, 646, 79, 1513, 559, 399, 8513, 13, 50584, 50584, 639, 307, 264, 551, 300, 2709, 291, 264, 2771, 2448, 412, 1496, 350, 13, 50764, 50764, 18600, 264, 2771, 2448, 412, 1496, 350, 1804, 502, 11, 50902, 50902, 291, 12972, 538, 264, 14117, 952, 295, 264, 2424, 51162, 51162, 300, 291, 12425, 770, 807, 13, 51308, 51308, 407, 291, 500, 380, 362, 281, 519, 466, 309, 13, 51460, 51460, 509, 445, 733, 295, 2464, 646, 79, 1513, 382, 257, 25534, 19618, 51666, 51666, 1154, 13, 51692, 51692, 400, 646, 79, 1513, 8195, 1487, 484, 295, 309, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10783276864148061, "compression_ratio": 1.6375545851528384, "no_speech_prob": 1.2214898561069276e-05}, {"id": 1972, "seek": 600624, "start": 6006.24, "end": 6007.5599999999995, "text": " Now, the first people to figure this out", "tokens": [50364, 823, 11, 264, 700, 561, 281, 2573, 341, 484, 50430, 50430, 645, 561, 294, 1969, 5261, 13, 50508, 50508, 682, 1186, 11, 264, 700, 561, 281, 2573, 341, 484, 50602, 50602, 645, 561, 411, 24886, 14521, 420, 462, 26318, 420, 561, 50854, 50854, 411, 18484, 293, 14117, 72, 13, 50972, 50972, 663, 311, 264, 13735, 37642, 295, 12939, 11, 498, 291, 528, 13, 51258, 51258, 400, 294, 12939, 11, 562, 291, 2464, 746, 411, 341, 11, 51432, 51432, 291, 584, 11, 689, 383, 295, 710, 77, 288, 576, 312, 264, 2281, 295, 264, 1185, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17681769168738162, "compression_ratio": 1.7355769230769231, "no_speech_prob": 1.4732861927768681e-05}, {"id": 1973, "seek": 600624, "start": 6007.5599999999995, "end": 6009.12, "text": " were people in control theory.", "tokens": [50364, 823, 11, 264, 700, 561, 281, 2573, 341, 484, 50430, 50430, 645, 561, 294, 1969, 5261, 13, 50508, 50508, 682, 1186, 11, 264, 700, 561, 281, 2573, 341, 484, 50602, 50602, 645, 561, 411, 24886, 14521, 420, 462, 26318, 420, 561, 50854, 50854, 411, 18484, 293, 14117, 72, 13, 50972, 50972, 663, 311, 264, 13735, 37642, 295, 12939, 11, 498, 291, 528, 13, 51258, 51258, 400, 294, 12939, 11, 562, 291, 2464, 746, 411, 341, 11, 51432, 51432, 291, 584, 11, 689, 383, 295, 710, 77, 288, 576, 312, 264, 2281, 295, 264, 1185, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17681769168738162, "compression_ratio": 1.7355769230769231, "no_speech_prob": 1.4732861927768681e-05}, {"id": 1974, "seek": 600624, "start": 6009.12, "end": 6011.0, "text": " In fact, the first people to figure this out", "tokens": [50364, 823, 11, 264, 700, 561, 281, 2573, 341, 484, 50430, 50430, 645, 561, 294, 1969, 5261, 13, 50508, 50508, 682, 1186, 11, 264, 700, 561, 281, 2573, 341, 484, 50602, 50602, 645, 561, 411, 24886, 14521, 420, 462, 26318, 420, 561, 50854, 50854, 411, 18484, 293, 14117, 72, 13, 50972, 50972, 663, 311, 264, 13735, 37642, 295, 12939, 11, 498, 291, 528, 13, 51258, 51258, 400, 294, 12939, 11, 562, 291, 2464, 746, 411, 341, 11, 51432, 51432, 291, 584, 11, 689, 383, 295, 710, 77, 288, 576, 312, 264, 2281, 295, 264, 1185, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17681769168738162, "compression_ratio": 1.7355769230769231, "no_speech_prob": 1.4732861927768681e-05}, {"id": 1975, "seek": 600624, "start": 6011.0, "end": 6016.04, "text": " were people like Lagrange or Euler or people", "tokens": [50364, 823, 11, 264, 700, 561, 281, 2573, 341, 484, 50430, 50430, 645, 561, 294, 1969, 5261, 13, 50508, 50508, 682, 1186, 11, 264, 700, 561, 281, 2573, 341, 484, 50602, 50602, 645, 561, 411, 24886, 14521, 420, 462, 26318, 420, 561, 50854, 50854, 411, 18484, 293, 14117, 72, 13, 50972, 50972, 663, 311, 264, 13735, 37642, 295, 12939, 11, 498, 291, 528, 13, 51258, 51258, 400, 294, 12939, 11, 562, 291, 2464, 746, 411, 341, 11, 51432, 51432, 291, 584, 11, 689, 383, 295, 710, 77, 288, 576, 312, 264, 2281, 295, 264, 1185, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17681769168738162, "compression_ratio": 1.7355769230769231, "no_speech_prob": 1.4732861927768681e-05}, {"id": 1976, "seek": 600624, "start": 6016.04, "end": 6018.4, "text": " like Hamilton and Jacobi.", "tokens": [50364, 823, 11, 264, 700, 561, 281, 2573, 341, 484, 50430, 50430, 645, 561, 294, 1969, 5261, 13, 50508, 50508, 682, 1186, 11, 264, 700, 561, 281, 2573, 341, 484, 50602, 50602, 645, 561, 411, 24886, 14521, 420, 462, 26318, 420, 561, 50854, 50854, 411, 18484, 293, 14117, 72, 13, 50972, 50972, 663, 311, 264, 13735, 37642, 295, 12939, 11, 498, 291, 528, 13, 51258, 51258, 400, 294, 12939, 11, 562, 291, 2464, 746, 411, 341, 11, 51432, 51432, 291, 584, 11, 689, 383, 295, 710, 77, 288, 576, 312, 264, 2281, 295, 264, 1185, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17681769168738162, "compression_ratio": 1.7355769230769231, "no_speech_prob": 1.4732861927768681e-05}, {"id": 1977, "seek": 600624, "start": 6018.4, "end": 6024.12, "text": " That's the classical formulation of mechanics, if you want.", "tokens": [50364, 823, 11, 264, 700, 561, 281, 2573, 341, 484, 50430, 50430, 645, 561, 294, 1969, 5261, 13, 50508, 50508, 682, 1186, 11, 264, 700, 561, 281, 2573, 341, 484, 50602, 50602, 645, 561, 411, 24886, 14521, 420, 462, 26318, 420, 561, 50854, 50854, 411, 18484, 293, 14117, 72, 13, 50972, 50972, 663, 311, 264, 13735, 37642, 295, 12939, 11, 498, 291, 528, 13, 51258, 51258, 400, 294, 12939, 11, 562, 291, 2464, 746, 411, 341, 11, 51432, 51432, 291, 584, 11, 689, 383, 295, 710, 77, 288, 576, 312, 264, 2281, 295, 264, 1185, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17681769168738162, "compression_ratio": 1.7355769230769231, "no_speech_prob": 1.4732861927768681e-05}, {"id": 1978, "seek": 600624, "start": 6024.12, "end": 6027.599999999999, "text": " And in mechanics, when you write something like this,", "tokens": [50364, 823, 11, 264, 700, 561, 281, 2573, 341, 484, 50430, 50430, 645, 561, 294, 1969, 5261, 13, 50508, 50508, 682, 1186, 11, 264, 700, 561, 281, 2573, 341, 484, 50602, 50602, 645, 561, 411, 24886, 14521, 420, 462, 26318, 420, 561, 50854, 50854, 411, 18484, 293, 14117, 72, 13, 50972, 50972, 663, 311, 264, 13735, 37642, 295, 12939, 11, 498, 291, 528, 13, 51258, 51258, 400, 294, 12939, 11, 562, 291, 2464, 746, 411, 341, 11, 51432, 51432, 291, 584, 11, 689, 383, 295, 710, 77, 288, 576, 312, 264, 2281, 295, 264, 1185, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17681769168738162, "compression_ratio": 1.7355769230769231, "no_speech_prob": 1.4732861927768681e-05}, {"id": 1979, "seek": 600624, "start": 6027.599999999999, "end": 6034.719999999999, "text": " you say, where C of zn y would be the energy of the system,", "tokens": [50364, 823, 11, 264, 700, 561, 281, 2573, 341, 484, 50430, 50430, 645, 561, 294, 1969, 5261, 13, 50508, 50508, 682, 1186, 11, 264, 700, 561, 281, 2573, 341, 484, 50602, 50602, 645, 561, 411, 24886, 14521, 420, 462, 26318, 420, 561, 50854, 50854, 411, 18484, 293, 14117, 72, 13, 50972, 50972, 663, 311, 264, 13735, 37642, 295, 12939, 11, 498, 291, 528, 13, 51258, 51258, 400, 294, 12939, 11, 562, 291, 2464, 746, 411, 341, 11, 51432, 51432, 291, 584, 11, 689, 383, 295, 710, 77, 288, 576, 312, 264, 2281, 295, 264, 1185, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17681769168738162, "compression_ratio": 1.7355769230769231, "no_speech_prob": 1.4732861927768681e-05}, {"id": 1980, "seek": 603472, "start": 6034.72, "end": 6036.8, "text": " like a potential energy of something like this.", "tokens": [50364, 411, 257, 3995, 2281, 295, 746, 411, 341, 13, 50468, 50468, 400, 550, 264, 661, 1433, 1936, 50544, 50544, 704, 17988, 264, 8546, 18491, 11, 264, 1186, 50646, 50646, 300, 291, 362, 257, 15756, 5367, 300, 5112, 291, 50822, 50822, 300, 264, 1785, 412, 565, 9505, 1804, 502, 307, 50908, 50908, 257, 2445, 295, 264, 1785, 412, 565, 256, 365, 512, 25534, 13, 51084, 51084, 407, 300, 311, 264, 8546, 25534, 13, 51204, 51204, 400, 550, 498, 291, 360, 341, 11, 291, 2573, 484, 51438, 51438, 300, 498, 291, 362, 364, 2281, 337, 633, 383, 295, 350, 586, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1376805211983475, "compression_ratio": 1.8064516129032258, "no_speech_prob": 1.2410060662659816e-05}, {"id": 1981, "seek": 603472, "start": 6036.8, "end": 6038.320000000001, "text": " And then the other term basically", "tokens": [50364, 411, 257, 3995, 2281, 295, 746, 411, 341, 13, 50468, 50468, 400, 550, 264, 661, 1433, 1936, 50544, 50544, 704, 17988, 264, 8546, 18491, 11, 264, 1186, 50646, 50646, 300, 291, 362, 257, 15756, 5367, 300, 5112, 291, 50822, 50822, 300, 264, 1785, 412, 565, 9505, 1804, 502, 307, 50908, 50908, 257, 2445, 295, 264, 1785, 412, 565, 256, 365, 512, 25534, 13, 51084, 51084, 407, 300, 311, 264, 8546, 25534, 13, 51204, 51204, 400, 550, 498, 291, 360, 341, 11, 291, 2573, 484, 51438, 51438, 300, 498, 291, 362, 364, 2281, 337, 633, 383, 295, 350, 586, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1376805211983475, "compression_ratio": 1.8064516129032258, "no_speech_prob": 1.2410060662659816e-05}, {"id": 1982, "seek": 603472, "start": 6038.320000000001, "end": 6040.360000000001, "text": " implements the dynamic constraints, the fact", "tokens": [50364, 411, 257, 3995, 2281, 295, 746, 411, 341, 13, 50468, 50468, 400, 550, 264, 661, 1433, 1936, 50544, 50544, 704, 17988, 264, 8546, 18491, 11, 264, 1186, 50646, 50646, 300, 291, 362, 257, 15756, 5367, 300, 5112, 291, 50822, 50822, 300, 264, 1785, 412, 565, 9505, 1804, 502, 307, 50908, 50908, 257, 2445, 295, 264, 1785, 412, 565, 256, 365, 512, 25534, 13, 51084, 51084, 407, 300, 311, 264, 8546, 25534, 13, 51204, 51204, 400, 550, 498, 291, 360, 341, 11, 291, 2573, 484, 51438, 51438, 300, 498, 291, 362, 364, 2281, 337, 633, 383, 295, 350, 586, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1376805211983475, "compression_ratio": 1.8064516129032258, "no_speech_prob": 1.2410060662659816e-05}, {"id": 1983, "seek": 603472, "start": 6040.360000000001, "end": 6043.88, "text": " that you have a differential equation that tells you", "tokens": [50364, 411, 257, 3995, 2281, 295, 746, 411, 341, 13, 50468, 50468, 400, 550, 264, 661, 1433, 1936, 50544, 50544, 704, 17988, 264, 8546, 18491, 11, 264, 1186, 50646, 50646, 300, 291, 362, 257, 15756, 5367, 300, 5112, 291, 50822, 50822, 300, 264, 1785, 412, 565, 9505, 1804, 502, 307, 50908, 50908, 257, 2445, 295, 264, 1785, 412, 565, 256, 365, 512, 25534, 13, 51084, 51084, 407, 300, 311, 264, 8546, 25534, 13, 51204, 51204, 400, 550, 498, 291, 360, 341, 11, 291, 2573, 484, 51438, 51438, 300, 498, 291, 362, 364, 2281, 337, 633, 383, 295, 350, 586, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1376805211983475, "compression_ratio": 1.8064516129032258, "no_speech_prob": 1.2410060662659816e-05}, {"id": 1984, "seek": 603472, "start": 6043.88, "end": 6045.6, "text": " that the state at time q plus 1 is", "tokens": [50364, 411, 257, 3995, 2281, 295, 746, 411, 341, 13, 50468, 50468, 400, 550, 264, 661, 1433, 1936, 50544, 50544, 704, 17988, 264, 8546, 18491, 11, 264, 1186, 50646, 50646, 300, 291, 362, 257, 15756, 5367, 300, 5112, 291, 50822, 50822, 300, 264, 1785, 412, 565, 9505, 1804, 502, 307, 50908, 50908, 257, 2445, 295, 264, 1785, 412, 565, 256, 365, 512, 25534, 13, 51084, 51084, 407, 300, 311, 264, 8546, 25534, 13, 51204, 51204, 400, 550, 498, 291, 360, 341, 11, 291, 2573, 484, 51438, 51438, 300, 498, 291, 362, 364, 2281, 337, 633, 383, 295, 350, 586, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1376805211983475, "compression_ratio": 1.8064516129032258, "no_speech_prob": 1.2410060662659816e-05}, {"id": 1985, "seek": 603472, "start": 6045.6, "end": 6049.12, "text": " a function of the state at time t with some constraint.", "tokens": [50364, 411, 257, 3995, 2281, 295, 746, 411, 341, 13, 50468, 50468, 400, 550, 264, 661, 1433, 1936, 50544, 50544, 704, 17988, 264, 8546, 18491, 11, 264, 1186, 50646, 50646, 300, 291, 362, 257, 15756, 5367, 300, 5112, 291, 50822, 50822, 300, 264, 1785, 412, 565, 9505, 1804, 502, 307, 50908, 50908, 257, 2445, 295, 264, 1785, 412, 565, 256, 365, 512, 25534, 13, 51084, 51084, 407, 300, 311, 264, 8546, 25534, 13, 51204, 51204, 400, 550, 498, 291, 360, 341, 11, 291, 2573, 484, 51438, 51438, 300, 498, 291, 362, 364, 2281, 337, 633, 383, 295, 350, 586, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1376805211983475, "compression_ratio": 1.8064516129032258, "no_speech_prob": 1.2410060662659816e-05}, {"id": 1986, "seek": 603472, "start": 6049.12, "end": 6051.52, "text": " So that's the dynamic constraint.", "tokens": [50364, 411, 257, 3995, 2281, 295, 746, 411, 341, 13, 50468, 50468, 400, 550, 264, 661, 1433, 1936, 50544, 50544, 704, 17988, 264, 8546, 18491, 11, 264, 1186, 50646, 50646, 300, 291, 362, 257, 15756, 5367, 300, 5112, 291, 50822, 50822, 300, 264, 1785, 412, 565, 9505, 1804, 502, 307, 50908, 50908, 257, 2445, 295, 264, 1785, 412, 565, 256, 365, 512, 25534, 13, 51084, 51084, 407, 300, 311, 264, 8546, 25534, 13, 51204, 51204, 400, 550, 498, 291, 360, 341, 11, 291, 2573, 484, 51438, 51438, 300, 498, 291, 362, 364, 2281, 337, 633, 383, 295, 350, 586, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1376805211983475, "compression_ratio": 1.8064516129032258, "no_speech_prob": 1.2410060662659816e-05}, {"id": 1987, "seek": 603472, "start": 6051.52, "end": 6056.2, "text": " And then if you do this, you figure out", "tokens": [50364, 411, 257, 3995, 2281, 295, 746, 411, 341, 13, 50468, 50468, 400, 550, 264, 661, 1433, 1936, 50544, 50544, 704, 17988, 264, 8546, 18491, 11, 264, 1186, 50646, 50646, 300, 291, 362, 257, 15756, 5367, 300, 5112, 291, 50822, 50822, 300, 264, 1785, 412, 565, 9505, 1804, 502, 307, 50908, 50908, 257, 2445, 295, 264, 1785, 412, 565, 256, 365, 512, 25534, 13, 51084, 51084, 407, 300, 311, 264, 8546, 25534, 13, 51204, 51204, 400, 550, 498, 291, 360, 341, 11, 291, 2573, 484, 51438, 51438, 300, 498, 291, 362, 364, 2281, 337, 633, 383, 295, 350, 586, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1376805211983475, "compression_ratio": 1.8064516129032258, "no_speech_prob": 1.2410060662659816e-05}, {"id": 1988, "seek": 603472, "start": 6056.2, "end": 6063.08, "text": " that if you have an energy for every C of k now", "tokens": [50364, 411, 257, 3995, 2281, 295, 746, 411, 341, 13, 50468, 50468, 400, 550, 264, 661, 1433, 1936, 50544, 50544, 704, 17988, 264, 8546, 18491, 11, 264, 1186, 50646, 50646, 300, 291, 362, 257, 15756, 5367, 300, 5112, 291, 50822, 50822, 300, 264, 1785, 412, 565, 9505, 1804, 502, 307, 50908, 50908, 257, 2445, 295, 264, 1785, 412, 565, 256, 365, 512, 25534, 13, 51084, 51084, 407, 300, 311, 264, 8546, 25534, 13, 51204, 51204, 400, 550, 498, 291, 360, 341, 11, 291, 2573, 484, 51438, 51438, 300, 498, 291, 362, 364, 2281, 337, 633, 383, 295, 350, 586, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1376805211983475, "compression_ratio": 1.8064516129032258, "no_speech_prob": 1.2410060662659816e-05}, {"id": 1989, "seek": 606308, "start": 6063.08, "end": 6067.68, "text": " as a time step and the forward propagation", "tokens": [50364, 382, 257, 565, 1823, 293, 264, 2128, 38377, 50594, 50594, 382, 257, 15756, 5367, 300, 1980, 82, 257, 1185, 11, 50890, 50890, 293, 550, 291, 727, 362, 257, 1433, 510, 300, 307, 406, 445, 51074, 51074, 364, 2281, 1433, 412, 264, 5598, 11, 457, 1936, 364, 2281, 1433, 51252, 51252, 300, 291, 393, 362, 472, 295, 729, 2115, 337, 633, 565, 1823, 13, 51600, 51600, 407, 264, 24886, 32926, 952, 2445, 576, 312, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11516606962525999, "compression_ratio": 1.6464088397790055, "no_speech_prob": 3.668737235784647e-06}, {"id": 1990, "seek": 606308, "start": 6067.68, "end": 6073.6, "text": " as a differential equation that governs a system,", "tokens": [50364, 382, 257, 565, 1823, 293, 264, 2128, 38377, 50594, 50594, 382, 257, 15756, 5367, 300, 1980, 82, 257, 1185, 11, 50890, 50890, 293, 550, 291, 727, 362, 257, 1433, 510, 300, 307, 406, 445, 51074, 51074, 364, 2281, 1433, 412, 264, 5598, 11, 457, 1936, 364, 2281, 1433, 51252, 51252, 300, 291, 393, 362, 472, 295, 729, 2115, 337, 633, 565, 1823, 13, 51600, 51600, 407, 264, 24886, 32926, 952, 2445, 576, 312, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11516606962525999, "compression_ratio": 1.6464088397790055, "no_speech_prob": 3.668737235784647e-06}, {"id": 1991, "seek": 606308, "start": 6073.6, "end": 6077.28, "text": " and then you could have a term here that is not just", "tokens": [50364, 382, 257, 565, 1823, 293, 264, 2128, 38377, 50594, 50594, 382, 257, 15756, 5367, 300, 1980, 82, 257, 1185, 11, 50890, 50890, 293, 550, 291, 727, 362, 257, 1433, 510, 300, 307, 406, 445, 51074, 51074, 364, 2281, 1433, 412, 264, 5598, 11, 457, 1936, 364, 2281, 1433, 51252, 51252, 300, 291, 393, 362, 472, 295, 729, 2115, 337, 633, 565, 1823, 13, 51600, 51600, 407, 264, 24886, 32926, 952, 2445, 576, 312, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11516606962525999, "compression_ratio": 1.6464088397790055, "no_speech_prob": 3.668737235784647e-06}, {"id": 1992, "seek": 606308, "start": 6077.28, "end": 6080.84, "text": " an energy term at the output, but basically an energy term", "tokens": [50364, 382, 257, 565, 1823, 293, 264, 2128, 38377, 50594, 50594, 382, 257, 15756, 5367, 300, 1980, 82, 257, 1185, 11, 50890, 50890, 293, 550, 291, 727, 362, 257, 1433, 510, 300, 307, 406, 445, 51074, 51074, 364, 2281, 1433, 412, 264, 5598, 11, 457, 1936, 364, 2281, 1433, 51252, 51252, 300, 291, 393, 362, 472, 295, 729, 2115, 337, 633, 565, 1823, 13, 51600, 51600, 407, 264, 24886, 32926, 952, 2445, 576, 312, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11516606962525999, "compression_ratio": 1.6464088397790055, "no_speech_prob": 3.668737235784647e-06}, {"id": 1993, "seek": 606308, "start": 6080.84, "end": 6087.8, "text": " that you can have one of those terms for every time step.", "tokens": [50364, 382, 257, 565, 1823, 293, 264, 2128, 38377, 50594, 50594, 382, 257, 15756, 5367, 300, 1980, 82, 257, 1185, 11, 50890, 50890, 293, 550, 291, 727, 362, 257, 1433, 510, 300, 307, 406, 445, 51074, 51074, 364, 2281, 1433, 412, 264, 5598, 11, 457, 1936, 364, 2281, 1433, 51252, 51252, 300, 291, 393, 362, 472, 295, 729, 2115, 337, 633, 565, 1823, 13, 51600, 51600, 407, 264, 24886, 32926, 952, 2445, 576, 312, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11516606962525999, "compression_ratio": 1.6464088397790055, "no_speech_prob": 3.668737235784647e-06}, {"id": 1994, "seek": 606308, "start": 6087.8, "end": 6091.08, "text": " So the Lagrangian function would be", "tokens": [50364, 382, 257, 565, 1823, 293, 264, 2128, 38377, 50594, 50594, 382, 257, 15756, 5367, 300, 1980, 82, 257, 1185, 11, 50890, 50890, 293, 550, 291, 727, 362, 257, 1433, 510, 300, 307, 406, 445, 51074, 51074, 364, 2281, 1433, 412, 264, 5598, 11, 457, 1936, 364, 2281, 1433, 51252, 51252, 300, 291, 393, 362, 472, 295, 729, 2115, 337, 633, 565, 1823, 13, 51600, 51600, 407, 264, 24886, 32926, 952, 2445, 576, 312, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11516606962525999, "compression_ratio": 1.6464088397790055, "no_speech_prob": 3.668737235784647e-06}, {"id": 1995, "seek": 609108, "start": 6091.08, "end": 6099.08, "text": " sum over time steps of C for that time step of zk.", "tokens": [50364, 2408, 670, 565, 4439, 295, 383, 337, 300, 565, 1823, 295, 710, 74, 13, 50764, 50764, 400, 456, 1062, 312, 512, 8320, 7006, 13, 50914, 50914, 961, 311, 818, 309, 288, 74, 1804, 729, 18491, 13, 51118, 51378, 350, 1804, 502, 3175, 283, 74, 295, 710, 74, 261, 74, 13, 51606, 51802], "temperature": 0.0, "avg_logprob": -0.29541195763481987, "compression_ratio": 1.3064516129032258, "no_speech_prob": 5.770627922174754e-06}, {"id": 1996, "seek": 609108, "start": 6099.08, "end": 6102.08, "text": " And there might be some external variable.", "tokens": [50364, 2408, 670, 565, 4439, 295, 383, 337, 300, 565, 1823, 295, 710, 74, 13, 50764, 50764, 400, 456, 1062, 312, 512, 8320, 7006, 13, 50914, 50914, 961, 311, 818, 309, 288, 74, 1804, 729, 18491, 13, 51118, 51378, 350, 1804, 502, 3175, 283, 74, 295, 710, 74, 261, 74, 13, 51606, 51802], "temperature": 0.0, "avg_logprob": -0.29541195763481987, "compression_ratio": 1.3064516129032258, "no_speech_prob": 5.770627922174754e-06}, {"id": 1997, "seek": 609108, "start": 6102.08, "end": 6106.16, "text": " Let's call it yk plus those constraints.", "tokens": [50364, 2408, 670, 565, 4439, 295, 383, 337, 300, 565, 1823, 295, 710, 74, 13, 50764, 50764, 400, 456, 1062, 312, 512, 8320, 7006, 13, 50914, 50914, 961, 311, 818, 309, 288, 74, 1804, 729, 18491, 13, 51118, 51378, 350, 1804, 502, 3175, 283, 74, 295, 710, 74, 261, 74, 13, 51606, 51802], "temperature": 0.0, "avg_logprob": -0.29541195763481987, "compression_ratio": 1.3064516129032258, "no_speech_prob": 5.770627922174754e-06}, {"id": 1998, "seek": 609108, "start": 6111.36, "end": 6115.92, "text": " k plus 1 minus fk of zk wk.", "tokens": [50364, 2408, 670, 565, 4439, 295, 383, 337, 300, 565, 1823, 295, 710, 74, 13, 50764, 50764, 400, 456, 1062, 312, 512, 8320, 7006, 13, 50914, 50914, 961, 311, 818, 309, 288, 74, 1804, 729, 18491, 13, 51118, 51378, 350, 1804, 502, 3175, 283, 74, 295, 710, 74, 261, 74, 13, 51606, 51802], "temperature": 0.0, "avg_logprob": -0.29541195763481987, "compression_ratio": 1.3064516129032258, "no_speech_prob": 5.770627922174754e-06}, {"id": 1999, "seek": 611592, "start": 6115.92, "end": 6116.42, "text": " k.", "tokens": [50364, 350, 13, 50389, 50560, 400, 264, 2408, 2516, 1081, 670, 439, 721, 13, 50790, 50790, 1133, 291, 574, 412, 24886, 32926, 952, 37642, 50922, 50922, 295, 13735, 12939, 11, 300, 311, 1936, 51000, 51000, 264, 636, 436, 366, 12675, 13, 51122, 51122, 383, 307, 264, 2281, 293, 264, 1150, 1433, 366, 264, 18491, 13, 51308, 51308, 823, 11, 294, 13735, 12939, 11, 264, 13607, 7006, 51600, 51600, 307, 767, 264, 11244, 13, 51724, 51724, 407, 710, 307, 264, 2535, 9102, 293, 13607, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.17617572740066884, "compression_ratio": 1.6218905472636815, "no_speech_prob": 3.500573484416236e-06}, {"id": 2000, "seek": 611592, "start": 6119.84, "end": 6124.4400000000005, "text": " And the sum takes place over all things.", "tokens": [50364, 350, 13, 50389, 50560, 400, 264, 2408, 2516, 1081, 670, 439, 721, 13, 50790, 50790, 1133, 291, 574, 412, 24886, 32926, 952, 37642, 50922, 50922, 295, 13735, 12939, 11, 300, 311, 1936, 51000, 51000, 264, 636, 436, 366, 12675, 13, 51122, 51122, 383, 307, 264, 2281, 293, 264, 1150, 1433, 366, 264, 18491, 13, 51308, 51308, 823, 11, 294, 13735, 12939, 11, 264, 13607, 7006, 51600, 51600, 307, 767, 264, 11244, 13, 51724, 51724, 407, 710, 307, 264, 2535, 9102, 293, 13607, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.17617572740066884, "compression_ratio": 1.6218905472636815, "no_speech_prob": 3.500573484416236e-06}, {"id": 2001, "seek": 611592, "start": 6124.4400000000005, "end": 6127.08, "text": " When you look at Lagrangian formulation", "tokens": [50364, 350, 13, 50389, 50560, 400, 264, 2408, 2516, 1081, 670, 439, 721, 13, 50790, 50790, 1133, 291, 574, 412, 24886, 32926, 952, 37642, 50922, 50922, 295, 13735, 12939, 11, 300, 311, 1936, 51000, 51000, 264, 636, 436, 366, 12675, 13, 51122, 51122, 383, 307, 264, 2281, 293, 264, 1150, 1433, 366, 264, 18491, 13, 51308, 51308, 823, 11, 294, 13735, 12939, 11, 264, 13607, 7006, 51600, 51600, 307, 767, 264, 11244, 13, 51724, 51724, 407, 710, 307, 264, 2535, 9102, 293, 13607, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.17617572740066884, "compression_ratio": 1.6218905472636815, "no_speech_prob": 3.500573484416236e-06}, {"id": 2002, "seek": 611592, "start": 6127.08, "end": 6128.64, "text": " of classical mechanics, that's basically", "tokens": [50364, 350, 13, 50389, 50560, 400, 264, 2408, 2516, 1081, 670, 439, 721, 13, 50790, 50790, 1133, 291, 574, 412, 24886, 32926, 952, 37642, 50922, 50922, 295, 13735, 12939, 11, 300, 311, 1936, 51000, 51000, 264, 636, 436, 366, 12675, 13, 51122, 51122, 383, 307, 264, 2281, 293, 264, 1150, 1433, 366, 264, 18491, 13, 51308, 51308, 823, 11, 294, 13735, 12939, 11, 264, 13607, 7006, 51600, 51600, 307, 767, 264, 11244, 13, 51724, 51724, 407, 710, 307, 264, 2535, 9102, 293, 13607, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.17617572740066884, "compression_ratio": 1.6218905472636815, "no_speech_prob": 3.500573484416236e-06}, {"id": 2003, "seek": 611592, "start": 6128.64, "end": 6131.08, "text": " the way they are expressed.", "tokens": [50364, 350, 13, 50389, 50560, 400, 264, 2408, 2516, 1081, 670, 439, 721, 13, 50790, 50790, 1133, 291, 574, 412, 24886, 32926, 952, 37642, 50922, 50922, 295, 13735, 12939, 11, 300, 311, 1936, 51000, 51000, 264, 636, 436, 366, 12675, 13, 51122, 51122, 383, 307, 264, 2281, 293, 264, 1150, 1433, 366, 264, 18491, 13, 51308, 51308, 823, 11, 294, 13735, 12939, 11, 264, 13607, 7006, 51600, 51600, 307, 767, 264, 11244, 13, 51724, 51724, 407, 710, 307, 264, 2535, 9102, 293, 13607, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.17617572740066884, "compression_ratio": 1.6218905472636815, "no_speech_prob": 3.500573484416236e-06}, {"id": 2004, "seek": 611592, "start": 6131.08, "end": 6134.8, "text": " C is the energy and the second term are the constraints.", "tokens": [50364, 350, 13, 50389, 50560, 400, 264, 2408, 2516, 1081, 670, 439, 721, 13, 50790, 50790, 1133, 291, 574, 412, 24886, 32926, 952, 37642, 50922, 50922, 295, 13735, 12939, 11, 300, 311, 1936, 51000, 51000, 264, 636, 436, 366, 12675, 13, 51122, 51122, 383, 307, 264, 2281, 293, 264, 1150, 1433, 366, 264, 18491, 13, 51308, 51308, 823, 11, 294, 13735, 12939, 11, 264, 13607, 7006, 51600, 51600, 307, 767, 264, 11244, 13, 51724, 51724, 407, 710, 307, 264, 2535, 9102, 293, 13607, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.17617572740066884, "compression_ratio": 1.6218905472636815, "no_speech_prob": 3.500573484416236e-06}, {"id": 2005, "seek": 611592, "start": 6134.8, "end": 6140.64, "text": " Now, in classical mechanics, the lambda variable", "tokens": [50364, 350, 13, 50389, 50560, 400, 264, 2408, 2516, 1081, 670, 439, 721, 13, 50790, 50790, 1133, 291, 574, 412, 24886, 32926, 952, 37642, 50922, 50922, 295, 13735, 12939, 11, 300, 311, 1936, 51000, 51000, 264, 636, 436, 366, 12675, 13, 51122, 51122, 383, 307, 264, 2281, 293, 264, 1150, 1433, 366, 264, 18491, 13, 51308, 51308, 823, 11, 294, 13735, 12939, 11, 264, 13607, 7006, 51600, 51600, 307, 767, 264, 11244, 13, 51724, 51724, 407, 710, 307, 264, 2535, 9102, 293, 13607, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.17617572740066884, "compression_ratio": 1.6218905472636815, "no_speech_prob": 3.500573484416236e-06}, {"id": 2006, "seek": 611592, "start": 6140.64, "end": 6143.12, "text": " is actually the momentum.", "tokens": [50364, 350, 13, 50389, 50560, 400, 264, 2408, 2516, 1081, 670, 439, 721, 13, 50790, 50790, 1133, 291, 574, 412, 24886, 32926, 952, 37642, 50922, 50922, 295, 13735, 12939, 11, 300, 311, 1936, 51000, 51000, 264, 636, 436, 366, 12675, 13, 51122, 51122, 383, 307, 264, 2281, 293, 264, 1150, 1433, 366, 264, 18491, 13, 51308, 51308, 823, 11, 294, 13735, 12939, 11, 264, 13607, 7006, 51600, 51600, 307, 767, 264, 11244, 13, 51724, 51724, 407, 710, 307, 264, 2535, 9102, 293, 13607, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.17617572740066884, "compression_ratio": 1.6218905472636815, "no_speech_prob": 3.500573484416236e-06}, {"id": 2007, "seek": 611592, "start": 6143.12, "end": 6145.4400000000005, "text": " So z is the position variables and lambda", "tokens": [50364, 350, 13, 50389, 50560, 400, 264, 2408, 2516, 1081, 670, 439, 721, 13, 50790, 50790, 1133, 291, 574, 412, 24886, 32926, 952, 37642, 50922, 50922, 295, 13735, 12939, 11, 300, 311, 1936, 51000, 51000, 264, 636, 436, 366, 12675, 13, 51122, 51122, 383, 307, 264, 2281, 293, 264, 1150, 1433, 366, 264, 18491, 13, 51308, 51308, 823, 11, 294, 13735, 12939, 11, 264, 13607, 7006, 51600, 51600, 307, 767, 264, 11244, 13, 51724, 51724, 407, 710, 307, 264, 2535, 9102, 293, 13607, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.17617572740066884, "compression_ratio": 1.6218905472636815, "no_speech_prob": 3.500573484416236e-06}, {"id": 2008, "seek": 614544, "start": 6145.44, "end": 6146.32, "text": " becomes the momentum.", "tokens": [50364, 3643, 264, 11244, 13, 50408, 50408, 407, 264, 1150, 1433, 3643, 1936, 264, 27135, 2281, 50792, 50792, 420, 264, 3671, 27135, 2281, 544, 4682, 13, 51044, 51044, 5684, 11, 341, 307, 445, 364, 34115, 3322, 327, 13, 51160, 51160, 1545, 669, 286, 3585, 291, 341, 30, 51234, 51234, 1436, 3410, 671, 11, 264, 18666, 295, 341, 51424, 51424, 307, 1687, 2199, 498, 291, 458, 24886, 32926, 952, 4464, 2144, 51638, 51638, 295, 264, 25534, 13, 51680, 51842], "temperature": 0.0, "avg_logprob": -0.19366581832306295, "compression_ratio": 1.5454545454545454, "no_speech_prob": 1.7775379092199728e-05}, {"id": 2009, "seek": 614544, "start": 6146.32, "end": 6154.0, "text": " So the second term becomes basically the kinetic energy", "tokens": [50364, 3643, 264, 11244, 13, 50408, 50408, 407, 264, 1150, 1433, 3643, 1936, 264, 27135, 2281, 50792, 50792, 420, 264, 3671, 27135, 2281, 544, 4682, 13, 51044, 51044, 5684, 11, 341, 307, 445, 364, 34115, 3322, 327, 13, 51160, 51160, 1545, 669, 286, 3585, 291, 341, 30, 51234, 51234, 1436, 3410, 671, 11, 264, 18666, 295, 341, 51424, 51424, 307, 1687, 2199, 498, 291, 458, 24886, 32926, 952, 4464, 2144, 51638, 51638, 295, 264, 25534, 13, 51680, 51842], "temperature": 0.0, "avg_logprob": -0.19366581832306295, "compression_ratio": 1.5454545454545454, "no_speech_prob": 1.7775379092199728e-05}, {"id": 2010, "seek": 614544, "start": 6154.0, "end": 6159.04, "text": " or the negative kinetic energy more specifically.", "tokens": [50364, 3643, 264, 11244, 13, 50408, 50408, 407, 264, 1150, 1433, 3643, 1936, 264, 27135, 2281, 50792, 50792, 420, 264, 3671, 27135, 2281, 544, 4682, 13, 51044, 51044, 5684, 11, 341, 307, 445, 364, 34115, 3322, 327, 13, 51160, 51160, 1545, 669, 286, 3585, 291, 341, 30, 51234, 51234, 1436, 3410, 671, 11, 264, 18666, 295, 341, 51424, 51424, 307, 1687, 2199, 498, 291, 458, 24886, 32926, 952, 4464, 2144, 51638, 51638, 295, 264, 25534, 13, 51680, 51842], "temperature": 0.0, "avg_logprob": -0.19366581832306295, "compression_ratio": 1.5454545454545454, "no_speech_prob": 1.7775379092199728e-05}, {"id": 2011, "seek": 614544, "start": 6159.04, "end": 6161.36, "text": " Anyway, this is just an apartheid.", "tokens": [50364, 3643, 264, 11244, 13, 50408, 50408, 407, 264, 1150, 1433, 3643, 1936, 264, 27135, 2281, 50792, 50792, 420, 264, 3671, 27135, 2281, 544, 4682, 13, 51044, 51044, 5684, 11, 341, 307, 445, 364, 34115, 3322, 327, 13, 51160, 51160, 1545, 669, 286, 3585, 291, 341, 30, 51234, 51234, 1436, 3410, 671, 11, 264, 18666, 295, 341, 51424, 51424, 307, 1687, 2199, 498, 291, 458, 24886, 32926, 952, 4464, 2144, 51638, 51638, 295, 264, 25534, 13, 51680, 51842], "temperature": 0.0, "avg_logprob": -0.19366581832306295, "compression_ratio": 1.5454545454545454, "no_speech_prob": 1.7775379092199728e-05}, {"id": 2012, "seek": 614544, "start": 6161.36, "end": 6162.839999999999, "text": " Why am I telling you this?", "tokens": [50364, 3643, 264, 11244, 13, 50408, 50408, 407, 264, 1150, 1433, 3643, 1936, 264, 27135, 2281, 50792, 50792, 420, 264, 3671, 27135, 2281, 544, 4682, 13, 51044, 51044, 5684, 11, 341, 307, 445, 364, 34115, 3322, 327, 13, 51160, 51160, 1545, 669, 286, 3585, 291, 341, 30, 51234, 51234, 1436, 3410, 671, 11, 264, 18666, 295, 341, 51424, 51424, 307, 1687, 2199, 498, 291, 458, 24886, 32926, 952, 4464, 2144, 51638, 51638, 295, 264, 25534, 13, 51680, 51842], "temperature": 0.0, "avg_logprob": -0.19366581832306295, "compression_ratio": 1.5454545454545454, "no_speech_prob": 1.7775379092199728e-05}, {"id": 2013, "seek": 614544, "start": 6162.839999999999, "end": 6166.639999999999, "text": " Because conceptually, the mathematics of this", "tokens": [50364, 3643, 264, 11244, 13, 50408, 50408, 407, 264, 1150, 1433, 3643, 1936, 264, 27135, 2281, 50792, 50792, 420, 264, 3671, 27135, 2281, 544, 4682, 13, 51044, 51044, 5684, 11, 341, 307, 445, 364, 34115, 3322, 327, 13, 51160, 51160, 1545, 669, 286, 3585, 291, 341, 30, 51234, 51234, 1436, 3410, 671, 11, 264, 18666, 295, 341, 51424, 51424, 307, 1687, 2199, 498, 291, 458, 24886, 32926, 952, 4464, 2144, 51638, 51638, 295, 264, 25534, 13, 51680, 51842], "temperature": 0.0, "avg_logprob": -0.19366581832306295, "compression_ratio": 1.5454545454545454, "no_speech_prob": 1.7775379092199728e-05}, {"id": 2014, "seek": 614544, "start": 6166.639999999999, "end": 6170.919999999999, "text": " is super simple if you know Lagrangian minimization", "tokens": [50364, 3643, 264, 11244, 13, 50408, 50408, 407, 264, 1150, 1433, 3643, 1936, 264, 27135, 2281, 50792, 50792, 420, 264, 3671, 27135, 2281, 544, 4682, 13, 51044, 51044, 5684, 11, 341, 307, 445, 364, 34115, 3322, 327, 13, 51160, 51160, 1545, 669, 286, 3585, 291, 341, 30, 51234, 51234, 1436, 3410, 671, 11, 264, 18666, 295, 341, 51424, 51424, 307, 1687, 2199, 498, 291, 458, 24886, 32926, 952, 4464, 2144, 51638, 51638, 295, 264, 25534, 13, 51680, 51842], "temperature": 0.0, "avg_logprob": -0.19366581832306295, "compression_ratio": 1.5454545454545454, "no_speech_prob": 1.7775379092199728e-05}, {"id": 2015, "seek": 614544, "start": 6170.919999999999, "end": 6171.759999999999, "text": " of the constraint.", "tokens": [50364, 3643, 264, 11244, 13, 50408, 50408, 407, 264, 1150, 1433, 3643, 1936, 264, 27135, 2281, 50792, 50792, 420, 264, 3671, 27135, 2281, 544, 4682, 13, 51044, 51044, 5684, 11, 341, 307, 445, 364, 34115, 3322, 327, 13, 51160, 51160, 1545, 669, 286, 3585, 291, 341, 30, 51234, 51234, 1436, 3410, 671, 11, 264, 18666, 295, 341, 51424, 51424, 307, 1687, 2199, 498, 291, 458, 24886, 32926, 952, 4464, 2144, 51638, 51638, 295, 264, 25534, 13, 51680, 51842], "temperature": 0.0, "avg_logprob": -0.19366581832306295, "compression_ratio": 1.5454545454545454, "no_speech_prob": 1.7775379092199728e-05}, {"id": 2016, "seek": 617176, "start": 6171.76, "end": 6175.360000000001, "text": " And this is something you can use also in a new class", "tokens": [50364, 400, 341, 307, 746, 291, 393, 764, 611, 294, 257, 777, 1508, 50544, 50544, 295, 2316, 1219, 18161, 422, 22296, 13, 50676, 50676, 407, 18161, 10547, 15756, 5367, 13, 51114, 51114, 400, 341, 307, 746, 28327, 78, 1415, 385, 281, 751, 466, 13, 51240, 51416, 1044, 291, 13, 51441, 51602, 407, 18161, 422, 22296, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.4933222431247517, "compression_ratio": 1.446808510638298, "no_speech_prob": 2.6918236471829005e-05}, {"id": 2017, "seek": 617176, "start": 6175.360000000001, "end": 6178.0, "text": " of model called neural ODE.", "tokens": [50364, 400, 341, 307, 746, 291, 393, 764, 611, 294, 257, 777, 1508, 50544, 50544, 295, 2316, 1219, 18161, 422, 22296, 13, 50676, 50676, 407, 18161, 10547, 15756, 5367, 13, 51114, 51114, 400, 341, 307, 746, 28327, 78, 1415, 385, 281, 751, 466, 13, 51240, 51416, 1044, 291, 13, 51441, 51602, 407, 18161, 422, 22296, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.4933222431247517, "compression_ratio": 1.446808510638298, "no_speech_prob": 2.6918236471829005e-05}, {"id": 2018, "seek": 617176, "start": 6178.0, "end": 6186.76, "text": " So neural ordinary differential equation.", "tokens": [50364, 400, 341, 307, 746, 291, 393, 764, 611, 294, 257, 777, 1508, 50544, 50544, 295, 2316, 1219, 18161, 422, 22296, 13, 50676, 50676, 407, 18161, 10547, 15756, 5367, 13, 51114, 51114, 400, 341, 307, 746, 28327, 78, 1415, 385, 281, 751, 466, 13, 51240, 51416, 1044, 291, 13, 51441, 51602, 407, 18161, 422, 22296, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.4933222431247517, "compression_ratio": 1.446808510638298, "no_speech_prob": 2.6918236471829005e-05}, {"id": 2019, "seek": 617176, "start": 6186.76, "end": 6189.280000000001, "text": " And this is something Alfredo wanted me to talk about.", "tokens": [50364, 400, 341, 307, 746, 291, 393, 764, 611, 294, 257, 777, 1508, 50544, 50544, 295, 2316, 1219, 18161, 422, 22296, 13, 50676, 50676, 407, 18161, 10547, 15756, 5367, 13, 51114, 51114, 400, 341, 307, 746, 28327, 78, 1415, 385, 281, 751, 466, 13, 51240, 51416, 1044, 291, 13, 51441, 51602, 407, 18161, 422, 22296, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.4933222431247517, "compression_ratio": 1.446808510638298, "no_speech_prob": 2.6918236471829005e-05}, {"id": 2020, "seek": 617176, "start": 6192.8, "end": 6193.3, "text": " Thank you.", "tokens": [50364, 400, 341, 307, 746, 291, 393, 764, 611, 294, 257, 777, 1508, 50544, 50544, 295, 2316, 1219, 18161, 422, 22296, 13, 50676, 50676, 407, 18161, 10547, 15756, 5367, 13, 51114, 51114, 400, 341, 307, 746, 28327, 78, 1415, 385, 281, 751, 466, 13, 51240, 51416, 1044, 291, 13, 51441, 51602, 407, 18161, 422, 22296, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.4933222431247517, "compression_ratio": 1.446808510638298, "no_speech_prob": 2.6918236471829005e-05}, {"id": 2021, "seek": 617176, "start": 6196.52, "end": 6197.52, "text": " So neural ODE.", "tokens": [50364, 400, 341, 307, 746, 291, 393, 764, 611, 294, 257, 777, 1508, 50544, 50544, 295, 2316, 1219, 18161, 422, 22296, 13, 50676, 50676, 407, 18161, 10547, 15756, 5367, 13, 51114, 51114, 400, 341, 307, 746, 28327, 78, 1415, 385, 281, 751, 466, 13, 51240, 51416, 1044, 291, 13, 51441, 51602, 407, 18161, 422, 22296, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.4933222431247517, "compression_ratio": 1.446808510638298, "no_speech_prob": 2.6918236471829005e-05}, {"id": 2022, "seek": 619752, "start": 6197.52, "end": 6203.320000000001, "text": " So this is a type of neural net, which is basically a recurrent", "tokens": [50364, 407, 341, 307, 257, 2010, 295, 18161, 2533, 11, 597, 307, 1936, 257, 18680, 1753, 50654, 50654, 18161, 2533, 11, 689, 291, 584, 452, 1785, 412, 565, 256, 1804, 8289, 256, 50974, 50974, 307, 2681, 281, 452, 1785, 412, 565, 256, 1804, 8289, 256, 1413, 512, 2445, 11, 51458, 51458, 597, 307, 257, 5754, 2445, 295, 710, 83, 293, 257, 3840, 295, 9834, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.29629000495461855, "compression_ratio": 1.7222222222222223, "no_speech_prob": 9.665355719334912e-06}, {"id": 2023, "seek": 619752, "start": 6203.320000000001, "end": 6209.72, "text": " neural net, where you say my state at time t plus delta t", "tokens": [50364, 407, 341, 307, 257, 2010, 295, 18161, 2533, 11, 597, 307, 1936, 257, 18680, 1753, 50654, 50654, 18161, 2533, 11, 689, 291, 584, 452, 1785, 412, 565, 256, 1804, 8289, 256, 50974, 50974, 307, 2681, 281, 452, 1785, 412, 565, 256, 1804, 8289, 256, 1413, 512, 2445, 11, 51458, 51458, 597, 307, 257, 5754, 2445, 295, 710, 83, 293, 257, 3840, 295, 9834, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.29629000495461855, "compression_ratio": 1.7222222222222223, "no_speech_prob": 9.665355719334912e-06}, {"id": 2024, "seek": 619752, "start": 6209.72, "end": 6219.400000000001, "text": " is equal to my state at time t plus delta t times some function,", "tokens": [50364, 407, 341, 307, 257, 2010, 295, 18161, 2533, 11, 597, 307, 1936, 257, 18680, 1753, 50654, 50654, 18161, 2533, 11, 689, 291, 584, 452, 1785, 412, 565, 256, 1804, 8289, 256, 50974, 50974, 307, 2681, 281, 452, 1785, 412, 565, 256, 1804, 8289, 256, 1413, 512, 2445, 11, 51458, 51458, 597, 307, 257, 5754, 2445, 295, 710, 83, 293, 257, 3840, 295, 9834, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.29629000495461855, "compression_ratio": 1.7222222222222223, "no_speech_prob": 9.665355719334912e-06}, {"id": 2025, "seek": 619752, "start": 6219.400000000001, "end": 6227.240000000001, "text": " which is a constant function of zt and a bunch of parameters.", "tokens": [50364, 407, 341, 307, 257, 2010, 295, 18161, 2533, 11, 597, 307, 1936, 257, 18680, 1753, 50654, 50654, 18161, 2533, 11, 689, 291, 584, 452, 1785, 412, 565, 256, 1804, 8289, 256, 50974, 50974, 307, 2681, 281, 452, 1785, 412, 565, 256, 1804, 8289, 256, 1413, 512, 2445, 11, 51458, 51458, 597, 307, 257, 5754, 2445, 295, 710, 83, 293, 257, 3840, 295, 9834, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.29629000495461855, "compression_ratio": 1.7222222222222223, "no_speech_prob": 9.665355719334912e-06}, {"id": 2026, "seek": 622724, "start": 6227.24, "end": 6228.84, "text": " Which are fixed.", "tokens": [50364, 3013, 366, 6806, 13, 50444, 50444, 814, 500, 380, 10559, 365, 565, 13, 50598, 50598, 286, 393, 2464, 309, 341, 636, 13, 50650, 50650, 286, 393, 2464, 309, 294, 257, 15756, 5367, 1254, 50800, 50800, 689, 286, 393, 584, 9758, 670, 36423, 412, 565, 256, 307, 2681, 281, 283, 295, 710, 83, 261, 13, 51356, 51356, 407, 300, 311, 257, 15756, 5367, 11, 51420, 51420, 10547, 15756, 5367, 13, 51602, 51602, 682, 341, 1389, 11, 257, 700, 1668, 13, 51658, 51658, 1042, 11, 309, 5946, 437, 311, 294, 710, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.31182650302318815, "compression_ratio": 1.7298850574712643, "no_speech_prob": 1.9827508367598057e-05}, {"id": 2027, "seek": 622724, "start": 6228.84, "end": 6231.92, "text": " They don't vary with time.", "tokens": [50364, 3013, 366, 6806, 13, 50444, 50444, 814, 500, 380, 10559, 365, 565, 13, 50598, 50598, 286, 393, 2464, 309, 341, 636, 13, 50650, 50650, 286, 393, 2464, 309, 294, 257, 15756, 5367, 1254, 50800, 50800, 689, 286, 393, 584, 9758, 670, 36423, 412, 565, 256, 307, 2681, 281, 283, 295, 710, 83, 261, 13, 51356, 51356, 407, 300, 311, 257, 15756, 5367, 11, 51420, 51420, 10547, 15756, 5367, 13, 51602, 51602, 682, 341, 1389, 11, 257, 700, 1668, 13, 51658, 51658, 1042, 11, 309, 5946, 437, 311, 294, 710, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.31182650302318815, "compression_ratio": 1.7298850574712643, "no_speech_prob": 1.9827508367598057e-05}, {"id": 2028, "seek": 622724, "start": 6231.92, "end": 6232.96, "text": " I can write it this way.", "tokens": [50364, 3013, 366, 6806, 13, 50444, 50444, 814, 500, 380, 10559, 365, 565, 13, 50598, 50598, 286, 393, 2464, 309, 341, 636, 13, 50650, 50650, 286, 393, 2464, 309, 294, 257, 15756, 5367, 1254, 50800, 50800, 689, 286, 393, 584, 9758, 670, 36423, 412, 565, 256, 307, 2681, 281, 283, 295, 710, 83, 261, 13, 51356, 51356, 407, 300, 311, 257, 15756, 5367, 11, 51420, 51420, 10547, 15756, 5367, 13, 51602, 51602, 682, 341, 1389, 11, 257, 700, 1668, 13, 51658, 51658, 1042, 11, 309, 5946, 437, 311, 294, 710, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.31182650302318815, "compression_ratio": 1.7298850574712643, "no_speech_prob": 1.9827508367598057e-05}, {"id": 2029, "seek": 622724, "start": 6232.96, "end": 6235.96, "text": " I can write it in a differential equation form", "tokens": [50364, 3013, 366, 6806, 13, 50444, 50444, 814, 500, 380, 10559, 365, 565, 13, 50598, 50598, 286, 393, 2464, 309, 341, 636, 13, 50650, 50650, 286, 393, 2464, 309, 294, 257, 15756, 5367, 1254, 50800, 50800, 689, 286, 393, 584, 9758, 670, 36423, 412, 565, 256, 307, 2681, 281, 283, 295, 710, 83, 261, 13, 51356, 51356, 407, 300, 311, 257, 15756, 5367, 11, 51420, 51420, 10547, 15756, 5367, 13, 51602, 51602, 682, 341, 1389, 11, 257, 700, 1668, 13, 51658, 51658, 1042, 11, 309, 5946, 437, 311, 294, 710, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.31182650302318815, "compression_ratio": 1.7298850574712643, "no_speech_prob": 1.9827508367598057e-05}, {"id": 2030, "seek": 622724, "start": 6235.96, "end": 6247.08, "text": " where I can say dz over dt at time t is equal to f of zt w.", "tokens": [50364, 3013, 366, 6806, 13, 50444, 50444, 814, 500, 380, 10559, 365, 565, 13, 50598, 50598, 286, 393, 2464, 309, 341, 636, 13, 50650, 50650, 286, 393, 2464, 309, 294, 257, 15756, 5367, 1254, 50800, 50800, 689, 286, 393, 584, 9758, 670, 36423, 412, 565, 256, 307, 2681, 281, 283, 295, 710, 83, 261, 13, 51356, 51356, 407, 300, 311, 257, 15756, 5367, 11, 51420, 51420, 10547, 15756, 5367, 13, 51602, 51602, 682, 341, 1389, 11, 257, 700, 1668, 13, 51658, 51658, 1042, 11, 309, 5946, 437, 311, 294, 710, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.31182650302318815, "compression_ratio": 1.7298850574712643, "no_speech_prob": 1.9827508367598057e-05}, {"id": 2031, "seek": 622724, "start": 6247.08, "end": 6248.36, "text": " So that's a differential equation,", "tokens": [50364, 3013, 366, 6806, 13, 50444, 50444, 814, 500, 380, 10559, 365, 565, 13, 50598, 50598, 286, 393, 2464, 309, 341, 636, 13, 50650, 50650, 286, 393, 2464, 309, 294, 257, 15756, 5367, 1254, 50800, 50800, 689, 286, 393, 584, 9758, 670, 36423, 412, 565, 256, 307, 2681, 281, 283, 295, 710, 83, 261, 13, 51356, 51356, 407, 300, 311, 257, 15756, 5367, 11, 51420, 51420, 10547, 15756, 5367, 13, 51602, 51602, 682, 341, 1389, 11, 257, 700, 1668, 13, 51658, 51658, 1042, 11, 309, 5946, 437, 311, 294, 710, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.31182650302318815, "compression_ratio": 1.7298850574712643, "no_speech_prob": 1.9827508367598057e-05}, {"id": 2032, "seek": 622724, "start": 6248.36, "end": 6252.0, "text": " ordinary differential equation.", "tokens": [50364, 3013, 366, 6806, 13, 50444, 50444, 814, 500, 380, 10559, 365, 565, 13, 50598, 50598, 286, 393, 2464, 309, 341, 636, 13, 50650, 50650, 286, 393, 2464, 309, 294, 257, 15756, 5367, 1254, 50800, 50800, 689, 286, 393, 584, 9758, 670, 36423, 412, 565, 256, 307, 2681, 281, 283, 295, 710, 83, 261, 13, 51356, 51356, 407, 300, 311, 257, 15756, 5367, 11, 51420, 51420, 10547, 15756, 5367, 13, 51602, 51602, 682, 341, 1389, 11, 257, 700, 1668, 13, 51658, 51658, 1042, 11, 309, 5946, 437, 311, 294, 710, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.31182650302318815, "compression_ratio": 1.7298850574712643, "no_speech_prob": 1.9827508367598057e-05}, {"id": 2033, "seek": 622724, "start": 6252.0, "end": 6253.12, "text": " In this case, a first order.", "tokens": [50364, 3013, 366, 6806, 13, 50444, 50444, 814, 500, 380, 10559, 365, 565, 13, 50598, 50598, 286, 393, 2464, 309, 341, 636, 13, 50650, 50650, 286, 393, 2464, 309, 294, 257, 15756, 5367, 1254, 50800, 50800, 689, 286, 393, 584, 9758, 670, 36423, 412, 565, 256, 307, 2681, 281, 283, 295, 710, 83, 261, 13, 51356, 51356, 407, 300, 311, 257, 15756, 5367, 11, 51420, 51420, 10547, 15756, 5367, 13, 51602, 51602, 682, 341, 1389, 11, 257, 700, 1668, 13, 51658, 51658, 1042, 11, 309, 5946, 437, 311, 294, 710, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.31182650302318815, "compression_ratio": 1.7298850574712643, "no_speech_prob": 1.9827508367598057e-05}, {"id": 2034, "seek": 622724, "start": 6253.12, "end": 6254.5599999999995, "text": " Well, it depends what's in z.", "tokens": [50364, 3013, 366, 6806, 13, 50444, 50444, 814, 500, 380, 10559, 365, 565, 13, 50598, 50598, 286, 393, 2464, 309, 341, 636, 13, 50650, 50650, 286, 393, 2464, 309, 294, 257, 15756, 5367, 1254, 50800, 50800, 689, 286, 393, 584, 9758, 670, 36423, 412, 565, 256, 307, 2681, 281, 283, 295, 710, 83, 261, 13, 51356, 51356, 407, 300, 311, 257, 15756, 5367, 11, 51420, 51420, 10547, 15756, 5367, 13, 51602, 51602, 682, 341, 1389, 11, 257, 700, 1668, 13, 51658, 51658, 1042, 11, 309, 5946, 437, 311, 294, 710, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.31182650302318815, "compression_ratio": 1.7298850574712643, "no_speech_prob": 1.9827508367598057e-05}, {"id": 2035, "seek": 625456, "start": 6254.56, "end": 6261.8, "text": " But I can express just about anything this way.", "tokens": [50364, 583, 286, 393, 5109, 445, 466, 1340, 341, 636, 13, 50726, 50726, 400, 264, 1168, 307, 577, 360, 291, 3847, 746, 411, 341, 30, 50870, 50870, 400, 1936, 11, 498, 291, 2464, 264, 24886, 32926, 952, 37642, 295, 341, 11, 51030, 51030, 309, 311, 26703, 13, 51056, 51238, 407, 456, 366, 732, 2098, 291, 1062, 528, 51314, 51314, 281, 3847, 746, 411, 341, 13, 51366, 51366, 509, 1062, 528, 281, 3847, 264, 1185, 51454, 51454], "temperature": 0.0, "avg_logprob": -0.2894976479666574, "compression_ratio": 1.6379310344827587, "no_speech_prob": 1.0126756023964845e-05}, {"id": 2036, "seek": 625456, "start": 6261.8, "end": 6264.68, "text": " And the question is how do you train something like this?", "tokens": [50364, 583, 286, 393, 5109, 445, 466, 1340, 341, 636, 13, 50726, 50726, 400, 264, 1168, 307, 577, 360, 291, 3847, 746, 411, 341, 30, 50870, 50870, 400, 1936, 11, 498, 291, 2464, 264, 24886, 32926, 952, 37642, 295, 341, 11, 51030, 51030, 309, 311, 26703, 13, 51056, 51238, 407, 456, 366, 732, 2098, 291, 1062, 528, 51314, 51314, 281, 3847, 746, 411, 341, 13, 51366, 51366, 509, 1062, 528, 281, 3847, 264, 1185, 51454, 51454], "temperature": 0.0, "avg_logprob": -0.2894976479666574, "compression_ratio": 1.6379310344827587, "no_speech_prob": 1.0126756023964845e-05}, {"id": 2037, "seek": 625456, "start": 6264.68, "end": 6267.88, "text": " And basically, if you write the Lagrangian formulation of this,", "tokens": [50364, 583, 286, 393, 5109, 445, 466, 1340, 341, 636, 13, 50726, 50726, 400, 264, 1168, 307, 577, 360, 291, 3847, 746, 411, 341, 30, 50870, 50870, 400, 1936, 11, 498, 291, 2464, 264, 24886, 32926, 952, 37642, 295, 341, 11, 51030, 51030, 309, 311, 26703, 13, 51056, 51238, 407, 456, 366, 732, 2098, 291, 1062, 528, 51314, 51314, 281, 3847, 746, 411, 341, 13, 51366, 51366, 509, 1062, 528, 281, 3847, 264, 1185, 51454, 51454], "temperature": 0.0, "avg_logprob": -0.2894976479666574, "compression_ratio": 1.6379310344827587, "no_speech_prob": 1.0126756023964845e-05}, {"id": 2038, "seek": 625456, "start": 6267.88, "end": 6268.400000000001, "text": " it's trivial.", "tokens": [50364, 583, 286, 393, 5109, 445, 466, 1340, 341, 636, 13, 50726, 50726, 400, 264, 1168, 307, 577, 360, 291, 3847, 746, 411, 341, 30, 50870, 50870, 400, 1936, 11, 498, 291, 2464, 264, 24886, 32926, 952, 37642, 295, 341, 11, 51030, 51030, 309, 311, 26703, 13, 51056, 51238, 407, 456, 366, 732, 2098, 291, 1062, 528, 51314, 51314, 281, 3847, 746, 411, 341, 13, 51366, 51366, 509, 1062, 528, 281, 3847, 264, 1185, 51454, 51454], "temperature": 0.0, "avg_logprob": -0.2894976479666574, "compression_ratio": 1.6379310344827587, "no_speech_prob": 1.0126756023964845e-05}, {"id": 2039, "seek": 625456, "start": 6272.04, "end": 6273.56, "text": " So there are two ways you might want", "tokens": [50364, 583, 286, 393, 5109, 445, 466, 1340, 341, 636, 13, 50726, 50726, 400, 264, 1168, 307, 577, 360, 291, 3847, 746, 411, 341, 30, 50870, 50870, 400, 1936, 11, 498, 291, 2464, 264, 24886, 32926, 952, 37642, 295, 341, 11, 51030, 51030, 309, 311, 26703, 13, 51056, 51238, 407, 456, 366, 732, 2098, 291, 1062, 528, 51314, 51314, 281, 3847, 746, 411, 341, 13, 51366, 51366, 509, 1062, 528, 281, 3847, 264, 1185, 51454, 51454], "temperature": 0.0, "avg_logprob": -0.2894976479666574, "compression_ratio": 1.6379310344827587, "no_speech_prob": 1.0126756023964845e-05}, {"id": 2040, "seek": 625456, "start": 6273.56, "end": 6274.6, "text": " to train something like this.", "tokens": [50364, 583, 286, 393, 5109, 445, 466, 1340, 341, 636, 13, 50726, 50726, 400, 264, 1168, 307, 577, 360, 291, 3847, 746, 411, 341, 30, 50870, 50870, 400, 1936, 11, 498, 291, 2464, 264, 24886, 32926, 952, 37642, 295, 341, 11, 51030, 51030, 309, 311, 26703, 13, 51056, 51238, 407, 456, 366, 732, 2098, 291, 1062, 528, 51314, 51314, 281, 3847, 746, 411, 341, 13, 51366, 51366, 509, 1062, 528, 281, 3847, 264, 1185, 51454, 51454], "temperature": 0.0, "avg_logprob": -0.2894976479666574, "compression_ratio": 1.6379310344827587, "no_speech_prob": 1.0126756023964845e-05}, {"id": 2041, "seek": 625456, "start": 6274.6, "end": 6276.360000000001, "text": " You might want to train the system", "tokens": [50364, 583, 286, 393, 5109, 445, 466, 1340, 341, 636, 13, 50726, 50726, 400, 264, 1168, 307, 577, 360, 291, 3847, 746, 411, 341, 30, 50870, 50870, 400, 1936, 11, 498, 291, 2464, 264, 24886, 32926, 952, 37642, 295, 341, 11, 51030, 51030, 309, 311, 26703, 13, 51056, 51238, 407, 456, 366, 732, 2098, 291, 1062, 528, 51314, 51314, 281, 3847, 746, 411, 341, 13, 51366, 51366, 509, 1062, 528, 281, 3847, 264, 1185, 51454, 51454], "temperature": 0.0, "avg_logprob": -0.2894976479666574, "compression_ratio": 1.6379310344827587, "no_speech_prob": 1.0126756023964845e-05}, {"id": 2042, "seek": 627636, "start": 6276.36, "end": 6285.5599999999995, "text": " to map one point z at time 0 to a particular point z at time", "tokens": [50364, 281, 4471, 472, 935, 710, 412, 565, 1958, 281, 257, 1729, 935, 710, 412, 565, 50824, 50824, 955, 314, 934, 512, 21512, 13, 50970, 50970, 509, 815, 406, 528, 281, 1817, 7146, 264, 21512, 13, 51056, 51056, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51164, 51164, 400, 291, 500, 380, 1127, 437, 309, 775, 10543, 13, 51274, 51274, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51356, 51356, 400, 370, 291, 393, 362, 257, 2063, 2445, 11, 51436, 51436, 597, 307, 1936, 264, 4560, 295, 710, 281, 300, 3779, 935, 710, 51724, 51724, 295, 955, 314, 13, 286, 478, 516, 281, 818, 309, 261, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.2732606955936977, "compression_ratio": 1.838095238095238, "no_speech_prob": 8.267012162832543e-06}, {"id": 2043, "seek": 627636, "start": 6285.5599999999995, "end": 6288.48, "text": " big T after some trajectory.", "tokens": [50364, 281, 4471, 472, 935, 710, 412, 565, 1958, 281, 257, 1729, 935, 710, 412, 565, 50824, 50824, 955, 314, 934, 512, 21512, 13, 50970, 50970, 509, 815, 406, 528, 281, 1817, 7146, 264, 21512, 13, 51056, 51056, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51164, 51164, 400, 291, 500, 380, 1127, 437, 309, 775, 10543, 13, 51274, 51274, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51356, 51356, 400, 370, 291, 393, 362, 257, 2063, 2445, 11, 51436, 51436, 597, 307, 1936, 264, 4560, 295, 710, 281, 300, 3779, 935, 710, 51724, 51724, 295, 955, 314, 13, 286, 478, 516, 281, 818, 309, 261, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.2732606955936977, "compression_ratio": 1.838095238095238, "no_speech_prob": 8.267012162832543e-06}, {"id": 2044, "seek": 627636, "start": 6288.48, "end": 6290.2, "text": " You may not want to constrain the trajectory.", "tokens": [50364, 281, 4471, 472, 935, 710, 412, 565, 1958, 281, 257, 1729, 935, 710, 412, 565, 50824, 50824, 955, 314, 934, 512, 21512, 13, 50970, 50970, 509, 815, 406, 528, 281, 1817, 7146, 264, 21512, 13, 51056, 51056, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51164, 51164, 400, 291, 500, 380, 1127, 437, 309, 775, 10543, 13, 51274, 51274, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51356, 51356, 400, 370, 291, 393, 362, 257, 2063, 2445, 11, 51436, 51436, 597, 307, 1936, 264, 4560, 295, 710, 281, 300, 3779, 935, 710, 51724, 51724, 295, 955, 314, 13, 286, 478, 516, 281, 818, 309, 261, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.2732606955936977, "compression_ratio": 1.838095238095238, "no_speech_prob": 8.267012162832543e-06}, {"id": 2045, "seek": 627636, "start": 6290.2, "end": 6292.36, "text": " You just want it to reach that point.", "tokens": [50364, 281, 4471, 472, 935, 710, 412, 565, 1958, 281, 257, 1729, 935, 710, 412, 565, 50824, 50824, 955, 314, 934, 512, 21512, 13, 50970, 50970, 509, 815, 406, 528, 281, 1817, 7146, 264, 21512, 13, 51056, 51056, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51164, 51164, 400, 291, 500, 380, 1127, 437, 309, 775, 10543, 13, 51274, 51274, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51356, 51356, 400, 370, 291, 393, 362, 257, 2063, 2445, 11, 51436, 51436, 597, 307, 1936, 264, 4560, 295, 710, 281, 300, 3779, 935, 710, 51724, 51724, 295, 955, 314, 13, 286, 478, 516, 281, 818, 309, 261, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.2732606955936977, "compression_ratio": 1.838095238095238, "no_speech_prob": 8.267012162832543e-06}, {"id": 2046, "seek": 627636, "start": 6292.36, "end": 6294.5599999999995, "text": " And you don't care what it does afterwards.", "tokens": [50364, 281, 4471, 472, 935, 710, 412, 565, 1958, 281, 257, 1729, 935, 710, 412, 565, 50824, 50824, 955, 314, 934, 512, 21512, 13, 50970, 50970, 509, 815, 406, 528, 281, 1817, 7146, 264, 21512, 13, 51056, 51056, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51164, 51164, 400, 291, 500, 380, 1127, 437, 309, 775, 10543, 13, 51274, 51274, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51356, 51356, 400, 370, 291, 393, 362, 257, 2063, 2445, 11, 51436, 51436, 597, 307, 1936, 264, 4560, 295, 710, 281, 300, 3779, 935, 710, 51724, 51724, 295, 955, 314, 13, 286, 478, 516, 281, 818, 309, 261, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.2732606955936977, "compression_ratio": 1.838095238095238, "no_speech_prob": 8.267012162832543e-06}, {"id": 2047, "seek": 627636, "start": 6294.5599999999995, "end": 6296.2, "text": " You just want it to reach that point.", "tokens": [50364, 281, 4471, 472, 935, 710, 412, 565, 1958, 281, 257, 1729, 935, 710, 412, 565, 50824, 50824, 955, 314, 934, 512, 21512, 13, 50970, 50970, 509, 815, 406, 528, 281, 1817, 7146, 264, 21512, 13, 51056, 51056, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51164, 51164, 400, 291, 500, 380, 1127, 437, 309, 775, 10543, 13, 51274, 51274, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51356, 51356, 400, 370, 291, 393, 362, 257, 2063, 2445, 11, 51436, 51436, 597, 307, 1936, 264, 4560, 295, 710, 281, 300, 3779, 935, 710, 51724, 51724, 295, 955, 314, 13, 286, 478, 516, 281, 818, 309, 261, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.2732606955936977, "compression_ratio": 1.838095238095238, "no_speech_prob": 8.267012162832543e-06}, {"id": 2048, "seek": 627636, "start": 6296.2, "end": 6297.799999999999, "text": " And so you can have a cost function,", "tokens": [50364, 281, 4471, 472, 935, 710, 412, 565, 1958, 281, 257, 1729, 935, 710, 412, 565, 50824, 50824, 955, 314, 934, 512, 21512, 13, 50970, 50970, 509, 815, 406, 528, 281, 1817, 7146, 264, 21512, 13, 51056, 51056, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51164, 51164, 400, 291, 500, 380, 1127, 437, 309, 775, 10543, 13, 51274, 51274, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51356, 51356, 400, 370, 291, 393, 362, 257, 2063, 2445, 11, 51436, 51436, 597, 307, 1936, 264, 4560, 295, 710, 281, 300, 3779, 935, 710, 51724, 51724, 295, 955, 314, 13, 286, 478, 516, 281, 818, 309, 261, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.2732606955936977, "compression_ratio": 1.838095238095238, "no_speech_prob": 8.267012162832543e-06}, {"id": 2049, "seek": 627636, "start": 6297.799999999999, "end": 6303.5599999999995, "text": " which is basically the distance of z to that target point z", "tokens": [50364, 281, 4471, 472, 935, 710, 412, 565, 1958, 281, 257, 1729, 935, 710, 412, 565, 50824, 50824, 955, 314, 934, 512, 21512, 13, 50970, 50970, 509, 815, 406, 528, 281, 1817, 7146, 264, 21512, 13, 51056, 51056, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51164, 51164, 400, 291, 500, 380, 1127, 437, 309, 775, 10543, 13, 51274, 51274, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51356, 51356, 400, 370, 291, 393, 362, 257, 2063, 2445, 11, 51436, 51436, 597, 307, 1936, 264, 4560, 295, 710, 281, 300, 3779, 935, 710, 51724, 51724, 295, 955, 314, 13, 286, 478, 516, 281, 818, 309, 261, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.2732606955936977, "compression_ratio": 1.838095238095238, "no_speech_prob": 8.267012162832543e-06}, {"id": 2050, "seek": 627636, "start": 6303.5599999999995, "end": 6306.04, "text": " of big T. I'm going to call it w.", "tokens": [50364, 281, 4471, 472, 935, 710, 412, 565, 1958, 281, 257, 1729, 935, 710, 412, 565, 50824, 50824, 955, 314, 934, 512, 21512, 13, 50970, 50970, 509, 815, 406, 528, 281, 1817, 7146, 264, 21512, 13, 51056, 51056, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51164, 51164, 400, 291, 500, 380, 1127, 437, 309, 775, 10543, 13, 51274, 51274, 509, 445, 528, 309, 281, 2524, 300, 935, 13, 51356, 51356, 400, 370, 291, 393, 362, 257, 2063, 2445, 11, 51436, 51436, 597, 307, 1936, 264, 4560, 295, 710, 281, 300, 3779, 935, 710, 51724, 51724, 295, 955, 314, 13, 286, 478, 516, 281, 818, 309, 261, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.2732606955936977, "compression_ratio": 1.838095238095238, "no_speech_prob": 8.267012162832543e-06}, {"id": 2051, "seek": 630604, "start": 6306.04, "end": 6307.04, "text": " I'm going to call it y.", "tokens": [50364, 286, 478, 516, 281, 818, 309, 288, 13, 50414, 50414, 400, 550, 370, 264, 3779, 576, 312, 257, 935, 288, 13, 50840, 50840, 400, 550, 428, 2063, 2445, 576, 312, 264, 4560, 1296, 710, 83, 51016, 51016, 293, 288, 11, 420, 746, 411, 300, 13, 51156, 51156, 3996, 551, 291, 1062, 528, 281, 360, 51226, 51226, 307, 291, 1062, 528, 281, 3847, 264, 1185, 370, 300, 309, 51366, 51366, 575, 8351, 4368, 412, 1729, 2793, 288, 13, 51592, 51592, 407, 300, 337, 257, 1729, 935, 288, 300, 291, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15073816672615384, "compression_ratio": 1.7340425531914894, "no_speech_prob": 5.337695256457664e-06}, {"id": 2052, "seek": 630604, "start": 6307.04, "end": 6315.56, "text": " And then so the target would be a point y.", "tokens": [50364, 286, 478, 516, 281, 818, 309, 288, 13, 50414, 50414, 400, 550, 370, 264, 3779, 576, 312, 257, 935, 288, 13, 50840, 50840, 400, 550, 428, 2063, 2445, 576, 312, 264, 4560, 1296, 710, 83, 51016, 51016, 293, 288, 11, 420, 746, 411, 300, 13, 51156, 51156, 3996, 551, 291, 1062, 528, 281, 360, 51226, 51226, 307, 291, 1062, 528, 281, 3847, 264, 1185, 370, 300, 309, 51366, 51366, 575, 8351, 4368, 412, 1729, 2793, 288, 13, 51592, 51592, 407, 300, 337, 257, 1729, 935, 288, 300, 291, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15073816672615384, "compression_ratio": 1.7340425531914894, "no_speech_prob": 5.337695256457664e-06}, {"id": 2053, "seek": 630604, "start": 6315.56, "end": 6319.08, "text": " And then your cost function would be the distance between zt", "tokens": [50364, 286, 478, 516, 281, 818, 309, 288, 13, 50414, 50414, 400, 550, 370, 264, 3779, 576, 312, 257, 935, 288, 13, 50840, 50840, 400, 550, 428, 2063, 2445, 576, 312, 264, 4560, 1296, 710, 83, 51016, 51016, 293, 288, 11, 420, 746, 411, 300, 13, 51156, 51156, 3996, 551, 291, 1062, 528, 281, 360, 51226, 51226, 307, 291, 1062, 528, 281, 3847, 264, 1185, 370, 300, 309, 51366, 51366, 575, 8351, 4368, 412, 1729, 2793, 288, 13, 51592, 51592, 407, 300, 337, 257, 1729, 935, 288, 300, 291, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15073816672615384, "compression_ratio": 1.7340425531914894, "no_speech_prob": 5.337695256457664e-06}, {"id": 2054, "seek": 630604, "start": 6319.08, "end": 6321.88, "text": " and y, or something like that.", "tokens": [50364, 286, 478, 516, 281, 818, 309, 288, 13, 50414, 50414, 400, 550, 370, 264, 3779, 576, 312, 257, 935, 288, 13, 50840, 50840, 400, 550, 428, 2063, 2445, 576, 312, 264, 4560, 1296, 710, 83, 51016, 51016, 293, 288, 11, 420, 746, 411, 300, 13, 51156, 51156, 3996, 551, 291, 1062, 528, 281, 360, 51226, 51226, 307, 291, 1062, 528, 281, 3847, 264, 1185, 370, 300, 309, 51366, 51366, 575, 8351, 4368, 412, 1729, 2793, 288, 13, 51592, 51592, 407, 300, 337, 257, 1729, 935, 288, 300, 291, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15073816672615384, "compression_ratio": 1.7340425531914894, "no_speech_prob": 5.337695256457664e-06}, {"id": 2055, "seek": 630604, "start": 6321.88, "end": 6323.28, "text": " Another thing you might want to do", "tokens": [50364, 286, 478, 516, 281, 818, 309, 288, 13, 50414, 50414, 400, 550, 370, 264, 3779, 576, 312, 257, 935, 288, 13, 50840, 50840, 400, 550, 428, 2063, 2445, 576, 312, 264, 4560, 1296, 710, 83, 51016, 51016, 293, 288, 11, 420, 746, 411, 300, 13, 51156, 51156, 3996, 551, 291, 1062, 528, 281, 360, 51226, 51226, 307, 291, 1062, 528, 281, 3847, 264, 1185, 370, 300, 309, 51366, 51366, 575, 8351, 4368, 412, 1729, 2793, 288, 13, 51592, 51592, 407, 300, 337, 257, 1729, 935, 288, 300, 291, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15073816672615384, "compression_ratio": 1.7340425531914894, "no_speech_prob": 5.337695256457664e-06}, {"id": 2056, "seek": 630604, "start": 6323.28, "end": 6326.08, "text": " is you might want to train the system so that it", "tokens": [50364, 286, 478, 516, 281, 818, 309, 288, 13, 50414, 50414, 400, 550, 370, 264, 3779, 576, 312, 257, 935, 288, 13, 50840, 50840, 400, 550, 428, 2063, 2445, 576, 312, 264, 4560, 1296, 710, 83, 51016, 51016, 293, 288, 11, 420, 746, 411, 300, 13, 51156, 51156, 3996, 551, 291, 1062, 528, 281, 360, 51226, 51226, 307, 291, 1062, 528, 281, 3847, 264, 1185, 370, 300, 309, 51366, 51366, 575, 8351, 4368, 412, 1729, 2793, 288, 13, 51592, 51592, 407, 300, 337, 257, 1729, 935, 288, 300, 291, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15073816672615384, "compression_ratio": 1.7340425531914894, "no_speech_prob": 5.337695256457664e-06}, {"id": 2057, "seek": 630604, "start": 6326.08, "end": 6330.6, "text": " has stable states at particular points y.", "tokens": [50364, 286, 478, 516, 281, 818, 309, 288, 13, 50414, 50414, 400, 550, 370, 264, 3779, 576, 312, 257, 935, 288, 13, 50840, 50840, 400, 550, 428, 2063, 2445, 576, 312, 264, 4560, 1296, 710, 83, 51016, 51016, 293, 288, 11, 420, 746, 411, 300, 13, 51156, 51156, 3996, 551, 291, 1062, 528, 281, 360, 51226, 51226, 307, 291, 1062, 528, 281, 3847, 264, 1185, 370, 300, 309, 51366, 51366, 575, 8351, 4368, 412, 1729, 2793, 288, 13, 51592, 51592, 407, 300, 337, 257, 1729, 935, 288, 300, 291, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15073816672615384, "compression_ratio": 1.7340425531914894, "no_speech_prob": 5.337695256457664e-06}, {"id": 2058, "seek": 630604, "start": 6330.6, "end": 6333.92, "text": " So that for a particular point y that you", "tokens": [50364, 286, 478, 516, 281, 818, 309, 288, 13, 50414, 50414, 400, 550, 370, 264, 3779, 576, 312, 257, 935, 288, 13, 50840, 50840, 400, 550, 428, 2063, 2445, 576, 312, 264, 4560, 1296, 710, 83, 51016, 51016, 293, 288, 11, 420, 746, 411, 300, 13, 51156, 51156, 3996, 551, 291, 1062, 528, 281, 360, 51226, 51226, 307, 291, 1062, 528, 281, 3847, 264, 1185, 370, 300, 309, 51366, 51366, 575, 8351, 4368, 412, 1729, 2793, 288, 13, 51592, 51592, 407, 300, 337, 257, 1729, 935, 288, 300, 291, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15073816672615384, "compression_ratio": 1.7340425531914894, "no_speech_prob": 5.337695256457664e-06}, {"id": 2059, "seek": 633392, "start": 6333.92, "end": 6341.52, "text": " decide from your training set, f of this particular y, w,", "tokens": [50364, 4536, 490, 428, 3097, 992, 11, 283, 295, 341, 1729, 288, 11, 261, 11, 50744, 50744, 6915, 1958, 11, 597, 1355, 300, 1785, 307, 516, 281, 312, 8351, 13, 51078, 51078, 440, 21512, 11, 370, 291, 576, 362, 257, 935, 288, 294, 428, 1901, 13, 51324, 51324, 400, 550, 291, 1062, 722, 490, 264, 935, 51498, 51498, 300, 562, 291, 8881, 412, 300, 935, 11, 264, 15679, 10094, 13, 51666, 51800], "temperature": 0.0, "avg_logprob": -0.18027937902163152, "compression_ratio": 1.5402298850574712, "no_speech_prob": 4.710449502454139e-06}, {"id": 2060, "seek": 633392, "start": 6341.52, "end": 6348.2, "text": " equals 0, which means that state is going to be stable.", "tokens": [50364, 4536, 490, 428, 3097, 992, 11, 283, 295, 341, 1729, 288, 11, 261, 11, 50744, 50744, 6915, 1958, 11, 597, 1355, 300, 1785, 307, 516, 281, 312, 8351, 13, 51078, 51078, 440, 21512, 11, 370, 291, 576, 362, 257, 935, 288, 294, 428, 1901, 13, 51324, 51324, 400, 550, 291, 1062, 722, 490, 264, 935, 51498, 51498, 300, 562, 291, 8881, 412, 300, 935, 11, 264, 15679, 10094, 13, 51666, 51800], "temperature": 0.0, "avg_logprob": -0.18027937902163152, "compression_ratio": 1.5402298850574712, "no_speech_prob": 4.710449502454139e-06}, {"id": 2061, "seek": 633392, "start": 6348.2, "end": 6353.12, "text": " The trajectory, so you would have a point y in your space.", "tokens": [50364, 4536, 490, 428, 3097, 992, 11, 283, 295, 341, 1729, 288, 11, 261, 11, 50744, 50744, 6915, 1958, 11, 597, 1355, 300, 1785, 307, 516, 281, 312, 8351, 13, 51078, 51078, 440, 21512, 11, 370, 291, 576, 362, 257, 935, 288, 294, 428, 1901, 13, 51324, 51324, 400, 550, 291, 1062, 722, 490, 264, 935, 51498, 51498, 300, 562, 291, 8881, 412, 300, 935, 11, 264, 15679, 10094, 13, 51666, 51800], "temperature": 0.0, "avg_logprob": -0.18027937902163152, "compression_ratio": 1.5402298850574712, "no_speech_prob": 4.710449502454139e-06}, {"id": 2062, "seek": 633392, "start": 6353.12, "end": 6356.6, "text": " And then you might start from the point", "tokens": [50364, 4536, 490, 428, 3097, 992, 11, 283, 295, 341, 1729, 288, 11, 261, 11, 50744, 50744, 6915, 1958, 11, 597, 1355, 300, 1785, 307, 516, 281, 312, 8351, 13, 51078, 51078, 440, 21512, 11, 370, 291, 576, 362, 257, 935, 288, 294, 428, 1901, 13, 51324, 51324, 400, 550, 291, 1062, 722, 490, 264, 935, 51498, 51498, 300, 562, 291, 8881, 412, 300, 935, 11, 264, 15679, 10094, 13, 51666, 51800], "temperature": 0.0, "avg_logprob": -0.18027937902163152, "compression_ratio": 1.5402298850574712, "no_speech_prob": 4.710449502454139e-06}, {"id": 2063, "seek": 633392, "start": 6356.6, "end": 6359.96, "text": " that when you arrive at that point, the dynamics stops.", "tokens": [50364, 4536, 490, 428, 3097, 992, 11, 283, 295, 341, 1729, 288, 11, 261, 11, 50744, 50744, 6915, 1958, 11, 597, 1355, 300, 1785, 307, 516, 281, 312, 8351, 13, 51078, 51078, 440, 21512, 11, 370, 291, 576, 362, 257, 935, 288, 294, 428, 1901, 13, 51324, 51324, 400, 550, 291, 1062, 722, 490, 264, 935, 51498, 51498, 300, 562, 291, 8881, 412, 300, 935, 11, 264, 15679, 10094, 13, 51666, 51800], "temperature": 0.0, "avg_logprob": -0.18027937902163152, "compression_ratio": 1.5402298850574712, "no_speech_prob": 4.710449502454139e-06}, {"id": 2064, "seek": 635996, "start": 6359.96, "end": 6364.44, "text": " So if you formulate this in terms of Lagrangian,", "tokens": [50364, 407, 498, 291, 47881, 341, 294, 2115, 295, 24886, 32926, 952, 11, 50588, 50588, 309, 3643, 1687, 2199, 294, 264, 2020, 50676, 50676, 300, 264, 2771, 2448, 586, 11, 19506, 281, 646, 79, 1513, 807, 565, 13, 50934, 50934, 407, 498, 291, 645, 281, 17980, 341, 3209, 510, 11, 51112, 51112, 1949, 341, 257, 18680, 1753, 2533, 13, 51240, 51240, 400, 291, 17980, 309, 294, 565, 13, 51360, 51360, 1407, 14722, 264, 16235, 295, 264, 35795, 365, 3104, 51596, 51596, 281, 264, 9834, 11, 291, 733, 295, 362, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.2555538467738939, "compression_ratio": 1.6028708133971292, "no_speech_prob": 5.593882633547764e-06}, {"id": 2065, "seek": 635996, "start": 6364.44, "end": 6366.2, "text": " it becomes super simple in the sense", "tokens": [50364, 407, 498, 291, 47881, 341, 294, 2115, 295, 24886, 32926, 952, 11, 50588, 50588, 309, 3643, 1687, 2199, 294, 264, 2020, 50676, 50676, 300, 264, 2771, 2448, 586, 11, 19506, 281, 646, 79, 1513, 807, 565, 13, 50934, 50934, 407, 498, 291, 645, 281, 17980, 341, 3209, 510, 11, 51112, 51112, 1949, 341, 257, 18680, 1753, 2533, 13, 51240, 51240, 400, 291, 17980, 309, 294, 565, 13, 51360, 51360, 1407, 14722, 264, 16235, 295, 264, 35795, 365, 3104, 51596, 51596, 281, 264, 9834, 11, 291, 733, 295, 362, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.2555538467738939, "compression_ratio": 1.6028708133971292, "no_speech_prob": 5.593882633547764e-06}, {"id": 2066, "seek": 635996, "start": 6366.2, "end": 6371.36, "text": " that the gradients now, contrary to backprop through time.", "tokens": [50364, 407, 498, 291, 47881, 341, 294, 2115, 295, 24886, 32926, 952, 11, 50588, 50588, 309, 3643, 1687, 2199, 294, 264, 2020, 50676, 50676, 300, 264, 2771, 2448, 586, 11, 19506, 281, 646, 79, 1513, 807, 565, 13, 50934, 50934, 407, 498, 291, 645, 281, 17980, 341, 3209, 510, 11, 51112, 51112, 1949, 341, 257, 18680, 1753, 2533, 13, 51240, 51240, 400, 291, 17980, 309, 294, 565, 13, 51360, 51360, 1407, 14722, 264, 16235, 295, 264, 35795, 365, 3104, 51596, 51596, 281, 264, 9834, 11, 291, 733, 295, 362, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.2555538467738939, "compression_ratio": 1.6028708133971292, "no_speech_prob": 5.593882633547764e-06}, {"id": 2067, "seek": 635996, "start": 6371.36, "end": 6374.92, "text": " So if you were to unfold this network here,", "tokens": [50364, 407, 498, 291, 47881, 341, 294, 2115, 295, 24886, 32926, 952, 11, 50588, 50588, 309, 3643, 1687, 2199, 294, 264, 2020, 50676, 50676, 300, 264, 2771, 2448, 586, 11, 19506, 281, 646, 79, 1513, 807, 565, 13, 50934, 50934, 407, 498, 291, 645, 281, 17980, 341, 3209, 510, 11, 51112, 51112, 1949, 341, 257, 18680, 1753, 2533, 13, 51240, 51240, 400, 291, 17980, 309, 294, 565, 13, 51360, 51360, 1407, 14722, 264, 16235, 295, 264, 35795, 365, 3104, 51596, 51596, 281, 264, 9834, 11, 291, 733, 295, 362, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.2555538467738939, "compression_ratio": 1.6028708133971292, "no_speech_prob": 5.593882633547764e-06}, {"id": 2068, "seek": 635996, "start": 6374.92, "end": 6377.4800000000005, "text": " consider this a recurrent net.", "tokens": [50364, 407, 498, 291, 47881, 341, 294, 2115, 295, 24886, 32926, 952, 11, 50588, 50588, 309, 3643, 1687, 2199, 294, 264, 2020, 50676, 50676, 300, 264, 2771, 2448, 586, 11, 19506, 281, 646, 79, 1513, 807, 565, 13, 50934, 50934, 407, 498, 291, 645, 281, 17980, 341, 3209, 510, 11, 51112, 51112, 1949, 341, 257, 18680, 1753, 2533, 13, 51240, 51240, 400, 291, 17980, 309, 294, 565, 13, 51360, 51360, 1407, 14722, 264, 16235, 295, 264, 35795, 365, 3104, 51596, 51596, 281, 264, 9834, 11, 291, 733, 295, 362, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.2555538467738939, "compression_ratio": 1.6028708133971292, "no_speech_prob": 5.593882633547764e-06}, {"id": 2069, "seek": 635996, "start": 6377.4800000000005, "end": 6379.88, "text": " And you unfold it in time.", "tokens": [50364, 407, 498, 291, 47881, 341, 294, 2115, 295, 24886, 32926, 952, 11, 50588, 50588, 309, 3643, 1687, 2199, 294, 264, 2020, 50676, 50676, 300, 264, 2771, 2448, 586, 11, 19506, 281, 646, 79, 1513, 807, 565, 13, 50934, 50934, 407, 498, 291, 645, 281, 17980, 341, 3209, 510, 11, 51112, 51112, 1949, 341, 257, 18680, 1753, 2533, 13, 51240, 51240, 400, 291, 17980, 309, 294, 565, 13, 51360, 51360, 1407, 14722, 264, 16235, 295, 264, 35795, 365, 3104, 51596, 51596, 281, 264, 9834, 11, 291, 733, 295, 362, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.2555538467738939, "compression_ratio": 1.6028708133971292, "no_speech_prob": 5.593882633547764e-06}, {"id": 2070, "seek": 635996, "start": 6379.88, "end": 6384.6, "text": " To compute the gradient of the endpoint with respect", "tokens": [50364, 407, 498, 291, 47881, 341, 294, 2115, 295, 24886, 32926, 952, 11, 50588, 50588, 309, 3643, 1687, 2199, 294, 264, 2020, 50676, 50676, 300, 264, 2771, 2448, 586, 11, 19506, 281, 646, 79, 1513, 807, 565, 13, 50934, 50934, 407, 498, 291, 645, 281, 17980, 341, 3209, 510, 11, 51112, 51112, 1949, 341, 257, 18680, 1753, 2533, 13, 51240, 51240, 400, 291, 17980, 309, 294, 565, 13, 51360, 51360, 1407, 14722, 264, 16235, 295, 264, 35795, 365, 3104, 51596, 51596, 281, 264, 9834, 11, 291, 733, 295, 362, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.2555538467738939, "compression_ratio": 1.6028708133971292, "no_speech_prob": 5.593882633547764e-06}, {"id": 2071, "seek": 635996, "start": 6384.6, "end": 6386.6, "text": " to the parameters, you kind of have", "tokens": [50364, 407, 498, 291, 47881, 341, 294, 2115, 295, 24886, 32926, 952, 11, 50588, 50588, 309, 3643, 1687, 2199, 294, 264, 2020, 50676, 50676, 300, 264, 2771, 2448, 586, 11, 19506, 281, 646, 79, 1513, 807, 565, 13, 50934, 50934, 407, 498, 291, 645, 281, 17980, 341, 3209, 510, 11, 51112, 51112, 1949, 341, 257, 18680, 1753, 2533, 13, 51240, 51240, 400, 291, 17980, 309, 294, 565, 13, 51360, 51360, 1407, 14722, 264, 16235, 295, 264, 35795, 365, 3104, 51596, 51596, 281, 264, 9834, 11, 291, 733, 295, 362, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.2555538467738939, "compression_ratio": 1.6028708133971292, "no_speech_prob": 5.593882633547764e-06}, {"id": 2072, "seek": 638660, "start": 6386.6, "end": 6390.08, "text": " to, and with respect to the initial, you have to backprop", "tokens": [50364, 281, 11, 293, 365, 3104, 281, 264, 5883, 11, 291, 362, 281, 646, 79, 1513, 50538, 50538, 797, 807, 565, 13, 50568, 50568, 509, 362, 281, 733, 295, 1604, 264, 2302, 8310, 50686, 50686, 293, 550, 360, 646, 79, 1513, 807, 565, 13, 50836, 50836, 583, 498, 437, 291, 434, 3102, 294, 307, 445, 2539, 50996, 50996, 257, 8351, 1785, 411, 341, 11, 550, 291, 51120, 51120, 500, 380, 643, 281, 3531, 264, 21512, 13, 51240, 51240, 509, 722, 490, 512, 935, 11, 291, 41881, 281, 512, 661, 935, 11, 51584, 51584, 293, 291, 528, 281, 652, 288, 257, 8351, 1785, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.29637773981634175, "compression_ratio": 1.7130044843049328, "no_speech_prob": 1.1657461072900333e-05}, {"id": 2073, "seek": 638660, "start": 6390.08, "end": 6390.68, "text": " again through time.", "tokens": [50364, 281, 11, 293, 365, 3104, 281, 264, 5883, 11, 291, 362, 281, 646, 79, 1513, 50538, 50538, 797, 807, 565, 13, 50568, 50568, 509, 362, 281, 733, 295, 1604, 264, 2302, 8310, 50686, 50686, 293, 550, 360, 646, 79, 1513, 807, 565, 13, 50836, 50836, 583, 498, 437, 291, 434, 3102, 294, 307, 445, 2539, 50996, 50996, 257, 8351, 1785, 411, 341, 11, 550, 291, 51120, 51120, 500, 380, 643, 281, 3531, 264, 21512, 13, 51240, 51240, 509, 722, 490, 512, 935, 11, 291, 41881, 281, 512, 661, 935, 11, 51584, 51584, 293, 291, 528, 281, 652, 288, 257, 8351, 1785, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.29637773981634175, "compression_ratio": 1.7130044843049328, "no_speech_prob": 1.1657461072900333e-05}, {"id": 2074, "seek": 638660, "start": 6390.68, "end": 6393.04, "text": " You have to kind of remember the entire sequence", "tokens": [50364, 281, 11, 293, 365, 3104, 281, 264, 5883, 11, 291, 362, 281, 646, 79, 1513, 50538, 50538, 797, 807, 565, 13, 50568, 50568, 509, 362, 281, 733, 295, 1604, 264, 2302, 8310, 50686, 50686, 293, 550, 360, 646, 79, 1513, 807, 565, 13, 50836, 50836, 583, 498, 437, 291, 434, 3102, 294, 307, 445, 2539, 50996, 50996, 257, 8351, 1785, 411, 341, 11, 550, 291, 51120, 51120, 500, 380, 643, 281, 3531, 264, 21512, 13, 51240, 51240, 509, 722, 490, 512, 935, 11, 291, 41881, 281, 512, 661, 935, 11, 51584, 51584, 293, 291, 528, 281, 652, 288, 257, 8351, 1785, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.29637773981634175, "compression_ratio": 1.7130044843049328, "no_speech_prob": 1.1657461072900333e-05}, {"id": 2075, "seek": 638660, "start": 6393.04, "end": 6396.04, "text": " and then do backprop through time.", "tokens": [50364, 281, 11, 293, 365, 3104, 281, 264, 5883, 11, 291, 362, 281, 646, 79, 1513, 50538, 50538, 797, 807, 565, 13, 50568, 50568, 509, 362, 281, 733, 295, 1604, 264, 2302, 8310, 50686, 50686, 293, 550, 360, 646, 79, 1513, 807, 565, 13, 50836, 50836, 583, 498, 437, 291, 434, 3102, 294, 307, 445, 2539, 50996, 50996, 257, 8351, 1785, 411, 341, 11, 550, 291, 51120, 51120, 500, 380, 643, 281, 3531, 264, 21512, 13, 51240, 51240, 509, 722, 490, 512, 935, 11, 291, 41881, 281, 512, 661, 935, 11, 51584, 51584, 293, 291, 528, 281, 652, 288, 257, 8351, 1785, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.29637773981634175, "compression_ratio": 1.7130044843049328, "no_speech_prob": 1.1657461072900333e-05}, {"id": 2076, "seek": 638660, "start": 6396.04, "end": 6399.240000000001, "text": " But if what you're interested in is just learning", "tokens": [50364, 281, 11, 293, 365, 3104, 281, 264, 5883, 11, 291, 362, 281, 646, 79, 1513, 50538, 50538, 797, 807, 565, 13, 50568, 50568, 509, 362, 281, 733, 295, 1604, 264, 2302, 8310, 50686, 50686, 293, 550, 360, 646, 79, 1513, 807, 565, 13, 50836, 50836, 583, 498, 437, 291, 434, 3102, 294, 307, 445, 2539, 50996, 50996, 257, 8351, 1785, 411, 341, 11, 550, 291, 51120, 51120, 500, 380, 643, 281, 3531, 264, 21512, 13, 51240, 51240, 509, 722, 490, 512, 935, 11, 291, 41881, 281, 512, 661, 935, 11, 51584, 51584, 293, 291, 528, 281, 652, 288, 257, 8351, 1785, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.29637773981634175, "compression_ratio": 1.7130044843049328, "no_speech_prob": 1.1657461072900333e-05}, {"id": 2077, "seek": 638660, "start": 6399.240000000001, "end": 6401.72, "text": " a stable state like this, then you", "tokens": [50364, 281, 11, 293, 365, 3104, 281, 264, 5883, 11, 291, 362, 281, 646, 79, 1513, 50538, 50538, 797, 807, 565, 13, 50568, 50568, 509, 362, 281, 733, 295, 1604, 264, 2302, 8310, 50686, 50686, 293, 550, 360, 646, 79, 1513, 807, 565, 13, 50836, 50836, 583, 498, 437, 291, 434, 3102, 294, 307, 445, 2539, 50996, 50996, 257, 8351, 1785, 411, 341, 11, 550, 291, 51120, 51120, 500, 380, 643, 281, 3531, 264, 21512, 13, 51240, 51240, 509, 722, 490, 512, 935, 11, 291, 41881, 281, 512, 661, 935, 11, 51584, 51584, 293, 291, 528, 281, 652, 288, 257, 8351, 1785, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.29637773981634175, "compression_ratio": 1.7130044843049328, "no_speech_prob": 1.1657461072900333e-05}, {"id": 2078, "seek": 638660, "start": 6401.72, "end": 6404.120000000001, "text": " don't need to store the trajectory.", "tokens": [50364, 281, 11, 293, 365, 3104, 281, 264, 5883, 11, 291, 362, 281, 646, 79, 1513, 50538, 50538, 797, 807, 565, 13, 50568, 50568, 509, 362, 281, 733, 295, 1604, 264, 2302, 8310, 50686, 50686, 293, 550, 360, 646, 79, 1513, 807, 565, 13, 50836, 50836, 583, 498, 437, 291, 434, 3102, 294, 307, 445, 2539, 50996, 50996, 257, 8351, 1785, 411, 341, 11, 550, 291, 51120, 51120, 500, 380, 643, 281, 3531, 264, 21512, 13, 51240, 51240, 509, 722, 490, 512, 935, 11, 291, 41881, 281, 512, 661, 935, 11, 51584, 51584, 293, 291, 528, 281, 652, 288, 257, 8351, 1785, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.29637773981634175, "compression_ratio": 1.7130044843049328, "no_speech_prob": 1.1657461072900333e-05}, {"id": 2079, "seek": 638660, "start": 6404.120000000001, "end": 6411.0, "text": " You start from some point, you converge to some other point,", "tokens": [50364, 281, 11, 293, 365, 3104, 281, 264, 5883, 11, 291, 362, 281, 646, 79, 1513, 50538, 50538, 797, 807, 565, 13, 50568, 50568, 509, 362, 281, 733, 295, 1604, 264, 2302, 8310, 50686, 50686, 293, 550, 360, 646, 79, 1513, 807, 565, 13, 50836, 50836, 583, 498, 437, 291, 434, 3102, 294, 307, 445, 2539, 50996, 50996, 257, 8351, 1785, 411, 341, 11, 550, 291, 51120, 51120, 500, 380, 643, 281, 3531, 264, 21512, 13, 51240, 51240, 509, 722, 490, 512, 935, 11, 291, 41881, 281, 512, 661, 935, 11, 51584, 51584, 293, 291, 528, 281, 652, 288, 257, 8351, 1785, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.29637773981634175, "compression_ratio": 1.7130044843049328, "no_speech_prob": 1.1657461072900333e-05}, {"id": 2080, "seek": 638660, "start": 6411.0, "end": 6414.52, "text": " and you want to make y a stable state.", "tokens": [50364, 281, 11, 293, 365, 3104, 281, 264, 5883, 11, 291, 362, 281, 646, 79, 1513, 50538, 50538, 797, 807, 565, 13, 50568, 50568, 509, 362, 281, 733, 295, 1604, 264, 2302, 8310, 50686, 50686, 293, 550, 360, 646, 79, 1513, 807, 565, 13, 50836, 50836, 583, 498, 437, 291, 434, 3102, 294, 307, 445, 2539, 50996, 50996, 257, 8351, 1785, 411, 341, 11, 550, 291, 51120, 51120, 500, 380, 643, 281, 3531, 264, 21512, 13, 51240, 51240, 509, 722, 490, 512, 935, 11, 291, 41881, 281, 512, 661, 935, 11, 51584, 51584, 293, 291, 528, 281, 652, 288, 257, 8351, 1785, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.29637773981634175, "compression_ratio": 1.7130044843049328, "no_speech_prob": 1.1657461072900333e-05}, {"id": 2081, "seek": 641452, "start": 6414.52, "end": 6418.68, "text": " What you just need to do is ensure that this is true.", "tokens": [50364, 708, 291, 445, 643, 281, 360, 307, 5586, 300, 341, 307, 2074, 13, 50572, 50724, 400, 264, 636, 291, 393, 360, 341, 307, 1936, 50932, 50932, 538, 46608, 428, 2063, 11, 597, 576, 312, 746, 51058, 51058, 411, 264, 2026, 11, 264, 3732, 2026, 295, 283, 295, 288, 11, 261, 13, 51250, 51250, 583, 264, 935, 307, 300, 291, 500, 380, 643, 51358, 51358, 281, 1604, 264, 2302, 21512, 13, 51468, 51468, 440, 16235, 365, 3104, 281, 264, 17443, 51568, 51568, 307, 264, 912, 382, 264, 16235, 365, 3104, 281, 264, 565, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.42898622493153993, "compression_ratio": 1.6952380952380952, "no_speech_prob": 1.3412447515293024e-05}, {"id": 2082, "seek": 641452, "start": 6421.72, "end": 6425.88, "text": " And the way you can do this is basically", "tokens": [50364, 708, 291, 445, 643, 281, 360, 307, 5586, 300, 341, 307, 2074, 13, 50572, 50724, 400, 264, 636, 291, 393, 360, 341, 307, 1936, 50932, 50932, 538, 46608, 428, 2063, 11, 597, 576, 312, 746, 51058, 51058, 411, 264, 2026, 11, 264, 3732, 2026, 295, 283, 295, 288, 11, 261, 13, 51250, 51250, 583, 264, 935, 307, 300, 291, 500, 380, 643, 51358, 51358, 281, 1604, 264, 2302, 21512, 13, 51468, 51468, 440, 16235, 365, 3104, 281, 264, 17443, 51568, 51568, 307, 264, 912, 382, 264, 16235, 365, 3104, 281, 264, 565, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.42898622493153993, "compression_ratio": 1.6952380952380952, "no_speech_prob": 1.3412447515293024e-05}, {"id": 2083, "seek": 641452, "start": 6425.88, "end": 6428.400000000001, "text": " by minimizing your cost, which would be something", "tokens": [50364, 708, 291, 445, 643, 281, 360, 307, 5586, 300, 341, 307, 2074, 13, 50572, 50724, 400, 264, 636, 291, 393, 360, 341, 307, 1936, 50932, 50932, 538, 46608, 428, 2063, 11, 597, 576, 312, 746, 51058, 51058, 411, 264, 2026, 11, 264, 3732, 2026, 295, 283, 295, 288, 11, 261, 13, 51250, 51250, 583, 264, 935, 307, 300, 291, 500, 380, 643, 51358, 51358, 281, 1604, 264, 2302, 21512, 13, 51468, 51468, 440, 16235, 365, 3104, 281, 264, 17443, 51568, 51568, 307, 264, 912, 382, 264, 16235, 365, 3104, 281, 264, 565, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.42898622493153993, "compression_ratio": 1.6952380952380952, "no_speech_prob": 1.3412447515293024e-05}, {"id": 2084, "seek": 641452, "start": 6428.400000000001, "end": 6432.240000000001, "text": " like the norm, the square norm of f of y, w.", "tokens": [50364, 708, 291, 445, 643, 281, 360, 307, 5586, 300, 341, 307, 2074, 13, 50572, 50724, 400, 264, 636, 291, 393, 360, 341, 307, 1936, 50932, 50932, 538, 46608, 428, 2063, 11, 597, 576, 312, 746, 51058, 51058, 411, 264, 2026, 11, 264, 3732, 2026, 295, 283, 295, 288, 11, 261, 13, 51250, 51250, 583, 264, 935, 307, 300, 291, 500, 380, 643, 51358, 51358, 281, 1604, 264, 2302, 21512, 13, 51468, 51468, 440, 16235, 365, 3104, 281, 264, 17443, 51568, 51568, 307, 264, 912, 382, 264, 16235, 365, 3104, 281, 264, 565, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.42898622493153993, "compression_ratio": 1.6952380952380952, "no_speech_prob": 1.3412447515293024e-05}, {"id": 2085, "seek": 641452, "start": 6432.240000000001, "end": 6434.400000000001, "text": " But the point is that you don't need", "tokens": [50364, 708, 291, 445, 643, 281, 360, 307, 5586, 300, 341, 307, 2074, 13, 50572, 50724, 400, 264, 636, 291, 393, 360, 341, 307, 1936, 50932, 50932, 538, 46608, 428, 2063, 11, 597, 576, 312, 746, 51058, 51058, 411, 264, 2026, 11, 264, 3732, 2026, 295, 283, 295, 288, 11, 261, 13, 51250, 51250, 583, 264, 935, 307, 300, 291, 500, 380, 643, 51358, 51358, 281, 1604, 264, 2302, 21512, 13, 51468, 51468, 440, 16235, 365, 3104, 281, 264, 17443, 51568, 51568, 307, 264, 912, 382, 264, 16235, 365, 3104, 281, 264, 565, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.42898622493153993, "compression_ratio": 1.6952380952380952, "no_speech_prob": 1.3412447515293024e-05}, {"id": 2086, "seek": 641452, "start": 6434.400000000001, "end": 6436.6, "text": " to remember the entire trajectory.", "tokens": [50364, 708, 291, 445, 643, 281, 360, 307, 5586, 300, 341, 307, 2074, 13, 50572, 50724, 400, 264, 636, 291, 393, 360, 341, 307, 1936, 50932, 50932, 538, 46608, 428, 2063, 11, 597, 576, 312, 746, 51058, 51058, 411, 264, 2026, 11, 264, 3732, 2026, 295, 283, 295, 288, 11, 261, 13, 51250, 51250, 583, 264, 935, 307, 300, 291, 500, 380, 643, 51358, 51358, 281, 1604, 264, 2302, 21512, 13, 51468, 51468, 440, 16235, 365, 3104, 281, 264, 17443, 51568, 51568, 307, 264, 912, 382, 264, 16235, 365, 3104, 281, 264, 565, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.42898622493153993, "compression_ratio": 1.6952380952380952, "no_speech_prob": 1.3412447515293024e-05}, {"id": 2087, "seek": 641452, "start": 6436.6, "end": 6438.6, "text": " The gradient with respect to the weights", "tokens": [50364, 708, 291, 445, 643, 281, 360, 307, 5586, 300, 341, 307, 2074, 13, 50572, 50724, 400, 264, 636, 291, 393, 360, 341, 307, 1936, 50932, 50932, 538, 46608, 428, 2063, 11, 597, 576, 312, 746, 51058, 51058, 411, 264, 2026, 11, 264, 3732, 2026, 295, 283, 295, 288, 11, 261, 13, 51250, 51250, 583, 264, 935, 307, 300, 291, 500, 380, 643, 51358, 51358, 281, 1604, 264, 2302, 21512, 13, 51468, 51468, 440, 16235, 365, 3104, 281, 264, 17443, 51568, 51568, 307, 264, 912, 382, 264, 16235, 365, 3104, 281, 264, 565, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.42898622493153993, "compression_ratio": 1.6952380952380952, "no_speech_prob": 1.3412447515293024e-05}, {"id": 2088, "seek": 641452, "start": 6438.6, "end": 6442.4400000000005, "text": " is the same as the gradient with respect to the time.", "tokens": [50364, 708, 291, 445, 643, 281, 360, 307, 5586, 300, 341, 307, 2074, 13, 50572, 50724, 400, 264, 636, 291, 393, 360, 341, 307, 1936, 50932, 50932, 538, 46608, 428, 2063, 11, 597, 576, 312, 746, 51058, 51058, 411, 264, 2026, 11, 264, 3732, 2026, 295, 283, 295, 288, 11, 261, 13, 51250, 51250, 583, 264, 935, 307, 300, 291, 500, 380, 643, 51358, 51358, 281, 1604, 264, 2302, 21512, 13, 51468, 51468, 440, 16235, 365, 3104, 281, 264, 17443, 51568, 51568, 307, 264, 912, 382, 264, 16235, 365, 3104, 281, 264, 565, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.42898622493153993, "compression_ratio": 1.6952380952380952, "no_speech_prob": 1.3412447515293024e-05}, {"id": 2089, "seek": 644244, "start": 6442.44, "end": 6445.599999999999, "text": " The gradient with respect to the weights", "tokens": [50364, 440, 16235, 365, 3104, 281, 264, 17443, 50522, 50522, 393, 312, 14879, 538, 2614, 257, 588, 2531, 2010, 50660, 50660, 295, 15756, 5367, 12204, 294, 565, 13, 50752, 50972, 400, 286, 478, 2597, 286, 478, 406, 516, 281, 312, 51032, 51032, 1075, 281, 352, 666, 4365, 295, 300, 13, 51118, 51118, 286, 393, 2864, 291, 281, 257, 3035, 13, 51242, 51242, 407, 341, 307, 364, 19338, 9135, 36, 3035, 11, 597, 1177, 380, 534, 51348, 51348, 2152, 300, 13, 51374, 51374, 583, 456, 307, 364, 3071, 3035, 295, 3892, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.20788231716361097, "compression_ratio": 1.4954545454545454, "no_speech_prob": 5.506709385372233e-06}, {"id": 2090, "seek": 644244, "start": 6445.599999999999, "end": 6448.36, "text": " can be obtained by running a very similar type", "tokens": [50364, 440, 16235, 365, 3104, 281, 264, 17443, 50522, 50522, 393, 312, 14879, 538, 2614, 257, 588, 2531, 2010, 50660, 50660, 295, 15756, 5367, 12204, 294, 565, 13, 50752, 50972, 400, 286, 478, 2597, 286, 478, 406, 516, 281, 312, 51032, 51032, 1075, 281, 352, 666, 4365, 295, 300, 13, 51118, 51118, 286, 393, 2864, 291, 281, 257, 3035, 13, 51242, 51242, 407, 341, 307, 364, 19338, 9135, 36, 3035, 11, 597, 1177, 380, 534, 51348, 51348, 2152, 300, 13, 51374, 51374, 583, 456, 307, 364, 3071, 3035, 295, 3892, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.20788231716361097, "compression_ratio": 1.4954545454545454, "no_speech_prob": 5.506709385372233e-06}, {"id": 2091, "seek": 644244, "start": 6448.36, "end": 6450.2, "text": " of differential equation backwards in time.", "tokens": [50364, 440, 16235, 365, 3104, 281, 264, 17443, 50522, 50522, 393, 312, 14879, 538, 2614, 257, 588, 2531, 2010, 50660, 50660, 295, 15756, 5367, 12204, 294, 565, 13, 50752, 50972, 400, 286, 478, 2597, 286, 478, 406, 516, 281, 312, 51032, 51032, 1075, 281, 352, 666, 4365, 295, 300, 13, 51118, 51118, 286, 393, 2864, 291, 281, 257, 3035, 13, 51242, 51242, 407, 341, 307, 364, 19338, 9135, 36, 3035, 11, 597, 1177, 380, 534, 51348, 51348, 2152, 300, 13, 51374, 51374, 583, 456, 307, 364, 3071, 3035, 295, 3892, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.20788231716361097, "compression_ratio": 1.4954545454545454, "no_speech_prob": 5.506709385372233e-06}, {"id": 2092, "seek": 644244, "start": 6454.599999999999, "end": 6455.799999999999, "text": " And I'm sorry I'm not going to be", "tokens": [50364, 440, 16235, 365, 3104, 281, 264, 17443, 50522, 50522, 393, 312, 14879, 538, 2614, 257, 588, 2531, 2010, 50660, 50660, 295, 15756, 5367, 12204, 294, 565, 13, 50752, 50972, 400, 286, 478, 2597, 286, 478, 406, 516, 281, 312, 51032, 51032, 1075, 281, 352, 666, 4365, 295, 300, 13, 51118, 51118, 286, 393, 2864, 291, 281, 257, 3035, 13, 51242, 51242, 407, 341, 307, 364, 19338, 9135, 36, 3035, 11, 597, 1177, 380, 534, 51348, 51348, 2152, 300, 13, 51374, 51374, 583, 456, 307, 364, 3071, 3035, 295, 3892, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.20788231716361097, "compression_ratio": 1.4954545454545454, "no_speech_prob": 5.506709385372233e-06}, {"id": 2093, "seek": 644244, "start": 6455.799999999999, "end": 6457.5199999999995, "text": " able to go into details of that.", "tokens": [50364, 440, 16235, 365, 3104, 281, 264, 17443, 50522, 50522, 393, 312, 14879, 538, 2614, 257, 588, 2531, 2010, 50660, 50660, 295, 15756, 5367, 12204, 294, 565, 13, 50752, 50972, 400, 286, 478, 2597, 286, 478, 406, 516, 281, 312, 51032, 51032, 1075, 281, 352, 666, 4365, 295, 300, 13, 51118, 51118, 286, 393, 2864, 291, 281, 257, 3035, 13, 51242, 51242, 407, 341, 307, 364, 19338, 9135, 36, 3035, 11, 597, 1177, 380, 534, 51348, 51348, 2152, 300, 13, 51374, 51374, 583, 456, 307, 364, 3071, 3035, 295, 3892, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.20788231716361097, "compression_ratio": 1.4954545454545454, "no_speech_prob": 5.506709385372233e-06}, {"id": 2094, "seek": 644244, "start": 6457.5199999999995, "end": 6460.0, "text": " I can refer you to a paper.", "tokens": [50364, 440, 16235, 365, 3104, 281, 264, 17443, 50522, 50522, 393, 312, 14879, 538, 2614, 257, 588, 2531, 2010, 50660, 50660, 295, 15756, 5367, 12204, 294, 565, 13, 50752, 50972, 400, 286, 478, 2597, 286, 478, 406, 516, 281, 312, 51032, 51032, 1075, 281, 352, 666, 4365, 295, 300, 13, 51118, 51118, 286, 393, 2864, 291, 281, 257, 3035, 13, 51242, 51242, 407, 341, 307, 364, 19338, 9135, 36, 3035, 11, 597, 1177, 380, 534, 51348, 51348, 2152, 300, 13, 51374, 51374, 583, 456, 307, 364, 3071, 3035, 295, 3892, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.20788231716361097, "compression_ratio": 1.4954545454545454, "no_speech_prob": 5.506709385372233e-06}, {"id": 2095, "seek": 644244, "start": 6460.0, "end": 6462.12, "text": " So this is an oral ADE paper, which doesn't really", "tokens": [50364, 440, 16235, 365, 3104, 281, 264, 17443, 50522, 50522, 393, 312, 14879, 538, 2614, 257, 588, 2531, 2010, 50660, 50660, 295, 15756, 5367, 12204, 294, 565, 13, 50752, 50972, 400, 286, 478, 2597, 286, 478, 406, 516, 281, 312, 51032, 51032, 1075, 281, 352, 666, 4365, 295, 300, 13, 51118, 51118, 286, 393, 2864, 291, 281, 257, 3035, 13, 51242, 51242, 407, 341, 307, 364, 19338, 9135, 36, 3035, 11, 597, 1177, 380, 534, 51348, 51348, 2152, 300, 13, 51374, 51374, 583, 456, 307, 364, 3071, 3035, 295, 3892, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.20788231716361097, "compression_ratio": 1.4954545454545454, "no_speech_prob": 5.506709385372233e-06}, {"id": 2096, "seek": 644244, "start": 6462.12, "end": 6462.639999999999, "text": " mention that.", "tokens": [50364, 440, 16235, 365, 3104, 281, 264, 17443, 50522, 50522, 393, 312, 14879, 538, 2614, 257, 588, 2531, 2010, 50660, 50660, 295, 15756, 5367, 12204, 294, 565, 13, 50752, 50972, 400, 286, 478, 2597, 286, 478, 406, 516, 281, 312, 51032, 51032, 1075, 281, 352, 666, 4365, 295, 300, 13, 51118, 51118, 286, 393, 2864, 291, 281, 257, 3035, 13, 51242, 51242, 407, 341, 307, 364, 19338, 9135, 36, 3035, 11, 597, 1177, 380, 534, 51348, 51348, 2152, 300, 13, 51374, 51374, 583, 456, 307, 364, 3071, 3035, 295, 3892, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.20788231716361097, "compression_ratio": 1.4954545454545454, "no_speech_prob": 5.506709385372233e-06}, {"id": 2097, "seek": 644244, "start": 6462.639999999999, "end": 6464.44, "text": " But there is an earlier paper of mine", "tokens": [50364, 440, 16235, 365, 3104, 281, 264, 17443, 50522, 50522, 393, 312, 14879, 538, 2614, 257, 588, 2531, 2010, 50660, 50660, 295, 15756, 5367, 12204, 294, 565, 13, 50752, 50972, 400, 286, 478, 2597, 286, 478, 406, 516, 281, 312, 51032, 51032, 1075, 281, 352, 666, 4365, 295, 300, 13, 51118, 51118, 286, 393, 2864, 291, 281, 257, 3035, 13, 51242, 51242, 407, 341, 307, 364, 19338, 9135, 36, 3035, 11, 597, 1177, 380, 534, 51348, 51348, 2152, 300, 13, 51374, 51374, 583, 456, 307, 364, 3071, 3035, 295, 3892, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.20788231716361097, "compression_ratio": 1.4954545454545454, "no_speech_prob": 5.506709385372233e-06}, {"id": 2098, "seek": 646444, "start": 6464.44, "end": 6478.48, "text": " called Theoretical Framework for Backpropagation.", "tokens": [50364, 1219, 440, 26262, 804, 31628, 1902, 337, 5833, 79, 1513, 559, 399, 13, 51066, 51066, 400, 1936, 11, 309, 13948, 341, 24886, 14521, 37642, 11, 51396, 51396, 382, 731, 382, 577, 291, 3079, 309, 337, 18680, 1753, 36170, 300, 51596, 51596, 1062, 312, 1333, 295, 10957, 294, 565, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16954565048217773, "compression_ratio": 1.3263888888888888, "no_speech_prob": 1.4054545317776501e-05}, {"id": 2099, "seek": 646444, "start": 6478.48, "end": 6485.08, "text": " And basically, it explains this Lagrange formulation,", "tokens": [50364, 1219, 440, 26262, 804, 31628, 1902, 337, 5833, 79, 1513, 559, 399, 13, 51066, 51066, 400, 1936, 11, 309, 13948, 341, 24886, 14521, 37642, 11, 51396, 51396, 382, 731, 382, 577, 291, 3079, 309, 337, 18680, 1753, 36170, 300, 51596, 51596, 1062, 312, 1333, 295, 10957, 294, 565, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16954565048217773, "compression_ratio": 1.3263888888888888, "no_speech_prob": 1.4054545317776501e-05}, {"id": 2100, "seek": 646444, "start": 6485.08, "end": 6489.08, "text": " as well as how you apply it for recurrent nets that", "tokens": [50364, 1219, 440, 26262, 804, 31628, 1902, 337, 5833, 79, 1513, 559, 399, 13, 51066, 51066, 400, 1936, 11, 309, 13948, 341, 24886, 14521, 37642, 11, 51396, 51396, 382, 731, 382, 577, 291, 3079, 309, 337, 18680, 1753, 36170, 300, 51596, 51596, 1062, 312, 1333, 295, 10957, 294, 565, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16954565048217773, "compression_ratio": 1.3263888888888888, "no_speech_prob": 1.4054545317776501e-05}, {"id": 2101, "seek": 646444, "start": 6489.08, "end": 6492.36, "text": " might be sort of continuous in time", "tokens": [50364, 1219, 440, 26262, 804, 31628, 1902, 337, 5833, 79, 1513, 559, 399, 13, 51066, 51066, 400, 1936, 11, 309, 13948, 341, 24886, 14521, 37642, 11, 51396, 51396, 382, 731, 382, 577, 291, 3079, 309, 337, 18680, 1753, 36170, 300, 51596, 51596, 1062, 312, 1333, 295, 10957, 294, 565, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16954565048217773, "compression_ratio": 1.3263888888888888, "no_speech_prob": 1.4054545317776501e-05}, {"id": 2102, "seek": 649236, "start": 6492.36, "end": 6496.36, "text": " and that you want to train to go to particular fixed points.", "tokens": [50364, 293, 300, 291, 528, 281, 3847, 281, 352, 281, 1729, 6806, 2793, 13, 50564, 50564, 639, 307, 257, 3035, 490, 27816, 13, 50658, 50658, 467, 311, 406, 5162, 13, 50780, 50780, 509, 603, 915, 309, 322, 452, 3670, 3028, 11, 760, 50906, 50906, 322, 264, 2767, 295, 264, 19953, 3028, 13, 51010, 51010, 583, 286, 500, 380, 528, 281, 352, 666, 264, 4365, 295, 341, 13, 51100, 51338, 400, 456, 307, 264, 7840, 42434, 1507, 13, 51456, 51456, 7840, 42434, 1507, 11, 2086, 13, 51570, 51570, 3432, 366, 920, 510, 13, 51616, 51616, 286, 500, 380, 458, 13, 51644, 51644, 814, 366, 9929, 309, 13, 51682, 51682, 22744, 926, 13, 51722, 51722, 509, 500, 380, 362, 281, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.23242814423608, "compression_ratio": 1.5648535564853556, "no_speech_prob": 1.3615436728287023e-05}, {"id": 2103, "seek": 649236, "start": 6496.36, "end": 6498.24, "text": " This is a paper from 1988.", "tokens": [50364, 293, 300, 291, 528, 281, 3847, 281, 352, 281, 1729, 6806, 2793, 13, 50564, 50564, 639, 307, 257, 3035, 490, 27816, 13, 50658, 50658, 467, 311, 406, 5162, 13, 50780, 50780, 509, 603, 915, 309, 322, 452, 3670, 3028, 11, 760, 50906, 50906, 322, 264, 2767, 295, 264, 19953, 3028, 13, 51010, 51010, 583, 286, 500, 380, 528, 281, 352, 666, 264, 4365, 295, 341, 13, 51100, 51338, 400, 456, 307, 264, 7840, 42434, 1507, 13, 51456, 51456, 7840, 42434, 1507, 11, 2086, 13, 51570, 51570, 3432, 366, 920, 510, 13, 51616, 51616, 286, 500, 380, 458, 13, 51644, 51644, 814, 366, 9929, 309, 13, 51682, 51682, 22744, 926, 13, 51722, 51722, 509, 500, 380, 362, 281, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.23242814423608, "compression_ratio": 1.5648535564853556, "no_speech_prob": 1.3615436728287023e-05}, {"id": 2104, "seek": 649236, "start": 6498.24, "end": 6500.679999999999, "text": " It's not recent.", "tokens": [50364, 293, 300, 291, 528, 281, 3847, 281, 352, 281, 1729, 6806, 2793, 13, 50564, 50564, 639, 307, 257, 3035, 490, 27816, 13, 50658, 50658, 467, 311, 406, 5162, 13, 50780, 50780, 509, 603, 915, 309, 322, 452, 3670, 3028, 11, 760, 50906, 50906, 322, 264, 2767, 295, 264, 19953, 3028, 13, 51010, 51010, 583, 286, 500, 380, 528, 281, 352, 666, 264, 4365, 295, 341, 13, 51100, 51338, 400, 456, 307, 264, 7840, 42434, 1507, 13, 51456, 51456, 7840, 42434, 1507, 11, 2086, 13, 51570, 51570, 3432, 366, 920, 510, 13, 51616, 51616, 286, 500, 380, 458, 13, 51644, 51644, 814, 366, 9929, 309, 13, 51682, 51682, 22744, 926, 13, 51722, 51722, 509, 500, 380, 362, 281, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.23242814423608, "compression_ratio": 1.5648535564853556, "no_speech_prob": 1.3615436728287023e-05}, {"id": 2105, "seek": 649236, "start": 6500.679999999999, "end": 6503.2, "text": " You'll find it on my web page, down", "tokens": [50364, 293, 300, 291, 528, 281, 3847, 281, 352, 281, 1729, 6806, 2793, 13, 50564, 50564, 639, 307, 257, 3035, 490, 27816, 13, 50658, 50658, 467, 311, 406, 5162, 13, 50780, 50780, 509, 603, 915, 309, 322, 452, 3670, 3028, 11, 760, 50906, 50906, 322, 264, 2767, 295, 264, 19953, 3028, 13, 51010, 51010, 583, 286, 500, 380, 528, 281, 352, 666, 264, 4365, 295, 341, 13, 51100, 51338, 400, 456, 307, 264, 7840, 42434, 1507, 13, 51456, 51456, 7840, 42434, 1507, 11, 2086, 13, 51570, 51570, 3432, 366, 920, 510, 13, 51616, 51616, 286, 500, 380, 458, 13, 51644, 51644, 814, 366, 9929, 309, 13, 51682, 51682, 22744, 926, 13, 51722, 51722, 509, 500, 380, 362, 281, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.23242814423608, "compression_ratio": 1.5648535564853556, "no_speech_prob": 1.3615436728287023e-05}, {"id": 2106, "seek": 649236, "start": 6503.2, "end": 6505.28, "text": " on the bottom of the publication page.", "tokens": [50364, 293, 300, 291, 528, 281, 3847, 281, 352, 281, 1729, 6806, 2793, 13, 50564, 50564, 639, 307, 257, 3035, 490, 27816, 13, 50658, 50658, 467, 311, 406, 5162, 13, 50780, 50780, 509, 603, 915, 309, 322, 452, 3670, 3028, 11, 760, 50906, 50906, 322, 264, 2767, 295, 264, 19953, 3028, 13, 51010, 51010, 583, 286, 500, 380, 528, 281, 352, 666, 264, 4365, 295, 341, 13, 51100, 51338, 400, 456, 307, 264, 7840, 42434, 1507, 13, 51456, 51456, 7840, 42434, 1507, 11, 2086, 13, 51570, 51570, 3432, 366, 920, 510, 13, 51616, 51616, 286, 500, 380, 458, 13, 51644, 51644, 814, 366, 9929, 309, 13, 51682, 51682, 22744, 926, 13, 51722, 51722, 509, 500, 380, 362, 281, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.23242814423608, "compression_ratio": 1.5648535564853556, "no_speech_prob": 1.3615436728287023e-05}, {"id": 2107, "seek": 649236, "start": 6505.28, "end": 6507.08, "text": " But I don't want to go into the details of this.", "tokens": [50364, 293, 300, 291, 528, 281, 3847, 281, 352, 281, 1729, 6806, 2793, 13, 50564, 50564, 639, 307, 257, 3035, 490, 27816, 13, 50658, 50658, 467, 311, 406, 5162, 13, 50780, 50780, 509, 603, 915, 309, 322, 452, 3670, 3028, 11, 760, 50906, 50906, 322, 264, 2767, 295, 264, 19953, 3028, 13, 51010, 51010, 583, 286, 500, 380, 528, 281, 352, 666, 264, 4365, 295, 341, 13, 51100, 51338, 400, 456, 307, 264, 7840, 42434, 1507, 13, 51456, 51456, 7840, 42434, 1507, 11, 2086, 13, 51570, 51570, 3432, 366, 920, 510, 13, 51616, 51616, 286, 500, 380, 458, 13, 51644, 51644, 814, 366, 9929, 309, 13, 51682, 51682, 22744, 926, 13, 51722, 51722, 509, 500, 380, 362, 281, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.23242814423608, "compression_ratio": 1.5648535564853556, "no_speech_prob": 1.3615436728287023e-05}, {"id": 2108, "seek": 649236, "start": 6511.839999999999, "end": 6514.2, "text": " And there is the Bayesian stuff.", "tokens": [50364, 293, 300, 291, 528, 281, 3847, 281, 352, 281, 1729, 6806, 2793, 13, 50564, 50564, 639, 307, 257, 3035, 490, 27816, 13, 50658, 50658, 467, 311, 406, 5162, 13, 50780, 50780, 509, 603, 915, 309, 322, 452, 3670, 3028, 11, 760, 50906, 50906, 322, 264, 2767, 295, 264, 19953, 3028, 13, 51010, 51010, 583, 286, 500, 380, 528, 281, 352, 666, 264, 4365, 295, 341, 13, 51100, 51338, 400, 456, 307, 264, 7840, 42434, 1507, 13, 51456, 51456, 7840, 42434, 1507, 11, 2086, 13, 51570, 51570, 3432, 366, 920, 510, 13, 51616, 51616, 286, 500, 380, 458, 13, 51644, 51644, 814, 366, 9929, 309, 13, 51682, 51682, 22744, 926, 13, 51722, 51722, 509, 500, 380, 362, 281, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.23242814423608, "compression_ratio": 1.5648535564853556, "no_speech_prob": 1.3615436728287023e-05}, {"id": 2109, "seek": 649236, "start": 6514.2, "end": 6516.48, "text": " Bayesian stuff, yes.", "tokens": [50364, 293, 300, 291, 528, 281, 3847, 281, 352, 281, 1729, 6806, 2793, 13, 50564, 50564, 639, 307, 257, 3035, 490, 27816, 13, 50658, 50658, 467, 311, 406, 5162, 13, 50780, 50780, 509, 603, 915, 309, 322, 452, 3670, 3028, 11, 760, 50906, 50906, 322, 264, 2767, 295, 264, 19953, 3028, 13, 51010, 51010, 583, 286, 500, 380, 528, 281, 352, 666, 264, 4365, 295, 341, 13, 51100, 51338, 400, 456, 307, 264, 7840, 42434, 1507, 13, 51456, 51456, 7840, 42434, 1507, 11, 2086, 13, 51570, 51570, 3432, 366, 920, 510, 13, 51616, 51616, 286, 500, 380, 458, 13, 51644, 51644, 814, 366, 9929, 309, 13, 51682, 51682, 22744, 926, 13, 51722, 51722, 509, 500, 380, 362, 281, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.23242814423608, "compression_ratio": 1.5648535564853556, "no_speech_prob": 1.3615436728287023e-05}, {"id": 2110, "seek": 649236, "start": 6516.48, "end": 6517.4, "text": " People are still here.", "tokens": [50364, 293, 300, 291, 528, 281, 3847, 281, 352, 281, 1729, 6806, 2793, 13, 50564, 50564, 639, 307, 257, 3035, 490, 27816, 13, 50658, 50658, 467, 311, 406, 5162, 13, 50780, 50780, 509, 603, 915, 309, 322, 452, 3670, 3028, 11, 760, 50906, 50906, 322, 264, 2767, 295, 264, 19953, 3028, 13, 51010, 51010, 583, 286, 500, 380, 528, 281, 352, 666, 264, 4365, 295, 341, 13, 51100, 51338, 400, 456, 307, 264, 7840, 42434, 1507, 13, 51456, 51456, 7840, 42434, 1507, 11, 2086, 13, 51570, 51570, 3432, 366, 920, 510, 13, 51616, 51616, 286, 500, 380, 458, 13, 51644, 51644, 814, 366, 9929, 309, 13, 51682, 51682, 22744, 926, 13, 51722, 51722, 509, 500, 380, 362, 281, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.23242814423608, "compression_ratio": 1.5648535564853556, "no_speech_prob": 1.3615436728287023e-05}, {"id": 2111, "seek": 649236, "start": 6517.4, "end": 6517.96, "text": " I don't know.", "tokens": [50364, 293, 300, 291, 528, 281, 3847, 281, 352, 281, 1729, 6806, 2793, 13, 50564, 50564, 639, 307, 257, 3035, 490, 27816, 13, 50658, 50658, 467, 311, 406, 5162, 13, 50780, 50780, 509, 603, 915, 309, 322, 452, 3670, 3028, 11, 760, 50906, 50906, 322, 264, 2767, 295, 264, 19953, 3028, 13, 51010, 51010, 583, 286, 500, 380, 528, 281, 352, 666, 264, 4365, 295, 341, 13, 51100, 51338, 400, 456, 307, 264, 7840, 42434, 1507, 13, 51456, 51456, 7840, 42434, 1507, 11, 2086, 13, 51570, 51570, 3432, 366, 920, 510, 13, 51616, 51616, 286, 500, 380, 458, 13, 51644, 51644, 814, 366, 9929, 309, 13, 51682, 51682, 22744, 926, 13, 51722, 51722, 509, 500, 380, 362, 281, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.23242814423608, "compression_ratio": 1.5648535564853556, "no_speech_prob": 1.3615436728287023e-05}, {"id": 2112, "seek": 649236, "start": 6517.96, "end": 6518.719999999999, "text": " They are enjoying it.", "tokens": [50364, 293, 300, 291, 528, 281, 3847, 281, 352, 281, 1729, 6806, 2793, 13, 50564, 50564, 639, 307, 257, 3035, 490, 27816, 13, 50658, 50658, 467, 311, 406, 5162, 13, 50780, 50780, 509, 603, 915, 309, 322, 452, 3670, 3028, 11, 760, 50906, 50906, 322, 264, 2767, 295, 264, 19953, 3028, 13, 51010, 51010, 583, 286, 500, 380, 528, 281, 352, 666, 264, 4365, 295, 341, 13, 51100, 51338, 400, 456, 307, 264, 7840, 42434, 1507, 13, 51456, 51456, 7840, 42434, 1507, 11, 2086, 13, 51570, 51570, 3432, 366, 920, 510, 13, 51616, 51616, 286, 500, 380, 458, 13, 51644, 51644, 814, 366, 9929, 309, 13, 51682, 51682, 22744, 926, 13, 51722, 51722, 509, 500, 380, 362, 281, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.23242814423608, "compression_ratio": 1.5648535564853556, "no_speech_prob": 1.3615436728287023e-05}, {"id": 2113, "seek": 649236, "start": 6518.719999999999, "end": 6519.5199999999995, "text": " Stick around.", "tokens": [50364, 293, 300, 291, 528, 281, 3847, 281, 352, 281, 1729, 6806, 2793, 13, 50564, 50564, 639, 307, 257, 3035, 490, 27816, 13, 50658, 50658, 467, 311, 406, 5162, 13, 50780, 50780, 509, 603, 915, 309, 322, 452, 3670, 3028, 11, 760, 50906, 50906, 322, 264, 2767, 295, 264, 19953, 3028, 13, 51010, 51010, 583, 286, 500, 380, 528, 281, 352, 666, 264, 4365, 295, 341, 13, 51100, 51338, 400, 456, 307, 264, 7840, 42434, 1507, 13, 51456, 51456, 7840, 42434, 1507, 11, 2086, 13, 51570, 51570, 3432, 366, 920, 510, 13, 51616, 51616, 286, 500, 380, 458, 13, 51644, 51644, 814, 366, 9929, 309, 13, 51682, 51682, 22744, 926, 13, 51722, 51722, 509, 500, 380, 362, 281, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.23242814423608, "compression_ratio": 1.5648535564853556, "no_speech_prob": 1.3615436728287023e-05}, {"id": 2114, "seek": 649236, "start": 6519.5199999999995, "end": 6520.28, "text": " You don't have to.", "tokens": [50364, 293, 300, 291, 528, 281, 3847, 281, 352, 281, 1729, 6806, 2793, 13, 50564, 50564, 639, 307, 257, 3035, 490, 27816, 13, 50658, 50658, 467, 311, 406, 5162, 13, 50780, 50780, 509, 603, 915, 309, 322, 452, 3670, 3028, 11, 760, 50906, 50906, 322, 264, 2767, 295, 264, 19953, 3028, 13, 51010, 51010, 583, 286, 500, 380, 528, 281, 352, 666, 264, 4365, 295, 341, 13, 51100, 51338, 400, 456, 307, 264, 7840, 42434, 1507, 13, 51456, 51456, 7840, 42434, 1507, 11, 2086, 13, 51570, 51570, 3432, 366, 920, 510, 13, 51616, 51616, 286, 500, 380, 458, 13, 51644, 51644, 814, 366, 9929, 309, 13, 51682, 51682, 22744, 926, 13, 51722, 51722, 509, 500, 380, 362, 281, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.23242814423608, "compression_ratio": 1.5648535564853556, "no_speech_prob": 1.3615436728287023e-05}, {"id": 2115, "seek": 652028, "start": 6520.28, "end": 6522.5199999999995, "text": " I don't want to.", "tokens": [50364, 286, 500, 380, 528, 281, 13, 50476, 50476, 467, 311, 406, 264, 7840, 42434, 1507, 13, 50534, 50534, 467, 311, 544, 264, 3034, 1478, 13, 50622, 50622, 876, 11, 2597, 13, 50648, 50648, 865, 11, 291, 434, 558, 13, 50684, 50684, 286, 669, 406, 9019, 13, 50758, 50982, 407, 718, 311, 584, 286, 362, 512, 4470, 2445, 13, 51182, 51182, 400, 286, 478, 516, 281, 751, 466, 257, 4470, 11, 406, 364, 2281, 13, 51296, 51296, 583, 309, 311, 264, 912, 551, 13, 51392, 51392, 400, 452, 4470, 2445, 307, 257, 32522, 4470, 2445, 51636, 51636, 670, 257, 48994, 7006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24274876912434895, "compression_ratio": 1.5594059405940595, "no_speech_prob": 2.246967596875038e-05}, {"id": 2116, "seek": 652028, "start": 6522.5199999999995, "end": 6523.679999999999, "text": " It's not the Bayesian stuff.", "tokens": [50364, 286, 500, 380, 528, 281, 13, 50476, 50476, 467, 311, 406, 264, 7840, 42434, 1507, 13, 50534, 50534, 467, 311, 544, 264, 3034, 1478, 13, 50622, 50622, 876, 11, 2597, 13, 50648, 50648, 865, 11, 291, 434, 558, 13, 50684, 50684, 286, 669, 406, 9019, 13, 50758, 50982, 407, 718, 311, 584, 286, 362, 512, 4470, 2445, 13, 51182, 51182, 400, 286, 478, 516, 281, 751, 466, 257, 4470, 11, 406, 364, 2281, 13, 51296, 51296, 583, 309, 311, 264, 912, 551, 13, 51392, 51392, 400, 452, 4470, 2445, 307, 257, 32522, 4470, 2445, 51636, 51636, 670, 257, 48994, 7006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24274876912434895, "compression_ratio": 1.5594059405940595, "no_speech_prob": 2.246967596875038e-05}, {"id": 2117, "seek": 652028, "start": 6523.679999999999, "end": 6525.44, "text": " It's more the variational.", "tokens": [50364, 286, 500, 380, 528, 281, 13, 50476, 50476, 467, 311, 406, 264, 7840, 42434, 1507, 13, 50534, 50534, 467, 311, 544, 264, 3034, 1478, 13, 50622, 50622, 876, 11, 2597, 13, 50648, 50648, 865, 11, 291, 434, 558, 13, 50684, 50684, 286, 669, 406, 9019, 13, 50758, 50982, 407, 718, 311, 584, 286, 362, 512, 4470, 2445, 13, 51182, 51182, 400, 286, 478, 516, 281, 751, 466, 257, 4470, 11, 406, 364, 2281, 13, 51296, 51296, 583, 309, 311, 264, 912, 551, 13, 51392, 51392, 400, 452, 4470, 2445, 307, 257, 32522, 4470, 2445, 51636, 51636, 670, 257, 48994, 7006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24274876912434895, "compression_ratio": 1.5594059405940595, "no_speech_prob": 2.246967596875038e-05}, {"id": 2118, "seek": 652028, "start": 6525.44, "end": 6525.96, "text": " Oh, sorry.", "tokens": [50364, 286, 500, 380, 528, 281, 13, 50476, 50476, 467, 311, 406, 264, 7840, 42434, 1507, 13, 50534, 50534, 467, 311, 544, 264, 3034, 1478, 13, 50622, 50622, 876, 11, 2597, 13, 50648, 50648, 865, 11, 291, 434, 558, 13, 50684, 50684, 286, 669, 406, 9019, 13, 50758, 50982, 407, 718, 311, 584, 286, 362, 512, 4470, 2445, 13, 51182, 51182, 400, 286, 478, 516, 281, 751, 466, 257, 4470, 11, 406, 364, 2281, 13, 51296, 51296, 583, 309, 311, 264, 912, 551, 13, 51392, 51392, 400, 452, 4470, 2445, 307, 257, 32522, 4470, 2445, 51636, 51636, 670, 257, 48994, 7006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24274876912434895, "compression_ratio": 1.5594059405940595, "no_speech_prob": 2.246967596875038e-05}, {"id": 2119, "seek": 652028, "start": 6525.96, "end": 6526.679999999999, "text": " Yeah, you're right.", "tokens": [50364, 286, 500, 380, 528, 281, 13, 50476, 50476, 467, 311, 406, 264, 7840, 42434, 1507, 13, 50534, 50534, 467, 311, 544, 264, 3034, 1478, 13, 50622, 50622, 876, 11, 2597, 13, 50648, 50648, 865, 11, 291, 434, 558, 13, 50684, 50684, 286, 669, 406, 9019, 13, 50758, 50982, 407, 718, 311, 584, 286, 362, 512, 4470, 2445, 13, 51182, 51182, 400, 286, 478, 516, 281, 751, 466, 257, 4470, 11, 406, 364, 2281, 13, 51296, 51296, 583, 309, 311, 264, 912, 551, 13, 51392, 51392, 400, 452, 4470, 2445, 307, 257, 32522, 4470, 2445, 51636, 51636, 670, 257, 48994, 7006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24274876912434895, "compression_ratio": 1.5594059405940595, "no_speech_prob": 2.246967596875038e-05}, {"id": 2120, "seek": 652028, "start": 6526.679999999999, "end": 6528.16, "text": " I am not confused.", "tokens": [50364, 286, 500, 380, 528, 281, 13, 50476, 50476, 467, 311, 406, 264, 7840, 42434, 1507, 13, 50534, 50534, 467, 311, 544, 264, 3034, 1478, 13, 50622, 50622, 876, 11, 2597, 13, 50648, 50648, 865, 11, 291, 434, 558, 13, 50684, 50684, 286, 669, 406, 9019, 13, 50758, 50982, 407, 718, 311, 584, 286, 362, 512, 4470, 2445, 13, 51182, 51182, 400, 286, 478, 516, 281, 751, 466, 257, 4470, 11, 406, 364, 2281, 13, 51296, 51296, 583, 309, 311, 264, 912, 551, 13, 51392, 51392, 400, 452, 4470, 2445, 307, 257, 32522, 4470, 2445, 51636, 51636, 670, 257, 48994, 7006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24274876912434895, "compression_ratio": 1.5594059405940595, "no_speech_prob": 2.246967596875038e-05}, {"id": 2121, "seek": 652028, "start": 6532.639999999999, "end": 6536.639999999999, "text": " So let's say I have some loss function.", "tokens": [50364, 286, 500, 380, 528, 281, 13, 50476, 50476, 467, 311, 406, 264, 7840, 42434, 1507, 13, 50534, 50534, 467, 311, 544, 264, 3034, 1478, 13, 50622, 50622, 876, 11, 2597, 13, 50648, 50648, 865, 11, 291, 434, 558, 13, 50684, 50684, 286, 669, 406, 9019, 13, 50758, 50982, 407, 718, 311, 584, 286, 362, 512, 4470, 2445, 13, 51182, 51182, 400, 286, 478, 516, 281, 751, 466, 257, 4470, 11, 406, 364, 2281, 13, 51296, 51296, 583, 309, 311, 264, 912, 551, 13, 51392, 51392, 400, 452, 4470, 2445, 307, 257, 32522, 4470, 2445, 51636, 51636, 670, 257, 48994, 7006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24274876912434895, "compression_ratio": 1.5594059405940595, "no_speech_prob": 2.246967596875038e-05}, {"id": 2122, "seek": 652028, "start": 6536.639999999999, "end": 6538.92, "text": " And I'm going to talk about a loss, not an energy.", "tokens": [50364, 286, 500, 380, 528, 281, 13, 50476, 50476, 467, 311, 406, 264, 7840, 42434, 1507, 13, 50534, 50534, 467, 311, 544, 264, 3034, 1478, 13, 50622, 50622, 876, 11, 2597, 13, 50648, 50648, 865, 11, 291, 434, 558, 13, 50684, 50684, 286, 669, 406, 9019, 13, 50758, 50982, 407, 718, 311, 584, 286, 362, 512, 4470, 2445, 13, 51182, 51182, 400, 286, 478, 516, 281, 751, 466, 257, 4470, 11, 406, 364, 2281, 13, 51296, 51296, 583, 309, 311, 264, 912, 551, 13, 51392, 51392, 400, 452, 4470, 2445, 307, 257, 32522, 4470, 2445, 51636, 51636, 670, 257, 48994, 7006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24274876912434895, "compression_ratio": 1.5594059405940595, "no_speech_prob": 2.246967596875038e-05}, {"id": 2123, "seek": 652028, "start": 6538.92, "end": 6540.84, "text": " But it's the same thing.", "tokens": [50364, 286, 500, 380, 528, 281, 13, 50476, 50476, 467, 311, 406, 264, 7840, 42434, 1507, 13, 50534, 50534, 467, 311, 544, 264, 3034, 1478, 13, 50622, 50622, 876, 11, 2597, 13, 50648, 50648, 865, 11, 291, 434, 558, 13, 50684, 50684, 286, 669, 406, 9019, 13, 50758, 50982, 407, 718, 311, 584, 286, 362, 512, 4470, 2445, 13, 51182, 51182, 400, 286, 478, 516, 281, 751, 466, 257, 4470, 11, 406, 364, 2281, 13, 51296, 51296, 583, 309, 311, 264, 912, 551, 13, 51392, 51392, 400, 452, 4470, 2445, 307, 257, 32522, 4470, 2445, 51636, 51636, 670, 257, 48994, 7006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24274876912434895, "compression_ratio": 1.5594059405940595, "no_speech_prob": 2.246967596875038e-05}, {"id": 2124, "seek": 652028, "start": 6540.84, "end": 6545.719999999999, "text": " And my loss function is a marginalized loss function", "tokens": [50364, 286, 500, 380, 528, 281, 13, 50476, 50476, 467, 311, 406, 264, 7840, 42434, 1507, 13, 50534, 50534, 467, 311, 544, 264, 3034, 1478, 13, 50622, 50622, 876, 11, 2597, 13, 50648, 50648, 865, 11, 291, 434, 558, 13, 50684, 50684, 286, 669, 406, 9019, 13, 50758, 50982, 407, 718, 311, 584, 286, 362, 512, 4470, 2445, 13, 51182, 51182, 400, 286, 478, 516, 281, 751, 466, 257, 4470, 11, 406, 364, 2281, 13, 51296, 51296, 583, 309, 311, 264, 912, 551, 13, 51392, 51392, 400, 452, 4470, 2445, 307, 257, 32522, 4470, 2445, 51636, 51636, 670, 257, 48994, 7006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24274876912434895, "compression_ratio": 1.5594059405940595, "no_speech_prob": 2.246967596875038e-05}, {"id": 2125, "seek": 652028, "start": 6545.719999999999, "end": 6547.16, "text": " over a latent variable.", "tokens": [50364, 286, 500, 380, 528, 281, 13, 50476, 50476, 467, 311, 406, 264, 7840, 42434, 1507, 13, 50534, 50534, 467, 311, 544, 264, 3034, 1478, 13, 50622, 50622, 876, 11, 2597, 13, 50648, 50648, 865, 11, 291, 434, 558, 13, 50684, 50684, 286, 669, 406, 9019, 13, 50758, 50982, 407, 718, 311, 584, 286, 362, 512, 4470, 2445, 13, 51182, 51182, 400, 286, 478, 516, 281, 751, 466, 257, 4470, 11, 406, 364, 2281, 13, 51296, 51296, 583, 309, 311, 264, 912, 551, 13, 51392, 51392, 400, 452, 4470, 2445, 307, 257, 32522, 4470, 2445, 51636, 51636, 670, 257, 48994, 7006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.24274876912434895, "compression_ratio": 1.5594059405940595, "no_speech_prob": 2.246967596875038e-05}, {"id": 2126, "seek": 654716, "start": 6547.16, "end": 6551.16, "text": " So remember, I talked about this before.", "tokens": [50364, 407, 1604, 11, 286, 2825, 466, 341, 949, 13, 50564, 50564, 759, 291, 362, 364, 2281, 2445, 11, 283, 295, 2031, 11, 288, 11, 718, 311, 584, 11, 50940, 50940, 293, 291, 528, 281, 28446, 309, 490, 257, 544, 16429, 2281, 51182, 51182, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 11, 538, 884, 264, 10344, 6916, 51440, 51440, 295, 16885, 3319, 670, 710, 311, 13, 51574, 51574, 865, 11, 370, 264, 636, 291, 16885, 1125, 307, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.11778812873654249, "compression_ratio": 1.5310734463276836, "no_speech_prob": 2.3686789063503966e-06}, {"id": 2127, "seek": 654716, "start": 6551.16, "end": 6558.68, "text": " If you have an energy function, f of x, y, let's say,", "tokens": [50364, 407, 1604, 11, 286, 2825, 466, 341, 949, 13, 50564, 50564, 759, 291, 362, 364, 2281, 2445, 11, 283, 295, 2031, 11, 288, 11, 718, 311, 584, 11, 50940, 50940, 293, 291, 528, 281, 28446, 309, 490, 257, 544, 16429, 2281, 51182, 51182, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 11, 538, 884, 264, 10344, 6916, 51440, 51440, 295, 16885, 3319, 670, 710, 311, 13, 51574, 51574, 865, 11, 370, 264, 636, 291, 16885, 1125, 307, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.11778812873654249, "compression_ratio": 1.5310734463276836, "no_speech_prob": 2.3686789063503966e-06}, {"id": 2128, "seek": 654716, "start": 6558.68, "end": 6563.5199999999995, "text": " and you want to derive it from a more elementary energy", "tokens": [50364, 407, 1604, 11, 286, 2825, 466, 341, 949, 13, 50564, 50564, 759, 291, 362, 364, 2281, 2445, 11, 283, 295, 2031, 11, 288, 11, 718, 311, 584, 11, 50940, 50940, 293, 291, 528, 281, 28446, 309, 490, 257, 544, 16429, 2281, 51182, 51182, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 11, 538, 884, 264, 10344, 6916, 51440, 51440, 295, 16885, 3319, 670, 710, 311, 13, 51574, 51574, 865, 11, 370, 264, 636, 291, 16885, 1125, 307, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.11778812873654249, "compression_ratio": 1.5310734463276836, "no_speech_prob": 2.3686789063503966e-06}, {"id": 2129, "seek": 654716, "start": 6563.5199999999995, "end": 6568.68, "text": " function, E of x, y, z, by doing the equivalent operation", "tokens": [50364, 407, 1604, 11, 286, 2825, 466, 341, 949, 13, 50564, 50564, 759, 291, 362, 364, 2281, 2445, 11, 283, 295, 2031, 11, 288, 11, 718, 311, 584, 11, 50940, 50940, 293, 291, 528, 281, 28446, 309, 490, 257, 544, 16429, 2281, 51182, 51182, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 11, 538, 884, 264, 10344, 6916, 51440, 51440, 295, 16885, 3319, 670, 710, 311, 13, 51574, 51574, 865, 11, 370, 264, 636, 291, 16885, 1125, 307, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.11778812873654249, "compression_ratio": 1.5310734463276836, "no_speech_prob": 2.3686789063503966e-06}, {"id": 2130, "seek": 654716, "start": 6568.68, "end": 6571.36, "text": " of marginalizing over z's.", "tokens": [50364, 407, 1604, 11, 286, 2825, 466, 341, 949, 13, 50564, 50564, 759, 291, 362, 364, 2281, 2445, 11, 283, 295, 2031, 11, 288, 11, 718, 311, 584, 11, 50940, 50940, 293, 291, 528, 281, 28446, 309, 490, 257, 544, 16429, 2281, 51182, 51182, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 11, 538, 884, 264, 10344, 6916, 51440, 51440, 295, 16885, 3319, 670, 710, 311, 13, 51574, 51574, 865, 11, 370, 264, 636, 291, 16885, 1125, 307, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.11778812873654249, "compression_ratio": 1.5310734463276836, "no_speech_prob": 2.3686789063503966e-06}, {"id": 2131, "seek": 654716, "start": 6571.36, "end": 6573.76, "text": " Yeah, so the way you marginalize is", "tokens": [50364, 407, 1604, 11, 286, 2825, 466, 341, 949, 13, 50564, 50564, 759, 291, 362, 364, 2281, 2445, 11, 283, 295, 2031, 11, 288, 11, 718, 311, 584, 11, 50940, 50940, 293, 291, 528, 281, 28446, 309, 490, 257, 544, 16429, 2281, 51182, 51182, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 11, 538, 884, 264, 10344, 6916, 51440, 51440, 295, 16885, 3319, 670, 710, 311, 13, 51574, 51574, 865, 11, 370, 264, 636, 291, 16885, 1125, 307, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.11778812873654249, "compression_ratio": 1.5310734463276836, "no_speech_prob": 2.3686789063503966e-06}, {"id": 2132, "seek": 657376, "start": 6573.76, "end": 6584.0, "text": " you do minus beta e to the minus u sum over all z's.", "tokens": [50364, 291, 360, 3175, 9861, 308, 281, 264, 3175, 344, 2408, 670, 439, 710, 311, 13, 50876, 50876, 400, 291, 747, 3175, 502, 670, 9861, 3565, 13, 51092, 51092, 407, 341, 307, 264, 8513, 337, 16885, 3319, 51178, 51178, 257, 48994, 7006, 13, 51338, 51338, 400, 300, 611, 13165, 281, 4470, 6828, 13, 51520, 51520, 8541, 2445, 291, 528, 281, 16885, 1125, 51612, 51612, 670, 257, 48994, 7006, 11, 300, 311, 437, 291, 14722, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.14929788540571165, "compression_ratio": 1.6091954022988506, "no_speech_prob": 4.1572261579858605e-06}, {"id": 2133, "seek": 657376, "start": 6584.0, "end": 6588.320000000001, "text": " And you take minus 1 over beta log.", "tokens": [50364, 291, 360, 3175, 9861, 308, 281, 264, 3175, 344, 2408, 670, 439, 710, 311, 13, 50876, 50876, 400, 291, 747, 3175, 502, 670, 9861, 3565, 13, 51092, 51092, 407, 341, 307, 264, 8513, 337, 16885, 3319, 51178, 51178, 257, 48994, 7006, 13, 51338, 51338, 400, 300, 611, 13165, 281, 4470, 6828, 13, 51520, 51520, 8541, 2445, 291, 528, 281, 16885, 1125, 51612, 51612, 670, 257, 48994, 7006, 11, 300, 311, 437, 291, 14722, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.14929788540571165, "compression_ratio": 1.6091954022988506, "no_speech_prob": 4.1572261579858605e-06}, {"id": 2134, "seek": 657376, "start": 6588.320000000001, "end": 6590.04, "text": " So this is the formula for marginalizing", "tokens": [50364, 291, 360, 3175, 9861, 308, 281, 264, 3175, 344, 2408, 670, 439, 710, 311, 13, 50876, 50876, 400, 291, 747, 3175, 502, 670, 9861, 3565, 13, 51092, 51092, 407, 341, 307, 264, 8513, 337, 16885, 3319, 51178, 51178, 257, 48994, 7006, 13, 51338, 51338, 400, 300, 611, 13165, 281, 4470, 6828, 13, 51520, 51520, 8541, 2445, 291, 528, 281, 16885, 1125, 51612, 51612, 670, 257, 48994, 7006, 11, 300, 311, 437, 291, 14722, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.14929788540571165, "compression_ratio": 1.6091954022988506, "no_speech_prob": 4.1572261579858605e-06}, {"id": 2135, "seek": 657376, "start": 6590.04, "end": 6593.24, "text": " a latent variable.", "tokens": [50364, 291, 360, 3175, 9861, 308, 281, 264, 3175, 344, 2408, 670, 439, 710, 311, 13, 50876, 50876, 400, 291, 747, 3175, 502, 670, 9861, 3565, 13, 51092, 51092, 407, 341, 307, 264, 8513, 337, 16885, 3319, 51178, 51178, 257, 48994, 7006, 13, 51338, 51338, 400, 300, 611, 13165, 281, 4470, 6828, 13, 51520, 51520, 8541, 2445, 291, 528, 281, 16885, 1125, 51612, 51612, 670, 257, 48994, 7006, 11, 300, 311, 437, 291, 14722, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.14929788540571165, "compression_ratio": 1.6091954022988506, "no_speech_prob": 4.1572261579858605e-06}, {"id": 2136, "seek": 657376, "start": 6593.24, "end": 6596.88, "text": " And that also applies to loss functions.", "tokens": [50364, 291, 360, 3175, 9861, 308, 281, 264, 3175, 344, 2408, 670, 439, 710, 311, 13, 50876, 50876, 400, 291, 747, 3175, 502, 670, 9861, 3565, 13, 51092, 51092, 407, 341, 307, 264, 8513, 337, 16885, 3319, 51178, 51178, 257, 48994, 7006, 13, 51338, 51338, 400, 300, 611, 13165, 281, 4470, 6828, 13, 51520, 51520, 8541, 2445, 291, 528, 281, 16885, 1125, 51612, 51612, 670, 257, 48994, 7006, 11, 300, 311, 437, 291, 14722, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.14929788540571165, "compression_ratio": 1.6091954022988506, "no_speech_prob": 4.1572261579858605e-06}, {"id": 2137, "seek": 657376, "start": 6596.88, "end": 6598.72, "text": " Whatever function you want to marginalize", "tokens": [50364, 291, 360, 3175, 9861, 308, 281, 264, 3175, 344, 2408, 670, 439, 710, 311, 13, 50876, 50876, 400, 291, 747, 3175, 502, 670, 9861, 3565, 13, 51092, 51092, 407, 341, 307, 264, 8513, 337, 16885, 3319, 51178, 51178, 257, 48994, 7006, 13, 51338, 51338, 400, 300, 611, 13165, 281, 4470, 6828, 13, 51520, 51520, 8541, 2445, 291, 528, 281, 16885, 1125, 51612, 51612, 670, 257, 48994, 7006, 11, 300, 311, 437, 291, 14722, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.14929788540571165, "compression_ratio": 1.6091954022988506, "no_speech_prob": 4.1572261579858605e-06}, {"id": 2138, "seek": 657376, "start": 6598.72, "end": 6601.88, "text": " over a latent variable, that's what you compute.", "tokens": [50364, 291, 360, 3175, 9861, 308, 281, 264, 3175, 344, 2408, 670, 439, 710, 311, 13, 50876, 50876, 400, 291, 747, 3175, 502, 670, 9861, 3565, 13, 51092, 51092, 407, 341, 307, 264, 8513, 337, 16885, 3319, 51178, 51178, 257, 48994, 7006, 13, 51338, 51338, 400, 300, 611, 13165, 281, 4470, 6828, 13, 51520, 51520, 8541, 2445, 291, 528, 281, 16885, 1125, 51612, 51612, 670, 257, 48994, 7006, 11, 300, 311, 437, 291, 14722, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.14929788540571165, "compression_ratio": 1.6091954022988506, "no_speech_prob": 4.1572261579858605e-06}, {"id": 2139, "seek": 660188, "start": 6601.88, "end": 6606.84, "text": " So let's say you have a model with a latent variable.", "tokens": [50364, 407, 718, 311, 584, 291, 362, 257, 2316, 365, 257, 48994, 7006, 13, 50612, 50612, 400, 291, 500, 380, 458, 437, 264, 2158, 295, 264, 48994, 7006, 50736, 50736, 307, 13, 50762, 50762, 400, 291, 528, 281, 14722, 437, 307, 452, 4470, 11, 597, 50900, 50900, 576, 312, 264, 3565, 295, 512, 295, 264, 21510, 82, 50998, 50998, 295, 264, 4470, 670, 439, 4190, 295, 264, 48994, 7006, 13, 51104, 51104, 407, 286, 478, 733, 295, 16885, 3319, 670, 341, 48994, 7006, 13, 51276, 51276, 961, 311, 584, 309, 311, 257, 15090, 8399, 22660, 19866, 420, 746, 13, 51430, 51430, 286, 362, 257, 48994, 7006, 294, 264, 2808, 13, 51518, 51518, 400, 286, 528, 281, 14722, 264, 3175, 502, 670, 9861, 3565, 2408, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1306443101777805, "compression_ratio": 1.9243697478991597, "no_speech_prob": 9.514984412817284e-06}, {"id": 2140, "seek": 660188, "start": 6606.84, "end": 6609.32, "text": " And you don't know what the value of the latent variable", "tokens": [50364, 407, 718, 311, 584, 291, 362, 257, 2316, 365, 257, 48994, 7006, 13, 50612, 50612, 400, 291, 500, 380, 458, 437, 264, 2158, 295, 264, 48994, 7006, 50736, 50736, 307, 13, 50762, 50762, 400, 291, 528, 281, 14722, 437, 307, 452, 4470, 11, 597, 50900, 50900, 576, 312, 264, 3565, 295, 512, 295, 264, 21510, 82, 50998, 50998, 295, 264, 4470, 670, 439, 4190, 295, 264, 48994, 7006, 13, 51104, 51104, 407, 286, 478, 733, 295, 16885, 3319, 670, 341, 48994, 7006, 13, 51276, 51276, 961, 311, 584, 309, 311, 257, 15090, 8399, 22660, 19866, 420, 746, 13, 51430, 51430, 286, 362, 257, 48994, 7006, 294, 264, 2808, 13, 51518, 51518, 400, 286, 528, 281, 14722, 264, 3175, 502, 670, 9861, 3565, 2408, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1306443101777805, "compression_ratio": 1.9243697478991597, "no_speech_prob": 9.514984412817284e-06}, {"id": 2141, "seek": 660188, "start": 6609.32, "end": 6609.84, "text": " is.", "tokens": [50364, 407, 718, 311, 584, 291, 362, 257, 2316, 365, 257, 48994, 7006, 13, 50612, 50612, 400, 291, 500, 380, 458, 437, 264, 2158, 295, 264, 48994, 7006, 50736, 50736, 307, 13, 50762, 50762, 400, 291, 528, 281, 14722, 437, 307, 452, 4470, 11, 597, 50900, 50900, 576, 312, 264, 3565, 295, 512, 295, 264, 21510, 82, 50998, 50998, 295, 264, 4470, 670, 439, 4190, 295, 264, 48994, 7006, 13, 51104, 51104, 407, 286, 478, 733, 295, 16885, 3319, 670, 341, 48994, 7006, 13, 51276, 51276, 961, 311, 584, 309, 311, 257, 15090, 8399, 22660, 19866, 420, 746, 13, 51430, 51430, 286, 362, 257, 48994, 7006, 294, 264, 2808, 13, 51518, 51518, 400, 286, 528, 281, 14722, 264, 3175, 502, 670, 9861, 3565, 2408, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1306443101777805, "compression_ratio": 1.9243697478991597, "no_speech_prob": 9.514984412817284e-06}, {"id": 2142, "seek": 660188, "start": 6609.84, "end": 6612.6, "text": " And you want to compute what is my loss, which", "tokens": [50364, 407, 718, 311, 584, 291, 362, 257, 2316, 365, 257, 48994, 7006, 13, 50612, 50612, 400, 291, 500, 380, 458, 437, 264, 2158, 295, 264, 48994, 7006, 50736, 50736, 307, 13, 50762, 50762, 400, 291, 528, 281, 14722, 437, 307, 452, 4470, 11, 597, 50900, 50900, 576, 312, 264, 3565, 295, 512, 295, 264, 21510, 82, 50998, 50998, 295, 264, 4470, 670, 439, 4190, 295, 264, 48994, 7006, 13, 51104, 51104, 407, 286, 478, 733, 295, 16885, 3319, 670, 341, 48994, 7006, 13, 51276, 51276, 961, 311, 584, 309, 311, 257, 15090, 8399, 22660, 19866, 420, 746, 13, 51430, 51430, 286, 362, 257, 48994, 7006, 294, 264, 2808, 13, 51518, 51518, 400, 286, 528, 281, 14722, 264, 3175, 502, 670, 9861, 3565, 2408, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1306443101777805, "compression_ratio": 1.9243697478991597, "no_speech_prob": 9.514984412817284e-06}, {"id": 2143, "seek": 660188, "start": 6612.6, "end": 6614.56, "text": " would be the log of some of the exponentials", "tokens": [50364, 407, 718, 311, 584, 291, 362, 257, 2316, 365, 257, 48994, 7006, 13, 50612, 50612, 400, 291, 500, 380, 458, 437, 264, 2158, 295, 264, 48994, 7006, 50736, 50736, 307, 13, 50762, 50762, 400, 291, 528, 281, 14722, 437, 307, 452, 4470, 11, 597, 50900, 50900, 576, 312, 264, 3565, 295, 512, 295, 264, 21510, 82, 50998, 50998, 295, 264, 4470, 670, 439, 4190, 295, 264, 48994, 7006, 13, 51104, 51104, 407, 286, 478, 733, 295, 16885, 3319, 670, 341, 48994, 7006, 13, 51276, 51276, 961, 311, 584, 309, 311, 257, 15090, 8399, 22660, 19866, 420, 746, 13, 51430, 51430, 286, 362, 257, 48994, 7006, 294, 264, 2808, 13, 51518, 51518, 400, 286, 528, 281, 14722, 264, 3175, 502, 670, 9861, 3565, 2408, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1306443101777805, "compression_ratio": 1.9243697478991597, "no_speech_prob": 9.514984412817284e-06}, {"id": 2144, "seek": 660188, "start": 6614.56, "end": 6616.68, "text": " of the loss over all values of the latent variable.", "tokens": [50364, 407, 718, 311, 584, 291, 362, 257, 2316, 365, 257, 48994, 7006, 13, 50612, 50612, 400, 291, 500, 380, 458, 437, 264, 2158, 295, 264, 48994, 7006, 50736, 50736, 307, 13, 50762, 50762, 400, 291, 528, 281, 14722, 437, 307, 452, 4470, 11, 597, 50900, 50900, 576, 312, 264, 3565, 295, 512, 295, 264, 21510, 82, 50998, 50998, 295, 264, 4470, 670, 439, 4190, 295, 264, 48994, 7006, 13, 51104, 51104, 407, 286, 478, 733, 295, 16885, 3319, 670, 341, 48994, 7006, 13, 51276, 51276, 961, 311, 584, 309, 311, 257, 15090, 8399, 22660, 19866, 420, 746, 13, 51430, 51430, 286, 362, 257, 48994, 7006, 294, 264, 2808, 13, 51518, 51518, 400, 286, 528, 281, 14722, 264, 3175, 502, 670, 9861, 3565, 2408, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1306443101777805, "compression_ratio": 1.9243697478991597, "no_speech_prob": 9.514984412817284e-06}, {"id": 2145, "seek": 660188, "start": 6616.68, "end": 6620.12, "text": " So I'm kind of marginalizing over this latent variable.", "tokens": [50364, 407, 718, 311, 584, 291, 362, 257, 2316, 365, 257, 48994, 7006, 13, 50612, 50612, 400, 291, 500, 380, 458, 437, 264, 2158, 295, 264, 48994, 7006, 50736, 50736, 307, 13, 50762, 50762, 400, 291, 528, 281, 14722, 437, 307, 452, 4470, 11, 597, 50900, 50900, 576, 312, 264, 3565, 295, 512, 295, 264, 21510, 82, 50998, 50998, 295, 264, 4470, 670, 439, 4190, 295, 264, 48994, 7006, 13, 51104, 51104, 407, 286, 478, 733, 295, 16885, 3319, 670, 341, 48994, 7006, 13, 51276, 51276, 961, 311, 584, 309, 311, 257, 15090, 8399, 22660, 19866, 420, 746, 13, 51430, 51430, 286, 362, 257, 48994, 7006, 294, 264, 2808, 13, 51518, 51518, 400, 286, 528, 281, 14722, 264, 3175, 502, 670, 9861, 3565, 2408, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1306443101777805, "compression_ratio": 1.9243697478991597, "no_speech_prob": 9.514984412817284e-06}, {"id": 2146, "seek": 660188, "start": 6620.12, "end": 6623.2, "text": " Let's say it's a rational autoencoder or something.", "tokens": [50364, 407, 718, 311, 584, 291, 362, 257, 2316, 365, 257, 48994, 7006, 13, 50612, 50612, 400, 291, 500, 380, 458, 437, 264, 2158, 295, 264, 48994, 7006, 50736, 50736, 307, 13, 50762, 50762, 400, 291, 528, 281, 14722, 437, 307, 452, 4470, 11, 597, 50900, 50900, 576, 312, 264, 3565, 295, 512, 295, 264, 21510, 82, 50998, 50998, 295, 264, 4470, 670, 439, 4190, 295, 264, 48994, 7006, 13, 51104, 51104, 407, 286, 478, 733, 295, 16885, 3319, 670, 341, 48994, 7006, 13, 51276, 51276, 961, 311, 584, 309, 311, 257, 15090, 8399, 22660, 19866, 420, 746, 13, 51430, 51430, 286, 362, 257, 48994, 7006, 294, 264, 2808, 13, 51518, 51518, 400, 286, 528, 281, 14722, 264, 3175, 502, 670, 9861, 3565, 2408, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1306443101777805, "compression_ratio": 1.9243697478991597, "no_speech_prob": 9.514984412817284e-06}, {"id": 2147, "seek": 660188, "start": 6623.2, "end": 6624.96, "text": " I have a latent variable in the middle.", "tokens": [50364, 407, 718, 311, 584, 291, 362, 257, 2316, 365, 257, 48994, 7006, 13, 50612, 50612, 400, 291, 500, 380, 458, 437, 264, 2158, 295, 264, 48994, 7006, 50736, 50736, 307, 13, 50762, 50762, 400, 291, 528, 281, 14722, 437, 307, 452, 4470, 11, 597, 50900, 50900, 576, 312, 264, 3565, 295, 512, 295, 264, 21510, 82, 50998, 50998, 295, 264, 4470, 670, 439, 4190, 295, 264, 48994, 7006, 13, 51104, 51104, 407, 286, 478, 733, 295, 16885, 3319, 670, 341, 48994, 7006, 13, 51276, 51276, 961, 311, 584, 309, 311, 257, 15090, 8399, 22660, 19866, 420, 746, 13, 51430, 51430, 286, 362, 257, 48994, 7006, 294, 264, 2808, 13, 51518, 51518, 400, 286, 528, 281, 14722, 264, 3175, 502, 670, 9861, 3565, 2408, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1306443101777805, "compression_ratio": 1.9243697478991597, "no_speech_prob": 9.514984412817284e-06}, {"id": 2148, "seek": 660188, "start": 6624.96, "end": 6630.76, "text": " And I want to compute the minus 1 over beta log sum", "tokens": [50364, 407, 718, 311, 584, 291, 362, 257, 2316, 365, 257, 48994, 7006, 13, 50612, 50612, 400, 291, 500, 380, 458, 437, 264, 2158, 295, 264, 48994, 7006, 50736, 50736, 307, 13, 50762, 50762, 400, 291, 528, 281, 14722, 437, 307, 452, 4470, 11, 597, 50900, 50900, 576, 312, 264, 3565, 295, 512, 295, 264, 21510, 82, 50998, 50998, 295, 264, 4470, 670, 439, 4190, 295, 264, 48994, 7006, 13, 51104, 51104, 407, 286, 478, 733, 295, 16885, 3319, 670, 341, 48994, 7006, 13, 51276, 51276, 961, 311, 584, 309, 311, 257, 15090, 8399, 22660, 19866, 420, 746, 13, 51430, 51430, 286, 362, 257, 48994, 7006, 294, 264, 2808, 13, 51518, 51518, 400, 286, 528, 281, 14722, 264, 3175, 502, 670, 9861, 3565, 2408, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1306443101777805, "compression_ratio": 1.9243697478991597, "no_speech_prob": 9.514984412817284e-06}, {"id": 2149, "seek": 663076, "start": 6630.76, "end": 6632.6, "text": " over all values of my latent variable of e", "tokens": [50364, 670, 439, 4190, 295, 452, 48994, 7006, 295, 308, 50456, 50456, 281, 264, 3175, 9861, 287, 13, 50586, 50586, 286, 478, 1228, 287, 11, 457, 286, 727, 764, 445, 604, 5986, 510, 13, 50706, 50706, 639, 307, 2035, 2445, 291, 643, 281, 14722, 13, 50810, 50980, 583, 309, 311, 4420, 337, 721, 291, 528, 281, 17522, 11, 411, 25737, 51100, 51100, 420, 15961, 13, 51302, 51302, 407, 510, 11, 341, 4470, 2445, 510, 307, 572, 2854, 257, 2445, 295, 710, 13, 51598, 51598, 467, 311, 787, 257, 2445, 295, 2031, 293, 288, 13, 51662, 51846], "temperature": 0.0, "avg_logprob": -0.15975806639366544, "compression_ratio": 1.5727699530516432, "no_speech_prob": 5.336986760084983e-06}, {"id": 2150, "seek": 663076, "start": 6632.6, "end": 6635.2, "text": " to the minus beta l.", "tokens": [50364, 670, 439, 4190, 295, 452, 48994, 7006, 295, 308, 50456, 50456, 281, 264, 3175, 9861, 287, 13, 50586, 50586, 286, 478, 1228, 287, 11, 457, 286, 727, 764, 445, 604, 5986, 510, 13, 50706, 50706, 639, 307, 2035, 2445, 291, 643, 281, 14722, 13, 50810, 50980, 583, 309, 311, 4420, 337, 721, 291, 528, 281, 17522, 11, 411, 25737, 51100, 51100, 420, 15961, 13, 51302, 51302, 407, 510, 11, 341, 4470, 2445, 510, 307, 572, 2854, 257, 2445, 295, 710, 13, 51598, 51598, 467, 311, 787, 257, 2445, 295, 2031, 293, 288, 13, 51662, 51846], "temperature": 0.0, "avg_logprob": -0.15975806639366544, "compression_ratio": 1.5727699530516432, "no_speech_prob": 5.336986760084983e-06}, {"id": 2151, "seek": 663076, "start": 6635.2, "end": 6637.6, "text": " I'm using l, but I could use just any symbol here.", "tokens": [50364, 670, 439, 4190, 295, 452, 48994, 7006, 295, 308, 50456, 50456, 281, 264, 3175, 9861, 287, 13, 50586, 50586, 286, 478, 1228, 287, 11, 457, 286, 727, 764, 445, 604, 5986, 510, 13, 50706, 50706, 639, 307, 2035, 2445, 291, 643, 281, 14722, 13, 50810, 50980, 583, 309, 311, 4420, 337, 721, 291, 528, 281, 17522, 11, 411, 25737, 51100, 51100, 420, 15961, 13, 51302, 51302, 407, 510, 11, 341, 4470, 2445, 510, 307, 572, 2854, 257, 2445, 295, 710, 13, 51598, 51598, 467, 311, 787, 257, 2445, 295, 2031, 293, 288, 13, 51662, 51846], "temperature": 0.0, "avg_logprob": -0.15975806639366544, "compression_ratio": 1.5727699530516432, "no_speech_prob": 5.336986760084983e-06}, {"id": 2152, "seek": 663076, "start": 6637.6, "end": 6639.68, "text": " This is whatever function you need to compute.", "tokens": [50364, 670, 439, 4190, 295, 452, 48994, 7006, 295, 308, 50456, 50456, 281, 264, 3175, 9861, 287, 13, 50586, 50586, 286, 478, 1228, 287, 11, 457, 286, 727, 764, 445, 604, 5986, 510, 13, 50706, 50706, 639, 307, 2035, 2445, 291, 643, 281, 14722, 13, 50810, 50980, 583, 309, 311, 4420, 337, 721, 291, 528, 281, 17522, 11, 411, 25737, 51100, 51100, 420, 15961, 13, 51302, 51302, 407, 510, 11, 341, 4470, 2445, 510, 307, 572, 2854, 257, 2445, 295, 710, 13, 51598, 51598, 467, 311, 787, 257, 2445, 295, 2031, 293, 288, 13, 51662, 51846], "temperature": 0.0, "avg_logprob": -0.15975806639366544, "compression_ratio": 1.5727699530516432, "no_speech_prob": 5.336986760084983e-06}, {"id": 2153, "seek": 663076, "start": 6643.08, "end": 6645.4800000000005, "text": " But it's useful for things you want to minimize, like energies", "tokens": [50364, 670, 439, 4190, 295, 452, 48994, 7006, 295, 308, 50456, 50456, 281, 264, 3175, 9861, 287, 13, 50586, 50586, 286, 478, 1228, 287, 11, 457, 286, 727, 764, 445, 604, 5986, 510, 13, 50706, 50706, 639, 307, 2035, 2445, 291, 643, 281, 14722, 13, 50810, 50980, 583, 309, 311, 4420, 337, 721, 291, 528, 281, 17522, 11, 411, 25737, 51100, 51100, 420, 15961, 13, 51302, 51302, 407, 510, 11, 341, 4470, 2445, 510, 307, 572, 2854, 257, 2445, 295, 710, 13, 51598, 51598, 467, 311, 787, 257, 2445, 295, 2031, 293, 288, 13, 51662, 51846], "temperature": 0.0, "avg_logprob": -0.15975806639366544, "compression_ratio": 1.5727699530516432, "no_speech_prob": 5.336986760084983e-06}, {"id": 2154, "seek": 663076, "start": 6645.4800000000005, "end": 6649.52, "text": " or objectives.", "tokens": [50364, 670, 439, 4190, 295, 452, 48994, 7006, 295, 308, 50456, 50456, 281, 264, 3175, 9861, 287, 13, 50586, 50586, 286, 478, 1228, 287, 11, 457, 286, 727, 764, 445, 604, 5986, 510, 13, 50706, 50706, 639, 307, 2035, 2445, 291, 643, 281, 14722, 13, 50810, 50980, 583, 309, 311, 4420, 337, 721, 291, 528, 281, 17522, 11, 411, 25737, 51100, 51100, 420, 15961, 13, 51302, 51302, 407, 510, 11, 341, 4470, 2445, 510, 307, 572, 2854, 257, 2445, 295, 710, 13, 51598, 51598, 467, 311, 787, 257, 2445, 295, 2031, 293, 288, 13, 51662, 51846], "temperature": 0.0, "avg_logprob": -0.15975806639366544, "compression_ratio": 1.5727699530516432, "no_speech_prob": 5.336986760084983e-06}, {"id": 2155, "seek": 663076, "start": 6649.52, "end": 6655.4400000000005, "text": " So here, this loss function here is no longer a function of z.", "tokens": [50364, 670, 439, 4190, 295, 452, 48994, 7006, 295, 308, 50456, 50456, 281, 264, 3175, 9861, 287, 13, 50586, 50586, 286, 478, 1228, 287, 11, 457, 286, 727, 764, 445, 604, 5986, 510, 13, 50706, 50706, 639, 307, 2035, 2445, 291, 643, 281, 14722, 13, 50810, 50980, 583, 309, 311, 4420, 337, 721, 291, 528, 281, 17522, 11, 411, 25737, 51100, 51100, 420, 15961, 13, 51302, 51302, 407, 510, 11, 341, 4470, 2445, 510, 307, 572, 2854, 257, 2445, 295, 710, 13, 51598, 51598, 467, 311, 787, 257, 2445, 295, 2031, 293, 288, 13, 51662, 51846], "temperature": 0.0, "avg_logprob": -0.15975806639366544, "compression_ratio": 1.5727699530516432, "no_speech_prob": 5.336986760084983e-06}, {"id": 2156, "seek": 663076, "start": 6655.4400000000005, "end": 6656.72, "text": " It's only a function of x and y.", "tokens": [50364, 670, 439, 4190, 295, 452, 48994, 7006, 295, 308, 50456, 50456, 281, 264, 3175, 9861, 287, 13, 50586, 50586, 286, 478, 1228, 287, 11, 457, 286, 727, 764, 445, 604, 5986, 510, 13, 50706, 50706, 639, 307, 2035, 2445, 291, 643, 281, 14722, 13, 50810, 50980, 583, 309, 311, 4420, 337, 721, 291, 528, 281, 17522, 11, 411, 25737, 51100, 51100, 420, 15961, 13, 51302, 51302, 407, 510, 11, 341, 4470, 2445, 510, 307, 572, 2854, 257, 2445, 295, 710, 13, 51598, 51598, 467, 311, 787, 257, 2445, 295, 2031, 293, 288, 13, 51662, 51846], "temperature": 0.0, "avg_logprob": -0.15975806639366544, "compression_ratio": 1.5727699530516432, "no_speech_prob": 5.336986760084983e-06}, {"id": 2157, "seek": 665672, "start": 6656.72, "end": 6666.84, "text": " I can rewrite this as the following.", "tokens": [50364, 286, 393, 28132, 341, 382, 264, 3480, 13, 50870, 50870, 9505, 295, 710, 308, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 670, 9505, 295, 710, 13, 51458, 51458, 286, 600, 445, 17207, 293, 6666, 538, 9505, 295, 710, 13, 51642, 51642, 286, 600, 1096, 1825, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.39200835757785374, "compression_ratio": 1.3103448275862069, "no_speech_prob": 6.850747922726441e-06}, {"id": 2158, "seek": 665672, "start": 6666.84, "end": 6678.6, "text": " q of z e to the minus beta l of x, y, z over q of z.", "tokens": [50364, 286, 393, 28132, 341, 382, 264, 3480, 13, 50870, 50870, 9505, 295, 710, 308, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 670, 9505, 295, 710, 13, 51458, 51458, 286, 600, 445, 17207, 293, 6666, 538, 9505, 295, 710, 13, 51642, 51642, 286, 600, 1096, 1825, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.39200835757785374, "compression_ratio": 1.3103448275862069, "no_speech_prob": 6.850747922726441e-06}, {"id": 2159, "seek": 665672, "start": 6678.6, "end": 6682.280000000001, "text": " I've just multiplied and divided by q of z.", "tokens": [50364, 286, 393, 28132, 341, 382, 264, 3480, 13, 50870, 50870, 9505, 295, 710, 308, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 670, 9505, 295, 710, 13, 51458, 51458, 286, 600, 445, 17207, 293, 6666, 538, 9505, 295, 710, 13, 51642, 51642, 286, 600, 1096, 1825, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.39200835757785374, "compression_ratio": 1.3103448275862069, "no_speech_prob": 6.850747922726441e-06}, {"id": 2160, "seek": 665672, "start": 6682.280000000001, "end": 6683.56, "text": " I've done nothing.", "tokens": [50364, 286, 393, 28132, 341, 382, 264, 3480, 13, 50870, 50870, 9505, 295, 710, 308, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 670, 9505, 295, 710, 13, 51458, 51458, 286, 600, 445, 17207, 293, 6666, 538, 9505, 295, 710, 13, 51642, 51642, 286, 600, 1096, 1825, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.39200835757785374, "compression_ratio": 1.3103448275862069, "no_speech_prob": 6.850747922726441e-06}, {"id": 2161, "seek": 668356, "start": 6683.56, "end": 6689.4400000000005, "text": " Now q of z here, I assume, is a probability distribution", "tokens": [50364, 823, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50658, 50658, 670, 710, 13, 50684, 50684, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50838, 50838, 562, 286, 13365, 670, 710, 13, 50930, 50930, 407, 291, 393, 7302, 341, 11573, 382, 264, 5176, 2158, 51134, 51134, 365, 3104, 281, 300, 7316, 295, 308, 51306, 51306, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 6666, 538, 9505, 295, 710, 13, 51510, 51610, 823, 11, 718, 311, 574, 412, 264, 50617, 51817], "temperature": 0.0, "avg_logprob": -0.3741123779960301, "compression_ratio": 1.577319587628866, "no_speech_prob": 7.179432486736914e-06}, {"id": 2162, "seek": 668356, "start": 6689.4400000000005, "end": 6689.96, "text": " over z.", "tokens": [50364, 823, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50658, 50658, 670, 710, 13, 50684, 50684, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50838, 50838, 562, 286, 13365, 670, 710, 13, 50930, 50930, 407, 291, 393, 7302, 341, 11573, 382, 264, 5176, 2158, 51134, 51134, 365, 3104, 281, 300, 7316, 295, 308, 51306, 51306, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 6666, 538, 9505, 295, 710, 13, 51510, 51610, 823, 11, 718, 311, 574, 412, 264, 50617, 51817], "temperature": 0.0, "avg_logprob": -0.3741123779960301, "compression_ratio": 1.577319587628866, "no_speech_prob": 7.179432486736914e-06}, {"id": 2163, "seek": 668356, "start": 6689.96, "end": 6693.04, "text": " So it's a density function that integrates to 1", "tokens": [50364, 823, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50658, 50658, 670, 710, 13, 50684, 50684, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50838, 50838, 562, 286, 13365, 670, 710, 13, 50930, 50930, 407, 291, 393, 7302, 341, 11573, 382, 264, 5176, 2158, 51134, 51134, 365, 3104, 281, 300, 7316, 295, 308, 51306, 51306, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 6666, 538, 9505, 295, 710, 13, 51510, 51610, 823, 11, 718, 311, 574, 412, 264, 50617, 51817], "temperature": 0.0, "avg_logprob": -0.3741123779960301, "compression_ratio": 1.577319587628866, "no_speech_prob": 7.179432486736914e-06}, {"id": 2164, "seek": 668356, "start": 6693.04, "end": 6694.88, "text": " when I integrate over z.", "tokens": [50364, 823, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50658, 50658, 670, 710, 13, 50684, 50684, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50838, 50838, 562, 286, 13365, 670, 710, 13, 50930, 50930, 407, 291, 393, 7302, 341, 11573, 382, 264, 5176, 2158, 51134, 51134, 365, 3104, 281, 300, 7316, 295, 308, 51306, 51306, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 6666, 538, 9505, 295, 710, 13, 51510, 51610, 823, 11, 718, 311, 574, 412, 264, 50617, 51817], "temperature": 0.0, "avg_logprob": -0.3741123779960301, "compression_ratio": 1.577319587628866, "no_speech_prob": 7.179432486736914e-06}, {"id": 2165, "seek": 668356, "start": 6694.88, "end": 6698.96, "text": " So you can interpret this integral as the expected value", "tokens": [50364, 823, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50658, 50658, 670, 710, 13, 50684, 50684, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50838, 50838, 562, 286, 13365, 670, 710, 13, 50930, 50930, 407, 291, 393, 7302, 341, 11573, 382, 264, 5176, 2158, 51134, 51134, 365, 3104, 281, 300, 7316, 295, 308, 51306, 51306, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 6666, 538, 9505, 295, 710, 13, 51510, 51610, 823, 11, 718, 311, 574, 412, 264, 50617, 51817], "temperature": 0.0, "avg_logprob": -0.3741123779960301, "compression_ratio": 1.577319587628866, "no_speech_prob": 7.179432486736914e-06}, {"id": 2166, "seek": 668356, "start": 6698.96, "end": 6702.400000000001, "text": " with respect to that distribution of e", "tokens": [50364, 823, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50658, 50658, 670, 710, 13, 50684, 50684, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50838, 50838, 562, 286, 13365, 670, 710, 13, 50930, 50930, 407, 291, 393, 7302, 341, 11573, 382, 264, 5176, 2158, 51134, 51134, 365, 3104, 281, 300, 7316, 295, 308, 51306, 51306, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 6666, 538, 9505, 295, 710, 13, 51510, 51610, 823, 11, 718, 311, 574, 412, 264, 50617, 51817], "temperature": 0.0, "avg_logprob": -0.3741123779960301, "compression_ratio": 1.577319587628866, "no_speech_prob": 7.179432486736914e-06}, {"id": 2167, "seek": 668356, "start": 6702.400000000001, "end": 6706.4800000000005, "text": " to the minus beta l of x, y, z divided by q of z.", "tokens": [50364, 823, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50658, 50658, 670, 710, 13, 50684, 50684, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50838, 50838, 562, 286, 13365, 670, 710, 13, 50930, 50930, 407, 291, 393, 7302, 341, 11573, 382, 264, 5176, 2158, 51134, 51134, 365, 3104, 281, 300, 7316, 295, 308, 51306, 51306, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 6666, 538, 9505, 295, 710, 13, 51510, 51610, 823, 11, 718, 311, 574, 412, 264, 50617, 51817], "temperature": 0.0, "avg_logprob": -0.3741123779960301, "compression_ratio": 1.577319587628866, "no_speech_prob": 7.179432486736914e-06}, {"id": 2168, "seek": 668356, "start": 6708.4800000000005, "end": 6688.620000000001, "text": " Now, let's look at the", "tokens": [50364, 823, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50658, 50658, 670, 710, 13, 50684, 50684, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50838, 50838, 562, 286, 13365, 670, 710, 13, 50930, 50930, 407, 291, 393, 7302, 341, 11573, 382, 264, 5176, 2158, 51134, 51134, 365, 3104, 281, 300, 7316, 295, 308, 51306, 51306, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 6666, 538, 9505, 295, 710, 13, 51510, 51610, 823, 11, 718, 311, 574, 412, 264, 50617, 51817], "temperature": 0.0, "avg_logprob": -0.3741123779960301, "compression_ratio": 1.577319587628866, "no_speech_prob": 7.179432486736914e-06}, {"id": 2169, "seek": 668862, "start": 6688.62, "end": 6694.32, "text": " Now, q of z here, I assume, is a probability distribution", "tokens": [50364, 823, 11, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50649, 50649, 670, 710, 13, 50675, 50675, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50831, 50831, 562, 286, 13365, 670, 710, 13, 50923, 50923, 407, 291, 393, 7302, 341, 11573, 51035, 51035, 382, 264, 5176, 2158, 365, 3104, 51153, 51153, 281, 300, 7316, 295, 308, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 51409, 51409, 6666, 538, 9505, 295, 710, 13, 51461, 51609, 823, 11, 510, 311, 264, 4282, 13, 51703, 51703, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 51805], "temperature": 0.0, "avg_logprob": -0.1551971435546875, "compression_ratio": 1.6118721461187215, "no_speech_prob": 2.0118410247960128e-05}, {"id": 2170, "seek": 668862, "start": 6694.32, "end": 6694.84, "text": " over z.", "tokens": [50364, 823, 11, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50649, 50649, 670, 710, 13, 50675, 50675, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50831, 50831, 562, 286, 13365, 670, 710, 13, 50923, 50923, 407, 291, 393, 7302, 341, 11573, 51035, 51035, 382, 264, 5176, 2158, 365, 3104, 51153, 51153, 281, 300, 7316, 295, 308, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 51409, 51409, 6666, 538, 9505, 295, 710, 13, 51461, 51609, 823, 11, 510, 311, 264, 4282, 13, 51703, 51703, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 51805], "temperature": 0.0, "avg_logprob": -0.1551971435546875, "compression_ratio": 1.6118721461187215, "no_speech_prob": 2.0118410247960128e-05}, {"id": 2171, "seek": 668862, "start": 6694.84, "end": 6697.96, "text": " So it's a density function that integrates to 1", "tokens": [50364, 823, 11, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50649, 50649, 670, 710, 13, 50675, 50675, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50831, 50831, 562, 286, 13365, 670, 710, 13, 50923, 50923, 407, 291, 393, 7302, 341, 11573, 51035, 51035, 382, 264, 5176, 2158, 365, 3104, 51153, 51153, 281, 300, 7316, 295, 308, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 51409, 51409, 6666, 538, 9505, 295, 710, 13, 51461, 51609, 823, 11, 510, 311, 264, 4282, 13, 51703, 51703, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 51805], "temperature": 0.0, "avg_logprob": -0.1551971435546875, "compression_ratio": 1.6118721461187215, "no_speech_prob": 2.0118410247960128e-05}, {"id": 2172, "seek": 668862, "start": 6697.96, "end": 6699.8, "text": " when I integrate over z.", "tokens": [50364, 823, 11, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50649, 50649, 670, 710, 13, 50675, 50675, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50831, 50831, 562, 286, 13365, 670, 710, 13, 50923, 50923, 407, 291, 393, 7302, 341, 11573, 51035, 51035, 382, 264, 5176, 2158, 365, 3104, 51153, 51153, 281, 300, 7316, 295, 308, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 51409, 51409, 6666, 538, 9505, 295, 710, 13, 51461, 51609, 823, 11, 510, 311, 264, 4282, 13, 51703, 51703, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 51805], "temperature": 0.0, "avg_logprob": -0.1551971435546875, "compression_ratio": 1.6118721461187215, "no_speech_prob": 2.0118410247960128e-05}, {"id": 2173, "seek": 668862, "start": 6699.8, "end": 6702.04, "text": " So you can interpret this integral", "tokens": [50364, 823, 11, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50649, 50649, 670, 710, 13, 50675, 50675, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50831, 50831, 562, 286, 13365, 670, 710, 13, 50923, 50923, 407, 291, 393, 7302, 341, 11573, 51035, 51035, 382, 264, 5176, 2158, 365, 3104, 51153, 51153, 281, 300, 7316, 295, 308, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 51409, 51409, 6666, 538, 9505, 295, 710, 13, 51461, 51609, 823, 11, 510, 311, 264, 4282, 13, 51703, 51703, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 51805], "temperature": 0.0, "avg_logprob": -0.1551971435546875, "compression_ratio": 1.6118721461187215, "no_speech_prob": 2.0118410247960128e-05}, {"id": 2174, "seek": 668862, "start": 6702.04, "end": 6704.4, "text": " as the expected value with respect", "tokens": [50364, 823, 11, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50649, 50649, 670, 710, 13, 50675, 50675, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50831, 50831, 562, 286, 13365, 670, 710, 13, 50923, 50923, 407, 291, 393, 7302, 341, 11573, 51035, 51035, 382, 264, 5176, 2158, 365, 3104, 51153, 51153, 281, 300, 7316, 295, 308, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 51409, 51409, 6666, 538, 9505, 295, 710, 13, 51461, 51609, 823, 11, 510, 311, 264, 4282, 13, 51703, 51703, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 51805], "temperature": 0.0, "avg_logprob": -0.1551971435546875, "compression_ratio": 1.6118721461187215, "no_speech_prob": 2.0118410247960128e-05}, {"id": 2175, "seek": 668862, "start": 6704.4, "end": 6709.5199999999995, "text": " to that distribution of e to the minus beta l of x, y, z", "tokens": [50364, 823, 11, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50649, 50649, 670, 710, 13, 50675, 50675, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50831, 50831, 562, 286, 13365, 670, 710, 13, 50923, 50923, 407, 291, 393, 7302, 341, 11573, 51035, 51035, 382, 264, 5176, 2158, 365, 3104, 51153, 51153, 281, 300, 7316, 295, 308, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 51409, 51409, 6666, 538, 9505, 295, 710, 13, 51461, 51609, 823, 11, 510, 311, 264, 4282, 13, 51703, 51703, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 51805], "temperature": 0.0, "avg_logprob": -0.1551971435546875, "compression_ratio": 1.6118721461187215, "no_speech_prob": 2.0118410247960128e-05}, {"id": 2176, "seek": 668862, "start": 6709.5199999999995, "end": 6710.5599999999995, "text": " divided by q of z.", "tokens": [50364, 823, 11, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50649, 50649, 670, 710, 13, 50675, 50675, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50831, 50831, 562, 286, 13365, 670, 710, 13, 50923, 50923, 407, 291, 393, 7302, 341, 11573, 51035, 51035, 382, 264, 5176, 2158, 365, 3104, 51153, 51153, 281, 300, 7316, 295, 308, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 51409, 51409, 6666, 538, 9505, 295, 710, 13, 51461, 51609, 823, 11, 510, 311, 264, 4282, 13, 51703, 51703, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 51805], "temperature": 0.0, "avg_logprob": -0.1551971435546875, "compression_ratio": 1.6118721461187215, "no_speech_prob": 2.0118410247960128e-05}, {"id": 2177, "seek": 668862, "start": 6713.5199999999995, "end": 6715.4, "text": " Now, here's the trick.", "tokens": [50364, 823, 11, 9505, 295, 710, 510, 11, 286, 6552, 11, 307, 257, 8482, 7316, 50649, 50649, 670, 710, 13, 50675, 50675, 407, 309, 311, 257, 10305, 2445, 300, 3572, 1024, 281, 502, 50831, 50831, 562, 286, 13365, 670, 710, 13, 50923, 50923, 407, 291, 393, 7302, 341, 11573, 51035, 51035, 382, 264, 5176, 2158, 365, 3104, 51153, 51153, 281, 300, 7316, 295, 308, 281, 264, 3175, 9861, 287, 295, 2031, 11, 288, 11, 710, 51409, 51409, 6666, 538, 9505, 295, 710, 13, 51461, 51609, 823, 11, 510, 311, 264, 4282, 13, 51703, 51703, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 51805], "temperature": 0.0, "avg_logprob": -0.1551971435546875, "compression_ratio": 1.6118721461187215, "no_speech_prob": 2.0118410247960128e-05}, {"id": 2178, "seek": 671540, "start": 6715.4, "end": 6718.799999999999, "text": " There's something called Jensen's inequality.", "tokens": [50364, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 50534, 50534, 400, 508, 32934, 311, 16970, 1619, 746, 588, 1880, 13, 51036, 51036, 467, 1619, 11, 718, 311, 3811, 286, 362, 257, 42432, 2445, 11, 51466, 51466, 411, 584, 11, 3175, 3565, 13, 51588, 51588, 286, 478, 406, 6316, 3175, 3565, 510, 588, 731, 11, 51668, 51668, 457, 309, 1542, 257, 857, 411, 3175, 3565, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.21475915908813475, "compression_ratio": 1.5961538461538463, "no_speech_prob": 6.453640253312187e-06}, {"id": 2179, "seek": 671540, "start": 6718.799999999999, "end": 6728.839999999999, "text": " And Jensen's inequality says something very interesting.", "tokens": [50364, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 50534, 50534, 400, 508, 32934, 311, 16970, 1619, 746, 588, 1880, 13, 51036, 51036, 467, 1619, 11, 718, 311, 3811, 286, 362, 257, 42432, 2445, 11, 51466, 51466, 411, 584, 11, 3175, 3565, 13, 51588, 51588, 286, 478, 406, 6316, 3175, 3565, 510, 588, 731, 11, 51668, 51668, 457, 309, 1542, 257, 857, 411, 3175, 3565, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.21475915908813475, "compression_ratio": 1.5961538461538463, "no_speech_prob": 6.453640253312187e-06}, {"id": 2180, "seek": 671540, "start": 6728.839999999999, "end": 6737.44, "text": " It says, let's imagine I have a convex function,", "tokens": [50364, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 50534, 50534, 400, 508, 32934, 311, 16970, 1619, 746, 588, 1880, 13, 51036, 51036, 467, 1619, 11, 718, 311, 3811, 286, 362, 257, 42432, 2445, 11, 51466, 51466, 411, 584, 11, 3175, 3565, 13, 51588, 51588, 286, 478, 406, 6316, 3175, 3565, 510, 588, 731, 11, 51668, 51668, 457, 309, 1542, 257, 857, 411, 3175, 3565, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.21475915908813475, "compression_ratio": 1.5961538461538463, "no_speech_prob": 6.453640253312187e-06}, {"id": 2181, "seek": 671540, "start": 6737.44, "end": 6739.879999999999, "text": " like say, minus log.", "tokens": [50364, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 50534, 50534, 400, 508, 32934, 311, 16970, 1619, 746, 588, 1880, 13, 51036, 51036, 467, 1619, 11, 718, 311, 3811, 286, 362, 257, 42432, 2445, 11, 51466, 51466, 411, 584, 11, 3175, 3565, 13, 51588, 51588, 286, 478, 406, 6316, 3175, 3565, 510, 588, 731, 11, 51668, 51668, 457, 309, 1542, 257, 857, 411, 3175, 3565, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.21475915908813475, "compression_ratio": 1.5961538461538463, "no_speech_prob": 6.453640253312187e-06}, {"id": 2182, "seek": 671540, "start": 6739.879999999999, "end": 6741.48, "text": " I'm not drawing minus log here very well,", "tokens": [50364, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 50534, 50534, 400, 508, 32934, 311, 16970, 1619, 746, 588, 1880, 13, 51036, 51036, 467, 1619, 11, 718, 311, 3811, 286, 362, 257, 42432, 2445, 11, 51466, 51466, 411, 584, 11, 3175, 3565, 13, 51588, 51588, 286, 478, 406, 6316, 3175, 3565, 510, 588, 731, 11, 51668, 51668, 457, 309, 1542, 257, 857, 411, 3175, 3565, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.21475915908813475, "compression_ratio": 1.5961538461538463, "no_speech_prob": 6.453640253312187e-06}, {"id": 2183, "seek": 671540, "start": 6741.48, "end": 6744.599999999999, "text": " but it looks a bit like minus log.", "tokens": [50364, 821, 311, 746, 1219, 508, 32934, 311, 16970, 13, 50534, 50534, 400, 508, 32934, 311, 16970, 1619, 746, 588, 1880, 13, 51036, 51036, 467, 1619, 11, 718, 311, 3811, 286, 362, 257, 42432, 2445, 11, 51466, 51466, 411, 584, 11, 3175, 3565, 13, 51588, 51588, 286, 478, 406, 6316, 3175, 3565, 510, 588, 731, 11, 51668, 51668, 457, 309, 1542, 257, 857, 411, 3175, 3565, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.21475915908813475, "compression_ratio": 1.5961538461538463, "no_speech_prob": 6.453640253312187e-06}, {"id": 2184, "seek": 674460, "start": 6744.6, "end": 6761.8, "text": " Now, if I take a bunch of values over a range", "tokens": [50364, 823, 11, 498, 286, 747, 257, 3840, 295, 4190, 670, 257, 3613, 51224, 51224, 293, 286, 14722, 264, 4274, 295, 264, 2158, 295, 264, 2445, 11, 51414, 51414, 3175, 3565, 11, 670, 300, 3613, 11, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1481770490988707, "compression_ratio": 1.3298969072164948, "no_speech_prob": 4.494254426390398e-06}, {"id": 2185, "seek": 674460, "start": 6761.8, "end": 6765.6, "text": " and I compute the average of the value of the function,", "tokens": [50364, 823, 11, 498, 286, 747, 257, 3840, 295, 4190, 670, 257, 3613, 51224, 51224, 293, 286, 14722, 264, 4274, 295, 264, 2158, 295, 264, 2445, 11, 51414, 51414, 3175, 3565, 11, 670, 300, 3613, 11, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1481770490988707, "compression_ratio": 1.3298969072164948, "no_speech_prob": 4.494254426390398e-06}, {"id": 2186, "seek": 674460, "start": 6765.6, "end": 6774.280000000001, "text": " minus log, over that range,", "tokens": [50364, 823, 11, 498, 286, 747, 257, 3840, 295, 4190, 670, 257, 3613, 51224, 51224, 293, 286, 14722, 264, 4274, 295, 264, 2158, 295, 264, 2445, 11, 51414, 51414, 3175, 3565, 11, 670, 300, 3613, 11, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1481770490988707, "compression_ratio": 1.3298969072164948, "no_speech_prob": 4.494254426390398e-06}, {"id": 2187, "seek": 677428, "start": 6774.28, "end": 6776.04, "text": " because the function is convex, I'm", "tokens": [50364, 570, 264, 2445, 307, 42432, 11, 286, 478, 50452, 50452, 516, 281, 483, 257, 2158, 300, 307, 4356, 813, 264, 2445, 50714, 50714, 6456, 281, 264, 4274, 13, 50852, 50852, 407, 452, 10686, 307, 406, 300, 869, 570, 264, 37638, 307, 406, 51030, 51030, 1090, 1547, 13, 51054, 51054, 961, 385, 2642, 309, 797, 13, 51214, 51214, 407, 510, 311, 257, 42432, 2445, 13, 51348, 51348, 286, 478, 516, 281, 10559, 257, 7006, 510, 670, 257, 3613, 13, 51532, 51532, 400, 286, 14722, 264, 4274, 295, 300, 2445, 670, 300, 3613, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1317440072695414, "compression_ratio": 1.7525252525252526, "no_speech_prob": 6.240697075554635e-06}, {"id": 2188, "seek": 677428, "start": 6776.04, "end": 6781.28, "text": " going to get a value that is smaller than the function", "tokens": [50364, 570, 264, 2445, 307, 42432, 11, 286, 478, 50452, 50452, 516, 281, 483, 257, 2158, 300, 307, 4356, 813, 264, 2445, 50714, 50714, 6456, 281, 264, 4274, 13, 50852, 50852, 407, 452, 10686, 307, 406, 300, 869, 570, 264, 37638, 307, 406, 51030, 51030, 1090, 1547, 13, 51054, 51054, 961, 385, 2642, 309, 797, 13, 51214, 51214, 407, 510, 311, 257, 42432, 2445, 13, 51348, 51348, 286, 478, 516, 281, 10559, 257, 7006, 510, 670, 257, 3613, 13, 51532, 51532, 400, 286, 14722, 264, 4274, 295, 300, 2445, 670, 300, 3613, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1317440072695414, "compression_ratio": 1.7525252525252526, "no_speech_prob": 6.240697075554635e-06}, {"id": 2189, "seek": 677428, "start": 6781.28, "end": 6784.04, "text": " applied to the average.", "tokens": [50364, 570, 264, 2445, 307, 42432, 11, 286, 478, 50452, 50452, 516, 281, 483, 257, 2158, 300, 307, 4356, 813, 264, 2445, 50714, 50714, 6456, 281, 264, 4274, 13, 50852, 50852, 407, 452, 10686, 307, 406, 300, 869, 570, 264, 37638, 307, 406, 51030, 51030, 1090, 1547, 13, 51054, 51054, 961, 385, 2642, 309, 797, 13, 51214, 51214, 407, 510, 311, 257, 42432, 2445, 13, 51348, 51348, 286, 478, 516, 281, 10559, 257, 7006, 510, 670, 257, 3613, 13, 51532, 51532, 400, 286, 14722, 264, 4274, 295, 300, 2445, 670, 300, 3613, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1317440072695414, "compression_ratio": 1.7525252525252526, "no_speech_prob": 6.240697075554635e-06}, {"id": 2190, "seek": 677428, "start": 6784.04, "end": 6787.599999999999, "text": " So my diagram is not that great because the curvature is not", "tokens": [50364, 570, 264, 2445, 307, 42432, 11, 286, 478, 50452, 50452, 516, 281, 483, 257, 2158, 300, 307, 4356, 813, 264, 2445, 50714, 50714, 6456, 281, 264, 4274, 13, 50852, 50852, 407, 452, 10686, 307, 406, 300, 869, 570, 264, 37638, 307, 406, 51030, 51030, 1090, 1547, 13, 51054, 51054, 961, 385, 2642, 309, 797, 13, 51214, 51214, 407, 510, 311, 257, 42432, 2445, 13, 51348, 51348, 286, 478, 516, 281, 10559, 257, 7006, 510, 670, 257, 3613, 13, 51532, 51532, 400, 286, 14722, 264, 4274, 295, 300, 2445, 670, 300, 3613, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1317440072695414, "compression_ratio": 1.7525252525252526, "no_speech_prob": 6.240697075554635e-06}, {"id": 2191, "seek": 677428, "start": 6787.599999999999, "end": 6788.08, "text": " high enough.", "tokens": [50364, 570, 264, 2445, 307, 42432, 11, 286, 478, 50452, 50452, 516, 281, 483, 257, 2158, 300, 307, 4356, 813, 264, 2445, 50714, 50714, 6456, 281, 264, 4274, 13, 50852, 50852, 407, 452, 10686, 307, 406, 300, 869, 570, 264, 37638, 307, 406, 51030, 51030, 1090, 1547, 13, 51054, 51054, 961, 385, 2642, 309, 797, 13, 51214, 51214, 407, 510, 311, 257, 42432, 2445, 13, 51348, 51348, 286, 478, 516, 281, 10559, 257, 7006, 510, 670, 257, 3613, 13, 51532, 51532, 400, 286, 14722, 264, 4274, 295, 300, 2445, 670, 300, 3613, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1317440072695414, "compression_ratio": 1.7525252525252526, "no_speech_prob": 6.240697075554635e-06}, {"id": 2192, "seek": 677428, "start": 6788.08, "end": 6791.28, "text": " Let me draw it again.", "tokens": [50364, 570, 264, 2445, 307, 42432, 11, 286, 478, 50452, 50452, 516, 281, 483, 257, 2158, 300, 307, 4356, 813, 264, 2445, 50714, 50714, 6456, 281, 264, 4274, 13, 50852, 50852, 407, 452, 10686, 307, 406, 300, 869, 570, 264, 37638, 307, 406, 51030, 51030, 1090, 1547, 13, 51054, 51054, 961, 385, 2642, 309, 797, 13, 51214, 51214, 407, 510, 311, 257, 42432, 2445, 13, 51348, 51348, 286, 478, 516, 281, 10559, 257, 7006, 510, 670, 257, 3613, 13, 51532, 51532, 400, 286, 14722, 264, 4274, 295, 300, 2445, 670, 300, 3613, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1317440072695414, "compression_ratio": 1.7525252525252526, "no_speech_prob": 6.240697075554635e-06}, {"id": 2193, "seek": 677428, "start": 6791.28, "end": 6793.96, "text": " So here's a convex function.", "tokens": [50364, 570, 264, 2445, 307, 42432, 11, 286, 478, 50452, 50452, 516, 281, 483, 257, 2158, 300, 307, 4356, 813, 264, 2445, 50714, 50714, 6456, 281, 264, 4274, 13, 50852, 50852, 407, 452, 10686, 307, 406, 300, 869, 570, 264, 37638, 307, 406, 51030, 51030, 1090, 1547, 13, 51054, 51054, 961, 385, 2642, 309, 797, 13, 51214, 51214, 407, 510, 311, 257, 42432, 2445, 13, 51348, 51348, 286, 478, 516, 281, 10559, 257, 7006, 510, 670, 257, 3613, 13, 51532, 51532, 400, 286, 14722, 264, 4274, 295, 300, 2445, 670, 300, 3613, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1317440072695414, "compression_ratio": 1.7525252525252526, "no_speech_prob": 6.240697075554635e-06}, {"id": 2194, "seek": 677428, "start": 6793.96, "end": 6797.639999999999, "text": " I'm going to vary a variable here over a range.", "tokens": [50364, 570, 264, 2445, 307, 42432, 11, 286, 478, 50452, 50452, 516, 281, 483, 257, 2158, 300, 307, 4356, 813, 264, 2445, 50714, 50714, 6456, 281, 264, 4274, 13, 50852, 50852, 407, 452, 10686, 307, 406, 300, 869, 570, 264, 37638, 307, 406, 51030, 51030, 1090, 1547, 13, 51054, 51054, 961, 385, 2642, 309, 797, 13, 51214, 51214, 407, 510, 311, 257, 42432, 2445, 13, 51348, 51348, 286, 478, 516, 281, 10559, 257, 7006, 510, 670, 257, 3613, 13, 51532, 51532, 400, 286, 14722, 264, 4274, 295, 300, 2445, 670, 300, 3613, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1317440072695414, "compression_ratio": 1.7525252525252526, "no_speech_prob": 6.240697075554635e-06}, {"id": 2195, "seek": 677428, "start": 6797.639999999999, "end": 6802.0, "text": " And I compute the average of that function over that range.", "tokens": [50364, 570, 264, 2445, 307, 42432, 11, 286, 478, 50452, 50452, 516, 281, 483, 257, 2158, 300, 307, 4356, 813, 264, 2445, 50714, 50714, 6456, 281, 264, 4274, 13, 50852, 50852, 407, 452, 10686, 307, 406, 300, 869, 570, 264, 37638, 307, 406, 51030, 51030, 1090, 1547, 13, 51054, 51054, 961, 385, 2642, 309, 797, 13, 51214, 51214, 407, 510, 311, 257, 42432, 2445, 13, 51348, 51348, 286, 478, 516, 281, 10559, 257, 7006, 510, 670, 257, 3613, 13, 51532, 51532, 400, 286, 14722, 264, 4274, 295, 300, 2445, 670, 300, 3613, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1317440072695414, "compression_ratio": 1.7525252525252526, "no_speech_prob": 6.240697075554635e-06}, {"id": 2196, "seek": 680200, "start": 6802.0, "end": 6809.28, "text": " So it's going to give me some value probably around here.", "tokens": [50364, 407, 309, 311, 516, 281, 976, 385, 512, 2158, 1391, 926, 510, 13, 50728, 50728, 400, 550, 286, 478, 516, 281, 747, 264, 4274, 295, 439, 729, 4190, 50938, 50938, 294, 341, 3613, 11, 264, 4274, 295, 264, 3613, 11, 264, 2062, 6053, 51048, 51048, 295, 300, 3613, 11, 293, 1320, 309, 807, 264, 2445, 13, 51190, 51728, 400, 286, 483, 746, 2507, 341, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.20516666467638983, "compression_ratio": 1.608974358974359, "no_speech_prob": 2.642501385707874e-06}, {"id": 2197, "seek": 680200, "start": 6809.28, "end": 6813.48, "text": " And then I'm going to take the average of all those values", "tokens": [50364, 407, 309, 311, 516, 281, 976, 385, 512, 2158, 1391, 926, 510, 13, 50728, 50728, 400, 550, 286, 478, 516, 281, 747, 264, 4274, 295, 439, 729, 4190, 50938, 50938, 294, 341, 3613, 11, 264, 4274, 295, 264, 3613, 11, 264, 2062, 6053, 51048, 51048, 295, 300, 3613, 11, 293, 1320, 309, 807, 264, 2445, 13, 51190, 51728, 400, 286, 483, 746, 2507, 341, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.20516666467638983, "compression_ratio": 1.608974358974359, "no_speech_prob": 2.642501385707874e-06}, {"id": 2198, "seek": 680200, "start": 6813.48, "end": 6815.68, "text": " in this range, the average of the range, the midpoint", "tokens": [50364, 407, 309, 311, 516, 281, 976, 385, 512, 2158, 1391, 926, 510, 13, 50728, 50728, 400, 550, 286, 478, 516, 281, 747, 264, 4274, 295, 439, 729, 4190, 50938, 50938, 294, 341, 3613, 11, 264, 4274, 295, 264, 3613, 11, 264, 2062, 6053, 51048, 51048, 295, 300, 3613, 11, 293, 1320, 309, 807, 264, 2445, 13, 51190, 51728, 400, 286, 483, 746, 2507, 341, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.20516666467638983, "compression_ratio": 1.608974358974359, "no_speech_prob": 2.642501385707874e-06}, {"id": 2199, "seek": 680200, "start": 6815.68, "end": 6818.52, "text": " of that range, and pass it through the function.", "tokens": [50364, 407, 309, 311, 516, 281, 976, 385, 512, 2158, 1391, 926, 510, 13, 50728, 50728, 400, 550, 286, 478, 516, 281, 747, 264, 4274, 295, 439, 729, 4190, 50938, 50938, 294, 341, 3613, 11, 264, 4274, 295, 264, 3613, 11, 264, 2062, 6053, 51048, 51048, 295, 300, 3613, 11, 293, 1320, 309, 807, 264, 2445, 13, 51190, 51728, 400, 286, 483, 746, 2507, 341, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.20516666467638983, "compression_ratio": 1.608974358974359, "no_speech_prob": 2.642501385707874e-06}, {"id": 2200, "seek": 680200, "start": 6829.28, "end": 6831.28, "text": " And I get something below this.", "tokens": [50364, 407, 309, 311, 516, 281, 976, 385, 512, 2158, 1391, 926, 510, 13, 50728, 50728, 400, 550, 286, 478, 516, 281, 747, 264, 4274, 295, 439, 729, 4190, 50938, 50938, 294, 341, 3613, 11, 264, 4274, 295, 264, 3613, 11, 264, 2062, 6053, 51048, 51048, 295, 300, 3613, 11, 293, 1320, 309, 807, 264, 2445, 13, 51190, 51728, 400, 286, 483, 746, 2507, 341, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.20516666467638983, "compression_ratio": 1.608974358974359, "no_speech_prob": 2.642501385707874e-06}, {"id": 2201, "seek": 683128, "start": 6831.28, "end": 6832.759999999999, "text": " So I didn't draw this properly.", "tokens": [50364, 407, 286, 994, 380, 2642, 341, 6108, 13, 50438, 50438, 407, 498, 286, 747, 264, 4274, 295, 341, 1804, 341, 11, 341, 11, 341, 11, 341, 11, 50608, 50608, 341, 11, 293, 341, 11, 286, 478, 516, 281, 483, 746, 300, 311, 2946, 813, 50722, 50722, 300, 570, 264, 2445, 307, 42432, 13, 50964, 50964, 759, 264, 2445, 390, 2997, 11, 550, 264, 4274, 51118, 51118, 934, 516, 807, 264, 2445, 576, 312, 264, 912, 51210, 51210, 382, 949, 516, 807, 264, 2445, 13, 51352, 51352, 759, 286, 40610, 264, 4274, 295, 439, 729, 4190, 11, 51514, 51514, 439, 264, 288, 4190, 295, 729, 2793, 11, 51630, 51630, 286, 576, 312, 412, 264, 912, 1081, 382, 264, 2445, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1666609341980981, "compression_ratio": 2.0358744394618835, "no_speech_prob": 7.888963409641292e-06}, {"id": 2202, "seek": 683128, "start": 6832.759999999999, "end": 6836.16, "text": " So if I take the average of this plus this, this, this, this,", "tokens": [50364, 407, 286, 994, 380, 2642, 341, 6108, 13, 50438, 50438, 407, 498, 286, 747, 264, 4274, 295, 341, 1804, 341, 11, 341, 11, 341, 11, 341, 11, 50608, 50608, 341, 11, 293, 341, 11, 286, 478, 516, 281, 483, 746, 300, 311, 2946, 813, 50722, 50722, 300, 570, 264, 2445, 307, 42432, 13, 50964, 50964, 759, 264, 2445, 390, 2997, 11, 550, 264, 4274, 51118, 51118, 934, 516, 807, 264, 2445, 576, 312, 264, 912, 51210, 51210, 382, 949, 516, 807, 264, 2445, 13, 51352, 51352, 759, 286, 40610, 264, 4274, 295, 439, 729, 4190, 11, 51514, 51514, 439, 264, 288, 4190, 295, 729, 2793, 11, 51630, 51630, 286, 576, 312, 412, 264, 912, 1081, 382, 264, 2445, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1666609341980981, "compression_ratio": 2.0358744394618835, "no_speech_prob": 7.888963409641292e-06}, {"id": 2203, "seek": 683128, "start": 6836.16, "end": 6838.44, "text": " this, and this, I'm going to get something that's higher than", "tokens": [50364, 407, 286, 994, 380, 2642, 341, 6108, 13, 50438, 50438, 407, 498, 286, 747, 264, 4274, 295, 341, 1804, 341, 11, 341, 11, 341, 11, 341, 11, 50608, 50608, 341, 11, 293, 341, 11, 286, 478, 516, 281, 483, 746, 300, 311, 2946, 813, 50722, 50722, 300, 570, 264, 2445, 307, 42432, 13, 50964, 50964, 759, 264, 2445, 390, 2997, 11, 550, 264, 4274, 51118, 51118, 934, 516, 807, 264, 2445, 576, 312, 264, 912, 51210, 51210, 382, 949, 516, 807, 264, 2445, 13, 51352, 51352, 759, 286, 40610, 264, 4274, 295, 439, 729, 4190, 11, 51514, 51514, 439, 264, 288, 4190, 295, 729, 2793, 11, 51630, 51630, 286, 576, 312, 412, 264, 912, 1081, 382, 264, 2445, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1666609341980981, "compression_ratio": 2.0358744394618835, "no_speech_prob": 7.888963409641292e-06}, {"id": 2204, "seek": 683128, "start": 6838.44, "end": 6843.28, "text": " that because the function is convex.", "tokens": [50364, 407, 286, 994, 380, 2642, 341, 6108, 13, 50438, 50438, 407, 498, 286, 747, 264, 4274, 295, 341, 1804, 341, 11, 341, 11, 341, 11, 341, 11, 50608, 50608, 341, 11, 293, 341, 11, 286, 478, 516, 281, 483, 746, 300, 311, 2946, 813, 50722, 50722, 300, 570, 264, 2445, 307, 42432, 13, 50964, 50964, 759, 264, 2445, 390, 2997, 11, 550, 264, 4274, 51118, 51118, 934, 516, 807, 264, 2445, 576, 312, 264, 912, 51210, 51210, 382, 949, 516, 807, 264, 2445, 13, 51352, 51352, 759, 286, 40610, 264, 4274, 295, 439, 729, 4190, 11, 51514, 51514, 439, 264, 288, 4190, 295, 729, 2793, 11, 51630, 51630, 286, 576, 312, 412, 264, 912, 1081, 382, 264, 2445, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1666609341980981, "compression_ratio": 2.0358744394618835, "no_speech_prob": 7.888963409641292e-06}, {"id": 2205, "seek": 683128, "start": 6843.28, "end": 6846.36, "text": " If the function was straight, then the average", "tokens": [50364, 407, 286, 994, 380, 2642, 341, 6108, 13, 50438, 50438, 407, 498, 286, 747, 264, 4274, 295, 341, 1804, 341, 11, 341, 11, 341, 11, 341, 11, 50608, 50608, 341, 11, 293, 341, 11, 286, 478, 516, 281, 483, 746, 300, 311, 2946, 813, 50722, 50722, 300, 570, 264, 2445, 307, 42432, 13, 50964, 50964, 759, 264, 2445, 390, 2997, 11, 550, 264, 4274, 51118, 51118, 934, 516, 807, 264, 2445, 576, 312, 264, 912, 51210, 51210, 382, 949, 516, 807, 264, 2445, 13, 51352, 51352, 759, 286, 40610, 264, 4274, 295, 439, 729, 4190, 11, 51514, 51514, 439, 264, 288, 4190, 295, 729, 2793, 11, 51630, 51630, 286, 576, 312, 412, 264, 912, 1081, 382, 264, 2445, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1666609341980981, "compression_ratio": 2.0358744394618835, "no_speech_prob": 7.888963409641292e-06}, {"id": 2206, "seek": 683128, "start": 6846.36, "end": 6848.2, "text": " after going through the function would be the same", "tokens": [50364, 407, 286, 994, 380, 2642, 341, 6108, 13, 50438, 50438, 407, 498, 286, 747, 264, 4274, 295, 341, 1804, 341, 11, 341, 11, 341, 11, 341, 11, 50608, 50608, 341, 11, 293, 341, 11, 286, 478, 516, 281, 483, 746, 300, 311, 2946, 813, 50722, 50722, 300, 570, 264, 2445, 307, 42432, 13, 50964, 50964, 759, 264, 2445, 390, 2997, 11, 550, 264, 4274, 51118, 51118, 934, 516, 807, 264, 2445, 576, 312, 264, 912, 51210, 51210, 382, 949, 516, 807, 264, 2445, 13, 51352, 51352, 759, 286, 40610, 264, 4274, 295, 439, 729, 4190, 11, 51514, 51514, 439, 264, 288, 4190, 295, 729, 2793, 11, 51630, 51630, 286, 576, 312, 412, 264, 912, 1081, 382, 264, 2445, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1666609341980981, "compression_ratio": 2.0358744394618835, "no_speech_prob": 7.888963409641292e-06}, {"id": 2207, "seek": 683128, "start": 6848.2, "end": 6851.04, "text": " as before going through the function.", "tokens": [50364, 407, 286, 994, 380, 2642, 341, 6108, 13, 50438, 50438, 407, 498, 286, 747, 264, 4274, 295, 341, 1804, 341, 11, 341, 11, 341, 11, 341, 11, 50608, 50608, 341, 11, 293, 341, 11, 286, 478, 516, 281, 483, 746, 300, 311, 2946, 813, 50722, 50722, 300, 570, 264, 2445, 307, 42432, 13, 50964, 50964, 759, 264, 2445, 390, 2997, 11, 550, 264, 4274, 51118, 51118, 934, 516, 807, 264, 2445, 576, 312, 264, 912, 51210, 51210, 382, 949, 516, 807, 264, 2445, 13, 51352, 51352, 759, 286, 40610, 264, 4274, 295, 439, 729, 4190, 11, 51514, 51514, 439, 264, 288, 4190, 295, 729, 2793, 11, 51630, 51630, 286, 576, 312, 412, 264, 912, 1081, 382, 264, 2445, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1666609341980981, "compression_ratio": 2.0358744394618835, "no_speech_prob": 7.888963409641292e-06}, {"id": 2208, "seek": 683128, "start": 6851.04, "end": 6854.28, "text": " If I computed the average of all those values,", "tokens": [50364, 407, 286, 994, 380, 2642, 341, 6108, 13, 50438, 50438, 407, 498, 286, 747, 264, 4274, 295, 341, 1804, 341, 11, 341, 11, 341, 11, 341, 11, 50608, 50608, 341, 11, 293, 341, 11, 286, 478, 516, 281, 483, 746, 300, 311, 2946, 813, 50722, 50722, 300, 570, 264, 2445, 307, 42432, 13, 50964, 50964, 759, 264, 2445, 390, 2997, 11, 550, 264, 4274, 51118, 51118, 934, 516, 807, 264, 2445, 576, 312, 264, 912, 51210, 51210, 382, 949, 516, 807, 264, 2445, 13, 51352, 51352, 759, 286, 40610, 264, 4274, 295, 439, 729, 4190, 11, 51514, 51514, 439, 264, 288, 4190, 295, 729, 2793, 11, 51630, 51630, 286, 576, 312, 412, 264, 912, 1081, 382, 264, 2445, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1666609341980981, "compression_ratio": 2.0358744394618835, "no_speech_prob": 7.888963409641292e-06}, {"id": 2209, "seek": 683128, "start": 6854.28, "end": 6856.599999999999, "text": " all the y values of those points,", "tokens": [50364, 407, 286, 994, 380, 2642, 341, 6108, 13, 50438, 50438, 407, 498, 286, 747, 264, 4274, 295, 341, 1804, 341, 11, 341, 11, 341, 11, 341, 11, 50608, 50608, 341, 11, 293, 341, 11, 286, 478, 516, 281, 483, 746, 300, 311, 2946, 813, 50722, 50722, 300, 570, 264, 2445, 307, 42432, 13, 50964, 50964, 759, 264, 2445, 390, 2997, 11, 550, 264, 4274, 51118, 51118, 934, 516, 807, 264, 2445, 576, 312, 264, 912, 51210, 51210, 382, 949, 516, 807, 264, 2445, 13, 51352, 51352, 759, 286, 40610, 264, 4274, 295, 439, 729, 4190, 11, 51514, 51514, 439, 264, 288, 4190, 295, 729, 2793, 11, 51630, 51630, 286, 576, 312, 412, 264, 912, 1081, 382, 264, 2445, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1666609341980981, "compression_ratio": 2.0358744394618835, "no_speech_prob": 7.888963409641292e-06}, {"id": 2210, "seek": 683128, "start": 6856.599999999999, "end": 6860.12, "text": " I would be at the same place as the function", "tokens": [50364, 407, 286, 994, 380, 2642, 341, 6108, 13, 50438, 50438, 407, 498, 286, 747, 264, 4274, 295, 341, 1804, 341, 11, 341, 11, 341, 11, 341, 11, 50608, 50608, 341, 11, 293, 341, 11, 286, 478, 516, 281, 483, 746, 300, 311, 2946, 813, 50722, 50722, 300, 570, 264, 2445, 307, 42432, 13, 50964, 50964, 759, 264, 2445, 390, 2997, 11, 550, 264, 4274, 51118, 51118, 934, 516, 807, 264, 2445, 576, 312, 264, 912, 51210, 51210, 382, 949, 516, 807, 264, 2445, 13, 51352, 51352, 759, 286, 40610, 264, 4274, 295, 439, 729, 4190, 11, 51514, 51514, 439, 264, 288, 4190, 295, 729, 2793, 11, 51630, 51630, 286, 576, 312, 412, 264, 912, 1081, 382, 264, 2445, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1666609341980981, "compression_ratio": 2.0358744394618835, "no_speech_prob": 7.888963409641292e-06}, {"id": 2211, "seek": 686012, "start": 6860.12, "end": 6863.16, "text": " applied to the average.", "tokens": [50364, 6456, 281, 264, 4274, 13, 50516, 50516, 407, 291, 393, 652, 264, 24700, 1296, 264, 42432, 2445, 50672, 50672, 294, 257, 1622, 300, 1709, 490, 729, 732, 4040, 296, 13, 50814, 50814, 663, 311, 558, 13, 50852, 50852, 865, 11, 456, 291, 352, 13, 50890, 50890, 407, 264, 914, 576, 312, 412, 300, 935, 13, 51056, 51056, 663, 311, 558, 13, 51156, 51156, 407, 264, 914, 6456, 281, 264, 2445, 4190, 51562, 51562, 576, 312, 746, 411, 341, 14137, 13, 51632, 51632, 467, 2759, 380, 312, 300, 11, 457, 309, 576, 312, 1998, 281, 300, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.20855264663696288, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.00018792774062603712}, {"id": 2212, "seek": 686012, "start": 6863.16, "end": 6866.28, "text": " So you can make the intercept between the convex function", "tokens": [50364, 6456, 281, 264, 4274, 13, 50516, 50516, 407, 291, 393, 652, 264, 24700, 1296, 264, 42432, 2445, 50672, 50672, 294, 257, 1622, 300, 1709, 490, 729, 732, 4040, 296, 13, 50814, 50814, 663, 311, 558, 13, 50852, 50852, 865, 11, 456, 291, 352, 13, 50890, 50890, 407, 264, 914, 576, 312, 412, 300, 935, 13, 51056, 51056, 663, 311, 558, 13, 51156, 51156, 407, 264, 914, 6456, 281, 264, 2445, 4190, 51562, 51562, 576, 312, 746, 411, 341, 14137, 13, 51632, 51632, 467, 2759, 380, 312, 300, 11, 457, 309, 576, 312, 1998, 281, 300, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.20855264663696288, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.00018792774062603712}, {"id": 2213, "seek": 686012, "start": 6866.28, "end": 6869.12, "text": " in a line that goes from those two extremas.", "tokens": [50364, 6456, 281, 264, 4274, 13, 50516, 50516, 407, 291, 393, 652, 264, 24700, 1296, 264, 42432, 2445, 50672, 50672, 294, 257, 1622, 300, 1709, 490, 729, 732, 4040, 296, 13, 50814, 50814, 663, 311, 558, 13, 50852, 50852, 865, 11, 456, 291, 352, 13, 50890, 50890, 407, 264, 914, 576, 312, 412, 300, 935, 13, 51056, 51056, 663, 311, 558, 13, 51156, 51156, 407, 264, 914, 6456, 281, 264, 2445, 4190, 51562, 51562, 576, 312, 746, 411, 341, 14137, 13, 51632, 51632, 467, 2759, 380, 312, 300, 11, 457, 309, 576, 312, 1998, 281, 300, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.20855264663696288, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.00018792774062603712}, {"id": 2214, "seek": 686012, "start": 6869.12, "end": 6869.88, "text": " That's right.", "tokens": [50364, 6456, 281, 264, 4274, 13, 50516, 50516, 407, 291, 393, 652, 264, 24700, 1296, 264, 42432, 2445, 50672, 50672, 294, 257, 1622, 300, 1709, 490, 729, 732, 4040, 296, 13, 50814, 50814, 663, 311, 558, 13, 50852, 50852, 865, 11, 456, 291, 352, 13, 50890, 50890, 407, 264, 914, 576, 312, 412, 300, 935, 13, 51056, 51056, 663, 311, 558, 13, 51156, 51156, 407, 264, 914, 6456, 281, 264, 2445, 4190, 51562, 51562, 576, 312, 746, 411, 341, 14137, 13, 51632, 51632, 467, 2759, 380, 312, 300, 11, 457, 309, 576, 312, 1998, 281, 300, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.20855264663696288, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.00018792774062603712}, {"id": 2215, "seek": 686012, "start": 6869.88, "end": 6870.64, "text": " Yeah, there you go.", "tokens": [50364, 6456, 281, 264, 4274, 13, 50516, 50516, 407, 291, 393, 652, 264, 24700, 1296, 264, 42432, 2445, 50672, 50672, 294, 257, 1622, 300, 1709, 490, 729, 732, 4040, 296, 13, 50814, 50814, 663, 311, 558, 13, 50852, 50852, 865, 11, 456, 291, 352, 13, 50890, 50890, 407, 264, 914, 576, 312, 412, 300, 935, 13, 51056, 51056, 663, 311, 558, 13, 51156, 51156, 407, 264, 914, 6456, 281, 264, 2445, 4190, 51562, 51562, 576, 312, 746, 411, 341, 14137, 13, 51632, 51632, 467, 2759, 380, 312, 300, 11, 457, 309, 576, 312, 1998, 281, 300, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.20855264663696288, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.00018792774062603712}, {"id": 2216, "seek": 686012, "start": 6870.64, "end": 6873.96, "text": " So the mean would be at that point.", "tokens": [50364, 6456, 281, 264, 4274, 13, 50516, 50516, 407, 291, 393, 652, 264, 24700, 1296, 264, 42432, 2445, 50672, 50672, 294, 257, 1622, 300, 1709, 490, 729, 732, 4040, 296, 13, 50814, 50814, 663, 311, 558, 13, 50852, 50852, 865, 11, 456, 291, 352, 13, 50890, 50890, 407, 264, 914, 576, 312, 412, 300, 935, 13, 51056, 51056, 663, 311, 558, 13, 51156, 51156, 407, 264, 914, 6456, 281, 264, 2445, 4190, 51562, 51562, 576, 312, 746, 411, 341, 14137, 13, 51632, 51632, 467, 2759, 380, 312, 300, 11, 457, 309, 576, 312, 1998, 281, 300, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.20855264663696288, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.00018792774062603712}, {"id": 2217, "seek": 686012, "start": 6873.96, "end": 6875.96, "text": " That's right.", "tokens": [50364, 6456, 281, 264, 4274, 13, 50516, 50516, 407, 291, 393, 652, 264, 24700, 1296, 264, 42432, 2445, 50672, 50672, 294, 257, 1622, 300, 1709, 490, 729, 732, 4040, 296, 13, 50814, 50814, 663, 311, 558, 13, 50852, 50852, 865, 11, 456, 291, 352, 13, 50890, 50890, 407, 264, 914, 576, 312, 412, 300, 935, 13, 51056, 51056, 663, 311, 558, 13, 51156, 51156, 407, 264, 914, 6456, 281, 264, 2445, 4190, 51562, 51562, 576, 312, 746, 411, 341, 14137, 13, 51632, 51632, 467, 2759, 380, 312, 300, 11, 457, 309, 576, 312, 1998, 281, 300, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.20855264663696288, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.00018792774062603712}, {"id": 2218, "seek": 686012, "start": 6875.96, "end": 6884.08, "text": " So the mean applied to the function values", "tokens": [50364, 6456, 281, 264, 4274, 13, 50516, 50516, 407, 291, 393, 652, 264, 24700, 1296, 264, 42432, 2445, 50672, 50672, 294, 257, 1622, 300, 1709, 490, 729, 732, 4040, 296, 13, 50814, 50814, 663, 311, 558, 13, 50852, 50852, 865, 11, 456, 291, 352, 13, 50890, 50890, 407, 264, 914, 576, 312, 412, 300, 935, 13, 51056, 51056, 663, 311, 558, 13, 51156, 51156, 407, 264, 914, 6456, 281, 264, 2445, 4190, 51562, 51562, 576, 312, 746, 411, 341, 14137, 13, 51632, 51632, 467, 2759, 380, 312, 300, 11, 457, 309, 576, 312, 1998, 281, 300, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.20855264663696288, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.00018792774062603712}, {"id": 2219, "seek": 686012, "start": 6884.08, "end": 6885.48, "text": " would be something like this chord.", "tokens": [50364, 6456, 281, 264, 4274, 13, 50516, 50516, 407, 291, 393, 652, 264, 24700, 1296, 264, 42432, 2445, 50672, 50672, 294, 257, 1622, 300, 1709, 490, 729, 732, 4040, 296, 13, 50814, 50814, 663, 311, 558, 13, 50852, 50852, 865, 11, 456, 291, 352, 13, 50890, 50890, 407, 264, 914, 576, 312, 412, 300, 935, 13, 51056, 51056, 663, 311, 558, 13, 51156, 51156, 407, 264, 914, 6456, 281, 264, 2445, 4190, 51562, 51562, 576, 312, 746, 411, 341, 14137, 13, 51632, 51632, 467, 2759, 380, 312, 300, 11, 457, 309, 576, 312, 1998, 281, 300, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.20855264663696288, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.00018792774062603712}, {"id": 2220, "seek": 686012, "start": 6885.48, "end": 6889.5599999999995, "text": " It wouldn't be that, but it would be close to that.", "tokens": [50364, 6456, 281, 264, 4274, 13, 50516, 50516, 407, 291, 393, 652, 264, 24700, 1296, 264, 42432, 2445, 50672, 50672, 294, 257, 1622, 300, 1709, 490, 729, 732, 4040, 296, 13, 50814, 50814, 663, 311, 558, 13, 50852, 50852, 865, 11, 456, 291, 352, 13, 50890, 50890, 407, 264, 914, 576, 312, 412, 300, 935, 13, 51056, 51056, 663, 311, 558, 13, 51156, 51156, 407, 264, 914, 6456, 281, 264, 2445, 4190, 51562, 51562, 576, 312, 746, 411, 341, 14137, 13, 51632, 51632, 467, 2759, 380, 312, 300, 11, 457, 309, 576, 312, 1998, 281, 300, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.20855264663696288, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.00018792774062603712}, {"id": 2221, "seek": 688956, "start": 6889.56, "end": 6892.360000000001, "text": " Now, let's forget about a function like that.", "tokens": [50364, 823, 11, 718, 311, 2870, 466, 257, 2445, 411, 300, 13, 50504, 50504, 5135, 11, 286, 820, 362, 8825, 341, 294, 257, 709, 50608, 50608, 18587, 636, 11, 597, 307, 732, 4190, 13, 50750, 50750, 961, 311, 584, 309, 311, 445, 257, 2408, 295, 732, 2115, 13, 50882, 50882, 407, 291, 362, 257, 42432, 2445, 13, 50948, 50948, 509, 362, 732, 4190, 13, 50990, 51212, 440, 4274, 295, 729, 732, 4190, 934, 286, 1320, 807, 264, 2445, 13, 51416, 51416, 407, 1936, 11, 718, 311, 584, 341, 307, 452, 2445, 307, 3175, 3565, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.2395044248931262, "compression_ratio": 1.6350710900473933, "no_speech_prob": 1.8161103980673943e-06}, {"id": 2222, "seek": 688956, "start": 6892.360000000001, "end": 6894.4400000000005, "text": " Actually, I should have explained this in a much", "tokens": [50364, 823, 11, 718, 311, 2870, 466, 257, 2445, 411, 300, 13, 50504, 50504, 5135, 11, 286, 820, 362, 8825, 341, 294, 257, 709, 50608, 50608, 18587, 636, 11, 597, 307, 732, 4190, 13, 50750, 50750, 961, 311, 584, 309, 311, 445, 257, 2408, 295, 732, 2115, 13, 50882, 50882, 407, 291, 362, 257, 42432, 2445, 13, 50948, 50948, 509, 362, 732, 4190, 13, 50990, 51212, 440, 4274, 295, 729, 732, 4190, 934, 286, 1320, 807, 264, 2445, 13, 51416, 51416, 407, 1936, 11, 718, 311, 584, 341, 307, 452, 2445, 307, 3175, 3565, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.2395044248931262, "compression_ratio": 1.6350710900473933, "no_speech_prob": 1.8161103980673943e-06}, {"id": 2223, "seek": 688956, "start": 6894.4400000000005, "end": 6897.280000000001, "text": " simpler way, which is two values.", "tokens": [50364, 823, 11, 718, 311, 2870, 466, 257, 2445, 411, 300, 13, 50504, 50504, 5135, 11, 286, 820, 362, 8825, 341, 294, 257, 709, 50608, 50608, 18587, 636, 11, 597, 307, 732, 4190, 13, 50750, 50750, 961, 311, 584, 309, 311, 445, 257, 2408, 295, 732, 2115, 13, 50882, 50882, 407, 291, 362, 257, 42432, 2445, 13, 50948, 50948, 509, 362, 732, 4190, 13, 50990, 51212, 440, 4274, 295, 729, 732, 4190, 934, 286, 1320, 807, 264, 2445, 13, 51416, 51416, 407, 1936, 11, 718, 311, 584, 341, 307, 452, 2445, 307, 3175, 3565, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.2395044248931262, "compression_ratio": 1.6350710900473933, "no_speech_prob": 1.8161103980673943e-06}, {"id": 2224, "seek": 688956, "start": 6897.280000000001, "end": 6899.92, "text": " Let's say it's just a sum of two terms.", "tokens": [50364, 823, 11, 718, 311, 2870, 466, 257, 2445, 411, 300, 13, 50504, 50504, 5135, 11, 286, 820, 362, 8825, 341, 294, 257, 709, 50608, 50608, 18587, 636, 11, 597, 307, 732, 4190, 13, 50750, 50750, 961, 311, 584, 309, 311, 445, 257, 2408, 295, 732, 2115, 13, 50882, 50882, 407, 291, 362, 257, 42432, 2445, 13, 50948, 50948, 509, 362, 732, 4190, 13, 50990, 51212, 440, 4274, 295, 729, 732, 4190, 934, 286, 1320, 807, 264, 2445, 13, 51416, 51416, 407, 1936, 11, 718, 311, 584, 341, 307, 452, 2445, 307, 3175, 3565, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.2395044248931262, "compression_ratio": 1.6350710900473933, "no_speech_prob": 1.8161103980673943e-06}, {"id": 2225, "seek": 688956, "start": 6899.92, "end": 6901.240000000001, "text": " So you have a convex function.", "tokens": [50364, 823, 11, 718, 311, 2870, 466, 257, 2445, 411, 300, 13, 50504, 50504, 5135, 11, 286, 820, 362, 8825, 341, 294, 257, 709, 50608, 50608, 18587, 636, 11, 597, 307, 732, 4190, 13, 50750, 50750, 961, 311, 584, 309, 311, 445, 257, 2408, 295, 732, 2115, 13, 50882, 50882, 407, 291, 362, 257, 42432, 2445, 13, 50948, 50948, 509, 362, 732, 4190, 13, 50990, 51212, 440, 4274, 295, 729, 732, 4190, 934, 286, 1320, 807, 264, 2445, 13, 51416, 51416, 407, 1936, 11, 718, 311, 584, 341, 307, 452, 2445, 307, 3175, 3565, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.2395044248931262, "compression_ratio": 1.6350710900473933, "no_speech_prob": 1.8161103980673943e-06}, {"id": 2226, "seek": 688956, "start": 6901.240000000001, "end": 6902.080000000001, "text": " You have two values.", "tokens": [50364, 823, 11, 718, 311, 2870, 466, 257, 2445, 411, 300, 13, 50504, 50504, 5135, 11, 286, 820, 362, 8825, 341, 294, 257, 709, 50608, 50608, 18587, 636, 11, 597, 307, 732, 4190, 13, 50750, 50750, 961, 311, 584, 309, 311, 445, 257, 2408, 295, 732, 2115, 13, 50882, 50882, 407, 291, 362, 257, 42432, 2445, 13, 50948, 50948, 509, 362, 732, 4190, 13, 50990, 51212, 440, 4274, 295, 729, 732, 4190, 934, 286, 1320, 807, 264, 2445, 13, 51416, 51416, 407, 1936, 11, 718, 311, 584, 341, 307, 452, 2445, 307, 3175, 3565, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.2395044248931262, "compression_ratio": 1.6350710900473933, "no_speech_prob": 1.8161103980673943e-06}, {"id": 2227, "seek": 688956, "start": 6906.52, "end": 6910.6, "text": " The average of those two values after I pass through the function.", "tokens": [50364, 823, 11, 718, 311, 2870, 466, 257, 2445, 411, 300, 13, 50504, 50504, 5135, 11, 286, 820, 362, 8825, 341, 294, 257, 709, 50608, 50608, 18587, 636, 11, 597, 307, 732, 4190, 13, 50750, 50750, 961, 311, 584, 309, 311, 445, 257, 2408, 295, 732, 2115, 13, 50882, 50882, 407, 291, 362, 257, 42432, 2445, 13, 50948, 50948, 509, 362, 732, 4190, 13, 50990, 51212, 440, 4274, 295, 729, 732, 4190, 934, 286, 1320, 807, 264, 2445, 13, 51416, 51416, 407, 1936, 11, 718, 311, 584, 341, 307, 452, 2445, 307, 3175, 3565, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.2395044248931262, "compression_ratio": 1.6350710900473933, "no_speech_prob": 1.8161103980673943e-06}, {"id": 2228, "seek": 688956, "start": 6910.6, "end": 6916.64, "text": " So basically, let's say this is my function is minus log.", "tokens": [50364, 823, 11, 718, 311, 2870, 466, 257, 2445, 411, 300, 13, 50504, 50504, 5135, 11, 286, 820, 362, 8825, 341, 294, 257, 709, 50608, 50608, 18587, 636, 11, 597, 307, 732, 4190, 13, 50750, 50750, 961, 311, 584, 309, 311, 445, 257, 2408, 295, 732, 2115, 13, 50882, 50882, 407, 291, 362, 257, 42432, 2445, 13, 50948, 50948, 509, 362, 732, 4190, 13, 50990, 51212, 440, 4274, 295, 729, 732, 4190, 934, 286, 1320, 807, 264, 2445, 13, 51416, 51416, 407, 1936, 11, 718, 311, 584, 341, 307, 452, 2445, 307, 3175, 3565, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.2395044248931262, "compression_ratio": 1.6350710900473933, "no_speech_prob": 1.8161103980673943e-06}, {"id": 2229, "seek": 691664, "start": 6916.64, "end": 6922.52, "text": " So the average of minus log of, let's call it x1 and x2,", "tokens": [50364, 407, 264, 4274, 295, 3175, 3565, 295, 11, 718, 311, 818, 309, 2031, 16, 293, 2031, 17, 11, 50658, 50658, 3175, 3565, 295, 2031, 16, 1804, 3175, 3565, 295, 2031, 17, 6666, 538, 568, 51134, 51134, 307, 341, 935, 13, 51166, 51446], "temperature": 0.0, "avg_logprob": -0.11882235787131569, "compression_ratio": 1.3010752688172043, "no_speech_prob": 1.1189265478606103e-06}, {"id": 2230, "seek": 691664, "start": 6922.52, "end": 6932.04, "text": " minus log of x1 plus minus log of x2 divided by 2", "tokens": [50364, 407, 264, 4274, 295, 3175, 3565, 295, 11, 718, 311, 818, 309, 2031, 16, 293, 2031, 17, 11, 50658, 50658, 3175, 3565, 295, 2031, 16, 1804, 3175, 3565, 295, 2031, 17, 6666, 538, 568, 51134, 51134, 307, 341, 935, 13, 51166, 51446], "temperature": 0.0, "avg_logprob": -0.11882235787131569, "compression_ratio": 1.3010752688172043, "no_speech_prob": 1.1189265478606103e-06}, {"id": 2231, "seek": 691664, "start": 6932.04, "end": 6932.68, "text": " is this point.", "tokens": [50364, 407, 264, 4274, 295, 3175, 3565, 295, 11, 718, 311, 818, 309, 2031, 16, 293, 2031, 17, 11, 50658, 50658, 3175, 3565, 295, 2031, 16, 1804, 3175, 3565, 295, 2031, 17, 6666, 538, 568, 51134, 51134, 307, 341, 935, 13, 51166, 51446], "temperature": 0.0, "avg_logprob": -0.11882235787131569, "compression_ratio": 1.3010752688172043, "no_speech_prob": 1.1189265478606103e-06}, {"id": 2232, "seek": 693268, "start": 6932.68, "end": 6942.52, "text": " And then minus log of x1 plus x2 divided by 2 is that point.", "tokens": [50364, 400, 550, 3175, 3565, 295, 2031, 16, 1804, 2031, 17, 6666, 538, 568, 307, 300, 935, 13, 50856, 50856, 400, 300, 311, 2507, 13, 50994, 50994, 400, 508, 1385, 266, 311, 16970, 1936, 51066, 51066, 1619, 498, 291, 362, 257, 42432, 2445, 411, 3175, 3565, 11, 51396, 51396, 550, 291, 362, 257, 42432, 2445, 13, 51486, 51486, 407, 300, 311, 264, 935, 13, 51538, 51538, 407, 300, 311, 264, 935, 13, 51586, 51586, 407, 300, 311, 264, 935, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.7197061561676393, "compression_ratio": 1.7862068965517242, "no_speech_prob": 1.7601232684683055e-06}, {"id": 2233, "seek": 693268, "start": 6942.52, "end": 6945.280000000001, "text": " And that's below.", "tokens": [50364, 400, 550, 3175, 3565, 295, 2031, 16, 1804, 2031, 17, 6666, 538, 568, 307, 300, 935, 13, 50856, 50856, 400, 300, 311, 2507, 13, 50994, 50994, 400, 508, 1385, 266, 311, 16970, 1936, 51066, 51066, 1619, 498, 291, 362, 257, 42432, 2445, 411, 3175, 3565, 11, 51396, 51396, 550, 291, 362, 257, 42432, 2445, 13, 51486, 51486, 407, 300, 311, 264, 935, 13, 51538, 51538, 407, 300, 311, 264, 935, 13, 51586, 51586, 407, 300, 311, 264, 935, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.7197061561676393, "compression_ratio": 1.7862068965517242, "no_speech_prob": 1.7601232684683055e-06}, {"id": 2234, "seek": 693268, "start": 6945.280000000001, "end": 6946.72, "text": " And Jetson's inequality basically", "tokens": [50364, 400, 550, 3175, 3565, 295, 2031, 16, 1804, 2031, 17, 6666, 538, 568, 307, 300, 935, 13, 50856, 50856, 400, 300, 311, 2507, 13, 50994, 50994, 400, 508, 1385, 266, 311, 16970, 1936, 51066, 51066, 1619, 498, 291, 362, 257, 42432, 2445, 411, 3175, 3565, 11, 51396, 51396, 550, 291, 362, 257, 42432, 2445, 13, 51486, 51486, 407, 300, 311, 264, 935, 13, 51538, 51538, 407, 300, 311, 264, 935, 13, 51586, 51586, 407, 300, 311, 264, 935, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.7197061561676393, "compression_ratio": 1.7862068965517242, "no_speech_prob": 1.7601232684683055e-06}, {"id": 2235, "seek": 693268, "start": 6946.72, "end": 6953.320000000001, "text": " says if you have a convex function like minus log,", "tokens": [50364, 400, 550, 3175, 3565, 295, 2031, 16, 1804, 2031, 17, 6666, 538, 568, 307, 300, 935, 13, 50856, 50856, 400, 300, 311, 2507, 13, 50994, 50994, 400, 508, 1385, 266, 311, 16970, 1936, 51066, 51066, 1619, 498, 291, 362, 257, 42432, 2445, 411, 3175, 3565, 11, 51396, 51396, 550, 291, 362, 257, 42432, 2445, 13, 51486, 51486, 407, 300, 311, 264, 935, 13, 51538, 51538, 407, 300, 311, 264, 935, 13, 51586, 51586, 407, 300, 311, 264, 935, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.7197061561676393, "compression_ratio": 1.7862068965517242, "no_speech_prob": 1.7601232684683055e-06}, {"id": 2236, "seek": 693268, "start": 6953.320000000001, "end": 6955.12, "text": " then you have a convex function.", "tokens": [50364, 400, 550, 3175, 3565, 295, 2031, 16, 1804, 2031, 17, 6666, 538, 568, 307, 300, 935, 13, 50856, 50856, 400, 300, 311, 2507, 13, 50994, 50994, 400, 508, 1385, 266, 311, 16970, 1936, 51066, 51066, 1619, 498, 291, 362, 257, 42432, 2445, 411, 3175, 3565, 11, 51396, 51396, 550, 291, 362, 257, 42432, 2445, 13, 51486, 51486, 407, 300, 311, 264, 935, 13, 51538, 51538, 407, 300, 311, 264, 935, 13, 51586, 51586, 407, 300, 311, 264, 935, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.7197061561676393, "compression_ratio": 1.7862068965517242, "no_speech_prob": 1.7601232684683055e-06}, {"id": 2237, "seek": 693268, "start": 6955.12, "end": 6956.16, "text": " So that's the point.", "tokens": [50364, 400, 550, 3175, 3565, 295, 2031, 16, 1804, 2031, 17, 6666, 538, 568, 307, 300, 935, 13, 50856, 50856, 400, 300, 311, 2507, 13, 50994, 50994, 400, 508, 1385, 266, 311, 16970, 1936, 51066, 51066, 1619, 498, 291, 362, 257, 42432, 2445, 411, 3175, 3565, 11, 51396, 51396, 550, 291, 362, 257, 42432, 2445, 13, 51486, 51486, 407, 300, 311, 264, 935, 13, 51538, 51538, 407, 300, 311, 264, 935, 13, 51586, 51586, 407, 300, 311, 264, 935, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.7197061561676393, "compression_ratio": 1.7862068965517242, "no_speech_prob": 1.7601232684683055e-06}, {"id": 2238, "seek": 693268, "start": 6956.16, "end": 6957.12, "text": " So that's the point.", "tokens": [50364, 400, 550, 3175, 3565, 295, 2031, 16, 1804, 2031, 17, 6666, 538, 568, 307, 300, 935, 13, 50856, 50856, 400, 300, 311, 2507, 13, 50994, 50994, 400, 508, 1385, 266, 311, 16970, 1936, 51066, 51066, 1619, 498, 291, 362, 257, 42432, 2445, 411, 3175, 3565, 11, 51396, 51396, 550, 291, 362, 257, 42432, 2445, 13, 51486, 51486, 407, 300, 311, 264, 935, 13, 51538, 51538, 407, 300, 311, 264, 935, 13, 51586, 51586, 407, 300, 311, 264, 935, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.7197061561676393, "compression_ratio": 1.7862068965517242, "no_speech_prob": 1.7601232684683055e-06}, {"id": 2239, "seek": 693268, "start": 6957.12, "end": 6958.12, "text": " So that's the point.", "tokens": [50364, 400, 550, 3175, 3565, 295, 2031, 16, 1804, 2031, 17, 6666, 538, 568, 307, 300, 935, 13, 50856, 50856, 400, 300, 311, 2507, 13, 50994, 50994, 400, 508, 1385, 266, 311, 16970, 1936, 51066, 51066, 1619, 498, 291, 362, 257, 42432, 2445, 411, 3175, 3565, 11, 51396, 51396, 550, 291, 362, 257, 42432, 2445, 13, 51486, 51486, 407, 300, 311, 264, 935, 13, 51538, 51538, 407, 300, 311, 264, 935, 13, 51586, 51586, 407, 300, 311, 264, 935, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.7197061561676393, "compression_ratio": 1.7862068965517242, "no_speech_prob": 1.7601232684683055e-06}, {"id": 2240, "seek": 695812, "start": 6958.12, "end": 6969.12, "text": " So like minus log, then here I computed an average.", "tokens": [50364, 407, 411, 3175, 3565, 11, 550, 510, 286, 40610, 364, 4274, 13, 50914, 50914, 583, 309, 311, 2074, 337, 604, 14334, 13, 51036, 51036, 467, 1619, 264, 14334, 13, 51286, 51446], "temperature": 0.0, "avg_logprob": -0.22754991415775183, "compression_ratio": 1.1808510638297873, "no_speech_prob": 1.5531968529103324e-06}, {"id": 2241, "seek": 695812, "start": 6969.12, "end": 6971.5599999999995, "text": " But it's true for any expectation.", "tokens": [50364, 407, 411, 3175, 3565, 11, 550, 510, 286, 40610, 364, 4274, 13, 50914, 50914, 583, 309, 311, 2074, 337, 604, 14334, 13, 51036, 51036, 467, 1619, 264, 14334, 13, 51286, 51446], "temperature": 0.0, "avg_logprob": -0.22754991415775183, "compression_ratio": 1.1808510638297873, "no_speech_prob": 1.5531968529103324e-06}, {"id": 2242, "seek": 695812, "start": 6971.5599999999995, "end": 6976.5599999999995, "text": " It says the expectation.", "tokens": [50364, 407, 411, 3175, 3565, 11, 550, 510, 286, 40610, 364, 4274, 13, 50914, 50914, 583, 309, 311, 2074, 337, 604, 14334, 13, 51036, 51036, 467, 1619, 264, 14334, 13, 51286, 51446], "temperature": 0.0, "avg_logprob": -0.22754991415775183, "compression_ratio": 1.1808510638297873, "no_speech_prob": 1.5531968529103324e-06}, {"id": 2243, "seek": 697656, "start": 6976.56, "end": 6985.56, "text": " So basically, convex of expectation", "tokens": [50364, 407, 1936, 11, 42432, 295, 14334, 50814, 50814, 670, 604, 7316, 295, 512, 2445, 276, 13, 50926, 51124, 1042, 11, 300, 576, 312, 710, 294, 300, 1389, 13, 51230, 51230, 2264, 13, 51254, 51598, 286, 362, 281, 2464, 341, 294, 264, 2296, 636, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.5817680756251017, "compression_ratio": 1.256, "no_speech_prob": 8.577886774219223e-07}, {"id": 2244, "seek": 697656, "start": 6985.56, "end": 6987.8, "text": " over any distribution of some function h.", "tokens": [50364, 407, 1936, 11, 42432, 295, 14334, 50814, 50814, 670, 604, 7316, 295, 512, 2445, 276, 13, 50926, 51124, 1042, 11, 300, 576, 312, 710, 294, 300, 1389, 13, 51230, 51230, 2264, 13, 51254, 51598, 286, 362, 281, 2464, 341, 294, 264, 2296, 636, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.5817680756251017, "compression_ratio": 1.256, "no_speech_prob": 8.577886774219223e-07}, {"id": 2245, "seek": 697656, "start": 6991.76, "end": 6993.88, "text": " Well, that would be z in that case.", "tokens": [50364, 407, 1936, 11, 42432, 295, 14334, 50814, 50814, 670, 604, 7316, 295, 512, 2445, 276, 13, 50926, 51124, 1042, 11, 300, 576, 312, 710, 294, 300, 1389, 13, 51230, 51230, 2264, 13, 51254, 51598, 286, 362, 281, 2464, 341, 294, 264, 2296, 636, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.5817680756251017, "compression_ratio": 1.256, "no_speech_prob": 8.577886774219223e-07}, {"id": 2246, "seek": 697656, "start": 6993.88, "end": 6994.360000000001, "text": " OK.", "tokens": [50364, 407, 1936, 11, 42432, 295, 14334, 50814, 50814, 670, 604, 7316, 295, 512, 2445, 276, 13, 50926, 51124, 1042, 11, 300, 576, 312, 710, 294, 300, 1389, 13, 51230, 51230, 2264, 13, 51254, 51598, 286, 362, 281, 2464, 341, 294, 264, 2296, 636, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.5817680756251017, "compression_ratio": 1.256, "no_speech_prob": 8.577886774219223e-07}, {"id": 2247, "seek": 697656, "start": 7001.240000000001, "end": 7002.68, "text": " I have to write this in the proper way.", "tokens": [50364, 407, 1936, 11, 42432, 295, 14334, 50814, 50814, 670, 604, 7316, 295, 512, 2445, 276, 13, 50926, 51124, 1042, 11, 300, 576, 312, 710, 294, 300, 1389, 13, 51230, 51230, 2264, 13, 51254, 51598, 286, 362, 281, 2464, 341, 294, 264, 2296, 636, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.5817680756251017, "compression_ratio": 1.256, "no_speech_prob": 8.577886774219223e-07}, {"id": 2248, "seek": 700268, "start": 7002.68, "end": 7010.92, "text": " It's less than or equal to sum over z qz", "tokens": [50364, 467, 311, 1570, 813, 420, 2681, 281, 2408, 670, 710, 9505, 89, 50776, 50776, 295, 341, 42432, 2445, 6456, 281, 276, 295, 710, 13, 51106, 51306, 2264, 11, 300, 311, 508, 1385, 266, 311, 16970, 13, 51476, 51476, 407, 341, 1985, 365, 3175, 3565, 11, 597, 51620, 51620, 1355, 286, 393, 2464, 300, 264, 2445, 295, 2031, 16, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.4868973147484564, "compression_ratio": 1.321917808219178, "no_speech_prob": 3.307514191419614e-07}, {"id": 2249, "seek": 700268, "start": 7010.92, "end": 7017.52, "text": " of this convex function applied to h of z.", "tokens": [50364, 467, 311, 1570, 813, 420, 2681, 281, 2408, 670, 710, 9505, 89, 50776, 50776, 295, 341, 42432, 2445, 6456, 281, 276, 295, 710, 13, 51106, 51306, 2264, 11, 300, 311, 508, 1385, 266, 311, 16970, 13, 51476, 51476, 407, 341, 1985, 365, 3175, 3565, 11, 597, 51620, 51620, 1355, 286, 393, 2464, 300, 264, 2445, 295, 2031, 16, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.4868973147484564, "compression_ratio": 1.321917808219178, "no_speech_prob": 3.307514191419614e-07}, {"id": 2250, "seek": 700268, "start": 7021.52, "end": 7024.92, "text": " OK, that's Jetson's inequality.", "tokens": [50364, 467, 311, 1570, 813, 420, 2681, 281, 2408, 670, 710, 9505, 89, 50776, 50776, 295, 341, 42432, 2445, 6456, 281, 276, 295, 710, 13, 51106, 51306, 2264, 11, 300, 311, 508, 1385, 266, 311, 16970, 13, 51476, 51476, 407, 341, 1985, 365, 3175, 3565, 11, 597, 51620, 51620, 1355, 286, 393, 2464, 300, 264, 2445, 295, 2031, 16, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.4868973147484564, "compression_ratio": 1.321917808219178, "no_speech_prob": 3.307514191419614e-07}, {"id": 2251, "seek": 700268, "start": 7024.92, "end": 7027.8, "text": " So this works with minus log, which", "tokens": [50364, 467, 311, 1570, 813, 420, 2681, 281, 2408, 670, 710, 9505, 89, 50776, 50776, 295, 341, 42432, 2445, 6456, 281, 276, 295, 710, 13, 51106, 51306, 2264, 11, 300, 311, 508, 1385, 266, 311, 16970, 13, 51476, 51476, 407, 341, 1985, 365, 3175, 3565, 11, 597, 51620, 51620, 1355, 286, 393, 2464, 300, 264, 2445, 295, 2031, 16, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.4868973147484564, "compression_ratio": 1.321917808219178, "no_speech_prob": 3.307514191419614e-07}, {"id": 2252, "seek": 700268, "start": 7027.8, "end": 7032.64, "text": " means I can write that the function of x1", "tokens": [50364, 467, 311, 1570, 813, 420, 2681, 281, 2408, 670, 710, 9505, 89, 50776, 50776, 295, 341, 42432, 2445, 6456, 281, 276, 295, 710, 13, 51106, 51306, 2264, 11, 300, 311, 508, 1385, 266, 311, 16970, 13, 51476, 51476, 407, 341, 1985, 365, 3175, 3565, 11, 597, 51620, 51620, 1355, 286, 393, 2464, 300, 264, 2445, 295, 2031, 16, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.4868973147484564, "compression_ratio": 1.321917808219178, "no_speech_prob": 3.307514191419614e-07}, {"id": 2253, "seek": 703264, "start": 7032.64, "end": 7037.68, "text": " my objective function here is less than minus 1 over beta,", "tokens": [50364, 452, 10024, 2445, 510, 307, 1570, 813, 3175, 502, 670, 9861, 11, 50616, 50616, 597, 286, 478, 516, 281, 767, 829, 1854, 13, 50846, 50846, 286, 747, 341, 646, 13, 50890, 51162, 467, 311, 516, 281, 312, 1570, 813, 2408, 670, 710, 295, 9505, 295, 710, 1413, 3175, 502, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.16129932763441554, "compression_ratio": 1.3692307692307693, "no_speech_prob": 1.9333415366418194e-06}, {"id": 2254, "seek": 703264, "start": 7037.68, "end": 7042.280000000001, "text": " which I'm going to actually put inside.", "tokens": [50364, 452, 10024, 2445, 510, 307, 1570, 813, 3175, 502, 670, 9861, 11, 50616, 50616, 597, 286, 478, 516, 281, 767, 829, 1854, 13, 50846, 50846, 286, 747, 341, 646, 13, 50890, 51162, 467, 311, 516, 281, 312, 1570, 813, 2408, 670, 710, 295, 9505, 295, 710, 1413, 3175, 502, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.16129932763441554, "compression_ratio": 1.3692307692307693, "no_speech_prob": 1.9333415366418194e-06}, {"id": 2255, "seek": 703264, "start": 7042.280000000001, "end": 7043.160000000001, "text": " I take this back.", "tokens": [50364, 452, 10024, 2445, 510, 307, 1570, 813, 3175, 502, 670, 9861, 11, 50616, 50616, 597, 286, 478, 516, 281, 767, 829, 1854, 13, 50846, 50846, 286, 747, 341, 646, 13, 50890, 51162, 467, 311, 516, 281, 312, 1570, 813, 2408, 670, 710, 295, 9505, 295, 710, 1413, 3175, 502, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.16129932763441554, "compression_ratio": 1.3692307692307693, "no_speech_prob": 1.9333415366418194e-06}, {"id": 2256, "seek": 703264, "start": 7048.6, "end": 7058.160000000001, "text": " It's going to be less than sum over z of q of z times minus 1", "tokens": [50364, 452, 10024, 2445, 510, 307, 1570, 813, 3175, 502, 670, 9861, 11, 50616, 50616, 597, 286, 478, 516, 281, 767, 829, 1854, 13, 50846, 50846, 286, 747, 341, 646, 13, 50890, 51162, 467, 311, 516, 281, 312, 1570, 813, 2408, 670, 710, 295, 9505, 295, 710, 1413, 3175, 502, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.16129932763441554, "compression_ratio": 1.3692307692307693, "no_speech_prob": 1.9333415366418194e-06}, {"id": 2257, "seek": 705816, "start": 7058.16, "end": 7068.88, "text": " over beta log e to the minus beta l of xyz divided by q of z.", "tokens": [50364, 670, 9861, 3565, 308, 281, 264, 3175, 9861, 287, 295, 2031, 37433, 6666, 538, 9505, 295, 710, 13, 50900, 51066, 2264, 11, 2745, 11, 264, 3175, 502, 670, 9861, 3565, 21510, 3175, 9861, 51512, 51512, 10373, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.2967456026775081, "compression_ratio": 1.3711340206185567, "no_speech_prob": 8.800196155789308e-06}, {"id": 2258, "seek": 705816, "start": 7072.2, "end": 7081.12, "text": " OK, obviously, the minus 1 over beta log exponential minus beta", "tokens": [50364, 670, 9861, 3565, 308, 281, 264, 3175, 9861, 287, 295, 2031, 37433, 6666, 538, 9505, 295, 710, 13, 50900, 51066, 2264, 11, 2745, 11, 264, 3175, 502, 670, 9861, 3565, 21510, 3175, 9861, 51512, 51512, 10373, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.2967456026775081, "compression_ratio": 1.3711340206185567, "no_speech_prob": 8.800196155789308e-06}, {"id": 2259, "seek": 705816, "start": 7081.12, "end": 7083.68, "text": " cancel.", "tokens": [50364, 670, 9861, 3565, 308, 281, 264, 3175, 9861, 287, 295, 2031, 37433, 6666, 538, 9505, 295, 710, 13, 50900, 51066, 2264, 11, 2745, 11, 264, 3175, 502, 670, 9861, 3565, 21510, 3175, 9861, 51512, 51512, 10373, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.2967456026775081, "compression_ratio": 1.3711340206185567, "no_speech_prob": 8.800196155789308e-06}, {"id": 2260, "seek": 708368, "start": 7083.68, "end": 7093.64, "text": " So what I get is sum over z q of z l of xyz.", "tokens": [50364, 407, 437, 286, 483, 307, 2408, 670, 710, 9505, 295, 710, 287, 295, 2031, 37433, 13, 50862, 50862, 407, 300, 311, 445, 264, 5176, 2158, 295, 287, 51038, 51038, 18247, 2980, 670, 264, 7316, 9505, 295, 710, 13, 51182, 51182, 400, 550, 286, 483, 257, 1150, 1433, 13, 51244, 51484, 400, 264, 1150, 1433, 307, 264, 3671, 3565, 11, 502, 670, 9861, 11, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.13689869553295533, "compression_ratio": 1.4609929078014185, "no_speech_prob": 1.1188972166564781e-06}, {"id": 2261, "seek": 708368, "start": 7093.64, "end": 7097.16, "text": " So that's just the expected value of l", "tokens": [50364, 407, 437, 286, 483, 307, 2408, 670, 710, 9505, 295, 710, 287, 295, 2031, 37433, 13, 50862, 50862, 407, 300, 311, 445, 264, 5176, 2158, 295, 287, 51038, 51038, 18247, 2980, 670, 264, 7316, 9505, 295, 710, 13, 51182, 51182, 400, 550, 286, 483, 257, 1150, 1433, 13, 51244, 51484, 400, 264, 1150, 1433, 307, 264, 3671, 3565, 11, 502, 670, 9861, 11, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.13689869553295533, "compression_ratio": 1.4609929078014185, "no_speech_prob": 1.1188972166564781e-06}, {"id": 2262, "seek": 708368, "start": 7097.16, "end": 7100.04, "text": " averaged over the distribution q of z.", "tokens": [50364, 407, 437, 286, 483, 307, 2408, 670, 710, 9505, 295, 710, 287, 295, 2031, 37433, 13, 50862, 50862, 407, 300, 311, 445, 264, 5176, 2158, 295, 287, 51038, 51038, 18247, 2980, 670, 264, 7316, 9505, 295, 710, 13, 51182, 51182, 400, 550, 286, 483, 257, 1150, 1433, 13, 51244, 51484, 400, 264, 1150, 1433, 307, 264, 3671, 3565, 11, 502, 670, 9861, 11, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.13689869553295533, "compression_ratio": 1.4609929078014185, "no_speech_prob": 1.1188972166564781e-06}, {"id": 2263, "seek": 708368, "start": 7100.04, "end": 7101.280000000001, "text": " And then I get a second term.", "tokens": [50364, 407, 437, 286, 483, 307, 2408, 670, 710, 9505, 295, 710, 287, 295, 2031, 37433, 13, 50862, 50862, 407, 300, 311, 445, 264, 5176, 2158, 295, 287, 51038, 51038, 18247, 2980, 670, 264, 7316, 9505, 295, 710, 13, 51182, 51182, 400, 550, 286, 483, 257, 1150, 1433, 13, 51244, 51484, 400, 264, 1150, 1433, 307, 264, 3671, 3565, 11, 502, 670, 9861, 11, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.13689869553295533, "compression_ratio": 1.4609929078014185, "no_speech_prob": 1.1188972166564781e-06}, {"id": 2264, "seek": 708368, "start": 7106.08, "end": 7111.400000000001, "text": " And the second term is the negative log, 1 over beta,", "tokens": [50364, 407, 437, 286, 483, 307, 2408, 670, 710, 9505, 295, 710, 287, 295, 2031, 37433, 13, 50862, 50862, 407, 300, 311, 445, 264, 5176, 2158, 295, 287, 51038, 51038, 18247, 2980, 670, 264, 7316, 9505, 295, 710, 13, 51182, 51182, 400, 550, 286, 483, 257, 1150, 1433, 13, 51244, 51484, 400, 264, 1150, 1433, 307, 264, 3671, 3565, 11, 502, 670, 9861, 11, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.13689869553295533, "compression_ratio": 1.4609929078014185, "no_speech_prob": 1.1188972166564781e-06}, {"id": 2265, "seek": 711140, "start": 7111.4, "end": 7114.12, "text": " the negative log of q of z.", "tokens": [50364, 264, 3671, 3565, 295, 9505, 295, 710, 13, 50500, 50500, 583, 9505, 295, 710, 307, 257, 20687, 11, 370, 286, 478, 50628, 50628, 516, 281, 1565, 309, 281, 264, 1192, 13, 50710, 50710, 663, 311, 516, 281, 10373, 264, 3175, 502, 670, 9861, 13, 50820, 50820, 400, 370, 286, 478, 516, 281, 483, 746, 411, 1804, 502, 670, 9861, 51096, 51096, 3565, 9505, 295, 710, 13, 51206, 51388, 400, 286, 393, 2464, 341, 797, 382, 2408, 670, 710, 295, 9505, 295, 710, 287, 2031, 37433, 13, 51786], "temperature": 0.0, "avg_logprob": -0.14572996503851388, "compression_ratio": 1.606060606060606, "no_speech_prob": 1.459348936805327e-06}, {"id": 2266, "seek": 711140, "start": 7114.12, "end": 7116.679999999999, "text": " But q of z is a denominator, so I'm", "tokens": [50364, 264, 3671, 3565, 295, 9505, 295, 710, 13, 50500, 50500, 583, 9505, 295, 710, 307, 257, 20687, 11, 370, 286, 478, 50628, 50628, 516, 281, 1565, 309, 281, 264, 1192, 13, 50710, 50710, 663, 311, 516, 281, 10373, 264, 3175, 502, 670, 9861, 13, 50820, 50820, 400, 370, 286, 478, 516, 281, 483, 746, 411, 1804, 502, 670, 9861, 51096, 51096, 3565, 9505, 295, 710, 13, 51206, 51388, 400, 286, 393, 2464, 341, 797, 382, 2408, 670, 710, 295, 9505, 295, 710, 287, 2031, 37433, 13, 51786], "temperature": 0.0, "avg_logprob": -0.14572996503851388, "compression_ratio": 1.606060606060606, "no_speech_prob": 1.459348936805327e-06}, {"id": 2267, "seek": 711140, "start": 7116.679999999999, "end": 7118.32, "text": " going to bring it to the top.", "tokens": [50364, 264, 3671, 3565, 295, 9505, 295, 710, 13, 50500, 50500, 583, 9505, 295, 710, 307, 257, 20687, 11, 370, 286, 478, 50628, 50628, 516, 281, 1565, 309, 281, 264, 1192, 13, 50710, 50710, 663, 311, 516, 281, 10373, 264, 3175, 502, 670, 9861, 13, 50820, 50820, 400, 370, 286, 478, 516, 281, 483, 746, 411, 1804, 502, 670, 9861, 51096, 51096, 3565, 9505, 295, 710, 13, 51206, 51388, 400, 286, 393, 2464, 341, 797, 382, 2408, 670, 710, 295, 9505, 295, 710, 287, 2031, 37433, 13, 51786], "temperature": 0.0, "avg_logprob": -0.14572996503851388, "compression_ratio": 1.606060606060606, "no_speech_prob": 1.459348936805327e-06}, {"id": 2268, "seek": 711140, "start": 7118.32, "end": 7120.5199999999995, "text": " That's going to cancel the minus 1 over beta.", "tokens": [50364, 264, 3671, 3565, 295, 9505, 295, 710, 13, 50500, 50500, 583, 9505, 295, 710, 307, 257, 20687, 11, 370, 286, 478, 50628, 50628, 516, 281, 1565, 309, 281, 264, 1192, 13, 50710, 50710, 663, 311, 516, 281, 10373, 264, 3175, 502, 670, 9861, 13, 50820, 50820, 400, 370, 286, 478, 516, 281, 483, 746, 411, 1804, 502, 670, 9861, 51096, 51096, 3565, 9505, 295, 710, 13, 51206, 51388, 400, 286, 393, 2464, 341, 797, 382, 2408, 670, 710, 295, 9505, 295, 710, 287, 2031, 37433, 13, 51786], "temperature": 0.0, "avg_logprob": -0.14572996503851388, "compression_ratio": 1.606060606060606, "no_speech_prob": 1.459348936805327e-06}, {"id": 2269, "seek": 711140, "start": 7120.5199999999995, "end": 7126.04, "text": " And so I'm going to get something like plus 1 over beta", "tokens": [50364, 264, 3671, 3565, 295, 9505, 295, 710, 13, 50500, 50500, 583, 9505, 295, 710, 307, 257, 20687, 11, 370, 286, 478, 50628, 50628, 516, 281, 1565, 309, 281, 264, 1192, 13, 50710, 50710, 663, 311, 516, 281, 10373, 264, 3175, 502, 670, 9861, 13, 50820, 50820, 400, 370, 286, 478, 516, 281, 483, 746, 411, 1804, 502, 670, 9861, 51096, 51096, 3565, 9505, 295, 710, 13, 51206, 51388, 400, 286, 393, 2464, 341, 797, 382, 2408, 670, 710, 295, 9505, 295, 710, 287, 2031, 37433, 13, 51786], "temperature": 0.0, "avg_logprob": -0.14572996503851388, "compression_ratio": 1.606060606060606, "no_speech_prob": 1.459348936805327e-06}, {"id": 2270, "seek": 711140, "start": 7126.04, "end": 7128.24, "text": " log q of z.", "tokens": [50364, 264, 3671, 3565, 295, 9505, 295, 710, 13, 50500, 50500, 583, 9505, 295, 710, 307, 257, 20687, 11, 370, 286, 478, 50628, 50628, 516, 281, 1565, 309, 281, 264, 1192, 13, 50710, 50710, 663, 311, 516, 281, 10373, 264, 3175, 502, 670, 9861, 13, 50820, 50820, 400, 370, 286, 478, 516, 281, 483, 746, 411, 1804, 502, 670, 9861, 51096, 51096, 3565, 9505, 295, 710, 13, 51206, 51388, 400, 286, 393, 2464, 341, 797, 382, 2408, 670, 710, 295, 9505, 295, 710, 287, 2031, 37433, 13, 51786], "temperature": 0.0, "avg_logprob": -0.14572996503851388, "compression_ratio": 1.606060606060606, "no_speech_prob": 1.459348936805327e-06}, {"id": 2271, "seek": 712824, "start": 7128.24, "end": 7142.8, "text": " And I can write this again as sum over z of q of z l xyz", "tokens": [50364, 400, 286, 393, 2464, 341, 797, 382, 2408, 670, 710, 295, 9505, 295, 710, 287, 2031, 37433, 51092, 51092, 1804, 2408, 670, 710, 502, 670, 9861, 9505, 295, 710, 3565, 9505, 295, 710, 13, 51650], "temperature": 0.0, "avg_logprob": -0.21067556175025734, "compression_ratio": 1.271604938271605, "no_speech_prob": 3.844536877295468e-06}, {"id": 2272, "seek": 714280, "start": 7142.8, "end": 7161.08, "text": " plus sum over z 1 over beta q of z log q of z.", "tokens": [50364, 1804, 2408, 670, 710, 502, 670, 9861, 9505, 295, 710, 3565, 9505, 295, 710, 13, 51278, 51278, 639, 307, 264, 4274, 4470, 2281, 11, 2035, 309, 307, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.2395481914281845, "compression_ratio": 1.130952380952381, "no_speech_prob": 4.222274583298713e-06}, {"id": 2273, "seek": 714280, "start": 7161.08, "end": 7170.2, "text": " This is the average loss energy, whatever it is.", "tokens": [50364, 1804, 2408, 670, 710, 502, 670, 9861, 9505, 295, 710, 3565, 9505, 295, 710, 13, 51278, 51278, 639, 307, 264, 4274, 4470, 2281, 11, 2035, 309, 307, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.2395481914281845, "compression_ratio": 1.130952380952381, "no_speech_prob": 4.222274583298713e-06}, {"id": 2274, "seek": 717020, "start": 7170.2, "end": 7173.04, "text": " Let's call it energy.", "tokens": [50364, 961, 311, 818, 309, 2281, 13, 50506, 50506, 400, 341, 307, 3175, 502, 670, 9861, 1413, 264, 30867, 295, 9505, 13, 51202, 51390, 440, 30867, 295, 257, 7316, 307, 3175, 2408, 51528, 51528, 670, 264, 4974, 7006, 295, 7316, 3565, 7316, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.14333287529323413, "compression_ratio": 1.5, "no_speech_prob": 5.860550572833745e-06}, {"id": 2275, "seek": 717020, "start": 7173.04, "end": 7186.96, "text": " And this is minus 1 over beta times the entropy of q.", "tokens": [50364, 961, 311, 818, 309, 2281, 13, 50506, 50506, 400, 341, 307, 3175, 502, 670, 9861, 1413, 264, 30867, 295, 9505, 13, 51202, 51390, 440, 30867, 295, 257, 7316, 307, 3175, 2408, 51528, 51528, 670, 264, 4974, 7006, 295, 7316, 3565, 7316, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.14333287529323413, "compression_ratio": 1.5, "no_speech_prob": 5.860550572833745e-06}, {"id": 2276, "seek": 717020, "start": 7190.72, "end": 7193.48, "text": " The entropy of a distribution is minus sum", "tokens": [50364, 961, 311, 818, 309, 2281, 13, 50506, 50506, 400, 341, 307, 3175, 502, 670, 9861, 1413, 264, 30867, 295, 9505, 13, 51202, 51390, 440, 30867, 295, 257, 7316, 307, 3175, 2408, 51528, 51528, 670, 264, 4974, 7006, 295, 7316, 3565, 7316, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.14333287529323413, "compression_ratio": 1.5, "no_speech_prob": 5.860550572833745e-06}, {"id": 2277, "seek": 717020, "start": 7193.48, "end": 7199.679999999999, "text": " over the random variable of distribution log distribution.", "tokens": [50364, 961, 311, 818, 309, 2281, 13, 50506, 50506, 400, 341, 307, 3175, 502, 670, 9861, 1413, 264, 30867, 295, 9505, 13, 51202, 51390, 440, 30867, 295, 257, 7316, 307, 3175, 2408, 51528, 51528, 670, 264, 4974, 7006, 295, 7316, 3565, 7316, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.14333287529323413, "compression_ratio": 1.5, "no_speech_prob": 5.860550572833745e-06}, {"id": 2278, "seek": 719968, "start": 7199.68, "end": 7202.56, "text": " So this is minus 1 over beta e entropy.", "tokens": [50364, 407, 341, 307, 3175, 502, 670, 9861, 308, 30867, 13, 50508, 50508, 407, 437, 775, 300, 914, 30, 50558, 50558, 708, 309, 1355, 307, 300, 286, 362, 364, 6597, 5472, 322, 452, 1036, 2445, 50742, 50742, 300, 286, 528, 281, 17522, 11, 287, 295, 2031, 88, 11, 50916, 50916, 337, 452, 2281, 300, 286, 528, 281, 17522, 11, 2035, 309, 307, 13, 51044, 51044, 8541, 2445, 309, 307, 286, 528, 281, 17522, 13, 51134, 51134, 286, 362, 364, 6597, 5472, 322, 309, 586, 13, 51228, 51228, 400, 341, 6597, 5472, 307, 264, 2408, 295, 732, 2115, 13, 51418, 51418, 1485, 307, 264, 4274, 295, 264, 2281, 286, 483, 538, 1936, 21179, 51722, 51722, 264, 48994, 7006, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1643594946743043, "compression_ratio": 1.854625550660793, "no_speech_prob": 8.013034857867751e-06}, {"id": 2279, "seek": 719968, "start": 7202.56, "end": 7203.56, "text": " So what does that mean?", "tokens": [50364, 407, 341, 307, 3175, 502, 670, 9861, 308, 30867, 13, 50508, 50508, 407, 437, 775, 300, 914, 30, 50558, 50558, 708, 309, 1355, 307, 300, 286, 362, 364, 6597, 5472, 322, 452, 1036, 2445, 50742, 50742, 300, 286, 528, 281, 17522, 11, 287, 295, 2031, 88, 11, 50916, 50916, 337, 452, 2281, 300, 286, 528, 281, 17522, 11, 2035, 309, 307, 13, 51044, 51044, 8541, 2445, 309, 307, 286, 528, 281, 17522, 13, 51134, 51134, 286, 362, 364, 6597, 5472, 322, 309, 586, 13, 51228, 51228, 400, 341, 6597, 5472, 307, 264, 2408, 295, 732, 2115, 13, 51418, 51418, 1485, 307, 264, 4274, 295, 264, 2281, 286, 483, 538, 1936, 21179, 51722, 51722, 264, 48994, 7006, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1643594946743043, "compression_ratio": 1.854625550660793, "no_speech_prob": 8.013034857867751e-06}, {"id": 2280, "seek": 719968, "start": 7203.56, "end": 7207.240000000001, "text": " What it means is that I have an upper bound on my last function", "tokens": [50364, 407, 341, 307, 3175, 502, 670, 9861, 308, 30867, 13, 50508, 50508, 407, 437, 775, 300, 914, 30, 50558, 50558, 708, 309, 1355, 307, 300, 286, 362, 364, 6597, 5472, 322, 452, 1036, 2445, 50742, 50742, 300, 286, 528, 281, 17522, 11, 287, 295, 2031, 88, 11, 50916, 50916, 337, 452, 2281, 300, 286, 528, 281, 17522, 11, 2035, 309, 307, 13, 51044, 51044, 8541, 2445, 309, 307, 286, 528, 281, 17522, 13, 51134, 51134, 286, 362, 364, 6597, 5472, 322, 309, 586, 13, 51228, 51228, 400, 341, 6597, 5472, 307, 264, 2408, 295, 732, 2115, 13, 51418, 51418, 1485, 307, 264, 4274, 295, 264, 2281, 286, 483, 538, 1936, 21179, 51722, 51722, 264, 48994, 7006, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1643594946743043, "compression_ratio": 1.854625550660793, "no_speech_prob": 8.013034857867751e-06}, {"id": 2281, "seek": 719968, "start": 7207.240000000001, "end": 7210.72, "text": " that I want to minimize, l of xy,", "tokens": [50364, 407, 341, 307, 3175, 502, 670, 9861, 308, 30867, 13, 50508, 50508, 407, 437, 775, 300, 914, 30, 50558, 50558, 708, 309, 1355, 307, 300, 286, 362, 364, 6597, 5472, 322, 452, 1036, 2445, 50742, 50742, 300, 286, 528, 281, 17522, 11, 287, 295, 2031, 88, 11, 50916, 50916, 337, 452, 2281, 300, 286, 528, 281, 17522, 11, 2035, 309, 307, 13, 51044, 51044, 8541, 2445, 309, 307, 286, 528, 281, 17522, 13, 51134, 51134, 286, 362, 364, 6597, 5472, 322, 309, 586, 13, 51228, 51228, 400, 341, 6597, 5472, 307, 264, 2408, 295, 732, 2115, 13, 51418, 51418, 1485, 307, 264, 4274, 295, 264, 2281, 286, 483, 538, 1936, 21179, 51722, 51722, 264, 48994, 7006, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1643594946743043, "compression_ratio": 1.854625550660793, "no_speech_prob": 8.013034857867751e-06}, {"id": 2282, "seek": 719968, "start": 7210.72, "end": 7213.280000000001, "text": " for my energy that I want to minimize, whatever it is.", "tokens": [50364, 407, 341, 307, 3175, 502, 670, 9861, 308, 30867, 13, 50508, 50508, 407, 437, 775, 300, 914, 30, 50558, 50558, 708, 309, 1355, 307, 300, 286, 362, 364, 6597, 5472, 322, 452, 1036, 2445, 50742, 50742, 300, 286, 528, 281, 17522, 11, 287, 295, 2031, 88, 11, 50916, 50916, 337, 452, 2281, 300, 286, 528, 281, 17522, 11, 2035, 309, 307, 13, 51044, 51044, 8541, 2445, 309, 307, 286, 528, 281, 17522, 13, 51134, 51134, 286, 362, 364, 6597, 5472, 322, 309, 586, 13, 51228, 51228, 400, 341, 6597, 5472, 307, 264, 2408, 295, 732, 2115, 13, 51418, 51418, 1485, 307, 264, 4274, 295, 264, 2281, 286, 483, 538, 1936, 21179, 51722, 51722, 264, 48994, 7006, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1643594946743043, "compression_ratio": 1.854625550660793, "no_speech_prob": 8.013034857867751e-06}, {"id": 2283, "seek": 719968, "start": 7213.280000000001, "end": 7215.08, "text": " Whatever function it is I want to minimize.", "tokens": [50364, 407, 341, 307, 3175, 502, 670, 9861, 308, 30867, 13, 50508, 50508, 407, 437, 775, 300, 914, 30, 50558, 50558, 708, 309, 1355, 307, 300, 286, 362, 364, 6597, 5472, 322, 452, 1036, 2445, 50742, 50742, 300, 286, 528, 281, 17522, 11, 287, 295, 2031, 88, 11, 50916, 50916, 337, 452, 2281, 300, 286, 528, 281, 17522, 11, 2035, 309, 307, 13, 51044, 51044, 8541, 2445, 309, 307, 286, 528, 281, 17522, 13, 51134, 51134, 286, 362, 364, 6597, 5472, 322, 309, 586, 13, 51228, 51228, 400, 341, 6597, 5472, 307, 264, 2408, 295, 732, 2115, 13, 51418, 51418, 1485, 307, 264, 4274, 295, 264, 2281, 286, 483, 538, 1936, 21179, 51722, 51722, 264, 48994, 7006, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1643594946743043, "compression_ratio": 1.854625550660793, "no_speech_prob": 8.013034857867751e-06}, {"id": 2284, "seek": 719968, "start": 7215.08, "end": 7216.96, "text": " I have an upper bound on it now.", "tokens": [50364, 407, 341, 307, 3175, 502, 670, 9861, 308, 30867, 13, 50508, 50508, 407, 437, 775, 300, 914, 30, 50558, 50558, 708, 309, 1355, 307, 300, 286, 362, 364, 6597, 5472, 322, 452, 1036, 2445, 50742, 50742, 300, 286, 528, 281, 17522, 11, 287, 295, 2031, 88, 11, 50916, 50916, 337, 452, 2281, 300, 286, 528, 281, 17522, 11, 2035, 309, 307, 13, 51044, 51044, 8541, 2445, 309, 307, 286, 528, 281, 17522, 13, 51134, 51134, 286, 362, 364, 6597, 5472, 322, 309, 586, 13, 51228, 51228, 400, 341, 6597, 5472, 307, 264, 2408, 295, 732, 2115, 13, 51418, 51418, 1485, 307, 264, 4274, 295, 264, 2281, 286, 483, 538, 1936, 21179, 51722, 51722, 264, 48994, 7006, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1643594946743043, "compression_ratio": 1.854625550660793, "no_speech_prob": 8.013034857867751e-06}, {"id": 2285, "seek": 719968, "start": 7216.96, "end": 7220.76, "text": " And this upper bound is the sum of two terms.", "tokens": [50364, 407, 341, 307, 3175, 502, 670, 9861, 308, 30867, 13, 50508, 50508, 407, 437, 775, 300, 914, 30, 50558, 50558, 708, 309, 1355, 307, 300, 286, 362, 364, 6597, 5472, 322, 452, 1036, 2445, 50742, 50742, 300, 286, 528, 281, 17522, 11, 287, 295, 2031, 88, 11, 50916, 50916, 337, 452, 2281, 300, 286, 528, 281, 17522, 11, 2035, 309, 307, 13, 51044, 51044, 8541, 2445, 309, 307, 286, 528, 281, 17522, 13, 51134, 51134, 286, 362, 364, 6597, 5472, 322, 309, 586, 13, 51228, 51228, 400, 341, 6597, 5472, 307, 264, 2408, 295, 732, 2115, 13, 51418, 51418, 1485, 307, 264, 4274, 295, 264, 2281, 286, 483, 538, 1936, 21179, 51722, 51722, 264, 48994, 7006, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1643594946743043, "compression_ratio": 1.854625550660793, "no_speech_prob": 8.013034857867751e-06}, {"id": 2286, "seek": 719968, "start": 7220.76, "end": 7226.84, "text": " One is the average of the energy I get by basically sampling", "tokens": [50364, 407, 341, 307, 3175, 502, 670, 9861, 308, 30867, 13, 50508, 50508, 407, 437, 775, 300, 914, 30, 50558, 50558, 708, 309, 1355, 307, 300, 286, 362, 364, 6597, 5472, 322, 452, 1036, 2445, 50742, 50742, 300, 286, 528, 281, 17522, 11, 287, 295, 2031, 88, 11, 50916, 50916, 337, 452, 2281, 300, 286, 528, 281, 17522, 11, 2035, 309, 307, 13, 51044, 51044, 8541, 2445, 309, 307, 286, 528, 281, 17522, 13, 51134, 51134, 286, 362, 364, 6597, 5472, 322, 309, 586, 13, 51228, 51228, 400, 341, 6597, 5472, 307, 264, 2408, 295, 732, 2115, 13, 51418, 51418, 1485, 307, 264, 4274, 295, 264, 2281, 286, 483, 538, 1936, 21179, 51722, 51722, 264, 48994, 7006, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1643594946743043, "compression_ratio": 1.854625550660793, "no_speech_prob": 8.013034857867751e-06}, {"id": 2287, "seek": 719968, "start": 7226.84, "end": 7229.52, "text": " the latent variable.", "tokens": [50364, 407, 341, 307, 3175, 502, 670, 9861, 308, 30867, 13, 50508, 50508, 407, 437, 775, 300, 914, 30, 50558, 50558, 708, 309, 1355, 307, 300, 286, 362, 364, 6597, 5472, 322, 452, 1036, 2445, 50742, 50742, 300, 286, 528, 281, 17522, 11, 287, 295, 2031, 88, 11, 50916, 50916, 337, 452, 2281, 300, 286, 528, 281, 17522, 11, 2035, 309, 307, 13, 51044, 51044, 8541, 2445, 309, 307, 286, 528, 281, 17522, 13, 51134, 51134, 286, 362, 364, 6597, 5472, 322, 309, 586, 13, 51228, 51228, 400, 341, 6597, 5472, 307, 264, 2408, 295, 732, 2115, 13, 51418, 51418, 1485, 307, 264, 4274, 295, 264, 2281, 286, 483, 538, 1936, 21179, 51722, 51722, 264, 48994, 7006, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1643594946743043, "compression_ratio": 1.854625550660793, "no_speech_prob": 8.013034857867751e-06}, {"id": 2288, "seek": 722952, "start": 7229.52, "end": 7231.280000000001, "text": " So I have a system with a latent variable.", "tokens": [50364, 407, 286, 362, 257, 1185, 365, 257, 48994, 7006, 13, 50452, 50452, 286, 6889, 512, 2158, 295, 264, 48994, 7006, 50558, 50558, 4650, 281, 512, 7316, 9505, 11, 597, 11, 295, 1164, 11, 286, 50692, 50692, 1888, 257, 9505, 490, 597, 286, 393, 3612, 6889, 13, 50852, 50852, 286, 393, 2826, 9505, 2035, 286, 528, 13, 50964, 50964, 8541, 286, 528, 11, 558, 30, 51066, 51066, 407, 286, 1888, 257, 9505, 11, 39148, 11, 2035, 13, 51294, 51294, 400, 286, 1888, 257, 710, 4650, 281, 300, 7316, 13, 51418, 51418, 400, 286, 14722, 264, 5176, 2158, 295, 264, 2445, 51628, 51628, 286, 528, 281, 17522, 365, 3104, 281, 300, 9505, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1299176672230596, "compression_ratio": 1.8303571428571428, "no_speech_prob": 3.3725493267411366e-05}, {"id": 2289, "seek": 722952, "start": 7231.280000000001, "end": 7233.400000000001, "text": " I sample some value of the latent variable", "tokens": [50364, 407, 286, 362, 257, 1185, 365, 257, 48994, 7006, 13, 50452, 50452, 286, 6889, 512, 2158, 295, 264, 48994, 7006, 50558, 50558, 4650, 281, 512, 7316, 9505, 11, 597, 11, 295, 1164, 11, 286, 50692, 50692, 1888, 257, 9505, 490, 597, 286, 393, 3612, 6889, 13, 50852, 50852, 286, 393, 2826, 9505, 2035, 286, 528, 13, 50964, 50964, 8541, 286, 528, 11, 558, 30, 51066, 51066, 407, 286, 1888, 257, 9505, 11, 39148, 11, 2035, 13, 51294, 51294, 400, 286, 1888, 257, 710, 4650, 281, 300, 7316, 13, 51418, 51418, 400, 286, 14722, 264, 5176, 2158, 295, 264, 2445, 51628, 51628, 286, 528, 281, 17522, 365, 3104, 281, 300, 9505, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1299176672230596, "compression_ratio": 1.8303571428571428, "no_speech_prob": 3.3725493267411366e-05}, {"id": 2290, "seek": 722952, "start": 7233.400000000001, "end": 7236.080000000001, "text": " according to some distribution q, which, of course, I", "tokens": [50364, 407, 286, 362, 257, 1185, 365, 257, 48994, 7006, 13, 50452, 50452, 286, 6889, 512, 2158, 295, 264, 48994, 7006, 50558, 50558, 4650, 281, 512, 7316, 9505, 11, 597, 11, 295, 1164, 11, 286, 50692, 50692, 1888, 257, 9505, 490, 597, 286, 393, 3612, 6889, 13, 50852, 50852, 286, 393, 2826, 9505, 2035, 286, 528, 13, 50964, 50964, 8541, 286, 528, 11, 558, 30, 51066, 51066, 407, 286, 1888, 257, 9505, 11, 39148, 11, 2035, 13, 51294, 51294, 400, 286, 1888, 257, 710, 4650, 281, 300, 7316, 13, 51418, 51418, 400, 286, 14722, 264, 5176, 2158, 295, 264, 2445, 51628, 51628, 286, 528, 281, 17522, 365, 3104, 281, 300, 9505, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1299176672230596, "compression_ratio": 1.8303571428571428, "no_speech_prob": 3.3725493267411366e-05}, {"id": 2291, "seek": 722952, "start": 7236.080000000001, "end": 7239.280000000001, "text": " pick a q from which I can easily sample.", "tokens": [50364, 407, 286, 362, 257, 1185, 365, 257, 48994, 7006, 13, 50452, 50452, 286, 6889, 512, 2158, 295, 264, 48994, 7006, 50558, 50558, 4650, 281, 512, 7316, 9505, 11, 597, 11, 295, 1164, 11, 286, 50692, 50692, 1888, 257, 9505, 490, 597, 286, 393, 3612, 6889, 13, 50852, 50852, 286, 393, 2826, 9505, 2035, 286, 528, 13, 50964, 50964, 8541, 286, 528, 11, 558, 30, 51066, 51066, 407, 286, 1888, 257, 9505, 11, 39148, 11, 2035, 13, 51294, 51294, 400, 286, 1888, 257, 710, 4650, 281, 300, 7316, 13, 51418, 51418, 400, 286, 14722, 264, 5176, 2158, 295, 264, 2445, 51628, 51628, 286, 528, 281, 17522, 365, 3104, 281, 300, 9505, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1299176672230596, "compression_ratio": 1.8303571428571428, "no_speech_prob": 3.3725493267411366e-05}, {"id": 2292, "seek": 722952, "start": 7239.280000000001, "end": 7241.52, "text": " I can choose q whatever I want.", "tokens": [50364, 407, 286, 362, 257, 1185, 365, 257, 48994, 7006, 13, 50452, 50452, 286, 6889, 512, 2158, 295, 264, 48994, 7006, 50558, 50558, 4650, 281, 512, 7316, 9505, 11, 597, 11, 295, 1164, 11, 286, 50692, 50692, 1888, 257, 9505, 490, 597, 286, 393, 3612, 6889, 13, 50852, 50852, 286, 393, 2826, 9505, 2035, 286, 528, 13, 50964, 50964, 8541, 286, 528, 11, 558, 30, 51066, 51066, 407, 286, 1888, 257, 9505, 11, 39148, 11, 2035, 13, 51294, 51294, 400, 286, 1888, 257, 710, 4650, 281, 300, 7316, 13, 51418, 51418, 400, 286, 14722, 264, 5176, 2158, 295, 264, 2445, 51628, 51628, 286, 528, 281, 17522, 365, 3104, 281, 300, 9505, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1299176672230596, "compression_ratio": 1.8303571428571428, "no_speech_prob": 3.3725493267411366e-05}, {"id": 2293, "seek": 722952, "start": 7241.52, "end": 7243.56, "text": " Whatever I want, right?", "tokens": [50364, 407, 286, 362, 257, 1185, 365, 257, 48994, 7006, 13, 50452, 50452, 286, 6889, 512, 2158, 295, 264, 48994, 7006, 50558, 50558, 4650, 281, 512, 7316, 9505, 11, 597, 11, 295, 1164, 11, 286, 50692, 50692, 1888, 257, 9505, 490, 597, 286, 393, 3612, 6889, 13, 50852, 50852, 286, 393, 2826, 9505, 2035, 286, 528, 13, 50964, 50964, 8541, 286, 528, 11, 558, 30, 51066, 51066, 407, 286, 1888, 257, 9505, 11, 39148, 11, 2035, 13, 51294, 51294, 400, 286, 1888, 257, 710, 4650, 281, 300, 7316, 13, 51418, 51418, 400, 286, 14722, 264, 5176, 2158, 295, 264, 2445, 51628, 51628, 286, 528, 281, 17522, 365, 3104, 281, 300, 9505, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1299176672230596, "compression_ratio": 1.8303571428571428, "no_speech_prob": 3.3725493267411366e-05}, {"id": 2294, "seek": 722952, "start": 7243.56, "end": 7248.120000000001, "text": " So I pick a q, Gaussian, whatever.", "tokens": [50364, 407, 286, 362, 257, 1185, 365, 257, 48994, 7006, 13, 50452, 50452, 286, 6889, 512, 2158, 295, 264, 48994, 7006, 50558, 50558, 4650, 281, 512, 7316, 9505, 11, 597, 11, 295, 1164, 11, 286, 50692, 50692, 1888, 257, 9505, 490, 597, 286, 393, 3612, 6889, 13, 50852, 50852, 286, 393, 2826, 9505, 2035, 286, 528, 13, 50964, 50964, 8541, 286, 528, 11, 558, 30, 51066, 51066, 407, 286, 1888, 257, 9505, 11, 39148, 11, 2035, 13, 51294, 51294, 400, 286, 1888, 257, 710, 4650, 281, 300, 7316, 13, 51418, 51418, 400, 286, 14722, 264, 5176, 2158, 295, 264, 2445, 51628, 51628, 286, 528, 281, 17522, 365, 3104, 281, 300, 9505, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1299176672230596, "compression_ratio": 1.8303571428571428, "no_speech_prob": 3.3725493267411366e-05}, {"id": 2295, "seek": 722952, "start": 7248.120000000001, "end": 7250.6, "text": " And I pick a z according to that distribution.", "tokens": [50364, 407, 286, 362, 257, 1185, 365, 257, 48994, 7006, 13, 50452, 50452, 286, 6889, 512, 2158, 295, 264, 48994, 7006, 50558, 50558, 4650, 281, 512, 7316, 9505, 11, 597, 11, 295, 1164, 11, 286, 50692, 50692, 1888, 257, 9505, 490, 597, 286, 393, 3612, 6889, 13, 50852, 50852, 286, 393, 2826, 9505, 2035, 286, 528, 13, 50964, 50964, 8541, 286, 528, 11, 558, 30, 51066, 51066, 407, 286, 1888, 257, 9505, 11, 39148, 11, 2035, 13, 51294, 51294, 400, 286, 1888, 257, 710, 4650, 281, 300, 7316, 13, 51418, 51418, 400, 286, 14722, 264, 5176, 2158, 295, 264, 2445, 51628, 51628, 286, 528, 281, 17522, 365, 3104, 281, 300, 9505, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1299176672230596, "compression_ratio": 1.8303571428571428, "no_speech_prob": 3.3725493267411366e-05}, {"id": 2296, "seek": 722952, "start": 7250.6, "end": 7254.8, "text": " And I compute the expected value of the function", "tokens": [50364, 407, 286, 362, 257, 1185, 365, 257, 48994, 7006, 13, 50452, 50452, 286, 6889, 512, 2158, 295, 264, 48994, 7006, 50558, 50558, 4650, 281, 512, 7316, 9505, 11, 597, 11, 295, 1164, 11, 286, 50692, 50692, 1888, 257, 9505, 490, 597, 286, 393, 3612, 6889, 13, 50852, 50852, 286, 393, 2826, 9505, 2035, 286, 528, 13, 50964, 50964, 8541, 286, 528, 11, 558, 30, 51066, 51066, 407, 286, 1888, 257, 9505, 11, 39148, 11, 2035, 13, 51294, 51294, 400, 286, 1888, 257, 710, 4650, 281, 300, 7316, 13, 51418, 51418, 400, 286, 14722, 264, 5176, 2158, 295, 264, 2445, 51628, 51628, 286, 528, 281, 17522, 365, 3104, 281, 300, 9505, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1299176672230596, "compression_ratio": 1.8303571428571428, "no_speech_prob": 3.3725493267411366e-05}, {"id": 2297, "seek": 722952, "start": 7254.8, "end": 7258.240000000001, "text": " I want to minimize with respect to that q.", "tokens": [50364, 407, 286, 362, 257, 1185, 365, 257, 48994, 7006, 13, 50452, 50452, 286, 6889, 512, 2158, 295, 264, 48994, 7006, 50558, 50558, 4650, 281, 512, 7316, 9505, 11, 597, 11, 295, 1164, 11, 286, 50692, 50692, 1888, 257, 9505, 490, 597, 286, 393, 3612, 6889, 13, 50852, 50852, 286, 393, 2826, 9505, 2035, 286, 528, 13, 50964, 50964, 8541, 286, 528, 11, 558, 30, 51066, 51066, 407, 286, 1888, 257, 9505, 11, 39148, 11, 2035, 13, 51294, 51294, 400, 286, 1888, 257, 710, 4650, 281, 300, 7316, 13, 51418, 51418, 400, 286, 14722, 264, 5176, 2158, 295, 264, 2445, 51628, 51628, 286, 528, 281, 17522, 365, 3104, 281, 300, 9505, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1299176672230596, "compression_ratio": 1.8303571428571428, "no_speech_prob": 3.3725493267411366e-05}, {"id": 2298, "seek": 725824, "start": 7258.24, "end": 7260.84, "text": " And I can do this by just sampling z", "tokens": [50364, 400, 286, 393, 360, 341, 538, 445, 21179, 710, 50494, 50494, 490, 264, 9505, 7316, 293, 550, 15866, 50608, 50608, 264, 4274, 295, 264, 2445, 287, 300, 286, 12701, 382, 257, 1874, 13, 50874, 50874, 407, 300, 311, 264, 700, 1433, 13, 50962, 50962, 400, 550, 264, 1150, 1433, 307, 264, 30867, 295, 710, 13, 51110, 51110, 407, 437, 286, 643, 281, 360, 307, 1936, 1319, 452, 7316, 51336, 51336, 710, 294, 1270, 257, 636, 300, 264, 30867, 307, 5138, 1602, 13, 51476, 51476, 407, 498, 309, 311, 257, 39148, 11, 337, 1365, 11, 51546, 51546, 309, 1355, 286, 643, 281, 652, 264, 21977, 295, 710, 51652, 51652, 382, 2416, 382, 1944, 13, 51698, 51698, 583, 498, 286, 652, 309, 886, 2416, 11, 550, 264, 4274, 2281, 1433, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.11100909926674583, "compression_ratio": 1.75, "no_speech_prob": 4.222406914777821e-06}, {"id": 2299, "seek": 725824, "start": 7260.84, "end": 7263.12, "text": " from the q distribution and then computing", "tokens": [50364, 400, 286, 393, 360, 341, 538, 445, 21179, 710, 50494, 50494, 490, 264, 9505, 7316, 293, 550, 15866, 50608, 50608, 264, 4274, 295, 264, 2445, 287, 300, 286, 12701, 382, 257, 1874, 13, 50874, 50874, 407, 300, 311, 264, 700, 1433, 13, 50962, 50962, 400, 550, 264, 1150, 1433, 307, 264, 30867, 295, 710, 13, 51110, 51110, 407, 437, 286, 643, 281, 360, 307, 1936, 1319, 452, 7316, 51336, 51336, 710, 294, 1270, 257, 636, 300, 264, 30867, 307, 5138, 1602, 13, 51476, 51476, 407, 498, 309, 311, 257, 39148, 11, 337, 1365, 11, 51546, 51546, 309, 1355, 286, 643, 281, 652, 264, 21977, 295, 710, 51652, 51652, 382, 2416, 382, 1944, 13, 51698, 51698, 583, 498, 286, 652, 309, 886, 2416, 11, 550, 264, 4274, 2281, 1433, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.11100909926674583, "compression_ratio": 1.75, "no_speech_prob": 4.222406914777821e-06}, {"id": 2300, "seek": 725824, "start": 7263.12, "end": 7268.44, "text": " the average of the function l that I obtain as a result.", "tokens": [50364, 400, 286, 393, 360, 341, 538, 445, 21179, 710, 50494, 50494, 490, 264, 9505, 7316, 293, 550, 15866, 50608, 50608, 264, 4274, 295, 264, 2445, 287, 300, 286, 12701, 382, 257, 1874, 13, 50874, 50874, 407, 300, 311, 264, 700, 1433, 13, 50962, 50962, 400, 550, 264, 1150, 1433, 307, 264, 30867, 295, 710, 13, 51110, 51110, 407, 437, 286, 643, 281, 360, 307, 1936, 1319, 452, 7316, 51336, 51336, 710, 294, 1270, 257, 636, 300, 264, 30867, 307, 5138, 1602, 13, 51476, 51476, 407, 498, 309, 311, 257, 39148, 11, 337, 1365, 11, 51546, 51546, 309, 1355, 286, 643, 281, 652, 264, 21977, 295, 710, 51652, 51652, 382, 2416, 382, 1944, 13, 51698, 51698, 583, 498, 286, 652, 309, 886, 2416, 11, 550, 264, 4274, 2281, 1433, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.11100909926674583, "compression_ratio": 1.75, "no_speech_prob": 4.222406914777821e-06}, {"id": 2301, "seek": 725824, "start": 7268.44, "end": 7270.2, "text": " So that's the first term.", "tokens": [50364, 400, 286, 393, 360, 341, 538, 445, 21179, 710, 50494, 50494, 490, 264, 9505, 7316, 293, 550, 15866, 50608, 50608, 264, 4274, 295, 264, 2445, 287, 300, 286, 12701, 382, 257, 1874, 13, 50874, 50874, 407, 300, 311, 264, 700, 1433, 13, 50962, 50962, 400, 550, 264, 1150, 1433, 307, 264, 30867, 295, 710, 13, 51110, 51110, 407, 437, 286, 643, 281, 360, 307, 1936, 1319, 452, 7316, 51336, 51336, 710, 294, 1270, 257, 636, 300, 264, 30867, 307, 5138, 1602, 13, 51476, 51476, 407, 498, 309, 311, 257, 39148, 11, 337, 1365, 11, 51546, 51546, 309, 1355, 286, 643, 281, 652, 264, 21977, 295, 710, 51652, 51652, 382, 2416, 382, 1944, 13, 51698, 51698, 583, 498, 286, 652, 309, 886, 2416, 11, 550, 264, 4274, 2281, 1433, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.11100909926674583, "compression_ratio": 1.75, "no_speech_prob": 4.222406914777821e-06}, {"id": 2302, "seek": 725824, "start": 7270.2, "end": 7273.16, "text": " And then the second term is the entropy of z.", "tokens": [50364, 400, 286, 393, 360, 341, 538, 445, 21179, 710, 50494, 50494, 490, 264, 9505, 7316, 293, 550, 15866, 50608, 50608, 264, 4274, 295, 264, 2445, 287, 300, 286, 12701, 382, 257, 1874, 13, 50874, 50874, 407, 300, 311, 264, 700, 1433, 13, 50962, 50962, 400, 550, 264, 1150, 1433, 307, 264, 30867, 295, 710, 13, 51110, 51110, 407, 437, 286, 643, 281, 360, 307, 1936, 1319, 452, 7316, 51336, 51336, 710, 294, 1270, 257, 636, 300, 264, 30867, 307, 5138, 1602, 13, 51476, 51476, 407, 498, 309, 311, 257, 39148, 11, 337, 1365, 11, 51546, 51546, 309, 1355, 286, 643, 281, 652, 264, 21977, 295, 710, 51652, 51652, 382, 2416, 382, 1944, 13, 51698, 51698, 583, 498, 286, 652, 309, 886, 2416, 11, 550, 264, 4274, 2281, 1433, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.11100909926674583, "compression_ratio": 1.75, "no_speech_prob": 4.222406914777821e-06}, {"id": 2303, "seek": 725824, "start": 7273.16, "end": 7277.679999999999, "text": " So what I need to do is basically change my distribution", "tokens": [50364, 400, 286, 393, 360, 341, 538, 445, 21179, 710, 50494, 50494, 490, 264, 9505, 7316, 293, 550, 15866, 50608, 50608, 264, 4274, 295, 264, 2445, 287, 300, 286, 12701, 382, 257, 1874, 13, 50874, 50874, 407, 300, 311, 264, 700, 1433, 13, 50962, 50962, 400, 550, 264, 1150, 1433, 307, 264, 30867, 295, 710, 13, 51110, 51110, 407, 437, 286, 643, 281, 360, 307, 1936, 1319, 452, 7316, 51336, 51336, 710, 294, 1270, 257, 636, 300, 264, 30867, 307, 5138, 1602, 13, 51476, 51476, 407, 498, 309, 311, 257, 39148, 11, 337, 1365, 11, 51546, 51546, 309, 1355, 286, 643, 281, 652, 264, 21977, 295, 710, 51652, 51652, 382, 2416, 382, 1944, 13, 51698, 51698, 583, 498, 286, 652, 309, 886, 2416, 11, 550, 264, 4274, 2281, 1433, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.11100909926674583, "compression_ratio": 1.75, "no_speech_prob": 4.222406914777821e-06}, {"id": 2304, "seek": 725824, "start": 7277.679999999999, "end": 7280.48, "text": " z in such a way that the entropy is maximized.", "tokens": [50364, 400, 286, 393, 360, 341, 538, 445, 21179, 710, 50494, 50494, 490, 264, 9505, 7316, 293, 550, 15866, 50608, 50608, 264, 4274, 295, 264, 2445, 287, 300, 286, 12701, 382, 257, 1874, 13, 50874, 50874, 407, 300, 311, 264, 700, 1433, 13, 50962, 50962, 400, 550, 264, 1150, 1433, 307, 264, 30867, 295, 710, 13, 51110, 51110, 407, 437, 286, 643, 281, 360, 307, 1936, 1319, 452, 7316, 51336, 51336, 710, 294, 1270, 257, 636, 300, 264, 30867, 307, 5138, 1602, 13, 51476, 51476, 407, 498, 309, 311, 257, 39148, 11, 337, 1365, 11, 51546, 51546, 309, 1355, 286, 643, 281, 652, 264, 21977, 295, 710, 51652, 51652, 382, 2416, 382, 1944, 13, 51698, 51698, 583, 498, 286, 652, 309, 886, 2416, 11, 550, 264, 4274, 2281, 1433, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.11100909926674583, "compression_ratio": 1.75, "no_speech_prob": 4.222406914777821e-06}, {"id": 2305, "seek": 725824, "start": 7280.48, "end": 7281.88, "text": " So if it's a Gaussian, for example,", "tokens": [50364, 400, 286, 393, 360, 341, 538, 445, 21179, 710, 50494, 50494, 490, 264, 9505, 7316, 293, 550, 15866, 50608, 50608, 264, 4274, 295, 264, 2445, 287, 300, 286, 12701, 382, 257, 1874, 13, 50874, 50874, 407, 300, 311, 264, 700, 1433, 13, 50962, 50962, 400, 550, 264, 1150, 1433, 307, 264, 30867, 295, 710, 13, 51110, 51110, 407, 437, 286, 643, 281, 360, 307, 1936, 1319, 452, 7316, 51336, 51336, 710, 294, 1270, 257, 636, 300, 264, 30867, 307, 5138, 1602, 13, 51476, 51476, 407, 498, 309, 311, 257, 39148, 11, 337, 1365, 11, 51546, 51546, 309, 1355, 286, 643, 281, 652, 264, 21977, 295, 710, 51652, 51652, 382, 2416, 382, 1944, 13, 51698, 51698, 583, 498, 286, 652, 309, 886, 2416, 11, 550, 264, 4274, 2281, 1433, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.11100909926674583, "compression_ratio": 1.75, "no_speech_prob": 4.222406914777821e-06}, {"id": 2306, "seek": 725824, "start": 7281.88, "end": 7284.0, "text": " it means I need to make the variance of z", "tokens": [50364, 400, 286, 393, 360, 341, 538, 445, 21179, 710, 50494, 50494, 490, 264, 9505, 7316, 293, 550, 15866, 50608, 50608, 264, 4274, 295, 264, 2445, 287, 300, 286, 12701, 382, 257, 1874, 13, 50874, 50874, 407, 300, 311, 264, 700, 1433, 13, 50962, 50962, 400, 550, 264, 1150, 1433, 307, 264, 30867, 295, 710, 13, 51110, 51110, 407, 437, 286, 643, 281, 360, 307, 1936, 1319, 452, 7316, 51336, 51336, 710, 294, 1270, 257, 636, 300, 264, 30867, 307, 5138, 1602, 13, 51476, 51476, 407, 498, 309, 311, 257, 39148, 11, 337, 1365, 11, 51546, 51546, 309, 1355, 286, 643, 281, 652, 264, 21977, 295, 710, 51652, 51652, 382, 2416, 382, 1944, 13, 51698, 51698, 583, 498, 286, 652, 309, 886, 2416, 11, 550, 264, 4274, 2281, 1433, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.11100909926674583, "compression_ratio": 1.75, "no_speech_prob": 4.222406914777821e-06}, {"id": 2307, "seek": 725824, "start": 7284.0, "end": 7284.92, "text": " as large as possible.", "tokens": [50364, 400, 286, 393, 360, 341, 538, 445, 21179, 710, 50494, 50494, 490, 264, 9505, 7316, 293, 550, 15866, 50608, 50608, 264, 4274, 295, 264, 2445, 287, 300, 286, 12701, 382, 257, 1874, 13, 50874, 50874, 407, 300, 311, 264, 700, 1433, 13, 50962, 50962, 400, 550, 264, 1150, 1433, 307, 264, 30867, 295, 710, 13, 51110, 51110, 407, 437, 286, 643, 281, 360, 307, 1936, 1319, 452, 7316, 51336, 51336, 710, 294, 1270, 257, 636, 300, 264, 30867, 307, 5138, 1602, 13, 51476, 51476, 407, 498, 309, 311, 257, 39148, 11, 337, 1365, 11, 51546, 51546, 309, 1355, 286, 643, 281, 652, 264, 21977, 295, 710, 51652, 51652, 382, 2416, 382, 1944, 13, 51698, 51698, 583, 498, 286, 652, 309, 886, 2416, 11, 550, 264, 4274, 2281, 1433, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.11100909926674583, "compression_ratio": 1.75, "no_speech_prob": 4.222406914777821e-06}, {"id": 2308, "seek": 725824, "start": 7284.92, "end": 7287.76, "text": " But if I make it too large, then the average energy term", "tokens": [50364, 400, 286, 393, 360, 341, 538, 445, 21179, 710, 50494, 50494, 490, 264, 9505, 7316, 293, 550, 15866, 50608, 50608, 264, 4274, 295, 264, 2445, 287, 300, 286, 12701, 382, 257, 1874, 13, 50874, 50874, 407, 300, 311, 264, 700, 1433, 13, 50962, 50962, 400, 550, 264, 1150, 1433, 307, 264, 30867, 295, 710, 13, 51110, 51110, 407, 437, 286, 643, 281, 360, 307, 1936, 1319, 452, 7316, 51336, 51336, 710, 294, 1270, 257, 636, 300, 264, 30867, 307, 5138, 1602, 13, 51476, 51476, 407, 498, 309, 311, 257, 39148, 11, 337, 1365, 11, 51546, 51546, 309, 1355, 286, 643, 281, 652, 264, 21977, 295, 710, 51652, 51652, 382, 2416, 382, 1944, 13, 51698, 51698, 583, 498, 286, 652, 309, 886, 2416, 11, 550, 264, 4274, 2281, 1433, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.11100909926674583, "compression_ratio": 1.75, "no_speech_prob": 4.222406914777821e-06}, {"id": 2309, "seek": 728776, "start": 7287.76, "end": 7288.96, "text": " is going to blow up.", "tokens": [50364, 307, 516, 281, 6327, 493, 13, 50424, 50424, 407, 286, 643, 281, 19719, 341, 4787, 11, 341, 1379, 2445, 13, 50666, 50666, 400, 498, 286, 19719, 341, 1379, 2445, 365, 3104, 281, 9505, 50858, 50858, 293, 365, 3104, 281, 2035, 13075, 295, 287, 50958, 50958, 286, 528, 281, 17522, 11, 570, 287, 307, 364, 10024, 2445, 51140, 51140, 365, 3104, 281, 11, 286, 500, 380, 458, 11, 17443, 295, 257, 18161, 2533, 51242, 51242, 420, 746, 11, 558, 30, 51354, 51354, 407, 286, 393, 16561, 17522, 365, 3104, 51478, 51478, 281, 729, 9834, 261, 11, 597, 286, 994, 380, 2464, 510, 11, 51668, 51668, 293, 365, 3104, 281, 264, 9505, 7316, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1181888251469053, "compression_ratio": 1.8577405857740585, "no_speech_prob": 1.1658596122288145e-05}, {"id": 2310, "seek": 728776, "start": 7288.96, "end": 7293.8, "text": " So I need to optimize this overall, this whole function.", "tokens": [50364, 307, 516, 281, 6327, 493, 13, 50424, 50424, 407, 286, 643, 281, 19719, 341, 4787, 11, 341, 1379, 2445, 13, 50666, 50666, 400, 498, 286, 19719, 341, 1379, 2445, 365, 3104, 281, 9505, 50858, 50858, 293, 365, 3104, 281, 2035, 13075, 295, 287, 50958, 50958, 286, 528, 281, 17522, 11, 570, 287, 307, 364, 10024, 2445, 51140, 51140, 365, 3104, 281, 11, 286, 500, 380, 458, 11, 17443, 295, 257, 18161, 2533, 51242, 51242, 420, 746, 11, 558, 30, 51354, 51354, 407, 286, 393, 16561, 17522, 365, 3104, 51478, 51478, 281, 729, 9834, 261, 11, 597, 286, 994, 380, 2464, 510, 11, 51668, 51668, 293, 365, 3104, 281, 264, 9505, 7316, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1181888251469053, "compression_ratio": 1.8577405857740585, "no_speech_prob": 1.1658596122288145e-05}, {"id": 2311, "seek": 728776, "start": 7293.8, "end": 7297.64, "text": " And if I optimize this whole function with respect to q", "tokens": [50364, 307, 516, 281, 6327, 493, 13, 50424, 50424, 407, 286, 643, 281, 19719, 341, 4787, 11, 341, 1379, 2445, 13, 50666, 50666, 400, 498, 286, 19719, 341, 1379, 2445, 365, 3104, 281, 9505, 50858, 50858, 293, 365, 3104, 281, 2035, 13075, 295, 287, 50958, 50958, 286, 528, 281, 17522, 11, 570, 287, 307, 364, 10024, 2445, 51140, 51140, 365, 3104, 281, 11, 286, 500, 380, 458, 11, 17443, 295, 257, 18161, 2533, 51242, 51242, 420, 746, 11, 558, 30, 51354, 51354, 407, 286, 393, 16561, 17522, 365, 3104, 51478, 51478, 281, 729, 9834, 261, 11, 597, 286, 994, 380, 2464, 510, 11, 51668, 51668, 293, 365, 3104, 281, 264, 9505, 7316, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1181888251469053, "compression_ratio": 1.8577405857740585, "no_speech_prob": 1.1658596122288145e-05}, {"id": 2312, "seek": 728776, "start": 7297.64, "end": 7299.64, "text": " and with respect to whatever parameter of l", "tokens": [50364, 307, 516, 281, 6327, 493, 13, 50424, 50424, 407, 286, 643, 281, 19719, 341, 4787, 11, 341, 1379, 2445, 13, 50666, 50666, 400, 498, 286, 19719, 341, 1379, 2445, 365, 3104, 281, 9505, 50858, 50858, 293, 365, 3104, 281, 2035, 13075, 295, 287, 50958, 50958, 286, 528, 281, 17522, 11, 570, 287, 307, 364, 10024, 2445, 51140, 51140, 365, 3104, 281, 11, 286, 500, 380, 458, 11, 17443, 295, 257, 18161, 2533, 51242, 51242, 420, 746, 11, 558, 30, 51354, 51354, 407, 286, 393, 16561, 17522, 365, 3104, 51478, 51478, 281, 729, 9834, 261, 11, 597, 286, 994, 380, 2464, 510, 11, 51668, 51668, 293, 365, 3104, 281, 264, 9505, 7316, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1181888251469053, "compression_ratio": 1.8577405857740585, "no_speech_prob": 1.1658596122288145e-05}, {"id": 2313, "seek": 728776, "start": 7299.64, "end": 7303.280000000001, "text": " I want to minimize, because l is an objective function", "tokens": [50364, 307, 516, 281, 6327, 493, 13, 50424, 50424, 407, 286, 643, 281, 19719, 341, 4787, 11, 341, 1379, 2445, 13, 50666, 50666, 400, 498, 286, 19719, 341, 1379, 2445, 365, 3104, 281, 9505, 50858, 50858, 293, 365, 3104, 281, 2035, 13075, 295, 287, 50958, 50958, 286, 528, 281, 17522, 11, 570, 287, 307, 364, 10024, 2445, 51140, 51140, 365, 3104, 281, 11, 286, 500, 380, 458, 11, 17443, 295, 257, 18161, 2533, 51242, 51242, 420, 746, 11, 558, 30, 51354, 51354, 407, 286, 393, 16561, 17522, 365, 3104, 51478, 51478, 281, 729, 9834, 261, 11, 597, 286, 994, 380, 2464, 510, 11, 51668, 51668, 293, 365, 3104, 281, 264, 9505, 7316, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1181888251469053, "compression_ratio": 1.8577405857740585, "no_speech_prob": 1.1658596122288145e-05}, {"id": 2314, "seek": 728776, "start": 7303.280000000001, "end": 7305.320000000001, "text": " with respect to, I don't know, weights of a neural net", "tokens": [50364, 307, 516, 281, 6327, 493, 13, 50424, 50424, 407, 286, 643, 281, 19719, 341, 4787, 11, 341, 1379, 2445, 13, 50666, 50666, 400, 498, 286, 19719, 341, 1379, 2445, 365, 3104, 281, 9505, 50858, 50858, 293, 365, 3104, 281, 2035, 13075, 295, 287, 50958, 50958, 286, 528, 281, 17522, 11, 570, 287, 307, 364, 10024, 2445, 51140, 51140, 365, 3104, 281, 11, 286, 500, 380, 458, 11, 17443, 295, 257, 18161, 2533, 51242, 51242, 420, 746, 11, 558, 30, 51354, 51354, 407, 286, 393, 16561, 17522, 365, 3104, 51478, 51478, 281, 729, 9834, 261, 11, 597, 286, 994, 380, 2464, 510, 11, 51668, 51668, 293, 365, 3104, 281, 264, 9505, 7316, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1181888251469053, "compression_ratio": 1.8577405857740585, "no_speech_prob": 1.1658596122288145e-05}, {"id": 2315, "seek": 728776, "start": 7305.320000000001, "end": 7307.56, "text": " or something, right?", "tokens": [50364, 307, 516, 281, 6327, 493, 13, 50424, 50424, 407, 286, 643, 281, 19719, 341, 4787, 11, 341, 1379, 2445, 13, 50666, 50666, 400, 498, 286, 19719, 341, 1379, 2445, 365, 3104, 281, 9505, 50858, 50858, 293, 365, 3104, 281, 2035, 13075, 295, 287, 50958, 50958, 286, 528, 281, 17522, 11, 570, 287, 307, 364, 10024, 2445, 51140, 51140, 365, 3104, 281, 11, 286, 500, 380, 458, 11, 17443, 295, 257, 18161, 2533, 51242, 51242, 420, 746, 11, 558, 30, 51354, 51354, 407, 286, 393, 16561, 17522, 365, 3104, 51478, 51478, 281, 729, 9834, 261, 11, 597, 286, 994, 380, 2464, 510, 11, 51668, 51668, 293, 365, 3104, 281, 264, 9505, 7316, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1181888251469053, "compression_ratio": 1.8577405857740585, "no_speech_prob": 1.1658596122288145e-05}, {"id": 2316, "seek": 728776, "start": 7307.56, "end": 7310.04, "text": " So I can simultaneously minimize with respect", "tokens": [50364, 307, 516, 281, 6327, 493, 13, 50424, 50424, 407, 286, 643, 281, 19719, 341, 4787, 11, 341, 1379, 2445, 13, 50666, 50666, 400, 498, 286, 19719, 341, 1379, 2445, 365, 3104, 281, 9505, 50858, 50858, 293, 365, 3104, 281, 2035, 13075, 295, 287, 50958, 50958, 286, 528, 281, 17522, 11, 570, 287, 307, 364, 10024, 2445, 51140, 51140, 365, 3104, 281, 11, 286, 500, 380, 458, 11, 17443, 295, 257, 18161, 2533, 51242, 51242, 420, 746, 11, 558, 30, 51354, 51354, 407, 286, 393, 16561, 17522, 365, 3104, 51478, 51478, 281, 729, 9834, 261, 11, 597, 286, 994, 380, 2464, 510, 11, 51668, 51668, 293, 365, 3104, 281, 264, 9505, 7316, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1181888251469053, "compression_ratio": 1.8577405857740585, "no_speech_prob": 1.1658596122288145e-05}, {"id": 2317, "seek": 728776, "start": 7310.04, "end": 7313.84, "text": " to those parameters w, which I didn't write here,", "tokens": [50364, 307, 516, 281, 6327, 493, 13, 50424, 50424, 407, 286, 643, 281, 19719, 341, 4787, 11, 341, 1379, 2445, 13, 50666, 50666, 400, 498, 286, 19719, 341, 1379, 2445, 365, 3104, 281, 9505, 50858, 50858, 293, 365, 3104, 281, 2035, 13075, 295, 287, 50958, 50958, 286, 528, 281, 17522, 11, 570, 287, 307, 364, 10024, 2445, 51140, 51140, 365, 3104, 281, 11, 286, 500, 380, 458, 11, 17443, 295, 257, 18161, 2533, 51242, 51242, 420, 746, 11, 558, 30, 51354, 51354, 407, 286, 393, 16561, 17522, 365, 3104, 51478, 51478, 281, 729, 9834, 261, 11, 597, 286, 994, 380, 2464, 510, 11, 51668, 51668, 293, 365, 3104, 281, 264, 9505, 7316, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1181888251469053, "compression_ratio": 1.8577405857740585, "no_speech_prob": 1.1658596122288145e-05}, {"id": 2318, "seek": 728776, "start": 7313.84, "end": 7316.92, "text": " and with respect to the q distribution.", "tokens": [50364, 307, 516, 281, 6327, 493, 13, 50424, 50424, 407, 286, 643, 281, 19719, 341, 4787, 11, 341, 1379, 2445, 13, 50666, 50666, 400, 498, 286, 19719, 341, 1379, 2445, 365, 3104, 281, 9505, 50858, 50858, 293, 365, 3104, 281, 2035, 13075, 295, 287, 50958, 50958, 286, 528, 281, 17522, 11, 570, 287, 307, 364, 10024, 2445, 51140, 51140, 365, 3104, 281, 11, 286, 500, 380, 458, 11, 17443, 295, 257, 18161, 2533, 51242, 51242, 420, 746, 11, 558, 30, 51354, 51354, 407, 286, 393, 16561, 17522, 365, 3104, 51478, 51478, 281, 729, 9834, 261, 11, 597, 286, 994, 380, 2464, 510, 11, 51668, 51668, 293, 365, 3104, 281, 264, 9505, 7316, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1181888251469053, "compression_ratio": 1.8577405857740585, "no_speech_prob": 1.1658596122288145e-05}, {"id": 2319, "seek": 731692, "start": 7316.92, "end": 7320.0, "text": " And if the q distribution is in a family that's wide enough,", "tokens": [50364, 400, 498, 264, 9505, 7316, 307, 294, 257, 1605, 300, 311, 4874, 1547, 11, 50518, 50518, 550, 341, 6597, 5472, 486, 312, 6457, 1998, 281, 264, 3539, 4470, 50680, 50680, 300, 286, 528, 281, 17522, 11, 597, 307, 264, 32522, 4470, 50856, 50856, 670, 264, 48994, 7006, 13, 51020, 51020, 583, 286, 1128, 643, 281, 767, 14722, 20803, 51128, 51128, 264, 16885, 2144, 295, 257, 48994, 7006, 13, 51228, 51228, 407, 341, 307, 257, 636, 295, 16885, 3319, 670, 257, 48994, 51326, 51326, 7006, 1553, 767, 884, 309, 11, 51468, 51468, 538, 16885, 3319, 670, 257, 48994, 7006, 300, 291, 393, 6889, 51618, 51618, 490, 11, 411, 257, 39148, 13, 51698, 51698, 583, 437, 291, 362, 281, 360, 307, 19874, 1080, 30867, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.14088976101612483, "compression_ratio": 1.881918819188192, "no_speech_prob": 2.2120564608485438e-05}, {"id": 2320, "seek": 731692, "start": 7320.0, "end": 7323.24, "text": " then this upper bound will be fairly close to the actual loss", "tokens": [50364, 400, 498, 264, 9505, 7316, 307, 294, 257, 1605, 300, 311, 4874, 1547, 11, 50518, 50518, 550, 341, 6597, 5472, 486, 312, 6457, 1998, 281, 264, 3539, 4470, 50680, 50680, 300, 286, 528, 281, 17522, 11, 597, 307, 264, 32522, 4470, 50856, 50856, 670, 264, 48994, 7006, 13, 51020, 51020, 583, 286, 1128, 643, 281, 767, 14722, 20803, 51128, 51128, 264, 16885, 2144, 295, 257, 48994, 7006, 13, 51228, 51228, 407, 341, 307, 257, 636, 295, 16885, 3319, 670, 257, 48994, 51326, 51326, 7006, 1553, 767, 884, 309, 11, 51468, 51468, 538, 16885, 3319, 670, 257, 48994, 7006, 300, 291, 393, 6889, 51618, 51618, 490, 11, 411, 257, 39148, 13, 51698, 51698, 583, 437, 291, 362, 281, 360, 307, 19874, 1080, 30867, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.14088976101612483, "compression_ratio": 1.881918819188192, "no_speech_prob": 2.2120564608485438e-05}, {"id": 2321, "seek": 731692, "start": 7323.24, "end": 7326.76, "text": " that I want to minimize, which is the marginalized loss", "tokens": [50364, 400, 498, 264, 9505, 7316, 307, 294, 257, 1605, 300, 311, 4874, 1547, 11, 50518, 50518, 550, 341, 6597, 5472, 486, 312, 6457, 1998, 281, 264, 3539, 4470, 50680, 50680, 300, 286, 528, 281, 17522, 11, 597, 307, 264, 32522, 4470, 50856, 50856, 670, 264, 48994, 7006, 13, 51020, 51020, 583, 286, 1128, 643, 281, 767, 14722, 20803, 51128, 51128, 264, 16885, 2144, 295, 257, 48994, 7006, 13, 51228, 51228, 407, 341, 307, 257, 636, 295, 16885, 3319, 670, 257, 48994, 51326, 51326, 7006, 1553, 767, 884, 309, 11, 51468, 51468, 538, 16885, 3319, 670, 257, 48994, 7006, 300, 291, 393, 6889, 51618, 51618, 490, 11, 411, 257, 39148, 13, 51698, 51698, 583, 437, 291, 362, 281, 360, 307, 19874, 1080, 30867, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.14088976101612483, "compression_ratio": 1.881918819188192, "no_speech_prob": 2.2120564608485438e-05}, {"id": 2322, "seek": 731692, "start": 7326.76, "end": 7330.04, "text": " over the latent variable.", "tokens": [50364, 400, 498, 264, 9505, 7316, 307, 294, 257, 1605, 300, 311, 4874, 1547, 11, 50518, 50518, 550, 341, 6597, 5472, 486, 312, 6457, 1998, 281, 264, 3539, 4470, 50680, 50680, 300, 286, 528, 281, 17522, 11, 597, 307, 264, 32522, 4470, 50856, 50856, 670, 264, 48994, 7006, 13, 51020, 51020, 583, 286, 1128, 643, 281, 767, 14722, 20803, 51128, 51128, 264, 16885, 2144, 295, 257, 48994, 7006, 13, 51228, 51228, 407, 341, 307, 257, 636, 295, 16885, 3319, 670, 257, 48994, 51326, 51326, 7006, 1553, 767, 884, 309, 11, 51468, 51468, 538, 16885, 3319, 670, 257, 48994, 7006, 300, 291, 393, 6889, 51618, 51618, 490, 11, 411, 257, 39148, 13, 51698, 51698, 583, 437, 291, 362, 281, 360, 307, 19874, 1080, 30867, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.14088976101612483, "compression_ratio": 1.881918819188192, "no_speech_prob": 2.2120564608485438e-05}, {"id": 2323, "seek": 731692, "start": 7330.04, "end": 7332.2, "text": " But I never need to actually compute explicitly", "tokens": [50364, 400, 498, 264, 9505, 7316, 307, 294, 257, 1605, 300, 311, 4874, 1547, 11, 50518, 50518, 550, 341, 6597, 5472, 486, 312, 6457, 1998, 281, 264, 3539, 4470, 50680, 50680, 300, 286, 528, 281, 17522, 11, 597, 307, 264, 32522, 4470, 50856, 50856, 670, 264, 48994, 7006, 13, 51020, 51020, 583, 286, 1128, 643, 281, 767, 14722, 20803, 51128, 51128, 264, 16885, 2144, 295, 257, 48994, 7006, 13, 51228, 51228, 407, 341, 307, 257, 636, 295, 16885, 3319, 670, 257, 48994, 51326, 51326, 7006, 1553, 767, 884, 309, 11, 51468, 51468, 538, 16885, 3319, 670, 257, 48994, 7006, 300, 291, 393, 6889, 51618, 51618, 490, 11, 411, 257, 39148, 13, 51698, 51698, 583, 437, 291, 362, 281, 360, 307, 19874, 1080, 30867, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.14088976101612483, "compression_ratio": 1.881918819188192, "no_speech_prob": 2.2120564608485438e-05}, {"id": 2324, "seek": 731692, "start": 7332.2, "end": 7334.2, "text": " the marginalization of a latent variable.", "tokens": [50364, 400, 498, 264, 9505, 7316, 307, 294, 257, 1605, 300, 311, 4874, 1547, 11, 50518, 50518, 550, 341, 6597, 5472, 486, 312, 6457, 1998, 281, 264, 3539, 4470, 50680, 50680, 300, 286, 528, 281, 17522, 11, 597, 307, 264, 32522, 4470, 50856, 50856, 670, 264, 48994, 7006, 13, 51020, 51020, 583, 286, 1128, 643, 281, 767, 14722, 20803, 51128, 51128, 264, 16885, 2144, 295, 257, 48994, 7006, 13, 51228, 51228, 407, 341, 307, 257, 636, 295, 16885, 3319, 670, 257, 48994, 51326, 51326, 7006, 1553, 767, 884, 309, 11, 51468, 51468, 538, 16885, 3319, 670, 257, 48994, 7006, 300, 291, 393, 6889, 51618, 51618, 490, 11, 411, 257, 39148, 13, 51698, 51698, 583, 437, 291, 362, 281, 360, 307, 19874, 1080, 30867, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.14088976101612483, "compression_ratio": 1.881918819188192, "no_speech_prob": 2.2120564608485438e-05}, {"id": 2325, "seek": 731692, "start": 7334.2, "end": 7336.16, "text": " So this is a way of marginalizing over a latent", "tokens": [50364, 400, 498, 264, 9505, 7316, 307, 294, 257, 1605, 300, 311, 4874, 1547, 11, 50518, 50518, 550, 341, 6597, 5472, 486, 312, 6457, 1998, 281, 264, 3539, 4470, 50680, 50680, 300, 286, 528, 281, 17522, 11, 597, 307, 264, 32522, 4470, 50856, 50856, 670, 264, 48994, 7006, 13, 51020, 51020, 583, 286, 1128, 643, 281, 767, 14722, 20803, 51128, 51128, 264, 16885, 2144, 295, 257, 48994, 7006, 13, 51228, 51228, 407, 341, 307, 257, 636, 295, 16885, 3319, 670, 257, 48994, 51326, 51326, 7006, 1553, 767, 884, 309, 11, 51468, 51468, 538, 16885, 3319, 670, 257, 48994, 7006, 300, 291, 393, 6889, 51618, 51618, 490, 11, 411, 257, 39148, 13, 51698, 51698, 583, 437, 291, 362, 281, 360, 307, 19874, 1080, 30867, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.14088976101612483, "compression_ratio": 1.881918819188192, "no_speech_prob": 2.2120564608485438e-05}, {"id": 2326, "seek": 731692, "start": 7336.16, "end": 7339.0, "text": " variable without actually doing it,", "tokens": [50364, 400, 498, 264, 9505, 7316, 307, 294, 257, 1605, 300, 311, 4874, 1547, 11, 50518, 50518, 550, 341, 6597, 5472, 486, 312, 6457, 1998, 281, 264, 3539, 4470, 50680, 50680, 300, 286, 528, 281, 17522, 11, 597, 307, 264, 32522, 4470, 50856, 50856, 670, 264, 48994, 7006, 13, 51020, 51020, 583, 286, 1128, 643, 281, 767, 14722, 20803, 51128, 51128, 264, 16885, 2144, 295, 257, 48994, 7006, 13, 51228, 51228, 407, 341, 307, 257, 636, 295, 16885, 3319, 670, 257, 48994, 51326, 51326, 7006, 1553, 767, 884, 309, 11, 51468, 51468, 538, 16885, 3319, 670, 257, 48994, 7006, 300, 291, 393, 6889, 51618, 51618, 490, 11, 411, 257, 39148, 13, 51698, 51698, 583, 437, 291, 362, 281, 360, 307, 19874, 1080, 30867, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.14088976101612483, "compression_ratio": 1.881918819188192, "no_speech_prob": 2.2120564608485438e-05}, {"id": 2327, "seek": 731692, "start": 7339.0, "end": 7342.0, "text": " by marginalizing over a latent variable that you can sample", "tokens": [50364, 400, 498, 264, 9505, 7316, 307, 294, 257, 1605, 300, 311, 4874, 1547, 11, 50518, 50518, 550, 341, 6597, 5472, 486, 312, 6457, 1998, 281, 264, 3539, 4470, 50680, 50680, 300, 286, 528, 281, 17522, 11, 597, 307, 264, 32522, 4470, 50856, 50856, 670, 264, 48994, 7006, 13, 51020, 51020, 583, 286, 1128, 643, 281, 767, 14722, 20803, 51128, 51128, 264, 16885, 2144, 295, 257, 48994, 7006, 13, 51228, 51228, 407, 341, 307, 257, 636, 295, 16885, 3319, 670, 257, 48994, 51326, 51326, 7006, 1553, 767, 884, 309, 11, 51468, 51468, 538, 16885, 3319, 670, 257, 48994, 7006, 300, 291, 393, 6889, 51618, 51618, 490, 11, 411, 257, 39148, 13, 51698, 51698, 583, 437, 291, 362, 281, 360, 307, 19874, 1080, 30867, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.14088976101612483, "compression_ratio": 1.881918819188192, "no_speech_prob": 2.2120564608485438e-05}, {"id": 2328, "seek": 731692, "start": 7342.0, "end": 7343.6, "text": " from, like a Gaussian.", "tokens": [50364, 400, 498, 264, 9505, 7316, 307, 294, 257, 1605, 300, 311, 4874, 1547, 11, 50518, 50518, 550, 341, 6597, 5472, 486, 312, 6457, 1998, 281, 264, 3539, 4470, 50680, 50680, 300, 286, 528, 281, 17522, 11, 597, 307, 264, 32522, 4470, 50856, 50856, 670, 264, 48994, 7006, 13, 51020, 51020, 583, 286, 1128, 643, 281, 767, 14722, 20803, 51128, 51128, 264, 16885, 2144, 295, 257, 48994, 7006, 13, 51228, 51228, 407, 341, 307, 257, 636, 295, 16885, 3319, 670, 257, 48994, 51326, 51326, 7006, 1553, 767, 884, 309, 11, 51468, 51468, 538, 16885, 3319, 670, 257, 48994, 7006, 300, 291, 393, 6889, 51618, 51618, 490, 11, 411, 257, 39148, 13, 51698, 51698, 583, 437, 291, 362, 281, 360, 307, 19874, 1080, 30867, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.14088976101612483, "compression_ratio": 1.881918819188192, "no_speech_prob": 2.2120564608485438e-05}, {"id": 2329, "seek": 731692, "start": 7343.6, "end": 7346.16, "text": " But what you have to do is maximize its entropy.", "tokens": [50364, 400, 498, 264, 9505, 7316, 307, 294, 257, 1605, 300, 311, 4874, 1547, 11, 50518, 50518, 550, 341, 6597, 5472, 486, 312, 6457, 1998, 281, 264, 3539, 4470, 50680, 50680, 300, 286, 528, 281, 17522, 11, 597, 307, 264, 32522, 4470, 50856, 50856, 670, 264, 48994, 7006, 13, 51020, 51020, 583, 286, 1128, 643, 281, 767, 14722, 20803, 51128, 51128, 264, 16885, 2144, 295, 257, 48994, 7006, 13, 51228, 51228, 407, 341, 307, 257, 636, 295, 16885, 3319, 670, 257, 48994, 51326, 51326, 7006, 1553, 767, 884, 309, 11, 51468, 51468, 538, 16885, 3319, 670, 257, 48994, 7006, 300, 291, 393, 6889, 51618, 51618, 490, 11, 411, 257, 39148, 13, 51698, 51698, 583, 437, 291, 362, 281, 360, 307, 19874, 1080, 30867, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.14088976101612483, "compression_ratio": 1.881918819188192, "no_speech_prob": 2.2120564608485438e-05}, {"id": 2330, "seek": 734616, "start": 7346.16, "end": 7348.2, "text": " And when you think about variational autoencoders,", "tokens": [50364, 400, 562, 291, 519, 466, 3034, 1478, 8399, 22660, 378, 433, 11, 50466, 50466, 300, 311, 445, 437, 436, 360, 13, 50584, 50584, 814, 17522, 264, 5176, 31565, 6713, 11, 50700, 50700, 597, 307, 287, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 264, 9834, 50872, 50872, 538, 21179, 264, 48994, 7006, 710, 50966, 50966, 4650, 281, 257, 39148, 7316, 13, 51104, 51104, 583, 412, 264, 912, 565, 11, 456, 307, 437, 311, 1219, 257, 47991, 1433, 11, 597, 51248, 51248, 307, 264, 1150, 1433, 13, 51288, 51288, 467, 1936, 9898, 281, 652, 264, 7316, 51396, 51396, 382, 1090, 30867, 382, 1944, 13, 51498, 51498, 823, 11, 341, 8513, 307, 2293, 14800, 281, 257, 8513, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.14691316588851047, "compression_ratio": 1.6534296028880866, "no_speech_prob": 2.9942468700028257e-06}, {"id": 2331, "seek": 734616, "start": 7348.2, "end": 7350.5599999999995, "text": " that's just what they do.", "tokens": [50364, 400, 562, 291, 519, 466, 3034, 1478, 8399, 22660, 378, 433, 11, 50466, 50466, 300, 311, 445, 437, 436, 360, 13, 50584, 50584, 814, 17522, 264, 5176, 31565, 6713, 11, 50700, 50700, 597, 307, 287, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 264, 9834, 50872, 50872, 538, 21179, 264, 48994, 7006, 710, 50966, 50966, 4650, 281, 257, 39148, 7316, 13, 51104, 51104, 583, 412, 264, 912, 565, 11, 456, 307, 437, 311, 1219, 257, 47991, 1433, 11, 597, 51248, 51248, 307, 264, 1150, 1433, 13, 51288, 51288, 467, 1936, 9898, 281, 652, 264, 7316, 51396, 51396, 382, 1090, 30867, 382, 1944, 13, 51498, 51498, 823, 11, 341, 8513, 307, 2293, 14800, 281, 257, 8513, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.14691316588851047, "compression_ratio": 1.6534296028880866, "no_speech_prob": 2.9942468700028257e-06}, {"id": 2332, "seek": 734616, "start": 7350.5599999999995, "end": 7352.88, "text": " They minimize the expected reconstruction error,", "tokens": [50364, 400, 562, 291, 519, 466, 3034, 1478, 8399, 22660, 378, 433, 11, 50466, 50466, 300, 311, 445, 437, 436, 360, 13, 50584, 50584, 814, 17522, 264, 5176, 31565, 6713, 11, 50700, 50700, 597, 307, 287, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 264, 9834, 50872, 50872, 538, 21179, 264, 48994, 7006, 710, 50966, 50966, 4650, 281, 257, 39148, 7316, 13, 51104, 51104, 583, 412, 264, 912, 565, 11, 456, 307, 437, 311, 1219, 257, 47991, 1433, 11, 597, 51248, 51248, 307, 264, 1150, 1433, 13, 51288, 51288, 467, 1936, 9898, 281, 652, 264, 7316, 51396, 51396, 382, 1090, 30867, 382, 1944, 13, 51498, 51498, 823, 11, 341, 8513, 307, 2293, 14800, 281, 257, 8513, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.14691316588851047, "compression_ratio": 1.6534296028880866, "no_speech_prob": 2.9942468700028257e-06}, {"id": 2333, "seek": 734616, "start": 7352.88, "end": 7356.32, "text": " which is l of x, y, z, with respect to the parameters", "tokens": [50364, 400, 562, 291, 519, 466, 3034, 1478, 8399, 22660, 378, 433, 11, 50466, 50466, 300, 311, 445, 437, 436, 360, 13, 50584, 50584, 814, 17522, 264, 5176, 31565, 6713, 11, 50700, 50700, 597, 307, 287, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 264, 9834, 50872, 50872, 538, 21179, 264, 48994, 7006, 710, 50966, 50966, 4650, 281, 257, 39148, 7316, 13, 51104, 51104, 583, 412, 264, 912, 565, 11, 456, 307, 437, 311, 1219, 257, 47991, 1433, 11, 597, 51248, 51248, 307, 264, 1150, 1433, 13, 51288, 51288, 467, 1936, 9898, 281, 652, 264, 7316, 51396, 51396, 382, 1090, 30867, 382, 1944, 13, 51498, 51498, 823, 11, 341, 8513, 307, 2293, 14800, 281, 257, 8513, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.14691316588851047, "compression_ratio": 1.6534296028880866, "no_speech_prob": 2.9942468700028257e-06}, {"id": 2334, "seek": 734616, "start": 7356.32, "end": 7358.2, "text": " by sampling the latent variable z", "tokens": [50364, 400, 562, 291, 519, 466, 3034, 1478, 8399, 22660, 378, 433, 11, 50466, 50466, 300, 311, 445, 437, 436, 360, 13, 50584, 50584, 814, 17522, 264, 5176, 31565, 6713, 11, 50700, 50700, 597, 307, 287, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 264, 9834, 50872, 50872, 538, 21179, 264, 48994, 7006, 710, 50966, 50966, 4650, 281, 257, 39148, 7316, 13, 51104, 51104, 583, 412, 264, 912, 565, 11, 456, 307, 437, 311, 1219, 257, 47991, 1433, 11, 597, 51248, 51248, 307, 264, 1150, 1433, 13, 51288, 51288, 467, 1936, 9898, 281, 652, 264, 7316, 51396, 51396, 382, 1090, 30867, 382, 1944, 13, 51498, 51498, 823, 11, 341, 8513, 307, 2293, 14800, 281, 257, 8513, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.14691316588851047, "compression_ratio": 1.6534296028880866, "no_speech_prob": 2.9942468700028257e-06}, {"id": 2335, "seek": 734616, "start": 7358.2, "end": 7360.96, "text": " according to a Gaussian distribution.", "tokens": [50364, 400, 562, 291, 519, 466, 3034, 1478, 8399, 22660, 378, 433, 11, 50466, 50466, 300, 311, 445, 437, 436, 360, 13, 50584, 50584, 814, 17522, 264, 5176, 31565, 6713, 11, 50700, 50700, 597, 307, 287, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 264, 9834, 50872, 50872, 538, 21179, 264, 48994, 7006, 710, 50966, 50966, 4650, 281, 257, 39148, 7316, 13, 51104, 51104, 583, 412, 264, 912, 565, 11, 456, 307, 437, 311, 1219, 257, 47991, 1433, 11, 597, 51248, 51248, 307, 264, 1150, 1433, 13, 51288, 51288, 467, 1936, 9898, 281, 652, 264, 7316, 51396, 51396, 382, 1090, 30867, 382, 1944, 13, 51498, 51498, 823, 11, 341, 8513, 307, 2293, 14800, 281, 257, 8513, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.14691316588851047, "compression_ratio": 1.6534296028880866, "no_speech_prob": 2.9942468700028257e-06}, {"id": 2336, "seek": 734616, "start": 7360.96, "end": 7363.84, "text": " But at the same time, there is what's called a KL term, which", "tokens": [50364, 400, 562, 291, 519, 466, 3034, 1478, 8399, 22660, 378, 433, 11, 50466, 50466, 300, 311, 445, 437, 436, 360, 13, 50584, 50584, 814, 17522, 264, 5176, 31565, 6713, 11, 50700, 50700, 597, 307, 287, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 264, 9834, 50872, 50872, 538, 21179, 264, 48994, 7006, 710, 50966, 50966, 4650, 281, 257, 39148, 7316, 13, 51104, 51104, 583, 412, 264, 912, 565, 11, 456, 307, 437, 311, 1219, 257, 47991, 1433, 11, 597, 51248, 51248, 307, 264, 1150, 1433, 13, 51288, 51288, 467, 1936, 9898, 281, 652, 264, 7316, 51396, 51396, 382, 1090, 30867, 382, 1944, 13, 51498, 51498, 823, 11, 341, 8513, 307, 2293, 14800, 281, 257, 8513, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.14691316588851047, "compression_ratio": 1.6534296028880866, "no_speech_prob": 2.9942468700028257e-06}, {"id": 2337, "seek": 734616, "start": 7363.84, "end": 7364.639999999999, "text": " is the second term.", "tokens": [50364, 400, 562, 291, 519, 466, 3034, 1478, 8399, 22660, 378, 433, 11, 50466, 50466, 300, 311, 445, 437, 436, 360, 13, 50584, 50584, 814, 17522, 264, 5176, 31565, 6713, 11, 50700, 50700, 597, 307, 287, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 264, 9834, 50872, 50872, 538, 21179, 264, 48994, 7006, 710, 50966, 50966, 4650, 281, 257, 39148, 7316, 13, 51104, 51104, 583, 412, 264, 912, 565, 11, 456, 307, 437, 311, 1219, 257, 47991, 1433, 11, 597, 51248, 51248, 307, 264, 1150, 1433, 13, 51288, 51288, 467, 1936, 9898, 281, 652, 264, 7316, 51396, 51396, 382, 1090, 30867, 382, 1944, 13, 51498, 51498, 823, 11, 341, 8513, 307, 2293, 14800, 281, 257, 8513, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.14691316588851047, "compression_ratio": 1.6534296028880866, "no_speech_prob": 2.9942468700028257e-06}, {"id": 2338, "seek": 734616, "start": 7364.639999999999, "end": 7366.8, "text": " It basically tries to make the distribution", "tokens": [50364, 400, 562, 291, 519, 466, 3034, 1478, 8399, 22660, 378, 433, 11, 50466, 50466, 300, 311, 445, 437, 436, 360, 13, 50584, 50584, 814, 17522, 264, 5176, 31565, 6713, 11, 50700, 50700, 597, 307, 287, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 264, 9834, 50872, 50872, 538, 21179, 264, 48994, 7006, 710, 50966, 50966, 4650, 281, 257, 39148, 7316, 13, 51104, 51104, 583, 412, 264, 912, 565, 11, 456, 307, 437, 311, 1219, 257, 47991, 1433, 11, 597, 51248, 51248, 307, 264, 1150, 1433, 13, 51288, 51288, 467, 1936, 9898, 281, 652, 264, 7316, 51396, 51396, 382, 1090, 30867, 382, 1944, 13, 51498, 51498, 823, 11, 341, 8513, 307, 2293, 14800, 281, 257, 8513, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.14691316588851047, "compression_ratio": 1.6534296028880866, "no_speech_prob": 2.9942468700028257e-06}, {"id": 2339, "seek": 734616, "start": 7366.8, "end": 7368.84, "text": " as high entropy as possible.", "tokens": [50364, 400, 562, 291, 519, 466, 3034, 1478, 8399, 22660, 378, 433, 11, 50466, 50466, 300, 311, 445, 437, 436, 360, 13, 50584, 50584, 814, 17522, 264, 5176, 31565, 6713, 11, 50700, 50700, 597, 307, 287, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 264, 9834, 50872, 50872, 538, 21179, 264, 48994, 7006, 710, 50966, 50966, 4650, 281, 257, 39148, 7316, 13, 51104, 51104, 583, 412, 264, 912, 565, 11, 456, 307, 437, 311, 1219, 257, 47991, 1433, 11, 597, 51248, 51248, 307, 264, 1150, 1433, 13, 51288, 51288, 467, 1936, 9898, 281, 652, 264, 7316, 51396, 51396, 382, 1090, 30867, 382, 1944, 13, 51498, 51498, 823, 11, 341, 8513, 307, 2293, 14800, 281, 257, 8513, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.14691316588851047, "compression_ratio": 1.6534296028880866, "no_speech_prob": 2.9942468700028257e-06}, {"id": 2340, "seek": 734616, "start": 7368.84, "end": 7372.2, "text": " Now, this formula is exactly identical to a formula", "tokens": [50364, 400, 562, 291, 519, 466, 3034, 1478, 8399, 22660, 378, 433, 11, 50466, 50466, 300, 311, 445, 437, 436, 360, 13, 50584, 50584, 814, 17522, 264, 5176, 31565, 6713, 11, 50700, 50700, 597, 307, 287, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 264, 9834, 50872, 50872, 538, 21179, 264, 48994, 7006, 710, 50966, 50966, 4650, 281, 257, 39148, 7316, 13, 51104, 51104, 583, 412, 264, 912, 565, 11, 456, 307, 437, 311, 1219, 257, 47991, 1433, 11, 597, 51248, 51248, 307, 264, 1150, 1433, 13, 51288, 51288, 467, 1936, 9898, 281, 652, 264, 7316, 51396, 51396, 382, 1090, 30867, 382, 1944, 13, 51498, 51498, 823, 11, 341, 8513, 307, 2293, 14800, 281, 257, 8513, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.14691316588851047, "compression_ratio": 1.6534296028880866, "no_speech_prob": 2.9942468700028257e-06}, {"id": 2341, "seek": 737220, "start": 7372.2, "end": 7378.0, "text": " that people use in statistical physics.", "tokens": [50364, 300, 561, 764, 294, 22820, 10649, 13, 50654, 50654, 407, 48716, 362, 257, 588, 4618, 8513, 11, 597, 307, 341, 13, 51208, 51208, 467, 1619, 264, 1737, 2281, 307, 2681, 281, 264, 4274, 2281, 51480, 51480, 3175, 264, 4292, 1413, 264, 30867, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.12104763883225461, "compression_ratio": 1.443609022556391, "no_speech_prob": 1.2215525202918798e-05}, {"id": 2342, "seek": 737220, "start": 7378.0, "end": 7389.08, "text": " So physicists have a very famous formula, which is this.", "tokens": [50364, 300, 561, 764, 294, 22820, 10649, 13, 50654, 50654, 407, 48716, 362, 257, 588, 4618, 8513, 11, 597, 307, 341, 13, 51208, 51208, 467, 1619, 264, 1737, 2281, 307, 2681, 281, 264, 4274, 2281, 51480, 51480, 3175, 264, 4292, 1413, 264, 30867, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.12104763883225461, "compression_ratio": 1.443609022556391, "no_speech_prob": 1.2215525202918798e-05}, {"id": 2343, "seek": 737220, "start": 7389.08, "end": 7394.5199999999995, "text": " It says the free energy is equal to the average energy", "tokens": [50364, 300, 561, 764, 294, 22820, 10649, 13, 50654, 50654, 407, 48716, 362, 257, 588, 4618, 8513, 11, 597, 307, 341, 13, 51208, 51208, 467, 1619, 264, 1737, 2281, 307, 2681, 281, 264, 4274, 2281, 51480, 51480, 3175, 264, 4292, 1413, 264, 30867, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.12104763883225461, "compression_ratio": 1.443609022556391, "no_speech_prob": 1.2215525202918798e-05}, {"id": 2344, "seek": 737220, "start": 7394.5199999999995, "end": 7399.08, "text": " minus the temperature times the entropy.", "tokens": [50364, 300, 561, 764, 294, 22820, 10649, 13, 50654, 50654, 407, 48716, 362, 257, 588, 4618, 8513, 11, 597, 307, 341, 13, 51208, 51208, 467, 1619, 264, 1737, 2281, 307, 2681, 281, 264, 4274, 2281, 51480, 51480, 3175, 264, 4292, 1413, 264, 30867, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.12104763883225461, "compression_ratio": 1.443609022556391, "no_speech_prob": 1.2215525202918798e-05}, {"id": 2345, "seek": 739908, "start": 7399.08, "end": 7404.08, "text": " What they call the temperature is what I call 1 over beta.", "tokens": [50364, 708, 436, 818, 264, 4292, 307, 437, 286, 818, 502, 670, 9861, 13, 50614, 50614, 2264, 30, 50722, 50722, 400, 300, 311, 14800, 281, 341, 8513, 11, 50838, 50838, 570, 510, 341, 307, 264, 3175, 30867, 13, 50930, 51124, 2264, 11, 341, 307, 264, 912, 8513, 13, 51230, 51230, 407, 437, 321, 434, 46608, 586, 307, 257, 1737, 2281, 13, 51362, 51362, 400, 498, 1249, 295, 710, 307, 31868, 4005, 281, 767, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.22033726541619553, "compression_ratio": 1.46448087431694, "no_speech_prob": 9.66327752394136e-06}, {"id": 2346, "seek": 739908, "start": 7404.08, "end": 7406.24, "text": " OK?", "tokens": [50364, 708, 436, 818, 264, 4292, 307, 437, 286, 818, 502, 670, 9861, 13, 50614, 50614, 2264, 30, 50722, 50722, 400, 300, 311, 14800, 281, 341, 8513, 11, 50838, 50838, 570, 510, 341, 307, 264, 3175, 30867, 13, 50930, 51124, 2264, 11, 341, 307, 264, 912, 8513, 13, 51230, 51230, 407, 437, 321, 434, 46608, 586, 307, 257, 1737, 2281, 13, 51362, 51362, 400, 498, 1249, 295, 710, 307, 31868, 4005, 281, 767, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.22033726541619553, "compression_ratio": 1.46448087431694, "no_speech_prob": 9.66327752394136e-06}, {"id": 2347, "seek": 739908, "start": 7406.24, "end": 7408.5599999999995, "text": " And that's identical to this formula,", "tokens": [50364, 708, 436, 818, 264, 4292, 307, 437, 286, 818, 502, 670, 9861, 13, 50614, 50614, 2264, 30, 50722, 50722, 400, 300, 311, 14800, 281, 341, 8513, 11, 50838, 50838, 570, 510, 341, 307, 264, 3175, 30867, 13, 50930, 51124, 2264, 11, 341, 307, 264, 912, 8513, 13, 51230, 51230, 407, 437, 321, 434, 46608, 586, 307, 257, 1737, 2281, 13, 51362, 51362, 400, 498, 1249, 295, 710, 307, 31868, 4005, 281, 767, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.22033726541619553, "compression_ratio": 1.46448087431694, "no_speech_prob": 9.66327752394136e-06}, {"id": 2348, "seek": 739908, "start": 7408.5599999999995, "end": 7410.4, "text": " because here this is the minus entropy.", "tokens": [50364, 708, 436, 818, 264, 4292, 307, 437, 286, 818, 502, 670, 9861, 13, 50614, 50614, 2264, 30, 50722, 50722, 400, 300, 311, 14800, 281, 341, 8513, 11, 50838, 50838, 570, 510, 341, 307, 264, 3175, 30867, 13, 50930, 51124, 2264, 11, 341, 307, 264, 912, 8513, 13, 51230, 51230, 407, 437, 321, 434, 46608, 586, 307, 257, 1737, 2281, 13, 51362, 51362, 400, 498, 1249, 295, 710, 307, 31868, 4005, 281, 767, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.22033726541619553, "compression_ratio": 1.46448087431694, "no_speech_prob": 9.66327752394136e-06}, {"id": 2349, "seek": 739908, "start": 7414.28, "end": 7416.4, "text": " OK, this is the same formula.", "tokens": [50364, 708, 436, 818, 264, 4292, 307, 437, 286, 818, 502, 670, 9861, 13, 50614, 50614, 2264, 30, 50722, 50722, 400, 300, 311, 14800, 281, 341, 8513, 11, 50838, 50838, 570, 510, 341, 307, 264, 3175, 30867, 13, 50930, 51124, 2264, 11, 341, 307, 264, 912, 8513, 13, 51230, 51230, 407, 437, 321, 434, 46608, 586, 307, 257, 1737, 2281, 13, 51362, 51362, 400, 498, 1249, 295, 710, 307, 31868, 4005, 281, 767, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.22033726541619553, "compression_ratio": 1.46448087431694, "no_speech_prob": 9.66327752394136e-06}, {"id": 2350, "seek": 739908, "start": 7416.4, "end": 7419.04, "text": " So what we're minimizing now is a free energy.", "tokens": [50364, 708, 436, 818, 264, 4292, 307, 437, 286, 818, 502, 670, 9861, 13, 50614, 50614, 2264, 30, 50722, 50722, 400, 300, 311, 14800, 281, 341, 8513, 11, 50838, 50838, 570, 510, 341, 307, 264, 3175, 30867, 13, 50930, 51124, 2264, 11, 341, 307, 264, 912, 8513, 13, 51230, 51230, 407, 437, 321, 434, 46608, 586, 307, 257, 1737, 2281, 13, 51362, 51362, 400, 498, 1249, 295, 710, 307, 31868, 4005, 281, 767, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.22033726541619553, "compression_ratio": 1.46448087431694, "no_speech_prob": 9.66327752394136e-06}, {"id": 2351, "seek": 739908, "start": 7419.04, "end": 7424.32, "text": " And if Q of z is sufficiently powerful to actually", "tokens": [50364, 708, 436, 818, 264, 4292, 307, 437, 286, 818, 502, 670, 9861, 13, 50614, 50614, 2264, 30, 50722, 50722, 400, 300, 311, 14800, 281, 341, 8513, 11, 50838, 50838, 570, 510, 341, 307, 264, 3175, 30867, 13, 50930, 51124, 2264, 11, 341, 307, 264, 912, 8513, 13, 51230, 51230, 407, 437, 321, 434, 46608, 586, 307, 257, 1737, 2281, 13, 51362, 51362, 400, 498, 1249, 295, 710, 307, 31868, 4005, 281, 767, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.22033726541619553, "compression_ratio": 1.46448087431694, "no_speech_prob": 9.66327752394136e-06}, {"id": 2352, "seek": 742432, "start": 7424.32, "end": 7429.799999999999, "text": " be the actual distribution that it needs to be,", "tokens": [50364, 312, 264, 3539, 7316, 300, 309, 2203, 281, 312, 11, 50638, 50638, 550, 264, 16970, 3643, 364, 16970, 13, 50800, 50800, 583, 300, 311, 264, 1558, 295, 3034, 1478, 7150, 13, 51074, 51074, 509, 1936, 764, 10668, 1288, 16970, 51184, 51184, 281, 1261, 264, 3565, 295, 364, 4274, 666, 264, 4274, 295, 264, 3565, 13, 51560, 51560, 2264, 11, 293, 586, 291, 483, 364, 6597, 5472, 13, 51718, 51718, 1779, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17188908894856772, "compression_ratio": 1.5480225988700564, "no_speech_prob": 3.0881167276675114e-06}, {"id": 2353, "seek": 742432, "start": 7429.799999999999, "end": 7433.04, "text": " then the inequality becomes an inequality.", "tokens": [50364, 312, 264, 3539, 7316, 300, 309, 2203, 281, 312, 11, 50638, 50638, 550, 264, 16970, 3643, 364, 16970, 13, 50800, 50800, 583, 300, 311, 264, 1558, 295, 3034, 1478, 7150, 13, 51074, 51074, 509, 1936, 764, 10668, 1288, 16970, 51184, 51184, 281, 1261, 264, 3565, 295, 364, 4274, 666, 264, 4274, 295, 264, 3565, 13, 51560, 51560, 2264, 11, 293, 586, 291, 483, 364, 6597, 5472, 13, 51718, 51718, 1779, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17188908894856772, "compression_ratio": 1.5480225988700564, "no_speech_prob": 3.0881167276675114e-06}, {"id": 2354, "seek": 742432, "start": 7433.04, "end": 7438.5199999999995, "text": " But that's the idea of variational methods.", "tokens": [50364, 312, 264, 3539, 7316, 300, 309, 2203, 281, 312, 11, 50638, 50638, 550, 264, 16970, 3643, 364, 16970, 13, 50800, 50800, 583, 300, 311, 264, 1558, 295, 3034, 1478, 7150, 13, 51074, 51074, 509, 1936, 764, 10668, 1288, 16970, 51184, 51184, 281, 1261, 264, 3565, 295, 364, 4274, 666, 264, 4274, 295, 264, 3565, 13, 51560, 51560, 2264, 11, 293, 586, 291, 483, 364, 6597, 5472, 13, 51718, 51718, 1779, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17188908894856772, "compression_ratio": 1.5480225988700564, "no_speech_prob": 3.0881167276675114e-06}, {"id": 2355, "seek": 742432, "start": 7438.5199999999995, "end": 7440.719999999999, "text": " You basically use gensense inequality", "tokens": [50364, 312, 264, 3539, 7316, 300, 309, 2203, 281, 312, 11, 50638, 50638, 550, 264, 16970, 3643, 364, 16970, 13, 50800, 50800, 583, 300, 311, 264, 1558, 295, 3034, 1478, 7150, 13, 51074, 51074, 509, 1936, 764, 10668, 1288, 16970, 51184, 51184, 281, 1261, 264, 3565, 295, 364, 4274, 666, 264, 4274, 295, 264, 3565, 13, 51560, 51560, 2264, 11, 293, 586, 291, 483, 364, 6597, 5472, 13, 51718, 51718, 1779, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17188908894856772, "compression_ratio": 1.5480225988700564, "no_speech_prob": 3.0881167276675114e-06}, {"id": 2356, "seek": 742432, "start": 7440.719999999999, "end": 7448.24, "text": " to turn the log of an average into the average of the log.", "tokens": [50364, 312, 264, 3539, 7316, 300, 309, 2203, 281, 312, 11, 50638, 50638, 550, 264, 16970, 3643, 364, 16970, 13, 50800, 50800, 583, 300, 311, 264, 1558, 295, 3034, 1478, 7150, 13, 51074, 51074, 509, 1936, 764, 10668, 1288, 16970, 51184, 51184, 281, 1261, 264, 3565, 295, 364, 4274, 666, 264, 4274, 295, 264, 3565, 13, 51560, 51560, 2264, 11, 293, 586, 291, 483, 364, 6597, 5472, 13, 51718, 51718, 1779, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17188908894856772, "compression_ratio": 1.5480225988700564, "no_speech_prob": 3.0881167276675114e-06}, {"id": 2357, "seek": 742432, "start": 7448.24, "end": 7451.4, "text": " OK, and now you get an upper bound.", "tokens": [50364, 312, 264, 3539, 7316, 300, 309, 2203, 281, 312, 11, 50638, 50638, 550, 264, 16970, 3643, 364, 16970, 13, 50800, 50800, 583, 300, 311, 264, 1558, 295, 3034, 1478, 7150, 13, 51074, 51074, 509, 1936, 764, 10668, 1288, 16970, 51184, 51184, 281, 1261, 264, 3565, 295, 364, 4274, 666, 264, 4274, 295, 264, 3565, 13, 51560, 51560, 2264, 11, 293, 586, 291, 483, 364, 6597, 5472, 13, 51718, 51718, 1779, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17188908894856772, "compression_ratio": 1.5480225988700564, "no_speech_prob": 3.0881167276675114e-06}, {"id": 2358, "seek": 742432, "start": 7451.4, "end": 7451.92, "text": " Right?", "tokens": [50364, 312, 264, 3539, 7316, 300, 309, 2203, 281, 312, 11, 50638, 50638, 550, 264, 16970, 3643, 364, 16970, 13, 50800, 50800, 583, 300, 311, 264, 1558, 295, 3034, 1478, 7150, 13, 51074, 51074, 509, 1936, 764, 10668, 1288, 16970, 51184, 51184, 281, 1261, 264, 3565, 295, 364, 4274, 666, 264, 4274, 295, 264, 3565, 13, 51560, 51560, 2264, 11, 293, 586, 291, 483, 364, 6597, 5472, 13, 51718, 51718, 1779, 30, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17188908894856772, "compression_ratio": 1.5480225988700564, "no_speech_prob": 3.0881167276675114e-06}, {"id": 2359, "seek": 745192, "start": 7451.92, "end": 7455.64, "text": " It's this step right here.", "tokens": [50364, 467, 311, 341, 1823, 558, 510, 13, 50550, 50550, 1133, 286, 1261, 264, 14949, 300, 390, 510, 666, 364, 16970, 50804, 50804, 538, 9275, 10668, 1288, 16970, 11, 437, 286, 630, 50918, 50918, 307, 300, 286, 829, 264, 3565, 1854, 13, 51012, 51012, 821, 390, 257, 3565, 2380, 11, 293, 286, 829, 309, 1854, 13, 51146, 51146, 407, 586, 309, 311, 264, 14334, 295, 257, 3565, 51226, 51226, 2602, 295, 257, 3565, 295, 364, 14334, 13, 51356, 51356, 2264, 30, 51478, 51478, 400, 550, 570, 341, 307, 257, 8509, 11, 51602, 51602, 309, 311, 257, 2649, 295, 732, 20820, 13, 51690, 51690, 400, 570, 341, 307, 21510, 295, 364, 2281, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.116210705301036, "compression_ratio": 1.7422222222222221, "no_speech_prob": 1.0450769877934363e-05}, {"id": 2360, "seek": 745192, "start": 7455.64, "end": 7460.72, "text": " When I turn the equality that was here into an inequality", "tokens": [50364, 467, 311, 341, 1823, 558, 510, 13, 50550, 50550, 1133, 286, 1261, 264, 14949, 300, 390, 510, 666, 364, 16970, 50804, 50804, 538, 9275, 10668, 1288, 16970, 11, 437, 286, 630, 50918, 50918, 307, 300, 286, 829, 264, 3565, 1854, 13, 51012, 51012, 821, 390, 257, 3565, 2380, 11, 293, 286, 829, 309, 1854, 13, 51146, 51146, 407, 586, 309, 311, 264, 14334, 295, 257, 3565, 51226, 51226, 2602, 295, 257, 3565, 295, 364, 14334, 13, 51356, 51356, 2264, 30, 51478, 51478, 400, 550, 570, 341, 307, 257, 8509, 11, 51602, 51602, 309, 311, 257, 2649, 295, 732, 20820, 13, 51690, 51690, 400, 570, 341, 307, 21510, 295, 364, 2281, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.116210705301036, "compression_ratio": 1.7422222222222221, "no_speech_prob": 1.0450769877934363e-05}, {"id": 2361, "seek": 745192, "start": 7460.72, "end": 7463.0, "text": " by applying gensense inequality, what I did", "tokens": [50364, 467, 311, 341, 1823, 558, 510, 13, 50550, 50550, 1133, 286, 1261, 264, 14949, 300, 390, 510, 666, 364, 16970, 50804, 50804, 538, 9275, 10668, 1288, 16970, 11, 437, 286, 630, 50918, 50918, 307, 300, 286, 829, 264, 3565, 1854, 13, 51012, 51012, 821, 390, 257, 3565, 2380, 11, 293, 286, 829, 309, 1854, 13, 51146, 51146, 407, 586, 309, 311, 264, 14334, 295, 257, 3565, 51226, 51226, 2602, 295, 257, 3565, 295, 364, 14334, 13, 51356, 51356, 2264, 30, 51478, 51478, 400, 550, 570, 341, 307, 257, 8509, 11, 51602, 51602, 309, 311, 257, 2649, 295, 732, 20820, 13, 51690, 51690, 400, 570, 341, 307, 21510, 295, 364, 2281, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.116210705301036, "compression_ratio": 1.7422222222222221, "no_speech_prob": 1.0450769877934363e-05}, {"id": 2362, "seek": 745192, "start": 7463.0, "end": 7464.88, "text": " is that I put the log inside.", "tokens": [50364, 467, 311, 341, 1823, 558, 510, 13, 50550, 50550, 1133, 286, 1261, 264, 14949, 300, 390, 510, 666, 364, 16970, 50804, 50804, 538, 9275, 10668, 1288, 16970, 11, 437, 286, 630, 50918, 50918, 307, 300, 286, 829, 264, 3565, 1854, 13, 51012, 51012, 821, 390, 257, 3565, 2380, 11, 293, 286, 829, 309, 1854, 13, 51146, 51146, 407, 586, 309, 311, 264, 14334, 295, 257, 3565, 51226, 51226, 2602, 295, 257, 3565, 295, 364, 14334, 13, 51356, 51356, 2264, 30, 51478, 51478, 400, 550, 570, 341, 307, 257, 8509, 11, 51602, 51602, 309, 311, 257, 2649, 295, 732, 20820, 13, 51690, 51690, 400, 570, 341, 307, 21510, 295, 364, 2281, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.116210705301036, "compression_ratio": 1.7422222222222221, "no_speech_prob": 1.0450769877934363e-05}, {"id": 2363, "seek": 745192, "start": 7464.88, "end": 7467.56, "text": " There was a log outside, and I put it inside.", "tokens": [50364, 467, 311, 341, 1823, 558, 510, 13, 50550, 50550, 1133, 286, 1261, 264, 14949, 300, 390, 510, 666, 364, 16970, 50804, 50804, 538, 9275, 10668, 1288, 16970, 11, 437, 286, 630, 50918, 50918, 307, 300, 286, 829, 264, 3565, 1854, 13, 51012, 51012, 821, 390, 257, 3565, 2380, 11, 293, 286, 829, 309, 1854, 13, 51146, 51146, 407, 586, 309, 311, 264, 14334, 295, 257, 3565, 51226, 51226, 2602, 295, 257, 3565, 295, 364, 14334, 13, 51356, 51356, 2264, 30, 51478, 51478, 400, 550, 570, 341, 307, 257, 8509, 11, 51602, 51602, 309, 311, 257, 2649, 295, 732, 20820, 13, 51690, 51690, 400, 570, 341, 307, 21510, 295, 364, 2281, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.116210705301036, "compression_ratio": 1.7422222222222221, "no_speech_prob": 1.0450769877934363e-05}, {"id": 2364, "seek": 745192, "start": 7467.56, "end": 7469.16, "text": " So now it's the expectation of a log", "tokens": [50364, 467, 311, 341, 1823, 558, 510, 13, 50550, 50550, 1133, 286, 1261, 264, 14949, 300, 390, 510, 666, 364, 16970, 50804, 50804, 538, 9275, 10668, 1288, 16970, 11, 437, 286, 630, 50918, 50918, 307, 300, 286, 829, 264, 3565, 1854, 13, 51012, 51012, 821, 390, 257, 3565, 2380, 11, 293, 286, 829, 309, 1854, 13, 51146, 51146, 407, 586, 309, 311, 264, 14334, 295, 257, 3565, 51226, 51226, 2602, 295, 257, 3565, 295, 364, 14334, 13, 51356, 51356, 2264, 30, 51478, 51478, 400, 550, 570, 341, 307, 257, 8509, 11, 51602, 51602, 309, 311, 257, 2649, 295, 732, 20820, 13, 51690, 51690, 400, 570, 341, 307, 21510, 295, 364, 2281, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.116210705301036, "compression_ratio": 1.7422222222222221, "no_speech_prob": 1.0450769877934363e-05}, {"id": 2365, "seek": 745192, "start": 7469.16, "end": 7471.76, "text": " instead of a log of an expectation.", "tokens": [50364, 467, 311, 341, 1823, 558, 510, 13, 50550, 50550, 1133, 286, 1261, 264, 14949, 300, 390, 510, 666, 364, 16970, 50804, 50804, 538, 9275, 10668, 1288, 16970, 11, 437, 286, 630, 50918, 50918, 307, 300, 286, 829, 264, 3565, 1854, 13, 51012, 51012, 821, 390, 257, 3565, 2380, 11, 293, 286, 829, 309, 1854, 13, 51146, 51146, 407, 586, 309, 311, 264, 14334, 295, 257, 3565, 51226, 51226, 2602, 295, 257, 3565, 295, 364, 14334, 13, 51356, 51356, 2264, 30, 51478, 51478, 400, 550, 570, 341, 307, 257, 8509, 11, 51602, 51602, 309, 311, 257, 2649, 295, 732, 20820, 13, 51690, 51690, 400, 570, 341, 307, 21510, 295, 364, 2281, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.116210705301036, "compression_ratio": 1.7422222222222221, "no_speech_prob": 1.0450769877934363e-05}, {"id": 2366, "seek": 745192, "start": 7471.76, "end": 7474.2, "text": " OK?", "tokens": [50364, 467, 311, 341, 1823, 558, 510, 13, 50550, 50550, 1133, 286, 1261, 264, 14949, 300, 390, 510, 666, 364, 16970, 50804, 50804, 538, 9275, 10668, 1288, 16970, 11, 437, 286, 630, 50918, 50918, 307, 300, 286, 829, 264, 3565, 1854, 13, 51012, 51012, 821, 390, 257, 3565, 2380, 11, 293, 286, 829, 309, 1854, 13, 51146, 51146, 407, 586, 309, 311, 264, 14334, 295, 257, 3565, 51226, 51226, 2602, 295, 257, 3565, 295, 364, 14334, 13, 51356, 51356, 2264, 30, 51478, 51478, 400, 550, 570, 341, 307, 257, 8509, 11, 51602, 51602, 309, 311, 257, 2649, 295, 732, 20820, 13, 51690, 51690, 400, 570, 341, 307, 21510, 295, 364, 2281, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.116210705301036, "compression_ratio": 1.7422222222222221, "no_speech_prob": 1.0450769877934363e-05}, {"id": 2367, "seek": 745192, "start": 7474.2, "end": 7476.68, "text": " And then because this is a ratio,", "tokens": [50364, 467, 311, 341, 1823, 558, 510, 13, 50550, 50550, 1133, 286, 1261, 264, 14949, 300, 390, 510, 666, 364, 16970, 50804, 50804, 538, 9275, 10668, 1288, 16970, 11, 437, 286, 630, 50918, 50918, 307, 300, 286, 829, 264, 3565, 1854, 13, 51012, 51012, 821, 390, 257, 3565, 2380, 11, 293, 286, 829, 309, 1854, 13, 51146, 51146, 407, 586, 309, 311, 264, 14334, 295, 257, 3565, 51226, 51226, 2602, 295, 257, 3565, 295, 364, 14334, 13, 51356, 51356, 2264, 30, 51478, 51478, 400, 550, 570, 341, 307, 257, 8509, 11, 51602, 51602, 309, 311, 257, 2649, 295, 732, 20820, 13, 51690, 51690, 400, 570, 341, 307, 21510, 295, 364, 2281, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.116210705301036, "compression_ratio": 1.7422222222222221, "no_speech_prob": 1.0450769877934363e-05}, {"id": 2368, "seek": 745192, "start": 7476.68, "end": 7478.4400000000005, "text": " it's a difference of two logs.", "tokens": [50364, 467, 311, 341, 1823, 558, 510, 13, 50550, 50550, 1133, 286, 1261, 264, 14949, 300, 390, 510, 666, 364, 16970, 50804, 50804, 538, 9275, 10668, 1288, 16970, 11, 437, 286, 630, 50918, 50918, 307, 300, 286, 829, 264, 3565, 1854, 13, 51012, 51012, 821, 390, 257, 3565, 2380, 11, 293, 286, 829, 309, 1854, 13, 51146, 51146, 407, 586, 309, 311, 264, 14334, 295, 257, 3565, 51226, 51226, 2602, 295, 257, 3565, 295, 364, 14334, 13, 51356, 51356, 2264, 30, 51478, 51478, 400, 550, 570, 341, 307, 257, 8509, 11, 51602, 51602, 309, 311, 257, 2649, 295, 732, 20820, 13, 51690, 51690, 400, 570, 341, 307, 21510, 295, 364, 2281, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.116210705301036, "compression_ratio": 1.7422222222222221, "no_speech_prob": 1.0450769877934363e-05}, {"id": 2369, "seek": 745192, "start": 7478.4400000000005, "end": 7481.4400000000005, "text": " And because this is exponential of an energy,", "tokens": [50364, 467, 311, 341, 1823, 558, 510, 13, 50550, 50550, 1133, 286, 1261, 264, 14949, 300, 390, 510, 666, 364, 16970, 50804, 50804, 538, 9275, 10668, 1288, 16970, 11, 437, 286, 630, 50918, 50918, 307, 300, 286, 829, 264, 3565, 1854, 13, 51012, 51012, 821, 390, 257, 3565, 2380, 11, 293, 286, 829, 309, 1854, 13, 51146, 51146, 407, 586, 309, 311, 264, 14334, 295, 257, 3565, 51226, 51226, 2602, 295, 257, 3565, 295, 364, 14334, 13, 51356, 51356, 2264, 30, 51478, 51478, 400, 550, 570, 341, 307, 257, 8509, 11, 51602, 51602, 309, 311, 257, 2649, 295, 732, 20820, 13, 51690, 51690, 400, 570, 341, 307, 21510, 295, 364, 2281, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.116210705301036, "compression_ratio": 1.7422222222222221, "no_speech_prob": 1.0450769877934363e-05}, {"id": 2370, "seek": 748144, "start": 7481.44, "end": 7483.36, "text": " and I take the log, and I divide by beta,", "tokens": [50364, 293, 286, 747, 264, 3565, 11, 293, 286, 9845, 538, 9861, 11, 50460, 50460, 286, 483, 341, 733, 295, 1481, 8513, 13, 50544, 50544, 400, 586, 341, 307, 1219, 257, 3034, 1478, 1737, 2281, 13, 50660, 50660, 2264, 30, 50700, 50700, 400, 291, 483, 264, 5176, 2158, 295, 264, 2281, 50854, 50854, 3175, 264, 17340, 4292, 1413, 50974, 50974, 264, 30867, 295, 264, 7316, 13, 51156, 51156, 823, 11, 577, 291, 17522, 341, 307, 1071, 1657, 13, 51312, 51312, 583, 437, 300, 1355, 586, 307, 300, 291, 51432, 51432, 393, 764, 257, 1022, 6675, 473, 7316, 281, 6889, 51582, 51582, 428, 48994, 7006, 490, 13, 51646, 51646, 509, 500, 380, 362, 281, 6889, 490, 264, 957, 7316, 11, 597, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12783240496627685, "compression_ratio": 1.692883895131086, "no_speech_prob": 4.157120201853104e-06}, {"id": 2371, "seek": 748144, "start": 7483.36, "end": 7485.04, "text": " I get this kind of nice formula.", "tokens": [50364, 293, 286, 747, 264, 3565, 11, 293, 286, 9845, 538, 9861, 11, 50460, 50460, 286, 483, 341, 733, 295, 1481, 8513, 13, 50544, 50544, 400, 586, 341, 307, 1219, 257, 3034, 1478, 1737, 2281, 13, 50660, 50660, 2264, 30, 50700, 50700, 400, 291, 483, 264, 5176, 2158, 295, 264, 2281, 50854, 50854, 3175, 264, 17340, 4292, 1413, 50974, 50974, 264, 30867, 295, 264, 7316, 13, 51156, 51156, 823, 11, 577, 291, 17522, 341, 307, 1071, 1657, 13, 51312, 51312, 583, 437, 300, 1355, 586, 307, 300, 291, 51432, 51432, 393, 764, 257, 1022, 6675, 473, 7316, 281, 6889, 51582, 51582, 428, 48994, 7006, 490, 13, 51646, 51646, 509, 500, 380, 362, 281, 6889, 490, 264, 957, 7316, 11, 597, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12783240496627685, "compression_ratio": 1.692883895131086, "no_speech_prob": 4.157120201853104e-06}, {"id": 2372, "seek": 748144, "start": 7485.04, "end": 7487.36, "text": " And now this is called a variational free energy.", "tokens": [50364, 293, 286, 747, 264, 3565, 11, 293, 286, 9845, 538, 9861, 11, 50460, 50460, 286, 483, 341, 733, 295, 1481, 8513, 13, 50544, 50544, 400, 586, 341, 307, 1219, 257, 3034, 1478, 1737, 2281, 13, 50660, 50660, 2264, 30, 50700, 50700, 400, 291, 483, 264, 5176, 2158, 295, 264, 2281, 50854, 50854, 3175, 264, 17340, 4292, 1413, 50974, 50974, 264, 30867, 295, 264, 7316, 13, 51156, 51156, 823, 11, 577, 291, 17522, 341, 307, 1071, 1657, 13, 51312, 51312, 583, 437, 300, 1355, 586, 307, 300, 291, 51432, 51432, 393, 764, 257, 1022, 6675, 473, 7316, 281, 6889, 51582, 51582, 428, 48994, 7006, 490, 13, 51646, 51646, 509, 500, 380, 362, 281, 6889, 490, 264, 957, 7316, 11, 597, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12783240496627685, "compression_ratio": 1.692883895131086, "no_speech_prob": 4.157120201853104e-06}, {"id": 2373, "seek": 748144, "start": 7487.36, "end": 7488.16, "text": " OK?", "tokens": [50364, 293, 286, 747, 264, 3565, 11, 293, 286, 9845, 538, 9861, 11, 50460, 50460, 286, 483, 341, 733, 295, 1481, 8513, 13, 50544, 50544, 400, 586, 341, 307, 1219, 257, 3034, 1478, 1737, 2281, 13, 50660, 50660, 2264, 30, 50700, 50700, 400, 291, 483, 264, 5176, 2158, 295, 264, 2281, 50854, 50854, 3175, 264, 17340, 4292, 1413, 50974, 50974, 264, 30867, 295, 264, 7316, 13, 51156, 51156, 823, 11, 577, 291, 17522, 341, 307, 1071, 1657, 13, 51312, 51312, 583, 437, 300, 1355, 586, 307, 300, 291, 51432, 51432, 393, 764, 257, 1022, 6675, 473, 7316, 281, 6889, 51582, 51582, 428, 48994, 7006, 490, 13, 51646, 51646, 509, 500, 380, 362, 281, 6889, 490, 264, 957, 7316, 11, 597, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12783240496627685, "compression_ratio": 1.692883895131086, "no_speech_prob": 4.157120201853104e-06}, {"id": 2374, "seek": 748144, "start": 7488.16, "end": 7491.24, "text": " And you get the expected value of the energy", "tokens": [50364, 293, 286, 747, 264, 3565, 11, 293, 286, 9845, 538, 9861, 11, 50460, 50460, 286, 483, 341, 733, 295, 1481, 8513, 13, 50544, 50544, 400, 586, 341, 307, 1219, 257, 3034, 1478, 1737, 2281, 13, 50660, 50660, 2264, 30, 50700, 50700, 400, 291, 483, 264, 5176, 2158, 295, 264, 2281, 50854, 50854, 3175, 264, 17340, 4292, 1413, 50974, 50974, 264, 30867, 295, 264, 7316, 13, 51156, 51156, 823, 11, 577, 291, 17522, 341, 307, 1071, 1657, 13, 51312, 51312, 583, 437, 300, 1355, 586, 307, 300, 291, 51432, 51432, 393, 764, 257, 1022, 6675, 473, 7316, 281, 6889, 51582, 51582, 428, 48994, 7006, 490, 13, 51646, 51646, 509, 500, 380, 362, 281, 6889, 490, 264, 957, 7316, 11, 597, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12783240496627685, "compression_ratio": 1.692883895131086, "no_speech_prob": 4.157120201853104e-06}, {"id": 2375, "seek": 748144, "start": 7491.24, "end": 7493.639999999999, "text": " minus the inverse temperature times", "tokens": [50364, 293, 286, 747, 264, 3565, 11, 293, 286, 9845, 538, 9861, 11, 50460, 50460, 286, 483, 341, 733, 295, 1481, 8513, 13, 50544, 50544, 400, 586, 341, 307, 1219, 257, 3034, 1478, 1737, 2281, 13, 50660, 50660, 2264, 30, 50700, 50700, 400, 291, 483, 264, 5176, 2158, 295, 264, 2281, 50854, 50854, 3175, 264, 17340, 4292, 1413, 50974, 50974, 264, 30867, 295, 264, 7316, 13, 51156, 51156, 823, 11, 577, 291, 17522, 341, 307, 1071, 1657, 13, 51312, 51312, 583, 437, 300, 1355, 586, 307, 300, 291, 51432, 51432, 393, 764, 257, 1022, 6675, 473, 7316, 281, 6889, 51582, 51582, 428, 48994, 7006, 490, 13, 51646, 51646, 509, 500, 380, 362, 281, 6889, 490, 264, 957, 7316, 11, 597, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12783240496627685, "compression_ratio": 1.692883895131086, "no_speech_prob": 4.157120201853104e-06}, {"id": 2376, "seek": 748144, "start": 7493.639999999999, "end": 7497.28, "text": " the entropy of the distribution.", "tokens": [50364, 293, 286, 747, 264, 3565, 11, 293, 286, 9845, 538, 9861, 11, 50460, 50460, 286, 483, 341, 733, 295, 1481, 8513, 13, 50544, 50544, 400, 586, 341, 307, 1219, 257, 3034, 1478, 1737, 2281, 13, 50660, 50660, 2264, 30, 50700, 50700, 400, 291, 483, 264, 5176, 2158, 295, 264, 2281, 50854, 50854, 3175, 264, 17340, 4292, 1413, 50974, 50974, 264, 30867, 295, 264, 7316, 13, 51156, 51156, 823, 11, 577, 291, 17522, 341, 307, 1071, 1657, 13, 51312, 51312, 583, 437, 300, 1355, 586, 307, 300, 291, 51432, 51432, 393, 764, 257, 1022, 6675, 473, 7316, 281, 6889, 51582, 51582, 428, 48994, 7006, 490, 13, 51646, 51646, 509, 500, 380, 362, 281, 6889, 490, 264, 957, 7316, 11, 597, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12783240496627685, "compression_ratio": 1.692883895131086, "no_speech_prob": 4.157120201853104e-06}, {"id": 2377, "seek": 748144, "start": 7497.28, "end": 7500.4, "text": " Now, how you minimize this is another story.", "tokens": [50364, 293, 286, 747, 264, 3565, 11, 293, 286, 9845, 538, 9861, 11, 50460, 50460, 286, 483, 341, 733, 295, 1481, 8513, 13, 50544, 50544, 400, 586, 341, 307, 1219, 257, 3034, 1478, 1737, 2281, 13, 50660, 50660, 2264, 30, 50700, 50700, 400, 291, 483, 264, 5176, 2158, 295, 264, 2281, 50854, 50854, 3175, 264, 17340, 4292, 1413, 50974, 50974, 264, 30867, 295, 264, 7316, 13, 51156, 51156, 823, 11, 577, 291, 17522, 341, 307, 1071, 1657, 13, 51312, 51312, 583, 437, 300, 1355, 586, 307, 300, 291, 51432, 51432, 393, 764, 257, 1022, 6675, 473, 7316, 281, 6889, 51582, 51582, 428, 48994, 7006, 490, 13, 51646, 51646, 509, 500, 380, 362, 281, 6889, 490, 264, 957, 7316, 11, 597, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12783240496627685, "compression_ratio": 1.692883895131086, "no_speech_prob": 4.157120201853104e-06}, {"id": 2378, "seek": 748144, "start": 7500.4, "end": 7502.799999999999, "text": " But what that means now is that you", "tokens": [50364, 293, 286, 747, 264, 3565, 11, 293, 286, 9845, 538, 9861, 11, 50460, 50460, 286, 483, 341, 733, 295, 1481, 8513, 13, 50544, 50544, 400, 586, 341, 307, 1219, 257, 3034, 1478, 1737, 2281, 13, 50660, 50660, 2264, 30, 50700, 50700, 400, 291, 483, 264, 5176, 2158, 295, 264, 2281, 50854, 50854, 3175, 264, 17340, 4292, 1413, 50974, 50974, 264, 30867, 295, 264, 7316, 13, 51156, 51156, 823, 11, 577, 291, 17522, 341, 307, 1071, 1657, 13, 51312, 51312, 583, 437, 300, 1355, 586, 307, 300, 291, 51432, 51432, 393, 764, 257, 1022, 6675, 473, 7316, 281, 6889, 51582, 51582, 428, 48994, 7006, 490, 13, 51646, 51646, 509, 500, 380, 362, 281, 6889, 490, 264, 957, 7316, 11, 597, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12783240496627685, "compression_ratio": 1.692883895131086, "no_speech_prob": 4.157120201853104e-06}, {"id": 2379, "seek": 748144, "start": 7502.799999999999, "end": 7505.799999999999, "text": " can use a surrogate distribution to sample", "tokens": [50364, 293, 286, 747, 264, 3565, 11, 293, 286, 9845, 538, 9861, 11, 50460, 50460, 286, 483, 341, 733, 295, 1481, 8513, 13, 50544, 50544, 400, 586, 341, 307, 1219, 257, 3034, 1478, 1737, 2281, 13, 50660, 50660, 2264, 30, 50700, 50700, 400, 291, 483, 264, 5176, 2158, 295, 264, 2281, 50854, 50854, 3175, 264, 17340, 4292, 1413, 50974, 50974, 264, 30867, 295, 264, 7316, 13, 51156, 51156, 823, 11, 577, 291, 17522, 341, 307, 1071, 1657, 13, 51312, 51312, 583, 437, 300, 1355, 586, 307, 300, 291, 51432, 51432, 393, 764, 257, 1022, 6675, 473, 7316, 281, 6889, 51582, 51582, 428, 48994, 7006, 490, 13, 51646, 51646, 509, 500, 380, 362, 281, 6889, 490, 264, 957, 7316, 11, 597, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12783240496627685, "compression_ratio": 1.692883895131086, "no_speech_prob": 4.157120201853104e-06}, {"id": 2380, "seek": 748144, "start": 7505.799999999999, "end": 7507.08, "text": " your latent variable from.", "tokens": [50364, 293, 286, 747, 264, 3565, 11, 293, 286, 9845, 538, 9861, 11, 50460, 50460, 286, 483, 341, 733, 295, 1481, 8513, 13, 50544, 50544, 400, 586, 341, 307, 1219, 257, 3034, 1478, 1737, 2281, 13, 50660, 50660, 2264, 30, 50700, 50700, 400, 291, 483, 264, 5176, 2158, 295, 264, 2281, 50854, 50854, 3175, 264, 17340, 4292, 1413, 50974, 50974, 264, 30867, 295, 264, 7316, 13, 51156, 51156, 823, 11, 577, 291, 17522, 341, 307, 1071, 1657, 13, 51312, 51312, 583, 437, 300, 1355, 586, 307, 300, 291, 51432, 51432, 393, 764, 257, 1022, 6675, 473, 7316, 281, 6889, 51582, 51582, 428, 48994, 7006, 490, 13, 51646, 51646, 509, 500, 380, 362, 281, 6889, 490, 264, 957, 7316, 11, 597, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12783240496627685, "compression_ratio": 1.692883895131086, "no_speech_prob": 4.157120201853104e-06}, {"id": 2381, "seek": 748144, "start": 7507.08, "end": 7511.4, "text": " You don't have to sample from the real distribution, which", "tokens": [50364, 293, 286, 747, 264, 3565, 11, 293, 286, 9845, 538, 9861, 11, 50460, 50460, 286, 483, 341, 733, 295, 1481, 8513, 13, 50544, 50544, 400, 586, 341, 307, 1219, 257, 3034, 1478, 1737, 2281, 13, 50660, 50660, 2264, 30, 50700, 50700, 400, 291, 483, 264, 5176, 2158, 295, 264, 2281, 50854, 50854, 3175, 264, 17340, 4292, 1413, 50974, 50974, 264, 30867, 295, 264, 7316, 13, 51156, 51156, 823, 11, 577, 291, 17522, 341, 307, 1071, 1657, 13, 51312, 51312, 583, 437, 300, 1355, 586, 307, 300, 291, 51432, 51432, 393, 764, 257, 1022, 6675, 473, 7316, 281, 6889, 51582, 51582, 428, 48994, 7006, 490, 13, 51646, 51646, 509, 500, 380, 362, 281, 6889, 490, 264, 957, 7316, 11, 597, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12783240496627685, "compression_ratio": 1.692883895131086, "no_speech_prob": 4.157120201853104e-06}, {"id": 2382, "seek": 751140, "start": 7511.4, "end": 7514.48, "text": " is the same as the real distribution.", "tokens": [50364, 307, 264, 912, 382, 264, 957, 7316, 13, 50518, 50518, 509, 458, 11, 510, 11, 264, 957, 7316, 295, 710, 50652, 50652, 307, 534, 6179, 13, 50714, 50714, 286, 820, 362, 3720, 309, 13, 50786, 50786, 440, 957, 7316, 295, 710, 11, 430, 295, 710, 11, 51028, 51028, 307, 308, 281, 264, 3175, 9861, 13, 51154, 51154, 639, 767, 576, 312, 257, 819, 9861, 13, 51232, 51232, 467, 1177, 380, 362, 281, 312, 264, 912, 13, 51342, 51342, 462, 295, 2031, 11, 288, 11, 710, 6666, 538, 264, 11573, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.41645542267830143, "compression_ratio": 1.6797752808988764, "no_speech_prob": 1.0129509973921813e-05}, {"id": 2383, "seek": 751140, "start": 7514.48, "end": 7517.16, "text": " You know, here, the real distribution of z", "tokens": [50364, 307, 264, 912, 382, 264, 957, 7316, 13, 50518, 50518, 509, 458, 11, 510, 11, 264, 957, 7316, 295, 710, 50652, 50652, 307, 534, 6179, 13, 50714, 50714, 286, 820, 362, 3720, 309, 13, 50786, 50786, 440, 957, 7316, 295, 710, 11, 430, 295, 710, 11, 51028, 51028, 307, 308, 281, 264, 3175, 9861, 13, 51154, 51154, 639, 767, 576, 312, 257, 819, 9861, 13, 51232, 51232, 467, 1177, 380, 362, 281, 312, 264, 912, 13, 51342, 51342, 462, 295, 2031, 11, 288, 11, 710, 6666, 538, 264, 11573, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.41645542267830143, "compression_ratio": 1.6797752808988764, "no_speech_prob": 1.0129509973921813e-05}, {"id": 2384, "seek": 751140, "start": 7517.16, "end": 7518.4, "text": " is really complicated.", "tokens": [50364, 307, 264, 912, 382, 264, 957, 7316, 13, 50518, 50518, 509, 458, 11, 510, 11, 264, 957, 7316, 295, 710, 50652, 50652, 307, 534, 6179, 13, 50714, 50714, 286, 820, 362, 3720, 309, 13, 50786, 50786, 440, 957, 7316, 295, 710, 11, 430, 295, 710, 11, 51028, 51028, 307, 308, 281, 264, 3175, 9861, 13, 51154, 51154, 639, 767, 576, 312, 257, 819, 9861, 13, 51232, 51232, 467, 1177, 380, 362, 281, 312, 264, 912, 13, 51342, 51342, 462, 295, 2031, 11, 288, 11, 710, 6666, 538, 264, 11573, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.41645542267830143, "compression_ratio": 1.6797752808988764, "no_speech_prob": 1.0129509973921813e-05}, {"id": 2385, "seek": 751140, "start": 7518.4, "end": 7519.839999999999, "text": " I should have written it.", "tokens": [50364, 307, 264, 912, 382, 264, 957, 7316, 13, 50518, 50518, 509, 458, 11, 510, 11, 264, 957, 7316, 295, 710, 50652, 50652, 307, 534, 6179, 13, 50714, 50714, 286, 820, 362, 3720, 309, 13, 50786, 50786, 440, 957, 7316, 295, 710, 11, 430, 295, 710, 11, 51028, 51028, 307, 308, 281, 264, 3175, 9861, 13, 51154, 51154, 639, 767, 576, 312, 257, 819, 9861, 13, 51232, 51232, 467, 1177, 380, 362, 281, 312, 264, 912, 13, 51342, 51342, 462, 295, 2031, 11, 288, 11, 710, 6666, 538, 264, 11573, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.41645542267830143, "compression_ratio": 1.6797752808988764, "no_speech_prob": 1.0129509973921813e-05}, {"id": 2386, "seek": 751140, "start": 7519.839999999999, "end": 7524.679999999999, "text": " The real distribution of z, P of z,", "tokens": [50364, 307, 264, 912, 382, 264, 957, 7316, 13, 50518, 50518, 509, 458, 11, 510, 11, 264, 957, 7316, 295, 710, 50652, 50652, 307, 534, 6179, 13, 50714, 50714, 286, 820, 362, 3720, 309, 13, 50786, 50786, 440, 957, 7316, 295, 710, 11, 430, 295, 710, 11, 51028, 51028, 307, 308, 281, 264, 3175, 9861, 13, 51154, 51154, 639, 767, 576, 312, 257, 819, 9861, 13, 51232, 51232, 467, 1177, 380, 362, 281, 312, 264, 912, 13, 51342, 51342, 462, 295, 2031, 11, 288, 11, 710, 6666, 538, 264, 11573, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.41645542267830143, "compression_ratio": 1.6797752808988764, "no_speech_prob": 1.0129509973921813e-05}, {"id": 2387, "seek": 751140, "start": 7524.679999999999, "end": 7527.2, "text": " is e to the minus beta.", "tokens": [50364, 307, 264, 912, 382, 264, 957, 7316, 13, 50518, 50518, 509, 458, 11, 510, 11, 264, 957, 7316, 295, 710, 50652, 50652, 307, 534, 6179, 13, 50714, 50714, 286, 820, 362, 3720, 309, 13, 50786, 50786, 440, 957, 7316, 295, 710, 11, 430, 295, 710, 11, 51028, 51028, 307, 308, 281, 264, 3175, 9861, 13, 51154, 51154, 639, 767, 576, 312, 257, 819, 9861, 13, 51232, 51232, 467, 1177, 380, 362, 281, 312, 264, 912, 13, 51342, 51342, 462, 295, 2031, 11, 288, 11, 710, 6666, 538, 264, 11573, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.41645542267830143, "compression_ratio": 1.6797752808988764, "no_speech_prob": 1.0129509973921813e-05}, {"id": 2388, "seek": 751140, "start": 7527.2, "end": 7528.759999999999, "text": " This actually would be a different beta.", "tokens": [50364, 307, 264, 912, 382, 264, 957, 7316, 13, 50518, 50518, 509, 458, 11, 510, 11, 264, 957, 7316, 295, 710, 50652, 50652, 307, 534, 6179, 13, 50714, 50714, 286, 820, 362, 3720, 309, 13, 50786, 50786, 440, 957, 7316, 295, 710, 11, 430, 295, 710, 11, 51028, 51028, 307, 308, 281, 264, 3175, 9861, 13, 51154, 51154, 639, 767, 576, 312, 257, 819, 9861, 13, 51232, 51232, 467, 1177, 380, 362, 281, 312, 264, 912, 13, 51342, 51342, 462, 295, 2031, 11, 288, 11, 710, 6666, 538, 264, 11573, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.41645542267830143, "compression_ratio": 1.6797752808988764, "no_speech_prob": 1.0129509973921813e-05}, {"id": 2389, "seek": 751140, "start": 7528.759999999999, "end": 7530.96, "text": " It doesn't have to be the same.", "tokens": [50364, 307, 264, 912, 382, 264, 957, 7316, 13, 50518, 50518, 509, 458, 11, 510, 11, 264, 957, 7316, 295, 710, 50652, 50652, 307, 534, 6179, 13, 50714, 50714, 286, 820, 362, 3720, 309, 13, 50786, 50786, 440, 957, 7316, 295, 710, 11, 430, 295, 710, 11, 51028, 51028, 307, 308, 281, 264, 3175, 9861, 13, 51154, 51154, 639, 767, 576, 312, 257, 819, 9861, 13, 51232, 51232, 467, 1177, 380, 362, 281, 312, 264, 912, 13, 51342, 51342, 462, 295, 2031, 11, 288, 11, 710, 6666, 538, 264, 11573, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.41645542267830143, "compression_ratio": 1.6797752808988764, "no_speech_prob": 1.0129509973921813e-05}, {"id": 2390, "seek": 751140, "start": 7530.96, "end": 7536.599999999999, "text": " E of x, y, z divided by the integral", "tokens": [50364, 307, 264, 912, 382, 264, 957, 7316, 13, 50518, 50518, 509, 458, 11, 510, 11, 264, 957, 7316, 295, 710, 50652, 50652, 307, 534, 6179, 13, 50714, 50714, 286, 820, 362, 3720, 309, 13, 50786, 50786, 440, 957, 7316, 295, 710, 11, 430, 295, 710, 11, 51028, 51028, 307, 308, 281, 264, 3175, 9861, 13, 51154, 51154, 639, 767, 576, 312, 257, 819, 9861, 13, 51232, 51232, 467, 1177, 380, 362, 281, 312, 264, 912, 13, 51342, 51342, 462, 295, 2031, 11, 288, 11, 710, 6666, 538, 264, 11573, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.41645542267830143, "compression_ratio": 1.6797752808988764, "no_speech_prob": 1.0129509973921813e-05}, {"id": 2391, "seek": 753660, "start": 7536.6, "end": 7542.4800000000005, "text": " of e of x, y, z.", "tokens": [50364, 295, 308, 295, 2031, 11, 288, 11, 710, 13, 50658, 50658, 663, 311, 264, 957, 13, 50724, 50724, 759, 291, 5452, 341, 430, 666, 510, 11, 264, 16970, 510, 51278, 51278, 3643, 364, 14949, 13, 51354, 51354, 2264, 30, 51406, 51406, 509, 393, 855, 300, 264, 16998, 2158, 337, 341, 7006, 51648, 51648, 307, 562, 1249, 6915, 430, 13, 2264, 30, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13458761068490835, "compression_ratio": 1.3357142857142856, "no_speech_prob": 6.437511274270946e-06}, {"id": 2392, "seek": 753660, "start": 7542.4800000000005, "end": 7543.8, "text": " That's the real.", "tokens": [50364, 295, 308, 295, 2031, 11, 288, 11, 710, 13, 50658, 50658, 663, 311, 264, 957, 13, 50724, 50724, 759, 291, 5452, 341, 430, 666, 510, 11, 264, 16970, 510, 51278, 51278, 3643, 364, 14949, 13, 51354, 51354, 2264, 30, 51406, 51406, 509, 393, 855, 300, 264, 16998, 2158, 337, 341, 7006, 51648, 51648, 307, 562, 1249, 6915, 430, 13, 2264, 30, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13458761068490835, "compression_ratio": 1.3357142857142856, "no_speech_prob": 6.437511274270946e-06}, {"id": 2393, "seek": 753660, "start": 7543.8, "end": 7554.88, "text": " If you plug this P into here, the inequality here", "tokens": [50364, 295, 308, 295, 2031, 11, 288, 11, 710, 13, 50658, 50658, 663, 311, 264, 957, 13, 50724, 50724, 759, 291, 5452, 341, 430, 666, 510, 11, 264, 16970, 510, 51278, 51278, 3643, 364, 14949, 13, 51354, 51354, 2264, 30, 51406, 51406, 509, 393, 855, 300, 264, 16998, 2158, 337, 341, 7006, 51648, 51648, 307, 562, 1249, 6915, 430, 13, 2264, 30, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13458761068490835, "compression_ratio": 1.3357142857142856, "no_speech_prob": 6.437511274270946e-06}, {"id": 2394, "seek": 753660, "start": 7554.88, "end": 7556.400000000001, "text": " becomes an equality.", "tokens": [50364, 295, 308, 295, 2031, 11, 288, 11, 710, 13, 50658, 50658, 663, 311, 264, 957, 13, 50724, 50724, 759, 291, 5452, 341, 430, 666, 510, 11, 264, 16970, 510, 51278, 51278, 3643, 364, 14949, 13, 51354, 51354, 2264, 30, 51406, 51406, 509, 393, 855, 300, 264, 16998, 2158, 337, 341, 7006, 51648, 51648, 307, 562, 1249, 6915, 430, 13, 2264, 30, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13458761068490835, "compression_ratio": 1.3357142857142856, "no_speech_prob": 6.437511274270946e-06}, {"id": 2395, "seek": 753660, "start": 7556.400000000001, "end": 7557.4400000000005, "text": " OK?", "tokens": [50364, 295, 308, 295, 2031, 11, 288, 11, 710, 13, 50658, 50658, 663, 311, 264, 957, 13, 50724, 50724, 759, 291, 5452, 341, 430, 666, 510, 11, 264, 16970, 510, 51278, 51278, 3643, 364, 14949, 13, 51354, 51354, 2264, 30, 51406, 51406, 509, 393, 855, 300, 264, 16998, 2158, 337, 341, 7006, 51648, 51648, 307, 562, 1249, 6915, 430, 13, 2264, 30, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13458761068490835, "compression_ratio": 1.3357142857142856, "no_speech_prob": 6.437511274270946e-06}, {"id": 2396, "seek": 753660, "start": 7557.4400000000005, "end": 7562.280000000001, "text": " You can show that the smallest value for this variable", "tokens": [50364, 295, 308, 295, 2031, 11, 288, 11, 710, 13, 50658, 50658, 663, 311, 264, 957, 13, 50724, 50724, 759, 291, 5452, 341, 430, 666, 510, 11, 264, 16970, 510, 51278, 51278, 3643, 364, 14949, 13, 51354, 51354, 2264, 30, 51406, 51406, 509, 393, 855, 300, 264, 16998, 2158, 337, 341, 7006, 51648, 51648, 307, 562, 1249, 6915, 430, 13, 2264, 30, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13458761068490835, "compression_ratio": 1.3357142857142856, "no_speech_prob": 6.437511274270946e-06}, {"id": 2397, "seek": 753660, "start": 7562.280000000001, "end": 7564.88, "text": " is when Q equals P. OK?", "tokens": [50364, 295, 308, 295, 2031, 11, 288, 11, 710, 13, 50658, 50658, 663, 311, 264, 957, 13, 50724, 50724, 759, 291, 5452, 341, 430, 666, 510, 11, 264, 16970, 510, 51278, 51278, 3643, 364, 14949, 13, 51354, 51354, 2264, 30, 51406, 51406, 509, 393, 855, 300, 264, 16998, 2158, 337, 341, 7006, 51648, 51648, 307, 562, 1249, 6915, 430, 13, 2264, 30, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13458761068490835, "compression_ratio": 1.3357142857142856, "no_speech_prob": 6.437511274270946e-06}, {"id": 2398, "seek": 756488, "start": 7564.88, "end": 7570.4800000000005, "text": " And then the two terms in the inequality are equal.", "tokens": [50364, 400, 550, 264, 732, 2115, 294, 264, 16970, 366, 2681, 13, 50644, 50644, 2264, 11, 370, 300, 311, 733, 295, 264, 1333, 295, 2281, 1910, 11, 50748, 50748, 498, 291, 528, 11, 295, 3034, 1478, 38253, 13, 50872, 51028, 759, 291, 643, 281, 14722, 264, 3565, 295, 257, 2408, 295, 21510, 82, 11, 51180, 51180, 7406, 309, 538, 264, 4274, 295, 428, 2445, 1804, 30867, 1433, 13, 51708, 51708, 400, 300, 576, 976, 291, 364, 6597, 5472, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.14139509201049805, "compression_ratio": 1.494949494949495, "no_speech_prob": 4.710431312560104e-06}, {"id": 2399, "seek": 756488, "start": 7570.4800000000005, "end": 7572.56, "text": " OK, so that's kind of the sort of energy view,", "tokens": [50364, 400, 550, 264, 732, 2115, 294, 264, 16970, 366, 2681, 13, 50644, 50644, 2264, 11, 370, 300, 311, 733, 295, 264, 1333, 295, 2281, 1910, 11, 50748, 50748, 498, 291, 528, 11, 295, 3034, 1478, 38253, 13, 50872, 51028, 759, 291, 643, 281, 14722, 264, 3565, 295, 257, 2408, 295, 21510, 82, 11, 51180, 51180, 7406, 309, 538, 264, 4274, 295, 428, 2445, 1804, 30867, 1433, 13, 51708, 51708, 400, 300, 576, 976, 291, 364, 6597, 5472, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.14139509201049805, "compression_ratio": 1.494949494949495, "no_speech_prob": 4.710431312560104e-06}, {"id": 2400, "seek": 756488, "start": 7572.56, "end": 7575.04, "text": " if you want, of variational inference.", "tokens": [50364, 400, 550, 264, 732, 2115, 294, 264, 16970, 366, 2681, 13, 50644, 50644, 2264, 11, 370, 300, 311, 733, 295, 264, 1333, 295, 2281, 1910, 11, 50748, 50748, 498, 291, 528, 11, 295, 3034, 1478, 38253, 13, 50872, 51028, 759, 291, 643, 281, 14722, 264, 3565, 295, 257, 2408, 295, 21510, 82, 11, 51180, 51180, 7406, 309, 538, 264, 4274, 295, 428, 2445, 1804, 30867, 1433, 13, 51708, 51708, 400, 300, 576, 976, 291, 364, 6597, 5472, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.14139509201049805, "compression_ratio": 1.494949494949495, "no_speech_prob": 4.710431312560104e-06}, {"id": 2401, "seek": 756488, "start": 7578.16, "end": 7581.2, "text": " If you need to compute the log of a sum of exponentials,", "tokens": [50364, 400, 550, 264, 732, 2115, 294, 264, 16970, 366, 2681, 13, 50644, 50644, 2264, 11, 370, 300, 311, 733, 295, 264, 1333, 295, 2281, 1910, 11, 50748, 50748, 498, 291, 528, 11, 295, 3034, 1478, 38253, 13, 50872, 51028, 759, 291, 643, 281, 14722, 264, 3565, 295, 257, 2408, 295, 21510, 82, 11, 51180, 51180, 7406, 309, 538, 264, 4274, 295, 428, 2445, 1804, 30867, 1433, 13, 51708, 51708, 400, 300, 576, 976, 291, 364, 6597, 5472, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.14139509201049805, "compression_ratio": 1.494949494949495, "no_speech_prob": 4.710431312560104e-06}, {"id": 2402, "seek": 756488, "start": 7581.2, "end": 7591.76, "text": " replace it by the average of your function plus entropy term.", "tokens": [50364, 400, 550, 264, 732, 2115, 294, 264, 16970, 366, 2681, 13, 50644, 50644, 2264, 11, 370, 300, 311, 733, 295, 264, 1333, 295, 2281, 1910, 11, 50748, 50748, 498, 291, 528, 11, 295, 3034, 1478, 38253, 13, 50872, 51028, 759, 291, 643, 281, 14722, 264, 3565, 295, 257, 2408, 295, 21510, 82, 11, 51180, 51180, 7406, 309, 538, 264, 4274, 295, 428, 2445, 1804, 30867, 1433, 13, 51708, 51708, 400, 300, 576, 976, 291, 364, 6597, 5472, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.14139509201049805, "compression_ratio": 1.494949494949495, "no_speech_prob": 4.710431312560104e-06}, {"id": 2403, "seek": 756488, "start": 7591.76, "end": 7593.32, "text": " And that would give you an upper bound.", "tokens": [50364, 400, 550, 264, 732, 2115, 294, 264, 16970, 366, 2681, 13, 50644, 50644, 2264, 11, 370, 300, 311, 733, 295, 264, 1333, 295, 2281, 1910, 11, 50748, 50748, 498, 291, 528, 11, 295, 3034, 1478, 38253, 13, 50872, 51028, 759, 291, 643, 281, 14722, 264, 3565, 295, 257, 2408, 295, 21510, 82, 11, 51180, 51180, 7406, 309, 538, 264, 4274, 295, 428, 2445, 1804, 30867, 1433, 13, 51708, 51708, 400, 300, 576, 976, 291, 364, 6597, 5472, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.14139509201049805, "compression_ratio": 1.494949494949495, "no_speech_prob": 4.710431312560104e-06}, {"id": 2404, "seek": 759332, "start": 7593.32, "end": 7594.84, "text": " You minimize the upper bound.", "tokens": [50364, 509, 17522, 264, 6597, 5472, 13, 50440, 50440, 400, 570, 291, 2944, 760, 322, 264, 6597, 5472, 11, 50552, 50552, 291, 611, 2944, 760, 322, 264, 2445, 50614, 50614, 291, 767, 528, 281, 17522, 13, 50726, 50726, 14724, 13, 50830, 50830, 467, 311, 411, 264, 6949, 10491, 733, 295, 22811, 37642, 51060, 51060, 295, 3034, 1478, 38253, 294, 2115, 295, 2281, 13, 51442, 51442, 286, 914, 11, 291, 393, 7406, 441, 538, 430, 365, 512, 48704, 1507, 11, 51672, 51672, 457, 309, 1669, 309, 544, 6179, 13, 51776, 51776, 286, 914, 11, 309, 1177, 380, 652, 604, 2649, 11, 534, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.17899540492466517, "compression_ratio": 1.6610169491525424, "no_speech_prob": 1.1119768714706879e-05}, {"id": 2405, "seek": 759332, "start": 7594.84, "end": 7597.08, "text": " And because you push down on the upper bound,", "tokens": [50364, 509, 17522, 264, 6597, 5472, 13, 50440, 50440, 400, 570, 291, 2944, 760, 322, 264, 6597, 5472, 11, 50552, 50552, 291, 611, 2944, 760, 322, 264, 2445, 50614, 50614, 291, 767, 528, 281, 17522, 13, 50726, 50726, 14724, 13, 50830, 50830, 467, 311, 411, 264, 6949, 10491, 733, 295, 22811, 37642, 51060, 51060, 295, 3034, 1478, 38253, 294, 2115, 295, 2281, 13, 51442, 51442, 286, 914, 11, 291, 393, 7406, 441, 538, 430, 365, 512, 48704, 1507, 11, 51672, 51672, 457, 309, 1669, 309, 544, 6179, 13, 51776, 51776, 286, 914, 11, 309, 1177, 380, 652, 604, 2649, 11, 534, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.17899540492466517, "compression_ratio": 1.6610169491525424, "no_speech_prob": 1.1119768714706879e-05}, {"id": 2406, "seek": 759332, "start": 7597.08, "end": 7598.32, "text": " you also push down on the function", "tokens": [50364, 509, 17522, 264, 6597, 5472, 13, 50440, 50440, 400, 570, 291, 2944, 760, 322, 264, 6597, 5472, 11, 50552, 50552, 291, 611, 2944, 760, 322, 264, 2445, 50614, 50614, 291, 767, 528, 281, 17522, 13, 50726, 50726, 14724, 13, 50830, 50830, 467, 311, 411, 264, 6949, 10491, 733, 295, 22811, 37642, 51060, 51060, 295, 3034, 1478, 38253, 294, 2115, 295, 2281, 13, 51442, 51442, 286, 914, 11, 291, 393, 7406, 441, 538, 430, 365, 512, 48704, 1507, 11, 51672, 51672, 457, 309, 1669, 309, 544, 6179, 13, 51776, 51776, 286, 914, 11, 309, 1177, 380, 652, 604, 2649, 11, 534, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.17899540492466517, "compression_ratio": 1.6610169491525424, "no_speech_prob": 1.1119768714706879e-05}, {"id": 2407, "seek": 759332, "start": 7598.32, "end": 7600.5599999999995, "text": " you actually want to minimize.", "tokens": [50364, 509, 17522, 264, 6597, 5472, 13, 50440, 50440, 400, 570, 291, 2944, 760, 322, 264, 6597, 5472, 11, 50552, 50552, 291, 611, 2944, 760, 322, 264, 2445, 50614, 50614, 291, 767, 528, 281, 17522, 13, 50726, 50726, 14724, 13, 50830, 50830, 467, 311, 411, 264, 6949, 10491, 733, 295, 22811, 37642, 51060, 51060, 295, 3034, 1478, 38253, 294, 2115, 295, 2281, 13, 51442, 51442, 286, 914, 11, 291, 393, 7406, 441, 538, 430, 365, 512, 48704, 1507, 11, 51672, 51672, 457, 309, 1669, 309, 544, 6179, 13, 51776, 51776, 286, 914, 11, 309, 1177, 380, 652, 604, 2649, 11, 534, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.17899540492466517, "compression_ratio": 1.6610169491525424, "no_speech_prob": 1.1119768714706879e-05}, {"id": 2408, "seek": 759332, "start": 7600.5599999999995, "end": 7602.639999999999, "text": " Beautiful.", "tokens": [50364, 509, 17522, 264, 6597, 5472, 13, 50440, 50440, 400, 570, 291, 2944, 760, 322, 264, 6597, 5472, 11, 50552, 50552, 291, 611, 2944, 760, 322, 264, 2445, 50614, 50614, 291, 767, 528, 281, 17522, 13, 50726, 50726, 14724, 13, 50830, 50830, 467, 311, 411, 264, 6949, 10491, 733, 295, 22811, 37642, 51060, 51060, 295, 3034, 1478, 38253, 294, 2115, 295, 2281, 13, 51442, 51442, 286, 914, 11, 291, 393, 7406, 441, 538, 430, 365, 512, 48704, 1507, 11, 51672, 51672, 457, 309, 1669, 309, 544, 6179, 13, 51776, 51776, 286, 914, 11, 309, 1177, 380, 652, 604, 2649, 11, 534, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.17899540492466517, "compression_ratio": 1.6610169491525424, "no_speech_prob": 1.1119768714706879e-05}, {"id": 2409, "seek": 759332, "start": 7602.639999999999, "end": 7607.24, "text": " It's like the bare bones kind of simplest formulation", "tokens": [50364, 509, 17522, 264, 6597, 5472, 13, 50440, 50440, 400, 570, 291, 2944, 760, 322, 264, 6597, 5472, 11, 50552, 50552, 291, 611, 2944, 760, 322, 264, 2445, 50614, 50614, 291, 767, 528, 281, 17522, 13, 50726, 50726, 14724, 13, 50830, 50830, 467, 311, 411, 264, 6949, 10491, 733, 295, 22811, 37642, 51060, 51060, 295, 3034, 1478, 38253, 294, 2115, 295, 2281, 13, 51442, 51442, 286, 914, 11, 291, 393, 7406, 441, 538, 430, 365, 512, 48704, 1507, 11, 51672, 51672, 457, 309, 1669, 309, 544, 6179, 13, 51776, 51776, 286, 914, 11, 309, 1177, 380, 652, 604, 2649, 11, 534, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.17899540492466517, "compression_ratio": 1.6610169491525424, "no_speech_prob": 1.1119768714706879e-05}, {"id": 2410, "seek": 759332, "start": 7607.24, "end": 7614.88, "text": " of variational inference in terms of energy.", "tokens": [50364, 509, 17522, 264, 6597, 5472, 13, 50440, 50440, 400, 570, 291, 2944, 760, 322, 264, 6597, 5472, 11, 50552, 50552, 291, 611, 2944, 760, 322, 264, 2445, 50614, 50614, 291, 767, 528, 281, 17522, 13, 50726, 50726, 14724, 13, 50830, 50830, 467, 311, 411, 264, 6949, 10491, 733, 295, 22811, 37642, 51060, 51060, 295, 3034, 1478, 38253, 294, 2115, 295, 2281, 13, 51442, 51442, 286, 914, 11, 291, 393, 7406, 441, 538, 430, 365, 512, 48704, 1507, 11, 51672, 51672, 457, 309, 1669, 309, 544, 6179, 13, 51776, 51776, 286, 914, 11, 309, 1177, 380, 652, 604, 2649, 11, 534, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.17899540492466517, "compression_ratio": 1.6610169491525424, "no_speech_prob": 1.1119768714706879e-05}, {"id": 2411, "seek": 759332, "start": 7614.88, "end": 7619.48, "text": " I mean, you can replace L by P with some normalized stuff,", "tokens": [50364, 509, 17522, 264, 6597, 5472, 13, 50440, 50440, 400, 570, 291, 2944, 760, 322, 264, 6597, 5472, 11, 50552, 50552, 291, 611, 2944, 760, 322, 264, 2445, 50614, 50614, 291, 767, 528, 281, 17522, 13, 50726, 50726, 14724, 13, 50830, 50830, 467, 311, 411, 264, 6949, 10491, 733, 295, 22811, 37642, 51060, 51060, 295, 3034, 1478, 38253, 294, 2115, 295, 2281, 13, 51442, 51442, 286, 914, 11, 291, 393, 7406, 441, 538, 430, 365, 512, 48704, 1507, 11, 51672, 51672, 457, 309, 1669, 309, 544, 6179, 13, 51776, 51776, 286, 914, 11, 309, 1177, 380, 652, 604, 2649, 11, 534, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.17899540492466517, "compression_ratio": 1.6610169491525424, "no_speech_prob": 1.1119768714706879e-05}, {"id": 2412, "seek": 759332, "start": 7619.48, "end": 7621.5599999999995, "text": " but it makes it more complicated.", "tokens": [50364, 509, 17522, 264, 6597, 5472, 13, 50440, 50440, 400, 570, 291, 2944, 760, 322, 264, 6597, 5472, 11, 50552, 50552, 291, 611, 2944, 760, 322, 264, 2445, 50614, 50614, 291, 767, 528, 281, 17522, 13, 50726, 50726, 14724, 13, 50830, 50830, 467, 311, 411, 264, 6949, 10491, 733, 295, 22811, 37642, 51060, 51060, 295, 3034, 1478, 38253, 294, 2115, 295, 2281, 13, 51442, 51442, 286, 914, 11, 291, 393, 7406, 441, 538, 430, 365, 512, 48704, 1507, 11, 51672, 51672, 457, 309, 1669, 309, 544, 6179, 13, 51776, 51776, 286, 914, 11, 309, 1177, 380, 652, 604, 2649, 11, 534, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.17899540492466517, "compression_ratio": 1.6610169491525424, "no_speech_prob": 1.1119768714706879e-05}, {"id": 2413, "seek": 759332, "start": 7621.5599999999995, "end": 7623.24, "text": " I mean, it doesn't make any difference, really,", "tokens": [50364, 509, 17522, 264, 6597, 5472, 13, 50440, 50440, 400, 570, 291, 2944, 760, 322, 264, 6597, 5472, 11, 50552, 50552, 291, 611, 2944, 760, 322, 264, 2445, 50614, 50614, 291, 767, 528, 281, 17522, 13, 50726, 50726, 14724, 13, 50830, 50830, 467, 311, 411, 264, 6949, 10491, 733, 295, 22811, 37642, 51060, 51060, 295, 3034, 1478, 38253, 294, 2115, 295, 2281, 13, 51442, 51442, 286, 914, 11, 291, 393, 7406, 441, 538, 430, 365, 512, 48704, 1507, 11, 51672, 51672, 457, 309, 1669, 309, 544, 6179, 13, 51776, 51776, 286, 914, 11, 309, 1177, 380, 652, 604, 2649, 11, 534, 11, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.17899540492466517, "compression_ratio": 1.6610169491525424, "no_speech_prob": 1.1119768714706879e-05}, {"id": 2414, "seek": 762324, "start": 7623.24, "end": 7625.28, "text": " but it makes it harder to interpret.", "tokens": [50364, 457, 309, 1669, 309, 6081, 281, 7302, 13, 50466, 50636, 2264, 11, 286, 519, 321, 434, 1096, 13, 50756, 50904, 24743, 5541, 926, 337, 341, 2857, 13179, 1040, 5481, 51096, 51096, 295, 544, 813, 1922, 364, 1773, 13, 51168, 51168, 865, 11, 3356, 561, 13, 51286, 51286, 467, 390, 257, 6834, 4571, 341, 1508, 11, 51370, 51370, 4098, 2212, 264, 9121, 13, 51478, 51478, 3008, 291, 4153, 11, 1074, 11, 293, 1754, 3273, 13, 51596, 51596, 1057, 558, 13, 51628, 51628, 3664, 1127, 13, 51654, 51654, 4621, 6543, 13, 51728], "temperature": 0.0, "avg_logprob": -0.3205278023429539, "compression_ratio": 1.3972602739726028, "no_speech_prob": 1.2402939319144934e-05}, {"id": 2415, "seek": 762324, "start": 7628.679999999999, "end": 7631.08, "text": " OK, I think we're done.", "tokens": [50364, 457, 309, 1669, 309, 6081, 281, 7302, 13, 50466, 50636, 2264, 11, 286, 519, 321, 434, 1096, 13, 50756, 50904, 24743, 5541, 926, 337, 341, 2857, 13179, 1040, 5481, 51096, 51096, 295, 544, 813, 1922, 364, 1773, 13, 51168, 51168, 865, 11, 3356, 561, 13, 51286, 51286, 467, 390, 257, 6834, 4571, 341, 1508, 11, 51370, 51370, 4098, 2212, 264, 9121, 13, 51478, 51478, 3008, 291, 4153, 11, 1074, 11, 293, 1754, 3273, 13, 51596, 51596, 1057, 558, 13, 51628, 51628, 3664, 1127, 13, 51654, 51654, 4621, 6543, 13, 51728], "temperature": 0.0, "avg_logprob": -0.3205278023429539, "compression_ratio": 1.3972602739726028, "no_speech_prob": 1.2402939319144934e-05}, {"id": 2416, "seek": 762324, "start": 7634.04, "end": 7637.88, "text": " Whoever stuck around for this extra curricular session", "tokens": [50364, 457, 309, 1669, 309, 6081, 281, 7302, 13, 50466, 50636, 2264, 11, 286, 519, 321, 434, 1096, 13, 50756, 50904, 24743, 5541, 926, 337, 341, 2857, 13179, 1040, 5481, 51096, 51096, 295, 544, 813, 1922, 364, 1773, 13, 51168, 51168, 865, 11, 3356, 561, 13, 51286, 51286, 467, 390, 257, 6834, 4571, 341, 1508, 11, 51370, 51370, 4098, 2212, 264, 9121, 13, 51478, 51478, 3008, 291, 4153, 11, 1074, 11, 293, 1754, 3273, 13, 51596, 51596, 1057, 558, 13, 51628, 51628, 3664, 1127, 13, 51654, 51654, 4621, 6543, 13, 51728], "temperature": 0.0, "avg_logprob": -0.3205278023429539, "compression_ratio": 1.3972602739726028, "no_speech_prob": 1.2402939319144934e-05}, {"id": 2417, "seek": 762324, "start": 7637.88, "end": 7639.32, "text": " of more than half an hour.", "tokens": [50364, 457, 309, 1669, 309, 6081, 281, 7302, 13, 50466, 50636, 2264, 11, 286, 519, 321, 434, 1096, 13, 50756, 50904, 24743, 5541, 926, 337, 341, 2857, 13179, 1040, 5481, 51096, 51096, 295, 544, 813, 1922, 364, 1773, 13, 51168, 51168, 865, 11, 3356, 561, 13, 51286, 51286, 467, 390, 257, 6834, 4571, 341, 1508, 11, 51370, 51370, 4098, 2212, 264, 9121, 13, 51478, 51478, 3008, 291, 4153, 11, 1074, 11, 293, 1754, 3273, 13, 51596, 51596, 1057, 558, 13, 51628, 51628, 3664, 1127, 13, 51654, 51654, 4621, 6543, 13, 51728], "temperature": 0.0, "avg_logprob": -0.3205278023429539, "compression_ratio": 1.3972602739726028, "no_speech_prob": 1.2402939319144934e-05}, {"id": 2418, "seek": 762324, "start": 7639.32, "end": 7641.679999999999, "text": " Yeah, 40 people.", "tokens": [50364, 457, 309, 1669, 309, 6081, 281, 7302, 13, 50466, 50636, 2264, 11, 286, 519, 321, 434, 1096, 13, 50756, 50904, 24743, 5541, 926, 337, 341, 2857, 13179, 1040, 5481, 51096, 51096, 295, 544, 813, 1922, 364, 1773, 13, 51168, 51168, 865, 11, 3356, 561, 13, 51286, 51286, 467, 390, 257, 6834, 4571, 341, 1508, 11, 51370, 51370, 4098, 2212, 264, 9121, 13, 51478, 51478, 3008, 291, 4153, 11, 1074, 11, 293, 1754, 3273, 13, 51596, 51596, 1057, 558, 13, 51628, 51628, 3664, 1127, 13, 51654, 51654, 4621, 6543, 13, 51728], "temperature": 0.0, "avg_logprob": -0.3205278023429539, "compression_ratio": 1.3972602739726028, "no_speech_prob": 1.2402939319144934e-05}, {"id": 2419, "seek": 762324, "start": 7641.679999999999, "end": 7643.36, "text": " It was a pleasure teaching this class,", "tokens": [50364, 457, 309, 1669, 309, 6081, 281, 7302, 13, 50466, 50636, 2264, 11, 286, 519, 321, 434, 1096, 13, 50756, 50904, 24743, 5541, 926, 337, 341, 2857, 13179, 1040, 5481, 51096, 51096, 295, 544, 813, 1922, 364, 1773, 13, 51168, 51168, 865, 11, 3356, 561, 13, 51286, 51286, 467, 390, 257, 6834, 4571, 341, 1508, 11, 51370, 51370, 4098, 2212, 264, 9121, 13, 51478, 51478, 3008, 291, 4153, 11, 1074, 11, 293, 1754, 3273, 13, 51596, 51596, 1057, 558, 13, 51628, 51628, 3664, 1127, 13, 51654, 51654, 4621, 6543, 13, 51728], "temperature": 0.0, "avg_logprob": -0.3205278023429539, "compression_ratio": 1.3972602739726028, "no_speech_prob": 1.2402939319144934e-05}, {"id": 2420, "seek": 762324, "start": 7643.36, "end": 7645.5199999999995, "text": " particularly given the circumstances.", "tokens": [50364, 457, 309, 1669, 309, 6081, 281, 7302, 13, 50466, 50636, 2264, 11, 286, 519, 321, 434, 1096, 13, 50756, 50904, 24743, 5541, 926, 337, 341, 2857, 13179, 1040, 5481, 51096, 51096, 295, 544, 813, 1922, 364, 1773, 13, 51168, 51168, 865, 11, 3356, 561, 13, 51286, 51286, 467, 390, 257, 6834, 4571, 341, 1508, 11, 51370, 51370, 4098, 2212, 264, 9121, 13, 51478, 51478, 3008, 291, 4153, 11, 1074, 11, 293, 1754, 3273, 13, 51596, 51596, 1057, 558, 13, 51628, 51628, 3664, 1127, 13, 51654, 51654, 4621, 6543, 13, 51728], "temperature": 0.0, "avg_logprob": -0.3205278023429539, "compression_ratio": 1.3972602739726028, "no_speech_prob": 1.2402939319144934e-05}, {"id": 2421, "seek": 762324, "start": 7645.5199999999995, "end": 7647.88, "text": " See you tomorrow, guys, and stay safe.", "tokens": [50364, 457, 309, 1669, 309, 6081, 281, 7302, 13, 50466, 50636, 2264, 11, 286, 519, 321, 434, 1096, 13, 50756, 50904, 24743, 5541, 926, 337, 341, 2857, 13179, 1040, 5481, 51096, 51096, 295, 544, 813, 1922, 364, 1773, 13, 51168, 51168, 865, 11, 3356, 561, 13, 51286, 51286, 467, 390, 257, 6834, 4571, 341, 1508, 11, 51370, 51370, 4098, 2212, 264, 9121, 13, 51478, 51478, 3008, 291, 4153, 11, 1074, 11, 293, 1754, 3273, 13, 51596, 51596, 1057, 558, 13, 51628, 51628, 3664, 1127, 13, 51654, 51654, 4621, 6543, 13, 51728], "temperature": 0.0, "avg_logprob": -0.3205278023429539, "compression_ratio": 1.3972602739726028, "no_speech_prob": 1.2402939319144934e-05}, {"id": 2422, "seek": 762324, "start": 7647.88, "end": 7648.5199999999995, "text": " All right.", "tokens": [50364, 457, 309, 1669, 309, 6081, 281, 7302, 13, 50466, 50636, 2264, 11, 286, 519, 321, 434, 1096, 13, 50756, 50904, 24743, 5541, 926, 337, 341, 2857, 13179, 1040, 5481, 51096, 51096, 295, 544, 813, 1922, 364, 1773, 13, 51168, 51168, 865, 11, 3356, 561, 13, 51286, 51286, 467, 390, 257, 6834, 4571, 341, 1508, 11, 51370, 51370, 4098, 2212, 264, 9121, 13, 51478, 51478, 3008, 291, 4153, 11, 1074, 11, 293, 1754, 3273, 13, 51596, 51596, 1057, 558, 13, 51628, 51628, 3664, 1127, 13, 51654, 51654, 4621, 6543, 13, 51728], "temperature": 0.0, "avg_logprob": -0.3205278023429539, "compression_ratio": 1.3972602739726028, "no_speech_prob": 1.2402939319144934e-05}, {"id": 2423, "seek": 762324, "start": 7648.5199999999995, "end": 7649.04, "text": " Take care.", "tokens": [50364, 457, 309, 1669, 309, 6081, 281, 7302, 13, 50466, 50636, 2264, 11, 286, 519, 321, 434, 1096, 13, 50756, 50904, 24743, 5541, 926, 337, 341, 2857, 13179, 1040, 5481, 51096, 51096, 295, 544, 813, 1922, 364, 1773, 13, 51168, 51168, 865, 11, 3356, 561, 13, 51286, 51286, 467, 390, 257, 6834, 4571, 341, 1508, 11, 51370, 51370, 4098, 2212, 264, 9121, 13, 51478, 51478, 3008, 291, 4153, 11, 1074, 11, 293, 1754, 3273, 13, 51596, 51596, 1057, 558, 13, 51628, 51628, 3664, 1127, 13, 51654, 51654, 4621, 6543, 13, 51728], "temperature": 0.0, "avg_logprob": -0.3205278023429539, "compression_ratio": 1.3972602739726028, "no_speech_prob": 1.2402939319144934e-05}, {"id": 2424, "seek": 764904, "start": 7649.04, "end": 7653.6, "text": " Good night.", "tokens": [50364, 2205, 1818, 13, 50592], "temperature": 0.0, "avg_logprob": -0.8547253608703613, "compression_ratio": 0.5789473684210527, "no_speech_prob": 0.0007740737055428326}], "language": "en", "video_id": "gYayCG6YyO8", "entity": "Yann LeCun"}}