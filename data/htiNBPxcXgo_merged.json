{"video_id": "htiNBPxcXgo", "title": "Lesson 8 - Practical Deep Learning for Coders 2022", "description": "00:00 - Neural net from scratch\n04:46 - Parameters in PyTorch\n07:42 - Embedding from scratch\n12:21 - Embedding interpretation\n18:06 - Collab filtering in fastai\n22:11 - Embedding distance\n24:22 - Collab filtering with DL\n30:25 - Embeddings for NLP\n34:56 - Embeddings for tabular\n44:33 - Convolutions\n57:07 - Optimizing convulutions\n58:00 - Pooling\n1:05:12 - Convolutions as matrix products\n1:08:21 - Dropout\n1:14:27 - Activation functions\n1:20:41 - Jeremy AMA\n\nTranscript thanks to fmussari and bencoman from forums.fast.ai\nTimestamps based on notes by Daniel from forums.fast.ai", "author": "Jeremy Howard", "keywords": ["deep learning", "fastai"], "channel_url": "https://www.youtube.com/channel/UCX7Y2qWriXpqocG97SFW2OQ", "length": 5815, "views": 6183, "publish_date": "11/02/2022", "timestamp": 1658361600, "entity": "FastAI", "transcript": {"text": " So, welcome to the last lesson of part one of Practical Deep Learning for Coders. It's been a really fun time doing this course and depending on when you're watching and listening to this you may want to check the forums or the fast.ai website to see whether we have a part two planned, which is going to be sometime towards the end of 2022. Or if it's already past that then maybe there's even a part two already on the website. So part two goes a lot deeper than part one technically in terms of getting to the point that you should be able to read and implement research papers and deploy models in a very kind of real life situation. So yeah, last lesson we started on the collaborative filtering notebook and we were looking at collaborative filtering and this is where we got to, which is creating your own embedding module and this is a very cool place to start the lesson because you're going to learn a lot about what's really going on. And it's really important before you dig into this to make sure that you're really comfortable with the 05 ADM model neural net from scratch notebook. So if parts of this are not totally clear put it aside and redo this notebook because what we're looking at from here are kind of the abstractions that PyTorch and FastAI add on top of functionality that we've built ourselves from scratch. So if you remember in the neural network from scratch we built, we initialized a number of coefficients, a couple of different layers, you know, and a bias term and then during as the model trained we updated those coefficients by going through each layer of them and subtracting out the gradients by the learning rate. In you probably noticed that in PyTorch we don't have to go to all that trouble and I wanted to show you how PyTorch does this. PyTorch, we don't have to keep track of what our coefficients or parameters or weights are. PyTorch does that for us and the way it does that is it looks inside our module and it tries to find anything that looks like a neural network parameter or a tensor of neural network parameters and it keeps track of them. And so here is a class we've created called T which is a subclass of module and I've created one thing inside it which is something with the attribute a. So this is a in the T module and it just contains three ones. And so the idea is, you know, maybe we're creating a module and this is we're initializing some parameter that we want to train. Now we can find out what trainable parameters or just what parameters in general PyTorch knows about in our model by instantiating our model and then asking for the parameters which you then have to turn that into a list or in fastcore we have a thing called capital L which is like a fancy list which prints out the number of items in the list and shows you those items. Now in this case when we create our object of type T and ask for its parameters we get told there are zero tensors of parameters and a list with nothing in it. Now why is that? We actually said we wanted to create a tensor with three ones in it. How would we make those parameters? Well the answer is that the way you tell PyTorch what your parameters are is you actually just have to put them inside a special object called an nn.parameter. This thing almost doesn't really do anything. In fact last time I checked it really quite literally had almost no code in it. Sometimes these things change but let's take a look. Yeah okay so it's about a dozen lines of code or 20 lines of code which does almost nothing. It's got a way of being copied, it's got a way of printing itself, it's got a way of saving itself, and it's got a way of being initialized. So a parameter hardly does anything. The key thing is though that when PyTorch checks to see which parameters should it update, when it optimizes it just looks for anything that's been wrapped in this parameter class. So if we do exactly the same thing as before which is to set an attribute containing a tensor with three ones in it, but this case we wrap it in a parameter, we now get told okay there's one parameter tensor in this model and it contains a tensor with three ones. And you can see it also actually by default assumes that we're going to want require gradient. It's assuming that anything that's a parameter is something that you want to calculate gradients for. Now most of the time we don't have to do this because PyTorch provides lots of convenient things for us such as what you've seen before nn.linear which is something that also creates a tensor. So this would create a tensor of 1 by 3 without a bias term in it. This is not being wrapped in an nn.parameter but that's okay. PyTorch knows that anything which is basically a layer in a neural net is going to be a parameter. So it automatically considers this a parameter. So here's exactly the same thing again I'll construct my object of type T, I'll check for its parameters and I can see there's one tensor of parameters and there's our three things. And you'll notice that it's also automatically randomly initialized them which again is generally what we want. So PyTorch does go to some effort to try to make things easy for you. So this attribute a is a linear layer and it's got a bunch of things in it. One of the things in it is the weights and that's where you'll actually find the parameters, that is of type parameter. So a linear layer is something that contains attributes of type parameter. Okay so what we want to do is we want to create something that works just like this did which is something that creates a matrix which will be trained as we train the model. Okay so an embedding is something which yeah it's going to create a matrix of this by this and it will be a parameter and it's something that yeah we need to be able to index into as we did here. And so yeah what is happening behind the scenes you know in PyTorch. It's nice to be able to create these things ourselves in Scratch because it means we really understand it. And so let's create that exact same module that we did last time but this time we're going to use a function I've created called createPyrams. You pass in a size so such as in this case n uses by n factors and it's going to call torch.zeros to create a tensor of zeros of the size that you request and then it's going to do a normal random distribution so a Gaussian distribution of mean zero, standard deviation 0.01 to randomly initialize those and it'll put the whole thing into an nn.parameter. So that so this here is going to create an attribute called user factors which will be a parameter containing some tensor of normally distributed random numbers of this size. Excuse me. And because it's a parameter that's going to be stored inside that's going to be available as in parameters in the module. Oh I'm sneezing. So user bias will be a vector of parameters. User factors will be a matrix of parameters. Movie factors will be a matrix and movies by n factors. Movie bias will be a vector of n movies. This is the same as before. So now in the forward we can do exactly what we did before. The thing is when you put a tensor inside a parameter it has all the exact same features that a tensor has. So for example we can index into it. So this whole thing is identical to what we had before and so that's actually believe it or not all that's required to replicate PyTorch's embedding layer from scratch. So let's run those and see if it works. And there it is it's training. So we'll be able to have a look when this is done at for example model dot let's have a look movie bias. And here it is right. It's a parameter containing a bunch of numbers that have been trained. And as we'd expect it's got 1665 things in because that's how many movies we have. So a question from Jonah Raphael was does torch dot zeros not produce all zeros? Yes torch dot zeros does produce all zeros. But remember a method that ends in underscore changes in place the tensor it's being applied to. And so if you look up PyTorch normal underscore you'll see it fills itself with elements sampled from the normal distribution. So this is actually modifying this tensor in place. And so that's why we end up with something which isn't just zeros. Now this is the bit I found really fun is we trained this model but what did it do? How is it going about predicting who's going to like what movie? Well one of the things that's happened is we've created this movie bias parameter which has been optimized. And what we could do is we could find which movie IDs have the highest numbers here and the lowest numbers. So I think this is going to start lowest and then we can print out we can look inside our data loaders and grab the names of those movies for each of those five lowest numbers. And what's happened here? Well we can see broadly speaking that it has printed out some pretty crappy movies. And why is that? Well that's because when it does that matrix product that we saw in the Excel spreadsheet last week it's trying to figure out who's going to like what movie based on previous movies people have enjoyed or not. And then it adds movie bias which can be positive or negative. That's a different number for each movie. So in order to do a good job of predicting whether you're going to like a movie or not it has to know which movies are crap. And so the crap movies are going to end up with a very low movie bias parameter. And so we can actually find out which movies to people, not only which movies to people really not like, but which movies to people like less than one would expect given the kind of movie that it is. So Lawnmower Man 2 for example, not only apparently is it a crappy movie, but based on the kind of movie it is, you know it's kind of like a high tech pop kind of sci-fi movie, people who like those kinds of movies still don't like Lawnmower Man 2. So that's what this is meaning. So it's kind of nice that we can like use a model not just to predict things but to understand things about the data. So if we sort by descending it'll give us the exact opposite. So here are movies that people enjoy even when they don't normally enjoy that kind of movie. So for example LA Confidential, classic kind of film noir detective movie with the Aussie Guy Pearce. Even if you don't really like film noir detective movies you might like this one. You know Silence of the Lambs, classic kind of I guess you'd say like horror kind of, not horror is it, you know suspense movie. Even people who don't normally like kind of serial killer suspense movies tend to like this one. Now the other thing we can do is not just look at what's happening in the bias. Oh and by the way we could do the same thing with users and find out like which user just loves movies even the crappy ones you know just likes all movies and vice versa. But what about the other thing we didn't just have bias we also had movie factors which has got the number of movies as one axis and the number of factors as the other and we passed in 50. What's in that huge matrix? Well pretty hard to visualize such a huge matrix and we're not going to talk about the details but you can do something called PCA which stands for Principle Component Analysis and that basically tries to compress those 50 columns down into three columns. And then we can draw a chart of the top two. And so this is PCA component number one and this is PCA component number two and here's a bunch of movies and this is a compressed view of these latent factors that it created. And you can see that they obviously have some kind of meaning right. So over here towards the right we've got kind of you know very pop mainstream kind of movies and over here on the left we've got more of the kind of critically acclaimed gritty kind of movies. And then towards the top we've got very kind of action oriented and sci-fi movies and then down towards the bottom we've got very dialogue driven movies. So remember we didn't program in any of these things and we don't have any data at all about what movie is what kind of movie but thanks to the magic of SGD we just told it to please try and optimize these parameters and the way it was able to predict who would like what movie was it had to figure out what kinds of movies are there or what kind of taste is there for each movie. So I think that's pretty interesting. So this is called visualizing embeddings and then this is visualizing the bias. We obviously would rather not do everything both by hand like this or even like this and fast AI provides an application for collaborative learner and so we can create one and this is going to look much the same as what we just had. We're going to say how many latent factors we want and what the y range is to do the sigmoid and the multiply and then we can do fit and away it goes. So let's see how it does. Alright so it's done a bit better than our manual one. Let's take a look at the model it created. The model looks very similar to what we created in terms of the parameters. You can see these are the two embeddings and these are the two biases and we can do exactly the same thing. We can look in that model and we can find the you'll see it's not called movies. It's if items. It's users and items. This is the item bias. So we can look at the item bias, grab the weights, sort and we get a very similar result. In this case it's even more confident that LA Confidential is a movie that you should probably try watching even if you don't like those kind of movies. And Titanic is right up there as well even if you don't really like romancey kind of movies you might like this one. Even if you don't like classic detective you might like this one. You know we can have a look at the source code for Colab Learner and we can see that let's see use nn is false by default. So where our model is going to be of this type embedding.bias. So we can take a look at that. Here it is. And look this does look very similar. Okay it's creating an embedding using the size we requested for each of users by factors and items by factors and users and items. And then it's grabbing each thing from the embedding in the forward and it's doing the model play and it's adding it up and it's doing the sigmoid. So yeah it looks exactly the same. Isn't that neat. So you can see that what's actually happening in real models is not yeah it's not that weird or magic. So Kurian is asking is PCA useful in any other areas. And the answer is absolutely. And what I suggest you do if you're interested is check out our computational linear algebra course. It's five years old now but I mean this is stuff which hasn't changed for decades really. And this will teach you all about things like PCA and stuff like that. It's not nearly as directly practical as practical deep learning for coders but it's definitely like very interesting and it's the kind of thing which if you want to go deeper you know it can become pretty useful later along your path. Okay so here's something else interesting we can do. Let's grab the movie factors. So that's in our model it's the item weights and it's the weight attribute that PyTorch creates. Okay and now we can convert the movie Silence of the Lambs into its class ID and we can do that with object to ID, O to I for the titles. And so that's the movie index of Silence of the Lambs. And what we can do now is we can look through all of the movies in our latent factors and calculate how far apart each vector is, each embedding vector is from this one. And this cosine similarity is very similar to basically the Euclidean distance you know the kind of the root sum squared of the differences but it normalizes it. So it's basically the angle between the vectors. So this is going to calculate how similar each movie is to the Silence of the Lambs based on these latent factors. And so then we can find which ID is the closest. Yeah so based on this embedding distance the closest is dial M for murder which makes a lot of sense. I'm not going to discuss it today but in the book there's also some discussion about what's called the bootstrapping problem which is the question of like if you've got a new company or a new product how would you get started with making recommendations given that you don't have any previous history with which to make recommendations. And that's a very interesting problem that you can read about in the book. Now that's one way to do collaborative filtering which is where we create that do that matrix completion exercise using all those dot products. There's a different way however which is we can use deep learning and to do it with deep learning what we could do is we could basically create our user and item embeddings as per usual and then we could create a sequential model. So sequential model is just layers of a deep learning neural network in order and what we could do is we could just concatenate so in forward we could just concatenate the user and item embeddings together and then do a value so this is basically a single hidden layer neural network and then a linear layer at the end to create a single output. So this is the very you know world's most simple neural net exactly the same as the style that we created back here in our neural net from scratch. This is exactly the same but we're using PyTorch's functionality to do it more easily. So in the forward here we're going to in the same exactly the same ways we have before we'll look up the user embeddings and we'll look up the item embeddings and then this is new this is where we concatenate those two things together and put it through our neural network and then finally do our sigmoid. Now one thing different this time is that we're going to ask FastAI to figure out how big our embeddings should be and so FastAI has something called get embedding sizes and it just uses a rule of thumb that says that for 944 users we recommend 74 factor embeddings and for 1665 movies or is it the other way around I can't remember we recommend 102 factors for your embeddings. So that's what those sizes are. So now we can create that model and we can pop it into a learner and fit in the usual way. And so rather than doing all that from scratch what you can do is you can do exactly the same thing that we've done before which is to call collaborative learner but you can pass in the parameter use neural network equals true and you can then say how big do you want each layer so this is going to create a two hidden layer deep learning neural net the first will have 1500 and the second will have 50 and then you can say fit and away it goes. Okay so here is our we've got 0.87 so these are doing less well than our dot product version which is not too surprising because kind of the dot product version is really trying to take advantage of our understanding of the problem domain. In practice nowadays a lot of companies kind of combine they kind of kind of create a combined model that have a has a dot product component and also has a neural net component. The neural net components particularly helpful if you've got metadata for example information about your users like when did they sign up how old are they what sex are they you know where are they from and then those are all things that you could concatenate in with your embeddings and ditto with metadata about the movie how old is it what genre is it and so forth. All right so we've got a question from Jonah which I think is interesting and the question is is there an issue where the bias components are overwhelmingly determined by the non-experts in a genre. In general actually there's a more general issue which is in collaborative filtering recommendation systems very often a small number of users or a small number of movies overwhelm everybody else and the classic one is anime. A relatively small number of people watch anime and those groups of people watch a lot of anime. So in movie recommendations like there's a classic problem which is every time people try to make a list of well-loved movies all the top ones seem to be anime and so you can imagine what's happening in the matrix completion exercise is that there are yeah some some users that just you know really watch this one genre of movie and they watch an awful lot of them. So in general you actually do have to be pretty careful about the you know these subtlety kind of issues and yeah I won't go into details about how to deal with them but they generally involve kind of taking various kinds of ratios or normalizing things or so forth. All right so that's collaborative filtering and I wanted to show you something interesting then about embeddings which is that embeddings are not just for collaborative filtering and in fact if you've heard about embeddings before you've probably heard about them in the context of natural language processing. So you might have been wondering back when we did the hugging face transformers stuff how did we go about you know using text as inputs to models and we talked about how you can turn words into integers. We make a list so here's the movie sorry movie here's the poem I am Sam I am Daniel I am Sam Sam I am that Sam I am etc etc. We can find a list of all the unique words in that poem and make this list here and then we can give each of those words a unique ID just arbitrarily well actually in this case it's alphabetical order but it doesn't have to be and so we kind of talked about that and that's what we do with categories in general but how do we turn those into like you know lists of random numbers and you might not be surprised to hear what we do is we create an embedding matrix. So here's an embedding matrix containing four latent factors for each word in the vocab. So here's each word in the vocab and here's the embedding matrix. So if we then want to present this poem to a neural net then what we do is we list out our poem I do not like that Sam I am do you like green eggs and ham etc. Then for each word we look it up so in Excel for example we use match so that will find this word over here and find it is word ID 8 and then we will find the eighth word and the first embedding and so that's gives us that's not right 8 oh no that is right sorry here it is it's just weird column it's so it's going to be point two two then point one point zero one and here it is point two two point one point zero one etc. So this is the embedding matrix we end up with for this poem and so if you wanted to train or use and train neural network on this poem you basically turn it into this matrix of numbers and so this is what an embedding matrix looks like in an NLP model and it works exactly the same way as you can see and then you can do exactly the same things in terms of interpretation of an NLP model by looking at both the bias factors and the latent factors in a word embedding matrix. So hopefully you're getting the idea here that our you know our different models you know the inputs to them that they're based on a relatively small number of kind of basic principles and these principles are generally things like look up something in array and then we know inside the model we're basically multiplying things together adding them up and replacing the negatives and zeros. So hopefully you're getting the idea that what's going on inside a neural network is generally not that complicated but it happens very quickly and at scale. Now it's not just collaborative filtering and NLP but also tabular analysis. So in chapter 9 of the book we've talked about how random forests can be used for this which was for this is for the thing where we're predicting the auction sale price of industrial heavy equipment like bulldozers. Instead of using a random forest we can use a neural net. Now in this data set there are some continuous columns and there are some categorical columns. Now I'm not going to go into the details too much but in short the we can separate out the continuous columns and categorical columns using CONT cat split and that will automatically find which is which based on their data types. And so in this case it looks like okay so continuous columns the elapsed sale date so I think that's the number of seconds or years or something since the start of the data set is a continuous variable. And then here are the categorical variables so for example there are six different product sizes and two coupler systems, 5059 model descriptions, six enclosures, 17 tire sizes and so forth. So we can use fast AI basically to say okay we'll take that data frame and pass in the categorical and continuous variables and create some random splits and what's the dependent variable and we can create data loaders from that. And from that we can create a tabular learner and basically what that's going to do is it's going to create a pretty regular multi-layer neural network not that different to this one that we created by hand. And each of the categorical variables it's going to create an embedding for it and so I can actually show you this right so we're going to use tabular learner to create the learner and so tabular learner is one two three four five six seven eight nine lines of code and basically the main thing it does is create a tabular model and so then tabular model you're not going to understand all of it but you might be surprised at how much. So a tabular model is a module we're going to be passing in how big is each embedding going to be and tabular learner what's that passing in it's going to call get embedding sizes just like we did manually before automatically. So that's how it gets us embedding sizes and then it's going to create an embedding for each of those embedding sizes from number of inputs to number of factors. Dropout we're going to come back to later batch norm we won't do till part two. So then it's going to create a layer for each of the layers we want which is going to contain a linear layer followed by batch norm followed by dropout. It's going to add the sigmoid range we've talked about at the very end and so the forward this is the entire thing. If there's some embeddings it'll go through and get each of the embeddings using the same indexing approach we've used before. It'll concatenate them all together and then it'll run it through the layers of the neural net which are these. So yeah we don't know all of those details yet but we know quite a few of them. So that's encouraging hopefully. And once we've got that we can do the standard LR find and fit. Now this exact dataset was used in a Kaggle competition. This dataset was in a Kaggle competition and the third place getter published a paper about their technique and it's basically the exact almost the exact one I'm showing you here. So it wasn't this dataset it was a different one. It was about predicting the amount of sales in different stores but they used this basic kind of technique. And one of the interesting things is that they used a lot less manual feature engineering than the other high placed entries like they had a much simpler approach. And one of the interesting things they published a paper about their approach. So this is the team from this company and they basically describe here exactly what I just showed you these different embedding layers being concatenated together and then going through a couple of layers of a neural network. And it's showing here it points out in the paper exactly what we learnt in the last lesson which is embedding layers are exactly equivalent to linear layers on top of a one hot encoded input. And yeah they found that their technique worked really well. One of the interesting things they also showed is that you can take you can create your neural net get your trained embeddings and then you can put those embeddings into a random forest or gradient boosted tree and your mean average percent error will dramatically improve. So you can actually combine random forests and embeddings or gradient boosted trees and embeddings which is really interesting. Now what I really wanted to show you though is what they then did. So as I said this was a thing about the predicted amount that different products would sell for at different shops around Germany. And what they did was they had a so one of their embedding matrices was embeddings by region and then they did I think this is a PCA principal component analysis of the embeddings for their German regions and when they create a chart of them you can see that the locations that are close together in the embedding matrix are the same locations that are close together in Germany. So you can see here's the blue ones and here's the blue ones. And again it's important to recognize that the data that they used had no information about the location of these places. The fact that they are close together geographically is something that was figured out as being something that actually helped it to predict sales. And so in fact they then did a plot showing each of these dots is a shop, a store, and it's showing for each pair of stores how far away is it in real life in metric space and then how far away is it in embedding space. And there's this very strong correlation. So it's kind of reconstructed somehow the geography of Germany by figuring out how people shop and similar for days of the week. So there was no information really about days of the week but when they put it on the embedding matrix the days of the week, Monday, Tuesday, Wednesday, close to each other, Thursday, Friday, close to each other, as you can see Saturday and Sunday close to each other, and ditto for months of the year, January, February, March, April, May, June. So yeah really interesting cool stuff I think. What's actually going on inside a neural network? All right let's take a 10 minute break and I will see you back here at 7.10. All right folks this is something I think is really fun which is we're going to we've looked at what goes into the start of a model, the input. We've learned about how they can be categories or embeddings and embeddings are basically kind of one hot encoded categories with a little compute trick or they can just be continuous numbers. We've learned about what comes out the other side which is a bunch of activations so just a bunch of tensor of numbers which we can use things like softmax to constrain them to add up to one and so forth. And we've looked at what can go in the middle which is the matrix multipliers sandwiched together with you know as rectified linear units. And I mentioned that there are other things that can go in the middle as well but we haven't really talked about what those other things are. So I thought we might look at one of the most important and interesting version of things that can go in the middle but what you'll see is it turns out it's actually just another kind of matrix multiplication which might not be obvious at first but I'll explain. We're going to look at something called a convolution and convolutions are at the heart of a convolutional neural network. So the first thing to realize is a convolutional neural network is very very very similar to the neural networks we've seen so far. It's got inputs, it's got things that are a lot like or actually are a form of matrix multiplication sandwiched with activation functions which can be rectified linear. But there's a particular thing which makes them very useful for computer vision and I'm going to show you using this excel spreadsheet that's in our repo called conv example. And we're going to look at it using an image from MNIST. So MNIST is kind of the world's most famous computer vision data set I think because it was like the first one really which really showed image recognition being being cracked. It's pretty small by today's standards. It's a data set of handwritten digits. Each one is 28 by 28 pixels. But it yeah you know back in the mid 90s Jan Likun showed you know really practically useful performance on this data set and as a result ended up with conv nets being used in the American banking system for reading checks. So here's an example of one of those digits. This is a seven that somebody drew it's one of those ones with a stroke through it. And this is what it looks like. This is this is the image. And so I got it from MNIST. This is just one of the images from MNIST which I put into Excel. And what you see in the in the next column is a version of the image where the horizontal lines are being recognized and another one where the vertical lines are being recognized. And if you think back to that Zyler and Fergus paper that talked about what the layers of a neural net does this is absolutely an example of something that we we know that the first layer of a neural network tends to learn how to do. Now how did I do this? I did this using something called a convolution. And so what we're going to do now is we're going to zoom in to this Excel notebook. We're going to keep zooming in. We're going to keep zooming in. So take a look keep an eye on this on this image and you'll see that once we zoom in enough it's actually just made of numbers which as we discussed in the very first in the very first lesson we saw how images are made of numbers. So here they are right. Here are the numbers between zero and one. And what I just did is I just used a little trick. I used Microsoft Excel's conditional formatting to basically make things that higher numbers more red. So that's how I turned this Excel sheet and I've just rounded it off to the nearest decimal but it's actually they're actually bigger than that. And so yeah so here is the image as numbers. And so let me show you how we went about creating this top edge detector. What we did was we created this formula. Don't worry about the max. Let's focus on this. What it's doing is have a look at the colored in areas. It's taking each of these cells and multiplying them by each of these cells and then adding them up and then we do the rectified linear part which is if that ends up less than zero then make it zero. So this is like a rectified linear unit but it's not doing the normal matrix product. It's doing the equivalent of a dot product but just on these nine cells and with just these nine weights. So you might not be surprised to hear that if I move now one to the right then now it's using the next nine cells. So if I move like to the right quite a bit and down quite a bit to here it's using these nine cells. So it's still doing a dot product right which as we know is a form of matrix multiplication but it's doing it in this way where it's kind of taking advantage of the geometry of this situation that the things that are close to each other are being multiplied by this consistent group of the same nine weights each time because there's actually 28 by 28 numbers here right which I think is 768 28 times 28 that plus enough 784 but we don't want we're not we don't have 784 parameters we only have nine parameters and so this is called a convolution. So a convolution is where you basically slide this kind of little 3 by 3 matrix across a bigger matrix and at each location you do a dot product of the corresponding elements of that 3 by 3 with the corresponding elements of this 3 by 3 matrix of coefficients. Now why does that create something that finds as you see top edges? Well it's because of the particular way I constructed this 3 by 3 matrix. What I said was that all of the rows just above so these ones are going to get a 1 and all of the ones just below are going to get a minus 1 and all of the ones in the middle are going to get a 0. So let's think about what happens somewhere like here. Is let's try to find the right one. Here it is. So here we're going to get 1 times 1 plus 1 times 1 plus 1 times 1 minus 1 times 1 minus 1 times 1 minus 1 times 1 we're going to get 0. But what about up here? Here we're going to get 1 times 1 plus 1 times 1 plus 1 times 1 these do nothing because they're times 0 minus 1 times 0 so we're going to get 3. So we're only going to get 3 the highest possible number in the situation where these are all as black as possible or in this case as red as possible and these are all white. And so that's only going to happen at a horizontal edge. So the one underneath it does exactly the same thing, exactly the same formulas, the one underneath are exactly the same formulas, the 3 by 3 sliding thing here but this time we've got a different little mini matrix of coefficients which is all ones going down and all minus ones going down. And so for exactly the same reason this will only be 3 in situations where they're all one here and they're all zero here. So you can think of a convolution as being a sliding window of little mini dot products of these little 3 by 3 matrices. And they don't have to be 3 by 3, right? You could have, we could just have easily done 5 by 5 and then we'd have a 5 by 5 matrix of coefficients or whatever, whatever size you like. So the size of this is called its kernel size. This is a 3 by 3 kernel for this convolution. So then because this is deep learning we just repeat these steps again and again and again. So this is this layer I'm calling Conv1, it's the first convolutional layer. So Conv2, it's going to be a little bit different because on Conv1 we only had a single channel input, it's just black and white or you know, yeah, black and white, grayscale, one channel. But now we've got two channels. We've got the, let's make it a little smaller so we can see better, we've got the horizontal edges channel and the vertical edges channel. And we'd have a similar thing in the first layer if it's color, we'd have a red channel, a green channel and a blue channel. So now our filter, this is called the filter, this little mini matrix is called the filter. Our filter now contains a 3 by 3 by depth 2, or if you want to think of another way, two 3 by 3 kernels or one 3 by 3 by 2 kernel. And we basically do exactly the same thing, which is we're going to multiply each of these by each of these and sum them up. But then we do it for the second bit as well. We multiply each of these by each of these and sum them up. And so that gives us, I think I just picked some random numbers here, right. So this is going to now be something which can combine, oh sorry, the second one, the second set, so it's, sorry, each of the red ones by each of the blue ones, that's here, plus each of the green ones times each of the mauve ones, that's here. So this first filter is being applied to the horizontal edge detector and the second filter is being applied to the vertical edge detector. And as a result we can end up with something that combines features of the two things. And so then we can have a second channel over here, which is just a different bunch of convolutions for each of the two channels, this one times this one. Again, you can see the colors. So what we could do is if, you know, once we kind of get to the end, we'll end up, I'll show you how in a moment, we'll end up with a single set of 10 activations, one per digit we're recognizing, zero to nine. Or in this case, I think we could just create one, you know, maybe we're just trying to recognize nothing but the number seven or not the number seven, so we could just have one activation. And then we would back propagate through this using SGD in the usual way. And that is going to end up optimizing these numbers. So in this case, I manually put in the numbers I knew would create edge detectors. In real life, you start with random numbers and then you use SGD to optimize these parameters. Okay, so there's a few things we can do next. And I'm going to show you the way that was more common a few years ago and then I'll explain some changes that have been made more recently. What happened a few years ago was we would then take these activations, which as you can see, these activations now are kind of in a grid pattern, and we would do something called max-pulling. And max-pulling is kind of like a convolution, it's a sliding window, but this time as the sliding window goes across, so here we're up to here, we don't do a dot product over a filter, but instead we just take a maximum. See here, this is the maximum of these four numbers. And if we go across a little bit, this is the maximum of these four numbers. Go across a bit, go across a bit, and so forth. Oh, that goes off the edge. And you can see what happens when this is called a 2x2 max-pulling. So you can see what happens with a 2x2 max-pulling, we end up losing half of our activations on each dimension. So we're going to end up with only one quarter of the number of activations we used to have. And that's actually a good thing, because if we keep on doing convolution, max-pull, convolution, max-pull, we're going to get fewer and fewer and fewer activations until eventually, we'll just have one left, which is what we want. That's effectively what we used to do, but the other thing I mentioned is we didn't normally keep going until there's only one left. What we used to then do is we'd basically say, okay, at some point we're going to take all of the activations that are left, and we're going to basically just do a dot product of those with a bunch of coefficients, not as a convolution, but just as a normal linear layer. And this is called the dense layer. And then we would add them all up. So we'd basically end up with our final big dot product of all of the max-pulled activations by all of the weights. And we'd do that for each channel. And so that would give us our final activation. And as I say here, MNIST would actually have 10 activations, so you'd have a separate set of weights for each of the digits you're predicting, and then softmax after that. Okay, nowadays we do things very slightly differently. Nowadays we normally don't have max-pull layers. But instead what we normally do is when we do our sliding window, like this one here, we don't normally, let's go back to C. So when I go one to the right, so currently we're starting in cell column G. If I go one to the right, the next one is column H. And if I go one to the right, the next one starts in column I. So you can see it's sliding the window every three by three. Nowadays what we tend to do instead is we generally skip one. So we would normally only look at every second. So we would, after doing column I, we would skip columns J and we'd go straight to column K. And that's called a stride two convolution. We do that both across the rows and down the columns. And what that means is every time we do a convolution, we reduce our effective kind of feature size, grid size, by two on each axis. So it reduces it by four in total. So that's basically instead of doing max-pulling. And then the other thing that we do differently is nowadays we don't normally have a single dense layer at the end, a single matrix multiply at the end. But instead what we do, we generally keep doing stride two convolutions. So each one's going to reduce the grid size by two by two. We keep going down until we've got about a seven by seven grid. And then we do a single pulling at the end. And we don't normally do max-pull nowadays. Instead we do an average pull. So we average the activations of each one of the seven by seven features. This is actually quite important to know because if you think about what that means, it means that something like an ImageNet style image detector is going to end up with a seven by seven grid. Let's say it's trying to say, is this a bear? And in each of the parts of the seven by seven grid, it's basically saying, is there a bear in this part of the photo? Is there a bear in this part of the photo? Is there a bear in this part of the photo? And that detects the average of those 49 seven by seven predictions to decide whether there's a bear in the photo. That works very well if it's basically a photo of a bear. Because if the bear is big and takes up most of the frame, then most of those seven by seven bits are bits of a bear. On the other hand, if it's a teeny tiny bear in the corner, then potentially only one of those 49 squares has a bear in it. And even worse, if it's like a picture of lots and lots of different things, only one of which is a bear, it could end up not being a great bear detector. And so this is where the details of how we construct our model turn out to be important. And so if you're trying to find just one part of a photo that has a small bear in it, you might decide to use maximum pooling instead of average pooling. Because max pooling will just say, I think this is a picture of a bear if any one of those 49 bits of my grid has something that looks like a bear in it. So these are potentially important details which often get hand waved over. Although again, the key thing here is that this is happening right at the very end, that max pool or that average pool. And actually FastAI handles this for you. We do a special thing which we independently invented. I think we did it first, which is we do both max pool and average pool and we concatenate them together. We call that concat pooling. And that has since been reinvented in at least one paper. And so that means that you don't have to think too much about it because we're going to try both for you basically. So I mentioned that this is actually really just matrix multiplication. And to show you that, I'm going to show you some images created by a guy called Matthew Kleinsmith who did this actually, I think this is in our very first ever course, might have been the part two, first part two course. And he basically pointed out that in a certain way of thinking about it, it turns out that convolution is the same thing as a matrix model player. So I want to show you how he shows this. He basically says, okay, let's take this three by three image and a two by two kernel containing the coefficients alpha, beta, gamma, delta. And so in this, as we slide the window over, each of the colors, each of the colors are multiplied together, red by red plus green by green plus what is that orange by orange plus blue by blue gives you this. And so to put it another way, algebraically P equals alpha times A plus beta times B, et cetera. And so then as we slide to this part, we're multiplying again, red by red, green by green so forth, so we can say Q equals alpha times B plus beta times C, et cetera. And so this is how we calculate a convolution using the approach we just described as a sliding window. But here's another way of thinking about it. We could say, okay, we've got all these different things, A, B, C, D, E, F, G, H, J. Let's put them all into a single vector and then let's create a single matrix that has alpha, alpha, alpha, alpha, beta, beta, beta, beta, et cetera. And then if we do this matrix multiplied by this vector, we get this with these gray zeros in the appropriate places, which gives us this, which is the same as this. And so this shows that a convolution is actually a special kind of matrix multiplication. It's a matrix multiplication where there are some zeros that are fixed and some numbers that are forced to be the same. Now in practice it's going to be faster to do it this way, but it's a useful kind of thing to think about, I think, that just to realize like, oh, it's just another of these special types of matrix multiplications. Okay, I think, well, let's look at one more thing because there was one other thing that we saw and I mentioned we would look at in the tabular model, which is called dropout. And I actually have this in my Excel spreadsheet. If you go to the conv example dropout page, you'll see we've actually got a little bit more stuff here. We've got the same input as before and the same first convolution as before and the same second convolution as before. And then we've got a bunch of random numbers. They're showing as between 0 and 1, but they're actually, that's just because they're rounding off, they're actually random numbers between, you know, that are floats between 0 and 1. Over here, we're then saying if, let's have a look. So way up here, I'll zoom in a bit, I've got a dropout factor. Let's change this, say, to 0.5. There we go. So over here, this is something that says if the random number in the equivalent place is greater than 0.5, then 1, otherwise 0. And so here's a whole bunch of 1s and 0s. Now this thing here is called a dropout mask. Now what happens is we multiply over here, we multiply the dropout mask, and we multiply it by our filtered image. And what that means is we end up with exactly the same image we started with. Here's the image we started with. But it's corrupted. Random bits of it have been deleted. And based on the amount of dropout we use, so if we change it to, say, 0.2, not very much of it's deleted at all, so it's still very easy to recognize. Or else if we use lots of dropouts, say 0.8, it's almost impossible to see what the number was. And then we use this as the input to the next layer. So that seems weird. Why would we delete some data at random from our processed image, from our activations after a layer of the convolutions? Well the reason is that a human is able to look at this corrupted image and still recognize it's a 7. And the idea is that a computer should be able to as well. And if we randomly delete different bits of the activations each time, then the computer is forced to learn the underlying real representation rather than overfitting. You can think of this as data augmentation, but it's data augmentation not for the inputs, but data augmentation for the activations. So this is called a dropout layer. And so dropout layers are really helpful for avoiding overfitting. And you can decide how much you want to compromise between good generalization, so avoiding overfitting, versus getting something that works really well on the training data. And so the more dropout you use, the less good it's going to be on the training data, but the better it ought to generalize. And so this comes from a paper by Jeffrey Hinton's group quite a few years ago now. Ruslan's now at Apple I think. And then Kujewski and Hinton went on to found Google Brain. And you can see here they've got this picture of a fully connected neural network, two layers just like the one we built. And here, look, they're randomly deleting some of the activations. And all that's left is these connections. And so that's a different bunch that's going to be deleted each batch. I thought this was an interesting point. So dropout, which is super important, was actually developed in a master's thesis. And it was rejected from the main neural networks conference, then called NIPS, now called NeurIPS. So it ended up being disseminated through Archive, which is a preprint server. And as has just been pointed out on our chat, that Ilya was one of the founders of OpenAI. I don't know what happened to Nitish. I think he went to Google Brain as well, maybe. Yeah, so peer review is a very fallible thing in both directions. And it's great that we have preprint servers so we can read stuff like this, even if reviewers decide it's not worthy. It's been one of the most important papers ever. OK, now I think that's given us a good tour now. We've really seen quite a few ways of dealing with input to a neural network, quite a few of the things that can happen in the middle of a neural network. We've only talked about rectified linear units, which is this one here. 0 if x is less than 0 or x otherwise. These are some of the other activations you can use. Don't use this one, of course, because you end up with a linear model. But they're all just different functions. I should mention, it turns out these don't matter very much. Pretty much any non-linearity works fine. So we don't spend much time talking about activation functions, even in part two of the course, just a little bit. So yeah, so we understand there are inputs. They can be one-hot encoded or embeddings, which is a computational shortcut. There are sandwich layers of matrix multipliers and activation functions. The matrix multipliers can sometimes be special cases, such as the convolutions or the embeddings. The output can go through some tweaking, such as the softmax. And then, of course, you've got the loss function, such as cross entropy loss or mean squared error or mean absolute error. But there's nothing too crazy going on in there. So I feel like we've got a good sense now of what goes inside a wide range of neural nets. You're not going to see anything too weird from here. And we've also seen a wide range of applications. So before you come back to do part two, you know, what now? And we're going to have a little AMA session here. And in fact, one of the questions was, what now? So this is quite good. One thing I strongly suggest is if you've got this far, it's probably worth you investing your time in reading Radek's book, which is meta-learning. And so meta-learning is very heavily based on the kind of teachings of fast AI over the last few years and is all about how to learn deep learning and learn pretty much anything. Yeah, because, you know, you've got to this point, you may as well know how to get to the next point as well as possible. And the main thing you'll see that Radek talks about, or one of the main things, is practicing and writing. So if you've kind of zipped through the videos on 2x and haven't done any exercises, go back and watch the videos again. You know, a lot of the best students end up watching them two or three times, probably more like three times. And actually go through and code as you watch and experiment. You know, write posts, blog posts about what you're doing. Spend time on the forum, both helping others and seeing other people's answers to questions. Read the success stories on the forum and of people's projects to get inspiration for things you could try. One of the most important things to do is to get together with other people. For example, you can do, you know, a Zoom study group. In fact, on our Discord, which you can find through our forum, there's always study groups going on. Or you can create your own. You know, a study group to go through the book together. Yeah and of course, you know, build stuff. And sometimes it's tricky to always be able to build stuff for work because maybe there isn't, you're not quite in the right area or they're not quite ready to try out deep learning yet. But that's okay. You know, build some hobby projects. Build some stuff just for fun or build some stuff that you're passionate about. Yeah, so it's really important to not just put the videos away and go away and do something else because you'll forget everything you've learned and you won't have practiced. So one of our community members went on to create an activation function, for example, which is MISH, which is now, as Tanishik has just reminded me on our forums, is now used in many of the state-of-the-art networks around the world, which is pretty cool. And he's now at Miele, I think, a research, one of the top research labs in the world. I wonder how that's doing. Let's have a look. Go to Google Scholar. Nice, 486 citations. They're doing great. All right. Let's have a look at how our AMA topic is going and pick out some of the highest ranked AMAs. Okay. So the first one is from Lucas. And actually, maybe I should... Actually, let's switch our view here. So our first AMA is from Lucas, and Lucas asks, how do you stay motivated? I often find myself overwhelmed in this field. There are so many new things coming up that I feel like I have to put so much energy just to keep my head above the waterline. Yeah, that's a very interesting question. I mean, I think Lucas, the important thing is to realize you don't have to know everything. You know, in fact, nobody knows everything, and that's okay. What people do is they take an interest in some area, and they follow that, and they try and do the best job they can of keeping up with some little sub area. And if your little sub area is too much to keep up on, pick a sub sub area. Yeah, there's nothing like... there's no need for it to be demotivating that there's a lot of people doing a lot of interesting work and a lot of different subfields. That's cool. You know, it used to be kind of dull when there's only basically five labs in the world working on neural nets. And yeah, from time to time, you know, take a dip into other areas that maybe you're not following as closely. But when you're just starting out, you'll find that things are not changing that fast at all, really. It can kind of look that way because people are always putting out press releases about their new tweaks. But fundamentally, the stuff that is in the course now is not that different to what was in the course five years ago. The foundations haven't changed. And it's not that different, in fact, to the convolutional neural network that Jan Lekun used on MNIST back in 1996. The basic ideas I've described are forever, you know, the way the inputs work and the sandwiches of matrix multipliers and activation functions and the stuff you do to the final layer. You know, everything else is tweaks. And the more you learn about those basic ideas, the more you'll recognize those tweaks as simple little tweaks that you'll be able to quickly get your head around. So then Lucas goes on to ask or to comment, another thing that constantly bothers me as I feel the field is getting more and more skewed towards bigger and more computationally expensive models and huge amounts of data. I keep wondering if in some years from now, I would still be able to train reasonable models with a single GPU or if everything is going to require a compute cluster. Yeah, that's a great question. I get that a lot. But interestingly, you know, I've been teaching people machine learning and data science stuff for nearly 30 years. And I've had a variation of this question throughout. And the reason is that engineers always want to push the envelope on the biggest computers they can find. You know, that's just this like fun thing engineers love to do. And by definition, they're going to get slightly better results than people doing exactly the same thing on smaller computers. So it always looks like, oh, you need big computers to be state of the art. But that's actually never true, right? Because there's always smarter ways to do things, not just bigger ways to do things. And so, you know, when you look at fast AI's Dawnbench success, when we trained ImageNet faster than anybody had trained it before on standard GPUs, you know, me and a bunch of students, that was not meant to happen. You know, Google was working very hard with their TPU introduction to try to show how good they were. Intel was using like 256 PCs in parallel or something. But yeah, you know, we used common sense and smarts and showed what can be done. You know, it's also a case of picking the problems you solve. So I would not be probably doing like going head to head up against codecs and trying to create code from English descriptions. You know, because that's a problem that does probably require very large neural nets and very large amounts of data. But if you pick areas in different domains, you know, there's still huge areas where much smaller models are still going to be state of the art. So hopefully that helped answer your question. Let's see what else we got here. So Daniel has obviously been following my journey with teaching my daughter math. So I homeschool my daughter. And Daniel asks, how do you homeschool young children, science in general and math in particular? Would you share your experiences by blogging or in lectures someday? Yeah, I could do that. So I actually spent quite a few months just reading research papers about education recently. So I do probably have a lot I probably need to talk about at some stage. But yeah, broadly speaking, I lean into using computers and tablets a lot more than most people because actually there's an awful lot of really great apps that are super compelling. They're adaptive, so they go at the right speed for the student and they're fun. And I really like my daughter to have fun. You know, I really don't like to force her to do things. And for example, there's a really cool app called Dragon Box Algebra 5 Plus, which teaches algebra to five-year-olds by using a really fun computer game involving helping dragon eggs to hatch. And it turns out that yeah, algebra, the basic ideas of algebra are no more complex than the basic ideas that we do in other kindergarten math. And all the parents I know of who have given their kids Dragon Box Algebra 5 Plus, their kids have successfully learned algebra. So that would be an example. But yeah, we should talk about this more at some point. All right. Let's see what else we've got here. So Farah says, the walkthroughs have been a game changer for me. The knowledge and tips you shared in those sessions are skills required to become an effective machine learning practitioner and utilize fast AI more effectively. Have you considered making the walkthroughs a more formal part of the course, doing a separate software engineering course, or continuing live coding sessions between part one and two? So yes, I am going to keep doing live coding sessions. At the moment, we've switched to those specifically to focusing on APL. And then in a couple of weeks, they're going to be going to fast AI study groups. And then after that, they'll gradually turn back into more live coding sessions. But yeah, the thing I try to do in my live coding or study groups, whatever, is definitely try to show the foundational techniques that just make life easier as a coder or a data scientist. When I say foundational, I mean, yeah, the stuff which you can reuse again and again and again, like learning regular expressions really well, or knowing how to use VM, or understanding how to use the terminal and command line, you know, all that kind of stuff. Never goes out of style. It never gets old. And yeah, I do plan to at some point, hopefully, actually do a course really all about learning that stuff specifically. But yeah, for now, the best approach is follow along with the live coding and stuff. Okay, WGPUBs, which is Wade, asks, how do you turn a model into a business? Specifically, how does a coder with little or no startup experience turn an ML-based Gradio prototype into a legitimate business venture? Okay, I plan to do a course about this at some point as well. So, you know, obviously, there isn't a two-minute version to this. But the key thing with creating a legitimate business venture is to solve a legitimate problem, you know, a problem that people need solving and which they will pay you to solve. And so it's important not to start with your fun Gradio prototype as a basis for your business, but instead start with, here's a problem I want to solve. And generally speaking, you should try to pick a problem that you understand better than most people. So it's either a problem that you face day to day in your work or in some hobby or passion that you have or that, you know, your club has or your local school has or your spouse deals with in their workplace. You know, it's something where you understand that there's something that doesn't work as well as it ought to, particularly something where you think to yourself, you know, if they just used deep learning here or some algorithm here or some better compute here, that problem would go away. And that's the start of a business. And so then my friend Eric Reese wrote a book called The Lean Startup where he describes what you do next, which is basically you fake it. You create, so he calls it the minimum viable product. You create something that solves that problem, that takes you as little time as possible to create. It could be very manual. It can be loss making. It's fine. You know, even the bit in the middle where you're like, oh, there's going to be a neural net here. It's fine to like launch without the neural net and do everything by hand. You're just trying to find out are people going to pay for this and is this actually useful? And then once you have, you know, hopefully confirmed that the need is real and that people will pay for it and you can solve the need, you can gradually make it less and less of a fake, you know, and do more and more getting the product to where you want it to be. Okay. I don't know how to pronounce the name. M-I-W-O-J-C. M-I-W-O-J-C says, Jeremy, can you share some of your productivity hacks from the content you produce that may see me work 24 hours a day? Okay. I certainly don't do that. I think one of my main productivity hacks actually is not to work too hard or at least not to work too hard, not to work too much. I spend probably less hours a day working than most people, I would guess. But I think I do a couple of things differently when I'm working. One is I've spent half, at least half, of every working day since I was about 18 learning or practicing something new. It could be a new language, it could be a new algorithm, it could be something I read about. And nearly all of that time, therefore, I've been doing that thing more slowly than I would if I just used something I already knew, which often drives my coworkers crazy because they're like, why aren't you focusing on getting that thing done? But in the other 50% of the time, I'm constantly building up this exponentially improving base of expertise in a wide range of areas. And so now I do find I can do things often orders of magnitude faster than people around me or certainly many multiples faster than people around me because I know a whole bunch of tools and skills and ideas which other people don't necessarily know. I think that's one thing that's been helpful. And then another is, yeah, like trying to really not overdo things, like get good sleep and eat well and exercise well. And also I think it's a case of tenacity. I've noticed a lot of people give up much earlier than I do. So yeah, if you just keep going until something's actually finished, then that's going to put you in a small minority, to be honest. Most people don't do that. When I say finished, like finish something really nicely. And I try to make it like, so I particularly like coding, and so I try to do a lot of coding related stuff. So I create things like NBdev, and NBdev makes it much, much easier for me to finish something nicely, you know. So in my kind of chosen area, I've spent quite a bit of time trying to make sure it's really easy for me to like get out a blog post, get out a Python library, get out a notebook analysis, whatever. So yeah, trying to make these things I want to do easier, and so then I'll do them more. So well, thank you everybody. It's been a lot of fun. Really appreciate you taking the time to go through this course with me. Yeah, if you enjoyed it, it would really help if you would give a like on YouTube, because it really helps other people find the course, goes into the YouTube recommendation system. And please do come and help other beginners on forums.fast.ai. It's a great way to learn yourself, is to try to teach other people. And yeah, I hope you'll join us in part two. Thanks everybody very much. I've really enjoyed this process, and I hope to get to meet more of you in person in the future. Bye.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 17.28, "text": " So, welcome to the last lesson of part one of Practical Deep Learning for Coders.", "tokens": [50364, 407, 11, 2928, 281, 264, 1036, 6898, 295, 644, 472, 295, 19170, 804, 14895, 15205, 337, 383, 378, 433, 13, 51228, 51228, 467, 311, 668, 257, 534, 1019, 565, 884, 341, 1164, 293, 5413, 322, 562, 291, 434, 1976, 293, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14249274947426535, "compression_ratio": 1.2706766917293233, "no_speech_prob": 0.0037061062175780535}, {"id": 1, "seek": 0, "start": 17.28, "end": 27.400000000000002, "text": " It's been a really fun time doing this course and depending on when you're watching and", "tokens": [50364, 407, 11, 2928, 281, 264, 1036, 6898, 295, 644, 472, 295, 19170, 804, 14895, 15205, 337, 383, 378, 433, 13, 51228, 51228, 467, 311, 668, 257, 534, 1019, 565, 884, 341, 1164, 293, 5413, 322, 562, 291, 434, 1976, 293, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14249274947426535, "compression_ratio": 1.2706766917293233, "no_speech_prob": 0.0037061062175780535}, {"id": 2, "seek": 2740, "start": 27.4, "end": 34.08, "text": " listening to this you may want to check the forums or the fast.ai website to see whether", "tokens": [50364, 4764, 281, 341, 291, 815, 528, 281, 1520, 264, 26998, 420, 264, 2370, 13, 1301, 3144, 281, 536, 1968, 50698, 50698, 321, 362, 257, 644, 732, 8589, 11, 597, 307, 516, 281, 312, 15053, 3030, 264, 917, 295, 20229, 13, 51128, 51128, 1610, 498, 309, 311, 1217, 1791, 300, 550, 1310, 456, 311, 754, 257, 644, 732, 1217, 322, 264, 3144, 13, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.12100544842806729, "compression_ratio": 1.532544378698225, "no_speech_prob": 0.00015347280714195222}, {"id": 3, "seek": 2740, "start": 34.08, "end": 42.68, "text": " we have a part two planned, which is going to be sometime towards the end of 2022.", "tokens": [50364, 4764, 281, 341, 291, 815, 528, 281, 1520, 264, 26998, 420, 264, 2370, 13, 1301, 3144, 281, 536, 1968, 50698, 50698, 321, 362, 257, 644, 732, 8589, 11, 597, 307, 516, 281, 312, 15053, 3030, 264, 917, 295, 20229, 13, 51128, 51128, 1610, 498, 309, 311, 1217, 1791, 300, 550, 1310, 456, 311, 754, 257, 644, 732, 1217, 322, 264, 3144, 13, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.12100544842806729, "compression_ratio": 1.532544378698225, "no_speech_prob": 0.00015347280714195222}, {"id": 4, "seek": 2740, "start": 42.68, "end": 49.959999999999994, "text": " Or if it's already past that then maybe there's even a part two already on the website.", "tokens": [50364, 4764, 281, 341, 291, 815, 528, 281, 1520, 264, 26998, 420, 264, 2370, 13, 1301, 3144, 281, 536, 1968, 50698, 50698, 321, 362, 257, 644, 732, 8589, 11, 597, 307, 516, 281, 312, 15053, 3030, 264, 917, 295, 20229, 13, 51128, 51128, 1610, 498, 309, 311, 1217, 1791, 300, 550, 1310, 456, 311, 754, 257, 644, 732, 1217, 322, 264, 3144, 13, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.12100544842806729, "compression_ratio": 1.532544378698225, "no_speech_prob": 0.00015347280714195222}, {"id": 5, "seek": 4996, "start": 49.96, "end": 57.44, "text": " So part two goes a lot deeper than part one technically in terms of getting to the point", "tokens": [50364, 407, 644, 732, 1709, 257, 688, 7731, 813, 644, 472, 12120, 294, 2115, 295, 1242, 281, 264, 935, 50738, 50738, 300, 291, 820, 312, 1075, 281, 1401, 293, 4445, 2132, 10577, 293, 7274, 5245, 294, 257, 588, 51216, 51216, 733, 295, 957, 993, 2590, 13, 51356, 51356], "temperature": 0.0, "avg_logprob": -0.15288157365760024, "compression_ratio": 1.4577464788732395, "no_speech_prob": 1.3418823073152453e-05}, {"id": 6, "seek": 4996, "start": 57.44, "end": 67.0, "text": " that you should be able to read and implement research papers and deploy models in a very", "tokens": [50364, 407, 644, 732, 1709, 257, 688, 7731, 813, 644, 472, 12120, 294, 2115, 295, 1242, 281, 264, 935, 50738, 50738, 300, 291, 820, 312, 1075, 281, 1401, 293, 4445, 2132, 10577, 293, 7274, 5245, 294, 257, 588, 51216, 51216, 733, 295, 957, 993, 2590, 13, 51356, 51356], "temperature": 0.0, "avg_logprob": -0.15288157365760024, "compression_ratio": 1.4577464788732395, "no_speech_prob": 1.3418823073152453e-05}, {"id": 7, "seek": 4996, "start": 67.0, "end": 69.8, "text": " kind of real life situation.", "tokens": [50364, 407, 644, 732, 1709, 257, 688, 7731, 813, 644, 472, 12120, 294, 2115, 295, 1242, 281, 264, 935, 50738, 50738, 300, 291, 820, 312, 1075, 281, 1401, 293, 4445, 2132, 10577, 293, 7274, 5245, 294, 257, 588, 51216, 51216, 733, 295, 957, 993, 2590, 13, 51356, 51356], "temperature": 0.0, "avg_logprob": -0.15288157365760024, "compression_ratio": 1.4577464788732395, "no_speech_prob": 1.3418823073152453e-05}, {"id": 8, "seek": 6980, "start": 69.8, "end": 87.08, "text": " So yeah, last lesson we started on the collaborative filtering notebook and we were looking at", "tokens": [50364, 407, 1338, 11, 1036, 6898, 321, 1409, 322, 264, 16555, 30822, 21060, 293, 321, 645, 1237, 412, 51228, 51228, 16555, 30822, 293, 341, 307, 689, 321, 658, 281, 11, 597, 307, 4084, 428, 1065, 12240, 3584, 51416, 51416, 10088, 293, 341, 307, 257, 588, 1627, 1081, 281, 722, 264, 6898, 570, 291, 434, 516, 281, 1466, 257, 51694, 51694, 688, 466, 437, 311, 534, 516, 322, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.12111643670310437, "compression_ratio": 1.6868131868131868, "no_speech_prob": 1.1478324267955031e-05}, {"id": 9, "seek": 6980, "start": 87.08, "end": 90.84, "text": " collaborative filtering and this is where we got to, which is creating your own embedding", "tokens": [50364, 407, 1338, 11, 1036, 6898, 321, 1409, 322, 264, 16555, 30822, 21060, 293, 321, 645, 1237, 412, 51228, 51228, 16555, 30822, 293, 341, 307, 689, 321, 658, 281, 11, 597, 307, 4084, 428, 1065, 12240, 3584, 51416, 51416, 10088, 293, 341, 307, 257, 588, 1627, 1081, 281, 722, 264, 6898, 570, 291, 434, 516, 281, 1466, 257, 51694, 51694, 688, 466, 437, 311, 534, 516, 322, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.12111643670310437, "compression_ratio": 1.6868131868131868, "no_speech_prob": 1.1478324267955031e-05}, {"id": 10, "seek": 6980, "start": 90.84, "end": 96.4, "text": " module and this is a very cool place to start the lesson because you're going to learn a", "tokens": [50364, 407, 1338, 11, 1036, 6898, 321, 1409, 322, 264, 16555, 30822, 21060, 293, 321, 645, 1237, 412, 51228, 51228, 16555, 30822, 293, 341, 307, 689, 321, 658, 281, 11, 597, 307, 4084, 428, 1065, 12240, 3584, 51416, 51416, 10088, 293, 341, 307, 257, 588, 1627, 1081, 281, 722, 264, 6898, 570, 291, 434, 516, 281, 1466, 257, 51694, 51694, 688, 466, 437, 311, 534, 516, 322, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.12111643670310437, "compression_ratio": 1.6868131868131868, "no_speech_prob": 1.1478324267955031e-05}, {"id": 11, "seek": 6980, "start": 96.4, "end": 98.75999999999999, "text": " lot about what's really going on.", "tokens": [50364, 407, 1338, 11, 1036, 6898, 321, 1409, 322, 264, 16555, 30822, 21060, 293, 321, 645, 1237, 412, 51228, 51228, 16555, 30822, 293, 341, 307, 689, 321, 658, 281, 11, 597, 307, 4084, 428, 1065, 12240, 3584, 51416, 51416, 10088, 293, 341, 307, 257, 588, 1627, 1081, 281, 722, 264, 6898, 570, 291, 434, 516, 281, 1466, 257, 51694, 51694, 688, 466, 437, 311, 534, 516, 322, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.12111643670310437, "compression_ratio": 1.6868131868131868, "no_speech_prob": 1.1478324267955031e-05}, {"id": 12, "seek": 9876, "start": 98.76, "end": 107.12, "text": " And it's really important before you dig into this to make sure that you're really comfortable", "tokens": [50364, 400, 309, 311, 534, 1021, 949, 291, 2528, 666, 341, 281, 652, 988, 300, 291, 434, 534, 4619, 50782, 50782, 365, 264, 1958, 20, 9135, 44, 2316, 18161, 2533, 490, 8459, 21060, 13, 51146, 51146, 407, 498, 3166, 295, 341, 366, 406, 3879, 1850, 829, 309, 7359, 293, 29956, 341, 21060, 570, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.12951805761882237, "compression_ratio": 1.4303030303030304, "no_speech_prob": 2.355132164666429e-05}, {"id": 13, "seek": 9876, "start": 107.12, "end": 114.4, "text": " with the 05 ADM model neural net from scratch notebook.", "tokens": [50364, 400, 309, 311, 534, 1021, 949, 291, 2528, 666, 341, 281, 652, 988, 300, 291, 434, 534, 4619, 50782, 50782, 365, 264, 1958, 20, 9135, 44, 2316, 18161, 2533, 490, 8459, 21060, 13, 51146, 51146, 407, 498, 3166, 295, 341, 366, 406, 3879, 1850, 829, 309, 7359, 293, 29956, 341, 21060, 570, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.12951805761882237, "compression_ratio": 1.4303030303030304, "no_speech_prob": 2.355132164666429e-05}, {"id": 14, "seek": 9876, "start": 114.4, "end": 125.24000000000001, "text": " So if parts of this are not totally clear put it aside and redo this notebook because", "tokens": [50364, 400, 309, 311, 534, 1021, 949, 291, 2528, 666, 341, 281, 652, 988, 300, 291, 434, 534, 4619, 50782, 50782, 365, 264, 1958, 20, 9135, 44, 2316, 18161, 2533, 490, 8459, 21060, 13, 51146, 51146, 407, 498, 3166, 295, 341, 366, 406, 3879, 1850, 829, 309, 7359, 293, 29956, 341, 21060, 570, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.12951805761882237, "compression_ratio": 1.4303030303030304, "no_speech_prob": 2.355132164666429e-05}, {"id": 15, "seek": 12524, "start": 125.24, "end": 130.2, "text": " what we're looking at from here are kind of the abstractions that PyTorch and FastAI add", "tokens": [50364, 437, 321, 434, 1237, 412, 490, 510, 366, 733, 295, 264, 12649, 626, 300, 9953, 51, 284, 339, 293, 15968, 48698, 909, 50612, 50612, 322, 1192, 295, 14980, 300, 321, 600, 3094, 4175, 490, 8459, 13, 50923, 50923, 407, 498, 291, 1604, 294, 264, 18161, 3209, 490, 8459, 321, 3094, 11, 321, 5883, 1602, 257, 1230, 51283, 51283, 295, 31994, 11, 257, 1916, 295, 819, 7914, 11, 291, 458, 11, 293, 257, 12577, 1433, 293, 550, 1830, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.13295310220600645, "compression_ratio": 1.5277777777777777, "no_speech_prob": 5.507424702955177e-06}, {"id": 16, "seek": 12524, "start": 130.2, "end": 136.42, "text": " on top of functionality that we've built ourselves from scratch.", "tokens": [50364, 437, 321, 434, 1237, 412, 490, 510, 366, 733, 295, 264, 12649, 626, 300, 9953, 51, 284, 339, 293, 15968, 48698, 909, 50612, 50612, 322, 1192, 295, 14980, 300, 321, 600, 3094, 4175, 490, 8459, 13, 50923, 50923, 407, 498, 291, 1604, 294, 264, 18161, 3209, 490, 8459, 321, 3094, 11, 321, 5883, 1602, 257, 1230, 51283, 51283, 295, 31994, 11, 257, 1916, 295, 819, 7914, 11, 291, 458, 11, 293, 257, 12577, 1433, 293, 550, 1830, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.13295310220600645, "compression_ratio": 1.5277777777777777, "no_speech_prob": 5.507424702955177e-06}, {"id": 17, "seek": 12524, "start": 136.42, "end": 143.62, "text": " So if you remember in the neural network from scratch we built, we initialized a number", "tokens": [50364, 437, 321, 434, 1237, 412, 490, 510, 366, 733, 295, 264, 12649, 626, 300, 9953, 51, 284, 339, 293, 15968, 48698, 909, 50612, 50612, 322, 1192, 295, 14980, 300, 321, 600, 3094, 4175, 490, 8459, 13, 50923, 50923, 407, 498, 291, 1604, 294, 264, 18161, 3209, 490, 8459, 321, 3094, 11, 321, 5883, 1602, 257, 1230, 51283, 51283, 295, 31994, 11, 257, 1916, 295, 819, 7914, 11, 291, 458, 11, 293, 257, 12577, 1433, 293, 550, 1830, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.13295310220600645, "compression_ratio": 1.5277777777777777, "no_speech_prob": 5.507424702955177e-06}, {"id": 18, "seek": 12524, "start": 143.62, "end": 153.56, "text": " of coefficients, a couple of different layers, you know, and a bias term and then during", "tokens": [50364, 437, 321, 434, 1237, 412, 490, 510, 366, 733, 295, 264, 12649, 626, 300, 9953, 51, 284, 339, 293, 15968, 48698, 909, 50612, 50612, 322, 1192, 295, 14980, 300, 321, 600, 3094, 4175, 490, 8459, 13, 50923, 50923, 407, 498, 291, 1604, 294, 264, 18161, 3209, 490, 8459, 321, 3094, 11, 321, 5883, 1602, 257, 1230, 51283, 51283, 295, 31994, 11, 257, 1916, 295, 819, 7914, 11, 291, 458, 11, 293, 257, 12577, 1433, 293, 550, 1830, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.13295310220600645, "compression_ratio": 1.5277777777777777, "no_speech_prob": 5.507424702955177e-06}, {"id": 19, "seek": 15356, "start": 153.56, "end": 160.36, "text": " as the model trained we updated those coefficients by going through each layer of them and subtracting", "tokens": [50364, 382, 264, 2316, 8895, 321, 10588, 729, 31994, 538, 516, 807, 1184, 4583, 295, 552, 293, 16390, 278, 50704, 50704, 484, 264, 2771, 2448, 538, 264, 2539, 3314, 13, 51010, 51010, 682, 291, 1391, 5694, 300, 294, 9953, 51, 284, 339, 321, 500, 380, 362, 281, 352, 281, 439, 300, 5253, 293, 286, 51286, 51286, 1415, 281, 855, 291, 577, 9953, 51, 284, 339, 775, 341, 13, 51432, 51432, 9953, 51, 284, 339, 11, 321, 500, 380, 362, 281, 1066, 2837, 295, 437, 527, 31994, 420, 9834, 420, 17443, 51754, 51754, 366, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.16616087844691327, "compression_ratio": 1.6759259259259258, "no_speech_prob": 4.936928235110827e-06}, {"id": 20, "seek": 15356, "start": 160.36, "end": 166.48, "text": " out the gradients by the learning rate.", "tokens": [50364, 382, 264, 2316, 8895, 321, 10588, 729, 31994, 538, 516, 807, 1184, 4583, 295, 552, 293, 16390, 278, 50704, 50704, 484, 264, 2771, 2448, 538, 264, 2539, 3314, 13, 51010, 51010, 682, 291, 1391, 5694, 300, 294, 9953, 51, 284, 339, 321, 500, 380, 362, 281, 352, 281, 439, 300, 5253, 293, 286, 51286, 51286, 1415, 281, 855, 291, 577, 9953, 51, 284, 339, 775, 341, 13, 51432, 51432, 9953, 51, 284, 339, 11, 321, 500, 380, 362, 281, 1066, 2837, 295, 437, 527, 31994, 420, 9834, 420, 17443, 51754, 51754, 366, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.16616087844691327, "compression_ratio": 1.6759259259259258, "no_speech_prob": 4.936928235110827e-06}, {"id": 21, "seek": 15356, "start": 166.48, "end": 172.0, "text": " In you probably noticed that in PyTorch we don't have to go to all that trouble and I", "tokens": [50364, 382, 264, 2316, 8895, 321, 10588, 729, 31994, 538, 516, 807, 1184, 4583, 295, 552, 293, 16390, 278, 50704, 50704, 484, 264, 2771, 2448, 538, 264, 2539, 3314, 13, 51010, 51010, 682, 291, 1391, 5694, 300, 294, 9953, 51, 284, 339, 321, 500, 380, 362, 281, 352, 281, 439, 300, 5253, 293, 286, 51286, 51286, 1415, 281, 855, 291, 577, 9953, 51, 284, 339, 775, 341, 13, 51432, 51432, 9953, 51, 284, 339, 11, 321, 500, 380, 362, 281, 1066, 2837, 295, 437, 527, 31994, 420, 9834, 420, 17443, 51754, 51754, 366, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.16616087844691327, "compression_ratio": 1.6759259259259258, "no_speech_prob": 4.936928235110827e-06}, {"id": 22, "seek": 15356, "start": 172.0, "end": 174.92000000000002, "text": " wanted to show you how PyTorch does this.", "tokens": [50364, 382, 264, 2316, 8895, 321, 10588, 729, 31994, 538, 516, 807, 1184, 4583, 295, 552, 293, 16390, 278, 50704, 50704, 484, 264, 2771, 2448, 538, 264, 2539, 3314, 13, 51010, 51010, 682, 291, 1391, 5694, 300, 294, 9953, 51, 284, 339, 321, 500, 380, 362, 281, 352, 281, 439, 300, 5253, 293, 286, 51286, 51286, 1415, 281, 855, 291, 577, 9953, 51, 284, 339, 775, 341, 13, 51432, 51432, 9953, 51, 284, 339, 11, 321, 500, 380, 362, 281, 1066, 2837, 295, 437, 527, 31994, 420, 9834, 420, 17443, 51754, 51754, 366, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.16616087844691327, "compression_ratio": 1.6759259259259258, "no_speech_prob": 4.936928235110827e-06}, {"id": 23, "seek": 15356, "start": 174.92000000000002, "end": 181.36, "text": " PyTorch, we don't have to keep track of what our coefficients or parameters or weights", "tokens": [50364, 382, 264, 2316, 8895, 321, 10588, 729, 31994, 538, 516, 807, 1184, 4583, 295, 552, 293, 16390, 278, 50704, 50704, 484, 264, 2771, 2448, 538, 264, 2539, 3314, 13, 51010, 51010, 682, 291, 1391, 5694, 300, 294, 9953, 51, 284, 339, 321, 500, 380, 362, 281, 352, 281, 439, 300, 5253, 293, 286, 51286, 51286, 1415, 281, 855, 291, 577, 9953, 51, 284, 339, 775, 341, 13, 51432, 51432, 9953, 51, 284, 339, 11, 321, 500, 380, 362, 281, 1066, 2837, 295, 437, 527, 31994, 420, 9834, 420, 17443, 51754, 51754, 366, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.16616087844691327, "compression_ratio": 1.6759259259259258, "no_speech_prob": 4.936928235110827e-06}, {"id": 24, "seek": 15356, "start": 181.36, "end": 182.36, "text": " are.", "tokens": [50364, 382, 264, 2316, 8895, 321, 10588, 729, 31994, 538, 516, 807, 1184, 4583, 295, 552, 293, 16390, 278, 50704, 50704, 484, 264, 2771, 2448, 538, 264, 2539, 3314, 13, 51010, 51010, 682, 291, 1391, 5694, 300, 294, 9953, 51, 284, 339, 321, 500, 380, 362, 281, 352, 281, 439, 300, 5253, 293, 286, 51286, 51286, 1415, 281, 855, 291, 577, 9953, 51, 284, 339, 775, 341, 13, 51432, 51432, 9953, 51, 284, 339, 11, 321, 500, 380, 362, 281, 1066, 2837, 295, 437, 527, 31994, 420, 9834, 420, 17443, 51754, 51754, 366, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.16616087844691327, "compression_ratio": 1.6759259259259258, "no_speech_prob": 4.936928235110827e-06}, {"id": 25, "seek": 18236, "start": 182.36, "end": 194.24, "text": " PyTorch does that for us and the way it does that is it looks inside our module and it", "tokens": [50364, 9953, 51, 284, 339, 775, 300, 337, 505, 293, 264, 636, 309, 775, 300, 307, 309, 1542, 1854, 527, 10088, 293, 309, 50958, 50958, 9898, 281, 915, 1340, 300, 1542, 411, 257, 18161, 3209, 13075, 420, 257, 40863, 295, 18161, 3209, 51278, 51278, 9834, 293, 309, 5965, 2837, 295, 552, 13, 51458, 51458, 400, 370, 510, 307, 257, 1508, 321, 600, 2942, 1219, 314, 597, 307, 257, 1422, 11665, 295, 10088, 293, 286, 600, 2942, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.0987452615665484, "compression_ratio": 1.6972972972972973, "no_speech_prob": 3.726616341737099e-06}, {"id": 26, "seek": 18236, "start": 194.24, "end": 200.64000000000001, "text": " tries to find anything that looks like a neural network parameter or a tensor of neural network", "tokens": [50364, 9953, 51, 284, 339, 775, 300, 337, 505, 293, 264, 636, 309, 775, 300, 307, 309, 1542, 1854, 527, 10088, 293, 309, 50958, 50958, 9898, 281, 915, 1340, 300, 1542, 411, 257, 18161, 3209, 13075, 420, 257, 40863, 295, 18161, 3209, 51278, 51278, 9834, 293, 309, 5965, 2837, 295, 552, 13, 51458, 51458, 400, 370, 510, 307, 257, 1508, 321, 600, 2942, 1219, 314, 597, 307, 257, 1422, 11665, 295, 10088, 293, 286, 600, 2942, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.0987452615665484, "compression_ratio": 1.6972972972972973, "no_speech_prob": 3.726616341737099e-06}, {"id": 27, "seek": 18236, "start": 200.64000000000001, "end": 204.24, "text": " parameters and it keeps track of them.", "tokens": [50364, 9953, 51, 284, 339, 775, 300, 337, 505, 293, 264, 636, 309, 775, 300, 307, 309, 1542, 1854, 527, 10088, 293, 309, 50958, 50958, 9898, 281, 915, 1340, 300, 1542, 411, 257, 18161, 3209, 13075, 420, 257, 40863, 295, 18161, 3209, 51278, 51278, 9834, 293, 309, 5965, 2837, 295, 552, 13, 51458, 51458, 400, 370, 510, 307, 257, 1508, 321, 600, 2942, 1219, 314, 597, 307, 257, 1422, 11665, 295, 10088, 293, 286, 600, 2942, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.0987452615665484, "compression_ratio": 1.6972972972972973, "no_speech_prob": 3.726616341737099e-06}, {"id": 28, "seek": 18236, "start": 204.24, "end": 210.24, "text": " And so here is a class we've created called T which is a subclass of module and I've created", "tokens": [50364, 9953, 51, 284, 339, 775, 300, 337, 505, 293, 264, 636, 309, 775, 300, 307, 309, 1542, 1854, 527, 10088, 293, 309, 50958, 50958, 9898, 281, 915, 1340, 300, 1542, 411, 257, 18161, 3209, 13075, 420, 257, 40863, 295, 18161, 3209, 51278, 51278, 9834, 293, 309, 5965, 2837, 295, 552, 13, 51458, 51458, 400, 370, 510, 307, 257, 1508, 321, 600, 2942, 1219, 314, 597, 307, 257, 1422, 11665, 295, 10088, 293, 286, 600, 2942, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.0987452615665484, "compression_ratio": 1.6972972972972973, "no_speech_prob": 3.726616341737099e-06}, {"id": 29, "seek": 21024, "start": 210.24, "end": 213.8, "text": " one thing inside it which is something with the attribute a.", "tokens": [50364, 472, 551, 1854, 309, 597, 307, 746, 365, 264, 19667, 257, 13, 50542, 50542, 407, 341, 307, 257, 294, 264, 314, 10088, 293, 309, 445, 8306, 1045, 2306, 13, 50861, 50861, 400, 370, 264, 1558, 307, 11, 291, 458, 11, 1310, 321, 434, 4084, 257, 10088, 293, 341, 307, 321, 434, 5883, 3319, 51060, 51060, 512, 13075, 300, 321, 528, 281, 3847, 13, 51193, 51193, 823, 321, 393, 915, 484, 437, 3847, 712, 9834, 420, 445, 437, 9834, 294, 2674, 9953, 51, 284, 339, 51502, 51502], "temperature": 0.0, "avg_logprob": -0.10502385009418834, "compression_ratio": 1.6585365853658536, "no_speech_prob": 3.807003849942703e-07}, {"id": 30, "seek": 21024, "start": 213.8, "end": 220.18, "text": " So this is a in the T module and it just contains three ones.", "tokens": [50364, 472, 551, 1854, 309, 597, 307, 746, 365, 264, 19667, 257, 13, 50542, 50542, 407, 341, 307, 257, 294, 264, 314, 10088, 293, 309, 445, 8306, 1045, 2306, 13, 50861, 50861, 400, 370, 264, 1558, 307, 11, 291, 458, 11, 1310, 321, 434, 4084, 257, 10088, 293, 341, 307, 321, 434, 5883, 3319, 51060, 51060, 512, 13075, 300, 321, 528, 281, 3847, 13, 51193, 51193, 823, 321, 393, 915, 484, 437, 3847, 712, 9834, 420, 445, 437, 9834, 294, 2674, 9953, 51, 284, 339, 51502, 51502], "temperature": 0.0, "avg_logprob": -0.10502385009418834, "compression_ratio": 1.6585365853658536, "no_speech_prob": 3.807003849942703e-07}, {"id": 31, "seek": 21024, "start": 220.18, "end": 224.16, "text": " And so the idea is, you know, maybe we're creating a module and this is we're initializing", "tokens": [50364, 472, 551, 1854, 309, 597, 307, 746, 365, 264, 19667, 257, 13, 50542, 50542, 407, 341, 307, 257, 294, 264, 314, 10088, 293, 309, 445, 8306, 1045, 2306, 13, 50861, 50861, 400, 370, 264, 1558, 307, 11, 291, 458, 11, 1310, 321, 434, 4084, 257, 10088, 293, 341, 307, 321, 434, 5883, 3319, 51060, 51060, 512, 13075, 300, 321, 528, 281, 3847, 13, 51193, 51193, 823, 321, 393, 915, 484, 437, 3847, 712, 9834, 420, 445, 437, 9834, 294, 2674, 9953, 51, 284, 339, 51502, 51502], "temperature": 0.0, "avg_logprob": -0.10502385009418834, "compression_ratio": 1.6585365853658536, "no_speech_prob": 3.807003849942703e-07}, {"id": 32, "seek": 21024, "start": 224.16, "end": 226.82000000000002, "text": " some parameter that we want to train.", "tokens": [50364, 472, 551, 1854, 309, 597, 307, 746, 365, 264, 19667, 257, 13, 50542, 50542, 407, 341, 307, 257, 294, 264, 314, 10088, 293, 309, 445, 8306, 1045, 2306, 13, 50861, 50861, 400, 370, 264, 1558, 307, 11, 291, 458, 11, 1310, 321, 434, 4084, 257, 10088, 293, 341, 307, 321, 434, 5883, 3319, 51060, 51060, 512, 13075, 300, 321, 528, 281, 3847, 13, 51193, 51193, 823, 321, 393, 915, 484, 437, 3847, 712, 9834, 420, 445, 437, 9834, 294, 2674, 9953, 51, 284, 339, 51502, 51502], "temperature": 0.0, "avg_logprob": -0.10502385009418834, "compression_ratio": 1.6585365853658536, "no_speech_prob": 3.807003849942703e-07}, {"id": 33, "seek": 21024, "start": 226.82000000000002, "end": 233.0, "text": " Now we can find out what trainable parameters or just what parameters in general PyTorch", "tokens": [50364, 472, 551, 1854, 309, 597, 307, 746, 365, 264, 19667, 257, 13, 50542, 50542, 407, 341, 307, 257, 294, 264, 314, 10088, 293, 309, 445, 8306, 1045, 2306, 13, 50861, 50861, 400, 370, 264, 1558, 307, 11, 291, 458, 11, 1310, 321, 434, 4084, 257, 10088, 293, 341, 307, 321, 434, 5883, 3319, 51060, 51060, 512, 13075, 300, 321, 528, 281, 3847, 13, 51193, 51193, 823, 321, 393, 915, 484, 437, 3847, 712, 9834, 420, 445, 437, 9834, 294, 2674, 9953, 51, 284, 339, 51502, 51502], "temperature": 0.0, "avg_logprob": -0.10502385009418834, "compression_ratio": 1.6585365853658536, "no_speech_prob": 3.807003849942703e-07}, {"id": 34, "seek": 23300, "start": 233.0, "end": 242.0, "text": " knows about in our model by instantiating our model and then asking for the parameters", "tokens": [50364, 3255, 466, 294, 527, 2316, 538, 9836, 72, 990, 527, 2316, 293, 550, 3365, 337, 264, 9834, 50814, 50814, 597, 291, 550, 362, 281, 1261, 300, 666, 257, 1329, 420, 294, 2370, 12352, 321, 362, 257, 551, 1219, 4238, 51022, 51022, 441, 597, 307, 411, 257, 10247, 1329, 597, 22305, 484, 264, 1230, 295, 4754, 294, 264, 1329, 293, 3110, 51289, 51289, 291, 729, 4754, 13, 51368, 51368, 823, 294, 341, 1389, 562, 321, 1884, 527, 2657, 295, 2010, 314, 293, 1029, 337, 1080, 9834, 321, 483, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.10268525762872381, "compression_ratio": 1.732394366197183, "no_speech_prob": 5.12288352183532e-07}, {"id": 35, "seek": 23300, "start": 242.0, "end": 246.16, "text": " which you then have to turn that into a list or in fastcore we have a thing called capital", "tokens": [50364, 3255, 466, 294, 527, 2316, 538, 9836, 72, 990, 527, 2316, 293, 550, 3365, 337, 264, 9834, 50814, 50814, 597, 291, 550, 362, 281, 1261, 300, 666, 257, 1329, 420, 294, 2370, 12352, 321, 362, 257, 551, 1219, 4238, 51022, 51022, 441, 597, 307, 411, 257, 10247, 1329, 597, 22305, 484, 264, 1230, 295, 4754, 294, 264, 1329, 293, 3110, 51289, 51289, 291, 729, 4754, 13, 51368, 51368, 823, 294, 341, 1389, 562, 321, 1884, 527, 2657, 295, 2010, 314, 293, 1029, 337, 1080, 9834, 321, 483, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.10268525762872381, "compression_ratio": 1.732394366197183, "no_speech_prob": 5.12288352183532e-07}, {"id": 36, "seek": 23300, "start": 246.16, "end": 251.5, "text": " L which is like a fancy list which prints out the number of items in the list and shows", "tokens": [50364, 3255, 466, 294, 527, 2316, 538, 9836, 72, 990, 527, 2316, 293, 550, 3365, 337, 264, 9834, 50814, 50814, 597, 291, 550, 362, 281, 1261, 300, 666, 257, 1329, 420, 294, 2370, 12352, 321, 362, 257, 551, 1219, 4238, 51022, 51022, 441, 597, 307, 411, 257, 10247, 1329, 597, 22305, 484, 264, 1230, 295, 4754, 294, 264, 1329, 293, 3110, 51289, 51289, 291, 729, 4754, 13, 51368, 51368, 823, 294, 341, 1389, 562, 321, 1884, 527, 2657, 295, 2010, 314, 293, 1029, 337, 1080, 9834, 321, 483, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.10268525762872381, "compression_ratio": 1.732394366197183, "no_speech_prob": 5.12288352183532e-07}, {"id": 37, "seek": 23300, "start": 251.5, "end": 253.08, "text": " you those items.", "tokens": [50364, 3255, 466, 294, 527, 2316, 538, 9836, 72, 990, 527, 2316, 293, 550, 3365, 337, 264, 9834, 50814, 50814, 597, 291, 550, 362, 281, 1261, 300, 666, 257, 1329, 420, 294, 2370, 12352, 321, 362, 257, 551, 1219, 4238, 51022, 51022, 441, 597, 307, 411, 257, 10247, 1329, 597, 22305, 484, 264, 1230, 295, 4754, 294, 264, 1329, 293, 3110, 51289, 51289, 291, 729, 4754, 13, 51368, 51368, 823, 294, 341, 1389, 562, 321, 1884, 527, 2657, 295, 2010, 314, 293, 1029, 337, 1080, 9834, 321, 483, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.10268525762872381, "compression_ratio": 1.732394366197183, "no_speech_prob": 5.12288352183532e-07}, {"id": 38, "seek": 23300, "start": 253.08, "end": 260.2, "text": " Now in this case when we create our object of type T and ask for its parameters we get", "tokens": [50364, 3255, 466, 294, 527, 2316, 538, 9836, 72, 990, 527, 2316, 293, 550, 3365, 337, 264, 9834, 50814, 50814, 597, 291, 550, 362, 281, 1261, 300, 666, 257, 1329, 420, 294, 2370, 12352, 321, 362, 257, 551, 1219, 4238, 51022, 51022, 441, 597, 307, 411, 257, 10247, 1329, 597, 22305, 484, 264, 1230, 295, 4754, 294, 264, 1329, 293, 3110, 51289, 51289, 291, 729, 4754, 13, 51368, 51368, 823, 294, 341, 1389, 562, 321, 1884, 527, 2657, 295, 2010, 314, 293, 1029, 337, 1080, 9834, 321, 483, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.10268525762872381, "compression_ratio": 1.732394366197183, "no_speech_prob": 5.12288352183532e-07}, {"id": 39, "seek": 26020, "start": 260.2, "end": 264.88, "text": " told there are zero tensors of parameters and a list with nothing in it.", "tokens": [50364, 1907, 456, 366, 4018, 10688, 830, 295, 9834, 293, 257, 1329, 365, 1825, 294, 309, 13, 50598, 50598, 823, 983, 307, 300, 30, 50670, 50670, 492, 767, 848, 321, 1415, 281, 1884, 257, 40863, 365, 1045, 2306, 294, 309, 13, 50849, 50849, 1012, 576, 321, 652, 729, 9834, 30, 51008, 51008, 1042, 264, 1867, 307, 300, 264, 636, 291, 980, 9953, 51, 284, 339, 437, 428, 9834, 366, 307, 291, 767, 445, 51474, 51474, 362, 281, 829, 552, 1854, 257, 2121, 2657, 1219, 364, 297, 77, 13, 2181, 335, 2398, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.12884307660554584, "compression_ratio": 1.6542056074766356, "no_speech_prob": 2.5215626919816714e-06}, {"id": 40, "seek": 26020, "start": 264.88, "end": 266.32, "text": " Now why is that?", "tokens": [50364, 1907, 456, 366, 4018, 10688, 830, 295, 9834, 293, 257, 1329, 365, 1825, 294, 309, 13, 50598, 50598, 823, 983, 307, 300, 30, 50670, 50670, 492, 767, 848, 321, 1415, 281, 1884, 257, 40863, 365, 1045, 2306, 294, 309, 13, 50849, 50849, 1012, 576, 321, 652, 729, 9834, 30, 51008, 51008, 1042, 264, 1867, 307, 300, 264, 636, 291, 980, 9953, 51, 284, 339, 437, 428, 9834, 366, 307, 291, 767, 445, 51474, 51474, 362, 281, 829, 552, 1854, 257, 2121, 2657, 1219, 364, 297, 77, 13, 2181, 335, 2398, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.12884307660554584, "compression_ratio": 1.6542056074766356, "no_speech_prob": 2.5215626919816714e-06}, {"id": 41, "seek": 26020, "start": 266.32, "end": 269.9, "text": " We actually said we wanted to create a tensor with three ones in it.", "tokens": [50364, 1907, 456, 366, 4018, 10688, 830, 295, 9834, 293, 257, 1329, 365, 1825, 294, 309, 13, 50598, 50598, 823, 983, 307, 300, 30, 50670, 50670, 492, 767, 848, 321, 1415, 281, 1884, 257, 40863, 365, 1045, 2306, 294, 309, 13, 50849, 50849, 1012, 576, 321, 652, 729, 9834, 30, 51008, 51008, 1042, 264, 1867, 307, 300, 264, 636, 291, 980, 9953, 51, 284, 339, 437, 428, 9834, 366, 307, 291, 767, 445, 51474, 51474, 362, 281, 829, 552, 1854, 257, 2121, 2657, 1219, 364, 297, 77, 13, 2181, 335, 2398, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.12884307660554584, "compression_ratio": 1.6542056074766356, "no_speech_prob": 2.5215626919816714e-06}, {"id": 42, "seek": 26020, "start": 269.9, "end": 273.08, "text": " How would we make those parameters?", "tokens": [50364, 1907, 456, 366, 4018, 10688, 830, 295, 9834, 293, 257, 1329, 365, 1825, 294, 309, 13, 50598, 50598, 823, 983, 307, 300, 30, 50670, 50670, 492, 767, 848, 321, 1415, 281, 1884, 257, 40863, 365, 1045, 2306, 294, 309, 13, 50849, 50849, 1012, 576, 321, 652, 729, 9834, 30, 51008, 51008, 1042, 264, 1867, 307, 300, 264, 636, 291, 980, 9953, 51, 284, 339, 437, 428, 9834, 366, 307, 291, 767, 445, 51474, 51474, 362, 281, 829, 552, 1854, 257, 2121, 2657, 1219, 364, 297, 77, 13, 2181, 335, 2398, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.12884307660554584, "compression_ratio": 1.6542056074766356, "no_speech_prob": 2.5215626919816714e-06}, {"id": 43, "seek": 26020, "start": 273.08, "end": 282.4, "text": " Well the answer is that the way you tell PyTorch what your parameters are is you actually just", "tokens": [50364, 1907, 456, 366, 4018, 10688, 830, 295, 9834, 293, 257, 1329, 365, 1825, 294, 309, 13, 50598, 50598, 823, 983, 307, 300, 30, 50670, 50670, 492, 767, 848, 321, 1415, 281, 1884, 257, 40863, 365, 1045, 2306, 294, 309, 13, 50849, 50849, 1012, 576, 321, 652, 729, 9834, 30, 51008, 51008, 1042, 264, 1867, 307, 300, 264, 636, 291, 980, 9953, 51, 284, 339, 437, 428, 9834, 366, 307, 291, 767, 445, 51474, 51474, 362, 281, 829, 552, 1854, 257, 2121, 2657, 1219, 364, 297, 77, 13, 2181, 335, 2398, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.12884307660554584, "compression_ratio": 1.6542056074766356, "no_speech_prob": 2.5215626919816714e-06}, {"id": 44, "seek": 26020, "start": 282.4, "end": 287.02, "text": " have to put them inside a special object called an nn.parameter.", "tokens": [50364, 1907, 456, 366, 4018, 10688, 830, 295, 9834, 293, 257, 1329, 365, 1825, 294, 309, 13, 50598, 50598, 823, 983, 307, 300, 30, 50670, 50670, 492, 767, 848, 321, 1415, 281, 1884, 257, 40863, 365, 1045, 2306, 294, 309, 13, 50849, 50849, 1012, 576, 321, 652, 729, 9834, 30, 51008, 51008, 1042, 264, 1867, 307, 300, 264, 636, 291, 980, 9953, 51, 284, 339, 437, 428, 9834, 366, 307, 291, 767, 445, 51474, 51474, 362, 281, 829, 552, 1854, 257, 2121, 2657, 1219, 364, 297, 77, 13, 2181, 335, 2398, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.12884307660554584, "compression_ratio": 1.6542056074766356, "no_speech_prob": 2.5215626919816714e-06}, {"id": 45, "seek": 28702, "start": 287.02, "end": 291.4, "text": " This thing almost doesn't really do anything.", "tokens": [50364, 639, 551, 1920, 1177, 380, 534, 360, 1340, 13, 50583, 50583, 682, 1186, 1036, 565, 286, 10033, 309, 534, 1596, 3736, 632, 1920, 572, 3089, 294, 309, 13, 50770, 50770, 4803, 613, 721, 1319, 457, 718, 311, 747, 257, 574, 13, 51117, 51117, 865, 1392, 370, 309, 311, 466, 257, 16654, 3876, 295, 3089, 420, 945, 3876, 295, 3089, 597, 775, 1920, 1825, 13, 51555, 51555, 467, 311, 658, 257, 636, 295, 885, 25365, 11, 309, 311, 658, 257, 636, 295, 14699, 2564, 11, 309, 311, 658, 257, 636, 295, 51743, 51743], "temperature": 0.0, "avg_logprob": -0.11725270494501641, "compression_ratio": 1.7115384615384615, "no_speech_prob": 3.785311719184392e-06}, {"id": 46, "seek": 28702, "start": 291.4, "end": 295.14, "text": " In fact last time I checked it really quite literally had almost no code in it.", "tokens": [50364, 639, 551, 1920, 1177, 380, 534, 360, 1340, 13, 50583, 50583, 682, 1186, 1036, 565, 286, 10033, 309, 534, 1596, 3736, 632, 1920, 572, 3089, 294, 309, 13, 50770, 50770, 4803, 613, 721, 1319, 457, 718, 311, 747, 257, 574, 13, 51117, 51117, 865, 1392, 370, 309, 311, 466, 257, 16654, 3876, 295, 3089, 420, 945, 3876, 295, 3089, 597, 775, 1920, 1825, 13, 51555, 51555, 467, 311, 658, 257, 636, 295, 885, 25365, 11, 309, 311, 658, 257, 636, 295, 14699, 2564, 11, 309, 311, 658, 257, 636, 295, 51743, 51743], "temperature": 0.0, "avg_logprob": -0.11725270494501641, "compression_ratio": 1.7115384615384615, "no_speech_prob": 3.785311719184392e-06}, {"id": 47, "seek": 28702, "start": 295.14, "end": 302.08, "text": " Sometimes these things change but let's take a look.", "tokens": [50364, 639, 551, 1920, 1177, 380, 534, 360, 1340, 13, 50583, 50583, 682, 1186, 1036, 565, 286, 10033, 309, 534, 1596, 3736, 632, 1920, 572, 3089, 294, 309, 13, 50770, 50770, 4803, 613, 721, 1319, 457, 718, 311, 747, 257, 574, 13, 51117, 51117, 865, 1392, 370, 309, 311, 466, 257, 16654, 3876, 295, 3089, 420, 945, 3876, 295, 3089, 597, 775, 1920, 1825, 13, 51555, 51555, 467, 311, 658, 257, 636, 295, 885, 25365, 11, 309, 311, 658, 257, 636, 295, 14699, 2564, 11, 309, 311, 658, 257, 636, 295, 51743, 51743], "temperature": 0.0, "avg_logprob": -0.11725270494501641, "compression_ratio": 1.7115384615384615, "no_speech_prob": 3.785311719184392e-06}, {"id": 48, "seek": 28702, "start": 302.08, "end": 310.84, "text": " Yeah okay so it's about a dozen lines of code or 20 lines of code which does almost nothing.", "tokens": [50364, 639, 551, 1920, 1177, 380, 534, 360, 1340, 13, 50583, 50583, 682, 1186, 1036, 565, 286, 10033, 309, 534, 1596, 3736, 632, 1920, 572, 3089, 294, 309, 13, 50770, 50770, 4803, 613, 721, 1319, 457, 718, 311, 747, 257, 574, 13, 51117, 51117, 865, 1392, 370, 309, 311, 466, 257, 16654, 3876, 295, 3089, 420, 945, 3876, 295, 3089, 597, 775, 1920, 1825, 13, 51555, 51555, 467, 311, 658, 257, 636, 295, 885, 25365, 11, 309, 311, 658, 257, 636, 295, 14699, 2564, 11, 309, 311, 658, 257, 636, 295, 51743, 51743], "temperature": 0.0, "avg_logprob": -0.11725270494501641, "compression_ratio": 1.7115384615384615, "no_speech_prob": 3.785311719184392e-06}, {"id": 49, "seek": 28702, "start": 310.84, "end": 314.59999999999997, "text": " It's got a way of being copied, it's got a way of printing itself, it's got a way of", "tokens": [50364, 639, 551, 1920, 1177, 380, 534, 360, 1340, 13, 50583, 50583, 682, 1186, 1036, 565, 286, 10033, 309, 534, 1596, 3736, 632, 1920, 572, 3089, 294, 309, 13, 50770, 50770, 4803, 613, 721, 1319, 457, 718, 311, 747, 257, 574, 13, 51117, 51117, 865, 1392, 370, 309, 311, 466, 257, 16654, 3876, 295, 3089, 420, 945, 3876, 295, 3089, 597, 775, 1920, 1825, 13, 51555, 51555, 467, 311, 658, 257, 636, 295, 885, 25365, 11, 309, 311, 658, 257, 636, 295, 14699, 2564, 11, 309, 311, 658, 257, 636, 295, 51743, 51743], "temperature": 0.0, "avg_logprob": -0.11725270494501641, "compression_ratio": 1.7115384615384615, "no_speech_prob": 3.785311719184392e-06}, {"id": 50, "seek": 31460, "start": 314.6, "end": 319.78000000000003, "text": " saving itself, and it's got a way of being initialized.", "tokens": [50364, 6816, 2564, 11, 293, 309, 311, 658, 257, 636, 295, 885, 5883, 1602, 13, 50623, 50623, 407, 257, 13075, 13572, 775, 1340, 13, 50722, 50722, 440, 2141, 551, 307, 1673, 300, 562, 9953, 51, 284, 339, 13834, 281, 536, 597, 9834, 820, 309, 5623, 11, 51068, 51068, 562, 309, 5028, 5660, 309, 445, 1542, 337, 1340, 300, 311, 668, 14226, 294, 341, 13075, 1508, 13, 51374, 51374, 407, 498, 321, 360, 2293, 264, 912, 551, 382, 949, 597, 307, 281, 992, 364, 19667, 19273, 257, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.07889635643262542, "compression_ratio": 1.6363636363636365, "no_speech_prob": 1.1189400765942992e-06}, {"id": 51, "seek": 31460, "start": 319.78000000000003, "end": 321.76000000000005, "text": " So a parameter hardly does anything.", "tokens": [50364, 6816, 2564, 11, 293, 309, 311, 658, 257, 636, 295, 885, 5883, 1602, 13, 50623, 50623, 407, 257, 13075, 13572, 775, 1340, 13, 50722, 50722, 440, 2141, 551, 307, 1673, 300, 562, 9953, 51, 284, 339, 13834, 281, 536, 597, 9834, 820, 309, 5623, 11, 51068, 51068, 562, 309, 5028, 5660, 309, 445, 1542, 337, 1340, 300, 311, 668, 14226, 294, 341, 13075, 1508, 13, 51374, 51374, 407, 498, 321, 360, 2293, 264, 912, 551, 382, 949, 597, 307, 281, 992, 364, 19667, 19273, 257, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.07889635643262542, "compression_ratio": 1.6363636363636365, "no_speech_prob": 1.1189400765942992e-06}, {"id": 52, "seek": 31460, "start": 321.76000000000005, "end": 328.68, "text": " The key thing is though that when PyTorch checks to see which parameters should it update,", "tokens": [50364, 6816, 2564, 11, 293, 309, 311, 658, 257, 636, 295, 885, 5883, 1602, 13, 50623, 50623, 407, 257, 13075, 13572, 775, 1340, 13, 50722, 50722, 440, 2141, 551, 307, 1673, 300, 562, 9953, 51, 284, 339, 13834, 281, 536, 597, 9834, 820, 309, 5623, 11, 51068, 51068, 562, 309, 5028, 5660, 309, 445, 1542, 337, 1340, 300, 311, 668, 14226, 294, 341, 13075, 1508, 13, 51374, 51374, 407, 498, 321, 360, 2293, 264, 912, 551, 382, 949, 597, 307, 281, 992, 364, 19667, 19273, 257, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.07889635643262542, "compression_ratio": 1.6363636363636365, "no_speech_prob": 1.1189400765942992e-06}, {"id": 53, "seek": 31460, "start": 328.68, "end": 334.8, "text": " when it optimizes it just looks for anything that's been wrapped in this parameter class.", "tokens": [50364, 6816, 2564, 11, 293, 309, 311, 658, 257, 636, 295, 885, 5883, 1602, 13, 50623, 50623, 407, 257, 13075, 13572, 775, 1340, 13, 50722, 50722, 440, 2141, 551, 307, 1673, 300, 562, 9953, 51, 284, 339, 13834, 281, 536, 597, 9834, 820, 309, 5623, 11, 51068, 51068, 562, 309, 5028, 5660, 309, 445, 1542, 337, 1340, 300, 311, 668, 14226, 294, 341, 13075, 1508, 13, 51374, 51374, 407, 498, 321, 360, 2293, 264, 912, 551, 382, 949, 597, 307, 281, 992, 364, 19667, 19273, 257, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.07889635643262542, "compression_ratio": 1.6363636363636365, "no_speech_prob": 1.1189400765942992e-06}, {"id": 54, "seek": 31460, "start": 334.8, "end": 339.02000000000004, "text": " So if we do exactly the same thing as before which is to set an attribute containing a", "tokens": [50364, 6816, 2564, 11, 293, 309, 311, 658, 257, 636, 295, 885, 5883, 1602, 13, 50623, 50623, 407, 257, 13075, 13572, 775, 1340, 13, 50722, 50722, 440, 2141, 551, 307, 1673, 300, 562, 9953, 51, 284, 339, 13834, 281, 536, 597, 9834, 820, 309, 5623, 11, 51068, 51068, 562, 309, 5028, 5660, 309, 445, 1542, 337, 1340, 300, 311, 668, 14226, 294, 341, 13075, 1508, 13, 51374, 51374, 407, 498, 321, 360, 2293, 264, 912, 551, 382, 949, 597, 307, 281, 992, 364, 19667, 19273, 257, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.07889635643262542, "compression_ratio": 1.6363636363636365, "no_speech_prob": 1.1189400765942992e-06}, {"id": 55, "seek": 33902, "start": 339.02, "end": 347.68, "text": " tensor with three ones in it, but this case we wrap it in a parameter, we now get told", "tokens": [50364, 40863, 365, 1045, 2306, 294, 309, 11, 457, 341, 1389, 321, 7019, 309, 294, 257, 13075, 11, 321, 586, 483, 1907, 50797, 50797, 1392, 456, 311, 472, 13075, 40863, 294, 341, 2316, 293, 309, 8306, 257, 40863, 365, 1045, 51199, 51199, 2306, 13, 51311, 51311, 400, 291, 393, 536, 309, 611, 767, 538, 7576, 37808, 300, 321, 434, 516, 281, 528, 3651, 16235, 13, 51555, 51555, 467, 311, 11926, 300, 1340, 300, 311, 257, 13075, 307, 746, 300, 291, 528, 281, 8873, 2771, 2448, 51733, 51733, 337, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.13339612794959027, "compression_ratio": 1.7429906542056075, "no_speech_prob": 3.2563102081439865e-07}, {"id": 56, "seek": 33902, "start": 347.68, "end": 355.71999999999997, "text": " okay there's one parameter tensor in this model and it contains a tensor with three", "tokens": [50364, 40863, 365, 1045, 2306, 294, 309, 11, 457, 341, 1389, 321, 7019, 309, 294, 257, 13075, 11, 321, 586, 483, 1907, 50797, 50797, 1392, 456, 311, 472, 13075, 40863, 294, 341, 2316, 293, 309, 8306, 257, 40863, 365, 1045, 51199, 51199, 2306, 13, 51311, 51311, 400, 291, 393, 536, 309, 611, 767, 538, 7576, 37808, 300, 321, 434, 516, 281, 528, 3651, 16235, 13, 51555, 51555, 467, 311, 11926, 300, 1340, 300, 311, 257, 13075, 307, 746, 300, 291, 528, 281, 8873, 2771, 2448, 51733, 51733, 337, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.13339612794959027, "compression_ratio": 1.7429906542056075, "no_speech_prob": 3.2563102081439865e-07}, {"id": 57, "seek": 33902, "start": 355.71999999999997, "end": 357.96, "text": " ones.", "tokens": [50364, 40863, 365, 1045, 2306, 294, 309, 11, 457, 341, 1389, 321, 7019, 309, 294, 257, 13075, 11, 321, 586, 483, 1907, 50797, 50797, 1392, 456, 311, 472, 13075, 40863, 294, 341, 2316, 293, 309, 8306, 257, 40863, 365, 1045, 51199, 51199, 2306, 13, 51311, 51311, 400, 291, 393, 536, 309, 611, 767, 538, 7576, 37808, 300, 321, 434, 516, 281, 528, 3651, 16235, 13, 51555, 51555, 467, 311, 11926, 300, 1340, 300, 311, 257, 13075, 307, 746, 300, 291, 528, 281, 8873, 2771, 2448, 51733, 51733, 337, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.13339612794959027, "compression_ratio": 1.7429906542056075, "no_speech_prob": 3.2563102081439865e-07}, {"id": 58, "seek": 33902, "start": 357.96, "end": 362.84, "text": " And you can see it also actually by default assumes that we're going to want require gradient.", "tokens": [50364, 40863, 365, 1045, 2306, 294, 309, 11, 457, 341, 1389, 321, 7019, 309, 294, 257, 13075, 11, 321, 586, 483, 1907, 50797, 50797, 1392, 456, 311, 472, 13075, 40863, 294, 341, 2316, 293, 309, 8306, 257, 40863, 365, 1045, 51199, 51199, 2306, 13, 51311, 51311, 400, 291, 393, 536, 309, 611, 767, 538, 7576, 37808, 300, 321, 434, 516, 281, 528, 3651, 16235, 13, 51555, 51555, 467, 311, 11926, 300, 1340, 300, 311, 257, 13075, 307, 746, 300, 291, 528, 281, 8873, 2771, 2448, 51733, 51733, 337, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.13339612794959027, "compression_ratio": 1.7429906542056075, "no_speech_prob": 3.2563102081439865e-07}, {"id": 59, "seek": 33902, "start": 362.84, "end": 366.4, "text": " It's assuming that anything that's a parameter is something that you want to calculate gradients", "tokens": [50364, 40863, 365, 1045, 2306, 294, 309, 11, 457, 341, 1389, 321, 7019, 309, 294, 257, 13075, 11, 321, 586, 483, 1907, 50797, 50797, 1392, 456, 311, 472, 13075, 40863, 294, 341, 2316, 293, 309, 8306, 257, 40863, 365, 1045, 51199, 51199, 2306, 13, 51311, 51311, 400, 291, 393, 536, 309, 611, 767, 538, 7576, 37808, 300, 321, 434, 516, 281, 528, 3651, 16235, 13, 51555, 51555, 467, 311, 11926, 300, 1340, 300, 311, 257, 13075, 307, 746, 300, 291, 528, 281, 8873, 2771, 2448, 51733, 51733, 337, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.13339612794959027, "compression_ratio": 1.7429906542056075, "no_speech_prob": 3.2563102081439865e-07}, {"id": 60, "seek": 33902, "start": 366.4, "end": 368.56, "text": " for.", "tokens": [50364, 40863, 365, 1045, 2306, 294, 309, 11, 457, 341, 1389, 321, 7019, 309, 294, 257, 13075, 11, 321, 586, 483, 1907, 50797, 50797, 1392, 456, 311, 472, 13075, 40863, 294, 341, 2316, 293, 309, 8306, 257, 40863, 365, 1045, 51199, 51199, 2306, 13, 51311, 51311, 400, 291, 393, 536, 309, 611, 767, 538, 7576, 37808, 300, 321, 434, 516, 281, 528, 3651, 16235, 13, 51555, 51555, 467, 311, 11926, 300, 1340, 300, 311, 257, 13075, 307, 746, 300, 291, 528, 281, 8873, 2771, 2448, 51733, 51733, 337, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.13339612794959027, "compression_ratio": 1.7429906542056075, "no_speech_prob": 3.2563102081439865e-07}, {"id": 61, "seek": 36856, "start": 368.56, "end": 374.12, "text": " Now most of the time we don't have to do this because PyTorch provides lots of convenient", "tokens": [50364, 823, 881, 295, 264, 565, 321, 500, 380, 362, 281, 360, 341, 570, 9953, 51, 284, 339, 6417, 3195, 295, 10851, 50642, 50642, 721, 337, 505, 1270, 382, 437, 291, 600, 1612, 949, 297, 77, 13, 28263, 597, 307, 746, 300, 611, 7829, 51002, 51002, 257, 40863, 13, 51052, 51052, 407, 341, 576, 1884, 257, 40863, 295, 502, 538, 805, 1553, 257, 12577, 1433, 294, 309, 13, 51470, 51470, 639, 307, 406, 885, 14226, 294, 364, 297, 77, 13, 2181, 335, 2398, 457, 300, 311, 1392, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.12547567388513586, "compression_ratio": 1.5358851674641147, "no_speech_prob": 1.4367481071531074e-06}, {"id": 62, "seek": 36856, "start": 374.12, "end": 381.32, "text": " things for us such as what you've seen before nn.linear which is something that also creates", "tokens": [50364, 823, 881, 295, 264, 565, 321, 500, 380, 362, 281, 360, 341, 570, 9953, 51, 284, 339, 6417, 3195, 295, 10851, 50642, 50642, 721, 337, 505, 1270, 382, 437, 291, 600, 1612, 949, 297, 77, 13, 28263, 597, 307, 746, 300, 611, 7829, 51002, 51002, 257, 40863, 13, 51052, 51052, 407, 341, 576, 1884, 257, 40863, 295, 502, 538, 805, 1553, 257, 12577, 1433, 294, 309, 13, 51470, 51470, 639, 307, 406, 885, 14226, 294, 364, 297, 77, 13, 2181, 335, 2398, 457, 300, 311, 1392, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.12547567388513586, "compression_ratio": 1.5358851674641147, "no_speech_prob": 1.4367481071531074e-06}, {"id": 63, "seek": 36856, "start": 381.32, "end": 382.32, "text": " a tensor.", "tokens": [50364, 823, 881, 295, 264, 565, 321, 500, 380, 362, 281, 360, 341, 570, 9953, 51, 284, 339, 6417, 3195, 295, 10851, 50642, 50642, 721, 337, 505, 1270, 382, 437, 291, 600, 1612, 949, 297, 77, 13, 28263, 597, 307, 746, 300, 611, 7829, 51002, 51002, 257, 40863, 13, 51052, 51052, 407, 341, 576, 1884, 257, 40863, 295, 502, 538, 805, 1553, 257, 12577, 1433, 294, 309, 13, 51470, 51470, 639, 307, 406, 885, 14226, 294, 364, 297, 77, 13, 2181, 335, 2398, 457, 300, 311, 1392, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.12547567388513586, "compression_ratio": 1.5358851674641147, "no_speech_prob": 1.4367481071531074e-06}, {"id": 64, "seek": 36856, "start": 382.32, "end": 390.68, "text": " So this would create a tensor of 1 by 3 without a bias term in it.", "tokens": [50364, 823, 881, 295, 264, 565, 321, 500, 380, 362, 281, 360, 341, 570, 9953, 51, 284, 339, 6417, 3195, 295, 10851, 50642, 50642, 721, 337, 505, 1270, 382, 437, 291, 600, 1612, 949, 297, 77, 13, 28263, 597, 307, 746, 300, 611, 7829, 51002, 51002, 257, 40863, 13, 51052, 51052, 407, 341, 576, 1884, 257, 40863, 295, 502, 538, 805, 1553, 257, 12577, 1433, 294, 309, 13, 51470, 51470, 639, 307, 406, 885, 14226, 294, 364, 297, 77, 13, 2181, 335, 2398, 457, 300, 311, 1392, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.12547567388513586, "compression_ratio": 1.5358851674641147, "no_speech_prob": 1.4367481071531074e-06}, {"id": 65, "seek": 36856, "start": 390.68, "end": 394.64, "text": " This is not being wrapped in an nn.parameter but that's okay.", "tokens": [50364, 823, 881, 295, 264, 565, 321, 500, 380, 362, 281, 360, 341, 570, 9953, 51, 284, 339, 6417, 3195, 295, 10851, 50642, 50642, 721, 337, 505, 1270, 382, 437, 291, 600, 1612, 949, 297, 77, 13, 28263, 597, 307, 746, 300, 611, 7829, 51002, 51002, 257, 40863, 13, 51052, 51052, 407, 341, 576, 1884, 257, 40863, 295, 502, 538, 805, 1553, 257, 12577, 1433, 294, 309, 13, 51470, 51470, 639, 307, 406, 885, 14226, 294, 364, 297, 77, 13, 2181, 335, 2398, 457, 300, 311, 1392, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.12547567388513586, "compression_ratio": 1.5358851674641147, "no_speech_prob": 1.4367481071531074e-06}, {"id": 66, "seek": 39464, "start": 394.64, "end": 400.68, "text": " PyTorch knows that anything which is basically a layer in a neural net is going to be a parameter.", "tokens": [50364, 9953, 51, 284, 339, 3255, 300, 1340, 597, 307, 1936, 257, 4583, 294, 257, 18161, 2533, 307, 516, 281, 312, 257, 13075, 13, 50666, 50666, 407, 309, 6772, 33095, 341, 257, 13075, 13, 50912, 50912, 407, 510, 311, 2293, 264, 912, 551, 797, 286, 603, 7690, 452, 2657, 295, 2010, 314, 11, 286, 603, 1520, 51080, 51080, 337, 1080, 9834, 293, 286, 393, 536, 456, 311, 472, 40863, 295, 9834, 293, 456, 311, 527, 1045, 51360, 51360, 721, 13, 51416, 51416, 400, 291, 603, 3449, 300, 309, 311, 611, 6772, 16979, 5883, 1602, 552, 597, 797, 307, 5101, 51800, 51800, 437, 321, 528, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.12402556560657642, "compression_ratio": 1.7813765182186234, "no_speech_prob": 2.123370222761878e-06}, {"id": 67, "seek": 39464, "start": 400.68, "end": 405.59999999999997, "text": " So it automatically considers this a parameter.", "tokens": [50364, 9953, 51, 284, 339, 3255, 300, 1340, 597, 307, 1936, 257, 4583, 294, 257, 18161, 2533, 307, 516, 281, 312, 257, 13075, 13, 50666, 50666, 407, 309, 6772, 33095, 341, 257, 13075, 13, 50912, 50912, 407, 510, 311, 2293, 264, 912, 551, 797, 286, 603, 7690, 452, 2657, 295, 2010, 314, 11, 286, 603, 1520, 51080, 51080, 337, 1080, 9834, 293, 286, 393, 536, 456, 311, 472, 40863, 295, 9834, 293, 456, 311, 527, 1045, 51360, 51360, 721, 13, 51416, 51416, 400, 291, 603, 3449, 300, 309, 311, 611, 6772, 16979, 5883, 1602, 552, 597, 797, 307, 5101, 51800, 51800, 437, 321, 528, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.12402556560657642, "compression_ratio": 1.7813765182186234, "no_speech_prob": 2.123370222761878e-06}, {"id": 68, "seek": 39464, "start": 405.59999999999997, "end": 408.96, "text": " So here's exactly the same thing again I'll construct my object of type T, I'll check", "tokens": [50364, 9953, 51, 284, 339, 3255, 300, 1340, 597, 307, 1936, 257, 4583, 294, 257, 18161, 2533, 307, 516, 281, 312, 257, 13075, 13, 50666, 50666, 407, 309, 6772, 33095, 341, 257, 13075, 13, 50912, 50912, 407, 510, 311, 2293, 264, 912, 551, 797, 286, 603, 7690, 452, 2657, 295, 2010, 314, 11, 286, 603, 1520, 51080, 51080, 337, 1080, 9834, 293, 286, 393, 536, 456, 311, 472, 40863, 295, 9834, 293, 456, 311, 527, 1045, 51360, 51360, 721, 13, 51416, 51416, 400, 291, 603, 3449, 300, 309, 311, 611, 6772, 16979, 5883, 1602, 552, 597, 797, 307, 5101, 51800, 51800, 437, 321, 528, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.12402556560657642, "compression_ratio": 1.7813765182186234, "no_speech_prob": 2.123370222761878e-06}, {"id": 69, "seek": 39464, "start": 408.96, "end": 414.56, "text": " for its parameters and I can see there's one tensor of parameters and there's our three", "tokens": [50364, 9953, 51, 284, 339, 3255, 300, 1340, 597, 307, 1936, 257, 4583, 294, 257, 18161, 2533, 307, 516, 281, 312, 257, 13075, 13, 50666, 50666, 407, 309, 6772, 33095, 341, 257, 13075, 13, 50912, 50912, 407, 510, 311, 2293, 264, 912, 551, 797, 286, 603, 7690, 452, 2657, 295, 2010, 314, 11, 286, 603, 1520, 51080, 51080, 337, 1080, 9834, 293, 286, 393, 536, 456, 311, 472, 40863, 295, 9834, 293, 456, 311, 527, 1045, 51360, 51360, 721, 13, 51416, 51416, 400, 291, 603, 3449, 300, 309, 311, 611, 6772, 16979, 5883, 1602, 552, 597, 797, 307, 5101, 51800, 51800, 437, 321, 528, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.12402556560657642, "compression_ratio": 1.7813765182186234, "no_speech_prob": 2.123370222761878e-06}, {"id": 70, "seek": 39464, "start": 414.56, "end": 415.68, "text": " things.", "tokens": [50364, 9953, 51, 284, 339, 3255, 300, 1340, 597, 307, 1936, 257, 4583, 294, 257, 18161, 2533, 307, 516, 281, 312, 257, 13075, 13, 50666, 50666, 407, 309, 6772, 33095, 341, 257, 13075, 13, 50912, 50912, 407, 510, 311, 2293, 264, 912, 551, 797, 286, 603, 7690, 452, 2657, 295, 2010, 314, 11, 286, 603, 1520, 51080, 51080, 337, 1080, 9834, 293, 286, 393, 536, 456, 311, 472, 40863, 295, 9834, 293, 456, 311, 527, 1045, 51360, 51360, 721, 13, 51416, 51416, 400, 291, 603, 3449, 300, 309, 311, 611, 6772, 16979, 5883, 1602, 552, 597, 797, 307, 5101, 51800, 51800, 437, 321, 528, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.12402556560657642, "compression_ratio": 1.7813765182186234, "no_speech_prob": 2.123370222761878e-06}, {"id": 71, "seek": 39464, "start": 415.68, "end": 423.36, "text": " And you'll notice that it's also automatically randomly initialized them which again is generally", "tokens": [50364, 9953, 51, 284, 339, 3255, 300, 1340, 597, 307, 1936, 257, 4583, 294, 257, 18161, 2533, 307, 516, 281, 312, 257, 13075, 13, 50666, 50666, 407, 309, 6772, 33095, 341, 257, 13075, 13, 50912, 50912, 407, 510, 311, 2293, 264, 912, 551, 797, 286, 603, 7690, 452, 2657, 295, 2010, 314, 11, 286, 603, 1520, 51080, 51080, 337, 1080, 9834, 293, 286, 393, 536, 456, 311, 472, 40863, 295, 9834, 293, 456, 311, 527, 1045, 51360, 51360, 721, 13, 51416, 51416, 400, 291, 603, 3449, 300, 309, 311, 611, 6772, 16979, 5883, 1602, 552, 597, 797, 307, 5101, 51800, 51800, 437, 321, 528, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.12402556560657642, "compression_ratio": 1.7813765182186234, "no_speech_prob": 2.123370222761878e-06}, {"id": 72, "seek": 39464, "start": 423.36, "end": 424.4, "text": " what we want.", "tokens": [50364, 9953, 51, 284, 339, 3255, 300, 1340, 597, 307, 1936, 257, 4583, 294, 257, 18161, 2533, 307, 516, 281, 312, 257, 13075, 13, 50666, 50666, 407, 309, 6772, 33095, 341, 257, 13075, 13, 50912, 50912, 407, 510, 311, 2293, 264, 912, 551, 797, 286, 603, 7690, 452, 2657, 295, 2010, 314, 11, 286, 603, 1520, 51080, 51080, 337, 1080, 9834, 293, 286, 393, 536, 456, 311, 472, 40863, 295, 9834, 293, 456, 311, 527, 1045, 51360, 51360, 721, 13, 51416, 51416, 400, 291, 603, 3449, 300, 309, 311, 611, 6772, 16979, 5883, 1602, 552, 597, 797, 307, 5101, 51800, 51800, 437, 321, 528, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.12402556560657642, "compression_ratio": 1.7813765182186234, "no_speech_prob": 2.123370222761878e-06}, {"id": 73, "seek": 42440, "start": 424.4, "end": 433.4, "text": " So PyTorch does go to some effort to try to make things easy for you.", "tokens": [50364, 407, 9953, 51, 284, 339, 775, 352, 281, 512, 4630, 281, 853, 281, 652, 721, 1858, 337, 291, 13, 50814, 50814, 407, 341, 19667, 257, 307, 257, 8213, 4583, 293, 309, 311, 658, 257, 3840, 295, 721, 294, 309, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.0790480754592202, "compression_ratio": 1.3063063063063063, "no_speech_prob": 1.4367481071531074e-06}, {"id": 74, "seek": 42440, "start": 433.4, "end": 448.32, "text": " So this attribute a is a linear layer and it's got a bunch of things in it.", "tokens": [50364, 407, 9953, 51, 284, 339, 775, 352, 281, 512, 4630, 281, 853, 281, 652, 721, 1858, 337, 291, 13, 50814, 50814, 407, 341, 19667, 257, 307, 257, 8213, 4583, 293, 309, 311, 658, 257, 3840, 295, 721, 294, 309, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.0790480754592202, "compression_ratio": 1.3063063063063063, "no_speech_prob": 1.4367481071531074e-06}, {"id": 75, "seek": 44832, "start": 448.32, "end": 455.36, "text": " One of the things in it is the weights and that's where you'll actually find the parameters,", "tokens": [50364, 1485, 295, 264, 721, 294, 309, 307, 264, 17443, 293, 300, 311, 689, 291, 603, 767, 915, 264, 9834, 11, 50716, 50716, 300, 307, 295, 2010, 13075, 13, 50812, 50812, 407, 257, 8213, 4583, 307, 746, 300, 8306, 17212, 295, 2010, 13075, 13, 51088, 51088, 1033, 370, 437, 321, 528, 281, 360, 307, 321, 528, 281, 1884, 746, 300, 1985, 445, 411, 341, 630, 597, 51506, 51506], "temperature": 0.0, "avg_logprob": -0.13253261732018512, "compression_ratio": 1.7041420118343196, "no_speech_prob": 4.247027334258746e-07}, {"id": 76, "seek": 44832, "start": 455.36, "end": 457.28, "text": " that is of type parameter.", "tokens": [50364, 1485, 295, 264, 721, 294, 309, 307, 264, 17443, 293, 300, 311, 689, 291, 603, 767, 915, 264, 9834, 11, 50716, 50716, 300, 307, 295, 2010, 13075, 13, 50812, 50812, 407, 257, 8213, 4583, 307, 746, 300, 8306, 17212, 295, 2010, 13075, 13, 51088, 51088, 1033, 370, 437, 321, 528, 281, 360, 307, 321, 528, 281, 1884, 746, 300, 1985, 445, 411, 341, 630, 597, 51506, 51506], "temperature": 0.0, "avg_logprob": -0.13253261732018512, "compression_ratio": 1.7041420118343196, "no_speech_prob": 4.247027334258746e-07}, {"id": 77, "seek": 44832, "start": 457.28, "end": 462.8, "text": " So a linear layer is something that contains attributes of type parameter.", "tokens": [50364, 1485, 295, 264, 721, 294, 309, 307, 264, 17443, 293, 300, 311, 689, 291, 603, 767, 915, 264, 9834, 11, 50716, 50716, 300, 307, 295, 2010, 13075, 13, 50812, 50812, 407, 257, 8213, 4583, 307, 746, 300, 8306, 17212, 295, 2010, 13075, 13, 51088, 51088, 1033, 370, 437, 321, 528, 281, 360, 307, 321, 528, 281, 1884, 746, 300, 1985, 445, 411, 341, 630, 597, 51506, 51506], "temperature": 0.0, "avg_logprob": -0.13253261732018512, "compression_ratio": 1.7041420118343196, "no_speech_prob": 4.247027334258746e-07}, {"id": 78, "seek": 44832, "start": 462.8, "end": 471.15999999999997, "text": " Okay so what we want to do is we want to create something that works just like this did which", "tokens": [50364, 1485, 295, 264, 721, 294, 309, 307, 264, 17443, 293, 300, 311, 689, 291, 603, 767, 915, 264, 9834, 11, 50716, 50716, 300, 307, 295, 2010, 13075, 13, 50812, 50812, 407, 257, 8213, 4583, 307, 746, 300, 8306, 17212, 295, 2010, 13075, 13, 51088, 51088, 1033, 370, 437, 321, 528, 281, 360, 307, 321, 528, 281, 1884, 746, 300, 1985, 445, 411, 341, 630, 597, 51506, 51506], "temperature": 0.0, "avg_logprob": -0.13253261732018512, "compression_ratio": 1.7041420118343196, "no_speech_prob": 4.247027334258746e-07}, {"id": 79, "seek": 47116, "start": 471.16, "end": 482.92, "text": " is something that creates a matrix which will be trained as we train the model.", "tokens": [50364, 307, 746, 300, 7829, 257, 8141, 597, 486, 312, 8895, 382, 321, 3847, 264, 2316, 13, 50952, 50952, 1033, 370, 364, 12240, 3584, 307, 746, 597, 1338, 309, 311, 516, 281, 1884, 257, 8141, 295, 341, 538, 341, 51442, 51442, 293, 309, 486, 312, 257, 13075, 293, 309, 311, 746, 300, 1338, 321, 643, 281, 312, 1075, 281, 8186, 666, 51712, 51712, 382, 321, 630, 510, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.11134500906501017, "compression_ratio": 1.729559748427673, "no_speech_prob": 9.132529044109106e-07}, {"id": 80, "seek": 47116, "start": 482.92, "end": 492.72, "text": " Okay so an embedding is something which yeah it's going to create a matrix of this by this", "tokens": [50364, 307, 746, 300, 7829, 257, 8141, 597, 486, 312, 8895, 382, 321, 3847, 264, 2316, 13, 50952, 50952, 1033, 370, 364, 12240, 3584, 307, 746, 597, 1338, 309, 311, 516, 281, 1884, 257, 8141, 295, 341, 538, 341, 51442, 51442, 293, 309, 486, 312, 257, 13075, 293, 309, 311, 746, 300, 1338, 321, 643, 281, 312, 1075, 281, 8186, 666, 51712, 51712, 382, 321, 630, 510, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.11134500906501017, "compression_ratio": 1.729559748427673, "no_speech_prob": 9.132529044109106e-07}, {"id": 81, "seek": 47116, "start": 492.72, "end": 498.12, "text": " and it will be a parameter and it's something that yeah we need to be able to index into", "tokens": [50364, 307, 746, 300, 7829, 257, 8141, 597, 486, 312, 8895, 382, 321, 3847, 264, 2316, 13, 50952, 50952, 1033, 370, 364, 12240, 3584, 307, 746, 597, 1338, 309, 311, 516, 281, 1884, 257, 8141, 295, 341, 538, 341, 51442, 51442, 293, 309, 486, 312, 257, 13075, 293, 309, 311, 746, 300, 1338, 321, 643, 281, 312, 1075, 281, 8186, 666, 51712, 51712, 382, 321, 630, 510, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.11134500906501017, "compression_ratio": 1.729559748427673, "no_speech_prob": 9.132529044109106e-07}, {"id": 82, "seek": 47116, "start": 498.12, "end": 499.56, "text": " as we did here.", "tokens": [50364, 307, 746, 300, 7829, 257, 8141, 597, 486, 312, 8895, 382, 321, 3847, 264, 2316, 13, 50952, 50952, 1033, 370, 364, 12240, 3584, 307, 746, 597, 1338, 309, 311, 516, 281, 1884, 257, 8141, 295, 341, 538, 341, 51442, 51442, 293, 309, 486, 312, 257, 13075, 293, 309, 311, 746, 300, 1338, 321, 643, 281, 312, 1075, 281, 8186, 666, 51712, 51712, 382, 321, 630, 510, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.11134500906501017, "compression_ratio": 1.729559748427673, "no_speech_prob": 9.132529044109106e-07}, {"id": 83, "seek": 49956, "start": 499.56, "end": 504.72, "text": " And so yeah what is happening behind the scenes you know in PyTorch.", "tokens": [50364, 400, 370, 1338, 437, 307, 2737, 2261, 264, 8026, 291, 458, 294, 9953, 51, 284, 339, 13, 50622, 50622, 467, 311, 1481, 281, 312, 1075, 281, 1884, 613, 721, 4175, 294, 34944, 852, 570, 309, 1355, 321, 534, 50828, 50828, 1223, 309, 13, 50992, 50992, 400, 370, 718, 311, 1884, 300, 1900, 912, 10088, 300, 321, 630, 1036, 565, 457, 341, 565, 321, 434, 51324, 51324, 516, 281, 764, 257, 2445, 286, 600, 2942, 1219, 1884, 47, 88, 2356, 82, 13, 51506, 51506], "temperature": 0.0, "avg_logprob": -0.1372409932753619, "compression_ratio": 1.536231884057971, "no_speech_prob": 7.296312560356455e-06}, {"id": 84, "seek": 49956, "start": 504.72, "end": 508.84, "text": " It's nice to be able to create these things ourselves in Scratch because it means we really", "tokens": [50364, 400, 370, 1338, 437, 307, 2737, 2261, 264, 8026, 291, 458, 294, 9953, 51, 284, 339, 13, 50622, 50622, 467, 311, 1481, 281, 312, 1075, 281, 1884, 613, 721, 4175, 294, 34944, 852, 570, 309, 1355, 321, 534, 50828, 50828, 1223, 309, 13, 50992, 50992, 400, 370, 718, 311, 1884, 300, 1900, 912, 10088, 300, 321, 630, 1036, 565, 457, 341, 565, 321, 434, 51324, 51324, 516, 281, 764, 257, 2445, 286, 600, 2942, 1219, 1884, 47, 88, 2356, 82, 13, 51506, 51506], "temperature": 0.0, "avg_logprob": -0.1372409932753619, "compression_ratio": 1.536231884057971, "no_speech_prob": 7.296312560356455e-06}, {"id": 85, "seek": 49956, "start": 508.84, "end": 512.12, "text": " understand it.", "tokens": [50364, 400, 370, 1338, 437, 307, 2737, 2261, 264, 8026, 291, 458, 294, 9953, 51, 284, 339, 13, 50622, 50622, 467, 311, 1481, 281, 312, 1075, 281, 1884, 613, 721, 4175, 294, 34944, 852, 570, 309, 1355, 321, 534, 50828, 50828, 1223, 309, 13, 50992, 50992, 400, 370, 718, 311, 1884, 300, 1900, 912, 10088, 300, 321, 630, 1036, 565, 457, 341, 565, 321, 434, 51324, 51324, 516, 281, 764, 257, 2445, 286, 600, 2942, 1219, 1884, 47, 88, 2356, 82, 13, 51506, 51506], "temperature": 0.0, "avg_logprob": -0.1372409932753619, "compression_ratio": 1.536231884057971, "no_speech_prob": 7.296312560356455e-06}, {"id": 86, "seek": 49956, "start": 512.12, "end": 518.76, "text": " And so let's create that exact same module that we did last time but this time we're", "tokens": [50364, 400, 370, 1338, 437, 307, 2737, 2261, 264, 8026, 291, 458, 294, 9953, 51, 284, 339, 13, 50622, 50622, 467, 311, 1481, 281, 312, 1075, 281, 1884, 613, 721, 4175, 294, 34944, 852, 570, 309, 1355, 321, 534, 50828, 50828, 1223, 309, 13, 50992, 50992, 400, 370, 718, 311, 1884, 300, 1900, 912, 10088, 300, 321, 630, 1036, 565, 457, 341, 565, 321, 434, 51324, 51324, 516, 281, 764, 257, 2445, 286, 600, 2942, 1219, 1884, 47, 88, 2356, 82, 13, 51506, 51506], "temperature": 0.0, "avg_logprob": -0.1372409932753619, "compression_ratio": 1.536231884057971, "no_speech_prob": 7.296312560356455e-06}, {"id": 87, "seek": 49956, "start": 518.76, "end": 522.4, "text": " going to use a function I've created called createPyrams.", "tokens": [50364, 400, 370, 1338, 437, 307, 2737, 2261, 264, 8026, 291, 458, 294, 9953, 51, 284, 339, 13, 50622, 50622, 467, 311, 1481, 281, 312, 1075, 281, 1884, 613, 721, 4175, 294, 34944, 852, 570, 309, 1355, 321, 534, 50828, 50828, 1223, 309, 13, 50992, 50992, 400, 370, 718, 311, 1884, 300, 1900, 912, 10088, 300, 321, 630, 1036, 565, 457, 341, 565, 321, 434, 51324, 51324, 516, 281, 764, 257, 2445, 286, 600, 2942, 1219, 1884, 47, 88, 2356, 82, 13, 51506, 51506], "temperature": 0.0, "avg_logprob": -0.1372409932753619, "compression_ratio": 1.536231884057971, "no_speech_prob": 7.296312560356455e-06}, {"id": 88, "seek": 52240, "start": 522.4, "end": 532.76, "text": " You pass in a size so such as in this case n uses by n factors and it's going to call", "tokens": [50364, 509, 1320, 294, 257, 2744, 370, 1270, 382, 294, 341, 1389, 297, 4960, 538, 297, 6771, 293, 309, 311, 516, 281, 818, 50882, 50882, 27822, 13, 4527, 329, 281, 1884, 257, 40863, 295, 35193, 295, 264, 2744, 300, 291, 5308, 293, 550, 309, 311, 516, 51386, 51386, 281, 360, 257, 2710, 4974, 7316, 370, 257, 39148, 7316, 295, 914, 4018, 11, 3832, 25163, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1593747921844027, "compression_ratio": 1.6107784431137724, "no_speech_prob": 2.60159617937461e-06}, {"id": 89, "seek": 52240, "start": 532.76, "end": 542.84, "text": " torch.zeros to create a tensor of zeros of the size that you request and then it's going", "tokens": [50364, 509, 1320, 294, 257, 2744, 370, 1270, 382, 294, 341, 1389, 297, 4960, 538, 297, 6771, 293, 309, 311, 516, 281, 818, 50882, 50882, 27822, 13, 4527, 329, 281, 1884, 257, 40863, 295, 35193, 295, 264, 2744, 300, 291, 5308, 293, 550, 309, 311, 516, 51386, 51386, 281, 360, 257, 2710, 4974, 7316, 370, 257, 39148, 7316, 295, 914, 4018, 11, 3832, 25163, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1593747921844027, "compression_ratio": 1.6107784431137724, "no_speech_prob": 2.60159617937461e-06}, {"id": 90, "seek": 52240, "start": 542.84, "end": 551.56, "text": " to do a normal random distribution so a Gaussian distribution of mean zero, standard deviation", "tokens": [50364, 509, 1320, 294, 257, 2744, 370, 1270, 382, 294, 341, 1389, 297, 4960, 538, 297, 6771, 293, 309, 311, 516, 281, 818, 50882, 50882, 27822, 13, 4527, 329, 281, 1884, 257, 40863, 295, 35193, 295, 264, 2744, 300, 291, 5308, 293, 550, 309, 311, 516, 51386, 51386, 281, 360, 257, 2710, 4974, 7316, 370, 257, 39148, 7316, 295, 914, 4018, 11, 3832, 25163, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1593747921844027, "compression_ratio": 1.6107784431137724, "no_speech_prob": 2.60159617937461e-06}, {"id": 91, "seek": 55156, "start": 551.56, "end": 558.1199999999999, "text": " 0.01 to randomly initialize those and it'll put the whole thing into an nn.parameter.", "tokens": [50364, 1958, 13, 10607, 281, 16979, 5883, 1125, 729, 293, 309, 603, 829, 264, 1379, 551, 666, 364, 297, 77, 13, 2181, 335, 2398, 13, 50692, 50692, 407, 300, 370, 341, 510, 307, 516, 281, 1884, 364, 19667, 1219, 4195, 6771, 597, 486, 312, 50966, 50966, 257, 13075, 19273, 512, 40863, 295, 5646, 12631, 4974, 3547, 295, 341, 2744, 13, 51562, 51562, 11359, 385, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.17425124785479376, "compression_ratio": 1.5055555555555555, "no_speech_prob": 6.240884431463201e-06}, {"id": 92, "seek": 55156, "start": 558.1199999999999, "end": 563.5999999999999, "text": " So that so this here is going to create an attribute called user factors which will be", "tokens": [50364, 1958, 13, 10607, 281, 16979, 5883, 1125, 729, 293, 309, 603, 829, 264, 1379, 551, 666, 364, 297, 77, 13, 2181, 335, 2398, 13, 50692, 50692, 407, 300, 370, 341, 510, 307, 516, 281, 1884, 364, 19667, 1219, 4195, 6771, 597, 486, 312, 50966, 50966, 257, 13075, 19273, 512, 40863, 295, 5646, 12631, 4974, 3547, 295, 341, 2744, 13, 51562, 51562, 11359, 385, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.17425124785479376, "compression_ratio": 1.5055555555555555, "no_speech_prob": 6.240884431463201e-06}, {"id": 93, "seek": 55156, "start": 563.5999999999999, "end": 575.52, "text": " a parameter containing some tensor of normally distributed random numbers of this size.", "tokens": [50364, 1958, 13, 10607, 281, 16979, 5883, 1125, 729, 293, 309, 603, 829, 264, 1379, 551, 666, 364, 297, 77, 13, 2181, 335, 2398, 13, 50692, 50692, 407, 300, 370, 341, 510, 307, 516, 281, 1884, 364, 19667, 1219, 4195, 6771, 597, 486, 312, 50966, 50966, 257, 13075, 19273, 512, 40863, 295, 5646, 12631, 4974, 3547, 295, 341, 2744, 13, 51562, 51562, 11359, 385, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.17425124785479376, "compression_ratio": 1.5055555555555555, "no_speech_prob": 6.240884431463201e-06}, {"id": 94, "seek": 55156, "start": 575.52, "end": 579.02, "text": " Excuse me.", "tokens": [50364, 1958, 13, 10607, 281, 16979, 5883, 1125, 729, 293, 309, 603, 829, 264, 1379, 551, 666, 364, 297, 77, 13, 2181, 335, 2398, 13, 50692, 50692, 407, 300, 370, 341, 510, 307, 516, 281, 1884, 364, 19667, 1219, 4195, 6771, 597, 486, 312, 50966, 50966, 257, 13075, 19273, 512, 40863, 295, 5646, 12631, 4974, 3547, 295, 341, 2744, 13, 51562, 51562, 11359, 385, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.17425124785479376, "compression_ratio": 1.5055555555555555, "no_speech_prob": 6.240884431463201e-06}, {"id": 95, "seek": 57902, "start": 579.02, "end": 583.12, "text": " And because it's a parameter that's going to be stored inside that's going to be available", "tokens": [50364, 400, 570, 309, 311, 257, 13075, 300, 311, 516, 281, 312, 12187, 1854, 300, 311, 516, 281, 312, 2435, 50569, 50569, 382, 294, 9834, 294, 264, 10088, 13, 50717, 50717, 876, 286, 478, 49299, 278, 13, 51003, 51003, 407, 4195, 12577, 486, 312, 257, 8062, 295, 9834, 13, 51241, 51241, 32127, 6771, 486, 312, 257, 8141, 295, 9834, 13, 51381, 51381, 28766, 6771, 486, 312, 257, 8141, 293, 6233, 538, 297, 6771, 13, 51563, 51563, 28766, 12577, 486, 312, 257, 8062, 295, 297, 6233, 13, 51729, 51729, 639, 307, 264, 912, 382, 949, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20133250100272043, "compression_ratio": 1.9558011049723756, "no_speech_prob": 5.338131813914515e-06}, {"id": 96, "seek": 57902, "start": 583.12, "end": 586.0799999999999, "text": " as in parameters in the module.", "tokens": [50364, 400, 570, 309, 311, 257, 13075, 300, 311, 516, 281, 312, 12187, 1854, 300, 311, 516, 281, 312, 2435, 50569, 50569, 382, 294, 9834, 294, 264, 10088, 13, 50717, 50717, 876, 286, 478, 49299, 278, 13, 51003, 51003, 407, 4195, 12577, 486, 312, 257, 8062, 295, 9834, 13, 51241, 51241, 32127, 6771, 486, 312, 257, 8141, 295, 9834, 13, 51381, 51381, 28766, 6771, 486, 312, 257, 8141, 293, 6233, 538, 297, 6771, 13, 51563, 51563, 28766, 12577, 486, 312, 257, 8062, 295, 297, 6233, 13, 51729, 51729, 639, 307, 264, 912, 382, 949, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20133250100272043, "compression_ratio": 1.9558011049723756, "no_speech_prob": 5.338131813914515e-06}, {"id": 97, "seek": 57902, "start": 586.0799999999999, "end": 591.8, "text": " Oh I'm sneezing.", "tokens": [50364, 400, 570, 309, 311, 257, 13075, 300, 311, 516, 281, 312, 12187, 1854, 300, 311, 516, 281, 312, 2435, 50569, 50569, 382, 294, 9834, 294, 264, 10088, 13, 50717, 50717, 876, 286, 478, 49299, 278, 13, 51003, 51003, 407, 4195, 12577, 486, 312, 257, 8062, 295, 9834, 13, 51241, 51241, 32127, 6771, 486, 312, 257, 8141, 295, 9834, 13, 51381, 51381, 28766, 6771, 486, 312, 257, 8141, 293, 6233, 538, 297, 6771, 13, 51563, 51563, 28766, 12577, 486, 312, 257, 8062, 295, 297, 6233, 13, 51729, 51729, 639, 307, 264, 912, 382, 949, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20133250100272043, "compression_ratio": 1.9558011049723756, "no_speech_prob": 5.338131813914515e-06}, {"id": 98, "seek": 57902, "start": 591.8, "end": 596.56, "text": " So user bias will be a vector of parameters.", "tokens": [50364, 400, 570, 309, 311, 257, 13075, 300, 311, 516, 281, 312, 12187, 1854, 300, 311, 516, 281, 312, 2435, 50569, 50569, 382, 294, 9834, 294, 264, 10088, 13, 50717, 50717, 876, 286, 478, 49299, 278, 13, 51003, 51003, 407, 4195, 12577, 486, 312, 257, 8062, 295, 9834, 13, 51241, 51241, 32127, 6771, 486, 312, 257, 8141, 295, 9834, 13, 51381, 51381, 28766, 6771, 486, 312, 257, 8141, 293, 6233, 538, 297, 6771, 13, 51563, 51563, 28766, 12577, 486, 312, 257, 8062, 295, 297, 6233, 13, 51729, 51729, 639, 307, 264, 912, 382, 949, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20133250100272043, "compression_ratio": 1.9558011049723756, "no_speech_prob": 5.338131813914515e-06}, {"id": 99, "seek": 57902, "start": 596.56, "end": 599.36, "text": " User factors will be a matrix of parameters.", "tokens": [50364, 400, 570, 309, 311, 257, 13075, 300, 311, 516, 281, 312, 12187, 1854, 300, 311, 516, 281, 312, 2435, 50569, 50569, 382, 294, 9834, 294, 264, 10088, 13, 50717, 50717, 876, 286, 478, 49299, 278, 13, 51003, 51003, 407, 4195, 12577, 486, 312, 257, 8062, 295, 9834, 13, 51241, 51241, 32127, 6771, 486, 312, 257, 8141, 295, 9834, 13, 51381, 51381, 28766, 6771, 486, 312, 257, 8141, 293, 6233, 538, 297, 6771, 13, 51563, 51563, 28766, 12577, 486, 312, 257, 8062, 295, 297, 6233, 13, 51729, 51729, 639, 307, 264, 912, 382, 949, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20133250100272043, "compression_ratio": 1.9558011049723756, "no_speech_prob": 5.338131813914515e-06}, {"id": 100, "seek": 57902, "start": 599.36, "end": 603.0, "text": " Movie factors will be a matrix and movies by n factors.", "tokens": [50364, 400, 570, 309, 311, 257, 13075, 300, 311, 516, 281, 312, 12187, 1854, 300, 311, 516, 281, 312, 2435, 50569, 50569, 382, 294, 9834, 294, 264, 10088, 13, 50717, 50717, 876, 286, 478, 49299, 278, 13, 51003, 51003, 407, 4195, 12577, 486, 312, 257, 8062, 295, 9834, 13, 51241, 51241, 32127, 6771, 486, 312, 257, 8141, 295, 9834, 13, 51381, 51381, 28766, 6771, 486, 312, 257, 8141, 293, 6233, 538, 297, 6771, 13, 51563, 51563, 28766, 12577, 486, 312, 257, 8062, 295, 297, 6233, 13, 51729, 51729, 639, 307, 264, 912, 382, 949, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20133250100272043, "compression_ratio": 1.9558011049723756, "no_speech_prob": 5.338131813914515e-06}, {"id": 101, "seek": 57902, "start": 603.0, "end": 606.3199999999999, "text": " Movie bias will be a vector of n movies.", "tokens": [50364, 400, 570, 309, 311, 257, 13075, 300, 311, 516, 281, 312, 12187, 1854, 300, 311, 516, 281, 312, 2435, 50569, 50569, 382, 294, 9834, 294, 264, 10088, 13, 50717, 50717, 876, 286, 478, 49299, 278, 13, 51003, 51003, 407, 4195, 12577, 486, 312, 257, 8062, 295, 9834, 13, 51241, 51241, 32127, 6771, 486, 312, 257, 8141, 295, 9834, 13, 51381, 51381, 28766, 6771, 486, 312, 257, 8141, 293, 6233, 538, 297, 6771, 13, 51563, 51563, 28766, 12577, 486, 312, 257, 8062, 295, 297, 6233, 13, 51729, 51729, 639, 307, 264, 912, 382, 949, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20133250100272043, "compression_ratio": 1.9558011049723756, "no_speech_prob": 5.338131813914515e-06}, {"id": 102, "seek": 57902, "start": 606.3199999999999, "end": 608.74, "text": " This is the same as before.", "tokens": [50364, 400, 570, 309, 311, 257, 13075, 300, 311, 516, 281, 312, 12187, 1854, 300, 311, 516, 281, 312, 2435, 50569, 50569, 382, 294, 9834, 294, 264, 10088, 13, 50717, 50717, 876, 286, 478, 49299, 278, 13, 51003, 51003, 407, 4195, 12577, 486, 312, 257, 8062, 295, 9834, 13, 51241, 51241, 32127, 6771, 486, 312, 257, 8141, 295, 9834, 13, 51381, 51381, 28766, 6771, 486, 312, 257, 8141, 293, 6233, 538, 297, 6771, 13, 51563, 51563, 28766, 12577, 486, 312, 257, 8062, 295, 297, 6233, 13, 51729, 51729, 639, 307, 264, 912, 382, 949, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20133250100272043, "compression_ratio": 1.9558011049723756, "no_speech_prob": 5.338131813914515e-06}, {"id": 103, "seek": 60874, "start": 608.74, "end": 611.84, "text": " So now in the forward we can do exactly what we did before.", "tokens": [50364, 407, 586, 294, 264, 2128, 321, 393, 360, 2293, 437, 321, 630, 949, 13, 50519, 50519, 440, 551, 307, 562, 291, 829, 257, 40863, 1854, 257, 13075, 309, 575, 439, 264, 1900, 912, 4122, 50947, 50947, 300, 257, 40863, 575, 13, 51071, 51071, 407, 337, 1365, 321, 393, 8186, 666, 309, 13, 51369, 51369, 407, 341, 1379, 551, 307, 14800, 281, 437, 321, 632, 949, 293, 370, 300, 311, 767, 1697, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.07439128875732422, "compression_ratio": 1.6384180790960452, "no_speech_prob": 3.187554511896451e-06}, {"id": 104, "seek": 60874, "start": 611.84, "end": 620.4, "text": " The thing is when you put a tensor inside a parameter it has all the exact same features", "tokens": [50364, 407, 586, 294, 264, 2128, 321, 393, 360, 2293, 437, 321, 630, 949, 13, 50519, 50519, 440, 551, 307, 562, 291, 829, 257, 40863, 1854, 257, 13075, 309, 575, 439, 264, 1900, 912, 4122, 50947, 50947, 300, 257, 40863, 575, 13, 51071, 51071, 407, 337, 1365, 321, 393, 8186, 666, 309, 13, 51369, 51369, 407, 341, 1379, 551, 307, 14800, 281, 437, 321, 632, 949, 293, 370, 300, 311, 767, 1697, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.07439128875732422, "compression_ratio": 1.6384180790960452, "no_speech_prob": 3.187554511896451e-06}, {"id": 105, "seek": 60874, "start": 620.4, "end": 622.88, "text": " that a tensor has.", "tokens": [50364, 407, 586, 294, 264, 2128, 321, 393, 360, 2293, 437, 321, 630, 949, 13, 50519, 50519, 440, 551, 307, 562, 291, 829, 257, 40863, 1854, 257, 13075, 309, 575, 439, 264, 1900, 912, 4122, 50947, 50947, 300, 257, 40863, 575, 13, 51071, 51071, 407, 337, 1365, 321, 393, 8186, 666, 309, 13, 51369, 51369, 407, 341, 1379, 551, 307, 14800, 281, 437, 321, 632, 949, 293, 370, 300, 311, 767, 1697, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.07439128875732422, "compression_ratio": 1.6384180790960452, "no_speech_prob": 3.187554511896451e-06}, {"id": 106, "seek": 60874, "start": 622.88, "end": 628.84, "text": " So for example we can index into it.", "tokens": [50364, 407, 586, 294, 264, 2128, 321, 393, 360, 2293, 437, 321, 630, 949, 13, 50519, 50519, 440, 551, 307, 562, 291, 829, 257, 40863, 1854, 257, 13075, 309, 575, 439, 264, 1900, 912, 4122, 50947, 50947, 300, 257, 40863, 575, 13, 51071, 51071, 407, 337, 1365, 321, 393, 8186, 666, 309, 13, 51369, 51369, 407, 341, 1379, 551, 307, 14800, 281, 437, 321, 632, 949, 293, 370, 300, 311, 767, 1697, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.07439128875732422, "compression_ratio": 1.6384180790960452, "no_speech_prob": 3.187554511896451e-06}, {"id": 107, "seek": 60874, "start": 628.84, "end": 634.46, "text": " So this whole thing is identical to what we had before and so that's actually believe", "tokens": [50364, 407, 586, 294, 264, 2128, 321, 393, 360, 2293, 437, 321, 630, 949, 13, 50519, 50519, 440, 551, 307, 562, 291, 829, 257, 40863, 1854, 257, 13075, 309, 575, 439, 264, 1900, 912, 4122, 50947, 50947, 300, 257, 40863, 575, 13, 51071, 51071, 407, 337, 1365, 321, 393, 8186, 666, 309, 13, 51369, 51369, 407, 341, 1379, 551, 307, 14800, 281, 437, 321, 632, 949, 293, 370, 300, 311, 767, 1697, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.07439128875732422, "compression_ratio": 1.6384180790960452, "no_speech_prob": 3.187554511896451e-06}, {"id": 108, "seek": 63446, "start": 634.46, "end": 641.88, "text": " it or not all that's required to replicate PyTorch's embedding layer from scratch.", "tokens": [50364, 309, 420, 406, 439, 300, 311, 4739, 281, 25356, 9953, 51, 284, 339, 311, 12240, 3584, 4583, 490, 8459, 13, 50735, 50735, 407, 718, 311, 1190, 729, 293, 536, 498, 309, 1985, 13, 51017, 51017, 400, 456, 309, 307, 309, 311, 3097, 13, 51149, 51149, 407, 321, 603, 312, 1075, 281, 362, 257, 574, 562, 341, 307, 1096, 412, 337, 1365, 2316, 5893, 718, 311, 362, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.11507806777954102, "compression_ratio": 1.4311377245508983, "no_speech_prob": 7.338205136875331e-07}, {"id": 109, "seek": 63446, "start": 641.88, "end": 647.52, "text": " So let's run those and see if it works.", "tokens": [50364, 309, 420, 406, 439, 300, 311, 4739, 281, 25356, 9953, 51, 284, 339, 311, 12240, 3584, 4583, 490, 8459, 13, 50735, 50735, 407, 718, 311, 1190, 729, 293, 536, 498, 309, 1985, 13, 51017, 51017, 400, 456, 309, 307, 309, 311, 3097, 13, 51149, 51149, 407, 321, 603, 312, 1075, 281, 362, 257, 574, 562, 341, 307, 1096, 412, 337, 1365, 2316, 5893, 718, 311, 362, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.11507806777954102, "compression_ratio": 1.4311377245508983, "no_speech_prob": 7.338205136875331e-07}, {"id": 110, "seek": 63446, "start": 647.52, "end": 650.1600000000001, "text": " And there it is it's training.", "tokens": [50364, 309, 420, 406, 439, 300, 311, 4739, 281, 25356, 9953, 51, 284, 339, 311, 12240, 3584, 4583, 490, 8459, 13, 50735, 50735, 407, 718, 311, 1190, 729, 293, 536, 498, 309, 1985, 13, 51017, 51017, 400, 456, 309, 307, 309, 311, 3097, 13, 51149, 51149, 407, 321, 603, 312, 1075, 281, 362, 257, 574, 562, 341, 307, 1096, 412, 337, 1365, 2316, 5893, 718, 311, 362, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.11507806777954102, "compression_ratio": 1.4311377245508983, "no_speech_prob": 7.338205136875331e-07}, {"id": 111, "seek": 63446, "start": 650.1600000000001, "end": 659.84, "text": " So we'll be able to have a look when this is done at for example model dot let's have", "tokens": [50364, 309, 420, 406, 439, 300, 311, 4739, 281, 25356, 9953, 51, 284, 339, 311, 12240, 3584, 4583, 490, 8459, 13, 50735, 50735, 407, 718, 311, 1190, 729, 293, 536, 498, 309, 1985, 13, 51017, 51017, 400, 456, 309, 307, 309, 311, 3097, 13, 51149, 51149, 407, 321, 603, 312, 1075, 281, 362, 257, 574, 562, 341, 307, 1096, 412, 337, 1365, 2316, 5893, 718, 311, 362, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.11507806777954102, "compression_ratio": 1.4311377245508983, "no_speech_prob": 7.338205136875331e-07}, {"id": 112, "seek": 65984, "start": 659.84, "end": 669.6, "text": " a look movie bias.", "tokens": [50364, 257, 574, 3169, 12577, 13, 50852, 50852, 400, 510, 309, 307, 558, 13, 50906, 50906, 467, 311, 257, 13075, 19273, 257, 3840, 295, 3547, 300, 362, 668, 8895, 13, 51299, 51299, 400, 382, 321, 1116, 2066, 309, 311, 658, 3165, 16824, 721, 294, 570, 300, 311, 577, 867, 6233, 321, 362, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.12061622313090734, "compression_ratio": 1.3566433566433567, "no_speech_prob": 1.1726399407052668e-06}, {"id": 113, "seek": 65984, "start": 669.6, "end": 670.6800000000001, "text": " And here it is right.", "tokens": [50364, 257, 574, 3169, 12577, 13, 50852, 50852, 400, 510, 309, 307, 558, 13, 50906, 50906, 467, 311, 257, 13075, 19273, 257, 3840, 295, 3547, 300, 362, 668, 8895, 13, 51299, 51299, 400, 382, 321, 1116, 2066, 309, 311, 658, 3165, 16824, 721, 294, 570, 300, 311, 577, 867, 6233, 321, 362, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.12061622313090734, "compression_ratio": 1.3566433566433567, "no_speech_prob": 1.1726399407052668e-06}, {"id": 114, "seek": 65984, "start": 670.6800000000001, "end": 678.5400000000001, "text": " It's a parameter containing a bunch of numbers that have been trained.", "tokens": [50364, 257, 574, 3169, 12577, 13, 50852, 50852, 400, 510, 309, 307, 558, 13, 50906, 50906, 467, 311, 257, 13075, 19273, 257, 3840, 295, 3547, 300, 362, 668, 8895, 13, 51299, 51299, 400, 382, 321, 1116, 2066, 309, 311, 658, 3165, 16824, 721, 294, 570, 300, 311, 577, 867, 6233, 321, 362, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.12061622313090734, "compression_ratio": 1.3566433566433567, "no_speech_prob": 1.1726399407052668e-06}, {"id": 115, "seek": 65984, "start": 678.5400000000001, "end": 685.96, "text": " And as we'd expect it's got 1665 things in because that's how many movies we have.", "tokens": [50364, 257, 574, 3169, 12577, 13, 50852, 50852, 400, 510, 309, 307, 558, 13, 50906, 50906, 467, 311, 257, 13075, 19273, 257, 3840, 295, 3547, 300, 362, 668, 8895, 13, 51299, 51299, 400, 382, 321, 1116, 2066, 309, 311, 658, 3165, 16824, 721, 294, 570, 300, 311, 577, 867, 6233, 321, 362, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.12061622313090734, "compression_ratio": 1.3566433566433567, "no_speech_prob": 1.1726399407052668e-06}, {"id": 116, "seek": 68596, "start": 685.96, "end": 693.48, "text": " So a question from Jonah Raphael was does torch dot zeros not produce all zeros?", "tokens": [50364, 407, 257, 1168, 490, 42353, 49690, 338, 390, 775, 27822, 5893, 35193, 406, 5258, 439, 35193, 30, 50740, 50740, 1079, 27822, 5893, 35193, 775, 5258, 439, 35193, 13, 50950, 50950, 583, 1604, 257, 3170, 300, 5314, 294, 37556, 2962, 294, 1081, 264, 40863, 309, 311, 885, 6456, 51322, 51322, 281, 13, 51388, 51388], "temperature": 0.0, "avg_logprob": -0.20313760584050958, "compression_ratio": 1.5034013605442176, "no_speech_prob": 6.475939358097094e-07}, {"id": 117, "seek": 68596, "start": 693.48, "end": 697.6800000000001, "text": " Yes torch dot zeros does produce all zeros.", "tokens": [50364, 407, 257, 1168, 490, 42353, 49690, 338, 390, 775, 27822, 5893, 35193, 406, 5258, 439, 35193, 30, 50740, 50740, 1079, 27822, 5893, 35193, 775, 5258, 439, 35193, 13, 50950, 50950, 583, 1604, 257, 3170, 300, 5314, 294, 37556, 2962, 294, 1081, 264, 40863, 309, 311, 885, 6456, 51322, 51322, 281, 13, 51388, 51388], "temperature": 0.0, "avg_logprob": -0.20313760584050958, "compression_ratio": 1.5034013605442176, "no_speech_prob": 6.475939358097094e-07}, {"id": 118, "seek": 68596, "start": 697.6800000000001, "end": 705.12, "text": " But remember a method that ends in underscore changes in place the tensor it's being applied", "tokens": [50364, 407, 257, 1168, 490, 42353, 49690, 338, 390, 775, 27822, 5893, 35193, 406, 5258, 439, 35193, 30, 50740, 50740, 1079, 27822, 5893, 35193, 775, 5258, 439, 35193, 13, 50950, 50950, 583, 1604, 257, 3170, 300, 5314, 294, 37556, 2962, 294, 1081, 264, 40863, 309, 311, 885, 6456, 51322, 51322, 281, 13, 51388, 51388], "temperature": 0.0, "avg_logprob": -0.20313760584050958, "compression_ratio": 1.5034013605442176, "no_speech_prob": 6.475939358097094e-07}, {"id": 119, "seek": 68596, "start": 705.12, "end": 706.44, "text": " to.", "tokens": [50364, 407, 257, 1168, 490, 42353, 49690, 338, 390, 775, 27822, 5893, 35193, 406, 5258, 439, 35193, 30, 50740, 50740, 1079, 27822, 5893, 35193, 775, 5258, 439, 35193, 13, 50950, 50950, 583, 1604, 257, 3170, 300, 5314, 294, 37556, 2962, 294, 1081, 264, 40863, 309, 311, 885, 6456, 51322, 51322, 281, 13, 51388, 51388], "temperature": 0.0, "avg_logprob": -0.20313760584050958, "compression_ratio": 1.5034013605442176, "no_speech_prob": 6.475939358097094e-07}, {"id": 120, "seek": 70644, "start": 706.44, "end": 722.2800000000001, "text": " And so if you look up PyTorch normal underscore you'll see it fills itself with elements sampled", "tokens": [50364, 400, 370, 498, 291, 574, 493, 9953, 51, 284, 339, 2710, 37556, 291, 603, 536, 309, 22498, 2564, 365, 4959, 3247, 15551, 51156, 51156, 490, 264, 2710, 7316, 13, 51250, 51250, 407, 341, 307, 767, 42626, 341, 40863, 294, 1081, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.0935411983066135, "compression_ratio": 1.3383458646616542, "no_speech_prob": 6.475942200268037e-07}, {"id": 121, "seek": 70644, "start": 722.2800000000001, "end": 724.1600000000001, "text": " from the normal distribution.", "tokens": [50364, 400, 370, 498, 291, 574, 493, 9953, 51, 284, 339, 2710, 37556, 291, 603, 536, 309, 22498, 2564, 365, 4959, 3247, 15551, 51156, 51156, 490, 264, 2710, 7316, 13, 51250, 51250, 407, 341, 307, 767, 42626, 341, 40863, 294, 1081, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.0935411983066135, "compression_ratio": 1.3383458646616542, "no_speech_prob": 6.475942200268037e-07}, {"id": 122, "seek": 70644, "start": 724.1600000000001, "end": 730.6, "text": " So this is actually modifying this tensor in place.", "tokens": [50364, 400, 370, 498, 291, 574, 493, 9953, 51, 284, 339, 2710, 37556, 291, 603, 536, 309, 22498, 2564, 365, 4959, 3247, 15551, 51156, 51156, 490, 264, 2710, 7316, 13, 51250, 51250, 407, 341, 307, 767, 42626, 341, 40863, 294, 1081, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.0935411983066135, "compression_ratio": 1.3383458646616542, "no_speech_prob": 6.475942200268037e-07}, {"id": 123, "seek": 73060, "start": 730.6, "end": 741.0400000000001, "text": " And so that's why we end up with something which isn't just zeros.", "tokens": [50364, 400, 370, 300, 311, 983, 321, 917, 493, 365, 746, 597, 1943, 380, 445, 35193, 13, 50886, 50886, 823, 341, 307, 264, 857, 286, 1352, 534, 1019, 307, 321, 8895, 341, 2316, 457, 437, 630, 309, 360, 30, 51454, 51454, 1012, 307, 309, 516, 466, 32884, 567, 311, 516, 281, 411, 437, 3169, 30, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.16851186752319336, "compression_ratio": 1.4052287581699345, "no_speech_prob": 2.3687907741987146e-06}, {"id": 124, "seek": 73060, "start": 741.0400000000001, "end": 752.4, "text": " Now this is the bit I found really fun is we trained this model but what did it do?", "tokens": [50364, 400, 370, 300, 311, 983, 321, 917, 493, 365, 746, 597, 1943, 380, 445, 35193, 13, 50886, 50886, 823, 341, 307, 264, 857, 286, 1352, 534, 1019, 307, 321, 8895, 341, 2316, 457, 437, 630, 309, 360, 30, 51454, 51454, 1012, 307, 309, 516, 466, 32884, 567, 311, 516, 281, 411, 437, 3169, 30, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.16851186752319336, "compression_ratio": 1.4052287581699345, "no_speech_prob": 2.3687907741987146e-06}, {"id": 125, "seek": 73060, "start": 752.4, "end": 756.6800000000001, "text": " How is it going about predicting who's going to like what movie?", "tokens": [50364, 400, 370, 300, 311, 983, 321, 917, 493, 365, 746, 597, 1943, 380, 445, 35193, 13, 50886, 50886, 823, 341, 307, 264, 857, 286, 1352, 534, 1019, 307, 321, 8895, 341, 2316, 457, 437, 630, 309, 360, 30, 51454, 51454, 1012, 307, 309, 516, 466, 32884, 567, 311, 516, 281, 411, 437, 3169, 30, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.16851186752319336, "compression_ratio": 1.4052287581699345, "no_speech_prob": 2.3687907741987146e-06}, {"id": 126, "seek": 75668, "start": 756.68, "end": 765.28, "text": " Well one of the things that's happened is we've created this movie bias parameter which", "tokens": [50364, 1042, 472, 295, 264, 721, 300, 311, 2011, 307, 321, 600, 2942, 341, 3169, 12577, 13075, 597, 50794, 50794, 575, 668, 26941, 13, 50964, 50964, 400, 437, 321, 727, 360, 307, 321, 727, 915, 597, 3169, 48212, 362, 264, 6343, 3547, 510, 293, 51530, 51530, 264, 12437, 3547, 13, 51580, 51580, 407, 286, 519, 341, 307, 516, 281, 722, 12437, 293, 550, 321, 393, 4482, 484, 321, 393, 574, 1854, 527, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.11195562998453776, "compression_ratio": 1.5885416666666667, "no_speech_prob": 1.9947187865909655e-06}, {"id": 127, "seek": 75668, "start": 765.28, "end": 768.68, "text": " has been optimized.", "tokens": [50364, 1042, 472, 295, 264, 721, 300, 311, 2011, 307, 321, 600, 2942, 341, 3169, 12577, 13075, 597, 50794, 50794, 575, 668, 26941, 13, 50964, 50964, 400, 437, 321, 727, 360, 307, 321, 727, 915, 597, 3169, 48212, 362, 264, 6343, 3547, 510, 293, 51530, 51530, 264, 12437, 3547, 13, 51580, 51580, 407, 286, 519, 341, 307, 516, 281, 722, 12437, 293, 550, 321, 393, 4482, 484, 321, 393, 574, 1854, 527, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.11195562998453776, "compression_ratio": 1.5885416666666667, "no_speech_prob": 1.9947187865909655e-06}, {"id": 128, "seek": 75668, "start": 768.68, "end": 780.0, "text": " And what we could do is we could find which movie IDs have the highest numbers here and", "tokens": [50364, 1042, 472, 295, 264, 721, 300, 311, 2011, 307, 321, 600, 2942, 341, 3169, 12577, 13075, 597, 50794, 50794, 575, 668, 26941, 13, 50964, 50964, 400, 437, 321, 727, 360, 307, 321, 727, 915, 597, 3169, 48212, 362, 264, 6343, 3547, 510, 293, 51530, 51530, 264, 12437, 3547, 13, 51580, 51580, 407, 286, 519, 341, 307, 516, 281, 722, 12437, 293, 550, 321, 393, 4482, 484, 321, 393, 574, 1854, 527, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.11195562998453776, "compression_ratio": 1.5885416666666667, "no_speech_prob": 1.9947187865909655e-06}, {"id": 129, "seek": 75668, "start": 780.0, "end": 781.0, "text": " the lowest numbers.", "tokens": [50364, 1042, 472, 295, 264, 721, 300, 311, 2011, 307, 321, 600, 2942, 341, 3169, 12577, 13075, 597, 50794, 50794, 575, 668, 26941, 13, 50964, 50964, 400, 437, 321, 727, 360, 307, 321, 727, 915, 597, 3169, 48212, 362, 264, 6343, 3547, 510, 293, 51530, 51530, 264, 12437, 3547, 13, 51580, 51580, 407, 286, 519, 341, 307, 516, 281, 722, 12437, 293, 550, 321, 393, 4482, 484, 321, 393, 574, 1854, 527, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.11195562998453776, "compression_ratio": 1.5885416666666667, "no_speech_prob": 1.9947187865909655e-06}, {"id": 130, "seek": 75668, "start": 781.0, "end": 784.7199999999999, "text": " So I think this is going to start lowest and then we can print out we can look inside our", "tokens": [50364, 1042, 472, 295, 264, 721, 300, 311, 2011, 307, 321, 600, 2942, 341, 3169, 12577, 13075, 597, 50794, 50794, 575, 668, 26941, 13, 50964, 50964, 400, 437, 321, 727, 360, 307, 321, 727, 915, 597, 3169, 48212, 362, 264, 6343, 3547, 510, 293, 51530, 51530, 264, 12437, 3547, 13, 51580, 51580, 407, 286, 519, 341, 307, 516, 281, 722, 12437, 293, 550, 321, 393, 4482, 484, 321, 393, 574, 1854, 527, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.11195562998453776, "compression_ratio": 1.5885416666666667, "no_speech_prob": 1.9947187865909655e-06}, {"id": 131, "seek": 78472, "start": 784.72, "end": 797.8000000000001, "text": " data loaders and grab the names of those movies for each of those five lowest numbers.", "tokens": [50364, 1412, 3677, 433, 293, 4444, 264, 5288, 295, 729, 6233, 337, 1184, 295, 729, 1732, 12437, 3547, 13, 51018, 51018, 400, 437, 311, 2011, 510, 30, 51140, 51140, 1042, 321, 393, 536, 19511, 4124, 300, 309, 575, 13567, 484, 512, 1238, 36531, 6233, 13, 51366, 51366, 400, 983, 307, 300, 30, 51416, 51416, 1042, 300, 311, 570, 562, 309, 775, 300, 8141, 1674, 300, 321, 1866, 294, 264, 19060, 27733, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.08830850188796585, "compression_ratio": 1.5538461538461539, "no_speech_prob": 4.2892902456515e-06}, {"id": 132, "seek": 78472, "start": 797.8000000000001, "end": 800.24, "text": " And what's happened here?", "tokens": [50364, 1412, 3677, 433, 293, 4444, 264, 5288, 295, 729, 6233, 337, 1184, 295, 729, 1732, 12437, 3547, 13, 51018, 51018, 400, 437, 311, 2011, 510, 30, 51140, 51140, 1042, 321, 393, 536, 19511, 4124, 300, 309, 575, 13567, 484, 512, 1238, 36531, 6233, 13, 51366, 51366, 400, 983, 307, 300, 30, 51416, 51416, 1042, 300, 311, 570, 562, 309, 775, 300, 8141, 1674, 300, 321, 1866, 294, 264, 19060, 27733, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.08830850188796585, "compression_ratio": 1.5538461538461539, "no_speech_prob": 4.2892902456515e-06}, {"id": 133, "seek": 78472, "start": 800.24, "end": 804.76, "text": " Well we can see broadly speaking that it has printed out some pretty crappy movies.", "tokens": [50364, 1412, 3677, 433, 293, 4444, 264, 5288, 295, 729, 6233, 337, 1184, 295, 729, 1732, 12437, 3547, 13, 51018, 51018, 400, 437, 311, 2011, 510, 30, 51140, 51140, 1042, 321, 393, 536, 19511, 4124, 300, 309, 575, 13567, 484, 512, 1238, 36531, 6233, 13, 51366, 51366, 400, 983, 307, 300, 30, 51416, 51416, 1042, 300, 311, 570, 562, 309, 775, 300, 8141, 1674, 300, 321, 1866, 294, 264, 19060, 27733, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.08830850188796585, "compression_ratio": 1.5538461538461539, "no_speech_prob": 4.2892902456515e-06}, {"id": 134, "seek": 78472, "start": 804.76, "end": 805.76, "text": " And why is that?", "tokens": [50364, 1412, 3677, 433, 293, 4444, 264, 5288, 295, 729, 6233, 337, 1184, 295, 729, 1732, 12437, 3547, 13, 51018, 51018, 400, 437, 311, 2011, 510, 30, 51140, 51140, 1042, 321, 393, 536, 19511, 4124, 300, 309, 575, 13567, 484, 512, 1238, 36531, 6233, 13, 51366, 51366, 400, 983, 307, 300, 30, 51416, 51416, 1042, 300, 311, 570, 562, 309, 775, 300, 8141, 1674, 300, 321, 1866, 294, 264, 19060, 27733, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.08830850188796585, "compression_ratio": 1.5538461538461539, "no_speech_prob": 4.2892902456515e-06}, {"id": 135, "seek": 78472, "start": 805.76, "end": 812.9200000000001, "text": " Well that's because when it does that matrix product that we saw in the Excel spreadsheet", "tokens": [50364, 1412, 3677, 433, 293, 4444, 264, 5288, 295, 729, 6233, 337, 1184, 295, 729, 1732, 12437, 3547, 13, 51018, 51018, 400, 437, 311, 2011, 510, 30, 51140, 51140, 1042, 321, 393, 536, 19511, 4124, 300, 309, 575, 13567, 484, 512, 1238, 36531, 6233, 13, 51366, 51366, 400, 983, 307, 300, 30, 51416, 51416, 1042, 300, 311, 570, 562, 309, 775, 300, 8141, 1674, 300, 321, 1866, 294, 264, 19060, 27733, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.08830850188796585, "compression_ratio": 1.5538461538461539, "no_speech_prob": 4.2892902456515e-06}, {"id": 136, "seek": 81292, "start": 812.92, "end": 818.3199999999999, "text": " last week it's trying to figure out who's going to like what movie based on previous", "tokens": [50364, 1036, 1243, 309, 311, 1382, 281, 2573, 484, 567, 311, 516, 281, 411, 437, 3169, 2361, 322, 3894, 50634, 50634, 6233, 561, 362, 4626, 420, 406, 13, 50810, 50810, 400, 550, 309, 10860, 3169, 12577, 597, 393, 312, 3353, 420, 3671, 13, 50982, 50982, 663, 311, 257, 819, 1230, 337, 1184, 3169, 13, 51126, 51126, 407, 294, 1668, 281, 360, 257, 665, 1691, 295, 32884, 1968, 291, 434, 516, 281, 411, 257, 3169, 420, 406, 51318, 51318, 309, 575, 281, 458, 597, 6233, 366, 12426, 13, 51428, 51428, 400, 370, 264, 12426, 6233, 366, 516, 281, 917, 493, 365, 257, 588, 2295, 3169, 12577, 13075, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.07896456284956499, "compression_ratio": 1.7479674796747968, "no_speech_prob": 2.123367721651448e-06}, {"id": 137, "seek": 81292, "start": 818.3199999999999, "end": 821.8399999999999, "text": " movies people have enjoyed or not.", "tokens": [50364, 1036, 1243, 309, 311, 1382, 281, 2573, 484, 567, 311, 516, 281, 411, 437, 3169, 2361, 322, 3894, 50634, 50634, 6233, 561, 362, 4626, 420, 406, 13, 50810, 50810, 400, 550, 309, 10860, 3169, 12577, 597, 393, 312, 3353, 420, 3671, 13, 50982, 50982, 663, 311, 257, 819, 1230, 337, 1184, 3169, 13, 51126, 51126, 407, 294, 1668, 281, 360, 257, 665, 1691, 295, 32884, 1968, 291, 434, 516, 281, 411, 257, 3169, 420, 406, 51318, 51318, 309, 575, 281, 458, 597, 6233, 366, 12426, 13, 51428, 51428, 400, 370, 264, 12426, 6233, 366, 516, 281, 917, 493, 365, 257, 588, 2295, 3169, 12577, 13075, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.07896456284956499, "compression_ratio": 1.7479674796747968, "no_speech_prob": 2.123367721651448e-06}, {"id": 138, "seek": 81292, "start": 821.8399999999999, "end": 825.28, "text": " And then it adds movie bias which can be positive or negative.", "tokens": [50364, 1036, 1243, 309, 311, 1382, 281, 2573, 484, 567, 311, 516, 281, 411, 437, 3169, 2361, 322, 3894, 50634, 50634, 6233, 561, 362, 4626, 420, 406, 13, 50810, 50810, 400, 550, 309, 10860, 3169, 12577, 597, 393, 312, 3353, 420, 3671, 13, 50982, 50982, 663, 311, 257, 819, 1230, 337, 1184, 3169, 13, 51126, 51126, 407, 294, 1668, 281, 360, 257, 665, 1691, 295, 32884, 1968, 291, 434, 516, 281, 411, 257, 3169, 420, 406, 51318, 51318, 309, 575, 281, 458, 597, 6233, 366, 12426, 13, 51428, 51428, 400, 370, 264, 12426, 6233, 366, 516, 281, 917, 493, 365, 257, 588, 2295, 3169, 12577, 13075, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.07896456284956499, "compression_ratio": 1.7479674796747968, "no_speech_prob": 2.123367721651448e-06}, {"id": 139, "seek": 81292, "start": 825.28, "end": 828.16, "text": " That's a different number for each movie.", "tokens": [50364, 1036, 1243, 309, 311, 1382, 281, 2573, 484, 567, 311, 516, 281, 411, 437, 3169, 2361, 322, 3894, 50634, 50634, 6233, 561, 362, 4626, 420, 406, 13, 50810, 50810, 400, 550, 309, 10860, 3169, 12577, 597, 393, 312, 3353, 420, 3671, 13, 50982, 50982, 663, 311, 257, 819, 1230, 337, 1184, 3169, 13, 51126, 51126, 407, 294, 1668, 281, 360, 257, 665, 1691, 295, 32884, 1968, 291, 434, 516, 281, 411, 257, 3169, 420, 406, 51318, 51318, 309, 575, 281, 458, 597, 6233, 366, 12426, 13, 51428, 51428, 400, 370, 264, 12426, 6233, 366, 516, 281, 917, 493, 365, 257, 588, 2295, 3169, 12577, 13075, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.07896456284956499, "compression_ratio": 1.7479674796747968, "no_speech_prob": 2.123367721651448e-06}, {"id": 140, "seek": 81292, "start": 828.16, "end": 832.0, "text": " So in order to do a good job of predicting whether you're going to like a movie or not", "tokens": [50364, 1036, 1243, 309, 311, 1382, 281, 2573, 484, 567, 311, 516, 281, 411, 437, 3169, 2361, 322, 3894, 50634, 50634, 6233, 561, 362, 4626, 420, 406, 13, 50810, 50810, 400, 550, 309, 10860, 3169, 12577, 597, 393, 312, 3353, 420, 3671, 13, 50982, 50982, 663, 311, 257, 819, 1230, 337, 1184, 3169, 13, 51126, 51126, 407, 294, 1668, 281, 360, 257, 665, 1691, 295, 32884, 1968, 291, 434, 516, 281, 411, 257, 3169, 420, 406, 51318, 51318, 309, 575, 281, 458, 597, 6233, 366, 12426, 13, 51428, 51428, 400, 370, 264, 12426, 6233, 366, 516, 281, 917, 493, 365, 257, 588, 2295, 3169, 12577, 13075, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.07896456284956499, "compression_ratio": 1.7479674796747968, "no_speech_prob": 2.123367721651448e-06}, {"id": 141, "seek": 81292, "start": 832.0, "end": 834.1999999999999, "text": " it has to know which movies are crap.", "tokens": [50364, 1036, 1243, 309, 311, 1382, 281, 2573, 484, 567, 311, 516, 281, 411, 437, 3169, 2361, 322, 3894, 50634, 50634, 6233, 561, 362, 4626, 420, 406, 13, 50810, 50810, 400, 550, 309, 10860, 3169, 12577, 597, 393, 312, 3353, 420, 3671, 13, 50982, 50982, 663, 311, 257, 819, 1230, 337, 1184, 3169, 13, 51126, 51126, 407, 294, 1668, 281, 360, 257, 665, 1691, 295, 32884, 1968, 291, 434, 516, 281, 411, 257, 3169, 420, 406, 51318, 51318, 309, 575, 281, 458, 597, 6233, 366, 12426, 13, 51428, 51428, 400, 370, 264, 12426, 6233, 366, 516, 281, 917, 493, 365, 257, 588, 2295, 3169, 12577, 13075, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.07896456284956499, "compression_ratio": 1.7479674796747968, "no_speech_prob": 2.123367721651448e-06}, {"id": 142, "seek": 81292, "start": 834.1999999999999, "end": 841.9599999999999, "text": " And so the crap movies are going to end up with a very low movie bias parameter.", "tokens": [50364, 1036, 1243, 309, 311, 1382, 281, 2573, 484, 567, 311, 516, 281, 411, 437, 3169, 2361, 322, 3894, 50634, 50634, 6233, 561, 362, 4626, 420, 406, 13, 50810, 50810, 400, 550, 309, 10860, 3169, 12577, 597, 393, 312, 3353, 420, 3671, 13, 50982, 50982, 663, 311, 257, 819, 1230, 337, 1184, 3169, 13, 51126, 51126, 407, 294, 1668, 281, 360, 257, 665, 1691, 295, 32884, 1968, 291, 434, 516, 281, 411, 257, 3169, 420, 406, 51318, 51318, 309, 575, 281, 458, 597, 6233, 366, 12426, 13, 51428, 51428, 400, 370, 264, 12426, 6233, 366, 516, 281, 917, 493, 365, 257, 588, 2295, 3169, 12577, 13075, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.07896456284956499, "compression_ratio": 1.7479674796747968, "no_speech_prob": 2.123367721651448e-06}, {"id": 143, "seek": 84196, "start": 841.96, "end": 849.32, "text": " And so we can actually find out which movies to people, not only which movies to people", "tokens": [50364, 400, 370, 321, 393, 767, 915, 484, 597, 6233, 281, 561, 11, 406, 787, 597, 6233, 281, 561, 50732, 50732, 534, 406, 411, 11, 457, 597, 6233, 281, 561, 411, 1570, 813, 472, 576, 2066, 2212, 264, 51102, 51102, 733, 295, 3169, 300, 309, 307, 13, 51242, 51242, 407, 2369, 895, 76, 968, 2458, 568, 337, 1365, 11, 406, 787, 7970, 307, 309, 257, 36531, 3169, 11, 457, 2361, 322, 264, 733, 51661, 51661], "temperature": 0.0, "avg_logprob": -0.11096690830431487, "compression_ratio": 1.7455621301775148, "no_speech_prob": 9.276333230445744e-07}, {"id": 144, "seek": 84196, "start": 849.32, "end": 856.72, "text": " really not like, but which movies to people like less than one would expect given the", "tokens": [50364, 400, 370, 321, 393, 767, 915, 484, 597, 6233, 281, 561, 11, 406, 787, 597, 6233, 281, 561, 50732, 50732, 534, 406, 411, 11, 457, 597, 6233, 281, 561, 411, 1570, 813, 472, 576, 2066, 2212, 264, 51102, 51102, 733, 295, 3169, 300, 309, 307, 13, 51242, 51242, 407, 2369, 895, 76, 968, 2458, 568, 337, 1365, 11, 406, 787, 7970, 307, 309, 257, 36531, 3169, 11, 457, 2361, 322, 264, 733, 51661, 51661], "temperature": 0.0, "avg_logprob": -0.11096690830431487, "compression_ratio": 1.7455621301775148, "no_speech_prob": 9.276333230445744e-07}, {"id": 145, "seek": 84196, "start": 856.72, "end": 859.52, "text": " kind of movie that it is.", "tokens": [50364, 400, 370, 321, 393, 767, 915, 484, 597, 6233, 281, 561, 11, 406, 787, 597, 6233, 281, 561, 50732, 50732, 534, 406, 411, 11, 457, 597, 6233, 281, 561, 411, 1570, 813, 472, 576, 2066, 2212, 264, 51102, 51102, 733, 295, 3169, 300, 309, 307, 13, 51242, 51242, 407, 2369, 895, 76, 968, 2458, 568, 337, 1365, 11, 406, 787, 7970, 307, 309, 257, 36531, 3169, 11, 457, 2361, 322, 264, 733, 51661, 51661], "temperature": 0.0, "avg_logprob": -0.11096690830431487, "compression_ratio": 1.7455621301775148, "no_speech_prob": 9.276333230445744e-07}, {"id": 146, "seek": 84196, "start": 859.52, "end": 867.9000000000001, "text": " So Lawnmower Man 2 for example, not only apparently is it a crappy movie, but based on the kind", "tokens": [50364, 400, 370, 321, 393, 767, 915, 484, 597, 6233, 281, 561, 11, 406, 787, 597, 6233, 281, 561, 50732, 50732, 534, 406, 411, 11, 457, 597, 6233, 281, 561, 411, 1570, 813, 472, 576, 2066, 2212, 264, 51102, 51102, 733, 295, 3169, 300, 309, 307, 13, 51242, 51242, 407, 2369, 895, 76, 968, 2458, 568, 337, 1365, 11, 406, 787, 7970, 307, 309, 257, 36531, 3169, 11, 457, 2361, 322, 264, 733, 51661, 51661], "temperature": 0.0, "avg_logprob": -0.11096690830431487, "compression_ratio": 1.7455621301775148, "no_speech_prob": 9.276333230445744e-07}, {"id": 147, "seek": 86790, "start": 867.9, "end": 875.1999999999999, "text": " of movie it is, you know it's kind of like a high tech pop kind of sci-fi movie, people", "tokens": [50364, 295, 3169, 309, 307, 11, 291, 458, 309, 311, 733, 295, 411, 257, 1090, 7553, 1665, 733, 295, 2180, 12, 13325, 3169, 11, 561, 50729, 50729, 567, 411, 729, 3685, 295, 6233, 920, 500, 380, 411, 2369, 895, 76, 968, 2458, 568, 13, 50956, 50956, 407, 300, 311, 437, 341, 307, 3620, 13, 51033, 51033, 407, 309, 311, 733, 295, 1481, 300, 321, 393, 411, 764, 257, 2316, 406, 445, 281, 6069, 721, 457, 281, 51240, 51240, 1223, 721, 466, 264, 1412, 13, 51365, 51365, 407, 498, 321, 1333, 538, 40182, 309, 603, 976, 505, 264, 1900, 6182, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.08573501549878167, "compression_ratio": 1.6396396396396395, "no_speech_prob": 1.4144712849883945e-06}, {"id": 148, "seek": 86790, "start": 875.1999999999999, "end": 879.74, "text": " who like those kinds of movies still don't like Lawnmower Man 2.", "tokens": [50364, 295, 3169, 309, 307, 11, 291, 458, 309, 311, 733, 295, 411, 257, 1090, 7553, 1665, 733, 295, 2180, 12, 13325, 3169, 11, 561, 50729, 50729, 567, 411, 729, 3685, 295, 6233, 920, 500, 380, 411, 2369, 895, 76, 968, 2458, 568, 13, 50956, 50956, 407, 300, 311, 437, 341, 307, 3620, 13, 51033, 51033, 407, 309, 311, 733, 295, 1481, 300, 321, 393, 411, 764, 257, 2316, 406, 445, 281, 6069, 721, 457, 281, 51240, 51240, 1223, 721, 466, 264, 1412, 13, 51365, 51365, 407, 498, 321, 1333, 538, 40182, 309, 603, 976, 505, 264, 1900, 6182, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.08573501549878167, "compression_ratio": 1.6396396396396395, "no_speech_prob": 1.4144712849883945e-06}, {"id": 149, "seek": 86790, "start": 879.74, "end": 881.28, "text": " So that's what this is meaning.", "tokens": [50364, 295, 3169, 309, 307, 11, 291, 458, 309, 311, 733, 295, 411, 257, 1090, 7553, 1665, 733, 295, 2180, 12, 13325, 3169, 11, 561, 50729, 50729, 567, 411, 729, 3685, 295, 6233, 920, 500, 380, 411, 2369, 895, 76, 968, 2458, 568, 13, 50956, 50956, 407, 300, 311, 437, 341, 307, 3620, 13, 51033, 51033, 407, 309, 311, 733, 295, 1481, 300, 321, 393, 411, 764, 257, 2316, 406, 445, 281, 6069, 721, 457, 281, 51240, 51240, 1223, 721, 466, 264, 1412, 13, 51365, 51365, 407, 498, 321, 1333, 538, 40182, 309, 603, 976, 505, 264, 1900, 6182, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.08573501549878167, "compression_ratio": 1.6396396396396395, "no_speech_prob": 1.4144712849883945e-06}, {"id": 150, "seek": 86790, "start": 881.28, "end": 885.42, "text": " So it's kind of nice that we can like use a model not just to predict things but to", "tokens": [50364, 295, 3169, 309, 307, 11, 291, 458, 309, 311, 733, 295, 411, 257, 1090, 7553, 1665, 733, 295, 2180, 12, 13325, 3169, 11, 561, 50729, 50729, 567, 411, 729, 3685, 295, 6233, 920, 500, 380, 411, 2369, 895, 76, 968, 2458, 568, 13, 50956, 50956, 407, 300, 311, 437, 341, 307, 3620, 13, 51033, 51033, 407, 309, 311, 733, 295, 1481, 300, 321, 393, 411, 764, 257, 2316, 406, 445, 281, 6069, 721, 457, 281, 51240, 51240, 1223, 721, 466, 264, 1412, 13, 51365, 51365, 407, 498, 321, 1333, 538, 40182, 309, 603, 976, 505, 264, 1900, 6182, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.08573501549878167, "compression_ratio": 1.6396396396396395, "no_speech_prob": 1.4144712849883945e-06}, {"id": 151, "seek": 86790, "start": 885.42, "end": 887.92, "text": " understand things about the data.", "tokens": [50364, 295, 3169, 309, 307, 11, 291, 458, 309, 311, 733, 295, 411, 257, 1090, 7553, 1665, 733, 295, 2180, 12, 13325, 3169, 11, 561, 50729, 50729, 567, 411, 729, 3685, 295, 6233, 920, 500, 380, 411, 2369, 895, 76, 968, 2458, 568, 13, 50956, 50956, 407, 300, 311, 437, 341, 307, 3620, 13, 51033, 51033, 407, 309, 311, 733, 295, 1481, 300, 321, 393, 411, 764, 257, 2316, 406, 445, 281, 6069, 721, 457, 281, 51240, 51240, 1223, 721, 466, 264, 1412, 13, 51365, 51365, 407, 498, 321, 1333, 538, 40182, 309, 603, 976, 505, 264, 1900, 6182, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.08573501549878167, "compression_ratio": 1.6396396396396395, "no_speech_prob": 1.4144712849883945e-06}, {"id": 152, "seek": 86790, "start": 887.92, "end": 893.52, "text": " So if we sort by descending it'll give us the exact opposite.", "tokens": [50364, 295, 3169, 309, 307, 11, 291, 458, 309, 311, 733, 295, 411, 257, 1090, 7553, 1665, 733, 295, 2180, 12, 13325, 3169, 11, 561, 50729, 50729, 567, 411, 729, 3685, 295, 6233, 920, 500, 380, 411, 2369, 895, 76, 968, 2458, 568, 13, 50956, 50956, 407, 300, 311, 437, 341, 307, 3620, 13, 51033, 51033, 407, 309, 311, 733, 295, 1481, 300, 321, 393, 411, 764, 257, 2316, 406, 445, 281, 6069, 721, 457, 281, 51240, 51240, 1223, 721, 466, 264, 1412, 13, 51365, 51365, 407, 498, 321, 1333, 538, 40182, 309, 603, 976, 505, 264, 1900, 6182, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.08573501549878167, "compression_ratio": 1.6396396396396395, "no_speech_prob": 1.4144712849883945e-06}, {"id": 153, "seek": 89352, "start": 893.52, "end": 899.84, "text": " So here are movies that people enjoy even when they don't normally enjoy that kind of", "tokens": [50364, 407, 510, 366, 6233, 300, 561, 2103, 754, 562, 436, 500, 380, 5646, 2103, 300, 733, 295, 50680, 50680, 3169, 13, 50730, 50730, 407, 337, 1365, 9855, 11701, 1078, 831, 11, 7230, 733, 295, 2007, 39359, 25571, 3169, 365, 264, 21286, 414, 51072, 51072, 14690, 45461, 384, 13, 51210, 51210, 2754, 498, 291, 500, 380, 534, 411, 2007, 39359, 25571, 6233, 291, 1062, 411, 341, 472, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.13060454247703016, "compression_ratio": 1.5681818181818181, "no_speech_prob": 8.186333388948697e-07}, {"id": 154, "seek": 89352, "start": 899.84, "end": 900.84, "text": " movie.", "tokens": [50364, 407, 510, 366, 6233, 300, 561, 2103, 754, 562, 436, 500, 380, 5646, 2103, 300, 733, 295, 50680, 50680, 3169, 13, 50730, 50730, 407, 337, 1365, 9855, 11701, 1078, 831, 11, 7230, 733, 295, 2007, 39359, 25571, 3169, 365, 264, 21286, 414, 51072, 51072, 14690, 45461, 384, 13, 51210, 51210, 2754, 498, 291, 500, 380, 534, 411, 2007, 39359, 25571, 6233, 291, 1062, 411, 341, 472, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.13060454247703016, "compression_ratio": 1.5681818181818181, "no_speech_prob": 8.186333388948697e-07}, {"id": 155, "seek": 89352, "start": 900.84, "end": 907.68, "text": " So for example LA Confidential, classic kind of film noir detective movie with the Aussie", "tokens": [50364, 407, 510, 366, 6233, 300, 561, 2103, 754, 562, 436, 500, 380, 5646, 2103, 300, 733, 295, 50680, 50680, 3169, 13, 50730, 50730, 407, 337, 1365, 9855, 11701, 1078, 831, 11, 7230, 733, 295, 2007, 39359, 25571, 3169, 365, 264, 21286, 414, 51072, 51072, 14690, 45461, 384, 13, 51210, 51210, 2754, 498, 291, 500, 380, 534, 411, 2007, 39359, 25571, 6233, 291, 1062, 411, 341, 472, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.13060454247703016, "compression_ratio": 1.5681818181818181, "no_speech_prob": 8.186333388948697e-07}, {"id": 156, "seek": 89352, "start": 907.68, "end": 910.4399999999999, "text": " Guy Pearce.", "tokens": [50364, 407, 510, 366, 6233, 300, 561, 2103, 754, 562, 436, 500, 380, 5646, 2103, 300, 733, 295, 50680, 50680, 3169, 13, 50730, 50730, 407, 337, 1365, 9855, 11701, 1078, 831, 11, 7230, 733, 295, 2007, 39359, 25571, 3169, 365, 264, 21286, 414, 51072, 51072, 14690, 45461, 384, 13, 51210, 51210, 2754, 498, 291, 500, 380, 534, 411, 2007, 39359, 25571, 6233, 291, 1062, 411, 341, 472, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.13060454247703016, "compression_ratio": 1.5681818181818181, "no_speech_prob": 8.186333388948697e-07}, {"id": 157, "seek": 89352, "start": 910.4399999999999, "end": 918.68, "text": " Even if you don't really like film noir detective movies you might like this one.", "tokens": [50364, 407, 510, 366, 6233, 300, 561, 2103, 754, 562, 436, 500, 380, 5646, 2103, 300, 733, 295, 50680, 50680, 3169, 13, 50730, 50730, 407, 337, 1365, 9855, 11701, 1078, 831, 11, 7230, 733, 295, 2007, 39359, 25571, 3169, 365, 264, 21286, 414, 51072, 51072, 14690, 45461, 384, 13, 51210, 51210, 2754, 498, 291, 500, 380, 534, 411, 2007, 39359, 25571, 6233, 291, 1062, 411, 341, 472, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.13060454247703016, "compression_ratio": 1.5681818181818181, "no_speech_prob": 8.186333388948697e-07}, {"id": 158, "seek": 91868, "start": 918.68, "end": 925.52, "text": " You know Silence of the Lambs, classic kind of I guess you'd say like horror kind of,", "tokens": [50364, 509, 458, 34570, 295, 264, 18825, 929, 11, 7230, 733, 295, 286, 2041, 291, 1116, 584, 411, 11501, 733, 295, 11, 50706, 50706, 406, 11501, 307, 309, 11, 291, 458, 47803, 3169, 13, 50839, 50839, 2754, 561, 567, 500, 380, 5646, 411, 733, 295, 17436, 13364, 47803, 6233, 3928, 281, 411, 51008, 51008, 341, 472, 13, 51278, 51278, 823, 264, 661, 551, 321, 393, 360, 307, 406, 445, 574, 412, 437, 311, 2737, 294, 264, 12577, 13, 51502, 51502, 876, 293, 538, 264, 636, 321, 727, 360, 264, 912, 551, 365, 5022, 293, 915, 484, 411, 597, 4195, 445, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1743428683975368, "compression_ratio": 1.6596638655462186, "no_speech_prob": 1.2878878123956383e-06}, {"id": 159, "seek": 91868, "start": 925.52, "end": 928.18, "text": " not horror is it, you know suspense movie.", "tokens": [50364, 509, 458, 34570, 295, 264, 18825, 929, 11, 7230, 733, 295, 286, 2041, 291, 1116, 584, 411, 11501, 733, 295, 11, 50706, 50706, 406, 11501, 307, 309, 11, 291, 458, 47803, 3169, 13, 50839, 50839, 2754, 561, 567, 500, 380, 5646, 411, 733, 295, 17436, 13364, 47803, 6233, 3928, 281, 411, 51008, 51008, 341, 472, 13, 51278, 51278, 823, 264, 661, 551, 321, 393, 360, 307, 406, 445, 574, 412, 437, 311, 2737, 294, 264, 12577, 13, 51502, 51502, 876, 293, 538, 264, 636, 321, 727, 360, 264, 912, 551, 365, 5022, 293, 915, 484, 411, 597, 4195, 445, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1743428683975368, "compression_ratio": 1.6596638655462186, "no_speech_prob": 1.2878878123956383e-06}, {"id": 160, "seek": 91868, "start": 928.18, "end": 931.56, "text": " Even people who don't normally like kind of serial killer suspense movies tend to like", "tokens": [50364, 509, 458, 34570, 295, 264, 18825, 929, 11, 7230, 733, 295, 286, 2041, 291, 1116, 584, 411, 11501, 733, 295, 11, 50706, 50706, 406, 11501, 307, 309, 11, 291, 458, 47803, 3169, 13, 50839, 50839, 2754, 561, 567, 500, 380, 5646, 411, 733, 295, 17436, 13364, 47803, 6233, 3928, 281, 411, 51008, 51008, 341, 472, 13, 51278, 51278, 823, 264, 661, 551, 321, 393, 360, 307, 406, 445, 574, 412, 437, 311, 2737, 294, 264, 12577, 13, 51502, 51502, 876, 293, 538, 264, 636, 321, 727, 360, 264, 912, 551, 365, 5022, 293, 915, 484, 411, 597, 4195, 445, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1743428683975368, "compression_ratio": 1.6596638655462186, "no_speech_prob": 1.2878878123956383e-06}, {"id": 161, "seek": 91868, "start": 931.56, "end": 936.9599999999999, "text": " this one.", "tokens": [50364, 509, 458, 34570, 295, 264, 18825, 929, 11, 7230, 733, 295, 286, 2041, 291, 1116, 584, 411, 11501, 733, 295, 11, 50706, 50706, 406, 11501, 307, 309, 11, 291, 458, 47803, 3169, 13, 50839, 50839, 2754, 561, 567, 500, 380, 5646, 411, 733, 295, 17436, 13364, 47803, 6233, 3928, 281, 411, 51008, 51008, 341, 472, 13, 51278, 51278, 823, 264, 661, 551, 321, 393, 360, 307, 406, 445, 574, 412, 437, 311, 2737, 294, 264, 12577, 13, 51502, 51502, 876, 293, 538, 264, 636, 321, 727, 360, 264, 912, 551, 365, 5022, 293, 915, 484, 411, 597, 4195, 445, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1743428683975368, "compression_ratio": 1.6596638655462186, "no_speech_prob": 1.2878878123956383e-06}, {"id": 162, "seek": 91868, "start": 936.9599999999999, "end": 941.4399999999999, "text": " Now the other thing we can do is not just look at what's happening in the bias.", "tokens": [50364, 509, 458, 34570, 295, 264, 18825, 929, 11, 7230, 733, 295, 286, 2041, 291, 1116, 584, 411, 11501, 733, 295, 11, 50706, 50706, 406, 11501, 307, 309, 11, 291, 458, 47803, 3169, 13, 50839, 50839, 2754, 561, 567, 500, 380, 5646, 411, 733, 295, 17436, 13364, 47803, 6233, 3928, 281, 411, 51008, 51008, 341, 472, 13, 51278, 51278, 823, 264, 661, 551, 321, 393, 360, 307, 406, 445, 574, 412, 437, 311, 2737, 294, 264, 12577, 13, 51502, 51502, 876, 293, 538, 264, 636, 321, 727, 360, 264, 912, 551, 365, 5022, 293, 915, 484, 411, 597, 4195, 445, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1743428683975368, "compression_ratio": 1.6596638655462186, "no_speech_prob": 1.2878878123956383e-06}, {"id": 163, "seek": 91868, "start": 941.4399999999999, "end": 946.1999999999999, "text": " Oh and by the way we could do the same thing with users and find out like which user just", "tokens": [50364, 509, 458, 34570, 295, 264, 18825, 929, 11, 7230, 733, 295, 286, 2041, 291, 1116, 584, 411, 11501, 733, 295, 11, 50706, 50706, 406, 11501, 307, 309, 11, 291, 458, 47803, 3169, 13, 50839, 50839, 2754, 561, 567, 500, 380, 5646, 411, 733, 295, 17436, 13364, 47803, 6233, 3928, 281, 411, 51008, 51008, 341, 472, 13, 51278, 51278, 823, 264, 661, 551, 321, 393, 360, 307, 406, 445, 574, 412, 437, 311, 2737, 294, 264, 12577, 13, 51502, 51502, 876, 293, 538, 264, 636, 321, 727, 360, 264, 912, 551, 365, 5022, 293, 915, 484, 411, 597, 4195, 445, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1743428683975368, "compression_ratio": 1.6596638655462186, "no_speech_prob": 1.2878878123956383e-06}, {"id": 164, "seek": 94620, "start": 946.2, "end": 954.5600000000001, "text": " loves movies even the crappy ones you know just likes all movies and vice versa.", "tokens": [50364, 6752, 6233, 754, 264, 36531, 2306, 291, 458, 445, 5902, 439, 6233, 293, 11964, 25650, 13, 50782, 50782, 583, 437, 466, 264, 661, 551, 321, 994, 380, 445, 362, 12577, 321, 611, 632, 3169, 6771, 597, 51089, 51089, 575, 658, 264, 1230, 295, 6233, 382, 472, 10298, 293, 264, 1230, 295, 6771, 382, 264, 661, 293, 321, 51356, 51356, 4678, 294, 2625, 13, 51461, 51461, 708, 311, 294, 300, 2603, 8141, 30, 51632, 51632, 1042, 1238, 1152, 281, 23273, 1270, 257, 2603, 8141, 293, 321, 434, 406, 516, 281, 751, 466, 264, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1459405223528544, "compression_ratio": 1.6916299559471366, "no_speech_prob": 3.500824732327601e-06}, {"id": 165, "seek": 94620, "start": 954.5600000000001, "end": 960.7, "text": " But what about the other thing we didn't just have bias we also had movie factors which", "tokens": [50364, 6752, 6233, 754, 264, 36531, 2306, 291, 458, 445, 5902, 439, 6233, 293, 11964, 25650, 13, 50782, 50782, 583, 437, 466, 264, 661, 551, 321, 994, 380, 445, 362, 12577, 321, 611, 632, 3169, 6771, 597, 51089, 51089, 575, 658, 264, 1230, 295, 6233, 382, 472, 10298, 293, 264, 1230, 295, 6771, 382, 264, 661, 293, 321, 51356, 51356, 4678, 294, 2625, 13, 51461, 51461, 708, 311, 294, 300, 2603, 8141, 30, 51632, 51632, 1042, 1238, 1152, 281, 23273, 1270, 257, 2603, 8141, 293, 321, 434, 406, 516, 281, 751, 466, 264, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1459405223528544, "compression_ratio": 1.6916299559471366, "no_speech_prob": 3.500824732327601e-06}, {"id": 166, "seek": 94620, "start": 960.7, "end": 966.0400000000001, "text": " has got the number of movies as one axis and the number of factors as the other and we", "tokens": [50364, 6752, 6233, 754, 264, 36531, 2306, 291, 458, 445, 5902, 439, 6233, 293, 11964, 25650, 13, 50782, 50782, 583, 437, 466, 264, 661, 551, 321, 994, 380, 445, 362, 12577, 321, 611, 632, 3169, 6771, 597, 51089, 51089, 575, 658, 264, 1230, 295, 6233, 382, 472, 10298, 293, 264, 1230, 295, 6771, 382, 264, 661, 293, 321, 51356, 51356, 4678, 294, 2625, 13, 51461, 51461, 708, 311, 294, 300, 2603, 8141, 30, 51632, 51632, 1042, 1238, 1152, 281, 23273, 1270, 257, 2603, 8141, 293, 321, 434, 406, 516, 281, 751, 466, 264, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1459405223528544, "compression_ratio": 1.6916299559471366, "no_speech_prob": 3.500824732327601e-06}, {"id": 167, "seek": 94620, "start": 966.0400000000001, "end": 968.1400000000001, "text": " passed in 50.", "tokens": [50364, 6752, 6233, 754, 264, 36531, 2306, 291, 458, 445, 5902, 439, 6233, 293, 11964, 25650, 13, 50782, 50782, 583, 437, 466, 264, 661, 551, 321, 994, 380, 445, 362, 12577, 321, 611, 632, 3169, 6771, 597, 51089, 51089, 575, 658, 264, 1230, 295, 6233, 382, 472, 10298, 293, 264, 1230, 295, 6771, 382, 264, 661, 293, 321, 51356, 51356, 4678, 294, 2625, 13, 51461, 51461, 708, 311, 294, 300, 2603, 8141, 30, 51632, 51632, 1042, 1238, 1152, 281, 23273, 1270, 257, 2603, 8141, 293, 321, 434, 406, 516, 281, 751, 466, 264, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1459405223528544, "compression_ratio": 1.6916299559471366, "no_speech_prob": 3.500824732327601e-06}, {"id": 168, "seek": 94620, "start": 968.1400000000001, "end": 971.5600000000001, "text": " What's in that huge matrix?", "tokens": [50364, 6752, 6233, 754, 264, 36531, 2306, 291, 458, 445, 5902, 439, 6233, 293, 11964, 25650, 13, 50782, 50782, 583, 437, 466, 264, 661, 551, 321, 994, 380, 445, 362, 12577, 321, 611, 632, 3169, 6771, 597, 51089, 51089, 575, 658, 264, 1230, 295, 6233, 382, 472, 10298, 293, 264, 1230, 295, 6771, 382, 264, 661, 293, 321, 51356, 51356, 4678, 294, 2625, 13, 51461, 51461, 708, 311, 294, 300, 2603, 8141, 30, 51632, 51632, 1042, 1238, 1152, 281, 23273, 1270, 257, 2603, 8141, 293, 321, 434, 406, 516, 281, 751, 466, 264, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1459405223528544, "compression_ratio": 1.6916299559471366, "no_speech_prob": 3.500824732327601e-06}, {"id": 169, "seek": 94620, "start": 971.5600000000001, "end": 975.48, "text": " Well pretty hard to visualize such a huge matrix and we're not going to talk about the", "tokens": [50364, 6752, 6233, 754, 264, 36531, 2306, 291, 458, 445, 5902, 439, 6233, 293, 11964, 25650, 13, 50782, 50782, 583, 437, 466, 264, 661, 551, 321, 994, 380, 445, 362, 12577, 321, 611, 632, 3169, 6771, 597, 51089, 51089, 575, 658, 264, 1230, 295, 6233, 382, 472, 10298, 293, 264, 1230, 295, 6771, 382, 264, 661, 293, 321, 51356, 51356, 4678, 294, 2625, 13, 51461, 51461, 708, 311, 294, 300, 2603, 8141, 30, 51632, 51632, 1042, 1238, 1152, 281, 23273, 1270, 257, 2603, 8141, 293, 321, 434, 406, 516, 281, 751, 466, 264, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1459405223528544, "compression_ratio": 1.6916299559471366, "no_speech_prob": 3.500824732327601e-06}, {"id": 170, "seek": 97548, "start": 975.48, "end": 980.08, "text": " details but you can do something called PCA which stands for Principle Component Analysis", "tokens": [50364, 4365, 457, 291, 393, 360, 746, 1219, 6465, 32, 597, 7382, 337, 38372, 781, 6620, 30365, 38172, 50594, 50594, 293, 300, 1936, 9898, 281, 14778, 729, 2625, 13766, 760, 666, 1045, 13766, 13, 50990, 50990, 400, 550, 321, 393, 2642, 257, 6927, 295, 264, 1192, 732, 13, 51298, 51298, 400, 370, 341, 307, 6465, 32, 6542, 1230, 472, 293, 341, 307, 6465, 32, 6542, 1230, 732, 293, 510, 311, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.12529584806259364, "compression_ratio": 1.627027027027027, "no_speech_prob": 3.3931244161067298e-06}, {"id": 171, "seek": 97548, "start": 980.08, "end": 988.0, "text": " and that basically tries to compress those 50 columns down into three columns.", "tokens": [50364, 4365, 457, 291, 393, 360, 746, 1219, 6465, 32, 597, 7382, 337, 38372, 781, 6620, 30365, 38172, 50594, 50594, 293, 300, 1936, 9898, 281, 14778, 729, 2625, 13766, 760, 666, 1045, 13766, 13, 50990, 50990, 400, 550, 321, 393, 2642, 257, 6927, 295, 264, 1192, 732, 13, 51298, 51298, 400, 370, 341, 307, 6465, 32, 6542, 1230, 472, 293, 341, 307, 6465, 32, 6542, 1230, 732, 293, 510, 311, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.12529584806259364, "compression_ratio": 1.627027027027027, "no_speech_prob": 3.3931244161067298e-06}, {"id": 172, "seek": 97548, "start": 988.0, "end": 994.16, "text": " And then we can draw a chart of the top two.", "tokens": [50364, 4365, 457, 291, 393, 360, 746, 1219, 6465, 32, 597, 7382, 337, 38372, 781, 6620, 30365, 38172, 50594, 50594, 293, 300, 1936, 9898, 281, 14778, 729, 2625, 13766, 760, 666, 1045, 13766, 13, 50990, 50990, 400, 550, 321, 393, 2642, 257, 6927, 295, 264, 1192, 732, 13, 51298, 51298, 400, 370, 341, 307, 6465, 32, 6542, 1230, 472, 293, 341, 307, 6465, 32, 6542, 1230, 732, 293, 510, 311, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.12529584806259364, "compression_ratio": 1.627027027027027, "no_speech_prob": 3.3931244161067298e-06}, {"id": 173, "seek": 97548, "start": 994.16, "end": 1002.88, "text": " And so this is PCA component number one and this is PCA component number two and here's", "tokens": [50364, 4365, 457, 291, 393, 360, 746, 1219, 6465, 32, 597, 7382, 337, 38372, 781, 6620, 30365, 38172, 50594, 50594, 293, 300, 1936, 9898, 281, 14778, 729, 2625, 13766, 760, 666, 1045, 13766, 13, 50990, 50990, 400, 550, 321, 393, 2642, 257, 6927, 295, 264, 1192, 732, 13, 51298, 51298, 400, 370, 341, 307, 6465, 32, 6542, 1230, 472, 293, 341, 307, 6465, 32, 6542, 1230, 732, 293, 510, 311, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.12529584806259364, "compression_ratio": 1.627027027027027, "no_speech_prob": 3.3931244161067298e-06}, {"id": 174, "seek": 100288, "start": 1002.88, "end": 1011.8, "text": " a bunch of movies and this is a compressed view of these latent factors that it created.", "tokens": [50364, 257, 3840, 295, 6233, 293, 341, 307, 257, 30353, 1910, 295, 613, 48994, 6771, 300, 309, 2942, 13, 50810, 50810, 400, 291, 393, 536, 300, 436, 2745, 362, 512, 733, 295, 3620, 558, 13, 51028, 51028, 407, 670, 510, 3030, 264, 558, 321, 600, 658, 733, 295, 291, 458, 588, 1665, 15960, 733, 295, 6233, 51442, 51442, 293, 670, 510, 322, 264, 1411, 321, 600, 658, 544, 295, 264, 733, 295, 22797, 1317, 22642, 677, 10016, 733, 51752, 51752, 295, 6233, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.07182130148244459, "compression_ratio": 1.7241379310344827, "no_speech_prob": 4.2228093661833555e-06}, {"id": 175, "seek": 100288, "start": 1011.8, "end": 1016.16, "text": " And you can see that they obviously have some kind of meaning right.", "tokens": [50364, 257, 3840, 295, 6233, 293, 341, 307, 257, 30353, 1910, 295, 613, 48994, 6771, 300, 309, 2942, 13, 50810, 50810, 400, 291, 393, 536, 300, 436, 2745, 362, 512, 733, 295, 3620, 558, 13, 51028, 51028, 407, 670, 510, 3030, 264, 558, 321, 600, 658, 733, 295, 291, 458, 588, 1665, 15960, 733, 295, 6233, 51442, 51442, 293, 670, 510, 322, 264, 1411, 321, 600, 658, 544, 295, 264, 733, 295, 22797, 1317, 22642, 677, 10016, 733, 51752, 51752, 295, 6233, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.07182130148244459, "compression_ratio": 1.7241379310344827, "no_speech_prob": 4.2228093661833555e-06}, {"id": 176, "seek": 100288, "start": 1016.16, "end": 1024.44, "text": " So over here towards the right we've got kind of you know very pop mainstream kind of movies", "tokens": [50364, 257, 3840, 295, 6233, 293, 341, 307, 257, 30353, 1910, 295, 613, 48994, 6771, 300, 309, 2942, 13, 50810, 50810, 400, 291, 393, 536, 300, 436, 2745, 362, 512, 733, 295, 3620, 558, 13, 51028, 51028, 407, 670, 510, 3030, 264, 558, 321, 600, 658, 733, 295, 291, 458, 588, 1665, 15960, 733, 295, 6233, 51442, 51442, 293, 670, 510, 322, 264, 1411, 321, 600, 658, 544, 295, 264, 733, 295, 22797, 1317, 22642, 677, 10016, 733, 51752, 51752, 295, 6233, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.07182130148244459, "compression_ratio": 1.7241379310344827, "no_speech_prob": 4.2228093661833555e-06}, {"id": 177, "seek": 100288, "start": 1024.44, "end": 1030.64, "text": " and over here on the left we've got more of the kind of critically acclaimed gritty kind", "tokens": [50364, 257, 3840, 295, 6233, 293, 341, 307, 257, 30353, 1910, 295, 613, 48994, 6771, 300, 309, 2942, 13, 50810, 50810, 400, 291, 393, 536, 300, 436, 2745, 362, 512, 733, 295, 3620, 558, 13, 51028, 51028, 407, 670, 510, 3030, 264, 558, 321, 600, 658, 733, 295, 291, 458, 588, 1665, 15960, 733, 295, 6233, 51442, 51442, 293, 670, 510, 322, 264, 1411, 321, 600, 658, 544, 295, 264, 733, 295, 22797, 1317, 22642, 677, 10016, 733, 51752, 51752, 295, 6233, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.07182130148244459, "compression_ratio": 1.7241379310344827, "no_speech_prob": 4.2228093661833555e-06}, {"id": 178, "seek": 100288, "start": 1030.64, "end": 1032.72, "text": " of movies.", "tokens": [50364, 257, 3840, 295, 6233, 293, 341, 307, 257, 30353, 1910, 295, 613, 48994, 6771, 300, 309, 2942, 13, 50810, 50810, 400, 291, 393, 536, 300, 436, 2745, 362, 512, 733, 295, 3620, 558, 13, 51028, 51028, 407, 670, 510, 3030, 264, 558, 321, 600, 658, 733, 295, 291, 458, 588, 1665, 15960, 733, 295, 6233, 51442, 51442, 293, 670, 510, 322, 264, 1411, 321, 600, 658, 544, 295, 264, 733, 295, 22797, 1317, 22642, 677, 10016, 733, 51752, 51752, 295, 6233, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.07182130148244459, "compression_ratio": 1.7241379310344827, "no_speech_prob": 4.2228093661833555e-06}, {"id": 179, "seek": 103272, "start": 1032.72, "end": 1038.96, "text": " And then towards the top we've got very kind of action oriented and sci-fi movies and then", "tokens": [50364, 400, 550, 3030, 264, 1192, 321, 600, 658, 588, 733, 295, 3069, 21841, 293, 2180, 12, 13325, 6233, 293, 550, 50676, 50676, 760, 3030, 264, 2767, 321, 600, 658, 588, 10221, 9555, 6233, 13, 50850, 50850, 407, 1604, 321, 994, 380, 1461, 294, 604, 295, 613, 721, 293, 321, 500, 380, 362, 604, 1412, 412, 439, 466, 51178, 51178, 437, 3169, 307, 437, 733, 295, 3169, 457, 3231, 281, 264, 5585, 295, 34520, 35, 321, 445, 1907, 309, 281, 1767, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08190210660298665, "compression_ratio": 1.6390243902439023, "no_speech_prob": 1.7880580571727478e-06}, {"id": 180, "seek": 103272, "start": 1038.96, "end": 1042.44, "text": " down towards the bottom we've got very dialogue driven movies.", "tokens": [50364, 400, 550, 3030, 264, 1192, 321, 600, 658, 588, 733, 295, 3069, 21841, 293, 2180, 12, 13325, 6233, 293, 550, 50676, 50676, 760, 3030, 264, 2767, 321, 600, 658, 588, 10221, 9555, 6233, 13, 50850, 50850, 407, 1604, 321, 994, 380, 1461, 294, 604, 295, 613, 721, 293, 321, 500, 380, 362, 604, 1412, 412, 439, 466, 51178, 51178, 437, 3169, 307, 437, 733, 295, 3169, 457, 3231, 281, 264, 5585, 295, 34520, 35, 321, 445, 1907, 309, 281, 1767, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08190210660298665, "compression_ratio": 1.6390243902439023, "no_speech_prob": 1.7880580571727478e-06}, {"id": 181, "seek": 103272, "start": 1042.44, "end": 1049.0, "text": " So remember we didn't program in any of these things and we don't have any data at all about", "tokens": [50364, 400, 550, 3030, 264, 1192, 321, 600, 658, 588, 733, 295, 3069, 21841, 293, 2180, 12, 13325, 6233, 293, 550, 50676, 50676, 760, 3030, 264, 2767, 321, 600, 658, 588, 10221, 9555, 6233, 13, 50850, 50850, 407, 1604, 321, 994, 380, 1461, 294, 604, 295, 613, 721, 293, 321, 500, 380, 362, 604, 1412, 412, 439, 466, 51178, 51178, 437, 3169, 307, 437, 733, 295, 3169, 457, 3231, 281, 264, 5585, 295, 34520, 35, 321, 445, 1907, 309, 281, 1767, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08190210660298665, "compression_ratio": 1.6390243902439023, "no_speech_prob": 1.7880580571727478e-06}, {"id": 182, "seek": 103272, "start": 1049.0, "end": 1058.72, "text": " what movie is what kind of movie but thanks to the magic of SGD we just told it to please", "tokens": [50364, 400, 550, 3030, 264, 1192, 321, 600, 658, 588, 733, 295, 3069, 21841, 293, 2180, 12, 13325, 6233, 293, 550, 50676, 50676, 760, 3030, 264, 2767, 321, 600, 658, 588, 10221, 9555, 6233, 13, 50850, 50850, 407, 1604, 321, 994, 380, 1461, 294, 604, 295, 613, 721, 293, 321, 500, 380, 362, 604, 1412, 412, 439, 466, 51178, 51178, 437, 3169, 307, 437, 733, 295, 3169, 457, 3231, 281, 264, 5585, 295, 34520, 35, 321, 445, 1907, 309, 281, 1767, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08190210660298665, "compression_ratio": 1.6390243902439023, "no_speech_prob": 1.7880580571727478e-06}, {"id": 183, "seek": 105872, "start": 1058.72, "end": 1066.04, "text": " try and optimize these parameters and the way it was able to predict who would like", "tokens": [50364, 853, 293, 19719, 613, 9834, 293, 264, 636, 309, 390, 1075, 281, 6069, 567, 576, 411, 50730, 50730, 437, 3169, 390, 309, 632, 281, 2573, 484, 437, 3685, 295, 6233, 366, 456, 420, 437, 733, 295, 3939, 51024, 51024, 307, 456, 337, 1184, 3169, 13, 51216, 51216, 407, 286, 519, 300, 311, 1238, 1880, 13, 51372, 51372], "temperature": 0.0, "avg_logprob": -0.08451465024786481, "compression_ratio": 1.525974025974026, "no_speech_prob": 1.3287721003507613e-06}, {"id": 184, "seek": 105872, "start": 1066.04, "end": 1071.92, "text": " what movie was it had to figure out what kinds of movies are there or what kind of taste", "tokens": [50364, 853, 293, 19719, 613, 9834, 293, 264, 636, 309, 390, 1075, 281, 6069, 567, 576, 411, 50730, 50730, 437, 3169, 390, 309, 632, 281, 2573, 484, 437, 3685, 295, 6233, 366, 456, 420, 437, 733, 295, 3939, 51024, 51024, 307, 456, 337, 1184, 3169, 13, 51216, 51216, 407, 286, 519, 300, 311, 1238, 1880, 13, 51372, 51372], "temperature": 0.0, "avg_logprob": -0.08451465024786481, "compression_ratio": 1.525974025974026, "no_speech_prob": 1.3287721003507613e-06}, {"id": 185, "seek": 105872, "start": 1071.92, "end": 1075.76, "text": " is there for each movie.", "tokens": [50364, 853, 293, 19719, 613, 9834, 293, 264, 636, 309, 390, 1075, 281, 6069, 567, 576, 411, 50730, 50730, 437, 3169, 390, 309, 632, 281, 2573, 484, 437, 3685, 295, 6233, 366, 456, 420, 437, 733, 295, 3939, 51024, 51024, 307, 456, 337, 1184, 3169, 13, 51216, 51216, 407, 286, 519, 300, 311, 1238, 1880, 13, 51372, 51372], "temperature": 0.0, "avg_logprob": -0.08451465024786481, "compression_ratio": 1.525974025974026, "no_speech_prob": 1.3287721003507613e-06}, {"id": 186, "seek": 105872, "start": 1075.76, "end": 1078.88, "text": " So I think that's pretty interesting.", "tokens": [50364, 853, 293, 19719, 613, 9834, 293, 264, 636, 309, 390, 1075, 281, 6069, 567, 576, 411, 50730, 50730, 437, 3169, 390, 309, 632, 281, 2573, 484, 437, 3685, 295, 6233, 366, 456, 420, 437, 733, 295, 3939, 51024, 51024, 307, 456, 337, 1184, 3169, 13, 51216, 51216, 407, 286, 519, 300, 311, 1238, 1880, 13, 51372, 51372], "temperature": 0.0, "avg_logprob": -0.08451465024786481, "compression_ratio": 1.525974025974026, "no_speech_prob": 1.3287721003507613e-06}, {"id": 187, "seek": 107888, "start": 1078.88, "end": 1097.64, "text": " So this is called visualizing embeddings and then this is visualizing the bias.", "tokens": [50364, 407, 341, 307, 1219, 5056, 3319, 12240, 29432, 293, 550, 341, 307, 5056, 3319, 264, 12577, 13, 51302, 51302, 492, 2745, 576, 2831, 406, 360, 1203, 1293, 538, 1011, 411, 341, 420, 754, 411, 341, 293, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.11945788860321045, "compression_ratio": 1.4736842105263157, "no_speech_prob": 1.4823463061475195e-06}, {"id": 188, "seek": 107888, "start": 1097.64, "end": 1108.5200000000002, "text": " We obviously would rather not do everything both by hand like this or even like this and", "tokens": [50364, 407, 341, 307, 1219, 5056, 3319, 12240, 29432, 293, 550, 341, 307, 5056, 3319, 264, 12577, 13, 51302, 51302, 492, 2745, 576, 2831, 406, 360, 1203, 1293, 538, 1011, 411, 341, 420, 754, 411, 341, 293, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.11945788860321045, "compression_ratio": 1.4736842105263157, "no_speech_prob": 1.4823463061475195e-06}, {"id": 189, "seek": 110852, "start": 1108.52, "end": 1115.2, "text": " fast AI provides an application for collaborative learner and so we can create one and this", "tokens": [50364, 2370, 7318, 6417, 364, 3861, 337, 16555, 33347, 293, 370, 321, 393, 1884, 472, 293, 341, 50698, 50698, 307, 516, 281, 574, 709, 264, 912, 382, 437, 321, 445, 632, 13, 50794, 50794, 492, 434, 516, 281, 584, 577, 867, 48994, 6771, 321, 528, 293, 437, 264, 288, 3613, 307, 281, 360, 264, 51020, 51020, 4556, 3280, 327, 293, 264, 12972, 293, 550, 321, 393, 360, 3318, 293, 1314, 309, 1709, 13, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.1293669248882093, "compression_ratio": 1.5473684210526315, "no_speech_prob": 1.3006980225327425e-05}, {"id": 190, "seek": 110852, "start": 1115.2, "end": 1117.12, "text": " is going to look much the same as what we just had.", "tokens": [50364, 2370, 7318, 6417, 364, 3861, 337, 16555, 33347, 293, 370, 321, 393, 1884, 472, 293, 341, 50698, 50698, 307, 516, 281, 574, 709, 264, 912, 382, 437, 321, 445, 632, 13, 50794, 50794, 492, 434, 516, 281, 584, 577, 867, 48994, 6771, 321, 528, 293, 437, 264, 288, 3613, 307, 281, 360, 264, 51020, 51020, 4556, 3280, 327, 293, 264, 12972, 293, 550, 321, 393, 360, 3318, 293, 1314, 309, 1709, 13, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.1293669248882093, "compression_ratio": 1.5473684210526315, "no_speech_prob": 1.3006980225327425e-05}, {"id": 191, "seek": 110852, "start": 1117.12, "end": 1121.6399999999999, "text": " We're going to say how many latent factors we want and what the y range is to do the", "tokens": [50364, 2370, 7318, 6417, 364, 3861, 337, 16555, 33347, 293, 370, 321, 393, 1884, 472, 293, 341, 50698, 50698, 307, 516, 281, 574, 709, 264, 912, 382, 437, 321, 445, 632, 13, 50794, 50794, 492, 434, 516, 281, 584, 577, 867, 48994, 6771, 321, 528, 293, 437, 264, 288, 3613, 307, 281, 360, 264, 51020, 51020, 4556, 3280, 327, 293, 264, 12972, 293, 550, 321, 393, 360, 3318, 293, 1314, 309, 1709, 13, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.1293669248882093, "compression_ratio": 1.5473684210526315, "no_speech_prob": 1.3006980225327425e-05}, {"id": 192, "seek": 110852, "start": 1121.6399999999999, "end": 1135.56, "text": " sigmoid and the multiply and then we can do fit and away it goes.", "tokens": [50364, 2370, 7318, 6417, 364, 3861, 337, 16555, 33347, 293, 370, 321, 393, 1884, 472, 293, 341, 50698, 50698, 307, 516, 281, 574, 709, 264, 912, 382, 437, 321, 445, 632, 13, 50794, 50794, 492, 434, 516, 281, 584, 577, 867, 48994, 6771, 321, 528, 293, 437, 264, 288, 3613, 307, 281, 360, 264, 51020, 51020, 4556, 3280, 327, 293, 264, 12972, 293, 550, 321, 393, 360, 3318, 293, 1314, 309, 1709, 13, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.1293669248882093, "compression_ratio": 1.5473684210526315, "no_speech_prob": 1.3006980225327425e-05}, {"id": 193, "seek": 113556, "start": 1135.56, "end": 1138.96, "text": " So let's see how it does.", "tokens": [50364, 407, 718, 311, 536, 577, 309, 775, 13, 50534, 50534, 2798, 370, 309, 311, 1096, 257, 857, 1101, 813, 527, 9688, 472, 13, 50804, 50804, 961, 311, 747, 257, 574, 412, 264, 2316, 309, 2942, 13, 51012, 51012, 440, 2316, 1542, 588, 2531, 281, 437, 321, 2942, 294, 2115, 295, 264, 9834, 13, 51251, 51251, 509, 393, 536, 613, 366, 264, 732, 12240, 29432, 293, 613, 366, 264, 732, 32152, 293, 321, 393, 360, 2293, 51550, 51550, 264, 912, 551, 13, 51600, 51600, 492, 393, 574, 294, 300, 2316, 293, 321, 393, 915, 264, 291, 603, 536, 309, 311, 406, 1219, 6233, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.12188718920556184, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.2252718281379202e-06}, {"id": 194, "seek": 113556, "start": 1138.96, "end": 1144.36, "text": " Alright so it's done a bit better than our manual one.", "tokens": [50364, 407, 718, 311, 536, 577, 309, 775, 13, 50534, 50534, 2798, 370, 309, 311, 1096, 257, 857, 1101, 813, 527, 9688, 472, 13, 50804, 50804, 961, 311, 747, 257, 574, 412, 264, 2316, 309, 2942, 13, 51012, 51012, 440, 2316, 1542, 588, 2531, 281, 437, 321, 2942, 294, 2115, 295, 264, 9834, 13, 51251, 51251, 509, 393, 536, 613, 366, 264, 732, 12240, 29432, 293, 613, 366, 264, 732, 32152, 293, 321, 393, 360, 2293, 51550, 51550, 264, 912, 551, 13, 51600, 51600, 492, 393, 574, 294, 300, 2316, 293, 321, 393, 915, 264, 291, 603, 536, 309, 311, 406, 1219, 6233, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.12188718920556184, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.2252718281379202e-06}, {"id": 195, "seek": 113556, "start": 1144.36, "end": 1148.52, "text": " Let's take a look at the model it created.", "tokens": [50364, 407, 718, 311, 536, 577, 309, 775, 13, 50534, 50534, 2798, 370, 309, 311, 1096, 257, 857, 1101, 813, 527, 9688, 472, 13, 50804, 50804, 961, 311, 747, 257, 574, 412, 264, 2316, 309, 2942, 13, 51012, 51012, 440, 2316, 1542, 588, 2531, 281, 437, 321, 2942, 294, 2115, 295, 264, 9834, 13, 51251, 51251, 509, 393, 536, 613, 366, 264, 732, 12240, 29432, 293, 613, 366, 264, 732, 32152, 293, 321, 393, 360, 2293, 51550, 51550, 264, 912, 551, 13, 51600, 51600, 492, 393, 574, 294, 300, 2316, 293, 321, 393, 915, 264, 291, 603, 536, 309, 311, 406, 1219, 6233, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.12188718920556184, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.2252718281379202e-06}, {"id": 196, "seek": 113556, "start": 1148.52, "end": 1153.3, "text": " The model looks very similar to what we created in terms of the parameters.", "tokens": [50364, 407, 718, 311, 536, 577, 309, 775, 13, 50534, 50534, 2798, 370, 309, 311, 1096, 257, 857, 1101, 813, 527, 9688, 472, 13, 50804, 50804, 961, 311, 747, 257, 574, 412, 264, 2316, 309, 2942, 13, 51012, 51012, 440, 2316, 1542, 588, 2531, 281, 437, 321, 2942, 294, 2115, 295, 264, 9834, 13, 51251, 51251, 509, 393, 536, 613, 366, 264, 732, 12240, 29432, 293, 613, 366, 264, 732, 32152, 293, 321, 393, 360, 2293, 51550, 51550, 264, 912, 551, 13, 51600, 51600, 492, 393, 574, 294, 300, 2316, 293, 321, 393, 915, 264, 291, 603, 536, 309, 311, 406, 1219, 6233, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.12188718920556184, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.2252718281379202e-06}, {"id": 197, "seek": 113556, "start": 1153.3, "end": 1159.28, "text": " You can see these are the two embeddings and these are the two biases and we can do exactly", "tokens": [50364, 407, 718, 311, 536, 577, 309, 775, 13, 50534, 50534, 2798, 370, 309, 311, 1096, 257, 857, 1101, 813, 527, 9688, 472, 13, 50804, 50804, 961, 311, 747, 257, 574, 412, 264, 2316, 309, 2942, 13, 51012, 51012, 440, 2316, 1542, 588, 2531, 281, 437, 321, 2942, 294, 2115, 295, 264, 9834, 13, 51251, 51251, 509, 393, 536, 613, 366, 264, 732, 12240, 29432, 293, 613, 366, 264, 732, 32152, 293, 321, 393, 360, 2293, 51550, 51550, 264, 912, 551, 13, 51600, 51600, 492, 393, 574, 294, 300, 2316, 293, 321, 393, 915, 264, 291, 603, 536, 309, 311, 406, 1219, 6233, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.12188718920556184, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.2252718281379202e-06}, {"id": 198, "seek": 113556, "start": 1159.28, "end": 1160.28, "text": " the same thing.", "tokens": [50364, 407, 718, 311, 536, 577, 309, 775, 13, 50534, 50534, 2798, 370, 309, 311, 1096, 257, 857, 1101, 813, 527, 9688, 472, 13, 50804, 50804, 961, 311, 747, 257, 574, 412, 264, 2316, 309, 2942, 13, 51012, 51012, 440, 2316, 1542, 588, 2531, 281, 437, 321, 2942, 294, 2115, 295, 264, 9834, 13, 51251, 51251, 509, 393, 536, 613, 366, 264, 732, 12240, 29432, 293, 613, 366, 264, 732, 32152, 293, 321, 393, 360, 2293, 51550, 51550, 264, 912, 551, 13, 51600, 51600, 492, 393, 574, 294, 300, 2316, 293, 321, 393, 915, 264, 291, 603, 536, 309, 311, 406, 1219, 6233, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.12188718920556184, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.2252718281379202e-06}, {"id": 199, "seek": 113556, "start": 1160.28, "end": 1165.26, "text": " We can look in that model and we can find the you'll see it's not called movies.", "tokens": [50364, 407, 718, 311, 536, 577, 309, 775, 13, 50534, 50534, 2798, 370, 309, 311, 1096, 257, 857, 1101, 813, 527, 9688, 472, 13, 50804, 50804, 961, 311, 747, 257, 574, 412, 264, 2316, 309, 2942, 13, 51012, 51012, 440, 2316, 1542, 588, 2531, 281, 437, 321, 2942, 294, 2115, 295, 264, 9834, 13, 51251, 51251, 509, 393, 536, 613, 366, 264, 732, 12240, 29432, 293, 613, 366, 264, 732, 32152, 293, 321, 393, 360, 2293, 51550, 51550, 264, 912, 551, 13, 51600, 51600, 492, 393, 574, 294, 300, 2316, 293, 321, 393, 915, 264, 291, 603, 536, 309, 311, 406, 1219, 6233, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.12188718920556184, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.2252718281379202e-06}, {"id": 200, "seek": 116526, "start": 1165.26, "end": 1166.26, "text": " It's if items.", "tokens": [50364, 467, 311, 498, 4754, 13, 50414, 50414, 467, 311, 5022, 293, 4754, 13, 50464, 50464, 639, 307, 264, 3174, 12577, 13, 50514, 50514, 407, 321, 393, 574, 412, 264, 3174, 12577, 11, 4444, 264, 17443, 11, 1333, 293, 321, 483, 257, 588, 2531, 1874, 13, 50889, 50889, 682, 341, 1389, 309, 311, 754, 544, 6679, 300, 9855, 11701, 1078, 831, 307, 257, 3169, 300, 291, 820, 51083, 51083, 1391, 853, 1976, 754, 498, 291, 500, 380, 411, 729, 733, 295, 6233, 13, 51235, 51235, 400, 42183, 307, 558, 493, 456, 382, 731, 754, 498, 291, 500, 380, 534, 411, 19064, 88, 733, 295, 51439, 51439, 6233, 291, 1062, 411, 341, 472, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.15315083799691037, "compression_ratio": 1.7242798353909465, "no_speech_prob": 1.3631209185405169e-05}, {"id": 201, "seek": 116526, "start": 1166.26, "end": 1167.26, "text": " It's users and items.", "tokens": [50364, 467, 311, 498, 4754, 13, 50414, 50414, 467, 311, 5022, 293, 4754, 13, 50464, 50464, 639, 307, 264, 3174, 12577, 13, 50514, 50514, 407, 321, 393, 574, 412, 264, 3174, 12577, 11, 4444, 264, 17443, 11, 1333, 293, 321, 483, 257, 588, 2531, 1874, 13, 50889, 50889, 682, 341, 1389, 309, 311, 754, 544, 6679, 300, 9855, 11701, 1078, 831, 307, 257, 3169, 300, 291, 820, 51083, 51083, 1391, 853, 1976, 754, 498, 291, 500, 380, 411, 729, 733, 295, 6233, 13, 51235, 51235, 400, 42183, 307, 558, 493, 456, 382, 731, 754, 498, 291, 500, 380, 534, 411, 19064, 88, 733, 295, 51439, 51439, 6233, 291, 1062, 411, 341, 472, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.15315083799691037, "compression_ratio": 1.7242798353909465, "no_speech_prob": 1.3631209185405169e-05}, {"id": 202, "seek": 116526, "start": 1167.26, "end": 1168.26, "text": " This is the item bias.", "tokens": [50364, 467, 311, 498, 4754, 13, 50414, 50414, 467, 311, 5022, 293, 4754, 13, 50464, 50464, 639, 307, 264, 3174, 12577, 13, 50514, 50514, 407, 321, 393, 574, 412, 264, 3174, 12577, 11, 4444, 264, 17443, 11, 1333, 293, 321, 483, 257, 588, 2531, 1874, 13, 50889, 50889, 682, 341, 1389, 309, 311, 754, 544, 6679, 300, 9855, 11701, 1078, 831, 307, 257, 3169, 300, 291, 820, 51083, 51083, 1391, 853, 1976, 754, 498, 291, 500, 380, 411, 729, 733, 295, 6233, 13, 51235, 51235, 400, 42183, 307, 558, 493, 456, 382, 731, 754, 498, 291, 500, 380, 534, 411, 19064, 88, 733, 295, 51439, 51439, 6233, 291, 1062, 411, 341, 472, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.15315083799691037, "compression_ratio": 1.7242798353909465, "no_speech_prob": 1.3631209185405169e-05}, {"id": 203, "seek": 116526, "start": 1168.26, "end": 1175.76, "text": " So we can look at the item bias, grab the weights, sort and we get a very similar result.", "tokens": [50364, 467, 311, 498, 4754, 13, 50414, 50414, 467, 311, 5022, 293, 4754, 13, 50464, 50464, 639, 307, 264, 3174, 12577, 13, 50514, 50514, 407, 321, 393, 574, 412, 264, 3174, 12577, 11, 4444, 264, 17443, 11, 1333, 293, 321, 483, 257, 588, 2531, 1874, 13, 50889, 50889, 682, 341, 1389, 309, 311, 754, 544, 6679, 300, 9855, 11701, 1078, 831, 307, 257, 3169, 300, 291, 820, 51083, 51083, 1391, 853, 1976, 754, 498, 291, 500, 380, 411, 729, 733, 295, 6233, 13, 51235, 51235, 400, 42183, 307, 558, 493, 456, 382, 731, 754, 498, 291, 500, 380, 534, 411, 19064, 88, 733, 295, 51439, 51439, 6233, 291, 1062, 411, 341, 472, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.15315083799691037, "compression_ratio": 1.7242798353909465, "no_speech_prob": 1.3631209185405169e-05}, {"id": 204, "seek": 116526, "start": 1175.76, "end": 1179.64, "text": " In this case it's even more confident that LA Confidential is a movie that you should", "tokens": [50364, 467, 311, 498, 4754, 13, 50414, 50414, 467, 311, 5022, 293, 4754, 13, 50464, 50464, 639, 307, 264, 3174, 12577, 13, 50514, 50514, 407, 321, 393, 574, 412, 264, 3174, 12577, 11, 4444, 264, 17443, 11, 1333, 293, 321, 483, 257, 588, 2531, 1874, 13, 50889, 50889, 682, 341, 1389, 309, 311, 754, 544, 6679, 300, 9855, 11701, 1078, 831, 307, 257, 3169, 300, 291, 820, 51083, 51083, 1391, 853, 1976, 754, 498, 291, 500, 380, 411, 729, 733, 295, 6233, 13, 51235, 51235, 400, 42183, 307, 558, 493, 456, 382, 731, 754, 498, 291, 500, 380, 534, 411, 19064, 88, 733, 295, 51439, 51439, 6233, 291, 1062, 411, 341, 472, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.15315083799691037, "compression_ratio": 1.7242798353909465, "no_speech_prob": 1.3631209185405169e-05}, {"id": 205, "seek": 116526, "start": 1179.64, "end": 1182.68, "text": " probably try watching even if you don't like those kind of movies.", "tokens": [50364, 467, 311, 498, 4754, 13, 50414, 50414, 467, 311, 5022, 293, 4754, 13, 50464, 50464, 639, 307, 264, 3174, 12577, 13, 50514, 50514, 407, 321, 393, 574, 412, 264, 3174, 12577, 11, 4444, 264, 17443, 11, 1333, 293, 321, 483, 257, 588, 2531, 1874, 13, 50889, 50889, 682, 341, 1389, 309, 311, 754, 544, 6679, 300, 9855, 11701, 1078, 831, 307, 257, 3169, 300, 291, 820, 51083, 51083, 1391, 853, 1976, 754, 498, 291, 500, 380, 411, 729, 733, 295, 6233, 13, 51235, 51235, 400, 42183, 307, 558, 493, 456, 382, 731, 754, 498, 291, 500, 380, 534, 411, 19064, 88, 733, 295, 51439, 51439, 6233, 291, 1062, 411, 341, 472, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.15315083799691037, "compression_ratio": 1.7242798353909465, "no_speech_prob": 1.3631209185405169e-05}, {"id": 206, "seek": 116526, "start": 1182.68, "end": 1186.76, "text": " And Titanic is right up there as well even if you don't really like romancey kind of", "tokens": [50364, 467, 311, 498, 4754, 13, 50414, 50414, 467, 311, 5022, 293, 4754, 13, 50464, 50464, 639, 307, 264, 3174, 12577, 13, 50514, 50514, 407, 321, 393, 574, 412, 264, 3174, 12577, 11, 4444, 264, 17443, 11, 1333, 293, 321, 483, 257, 588, 2531, 1874, 13, 50889, 50889, 682, 341, 1389, 309, 311, 754, 544, 6679, 300, 9855, 11701, 1078, 831, 307, 257, 3169, 300, 291, 820, 51083, 51083, 1391, 853, 1976, 754, 498, 291, 500, 380, 411, 729, 733, 295, 6233, 13, 51235, 51235, 400, 42183, 307, 558, 493, 456, 382, 731, 754, 498, 291, 500, 380, 534, 411, 19064, 88, 733, 295, 51439, 51439, 6233, 291, 1062, 411, 341, 472, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.15315083799691037, "compression_ratio": 1.7242798353909465, "no_speech_prob": 1.3631209185405169e-05}, {"id": 207, "seek": 116526, "start": 1186.76, "end": 1190.36, "text": " movies you might like this one.", "tokens": [50364, 467, 311, 498, 4754, 13, 50414, 50414, 467, 311, 5022, 293, 4754, 13, 50464, 50464, 639, 307, 264, 3174, 12577, 13, 50514, 50514, 407, 321, 393, 574, 412, 264, 3174, 12577, 11, 4444, 264, 17443, 11, 1333, 293, 321, 483, 257, 588, 2531, 1874, 13, 50889, 50889, 682, 341, 1389, 309, 311, 754, 544, 6679, 300, 9855, 11701, 1078, 831, 307, 257, 3169, 300, 291, 820, 51083, 51083, 1391, 853, 1976, 754, 498, 291, 500, 380, 411, 729, 733, 295, 6233, 13, 51235, 51235, 400, 42183, 307, 558, 493, 456, 382, 731, 754, 498, 291, 500, 380, 534, 411, 19064, 88, 733, 295, 51439, 51439, 6233, 291, 1062, 411, 341, 472, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.15315083799691037, "compression_ratio": 1.7242798353909465, "no_speech_prob": 1.3631209185405169e-05}, {"id": 208, "seek": 119036, "start": 1190.36, "end": 1198.0, "text": " Even if you don't like classic detective you might like this one.", "tokens": [50364, 2754, 498, 291, 500, 380, 411, 7230, 25571, 291, 1062, 411, 341, 472, 13, 50746, 50746, 509, 458, 321, 393, 362, 257, 574, 412, 264, 4009, 3089, 337, 4004, 455, 17216, 260, 293, 321, 393, 536, 300, 51216, 51216, 718, 311, 536, 764, 297, 77, 307, 7908, 538, 7576, 13, 51579, 51579, 407, 689, 527, 2316, 307, 516, 281, 312, 295, 341, 2010, 12240, 3584, 13, 65, 4609, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1786889899266909, "compression_ratio": 1.4425287356321839, "no_speech_prob": 7.57113411964383e-07}, {"id": 209, "seek": 119036, "start": 1198.0, "end": 1207.3999999999999, "text": " You know we can have a look at the source code for Colab Learner and we can see that", "tokens": [50364, 2754, 498, 291, 500, 380, 411, 7230, 25571, 291, 1062, 411, 341, 472, 13, 50746, 50746, 509, 458, 321, 393, 362, 257, 574, 412, 264, 4009, 3089, 337, 4004, 455, 17216, 260, 293, 321, 393, 536, 300, 51216, 51216, 718, 311, 536, 764, 297, 77, 307, 7908, 538, 7576, 13, 51579, 51579, 407, 689, 527, 2316, 307, 516, 281, 312, 295, 341, 2010, 12240, 3584, 13, 65, 4609, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1786889899266909, "compression_ratio": 1.4425287356321839, "no_speech_prob": 7.57113411964383e-07}, {"id": 210, "seek": 119036, "start": 1207.3999999999999, "end": 1214.6599999999999, "text": " let's see use nn is false by default.", "tokens": [50364, 2754, 498, 291, 500, 380, 411, 7230, 25571, 291, 1062, 411, 341, 472, 13, 50746, 50746, 509, 458, 321, 393, 362, 257, 574, 412, 264, 4009, 3089, 337, 4004, 455, 17216, 260, 293, 321, 393, 536, 300, 51216, 51216, 718, 311, 536, 764, 297, 77, 307, 7908, 538, 7576, 13, 51579, 51579, 407, 689, 527, 2316, 307, 516, 281, 312, 295, 341, 2010, 12240, 3584, 13, 65, 4609, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1786889899266909, "compression_ratio": 1.4425287356321839, "no_speech_prob": 7.57113411964383e-07}, {"id": 211, "seek": 119036, "start": 1214.6599999999999, "end": 1219.6, "text": " So where our model is going to be of this type embedding.bias.", "tokens": [50364, 2754, 498, 291, 500, 380, 411, 7230, 25571, 291, 1062, 411, 341, 472, 13, 50746, 50746, 509, 458, 321, 393, 362, 257, 574, 412, 264, 4009, 3089, 337, 4004, 455, 17216, 260, 293, 321, 393, 536, 300, 51216, 51216, 718, 311, 536, 764, 297, 77, 307, 7908, 538, 7576, 13, 51579, 51579, 407, 689, 527, 2316, 307, 516, 281, 312, 295, 341, 2010, 12240, 3584, 13, 65, 4609, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1786889899266909, "compression_ratio": 1.4425287356321839, "no_speech_prob": 7.57113411964383e-07}, {"id": 212, "seek": 121960, "start": 1219.6, "end": 1224.28, "text": " So we can take a look at that.", "tokens": [50364, 407, 321, 393, 747, 257, 574, 412, 300, 13, 50598, 50598, 1692, 309, 307, 13, 50648, 50648, 400, 574, 341, 775, 574, 588, 2531, 13, 50736, 50736, 1033, 309, 311, 4084, 364, 12240, 3584, 1228, 264, 2744, 321, 16436, 337, 1184, 295, 5022, 538, 6771, 51280, 51280, 293, 4754, 538, 6771, 293, 5022, 293, 4754, 13, 51500, 51500, 400, 550, 309, 311, 23771, 1184, 551, 490, 264, 12240, 3584, 294, 264, 2128, 293, 309, 311, 884, 264, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1436053028813115, "compression_ratio": 1.664804469273743, "no_speech_prob": 9.721534297568724e-07}, {"id": 213, "seek": 121960, "start": 1224.28, "end": 1225.28, "text": " Here it is.", "tokens": [50364, 407, 321, 393, 747, 257, 574, 412, 300, 13, 50598, 50598, 1692, 309, 307, 13, 50648, 50648, 400, 574, 341, 775, 574, 588, 2531, 13, 50736, 50736, 1033, 309, 311, 4084, 364, 12240, 3584, 1228, 264, 2744, 321, 16436, 337, 1184, 295, 5022, 538, 6771, 51280, 51280, 293, 4754, 538, 6771, 293, 5022, 293, 4754, 13, 51500, 51500, 400, 550, 309, 311, 23771, 1184, 551, 490, 264, 12240, 3584, 294, 264, 2128, 293, 309, 311, 884, 264, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1436053028813115, "compression_ratio": 1.664804469273743, "no_speech_prob": 9.721534297568724e-07}, {"id": 214, "seek": 121960, "start": 1225.28, "end": 1227.04, "text": " And look this does look very similar.", "tokens": [50364, 407, 321, 393, 747, 257, 574, 412, 300, 13, 50598, 50598, 1692, 309, 307, 13, 50648, 50648, 400, 574, 341, 775, 574, 588, 2531, 13, 50736, 50736, 1033, 309, 311, 4084, 364, 12240, 3584, 1228, 264, 2744, 321, 16436, 337, 1184, 295, 5022, 538, 6771, 51280, 51280, 293, 4754, 538, 6771, 293, 5022, 293, 4754, 13, 51500, 51500, 400, 550, 309, 311, 23771, 1184, 551, 490, 264, 12240, 3584, 294, 264, 2128, 293, 309, 311, 884, 264, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1436053028813115, "compression_ratio": 1.664804469273743, "no_speech_prob": 9.721534297568724e-07}, {"id": 215, "seek": 121960, "start": 1227.04, "end": 1237.9199999999998, "text": " Okay it's creating an embedding using the size we requested for each of users by factors", "tokens": [50364, 407, 321, 393, 747, 257, 574, 412, 300, 13, 50598, 50598, 1692, 309, 307, 13, 50648, 50648, 400, 574, 341, 775, 574, 588, 2531, 13, 50736, 50736, 1033, 309, 311, 4084, 364, 12240, 3584, 1228, 264, 2744, 321, 16436, 337, 1184, 295, 5022, 538, 6771, 51280, 51280, 293, 4754, 538, 6771, 293, 5022, 293, 4754, 13, 51500, 51500, 400, 550, 309, 311, 23771, 1184, 551, 490, 264, 12240, 3584, 294, 264, 2128, 293, 309, 311, 884, 264, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1436053028813115, "compression_ratio": 1.664804469273743, "no_speech_prob": 9.721534297568724e-07}, {"id": 216, "seek": 121960, "start": 1237.9199999999998, "end": 1242.32, "text": " and items by factors and users and items.", "tokens": [50364, 407, 321, 393, 747, 257, 574, 412, 300, 13, 50598, 50598, 1692, 309, 307, 13, 50648, 50648, 400, 574, 341, 775, 574, 588, 2531, 13, 50736, 50736, 1033, 309, 311, 4084, 364, 12240, 3584, 1228, 264, 2744, 321, 16436, 337, 1184, 295, 5022, 538, 6771, 51280, 51280, 293, 4754, 538, 6771, 293, 5022, 293, 4754, 13, 51500, 51500, 400, 550, 309, 311, 23771, 1184, 551, 490, 264, 12240, 3584, 294, 264, 2128, 293, 309, 311, 884, 264, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1436053028813115, "compression_ratio": 1.664804469273743, "no_speech_prob": 9.721534297568724e-07}, {"id": 217, "seek": 121960, "start": 1242.32, "end": 1247.28, "text": " And then it's grabbing each thing from the embedding in the forward and it's doing the", "tokens": [50364, 407, 321, 393, 747, 257, 574, 412, 300, 13, 50598, 50598, 1692, 309, 307, 13, 50648, 50648, 400, 574, 341, 775, 574, 588, 2531, 13, 50736, 50736, 1033, 309, 311, 4084, 364, 12240, 3584, 1228, 264, 2744, 321, 16436, 337, 1184, 295, 5022, 538, 6771, 51280, 51280, 293, 4754, 538, 6771, 293, 5022, 293, 4754, 13, 51500, 51500, 400, 550, 309, 311, 23771, 1184, 551, 490, 264, 12240, 3584, 294, 264, 2128, 293, 309, 311, 884, 264, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1436053028813115, "compression_ratio": 1.664804469273743, "no_speech_prob": 9.721534297568724e-07}, {"id": 218, "seek": 124728, "start": 1247.28, "end": 1255.12, "text": " model play and it's adding it up and it's doing the sigmoid.", "tokens": [50364, 2316, 862, 293, 309, 311, 5127, 309, 493, 293, 309, 311, 884, 264, 4556, 3280, 327, 13, 50756, 50756, 407, 1338, 309, 1542, 2293, 264, 912, 13, 50964, 50964, 6998, 380, 300, 10654, 13, 51076, 51076, 407, 291, 393, 536, 300, 437, 311, 767, 2737, 294, 957, 5245, 307, 406, 1338, 309, 311, 406, 300, 3657, 51572, 51572, 420, 5585, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.20399391467754657, "compression_ratio": 1.524822695035461, "no_speech_prob": 2.4824682895996375e-06}, {"id": 219, "seek": 124728, "start": 1255.12, "end": 1259.28, "text": " So yeah it looks exactly the same.", "tokens": [50364, 2316, 862, 293, 309, 311, 5127, 309, 493, 293, 309, 311, 884, 264, 4556, 3280, 327, 13, 50756, 50756, 407, 1338, 309, 1542, 2293, 264, 912, 13, 50964, 50964, 6998, 380, 300, 10654, 13, 51076, 51076, 407, 291, 393, 536, 300, 437, 311, 767, 2737, 294, 957, 5245, 307, 406, 1338, 309, 311, 406, 300, 3657, 51572, 51572, 420, 5585, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.20399391467754657, "compression_ratio": 1.524822695035461, "no_speech_prob": 2.4824682895996375e-06}, {"id": 220, "seek": 124728, "start": 1259.28, "end": 1261.52, "text": " Isn't that neat.", "tokens": [50364, 2316, 862, 293, 309, 311, 5127, 309, 493, 293, 309, 311, 884, 264, 4556, 3280, 327, 13, 50756, 50756, 407, 1338, 309, 1542, 2293, 264, 912, 13, 50964, 50964, 6998, 380, 300, 10654, 13, 51076, 51076, 407, 291, 393, 536, 300, 437, 311, 767, 2737, 294, 957, 5245, 307, 406, 1338, 309, 311, 406, 300, 3657, 51572, 51572, 420, 5585, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.20399391467754657, "compression_ratio": 1.524822695035461, "no_speech_prob": 2.4824682895996375e-06}, {"id": 221, "seek": 124728, "start": 1261.52, "end": 1271.44, "text": " So you can see that what's actually happening in real models is not yeah it's not that weird", "tokens": [50364, 2316, 862, 293, 309, 311, 5127, 309, 493, 293, 309, 311, 884, 264, 4556, 3280, 327, 13, 50756, 50756, 407, 1338, 309, 1542, 2293, 264, 912, 13, 50964, 50964, 6998, 380, 300, 10654, 13, 51076, 51076, 407, 291, 393, 536, 300, 437, 311, 767, 2737, 294, 957, 5245, 307, 406, 1338, 309, 311, 406, 300, 3657, 51572, 51572, 420, 5585, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.20399391467754657, "compression_ratio": 1.524822695035461, "no_speech_prob": 2.4824682895996375e-06}, {"id": 222, "seek": 124728, "start": 1271.44, "end": 1274.44, "text": " or magic.", "tokens": [50364, 2316, 862, 293, 309, 311, 5127, 309, 493, 293, 309, 311, 884, 264, 4556, 3280, 327, 13, 50756, 50756, 407, 1338, 309, 1542, 2293, 264, 912, 13, 50964, 50964, 6998, 380, 300, 10654, 13, 51076, 51076, 407, 291, 393, 536, 300, 437, 311, 767, 2737, 294, 957, 5245, 307, 406, 1338, 309, 311, 406, 300, 3657, 51572, 51572, 420, 5585, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.20399391467754657, "compression_ratio": 1.524822695035461, "no_speech_prob": 2.4824682895996375e-06}, {"id": 223, "seek": 127444, "start": 1274.44, "end": 1283.0, "text": " So Kurian is asking is PCA useful in any other areas.", "tokens": [50364, 407, 16481, 952, 307, 3365, 307, 6465, 32, 4420, 294, 604, 661, 3179, 13, 50792, 50792, 400, 264, 1867, 307, 3122, 13, 50952, 50952, 400, 437, 286, 3402, 291, 360, 498, 291, 434, 3102, 307, 1520, 484, 527, 28270, 8213, 21989, 51436, 51436, 1164, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.20478910329390546, "compression_ratio": 1.3049645390070923, "no_speech_prob": 2.902298547269311e-06}, {"id": 224, "seek": 127444, "start": 1283.0, "end": 1286.2, "text": " And the answer is absolutely.", "tokens": [50364, 407, 16481, 952, 307, 3365, 307, 6465, 32, 4420, 294, 604, 661, 3179, 13, 50792, 50792, 400, 264, 1867, 307, 3122, 13, 50952, 50952, 400, 437, 286, 3402, 291, 360, 498, 291, 434, 3102, 307, 1520, 484, 527, 28270, 8213, 21989, 51436, 51436, 1164, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.20478910329390546, "compression_ratio": 1.3049645390070923, "no_speech_prob": 2.902298547269311e-06}, {"id": 225, "seek": 127444, "start": 1286.2, "end": 1295.88, "text": " And what I suggest you do if you're interested is check out our computational linear algebra", "tokens": [50364, 407, 16481, 952, 307, 3365, 307, 6465, 32, 4420, 294, 604, 661, 3179, 13, 50792, 50792, 400, 264, 1867, 307, 3122, 13, 50952, 50952, 400, 437, 286, 3402, 291, 360, 498, 291, 434, 3102, 307, 1520, 484, 527, 28270, 8213, 21989, 51436, 51436, 1164, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.20478910329390546, "compression_ratio": 1.3049645390070923, "no_speech_prob": 2.902298547269311e-06}, {"id": 226, "seek": 127444, "start": 1295.88, "end": 1300.16, "text": " course.", "tokens": [50364, 407, 16481, 952, 307, 3365, 307, 6465, 32, 4420, 294, 604, 661, 3179, 13, 50792, 50792, 400, 264, 1867, 307, 3122, 13, 50952, 50952, 400, 437, 286, 3402, 291, 360, 498, 291, 434, 3102, 307, 1520, 484, 527, 28270, 8213, 21989, 51436, 51436, 1164, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.20478910329390546, "compression_ratio": 1.3049645390070923, "no_speech_prob": 2.902298547269311e-06}, {"id": 227, "seek": 130016, "start": 1300.16, "end": 1307.4, "text": " It's five years old now but I mean this is stuff which hasn't changed for decades really.", "tokens": [50364, 467, 311, 1732, 924, 1331, 586, 457, 286, 914, 341, 307, 1507, 597, 6132, 380, 3105, 337, 7878, 534, 13, 50726, 50726, 400, 341, 486, 2924, 291, 439, 466, 721, 411, 6465, 32, 293, 1507, 411, 300, 13, 51058, 51058, 467, 311, 406, 6217, 382, 3838, 8496, 382, 8496, 2452, 2539, 337, 17656, 433, 457, 309, 311, 2138, 51366, 51366, 411, 588, 1880, 293, 309, 311, 264, 733, 295, 551, 597, 498, 291, 528, 281, 352, 7731, 291, 458, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.10081226854439242, "compression_ratio": 1.6046511627906976, "no_speech_prob": 9.080091331270523e-06}, {"id": 228, "seek": 130016, "start": 1307.4, "end": 1314.0400000000002, "text": " And this will teach you all about things like PCA and stuff like that.", "tokens": [50364, 467, 311, 1732, 924, 1331, 586, 457, 286, 914, 341, 307, 1507, 597, 6132, 380, 3105, 337, 7878, 534, 13, 50726, 50726, 400, 341, 486, 2924, 291, 439, 466, 721, 411, 6465, 32, 293, 1507, 411, 300, 13, 51058, 51058, 467, 311, 406, 6217, 382, 3838, 8496, 382, 8496, 2452, 2539, 337, 17656, 433, 457, 309, 311, 2138, 51366, 51366, 411, 588, 1880, 293, 309, 311, 264, 733, 295, 551, 597, 498, 291, 528, 281, 352, 7731, 291, 458, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.10081226854439242, "compression_ratio": 1.6046511627906976, "no_speech_prob": 9.080091331270523e-06}, {"id": 229, "seek": 130016, "start": 1314.0400000000002, "end": 1320.2, "text": " It's not nearly as directly practical as practical deep learning for coders but it's definitely", "tokens": [50364, 467, 311, 1732, 924, 1331, 586, 457, 286, 914, 341, 307, 1507, 597, 6132, 380, 3105, 337, 7878, 534, 13, 50726, 50726, 400, 341, 486, 2924, 291, 439, 466, 721, 411, 6465, 32, 293, 1507, 411, 300, 13, 51058, 51058, 467, 311, 406, 6217, 382, 3838, 8496, 382, 8496, 2452, 2539, 337, 17656, 433, 457, 309, 311, 2138, 51366, 51366, 411, 588, 1880, 293, 309, 311, 264, 733, 295, 551, 597, 498, 291, 528, 281, 352, 7731, 291, 458, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.10081226854439242, "compression_ratio": 1.6046511627906976, "no_speech_prob": 9.080091331270523e-06}, {"id": 230, "seek": 130016, "start": 1320.2, "end": 1326.44, "text": " like very interesting and it's the kind of thing which if you want to go deeper you know", "tokens": [50364, 467, 311, 1732, 924, 1331, 586, 457, 286, 914, 341, 307, 1507, 597, 6132, 380, 3105, 337, 7878, 534, 13, 50726, 50726, 400, 341, 486, 2924, 291, 439, 466, 721, 411, 6465, 32, 293, 1507, 411, 300, 13, 51058, 51058, 467, 311, 406, 6217, 382, 3838, 8496, 382, 8496, 2452, 2539, 337, 17656, 433, 457, 309, 311, 2138, 51366, 51366, 411, 588, 1880, 293, 309, 311, 264, 733, 295, 551, 597, 498, 291, 528, 281, 352, 7731, 291, 458, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.10081226854439242, "compression_ratio": 1.6046511627906976, "no_speech_prob": 9.080091331270523e-06}, {"id": 231, "seek": 132644, "start": 1326.44, "end": 1334.2, "text": " it can become pretty useful later along your path.", "tokens": [50364, 309, 393, 1813, 1238, 4420, 1780, 2051, 428, 3100, 13, 50752, 50752, 1033, 370, 510, 311, 746, 1646, 1880, 321, 393, 360, 13, 50992, 50992, 961, 311, 4444, 264, 3169, 6771, 13, 51110, 51110, 407, 300, 311, 294, 527, 2316, 309, 311, 264, 3174, 17443, 293, 309, 311, 264, 3364, 19667, 300, 9953, 51, 284, 339, 51310, 51310, 7829, 13, 51404, 51404, 1033, 293, 586, 321, 393, 7620, 264, 3169, 34570, 295, 264, 18825, 929, 666, 1080, 1508, 7348, 293, 321, 393, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.13750332455302394, "compression_ratio": 1.5742574257425743, "no_speech_prob": 4.092883045814233e-06}, {"id": 232, "seek": 132644, "start": 1334.2, "end": 1339.0, "text": " Okay so here's something else interesting we can do.", "tokens": [50364, 309, 393, 1813, 1238, 4420, 1780, 2051, 428, 3100, 13, 50752, 50752, 1033, 370, 510, 311, 746, 1646, 1880, 321, 393, 360, 13, 50992, 50992, 961, 311, 4444, 264, 3169, 6771, 13, 51110, 51110, 407, 300, 311, 294, 527, 2316, 309, 311, 264, 3174, 17443, 293, 309, 311, 264, 3364, 19667, 300, 9953, 51, 284, 339, 51310, 51310, 7829, 13, 51404, 51404, 1033, 293, 586, 321, 393, 7620, 264, 3169, 34570, 295, 264, 18825, 929, 666, 1080, 1508, 7348, 293, 321, 393, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.13750332455302394, "compression_ratio": 1.5742574257425743, "no_speech_prob": 4.092883045814233e-06}, {"id": 233, "seek": 132644, "start": 1339.0, "end": 1341.3600000000001, "text": " Let's grab the movie factors.", "tokens": [50364, 309, 393, 1813, 1238, 4420, 1780, 2051, 428, 3100, 13, 50752, 50752, 1033, 370, 510, 311, 746, 1646, 1880, 321, 393, 360, 13, 50992, 50992, 961, 311, 4444, 264, 3169, 6771, 13, 51110, 51110, 407, 300, 311, 294, 527, 2316, 309, 311, 264, 3174, 17443, 293, 309, 311, 264, 3364, 19667, 300, 9953, 51, 284, 339, 51310, 51310, 7829, 13, 51404, 51404, 1033, 293, 586, 321, 393, 7620, 264, 3169, 34570, 295, 264, 18825, 929, 666, 1080, 1508, 7348, 293, 321, 393, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.13750332455302394, "compression_ratio": 1.5742574257425743, "no_speech_prob": 4.092883045814233e-06}, {"id": 234, "seek": 132644, "start": 1341.3600000000001, "end": 1345.3600000000001, "text": " So that's in our model it's the item weights and it's the weight attribute that PyTorch", "tokens": [50364, 309, 393, 1813, 1238, 4420, 1780, 2051, 428, 3100, 13, 50752, 50752, 1033, 370, 510, 311, 746, 1646, 1880, 321, 393, 360, 13, 50992, 50992, 961, 311, 4444, 264, 3169, 6771, 13, 51110, 51110, 407, 300, 311, 294, 527, 2316, 309, 311, 264, 3174, 17443, 293, 309, 311, 264, 3364, 19667, 300, 9953, 51, 284, 339, 51310, 51310, 7829, 13, 51404, 51404, 1033, 293, 586, 321, 393, 7620, 264, 3169, 34570, 295, 264, 18825, 929, 666, 1080, 1508, 7348, 293, 321, 393, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.13750332455302394, "compression_ratio": 1.5742574257425743, "no_speech_prob": 4.092883045814233e-06}, {"id": 235, "seek": 132644, "start": 1345.3600000000001, "end": 1347.24, "text": " creates.", "tokens": [50364, 309, 393, 1813, 1238, 4420, 1780, 2051, 428, 3100, 13, 50752, 50752, 1033, 370, 510, 311, 746, 1646, 1880, 321, 393, 360, 13, 50992, 50992, 961, 311, 4444, 264, 3169, 6771, 13, 51110, 51110, 407, 300, 311, 294, 527, 2316, 309, 311, 264, 3174, 17443, 293, 309, 311, 264, 3364, 19667, 300, 9953, 51, 284, 339, 51310, 51310, 7829, 13, 51404, 51404, 1033, 293, 586, 321, 393, 7620, 264, 3169, 34570, 295, 264, 18825, 929, 666, 1080, 1508, 7348, 293, 321, 393, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.13750332455302394, "compression_ratio": 1.5742574257425743, "no_speech_prob": 4.092883045814233e-06}, {"id": 236, "seek": 132644, "start": 1347.24, "end": 1356.16, "text": " Okay and now we can convert the movie Silence of the Lambs into its class ID and we can", "tokens": [50364, 309, 393, 1813, 1238, 4420, 1780, 2051, 428, 3100, 13, 50752, 50752, 1033, 370, 510, 311, 746, 1646, 1880, 321, 393, 360, 13, 50992, 50992, 961, 311, 4444, 264, 3169, 6771, 13, 51110, 51110, 407, 300, 311, 294, 527, 2316, 309, 311, 264, 3174, 17443, 293, 309, 311, 264, 3364, 19667, 300, 9953, 51, 284, 339, 51310, 51310, 7829, 13, 51404, 51404, 1033, 293, 586, 321, 393, 7620, 264, 3169, 34570, 295, 264, 18825, 929, 666, 1080, 1508, 7348, 293, 321, 393, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.13750332455302394, "compression_ratio": 1.5742574257425743, "no_speech_prob": 4.092883045814233e-06}, {"id": 237, "seek": 135616, "start": 1356.16, "end": 1361.44, "text": " do that with object to ID, O to I for the titles.", "tokens": [50364, 360, 300, 365, 2657, 281, 7348, 11, 422, 281, 286, 337, 264, 12992, 13, 50628, 50628, 400, 370, 300, 311, 264, 3169, 8186, 295, 34570, 295, 264, 18825, 929, 13, 50782, 50782, 400, 437, 321, 393, 360, 586, 307, 321, 393, 574, 807, 439, 295, 264, 6233, 294, 527, 48994, 6771, 293, 51132, 51132, 8873, 577, 1400, 4936, 1184, 8062, 307, 11, 1184, 12240, 3584, 8062, 307, 490, 341, 472, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.12060301462809245, "compression_ratio": 1.5480225988700564, "no_speech_prob": 2.2603123852604767e-06}, {"id": 238, "seek": 135616, "start": 1361.44, "end": 1364.52, "text": " And so that's the movie index of Silence of the Lambs.", "tokens": [50364, 360, 300, 365, 2657, 281, 7348, 11, 422, 281, 286, 337, 264, 12992, 13, 50628, 50628, 400, 370, 300, 311, 264, 3169, 8186, 295, 34570, 295, 264, 18825, 929, 13, 50782, 50782, 400, 437, 321, 393, 360, 586, 307, 321, 393, 574, 807, 439, 295, 264, 6233, 294, 527, 48994, 6771, 293, 51132, 51132, 8873, 577, 1400, 4936, 1184, 8062, 307, 11, 1184, 12240, 3584, 8062, 307, 490, 341, 472, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.12060301462809245, "compression_ratio": 1.5480225988700564, "no_speech_prob": 2.2603123852604767e-06}, {"id": 239, "seek": 135616, "start": 1364.52, "end": 1371.52, "text": " And what we can do now is we can look through all of the movies in our latent factors and", "tokens": [50364, 360, 300, 365, 2657, 281, 7348, 11, 422, 281, 286, 337, 264, 12992, 13, 50628, 50628, 400, 370, 300, 311, 264, 3169, 8186, 295, 34570, 295, 264, 18825, 929, 13, 50782, 50782, 400, 437, 321, 393, 360, 586, 307, 321, 393, 574, 807, 439, 295, 264, 6233, 294, 527, 48994, 6771, 293, 51132, 51132, 8873, 577, 1400, 4936, 1184, 8062, 307, 11, 1184, 12240, 3584, 8062, 307, 490, 341, 472, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.12060301462809245, "compression_ratio": 1.5480225988700564, "no_speech_prob": 2.2603123852604767e-06}, {"id": 240, "seek": 135616, "start": 1371.52, "end": 1381.66, "text": " calculate how far apart each vector is, each embedding vector is from this one.", "tokens": [50364, 360, 300, 365, 2657, 281, 7348, 11, 422, 281, 286, 337, 264, 12992, 13, 50628, 50628, 400, 370, 300, 311, 264, 3169, 8186, 295, 34570, 295, 264, 18825, 929, 13, 50782, 50782, 400, 437, 321, 393, 360, 586, 307, 321, 393, 574, 807, 439, 295, 264, 6233, 294, 527, 48994, 6771, 293, 51132, 51132, 8873, 577, 1400, 4936, 1184, 8062, 307, 11, 1184, 12240, 3584, 8062, 307, 490, 341, 472, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.12060301462809245, "compression_ratio": 1.5480225988700564, "no_speech_prob": 2.2603123852604767e-06}, {"id": 241, "seek": 138166, "start": 1381.66, "end": 1387.0800000000002, "text": " And this cosine similarity is very similar to basically the Euclidean distance you know", "tokens": [50364, 400, 341, 23565, 32194, 307, 588, 2531, 281, 1936, 264, 462, 1311, 31264, 282, 4560, 291, 458, 50635, 50635, 264, 733, 295, 264, 5593, 2408, 8889, 295, 264, 7300, 457, 309, 2710, 5660, 309, 13, 51053, 51053, 407, 309, 311, 1936, 264, 5802, 1296, 264, 18875, 13, 51235, 51235, 407, 341, 307, 516, 281, 8873, 577, 2531, 1184, 3169, 307, 281, 264, 34570, 295, 264, 18825, 929, 51557, 51557, 2361, 322, 613, 48994, 6771, 13, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.1548249087756193, "compression_ratio": 1.6331658291457287, "no_speech_prob": 4.2227929952787235e-06}, {"id": 242, "seek": 138166, "start": 1387.0800000000002, "end": 1395.44, "text": " the kind of the root sum squared of the differences but it normalizes it.", "tokens": [50364, 400, 341, 23565, 32194, 307, 588, 2531, 281, 1936, 264, 462, 1311, 31264, 282, 4560, 291, 458, 50635, 50635, 264, 733, 295, 264, 5593, 2408, 8889, 295, 264, 7300, 457, 309, 2710, 5660, 309, 13, 51053, 51053, 407, 309, 311, 1936, 264, 5802, 1296, 264, 18875, 13, 51235, 51235, 407, 341, 307, 516, 281, 8873, 577, 2531, 1184, 3169, 307, 281, 264, 34570, 295, 264, 18825, 929, 51557, 51557, 2361, 322, 613, 48994, 6771, 13, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.1548249087756193, "compression_ratio": 1.6331658291457287, "no_speech_prob": 4.2227929952787235e-06}, {"id": 243, "seek": 138166, "start": 1395.44, "end": 1399.0800000000002, "text": " So it's basically the angle between the vectors.", "tokens": [50364, 400, 341, 23565, 32194, 307, 588, 2531, 281, 1936, 264, 462, 1311, 31264, 282, 4560, 291, 458, 50635, 50635, 264, 733, 295, 264, 5593, 2408, 8889, 295, 264, 7300, 457, 309, 2710, 5660, 309, 13, 51053, 51053, 407, 309, 311, 1936, 264, 5802, 1296, 264, 18875, 13, 51235, 51235, 407, 341, 307, 516, 281, 8873, 577, 2531, 1184, 3169, 307, 281, 264, 34570, 295, 264, 18825, 929, 51557, 51557, 2361, 322, 613, 48994, 6771, 13, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.1548249087756193, "compression_ratio": 1.6331658291457287, "no_speech_prob": 4.2227929952787235e-06}, {"id": 244, "seek": 138166, "start": 1399.0800000000002, "end": 1405.52, "text": " So this is going to calculate how similar each movie is to the Silence of the Lambs", "tokens": [50364, 400, 341, 23565, 32194, 307, 588, 2531, 281, 1936, 264, 462, 1311, 31264, 282, 4560, 291, 458, 50635, 50635, 264, 733, 295, 264, 5593, 2408, 8889, 295, 264, 7300, 457, 309, 2710, 5660, 309, 13, 51053, 51053, 407, 309, 311, 1936, 264, 5802, 1296, 264, 18875, 13, 51235, 51235, 407, 341, 307, 516, 281, 8873, 577, 2531, 1184, 3169, 307, 281, 264, 34570, 295, 264, 18825, 929, 51557, 51557, 2361, 322, 613, 48994, 6771, 13, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.1548249087756193, "compression_ratio": 1.6331658291457287, "no_speech_prob": 4.2227929952787235e-06}, {"id": 245, "seek": 138166, "start": 1405.52, "end": 1408.24, "text": " based on these latent factors.", "tokens": [50364, 400, 341, 23565, 32194, 307, 588, 2531, 281, 1936, 264, 462, 1311, 31264, 282, 4560, 291, 458, 50635, 50635, 264, 733, 295, 264, 5593, 2408, 8889, 295, 264, 7300, 457, 309, 2710, 5660, 309, 13, 51053, 51053, 407, 309, 311, 1936, 264, 5802, 1296, 264, 18875, 13, 51235, 51235, 407, 341, 307, 516, 281, 8873, 577, 2531, 1184, 3169, 307, 281, 264, 34570, 295, 264, 18825, 929, 51557, 51557, 2361, 322, 613, 48994, 6771, 13, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.1548249087756193, "compression_ratio": 1.6331658291457287, "no_speech_prob": 4.2227929952787235e-06}, {"id": 246, "seek": 140824, "start": 1408.24, "end": 1415.32, "text": " And so then we can find which ID is the closest.", "tokens": [50364, 400, 370, 550, 321, 393, 915, 597, 7348, 307, 264, 13699, 13, 50718, 50718, 865, 370, 2361, 322, 341, 12240, 3584, 4560, 264, 13699, 307, 5502, 376, 337, 6568, 597, 1669, 257, 51200, 51200, 688, 295, 2020, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.2623527390616281, "compression_ratio": 1.3043478260869565, "no_speech_prob": 5.122893753650715e-07}, {"id": 247, "seek": 140824, "start": 1415.32, "end": 1424.96, "text": " Yeah so based on this embedding distance the closest is dial M for murder which makes a", "tokens": [50364, 400, 370, 550, 321, 393, 915, 597, 7348, 307, 264, 13699, 13, 50718, 50718, 865, 370, 2361, 322, 341, 12240, 3584, 4560, 264, 13699, 307, 5502, 376, 337, 6568, 597, 1669, 257, 51200, 51200, 688, 295, 2020, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.2623527390616281, "compression_ratio": 1.3043478260869565, "no_speech_prob": 5.122893753650715e-07}, {"id": 248, "seek": 140824, "start": 1424.96, "end": 1436.48, "text": " lot of sense.", "tokens": [50364, 400, 370, 550, 321, 393, 915, 597, 7348, 307, 264, 13699, 13, 50718, 50718, 865, 370, 2361, 322, 341, 12240, 3584, 4560, 264, 13699, 307, 5502, 376, 337, 6568, 597, 1669, 257, 51200, 51200, 688, 295, 2020, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.2623527390616281, "compression_ratio": 1.3043478260869565, "no_speech_prob": 5.122893753650715e-07}, {"id": 249, "seek": 143648, "start": 1436.48, "end": 1441.56, "text": " I'm not going to discuss it today but in the book there's also some discussion about what's", "tokens": [50364, 286, 478, 406, 516, 281, 2248, 309, 965, 457, 294, 264, 1446, 456, 311, 611, 512, 5017, 466, 437, 311, 50618, 50618, 1219, 264, 11450, 19639, 3759, 1154, 597, 307, 264, 1168, 295, 411, 498, 291, 600, 658, 257, 777, 2237, 50854, 50854, 420, 257, 777, 1674, 577, 576, 291, 483, 1409, 365, 1455, 10434, 2212, 300, 291, 51208, 51208, 500, 380, 362, 604, 3894, 2503, 365, 597, 281, 652, 10434, 13, 51362, 51362], "temperature": 0.0, "avg_logprob": -0.09215932770779259, "compression_ratio": 1.6390243902439023, "no_speech_prob": 2.058024620055221e-06}, {"id": 250, "seek": 143648, "start": 1441.56, "end": 1446.28, "text": " called the bootstrapping problem which is the question of like if you've got a new company", "tokens": [50364, 286, 478, 406, 516, 281, 2248, 309, 965, 457, 294, 264, 1446, 456, 311, 611, 512, 5017, 466, 437, 311, 50618, 50618, 1219, 264, 11450, 19639, 3759, 1154, 597, 307, 264, 1168, 295, 411, 498, 291, 600, 658, 257, 777, 2237, 50854, 50854, 420, 257, 777, 1674, 577, 576, 291, 483, 1409, 365, 1455, 10434, 2212, 300, 291, 51208, 51208, 500, 380, 362, 604, 3894, 2503, 365, 597, 281, 652, 10434, 13, 51362, 51362], "temperature": 0.0, "avg_logprob": -0.09215932770779259, "compression_ratio": 1.6390243902439023, "no_speech_prob": 2.058024620055221e-06}, {"id": 251, "seek": 143648, "start": 1446.28, "end": 1453.3600000000001, "text": " or a new product how would you get started with making recommendations given that you", "tokens": [50364, 286, 478, 406, 516, 281, 2248, 309, 965, 457, 294, 264, 1446, 456, 311, 611, 512, 5017, 466, 437, 311, 50618, 50618, 1219, 264, 11450, 19639, 3759, 1154, 597, 307, 264, 1168, 295, 411, 498, 291, 600, 658, 257, 777, 2237, 50854, 50854, 420, 257, 777, 1674, 577, 576, 291, 483, 1409, 365, 1455, 10434, 2212, 300, 291, 51208, 51208, 500, 380, 362, 604, 3894, 2503, 365, 597, 281, 652, 10434, 13, 51362, 51362], "temperature": 0.0, "avg_logprob": -0.09215932770779259, "compression_ratio": 1.6390243902439023, "no_speech_prob": 2.058024620055221e-06}, {"id": 252, "seek": 143648, "start": 1453.3600000000001, "end": 1456.44, "text": " don't have any previous history with which to make recommendations.", "tokens": [50364, 286, 478, 406, 516, 281, 2248, 309, 965, 457, 294, 264, 1446, 456, 311, 611, 512, 5017, 466, 437, 311, 50618, 50618, 1219, 264, 11450, 19639, 3759, 1154, 597, 307, 264, 1168, 295, 411, 498, 291, 600, 658, 257, 777, 2237, 50854, 50854, 420, 257, 777, 1674, 577, 576, 291, 483, 1409, 365, 1455, 10434, 2212, 300, 291, 51208, 51208, 500, 380, 362, 604, 3894, 2503, 365, 597, 281, 652, 10434, 13, 51362, 51362], "temperature": 0.0, "avg_logprob": -0.09215932770779259, "compression_ratio": 1.6390243902439023, "no_speech_prob": 2.058024620055221e-06}, {"id": 253, "seek": 145644, "start": 1456.44, "end": 1466.68, "text": " And that's a very interesting problem that you can read about in the book.", "tokens": [50364, 400, 300, 311, 257, 588, 1880, 1154, 300, 291, 393, 1401, 466, 294, 264, 1446, 13, 50876, 50876, 823, 300, 311, 472, 636, 281, 360, 16555, 30822, 597, 307, 689, 321, 1884, 300, 360, 300, 8141, 51466, 51466, 19372, 5380, 1228, 439, 729, 5893, 3383, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.10480910301208496, "compression_ratio": 1.4342105263157894, "no_speech_prob": 1.267922584702319e-06}, {"id": 254, "seek": 145644, "start": 1466.68, "end": 1478.48, "text": " Now that's one way to do collaborative filtering which is where we create that do that matrix", "tokens": [50364, 400, 300, 311, 257, 588, 1880, 1154, 300, 291, 393, 1401, 466, 294, 264, 1446, 13, 50876, 50876, 823, 300, 311, 472, 636, 281, 360, 16555, 30822, 597, 307, 689, 321, 1884, 300, 360, 300, 8141, 51466, 51466, 19372, 5380, 1228, 439, 729, 5893, 3383, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.10480910301208496, "compression_ratio": 1.4342105263157894, "no_speech_prob": 1.267922584702319e-06}, {"id": 255, "seek": 145644, "start": 1478.48, "end": 1482.0800000000002, "text": " completion exercise using all those dot products.", "tokens": [50364, 400, 300, 311, 257, 588, 1880, 1154, 300, 291, 393, 1401, 466, 294, 264, 1446, 13, 50876, 50876, 823, 300, 311, 472, 636, 281, 360, 16555, 30822, 597, 307, 689, 321, 1884, 300, 360, 300, 8141, 51466, 51466, 19372, 5380, 1228, 439, 729, 5893, 3383, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.10480910301208496, "compression_ratio": 1.4342105263157894, "no_speech_prob": 1.267922584702319e-06}, {"id": 256, "seek": 148208, "start": 1482.08, "end": 1489.32, "text": " There's a different way however which is we can use deep learning and to do it with deep", "tokens": [50364, 821, 311, 257, 819, 636, 4461, 597, 307, 321, 393, 764, 2452, 2539, 293, 281, 360, 309, 365, 2452, 50726, 50726, 2539, 437, 321, 727, 360, 307, 321, 727, 1936, 1884, 527, 4195, 293, 3174, 12240, 29432, 382, 680, 51194, 51194, 7713, 293, 550, 321, 727, 1884, 257, 42881, 2316, 13, 51402, 51402, 407, 42881, 2316, 307, 445, 7914, 295, 257, 2452, 2539, 18161, 3209, 294, 1668, 293, 437, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14104796109134204, "compression_ratio": 1.7417582417582418, "no_speech_prob": 1.7330394257442094e-06}, {"id": 257, "seek": 148208, "start": 1489.32, "end": 1498.6799999999998, "text": " learning what we could do is we could basically create our user and item embeddings as per", "tokens": [50364, 821, 311, 257, 819, 636, 4461, 597, 307, 321, 393, 764, 2452, 2539, 293, 281, 360, 309, 365, 2452, 50726, 50726, 2539, 437, 321, 727, 360, 307, 321, 727, 1936, 1884, 527, 4195, 293, 3174, 12240, 29432, 382, 680, 51194, 51194, 7713, 293, 550, 321, 727, 1884, 257, 42881, 2316, 13, 51402, 51402, 407, 42881, 2316, 307, 445, 7914, 295, 257, 2452, 2539, 18161, 3209, 294, 1668, 293, 437, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14104796109134204, "compression_ratio": 1.7417582417582418, "no_speech_prob": 1.7330394257442094e-06}, {"id": 258, "seek": 148208, "start": 1498.6799999999998, "end": 1502.84, "text": " usual and then we could create a sequential model.", "tokens": [50364, 821, 311, 257, 819, 636, 4461, 597, 307, 321, 393, 764, 2452, 2539, 293, 281, 360, 309, 365, 2452, 50726, 50726, 2539, 437, 321, 727, 360, 307, 321, 727, 1936, 1884, 527, 4195, 293, 3174, 12240, 29432, 382, 680, 51194, 51194, 7713, 293, 550, 321, 727, 1884, 257, 42881, 2316, 13, 51402, 51402, 407, 42881, 2316, 307, 445, 7914, 295, 257, 2452, 2539, 18161, 3209, 294, 1668, 293, 437, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14104796109134204, "compression_ratio": 1.7417582417582418, "no_speech_prob": 1.7330394257442094e-06}, {"id": 259, "seek": 148208, "start": 1502.84, "end": 1511.1599999999999, "text": " So sequential model is just layers of a deep learning neural network in order and what", "tokens": [50364, 821, 311, 257, 819, 636, 4461, 597, 307, 321, 393, 764, 2452, 2539, 293, 281, 360, 309, 365, 2452, 50726, 50726, 2539, 437, 321, 727, 360, 307, 321, 727, 1936, 1884, 527, 4195, 293, 3174, 12240, 29432, 382, 680, 51194, 51194, 7713, 293, 550, 321, 727, 1884, 257, 42881, 2316, 13, 51402, 51402, 407, 42881, 2316, 307, 445, 7914, 295, 257, 2452, 2539, 18161, 3209, 294, 1668, 293, 437, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14104796109134204, "compression_ratio": 1.7417582417582418, "no_speech_prob": 1.7330394257442094e-06}, {"id": 260, "seek": 151116, "start": 1511.16, "end": 1517.92, "text": " we could do is we could just concatenate so in forward we could just concatenate the user", "tokens": [50364, 321, 727, 360, 307, 321, 727, 445, 1588, 7186, 473, 370, 294, 2128, 321, 727, 445, 1588, 7186, 473, 264, 4195, 50702, 50702, 293, 3174, 12240, 29432, 1214, 293, 550, 360, 257, 2158, 370, 341, 307, 1936, 257, 2167, 7633, 51132, 51132, 4583, 18161, 3209, 293, 550, 257, 8213, 4583, 412, 264, 917, 281, 1884, 257, 2167, 5598, 13, 51394, 51394, 407, 341, 307, 264, 588, 291, 458, 1002, 311, 881, 2199, 18161, 2533, 2293, 264, 912, 382, 264, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.11114341092396932, "compression_ratio": 1.8, "no_speech_prob": 9.570791235091747e-07}, {"id": 261, "seek": 151116, "start": 1517.92, "end": 1526.52, "text": " and item embeddings together and then do a value so this is basically a single hidden", "tokens": [50364, 321, 727, 360, 307, 321, 727, 445, 1588, 7186, 473, 370, 294, 2128, 321, 727, 445, 1588, 7186, 473, 264, 4195, 50702, 50702, 293, 3174, 12240, 29432, 1214, 293, 550, 360, 257, 2158, 370, 341, 307, 1936, 257, 2167, 7633, 51132, 51132, 4583, 18161, 3209, 293, 550, 257, 8213, 4583, 412, 264, 917, 281, 1884, 257, 2167, 5598, 13, 51394, 51394, 407, 341, 307, 264, 588, 291, 458, 1002, 311, 881, 2199, 18161, 2533, 2293, 264, 912, 382, 264, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.11114341092396932, "compression_ratio": 1.8, "no_speech_prob": 9.570791235091747e-07}, {"id": 262, "seek": 151116, "start": 1526.52, "end": 1531.76, "text": " layer neural network and then a linear layer at the end to create a single output.", "tokens": [50364, 321, 727, 360, 307, 321, 727, 445, 1588, 7186, 473, 370, 294, 2128, 321, 727, 445, 1588, 7186, 473, 264, 4195, 50702, 50702, 293, 3174, 12240, 29432, 1214, 293, 550, 360, 257, 2158, 370, 341, 307, 1936, 257, 2167, 7633, 51132, 51132, 4583, 18161, 3209, 293, 550, 257, 8213, 4583, 412, 264, 917, 281, 1884, 257, 2167, 5598, 13, 51394, 51394, 407, 341, 307, 264, 588, 291, 458, 1002, 311, 881, 2199, 18161, 2533, 2293, 264, 912, 382, 264, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.11114341092396932, "compression_ratio": 1.8, "no_speech_prob": 9.570791235091747e-07}, {"id": 263, "seek": 151116, "start": 1531.76, "end": 1537.96, "text": " So this is the very you know world's most simple neural net exactly the same as the", "tokens": [50364, 321, 727, 360, 307, 321, 727, 445, 1588, 7186, 473, 370, 294, 2128, 321, 727, 445, 1588, 7186, 473, 264, 4195, 50702, 50702, 293, 3174, 12240, 29432, 1214, 293, 550, 360, 257, 2158, 370, 341, 307, 1936, 257, 2167, 7633, 51132, 51132, 4583, 18161, 3209, 293, 550, 257, 8213, 4583, 412, 264, 917, 281, 1884, 257, 2167, 5598, 13, 51394, 51394, 407, 341, 307, 264, 588, 291, 458, 1002, 311, 881, 2199, 18161, 2533, 2293, 264, 912, 382, 264, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.11114341092396932, "compression_ratio": 1.8, "no_speech_prob": 9.570791235091747e-07}, {"id": 264, "seek": 153796, "start": 1537.96, "end": 1545.76, "text": " style that we created back here in our neural net from scratch.", "tokens": [50364, 3758, 300, 321, 2942, 646, 510, 294, 527, 18161, 2533, 490, 8459, 13, 50754, 50754, 639, 307, 2293, 264, 912, 457, 321, 434, 1228, 9953, 51, 284, 339, 311, 14980, 281, 360, 309, 544, 3612, 13, 51254, 51254, 407, 294, 264, 2128, 510, 321, 434, 516, 281, 294, 264, 912, 2293, 264, 912, 2098, 321, 362, 949, 51466, 51466, 321, 603, 574, 493, 264, 4195, 12240, 29432, 293, 321, 603, 574, 493, 264, 3174, 12240, 29432, 293, 550, 341, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.09920504006994776, "compression_ratio": 1.7, "no_speech_prob": 1.392543481415487e-06}, {"id": 265, "seek": 153796, "start": 1545.76, "end": 1555.76, "text": " This is exactly the same but we're using PyTorch's functionality to do it more easily.", "tokens": [50364, 3758, 300, 321, 2942, 646, 510, 294, 527, 18161, 2533, 490, 8459, 13, 50754, 50754, 639, 307, 2293, 264, 912, 457, 321, 434, 1228, 9953, 51, 284, 339, 311, 14980, 281, 360, 309, 544, 3612, 13, 51254, 51254, 407, 294, 264, 2128, 510, 321, 434, 516, 281, 294, 264, 912, 2293, 264, 912, 2098, 321, 362, 949, 51466, 51466, 321, 603, 574, 493, 264, 4195, 12240, 29432, 293, 321, 603, 574, 493, 264, 3174, 12240, 29432, 293, 550, 341, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.09920504006994776, "compression_ratio": 1.7, "no_speech_prob": 1.392543481415487e-06}, {"id": 266, "seek": 153796, "start": 1555.76, "end": 1560.0, "text": " So in the forward here we're going to in the same exactly the same ways we have before", "tokens": [50364, 3758, 300, 321, 2942, 646, 510, 294, 527, 18161, 2533, 490, 8459, 13, 50754, 50754, 639, 307, 2293, 264, 912, 457, 321, 434, 1228, 9953, 51, 284, 339, 311, 14980, 281, 360, 309, 544, 3612, 13, 51254, 51254, 407, 294, 264, 2128, 510, 321, 434, 516, 281, 294, 264, 912, 2293, 264, 912, 2098, 321, 362, 949, 51466, 51466, 321, 603, 574, 493, 264, 4195, 12240, 29432, 293, 321, 603, 574, 493, 264, 3174, 12240, 29432, 293, 550, 341, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.09920504006994776, "compression_ratio": 1.7, "no_speech_prob": 1.392543481415487e-06}, {"id": 267, "seek": 153796, "start": 1560.0, "end": 1565.8400000000001, "text": " we'll look up the user embeddings and we'll look up the item embeddings and then this", "tokens": [50364, 3758, 300, 321, 2942, 646, 510, 294, 527, 18161, 2533, 490, 8459, 13, 50754, 50754, 639, 307, 2293, 264, 912, 457, 321, 434, 1228, 9953, 51, 284, 339, 311, 14980, 281, 360, 309, 544, 3612, 13, 51254, 51254, 407, 294, 264, 2128, 510, 321, 434, 516, 281, 294, 264, 912, 2293, 264, 912, 2098, 321, 362, 949, 51466, 51466, 321, 603, 574, 493, 264, 4195, 12240, 29432, 293, 321, 603, 574, 493, 264, 3174, 12240, 29432, 293, 550, 341, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.09920504006994776, "compression_ratio": 1.7, "no_speech_prob": 1.392543481415487e-06}, {"id": 268, "seek": 156584, "start": 1565.84, "end": 1569.84, "text": " is new this is where we concatenate those two things together and put it through our", "tokens": [50364, 307, 777, 341, 307, 689, 321, 1588, 7186, 473, 729, 732, 721, 1214, 293, 829, 309, 807, 527, 50564, 50564, 18161, 3209, 293, 550, 2721, 360, 527, 4556, 3280, 327, 13, 50872, 50872, 823, 472, 551, 819, 341, 565, 307, 300, 321, 434, 516, 281, 1029, 15968, 48698, 281, 2573, 484, 577, 51324, 51324, 955, 527, 12240, 29432, 820, 312, 293, 370, 15968, 48698, 575, 746, 1219, 483, 12240, 3584, 11602, 293, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.09826906731254176, "compression_ratio": 1.577319587628866, "no_speech_prob": 3.0415776564041153e-06}, {"id": 269, "seek": 156584, "start": 1569.84, "end": 1576.0, "text": " neural network and then finally do our sigmoid.", "tokens": [50364, 307, 777, 341, 307, 689, 321, 1588, 7186, 473, 729, 732, 721, 1214, 293, 829, 309, 807, 527, 50564, 50564, 18161, 3209, 293, 550, 2721, 360, 527, 4556, 3280, 327, 13, 50872, 50872, 823, 472, 551, 819, 341, 565, 307, 300, 321, 434, 516, 281, 1029, 15968, 48698, 281, 2573, 484, 577, 51324, 51324, 955, 527, 12240, 29432, 820, 312, 293, 370, 15968, 48698, 575, 746, 1219, 483, 12240, 3584, 11602, 293, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.09826906731254176, "compression_ratio": 1.577319587628866, "no_speech_prob": 3.0415776564041153e-06}, {"id": 270, "seek": 156584, "start": 1576.0, "end": 1585.04, "text": " Now one thing different this time is that we're going to ask FastAI to figure out how", "tokens": [50364, 307, 777, 341, 307, 689, 321, 1588, 7186, 473, 729, 732, 721, 1214, 293, 829, 309, 807, 527, 50564, 50564, 18161, 3209, 293, 550, 2721, 360, 527, 4556, 3280, 327, 13, 50872, 50872, 823, 472, 551, 819, 341, 565, 307, 300, 321, 434, 516, 281, 1029, 15968, 48698, 281, 2573, 484, 577, 51324, 51324, 955, 527, 12240, 29432, 820, 312, 293, 370, 15968, 48698, 575, 746, 1219, 483, 12240, 3584, 11602, 293, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.09826906731254176, "compression_ratio": 1.577319587628866, "no_speech_prob": 3.0415776564041153e-06}, {"id": 271, "seek": 156584, "start": 1585.04, "end": 1589.8, "text": " big our embeddings should be and so FastAI has something called get embedding sizes and", "tokens": [50364, 307, 777, 341, 307, 689, 321, 1588, 7186, 473, 729, 732, 721, 1214, 293, 829, 309, 807, 527, 50564, 50564, 18161, 3209, 293, 550, 2721, 360, 527, 4556, 3280, 327, 13, 50872, 50872, 823, 472, 551, 819, 341, 565, 307, 300, 321, 434, 516, 281, 1029, 15968, 48698, 281, 2573, 484, 577, 51324, 51324, 955, 527, 12240, 29432, 820, 312, 293, 370, 15968, 48698, 575, 746, 1219, 483, 12240, 3584, 11602, 293, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.09826906731254176, "compression_ratio": 1.577319587628866, "no_speech_prob": 3.0415776564041153e-06}, {"id": 272, "seek": 158980, "start": 1589.8, "end": 1597.8799999999999, "text": " it just uses a rule of thumb that says that for 944 users we recommend 74 factor embeddings", "tokens": [50364, 309, 445, 4960, 257, 4978, 295, 9298, 300, 1619, 300, 337, 1722, 13912, 5022, 321, 2748, 28868, 5952, 12240, 29432, 50768, 50768, 293, 337, 3165, 16824, 6233, 420, 307, 309, 264, 661, 636, 926, 286, 393, 380, 1604, 321, 2748, 45937, 6771, 51126, 51126, 337, 428, 12240, 29432, 13, 51261, 51261, 407, 300, 311, 437, 729, 11602, 366, 13, 51472, 51472], "temperature": 0.0, "avg_logprob": -0.13910457066127233, "compression_ratio": 1.4658385093167703, "no_speech_prob": 2.6841894396056887e-06}, {"id": 273, "seek": 158980, "start": 1597.8799999999999, "end": 1605.04, "text": " and for 1665 movies or is it the other way around I can't remember we recommend 102 factors", "tokens": [50364, 309, 445, 4960, 257, 4978, 295, 9298, 300, 1619, 300, 337, 1722, 13912, 5022, 321, 2748, 28868, 5952, 12240, 29432, 50768, 50768, 293, 337, 3165, 16824, 6233, 420, 307, 309, 264, 661, 636, 926, 286, 393, 380, 1604, 321, 2748, 45937, 6771, 51126, 51126, 337, 428, 12240, 29432, 13, 51261, 51261, 407, 300, 311, 437, 729, 11602, 366, 13, 51472, 51472], "temperature": 0.0, "avg_logprob": -0.13910457066127233, "compression_ratio": 1.4658385093167703, "no_speech_prob": 2.6841894396056887e-06}, {"id": 274, "seek": 158980, "start": 1605.04, "end": 1607.74, "text": " for your embeddings.", "tokens": [50364, 309, 445, 4960, 257, 4978, 295, 9298, 300, 1619, 300, 337, 1722, 13912, 5022, 321, 2748, 28868, 5952, 12240, 29432, 50768, 50768, 293, 337, 3165, 16824, 6233, 420, 307, 309, 264, 661, 636, 926, 286, 393, 380, 1604, 321, 2748, 45937, 6771, 51126, 51126, 337, 428, 12240, 29432, 13, 51261, 51261, 407, 300, 311, 437, 729, 11602, 366, 13, 51472, 51472], "temperature": 0.0, "avg_logprob": -0.13910457066127233, "compression_ratio": 1.4658385093167703, "no_speech_prob": 2.6841894396056887e-06}, {"id": 275, "seek": 158980, "start": 1607.74, "end": 1611.96, "text": " So that's what those sizes are.", "tokens": [50364, 309, 445, 4960, 257, 4978, 295, 9298, 300, 1619, 300, 337, 1722, 13912, 5022, 321, 2748, 28868, 5952, 12240, 29432, 50768, 50768, 293, 337, 3165, 16824, 6233, 420, 307, 309, 264, 661, 636, 926, 286, 393, 380, 1604, 321, 2748, 45937, 6771, 51126, 51126, 337, 428, 12240, 29432, 13, 51261, 51261, 407, 300, 311, 437, 729, 11602, 366, 13, 51472, 51472], "temperature": 0.0, "avg_logprob": -0.13910457066127233, "compression_ratio": 1.4658385093167703, "no_speech_prob": 2.6841894396056887e-06}, {"id": 276, "seek": 161196, "start": 1611.96, "end": 1619.2, "text": " So now we can create that model and we can pop it into a learner and fit in the usual", "tokens": [50364, 407, 586, 321, 393, 1884, 300, 2316, 293, 321, 393, 1665, 309, 666, 257, 33347, 293, 3318, 294, 264, 7713, 50726, 50726, 636, 13, 51110, 51110, 400, 370, 2831, 813, 884, 439, 300, 490, 8459, 437, 291, 393, 360, 307, 291, 393, 360, 2293, 264, 51380, 51380, 912, 551, 300, 321, 600, 1096, 949, 597, 307, 281, 818, 16555, 33347, 457, 291, 393, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.09317164634590719, "compression_ratio": 1.6196319018404908, "no_speech_prob": 1.9637982404674403e-06}, {"id": 277, "seek": 161196, "start": 1619.2, "end": 1626.88, "text": " way.", "tokens": [50364, 407, 586, 321, 393, 1884, 300, 2316, 293, 321, 393, 1665, 309, 666, 257, 33347, 293, 3318, 294, 264, 7713, 50726, 50726, 636, 13, 51110, 51110, 400, 370, 2831, 813, 884, 439, 300, 490, 8459, 437, 291, 393, 360, 307, 291, 393, 360, 2293, 264, 51380, 51380, 912, 551, 300, 321, 600, 1096, 949, 597, 307, 281, 818, 16555, 33347, 457, 291, 393, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.09317164634590719, "compression_ratio": 1.6196319018404908, "no_speech_prob": 1.9637982404674403e-06}, {"id": 278, "seek": 161196, "start": 1626.88, "end": 1632.28, "text": " And so rather than doing all that from scratch what you can do is you can do exactly the", "tokens": [50364, 407, 586, 321, 393, 1884, 300, 2316, 293, 321, 393, 1665, 309, 666, 257, 33347, 293, 3318, 294, 264, 7713, 50726, 50726, 636, 13, 51110, 51110, 400, 370, 2831, 813, 884, 439, 300, 490, 8459, 437, 291, 393, 360, 307, 291, 393, 360, 2293, 264, 51380, 51380, 912, 551, 300, 321, 600, 1096, 949, 597, 307, 281, 818, 16555, 33347, 457, 291, 393, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.09317164634590719, "compression_ratio": 1.6196319018404908, "no_speech_prob": 1.9637982404674403e-06}, {"id": 279, "seek": 161196, "start": 1632.28, "end": 1639.04, "text": " same thing that we've done before which is to call collaborative learner but you can", "tokens": [50364, 407, 586, 321, 393, 1884, 300, 2316, 293, 321, 393, 1665, 309, 666, 257, 33347, 293, 3318, 294, 264, 7713, 50726, 50726, 636, 13, 51110, 51110, 400, 370, 2831, 813, 884, 439, 300, 490, 8459, 437, 291, 393, 360, 307, 291, 393, 360, 2293, 264, 51380, 51380, 912, 551, 300, 321, 600, 1096, 949, 597, 307, 281, 818, 16555, 33347, 457, 291, 393, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.09317164634590719, "compression_ratio": 1.6196319018404908, "no_speech_prob": 1.9637982404674403e-06}, {"id": 280, "seek": 163904, "start": 1639.04, "end": 1645.8, "text": " pass in the parameter use neural network equals true and you can then say how big do you want", "tokens": [50364, 1320, 294, 264, 13075, 764, 18161, 3209, 6915, 2074, 293, 291, 393, 550, 584, 577, 955, 360, 291, 528, 50702, 50702, 1184, 4583, 370, 341, 307, 516, 281, 1884, 257, 732, 7633, 4583, 2452, 2539, 18161, 2533, 264, 50906, 50906, 700, 486, 362, 22671, 293, 264, 1150, 486, 362, 2625, 293, 550, 291, 393, 584, 3318, 293, 1314, 309, 1709, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.13591734079214243, "compression_ratio": 1.6325301204819278, "no_speech_prob": 2.406093017270905e-06}, {"id": 281, "seek": 163904, "start": 1645.8, "end": 1649.8799999999999, "text": " each layer so this is going to create a two hidden layer deep learning neural net the", "tokens": [50364, 1320, 294, 264, 13075, 764, 18161, 3209, 6915, 2074, 293, 291, 393, 550, 584, 577, 955, 360, 291, 528, 50702, 50702, 1184, 4583, 370, 341, 307, 516, 281, 1884, 257, 732, 7633, 4583, 2452, 2539, 18161, 2533, 264, 50906, 50906, 700, 486, 362, 22671, 293, 264, 1150, 486, 362, 2625, 293, 550, 291, 393, 584, 3318, 293, 1314, 309, 1709, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.13591734079214243, "compression_ratio": 1.6325301204819278, "no_speech_prob": 2.406093017270905e-06}, {"id": 282, "seek": 163904, "start": 1649.8799999999999, "end": 1668.3999999999999, "text": " first will have 1500 and the second will have 50 and then you can say fit and away it goes.", "tokens": [50364, 1320, 294, 264, 13075, 764, 18161, 3209, 6915, 2074, 293, 291, 393, 550, 584, 577, 955, 360, 291, 528, 50702, 50702, 1184, 4583, 370, 341, 307, 516, 281, 1884, 257, 732, 7633, 4583, 2452, 2539, 18161, 2533, 264, 50906, 50906, 700, 486, 362, 22671, 293, 264, 1150, 486, 362, 2625, 293, 550, 291, 393, 584, 3318, 293, 1314, 309, 1709, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.13591734079214243, "compression_ratio": 1.6325301204819278, "no_speech_prob": 2.406093017270905e-06}, {"id": 283, "seek": 166840, "start": 1668.4, "end": 1677.2800000000002, "text": " Okay so here is our we've got 0.87 so these are doing less well than our dot product version", "tokens": [50364, 1033, 370, 510, 307, 527, 321, 600, 658, 1958, 13, 23853, 370, 613, 366, 884, 1570, 731, 813, 527, 5893, 1674, 3037, 50808, 50808, 597, 307, 406, 886, 8830, 570, 733, 295, 264, 5893, 1674, 3037, 307, 534, 1382, 281, 51022, 51022, 747, 5002, 295, 527, 3701, 295, 264, 1154, 9274, 13, 51250, 51250, 682, 3124, 13434, 257, 688, 295, 3431, 733, 295, 10432, 436, 733, 295, 733, 295, 1884, 257, 9354, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.11401157630117316, "compression_ratio": 1.67, "no_speech_prob": 3.555949660949409e-06}, {"id": 284, "seek": 166840, "start": 1677.2800000000002, "end": 1681.5600000000002, "text": " which is not too surprising because kind of the dot product version is really trying to", "tokens": [50364, 1033, 370, 510, 307, 527, 321, 600, 658, 1958, 13, 23853, 370, 613, 366, 884, 1570, 731, 813, 527, 5893, 1674, 3037, 50808, 50808, 597, 307, 406, 886, 8830, 570, 733, 295, 264, 5893, 1674, 3037, 307, 534, 1382, 281, 51022, 51022, 747, 5002, 295, 527, 3701, 295, 264, 1154, 9274, 13, 51250, 51250, 682, 3124, 13434, 257, 688, 295, 3431, 733, 295, 10432, 436, 733, 295, 733, 295, 1884, 257, 9354, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.11401157630117316, "compression_ratio": 1.67, "no_speech_prob": 3.555949660949409e-06}, {"id": 285, "seek": 166840, "start": 1681.5600000000002, "end": 1686.1200000000001, "text": " take advantage of our understanding of the problem domain.", "tokens": [50364, 1033, 370, 510, 307, 527, 321, 600, 658, 1958, 13, 23853, 370, 613, 366, 884, 1570, 731, 813, 527, 5893, 1674, 3037, 50808, 50808, 597, 307, 406, 886, 8830, 570, 733, 295, 264, 5893, 1674, 3037, 307, 534, 1382, 281, 51022, 51022, 747, 5002, 295, 527, 3701, 295, 264, 1154, 9274, 13, 51250, 51250, 682, 3124, 13434, 257, 688, 295, 3431, 733, 295, 10432, 436, 733, 295, 733, 295, 1884, 257, 9354, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.11401157630117316, "compression_ratio": 1.67, "no_speech_prob": 3.555949660949409e-06}, {"id": 286, "seek": 166840, "start": 1686.1200000000001, "end": 1692.48, "text": " In practice nowadays a lot of companies kind of combine they kind of kind of create a combined", "tokens": [50364, 1033, 370, 510, 307, 527, 321, 600, 658, 1958, 13, 23853, 370, 613, 366, 884, 1570, 731, 813, 527, 5893, 1674, 3037, 50808, 50808, 597, 307, 406, 886, 8830, 570, 733, 295, 264, 5893, 1674, 3037, 307, 534, 1382, 281, 51022, 51022, 747, 5002, 295, 527, 3701, 295, 264, 1154, 9274, 13, 51250, 51250, 682, 3124, 13434, 257, 688, 295, 3431, 733, 295, 10432, 436, 733, 295, 733, 295, 1884, 257, 9354, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.11401157630117316, "compression_ratio": 1.67, "no_speech_prob": 3.555949660949409e-06}, {"id": 287, "seek": 169248, "start": 1692.48, "end": 1699.72, "text": " model that have a has a dot product component and also has a neural net component.", "tokens": [50364, 2316, 300, 362, 257, 575, 257, 5893, 1674, 6542, 293, 611, 575, 257, 18161, 2533, 6542, 13, 50726, 50726, 440, 18161, 2533, 6677, 4098, 4961, 498, 291, 600, 658, 26603, 337, 1365, 1589, 51022, 51022, 466, 428, 5022, 411, 562, 630, 436, 1465, 493, 577, 1331, 366, 436, 437, 3260, 366, 436, 291, 458, 51326, 51326, 689, 366, 436, 490, 293, 550, 729, 366, 439, 721, 300, 291, 727, 1588, 7186, 473, 294, 365, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.13524322020701873, "compression_ratio": 1.7024390243902439, "no_speech_prob": 1.3287573210618575e-06}, {"id": 288, "seek": 169248, "start": 1699.72, "end": 1705.64, "text": " The neural net components particularly helpful if you've got metadata for example information", "tokens": [50364, 2316, 300, 362, 257, 575, 257, 5893, 1674, 6542, 293, 611, 575, 257, 18161, 2533, 6542, 13, 50726, 50726, 440, 18161, 2533, 6677, 4098, 4961, 498, 291, 600, 658, 26603, 337, 1365, 1589, 51022, 51022, 466, 428, 5022, 411, 562, 630, 436, 1465, 493, 577, 1331, 366, 436, 437, 3260, 366, 436, 291, 458, 51326, 51326, 689, 366, 436, 490, 293, 550, 729, 366, 439, 721, 300, 291, 727, 1588, 7186, 473, 294, 365, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.13524322020701873, "compression_ratio": 1.7024390243902439, "no_speech_prob": 1.3287573210618575e-06}, {"id": 289, "seek": 169248, "start": 1705.64, "end": 1711.72, "text": " about your users like when did they sign up how old are they what sex are they you know", "tokens": [50364, 2316, 300, 362, 257, 575, 257, 5893, 1674, 6542, 293, 611, 575, 257, 18161, 2533, 6542, 13, 50726, 50726, 440, 18161, 2533, 6677, 4098, 4961, 498, 291, 600, 658, 26603, 337, 1365, 1589, 51022, 51022, 466, 428, 5022, 411, 562, 630, 436, 1465, 493, 577, 1331, 366, 436, 437, 3260, 366, 436, 291, 458, 51326, 51326, 689, 366, 436, 490, 293, 550, 729, 366, 439, 721, 300, 291, 727, 1588, 7186, 473, 294, 365, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.13524322020701873, "compression_ratio": 1.7024390243902439, "no_speech_prob": 1.3287573210618575e-06}, {"id": 290, "seek": 169248, "start": 1711.72, "end": 1717.24, "text": " where are they from and then those are all things that you could concatenate in with", "tokens": [50364, 2316, 300, 362, 257, 575, 257, 5893, 1674, 6542, 293, 611, 575, 257, 18161, 2533, 6542, 13, 50726, 50726, 440, 18161, 2533, 6677, 4098, 4961, 498, 291, 600, 658, 26603, 337, 1365, 1589, 51022, 51022, 466, 428, 5022, 411, 562, 630, 436, 1465, 493, 577, 1331, 366, 436, 437, 3260, 366, 436, 291, 458, 51326, 51326, 689, 366, 436, 490, 293, 550, 729, 366, 439, 721, 300, 291, 727, 1588, 7186, 473, 294, 365, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.13524322020701873, "compression_ratio": 1.7024390243902439, "no_speech_prob": 1.3287573210618575e-06}, {"id": 291, "seek": 171724, "start": 1717.24, "end": 1722.88, "text": " your embeddings and ditto with metadata about the movie how old is it what genre is it and", "tokens": [50364, 428, 12240, 29432, 293, 274, 34924, 365, 26603, 466, 264, 3169, 577, 1331, 307, 309, 437, 11022, 307, 309, 293, 50646, 50646, 370, 5220, 13, 50696, 50696, 1057, 558, 370, 321, 600, 658, 257, 1168, 490, 42353, 597, 286, 519, 307, 1880, 293, 264, 1168, 51242, 51242, 307, 307, 456, 364, 2734, 689, 264, 12577, 6677, 366, 42926, 9540, 538, 264, 2107, 12, 3121, 610, 1373, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.11345110620771136, "compression_ratio": 1.5265957446808511, "no_speech_prob": 2.726440470723901e-06}, {"id": 292, "seek": 171724, "start": 1722.88, "end": 1723.88, "text": " so forth.", "tokens": [50364, 428, 12240, 29432, 293, 274, 34924, 365, 26603, 466, 264, 3169, 577, 1331, 307, 309, 437, 11022, 307, 309, 293, 50646, 50646, 370, 5220, 13, 50696, 50696, 1057, 558, 370, 321, 600, 658, 257, 1168, 490, 42353, 597, 286, 519, 307, 1880, 293, 264, 1168, 51242, 51242, 307, 307, 456, 364, 2734, 689, 264, 12577, 6677, 366, 42926, 9540, 538, 264, 2107, 12, 3121, 610, 1373, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.11345110620771136, "compression_ratio": 1.5265957446808511, "no_speech_prob": 2.726440470723901e-06}, {"id": 293, "seek": 171724, "start": 1723.88, "end": 1734.8, "text": " All right so we've got a question from Jonah which I think is interesting and the question", "tokens": [50364, 428, 12240, 29432, 293, 274, 34924, 365, 26603, 466, 264, 3169, 577, 1331, 307, 309, 437, 11022, 307, 309, 293, 50646, 50646, 370, 5220, 13, 50696, 50696, 1057, 558, 370, 321, 600, 658, 257, 1168, 490, 42353, 597, 286, 519, 307, 1880, 293, 264, 1168, 51242, 51242, 307, 307, 456, 364, 2734, 689, 264, 12577, 6677, 366, 42926, 9540, 538, 264, 2107, 12, 3121, 610, 1373, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.11345110620771136, "compression_ratio": 1.5265957446808511, "no_speech_prob": 2.726440470723901e-06}, {"id": 294, "seek": 171724, "start": 1734.8, "end": 1742.54, "text": " is is there an issue where the bias components are overwhelmingly determined by the non-experts", "tokens": [50364, 428, 12240, 29432, 293, 274, 34924, 365, 26603, 466, 264, 3169, 577, 1331, 307, 309, 437, 11022, 307, 309, 293, 50646, 50646, 370, 5220, 13, 50696, 50696, 1057, 558, 370, 321, 600, 658, 257, 1168, 490, 42353, 597, 286, 519, 307, 1880, 293, 264, 1168, 51242, 51242, 307, 307, 456, 364, 2734, 689, 264, 12577, 6677, 366, 42926, 9540, 538, 264, 2107, 12, 3121, 610, 1373, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.11345110620771136, "compression_ratio": 1.5265957446808511, "no_speech_prob": 2.726440470723901e-06}, {"id": 295, "seek": 174254, "start": 1742.54, "end": 1749.2, "text": " in a genre.", "tokens": [50364, 294, 257, 11022, 13, 50697, 50697, 682, 2674, 767, 456, 311, 257, 544, 2674, 2734, 597, 307, 294, 16555, 30822, 51041, 51041, 11879, 3652, 588, 2049, 257, 1359, 1230, 295, 5022, 420, 257, 1359, 1230, 295, 6233, 51549, 51549], "temperature": 0.0, "avg_logprob": -0.1844642104172125, "compression_ratio": 1.467741935483871, "no_speech_prob": 2.7693301944964333e-06}, {"id": 296, "seek": 174254, "start": 1749.2, "end": 1756.08, "text": " In general actually there's a more general issue which is in collaborative filtering", "tokens": [50364, 294, 257, 11022, 13, 50697, 50697, 682, 2674, 767, 456, 311, 257, 544, 2674, 2734, 597, 307, 294, 16555, 30822, 51041, 51041, 11879, 3652, 588, 2049, 257, 1359, 1230, 295, 5022, 420, 257, 1359, 1230, 295, 6233, 51549, 51549], "temperature": 0.0, "avg_logprob": -0.1844642104172125, "compression_ratio": 1.467741935483871, "no_speech_prob": 2.7693301944964333e-06}, {"id": 297, "seek": 174254, "start": 1756.08, "end": 1766.24, "text": " recommendation systems very often a small number of users or a small number of movies", "tokens": [50364, 294, 257, 11022, 13, 50697, 50697, 682, 2674, 767, 456, 311, 257, 544, 2674, 2734, 597, 307, 294, 16555, 30822, 51041, 51041, 11879, 3652, 588, 2049, 257, 1359, 1230, 295, 5022, 420, 257, 1359, 1230, 295, 6233, 51549, 51549], "temperature": 0.0, "avg_logprob": -0.1844642104172125, "compression_ratio": 1.467741935483871, "no_speech_prob": 2.7693301944964333e-06}, {"id": 298, "seek": 176624, "start": 1766.24, "end": 1773.48, "text": " overwhelm everybody else and the classic one is anime.", "tokens": [50364, 9103, 76, 2201, 1646, 293, 264, 7230, 472, 307, 12435, 13, 50726, 50726, 316, 7226, 1359, 1230, 295, 561, 1159, 12435, 293, 729, 3935, 295, 561, 1159, 257, 688, 50982, 50982, 295, 12435, 13, 51062, 51062, 407, 294, 3169, 10434, 411, 456, 311, 257, 7230, 1154, 597, 307, 633, 565, 561, 51246, 51246, 853, 281, 652, 257, 1329, 295, 731, 12, 752, 937, 6233, 439, 264, 1192, 2306, 1643, 281, 312, 12435, 293, 370, 291, 393, 51536, 51536, 3811, 437, 311, 2737, 294, 264, 8141, 19372, 5380, 307, 300, 456, 366, 1338, 512, 512, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11756171985548369, "compression_ratio": 1.7131147540983607, "no_speech_prob": 7.182914487202652e-06}, {"id": 299, "seek": 176624, "start": 1773.48, "end": 1778.6, "text": " A relatively small number of people watch anime and those groups of people watch a lot", "tokens": [50364, 9103, 76, 2201, 1646, 293, 264, 7230, 472, 307, 12435, 13, 50726, 50726, 316, 7226, 1359, 1230, 295, 561, 1159, 12435, 293, 729, 3935, 295, 561, 1159, 257, 688, 50982, 50982, 295, 12435, 13, 51062, 51062, 407, 294, 3169, 10434, 411, 456, 311, 257, 7230, 1154, 597, 307, 633, 565, 561, 51246, 51246, 853, 281, 652, 257, 1329, 295, 731, 12, 752, 937, 6233, 439, 264, 1192, 2306, 1643, 281, 312, 12435, 293, 370, 291, 393, 51536, 51536, 3811, 437, 311, 2737, 294, 264, 8141, 19372, 5380, 307, 300, 456, 366, 1338, 512, 512, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11756171985548369, "compression_ratio": 1.7131147540983607, "no_speech_prob": 7.182914487202652e-06}, {"id": 300, "seek": 176624, "start": 1778.6, "end": 1780.2, "text": " of anime.", "tokens": [50364, 9103, 76, 2201, 1646, 293, 264, 7230, 472, 307, 12435, 13, 50726, 50726, 316, 7226, 1359, 1230, 295, 561, 1159, 12435, 293, 729, 3935, 295, 561, 1159, 257, 688, 50982, 50982, 295, 12435, 13, 51062, 51062, 407, 294, 3169, 10434, 411, 456, 311, 257, 7230, 1154, 597, 307, 633, 565, 561, 51246, 51246, 853, 281, 652, 257, 1329, 295, 731, 12, 752, 937, 6233, 439, 264, 1192, 2306, 1643, 281, 312, 12435, 293, 370, 291, 393, 51536, 51536, 3811, 437, 311, 2737, 294, 264, 8141, 19372, 5380, 307, 300, 456, 366, 1338, 512, 512, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11756171985548369, "compression_ratio": 1.7131147540983607, "no_speech_prob": 7.182914487202652e-06}, {"id": 301, "seek": 176624, "start": 1780.2, "end": 1783.88, "text": " So in movie recommendations like there's a classic problem which is every time people", "tokens": [50364, 9103, 76, 2201, 1646, 293, 264, 7230, 472, 307, 12435, 13, 50726, 50726, 316, 7226, 1359, 1230, 295, 561, 1159, 12435, 293, 729, 3935, 295, 561, 1159, 257, 688, 50982, 50982, 295, 12435, 13, 51062, 51062, 407, 294, 3169, 10434, 411, 456, 311, 257, 7230, 1154, 597, 307, 633, 565, 561, 51246, 51246, 853, 281, 652, 257, 1329, 295, 731, 12, 752, 937, 6233, 439, 264, 1192, 2306, 1643, 281, 312, 12435, 293, 370, 291, 393, 51536, 51536, 3811, 437, 311, 2737, 294, 264, 8141, 19372, 5380, 307, 300, 456, 366, 1338, 512, 512, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11756171985548369, "compression_ratio": 1.7131147540983607, "no_speech_prob": 7.182914487202652e-06}, {"id": 302, "seek": 176624, "start": 1783.88, "end": 1789.68, "text": " try to make a list of well-loved movies all the top ones seem to be anime and so you can", "tokens": [50364, 9103, 76, 2201, 1646, 293, 264, 7230, 472, 307, 12435, 13, 50726, 50726, 316, 7226, 1359, 1230, 295, 561, 1159, 12435, 293, 729, 3935, 295, 561, 1159, 257, 688, 50982, 50982, 295, 12435, 13, 51062, 51062, 407, 294, 3169, 10434, 411, 456, 311, 257, 7230, 1154, 597, 307, 633, 565, 561, 51246, 51246, 853, 281, 652, 257, 1329, 295, 731, 12, 752, 937, 6233, 439, 264, 1192, 2306, 1643, 281, 312, 12435, 293, 370, 291, 393, 51536, 51536, 3811, 437, 311, 2737, 294, 264, 8141, 19372, 5380, 307, 300, 456, 366, 1338, 512, 512, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11756171985548369, "compression_ratio": 1.7131147540983607, "no_speech_prob": 7.182914487202652e-06}, {"id": 303, "seek": 176624, "start": 1789.68, "end": 1796.1200000000001, "text": " imagine what's happening in the matrix completion exercise is that there are yeah some some", "tokens": [50364, 9103, 76, 2201, 1646, 293, 264, 7230, 472, 307, 12435, 13, 50726, 50726, 316, 7226, 1359, 1230, 295, 561, 1159, 12435, 293, 729, 3935, 295, 561, 1159, 257, 688, 50982, 50982, 295, 12435, 13, 51062, 51062, 407, 294, 3169, 10434, 411, 456, 311, 257, 7230, 1154, 597, 307, 633, 565, 561, 51246, 51246, 853, 281, 652, 257, 1329, 295, 731, 12, 752, 937, 6233, 439, 264, 1192, 2306, 1643, 281, 312, 12435, 293, 370, 291, 393, 51536, 51536, 3811, 437, 311, 2737, 294, 264, 8141, 19372, 5380, 307, 300, 456, 366, 1338, 512, 512, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11756171985548369, "compression_ratio": 1.7131147540983607, "no_speech_prob": 7.182914487202652e-06}, {"id": 304, "seek": 179612, "start": 1796.12, "end": 1801.8, "text": " users that just you know really watch this one genre of movie and they watch an awful", "tokens": [50364, 5022, 300, 445, 291, 458, 534, 1159, 341, 472, 11022, 295, 3169, 293, 436, 1159, 364, 11232, 50648, 50648, 688, 295, 552, 13, 50792, 50792, 407, 294, 2674, 291, 767, 360, 362, 281, 312, 1238, 5026, 466, 264, 291, 458, 613, 7257, 75, 2210, 51060, 51060, 733, 295, 2663, 293, 1338, 286, 1582, 380, 352, 666, 4365, 466, 577, 281, 2028, 365, 552, 457, 436, 5101, 51388, 51388], "temperature": 0.0, "avg_logprob": -0.10597434725080218, "compression_ratio": 1.5988700564971752, "no_speech_prob": 3.3404694477212615e-06}, {"id": 305, "seek": 179612, "start": 1801.8, "end": 1804.6799999999998, "text": " lot of them.", "tokens": [50364, 5022, 300, 445, 291, 458, 534, 1159, 341, 472, 11022, 295, 3169, 293, 436, 1159, 364, 11232, 50648, 50648, 688, 295, 552, 13, 50792, 50792, 407, 294, 2674, 291, 767, 360, 362, 281, 312, 1238, 5026, 466, 264, 291, 458, 613, 7257, 75, 2210, 51060, 51060, 733, 295, 2663, 293, 1338, 286, 1582, 380, 352, 666, 4365, 466, 577, 281, 2028, 365, 552, 457, 436, 5101, 51388, 51388], "temperature": 0.0, "avg_logprob": -0.10597434725080218, "compression_ratio": 1.5988700564971752, "no_speech_prob": 3.3404694477212615e-06}, {"id": 306, "seek": 179612, "start": 1804.6799999999998, "end": 1810.04, "text": " So in general you actually do have to be pretty careful about the you know these subtlety", "tokens": [50364, 5022, 300, 445, 291, 458, 534, 1159, 341, 472, 11022, 295, 3169, 293, 436, 1159, 364, 11232, 50648, 50648, 688, 295, 552, 13, 50792, 50792, 407, 294, 2674, 291, 767, 360, 362, 281, 312, 1238, 5026, 466, 264, 291, 458, 613, 7257, 75, 2210, 51060, 51060, 733, 295, 2663, 293, 1338, 286, 1582, 380, 352, 666, 4365, 466, 577, 281, 2028, 365, 552, 457, 436, 5101, 51388, 51388], "temperature": 0.0, "avg_logprob": -0.10597434725080218, "compression_ratio": 1.5988700564971752, "no_speech_prob": 3.3404694477212615e-06}, {"id": 307, "seek": 179612, "start": 1810.04, "end": 1816.6, "text": " kind of issues and yeah I won't go into details about how to deal with them but they generally", "tokens": [50364, 5022, 300, 445, 291, 458, 534, 1159, 341, 472, 11022, 295, 3169, 293, 436, 1159, 364, 11232, 50648, 50648, 688, 295, 552, 13, 50792, 50792, 407, 294, 2674, 291, 767, 360, 362, 281, 312, 1238, 5026, 466, 264, 291, 458, 613, 7257, 75, 2210, 51060, 51060, 733, 295, 2663, 293, 1338, 286, 1582, 380, 352, 666, 4365, 466, 577, 281, 2028, 365, 552, 457, 436, 5101, 51388, 51388], "temperature": 0.0, "avg_logprob": -0.10597434725080218, "compression_ratio": 1.5988700564971752, "no_speech_prob": 3.3404694477212615e-06}, {"id": 308, "seek": 181660, "start": 1816.6, "end": 1829.0, "text": " involve kind of taking various kinds of ratios or normalizing things or so forth.", "tokens": [50364, 9494, 733, 295, 1940, 3683, 3685, 295, 32435, 420, 2710, 3319, 721, 420, 370, 5220, 13, 50984, 50984, 1057, 558, 370, 300, 311, 16555, 30822, 293, 286, 1415, 281, 855, 291, 746, 1880, 51324, 51324, 550, 466, 12240, 29432, 597, 307, 300, 12240, 29432, 366, 406, 445, 337, 16555, 30822, 293, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.14889257604425604, "compression_ratio": 1.65, "no_speech_prob": 1.209855668093951e-06}, {"id": 309, "seek": 181660, "start": 1829.0, "end": 1835.8, "text": " All right so that's collaborative filtering and I wanted to show you something interesting", "tokens": [50364, 9494, 733, 295, 1940, 3683, 3685, 295, 32435, 420, 2710, 3319, 721, 420, 370, 5220, 13, 50984, 50984, 1057, 558, 370, 300, 311, 16555, 30822, 293, 286, 1415, 281, 855, 291, 746, 1880, 51324, 51324, 550, 466, 12240, 29432, 597, 307, 300, 12240, 29432, 366, 406, 445, 337, 16555, 30822, 293, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.14889257604425604, "compression_ratio": 1.65, "no_speech_prob": 1.209855668093951e-06}, {"id": 310, "seek": 181660, "start": 1835.8, "end": 1844.9199999999998, "text": " then about embeddings which is that embeddings are not just for collaborative filtering and", "tokens": [50364, 9494, 733, 295, 1940, 3683, 3685, 295, 32435, 420, 2710, 3319, 721, 420, 370, 5220, 13, 50984, 50984, 1057, 558, 370, 300, 311, 16555, 30822, 293, 286, 1415, 281, 855, 291, 746, 1880, 51324, 51324, 550, 466, 12240, 29432, 597, 307, 300, 12240, 29432, 366, 406, 445, 337, 16555, 30822, 293, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.14889257604425604, "compression_ratio": 1.65, "no_speech_prob": 1.209855668093951e-06}, {"id": 311, "seek": 184492, "start": 1844.92, "end": 1848.6200000000001, "text": " in fact if you've heard about embeddings before you've probably heard about them in the context", "tokens": [50364, 294, 1186, 498, 291, 600, 2198, 466, 12240, 29432, 949, 291, 600, 1391, 2198, 466, 552, 294, 264, 4319, 50549, 50549, 295, 3303, 2856, 9007, 13, 50680, 50680, 407, 291, 1062, 362, 668, 6359, 646, 562, 321, 630, 264, 41706, 1851, 4088, 433, 1507, 50966, 50966, 577, 630, 321, 352, 466, 291, 458, 1228, 2487, 382, 15743, 281, 5245, 293, 321, 2825, 466, 577, 291, 51446, 51446, 393, 1261, 2283, 666, 41674, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.08419874116971895, "compression_ratio": 1.6386138613861385, "no_speech_prob": 4.637765414372552e-06}, {"id": 312, "seek": 184492, "start": 1848.6200000000001, "end": 1851.24, "text": " of natural language processing.", "tokens": [50364, 294, 1186, 498, 291, 600, 2198, 466, 12240, 29432, 949, 291, 600, 1391, 2198, 466, 552, 294, 264, 4319, 50549, 50549, 295, 3303, 2856, 9007, 13, 50680, 50680, 407, 291, 1062, 362, 668, 6359, 646, 562, 321, 630, 264, 41706, 1851, 4088, 433, 1507, 50966, 50966, 577, 630, 321, 352, 466, 291, 458, 1228, 2487, 382, 15743, 281, 5245, 293, 321, 2825, 466, 577, 291, 51446, 51446, 393, 1261, 2283, 666, 41674, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.08419874116971895, "compression_ratio": 1.6386138613861385, "no_speech_prob": 4.637765414372552e-06}, {"id": 313, "seek": 184492, "start": 1851.24, "end": 1856.96, "text": " So you might have been wondering back when we did the hugging face transformers stuff", "tokens": [50364, 294, 1186, 498, 291, 600, 2198, 466, 12240, 29432, 949, 291, 600, 1391, 2198, 466, 552, 294, 264, 4319, 50549, 50549, 295, 3303, 2856, 9007, 13, 50680, 50680, 407, 291, 1062, 362, 668, 6359, 646, 562, 321, 630, 264, 41706, 1851, 4088, 433, 1507, 50966, 50966, 577, 630, 321, 352, 466, 291, 458, 1228, 2487, 382, 15743, 281, 5245, 293, 321, 2825, 466, 577, 291, 51446, 51446, 393, 1261, 2283, 666, 41674, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.08419874116971895, "compression_ratio": 1.6386138613861385, "no_speech_prob": 4.637765414372552e-06}, {"id": 314, "seek": 184492, "start": 1856.96, "end": 1866.5600000000002, "text": " how did we go about you know using text as inputs to models and we talked about how you", "tokens": [50364, 294, 1186, 498, 291, 600, 2198, 466, 12240, 29432, 949, 291, 600, 1391, 2198, 466, 552, 294, 264, 4319, 50549, 50549, 295, 3303, 2856, 9007, 13, 50680, 50680, 407, 291, 1062, 362, 668, 6359, 646, 562, 321, 630, 264, 41706, 1851, 4088, 433, 1507, 50966, 50966, 577, 630, 321, 352, 466, 291, 458, 1228, 2487, 382, 15743, 281, 5245, 293, 321, 2825, 466, 577, 291, 51446, 51446, 393, 1261, 2283, 666, 41674, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.08419874116971895, "compression_ratio": 1.6386138613861385, "no_speech_prob": 4.637765414372552e-06}, {"id": 315, "seek": 184492, "start": 1866.5600000000002, "end": 1869.64, "text": " can turn words into integers.", "tokens": [50364, 294, 1186, 498, 291, 600, 2198, 466, 12240, 29432, 949, 291, 600, 1391, 2198, 466, 552, 294, 264, 4319, 50549, 50549, 295, 3303, 2856, 9007, 13, 50680, 50680, 407, 291, 1062, 362, 668, 6359, 646, 562, 321, 630, 264, 41706, 1851, 4088, 433, 1507, 50966, 50966, 577, 630, 321, 352, 466, 291, 458, 1228, 2487, 382, 15743, 281, 5245, 293, 321, 2825, 466, 577, 291, 51446, 51446, 393, 1261, 2283, 666, 41674, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.08419874116971895, "compression_ratio": 1.6386138613861385, "no_speech_prob": 4.637765414372552e-06}, {"id": 316, "seek": 186964, "start": 1869.64, "end": 1876.8400000000001, "text": " We make a list so here's the movie sorry movie here's the poem I am Sam I am Daniel I am", "tokens": [50364, 492, 652, 257, 1329, 370, 510, 311, 264, 3169, 2597, 3169, 510, 311, 264, 13065, 286, 669, 4832, 286, 669, 8033, 286, 669, 50724, 50724, 4832, 4832, 286, 669, 300, 4832, 286, 669, 5183, 5183, 13, 51016, 51016, 492, 393, 915, 257, 1329, 295, 439, 264, 3845, 2283, 294, 300, 13065, 293, 652, 341, 1329, 510, 293, 550, 51288, 51288, 321, 393, 976, 1184, 295, 729, 2283, 257, 3845, 7348, 445, 19071, 3289, 731, 767, 294, 341, 1389, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.1427908990441299, "compression_ratio": 1.760233918128655, "no_speech_prob": 8.801004696579184e-06}, {"id": 317, "seek": 186964, "start": 1876.8400000000001, "end": 1882.68, "text": " Sam Sam I am that Sam I am etc etc.", "tokens": [50364, 492, 652, 257, 1329, 370, 510, 311, 264, 3169, 2597, 3169, 510, 311, 264, 13065, 286, 669, 4832, 286, 669, 8033, 286, 669, 50724, 50724, 4832, 4832, 286, 669, 300, 4832, 286, 669, 5183, 5183, 13, 51016, 51016, 492, 393, 915, 257, 1329, 295, 439, 264, 3845, 2283, 294, 300, 13065, 293, 652, 341, 1329, 510, 293, 550, 51288, 51288, 321, 393, 976, 1184, 295, 729, 2283, 257, 3845, 7348, 445, 19071, 3289, 731, 767, 294, 341, 1389, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.1427908990441299, "compression_ratio": 1.760233918128655, "no_speech_prob": 8.801004696579184e-06}, {"id": 318, "seek": 186964, "start": 1882.68, "end": 1888.1200000000001, "text": " We can find a list of all the unique words in that poem and make this list here and then", "tokens": [50364, 492, 652, 257, 1329, 370, 510, 311, 264, 3169, 2597, 3169, 510, 311, 264, 13065, 286, 669, 4832, 286, 669, 8033, 286, 669, 50724, 50724, 4832, 4832, 286, 669, 300, 4832, 286, 669, 5183, 5183, 13, 51016, 51016, 492, 393, 915, 257, 1329, 295, 439, 264, 3845, 2283, 294, 300, 13065, 293, 652, 341, 1329, 510, 293, 550, 51288, 51288, 321, 393, 976, 1184, 295, 729, 2283, 257, 3845, 7348, 445, 19071, 3289, 731, 767, 294, 341, 1389, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.1427908990441299, "compression_ratio": 1.760233918128655, "no_speech_prob": 8.801004696579184e-06}, {"id": 319, "seek": 186964, "start": 1888.1200000000001, "end": 1895.3600000000001, "text": " we can give each of those words a unique ID just arbitrarily well actually in this case", "tokens": [50364, 492, 652, 257, 1329, 370, 510, 311, 264, 3169, 2597, 3169, 510, 311, 264, 13065, 286, 669, 4832, 286, 669, 8033, 286, 669, 50724, 50724, 4832, 4832, 286, 669, 300, 4832, 286, 669, 5183, 5183, 13, 51016, 51016, 492, 393, 915, 257, 1329, 295, 439, 264, 3845, 2283, 294, 300, 13065, 293, 652, 341, 1329, 510, 293, 550, 51288, 51288, 321, 393, 976, 1184, 295, 729, 2283, 257, 3845, 7348, 445, 19071, 3289, 731, 767, 294, 341, 1389, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.1427908990441299, "compression_ratio": 1.760233918128655, "no_speech_prob": 8.801004696579184e-06}, {"id": 320, "seek": 189536, "start": 1895.36, "end": 1900.56, "text": " it's alphabetical order but it doesn't have to be and so we kind of talked about that", "tokens": [50364, 309, 311, 23339, 804, 1668, 457, 309, 1177, 380, 362, 281, 312, 293, 370, 321, 733, 295, 2825, 466, 300, 50624, 50624, 293, 300, 311, 437, 321, 360, 365, 10479, 294, 2674, 457, 577, 360, 321, 1261, 729, 666, 411, 291, 458, 50932, 50932, 14511, 295, 4974, 3547, 293, 291, 1062, 406, 312, 6100, 281, 1568, 437, 321, 360, 307, 321, 1884, 51195, 51195, 364, 12240, 3584, 8141, 13, 51314, 51314, 407, 510, 311, 364, 12240, 3584, 8141, 19273, 1451, 48994, 6771, 337, 1184, 1349, 294, 264, 2329, 455, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.10280016635326629, "compression_ratio": 1.6666666666666667, "no_speech_prob": 3.446555638220161e-06}, {"id": 321, "seek": 189536, "start": 1900.56, "end": 1906.7199999999998, "text": " and that's what we do with categories in general but how do we turn those into like you know", "tokens": [50364, 309, 311, 23339, 804, 1668, 457, 309, 1177, 380, 362, 281, 312, 293, 370, 321, 733, 295, 2825, 466, 300, 50624, 50624, 293, 300, 311, 437, 321, 360, 365, 10479, 294, 2674, 457, 577, 360, 321, 1261, 729, 666, 411, 291, 458, 50932, 50932, 14511, 295, 4974, 3547, 293, 291, 1062, 406, 312, 6100, 281, 1568, 437, 321, 360, 307, 321, 1884, 51195, 51195, 364, 12240, 3584, 8141, 13, 51314, 51314, 407, 510, 311, 364, 12240, 3584, 8141, 19273, 1451, 48994, 6771, 337, 1184, 1349, 294, 264, 2329, 455, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.10280016635326629, "compression_ratio": 1.6666666666666667, "no_speech_prob": 3.446555638220161e-06}, {"id": 322, "seek": 189536, "start": 1906.7199999999998, "end": 1911.9799999999998, "text": " lists of random numbers and you might not be surprised to hear what we do is we create", "tokens": [50364, 309, 311, 23339, 804, 1668, 457, 309, 1177, 380, 362, 281, 312, 293, 370, 321, 733, 295, 2825, 466, 300, 50624, 50624, 293, 300, 311, 437, 321, 360, 365, 10479, 294, 2674, 457, 577, 360, 321, 1261, 729, 666, 411, 291, 458, 50932, 50932, 14511, 295, 4974, 3547, 293, 291, 1062, 406, 312, 6100, 281, 1568, 437, 321, 360, 307, 321, 1884, 51195, 51195, 364, 12240, 3584, 8141, 13, 51314, 51314, 407, 510, 311, 364, 12240, 3584, 8141, 19273, 1451, 48994, 6771, 337, 1184, 1349, 294, 264, 2329, 455, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.10280016635326629, "compression_ratio": 1.6666666666666667, "no_speech_prob": 3.446555638220161e-06}, {"id": 323, "seek": 189536, "start": 1911.9799999999998, "end": 1914.36, "text": " an embedding matrix.", "tokens": [50364, 309, 311, 23339, 804, 1668, 457, 309, 1177, 380, 362, 281, 312, 293, 370, 321, 733, 295, 2825, 466, 300, 50624, 50624, 293, 300, 311, 437, 321, 360, 365, 10479, 294, 2674, 457, 577, 360, 321, 1261, 729, 666, 411, 291, 458, 50932, 50932, 14511, 295, 4974, 3547, 293, 291, 1062, 406, 312, 6100, 281, 1568, 437, 321, 360, 307, 321, 1884, 51195, 51195, 364, 12240, 3584, 8141, 13, 51314, 51314, 407, 510, 311, 364, 12240, 3584, 8141, 19273, 1451, 48994, 6771, 337, 1184, 1349, 294, 264, 2329, 455, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.10280016635326629, "compression_ratio": 1.6666666666666667, "no_speech_prob": 3.446555638220161e-06}, {"id": 324, "seek": 189536, "start": 1914.36, "end": 1922.9599999999998, "text": " So here's an embedding matrix containing four latent factors for each word in the vocab.", "tokens": [50364, 309, 311, 23339, 804, 1668, 457, 309, 1177, 380, 362, 281, 312, 293, 370, 321, 733, 295, 2825, 466, 300, 50624, 50624, 293, 300, 311, 437, 321, 360, 365, 10479, 294, 2674, 457, 577, 360, 321, 1261, 729, 666, 411, 291, 458, 50932, 50932, 14511, 295, 4974, 3547, 293, 291, 1062, 406, 312, 6100, 281, 1568, 437, 321, 360, 307, 321, 1884, 51195, 51195, 364, 12240, 3584, 8141, 13, 51314, 51314, 407, 510, 311, 364, 12240, 3584, 8141, 19273, 1451, 48994, 6771, 337, 1184, 1349, 294, 264, 2329, 455, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.10280016635326629, "compression_ratio": 1.6666666666666667, "no_speech_prob": 3.446555638220161e-06}, {"id": 325, "seek": 192296, "start": 1922.96, "end": 1926.96, "text": " So here's each word in the vocab and here's the embedding matrix.", "tokens": [50364, 407, 510, 311, 1184, 1349, 294, 264, 2329, 455, 293, 510, 311, 264, 12240, 3584, 8141, 13, 50564, 50564, 407, 498, 321, 550, 528, 281, 1974, 341, 13065, 281, 257, 18161, 2533, 550, 437, 321, 360, 307, 321, 1329, 484, 51200, 51200, 527, 13065, 286, 360, 406, 411, 300, 4832, 286, 669, 360, 291, 411, 3092, 6466, 293, 7852, 5183, 13, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.10392425243671123, "compression_ratio": 1.530612244897959, "no_speech_prob": 1.3709537824979634e-06}, {"id": 326, "seek": 192296, "start": 1926.96, "end": 1939.68, "text": " So if we then want to present this poem to a neural net then what we do is we list out", "tokens": [50364, 407, 510, 311, 1184, 1349, 294, 264, 2329, 455, 293, 510, 311, 264, 12240, 3584, 8141, 13, 50564, 50564, 407, 498, 321, 550, 528, 281, 1974, 341, 13065, 281, 257, 18161, 2533, 550, 437, 321, 360, 307, 321, 1329, 484, 51200, 51200, 527, 13065, 286, 360, 406, 411, 300, 4832, 286, 669, 360, 291, 411, 3092, 6466, 293, 7852, 5183, 13, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.10392425243671123, "compression_ratio": 1.530612244897959, "no_speech_prob": 1.3709537824979634e-06}, {"id": 327, "seek": 192296, "start": 1939.68, "end": 1946.08, "text": " our poem I do not like that Sam I am do you like green eggs and ham etc.", "tokens": [50364, 407, 510, 311, 1184, 1349, 294, 264, 2329, 455, 293, 510, 311, 264, 12240, 3584, 8141, 13, 50564, 50564, 407, 498, 321, 550, 528, 281, 1974, 341, 13065, 281, 257, 18161, 2533, 550, 437, 321, 360, 307, 321, 1329, 484, 51200, 51200, 527, 13065, 286, 360, 406, 411, 300, 4832, 286, 669, 360, 291, 411, 3092, 6466, 293, 7852, 5183, 13, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.10392425243671123, "compression_ratio": 1.530612244897959, "no_speech_prob": 1.3709537824979634e-06}, {"id": 328, "seek": 194608, "start": 1946.08, "end": 1953.6, "text": " Then for each word we look it up so in Excel for example we use match so that will find", "tokens": [50364, 1396, 337, 1184, 1349, 321, 574, 309, 493, 370, 294, 19060, 337, 1365, 321, 764, 2995, 370, 300, 486, 915, 50740, 50740, 341, 1349, 670, 510, 293, 915, 309, 307, 1349, 7348, 1649, 293, 550, 321, 486, 915, 264, 19495, 1349, 293, 51382, 51382], "temperature": 0.0, "avg_logprob": -0.1411944472271463, "compression_ratio": 1.45, "no_speech_prob": 7.33819717879669e-07}, {"id": 329, "seek": 194608, "start": 1953.6, "end": 1966.4399999999998, "text": " this word over here and find it is word ID 8 and then we will find the eighth word and", "tokens": [50364, 1396, 337, 1184, 1349, 321, 574, 309, 493, 370, 294, 19060, 337, 1365, 321, 764, 2995, 370, 300, 486, 915, 50740, 50740, 341, 1349, 670, 510, 293, 915, 309, 307, 1349, 7348, 1649, 293, 550, 321, 486, 915, 264, 19495, 1349, 293, 51382, 51382], "temperature": 0.0, "avg_logprob": -0.1411944472271463, "compression_ratio": 1.45, "no_speech_prob": 7.33819717879669e-07}, {"id": 330, "seek": 196644, "start": 1966.44, "end": 1985.16, "text": " the first embedding and so that's gives us that's not right 8 oh no that is right sorry", "tokens": [50364, 264, 700, 12240, 3584, 293, 370, 300, 311, 2709, 505, 300, 311, 406, 558, 1649, 1954, 572, 300, 307, 558, 2597, 51300, 51300, 510, 309, 307, 309, 311, 445, 3657, 7738, 309, 311, 370, 309, 311, 516, 281, 312, 935, 732, 732, 550, 935, 51578, 51578, 472, 935, 4018, 472, 293, 510, 309, 307, 935, 732, 732, 935, 472, 935, 4018, 472, 5183, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.20628721573773554, "compression_ratio": 1.8308823529411764, "no_speech_prob": 7.071865184116177e-06}, {"id": 331, "seek": 196644, "start": 1985.16, "end": 1990.72, "text": " here it is it's just weird column it's so it's going to be point two two then point", "tokens": [50364, 264, 700, 12240, 3584, 293, 370, 300, 311, 2709, 505, 300, 311, 406, 558, 1649, 1954, 572, 300, 307, 558, 2597, 51300, 51300, 510, 309, 307, 309, 311, 445, 3657, 7738, 309, 311, 370, 309, 311, 516, 281, 312, 935, 732, 732, 550, 935, 51578, 51578, 472, 935, 4018, 472, 293, 510, 309, 307, 935, 732, 732, 935, 472, 935, 4018, 472, 5183, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.20628721573773554, "compression_ratio": 1.8308823529411764, "no_speech_prob": 7.071865184116177e-06}, {"id": 332, "seek": 196644, "start": 1990.72, "end": 1994.76, "text": " one point zero one and here it is point two two point one point zero one etc.", "tokens": [50364, 264, 700, 12240, 3584, 293, 370, 300, 311, 2709, 505, 300, 311, 406, 558, 1649, 1954, 572, 300, 307, 558, 2597, 51300, 51300, 510, 309, 307, 309, 311, 445, 3657, 7738, 309, 311, 370, 309, 311, 516, 281, 312, 935, 732, 732, 550, 935, 51578, 51578, 472, 935, 4018, 472, 293, 510, 309, 307, 935, 732, 732, 935, 472, 935, 4018, 472, 5183, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.20628721573773554, "compression_ratio": 1.8308823529411764, "no_speech_prob": 7.071865184116177e-06}, {"id": 333, "seek": 199476, "start": 1994.76, "end": 2003.52, "text": " So this is the embedding matrix we end up with for this poem and so if you wanted to", "tokens": [50364, 407, 341, 307, 264, 12240, 3584, 8141, 321, 917, 493, 365, 337, 341, 13065, 293, 370, 498, 291, 1415, 281, 50802, 50802, 3847, 420, 764, 293, 3847, 18161, 3209, 322, 341, 13065, 291, 1936, 1261, 309, 666, 341, 8141, 51098, 51098, 295, 3547, 293, 370, 341, 307, 437, 364, 12240, 3584, 8141, 1542, 411, 294, 364, 426, 45196, 2316, 293, 309, 1985, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.09420039437033913, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.816211010918778e-06}, {"id": 334, "seek": 199476, "start": 2003.52, "end": 2009.44, "text": " train or use and train neural network on this poem you basically turn it into this matrix", "tokens": [50364, 407, 341, 307, 264, 12240, 3584, 8141, 321, 917, 493, 365, 337, 341, 13065, 293, 370, 498, 291, 1415, 281, 50802, 50802, 3847, 420, 764, 293, 3847, 18161, 3209, 322, 341, 13065, 291, 1936, 1261, 309, 666, 341, 8141, 51098, 51098, 295, 3547, 293, 370, 341, 307, 437, 364, 12240, 3584, 8141, 1542, 411, 294, 364, 426, 45196, 2316, 293, 309, 1985, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.09420039437033913, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.816211010918778e-06}, {"id": 335, "seek": 199476, "start": 2009.44, "end": 2018.72, "text": " of numbers and so this is what an embedding matrix looks like in an NLP model and it works", "tokens": [50364, 407, 341, 307, 264, 12240, 3584, 8141, 321, 917, 493, 365, 337, 341, 13065, 293, 370, 498, 291, 1415, 281, 50802, 50802, 3847, 420, 764, 293, 3847, 18161, 3209, 322, 341, 13065, 291, 1936, 1261, 309, 666, 341, 8141, 51098, 51098, 295, 3547, 293, 370, 341, 307, 437, 364, 12240, 3584, 8141, 1542, 411, 294, 364, 426, 45196, 2316, 293, 309, 1985, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.09420039437033913, "compression_ratio": 1.6666666666666667, "no_speech_prob": 1.816211010918778e-06}, {"id": 336, "seek": 201872, "start": 2018.72, "end": 2025.8, "text": " exactly the same way as you can see and then you can do exactly the same things in terms", "tokens": [50364, 2293, 264, 912, 636, 382, 291, 393, 536, 293, 550, 291, 393, 360, 2293, 264, 912, 721, 294, 2115, 50718, 50718, 295, 14174, 295, 364, 426, 45196, 2316, 538, 1237, 412, 1293, 264, 12577, 6771, 293, 264, 48994, 6771, 51306, 51306, 294, 257, 1349, 12240, 3584, 8141, 13, 51496, 51496], "temperature": 0.0, "avg_logprob": -0.08177410639249362, "compression_ratio": 1.548148148148148, "no_speech_prob": 3.6688015825347975e-06}, {"id": 337, "seek": 201872, "start": 2025.8, "end": 2037.56, "text": " of interpretation of an NLP model by looking at both the bias factors and the latent factors", "tokens": [50364, 2293, 264, 912, 636, 382, 291, 393, 536, 293, 550, 291, 393, 360, 2293, 264, 912, 721, 294, 2115, 50718, 50718, 295, 14174, 295, 364, 426, 45196, 2316, 538, 1237, 412, 1293, 264, 12577, 6771, 293, 264, 48994, 6771, 51306, 51306, 294, 257, 1349, 12240, 3584, 8141, 13, 51496, 51496], "temperature": 0.0, "avg_logprob": -0.08177410639249362, "compression_ratio": 1.548148148148148, "no_speech_prob": 3.6688015825347975e-06}, {"id": 338, "seek": 201872, "start": 2037.56, "end": 2041.3600000000001, "text": " in a word embedding matrix.", "tokens": [50364, 2293, 264, 912, 636, 382, 291, 393, 536, 293, 550, 291, 393, 360, 2293, 264, 912, 721, 294, 2115, 50718, 50718, 295, 14174, 295, 364, 426, 45196, 2316, 538, 1237, 412, 1293, 264, 12577, 6771, 293, 264, 48994, 6771, 51306, 51306, 294, 257, 1349, 12240, 3584, 8141, 13, 51496, 51496], "temperature": 0.0, "avg_logprob": -0.08177410639249362, "compression_ratio": 1.548148148148148, "no_speech_prob": 3.6688015825347975e-06}, {"id": 339, "seek": 204136, "start": 2041.36, "end": 2052.88, "text": " So hopefully you're getting the idea here that our you know our different models you", "tokens": [50364, 407, 4696, 291, 434, 1242, 264, 1558, 510, 300, 527, 291, 458, 527, 819, 5245, 291, 50940, 50940, 458, 264, 15743, 281, 552, 300, 436, 434, 2361, 322, 257, 7226, 1359, 1230, 295, 733, 295, 3875, 51174, 51174, 9156, 293, 613, 9156, 366, 5101, 721, 411, 574, 493, 746, 294, 10225, 293, 51512, 51512, 550, 321, 458, 1854, 264, 2316, 321, 434, 1936, 30955, 721, 1214, 5127, 552, 493, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.11884680186232476, "compression_ratio": 1.729064039408867, "no_speech_prob": 3.7266092931531603e-06}, {"id": 340, "seek": 204136, "start": 2052.88, "end": 2057.56, "text": " know the inputs to them that they're based on a relatively small number of kind of basic", "tokens": [50364, 407, 4696, 291, 434, 1242, 264, 1558, 510, 300, 527, 291, 458, 527, 819, 5245, 291, 50940, 50940, 458, 264, 15743, 281, 552, 300, 436, 434, 2361, 322, 257, 7226, 1359, 1230, 295, 733, 295, 3875, 51174, 51174, 9156, 293, 613, 9156, 366, 5101, 721, 411, 574, 493, 746, 294, 10225, 293, 51512, 51512, 550, 321, 458, 1854, 264, 2316, 321, 434, 1936, 30955, 721, 1214, 5127, 552, 493, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.11884680186232476, "compression_ratio": 1.729064039408867, "no_speech_prob": 3.7266092931531603e-06}, {"id": 341, "seek": 204136, "start": 2057.56, "end": 2064.3199999999997, "text": " principles and these principles are generally things like look up something in array and", "tokens": [50364, 407, 4696, 291, 434, 1242, 264, 1558, 510, 300, 527, 291, 458, 527, 819, 5245, 291, 50940, 50940, 458, 264, 15743, 281, 552, 300, 436, 434, 2361, 322, 257, 7226, 1359, 1230, 295, 733, 295, 3875, 51174, 51174, 9156, 293, 613, 9156, 366, 5101, 721, 411, 574, 493, 746, 294, 10225, 293, 51512, 51512, 550, 321, 458, 1854, 264, 2316, 321, 434, 1936, 30955, 721, 1214, 5127, 552, 493, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.11884680186232476, "compression_ratio": 1.729064039408867, "no_speech_prob": 3.7266092931531603e-06}, {"id": 342, "seek": 204136, "start": 2064.3199999999997, "end": 2069.8399999999997, "text": " then we know inside the model we're basically multiplying things together adding them up", "tokens": [50364, 407, 4696, 291, 434, 1242, 264, 1558, 510, 300, 527, 291, 458, 527, 819, 5245, 291, 50940, 50940, 458, 264, 15743, 281, 552, 300, 436, 434, 2361, 322, 257, 7226, 1359, 1230, 295, 733, 295, 3875, 51174, 51174, 9156, 293, 613, 9156, 366, 5101, 721, 411, 574, 493, 746, 294, 10225, 293, 51512, 51512, 550, 321, 458, 1854, 264, 2316, 321, 434, 1936, 30955, 721, 1214, 5127, 552, 493, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.11884680186232476, "compression_ratio": 1.729064039408867, "no_speech_prob": 3.7266092931531603e-06}, {"id": 343, "seek": 206984, "start": 2069.84, "end": 2072.1600000000003, "text": " and replacing the negatives and zeros.", "tokens": [50364, 293, 19139, 264, 40019, 293, 35193, 13, 50480, 50480, 407, 4696, 291, 434, 1242, 264, 1558, 300, 437, 311, 516, 322, 1854, 257, 18161, 3209, 307, 50670, 50670, 5101, 406, 300, 6179, 457, 309, 2314, 588, 2661, 293, 412, 4373, 13, 51310, 51310], "temperature": 0.0, "avg_logprob": -0.12655314339531792, "compression_ratio": 1.380281690140845, "no_speech_prob": 5.896397397009423e-07}, {"id": 344, "seek": 206984, "start": 2072.1600000000003, "end": 2075.96, "text": " So hopefully you're getting the idea that what's going on inside a neural network is", "tokens": [50364, 293, 19139, 264, 40019, 293, 35193, 13, 50480, 50480, 407, 4696, 291, 434, 1242, 264, 1558, 300, 437, 311, 516, 322, 1854, 257, 18161, 3209, 307, 50670, 50670, 5101, 406, 300, 6179, 457, 309, 2314, 588, 2661, 293, 412, 4373, 13, 51310, 51310], "temperature": 0.0, "avg_logprob": -0.12655314339531792, "compression_ratio": 1.380281690140845, "no_speech_prob": 5.896397397009423e-07}, {"id": 345, "seek": 206984, "start": 2075.96, "end": 2088.76, "text": " generally not that complicated but it happens very quickly and at scale.", "tokens": [50364, 293, 19139, 264, 40019, 293, 35193, 13, 50480, 50480, 407, 4696, 291, 434, 1242, 264, 1558, 300, 437, 311, 516, 322, 1854, 257, 18161, 3209, 307, 50670, 50670, 5101, 406, 300, 6179, 457, 309, 2314, 588, 2661, 293, 412, 4373, 13, 51310, 51310], "temperature": 0.0, "avg_logprob": -0.12655314339531792, "compression_ratio": 1.380281690140845, "no_speech_prob": 5.896397397009423e-07}, {"id": 346, "seek": 208876, "start": 2088.76, "end": 2102.2400000000002, "text": " Now it's not just collaborative filtering and NLP but also tabular analysis.", "tokens": [50364, 823, 309, 311, 406, 445, 16555, 30822, 293, 426, 45196, 457, 611, 4421, 1040, 5215, 13, 51038, 51038, 407, 294, 7187, 1722, 295, 264, 1446, 321, 600, 2825, 466, 577, 4974, 21700, 393, 312, 1143, 337, 341, 597, 51374, 51374, 390, 337, 341, 307, 337, 264, 551, 689, 321, 434, 32884, 264, 24139, 8680, 3218, 295, 9987, 51690, 51690, 4676, 5927, 411, 4693, 2595, 41698, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1042597770690918, "compression_ratio": 1.4747474747474747, "no_speech_prob": 1.5779485238454072e-06}, {"id": 347, "seek": 208876, "start": 2102.2400000000002, "end": 2108.96, "text": " So in chapter 9 of the book we've talked about how random forests can be used for this which", "tokens": [50364, 823, 309, 311, 406, 445, 16555, 30822, 293, 426, 45196, 457, 611, 4421, 1040, 5215, 13, 51038, 51038, 407, 294, 7187, 1722, 295, 264, 1446, 321, 600, 2825, 466, 577, 4974, 21700, 393, 312, 1143, 337, 341, 597, 51374, 51374, 390, 337, 341, 307, 337, 264, 551, 689, 321, 434, 32884, 264, 24139, 8680, 3218, 295, 9987, 51690, 51690, 4676, 5927, 411, 4693, 2595, 41698, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1042597770690918, "compression_ratio": 1.4747474747474747, "no_speech_prob": 1.5779485238454072e-06}, {"id": 348, "seek": 208876, "start": 2108.96, "end": 2115.28, "text": " was for this is for the thing where we're predicting the auction sale price of industrial", "tokens": [50364, 823, 309, 311, 406, 445, 16555, 30822, 293, 426, 45196, 457, 611, 4421, 1040, 5215, 13, 51038, 51038, 407, 294, 7187, 1722, 295, 264, 1446, 321, 600, 2825, 466, 577, 4974, 21700, 393, 312, 1143, 337, 341, 597, 51374, 51374, 390, 337, 341, 307, 337, 264, 551, 689, 321, 434, 32884, 264, 24139, 8680, 3218, 295, 9987, 51690, 51690, 4676, 5927, 411, 4693, 2595, 41698, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1042597770690918, "compression_ratio": 1.4747474747474747, "no_speech_prob": 1.5779485238454072e-06}, {"id": 349, "seek": 208876, "start": 2115.28, "end": 2118.6000000000004, "text": " heavy equipment like bulldozers.", "tokens": [50364, 823, 309, 311, 406, 445, 16555, 30822, 293, 426, 45196, 457, 611, 4421, 1040, 5215, 13, 51038, 51038, 407, 294, 7187, 1722, 295, 264, 1446, 321, 600, 2825, 466, 577, 4974, 21700, 393, 312, 1143, 337, 341, 597, 51374, 51374, 390, 337, 341, 307, 337, 264, 551, 689, 321, 434, 32884, 264, 24139, 8680, 3218, 295, 9987, 51690, 51690, 4676, 5927, 411, 4693, 2595, 41698, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1042597770690918, "compression_ratio": 1.4747474747474747, "no_speech_prob": 1.5779485238454072e-06}, {"id": 350, "seek": 211860, "start": 2118.6, "end": 2123.4, "text": " Instead of using a random forest we can use a neural net.", "tokens": [50364, 7156, 295, 1228, 257, 4974, 6719, 321, 393, 764, 257, 18161, 2533, 13, 50604, 50604, 823, 294, 341, 1412, 992, 456, 366, 512, 10957, 13766, 293, 456, 366, 512, 19250, 804, 13766, 13, 51392, 51392, 823, 286, 478, 406, 516, 281, 352, 666, 264, 4365, 886, 709, 457, 294, 2099, 264, 321, 393, 4994, 484, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.09781463267439502, "compression_ratio": 1.5827814569536425, "no_speech_prob": 1.9333508589625126e-06}, {"id": 351, "seek": 211860, "start": 2123.4, "end": 2139.16, "text": " Now in this data set there are some continuous columns and there are some categorical columns.", "tokens": [50364, 7156, 295, 1228, 257, 4974, 6719, 321, 393, 764, 257, 18161, 2533, 13, 50604, 50604, 823, 294, 341, 1412, 992, 456, 366, 512, 10957, 13766, 293, 456, 366, 512, 19250, 804, 13766, 13, 51392, 51392, 823, 286, 478, 406, 516, 281, 352, 666, 264, 4365, 886, 709, 457, 294, 2099, 264, 321, 393, 4994, 484, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.09781463267439502, "compression_ratio": 1.5827814569536425, "no_speech_prob": 1.9333508589625126e-06}, {"id": 352, "seek": 211860, "start": 2139.16, "end": 2145.48, "text": " Now I'm not going to go into the details too much but in short the we can separate out", "tokens": [50364, 7156, 295, 1228, 257, 4974, 6719, 321, 393, 764, 257, 18161, 2533, 13, 50604, 50604, 823, 294, 341, 1412, 992, 456, 366, 512, 10957, 13766, 293, 456, 366, 512, 19250, 804, 13766, 13, 51392, 51392, 823, 286, 478, 406, 516, 281, 352, 666, 264, 4365, 886, 709, 457, 294, 2099, 264, 321, 393, 4994, 484, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.09781463267439502, "compression_ratio": 1.5827814569536425, "no_speech_prob": 1.9333508589625126e-06}, {"id": 353, "seek": 214548, "start": 2145.48, "end": 2151.64, "text": " the continuous columns and categorical columns using CONT cat split and that will automatically", "tokens": [50364, 264, 10957, 13766, 293, 19250, 804, 13766, 1228, 16596, 51, 3857, 7472, 293, 300, 486, 6772, 50672, 50672, 915, 597, 307, 597, 2361, 322, 641, 1412, 3467, 13, 50990, 50990, 400, 370, 294, 341, 1389, 309, 1542, 411, 1392, 370, 10957, 13766, 264, 806, 2382, 292, 8680, 4002, 370, 51442, 51442, 286, 519, 300, 311, 264, 1230, 295, 3949, 420, 924, 420, 746, 1670, 264, 722, 295, 264, 1412, 992, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.18309790379292257, "compression_ratio": 1.6275510204081634, "no_speech_prob": 1.0188067562921788e-06}, {"id": 354, "seek": 214548, "start": 2151.64, "end": 2158.0, "text": " find which is which based on their data types.", "tokens": [50364, 264, 10957, 13766, 293, 19250, 804, 13766, 1228, 16596, 51, 3857, 7472, 293, 300, 486, 6772, 50672, 50672, 915, 597, 307, 597, 2361, 322, 641, 1412, 3467, 13, 50990, 50990, 400, 370, 294, 341, 1389, 309, 1542, 411, 1392, 370, 10957, 13766, 264, 806, 2382, 292, 8680, 4002, 370, 51442, 51442, 286, 519, 300, 311, 264, 1230, 295, 3949, 420, 924, 420, 746, 1670, 264, 722, 295, 264, 1412, 992, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.18309790379292257, "compression_ratio": 1.6275510204081634, "no_speech_prob": 1.0188067562921788e-06}, {"id": 355, "seek": 214548, "start": 2158.0, "end": 2167.04, "text": " And so in this case it looks like okay so continuous columns the elapsed sale date so", "tokens": [50364, 264, 10957, 13766, 293, 19250, 804, 13766, 1228, 16596, 51, 3857, 7472, 293, 300, 486, 6772, 50672, 50672, 915, 597, 307, 597, 2361, 322, 641, 1412, 3467, 13, 50990, 50990, 400, 370, 294, 341, 1389, 309, 1542, 411, 1392, 370, 10957, 13766, 264, 806, 2382, 292, 8680, 4002, 370, 51442, 51442, 286, 519, 300, 311, 264, 1230, 295, 3949, 420, 924, 420, 746, 1670, 264, 722, 295, 264, 1412, 992, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.18309790379292257, "compression_ratio": 1.6275510204081634, "no_speech_prob": 1.0188067562921788e-06}, {"id": 356, "seek": 214548, "start": 2167.04, "end": 2172.3, "text": " I think that's the number of seconds or years or something since the start of the data set", "tokens": [50364, 264, 10957, 13766, 293, 19250, 804, 13766, 1228, 16596, 51, 3857, 7472, 293, 300, 486, 6772, 50672, 50672, 915, 597, 307, 597, 2361, 322, 641, 1412, 3467, 13, 50990, 50990, 400, 370, 294, 341, 1389, 309, 1542, 411, 1392, 370, 10957, 13766, 264, 806, 2382, 292, 8680, 4002, 370, 51442, 51442, 286, 519, 300, 311, 264, 1230, 295, 3949, 420, 924, 420, 746, 1670, 264, 722, 295, 264, 1412, 992, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.18309790379292257, "compression_ratio": 1.6275510204081634, "no_speech_prob": 1.0188067562921788e-06}, {"id": 357, "seek": 217230, "start": 2172.3, "end": 2176.1400000000003, "text": " is a continuous variable.", "tokens": [50364, 307, 257, 10957, 7006, 13, 50556, 50556, 400, 550, 510, 366, 264, 19250, 804, 9102, 370, 337, 1365, 456, 366, 2309, 819, 1674, 50837, 50837, 11602, 293, 732, 1384, 22732, 3652, 11, 2625, 19600, 2316, 24406, 11, 2309, 2058, 9389, 1303, 11, 3282, 11756, 11602, 51283, 51283, 293, 370, 5220, 13, 51503, 51503], "temperature": 0.0, "avg_logprob": -0.149983718178489, "compression_ratio": 1.4304635761589404, "no_speech_prob": 1.6797259831946576e-06}, {"id": 358, "seek": 217230, "start": 2176.1400000000003, "end": 2181.76, "text": " And then here are the categorical variables so for example there are six different product", "tokens": [50364, 307, 257, 10957, 7006, 13, 50556, 50556, 400, 550, 510, 366, 264, 19250, 804, 9102, 370, 337, 1365, 456, 366, 2309, 819, 1674, 50837, 50837, 11602, 293, 732, 1384, 22732, 3652, 11, 2625, 19600, 2316, 24406, 11, 2309, 2058, 9389, 1303, 11, 3282, 11756, 11602, 51283, 51283, 293, 370, 5220, 13, 51503, 51503], "temperature": 0.0, "avg_logprob": -0.149983718178489, "compression_ratio": 1.4304635761589404, "no_speech_prob": 1.6797259831946576e-06}, {"id": 359, "seek": 217230, "start": 2181.76, "end": 2190.6800000000003, "text": " sizes and two coupler systems, 5059 model descriptions, six enclosures, 17 tire sizes", "tokens": [50364, 307, 257, 10957, 7006, 13, 50556, 50556, 400, 550, 510, 366, 264, 19250, 804, 9102, 370, 337, 1365, 456, 366, 2309, 819, 1674, 50837, 50837, 11602, 293, 732, 1384, 22732, 3652, 11, 2625, 19600, 2316, 24406, 11, 2309, 2058, 9389, 1303, 11, 3282, 11756, 11602, 51283, 51283, 293, 370, 5220, 13, 51503, 51503], "temperature": 0.0, "avg_logprob": -0.149983718178489, "compression_ratio": 1.4304635761589404, "no_speech_prob": 1.6797259831946576e-06}, {"id": 360, "seek": 217230, "start": 2190.6800000000003, "end": 2195.0800000000004, "text": " and so forth.", "tokens": [50364, 307, 257, 10957, 7006, 13, 50556, 50556, 400, 550, 510, 366, 264, 19250, 804, 9102, 370, 337, 1365, 456, 366, 2309, 819, 1674, 50837, 50837, 11602, 293, 732, 1384, 22732, 3652, 11, 2625, 19600, 2316, 24406, 11, 2309, 2058, 9389, 1303, 11, 3282, 11756, 11602, 51283, 51283, 293, 370, 5220, 13, 51503, 51503], "temperature": 0.0, "avg_logprob": -0.149983718178489, "compression_ratio": 1.4304635761589404, "no_speech_prob": 1.6797259831946576e-06}, {"id": 361, "seek": 219508, "start": 2195.08, "end": 2206.72, "text": " So we can use fast AI basically to say okay we'll take that data frame and pass in the", "tokens": [50364, 407, 321, 393, 764, 2370, 7318, 1936, 281, 584, 1392, 321, 603, 747, 300, 1412, 3920, 293, 1320, 294, 264, 50946, 50946, 19250, 804, 293, 10957, 9102, 293, 1884, 512, 4974, 37741, 293, 437, 311, 264, 12334, 51250, 51250, 7006, 293, 321, 393, 1884, 1412, 3677, 433, 490, 300, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.09804845739293981, "compression_ratio": 1.5266666666666666, "no_speech_prob": 2.1355404555833957e-07}, {"id": 362, "seek": 219508, "start": 2206.72, "end": 2212.7999999999997, "text": " categorical and continuous variables and create some random splits and what's the dependent", "tokens": [50364, 407, 321, 393, 764, 2370, 7318, 1936, 281, 584, 1392, 321, 603, 747, 300, 1412, 3920, 293, 1320, 294, 264, 50946, 50946, 19250, 804, 293, 10957, 9102, 293, 1884, 512, 4974, 37741, 293, 437, 311, 264, 12334, 51250, 51250, 7006, 293, 321, 393, 1884, 1412, 3677, 433, 490, 300, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.09804845739293981, "compression_ratio": 1.5266666666666666, "no_speech_prob": 2.1355404555833957e-07}, {"id": 363, "seek": 219508, "start": 2212.7999999999997, "end": 2222.36, "text": " variable and we can create data loaders from that.", "tokens": [50364, 407, 321, 393, 764, 2370, 7318, 1936, 281, 584, 1392, 321, 603, 747, 300, 1412, 3920, 293, 1320, 294, 264, 50946, 50946, 19250, 804, 293, 10957, 9102, 293, 1884, 512, 4974, 37741, 293, 437, 311, 264, 12334, 51250, 51250, 7006, 293, 321, 393, 1884, 1412, 3677, 433, 490, 300, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.09804845739293981, "compression_ratio": 1.5266666666666666, "no_speech_prob": 2.1355404555833957e-07}, {"id": 364, "seek": 222236, "start": 2222.36, "end": 2227.96, "text": " And from that we can create a tabular learner and basically what that's going to do is it's", "tokens": [50364, 400, 490, 300, 321, 393, 1884, 257, 4421, 1040, 33347, 293, 1936, 437, 300, 311, 516, 281, 360, 307, 309, 311, 50644, 50644, 516, 281, 1884, 257, 1238, 3890, 4825, 12, 8376, 260, 18161, 3209, 406, 300, 819, 281, 341, 51154, 51154, 472, 300, 321, 2942, 538, 1011, 13, 51408, 51408, 400, 1184, 295, 264, 19250, 804, 9102, 309, 311, 516, 281, 1884, 364, 12240, 3584, 337, 309, 293, 370, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.10390583888904469, "compression_ratio": 1.69364161849711, "no_speech_prob": 1.018807097352692e-06}, {"id": 365, "seek": 222236, "start": 2227.96, "end": 2238.1600000000003, "text": " going to create a pretty regular multi-layer neural network not that different to this", "tokens": [50364, 400, 490, 300, 321, 393, 1884, 257, 4421, 1040, 33347, 293, 1936, 437, 300, 311, 516, 281, 360, 307, 309, 311, 50644, 50644, 516, 281, 1884, 257, 1238, 3890, 4825, 12, 8376, 260, 18161, 3209, 406, 300, 819, 281, 341, 51154, 51154, 472, 300, 321, 2942, 538, 1011, 13, 51408, 51408, 400, 1184, 295, 264, 19250, 804, 9102, 309, 311, 516, 281, 1884, 364, 12240, 3584, 337, 309, 293, 370, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.10390583888904469, "compression_ratio": 1.69364161849711, "no_speech_prob": 1.018807097352692e-06}, {"id": 366, "seek": 222236, "start": 2238.1600000000003, "end": 2243.2400000000002, "text": " one that we created by hand.", "tokens": [50364, 400, 490, 300, 321, 393, 1884, 257, 4421, 1040, 33347, 293, 1936, 437, 300, 311, 516, 281, 360, 307, 309, 311, 50644, 50644, 516, 281, 1884, 257, 1238, 3890, 4825, 12, 8376, 260, 18161, 3209, 406, 300, 819, 281, 341, 51154, 51154, 472, 300, 321, 2942, 538, 1011, 13, 51408, 51408, 400, 1184, 295, 264, 19250, 804, 9102, 309, 311, 516, 281, 1884, 364, 12240, 3584, 337, 309, 293, 370, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.10390583888904469, "compression_ratio": 1.69364161849711, "no_speech_prob": 1.018807097352692e-06}, {"id": 367, "seek": 222236, "start": 2243.2400000000002, "end": 2249.1200000000003, "text": " And each of the categorical variables it's going to create an embedding for it and so", "tokens": [50364, 400, 490, 300, 321, 393, 1884, 257, 4421, 1040, 33347, 293, 1936, 437, 300, 311, 516, 281, 360, 307, 309, 311, 50644, 50644, 516, 281, 1884, 257, 1238, 3890, 4825, 12, 8376, 260, 18161, 3209, 406, 300, 819, 281, 341, 51154, 51154, 472, 300, 321, 2942, 538, 1011, 13, 51408, 51408, 400, 1184, 295, 264, 19250, 804, 9102, 309, 311, 516, 281, 1884, 364, 12240, 3584, 337, 309, 293, 370, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.10390583888904469, "compression_ratio": 1.69364161849711, "no_speech_prob": 1.018807097352692e-06}, {"id": 368, "seek": 224912, "start": 2249.12, "end": 2255.2, "text": " I can actually show you this right so we're going to use tabular learner to create the", "tokens": [50364, 286, 393, 767, 855, 291, 341, 558, 370, 321, 434, 516, 281, 764, 4421, 1040, 33347, 281, 1884, 264, 50668, 50668, 33347, 293, 370, 4421, 1040, 33347, 307, 472, 732, 1045, 1451, 1732, 2309, 3407, 3180, 4949, 3876, 50936, 50936, 295, 3089, 293, 1936, 264, 2135, 551, 309, 775, 307, 1884, 257, 4421, 1040, 2316, 293, 370, 550, 4421, 1040, 51246, 51246, 2316, 291, 434, 406, 516, 281, 1223, 439, 295, 309, 457, 291, 1062, 312, 6100, 412, 577, 709, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.0844983830171473, "compression_ratio": 1.7626262626262625, "no_speech_prob": 2.123375907103764e-06}, {"id": 369, "seek": 224912, "start": 2255.2, "end": 2260.56, "text": " learner and so tabular learner is one two three four five six seven eight nine lines", "tokens": [50364, 286, 393, 767, 855, 291, 341, 558, 370, 321, 434, 516, 281, 764, 4421, 1040, 33347, 281, 1884, 264, 50668, 50668, 33347, 293, 370, 4421, 1040, 33347, 307, 472, 732, 1045, 1451, 1732, 2309, 3407, 3180, 4949, 3876, 50936, 50936, 295, 3089, 293, 1936, 264, 2135, 551, 309, 775, 307, 1884, 257, 4421, 1040, 2316, 293, 370, 550, 4421, 1040, 51246, 51246, 2316, 291, 434, 406, 516, 281, 1223, 439, 295, 309, 457, 291, 1062, 312, 6100, 412, 577, 709, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.0844983830171473, "compression_ratio": 1.7626262626262625, "no_speech_prob": 2.123375907103764e-06}, {"id": 370, "seek": 224912, "start": 2260.56, "end": 2266.7599999999998, "text": " of code and basically the main thing it does is create a tabular model and so then tabular", "tokens": [50364, 286, 393, 767, 855, 291, 341, 558, 370, 321, 434, 516, 281, 764, 4421, 1040, 33347, 281, 1884, 264, 50668, 50668, 33347, 293, 370, 4421, 1040, 33347, 307, 472, 732, 1045, 1451, 1732, 2309, 3407, 3180, 4949, 3876, 50936, 50936, 295, 3089, 293, 1936, 264, 2135, 551, 309, 775, 307, 1884, 257, 4421, 1040, 2316, 293, 370, 550, 4421, 1040, 51246, 51246, 2316, 291, 434, 406, 516, 281, 1223, 439, 295, 309, 457, 291, 1062, 312, 6100, 412, 577, 709, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.0844983830171473, "compression_ratio": 1.7626262626262625, "no_speech_prob": 2.123375907103764e-06}, {"id": 371, "seek": 224912, "start": 2266.7599999999998, "end": 2273.3599999999997, "text": " model you're not going to understand all of it but you might be surprised at how much.", "tokens": [50364, 286, 393, 767, 855, 291, 341, 558, 370, 321, 434, 516, 281, 764, 4421, 1040, 33347, 281, 1884, 264, 50668, 50668, 33347, 293, 370, 4421, 1040, 33347, 307, 472, 732, 1045, 1451, 1732, 2309, 3407, 3180, 4949, 3876, 50936, 50936, 295, 3089, 293, 1936, 264, 2135, 551, 309, 775, 307, 1884, 257, 4421, 1040, 2316, 293, 370, 550, 4421, 1040, 51246, 51246, 2316, 291, 434, 406, 516, 281, 1223, 439, 295, 309, 457, 291, 1062, 312, 6100, 412, 577, 709, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.0844983830171473, "compression_ratio": 1.7626262626262625, "no_speech_prob": 2.123375907103764e-06}, {"id": 372, "seek": 227336, "start": 2273.36, "end": 2279.36, "text": " So a tabular model is a module we're going to be passing in how big is each embedding", "tokens": [50364, 407, 257, 4421, 1040, 2316, 307, 257, 10088, 321, 434, 516, 281, 312, 8437, 294, 577, 955, 307, 1184, 12240, 3584, 50664, 50664, 516, 281, 312, 293, 4421, 1040, 33347, 437, 311, 300, 8437, 294, 309, 311, 516, 281, 818, 483, 12240, 3584, 51174, 51174, 11602, 445, 411, 321, 630, 16945, 949, 6772, 13, 51446, 51446, 407, 300, 311, 577, 309, 2170, 505, 12240, 3584, 11602, 293, 550, 309, 311, 516, 281, 1884, 364, 12240, 3584, 337, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.08905937053539136, "compression_ratio": 1.863905325443787, "no_speech_prob": 7.571142646156659e-07}, {"id": 373, "seek": 227336, "start": 2279.36, "end": 2289.56, "text": " going to be and tabular learner what's that passing in it's going to call get embedding", "tokens": [50364, 407, 257, 4421, 1040, 2316, 307, 257, 10088, 321, 434, 516, 281, 312, 8437, 294, 577, 955, 307, 1184, 12240, 3584, 50664, 50664, 516, 281, 312, 293, 4421, 1040, 33347, 437, 311, 300, 8437, 294, 309, 311, 516, 281, 818, 483, 12240, 3584, 51174, 51174, 11602, 445, 411, 321, 630, 16945, 949, 6772, 13, 51446, 51446, 407, 300, 311, 577, 309, 2170, 505, 12240, 3584, 11602, 293, 550, 309, 311, 516, 281, 1884, 364, 12240, 3584, 337, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.08905937053539136, "compression_ratio": 1.863905325443787, "no_speech_prob": 7.571142646156659e-07}, {"id": 374, "seek": 227336, "start": 2289.56, "end": 2295.0, "text": " sizes just like we did manually before automatically.", "tokens": [50364, 407, 257, 4421, 1040, 2316, 307, 257, 10088, 321, 434, 516, 281, 312, 8437, 294, 577, 955, 307, 1184, 12240, 3584, 50664, 50664, 516, 281, 312, 293, 4421, 1040, 33347, 437, 311, 300, 8437, 294, 309, 311, 516, 281, 818, 483, 12240, 3584, 51174, 51174, 11602, 445, 411, 321, 630, 16945, 949, 6772, 13, 51446, 51446, 407, 300, 311, 577, 309, 2170, 505, 12240, 3584, 11602, 293, 550, 309, 311, 516, 281, 1884, 364, 12240, 3584, 337, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.08905937053539136, "compression_ratio": 1.863905325443787, "no_speech_prob": 7.571142646156659e-07}, {"id": 375, "seek": 227336, "start": 2295.0, "end": 2301.6800000000003, "text": " So that's how it gets us embedding sizes and then it's going to create an embedding for", "tokens": [50364, 407, 257, 4421, 1040, 2316, 307, 257, 10088, 321, 434, 516, 281, 312, 8437, 294, 577, 955, 307, 1184, 12240, 3584, 50664, 50664, 516, 281, 312, 293, 4421, 1040, 33347, 437, 311, 300, 8437, 294, 309, 311, 516, 281, 818, 483, 12240, 3584, 51174, 51174, 11602, 445, 411, 321, 630, 16945, 949, 6772, 13, 51446, 51446, 407, 300, 311, 577, 309, 2170, 505, 12240, 3584, 11602, 293, 550, 309, 311, 516, 281, 1884, 364, 12240, 3584, 337, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.08905937053539136, "compression_ratio": 1.863905325443787, "no_speech_prob": 7.571142646156659e-07}, {"id": 376, "seek": 230168, "start": 2301.68, "end": 2309.52, "text": " each of those embedding sizes from number of inputs to number of factors.", "tokens": [50364, 1184, 295, 729, 12240, 3584, 11602, 490, 1230, 295, 15743, 281, 1230, 295, 6771, 13, 50756, 50756, 17675, 346, 321, 434, 516, 281, 808, 646, 281, 1780, 15245, 2026, 321, 1582, 380, 360, 4288, 644, 732, 13, 51020, 51020, 407, 550, 309, 311, 516, 281, 1884, 257, 4583, 337, 1184, 295, 264, 7914, 321, 528, 597, 307, 516, 281, 5304, 51262, 51262, 257, 8213, 4583, 6263, 538, 15245, 2026, 6263, 538, 3270, 346, 13, 51552, 51552, 467, 311, 516, 281, 909, 264, 4556, 3280, 327, 3613, 321, 600, 2825, 466, 412, 264, 588, 917, 293, 370, 264, 2128, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12278196858424767, "compression_ratio": 1.7837837837837838, "no_speech_prob": 9.570811698722537e-07}, {"id": 377, "seek": 230168, "start": 2309.52, "end": 2314.7999999999997, "text": " Dropout we're going to come back to later batch norm we won't do till part two.", "tokens": [50364, 1184, 295, 729, 12240, 3584, 11602, 490, 1230, 295, 15743, 281, 1230, 295, 6771, 13, 50756, 50756, 17675, 346, 321, 434, 516, 281, 808, 646, 281, 1780, 15245, 2026, 321, 1582, 380, 360, 4288, 644, 732, 13, 51020, 51020, 407, 550, 309, 311, 516, 281, 1884, 257, 4583, 337, 1184, 295, 264, 7914, 321, 528, 597, 307, 516, 281, 5304, 51262, 51262, 257, 8213, 4583, 6263, 538, 15245, 2026, 6263, 538, 3270, 346, 13, 51552, 51552, 467, 311, 516, 281, 909, 264, 4556, 3280, 327, 3613, 321, 600, 2825, 466, 412, 264, 588, 917, 293, 370, 264, 2128, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12278196858424767, "compression_ratio": 1.7837837837837838, "no_speech_prob": 9.570811698722537e-07}, {"id": 378, "seek": 230168, "start": 2314.7999999999997, "end": 2319.64, "text": " So then it's going to create a layer for each of the layers we want which is going to contain", "tokens": [50364, 1184, 295, 729, 12240, 3584, 11602, 490, 1230, 295, 15743, 281, 1230, 295, 6771, 13, 50756, 50756, 17675, 346, 321, 434, 516, 281, 808, 646, 281, 1780, 15245, 2026, 321, 1582, 380, 360, 4288, 644, 732, 13, 51020, 51020, 407, 550, 309, 311, 516, 281, 1884, 257, 4583, 337, 1184, 295, 264, 7914, 321, 528, 597, 307, 516, 281, 5304, 51262, 51262, 257, 8213, 4583, 6263, 538, 15245, 2026, 6263, 538, 3270, 346, 13, 51552, 51552, 467, 311, 516, 281, 909, 264, 4556, 3280, 327, 3613, 321, 600, 2825, 466, 412, 264, 588, 917, 293, 370, 264, 2128, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12278196858424767, "compression_ratio": 1.7837837837837838, "no_speech_prob": 9.570811698722537e-07}, {"id": 379, "seek": 230168, "start": 2319.64, "end": 2325.44, "text": " a linear layer followed by batch norm followed by dropout.", "tokens": [50364, 1184, 295, 729, 12240, 3584, 11602, 490, 1230, 295, 15743, 281, 1230, 295, 6771, 13, 50756, 50756, 17675, 346, 321, 434, 516, 281, 808, 646, 281, 1780, 15245, 2026, 321, 1582, 380, 360, 4288, 644, 732, 13, 51020, 51020, 407, 550, 309, 311, 516, 281, 1884, 257, 4583, 337, 1184, 295, 264, 7914, 321, 528, 597, 307, 516, 281, 5304, 51262, 51262, 257, 8213, 4583, 6263, 538, 15245, 2026, 6263, 538, 3270, 346, 13, 51552, 51552, 467, 311, 516, 281, 909, 264, 4556, 3280, 327, 3613, 321, 600, 2825, 466, 412, 264, 588, 917, 293, 370, 264, 2128, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12278196858424767, "compression_ratio": 1.7837837837837838, "no_speech_prob": 9.570811698722537e-07}, {"id": 380, "seek": 230168, "start": 2325.44, "end": 2331.3999999999996, "text": " It's going to add the sigmoid range we've talked about at the very end and so the forward", "tokens": [50364, 1184, 295, 729, 12240, 3584, 11602, 490, 1230, 295, 15743, 281, 1230, 295, 6771, 13, 50756, 50756, 17675, 346, 321, 434, 516, 281, 808, 646, 281, 1780, 15245, 2026, 321, 1582, 380, 360, 4288, 644, 732, 13, 51020, 51020, 407, 550, 309, 311, 516, 281, 1884, 257, 4583, 337, 1184, 295, 264, 7914, 321, 528, 597, 307, 516, 281, 5304, 51262, 51262, 257, 8213, 4583, 6263, 538, 15245, 2026, 6263, 538, 3270, 346, 13, 51552, 51552, 467, 311, 516, 281, 909, 264, 4556, 3280, 327, 3613, 321, 600, 2825, 466, 412, 264, 588, 917, 293, 370, 264, 2128, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12278196858424767, "compression_ratio": 1.7837837837837838, "no_speech_prob": 9.570811698722537e-07}, {"id": 381, "seek": 233140, "start": 2331.4, "end": 2335.08, "text": " this is the entire thing.", "tokens": [50364, 341, 307, 264, 2302, 551, 13, 50548, 50548, 759, 456, 311, 512, 12240, 29432, 309, 603, 352, 807, 293, 483, 1184, 295, 264, 12240, 29432, 1228, 264, 912, 50744, 50744, 8186, 278, 3109, 321, 600, 1143, 949, 13, 50874, 50874, 467, 603, 1588, 7186, 473, 552, 439, 1214, 293, 550, 309, 603, 1190, 309, 807, 264, 7914, 295, 264, 18161, 51236, 51236, 2533, 597, 366, 613, 13, 51472, 51472, 407, 1338, 321, 500, 380, 458, 439, 295, 729, 4365, 1939, 457, 321, 458, 1596, 257, 1326, 295, 552, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13397186033187375, "compression_ratio": 1.6780487804878048, "no_speech_prob": 1.459373038414924e-06}, {"id": 382, "seek": 233140, "start": 2335.08, "end": 2339.0, "text": " If there's some embeddings it'll go through and get each of the embeddings using the same", "tokens": [50364, 341, 307, 264, 2302, 551, 13, 50548, 50548, 759, 456, 311, 512, 12240, 29432, 309, 603, 352, 807, 293, 483, 1184, 295, 264, 12240, 29432, 1228, 264, 912, 50744, 50744, 8186, 278, 3109, 321, 600, 1143, 949, 13, 50874, 50874, 467, 603, 1588, 7186, 473, 552, 439, 1214, 293, 550, 309, 603, 1190, 309, 807, 264, 7914, 295, 264, 18161, 51236, 51236, 2533, 597, 366, 613, 13, 51472, 51472, 407, 1338, 321, 500, 380, 458, 439, 295, 729, 4365, 1939, 457, 321, 458, 1596, 257, 1326, 295, 552, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13397186033187375, "compression_ratio": 1.6780487804878048, "no_speech_prob": 1.459373038414924e-06}, {"id": 383, "seek": 233140, "start": 2339.0, "end": 2341.6, "text": " indexing approach we've used before.", "tokens": [50364, 341, 307, 264, 2302, 551, 13, 50548, 50548, 759, 456, 311, 512, 12240, 29432, 309, 603, 352, 807, 293, 483, 1184, 295, 264, 12240, 29432, 1228, 264, 912, 50744, 50744, 8186, 278, 3109, 321, 600, 1143, 949, 13, 50874, 50874, 467, 603, 1588, 7186, 473, 552, 439, 1214, 293, 550, 309, 603, 1190, 309, 807, 264, 7914, 295, 264, 18161, 51236, 51236, 2533, 597, 366, 613, 13, 51472, 51472, 407, 1338, 321, 500, 380, 458, 439, 295, 729, 4365, 1939, 457, 321, 458, 1596, 257, 1326, 295, 552, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13397186033187375, "compression_ratio": 1.6780487804878048, "no_speech_prob": 1.459373038414924e-06}, {"id": 384, "seek": 233140, "start": 2341.6, "end": 2348.84, "text": " It'll concatenate them all together and then it'll run it through the layers of the neural", "tokens": [50364, 341, 307, 264, 2302, 551, 13, 50548, 50548, 759, 456, 311, 512, 12240, 29432, 309, 603, 352, 807, 293, 483, 1184, 295, 264, 12240, 29432, 1228, 264, 912, 50744, 50744, 8186, 278, 3109, 321, 600, 1143, 949, 13, 50874, 50874, 467, 603, 1588, 7186, 473, 552, 439, 1214, 293, 550, 309, 603, 1190, 309, 807, 264, 7914, 295, 264, 18161, 51236, 51236, 2533, 597, 366, 613, 13, 51472, 51472, 407, 1338, 321, 500, 380, 458, 439, 295, 729, 4365, 1939, 457, 321, 458, 1596, 257, 1326, 295, 552, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13397186033187375, "compression_ratio": 1.6780487804878048, "no_speech_prob": 1.459373038414924e-06}, {"id": 385, "seek": 233140, "start": 2348.84, "end": 2353.56, "text": " net which are these.", "tokens": [50364, 341, 307, 264, 2302, 551, 13, 50548, 50548, 759, 456, 311, 512, 12240, 29432, 309, 603, 352, 807, 293, 483, 1184, 295, 264, 12240, 29432, 1228, 264, 912, 50744, 50744, 8186, 278, 3109, 321, 600, 1143, 949, 13, 50874, 50874, 467, 603, 1588, 7186, 473, 552, 439, 1214, 293, 550, 309, 603, 1190, 309, 807, 264, 7914, 295, 264, 18161, 51236, 51236, 2533, 597, 366, 613, 13, 51472, 51472, 407, 1338, 321, 500, 380, 458, 439, 295, 729, 4365, 1939, 457, 321, 458, 1596, 257, 1326, 295, 552, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13397186033187375, "compression_ratio": 1.6780487804878048, "no_speech_prob": 1.459373038414924e-06}, {"id": 386, "seek": 233140, "start": 2353.56, "end": 2359.2400000000002, "text": " So yeah we don't know all of those details yet but we know quite a few of them.", "tokens": [50364, 341, 307, 264, 2302, 551, 13, 50548, 50548, 759, 456, 311, 512, 12240, 29432, 309, 603, 352, 807, 293, 483, 1184, 295, 264, 12240, 29432, 1228, 264, 912, 50744, 50744, 8186, 278, 3109, 321, 600, 1143, 949, 13, 50874, 50874, 467, 603, 1588, 7186, 473, 552, 439, 1214, 293, 550, 309, 603, 1190, 309, 807, 264, 7914, 295, 264, 18161, 51236, 51236, 2533, 597, 366, 613, 13, 51472, 51472, 407, 1338, 321, 500, 380, 458, 439, 295, 729, 4365, 1939, 457, 321, 458, 1596, 257, 1326, 295, 552, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13397186033187375, "compression_ratio": 1.6780487804878048, "no_speech_prob": 1.459373038414924e-06}, {"id": 387, "seek": 235924, "start": 2359.24, "end": 2372.12, "text": " So that's encouraging hopefully.", "tokens": [50364, 407, 300, 311, 14580, 4696, 13, 51008, 51008, 400, 1564, 321, 600, 658, 300, 321, 393, 360, 264, 3832, 441, 49, 915, 293, 3318, 13, 51284, 51284, 823, 341, 1900, 28872, 390, 1143, 294, 257, 48751, 22631, 6211, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.15741310563198355, "compression_ratio": 1.2540983606557377, "no_speech_prob": 1.9033753915209672e-06}, {"id": 388, "seek": 235924, "start": 2372.12, "end": 2377.64, "text": " And once we've got that we can do the standard LR find and fit.", "tokens": [50364, 407, 300, 311, 14580, 4696, 13, 51008, 51008, 400, 1564, 321, 600, 658, 300, 321, 393, 360, 264, 3832, 441, 49, 915, 293, 3318, 13, 51284, 51284, 823, 341, 1900, 28872, 390, 1143, 294, 257, 48751, 22631, 6211, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.15741310563198355, "compression_ratio": 1.2540983606557377, "no_speech_prob": 1.9033753915209672e-06}, {"id": 389, "seek": 235924, "start": 2377.64, "end": 2388.12, "text": " Now this exact dataset was used in a Kaggle competition.", "tokens": [50364, 407, 300, 311, 14580, 4696, 13, 51008, 51008, 400, 1564, 321, 600, 658, 300, 321, 393, 360, 264, 3832, 441, 49, 915, 293, 3318, 13, 51284, 51284, 823, 341, 1900, 28872, 390, 1143, 294, 257, 48751, 22631, 6211, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.15741310563198355, "compression_ratio": 1.2540983606557377, "no_speech_prob": 1.9033753915209672e-06}, {"id": 390, "seek": 238812, "start": 2388.12, "end": 2395.7999999999997, "text": " This dataset was in a Kaggle competition and the third place getter published a paper about", "tokens": [50364, 639, 28872, 390, 294, 257, 48751, 22631, 6211, 293, 264, 2636, 1081, 483, 391, 6572, 257, 3035, 466, 50748, 50748, 641, 6532, 293, 309, 311, 1936, 264, 1900, 1920, 264, 1900, 472, 286, 478, 4099, 291, 510, 13, 50964, 50964, 407, 309, 2067, 380, 341, 28872, 309, 390, 257, 819, 472, 13, 51360, 51360, 467, 390, 466, 32884, 264, 2372, 295, 5763, 294, 819, 9512, 457, 436, 1143, 341, 3875, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.1744979007824047, "compression_ratio": 1.6307692307692307, "no_speech_prob": 2.56113139585068e-06}, {"id": 391, "seek": 238812, "start": 2395.7999999999997, "end": 2400.12, "text": " their technique and it's basically the exact almost the exact one I'm showing you here.", "tokens": [50364, 639, 28872, 390, 294, 257, 48751, 22631, 6211, 293, 264, 2636, 1081, 483, 391, 6572, 257, 3035, 466, 50748, 50748, 641, 6532, 293, 309, 311, 1936, 264, 1900, 1920, 264, 1900, 472, 286, 478, 4099, 291, 510, 13, 50964, 50964, 407, 309, 2067, 380, 341, 28872, 309, 390, 257, 819, 472, 13, 51360, 51360, 467, 390, 466, 32884, 264, 2372, 295, 5763, 294, 819, 9512, 457, 436, 1143, 341, 3875, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.1744979007824047, "compression_ratio": 1.6307692307692307, "no_speech_prob": 2.56113139585068e-06}, {"id": 392, "seek": 238812, "start": 2400.12, "end": 2408.04, "text": " So it wasn't this dataset it was a different one.", "tokens": [50364, 639, 28872, 390, 294, 257, 48751, 22631, 6211, 293, 264, 2636, 1081, 483, 391, 6572, 257, 3035, 466, 50748, 50748, 641, 6532, 293, 309, 311, 1936, 264, 1900, 1920, 264, 1900, 472, 286, 478, 4099, 291, 510, 13, 50964, 50964, 407, 309, 2067, 380, 341, 28872, 309, 390, 257, 819, 472, 13, 51360, 51360, 467, 390, 466, 32884, 264, 2372, 295, 5763, 294, 819, 9512, 457, 436, 1143, 341, 3875, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.1744979007824047, "compression_ratio": 1.6307692307692307, "no_speech_prob": 2.56113139585068e-06}, {"id": 393, "seek": 238812, "start": 2408.04, "end": 2417.3199999999997, "text": " It was about predicting the amount of sales in different stores but they used this basic", "tokens": [50364, 639, 28872, 390, 294, 257, 48751, 22631, 6211, 293, 264, 2636, 1081, 483, 391, 6572, 257, 3035, 466, 50748, 50748, 641, 6532, 293, 309, 311, 1936, 264, 1900, 1920, 264, 1900, 472, 286, 478, 4099, 291, 510, 13, 50964, 50964, 407, 309, 2067, 380, 341, 28872, 309, 390, 257, 819, 472, 13, 51360, 51360, 467, 390, 466, 32884, 264, 2372, 295, 5763, 294, 819, 9512, 457, 436, 1143, 341, 3875, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.1744979007824047, "compression_ratio": 1.6307692307692307, "no_speech_prob": 2.56113139585068e-06}, {"id": 394, "seek": 241732, "start": 2417.32, "end": 2419.76, "text": " kind of technique.", "tokens": [50364, 733, 295, 6532, 13, 50486, 50486, 400, 472, 295, 264, 1880, 721, 307, 300, 436, 1143, 257, 688, 1570, 9688, 4111, 7043, 50816, 50816, 813, 264, 661, 1090, 7074, 23041, 411, 436, 632, 257, 709, 18587, 3109, 13, 51104, 51104, 400, 472, 295, 264, 1880, 721, 436, 6572, 257, 3035, 466, 641, 3109, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.1033879148549047, "compression_ratio": 1.7516778523489933, "no_speech_prob": 1.1189354154339526e-06}, {"id": 395, "seek": 241732, "start": 2419.76, "end": 2426.36, "text": " And one of the interesting things is that they used a lot less manual feature engineering", "tokens": [50364, 733, 295, 6532, 13, 50486, 50486, 400, 472, 295, 264, 1880, 721, 307, 300, 436, 1143, 257, 688, 1570, 9688, 4111, 7043, 50816, 50816, 813, 264, 661, 1090, 7074, 23041, 411, 436, 632, 257, 709, 18587, 3109, 13, 51104, 51104, 400, 472, 295, 264, 1880, 721, 436, 6572, 257, 3035, 466, 641, 3109, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.1033879148549047, "compression_ratio": 1.7516778523489933, "no_speech_prob": 1.1189354154339526e-06}, {"id": 396, "seek": 241732, "start": 2426.36, "end": 2432.1200000000003, "text": " than the other high placed entries like they had a much simpler approach.", "tokens": [50364, 733, 295, 6532, 13, 50486, 50486, 400, 472, 295, 264, 1880, 721, 307, 300, 436, 1143, 257, 688, 1570, 9688, 4111, 7043, 50816, 50816, 813, 264, 661, 1090, 7074, 23041, 411, 436, 632, 257, 709, 18587, 3109, 13, 51104, 51104, 400, 472, 295, 264, 1880, 721, 436, 6572, 257, 3035, 466, 641, 3109, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.1033879148549047, "compression_ratio": 1.7516778523489933, "no_speech_prob": 1.1189354154339526e-06}, {"id": 397, "seek": 241732, "start": 2432.1200000000003, "end": 2441.44, "text": " And one of the interesting things they published a paper about their approach.", "tokens": [50364, 733, 295, 6532, 13, 50486, 50486, 400, 472, 295, 264, 1880, 721, 307, 300, 436, 1143, 257, 688, 1570, 9688, 4111, 7043, 50816, 50816, 813, 264, 661, 1090, 7074, 23041, 411, 436, 632, 257, 709, 18587, 3109, 13, 51104, 51104, 400, 472, 295, 264, 1880, 721, 436, 6572, 257, 3035, 466, 641, 3109, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.1033879148549047, "compression_ratio": 1.7516778523489933, "no_speech_prob": 1.1189354154339526e-06}, {"id": 398, "seek": 244144, "start": 2441.44, "end": 2454.44, "text": " So this is the team from this company and they basically describe here exactly what", "tokens": [50364, 407, 341, 307, 264, 1469, 490, 341, 2237, 293, 436, 1936, 6786, 510, 2293, 437, 51014, 51014, 286, 445, 4712, 291, 613, 819, 12240, 3584, 7914, 885, 1588, 7186, 770, 1214, 293, 550, 51266, 51266, 516, 807, 257, 1916, 295, 7914, 295, 257, 18161, 3209, 13, 51480, 51480, 400, 309, 311, 4099, 510, 309, 2793, 484, 294, 264, 3035, 2293, 437, 321, 18991, 294, 264, 1036, 6898, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.09338728810699892, "compression_ratio": 1.5879396984924623, "no_speech_prob": 1.1189346196260885e-06}, {"id": 399, "seek": 244144, "start": 2454.44, "end": 2459.48, "text": " I just showed you these different embedding layers being concatenated together and then", "tokens": [50364, 407, 341, 307, 264, 1469, 490, 341, 2237, 293, 436, 1936, 6786, 510, 2293, 437, 51014, 51014, 286, 445, 4712, 291, 613, 819, 12240, 3584, 7914, 885, 1588, 7186, 770, 1214, 293, 550, 51266, 51266, 516, 807, 257, 1916, 295, 7914, 295, 257, 18161, 3209, 13, 51480, 51480, 400, 309, 311, 4099, 510, 309, 2793, 484, 294, 264, 3035, 2293, 437, 321, 18991, 294, 264, 1036, 6898, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.09338728810699892, "compression_ratio": 1.5879396984924623, "no_speech_prob": 1.1189346196260885e-06}, {"id": 400, "seek": 244144, "start": 2459.48, "end": 2463.76, "text": " going through a couple of layers of a neural network.", "tokens": [50364, 407, 341, 307, 264, 1469, 490, 341, 2237, 293, 436, 1936, 6786, 510, 2293, 437, 51014, 51014, 286, 445, 4712, 291, 613, 819, 12240, 3584, 7914, 885, 1588, 7186, 770, 1214, 293, 550, 51266, 51266, 516, 807, 257, 1916, 295, 7914, 295, 257, 18161, 3209, 13, 51480, 51480, 400, 309, 311, 4099, 510, 309, 2793, 484, 294, 264, 3035, 2293, 437, 321, 18991, 294, 264, 1036, 6898, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.09338728810699892, "compression_ratio": 1.5879396984924623, "no_speech_prob": 1.1189346196260885e-06}, {"id": 401, "seek": 244144, "start": 2463.76, "end": 2467.6, "text": " And it's showing here it points out in the paper exactly what we learnt in the last lesson", "tokens": [50364, 407, 341, 307, 264, 1469, 490, 341, 2237, 293, 436, 1936, 6786, 510, 2293, 437, 51014, 51014, 286, 445, 4712, 291, 613, 819, 12240, 3584, 7914, 885, 1588, 7186, 770, 1214, 293, 550, 51266, 51266, 516, 807, 257, 1916, 295, 7914, 295, 257, 18161, 3209, 13, 51480, 51480, 400, 309, 311, 4099, 510, 309, 2793, 484, 294, 264, 3035, 2293, 437, 321, 18991, 294, 264, 1036, 6898, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.09338728810699892, "compression_ratio": 1.5879396984924623, "no_speech_prob": 1.1189346196260885e-06}, {"id": 402, "seek": 246760, "start": 2467.6, "end": 2473.2799999999997, "text": " which is embedding layers are exactly equivalent to linear layers on top of a one hot encoded", "tokens": [50364, 597, 307, 12240, 3584, 7914, 366, 2293, 10344, 281, 8213, 7914, 322, 1192, 295, 257, 472, 2368, 2058, 12340, 50648, 50648, 4846, 13, 50890, 50890, 400, 1338, 436, 1352, 300, 641, 6532, 2732, 534, 731, 13, 51214, 51214, 1485, 295, 264, 1880, 721, 436, 611, 4712, 307, 300, 291, 393, 747, 291, 393, 1884, 428, 18161, 51496, 51496, 2533, 483, 428, 8895, 12240, 29432, 293, 550, 291, 393, 829, 729, 12240, 29432, 666, 257, 4974, 6719, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10805076360702515, "compression_ratio": 1.6844660194174756, "no_speech_prob": 2.190754230468883e-06}, {"id": 403, "seek": 246760, "start": 2473.2799999999997, "end": 2478.12, "text": " input.", "tokens": [50364, 597, 307, 12240, 3584, 7914, 366, 2293, 10344, 281, 8213, 7914, 322, 1192, 295, 257, 472, 2368, 2058, 12340, 50648, 50648, 4846, 13, 50890, 50890, 400, 1338, 436, 1352, 300, 641, 6532, 2732, 534, 731, 13, 51214, 51214, 1485, 295, 264, 1880, 721, 436, 611, 4712, 307, 300, 291, 393, 747, 291, 393, 1884, 428, 18161, 51496, 51496, 2533, 483, 428, 8895, 12240, 29432, 293, 550, 291, 393, 829, 729, 12240, 29432, 666, 257, 4974, 6719, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10805076360702515, "compression_ratio": 1.6844660194174756, "no_speech_prob": 2.190754230468883e-06}, {"id": 404, "seek": 246760, "start": 2478.12, "end": 2484.6, "text": " And yeah they found that their technique worked really well.", "tokens": [50364, 597, 307, 12240, 3584, 7914, 366, 2293, 10344, 281, 8213, 7914, 322, 1192, 295, 257, 472, 2368, 2058, 12340, 50648, 50648, 4846, 13, 50890, 50890, 400, 1338, 436, 1352, 300, 641, 6532, 2732, 534, 731, 13, 51214, 51214, 1485, 295, 264, 1880, 721, 436, 611, 4712, 307, 300, 291, 393, 747, 291, 393, 1884, 428, 18161, 51496, 51496, 2533, 483, 428, 8895, 12240, 29432, 293, 550, 291, 393, 829, 729, 12240, 29432, 666, 257, 4974, 6719, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10805076360702515, "compression_ratio": 1.6844660194174756, "no_speech_prob": 2.190754230468883e-06}, {"id": 405, "seek": 246760, "start": 2484.6, "end": 2490.24, "text": " One of the interesting things they also showed is that you can take you can create your neural", "tokens": [50364, 597, 307, 12240, 3584, 7914, 366, 2293, 10344, 281, 8213, 7914, 322, 1192, 295, 257, 472, 2368, 2058, 12340, 50648, 50648, 4846, 13, 50890, 50890, 400, 1338, 436, 1352, 300, 641, 6532, 2732, 534, 731, 13, 51214, 51214, 1485, 295, 264, 1880, 721, 436, 611, 4712, 307, 300, 291, 393, 747, 291, 393, 1884, 428, 18161, 51496, 51496, 2533, 483, 428, 8895, 12240, 29432, 293, 550, 291, 393, 829, 729, 12240, 29432, 666, 257, 4974, 6719, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10805076360702515, "compression_ratio": 1.6844660194174756, "no_speech_prob": 2.190754230468883e-06}, {"id": 406, "seek": 246760, "start": 2490.24, "end": 2496.6, "text": " net get your trained embeddings and then you can put those embeddings into a random forest", "tokens": [50364, 597, 307, 12240, 3584, 7914, 366, 2293, 10344, 281, 8213, 7914, 322, 1192, 295, 257, 472, 2368, 2058, 12340, 50648, 50648, 4846, 13, 50890, 50890, 400, 1338, 436, 1352, 300, 641, 6532, 2732, 534, 731, 13, 51214, 51214, 1485, 295, 264, 1880, 721, 436, 611, 4712, 307, 300, 291, 393, 747, 291, 393, 1884, 428, 18161, 51496, 51496, 2533, 483, 428, 8895, 12240, 29432, 293, 550, 291, 393, 829, 729, 12240, 29432, 666, 257, 4974, 6719, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10805076360702515, "compression_ratio": 1.6844660194174756, "no_speech_prob": 2.190754230468883e-06}, {"id": 407, "seek": 249660, "start": 2496.6, "end": 2503.8199999999997, "text": " or gradient boosted tree and your mean average percent error will dramatically improve.", "tokens": [50364, 420, 16235, 9194, 292, 4230, 293, 428, 914, 4274, 3043, 6713, 486, 17548, 3470, 13, 50725, 50725, 407, 291, 393, 767, 10432, 4974, 21700, 293, 12240, 29432, 420, 16235, 9194, 292, 5852, 293, 51084, 51084, 12240, 29432, 597, 307, 534, 1880, 13, 51236, 51236, 823, 437, 286, 534, 1415, 281, 855, 291, 1673, 307, 437, 436, 550, 630, 13, 51384, 51384, 407, 382, 286, 848, 341, 390, 257, 551, 466, 264, 19147, 2372, 300, 819, 3383, 576, 3607, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.11812075172982565, "compression_ratio": 1.7314814814814814, "no_speech_prob": 1.9333333511895034e-06}, {"id": 408, "seek": 249660, "start": 2503.8199999999997, "end": 2511.0, "text": " So you can actually combine random forests and embeddings or gradient boosted trees and", "tokens": [50364, 420, 16235, 9194, 292, 4230, 293, 428, 914, 4274, 3043, 6713, 486, 17548, 3470, 13, 50725, 50725, 407, 291, 393, 767, 10432, 4974, 21700, 293, 12240, 29432, 420, 16235, 9194, 292, 5852, 293, 51084, 51084, 12240, 29432, 597, 307, 534, 1880, 13, 51236, 51236, 823, 437, 286, 534, 1415, 281, 855, 291, 1673, 307, 437, 436, 550, 630, 13, 51384, 51384, 407, 382, 286, 848, 341, 390, 257, 551, 466, 264, 19147, 2372, 300, 819, 3383, 576, 3607, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.11812075172982565, "compression_ratio": 1.7314814814814814, "no_speech_prob": 1.9333333511895034e-06}, {"id": 409, "seek": 249660, "start": 2511.0, "end": 2514.04, "text": " embeddings which is really interesting.", "tokens": [50364, 420, 16235, 9194, 292, 4230, 293, 428, 914, 4274, 3043, 6713, 486, 17548, 3470, 13, 50725, 50725, 407, 291, 393, 767, 10432, 4974, 21700, 293, 12240, 29432, 420, 16235, 9194, 292, 5852, 293, 51084, 51084, 12240, 29432, 597, 307, 534, 1880, 13, 51236, 51236, 823, 437, 286, 534, 1415, 281, 855, 291, 1673, 307, 437, 436, 550, 630, 13, 51384, 51384, 407, 382, 286, 848, 341, 390, 257, 551, 466, 264, 19147, 2372, 300, 819, 3383, 576, 3607, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.11812075172982565, "compression_ratio": 1.7314814814814814, "no_speech_prob": 1.9333333511895034e-06}, {"id": 410, "seek": 249660, "start": 2514.04, "end": 2517.0, "text": " Now what I really wanted to show you though is what they then did.", "tokens": [50364, 420, 16235, 9194, 292, 4230, 293, 428, 914, 4274, 3043, 6713, 486, 17548, 3470, 13, 50725, 50725, 407, 291, 393, 767, 10432, 4974, 21700, 293, 12240, 29432, 420, 16235, 9194, 292, 5852, 293, 51084, 51084, 12240, 29432, 597, 307, 534, 1880, 13, 51236, 51236, 823, 437, 286, 534, 1415, 281, 855, 291, 1673, 307, 437, 436, 550, 630, 13, 51384, 51384, 407, 382, 286, 848, 341, 390, 257, 551, 466, 264, 19147, 2372, 300, 819, 3383, 576, 3607, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.11812075172982565, "compression_ratio": 1.7314814814814814, "no_speech_prob": 1.9333333511895034e-06}, {"id": 411, "seek": 249660, "start": 2517.0, "end": 2523.08, "text": " So as I said this was a thing about the predicted amount that different products would sell", "tokens": [50364, 420, 16235, 9194, 292, 4230, 293, 428, 914, 4274, 3043, 6713, 486, 17548, 3470, 13, 50725, 50725, 407, 291, 393, 767, 10432, 4974, 21700, 293, 12240, 29432, 420, 16235, 9194, 292, 5852, 293, 51084, 51084, 12240, 29432, 597, 307, 534, 1880, 13, 51236, 51236, 823, 437, 286, 534, 1415, 281, 855, 291, 1673, 307, 437, 436, 550, 630, 13, 51384, 51384, 407, 382, 286, 848, 341, 390, 257, 551, 466, 264, 19147, 2372, 300, 819, 3383, 576, 3607, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.11812075172982565, "compression_ratio": 1.7314814814814814, "no_speech_prob": 1.9333333511895034e-06}, {"id": 412, "seek": 252308, "start": 2523.08, "end": 2527.64, "text": " for at different shops around Germany.", "tokens": [50364, 337, 412, 819, 14457, 926, 7244, 13, 50592, 50592, 400, 437, 436, 630, 390, 436, 632, 257, 370, 472, 295, 641, 12240, 3584, 32284, 390, 12240, 29432, 538, 50908, 50908, 4458, 293, 550, 436, 630, 286, 519, 341, 307, 257, 6465, 32, 9716, 6542, 5215, 295, 264, 12240, 29432, 51314, 51314, 337, 641, 6521, 10682, 293, 562, 436, 1884, 257, 6927, 295, 552, 291, 393, 536, 300, 264, 9253, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13693177210141536, "compression_ratio": 1.6631016042780749, "no_speech_prob": 3.5559487514547072e-06}, {"id": 413, "seek": 252308, "start": 2527.64, "end": 2533.96, "text": " And what they did was they had a so one of their embedding matrices was embeddings by", "tokens": [50364, 337, 412, 819, 14457, 926, 7244, 13, 50592, 50592, 400, 437, 436, 630, 390, 436, 632, 257, 370, 472, 295, 641, 12240, 3584, 32284, 390, 12240, 29432, 538, 50908, 50908, 4458, 293, 550, 436, 630, 286, 519, 341, 307, 257, 6465, 32, 9716, 6542, 5215, 295, 264, 12240, 29432, 51314, 51314, 337, 641, 6521, 10682, 293, 562, 436, 1884, 257, 6927, 295, 552, 291, 393, 536, 300, 264, 9253, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13693177210141536, "compression_ratio": 1.6631016042780749, "no_speech_prob": 3.5559487514547072e-06}, {"id": 414, "seek": 252308, "start": 2533.96, "end": 2542.08, "text": " region and then they did I think this is a PCA principal component analysis of the embeddings", "tokens": [50364, 337, 412, 819, 14457, 926, 7244, 13, 50592, 50592, 400, 437, 436, 630, 390, 436, 632, 257, 370, 472, 295, 641, 12240, 3584, 32284, 390, 12240, 29432, 538, 50908, 50908, 4458, 293, 550, 436, 630, 286, 519, 341, 307, 257, 6465, 32, 9716, 6542, 5215, 295, 264, 12240, 29432, 51314, 51314, 337, 641, 6521, 10682, 293, 562, 436, 1884, 257, 6927, 295, 552, 291, 393, 536, 300, 264, 9253, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13693177210141536, "compression_ratio": 1.6631016042780749, "no_speech_prob": 3.5559487514547072e-06}, {"id": 415, "seek": 252308, "start": 2542.08, "end": 2551.68, "text": " for their German regions and when they create a chart of them you can see that the locations", "tokens": [50364, 337, 412, 819, 14457, 926, 7244, 13, 50592, 50592, 400, 437, 436, 630, 390, 436, 632, 257, 370, 472, 295, 641, 12240, 3584, 32284, 390, 12240, 29432, 538, 50908, 50908, 4458, 293, 550, 436, 630, 286, 519, 341, 307, 257, 6465, 32, 9716, 6542, 5215, 295, 264, 12240, 29432, 51314, 51314, 337, 641, 6521, 10682, 293, 562, 436, 1884, 257, 6927, 295, 552, 291, 393, 536, 300, 264, 9253, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13693177210141536, "compression_ratio": 1.6631016042780749, "no_speech_prob": 3.5559487514547072e-06}, {"id": 416, "seek": 255168, "start": 2551.68, "end": 2557.06, "text": " that are close together in the embedding matrix are the same locations that are close together", "tokens": [50364, 300, 366, 1998, 1214, 294, 264, 12240, 3584, 8141, 366, 264, 912, 9253, 300, 366, 1998, 1214, 50633, 50633, 294, 7244, 13, 50719, 50719, 407, 291, 393, 536, 510, 311, 264, 3344, 2306, 293, 510, 311, 264, 3344, 2306, 13, 50890, 50890, 400, 797, 309, 311, 1021, 281, 5521, 300, 264, 1412, 300, 436, 1143, 632, 572, 1589, 51137, 51137, 466, 264, 4914, 295, 613, 3190, 13, 51297, 51297, 440, 1186, 300, 436, 366, 1998, 1214, 25435, 984, 307, 746, 300, 390, 8932, 484, 382, 885, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.08971198399861653, "compression_ratio": 1.820754716981132, "no_speech_prob": 3.785291028179927e-06}, {"id": 417, "seek": 255168, "start": 2557.06, "end": 2558.7799999999997, "text": " in Germany.", "tokens": [50364, 300, 366, 1998, 1214, 294, 264, 12240, 3584, 8141, 366, 264, 912, 9253, 300, 366, 1998, 1214, 50633, 50633, 294, 7244, 13, 50719, 50719, 407, 291, 393, 536, 510, 311, 264, 3344, 2306, 293, 510, 311, 264, 3344, 2306, 13, 50890, 50890, 400, 797, 309, 311, 1021, 281, 5521, 300, 264, 1412, 300, 436, 1143, 632, 572, 1589, 51137, 51137, 466, 264, 4914, 295, 613, 3190, 13, 51297, 51297, 440, 1186, 300, 436, 366, 1998, 1214, 25435, 984, 307, 746, 300, 390, 8932, 484, 382, 885, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.08971198399861653, "compression_ratio": 1.820754716981132, "no_speech_prob": 3.785291028179927e-06}, {"id": 418, "seek": 255168, "start": 2558.7799999999997, "end": 2562.2, "text": " So you can see here's the blue ones and here's the blue ones.", "tokens": [50364, 300, 366, 1998, 1214, 294, 264, 12240, 3584, 8141, 366, 264, 912, 9253, 300, 366, 1998, 1214, 50633, 50633, 294, 7244, 13, 50719, 50719, 407, 291, 393, 536, 510, 311, 264, 3344, 2306, 293, 510, 311, 264, 3344, 2306, 13, 50890, 50890, 400, 797, 309, 311, 1021, 281, 5521, 300, 264, 1412, 300, 436, 1143, 632, 572, 1589, 51137, 51137, 466, 264, 4914, 295, 613, 3190, 13, 51297, 51297, 440, 1186, 300, 436, 366, 1998, 1214, 25435, 984, 307, 746, 300, 390, 8932, 484, 382, 885, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.08971198399861653, "compression_ratio": 1.820754716981132, "no_speech_prob": 3.785291028179927e-06}, {"id": 419, "seek": 255168, "start": 2562.2, "end": 2567.14, "text": " And again it's important to recognize that the data that they used had no information", "tokens": [50364, 300, 366, 1998, 1214, 294, 264, 12240, 3584, 8141, 366, 264, 912, 9253, 300, 366, 1998, 1214, 50633, 50633, 294, 7244, 13, 50719, 50719, 407, 291, 393, 536, 510, 311, 264, 3344, 2306, 293, 510, 311, 264, 3344, 2306, 13, 50890, 50890, 400, 797, 309, 311, 1021, 281, 5521, 300, 264, 1412, 300, 436, 1143, 632, 572, 1589, 51137, 51137, 466, 264, 4914, 295, 613, 3190, 13, 51297, 51297, 440, 1186, 300, 436, 366, 1998, 1214, 25435, 984, 307, 746, 300, 390, 8932, 484, 382, 885, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.08971198399861653, "compression_ratio": 1.820754716981132, "no_speech_prob": 3.785291028179927e-06}, {"id": 420, "seek": 255168, "start": 2567.14, "end": 2570.3399999999997, "text": " about the location of these places.", "tokens": [50364, 300, 366, 1998, 1214, 294, 264, 12240, 3584, 8141, 366, 264, 912, 9253, 300, 366, 1998, 1214, 50633, 50633, 294, 7244, 13, 50719, 50719, 407, 291, 393, 536, 510, 311, 264, 3344, 2306, 293, 510, 311, 264, 3344, 2306, 13, 50890, 50890, 400, 797, 309, 311, 1021, 281, 5521, 300, 264, 1412, 300, 436, 1143, 632, 572, 1589, 51137, 51137, 466, 264, 4914, 295, 613, 3190, 13, 51297, 51297, 440, 1186, 300, 436, 366, 1998, 1214, 25435, 984, 307, 746, 300, 390, 8932, 484, 382, 885, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.08971198399861653, "compression_ratio": 1.820754716981132, "no_speech_prob": 3.785291028179927e-06}, {"id": 421, "seek": 255168, "start": 2570.3399999999997, "end": 2577.3599999999997, "text": " The fact that they are close together geographically is something that was figured out as being", "tokens": [50364, 300, 366, 1998, 1214, 294, 264, 12240, 3584, 8141, 366, 264, 912, 9253, 300, 366, 1998, 1214, 50633, 50633, 294, 7244, 13, 50719, 50719, 407, 291, 393, 536, 510, 311, 264, 3344, 2306, 293, 510, 311, 264, 3344, 2306, 13, 50890, 50890, 400, 797, 309, 311, 1021, 281, 5521, 300, 264, 1412, 300, 436, 1143, 632, 572, 1589, 51137, 51137, 466, 264, 4914, 295, 613, 3190, 13, 51297, 51297, 440, 1186, 300, 436, 366, 1998, 1214, 25435, 984, 307, 746, 300, 390, 8932, 484, 382, 885, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.08971198399861653, "compression_ratio": 1.820754716981132, "no_speech_prob": 3.785291028179927e-06}, {"id": 422, "seek": 257736, "start": 2577.36, "end": 2583.86, "text": " something that actually helped it to predict sales.", "tokens": [50364, 746, 300, 767, 4254, 309, 281, 6069, 5763, 13, 50689, 50689, 400, 370, 294, 1186, 436, 550, 630, 257, 7542, 4099, 1184, 295, 613, 15026, 307, 257, 3945, 11, 257, 3531, 11, 293, 51008, 51008, 309, 311, 4099, 337, 1184, 6119, 295, 9512, 577, 1400, 1314, 307, 309, 294, 957, 993, 294, 20678, 1901, 293, 51510, 51510, 550, 577, 1400, 1314, 307, 309, 294, 12240, 3584, 1901, 13, 51723, 51723, 400, 456, 311, 341, 588, 2068, 20009, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.11487311851687548, "compression_ratio": 1.6648936170212767, "no_speech_prob": 1.17263778065535e-06}, {"id": 423, "seek": 257736, "start": 2583.86, "end": 2590.2400000000002, "text": " And so in fact they then did a plot showing each of these dots is a shop, a store, and", "tokens": [50364, 746, 300, 767, 4254, 309, 281, 6069, 5763, 13, 50689, 50689, 400, 370, 294, 1186, 436, 550, 630, 257, 7542, 4099, 1184, 295, 613, 15026, 307, 257, 3945, 11, 257, 3531, 11, 293, 51008, 51008, 309, 311, 4099, 337, 1184, 6119, 295, 9512, 577, 1400, 1314, 307, 309, 294, 957, 993, 294, 20678, 1901, 293, 51510, 51510, 550, 577, 1400, 1314, 307, 309, 294, 12240, 3584, 1901, 13, 51723, 51723, 400, 456, 311, 341, 588, 2068, 20009, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.11487311851687548, "compression_ratio": 1.6648936170212767, "no_speech_prob": 1.17263778065535e-06}, {"id": 424, "seek": 257736, "start": 2590.2400000000002, "end": 2600.28, "text": " it's showing for each pair of stores how far away is it in real life in metric space and", "tokens": [50364, 746, 300, 767, 4254, 309, 281, 6069, 5763, 13, 50689, 50689, 400, 370, 294, 1186, 436, 550, 630, 257, 7542, 4099, 1184, 295, 613, 15026, 307, 257, 3945, 11, 257, 3531, 11, 293, 51008, 51008, 309, 311, 4099, 337, 1184, 6119, 295, 9512, 577, 1400, 1314, 307, 309, 294, 957, 993, 294, 20678, 1901, 293, 51510, 51510, 550, 577, 1400, 1314, 307, 309, 294, 12240, 3584, 1901, 13, 51723, 51723, 400, 456, 311, 341, 588, 2068, 20009, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.11487311851687548, "compression_ratio": 1.6648936170212767, "no_speech_prob": 1.17263778065535e-06}, {"id": 425, "seek": 257736, "start": 2600.28, "end": 2604.54, "text": " then how far away is it in embedding space.", "tokens": [50364, 746, 300, 767, 4254, 309, 281, 6069, 5763, 13, 50689, 50689, 400, 370, 294, 1186, 436, 550, 630, 257, 7542, 4099, 1184, 295, 613, 15026, 307, 257, 3945, 11, 257, 3531, 11, 293, 51008, 51008, 309, 311, 4099, 337, 1184, 6119, 295, 9512, 577, 1400, 1314, 307, 309, 294, 957, 993, 294, 20678, 1901, 293, 51510, 51510, 550, 577, 1400, 1314, 307, 309, 294, 12240, 3584, 1901, 13, 51723, 51723, 400, 456, 311, 341, 588, 2068, 20009, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.11487311851687548, "compression_ratio": 1.6648936170212767, "no_speech_prob": 1.17263778065535e-06}, {"id": 426, "seek": 257736, "start": 2604.54, "end": 2607.0, "text": " And there's this very strong correlation.", "tokens": [50364, 746, 300, 767, 4254, 309, 281, 6069, 5763, 13, 50689, 50689, 400, 370, 294, 1186, 436, 550, 630, 257, 7542, 4099, 1184, 295, 613, 15026, 307, 257, 3945, 11, 257, 3531, 11, 293, 51008, 51008, 309, 311, 4099, 337, 1184, 6119, 295, 9512, 577, 1400, 1314, 307, 309, 294, 957, 993, 294, 20678, 1901, 293, 51510, 51510, 550, 577, 1400, 1314, 307, 309, 294, 12240, 3584, 1901, 13, 51723, 51723, 400, 456, 311, 341, 588, 2068, 20009, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.11487311851687548, "compression_ratio": 1.6648936170212767, "no_speech_prob": 1.17263778065535e-06}, {"id": 427, "seek": 260700, "start": 2607.0, "end": 2615.96, "text": " So it's kind of reconstructed somehow the geography of Germany by figuring out how people", "tokens": [50364, 407, 309, 311, 733, 295, 31499, 292, 6063, 264, 26695, 295, 7244, 538, 15213, 484, 577, 561, 50812, 50812, 3945, 293, 2531, 337, 1708, 295, 264, 1243, 13, 51046, 51046, 407, 456, 390, 572, 1589, 534, 466, 1708, 295, 264, 1243, 457, 562, 436, 829, 309, 322, 264, 12240, 3584, 51274, 51274, 8141, 264, 1708, 295, 264, 1243, 11, 8138, 11, 10017, 11, 10579, 11, 1998, 281, 1184, 661, 11, 10383, 11, 51540, 51540, 6984, 11, 1998, 281, 1184, 661, 11, 382, 291, 393, 536, 8803, 293, 7776, 1998, 281, 1184, 661, 11, 293, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13056201350932217, "compression_ratio": 1.8063063063063063, "no_speech_prob": 4.425428414833732e-06}, {"id": 428, "seek": 260700, "start": 2615.96, "end": 2620.64, "text": " shop and similar for days of the week.", "tokens": [50364, 407, 309, 311, 733, 295, 31499, 292, 6063, 264, 26695, 295, 7244, 538, 15213, 484, 577, 561, 50812, 50812, 3945, 293, 2531, 337, 1708, 295, 264, 1243, 13, 51046, 51046, 407, 456, 390, 572, 1589, 534, 466, 1708, 295, 264, 1243, 457, 562, 436, 829, 309, 322, 264, 12240, 3584, 51274, 51274, 8141, 264, 1708, 295, 264, 1243, 11, 8138, 11, 10017, 11, 10579, 11, 1998, 281, 1184, 661, 11, 10383, 11, 51540, 51540, 6984, 11, 1998, 281, 1184, 661, 11, 382, 291, 393, 536, 8803, 293, 7776, 1998, 281, 1184, 661, 11, 293, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13056201350932217, "compression_ratio": 1.8063063063063063, "no_speech_prob": 4.425428414833732e-06}, {"id": 429, "seek": 260700, "start": 2620.64, "end": 2625.2, "text": " So there was no information really about days of the week but when they put it on the embedding", "tokens": [50364, 407, 309, 311, 733, 295, 31499, 292, 6063, 264, 26695, 295, 7244, 538, 15213, 484, 577, 561, 50812, 50812, 3945, 293, 2531, 337, 1708, 295, 264, 1243, 13, 51046, 51046, 407, 456, 390, 572, 1589, 534, 466, 1708, 295, 264, 1243, 457, 562, 436, 829, 309, 322, 264, 12240, 3584, 51274, 51274, 8141, 264, 1708, 295, 264, 1243, 11, 8138, 11, 10017, 11, 10579, 11, 1998, 281, 1184, 661, 11, 10383, 11, 51540, 51540, 6984, 11, 1998, 281, 1184, 661, 11, 382, 291, 393, 536, 8803, 293, 7776, 1998, 281, 1184, 661, 11, 293, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13056201350932217, "compression_ratio": 1.8063063063063063, "no_speech_prob": 4.425428414833732e-06}, {"id": 430, "seek": 260700, "start": 2625.2, "end": 2630.52, "text": " matrix the days of the week, Monday, Tuesday, Wednesday, close to each other, Thursday,", "tokens": [50364, 407, 309, 311, 733, 295, 31499, 292, 6063, 264, 26695, 295, 7244, 538, 15213, 484, 577, 561, 50812, 50812, 3945, 293, 2531, 337, 1708, 295, 264, 1243, 13, 51046, 51046, 407, 456, 390, 572, 1589, 534, 466, 1708, 295, 264, 1243, 457, 562, 436, 829, 309, 322, 264, 12240, 3584, 51274, 51274, 8141, 264, 1708, 295, 264, 1243, 11, 8138, 11, 10017, 11, 10579, 11, 1998, 281, 1184, 661, 11, 10383, 11, 51540, 51540, 6984, 11, 1998, 281, 1184, 661, 11, 382, 291, 393, 536, 8803, 293, 7776, 1998, 281, 1184, 661, 11, 293, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13056201350932217, "compression_ratio": 1.8063063063063063, "no_speech_prob": 4.425428414833732e-06}, {"id": 431, "seek": 260700, "start": 2630.52, "end": 2634.84, "text": " Friday, close to each other, as you can see Saturday and Sunday close to each other, and", "tokens": [50364, 407, 309, 311, 733, 295, 31499, 292, 6063, 264, 26695, 295, 7244, 538, 15213, 484, 577, 561, 50812, 50812, 3945, 293, 2531, 337, 1708, 295, 264, 1243, 13, 51046, 51046, 407, 456, 390, 572, 1589, 534, 466, 1708, 295, 264, 1243, 457, 562, 436, 829, 309, 322, 264, 12240, 3584, 51274, 51274, 8141, 264, 1708, 295, 264, 1243, 11, 8138, 11, 10017, 11, 10579, 11, 1998, 281, 1184, 661, 11, 10383, 11, 51540, 51540, 6984, 11, 1998, 281, 1184, 661, 11, 382, 291, 393, 536, 8803, 293, 7776, 1998, 281, 1184, 661, 11, 293, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13056201350932217, "compression_ratio": 1.8063063063063063, "no_speech_prob": 4.425428414833732e-06}, {"id": 432, "seek": 263484, "start": 2634.84, "end": 2639.88, "text": " ditto for months of the year, January, February, March, April, May, June.", "tokens": [50364, 274, 34924, 337, 2493, 295, 264, 1064, 11, 7061, 11, 8711, 11, 6129, 11, 6929, 11, 1891, 11, 6928, 13, 50616, 50616, 407, 1338, 534, 1880, 1627, 1507, 286, 519, 13, 50950, 50950, 708, 311, 767, 516, 322, 1854, 257, 18161, 3209, 30, 51360, 51360], "temperature": 0.0, "avg_logprob": -0.26503747574826503, "compression_ratio": 1.25, "no_speech_prob": 1.9524817616911605e-05}, {"id": 433, "seek": 263484, "start": 2639.88, "end": 2646.56, "text": " So yeah really interesting cool stuff I think.", "tokens": [50364, 274, 34924, 337, 2493, 295, 264, 1064, 11, 7061, 11, 8711, 11, 6129, 11, 6929, 11, 1891, 11, 6928, 13, 50616, 50616, 407, 1338, 534, 1880, 1627, 1507, 286, 519, 13, 50950, 50950, 708, 311, 767, 516, 322, 1854, 257, 18161, 3209, 30, 51360, 51360], "temperature": 0.0, "avg_logprob": -0.26503747574826503, "compression_ratio": 1.25, "no_speech_prob": 1.9524817616911605e-05}, {"id": 434, "seek": 263484, "start": 2646.56, "end": 2654.76, "text": " What's actually going on inside a neural network?", "tokens": [50364, 274, 34924, 337, 2493, 295, 264, 1064, 11, 7061, 11, 8711, 11, 6129, 11, 6929, 11, 1891, 11, 6928, 13, 50616, 50616, 407, 1338, 534, 1880, 1627, 1507, 286, 519, 13, 50950, 50950, 708, 311, 767, 516, 322, 1854, 257, 18161, 3209, 30, 51360, 51360], "temperature": 0.0, "avg_logprob": -0.26503747574826503, "compression_ratio": 1.25, "no_speech_prob": 1.9524817616911605e-05}, {"id": 435, "seek": 265476, "start": 2654.76, "end": 2674.28, "text": " All right let's take a 10 minute break and I will see you back here at 7.10.", "tokens": [50364, 1057, 558, 718, 311, 747, 257, 1266, 3456, 1821, 293, 286, 486, 536, 291, 646, 510, 412, 1614, 13, 3279, 13, 51340, 51340, 1057, 558, 4024, 341, 307, 746, 286, 519, 307, 534, 1019, 597, 307, 321, 434, 516, 281, 321, 600, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.18458208830460257, "compression_ratio": 1.296, "no_speech_prob": 9.368609426019248e-06}, {"id": 436, "seek": 265476, "start": 2674.28, "end": 2681.6800000000003, "text": " All right folks this is something I think is really fun which is we're going to we've", "tokens": [50364, 1057, 558, 718, 311, 747, 257, 1266, 3456, 1821, 293, 286, 486, 536, 291, 646, 510, 412, 1614, 13, 3279, 13, 51340, 51340, 1057, 558, 4024, 341, 307, 746, 286, 519, 307, 534, 1019, 597, 307, 321, 434, 516, 281, 321, 600, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.18458208830460257, "compression_ratio": 1.296, "no_speech_prob": 9.368609426019248e-06}, {"id": 437, "seek": 268168, "start": 2681.68, "end": 2689.2799999999997, "text": " looked at what goes into the start of a model, the input.", "tokens": [50364, 2956, 412, 437, 1709, 666, 264, 722, 295, 257, 2316, 11, 264, 4846, 13, 50744, 50744, 492, 600, 3264, 466, 577, 436, 393, 312, 10479, 420, 12240, 29432, 293, 12240, 29432, 366, 1936, 51028, 51028, 733, 295, 472, 2368, 2058, 12340, 10479, 365, 257, 707, 14722, 4282, 420, 436, 393, 445, 312, 10957, 51290, 51290, 3547, 13, 51352, 51352, 492, 600, 3264, 466, 437, 1487, 484, 264, 661, 1252, 597, 307, 257, 3840, 295, 2430, 763, 370, 445, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.13514598985997642, "compression_ratio": 1.7, "no_speech_prob": 2.0144711015745997e-05}, {"id": 438, "seek": 268168, "start": 2689.2799999999997, "end": 2694.96, "text": " We've learned about how they can be categories or embeddings and embeddings are basically", "tokens": [50364, 2956, 412, 437, 1709, 666, 264, 722, 295, 257, 2316, 11, 264, 4846, 13, 50744, 50744, 492, 600, 3264, 466, 577, 436, 393, 312, 10479, 420, 12240, 29432, 293, 12240, 29432, 366, 1936, 51028, 51028, 733, 295, 472, 2368, 2058, 12340, 10479, 365, 257, 707, 14722, 4282, 420, 436, 393, 445, 312, 10957, 51290, 51290, 3547, 13, 51352, 51352, 492, 600, 3264, 466, 437, 1487, 484, 264, 661, 1252, 597, 307, 257, 3840, 295, 2430, 763, 370, 445, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.13514598985997642, "compression_ratio": 1.7, "no_speech_prob": 2.0144711015745997e-05}, {"id": 439, "seek": 268168, "start": 2694.96, "end": 2700.2, "text": " kind of one hot encoded categories with a little compute trick or they can just be continuous", "tokens": [50364, 2956, 412, 437, 1709, 666, 264, 722, 295, 257, 2316, 11, 264, 4846, 13, 50744, 50744, 492, 600, 3264, 466, 577, 436, 393, 312, 10479, 420, 12240, 29432, 293, 12240, 29432, 366, 1936, 51028, 51028, 733, 295, 472, 2368, 2058, 12340, 10479, 365, 257, 707, 14722, 4282, 420, 436, 393, 445, 312, 10957, 51290, 51290, 3547, 13, 51352, 51352, 492, 600, 3264, 466, 437, 1487, 484, 264, 661, 1252, 597, 307, 257, 3840, 295, 2430, 763, 370, 445, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.13514598985997642, "compression_ratio": 1.7, "no_speech_prob": 2.0144711015745997e-05}, {"id": 440, "seek": 268168, "start": 2700.2, "end": 2701.44, "text": " numbers.", "tokens": [50364, 2956, 412, 437, 1709, 666, 264, 722, 295, 257, 2316, 11, 264, 4846, 13, 50744, 50744, 492, 600, 3264, 466, 577, 436, 393, 312, 10479, 420, 12240, 29432, 293, 12240, 29432, 366, 1936, 51028, 51028, 733, 295, 472, 2368, 2058, 12340, 10479, 365, 257, 707, 14722, 4282, 420, 436, 393, 445, 312, 10957, 51290, 51290, 3547, 13, 51352, 51352, 492, 600, 3264, 466, 437, 1487, 484, 264, 661, 1252, 597, 307, 257, 3840, 295, 2430, 763, 370, 445, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.13514598985997642, "compression_ratio": 1.7, "no_speech_prob": 2.0144711015745997e-05}, {"id": 441, "seek": 268168, "start": 2701.44, "end": 2705.7999999999997, "text": " We've learned about what comes out the other side which is a bunch of activations so just", "tokens": [50364, 2956, 412, 437, 1709, 666, 264, 722, 295, 257, 2316, 11, 264, 4846, 13, 50744, 50744, 492, 600, 3264, 466, 577, 436, 393, 312, 10479, 420, 12240, 29432, 293, 12240, 29432, 366, 1936, 51028, 51028, 733, 295, 472, 2368, 2058, 12340, 10479, 365, 257, 707, 14722, 4282, 420, 436, 393, 445, 312, 10957, 51290, 51290, 3547, 13, 51352, 51352, 492, 600, 3264, 466, 437, 1487, 484, 264, 661, 1252, 597, 307, 257, 3840, 295, 2430, 763, 370, 445, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.13514598985997642, "compression_ratio": 1.7, "no_speech_prob": 2.0144711015745997e-05}, {"id": 442, "seek": 270580, "start": 2705.8, "end": 2712.5600000000004, "text": " a bunch of tensor of numbers which we can use things like softmax to constrain them", "tokens": [50364, 257, 3840, 295, 40863, 295, 3547, 597, 321, 393, 764, 721, 411, 2787, 41167, 281, 1817, 7146, 552, 50702, 50702, 281, 909, 493, 281, 472, 293, 370, 5220, 13, 51024, 51024, 400, 321, 600, 2956, 412, 437, 393, 352, 294, 264, 2808, 597, 307, 264, 8141, 12788, 4890, 11141, 292, 51440, 51440, 1214, 365, 291, 458, 382, 11048, 2587, 8213, 6815, 13, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.11589342897588556, "compression_ratio": 1.488235294117647, "no_speech_prob": 5.173839326744201e-06}, {"id": 443, "seek": 270580, "start": 2712.5600000000004, "end": 2719.0, "text": " to add up to one and so forth.", "tokens": [50364, 257, 3840, 295, 40863, 295, 3547, 597, 321, 393, 764, 721, 411, 2787, 41167, 281, 1817, 7146, 552, 50702, 50702, 281, 909, 493, 281, 472, 293, 370, 5220, 13, 51024, 51024, 400, 321, 600, 2956, 412, 437, 393, 352, 294, 264, 2808, 597, 307, 264, 8141, 12788, 4890, 11141, 292, 51440, 51440, 1214, 365, 291, 458, 382, 11048, 2587, 8213, 6815, 13, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.11589342897588556, "compression_ratio": 1.488235294117647, "no_speech_prob": 5.173839326744201e-06}, {"id": 444, "seek": 270580, "start": 2719.0, "end": 2727.32, "text": " And we've looked at what can go in the middle which is the matrix multipliers sandwiched", "tokens": [50364, 257, 3840, 295, 40863, 295, 3547, 597, 321, 393, 764, 721, 411, 2787, 41167, 281, 1817, 7146, 552, 50702, 50702, 281, 909, 493, 281, 472, 293, 370, 5220, 13, 51024, 51024, 400, 321, 600, 2956, 412, 437, 393, 352, 294, 264, 2808, 597, 307, 264, 8141, 12788, 4890, 11141, 292, 51440, 51440, 1214, 365, 291, 458, 382, 11048, 2587, 8213, 6815, 13, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.11589342897588556, "compression_ratio": 1.488235294117647, "no_speech_prob": 5.173839326744201e-06}, {"id": 445, "seek": 270580, "start": 2727.32, "end": 2732.6000000000004, "text": " together with you know as rectified linear units.", "tokens": [50364, 257, 3840, 295, 40863, 295, 3547, 597, 321, 393, 764, 721, 411, 2787, 41167, 281, 1817, 7146, 552, 50702, 50702, 281, 909, 493, 281, 472, 293, 370, 5220, 13, 51024, 51024, 400, 321, 600, 2956, 412, 437, 393, 352, 294, 264, 2808, 597, 307, 264, 8141, 12788, 4890, 11141, 292, 51440, 51440, 1214, 365, 291, 458, 382, 11048, 2587, 8213, 6815, 13, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.11589342897588556, "compression_ratio": 1.488235294117647, "no_speech_prob": 5.173839326744201e-06}, {"id": 446, "seek": 273260, "start": 2732.6, "end": 2737.3199999999997, "text": " And I mentioned that there are other things that can go in the middle as well but we haven't", "tokens": [50364, 400, 286, 2835, 300, 456, 366, 661, 721, 300, 393, 352, 294, 264, 2808, 382, 731, 457, 321, 2378, 380, 50600, 50600, 534, 2825, 466, 437, 729, 661, 721, 366, 13, 50804, 50804, 407, 286, 1194, 321, 1062, 574, 412, 472, 295, 264, 881, 1021, 293, 1880, 3037, 295, 721, 51062, 51062, 300, 393, 352, 294, 264, 2808, 457, 437, 291, 603, 536, 307, 309, 4523, 484, 309, 311, 767, 445, 1071, 51286, 51286, 733, 295, 8141, 27290, 597, 1062, 406, 312, 6322, 412, 700, 457, 286, 603, 2903, 13, 51580, 51580, 492, 434, 516, 281, 574, 412, 746, 1219, 257, 45216, 293, 3754, 15892, 366, 412, 264, 1917, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.05300650132440888, "compression_ratio": 1.8088235294117647, "no_speech_prob": 5.682384653482586e-06}, {"id": 447, "seek": 273260, "start": 2737.3199999999997, "end": 2741.4, "text": " really talked about what those other things are.", "tokens": [50364, 400, 286, 2835, 300, 456, 366, 661, 721, 300, 393, 352, 294, 264, 2808, 382, 731, 457, 321, 2378, 380, 50600, 50600, 534, 2825, 466, 437, 729, 661, 721, 366, 13, 50804, 50804, 407, 286, 1194, 321, 1062, 574, 412, 472, 295, 264, 881, 1021, 293, 1880, 3037, 295, 721, 51062, 51062, 300, 393, 352, 294, 264, 2808, 457, 437, 291, 603, 536, 307, 309, 4523, 484, 309, 311, 767, 445, 1071, 51286, 51286, 733, 295, 8141, 27290, 597, 1062, 406, 312, 6322, 412, 700, 457, 286, 603, 2903, 13, 51580, 51580, 492, 434, 516, 281, 574, 412, 746, 1219, 257, 45216, 293, 3754, 15892, 366, 412, 264, 1917, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.05300650132440888, "compression_ratio": 1.8088235294117647, "no_speech_prob": 5.682384653482586e-06}, {"id": 448, "seek": 273260, "start": 2741.4, "end": 2746.56, "text": " So I thought we might look at one of the most important and interesting version of things", "tokens": [50364, 400, 286, 2835, 300, 456, 366, 661, 721, 300, 393, 352, 294, 264, 2808, 382, 731, 457, 321, 2378, 380, 50600, 50600, 534, 2825, 466, 437, 729, 661, 721, 366, 13, 50804, 50804, 407, 286, 1194, 321, 1062, 574, 412, 472, 295, 264, 881, 1021, 293, 1880, 3037, 295, 721, 51062, 51062, 300, 393, 352, 294, 264, 2808, 457, 437, 291, 603, 536, 307, 309, 4523, 484, 309, 311, 767, 445, 1071, 51286, 51286, 733, 295, 8141, 27290, 597, 1062, 406, 312, 6322, 412, 700, 457, 286, 603, 2903, 13, 51580, 51580, 492, 434, 516, 281, 574, 412, 746, 1219, 257, 45216, 293, 3754, 15892, 366, 412, 264, 1917, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.05300650132440888, "compression_ratio": 1.8088235294117647, "no_speech_prob": 5.682384653482586e-06}, {"id": 449, "seek": 273260, "start": 2746.56, "end": 2751.04, "text": " that can go in the middle but what you'll see is it turns out it's actually just another", "tokens": [50364, 400, 286, 2835, 300, 456, 366, 661, 721, 300, 393, 352, 294, 264, 2808, 382, 731, 457, 321, 2378, 380, 50600, 50600, 534, 2825, 466, 437, 729, 661, 721, 366, 13, 50804, 50804, 407, 286, 1194, 321, 1062, 574, 412, 472, 295, 264, 881, 1021, 293, 1880, 3037, 295, 721, 51062, 51062, 300, 393, 352, 294, 264, 2808, 457, 437, 291, 603, 536, 307, 309, 4523, 484, 309, 311, 767, 445, 1071, 51286, 51286, 733, 295, 8141, 27290, 597, 1062, 406, 312, 6322, 412, 700, 457, 286, 603, 2903, 13, 51580, 51580, 492, 434, 516, 281, 574, 412, 746, 1219, 257, 45216, 293, 3754, 15892, 366, 412, 264, 1917, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.05300650132440888, "compression_ratio": 1.8088235294117647, "no_speech_prob": 5.682384653482586e-06}, {"id": 450, "seek": 273260, "start": 2751.04, "end": 2756.92, "text": " kind of matrix multiplication which might not be obvious at first but I'll explain.", "tokens": [50364, 400, 286, 2835, 300, 456, 366, 661, 721, 300, 393, 352, 294, 264, 2808, 382, 731, 457, 321, 2378, 380, 50600, 50600, 534, 2825, 466, 437, 729, 661, 721, 366, 13, 50804, 50804, 407, 286, 1194, 321, 1062, 574, 412, 472, 295, 264, 881, 1021, 293, 1880, 3037, 295, 721, 51062, 51062, 300, 393, 352, 294, 264, 2808, 457, 437, 291, 603, 536, 307, 309, 4523, 484, 309, 311, 767, 445, 1071, 51286, 51286, 733, 295, 8141, 27290, 597, 1062, 406, 312, 6322, 412, 700, 457, 286, 603, 2903, 13, 51580, 51580, 492, 434, 516, 281, 574, 412, 746, 1219, 257, 45216, 293, 3754, 15892, 366, 412, 264, 1917, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.05300650132440888, "compression_ratio": 1.8088235294117647, "no_speech_prob": 5.682384653482586e-06}, {"id": 451, "seek": 273260, "start": 2756.92, "end": 2760.7599999999998, "text": " We're going to look at something called a convolution and convolutions are at the heart", "tokens": [50364, 400, 286, 2835, 300, 456, 366, 661, 721, 300, 393, 352, 294, 264, 2808, 382, 731, 457, 321, 2378, 380, 50600, 50600, 534, 2825, 466, 437, 729, 661, 721, 366, 13, 50804, 50804, 407, 286, 1194, 321, 1062, 574, 412, 472, 295, 264, 881, 1021, 293, 1880, 3037, 295, 721, 51062, 51062, 300, 393, 352, 294, 264, 2808, 457, 437, 291, 603, 536, 307, 309, 4523, 484, 309, 311, 767, 445, 1071, 51286, 51286, 733, 295, 8141, 27290, 597, 1062, 406, 312, 6322, 412, 700, 457, 286, 603, 2903, 13, 51580, 51580, 492, 434, 516, 281, 574, 412, 746, 1219, 257, 45216, 293, 3754, 15892, 366, 412, 264, 1917, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.05300650132440888, "compression_ratio": 1.8088235294117647, "no_speech_prob": 5.682384653482586e-06}, {"id": 452, "seek": 276076, "start": 2760.76, "end": 2763.0, "text": " of a convolutional neural network.", "tokens": [50364, 295, 257, 45216, 304, 18161, 3209, 13, 50476, 50476, 407, 264, 700, 551, 281, 4325, 307, 257, 45216, 304, 18161, 3209, 307, 588, 588, 588, 2531, 281, 50696, 50696, 264, 18161, 9590, 321, 600, 1612, 370, 1400, 13, 50814, 50814, 467, 311, 658, 15743, 11, 309, 311, 658, 721, 300, 366, 257, 688, 411, 420, 767, 366, 257, 1254, 295, 8141, 51030, 51030, 27290, 11141, 292, 365, 24433, 6828, 597, 393, 312, 11048, 2587, 8213, 13, 51408, 51408, 583, 456, 311, 257, 1729, 551, 597, 1669, 552, 588, 4420, 337, 3820, 5201, 293, 286, 478, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11249540309713345, "compression_ratio": 1.7479338842975207, "no_speech_prob": 4.029429419460939e-06}, {"id": 453, "seek": 276076, "start": 2763.0, "end": 2767.4, "text": " So the first thing to realize is a convolutional neural network is very very very similar to", "tokens": [50364, 295, 257, 45216, 304, 18161, 3209, 13, 50476, 50476, 407, 264, 700, 551, 281, 4325, 307, 257, 45216, 304, 18161, 3209, 307, 588, 588, 588, 2531, 281, 50696, 50696, 264, 18161, 9590, 321, 600, 1612, 370, 1400, 13, 50814, 50814, 467, 311, 658, 15743, 11, 309, 311, 658, 721, 300, 366, 257, 688, 411, 420, 767, 366, 257, 1254, 295, 8141, 51030, 51030, 27290, 11141, 292, 365, 24433, 6828, 597, 393, 312, 11048, 2587, 8213, 13, 51408, 51408, 583, 456, 311, 257, 1729, 551, 597, 1669, 552, 588, 4420, 337, 3820, 5201, 293, 286, 478, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11249540309713345, "compression_ratio": 1.7479338842975207, "no_speech_prob": 4.029429419460939e-06}, {"id": 454, "seek": 276076, "start": 2767.4, "end": 2769.76, "text": " the neural networks we've seen so far.", "tokens": [50364, 295, 257, 45216, 304, 18161, 3209, 13, 50476, 50476, 407, 264, 700, 551, 281, 4325, 307, 257, 45216, 304, 18161, 3209, 307, 588, 588, 588, 2531, 281, 50696, 50696, 264, 18161, 9590, 321, 600, 1612, 370, 1400, 13, 50814, 50814, 467, 311, 658, 15743, 11, 309, 311, 658, 721, 300, 366, 257, 688, 411, 420, 767, 366, 257, 1254, 295, 8141, 51030, 51030, 27290, 11141, 292, 365, 24433, 6828, 597, 393, 312, 11048, 2587, 8213, 13, 51408, 51408, 583, 456, 311, 257, 1729, 551, 597, 1669, 552, 588, 4420, 337, 3820, 5201, 293, 286, 478, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11249540309713345, "compression_ratio": 1.7479338842975207, "no_speech_prob": 4.029429419460939e-06}, {"id": 455, "seek": 276076, "start": 2769.76, "end": 2774.0800000000004, "text": " It's got inputs, it's got things that are a lot like or actually are a form of matrix", "tokens": [50364, 295, 257, 45216, 304, 18161, 3209, 13, 50476, 50476, 407, 264, 700, 551, 281, 4325, 307, 257, 45216, 304, 18161, 3209, 307, 588, 588, 588, 2531, 281, 50696, 50696, 264, 18161, 9590, 321, 600, 1612, 370, 1400, 13, 50814, 50814, 467, 311, 658, 15743, 11, 309, 311, 658, 721, 300, 366, 257, 688, 411, 420, 767, 366, 257, 1254, 295, 8141, 51030, 51030, 27290, 11141, 292, 365, 24433, 6828, 597, 393, 312, 11048, 2587, 8213, 13, 51408, 51408, 583, 456, 311, 257, 1729, 551, 597, 1669, 552, 588, 4420, 337, 3820, 5201, 293, 286, 478, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11249540309713345, "compression_ratio": 1.7479338842975207, "no_speech_prob": 4.029429419460939e-06}, {"id": 456, "seek": 276076, "start": 2774.0800000000004, "end": 2781.6400000000003, "text": " multiplication sandwiched with activation functions which can be rectified linear.", "tokens": [50364, 295, 257, 45216, 304, 18161, 3209, 13, 50476, 50476, 407, 264, 700, 551, 281, 4325, 307, 257, 45216, 304, 18161, 3209, 307, 588, 588, 588, 2531, 281, 50696, 50696, 264, 18161, 9590, 321, 600, 1612, 370, 1400, 13, 50814, 50814, 467, 311, 658, 15743, 11, 309, 311, 658, 721, 300, 366, 257, 688, 411, 420, 767, 366, 257, 1254, 295, 8141, 51030, 51030, 27290, 11141, 292, 365, 24433, 6828, 597, 393, 312, 11048, 2587, 8213, 13, 51408, 51408, 583, 456, 311, 257, 1729, 551, 597, 1669, 552, 588, 4420, 337, 3820, 5201, 293, 286, 478, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11249540309713345, "compression_ratio": 1.7479338842975207, "no_speech_prob": 4.029429419460939e-06}, {"id": 457, "seek": 276076, "start": 2781.6400000000003, "end": 2786.44, "text": " But there's a particular thing which makes them very useful for computer vision and I'm", "tokens": [50364, 295, 257, 45216, 304, 18161, 3209, 13, 50476, 50476, 407, 264, 700, 551, 281, 4325, 307, 257, 45216, 304, 18161, 3209, 307, 588, 588, 588, 2531, 281, 50696, 50696, 264, 18161, 9590, 321, 600, 1612, 370, 1400, 13, 50814, 50814, 467, 311, 658, 15743, 11, 309, 311, 658, 721, 300, 366, 257, 688, 411, 420, 767, 366, 257, 1254, 295, 8141, 51030, 51030, 27290, 11141, 292, 365, 24433, 6828, 597, 393, 312, 11048, 2587, 8213, 13, 51408, 51408, 583, 456, 311, 257, 1729, 551, 597, 1669, 552, 588, 4420, 337, 3820, 5201, 293, 286, 478, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11249540309713345, "compression_ratio": 1.7479338842975207, "no_speech_prob": 4.029429419460939e-06}, {"id": 458, "seek": 278644, "start": 2786.44, "end": 2795.36, "text": " going to show you using this excel spreadsheet that's in our repo called conv example.", "tokens": [50364, 516, 281, 855, 291, 1228, 341, 24015, 27733, 300, 311, 294, 527, 49040, 1219, 3754, 1365, 13, 50810, 50810, 400, 321, 434, 516, 281, 574, 412, 309, 1228, 364, 3256, 490, 376, 45, 19756, 13, 50984, 50984, 407, 376, 45, 19756, 307, 733, 295, 264, 1002, 311, 881, 4618, 3820, 5201, 1412, 992, 286, 519, 570, 309, 51302, 51302, 390, 411, 264, 700, 472, 534, 597, 534, 4712, 3256, 11150, 885, 885, 25140, 13, 51685, 51685, 467, 311, 1238, 1359, 538, 965, 311, 7787, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1385445755519224, "compression_ratio": 1.5319148936170213, "no_speech_prob": 1.4367449239216512e-06}, {"id": 459, "seek": 278644, "start": 2795.36, "end": 2798.84, "text": " And we're going to look at it using an image from MNIST.", "tokens": [50364, 516, 281, 855, 291, 1228, 341, 24015, 27733, 300, 311, 294, 527, 49040, 1219, 3754, 1365, 13, 50810, 50810, 400, 321, 434, 516, 281, 574, 412, 309, 1228, 364, 3256, 490, 376, 45, 19756, 13, 50984, 50984, 407, 376, 45, 19756, 307, 733, 295, 264, 1002, 311, 881, 4618, 3820, 5201, 1412, 992, 286, 519, 570, 309, 51302, 51302, 390, 411, 264, 700, 472, 534, 597, 534, 4712, 3256, 11150, 885, 885, 25140, 13, 51685, 51685, 467, 311, 1238, 1359, 538, 965, 311, 7787, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1385445755519224, "compression_ratio": 1.5319148936170213, "no_speech_prob": 1.4367449239216512e-06}, {"id": 460, "seek": 278644, "start": 2798.84, "end": 2805.2000000000003, "text": " So MNIST is kind of the world's most famous computer vision data set I think because it", "tokens": [50364, 516, 281, 855, 291, 1228, 341, 24015, 27733, 300, 311, 294, 527, 49040, 1219, 3754, 1365, 13, 50810, 50810, 400, 321, 434, 516, 281, 574, 412, 309, 1228, 364, 3256, 490, 376, 45, 19756, 13, 50984, 50984, 407, 376, 45, 19756, 307, 733, 295, 264, 1002, 311, 881, 4618, 3820, 5201, 1412, 992, 286, 519, 570, 309, 51302, 51302, 390, 411, 264, 700, 472, 534, 597, 534, 4712, 3256, 11150, 885, 885, 25140, 13, 51685, 51685, 467, 311, 1238, 1359, 538, 965, 311, 7787, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1385445755519224, "compression_ratio": 1.5319148936170213, "no_speech_prob": 1.4367449239216512e-06}, {"id": 461, "seek": 278644, "start": 2805.2000000000003, "end": 2812.86, "text": " was like the first one really which really showed image recognition being being cracked.", "tokens": [50364, 516, 281, 855, 291, 1228, 341, 24015, 27733, 300, 311, 294, 527, 49040, 1219, 3754, 1365, 13, 50810, 50810, 400, 321, 434, 516, 281, 574, 412, 309, 1228, 364, 3256, 490, 376, 45, 19756, 13, 50984, 50984, 407, 376, 45, 19756, 307, 733, 295, 264, 1002, 311, 881, 4618, 3820, 5201, 1412, 992, 286, 519, 570, 309, 51302, 51302, 390, 411, 264, 700, 472, 534, 597, 534, 4712, 3256, 11150, 885, 885, 25140, 13, 51685, 51685, 467, 311, 1238, 1359, 538, 965, 311, 7787, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1385445755519224, "compression_ratio": 1.5319148936170213, "no_speech_prob": 1.4367449239216512e-06}, {"id": 462, "seek": 278644, "start": 2812.86, "end": 2815.08, "text": " It's pretty small by today's standards.", "tokens": [50364, 516, 281, 855, 291, 1228, 341, 24015, 27733, 300, 311, 294, 527, 49040, 1219, 3754, 1365, 13, 50810, 50810, 400, 321, 434, 516, 281, 574, 412, 309, 1228, 364, 3256, 490, 376, 45, 19756, 13, 50984, 50984, 407, 376, 45, 19756, 307, 733, 295, 264, 1002, 311, 881, 4618, 3820, 5201, 1412, 992, 286, 519, 570, 309, 51302, 51302, 390, 411, 264, 700, 472, 534, 597, 534, 4712, 3256, 11150, 885, 885, 25140, 13, 51685, 51685, 467, 311, 1238, 1359, 538, 965, 311, 7787, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1385445755519224, "compression_ratio": 1.5319148936170213, "no_speech_prob": 1.4367449239216512e-06}, {"id": 463, "seek": 281508, "start": 2815.08, "end": 2817.7999999999997, "text": " It's a data set of handwritten digits.", "tokens": [50364, 467, 311, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50500, 50500, 6947, 472, 307, 7562, 538, 7562, 18668, 13, 50714, 50714, 583, 309, 1338, 291, 458, 646, 294, 264, 2062, 4289, 82, 4956, 441, 1035, 409, 4712, 291, 458, 534, 15667, 4420, 51070, 51070, 3389, 322, 341, 1412, 992, 293, 382, 257, 1874, 4590, 493, 365, 3754, 36170, 885, 1143, 294, 264, 51338, 51338, 2665, 18261, 1185, 337, 3760, 13834, 13, 51560, 51560, 407, 510, 311, 364, 1365, 295, 472, 295, 729, 27011, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.19720641146884876, "compression_ratio": 1.506726457399103, "no_speech_prob": 1.4367321909958264e-06}, {"id": 464, "seek": 281508, "start": 2817.7999999999997, "end": 2822.08, "text": " Each one is 28 by 28 pixels.", "tokens": [50364, 467, 311, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50500, 50500, 6947, 472, 307, 7562, 538, 7562, 18668, 13, 50714, 50714, 583, 309, 1338, 291, 458, 646, 294, 264, 2062, 4289, 82, 4956, 441, 1035, 409, 4712, 291, 458, 534, 15667, 4420, 51070, 51070, 3389, 322, 341, 1412, 992, 293, 382, 257, 1874, 4590, 493, 365, 3754, 36170, 885, 1143, 294, 264, 51338, 51338, 2665, 18261, 1185, 337, 3760, 13834, 13, 51560, 51560, 407, 510, 311, 364, 1365, 295, 472, 295, 729, 27011, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.19720641146884876, "compression_ratio": 1.506726457399103, "no_speech_prob": 1.4367321909958264e-06}, {"id": 465, "seek": 281508, "start": 2822.08, "end": 2829.2, "text": " But it yeah you know back in the mid 90s Jan Likun showed you know really practically useful", "tokens": [50364, 467, 311, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50500, 50500, 6947, 472, 307, 7562, 538, 7562, 18668, 13, 50714, 50714, 583, 309, 1338, 291, 458, 646, 294, 264, 2062, 4289, 82, 4956, 441, 1035, 409, 4712, 291, 458, 534, 15667, 4420, 51070, 51070, 3389, 322, 341, 1412, 992, 293, 382, 257, 1874, 4590, 493, 365, 3754, 36170, 885, 1143, 294, 264, 51338, 51338, 2665, 18261, 1185, 337, 3760, 13834, 13, 51560, 51560, 407, 510, 311, 364, 1365, 295, 472, 295, 729, 27011, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.19720641146884876, "compression_ratio": 1.506726457399103, "no_speech_prob": 1.4367321909958264e-06}, {"id": 466, "seek": 281508, "start": 2829.2, "end": 2834.56, "text": " performance on this data set and as a result ended up with conv nets being used in the", "tokens": [50364, 467, 311, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50500, 50500, 6947, 472, 307, 7562, 538, 7562, 18668, 13, 50714, 50714, 583, 309, 1338, 291, 458, 646, 294, 264, 2062, 4289, 82, 4956, 441, 1035, 409, 4712, 291, 458, 534, 15667, 4420, 51070, 51070, 3389, 322, 341, 1412, 992, 293, 382, 257, 1874, 4590, 493, 365, 3754, 36170, 885, 1143, 294, 264, 51338, 51338, 2665, 18261, 1185, 337, 3760, 13834, 13, 51560, 51560, 407, 510, 311, 364, 1365, 295, 472, 295, 729, 27011, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.19720641146884876, "compression_ratio": 1.506726457399103, "no_speech_prob": 1.4367321909958264e-06}, {"id": 467, "seek": 281508, "start": 2834.56, "end": 2839.0, "text": " American banking system for reading checks.", "tokens": [50364, 467, 311, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50500, 50500, 6947, 472, 307, 7562, 538, 7562, 18668, 13, 50714, 50714, 583, 309, 1338, 291, 458, 646, 294, 264, 2062, 4289, 82, 4956, 441, 1035, 409, 4712, 291, 458, 534, 15667, 4420, 51070, 51070, 3389, 322, 341, 1412, 992, 293, 382, 257, 1874, 4590, 493, 365, 3754, 36170, 885, 1143, 294, 264, 51338, 51338, 2665, 18261, 1185, 337, 3760, 13834, 13, 51560, 51560, 407, 510, 311, 364, 1365, 295, 472, 295, 729, 27011, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.19720641146884876, "compression_ratio": 1.506726457399103, "no_speech_prob": 1.4367321909958264e-06}, {"id": 468, "seek": 281508, "start": 2839.0, "end": 2841.92, "text": " So here's an example of one of those digits.", "tokens": [50364, 467, 311, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50500, 50500, 6947, 472, 307, 7562, 538, 7562, 18668, 13, 50714, 50714, 583, 309, 1338, 291, 458, 646, 294, 264, 2062, 4289, 82, 4956, 441, 1035, 409, 4712, 291, 458, 534, 15667, 4420, 51070, 51070, 3389, 322, 341, 1412, 992, 293, 382, 257, 1874, 4590, 493, 365, 3754, 36170, 885, 1143, 294, 264, 51338, 51338, 2665, 18261, 1185, 337, 3760, 13834, 13, 51560, 51560, 407, 510, 311, 364, 1365, 295, 472, 295, 729, 27011, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.19720641146884876, "compression_ratio": 1.506726457399103, "no_speech_prob": 1.4367321909958264e-06}, {"id": 469, "seek": 284192, "start": 2841.92, "end": 2846.44, "text": " This is a seven that somebody drew it's one of those ones with a stroke through it.", "tokens": [50364, 639, 307, 257, 3407, 300, 2618, 12804, 309, 311, 472, 295, 729, 2306, 365, 257, 12403, 807, 309, 13, 50590, 50590, 400, 341, 307, 437, 309, 1542, 411, 13, 50732, 50732, 639, 307, 341, 307, 264, 3256, 13, 50874, 50874, 400, 370, 286, 658, 309, 490, 376, 45, 19756, 13, 50924, 50924, 639, 307, 445, 472, 295, 264, 5267, 490, 376, 45, 19756, 597, 286, 829, 666, 19060, 13, 51220, 51220, 400, 437, 291, 536, 294, 264, 294, 264, 958, 7738, 307, 257, 3037, 295, 264, 3256, 689, 264, 12750, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1219563179827751, "compression_ratio": 1.663265306122449, "no_speech_prob": 2.3320658328884747e-06}, {"id": 470, "seek": 284192, "start": 2846.44, "end": 2849.28, "text": " And this is what it looks like.", "tokens": [50364, 639, 307, 257, 3407, 300, 2618, 12804, 309, 311, 472, 295, 729, 2306, 365, 257, 12403, 807, 309, 13, 50590, 50590, 400, 341, 307, 437, 309, 1542, 411, 13, 50732, 50732, 639, 307, 341, 307, 264, 3256, 13, 50874, 50874, 400, 370, 286, 658, 309, 490, 376, 45, 19756, 13, 50924, 50924, 639, 307, 445, 472, 295, 264, 5267, 490, 376, 45, 19756, 597, 286, 829, 666, 19060, 13, 51220, 51220, 400, 437, 291, 536, 294, 264, 294, 264, 958, 7738, 307, 257, 3037, 295, 264, 3256, 689, 264, 12750, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1219563179827751, "compression_ratio": 1.663265306122449, "no_speech_prob": 2.3320658328884747e-06}, {"id": 471, "seek": 284192, "start": 2849.28, "end": 2852.12, "text": " This is this is the image.", "tokens": [50364, 639, 307, 257, 3407, 300, 2618, 12804, 309, 311, 472, 295, 729, 2306, 365, 257, 12403, 807, 309, 13, 50590, 50590, 400, 341, 307, 437, 309, 1542, 411, 13, 50732, 50732, 639, 307, 341, 307, 264, 3256, 13, 50874, 50874, 400, 370, 286, 658, 309, 490, 376, 45, 19756, 13, 50924, 50924, 639, 307, 445, 472, 295, 264, 5267, 490, 376, 45, 19756, 597, 286, 829, 666, 19060, 13, 51220, 51220, 400, 437, 291, 536, 294, 264, 294, 264, 958, 7738, 307, 257, 3037, 295, 264, 3256, 689, 264, 12750, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1219563179827751, "compression_ratio": 1.663265306122449, "no_speech_prob": 2.3320658328884747e-06}, {"id": 472, "seek": 284192, "start": 2852.12, "end": 2853.12, "text": " And so I got it from MNIST.", "tokens": [50364, 639, 307, 257, 3407, 300, 2618, 12804, 309, 311, 472, 295, 729, 2306, 365, 257, 12403, 807, 309, 13, 50590, 50590, 400, 341, 307, 437, 309, 1542, 411, 13, 50732, 50732, 639, 307, 341, 307, 264, 3256, 13, 50874, 50874, 400, 370, 286, 658, 309, 490, 376, 45, 19756, 13, 50924, 50924, 639, 307, 445, 472, 295, 264, 5267, 490, 376, 45, 19756, 597, 286, 829, 666, 19060, 13, 51220, 51220, 400, 437, 291, 536, 294, 264, 294, 264, 958, 7738, 307, 257, 3037, 295, 264, 3256, 689, 264, 12750, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1219563179827751, "compression_ratio": 1.663265306122449, "no_speech_prob": 2.3320658328884747e-06}, {"id": 473, "seek": 284192, "start": 2853.12, "end": 2859.04, "text": " This is just one of the images from MNIST which I put into Excel.", "tokens": [50364, 639, 307, 257, 3407, 300, 2618, 12804, 309, 311, 472, 295, 729, 2306, 365, 257, 12403, 807, 309, 13, 50590, 50590, 400, 341, 307, 437, 309, 1542, 411, 13, 50732, 50732, 639, 307, 341, 307, 264, 3256, 13, 50874, 50874, 400, 370, 286, 658, 309, 490, 376, 45, 19756, 13, 50924, 50924, 639, 307, 445, 472, 295, 264, 5267, 490, 376, 45, 19756, 597, 286, 829, 666, 19060, 13, 51220, 51220, 400, 437, 291, 536, 294, 264, 294, 264, 958, 7738, 307, 257, 3037, 295, 264, 3256, 689, 264, 12750, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1219563179827751, "compression_ratio": 1.663265306122449, "no_speech_prob": 2.3320658328884747e-06}, {"id": 474, "seek": 284192, "start": 2859.04, "end": 2870.84, "text": " And what you see in the in the next column is a version of the image where the horizontal", "tokens": [50364, 639, 307, 257, 3407, 300, 2618, 12804, 309, 311, 472, 295, 729, 2306, 365, 257, 12403, 807, 309, 13, 50590, 50590, 400, 341, 307, 437, 309, 1542, 411, 13, 50732, 50732, 639, 307, 341, 307, 264, 3256, 13, 50874, 50874, 400, 370, 286, 658, 309, 490, 376, 45, 19756, 13, 50924, 50924, 639, 307, 445, 472, 295, 264, 5267, 490, 376, 45, 19756, 597, 286, 829, 666, 19060, 13, 51220, 51220, 400, 437, 291, 536, 294, 264, 294, 264, 958, 7738, 307, 257, 3037, 295, 264, 3256, 689, 264, 12750, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1219563179827751, "compression_ratio": 1.663265306122449, "no_speech_prob": 2.3320658328884747e-06}, {"id": 475, "seek": 287084, "start": 2870.84, "end": 2878.2000000000003, "text": " lines are being recognized and another one where the vertical lines are being recognized.", "tokens": [50364, 3876, 366, 885, 9823, 293, 1071, 472, 689, 264, 9429, 3876, 366, 885, 9823, 13, 50732, 50732, 400, 498, 291, 519, 646, 281, 300, 1176, 88, 1918, 293, 36790, 3035, 300, 2825, 466, 437, 264, 7914, 295, 50924, 50924, 257, 18161, 2533, 775, 341, 307, 3122, 364, 1365, 295, 746, 300, 321, 321, 458, 300, 264, 700, 51248, 51248, 4583, 295, 257, 18161, 3209, 12258, 281, 1466, 577, 281, 360, 13, 51416, 51416, 823, 577, 630, 286, 360, 341, 30, 51548, 51548, 286, 630, 341, 1228, 746, 1219, 257, 45216, 13, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.142154944570441, "compression_ratio": 1.7173913043478262, "no_speech_prob": 2.1233634015516145e-06}, {"id": 476, "seek": 287084, "start": 2878.2000000000003, "end": 2882.04, "text": " And if you think back to that Zyler and Fergus paper that talked about what the layers of", "tokens": [50364, 3876, 366, 885, 9823, 293, 1071, 472, 689, 264, 9429, 3876, 366, 885, 9823, 13, 50732, 50732, 400, 498, 291, 519, 646, 281, 300, 1176, 88, 1918, 293, 36790, 3035, 300, 2825, 466, 437, 264, 7914, 295, 50924, 50924, 257, 18161, 2533, 775, 341, 307, 3122, 364, 1365, 295, 746, 300, 321, 321, 458, 300, 264, 700, 51248, 51248, 4583, 295, 257, 18161, 3209, 12258, 281, 1466, 577, 281, 360, 13, 51416, 51416, 823, 577, 630, 286, 360, 341, 30, 51548, 51548, 286, 630, 341, 1228, 746, 1219, 257, 45216, 13, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.142154944570441, "compression_ratio": 1.7173913043478262, "no_speech_prob": 2.1233634015516145e-06}, {"id": 477, "seek": 287084, "start": 2882.04, "end": 2888.52, "text": " a neural net does this is absolutely an example of something that we we know that the first", "tokens": [50364, 3876, 366, 885, 9823, 293, 1071, 472, 689, 264, 9429, 3876, 366, 885, 9823, 13, 50732, 50732, 400, 498, 291, 519, 646, 281, 300, 1176, 88, 1918, 293, 36790, 3035, 300, 2825, 466, 437, 264, 7914, 295, 50924, 50924, 257, 18161, 2533, 775, 341, 307, 3122, 364, 1365, 295, 746, 300, 321, 321, 458, 300, 264, 700, 51248, 51248, 4583, 295, 257, 18161, 3209, 12258, 281, 1466, 577, 281, 360, 13, 51416, 51416, 823, 577, 630, 286, 360, 341, 30, 51548, 51548, 286, 630, 341, 1228, 746, 1219, 257, 45216, 13, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.142154944570441, "compression_ratio": 1.7173913043478262, "no_speech_prob": 2.1233634015516145e-06}, {"id": 478, "seek": 287084, "start": 2888.52, "end": 2891.88, "text": " layer of a neural network tends to learn how to do.", "tokens": [50364, 3876, 366, 885, 9823, 293, 1071, 472, 689, 264, 9429, 3876, 366, 885, 9823, 13, 50732, 50732, 400, 498, 291, 519, 646, 281, 300, 1176, 88, 1918, 293, 36790, 3035, 300, 2825, 466, 437, 264, 7914, 295, 50924, 50924, 257, 18161, 2533, 775, 341, 307, 3122, 364, 1365, 295, 746, 300, 321, 321, 458, 300, 264, 700, 51248, 51248, 4583, 295, 257, 18161, 3209, 12258, 281, 1466, 577, 281, 360, 13, 51416, 51416, 823, 577, 630, 286, 360, 341, 30, 51548, 51548, 286, 630, 341, 1228, 746, 1219, 257, 45216, 13, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.142154944570441, "compression_ratio": 1.7173913043478262, "no_speech_prob": 2.1233634015516145e-06}, {"id": 479, "seek": 287084, "start": 2891.88, "end": 2894.52, "text": " Now how did I do this?", "tokens": [50364, 3876, 366, 885, 9823, 293, 1071, 472, 689, 264, 9429, 3876, 366, 885, 9823, 13, 50732, 50732, 400, 498, 291, 519, 646, 281, 300, 1176, 88, 1918, 293, 36790, 3035, 300, 2825, 466, 437, 264, 7914, 295, 50924, 50924, 257, 18161, 2533, 775, 341, 307, 3122, 364, 1365, 295, 746, 300, 321, 321, 458, 300, 264, 700, 51248, 51248, 4583, 295, 257, 18161, 3209, 12258, 281, 1466, 577, 281, 360, 13, 51416, 51416, 823, 577, 630, 286, 360, 341, 30, 51548, 51548, 286, 630, 341, 1228, 746, 1219, 257, 45216, 13, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.142154944570441, "compression_ratio": 1.7173913043478262, "no_speech_prob": 2.1233634015516145e-06}, {"id": 480, "seek": 287084, "start": 2894.52, "end": 2897.58, "text": " I did this using something called a convolution.", "tokens": [50364, 3876, 366, 885, 9823, 293, 1071, 472, 689, 264, 9429, 3876, 366, 885, 9823, 13, 50732, 50732, 400, 498, 291, 519, 646, 281, 300, 1176, 88, 1918, 293, 36790, 3035, 300, 2825, 466, 437, 264, 7914, 295, 50924, 50924, 257, 18161, 2533, 775, 341, 307, 3122, 364, 1365, 295, 746, 300, 321, 321, 458, 300, 264, 700, 51248, 51248, 4583, 295, 257, 18161, 3209, 12258, 281, 1466, 577, 281, 360, 13, 51416, 51416, 823, 577, 630, 286, 360, 341, 30, 51548, 51548, 286, 630, 341, 1228, 746, 1219, 257, 45216, 13, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.142154944570441, "compression_ratio": 1.7173913043478262, "no_speech_prob": 2.1233634015516145e-06}, {"id": 481, "seek": 289758, "start": 2897.58, "end": 2901.88, "text": " And so what we're going to do now is we're going to zoom in to this Excel notebook.", "tokens": [50364, 400, 370, 437, 321, 434, 516, 281, 360, 586, 307, 321, 434, 516, 281, 8863, 294, 281, 341, 19060, 21060, 13, 50579, 50579, 492, 434, 516, 281, 1066, 48226, 294, 13, 50713, 50713, 492, 434, 516, 281, 1066, 48226, 294, 13, 50791, 50791, 407, 747, 257, 574, 1066, 364, 3313, 322, 341, 322, 341, 3256, 293, 291, 603, 536, 300, 1564, 321, 8863, 294, 50987, 50987, 1547, 309, 311, 767, 445, 1027, 295, 3547, 597, 382, 321, 7152, 294, 264, 588, 700, 294, 51501, 51501, 264, 588, 700, 6898, 321, 1866, 577, 5267, 366, 1027, 295, 3547, 13, 51788, 51788, 407, 510, 436, 366, 558, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.17202796936035156, "compression_ratio": 1.8611111111111112, "no_speech_prob": 6.681509034933697e-07}, {"id": 482, "seek": 289758, "start": 2901.88, "end": 2904.56, "text": " We're going to keep zooming in.", "tokens": [50364, 400, 370, 437, 321, 434, 516, 281, 360, 586, 307, 321, 434, 516, 281, 8863, 294, 281, 341, 19060, 21060, 13, 50579, 50579, 492, 434, 516, 281, 1066, 48226, 294, 13, 50713, 50713, 492, 434, 516, 281, 1066, 48226, 294, 13, 50791, 50791, 407, 747, 257, 574, 1066, 364, 3313, 322, 341, 322, 341, 3256, 293, 291, 603, 536, 300, 1564, 321, 8863, 294, 50987, 50987, 1547, 309, 311, 767, 445, 1027, 295, 3547, 597, 382, 321, 7152, 294, 264, 588, 700, 294, 51501, 51501, 264, 588, 700, 6898, 321, 1866, 577, 5267, 366, 1027, 295, 3547, 13, 51788, 51788, 407, 510, 436, 366, 558, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.17202796936035156, "compression_ratio": 1.8611111111111112, "no_speech_prob": 6.681509034933697e-07}, {"id": 483, "seek": 289758, "start": 2904.56, "end": 2906.12, "text": " We're going to keep zooming in.", "tokens": [50364, 400, 370, 437, 321, 434, 516, 281, 360, 586, 307, 321, 434, 516, 281, 8863, 294, 281, 341, 19060, 21060, 13, 50579, 50579, 492, 434, 516, 281, 1066, 48226, 294, 13, 50713, 50713, 492, 434, 516, 281, 1066, 48226, 294, 13, 50791, 50791, 407, 747, 257, 574, 1066, 364, 3313, 322, 341, 322, 341, 3256, 293, 291, 603, 536, 300, 1564, 321, 8863, 294, 50987, 50987, 1547, 309, 311, 767, 445, 1027, 295, 3547, 597, 382, 321, 7152, 294, 264, 588, 700, 294, 51501, 51501, 264, 588, 700, 6898, 321, 1866, 577, 5267, 366, 1027, 295, 3547, 13, 51788, 51788, 407, 510, 436, 366, 558, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.17202796936035156, "compression_ratio": 1.8611111111111112, "no_speech_prob": 6.681509034933697e-07}, {"id": 484, "seek": 289758, "start": 2906.12, "end": 2910.04, "text": " So take a look keep an eye on this on this image and you'll see that once we zoom in", "tokens": [50364, 400, 370, 437, 321, 434, 516, 281, 360, 586, 307, 321, 434, 516, 281, 8863, 294, 281, 341, 19060, 21060, 13, 50579, 50579, 492, 434, 516, 281, 1066, 48226, 294, 13, 50713, 50713, 492, 434, 516, 281, 1066, 48226, 294, 13, 50791, 50791, 407, 747, 257, 574, 1066, 364, 3313, 322, 341, 322, 341, 3256, 293, 291, 603, 536, 300, 1564, 321, 8863, 294, 50987, 50987, 1547, 309, 311, 767, 445, 1027, 295, 3547, 597, 382, 321, 7152, 294, 264, 588, 700, 294, 51501, 51501, 264, 588, 700, 6898, 321, 1866, 577, 5267, 366, 1027, 295, 3547, 13, 51788, 51788, 407, 510, 436, 366, 558, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.17202796936035156, "compression_ratio": 1.8611111111111112, "no_speech_prob": 6.681509034933697e-07}, {"id": 485, "seek": 289758, "start": 2910.04, "end": 2920.3199999999997, "text": " enough it's actually just made of numbers which as we discussed in the very first in", "tokens": [50364, 400, 370, 437, 321, 434, 516, 281, 360, 586, 307, 321, 434, 516, 281, 8863, 294, 281, 341, 19060, 21060, 13, 50579, 50579, 492, 434, 516, 281, 1066, 48226, 294, 13, 50713, 50713, 492, 434, 516, 281, 1066, 48226, 294, 13, 50791, 50791, 407, 747, 257, 574, 1066, 364, 3313, 322, 341, 322, 341, 3256, 293, 291, 603, 536, 300, 1564, 321, 8863, 294, 50987, 50987, 1547, 309, 311, 767, 445, 1027, 295, 3547, 597, 382, 321, 7152, 294, 264, 588, 700, 294, 51501, 51501, 264, 588, 700, 6898, 321, 1866, 577, 5267, 366, 1027, 295, 3547, 13, 51788, 51788, 407, 510, 436, 366, 558, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.17202796936035156, "compression_ratio": 1.8611111111111112, "no_speech_prob": 6.681509034933697e-07}, {"id": 486, "seek": 289758, "start": 2920.3199999999997, "end": 2926.06, "text": " the very first lesson we saw how images are made of numbers.", "tokens": [50364, 400, 370, 437, 321, 434, 516, 281, 360, 586, 307, 321, 434, 516, 281, 8863, 294, 281, 341, 19060, 21060, 13, 50579, 50579, 492, 434, 516, 281, 1066, 48226, 294, 13, 50713, 50713, 492, 434, 516, 281, 1066, 48226, 294, 13, 50791, 50791, 407, 747, 257, 574, 1066, 364, 3313, 322, 341, 322, 341, 3256, 293, 291, 603, 536, 300, 1564, 321, 8863, 294, 50987, 50987, 1547, 309, 311, 767, 445, 1027, 295, 3547, 597, 382, 321, 7152, 294, 264, 588, 700, 294, 51501, 51501, 264, 588, 700, 6898, 321, 1866, 577, 5267, 366, 1027, 295, 3547, 13, 51788, 51788, 407, 510, 436, 366, 558, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.17202796936035156, "compression_ratio": 1.8611111111111112, "no_speech_prob": 6.681509034933697e-07}, {"id": 487, "seek": 289758, "start": 2926.06, "end": 2927.22, "text": " So here they are right.", "tokens": [50364, 400, 370, 437, 321, 434, 516, 281, 360, 586, 307, 321, 434, 516, 281, 8863, 294, 281, 341, 19060, 21060, 13, 50579, 50579, 492, 434, 516, 281, 1066, 48226, 294, 13, 50713, 50713, 492, 434, 516, 281, 1066, 48226, 294, 13, 50791, 50791, 407, 747, 257, 574, 1066, 364, 3313, 322, 341, 322, 341, 3256, 293, 291, 603, 536, 300, 1564, 321, 8863, 294, 50987, 50987, 1547, 309, 311, 767, 445, 1027, 295, 3547, 597, 382, 321, 7152, 294, 264, 588, 700, 294, 51501, 51501, 264, 588, 700, 6898, 321, 1866, 577, 5267, 366, 1027, 295, 3547, 13, 51788, 51788, 407, 510, 436, 366, 558, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.17202796936035156, "compression_ratio": 1.8611111111111112, "no_speech_prob": 6.681509034933697e-07}, {"id": 488, "seek": 292722, "start": 2927.22, "end": 2930.18, "text": " Here are the numbers between zero and one.", "tokens": [50364, 1692, 366, 264, 3547, 1296, 4018, 293, 472, 13, 50512, 50512, 400, 437, 286, 445, 630, 307, 286, 445, 1143, 257, 707, 4282, 13, 50659, 50659, 286, 1143, 8116, 19060, 311, 27708, 39366, 281, 1936, 652, 721, 300, 2946, 3547, 51147, 51147, 544, 2182, 13, 51223, 51223, 407, 300, 311, 577, 286, 3574, 341, 19060, 8193, 293, 286, 600, 445, 23382, 309, 766, 281, 264, 23831, 26601, 51553, 51553, 457, 309, 311, 767, 436, 434, 767, 3801, 813, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.1424711545308431, "compression_ratio": 1.5360360360360361, "no_speech_prob": 1.6797220041553373e-06}, {"id": 489, "seek": 292722, "start": 2930.18, "end": 2933.12, "text": " And what I just did is I just used a little trick.", "tokens": [50364, 1692, 366, 264, 3547, 1296, 4018, 293, 472, 13, 50512, 50512, 400, 437, 286, 445, 630, 307, 286, 445, 1143, 257, 707, 4282, 13, 50659, 50659, 286, 1143, 8116, 19060, 311, 27708, 39366, 281, 1936, 652, 721, 300, 2946, 3547, 51147, 51147, 544, 2182, 13, 51223, 51223, 407, 300, 311, 577, 286, 3574, 341, 19060, 8193, 293, 286, 600, 445, 23382, 309, 766, 281, 264, 23831, 26601, 51553, 51553, 457, 309, 311, 767, 436, 434, 767, 3801, 813, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.1424711545308431, "compression_ratio": 1.5360360360360361, "no_speech_prob": 1.6797220041553373e-06}, {"id": 490, "seek": 292722, "start": 2933.12, "end": 2942.8799999999997, "text": " I used Microsoft Excel's conditional formatting to basically make things that higher numbers", "tokens": [50364, 1692, 366, 264, 3547, 1296, 4018, 293, 472, 13, 50512, 50512, 400, 437, 286, 445, 630, 307, 286, 445, 1143, 257, 707, 4282, 13, 50659, 50659, 286, 1143, 8116, 19060, 311, 27708, 39366, 281, 1936, 652, 721, 300, 2946, 3547, 51147, 51147, 544, 2182, 13, 51223, 51223, 407, 300, 311, 577, 286, 3574, 341, 19060, 8193, 293, 286, 600, 445, 23382, 309, 766, 281, 264, 23831, 26601, 51553, 51553, 457, 309, 311, 767, 436, 434, 767, 3801, 813, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.1424711545308431, "compression_ratio": 1.5360360360360361, "no_speech_prob": 1.6797220041553373e-06}, {"id": 491, "seek": 292722, "start": 2942.8799999999997, "end": 2944.3999999999996, "text": " more red.", "tokens": [50364, 1692, 366, 264, 3547, 1296, 4018, 293, 472, 13, 50512, 50512, 400, 437, 286, 445, 630, 307, 286, 445, 1143, 257, 707, 4282, 13, 50659, 50659, 286, 1143, 8116, 19060, 311, 27708, 39366, 281, 1936, 652, 721, 300, 2946, 3547, 51147, 51147, 544, 2182, 13, 51223, 51223, 407, 300, 311, 577, 286, 3574, 341, 19060, 8193, 293, 286, 600, 445, 23382, 309, 766, 281, 264, 23831, 26601, 51553, 51553, 457, 309, 311, 767, 436, 434, 767, 3801, 813, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.1424711545308431, "compression_ratio": 1.5360360360360361, "no_speech_prob": 1.6797220041553373e-06}, {"id": 492, "seek": 292722, "start": 2944.3999999999996, "end": 2951.0, "text": " So that's how I turned this Excel sheet and I've just rounded it off to the nearest decimal", "tokens": [50364, 1692, 366, 264, 3547, 1296, 4018, 293, 472, 13, 50512, 50512, 400, 437, 286, 445, 630, 307, 286, 445, 1143, 257, 707, 4282, 13, 50659, 50659, 286, 1143, 8116, 19060, 311, 27708, 39366, 281, 1936, 652, 721, 300, 2946, 3547, 51147, 51147, 544, 2182, 13, 51223, 51223, 407, 300, 311, 577, 286, 3574, 341, 19060, 8193, 293, 286, 600, 445, 23382, 309, 766, 281, 264, 23831, 26601, 51553, 51553, 457, 309, 311, 767, 436, 434, 767, 3801, 813, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.1424711545308431, "compression_ratio": 1.5360360360360361, "no_speech_prob": 1.6797220041553373e-06}, {"id": 493, "seek": 292722, "start": 2951.0, "end": 2956.3199999999997, "text": " but it's actually they're actually bigger than that.", "tokens": [50364, 1692, 366, 264, 3547, 1296, 4018, 293, 472, 13, 50512, 50512, 400, 437, 286, 445, 630, 307, 286, 445, 1143, 257, 707, 4282, 13, 50659, 50659, 286, 1143, 8116, 19060, 311, 27708, 39366, 281, 1936, 652, 721, 300, 2946, 3547, 51147, 51147, 544, 2182, 13, 51223, 51223, 407, 300, 311, 577, 286, 3574, 341, 19060, 8193, 293, 286, 600, 445, 23382, 309, 766, 281, 264, 23831, 26601, 51553, 51553, 457, 309, 311, 767, 436, 434, 767, 3801, 813, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.1424711545308431, "compression_ratio": 1.5360360360360361, "no_speech_prob": 1.6797220041553373e-06}, {"id": 494, "seek": 295632, "start": 2956.32, "end": 2961.98, "text": " And so yeah so here is the image as numbers.", "tokens": [50364, 400, 370, 1338, 370, 510, 307, 264, 3256, 382, 3547, 13, 50647, 50647, 400, 370, 718, 385, 855, 291, 577, 321, 1437, 466, 4084, 341, 1192, 4691, 25712, 13, 50970, 50970, 708, 321, 630, 390, 321, 2942, 341, 8513, 13, 51266, 51266, 1468, 380, 3292, 466, 264, 11469, 13, 51388, 51388, 961, 311, 1879, 322, 341, 13, 51539, 51539, 708, 309, 311, 884, 307, 362, 257, 574, 412, 264, 14332, 294, 3179, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.10735754533247514, "compression_ratio": 1.5202312138728324, "no_speech_prob": 1.1365607406332856e-06}, {"id": 495, "seek": 295632, "start": 2961.98, "end": 2968.44, "text": " And so let me show you how we went about creating this top edge detector.", "tokens": [50364, 400, 370, 1338, 370, 510, 307, 264, 3256, 382, 3547, 13, 50647, 50647, 400, 370, 718, 385, 855, 291, 577, 321, 1437, 466, 4084, 341, 1192, 4691, 25712, 13, 50970, 50970, 708, 321, 630, 390, 321, 2942, 341, 8513, 13, 51266, 51266, 1468, 380, 3292, 466, 264, 11469, 13, 51388, 51388, 961, 311, 1879, 322, 341, 13, 51539, 51539, 708, 309, 311, 884, 307, 362, 257, 574, 412, 264, 14332, 294, 3179, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.10735754533247514, "compression_ratio": 1.5202312138728324, "no_speech_prob": 1.1365607406332856e-06}, {"id": 496, "seek": 295632, "start": 2968.44, "end": 2974.36, "text": " What we did was we created this formula.", "tokens": [50364, 400, 370, 1338, 370, 510, 307, 264, 3256, 382, 3547, 13, 50647, 50647, 400, 370, 718, 385, 855, 291, 577, 321, 1437, 466, 4084, 341, 1192, 4691, 25712, 13, 50970, 50970, 708, 321, 630, 390, 321, 2942, 341, 8513, 13, 51266, 51266, 1468, 380, 3292, 466, 264, 11469, 13, 51388, 51388, 961, 311, 1879, 322, 341, 13, 51539, 51539, 708, 309, 311, 884, 307, 362, 257, 574, 412, 264, 14332, 294, 3179, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.10735754533247514, "compression_ratio": 1.5202312138728324, "no_speech_prob": 1.1365607406332856e-06}, {"id": 497, "seek": 295632, "start": 2974.36, "end": 2976.8, "text": " Don't worry about the max.", "tokens": [50364, 400, 370, 1338, 370, 510, 307, 264, 3256, 382, 3547, 13, 50647, 50647, 400, 370, 718, 385, 855, 291, 577, 321, 1437, 466, 4084, 341, 1192, 4691, 25712, 13, 50970, 50970, 708, 321, 630, 390, 321, 2942, 341, 8513, 13, 51266, 51266, 1468, 380, 3292, 466, 264, 11469, 13, 51388, 51388, 961, 311, 1879, 322, 341, 13, 51539, 51539, 708, 309, 311, 884, 307, 362, 257, 574, 412, 264, 14332, 294, 3179, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.10735754533247514, "compression_ratio": 1.5202312138728324, "no_speech_prob": 1.1365607406332856e-06}, {"id": 498, "seek": 295632, "start": 2976.8, "end": 2979.82, "text": " Let's focus on this.", "tokens": [50364, 400, 370, 1338, 370, 510, 307, 264, 3256, 382, 3547, 13, 50647, 50647, 400, 370, 718, 385, 855, 291, 577, 321, 1437, 466, 4084, 341, 1192, 4691, 25712, 13, 50970, 50970, 708, 321, 630, 390, 321, 2942, 341, 8513, 13, 51266, 51266, 1468, 380, 3292, 466, 264, 11469, 13, 51388, 51388, 961, 311, 1879, 322, 341, 13, 51539, 51539, 708, 309, 311, 884, 307, 362, 257, 574, 412, 264, 14332, 294, 3179, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.10735754533247514, "compression_ratio": 1.5202312138728324, "no_speech_prob": 1.1365607406332856e-06}, {"id": 499, "seek": 295632, "start": 2979.82, "end": 2984.76, "text": " What it's doing is have a look at the colored in areas.", "tokens": [50364, 400, 370, 1338, 370, 510, 307, 264, 3256, 382, 3547, 13, 50647, 50647, 400, 370, 718, 385, 855, 291, 577, 321, 1437, 466, 4084, 341, 1192, 4691, 25712, 13, 50970, 50970, 708, 321, 630, 390, 321, 2942, 341, 8513, 13, 51266, 51266, 1468, 380, 3292, 466, 264, 11469, 13, 51388, 51388, 961, 311, 1879, 322, 341, 13, 51539, 51539, 708, 309, 311, 884, 307, 362, 257, 574, 412, 264, 14332, 294, 3179, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.10735754533247514, "compression_ratio": 1.5202312138728324, "no_speech_prob": 1.1365607406332856e-06}, {"id": 500, "seek": 298476, "start": 2984.76, "end": 2997.2400000000002, "text": " It's taking each of these cells and multiplying them by each of these cells and then adding", "tokens": [50364, 467, 311, 1940, 1184, 295, 613, 5438, 293, 30955, 552, 538, 1184, 295, 613, 5438, 293, 550, 5127, 50988, 50988, 552, 493, 293, 550, 321, 360, 264, 11048, 2587, 8213, 644, 597, 307, 498, 300, 5314, 493, 1570, 813, 4018, 51416, 51416, 550, 652, 309, 4018, 13, 51506, 51506], "temperature": 0.0, "avg_logprob": -0.12088036069683, "compression_ratio": 1.6048387096774193, "no_speech_prob": 8.851558277456206e-07}, {"id": 501, "seek": 298476, "start": 2997.2400000000002, "end": 3005.8, "text": " them up and then we do the rectified linear part which is if that ends up less than zero", "tokens": [50364, 467, 311, 1940, 1184, 295, 613, 5438, 293, 30955, 552, 538, 1184, 295, 613, 5438, 293, 550, 5127, 50988, 50988, 552, 493, 293, 550, 321, 360, 264, 11048, 2587, 8213, 644, 597, 307, 498, 300, 5314, 493, 1570, 813, 4018, 51416, 51416, 550, 652, 309, 4018, 13, 51506, 51506], "temperature": 0.0, "avg_logprob": -0.12088036069683, "compression_ratio": 1.6048387096774193, "no_speech_prob": 8.851558277456206e-07}, {"id": 502, "seek": 298476, "start": 3005.8, "end": 3007.6000000000004, "text": " then make it zero.", "tokens": [50364, 467, 311, 1940, 1184, 295, 613, 5438, 293, 30955, 552, 538, 1184, 295, 613, 5438, 293, 550, 5127, 50988, 50988, 552, 493, 293, 550, 321, 360, 264, 11048, 2587, 8213, 644, 597, 307, 498, 300, 5314, 493, 1570, 813, 4018, 51416, 51416, 550, 652, 309, 4018, 13, 51506, 51506], "temperature": 0.0, "avg_logprob": -0.12088036069683, "compression_ratio": 1.6048387096774193, "no_speech_prob": 8.851558277456206e-07}, {"id": 503, "seek": 300760, "start": 3007.6, "end": 3017.7599999999998, "text": " So this is like a rectified linear unit but it's not doing the normal matrix product.", "tokens": [50364, 407, 341, 307, 411, 257, 11048, 2587, 8213, 4985, 457, 309, 311, 406, 884, 264, 2710, 8141, 1674, 13, 50872, 50872, 467, 311, 884, 264, 10344, 295, 257, 5893, 1674, 457, 445, 322, 613, 4949, 5438, 293, 365, 445, 51186, 51186, 613, 4949, 17443, 13, 51291, 51291, 407, 291, 1062, 406, 312, 6100, 281, 1568, 300, 498, 286, 1286, 586, 472, 281, 264, 558, 550, 586, 309, 311, 51676, 51676, 1228, 264, 958, 4949, 5438, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.08496357202529907, "compression_ratio": 1.6630434782608696, "no_speech_prob": 1.5143255893690366e-07}, {"id": 504, "seek": 300760, "start": 3017.7599999999998, "end": 3024.04, "text": " It's doing the equivalent of a dot product but just on these nine cells and with just", "tokens": [50364, 407, 341, 307, 411, 257, 11048, 2587, 8213, 4985, 457, 309, 311, 406, 884, 264, 2710, 8141, 1674, 13, 50872, 50872, 467, 311, 884, 264, 10344, 295, 257, 5893, 1674, 457, 445, 322, 613, 4949, 5438, 293, 365, 445, 51186, 51186, 613, 4949, 17443, 13, 51291, 51291, 407, 291, 1062, 406, 312, 6100, 281, 1568, 300, 498, 286, 1286, 586, 472, 281, 264, 558, 550, 586, 309, 311, 51676, 51676, 1228, 264, 958, 4949, 5438, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.08496357202529907, "compression_ratio": 1.6630434782608696, "no_speech_prob": 1.5143255893690366e-07}, {"id": 505, "seek": 300760, "start": 3024.04, "end": 3026.14, "text": " these nine weights.", "tokens": [50364, 407, 341, 307, 411, 257, 11048, 2587, 8213, 4985, 457, 309, 311, 406, 884, 264, 2710, 8141, 1674, 13, 50872, 50872, 467, 311, 884, 264, 10344, 295, 257, 5893, 1674, 457, 445, 322, 613, 4949, 5438, 293, 365, 445, 51186, 51186, 613, 4949, 17443, 13, 51291, 51291, 407, 291, 1062, 406, 312, 6100, 281, 1568, 300, 498, 286, 1286, 586, 472, 281, 264, 558, 550, 586, 309, 311, 51676, 51676, 1228, 264, 958, 4949, 5438, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.08496357202529907, "compression_ratio": 1.6630434782608696, "no_speech_prob": 1.5143255893690366e-07}, {"id": 506, "seek": 300760, "start": 3026.14, "end": 3033.8399999999997, "text": " So you might not be surprised to hear that if I move now one to the right then now it's", "tokens": [50364, 407, 341, 307, 411, 257, 11048, 2587, 8213, 4985, 457, 309, 311, 406, 884, 264, 2710, 8141, 1674, 13, 50872, 50872, 467, 311, 884, 264, 10344, 295, 257, 5893, 1674, 457, 445, 322, 613, 4949, 5438, 293, 365, 445, 51186, 51186, 613, 4949, 17443, 13, 51291, 51291, 407, 291, 1062, 406, 312, 6100, 281, 1568, 300, 498, 286, 1286, 586, 472, 281, 264, 558, 550, 586, 309, 311, 51676, 51676, 1228, 264, 958, 4949, 5438, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.08496357202529907, "compression_ratio": 1.6630434782608696, "no_speech_prob": 1.5143255893690366e-07}, {"id": 507, "seek": 300760, "start": 3033.8399999999997, "end": 3036.16, "text": " using the next nine cells.", "tokens": [50364, 407, 341, 307, 411, 257, 11048, 2587, 8213, 4985, 457, 309, 311, 406, 884, 264, 2710, 8141, 1674, 13, 50872, 50872, 467, 311, 884, 264, 10344, 295, 257, 5893, 1674, 457, 445, 322, 613, 4949, 5438, 293, 365, 445, 51186, 51186, 613, 4949, 17443, 13, 51291, 51291, 407, 291, 1062, 406, 312, 6100, 281, 1568, 300, 498, 286, 1286, 586, 472, 281, 264, 558, 550, 586, 309, 311, 51676, 51676, 1228, 264, 958, 4949, 5438, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.08496357202529907, "compression_ratio": 1.6630434782608696, "no_speech_prob": 1.5143255893690366e-07}, {"id": 508, "seek": 303616, "start": 3036.16, "end": 3043.6, "text": " So if I move like to the right quite a bit and down quite a bit to here it's using these", "tokens": [50364, 407, 498, 286, 1286, 411, 281, 264, 558, 1596, 257, 857, 293, 760, 1596, 257, 857, 281, 510, 309, 311, 1228, 613, 50736, 50736, 4949, 5438, 13, 50846, 50846, 407, 309, 311, 920, 884, 257, 5893, 1674, 558, 597, 382, 321, 458, 307, 257, 1254, 295, 8141, 27290, 51192, 51192, 457, 309, 311, 884, 309, 294, 341, 636, 689, 309, 311, 733, 295, 1940, 5002, 295, 264, 18426, 295, 341, 51402, 51402, 2590, 300, 264, 721, 300, 366, 1998, 281, 1184, 661, 366, 885, 17207, 538, 341, 8398, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.11515314682670262, "compression_ratio": 1.6981981981981982, "no_speech_prob": 1.505698151049728e-06}, {"id": 509, "seek": 303616, "start": 3043.6, "end": 3045.7999999999997, "text": " nine cells.", "tokens": [50364, 407, 498, 286, 1286, 411, 281, 264, 558, 1596, 257, 857, 293, 760, 1596, 257, 857, 281, 510, 309, 311, 1228, 613, 50736, 50736, 4949, 5438, 13, 50846, 50846, 407, 309, 311, 920, 884, 257, 5893, 1674, 558, 597, 382, 321, 458, 307, 257, 1254, 295, 8141, 27290, 51192, 51192, 457, 309, 311, 884, 309, 294, 341, 636, 689, 309, 311, 733, 295, 1940, 5002, 295, 264, 18426, 295, 341, 51402, 51402, 2590, 300, 264, 721, 300, 366, 1998, 281, 1184, 661, 366, 885, 17207, 538, 341, 8398, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.11515314682670262, "compression_ratio": 1.6981981981981982, "no_speech_prob": 1.505698151049728e-06}, {"id": 510, "seek": 303616, "start": 3045.7999999999997, "end": 3052.72, "text": " So it's still doing a dot product right which as we know is a form of matrix multiplication", "tokens": [50364, 407, 498, 286, 1286, 411, 281, 264, 558, 1596, 257, 857, 293, 760, 1596, 257, 857, 281, 510, 309, 311, 1228, 613, 50736, 50736, 4949, 5438, 13, 50846, 50846, 407, 309, 311, 920, 884, 257, 5893, 1674, 558, 597, 382, 321, 458, 307, 257, 1254, 295, 8141, 27290, 51192, 51192, 457, 309, 311, 884, 309, 294, 341, 636, 689, 309, 311, 733, 295, 1940, 5002, 295, 264, 18426, 295, 341, 51402, 51402, 2590, 300, 264, 721, 300, 366, 1998, 281, 1184, 661, 366, 885, 17207, 538, 341, 8398, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.11515314682670262, "compression_ratio": 1.6981981981981982, "no_speech_prob": 1.505698151049728e-06}, {"id": 511, "seek": 303616, "start": 3052.72, "end": 3056.92, "text": " but it's doing it in this way where it's kind of taking advantage of the geometry of this", "tokens": [50364, 407, 498, 286, 1286, 411, 281, 264, 558, 1596, 257, 857, 293, 760, 1596, 257, 857, 281, 510, 309, 311, 1228, 613, 50736, 50736, 4949, 5438, 13, 50846, 50846, 407, 309, 311, 920, 884, 257, 5893, 1674, 558, 597, 382, 321, 458, 307, 257, 1254, 295, 8141, 27290, 51192, 51192, 457, 309, 311, 884, 309, 294, 341, 636, 689, 309, 311, 733, 295, 1940, 5002, 295, 264, 18426, 295, 341, 51402, 51402, 2590, 300, 264, 721, 300, 366, 1998, 281, 1184, 661, 366, 885, 17207, 538, 341, 8398, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.11515314682670262, "compression_ratio": 1.6981981981981982, "no_speech_prob": 1.505698151049728e-06}, {"id": 512, "seek": 303616, "start": 3056.92, "end": 3062.7999999999997, "text": " situation that the things that are close to each other are being multiplied by this consistent", "tokens": [50364, 407, 498, 286, 1286, 411, 281, 264, 558, 1596, 257, 857, 293, 760, 1596, 257, 857, 281, 510, 309, 311, 1228, 613, 50736, 50736, 4949, 5438, 13, 50846, 50846, 407, 309, 311, 920, 884, 257, 5893, 1674, 558, 597, 382, 321, 458, 307, 257, 1254, 295, 8141, 27290, 51192, 51192, 457, 309, 311, 884, 309, 294, 341, 636, 689, 309, 311, 733, 295, 1940, 5002, 295, 264, 18426, 295, 341, 51402, 51402, 2590, 300, 264, 721, 300, 366, 1998, 281, 1184, 661, 366, 885, 17207, 538, 341, 8398, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.11515314682670262, "compression_ratio": 1.6981981981981982, "no_speech_prob": 1.505698151049728e-06}, {"id": 513, "seek": 306280, "start": 3062.8, "end": 3069.52, "text": " group of the same nine weights each time because there's actually 28 by 28 numbers here right", "tokens": [50364, 1594, 295, 264, 912, 4949, 17443, 1184, 565, 570, 456, 311, 767, 7562, 538, 7562, 3547, 510, 558, 50700, 50700, 597, 286, 519, 307, 24733, 23, 7562, 1413, 7562, 300, 1804, 1547, 1614, 25494, 457, 321, 500, 380, 528, 321, 434, 406, 321, 51314, 51314, 500, 380, 362, 1614, 25494, 9834, 321, 787, 362, 4949, 9834, 293, 370, 341, 307, 1219, 257, 45216, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.16752317372490377, "compression_ratio": 1.542857142857143, "no_speech_prob": 4.71089606435271e-06}, {"id": 514, "seek": 306280, "start": 3069.52, "end": 3081.8, "text": " which I think is 768 28 times 28 that plus enough 784 but we don't want we're not we", "tokens": [50364, 1594, 295, 264, 912, 4949, 17443, 1184, 565, 570, 456, 311, 767, 7562, 538, 7562, 3547, 510, 558, 50700, 50700, 597, 286, 519, 307, 24733, 23, 7562, 1413, 7562, 300, 1804, 1547, 1614, 25494, 457, 321, 500, 380, 528, 321, 434, 406, 321, 51314, 51314, 500, 380, 362, 1614, 25494, 9834, 321, 787, 362, 4949, 9834, 293, 370, 341, 307, 1219, 257, 45216, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.16752317372490377, "compression_ratio": 1.542857142857143, "no_speech_prob": 4.71089606435271e-06}, {"id": 515, "seek": 306280, "start": 3081.8, "end": 3087.6400000000003, "text": " don't have 784 parameters we only have nine parameters and so this is called a convolution.", "tokens": [50364, 1594, 295, 264, 912, 4949, 17443, 1184, 565, 570, 456, 311, 767, 7562, 538, 7562, 3547, 510, 558, 50700, 50700, 597, 286, 519, 307, 24733, 23, 7562, 1413, 7562, 300, 1804, 1547, 1614, 25494, 457, 321, 500, 380, 528, 321, 434, 406, 321, 51314, 51314, 500, 380, 362, 1614, 25494, 9834, 321, 787, 362, 4949, 9834, 293, 370, 341, 307, 1219, 257, 45216, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.16752317372490377, "compression_ratio": 1.542857142857143, "no_speech_prob": 4.71089606435271e-06}, {"id": 516, "seek": 308764, "start": 3087.64, "end": 3096.16, "text": " So a convolution is where you basically slide this kind of little 3 by 3 matrix across a", "tokens": [50364, 407, 257, 45216, 307, 689, 291, 1936, 4137, 341, 733, 295, 707, 805, 538, 805, 8141, 2108, 257, 50790, 50790, 3801, 8141, 293, 412, 1184, 4914, 291, 360, 257, 5893, 1674, 295, 264, 11760, 4959, 51086, 51086, 295, 300, 805, 538, 805, 365, 264, 11760, 4959, 295, 341, 805, 538, 805, 8141, 295, 31994, 13, 51438, 51438, 823, 983, 775, 300, 1884, 746, 300, 10704, 382, 291, 536, 1192, 8819, 30, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.08897629419962565, "compression_ratio": 1.682051282051282, "no_speech_prob": 9.27633891478763e-07}, {"id": 517, "seek": 308764, "start": 3096.16, "end": 3102.08, "text": " bigger matrix and at each location you do a dot product of the corresponding elements", "tokens": [50364, 407, 257, 45216, 307, 689, 291, 1936, 4137, 341, 733, 295, 707, 805, 538, 805, 8141, 2108, 257, 50790, 50790, 3801, 8141, 293, 412, 1184, 4914, 291, 360, 257, 5893, 1674, 295, 264, 11760, 4959, 51086, 51086, 295, 300, 805, 538, 805, 365, 264, 11760, 4959, 295, 341, 805, 538, 805, 8141, 295, 31994, 13, 51438, 51438, 823, 983, 775, 300, 1884, 746, 300, 10704, 382, 291, 536, 1192, 8819, 30, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.08897629419962565, "compression_ratio": 1.682051282051282, "no_speech_prob": 9.27633891478763e-07}, {"id": 518, "seek": 308764, "start": 3102.08, "end": 3109.12, "text": " of that 3 by 3 with the corresponding elements of this 3 by 3 matrix of coefficients.", "tokens": [50364, 407, 257, 45216, 307, 689, 291, 1936, 4137, 341, 733, 295, 707, 805, 538, 805, 8141, 2108, 257, 50790, 50790, 3801, 8141, 293, 412, 1184, 4914, 291, 360, 257, 5893, 1674, 295, 264, 11760, 4959, 51086, 51086, 295, 300, 805, 538, 805, 365, 264, 11760, 4959, 295, 341, 805, 538, 805, 8141, 295, 31994, 13, 51438, 51438, 823, 983, 775, 300, 1884, 746, 300, 10704, 382, 291, 536, 1192, 8819, 30, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.08897629419962565, "compression_ratio": 1.682051282051282, "no_speech_prob": 9.27633891478763e-07}, {"id": 519, "seek": 308764, "start": 3109.12, "end": 3114.12, "text": " Now why does that create something that finds as you see top edges?", "tokens": [50364, 407, 257, 45216, 307, 689, 291, 1936, 4137, 341, 733, 295, 707, 805, 538, 805, 8141, 2108, 257, 50790, 50790, 3801, 8141, 293, 412, 1184, 4914, 291, 360, 257, 5893, 1674, 295, 264, 11760, 4959, 51086, 51086, 295, 300, 805, 538, 805, 365, 264, 11760, 4959, 295, 341, 805, 538, 805, 8141, 295, 31994, 13, 51438, 51438, 823, 983, 775, 300, 1884, 746, 300, 10704, 382, 291, 536, 1192, 8819, 30, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.08897629419962565, "compression_ratio": 1.682051282051282, "no_speech_prob": 9.27633891478763e-07}, {"id": 520, "seek": 311412, "start": 3114.12, "end": 3118.56, "text": " Well it's because of the particular way I constructed this 3 by 3 matrix.", "tokens": [50364, 1042, 309, 311, 570, 295, 264, 1729, 636, 286, 17083, 341, 805, 538, 805, 8141, 13, 50586, 50586, 708, 286, 848, 390, 300, 439, 295, 264, 13241, 445, 3673, 370, 613, 2306, 366, 516, 281, 483, 257, 502, 293, 51142, 51142, 439, 295, 264, 2306, 445, 2507, 366, 516, 281, 483, 257, 3175, 502, 293, 439, 295, 264, 2306, 294, 264, 2808, 51380, 51380, 366, 516, 281, 483, 257, 1958, 13, 51486, 51486, 407, 718, 311, 519, 466, 437, 2314, 4079, 411, 510, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10797242684797807, "compression_ratio": 1.7195767195767195, "no_speech_prob": 7.224438149933121e-07}, {"id": 521, "seek": 311412, "start": 3118.56, "end": 3129.68, "text": " What I said was that all of the rows just above so these ones are going to get a 1 and", "tokens": [50364, 1042, 309, 311, 570, 295, 264, 1729, 636, 286, 17083, 341, 805, 538, 805, 8141, 13, 50586, 50586, 708, 286, 848, 390, 300, 439, 295, 264, 13241, 445, 3673, 370, 613, 2306, 366, 516, 281, 483, 257, 502, 293, 51142, 51142, 439, 295, 264, 2306, 445, 2507, 366, 516, 281, 483, 257, 3175, 502, 293, 439, 295, 264, 2306, 294, 264, 2808, 51380, 51380, 366, 516, 281, 483, 257, 1958, 13, 51486, 51486, 407, 718, 311, 519, 466, 437, 2314, 4079, 411, 510, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10797242684797807, "compression_ratio": 1.7195767195767195, "no_speech_prob": 7.224438149933121e-07}, {"id": 522, "seek": 311412, "start": 3129.68, "end": 3134.44, "text": " all of the ones just below are going to get a minus 1 and all of the ones in the middle", "tokens": [50364, 1042, 309, 311, 570, 295, 264, 1729, 636, 286, 17083, 341, 805, 538, 805, 8141, 13, 50586, 50586, 708, 286, 848, 390, 300, 439, 295, 264, 13241, 445, 3673, 370, 613, 2306, 366, 516, 281, 483, 257, 502, 293, 51142, 51142, 439, 295, 264, 2306, 445, 2507, 366, 516, 281, 483, 257, 3175, 502, 293, 439, 295, 264, 2306, 294, 264, 2808, 51380, 51380, 366, 516, 281, 483, 257, 1958, 13, 51486, 51486, 407, 718, 311, 519, 466, 437, 2314, 4079, 411, 510, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10797242684797807, "compression_ratio": 1.7195767195767195, "no_speech_prob": 7.224438149933121e-07}, {"id": 523, "seek": 311412, "start": 3134.44, "end": 3136.56, "text": " are going to get a 0.", "tokens": [50364, 1042, 309, 311, 570, 295, 264, 1729, 636, 286, 17083, 341, 805, 538, 805, 8141, 13, 50586, 50586, 708, 286, 848, 390, 300, 439, 295, 264, 13241, 445, 3673, 370, 613, 2306, 366, 516, 281, 483, 257, 502, 293, 51142, 51142, 439, 295, 264, 2306, 445, 2507, 366, 516, 281, 483, 257, 3175, 502, 293, 439, 295, 264, 2306, 294, 264, 2808, 51380, 51380, 366, 516, 281, 483, 257, 1958, 13, 51486, 51486, 407, 718, 311, 519, 466, 437, 2314, 4079, 411, 510, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10797242684797807, "compression_ratio": 1.7195767195767195, "no_speech_prob": 7.224438149933121e-07}, {"id": 524, "seek": 311412, "start": 3136.56, "end": 3143.72, "text": " So let's think about what happens somewhere like here.", "tokens": [50364, 1042, 309, 311, 570, 295, 264, 1729, 636, 286, 17083, 341, 805, 538, 805, 8141, 13, 50586, 50586, 708, 286, 848, 390, 300, 439, 295, 264, 13241, 445, 3673, 370, 613, 2306, 366, 516, 281, 483, 257, 502, 293, 51142, 51142, 439, 295, 264, 2306, 445, 2507, 366, 516, 281, 483, 257, 3175, 502, 293, 439, 295, 264, 2306, 294, 264, 2808, 51380, 51380, 366, 516, 281, 483, 257, 1958, 13, 51486, 51486, 407, 718, 311, 519, 466, 437, 2314, 4079, 411, 510, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.10797242684797807, "compression_ratio": 1.7195767195767195, "no_speech_prob": 7.224438149933121e-07}, {"id": 525, "seek": 314372, "start": 3143.72, "end": 3150.3599999999997, "text": " Is let's try to find the right one.", "tokens": [50364, 1119, 718, 311, 853, 281, 915, 264, 558, 472, 13, 50696, 50696, 1692, 309, 307, 13, 50750, 50750, 407, 510, 321, 434, 516, 281, 483, 502, 1413, 502, 1804, 502, 1413, 502, 1804, 502, 1413, 502, 3175, 502, 1413, 502, 3175, 51144, 51144, 502, 1413, 502, 3175, 502, 1413, 502, 321, 434, 516, 281, 483, 1958, 13, 51436, 51436, 583, 437, 466, 493, 510, 30, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.16496878084929092, "compression_ratio": 1.8245614035087718, "no_speech_prob": 1.4738926438440103e-05}, {"id": 526, "seek": 314372, "start": 3150.3599999999997, "end": 3151.4399999999996, "text": " Here it is.", "tokens": [50364, 1119, 718, 311, 853, 281, 915, 264, 558, 472, 13, 50696, 50696, 1692, 309, 307, 13, 50750, 50750, 407, 510, 321, 434, 516, 281, 483, 502, 1413, 502, 1804, 502, 1413, 502, 1804, 502, 1413, 502, 3175, 502, 1413, 502, 3175, 51144, 51144, 502, 1413, 502, 3175, 502, 1413, 502, 321, 434, 516, 281, 483, 1958, 13, 51436, 51436, 583, 437, 466, 493, 510, 30, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.16496878084929092, "compression_ratio": 1.8245614035087718, "no_speech_prob": 1.4738926438440103e-05}, {"id": 527, "seek": 314372, "start": 3151.4399999999996, "end": 3159.3199999999997, "text": " So here we're going to get 1 times 1 plus 1 times 1 plus 1 times 1 minus 1 times 1 minus", "tokens": [50364, 1119, 718, 311, 853, 281, 915, 264, 558, 472, 13, 50696, 50696, 1692, 309, 307, 13, 50750, 50750, 407, 510, 321, 434, 516, 281, 483, 502, 1413, 502, 1804, 502, 1413, 502, 1804, 502, 1413, 502, 3175, 502, 1413, 502, 3175, 51144, 51144, 502, 1413, 502, 3175, 502, 1413, 502, 321, 434, 516, 281, 483, 1958, 13, 51436, 51436, 583, 437, 466, 493, 510, 30, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.16496878084929092, "compression_ratio": 1.8245614035087718, "no_speech_prob": 1.4738926438440103e-05}, {"id": 528, "seek": 314372, "start": 3159.3199999999997, "end": 3165.16, "text": " 1 times 1 minus 1 times 1 we're going to get 0.", "tokens": [50364, 1119, 718, 311, 853, 281, 915, 264, 558, 472, 13, 50696, 50696, 1692, 309, 307, 13, 50750, 50750, 407, 510, 321, 434, 516, 281, 483, 502, 1413, 502, 1804, 502, 1413, 502, 1804, 502, 1413, 502, 3175, 502, 1413, 502, 3175, 51144, 51144, 502, 1413, 502, 3175, 502, 1413, 502, 321, 434, 516, 281, 483, 1958, 13, 51436, 51436, 583, 437, 466, 493, 510, 30, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.16496878084929092, "compression_ratio": 1.8245614035087718, "no_speech_prob": 1.4738926438440103e-05}, {"id": 529, "seek": 314372, "start": 3165.16, "end": 3168.68, "text": " But what about up here?", "tokens": [50364, 1119, 718, 311, 853, 281, 915, 264, 558, 472, 13, 50696, 50696, 1692, 309, 307, 13, 50750, 50750, 407, 510, 321, 434, 516, 281, 483, 502, 1413, 502, 1804, 502, 1413, 502, 1804, 502, 1413, 502, 3175, 502, 1413, 502, 3175, 51144, 51144, 502, 1413, 502, 3175, 502, 1413, 502, 321, 434, 516, 281, 483, 1958, 13, 51436, 51436, 583, 437, 466, 493, 510, 30, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.16496878084929092, "compression_ratio": 1.8245614035087718, "no_speech_prob": 1.4738926438440103e-05}, {"id": 530, "seek": 316868, "start": 3168.68, "end": 3177.9199999999996, "text": " Here we're going to get 1 times 1 plus 1 times 1 plus 1 times 1 these do nothing because", "tokens": [50364, 1692, 321, 434, 516, 281, 483, 502, 1413, 502, 1804, 502, 1413, 502, 1804, 502, 1413, 502, 613, 360, 1825, 570, 50826, 50826, 436, 434, 1413, 1958, 3175, 502, 1413, 1958, 370, 321, 434, 516, 281, 483, 805, 13, 51108, 51108, 407, 321, 434, 787, 516, 281, 483, 805, 264, 6343, 1944, 1230, 294, 264, 2590, 689, 613, 366, 439, 51455, 51455, 382, 2211, 382, 1944, 420, 294, 341, 1389, 382, 2182, 382, 1944, 293, 613, 366, 439, 2418, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.09000586328052339, "compression_ratio": 1.9631901840490797, "no_speech_prob": 1.8448222363076638e-06}, {"id": 531, "seek": 316868, "start": 3177.9199999999996, "end": 3183.56, "text": " they're times 0 minus 1 times 0 so we're going to get 3.", "tokens": [50364, 1692, 321, 434, 516, 281, 483, 502, 1413, 502, 1804, 502, 1413, 502, 1804, 502, 1413, 502, 613, 360, 1825, 570, 50826, 50826, 436, 434, 1413, 1958, 3175, 502, 1413, 1958, 370, 321, 434, 516, 281, 483, 805, 13, 51108, 51108, 407, 321, 434, 787, 516, 281, 483, 805, 264, 6343, 1944, 1230, 294, 264, 2590, 689, 613, 366, 439, 51455, 51455, 382, 2211, 382, 1944, 420, 294, 341, 1389, 382, 2182, 382, 1944, 293, 613, 366, 439, 2418, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.09000586328052339, "compression_ratio": 1.9631901840490797, "no_speech_prob": 1.8448222363076638e-06}, {"id": 532, "seek": 316868, "start": 3183.56, "end": 3190.5, "text": " So we're only going to get 3 the highest possible number in the situation where these are all", "tokens": [50364, 1692, 321, 434, 516, 281, 483, 502, 1413, 502, 1804, 502, 1413, 502, 1804, 502, 1413, 502, 613, 360, 1825, 570, 50826, 50826, 436, 434, 1413, 1958, 3175, 502, 1413, 1958, 370, 321, 434, 516, 281, 483, 805, 13, 51108, 51108, 407, 321, 434, 787, 516, 281, 483, 805, 264, 6343, 1944, 1230, 294, 264, 2590, 689, 613, 366, 439, 51455, 51455, 382, 2211, 382, 1944, 420, 294, 341, 1389, 382, 2182, 382, 1944, 293, 613, 366, 439, 2418, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.09000586328052339, "compression_ratio": 1.9631901840490797, "no_speech_prob": 1.8448222363076638e-06}, {"id": 533, "seek": 316868, "start": 3190.5, "end": 3195.8799999999997, "text": " as black as possible or in this case as red as possible and these are all white.", "tokens": [50364, 1692, 321, 434, 516, 281, 483, 502, 1413, 502, 1804, 502, 1413, 502, 1804, 502, 1413, 502, 613, 360, 1825, 570, 50826, 50826, 436, 434, 1413, 1958, 3175, 502, 1413, 1958, 370, 321, 434, 516, 281, 483, 805, 13, 51108, 51108, 407, 321, 434, 787, 516, 281, 483, 805, 264, 6343, 1944, 1230, 294, 264, 2590, 689, 613, 366, 439, 51455, 51455, 382, 2211, 382, 1944, 420, 294, 341, 1389, 382, 2182, 382, 1944, 293, 613, 366, 439, 2418, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.09000586328052339, "compression_ratio": 1.9631901840490797, "no_speech_prob": 1.8448222363076638e-06}, {"id": 534, "seek": 319588, "start": 3195.88, "end": 3204.1, "text": " And so that's only going to happen at a horizontal edge.", "tokens": [50364, 400, 370, 300, 311, 787, 516, 281, 1051, 412, 257, 12750, 4691, 13, 50775, 50775, 407, 264, 472, 7223, 309, 775, 2293, 264, 912, 551, 11, 2293, 264, 912, 30546, 11, 264, 51268, 51268, 472, 7223, 366, 2293, 264, 912, 30546, 11, 264, 805, 538, 805, 21169, 551, 510, 457, 341, 565, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.16540680612836564, "compression_ratio": 1.6985294117647058, "no_speech_prob": 2.0904544726363383e-06}, {"id": 535, "seek": 319588, "start": 3204.1, "end": 3213.96, "text": " So the one underneath it does exactly the same thing, exactly the same formulas, the", "tokens": [50364, 400, 370, 300, 311, 787, 516, 281, 1051, 412, 257, 12750, 4691, 13, 50775, 50775, 407, 264, 472, 7223, 309, 775, 2293, 264, 912, 551, 11, 2293, 264, 912, 30546, 11, 264, 51268, 51268, 472, 7223, 366, 2293, 264, 912, 30546, 11, 264, 805, 538, 805, 21169, 551, 510, 457, 341, 565, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.16540680612836564, "compression_ratio": 1.6985294117647058, "no_speech_prob": 2.0904544726363383e-06}, {"id": 536, "seek": 319588, "start": 3213.96, "end": 3220.8, "text": " one underneath are exactly the same formulas, the 3 by 3 sliding thing here but this time", "tokens": [50364, 400, 370, 300, 311, 787, 516, 281, 1051, 412, 257, 12750, 4691, 13, 50775, 50775, 407, 264, 472, 7223, 309, 775, 2293, 264, 912, 551, 11, 2293, 264, 912, 30546, 11, 264, 51268, 51268, 472, 7223, 366, 2293, 264, 912, 30546, 11, 264, 805, 538, 805, 21169, 551, 510, 457, 341, 565, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.16540680612836564, "compression_ratio": 1.6985294117647058, "no_speech_prob": 2.0904544726363383e-06}, {"id": 537, "seek": 322080, "start": 3220.8, "end": 3227.2400000000002, "text": " we've got a different little mini matrix of coefficients which is all ones going down", "tokens": [50364, 321, 600, 658, 257, 819, 707, 8382, 8141, 295, 31994, 597, 307, 439, 2306, 516, 760, 50686, 50686, 293, 439, 3175, 2306, 516, 760, 13, 50784, 50784, 400, 370, 337, 2293, 264, 912, 1778, 341, 486, 787, 312, 805, 294, 6851, 689, 436, 434, 439, 51122, 51122, 472, 510, 293, 436, 434, 439, 4018, 510, 13, 51338, 51338, 407, 291, 393, 519, 295, 257, 45216, 382, 885, 257, 21169, 4910, 295, 707, 8382, 5893, 3383, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.11512855336635927, "compression_ratio": 1.64321608040201, "no_speech_prob": 8.315273589687422e-07}, {"id": 538, "seek": 322080, "start": 3227.2400000000002, "end": 3229.2000000000003, "text": " and all minus ones going down.", "tokens": [50364, 321, 600, 658, 257, 819, 707, 8382, 8141, 295, 31994, 597, 307, 439, 2306, 516, 760, 50686, 50686, 293, 439, 3175, 2306, 516, 760, 13, 50784, 50784, 400, 370, 337, 2293, 264, 912, 1778, 341, 486, 787, 312, 805, 294, 6851, 689, 436, 434, 439, 51122, 51122, 472, 510, 293, 436, 434, 439, 4018, 510, 13, 51338, 51338, 407, 291, 393, 519, 295, 257, 45216, 382, 885, 257, 21169, 4910, 295, 707, 8382, 5893, 3383, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.11512855336635927, "compression_ratio": 1.64321608040201, "no_speech_prob": 8.315273589687422e-07}, {"id": 539, "seek": 322080, "start": 3229.2000000000003, "end": 3235.96, "text": " And so for exactly the same reason this will only be 3 in situations where they're all", "tokens": [50364, 321, 600, 658, 257, 819, 707, 8382, 8141, 295, 31994, 597, 307, 439, 2306, 516, 760, 50686, 50686, 293, 439, 3175, 2306, 516, 760, 13, 50784, 50784, 400, 370, 337, 2293, 264, 912, 1778, 341, 486, 787, 312, 805, 294, 6851, 689, 436, 434, 439, 51122, 51122, 472, 510, 293, 436, 434, 439, 4018, 510, 13, 51338, 51338, 407, 291, 393, 519, 295, 257, 45216, 382, 885, 257, 21169, 4910, 295, 707, 8382, 5893, 3383, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.11512855336635927, "compression_ratio": 1.64321608040201, "no_speech_prob": 8.315273589687422e-07}, {"id": 540, "seek": 322080, "start": 3235.96, "end": 3240.28, "text": " one here and they're all zero here.", "tokens": [50364, 321, 600, 658, 257, 819, 707, 8382, 8141, 295, 31994, 597, 307, 439, 2306, 516, 760, 50686, 50686, 293, 439, 3175, 2306, 516, 760, 13, 50784, 50784, 400, 370, 337, 2293, 264, 912, 1778, 341, 486, 787, 312, 805, 294, 6851, 689, 436, 434, 439, 51122, 51122, 472, 510, 293, 436, 434, 439, 4018, 510, 13, 51338, 51338, 407, 291, 393, 519, 295, 257, 45216, 382, 885, 257, 21169, 4910, 295, 707, 8382, 5893, 3383, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.11512855336635927, "compression_ratio": 1.64321608040201, "no_speech_prob": 8.315273589687422e-07}, {"id": 541, "seek": 322080, "start": 3240.28, "end": 3250.28, "text": " So you can think of a convolution as being a sliding window of little mini dot products", "tokens": [50364, 321, 600, 658, 257, 819, 707, 8382, 8141, 295, 31994, 597, 307, 439, 2306, 516, 760, 50686, 50686, 293, 439, 3175, 2306, 516, 760, 13, 50784, 50784, 400, 370, 337, 2293, 264, 912, 1778, 341, 486, 787, 312, 805, 294, 6851, 689, 436, 434, 439, 51122, 51122, 472, 510, 293, 436, 434, 439, 4018, 510, 13, 51338, 51338, 407, 291, 393, 519, 295, 257, 45216, 382, 885, 257, 21169, 4910, 295, 707, 8382, 5893, 3383, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.11512855336635927, "compression_ratio": 1.64321608040201, "no_speech_prob": 8.315273589687422e-07}, {"id": 542, "seek": 325028, "start": 3250.28, "end": 3252.76, "text": " of these little 3 by 3 matrices.", "tokens": [50364, 295, 613, 707, 805, 538, 805, 32284, 13, 50488, 50488, 400, 436, 500, 380, 362, 281, 312, 805, 538, 805, 11, 558, 30, 50601, 50601, 509, 727, 362, 11, 321, 727, 445, 362, 3612, 1096, 1025, 538, 1025, 293, 550, 321, 1116, 362, 257, 1025, 538, 1025, 8141, 50874, 50874, 295, 31994, 420, 2035, 11, 2035, 2744, 291, 411, 13, 51105, 51105, 407, 264, 2744, 295, 341, 307, 1219, 1080, 28256, 2744, 13, 51252, 51252, 639, 307, 257, 805, 538, 805, 28256, 337, 341, 45216, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.15114978154500325, "compression_ratio": 1.6210526315789473, "no_speech_prob": 5.771895757789025e-06}, {"id": 543, "seek": 325028, "start": 3252.76, "end": 3255.02, "text": " And they don't have to be 3 by 3, right?", "tokens": [50364, 295, 613, 707, 805, 538, 805, 32284, 13, 50488, 50488, 400, 436, 500, 380, 362, 281, 312, 805, 538, 805, 11, 558, 30, 50601, 50601, 509, 727, 362, 11, 321, 727, 445, 362, 3612, 1096, 1025, 538, 1025, 293, 550, 321, 1116, 362, 257, 1025, 538, 1025, 8141, 50874, 50874, 295, 31994, 420, 2035, 11, 2035, 2744, 291, 411, 13, 51105, 51105, 407, 264, 2744, 295, 341, 307, 1219, 1080, 28256, 2744, 13, 51252, 51252, 639, 307, 257, 805, 538, 805, 28256, 337, 341, 45216, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.15114978154500325, "compression_ratio": 1.6210526315789473, "no_speech_prob": 5.771895757789025e-06}, {"id": 544, "seek": 325028, "start": 3255.02, "end": 3260.48, "text": " You could have, we could just have easily done 5 by 5 and then we'd have a 5 by 5 matrix", "tokens": [50364, 295, 613, 707, 805, 538, 805, 32284, 13, 50488, 50488, 400, 436, 500, 380, 362, 281, 312, 805, 538, 805, 11, 558, 30, 50601, 50601, 509, 727, 362, 11, 321, 727, 445, 362, 3612, 1096, 1025, 538, 1025, 293, 550, 321, 1116, 362, 257, 1025, 538, 1025, 8141, 50874, 50874, 295, 31994, 420, 2035, 11, 2035, 2744, 291, 411, 13, 51105, 51105, 407, 264, 2744, 295, 341, 307, 1219, 1080, 28256, 2744, 13, 51252, 51252, 639, 307, 257, 805, 538, 805, 28256, 337, 341, 45216, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.15114978154500325, "compression_ratio": 1.6210526315789473, "no_speech_prob": 5.771895757789025e-06}, {"id": 545, "seek": 325028, "start": 3260.48, "end": 3265.1000000000004, "text": " of coefficients or whatever, whatever size you like.", "tokens": [50364, 295, 613, 707, 805, 538, 805, 32284, 13, 50488, 50488, 400, 436, 500, 380, 362, 281, 312, 805, 538, 805, 11, 558, 30, 50601, 50601, 509, 727, 362, 11, 321, 727, 445, 362, 3612, 1096, 1025, 538, 1025, 293, 550, 321, 1116, 362, 257, 1025, 538, 1025, 8141, 50874, 50874, 295, 31994, 420, 2035, 11, 2035, 2744, 291, 411, 13, 51105, 51105, 407, 264, 2744, 295, 341, 307, 1219, 1080, 28256, 2744, 13, 51252, 51252, 639, 307, 257, 805, 538, 805, 28256, 337, 341, 45216, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.15114978154500325, "compression_ratio": 1.6210526315789473, "no_speech_prob": 5.771895757789025e-06}, {"id": 546, "seek": 325028, "start": 3265.1000000000004, "end": 3268.0400000000004, "text": " So the size of this is called its kernel size.", "tokens": [50364, 295, 613, 707, 805, 538, 805, 32284, 13, 50488, 50488, 400, 436, 500, 380, 362, 281, 312, 805, 538, 805, 11, 558, 30, 50601, 50601, 509, 727, 362, 11, 321, 727, 445, 362, 3612, 1096, 1025, 538, 1025, 293, 550, 321, 1116, 362, 257, 1025, 538, 1025, 8141, 50874, 50874, 295, 31994, 420, 2035, 11, 2035, 2744, 291, 411, 13, 51105, 51105, 407, 264, 2744, 295, 341, 307, 1219, 1080, 28256, 2744, 13, 51252, 51252, 639, 307, 257, 805, 538, 805, 28256, 337, 341, 45216, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.15114978154500325, "compression_ratio": 1.6210526315789473, "no_speech_prob": 5.771895757789025e-06}, {"id": 547, "seek": 325028, "start": 3268.0400000000004, "end": 3275.8, "text": " This is a 3 by 3 kernel for this convolution.", "tokens": [50364, 295, 613, 707, 805, 538, 805, 32284, 13, 50488, 50488, 400, 436, 500, 380, 362, 281, 312, 805, 538, 805, 11, 558, 30, 50601, 50601, 509, 727, 362, 11, 321, 727, 445, 362, 3612, 1096, 1025, 538, 1025, 293, 550, 321, 1116, 362, 257, 1025, 538, 1025, 8141, 50874, 50874, 295, 31994, 420, 2035, 11, 2035, 2744, 291, 411, 13, 51105, 51105, 407, 264, 2744, 295, 341, 307, 1219, 1080, 28256, 2744, 13, 51252, 51252, 639, 307, 257, 805, 538, 805, 28256, 337, 341, 45216, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.15114978154500325, "compression_ratio": 1.6210526315789473, "no_speech_prob": 5.771895757789025e-06}, {"id": 548, "seek": 327580, "start": 3275.8, "end": 3283.96, "text": " So then because this is deep learning we just repeat these steps again and again and again.", "tokens": [50364, 407, 550, 570, 341, 307, 2452, 2539, 321, 445, 7149, 613, 4439, 797, 293, 797, 293, 797, 13, 50772, 50772, 407, 341, 307, 341, 4583, 286, 478, 5141, 2656, 85, 16, 11, 309, 311, 264, 700, 45216, 304, 4583, 13, 51012, 51012, 407, 2656, 85, 17, 11, 309, 311, 516, 281, 312, 257, 707, 857, 819, 570, 322, 2656, 85, 16, 321, 787, 632, 257, 2167, 2269, 51274, 51274, 4846, 11, 309, 311, 445, 2211, 293, 2418, 420, 291, 458, 11, 1338, 11, 2211, 293, 2418, 11, 677, 3772, 37088, 11, 472, 2269, 13, 51784, 51784, 583, 586, 321, 600, 658, 732, 9235, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15356756139684608, "compression_ratio": 1.706140350877193, "no_speech_prob": 3.3931351026694756e-06}, {"id": 549, "seek": 327580, "start": 3283.96, "end": 3288.76, "text": " So this is this layer I'm calling Conv1, it's the first convolutional layer.", "tokens": [50364, 407, 550, 570, 341, 307, 2452, 2539, 321, 445, 7149, 613, 4439, 797, 293, 797, 293, 797, 13, 50772, 50772, 407, 341, 307, 341, 4583, 286, 478, 5141, 2656, 85, 16, 11, 309, 311, 264, 700, 45216, 304, 4583, 13, 51012, 51012, 407, 2656, 85, 17, 11, 309, 311, 516, 281, 312, 257, 707, 857, 819, 570, 322, 2656, 85, 16, 321, 787, 632, 257, 2167, 2269, 51274, 51274, 4846, 11, 309, 311, 445, 2211, 293, 2418, 420, 291, 458, 11, 1338, 11, 2211, 293, 2418, 11, 677, 3772, 37088, 11, 472, 2269, 13, 51784, 51784, 583, 586, 321, 600, 658, 732, 9235, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15356756139684608, "compression_ratio": 1.706140350877193, "no_speech_prob": 3.3931351026694756e-06}, {"id": 550, "seek": 327580, "start": 3288.76, "end": 3294.0, "text": " So Conv2, it's going to be a little bit different because on Conv1 we only had a single channel", "tokens": [50364, 407, 550, 570, 341, 307, 2452, 2539, 321, 445, 7149, 613, 4439, 797, 293, 797, 293, 797, 13, 50772, 50772, 407, 341, 307, 341, 4583, 286, 478, 5141, 2656, 85, 16, 11, 309, 311, 264, 700, 45216, 304, 4583, 13, 51012, 51012, 407, 2656, 85, 17, 11, 309, 311, 516, 281, 312, 257, 707, 857, 819, 570, 322, 2656, 85, 16, 321, 787, 632, 257, 2167, 2269, 51274, 51274, 4846, 11, 309, 311, 445, 2211, 293, 2418, 420, 291, 458, 11, 1338, 11, 2211, 293, 2418, 11, 677, 3772, 37088, 11, 472, 2269, 13, 51784, 51784, 583, 586, 321, 600, 658, 732, 9235, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15356756139684608, "compression_ratio": 1.706140350877193, "no_speech_prob": 3.3931351026694756e-06}, {"id": 551, "seek": 327580, "start": 3294.0, "end": 3304.2000000000003, "text": " input, it's just black and white or you know, yeah, black and white, grayscale, one channel.", "tokens": [50364, 407, 550, 570, 341, 307, 2452, 2539, 321, 445, 7149, 613, 4439, 797, 293, 797, 293, 797, 13, 50772, 50772, 407, 341, 307, 341, 4583, 286, 478, 5141, 2656, 85, 16, 11, 309, 311, 264, 700, 45216, 304, 4583, 13, 51012, 51012, 407, 2656, 85, 17, 11, 309, 311, 516, 281, 312, 257, 707, 857, 819, 570, 322, 2656, 85, 16, 321, 787, 632, 257, 2167, 2269, 51274, 51274, 4846, 11, 309, 311, 445, 2211, 293, 2418, 420, 291, 458, 11, 1338, 11, 2211, 293, 2418, 11, 677, 3772, 37088, 11, 472, 2269, 13, 51784, 51784, 583, 586, 321, 600, 658, 732, 9235, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15356756139684608, "compression_ratio": 1.706140350877193, "no_speech_prob": 3.3931351026694756e-06}, {"id": 552, "seek": 327580, "start": 3304.2000000000003, "end": 3305.48, "text": " But now we've got two channels.", "tokens": [50364, 407, 550, 570, 341, 307, 2452, 2539, 321, 445, 7149, 613, 4439, 797, 293, 797, 293, 797, 13, 50772, 50772, 407, 341, 307, 341, 4583, 286, 478, 5141, 2656, 85, 16, 11, 309, 311, 264, 700, 45216, 304, 4583, 13, 51012, 51012, 407, 2656, 85, 17, 11, 309, 311, 516, 281, 312, 257, 707, 857, 819, 570, 322, 2656, 85, 16, 321, 787, 632, 257, 2167, 2269, 51274, 51274, 4846, 11, 309, 311, 445, 2211, 293, 2418, 420, 291, 458, 11, 1338, 11, 2211, 293, 2418, 11, 677, 3772, 37088, 11, 472, 2269, 13, 51784, 51784, 583, 586, 321, 600, 658, 732, 9235, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15356756139684608, "compression_ratio": 1.706140350877193, "no_speech_prob": 3.3931351026694756e-06}, {"id": 553, "seek": 330548, "start": 3305.48, "end": 3312.76, "text": " We've got the, let's make it a little smaller so we can see better, we've got the horizontal", "tokens": [50364, 492, 600, 658, 264, 11, 718, 311, 652, 309, 257, 707, 4356, 370, 321, 393, 536, 1101, 11, 321, 600, 658, 264, 12750, 50728, 50728, 8819, 2269, 293, 264, 9429, 8819, 2269, 13, 50926, 50926, 400, 321, 1116, 362, 257, 2531, 551, 294, 264, 700, 4583, 498, 309, 311, 2017, 11, 321, 1116, 362, 257, 2182, 2269, 11, 51094, 51094, 257, 3092, 2269, 293, 257, 3344, 2269, 13, 51200, 51200, 407, 586, 527, 6608, 11, 341, 307, 1219, 264, 6608, 11, 341, 707, 8382, 8141, 307, 1219, 264, 6608, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.14012087152359334, "compression_ratio": 1.8112244897959184, "no_speech_prob": 1.9333549516886706e-06}, {"id": 554, "seek": 330548, "start": 3312.76, "end": 3316.72, "text": " edges channel and the vertical edges channel.", "tokens": [50364, 492, 600, 658, 264, 11, 718, 311, 652, 309, 257, 707, 4356, 370, 321, 393, 536, 1101, 11, 321, 600, 658, 264, 12750, 50728, 50728, 8819, 2269, 293, 264, 9429, 8819, 2269, 13, 50926, 50926, 400, 321, 1116, 362, 257, 2531, 551, 294, 264, 700, 4583, 498, 309, 311, 2017, 11, 321, 1116, 362, 257, 2182, 2269, 11, 51094, 51094, 257, 3092, 2269, 293, 257, 3344, 2269, 13, 51200, 51200, 407, 586, 527, 6608, 11, 341, 307, 1219, 264, 6608, 11, 341, 707, 8382, 8141, 307, 1219, 264, 6608, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.14012087152359334, "compression_ratio": 1.8112244897959184, "no_speech_prob": 1.9333549516886706e-06}, {"id": 555, "seek": 330548, "start": 3316.72, "end": 3320.08, "text": " And we'd have a similar thing in the first layer if it's color, we'd have a red channel,", "tokens": [50364, 492, 600, 658, 264, 11, 718, 311, 652, 309, 257, 707, 4356, 370, 321, 393, 536, 1101, 11, 321, 600, 658, 264, 12750, 50728, 50728, 8819, 2269, 293, 264, 9429, 8819, 2269, 13, 50926, 50926, 400, 321, 1116, 362, 257, 2531, 551, 294, 264, 700, 4583, 498, 309, 311, 2017, 11, 321, 1116, 362, 257, 2182, 2269, 11, 51094, 51094, 257, 3092, 2269, 293, 257, 3344, 2269, 13, 51200, 51200, 407, 586, 527, 6608, 11, 341, 307, 1219, 264, 6608, 11, 341, 707, 8382, 8141, 307, 1219, 264, 6608, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.14012087152359334, "compression_ratio": 1.8112244897959184, "no_speech_prob": 1.9333549516886706e-06}, {"id": 556, "seek": 330548, "start": 3320.08, "end": 3322.2, "text": " a green channel and a blue channel.", "tokens": [50364, 492, 600, 658, 264, 11, 718, 311, 652, 309, 257, 707, 4356, 370, 321, 393, 536, 1101, 11, 321, 600, 658, 264, 12750, 50728, 50728, 8819, 2269, 293, 264, 9429, 8819, 2269, 13, 50926, 50926, 400, 321, 1116, 362, 257, 2531, 551, 294, 264, 700, 4583, 498, 309, 311, 2017, 11, 321, 1116, 362, 257, 2182, 2269, 11, 51094, 51094, 257, 3092, 2269, 293, 257, 3344, 2269, 13, 51200, 51200, 407, 586, 527, 6608, 11, 341, 307, 1219, 264, 6608, 11, 341, 707, 8382, 8141, 307, 1219, 264, 6608, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.14012087152359334, "compression_ratio": 1.8112244897959184, "no_speech_prob": 1.9333549516886706e-06}, {"id": 557, "seek": 330548, "start": 3322.2, "end": 3333.2400000000002, "text": " So now our filter, this is called the filter, this little mini matrix is called the filter.", "tokens": [50364, 492, 600, 658, 264, 11, 718, 311, 652, 309, 257, 707, 4356, 370, 321, 393, 536, 1101, 11, 321, 600, 658, 264, 12750, 50728, 50728, 8819, 2269, 293, 264, 9429, 8819, 2269, 13, 50926, 50926, 400, 321, 1116, 362, 257, 2531, 551, 294, 264, 700, 4583, 498, 309, 311, 2017, 11, 321, 1116, 362, 257, 2182, 2269, 11, 51094, 51094, 257, 3092, 2269, 293, 257, 3344, 2269, 13, 51200, 51200, 407, 586, 527, 6608, 11, 341, 307, 1219, 264, 6608, 11, 341, 707, 8382, 8141, 307, 1219, 264, 6608, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.14012087152359334, "compression_ratio": 1.8112244897959184, "no_speech_prob": 1.9333549516886706e-06}, {"id": 558, "seek": 333324, "start": 3333.24, "end": 3353.52, "text": " Our filter now contains a 3 by 3 by depth 2, or if you want to think of another way,", "tokens": [50364, 2621, 6608, 586, 8306, 257, 805, 538, 805, 538, 7161, 568, 11, 420, 498, 291, 528, 281, 519, 295, 1071, 636, 11, 51378, 51378, 732, 805, 538, 805, 23434, 1625, 420, 472, 805, 538, 805, 538, 568, 28256, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.20625708823980288, "compression_ratio": 1.3265306122448979, "no_speech_prob": 1.5534952808593516e-06}, {"id": 559, "seek": 333324, "start": 3353.52, "end": 3358.56, "text": " two 3 by 3 kernels or one 3 by 3 by 2 kernel.", "tokens": [50364, 2621, 6608, 586, 8306, 257, 805, 538, 805, 538, 7161, 568, 11, 420, 498, 291, 528, 281, 519, 295, 1071, 636, 11, 51378, 51378, 732, 805, 538, 805, 23434, 1625, 420, 472, 805, 538, 805, 538, 568, 28256, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.20625708823980288, "compression_ratio": 1.3265306122448979, "no_speech_prob": 1.5534952808593516e-06}, {"id": 560, "seek": 335856, "start": 3358.56, "end": 3363.88, "text": " And we basically do exactly the same thing, which is we're going to multiply each of these", "tokens": [50364, 400, 321, 1936, 360, 2293, 264, 912, 551, 11, 597, 307, 321, 434, 516, 281, 12972, 1184, 295, 613, 50630, 50630, 538, 1184, 295, 613, 293, 2408, 552, 493, 13, 50812, 50812, 583, 550, 321, 360, 309, 337, 264, 1150, 857, 382, 731, 13, 50894, 50894, 492, 12972, 1184, 295, 613, 538, 1184, 295, 613, 293, 2408, 552, 493, 13, 51218, 51218, 400, 370, 300, 2709, 505, 11, 286, 519, 286, 445, 6183, 512, 4974, 3547, 510, 11, 558, 13, 51439, 51439, 407, 341, 307, 516, 281, 586, 312, 746, 597, 393, 10432, 11, 1954, 2597, 11, 264, 1150, 472, 11, 264, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.11851108299111421, "compression_ratio": 1.8364485981308412, "no_speech_prob": 3.5559755815484095e-06}, {"id": 561, "seek": 335856, "start": 3363.88, "end": 3367.52, "text": " by each of these and sum them up.", "tokens": [50364, 400, 321, 1936, 360, 2293, 264, 912, 551, 11, 597, 307, 321, 434, 516, 281, 12972, 1184, 295, 613, 50630, 50630, 538, 1184, 295, 613, 293, 2408, 552, 493, 13, 50812, 50812, 583, 550, 321, 360, 309, 337, 264, 1150, 857, 382, 731, 13, 50894, 50894, 492, 12972, 1184, 295, 613, 538, 1184, 295, 613, 293, 2408, 552, 493, 13, 51218, 51218, 400, 370, 300, 2709, 505, 11, 286, 519, 286, 445, 6183, 512, 4974, 3547, 510, 11, 558, 13, 51439, 51439, 407, 341, 307, 516, 281, 586, 312, 746, 597, 393, 10432, 11, 1954, 2597, 11, 264, 1150, 472, 11, 264, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.11851108299111421, "compression_ratio": 1.8364485981308412, "no_speech_prob": 3.5559755815484095e-06}, {"id": 562, "seek": 335856, "start": 3367.52, "end": 3369.16, "text": " But then we do it for the second bit as well.", "tokens": [50364, 400, 321, 1936, 360, 2293, 264, 912, 551, 11, 597, 307, 321, 434, 516, 281, 12972, 1184, 295, 613, 50630, 50630, 538, 1184, 295, 613, 293, 2408, 552, 493, 13, 50812, 50812, 583, 550, 321, 360, 309, 337, 264, 1150, 857, 382, 731, 13, 50894, 50894, 492, 12972, 1184, 295, 613, 538, 1184, 295, 613, 293, 2408, 552, 493, 13, 51218, 51218, 400, 370, 300, 2709, 505, 11, 286, 519, 286, 445, 6183, 512, 4974, 3547, 510, 11, 558, 13, 51439, 51439, 407, 341, 307, 516, 281, 586, 312, 746, 597, 393, 10432, 11, 1954, 2597, 11, 264, 1150, 472, 11, 264, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.11851108299111421, "compression_ratio": 1.8364485981308412, "no_speech_prob": 3.5559755815484095e-06}, {"id": 563, "seek": 335856, "start": 3369.16, "end": 3375.64, "text": " We multiply each of these by each of these and sum them up.", "tokens": [50364, 400, 321, 1936, 360, 2293, 264, 912, 551, 11, 597, 307, 321, 434, 516, 281, 12972, 1184, 295, 613, 50630, 50630, 538, 1184, 295, 613, 293, 2408, 552, 493, 13, 50812, 50812, 583, 550, 321, 360, 309, 337, 264, 1150, 857, 382, 731, 13, 50894, 50894, 492, 12972, 1184, 295, 613, 538, 1184, 295, 613, 293, 2408, 552, 493, 13, 51218, 51218, 400, 370, 300, 2709, 505, 11, 286, 519, 286, 445, 6183, 512, 4974, 3547, 510, 11, 558, 13, 51439, 51439, 407, 341, 307, 516, 281, 586, 312, 746, 597, 393, 10432, 11, 1954, 2597, 11, 264, 1150, 472, 11, 264, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.11851108299111421, "compression_ratio": 1.8364485981308412, "no_speech_prob": 3.5559755815484095e-06}, {"id": 564, "seek": 335856, "start": 3375.64, "end": 3380.06, "text": " And so that gives us, I think I just picked some random numbers here, right.", "tokens": [50364, 400, 321, 1936, 360, 2293, 264, 912, 551, 11, 597, 307, 321, 434, 516, 281, 12972, 1184, 295, 613, 50630, 50630, 538, 1184, 295, 613, 293, 2408, 552, 493, 13, 50812, 50812, 583, 550, 321, 360, 309, 337, 264, 1150, 857, 382, 731, 13, 50894, 50894, 492, 12972, 1184, 295, 613, 538, 1184, 295, 613, 293, 2408, 552, 493, 13, 51218, 51218, 400, 370, 300, 2709, 505, 11, 286, 519, 286, 445, 6183, 512, 4974, 3547, 510, 11, 558, 13, 51439, 51439, 407, 341, 307, 516, 281, 586, 312, 746, 597, 393, 10432, 11, 1954, 2597, 11, 264, 1150, 472, 11, 264, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.11851108299111421, "compression_ratio": 1.8364485981308412, "no_speech_prob": 3.5559755815484095e-06}, {"id": 565, "seek": 335856, "start": 3380.06, "end": 3384.48, "text": " So this is going to now be something which can combine, oh sorry, the second one, the", "tokens": [50364, 400, 321, 1936, 360, 2293, 264, 912, 551, 11, 597, 307, 321, 434, 516, 281, 12972, 1184, 295, 613, 50630, 50630, 538, 1184, 295, 613, 293, 2408, 552, 493, 13, 50812, 50812, 583, 550, 321, 360, 309, 337, 264, 1150, 857, 382, 731, 13, 50894, 50894, 492, 12972, 1184, 295, 613, 538, 1184, 295, 613, 293, 2408, 552, 493, 13, 51218, 51218, 400, 370, 300, 2709, 505, 11, 286, 519, 286, 445, 6183, 512, 4974, 3547, 510, 11, 558, 13, 51439, 51439, 407, 341, 307, 516, 281, 586, 312, 746, 597, 393, 10432, 11, 1954, 2597, 11, 264, 1150, 472, 11, 264, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.11851108299111421, "compression_ratio": 1.8364485981308412, "no_speech_prob": 3.5559755815484095e-06}, {"id": 566, "seek": 338448, "start": 3384.48, "end": 3391.92, "text": " second set, so it's, sorry, each of the red ones by each of the blue ones, that's here,", "tokens": [50364, 1150, 992, 11, 370, 309, 311, 11, 2597, 11, 1184, 295, 264, 2182, 2306, 538, 1184, 295, 264, 3344, 2306, 11, 300, 311, 510, 11, 50736, 50736, 1804, 1184, 295, 264, 3092, 2306, 1413, 1184, 295, 264, 22074, 303, 2306, 11, 300, 311, 510, 13, 50998, 50998, 407, 341, 700, 6608, 307, 885, 6456, 281, 264, 12750, 4691, 25712, 293, 264, 1150, 6608, 51302, 51302, 307, 885, 6456, 281, 264, 9429, 4691, 25712, 13, 51454, 51454, 400, 382, 257, 1874, 321, 393, 917, 493, 365, 746, 300, 29520, 4122, 295, 264, 732, 721, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.09158642437993264, "compression_ratio": 1.8780487804878048, "no_speech_prob": 1.9333542695676442e-06}, {"id": 567, "seek": 338448, "start": 3391.92, "end": 3397.16, "text": " plus each of the green ones times each of the mauve ones, that's here.", "tokens": [50364, 1150, 992, 11, 370, 309, 311, 11, 2597, 11, 1184, 295, 264, 2182, 2306, 538, 1184, 295, 264, 3344, 2306, 11, 300, 311, 510, 11, 50736, 50736, 1804, 1184, 295, 264, 3092, 2306, 1413, 1184, 295, 264, 22074, 303, 2306, 11, 300, 311, 510, 13, 50998, 50998, 407, 341, 700, 6608, 307, 885, 6456, 281, 264, 12750, 4691, 25712, 293, 264, 1150, 6608, 51302, 51302, 307, 885, 6456, 281, 264, 9429, 4691, 25712, 13, 51454, 51454, 400, 382, 257, 1874, 321, 393, 917, 493, 365, 746, 300, 29520, 4122, 295, 264, 732, 721, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.09158642437993264, "compression_ratio": 1.8780487804878048, "no_speech_prob": 1.9333542695676442e-06}, {"id": 568, "seek": 338448, "start": 3397.16, "end": 3403.2400000000002, "text": " So this first filter is being applied to the horizontal edge detector and the second filter", "tokens": [50364, 1150, 992, 11, 370, 309, 311, 11, 2597, 11, 1184, 295, 264, 2182, 2306, 538, 1184, 295, 264, 3344, 2306, 11, 300, 311, 510, 11, 50736, 50736, 1804, 1184, 295, 264, 3092, 2306, 1413, 1184, 295, 264, 22074, 303, 2306, 11, 300, 311, 510, 13, 50998, 50998, 407, 341, 700, 6608, 307, 885, 6456, 281, 264, 12750, 4691, 25712, 293, 264, 1150, 6608, 51302, 51302, 307, 885, 6456, 281, 264, 9429, 4691, 25712, 13, 51454, 51454, 400, 382, 257, 1874, 321, 393, 917, 493, 365, 746, 300, 29520, 4122, 295, 264, 732, 721, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.09158642437993264, "compression_ratio": 1.8780487804878048, "no_speech_prob": 1.9333542695676442e-06}, {"id": 569, "seek": 338448, "start": 3403.2400000000002, "end": 3406.28, "text": " is being applied to the vertical edge detector.", "tokens": [50364, 1150, 992, 11, 370, 309, 311, 11, 2597, 11, 1184, 295, 264, 2182, 2306, 538, 1184, 295, 264, 3344, 2306, 11, 300, 311, 510, 11, 50736, 50736, 1804, 1184, 295, 264, 3092, 2306, 1413, 1184, 295, 264, 22074, 303, 2306, 11, 300, 311, 510, 13, 50998, 50998, 407, 341, 700, 6608, 307, 885, 6456, 281, 264, 12750, 4691, 25712, 293, 264, 1150, 6608, 51302, 51302, 307, 885, 6456, 281, 264, 9429, 4691, 25712, 13, 51454, 51454, 400, 382, 257, 1874, 321, 393, 917, 493, 365, 746, 300, 29520, 4122, 295, 264, 732, 721, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.09158642437993264, "compression_ratio": 1.8780487804878048, "no_speech_prob": 1.9333542695676442e-06}, {"id": 570, "seek": 338448, "start": 3406.28, "end": 3412.7400000000002, "text": " And as a result we can end up with something that combines features of the two things.", "tokens": [50364, 1150, 992, 11, 370, 309, 311, 11, 2597, 11, 1184, 295, 264, 2182, 2306, 538, 1184, 295, 264, 3344, 2306, 11, 300, 311, 510, 11, 50736, 50736, 1804, 1184, 295, 264, 3092, 2306, 1413, 1184, 295, 264, 22074, 303, 2306, 11, 300, 311, 510, 13, 50998, 50998, 407, 341, 700, 6608, 307, 885, 6456, 281, 264, 12750, 4691, 25712, 293, 264, 1150, 6608, 51302, 51302, 307, 885, 6456, 281, 264, 9429, 4691, 25712, 13, 51454, 51454, 400, 382, 257, 1874, 321, 393, 917, 493, 365, 746, 300, 29520, 4122, 295, 264, 732, 721, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.09158642437993264, "compression_ratio": 1.8780487804878048, "no_speech_prob": 1.9333542695676442e-06}, {"id": 571, "seek": 341274, "start": 3412.74, "end": 3421.4799999999996, "text": " And so then we can have a second channel over here, which is just a different bunch of convolutions", "tokens": [50364, 400, 370, 550, 321, 393, 362, 257, 1150, 2269, 670, 510, 11, 597, 307, 445, 257, 819, 3840, 295, 3754, 15892, 50801, 50801, 337, 1184, 295, 264, 732, 9235, 11, 341, 472, 1413, 341, 472, 13, 50935, 50935, 3764, 11, 291, 393, 536, 264, 4577, 13, 51128, 51128, 407, 437, 321, 727, 360, 307, 498, 11, 291, 458, 11, 1564, 321, 733, 295, 483, 281, 264, 917, 11, 321, 603, 917, 493, 11, 286, 603, 51441, 51441], "temperature": 0.0, "avg_logprob": -0.14246294770059706, "compression_ratio": 1.5337078651685394, "no_speech_prob": 2.6425761916470947e-06}, {"id": 572, "seek": 341274, "start": 3421.4799999999996, "end": 3424.16, "text": " for each of the two channels, this one times this one.", "tokens": [50364, 400, 370, 550, 321, 393, 362, 257, 1150, 2269, 670, 510, 11, 597, 307, 445, 257, 819, 3840, 295, 3754, 15892, 50801, 50801, 337, 1184, 295, 264, 732, 9235, 11, 341, 472, 1413, 341, 472, 13, 50935, 50935, 3764, 11, 291, 393, 536, 264, 4577, 13, 51128, 51128, 407, 437, 321, 727, 360, 307, 498, 11, 291, 458, 11, 1564, 321, 733, 295, 483, 281, 264, 917, 11, 321, 603, 917, 493, 11, 286, 603, 51441, 51441], "temperature": 0.0, "avg_logprob": -0.14246294770059706, "compression_ratio": 1.5337078651685394, "no_speech_prob": 2.6425761916470947e-06}, {"id": 573, "seek": 341274, "start": 3424.16, "end": 3428.02, "text": " Again, you can see the colors.", "tokens": [50364, 400, 370, 550, 321, 393, 362, 257, 1150, 2269, 670, 510, 11, 597, 307, 445, 257, 819, 3840, 295, 3754, 15892, 50801, 50801, 337, 1184, 295, 264, 732, 9235, 11, 341, 472, 1413, 341, 472, 13, 50935, 50935, 3764, 11, 291, 393, 536, 264, 4577, 13, 51128, 51128, 407, 437, 321, 727, 360, 307, 498, 11, 291, 458, 11, 1564, 321, 733, 295, 483, 281, 264, 917, 11, 321, 603, 917, 493, 11, 286, 603, 51441, 51441], "temperature": 0.0, "avg_logprob": -0.14246294770059706, "compression_ratio": 1.5337078651685394, "no_speech_prob": 2.6425761916470947e-06}, {"id": 574, "seek": 341274, "start": 3428.02, "end": 3434.2799999999997, "text": " So what we could do is if, you know, once we kind of get to the end, we'll end up, I'll", "tokens": [50364, 400, 370, 550, 321, 393, 362, 257, 1150, 2269, 670, 510, 11, 597, 307, 445, 257, 819, 3840, 295, 3754, 15892, 50801, 50801, 337, 1184, 295, 264, 732, 9235, 11, 341, 472, 1413, 341, 472, 13, 50935, 50935, 3764, 11, 291, 393, 536, 264, 4577, 13, 51128, 51128, 407, 437, 321, 727, 360, 307, 498, 11, 291, 458, 11, 1564, 321, 733, 295, 483, 281, 264, 917, 11, 321, 603, 917, 493, 11, 286, 603, 51441, 51441], "temperature": 0.0, "avg_logprob": -0.14246294770059706, "compression_ratio": 1.5337078651685394, "no_speech_prob": 2.6425761916470947e-06}, {"id": 575, "seek": 343428, "start": 3434.28, "end": 3444.96, "text": " show you how in a moment, we'll end up with a single set of 10 activations, one per digit", "tokens": [50364, 855, 291, 577, 294, 257, 1623, 11, 321, 603, 917, 493, 365, 257, 2167, 992, 295, 1266, 2430, 763, 11, 472, 680, 14293, 50898, 50898, 321, 434, 18538, 11, 4018, 281, 4949, 13, 51004, 51004, 1610, 294, 341, 1389, 11, 286, 519, 321, 727, 445, 1884, 472, 11, 291, 458, 11, 1310, 321, 434, 445, 1382, 281, 51148, 51148, 5521, 1825, 457, 264, 1230, 3407, 420, 406, 264, 1230, 3407, 11, 370, 321, 727, 445, 362, 51330, 51330, 472, 24433, 13, 51432, 51432, 400, 550, 321, 576, 646, 48256, 807, 341, 1228, 34520, 35, 294, 264, 7713, 636, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.12925634106386055, "compression_ratio": 1.6355932203389831, "no_speech_prob": 2.0261338704585796e-06}, {"id": 576, "seek": 343428, "start": 3444.96, "end": 3447.0800000000004, "text": " we're recognizing, zero to nine.", "tokens": [50364, 855, 291, 577, 294, 257, 1623, 11, 321, 603, 917, 493, 365, 257, 2167, 992, 295, 1266, 2430, 763, 11, 472, 680, 14293, 50898, 50898, 321, 434, 18538, 11, 4018, 281, 4949, 13, 51004, 51004, 1610, 294, 341, 1389, 11, 286, 519, 321, 727, 445, 1884, 472, 11, 291, 458, 11, 1310, 321, 434, 445, 1382, 281, 51148, 51148, 5521, 1825, 457, 264, 1230, 3407, 420, 406, 264, 1230, 3407, 11, 370, 321, 727, 445, 362, 51330, 51330, 472, 24433, 13, 51432, 51432, 400, 550, 321, 576, 646, 48256, 807, 341, 1228, 34520, 35, 294, 264, 7713, 636, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.12925634106386055, "compression_ratio": 1.6355932203389831, "no_speech_prob": 2.0261338704585796e-06}, {"id": 577, "seek": 343428, "start": 3447.0800000000004, "end": 3449.96, "text": " Or in this case, I think we could just create one, you know, maybe we're just trying to", "tokens": [50364, 855, 291, 577, 294, 257, 1623, 11, 321, 603, 917, 493, 365, 257, 2167, 992, 295, 1266, 2430, 763, 11, 472, 680, 14293, 50898, 50898, 321, 434, 18538, 11, 4018, 281, 4949, 13, 51004, 51004, 1610, 294, 341, 1389, 11, 286, 519, 321, 727, 445, 1884, 472, 11, 291, 458, 11, 1310, 321, 434, 445, 1382, 281, 51148, 51148, 5521, 1825, 457, 264, 1230, 3407, 420, 406, 264, 1230, 3407, 11, 370, 321, 727, 445, 362, 51330, 51330, 472, 24433, 13, 51432, 51432, 400, 550, 321, 576, 646, 48256, 807, 341, 1228, 34520, 35, 294, 264, 7713, 636, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.12925634106386055, "compression_ratio": 1.6355932203389831, "no_speech_prob": 2.0261338704585796e-06}, {"id": 578, "seek": 343428, "start": 3449.96, "end": 3453.6000000000004, "text": " recognize nothing but the number seven or not the number seven, so we could just have", "tokens": [50364, 855, 291, 577, 294, 257, 1623, 11, 321, 603, 917, 493, 365, 257, 2167, 992, 295, 1266, 2430, 763, 11, 472, 680, 14293, 50898, 50898, 321, 434, 18538, 11, 4018, 281, 4949, 13, 51004, 51004, 1610, 294, 341, 1389, 11, 286, 519, 321, 727, 445, 1884, 472, 11, 291, 458, 11, 1310, 321, 434, 445, 1382, 281, 51148, 51148, 5521, 1825, 457, 264, 1230, 3407, 420, 406, 264, 1230, 3407, 11, 370, 321, 727, 445, 362, 51330, 51330, 472, 24433, 13, 51432, 51432, 400, 550, 321, 576, 646, 48256, 807, 341, 1228, 34520, 35, 294, 264, 7713, 636, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.12925634106386055, "compression_ratio": 1.6355932203389831, "no_speech_prob": 2.0261338704585796e-06}, {"id": 579, "seek": 343428, "start": 3453.6000000000004, "end": 3455.6400000000003, "text": " one activation.", "tokens": [50364, 855, 291, 577, 294, 257, 1623, 11, 321, 603, 917, 493, 365, 257, 2167, 992, 295, 1266, 2430, 763, 11, 472, 680, 14293, 50898, 50898, 321, 434, 18538, 11, 4018, 281, 4949, 13, 51004, 51004, 1610, 294, 341, 1389, 11, 286, 519, 321, 727, 445, 1884, 472, 11, 291, 458, 11, 1310, 321, 434, 445, 1382, 281, 51148, 51148, 5521, 1825, 457, 264, 1230, 3407, 420, 406, 264, 1230, 3407, 11, 370, 321, 727, 445, 362, 51330, 51330, 472, 24433, 13, 51432, 51432, 400, 550, 321, 576, 646, 48256, 807, 341, 1228, 34520, 35, 294, 264, 7713, 636, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.12925634106386055, "compression_ratio": 1.6355932203389831, "no_speech_prob": 2.0261338704585796e-06}, {"id": 580, "seek": 343428, "start": 3455.6400000000003, "end": 3462.88, "text": " And then we would back propagate through this using SGD in the usual way.", "tokens": [50364, 855, 291, 577, 294, 257, 1623, 11, 321, 603, 917, 493, 365, 257, 2167, 992, 295, 1266, 2430, 763, 11, 472, 680, 14293, 50898, 50898, 321, 434, 18538, 11, 4018, 281, 4949, 13, 51004, 51004, 1610, 294, 341, 1389, 11, 286, 519, 321, 727, 445, 1884, 472, 11, 291, 458, 11, 1310, 321, 434, 445, 1382, 281, 51148, 51148, 5521, 1825, 457, 264, 1230, 3407, 420, 406, 264, 1230, 3407, 11, 370, 321, 727, 445, 362, 51330, 51330, 472, 24433, 13, 51432, 51432, 400, 550, 321, 576, 646, 48256, 807, 341, 1228, 34520, 35, 294, 264, 7713, 636, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.12925634106386055, "compression_ratio": 1.6355932203389831, "no_speech_prob": 2.0261338704585796e-06}, {"id": 581, "seek": 346288, "start": 3462.88, "end": 3466.4, "text": " And that is going to end up optimizing these numbers.", "tokens": [50364, 400, 300, 307, 516, 281, 917, 493, 40425, 613, 3547, 13, 50540, 50540, 407, 294, 341, 1389, 11, 286, 16945, 829, 294, 264, 3547, 286, 2586, 576, 1884, 4691, 46866, 13, 50798, 50798, 682, 957, 993, 11, 291, 722, 365, 4974, 3547, 293, 550, 291, 764, 34520, 35, 281, 19719, 613, 9834, 13, 51128, 51128, 1033, 11, 370, 456, 311, 257, 1326, 721, 321, 393, 360, 958, 13, 51414, 51414, 400, 286, 478, 516, 281, 855, 291, 264, 636, 300, 390, 544, 2689, 257, 1326, 924, 2057, 293, 550, 286, 603, 51684, 51684, 2903, 512, 2962, 300, 362, 668, 1027, 544, 3938, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.10184877163895936, "compression_ratio": 1.6456692913385826, "no_speech_prob": 2.406096200502361e-06}, {"id": 582, "seek": 346288, "start": 3466.4, "end": 3471.56, "text": " So in this case, I manually put in the numbers I knew would create edge detectors.", "tokens": [50364, 400, 300, 307, 516, 281, 917, 493, 40425, 613, 3547, 13, 50540, 50540, 407, 294, 341, 1389, 11, 286, 16945, 829, 294, 264, 3547, 286, 2586, 576, 1884, 4691, 46866, 13, 50798, 50798, 682, 957, 993, 11, 291, 722, 365, 4974, 3547, 293, 550, 291, 764, 34520, 35, 281, 19719, 613, 9834, 13, 51128, 51128, 1033, 11, 370, 456, 311, 257, 1326, 721, 321, 393, 360, 958, 13, 51414, 51414, 400, 286, 478, 516, 281, 855, 291, 264, 636, 300, 390, 544, 2689, 257, 1326, 924, 2057, 293, 550, 286, 603, 51684, 51684, 2903, 512, 2962, 300, 362, 668, 1027, 544, 3938, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.10184877163895936, "compression_ratio": 1.6456692913385826, "no_speech_prob": 2.406096200502361e-06}, {"id": 583, "seek": 346288, "start": 3471.56, "end": 3478.1600000000003, "text": " In real life, you start with random numbers and then you use SGD to optimize these parameters.", "tokens": [50364, 400, 300, 307, 516, 281, 917, 493, 40425, 613, 3547, 13, 50540, 50540, 407, 294, 341, 1389, 11, 286, 16945, 829, 294, 264, 3547, 286, 2586, 576, 1884, 4691, 46866, 13, 50798, 50798, 682, 957, 993, 11, 291, 722, 365, 4974, 3547, 293, 550, 291, 764, 34520, 35, 281, 19719, 613, 9834, 13, 51128, 51128, 1033, 11, 370, 456, 311, 257, 1326, 721, 321, 393, 360, 958, 13, 51414, 51414, 400, 286, 478, 516, 281, 855, 291, 264, 636, 300, 390, 544, 2689, 257, 1326, 924, 2057, 293, 550, 286, 603, 51684, 51684, 2903, 512, 2962, 300, 362, 668, 1027, 544, 3938, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.10184877163895936, "compression_ratio": 1.6456692913385826, "no_speech_prob": 2.406096200502361e-06}, {"id": 584, "seek": 346288, "start": 3478.1600000000003, "end": 3483.88, "text": " Okay, so there's a few things we can do next.", "tokens": [50364, 400, 300, 307, 516, 281, 917, 493, 40425, 613, 3547, 13, 50540, 50540, 407, 294, 341, 1389, 11, 286, 16945, 829, 294, 264, 3547, 286, 2586, 576, 1884, 4691, 46866, 13, 50798, 50798, 682, 957, 993, 11, 291, 722, 365, 4974, 3547, 293, 550, 291, 764, 34520, 35, 281, 19719, 613, 9834, 13, 51128, 51128, 1033, 11, 370, 456, 311, 257, 1326, 721, 321, 393, 360, 958, 13, 51414, 51414, 400, 286, 478, 516, 281, 855, 291, 264, 636, 300, 390, 544, 2689, 257, 1326, 924, 2057, 293, 550, 286, 603, 51684, 51684, 2903, 512, 2962, 300, 362, 668, 1027, 544, 3938, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.10184877163895936, "compression_ratio": 1.6456692913385826, "no_speech_prob": 2.406096200502361e-06}, {"id": 585, "seek": 346288, "start": 3483.88, "end": 3489.28, "text": " And I'm going to show you the way that was more common a few years ago and then I'll", "tokens": [50364, 400, 300, 307, 516, 281, 917, 493, 40425, 613, 3547, 13, 50540, 50540, 407, 294, 341, 1389, 11, 286, 16945, 829, 294, 264, 3547, 286, 2586, 576, 1884, 4691, 46866, 13, 50798, 50798, 682, 957, 993, 11, 291, 722, 365, 4974, 3547, 293, 550, 291, 764, 34520, 35, 281, 19719, 613, 9834, 13, 51128, 51128, 1033, 11, 370, 456, 311, 257, 1326, 721, 321, 393, 360, 958, 13, 51414, 51414, 400, 286, 478, 516, 281, 855, 291, 264, 636, 300, 390, 544, 2689, 257, 1326, 924, 2057, 293, 550, 286, 603, 51684, 51684, 2903, 512, 2962, 300, 362, 668, 1027, 544, 3938, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.10184877163895936, "compression_ratio": 1.6456692913385826, "no_speech_prob": 2.406096200502361e-06}, {"id": 586, "seek": 346288, "start": 3489.28, "end": 3492.82, "text": " explain some changes that have been made more recently.", "tokens": [50364, 400, 300, 307, 516, 281, 917, 493, 40425, 613, 3547, 13, 50540, 50540, 407, 294, 341, 1389, 11, 286, 16945, 829, 294, 264, 3547, 286, 2586, 576, 1884, 4691, 46866, 13, 50798, 50798, 682, 957, 993, 11, 291, 722, 365, 4974, 3547, 293, 550, 291, 764, 34520, 35, 281, 19719, 613, 9834, 13, 51128, 51128, 1033, 11, 370, 456, 311, 257, 1326, 721, 321, 393, 360, 958, 13, 51414, 51414, 400, 286, 478, 516, 281, 855, 291, 264, 636, 300, 390, 544, 2689, 257, 1326, 924, 2057, 293, 550, 286, 603, 51684, 51684, 2903, 512, 2962, 300, 362, 668, 1027, 544, 3938, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.10184877163895936, "compression_ratio": 1.6456692913385826, "no_speech_prob": 2.406096200502361e-06}, {"id": 587, "seek": 349282, "start": 3492.82, "end": 3500.56, "text": " What happened a few years ago was we would then take these activations, which as you", "tokens": [50364, 708, 2011, 257, 1326, 924, 2057, 390, 321, 576, 550, 747, 613, 2430, 763, 11, 597, 382, 291, 50751, 50751, 393, 536, 11, 613, 2430, 763, 586, 366, 733, 295, 294, 257, 10748, 5102, 11, 293, 321, 576, 360, 746, 51069, 51069, 1219, 11469, 12, 79, 858, 278, 13, 51148, 51148, 400, 11469, 12, 79, 858, 278, 307, 733, 295, 411, 257, 45216, 11, 309, 311, 257, 21169, 4910, 11, 457, 341, 565, 382, 264, 51393, 51393, 21169, 4910, 1709, 2108, 11, 370, 510, 321, 434, 493, 281, 510, 11, 321, 500, 380, 360, 257, 5893, 1674, 670, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.15169259613635494, "compression_ratio": 1.6803652968036529, "no_speech_prob": 5.255356882116757e-06}, {"id": 588, "seek": 349282, "start": 3500.56, "end": 3506.92, "text": " can see, these activations now are kind of in a grid pattern, and we would do something", "tokens": [50364, 708, 2011, 257, 1326, 924, 2057, 390, 321, 576, 550, 747, 613, 2430, 763, 11, 597, 382, 291, 50751, 50751, 393, 536, 11, 613, 2430, 763, 586, 366, 733, 295, 294, 257, 10748, 5102, 11, 293, 321, 576, 360, 746, 51069, 51069, 1219, 11469, 12, 79, 858, 278, 13, 51148, 51148, 400, 11469, 12, 79, 858, 278, 307, 733, 295, 411, 257, 45216, 11, 309, 311, 257, 21169, 4910, 11, 457, 341, 565, 382, 264, 51393, 51393, 21169, 4910, 1709, 2108, 11, 370, 510, 321, 434, 493, 281, 510, 11, 321, 500, 380, 360, 257, 5893, 1674, 670, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.15169259613635494, "compression_ratio": 1.6803652968036529, "no_speech_prob": 5.255356882116757e-06}, {"id": 589, "seek": 349282, "start": 3506.92, "end": 3508.5, "text": " called max-pulling.", "tokens": [50364, 708, 2011, 257, 1326, 924, 2057, 390, 321, 576, 550, 747, 613, 2430, 763, 11, 597, 382, 291, 50751, 50751, 393, 536, 11, 613, 2430, 763, 586, 366, 733, 295, 294, 257, 10748, 5102, 11, 293, 321, 576, 360, 746, 51069, 51069, 1219, 11469, 12, 79, 858, 278, 13, 51148, 51148, 400, 11469, 12, 79, 858, 278, 307, 733, 295, 411, 257, 45216, 11, 309, 311, 257, 21169, 4910, 11, 457, 341, 565, 382, 264, 51393, 51393, 21169, 4910, 1709, 2108, 11, 370, 510, 321, 434, 493, 281, 510, 11, 321, 500, 380, 360, 257, 5893, 1674, 670, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.15169259613635494, "compression_ratio": 1.6803652968036529, "no_speech_prob": 5.255356882116757e-06}, {"id": 590, "seek": 349282, "start": 3508.5, "end": 3513.4, "text": " And max-pulling is kind of like a convolution, it's a sliding window, but this time as the", "tokens": [50364, 708, 2011, 257, 1326, 924, 2057, 390, 321, 576, 550, 747, 613, 2430, 763, 11, 597, 382, 291, 50751, 50751, 393, 536, 11, 613, 2430, 763, 586, 366, 733, 295, 294, 257, 10748, 5102, 11, 293, 321, 576, 360, 746, 51069, 51069, 1219, 11469, 12, 79, 858, 278, 13, 51148, 51148, 400, 11469, 12, 79, 858, 278, 307, 733, 295, 411, 257, 45216, 11, 309, 311, 257, 21169, 4910, 11, 457, 341, 565, 382, 264, 51393, 51393, 21169, 4910, 1709, 2108, 11, 370, 510, 321, 434, 493, 281, 510, 11, 321, 500, 380, 360, 257, 5893, 1674, 670, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.15169259613635494, "compression_ratio": 1.6803652968036529, "no_speech_prob": 5.255356882116757e-06}, {"id": 591, "seek": 349282, "start": 3513.4, "end": 3519.46, "text": " sliding window goes across, so here we're up to here, we don't do a dot product over", "tokens": [50364, 708, 2011, 257, 1326, 924, 2057, 390, 321, 576, 550, 747, 613, 2430, 763, 11, 597, 382, 291, 50751, 50751, 393, 536, 11, 613, 2430, 763, 586, 366, 733, 295, 294, 257, 10748, 5102, 11, 293, 321, 576, 360, 746, 51069, 51069, 1219, 11469, 12, 79, 858, 278, 13, 51148, 51148, 400, 11469, 12, 79, 858, 278, 307, 733, 295, 411, 257, 45216, 11, 309, 311, 257, 21169, 4910, 11, 457, 341, 565, 382, 264, 51393, 51393, 21169, 4910, 1709, 2108, 11, 370, 510, 321, 434, 493, 281, 510, 11, 321, 500, 380, 360, 257, 5893, 1674, 670, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.15169259613635494, "compression_ratio": 1.6803652968036529, "no_speech_prob": 5.255356882116757e-06}, {"id": 592, "seek": 351946, "start": 3519.46, "end": 3523.44, "text": " a filter, but instead we just take a maximum.", "tokens": [50364, 257, 6608, 11, 457, 2602, 321, 445, 747, 257, 6674, 13, 50563, 50563, 3008, 510, 11, 341, 307, 264, 6674, 295, 613, 1451, 3547, 13, 50773, 50773, 400, 498, 321, 352, 2108, 257, 707, 857, 11, 341, 307, 264, 6674, 295, 613, 1451, 3547, 13, 50989, 50989, 1037, 2108, 257, 857, 11, 352, 2108, 257, 857, 11, 293, 370, 5220, 13, 51225, 51225, 876, 11, 300, 1709, 766, 264, 4691, 13, 51371, 51371, 400, 291, 393, 536, 437, 2314, 562, 341, 307, 1219, 257, 568, 87, 17, 11469, 12, 79, 858, 278, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.15892857620396564, "compression_ratio": 1.733695652173913, "no_speech_prob": 3.6688554700958775e-06}, {"id": 593, "seek": 351946, "start": 3523.44, "end": 3527.64, "text": " See here, this is the maximum of these four numbers.", "tokens": [50364, 257, 6608, 11, 457, 2602, 321, 445, 747, 257, 6674, 13, 50563, 50563, 3008, 510, 11, 341, 307, 264, 6674, 295, 613, 1451, 3547, 13, 50773, 50773, 400, 498, 321, 352, 2108, 257, 707, 857, 11, 341, 307, 264, 6674, 295, 613, 1451, 3547, 13, 50989, 50989, 1037, 2108, 257, 857, 11, 352, 2108, 257, 857, 11, 293, 370, 5220, 13, 51225, 51225, 876, 11, 300, 1709, 766, 264, 4691, 13, 51371, 51371, 400, 291, 393, 536, 437, 2314, 562, 341, 307, 1219, 257, 568, 87, 17, 11469, 12, 79, 858, 278, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.15892857620396564, "compression_ratio": 1.733695652173913, "no_speech_prob": 3.6688554700958775e-06}, {"id": 594, "seek": 351946, "start": 3527.64, "end": 3531.96, "text": " And if we go across a little bit, this is the maximum of these four numbers.", "tokens": [50364, 257, 6608, 11, 457, 2602, 321, 445, 747, 257, 6674, 13, 50563, 50563, 3008, 510, 11, 341, 307, 264, 6674, 295, 613, 1451, 3547, 13, 50773, 50773, 400, 498, 321, 352, 2108, 257, 707, 857, 11, 341, 307, 264, 6674, 295, 613, 1451, 3547, 13, 50989, 50989, 1037, 2108, 257, 857, 11, 352, 2108, 257, 857, 11, 293, 370, 5220, 13, 51225, 51225, 876, 11, 300, 1709, 766, 264, 4691, 13, 51371, 51371, 400, 291, 393, 536, 437, 2314, 562, 341, 307, 1219, 257, 568, 87, 17, 11469, 12, 79, 858, 278, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.15892857620396564, "compression_ratio": 1.733695652173913, "no_speech_prob": 3.6688554700958775e-06}, {"id": 595, "seek": 351946, "start": 3531.96, "end": 3536.68, "text": " Go across a bit, go across a bit, and so forth.", "tokens": [50364, 257, 6608, 11, 457, 2602, 321, 445, 747, 257, 6674, 13, 50563, 50563, 3008, 510, 11, 341, 307, 264, 6674, 295, 613, 1451, 3547, 13, 50773, 50773, 400, 498, 321, 352, 2108, 257, 707, 857, 11, 341, 307, 264, 6674, 295, 613, 1451, 3547, 13, 50989, 50989, 1037, 2108, 257, 857, 11, 352, 2108, 257, 857, 11, 293, 370, 5220, 13, 51225, 51225, 876, 11, 300, 1709, 766, 264, 4691, 13, 51371, 51371, 400, 291, 393, 536, 437, 2314, 562, 341, 307, 1219, 257, 568, 87, 17, 11469, 12, 79, 858, 278, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.15892857620396564, "compression_ratio": 1.733695652173913, "no_speech_prob": 3.6688554700958775e-06}, {"id": 596, "seek": 351946, "start": 3536.68, "end": 3539.6, "text": " Oh, that goes off the edge.", "tokens": [50364, 257, 6608, 11, 457, 2602, 321, 445, 747, 257, 6674, 13, 50563, 50563, 3008, 510, 11, 341, 307, 264, 6674, 295, 613, 1451, 3547, 13, 50773, 50773, 400, 498, 321, 352, 2108, 257, 707, 857, 11, 341, 307, 264, 6674, 295, 613, 1451, 3547, 13, 50989, 50989, 1037, 2108, 257, 857, 11, 352, 2108, 257, 857, 11, 293, 370, 5220, 13, 51225, 51225, 876, 11, 300, 1709, 766, 264, 4691, 13, 51371, 51371, 400, 291, 393, 536, 437, 2314, 562, 341, 307, 1219, 257, 568, 87, 17, 11469, 12, 79, 858, 278, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.15892857620396564, "compression_ratio": 1.733695652173913, "no_speech_prob": 3.6688554700958775e-06}, {"id": 597, "seek": 351946, "start": 3539.6, "end": 3548.9, "text": " And you can see what happens when this is called a 2x2 max-pulling.", "tokens": [50364, 257, 6608, 11, 457, 2602, 321, 445, 747, 257, 6674, 13, 50563, 50563, 3008, 510, 11, 341, 307, 264, 6674, 295, 613, 1451, 3547, 13, 50773, 50773, 400, 498, 321, 352, 2108, 257, 707, 857, 11, 341, 307, 264, 6674, 295, 613, 1451, 3547, 13, 50989, 50989, 1037, 2108, 257, 857, 11, 352, 2108, 257, 857, 11, 293, 370, 5220, 13, 51225, 51225, 876, 11, 300, 1709, 766, 264, 4691, 13, 51371, 51371, 400, 291, 393, 536, 437, 2314, 562, 341, 307, 1219, 257, 568, 87, 17, 11469, 12, 79, 858, 278, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.15892857620396564, "compression_ratio": 1.733695652173913, "no_speech_prob": 3.6688554700958775e-06}, {"id": 598, "seek": 354890, "start": 3548.9, "end": 3558.96, "text": " So you can see what happens with a 2x2 max-pulling, we end up losing half of our activations on", "tokens": [50364, 407, 291, 393, 536, 437, 2314, 365, 257, 568, 87, 17, 11469, 12, 79, 858, 278, 11, 321, 917, 493, 7027, 1922, 295, 527, 2430, 763, 322, 50867, 50867, 1184, 10139, 13, 50945, 50945, 407, 321, 434, 516, 281, 917, 493, 365, 787, 472, 6555, 295, 264, 1230, 295, 2430, 763, 321, 1143, 281, 362, 13, 51253, 51253, 400, 300, 311, 767, 257, 665, 551, 11, 570, 498, 321, 1066, 322, 884, 45216, 11, 11469, 12, 79, 858, 11, 51563, 51563], "temperature": 0.0, "avg_logprob": -0.11133765025311206, "compression_ratio": 1.5372340425531914, "no_speech_prob": 1.553495508233027e-06}, {"id": 599, "seek": 354890, "start": 3558.96, "end": 3560.52, "text": " each dimension.", "tokens": [50364, 407, 291, 393, 536, 437, 2314, 365, 257, 568, 87, 17, 11469, 12, 79, 858, 278, 11, 321, 917, 493, 7027, 1922, 295, 527, 2430, 763, 322, 50867, 50867, 1184, 10139, 13, 50945, 50945, 407, 321, 434, 516, 281, 917, 493, 365, 787, 472, 6555, 295, 264, 1230, 295, 2430, 763, 321, 1143, 281, 362, 13, 51253, 51253, 400, 300, 311, 767, 257, 665, 551, 11, 570, 498, 321, 1066, 322, 884, 45216, 11, 11469, 12, 79, 858, 11, 51563, 51563], "temperature": 0.0, "avg_logprob": -0.11133765025311206, "compression_ratio": 1.5372340425531914, "no_speech_prob": 1.553495508233027e-06}, {"id": 600, "seek": 354890, "start": 3560.52, "end": 3566.6800000000003, "text": " So we're going to end up with only one quarter of the number of activations we used to have.", "tokens": [50364, 407, 291, 393, 536, 437, 2314, 365, 257, 568, 87, 17, 11469, 12, 79, 858, 278, 11, 321, 917, 493, 7027, 1922, 295, 527, 2430, 763, 322, 50867, 50867, 1184, 10139, 13, 50945, 50945, 407, 321, 434, 516, 281, 917, 493, 365, 787, 472, 6555, 295, 264, 1230, 295, 2430, 763, 321, 1143, 281, 362, 13, 51253, 51253, 400, 300, 311, 767, 257, 665, 551, 11, 570, 498, 321, 1066, 322, 884, 45216, 11, 11469, 12, 79, 858, 11, 51563, 51563], "temperature": 0.0, "avg_logprob": -0.11133765025311206, "compression_ratio": 1.5372340425531914, "no_speech_prob": 1.553495508233027e-06}, {"id": 601, "seek": 354890, "start": 3566.6800000000003, "end": 3572.88, "text": " And that's actually a good thing, because if we keep on doing convolution, max-pull,", "tokens": [50364, 407, 291, 393, 536, 437, 2314, 365, 257, 568, 87, 17, 11469, 12, 79, 858, 278, 11, 321, 917, 493, 7027, 1922, 295, 527, 2430, 763, 322, 50867, 50867, 1184, 10139, 13, 50945, 50945, 407, 321, 434, 516, 281, 917, 493, 365, 787, 472, 6555, 295, 264, 1230, 295, 2430, 763, 321, 1143, 281, 362, 13, 51253, 51253, 400, 300, 311, 767, 257, 665, 551, 11, 570, 498, 321, 1066, 322, 884, 45216, 11, 11469, 12, 79, 858, 11, 51563, 51563], "temperature": 0.0, "avg_logprob": -0.11133765025311206, "compression_ratio": 1.5372340425531914, "no_speech_prob": 1.553495508233027e-06}, {"id": 602, "seek": 357288, "start": 3572.88, "end": 3579.1600000000003, "text": " convolution, max-pull, we're going to get fewer and fewer and fewer activations until", "tokens": [50364, 45216, 11, 11469, 12, 79, 858, 11, 321, 434, 516, 281, 483, 13366, 293, 13366, 293, 13366, 2430, 763, 1826, 50678, 50678, 4728, 11, 321, 603, 445, 362, 472, 1411, 11, 597, 307, 437, 321, 528, 13, 51006, 51006, 663, 311, 8659, 437, 321, 1143, 281, 360, 11, 457, 264, 661, 551, 286, 2835, 307, 321, 994, 380, 5646, 51320, 51320, 1066, 516, 1826, 456, 311, 787, 472, 1411, 13, 51446, 51446, 708, 321, 1143, 281, 550, 360, 307, 321, 1116, 1936, 584, 11, 1392, 11, 412, 512, 935, 321, 434, 516, 281, 747, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.10289625245697644, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.769399770841119e-06}, {"id": 603, "seek": 357288, "start": 3579.1600000000003, "end": 3585.7200000000003, "text": " eventually, we'll just have one left, which is what we want.", "tokens": [50364, 45216, 11, 11469, 12, 79, 858, 11, 321, 434, 516, 281, 483, 13366, 293, 13366, 293, 13366, 2430, 763, 1826, 50678, 50678, 4728, 11, 321, 603, 445, 362, 472, 1411, 11, 597, 307, 437, 321, 528, 13, 51006, 51006, 663, 311, 8659, 437, 321, 1143, 281, 360, 11, 457, 264, 661, 551, 286, 2835, 307, 321, 994, 380, 5646, 51320, 51320, 1066, 516, 1826, 456, 311, 787, 472, 1411, 13, 51446, 51446, 708, 321, 1143, 281, 550, 360, 307, 321, 1116, 1936, 584, 11, 1392, 11, 412, 512, 935, 321, 434, 516, 281, 747, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.10289625245697644, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.769399770841119e-06}, {"id": 604, "seek": 357288, "start": 3585.7200000000003, "end": 3592.0, "text": " That's effectively what we used to do, but the other thing I mentioned is we didn't normally", "tokens": [50364, 45216, 11, 11469, 12, 79, 858, 11, 321, 434, 516, 281, 483, 13366, 293, 13366, 293, 13366, 2430, 763, 1826, 50678, 50678, 4728, 11, 321, 603, 445, 362, 472, 1411, 11, 597, 307, 437, 321, 528, 13, 51006, 51006, 663, 311, 8659, 437, 321, 1143, 281, 360, 11, 457, 264, 661, 551, 286, 2835, 307, 321, 994, 380, 5646, 51320, 51320, 1066, 516, 1826, 456, 311, 787, 472, 1411, 13, 51446, 51446, 708, 321, 1143, 281, 550, 360, 307, 321, 1116, 1936, 584, 11, 1392, 11, 412, 512, 935, 321, 434, 516, 281, 747, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.10289625245697644, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.769399770841119e-06}, {"id": 605, "seek": 357288, "start": 3592.0, "end": 3594.52, "text": " keep going until there's only one left.", "tokens": [50364, 45216, 11, 11469, 12, 79, 858, 11, 321, 434, 516, 281, 483, 13366, 293, 13366, 293, 13366, 2430, 763, 1826, 50678, 50678, 4728, 11, 321, 603, 445, 362, 472, 1411, 11, 597, 307, 437, 321, 528, 13, 51006, 51006, 663, 311, 8659, 437, 321, 1143, 281, 360, 11, 457, 264, 661, 551, 286, 2835, 307, 321, 994, 380, 5646, 51320, 51320, 1066, 516, 1826, 456, 311, 787, 472, 1411, 13, 51446, 51446, 708, 321, 1143, 281, 550, 360, 307, 321, 1116, 1936, 584, 11, 1392, 11, 412, 512, 935, 321, 434, 516, 281, 747, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.10289625245697644, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.769399770841119e-06}, {"id": 606, "seek": 357288, "start": 3594.52, "end": 3599.4, "text": " What we used to then do is we'd basically say, okay, at some point we're going to take", "tokens": [50364, 45216, 11, 11469, 12, 79, 858, 11, 321, 434, 516, 281, 483, 13366, 293, 13366, 293, 13366, 2430, 763, 1826, 50678, 50678, 4728, 11, 321, 603, 445, 362, 472, 1411, 11, 597, 307, 437, 321, 528, 13, 51006, 51006, 663, 311, 8659, 437, 321, 1143, 281, 360, 11, 457, 264, 661, 551, 286, 2835, 307, 321, 994, 380, 5646, 51320, 51320, 1066, 516, 1826, 456, 311, 787, 472, 1411, 13, 51446, 51446, 708, 321, 1143, 281, 550, 360, 307, 321, 1116, 1936, 584, 11, 1392, 11, 412, 512, 935, 321, 434, 516, 281, 747, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.10289625245697644, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.769399770841119e-06}, {"id": 607, "seek": 359940, "start": 3599.4, "end": 3608.8, "text": " all of the activations that are left, and we're going to basically just do a dot product", "tokens": [50364, 439, 295, 264, 2430, 763, 300, 366, 1411, 11, 293, 321, 434, 516, 281, 1936, 445, 360, 257, 5893, 1674, 50834, 50834, 295, 729, 365, 257, 3840, 295, 31994, 11, 406, 382, 257, 45216, 11, 457, 445, 382, 257, 2710, 8213, 51106, 51106, 4583, 13, 51156, 51156, 400, 341, 307, 1219, 264, 18011, 4583, 13, 51302, 51302, 400, 550, 321, 576, 909, 552, 439, 493, 13, 51398, 51398], "temperature": 0.0, "avg_logprob": -0.08537678037370955, "compression_ratio": 1.526946107784431, "no_speech_prob": 1.2098640809199424e-06}, {"id": 608, "seek": 359940, "start": 3608.8, "end": 3614.2400000000002, "text": " of those with a bunch of coefficients, not as a convolution, but just as a normal linear", "tokens": [50364, 439, 295, 264, 2430, 763, 300, 366, 1411, 11, 293, 321, 434, 516, 281, 1936, 445, 360, 257, 5893, 1674, 50834, 50834, 295, 729, 365, 257, 3840, 295, 31994, 11, 406, 382, 257, 45216, 11, 457, 445, 382, 257, 2710, 8213, 51106, 51106, 4583, 13, 51156, 51156, 400, 341, 307, 1219, 264, 18011, 4583, 13, 51302, 51302, 400, 550, 321, 576, 909, 552, 439, 493, 13, 51398, 51398], "temperature": 0.0, "avg_logprob": -0.08537678037370955, "compression_ratio": 1.526946107784431, "no_speech_prob": 1.2098640809199424e-06}, {"id": 609, "seek": 359940, "start": 3614.2400000000002, "end": 3615.2400000000002, "text": " layer.", "tokens": [50364, 439, 295, 264, 2430, 763, 300, 366, 1411, 11, 293, 321, 434, 516, 281, 1936, 445, 360, 257, 5893, 1674, 50834, 50834, 295, 729, 365, 257, 3840, 295, 31994, 11, 406, 382, 257, 45216, 11, 457, 445, 382, 257, 2710, 8213, 51106, 51106, 4583, 13, 51156, 51156, 400, 341, 307, 1219, 264, 18011, 4583, 13, 51302, 51302, 400, 550, 321, 576, 909, 552, 439, 493, 13, 51398, 51398], "temperature": 0.0, "avg_logprob": -0.08537678037370955, "compression_ratio": 1.526946107784431, "no_speech_prob": 1.2098640809199424e-06}, {"id": 610, "seek": 359940, "start": 3615.2400000000002, "end": 3618.1600000000003, "text": " And this is called the dense layer.", "tokens": [50364, 439, 295, 264, 2430, 763, 300, 366, 1411, 11, 293, 321, 434, 516, 281, 1936, 445, 360, 257, 5893, 1674, 50834, 50834, 295, 729, 365, 257, 3840, 295, 31994, 11, 406, 382, 257, 45216, 11, 457, 445, 382, 257, 2710, 8213, 51106, 51106, 4583, 13, 51156, 51156, 400, 341, 307, 1219, 264, 18011, 4583, 13, 51302, 51302, 400, 550, 321, 576, 909, 552, 439, 493, 13, 51398, 51398], "temperature": 0.0, "avg_logprob": -0.08537678037370955, "compression_ratio": 1.526946107784431, "no_speech_prob": 1.2098640809199424e-06}, {"id": 611, "seek": 359940, "start": 3618.1600000000003, "end": 3620.08, "text": " And then we would add them all up.", "tokens": [50364, 439, 295, 264, 2430, 763, 300, 366, 1411, 11, 293, 321, 434, 516, 281, 1936, 445, 360, 257, 5893, 1674, 50834, 50834, 295, 729, 365, 257, 3840, 295, 31994, 11, 406, 382, 257, 45216, 11, 457, 445, 382, 257, 2710, 8213, 51106, 51106, 4583, 13, 51156, 51156, 400, 341, 307, 1219, 264, 18011, 4583, 13, 51302, 51302, 400, 550, 321, 576, 909, 552, 439, 493, 13, 51398, 51398], "temperature": 0.0, "avg_logprob": -0.08537678037370955, "compression_ratio": 1.526946107784431, "no_speech_prob": 1.2098640809199424e-06}, {"id": 612, "seek": 362008, "start": 3620.08, "end": 3631.12, "text": " So we'd basically end up with our final big dot product of all of the max-pulled activations", "tokens": [50364, 407, 321, 1116, 1936, 917, 493, 365, 527, 2572, 955, 5893, 1674, 295, 439, 295, 264, 11469, 12, 79, 858, 292, 2430, 763, 50916, 50916, 538, 439, 295, 264, 17443, 13, 51012, 51012, 400, 321, 1116, 360, 300, 337, 1184, 2269, 13, 51102, 51102, 400, 370, 300, 576, 976, 505, 527, 2572, 24433, 13, 51279, 51279, 400, 382, 286, 584, 510, 11, 376, 45, 19756, 576, 767, 362, 1266, 2430, 763, 11, 370, 291, 1116, 362, 257, 4994, 992, 51514, 51514, 295, 17443, 337, 1184, 295, 264, 27011, 291, 434, 32884, 11, 293, 550, 2787, 41167, 934, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12337840182109944, "compression_ratio": 1.6742081447963801, "no_speech_prob": 4.247029323778406e-07}, {"id": 613, "seek": 362008, "start": 3631.12, "end": 3633.04, "text": " by all of the weights.", "tokens": [50364, 407, 321, 1116, 1936, 917, 493, 365, 527, 2572, 955, 5893, 1674, 295, 439, 295, 264, 11469, 12, 79, 858, 292, 2430, 763, 50916, 50916, 538, 439, 295, 264, 17443, 13, 51012, 51012, 400, 321, 1116, 360, 300, 337, 1184, 2269, 13, 51102, 51102, 400, 370, 300, 576, 976, 505, 527, 2572, 24433, 13, 51279, 51279, 400, 382, 286, 584, 510, 11, 376, 45, 19756, 576, 767, 362, 1266, 2430, 763, 11, 370, 291, 1116, 362, 257, 4994, 992, 51514, 51514, 295, 17443, 337, 1184, 295, 264, 27011, 291, 434, 32884, 11, 293, 550, 2787, 41167, 934, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12337840182109944, "compression_ratio": 1.6742081447963801, "no_speech_prob": 4.247029323778406e-07}, {"id": 614, "seek": 362008, "start": 3633.04, "end": 3634.84, "text": " And we'd do that for each channel.", "tokens": [50364, 407, 321, 1116, 1936, 917, 493, 365, 527, 2572, 955, 5893, 1674, 295, 439, 295, 264, 11469, 12, 79, 858, 292, 2430, 763, 50916, 50916, 538, 439, 295, 264, 17443, 13, 51012, 51012, 400, 321, 1116, 360, 300, 337, 1184, 2269, 13, 51102, 51102, 400, 370, 300, 576, 976, 505, 527, 2572, 24433, 13, 51279, 51279, 400, 382, 286, 584, 510, 11, 376, 45, 19756, 576, 767, 362, 1266, 2430, 763, 11, 370, 291, 1116, 362, 257, 4994, 992, 51514, 51514, 295, 17443, 337, 1184, 295, 264, 27011, 291, 434, 32884, 11, 293, 550, 2787, 41167, 934, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12337840182109944, "compression_ratio": 1.6742081447963801, "no_speech_prob": 4.247029323778406e-07}, {"id": 615, "seek": 362008, "start": 3634.84, "end": 3638.38, "text": " And so that would give us our final activation.", "tokens": [50364, 407, 321, 1116, 1936, 917, 493, 365, 527, 2572, 955, 5893, 1674, 295, 439, 295, 264, 11469, 12, 79, 858, 292, 2430, 763, 50916, 50916, 538, 439, 295, 264, 17443, 13, 51012, 51012, 400, 321, 1116, 360, 300, 337, 1184, 2269, 13, 51102, 51102, 400, 370, 300, 576, 976, 505, 527, 2572, 24433, 13, 51279, 51279, 400, 382, 286, 584, 510, 11, 376, 45, 19756, 576, 767, 362, 1266, 2430, 763, 11, 370, 291, 1116, 362, 257, 4994, 992, 51514, 51514, 295, 17443, 337, 1184, 295, 264, 27011, 291, 434, 32884, 11, 293, 550, 2787, 41167, 934, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12337840182109944, "compression_ratio": 1.6742081447963801, "no_speech_prob": 4.247029323778406e-07}, {"id": 616, "seek": 362008, "start": 3638.38, "end": 3643.08, "text": " And as I say here, MNIST would actually have 10 activations, so you'd have a separate set", "tokens": [50364, 407, 321, 1116, 1936, 917, 493, 365, 527, 2572, 955, 5893, 1674, 295, 439, 295, 264, 11469, 12, 79, 858, 292, 2430, 763, 50916, 50916, 538, 439, 295, 264, 17443, 13, 51012, 51012, 400, 321, 1116, 360, 300, 337, 1184, 2269, 13, 51102, 51102, 400, 370, 300, 576, 976, 505, 527, 2572, 24433, 13, 51279, 51279, 400, 382, 286, 584, 510, 11, 376, 45, 19756, 576, 767, 362, 1266, 2430, 763, 11, 370, 291, 1116, 362, 257, 4994, 992, 51514, 51514, 295, 17443, 337, 1184, 295, 264, 27011, 291, 434, 32884, 11, 293, 550, 2787, 41167, 934, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12337840182109944, "compression_ratio": 1.6742081447963801, "no_speech_prob": 4.247029323778406e-07}, {"id": 617, "seek": 362008, "start": 3643.08, "end": 3648.08, "text": " of weights for each of the digits you're predicting, and then softmax after that.", "tokens": [50364, 407, 321, 1116, 1936, 917, 493, 365, 527, 2572, 955, 5893, 1674, 295, 439, 295, 264, 11469, 12, 79, 858, 292, 2430, 763, 50916, 50916, 538, 439, 295, 264, 17443, 13, 51012, 51012, 400, 321, 1116, 360, 300, 337, 1184, 2269, 13, 51102, 51102, 400, 370, 300, 576, 976, 505, 527, 2572, 24433, 13, 51279, 51279, 400, 382, 286, 584, 510, 11, 376, 45, 19756, 576, 767, 362, 1266, 2430, 763, 11, 370, 291, 1116, 362, 257, 4994, 992, 51514, 51514, 295, 17443, 337, 1184, 295, 264, 27011, 291, 434, 32884, 11, 293, 550, 2787, 41167, 934, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12337840182109944, "compression_ratio": 1.6742081447963801, "no_speech_prob": 4.247029323778406e-07}, {"id": 618, "seek": 364808, "start": 3648.08, "end": 3653.56, "text": " Okay, nowadays we do things very slightly differently.", "tokens": [50364, 1033, 11, 13434, 321, 360, 721, 588, 4748, 7614, 13, 50638, 50638, 28908, 321, 5646, 500, 380, 362, 11469, 12, 79, 858, 7914, 13, 50781, 50781, 583, 2602, 437, 321, 5646, 360, 307, 562, 321, 360, 527, 21169, 4910, 11, 411, 341, 472, 510, 11, 51257, 51257, 321, 500, 380, 5646, 11, 718, 311, 352, 646, 281, 383, 13, 407, 562, 286, 352, 472, 281, 264, 558, 11, 370, 4362, 321, 434, 51662, 51662, 2891, 294, 2815, 7738, 460, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1530225504012335, "compression_ratio": 1.5404040404040404, "no_speech_prob": 3.1875624699750915e-06}, {"id": 619, "seek": 364808, "start": 3653.56, "end": 3656.42, "text": " Nowadays we normally don't have max-pull layers.", "tokens": [50364, 1033, 11, 13434, 321, 360, 721, 588, 4748, 7614, 13, 50638, 50638, 28908, 321, 5646, 500, 380, 362, 11469, 12, 79, 858, 7914, 13, 50781, 50781, 583, 2602, 437, 321, 5646, 360, 307, 562, 321, 360, 527, 21169, 4910, 11, 411, 341, 472, 510, 11, 51257, 51257, 321, 500, 380, 5646, 11, 718, 311, 352, 646, 281, 383, 13, 407, 562, 286, 352, 472, 281, 264, 558, 11, 370, 4362, 321, 434, 51662, 51662, 2891, 294, 2815, 7738, 460, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1530225504012335, "compression_ratio": 1.5404040404040404, "no_speech_prob": 3.1875624699750915e-06}, {"id": 620, "seek": 364808, "start": 3656.42, "end": 3665.94, "text": " But instead what we normally do is when we do our sliding window, like this one here,", "tokens": [50364, 1033, 11, 13434, 321, 360, 721, 588, 4748, 7614, 13, 50638, 50638, 28908, 321, 5646, 500, 380, 362, 11469, 12, 79, 858, 7914, 13, 50781, 50781, 583, 2602, 437, 321, 5646, 360, 307, 562, 321, 360, 527, 21169, 4910, 11, 411, 341, 472, 510, 11, 51257, 51257, 321, 500, 380, 5646, 11, 718, 311, 352, 646, 281, 383, 13, 407, 562, 286, 352, 472, 281, 264, 558, 11, 370, 4362, 321, 434, 51662, 51662, 2891, 294, 2815, 7738, 460, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1530225504012335, "compression_ratio": 1.5404040404040404, "no_speech_prob": 3.1875624699750915e-06}, {"id": 621, "seek": 364808, "start": 3665.94, "end": 3674.04, "text": " we don't normally, let's go back to C. So when I go one to the right, so currently we're", "tokens": [50364, 1033, 11, 13434, 321, 360, 721, 588, 4748, 7614, 13, 50638, 50638, 28908, 321, 5646, 500, 380, 362, 11469, 12, 79, 858, 7914, 13, 50781, 50781, 583, 2602, 437, 321, 5646, 360, 307, 562, 321, 360, 527, 21169, 4910, 11, 411, 341, 472, 510, 11, 51257, 51257, 321, 500, 380, 5646, 11, 718, 311, 352, 646, 281, 383, 13, 407, 562, 286, 352, 472, 281, 264, 558, 11, 370, 4362, 321, 434, 51662, 51662, 2891, 294, 2815, 7738, 460, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1530225504012335, "compression_ratio": 1.5404040404040404, "no_speech_prob": 3.1875624699750915e-06}, {"id": 622, "seek": 364808, "start": 3674.04, "end": 3677.08, "text": " starting in cell column G.", "tokens": [50364, 1033, 11, 13434, 321, 360, 721, 588, 4748, 7614, 13, 50638, 50638, 28908, 321, 5646, 500, 380, 362, 11469, 12, 79, 858, 7914, 13, 50781, 50781, 583, 2602, 437, 321, 5646, 360, 307, 562, 321, 360, 527, 21169, 4910, 11, 411, 341, 472, 510, 11, 51257, 51257, 321, 500, 380, 5646, 11, 718, 311, 352, 646, 281, 383, 13, 407, 562, 286, 352, 472, 281, 264, 558, 11, 370, 4362, 321, 434, 51662, 51662, 2891, 294, 2815, 7738, 460, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1530225504012335, "compression_ratio": 1.5404040404040404, "no_speech_prob": 3.1875624699750915e-06}, {"id": 623, "seek": 367708, "start": 3677.08, "end": 3682.08, "text": " If I go one to the right, the next one is column H. And if I go one to the right, the", "tokens": [50364, 759, 286, 352, 472, 281, 264, 558, 11, 264, 958, 472, 307, 7738, 389, 13, 400, 498, 286, 352, 472, 281, 264, 558, 11, 264, 50614, 50614, 958, 472, 3719, 294, 7738, 286, 13, 50698, 50698, 407, 291, 393, 536, 309, 311, 21169, 264, 4910, 633, 1045, 538, 1045, 13, 50922, 50922, 28908, 437, 321, 3928, 281, 360, 2602, 307, 321, 5101, 10023, 472, 13, 51106, 51106, 407, 321, 576, 5646, 787, 574, 412, 633, 1150, 13, 51280, 51280, 407, 321, 576, 11, 934, 884, 7738, 286, 11, 321, 576, 10023, 13766, 508, 293, 321, 1116, 352, 2997, 281, 7738, 51558, 51558, 591, 13, 400, 300, 311, 1219, 257, 1056, 482, 732, 45216, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12496637893935382, "compression_ratio": 1.7881355932203389, "no_speech_prob": 5.285512543196091e-07}, {"id": 624, "seek": 367708, "start": 3682.08, "end": 3683.7599999999998, "text": " next one starts in column I.", "tokens": [50364, 759, 286, 352, 472, 281, 264, 558, 11, 264, 958, 472, 307, 7738, 389, 13, 400, 498, 286, 352, 472, 281, 264, 558, 11, 264, 50614, 50614, 958, 472, 3719, 294, 7738, 286, 13, 50698, 50698, 407, 291, 393, 536, 309, 311, 21169, 264, 4910, 633, 1045, 538, 1045, 13, 50922, 50922, 28908, 437, 321, 3928, 281, 360, 2602, 307, 321, 5101, 10023, 472, 13, 51106, 51106, 407, 321, 576, 5646, 787, 574, 412, 633, 1150, 13, 51280, 51280, 407, 321, 576, 11, 934, 884, 7738, 286, 11, 321, 576, 10023, 13766, 508, 293, 321, 1116, 352, 2997, 281, 7738, 51558, 51558, 591, 13, 400, 300, 311, 1219, 257, 1056, 482, 732, 45216, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12496637893935382, "compression_ratio": 1.7881355932203389, "no_speech_prob": 5.285512543196091e-07}, {"id": 625, "seek": 367708, "start": 3683.7599999999998, "end": 3688.24, "text": " So you can see it's sliding the window every three by three.", "tokens": [50364, 759, 286, 352, 472, 281, 264, 558, 11, 264, 958, 472, 307, 7738, 389, 13, 400, 498, 286, 352, 472, 281, 264, 558, 11, 264, 50614, 50614, 958, 472, 3719, 294, 7738, 286, 13, 50698, 50698, 407, 291, 393, 536, 309, 311, 21169, 264, 4910, 633, 1045, 538, 1045, 13, 50922, 50922, 28908, 437, 321, 3928, 281, 360, 2602, 307, 321, 5101, 10023, 472, 13, 51106, 51106, 407, 321, 576, 5646, 787, 574, 412, 633, 1150, 13, 51280, 51280, 407, 321, 576, 11, 934, 884, 7738, 286, 11, 321, 576, 10023, 13766, 508, 293, 321, 1116, 352, 2997, 281, 7738, 51558, 51558, 591, 13, 400, 300, 311, 1219, 257, 1056, 482, 732, 45216, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12496637893935382, "compression_ratio": 1.7881355932203389, "no_speech_prob": 5.285512543196091e-07}, {"id": 626, "seek": 367708, "start": 3688.24, "end": 3691.92, "text": " Nowadays what we tend to do instead is we generally skip one.", "tokens": [50364, 759, 286, 352, 472, 281, 264, 558, 11, 264, 958, 472, 307, 7738, 389, 13, 400, 498, 286, 352, 472, 281, 264, 558, 11, 264, 50614, 50614, 958, 472, 3719, 294, 7738, 286, 13, 50698, 50698, 407, 291, 393, 536, 309, 311, 21169, 264, 4910, 633, 1045, 538, 1045, 13, 50922, 50922, 28908, 437, 321, 3928, 281, 360, 2602, 307, 321, 5101, 10023, 472, 13, 51106, 51106, 407, 321, 576, 5646, 787, 574, 412, 633, 1150, 13, 51280, 51280, 407, 321, 576, 11, 934, 884, 7738, 286, 11, 321, 576, 10023, 13766, 508, 293, 321, 1116, 352, 2997, 281, 7738, 51558, 51558, 591, 13, 400, 300, 311, 1219, 257, 1056, 482, 732, 45216, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12496637893935382, "compression_ratio": 1.7881355932203389, "no_speech_prob": 5.285512543196091e-07}, {"id": 627, "seek": 367708, "start": 3691.92, "end": 3695.4, "text": " So we would normally only look at every second.", "tokens": [50364, 759, 286, 352, 472, 281, 264, 558, 11, 264, 958, 472, 307, 7738, 389, 13, 400, 498, 286, 352, 472, 281, 264, 558, 11, 264, 50614, 50614, 958, 472, 3719, 294, 7738, 286, 13, 50698, 50698, 407, 291, 393, 536, 309, 311, 21169, 264, 4910, 633, 1045, 538, 1045, 13, 50922, 50922, 28908, 437, 321, 3928, 281, 360, 2602, 307, 321, 5101, 10023, 472, 13, 51106, 51106, 407, 321, 576, 5646, 787, 574, 412, 633, 1150, 13, 51280, 51280, 407, 321, 576, 11, 934, 884, 7738, 286, 11, 321, 576, 10023, 13766, 508, 293, 321, 1116, 352, 2997, 281, 7738, 51558, 51558, 591, 13, 400, 300, 311, 1219, 257, 1056, 482, 732, 45216, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12496637893935382, "compression_ratio": 1.7881355932203389, "no_speech_prob": 5.285512543196091e-07}, {"id": 628, "seek": 367708, "start": 3695.4, "end": 3700.96, "text": " So we would, after doing column I, we would skip columns J and we'd go straight to column", "tokens": [50364, 759, 286, 352, 472, 281, 264, 558, 11, 264, 958, 472, 307, 7738, 389, 13, 400, 498, 286, 352, 472, 281, 264, 558, 11, 264, 50614, 50614, 958, 472, 3719, 294, 7738, 286, 13, 50698, 50698, 407, 291, 393, 536, 309, 311, 21169, 264, 4910, 633, 1045, 538, 1045, 13, 50922, 50922, 28908, 437, 321, 3928, 281, 360, 2602, 307, 321, 5101, 10023, 472, 13, 51106, 51106, 407, 321, 576, 5646, 787, 574, 412, 633, 1150, 13, 51280, 51280, 407, 321, 576, 11, 934, 884, 7738, 286, 11, 321, 576, 10023, 13766, 508, 293, 321, 1116, 352, 2997, 281, 7738, 51558, 51558, 591, 13, 400, 300, 311, 1219, 257, 1056, 482, 732, 45216, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12496637893935382, "compression_ratio": 1.7881355932203389, "no_speech_prob": 5.285512543196091e-07}, {"id": 629, "seek": 367708, "start": 3700.96, "end": 3704.64, "text": " K. And that's called a stride two convolution.", "tokens": [50364, 759, 286, 352, 472, 281, 264, 558, 11, 264, 958, 472, 307, 7738, 389, 13, 400, 498, 286, 352, 472, 281, 264, 558, 11, 264, 50614, 50614, 958, 472, 3719, 294, 7738, 286, 13, 50698, 50698, 407, 291, 393, 536, 309, 311, 21169, 264, 4910, 633, 1045, 538, 1045, 13, 50922, 50922, 28908, 437, 321, 3928, 281, 360, 2602, 307, 321, 5101, 10023, 472, 13, 51106, 51106, 407, 321, 576, 5646, 787, 574, 412, 633, 1150, 13, 51280, 51280, 407, 321, 576, 11, 934, 884, 7738, 286, 11, 321, 576, 10023, 13766, 508, 293, 321, 1116, 352, 2997, 281, 7738, 51558, 51558, 591, 13, 400, 300, 311, 1219, 257, 1056, 482, 732, 45216, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12496637893935382, "compression_ratio": 1.7881355932203389, "no_speech_prob": 5.285512543196091e-07}, {"id": 630, "seek": 370464, "start": 3704.64, "end": 3707.24, "text": " We do that both across the rows and down the columns.", "tokens": [50364, 492, 360, 300, 1293, 2108, 264, 13241, 293, 760, 264, 13766, 13, 50494, 50494, 400, 437, 300, 1355, 307, 633, 565, 321, 360, 257, 45216, 11, 321, 5407, 527, 4942, 733, 50730, 50730, 295, 4111, 2744, 11, 10748, 2744, 11, 538, 732, 322, 1184, 10298, 13, 51056, 51056, 407, 309, 18081, 309, 538, 1451, 294, 3217, 13, 51222, 51222, 407, 300, 311, 1936, 2602, 295, 884, 11469, 12, 79, 858, 278, 13, 51463, 51463, 400, 550, 264, 661, 551, 300, 321, 360, 7614, 307, 13434, 321, 500, 380, 5646, 362, 257, 2167, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.07160288095474243, "compression_ratio": 1.6205357142857142, "no_speech_prob": 1.1189416682100273e-06}, {"id": 631, "seek": 370464, "start": 3707.24, "end": 3711.96, "text": " And what that means is every time we do a convolution, we reduce our effective kind", "tokens": [50364, 492, 360, 300, 1293, 2108, 264, 13241, 293, 760, 264, 13766, 13, 50494, 50494, 400, 437, 300, 1355, 307, 633, 565, 321, 360, 257, 45216, 11, 321, 5407, 527, 4942, 733, 50730, 50730, 295, 4111, 2744, 11, 10748, 2744, 11, 538, 732, 322, 1184, 10298, 13, 51056, 51056, 407, 309, 18081, 309, 538, 1451, 294, 3217, 13, 51222, 51222, 407, 300, 311, 1936, 2602, 295, 884, 11469, 12, 79, 858, 278, 13, 51463, 51463, 400, 550, 264, 661, 551, 300, 321, 360, 7614, 307, 13434, 321, 500, 380, 5646, 362, 257, 2167, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.07160288095474243, "compression_ratio": 1.6205357142857142, "no_speech_prob": 1.1189416682100273e-06}, {"id": 632, "seek": 370464, "start": 3711.96, "end": 3718.48, "text": " of feature size, grid size, by two on each axis.", "tokens": [50364, 492, 360, 300, 1293, 2108, 264, 13241, 293, 760, 264, 13766, 13, 50494, 50494, 400, 437, 300, 1355, 307, 633, 565, 321, 360, 257, 45216, 11, 321, 5407, 527, 4942, 733, 50730, 50730, 295, 4111, 2744, 11, 10748, 2744, 11, 538, 732, 322, 1184, 10298, 13, 51056, 51056, 407, 309, 18081, 309, 538, 1451, 294, 3217, 13, 51222, 51222, 407, 300, 311, 1936, 2602, 295, 884, 11469, 12, 79, 858, 278, 13, 51463, 51463, 400, 550, 264, 661, 551, 300, 321, 360, 7614, 307, 13434, 321, 500, 380, 5646, 362, 257, 2167, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.07160288095474243, "compression_ratio": 1.6205357142857142, "no_speech_prob": 1.1189416682100273e-06}, {"id": 633, "seek": 370464, "start": 3718.48, "end": 3721.7999999999997, "text": " So it reduces it by four in total.", "tokens": [50364, 492, 360, 300, 1293, 2108, 264, 13241, 293, 760, 264, 13766, 13, 50494, 50494, 400, 437, 300, 1355, 307, 633, 565, 321, 360, 257, 45216, 11, 321, 5407, 527, 4942, 733, 50730, 50730, 295, 4111, 2744, 11, 10748, 2744, 11, 538, 732, 322, 1184, 10298, 13, 51056, 51056, 407, 309, 18081, 309, 538, 1451, 294, 3217, 13, 51222, 51222, 407, 300, 311, 1936, 2602, 295, 884, 11469, 12, 79, 858, 278, 13, 51463, 51463, 400, 550, 264, 661, 551, 300, 321, 360, 7614, 307, 13434, 321, 500, 380, 5646, 362, 257, 2167, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.07160288095474243, "compression_ratio": 1.6205357142857142, "no_speech_prob": 1.1189416682100273e-06}, {"id": 634, "seek": 370464, "start": 3721.7999999999997, "end": 3726.62, "text": " So that's basically instead of doing max-pulling.", "tokens": [50364, 492, 360, 300, 1293, 2108, 264, 13241, 293, 760, 264, 13766, 13, 50494, 50494, 400, 437, 300, 1355, 307, 633, 565, 321, 360, 257, 45216, 11, 321, 5407, 527, 4942, 733, 50730, 50730, 295, 4111, 2744, 11, 10748, 2744, 11, 538, 732, 322, 1184, 10298, 13, 51056, 51056, 407, 309, 18081, 309, 538, 1451, 294, 3217, 13, 51222, 51222, 407, 300, 311, 1936, 2602, 295, 884, 11469, 12, 79, 858, 278, 13, 51463, 51463, 400, 550, 264, 661, 551, 300, 321, 360, 7614, 307, 13434, 321, 500, 380, 5646, 362, 257, 2167, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.07160288095474243, "compression_ratio": 1.6205357142857142, "no_speech_prob": 1.1189416682100273e-06}, {"id": 635, "seek": 370464, "start": 3726.62, "end": 3733.8799999999997, "text": " And then the other thing that we do differently is nowadays we don't normally have a single", "tokens": [50364, 492, 360, 300, 1293, 2108, 264, 13241, 293, 760, 264, 13766, 13, 50494, 50494, 400, 437, 300, 1355, 307, 633, 565, 321, 360, 257, 45216, 11, 321, 5407, 527, 4942, 733, 50730, 50730, 295, 4111, 2744, 11, 10748, 2744, 11, 538, 732, 322, 1184, 10298, 13, 51056, 51056, 407, 309, 18081, 309, 538, 1451, 294, 3217, 13, 51222, 51222, 407, 300, 311, 1936, 2602, 295, 884, 11469, 12, 79, 858, 278, 13, 51463, 51463, 400, 550, 264, 661, 551, 300, 321, 360, 7614, 307, 13434, 321, 500, 380, 5646, 362, 257, 2167, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.07160288095474243, "compression_ratio": 1.6205357142857142, "no_speech_prob": 1.1189416682100273e-06}, {"id": 636, "seek": 373388, "start": 3733.88, "end": 3737.6800000000003, "text": " dense layer at the end, a single matrix multiply at the end.", "tokens": [50364, 18011, 4583, 412, 264, 917, 11, 257, 2167, 8141, 12972, 412, 264, 917, 13, 50554, 50554, 583, 2602, 437, 321, 360, 11, 321, 5101, 1066, 884, 1056, 482, 732, 3754, 15892, 13, 50720, 50720, 407, 1184, 472, 311, 516, 281, 5407, 264, 10748, 2744, 538, 732, 538, 732, 13, 50980, 50980, 492, 1066, 516, 760, 1826, 321, 600, 658, 466, 257, 3407, 538, 3407, 10748, 13, 51246, 51246, 400, 550, 321, 360, 257, 2167, 8407, 412, 264, 917, 13, 51362, 51362, 400, 321, 500, 380, 5646, 360, 11469, 12, 79, 858, 13434, 13, 51494, 51494, 7156, 321, 360, 364, 4274, 2235, 13, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.1263556030561339, "compression_ratio": 1.6968325791855203, "no_speech_prob": 2.33206856137258e-06}, {"id": 637, "seek": 373388, "start": 3737.6800000000003, "end": 3741.0, "text": " But instead what we do, we generally keep doing stride two convolutions.", "tokens": [50364, 18011, 4583, 412, 264, 917, 11, 257, 2167, 8141, 12972, 412, 264, 917, 13, 50554, 50554, 583, 2602, 437, 321, 360, 11, 321, 5101, 1066, 884, 1056, 482, 732, 3754, 15892, 13, 50720, 50720, 407, 1184, 472, 311, 516, 281, 5407, 264, 10748, 2744, 538, 732, 538, 732, 13, 50980, 50980, 492, 1066, 516, 760, 1826, 321, 600, 658, 466, 257, 3407, 538, 3407, 10748, 13, 51246, 51246, 400, 550, 321, 360, 257, 2167, 8407, 412, 264, 917, 13, 51362, 51362, 400, 321, 500, 380, 5646, 360, 11469, 12, 79, 858, 13434, 13, 51494, 51494, 7156, 321, 360, 364, 4274, 2235, 13, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.1263556030561339, "compression_ratio": 1.6968325791855203, "no_speech_prob": 2.33206856137258e-06}, {"id": 638, "seek": 373388, "start": 3741.0, "end": 3746.2000000000003, "text": " So each one's going to reduce the grid size by two by two.", "tokens": [50364, 18011, 4583, 412, 264, 917, 11, 257, 2167, 8141, 12972, 412, 264, 917, 13, 50554, 50554, 583, 2602, 437, 321, 360, 11, 321, 5101, 1066, 884, 1056, 482, 732, 3754, 15892, 13, 50720, 50720, 407, 1184, 472, 311, 516, 281, 5407, 264, 10748, 2744, 538, 732, 538, 732, 13, 50980, 50980, 492, 1066, 516, 760, 1826, 321, 600, 658, 466, 257, 3407, 538, 3407, 10748, 13, 51246, 51246, 400, 550, 321, 360, 257, 2167, 8407, 412, 264, 917, 13, 51362, 51362, 400, 321, 500, 380, 5646, 360, 11469, 12, 79, 858, 13434, 13, 51494, 51494, 7156, 321, 360, 364, 4274, 2235, 13, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.1263556030561339, "compression_ratio": 1.6968325791855203, "no_speech_prob": 2.33206856137258e-06}, {"id": 639, "seek": 373388, "start": 3746.2000000000003, "end": 3751.52, "text": " We keep going down until we've got about a seven by seven grid.", "tokens": [50364, 18011, 4583, 412, 264, 917, 11, 257, 2167, 8141, 12972, 412, 264, 917, 13, 50554, 50554, 583, 2602, 437, 321, 360, 11, 321, 5101, 1066, 884, 1056, 482, 732, 3754, 15892, 13, 50720, 50720, 407, 1184, 472, 311, 516, 281, 5407, 264, 10748, 2744, 538, 732, 538, 732, 13, 50980, 50980, 492, 1066, 516, 760, 1826, 321, 600, 658, 466, 257, 3407, 538, 3407, 10748, 13, 51246, 51246, 400, 550, 321, 360, 257, 2167, 8407, 412, 264, 917, 13, 51362, 51362, 400, 321, 500, 380, 5646, 360, 11469, 12, 79, 858, 13434, 13, 51494, 51494, 7156, 321, 360, 364, 4274, 2235, 13, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.1263556030561339, "compression_ratio": 1.6968325791855203, "no_speech_prob": 2.33206856137258e-06}, {"id": 640, "seek": 373388, "start": 3751.52, "end": 3753.84, "text": " And then we do a single pulling at the end.", "tokens": [50364, 18011, 4583, 412, 264, 917, 11, 257, 2167, 8141, 12972, 412, 264, 917, 13, 50554, 50554, 583, 2602, 437, 321, 360, 11, 321, 5101, 1066, 884, 1056, 482, 732, 3754, 15892, 13, 50720, 50720, 407, 1184, 472, 311, 516, 281, 5407, 264, 10748, 2744, 538, 732, 538, 732, 13, 50980, 50980, 492, 1066, 516, 760, 1826, 321, 600, 658, 466, 257, 3407, 538, 3407, 10748, 13, 51246, 51246, 400, 550, 321, 360, 257, 2167, 8407, 412, 264, 917, 13, 51362, 51362, 400, 321, 500, 380, 5646, 360, 11469, 12, 79, 858, 13434, 13, 51494, 51494, 7156, 321, 360, 364, 4274, 2235, 13, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.1263556030561339, "compression_ratio": 1.6968325791855203, "no_speech_prob": 2.33206856137258e-06}, {"id": 641, "seek": 373388, "start": 3753.84, "end": 3756.48, "text": " And we don't normally do max-pull nowadays.", "tokens": [50364, 18011, 4583, 412, 264, 917, 11, 257, 2167, 8141, 12972, 412, 264, 917, 13, 50554, 50554, 583, 2602, 437, 321, 360, 11, 321, 5101, 1066, 884, 1056, 482, 732, 3754, 15892, 13, 50720, 50720, 407, 1184, 472, 311, 516, 281, 5407, 264, 10748, 2744, 538, 732, 538, 732, 13, 50980, 50980, 492, 1066, 516, 760, 1826, 321, 600, 658, 466, 257, 3407, 538, 3407, 10748, 13, 51246, 51246, 400, 550, 321, 360, 257, 2167, 8407, 412, 264, 917, 13, 51362, 51362, 400, 321, 500, 380, 5646, 360, 11469, 12, 79, 858, 13434, 13, 51494, 51494, 7156, 321, 360, 364, 4274, 2235, 13, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.1263556030561339, "compression_ratio": 1.6968325791855203, "no_speech_prob": 2.33206856137258e-06}, {"id": 642, "seek": 373388, "start": 3756.48, "end": 3757.94, "text": " Instead we do an average pull.", "tokens": [50364, 18011, 4583, 412, 264, 917, 11, 257, 2167, 8141, 12972, 412, 264, 917, 13, 50554, 50554, 583, 2602, 437, 321, 360, 11, 321, 5101, 1066, 884, 1056, 482, 732, 3754, 15892, 13, 50720, 50720, 407, 1184, 472, 311, 516, 281, 5407, 264, 10748, 2744, 538, 732, 538, 732, 13, 50980, 50980, 492, 1066, 516, 760, 1826, 321, 600, 658, 466, 257, 3407, 538, 3407, 10748, 13, 51246, 51246, 400, 550, 321, 360, 257, 2167, 8407, 412, 264, 917, 13, 51362, 51362, 400, 321, 500, 380, 5646, 360, 11469, 12, 79, 858, 13434, 13, 51494, 51494, 7156, 321, 360, 364, 4274, 2235, 13, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.1263556030561339, "compression_ratio": 1.6968325791855203, "no_speech_prob": 2.33206856137258e-06}, {"id": 643, "seek": 375794, "start": 3757.94, "end": 3767.78, "text": " So we average the activations of each one of the seven by seven features.", "tokens": [50364, 407, 321, 4274, 264, 2430, 763, 295, 1184, 472, 295, 264, 3407, 538, 3407, 4122, 13, 50856, 50856, 639, 307, 767, 1596, 1021, 281, 458, 570, 498, 291, 519, 466, 437, 300, 1355, 11, 309, 1355, 51131, 51131, 300, 746, 411, 364, 29903, 31890, 3758, 3256, 25712, 307, 516, 281, 917, 493, 365, 257, 3407, 538, 51490, 51490, 3407, 10748, 13, 51540, 51540, 961, 311, 584, 309, 311, 1382, 281, 584, 11, 307, 341, 257, 6155, 30, 51664, 51664, 400, 294, 1184, 295, 264, 3166, 295, 264, 3407, 538, 3407, 10748, 11, 309, 311, 1936, 1566, 11, 307, 456, 257, 6155, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.0952125730968657, "compression_ratio": 1.7161016949152543, "no_speech_prob": 2.7852692596752604e-07}, {"id": 644, "seek": 375794, "start": 3767.78, "end": 3773.28, "text": " This is actually quite important to know because if you think about what that means, it means", "tokens": [50364, 407, 321, 4274, 264, 2430, 763, 295, 1184, 472, 295, 264, 3407, 538, 3407, 4122, 13, 50856, 50856, 639, 307, 767, 1596, 1021, 281, 458, 570, 498, 291, 519, 466, 437, 300, 1355, 11, 309, 1355, 51131, 51131, 300, 746, 411, 364, 29903, 31890, 3758, 3256, 25712, 307, 516, 281, 917, 493, 365, 257, 3407, 538, 51490, 51490, 3407, 10748, 13, 51540, 51540, 961, 311, 584, 309, 311, 1382, 281, 584, 11, 307, 341, 257, 6155, 30, 51664, 51664, 400, 294, 1184, 295, 264, 3166, 295, 264, 3407, 538, 3407, 10748, 11, 309, 311, 1936, 1566, 11, 307, 456, 257, 6155, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.0952125730968657, "compression_ratio": 1.7161016949152543, "no_speech_prob": 2.7852692596752604e-07}, {"id": 645, "seek": 375794, "start": 3773.28, "end": 3780.46, "text": " that something like an ImageNet style image detector is going to end up with a seven by", "tokens": [50364, 407, 321, 4274, 264, 2430, 763, 295, 1184, 472, 295, 264, 3407, 538, 3407, 4122, 13, 50856, 50856, 639, 307, 767, 1596, 1021, 281, 458, 570, 498, 291, 519, 466, 437, 300, 1355, 11, 309, 1355, 51131, 51131, 300, 746, 411, 364, 29903, 31890, 3758, 3256, 25712, 307, 516, 281, 917, 493, 365, 257, 3407, 538, 51490, 51490, 3407, 10748, 13, 51540, 51540, 961, 311, 584, 309, 311, 1382, 281, 584, 11, 307, 341, 257, 6155, 30, 51664, 51664, 400, 294, 1184, 295, 264, 3166, 295, 264, 3407, 538, 3407, 10748, 11, 309, 311, 1936, 1566, 11, 307, 456, 257, 6155, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.0952125730968657, "compression_ratio": 1.7161016949152543, "no_speech_prob": 2.7852692596752604e-07}, {"id": 646, "seek": 375794, "start": 3780.46, "end": 3781.46, "text": " seven grid.", "tokens": [50364, 407, 321, 4274, 264, 2430, 763, 295, 1184, 472, 295, 264, 3407, 538, 3407, 4122, 13, 50856, 50856, 639, 307, 767, 1596, 1021, 281, 458, 570, 498, 291, 519, 466, 437, 300, 1355, 11, 309, 1355, 51131, 51131, 300, 746, 411, 364, 29903, 31890, 3758, 3256, 25712, 307, 516, 281, 917, 493, 365, 257, 3407, 538, 51490, 51490, 3407, 10748, 13, 51540, 51540, 961, 311, 584, 309, 311, 1382, 281, 584, 11, 307, 341, 257, 6155, 30, 51664, 51664, 400, 294, 1184, 295, 264, 3166, 295, 264, 3407, 538, 3407, 10748, 11, 309, 311, 1936, 1566, 11, 307, 456, 257, 6155, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.0952125730968657, "compression_ratio": 1.7161016949152543, "no_speech_prob": 2.7852692596752604e-07}, {"id": 647, "seek": 375794, "start": 3781.46, "end": 3783.94, "text": " Let's say it's trying to say, is this a bear?", "tokens": [50364, 407, 321, 4274, 264, 2430, 763, 295, 1184, 472, 295, 264, 3407, 538, 3407, 4122, 13, 50856, 50856, 639, 307, 767, 1596, 1021, 281, 458, 570, 498, 291, 519, 466, 437, 300, 1355, 11, 309, 1355, 51131, 51131, 300, 746, 411, 364, 29903, 31890, 3758, 3256, 25712, 307, 516, 281, 917, 493, 365, 257, 3407, 538, 51490, 51490, 3407, 10748, 13, 51540, 51540, 961, 311, 584, 309, 311, 1382, 281, 584, 11, 307, 341, 257, 6155, 30, 51664, 51664, 400, 294, 1184, 295, 264, 3166, 295, 264, 3407, 538, 3407, 10748, 11, 309, 311, 1936, 1566, 11, 307, 456, 257, 6155, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.0952125730968657, "compression_ratio": 1.7161016949152543, "no_speech_prob": 2.7852692596752604e-07}, {"id": 648, "seek": 375794, "start": 3783.94, "end": 3787.7000000000003, "text": " And in each of the parts of the seven by seven grid, it's basically saying, is there a bear", "tokens": [50364, 407, 321, 4274, 264, 2430, 763, 295, 1184, 472, 295, 264, 3407, 538, 3407, 4122, 13, 50856, 50856, 639, 307, 767, 1596, 1021, 281, 458, 570, 498, 291, 519, 466, 437, 300, 1355, 11, 309, 1355, 51131, 51131, 300, 746, 411, 364, 29903, 31890, 3758, 3256, 25712, 307, 516, 281, 917, 493, 365, 257, 3407, 538, 51490, 51490, 3407, 10748, 13, 51540, 51540, 961, 311, 584, 309, 311, 1382, 281, 584, 11, 307, 341, 257, 6155, 30, 51664, 51664, 400, 294, 1184, 295, 264, 3166, 295, 264, 3407, 538, 3407, 10748, 11, 309, 311, 1936, 1566, 11, 307, 456, 257, 6155, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.0952125730968657, "compression_ratio": 1.7161016949152543, "no_speech_prob": 2.7852692596752604e-07}, {"id": 649, "seek": 378770, "start": 3787.7, "end": 3789.2, "text": " in this part of the photo?", "tokens": [50364, 294, 341, 644, 295, 264, 5052, 30, 50439, 50439, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50523, 50523, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50620, 50620, 400, 300, 5531, 82, 264, 4274, 295, 729, 16513, 3407, 538, 3407, 21264, 281, 4536, 1968, 456, 311, 50874, 50874, 257, 6155, 294, 264, 5052, 13, 51013, 51013, 663, 1985, 588, 731, 498, 309, 311, 1936, 257, 5052, 295, 257, 6155, 13, 51266, 51266, 1436, 498, 264, 6155, 307, 955, 293, 2516, 493, 881, 295, 264, 3920, 11, 550, 881, 295, 729, 3407, 538, 51489, 51489, 3407, 9239, 366, 9239, 295, 257, 6155, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09448591586762825, "compression_ratio": 2.0251256281407035, "no_speech_prob": 6.144147846498527e-06}, {"id": 650, "seek": 378770, "start": 3789.2, "end": 3790.8799999999997, "text": " Is there a bear in this part of the photo?", "tokens": [50364, 294, 341, 644, 295, 264, 5052, 30, 50439, 50439, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50523, 50523, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50620, 50620, 400, 300, 5531, 82, 264, 4274, 295, 729, 16513, 3407, 538, 3407, 21264, 281, 4536, 1968, 456, 311, 50874, 50874, 257, 6155, 294, 264, 5052, 13, 51013, 51013, 663, 1985, 588, 731, 498, 309, 311, 1936, 257, 5052, 295, 257, 6155, 13, 51266, 51266, 1436, 498, 264, 6155, 307, 955, 293, 2516, 493, 881, 295, 264, 3920, 11, 550, 881, 295, 729, 3407, 538, 51489, 51489, 3407, 9239, 366, 9239, 295, 257, 6155, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09448591586762825, "compression_ratio": 2.0251256281407035, "no_speech_prob": 6.144147846498527e-06}, {"id": 651, "seek": 378770, "start": 3790.8799999999997, "end": 3792.8199999999997, "text": " Is there a bear in this part of the photo?", "tokens": [50364, 294, 341, 644, 295, 264, 5052, 30, 50439, 50439, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50523, 50523, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50620, 50620, 400, 300, 5531, 82, 264, 4274, 295, 729, 16513, 3407, 538, 3407, 21264, 281, 4536, 1968, 456, 311, 50874, 50874, 257, 6155, 294, 264, 5052, 13, 51013, 51013, 663, 1985, 588, 731, 498, 309, 311, 1936, 257, 5052, 295, 257, 6155, 13, 51266, 51266, 1436, 498, 264, 6155, 307, 955, 293, 2516, 493, 881, 295, 264, 3920, 11, 550, 881, 295, 729, 3407, 538, 51489, 51489, 3407, 9239, 366, 9239, 295, 257, 6155, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09448591586762825, "compression_ratio": 2.0251256281407035, "no_speech_prob": 6.144147846498527e-06}, {"id": 652, "seek": 378770, "start": 3792.8199999999997, "end": 3797.8999999999996, "text": " And that detects the average of those 49 seven by seven predictions to decide whether there's", "tokens": [50364, 294, 341, 644, 295, 264, 5052, 30, 50439, 50439, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50523, 50523, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50620, 50620, 400, 300, 5531, 82, 264, 4274, 295, 729, 16513, 3407, 538, 3407, 21264, 281, 4536, 1968, 456, 311, 50874, 50874, 257, 6155, 294, 264, 5052, 13, 51013, 51013, 663, 1985, 588, 731, 498, 309, 311, 1936, 257, 5052, 295, 257, 6155, 13, 51266, 51266, 1436, 498, 264, 6155, 307, 955, 293, 2516, 493, 881, 295, 264, 3920, 11, 550, 881, 295, 729, 3407, 538, 51489, 51489, 3407, 9239, 366, 9239, 295, 257, 6155, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09448591586762825, "compression_ratio": 2.0251256281407035, "no_speech_prob": 6.144147846498527e-06}, {"id": 653, "seek": 378770, "start": 3797.8999999999996, "end": 3800.68, "text": " a bear in the photo.", "tokens": [50364, 294, 341, 644, 295, 264, 5052, 30, 50439, 50439, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50523, 50523, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50620, 50620, 400, 300, 5531, 82, 264, 4274, 295, 729, 16513, 3407, 538, 3407, 21264, 281, 4536, 1968, 456, 311, 50874, 50874, 257, 6155, 294, 264, 5052, 13, 51013, 51013, 663, 1985, 588, 731, 498, 309, 311, 1936, 257, 5052, 295, 257, 6155, 13, 51266, 51266, 1436, 498, 264, 6155, 307, 955, 293, 2516, 493, 881, 295, 264, 3920, 11, 550, 881, 295, 729, 3407, 538, 51489, 51489, 3407, 9239, 366, 9239, 295, 257, 6155, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09448591586762825, "compression_ratio": 2.0251256281407035, "no_speech_prob": 6.144147846498527e-06}, {"id": 654, "seek": 378770, "start": 3800.68, "end": 3805.74, "text": " That works very well if it's basically a photo of a bear.", "tokens": [50364, 294, 341, 644, 295, 264, 5052, 30, 50439, 50439, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50523, 50523, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50620, 50620, 400, 300, 5531, 82, 264, 4274, 295, 729, 16513, 3407, 538, 3407, 21264, 281, 4536, 1968, 456, 311, 50874, 50874, 257, 6155, 294, 264, 5052, 13, 51013, 51013, 663, 1985, 588, 731, 498, 309, 311, 1936, 257, 5052, 295, 257, 6155, 13, 51266, 51266, 1436, 498, 264, 6155, 307, 955, 293, 2516, 493, 881, 295, 264, 3920, 11, 550, 881, 295, 729, 3407, 538, 51489, 51489, 3407, 9239, 366, 9239, 295, 257, 6155, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09448591586762825, "compression_ratio": 2.0251256281407035, "no_speech_prob": 6.144147846498527e-06}, {"id": 655, "seek": 378770, "start": 3805.74, "end": 3810.2, "text": " Because if the bear is big and takes up most of the frame, then most of those seven by", "tokens": [50364, 294, 341, 644, 295, 264, 5052, 30, 50439, 50439, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50523, 50523, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50620, 50620, 400, 300, 5531, 82, 264, 4274, 295, 729, 16513, 3407, 538, 3407, 21264, 281, 4536, 1968, 456, 311, 50874, 50874, 257, 6155, 294, 264, 5052, 13, 51013, 51013, 663, 1985, 588, 731, 498, 309, 311, 1936, 257, 5052, 295, 257, 6155, 13, 51266, 51266, 1436, 498, 264, 6155, 307, 955, 293, 2516, 493, 881, 295, 264, 3920, 11, 550, 881, 295, 729, 3407, 538, 51489, 51489, 3407, 9239, 366, 9239, 295, 257, 6155, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09448591586762825, "compression_ratio": 2.0251256281407035, "no_speech_prob": 6.144147846498527e-06}, {"id": 656, "seek": 378770, "start": 3810.2, "end": 3814.7999999999997, "text": " seven bits are bits of a bear.", "tokens": [50364, 294, 341, 644, 295, 264, 5052, 30, 50439, 50439, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50523, 50523, 1119, 456, 257, 6155, 294, 341, 644, 295, 264, 5052, 30, 50620, 50620, 400, 300, 5531, 82, 264, 4274, 295, 729, 16513, 3407, 538, 3407, 21264, 281, 4536, 1968, 456, 311, 50874, 50874, 257, 6155, 294, 264, 5052, 13, 51013, 51013, 663, 1985, 588, 731, 498, 309, 311, 1936, 257, 5052, 295, 257, 6155, 13, 51266, 51266, 1436, 498, 264, 6155, 307, 955, 293, 2516, 493, 881, 295, 264, 3920, 11, 550, 881, 295, 729, 3407, 538, 51489, 51489, 3407, 9239, 366, 9239, 295, 257, 6155, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09448591586762825, "compression_ratio": 2.0251256281407035, "no_speech_prob": 6.144147846498527e-06}, {"id": 657, "seek": 381480, "start": 3814.8, "end": 3820.6600000000003, "text": " On the other hand, if it's a teeny tiny bear in the corner, then potentially only one of", "tokens": [50364, 1282, 264, 661, 1011, 11, 498, 309, 311, 257, 48232, 5870, 6155, 294, 264, 4538, 11, 550, 7263, 787, 472, 295, 50657, 50657, 729, 16513, 19368, 575, 257, 6155, 294, 309, 13, 50861, 50861, 400, 754, 5324, 11, 498, 309, 311, 411, 257, 3036, 295, 3195, 293, 3195, 295, 819, 721, 11, 787, 472, 51051, 51051, 295, 597, 307, 257, 6155, 11, 309, 727, 917, 493, 406, 885, 257, 869, 6155, 25712, 13, 51313, 51313, 400, 370, 341, 307, 689, 264, 4365, 295, 577, 321, 7690, 527, 2316, 1261, 484, 281, 312, 1021, 13, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.07885928543246522, "compression_ratio": 1.6457399103139014, "no_speech_prob": 1.370953100376937e-06}, {"id": 658, "seek": 381480, "start": 3820.6600000000003, "end": 3824.7400000000002, "text": " those 49 squares has a bear in it.", "tokens": [50364, 1282, 264, 661, 1011, 11, 498, 309, 311, 257, 48232, 5870, 6155, 294, 264, 4538, 11, 550, 7263, 787, 472, 295, 50657, 50657, 729, 16513, 19368, 575, 257, 6155, 294, 309, 13, 50861, 50861, 400, 754, 5324, 11, 498, 309, 311, 411, 257, 3036, 295, 3195, 293, 3195, 295, 819, 721, 11, 787, 472, 51051, 51051, 295, 597, 307, 257, 6155, 11, 309, 727, 917, 493, 406, 885, 257, 869, 6155, 25712, 13, 51313, 51313, 400, 370, 341, 307, 689, 264, 4365, 295, 577, 321, 7690, 527, 2316, 1261, 484, 281, 312, 1021, 13, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.07885928543246522, "compression_ratio": 1.6457399103139014, "no_speech_prob": 1.370953100376937e-06}, {"id": 659, "seek": 381480, "start": 3824.7400000000002, "end": 3828.54, "text": " And even worse, if it's like a picture of lots and lots of different things, only one", "tokens": [50364, 1282, 264, 661, 1011, 11, 498, 309, 311, 257, 48232, 5870, 6155, 294, 264, 4538, 11, 550, 7263, 787, 472, 295, 50657, 50657, 729, 16513, 19368, 575, 257, 6155, 294, 309, 13, 50861, 50861, 400, 754, 5324, 11, 498, 309, 311, 411, 257, 3036, 295, 3195, 293, 3195, 295, 819, 721, 11, 787, 472, 51051, 51051, 295, 597, 307, 257, 6155, 11, 309, 727, 917, 493, 406, 885, 257, 869, 6155, 25712, 13, 51313, 51313, 400, 370, 341, 307, 689, 264, 4365, 295, 577, 321, 7690, 527, 2316, 1261, 484, 281, 312, 1021, 13, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.07885928543246522, "compression_ratio": 1.6457399103139014, "no_speech_prob": 1.370953100376937e-06}, {"id": 660, "seek": 381480, "start": 3828.54, "end": 3833.78, "text": " of which is a bear, it could end up not being a great bear detector.", "tokens": [50364, 1282, 264, 661, 1011, 11, 498, 309, 311, 257, 48232, 5870, 6155, 294, 264, 4538, 11, 550, 7263, 787, 472, 295, 50657, 50657, 729, 16513, 19368, 575, 257, 6155, 294, 309, 13, 50861, 50861, 400, 754, 5324, 11, 498, 309, 311, 411, 257, 3036, 295, 3195, 293, 3195, 295, 819, 721, 11, 787, 472, 51051, 51051, 295, 597, 307, 257, 6155, 11, 309, 727, 917, 493, 406, 885, 257, 869, 6155, 25712, 13, 51313, 51313, 400, 370, 341, 307, 689, 264, 4365, 295, 577, 321, 7690, 527, 2316, 1261, 484, 281, 312, 1021, 13, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.07885928543246522, "compression_ratio": 1.6457399103139014, "no_speech_prob": 1.370953100376937e-06}, {"id": 661, "seek": 381480, "start": 3833.78, "end": 3841.02, "text": " And so this is where the details of how we construct our model turn out to be important.", "tokens": [50364, 1282, 264, 661, 1011, 11, 498, 309, 311, 257, 48232, 5870, 6155, 294, 264, 4538, 11, 550, 7263, 787, 472, 295, 50657, 50657, 729, 16513, 19368, 575, 257, 6155, 294, 309, 13, 50861, 50861, 400, 754, 5324, 11, 498, 309, 311, 411, 257, 3036, 295, 3195, 293, 3195, 295, 819, 721, 11, 787, 472, 51051, 51051, 295, 597, 307, 257, 6155, 11, 309, 727, 917, 493, 406, 885, 257, 869, 6155, 25712, 13, 51313, 51313, 400, 370, 341, 307, 689, 264, 4365, 295, 577, 321, 7690, 527, 2316, 1261, 484, 281, 312, 1021, 13, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.07885928543246522, "compression_ratio": 1.6457399103139014, "no_speech_prob": 1.370953100376937e-06}, {"id": 662, "seek": 384102, "start": 3841.02, "end": 3848.7, "text": " And so if you're trying to find just one part of a photo that has a small bear in it, you", "tokens": [50364, 400, 370, 498, 291, 434, 1382, 281, 915, 445, 472, 644, 295, 257, 5052, 300, 575, 257, 1359, 6155, 294, 309, 11, 291, 50748, 50748, 1062, 4536, 281, 764, 6674, 7005, 278, 2602, 295, 4274, 7005, 278, 13, 50958, 50958, 1436, 11469, 7005, 278, 486, 445, 584, 11, 286, 519, 341, 307, 257, 3036, 295, 257, 6155, 498, 604, 472, 295, 51198, 51198, 729, 16513, 9239, 295, 452, 10748, 575, 746, 300, 1542, 411, 257, 6155, 294, 309, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.08559926159410591, "compression_ratio": 1.566326530612245, "no_speech_prob": 3.966949861933244e-06}, {"id": 663, "seek": 384102, "start": 3848.7, "end": 3852.9, "text": " might decide to use maximum pooling instead of average pooling.", "tokens": [50364, 400, 370, 498, 291, 434, 1382, 281, 915, 445, 472, 644, 295, 257, 5052, 300, 575, 257, 1359, 6155, 294, 309, 11, 291, 50748, 50748, 1062, 4536, 281, 764, 6674, 7005, 278, 2602, 295, 4274, 7005, 278, 13, 50958, 50958, 1436, 11469, 7005, 278, 486, 445, 584, 11, 286, 519, 341, 307, 257, 3036, 295, 257, 6155, 498, 604, 472, 295, 51198, 51198, 729, 16513, 9239, 295, 452, 10748, 575, 746, 300, 1542, 411, 257, 6155, 294, 309, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.08559926159410591, "compression_ratio": 1.566326530612245, "no_speech_prob": 3.966949861933244e-06}, {"id": 664, "seek": 384102, "start": 3852.9, "end": 3857.7, "text": " Because max pooling will just say, I think this is a picture of a bear if any one of", "tokens": [50364, 400, 370, 498, 291, 434, 1382, 281, 915, 445, 472, 644, 295, 257, 5052, 300, 575, 257, 1359, 6155, 294, 309, 11, 291, 50748, 50748, 1062, 4536, 281, 764, 6674, 7005, 278, 2602, 295, 4274, 7005, 278, 13, 50958, 50958, 1436, 11469, 7005, 278, 486, 445, 584, 11, 286, 519, 341, 307, 257, 3036, 295, 257, 6155, 498, 604, 472, 295, 51198, 51198, 729, 16513, 9239, 295, 452, 10748, 575, 746, 300, 1542, 411, 257, 6155, 294, 309, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.08559926159410591, "compression_ratio": 1.566326530612245, "no_speech_prob": 3.966949861933244e-06}, {"id": 665, "seek": 384102, "start": 3857.7, "end": 3864.46, "text": " those 49 bits of my grid has something that looks like a bear in it.", "tokens": [50364, 400, 370, 498, 291, 434, 1382, 281, 915, 445, 472, 644, 295, 257, 5052, 300, 575, 257, 1359, 6155, 294, 309, 11, 291, 50748, 50748, 1062, 4536, 281, 764, 6674, 7005, 278, 2602, 295, 4274, 7005, 278, 13, 50958, 50958, 1436, 11469, 7005, 278, 486, 445, 584, 11, 286, 519, 341, 307, 257, 3036, 295, 257, 6155, 498, 604, 472, 295, 51198, 51198, 729, 16513, 9239, 295, 452, 10748, 575, 746, 300, 1542, 411, 257, 6155, 294, 309, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.08559926159410591, "compression_ratio": 1.566326530612245, "no_speech_prob": 3.966949861933244e-06}, {"id": 666, "seek": 386446, "start": 3864.46, "end": 3874.18, "text": " So these are potentially important details which often get hand waved over.", "tokens": [50364, 407, 613, 366, 7263, 1021, 4365, 597, 2049, 483, 1011, 261, 12865, 670, 13, 50850, 50850, 5780, 797, 11, 264, 2141, 551, 510, 307, 300, 341, 307, 2737, 558, 412, 264, 588, 917, 11, 300, 51382, 51382, 11469, 7005, 420, 300, 4274, 7005, 13, 51470, 51470, 400, 767, 15968, 48698, 18722, 341, 337, 291, 13, 51572, 51572, 492, 360, 257, 2121, 551, 597, 321, 21761, 14479, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.16093811518709425, "compression_ratio": 1.5051546391752577, "no_speech_prob": 4.965273205925769e-07}, {"id": 667, "seek": 386446, "start": 3874.18, "end": 3884.82, "text": " Although again, the key thing here is that this is happening right at the very end, that", "tokens": [50364, 407, 613, 366, 7263, 1021, 4365, 597, 2049, 483, 1011, 261, 12865, 670, 13, 50850, 50850, 5780, 797, 11, 264, 2141, 551, 510, 307, 300, 341, 307, 2737, 558, 412, 264, 588, 917, 11, 300, 51382, 51382, 11469, 7005, 420, 300, 4274, 7005, 13, 51470, 51470, 400, 767, 15968, 48698, 18722, 341, 337, 291, 13, 51572, 51572, 492, 360, 257, 2121, 551, 597, 321, 21761, 14479, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.16093811518709425, "compression_ratio": 1.5051546391752577, "no_speech_prob": 4.965273205925769e-07}, {"id": 668, "seek": 386446, "start": 3884.82, "end": 3886.58, "text": " max pool or that average pool.", "tokens": [50364, 407, 613, 366, 7263, 1021, 4365, 597, 2049, 483, 1011, 261, 12865, 670, 13, 50850, 50850, 5780, 797, 11, 264, 2141, 551, 510, 307, 300, 341, 307, 2737, 558, 412, 264, 588, 917, 11, 300, 51382, 51382, 11469, 7005, 420, 300, 4274, 7005, 13, 51470, 51470, 400, 767, 15968, 48698, 18722, 341, 337, 291, 13, 51572, 51572, 492, 360, 257, 2121, 551, 597, 321, 21761, 14479, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.16093811518709425, "compression_ratio": 1.5051546391752577, "no_speech_prob": 4.965273205925769e-07}, {"id": 669, "seek": 386446, "start": 3886.58, "end": 3888.62, "text": " And actually FastAI handles this for you.", "tokens": [50364, 407, 613, 366, 7263, 1021, 4365, 597, 2049, 483, 1011, 261, 12865, 670, 13, 50850, 50850, 5780, 797, 11, 264, 2141, 551, 510, 307, 300, 341, 307, 2737, 558, 412, 264, 588, 917, 11, 300, 51382, 51382, 11469, 7005, 420, 300, 4274, 7005, 13, 51470, 51470, 400, 767, 15968, 48698, 18722, 341, 337, 291, 13, 51572, 51572, 492, 360, 257, 2121, 551, 597, 321, 21761, 14479, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.16093811518709425, "compression_ratio": 1.5051546391752577, "no_speech_prob": 4.965273205925769e-07}, {"id": 670, "seek": 386446, "start": 3888.62, "end": 3892.78, "text": " We do a special thing which we independently invented.", "tokens": [50364, 407, 613, 366, 7263, 1021, 4365, 597, 2049, 483, 1011, 261, 12865, 670, 13, 50850, 50850, 5780, 797, 11, 264, 2141, 551, 510, 307, 300, 341, 307, 2737, 558, 412, 264, 588, 917, 11, 300, 51382, 51382, 11469, 7005, 420, 300, 4274, 7005, 13, 51470, 51470, 400, 767, 15968, 48698, 18722, 341, 337, 291, 13, 51572, 51572, 492, 360, 257, 2121, 551, 597, 321, 21761, 14479, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.16093811518709425, "compression_ratio": 1.5051546391752577, "no_speech_prob": 4.965273205925769e-07}, {"id": 671, "seek": 389278, "start": 3892.78, "end": 3898.7400000000002, "text": " I think we did it first, which is we do both max pool and average pool and we concatenate", "tokens": [50364, 286, 519, 321, 630, 309, 700, 11, 597, 307, 321, 360, 1293, 11469, 7005, 293, 4274, 7005, 293, 321, 1588, 7186, 473, 50662, 50662, 552, 1214, 13, 50712, 50712, 492, 818, 300, 1588, 267, 7005, 278, 13, 50792, 50792, 400, 300, 575, 1670, 668, 33477, 292, 294, 412, 1935, 472, 3035, 13, 51122, 51122, 400, 370, 300, 1355, 300, 291, 500, 380, 362, 281, 519, 886, 709, 466, 309, 570, 321, 434, 516, 281, 853, 51287, 51287, 1293, 337, 291, 1936, 13, 51512, 51512, 407, 286, 2835, 300, 341, 307, 767, 534, 445, 8141, 27290, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.07889653205871582, "compression_ratio": 1.6196581196581197, "no_speech_prob": 4.09288668379304e-06}, {"id": 672, "seek": 389278, "start": 3898.7400000000002, "end": 3899.7400000000002, "text": " them together.", "tokens": [50364, 286, 519, 321, 630, 309, 700, 11, 597, 307, 321, 360, 1293, 11469, 7005, 293, 4274, 7005, 293, 321, 1588, 7186, 473, 50662, 50662, 552, 1214, 13, 50712, 50712, 492, 818, 300, 1588, 267, 7005, 278, 13, 50792, 50792, 400, 300, 575, 1670, 668, 33477, 292, 294, 412, 1935, 472, 3035, 13, 51122, 51122, 400, 370, 300, 1355, 300, 291, 500, 380, 362, 281, 519, 886, 709, 466, 309, 570, 321, 434, 516, 281, 853, 51287, 51287, 1293, 337, 291, 1936, 13, 51512, 51512, 407, 286, 2835, 300, 341, 307, 767, 534, 445, 8141, 27290, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.07889653205871582, "compression_ratio": 1.6196581196581197, "no_speech_prob": 4.09288668379304e-06}, {"id": 673, "seek": 389278, "start": 3899.7400000000002, "end": 3901.34, "text": " We call that concat pooling.", "tokens": [50364, 286, 519, 321, 630, 309, 700, 11, 597, 307, 321, 360, 1293, 11469, 7005, 293, 4274, 7005, 293, 321, 1588, 7186, 473, 50662, 50662, 552, 1214, 13, 50712, 50712, 492, 818, 300, 1588, 267, 7005, 278, 13, 50792, 50792, 400, 300, 575, 1670, 668, 33477, 292, 294, 412, 1935, 472, 3035, 13, 51122, 51122, 400, 370, 300, 1355, 300, 291, 500, 380, 362, 281, 519, 886, 709, 466, 309, 570, 321, 434, 516, 281, 853, 51287, 51287, 1293, 337, 291, 1936, 13, 51512, 51512, 407, 286, 2835, 300, 341, 307, 767, 534, 445, 8141, 27290, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.07889653205871582, "compression_ratio": 1.6196581196581197, "no_speech_prob": 4.09288668379304e-06}, {"id": 674, "seek": 389278, "start": 3901.34, "end": 3907.94, "text": " And that has since been reinvented in at least one paper.", "tokens": [50364, 286, 519, 321, 630, 309, 700, 11, 597, 307, 321, 360, 1293, 11469, 7005, 293, 4274, 7005, 293, 321, 1588, 7186, 473, 50662, 50662, 552, 1214, 13, 50712, 50712, 492, 818, 300, 1588, 267, 7005, 278, 13, 50792, 50792, 400, 300, 575, 1670, 668, 33477, 292, 294, 412, 1935, 472, 3035, 13, 51122, 51122, 400, 370, 300, 1355, 300, 291, 500, 380, 362, 281, 519, 886, 709, 466, 309, 570, 321, 434, 516, 281, 853, 51287, 51287, 1293, 337, 291, 1936, 13, 51512, 51512, 407, 286, 2835, 300, 341, 307, 767, 534, 445, 8141, 27290, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.07889653205871582, "compression_ratio": 1.6196581196581197, "no_speech_prob": 4.09288668379304e-06}, {"id": 675, "seek": 389278, "start": 3907.94, "end": 3911.2400000000002, "text": " And so that means that you don't have to think too much about it because we're going to try", "tokens": [50364, 286, 519, 321, 630, 309, 700, 11, 597, 307, 321, 360, 1293, 11469, 7005, 293, 4274, 7005, 293, 321, 1588, 7186, 473, 50662, 50662, 552, 1214, 13, 50712, 50712, 492, 818, 300, 1588, 267, 7005, 278, 13, 50792, 50792, 400, 300, 575, 1670, 668, 33477, 292, 294, 412, 1935, 472, 3035, 13, 51122, 51122, 400, 370, 300, 1355, 300, 291, 500, 380, 362, 281, 519, 886, 709, 466, 309, 570, 321, 434, 516, 281, 853, 51287, 51287, 1293, 337, 291, 1936, 13, 51512, 51512, 407, 286, 2835, 300, 341, 307, 767, 534, 445, 8141, 27290, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.07889653205871582, "compression_ratio": 1.6196581196581197, "no_speech_prob": 4.09288668379304e-06}, {"id": 676, "seek": 389278, "start": 3911.2400000000002, "end": 3915.7400000000002, "text": " both for you basically.", "tokens": [50364, 286, 519, 321, 630, 309, 700, 11, 597, 307, 321, 360, 1293, 11469, 7005, 293, 4274, 7005, 293, 321, 1588, 7186, 473, 50662, 50662, 552, 1214, 13, 50712, 50712, 492, 818, 300, 1588, 267, 7005, 278, 13, 50792, 50792, 400, 300, 575, 1670, 668, 33477, 292, 294, 412, 1935, 472, 3035, 13, 51122, 51122, 400, 370, 300, 1355, 300, 291, 500, 380, 362, 281, 519, 886, 709, 466, 309, 570, 321, 434, 516, 281, 853, 51287, 51287, 1293, 337, 291, 1936, 13, 51512, 51512, 407, 286, 2835, 300, 341, 307, 767, 534, 445, 8141, 27290, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.07889653205871582, "compression_ratio": 1.6196581196581197, "no_speech_prob": 4.09288668379304e-06}, {"id": 677, "seek": 389278, "start": 3915.7400000000002, "end": 3922.02, "text": " So I mentioned that this is actually really just matrix multiplication.", "tokens": [50364, 286, 519, 321, 630, 309, 700, 11, 597, 307, 321, 360, 1293, 11469, 7005, 293, 4274, 7005, 293, 321, 1588, 7186, 473, 50662, 50662, 552, 1214, 13, 50712, 50712, 492, 818, 300, 1588, 267, 7005, 278, 13, 50792, 50792, 400, 300, 575, 1670, 668, 33477, 292, 294, 412, 1935, 472, 3035, 13, 51122, 51122, 400, 370, 300, 1355, 300, 291, 500, 380, 362, 281, 519, 886, 709, 466, 309, 570, 321, 434, 516, 281, 853, 51287, 51287, 1293, 337, 291, 1936, 13, 51512, 51512, 407, 286, 2835, 300, 341, 307, 767, 534, 445, 8141, 27290, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.07889653205871582, "compression_ratio": 1.6196581196581197, "no_speech_prob": 4.09288668379304e-06}, {"id": 678, "seek": 392202, "start": 3922.02, "end": 3929.54, "text": " And to show you that, I'm going to show you some images created by a guy called Matthew", "tokens": [50364, 400, 281, 855, 291, 300, 11, 286, 478, 516, 281, 855, 291, 512, 5267, 2942, 538, 257, 2146, 1219, 12434, 50740, 50740, 17053, 1292, 41708, 567, 630, 341, 767, 11, 286, 519, 341, 307, 294, 527, 588, 700, 1562, 1164, 11, 1062, 50990, 50990, 362, 668, 264, 644, 732, 11, 700, 644, 732, 1164, 13, 51245, 51245, 400, 415, 1936, 10932, 484, 300, 294, 257, 1629, 636, 295, 1953, 466, 309, 11, 309, 4523, 484, 300, 51512, 51512, 45216, 307, 264, 912, 551, 382, 257, 8141, 2316, 4256, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1915534234816028, "compression_ratio": 1.6211453744493391, "no_speech_prob": 9.516120371699799e-06}, {"id": 679, "seek": 392202, "start": 3929.54, "end": 3934.54, "text": " Kleinsmith who did this actually, I think this is in our very first ever course, might", "tokens": [50364, 400, 281, 855, 291, 300, 11, 286, 478, 516, 281, 855, 291, 512, 5267, 2942, 538, 257, 2146, 1219, 12434, 50740, 50740, 17053, 1292, 41708, 567, 630, 341, 767, 11, 286, 519, 341, 307, 294, 527, 588, 700, 1562, 1164, 11, 1062, 50990, 50990, 362, 668, 264, 644, 732, 11, 700, 644, 732, 1164, 13, 51245, 51245, 400, 415, 1936, 10932, 484, 300, 294, 257, 1629, 636, 295, 1953, 466, 309, 11, 309, 4523, 484, 300, 51512, 51512, 45216, 307, 264, 912, 551, 382, 257, 8141, 2316, 4256, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1915534234816028, "compression_ratio": 1.6211453744493391, "no_speech_prob": 9.516120371699799e-06}, {"id": 680, "seek": 392202, "start": 3934.54, "end": 3939.64, "text": " have been the part two, first part two course.", "tokens": [50364, 400, 281, 855, 291, 300, 11, 286, 478, 516, 281, 855, 291, 512, 5267, 2942, 538, 257, 2146, 1219, 12434, 50740, 50740, 17053, 1292, 41708, 567, 630, 341, 767, 11, 286, 519, 341, 307, 294, 527, 588, 700, 1562, 1164, 11, 1062, 50990, 50990, 362, 668, 264, 644, 732, 11, 700, 644, 732, 1164, 13, 51245, 51245, 400, 415, 1936, 10932, 484, 300, 294, 257, 1629, 636, 295, 1953, 466, 309, 11, 309, 4523, 484, 300, 51512, 51512, 45216, 307, 264, 912, 551, 382, 257, 8141, 2316, 4256, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1915534234816028, "compression_ratio": 1.6211453744493391, "no_speech_prob": 9.516120371699799e-06}, {"id": 681, "seek": 392202, "start": 3939.64, "end": 3944.98, "text": " And he basically pointed out that in a certain way of thinking about it, it turns out that", "tokens": [50364, 400, 281, 855, 291, 300, 11, 286, 478, 516, 281, 855, 291, 512, 5267, 2942, 538, 257, 2146, 1219, 12434, 50740, 50740, 17053, 1292, 41708, 567, 630, 341, 767, 11, 286, 519, 341, 307, 294, 527, 588, 700, 1562, 1164, 11, 1062, 50990, 50990, 362, 668, 264, 644, 732, 11, 700, 644, 732, 1164, 13, 51245, 51245, 400, 415, 1936, 10932, 484, 300, 294, 257, 1629, 636, 295, 1953, 466, 309, 11, 309, 4523, 484, 300, 51512, 51512, 45216, 307, 264, 912, 551, 382, 257, 8141, 2316, 4256, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1915534234816028, "compression_ratio": 1.6211453744493391, "no_speech_prob": 9.516120371699799e-06}, {"id": 682, "seek": 392202, "start": 3944.98, "end": 3948.98, "text": " convolution is the same thing as a matrix model player.", "tokens": [50364, 400, 281, 855, 291, 300, 11, 286, 478, 516, 281, 855, 291, 512, 5267, 2942, 538, 257, 2146, 1219, 12434, 50740, 50740, 17053, 1292, 41708, 567, 630, 341, 767, 11, 286, 519, 341, 307, 294, 527, 588, 700, 1562, 1164, 11, 1062, 50990, 50990, 362, 668, 264, 644, 732, 11, 700, 644, 732, 1164, 13, 51245, 51245, 400, 415, 1936, 10932, 484, 300, 294, 257, 1629, 636, 295, 1953, 466, 309, 11, 309, 4523, 484, 300, 51512, 51512, 45216, 307, 264, 912, 551, 382, 257, 8141, 2316, 4256, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1915534234816028, "compression_ratio": 1.6211453744493391, "no_speech_prob": 9.516120371699799e-06}, {"id": 683, "seek": 394898, "start": 3948.98, "end": 3952.34, "text": " So I want to show you how he shows this.", "tokens": [50364, 407, 286, 528, 281, 855, 291, 577, 415, 3110, 341, 13, 50532, 50532, 634, 1936, 1619, 11, 1392, 11, 718, 311, 747, 341, 1045, 538, 1045, 3256, 293, 257, 732, 538, 732, 28256, 19273, 50896, 50896, 264, 31994, 8961, 11, 9861, 11, 15546, 11, 8289, 13, 51199, 51199, 400, 370, 294, 341, 11, 382, 321, 4137, 264, 4910, 670, 11, 1184, 295, 264, 4577, 11, 1184, 295, 264, 4577, 366, 51711, 51711], "temperature": 0.0, "avg_logprob": -0.10359921970882931, "compression_ratio": 1.563953488372093, "no_speech_prob": 2.6425725536682876e-06}, {"id": 684, "seek": 394898, "start": 3952.34, "end": 3959.62, "text": " He basically says, okay, let's take this three by three image and a two by two kernel containing", "tokens": [50364, 407, 286, 528, 281, 855, 291, 577, 415, 3110, 341, 13, 50532, 50532, 634, 1936, 1619, 11, 1392, 11, 718, 311, 747, 341, 1045, 538, 1045, 3256, 293, 257, 732, 538, 732, 28256, 19273, 50896, 50896, 264, 31994, 8961, 11, 9861, 11, 15546, 11, 8289, 13, 51199, 51199, 400, 370, 294, 341, 11, 382, 321, 4137, 264, 4910, 670, 11, 1184, 295, 264, 4577, 11, 1184, 295, 264, 4577, 366, 51711, 51711], "temperature": 0.0, "avg_logprob": -0.10359921970882931, "compression_ratio": 1.563953488372093, "no_speech_prob": 2.6425725536682876e-06}, {"id": 685, "seek": 394898, "start": 3959.62, "end": 3965.68, "text": " the coefficients alpha, beta, gamma, delta.", "tokens": [50364, 407, 286, 528, 281, 855, 291, 577, 415, 3110, 341, 13, 50532, 50532, 634, 1936, 1619, 11, 1392, 11, 718, 311, 747, 341, 1045, 538, 1045, 3256, 293, 257, 732, 538, 732, 28256, 19273, 50896, 50896, 264, 31994, 8961, 11, 9861, 11, 15546, 11, 8289, 13, 51199, 51199, 400, 370, 294, 341, 11, 382, 321, 4137, 264, 4910, 670, 11, 1184, 295, 264, 4577, 11, 1184, 295, 264, 4577, 366, 51711, 51711], "temperature": 0.0, "avg_logprob": -0.10359921970882931, "compression_ratio": 1.563953488372093, "no_speech_prob": 2.6425725536682876e-06}, {"id": 686, "seek": 394898, "start": 3965.68, "end": 3975.92, "text": " And so in this, as we slide the window over, each of the colors, each of the colors are", "tokens": [50364, 407, 286, 528, 281, 855, 291, 577, 415, 3110, 341, 13, 50532, 50532, 634, 1936, 1619, 11, 1392, 11, 718, 311, 747, 341, 1045, 538, 1045, 3256, 293, 257, 732, 538, 732, 28256, 19273, 50896, 50896, 264, 31994, 8961, 11, 9861, 11, 15546, 11, 8289, 13, 51199, 51199, 400, 370, 294, 341, 11, 382, 321, 4137, 264, 4910, 670, 11, 1184, 295, 264, 4577, 11, 1184, 295, 264, 4577, 366, 51711, 51711], "temperature": 0.0, "avg_logprob": -0.10359921970882931, "compression_ratio": 1.563953488372093, "no_speech_prob": 2.6425725536682876e-06}, {"id": 687, "seek": 397592, "start": 3975.92, "end": 3980.82, "text": " multiplied together, red by red plus green by green plus what is that orange by orange", "tokens": [50364, 17207, 1214, 11, 2182, 538, 2182, 1804, 3092, 538, 3092, 1804, 437, 307, 300, 7671, 538, 7671, 50609, 50609, 1804, 3344, 538, 3344, 2709, 291, 341, 13, 50757, 50757, 400, 370, 281, 829, 309, 1071, 636, 11, 21989, 984, 430, 6915, 8961, 1413, 316, 1804, 9861, 1413, 363, 11, 51175, 51175, 1030, 11458, 13, 51435, 51435, 400, 370, 550, 382, 321, 4137, 281, 341, 644, 11, 321, 434, 30955, 797, 11, 2182, 538, 2182, 11, 3092, 538, 3092, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.18743792975821147, "compression_ratio": 1.6775956284153006, "no_speech_prob": 4.495161647355417e-06}, {"id": 688, "seek": 397592, "start": 3980.82, "end": 3983.78, "text": " plus blue by blue gives you this.", "tokens": [50364, 17207, 1214, 11, 2182, 538, 2182, 1804, 3092, 538, 3092, 1804, 437, 307, 300, 7671, 538, 7671, 50609, 50609, 1804, 3344, 538, 3344, 2709, 291, 341, 13, 50757, 50757, 400, 370, 281, 829, 309, 1071, 636, 11, 21989, 984, 430, 6915, 8961, 1413, 316, 1804, 9861, 1413, 363, 11, 51175, 51175, 1030, 11458, 13, 51435, 51435, 400, 370, 550, 382, 321, 4137, 281, 341, 644, 11, 321, 434, 30955, 797, 11, 2182, 538, 2182, 11, 3092, 538, 3092, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.18743792975821147, "compression_ratio": 1.6775956284153006, "no_speech_prob": 4.495161647355417e-06}, {"id": 689, "seek": 397592, "start": 3983.78, "end": 3992.14, "text": " And so to put it another way, algebraically P equals alpha times A plus beta times B,", "tokens": [50364, 17207, 1214, 11, 2182, 538, 2182, 1804, 3092, 538, 3092, 1804, 437, 307, 300, 7671, 538, 7671, 50609, 50609, 1804, 3344, 538, 3344, 2709, 291, 341, 13, 50757, 50757, 400, 370, 281, 829, 309, 1071, 636, 11, 21989, 984, 430, 6915, 8961, 1413, 316, 1804, 9861, 1413, 363, 11, 51175, 51175, 1030, 11458, 13, 51435, 51435, 400, 370, 550, 382, 321, 4137, 281, 341, 644, 11, 321, 434, 30955, 797, 11, 2182, 538, 2182, 11, 3092, 538, 3092, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.18743792975821147, "compression_ratio": 1.6775956284153006, "no_speech_prob": 4.495161647355417e-06}, {"id": 690, "seek": 397592, "start": 3992.14, "end": 3997.34, "text": " et cetera.", "tokens": [50364, 17207, 1214, 11, 2182, 538, 2182, 1804, 3092, 538, 3092, 1804, 437, 307, 300, 7671, 538, 7671, 50609, 50609, 1804, 3344, 538, 3344, 2709, 291, 341, 13, 50757, 50757, 400, 370, 281, 829, 309, 1071, 636, 11, 21989, 984, 430, 6915, 8961, 1413, 316, 1804, 9861, 1413, 363, 11, 51175, 51175, 1030, 11458, 13, 51435, 51435, 400, 370, 550, 382, 321, 4137, 281, 341, 644, 11, 321, 434, 30955, 797, 11, 2182, 538, 2182, 11, 3092, 538, 3092, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.18743792975821147, "compression_ratio": 1.6775956284153006, "no_speech_prob": 4.495161647355417e-06}, {"id": 691, "seek": 397592, "start": 3997.34, "end": 4002.7000000000003, "text": " And so then as we slide to this part, we're multiplying again, red by red, green by green", "tokens": [50364, 17207, 1214, 11, 2182, 538, 2182, 1804, 3092, 538, 3092, 1804, 437, 307, 300, 7671, 538, 7671, 50609, 50609, 1804, 3344, 538, 3344, 2709, 291, 341, 13, 50757, 50757, 400, 370, 281, 829, 309, 1071, 636, 11, 21989, 984, 430, 6915, 8961, 1413, 316, 1804, 9861, 1413, 363, 11, 51175, 51175, 1030, 11458, 13, 51435, 51435, 400, 370, 550, 382, 321, 4137, 281, 341, 644, 11, 321, 434, 30955, 797, 11, 2182, 538, 2182, 11, 3092, 538, 3092, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.18743792975821147, "compression_ratio": 1.6775956284153006, "no_speech_prob": 4.495161647355417e-06}, {"id": 692, "seek": 400270, "start": 4002.7, "end": 4008.3399999999997, "text": " so forth, so we can say Q equals alpha times B plus beta times C, et cetera.", "tokens": [50364, 370, 5220, 11, 370, 321, 393, 584, 1249, 6915, 8961, 1413, 363, 1804, 9861, 1413, 383, 11, 1030, 11458, 13, 50646, 50646, 400, 370, 341, 307, 577, 321, 8873, 257, 45216, 1228, 264, 3109, 321, 445, 7619, 382, 257, 50898, 50898, 21169, 4910, 13, 51180, 51180, 583, 510, 311, 1071, 636, 295, 1953, 466, 309, 13, 51376, 51376, 492, 727, 584, 11, 1392, 11, 321, 600, 658, 439, 613, 819, 721, 11, 316, 11, 363, 11, 383, 11, 413, 11, 462, 11, 479, 11, 460, 11, 389, 11, 508, 13, 961, 311, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.09223746260007222, "compression_ratio": 1.4363636363636363, "no_speech_prob": 1.267926677428477e-06}, {"id": 693, "seek": 400270, "start": 4008.3399999999997, "end": 4013.3799999999997, "text": " And so this is how we calculate a convolution using the approach we just described as a", "tokens": [50364, 370, 5220, 11, 370, 321, 393, 584, 1249, 6915, 8961, 1413, 363, 1804, 9861, 1413, 383, 11, 1030, 11458, 13, 50646, 50646, 400, 370, 341, 307, 577, 321, 8873, 257, 45216, 1228, 264, 3109, 321, 445, 7619, 382, 257, 50898, 50898, 21169, 4910, 13, 51180, 51180, 583, 510, 311, 1071, 636, 295, 1953, 466, 309, 13, 51376, 51376, 492, 727, 584, 11, 1392, 11, 321, 600, 658, 439, 613, 819, 721, 11, 316, 11, 363, 11, 383, 11, 413, 11, 462, 11, 479, 11, 460, 11, 389, 11, 508, 13, 961, 311, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.09223746260007222, "compression_ratio": 1.4363636363636363, "no_speech_prob": 1.267926677428477e-06}, {"id": 694, "seek": 400270, "start": 4013.3799999999997, "end": 4019.02, "text": " sliding window.", "tokens": [50364, 370, 5220, 11, 370, 321, 393, 584, 1249, 6915, 8961, 1413, 363, 1804, 9861, 1413, 383, 11, 1030, 11458, 13, 50646, 50646, 400, 370, 341, 307, 577, 321, 8873, 257, 45216, 1228, 264, 3109, 321, 445, 7619, 382, 257, 50898, 50898, 21169, 4910, 13, 51180, 51180, 583, 510, 311, 1071, 636, 295, 1953, 466, 309, 13, 51376, 51376, 492, 727, 584, 11, 1392, 11, 321, 600, 658, 439, 613, 819, 721, 11, 316, 11, 363, 11, 383, 11, 413, 11, 462, 11, 479, 11, 460, 11, 389, 11, 508, 13, 961, 311, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.09223746260007222, "compression_ratio": 1.4363636363636363, "no_speech_prob": 1.267926677428477e-06}, {"id": 695, "seek": 400270, "start": 4019.02, "end": 4022.9399999999996, "text": " But here's another way of thinking about it.", "tokens": [50364, 370, 5220, 11, 370, 321, 393, 584, 1249, 6915, 8961, 1413, 363, 1804, 9861, 1413, 383, 11, 1030, 11458, 13, 50646, 50646, 400, 370, 341, 307, 577, 321, 8873, 257, 45216, 1228, 264, 3109, 321, 445, 7619, 382, 257, 50898, 50898, 21169, 4910, 13, 51180, 51180, 583, 510, 311, 1071, 636, 295, 1953, 466, 309, 13, 51376, 51376, 492, 727, 584, 11, 1392, 11, 321, 600, 658, 439, 613, 819, 721, 11, 316, 11, 363, 11, 383, 11, 413, 11, 462, 11, 479, 11, 460, 11, 389, 11, 508, 13, 961, 311, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.09223746260007222, "compression_ratio": 1.4363636363636363, "no_speech_prob": 1.267926677428477e-06}, {"id": 696, "seek": 400270, "start": 4022.9399999999996, "end": 4031.2999999999997, "text": " We could say, okay, we've got all these different things, A, B, C, D, E, F, G, H, J. Let's", "tokens": [50364, 370, 5220, 11, 370, 321, 393, 584, 1249, 6915, 8961, 1413, 363, 1804, 9861, 1413, 383, 11, 1030, 11458, 13, 50646, 50646, 400, 370, 341, 307, 577, 321, 8873, 257, 45216, 1228, 264, 3109, 321, 445, 7619, 382, 257, 50898, 50898, 21169, 4910, 13, 51180, 51180, 583, 510, 311, 1071, 636, 295, 1953, 466, 309, 13, 51376, 51376, 492, 727, 584, 11, 1392, 11, 321, 600, 658, 439, 613, 819, 721, 11, 316, 11, 363, 11, 383, 11, 413, 11, 462, 11, 479, 11, 460, 11, 389, 11, 508, 13, 961, 311, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.09223746260007222, "compression_ratio": 1.4363636363636363, "no_speech_prob": 1.267926677428477e-06}, {"id": 697, "seek": 403130, "start": 4031.3, "end": 4039.86, "text": " put them all into a single vector and then let's create a single matrix that has alpha,", "tokens": [50364, 829, 552, 439, 666, 257, 2167, 8062, 293, 550, 718, 311, 1884, 257, 2167, 8141, 300, 575, 8961, 11, 50792, 50792, 8961, 11, 8961, 11, 8961, 11, 9861, 11, 9861, 11, 9861, 11, 9861, 11, 1030, 11458, 13, 51030, 51030, 400, 550, 498, 321, 360, 341, 8141, 17207, 538, 341, 8062, 11, 321, 483, 341, 365, 613, 10855, 35193, 51528, 51528], "temperature": 0.0, "avg_logprob": -0.12607196777585952, "compression_ratio": 1.7205882352941178, "no_speech_prob": 6.276701469687396e-07}, {"id": 698, "seek": 403130, "start": 4039.86, "end": 4044.6200000000003, "text": " alpha, alpha, alpha, beta, beta, beta, beta, et cetera.", "tokens": [50364, 829, 552, 439, 666, 257, 2167, 8062, 293, 550, 718, 311, 1884, 257, 2167, 8141, 300, 575, 8961, 11, 50792, 50792, 8961, 11, 8961, 11, 8961, 11, 9861, 11, 9861, 11, 9861, 11, 9861, 11, 1030, 11458, 13, 51030, 51030, 400, 550, 498, 321, 360, 341, 8141, 17207, 538, 341, 8062, 11, 321, 483, 341, 365, 613, 10855, 35193, 51528, 51528], "temperature": 0.0, "avg_logprob": -0.12607196777585952, "compression_ratio": 1.7205882352941178, "no_speech_prob": 6.276701469687396e-07}, {"id": 699, "seek": 403130, "start": 4044.6200000000003, "end": 4054.5800000000004, "text": " And then if we do this matrix multiplied by this vector, we get this with these gray zeros", "tokens": [50364, 829, 552, 439, 666, 257, 2167, 8062, 293, 550, 718, 311, 1884, 257, 2167, 8141, 300, 575, 8961, 11, 50792, 50792, 8961, 11, 8961, 11, 8961, 11, 9861, 11, 9861, 11, 9861, 11, 9861, 11, 1030, 11458, 13, 51030, 51030, 400, 550, 498, 321, 360, 341, 8141, 17207, 538, 341, 8062, 11, 321, 483, 341, 365, 613, 10855, 35193, 51528, 51528], "temperature": 0.0, "avg_logprob": -0.12607196777585952, "compression_ratio": 1.7205882352941178, "no_speech_prob": 6.276701469687396e-07}, {"id": 700, "seek": 405458, "start": 4054.58, "end": 4063.7, "text": " in the appropriate places, which gives us this, which is the same as this.", "tokens": [50364, 294, 264, 6854, 3190, 11, 597, 2709, 505, 341, 11, 597, 307, 264, 912, 382, 341, 13, 50820, 50820, 400, 370, 341, 3110, 300, 257, 45216, 307, 767, 257, 2121, 733, 295, 8141, 27290, 13, 51182, 51182, 467, 311, 257, 8141, 27290, 689, 456, 366, 512, 35193, 300, 366, 6806, 293, 512, 3547, 51428, 51428, 300, 366, 7579, 281, 312, 264, 912, 13, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.059000741189985134, "compression_ratio": 1.6608187134502923, "no_speech_prob": 8.851565667100658e-07}, {"id": 701, "seek": 405458, "start": 4063.7, "end": 4070.94, "text": " And so this shows that a convolution is actually a special kind of matrix multiplication.", "tokens": [50364, 294, 264, 6854, 3190, 11, 597, 2709, 505, 341, 11, 597, 307, 264, 912, 382, 341, 13, 50820, 50820, 400, 370, 341, 3110, 300, 257, 45216, 307, 767, 257, 2121, 733, 295, 8141, 27290, 13, 51182, 51182, 467, 311, 257, 8141, 27290, 689, 456, 366, 512, 35193, 300, 366, 6806, 293, 512, 3547, 51428, 51428, 300, 366, 7579, 281, 312, 264, 912, 13, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.059000741189985134, "compression_ratio": 1.6608187134502923, "no_speech_prob": 8.851565667100658e-07}, {"id": 702, "seek": 405458, "start": 4070.94, "end": 4075.86, "text": " It's a matrix multiplication where there are some zeros that are fixed and some numbers", "tokens": [50364, 294, 264, 6854, 3190, 11, 597, 2709, 505, 341, 11, 597, 307, 264, 912, 382, 341, 13, 50820, 50820, 400, 370, 341, 3110, 300, 257, 45216, 307, 767, 257, 2121, 733, 295, 8141, 27290, 13, 51182, 51182, 467, 311, 257, 8141, 27290, 689, 456, 366, 512, 35193, 300, 366, 6806, 293, 512, 3547, 51428, 51428, 300, 366, 7579, 281, 312, 264, 912, 13, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.059000741189985134, "compression_ratio": 1.6608187134502923, "no_speech_prob": 8.851565667100658e-07}, {"id": 703, "seek": 405458, "start": 4075.86, "end": 4078.54, "text": " that are forced to be the same.", "tokens": [50364, 294, 264, 6854, 3190, 11, 597, 2709, 505, 341, 11, 597, 307, 264, 912, 382, 341, 13, 50820, 50820, 400, 370, 341, 3110, 300, 257, 45216, 307, 767, 257, 2121, 733, 295, 8141, 27290, 13, 51182, 51182, 467, 311, 257, 8141, 27290, 689, 456, 366, 512, 35193, 300, 366, 6806, 293, 512, 3547, 51428, 51428, 300, 366, 7579, 281, 312, 264, 912, 13, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.059000741189985134, "compression_ratio": 1.6608187134502923, "no_speech_prob": 8.851565667100658e-07}, {"id": 704, "seek": 407854, "start": 4078.54, "end": 4086.7, "text": " Now in practice it's going to be faster to do it this way, but it's a useful kind of", "tokens": [50364, 823, 294, 3124, 309, 311, 516, 281, 312, 4663, 281, 360, 309, 341, 636, 11, 457, 309, 311, 257, 4420, 733, 295, 50772, 50772, 551, 281, 519, 466, 11, 286, 519, 11, 300, 445, 281, 4325, 411, 11, 1954, 11, 309, 311, 445, 1071, 295, 613, 51026, 51026, 2121, 3467, 295, 8141, 17596, 763, 13, 51380, 51380], "temperature": 0.0, "avg_logprob": -0.21068888195490432, "compression_ratio": 1.4557823129251701, "no_speech_prob": 3.446570417509065e-06}, {"id": 705, "seek": 407854, "start": 4086.7, "end": 4091.7799999999997, "text": " thing to think about, I think, that just to realize like, oh, it's just another of these", "tokens": [50364, 823, 294, 3124, 309, 311, 516, 281, 312, 4663, 281, 360, 309, 341, 636, 11, 457, 309, 311, 257, 4420, 733, 295, 50772, 50772, 551, 281, 519, 466, 11, 286, 519, 11, 300, 445, 281, 4325, 411, 11, 1954, 11, 309, 311, 445, 1071, 295, 613, 51026, 51026, 2121, 3467, 295, 8141, 17596, 763, 13, 51380, 51380], "temperature": 0.0, "avg_logprob": -0.21068888195490432, "compression_ratio": 1.4557823129251701, "no_speech_prob": 3.446570417509065e-06}, {"id": 706, "seek": 407854, "start": 4091.7799999999997, "end": 4098.86, "text": " special types of matrix multiplications.", "tokens": [50364, 823, 294, 3124, 309, 311, 516, 281, 312, 4663, 281, 360, 309, 341, 636, 11, 457, 309, 311, 257, 4420, 733, 295, 50772, 50772, 551, 281, 519, 466, 11, 286, 519, 11, 300, 445, 281, 4325, 411, 11, 1954, 11, 309, 311, 445, 1071, 295, 613, 51026, 51026, 2121, 3467, 295, 8141, 17596, 763, 13, 51380, 51380], "temperature": 0.0, "avg_logprob": -0.21068888195490432, "compression_ratio": 1.4557823129251701, "no_speech_prob": 3.446570417509065e-06}, {"id": 707, "seek": 409886, "start": 4098.86, "end": 4112.179999999999, "text": " Okay, I think, well, let's look at one more thing because there was one other thing that", "tokens": [50364, 1033, 11, 286, 519, 11, 731, 11, 718, 311, 574, 412, 472, 544, 551, 570, 456, 390, 472, 661, 551, 300, 51030, 51030, 321, 1866, 293, 286, 2835, 321, 576, 574, 412, 294, 264, 4421, 1040, 2316, 11, 597, 307, 1219, 3270, 346, 13, 51356, 51356, 400, 286, 767, 362, 341, 294, 452, 19060, 27733, 13, 51534, 51534], "temperature": 0.0, "avg_logprob": -0.1103798786799113, "compression_ratio": 1.4331210191082802, "no_speech_prob": 6.144151484477334e-06}, {"id": 708, "seek": 409886, "start": 4112.179999999999, "end": 4118.7, "text": " we saw and I mentioned we would look at in the tabular model, which is called dropout.", "tokens": [50364, 1033, 11, 286, 519, 11, 731, 11, 718, 311, 574, 412, 472, 544, 551, 570, 456, 390, 472, 661, 551, 300, 51030, 51030, 321, 1866, 293, 286, 2835, 321, 576, 574, 412, 294, 264, 4421, 1040, 2316, 11, 597, 307, 1219, 3270, 346, 13, 51356, 51356, 400, 286, 767, 362, 341, 294, 452, 19060, 27733, 13, 51534, 51534], "temperature": 0.0, "avg_logprob": -0.1103798786799113, "compression_ratio": 1.4331210191082802, "no_speech_prob": 6.144151484477334e-06}, {"id": 709, "seek": 409886, "start": 4118.7, "end": 4122.259999999999, "text": " And I actually have this in my Excel spreadsheet.", "tokens": [50364, 1033, 11, 286, 519, 11, 731, 11, 718, 311, 574, 412, 472, 544, 551, 570, 456, 390, 472, 661, 551, 300, 51030, 51030, 321, 1866, 293, 286, 2835, 321, 576, 574, 412, 294, 264, 4421, 1040, 2316, 11, 597, 307, 1219, 3270, 346, 13, 51356, 51356, 400, 286, 767, 362, 341, 294, 452, 19060, 27733, 13, 51534, 51534], "temperature": 0.0, "avg_logprob": -0.1103798786799113, "compression_ratio": 1.4331210191082802, "no_speech_prob": 6.144151484477334e-06}, {"id": 710, "seek": 412226, "start": 4122.26, "end": 4132.780000000001, "text": " If you go to the conv example dropout page, you'll see we've actually got a little bit", "tokens": [50364, 759, 291, 352, 281, 264, 3754, 1365, 3270, 346, 3028, 11, 291, 603, 536, 321, 600, 767, 658, 257, 707, 857, 50890, 50890, 544, 1507, 510, 13, 50948, 50948, 492, 600, 658, 264, 912, 4846, 382, 949, 293, 264, 912, 700, 45216, 382, 949, 293, 264, 912, 51212, 51212, 1150, 45216, 382, 949, 13, 51376, 51376], "temperature": 0.0, "avg_logprob": -0.11873697412425074, "compression_ratio": 1.6323529411764706, "no_speech_prob": 8.05943955128896e-07}, {"id": 711, "seek": 412226, "start": 4132.780000000001, "end": 4133.9400000000005, "text": " more stuff here.", "tokens": [50364, 759, 291, 352, 281, 264, 3754, 1365, 3270, 346, 3028, 11, 291, 603, 536, 321, 600, 767, 658, 257, 707, 857, 50890, 50890, 544, 1507, 510, 13, 50948, 50948, 492, 600, 658, 264, 912, 4846, 382, 949, 293, 264, 912, 700, 45216, 382, 949, 293, 264, 912, 51212, 51212, 1150, 45216, 382, 949, 13, 51376, 51376], "temperature": 0.0, "avg_logprob": -0.11873697412425074, "compression_ratio": 1.6323529411764706, "no_speech_prob": 8.05943955128896e-07}, {"id": 712, "seek": 412226, "start": 4133.9400000000005, "end": 4139.22, "text": " We've got the same input as before and the same first convolution as before and the same", "tokens": [50364, 759, 291, 352, 281, 264, 3754, 1365, 3270, 346, 3028, 11, 291, 603, 536, 321, 600, 767, 658, 257, 707, 857, 50890, 50890, 544, 1507, 510, 13, 50948, 50948, 492, 600, 658, 264, 912, 4846, 382, 949, 293, 264, 912, 700, 45216, 382, 949, 293, 264, 912, 51212, 51212, 1150, 45216, 382, 949, 13, 51376, 51376], "temperature": 0.0, "avg_logprob": -0.11873697412425074, "compression_ratio": 1.6323529411764706, "no_speech_prob": 8.05943955128896e-07}, {"id": 713, "seek": 412226, "start": 4139.22, "end": 4142.5, "text": " second convolution as before.", "tokens": [50364, 759, 291, 352, 281, 264, 3754, 1365, 3270, 346, 3028, 11, 291, 603, 536, 321, 600, 767, 658, 257, 707, 857, 50890, 50890, 544, 1507, 510, 13, 50948, 50948, 492, 600, 658, 264, 912, 4846, 382, 949, 293, 264, 912, 700, 45216, 382, 949, 293, 264, 912, 51212, 51212, 1150, 45216, 382, 949, 13, 51376, 51376], "temperature": 0.0, "avg_logprob": -0.11873697412425074, "compression_ratio": 1.6323529411764706, "no_speech_prob": 8.05943955128896e-07}, {"id": 714, "seek": 414250, "start": 4142.5, "end": 4152.54, "text": " And then we've got a bunch of random numbers.", "tokens": [50364, 400, 550, 321, 600, 658, 257, 3840, 295, 4974, 3547, 13, 50866, 50866, 814, 434, 4099, 382, 1296, 1958, 293, 502, 11, 457, 436, 434, 767, 11, 300, 311, 445, 570, 436, 434, 48237, 51118, 51118, 766, 11, 436, 434, 767, 4974, 3547, 1296, 11, 291, 458, 11, 300, 366, 37878, 1296, 1958, 293, 502, 13, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.15872761408487956, "compression_ratio": 1.6126760563380282, "no_speech_prob": 8.446217520940991e-07}, {"id": 715, "seek": 414250, "start": 4152.54, "end": 4157.58, "text": " They're showing as between 0 and 1, but they're actually, that's just because they're rounding", "tokens": [50364, 400, 550, 321, 600, 658, 257, 3840, 295, 4974, 3547, 13, 50866, 50866, 814, 434, 4099, 382, 1296, 1958, 293, 502, 11, 457, 436, 434, 767, 11, 300, 311, 445, 570, 436, 434, 48237, 51118, 51118, 766, 11, 436, 434, 767, 4974, 3547, 1296, 11, 291, 458, 11, 300, 366, 37878, 1296, 1958, 293, 502, 13, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.15872761408487956, "compression_ratio": 1.6126760563380282, "no_speech_prob": 8.446217520940991e-07}, {"id": 716, "seek": 414250, "start": 4157.58, "end": 4166.86, "text": " off, they're actually random numbers between, you know, that are floats between 0 and 1.", "tokens": [50364, 400, 550, 321, 600, 658, 257, 3840, 295, 4974, 3547, 13, 50866, 50866, 814, 434, 4099, 382, 1296, 1958, 293, 502, 11, 457, 436, 434, 767, 11, 300, 311, 445, 570, 436, 434, 48237, 51118, 51118, 766, 11, 436, 434, 767, 4974, 3547, 1296, 11, 291, 458, 11, 300, 366, 37878, 1296, 1958, 293, 502, 13, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.15872761408487956, "compression_ratio": 1.6126760563380282, "no_speech_prob": 8.446217520940991e-07}, {"id": 717, "seek": 416686, "start": 4166.86, "end": 4183.38, "text": " Over here, we're then saying if, let's have a look.", "tokens": [50364, 4886, 510, 11, 321, 434, 550, 1566, 498, 11, 718, 311, 362, 257, 574, 13, 51190, 51190, 407, 636, 493, 510, 11, 286, 603, 8863, 294, 257, 857, 11, 286, 600, 658, 257, 3270, 346, 5952, 13, 51516, 51516, 961, 311, 1319, 341, 11, 584, 11, 281, 1958, 13, 20, 13, 51646, 51646, 821, 321, 352, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21952213224817496, "compression_ratio": 1.213740458015267, "no_speech_prob": 8.267834346042946e-06}, {"id": 718, "seek": 416686, "start": 4183.38, "end": 4189.9, "text": " So way up here, I'll zoom in a bit, I've got a dropout factor.", "tokens": [50364, 4886, 510, 11, 321, 434, 550, 1566, 498, 11, 718, 311, 362, 257, 574, 13, 51190, 51190, 407, 636, 493, 510, 11, 286, 603, 8863, 294, 257, 857, 11, 286, 600, 658, 257, 3270, 346, 5952, 13, 51516, 51516, 961, 311, 1319, 341, 11, 584, 11, 281, 1958, 13, 20, 13, 51646, 51646, 821, 321, 352, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21952213224817496, "compression_ratio": 1.213740458015267, "no_speech_prob": 8.267834346042946e-06}, {"id": 719, "seek": 416686, "start": 4189.9, "end": 4192.5, "text": " Let's change this, say, to 0.5.", "tokens": [50364, 4886, 510, 11, 321, 434, 550, 1566, 498, 11, 718, 311, 362, 257, 574, 13, 51190, 51190, 407, 636, 493, 510, 11, 286, 603, 8863, 294, 257, 857, 11, 286, 600, 658, 257, 3270, 346, 5952, 13, 51516, 51516, 961, 311, 1319, 341, 11, 584, 11, 281, 1958, 13, 20, 13, 51646, 51646, 821, 321, 352, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21952213224817496, "compression_ratio": 1.213740458015267, "no_speech_prob": 8.267834346042946e-06}, {"id": 720, "seek": 416686, "start": 4192.5, "end": 4196.0199999999995, "text": " There we go.", "tokens": [50364, 4886, 510, 11, 321, 434, 550, 1566, 498, 11, 718, 311, 362, 257, 574, 13, 51190, 51190, 407, 636, 493, 510, 11, 286, 603, 8863, 294, 257, 857, 11, 286, 600, 658, 257, 3270, 346, 5952, 13, 51516, 51516, 961, 311, 1319, 341, 11, 584, 11, 281, 1958, 13, 20, 13, 51646, 51646, 821, 321, 352, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21952213224817496, "compression_ratio": 1.213740458015267, "no_speech_prob": 8.267834346042946e-06}, {"id": 721, "seek": 419602, "start": 4196.02, "end": 4202.400000000001, "text": " So over here, this is something that says if the random number in the equivalent place", "tokens": [50364, 407, 670, 510, 11, 341, 307, 746, 300, 1619, 498, 264, 4974, 1230, 294, 264, 10344, 1081, 50683, 50683, 307, 5044, 813, 1958, 13, 20, 11, 550, 502, 11, 5911, 1958, 13, 50980, 50980, 400, 370, 510, 311, 257, 1379, 3840, 295, 502, 82, 293, 1958, 82, 13, 51092, 51092, 823, 341, 551, 510, 307, 1219, 257, 3270, 346, 6094, 13, 51300, 51300, 823, 437, 2314, 307, 321, 12972, 670, 510, 11, 321, 12972, 264, 3270, 346, 6094, 11, 293, 321, 12972, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.09877532027488531, "compression_ratio": 1.6486486486486487, "no_speech_prob": 3.393139422769309e-06}, {"id": 722, "seek": 419602, "start": 4202.400000000001, "end": 4208.34, "text": " is greater than 0.5, then 1, otherwise 0.", "tokens": [50364, 407, 670, 510, 11, 341, 307, 746, 300, 1619, 498, 264, 4974, 1230, 294, 264, 10344, 1081, 50683, 50683, 307, 5044, 813, 1958, 13, 20, 11, 550, 502, 11, 5911, 1958, 13, 50980, 50980, 400, 370, 510, 311, 257, 1379, 3840, 295, 502, 82, 293, 1958, 82, 13, 51092, 51092, 823, 341, 551, 510, 307, 1219, 257, 3270, 346, 6094, 13, 51300, 51300, 823, 437, 2314, 307, 321, 12972, 670, 510, 11, 321, 12972, 264, 3270, 346, 6094, 11, 293, 321, 12972, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.09877532027488531, "compression_ratio": 1.6486486486486487, "no_speech_prob": 3.393139422769309e-06}, {"id": 723, "seek": 419602, "start": 4208.34, "end": 4210.580000000001, "text": " And so here's a whole bunch of 1s and 0s.", "tokens": [50364, 407, 670, 510, 11, 341, 307, 746, 300, 1619, 498, 264, 4974, 1230, 294, 264, 10344, 1081, 50683, 50683, 307, 5044, 813, 1958, 13, 20, 11, 550, 502, 11, 5911, 1958, 13, 50980, 50980, 400, 370, 510, 311, 257, 1379, 3840, 295, 502, 82, 293, 1958, 82, 13, 51092, 51092, 823, 341, 551, 510, 307, 1219, 257, 3270, 346, 6094, 13, 51300, 51300, 823, 437, 2314, 307, 321, 12972, 670, 510, 11, 321, 12972, 264, 3270, 346, 6094, 11, 293, 321, 12972, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.09877532027488531, "compression_ratio": 1.6486486486486487, "no_speech_prob": 3.393139422769309e-06}, {"id": 724, "seek": 419602, "start": 4210.580000000001, "end": 4214.740000000001, "text": " Now this thing here is called a dropout mask.", "tokens": [50364, 407, 670, 510, 11, 341, 307, 746, 300, 1619, 498, 264, 4974, 1230, 294, 264, 10344, 1081, 50683, 50683, 307, 5044, 813, 1958, 13, 20, 11, 550, 502, 11, 5911, 1958, 13, 50980, 50980, 400, 370, 510, 311, 257, 1379, 3840, 295, 502, 82, 293, 1958, 82, 13, 51092, 51092, 823, 341, 551, 510, 307, 1219, 257, 3270, 346, 6094, 13, 51300, 51300, 823, 437, 2314, 307, 321, 12972, 670, 510, 11, 321, 12972, 264, 3270, 346, 6094, 11, 293, 321, 12972, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.09877532027488531, "compression_ratio": 1.6486486486486487, "no_speech_prob": 3.393139422769309e-06}, {"id": 725, "seek": 419602, "start": 4214.740000000001, "end": 4223.9800000000005, "text": " Now what happens is we multiply over here, we multiply the dropout mask, and we multiply", "tokens": [50364, 407, 670, 510, 11, 341, 307, 746, 300, 1619, 498, 264, 4974, 1230, 294, 264, 10344, 1081, 50683, 50683, 307, 5044, 813, 1958, 13, 20, 11, 550, 502, 11, 5911, 1958, 13, 50980, 50980, 400, 370, 510, 311, 257, 1379, 3840, 295, 502, 82, 293, 1958, 82, 13, 51092, 51092, 823, 341, 551, 510, 307, 1219, 257, 3270, 346, 6094, 13, 51300, 51300, 823, 437, 2314, 307, 321, 12972, 670, 510, 11, 321, 12972, 264, 3270, 346, 6094, 11, 293, 321, 12972, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.09877532027488531, "compression_ratio": 1.6486486486486487, "no_speech_prob": 3.393139422769309e-06}, {"id": 726, "seek": 422398, "start": 4223.98, "end": 4228.099999999999, "text": " it by our filtered image.", "tokens": [50364, 309, 538, 527, 37111, 3256, 13, 50570, 50570, 400, 437, 300, 1355, 307, 321, 917, 493, 365, 2293, 264, 912, 3256, 321, 1409, 365, 13, 50912, 50912, 1692, 311, 264, 3256, 321, 1409, 365, 13, 51018, 51018, 583, 309, 311, 39480, 13, 51229, 51229, 37603, 9239, 295, 309, 362, 668, 22981, 13, 51334, 51334, 400, 2361, 322, 264, 2372, 295, 3270, 346, 321, 764, 11, 370, 498, 321, 1319, 309, 281, 11, 584, 11, 1958, 13, 17, 11, 406, 588, 51697, 51697], "temperature": 0.0, "avg_logprob": -0.11082201912289574, "compression_ratio": 1.5414364640883977, "no_speech_prob": 9.570811698722537e-07}, {"id": 727, "seek": 422398, "start": 4228.099999999999, "end": 4234.94, "text": " And what that means is we end up with exactly the same image we started with.", "tokens": [50364, 309, 538, 527, 37111, 3256, 13, 50570, 50570, 400, 437, 300, 1355, 307, 321, 917, 493, 365, 2293, 264, 912, 3256, 321, 1409, 365, 13, 50912, 50912, 1692, 311, 264, 3256, 321, 1409, 365, 13, 51018, 51018, 583, 309, 311, 39480, 13, 51229, 51229, 37603, 9239, 295, 309, 362, 668, 22981, 13, 51334, 51334, 400, 2361, 322, 264, 2372, 295, 3270, 346, 321, 764, 11, 370, 498, 321, 1319, 309, 281, 11, 584, 11, 1958, 13, 17, 11, 406, 588, 51697, 51697], "temperature": 0.0, "avg_logprob": -0.11082201912289574, "compression_ratio": 1.5414364640883977, "no_speech_prob": 9.570811698722537e-07}, {"id": 728, "seek": 422398, "start": 4234.94, "end": 4237.0599999999995, "text": " Here's the image we started with.", "tokens": [50364, 309, 538, 527, 37111, 3256, 13, 50570, 50570, 400, 437, 300, 1355, 307, 321, 917, 493, 365, 2293, 264, 912, 3256, 321, 1409, 365, 13, 50912, 50912, 1692, 311, 264, 3256, 321, 1409, 365, 13, 51018, 51018, 583, 309, 311, 39480, 13, 51229, 51229, 37603, 9239, 295, 309, 362, 668, 22981, 13, 51334, 51334, 400, 2361, 322, 264, 2372, 295, 3270, 346, 321, 764, 11, 370, 498, 321, 1319, 309, 281, 11, 584, 11, 1958, 13, 17, 11, 406, 588, 51697, 51697], "temperature": 0.0, "avg_logprob": -0.11082201912289574, "compression_ratio": 1.5414364640883977, "no_speech_prob": 9.570811698722537e-07}, {"id": 729, "seek": 422398, "start": 4237.0599999999995, "end": 4241.28, "text": " But it's corrupted.", "tokens": [50364, 309, 538, 527, 37111, 3256, 13, 50570, 50570, 400, 437, 300, 1355, 307, 321, 917, 493, 365, 2293, 264, 912, 3256, 321, 1409, 365, 13, 50912, 50912, 1692, 311, 264, 3256, 321, 1409, 365, 13, 51018, 51018, 583, 309, 311, 39480, 13, 51229, 51229, 37603, 9239, 295, 309, 362, 668, 22981, 13, 51334, 51334, 400, 2361, 322, 264, 2372, 295, 3270, 346, 321, 764, 11, 370, 498, 321, 1319, 309, 281, 11, 584, 11, 1958, 13, 17, 11, 406, 588, 51697, 51697], "temperature": 0.0, "avg_logprob": -0.11082201912289574, "compression_ratio": 1.5414364640883977, "no_speech_prob": 9.570811698722537e-07}, {"id": 730, "seek": 422398, "start": 4241.28, "end": 4243.379999999999, "text": " Random bits of it have been deleted.", "tokens": [50364, 309, 538, 527, 37111, 3256, 13, 50570, 50570, 400, 437, 300, 1355, 307, 321, 917, 493, 365, 2293, 264, 912, 3256, 321, 1409, 365, 13, 50912, 50912, 1692, 311, 264, 3256, 321, 1409, 365, 13, 51018, 51018, 583, 309, 311, 39480, 13, 51229, 51229, 37603, 9239, 295, 309, 362, 668, 22981, 13, 51334, 51334, 400, 2361, 322, 264, 2372, 295, 3270, 346, 321, 764, 11, 370, 498, 321, 1319, 309, 281, 11, 584, 11, 1958, 13, 17, 11, 406, 588, 51697, 51697], "temperature": 0.0, "avg_logprob": -0.11082201912289574, "compression_ratio": 1.5414364640883977, "no_speech_prob": 9.570811698722537e-07}, {"id": 731, "seek": 422398, "start": 4243.379999999999, "end": 4250.639999999999, "text": " And based on the amount of dropout we use, so if we change it to, say, 0.2, not very", "tokens": [50364, 309, 538, 527, 37111, 3256, 13, 50570, 50570, 400, 437, 300, 1355, 307, 321, 917, 493, 365, 2293, 264, 912, 3256, 321, 1409, 365, 13, 50912, 50912, 1692, 311, 264, 3256, 321, 1409, 365, 13, 51018, 51018, 583, 309, 311, 39480, 13, 51229, 51229, 37603, 9239, 295, 309, 362, 668, 22981, 13, 51334, 51334, 400, 2361, 322, 264, 2372, 295, 3270, 346, 321, 764, 11, 370, 498, 321, 1319, 309, 281, 11, 584, 11, 1958, 13, 17, 11, 406, 588, 51697, 51697], "temperature": 0.0, "avg_logprob": -0.11082201912289574, "compression_ratio": 1.5414364640883977, "no_speech_prob": 9.570811698722537e-07}, {"id": 732, "seek": 425064, "start": 4250.64, "end": 4254.3, "text": " much of it's deleted at all, so it's still very easy to recognize.", "tokens": [50364, 709, 295, 309, 311, 22981, 412, 439, 11, 370, 309, 311, 920, 588, 1858, 281, 5521, 13, 50547, 50547, 1610, 1646, 498, 321, 764, 3195, 295, 3270, 7711, 11, 584, 1958, 13, 23, 11, 309, 311, 1920, 6243, 281, 536, 437, 264, 1230, 50829, 50829, 390, 13, 51015, 51015, 400, 550, 321, 764, 341, 382, 264, 4846, 281, 264, 958, 4583, 13, 51279, 51279, 407, 300, 2544, 3657, 13, 51395, 51395], "temperature": 0.0, "avg_logprob": -0.144069397286193, "compression_ratio": 1.4216867469879517, "no_speech_prob": 6.375540806402569e-07}, {"id": 733, "seek": 425064, "start": 4254.3, "end": 4259.9400000000005, "text": " Or else if we use lots of dropouts, say 0.8, it's almost impossible to see what the number", "tokens": [50364, 709, 295, 309, 311, 22981, 412, 439, 11, 370, 309, 311, 920, 588, 1858, 281, 5521, 13, 50547, 50547, 1610, 1646, 498, 321, 764, 3195, 295, 3270, 7711, 11, 584, 1958, 13, 23, 11, 309, 311, 1920, 6243, 281, 536, 437, 264, 1230, 50829, 50829, 390, 13, 51015, 51015, 400, 550, 321, 764, 341, 382, 264, 4846, 281, 264, 958, 4583, 13, 51279, 51279, 407, 300, 2544, 3657, 13, 51395, 51395], "temperature": 0.0, "avg_logprob": -0.144069397286193, "compression_ratio": 1.4216867469879517, "no_speech_prob": 6.375540806402569e-07}, {"id": 734, "seek": 425064, "start": 4259.9400000000005, "end": 4263.660000000001, "text": " was.", "tokens": [50364, 709, 295, 309, 311, 22981, 412, 439, 11, 370, 309, 311, 920, 588, 1858, 281, 5521, 13, 50547, 50547, 1610, 1646, 498, 321, 764, 3195, 295, 3270, 7711, 11, 584, 1958, 13, 23, 11, 309, 311, 1920, 6243, 281, 536, 437, 264, 1230, 50829, 50829, 390, 13, 51015, 51015, 400, 550, 321, 764, 341, 382, 264, 4846, 281, 264, 958, 4583, 13, 51279, 51279, 407, 300, 2544, 3657, 13, 51395, 51395], "temperature": 0.0, "avg_logprob": -0.144069397286193, "compression_ratio": 1.4216867469879517, "no_speech_prob": 6.375540806402569e-07}, {"id": 735, "seek": 425064, "start": 4263.660000000001, "end": 4268.9400000000005, "text": " And then we use this as the input to the next layer.", "tokens": [50364, 709, 295, 309, 311, 22981, 412, 439, 11, 370, 309, 311, 920, 588, 1858, 281, 5521, 13, 50547, 50547, 1610, 1646, 498, 321, 764, 3195, 295, 3270, 7711, 11, 584, 1958, 13, 23, 11, 309, 311, 1920, 6243, 281, 536, 437, 264, 1230, 50829, 50829, 390, 13, 51015, 51015, 400, 550, 321, 764, 341, 382, 264, 4846, 281, 264, 958, 4583, 13, 51279, 51279, 407, 300, 2544, 3657, 13, 51395, 51395], "temperature": 0.0, "avg_logprob": -0.144069397286193, "compression_ratio": 1.4216867469879517, "no_speech_prob": 6.375540806402569e-07}, {"id": 736, "seek": 425064, "start": 4268.9400000000005, "end": 4271.26, "text": " So that seems weird.", "tokens": [50364, 709, 295, 309, 311, 22981, 412, 439, 11, 370, 309, 311, 920, 588, 1858, 281, 5521, 13, 50547, 50547, 1610, 1646, 498, 321, 764, 3195, 295, 3270, 7711, 11, 584, 1958, 13, 23, 11, 309, 311, 1920, 6243, 281, 536, 437, 264, 1230, 50829, 50829, 390, 13, 51015, 51015, 400, 550, 321, 764, 341, 382, 264, 4846, 281, 264, 958, 4583, 13, 51279, 51279, 407, 300, 2544, 3657, 13, 51395, 51395], "temperature": 0.0, "avg_logprob": -0.144069397286193, "compression_ratio": 1.4216867469879517, "no_speech_prob": 6.375540806402569e-07}, {"id": 737, "seek": 427126, "start": 4271.26, "end": 4282.06, "text": " Why would we delete some data at random from our processed image, from our activations", "tokens": [50364, 1545, 576, 321, 12097, 512, 1412, 412, 4974, 490, 527, 18846, 3256, 11, 490, 527, 2430, 763, 50904, 50904, 934, 257, 4583, 295, 264, 3754, 15892, 30, 51044, 51044, 1042, 264, 1778, 307, 300, 257, 1952, 307, 1075, 281, 574, 412, 341, 39480, 3256, 293, 920, 5521, 51362, 51362, 309, 311, 257, 1614, 13, 51464, 51464, 400, 264, 1558, 307, 300, 257, 3820, 820, 312, 1075, 281, 382, 731, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.0854260405978641, "compression_ratio": 1.540983606557377, "no_speech_prob": 4.0525364397581143e-07}, {"id": 738, "seek": 427126, "start": 4282.06, "end": 4284.860000000001, "text": " after a layer of the convolutions?", "tokens": [50364, 1545, 576, 321, 12097, 512, 1412, 412, 4974, 490, 527, 18846, 3256, 11, 490, 527, 2430, 763, 50904, 50904, 934, 257, 4583, 295, 264, 3754, 15892, 30, 51044, 51044, 1042, 264, 1778, 307, 300, 257, 1952, 307, 1075, 281, 574, 412, 341, 39480, 3256, 293, 920, 5521, 51362, 51362, 309, 311, 257, 1614, 13, 51464, 51464, 400, 264, 1558, 307, 300, 257, 3820, 820, 312, 1075, 281, 382, 731, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.0854260405978641, "compression_ratio": 1.540983606557377, "no_speech_prob": 4.0525364397581143e-07}, {"id": 739, "seek": 427126, "start": 4284.860000000001, "end": 4291.22, "text": " Well the reason is that a human is able to look at this corrupted image and still recognize", "tokens": [50364, 1545, 576, 321, 12097, 512, 1412, 412, 4974, 490, 527, 18846, 3256, 11, 490, 527, 2430, 763, 50904, 50904, 934, 257, 4583, 295, 264, 3754, 15892, 30, 51044, 51044, 1042, 264, 1778, 307, 300, 257, 1952, 307, 1075, 281, 574, 412, 341, 39480, 3256, 293, 920, 5521, 51362, 51362, 309, 311, 257, 1614, 13, 51464, 51464, 400, 264, 1558, 307, 300, 257, 3820, 820, 312, 1075, 281, 382, 731, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.0854260405978641, "compression_ratio": 1.540983606557377, "no_speech_prob": 4.0525364397581143e-07}, {"id": 740, "seek": 427126, "start": 4291.22, "end": 4293.26, "text": " it's a 7.", "tokens": [50364, 1545, 576, 321, 12097, 512, 1412, 412, 4974, 490, 527, 18846, 3256, 11, 490, 527, 2430, 763, 50904, 50904, 934, 257, 4583, 295, 264, 3754, 15892, 30, 51044, 51044, 1042, 264, 1778, 307, 300, 257, 1952, 307, 1075, 281, 574, 412, 341, 39480, 3256, 293, 920, 5521, 51362, 51362, 309, 311, 257, 1614, 13, 51464, 51464, 400, 264, 1558, 307, 300, 257, 3820, 820, 312, 1075, 281, 382, 731, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.0854260405978641, "compression_ratio": 1.540983606557377, "no_speech_prob": 4.0525364397581143e-07}, {"id": 741, "seek": 427126, "start": 4293.26, "end": 4297.5, "text": " And the idea is that a computer should be able to as well.", "tokens": [50364, 1545, 576, 321, 12097, 512, 1412, 412, 4974, 490, 527, 18846, 3256, 11, 490, 527, 2430, 763, 50904, 50904, 934, 257, 4583, 295, 264, 3754, 15892, 30, 51044, 51044, 1042, 264, 1778, 307, 300, 257, 1952, 307, 1075, 281, 574, 412, 341, 39480, 3256, 293, 920, 5521, 51362, 51362, 309, 311, 257, 1614, 13, 51464, 51464, 400, 264, 1558, 307, 300, 257, 3820, 820, 312, 1075, 281, 382, 731, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.0854260405978641, "compression_ratio": 1.540983606557377, "no_speech_prob": 4.0525364397581143e-07}, {"id": 742, "seek": 429750, "start": 4297.5, "end": 4306.5, "text": " And if we randomly delete different bits of the activations each time, then the computer", "tokens": [50364, 400, 498, 321, 16979, 12097, 819, 9239, 295, 264, 2430, 763, 1184, 565, 11, 550, 264, 3820, 50814, 50814, 307, 7579, 281, 1466, 264, 14217, 957, 10290, 2831, 813, 670, 69, 2414, 13, 51212, 51212, 509, 393, 519, 295, 341, 382, 1412, 14501, 19631, 11, 457, 309, 311, 1412, 14501, 19631, 406, 337, 264, 15743, 11, 51524, 51524, 457, 1412, 14501, 19631, 337, 264, 2430, 763, 13, 51658, 51658, 407, 341, 307, 1219, 257, 3270, 346, 4583, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1067655144668207, "compression_ratio": 1.7142857142857142, "no_speech_prob": 4.4508442442747764e-07}, {"id": 743, "seek": 429750, "start": 4306.5, "end": 4314.46, "text": " is forced to learn the underlying real representation rather than overfitting.", "tokens": [50364, 400, 498, 321, 16979, 12097, 819, 9239, 295, 264, 2430, 763, 1184, 565, 11, 550, 264, 3820, 50814, 50814, 307, 7579, 281, 1466, 264, 14217, 957, 10290, 2831, 813, 670, 69, 2414, 13, 51212, 51212, 509, 393, 519, 295, 341, 382, 1412, 14501, 19631, 11, 457, 309, 311, 1412, 14501, 19631, 406, 337, 264, 15743, 11, 51524, 51524, 457, 1412, 14501, 19631, 337, 264, 2430, 763, 13, 51658, 51658, 407, 341, 307, 1219, 257, 3270, 346, 4583, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1067655144668207, "compression_ratio": 1.7142857142857142, "no_speech_prob": 4.4508442442747764e-07}, {"id": 744, "seek": 429750, "start": 4314.46, "end": 4320.7, "text": " You can think of this as data augmentation, but it's data augmentation not for the inputs,", "tokens": [50364, 400, 498, 321, 16979, 12097, 819, 9239, 295, 264, 2430, 763, 1184, 565, 11, 550, 264, 3820, 50814, 50814, 307, 7579, 281, 1466, 264, 14217, 957, 10290, 2831, 813, 670, 69, 2414, 13, 51212, 51212, 509, 393, 519, 295, 341, 382, 1412, 14501, 19631, 11, 457, 309, 311, 1412, 14501, 19631, 406, 337, 264, 15743, 11, 51524, 51524, 457, 1412, 14501, 19631, 337, 264, 2430, 763, 13, 51658, 51658, 407, 341, 307, 1219, 257, 3270, 346, 4583, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1067655144668207, "compression_ratio": 1.7142857142857142, "no_speech_prob": 4.4508442442747764e-07}, {"id": 745, "seek": 429750, "start": 4320.7, "end": 4323.38, "text": " but data augmentation for the activations.", "tokens": [50364, 400, 498, 321, 16979, 12097, 819, 9239, 295, 264, 2430, 763, 1184, 565, 11, 550, 264, 3820, 50814, 50814, 307, 7579, 281, 1466, 264, 14217, 957, 10290, 2831, 813, 670, 69, 2414, 13, 51212, 51212, 509, 393, 519, 295, 341, 382, 1412, 14501, 19631, 11, 457, 309, 311, 1412, 14501, 19631, 406, 337, 264, 15743, 11, 51524, 51524, 457, 1412, 14501, 19631, 337, 264, 2430, 763, 13, 51658, 51658, 407, 341, 307, 1219, 257, 3270, 346, 4583, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1067655144668207, "compression_ratio": 1.7142857142857142, "no_speech_prob": 4.4508442442747764e-07}, {"id": 746, "seek": 429750, "start": 4323.38, "end": 4327.1, "text": " So this is called a dropout layer.", "tokens": [50364, 400, 498, 321, 16979, 12097, 819, 9239, 295, 264, 2430, 763, 1184, 565, 11, 550, 264, 3820, 50814, 50814, 307, 7579, 281, 1466, 264, 14217, 957, 10290, 2831, 813, 670, 69, 2414, 13, 51212, 51212, 509, 393, 519, 295, 341, 382, 1412, 14501, 19631, 11, 457, 309, 311, 1412, 14501, 19631, 406, 337, 264, 15743, 11, 51524, 51524, 457, 1412, 14501, 19631, 337, 264, 2430, 763, 13, 51658, 51658, 407, 341, 307, 1219, 257, 3270, 346, 4583, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1067655144668207, "compression_ratio": 1.7142857142857142, "no_speech_prob": 4.4508442442747764e-07}, {"id": 747, "seek": 432710, "start": 4327.1, "end": 4334.18, "text": " And so dropout layers are really helpful for avoiding overfitting.", "tokens": [50364, 400, 370, 3270, 346, 7914, 366, 534, 4961, 337, 20220, 670, 69, 2414, 13, 50718, 50718, 400, 291, 393, 4536, 577, 709, 291, 528, 281, 18577, 1296, 665, 2674, 2144, 11, 370, 20220, 670, 69, 2414, 11, 51416, 51416, 5717, 1242, 746, 300, 1985, 534, 731, 322, 264, 3097, 1412, 13, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.11464548977938566, "compression_ratio": 1.5253164556962024, "no_speech_prob": 4.356865701993229e-06}, {"id": 748, "seek": 432710, "start": 4334.18, "end": 4348.14, "text": " And you can decide how much you want to compromise between good generalization, so avoiding overfitting,", "tokens": [50364, 400, 370, 3270, 346, 7914, 366, 534, 4961, 337, 20220, 670, 69, 2414, 13, 50718, 50718, 400, 291, 393, 4536, 577, 709, 291, 528, 281, 18577, 1296, 665, 2674, 2144, 11, 370, 20220, 670, 69, 2414, 11, 51416, 51416, 5717, 1242, 746, 300, 1985, 534, 731, 322, 264, 3097, 1412, 13, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.11464548977938566, "compression_ratio": 1.5253164556962024, "no_speech_prob": 4.356865701993229e-06}, {"id": 749, "seek": 432710, "start": 4348.14, "end": 4352.38, "text": " versus getting something that works really well on the training data.", "tokens": [50364, 400, 370, 3270, 346, 7914, 366, 534, 4961, 337, 20220, 670, 69, 2414, 13, 50718, 50718, 400, 291, 393, 4536, 577, 709, 291, 528, 281, 18577, 1296, 665, 2674, 2144, 11, 370, 20220, 670, 69, 2414, 11, 51416, 51416, 5717, 1242, 746, 300, 1985, 534, 731, 322, 264, 3097, 1412, 13, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.11464548977938566, "compression_ratio": 1.5253164556962024, "no_speech_prob": 4.356865701993229e-06}, {"id": 750, "seek": 435238, "start": 4352.38, "end": 4357.5, "text": " And so the more dropout you use, the less good it's going to be on the training data,", "tokens": [50364, 400, 370, 264, 544, 3270, 346, 291, 764, 11, 264, 1570, 665, 309, 311, 516, 281, 312, 322, 264, 3097, 1412, 11, 50620, 50620, 457, 264, 1101, 309, 13416, 281, 2674, 1125, 13, 50922, 50922, 400, 370, 341, 1487, 490, 257, 3035, 538, 28721, 389, 12442, 311, 1594, 1596, 257, 1326, 924, 2057, 586, 13, 51364, 51364, 13155, 8658, 311, 586, 412, 6373, 286, 519, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.13787065233503068, "compression_ratio": 1.4142011834319526, "no_speech_prob": 1.5779585282871267e-06}, {"id": 751, "seek": 435238, "start": 4357.5, "end": 4363.54, "text": " but the better it ought to generalize.", "tokens": [50364, 400, 370, 264, 544, 3270, 346, 291, 764, 11, 264, 1570, 665, 309, 311, 516, 281, 312, 322, 264, 3097, 1412, 11, 50620, 50620, 457, 264, 1101, 309, 13416, 281, 2674, 1125, 13, 50922, 50922, 400, 370, 341, 1487, 490, 257, 3035, 538, 28721, 389, 12442, 311, 1594, 1596, 257, 1326, 924, 2057, 586, 13, 51364, 51364, 13155, 8658, 311, 586, 412, 6373, 286, 519, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.13787065233503068, "compression_ratio": 1.4142011834319526, "no_speech_prob": 1.5779585282871267e-06}, {"id": 752, "seek": 435238, "start": 4363.54, "end": 4372.38, "text": " And so this comes from a paper by Jeffrey Hinton's group quite a few years ago now.", "tokens": [50364, 400, 370, 264, 544, 3270, 346, 291, 764, 11, 264, 1570, 665, 309, 311, 516, 281, 312, 322, 264, 3097, 1412, 11, 50620, 50620, 457, 264, 1101, 309, 13416, 281, 2674, 1125, 13, 50922, 50922, 400, 370, 341, 1487, 490, 257, 3035, 538, 28721, 389, 12442, 311, 1594, 1596, 257, 1326, 924, 2057, 586, 13, 51364, 51364, 13155, 8658, 311, 586, 412, 6373, 286, 519, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.13787065233503068, "compression_ratio": 1.4142011834319526, "no_speech_prob": 1.5779585282871267e-06}, {"id": 753, "seek": 435238, "start": 4372.38, "end": 4377.42, "text": " Ruslan's now at Apple I think.", "tokens": [50364, 400, 370, 264, 544, 3270, 346, 291, 764, 11, 264, 1570, 665, 309, 311, 516, 281, 312, 322, 264, 3097, 1412, 11, 50620, 50620, 457, 264, 1101, 309, 13416, 281, 2674, 1125, 13, 50922, 50922, 400, 370, 341, 1487, 490, 257, 3035, 538, 28721, 389, 12442, 311, 1594, 1596, 257, 1326, 924, 2057, 586, 13, 51364, 51364, 13155, 8658, 311, 586, 412, 6373, 286, 519, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.13787065233503068, "compression_ratio": 1.4142011834319526, "no_speech_prob": 1.5779585282871267e-06}, {"id": 754, "seek": 437742, "start": 4377.42, "end": 4383.84, "text": " And then Kujewski and Hinton went on to found Google Brain.", "tokens": [50364, 400, 550, 591, 4579, 1023, 18020, 293, 389, 12442, 1437, 322, 281, 1352, 3329, 29783, 13, 50685, 50685, 400, 291, 393, 536, 510, 436, 600, 658, 341, 3036, 295, 257, 4498, 4582, 18161, 3209, 11, 732, 7914, 50900, 50900, 445, 411, 264, 472, 321, 3094, 13, 50996, 50996, 400, 510, 11, 574, 11, 436, 434, 16979, 48946, 512, 295, 264, 2430, 763, 13, 51161, 51161, 400, 439, 300, 311, 1411, 307, 613, 9271, 13, 51300, 51300, 400, 370, 300, 311, 257, 819, 3840, 300, 311, 516, 281, 312, 22981, 1184, 15245, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.16674522558848062, "compression_ratio": 1.5973451327433628, "no_speech_prob": 1.267919287784025e-06}, {"id": 755, "seek": 437742, "start": 4383.84, "end": 4388.14, "text": " And you can see here they've got this picture of a fully connected neural network, two layers", "tokens": [50364, 400, 550, 591, 4579, 1023, 18020, 293, 389, 12442, 1437, 322, 281, 1352, 3329, 29783, 13, 50685, 50685, 400, 291, 393, 536, 510, 436, 600, 658, 341, 3036, 295, 257, 4498, 4582, 18161, 3209, 11, 732, 7914, 50900, 50900, 445, 411, 264, 472, 321, 3094, 13, 50996, 50996, 400, 510, 11, 574, 11, 436, 434, 16979, 48946, 512, 295, 264, 2430, 763, 13, 51161, 51161, 400, 439, 300, 311, 1411, 307, 613, 9271, 13, 51300, 51300, 400, 370, 300, 311, 257, 819, 3840, 300, 311, 516, 281, 312, 22981, 1184, 15245, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.16674522558848062, "compression_ratio": 1.5973451327433628, "no_speech_prob": 1.267919287784025e-06}, {"id": 756, "seek": 437742, "start": 4388.14, "end": 4390.06, "text": " just like the one we built.", "tokens": [50364, 400, 550, 591, 4579, 1023, 18020, 293, 389, 12442, 1437, 322, 281, 1352, 3329, 29783, 13, 50685, 50685, 400, 291, 393, 536, 510, 436, 600, 658, 341, 3036, 295, 257, 4498, 4582, 18161, 3209, 11, 732, 7914, 50900, 50900, 445, 411, 264, 472, 321, 3094, 13, 50996, 50996, 400, 510, 11, 574, 11, 436, 434, 16979, 48946, 512, 295, 264, 2430, 763, 13, 51161, 51161, 400, 439, 300, 311, 1411, 307, 613, 9271, 13, 51300, 51300, 400, 370, 300, 311, 257, 819, 3840, 300, 311, 516, 281, 312, 22981, 1184, 15245, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.16674522558848062, "compression_ratio": 1.5973451327433628, "no_speech_prob": 1.267919287784025e-06}, {"id": 757, "seek": 437742, "start": 4390.06, "end": 4393.36, "text": " And here, look, they're randomly deleting some of the activations.", "tokens": [50364, 400, 550, 591, 4579, 1023, 18020, 293, 389, 12442, 1437, 322, 281, 1352, 3329, 29783, 13, 50685, 50685, 400, 291, 393, 536, 510, 436, 600, 658, 341, 3036, 295, 257, 4498, 4582, 18161, 3209, 11, 732, 7914, 50900, 50900, 445, 411, 264, 472, 321, 3094, 13, 50996, 50996, 400, 510, 11, 574, 11, 436, 434, 16979, 48946, 512, 295, 264, 2430, 763, 13, 51161, 51161, 400, 439, 300, 311, 1411, 307, 613, 9271, 13, 51300, 51300, 400, 370, 300, 311, 257, 819, 3840, 300, 311, 516, 281, 312, 22981, 1184, 15245, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.16674522558848062, "compression_ratio": 1.5973451327433628, "no_speech_prob": 1.267919287784025e-06}, {"id": 758, "seek": 437742, "start": 4393.36, "end": 4396.14, "text": " And all that's left is these connections.", "tokens": [50364, 400, 550, 591, 4579, 1023, 18020, 293, 389, 12442, 1437, 322, 281, 1352, 3329, 29783, 13, 50685, 50685, 400, 291, 393, 536, 510, 436, 600, 658, 341, 3036, 295, 257, 4498, 4582, 18161, 3209, 11, 732, 7914, 50900, 50900, 445, 411, 264, 472, 321, 3094, 13, 50996, 50996, 400, 510, 11, 574, 11, 436, 434, 16979, 48946, 512, 295, 264, 2430, 763, 13, 51161, 51161, 400, 439, 300, 311, 1411, 307, 613, 9271, 13, 51300, 51300, 400, 370, 300, 311, 257, 819, 3840, 300, 311, 516, 281, 312, 22981, 1184, 15245, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.16674522558848062, "compression_ratio": 1.5973451327433628, "no_speech_prob": 1.267919287784025e-06}, {"id": 759, "seek": 437742, "start": 4396.14, "end": 4403.86, "text": " And so that's a different bunch that's going to be deleted each batch.", "tokens": [50364, 400, 550, 591, 4579, 1023, 18020, 293, 389, 12442, 1437, 322, 281, 1352, 3329, 29783, 13, 50685, 50685, 400, 291, 393, 536, 510, 436, 600, 658, 341, 3036, 295, 257, 4498, 4582, 18161, 3209, 11, 732, 7914, 50900, 50900, 445, 411, 264, 472, 321, 3094, 13, 50996, 50996, 400, 510, 11, 574, 11, 436, 434, 16979, 48946, 512, 295, 264, 2430, 763, 13, 51161, 51161, 400, 439, 300, 311, 1411, 307, 613, 9271, 13, 51300, 51300, 400, 370, 300, 311, 257, 819, 3840, 300, 311, 516, 281, 312, 22981, 1184, 15245, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.16674522558848062, "compression_ratio": 1.5973451327433628, "no_speech_prob": 1.267919287784025e-06}, {"id": 760, "seek": 440386, "start": 4403.86, "end": 4408.82, "text": " I thought this was an interesting point.", "tokens": [50364, 286, 1194, 341, 390, 364, 1880, 935, 13, 50612, 50612, 407, 3270, 346, 11, 597, 307, 1687, 1021, 11, 390, 767, 4743, 294, 257, 4505, 311, 22288, 13, 50948, 50948, 400, 309, 390, 15749, 490, 264, 2135, 18161, 9590, 7586, 11, 550, 1219, 18482, 6273, 11, 586, 1219, 1734, 374, 40, 6273, 13, 51218, 51218, 407, 309, 4590, 493, 885, 34585, 770, 807, 10984, 488, 11, 597, 307, 257, 659, 14030, 7154, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.14967877524239676, "compression_ratio": 1.495049504950495, "no_speech_prob": 1.963775503099896e-06}, {"id": 761, "seek": 440386, "start": 4408.82, "end": 4415.54, "text": " So dropout, which is super important, was actually developed in a master's thesis.", "tokens": [50364, 286, 1194, 341, 390, 364, 1880, 935, 13, 50612, 50612, 407, 3270, 346, 11, 597, 307, 1687, 1021, 11, 390, 767, 4743, 294, 257, 4505, 311, 22288, 13, 50948, 50948, 400, 309, 390, 15749, 490, 264, 2135, 18161, 9590, 7586, 11, 550, 1219, 18482, 6273, 11, 586, 1219, 1734, 374, 40, 6273, 13, 51218, 51218, 407, 309, 4590, 493, 885, 34585, 770, 807, 10984, 488, 11, 597, 307, 257, 659, 14030, 7154, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.14967877524239676, "compression_ratio": 1.495049504950495, "no_speech_prob": 1.963775503099896e-06}, {"id": 762, "seek": 440386, "start": 4415.54, "end": 4420.94, "text": " And it was rejected from the main neural networks conference, then called NIPS, now called NeurIPS.", "tokens": [50364, 286, 1194, 341, 390, 364, 1880, 935, 13, 50612, 50612, 407, 3270, 346, 11, 597, 307, 1687, 1021, 11, 390, 767, 4743, 294, 257, 4505, 311, 22288, 13, 50948, 50948, 400, 309, 390, 15749, 490, 264, 2135, 18161, 9590, 7586, 11, 550, 1219, 18482, 6273, 11, 586, 1219, 1734, 374, 40, 6273, 13, 51218, 51218, 407, 309, 4590, 493, 885, 34585, 770, 807, 10984, 488, 11, 597, 307, 257, 659, 14030, 7154, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.14967877524239676, "compression_ratio": 1.495049504950495, "no_speech_prob": 1.963775503099896e-06}, {"id": 763, "seek": 440386, "start": 4420.94, "end": 4431.78, "text": " So it ended up being disseminated through Archive, which is a preprint server.", "tokens": [50364, 286, 1194, 341, 390, 364, 1880, 935, 13, 50612, 50612, 407, 3270, 346, 11, 597, 307, 1687, 1021, 11, 390, 767, 4743, 294, 257, 4505, 311, 22288, 13, 50948, 50948, 400, 309, 390, 15749, 490, 264, 2135, 18161, 9590, 7586, 11, 550, 1219, 18482, 6273, 11, 586, 1219, 1734, 374, 40, 6273, 13, 51218, 51218, 407, 309, 4590, 493, 885, 34585, 770, 807, 10984, 488, 11, 597, 307, 257, 659, 14030, 7154, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.14967877524239676, "compression_ratio": 1.495049504950495, "no_speech_prob": 1.963775503099896e-06}, {"id": 764, "seek": 443178, "start": 4431.78, "end": 4439.86, "text": " And as has just been pointed out on our chat, that Ilya was one of the founders of OpenAI.", "tokens": [50364, 400, 382, 575, 445, 668, 10932, 484, 322, 527, 5081, 11, 300, 286, 45106, 390, 472, 295, 264, 25608, 295, 7238, 48698, 13, 50768, 50768, 286, 500, 380, 458, 437, 2011, 281, 37942, 742, 13, 50826, 50826, 286, 519, 415, 1437, 281, 3329, 29783, 382, 731, 11, 1310, 13, 51034, 51034, 865, 11, 370, 15108, 3131, 307, 257, 588, 2100, 964, 551, 294, 1293, 11095, 13, 51558, 51558, 400, 309, 311, 869, 300, 321, 362, 659, 14030, 15909, 370, 321, 393, 1401, 1507, 411, 341, 11, 754, 498, 45837, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1684074504401094, "compression_ratio": 1.4780701754385965, "no_speech_prob": 8.939396138885058e-06}, {"id": 765, "seek": 443178, "start": 4439.86, "end": 4441.0199999999995, "text": " I don't know what happened to Nitish.", "tokens": [50364, 400, 382, 575, 445, 668, 10932, 484, 322, 527, 5081, 11, 300, 286, 45106, 390, 472, 295, 264, 25608, 295, 7238, 48698, 13, 50768, 50768, 286, 500, 380, 458, 437, 2011, 281, 37942, 742, 13, 50826, 50826, 286, 519, 415, 1437, 281, 3329, 29783, 382, 731, 11, 1310, 13, 51034, 51034, 865, 11, 370, 15108, 3131, 307, 257, 588, 2100, 964, 551, 294, 1293, 11095, 13, 51558, 51558, 400, 309, 311, 869, 300, 321, 362, 659, 14030, 15909, 370, 321, 393, 1401, 1507, 411, 341, 11, 754, 498, 45837, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1684074504401094, "compression_ratio": 1.4780701754385965, "no_speech_prob": 8.939396138885058e-06}, {"id": 766, "seek": 443178, "start": 4441.0199999999995, "end": 4445.179999999999, "text": " I think he went to Google Brain as well, maybe.", "tokens": [50364, 400, 382, 575, 445, 668, 10932, 484, 322, 527, 5081, 11, 300, 286, 45106, 390, 472, 295, 264, 25608, 295, 7238, 48698, 13, 50768, 50768, 286, 500, 380, 458, 437, 2011, 281, 37942, 742, 13, 50826, 50826, 286, 519, 415, 1437, 281, 3329, 29783, 382, 731, 11, 1310, 13, 51034, 51034, 865, 11, 370, 15108, 3131, 307, 257, 588, 2100, 964, 551, 294, 1293, 11095, 13, 51558, 51558, 400, 309, 311, 869, 300, 321, 362, 659, 14030, 15909, 370, 321, 393, 1401, 1507, 411, 341, 11, 754, 498, 45837, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1684074504401094, "compression_ratio": 1.4780701754385965, "no_speech_prob": 8.939396138885058e-06}, {"id": 767, "seek": 443178, "start": 4445.179999999999, "end": 4455.66, "text": " Yeah, so peer review is a very fallible thing in both directions.", "tokens": [50364, 400, 382, 575, 445, 668, 10932, 484, 322, 527, 5081, 11, 300, 286, 45106, 390, 472, 295, 264, 25608, 295, 7238, 48698, 13, 50768, 50768, 286, 500, 380, 458, 437, 2011, 281, 37942, 742, 13, 50826, 50826, 286, 519, 415, 1437, 281, 3329, 29783, 382, 731, 11, 1310, 13, 51034, 51034, 865, 11, 370, 15108, 3131, 307, 257, 588, 2100, 964, 551, 294, 1293, 11095, 13, 51558, 51558, 400, 309, 311, 869, 300, 321, 362, 659, 14030, 15909, 370, 321, 393, 1401, 1507, 411, 341, 11, 754, 498, 45837, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1684074504401094, "compression_ratio": 1.4780701754385965, "no_speech_prob": 8.939396138885058e-06}, {"id": 768, "seek": 443178, "start": 4455.66, "end": 4459.58, "text": " And it's great that we have preprint servers so we can read stuff like this, even if reviewers", "tokens": [50364, 400, 382, 575, 445, 668, 10932, 484, 322, 527, 5081, 11, 300, 286, 45106, 390, 472, 295, 264, 25608, 295, 7238, 48698, 13, 50768, 50768, 286, 500, 380, 458, 437, 2011, 281, 37942, 742, 13, 50826, 50826, 286, 519, 415, 1437, 281, 3329, 29783, 382, 731, 11, 1310, 13, 51034, 51034, 865, 11, 370, 15108, 3131, 307, 257, 588, 2100, 964, 551, 294, 1293, 11095, 13, 51558, 51558, 400, 309, 311, 869, 300, 321, 362, 659, 14030, 15909, 370, 321, 393, 1401, 1507, 411, 341, 11, 754, 498, 45837, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1684074504401094, "compression_ratio": 1.4780701754385965, "no_speech_prob": 8.939396138885058e-06}, {"id": 769, "seek": 445958, "start": 4459.58, "end": 4462.78, "text": " decide it's not worthy.", "tokens": [50364, 4536, 309, 311, 406, 14829, 13, 50524, 50524, 467, 311, 668, 472, 295, 264, 881, 1021, 10577, 1562, 13, 50826, 50826, 2264, 11, 586, 286, 519, 300, 311, 2212, 505, 257, 665, 3512, 586, 13, 51240, 51240, 492, 600, 534, 1612, 1596, 257, 1326, 2098, 295, 6260, 365, 4846, 281, 257, 18161, 3209, 11, 1596, 257, 1326, 51440, 51440, 295, 264, 721, 300, 393, 1051, 294, 264, 2808, 295, 257, 18161, 3209, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.14987450141411324, "compression_ratio": 1.541899441340782, "no_speech_prob": 9.818120815907605e-06}, {"id": 770, "seek": 445958, "start": 4462.78, "end": 4468.82, "text": " It's been one of the most important papers ever.", "tokens": [50364, 4536, 309, 311, 406, 14829, 13, 50524, 50524, 467, 311, 668, 472, 295, 264, 881, 1021, 10577, 1562, 13, 50826, 50826, 2264, 11, 586, 286, 519, 300, 311, 2212, 505, 257, 665, 3512, 586, 13, 51240, 51240, 492, 600, 534, 1612, 1596, 257, 1326, 2098, 295, 6260, 365, 4846, 281, 257, 18161, 3209, 11, 1596, 257, 1326, 51440, 51440, 295, 264, 721, 300, 393, 1051, 294, 264, 2808, 295, 257, 18161, 3209, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.14987450141411324, "compression_ratio": 1.541899441340782, "no_speech_prob": 9.818120815907605e-06}, {"id": 771, "seek": 445958, "start": 4468.82, "end": 4477.1, "text": " OK, now I think that's given us a good tour now.", "tokens": [50364, 4536, 309, 311, 406, 14829, 13, 50524, 50524, 467, 311, 668, 472, 295, 264, 881, 1021, 10577, 1562, 13, 50826, 50826, 2264, 11, 586, 286, 519, 300, 311, 2212, 505, 257, 665, 3512, 586, 13, 51240, 51240, 492, 600, 534, 1612, 1596, 257, 1326, 2098, 295, 6260, 365, 4846, 281, 257, 18161, 3209, 11, 1596, 257, 1326, 51440, 51440, 295, 264, 721, 300, 393, 1051, 294, 264, 2808, 295, 257, 18161, 3209, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.14987450141411324, "compression_ratio": 1.541899441340782, "no_speech_prob": 9.818120815907605e-06}, {"id": 772, "seek": 445958, "start": 4477.1, "end": 4481.1, "text": " We've really seen quite a few ways of dealing with input to a neural network, quite a few", "tokens": [50364, 4536, 309, 311, 406, 14829, 13, 50524, 50524, 467, 311, 668, 472, 295, 264, 881, 1021, 10577, 1562, 13, 50826, 50826, 2264, 11, 586, 286, 519, 300, 311, 2212, 505, 257, 665, 3512, 586, 13, 51240, 51240, 492, 600, 534, 1612, 1596, 257, 1326, 2098, 295, 6260, 365, 4846, 281, 257, 18161, 3209, 11, 1596, 257, 1326, 51440, 51440, 295, 264, 721, 300, 393, 1051, 294, 264, 2808, 295, 257, 18161, 3209, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.14987450141411324, "compression_ratio": 1.541899441340782, "no_speech_prob": 9.818120815907605e-06}, {"id": 773, "seek": 445958, "start": 4481.1, "end": 4484.46, "text": " of the things that can happen in the middle of a neural network.", "tokens": [50364, 4536, 309, 311, 406, 14829, 13, 50524, 50524, 467, 311, 668, 472, 295, 264, 881, 1021, 10577, 1562, 13, 50826, 50826, 2264, 11, 586, 286, 519, 300, 311, 2212, 505, 257, 665, 3512, 586, 13, 51240, 51240, 492, 600, 534, 1612, 1596, 257, 1326, 2098, 295, 6260, 365, 4846, 281, 257, 18161, 3209, 11, 1596, 257, 1326, 51440, 51440, 295, 264, 721, 300, 393, 1051, 294, 264, 2808, 295, 257, 18161, 3209, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.14987450141411324, "compression_ratio": 1.541899441340782, "no_speech_prob": 9.818120815907605e-06}, {"id": 774, "seek": 448446, "start": 4484.46, "end": 4491.94, "text": " We've only talked about rectified linear units, which is this one here.", "tokens": [50364, 492, 600, 787, 2825, 466, 11048, 2587, 8213, 6815, 11, 597, 307, 341, 472, 510, 13, 50738, 50738, 1958, 498, 2031, 307, 1570, 813, 1958, 420, 2031, 5911, 13, 50950, 50950, 1981, 366, 512, 295, 264, 661, 2430, 763, 291, 393, 764, 13, 51174, 51174, 1468, 380, 764, 341, 472, 11, 295, 1164, 11, 570, 291, 917, 493, 365, 257, 8213, 2316, 13, 51392, 51392, 583, 436, 434, 439, 445, 819, 6828, 13, 51534, 51534, 286, 820, 2152, 11, 309, 4523, 484, 613, 500, 380, 1871, 588, 709, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.17192971834572413, "compression_ratio": 1.5272727272727273, "no_speech_prob": 5.507461082743248e-06}, {"id": 775, "seek": 448446, "start": 4491.94, "end": 4496.18, "text": " 0 if x is less than 0 or x otherwise.", "tokens": [50364, 492, 600, 787, 2825, 466, 11048, 2587, 8213, 6815, 11, 597, 307, 341, 472, 510, 13, 50738, 50738, 1958, 498, 2031, 307, 1570, 813, 1958, 420, 2031, 5911, 13, 50950, 50950, 1981, 366, 512, 295, 264, 661, 2430, 763, 291, 393, 764, 13, 51174, 51174, 1468, 380, 764, 341, 472, 11, 295, 1164, 11, 570, 291, 917, 493, 365, 257, 8213, 2316, 13, 51392, 51392, 583, 436, 434, 439, 445, 819, 6828, 13, 51534, 51534, 286, 820, 2152, 11, 309, 4523, 484, 613, 500, 380, 1871, 588, 709, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.17192971834572413, "compression_ratio": 1.5272727272727273, "no_speech_prob": 5.507461082743248e-06}, {"id": 776, "seek": 448446, "start": 4496.18, "end": 4500.66, "text": " These are some of the other activations you can use.", "tokens": [50364, 492, 600, 787, 2825, 466, 11048, 2587, 8213, 6815, 11, 597, 307, 341, 472, 510, 13, 50738, 50738, 1958, 498, 2031, 307, 1570, 813, 1958, 420, 2031, 5911, 13, 50950, 50950, 1981, 366, 512, 295, 264, 661, 2430, 763, 291, 393, 764, 13, 51174, 51174, 1468, 380, 764, 341, 472, 11, 295, 1164, 11, 570, 291, 917, 493, 365, 257, 8213, 2316, 13, 51392, 51392, 583, 436, 434, 439, 445, 819, 6828, 13, 51534, 51534, 286, 820, 2152, 11, 309, 4523, 484, 613, 500, 380, 1871, 588, 709, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.17192971834572413, "compression_ratio": 1.5272727272727273, "no_speech_prob": 5.507461082743248e-06}, {"id": 777, "seek": 448446, "start": 4500.66, "end": 4505.02, "text": " Don't use this one, of course, because you end up with a linear model.", "tokens": [50364, 492, 600, 787, 2825, 466, 11048, 2587, 8213, 6815, 11, 597, 307, 341, 472, 510, 13, 50738, 50738, 1958, 498, 2031, 307, 1570, 813, 1958, 420, 2031, 5911, 13, 50950, 50950, 1981, 366, 512, 295, 264, 661, 2430, 763, 291, 393, 764, 13, 51174, 51174, 1468, 380, 764, 341, 472, 11, 295, 1164, 11, 570, 291, 917, 493, 365, 257, 8213, 2316, 13, 51392, 51392, 583, 436, 434, 439, 445, 819, 6828, 13, 51534, 51534, 286, 820, 2152, 11, 309, 4523, 484, 613, 500, 380, 1871, 588, 709, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.17192971834572413, "compression_ratio": 1.5272727272727273, "no_speech_prob": 5.507461082743248e-06}, {"id": 778, "seek": 448446, "start": 4505.02, "end": 4507.86, "text": " But they're all just different functions.", "tokens": [50364, 492, 600, 787, 2825, 466, 11048, 2587, 8213, 6815, 11, 597, 307, 341, 472, 510, 13, 50738, 50738, 1958, 498, 2031, 307, 1570, 813, 1958, 420, 2031, 5911, 13, 50950, 50950, 1981, 366, 512, 295, 264, 661, 2430, 763, 291, 393, 764, 13, 51174, 51174, 1468, 380, 764, 341, 472, 11, 295, 1164, 11, 570, 291, 917, 493, 365, 257, 8213, 2316, 13, 51392, 51392, 583, 436, 434, 439, 445, 819, 6828, 13, 51534, 51534, 286, 820, 2152, 11, 309, 4523, 484, 613, 500, 380, 1871, 588, 709, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.17192971834572413, "compression_ratio": 1.5272727272727273, "no_speech_prob": 5.507461082743248e-06}, {"id": 779, "seek": 448446, "start": 4507.86, "end": 4512.46, "text": " I should mention, it turns out these don't matter very much.", "tokens": [50364, 492, 600, 787, 2825, 466, 11048, 2587, 8213, 6815, 11, 597, 307, 341, 472, 510, 13, 50738, 50738, 1958, 498, 2031, 307, 1570, 813, 1958, 420, 2031, 5911, 13, 50950, 50950, 1981, 366, 512, 295, 264, 661, 2430, 763, 291, 393, 764, 13, 51174, 51174, 1468, 380, 764, 341, 472, 11, 295, 1164, 11, 570, 291, 917, 493, 365, 257, 8213, 2316, 13, 51392, 51392, 583, 436, 434, 439, 445, 819, 6828, 13, 51534, 51534, 286, 820, 2152, 11, 309, 4523, 484, 613, 500, 380, 1871, 588, 709, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.17192971834572413, "compression_ratio": 1.5272727272727273, "no_speech_prob": 5.507461082743248e-06}, {"id": 780, "seek": 451246, "start": 4512.46, "end": 4519.22, "text": " Pretty much any non-linearity works fine.", "tokens": [50364, 10693, 709, 604, 2107, 12, 1889, 17409, 1985, 2489, 13, 50702, 50702, 407, 321, 500, 380, 3496, 709, 565, 1417, 466, 24433, 6828, 11, 754, 294, 644, 732, 295, 50896, 50896, 264, 1164, 11, 445, 257, 707, 857, 13, 51046, 51046, 407, 1338, 11, 370, 321, 1223, 456, 366, 15743, 13, 51224, 51224, 814, 393, 312, 472, 12, 12194, 2058, 12340, 420, 12240, 29432, 11, 597, 307, 257, 28270, 24822, 13, 51592, 51592, 821, 366, 11141, 7914, 295, 8141, 12788, 4890, 293, 24433, 6828, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16190647811032413, "compression_ratio": 1.5784753363228698, "no_speech_prob": 3.6688020372821484e-06}, {"id": 781, "seek": 451246, "start": 4519.22, "end": 4523.1, "text": " So we don't spend much time talking about activation functions, even in part two of", "tokens": [50364, 10693, 709, 604, 2107, 12, 1889, 17409, 1985, 2489, 13, 50702, 50702, 407, 321, 500, 380, 3496, 709, 565, 1417, 466, 24433, 6828, 11, 754, 294, 644, 732, 295, 50896, 50896, 264, 1164, 11, 445, 257, 707, 857, 13, 51046, 51046, 407, 1338, 11, 370, 321, 1223, 456, 366, 15743, 13, 51224, 51224, 814, 393, 312, 472, 12, 12194, 2058, 12340, 420, 12240, 29432, 11, 597, 307, 257, 28270, 24822, 13, 51592, 51592, 821, 366, 11141, 7914, 295, 8141, 12788, 4890, 293, 24433, 6828, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16190647811032413, "compression_ratio": 1.5784753363228698, "no_speech_prob": 3.6688020372821484e-06}, {"id": 782, "seek": 451246, "start": 4523.1, "end": 4526.1, "text": " the course, just a little bit.", "tokens": [50364, 10693, 709, 604, 2107, 12, 1889, 17409, 1985, 2489, 13, 50702, 50702, 407, 321, 500, 380, 3496, 709, 565, 1417, 466, 24433, 6828, 11, 754, 294, 644, 732, 295, 50896, 50896, 264, 1164, 11, 445, 257, 707, 857, 13, 51046, 51046, 407, 1338, 11, 370, 321, 1223, 456, 366, 15743, 13, 51224, 51224, 814, 393, 312, 472, 12, 12194, 2058, 12340, 420, 12240, 29432, 11, 597, 307, 257, 28270, 24822, 13, 51592, 51592, 821, 366, 11141, 7914, 295, 8141, 12788, 4890, 293, 24433, 6828, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16190647811032413, "compression_ratio": 1.5784753363228698, "no_speech_prob": 3.6688020372821484e-06}, {"id": 783, "seek": 451246, "start": 4526.1, "end": 4529.66, "text": " So yeah, so we understand there are inputs.", "tokens": [50364, 10693, 709, 604, 2107, 12, 1889, 17409, 1985, 2489, 13, 50702, 50702, 407, 321, 500, 380, 3496, 709, 565, 1417, 466, 24433, 6828, 11, 754, 294, 644, 732, 295, 50896, 50896, 264, 1164, 11, 445, 257, 707, 857, 13, 51046, 51046, 407, 1338, 11, 370, 321, 1223, 456, 366, 15743, 13, 51224, 51224, 814, 393, 312, 472, 12, 12194, 2058, 12340, 420, 12240, 29432, 11, 597, 307, 257, 28270, 24822, 13, 51592, 51592, 821, 366, 11141, 7914, 295, 8141, 12788, 4890, 293, 24433, 6828, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16190647811032413, "compression_ratio": 1.5784753363228698, "no_speech_prob": 3.6688020372821484e-06}, {"id": 784, "seek": 451246, "start": 4529.66, "end": 4537.02, "text": " They can be one-hot encoded or embeddings, which is a computational shortcut.", "tokens": [50364, 10693, 709, 604, 2107, 12, 1889, 17409, 1985, 2489, 13, 50702, 50702, 407, 321, 500, 380, 3496, 709, 565, 1417, 466, 24433, 6828, 11, 754, 294, 644, 732, 295, 50896, 50896, 264, 1164, 11, 445, 257, 707, 857, 13, 51046, 51046, 407, 1338, 11, 370, 321, 1223, 456, 366, 15743, 13, 51224, 51224, 814, 393, 312, 472, 12, 12194, 2058, 12340, 420, 12240, 29432, 11, 597, 307, 257, 28270, 24822, 13, 51592, 51592, 821, 366, 11141, 7914, 295, 8141, 12788, 4890, 293, 24433, 6828, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16190647811032413, "compression_ratio": 1.5784753363228698, "no_speech_prob": 3.6688020372821484e-06}, {"id": 785, "seek": 451246, "start": 4537.02, "end": 4541.9800000000005, "text": " There are sandwich layers of matrix multipliers and activation functions.", "tokens": [50364, 10693, 709, 604, 2107, 12, 1889, 17409, 1985, 2489, 13, 50702, 50702, 407, 321, 500, 380, 3496, 709, 565, 1417, 466, 24433, 6828, 11, 754, 294, 644, 732, 295, 50896, 50896, 264, 1164, 11, 445, 257, 707, 857, 13, 51046, 51046, 407, 1338, 11, 370, 321, 1223, 456, 366, 15743, 13, 51224, 51224, 814, 393, 312, 472, 12, 12194, 2058, 12340, 420, 12240, 29432, 11, 597, 307, 257, 28270, 24822, 13, 51592, 51592, 821, 366, 11141, 7914, 295, 8141, 12788, 4890, 293, 24433, 6828, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16190647811032413, "compression_ratio": 1.5784753363228698, "no_speech_prob": 3.6688020372821484e-06}, {"id": 786, "seek": 454198, "start": 4541.98, "end": 4549.54, "text": " The matrix multipliers can sometimes be special cases, such as the convolutions or the embeddings.", "tokens": [50364, 440, 8141, 12788, 4890, 393, 2171, 312, 2121, 3331, 11, 1270, 382, 264, 3754, 15892, 420, 264, 12240, 29432, 13, 50742, 50742, 440, 5598, 393, 352, 807, 512, 6986, 2456, 11, 1270, 382, 264, 2787, 41167, 13, 50970, 50970, 400, 550, 11, 295, 1164, 11, 291, 600, 658, 264, 4470, 2445, 11, 1270, 382, 3278, 30867, 4470, 420, 914, 8889, 51316, 51316, 6713, 420, 914, 8236, 6713, 13, 51428, 51428], "temperature": 0.0, "avg_logprob": -0.14671692583296034, "compression_ratio": 1.5519125683060109, "no_speech_prob": 3.555954890543944e-06}, {"id": 787, "seek": 454198, "start": 4549.54, "end": 4554.099999999999, "text": " The output can go through some tweaking, such as the softmax.", "tokens": [50364, 440, 8141, 12788, 4890, 393, 2171, 312, 2121, 3331, 11, 1270, 382, 264, 3754, 15892, 420, 264, 12240, 29432, 13, 50742, 50742, 440, 5598, 393, 352, 807, 512, 6986, 2456, 11, 1270, 382, 264, 2787, 41167, 13, 50970, 50970, 400, 550, 11, 295, 1164, 11, 291, 600, 658, 264, 4470, 2445, 11, 1270, 382, 3278, 30867, 4470, 420, 914, 8889, 51316, 51316, 6713, 420, 914, 8236, 6713, 13, 51428, 51428], "temperature": 0.0, "avg_logprob": -0.14671692583296034, "compression_ratio": 1.5519125683060109, "no_speech_prob": 3.555954890543944e-06}, {"id": 788, "seek": 454198, "start": 4554.099999999999, "end": 4561.0199999999995, "text": " And then, of course, you've got the loss function, such as cross entropy loss or mean squared", "tokens": [50364, 440, 8141, 12788, 4890, 393, 2171, 312, 2121, 3331, 11, 1270, 382, 264, 3754, 15892, 420, 264, 12240, 29432, 13, 50742, 50742, 440, 5598, 393, 352, 807, 512, 6986, 2456, 11, 1270, 382, 264, 2787, 41167, 13, 50970, 50970, 400, 550, 11, 295, 1164, 11, 291, 600, 658, 264, 4470, 2445, 11, 1270, 382, 3278, 30867, 4470, 420, 914, 8889, 51316, 51316, 6713, 420, 914, 8236, 6713, 13, 51428, 51428], "temperature": 0.0, "avg_logprob": -0.14671692583296034, "compression_ratio": 1.5519125683060109, "no_speech_prob": 3.555954890543944e-06}, {"id": 789, "seek": 454198, "start": 4561.0199999999995, "end": 4563.259999999999, "text": " error or mean absolute error.", "tokens": [50364, 440, 8141, 12788, 4890, 393, 2171, 312, 2121, 3331, 11, 1270, 382, 264, 3754, 15892, 420, 264, 12240, 29432, 13, 50742, 50742, 440, 5598, 393, 352, 807, 512, 6986, 2456, 11, 1270, 382, 264, 2787, 41167, 13, 50970, 50970, 400, 550, 11, 295, 1164, 11, 291, 600, 658, 264, 4470, 2445, 11, 1270, 382, 3278, 30867, 4470, 420, 914, 8889, 51316, 51316, 6713, 420, 914, 8236, 6713, 13, 51428, 51428], "temperature": 0.0, "avg_logprob": -0.14671692583296034, "compression_ratio": 1.5519125683060109, "no_speech_prob": 3.555954890543944e-06}, {"id": 790, "seek": 456326, "start": 4563.26, "end": 4573.900000000001, "text": " But there's nothing too crazy going on in there.", "tokens": [50364, 583, 456, 311, 1825, 886, 3219, 516, 322, 294, 456, 13, 50896, 50896, 407, 286, 841, 411, 321, 600, 658, 257, 665, 2020, 586, 295, 437, 1709, 1854, 257, 4874, 3613, 295, 18161, 51172, 51172, 36170, 13, 51222, 51222, 509, 434, 406, 516, 281, 536, 1340, 886, 3657, 490, 510, 13, 51380, 51380, 400, 321, 600, 611, 1612, 257, 4874, 3613, 295, 5821, 13, 51579, 51579], "temperature": 0.0, "avg_logprob": -0.09388082167681526, "compression_ratio": 1.5379746835443038, "no_speech_prob": 2.8129979909863323e-06}, {"id": 791, "seek": 456326, "start": 4573.900000000001, "end": 4579.42, "text": " So I feel like we've got a good sense now of what goes inside a wide range of neural", "tokens": [50364, 583, 456, 311, 1825, 886, 3219, 516, 322, 294, 456, 13, 50896, 50896, 407, 286, 841, 411, 321, 600, 658, 257, 665, 2020, 586, 295, 437, 1709, 1854, 257, 4874, 3613, 295, 18161, 51172, 51172, 36170, 13, 51222, 51222, 509, 434, 406, 516, 281, 536, 1340, 886, 3657, 490, 510, 13, 51380, 51380, 400, 321, 600, 611, 1612, 257, 4874, 3613, 295, 5821, 13, 51579, 51579], "temperature": 0.0, "avg_logprob": -0.09388082167681526, "compression_ratio": 1.5379746835443038, "no_speech_prob": 2.8129979909863323e-06}, {"id": 792, "seek": 456326, "start": 4579.42, "end": 4580.42, "text": " nets.", "tokens": [50364, 583, 456, 311, 1825, 886, 3219, 516, 322, 294, 456, 13, 50896, 50896, 407, 286, 841, 411, 321, 600, 658, 257, 665, 2020, 586, 295, 437, 1709, 1854, 257, 4874, 3613, 295, 18161, 51172, 51172, 36170, 13, 51222, 51222, 509, 434, 406, 516, 281, 536, 1340, 886, 3657, 490, 510, 13, 51380, 51380, 400, 321, 600, 611, 1612, 257, 4874, 3613, 295, 5821, 13, 51579, 51579], "temperature": 0.0, "avg_logprob": -0.09388082167681526, "compression_ratio": 1.5379746835443038, "no_speech_prob": 2.8129979909863323e-06}, {"id": 793, "seek": 456326, "start": 4580.42, "end": 4583.58, "text": " You're not going to see anything too weird from here.", "tokens": [50364, 583, 456, 311, 1825, 886, 3219, 516, 322, 294, 456, 13, 50896, 50896, 407, 286, 841, 411, 321, 600, 658, 257, 665, 2020, 586, 295, 437, 1709, 1854, 257, 4874, 3613, 295, 18161, 51172, 51172, 36170, 13, 51222, 51222, 509, 434, 406, 516, 281, 536, 1340, 886, 3657, 490, 510, 13, 51380, 51380, 400, 321, 600, 611, 1612, 257, 4874, 3613, 295, 5821, 13, 51579, 51579], "temperature": 0.0, "avg_logprob": -0.09388082167681526, "compression_ratio": 1.5379746835443038, "no_speech_prob": 2.8129979909863323e-06}, {"id": 794, "seek": 456326, "start": 4583.58, "end": 4587.56, "text": " And we've also seen a wide range of applications.", "tokens": [50364, 583, 456, 311, 1825, 886, 3219, 516, 322, 294, 456, 13, 50896, 50896, 407, 286, 841, 411, 321, 600, 658, 257, 665, 2020, 586, 295, 437, 1709, 1854, 257, 4874, 3613, 295, 18161, 51172, 51172, 36170, 13, 51222, 51222, 509, 434, 406, 516, 281, 536, 1340, 886, 3657, 490, 510, 13, 51380, 51380, 400, 321, 600, 611, 1612, 257, 4874, 3613, 295, 5821, 13, 51579, 51579], "temperature": 0.0, "avg_logprob": -0.09388082167681526, "compression_ratio": 1.5379746835443038, "no_speech_prob": 2.8129979909863323e-06}, {"id": 795, "seek": 458756, "start": 4587.56, "end": 4597.38, "text": " So before you come back to do part two, you know, what now?", "tokens": [50364, 407, 949, 291, 808, 646, 281, 360, 644, 732, 11, 291, 458, 11, 437, 586, 30, 50855, 50855, 400, 321, 434, 516, 281, 362, 257, 707, 6475, 32, 5481, 510, 13, 51053, 51053, 400, 294, 1186, 11, 472, 295, 264, 1651, 390, 11, 437, 586, 30, 51233, 51233, 407, 341, 307, 1596, 665, 13, 51532, 51532], "temperature": 0.0, "avg_logprob": -0.09643830102065513, "compression_ratio": 1.338235294117647, "no_speech_prob": 1.0676990314095747e-06}, {"id": 796, "seek": 458756, "start": 4597.38, "end": 4601.34, "text": " And we're going to have a little AMA session here.", "tokens": [50364, 407, 949, 291, 808, 646, 281, 360, 644, 732, 11, 291, 458, 11, 437, 586, 30, 50855, 50855, 400, 321, 434, 516, 281, 362, 257, 707, 6475, 32, 5481, 510, 13, 51053, 51053, 400, 294, 1186, 11, 472, 295, 264, 1651, 390, 11, 437, 586, 30, 51233, 51233, 407, 341, 307, 1596, 665, 13, 51532, 51532], "temperature": 0.0, "avg_logprob": -0.09643830102065513, "compression_ratio": 1.338235294117647, "no_speech_prob": 1.0676990314095747e-06}, {"id": 797, "seek": 458756, "start": 4601.34, "end": 4604.9400000000005, "text": " And in fact, one of the questions was, what now?", "tokens": [50364, 407, 949, 291, 808, 646, 281, 360, 644, 732, 11, 291, 458, 11, 437, 586, 30, 50855, 50855, 400, 321, 434, 516, 281, 362, 257, 707, 6475, 32, 5481, 510, 13, 51053, 51053, 400, 294, 1186, 11, 472, 295, 264, 1651, 390, 11, 437, 586, 30, 51233, 51233, 407, 341, 307, 1596, 665, 13, 51532, 51532], "temperature": 0.0, "avg_logprob": -0.09643830102065513, "compression_ratio": 1.338235294117647, "no_speech_prob": 1.0676990314095747e-06}, {"id": 798, "seek": 458756, "start": 4604.9400000000005, "end": 4610.92, "text": " So this is quite good.", "tokens": [50364, 407, 949, 291, 808, 646, 281, 360, 644, 732, 11, 291, 458, 11, 437, 586, 30, 50855, 50855, 400, 321, 434, 516, 281, 362, 257, 707, 6475, 32, 5481, 510, 13, 51053, 51053, 400, 294, 1186, 11, 472, 295, 264, 1651, 390, 11, 437, 586, 30, 51233, 51233, 407, 341, 307, 1596, 665, 13, 51532, 51532], "temperature": 0.0, "avg_logprob": -0.09643830102065513, "compression_ratio": 1.338235294117647, "no_speech_prob": 1.0676990314095747e-06}, {"id": 799, "seek": 461092, "start": 4610.92, "end": 4620.46, "text": " One thing I strongly suggest is if you've got this far, it's probably worth you investing", "tokens": [50364, 1485, 551, 286, 10613, 3402, 307, 498, 291, 600, 658, 341, 1400, 11, 309, 311, 1391, 3163, 291, 10978, 50841, 50841, 428, 565, 294, 3760, 497, 762, 74, 311, 1446, 11, 597, 307, 19616, 12, 47204, 13, 51301, 51301, 400, 370, 19616, 12, 47204, 307, 588, 10950, 2361, 322, 264, 733, 295, 21037, 295, 2370, 7318, 670, 264, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.07878853428748346, "compression_ratio": 1.4567901234567902, "no_speech_prob": 5.285498332341376e-07}, {"id": 800, "seek": 461092, "start": 4620.46, "end": 4629.66, "text": " your time in reading Radek's book, which is meta-learning.", "tokens": [50364, 1485, 551, 286, 10613, 3402, 307, 498, 291, 600, 658, 341, 1400, 11, 309, 311, 1391, 3163, 291, 10978, 50841, 50841, 428, 565, 294, 3760, 497, 762, 74, 311, 1446, 11, 597, 307, 19616, 12, 47204, 13, 51301, 51301, 400, 370, 19616, 12, 47204, 307, 588, 10950, 2361, 322, 264, 733, 295, 21037, 295, 2370, 7318, 670, 264, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.07878853428748346, "compression_ratio": 1.4567901234567902, "no_speech_prob": 5.285498332341376e-07}, {"id": 801, "seek": 461092, "start": 4629.66, "end": 4636.02, "text": " And so meta-learning is very heavily based on the kind of teachings of fast AI over the", "tokens": [50364, 1485, 551, 286, 10613, 3402, 307, 498, 291, 600, 658, 341, 1400, 11, 309, 311, 1391, 3163, 291, 10978, 50841, 50841, 428, 565, 294, 3760, 497, 762, 74, 311, 1446, 11, 597, 307, 19616, 12, 47204, 13, 51301, 51301, 400, 370, 19616, 12, 47204, 307, 588, 10950, 2361, 322, 264, 733, 295, 21037, 295, 2370, 7318, 670, 264, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.07878853428748346, "compression_ratio": 1.4567901234567902, "no_speech_prob": 5.285498332341376e-07}, {"id": 802, "seek": 463602, "start": 4636.02, "end": 4644.740000000001, "text": " last few years and is all about how to learn deep learning and learn pretty much anything.", "tokens": [50364, 1036, 1326, 924, 293, 307, 439, 466, 577, 281, 1466, 2452, 2539, 293, 1466, 1238, 709, 1340, 13, 50800, 50800, 865, 11, 570, 11, 291, 458, 11, 291, 600, 658, 281, 341, 935, 11, 291, 815, 382, 731, 458, 577, 281, 483, 281, 51090, 51090, 264, 958, 935, 382, 731, 382, 1944, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.15561227631150631, "compression_ratio": 1.536231884057971, "no_speech_prob": 4.356764748081332e-06}, {"id": 803, "seek": 463602, "start": 4644.740000000001, "end": 4650.540000000001, "text": " Yeah, because, you know, you've got to this point, you may as well know how to get to", "tokens": [50364, 1036, 1326, 924, 293, 307, 439, 466, 577, 281, 1466, 2452, 2539, 293, 1466, 1238, 709, 1340, 13, 50800, 50800, 865, 11, 570, 11, 291, 458, 11, 291, 600, 658, 281, 341, 935, 11, 291, 815, 382, 731, 458, 577, 281, 483, 281, 51090, 51090, 264, 958, 935, 382, 731, 382, 1944, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.15561227631150631, "compression_ratio": 1.536231884057971, "no_speech_prob": 4.356764748081332e-06}, {"id": 804, "seek": 463602, "start": 4650.540000000001, "end": 4660.860000000001, "text": " the next point as well as possible.", "tokens": [50364, 1036, 1326, 924, 293, 307, 439, 466, 577, 281, 1466, 2452, 2539, 293, 1466, 1238, 709, 1340, 13, 50800, 50800, 865, 11, 570, 11, 291, 458, 11, 291, 600, 658, 281, 341, 935, 11, 291, 815, 382, 731, 458, 577, 281, 483, 281, 51090, 51090, 264, 958, 935, 382, 731, 382, 1944, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.15561227631150631, "compression_ratio": 1.536231884057971, "no_speech_prob": 4.356764748081332e-06}, {"id": 805, "seek": 466086, "start": 4660.86, "end": 4673.299999999999, "text": " And the main thing you'll see that Radek talks about, or one of the main things, is practicing", "tokens": [50364, 400, 264, 2135, 551, 291, 603, 536, 300, 497, 762, 74, 6686, 466, 11, 420, 472, 295, 264, 2135, 721, 11, 307, 11350, 50986, 50986, 293, 3579, 13, 51110, 51110, 407, 498, 291, 600, 733, 295, 710, 5529, 807, 264, 2145, 322, 568, 87, 293, 2378, 380, 1096, 604, 11900, 11, 352, 646, 51598, 51598, 293, 1159, 264, 2145, 797, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.14819296323336087, "compression_ratio": 1.4709677419354839, "no_speech_prob": 1.6027858009692864e-06}, {"id": 806, "seek": 466086, "start": 4673.299999999999, "end": 4675.78, "text": " and writing.", "tokens": [50364, 400, 264, 2135, 551, 291, 603, 536, 300, 497, 762, 74, 6686, 466, 11, 420, 472, 295, 264, 2135, 721, 11, 307, 11350, 50986, 50986, 293, 3579, 13, 51110, 51110, 407, 498, 291, 600, 733, 295, 710, 5529, 807, 264, 2145, 322, 568, 87, 293, 2378, 380, 1096, 604, 11900, 11, 352, 646, 51598, 51598, 293, 1159, 264, 2145, 797, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.14819296323336087, "compression_ratio": 1.4709677419354839, "no_speech_prob": 1.6027858009692864e-06}, {"id": 807, "seek": 466086, "start": 4675.78, "end": 4685.54, "text": " So if you've kind of zipped through the videos on 2x and haven't done any exercises, go back", "tokens": [50364, 400, 264, 2135, 551, 291, 603, 536, 300, 497, 762, 74, 6686, 466, 11, 420, 472, 295, 264, 2135, 721, 11, 307, 11350, 50986, 50986, 293, 3579, 13, 51110, 51110, 407, 498, 291, 600, 733, 295, 710, 5529, 807, 264, 2145, 322, 568, 87, 293, 2378, 380, 1096, 604, 11900, 11, 352, 646, 51598, 51598, 293, 1159, 264, 2145, 797, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.14819296323336087, "compression_ratio": 1.4709677419354839, "no_speech_prob": 1.6027858009692864e-06}, {"id": 808, "seek": 466086, "start": 4685.54, "end": 4686.54, "text": " and watch the videos again.", "tokens": [50364, 400, 264, 2135, 551, 291, 603, 536, 300, 497, 762, 74, 6686, 466, 11, 420, 472, 295, 264, 2135, 721, 11, 307, 11350, 50986, 50986, 293, 3579, 13, 51110, 51110, 407, 498, 291, 600, 733, 295, 710, 5529, 807, 264, 2145, 322, 568, 87, 293, 2378, 380, 1096, 604, 11900, 11, 352, 646, 51598, 51598, 293, 1159, 264, 2145, 797, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.14819296323336087, "compression_ratio": 1.4709677419354839, "no_speech_prob": 1.6027858009692864e-06}, {"id": 809, "seek": 468654, "start": 4686.54, "end": 4691.1, "text": " You know, a lot of the best students end up watching them two or three times, probably", "tokens": [50364, 509, 458, 11, 257, 688, 295, 264, 1151, 1731, 917, 493, 1976, 552, 732, 420, 1045, 1413, 11, 1391, 50592, 50592, 544, 411, 1045, 1413, 13, 50744, 50744, 400, 767, 352, 807, 293, 3089, 382, 291, 1159, 293, 5120, 13, 51062, 51062, 509, 458, 11, 2464, 12300, 11, 6968, 12300, 466, 437, 291, 434, 884, 13, 51346, 51346, 1738, 521, 565, 322, 264, 17542, 11, 1293, 4315, 2357, 293, 2577, 661, 561, 311, 6338, 281, 1651, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.12184298479998554, "compression_ratio": 1.5833333333333333, "no_speech_prob": 4.494989298109431e-06}, {"id": 810, "seek": 468654, "start": 4691.1, "end": 4694.14, "text": " more like three times.", "tokens": [50364, 509, 458, 11, 257, 688, 295, 264, 1151, 1731, 917, 493, 1976, 552, 732, 420, 1045, 1413, 11, 1391, 50592, 50592, 544, 411, 1045, 1413, 13, 50744, 50744, 400, 767, 352, 807, 293, 3089, 382, 291, 1159, 293, 5120, 13, 51062, 51062, 509, 458, 11, 2464, 12300, 11, 6968, 12300, 466, 437, 291, 434, 884, 13, 51346, 51346, 1738, 521, 565, 322, 264, 17542, 11, 1293, 4315, 2357, 293, 2577, 661, 561, 311, 6338, 281, 1651, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.12184298479998554, "compression_ratio": 1.5833333333333333, "no_speech_prob": 4.494989298109431e-06}, {"id": 811, "seek": 468654, "start": 4694.14, "end": 4700.5, "text": " And actually go through and code as you watch and experiment.", "tokens": [50364, 509, 458, 11, 257, 688, 295, 264, 1151, 1731, 917, 493, 1976, 552, 732, 420, 1045, 1413, 11, 1391, 50592, 50592, 544, 411, 1045, 1413, 13, 50744, 50744, 400, 767, 352, 807, 293, 3089, 382, 291, 1159, 293, 5120, 13, 51062, 51062, 509, 458, 11, 2464, 12300, 11, 6968, 12300, 466, 437, 291, 434, 884, 13, 51346, 51346, 1738, 521, 565, 322, 264, 17542, 11, 1293, 4315, 2357, 293, 2577, 661, 561, 311, 6338, 281, 1651, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.12184298479998554, "compression_ratio": 1.5833333333333333, "no_speech_prob": 4.494989298109431e-06}, {"id": 812, "seek": 468654, "start": 4700.5, "end": 4706.18, "text": " You know, write posts, blog posts about what you're doing.", "tokens": [50364, 509, 458, 11, 257, 688, 295, 264, 1151, 1731, 917, 493, 1976, 552, 732, 420, 1045, 1413, 11, 1391, 50592, 50592, 544, 411, 1045, 1413, 13, 50744, 50744, 400, 767, 352, 807, 293, 3089, 382, 291, 1159, 293, 5120, 13, 51062, 51062, 509, 458, 11, 2464, 12300, 11, 6968, 12300, 466, 437, 291, 434, 884, 13, 51346, 51346, 1738, 521, 565, 322, 264, 17542, 11, 1293, 4315, 2357, 293, 2577, 661, 561, 311, 6338, 281, 1651, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.12184298479998554, "compression_ratio": 1.5833333333333333, "no_speech_prob": 4.494989298109431e-06}, {"id": 813, "seek": 468654, "start": 4706.18, "end": 4713.6, "text": " Spend time on the forum, both helping others and seeing other people's answers to questions.", "tokens": [50364, 509, 458, 11, 257, 688, 295, 264, 1151, 1731, 917, 493, 1976, 552, 732, 420, 1045, 1413, 11, 1391, 50592, 50592, 544, 411, 1045, 1413, 13, 50744, 50744, 400, 767, 352, 807, 293, 3089, 382, 291, 1159, 293, 5120, 13, 51062, 51062, 509, 458, 11, 2464, 12300, 11, 6968, 12300, 466, 437, 291, 434, 884, 13, 51346, 51346, 1738, 521, 565, 322, 264, 17542, 11, 1293, 4315, 2357, 293, 2577, 661, 561, 311, 6338, 281, 1651, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.12184298479998554, "compression_ratio": 1.5833333333333333, "no_speech_prob": 4.494989298109431e-06}, {"id": 814, "seek": 471360, "start": 4713.6, "end": 4718.42, "text": " Read the success stories on the forum and of people's projects to get inspiration for", "tokens": [50364, 17604, 264, 2245, 3676, 322, 264, 17542, 293, 295, 561, 311, 4455, 281, 483, 10249, 337, 50605, 50605, 721, 291, 727, 853, 13, 50763, 50763, 1485, 295, 264, 881, 1021, 721, 281, 360, 307, 281, 483, 1214, 365, 661, 561, 13, 50965, 50965, 1171, 1365, 11, 291, 393, 360, 11, 291, 458, 11, 257, 13453, 2979, 1594, 13, 51164, 51164, 682, 1186, 11, 322, 527, 32623, 11, 597, 291, 393, 915, 807, 527, 17542, 11, 456, 311, 1009, 2979, 3935, 51385, 51385, 516, 322, 13, 51466, 51466, 1610, 291, 393, 1884, 428, 1065, 13, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.17980285566680285, "compression_ratio": 1.6211453744493391, "no_speech_prob": 1.5935383999021724e-05}, {"id": 815, "seek": 471360, "start": 4718.42, "end": 4721.58, "text": " things you could try.", "tokens": [50364, 17604, 264, 2245, 3676, 322, 264, 17542, 293, 295, 561, 311, 4455, 281, 483, 10249, 337, 50605, 50605, 721, 291, 727, 853, 13, 50763, 50763, 1485, 295, 264, 881, 1021, 721, 281, 360, 307, 281, 483, 1214, 365, 661, 561, 13, 50965, 50965, 1171, 1365, 11, 291, 393, 360, 11, 291, 458, 11, 257, 13453, 2979, 1594, 13, 51164, 51164, 682, 1186, 11, 322, 527, 32623, 11, 597, 291, 393, 915, 807, 527, 17542, 11, 456, 311, 1009, 2979, 3935, 51385, 51385, 516, 322, 13, 51466, 51466, 1610, 291, 393, 1884, 428, 1065, 13, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.17980285566680285, "compression_ratio": 1.6211453744493391, "no_speech_prob": 1.5935383999021724e-05}, {"id": 816, "seek": 471360, "start": 4721.58, "end": 4725.620000000001, "text": " One of the most important things to do is to get together with other people.", "tokens": [50364, 17604, 264, 2245, 3676, 322, 264, 17542, 293, 295, 561, 311, 4455, 281, 483, 10249, 337, 50605, 50605, 721, 291, 727, 853, 13, 50763, 50763, 1485, 295, 264, 881, 1021, 721, 281, 360, 307, 281, 483, 1214, 365, 661, 561, 13, 50965, 50965, 1171, 1365, 11, 291, 393, 360, 11, 291, 458, 11, 257, 13453, 2979, 1594, 13, 51164, 51164, 682, 1186, 11, 322, 527, 32623, 11, 597, 291, 393, 915, 807, 527, 17542, 11, 456, 311, 1009, 2979, 3935, 51385, 51385, 516, 322, 13, 51466, 51466, 1610, 291, 393, 1884, 428, 1065, 13, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.17980285566680285, "compression_ratio": 1.6211453744493391, "no_speech_prob": 1.5935383999021724e-05}, {"id": 817, "seek": 471360, "start": 4725.620000000001, "end": 4729.6, "text": " For example, you can do, you know, a Zoom study group.", "tokens": [50364, 17604, 264, 2245, 3676, 322, 264, 17542, 293, 295, 561, 311, 4455, 281, 483, 10249, 337, 50605, 50605, 721, 291, 727, 853, 13, 50763, 50763, 1485, 295, 264, 881, 1021, 721, 281, 360, 307, 281, 483, 1214, 365, 661, 561, 13, 50965, 50965, 1171, 1365, 11, 291, 393, 360, 11, 291, 458, 11, 257, 13453, 2979, 1594, 13, 51164, 51164, 682, 1186, 11, 322, 527, 32623, 11, 597, 291, 393, 915, 807, 527, 17542, 11, 456, 311, 1009, 2979, 3935, 51385, 51385, 516, 322, 13, 51466, 51466, 1610, 291, 393, 1884, 428, 1065, 13, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.17980285566680285, "compression_ratio": 1.6211453744493391, "no_speech_prob": 1.5935383999021724e-05}, {"id": 818, "seek": 471360, "start": 4729.6, "end": 4734.02, "text": " In fact, on our Discord, which you can find through our forum, there's always study groups", "tokens": [50364, 17604, 264, 2245, 3676, 322, 264, 17542, 293, 295, 561, 311, 4455, 281, 483, 10249, 337, 50605, 50605, 721, 291, 727, 853, 13, 50763, 50763, 1485, 295, 264, 881, 1021, 721, 281, 360, 307, 281, 483, 1214, 365, 661, 561, 13, 50965, 50965, 1171, 1365, 11, 291, 393, 360, 11, 291, 458, 11, 257, 13453, 2979, 1594, 13, 51164, 51164, 682, 1186, 11, 322, 527, 32623, 11, 597, 291, 393, 915, 807, 527, 17542, 11, 456, 311, 1009, 2979, 3935, 51385, 51385, 516, 322, 13, 51466, 51466, 1610, 291, 393, 1884, 428, 1065, 13, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.17980285566680285, "compression_ratio": 1.6211453744493391, "no_speech_prob": 1.5935383999021724e-05}, {"id": 819, "seek": 471360, "start": 4734.02, "end": 4735.64, "text": " going on.", "tokens": [50364, 17604, 264, 2245, 3676, 322, 264, 17542, 293, 295, 561, 311, 4455, 281, 483, 10249, 337, 50605, 50605, 721, 291, 727, 853, 13, 50763, 50763, 1485, 295, 264, 881, 1021, 721, 281, 360, 307, 281, 483, 1214, 365, 661, 561, 13, 50965, 50965, 1171, 1365, 11, 291, 393, 360, 11, 291, 458, 11, 257, 13453, 2979, 1594, 13, 51164, 51164, 682, 1186, 11, 322, 527, 32623, 11, 597, 291, 393, 915, 807, 527, 17542, 11, 456, 311, 1009, 2979, 3935, 51385, 51385, 516, 322, 13, 51466, 51466, 1610, 291, 393, 1884, 428, 1065, 13, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.17980285566680285, "compression_ratio": 1.6211453744493391, "no_speech_prob": 1.5935383999021724e-05}, {"id": 820, "seek": 471360, "start": 4735.64, "end": 4738.9400000000005, "text": " Or you can create your own.", "tokens": [50364, 17604, 264, 2245, 3676, 322, 264, 17542, 293, 295, 561, 311, 4455, 281, 483, 10249, 337, 50605, 50605, 721, 291, 727, 853, 13, 50763, 50763, 1485, 295, 264, 881, 1021, 721, 281, 360, 307, 281, 483, 1214, 365, 661, 561, 13, 50965, 50965, 1171, 1365, 11, 291, 393, 360, 11, 291, 458, 11, 257, 13453, 2979, 1594, 13, 51164, 51164, 682, 1186, 11, 322, 527, 32623, 11, 597, 291, 393, 915, 807, 527, 17542, 11, 456, 311, 1009, 2979, 3935, 51385, 51385, 516, 322, 13, 51466, 51466, 1610, 291, 393, 1884, 428, 1065, 13, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.17980285566680285, "compression_ratio": 1.6211453744493391, "no_speech_prob": 1.5935383999021724e-05}, {"id": 821, "seek": 473894, "start": 4738.94, "end": 4743.82, "text": " You know, a study group to go through the book together.", "tokens": [50364, 509, 458, 11, 257, 2979, 1594, 281, 352, 807, 264, 1446, 1214, 13, 50608, 50608, 865, 293, 295, 1164, 11, 291, 458, 11, 1322, 1507, 13, 50720, 50720, 400, 2171, 309, 311, 12414, 281, 1009, 312, 1075, 281, 1322, 1507, 337, 589, 570, 1310, 456, 51112, 51112, 1943, 380, 11, 291, 434, 406, 1596, 294, 264, 558, 1859, 420, 436, 434, 406, 1596, 1919, 281, 853, 484, 2452, 51274, 51274, 2539, 1939, 13, 51324, 51324, 583, 300, 311, 1392, 13, 51498, 51498, 509, 458, 11, 1322, 512, 18240, 4455, 13, 51624, 51624, 11875, 512, 1507, 445, 337, 1019, 420, 1322, 512, 1507, 300, 291, 434, 11410, 466, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17861904416765487, "compression_ratio": 1.7573221757322175, "no_speech_prob": 8.013143087737262e-06}, {"id": 822, "seek": 473894, "start": 4743.82, "end": 4746.0599999999995, "text": " Yeah and of course, you know, build stuff.", "tokens": [50364, 509, 458, 11, 257, 2979, 1594, 281, 352, 807, 264, 1446, 1214, 13, 50608, 50608, 865, 293, 295, 1164, 11, 291, 458, 11, 1322, 1507, 13, 50720, 50720, 400, 2171, 309, 311, 12414, 281, 1009, 312, 1075, 281, 1322, 1507, 337, 589, 570, 1310, 456, 51112, 51112, 1943, 380, 11, 291, 434, 406, 1596, 294, 264, 558, 1859, 420, 436, 434, 406, 1596, 1919, 281, 853, 484, 2452, 51274, 51274, 2539, 1939, 13, 51324, 51324, 583, 300, 311, 1392, 13, 51498, 51498, 509, 458, 11, 1322, 512, 18240, 4455, 13, 51624, 51624, 11875, 512, 1507, 445, 337, 1019, 420, 1322, 512, 1507, 300, 291, 434, 11410, 466, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17861904416765487, "compression_ratio": 1.7573221757322175, "no_speech_prob": 8.013143087737262e-06}, {"id": 823, "seek": 473894, "start": 4746.0599999999995, "end": 4753.9, "text": " And sometimes it's tricky to always be able to build stuff for work because maybe there", "tokens": [50364, 509, 458, 11, 257, 2979, 1594, 281, 352, 807, 264, 1446, 1214, 13, 50608, 50608, 865, 293, 295, 1164, 11, 291, 458, 11, 1322, 1507, 13, 50720, 50720, 400, 2171, 309, 311, 12414, 281, 1009, 312, 1075, 281, 1322, 1507, 337, 589, 570, 1310, 456, 51112, 51112, 1943, 380, 11, 291, 434, 406, 1596, 294, 264, 558, 1859, 420, 436, 434, 406, 1596, 1919, 281, 853, 484, 2452, 51274, 51274, 2539, 1939, 13, 51324, 51324, 583, 300, 311, 1392, 13, 51498, 51498, 509, 458, 11, 1322, 512, 18240, 4455, 13, 51624, 51624, 11875, 512, 1507, 445, 337, 1019, 420, 1322, 512, 1507, 300, 291, 434, 11410, 466, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17861904416765487, "compression_ratio": 1.7573221757322175, "no_speech_prob": 8.013143087737262e-06}, {"id": 824, "seek": 473894, "start": 4753.9, "end": 4757.139999999999, "text": " isn't, you're not quite in the right area or they're not quite ready to try out deep", "tokens": [50364, 509, 458, 11, 257, 2979, 1594, 281, 352, 807, 264, 1446, 1214, 13, 50608, 50608, 865, 293, 295, 1164, 11, 291, 458, 11, 1322, 1507, 13, 50720, 50720, 400, 2171, 309, 311, 12414, 281, 1009, 312, 1075, 281, 1322, 1507, 337, 589, 570, 1310, 456, 51112, 51112, 1943, 380, 11, 291, 434, 406, 1596, 294, 264, 558, 1859, 420, 436, 434, 406, 1596, 1919, 281, 853, 484, 2452, 51274, 51274, 2539, 1939, 13, 51324, 51324, 583, 300, 311, 1392, 13, 51498, 51498, 509, 458, 11, 1322, 512, 18240, 4455, 13, 51624, 51624, 11875, 512, 1507, 445, 337, 1019, 420, 1322, 512, 1507, 300, 291, 434, 11410, 466, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17861904416765487, "compression_ratio": 1.7573221757322175, "no_speech_prob": 8.013143087737262e-06}, {"id": 825, "seek": 473894, "start": 4757.139999999999, "end": 4758.139999999999, "text": " learning yet.", "tokens": [50364, 509, 458, 11, 257, 2979, 1594, 281, 352, 807, 264, 1446, 1214, 13, 50608, 50608, 865, 293, 295, 1164, 11, 291, 458, 11, 1322, 1507, 13, 50720, 50720, 400, 2171, 309, 311, 12414, 281, 1009, 312, 1075, 281, 1322, 1507, 337, 589, 570, 1310, 456, 51112, 51112, 1943, 380, 11, 291, 434, 406, 1596, 294, 264, 558, 1859, 420, 436, 434, 406, 1596, 1919, 281, 853, 484, 2452, 51274, 51274, 2539, 1939, 13, 51324, 51324, 583, 300, 311, 1392, 13, 51498, 51498, 509, 458, 11, 1322, 512, 18240, 4455, 13, 51624, 51624, 11875, 512, 1507, 445, 337, 1019, 420, 1322, 512, 1507, 300, 291, 434, 11410, 466, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17861904416765487, "compression_ratio": 1.7573221757322175, "no_speech_prob": 8.013143087737262e-06}, {"id": 826, "seek": 473894, "start": 4758.139999999999, "end": 4761.62, "text": " But that's okay.", "tokens": [50364, 509, 458, 11, 257, 2979, 1594, 281, 352, 807, 264, 1446, 1214, 13, 50608, 50608, 865, 293, 295, 1164, 11, 291, 458, 11, 1322, 1507, 13, 50720, 50720, 400, 2171, 309, 311, 12414, 281, 1009, 312, 1075, 281, 1322, 1507, 337, 589, 570, 1310, 456, 51112, 51112, 1943, 380, 11, 291, 434, 406, 1596, 294, 264, 558, 1859, 420, 436, 434, 406, 1596, 1919, 281, 853, 484, 2452, 51274, 51274, 2539, 1939, 13, 51324, 51324, 583, 300, 311, 1392, 13, 51498, 51498, 509, 458, 11, 1322, 512, 18240, 4455, 13, 51624, 51624, 11875, 512, 1507, 445, 337, 1019, 420, 1322, 512, 1507, 300, 291, 434, 11410, 466, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17861904416765487, "compression_ratio": 1.7573221757322175, "no_speech_prob": 8.013143087737262e-06}, {"id": 827, "seek": 473894, "start": 4761.62, "end": 4764.139999999999, "text": " You know, build some hobby projects.", "tokens": [50364, 509, 458, 11, 257, 2979, 1594, 281, 352, 807, 264, 1446, 1214, 13, 50608, 50608, 865, 293, 295, 1164, 11, 291, 458, 11, 1322, 1507, 13, 50720, 50720, 400, 2171, 309, 311, 12414, 281, 1009, 312, 1075, 281, 1322, 1507, 337, 589, 570, 1310, 456, 51112, 51112, 1943, 380, 11, 291, 434, 406, 1596, 294, 264, 558, 1859, 420, 436, 434, 406, 1596, 1919, 281, 853, 484, 2452, 51274, 51274, 2539, 1939, 13, 51324, 51324, 583, 300, 311, 1392, 13, 51498, 51498, 509, 458, 11, 1322, 512, 18240, 4455, 13, 51624, 51624, 11875, 512, 1507, 445, 337, 1019, 420, 1322, 512, 1507, 300, 291, 434, 11410, 466, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17861904416765487, "compression_ratio": 1.7573221757322175, "no_speech_prob": 8.013143087737262e-06}, {"id": 828, "seek": 473894, "start": 4764.139999999999, "end": 4767.86, "text": " Build some stuff just for fun or build some stuff that you're passionate about.", "tokens": [50364, 509, 458, 11, 257, 2979, 1594, 281, 352, 807, 264, 1446, 1214, 13, 50608, 50608, 865, 293, 295, 1164, 11, 291, 458, 11, 1322, 1507, 13, 50720, 50720, 400, 2171, 309, 311, 12414, 281, 1009, 312, 1075, 281, 1322, 1507, 337, 589, 570, 1310, 456, 51112, 51112, 1943, 380, 11, 291, 434, 406, 1596, 294, 264, 558, 1859, 420, 436, 434, 406, 1596, 1919, 281, 853, 484, 2452, 51274, 51274, 2539, 1939, 13, 51324, 51324, 583, 300, 311, 1392, 13, 51498, 51498, 509, 458, 11, 1322, 512, 18240, 4455, 13, 51624, 51624, 11875, 512, 1507, 445, 337, 1019, 420, 1322, 512, 1507, 300, 291, 434, 11410, 466, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17861904416765487, "compression_ratio": 1.7573221757322175, "no_speech_prob": 8.013143087737262e-06}, {"id": 829, "seek": 476786, "start": 4767.86, "end": 4775.94, "text": " Yeah, so it's really important to not just put the videos away and go away and do something", "tokens": [50364, 865, 11, 370, 309, 311, 534, 1021, 281, 406, 445, 829, 264, 2145, 1314, 293, 352, 1314, 293, 360, 746, 50768, 50768, 1646, 570, 291, 603, 2870, 1203, 291, 600, 3264, 293, 291, 1582, 380, 362, 19268, 13, 51206, 51206, 407, 472, 295, 527, 1768, 2679, 1437, 322, 281, 1884, 364, 24433, 2445, 11, 337, 1365, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.09805964641883726, "compression_ratio": 1.4745762711864407, "no_speech_prob": 9.51588481257204e-06}, {"id": 830, "seek": 476786, "start": 4775.94, "end": 4784.7, "text": " else because you'll forget everything you've learned and you won't have practiced.", "tokens": [50364, 865, 11, 370, 309, 311, 534, 1021, 281, 406, 445, 829, 264, 2145, 1314, 293, 352, 1314, 293, 360, 746, 50768, 50768, 1646, 570, 291, 603, 2870, 1203, 291, 600, 3264, 293, 291, 1582, 380, 362, 19268, 13, 51206, 51206, 407, 472, 295, 527, 1768, 2679, 1437, 322, 281, 1884, 364, 24433, 2445, 11, 337, 1365, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.09805964641883726, "compression_ratio": 1.4745762711864407, "no_speech_prob": 9.51588481257204e-06}, {"id": 831, "seek": 476786, "start": 4784.7, "end": 4797.58, "text": " So one of our community members went on to create an activation function, for example,", "tokens": [50364, 865, 11, 370, 309, 311, 534, 1021, 281, 406, 445, 829, 264, 2145, 1314, 293, 352, 1314, 293, 360, 746, 50768, 50768, 1646, 570, 291, 603, 2870, 1203, 291, 600, 3264, 293, 291, 1582, 380, 362, 19268, 13, 51206, 51206, 407, 472, 295, 527, 1768, 2679, 1437, 322, 281, 1884, 364, 24433, 2445, 11, 337, 1365, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.09805964641883726, "compression_ratio": 1.4745762711864407, "no_speech_prob": 9.51588481257204e-06}, {"id": 832, "seek": 479758, "start": 4797.58, "end": 4807.0199999999995, "text": " which is MISH, which is now, as Tanishik has just reminded me on our forums, is now used", "tokens": [50364, 597, 307, 376, 18842, 11, 597, 307, 586, 11, 382, 314, 7524, 1035, 575, 445, 15920, 385, 322, 527, 26998, 11, 307, 586, 1143, 50836, 50836, 294, 867, 295, 264, 1785, 12, 2670, 12, 3322, 12, 446, 9590, 926, 264, 1002, 11, 597, 307, 1238, 1627, 13, 51312, 51312, 400, 415, 311, 586, 412, 376, 15949, 11, 286, 519, 11, 257, 2132, 11, 472, 295, 264, 1192, 2132, 20339, 294, 264, 1002, 13, 51538, 51538, 286, 2441, 577, 300, 311, 884, 13, 51648, 51648, 961, 311, 362, 257, 574, 13, 51698, 51698, 1037, 281, 3329, 2065, 15276, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.22701371884813495, "compression_ratio": 1.528301886792453, "no_speech_prob": 1.8057271518046036e-05}, {"id": 833, "seek": 479758, "start": 4807.0199999999995, "end": 4816.54, "text": " in many of the state-of-the-art networks around the world, which is pretty cool.", "tokens": [50364, 597, 307, 376, 18842, 11, 597, 307, 586, 11, 382, 314, 7524, 1035, 575, 445, 15920, 385, 322, 527, 26998, 11, 307, 586, 1143, 50836, 50836, 294, 867, 295, 264, 1785, 12, 2670, 12, 3322, 12, 446, 9590, 926, 264, 1002, 11, 597, 307, 1238, 1627, 13, 51312, 51312, 400, 415, 311, 586, 412, 376, 15949, 11, 286, 519, 11, 257, 2132, 11, 472, 295, 264, 1192, 2132, 20339, 294, 264, 1002, 13, 51538, 51538, 286, 2441, 577, 300, 311, 884, 13, 51648, 51648, 961, 311, 362, 257, 574, 13, 51698, 51698, 1037, 281, 3329, 2065, 15276, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.22701371884813495, "compression_ratio": 1.528301886792453, "no_speech_prob": 1.8057271518046036e-05}, {"id": 834, "seek": 479758, "start": 4816.54, "end": 4821.0599999999995, "text": " And he's now at Miele, I think, a research, one of the top research labs in the world.", "tokens": [50364, 597, 307, 376, 18842, 11, 597, 307, 586, 11, 382, 314, 7524, 1035, 575, 445, 15920, 385, 322, 527, 26998, 11, 307, 586, 1143, 50836, 50836, 294, 867, 295, 264, 1785, 12, 2670, 12, 3322, 12, 446, 9590, 926, 264, 1002, 11, 597, 307, 1238, 1627, 13, 51312, 51312, 400, 415, 311, 586, 412, 376, 15949, 11, 286, 519, 11, 257, 2132, 11, 472, 295, 264, 1192, 2132, 20339, 294, 264, 1002, 13, 51538, 51538, 286, 2441, 577, 300, 311, 884, 13, 51648, 51648, 961, 311, 362, 257, 574, 13, 51698, 51698, 1037, 281, 3329, 2065, 15276, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.22701371884813495, "compression_ratio": 1.528301886792453, "no_speech_prob": 1.8057271518046036e-05}, {"id": 835, "seek": 479758, "start": 4821.0599999999995, "end": 4823.26, "text": " I wonder how that's doing.", "tokens": [50364, 597, 307, 376, 18842, 11, 597, 307, 586, 11, 382, 314, 7524, 1035, 575, 445, 15920, 385, 322, 527, 26998, 11, 307, 586, 1143, 50836, 50836, 294, 867, 295, 264, 1785, 12, 2670, 12, 3322, 12, 446, 9590, 926, 264, 1002, 11, 597, 307, 1238, 1627, 13, 51312, 51312, 400, 415, 311, 586, 412, 376, 15949, 11, 286, 519, 11, 257, 2132, 11, 472, 295, 264, 1192, 2132, 20339, 294, 264, 1002, 13, 51538, 51538, 286, 2441, 577, 300, 311, 884, 13, 51648, 51648, 961, 311, 362, 257, 574, 13, 51698, 51698, 1037, 281, 3329, 2065, 15276, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.22701371884813495, "compression_ratio": 1.528301886792453, "no_speech_prob": 1.8057271518046036e-05}, {"id": 836, "seek": 479758, "start": 4823.26, "end": 4824.26, "text": " Let's have a look.", "tokens": [50364, 597, 307, 376, 18842, 11, 597, 307, 586, 11, 382, 314, 7524, 1035, 575, 445, 15920, 385, 322, 527, 26998, 11, 307, 586, 1143, 50836, 50836, 294, 867, 295, 264, 1785, 12, 2670, 12, 3322, 12, 446, 9590, 926, 264, 1002, 11, 597, 307, 1238, 1627, 13, 51312, 51312, 400, 415, 311, 586, 412, 376, 15949, 11, 286, 519, 11, 257, 2132, 11, 472, 295, 264, 1192, 2132, 20339, 294, 264, 1002, 13, 51538, 51538, 286, 2441, 577, 300, 311, 884, 13, 51648, 51648, 961, 311, 362, 257, 574, 13, 51698, 51698, 1037, 281, 3329, 2065, 15276, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.22701371884813495, "compression_ratio": 1.528301886792453, "no_speech_prob": 1.8057271518046036e-05}, {"id": 837, "seek": 479758, "start": 4824.26, "end": 4825.26, "text": " Go to Google Scholar.", "tokens": [50364, 597, 307, 376, 18842, 11, 597, 307, 586, 11, 382, 314, 7524, 1035, 575, 445, 15920, 385, 322, 527, 26998, 11, 307, 586, 1143, 50836, 50836, 294, 867, 295, 264, 1785, 12, 2670, 12, 3322, 12, 446, 9590, 926, 264, 1002, 11, 597, 307, 1238, 1627, 13, 51312, 51312, 400, 415, 311, 586, 412, 376, 15949, 11, 286, 519, 11, 257, 2132, 11, 472, 295, 264, 1192, 2132, 20339, 294, 264, 1002, 13, 51538, 51538, 286, 2441, 577, 300, 311, 884, 13, 51648, 51648, 961, 311, 362, 257, 574, 13, 51698, 51698, 1037, 281, 3329, 2065, 15276, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.22701371884813495, "compression_ratio": 1.528301886792453, "no_speech_prob": 1.8057271518046036e-05}, {"id": 838, "seek": 482526, "start": 4825.26, "end": 4831.06, "text": " Nice, 486 citations.", "tokens": [50364, 5490, 11, 11174, 21, 4814, 763, 13, 50654, 50654, 814, 434, 884, 869, 13, 51008, 51008, 1057, 558, 13, 51180, 51180, 961, 311, 362, 257, 574, 412, 577, 527, 6475, 32, 4829, 307, 516, 293, 1888, 484, 512, 295, 264, 6343, 20197, 51718, 51718, 6475, 10884, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.34867095947265625, "compression_ratio": 1.1967213114754098, "no_speech_prob": 1.8738576272880891e-06}, {"id": 839, "seek": 482526, "start": 4831.06, "end": 4838.14, "text": " They're doing great.", "tokens": [50364, 5490, 11, 11174, 21, 4814, 763, 13, 50654, 50654, 814, 434, 884, 869, 13, 51008, 51008, 1057, 558, 13, 51180, 51180, 961, 311, 362, 257, 574, 412, 577, 527, 6475, 32, 4829, 307, 516, 293, 1888, 484, 512, 295, 264, 6343, 20197, 51718, 51718, 6475, 10884, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.34867095947265625, "compression_ratio": 1.1967213114754098, "no_speech_prob": 1.8738576272880891e-06}, {"id": 840, "seek": 482526, "start": 4838.14, "end": 4841.58, "text": " All right.", "tokens": [50364, 5490, 11, 11174, 21, 4814, 763, 13, 50654, 50654, 814, 434, 884, 869, 13, 51008, 51008, 1057, 558, 13, 51180, 51180, 961, 311, 362, 257, 574, 412, 577, 527, 6475, 32, 4829, 307, 516, 293, 1888, 484, 512, 295, 264, 6343, 20197, 51718, 51718, 6475, 10884, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.34867095947265625, "compression_ratio": 1.1967213114754098, "no_speech_prob": 1.8738576272880891e-06}, {"id": 841, "seek": 482526, "start": 4841.58, "end": 4852.34, "text": " Let's have a look at how our AMA topic is going and pick out some of the highest ranked", "tokens": [50364, 5490, 11, 11174, 21, 4814, 763, 13, 50654, 50654, 814, 434, 884, 869, 13, 51008, 51008, 1057, 558, 13, 51180, 51180, 961, 311, 362, 257, 574, 412, 577, 527, 6475, 32, 4829, 307, 516, 293, 1888, 484, 512, 295, 264, 6343, 20197, 51718, 51718, 6475, 10884, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.34867095947265625, "compression_ratio": 1.1967213114754098, "no_speech_prob": 1.8738576272880891e-06}, {"id": 842, "seek": 482526, "start": 4852.34, "end": 4853.34, "text": " AMAs.", "tokens": [50364, 5490, 11, 11174, 21, 4814, 763, 13, 50654, 50654, 814, 434, 884, 869, 13, 51008, 51008, 1057, 558, 13, 51180, 51180, 961, 311, 362, 257, 574, 412, 577, 527, 6475, 32, 4829, 307, 516, 293, 1888, 484, 512, 295, 264, 6343, 20197, 51718, 51718, 6475, 10884, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.34867095947265625, "compression_ratio": 1.1967213114754098, "no_speech_prob": 1.8738576272880891e-06}, {"id": 843, "seek": 485334, "start": 4853.34, "end": 4862.46, "text": " Okay.", "tokens": [50364, 1033, 13, 50820, 50820, 407, 264, 700, 472, 307, 490, 19178, 13, 50950, 50950, 400, 767, 11, 1310, 286, 820, 485, 51024, 51024, 5135, 11, 718, 311, 3679, 527, 1910, 510, 13, 51323, 51323, 407, 527, 700, 6475, 32, 307, 490, 19178, 11, 293, 19178, 8962, 11, 577, 360, 291, 1754, 14515, 30, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.2501799098232336, "compression_ratio": 1.348148148148148, "no_speech_prob": 4.289277967473026e-06}, {"id": 844, "seek": 485334, "start": 4862.46, "end": 4865.06, "text": " So the first one is from Lucas.", "tokens": [50364, 1033, 13, 50820, 50820, 407, 264, 700, 472, 307, 490, 19178, 13, 50950, 50950, 400, 767, 11, 1310, 286, 820, 485, 51024, 51024, 5135, 11, 718, 311, 3679, 527, 1910, 510, 13, 51323, 51323, 407, 527, 700, 6475, 32, 307, 490, 19178, 11, 293, 19178, 8962, 11, 577, 360, 291, 1754, 14515, 30, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.2501799098232336, "compression_ratio": 1.348148148148148, "no_speech_prob": 4.289277967473026e-06}, {"id": 845, "seek": 485334, "start": 4865.06, "end": 4866.54, "text": " And actually, maybe I should...", "tokens": [50364, 1033, 13, 50820, 50820, 407, 264, 700, 472, 307, 490, 19178, 13, 50950, 50950, 400, 767, 11, 1310, 286, 820, 485, 51024, 51024, 5135, 11, 718, 311, 3679, 527, 1910, 510, 13, 51323, 51323, 407, 527, 700, 6475, 32, 307, 490, 19178, 11, 293, 19178, 8962, 11, 577, 360, 291, 1754, 14515, 30, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.2501799098232336, "compression_ratio": 1.348148148148148, "no_speech_prob": 4.289277967473026e-06}, {"id": 846, "seek": 485334, "start": 4866.54, "end": 4872.52, "text": " Actually, let's switch our view here.", "tokens": [50364, 1033, 13, 50820, 50820, 407, 264, 700, 472, 307, 490, 19178, 13, 50950, 50950, 400, 767, 11, 1310, 286, 820, 485, 51024, 51024, 5135, 11, 718, 311, 3679, 527, 1910, 510, 13, 51323, 51323, 407, 527, 700, 6475, 32, 307, 490, 19178, 11, 293, 19178, 8962, 11, 577, 360, 291, 1754, 14515, 30, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.2501799098232336, "compression_ratio": 1.348148148148148, "no_speech_prob": 4.289277967473026e-06}, {"id": 847, "seek": 485334, "start": 4872.52, "end": 4880.18, "text": " So our first AMA is from Lucas, and Lucas asks, how do you stay motivated?", "tokens": [50364, 1033, 13, 50820, 50820, 407, 264, 700, 472, 307, 490, 19178, 13, 50950, 50950, 400, 767, 11, 1310, 286, 820, 485, 51024, 51024, 5135, 11, 718, 311, 3679, 527, 1910, 510, 13, 51323, 51323, 407, 527, 700, 6475, 32, 307, 490, 19178, 11, 293, 19178, 8962, 11, 577, 360, 291, 1754, 14515, 30, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.2501799098232336, "compression_ratio": 1.348148148148148, "no_speech_prob": 4.289277967473026e-06}, {"id": 848, "seek": 488018, "start": 4880.18, "end": 4884.06, "text": " I often find myself overwhelmed in this field.", "tokens": [50364, 286, 2049, 915, 2059, 19042, 294, 341, 2519, 13, 50558, 50558, 821, 366, 370, 867, 777, 721, 1348, 493, 300, 286, 841, 411, 286, 362, 281, 829, 370, 709, 2281, 445, 50832, 50832, 281, 1066, 452, 1378, 3673, 264, 1281, 1889, 13, 51024, 51024, 865, 11, 300, 311, 257, 588, 1880, 1168, 13, 51192, 51192, 286, 914, 11, 286, 519, 19178, 11, 264, 1021, 551, 307, 281, 4325, 291, 500, 380, 362, 281, 458, 1203, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.17065895795822145, "compression_ratio": 1.497560975609756, "no_speech_prob": 5.8620616982807405e-06}, {"id": 849, "seek": 488018, "start": 4884.06, "end": 4889.54, "text": " There are so many new things coming up that I feel like I have to put so much energy just", "tokens": [50364, 286, 2049, 915, 2059, 19042, 294, 341, 2519, 13, 50558, 50558, 821, 366, 370, 867, 777, 721, 1348, 493, 300, 286, 841, 411, 286, 362, 281, 829, 370, 709, 2281, 445, 50832, 50832, 281, 1066, 452, 1378, 3673, 264, 1281, 1889, 13, 51024, 51024, 865, 11, 300, 311, 257, 588, 1880, 1168, 13, 51192, 51192, 286, 914, 11, 286, 519, 19178, 11, 264, 1021, 551, 307, 281, 4325, 291, 500, 380, 362, 281, 458, 1203, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.17065895795822145, "compression_ratio": 1.497560975609756, "no_speech_prob": 5.8620616982807405e-06}, {"id": 850, "seek": 488018, "start": 4889.54, "end": 4893.38, "text": " to keep my head above the waterline.", "tokens": [50364, 286, 2049, 915, 2059, 19042, 294, 341, 2519, 13, 50558, 50558, 821, 366, 370, 867, 777, 721, 1348, 493, 300, 286, 841, 411, 286, 362, 281, 829, 370, 709, 2281, 445, 50832, 50832, 281, 1066, 452, 1378, 3673, 264, 1281, 1889, 13, 51024, 51024, 865, 11, 300, 311, 257, 588, 1880, 1168, 13, 51192, 51192, 286, 914, 11, 286, 519, 19178, 11, 264, 1021, 551, 307, 281, 4325, 291, 500, 380, 362, 281, 458, 1203, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.17065895795822145, "compression_ratio": 1.497560975609756, "no_speech_prob": 5.8620616982807405e-06}, {"id": 851, "seek": 488018, "start": 4893.38, "end": 4896.740000000001, "text": " Yeah, that's a very interesting question.", "tokens": [50364, 286, 2049, 915, 2059, 19042, 294, 341, 2519, 13, 50558, 50558, 821, 366, 370, 867, 777, 721, 1348, 493, 300, 286, 841, 411, 286, 362, 281, 829, 370, 709, 2281, 445, 50832, 50832, 281, 1066, 452, 1378, 3673, 264, 1281, 1889, 13, 51024, 51024, 865, 11, 300, 311, 257, 588, 1880, 1168, 13, 51192, 51192, 286, 914, 11, 286, 519, 19178, 11, 264, 1021, 551, 307, 281, 4325, 291, 500, 380, 362, 281, 458, 1203, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.17065895795822145, "compression_ratio": 1.497560975609756, "no_speech_prob": 5.8620616982807405e-06}, {"id": 852, "seek": 488018, "start": 4896.740000000001, "end": 4906.54, "text": " I mean, I think Lucas, the important thing is to realize you don't have to know everything.", "tokens": [50364, 286, 2049, 915, 2059, 19042, 294, 341, 2519, 13, 50558, 50558, 821, 366, 370, 867, 777, 721, 1348, 493, 300, 286, 841, 411, 286, 362, 281, 829, 370, 709, 2281, 445, 50832, 50832, 281, 1066, 452, 1378, 3673, 264, 1281, 1889, 13, 51024, 51024, 865, 11, 300, 311, 257, 588, 1880, 1168, 13, 51192, 51192, 286, 914, 11, 286, 519, 19178, 11, 264, 1021, 551, 307, 281, 4325, 291, 500, 380, 362, 281, 458, 1203, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.17065895795822145, "compression_ratio": 1.497560975609756, "no_speech_prob": 5.8620616982807405e-06}, {"id": 853, "seek": 490654, "start": 4906.54, "end": 4912.92, "text": " You know, in fact, nobody knows everything, and that's okay.", "tokens": [50364, 509, 458, 11, 294, 1186, 11, 5079, 3255, 1203, 11, 293, 300, 311, 1392, 13, 50683, 50683, 708, 561, 360, 307, 436, 747, 364, 1179, 294, 512, 1859, 11, 293, 436, 1524, 300, 11, 293, 436, 51072, 51072, 853, 293, 360, 264, 1151, 1691, 436, 393, 295, 5145, 493, 365, 512, 707, 1422, 1859, 13, 51370, 51370, 400, 498, 428, 707, 1422, 1859, 307, 886, 709, 281, 1066, 493, 322, 11, 1888, 257, 1422, 1422, 1859, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.1458036752394688, "compression_ratio": 1.6573033707865168, "no_speech_prob": 6.540320555359358e-06}, {"id": 854, "seek": 490654, "start": 4912.92, "end": 4920.7, "text": " What people do is they take an interest in some area, and they follow that, and they", "tokens": [50364, 509, 458, 11, 294, 1186, 11, 5079, 3255, 1203, 11, 293, 300, 311, 1392, 13, 50683, 50683, 708, 561, 360, 307, 436, 747, 364, 1179, 294, 512, 1859, 11, 293, 436, 1524, 300, 11, 293, 436, 51072, 51072, 853, 293, 360, 264, 1151, 1691, 436, 393, 295, 5145, 493, 365, 512, 707, 1422, 1859, 13, 51370, 51370, 400, 498, 428, 707, 1422, 1859, 307, 886, 709, 281, 1066, 493, 322, 11, 1888, 257, 1422, 1422, 1859, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.1458036752394688, "compression_ratio": 1.6573033707865168, "no_speech_prob": 6.540320555359358e-06}, {"id": 855, "seek": 490654, "start": 4920.7, "end": 4926.66, "text": " try and do the best job they can of keeping up with some little sub area.", "tokens": [50364, 509, 458, 11, 294, 1186, 11, 5079, 3255, 1203, 11, 293, 300, 311, 1392, 13, 50683, 50683, 708, 561, 360, 307, 436, 747, 364, 1179, 294, 512, 1859, 11, 293, 436, 1524, 300, 11, 293, 436, 51072, 51072, 853, 293, 360, 264, 1151, 1691, 436, 393, 295, 5145, 493, 365, 512, 707, 1422, 1859, 13, 51370, 51370, 400, 498, 428, 707, 1422, 1859, 307, 886, 709, 281, 1066, 493, 322, 11, 1888, 257, 1422, 1422, 1859, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.1458036752394688, "compression_ratio": 1.6573033707865168, "no_speech_prob": 6.540320555359358e-06}, {"id": 856, "seek": 490654, "start": 4926.66, "end": 4931.62, "text": " And if your little sub area is too much to keep up on, pick a sub sub area.", "tokens": [50364, 509, 458, 11, 294, 1186, 11, 5079, 3255, 1203, 11, 293, 300, 311, 1392, 13, 50683, 50683, 708, 561, 360, 307, 436, 747, 364, 1179, 294, 512, 1859, 11, 293, 436, 1524, 300, 11, 293, 436, 51072, 51072, 853, 293, 360, 264, 1151, 1691, 436, 393, 295, 5145, 493, 365, 512, 707, 1422, 1859, 13, 51370, 51370, 400, 498, 428, 707, 1422, 1859, 307, 886, 709, 281, 1066, 493, 322, 11, 1888, 257, 1422, 1422, 1859, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.1458036752394688, "compression_ratio": 1.6573033707865168, "no_speech_prob": 6.540320555359358e-06}, {"id": 857, "seek": 493162, "start": 4931.62, "end": 4936.58, "text": " Yeah, there's nothing like... there's no need for it to be demotivating that there's a lot", "tokens": [50364, 865, 11, 456, 311, 1825, 411, 485, 456, 311, 572, 643, 337, 309, 281, 312, 1371, 310, 592, 990, 300, 456, 311, 257, 688, 50612, 50612, 295, 561, 884, 257, 688, 295, 1880, 589, 293, 257, 688, 295, 819, 1422, 7610, 82, 13, 50814, 50814, 663, 311, 1627, 13, 50864, 50864, 509, 458, 11, 309, 1143, 281, 312, 733, 295, 23471, 562, 456, 311, 787, 1936, 1732, 20339, 294, 264, 1002, 51090, 51090, 1364, 322, 18161, 36170, 13, 51358, 51358, 400, 1338, 11, 490, 565, 281, 565, 11, 291, 458, 11, 747, 257, 10460, 666, 661, 3179, 300, 1310, 291, 434, 406, 51566, 51566, 3480, 382, 8185, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14859834739140101, "compression_ratio": 1.6820083682008369, "no_speech_prob": 7.527882189606316e-06}, {"id": 858, "seek": 493162, "start": 4936.58, "end": 4940.62, "text": " of people doing a lot of interesting work and a lot of different subfields.", "tokens": [50364, 865, 11, 456, 311, 1825, 411, 485, 456, 311, 572, 643, 337, 309, 281, 312, 1371, 310, 592, 990, 300, 456, 311, 257, 688, 50612, 50612, 295, 561, 884, 257, 688, 295, 1880, 589, 293, 257, 688, 295, 819, 1422, 7610, 82, 13, 50814, 50814, 663, 311, 1627, 13, 50864, 50864, 509, 458, 11, 309, 1143, 281, 312, 733, 295, 23471, 562, 456, 311, 787, 1936, 1732, 20339, 294, 264, 1002, 51090, 51090, 1364, 322, 18161, 36170, 13, 51358, 51358, 400, 1338, 11, 490, 565, 281, 565, 11, 291, 458, 11, 747, 257, 10460, 666, 661, 3179, 300, 1310, 291, 434, 406, 51566, 51566, 3480, 382, 8185, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14859834739140101, "compression_ratio": 1.6820083682008369, "no_speech_prob": 7.527882189606316e-06}, {"id": 859, "seek": 493162, "start": 4940.62, "end": 4941.62, "text": " That's cool.", "tokens": [50364, 865, 11, 456, 311, 1825, 411, 485, 456, 311, 572, 643, 337, 309, 281, 312, 1371, 310, 592, 990, 300, 456, 311, 257, 688, 50612, 50612, 295, 561, 884, 257, 688, 295, 1880, 589, 293, 257, 688, 295, 819, 1422, 7610, 82, 13, 50814, 50814, 663, 311, 1627, 13, 50864, 50864, 509, 458, 11, 309, 1143, 281, 312, 733, 295, 23471, 562, 456, 311, 787, 1936, 1732, 20339, 294, 264, 1002, 51090, 51090, 1364, 322, 18161, 36170, 13, 51358, 51358, 400, 1338, 11, 490, 565, 281, 565, 11, 291, 458, 11, 747, 257, 10460, 666, 661, 3179, 300, 1310, 291, 434, 406, 51566, 51566, 3480, 382, 8185, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14859834739140101, "compression_ratio": 1.6820083682008369, "no_speech_prob": 7.527882189606316e-06}, {"id": 860, "seek": 493162, "start": 4941.62, "end": 4946.14, "text": " You know, it used to be kind of dull when there's only basically five labs in the world", "tokens": [50364, 865, 11, 456, 311, 1825, 411, 485, 456, 311, 572, 643, 337, 309, 281, 312, 1371, 310, 592, 990, 300, 456, 311, 257, 688, 50612, 50612, 295, 561, 884, 257, 688, 295, 1880, 589, 293, 257, 688, 295, 819, 1422, 7610, 82, 13, 50814, 50814, 663, 311, 1627, 13, 50864, 50864, 509, 458, 11, 309, 1143, 281, 312, 733, 295, 23471, 562, 456, 311, 787, 1936, 1732, 20339, 294, 264, 1002, 51090, 51090, 1364, 322, 18161, 36170, 13, 51358, 51358, 400, 1338, 11, 490, 565, 281, 565, 11, 291, 458, 11, 747, 257, 10460, 666, 661, 3179, 300, 1310, 291, 434, 406, 51566, 51566, 3480, 382, 8185, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14859834739140101, "compression_ratio": 1.6820083682008369, "no_speech_prob": 7.527882189606316e-06}, {"id": 861, "seek": 493162, "start": 4946.14, "end": 4951.5, "text": " working on neural nets.", "tokens": [50364, 865, 11, 456, 311, 1825, 411, 485, 456, 311, 572, 643, 337, 309, 281, 312, 1371, 310, 592, 990, 300, 456, 311, 257, 688, 50612, 50612, 295, 561, 884, 257, 688, 295, 1880, 589, 293, 257, 688, 295, 819, 1422, 7610, 82, 13, 50814, 50814, 663, 311, 1627, 13, 50864, 50864, 509, 458, 11, 309, 1143, 281, 312, 733, 295, 23471, 562, 456, 311, 787, 1936, 1732, 20339, 294, 264, 1002, 51090, 51090, 1364, 322, 18161, 36170, 13, 51358, 51358, 400, 1338, 11, 490, 565, 281, 565, 11, 291, 458, 11, 747, 257, 10460, 666, 661, 3179, 300, 1310, 291, 434, 406, 51566, 51566, 3480, 382, 8185, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14859834739140101, "compression_ratio": 1.6820083682008369, "no_speech_prob": 7.527882189606316e-06}, {"id": 862, "seek": 493162, "start": 4951.5, "end": 4955.66, "text": " And yeah, from time to time, you know, take a dip into other areas that maybe you're not", "tokens": [50364, 865, 11, 456, 311, 1825, 411, 485, 456, 311, 572, 643, 337, 309, 281, 312, 1371, 310, 592, 990, 300, 456, 311, 257, 688, 50612, 50612, 295, 561, 884, 257, 688, 295, 1880, 589, 293, 257, 688, 295, 819, 1422, 7610, 82, 13, 50814, 50814, 663, 311, 1627, 13, 50864, 50864, 509, 458, 11, 309, 1143, 281, 312, 733, 295, 23471, 562, 456, 311, 787, 1936, 1732, 20339, 294, 264, 1002, 51090, 51090, 1364, 322, 18161, 36170, 13, 51358, 51358, 400, 1338, 11, 490, 565, 281, 565, 11, 291, 458, 11, 747, 257, 10460, 666, 661, 3179, 300, 1310, 291, 434, 406, 51566, 51566, 3480, 382, 8185, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14859834739140101, "compression_ratio": 1.6820083682008369, "no_speech_prob": 7.527882189606316e-06}, {"id": 863, "seek": 493162, "start": 4955.66, "end": 4956.66, "text": " following as closely.", "tokens": [50364, 865, 11, 456, 311, 1825, 411, 485, 456, 311, 572, 643, 337, 309, 281, 312, 1371, 310, 592, 990, 300, 456, 311, 257, 688, 50612, 50612, 295, 561, 884, 257, 688, 295, 1880, 589, 293, 257, 688, 295, 819, 1422, 7610, 82, 13, 50814, 50814, 663, 311, 1627, 13, 50864, 50864, 509, 458, 11, 309, 1143, 281, 312, 733, 295, 23471, 562, 456, 311, 787, 1936, 1732, 20339, 294, 264, 1002, 51090, 51090, 1364, 322, 18161, 36170, 13, 51358, 51358, 400, 1338, 11, 490, 565, 281, 565, 11, 291, 458, 11, 747, 257, 10460, 666, 661, 3179, 300, 1310, 291, 434, 406, 51566, 51566, 3480, 382, 8185, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14859834739140101, "compression_ratio": 1.6820083682008369, "no_speech_prob": 7.527882189606316e-06}, {"id": 864, "seek": 495666, "start": 4956.66, "end": 4963.18, "text": " But when you're just starting out, you'll find that things are not changing that fast", "tokens": [50364, 583, 562, 291, 434, 445, 2891, 484, 11, 291, 603, 915, 300, 721, 366, 406, 4473, 300, 2370, 50690, 50690, 412, 439, 11, 534, 13, 50740, 50740, 467, 393, 733, 295, 574, 300, 636, 570, 561, 366, 1009, 3372, 484, 1886, 16952, 466, 50936, 50936, 641, 777, 46664, 13, 51068, 51068, 583, 17879, 11, 264, 1507, 300, 307, 294, 264, 1164, 586, 307, 406, 300, 819, 281, 437, 390, 51398, 51398, 294, 264, 1164, 1732, 924, 2057, 13, 51624, 51624, 440, 22467, 2378, 380, 3105, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1334355672200521, "compression_ratio": 1.6318181818181818, "no_speech_prob": 3.340509692861815e-06}, {"id": 865, "seek": 495666, "start": 4963.18, "end": 4964.18, "text": " at all, really.", "tokens": [50364, 583, 562, 291, 434, 445, 2891, 484, 11, 291, 603, 915, 300, 721, 366, 406, 4473, 300, 2370, 50690, 50690, 412, 439, 11, 534, 13, 50740, 50740, 467, 393, 733, 295, 574, 300, 636, 570, 561, 366, 1009, 3372, 484, 1886, 16952, 466, 50936, 50936, 641, 777, 46664, 13, 51068, 51068, 583, 17879, 11, 264, 1507, 300, 307, 294, 264, 1164, 586, 307, 406, 300, 819, 281, 437, 390, 51398, 51398, 294, 264, 1164, 1732, 924, 2057, 13, 51624, 51624, 440, 22467, 2378, 380, 3105, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1334355672200521, "compression_ratio": 1.6318181818181818, "no_speech_prob": 3.340509692861815e-06}, {"id": 866, "seek": 495666, "start": 4964.18, "end": 4968.099999999999, "text": " It can kind of look that way because people are always putting out press releases about", "tokens": [50364, 583, 562, 291, 434, 445, 2891, 484, 11, 291, 603, 915, 300, 721, 366, 406, 4473, 300, 2370, 50690, 50690, 412, 439, 11, 534, 13, 50740, 50740, 467, 393, 733, 295, 574, 300, 636, 570, 561, 366, 1009, 3372, 484, 1886, 16952, 466, 50936, 50936, 641, 777, 46664, 13, 51068, 51068, 583, 17879, 11, 264, 1507, 300, 307, 294, 264, 1164, 586, 307, 406, 300, 819, 281, 437, 390, 51398, 51398, 294, 264, 1164, 1732, 924, 2057, 13, 51624, 51624, 440, 22467, 2378, 380, 3105, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1334355672200521, "compression_ratio": 1.6318181818181818, "no_speech_prob": 3.340509692861815e-06}, {"id": 867, "seek": 495666, "start": 4968.099999999999, "end": 4970.74, "text": " their new tweaks.", "tokens": [50364, 583, 562, 291, 434, 445, 2891, 484, 11, 291, 603, 915, 300, 721, 366, 406, 4473, 300, 2370, 50690, 50690, 412, 439, 11, 534, 13, 50740, 50740, 467, 393, 733, 295, 574, 300, 636, 570, 561, 366, 1009, 3372, 484, 1886, 16952, 466, 50936, 50936, 641, 777, 46664, 13, 51068, 51068, 583, 17879, 11, 264, 1507, 300, 307, 294, 264, 1164, 586, 307, 406, 300, 819, 281, 437, 390, 51398, 51398, 294, 264, 1164, 1732, 924, 2057, 13, 51624, 51624, 440, 22467, 2378, 380, 3105, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1334355672200521, "compression_ratio": 1.6318181818181818, "no_speech_prob": 3.340509692861815e-06}, {"id": 868, "seek": 495666, "start": 4970.74, "end": 4977.34, "text": " But fundamentally, the stuff that is in the course now is not that different to what was", "tokens": [50364, 583, 562, 291, 434, 445, 2891, 484, 11, 291, 603, 915, 300, 721, 366, 406, 4473, 300, 2370, 50690, 50690, 412, 439, 11, 534, 13, 50740, 50740, 467, 393, 733, 295, 574, 300, 636, 570, 561, 366, 1009, 3372, 484, 1886, 16952, 466, 50936, 50936, 641, 777, 46664, 13, 51068, 51068, 583, 17879, 11, 264, 1507, 300, 307, 294, 264, 1164, 586, 307, 406, 300, 819, 281, 437, 390, 51398, 51398, 294, 264, 1164, 1732, 924, 2057, 13, 51624, 51624, 440, 22467, 2378, 380, 3105, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1334355672200521, "compression_ratio": 1.6318181818181818, "no_speech_prob": 3.340509692861815e-06}, {"id": 869, "seek": 495666, "start": 4977.34, "end": 4981.86, "text": " in the course five years ago.", "tokens": [50364, 583, 562, 291, 434, 445, 2891, 484, 11, 291, 603, 915, 300, 721, 366, 406, 4473, 300, 2370, 50690, 50690, 412, 439, 11, 534, 13, 50740, 50740, 467, 393, 733, 295, 574, 300, 636, 570, 561, 366, 1009, 3372, 484, 1886, 16952, 466, 50936, 50936, 641, 777, 46664, 13, 51068, 51068, 583, 17879, 11, 264, 1507, 300, 307, 294, 264, 1164, 586, 307, 406, 300, 819, 281, 437, 390, 51398, 51398, 294, 264, 1164, 1732, 924, 2057, 13, 51624, 51624, 440, 22467, 2378, 380, 3105, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1334355672200521, "compression_ratio": 1.6318181818181818, "no_speech_prob": 3.340509692861815e-06}, {"id": 870, "seek": 495666, "start": 4981.86, "end": 4983.66, "text": " The foundations haven't changed.", "tokens": [50364, 583, 562, 291, 434, 445, 2891, 484, 11, 291, 603, 915, 300, 721, 366, 406, 4473, 300, 2370, 50690, 50690, 412, 439, 11, 534, 13, 50740, 50740, 467, 393, 733, 295, 574, 300, 636, 570, 561, 366, 1009, 3372, 484, 1886, 16952, 466, 50936, 50936, 641, 777, 46664, 13, 51068, 51068, 583, 17879, 11, 264, 1507, 300, 307, 294, 264, 1164, 586, 307, 406, 300, 819, 281, 437, 390, 51398, 51398, 294, 264, 1164, 1732, 924, 2057, 13, 51624, 51624, 440, 22467, 2378, 380, 3105, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1334355672200521, "compression_ratio": 1.6318181818181818, "no_speech_prob": 3.340509692861815e-06}, {"id": 871, "seek": 498366, "start": 4983.66, "end": 4987.54, "text": " And it's not that different, in fact, to the convolutional neural network that Jan Lekun", "tokens": [50364, 400, 309, 311, 406, 300, 819, 11, 294, 1186, 11, 281, 264, 45216, 304, 18161, 3209, 300, 4956, 441, 916, 409, 50558, 50558, 1143, 322, 376, 45, 19756, 646, 294, 22690, 13, 50836, 50836, 440, 3875, 3487, 286, 600, 7619, 366, 5680, 11, 291, 458, 11, 264, 636, 264, 15743, 589, 293, 264, 51144, 51144, 29022, 295, 8141, 12788, 4890, 293, 24433, 6828, 293, 264, 1507, 291, 360, 281, 264, 2572, 51420, 51420, 4583, 13, 51470, 51470, 509, 458, 11, 1203, 1646, 307, 46664, 13, 51596, 51596, 400, 264, 544, 291, 1466, 466, 729, 3875, 3487, 11, 264, 544, 291, 603, 5521, 729, 46664, 382, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16998177274651483, "compression_ratio": 1.6150943396226416, "no_speech_prob": 5.594250524154631e-06}, {"id": 872, "seek": 498366, "start": 4987.54, "end": 4993.099999999999, "text": " used on MNIST back in 1996.", "tokens": [50364, 400, 309, 311, 406, 300, 819, 11, 294, 1186, 11, 281, 264, 45216, 304, 18161, 3209, 300, 4956, 441, 916, 409, 50558, 50558, 1143, 322, 376, 45, 19756, 646, 294, 22690, 13, 50836, 50836, 440, 3875, 3487, 286, 600, 7619, 366, 5680, 11, 291, 458, 11, 264, 636, 264, 15743, 589, 293, 264, 51144, 51144, 29022, 295, 8141, 12788, 4890, 293, 24433, 6828, 293, 264, 1507, 291, 360, 281, 264, 2572, 51420, 51420, 4583, 13, 51470, 51470, 509, 458, 11, 1203, 1646, 307, 46664, 13, 51596, 51596, 400, 264, 544, 291, 1466, 466, 729, 3875, 3487, 11, 264, 544, 291, 603, 5521, 729, 46664, 382, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16998177274651483, "compression_ratio": 1.6150943396226416, "no_speech_prob": 5.594250524154631e-06}, {"id": 873, "seek": 498366, "start": 4993.099999999999, "end": 4999.26, "text": " The basic ideas I've described are forever, you know, the way the inputs work and the", "tokens": [50364, 400, 309, 311, 406, 300, 819, 11, 294, 1186, 11, 281, 264, 45216, 304, 18161, 3209, 300, 4956, 441, 916, 409, 50558, 50558, 1143, 322, 376, 45, 19756, 646, 294, 22690, 13, 50836, 50836, 440, 3875, 3487, 286, 600, 7619, 366, 5680, 11, 291, 458, 11, 264, 636, 264, 15743, 589, 293, 264, 51144, 51144, 29022, 295, 8141, 12788, 4890, 293, 24433, 6828, 293, 264, 1507, 291, 360, 281, 264, 2572, 51420, 51420, 4583, 13, 51470, 51470, 509, 458, 11, 1203, 1646, 307, 46664, 13, 51596, 51596, 400, 264, 544, 291, 1466, 466, 729, 3875, 3487, 11, 264, 544, 291, 603, 5521, 729, 46664, 382, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16998177274651483, "compression_ratio": 1.6150943396226416, "no_speech_prob": 5.594250524154631e-06}, {"id": 874, "seek": 498366, "start": 4999.26, "end": 5004.78, "text": " sandwiches of matrix multipliers and activation functions and the stuff you do to the final", "tokens": [50364, 400, 309, 311, 406, 300, 819, 11, 294, 1186, 11, 281, 264, 45216, 304, 18161, 3209, 300, 4956, 441, 916, 409, 50558, 50558, 1143, 322, 376, 45, 19756, 646, 294, 22690, 13, 50836, 50836, 440, 3875, 3487, 286, 600, 7619, 366, 5680, 11, 291, 458, 11, 264, 636, 264, 15743, 589, 293, 264, 51144, 51144, 29022, 295, 8141, 12788, 4890, 293, 24433, 6828, 293, 264, 1507, 291, 360, 281, 264, 2572, 51420, 51420, 4583, 13, 51470, 51470, 509, 458, 11, 1203, 1646, 307, 46664, 13, 51596, 51596, 400, 264, 544, 291, 1466, 466, 729, 3875, 3487, 11, 264, 544, 291, 603, 5521, 729, 46664, 382, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16998177274651483, "compression_ratio": 1.6150943396226416, "no_speech_prob": 5.594250524154631e-06}, {"id": 875, "seek": 498366, "start": 5004.78, "end": 5005.78, "text": " layer.", "tokens": [50364, 400, 309, 311, 406, 300, 819, 11, 294, 1186, 11, 281, 264, 45216, 304, 18161, 3209, 300, 4956, 441, 916, 409, 50558, 50558, 1143, 322, 376, 45, 19756, 646, 294, 22690, 13, 50836, 50836, 440, 3875, 3487, 286, 600, 7619, 366, 5680, 11, 291, 458, 11, 264, 636, 264, 15743, 589, 293, 264, 51144, 51144, 29022, 295, 8141, 12788, 4890, 293, 24433, 6828, 293, 264, 1507, 291, 360, 281, 264, 2572, 51420, 51420, 4583, 13, 51470, 51470, 509, 458, 11, 1203, 1646, 307, 46664, 13, 51596, 51596, 400, 264, 544, 291, 1466, 466, 729, 3875, 3487, 11, 264, 544, 291, 603, 5521, 729, 46664, 382, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16998177274651483, "compression_ratio": 1.6150943396226416, "no_speech_prob": 5.594250524154631e-06}, {"id": 876, "seek": 498366, "start": 5005.78, "end": 5008.3, "text": " You know, everything else is tweaks.", "tokens": [50364, 400, 309, 311, 406, 300, 819, 11, 294, 1186, 11, 281, 264, 45216, 304, 18161, 3209, 300, 4956, 441, 916, 409, 50558, 50558, 1143, 322, 376, 45, 19756, 646, 294, 22690, 13, 50836, 50836, 440, 3875, 3487, 286, 600, 7619, 366, 5680, 11, 291, 458, 11, 264, 636, 264, 15743, 589, 293, 264, 51144, 51144, 29022, 295, 8141, 12788, 4890, 293, 24433, 6828, 293, 264, 1507, 291, 360, 281, 264, 2572, 51420, 51420, 4583, 13, 51470, 51470, 509, 458, 11, 1203, 1646, 307, 46664, 13, 51596, 51596, 400, 264, 544, 291, 1466, 466, 729, 3875, 3487, 11, 264, 544, 291, 603, 5521, 729, 46664, 382, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16998177274651483, "compression_ratio": 1.6150943396226416, "no_speech_prob": 5.594250524154631e-06}, {"id": 877, "seek": 498366, "start": 5008.3, "end": 5013.18, "text": " And the more you learn about those basic ideas, the more you'll recognize those tweaks as", "tokens": [50364, 400, 309, 311, 406, 300, 819, 11, 294, 1186, 11, 281, 264, 45216, 304, 18161, 3209, 300, 4956, 441, 916, 409, 50558, 50558, 1143, 322, 376, 45, 19756, 646, 294, 22690, 13, 50836, 50836, 440, 3875, 3487, 286, 600, 7619, 366, 5680, 11, 291, 458, 11, 264, 636, 264, 15743, 589, 293, 264, 51144, 51144, 29022, 295, 8141, 12788, 4890, 293, 24433, 6828, 293, 264, 1507, 291, 360, 281, 264, 2572, 51420, 51420, 4583, 13, 51470, 51470, 509, 458, 11, 1203, 1646, 307, 46664, 13, 51596, 51596, 400, 264, 544, 291, 1466, 466, 729, 3875, 3487, 11, 264, 544, 291, 603, 5521, 729, 46664, 382, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16998177274651483, "compression_ratio": 1.6150943396226416, "no_speech_prob": 5.594250524154631e-06}, {"id": 878, "seek": 501318, "start": 5013.18, "end": 5019.02, "text": " simple little tweaks that you'll be able to quickly get your head around.", "tokens": [50364, 2199, 707, 46664, 300, 291, 603, 312, 1075, 281, 2661, 483, 428, 1378, 926, 13, 50656, 50656, 407, 550, 19178, 1709, 322, 281, 1029, 420, 281, 2871, 11, 1071, 551, 300, 6460, 33980, 385, 382, 50852, 50852, 286, 841, 264, 2519, 307, 1242, 544, 293, 544, 8756, 26896, 3030, 3801, 293, 544, 24903, 379, 51066, 51066, 5124, 5245, 293, 2603, 11663, 295, 1412, 13, 51226, 51226, 286, 1066, 6359, 498, 294, 512, 924, 490, 586, 11, 286, 576, 920, 312, 1075, 281, 3847, 10585, 51461, 51461, 5245, 365, 257, 2167, 18407, 420, 498, 1203, 307, 516, 281, 3651, 257, 14722, 13630, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.1413615604616561, "compression_ratio": 1.6370106761565837, "no_speech_prob": 4.092866674909601e-06}, {"id": 879, "seek": 501318, "start": 5019.02, "end": 5022.9400000000005, "text": " So then Lucas goes on to ask or to comment, another thing that constantly bothers me as", "tokens": [50364, 2199, 707, 46664, 300, 291, 603, 312, 1075, 281, 2661, 483, 428, 1378, 926, 13, 50656, 50656, 407, 550, 19178, 1709, 322, 281, 1029, 420, 281, 2871, 11, 1071, 551, 300, 6460, 33980, 385, 382, 50852, 50852, 286, 841, 264, 2519, 307, 1242, 544, 293, 544, 8756, 26896, 3030, 3801, 293, 544, 24903, 379, 51066, 51066, 5124, 5245, 293, 2603, 11663, 295, 1412, 13, 51226, 51226, 286, 1066, 6359, 498, 294, 512, 924, 490, 586, 11, 286, 576, 920, 312, 1075, 281, 3847, 10585, 51461, 51461, 5245, 365, 257, 2167, 18407, 420, 498, 1203, 307, 516, 281, 3651, 257, 14722, 13630, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.1413615604616561, "compression_ratio": 1.6370106761565837, "no_speech_prob": 4.092866674909601e-06}, {"id": 880, "seek": 501318, "start": 5022.9400000000005, "end": 5027.22, "text": " I feel the field is getting more and more skewed towards bigger and more computationally", "tokens": [50364, 2199, 707, 46664, 300, 291, 603, 312, 1075, 281, 2661, 483, 428, 1378, 926, 13, 50656, 50656, 407, 550, 19178, 1709, 322, 281, 1029, 420, 281, 2871, 11, 1071, 551, 300, 6460, 33980, 385, 382, 50852, 50852, 286, 841, 264, 2519, 307, 1242, 544, 293, 544, 8756, 26896, 3030, 3801, 293, 544, 24903, 379, 51066, 51066, 5124, 5245, 293, 2603, 11663, 295, 1412, 13, 51226, 51226, 286, 1066, 6359, 498, 294, 512, 924, 490, 586, 11, 286, 576, 920, 312, 1075, 281, 3847, 10585, 51461, 51461, 5245, 365, 257, 2167, 18407, 420, 498, 1203, 307, 516, 281, 3651, 257, 14722, 13630, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.1413615604616561, "compression_ratio": 1.6370106761565837, "no_speech_prob": 4.092866674909601e-06}, {"id": 881, "seek": 501318, "start": 5027.22, "end": 5030.42, "text": " expensive models and huge amounts of data.", "tokens": [50364, 2199, 707, 46664, 300, 291, 603, 312, 1075, 281, 2661, 483, 428, 1378, 926, 13, 50656, 50656, 407, 550, 19178, 1709, 322, 281, 1029, 420, 281, 2871, 11, 1071, 551, 300, 6460, 33980, 385, 382, 50852, 50852, 286, 841, 264, 2519, 307, 1242, 544, 293, 544, 8756, 26896, 3030, 3801, 293, 544, 24903, 379, 51066, 51066, 5124, 5245, 293, 2603, 11663, 295, 1412, 13, 51226, 51226, 286, 1066, 6359, 498, 294, 512, 924, 490, 586, 11, 286, 576, 920, 312, 1075, 281, 3847, 10585, 51461, 51461, 5245, 365, 257, 2167, 18407, 420, 498, 1203, 307, 516, 281, 3651, 257, 14722, 13630, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.1413615604616561, "compression_ratio": 1.6370106761565837, "no_speech_prob": 4.092866674909601e-06}, {"id": 882, "seek": 501318, "start": 5030.42, "end": 5035.12, "text": " I keep wondering if in some years from now, I would still be able to train reasonable", "tokens": [50364, 2199, 707, 46664, 300, 291, 603, 312, 1075, 281, 2661, 483, 428, 1378, 926, 13, 50656, 50656, 407, 550, 19178, 1709, 322, 281, 1029, 420, 281, 2871, 11, 1071, 551, 300, 6460, 33980, 385, 382, 50852, 50852, 286, 841, 264, 2519, 307, 1242, 544, 293, 544, 8756, 26896, 3030, 3801, 293, 544, 24903, 379, 51066, 51066, 5124, 5245, 293, 2603, 11663, 295, 1412, 13, 51226, 51226, 286, 1066, 6359, 498, 294, 512, 924, 490, 586, 11, 286, 576, 920, 312, 1075, 281, 3847, 10585, 51461, 51461, 5245, 365, 257, 2167, 18407, 420, 498, 1203, 307, 516, 281, 3651, 257, 14722, 13630, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.1413615604616561, "compression_ratio": 1.6370106761565837, "no_speech_prob": 4.092866674909601e-06}, {"id": 883, "seek": 501318, "start": 5035.12, "end": 5040.3, "text": " models with a single GPU or if everything is going to require a compute cluster.", "tokens": [50364, 2199, 707, 46664, 300, 291, 603, 312, 1075, 281, 2661, 483, 428, 1378, 926, 13, 50656, 50656, 407, 550, 19178, 1709, 322, 281, 1029, 420, 281, 2871, 11, 1071, 551, 300, 6460, 33980, 385, 382, 50852, 50852, 286, 841, 264, 2519, 307, 1242, 544, 293, 544, 8756, 26896, 3030, 3801, 293, 544, 24903, 379, 51066, 51066, 5124, 5245, 293, 2603, 11663, 295, 1412, 13, 51226, 51226, 286, 1066, 6359, 498, 294, 512, 924, 490, 586, 11, 286, 576, 920, 312, 1075, 281, 3847, 10585, 51461, 51461, 5245, 365, 257, 2167, 18407, 420, 498, 1203, 307, 516, 281, 3651, 257, 14722, 13630, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.1413615604616561, "compression_ratio": 1.6370106761565837, "no_speech_prob": 4.092866674909601e-06}, {"id": 884, "seek": 504030, "start": 5040.3, "end": 5043.18, "text": " Yeah, that's a great question.", "tokens": [50364, 865, 11, 300, 311, 257, 869, 1168, 13, 50508, 50508, 286, 483, 300, 257, 688, 13, 50636, 50636, 583, 25873, 11, 291, 458, 11, 286, 600, 668, 4571, 561, 3479, 2539, 293, 1412, 3497, 1507, 51078, 51078, 337, 6217, 2217, 924, 13, 51209, 51209, 400, 286, 600, 632, 257, 12990, 295, 341, 1168, 3710, 13, 51450, 51450, 400, 264, 1778, 307, 300, 11955, 1009, 528, 281, 2944, 264, 19989, 322, 264, 3880, 10807, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10417497312867796, "compression_ratio": 1.4927536231884058, "no_speech_prob": 2.4439700609946158e-06}, {"id": 885, "seek": 504030, "start": 5043.18, "end": 5045.74, "text": " I get that a lot.", "tokens": [50364, 865, 11, 300, 311, 257, 869, 1168, 13, 50508, 50508, 286, 483, 300, 257, 688, 13, 50636, 50636, 583, 25873, 11, 291, 458, 11, 286, 600, 668, 4571, 561, 3479, 2539, 293, 1412, 3497, 1507, 51078, 51078, 337, 6217, 2217, 924, 13, 51209, 51209, 400, 286, 600, 632, 257, 12990, 295, 341, 1168, 3710, 13, 51450, 51450, 400, 264, 1778, 307, 300, 11955, 1009, 528, 281, 2944, 264, 19989, 322, 264, 3880, 10807, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10417497312867796, "compression_ratio": 1.4927536231884058, "no_speech_prob": 2.4439700609946158e-06}, {"id": 886, "seek": 504030, "start": 5045.74, "end": 5054.58, "text": " But interestingly, you know, I've been teaching people machine learning and data science stuff", "tokens": [50364, 865, 11, 300, 311, 257, 869, 1168, 13, 50508, 50508, 286, 483, 300, 257, 688, 13, 50636, 50636, 583, 25873, 11, 291, 458, 11, 286, 600, 668, 4571, 561, 3479, 2539, 293, 1412, 3497, 1507, 51078, 51078, 337, 6217, 2217, 924, 13, 51209, 51209, 400, 286, 600, 632, 257, 12990, 295, 341, 1168, 3710, 13, 51450, 51450, 400, 264, 1778, 307, 300, 11955, 1009, 528, 281, 2944, 264, 19989, 322, 264, 3880, 10807, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10417497312867796, "compression_ratio": 1.4927536231884058, "no_speech_prob": 2.4439700609946158e-06}, {"id": 887, "seek": 504030, "start": 5054.58, "end": 5057.2, "text": " for nearly 30 years.", "tokens": [50364, 865, 11, 300, 311, 257, 869, 1168, 13, 50508, 50508, 286, 483, 300, 257, 688, 13, 50636, 50636, 583, 25873, 11, 291, 458, 11, 286, 600, 668, 4571, 561, 3479, 2539, 293, 1412, 3497, 1507, 51078, 51078, 337, 6217, 2217, 924, 13, 51209, 51209, 400, 286, 600, 632, 257, 12990, 295, 341, 1168, 3710, 13, 51450, 51450, 400, 264, 1778, 307, 300, 11955, 1009, 528, 281, 2944, 264, 19989, 322, 264, 3880, 10807, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10417497312867796, "compression_ratio": 1.4927536231884058, "no_speech_prob": 2.4439700609946158e-06}, {"id": 888, "seek": 504030, "start": 5057.2, "end": 5062.02, "text": " And I've had a variation of this question throughout.", "tokens": [50364, 865, 11, 300, 311, 257, 869, 1168, 13, 50508, 50508, 286, 483, 300, 257, 688, 13, 50636, 50636, 583, 25873, 11, 291, 458, 11, 286, 600, 668, 4571, 561, 3479, 2539, 293, 1412, 3497, 1507, 51078, 51078, 337, 6217, 2217, 924, 13, 51209, 51209, 400, 286, 600, 632, 257, 12990, 295, 341, 1168, 3710, 13, 51450, 51450, 400, 264, 1778, 307, 300, 11955, 1009, 528, 281, 2944, 264, 19989, 322, 264, 3880, 10807, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10417497312867796, "compression_ratio": 1.4927536231884058, "no_speech_prob": 2.4439700609946158e-06}, {"id": 889, "seek": 504030, "start": 5062.02, "end": 5069.74, "text": " And the reason is that engineers always want to push the envelope on the biggest computers", "tokens": [50364, 865, 11, 300, 311, 257, 869, 1168, 13, 50508, 50508, 286, 483, 300, 257, 688, 13, 50636, 50636, 583, 25873, 11, 291, 458, 11, 286, 600, 668, 4571, 561, 3479, 2539, 293, 1412, 3497, 1507, 51078, 51078, 337, 6217, 2217, 924, 13, 51209, 51209, 400, 286, 600, 632, 257, 12990, 295, 341, 1168, 3710, 13, 51450, 51450, 400, 264, 1778, 307, 300, 11955, 1009, 528, 281, 2944, 264, 19989, 322, 264, 3880, 10807, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10417497312867796, "compression_ratio": 1.4927536231884058, "no_speech_prob": 2.4439700609946158e-06}, {"id": 890, "seek": 506974, "start": 5069.74, "end": 5071.0199999999995, "text": " they can find.", "tokens": [50364, 436, 393, 915, 13, 50428, 50428, 509, 458, 11, 300, 311, 445, 341, 411, 1019, 551, 11955, 959, 281, 360, 13, 50636, 50636, 400, 538, 7123, 11, 436, 434, 516, 281, 483, 4748, 1101, 3542, 813, 561, 884, 2293, 264, 50920, 50920, 912, 551, 322, 4356, 10807, 13, 51146, 51146, 407, 309, 1009, 1542, 411, 11, 1954, 11, 291, 643, 955, 10807, 281, 312, 1785, 295, 264, 1523, 13, 51546, 51546, 583, 300, 311, 767, 1128, 2074, 11, 558, 30, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.09882115182422456, "compression_ratio": 1.5165876777251184, "no_speech_prob": 1.2878880397693138e-06}, {"id": 891, "seek": 506974, "start": 5071.0199999999995, "end": 5075.179999999999, "text": " You know, that's just this like fun thing engineers love to do.", "tokens": [50364, 436, 393, 915, 13, 50428, 50428, 509, 458, 11, 300, 311, 445, 341, 411, 1019, 551, 11955, 959, 281, 360, 13, 50636, 50636, 400, 538, 7123, 11, 436, 434, 516, 281, 483, 4748, 1101, 3542, 813, 561, 884, 2293, 264, 50920, 50920, 912, 551, 322, 4356, 10807, 13, 51146, 51146, 407, 309, 1009, 1542, 411, 11, 1954, 11, 291, 643, 955, 10807, 281, 312, 1785, 295, 264, 1523, 13, 51546, 51546, 583, 300, 311, 767, 1128, 2074, 11, 558, 30, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.09882115182422456, "compression_ratio": 1.5165876777251184, "no_speech_prob": 1.2878880397693138e-06}, {"id": 892, "seek": 506974, "start": 5075.179999999999, "end": 5080.86, "text": " And by definition, they're going to get slightly better results than people doing exactly the", "tokens": [50364, 436, 393, 915, 13, 50428, 50428, 509, 458, 11, 300, 311, 445, 341, 411, 1019, 551, 11955, 959, 281, 360, 13, 50636, 50636, 400, 538, 7123, 11, 436, 434, 516, 281, 483, 4748, 1101, 3542, 813, 561, 884, 2293, 264, 50920, 50920, 912, 551, 322, 4356, 10807, 13, 51146, 51146, 407, 309, 1009, 1542, 411, 11, 1954, 11, 291, 643, 955, 10807, 281, 312, 1785, 295, 264, 1523, 13, 51546, 51546, 583, 300, 311, 767, 1128, 2074, 11, 558, 30, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.09882115182422456, "compression_ratio": 1.5165876777251184, "no_speech_prob": 1.2878880397693138e-06}, {"id": 893, "seek": 506974, "start": 5080.86, "end": 5085.38, "text": " same thing on smaller computers.", "tokens": [50364, 436, 393, 915, 13, 50428, 50428, 509, 458, 11, 300, 311, 445, 341, 411, 1019, 551, 11955, 959, 281, 360, 13, 50636, 50636, 400, 538, 7123, 11, 436, 434, 516, 281, 483, 4748, 1101, 3542, 813, 561, 884, 2293, 264, 50920, 50920, 912, 551, 322, 4356, 10807, 13, 51146, 51146, 407, 309, 1009, 1542, 411, 11, 1954, 11, 291, 643, 955, 10807, 281, 312, 1785, 295, 264, 1523, 13, 51546, 51546, 583, 300, 311, 767, 1128, 2074, 11, 558, 30, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.09882115182422456, "compression_ratio": 1.5165876777251184, "no_speech_prob": 1.2878880397693138e-06}, {"id": 894, "seek": 506974, "start": 5085.38, "end": 5093.38, "text": " So it always looks like, oh, you need big computers to be state of the art.", "tokens": [50364, 436, 393, 915, 13, 50428, 50428, 509, 458, 11, 300, 311, 445, 341, 411, 1019, 551, 11955, 959, 281, 360, 13, 50636, 50636, 400, 538, 7123, 11, 436, 434, 516, 281, 483, 4748, 1101, 3542, 813, 561, 884, 2293, 264, 50920, 50920, 912, 551, 322, 4356, 10807, 13, 51146, 51146, 407, 309, 1009, 1542, 411, 11, 1954, 11, 291, 643, 955, 10807, 281, 312, 1785, 295, 264, 1523, 13, 51546, 51546, 583, 300, 311, 767, 1128, 2074, 11, 558, 30, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.09882115182422456, "compression_ratio": 1.5165876777251184, "no_speech_prob": 1.2878880397693138e-06}, {"id": 895, "seek": 506974, "start": 5093.38, "end": 5095.94, "text": " But that's actually never true, right?", "tokens": [50364, 436, 393, 915, 13, 50428, 50428, 509, 458, 11, 300, 311, 445, 341, 411, 1019, 551, 11955, 959, 281, 360, 13, 50636, 50636, 400, 538, 7123, 11, 436, 434, 516, 281, 483, 4748, 1101, 3542, 813, 561, 884, 2293, 264, 50920, 50920, 912, 551, 322, 4356, 10807, 13, 51146, 51146, 407, 309, 1009, 1542, 411, 11, 1954, 11, 291, 643, 955, 10807, 281, 312, 1785, 295, 264, 1523, 13, 51546, 51546, 583, 300, 311, 767, 1128, 2074, 11, 558, 30, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.09882115182422456, "compression_ratio": 1.5165876777251184, "no_speech_prob": 1.2878880397693138e-06}, {"id": 896, "seek": 509594, "start": 5095.94, "end": 5102.0599999999995, "text": " Because there's always smarter ways to do things, not just bigger ways to do things.", "tokens": [50364, 1436, 456, 311, 1009, 20294, 2098, 281, 360, 721, 11, 406, 445, 3801, 2098, 281, 360, 721, 13, 50670, 50670, 400, 370, 11, 291, 458, 11, 562, 291, 574, 412, 2370, 7318, 311, 26001, 47244, 2245, 11, 562, 321, 8895, 29903, 31890, 51036, 51036, 4663, 813, 4472, 632, 8895, 309, 949, 322, 3832, 18407, 82, 11, 291, 458, 11, 385, 293, 257, 3840, 51346, 51346, 295, 1731, 11, 300, 390, 406, 4140, 281, 1051, 13, 51504, 51504, 509, 458, 11, 3329, 390, 1364, 588, 1152, 365, 641, 314, 8115, 9339, 281, 853, 281, 855, 577, 51700, 51700, 665, 436, 645, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.14218478429885137, "compression_ratio": 1.5992063492063493, "no_speech_prob": 4.7107569116633385e-06}, {"id": 897, "seek": 509594, "start": 5102.0599999999995, "end": 5109.379999999999, "text": " And so, you know, when you look at fast AI's Dawnbench success, when we trained ImageNet", "tokens": [50364, 1436, 456, 311, 1009, 20294, 2098, 281, 360, 721, 11, 406, 445, 3801, 2098, 281, 360, 721, 13, 50670, 50670, 400, 370, 11, 291, 458, 11, 562, 291, 574, 412, 2370, 7318, 311, 26001, 47244, 2245, 11, 562, 321, 8895, 29903, 31890, 51036, 51036, 4663, 813, 4472, 632, 8895, 309, 949, 322, 3832, 18407, 82, 11, 291, 458, 11, 385, 293, 257, 3840, 51346, 51346, 295, 1731, 11, 300, 390, 406, 4140, 281, 1051, 13, 51504, 51504, 509, 458, 11, 3329, 390, 1364, 588, 1152, 365, 641, 314, 8115, 9339, 281, 853, 281, 855, 577, 51700, 51700, 665, 436, 645, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.14218478429885137, "compression_ratio": 1.5992063492063493, "no_speech_prob": 4.7107569116633385e-06}, {"id": 898, "seek": 509594, "start": 5109.379999999999, "end": 5115.58, "text": " faster than anybody had trained it before on standard GPUs, you know, me and a bunch", "tokens": [50364, 1436, 456, 311, 1009, 20294, 2098, 281, 360, 721, 11, 406, 445, 3801, 2098, 281, 360, 721, 13, 50670, 50670, 400, 370, 11, 291, 458, 11, 562, 291, 574, 412, 2370, 7318, 311, 26001, 47244, 2245, 11, 562, 321, 8895, 29903, 31890, 51036, 51036, 4663, 813, 4472, 632, 8895, 309, 949, 322, 3832, 18407, 82, 11, 291, 458, 11, 385, 293, 257, 3840, 51346, 51346, 295, 1731, 11, 300, 390, 406, 4140, 281, 1051, 13, 51504, 51504, 509, 458, 11, 3329, 390, 1364, 588, 1152, 365, 641, 314, 8115, 9339, 281, 853, 281, 855, 577, 51700, 51700, 665, 436, 645, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.14218478429885137, "compression_ratio": 1.5992063492063493, "no_speech_prob": 4.7107569116633385e-06}, {"id": 899, "seek": 509594, "start": 5115.58, "end": 5118.74, "text": " of students, that was not meant to happen.", "tokens": [50364, 1436, 456, 311, 1009, 20294, 2098, 281, 360, 721, 11, 406, 445, 3801, 2098, 281, 360, 721, 13, 50670, 50670, 400, 370, 11, 291, 458, 11, 562, 291, 574, 412, 2370, 7318, 311, 26001, 47244, 2245, 11, 562, 321, 8895, 29903, 31890, 51036, 51036, 4663, 813, 4472, 632, 8895, 309, 949, 322, 3832, 18407, 82, 11, 291, 458, 11, 385, 293, 257, 3840, 51346, 51346, 295, 1731, 11, 300, 390, 406, 4140, 281, 1051, 13, 51504, 51504, 509, 458, 11, 3329, 390, 1364, 588, 1152, 365, 641, 314, 8115, 9339, 281, 853, 281, 855, 577, 51700, 51700, 665, 436, 645, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.14218478429885137, "compression_ratio": 1.5992063492063493, "no_speech_prob": 4.7107569116633385e-06}, {"id": 900, "seek": 509594, "start": 5118.74, "end": 5122.66, "text": " You know, Google was working very hard with their TPU introduction to try to show how", "tokens": [50364, 1436, 456, 311, 1009, 20294, 2098, 281, 360, 721, 11, 406, 445, 3801, 2098, 281, 360, 721, 13, 50670, 50670, 400, 370, 11, 291, 458, 11, 562, 291, 574, 412, 2370, 7318, 311, 26001, 47244, 2245, 11, 562, 321, 8895, 29903, 31890, 51036, 51036, 4663, 813, 4472, 632, 8895, 309, 949, 322, 3832, 18407, 82, 11, 291, 458, 11, 385, 293, 257, 3840, 51346, 51346, 295, 1731, 11, 300, 390, 406, 4140, 281, 1051, 13, 51504, 51504, 509, 458, 11, 3329, 390, 1364, 588, 1152, 365, 641, 314, 8115, 9339, 281, 853, 281, 855, 577, 51700, 51700, 665, 436, 645, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.14218478429885137, "compression_ratio": 1.5992063492063493, "no_speech_prob": 4.7107569116633385e-06}, {"id": 901, "seek": 509594, "start": 5122.66, "end": 5124.139999999999, "text": " good they were.", "tokens": [50364, 1436, 456, 311, 1009, 20294, 2098, 281, 360, 721, 11, 406, 445, 3801, 2098, 281, 360, 721, 13, 50670, 50670, 400, 370, 11, 291, 458, 11, 562, 291, 574, 412, 2370, 7318, 311, 26001, 47244, 2245, 11, 562, 321, 8895, 29903, 31890, 51036, 51036, 4663, 813, 4472, 632, 8895, 309, 949, 322, 3832, 18407, 82, 11, 291, 458, 11, 385, 293, 257, 3840, 51346, 51346, 295, 1731, 11, 300, 390, 406, 4140, 281, 1051, 13, 51504, 51504, 509, 458, 11, 3329, 390, 1364, 588, 1152, 365, 641, 314, 8115, 9339, 281, 853, 281, 855, 577, 51700, 51700, 665, 436, 645, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.14218478429885137, "compression_ratio": 1.5992063492063493, "no_speech_prob": 4.7107569116633385e-06}, {"id": 902, "seek": 512414, "start": 5124.14, "end": 5133.58, "text": " Intel was using like 256 PCs in parallel or something.", "tokens": [50364, 19762, 390, 1228, 411, 38882, 46913, 294, 8952, 420, 746, 13, 50836, 50836, 583, 1338, 11, 291, 458, 11, 321, 1143, 2689, 2020, 293, 4069, 82, 293, 4712, 437, 393, 312, 1096, 13, 51090, 51090, 509, 458, 11, 309, 311, 611, 257, 1389, 295, 8867, 264, 2740, 291, 5039, 13, 51340, 51340, 407, 286, 576, 406, 312, 1391, 884, 411, 516, 1378, 281, 1378, 493, 1970, 3089, 14368, 293, 1382, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.14910054851222682, "compression_ratio": 1.458762886597938, "no_speech_prob": 2.6015854928118642e-06}, {"id": 903, "seek": 512414, "start": 5133.58, "end": 5138.660000000001, "text": " But yeah, you know, we used common sense and smarts and showed what can be done.", "tokens": [50364, 19762, 390, 1228, 411, 38882, 46913, 294, 8952, 420, 746, 13, 50836, 50836, 583, 1338, 11, 291, 458, 11, 321, 1143, 2689, 2020, 293, 4069, 82, 293, 4712, 437, 393, 312, 1096, 13, 51090, 51090, 509, 458, 11, 309, 311, 611, 257, 1389, 295, 8867, 264, 2740, 291, 5039, 13, 51340, 51340, 407, 286, 576, 406, 312, 1391, 884, 411, 516, 1378, 281, 1378, 493, 1970, 3089, 14368, 293, 1382, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.14910054851222682, "compression_ratio": 1.458762886597938, "no_speech_prob": 2.6015854928118642e-06}, {"id": 904, "seek": 512414, "start": 5138.660000000001, "end": 5143.660000000001, "text": " You know, it's also a case of picking the problems you solve.", "tokens": [50364, 19762, 390, 1228, 411, 38882, 46913, 294, 8952, 420, 746, 13, 50836, 50836, 583, 1338, 11, 291, 458, 11, 321, 1143, 2689, 2020, 293, 4069, 82, 293, 4712, 437, 393, 312, 1096, 13, 51090, 51090, 509, 458, 11, 309, 311, 611, 257, 1389, 295, 8867, 264, 2740, 291, 5039, 13, 51340, 51340, 407, 286, 576, 406, 312, 1391, 884, 411, 516, 1378, 281, 1378, 493, 1970, 3089, 14368, 293, 1382, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.14910054851222682, "compression_ratio": 1.458762886597938, "no_speech_prob": 2.6015854928118642e-06}, {"id": 905, "seek": 512414, "start": 5143.660000000001, "end": 5148.900000000001, "text": " So I would not be probably doing like going head to head up against codecs and trying", "tokens": [50364, 19762, 390, 1228, 411, 38882, 46913, 294, 8952, 420, 746, 13, 50836, 50836, 583, 1338, 11, 291, 458, 11, 321, 1143, 2689, 2020, 293, 4069, 82, 293, 4712, 437, 393, 312, 1096, 13, 51090, 51090, 509, 458, 11, 309, 311, 611, 257, 1389, 295, 8867, 264, 2740, 291, 5039, 13, 51340, 51340, 407, 286, 576, 406, 312, 1391, 884, 411, 516, 1378, 281, 1378, 493, 1970, 3089, 14368, 293, 1382, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.14910054851222682, "compression_ratio": 1.458762886597938, "no_speech_prob": 2.6015854928118642e-06}, {"id": 906, "seek": 514890, "start": 5148.9, "end": 5155.74, "text": " to create code from English descriptions.", "tokens": [50364, 281, 1884, 3089, 490, 3669, 24406, 13, 50706, 50706, 509, 458, 11, 570, 300, 311, 257, 1154, 300, 775, 1391, 3651, 588, 2416, 18161, 36170, 293, 50980, 50980, 588, 2416, 11663, 295, 1412, 13, 51108, 51108, 583, 498, 291, 1888, 3179, 294, 819, 25514, 11, 291, 458, 11, 456, 311, 920, 2603, 3179, 689, 709, 51528, 51528, 4356, 5245, 366, 920, 516, 281, 312, 1785, 295, 264, 1523, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.07354704974448845, "compression_ratio": 1.5226130653266332, "no_speech_prob": 5.04345337049017e-07}, {"id": 907, "seek": 514890, "start": 5155.74, "end": 5161.219999999999, "text": " You know, because that's a problem that does probably require very large neural nets and", "tokens": [50364, 281, 1884, 3089, 490, 3669, 24406, 13, 50706, 50706, 509, 458, 11, 570, 300, 311, 257, 1154, 300, 775, 1391, 3651, 588, 2416, 18161, 36170, 293, 50980, 50980, 588, 2416, 11663, 295, 1412, 13, 51108, 51108, 583, 498, 291, 1888, 3179, 294, 819, 25514, 11, 291, 458, 11, 456, 311, 920, 2603, 3179, 689, 709, 51528, 51528, 4356, 5245, 366, 920, 516, 281, 312, 1785, 295, 264, 1523, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.07354704974448845, "compression_ratio": 1.5226130653266332, "no_speech_prob": 5.04345337049017e-07}, {"id": 908, "seek": 514890, "start": 5161.219999999999, "end": 5163.78, "text": " very large amounts of data.", "tokens": [50364, 281, 1884, 3089, 490, 3669, 24406, 13, 50706, 50706, 509, 458, 11, 570, 300, 311, 257, 1154, 300, 775, 1391, 3651, 588, 2416, 18161, 36170, 293, 50980, 50980, 588, 2416, 11663, 295, 1412, 13, 51108, 51108, 583, 498, 291, 1888, 3179, 294, 819, 25514, 11, 291, 458, 11, 456, 311, 920, 2603, 3179, 689, 709, 51528, 51528, 4356, 5245, 366, 920, 516, 281, 312, 1785, 295, 264, 1523, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.07354704974448845, "compression_ratio": 1.5226130653266332, "no_speech_prob": 5.04345337049017e-07}, {"id": 909, "seek": 514890, "start": 5163.78, "end": 5172.179999999999, "text": " But if you pick areas in different domains, you know, there's still huge areas where much", "tokens": [50364, 281, 1884, 3089, 490, 3669, 24406, 13, 50706, 50706, 509, 458, 11, 570, 300, 311, 257, 1154, 300, 775, 1391, 3651, 588, 2416, 18161, 36170, 293, 50980, 50980, 588, 2416, 11663, 295, 1412, 13, 51108, 51108, 583, 498, 291, 1888, 3179, 294, 819, 25514, 11, 291, 458, 11, 456, 311, 920, 2603, 3179, 689, 709, 51528, 51528, 4356, 5245, 366, 920, 516, 281, 312, 1785, 295, 264, 1523, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.07354704974448845, "compression_ratio": 1.5226130653266332, "no_speech_prob": 5.04345337049017e-07}, {"id": 910, "seek": 514890, "start": 5172.179999999999, "end": 5177.98, "text": " smaller models are still going to be state of the art.", "tokens": [50364, 281, 1884, 3089, 490, 3669, 24406, 13, 50706, 50706, 509, 458, 11, 570, 300, 311, 257, 1154, 300, 775, 1391, 3651, 588, 2416, 18161, 36170, 293, 50980, 50980, 588, 2416, 11663, 295, 1412, 13, 51108, 51108, 583, 498, 291, 1888, 3179, 294, 819, 25514, 11, 291, 458, 11, 456, 311, 920, 2603, 3179, 689, 709, 51528, 51528, 4356, 5245, 366, 920, 516, 281, 312, 1785, 295, 264, 1523, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.07354704974448845, "compression_ratio": 1.5226130653266332, "no_speech_prob": 5.04345337049017e-07}, {"id": 911, "seek": 517798, "start": 5177.98, "end": 5180.5, "text": " So hopefully that helped answer your question.", "tokens": [50364, 407, 4696, 300, 4254, 1867, 428, 1168, 13, 50490, 50490, 961, 311, 536, 437, 1646, 321, 658, 510, 13, 50838, 50838, 407, 8033, 575, 2745, 668, 3480, 452, 4671, 365, 4571, 452, 4653, 5221, 13, 51130, 51130, 407, 286, 7388, 21856, 452, 4653, 13, 51268, 51268, 400, 8033, 8962, 11, 577, 360, 291, 7388, 21856, 2037, 2227, 11, 3497, 294, 2674, 293, 5221, 294, 1729, 30, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.23595570155552456, "compression_ratio": 1.4922279792746114, "no_speech_prob": 5.507466084964108e-06}, {"id": 912, "seek": 517798, "start": 5180.5, "end": 5187.459999999999, "text": " Let's see what else we got here.", "tokens": [50364, 407, 4696, 300, 4254, 1867, 428, 1168, 13, 50490, 50490, 961, 311, 536, 437, 1646, 321, 658, 510, 13, 50838, 50838, 407, 8033, 575, 2745, 668, 3480, 452, 4671, 365, 4571, 452, 4653, 5221, 13, 51130, 51130, 407, 286, 7388, 21856, 452, 4653, 13, 51268, 51268, 400, 8033, 8962, 11, 577, 360, 291, 7388, 21856, 2037, 2227, 11, 3497, 294, 2674, 293, 5221, 294, 1729, 30, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.23595570155552456, "compression_ratio": 1.4922279792746114, "no_speech_prob": 5.507466084964108e-06}, {"id": 913, "seek": 517798, "start": 5187.459999999999, "end": 5193.299999999999, "text": " So Daniel has obviously been following my journey with teaching my daughter math.", "tokens": [50364, 407, 4696, 300, 4254, 1867, 428, 1168, 13, 50490, 50490, 961, 311, 536, 437, 1646, 321, 658, 510, 13, 50838, 50838, 407, 8033, 575, 2745, 668, 3480, 452, 4671, 365, 4571, 452, 4653, 5221, 13, 51130, 51130, 407, 286, 7388, 21856, 452, 4653, 13, 51268, 51268, 400, 8033, 8962, 11, 577, 360, 291, 7388, 21856, 2037, 2227, 11, 3497, 294, 2674, 293, 5221, 294, 1729, 30, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.23595570155552456, "compression_ratio": 1.4922279792746114, "no_speech_prob": 5.507466084964108e-06}, {"id": 914, "seek": 517798, "start": 5193.299999999999, "end": 5196.0599999999995, "text": " So I homeschool my daughter.", "tokens": [50364, 407, 4696, 300, 4254, 1867, 428, 1168, 13, 50490, 50490, 961, 311, 536, 437, 1646, 321, 658, 510, 13, 50838, 50838, 407, 8033, 575, 2745, 668, 3480, 452, 4671, 365, 4571, 452, 4653, 5221, 13, 51130, 51130, 407, 286, 7388, 21856, 452, 4653, 13, 51268, 51268, 400, 8033, 8962, 11, 577, 360, 291, 7388, 21856, 2037, 2227, 11, 3497, 294, 2674, 293, 5221, 294, 1729, 30, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.23595570155552456, "compression_ratio": 1.4922279792746114, "no_speech_prob": 5.507466084964108e-06}, {"id": 915, "seek": 517798, "start": 5196.0599999999995, "end": 5204.5, "text": " And Daniel asks, how do you homeschool young children, science in general and math in particular?", "tokens": [50364, 407, 4696, 300, 4254, 1867, 428, 1168, 13, 50490, 50490, 961, 311, 536, 437, 1646, 321, 658, 510, 13, 50838, 50838, 407, 8033, 575, 2745, 668, 3480, 452, 4671, 365, 4571, 452, 4653, 5221, 13, 51130, 51130, 407, 286, 7388, 21856, 452, 4653, 13, 51268, 51268, 400, 8033, 8962, 11, 577, 360, 291, 7388, 21856, 2037, 2227, 11, 3497, 294, 2674, 293, 5221, 294, 1729, 30, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.23595570155552456, "compression_ratio": 1.4922279792746114, "no_speech_prob": 5.507466084964108e-06}, {"id": 916, "seek": 520450, "start": 5204.5, "end": 5208.14, "text": " Would you share your experiences by blogging or in lectures someday?", "tokens": [50364, 6068, 291, 2073, 428, 5235, 538, 6968, 3249, 420, 294, 16564, 19412, 30, 50546, 50546, 865, 11, 286, 727, 360, 300, 13, 50760, 50760, 407, 286, 767, 4418, 1596, 257, 1326, 2493, 445, 3760, 2132, 10577, 466, 3309, 3938, 13, 51138, 51138, 407, 286, 360, 1391, 362, 257, 688, 286, 1391, 643, 281, 751, 466, 412, 512, 3233, 13, 51382, 51382], "temperature": 0.0, "avg_logprob": -0.17311731974283853, "compression_ratio": 1.4576271186440677, "no_speech_prob": 1.760319491950213e-06}, {"id": 917, "seek": 520450, "start": 5208.14, "end": 5212.42, "text": " Yeah, I could do that.", "tokens": [50364, 6068, 291, 2073, 428, 5235, 538, 6968, 3249, 420, 294, 16564, 19412, 30, 50546, 50546, 865, 11, 286, 727, 360, 300, 13, 50760, 50760, 407, 286, 767, 4418, 1596, 257, 1326, 2493, 445, 3760, 2132, 10577, 466, 3309, 3938, 13, 51138, 51138, 407, 286, 360, 1391, 362, 257, 688, 286, 1391, 643, 281, 751, 466, 412, 512, 3233, 13, 51382, 51382], "temperature": 0.0, "avg_logprob": -0.17311731974283853, "compression_ratio": 1.4576271186440677, "no_speech_prob": 1.760319491950213e-06}, {"id": 918, "seek": 520450, "start": 5212.42, "end": 5219.98, "text": " So I actually spent quite a few months just reading research papers about education recently.", "tokens": [50364, 6068, 291, 2073, 428, 5235, 538, 6968, 3249, 420, 294, 16564, 19412, 30, 50546, 50546, 865, 11, 286, 727, 360, 300, 13, 50760, 50760, 407, 286, 767, 4418, 1596, 257, 1326, 2493, 445, 3760, 2132, 10577, 466, 3309, 3938, 13, 51138, 51138, 407, 286, 360, 1391, 362, 257, 688, 286, 1391, 643, 281, 751, 466, 412, 512, 3233, 13, 51382, 51382], "temperature": 0.0, "avg_logprob": -0.17311731974283853, "compression_ratio": 1.4576271186440677, "no_speech_prob": 1.760319491950213e-06}, {"id": 919, "seek": 520450, "start": 5219.98, "end": 5224.86, "text": " So I do probably have a lot I probably need to talk about at some stage.", "tokens": [50364, 6068, 291, 2073, 428, 5235, 538, 6968, 3249, 420, 294, 16564, 19412, 30, 50546, 50546, 865, 11, 286, 727, 360, 300, 13, 50760, 50760, 407, 286, 767, 4418, 1596, 257, 1326, 2493, 445, 3760, 2132, 10577, 466, 3309, 3938, 13, 51138, 51138, 407, 286, 360, 1391, 362, 257, 688, 286, 1391, 643, 281, 751, 466, 412, 512, 3233, 13, 51382, 51382], "temperature": 0.0, "avg_logprob": -0.17311731974283853, "compression_ratio": 1.4576271186440677, "no_speech_prob": 1.760319491950213e-06}, {"id": 920, "seek": 522486, "start": 5224.86, "end": 5235.38, "text": " But yeah, broadly speaking, I lean into using computers and tablets a lot more than most", "tokens": [50364, 583, 1338, 11, 19511, 4124, 11, 286, 11659, 666, 1228, 10807, 293, 27622, 257, 688, 544, 813, 881, 50890, 50890, 561, 570, 767, 456, 311, 364, 11232, 688, 295, 534, 869, 7733, 300, 366, 1687, 20050, 13, 51176, 51176, 814, 434, 27912, 11, 370, 436, 352, 412, 264, 558, 3073, 337, 264, 3107, 293, 436, 434, 1019, 13, 51519, 51519, 400, 286, 534, 411, 452, 4653, 281, 362, 1019, 13, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.12733959507297826, "compression_ratio": 1.525, "no_speech_prob": 3.668747922347393e-06}, {"id": 921, "seek": 522486, "start": 5235.38, "end": 5241.099999999999, "text": " people because actually there's an awful lot of really great apps that are super compelling.", "tokens": [50364, 583, 1338, 11, 19511, 4124, 11, 286, 11659, 666, 1228, 10807, 293, 27622, 257, 688, 544, 813, 881, 50890, 50890, 561, 570, 767, 456, 311, 364, 11232, 688, 295, 534, 869, 7733, 300, 366, 1687, 20050, 13, 51176, 51176, 814, 434, 27912, 11, 370, 436, 352, 412, 264, 558, 3073, 337, 264, 3107, 293, 436, 434, 1019, 13, 51519, 51519, 400, 286, 534, 411, 452, 4653, 281, 362, 1019, 13, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.12733959507297826, "compression_ratio": 1.525, "no_speech_prob": 3.668747922347393e-06}, {"id": 922, "seek": 522486, "start": 5241.099999999999, "end": 5247.96, "text": " They're adaptive, so they go at the right speed for the student and they're fun.", "tokens": [50364, 583, 1338, 11, 19511, 4124, 11, 286, 11659, 666, 1228, 10807, 293, 27622, 257, 688, 544, 813, 881, 50890, 50890, 561, 570, 767, 456, 311, 364, 11232, 688, 295, 534, 869, 7733, 300, 366, 1687, 20050, 13, 51176, 51176, 814, 434, 27912, 11, 370, 436, 352, 412, 264, 558, 3073, 337, 264, 3107, 293, 436, 434, 1019, 13, 51519, 51519, 400, 286, 534, 411, 452, 4653, 281, 362, 1019, 13, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.12733959507297826, "compression_ratio": 1.525, "no_speech_prob": 3.668747922347393e-06}, {"id": 923, "seek": 522486, "start": 5247.96, "end": 5251.04, "text": " And I really like my daughter to have fun.", "tokens": [50364, 583, 1338, 11, 19511, 4124, 11, 286, 11659, 666, 1228, 10807, 293, 27622, 257, 688, 544, 813, 881, 50890, 50890, 561, 570, 767, 456, 311, 364, 11232, 688, 295, 534, 869, 7733, 300, 366, 1687, 20050, 13, 51176, 51176, 814, 434, 27912, 11, 370, 436, 352, 412, 264, 558, 3073, 337, 264, 3107, 293, 436, 434, 1019, 13, 51519, 51519, 400, 286, 534, 411, 452, 4653, 281, 362, 1019, 13, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.12733959507297826, "compression_ratio": 1.525, "no_speech_prob": 3.668747922347393e-06}, {"id": 924, "seek": 525104, "start": 5251.04, "end": 5255.86, "text": " You know, I really don't like to force her to do things.", "tokens": [50364, 509, 458, 11, 286, 534, 500, 380, 411, 281, 3464, 720, 281, 360, 721, 13, 50605, 50605, 400, 337, 1365, 11, 456, 311, 257, 534, 1627, 724, 1219, 11517, 15112, 967, 19983, 1025, 7721, 11, 597, 16876, 50943, 50943, 21989, 281, 1732, 12, 5294, 12, 31518, 538, 1228, 257, 534, 1019, 3820, 1216, 17030, 4315, 12165, 51191, 51191, 6466, 281, 17387, 13, 51297, 51297, 400, 309, 4523, 484, 300, 1338, 11, 21989, 11, 264, 3875, 3487, 295, 21989, 366, 572, 544, 3997, 813, 51623, 51623, 264, 3875, 3487, 300, 321, 360, 294, 661, 26671, 5221, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.11923184394836425, "compression_ratio": 1.617283950617284, "no_speech_prob": 4.356745648692595e-06}, {"id": 925, "seek": 525104, "start": 5255.86, "end": 5262.62, "text": " And for example, there's a really cool app called Dragon Box Algebra 5 Plus, which teaches", "tokens": [50364, 509, 458, 11, 286, 534, 500, 380, 411, 281, 3464, 720, 281, 360, 721, 13, 50605, 50605, 400, 337, 1365, 11, 456, 311, 257, 534, 1627, 724, 1219, 11517, 15112, 967, 19983, 1025, 7721, 11, 597, 16876, 50943, 50943, 21989, 281, 1732, 12, 5294, 12, 31518, 538, 1228, 257, 534, 1019, 3820, 1216, 17030, 4315, 12165, 51191, 51191, 6466, 281, 17387, 13, 51297, 51297, 400, 309, 4523, 484, 300, 1338, 11, 21989, 11, 264, 3875, 3487, 295, 21989, 366, 572, 544, 3997, 813, 51623, 51623, 264, 3875, 3487, 300, 321, 360, 294, 661, 26671, 5221, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.11923184394836425, "compression_ratio": 1.617283950617284, "no_speech_prob": 4.356745648692595e-06}, {"id": 926, "seek": 525104, "start": 5262.62, "end": 5267.58, "text": " algebra to five-year-olds by using a really fun computer game involving helping dragon", "tokens": [50364, 509, 458, 11, 286, 534, 500, 380, 411, 281, 3464, 720, 281, 360, 721, 13, 50605, 50605, 400, 337, 1365, 11, 456, 311, 257, 534, 1627, 724, 1219, 11517, 15112, 967, 19983, 1025, 7721, 11, 597, 16876, 50943, 50943, 21989, 281, 1732, 12, 5294, 12, 31518, 538, 1228, 257, 534, 1019, 3820, 1216, 17030, 4315, 12165, 51191, 51191, 6466, 281, 17387, 13, 51297, 51297, 400, 309, 4523, 484, 300, 1338, 11, 21989, 11, 264, 3875, 3487, 295, 21989, 366, 572, 544, 3997, 813, 51623, 51623, 264, 3875, 3487, 300, 321, 360, 294, 661, 26671, 5221, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.11923184394836425, "compression_ratio": 1.617283950617284, "no_speech_prob": 4.356745648692595e-06}, {"id": 927, "seek": 525104, "start": 5267.58, "end": 5269.7, "text": " eggs to hatch.", "tokens": [50364, 509, 458, 11, 286, 534, 500, 380, 411, 281, 3464, 720, 281, 360, 721, 13, 50605, 50605, 400, 337, 1365, 11, 456, 311, 257, 534, 1627, 724, 1219, 11517, 15112, 967, 19983, 1025, 7721, 11, 597, 16876, 50943, 50943, 21989, 281, 1732, 12, 5294, 12, 31518, 538, 1228, 257, 534, 1019, 3820, 1216, 17030, 4315, 12165, 51191, 51191, 6466, 281, 17387, 13, 51297, 51297, 400, 309, 4523, 484, 300, 1338, 11, 21989, 11, 264, 3875, 3487, 295, 21989, 366, 572, 544, 3997, 813, 51623, 51623, 264, 3875, 3487, 300, 321, 360, 294, 661, 26671, 5221, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.11923184394836425, "compression_ratio": 1.617283950617284, "no_speech_prob": 4.356745648692595e-06}, {"id": 928, "seek": 525104, "start": 5269.7, "end": 5276.22, "text": " And it turns out that yeah, algebra, the basic ideas of algebra are no more complex than", "tokens": [50364, 509, 458, 11, 286, 534, 500, 380, 411, 281, 3464, 720, 281, 360, 721, 13, 50605, 50605, 400, 337, 1365, 11, 456, 311, 257, 534, 1627, 724, 1219, 11517, 15112, 967, 19983, 1025, 7721, 11, 597, 16876, 50943, 50943, 21989, 281, 1732, 12, 5294, 12, 31518, 538, 1228, 257, 534, 1019, 3820, 1216, 17030, 4315, 12165, 51191, 51191, 6466, 281, 17387, 13, 51297, 51297, 400, 309, 4523, 484, 300, 1338, 11, 21989, 11, 264, 3875, 3487, 295, 21989, 366, 572, 544, 3997, 813, 51623, 51623, 264, 3875, 3487, 300, 321, 360, 294, 661, 26671, 5221, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.11923184394836425, "compression_ratio": 1.617283950617284, "no_speech_prob": 4.356745648692595e-06}, {"id": 929, "seek": 525104, "start": 5276.22, "end": 5280.66, "text": " the basic ideas that we do in other kindergarten math.", "tokens": [50364, 509, 458, 11, 286, 534, 500, 380, 411, 281, 3464, 720, 281, 360, 721, 13, 50605, 50605, 400, 337, 1365, 11, 456, 311, 257, 534, 1627, 724, 1219, 11517, 15112, 967, 19983, 1025, 7721, 11, 597, 16876, 50943, 50943, 21989, 281, 1732, 12, 5294, 12, 31518, 538, 1228, 257, 534, 1019, 3820, 1216, 17030, 4315, 12165, 51191, 51191, 6466, 281, 17387, 13, 51297, 51297, 400, 309, 4523, 484, 300, 1338, 11, 21989, 11, 264, 3875, 3487, 295, 21989, 366, 572, 544, 3997, 813, 51623, 51623, 264, 3875, 3487, 300, 321, 360, 294, 661, 26671, 5221, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.11923184394836425, "compression_ratio": 1.617283950617284, "no_speech_prob": 4.356745648692595e-06}, {"id": 930, "seek": 528066, "start": 5280.66, "end": 5285.099999999999, "text": " And all the parents I know of who have given their kids Dragon Box Algebra 5 Plus, their", "tokens": [50364, 400, 439, 264, 3152, 286, 458, 295, 567, 362, 2212, 641, 2301, 11517, 15112, 967, 19983, 1025, 7721, 11, 641, 50586, 50586, 2301, 362, 10727, 3264, 21989, 13, 50698, 50698, 407, 300, 576, 312, 364, 1365, 13, 50828, 50828, 583, 1338, 11, 321, 820, 751, 466, 341, 544, 412, 512, 935, 13, 51046, 51046, 1057, 558, 13, 51254, 51254, 961, 311, 536, 437, 1646, 321, 600, 658, 510, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.2281839814904618, "compression_ratio": 1.3903743315508021, "no_speech_prob": 4.495141183724627e-06}, {"id": 931, "seek": 528066, "start": 5285.099999999999, "end": 5287.34, "text": " kids have successfully learned algebra.", "tokens": [50364, 400, 439, 264, 3152, 286, 458, 295, 567, 362, 2212, 641, 2301, 11517, 15112, 967, 19983, 1025, 7721, 11, 641, 50586, 50586, 2301, 362, 10727, 3264, 21989, 13, 50698, 50698, 407, 300, 576, 312, 364, 1365, 13, 50828, 50828, 583, 1338, 11, 321, 820, 751, 466, 341, 544, 412, 512, 935, 13, 51046, 51046, 1057, 558, 13, 51254, 51254, 961, 311, 536, 437, 1646, 321, 600, 658, 510, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.2281839814904618, "compression_ratio": 1.3903743315508021, "no_speech_prob": 4.495141183724627e-06}, {"id": 932, "seek": 528066, "start": 5287.34, "end": 5289.94, "text": " So that would be an example.", "tokens": [50364, 400, 439, 264, 3152, 286, 458, 295, 567, 362, 2212, 641, 2301, 11517, 15112, 967, 19983, 1025, 7721, 11, 641, 50586, 50586, 2301, 362, 10727, 3264, 21989, 13, 50698, 50698, 407, 300, 576, 312, 364, 1365, 13, 50828, 50828, 583, 1338, 11, 321, 820, 751, 466, 341, 544, 412, 512, 935, 13, 51046, 51046, 1057, 558, 13, 51254, 51254, 961, 311, 536, 437, 1646, 321, 600, 658, 510, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.2281839814904618, "compression_ratio": 1.3903743315508021, "no_speech_prob": 4.495141183724627e-06}, {"id": 933, "seek": 528066, "start": 5289.94, "end": 5294.3, "text": " But yeah, we should talk about this more at some point.", "tokens": [50364, 400, 439, 264, 3152, 286, 458, 295, 567, 362, 2212, 641, 2301, 11517, 15112, 967, 19983, 1025, 7721, 11, 641, 50586, 50586, 2301, 362, 10727, 3264, 21989, 13, 50698, 50698, 407, 300, 576, 312, 364, 1365, 13, 50828, 50828, 583, 1338, 11, 321, 820, 751, 466, 341, 544, 412, 512, 935, 13, 51046, 51046, 1057, 558, 13, 51254, 51254, 961, 311, 536, 437, 1646, 321, 600, 658, 510, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.2281839814904618, "compression_ratio": 1.3903743315508021, "no_speech_prob": 4.495141183724627e-06}, {"id": 934, "seek": 528066, "start": 5294.3, "end": 5298.46, "text": " All right.", "tokens": [50364, 400, 439, 264, 3152, 286, 458, 295, 567, 362, 2212, 641, 2301, 11517, 15112, 967, 19983, 1025, 7721, 11, 641, 50586, 50586, 2301, 362, 10727, 3264, 21989, 13, 50698, 50698, 407, 300, 576, 312, 364, 1365, 13, 50828, 50828, 583, 1338, 11, 321, 820, 751, 466, 341, 544, 412, 512, 935, 13, 51046, 51046, 1057, 558, 13, 51254, 51254, 961, 311, 536, 437, 1646, 321, 600, 658, 510, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.2281839814904618, "compression_ratio": 1.3903743315508021, "no_speech_prob": 4.495141183724627e-06}, {"id": 935, "seek": 528066, "start": 5298.46, "end": 5307.82, "text": " Let's see what else we've got here.", "tokens": [50364, 400, 439, 264, 3152, 286, 458, 295, 567, 362, 2212, 641, 2301, 11517, 15112, 967, 19983, 1025, 7721, 11, 641, 50586, 50586, 2301, 362, 10727, 3264, 21989, 13, 50698, 50698, 407, 300, 576, 312, 364, 1365, 13, 50828, 50828, 583, 1338, 11, 321, 820, 751, 466, 341, 544, 412, 512, 935, 13, 51046, 51046, 1057, 558, 13, 51254, 51254, 961, 311, 536, 437, 1646, 321, 600, 658, 510, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.2281839814904618, "compression_ratio": 1.3903743315508021, "no_speech_prob": 4.495141183724627e-06}, {"id": 936, "seek": 530782, "start": 5307.82, "end": 5312.94, "text": " So Farah says, the walkthroughs have been a game changer for me.", "tokens": [50364, 407, 9067, 545, 1619, 11, 264, 1792, 11529, 82, 362, 668, 257, 1216, 22822, 337, 385, 13, 50620, 50620, 440, 3601, 293, 6082, 291, 5507, 294, 729, 11081, 366, 3942, 4739, 281, 1813, 364, 50796, 50796, 4942, 3479, 2539, 32125, 293, 16117, 2370, 7318, 544, 8659, 13, 51016, 51016, 3560, 291, 4888, 1455, 264, 1792, 11529, 82, 257, 544, 9860, 644, 295, 264, 1164, 11, 884, 257, 51182, 51182, 4994, 4722, 7043, 1164, 11, 420, 9289, 1621, 17720, 11081, 1296, 644, 472, 293, 51436, 51436, 732, 30, 51486, 51486, 407, 2086, 11, 286, 669, 516, 281, 1066, 884, 1621, 17720, 11081, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10259710167938808, "compression_ratio": 1.7043795620437956, "no_speech_prob": 4.785026249010116e-06}, {"id": 937, "seek": 530782, "start": 5312.94, "end": 5316.46, "text": " The knowledge and tips you shared in those sessions are skills required to become an", "tokens": [50364, 407, 9067, 545, 1619, 11, 264, 1792, 11529, 82, 362, 668, 257, 1216, 22822, 337, 385, 13, 50620, 50620, 440, 3601, 293, 6082, 291, 5507, 294, 729, 11081, 366, 3942, 4739, 281, 1813, 364, 50796, 50796, 4942, 3479, 2539, 32125, 293, 16117, 2370, 7318, 544, 8659, 13, 51016, 51016, 3560, 291, 4888, 1455, 264, 1792, 11529, 82, 257, 544, 9860, 644, 295, 264, 1164, 11, 884, 257, 51182, 51182, 4994, 4722, 7043, 1164, 11, 420, 9289, 1621, 17720, 11081, 1296, 644, 472, 293, 51436, 51436, 732, 30, 51486, 51486, 407, 2086, 11, 286, 669, 516, 281, 1066, 884, 1621, 17720, 11081, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10259710167938808, "compression_ratio": 1.7043795620437956, "no_speech_prob": 4.785026249010116e-06}, {"id": 938, "seek": 530782, "start": 5316.46, "end": 5320.86, "text": " effective machine learning practitioner and utilize fast AI more effectively.", "tokens": [50364, 407, 9067, 545, 1619, 11, 264, 1792, 11529, 82, 362, 668, 257, 1216, 22822, 337, 385, 13, 50620, 50620, 440, 3601, 293, 6082, 291, 5507, 294, 729, 11081, 366, 3942, 4739, 281, 1813, 364, 50796, 50796, 4942, 3479, 2539, 32125, 293, 16117, 2370, 7318, 544, 8659, 13, 51016, 51016, 3560, 291, 4888, 1455, 264, 1792, 11529, 82, 257, 544, 9860, 644, 295, 264, 1164, 11, 884, 257, 51182, 51182, 4994, 4722, 7043, 1164, 11, 420, 9289, 1621, 17720, 11081, 1296, 644, 472, 293, 51436, 51436, 732, 30, 51486, 51486, 407, 2086, 11, 286, 669, 516, 281, 1066, 884, 1621, 17720, 11081, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10259710167938808, "compression_ratio": 1.7043795620437956, "no_speech_prob": 4.785026249010116e-06}, {"id": 939, "seek": 530782, "start": 5320.86, "end": 5324.179999999999, "text": " Have you considered making the walkthroughs a more formal part of the course, doing a", "tokens": [50364, 407, 9067, 545, 1619, 11, 264, 1792, 11529, 82, 362, 668, 257, 1216, 22822, 337, 385, 13, 50620, 50620, 440, 3601, 293, 6082, 291, 5507, 294, 729, 11081, 366, 3942, 4739, 281, 1813, 364, 50796, 50796, 4942, 3479, 2539, 32125, 293, 16117, 2370, 7318, 544, 8659, 13, 51016, 51016, 3560, 291, 4888, 1455, 264, 1792, 11529, 82, 257, 544, 9860, 644, 295, 264, 1164, 11, 884, 257, 51182, 51182, 4994, 4722, 7043, 1164, 11, 420, 9289, 1621, 17720, 11081, 1296, 644, 472, 293, 51436, 51436, 732, 30, 51486, 51486, 407, 2086, 11, 286, 669, 516, 281, 1066, 884, 1621, 17720, 11081, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10259710167938808, "compression_ratio": 1.7043795620437956, "no_speech_prob": 4.785026249010116e-06}, {"id": 940, "seek": 530782, "start": 5324.179999999999, "end": 5329.259999999999, "text": " separate software engineering course, or continuing live coding sessions between part one and", "tokens": [50364, 407, 9067, 545, 1619, 11, 264, 1792, 11529, 82, 362, 668, 257, 1216, 22822, 337, 385, 13, 50620, 50620, 440, 3601, 293, 6082, 291, 5507, 294, 729, 11081, 366, 3942, 4739, 281, 1813, 364, 50796, 50796, 4942, 3479, 2539, 32125, 293, 16117, 2370, 7318, 544, 8659, 13, 51016, 51016, 3560, 291, 4888, 1455, 264, 1792, 11529, 82, 257, 544, 9860, 644, 295, 264, 1164, 11, 884, 257, 51182, 51182, 4994, 4722, 7043, 1164, 11, 420, 9289, 1621, 17720, 11081, 1296, 644, 472, 293, 51436, 51436, 732, 30, 51486, 51486, 407, 2086, 11, 286, 669, 516, 281, 1066, 884, 1621, 17720, 11081, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10259710167938808, "compression_ratio": 1.7043795620437956, "no_speech_prob": 4.785026249010116e-06}, {"id": 941, "seek": 530782, "start": 5329.259999999999, "end": 5330.259999999999, "text": " two?", "tokens": [50364, 407, 9067, 545, 1619, 11, 264, 1792, 11529, 82, 362, 668, 257, 1216, 22822, 337, 385, 13, 50620, 50620, 440, 3601, 293, 6082, 291, 5507, 294, 729, 11081, 366, 3942, 4739, 281, 1813, 364, 50796, 50796, 4942, 3479, 2539, 32125, 293, 16117, 2370, 7318, 544, 8659, 13, 51016, 51016, 3560, 291, 4888, 1455, 264, 1792, 11529, 82, 257, 544, 9860, 644, 295, 264, 1164, 11, 884, 257, 51182, 51182, 4994, 4722, 7043, 1164, 11, 420, 9289, 1621, 17720, 11081, 1296, 644, 472, 293, 51436, 51436, 732, 30, 51486, 51486, 407, 2086, 11, 286, 669, 516, 281, 1066, 884, 1621, 17720, 11081, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10259710167938808, "compression_ratio": 1.7043795620437956, "no_speech_prob": 4.785026249010116e-06}, {"id": 942, "seek": 530782, "start": 5330.259999999999, "end": 5333.42, "text": " So yes, I am going to keep doing live coding sessions.", "tokens": [50364, 407, 9067, 545, 1619, 11, 264, 1792, 11529, 82, 362, 668, 257, 1216, 22822, 337, 385, 13, 50620, 50620, 440, 3601, 293, 6082, 291, 5507, 294, 729, 11081, 366, 3942, 4739, 281, 1813, 364, 50796, 50796, 4942, 3479, 2539, 32125, 293, 16117, 2370, 7318, 544, 8659, 13, 51016, 51016, 3560, 291, 4888, 1455, 264, 1792, 11529, 82, 257, 544, 9860, 644, 295, 264, 1164, 11, 884, 257, 51182, 51182, 4994, 4722, 7043, 1164, 11, 420, 9289, 1621, 17720, 11081, 1296, 644, 472, 293, 51436, 51436, 732, 30, 51486, 51486, 407, 2086, 11, 286, 669, 516, 281, 1066, 884, 1621, 17720, 11081, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.10259710167938808, "compression_ratio": 1.7043795620437956, "no_speech_prob": 4.785026249010116e-06}, {"id": 943, "seek": 533342, "start": 5333.42, "end": 5338.22, "text": " At the moment, we've switched to those specifically to focusing on APL.", "tokens": [50364, 1711, 264, 1623, 11, 321, 600, 16858, 281, 729, 4682, 281, 8416, 322, 5372, 43, 13, 50604, 50604, 400, 550, 294, 257, 1916, 295, 3259, 11, 436, 434, 516, 281, 312, 516, 281, 2370, 7318, 2979, 3935, 13, 50818, 50818, 400, 550, 934, 300, 11, 436, 603, 13145, 1261, 646, 666, 544, 1621, 17720, 11081, 13, 51028, 51028, 583, 1338, 11, 264, 551, 286, 853, 281, 360, 294, 452, 1621, 17720, 420, 2979, 3935, 11, 2035, 11, 307, 2138, 51372, 51372, 853, 281, 855, 264, 32195, 7512, 300, 445, 652, 993, 3571, 382, 257, 17656, 260, 420, 257, 1412, 51742, 51742, 12662, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10801832252573744, "compression_ratio": 1.65625, "no_speech_prob": 4.356770659796894e-06}, {"id": 944, "seek": 533342, "start": 5338.22, "end": 5342.5, "text": " And then in a couple of weeks, they're going to be going to fast AI study groups.", "tokens": [50364, 1711, 264, 1623, 11, 321, 600, 16858, 281, 729, 4682, 281, 8416, 322, 5372, 43, 13, 50604, 50604, 400, 550, 294, 257, 1916, 295, 3259, 11, 436, 434, 516, 281, 312, 516, 281, 2370, 7318, 2979, 3935, 13, 50818, 50818, 400, 550, 934, 300, 11, 436, 603, 13145, 1261, 646, 666, 544, 1621, 17720, 11081, 13, 51028, 51028, 583, 1338, 11, 264, 551, 286, 853, 281, 360, 294, 452, 1621, 17720, 420, 2979, 3935, 11, 2035, 11, 307, 2138, 51372, 51372, 853, 281, 855, 264, 32195, 7512, 300, 445, 652, 993, 3571, 382, 257, 17656, 260, 420, 257, 1412, 51742, 51742, 12662, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10801832252573744, "compression_ratio": 1.65625, "no_speech_prob": 4.356770659796894e-06}, {"id": 945, "seek": 533342, "start": 5342.5, "end": 5346.7, "text": " And then after that, they'll gradually turn back into more live coding sessions.", "tokens": [50364, 1711, 264, 1623, 11, 321, 600, 16858, 281, 729, 4682, 281, 8416, 322, 5372, 43, 13, 50604, 50604, 400, 550, 294, 257, 1916, 295, 3259, 11, 436, 434, 516, 281, 312, 516, 281, 2370, 7318, 2979, 3935, 13, 50818, 50818, 400, 550, 934, 300, 11, 436, 603, 13145, 1261, 646, 666, 544, 1621, 17720, 11081, 13, 51028, 51028, 583, 1338, 11, 264, 551, 286, 853, 281, 360, 294, 452, 1621, 17720, 420, 2979, 3935, 11, 2035, 11, 307, 2138, 51372, 51372, 853, 281, 855, 264, 32195, 7512, 300, 445, 652, 993, 3571, 382, 257, 17656, 260, 420, 257, 1412, 51742, 51742, 12662, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10801832252573744, "compression_ratio": 1.65625, "no_speech_prob": 4.356770659796894e-06}, {"id": 946, "seek": 533342, "start": 5346.7, "end": 5353.58, "text": " But yeah, the thing I try to do in my live coding or study groups, whatever, is definitely", "tokens": [50364, 1711, 264, 1623, 11, 321, 600, 16858, 281, 729, 4682, 281, 8416, 322, 5372, 43, 13, 50604, 50604, 400, 550, 294, 257, 1916, 295, 3259, 11, 436, 434, 516, 281, 312, 516, 281, 2370, 7318, 2979, 3935, 13, 50818, 50818, 400, 550, 934, 300, 11, 436, 603, 13145, 1261, 646, 666, 544, 1621, 17720, 11081, 13, 51028, 51028, 583, 1338, 11, 264, 551, 286, 853, 281, 360, 294, 452, 1621, 17720, 420, 2979, 3935, 11, 2035, 11, 307, 2138, 51372, 51372, 853, 281, 855, 264, 32195, 7512, 300, 445, 652, 993, 3571, 382, 257, 17656, 260, 420, 257, 1412, 51742, 51742, 12662, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10801832252573744, "compression_ratio": 1.65625, "no_speech_prob": 4.356770659796894e-06}, {"id": 947, "seek": 533342, "start": 5353.58, "end": 5360.9800000000005, "text": " try to show the foundational techniques that just make life easier as a coder or a data", "tokens": [50364, 1711, 264, 1623, 11, 321, 600, 16858, 281, 729, 4682, 281, 8416, 322, 5372, 43, 13, 50604, 50604, 400, 550, 294, 257, 1916, 295, 3259, 11, 436, 434, 516, 281, 312, 516, 281, 2370, 7318, 2979, 3935, 13, 50818, 50818, 400, 550, 934, 300, 11, 436, 603, 13145, 1261, 646, 666, 544, 1621, 17720, 11081, 13, 51028, 51028, 583, 1338, 11, 264, 551, 286, 853, 281, 360, 294, 452, 1621, 17720, 420, 2979, 3935, 11, 2035, 11, 307, 2138, 51372, 51372, 853, 281, 855, 264, 32195, 7512, 300, 445, 652, 993, 3571, 382, 257, 17656, 260, 420, 257, 1412, 51742, 51742, 12662, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10801832252573744, "compression_ratio": 1.65625, "no_speech_prob": 4.356770659796894e-06}, {"id": 948, "seek": 533342, "start": 5360.9800000000005, "end": 5361.9800000000005, "text": " scientist.", "tokens": [50364, 1711, 264, 1623, 11, 321, 600, 16858, 281, 729, 4682, 281, 8416, 322, 5372, 43, 13, 50604, 50604, 400, 550, 294, 257, 1916, 295, 3259, 11, 436, 434, 516, 281, 312, 516, 281, 2370, 7318, 2979, 3935, 13, 50818, 50818, 400, 550, 934, 300, 11, 436, 603, 13145, 1261, 646, 666, 544, 1621, 17720, 11081, 13, 51028, 51028, 583, 1338, 11, 264, 551, 286, 853, 281, 360, 294, 452, 1621, 17720, 420, 2979, 3935, 11, 2035, 11, 307, 2138, 51372, 51372, 853, 281, 855, 264, 32195, 7512, 300, 445, 652, 993, 3571, 382, 257, 17656, 260, 420, 257, 1412, 51742, 51742, 12662, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10801832252573744, "compression_ratio": 1.65625, "no_speech_prob": 4.356770659796894e-06}, {"id": 949, "seek": 536198, "start": 5361.98, "end": 5367.099999999999, "text": " When I say foundational, I mean, yeah, the stuff which you can reuse again and again and", "tokens": [50364, 1133, 286, 584, 32195, 11, 286, 914, 11, 1338, 11, 264, 1507, 597, 291, 393, 26225, 797, 293, 797, 293, 50620, 50620, 797, 11, 411, 2539, 3890, 15277, 534, 731, 11, 420, 5276, 577, 281, 764, 18038, 11, 420, 3701, 50966, 50966, 577, 281, 764, 264, 14709, 293, 5622, 1622, 11, 291, 458, 11, 439, 300, 733, 295, 1507, 13, 51296, 51296, 7344, 1709, 484, 295, 3758, 13, 51346, 51346, 467, 1128, 2170, 1331, 13, 51458, 51458, 400, 1338, 11, 286, 360, 1393, 281, 412, 512, 935, 11, 4696, 11, 767, 360, 257, 1164, 534, 439, 466, 2539, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.19156540141386144, "compression_ratio": 1.6639004149377594, "no_speech_prob": 4.029362116853008e-06}, {"id": 950, "seek": 536198, "start": 5367.099999999999, "end": 5374.0199999999995, "text": " again, like learning regular expressions really well, or knowing how to use VM, or understanding", "tokens": [50364, 1133, 286, 584, 32195, 11, 286, 914, 11, 1338, 11, 264, 1507, 597, 291, 393, 26225, 797, 293, 797, 293, 50620, 50620, 797, 11, 411, 2539, 3890, 15277, 534, 731, 11, 420, 5276, 577, 281, 764, 18038, 11, 420, 3701, 50966, 50966, 577, 281, 764, 264, 14709, 293, 5622, 1622, 11, 291, 458, 11, 439, 300, 733, 295, 1507, 13, 51296, 51296, 7344, 1709, 484, 295, 3758, 13, 51346, 51346, 467, 1128, 2170, 1331, 13, 51458, 51458, 400, 1338, 11, 286, 360, 1393, 281, 412, 512, 935, 11, 4696, 11, 767, 360, 257, 1164, 534, 439, 466, 2539, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.19156540141386144, "compression_ratio": 1.6639004149377594, "no_speech_prob": 4.029362116853008e-06}, {"id": 951, "seek": 536198, "start": 5374.0199999999995, "end": 5380.62, "text": " how to use the terminal and command line, you know, all that kind of stuff.", "tokens": [50364, 1133, 286, 584, 32195, 11, 286, 914, 11, 1338, 11, 264, 1507, 597, 291, 393, 26225, 797, 293, 797, 293, 50620, 50620, 797, 11, 411, 2539, 3890, 15277, 534, 731, 11, 420, 5276, 577, 281, 764, 18038, 11, 420, 3701, 50966, 50966, 577, 281, 764, 264, 14709, 293, 5622, 1622, 11, 291, 458, 11, 439, 300, 733, 295, 1507, 13, 51296, 51296, 7344, 1709, 484, 295, 3758, 13, 51346, 51346, 467, 1128, 2170, 1331, 13, 51458, 51458, 400, 1338, 11, 286, 360, 1393, 281, 412, 512, 935, 11, 4696, 11, 767, 360, 257, 1164, 534, 439, 466, 2539, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.19156540141386144, "compression_ratio": 1.6639004149377594, "no_speech_prob": 4.029362116853008e-06}, {"id": 952, "seek": 536198, "start": 5380.62, "end": 5381.62, "text": " Never goes out of style.", "tokens": [50364, 1133, 286, 584, 32195, 11, 286, 914, 11, 1338, 11, 264, 1507, 597, 291, 393, 26225, 797, 293, 797, 293, 50620, 50620, 797, 11, 411, 2539, 3890, 15277, 534, 731, 11, 420, 5276, 577, 281, 764, 18038, 11, 420, 3701, 50966, 50966, 577, 281, 764, 264, 14709, 293, 5622, 1622, 11, 291, 458, 11, 439, 300, 733, 295, 1507, 13, 51296, 51296, 7344, 1709, 484, 295, 3758, 13, 51346, 51346, 467, 1128, 2170, 1331, 13, 51458, 51458, 400, 1338, 11, 286, 360, 1393, 281, 412, 512, 935, 11, 4696, 11, 767, 360, 257, 1164, 534, 439, 466, 2539, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.19156540141386144, "compression_ratio": 1.6639004149377594, "no_speech_prob": 4.029362116853008e-06}, {"id": 953, "seek": 536198, "start": 5381.62, "end": 5383.86, "text": " It never gets old.", "tokens": [50364, 1133, 286, 584, 32195, 11, 286, 914, 11, 1338, 11, 264, 1507, 597, 291, 393, 26225, 797, 293, 797, 293, 50620, 50620, 797, 11, 411, 2539, 3890, 15277, 534, 731, 11, 420, 5276, 577, 281, 764, 18038, 11, 420, 3701, 50966, 50966, 577, 281, 764, 264, 14709, 293, 5622, 1622, 11, 291, 458, 11, 439, 300, 733, 295, 1507, 13, 51296, 51296, 7344, 1709, 484, 295, 3758, 13, 51346, 51346, 467, 1128, 2170, 1331, 13, 51458, 51458, 400, 1338, 11, 286, 360, 1393, 281, 412, 512, 935, 11, 4696, 11, 767, 360, 257, 1164, 534, 439, 466, 2539, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.19156540141386144, "compression_ratio": 1.6639004149377594, "no_speech_prob": 4.029362116853008e-06}, {"id": 954, "seek": 536198, "start": 5383.86, "end": 5391.74, "text": " And yeah, I do plan to at some point, hopefully, actually do a course really all about learning", "tokens": [50364, 1133, 286, 584, 32195, 11, 286, 914, 11, 1338, 11, 264, 1507, 597, 291, 393, 26225, 797, 293, 797, 293, 50620, 50620, 797, 11, 411, 2539, 3890, 15277, 534, 731, 11, 420, 5276, 577, 281, 764, 18038, 11, 420, 3701, 50966, 50966, 577, 281, 764, 264, 14709, 293, 5622, 1622, 11, 291, 458, 11, 439, 300, 733, 295, 1507, 13, 51296, 51296, 7344, 1709, 484, 295, 3758, 13, 51346, 51346, 467, 1128, 2170, 1331, 13, 51458, 51458, 400, 1338, 11, 286, 360, 1393, 281, 412, 512, 935, 11, 4696, 11, 767, 360, 257, 1164, 534, 439, 466, 2539, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.19156540141386144, "compression_ratio": 1.6639004149377594, "no_speech_prob": 4.029362116853008e-06}, {"id": 955, "seek": 539174, "start": 5391.74, "end": 5394.26, "text": " that stuff specifically.", "tokens": [50364, 300, 1507, 4682, 13, 50490, 50490, 583, 1338, 11, 337, 586, 11, 264, 1151, 3109, 307, 1524, 2051, 365, 264, 1621, 17720, 293, 1507, 13, 50744, 50744, 1033, 11, 343, 38, 8115, 33, 82, 11, 597, 307, 28001, 11, 8962, 11, 577, 360, 291, 1261, 257, 2316, 666, 257, 1606, 30, 51100, 51100, 26058, 11, 577, 775, 257, 17656, 260, 365, 707, 420, 572, 18578, 1752, 1261, 364, 21601, 12, 6032, 51388, 51388, 16710, 1004, 19475, 666, 257, 17956, 1606, 18474, 30, 51566, 51566, 1033, 11, 286, 1393, 281, 360, 257, 1164, 466, 341, 412, 512, 935, 382, 731, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2670317246363713, "compression_ratio": 1.5461847389558232, "no_speech_prob": 3.844900220428826e-06}, {"id": 956, "seek": 539174, "start": 5394.26, "end": 5399.34, "text": " But yeah, for now, the best approach is follow along with the live coding and stuff.", "tokens": [50364, 300, 1507, 4682, 13, 50490, 50490, 583, 1338, 11, 337, 586, 11, 264, 1151, 3109, 307, 1524, 2051, 365, 264, 1621, 17720, 293, 1507, 13, 50744, 50744, 1033, 11, 343, 38, 8115, 33, 82, 11, 597, 307, 28001, 11, 8962, 11, 577, 360, 291, 1261, 257, 2316, 666, 257, 1606, 30, 51100, 51100, 26058, 11, 577, 775, 257, 17656, 260, 365, 707, 420, 572, 18578, 1752, 1261, 364, 21601, 12, 6032, 51388, 51388, 16710, 1004, 19475, 666, 257, 17956, 1606, 18474, 30, 51566, 51566, 1033, 11, 286, 1393, 281, 360, 257, 1164, 466, 341, 412, 512, 935, 382, 731, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2670317246363713, "compression_ratio": 1.5461847389558232, "no_speech_prob": 3.844900220428826e-06}, {"id": 957, "seek": 539174, "start": 5399.34, "end": 5406.46, "text": " Okay, WGPUBs, which is Wade, asks, how do you turn a model into a business?", "tokens": [50364, 300, 1507, 4682, 13, 50490, 50490, 583, 1338, 11, 337, 586, 11, 264, 1151, 3109, 307, 1524, 2051, 365, 264, 1621, 17720, 293, 1507, 13, 50744, 50744, 1033, 11, 343, 38, 8115, 33, 82, 11, 597, 307, 28001, 11, 8962, 11, 577, 360, 291, 1261, 257, 2316, 666, 257, 1606, 30, 51100, 51100, 26058, 11, 577, 775, 257, 17656, 260, 365, 707, 420, 572, 18578, 1752, 1261, 364, 21601, 12, 6032, 51388, 51388, 16710, 1004, 19475, 666, 257, 17956, 1606, 18474, 30, 51566, 51566, 1033, 11, 286, 1393, 281, 360, 257, 1164, 466, 341, 412, 512, 935, 382, 731, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2670317246363713, "compression_ratio": 1.5461847389558232, "no_speech_prob": 3.844900220428826e-06}, {"id": 958, "seek": 539174, "start": 5406.46, "end": 5412.219999999999, "text": " Specifically, how does a coder with little or no startup experience turn an ML-based", "tokens": [50364, 300, 1507, 4682, 13, 50490, 50490, 583, 1338, 11, 337, 586, 11, 264, 1151, 3109, 307, 1524, 2051, 365, 264, 1621, 17720, 293, 1507, 13, 50744, 50744, 1033, 11, 343, 38, 8115, 33, 82, 11, 597, 307, 28001, 11, 8962, 11, 577, 360, 291, 1261, 257, 2316, 666, 257, 1606, 30, 51100, 51100, 26058, 11, 577, 775, 257, 17656, 260, 365, 707, 420, 572, 18578, 1752, 1261, 364, 21601, 12, 6032, 51388, 51388, 16710, 1004, 19475, 666, 257, 17956, 1606, 18474, 30, 51566, 51566, 1033, 11, 286, 1393, 281, 360, 257, 1164, 466, 341, 412, 512, 935, 382, 731, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2670317246363713, "compression_ratio": 1.5461847389558232, "no_speech_prob": 3.844900220428826e-06}, {"id": 959, "seek": 539174, "start": 5412.219999999999, "end": 5415.78, "text": " Gradio prototype into a legitimate business venture?", "tokens": [50364, 300, 1507, 4682, 13, 50490, 50490, 583, 1338, 11, 337, 586, 11, 264, 1151, 3109, 307, 1524, 2051, 365, 264, 1621, 17720, 293, 1507, 13, 50744, 50744, 1033, 11, 343, 38, 8115, 33, 82, 11, 597, 307, 28001, 11, 8962, 11, 577, 360, 291, 1261, 257, 2316, 666, 257, 1606, 30, 51100, 51100, 26058, 11, 577, 775, 257, 17656, 260, 365, 707, 420, 572, 18578, 1752, 1261, 364, 21601, 12, 6032, 51388, 51388, 16710, 1004, 19475, 666, 257, 17956, 1606, 18474, 30, 51566, 51566, 1033, 11, 286, 1393, 281, 360, 257, 1164, 466, 341, 412, 512, 935, 382, 731, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2670317246363713, "compression_ratio": 1.5461847389558232, "no_speech_prob": 3.844900220428826e-06}, {"id": 960, "seek": 539174, "start": 5415.78, "end": 5420.66, "text": " Okay, I plan to do a course about this at some point as well.", "tokens": [50364, 300, 1507, 4682, 13, 50490, 50490, 583, 1338, 11, 337, 586, 11, 264, 1151, 3109, 307, 1524, 2051, 365, 264, 1621, 17720, 293, 1507, 13, 50744, 50744, 1033, 11, 343, 38, 8115, 33, 82, 11, 597, 307, 28001, 11, 8962, 11, 577, 360, 291, 1261, 257, 2316, 666, 257, 1606, 30, 51100, 51100, 26058, 11, 577, 775, 257, 17656, 260, 365, 707, 420, 572, 18578, 1752, 1261, 364, 21601, 12, 6032, 51388, 51388, 16710, 1004, 19475, 666, 257, 17956, 1606, 18474, 30, 51566, 51566, 1033, 11, 286, 1393, 281, 360, 257, 1164, 466, 341, 412, 512, 935, 382, 731, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2670317246363713, "compression_ratio": 1.5461847389558232, "no_speech_prob": 3.844900220428826e-06}, {"id": 961, "seek": 542066, "start": 5420.66, "end": 5428.42, "text": " So, you know, obviously, there isn't a two-minute version to this.", "tokens": [50364, 407, 11, 291, 458, 11, 2745, 11, 456, 1943, 380, 257, 732, 12, 18256, 3037, 281, 341, 13, 50752, 50752, 583, 264, 2141, 551, 365, 4084, 257, 17956, 1606, 18474, 307, 281, 5039, 257, 17956, 51154, 51154, 1154, 11, 291, 458, 11, 257, 1154, 300, 561, 643, 12606, 293, 597, 436, 486, 1689, 291, 281, 5039, 13, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.12378404961257684, "compression_ratio": 1.5506329113924051, "no_speech_prob": 9.721472906676354e-07}, {"id": 962, "seek": 542066, "start": 5428.42, "end": 5436.46, "text": " But the key thing with creating a legitimate business venture is to solve a legitimate", "tokens": [50364, 407, 11, 291, 458, 11, 2745, 11, 456, 1943, 380, 257, 732, 12, 18256, 3037, 281, 341, 13, 50752, 50752, 583, 264, 2141, 551, 365, 4084, 257, 17956, 1606, 18474, 307, 281, 5039, 257, 17956, 51154, 51154, 1154, 11, 291, 458, 11, 257, 1154, 300, 561, 643, 12606, 293, 597, 436, 486, 1689, 291, 281, 5039, 13, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.12378404961257684, "compression_ratio": 1.5506329113924051, "no_speech_prob": 9.721472906676354e-07}, {"id": 963, "seek": 542066, "start": 5436.46, "end": 5445.44, "text": " problem, you know, a problem that people need solving and which they will pay you to solve.", "tokens": [50364, 407, 11, 291, 458, 11, 2745, 11, 456, 1943, 380, 257, 732, 12, 18256, 3037, 281, 341, 13, 50752, 50752, 583, 264, 2141, 551, 365, 4084, 257, 17956, 1606, 18474, 307, 281, 5039, 257, 17956, 51154, 51154, 1154, 11, 291, 458, 11, 257, 1154, 300, 561, 643, 12606, 293, 597, 436, 486, 1689, 291, 281, 5039, 13, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.12378404961257684, "compression_ratio": 1.5506329113924051, "no_speech_prob": 9.721472906676354e-07}, {"id": 964, "seek": 544544, "start": 5445.44, "end": 5451.86, "text": " And so it's important not to start with your fun Gradio prototype as a basis for your business,", "tokens": [50364, 400, 370, 309, 311, 1021, 406, 281, 722, 365, 428, 1019, 16710, 1004, 19475, 382, 257, 5143, 337, 428, 1606, 11, 50685, 50685, 457, 2602, 722, 365, 11, 510, 311, 257, 1154, 286, 528, 281, 5039, 13, 50929, 50929, 400, 5101, 4124, 11, 291, 820, 853, 281, 1888, 257, 1154, 300, 291, 1223, 1101, 51266, 51266, 813, 881, 561, 13, 51348, 51348, 407, 309, 311, 2139, 257, 1154, 300, 291, 1851, 786, 281, 786, 294, 428, 589, 420, 294, 512, 18240, 420, 5418, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.10077381134033203, "compression_ratio": 1.624413145539906, "no_speech_prob": 6.475901273006457e-07}, {"id": 965, "seek": 544544, "start": 5451.86, "end": 5456.74, "text": " but instead start with, here's a problem I want to solve.", "tokens": [50364, 400, 370, 309, 311, 1021, 406, 281, 722, 365, 428, 1019, 16710, 1004, 19475, 382, 257, 5143, 337, 428, 1606, 11, 50685, 50685, 457, 2602, 722, 365, 11, 510, 311, 257, 1154, 286, 528, 281, 5039, 13, 50929, 50929, 400, 5101, 4124, 11, 291, 820, 853, 281, 1888, 257, 1154, 300, 291, 1223, 1101, 51266, 51266, 813, 881, 561, 13, 51348, 51348, 407, 309, 311, 2139, 257, 1154, 300, 291, 1851, 786, 281, 786, 294, 428, 589, 420, 294, 512, 18240, 420, 5418, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.10077381134033203, "compression_ratio": 1.624413145539906, "no_speech_prob": 6.475901273006457e-07}, {"id": 966, "seek": 544544, "start": 5456.74, "end": 5463.48, "text": " And generally speaking, you should try to pick a problem that you understand better", "tokens": [50364, 400, 370, 309, 311, 1021, 406, 281, 722, 365, 428, 1019, 16710, 1004, 19475, 382, 257, 5143, 337, 428, 1606, 11, 50685, 50685, 457, 2602, 722, 365, 11, 510, 311, 257, 1154, 286, 528, 281, 5039, 13, 50929, 50929, 400, 5101, 4124, 11, 291, 820, 853, 281, 1888, 257, 1154, 300, 291, 1223, 1101, 51266, 51266, 813, 881, 561, 13, 51348, 51348, 407, 309, 311, 2139, 257, 1154, 300, 291, 1851, 786, 281, 786, 294, 428, 589, 420, 294, 512, 18240, 420, 5418, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.10077381134033203, "compression_ratio": 1.624413145539906, "no_speech_prob": 6.475901273006457e-07}, {"id": 967, "seek": 544544, "start": 5463.48, "end": 5465.12, "text": " than most people.", "tokens": [50364, 400, 370, 309, 311, 1021, 406, 281, 722, 365, 428, 1019, 16710, 1004, 19475, 382, 257, 5143, 337, 428, 1606, 11, 50685, 50685, 457, 2602, 722, 365, 11, 510, 311, 257, 1154, 286, 528, 281, 5039, 13, 50929, 50929, 400, 5101, 4124, 11, 291, 820, 853, 281, 1888, 257, 1154, 300, 291, 1223, 1101, 51266, 51266, 813, 881, 561, 13, 51348, 51348, 407, 309, 311, 2139, 257, 1154, 300, 291, 1851, 786, 281, 786, 294, 428, 589, 420, 294, 512, 18240, 420, 5418, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.10077381134033203, "compression_ratio": 1.624413145539906, "no_speech_prob": 6.475901273006457e-07}, {"id": 968, "seek": 544544, "start": 5465.12, "end": 5470.259999999999, "text": " So it's either a problem that you face day to day in your work or in some hobby or passion", "tokens": [50364, 400, 370, 309, 311, 1021, 406, 281, 722, 365, 428, 1019, 16710, 1004, 19475, 382, 257, 5143, 337, 428, 1606, 11, 50685, 50685, 457, 2602, 722, 365, 11, 510, 311, 257, 1154, 286, 528, 281, 5039, 13, 50929, 50929, 400, 5101, 4124, 11, 291, 820, 853, 281, 1888, 257, 1154, 300, 291, 1223, 1101, 51266, 51266, 813, 881, 561, 13, 51348, 51348, 407, 309, 311, 2139, 257, 1154, 300, 291, 1851, 786, 281, 786, 294, 428, 589, 420, 294, 512, 18240, 420, 5418, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.10077381134033203, "compression_ratio": 1.624413145539906, "no_speech_prob": 6.475901273006457e-07}, {"id": 969, "seek": 547026, "start": 5470.26, "end": 5477.22, "text": " that you have or that, you know, your club has or your local school has or your spouse", "tokens": [50364, 300, 291, 362, 420, 300, 11, 291, 458, 11, 428, 6482, 575, 420, 428, 2654, 1395, 575, 420, 428, 23013, 50712, 50712, 11215, 365, 294, 641, 15328, 13, 50872, 50872, 509, 458, 11, 309, 311, 746, 689, 291, 1223, 300, 456, 311, 746, 300, 1177, 380, 589, 382, 51172, 51172, 731, 382, 309, 13416, 281, 11, 4098, 746, 689, 291, 519, 281, 1803, 11, 291, 458, 11, 498, 51452, 51452, 436, 445, 1143, 2452, 2539, 510, 420, 512, 9284, 510, 420, 512, 1101, 14722, 510, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12375008265177409, "compression_ratio": 1.8309178743961352, "no_speech_prob": 1.0783090147015173e-05}, {"id": 970, "seek": 547026, "start": 5477.22, "end": 5480.42, "text": " deals with in their workplace.", "tokens": [50364, 300, 291, 362, 420, 300, 11, 291, 458, 11, 428, 6482, 575, 420, 428, 2654, 1395, 575, 420, 428, 23013, 50712, 50712, 11215, 365, 294, 641, 15328, 13, 50872, 50872, 509, 458, 11, 309, 311, 746, 689, 291, 1223, 300, 456, 311, 746, 300, 1177, 380, 589, 382, 51172, 51172, 731, 382, 309, 13416, 281, 11, 4098, 746, 689, 291, 519, 281, 1803, 11, 291, 458, 11, 498, 51452, 51452, 436, 445, 1143, 2452, 2539, 510, 420, 512, 9284, 510, 420, 512, 1101, 14722, 510, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12375008265177409, "compression_ratio": 1.8309178743961352, "no_speech_prob": 1.0783090147015173e-05}, {"id": 971, "seek": 547026, "start": 5480.42, "end": 5486.42, "text": " You know, it's something where you understand that there's something that doesn't work as", "tokens": [50364, 300, 291, 362, 420, 300, 11, 291, 458, 11, 428, 6482, 575, 420, 428, 2654, 1395, 575, 420, 428, 23013, 50712, 50712, 11215, 365, 294, 641, 15328, 13, 50872, 50872, 509, 458, 11, 309, 311, 746, 689, 291, 1223, 300, 456, 311, 746, 300, 1177, 380, 589, 382, 51172, 51172, 731, 382, 309, 13416, 281, 11, 4098, 746, 689, 291, 519, 281, 1803, 11, 291, 458, 11, 498, 51452, 51452, 436, 445, 1143, 2452, 2539, 510, 420, 512, 9284, 510, 420, 512, 1101, 14722, 510, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12375008265177409, "compression_ratio": 1.8309178743961352, "no_speech_prob": 1.0783090147015173e-05}, {"id": 972, "seek": 547026, "start": 5486.42, "end": 5492.02, "text": " well as it ought to, particularly something where you think to yourself, you know, if", "tokens": [50364, 300, 291, 362, 420, 300, 11, 291, 458, 11, 428, 6482, 575, 420, 428, 2654, 1395, 575, 420, 428, 23013, 50712, 50712, 11215, 365, 294, 641, 15328, 13, 50872, 50872, 509, 458, 11, 309, 311, 746, 689, 291, 1223, 300, 456, 311, 746, 300, 1177, 380, 589, 382, 51172, 51172, 731, 382, 309, 13416, 281, 11, 4098, 746, 689, 291, 519, 281, 1803, 11, 291, 458, 11, 498, 51452, 51452, 436, 445, 1143, 2452, 2539, 510, 420, 512, 9284, 510, 420, 512, 1101, 14722, 510, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12375008265177409, "compression_ratio": 1.8309178743961352, "no_speech_prob": 1.0783090147015173e-05}, {"id": 973, "seek": 547026, "start": 5492.02, "end": 5499.9800000000005, "text": " they just used deep learning here or some algorithm here or some better compute here,", "tokens": [50364, 300, 291, 362, 420, 300, 11, 291, 458, 11, 428, 6482, 575, 420, 428, 2654, 1395, 575, 420, 428, 23013, 50712, 50712, 11215, 365, 294, 641, 15328, 13, 50872, 50872, 509, 458, 11, 309, 311, 746, 689, 291, 1223, 300, 456, 311, 746, 300, 1177, 380, 589, 382, 51172, 51172, 731, 382, 309, 13416, 281, 11, 4098, 746, 689, 291, 519, 281, 1803, 11, 291, 458, 11, 498, 51452, 51452, 436, 445, 1143, 2452, 2539, 510, 420, 512, 9284, 510, 420, 512, 1101, 14722, 510, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12375008265177409, "compression_ratio": 1.8309178743961352, "no_speech_prob": 1.0783090147015173e-05}, {"id": 974, "seek": 549998, "start": 5499.98, "end": 5502.98, "text": " that problem would go away.", "tokens": [50364, 300, 1154, 576, 352, 1314, 13, 50514, 50514, 400, 300, 311, 264, 722, 295, 257, 1606, 13, 50704, 50704, 400, 370, 550, 452, 1277, 9336, 49474, 4114, 257, 1446, 1219, 440, 49303, 6481, 1010, 689, 415, 15626, 51076, 51076, 437, 291, 360, 958, 11, 597, 307, 1936, 291, 7592, 309, 13, 51252, 51252, 509, 1884, 11, 370, 415, 5498, 309, 264, 7285, 22024, 1674, 13, 51379, 51379, 509, 1884, 746, 300, 39890, 300, 1154, 11, 300, 2516, 291, 382, 707, 565, 382, 1944, 51640, 51640, 281, 1884, 13, 51690, 51690, 467, 727, 312, 588, 9688, 13, 51740, 51740, 467, 393, 312, 4470, 1455, 13, 51806, 51806, 467, 311, 2489, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.12327823304293449, "compression_ratio": 1.625, "no_speech_prob": 7.183147317846306e-06}, {"id": 975, "seek": 549998, "start": 5502.98, "end": 5506.78, "text": " And that's the start of a business.", "tokens": [50364, 300, 1154, 576, 352, 1314, 13, 50514, 50514, 400, 300, 311, 264, 722, 295, 257, 1606, 13, 50704, 50704, 400, 370, 550, 452, 1277, 9336, 49474, 4114, 257, 1446, 1219, 440, 49303, 6481, 1010, 689, 415, 15626, 51076, 51076, 437, 291, 360, 958, 11, 597, 307, 1936, 291, 7592, 309, 13, 51252, 51252, 509, 1884, 11, 370, 415, 5498, 309, 264, 7285, 22024, 1674, 13, 51379, 51379, 509, 1884, 746, 300, 39890, 300, 1154, 11, 300, 2516, 291, 382, 707, 565, 382, 1944, 51640, 51640, 281, 1884, 13, 51690, 51690, 467, 727, 312, 588, 9688, 13, 51740, 51740, 467, 393, 312, 4470, 1455, 13, 51806, 51806, 467, 311, 2489, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.12327823304293449, "compression_ratio": 1.625, "no_speech_prob": 7.183147317846306e-06}, {"id": 976, "seek": 549998, "start": 5506.78, "end": 5514.219999999999, "text": " And so then my friend Eric Reese wrote a book called The Lean Startup where he describes", "tokens": [50364, 300, 1154, 576, 352, 1314, 13, 50514, 50514, 400, 300, 311, 264, 722, 295, 257, 1606, 13, 50704, 50704, 400, 370, 550, 452, 1277, 9336, 49474, 4114, 257, 1446, 1219, 440, 49303, 6481, 1010, 689, 415, 15626, 51076, 51076, 437, 291, 360, 958, 11, 597, 307, 1936, 291, 7592, 309, 13, 51252, 51252, 509, 1884, 11, 370, 415, 5498, 309, 264, 7285, 22024, 1674, 13, 51379, 51379, 509, 1884, 746, 300, 39890, 300, 1154, 11, 300, 2516, 291, 382, 707, 565, 382, 1944, 51640, 51640, 281, 1884, 13, 51690, 51690, 467, 727, 312, 588, 9688, 13, 51740, 51740, 467, 393, 312, 4470, 1455, 13, 51806, 51806, 467, 311, 2489, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.12327823304293449, "compression_ratio": 1.625, "no_speech_prob": 7.183147317846306e-06}, {"id": 977, "seek": 549998, "start": 5514.219999999999, "end": 5517.74, "text": " what you do next, which is basically you fake it.", "tokens": [50364, 300, 1154, 576, 352, 1314, 13, 50514, 50514, 400, 300, 311, 264, 722, 295, 257, 1606, 13, 50704, 50704, 400, 370, 550, 452, 1277, 9336, 49474, 4114, 257, 1446, 1219, 440, 49303, 6481, 1010, 689, 415, 15626, 51076, 51076, 437, 291, 360, 958, 11, 597, 307, 1936, 291, 7592, 309, 13, 51252, 51252, 509, 1884, 11, 370, 415, 5498, 309, 264, 7285, 22024, 1674, 13, 51379, 51379, 509, 1884, 746, 300, 39890, 300, 1154, 11, 300, 2516, 291, 382, 707, 565, 382, 1944, 51640, 51640, 281, 1884, 13, 51690, 51690, 467, 727, 312, 588, 9688, 13, 51740, 51740, 467, 393, 312, 4470, 1455, 13, 51806, 51806, 467, 311, 2489, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.12327823304293449, "compression_ratio": 1.625, "no_speech_prob": 7.183147317846306e-06}, {"id": 978, "seek": 549998, "start": 5517.74, "end": 5520.28, "text": " You create, so he calls it the minimum viable product.", "tokens": [50364, 300, 1154, 576, 352, 1314, 13, 50514, 50514, 400, 300, 311, 264, 722, 295, 257, 1606, 13, 50704, 50704, 400, 370, 550, 452, 1277, 9336, 49474, 4114, 257, 1446, 1219, 440, 49303, 6481, 1010, 689, 415, 15626, 51076, 51076, 437, 291, 360, 958, 11, 597, 307, 1936, 291, 7592, 309, 13, 51252, 51252, 509, 1884, 11, 370, 415, 5498, 309, 264, 7285, 22024, 1674, 13, 51379, 51379, 509, 1884, 746, 300, 39890, 300, 1154, 11, 300, 2516, 291, 382, 707, 565, 382, 1944, 51640, 51640, 281, 1884, 13, 51690, 51690, 467, 727, 312, 588, 9688, 13, 51740, 51740, 467, 393, 312, 4470, 1455, 13, 51806, 51806, 467, 311, 2489, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.12327823304293449, "compression_ratio": 1.625, "no_speech_prob": 7.183147317846306e-06}, {"id": 979, "seek": 549998, "start": 5520.28, "end": 5525.5, "text": " You create something that solves that problem, that takes you as little time as possible", "tokens": [50364, 300, 1154, 576, 352, 1314, 13, 50514, 50514, 400, 300, 311, 264, 722, 295, 257, 1606, 13, 50704, 50704, 400, 370, 550, 452, 1277, 9336, 49474, 4114, 257, 1446, 1219, 440, 49303, 6481, 1010, 689, 415, 15626, 51076, 51076, 437, 291, 360, 958, 11, 597, 307, 1936, 291, 7592, 309, 13, 51252, 51252, 509, 1884, 11, 370, 415, 5498, 309, 264, 7285, 22024, 1674, 13, 51379, 51379, 509, 1884, 746, 300, 39890, 300, 1154, 11, 300, 2516, 291, 382, 707, 565, 382, 1944, 51640, 51640, 281, 1884, 13, 51690, 51690, 467, 727, 312, 588, 9688, 13, 51740, 51740, 467, 393, 312, 4470, 1455, 13, 51806, 51806, 467, 311, 2489, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.12327823304293449, "compression_ratio": 1.625, "no_speech_prob": 7.183147317846306e-06}, {"id": 980, "seek": 549998, "start": 5525.5, "end": 5526.5, "text": " to create.", "tokens": [50364, 300, 1154, 576, 352, 1314, 13, 50514, 50514, 400, 300, 311, 264, 722, 295, 257, 1606, 13, 50704, 50704, 400, 370, 550, 452, 1277, 9336, 49474, 4114, 257, 1446, 1219, 440, 49303, 6481, 1010, 689, 415, 15626, 51076, 51076, 437, 291, 360, 958, 11, 597, 307, 1936, 291, 7592, 309, 13, 51252, 51252, 509, 1884, 11, 370, 415, 5498, 309, 264, 7285, 22024, 1674, 13, 51379, 51379, 509, 1884, 746, 300, 39890, 300, 1154, 11, 300, 2516, 291, 382, 707, 565, 382, 1944, 51640, 51640, 281, 1884, 13, 51690, 51690, 467, 727, 312, 588, 9688, 13, 51740, 51740, 467, 393, 312, 4470, 1455, 13, 51806, 51806, 467, 311, 2489, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.12327823304293449, "compression_ratio": 1.625, "no_speech_prob": 7.183147317846306e-06}, {"id": 981, "seek": 549998, "start": 5526.5, "end": 5527.5, "text": " It could be very manual.", "tokens": [50364, 300, 1154, 576, 352, 1314, 13, 50514, 50514, 400, 300, 311, 264, 722, 295, 257, 1606, 13, 50704, 50704, 400, 370, 550, 452, 1277, 9336, 49474, 4114, 257, 1446, 1219, 440, 49303, 6481, 1010, 689, 415, 15626, 51076, 51076, 437, 291, 360, 958, 11, 597, 307, 1936, 291, 7592, 309, 13, 51252, 51252, 509, 1884, 11, 370, 415, 5498, 309, 264, 7285, 22024, 1674, 13, 51379, 51379, 509, 1884, 746, 300, 39890, 300, 1154, 11, 300, 2516, 291, 382, 707, 565, 382, 1944, 51640, 51640, 281, 1884, 13, 51690, 51690, 467, 727, 312, 588, 9688, 13, 51740, 51740, 467, 393, 312, 4470, 1455, 13, 51806, 51806, 467, 311, 2489, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.12327823304293449, "compression_ratio": 1.625, "no_speech_prob": 7.183147317846306e-06}, {"id": 982, "seek": 549998, "start": 5527.5, "end": 5528.82, "text": " It can be loss making.", "tokens": [50364, 300, 1154, 576, 352, 1314, 13, 50514, 50514, 400, 300, 311, 264, 722, 295, 257, 1606, 13, 50704, 50704, 400, 370, 550, 452, 1277, 9336, 49474, 4114, 257, 1446, 1219, 440, 49303, 6481, 1010, 689, 415, 15626, 51076, 51076, 437, 291, 360, 958, 11, 597, 307, 1936, 291, 7592, 309, 13, 51252, 51252, 509, 1884, 11, 370, 415, 5498, 309, 264, 7285, 22024, 1674, 13, 51379, 51379, 509, 1884, 746, 300, 39890, 300, 1154, 11, 300, 2516, 291, 382, 707, 565, 382, 1944, 51640, 51640, 281, 1884, 13, 51690, 51690, 467, 727, 312, 588, 9688, 13, 51740, 51740, 467, 393, 312, 4470, 1455, 13, 51806, 51806, 467, 311, 2489, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.12327823304293449, "compression_ratio": 1.625, "no_speech_prob": 7.183147317846306e-06}, {"id": 983, "seek": 549998, "start": 5528.82, "end": 5529.82, "text": " It's fine.", "tokens": [50364, 300, 1154, 576, 352, 1314, 13, 50514, 50514, 400, 300, 311, 264, 722, 295, 257, 1606, 13, 50704, 50704, 400, 370, 550, 452, 1277, 9336, 49474, 4114, 257, 1446, 1219, 440, 49303, 6481, 1010, 689, 415, 15626, 51076, 51076, 437, 291, 360, 958, 11, 597, 307, 1936, 291, 7592, 309, 13, 51252, 51252, 509, 1884, 11, 370, 415, 5498, 309, 264, 7285, 22024, 1674, 13, 51379, 51379, 509, 1884, 746, 300, 39890, 300, 1154, 11, 300, 2516, 291, 382, 707, 565, 382, 1944, 51640, 51640, 281, 1884, 13, 51690, 51690, 467, 727, 312, 588, 9688, 13, 51740, 51740, 467, 393, 312, 4470, 1455, 13, 51806, 51806, 467, 311, 2489, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.12327823304293449, "compression_ratio": 1.625, "no_speech_prob": 7.183147317846306e-06}, {"id": 984, "seek": 552982, "start": 5529.82, "end": 5532.219999999999, "text": " You know, even the bit in the middle where you're like, oh, there's going to be a neural", "tokens": [50364, 509, 458, 11, 754, 264, 857, 294, 264, 2808, 689, 291, 434, 411, 11, 1954, 11, 456, 311, 516, 281, 312, 257, 18161, 50484, 50484, 2533, 510, 13, 50548, 50548, 467, 311, 2489, 281, 411, 4025, 1553, 264, 18161, 2533, 293, 360, 1203, 538, 1011, 13, 50818, 50818, 509, 434, 445, 1382, 281, 915, 484, 366, 561, 516, 281, 1689, 337, 341, 293, 307, 341, 767, 50958, 50958, 4420, 30, 51038, 51038, 400, 550, 1564, 291, 362, 11, 291, 458, 11, 4696, 11341, 300, 264, 643, 307, 957, 293, 300, 561, 51298, 51298, 486, 1689, 337, 309, 293, 291, 393, 5039, 264, 643, 11, 291, 393, 13145, 652, 309, 1570, 293, 1570, 295, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.13000877902039096, "compression_ratio": 1.8016194331983806, "no_speech_prob": 2.7264431992080063e-06}, {"id": 985, "seek": 552982, "start": 5532.219999999999, "end": 5533.5, "text": " net here.", "tokens": [50364, 509, 458, 11, 754, 264, 857, 294, 264, 2808, 689, 291, 434, 411, 11, 1954, 11, 456, 311, 516, 281, 312, 257, 18161, 50484, 50484, 2533, 510, 13, 50548, 50548, 467, 311, 2489, 281, 411, 4025, 1553, 264, 18161, 2533, 293, 360, 1203, 538, 1011, 13, 50818, 50818, 509, 434, 445, 1382, 281, 915, 484, 366, 561, 516, 281, 1689, 337, 341, 293, 307, 341, 767, 50958, 50958, 4420, 30, 51038, 51038, 400, 550, 1564, 291, 362, 11, 291, 458, 11, 4696, 11341, 300, 264, 643, 307, 957, 293, 300, 561, 51298, 51298, 486, 1689, 337, 309, 293, 291, 393, 5039, 264, 643, 11, 291, 393, 13145, 652, 309, 1570, 293, 1570, 295, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.13000877902039096, "compression_ratio": 1.8016194331983806, "no_speech_prob": 2.7264431992080063e-06}, {"id": 986, "seek": 552982, "start": 5533.5, "end": 5538.9, "text": " It's fine to like launch without the neural net and do everything by hand.", "tokens": [50364, 509, 458, 11, 754, 264, 857, 294, 264, 2808, 689, 291, 434, 411, 11, 1954, 11, 456, 311, 516, 281, 312, 257, 18161, 50484, 50484, 2533, 510, 13, 50548, 50548, 467, 311, 2489, 281, 411, 4025, 1553, 264, 18161, 2533, 293, 360, 1203, 538, 1011, 13, 50818, 50818, 509, 434, 445, 1382, 281, 915, 484, 366, 561, 516, 281, 1689, 337, 341, 293, 307, 341, 767, 50958, 50958, 4420, 30, 51038, 51038, 400, 550, 1564, 291, 362, 11, 291, 458, 11, 4696, 11341, 300, 264, 643, 307, 957, 293, 300, 561, 51298, 51298, 486, 1689, 337, 309, 293, 291, 393, 5039, 264, 643, 11, 291, 393, 13145, 652, 309, 1570, 293, 1570, 295, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.13000877902039096, "compression_ratio": 1.8016194331983806, "no_speech_prob": 2.7264431992080063e-06}, {"id": 987, "seek": 552982, "start": 5538.9, "end": 5541.7, "text": " You're just trying to find out are people going to pay for this and is this actually", "tokens": [50364, 509, 458, 11, 754, 264, 857, 294, 264, 2808, 689, 291, 434, 411, 11, 1954, 11, 456, 311, 516, 281, 312, 257, 18161, 50484, 50484, 2533, 510, 13, 50548, 50548, 467, 311, 2489, 281, 411, 4025, 1553, 264, 18161, 2533, 293, 360, 1203, 538, 1011, 13, 50818, 50818, 509, 434, 445, 1382, 281, 915, 484, 366, 561, 516, 281, 1689, 337, 341, 293, 307, 341, 767, 50958, 50958, 4420, 30, 51038, 51038, 400, 550, 1564, 291, 362, 11, 291, 458, 11, 4696, 11341, 300, 264, 643, 307, 957, 293, 300, 561, 51298, 51298, 486, 1689, 337, 309, 293, 291, 393, 5039, 264, 643, 11, 291, 393, 13145, 652, 309, 1570, 293, 1570, 295, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.13000877902039096, "compression_ratio": 1.8016194331983806, "no_speech_prob": 2.7264431992080063e-06}, {"id": 988, "seek": 552982, "start": 5541.7, "end": 5543.299999999999, "text": " useful?", "tokens": [50364, 509, 458, 11, 754, 264, 857, 294, 264, 2808, 689, 291, 434, 411, 11, 1954, 11, 456, 311, 516, 281, 312, 257, 18161, 50484, 50484, 2533, 510, 13, 50548, 50548, 467, 311, 2489, 281, 411, 4025, 1553, 264, 18161, 2533, 293, 360, 1203, 538, 1011, 13, 50818, 50818, 509, 434, 445, 1382, 281, 915, 484, 366, 561, 516, 281, 1689, 337, 341, 293, 307, 341, 767, 50958, 50958, 4420, 30, 51038, 51038, 400, 550, 1564, 291, 362, 11, 291, 458, 11, 4696, 11341, 300, 264, 643, 307, 957, 293, 300, 561, 51298, 51298, 486, 1689, 337, 309, 293, 291, 393, 5039, 264, 643, 11, 291, 393, 13145, 652, 309, 1570, 293, 1570, 295, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.13000877902039096, "compression_ratio": 1.8016194331983806, "no_speech_prob": 2.7264431992080063e-06}, {"id": 989, "seek": 552982, "start": 5543.299999999999, "end": 5548.5, "text": " And then once you have, you know, hopefully confirmed that the need is real and that people", "tokens": [50364, 509, 458, 11, 754, 264, 857, 294, 264, 2808, 689, 291, 434, 411, 11, 1954, 11, 456, 311, 516, 281, 312, 257, 18161, 50484, 50484, 2533, 510, 13, 50548, 50548, 467, 311, 2489, 281, 411, 4025, 1553, 264, 18161, 2533, 293, 360, 1203, 538, 1011, 13, 50818, 50818, 509, 434, 445, 1382, 281, 915, 484, 366, 561, 516, 281, 1689, 337, 341, 293, 307, 341, 767, 50958, 50958, 4420, 30, 51038, 51038, 400, 550, 1564, 291, 362, 11, 291, 458, 11, 4696, 11341, 300, 264, 643, 307, 957, 293, 300, 561, 51298, 51298, 486, 1689, 337, 309, 293, 291, 393, 5039, 264, 643, 11, 291, 393, 13145, 652, 309, 1570, 293, 1570, 295, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.13000877902039096, "compression_ratio": 1.8016194331983806, "no_speech_prob": 2.7264431992080063e-06}, {"id": 990, "seek": 552982, "start": 5548.5, "end": 5553.299999999999, "text": " will pay for it and you can solve the need, you can gradually make it less and less of", "tokens": [50364, 509, 458, 11, 754, 264, 857, 294, 264, 2808, 689, 291, 434, 411, 11, 1954, 11, 456, 311, 516, 281, 312, 257, 18161, 50484, 50484, 2533, 510, 13, 50548, 50548, 467, 311, 2489, 281, 411, 4025, 1553, 264, 18161, 2533, 293, 360, 1203, 538, 1011, 13, 50818, 50818, 509, 434, 445, 1382, 281, 915, 484, 366, 561, 516, 281, 1689, 337, 341, 293, 307, 341, 767, 50958, 50958, 4420, 30, 51038, 51038, 400, 550, 1564, 291, 362, 11, 291, 458, 11, 4696, 11341, 300, 264, 643, 307, 957, 293, 300, 561, 51298, 51298, 486, 1689, 337, 309, 293, 291, 393, 5039, 264, 643, 11, 291, 393, 13145, 652, 309, 1570, 293, 1570, 295, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.13000877902039096, "compression_ratio": 1.8016194331983806, "no_speech_prob": 2.7264431992080063e-06}, {"id": 991, "seek": 555330, "start": 5553.3, "end": 5564.02, "text": " a fake, you know, and do more and more getting the product to where you want it to be.", "tokens": [50364, 257, 7592, 11, 291, 458, 11, 293, 360, 544, 293, 544, 1242, 264, 1674, 281, 689, 291, 528, 309, 281, 312, 13, 50900, 50900, 1033, 13, 51146, 51146, 286, 500, 380, 458, 577, 281, 19567, 264, 1315, 13, 51326, 51326, 376, 12, 40, 12, 54, 12, 46, 12, 41, 12, 34, 13, 376, 12, 40, 12, 54, 12, 46, 12, 41, 12, 34, 1619, 11, 17809, 11, 393, 291, 2073, 512, 295, 428, 15604, 33617, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.25856481624554983, "compression_ratio": 1.4276315789473684, "no_speech_prob": 6.08356799602916e-07}, {"id": 992, "seek": 555330, "start": 5564.02, "end": 5568.9400000000005, "text": " Okay.", "tokens": [50364, 257, 7592, 11, 291, 458, 11, 293, 360, 544, 293, 544, 1242, 264, 1674, 281, 689, 291, 528, 309, 281, 312, 13, 50900, 50900, 1033, 13, 51146, 51146, 286, 500, 380, 458, 577, 281, 19567, 264, 1315, 13, 51326, 51326, 376, 12, 40, 12, 54, 12, 46, 12, 41, 12, 34, 13, 376, 12, 40, 12, 54, 12, 46, 12, 41, 12, 34, 1619, 11, 17809, 11, 393, 291, 2073, 512, 295, 428, 15604, 33617, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.25856481624554983, "compression_ratio": 1.4276315789473684, "no_speech_prob": 6.08356799602916e-07}, {"id": 993, "seek": 555330, "start": 5568.9400000000005, "end": 5572.54, "text": " I don't know how to pronounce the name.", "tokens": [50364, 257, 7592, 11, 291, 458, 11, 293, 360, 544, 293, 544, 1242, 264, 1674, 281, 689, 291, 528, 309, 281, 312, 13, 50900, 50900, 1033, 13, 51146, 51146, 286, 500, 380, 458, 577, 281, 19567, 264, 1315, 13, 51326, 51326, 376, 12, 40, 12, 54, 12, 46, 12, 41, 12, 34, 13, 376, 12, 40, 12, 54, 12, 46, 12, 41, 12, 34, 1619, 11, 17809, 11, 393, 291, 2073, 512, 295, 428, 15604, 33617, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.25856481624554983, "compression_ratio": 1.4276315789473684, "no_speech_prob": 6.08356799602916e-07}, {"id": 994, "seek": 555330, "start": 5572.54, "end": 5580.66, "text": " M-I-W-O-J-C. M-I-W-O-J-C says, Jeremy, can you share some of your productivity hacks", "tokens": [50364, 257, 7592, 11, 291, 458, 11, 293, 360, 544, 293, 544, 1242, 264, 1674, 281, 689, 291, 528, 309, 281, 312, 13, 50900, 50900, 1033, 13, 51146, 51146, 286, 500, 380, 458, 577, 281, 19567, 264, 1315, 13, 51326, 51326, 376, 12, 40, 12, 54, 12, 46, 12, 41, 12, 34, 13, 376, 12, 40, 12, 54, 12, 46, 12, 41, 12, 34, 1619, 11, 17809, 11, 393, 291, 2073, 512, 295, 428, 15604, 33617, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.25856481624554983, "compression_ratio": 1.4276315789473684, "no_speech_prob": 6.08356799602916e-07}, {"id": 995, "seek": 558066, "start": 5580.66, "end": 5585.38, "text": " from the content you produce that may see me work 24 hours a day?", "tokens": [50364, 490, 264, 2701, 291, 5258, 300, 815, 536, 385, 589, 4022, 2496, 257, 786, 30, 50600, 50600, 1033, 13, 50662, 50662, 286, 3297, 500, 380, 360, 300, 13, 50820, 50820, 286, 519, 472, 295, 452, 2135, 15604, 33617, 767, 307, 406, 281, 589, 886, 1152, 420, 412, 1935, 51090, 51090, 406, 281, 589, 886, 1152, 11, 406, 281, 589, 886, 709, 13, 51284, 51284, 286, 3496, 1391, 1570, 2496, 257, 786, 1364, 813, 881, 561, 11, 286, 576, 2041, 13, 51662, 51662, 583, 286, 519, 286, 360, 257, 1916, 295, 721, 7614, 562, 286, 478, 1364, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17519964085947168, "compression_ratio": 1.6742081447963801, "no_speech_prob": 6.048813247616636e-06}, {"id": 996, "seek": 558066, "start": 5585.38, "end": 5586.62, "text": " Okay.", "tokens": [50364, 490, 264, 2701, 291, 5258, 300, 815, 536, 385, 589, 4022, 2496, 257, 786, 30, 50600, 50600, 1033, 13, 50662, 50662, 286, 3297, 500, 380, 360, 300, 13, 50820, 50820, 286, 519, 472, 295, 452, 2135, 15604, 33617, 767, 307, 406, 281, 589, 886, 1152, 420, 412, 1935, 51090, 51090, 406, 281, 589, 886, 1152, 11, 406, 281, 589, 886, 709, 13, 51284, 51284, 286, 3496, 1391, 1570, 2496, 257, 786, 1364, 813, 881, 561, 11, 286, 576, 2041, 13, 51662, 51662, 583, 286, 519, 286, 360, 257, 1916, 295, 721, 7614, 562, 286, 478, 1364, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17519964085947168, "compression_ratio": 1.6742081447963801, "no_speech_prob": 6.048813247616636e-06}, {"id": 997, "seek": 558066, "start": 5586.62, "end": 5589.78, "text": " I certainly don't do that.", "tokens": [50364, 490, 264, 2701, 291, 5258, 300, 815, 536, 385, 589, 4022, 2496, 257, 786, 30, 50600, 50600, 1033, 13, 50662, 50662, 286, 3297, 500, 380, 360, 300, 13, 50820, 50820, 286, 519, 472, 295, 452, 2135, 15604, 33617, 767, 307, 406, 281, 589, 886, 1152, 420, 412, 1935, 51090, 51090, 406, 281, 589, 886, 1152, 11, 406, 281, 589, 886, 709, 13, 51284, 51284, 286, 3496, 1391, 1570, 2496, 257, 786, 1364, 813, 881, 561, 11, 286, 576, 2041, 13, 51662, 51662, 583, 286, 519, 286, 360, 257, 1916, 295, 721, 7614, 562, 286, 478, 1364, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17519964085947168, "compression_ratio": 1.6742081447963801, "no_speech_prob": 6.048813247616636e-06}, {"id": 998, "seek": 558066, "start": 5589.78, "end": 5595.18, "text": " I think one of my main productivity hacks actually is not to work too hard or at least", "tokens": [50364, 490, 264, 2701, 291, 5258, 300, 815, 536, 385, 589, 4022, 2496, 257, 786, 30, 50600, 50600, 1033, 13, 50662, 50662, 286, 3297, 500, 380, 360, 300, 13, 50820, 50820, 286, 519, 472, 295, 452, 2135, 15604, 33617, 767, 307, 406, 281, 589, 886, 1152, 420, 412, 1935, 51090, 51090, 406, 281, 589, 886, 1152, 11, 406, 281, 589, 886, 709, 13, 51284, 51284, 286, 3496, 1391, 1570, 2496, 257, 786, 1364, 813, 881, 561, 11, 286, 576, 2041, 13, 51662, 51662, 583, 286, 519, 286, 360, 257, 1916, 295, 721, 7614, 562, 286, 478, 1364, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17519964085947168, "compression_ratio": 1.6742081447963801, "no_speech_prob": 6.048813247616636e-06}, {"id": 999, "seek": 558066, "start": 5595.18, "end": 5599.0599999999995, "text": " not to work too hard, not to work too much.", "tokens": [50364, 490, 264, 2701, 291, 5258, 300, 815, 536, 385, 589, 4022, 2496, 257, 786, 30, 50600, 50600, 1033, 13, 50662, 50662, 286, 3297, 500, 380, 360, 300, 13, 50820, 50820, 286, 519, 472, 295, 452, 2135, 15604, 33617, 767, 307, 406, 281, 589, 886, 1152, 420, 412, 1935, 51090, 51090, 406, 281, 589, 886, 1152, 11, 406, 281, 589, 886, 709, 13, 51284, 51284, 286, 3496, 1391, 1570, 2496, 257, 786, 1364, 813, 881, 561, 11, 286, 576, 2041, 13, 51662, 51662, 583, 286, 519, 286, 360, 257, 1916, 295, 721, 7614, 562, 286, 478, 1364, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17519964085947168, "compression_ratio": 1.6742081447963801, "no_speech_prob": 6.048813247616636e-06}, {"id": 1000, "seek": 558066, "start": 5599.0599999999995, "end": 5606.62, "text": " I spend probably less hours a day working than most people, I would guess.", "tokens": [50364, 490, 264, 2701, 291, 5258, 300, 815, 536, 385, 589, 4022, 2496, 257, 786, 30, 50600, 50600, 1033, 13, 50662, 50662, 286, 3297, 500, 380, 360, 300, 13, 50820, 50820, 286, 519, 472, 295, 452, 2135, 15604, 33617, 767, 307, 406, 281, 589, 886, 1152, 420, 412, 1935, 51090, 51090, 406, 281, 589, 886, 1152, 11, 406, 281, 589, 886, 709, 13, 51284, 51284, 286, 3496, 1391, 1570, 2496, 257, 786, 1364, 813, 881, 561, 11, 286, 576, 2041, 13, 51662, 51662, 583, 286, 519, 286, 360, 257, 1916, 295, 721, 7614, 562, 286, 478, 1364, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17519964085947168, "compression_ratio": 1.6742081447963801, "no_speech_prob": 6.048813247616636e-06}, {"id": 1001, "seek": 558066, "start": 5606.62, "end": 5610.62, "text": " But I think I do a couple of things differently when I'm working.", "tokens": [50364, 490, 264, 2701, 291, 5258, 300, 815, 536, 385, 589, 4022, 2496, 257, 786, 30, 50600, 50600, 1033, 13, 50662, 50662, 286, 3297, 500, 380, 360, 300, 13, 50820, 50820, 286, 519, 472, 295, 452, 2135, 15604, 33617, 767, 307, 406, 281, 589, 886, 1152, 420, 412, 1935, 51090, 51090, 406, 281, 589, 886, 1152, 11, 406, 281, 589, 886, 709, 13, 51284, 51284, 286, 3496, 1391, 1570, 2496, 257, 786, 1364, 813, 881, 561, 11, 286, 576, 2041, 13, 51662, 51662, 583, 286, 519, 286, 360, 257, 1916, 295, 721, 7614, 562, 286, 478, 1364, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17519964085947168, "compression_ratio": 1.6742081447963801, "no_speech_prob": 6.048813247616636e-06}, {"id": 1002, "seek": 561062, "start": 5610.62, "end": 5618.82, "text": " One is I've spent half, at least half, of every working day since I was about 18 learning", "tokens": [50364, 1485, 307, 286, 600, 4418, 1922, 11, 412, 1935, 1922, 11, 295, 633, 1364, 786, 1670, 286, 390, 466, 2443, 2539, 50774, 50774, 420, 11350, 746, 777, 13, 50878, 50878, 467, 727, 312, 257, 777, 2856, 11, 309, 727, 312, 257, 777, 9284, 11, 309, 727, 312, 746, 286, 1401, 51134, 51134, 466, 13, 51266, 51266, 400, 6217, 439, 295, 300, 565, 11, 4412, 11, 286, 600, 668, 884, 300, 551, 544, 5692, 813, 286, 576, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.15075082778930665, "compression_ratio": 1.6031746031746033, "no_speech_prob": 2.4439505068585277e-06}, {"id": 1003, "seek": 561062, "start": 5618.82, "end": 5620.9, "text": " or practicing something new.", "tokens": [50364, 1485, 307, 286, 600, 4418, 1922, 11, 412, 1935, 1922, 11, 295, 633, 1364, 786, 1670, 286, 390, 466, 2443, 2539, 50774, 50774, 420, 11350, 746, 777, 13, 50878, 50878, 467, 727, 312, 257, 777, 2856, 11, 309, 727, 312, 257, 777, 9284, 11, 309, 727, 312, 746, 286, 1401, 51134, 51134, 466, 13, 51266, 51266, 400, 6217, 439, 295, 300, 565, 11, 4412, 11, 286, 600, 668, 884, 300, 551, 544, 5692, 813, 286, 576, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.15075082778930665, "compression_ratio": 1.6031746031746033, "no_speech_prob": 2.4439505068585277e-06}, {"id": 1004, "seek": 561062, "start": 5620.9, "end": 5626.0199999999995, "text": " It could be a new language, it could be a new algorithm, it could be something I read", "tokens": [50364, 1485, 307, 286, 600, 4418, 1922, 11, 412, 1935, 1922, 11, 295, 633, 1364, 786, 1670, 286, 390, 466, 2443, 2539, 50774, 50774, 420, 11350, 746, 777, 13, 50878, 50878, 467, 727, 312, 257, 777, 2856, 11, 309, 727, 312, 257, 777, 9284, 11, 309, 727, 312, 746, 286, 1401, 51134, 51134, 466, 13, 51266, 51266, 400, 6217, 439, 295, 300, 565, 11, 4412, 11, 286, 600, 668, 884, 300, 551, 544, 5692, 813, 286, 576, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.15075082778930665, "compression_ratio": 1.6031746031746033, "no_speech_prob": 2.4439505068585277e-06}, {"id": 1005, "seek": 561062, "start": 5626.0199999999995, "end": 5628.66, "text": " about.", "tokens": [50364, 1485, 307, 286, 600, 4418, 1922, 11, 412, 1935, 1922, 11, 295, 633, 1364, 786, 1670, 286, 390, 466, 2443, 2539, 50774, 50774, 420, 11350, 746, 777, 13, 50878, 50878, 467, 727, 312, 257, 777, 2856, 11, 309, 727, 312, 257, 777, 9284, 11, 309, 727, 312, 746, 286, 1401, 51134, 51134, 466, 13, 51266, 51266, 400, 6217, 439, 295, 300, 565, 11, 4412, 11, 286, 600, 668, 884, 300, 551, 544, 5692, 813, 286, 576, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.15075082778930665, "compression_ratio": 1.6031746031746033, "no_speech_prob": 2.4439505068585277e-06}, {"id": 1006, "seek": 561062, "start": 5628.66, "end": 5636.62, "text": " And nearly all of that time, therefore, I've been doing that thing more slowly than I would", "tokens": [50364, 1485, 307, 286, 600, 4418, 1922, 11, 412, 1935, 1922, 11, 295, 633, 1364, 786, 1670, 286, 390, 466, 2443, 2539, 50774, 50774, 420, 11350, 746, 777, 13, 50878, 50878, 467, 727, 312, 257, 777, 2856, 11, 309, 727, 312, 257, 777, 9284, 11, 309, 727, 312, 746, 286, 1401, 51134, 51134, 466, 13, 51266, 51266, 400, 6217, 439, 295, 300, 565, 11, 4412, 11, 286, 600, 668, 884, 300, 551, 544, 5692, 813, 286, 576, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.15075082778930665, "compression_ratio": 1.6031746031746033, "no_speech_prob": 2.4439505068585277e-06}, {"id": 1007, "seek": 563662, "start": 5636.62, "end": 5645.099999999999, "text": " if I just used something I already knew, which often drives my coworkers crazy because they're", "tokens": [50364, 498, 286, 445, 1143, 746, 286, 1217, 2586, 11, 597, 2049, 11754, 452, 43465, 3219, 570, 436, 434, 50788, 50788, 411, 11, 983, 3212, 380, 291, 8416, 322, 1242, 300, 551, 1096, 30, 50972, 50972, 583, 294, 264, 661, 2625, 4, 295, 264, 565, 11, 286, 478, 6460, 2390, 493, 341, 37330, 11470, 3096, 51440, 51440, 295, 11769, 294, 257, 4874, 3613, 295, 3179, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.13051109037537506, "compression_ratio": 1.4371859296482412, "no_speech_prob": 2.2252463622862706e-06}, {"id": 1008, "seek": 563662, "start": 5645.099999999999, "end": 5648.78, "text": " like, why aren't you focusing on getting that thing done?", "tokens": [50364, 498, 286, 445, 1143, 746, 286, 1217, 2586, 11, 597, 2049, 11754, 452, 43465, 3219, 570, 436, 434, 50788, 50788, 411, 11, 983, 3212, 380, 291, 8416, 322, 1242, 300, 551, 1096, 30, 50972, 50972, 583, 294, 264, 661, 2625, 4, 295, 264, 565, 11, 286, 478, 6460, 2390, 493, 341, 37330, 11470, 3096, 51440, 51440, 295, 11769, 294, 257, 4874, 3613, 295, 3179, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.13051109037537506, "compression_ratio": 1.4371859296482412, "no_speech_prob": 2.2252463622862706e-06}, {"id": 1009, "seek": 563662, "start": 5648.78, "end": 5658.14, "text": " But in the other 50% of the time, I'm constantly building up this exponentially improving base", "tokens": [50364, 498, 286, 445, 1143, 746, 286, 1217, 2586, 11, 597, 2049, 11754, 452, 43465, 3219, 570, 436, 434, 50788, 50788, 411, 11, 983, 3212, 380, 291, 8416, 322, 1242, 300, 551, 1096, 30, 50972, 50972, 583, 294, 264, 661, 2625, 4, 295, 264, 565, 11, 286, 478, 6460, 2390, 493, 341, 37330, 11470, 3096, 51440, 51440, 295, 11769, 294, 257, 4874, 3613, 295, 3179, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.13051109037537506, "compression_ratio": 1.4371859296482412, "no_speech_prob": 2.2252463622862706e-06}, {"id": 1010, "seek": 563662, "start": 5658.14, "end": 5661.7, "text": " of expertise in a wide range of areas.", "tokens": [50364, 498, 286, 445, 1143, 746, 286, 1217, 2586, 11, 597, 2049, 11754, 452, 43465, 3219, 570, 436, 434, 50788, 50788, 411, 11, 983, 3212, 380, 291, 8416, 322, 1242, 300, 551, 1096, 30, 50972, 50972, 583, 294, 264, 661, 2625, 4, 295, 264, 565, 11, 286, 478, 6460, 2390, 493, 341, 37330, 11470, 3096, 51440, 51440, 295, 11769, 294, 257, 4874, 3613, 295, 3179, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.13051109037537506, "compression_ratio": 1.4371859296482412, "no_speech_prob": 2.2252463622862706e-06}, {"id": 1011, "seek": 566170, "start": 5661.7, "end": 5671.0599999999995, "text": " And so now I do find I can do things often orders of magnitude faster than people around", "tokens": [50364, 400, 370, 586, 286, 360, 915, 286, 393, 360, 721, 2049, 9470, 295, 15668, 4663, 813, 561, 926, 50832, 50832, 385, 420, 3297, 867, 46099, 4663, 813, 561, 926, 385, 570, 286, 458, 257, 1379, 3840, 51088, 51088, 295, 3873, 293, 3942, 293, 3487, 597, 661, 561, 500, 380, 4725, 458, 13, 51474, 51474, 286, 519, 300, 311, 472, 551, 300, 311, 668, 4961, 13, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.14049062867095505, "compression_ratio": 1.6629213483146068, "no_speech_prob": 7.183007255662233e-06}, {"id": 1012, "seek": 566170, "start": 5671.0599999999995, "end": 5676.179999999999, "text": " me or certainly many multiples faster than people around me because I know a whole bunch", "tokens": [50364, 400, 370, 586, 286, 360, 915, 286, 393, 360, 721, 2049, 9470, 295, 15668, 4663, 813, 561, 926, 50832, 50832, 385, 420, 3297, 867, 46099, 4663, 813, 561, 926, 385, 570, 286, 458, 257, 1379, 3840, 51088, 51088, 295, 3873, 293, 3942, 293, 3487, 597, 661, 561, 500, 380, 4725, 458, 13, 51474, 51474, 286, 519, 300, 311, 472, 551, 300, 311, 668, 4961, 13, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.14049062867095505, "compression_ratio": 1.6629213483146068, "no_speech_prob": 7.183007255662233e-06}, {"id": 1013, "seek": 566170, "start": 5676.179999999999, "end": 5683.9, "text": " of tools and skills and ideas which other people don't necessarily know.", "tokens": [50364, 400, 370, 586, 286, 360, 915, 286, 393, 360, 721, 2049, 9470, 295, 15668, 4663, 813, 561, 926, 50832, 50832, 385, 420, 3297, 867, 46099, 4663, 813, 561, 926, 385, 570, 286, 458, 257, 1379, 3840, 51088, 51088, 295, 3873, 293, 3942, 293, 3487, 597, 661, 561, 500, 380, 4725, 458, 13, 51474, 51474, 286, 519, 300, 311, 472, 551, 300, 311, 668, 4961, 13, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.14049062867095505, "compression_ratio": 1.6629213483146068, "no_speech_prob": 7.183007255662233e-06}, {"id": 1014, "seek": 566170, "start": 5683.9, "end": 5685.66, "text": " I think that's one thing that's been helpful.", "tokens": [50364, 400, 370, 586, 286, 360, 915, 286, 393, 360, 721, 2049, 9470, 295, 15668, 4663, 813, 561, 926, 50832, 50832, 385, 420, 3297, 867, 46099, 4663, 813, 561, 926, 385, 570, 286, 458, 257, 1379, 3840, 51088, 51088, 295, 3873, 293, 3942, 293, 3487, 597, 661, 561, 500, 380, 4725, 458, 13, 51474, 51474, 286, 519, 300, 311, 472, 551, 300, 311, 668, 4961, 13, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.14049062867095505, "compression_ratio": 1.6629213483146068, "no_speech_prob": 7.183007255662233e-06}, {"id": 1015, "seek": 568566, "start": 5685.66, "end": 5691.82, "text": " And then another is, yeah, like trying to really not overdo things, like get good sleep", "tokens": [50364, 400, 550, 1071, 307, 11, 1338, 11, 411, 1382, 281, 534, 406, 670, 2595, 721, 11, 411, 483, 665, 2817, 50672, 50672, 293, 1862, 731, 293, 5380, 731, 13, 50998, 50998, 400, 611, 286, 519, 309, 311, 257, 1389, 295, 2064, 19008, 13, 51224, 51224, 286, 600, 5694, 257, 688, 295, 561, 976, 493, 709, 3071, 813, 286, 360, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.1572405844926834, "compression_ratio": 1.4322580645161291, "no_speech_prob": 1.7880429368233308e-06}, {"id": 1016, "seek": 568566, "start": 5691.82, "end": 5698.34, "text": " and eat well and exercise well.", "tokens": [50364, 400, 550, 1071, 307, 11, 1338, 11, 411, 1382, 281, 534, 406, 670, 2595, 721, 11, 411, 483, 665, 2817, 50672, 50672, 293, 1862, 731, 293, 5380, 731, 13, 50998, 50998, 400, 611, 286, 519, 309, 311, 257, 1389, 295, 2064, 19008, 13, 51224, 51224, 286, 600, 5694, 257, 688, 295, 561, 976, 493, 709, 3071, 813, 286, 360, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.1572405844926834, "compression_ratio": 1.4322580645161291, "no_speech_prob": 1.7880429368233308e-06}, {"id": 1017, "seek": 568566, "start": 5698.34, "end": 5702.86, "text": " And also I think it's a case of tenacity.", "tokens": [50364, 400, 550, 1071, 307, 11, 1338, 11, 411, 1382, 281, 534, 406, 670, 2595, 721, 11, 411, 483, 665, 2817, 50672, 50672, 293, 1862, 731, 293, 5380, 731, 13, 50998, 50998, 400, 611, 286, 519, 309, 311, 257, 1389, 295, 2064, 19008, 13, 51224, 51224, 286, 600, 5694, 257, 688, 295, 561, 976, 493, 709, 3071, 813, 286, 360, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.1572405844926834, "compression_ratio": 1.4322580645161291, "no_speech_prob": 1.7880429368233308e-06}, {"id": 1018, "seek": 568566, "start": 5702.86, "end": 5709.22, "text": " I've noticed a lot of people give up much earlier than I do.", "tokens": [50364, 400, 550, 1071, 307, 11, 1338, 11, 411, 1382, 281, 534, 406, 670, 2595, 721, 11, 411, 483, 665, 2817, 50672, 50672, 293, 1862, 731, 293, 5380, 731, 13, 50998, 50998, 400, 611, 286, 519, 309, 311, 257, 1389, 295, 2064, 19008, 13, 51224, 51224, 286, 600, 5694, 257, 688, 295, 561, 976, 493, 709, 3071, 813, 286, 360, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.1572405844926834, "compression_ratio": 1.4322580645161291, "no_speech_prob": 1.7880429368233308e-06}, {"id": 1019, "seek": 570922, "start": 5709.22, "end": 5719.58, "text": " So yeah, if you just keep going until something's actually finished, then that's going to put", "tokens": [50364, 407, 1338, 11, 498, 291, 445, 1066, 516, 1826, 746, 311, 767, 4335, 11, 550, 300, 311, 516, 281, 829, 50882, 50882, 291, 294, 257, 1359, 16166, 11, 281, 312, 3245, 13, 51012, 51012, 4534, 561, 500, 380, 360, 300, 13, 51078, 51078, 1133, 286, 584, 4335, 11, 411, 2413, 746, 534, 9594, 13, 51294, 51294, 400, 286, 853, 281, 652, 309, 411, 11, 370, 286, 4098, 411, 17720, 11, 293, 370, 286, 853, 281, 360, 257, 688, 295, 17720, 51510, 51510, 4077, 1507, 13, 51574, 51574, 407, 286, 1884, 721, 411, 426, 33, 40343, 11, 293, 426, 33, 40343, 1669, 309, 709, 11, 709, 3571, 337, 385, 281, 2413, 746, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1315813562144404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 1.6797171156213153e-06}, {"id": 1020, "seek": 570922, "start": 5719.58, "end": 5722.18, "text": " you in a small minority, to be honest.", "tokens": [50364, 407, 1338, 11, 498, 291, 445, 1066, 516, 1826, 746, 311, 767, 4335, 11, 550, 300, 311, 516, 281, 829, 50882, 50882, 291, 294, 257, 1359, 16166, 11, 281, 312, 3245, 13, 51012, 51012, 4534, 561, 500, 380, 360, 300, 13, 51078, 51078, 1133, 286, 584, 4335, 11, 411, 2413, 746, 534, 9594, 13, 51294, 51294, 400, 286, 853, 281, 652, 309, 411, 11, 370, 286, 4098, 411, 17720, 11, 293, 370, 286, 853, 281, 360, 257, 688, 295, 17720, 51510, 51510, 4077, 1507, 13, 51574, 51574, 407, 286, 1884, 721, 411, 426, 33, 40343, 11, 293, 426, 33, 40343, 1669, 309, 709, 11, 709, 3571, 337, 385, 281, 2413, 746, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1315813562144404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 1.6797171156213153e-06}, {"id": 1021, "seek": 570922, "start": 5722.18, "end": 5723.5, "text": " Most people don't do that.", "tokens": [50364, 407, 1338, 11, 498, 291, 445, 1066, 516, 1826, 746, 311, 767, 4335, 11, 550, 300, 311, 516, 281, 829, 50882, 50882, 291, 294, 257, 1359, 16166, 11, 281, 312, 3245, 13, 51012, 51012, 4534, 561, 500, 380, 360, 300, 13, 51078, 51078, 1133, 286, 584, 4335, 11, 411, 2413, 746, 534, 9594, 13, 51294, 51294, 400, 286, 853, 281, 652, 309, 411, 11, 370, 286, 4098, 411, 17720, 11, 293, 370, 286, 853, 281, 360, 257, 688, 295, 17720, 51510, 51510, 4077, 1507, 13, 51574, 51574, 407, 286, 1884, 721, 411, 426, 33, 40343, 11, 293, 426, 33, 40343, 1669, 309, 709, 11, 709, 3571, 337, 385, 281, 2413, 746, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1315813562144404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 1.6797171156213153e-06}, {"id": 1022, "seek": 570922, "start": 5723.5, "end": 5727.820000000001, "text": " When I say finished, like finish something really nicely.", "tokens": [50364, 407, 1338, 11, 498, 291, 445, 1066, 516, 1826, 746, 311, 767, 4335, 11, 550, 300, 311, 516, 281, 829, 50882, 50882, 291, 294, 257, 1359, 16166, 11, 281, 312, 3245, 13, 51012, 51012, 4534, 561, 500, 380, 360, 300, 13, 51078, 51078, 1133, 286, 584, 4335, 11, 411, 2413, 746, 534, 9594, 13, 51294, 51294, 400, 286, 853, 281, 652, 309, 411, 11, 370, 286, 4098, 411, 17720, 11, 293, 370, 286, 853, 281, 360, 257, 688, 295, 17720, 51510, 51510, 4077, 1507, 13, 51574, 51574, 407, 286, 1884, 721, 411, 426, 33, 40343, 11, 293, 426, 33, 40343, 1669, 309, 709, 11, 709, 3571, 337, 385, 281, 2413, 746, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1315813562144404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 1.6797171156213153e-06}, {"id": 1023, "seek": 570922, "start": 5727.820000000001, "end": 5732.14, "text": " And I try to make it like, so I particularly like coding, and so I try to do a lot of coding", "tokens": [50364, 407, 1338, 11, 498, 291, 445, 1066, 516, 1826, 746, 311, 767, 4335, 11, 550, 300, 311, 516, 281, 829, 50882, 50882, 291, 294, 257, 1359, 16166, 11, 281, 312, 3245, 13, 51012, 51012, 4534, 561, 500, 380, 360, 300, 13, 51078, 51078, 1133, 286, 584, 4335, 11, 411, 2413, 746, 534, 9594, 13, 51294, 51294, 400, 286, 853, 281, 652, 309, 411, 11, 370, 286, 4098, 411, 17720, 11, 293, 370, 286, 853, 281, 360, 257, 688, 295, 17720, 51510, 51510, 4077, 1507, 13, 51574, 51574, 407, 286, 1884, 721, 411, 426, 33, 40343, 11, 293, 426, 33, 40343, 1669, 309, 709, 11, 709, 3571, 337, 385, 281, 2413, 746, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1315813562144404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 1.6797171156213153e-06}, {"id": 1024, "seek": 570922, "start": 5732.14, "end": 5733.42, "text": " related stuff.", "tokens": [50364, 407, 1338, 11, 498, 291, 445, 1066, 516, 1826, 746, 311, 767, 4335, 11, 550, 300, 311, 516, 281, 829, 50882, 50882, 291, 294, 257, 1359, 16166, 11, 281, 312, 3245, 13, 51012, 51012, 4534, 561, 500, 380, 360, 300, 13, 51078, 51078, 1133, 286, 584, 4335, 11, 411, 2413, 746, 534, 9594, 13, 51294, 51294, 400, 286, 853, 281, 652, 309, 411, 11, 370, 286, 4098, 411, 17720, 11, 293, 370, 286, 853, 281, 360, 257, 688, 295, 17720, 51510, 51510, 4077, 1507, 13, 51574, 51574, 407, 286, 1884, 721, 411, 426, 33, 40343, 11, 293, 426, 33, 40343, 1669, 309, 709, 11, 709, 3571, 337, 385, 281, 2413, 746, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1315813562144404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 1.6797171156213153e-06}, {"id": 1025, "seek": 570922, "start": 5733.42, "end": 5739.18, "text": " So I create things like NBdev, and NBdev makes it much, much easier for me to finish something", "tokens": [50364, 407, 1338, 11, 498, 291, 445, 1066, 516, 1826, 746, 311, 767, 4335, 11, 550, 300, 311, 516, 281, 829, 50882, 50882, 291, 294, 257, 1359, 16166, 11, 281, 312, 3245, 13, 51012, 51012, 4534, 561, 500, 380, 360, 300, 13, 51078, 51078, 1133, 286, 584, 4335, 11, 411, 2413, 746, 534, 9594, 13, 51294, 51294, 400, 286, 853, 281, 652, 309, 411, 11, 370, 286, 4098, 411, 17720, 11, 293, 370, 286, 853, 281, 360, 257, 688, 295, 17720, 51510, 51510, 4077, 1507, 13, 51574, 51574, 407, 286, 1884, 721, 411, 426, 33, 40343, 11, 293, 426, 33, 40343, 1669, 309, 709, 11, 709, 3571, 337, 385, 281, 2413, 746, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1315813562144404, "compression_ratio": 1.7142857142857142, "no_speech_prob": 1.6797171156213153e-06}, {"id": 1026, "seek": 573918, "start": 5739.18, "end": 5742.5, "text": " nicely, you know.", "tokens": [50364, 9594, 11, 291, 458, 13, 50530, 50530, 407, 294, 452, 733, 295, 8614, 1859, 11, 286, 600, 4418, 1596, 257, 857, 295, 565, 1382, 281, 652, 988, 309, 311, 534, 50762, 50762, 1858, 337, 385, 281, 411, 483, 484, 257, 6968, 2183, 11, 483, 484, 257, 15329, 6405, 11, 483, 484, 257, 21060, 5215, 11, 51102, 51102, 2035, 13, 51168, 51168, 407, 1338, 11, 1382, 281, 652, 613, 721, 286, 528, 281, 360, 3571, 11, 293, 370, 550, 286, 603, 360, 552, 544, 13, 51658, 51658, 407, 731, 11, 1309, 291, 2201, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.14835901358692916, "compression_ratio": 1.5952380952380953, "no_speech_prob": 4.157321200182196e-06}, {"id": 1027, "seek": 573918, "start": 5742.5, "end": 5747.14, "text": " So in my kind of chosen area, I've spent quite a bit of time trying to make sure it's really", "tokens": [50364, 9594, 11, 291, 458, 13, 50530, 50530, 407, 294, 452, 733, 295, 8614, 1859, 11, 286, 600, 4418, 1596, 257, 857, 295, 565, 1382, 281, 652, 988, 309, 311, 534, 50762, 50762, 1858, 337, 385, 281, 411, 483, 484, 257, 6968, 2183, 11, 483, 484, 257, 15329, 6405, 11, 483, 484, 257, 21060, 5215, 11, 51102, 51102, 2035, 13, 51168, 51168, 407, 1338, 11, 1382, 281, 652, 613, 721, 286, 528, 281, 360, 3571, 11, 293, 370, 550, 286, 603, 360, 552, 544, 13, 51658, 51658, 407, 731, 11, 1309, 291, 2201, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.14835901358692916, "compression_ratio": 1.5952380952380953, "no_speech_prob": 4.157321200182196e-06}, {"id": 1028, "seek": 573918, "start": 5747.14, "end": 5753.9400000000005, "text": " easy for me to like get out a blog post, get out a Python library, get out a notebook analysis,", "tokens": [50364, 9594, 11, 291, 458, 13, 50530, 50530, 407, 294, 452, 733, 295, 8614, 1859, 11, 286, 600, 4418, 1596, 257, 857, 295, 565, 1382, 281, 652, 988, 309, 311, 534, 50762, 50762, 1858, 337, 385, 281, 411, 483, 484, 257, 6968, 2183, 11, 483, 484, 257, 15329, 6405, 11, 483, 484, 257, 21060, 5215, 11, 51102, 51102, 2035, 13, 51168, 51168, 407, 1338, 11, 1382, 281, 652, 613, 721, 286, 528, 281, 360, 3571, 11, 293, 370, 550, 286, 603, 360, 552, 544, 13, 51658, 51658, 407, 731, 11, 1309, 291, 2201, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.14835901358692916, "compression_ratio": 1.5952380952380953, "no_speech_prob": 4.157321200182196e-06}, {"id": 1029, "seek": 573918, "start": 5753.9400000000005, "end": 5755.26, "text": " whatever.", "tokens": [50364, 9594, 11, 291, 458, 13, 50530, 50530, 407, 294, 452, 733, 295, 8614, 1859, 11, 286, 600, 4418, 1596, 257, 857, 295, 565, 1382, 281, 652, 988, 309, 311, 534, 50762, 50762, 1858, 337, 385, 281, 411, 483, 484, 257, 6968, 2183, 11, 483, 484, 257, 15329, 6405, 11, 483, 484, 257, 21060, 5215, 11, 51102, 51102, 2035, 13, 51168, 51168, 407, 1338, 11, 1382, 281, 652, 613, 721, 286, 528, 281, 360, 3571, 11, 293, 370, 550, 286, 603, 360, 552, 544, 13, 51658, 51658, 407, 731, 11, 1309, 291, 2201, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.14835901358692916, "compression_ratio": 1.5952380952380953, "no_speech_prob": 4.157321200182196e-06}, {"id": 1030, "seek": 573918, "start": 5755.26, "end": 5765.06, "text": " So yeah, trying to make these things I want to do easier, and so then I'll do them more.", "tokens": [50364, 9594, 11, 291, 458, 13, 50530, 50530, 407, 294, 452, 733, 295, 8614, 1859, 11, 286, 600, 4418, 1596, 257, 857, 295, 565, 1382, 281, 652, 988, 309, 311, 534, 50762, 50762, 1858, 337, 385, 281, 411, 483, 484, 257, 6968, 2183, 11, 483, 484, 257, 15329, 6405, 11, 483, 484, 257, 21060, 5215, 11, 51102, 51102, 2035, 13, 51168, 51168, 407, 1338, 11, 1382, 281, 652, 613, 721, 286, 528, 281, 360, 3571, 11, 293, 370, 550, 286, 603, 360, 552, 544, 13, 51658, 51658, 407, 731, 11, 1309, 291, 2201, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.14835901358692916, "compression_ratio": 1.5952380952380953, "no_speech_prob": 4.157321200182196e-06}, {"id": 1031, "seek": 573918, "start": 5765.06, "end": 5768.9800000000005, "text": " So well, thank you everybody.", "tokens": [50364, 9594, 11, 291, 458, 13, 50530, 50530, 407, 294, 452, 733, 295, 8614, 1859, 11, 286, 600, 4418, 1596, 257, 857, 295, 565, 1382, 281, 652, 988, 309, 311, 534, 50762, 50762, 1858, 337, 385, 281, 411, 483, 484, 257, 6968, 2183, 11, 483, 484, 257, 15329, 6405, 11, 483, 484, 257, 21060, 5215, 11, 51102, 51102, 2035, 13, 51168, 51168, 407, 1338, 11, 1382, 281, 652, 613, 721, 286, 528, 281, 360, 3571, 11, 293, 370, 550, 286, 603, 360, 552, 544, 13, 51658, 51658, 407, 731, 11, 1309, 291, 2201, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.14835901358692916, "compression_ratio": 1.5952380952380953, "no_speech_prob": 4.157321200182196e-06}, {"id": 1032, "seek": 576898, "start": 5768.98, "end": 5771.7, "text": " It's been a lot of fun.", "tokens": [50364, 467, 311, 668, 257, 688, 295, 1019, 13, 50500, 50500, 4083, 4449, 291, 1940, 264, 565, 281, 352, 807, 341, 1164, 365, 385, 13, 50698, 50698, 865, 11, 498, 291, 4626, 309, 11, 309, 576, 534, 854, 498, 291, 576, 976, 257, 411, 322, 3088, 11, 570, 51058, 51058, 309, 534, 3665, 661, 561, 915, 264, 1164, 11, 1709, 666, 264, 3088, 11879, 1185, 13, 51312, 51312, 400, 1767, 360, 808, 293, 854, 661, 26992, 322, 26998, 13, 7011, 13, 1301, 13, 51601, 51601, 467, 311, 257, 869, 636, 281, 1466, 1803, 11, 307, 281, 853, 281, 2924, 661, 561, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.11406731378464471, "compression_ratio": 1.626984126984127, "no_speech_prob": 2.4299011784023605e-05}, {"id": 1033, "seek": 576898, "start": 5771.7, "end": 5775.66, "text": " Really appreciate you taking the time to go through this course with me.", "tokens": [50364, 467, 311, 668, 257, 688, 295, 1019, 13, 50500, 50500, 4083, 4449, 291, 1940, 264, 565, 281, 352, 807, 341, 1164, 365, 385, 13, 50698, 50698, 865, 11, 498, 291, 4626, 309, 11, 309, 576, 534, 854, 498, 291, 576, 976, 257, 411, 322, 3088, 11, 570, 51058, 51058, 309, 534, 3665, 661, 561, 915, 264, 1164, 11, 1709, 666, 264, 3088, 11879, 1185, 13, 51312, 51312, 400, 1767, 360, 808, 293, 854, 661, 26992, 322, 26998, 13, 7011, 13, 1301, 13, 51601, 51601, 467, 311, 257, 869, 636, 281, 1466, 1803, 11, 307, 281, 853, 281, 2924, 661, 561, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.11406731378464471, "compression_ratio": 1.626984126984127, "no_speech_prob": 2.4299011784023605e-05}, {"id": 1034, "seek": 576898, "start": 5775.66, "end": 5782.86, "text": " Yeah, if you enjoyed it, it would really help if you would give a like on YouTube, because", "tokens": [50364, 467, 311, 668, 257, 688, 295, 1019, 13, 50500, 50500, 4083, 4449, 291, 1940, 264, 565, 281, 352, 807, 341, 1164, 365, 385, 13, 50698, 50698, 865, 11, 498, 291, 4626, 309, 11, 309, 576, 534, 854, 498, 291, 576, 976, 257, 411, 322, 3088, 11, 570, 51058, 51058, 309, 534, 3665, 661, 561, 915, 264, 1164, 11, 1709, 666, 264, 3088, 11879, 1185, 13, 51312, 51312, 400, 1767, 360, 808, 293, 854, 661, 26992, 322, 26998, 13, 7011, 13, 1301, 13, 51601, 51601, 467, 311, 257, 869, 636, 281, 1466, 1803, 11, 307, 281, 853, 281, 2924, 661, 561, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.11406731378464471, "compression_ratio": 1.626984126984127, "no_speech_prob": 2.4299011784023605e-05}, {"id": 1035, "seek": 576898, "start": 5782.86, "end": 5787.94, "text": " it really helps other people find the course, goes into the YouTube recommendation system.", "tokens": [50364, 467, 311, 668, 257, 688, 295, 1019, 13, 50500, 50500, 4083, 4449, 291, 1940, 264, 565, 281, 352, 807, 341, 1164, 365, 385, 13, 50698, 50698, 865, 11, 498, 291, 4626, 309, 11, 309, 576, 534, 854, 498, 291, 576, 976, 257, 411, 322, 3088, 11, 570, 51058, 51058, 309, 534, 3665, 661, 561, 915, 264, 1164, 11, 1709, 666, 264, 3088, 11879, 1185, 13, 51312, 51312, 400, 1767, 360, 808, 293, 854, 661, 26992, 322, 26998, 13, 7011, 13, 1301, 13, 51601, 51601, 467, 311, 257, 869, 636, 281, 1466, 1803, 11, 307, 281, 853, 281, 2924, 661, 561, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.11406731378464471, "compression_ratio": 1.626984126984127, "no_speech_prob": 2.4299011784023605e-05}, {"id": 1036, "seek": 576898, "start": 5787.94, "end": 5793.719999999999, "text": " And please do come and help other beginners on forums.fast.ai.", "tokens": [50364, 467, 311, 668, 257, 688, 295, 1019, 13, 50500, 50500, 4083, 4449, 291, 1940, 264, 565, 281, 352, 807, 341, 1164, 365, 385, 13, 50698, 50698, 865, 11, 498, 291, 4626, 309, 11, 309, 576, 534, 854, 498, 291, 576, 976, 257, 411, 322, 3088, 11, 570, 51058, 51058, 309, 534, 3665, 661, 561, 915, 264, 1164, 11, 1709, 666, 264, 3088, 11879, 1185, 13, 51312, 51312, 400, 1767, 360, 808, 293, 854, 661, 26992, 322, 26998, 13, 7011, 13, 1301, 13, 51601, 51601, 467, 311, 257, 869, 636, 281, 1466, 1803, 11, 307, 281, 853, 281, 2924, 661, 561, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.11406731378464471, "compression_ratio": 1.626984126984127, "no_speech_prob": 2.4299011784023605e-05}, {"id": 1037, "seek": 576898, "start": 5793.719999999999, "end": 5798.099999999999, "text": " It's a great way to learn yourself, is to try to teach other people.", "tokens": [50364, 467, 311, 668, 257, 688, 295, 1019, 13, 50500, 50500, 4083, 4449, 291, 1940, 264, 565, 281, 352, 807, 341, 1164, 365, 385, 13, 50698, 50698, 865, 11, 498, 291, 4626, 309, 11, 309, 576, 534, 854, 498, 291, 576, 976, 257, 411, 322, 3088, 11, 570, 51058, 51058, 309, 534, 3665, 661, 561, 915, 264, 1164, 11, 1709, 666, 264, 3088, 11879, 1185, 13, 51312, 51312, 400, 1767, 360, 808, 293, 854, 661, 26992, 322, 26998, 13, 7011, 13, 1301, 13, 51601, 51601, 467, 311, 257, 869, 636, 281, 1466, 1803, 11, 307, 281, 853, 281, 2924, 661, 561, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.11406731378464471, "compression_ratio": 1.626984126984127, "no_speech_prob": 2.4299011784023605e-05}, {"id": 1038, "seek": 579810, "start": 5798.1, "end": 5803.780000000001, "text": " And yeah, I hope you'll join us in part two.", "tokens": [50364, 400, 1338, 11, 286, 1454, 291, 603, 3917, 505, 294, 644, 732, 13, 50648, 50648, 2561, 2201, 588, 709, 13, 50752, 50752, 286, 600, 534, 4626, 341, 1399, 11, 293, 286, 1454, 281, 483, 281, 1677, 544, 295, 291, 294, 954, 294, 264, 51040, 51040, 2027, 13, 51090, 51090, 4621, 13, 51090], "temperature": 0.0, "avg_logprob": -0.20034874810112846, "compression_ratio": 1.3181818181818181, "no_speech_prob": 2.2116541003924794e-05}, {"id": 1039, "seek": 579810, "start": 5803.780000000001, "end": 5805.860000000001, "text": " Thanks everybody very much.", "tokens": [50364, 400, 1338, 11, 286, 1454, 291, 603, 3917, 505, 294, 644, 732, 13, 50648, 50648, 2561, 2201, 588, 709, 13, 50752, 50752, 286, 600, 534, 4626, 341, 1399, 11, 293, 286, 1454, 281, 483, 281, 1677, 544, 295, 291, 294, 954, 294, 264, 51040, 51040, 2027, 13, 51090, 51090, 4621, 13, 51090], "temperature": 0.0, "avg_logprob": -0.20034874810112846, "compression_ratio": 1.3181818181818181, "no_speech_prob": 2.2116541003924794e-05}, {"id": 1040, "seek": 579810, "start": 5805.860000000001, "end": 5811.620000000001, "text": " I've really enjoyed this process, and I hope to get to meet more of you in person in the", "tokens": [50364, 400, 1338, 11, 286, 1454, 291, 603, 3917, 505, 294, 644, 732, 13, 50648, 50648, 2561, 2201, 588, 709, 13, 50752, 50752, 286, 600, 534, 4626, 341, 1399, 11, 293, 286, 1454, 281, 483, 281, 1677, 544, 295, 291, 294, 954, 294, 264, 51040, 51040, 2027, 13, 51090, 51090, 4621, 13, 51090], "temperature": 0.0, "avg_logprob": -0.20034874810112846, "compression_ratio": 1.3181818181818181, "no_speech_prob": 2.2116541003924794e-05}, {"id": 1041, "seek": 579810, "start": 5811.620000000001, "end": 5812.620000000001, "text": " future.", "tokens": [50364, 400, 1338, 11, 286, 1454, 291, 603, 3917, 505, 294, 644, 732, 13, 50648, 50648, 2561, 2201, 588, 709, 13, 50752, 50752, 286, 600, 534, 4626, 341, 1399, 11, 293, 286, 1454, 281, 483, 281, 1677, 544, 295, 291, 294, 954, 294, 264, 51040, 51040, 2027, 13, 51090, 51090, 4621, 13, 51090], "temperature": 0.0, "avg_logprob": -0.20034874810112846, "compression_ratio": 1.3181818181818181, "no_speech_prob": 2.2116541003924794e-05}, {"id": 1042, "seek": 581262, "start": 5812.62, "end": 5828.26, "text": " Bye.", "tokens": [50364, 4621, 13, 51146], "temperature": 0.0, "avg_logprob": -0.9646523475646973, "compression_ratio": 0.3333333333333333, "no_speech_prob": 0.00010320221917936578}], "language": "en", "video_id": "htiNBPxcXgo", "entity": "FastAI"}}