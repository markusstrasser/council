{"video_id": "33VvmIZof0E", "title": "1.12 Machine Learning Overview | Cost function intuition --[Machine Learning | Andrew Ng]", "description": "First Course:\nSupervised Machine Learning : Regression and Classification.\n\nIf you liked the content please subscribe and put a little blue thumb.\nTake heart!", "author": "Machine Learning", "keywords": [], "channel_url": "https://www.youtube.com/channel/UClG5HEAJJFOavT_UolqYROQ", "length": 947, "views": 581, "publish_date": "11/04/2022", "timestamp": 1661817600, "entity": "ML Specialization, Andrew Ng (2022)", "transcript": {"text": " We've seen the mathematical definition of the cost function. Now let's build some intuition about what the cost function is really doing. In this video, we'll walk through one example to see how the cost function can be used to find the best parameters for your model. I know this video is a little bit longer than the others, but bear with me, I think it'll be worth it. To recap, here's what we've seen about the cost function so far. You want to fit a straight line to the training data, so you have this model fwb of x is w times x plus b. And here, the model's parameters are w and b. Now depending on the values chosen for these parameters, you get different straight lines like this. And you want to find values for w and b so that the straight line fits the training data well. To measure how well a choice of w and b fits the training data, you have a cost function j. And what the cost function j does is, it measures the difference between the model's predictions and the actual true values for y. What you see later is that linear regression would try to find values for w and b that make a j of w be as small as possible. In math, we write it like this. We want to minimize j as a function of w and b. So now, in order for us to better visualize the cost function j, let's work with a simplified version of the linear regression model. We're going to use the model fw of x is w times x. You can think of this as taking the original model on the left and getting rid of the parameter b or setting the parameter b equal to zero. So it just goes away from the equation. So f is now just w times x. So you now have just one parameter w and your cost function j looks similar to what it was before, taking the difference and squaring it, except that now f is equal to w times x i and j is now a function of just w. And the goal becomes a little bit different as well because you have just one parameter w, not w and b. So with this simplified model, the goal is to find a value for w that minimizes j of w. To see this visually, what this means is that if b is set to zero, then f defines a line that looks like this. And you see that the line passes through the origin here because when x is zero, well, f of x is zero too. Now using this simplified model, let's see how the cost function changes as you choose different values for the parameter w. In particular, let's look at graphs of the model f of x and the cost function j. I'm going to plot these side by side and you'll be able to see how the two are related. First notice that for f subscript w, when the parameter w is fixed, that is, is always a constant value, then f w is only a function of x, which means that the estimated value of y depends on the value of the input x. In contrast, looking to the right, the cost function j is a function of w, where w controls the slope of the line defined by f w, so the cost defined by j depends on a parameter, in this case, the parameter w. So let's go ahead and plot these functions f w of x and j of w side by side so you can see how they are related. We'll start to the model that is the function f w of x on the left. Here the input feature x is on the horizontal axis and the output value y is on the vertical axis. Here's a plot of three points representing the trading set at positions 1 1, 2 2, and 3 3. Let's pick a value for w, say w is 1. So for this choice of w, the function f w looks like this straight line with a slope of 1. Now what you can do next is calculate the cost j when w equals 1. So you may recall that the cost function is defined as follows, it's the squared error cost function. So if you substitute f w of x i with w times x i, the cost function looks like this, where this expression is now w times x i minus y i. So for this value of w, it turns out that the error term inside the cost function, this w times x i minus y i is equal to zero for each of the three data points. Notice for this data set, when x is 1, then y is 1. When w is also 1, then f of x equals 1. So f of x equals y for this first training example, and the difference is zero. Plugging this into the cost function j, you get zero squared. Similarly, when x is 2, then y is 2, and f of x is also 2. So again, f of x equals y for the second training example. In the cost function, the squared error for the second example is also zero squared. Finally, when x is 3, then y is 3, and f of 3 is also 3. In the cost function, the third squared error term is also zero squared. So for all three examples in this training set, f of x i equals y i for each training example i. So f of x i minus y i is zero. So for this particular data set, when w is 1, then the cost j is equal to zero. Now what you can do on the right is plot the cost function j. And notice that because the cost function is a function of the parameter w, the horizontal axis is now labeled w and not x. And the vertical axis is now j and not y. So you have j of 1 equals to zero. In other words, when w equals 1, j of w is zero. So let me go ahead and plot that. Now let's look at how f and j change for different values of w. w can take on a range of values, right? So w can take on negative values, w can be zero, and it can take on positive values too. So what if w is equal to 0.5 instead of 1? What would these graphs look like then? Let's go ahead and plot that. So let's set w to be equal to 0.5. And in this case, the function f of x now looks like this, is aligned with a slope equal to 0.5. And let's also compute the cost j when w is 0.5. Recall that the cost function is measuring the squared error or difference between the estimated value that is y hat i, which is f of x i, and the true value that is y i for each example i. So visually you can see that the error or difference is equal to the height of this vertical line here when x is equal to 1, because this little line is the gap between the actual value of y and the value that the function f predicted, which is a bit further down here. So for this first example, when x is 1, f of x is 0.5, so the squared error on the first example is 0.5 minus 1 squared. Remember the cost function will sum over all the training examples in the training set. So let's go on to the second training example. When x is 2, the model is predicting f of x is 1, and the actual value of y is 2. So the error for the second example is equal to the height of this little line segment here, and the squared error is the square of the length of this line segment, so you get 1 minus 2 squared. Let's do the third example. Repeating this process, the error here, also shown by this line segment, is 1.5 minus 3 squared. Next we sum up all of these terms, which turns out to be equal to 3.5. Then we multiply this term by 1 over 2m, where m is the number of training examples. Since there are three training examples, m equals 3, so this is equal to 1 over 2 times 3, where this m here is 3. If we work out the math, this turns out to be 3.5 divided by 6, so the cost j is about 0.58. Let's go ahead and plot that over there on the right. Now let's try one more value for w. How about if w equals 0? What do the graphs for f and j look like when w is equal to 0? It turns out that if w is equal to 0, then f of x is just this horizontal line that is exactly on the x-axis, and so the error for each example is a line that goes from each point down to the horizontal line that represents f of x equals 0. So the cost j when w equals 0 is 1 over 2m times the quantity 1 squared plus 2 squared plus 3 squared, and that's equal to 1 over 6 times 14, which is about 2.33. So let's plot this point where w is 0 and j of 0 is 2.33 over here. And you can keep doing this for other values of w. Since w can be any number, it can also be a negative value, so if w is negative 0.5, then the line f is a downward sloping line like this. It turns out that when w is negative 0.5, then you end up with an even higher cost around 5.25, which is this point up here. And you can continue computing the cost function for different values of w and so on and plot these, right? So it turns out that by computing a range of values, you can slowly trace out what the cost function j looks like. And that's what j is. To recap, each value of parameter w corresponds to a different straight line fit, f of x, on the graph to the left. And for the given training set, that choice for a value of w corresponds to a single point, a single point, on the graph on the right. Because for each value of w, you can calculate a cost j of w. For example, when w equals 1, this corresponds to this straight line fit through the data. And it also corresponds to this point on the graph of j, where w equals 1 and the cost j of 1 equals 0. Whereas when w equals 0.5, this gives you this line, which has a smaller slope. And this line, in combination with the training set, corresponds to this point on the cost function graph at w equals 0.5. So for each value of w, you wind up with a different line and its corresponding cost j of w. And you can use these points to trace out this plot on the right. Given this, how can you choose the value of w that results in the function f fitting the data well? Well, as you can imagine, choosing a value of w that causes j of w to be as small as possible seems like a good bet. J is the cost function that measures how big the squared errors are. So choosing w that minimizes these squared errors, makes them as small as possible, would give us a good model. In this example, if you were to choose the value of w that results in the smallest possible value of j of w, you'd end up picking w equals 1. And as you can see, that's actually a pretty good choice. This results in a line that fits the training data very well. So that's how in linear regression, you use the cost function to find the value of w that minimizes j. Or in the more general case, when we had parameters w and b rather than just w, you find the values of w and b that minimize j. So to summarize, you saw plots of both f and j and work through how the two are related. As you vary w or vary w and b, you end up with different straight lines. And when that straight line passes close to data, the cost j is small. So the goal of linear regression is to find the parameters w or w and b that results in the smallest possible value for the cost function j. Now in this video, we worked through our example with a simplified problem using only w. In the next video, let's visualize what the cost function looks like for the full version of linear regression using both w and b. And you see some cool 3D plots. Let's go to the next video.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 5.76, "text": " We've seen the mathematical definition of the cost function.", "tokens": [50364, 492, 600, 1612, 264, 18894, 7123, 295, 264, 2063, 2445, 13, 50652, 50652, 823, 718, 311, 1322, 512, 24002, 466, 437, 264, 2063, 2445, 307, 534, 884, 13, 50878, 50878, 682, 341, 960, 11, 321, 603, 1792, 807, 472, 1365, 281, 536, 577, 264, 2063, 2445, 393, 312, 1143, 281, 51108, 51108, 915, 264, 1151, 9834, 337, 428, 2316, 13, 51251, 51251, 286, 458, 341, 960, 307, 257, 707, 857, 2854, 813, 264, 2357, 11, 457, 6155, 365, 385, 11, 286, 519, 309, 603, 51434, 51434, 312, 3163, 309, 13, 51484, 51484, 1407, 20928, 11, 510, 311, 437, 321, 600, 1612, 466, 264, 2063, 2445, 370, 1400, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.12743124791554042, "compression_ratio": 1.751004016064257, "no_speech_prob": 0.005728445947170258}, {"id": 1, "seek": 0, "start": 5.76, "end": 10.28, "text": " Now let's build some intuition about what the cost function is really doing.", "tokens": [50364, 492, 600, 1612, 264, 18894, 7123, 295, 264, 2063, 2445, 13, 50652, 50652, 823, 718, 311, 1322, 512, 24002, 466, 437, 264, 2063, 2445, 307, 534, 884, 13, 50878, 50878, 682, 341, 960, 11, 321, 603, 1792, 807, 472, 1365, 281, 536, 577, 264, 2063, 2445, 393, 312, 1143, 281, 51108, 51108, 915, 264, 1151, 9834, 337, 428, 2316, 13, 51251, 51251, 286, 458, 341, 960, 307, 257, 707, 857, 2854, 813, 264, 2357, 11, 457, 6155, 365, 385, 11, 286, 519, 309, 603, 51434, 51434, 312, 3163, 309, 13, 51484, 51484, 1407, 20928, 11, 510, 311, 437, 321, 600, 1612, 466, 264, 2063, 2445, 370, 1400, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.12743124791554042, "compression_ratio": 1.751004016064257, "no_speech_prob": 0.005728445947170258}, {"id": 2, "seek": 0, "start": 10.28, "end": 14.88, "text": " In this video, we'll walk through one example to see how the cost function can be used to", "tokens": [50364, 492, 600, 1612, 264, 18894, 7123, 295, 264, 2063, 2445, 13, 50652, 50652, 823, 718, 311, 1322, 512, 24002, 466, 437, 264, 2063, 2445, 307, 534, 884, 13, 50878, 50878, 682, 341, 960, 11, 321, 603, 1792, 807, 472, 1365, 281, 536, 577, 264, 2063, 2445, 393, 312, 1143, 281, 51108, 51108, 915, 264, 1151, 9834, 337, 428, 2316, 13, 51251, 51251, 286, 458, 341, 960, 307, 257, 707, 857, 2854, 813, 264, 2357, 11, 457, 6155, 365, 385, 11, 286, 519, 309, 603, 51434, 51434, 312, 3163, 309, 13, 51484, 51484, 1407, 20928, 11, 510, 311, 437, 321, 600, 1612, 466, 264, 2063, 2445, 370, 1400, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.12743124791554042, "compression_ratio": 1.751004016064257, "no_speech_prob": 0.005728445947170258}, {"id": 3, "seek": 0, "start": 14.88, "end": 17.740000000000002, "text": " find the best parameters for your model.", "tokens": [50364, 492, 600, 1612, 264, 18894, 7123, 295, 264, 2063, 2445, 13, 50652, 50652, 823, 718, 311, 1322, 512, 24002, 466, 437, 264, 2063, 2445, 307, 534, 884, 13, 50878, 50878, 682, 341, 960, 11, 321, 603, 1792, 807, 472, 1365, 281, 536, 577, 264, 2063, 2445, 393, 312, 1143, 281, 51108, 51108, 915, 264, 1151, 9834, 337, 428, 2316, 13, 51251, 51251, 286, 458, 341, 960, 307, 257, 707, 857, 2854, 813, 264, 2357, 11, 457, 6155, 365, 385, 11, 286, 519, 309, 603, 51434, 51434, 312, 3163, 309, 13, 51484, 51484, 1407, 20928, 11, 510, 311, 437, 321, 600, 1612, 466, 264, 2063, 2445, 370, 1400, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.12743124791554042, "compression_ratio": 1.751004016064257, "no_speech_prob": 0.005728445947170258}, {"id": 4, "seek": 0, "start": 17.740000000000002, "end": 21.400000000000002, "text": " I know this video is a little bit longer than the others, but bear with me, I think it'll", "tokens": [50364, 492, 600, 1612, 264, 18894, 7123, 295, 264, 2063, 2445, 13, 50652, 50652, 823, 718, 311, 1322, 512, 24002, 466, 437, 264, 2063, 2445, 307, 534, 884, 13, 50878, 50878, 682, 341, 960, 11, 321, 603, 1792, 807, 472, 1365, 281, 536, 577, 264, 2063, 2445, 393, 312, 1143, 281, 51108, 51108, 915, 264, 1151, 9834, 337, 428, 2316, 13, 51251, 51251, 286, 458, 341, 960, 307, 257, 707, 857, 2854, 813, 264, 2357, 11, 457, 6155, 365, 385, 11, 286, 519, 309, 603, 51434, 51434, 312, 3163, 309, 13, 51484, 51484, 1407, 20928, 11, 510, 311, 437, 321, 600, 1612, 466, 264, 2063, 2445, 370, 1400, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.12743124791554042, "compression_ratio": 1.751004016064257, "no_speech_prob": 0.005728445947170258}, {"id": 5, "seek": 0, "start": 21.400000000000002, "end": 22.400000000000002, "text": " be worth it.", "tokens": [50364, 492, 600, 1612, 264, 18894, 7123, 295, 264, 2063, 2445, 13, 50652, 50652, 823, 718, 311, 1322, 512, 24002, 466, 437, 264, 2063, 2445, 307, 534, 884, 13, 50878, 50878, 682, 341, 960, 11, 321, 603, 1792, 807, 472, 1365, 281, 536, 577, 264, 2063, 2445, 393, 312, 1143, 281, 51108, 51108, 915, 264, 1151, 9834, 337, 428, 2316, 13, 51251, 51251, 286, 458, 341, 960, 307, 257, 707, 857, 2854, 813, 264, 2357, 11, 457, 6155, 365, 385, 11, 286, 519, 309, 603, 51434, 51434, 312, 3163, 309, 13, 51484, 51484, 1407, 20928, 11, 510, 311, 437, 321, 600, 1612, 466, 264, 2063, 2445, 370, 1400, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.12743124791554042, "compression_ratio": 1.751004016064257, "no_speech_prob": 0.005728445947170258}, {"id": 6, "seek": 0, "start": 22.400000000000002, "end": 26.98, "text": " To recap, here's what we've seen about the cost function so far.", "tokens": [50364, 492, 600, 1612, 264, 18894, 7123, 295, 264, 2063, 2445, 13, 50652, 50652, 823, 718, 311, 1322, 512, 24002, 466, 437, 264, 2063, 2445, 307, 534, 884, 13, 50878, 50878, 682, 341, 960, 11, 321, 603, 1792, 807, 472, 1365, 281, 536, 577, 264, 2063, 2445, 393, 312, 1143, 281, 51108, 51108, 915, 264, 1151, 9834, 337, 428, 2316, 13, 51251, 51251, 286, 458, 341, 960, 307, 257, 707, 857, 2854, 813, 264, 2357, 11, 457, 6155, 365, 385, 11, 286, 519, 309, 603, 51434, 51434, 312, 3163, 309, 13, 51484, 51484, 1407, 20928, 11, 510, 311, 437, 321, 600, 1612, 466, 264, 2063, 2445, 370, 1400, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.12743124791554042, "compression_ratio": 1.751004016064257, "no_speech_prob": 0.005728445947170258}, {"id": 7, "seek": 2698, "start": 26.98, "end": 33.52, "text": " You want to fit a straight line to the training data, so you have this model fwb of x is w", "tokens": [50364, 509, 528, 281, 3318, 257, 2997, 1622, 281, 264, 3097, 1412, 11, 370, 291, 362, 341, 2316, 283, 86, 65, 295, 2031, 307, 261, 50691, 50691, 1413, 2031, 1804, 272, 13, 50809, 50809, 400, 510, 11, 264, 2316, 311, 9834, 366, 261, 293, 272, 13, 51023, 51023, 823, 5413, 322, 264, 4190, 8614, 337, 613, 9834, 11, 291, 483, 819, 2997, 3876, 51287, 51287, 411, 341, 13, 51377, 51377, 400, 291, 528, 281, 915, 4190, 337, 261, 293, 272, 370, 300, 264, 2997, 1622, 9001, 264, 3097, 1412, 51671, 51671, 731, 13, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.14333267013231912, "compression_ratio": 1.766497461928934, "no_speech_prob": 5.0639864639379084e-05}, {"id": 8, "seek": 2698, "start": 33.52, "end": 35.88, "text": " times x plus b.", "tokens": [50364, 509, 528, 281, 3318, 257, 2997, 1622, 281, 264, 3097, 1412, 11, 370, 291, 362, 341, 2316, 283, 86, 65, 295, 2031, 307, 261, 50691, 50691, 1413, 2031, 1804, 272, 13, 50809, 50809, 400, 510, 11, 264, 2316, 311, 9834, 366, 261, 293, 272, 13, 51023, 51023, 823, 5413, 322, 264, 4190, 8614, 337, 613, 9834, 11, 291, 483, 819, 2997, 3876, 51287, 51287, 411, 341, 13, 51377, 51377, 400, 291, 528, 281, 915, 4190, 337, 261, 293, 272, 370, 300, 264, 2997, 1622, 9001, 264, 3097, 1412, 51671, 51671, 731, 13, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.14333267013231912, "compression_ratio": 1.766497461928934, "no_speech_prob": 5.0639864639379084e-05}, {"id": 9, "seek": 2698, "start": 35.88, "end": 40.16, "text": " And here, the model's parameters are w and b.", "tokens": [50364, 509, 528, 281, 3318, 257, 2997, 1622, 281, 264, 3097, 1412, 11, 370, 291, 362, 341, 2316, 283, 86, 65, 295, 2031, 307, 261, 50691, 50691, 1413, 2031, 1804, 272, 13, 50809, 50809, 400, 510, 11, 264, 2316, 311, 9834, 366, 261, 293, 272, 13, 51023, 51023, 823, 5413, 322, 264, 4190, 8614, 337, 613, 9834, 11, 291, 483, 819, 2997, 3876, 51287, 51287, 411, 341, 13, 51377, 51377, 400, 291, 528, 281, 915, 4190, 337, 261, 293, 272, 370, 300, 264, 2997, 1622, 9001, 264, 3097, 1412, 51671, 51671, 731, 13, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.14333267013231912, "compression_ratio": 1.766497461928934, "no_speech_prob": 5.0639864639379084e-05}, {"id": 10, "seek": 2698, "start": 40.16, "end": 45.44, "text": " Now depending on the values chosen for these parameters, you get different straight lines", "tokens": [50364, 509, 528, 281, 3318, 257, 2997, 1622, 281, 264, 3097, 1412, 11, 370, 291, 362, 341, 2316, 283, 86, 65, 295, 2031, 307, 261, 50691, 50691, 1413, 2031, 1804, 272, 13, 50809, 50809, 400, 510, 11, 264, 2316, 311, 9834, 366, 261, 293, 272, 13, 51023, 51023, 823, 5413, 322, 264, 4190, 8614, 337, 613, 9834, 11, 291, 483, 819, 2997, 3876, 51287, 51287, 411, 341, 13, 51377, 51377, 400, 291, 528, 281, 915, 4190, 337, 261, 293, 272, 370, 300, 264, 2997, 1622, 9001, 264, 3097, 1412, 51671, 51671, 731, 13, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.14333267013231912, "compression_ratio": 1.766497461928934, "no_speech_prob": 5.0639864639379084e-05}, {"id": 11, "seek": 2698, "start": 45.44, "end": 47.24, "text": " like this.", "tokens": [50364, 509, 528, 281, 3318, 257, 2997, 1622, 281, 264, 3097, 1412, 11, 370, 291, 362, 341, 2316, 283, 86, 65, 295, 2031, 307, 261, 50691, 50691, 1413, 2031, 1804, 272, 13, 50809, 50809, 400, 510, 11, 264, 2316, 311, 9834, 366, 261, 293, 272, 13, 51023, 51023, 823, 5413, 322, 264, 4190, 8614, 337, 613, 9834, 11, 291, 483, 819, 2997, 3876, 51287, 51287, 411, 341, 13, 51377, 51377, 400, 291, 528, 281, 915, 4190, 337, 261, 293, 272, 370, 300, 264, 2997, 1622, 9001, 264, 3097, 1412, 51671, 51671, 731, 13, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.14333267013231912, "compression_ratio": 1.766497461928934, "no_speech_prob": 5.0639864639379084e-05}, {"id": 12, "seek": 2698, "start": 47.24, "end": 53.120000000000005, "text": " And you want to find values for w and b so that the straight line fits the training data", "tokens": [50364, 509, 528, 281, 3318, 257, 2997, 1622, 281, 264, 3097, 1412, 11, 370, 291, 362, 341, 2316, 283, 86, 65, 295, 2031, 307, 261, 50691, 50691, 1413, 2031, 1804, 272, 13, 50809, 50809, 400, 510, 11, 264, 2316, 311, 9834, 366, 261, 293, 272, 13, 51023, 51023, 823, 5413, 322, 264, 4190, 8614, 337, 613, 9834, 11, 291, 483, 819, 2997, 3876, 51287, 51287, 411, 341, 13, 51377, 51377, 400, 291, 528, 281, 915, 4190, 337, 261, 293, 272, 370, 300, 264, 2997, 1622, 9001, 264, 3097, 1412, 51671, 51671, 731, 13, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.14333267013231912, "compression_ratio": 1.766497461928934, "no_speech_prob": 5.0639864639379084e-05}, {"id": 13, "seek": 2698, "start": 53.120000000000005, "end": 54.480000000000004, "text": " well.", "tokens": [50364, 509, 528, 281, 3318, 257, 2997, 1622, 281, 264, 3097, 1412, 11, 370, 291, 362, 341, 2316, 283, 86, 65, 295, 2031, 307, 261, 50691, 50691, 1413, 2031, 1804, 272, 13, 50809, 50809, 400, 510, 11, 264, 2316, 311, 9834, 366, 261, 293, 272, 13, 51023, 51023, 823, 5413, 322, 264, 4190, 8614, 337, 613, 9834, 11, 291, 483, 819, 2997, 3876, 51287, 51287, 411, 341, 13, 51377, 51377, 400, 291, 528, 281, 915, 4190, 337, 261, 293, 272, 370, 300, 264, 2997, 1622, 9001, 264, 3097, 1412, 51671, 51671, 731, 13, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.14333267013231912, "compression_ratio": 1.766497461928934, "no_speech_prob": 5.0639864639379084e-05}, {"id": 14, "seek": 5448, "start": 54.48, "end": 61.58, "text": " To measure how well a choice of w and b fits the training data, you have a cost function", "tokens": [50364, 1407, 3481, 577, 731, 257, 3922, 295, 261, 293, 272, 9001, 264, 3097, 1412, 11, 291, 362, 257, 2063, 2445, 50719, 50719, 361, 13, 50808, 50808, 400, 437, 264, 2063, 2445, 361, 775, 307, 11, 309, 8000, 264, 2649, 1296, 264, 2316, 311, 21264, 51092, 51092, 293, 264, 3539, 2074, 4190, 337, 288, 13, 51320, 51320, 708, 291, 536, 1780, 307, 300, 8213, 24590, 576, 853, 281, 915, 4190, 337, 261, 293, 272, 300, 51586, 51586, 652, 257, 361, 295, 261, 312, 382, 1359, 382, 1944, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12478361024961367, "compression_ratio": 1.6261682242990654, "no_speech_prob": 3.5007378755835816e-06}, {"id": 15, "seek": 5448, "start": 61.58, "end": 63.36, "text": " j.", "tokens": [50364, 1407, 3481, 577, 731, 257, 3922, 295, 261, 293, 272, 9001, 264, 3097, 1412, 11, 291, 362, 257, 2063, 2445, 50719, 50719, 361, 13, 50808, 50808, 400, 437, 264, 2063, 2445, 361, 775, 307, 11, 309, 8000, 264, 2649, 1296, 264, 2316, 311, 21264, 51092, 51092, 293, 264, 3539, 2074, 4190, 337, 288, 13, 51320, 51320, 708, 291, 536, 1780, 307, 300, 8213, 24590, 576, 853, 281, 915, 4190, 337, 261, 293, 272, 300, 51586, 51586, 652, 257, 361, 295, 261, 312, 382, 1359, 382, 1944, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12478361024961367, "compression_ratio": 1.6261682242990654, "no_speech_prob": 3.5007378755835816e-06}, {"id": 16, "seek": 5448, "start": 63.36, "end": 69.03999999999999, "text": " And what the cost function j does is, it measures the difference between the model's predictions", "tokens": [50364, 1407, 3481, 577, 731, 257, 3922, 295, 261, 293, 272, 9001, 264, 3097, 1412, 11, 291, 362, 257, 2063, 2445, 50719, 50719, 361, 13, 50808, 50808, 400, 437, 264, 2063, 2445, 361, 775, 307, 11, 309, 8000, 264, 2649, 1296, 264, 2316, 311, 21264, 51092, 51092, 293, 264, 3539, 2074, 4190, 337, 288, 13, 51320, 51320, 708, 291, 536, 1780, 307, 300, 8213, 24590, 576, 853, 281, 915, 4190, 337, 261, 293, 272, 300, 51586, 51586, 652, 257, 361, 295, 261, 312, 382, 1359, 382, 1944, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12478361024961367, "compression_ratio": 1.6261682242990654, "no_speech_prob": 3.5007378755835816e-06}, {"id": 17, "seek": 5448, "start": 69.03999999999999, "end": 73.6, "text": " and the actual true values for y.", "tokens": [50364, 1407, 3481, 577, 731, 257, 3922, 295, 261, 293, 272, 9001, 264, 3097, 1412, 11, 291, 362, 257, 2063, 2445, 50719, 50719, 361, 13, 50808, 50808, 400, 437, 264, 2063, 2445, 361, 775, 307, 11, 309, 8000, 264, 2649, 1296, 264, 2316, 311, 21264, 51092, 51092, 293, 264, 3539, 2074, 4190, 337, 288, 13, 51320, 51320, 708, 291, 536, 1780, 307, 300, 8213, 24590, 576, 853, 281, 915, 4190, 337, 261, 293, 272, 300, 51586, 51586, 652, 257, 361, 295, 261, 312, 382, 1359, 382, 1944, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12478361024961367, "compression_ratio": 1.6261682242990654, "no_speech_prob": 3.5007378755835816e-06}, {"id": 18, "seek": 5448, "start": 73.6, "end": 78.92, "text": " What you see later is that linear regression would try to find values for w and b that", "tokens": [50364, 1407, 3481, 577, 731, 257, 3922, 295, 261, 293, 272, 9001, 264, 3097, 1412, 11, 291, 362, 257, 2063, 2445, 50719, 50719, 361, 13, 50808, 50808, 400, 437, 264, 2063, 2445, 361, 775, 307, 11, 309, 8000, 264, 2649, 1296, 264, 2316, 311, 21264, 51092, 51092, 293, 264, 3539, 2074, 4190, 337, 288, 13, 51320, 51320, 708, 291, 536, 1780, 307, 300, 8213, 24590, 576, 853, 281, 915, 4190, 337, 261, 293, 272, 300, 51586, 51586, 652, 257, 361, 295, 261, 312, 382, 1359, 382, 1944, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12478361024961367, "compression_ratio": 1.6261682242990654, "no_speech_prob": 3.5007378755835816e-06}, {"id": 19, "seek": 5448, "start": 78.92, "end": 83.4, "text": " make a j of w be as small as possible.", "tokens": [50364, 1407, 3481, 577, 731, 257, 3922, 295, 261, 293, 272, 9001, 264, 3097, 1412, 11, 291, 362, 257, 2063, 2445, 50719, 50719, 361, 13, 50808, 50808, 400, 437, 264, 2063, 2445, 361, 775, 307, 11, 309, 8000, 264, 2649, 1296, 264, 2316, 311, 21264, 51092, 51092, 293, 264, 3539, 2074, 4190, 337, 288, 13, 51320, 51320, 708, 291, 536, 1780, 307, 300, 8213, 24590, 576, 853, 281, 915, 4190, 337, 261, 293, 272, 300, 51586, 51586, 652, 257, 361, 295, 261, 312, 382, 1359, 382, 1944, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12478361024961367, "compression_ratio": 1.6261682242990654, "no_speech_prob": 3.5007378755835816e-06}, {"id": 20, "seek": 8340, "start": 83.4, "end": 85.84, "text": " In math, we write it like this.", "tokens": [50364, 682, 5221, 11, 321, 2464, 309, 411, 341, 13, 50486, 50486, 492, 528, 281, 17522, 361, 382, 257, 2445, 295, 261, 293, 272, 13, 50869, 50869, 407, 586, 11, 294, 1668, 337, 505, 281, 1101, 23273, 264, 2063, 2445, 361, 11, 718, 311, 589, 365, 257, 26335, 51158, 51158, 3037, 295, 264, 8213, 24590, 2316, 13, 51302, 51302, 492, 434, 516, 281, 764, 264, 2316, 283, 86, 295, 2031, 307, 261, 1413, 2031, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.10770866198417468, "compression_ratio": 1.4915254237288136, "no_speech_prob": 2.2958845420362195e-06}, {"id": 21, "seek": 8340, "start": 85.84, "end": 93.5, "text": " We want to minimize j as a function of w and b.", "tokens": [50364, 682, 5221, 11, 321, 2464, 309, 411, 341, 13, 50486, 50486, 492, 528, 281, 17522, 361, 382, 257, 2445, 295, 261, 293, 272, 13, 50869, 50869, 407, 586, 11, 294, 1668, 337, 505, 281, 1101, 23273, 264, 2063, 2445, 361, 11, 718, 311, 589, 365, 257, 26335, 51158, 51158, 3037, 295, 264, 8213, 24590, 2316, 13, 51302, 51302, 492, 434, 516, 281, 764, 264, 2316, 283, 86, 295, 2031, 307, 261, 1413, 2031, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.10770866198417468, "compression_ratio": 1.4915254237288136, "no_speech_prob": 2.2958845420362195e-06}, {"id": 22, "seek": 8340, "start": 93.5, "end": 99.28, "text": " So now, in order for us to better visualize the cost function j, let's work with a simplified", "tokens": [50364, 682, 5221, 11, 321, 2464, 309, 411, 341, 13, 50486, 50486, 492, 528, 281, 17522, 361, 382, 257, 2445, 295, 261, 293, 272, 13, 50869, 50869, 407, 586, 11, 294, 1668, 337, 505, 281, 1101, 23273, 264, 2063, 2445, 361, 11, 718, 311, 589, 365, 257, 26335, 51158, 51158, 3037, 295, 264, 8213, 24590, 2316, 13, 51302, 51302, 492, 434, 516, 281, 764, 264, 2316, 283, 86, 295, 2031, 307, 261, 1413, 2031, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.10770866198417468, "compression_ratio": 1.4915254237288136, "no_speech_prob": 2.2958845420362195e-06}, {"id": 23, "seek": 8340, "start": 99.28, "end": 102.16000000000001, "text": " version of the linear regression model.", "tokens": [50364, 682, 5221, 11, 321, 2464, 309, 411, 341, 13, 50486, 50486, 492, 528, 281, 17522, 361, 382, 257, 2445, 295, 261, 293, 272, 13, 50869, 50869, 407, 586, 11, 294, 1668, 337, 505, 281, 1101, 23273, 264, 2063, 2445, 361, 11, 718, 311, 589, 365, 257, 26335, 51158, 51158, 3037, 295, 264, 8213, 24590, 2316, 13, 51302, 51302, 492, 434, 516, 281, 764, 264, 2316, 283, 86, 295, 2031, 307, 261, 1413, 2031, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.10770866198417468, "compression_ratio": 1.4915254237288136, "no_speech_prob": 2.2958845420362195e-06}, {"id": 24, "seek": 8340, "start": 102.16000000000001, "end": 108.96000000000001, "text": " We're going to use the model fw of x is w times x.", "tokens": [50364, 682, 5221, 11, 321, 2464, 309, 411, 341, 13, 50486, 50486, 492, 528, 281, 17522, 361, 382, 257, 2445, 295, 261, 293, 272, 13, 50869, 50869, 407, 586, 11, 294, 1668, 337, 505, 281, 1101, 23273, 264, 2063, 2445, 361, 11, 718, 311, 589, 365, 257, 26335, 51158, 51158, 3037, 295, 264, 8213, 24590, 2316, 13, 51302, 51302, 492, 434, 516, 281, 764, 264, 2316, 283, 86, 295, 2031, 307, 261, 1413, 2031, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.10770866198417468, "compression_ratio": 1.4915254237288136, "no_speech_prob": 2.2958845420362195e-06}, {"id": 25, "seek": 10896, "start": 108.96, "end": 114.11999999999999, "text": " You can think of this as taking the original model on the left and getting rid of the parameter", "tokens": [50364, 509, 393, 519, 295, 341, 382, 1940, 264, 3380, 2316, 322, 264, 1411, 293, 1242, 3973, 295, 264, 13075, 50622, 50622, 272, 420, 3287, 264, 13075, 272, 2681, 281, 4018, 13, 50826, 50826, 407, 309, 445, 1709, 1314, 490, 264, 5367, 13, 50982, 50982, 407, 283, 307, 586, 445, 261, 1413, 2031, 13, 51174, 51174, 407, 291, 586, 362, 445, 472, 13075, 261, 293, 428, 2063, 2445, 361, 1542, 2531, 281, 437, 309, 390, 51516, 51516], "temperature": 0.0, "avg_logprob": -0.13069489063360754, "compression_ratio": 1.664804469273743, "no_speech_prob": 2.9944155812700046e-06}, {"id": 26, "seek": 10896, "start": 114.11999999999999, "end": 118.19999999999999, "text": " b or setting the parameter b equal to zero.", "tokens": [50364, 509, 393, 519, 295, 341, 382, 1940, 264, 3380, 2316, 322, 264, 1411, 293, 1242, 3973, 295, 264, 13075, 50622, 50622, 272, 420, 3287, 264, 13075, 272, 2681, 281, 4018, 13, 50826, 50826, 407, 309, 445, 1709, 1314, 490, 264, 5367, 13, 50982, 50982, 407, 283, 307, 586, 445, 261, 1413, 2031, 13, 51174, 51174, 407, 291, 586, 362, 445, 472, 13075, 261, 293, 428, 2063, 2445, 361, 1542, 2531, 281, 437, 309, 390, 51516, 51516], "temperature": 0.0, "avg_logprob": -0.13069489063360754, "compression_ratio": 1.664804469273743, "no_speech_prob": 2.9944155812700046e-06}, {"id": 27, "seek": 10896, "start": 118.19999999999999, "end": 121.32, "text": " So it just goes away from the equation.", "tokens": [50364, 509, 393, 519, 295, 341, 382, 1940, 264, 3380, 2316, 322, 264, 1411, 293, 1242, 3973, 295, 264, 13075, 50622, 50622, 272, 420, 3287, 264, 13075, 272, 2681, 281, 4018, 13, 50826, 50826, 407, 309, 445, 1709, 1314, 490, 264, 5367, 13, 50982, 50982, 407, 283, 307, 586, 445, 261, 1413, 2031, 13, 51174, 51174, 407, 291, 586, 362, 445, 472, 13075, 261, 293, 428, 2063, 2445, 361, 1542, 2531, 281, 437, 309, 390, 51516, 51516], "temperature": 0.0, "avg_logprob": -0.13069489063360754, "compression_ratio": 1.664804469273743, "no_speech_prob": 2.9944155812700046e-06}, {"id": 28, "seek": 10896, "start": 121.32, "end": 125.16, "text": " So f is now just w times x.", "tokens": [50364, 509, 393, 519, 295, 341, 382, 1940, 264, 3380, 2316, 322, 264, 1411, 293, 1242, 3973, 295, 264, 13075, 50622, 50622, 272, 420, 3287, 264, 13075, 272, 2681, 281, 4018, 13, 50826, 50826, 407, 309, 445, 1709, 1314, 490, 264, 5367, 13, 50982, 50982, 407, 283, 307, 586, 445, 261, 1413, 2031, 13, 51174, 51174, 407, 291, 586, 362, 445, 472, 13075, 261, 293, 428, 2063, 2445, 361, 1542, 2531, 281, 437, 309, 390, 51516, 51516], "temperature": 0.0, "avg_logprob": -0.13069489063360754, "compression_ratio": 1.664804469273743, "no_speech_prob": 2.9944155812700046e-06}, {"id": 29, "seek": 10896, "start": 125.16, "end": 132.0, "text": " So you now have just one parameter w and your cost function j looks similar to what it was", "tokens": [50364, 509, 393, 519, 295, 341, 382, 1940, 264, 3380, 2316, 322, 264, 1411, 293, 1242, 3973, 295, 264, 13075, 50622, 50622, 272, 420, 3287, 264, 13075, 272, 2681, 281, 4018, 13, 50826, 50826, 407, 309, 445, 1709, 1314, 490, 264, 5367, 13, 50982, 50982, 407, 283, 307, 586, 445, 261, 1413, 2031, 13, 51174, 51174, 407, 291, 586, 362, 445, 472, 13075, 261, 293, 428, 2063, 2445, 361, 1542, 2531, 281, 437, 309, 390, 51516, 51516], "temperature": 0.0, "avg_logprob": -0.13069489063360754, "compression_ratio": 1.664804469273743, "no_speech_prob": 2.9944155812700046e-06}, {"id": 30, "seek": 13200, "start": 132.0, "end": 139.64, "text": " before, taking the difference and squaring it, except that now f is equal to w times", "tokens": [50364, 949, 11, 1940, 264, 2649, 293, 2339, 1921, 309, 11, 3993, 300, 586, 283, 307, 2681, 281, 261, 1413, 50746, 50746, 2031, 741, 293, 361, 307, 586, 257, 2445, 295, 445, 261, 13, 51048, 51048, 400, 264, 3387, 3643, 257, 707, 857, 819, 382, 731, 570, 291, 362, 445, 472, 13075, 51268, 51268, 261, 11, 406, 261, 293, 272, 13, 51394, 51394, 407, 365, 341, 26335, 2316, 11, 264, 3387, 307, 281, 915, 257, 2158, 337, 261, 300, 4464, 5660, 361, 295, 51770, 51770, 261, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15103360282050238, "compression_ratio": 1.5594059405940595, "no_speech_prob": 5.014657290303148e-06}, {"id": 31, "seek": 13200, "start": 139.64, "end": 145.68, "text": " x i and j is now a function of just w.", "tokens": [50364, 949, 11, 1940, 264, 2649, 293, 2339, 1921, 309, 11, 3993, 300, 586, 283, 307, 2681, 281, 261, 1413, 50746, 50746, 2031, 741, 293, 361, 307, 586, 257, 2445, 295, 445, 261, 13, 51048, 51048, 400, 264, 3387, 3643, 257, 707, 857, 819, 382, 731, 570, 291, 362, 445, 472, 13075, 51268, 51268, 261, 11, 406, 261, 293, 272, 13, 51394, 51394, 407, 365, 341, 26335, 2316, 11, 264, 3387, 307, 281, 915, 257, 2158, 337, 261, 300, 4464, 5660, 361, 295, 51770, 51770, 261, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15103360282050238, "compression_ratio": 1.5594059405940595, "no_speech_prob": 5.014657290303148e-06}, {"id": 32, "seek": 13200, "start": 145.68, "end": 150.08, "text": " And the goal becomes a little bit different as well because you have just one parameter", "tokens": [50364, 949, 11, 1940, 264, 2649, 293, 2339, 1921, 309, 11, 3993, 300, 586, 283, 307, 2681, 281, 261, 1413, 50746, 50746, 2031, 741, 293, 361, 307, 586, 257, 2445, 295, 445, 261, 13, 51048, 51048, 400, 264, 3387, 3643, 257, 707, 857, 819, 382, 731, 570, 291, 362, 445, 472, 13075, 51268, 51268, 261, 11, 406, 261, 293, 272, 13, 51394, 51394, 407, 365, 341, 26335, 2316, 11, 264, 3387, 307, 281, 915, 257, 2158, 337, 261, 300, 4464, 5660, 361, 295, 51770, 51770, 261, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15103360282050238, "compression_ratio": 1.5594059405940595, "no_speech_prob": 5.014657290303148e-06}, {"id": 33, "seek": 13200, "start": 150.08, "end": 152.6, "text": " w, not w and b.", "tokens": [50364, 949, 11, 1940, 264, 2649, 293, 2339, 1921, 309, 11, 3993, 300, 586, 283, 307, 2681, 281, 261, 1413, 50746, 50746, 2031, 741, 293, 361, 307, 586, 257, 2445, 295, 445, 261, 13, 51048, 51048, 400, 264, 3387, 3643, 257, 707, 857, 819, 382, 731, 570, 291, 362, 445, 472, 13075, 51268, 51268, 261, 11, 406, 261, 293, 272, 13, 51394, 51394, 407, 365, 341, 26335, 2316, 11, 264, 3387, 307, 281, 915, 257, 2158, 337, 261, 300, 4464, 5660, 361, 295, 51770, 51770, 261, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15103360282050238, "compression_ratio": 1.5594059405940595, "no_speech_prob": 5.014657290303148e-06}, {"id": 34, "seek": 13200, "start": 152.6, "end": 160.12, "text": " So with this simplified model, the goal is to find a value for w that minimizes j of", "tokens": [50364, 949, 11, 1940, 264, 2649, 293, 2339, 1921, 309, 11, 3993, 300, 586, 283, 307, 2681, 281, 261, 1413, 50746, 50746, 2031, 741, 293, 361, 307, 586, 257, 2445, 295, 445, 261, 13, 51048, 51048, 400, 264, 3387, 3643, 257, 707, 857, 819, 382, 731, 570, 291, 362, 445, 472, 13075, 51268, 51268, 261, 11, 406, 261, 293, 272, 13, 51394, 51394, 407, 365, 341, 26335, 2316, 11, 264, 3387, 307, 281, 915, 257, 2158, 337, 261, 300, 4464, 5660, 361, 295, 51770, 51770, 261, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15103360282050238, "compression_ratio": 1.5594059405940595, "no_speech_prob": 5.014657290303148e-06}, {"id": 35, "seek": 13200, "start": 160.12, "end": 161.96, "text": " w.", "tokens": [50364, 949, 11, 1940, 264, 2649, 293, 2339, 1921, 309, 11, 3993, 300, 586, 283, 307, 2681, 281, 261, 1413, 50746, 50746, 2031, 741, 293, 361, 307, 586, 257, 2445, 295, 445, 261, 13, 51048, 51048, 400, 264, 3387, 3643, 257, 707, 857, 819, 382, 731, 570, 291, 362, 445, 472, 13075, 51268, 51268, 261, 11, 406, 261, 293, 272, 13, 51394, 51394, 407, 365, 341, 26335, 2316, 11, 264, 3387, 307, 281, 915, 257, 2158, 337, 261, 300, 4464, 5660, 361, 295, 51770, 51770, 261, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15103360282050238, "compression_ratio": 1.5594059405940595, "no_speech_prob": 5.014657290303148e-06}, {"id": 36, "seek": 16196, "start": 161.96, "end": 168.60000000000002, "text": " To see this visually, what this means is that if b is set to zero, then f defines a line", "tokens": [50364, 1407, 536, 341, 19622, 11, 437, 341, 1355, 307, 300, 498, 272, 307, 992, 281, 4018, 11, 550, 283, 23122, 257, 1622, 50696, 50696, 300, 1542, 411, 341, 13, 50796, 50796, 400, 291, 536, 300, 264, 1622, 11335, 807, 264, 4957, 510, 570, 562, 2031, 307, 4018, 11, 731, 11, 51062, 51062, 283, 295, 2031, 307, 4018, 886, 13, 51190, 51190, 823, 1228, 341, 26335, 2316, 11, 718, 311, 536, 577, 264, 2063, 2445, 2962, 382, 291, 2826, 51433, 51433, 819, 4190, 337, 264, 13075, 261, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.12416783007946643, "compression_ratio": 1.6056338028169015, "no_speech_prob": 1.7330389709968586e-06}, {"id": 37, "seek": 16196, "start": 168.60000000000002, "end": 170.60000000000002, "text": " that looks like this.", "tokens": [50364, 1407, 536, 341, 19622, 11, 437, 341, 1355, 307, 300, 498, 272, 307, 992, 281, 4018, 11, 550, 283, 23122, 257, 1622, 50696, 50696, 300, 1542, 411, 341, 13, 50796, 50796, 400, 291, 536, 300, 264, 1622, 11335, 807, 264, 4957, 510, 570, 562, 2031, 307, 4018, 11, 731, 11, 51062, 51062, 283, 295, 2031, 307, 4018, 886, 13, 51190, 51190, 823, 1228, 341, 26335, 2316, 11, 718, 311, 536, 577, 264, 2063, 2445, 2962, 382, 291, 2826, 51433, 51433, 819, 4190, 337, 264, 13075, 261, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.12416783007946643, "compression_ratio": 1.6056338028169015, "no_speech_prob": 1.7330389709968586e-06}, {"id": 38, "seek": 16196, "start": 170.60000000000002, "end": 175.92000000000002, "text": " And you see that the line passes through the origin here because when x is zero, well,", "tokens": [50364, 1407, 536, 341, 19622, 11, 437, 341, 1355, 307, 300, 498, 272, 307, 992, 281, 4018, 11, 550, 283, 23122, 257, 1622, 50696, 50696, 300, 1542, 411, 341, 13, 50796, 50796, 400, 291, 536, 300, 264, 1622, 11335, 807, 264, 4957, 510, 570, 562, 2031, 307, 4018, 11, 731, 11, 51062, 51062, 283, 295, 2031, 307, 4018, 886, 13, 51190, 51190, 823, 1228, 341, 26335, 2316, 11, 718, 311, 536, 577, 264, 2063, 2445, 2962, 382, 291, 2826, 51433, 51433, 819, 4190, 337, 264, 13075, 261, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.12416783007946643, "compression_ratio": 1.6056338028169015, "no_speech_prob": 1.7330389709968586e-06}, {"id": 39, "seek": 16196, "start": 175.92000000000002, "end": 178.48000000000002, "text": " f of x is zero too.", "tokens": [50364, 1407, 536, 341, 19622, 11, 437, 341, 1355, 307, 300, 498, 272, 307, 992, 281, 4018, 11, 550, 283, 23122, 257, 1622, 50696, 50696, 300, 1542, 411, 341, 13, 50796, 50796, 400, 291, 536, 300, 264, 1622, 11335, 807, 264, 4957, 510, 570, 562, 2031, 307, 4018, 11, 731, 11, 51062, 51062, 283, 295, 2031, 307, 4018, 886, 13, 51190, 51190, 823, 1228, 341, 26335, 2316, 11, 718, 311, 536, 577, 264, 2063, 2445, 2962, 382, 291, 2826, 51433, 51433, 819, 4190, 337, 264, 13075, 261, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.12416783007946643, "compression_ratio": 1.6056338028169015, "no_speech_prob": 1.7330389709968586e-06}, {"id": 40, "seek": 16196, "start": 178.48000000000002, "end": 183.34, "text": " Now using this simplified model, let's see how the cost function changes as you choose", "tokens": [50364, 1407, 536, 341, 19622, 11, 437, 341, 1355, 307, 300, 498, 272, 307, 992, 281, 4018, 11, 550, 283, 23122, 257, 1622, 50696, 50696, 300, 1542, 411, 341, 13, 50796, 50796, 400, 291, 536, 300, 264, 1622, 11335, 807, 264, 4957, 510, 570, 562, 2031, 307, 4018, 11, 731, 11, 51062, 51062, 283, 295, 2031, 307, 4018, 886, 13, 51190, 51190, 823, 1228, 341, 26335, 2316, 11, 718, 311, 536, 577, 264, 2063, 2445, 2962, 382, 291, 2826, 51433, 51433, 819, 4190, 337, 264, 13075, 261, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.12416783007946643, "compression_ratio": 1.6056338028169015, "no_speech_prob": 1.7330389709968586e-06}, {"id": 41, "seek": 16196, "start": 183.34, "end": 187.36, "text": " different values for the parameter w.", "tokens": [50364, 1407, 536, 341, 19622, 11, 437, 341, 1355, 307, 300, 498, 272, 307, 992, 281, 4018, 11, 550, 283, 23122, 257, 1622, 50696, 50696, 300, 1542, 411, 341, 13, 50796, 50796, 400, 291, 536, 300, 264, 1622, 11335, 807, 264, 4957, 510, 570, 562, 2031, 307, 4018, 11, 731, 11, 51062, 51062, 283, 295, 2031, 307, 4018, 886, 13, 51190, 51190, 823, 1228, 341, 26335, 2316, 11, 718, 311, 536, 577, 264, 2063, 2445, 2962, 382, 291, 2826, 51433, 51433, 819, 4190, 337, 264, 13075, 261, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.12416783007946643, "compression_ratio": 1.6056338028169015, "no_speech_prob": 1.7330389709968586e-06}, {"id": 42, "seek": 18736, "start": 187.36, "end": 195.48000000000002, "text": " In particular, let's look at graphs of the model f of x and the cost function j.", "tokens": [50364, 682, 1729, 11, 718, 311, 574, 412, 24877, 295, 264, 2316, 283, 295, 2031, 293, 264, 2063, 2445, 361, 13, 50770, 50770, 286, 478, 516, 281, 7542, 613, 1252, 538, 1252, 293, 291, 603, 312, 1075, 281, 536, 577, 264, 732, 366, 4077, 13, 51112, 51112, 2386, 3449, 300, 337, 283, 2325, 662, 261, 11, 562, 264, 13075, 261, 307, 6806, 11, 300, 307, 11, 307, 1009, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09214659140143595, "compression_ratio": 1.4655172413793103, "no_speech_prob": 6.540298727486515e-06}, {"id": 43, "seek": 18736, "start": 195.48000000000002, "end": 202.32000000000002, "text": " I'm going to plot these side by side and you'll be able to see how the two are related.", "tokens": [50364, 682, 1729, 11, 718, 311, 574, 412, 24877, 295, 264, 2316, 283, 295, 2031, 293, 264, 2063, 2445, 361, 13, 50770, 50770, 286, 478, 516, 281, 7542, 613, 1252, 538, 1252, 293, 291, 603, 312, 1075, 281, 536, 577, 264, 732, 366, 4077, 13, 51112, 51112, 2386, 3449, 300, 337, 283, 2325, 662, 261, 11, 562, 264, 13075, 261, 307, 6806, 11, 300, 307, 11, 307, 1009, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09214659140143595, "compression_ratio": 1.4655172413793103, "no_speech_prob": 6.540298727486515e-06}, {"id": 44, "seek": 18736, "start": 202.32000000000002, "end": 209.36, "text": " First notice that for f subscript w, when the parameter w is fixed, that is, is always", "tokens": [50364, 682, 1729, 11, 718, 311, 574, 412, 24877, 295, 264, 2316, 283, 295, 2031, 293, 264, 2063, 2445, 361, 13, 50770, 50770, 286, 478, 516, 281, 7542, 613, 1252, 538, 1252, 293, 291, 603, 312, 1075, 281, 536, 577, 264, 732, 366, 4077, 13, 51112, 51112, 2386, 3449, 300, 337, 283, 2325, 662, 261, 11, 562, 264, 13075, 261, 307, 6806, 11, 300, 307, 11, 307, 1009, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09214659140143595, "compression_ratio": 1.4655172413793103, "no_speech_prob": 6.540298727486515e-06}, {"id": 45, "seek": 20936, "start": 209.36, "end": 217.28, "text": " a constant value, then f w is only a function of x, which means that the estimated value", "tokens": [50364, 257, 5754, 2158, 11, 550, 283, 261, 307, 787, 257, 2445, 295, 2031, 11, 597, 1355, 300, 264, 14109, 2158, 50760, 50760, 295, 288, 5946, 322, 264, 2158, 295, 264, 4846, 2031, 13, 51050, 51050, 682, 8712, 11, 1237, 281, 264, 558, 11, 264, 2063, 2445, 361, 307, 257, 2445, 295, 261, 11, 689, 261, 9003, 51478, 51478], "temperature": 0.0, "avg_logprob": -0.08254162470499675, "compression_ratio": 1.5857142857142856, "no_speech_prob": 1.9637902823888e-06}, {"id": 46, "seek": 20936, "start": 217.28, "end": 223.08, "text": " of y depends on the value of the input x.", "tokens": [50364, 257, 5754, 2158, 11, 550, 283, 261, 307, 787, 257, 2445, 295, 2031, 11, 597, 1355, 300, 264, 14109, 2158, 50760, 50760, 295, 288, 5946, 322, 264, 2158, 295, 264, 4846, 2031, 13, 51050, 51050, 682, 8712, 11, 1237, 281, 264, 558, 11, 264, 2063, 2445, 361, 307, 257, 2445, 295, 261, 11, 689, 261, 9003, 51478, 51478], "temperature": 0.0, "avg_logprob": -0.08254162470499675, "compression_ratio": 1.5857142857142856, "no_speech_prob": 1.9637902823888e-06}, {"id": 47, "seek": 20936, "start": 223.08, "end": 231.64000000000001, "text": " In contrast, looking to the right, the cost function j is a function of w, where w controls", "tokens": [50364, 257, 5754, 2158, 11, 550, 283, 261, 307, 787, 257, 2445, 295, 2031, 11, 597, 1355, 300, 264, 14109, 2158, 50760, 50760, 295, 288, 5946, 322, 264, 2158, 295, 264, 4846, 2031, 13, 51050, 51050, 682, 8712, 11, 1237, 281, 264, 558, 11, 264, 2063, 2445, 361, 307, 257, 2445, 295, 261, 11, 689, 261, 9003, 51478, 51478], "temperature": 0.0, "avg_logprob": -0.08254162470499675, "compression_ratio": 1.5857142857142856, "no_speech_prob": 1.9637902823888e-06}, {"id": 48, "seek": 23164, "start": 231.64, "end": 239.95999999999998, "text": " the slope of the line defined by f w, so the cost defined by j depends on a parameter,", "tokens": [50364, 264, 13525, 295, 264, 1622, 7642, 538, 283, 261, 11, 370, 264, 2063, 7642, 538, 361, 5946, 322, 257, 13075, 11, 50780, 50780, 294, 341, 1389, 11, 264, 13075, 261, 13, 50982, 50982, 407, 718, 311, 352, 2286, 293, 7542, 613, 6828, 283, 261, 295, 2031, 293, 361, 295, 261, 1252, 538, 1252, 370, 291, 393, 51373, 51373, 536, 577, 436, 366, 4077, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.11376672632553998, "compression_ratio": 1.554054054054054, "no_speech_prob": 8.714296200196259e-07}, {"id": 49, "seek": 23164, "start": 239.95999999999998, "end": 244.0, "text": " in this case, the parameter w.", "tokens": [50364, 264, 13525, 295, 264, 1622, 7642, 538, 283, 261, 11, 370, 264, 2063, 7642, 538, 361, 5946, 322, 257, 13075, 11, 50780, 50780, 294, 341, 1389, 11, 264, 13075, 261, 13, 50982, 50982, 407, 718, 311, 352, 2286, 293, 7542, 613, 6828, 283, 261, 295, 2031, 293, 361, 295, 261, 1252, 538, 1252, 370, 291, 393, 51373, 51373, 536, 577, 436, 366, 4077, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.11376672632553998, "compression_ratio": 1.554054054054054, "no_speech_prob": 8.714296200196259e-07}, {"id": 50, "seek": 23164, "start": 244.0, "end": 251.82, "text": " So let's go ahead and plot these functions f w of x and j of w side by side so you can", "tokens": [50364, 264, 13525, 295, 264, 1622, 7642, 538, 283, 261, 11, 370, 264, 2063, 7642, 538, 361, 5946, 322, 257, 13075, 11, 50780, 50780, 294, 341, 1389, 11, 264, 13075, 261, 13, 50982, 50982, 407, 718, 311, 352, 2286, 293, 7542, 613, 6828, 283, 261, 295, 2031, 293, 361, 295, 261, 1252, 538, 1252, 370, 291, 393, 51373, 51373, 536, 577, 436, 366, 4077, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.11376672632553998, "compression_ratio": 1.554054054054054, "no_speech_prob": 8.714296200196259e-07}, {"id": 51, "seek": 23164, "start": 251.82, "end": 255.83999999999997, "text": " see how they are related.", "tokens": [50364, 264, 13525, 295, 264, 1622, 7642, 538, 283, 261, 11, 370, 264, 2063, 7642, 538, 361, 5946, 322, 257, 13075, 11, 50780, 50780, 294, 341, 1389, 11, 264, 13075, 261, 13, 50982, 50982, 407, 718, 311, 352, 2286, 293, 7542, 613, 6828, 283, 261, 295, 2031, 293, 361, 295, 261, 1252, 538, 1252, 370, 291, 393, 51373, 51373, 536, 577, 436, 366, 4077, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.11376672632553998, "compression_ratio": 1.554054054054054, "no_speech_prob": 8.714296200196259e-07}, {"id": 52, "seek": 25584, "start": 255.84, "end": 262.68, "text": " We'll start to the model that is the function f w of x on the left.", "tokens": [50364, 492, 603, 722, 281, 264, 2316, 300, 307, 264, 2445, 283, 261, 295, 2031, 322, 264, 1411, 13, 50706, 50706, 1692, 264, 4846, 4111, 2031, 307, 322, 264, 12750, 10298, 293, 264, 5598, 2158, 288, 307, 322, 264, 9429, 51070, 51070, 10298, 13, 51120, 51120, 1692, 311, 257, 7542, 295, 1045, 2793, 13460, 264, 9529, 992, 412, 8432, 502, 502, 11, 568, 568, 11, 293, 51492, 51492, 805, 805, 13, 51610, 51610, 961, 311, 1888, 257, 2158, 337, 261, 11, 584, 261, 307, 502, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16044113073456154, "compression_ratio": 1.528497409326425, "no_speech_prob": 3.4465292628738098e-06}, {"id": 53, "seek": 25584, "start": 262.68, "end": 269.96, "text": " Here the input feature x is on the horizontal axis and the output value y is on the vertical", "tokens": [50364, 492, 603, 722, 281, 264, 2316, 300, 307, 264, 2445, 283, 261, 295, 2031, 322, 264, 1411, 13, 50706, 50706, 1692, 264, 4846, 4111, 2031, 307, 322, 264, 12750, 10298, 293, 264, 5598, 2158, 288, 307, 322, 264, 9429, 51070, 51070, 10298, 13, 51120, 51120, 1692, 311, 257, 7542, 295, 1045, 2793, 13460, 264, 9529, 992, 412, 8432, 502, 502, 11, 568, 568, 11, 293, 51492, 51492, 805, 805, 13, 51610, 51610, 961, 311, 1888, 257, 2158, 337, 261, 11, 584, 261, 307, 502, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16044113073456154, "compression_ratio": 1.528497409326425, "no_speech_prob": 3.4465292628738098e-06}, {"id": 54, "seek": 25584, "start": 269.96, "end": 270.96, "text": " axis.", "tokens": [50364, 492, 603, 722, 281, 264, 2316, 300, 307, 264, 2445, 283, 261, 295, 2031, 322, 264, 1411, 13, 50706, 50706, 1692, 264, 4846, 4111, 2031, 307, 322, 264, 12750, 10298, 293, 264, 5598, 2158, 288, 307, 322, 264, 9429, 51070, 51070, 10298, 13, 51120, 51120, 1692, 311, 257, 7542, 295, 1045, 2793, 13460, 264, 9529, 992, 412, 8432, 502, 502, 11, 568, 568, 11, 293, 51492, 51492, 805, 805, 13, 51610, 51610, 961, 311, 1888, 257, 2158, 337, 261, 11, 584, 261, 307, 502, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16044113073456154, "compression_ratio": 1.528497409326425, "no_speech_prob": 3.4465292628738098e-06}, {"id": 55, "seek": 25584, "start": 270.96, "end": 278.4, "text": " Here's a plot of three points representing the trading set at positions 1 1, 2 2, and", "tokens": [50364, 492, 603, 722, 281, 264, 2316, 300, 307, 264, 2445, 283, 261, 295, 2031, 322, 264, 1411, 13, 50706, 50706, 1692, 264, 4846, 4111, 2031, 307, 322, 264, 12750, 10298, 293, 264, 5598, 2158, 288, 307, 322, 264, 9429, 51070, 51070, 10298, 13, 51120, 51120, 1692, 311, 257, 7542, 295, 1045, 2793, 13460, 264, 9529, 992, 412, 8432, 502, 502, 11, 568, 568, 11, 293, 51492, 51492, 805, 805, 13, 51610, 51610, 961, 311, 1888, 257, 2158, 337, 261, 11, 584, 261, 307, 502, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16044113073456154, "compression_ratio": 1.528497409326425, "no_speech_prob": 3.4465292628738098e-06}, {"id": 56, "seek": 25584, "start": 278.4, "end": 280.76, "text": " 3 3.", "tokens": [50364, 492, 603, 722, 281, 264, 2316, 300, 307, 264, 2445, 283, 261, 295, 2031, 322, 264, 1411, 13, 50706, 50706, 1692, 264, 4846, 4111, 2031, 307, 322, 264, 12750, 10298, 293, 264, 5598, 2158, 288, 307, 322, 264, 9429, 51070, 51070, 10298, 13, 51120, 51120, 1692, 311, 257, 7542, 295, 1045, 2793, 13460, 264, 9529, 992, 412, 8432, 502, 502, 11, 568, 568, 11, 293, 51492, 51492, 805, 805, 13, 51610, 51610, 961, 311, 1888, 257, 2158, 337, 261, 11, 584, 261, 307, 502, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16044113073456154, "compression_ratio": 1.528497409326425, "no_speech_prob": 3.4465292628738098e-06}, {"id": 57, "seek": 25584, "start": 280.76, "end": 285.04, "text": " Let's pick a value for w, say w is 1.", "tokens": [50364, 492, 603, 722, 281, 264, 2316, 300, 307, 264, 2445, 283, 261, 295, 2031, 322, 264, 1411, 13, 50706, 50706, 1692, 264, 4846, 4111, 2031, 307, 322, 264, 12750, 10298, 293, 264, 5598, 2158, 288, 307, 322, 264, 9429, 51070, 51070, 10298, 13, 51120, 51120, 1692, 311, 257, 7542, 295, 1045, 2793, 13460, 264, 9529, 992, 412, 8432, 502, 502, 11, 568, 568, 11, 293, 51492, 51492, 805, 805, 13, 51610, 51610, 961, 311, 1888, 257, 2158, 337, 261, 11, 584, 261, 307, 502, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16044113073456154, "compression_ratio": 1.528497409326425, "no_speech_prob": 3.4465292628738098e-06}, {"id": 58, "seek": 28504, "start": 285.04, "end": 293.68, "text": " So for this choice of w, the function f w looks like this straight line with a slope", "tokens": [50364, 407, 337, 341, 3922, 295, 261, 11, 264, 2445, 283, 261, 1542, 411, 341, 2997, 1622, 365, 257, 13525, 50796, 50796, 295, 502, 13, 50888, 50888, 823, 437, 291, 393, 360, 958, 307, 8873, 264, 2063, 361, 562, 261, 6915, 502, 13, 51293, 51293, 407, 291, 815, 9901, 300, 264, 2063, 2445, 307, 7642, 382, 10002, 11, 309, 311, 264, 8889, 6713, 51532, 51532, 2063, 2445, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13005933627276353, "compression_ratio": 1.5449101796407185, "no_speech_prob": 2.6425598207424628e-06}, {"id": 59, "seek": 28504, "start": 293.68, "end": 295.52000000000004, "text": " of 1.", "tokens": [50364, 407, 337, 341, 3922, 295, 261, 11, 264, 2445, 283, 261, 1542, 411, 341, 2997, 1622, 365, 257, 13525, 50796, 50796, 295, 502, 13, 50888, 50888, 823, 437, 291, 393, 360, 958, 307, 8873, 264, 2063, 361, 562, 261, 6915, 502, 13, 51293, 51293, 407, 291, 815, 9901, 300, 264, 2063, 2445, 307, 7642, 382, 10002, 11, 309, 311, 264, 8889, 6713, 51532, 51532, 2063, 2445, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13005933627276353, "compression_ratio": 1.5449101796407185, "no_speech_prob": 2.6425598207424628e-06}, {"id": 60, "seek": 28504, "start": 295.52000000000004, "end": 303.62, "text": " Now what you can do next is calculate the cost j when w equals 1.", "tokens": [50364, 407, 337, 341, 3922, 295, 261, 11, 264, 2445, 283, 261, 1542, 411, 341, 2997, 1622, 365, 257, 13525, 50796, 50796, 295, 502, 13, 50888, 50888, 823, 437, 291, 393, 360, 958, 307, 8873, 264, 2063, 361, 562, 261, 6915, 502, 13, 51293, 51293, 407, 291, 815, 9901, 300, 264, 2063, 2445, 307, 7642, 382, 10002, 11, 309, 311, 264, 8889, 6713, 51532, 51532, 2063, 2445, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13005933627276353, "compression_ratio": 1.5449101796407185, "no_speech_prob": 2.6425598207424628e-06}, {"id": 61, "seek": 28504, "start": 303.62, "end": 308.40000000000003, "text": " So you may recall that the cost function is defined as follows, it's the squared error", "tokens": [50364, 407, 337, 341, 3922, 295, 261, 11, 264, 2445, 283, 261, 1542, 411, 341, 2997, 1622, 365, 257, 13525, 50796, 50796, 295, 502, 13, 50888, 50888, 823, 437, 291, 393, 360, 958, 307, 8873, 264, 2063, 361, 562, 261, 6915, 502, 13, 51293, 51293, 407, 291, 815, 9901, 300, 264, 2063, 2445, 307, 7642, 382, 10002, 11, 309, 311, 264, 8889, 6713, 51532, 51532, 2063, 2445, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13005933627276353, "compression_ratio": 1.5449101796407185, "no_speech_prob": 2.6425598207424628e-06}, {"id": 62, "seek": 28504, "start": 308.40000000000003, "end": 310.16, "text": " cost function.", "tokens": [50364, 407, 337, 341, 3922, 295, 261, 11, 264, 2445, 283, 261, 1542, 411, 341, 2997, 1622, 365, 257, 13525, 50796, 50796, 295, 502, 13, 50888, 50888, 823, 437, 291, 393, 360, 958, 307, 8873, 264, 2063, 361, 562, 261, 6915, 502, 13, 51293, 51293, 407, 291, 815, 9901, 300, 264, 2063, 2445, 307, 7642, 382, 10002, 11, 309, 311, 264, 8889, 6713, 51532, 51532, 2063, 2445, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13005933627276353, "compression_ratio": 1.5449101796407185, "no_speech_prob": 2.6425598207424628e-06}, {"id": 63, "seek": 31016, "start": 310.16, "end": 319.52000000000004, "text": " So if you substitute f w of x i with w times x i, the cost function looks like this, where", "tokens": [50364, 407, 498, 291, 15802, 283, 261, 295, 2031, 741, 365, 261, 1413, 2031, 741, 11, 264, 2063, 2445, 1542, 411, 341, 11, 689, 50832, 50832, 341, 6114, 307, 586, 261, 1413, 2031, 741, 3175, 288, 741, 13, 51118, 51118, 407, 337, 341, 2158, 295, 261, 11, 309, 4523, 484, 300, 264, 6713, 1433, 1854, 264, 2063, 2445, 11, 341, 51409, 51409, 261, 1413, 2031, 741, 3175, 288, 741, 307, 2681, 281, 4018, 337, 1184, 295, 264, 1045, 1412, 2793, 13, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.10920960562569755, "compression_ratio": 1.7325581395348837, "no_speech_prob": 1.228909127348743e-06}, {"id": 64, "seek": 31016, "start": 319.52000000000004, "end": 325.24, "text": " this expression is now w times x i minus y i.", "tokens": [50364, 407, 498, 291, 15802, 283, 261, 295, 2031, 741, 365, 261, 1413, 2031, 741, 11, 264, 2063, 2445, 1542, 411, 341, 11, 689, 50832, 50832, 341, 6114, 307, 586, 261, 1413, 2031, 741, 3175, 288, 741, 13, 51118, 51118, 407, 337, 341, 2158, 295, 261, 11, 309, 4523, 484, 300, 264, 6713, 1433, 1854, 264, 2063, 2445, 11, 341, 51409, 51409, 261, 1413, 2031, 741, 3175, 288, 741, 307, 2681, 281, 4018, 337, 1184, 295, 264, 1045, 1412, 2793, 13, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.10920960562569755, "compression_ratio": 1.7325581395348837, "no_speech_prob": 1.228909127348743e-06}, {"id": 65, "seek": 31016, "start": 325.24, "end": 331.06, "text": " So for this value of w, it turns out that the error term inside the cost function, this", "tokens": [50364, 407, 498, 291, 15802, 283, 261, 295, 2031, 741, 365, 261, 1413, 2031, 741, 11, 264, 2063, 2445, 1542, 411, 341, 11, 689, 50832, 50832, 341, 6114, 307, 586, 261, 1413, 2031, 741, 3175, 288, 741, 13, 51118, 51118, 407, 337, 341, 2158, 295, 261, 11, 309, 4523, 484, 300, 264, 6713, 1433, 1854, 264, 2063, 2445, 11, 341, 51409, 51409, 261, 1413, 2031, 741, 3175, 288, 741, 307, 2681, 281, 4018, 337, 1184, 295, 264, 1045, 1412, 2793, 13, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.10920960562569755, "compression_ratio": 1.7325581395348837, "no_speech_prob": 1.228909127348743e-06}, {"id": 66, "seek": 31016, "start": 331.06, "end": 337.90000000000003, "text": " w times x i minus y i is equal to zero for each of the three data points.", "tokens": [50364, 407, 498, 291, 15802, 283, 261, 295, 2031, 741, 365, 261, 1413, 2031, 741, 11, 264, 2063, 2445, 1542, 411, 341, 11, 689, 50832, 50832, 341, 6114, 307, 586, 261, 1413, 2031, 741, 3175, 288, 741, 13, 51118, 51118, 407, 337, 341, 2158, 295, 261, 11, 309, 4523, 484, 300, 264, 6713, 1433, 1854, 264, 2063, 2445, 11, 341, 51409, 51409, 261, 1413, 2031, 741, 3175, 288, 741, 307, 2681, 281, 4018, 337, 1184, 295, 264, 1045, 1412, 2793, 13, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.10920960562569755, "compression_ratio": 1.7325581395348837, "no_speech_prob": 1.228909127348743e-06}, {"id": 67, "seek": 33790, "start": 337.9, "end": 342.35999999999996, "text": " Notice for this data set, when x is 1, then y is 1.", "tokens": [50364, 13428, 337, 341, 1412, 992, 11, 562, 2031, 307, 502, 11, 550, 288, 307, 502, 13, 50587, 50587, 1133, 261, 307, 611, 502, 11, 550, 283, 295, 2031, 6915, 502, 13, 50823, 50823, 407, 283, 295, 2031, 6915, 288, 337, 341, 700, 3097, 1365, 11, 293, 264, 2649, 307, 4018, 13, 51147, 51147, 40740, 3249, 341, 666, 264, 2063, 2445, 361, 11, 291, 483, 4018, 8889, 13, 51369, 51369, 13157, 11, 562, 2031, 307, 568, 11, 550, 288, 307, 568, 11, 293, 283, 295, 2031, 307, 611, 568, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1457537066551947, "compression_ratio": 1.6781609195402298, "no_speech_prob": 2.1233543066045968e-06}, {"id": 68, "seek": 33790, "start": 342.35999999999996, "end": 347.08, "text": " When w is also 1, then f of x equals 1.", "tokens": [50364, 13428, 337, 341, 1412, 992, 11, 562, 2031, 307, 502, 11, 550, 288, 307, 502, 13, 50587, 50587, 1133, 261, 307, 611, 502, 11, 550, 283, 295, 2031, 6915, 502, 13, 50823, 50823, 407, 283, 295, 2031, 6915, 288, 337, 341, 700, 3097, 1365, 11, 293, 264, 2649, 307, 4018, 13, 51147, 51147, 40740, 3249, 341, 666, 264, 2063, 2445, 361, 11, 291, 483, 4018, 8889, 13, 51369, 51369, 13157, 11, 562, 2031, 307, 568, 11, 550, 288, 307, 568, 11, 293, 283, 295, 2031, 307, 611, 568, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1457537066551947, "compression_ratio": 1.6781609195402298, "no_speech_prob": 2.1233543066045968e-06}, {"id": 69, "seek": 33790, "start": 347.08, "end": 353.56, "text": " So f of x equals y for this first training example, and the difference is zero.", "tokens": [50364, 13428, 337, 341, 1412, 992, 11, 562, 2031, 307, 502, 11, 550, 288, 307, 502, 13, 50587, 50587, 1133, 261, 307, 611, 502, 11, 550, 283, 295, 2031, 6915, 502, 13, 50823, 50823, 407, 283, 295, 2031, 6915, 288, 337, 341, 700, 3097, 1365, 11, 293, 264, 2649, 307, 4018, 13, 51147, 51147, 40740, 3249, 341, 666, 264, 2063, 2445, 361, 11, 291, 483, 4018, 8889, 13, 51369, 51369, 13157, 11, 562, 2031, 307, 568, 11, 550, 288, 307, 568, 11, 293, 283, 295, 2031, 307, 611, 568, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1457537066551947, "compression_ratio": 1.6781609195402298, "no_speech_prob": 2.1233543066045968e-06}, {"id": 70, "seek": 33790, "start": 353.56, "end": 358.0, "text": " Plugging this into the cost function j, you get zero squared.", "tokens": [50364, 13428, 337, 341, 1412, 992, 11, 562, 2031, 307, 502, 11, 550, 288, 307, 502, 13, 50587, 50587, 1133, 261, 307, 611, 502, 11, 550, 283, 295, 2031, 6915, 502, 13, 50823, 50823, 407, 283, 295, 2031, 6915, 288, 337, 341, 700, 3097, 1365, 11, 293, 264, 2649, 307, 4018, 13, 51147, 51147, 40740, 3249, 341, 666, 264, 2063, 2445, 361, 11, 291, 483, 4018, 8889, 13, 51369, 51369, 13157, 11, 562, 2031, 307, 568, 11, 550, 288, 307, 568, 11, 293, 283, 295, 2031, 307, 611, 568, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1457537066551947, "compression_ratio": 1.6781609195402298, "no_speech_prob": 2.1233543066045968e-06}, {"id": 71, "seek": 33790, "start": 358.0, "end": 365.03999999999996, "text": " Similarly, when x is 2, then y is 2, and f of x is also 2.", "tokens": [50364, 13428, 337, 341, 1412, 992, 11, 562, 2031, 307, 502, 11, 550, 288, 307, 502, 13, 50587, 50587, 1133, 261, 307, 611, 502, 11, 550, 283, 295, 2031, 6915, 502, 13, 50823, 50823, 407, 283, 295, 2031, 6915, 288, 337, 341, 700, 3097, 1365, 11, 293, 264, 2649, 307, 4018, 13, 51147, 51147, 40740, 3249, 341, 666, 264, 2063, 2445, 361, 11, 291, 483, 4018, 8889, 13, 51369, 51369, 13157, 11, 562, 2031, 307, 568, 11, 550, 288, 307, 568, 11, 293, 283, 295, 2031, 307, 611, 568, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1457537066551947, "compression_ratio": 1.6781609195402298, "no_speech_prob": 2.1233543066045968e-06}, {"id": 72, "seek": 36504, "start": 365.04, "end": 369.32, "text": " So again, f of x equals y for the second training example.", "tokens": [50364, 407, 797, 11, 283, 295, 2031, 6915, 288, 337, 264, 1150, 3097, 1365, 13, 50578, 50578, 682, 264, 2063, 2445, 11, 264, 8889, 6713, 337, 264, 1150, 1365, 307, 611, 4018, 8889, 13, 50878, 50878, 6288, 11, 562, 2031, 307, 805, 11, 550, 288, 307, 805, 11, 293, 283, 295, 805, 307, 611, 805, 13, 51266, 51266, 682, 264, 2063, 2445, 11, 264, 2636, 8889, 6713, 1433, 307, 611, 4018, 8889, 13, 51490, 51490], "temperature": 0.0, "avg_logprob": -0.10577457829525597, "compression_ratio": 1.8445945945945945, "no_speech_prob": 1.1726378943421878e-06}, {"id": 73, "seek": 36504, "start": 369.32, "end": 375.32, "text": " In the cost function, the squared error for the second example is also zero squared.", "tokens": [50364, 407, 797, 11, 283, 295, 2031, 6915, 288, 337, 264, 1150, 3097, 1365, 13, 50578, 50578, 682, 264, 2063, 2445, 11, 264, 8889, 6713, 337, 264, 1150, 1365, 307, 611, 4018, 8889, 13, 50878, 50878, 6288, 11, 562, 2031, 307, 805, 11, 550, 288, 307, 805, 11, 293, 283, 295, 805, 307, 611, 805, 13, 51266, 51266, 682, 264, 2063, 2445, 11, 264, 2636, 8889, 6713, 1433, 307, 611, 4018, 8889, 13, 51490, 51490], "temperature": 0.0, "avg_logprob": -0.10577457829525597, "compression_ratio": 1.8445945945945945, "no_speech_prob": 1.1726378943421878e-06}, {"id": 74, "seek": 36504, "start": 375.32, "end": 383.08000000000004, "text": " Finally, when x is 3, then y is 3, and f of 3 is also 3.", "tokens": [50364, 407, 797, 11, 283, 295, 2031, 6915, 288, 337, 264, 1150, 3097, 1365, 13, 50578, 50578, 682, 264, 2063, 2445, 11, 264, 8889, 6713, 337, 264, 1150, 1365, 307, 611, 4018, 8889, 13, 50878, 50878, 6288, 11, 562, 2031, 307, 805, 11, 550, 288, 307, 805, 11, 293, 283, 295, 805, 307, 611, 805, 13, 51266, 51266, 682, 264, 2063, 2445, 11, 264, 2636, 8889, 6713, 1433, 307, 611, 4018, 8889, 13, 51490, 51490], "temperature": 0.0, "avg_logprob": -0.10577457829525597, "compression_ratio": 1.8445945945945945, "no_speech_prob": 1.1726378943421878e-06}, {"id": 75, "seek": 36504, "start": 383.08000000000004, "end": 387.56, "text": " In the cost function, the third squared error term is also zero squared.", "tokens": [50364, 407, 797, 11, 283, 295, 2031, 6915, 288, 337, 264, 1150, 3097, 1365, 13, 50578, 50578, 682, 264, 2063, 2445, 11, 264, 8889, 6713, 337, 264, 1150, 1365, 307, 611, 4018, 8889, 13, 50878, 50878, 6288, 11, 562, 2031, 307, 805, 11, 550, 288, 307, 805, 11, 293, 283, 295, 805, 307, 611, 805, 13, 51266, 51266, 682, 264, 2063, 2445, 11, 264, 2636, 8889, 6713, 1433, 307, 611, 4018, 8889, 13, 51490, 51490], "temperature": 0.0, "avg_logprob": -0.10577457829525597, "compression_ratio": 1.8445945945945945, "no_speech_prob": 1.1726378943421878e-06}, {"id": 76, "seek": 38756, "start": 387.56, "end": 395.48, "text": " So for all three examples in this training set, f of x i equals y i for each training", "tokens": [50364, 407, 337, 439, 1045, 5110, 294, 341, 3097, 992, 11, 283, 295, 2031, 741, 6915, 288, 741, 337, 1184, 3097, 50760, 50760, 1365, 741, 13, 50842, 50842, 407, 283, 295, 2031, 741, 3175, 288, 741, 307, 4018, 13, 51156, 51156, 407, 337, 341, 1729, 1412, 992, 11, 562, 261, 307, 502, 11, 550, 264, 2063, 361, 307, 2681, 281, 4018, 13, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.09017122708834134, "compression_ratio": 1.5333333333333334, "no_speech_prob": 3.156117713842832e-07}, {"id": 77, "seek": 38756, "start": 395.48, "end": 397.12, "text": " example i.", "tokens": [50364, 407, 337, 439, 1045, 5110, 294, 341, 3097, 992, 11, 283, 295, 2031, 741, 6915, 288, 741, 337, 1184, 3097, 50760, 50760, 1365, 741, 13, 50842, 50842, 407, 283, 295, 2031, 741, 3175, 288, 741, 307, 4018, 13, 51156, 51156, 407, 337, 341, 1729, 1412, 992, 11, 562, 261, 307, 502, 11, 550, 264, 2063, 361, 307, 2681, 281, 4018, 13, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.09017122708834134, "compression_ratio": 1.5333333333333334, "no_speech_prob": 3.156117713842832e-07}, {"id": 78, "seek": 38756, "start": 397.12, "end": 403.4, "text": " So f of x i minus y i is zero.", "tokens": [50364, 407, 337, 439, 1045, 5110, 294, 341, 3097, 992, 11, 283, 295, 2031, 741, 6915, 288, 741, 337, 1184, 3097, 50760, 50760, 1365, 741, 13, 50842, 50842, 407, 283, 295, 2031, 741, 3175, 288, 741, 307, 4018, 13, 51156, 51156, 407, 337, 341, 1729, 1412, 992, 11, 562, 261, 307, 502, 11, 550, 264, 2063, 361, 307, 2681, 281, 4018, 13, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.09017122708834134, "compression_ratio": 1.5333333333333334, "no_speech_prob": 3.156117713842832e-07}, {"id": 79, "seek": 38756, "start": 403.4, "end": 412.84000000000003, "text": " So for this particular data set, when w is 1, then the cost j is equal to zero.", "tokens": [50364, 407, 337, 439, 1045, 5110, 294, 341, 3097, 992, 11, 283, 295, 2031, 741, 6915, 288, 741, 337, 1184, 3097, 50760, 50760, 1365, 741, 13, 50842, 50842, 407, 283, 295, 2031, 741, 3175, 288, 741, 307, 4018, 13, 51156, 51156, 407, 337, 341, 1729, 1412, 992, 11, 562, 261, 307, 502, 11, 550, 264, 2063, 361, 307, 2681, 281, 4018, 13, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.09017122708834134, "compression_ratio": 1.5333333333333334, "no_speech_prob": 3.156117713842832e-07}, {"id": 80, "seek": 41284, "start": 412.84, "end": 418.4, "text": " Now what you can do on the right is plot the cost function j.", "tokens": [50364, 823, 437, 291, 393, 360, 322, 264, 558, 307, 7542, 264, 2063, 2445, 361, 13, 50642, 50642, 400, 3449, 300, 570, 264, 2063, 2445, 307, 257, 2445, 295, 264, 13075, 261, 11, 264, 12750, 50970, 50970, 10298, 307, 586, 21335, 261, 293, 406, 2031, 13, 51185, 51185, 400, 264, 9429, 10298, 307, 586, 361, 293, 406, 288, 13, 51502, 51502, 407, 291, 362, 361, 295, 502, 6915, 281, 4018, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.12150714204118059, "compression_ratio": 1.617283950617284, "no_speech_prob": 3.905430730810622e-06}, {"id": 81, "seek": 41284, "start": 418.4, "end": 424.96, "text": " And notice that because the cost function is a function of the parameter w, the horizontal", "tokens": [50364, 823, 437, 291, 393, 360, 322, 264, 558, 307, 7542, 264, 2063, 2445, 361, 13, 50642, 50642, 400, 3449, 300, 570, 264, 2063, 2445, 307, 257, 2445, 295, 264, 13075, 261, 11, 264, 12750, 50970, 50970, 10298, 307, 586, 21335, 261, 293, 406, 2031, 13, 51185, 51185, 400, 264, 9429, 10298, 307, 586, 361, 293, 406, 288, 13, 51502, 51502, 407, 291, 362, 361, 295, 502, 6915, 281, 4018, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.12150714204118059, "compression_ratio": 1.617283950617284, "no_speech_prob": 3.905430730810622e-06}, {"id": 82, "seek": 41284, "start": 424.96, "end": 429.26, "text": " axis is now labeled w and not x.", "tokens": [50364, 823, 437, 291, 393, 360, 322, 264, 558, 307, 7542, 264, 2063, 2445, 361, 13, 50642, 50642, 400, 3449, 300, 570, 264, 2063, 2445, 307, 257, 2445, 295, 264, 13075, 261, 11, 264, 12750, 50970, 50970, 10298, 307, 586, 21335, 261, 293, 406, 2031, 13, 51185, 51185, 400, 264, 9429, 10298, 307, 586, 361, 293, 406, 288, 13, 51502, 51502, 407, 291, 362, 361, 295, 502, 6915, 281, 4018, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.12150714204118059, "compression_ratio": 1.617283950617284, "no_speech_prob": 3.905430730810622e-06}, {"id": 83, "seek": 41284, "start": 429.26, "end": 435.59999999999997, "text": " And the vertical axis is now j and not y.", "tokens": [50364, 823, 437, 291, 393, 360, 322, 264, 558, 307, 7542, 264, 2063, 2445, 361, 13, 50642, 50642, 400, 3449, 300, 570, 264, 2063, 2445, 307, 257, 2445, 295, 264, 13075, 261, 11, 264, 12750, 50970, 50970, 10298, 307, 586, 21335, 261, 293, 406, 2031, 13, 51185, 51185, 400, 264, 9429, 10298, 307, 586, 361, 293, 406, 288, 13, 51502, 51502, 407, 291, 362, 361, 295, 502, 6915, 281, 4018, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.12150714204118059, "compression_ratio": 1.617283950617284, "no_speech_prob": 3.905430730810622e-06}, {"id": 84, "seek": 41284, "start": 435.59999999999997, "end": 440.64, "text": " So you have j of 1 equals to zero.", "tokens": [50364, 823, 437, 291, 393, 360, 322, 264, 558, 307, 7542, 264, 2063, 2445, 361, 13, 50642, 50642, 400, 3449, 300, 570, 264, 2063, 2445, 307, 257, 2445, 295, 264, 13075, 261, 11, 264, 12750, 50970, 50970, 10298, 307, 586, 21335, 261, 293, 406, 2031, 13, 51185, 51185, 400, 264, 9429, 10298, 307, 586, 361, 293, 406, 288, 13, 51502, 51502, 407, 291, 362, 361, 295, 502, 6915, 281, 4018, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.12150714204118059, "compression_ratio": 1.617283950617284, "no_speech_prob": 3.905430730810622e-06}, {"id": 85, "seek": 44064, "start": 440.64, "end": 447.21999999999997, "text": " In other words, when w equals 1, j of w is zero.", "tokens": [50364, 682, 661, 2283, 11, 562, 261, 6915, 502, 11, 361, 295, 261, 307, 4018, 13, 50693, 50693, 407, 718, 385, 352, 2286, 293, 7542, 300, 13, 50878, 50878, 823, 718, 311, 574, 412, 577, 283, 293, 361, 1319, 337, 819, 4190, 295, 261, 13, 51152, 51152, 261, 393, 747, 322, 257, 3613, 295, 4190, 11, 558, 30, 51270, 51270, 407, 261, 393, 747, 322, 3671, 4190, 11, 261, 393, 312, 4018, 11, 293, 309, 393, 747, 322, 3353, 4190, 886, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.07111667184268727, "compression_ratio": 1.608187134502924, "no_speech_prob": 1.9033687976843794e-06}, {"id": 86, "seek": 44064, "start": 447.21999999999997, "end": 450.91999999999996, "text": " So let me go ahead and plot that.", "tokens": [50364, 682, 661, 2283, 11, 562, 261, 6915, 502, 11, 361, 295, 261, 307, 4018, 13, 50693, 50693, 407, 718, 385, 352, 2286, 293, 7542, 300, 13, 50878, 50878, 823, 718, 311, 574, 412, 577, 283, 293, 361, 1319, 337, 819, 4190, 295, 261, 13, 51152, 51152, 261, 393, 747, 322, 257, 3613, 295, 4190, 11, 558, 30, 51270, 51270, 407, 261, 393, 747, 322, 3671, 4190, 11, 261, 393, 312, 4018, 11, 293, 309, 393, 747, 322, 3353, 4190, 886, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.07111667184268727, "compression_ratio": 1.608187134502924, "no_speech_prob": 1.9033687976843794e-06}, {"id": 87, "seek": 44064, "start": 450.91999999999996, "end": 456.4, "text": " Now let's look at how f and j change for different values of w.", "tokens": [50364, 682, 661, 2283, 11, 562, 261, 6915, 502, 11, 361, 295, 261, 307, 4018, 13, 50693, 50693, 407, 718, 385, 352, 2286, 293, 7542, 300, 13, 50878, 50878, 823, 718, 311, 574, 412, 577, 283, 293, 361, 1319, 337, 819, 4190, 295, 261, 13, 51152, 51152, 261, 393, 747, 322, 257, 3613, 295, 4190, 11, 558, 30, 51270, 51270, 407, 261, 393, 747, 322, 3671, 4190, 11, 261, 393, 312, 4018, 11, 293, 309, 393, 747, 322, 3353, 4190, 886, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.07111667184268727, "compression_ratio": 1.608187134502924, "no_speech_prob": 1.9033687976843794e-06}, {"id": 88, "seek": 44064, "start": 456.4, "end": 458.76, "text": " w can take on a range of values, right?", "tokens": [50364, 682, 661, 2283, 11, 562, 261, 6915, 502, 11, 361, 295, 261, 307, 4018, 13, 50693, 50693, 407, 718, 385, 352, 2286, 293, 7542, 300, 13, 50878, 50878, 823, 718, 311, 574, 412, 577, 283, 293, 361, 1319, 337, 819, 4190, 295, 261, 13, 51152, 51152, 261, 393, 747, 322, 257, 3613, 295, 4190, 11, 558, 30, 51270, 51270, 407, 261, 393, 747, 322, 3671, 4190, 11, 261, 393, 312, 4018, 11, 293, 309, 393, 747, 322, 3353, 4190, 886, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.07111667184268727, "compression_ratio": 1.608187134502924, "no_speech_prob": 1.9033687976843794e-06}, {"id": 89, "seek": 44064, "start": 458.76, "end": 466.14, "text": " So w can take on negative values, w can be zero, and it can take on positive values too.", "tokens": [50364, 682, 661, 2283, 11, 562, 261, 6915, 502, 11, 361, 295, 261, 307, 4018, 13, 50693, 50693, 407, 718, 385, 352, 2286, 293, 7542, 300, 13, 50878, 50878, 823, 718, 311, 574, 412, 577, 283, 293, 361, 1319, 337, 819, 4190, 295, 261, 13, 51152, 51152, 261, 393, 747, 322, 257, 3613, 295, 4190, 11, 558, 30, 51270, 51270, 407, 261, 393, 747, 322, 3671, 4190, 11, 261, 393, 312, 4018, 11, 293, 309, 393, 747, 322, 3353, 4190, 886, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.07111667184268727, "compression_ratio": 1.608187134502924, "no_speech_prob": 1.9033687976843794e-06}, {"id": 90, "seek": 46614, "start": 466.14, "end": 470.84, "text": " So what if w is equal to 0.5 instead of 1?", "tokens": [50364, 407, 437, 498, 261, 307, 2681, 281, 1958, 13, 20, 2602, 295, 502, 30, 50599, 50599, 708, 576, 613, 24877, 574, 411, 550, 30, 50757, 50757, 961, 311, 352, 2286, 293, 7542, 300, 13, 50837, 50837, 407, 718, 311, 992, 261, 281, 312, 2681, 281, 1958, 13, 20, 13, 51029, 51029, 400, 294, 341, 1389, 11, 264, 2445, 283, 295, 2031, 586, 1542, 411, 341, 11, 307, 17962, 365, 257, 13525, 2681, 51371, 51371, 281, 1958, 13, 20, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.11122260036238704, "compression_ratio": 1.5061728395061729, "no_speech_prob": 7.224376190606563e-07}, {"id": 91, "seek": 46614, "start": 470.84, "end": 474.0, "text": " What would these graphs look like then?", "tokens": [50364, 407, 437, 498, 261, 307, 2681, 281, 1958, 13, 20, 2602, 295, 502, 30, 50599, 50599, 708, 576, 613, 24877, 574, 411, 550, 30, 50757, 50757, 961, 311, 352, 2286, 293, 7542, 300, 13, 50837, 50837, 407, 718, 311, 992, 261, 281, 312, 2681, 281, 1958, 13, 20, 13, 51029, 51029, 400, 294, 341, 1389, 11, 264, 2445, 283, 295, 2031, 586, 1542, 411, 341, 11, 307, 17962, 365, 257, 13525, 2681, 51371, 51371, 281, 1958, 13, 20, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.11122260036238704, "compression_ratio": 1.5061728395061729, "no_speech_prob": 7.224376190606563e-07}, {"id": 92, "seek": 46614, "start": 474.0, "end": 475.59999999999997, "text": " Let's go ahead and plot that.", "tokens": [50364, 407, 437, 498, 261, 307, 2681, 281, 1958, 13, 20, 2602, 295, 502, 30, 50599, 50599, 708, 576, 613, 24877, 574, 411, 550, 30, 50757, 50757, 961, 311, 352, 2286, 293, 7542, 300, 13, 50837, 50837, 407, 718, 311, 992, 261, 281, 312, 2681, 281, 1958, 13, 20, 13, 51029, 51029, 400, 294, 341, 1389, 11, 264, 2445, 283, 295, 2031, 586, 1542, 411, 341, 11, 307, 17962, 365, 257, 13525, 2681, 51371, 51371, 281, 1958, 13, 20, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.11122260036238704, "compression_ratio": 1.5061728395061729, "no_speech_prob": 7.224376190606563e-07}, {"id": 93, "seek": 46614, "start": 475.59999999999997, "end": 479.44, "text": " So let's set w to be equal to 0.5.", "tokens": [50364, 407, 437, 498, 261, 307, 2681, 281, 1958, 13, 20, 2602, 295, 502, 30, 50599, 50599, 708, 576, 613, 24877, 574, 411, 550, 30, 50757, 50757, 961, 311, 352, 2286, 293, 7542, 300, 13, 50837, 50837, 407, 718, 311, 992, 261, 281, 312, 2681, 281, 1958, 13, 20, 13, 51029, 51029, 400, 294, 341, 1389, 11, 264, 2445, 283, 295, 2031, 586, 1542, 411, 341, 11, 307, 17962, 365, 257, 13525, 2681, 51371, 51371, 281, 1958, 13, 20, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.11122260036238704, "compression_ratio": 1.5061728395061729, "no_speech_prob": 7.224376190606563e-07}, {"id": 94, "seek": 46614, "start": 479.44, "end": 486.28, "text": " And in this case, the function f of x now looks like this, is aligned with a slope equal", "tokens": [50364, 407, 437, 498, 261, 307, 2681, 281, 1958, 13, 20, 2602, 295, 502, 30, 50599, 50599, 708, 576, 613, 24877, 574, 411, 550, 30, 50757, 50757, 961, 311, 352, 2286, 293, 7542, 300, 13, 50837, 50837, 407, 718, 311, 992, 261, 281, 312, 2681, 281, 1958, 13, 20, 13, 51029, 51029, 400, 294, 341, 1389, 11, 264, 2445, 283, 295, 2031, 586, 1542, 411, 341, 11, 307, 17962, 365, 257, 13525, 2681, 51371, 51371, 281, 1958, 13, 20, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.11122260036238704, "compression_ratio": 1.5061728395061729, "no_speech_prob": 7.224376190606563e-07}, {"id": 95, "seek": 46614, "start": 486.28, "end": 489.59999999999997, "text": " to 0.5.", "tokens": [50364, 407, 437, 498, 261, 307, 2681, 281, 1958, 13, 20, 2602, 295, 502, 30, 50599, 50599, 708, 576, 613, 24877, 574, 411, 550, 30, 50757, 50757, 961, 311, 352, 2286, 293, 7542, 300, 13, 50837, 50837, 407, 718, 311, 992, 261, 281, 312, 2681, 281, 1958, 13, 20, 13, 51029, 51029, 400, 294, 341, 1389, 11, 264, 2445, 283, 295, 2031, 586, 1542, 411, 341, 11, 307, 17962, 365, 257, 13525, 2681, 51371, 51371, 281, 1958, 13, 20, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.11122260036238704, "compression_ratio": 1.5061728395061729, "no_speech_prob": 7.224376190606563e-07}, {"id": 96, "seek": 48960, "start": 489.6, "end": 496.88, "text": " And let's also compute the cost j when w is 0.5.", "tokens": [50364, 400, 718, 311, 611, 14722, 264, 2063, 361, 562, 261, 307, 1958, 13, 20, 13, 50728, 50728, 9647, 336, 300, 264, 2063, 2445, 307, 13389, 264, 8889, 6713, 420, 2649, 1296, 264, 50932, 50932, 14109, 2158, 300, 307, 288, 2385, 741, 11, 597, 307, 283, 295, 2031, 741, 11, 293, 264, 2074, 2158, 300, 307, 288, 741, 337, 51494, 51494, 1184, 1365, 741, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.10826764387242935, "compression_ratio": 1.4782608695652173, "no_speech_prob": 2.190770601373515e-06}, {"id": 97, "seek": 48960, "start": 496.88, "end": 500.96000000000004, "text": " Recall that the cost function is measuring the squared error or difference between the", "tokens": [50364, 400, 718, 311, 611, 14722, 264, 2063, 361, 562, 261, 307, 1958, 13, 20, 13, 50728, 50728, 9647, 336, 300, 264, 2063, 2445, 307, 13389, 264, 8889, 6713, 420, 2649, 1296, 264, 50932, 50932, 14109, 2158, 300, 307, 288, 2385, 741, 11, 597, 307, 283, 295, 2031, 741, 11, 293, 264, 2074, 2158, 300, 307, 288, 741, 337, 51494, 51494, 1184, 1365, 741, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.10826764387242935, "compression_ratio": 1.4782608695652173, "no_speech_prob": 2.190770601373515e-06}, {"id": 98, "seek": 48960, "start": 500.96000000000004, "end": 512.2, "text": " estimated value that is y hat i, which is f of x i, and the true value that is y i for", "tokens": [50364, 400, 718, 311, 611, 14722, 264, 2063, 361, 562, 261, 307, 1958, 13, 20, 13, 50728, 50728, 9647, 336, 300, 264, 2063, 2445, 307, 13389, 264, 8889, 6713, 420, 2649, 1296, 264, 50932, 50932, 14109, 2158, 300, 307, 288, 2385, 741, 11, 597, 307, 283, 295, 2031, 741, 11, 293, 264, 2074, 2158, 300, 307, 288, 741, 337, 51494, 51494, 1184, 1365, 741, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.10826764387242935, "compression_ratio": 1.4782608695652173, "no_speech_prob": 2.190770601373515e-06}, {"id": 99, "seek": 48960, "start": 512.2, "end": 514.5600000000001, "text": " each example i.", "tokens": [50364, 400, 718, 311, 611, 14722, 264, 2063, 361, 562, 261, 307, 1958, 13, 20, 13, 50728, 50728, 9647, 336, 300, 264, 2063, 2445, 307, 13389, 264, 8889, 6713, 420, 2649, 1296, 264, 50932, 50932, 14109, 2158, 300, 307, 288, 2385, 741, 11, 597, 307, 283, 295, 2031, 741, 11, 293, 264, 2074, 2158, 300, 307, 288, 741, 337, 51494, 51494, 1184, 1365, 741, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.10826764387242935, "compression_ratio": 1.4782608695652173, "no_speech_prob": 2.190770601373515e-06}, {"id": 100, "seek": 51456, "start": 514.56, "end": 520.56, "text": " So visually you can see that the error or difference is equal to the height of this", "tokens": [50364, 407, 19622, 291, 393, 536, 300, 264, 6713, 420, 2649, 307, 2681, 281, 264, 6681, 295, 341, 50664, 50664, 9429, 1622, 510, 562, 2031, 307, 2681, 281, 502, 11, 570, 341, 707, 1622, 307, 264, 7417, 1296, 264, 3539, 51032, 51032, 2158, 295, 288, 293, 264, 2158, 300, 264, 2445, 283, 19147, 11, 597, 307, 257, 857, 3052, 760, 510, 13, 51412, 51412], "temperature": 0.0, "avg_logprob": -0.09523158440223108, "compression_ratio": 1.5917159763313609, "no_speech_prob": 1.963793920367607e-06}, {"id": 101, "seek": 51456, "start": 520.56, "end": 527.92, "text": " vertical line here when x is equal to 1, because this little line is the gap between the actual", "tokens": [50364, 407, 19622, 291, 393, 536, 300, 264, 6713, 420, 2649, 307, 2681, 281, 264, 6681, 295, 341, 50664, 50664, 9429, 1622, 510, 562, 2031, 307, 2681, 281, 502, 11, 570, 341, 707, 1622, 307, 264, 7417, 1296, 264, 3539, 51032, 51032, 2158, 295, 288, 293, 264, 2158, 300, 264, 2445, 283, 19147, 11, 597, 307, 257, 857, 3052, 760, 510, 13, 51412, 51412], "temperature": 0.0, "avg_logprob": -0.09523158440223108, "compression_ratio": 1.5917159763313609, "no_speech_prob": 1.963793920367607e-06}, {"id": 102, "seek": 51456, "start": 527.92, "end": 535.52, "text": " value of y and the value that the function f predicted, which is a bit further down here.", "tokens": [50364, 407, 19622, 291, 393, 536, 300, 264, 6713, 420, 2649, 307, 2681, 281, 264, 6681, 295, 341, 50664, 50664, 9429, 1622, 510, 562, 2031, 307, 2681, 281, 502, 11, 570, 341, 707, 1622, 307, 264, 7417, 1296, 264, 3539, 51032, 51032, 2158, 295, 288, 293, 264, 2158, 300, 264, 2445, 283, 19147, 11, 597, 307, 257, 857, 3052, 760, 510, 13, 51412, 51412], "temperature": 0.0, "avg_logprob": -0.09523158440223108, "compression_ratio": 1.5917159763313609, "no_speech_prob": 1.963793920367607e-06}, {"id": 103, "seek": 53552, "start": 535.52, "end": 545.36, "text": " So for this first example, when x is 1, f of x is 0.5, so the squared error on the first", "tokens": [50364, 407, 337, 341, 700, 1365, 11, 562, 2031, 307, 502, 11, 283, 295, 2031, 307, 1958, 13, 20, 11, 370, 264, 8889, 6713, 322, 264, 700, 50856, 50856, 1365, 307, 1958, 13, 20, 3175, 502, 8889, 13, 51148, 51148, 5459, 264, 2063, 2445, 486, 2408, 670, 439, 264, 3097, 5110, 294, 264, 3097, 992, 13, 51386, 51386, 407, 718, 311, 352, 322, 281, 264, 1150, 3097, 1365, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.07019107209311591, "compression_ratio": 1.6776315789473684, "no_speech_prob": 4.0525301869820396e-07}, {"id": 104, "seek": 53552, "start": 545.36, "end": 551.1999999999999, "text": " example is 0.5 minus 1 squared.", "tokens": [50364, 407, 337, 341, 700, 1365, 11, 562, 2031, 307, 502, 11, 283, 295, 2031, 307, 1958, 13, 20, 11, 370, 264, 8889, 6713, 322, 264, 700, 50856, 50856, 1365, 307, 1958, 13, 20, 3175, 502, 8889, 13, 51148, 51148, 5459, 264, 2063, 2445, 486, 2408, 670, 439, 264, 3097, 5110, 294, 264, 3097, 992, 13, 51386, 51386, 407, 718, 311, 352, 322, 281, 264, 1150, 3097, 1365, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.07019107209311591, "compression_ratio": 1.6776315789473684, "no_speech_prob": 4.0525301869820396e-07}, {"id": 105, "seek": 53552, "start": 551.1999999999999, "end": 555.96, "text": " Remember the cost function will sum over all the training examples in the training set.", "tokens": [50364, 407, 337, 341, 700, 1365, 11, 562, 2031, 307, 502, 11, 283, 295, 2031, 307, 1958, 13, 20, 11, 370, 264, 8889, 6713, 322, 264, 700, 50856, 50856, 1365, 307, 1958, 13, 20, 3175, 502, 8889, 13, 51148, 51148, 5459, 264, 2063, 2445, 486, 2408, 670, 439, 264, 3097, 5110, 294, 264, 3097, 992, 13, 51386, 51386, 407, 718, 311, 352, 322, 281, 264, 1150, 3097, 1365, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.07019107209311591, "compression_ratio": 1.6776315789473684, "no_speech_prob": 4.0525301869820396e-07}, {"id": 106, "seek": 53552, "start": 555.96, "end": 559.68, "text": " So let's go on to the second training example.", "tokens": [50364, 407, 337, 341, 700, 1365, 11, 562, 2031, 307, 502, 11, 283, 295, 2031, 307, 1958, 13, 20, 11, 370, 264, 8889, 6713, 322, 264, 700, 50856, 50856, 1365, 307, 1958, 13, 20, 3175, 502, 8889, 13, 51148, 51148, 5459, 264, 2063, 2445, 486, 2408, 670, 439, 264, 3097, 5110, 294, 264, 3097, 992, 13, 51386, 51386, 407, 718, 311, 352, 322, 281, 264, 1150, 3097, 1365, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.07019107209311591, "compression_ratio": 1.6776315789473684, "no_speech_prob": 4.0525301869820396e-07}, {"id": 107, "seek": 55968, "start": 559.68, "end": 570.0799999999999, "text": " When x is 2, the model is predicting f of x is 1, and the actual value of y is 2.", "tokens": [50364, 1133, 2031, 307, 568, 11, 264, 2316, 307, 32884, 283, 295, 2031, 307, 502, 11, 293, 264, 3539, 2158, 295, 288, 307, 568, 13, 50884, 50884, 407, 264, 6713, 337, 264, 1150, 1365, 307, 2681, 281, 264, 6681, 295, 341, 707, 1622, 9469, 51144, 51144, 510, 11, 293, 264, 8889, 6713, 307, 264, 3732, 295, 264, 4641, 295, 341, 1622, 9469, 11, 370, 291, 51510, 51510, 483, 502, 3175, 568, 8889, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.10796024924830387, "compression_ratio": 1.6829268292682926, "no_speech_prob": 2.2603121578868013e-06}, {"id": 108, "seek": 55968, "start": 570.0799999999999, "end": 575.28, "text": " So the error for the second example is equal to the height of this little line segment", "tokens": [50364, 1133, 2031, 307, 568, 11, 264, 2316, 307, 32884, 283, 295, 2031, 307, 502, 11, 293, 264, 3539, 2158, 295, 288, 307, 568, 13, 50884, 50884, 407, 264, 6713, 337, 264, 1150, 1365, 307, 2681, 281, 264, 6681, 295, 341, 707, 1622, 9469, 51144, 51144, 510, 11, 293, 264, 8889, 6713, 307, 264, 3732, 295, 264, 4641, 295, 341, 1622, 9469, 11, 370, 291, 51510, 51510, 483, 502, 3175, 568, 8889, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.10796024924830387, "compression_ratio": 1.6829268292682926, "no_speech_prob": 2.2603121578868013e-06}, {"id": 109, "seek": 55968, "start": 575.28, "end": 582.5999999999999, "text": " here, and the squared error is the square of the length of this line segment, so you", "tokens": [50364, 1133, 2031, 307, 568, 11, 264, 2316, 307, 32884, 283, 295, 2031, 307, 502, 11, 293, 264, 3539, 2158, 295, 288, 307, 568, 13, 50884, 50884, 407, 264, 6713, 337, 264, 1150, 1365, 307, 2681, 281, 264, 6681, 295, 341, 707, 1622, 9469, 51144, 51144, 510, 11, 293, 264, 8889, 6713, 307, 264, 3732, 295, 264, 4641, 295, 341, 1622, 9469, 11, 370, 291, 51510, 51510, 483, 502, 3175, 568, 8889, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.10796024924830387, "compression_ratio": 1.6829268292682926, "no_speech_prob": 2.2603121578868013e-06}, {"id": 110, "seek": 55968, "start": 582.5999999999999, "end": 586.8399999999999, "text": " get 1 minus 2 squared.", "tokens": [50364, 1133, 2031, 307, 568, 11, 264, 2316, 307, 32884, 283, 295, 2031, 307, 502, 11, 293, 264, 3539, 2158, 295, 288, 307, 568, 13, 50884, 50884, 407, 264, 6713, 337, 264, 1150, 1365, 307, 2681, 281, 264, 6681, 295, 341, 707, 1622, 9469, 51144, 51144, 510, 11, 293, 264, 8889, 6713, 307, 264, 3732, 295, 264, 4641, 295, 341, 1622, 9469, 11, 370, 291, 51510, 51510, 483, 502, 3175, 568, 8889, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.10796024924830387, "compression_ratio": 1.6829268292682926, "no_speech_prob": 2.2603121578868013e-06}, {"id": 111, "seek": 58684, "start": 586.84, "end": 593.4, "text": " Let's do the third example. Repeating this process, the error here, also shown by this", "tokens": [50364, 961, 311, 360, 264, 2636, 1365, 13, 24927, 990, 341, 1399, 11, 264, 6713, 510, 11, 611, 4898, 538, 341, 50692, 50692, 1622, 9469, 11, 307, 502, 13, 20, 3175, 805, 8889, 13, 51018, 51018, 3087, 321, 2408, 493, 439, 295, 613, 2115, 11, 597, 4523, 484, 281, 312, 2681, 281, 805, 13, 20, 13, 51334, 51334, 1396, 321, 12972, 341, 1433, 538, 502, 670, 568, 76, 11, 689, 275, 307, 264, 1230, 295, 3097, 5110, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.09773389204048816, "compression_ratio": 1.443298969072165, "no_speech_prob": 3.1875515560386702e-06}, {"id": 112, "seek": 58684, "start": 593.4, "end": 599.9200000000001, "text": " line segment, is 1.5 minus 3 squared.", "tokens": [50364, 961, 311, 360, 264, 2636, 1365, 13, 24927, 990, 341, 1399, 11, 264, 6713, 510, 11, 611, 4898, 538, 341, 50692, 50692, 1622, 9469, 11, 307, 502, 13, 20, 3175, 805, 8889, 13, 51018, 51018, 3087, 321, 2408, 493, 439, 295, 613, 2115, 11, 597, 4523, 484, 281, 312, 2681, 281, 805, 13, 20, 13, 51334, 51334, 1396, 321, 12972, 341, 1433, 538, 502, 670, 568, 76, 11, 689, 275, 307, 264, 1230, 295, 3097, 5110, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.09773389204048816, "compression_ratio": 1.443298969072165, "no_speech_prob": 3.1875515560386702e-06}, {"id": 113, "seek": 58684, "start": 599.9200000000001, "end": 606.24, "text": " Next we sum up all of these terms, which turns out to be equal to 3.5.", "tokens": [50364, 961, 311, 360, 264, 2636, 1365, 13, 24927, 990, 341, 1399, 11, 264, 6713, 510, 11, 611, 4898, 538, 341, 50692, 50692, 1622, 9469, 11, 307, 502, 13, 20, 3175, 805, 8889, 13, 51018, 51018, 3087, 321, 2408, 493, 439, 295, 613, 2115, 11, 597, 4523, 484, 281, 312, 2681, 281, 805, 13, 20, 13, 51334, 51334, 1396, 321, 12972, 341, 1433, 538, 502, 670, 568, 76, 11, 689, 275, 307, 264, 1230, 295, 3097, 5110, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.09773389204048816, "compression_ratio": 1.443298969072165, "no_speech_prob": 3.1875515560386702e-06}, {"id": 114, "seek": 58684, "start": 606.24, "end": 615.5600000000001, "text": " Then we multiply this term by 1 over 2m, where m is the number of training examples.", "tokens": [50364, 961, 311, 360, 264, 2636, 1365, 13, 24927, 990, 341, 1399, 11, 264, 6713, 510, 11, 611, 4898, 538, 341, 50692, 50692, 1622, 9469, 11, 307, 502, 13, 20, 3175, 805, 8889, 13, 51018, 51018, 3087, 321, 2408, 493, 439, 295, 613, 2115, 11, 597, 4523, 484, 281, 312, 2681, 281, 805, 13, 20, 13, 51334, 51334, 1396, 321, 12972, 341, 1433, 538, 502, 670, 568, 76, 11, 689, 275, 307, 264, 1230, 295, 3097, 5110, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.09773389204048816, "compression_ratio": 1.443298969072165, "no_speech_prob": 3.1875515560386702e-06}, {"id": 115, "seek": 61556, "start": 615.56, "end": 624.56, "text": " Since there are three training examples, m equals 3, so this is equal to 1 over 2 times", "tokens": [50364, 4162, 456, 366, 1045, 3097, 5110, 11, 275, 6915, 805, 11, 370, 341, 307, 2681, 281, 502, 670, 568, 1413, 50814, 50814, 805, 11, 689, 341, 275, 510, 307, 805, 13, 51085, 51085, 759, 321, 589, 484, 264, 5221, 11, 341, 4523, 484, 281, 312, 805, 13, 20, 6666, 538, 1386, 11, 370, 264, 2063, 361, 307, 466, 51502, 51502, 1958, 13, 20419, 13, 51626, 51626, 961, 311, 352, 2286, 293, 7542, 300, 670, 456, 322, 264, 558, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14951184284256167, "compression_ratio": 1.4662921348314606, "no_speech_prob": 1.8162155583922868e-06}, {"id": 116, "seek": 61556, "start": 624.56, "end": 629.9799999999999, "text": " 3, where this m here is 3.", "tokens": [50364, 4162, 456, 366, 1045, 3097, 5110, 11, 275, 6915, 805, 11, 370, 341, 307, 2681, 281, 502, 670, 568, 1413, 50814, 50814, 805, 11, 689, 341, 275, 510, 307, 805, 13, 51085, 51085, 759, 321, 589, 484, 264, 5221, 11, 341, 4523, 484, 281, 312, 805, 13, 20, 6666, 538, 1386, 11, 370, 264, 2063, 361, 307, 466, 51502, 51502, 1958, 13, 20419, 13, 51626, 51626, 961, 311, 352, 2286, 293, 7542, 300, 670, 456, 322, 264, 558, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14951184284256167, "compression_ratio": 1.4662921348314606, "no_speech_prob": 1.8162155583922868e-06}, {"id": 117, "seek": 61556, "start": 629.9799999999999, "end": 638.3199999999999, "text": " If we work out the math, this turns out to be 3.5 divided by 6, so the cost j is about", "tokens": [50364, 4162, 456, 366, 1045, 3097, 5110, 11, 275, 6915, 805, 11, 370, 341, 307, 2681, 281, 502, 670, 568, 1413, 50814, 50814, 805, 11, 689, 341, 275, 510, 307, 805, 13, 51085, 51085, 759, 321, 589, 484, 264, 5221, 11, 341, 4523, 484, 281, 312, 805, 13, 20, 6666, 538, 1386, 11, 370, 264, 2063, 361, 307, 466, 51502, 51502, 1958, 13, 20419, 13, 51626, 51626, 961, 311, 352, 2286, 293, 7542, 300, 670, 456, 322, 264, 558, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14951184284256167, "compression_ratio": 1.4662921348314606, "no_speech_prob": 1.8162155583922868e-06}, {"id": 118, "seek": 61556, "start": 638.3199999999999, "end": 640.8, "text": " 0.58.", "tokens": [50364, 4162, 456, 366, 1045, 3097, 5110, 11, 275, 6915, 805, 11, 370, 341, 307, 2681, 281, 502, 670, 568, 1413, 50814, 50814, 805, 11, 689, 341, 275, 510, 307, 805, 13, 51085, 51085, 759, 321, 589, 484, 264, 5221, 11, 341, 4523, 484, 281, 312, 805, 13, 20, 6666, 538, 1386, 11, 370, 264, 2063, 361, 307, 466, 51502, 51502, 1958, 13, 20419, 13, 51626, 51626, 961, 311, 352, 2286, 293, 7542, 300, 670, 456, 322, 264, 558, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14951184284256167, "compression_ratio": 1.4662921348314606, "no_speech_prob": 1.8162155583922868e-06}, {"id": 119, "seek": 61556, "start": 640.8, "end": 645.4399999999999, "text": " Let's go ahead and plot that over there on the right.", "tokens": [50364, 4162, 456, 366, 1045, 3097, 5110, 11, 275, 6915, 805, 11, 370, 341, 307, 2681, 281, 502, 670, 568, 1413, 50814, 50814, 805, 11, 689, 341, 275, 510, 307, 805, 13, 51085, 51085, 759, 321, 589, 484, 264, 5221, 11, 341, 4523, 484, 281, 312, 805, 13, 20, 6666, 538, 1386, 11, 370, 264, 2063, 361, 307, 466, 51502, 51502, 1958, 13, 20419, 13, 51626, 51626, 961, 311, 352, 2286, 293, 7542, 300, 670, 456, 322, 264, 558, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14951184284256167, "compression_ratio": 1.4662921348314606, "no_speech_prob": 1.8162155583922868e-06}, {"id": 120, "seek": 64544, "start": 645.44, "end": 648.72, "text": " Now let's try one more value for w.", "tokens": [50364, 823, 718, 311, 853, 472, 544, 2158, 337, 261, 13, 50528, 50528, 1012, 466, 498, 261, 6915, 1958, 30, 50664, 50664, 708, 360, 264, 24877, 337, 283, 293, 361, 574, 411, 562, 261, 307, 2681, 281, 1958, 30, 50974, 50974, 467, 4523, 484, 300, 498, 261, 307, 2681, 281, 1958, 11, 550, 283, 295, 2031, 307, 445, 341, 12750, 1622, 300, 307, 51320, 51320, 2293, 322, 264, 2031, 12, 24633, 11, 293, 370, 264, 6713, 337, 1184, 1365, 307, 257, 1622, 300, 1709, 490, 1184, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.07483710599749276, "compression_ratio": 1.563157894736842, "no_speech_prob": 1.6280423551506829e-06}, {"id": 121, "seek": 64544, "start": 648.72, "end": 651.44, "text": " How about if w equals 0?", "tokens": [50364, 823, 718, 311, 853, 472, 544, 2158, 337, 261, 13, 50528, 50528, 1012, 466, 498, 261, 6915, 1958, 30, 50664, 50664, 708, 360, 264, 24877, 337, 283, 293, 361, 574, 411, 562, 261, 307, 2681, 281, 1958, 30, 50974, 50974, 467, 4523, 484, 300, 498, 261, 307, 2681, 281, 1958, 11, 550, 283, 295, 2031, 307, 445, 341, 12750, 1622, 300, 307, 51320, 51320, 2293, 322, 264, 2031, 12, 24633, 11, 293, 370, 264, 6713, 337, 1184, 1365, 307, 257, 1622, 300, 1709, 490, 1184, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.07483710599749276, "compression_ratio": 1.563157894736842, "no_speech_prob": 1.6280423551506829e-06}, {"id": 122, "seek": 64544, "start": 651.44, "end": 657.6400000000001, "text": " What do the graphs for f and j look like when w is equal to 0?", "tokens": [50364, 823, 718, 311, 853, 472, 544, 2158, 337, 261, 13, 50528, 50528, 1012, 466, 498, 261, 6915, 1958, 30, 50664, 50664, 708, 360, 264, 24877, 337, 283, 293, 361, 574, 411, 562, 261, 307, 2681, 281, 1958, 30, 50974, 50974, 467, 4523, 484, 300, 498, 261, 307, 2681, 281, 1958, 11, 550, 283, 295, 2031, 307, 445, 341, 12750, 1622, 300, 307, 51320, 51320, 2293, 322, 264, 2031, 12, 24633, 11, 293, 370, 264, 6713, 337, 1184, 1365, 307, 257, 1622, 300, 1709, 490, 1184, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.07483710599749276, "compression_ratio": 1.563157894736842, "no_speech_prob": 1.6280423551506829e-06}, {"id": 123, "seek": 64544, "start": 657.6400000000001, "end": 664.5600000000001, "text": " It turns out that if w is equal to 0, then f of x is just this horizontal line that is", "tokens": [50364, 823, 718, 311, 853, 472, 544, 2158, 337, 261, 13, 50528, 50528, 1012, 466, 498, 261, 6915, 1958, 30, 50664, 50664, 708, 360, 264, 24877, 337, 283, 293, 361, 574, 411, 562, 261, 307, 2681, 281, 1958, 30, 50974, 50974, 467, 4523, 484, 300, 498, 261, 307, 2681, 281, 1958, 11, 550, 283, 295, 2031, 307, 445, 341, 12750, 1622, 300, 307, 51320, 51320, 2293, 322, 264, 2031, 12, 24633, 11, 293, 370, 264, 6713, 337, 1184, 1365, 307, 257, 1622, 300, 1709, 490, 1184, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.07483710599749276, "compression_ratio": 1.563157894736842, "no_speech_prob": 1.6280423551506829e-06}, {"id": 124, "seek": 64544, "start": 664.5600000000001, "end": 670.6800000000001, "text": " exactly on the x-axis, and so the error for each example is a line that goes from each", "tokens": [50364, 823, 718, 311, 853, 472, 544, 2158, 337, 261, 13, 50528, 50528, 1012, 466, 498, 261, 6915, 1958, 30, 50664, 50664, 708, 360, 264, 24877, 337, 283, 293, 361, 574, 411, 562, 261, 307, 2681, 281, 1958, 30, 50974, 50974, 467, 4523, 484, 300, 498, 261, 307, 2681, 281, 1958, 11, 550, 283, 295, 2031, 307, 445, 341, 12750, 1622, 300, 307, 51320, 51320, 2293, 322, 264, 2031, 12, 24633, 11, 293, 370, 264, 6713, 337, 1184, 1365, 307, 257, 1622, 300, 1709, 490, 1184, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.07483710599749276, "compression_ratio": 1.563157894736842, "no_speech_prob": 1.6280423551506829e-06}, {"id": 125, "seek": 67068, "start": 670.68, "end": 677.3199999999999, "text": " point down to the horizontal line that represents f of x equals 0.", "tokens": [50364, 935, 760, 281, 264, 12750, 1622, 300, 8855, 283, 295, 2031, 6915, 1958, 13, 50696, 50696, 407, 264, 2063, 361, 562, 261, 6915, 1958, 307, 502, 670, 568, 76, 1413, 264, 11275, 502, 8889, 1804, 568, 8889, 51186, 51186, 1804, 805, 8889, 11, 293, 300, 311, 2681, 281, 502, 670, 1386, 1413, 3499, 11, 597, 307, 466, 568, 13, 10191, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.07220200758713942, "compression_ratio": 1.506578947368421, "no_speech_prob": 2.0580437194439583e-06}, {"id": 126, "seek": 67068, "start": 677.3199999999999, "end": 687.12, "text": " So the cost j when w equals 0 is 1 over 2m times the quantity 1 squared plus 2 squared", "tokens": [50364, 935, 760, 281, 264, 12750, 1622, 300, 8855, 283, 295, 2031, 6915, 1958, 13, 50696, 50696, 407, 264, 2063, 361, 562, 261, 6915, 1958, 307, 502, 670, 568, 76, 1413, 264, 11275, 502, 8889, 1804, 568, 8889, 51186, 51186, 1804, 805, 8889, 11, 293, 300, 311, 2681, 281, 502, 670, 1386, 1413, 3499, 11, 597, 307, 466, 568, 13, 10191, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.07220200758713942, "compression_ratio": 1.506578947368421, "no_speech_prob": 2.0580437194439583e-06}, {"id": 127, "seek": 67068, "start": 687.12, "end": 696.54, "text": " plus 3 squared, and that's equal to 1 over 6 times 14, which is about 2.33.", "tokens": [50364, 935, 760, 281, 264, 12750, 1622, 300, 8855, 283, 295, 2031, 6915, 1958, 13, 50696, 50696, 407, 264, 2063, 361, 562, 261, 6915, 1958, 307, 502, 670, 568, 76, 1413, 264, 11275, 502, 8889, 1804, 568, 8889, 51186, 51186, 1804, 805, 8889, 11, 293, 300, 311, 2681, 281, 502, 670, 1386, 1413, 3499, 11, 597, 307, 466, 568, 13, 10191, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.07220200758713942, "compression_ratio": 1.506578947368421, "no_speech_prob": 2.0580437194439583e-06}, {"id": 128, "seek": 69654, "start": 696.54, "end": 705.36, "text": " So let's plot this point where w is 0 and j of 0 is 2.33 over here.", "tokens": [50364, 407, 718, 311, 7542, 341, 935, 689, 261, 307, 1958, 293, 361, 295, 1958, 307, 568, 13, 10191, 670, 510, 13, 50805, 50805, 400, 291, 393, 1066, 884, 341, 337, 661, 4190, 295, 261, 13, 50963, 50963, 4162, 261, 393, 312, 604, 1230, 11, 309, 393, 611, 312, 257, 3671, 2158, 11, 370, 498, 261, 307, 3671, 1958, 13, 20, 11, 51403, 51403, 550, 264, 1622, 283, 307, 257, 24805, 21254, 278, 1622, 411, 341, 13, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.11429073810577392, "compression_ratio": 1.4855491329479769, "no_speech_prob": 1.0511445225347416e-06}, {"id": 129, "seek": 69654, "start": 705.36, "end": 708.52, "text": " And you can keep doing this for other values of w.", "tokens": [50364, 407, 718, 311, 7542, 341, 935, 689, 261, 307, 1958, 293, 361, 295, 1958, 307, 568, 13, 10191, 670, 510, 13, 50805, 50805, 400, 291, 393, 1066, 884, 341, 337, 661, 4190, 295, 261, 13, 50963, 50963, 4162, 261, 393, 312, 604, 1230, 11, 309, 393, 611, 312, 257, 3671, 2158, 11, 370, 498, 261, 307, 3671, 1958, 13, 20, 11, 51403, 51403, 550, 264, 1622, 283, 307, 257, 24805, 21254, 278, 1622, 411, 341, 13, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.11429073810577392, "compression_ratio": 1.4855491329479769, "no_speech_prob": 1.0511445225347416e-06}, {"id": 130, "seek": 69654, "start": 708.52, "end": 717.3199999999999, "text": " Since w can be any number, it can also be a negative value, so if w is negative 0.5,", "tokens": [50364, 407, 718, 311, 7542, 341, 935, 689, 261, 307, 1958, 293, 361, 295, 1958, 307, 568, 13, 10191, 670, 510, 13, 50805, 50805, 400, 291, 393, 1066, 884, 341, 337, 661, 4190, 295, 261, 13, 50963, 50963, 4162, 261, 393, 312, 604, 1230, 11, 309, 393, 611, 312, 257, 3671, 2158, 11, 370, 498, 261, 307, 3671, 1958, 13, 20, 11, 51403, 51403, 550, 264, 1622, 283, 307, 257, 24805, 21254, 278, 1622, 411, 341, 13, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.11429073810577392, "compression_ratio": 1.4855491329479769, "no_speech_prob": 1.0511445225347416e-06}, {"id": 131, "seek": 69654, "start": 717.3199999999999, "end": 723.12, "text": " then the line f is a downward sloping line like this.", "tokens": [50364, 407, 718, 311, 7542, 341, 935, 689, 261, 307, 1958, 293, 361, 295, 1958, 307, 568, 13, 10191, 670, 510, 13, 50805, 50805, 400, 291, 393, 1066, 884, 341, 337, 661, 4190, 295, 261, 13, 50963, 50963, 4162, 261, 393, 312, 604, 1230, 11, 309, 393, 611, 312, 257, 3671, 2158, 11, 370, 498, 261, 307, 3671, 1958, 13, 20, 11, 51403, 51403, 550, 264, 1622, 283, 307, 257, 24805, 21254, 278, 1622, 411, 341, 13, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.11429073810577392, "compression_ratio": 1.4855491329479769, "no_speech_prob": 1.0511445225347416e-06}, {"id": 132, "seek": 72312, "start": 723.12, "end": 729.84, "text": " It turns out that when w is negative 0.5, then you end up with an even higher cost around", "tokens": [50364, 467, 4523, 484, 300, 562, 261, 307, 3671, 1958, 13, 20, 11, 550, 291, 917, 493, 365, 364, 754, 2946, 2063, 926, 50700, 50700, 1025, 13, 6074, 11, 597, 307, 341, 935, 493, 510, 13, 50956, 50956, 400, 291, 393, 2354, 15866, 264, 2063, 2445, 337, 819, 4190, 295, 261, 293, 370, 322, 293, 7542, 51230, 51230, 613, 11, 558, 30, 51310, 51310, 407, 309, 4523, 484, 300, 538, 15866, 257, 3613, 295, 4190, 11, 291, 393, 5692, 13508, 484, 437, 264, 51568, 51568, 2063, 2445, 361, 1542, 411, 13, 51698, 51698, 400, 300, 311, 437, 361, 307, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12554817755245468, "compression_ratio": 1.654708520179372, "no_speech_prob": 2.225271600764245e-06}, {"id": 133, "seek": 72312, "start": 729.84, "end": 734.96, "text": " 5.25, which is this point up here.", "tokens": [50364, 467, 4523, 484, 300, 562, 261, 307, 3671, 1958, 13, 20, 11, 550, 291, 917, 493, 365, 364, 754, 2946, 2063, 926, 50700, 50700, 1025, 13, 6074, 11, 597, 307, 341, 935, 493, 510, 13, 50956, 50956, 400, 291, 393, 2354, 15866, 264, 2063, 2445, 337, 819, 4190, 295, 261, 293, 370, 322, 293, 7542, 51230, 51230, 613, 11, 558, 30, 51310, 51310, 407, 309, 4523, 484, 300, 538, 15866, 257, 3613, 295, 4190, 11, 291, 393, 5692, 13508, 484, 437, 264, 51568, 51568, 2063, 2445, 361, 1542, 411, 13, 51698, 51698, 400, 300, 311, 437, 361, 307, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12554817755245468, "compression_ratio": 1.654708520179372, "no_speech_prob": 2.225271600764245e-06}, {"id": 134, "seek": 72312, "start": 734.96, "end": 740.44, "text": " And you can continue computing the cost function for different values of w and so on and plot", "tokens": [50364, 467, 4523, 484, 300, 562, 261, 307, 3671, 1958, 13, 20, 11, 550, 291, 917, 493, 365, 364, 754, 2946, 2063, 926, 50700, 50700, 1025, 13, 6074, 11, 597, 307, 341, 935, 493, 510, 13, 50956, 50956, 400, 291, 393, 2354, 15866, 264, 2063, 2445, 337, 819, 4190, 295, 261, 293, 370, 322, 293, 7542, 51230, 51230, 613, 11, 558, 30, 51310, 51310, 407, 309, 4523, 484, 300, 538, 15866, 257, 3613, 295, 4190, 11, 291, 393, 5692, 13508, 484, 437, 264, 51568, 51568, 2063, 2445, 361, 1542, 411, 13, 51698, 51698, 400, 300, 311, 437, 361, 307, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12554817755245468, "compression_ratio": 1.654708520179372, "no_speech_prob": 2.225271600764245e-06}, {"id": 135, "seek": 72312, "start": 740.44, "end": 742.04, "text": " these, right?", "tokens": [50364, 467, 4523, 484, 300, 562, 261, 307, 3671, 1958, 13, 20, 11, 550, 291, 917, 493, 365, 364, 754, 2946, 2063, 926, 50700, 50700, 1025, 13, 6074, 11, 597, 307, 341, 935, 493, 510, 13, 50956, 50956, 400, 291, 393, 2354, 15866, 264, 2063, 2445, 337, 819, 4190, 295, 261, 293, 370, 322, 293, 7542, 51230, 51230, 613, 11, 558, 30, 51310, 51310, 407, 309, 4523, 484, 300, 538, 15866, 257, 3613, 295, 4190, 11, 291, 393, 5692, 13508, 484, 437, 264, 51568, 51568, 2063, 2445, 361, 1542, 411, 13, 51698, 51698, 400, 300, 311, 437, 361, 307, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12554817755245468, "compression_ratio": 1.654708520179372, "no_speech_prob": 2.225271600764245e-06}, {"id": 136, "seek": 72312, "start": 742.04, "end": 747.2, "text": " So it turns out that by computing a range of values, you can slowly trace out what the", "tokens": [50364, 467, 4523, 484, 300, 562, 261, 307, 3671, 1958, 13, 20, 11, 550, 291, 917, 493, 365, 364, 754, 2946, 2063, 926, 50700, 50700, 1025, 13, 6074, 11, 597, 307, 341, 935, 493, 510, 13, 50956, 50956, 400, 291, 393, 2354, 15866, 264, 2063, 2445, 337, 819, 4190, 295, 261, 293, 370, 322, 293, 7542, 51230, 51230, 613, 11, 558, 30, 51310, 51310, 407, 309, 4523, 484, 300, 538, 15866, 257, 3613, 295, 4190, 11, 291, 393, 5692, 13508, 484, 437, 264, 51568, 51568, 2063, 2445, 361, 1542, 411, 13, 51698, 51698, 400, 300, 311, 437, 361, 307, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12554817755245468, "compression_ratio": 1.654708520179372, "no_speech_prob": 2.225271600764245e-06}, {"id": 137, "seek": 72312, "start": 747.2, "end": 749.8, "text": " cost function j looks like.", "tokens": [50364, 467, 4523, 484, 300, 562, 261, 307, 3671, 1958, 13, 20, 11, 550, 291, 917, 493, 365, 364, 754, 2946, 2063, 926, 50700, 50700, 1025, 13, 6074, 11, 597, 307, 341, 935, 493, 510, 13, 50956, 50956, 400, 291, 393, 2354, 15866, 264, 2063, 2445, 337, 819, 4190, 295, 261, 293, 370, 322, 293, 7542, 51230, 51230, 613, 11, 558, 30, 51310, 51310, 407, 309, 4523, 484, 300, 538, 15866, 257, 3613, 295, 4190, 11, 291, 393, 5692, 13508, 484, 437, 264, 51568, 51568, 2063, 2445, 361, 1542, 411, 13, 51698, 51698, 400, 300, 311, 437, 361, 307, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12554817755245468, "compression_ratio": 1.654708520179372, "no_speech_prob": 2.225271600764245e-06}, {"id": 138, "seek": 72312, "start": 749.8, "end": 752.6800000000001, "text": " And that's what j is.", "tokens": [50364, 467, 4523, 484, 300, 562, 261, 307, 3671, 1958, 13, 20, 11, 550, 291, 917, 493, 365, 364, 754, 2946, 2063, 926, 50700, 50700, 1025, 13, 6074, 11, 597, 307, 341, 935, 493, 510, 13, 50956, 50956, 400, 291, 393, 2354, 15866, 264, 2063, 2445, 337, 819, 4190, 295, 261, 293, 370, 322, 293, 7542, 51230, 51230, 613, 11, 558, 30, 51310, 51310, 407, 309, 4523, 484, 300, 538, 15866, 257, 3613, 295, 4190, 11, 291, 393, 5692, 13508, 484, 437, 264, 51568, 51568, 2063, 2445, 361, 1542, 411, 13, 51698, 51698, 400, 300, 311, 437, 361, 307, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12554817755245468, "compression_ratio": 1.654708520179372, "no_speech_prob": 2.225271600764245e-06}, {"id": 139, "seek": 75268, "start": 752.68, "end": 761.2399999999999, "text": " To recap, each value of parameter w corresponds to a different straight line fit, f of x,", "tokens": [50364, 1407, 20928, 11, 1184, 2158, 295, 13075, 261, 23249, 281, 257, 819, 2997, 1622, 3318, 11, 283, 295, 2031, 11, 50792, 50792, 322, 264, 4295, 281, 264, 1411, 13, 50920, 50920, 400, 337, 264, 2212, 3097, 992, 11, 300, 3922, 337, 257, 2158, 295, 261, 23249, 281, 257, 2167, 935, 11, 51286, 51286, 257, 2167, 935, 11, 322, 264, 4295, 322, 264, 558, 13, 51445, 51445, 1436, 337, 1184, 2158, 295, 261, 11, 291, 393, 8873, 257, 2063, 361, 295, 261, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.12538243449011513, "compression_ratio": 1.752808988764045, "no_speech_prob": 4.0928807720774785e-06}, {"id": 140, "seek": 75268, "start": 761.2399999999999, "end": 763.8, "text": " on the graph to the left.", "tokens": [50364, 1407, 20928, 11, 1184, 2158, 295, 13075, 261, 23249, 281, 257, 819, 2997, 1622, 3318, 11, 283, 295, 2031, 11, 50792, 50792, 322, 264, 4295, 281, 264, 1411, 13, 50920, 50920, 400, 337, 264, 2212, 3097, 992, 11, 300, 3922, 337, 257, 2158, 295, 261, 23249, 281, 257, 2167, 935, 11, 51286, 51286, 257, 2167, 935, 11, 322, 264, 4295, 322, 264, 558, 13, 51445, 51445, 1436, 337, 1184, 2158, 295, 261, 11, 291, 393, 8873, 257, 2063, 361, 295, 261, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.12538243449011513, "compression_ratio": 1.752808988764045, "no_speech_prob": 4.0928807720774785e-06}, {"id": 141, "seek": 75268, "start": 763.8, "end": 771.12, "text": " And for the given training set, that choice for a value of w corresponds to a single point,", "tokens": [50364, 1407, 20928, 11, 1184, 2158, 295, 13075, 261, 23249, 281, 257, 819, 2997, 1622, 3318, 11, 283, 295, 2031, 11, 50792, 50792, 322, 264, 4295, 281, 264, 1411, 13, 50920, 50920, 400, 337, 264, 2212, 3097, 992, 11, 300, 3922, 337, 257, 2158, 295, 261, 23249, 281, 257, 2167, 935, 11, 51286, 51286, 257, 2167, 935, 11, 322, 264, 4295, 322, 264, 558, 13, 51445, 51445, 1436, 337, 1184, 2158, 295, 261, 11, 291, 393, 8873, 257, 2063, 361, 295, 261, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.12538243449011513, "compression_ratio": 1.752808988764045, "no_speech_prob": 4.0928807720774785e-06}, {"id": 142, "seek": 75268, "start": 771.12, "end": 774.3, "text": " a single point, on the graph on the right.", "tokens": [50364, 1407, 20928, 11, 1184, 2158, 295, 13075, 261, 23249, 281, 257, 819, 2997, 1622, 3318, 11, 283, 295, 2031, 11, 50792, 50792, 322, 264, 4295, 281, 264, 1411, 13, 50920, 50920, 400, 337, 264, 2212, 3097, 992, 11, 300, 3922, 337, 257, 2158, 295, 261, 23249, 281, 257, 2167, 935, 11, 51286, 51286, 257, 2167, 935, 11, 322, 264, 4295, 322, 264, 558, 13, 51445, 51445, 1436, 337, 1184, 2158, 295, 261, 11, 291, 393, 8873, 257, 2063, 361, 295, 261, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.12538243449011513, "compression_ratio": 1.752808988764045, "no_speech_prob": 4.0928807720774785e-06}, {"id": 143, "seek": 75268, "start": 774.3, "end": 780.0799999999999, "text": " Because for each value of w, you can calculate a cost j of w.", "tokens": [50364, 1407, 20928, 11, 1184, 2158, 295, 13075, 261, 23249, 281, 257, 819, 2997, 1622, 3318, 11, 283, 295, 2031, 11, 50792, 50792, 322, 264, 4295, 281, 264, 1411, 13, 50920, 50920, 400, 337, 264, 2212, 3097, 992, 11, 300, 3922, 337, 257, 2158, 295, 261, 23249, 281, 257, 2167, 935, 11, 51286, 51286, 257, 2167, 935, 11, 322, 264, 4295, 322, 264, 558, 13, 51445, 51445, 1436, 337, 1184, 2158, 295, 261, 11, 291, 393, 8873, 257, 2063, 361, 295, 261, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.12538243449011513, "compression_ratio": 1.752808988764045, "no_speech_prob": 4.0928807720774785e-06}, {"id": 144, "seek": 78008, "start": 780.08, "end": 788.32, "text": " For example, when w equals 1, this corresponds to this straight line fit through the data.", "tokens": [50364, 1171, 1365, 11, 562, 261, 6915, 502, 11, 341, 23249, 281, 341, 2997, 1622, 3318, 807, 264, 1412, 13, 50776, 50776, 400, 309, 611, 23249, 281, 341, 935, 322, 264, 4295, 295, 361, 11, 689, 261, 6915, 502, 293, 264, 2063, 51156, 51156, 361, 295, 502, 6915, 1958, 13, 51324, 51324, 13813, 562, 261, 6915, 1958, 13, 20, 11, 341, 2709, 291, 341, 1622, 11, 597, 575, 257, 4356, 13525, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.10650966008504231, "compression_ratio": 1.621301775147929, "no_speech_prob": 2.8572640076163225e-06}, {"id": 145, "seek": 78008, "start": 788.32, "end": 795.9200000000001, "text": " And it also corresponds to this point on the graph of j, where w equals 1 and the cost", "tokens": [50364, 1171, 1365, 11, 562, 261, 6915, 502, 11, 341, 23249, 281, 341, 2997, 1622, 3318, 807, 264, 1412, 13, 50776, 50776, 400, 309, 611, 23249, 281, 341, 935, 322, 264, 4295, 295, 361, 11, 689, 261, 6915, 502, 293, 264, 2063, 51156, 51156, 361, 295, 502, 6915, 1958, 13, 51324, 51324, 13813, 562, 261, 6915, 1958, 13, 20, 11, 341, 2709, 291, 341, 1622, 11, 597, 575, 257, 4356, 13525, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.10650966008504231, "compression_ratio": 1.621301775147929, "no_speech_prob": 2.8572640076163225e-06}, {"id": 146, "seek": 78008, "start": 795.9200000000001, "end": 799.2800000000001, "text": " j of 1 equals 0.", "tokens": [50364, 1171, 1365, 11, 562, 261, 6915, 502, 11, 341, 23249, 281, 341, 2997, 1622, 3318, 807, 264, 1412, 13, 50776, 50776, 400, 309, 611, 23249, 281, 341, 935, 322, 264, 4295, 295, 361, 11, 689, 261, 6915, 502, 293, 264, 2063, 51156, 51156, 361, 295, 502, 6915, 1958, 13, 51324, 51324, 13813, 562, 261, 6915, 1958, 13, 20, 11, 341, 2709, 291, 341, 1622, 11, 597, 575, 257, 4356, 13525, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.10650966008504231, "compression_ratio": 1.621301775147929, "no_speech_prob": 2.8572640076163225e-06}, {"id": 147, "seek": 78008, "start": 799.2800000000001, "end": 806.48, "text": " Whereas when w equals 0.5, this gives you this line, which has a smaller slope.", "tokens": [50364, 1171, 1365, 11, 562, 261, 6915, 502, 11, 341, 23249, 281, 341, 2997, 1622, 3318, 807, 264, 1412, 13, 50776, 50776, 400, 309, 611, 23249, 281, 341, 935, 322, 264, 4295, 295, 361, 11, 689, 261, 6915, 502, 293, 264, 2063, 51156, 51156, 361, 295, 502, 6915, 1958, 13, 51324, 51324, 13813, 562, 261, 6915, 1958, 13, 20, 11, 341, 2709, 291, 341, 1622, 11, 597, 575, 257, 4356, 13525, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.10650966008504231, "compression_ratio": 1.621301775147929, "no_speech_prob": 2.8572640076163225e-06}, {"id": 148, "seek": 80648, "start": 806.48, "end": 812.32, "text": " And this line, in combination with the training set, corresponds to this point on the cost", "tokens": [50364, 400, 341, 1622, 11, 294, 6562, 365, 264, 3097, 992, 11, 23249, 281, 341, 935, 322, 264, 2063, 50656, 50656, 2445, 4295, 412, 261, 6915, 1958, 13, 20, 13, 50904, 50904, 407, 337, 1184, 2158, 295, 261, 11, 291, 2468, 493, 365, 257, 819, 1622, 293, 1080, 11760, 2063, 51182, 51182, 361, 295, 261, 13, 51298, 51298, 400, 291, 393, 764, 613, 2793, 281, 13508, 484, 341, 7542, 322, 264, 558, 13, 51508, 51508, 18600, 341, 11, 577, 393, 291, 2826, 264, 2158, 295, 261, 300, 3542, 294, 264, 2445, 283, 15669, 264, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11007084797338113, "compression_ratio": 1.6894977168949772, "no_speech_prob": 2.156750042558997e-06}, {"id": 149, "seek": 80648, "start": 812.32, "end": 817.28, "text": " function graph at w equals 0.5.", "tokens": [50364, 400, 341, 1622, 11, 294, 6562, 365, 264, 3097, 992, 11, 23249, 281, 341, 935, 322, 264, 2063, 50656, 50656, 2445, 4295, 412, 261, 6915, 1958, 13, 20, 13, 50904, 50904, 407, 337, 1184, 2158, 295, 261, 11, 291, 2468, 493, 365, 257, 819, 1622, 293, 1080, 11760, 2063, 51182, 51182, 361, 295, 261, 13, 51298, 51298, 400, 291, 393, 764, 613, 2793, 281, 13508, 484, 341, 7542, 322, 264, 558, 13, 51508, 51508, 18600, 341, 11, 577, 393, 291, 2826, 264, 2158, 295, 261, 300, 3542, 294, 264, 2445, 283, 15669, 264, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11007084797338113, "compression_ratio": 1.6894977168949772, "no_speech_prob": 2.156750042558997e-06}, {"id": 150, "seek": 80648, "start": 817.28, "end": 822.84, "text": " So for each value of w, you wind up with a different line and its corresponding cost", "tokens": [50364, 400, 341, 1622, 11, 294, 6562, 365, 264, 3097, 992, 11, 23249, 281, 341, 935, 322, 264, 2063, 50656, 50656, 2445, 4295, 412, 261, 6915, 1958, 13, 20, 13, 50904, 50904, 407, 337, 1184, 2158, 295, 261, 11, 291, 2468, 493, 365, 257, 819, 1622, 293, 1080, 11760, 2063, 51182, 51182, 361, 295, 261, 13, 51298, 51298, 400, 291, 393, 764, 613, 2793, 281, 13508, 484, 341, 7542, 322, 264, 558, 13, 51508, 51508, 18600, 341, 11, 577, 393, 291, 2826, 264, 2158, 295, 261, 300, 3542, 294, 264, 2445, 283, 15669, 264, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11007084797338113, "compression_ratio": 1.6894977168949772, "no_speech_prob": 2.156750042558997e-06}, {"id": 151, "seek": 80648, "start": 822.84, "end": 825.16, "text": " j of w.", "tokens": [50364, 400, 341, 1622, 11, 294, 6562, 365, 264, 3097, 992, 11, 23249, 281, 341, 935, 322, 264, 2063, 50656, 50656, 2445, 4295, 412, 261, 6915, 1958, 13, 20, 13, 50904, 50904, 407, 337, 1184, 2158, 295, 261, 11, 291, 2468, 493, 365, 257, 819, 1622, 293, 1080, 11760, 2063, 51182, 51182, 361, 295, 261, 13, 51298, 51298, 400, 291, 393, 764, 613, 2793, 281, 13508, 484, 341, 7542, 322, 264, 558, 13, 51508, 51508, 18600, 341, 11, 577, 393, 291, 2826, 264, 2158, 295, 261, 300, 3542, 294, 264, 2445, 283, 15669, 264, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11007084797338113, "compression_ratio": 1.6894977168949772, "no_speech_prob": 2.156750042558997e-06}, {"id": 152, "seek": 80648, "start": 825.16, "end": 829.36, "text": " And you can use these points to trace out this plot on the right.", "tokens": [50364, 400, 341, 1622, 11, 294, 6562, 365, 264, 3097, 992, 11, 23249, 281, 341, 935, 322, 264, 2063, 50656, 50656, 2445, 4295, 412, 261, 6915, 1958, 13, 20, 13, 50904, 50904, 407, 337, 1184, 2158, 295, 261, 11, 291, 2468, 493, 365, 257, 819, 1622, 293, 1080, 11760, 2063, 51182, 51182, 361, 295, 261, 13, 51298, 51298, 400, 291, 393, 764, 613, 2793, 281, 13508, 484, 341, 7542, 322, 264, 558, 13, 51508, 51508, 18600, 341, 11, 577, 393, 291, 2826, 264, 2158, 295, 261, 300, 3542, 294, 264, 2445, 283, 15669, 264, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11007084797338113, "compression_ratio": 1.6894977168949772, "no_speech_prob": 2.156750042558997e-06}, {"id": 153, "seek": 80648, "start": 829.36, "end": 835.48, "text": " Given this, how can you choose the value of w that results in the function f fitting the", "tokens": [50364, 400, 341, 1622, 11, 294, 6562, 365, 264, 3097, 992, 11, 23249, 281, 341, 935, 322, 264, 2063, 50656, 50656, 2445, 4295, 412, 261, 6915, 1958, 13, 20, 13, 50904, 50904, 407, 337, 1184, 2158, 295, 261, 11, 291, 2468, 493, 365, 257, 819, 1622, 293, 1080, 11760, 2063, 51182, 51182, 361, 295, 261, 13, 51298, 51298, 400, 291, 393, 764, 613, 2793, 281, 13508, 484, 341, 7542, 322, 264, 558, 13, 51508, 51508, 18600, 341, 11, 577, 393, 291, 2826, 264, 2158, 295, 261, 300, 3542, 294, 264, 2445, 283, 15669, 264, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11007084797338113, "compression_ratio": 1.6894977168949772, "no_speech_prob": 2.156750042558997e-06}, {"id": 154, "seek": 83548, "start": 835.48, "end": 836.76, "text": " data well?", "tokens": [50364, 1412, 731, 30, 50428, 50428, 1042, 11, 382, 291, 393, 3811, 11, 10875, 257, 2158, 295, 261, 300, 7700, 361, 295, 261, 281, 312, 382, 1359, 382, 50754, 50754, 1944, 2544, 411, 257, 665, 778, 13, 50912, 50912, 508, 307, 264, 2063, 2445, 300, 8000, 577, 955, 264, 8889, 13603, 366, 13, 51162, 51162, 407, 10875, 261, 300, 4464, 5660, 613, 8889, 13603, 11, 1669, 552, 382, 1359, 382, 1944, 11, 576, 51422, 51422, 976, 505, 257, 665, 2316, 13, 51516, 51516, 682, 341, 1365, 11, 498, 291, 645, 281, 2826, 264, 2158, 295, 261, 300, 3542, 294, 264, 16998, 1944, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10073323931012834, "compression_ratio": 1.7621145374449338, "no_speech_prob": 1.1659256415441632e-05}, {"id": 155, "seek": 83548, "start": 836.76, "end": 843.28, "text": " Well, as you can imagine, choosing a value of w that causes j of w to be as small as", "tokens": [50364, 1412, 731, 30, 50428, 50428, 1042, 11, 382, 291, 393, 3811, 11, 10875, 257, 2158, 295, 261, 300, 7700, 361, 295, 261, 281, 312, 382, 1359, 382, 50754, 50754, 1944, 2544, 411, 257, 665, 778, 13, 50912, 50912, 508, 307, 264, 2063, 2445, 300, 8000, 577, 955, 264, 8889, 13603, 366, 13, 51162, 51162, 407, 10875, 261, 300, 4464, 5660, 613, 8889, 13603, 11, 1669, 552, 382, 1359, 382, 1944, 11, 576, 51422, 51422, 976, 505, 257, 665, 2316, 13, 51516, 51516, 682, 341, 1365, 11, 498, 291, 645, 281, 2826, 264, 2158, 295, 261, 300, 3542, 294, 264, 16998, 1944, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10073323931012834, "compression_ratio": 1.7621145374449338, "no_speech_prob": 1.1659256415441632e-05}, {"id": 156, "seek": 83548, "start": 843.28, "end": 846.44, "text": " possible seems like a good bet.", "tokens": [50364, 1412, 731, 30, 50428, 50428, 1042, 11, 382, 291, 393, 3811, 11, 10875, 257, 2158, 295, 261, 300, 7700, 361, 295, 261, 281, 312, 382, 1359, 382, 50754, 50754, 1944, 2544, 411, 257, 665, 778, 13, 50912, 50912, 508, 307, 264, 2063, 2445, 300, 8000, 577, 955, 264, 8889, 13603, 366, 13, 51162, 51162, 407, 10875, 261, 300, 4464, 5660, 613, 8889, 13603, 11, 1669, 552, 382, 1359, 382, 1944, 11, 576, 51422, 51422, 976, 505, 257, 665, 2316, 13, 51516, 51516, 682, 341, 1365, 11, 498, 291, 645, 281, 2826, 264, 2158, 295, 261, 300, 3542, 294, 264, 16998, 1944, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10073323931012834, "compression_ratio": 1.7621145374449338, "no_speech_prob": 1.1659256415441632e-05}, {"id": 157, "seek": 83548, "start": 846.44, "end": 851.44, "text": " J is the cost function that measures how big the squared errors are.", "tokens": [50364, 1412, 731, 30, 50428, 50428, 1042, 11, 382, 291, 393, 3811, 11, 10875, 257, 2158, 295, 261, 300, 7700, 361, 295, 261, 281, 312, 382, 1359, 382, 50754, 50754, 1944, 2544, 411, 257, 665, 778, 13, 50912, 50912, 508, 307, 264, 2063, 2445, 300, 8000, 577, 955, 264, 8889, 13603, 366, 13, 51162, 51162, 407, 10875, 261, 300, 4464, 5660, 613, 8889, 13603, 11, 1669, 552, 382, 1359, 382, 1944, 11, 576, 51422, 51422, 976, 505, 257, 665, 2316, 13, 51516, 51516, 682, 341, 1365, 11, 498, 291, 645, 281, 2826, 264, 2158, 295, 261, 300, 3542, 294, 264, 16998, 1944, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10073323931012834, "compression_ratio": 1.7621145374449338, "no_speech_prob": 1.1659256415441632e-05}, {"id": 158, "seek": 83548, "start": 851.44, "end": 856.64, "text": " So choosing w that minimizes these squared errors, makes them as small as possible, would", "tokens": [50364, 1412, 731, 30, 50428, 50428, 1042, 11, 382, 291, 393, 3811, 11, 10875, 257, 2158, 295, 261, 300, 7700, 361, 295, 261, 281, 312, 382, 1359, 382, 50754, 50754, 1944, 2544, 411, 257, 665, 778, 13, 50912, 50912, 508, 307, 264, 2063, 2445, 300, 8000, 577, 955, 264, 8889, 13603, 366, 13, 51162, 51162, 407, 10875, 261, 300, 4464, 5660, 613, 8889, 13603, 11, 1669, 552, 382, 1359, 382, 1944, 11, 576, 51422, 51422, 976, 505, 257, 665, 2316, 13, 51516, 51516, 682, 341, 1365, 11, 498, 291, 645, 281, 2826, 264, 2158, 295, 261, 300, 3542, 294, 264, 16998, 1944, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10073323931012834, "compression_ratio": 1.7621145374449338, "no_speech_prob": 1.1659256415441632e-05}, {"id": 159, "seek": 83548, "start": 856.64, "end": 858.52, "text": " give us a good model.", "tokens": [50364, 1412, 731, 30, 50428, 50428, 1042, 11, 382, 291, 393, 3811, 11, 10875, 257, 2158, 295, 261, 300, 7700, 361, 295, 261, 281, 312, 382, 1359, 382, 50754, 50754, 1944, 2544, 411, 257, 665, 778, 13, 50912, 50912, 508, 307, 264, 2063, 2445, 300, 8000, 577, 955, 264, 8889, 13603, 366, 13, 51162, 51162, 407, 10875, 261, 300, 4464, 5660, 613, 8889, 13603, 11, 1669, 552, 382, 1359, 382, 1944, 11, 576, 51422, 51422, 976, 505, 257, 665, 2316, 13, 51516, 51516, 682, 341, 1365, 11, 498, 291, 645, 281, 2826, 264, 2158, 295, 261, 300, 3542, 294, 264, 16998, 1944, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10073323931012834, "compression_ratio": 1.7621145374449338, "no_speech_prob": 1.1659256415441632e-05}, {"id": 160, "seek": 83548, "start": 858.52, "end": 863.8000000000001, "text": " In this example, if you were to choose the value of w that results in the smallest possible", "tokens": [50364, 1412, 731, 30, 50428, 50428, 1042, 11, 382, 291, 393, 3811, 11, 10875, 257, 2158, 295, 261, 300, 7700, 361, 295, 261, 281, 312, 382, 1359, 382, 50754, 50754, 1944, 2544, 411, 257, 665, 778, 13, 50912, 50912, 508, 307, 264, 2063, 2445, 300, 8000, 577, 955, 264, 8889, 13603, 366, 13, 51162, 51162, 407, 10875, 261, 300, 4464, 5660, 613, 8889, 13603, 11, 1669, 552, 382, 1359, 382, 1944, 11, 576, 51422, 51422, 976, 505, 257, 665, 2316, 13, 51516, 51516, 682, 341, 1365, 11, 498, 291, 645, 281, 2826, 264, 2158, 295, 261, 300, 3542, 294, 264, 16998, 1944, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10073323931012834, "compression_ratio": 1.7621145374449338, "no_speech_prob": 1.1659256415441632e-05}, {"id": 161, "seek": 86380, "start": 863.8, "end": 869.4399999999999, "text": " value of j of w, you'd end up picking w equals 1.", "tokens": [50364, 2158, 295, 361, 295, 261, 11, 291, 1116, 917, 493, 8867, 261, 6915, 502, 13, 50646, 50646, 400, 382, 291, 393, 536, 11, 300, 311, 767, 257, 1238, 665, 3922, 13, 50782, 50782, 639, 3542, 294, 257, 1622, 300, 9001, 264, 3097, 1412, 588, 731, 13, 51028, 51028, 407, 300, 311, 577, 294, 8213, 24590, 11, 291, 764, 264, 2063, 2445, 281, 915, 264, 2158, 295, 261, 300, 51378, 51378, 4464, 5660, 361, 13, 51512, 51512, 1610, 294, 264, 544, 2674, 1389, 11, 562, 321, 632, 9834, 261, 293, 272, 2831, 813, 445, 261, 11, 291, 915, 264, 4190, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.09202475686675136, "compression_ratio": 1.576271186440678, "no_speech_prob": 3.187527227055398e-06}, {"id": 162, "seek": 86380, "start": 869.4399999999999, "end": 872.16, "text": " And as you can see, that's actually a pretty good choice.", "tokens": [50364, 2158, 295, 361, 295, 261, 11, 291, 1116, 917, 493, 8867, 261, 6915, 502, 13, 50646, 50646, 400, 382, 291, 393, 536, 11, 300, 311, 767, 257, 1238, 665, 3922, 13, 50782, 50782, 639, 3542, 294, 257, 1622, 300, 9001, 264, 3097, 1412, 588, 731, 13, 51028, 51028, 407, 300, 311, 577, 294, 8213, 24590, 11, 291, 764, 264, 2063, 2445, 281, 915, 264, 2158, 295, 261, 300, 51378, 51378, 4464, 5660, 361, 13, 51512, 51512, 1610, 294, 264, 544, 2674, 1389, 11, 562, 321, 632, 9834, 261, 293, 272, 2831, 813, 445, 261, 11, 291, 915, 264, 4190, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.09202475686675136, "compression_ratio": 1.576271186440678, "no_speech_prob": 3.187527227055398e-06}, {"id": 163, "seek": 86380, "start": 872.16, "end": 877.0799999999999, "text": " This results in a line that fits the training data very well.", "tokens": [50364, 2158, 295, 361, 295, 261, 11, 291, 1116, 917, 493, 8867, 261, 6915, 502, 13, 50646, 50646, 400, 382, 291, 393, 536, 11, 300, 311, 767, 257, 1238, 665, 3922, 13, 50782, 50782, 639, 3542, 294, 257, 1622, 300, 9001, 264, 3097, 1412, 588, 731, 13, 51028, 51028, 407, 300, 311, 577, 294, 8213, 24590, 11, 291, 764, 264, 2063, 2445, 281, 915, 264, 2158, 295, 261, 300, 51378, 51378, 4464, 5660, 361, 13, 51512, 51512, 1610, 294, 264, 544, 2674, 1389, 11, 562, 321, 632, 9834, 261, 293, 272, 2831, 813, 445, 261, 11, 291, 915, 264, 4190, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.09202475686675136, "compression_ratio": 1.576271186440678, "no_speech_prob": 3.187527227055398e-06}, {"id": 164, "seek": 86380, "start": 877.0799999999999, "end": 884.0799999999999, "text": " So that's how in linear regression, you use the cost function to find the value of w that", "tokens": [50364, 2158, 295, 361, 295, 261, 11, 291, 1116, 917, 493, 8867, 261, 6915, 502, 13, 50646, 50646, 400, 382, 291, 393, 536, 11, 300, 311, 767, 257, 1238, 665, 3922, 13, 50782, 50782, 639, 3542, 294, 257, 1622, 300, 9001, 264, 3097, 1412, 588, 731, 13, 51028, 51028, 407, 300, 311, 577, 294, 8213, 24590, 11, 291, 764, 264, 2063, 2445, 281, 915, 264, 2158, 295, 261, 300, 51378, 51378, 4464, 5660, 361, 13, 51512, 51512, 1610, 294, 264, 544, 2674, 1389, 11, 562, 321, 632, 9834, 261, 293, 272, 2831, 813, 445, 261, 11, 291, 915, 264, 4190, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.09202475686675136, "compression_ratio": 1.576271186440678, "no_speech_prob": 3.187527227055398e-06}, {"id": 165, "seek": 86380, "start": 884.0799999999999, "end": 886.76, "text": " minimizes j.", "tokens": [50364, 2158, 295, 361, 295, 261, 11, 291, 1116, 917, 493, 8867, 261, 6915, 502, 13, 50646, 50646, 400, 382, 291, 393, 536, 11, 300, 311, 767, 257, 1238, 665, 3922, 13, 50782, 50782, 639, 3542, 294, 257, 1622, 300, 9001, 264, 3097, 1412, 588, 731, 13, 51028, 51028, 407, 300, 311, 577, 294, 8213, 24590, 11, 291, 764, 264, 2063, 2445, 281, 915, 264, 2158, 295, 261, 300, 51378, 51378, 4464, 5660, 361, 13, 51512, 51512, 1610, 294, 264, 544, 2674, 1389, 11, 562, 321, 632, 9834, 261, 293, 272, 2831, 813, 445, 261, 11, 291, 915, 264, 4190, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.09202475686675136, "compression_ratio": 1.576271186440678, "no_speech_prob": 3.187527227055398e-06}, {"id": 166, "seek": 86380, "start": 886.76, "end": 893.76, "text": " Or in the more general case, when we had parameters w and b rather than just w, you find the values", "tokens": [50364, 2158, 295, 361, 295, 261, 11, 291, 1116, 917, 493, 8867, 261, 6915, 502, 13, 50646, 50646, 400, 382, 291, 393, 536, 11, 300, 311, 767, 257, 1238, 665, 3922, 13, 50782, 50782, 639, 3542, 294, 257, 1622, 300, 9001, 264, 3097, 1412, 588, 731, 13, 51028, 51028, 407, 300, 311, 577, 294, 8213, 24590, 11, 291, 764, 264, 2063, 2445, 281, 915, 264, 2158, 295, 261, 300, 51378, 51378, 4464, 5660, 361, 13, 51512, 51512, 1610, 294, 264, 544, 2674, 1389, 11, 562, 321, 632, 9834, 261, 293, 272, 2831, 813, 445, 261, 11, 291, 915, 264, 4190, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.09202475686675136, "compression_ratio": 1.576271186440678, "no_speech_prob": 3.187527227055398e-06}, {"id": 167, "seek": 89376, "start": 893.76, "end": 897.3199999999999, "text": " of w and b that minimize j.", "tokens": [50364, 295, 261, 293, 272, 300, 17522, 361, 13, 50542, 50542, 407, 281, 20858, 11, 291, 1866, 28609, 295, 1293, 283, 293, 361, 293, 589, 807, 577, 264, 732, 366, 4077, 13, 50976, 50976, 1018, 291, 10559, 261, 420, 10559, 261, 293, 272, 11, 291, 917, 493, 365, 819, 2997, 3876, 13, 51228, 51228, 400, 562, 300, 2997, 1622, 11335, 1998, 281, 1412, 11, 264, 2063, 361, 307, 1359, 13, 51504, 51504, 407, 264, 3387, 295, 8213, 24590, 307, 281, 915, 264, 9834, 261, 420, 261, 293, 272, 300, 3542, 294, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1024825319330743, "compression_ratio": 1.6571428571428573, "no_speech_prob": 3.668806357381982e-06}, {"id": 168, "seek": 89376, "start": 897.3199999999999, "end": 906.0, "text": " So to summarize, you saw plots of both f and j and work through how the two are related.", "tokens": [50364, 295, 261, 293, 272, 300, 17522, 361, 13, 50542, 50542, 407, 281, 20858, 11, 291, 1866, 28609, 295, 1293, 283, 293, 361, 293, 589, 807, 577, 264, 732, 366, 4077, 13, 50976, 50976, 1018, 291, 10559, 261, 420, 10559, 261, 293, 272, 11, 291, 917, 493, 365, 819, 2997, 3876, 13, 51228, 51228, 400, 562, 300, 2997, 1622, 11335, 1998, 281, 1412, 11, 264, 2063, 361, 307, 1359, 13, 51504, 51504, 407, 264, 3387, 295, 8213, 24590, 307, 281, 915, 264, 9834, 261, 420, 261, 293, 272, 300, 3542, 294, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1024825319330743, "compression_ratio": 1.6571428571428573, "no_speech_prob": 3.668806357381982e-06}, {"id": 169, "seek": 89376, "start": 906.0, "end": 911.04, "text": " As you vary w or vary w and b, you end up with different straight lines.", "tokens": [50364, 295, 261, 293, 272, 300, 17522, 361, 13, 50542, 50542, 407, 281, 20858, 11, 291, 1866, 28609, 295, 1293, 283, 293, 361, 293, 589, 807, 577, 264, 732, 366, 4077, 13, 50976, 50976, 1018, 291, 10559, 261, 420, 10559, 261, 293, 272, 11, 291, 917, 493, 365, 819, 2997, 3876, 13, 51228, 51228, 400, 562, 300, 2997, 1622, 11335, 1998, 281, 1412, 11, 264, 2063, 361, 307, 1359, 13, 51504, 51504, 407, 264, 3387, 295, 8213, 24590, 307, 281, 915, 264, 9834, 261, 420, 261, 293, 272, 300, 3542, 294, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1024825319330743, "compression_ratio": 1.6571428571428573, "no_speech_prob": 3.668806357381982e-06}, {"id": 170, "seek": 89376, "start": 911.04, "end": 916.56, "text": " And when that straight line passes close to data, the cost j is small.", "tokens": [50364, 295, 261, 293, 272, 300, 17522, 361, 13, 50542, 50542, 407, 281, 20858, 11, 291, 1866, 28609, 295, 1293, 283, 293, 361, 293, 589, 807, 577, 264, 732, 366, 4077, 13, 50976, 50976, 1018, 291, 10559, 261, 420, 10559, 261, 293, 272, 11, 291, 917, 493, 365, 819, 2997, 3876, 13, 51228, 51228, 400, 562, 300, 2997, 1622, 11335, 1998, 281, 1412, 11, 264, 2063, 361, 307, 1359, 13, 51504, 51504, 407, 264, 3387, 295, 8213, 24590, 307, 281, 915, 264, 9834, 261, 420, 261, 293, 272, 300, 3542, 294, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1024825319330743, "compression_ratio": 1.6571428571428573, "no_speech_prob": 3.668806357381982e-06}, {"id": 171, "seek": 89376, "start": 916.56, "end": 922.56, "text": " So the goal of linear regression is to find the parameters w or w and b that results in", "tokens": [50364, 295, 261, 293, 272, 300, 17522, 361, 13, 50542, 50542, 407, 281, 20858, 11, 291, 1866, 28609, 295, 1293, 283, 293, 361, 293, 589, 807, 577, 264, 732, 366, 4077, 13, 50976, 50976, 1018, 291, 10559, 261, 420, 10559, 261, 293, 272, 11, 291, 917, 493, 365, 819, 2997, 3876, 13, 51228, 51228, 400, 562, 300, 2997, 1622, 11335, 1998, 281, 1412, 11, 264, 2063, 361, 307, 1359, 13, 51504, 51504, 407, 264, 3387, 295, 8213, 24590, 307, 281, 915, 264, 9834, 261, 420, 261, 293, 272, 300, 3542, 294, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1024825319330743, "compression_ratio": 1.6571428571428573, "no_speech_prob": 3.668806357381982e-06}, {"id": 172, "seek": 92256, "start": 922.56, "end": 926.92, "text": " the smallest possible value for the cost function j.", "tokens": [50364, 264, 16998, 1944, 2158, 337, 264, 2063, 2445, 361, 13, 50582, 50582, 823, 294, 341, 960, 11, 321, 2732, 807, 527, 1365, 365, 257, 26335, 1154, 1228, 787, 261, 13, 50892, 50892, 682, 264, 958, 960, 11, 718, 311, 23273, 437, 264, 2063, 2445, 1542, 411, 337, 264, 1577, 3037, 51148, 51148, 295, 8213, 24590, 1228, 1293, 261, 293, 272, 13, 51338, 51338, 400, 291, 536, 512, 1627, 805, 35, 28609, 13, 51476, 51476, 961, 311, 352, 281, 264, 958, 960, 13, 51526], "temperature": 0.0, "avg_logprob": -0.15913982391357423, "compression_ratio": 1.5734597156398105, "no_speech_prob": 2.7093597964267246e-05}, {"id": 173, "seek": 92256, "start": 926.92, "end": 933.1199999999999, "text": " Now in this video, we worked through our example with a simplified problem using only w.", "tokens": [50364, 264, 16998, 1944, 2158, 337, 264, 2063, 2445, 361, 13, 50582, 50582, 823, 294, 341, 960, 11, 321, 2732, 807, 527, 1365, 365, 257, 26335, 1154, 1228, 787, 261, 13, 50892, 50892, 682, 264, 958, 960, 11, 718, 311, 23273, 437, 264, 2063, 2445, 1542, 411, 337, 264, 1577, 3037, 51148, 51148, 295, 8213, 24590, 1228, 1293, 261, 293, 272, 13, 51338, 51338, 400, 291, 536, 512, 1627, 805, 35, 28609, 13, 51476, 51476, 961, 311, 352, 281, 264, 958, 960, 13, 51526], "temperature": 0.0, "avg_logprob": -0.15913982391357423, "compression_ratio": 1.5734597156398105, "no_speech_prob": 2.7093597964267246e-05}, {"id": 174, "seek": 92256, "start": 933.1199999999999, "end": 938.2399999999999, "text": " In the next video, let's visualize what the cost function looks like for the full version", "tokens": [50364, 264, 16998, 1944, 2158, 337, 264, 2063, 2445, 361, 13, 50582, 50582, 823, 294, 341, 960, 11, 321, 2732, 807, 527, 1365, 365, 257, 26335, 1154, 1228, 787, 261, 13, 50892, 50892, 682, 264, 958, 960, 11, 718, 311, 23273, 437, 264, 2063, 2445, 1542, 411, 337, 264, 1577, 3037, 51148, 51148, 295, 8213, 24590, 1228, 1293, 261, 293, 272, 13, 51338, 51338, 400, 291, 536, 512, 1627, 805, 35, 28609, 13, 51476, 51476, 961, 311, 352, 281, 264, 958, 960, 13, 51526], "temperature": 0.0, "avg_logprob": -0.15913982391357423, "compression_ratio": 1.5734597156398105, "no_speech_prob": 2.7093597964267246e-05}, {"id": 175, "seek": 92256, "start": 938.2399999999999, "end": 942.04, "text": " of linear regression using both w and b.", "tokens": [50364, 264, 16998, 1944, 2158, 337, 264, 2063, 2445, 361, 13, 50582, 50582, 823, 294, 341, 960, 11, 321, 2732, 807, 527, 1365, 365, 257, 26335, 1154, 1228, 787, 261, 13, 50892, 50892, 682, 264, 958, 960, 11, 718, 311, 23273, 437, 264, 2063, 2445, 1542, 411, 337, 264, 1577, 3037, 51148, 51148, 295, 8213, 24590, 1228, 1293, 261, 293, 272, 13, 51338, 51338, 400, 291, 536, 512, 1627, 805, 35, 28609, 13, 51476, 51476, 961, 311, 352, 281, 264, 958, 960, 13, 51526], "temperature": 0.0, "avg_logprob": -0.15913982391357423, "compression_ratio": 1.5734597156398105, "no_speech_prob": 2.7093597964267246e-05}, {"id": 176, "seek": 92256, "start": 942.04, "end": 944.8, "text": " And you see some cool 3D plots.", "tokens": [50364, 264, 16998, 1944, 2158, 337, 264, 2063, 2445, 361, 13, 50582, 50582, 823, 294, 341, 960, 11, 321, 2732, 807, 527, 1365, 365, 257, 26335, 1154, 1228, 787, 261, 13, 50892, 50892, 682, 264, 958, 960, 11, 718, 311, 23273, 437, 264, 2063, 2445, 1542, 411, 337, 264, 1577, 3037, 51148, 51148, 295, 8213, 24590, 1228, 1293, 261, 293, 272, 13, 51338, 51338, 400, 291, 536, 512, 1627, 805, 35, 28609, 13, 51476, 51476, 961, 311, 352, 281, 264, 958, 960, 13, 51526], "temperature": 0.0, "avg_logprob": -0.15913982391357423, "compression_ratio": 1.5734597156398105, "no_speech_prob": 2.7093597964267246e-05}, {"id": 177, "seek": 94480, "start": 944.8, "end": 954.4799999999999, "text": " Let's go to the next video.", "tokens": [50364, 961, 311, 352, 281, 264, 958, 960, 13, 50848], "temperature": 0.0, "avg_logprob": -0.5492643443020907, "compression_ratio": 0.8181818181818182, "no_speech_prob": 0.0002470411127433181}], "language": "en", "video_id": "33VvmIZof0E", "entity": "ML Specialization, Andrew Ng (2022)"}}