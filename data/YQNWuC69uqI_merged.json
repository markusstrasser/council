{"video_id": "YQNWuC69uqI", "title": "6.12 Machine Learning development process | Adding data  --[ML | Andrew Ng]", "description": "Second Course:\nAdvanced Learning Algorithms.\n\n\nIf you liked the content please subscribe and put a little blue thumb.\nTake heart!", "author": "Machine Learning", "keywords": [], "channel_url": "https://www.youtube.com/channel/UClG5HEAJJFOavT_UolqYROQ", "length": 863, "views": 71, "publish_date": "11/04/2022", "timestamp": 1661817600, "entity": "ML Specialization, Andrew Ng (2022)", "transcript": {"text": " In this video, I'd like to share with you some tips for adding data or collecting more data or sometimes even creating more data for your machine learning application. Just a heads up that this and the next few videos will seem a little bit like a grab bag of different techniques and I apologize if it seems a little bit grab baggy. And that's because machine learning applications are different. Machine learning is applied to so many different problems and for some humans are great at creating labels and for some you can't get more data and for some you can't. And that's why different applications actually sometimes call for slightly different techniques. But I hope in this and the next few videos to share with you some of the techniques that I've found to be most useful for different applications. Although not every one of them will apply for every single application, but I hope many of them will be useful for many of the applications that you'll be working on as well. But let's take a look at some tips for how to add data for your application. When training machine learning algorithms, it feels like always we wish we had even more data almost all the time. And so sometimes it's tempting to let's just get more data of everything. But trying to get more data of all types can be slow and expensive. Instead an alternative way of adding data might be to focus on adding more data of the types where error analysis is indicated in my help. In the previous slide, we saw if error analysis review that pharma spam was a large problem, then you may decide to have a more targeted effort not to get more data of everything under the sun, but to instead focus on getting more examples of pharma spam. With a more modest cost, this could let you add just the emails you need to help your learning algorithm get smarter on recognizing pharma spam. And so one example of how you might do this is if you have a lot of unlabeled email data, say email sitting around and no one has bothered to label yet as spam or non spam, you might be able to go to the unlabeled data. You may be able to ask your labelers to quickly skim through the unlabeled data and find more examples specifically of pharma related spam. And this could boost your learning algorithm's performance much more than just trying to add more data of all sorts of emails. But the more general pattern I hope you take away from this is if you have some ways to add more data of everything, that's okay, nothing wrong with that. But if error analysis has indicated that there's certain subsets of the data that the algorithm is doing particularly poorly on and that you want to improve performance on, then getting more data of just the types where you want it to do better, be it more examples of pharmaceutical spam or more examples of phishing spam or something else, that could be a more efficient way to add just a little bit of data, but boost your algorithm's performance by quite a lot. Beyond getting your hands on brand new training examples x y, there's another technique that's widely used, especially for images and audio data that can increase your training set size significantly. This technique is called data augmentation, and what we're going to do is take an existing training example to create a new training example. For example, if you're trying to recognize the letters from A to Z for an OCR optical character recognition problem, so not just a digit 0 to 9, but also the letters from A to Z. Given an image like this, you might decide to create a new training example by rotating the image a bit or by enlarging the image a bit or by shrinking a little bit or by changing the contrast of the image. And these are examples of distortions to the image that don't change the fact that this is still the alphabet, that this is still the letter A. And for some letters, but not others, you can also take the mirror image of the letter and it still looks like the letter A, but this only applies to some letters. But these would be ways of taking a training example x y and applying a distortion or transformation to the input x in order to come up with another example that has the same label. And by doing this, you're telling the algorithm that the letter A rotated a bit or enlarged a bit or shrunk a little bit. It is still the letter A. And creating additional examples like this helps the learning algorithm do a better job learning how to recognize the letter A. For a more advanced example of data augmentation, you can also take the letter A and place a grid on top of it. And by introducing random warping of this grid, you can take the letter A and introduce warping of the letter A to create a much richer library of examples of the letter A. And this process of distorting these examples then has turned one image or one example into here, training examples that you can feed to the learning algorithm to help it learn more robustly. What is the letter A? This idea of data augmentation also works for speech recognition. Let's say for a voice search application, you have an original audio clip that sounds like this. What is today's weather? One way you can apply data augmentation to speech data would be to take noisy background audio like this. For example, this is what the sound of a crowd sounds like. And it turns out that if you take these two audio clips, the first one and the crowd noise and you add them together, then you end up with an audio clip that sounds like this. What is today's weather? And you just created an audio clip that sounds like someone saying, what's the weather today? But they're saying it around a noisy crowd in the background. Or in fact, if you were to take a different background noise, say someone in a car, this is what background noise of a car sounds like. And you were to add the original audio clip to the car noise, then you get this. What is today's weather? And it sounds like the original audio clip, but as if the speaker was saying it from a car. And the more advanced data augmentation step would be if you make the original audio sound like you're recording on a bad cell phone connection like this. What is today's weather? And so we've seen how you can take one audio clip and turn it into three training examples here. One with crowd background noise, one with car background noise, and one as if it was recorded on a bad cell phone connection. And the times I've worked on speech recognition systems, this was actually a really critical technique for increasing artificially the size of the training data I had to build a more accurate speech recognizer. One tip for data augmentation is that the changes or the distortions you make to the data should be representative of the types of noise or distortions in the test set. So for example, if you take the letter A and warp it like this, this still looks like examples of letters you might see out there that you would like to recognize. Or for audio, adding background noise or bad cell phone connection, if that's representative of what you expect to hear in the test set, then these would be helpful ways to carry out data augmentation on your audio data. In contrast, it's usually not that helpful to add purely random meaningless noise to audio data. For example, here I've taken the letter A and I've added per pixel noise, where if XI is the intensity or the brightness of pixel I, if I were to just add noise to each pixel, they end up with images that look like this. But if to the extent that this isn't that representative of what you see in the test set, because you don't often get images like this in the test set, this is actually going to be less helpful. So one way to think about data augmentation is how can you modify or warp or distort or make more noise in your data, but in a way so that what you get is still quite similar to what you have in your test set, because that's what the learning algorithm will ultimately end up doing well on. Now whereas data augmentation takes an existing training example and modifies it to create another training example, there's one other technique which is data synthesis, in which you make up brand new examples from scratch, not by modifying an existing example, but by creating brand new examples. So take the example of photo OCR. Photo OCR or photo optical character recognition refers to the problem of looking at an image like this and automatically having a computer read the text that appears in this image. So there's a lot of text in this image. How can you train an OCR algorithm to read text from an image like this? Well, when you look closely at what the letters in this image looks like, they actually look like this. So this is real data from a photo OCR task. And one key step of the photo OCR task is to be able to look at the little image like this and recognize the letter at the middle. So this has T in the middle, this has the letter L in the middle, this has the letter C in the middle, and so on. So one way to create artificial data for this task is if you go to your computer's text editor, you find that it has a lot of different fonts. And what you can do is take these fonts and basically type out random text in your text editor and screenshot it using different colors and different contrasts and very different fonts. And you get synthetic data like that on the right. The images on the left were real data from real pictures taken out in the world. The images on the right are synthetically generated using fonts on the computer. And it actually looks pretty realistic. So with synthetic data generation like this, you can generate a very large number of images or examples for your photo OCR task. It can be a lot of work to write the code to generate realistic looking synthetic data for a given application. But when you spend time to do so, it can sometimes help you generate a very large amount of data for your application and give you a huge boost to your average performance. Synthetic data generation has been used most probably for computer vision tasks and less for other applications, not that much for audio tasks as well. All the techniques you've seen in this video relate to finding ways to engineer the data used by your system. In the way that machine learning has developed over the last several decades, many decades, most machine learning researchers attention was on the conventional model centric approach. And here's what I mean. A machine learning system or an AI system includes both code to implement your algorithm or your model, as well as the data that you train the algorithm on. And over the last few decades, most researchers doing machine learning research would download the data set and hold the data fix while they focus on improving the code or the algorithm or the model. Thanks to that paradigm of machine learning research, I find that today the algorithms we have access to, such as linear regression, logistic regression, neural networks, also decision trees, which you see next week, there are algorithms that are already very good and will work well for many applications. And so sometimes it can be more fruitful to spend more of your time taking a data centric approach in which you focus on engineering the data used by your algorithm. And this can be anything from collecting more data to collecting more data just on pharmaceutical spam, if that's what error analysis told you to do, to using data augmentation to generate more images or more audio or using data synthesis to just create more training examples. And sometimes that focus on the data can be an efficient way to help your learning algorithm improve its performance. So I hope that this video gives you a set of tools to be efficient and effective in how you add more data to get your learning algorithm to work better. Now, there are also some applications where you just don't have that much data and it's really hard to get more data. It turns out that there's a technique called transfer learning, which could apply in that setting to give your learning algorithm's performance a huge boost. And the key idea is to take data from a totally different, fairly related task. But using a neural network, there's sometimes ways to use that data from a very different task to get your algorithm to do better on your application. Doesn't apply to everything, but when it does, it can be very powerful. Let's take a look in the next video at how transfer learning works.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.96, "text": " In this video, I'd like to share with you some tips for adding data or collecting more", "tokens": [50364, 682, 341, 960, 11, 286, 1116, 411, 281, 2073, 365, 291, 512, 6082, 337, 5127, 1412, 420, 12510, 544, 50762, 50762, 1412, 420, 2171, 754, 4084, 544, 1412, 337, 428, 3479, 2539, 3861, 13, 51026, 51026, 1449, 257, 8050, 493, 300, 341, 293, 264, 958, 1326, 2145, 486, 1643, 257, 707, 857, 411, 257, 4444, 51242, 51242, 3411, 295, 819, 7512, 293, 286, 12328, 498, 309, 2544, 257, 707, 857, 4444, 3411, 1480, 13, 51502, 51502, 400, 300, 311, 570, 3479, 2539, 5821, 366, 819, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.14411818186442057, "compression_ratio": 1.7644444444444445, "no_speech_prob": 0.050978731364011765}, {"id": 1, "seek": 0, "start": 7.96, "end": 13.24, "text": " data or sometimes even creating more data for your machine learning application.", "tokens": [50364, 682, 341, 960, 11, 286, 1116, 411, 281, 2073, 365, 291, 512, 6082, 337, 5127, 1412, 420, 12510, 544, 50762, 50762, 1412, 420, 2171, 754, 4084, 544, 1412, 337, 428, 3479, 2539, 3861, 13, 51026, 51026, 1449, 257, 8050, 493, 300, 341, 293, 264, 958, 1326, 2145, 486, 1643, 257, 707, 857, 411, 257, 4444, 51242, 51242, 3411, 295, 819, 7512, 293, 286, 12328, 498, 309, 2544, 257, 707, 857, 4444, 3411, 1480, 13, 51502, 51502, 400, 300, 311, 570, 3479, 2539, 5821, 366, 819, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.14411818186442057, "compression_ratio": 1.7644444444444445, "no_speech_prob": 0.050978731364011765}, {"id": 2, "seek": 0, "start": 13.24, "end": 17.56, "text": " Just a heads up that this and the next few videos will seem a little bit like a grab", "tokens": [50364, 682, 341, 960, 11, 286, 1116, 411, 281, 2073, 365, 291, 512, 6082, 337, 5127, 1412, 420, 12510, 544, 50762, 50762, 1412, 420, 2171, 754, 4084, 544, 1412, 337, 428, 3479, 2539, 3861, 13, 51026, 51026, 1449, 257, 8050, 493, 300, 341, 293, 264, 958, 1326, 2145, 486, 1643, 257, 707, 857, 411, 257, 4444, 51242, 51242, 3411, 295, 819, 7512, 293, 286, 12328, 498, 309, 2544, 257, 707, 857, 4444, 3411, 1480, 13, 51502, 51502, 400, 300, 311, 570, 3479, 2539, 5821, 366, 819, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.14411818186442057, "compression_ratio": 1.7644444444444445, "no_speech_prob": 0.050978731364011765}, {"id": 3, "seek": 0, "start": 17.56, "end": 22.76, "text": " bag of different techniques and I apologize if it seems a little bit grab baggy.", "tokens": [50364, 682, 341, 960, 11, 286, 1116, 411, 281, 2073, 365, 291, 512, 6082, 337, 5127, 1412, 420, 12510, 544, 50762, 50762, 1412, 420, 2171, 754, 4084, 544, 1412, 337, 428, 3479, 2539, 3861, 13, 51026, 51026, 1449, 257, 8050, 493, 300, 341, 293, 264, 958, 1326, 2145, 486, 1643, 257, 707, 857, 411, 257, 4444, 51242, 51242, 3411, 295, 819, 7512, 293, 286, 12328, 498, 309, 2544, 257, 707, 857, 4444, 3411, 1480, 13, 51502, 51502, 400, 300, 311, 570, 3479, 2539, 5821, 366, 819, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.14411818186442057, "compression_ratio": 1.7644444444444445, "no_speech_prob": 0.050978731364011765}, {"id": 4, "seek": 0, "start": 22.76, "end": 25.6, "text": " And that's because machine learning applications are different.", "tokens": [50364, 682, 341, 960, 11, 286, 1116, 411, 281, 2073, 365, 291, 512, 6082, 337, 5127, 1412, 420, 12510, 544, 50762, 50762, 1412, 420, 2171, 754, 4084, 544, 1412, 337, 428, 3479, 2539, 3861, 13, 51026, 51026, 1449, 257, 8050, 493, 300, 341, 293, 264, 958, 1326, 2145, 486, 1643, 257, 707, 857, 411, 257, 4444, 51242, 51242, 3411, 295, 819, 7512, 293, 286, 12328, 498, 309, 2544, 257, 707, 857, 4444, 3411, 1480, 13, 51502, 51502, 400, 300, 311, 570, 3479, 2539, 5821, 366, 819, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.14411818186442057, "compression_ratio": 1.7644444444444445, "no_speech_prob": 0.050978731364011765}, {"id": 5, "seek": 2560, "start": 25.6, "end": 30.080000000000002, "text": " Machine learning is applied to so many different problems and for some humans are great at", "tokens": [50364, 22155, 2539, 307, 6456, 281, 370, 867, 819, 2740, 293, 337, 512, 6255, 366, 869, 412, 50588, 50588, 4084, 16949, 293, 337, 512, 291, 393, 380, 483, 544, 1412, 293, 337, 512, 291, 393, 380, 13, 50842, 50842, 400, 300, 311, 983, 819, 5821, 767, 2171, 818, 337, 4748, 819, 7512, 13, 51096, 51096, 583, 286, 1454, 294, 341, 293, 264, 958, 1326, 2145, 281, 2073, 365, 291, 512, 295, 264, 7512, 300, 51302, 51302, 286, 600, 1352, 281, 312, 881, 4420, 337, 819, 5821, 13, 51444, 51444, 5780, 406, 633, 472, 295, 552, 486, 3079, 337, 633, 2167, 3861, 11, 457, 286, 1454, 867, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.16315328965493298, "compression_ratio": 1.9153846153846155, "no_speech_prob": 5.2243216487113386e-05}, {"id": 6, "seek": 2560, "start": 30.080000000000002, "end": 35.160000000000004, "text": " creating labels and for some you can't get more data and for some you can't.", "tokens": [50364, 22155, 2539, 307, 6456, 281, 370, 867, 819, 2740, 293, 337, 512, 6255, 366, 869, 412, 50588, 50588, 4084, 16949, 293, 337, 512, 291, 393, 380, 483, 544, 1412, 293, 337, 512, 291, 393, 380, 13, 50842, 50842, 400, 300, 311, 983, 819, 5821, 767, 2171, 818, 337, 4748, 819, 7512, 13, 51096, 51096, 583, 286, 1454, 294, 341, 293, 264, 958, 1326, 2145, 281, 2073, 365, 291, 512, 295, 264, 7512, 300, 51302, 51302, 286, 600, 1352, 281, 312, 881, 4420, 337, 819, 5821, 13, 51444, 51444, 5780, 406, 633, 472, 295, 552, 486, 3079, 337, 633, 2167, 3861, 11, 457, 286, 1454, 867, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.16315328965493298, "compression_ratio": 1.9153846153846155, "no_speech_prob": 5.2243216487113386e-05}, {"id": 7, "seek": 2560, "start": 35.160000000000004, "end": 40.24, "text": " And that's why different applications actually sometimes call for slightly different techniques.", "tokens": [50364, 22155, 2539, 307, 6456, 281, 370, 867, 819, 2740, 293, 337, 512, 6255, 366, 869, 412, 50588, 50588, 4084, 16949, 293, 337, 512, 291, 393, 380, 483, 544, 1412, 293, 337, 512, 291, 393, 380, 13, 50842, 50842, 400, 300, 311, 983, 819, 5821, 767, 2171, 818, 337, 4748, 819, 7512, 13, 51096, 51096, 583, 286, 1454, 294, 341, 293, 264, 958, 1326, 2145, 281, 2073, 365, 291, 512, 295, 264, 7512, 300, 51302, 51302, 286, 600, 1352, 281, 312, 881, 4420, 337, 819, 5821, 13, 51444, 51444, 5780, 406, 633, 472, 295, 552, 486, 3079, 337, 633, 2167, 3861, 11, 457, 286, 1454, 867, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.16315328965493298, "compression_ratio": 1.9153846153846155, "no_speech_prob": 5.2243216487113386e-05}, {"id": 8, "seek": 2560, "start": 40.24, "end": 44.36, "text": " But I hope in this and the next few videos to share with you some of the techniques that", "tokens": [50364, 22155, 2539, 307, 6456, 281, 370, 867, 819, 2740, 293, 337, 512, 6255, 366, 869, 412, 50588, 50588, 4084, 16949, 293, 337, 512, 291, 393, 380, 483, 544, 1412, 293, 337, 512, 291, 393, 380, 13, 50842, 50842, 400, 300, 311, 983, 819, 5821, 767, 2171, 818, 337, 4748, 819, 7512, 13, 51096, 51096, 583, 286, 1454, 294, 341, 293, 264, 958, 1326, 2145, 281, 2073, 365, 291, 512, 295, 264, 7512, 300, 51302, 51302, 286, 600, 1352, 281, 312, 881, 4420, 337, 819, 5821, 13, 51444, 51444, 5780, 406, 633, 472, 295, 552, 486, 3079, 337, 633, 2167, 3861, 11, 457, 286, 1454, 867, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.16315328965493298, "compression_ratio": 1.9153846153846155, "no_speech_prob": 5.2243216487113386e-05}, {"id": 9, "seek": 2560, "start": 44.36, "end": 47.2, "text": " I've found to be most useful for different applications.", "tokens": [50364, 22155, 2539, 307, 6456, 281, 370, 867, 819, 2740, 293, 337, 512, 6255, 366, 869, 412, 50588, 50588, 4084, 16949, 293, 337, 512, 291, 393, 380, 483, 544, 1412, 293, 337, 512, 291, 393, 380, 13, 50842, 50842, 400, 300, 311, 983, 819, 5821, 767, 2171, 818, 337, 4748, 819, 7512, 13, 51096, 51096, 583, 286, 1454, 294, 341, 293, 264, 958, 1326, 2145, 281, 2073, 365, 291, 512, 295, 264, 7512, 300, 51302, 51302, 286, 600, 1352, 281, 312, 881, 4420, 337, 819, 5821, 13, 51444, 51444, 5780, 406, 633, 472, 295, 552, 486, 3079, 337, 633, 2167, 3861, 11, 457, 286, 1454, 867, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.16315328965493298, "compression_ratio": 1.9153846153846155, "no_speech_prob": 5.2243216487113386e-05}, {"id": 10, "seek": 2560, "start": 47.2, "end": 51.68000000000001, "text": " Although not every one of them will apply for every single application, but I hope many", "tokens": [50364, 22155, 2539, 307, 6456, 281, 370, 867, 819, 2740, 293, 337, 512, 6255, 366, 869, 412, 50588, 50588, 4084, 16949, 293, 337, 512, 291, 393, 380, 483, 544, 1412, 293, 337, 512, 291, 393, 380, 13, 50842, 50842, 400, 300, 311, 983, 819, 5821, 767, 2171, 818, 337, 4748, 819, 7512, 13, 51096, 51096, 583, 286, 1454, 294, 341, 293, 264, 958, 1326, 2145, 281, 2073, 365, 291, 512, 295, 264, 7512, 300, 51302, 51302, 286, 600, 1352, 281, 312, 881, 4420, 337, 819, 5821, 13, 51444, 51444, 5780, 406, 633, 472, 295, 552, 486, 3079, 337, 633, 2167, 3861, 11, 457, 286, 1454, 867, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.16315328965493298, "compression_ratio": 1.9153846153846155, "no_speech_prob": 5.2243216487113386e-05}, {"id": 11, "seek": 5168, "start": 51.68, "end": 56.84, "text": " of them will be useful for many of the applications that you'll be working on as well.", "tokens": [50364, 295, 552, 486, 312, 4420, 337, 867, 295, 264, 5821, 300, 291, 603, 312, 1364, 322, 382, 731, 13, 50622, 50622, 583, 718, 311, 747, 257, 574, 412, 512, 6082, 337, 577, 281, 909, 1412, 337, 428, 3861, 13, 50876, 50876, 1133, 3097, 3479, 2539, 14642, 11, 309, 3417, 411, 1009, 321, 3172, 321, 632, 754, 544, 51094, 51094, 1412, 1920, 439, 264, 565, 13, 51220, 51220, 400, 370, 2171, 309, 311, 37900, 281, 718, 311, 445, 483, 544, 1412, 295, 1203, 13, 51518, 51518, 583, 1382, 281, 483, 544, 1412, 295, 439, 3467, 393, 312, 2964, 293, 5124, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10001720831944393, "compression_ratio": 1.7073170731707317, "no_speech_prob": 7.071434538374888e-06}, {"id": 12, "seek": 5168, "start": 56.84, "end": 61.92, "text": " But let's take a look at some tips for how to add data for your application.", "tokens": [50364, 295, 552, 486, 312, 4420, 337, 867, 295, 264, 5821, 300, 291, 603, 312, 1364, 322, 382, 731, 13, 50622, 50622, 583, 718, 311, 747, 257, 574, 412, 512, 6082, 337, 577, 281, 909, 1412, 337, 428, 3861, 13, 50876, 50876, 1133, 3097, 3479, 2539, 14642, 11, 309, 3417, 411, 1009, 321, 3172, 321, 632, 754, 544, 51094, 51094, 1412, 1920, 439, 264, 565, 13, 51220, 51220, 400, 370, 2171, 309, 311, 37900, 281, 718, 311, 445, 483, 544, 1412, 295, 1203, 13, 51518, 51518, 583, 1382, 281, 483, 544, 1412, 295, 439, 3467, 393, 312, 2964, 293, 5124, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10001720831944393, "compression_ratio": 1.7073170731707317, "no_speech_prob": 7.071434538374888e-06}, {"id": 13, "seek": 5168, "start": 61.92, "end": 66.28, "text": " When training machine learning algorithms, it feels like always we wish we had even more", "tokens": [50364, 295, 552, 486, 312, 4420, 337, 867, 295, 264, 5821, 300, 291, 603, 312, 1364, 322, 382, 731, 13, 50622, 50622, 583, 718, 311, 747, 257, 574, 412, 512, 6082, 337, 577, 281, 909, 1412, 337, 428, 3861, 13, 50876, 50876, 1133, 3097, 3479, 2539, 14642, 11, 309, 3417, 411, 1009, 321, 3172, 321, 632, 754, 544, 51094, 51094, 1412, 1920, 439, 264, 565, 13, 51220, 51220, 400, 370, 2171, 309, 311, 37900, 281, 718, 311, 445, 483, 544, 1412, 295, 1203, 13, 51518, 51518, 583, 1382, 281, 483, 544, 1412, 295, 439, 3467, 393, 312, 2964, 293, 5124, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10001720831944393, "compression_ratio": 1.7073170731707317, "no_speech_prob": 7.071434538374888e-06}, {"id": 14, "seek": 5168, "start": 66.28, "end": 68.8, "text": " data almost all the time.", "tokens": [50364, 295, 552, 486, 312, 4420, 337, 867, 295, 264, 5821, 300, 291, 603, 312, 1364, 322, 382, 731, 13, 50622, 50622, 583, 718, 311, 747, 257, 574, 412, 512, 6082, 337, 577, 281, 909, 1412, 337, 428, 3861, 13, 50876, 50876, 1133, 3097, 3479, 2539, 14642, 11, 309, 3417, 411, 1009, 321, 3172, 321, 632, 754, 544, 51094, 51094, 1412, 1920, 439, 264, 565, 13, 51220, 51220, 400, 370, 2171, 309, 311, 37900, 281, 718, 311, 445, 483, 544, 1412, 295, 1203, 13, 51518, 51518, 583, 1382, 281, 483, 544, 1412, 295, 439, 3467, 393, 312, 2964, 293, 5124, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10001720831944393, "compression_ratio": 1.7073170731707317, "no_speech_prob": 7.071434538374888e-06}, {"id": 15, "seek": 5168, "start": 68.8, "end": 74.76, "text": " And so sometimes it's tempting to let's just get more data of everything.", "tokens": [50364, 295, 552, 486, 312, 4420, 337, 867, 295, 264, 5821, 300, 291, 603, 312, 1364, 322, 382, 731, 13, 50622, 50622, 583, 718, 311, 747, 257, 574, 412, 512, 6082, 337, 577, 281, 909, 1412, 337, 428, 3861, 13, 50876, 50876, 1133, 3097, 3479, 2539, 14642, 11, 309, 3417, 411, 1009, 321, 3172, 321, 632, 754, 544, 51094, 51094, 1412, 1920, 439, 264, 565, 13, 51220, 51220, 400, 370, 2171, 309, 311, 37900, 281, 718, 311, 445, 483, 544, 1412, 295, 1203, 13, 51518, 51518, 583, 1382, 281, 483, 544, 1412, 295, 439, 3467, 393, 312, 2964, 293, 5124, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10001720831944393, "compression_ratio": 1.7073170731707317, "no_speech_prob": 7.071434538374888e-06}, {"id": 16, "seek": 5168, "start": 74.76, "end": 81.03999999999999, "text": " But trying to get more data of all types can be slow and expensive.", "tokens": [50364, 295, 552, 486, 312, 4420, 337, 867, 295, 264, 5821, 300, 291, 603, 312, 1364, 322, 382, 731, 13, 50622, 50622, 583, 718, 311, 747, 257, 574, 412, 512, 6082, 337, 577, 281, 909, 1412, 337, 428, 3861, 13, 50876, 50876, 1133, 3097, 3479, 2539, 14642, 11, 309, 3417, 411, 1009, 321, 3172, 321, 632, 754, 544, 51094, 51094, 1412, 1920, 439, 264, 565, 13, 51220, 51220, 400, 370, 2171, 309, 311, 37900, 281, 718, 311, 445, 483, 544, 1412, 295, 1203, 13, 51518, 51518, 583, 1382, 281, 483, 544, 1412, 295, 439, 3467, 393, 312, 2964, 293, 5124, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10001720831944393, "compression_ratio": 1.7073170731707317, "no_speech_prob": 7.071434538374888e-06}, {"id": 17, "seek": 8104, "start": 81.04, "end": 87.36000000000001, "text": " Instead an alternative way of adding data might be to focus on adding more data of the", "tokens": [50364, 7156, 364, 8535, 636, 295, 5127, 1412, 1062, 312, 281, 1879, 322, 5127, 544, 1412, 295, 264, 50680, 50680, 3467, 689, 6713, 5215, 307, 16176, 294, 452, 854, 13, 50898, 50898, 682, 264, 3894, 4137, 11, 321, 1866, 498, 6713, 5215, 3131, 300, 903, 36159, 24028, 390, 257, 2416, 1154, 11, 51302, 51302, 550, 291, 815, 4536, 281, 362, 257, 544, 15045, 4630, 406, 281, 483, 544, 1412, 295, 1203, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.15705303243688634, "compression_ratio": 1.6424870466321244, "no_speech_prob": 2.601492951725959e-06}, {"id": 18, "seek": 8104, "start": 87.36000000000001, "end": 91.72, "text": " types where error analysis is indicated in my help.", "tokens": [50364, 7156, 364, 8535, 636, 295, 5127, 1412, 1062, 312, 281, 1879, 322, 5127, 544, 1412, 295, 264, 50680, 50680, 3467, 689, 6713, 5215, 307, 16176, 294, 452, 854, 13, 50898, 50898, 682, 264, 3894, 4137, 11, 321, 1866, 498, 6713, 5215, 3131, 300, 903, 36159, 24028, 390, 257, 2416, 1154, 11, 51302, 51302, 550, 291, 815, 4536, 281, 362, 257, 544, 15045, 4630, 406, 281, 483, 544, 1412, 295, 1203, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.15705303243688634, "compression_ratio": 1.6424870466321244, "no_speech_prob": 2.601492951725959e-06}, {"id": 19, "seek": 8104, "start": 91.72, "end": 99.80000000000001, "text": " In the previous slide, we saw if error analysis review that pharma spam was a large problem,", "tokens": [50364, 7156, 364, 8535, 636, 295, 5127, 1412, 1062, 312, 281, 1879, 322, 5127, 544, 1412, 295, 264, 50680, 50680, 3467, 689, 6713, 5215, 307, 16176, 294, 452, 854, 13, 50898, 50898, 682, 264, 3894, 4137, 11, 321, 1866, 498, 6713, 5215, 3131, 300, 903, 36159, 24028, 390, 257, 2416, 1154, 11, 51302, 51302, 550, 291, 815, 4536, 281, 362, 257, 544, 15045, 4630, 406, 281, 483, 544, 1412, 295, 1203, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.15705303243688634, "compression_ratio": 1.6424870466321244, "no_speech_prob": 2.601492951725959e-06}, {"id": 20, "seek": 8104, "start": 99.80000000000001, "end": 104.84, "text": " then you may decide to have a more targeted effort not to get more data of everything", "tokens": [50364, 7156, 364, 8535, 636, 295, 5127, 1412, 1062, 312, 281, 1879, 322, 5127, 544, 1412, 295, 264, 50680, 50680, 3467, 689, 6713, 5215, 307, 16176, 294, 452, 854, 13, 50898, 50898, 682, 264, 3894, 4137, 11, 321, 1866, 498, 6713, 5215, 3131, 300, 903, 36159, 24028, 390, 257, 2416, 1154, 11, 51302, 51302, 550, 291, 815, 4536, 281, 362, 257, 544, 15045, 4630, 406, 281, 483, 544, 1412, 295, 1203, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.15705303243688634, "compression_ratio": 1.6424870466321244, "no_speech_prob": 2.601492951725959e-06}, {"id": 21, "seek": 10484, "start": 104.84, "end": 111.24000000000001, "text": " under the sun, but to instead focus on getting more examples of pharma spam.", "tokens": [50364, 833, 264, 3295, 11, 457, 281, 2602, 1879, 322, 1242, 544, 5110, 295, 903, 36159, 24028, 13, 50684, 50684, 2022, 257, 544, 25403, 2063, 11, 341, 727, 718, 291, 909, 445, 264, 12524, 291, 643, 281, 854, 428, 51006, 51006, 2539, 9284, 483, 20294, 322, 18538, 903, 36159, 24028, 13, 51232, 51232, 400, 370, 472, 1365, 295, 577, 291, 1062, 360, 341, 307, 498, 291, 362, 257, 688, 295, 32118, 18657, 292, 3796, 1412, 11, 51550, 51550], "temperature": 0.0, "avg_logprob": -0.11776302434221099, "compression_ratio": 1.586734693877551, "no_speech_prob": 2.521512215025723e-06}, {"id": 22, "seek": 10484, "start": 111.24000000000001, "end": 117.68, "text": " With a more modest cost, this could let you add just the emails you need to help your", "tokens": [50364, 833, 264, 3295, 11, 457, 281, 2602, 1879, 322, 1242, 544, 5110, 295, 903, 36159, 24028, 13, 50684, 50684, 2022, 257, 544, 25403, 2063, 11, 341, 727, 718, 291, 909, 445, 264, 12524, 291, 643, 281, 854, 428, 51006, 51006, 2539, 9284, 483, 20294, 322, 18538, 903, 36159, 24028, 13, 51232, 51232, 400, 370, 472, 1365, 295, 577, 291, 1062, 360, 341, 307, 498, 291, 362, 257, 688, 295, 32118, 18657, 292, 3796, 1412, 11, 51550, 51550], "temperature": 0.0, "avg_logprob": -0.11776302434221099, "compression_ratio": 1.586734693877551, "no_speech_prob": 2.521512215025723e-06}, {"id": 23, "seek": 10484, "start": 117.68, "end": 122.2, "text": " learning algorithm get smarter on recognizing pharma spam.", "tokens": [50364, 833, 264, 3295, 11, 457, 281, 2602, 1879, 322, 1242, 544, 5110, 295, 903, 36159, 24028, 13, 50684, 50684, 2022, 257, 544, 25403, 2063, 11, 341, 727, 718, 291, 909, 445, 264, 12524, 291, 643, 281, 854, 428, 51006, 51006, 2539, 9284, 483, 20294, 322, 18538, 903, 36159, 24028, 13, 51232, 51232, 400, 370, 472, 1365, 295, 577, 291, 1062, 360, 341, 307, 498, 291, 362, 257, 688, 295, 32118, 18657, 292, 3796, 1412, 11, 51550, 51550], "temperature": 0.0, "avg_logprob": -0.11776302434221099, "compression_ratio": 1.586734693877551, "no_speech_prob": 2.521512215025723e-06}, {"id": 24, "seek": 10484, "start": 122.2, "end": 128.56, "text": " And so one example of how you might do this is if you have a lot of unlabeled email data,", "tokens": [50364, 833, 264, 3295, 11, 457, 281, 2602, 1879, 322, 1242, 544, 5110, 295, 903, 36159, 24028, 13, 50684, 50684, 2022, 257, 544, 25403, 2063, 11, 341, 727, 718, 291, 909, 445, 264, 12524, 291, 643, 281, 854, 428, 51006, 51006, 2539, 9284, 483, 20294, 322, 18538, 903, 36159, 24028, 13, 51232, 51232, 400, 370, 472, 1365, 295, 577, 291, 1062, 360, 341, 307, 498, 291, 362, 257, 688, 295, 32118, 18657, 292, 3796, 1412, 11, 51550, 51550], "temperature": 0.0, "avg_logprob": -0.11776302434221099, "compression_ratio": 1.586734693877551, "no_speech_prob": 2.521512215025723e-06}, {"id": 25, "seek": 12856, "start": 128.56, "end": 135.68, "text": " say email sitting around and no one has bothered to label yet as spam or non spam, you might", "tokens": [50364, 584, 3796, 3798, 926, 293, 572, 472, 575, 22996, 281, 7645, 1939, 382, 24028, 420, 2107, 24028, 11, 291, 1062, 50720, 50720, 312, 1075, 281, 352, 281, 264, 32118, 18657, 292, 1412, 13, 50858, 50858, 509, 815, 312, 1075, 281, 1029, 428, 7645, 433, 281, 2661, 1110, 332, 807, 264, 32118, 18657, 292, 1412, 293, 915, 544, 51150, 51150, 5110, 4682, 295, 903, 36159, 4077, 24028, 13, 51404, 51404, 400, 341, 727, 9194, 428, 2539, 9284, 311, 3389, 709, 544, 813, 445, 1382, 281, 51662, 51662, 909, 544, 1412, 295, 439, 7527, 295, 12524, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.13667159610324436, "compression_ratio": 1.6779661016949152, "no_speech_prob": 2.4439318622171413e-06}, {"id": 26, "seek": 12856, "start": 135.68, "end": 138.44, "text": " be able to go to the unlabeled data.", "tokens": [50364, 584, 3796, 3798, 926, 293, 572, 472, 575, 22996, 281, 7645, 1939, 382, 24028, 420, 2107, 24028, 11, 291, 1062, 50720, 50720, 312, 1075, 281, 352, 281, 264, 32118, 18657, 292, 1412, 13, 50858, 50858, 509, 815, 312, 1075, 281, 1029, 428, 7645, 433, 281, 2661, 1110, 332, 807, 264, 32118, 18657, 292, 1412, 293, 915, 544, 51150, 51150, 5110, 4682, 295, 903, 36159, 4077, 24028, 13, 51404, 51404, 400, 341, 727, 9194, 428, 2539, 9284, 311, 3389, 709, 544, 813, 445, 1382, 281, 51662, 51662, 909, 544, 1412, 295, 439, 7527, 295, 12524, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.13667159610324436, "compression_ratio": 1.6779661016949152, "no_speech_prob": 2.4439318622171413e-06}, {"id": 27, "seek": 12856, "start": 138.44, "end": 144.28, "text": " You may be able to ask your labelers to quickly skim through the unlabeled data and find more", "tokens": [50364, 584, 3796, 3798, 926, 293, 572, 472, 575, 22996, 281, 7645, 1939, 382, 24028, 420, 2107, 24028, 11, 291, 1062, 50720, 50720, 312, 1075, 281, 352, 281, 264, 32118, 18657, 292, 1412, 13, 50858, 50858, 509, 815, 312, 1075, 281, 1029, 428, 7645, 433, 281, 2661, 1110, 332, 807, 264, 32118, 18657, 292, 1412, 293, 915, 544, 51150, 51150, 5110, 4682, 295, 903, 36159, 4077, 24028, 13, 51404, 51404, 400, 341, 727, 9194, 428, 2539, 9284, 311, 3389, 709, 544, 813, 445, 1382, 281, 51662, 51662, 909, 544, 1412, 295, 439, 7527, 295, 12524, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.13667159610324436, "compression_ratio": 1.6779661016949152, "no_speech_prob": 2.4439318622171413e-06}, {"id": 28, "seek": 12856, "start": 144.28, "end": 149.36, "text": " examples specifically of pharma related spam.", "tokens": [50364, 584, 3796, 3798, 926, 293, 572, 472, 575, 22996, 281, 7645, 1939, 382, 24028, 420, 2107, 24028, 11, 291, 1062, 50720, 50720, 312, 1075, 281, 352, 281, 264, 32118, 18657, 292, 1412, 13, 50858, 50858, 509, 815, 312, 1075, 281, 1029, 428, 7645, 433, 281, 2661, 1110, 332, 807, 264, 32118, 18657, 292, 1412, 293, 915, 544, 51150, 51150, 5110, 4682, 295, 903, 36159, 4077, 24028, 13, 51404, 51404, 400, 341, 727, 9194, 428, 2539, 9284, 311, 3389, 709, 544, 813, 445, 1382, 281, 51662, 51662, 909, 544, 1412, 295, 439, 7527, 295, 12524, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.13667159610324436, "compression_ratio": 1.6779661016949152, "no_speech_prob": 2.4439318622171413e-06}, {"id": 29, "seek": 12856, "start": 149.36, "end": 154.52, "text": " And this could boost your learning algorithm's performance much more than just trying to", "tokens": [50364, 584, 3796, 3798, 926, 293, 572, 472, 575, 22996, 281, 7645, 1939, 382, 24028, 420, 2107, 24028, 11, 291, 1062, 50720, 50720, 312, 1075, 281, 352, 281, 264, 32118, 18657, 292, 1412, 13, 50858, 50858, 509, 815, 312, 1075, 281, 1029, 428, 7645, 433, 281, 2661, 1110, 332, 807, 264, 32118, 18657, 292, 1412, 293, 915, 544, 51150, 51150, 5110, 4682, 295, 903, 36159, 4077, 24028, 13, 51404, 51404, 400, 341, 727, 9194, 428, 2539, 9284, 311, 3389, 709, 544, 813, 445, 1382, 281, 51662, 51662, 909, 544, 1412, 295, 439, 7527, 295, 12524, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.13667159610324436, "compression_ratio": 1.6779661016949152, "no_speech_prob": 2.4439318622171413e-06}, {"id": 30, "seek": 12856, "start": 154.52, "end": 157.72, "text": " add more data of all sorts of emails.", "tokens": [50364, 584, 3796, 3798, 926, 293, 572, 472, 575, 22996, 281, 7645, 1939, 382, 24028, 420, 2107, 24028, 11, 291, 1062, 50720, 50720, 312, 1075, 281, 352, 281, 264, 32118, 18657, 292, 1412, 13, 50858, 50858, 509, 815, 312, 1075, 281, 1029, 428, 7645, 433, 281, 2661, 1110, 332, 807, 264, 32118, 18657, 292, 1412, 293, 915, 544, 51150, 51150, 5110, 4682, 295, 903, 36159, 4077, 24028, 13, 51404, 51404, 400, 341, 727, 9194, 428, 2539, 9284, 311, 3389, 709, 544, 813, 445, 1382, 281, 51662, 51662, 909, 544, 1412, 295, 439, 7527, 295, 12524, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.13667159610324436, "compression_ratio": 1.6779661016949152, "no_speech_prob": 2.4439318622171413e-06}, {"id": 31, "seek": 15772, "start": 157.72, "end": 163.12, "text": " But the more general pattern I hope you take away from this is if you have some ways to", "tokens": [50364, 583, 264, 544, 2674, 5102, 286, 1454, 291, 747, 1314, 490, 341, 307, 498, 291, 362, 512, 2098, 281, 50634, 50634, 909, 544, 1412, 295, 1203, 11, 300, 311, 1392, 11, 1825, 2085, 365, 300, 13, 50830, 50830, 583, 498, 6713, 5215, 575, 16176, 300, 456, 311, 1629, 2090, 1385, 295, 264, 1412, 300, 264, 9284, 51188, 51188, 307, 884, 4098, 22271, 322, 293, 300, 291, 528, 281, 3470, 3389, 322, 11, 550, 1242, 51434, 51434, 544, 1412, 295, 445, 264, 3467, 689, 291, 528, 309, 281, 360, 1101, 11, 312, 309, 544, 5110, 295, 27130, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.08615958213806152, "compression_ratio": 1.7109375, "no_speech_prob": 4.860314220422879e-06}, {"id": 32, "seek": 15772, "start": 163.12, "end": 167.04, "text": " add more data of everything, that's okay, nothing wrong with that.", "tokens": [50364, 583, 264, 544, 2674, 5102, 286, 1454, 291, 747, 1314, 490, 341, 307, 498, 291, 362, 512, 2098, 281, 50634, 50634, 909, 544, 1412, 295, 1203, 11, 300, 311, 1392, 11, 1825, 2085, 365, 300, 13, 50830, 50830, 583, 498, 6713, 5215, 575, 16176, 300, 456, 311, 1629, 2090, 1385, 295, 264, 1412, 300, 264, 9284, 51188, 51188, 307, 884, 4098, 22271, 322, 293, 300, 291, 528, 281, 3470, 3389, 322, 11, 550, 1242, 51434, 51434, 544, 1412, 295, 445, 264, 3467, 689, 291, 528, 309, 281, 360, 1101, 11, 312, 309, 544, 5110, 295, 27130, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.08615958213806152, "compression_ratio": 1.7109375, "no_speech_prob": 4.860314220422879e-06}, {"id": 33, "seek": 15772, "start": 167.04, "end": 174.2, "text": " But if error analysis has indicated that there's certain subsets of the data that the algorithm", "tokens": [50364, 583, 264, 544, 2674, 5102, 286, 1454, 291, 747, 1314, 490, 341, 307, 498, 291, 362, 512, 2098, 281, 50634, 50634, 909, 544, 1412, 295, 1203, 11, 300, 311, 1392, 11, 1825, 2085, 365, 300, 13, 50830, 50830, 583, 498, 6713, 5215, 575, 16176, 300, 456, 311, 1629, 2090, 1385, 295, 264, 1412, 300, 264, 9284, 51188, 51188, 307, 884, 4098, 22271, 322, 293, 300, 291, 528, 281, 3470, 3389, 322, 11, 550, 1242, 51434, 51434, 544, 1412, 295, 445, 264, 3467, 689, 291, 528, 309, 281, 360, 1101, 11, 312, 309, 544, 5110, 295, 27130, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.08615958213806152, "compression_ratio": 1.7109375, "no_speech_prob": 4.860314220422879e-06}, {"id": 34, "seek": 15772, "start": 174.2, "end": 179.12, "text": " is doing particularly poorly on and that you want to improve performance on, then getting", "tokens": [50364, 583, 264, 544, 2674, 5102, 286, 1454, 291, 747, 1314, 490, 341, 307, 498, 291, 362, 512, 2098, 281, 50634, 50634, 909, 544, 1412, 295, 1203, 11, 300, 311, 1392, 11, 1825, 2085, 365, 300, 13, 50830, 50830, 583, 498, 6713, 5215, 575, 16176, 300, 456, 311, 1629, 2090, 1385, 295, 264, 1412, 300, 264, 9284, 51188, 51188, 307, 884, 4098, 22271, 322, 293, 300, 291, 528, 281, 3470, 3389, 322, 11, 550, 1242, 51434, 51434, 544, 1412, 295, 445, 264, 3467, 689, 291, 528, 309, 281, 360, 1101, 11, 312, 309, 544, 5110, 295, 27130, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.08615958213806152, "compression_ratio": 1.7109375, "no_speech_prob": 4.860314220422879e-06}, {"id": 35, "seek": 15772, "start": 179.12, "end": 185.2, "text": " more data of just the types where you want it to do better, be it more examples of pharmaceutical", "tokens": [50364, 583, 264, 544, 2674, 5102, 286, 1454, 291, 747, 1314, 490, 341, 307, 498, 291, 362, 512, 2098, 281, 50634, 50634, 909, 544, 1412, 295, 1203, 11, 300, 311, 1392, 11, 1825, 2085, 365, 300, 13, 50830, 50830, 583, 498, 6713, 5215, 575, 16176, 300, 456, 311, 1629, 2090, 1385, 295, 264, 1412, 300, 264, 9284, 51188, 51188, 307, 884, 4098, 22271, 322, 293, 300, 291, 528, 281, 3470, 3389, 322, 11, 550, 1242, 51434, 51434, 544, 1412, 295, 445, 264, 3467, 689, 291, 528, 309, 281, 360, 1101, 11, 312, 309, 544, 5110, 295, 27130, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.08615958213806152, "compression_ratio": 1.7109375, "no_speech_prob": 4.860314220422879e-06}, {"id": 36, "seek": 18520, "start": 185.2, "end": 190.39999999999998, "text": " spam or more examples of phishing spam or something else, that could be a more efficient", "tokens": [50364, 24028, 420, 544, 5110, 295, 903, 3807, 24028, 420, 746, 1646, 11, 300, 727, 312, 257, 544, 7148, 50624, 50624, 636, 281, 909, 445, 257, 707, 857, 295, 1412, 11, 457, 9194, 428, 9284, 311, 3389, 538, 1596, 50816, 50816, 257, 688, 13, 50866, 50866, 19707, 1242, 428, 2377, 322, 3360, 777, 3097, 5110, 2031, 288, 11, 456, 311, 1071, 6532, 300, 311, 51192, 51192, 13371, 1143, 11, 2318, 337, 5267, 293, 6278, 1412, 300, 393, 3488, 428, 3097, 992, 2744, 51590, 51590, 10591, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.11288174618495984, "compression_ratio": 1.61864406779661, "no_speech_prob": 4.936850018566474e-06}, {"id": 37, "seek": 18520, "start": 190.39999999999998, "end": 194.23999999999998, "text": " way to add just a little bit of data, but boost your algorithm's performance by quite", "tokens": [50364, 24028, 420, 544, 5110, 295, 903, 3807, 24028, 420, 746, 1646, 11, 300, 727, 312, 257, 544, 7148, 50624, 50624, 636, 281, 909, 445, 257, 707, 857, 295, 1412, 11, 457, 9194, 428, 9284, 311, 3389, 538, 1596, 50816, 50816, 257, 688, 13, 50866, 50866, 19707, 1242, 428, 2377, 322, 3360, 777, 3097, 5110, 2031, 288, 11, 456, 311, 1071, 6532, 300, 311, 51192, 51192, 13371, 1143, 11, 2318, 337, 5267, 293, 6278, 1412, 300, 393, 3488, 428, 3097, 992, 2744, 51590, 51590, 10591, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.11288174618495984, "compression_ratio": 1.61864406779661, "no_speech_prob": 4.936850018566474e-06}, {"id": 38, "seek": 18520, "start": 194.23999999999998, "end": 195.23999999999998, "text": " a lot.", "tokens": [50364, 24028, 420, 544, 5110, 295, 903, 3807, 24028, 420, 746, 1646, 11, 300, 727, 312, 257, 544, 7148, 50624, 50624, 636, 281, 909, 445, 257, 707, 857, 295, 1412, 11, 457, 9194, 428, 9284, 311, 3389, 538, 1596, 50816, 50816, 257, 688, 13, 50866, 50866, 19707, 1242, 428, 2377, 322, 3360, 777, 3097, 5110, 2031, 288, 11, 456, 311, 1071, 6532, 300, 311, 51192, 51192, 13371, 1143, 11, 2318, 337, 5267, 293, 6278, 1412, 300, 393, 3488, 428, 3097, 992, 2744, 51590, 51590, 10591, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.11288174618495984, "compression_ratio": 1.61864406779661, "no_speech_prob": 4.936850018566474e-06}, {"id": 39, "seek": 18520, "start": 195.23999999999998, "end": 201.76, "text": " Beyond getting your hands on brand new training examples x y, there's another technique that's", "tokens": [50364, 24028, 420, 544, 5110, 295, 903, 3807, 24028, 420, 746, 1646, 11, 300, 727, 312, 257, 544, 7148, 50624, 50624, 636, 281, 909, 445, 257, 707, 857, 295, 1412, 11, 457, 9194, 428, 9284, 311, 3389, 538, 1596, 50816, 50816, 257, 688, 13, 50866, 50866, 19707, 1242, 428, 2377, 322, 3360, 777, 3097, 5110, 2031, 288, 11, 456, 311, 1071, 6532, 300, 311, 51192, 51192, 13371, 1143, 11, 2318, 337, 5267, 293, 6278, 1412, 300, 393, 3488, 428, 3097, 992, 2744, 51590, 51590, 10591, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.11288174618495984, "compression_ratio": 1.61864406779661, "no_speech_prob": 4.936850018566474e-06}, {"id": 40, "seek": 18520, "start": 201.76, "end": 209.72, "text": " widely used, especially for images and audio data that can increase your training set size", "tokens": [50364, 24028, 420, 544, 5110, 295, 903, 3807, 24028, 420, 746, 1646, 11, 300, 727, 312, 257, 544, 7148, 50624, 50624, 636, 281, 909, 445, 257, 707, 857, 295, 1412, 11, 457, 9194, 428, 9284, 311, 3389, 538, 1596, 50816, 50816, 257, 688, 13, 50866, 50866, 19707, 1242, 428, 2377, 322, 3360, 777, 3097, 5110, 2031, 288, 11, 456, 311, 1071, 6532, 300, 311, 51192, 51192, 13371, 1143, 11, 2318, 337, 5267, 293, 6278, 1412, 300, 393, 3488, 428, 3097, 992, 2744, 51590, 51590, 10591, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.11288174618495984, "compression_ratio": 1.61864406779661, "no_speech_prob": 4.936850018566474e-06}, {"id": 41, "seek": 18520, "start": 209.72, "end": 211.16, "text": " significantly.", "tokens": [50364, 24028, 420, 544, 5110, 295, 903, 3807, 24028, 420, 746, 1646, 11, 300, 727, 312, 257, 544, 7148, 50624, 50624, 636, 281, 909, 445, 257, 707, 857, 295, 1412, 11, 457, 9194, 428, 9284, 311, 3389, 538, 1596, 50816, 50816, 257, 688, 13, 50866, 50866, 19707, 1242, 428, 2377, 322, 3360, 777, 3097, 5110, 2031, 288, 11, 456, 311, 1071, 6532, 300, 311, 51192, 51192, 13371, 1143, 11, 2318, 337, 5267, 293, 6278, 1412, 300, 393, 3488, 428, 3097, 992, 2744, 51590, 51590, 10591, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.11288174618495984, "compression_ratio": 1.61864406779661, "no_speech_prob": 4.936850018566474e-06}, {"id": 42, "seek": 21116, "start": 211.16, "end": 216.04, "text": " This technique is called data augmentation, and what we're going to do is take an existing", "tokens": [50364, 639, 6532, 307, 1219, 1412, 14501, 19631, 11, 293, 437, 321, 434, 516, 281, 360, 307, 747, 364, 6741, 50608, 50608, 3097, 1365, 281, 1884, 257, 777, 3097, 1365, 13, 50780, 50780, 1171, 1365, 11, 498, 291, 434, 1382, 281, 5521, 264, 7825, 490, 316, 281, 1176, 337, 364, 422, 18547, 20674, 51088, 51088, 2517, 11150, 1154, 11, 370, 406, 445, 257, 14293, 1958, 281, 1722, 11, 457, 611, 264, 7825, 490, 51326, 51326, 316, 281, 1176, 13, 51400, 51400, 18600, 364, 3256, 411, 341, 11, 291, 1062, 4536, 281, 1884, 257, 777, 3097, 1365, 538, 19627, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.1162214184751605, "compression_ratio": 1.728813559322034, "no_speech_prob": 3.1381159715238027e-06}, {"id": 43, "seek": 21116, "start": 216.04, "end": 219.48, "text": " training example to create a new training example.", "tokens": [50364, 639, 6532, 307, 1219, 1412, 14501, 19631, 11, 293, 437, 321, 434, 516, 281, 360, 307, 747, 364, 6741, 50608, 50608, 3097, 1365, 281, 1884, 257, 777, 3097, 1365, 13, 50780, 50780, 1171, 1365, 11, 498, 291, 434, 1382, 281, 5521, 264, 7825, 490, 316, 281, 1176, 337, 364, 422, 18547, 20674, 51088, 51088, 2517, 11150, 1154, 11, 370, 406, 445, 257, 14293, 1958, 281, 1722, 11, 457, 611, 264, 7825, 490, 51326, 51326, 316, 281, 1176, 13, 51400, 51400, 18600, 364, 3256, 411, 341, 11, 291, 1062, 4536, 281, 1884, 257, 777, 3097, 1365, 538, 19627, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.1162214184751605, "compression_ratio": 1.728813559322034, "no_speech_prob": 3.1381159715238027e-06}, {"id": 44, "seek": 21116, "start": 219.48, "end": 225.64, "text": " For example, if you're trying to recognize the letters from A to Z for an OCR optical", "tokens": [50364, 639, 6532, 307, 1219, 1412, 14501, 19631, 11, 293, 437, 321, 434, 516, 281, 360, 307, 747, 364, 6741, 50608, 50608, 3097, 1365, 281, 1884, 257, 777, 3097, 1365, 13, 50780, 50780, 1171, 1365, 11, 498, 291, 434, 1382, 281, 5521, 264, 7825, 490, 316, 281, 1176, 337, 364, 422, 18547, 20674, 51088, 51088, 2517, 11150, 1154, 11, 370, 406, 445, 257, 14293, 1958, 281, 1722, 11, 457, 611, 264, 7825, 490, 51326, 51326, 316, 281, 1176, 13, 51400, 51400, 18600, 364, 3256, 411, 341, 11, 291, 1062, 4536, 281, 1884, 257, 777, 3097, 1365, 538, 19627, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.1162214184751605, "compression_ratio": 1.728813559322034, "no_speech_prob": 3.1381159715238027e-06}, {"id": 45, "seek": 21116, "start": 225.64, "end": 230.4, "text": " character recognition problem, so not just a digit 0 to 9, but also the letters from", "tokens": [50364, 639, 6532, 307, 1219, 1412, 14501, 19631, 11, 293, 437, 321, 434, 516, 281, 360, 307, 747, 364, 6741, 50608, 50608, 3097, 1365, 281, 1884, 257, 777, 3097, 1365, 13, 50780, 50780, 1171, 1365, 11, 498, 291, 434, 1382, 281, 5521, 264, 7825, 490, 316, 281, 1176, 337, 364, 422, 18547, 20674, 51088, 51088, 2517, 11150, 1154, 11, 370, 406, 445, 257, 14293, 1958, 281, 1722, 11, 457, 611, 264, 7825, 490, 51326, 51326, 316, 281, 1176, 13, 51400, 51400, 18600, 364, 3256, 411, 341, 11, 291, 1062, 4536, 281, 1884, 257, 777, 3097, 1365, 538, 19627, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.1162214184751605, "compression_ratio": 1.728813559322034, "no_speech_prob": 3.1381159715238027e-06}, {"id": 46, "seek": 21116, "start": 230.4, "end": 231.88, "text": " A to Z.", "tokens": [50364, 639, 6532, 307, 1219, 1412, 14501, 19631, 11, 293, 437, 321, 434, 516, 281, 360, 307, 747, 364, 6741, 50608, 50608, 3097, 1365, 281, 1884, 257, 777, 3097, 1365, 13, 50780, 50780, 1171, 1365, 11, 498, 291, 434, 1382, 281, 5521, 264, 7825, 490, 316, 281, 1176, 337, 364, 422, 18547, 20674, 51088, 51088, 2517, 11150, 1154, 11, 370, 406, 445, 257, 14293, 1958, 281, 1722, 11, 457, 611, 264, 7825, 490, 51326, 51326, 316, 281, 1176, 13, 51400, 51400, 18600, 364, 3256, 411, 341, 11, 291, 1062, 4536, 281, 1884, 257, 777, 3097, 1365, 538, 19627, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.1162214184751605, "compression_ratio": 1.728813559322034, "no_speech_prob": 3.1381159715238027e-06}, {"id": 47, "seek": 21116, "start": 231.88, "end": 238.32, "text": " Given an image like this, you might decide to create a new training example by rotating", "tokens": [50364, 639, 6532, 307, 1219, 1412, 14501, 19631, 11, 293, 437, 321, 434, 516, 281, 360, 307, 747, 364, 6741, 50608, 50608, 3097, 1365, 281, 1884, 257, 777, 3097, 1365, 13, 50780, 50780, 1171, 1365, 11, 498, 291, 434, 1382, 281, 5521, 264, 7825, 490, 316, 281, 1176, 337, 364, 422, 18547, 20674, 51088, 51088, 2517, 11150, 1154, 11, 370, 406, 445, 257, 14293, 1958, 281, 1722, 11, 457, 611, 264, 7825, 490, 51326, 51326, 316, 281, 1176, 13, 51400, 51400, 18600, 364, 3256, 411, 341, 11, 291, 1062, 4536, 281, 1884, 257, 777, 3097, 1365, 538, 19627, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.1162214184751605, "compression_ratio": 1.728813559322034, "no_speech_prob": 3.1381159715238027e-06}, {"id": 48, "seek": 23832, "start": 238.32, "end": 248.6, "text": " the image a bit or by enlarging the image a bit or by shrinking a little bit or by changing", "tokens": [50364, 264, 3256, 257, 857, 420, 538, 31976, 3249, 264, 3256, 257, 857, 420, 538, 41684, 257, 707, 857, 420, 538, 4473, 50878, 50878, 264, 8712, 295, 264, 3256, 13, 51004, 51004, 400, 613, 366, 5110, 295, 37555, 626, 281, 264, 3256, 300, 500, 380, 1319, 264, 1186, 300, 341, 51268, 51268, 307, 920, 264, 23339, 11, 300, 341, 307, 920, 264, 5063, 316, 13, 400, 337, 512, 7825, 11, 457, 406, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11745463053385417, "compression_ratio": 1.8838709677419354, "no_speech_prob": 1.8341877876082435e-05}, {"id": 49, "seek": 23832, "start": 248.6, "end": 251.12, "text": " the contrast of the image.", "tokens": [50364, 264, 3256, 257, 857, 420, 538, 31976, 3249, 264, 3256, 257, 857, 420, 538, 41684, 257, 707, 857, 420, 538, 4473, 50878, 50878, 264, 8712, 295, 264, 3256, 13, 51004, 51004, 400, 613, 366, 5110, 295, 37555, 626, 281, 264, 3256, 300, 500, 380, 1319, 264, 1186, 300, 341, 51268, 51268, 307, 920, 264, 23339, 11, 300, 341, 307, 920, 264, 5063, 316, 13, 400, 337, 512, 7825, 11, 457, 406, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11745463053385417, "compression_ratio": 1.8838709677419354, "no_speech_prob": 1.8341877876082435e-05}, {"id": 50, "seek": 23832, "start": 251.12, "end": 256.4, "text": " And these are examples of distortions to the image that don't change the fact that this", "tokens": [50364, 264, 3256, 257, 857, 420, 538, 31976, 3249, 264, 3256, 257, 857, 420, 538, 41684, 257, 707, 857, 420, 538, 4473, 50878, 50878, 264, 8712, 295, 264, 3256, 13, 51004, 51004, 400, 613, 366, 5110, 295, 37555, 626, 281, 264, 3256, 300, 500, 380, 1319, 264, 1186, 300, 341, 51268, 51268, 307, 920, 264, 23339, 11, 300, 341, 307, 920, 264, 5063, 316, 13, 400, 337, 512, 7825, 11, 457, 406, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11745463053385417, "compression_ratio": 1.8838709677419354, "no_speech_prob": 1.8341877876082435e-05}, {"id": 51, "seek": 23832, "start": 256.4, "end": 264.0, "text": " is still the alphabet, that this is still the letter A. And for some letters, but not", "tokens": [50364, 264, 3256, 257, 857, 420, 538, 31976, 3249, 264, 3256, 257, 857, 420, 538, 41684, 257, 707, 857, 420, 538, 4473, 50878, 50878, 264, 8712, 295, 264, 3256, 13, 51004, 51004, 400, 613, 366, 5110, 295, 37555, 626, 281, 264, 3256, 300, 500, 380, 1319, 264, 1186, 300, 341, 51268, 51268, 307, 920, 264, 23339, 11, 300, 341, 307, 920, 264, 5063, 316, 13, 400, 337, 512, 7825, 11, 457, 406, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11745463053385417, "compression_ratio": 1.8838709677419354, "no_speech_prob": 1.8341877876082435e-05}, {"id": 52, "seek": 26400, "start": 264.0, "end": 270.44, "text": " others, you can also take the mirror image of the letter and it still looks like the", "tokens": [50364, 2357, 11, 291, 393, 611, 747, 264, 8013, 3256, 295, 264, 5063, 293, 309, 920, 1542, 411, 264, 50686, 50686, 5063, 316, 11, 457, 341, 787, 13165, 281, 512, 7825, 13, 50846, 50846, 583, 613, 576, 312, 2098, 295, 1940, 257, 3097, 1365, 2031, 288, 293, 9275, 257, 28426, 420, 9887, 51372, 51372, 281, 264, 4846, 2031, 294, 1668, 281, 808, 493, 365, 1071, 1365, 300, 575, 264, 912, 7645, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.13173988342285156, "compression_ratio": 1.6237113402061856, "no_speech_prob": 6.438881428039167e-06}, {"id": 53, "seek": 26400, "start": 270.44, "end": 273.64, "text": " letter A, but this only applies to some letters.", "tokens": [50364, 2357, 11, 291, 393, 611, 747, 264, 8013, 3256, 295, 264, 5063, 293, 309, 920, 1542, 411, 264, 50686, 50686, 5063, 316, 11, 457, 341, 787, 13165, 281, 512, 7825, 13, 50846, 50846, 583, 613, 576, 312, 2098, 295, 1940, 257, 3097, 1365, 2031, 288, 293, 9275, 257, 28426, 420, 9887, 51372, 51372, 281, 264, 4846, 2031, 294, 1668, 281, 808, 493, 365, 1071, 1365, 300, 575, 264, 912, 7645, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.13173988342285156, "compression_ratio": 1.6237113402061856, "no_speech_prob": 6.438881428039167e-06}, {"id": 54, "seek": 26400, "start": 273.64, "end": 284.16, "text": " But these would be ways of taking a training example x y and applying a distortion or transformation", "tokens": [50364, 2357, 11, 291, 393, 611, 747, 264, 8013, 3256, 295, 264, 5063, 293, 309, 920, 1542, 411, 264, 50686, 50686, 5063, 316, 11, 457, 341, 787, 13165, 281, 512, 7825, 13, 50846, 50846, 583, 613, 576, 312, 2098, 295, 1940, 257, 3097, 1365, 2031, 288, 293, 9275, 257, 28426, 420, 9887, 51372, 51372, 281, 264, 4846, 2031, 294, 1668, 281, 808, 493, 365, 1071, 1365, 300, 575, 264, 912, 7645, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.13173988342285156, "compression_ratio": 1.6237113402061856, "no_speech_prob": 6.438881428039167e-06}, {"id": 55, "seek": 26400, "start": 284.16, "end": 290.76, "text": " to the input x in order to come up with another example that has the same label.", "tokens": [50364, 2357, 11, 291, 393, 611, 747, 264, 8013, 3256, 295, 264, 5063, 293, 309, 920, 1542, 411, 264, 50686, 50686, 5063, 316, 11, 457, 341, 787, 13165, 281, 512, 7825, 13, 50846, 50846, 583, 613, 576, 312, 2098, 295, 1940, 257, 3097, 1365, 2031, 288, 293, 9275, 257, 28426, 420, 9887, 51372, 51372, 281, 264, 4846, 2031, 294, 1668, 281, 808, 493, 365, 1071, 1365, 300, 575, 264, 912, 7645, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.13173988342285156, "compression_ratio": 1.6237113402061856, "no_speech_prob": 6.438881428039167e-06}, {"id": 56, "seek": 29076, "start": 290.76, "end": 296.03999999999996, "text": " And by doing this, you're telling the algorithm that the letter A rotated a bit or enlarged", "tokens": [50364, 400, 538, 884, 341, 11, 291, 434, 3585, 264, 9284, 300, 264, 5063, 316, 42146, 257, 857, 420, 31976, 3004, 50628, 50628, 257, 857, 420, 9884, 3197, 257, 707, 857, 13, 50710, 50710, 467, 307, 920, 264, 5063, 316, 13, 400, 4084, 4497, 5110, 411, 341, 3665, 264, 2539, 9284, 51011, 51011, 360, 257, 1101, 1691, 2539, 577, 281, 5521, 264, 5063, 316, 13, 51219, 51219, 1171, 257, 544, 7339, 1365, 295, 1412, 14501, 19631, 11, 291, 393, 611, 747, 264, 5063, 316, 293, 1081, 257, 51544, 51544], "temperature": 0.0, "avg_logprob": -0.11131329006618923, "compression_ratio": 1.7440758293838863, "no_speech_prob": 1.963760041689966e-06}, {"id": 57, "seek": 29076, "start": 296.03999999999996, "end": 297.68, "text": " a bit or shrunk a little bit.", "tokens": [50364, 400, 538, 884, 341, 11, 291, 434, 3585, 264, 9284, 300, 264, 5063, 316, 42146, 257, 857, 420, 31976, 3004, 50628, 50628, 257, 857, 420, 9884, 3197, 257, 707, 857, 13, 50710, 50710, 467, 307, 920, 264, 5063, 316, 13, 400, 4084, 4497, 5110, 411, 341, 3665, 264, 2539, 9284, 51011, 51011, 360, 257, 1101, 1691, 2539, 577, 281, 5521, 264, 5063, 316, 13, 51219, 51219, 1171, 257, 544, 7339, 1365, 295, 1412, 14501, 19631, 11, 291, 393, 611, 747, 264, 5063, 316, 293, 1081, 257, 51544, 51544], "temperature": 0.0, "avg_logprob": -0.11131329006618923, "compression_ratio": 1.7440758293838863, "no_speech_prob": 1.963760041689966e-06}, {"id": 58, "seek": 29076, "start": 297.68, "end": 303.7, "text": " It is still the letter A. And creating additional examples like this helps the learning algorithm", "tokens": [50364, 400, 538, 884, 341, 11, 291, 434, 3585, 264, 9284, 300, 264, 5063, 316, 42146, 257, 857, 420, 31976, 3004, 50628, 50628, 257, 857, 420, 9884, 3197, 257, 707, 857, 13, 50710, 50710, 467, 307, 920, 264, 5063, 316, 13, 400, 4084, 4497, 5110, 411, 341, 3665, 264, 2539, 9284, 51011, 51011, 360, 257, 1101, 1691, 2539, 577, 281, 5521, 264, 5063, 316, 13, 51219, 51219, 1171, 257, 544, 7339, 1365, 295, 1412, 14501, 19631, 11, 291, 393, 611, 747, 264, 5063, 316, 293, 1081, 257, 51544, 51544], "temperature": 0.0, "avg_logprob": -0.11131329006618923, "compression_ratio": 1.7440758293838863, "no_speech_prob": 1.963760041689966e-06}, {"id": 59, "seek": 29076, "start": 303.7, "end": 307.86, "text": " do a better job learning how to recognize the letter A.", "tokens": [50364, 400, 538, 884, 341, 11, 291, 434, 3585, 264, 9284, 300, 264, 5063, 316, 42146, 257, 857, 420, 31976, 3004, 50628, 50628, 257, 857, 420, 9884, 3197, 257, 707, 857, 13, 50710, 50710, 467, 307, 920, 264, 5063, 316, 13, 400, 4084, 4497, 5110, 411, 341, 3665, 264, 2539, 9284, 51011, 51011, 360, 257, 1101, 1691, 2539, 577, 281, 5521, 264, 5063, 316, 13, 51219, 51219, 1171, 257, 544, 7339, 1365, 295, 1412, 14501, 19631, 11, 291, 393, 611, 747, 264, 5063, 316, 293, 1081, 257, 51544, 51544], "temperature": 0.0, "avg_logprob": -0.11131329006618923, "compression_ratio": 1.7440758293838863, "no_speech_prob": 1.963760041689966e-06}, {"id": 60, "seek": 29076, "start": 307.86, "end": 314.36, "text": " For a more advanced example of data augmentation, you can also take the letter A and place a", "tokens": [50364, 400, 538, 884, 341, 11, 291, 434, 3585, 264, 9284, 300, 264, 5063, 316, 42146, 257, 857, 420, 31976, 3004, 50628, 50628, 257, 857, 420, 9884, 3197, 257, 707, 857, 13, 50710, 50710, 467, 307, 920, 264, 5063, 316, 13, 400, 4084, 4497, 5110, 411, 341, 3665, 264, 2539, 9284, 51011, 51011, 360, 257, 1101, 1691, 2539, 577, 281, 5521, 264, 5063, 316, 13, 51219, 51219, 1171, 257, 544, 7339, 1365, 295, 1412, 14501, 19631, 11, 291, 393, 611, 747, 264, 5063, 316, 293, 1081, 257, 51544, 51544], "temperature": 0.0, "avg_logprob": -0.11131329006618923, "compression_ratio": 1.7440758293838863, "no_speech_prob": 1.963760041689966e-06}, {"id": 61, "seek": 31436, "start": 314.36, "end": 321.88, "text": " grid on top of it. And by introducing random warping of this grid, you can take the letter", "tokens": [50364, 10748, 322, 1192, 295, 309, 13, 400, 538, 15424, 4974, 1516, 3381, 295, 341, 10748, 11, 291, 393, 747, 264, 5063, 50740, 50740, 316, 293, 5366, 1516, 3381, 295, 264, 5063, 316, 281, 1884, 257, 709, 29021, 6405, 295, 5110, 295, 51056, 51056, 264, 5063, 316, 13, 400, 341, 1399, 295, 37555, 278, 613, 5110, 550, 575, 3574, 472, 3256, 420, 51368, 51368, 472, 1365, 666, 510, 11, 3097, 5110, 300, 291, 393, 3154, 281, 264, 2539, 9284, 281, 51662, 51662, 854, 309, 1466, 544, 13956, 356, 13, 51774, 51774, 708, 307, 264, 5063, 316, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.13061883926391601, "compression_ratio": 1.8663594470046083, "no_speech_prob": 3.7852657897019526e-06}, {"id": 62, "seek": 31436, "start": 321.88, "end": 328.2, "text": " A and introduce warping of the letter A to create a much richer library of examples of", "tokens": [50364, 10748, 322, 1192, 295, 309, 13, 400, 538, 15424, 4974, 1516, 3381, 295, 341, 10748, 11, 291, 393, 747, 264, 5063, 50740, 50740, 316, 293, 5366, 1516, 3381, 295, 264, 5063, 316, 281, 1884, 257, 709, 29021, 6405, 295, 5110, 295, 51056, 51056, 264, 5063, 316, 13, 400, 341, 1399, 295, 37555, 278, 613, 5110, 550, 575, 3574, 472, 3256, 420, 51368, 51368, 472, 1365, 666, 510, 11, 3097, 5110, 300, 291, 393, 3154, 281, 264, 2539, 9284, 281, 51662, 51662, 854, 309, 1466, 544, 13956, 356, 13, 51774, 51774, 708, 307, 264, 5063, 316, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.13061883926391601, "compression_ratio": 1.8663594470046083, "no_speech_prob": 3.7852657897019526e-06}, {"id": 63, "seek": 31436, "start": 328.2, "end": 334.44, "text": " the letter A. And this process of distorting these examples then has turned one image or", "tokens": [50364, 10748, 322, 1192, 295, 309, 13, 400, 538, 15424, 4974, 1516, 3381, 295, 341, 10748, 11, 291, 393, 747, 264, 5063, 50740, 50740, 316, 293, 5366, 1516, 3381, 295, 264, 5063, 316, 281, 1884, 257, 709, 29021, 6405, 295, 5110, 295, 51056, 51056, 264, 5063, 316, 13, 400, 341, 1399, 295, 37555, 278, 613, 5110, 550, 575, 3574, 472, 3256, 420, 51368, 51368, 472, 1365, 666, 510, 11, 3097, 5110, 300, 291, 393, 3154, 281, 264, 2539, 9284, 281, 51662, 51662, 854, 309, 1466, 544, 13956, 356, 13, 51774, 51774, 708, 307, 264, 5063, 316, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.13061883926391601, "compression_ratio": 1.8663594470046083, "no_speech_prob": 3.7852657897019526e-06}, {"id": 64, "seek": 31436, "start": 334.44, "end": 340.32, "text": " one example into here, training examples that you can feed to the learning algorithm to", "tokens": [50364, 10748, 322, 1192, 295, 309, 13, 400, 538, 15424, 4974, 1516, 3381, 295, 341, 10748, 11, 291, 393, 747, 264, 5063, 50740, 50740, 316, 293, 5366, 1516, 3381, 295, 264, 5063, 316, 281, 1884, 257, 709, 29021, 6405, 295, 5110, 295, 51056, 51056, 264, 5063, 316, 13, 400, 341, 1399, 295, 37555, 278, 613, 5110, 550, 575, 3574, 472, 3256, 420, 51368, 51368, 472, 1365, 666, 510, 11, 3097, 5110, 300, 291, 393, 3154, 281, 264, 2539, 9284, 281, 51662, 51662, 854, 309, 1466, 544, 13956, 356, 13, 51774, 51774, 708, 307, 264, 5063, 316, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.13061883926391601, "compression_ratio": 1.8663594470046083, "no_speech_prob": 3.7852657897019526e-06}, {"id": 65, "seek": 31436, "start": 340.32, "end": 342.56, "text": " help it learn more robustly.", "tokens": [50364, 10748, 322, 1192, 295, 309, 13, 400, 538, 15424, 4974, 1516, 3381, 295, 341, 10748, 11, 291, 393, 747, 264, 5063, 50740, 50740, 316, 293, 5366, 1516, 3381, 295, 264, 5063, 316, 281, 1884, 257, 709, 29021, 6405, 295, 5110, 295, 51056, 51056, 264, 5063, 316, 13, 400, 341, 1399, 295, 37555, 278, 613, 5110, 550, 575, 3574, 472, 3256, 420, 51368, 51368, 472, 1365, 666, 510, 11, 3097, 5110, 300, 291, 393, 3154, 281, 264, 2539, 9284, 281, 51662, 51662, 854, 309, 1466, 544, 13956, 356, 13, 51774, 51774, 708, 307, 264, 5063, 316, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.13061883926391601, "compression_ratio": 1.8663594470046083, "no_speech_prob": 3.7852657897019526e-06}, {"id": 66, "seek": 31436, "start": 342.56, "end": 344.2, "text": " What is the letter A?", "tokens": [50364, 10748, 322, 1192, 295, 309, 13, 400, 538, 15424, 4974, 1516, 3381, 295, 341, 10748, 11, 291, 393, 747, 264, 5063, 50740, 50740, 316, 293, 5366, 1516, 3381, 295, 264, 5063, 316, 281, 1884, 257, 709, 29021, 6405, 295, 5110, 295, 51056, 51056, 264, 5063, 316, 13, 400, 341, 1399, 295, 37555, 278, 613, 5110, 550, 575, 3574, 472, 3256, 420, 51368, 51368, 472, 1365, 666, 510, 11, 3097, 5110, 300, 291, 393, 3154, 281, 264, 2539, 9284, 281, 51662, 51662, 854, 309, 1466, 544, 13956, 356, 13, 51774, 51774, 708, 307, 264, 5063, 316, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.13061883926391601, "compression_ratio": 1.8663594470046083, "no_speech_prob": 3.7852657897019526e-06}, {"id": 67, "seek": 34420, "start": 344.2, "end": 351.32, "text": " This idea of data augmentation also works for speech recognition. Let's say for a voice", "tokens": [50364, 639, 1558, 295, 1412, 14501, 19631, 611, 1985, 337, 6218, 11150, 13, 961, 311, 584, 337, 257, 3177, 50720, 50720, 3164, 3861, 11, 291, 362, 364, 3380, 6278, 7353, 300, 3263, 411, 341, 13, 50970, 50970, 708, 307, 965, 311, 5503, 30, 51060, 51060, 1485, 636, 291, 393, 3079, 1412, 14501, 19631, 281, 6218, 1412, 576, 312, 281, 747, 24518, 3678, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.08105913308950571, "compression_ratio": 1.5081967213114753, "no_speech_prob": 9.665321158536244e-06}, {"id": 68, "seek": 34420, "start": 351.32, "end": 356.32, "text": " search application, you have an original audio clip that sounds like this.", "tokens": [50364, 639, 1558, 295, 1412, 14501, 19631, 611, 1985, 337, 6218, 11150, 13, 961, 311, 584, 337, 257, 3177, 50720, 50720, 3164, 3861, 11, 291, 362, 364, 3380, 6278, 7353, 300, 3263, 411, 341, 13, 50970, 50970, 708, 307, 965, 311, 5503, 30, 51060, 51060, 1485, 636, 291, 393, 3079, 1412, 14501, 19631, 281, 6218, 1412, 576, 312, 281, 747, 24518, 3678, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.08105913308950571, "compression_ratio": 1.5081967213114753, "no_speech_prob": 9.665321158536244e-06}, {"id": 69, "seek": 34420, "start": 356.32, "end": 358.12, "text": " What is today's weather?", "tokens": [50364, 639, 1558, 295, 1412, 14501, 19631, 611, 1985, 337, 6218, 11150, 13, 961, 311, 584, 337, 257, 3177, 50720, 50720, 3164, 3861, 11, 291, 362, 364, 3380, 6278, 7353, 300, 3263, 411, 341, 13, 50970, 50970, 708, 307, 965, 311, 5503, 30, 51060, 51060, 1485, 636, 291, 393, 3079, 1412, 14501, 19631, 281, 6218, 1412, 576, 312, 281, 747, 24518, 3678, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.08105913308950571, "compression_ratio": 1.5081967213114753, "no_speech_prob": 9.665321158536244e-06}, {"id": 70, "seek": 34420, "start": 358.12, "end": 365.2, "text": " One way you can apply data augmentation to speech data would be to take noisy background", "tokens": [50364, 639, 1558, 295, 1412, 14501, 19631, 611, 1985, 337, 6218, 11150, 13, 961, 311, 584, 337, 257, 3177, 50720, 50720, 3164, 3861, 11, 291, 362, 364, 3380, 6278, 7353, 300, 3263, 411, 341, 13, 50970, 50970, 708, 307, 965, 311, 5503, 30, 51060, 51060, 1485, 636, 291, 393, 3079, 1412, 14501, 19631, 281, 6218, 1412, 576, 312, 281, 747, 24518, 3678, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.08105913308950571, "compression_ratio": 1.5081967213114753, "no_speech_prob": 9.665321158536244e-06}, {"id": 71, "seek": 36520, "start": 365.2, "end": 375.96, "text": " audio like this. For example, this is what the sound of a crowd sounds like. And it turns", "tokens": [50364, 6278, 411, 341, 13, 1171, 1365, 11, 341, 307, 437, 264, 1626, 295, 257, 6919, 3263, 411, 13, 400, 309, 4523, 50902, 50902, 484, 300, 498, 291, 747, 613, 732, 6278, 13117, 11, 264, 700, 472, 293, 264, 6919, 5658, 293, 291, 51198, 51198, 909, 552, 1214, 11, 550, 291, 917, 493, 365, 364, 6278, 7353, 300, 3263, 411, 341, 13, 51476, 51476, 708, 307, 965, 311, 5503, 30, 51578, 51578, 400, 291, 445, 2942, 364, 6278, 7353, 300, 3263, 411, 1580, 1566, 11, 437, 311, 264, 5503, 965, 30, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.07872189866735581, "compression_ratio": 1.8275862068965518, "no_speech_prob": 3.943985575460829e-05}, {"id": 72, "seek": 36520, "start": 375.96, "end": 381.88, "text": " out that if you take these two audio clips, the first one and the crowd noise and you", "tokens": [50364, 6278, 411, 341, 13, 1171, 1365, 11, 341, 307, 437, 264, 1626, 295, 257, 6919, 3263, 411, 13, 400, 309, 4523, 50902, 50902, 484, 300, 498, 291, 747, 613, 732, 6278, 13117, 11, 264, 700, 472, 293, 264, 6919, 5658, 293, 291, 51198, 51198, 909, 552, 1214, 11, 550, 291, 917, 493, 365, 364, 6278, 7353, 300, 3263, 411, 341, 13, 51476, 51476, 708, 307, 965, 311, 5503, 30, 51578, 51578, 400, 291, 445, 2942, 364, 6278, 7353, 300, 3263, 411, 1580, 1566, 11, 437, 311, 264, 5503, 965, 30, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.07872189866735581, "compression_ratio": 1.8275862068965518, "no_speech_prob": 3.943985575460829e-05}, {"id": 73, "seek": 36520, "start": 381.88, "end": 387.44, "text": " add them together, then you end up with an audio clip that sounds like this.", "tokens": [50364, 6278, 411, 341, 13, 1171, 1365, 11, 341, 307, 437, 264, 1626, 295, 257, 6919, 3263, 411, 13, 400, 309, 4523, 50902, 50902, 484, 300, 498, 291, 747, 613, 732, 6278, 13117, 11, 264, 700, 472, 293, 264, 6919, 5658, 293, 291, 51198, 51198, 909, 552, 1214, 11, 550, 291, 917, 493, 365, 364, 6278, 7353, 300, 3263, 411, 341, 13, 51476, 51476, 708, 307, 965, 311, 5503, 30, 51578, 51578, 400, 291, 445, 2942, 364, 6278, 7353, 300, 3263, 411, 1580, 1566, 11, 437, 311, 264, 5503, 965, 30, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.07872189866735581, "compression_ratio": 1.8275862068965518, "no_speech_prob": 3.943985575460829e-05}, {"id": 74, "seek": 36520, "start": 387.44, "end": 389.48, "text": " What is today's weather?", "tokens": [50364, 6278, 411, 341, 13, 1171, 1365, 11, 341, 307, 437, 264, 1626, 295, 257, 6919, 3263, 411, 13, 400, 309, 4523, 50902, 50902, 484, 300, 498, 291, 747, 613, 732, 6278, 13117, 11, 264, 700, 472, 293, 264, 6919, 5658, 293, 291, 51198, 51198, 909, 552, 1214, 11, 550, 291, 917, 493, 365, 364, 6278, 7353, 300, 3263, 411, 341, 13, 51476, 51476, 708, 307, 965, 311, 5503, 30, 51578, 51578, 400, 291, 445, 2942, 364, 6278, 7353, 300, 3263, 411, 1580, 1566, 11, 437, 311, 264, 5503, 965, 30, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.07872189866735581, "compression_ratio": 1.8275862068965518, "no_speech_prob": 3.943985575460829e-05}, {"id": 75, "seek": 36520, "start": 389.48, "end": 394.96, "text": " And you just created an audio clip that sounds like someone saying, what's the weather today?", "tokens": [50364, 6278, 411, 341, 13, 1171, 1365, 11, 341, 307, 437, 264, 1626, 295, 257, 6919, 3263, 411, 13, 400, 309, 4523, 50902, 50902, 484, 300, 498, 291, 747, 613, 732, 6278, 13117, 11, 264, 700, 472, 293, 264, 6919, 5658, 293, 291, 51198, 51198, 909, 552, 1214, 11, 550, 291, 917, 493, 365, 364, 6278, 7353, 300, 3263, 411, 341, 13, 51476, 51476, 708, 307, 965, 311, 5503, 30, 51578, 51578, 400, 291, 445, 2942, 364, 6278, 7353, 300, 3263, 411, 1580, 1566, 11, 437, 311, 264, 5503, 965, 30, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.07872189866735581, "compression_ratio": 1.8275862068965518, "no_speech_prob": 3.943985575460829e-05}, {"id": 76, "seek": 39496, "start": 394.96, "end": 400.64, "text": " But they're saying it around a noisy crowd in the background. Or in fact, if you were", "tokens": [50364, 583, 436, 434, 1566, 309, 926, 257, 24518, 6919, 294, 264, 3678, 13, 1610, 294, 1186, 11, 498, 291, 645, 50648, 50648, 281, 747, 257, 819, 3678, 5658, 11, 584, 1580, 294, 257, 1032, 11, 341, 307, 437, 3678, 50922, 50922, 5658, 295, 257, 1032, 3263, 411, 13, 400, 291, 645, 281, 909, 264, 3380, 6278, 7353, 281, 264, 1032, 5658, 11, 51332, 51332, 550, 291, 483, 341, 13, 51464, 51464, 708, 307, 965, 311, 5503, 30, 51584, 51584, 400, 309, 3263, 411, 264, 3380, 6278, 7353, 11, 457, 382, 498, 264, 8145, 390, 1566, 309, 490, 257, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.11667272156360102, "compression_ratio": 1.8224299065420562, "no_speech_prob": 2.7967143978457898e-05}, {"id": 77, "seek": 39496, "start": 400.64, "end": 406.12, "text": " to take a different background noise, say someone in a car, this is what background", "tokens": [50364, 583, 436, 434, 1566, 309, 926, 257, 24518, 6919, 294, 264, 3678, 13, 1610, 294, 1186, 11, 498, 291, 645, 50648, 50648, 281, 747, 257, 819, 3678, 5658, 11, 584, 1580, 294, 257, 1032, 11, 341, 307, 437, 3678, 50922, 50922, 5658, 295, 257, 1032, 3263, 411, 13, 400, 291, 645, 281, 909, 264, 3380, 6278, 7353, 281, 264, 1032, 5658, 11, 51332, 51332, 550, 291, 483, 341, 13, 51464, 51464, 708, 307, 965, 311, 5503, 30, 51584, 51584, 400, 309, 3263, 411, 264, 3380, 6278, 7353, 11, 457, 382, 498, 264, 8145, 390, 1566, 309, 490, 257, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.11667272156360102, "compression_ratio": 1.8224299065420562, "no_speech_prob": 2.7967143978457898e-05}, {"id": 78, "seek": 39496, "start": 406.12, "end": 414.32, "text": " noise of a car sounds like. And you were to add the original audio clip to the car noise,", "tokens": [50364, 583, 436, 434, 1566, 309, 926, 257, 24518, 6919, 294, 264, 3678, 13, 1610, 294, 1186, 11, 498, 291, 645, 50648, 50648, 281, 747, 257, 819, 3678, 5658, 11, 584, 1580, 294, 257, 1032, 11, 341, 307, 437, 3678, 50922, 50922, 5658, 295, 257, 1032, 3263, 411, 13, 400, 291, 645, 281, 909, 264, 3380, 6278, 7353, 281, 264, 1032, 5658, 11, 51332, 51332, 550, 291, 483, 341, 13, 51464, 51464, 708, 307, 965, 311, 5503, 30, 51584, 51584, 400, 309, 3263, 411, 264, 3380, 6278, 7353, 11, 457, 382, 498, 264, 8145, 390, 1566, 309, 490, 257, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.11667272156360102, "compression_ratio": 1.8224299065420562, "no_speech_prob": 2.7967143978457898e-05}, {"id": 79, "seek": 39496, "start": 414.32, "end": 416.96, "text": " then you get this.", "tokens": [50364, 583, 436, 434, 1566, 309, 926, 257, 24518, 6919, 294, 264, 3678, 13, 1610, 294, 1186, 11, 498, 291, 645, 50648, 50648, 281, 747, 257, 819, 3678, 5658, 11, 584, 1580, 294, 257, 1032, 11, 341, 307, 437, 3678, 50922, 50922, 5658, 295, 257, 1032, 3263, 411, 13, 400, 291, 645, 281, 909, 264, 3380, 6278, 7353, 281, 264, 1032, 5658, 11, 51332, 51332, 550, 291, 483, 341, 13, 51464, 51464, 708, 307, 965, 311, 5503, 30, 51584, 51584, 400, 309, 3263, 411, 264, 3380, 6278, 7353, 11, 457, 382, 498, 264, 8145, 390, 1566, 309, 490, 257, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.11667272156360102, "compression_ratio": 1.8224299065420562, "no_speech_prob": 2.7967143978457898e-05}, {"id": 80, "seek": 39496, "start": 416.96, "end": 419.35999999999996, "text": " What is today's weather?", "tokens": [50364, 583, 436, 434, 1566, 309, 926, 257, 24518, 6919, 294, 264, 3678, 13, 1610, 294, 1186, 11, 498, 291, 645, 50648, 50648, 281, 747, 257, 819, 3678, 5658, 11, 584, 1580, 294, 257, 1032, 11, 341, 307, 437, 3678, 50922, 50922, 5658, 295, 257, 1032, 3263, 411, 13, 400, 291, 645, 281, 909, 264, 3380, 6278, 7353, 281, 264, 1032, 5658, 11, 51332, 51332, 550, 291, 483, 341, 13, 51464, 51464, 708, 307, 965, 311, 5503, 30, 51584, 51584, 400, 309, 3263, 411, 264, 3380, 6278, 7353, 11, 457, 382, 498, 264, 8145, 390, 1566, 309, 490, 257, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.11667272156360102, "compression_ratio": 1.8224299065420562, "no_speech_prob": 2.7967143978457898e-05}, {"id": 81, "seek": 39496, "start": 419.35999999999996, "end": 424.24, "text": " And it sounds like the original audio clip, but as if the speaker was saying it from a", "tokens": [50364, 583, 436, 434, 1566, 309, 926, 257, 24518, 6919, 294, 264, 3678, 13, 1610, 294, 1186, 11, 498, 291, 645, 50648, 50648, 281, 747, 257, 819, 3678, 5658, 11, 584, 1580, 294, 257, 1032, 11, 341, 307, 437, 3678, 50922, 50922, 5658, 295, 257, 1032, 3263, 411, 13, 400, 291, 645, 281, 909, 264, 3380, 6278, 7353, 281, 264, 1032, 5658, 11, 51332, 51332, 550, 291, 483, 341, 13, 51464, 51464, 708, 307, 965, 311, 5503, 30, 51584, 51584, 400, 309, 3263, 411, 264, 3380, 6278, 7353, 11, 457, 382, 498, 264, 8145, 390, 1566, 309, 490, 257, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.11667272156360102, "compression_ratio": 1.8224299065420562, "no_speech_prob": 2.7967143978457898e-05}, {"id": 82, "seek": 42424, "start": 424.24, "end": 430.76, "text": " car. And the more advanced data augmentation step would be if you make the original audio", "tokens": [50364, 1032, 13, 400, 264, 544, 7339, 1412, 14501, 19631, 1823, 576, 312, 498, 291, 652, 264, 3380, 6278, 50690, 50690, 1626, 411, 291, 434, 6613, 322, 257, 1578, 2815, 2593, 4984, 411, 341, 13, 50896, 50896, 708, 307, 965, 311, 5503, 30, 51002, 51002, 400, 370, 321, 600, 1612, 577, 291, 393, 747, 472, 6278, 7353, 293, 1261, 309, 666, 1045, 3097, 5110, 51274, 51274, 510, 13, 1485, 365, 6919, 3678, 5658, 11, 472, 365, 1032, 3678, 5658, 11, 293, 472, 382, 498, 309, 51518, 51518, 390, 8287, 322, 257, 1578, 2815, 2593, 4984, 13, 400, 264, 1413, 286, 600, 2732, 322, 6218, 11150, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12358428813793042, "compression_ratio": 1.7635658914728682, "no_speech_prob": 4.289180196792586e-06}, {"id": 83, "seek": 42424, "start": 430.76, "end": 434.88, "text": " sound like you're recording on a bad cell phone connection like this.", "tokens": [50364, 1032, 13, 400, 264, 544, 7339, 1412, 14501, 19631, 1823, 576, 312, 498, 291, 652, 264, 3380, 6278, 50690, 50690, 1626, 411, 291, 434, 6613, 322, 257, 1578, 2815, 2593, 4984, 411, 341, 13, 50896, 50896, 708, 307, 965, 311, 5503, 30, 51002, 51002, 400, 370, 321, 600, 1612, 577, 291, 393, 747, 472, 6278, 7353, 293, 1261, 309, 666, 1045, 3097, 5110, 51274, 51274, 510, 13, 1485, 365, 6919, 3678, 5658, 11, 472, 365, 1032, 3678, 5658, 11, 293, 472, 382, 498, 309, 51518, 51518, 390, 8287, 322, 257, 1578, 2815, 2593, 4984, 13, 400, 264, 1413, 286, 600, 2732, 322, 6218, 11150, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12358428813793042, "compression_ratio": 1.7635658914728682, "no_speech_prob": 4.289180196792586e-06}, {"id": 84, "seek": 42424, "start": 434.88, "end": 437.0, "text": " What is today's weather?", "tokens": [50364, 1032, 13, 400, 264, 544, 7339, 1412, 14501, 19631, 1823, 576, 312, 498, 291, 652, 264, 3380, 6278, 50690, 50690, 1626, 411, 291, 434, 6613, 322, 257, 1578, 2815, 2593, 4984, 411, 341, 13, 50896, 50896, 708, 307, 965, 311, 5503, 30, 51002, 51002, 400, 370, 321, 600, 1612, 577, 291, 393, 747, 472, 6278, 7353, 293, 1261, 309, 666, 1045, 3097, 5110, 51274, 51274, 510, 13, 1485, 365, 6919, 3678, 5658, 11, 472, 365, 1032, 3678, 5658, 11, 293, 472, 382, 498, 309, 51518, 51518, 390, 8287, 322, 257, 1578, 2815, 2593, 4984, 13, 400, 264, 1413, 286, 600, 2732, 322, 6218, 11150, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12358428813793042, "compression_ratio": 1.7635658914728682, "no_speech_prob": 4.289180196792586e-06}, {"id": 85, "seek": 42424, "start": 437.0, "end": 442.44, "text": " And so we've seen how you can take one audio clip and turn it into three training examples", "tokens": [50364, 1032, 13, 400, 264, 544, 7339, 1412, 14501, 19631, 1823, 576, 312, 498, 291, 652, 264, 3380, 6278, 50690, 50690, 1626, 411, 291, 434, 6613, 322, 257, 1578, 2815, 2593, 4984, 411, 341, 13, 50896, 50896, 708, 307, 965, 311, 5503, 30, 51002, 51002, 400, 370, 321, 600, 1612, 577, 291, 393, 747, 472, 6278, 7353, 293, 1261, 309, 666, 1045, 3097, 5110, 51274, 51274, 510, 13, 1485, 365, 6919, 3678, 5658, 11, 472, 365, 1032, 3678, 5658, 11, 293, 472, 382, 498, 309, 51518, 51518, 390, 8287, 322, 257, 1578, 2815, 2593, 4984, 13, 400, 264, 1413, 286, 600, 2732, 322, 6218, 11150, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12358428813793042, "compression_ratio": 1.7635658914728682, "no_speech_prob": 4.289180196792586e-06}, {"id": 86, "seek": 42424, "start": 442.44, "end": 447.32, "text": " here. One with crowd background noise, one with car background noise, and one as if it", "tokens": [50364, 1032, 13, 400, 264, 544, 7339, 1412, 14501, 19631, 1823, 576, 312, 498, 291, 652, 264, 3380, 6278, 50690, 50690, 1626, 411, 291, 434, 6613, 322, 257, 1578, 2815, 2593, 4984, 411, 341, 13, 50896, 50896, 708, 307, 965, 311, 5503, 30, 51002, 51002, 400, 370, 321, 600, 1612, 577, 291, 393, 747, 472, 6278, 7353, 293, 1261, 309, 666, 1045, 3097, 5110, 51274, 51274, 510, 13, 1485, 365, 6919, 3678, 5658, 11, 472, 365, 1032, 3678, 5658, 11, 293, 472, 382, 498, 309, 51518, 51518, 390, 8287, 322, 257, 1578, 2815, 2593, 4984, 13, 400, 264, 1413, 286, 600, 2732, 322, 6218, 11150, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12358428813793042, "compression_ratio": 1.7635658914728682, "no_speech_prob": 4.289180196792586e-06}, {"id": 87, "seek": 42424, "start": 447.32, "end": 452.56, "text": " was recorded on a bad cell phone connection. And the times I've worked on speech recognition", "tokens": [50364, 1032, 13, 400, 264, 544, 7339, 1412, 14501, 19631, 1823, 576, 312, 498, 291, 652, 264, 3380, 6278, 50690, 50690, 1626, 411, 291, 434, 6613, 322, 257, 1578, 2815, 2593, 4984, 411, 341, 13, 50896, 50896, 708, 307, 965, 311, 5503, 30, 51002, 51002, 400, 370, 321, 600, 1612, 577, 291, 393, 747, 472, 6278, 7353, 293, 1261, 309, 666, 1045, 3097, 5110, 51274, 51274, 510, 13, 1485, 365, 6919, 3678, 5658, 11, 472, 365, 1032, 3678, 5658, 11, 293, 472, 382, 498, 309, 51518, 51518, 390, 8287, 322, 257, 1578, 2815, 2593, 4984, 13, 400, 264, 1413, 286, 600, 2732, 322, 6218, 11150, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12358428813793042, "compression_ratio": 1.7635658914728682, "no_speech_prob": 4.289180196792586e-06}, {"id": 88, "seek": 45256, "start": 452.56, "end": 458.36, "text": " systems, this was actually a really critical technique for increasing artificially the size", "tokens": [50364, 3652, 11, 341, 390, 767, 257, 534, 4924, 6532, 337, 5662, 39905, 2270, 264, 2744, 50654, 50654, 295, 264, 3097, 1412, 286, 632, 281, 1322, 257, 544, 8559, 6218, 3068, 6545, 13, 50880, 50880, 1485, 4125, 337, 1412, 14501, 19631, 307, 300, 264, 2962, 420, 264, 37555, 626, 291, 652, 281, 264, 51194, 51194, 1412, 820, 312, 12424, 295, 264, 3467, 295, 5658, 420, 37555, 626, 294, 264, 1500, 992, 13, 407, 51512, 51512, 337, 1365, 11, 498, 291, 747, 264, 5063, 316, 293, 36030, 309, 411, 341, 11, 341, 920, 1542, 411, 5110, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.07349673582583058, "compression_ratio": 1.704, "no_speech_prob": 7.410641501337523e-06}, {"id": 89, "seek": 45256, "start": 458.36, "end": 462.88, "text": " of the training data I had to build a more accurate speech recognizer.", "tokens": [50364, 3652, 11, 341, 390, 767, 257, 534, 4924, 6532, 337, 5662, 39905, 2270, 264, 2744, 50654, 50654, 295, 264, 3097, 1412, 286, 632, 281, 1322, 257, 544, 8559, 6218, 3068, 6545, 13, 50880, 50880, 1485, 4125, 337, 1412, 14501, 19631, 307, 300, 264, 2962, 420, 264, 37555, 626, 291, 652, 281, 264, 51194, 51194, 1412, 820, 312, 12424, 295, 264, 3467, 295, 5658, 420, 37555, 626, 294, 264, 1500, 992, 13, 407, 51512, 51512, 337, 1365, 11, 498, 291, 747, 264, 5063, 316, 293, 36030, 309, 411, 341, 11, 341, 920, 1542, 411, 5110, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.07349673582583058, "compression_ratio": 1.704, "no_speech_prob": 7.410641501337523e-06}, {"id": 90, "seek": 45256, "start": 462.88, "end": 469.16, "text": " One tip for data augmentation is that the changes or the distortions you make to the", "tokens": [50364, 3652, 11, 341, 390, 767, 257, 534, 4924, 6532, 337, 5662, 39905, 2270, 264, 2744, 50654, 50654, 295, 264, 3097, 1412, 286, 632, 281, 1322, 257, 544, 8559, 6218, 3068, 6545, 13, 50880, 50880, 1485, 4125, 337, 1412, 14501, 19631, 307, 300, 264, 2962, 420, 264, 37555, 626, 291, 652, 281, 264, 51194, 51194, 1412, 820, 312, 12424, 295, 264, 3467, 295, 5658, 420, 37555, 626, 294, 264, 1500, 992, 13, 407, 51512, 51512, 337, 1365, 11, 498, 291, 747, 264, 5063, 316, 293, 36030, 309, 411, 341, 11, 341, 920, 1542, 411, 5110, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.07349673582583058, "compression_ratio": 1.704, "no_speech_prob": 7.410641501337523e-06}, {"id": 91, "seek": 45256, "start": 469.16, "end": 475.52, "text": " data should be representative of the types of noise or distortions in the test set. So", "tokens": [50364, 3652, 11, 341, 390, 767, 257, 534, 4924, 6532, 337, 5662, 39905, 2270, 264, 2744, 50654, 50654, 295, 264, 3097, 1412, 286, 632, 281, 1322, 257, 544, 8559, 6218, 3068, 6545, 13, 50880, 50880, 1485, 4125, 337, 1412, 14501, 19631, 307, 300, 264, 2962, 420, 264, 37555, 626, 291, 652, 281, 264, 51194, 51194, 1412, 820, 312, 12424, 295, 264, 3467, 295, 5658, 420, 37555, 626, 294, 264, 1500, 992, 13, 407, 51512, 51512, 337, 1365, 11, 498, 291, 747, 264, 5063, 316, 293, 36030, 309, 411, 341, 11, 341, 920, 1542, 411, 5110, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.07349673582583058, "compression_ratio": 1.704, "no_speech_prob": 7.410641501337523e-06}, {"id": 92, "seek": 45256, "start": 475.52, "end": 481.12, "text": " for example, if you take the letter A and warp it like this, this still looks like examples", "tokens": [50364, 3652, 11, 341, 390, 767, 257, 534, 4924, 6532, 337, 5662, 39905, 2270, 264, 2744, 50654, 50654, 295, 264, 3097, 1412, 286, 632, 281, 1322, 257, 544, 8559, 6218, 3068, 6545, 13, 50880, 50880, 1485, 4125, 337, 1412, 14501, 19631, 307, 300, 264, 2962, 420, 264, 37555, 626, 291, 652, 281, 264, 51194, 51194, 1412, 820, 312, 12424, 295, 264, 3467, 295, 5658, 420, 37555, 626, 294, 264, 1500, 992, 13, 407, 51512, 51512, 337, 1365, 11, 498, 291, 747, 264, 5063, 316, 293, 36030, 309, 411, 341, 11, 341, 920, 1542, 411, 5110, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.07349673582583058, "compression_ratio": 1.704, "no_speech_prob": 7.410641501337523e-06}, {"id": 93, "seek": 48112, "start": 481.12, "end": 486.84000000000003, "text": " of letters you might see out there that you would like to recognize. Or for audio, adding", "tokens": [50364, 295, 7825, 291, 1062, 536, 484, 456, 300, 291, 576, 411, 281, 5521, 13, 1610, 337, 6278, 11, 5127, 50650, 50650, 3678, 5658, 420, 1578, 2815, 2593, 4984, 11, 498, 300, 311, 12424, 295, 437, 291, 2066, 50906, 50906, 281, 1568, 294, 264, 1500, 992, 11, 550, 613, 576, 312, 4961, 2098, 281, 3985, 484, 1412, 14501, 19631, 51234, 51234, 322, 428, 6278, 1412, 13, 51364, 51364, 682, 8712, 11, 309, 311, 2673, 406, 300, 4961, 281, 909, 17491, 4974, 33232, 5658, 281, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.13867510872325678, "compression_ratio": 1.6120689655172413, "no_speech_prob": 2.026094989560079e-06}, {"id": 94, "seek": 48112, "start": 486.84000000000003, "end": 491.96, "text": " background noise or bad cell phone connection, if that's representative of what you expect", "tokens": [50364, 295, 7825, 291, 1062, 536, 484, 456, 300, 291, 576, 411, 281, 5521, 13, 1610, 337, 6278, 11, 5127, 50650, 50650, 3678, 5658, 420, 1578, 2815, 2593, 4984, 11, 498, 300, 311, 12424, 295, 437, 291, 2066, 50906, 50906, 281, 1568, 294, 264, 1500, 992, 11, 550, 613, 576, 312, 4961, 2098, 281, 3985, 484, 1412, 14501, 19631, 51234, 51234, 322, 428, 6278, 1412, 13, 51364, 51364, 682, 8712, 11, 309, 311, 2673, 406, 300, 4961, 281, 909, 17491, 4974, 33232, 5658, 281, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.13867510872325678, "compression_ratio": 1.6120689655172413, "no_speech_prob": 2.026094989560079e-06}, {"id": 95, "seek": 48112, "start": 491.96, "end": 498.52, "text": " to hear in the test set, then these would be helpful ways to carry out data augmentation", "tokens": [50364, 295, 7825, 291, 1062, 536, 484, 456, 300, 291, 576, 411, 281, 5521, 13, 1610, 337, 6278, 11, 5127, 50650, 50650, 3678, 5658, 420, 1578, 2815, 2593, 4984, 11, 498, 300, 311, 12424, 295, 437, 291, 2066, 50906, 50906, 281, 1568, 294, 264, 1500, 992, 11, 550, 613, 576, 312, 4961, 2098, 281, 3985, 484, 1412, 14501, 19631, 51234, 51234, 322, 428, 6278, 1412, 13, 51364, 51364, 682, 8712, 11, 309, 311, 2673, 406, 300, 4961, 281, 909, 17491, 4974, 33232, 5658, 281, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.13867510872325678, "compression_ratio": 1.6120689655172413, "no_speech_prob": 2.026094989560079e-06}, {"id": 96, "seek": 48112, "start": 498.52, "end": 501.12, "text": " on your audio data.", "tokens": [50364, 295, 7825, 291, 1062, 536, 484, 456, 300, 291, 576, 411, 281, 5521, 13, 1610, 337, 6278, 11, 5127, 50650, 50650, 3678, 5658, 420, 1578, 2815, 2593, 4984, 11, 498, 300, 311, 12424, 295, 437, 291, 2066, 50906, 50906, 281, 1568, 294, 264, 1500, 992, 11, 550, 613, 576, 312, 4961, 2098, 281, 3985, 484, 1412, 14501, 19631, 51234, 51234, 322, 428, 6278, 1412, 13, 51364, 51364, 682, 8712, 11, 309, 311, 2673, 406, 300, 4961, 281, 909, 17491, 4974, 33232, 5658, 281, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.13867510872325678, "compression_ratio": 1.6120689655172413, "no_speech_prob": 2.026094989560079e-06}, {"id": 97, "seek": 48112, "start": 501.12, "end": 506.44, "text": " In contrast, it's usually not that helpful to add purely random meaningless noise to", "tokens": [50364, 295, 7825, 291, 1062, 536, 484, 456, 300, 291, 576, 411, 281, 5521, 13, 1610, 337, 6278, 11, 5127, 50650, 50650, 3678, 5658, 420, 1578, 2815, 2593, 4984, 11, 498, 300, 311, 12424, 295, 437, 291, 2066, 50906, 50906, 281, 1568, 294, 264, 1500, 992, 11, 550, 613, 576, 312, 4961, 2098, 281, 3985, 484, 1412, 14501, 19631, 51234, 51234, 322, 428, 6278, 1412, 13, 51364, 51364, 682, 8712, 11, 309, 311, 2673, 406, 300, 4961, 281, 909, 17491, 4974, 33232, 5658, 281, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.13867510872325678, "compression_ratio": 1.6120689655172413, "no_speech_prob": 2.026094989560079e-06}, {"id": 98, "seek": 50644, "start": 506.44, "end": 514.08, "text": " audio data. For example, here I've taken the letter A and I've added per pixel noise, where", "tokens": [50364, 6278, 1412, 13, 1171, 1365, 11, 510, 286, 600, 2726, 264, 5063, 316, 293, 286, 600, 3869, 680, 19261, 5658, 11, 689, 50746, 50746, 498, 1783, 40, 307, 264, 13749, 420, 264, 21367, 295, 19261, 286, 11, 498, 286, 645, 281, 445, 909, 5658, 281, 1184, 51058, 51058, 19261, 11, 436, 917, 493, 365, 5267, 300, 574, 411, 341, 13, 583, 498, 281, 264, 8396, 300, 341, 1943, 380, 51340, 51340, 300, 12424, 295, 437, 291, 536, 294, 264, 1500, 992, 11, 570, 291, 500, 380, 2049, 483, 5267, 51534, 51534, 411, 341, 294, 264, 1500, 992, 11, 341, 307, 767, 516, 281, 312, 1570, 4961, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14137652113630966, "compression_ratio": 1.701195219123506, "no_speech_prob": 1.067685843736399e-06}, {"id": 99, "seek": 50644, "start": 514.08, "end": 520.32, "text": " if XI is the intensity or the brightness of pixel I, if I were to just add noise to each", "tokens": [50364, 6278, 1412, 13, 1171, 1365, 11, 510, 286, 600, 2726, 264, 5063, 316, 293, 286, 600, 3869, 680, 19261, 5658, 11, 689, 50746, 50746, 498, 1783, 40, 307, 264, 13749, 420, 264, 21367, 295, 19261, 286, 11, 498, 286, 645, 281, 445, 909, 5658, 281, 1184, 51058, 51058, 19261, 11, 436, 917, 493, 365, 5267, 300, 574, 411, 341, 13, 583, 498, 281, 264, 8396, 300, 341, 1943, 380, 51340, 51340, 300, 12424, 295, 437, 291, 536, 294, 264, 1500, 992, 11, 570, 291, 500, 380, 2049, 483, 5267, 51534, 51534, 411, 341, 294, 264, 1500, 992, 11, 341, 307, 767, 516, 281, 312, 1570, 4961, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14137652113630966, "compression_ratio": 1.701195219123506, "no_speech_prob": 1.067685843736399e-06}, {"id": 100, "seek": 50644, "start": 520.32, "end": 525.96, "text": " pixel, they end up with images that look like this. But if to the extent that this isn't", "tokens": [50364, 6278, 1412, 13, 1171, 1365, 11, 510, 286, 600, 2726, 264, 5063, 316, 293, 286, 600, 3869, 680, 19261, 5658, 11, 689, 50746, 50746, 498, 1783, 40, 307, 264, 13749, 420, 264, 21367, 295, 19261, 286, 11, 498, 286, 645, 281, 445, 909, 5658, 281, 1184, 51058, 51058, 19261, 11, 436, 917, 493, 365, 5267, 300, 574, 411, 341, 13, 583, 498, 281, 264, 8396, 300, 341, 1943, 380, 51340, 51340, 300, 12424, 295, 437, 291, 536, 294, 264, 1500, 992, 11, 570, 291, 500, 380, 2049, 483, 5267, 51534, 51534, 411, 341, 294, 264, 1500, 992, 11, 341, 307, 767, 516, 281, 312, 1570, 4961, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14137652113630966, "compression_ratio": 1.701195219123506, "no_speech_prob": 1.067685843736399e-06}, {"id": 101, "seek": 50644, "start": 525.96, "end": 529.84, "text": " that representative of what you see in the test set, because you don't often get images", "tokens": [50364, 6278, 1412, 13, 1171, 1365, 11, 510, 286, 600, 2726, 264, 5063, 316, 293, 286, 600, 3869, 680, 19261, 5658, 11, 689, 50746, 50746, 498, 1783, 40, 307, 264, 13749, 420, 264, 21367, 295, 19261, 286, 11, 498, 286, 645, 281, 445, 909, 5658, 281, 1184, 51058, 51058, 19261, 11, 436, 917, 493, 365, 5267, 300, 574, 411, 341, 13, 583, 498, 281, 264, 8396, 300, 341, 1943, 380, 51340, 51340, 300, 12424, 295, 437, 291, 536, 294, 264, 1500, 992, 11, 570, 291, 500, 380, 2049, 483, 5267, 51534, 51534, 411, 341, 294, 264, 1500, 992, 11, 341, 307, 767, 516, 281, 312, 1570, 4961, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14137652113630966, "compression_ratio": 1.701195219123506, "no_speech_prob": 1.067685843736399e-06}, {"id": 102, "seek": 50644, "start": 529.84, "end": 534.0, "text": " like this in the test set, this is actually going to be less helpful.", "tokens": [50364, 6278, 1412, 13, 1171, 1365, 11, 510, 286, 600, 2726, 264, 5063, 316, 293, 286, 600, 3869, 680, 19261, 5658, 11, 689, 50746, 50746, 498, 1783, 40, 307, 264, 13749, 420, 264, 21367, 295, 19261, 286, 11, 498, 286, 645, 281, 445, 909, 5658, 281, 1184, 51058, 51058, 19261, 11, 436, 917, 493, 365, 5267, 300, 574, 411, 341, 13, 583, 498, 281, 264, 8396, 300, 341, 1943, 380, 51340, 51340, 300, 12424, 295, 437, 291, 536, 294, 264, 1500, 992, 11, 570, 291, 500, 380, 2049, 483, 5267, 51534, 51534, 411, 341, 294, 264, 1500, 992, 11, 341, 307, 767, 516, 281, 312, 1570, 4961, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14137652113630966, "compression_ratio": 1.701195219123506, "no_speech_prob": 1.067685843736399e-06}, {"id": 103, "seek": 53400, "start": 534.0, "end": 540.28, "text": " So one way to think about data augmentation is how can you modify or warp or distort or", "tokens": [50364, 407, 472, 636, 281, 519, 466, 1412, 14501, 19631, 307, 577, 393, 291, 16927, 420, 36030, 420, 37555, 420, 50678, 50678, 652, 544, 5658, 294, 428, 1412, 11, 457, 294, 257, 636, 370, 300, 437, 291, 483, 307, 920, 1596, 2531, 50962, 50962, 281, 437, 291, 362, 294, 428, 1500, 992, 11, 570, 300, 311, 437, 264, 2539, 9284, 486, 6284, 51240, 51240, 917, 493, 884, 731, 322, 13, 51360, 51360, 823, 9735, 1412, 14501, 19631, 2516, 364, 6741, 3097, 1365, 293, 1072, 11221, 309, 281, 1884, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.10674234536977914, "compression_ratio": 1.6784140969162995, "no_speech_prob": 4.785005785379326e-06}, {"id": 104, "seek": 53400, "start": 540.28, "end": 545.96, "text": " make more noise in your data, but in a way so that what you get is still quite similar", "tokens": [50364, 407, 472, 636, 281, 519, 466, 1412, 14501, 19631, 307, 577, 393, 291, 16927, 420, 36030, 420, 37555, 420, 50678, 50678, 652, 544, 5658, 294, 428, 1412, 11, 457, 294, 257, 636, 370, 300, 437, 291, 483, 307, 920, 1596, 2531, 50962, 50962, 281, 437, 291, 362, 294, 428, 1500, 992, 11, 570, 300, 311, 437, 264, 2539, 9284, 486, 6284, 51240, 51240, 917, 493, 884, 731, 322, 13, 51360, 51360, 823, 9735, 1412, 14501, 19631, 2516, 364, 6741, 3097, 1365, 293, 1072, 11221, 309, 281, 1884, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.10674234536977914, "compression_ratio": 1.6784140969162995, "no_speech_prob": 4.785005785379326e-06}, {"id": 105, "seek": 53400, "start": 545.96, "end": 551.52, "text": " to what you have in your test set, because that's what the learning algorithm will ultimately", "tokens": [50364, 407, 472, 636, 281, 519, 466, 1412, 14501, 19631, 307, 577, 393, 291, 16927, 420, 36030, 420, 37555, 420, 50678, 50678, 652, 544, 5658, 294, 428, 1412, 11, 457, 294, 257, 636, 370, 300, 437, 291, 483, 307, 920, 1596, 2531, 50962, 50962, 281, 437, 291, 362, 294, 428, 1500, 992, 11, 570, 300, 311, 437, 264, 2539, 9284, 486, 6284, 51240, 51240, 917, 493, 884, 731, 322, 13, 51360, 51360, 823, 9735, 1412, 14501, 19631, 2516, 364, 6741, 3097, 1365, 293, 1072, 11221, 309, 281, 1884, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.10674234536977914, "compression_ratio": 1.6784140969162995, "no_speech_prob": 4.785005785379326e-06}, {"id": 106, "seek": 53400, "start": 551.52, "end": 553.92, "text": " end up doing well on.", "tokens": [50364, 407, 472, 636, 281, 519, 466, 1412, 14501, 19631, 307, 577, 393, 291, 16927, 420, 36030, 420, 37555, 420, 50678, 50678, 652, 544, 5658, 294, 428, 1412, 11, 457, 294, 257, 636, 370, 300, 437, 291, 483, 307, 920, 1596, 2531, 50962, 50962, 281, 437, 291, 362, 294, 428, 1500, 992, 11, 570, 300, 311, 437, 264, 2539, 9284, 486, 6284, 51240, 51240, 917, 493, 884, 731, 322, 13, 51360, 51360, 823, 9735, 1412, 14501, 19631, 2516, 364, 6741, 3097, 1365, 293, 1072, 11221, 309, 281, 1884, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.10674234536977914, "compression_ratio": 1.6784140969162995, "no_speech_prob": 4.785005785379326e-06}, {"id": 107, "seek": 53400, "start": 553.92, "end": 559.96, "text": " Now whereas data augmentation takes an existing training example and modifies it to create", "tokens": [50364, 407, 472, 636, 281, 519, 466, 1412, 14501, 19631, 307, 577, 393, 291, 16927, 420, 36030, 420, 37555, 420, 50678, 50678, 652, 544, 5658, 294, 428, 1412, 11, 457, 294, 257, 636, 370, 300, 437, 291, 483, 307, 920, 1596, 2531, 50962, 50962, 281, 437, 291, 362, 294, 428, 1500, 992, 11, 570, 300, 311, 437, 264, 2539, 9284, 486, 6284, 51240, 51240, 917, 493, 884, 731, 322, 13, 51360, 51360, 823, 9735, 1412, 14501, 19631, 2516, 364, 6741, 3097, 1365, 293, 1072, 11221, 309, 281, 1884, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.10674234536977914, "compression_ratio": 1.6784140969162995, "no_speech_prob": 4.785005785379326e-06}, {"id": 108, "seek": 55996, "start": 559.96, "end": 564.96, "text": " another training example, there's one other technique which is data synthesis, in which", "tokens": [50364, 1071, 3097, 1365, 11, 456, 311, 472, 661, 6532, 597, 307, 1412, 30252, 11, 294, 597, 50614, 50614, 291, 652, 493, 3360, 777, 5110, 490, 8459, 11, 406, 538, 42626, 364, 6741, 1365, 11, 457, 50900, 50900, 538, 4084, 3360, 777, 5110, 13, 51062, 51062, 407, 747, 264, 1365, 295, 5052, 422, 18547, 13, 39175, 422, 18547, 420, 5052, 20674, 2517, 11150, 14942, 51422, 51422, 281, 264, 1154, 295, 1237, 412, 364, 3256, 411, 341, 293, 6772, 1419, 257, 3820, 1401, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.13932698193718404, "compression_ratio": 1.7035398230088497, "no_speech_prob": 3.726515387825202e-06}, {"id": 109, "seek": 55996, "start": 564.96, "end": 570.6800000000001, "text": " you make up brand new examples from scratch, not by modifying an existing example, but", "tokens": [50364, 1071, 3097, 1365, 11, 456, 311, 472, 661, 6532, 597, 307, 1412, 30252, 11, 294, 597, 50614, 50614, 291, 652, 493, 3360, 777, 5110, 490, 8459, 11, 406, 538, 42626, 364, 6741, 1365, 11, 457, 50900, 50900, 538, 4084, 3360, 777, 5110, 13, 51062, 51062, 407, 747, 264, 1365, 295, 5052, 422, 18547, 13, 39175, 422, 18547, 420, 5052, 20674, 2517, 11150, 14942, 51422, 51422, 281, 264, 1154, 295, 1237, 412, 364, 3256, 411, 341, 293, 6772, 1419, 257, 3820, 1401, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.13932698193718404, "compression_ratio": 1.7035398230088497, "no_speech_prob": 3.726515387825202e-06}, {"id": 110, "seek": 55996, "start": 570.6800000000001, "end": 573.9200000000001, "text": " by creating brand new examples.", "tokens": [50364, 1071, 3097, 1365, 11, 456, 311, 472, 661, 6532, 597, 307, 1412, 30252, 11, 294, 597, 50614, 50614, 291, 652, 493, 3360, 777, 5110, 490, 8459, 11, 406, 538, 42626, 364, 6741, 1365, 11, 457, 50900, 50900, 538, 4084, 3360, 777, 5110, 13, 51062, 51062, 407, 747, 264, 1365, 295, 5052, 422, 18547, 13, 39175, 422, 18547, 420, 5052, 20674, 2517, 11150, 14942, 51422, 51422, 281, 264, 1154, 295, 1237, 412, 364, 3256, 411, 341, 293, 6772, 1419, 257, 3820, 1401, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.13932698193718404, "compression_ratio": 1.7035398230088497, "no_speech_prob": 3.726515387825202e-06}, {"id": 111, "seek": 55996, "start": 573.9200000000001, "end": 581.12, "text": " So take the example of photo OCR. Photo OCR or photo optical character recognition refers", "tokens": [50364, 1071, 3097, 1365, 11, 456, 311, 472, 661, 6532, 597, 307, 1412, 30252, 11, 294, 597, 50614, 50614, 291, 652, 493, 3360, 777, 5110, 490, 8459, 11, 406, 538, 42626, 364, 6741, 1365, 11, 457, 50900, 50900, 538, 4084, 3360, 777, 5110, 13, 51062, 51062, 407, 747, 264, 1365, 295, 5052, 422, 18547, 13, 39175, 422, 18547, 420, 5052, 20674, 2517, 11150, 14942, 51422, 51422, 281, 264, 1154, 295, 1237, 412, 364, 3256, 411, 341, 293, 6772, 1419, 257, 3820, 1401, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.13932698193718404, "compression_ratio": 1.7035398230088497, "no_speech_prob": 3.726515387825202e-06}, {"id": 112, "seek": 55996, "start": 581.12, "end": 587.1600000000001, "text": " to the problem of looking at an image like this and automatically having a computer read", "tokens": [50364, 1071, 3097, 1365, 11, 456, 311, 472, 661, 6532, 597, 307, 1412, 30252, 11, 294, 597, 50614, 50614, 291, 652, 493, 3360, 777, 5110, 490, 8459, 11, 406, 538, 42626, 364, 6741, 1365, 11, 457, 50900, 50900, 538, 4084, 3360, 777, 5110, 13, 51062, 51062, 407, 747, 264, 1365, 295, 5052, 422, 18547, 13, 39175, 422, 18547, 420, 5052, 20674, 2517, 11150, 14942, 51422, 51422, 281, 264, 1154, 295, 1237, 412, 364, 3256, 411, 341, 293, 6772, 1419, 257, 3820, 1401, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.13932698193718404, "compression_ratio": 1.7035398230088497, "no_speech_prob": 3.726515387825202e-06}, {"id": 113, "seek": 58716, "start": 587.16, "end": 592.9599999999999, "text": " the text that appears in this image. So there's a lot of text in this image.", "tokens": [50364, 264, 2487, 300, 7038, 294, 341, 3256, 13, 407, 456, 311, 257, 688, 295, 2487, 294, 341, 3256, 13, 50654, 50654, 1012, 393, 291, 3847, 364, 422, 18547, 9284, 281, 1401, 2487, 490, 364, 3256, 411, 341, 30, 1042, 11, 562, 291, 51056, 51056, 574, 8185, 412, 437, 264, 7825, 294, 341, 3256, 1542, 411, 11, 436, 767, 574, 411, 341, 13, 51308, 51308, 407, 341, 307, 957, 1412, 490, 257, 5052, 422, 18547, 5633, 13, 400, 472, 2141, 1823, 295, 264, 5052, 422, 18547, 5633, 307, 51614, 51614, 281, 312, 1075, 281, 574, 412, 264, 707, 3256, 411, 341, 293, 5521, 264, 5063, 412, 264, 2808, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.09759014844894409, "compression_ratio": 1.8369098712446352, "no_speech_prob": 3.44644990946108e-06}, {"id": 114, "seek": 58716, "start": 592.9599999999999, "end": 601.0, "text": " How can you train an OCR algorithm to read text from an image like this? Well, when you", "tokens": [50364, 264, 2487, 300, 7038, 294, 341, 3256, 13, 407, 456, 311, 257, 688, 295, 2487, 294, 341, 3256, 13, 50654, 50654, 1012, 393, 291, 3847, 364, 422, 18547, 9284, 281, 1401, 2487, 490, 364, 3256, 411, 341, 30, 1042, 11, 562, 291, 51056, 51056, 574, 8185, 412, 437, 264, 7825, 294, 341, 3256, 1542, 411, 11, 436, 767, 574, 411, 341, 13, 51308, 51308, 407, 341, 307, 957, 1412, 490, 257, 5052, 422, 18547, 5633, 13, 400, 472, 2141, 1823, 295, 264, 5052, 422, 18547, 5633, 307, 51614, 51614, 281, 312, 1075, 281, 574, 412, 264, 707, 3256, 411, 341, 293, 5521, 264, 5063, 412, 264, 2808, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.09759014844894409, "compression_ratio": 1.8369098712446352, "no_speech_prob": 3.44644990946108e-06}, {"id": 115, "seek": 58716, "start": 601.0, "end": 606.04, "text": " look closely at what the letters in this image looks like, they actually look like this.", "tokens": [50364, 264, 2487, 300, 7038, 294, 341, 3256, 13, 407, 456, 311, 257, 688, 295, 2487, 294, 341, 3256, 13, 50654, 50654, 1012, 393, 291, 3847, 364, 422, 18547, 9284, 281, 1401, 2487, 490, 364, 3256, 411, 341, 30, 1042, 11, 562, 291, 51056, 51056, 574, 8185, 412, 437, 264, 7825, 294, 341, 3256, 1542, 411, 11, 436, 767, 574, 411, 341, 13, 51308, 51308, 407, 341, 307, 957, 1412, 490, 257, 5052, 422, 18547, 5633, 13, 400, 472, 2141, 1823, 295, 264, 5052, 422, 18547, 5633, 307, 51614, 51614, 281, 312, 1075, 281, 574, 412, 264, 707, 3256, 411, 341, 293, 5521, 264, 5063, 412, 264, 2808, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.09759014844894409, "compression_ratio": 1.8369098712446352, "no_speech_prob": 3.44644990946108e-06}, {"id": 116, "seek": 58716, "start": 606.04, "end": 612.16, "text": " So this is real data from a photo OCR task. And one key step of the photo OCR task is", "tokens": [50364, 264, 2487, 300, 7038, 294, 341, 3256, 13, 407, 456, 311, 257, 688, 295, 2487, 294, 341, 3256, 13, 50654, 50654, 1012, 393, 291, 3847, 364, 422, 18547, 9284, 281, 1401, 2487, 490, 364, 3256, 411, 341, 30, 1042, 11, 562, 291, 51056, 51056, 574, 8185, 412, 437, 264, 7825, 294, 341, 3256, 1542, 411, 11, 436, 767, 574, 411, 341, 13, 51308, 51308, 407, 341, 307, 957, 1412, 490, 257, 5052, 422, 18547, 5633, 13, 400, 472, 2141, 1823, 295, 264, 5052, 422, 18547, 5633, 307, 51614, 51614, 281, 312, 1075, 281, 574, 412, 264, 707, 3256, 411, 341, 293, 5521, 264, 5063, 412, 264, 2808, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.09759014844894409, "compression_ratio": 1.8369098712446352, "no_speech_prob": 3.44644990946108e-06}, {"id": 117, "seek": 58716, "start": 612.16, "end": 616.5799999999999, "text": " to be able to look at the little image like this and recognize the letter at the middle.", "tokens": [50364, 264, 2487, 300, 7038, 294, 341, 3256, 13, 407, 456, 311, 257, 688, 295, 2487, 294, 341, 3256, 13, 50654, 50654, 1012, 393, 291, 3847, 364, 422, 18547, 9284, 281, 1401, 2487, 490, 364, 3256, 411, 341, 30, 1042, 11, 562, 291, 51056, 51056, 574, 8185, 412, 437, 264, 7825, 294, 341, 3256, 1542, 411, 11, 436, 767, 574, 411, 341, 13, 51308, 51308, 407, 341, 307, 957, 1412, 490, 257, 5052, 422, 18547, 5633, 13, 400, 472, 2141, 1823, 295, 264, 5052, 422, 18547, 5633, 307, 51614, 51614, 281, 312, 1075, 281, 574, 412, 264, 707, 3256, 411, 341, 293, 5521, 264, 5063, 412, 264, 2808, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.09759014844894409, "compression_ratio": 1.8369098712446352, "no_speech_prob": 3.44644990946108e-06}, {"id": 118, "seek": 61658, "start": 616.58, "end": 623.4000000000001, "text": " So this has T in the middle, this has the letter L in the middle, this has the letter", "tokens": [50364, 407, 341, 575, 314, 294, 264, 2808, 11, 341, 575, 264, 5063, 441, 294, 264, 2808, 11, 341, 575, 264, 5063, 50705, 50705, 383, 294, 264, 2808, 11, 293, 370, 322, 13, 50851, 50851, 407, 472, 636, 281, 1884, 11677, 1412, 337, 341, 5633, 307, 498, 291, 352, 281, 428, 3820, 311, 2487, 51187, 51187, 9839, 11, 291, 915, 300, 309, 575, 257, 688, 295, 819, 35316, 13, 400, 437, 291, 393, 360, 307, 747, 613, 35316, 51581, 51581], "temperature": 0.0, "avg_logprob": -0.09282471221170308, "compression_ratio": 1.7411764705882353, "no_speech_prob": 1.8738504650173127e-06}, {"id": 119, "seek": 61658, "start": 623.4000000000001, "end": 626.32, "text": " C in the middle, and so on.", "tokens": [50364, 407, 341, 575, 314, 294, 264, 2808, 11, 341, 575, 264, 5063, 441, 294, 264, 2808, 11, 341, 575, 264, 5063, 50705, 50705, 383, 294, 264, 2808, 11, 293, 370, 322, 13, 50851, 50851, 407, 472, 636, 281, 1884, 11677, 1412, 337, 341, 5633, 307, 498, 291, 352, 281, 428, 3820, 311, 2487, 51187, 51187, 9839, 11, 291, 915, 300, 309, 575, 257, 688, 295, 819, 35316, 13, 400, 437, 291, 393, 360, 307, 747, 613, 35316, 51581, 51581], "temperature": 0.0, "avg_logprob": -0.09282471221170308, "compression_ratio": 1.7411764705882353, "no_speech_prob": 1.8738504650173127e-06}, {"id": 120, "seek": 61658, "start": 626.32, "end": 633.0400000000001, "text": " So one way to create artificial data for this task is if you go to your computer's text", "tokens": [50364, 407, 341, 575, 314, 294, 264, 2808, 11, 341, 575, 264, 5063, 441, 294, 264, 2808, 11, 341, 575, 264, 5063, 50705, 50705, 383, 294, 264, 2808, 11, 293, 370, 322, 13, 50851, 50851, 407, 472, 636, 281, 1884, 11677, 1412, 337, 341, 5633, 307, 498, 291, 352, 281, 428, 3820, 311, 2487, 51187, 51187, 9839, 11, 291, 915, 300, 309, 575, 257, 688, 295, 819, 35316, 13, 400, 437, 291, 393, 360, 307, 747, 613, 35316, 51581, 51581], "temperature": 0.0, "avg_logprob": -0.09282471221170308, "compression_ratio": 1.7411764705882353, "no_speech_prob": 1.8738504650173127e-06}, {"id": 121, "seek": 61658, "start": 633.0400000000001, "end": 640.9200000000001, "text": " editor, you find that it has a lot of different fonts. And what you can do is take these fonts", "tokens": [50364, 407, 341, 575, 314, 294, 264, 2808, 11, 341, 575, 264, 5063, 441, 294, 264, 2808, 11, 341, 575, 264, 5063, 50705, 50705, 383, 294, 264, 2808, 11, 293, 370, 322, 13, 50851, 50851, 407, 472, 636, 281, 1884, 11677, 1412, 337, 341, 5633, 307, 498, 291, 352, 281, 428, 3820, 311, 2487, 51187, 51187, 9839, 11, 291, 915, 300, 309, 575, 257, 688, 295, 819, 35316, 13, 400, 437, 291, 393, 360, 307, 747, 613, 35316, 51581, 51581], "temperature": 0.0, "avg_logprob": -0.09282471221170308, "compression_ratio": 1.7411764705882353, "no_speech_prob": 1.8738504650173127e-06}, {"id": 122, "seek": 64092, "start": 640.92, "end": 647.8, "text": " and basically type out random text in your text editor and screenshot it using different", "tokens": [50364, 293, 1936, 2010, 484, 4974, 2487, 294, 428, 2487, 9839, 293, 27712, 309, 1228, 819, 50708, 50708, 4577, 293, 819, 8712, 82, 293, 588, 819, 35316, 13, 400, 291, 483, 23420, 1412, 411, 300, 51040, 51040, 322, 264, 558, 13, 440, 5267, 322, 264, 1411, 645, 957, 1412, 490, 957, 5242, 2726, 484, 294, 51332, 51332, 264, 1002, 13, 440, 5267, 322, 264, 558, 366, 10657, 22652, 10833, 1228, 35316, 322, 264, 3820, 13, 400, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.12473017052759099, "compression_ratio": 1.800995024875622, "no_speech_prob": 9.721444484966923e-07}, {"id": 123, "seek": 64092, "start": 647.8, "end": 654.4399999999999, "text": " colors and different contrasts and very different fonts. And you get synthetic data like that", "tokens": [50364, 293, 1936, 2010, 484, 4974, 2487, 294, 428, 2487, 9839, 293, 27712, 309, 1228, 819, 50708, 50708, 4577, 293, 819, 8712, 82, 293, 588, 819, 35316, 13, 400, 291, 483, 23420, 1412, 411, 300, 51040, 51040, 322, 264, 558, 13, 440, 5267, 322, 264, 1411, 645, 957, 1412, 490, 957, 5242, 2726, 484, 294, 51332, 51332, 264, 1002, 13, 440, 5267, 322, 264, 558, 366, 10657, 22652, 10833, 1228, 35316, 322, 264, 3820, 13, 400, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.12473017052759099, "compression_ratio": 1.800995024875622, "no_speech_prob": 9.721444484966923e-07}, {"id": 124, "seek": 64092, "start": 654.4399999999999, "end": 660.28, "text": " on the right. The images on the left were real data from real pictures taken out in", "tokens": [50364, 293, 1936, 2010, 484, 4974, 2487, 294, 428, 2487, 9839, 293, 27712, 309, 1228, 819, 50708, 50708, 4577, 293, 819, 8712, 82, 293, 588, 819, 35316, 13, 400, 291, 483, 23420, 1412, 411, 300, 51040, 51040, 322, 264, 558, 13, 440, 5267, 322, 264, 1411, 645, 957, 1412, 490, 957, 5242, 2726, 484, 294, 51332, 51332, 264, 1002, 13, 440, 5267, 322, 264, 558, 366, 10657, 22652, 10833, 1228, 35316, 322, 264, 3820, 13, 400, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.12473017052759099, "compression_ratio": 1.800995024875622, "no_speech_prob": 9.721444484966923e-07}, {"id": 125, "seek": 64092, "start": 660.28, "end": 667.0799999999999, "text": " the world. The images on the right are synthetically generated using fonts on the computer. And", "tokens": [50364, 293, 1936, 2010, 484, 4974, 2487, 294, 428, 2487, 9839, 293, 27712, 309, 1228, 819, 50708, 50708, 4577, 293, 819, 8712, 82, 293, 588, 819, 35316, 13, 400, 291, 483, 23420, 1412, 411, 300, 51040, 51040, 322, 264, 558, 13, 440, 5267, 322, 264, 1411, 645, 957, 1412, 490, 957, 5242, 2726, 484, 294, 51332, 51332, 264, 1002, 13, 440, 5267, 322, 264, 558, 366, 10657, 22652, 10833, 1228, 35316, 322, 264, 3820, 13, 400, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.12473017052759099, "compression_ratio": 1.800995024875622, "no_speech_prob": 9.721444484966923e-07}, {"id": 126, "seek": 66708, "start": 667.08, "end": 673.84, "text": " it actually looks pretty realistic. So with synthetic data generation like this, you can", "tokens": [50364, 309, 767, 1542, 1238, 12465, 13, 407, 365, 23420, 1412, 5125, 411, 341, 11, 291, 393, 50702, 50702, 8460, 257, 588, 2416, 1230, 295, 5267, 420, 5110, 337, 428, 5052, 422, 18547, 5633, 13, 467, 393, 312, 51050, 51050, 257, 688, 295, 589, 281, 2464, 264, 3089, 281, 8460, 12465, 1237, 23420, 1412, 337, 257, 2212, 51312, 51312, 3861, 13, 583, 562, 291, 3496, 565, 281, 360, 370, 11, 309, 393, 2171, 854, 291, 8460, 257, 588, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.10888702486768181, "compression_ratio": 1.6603773584905661, "no_speech_prob": 6.475898999269702e-07}, {"id": 127, "seek": 66708, "start": 673.84, "end": 680.8000000000001, "text": " generate a very large number of images or examples for your photo OCR task. It can be", "tokens": [50364, 309, 767, 1542, 1238, 12465, 13, 407, 365, 23420, 1412, 5125, 411, 341, 11, 291, 393, 50702, 50702, 8460, 257, 588, 2416, 1230, 295, 5267, 420, 5110, 337, 428, 5052, 422, 18547, 5633, 13, 467, 393, 312, 51050, 51050, 257, 688, 295, 589, 281, 2464, 264, 3089, 281, 8460, 12465, 1237, 23420, 1412, 337, 257, 2212, 51312, 51312, 3861, 13, 583, 562, 291, 3496, 565, 281, 360, 370, 11, 309, 393, 2171, 854, 291, 8460, 257, 588, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.10888702486768181, "compression_ratio": 1.6603773584905661, "no_speech_prob": 6.475898999269702e-07}, {"id": 128, "seek": 66708, "start": 680.8000000000001, "end": 686.0400000000001, "text": " a lot of work to write the code to generate realistic looking synthetic data for a given", "tokens": [50364, 309, 767, 1542, 1238, 12465, 13, 407, 365, 23420, 1412, 5125, 411, 341, 11, 291, 393, 50702, 50702, 8460, 257, 588, 2416, 1230, 295, 5267, 420, 5110, 337, 428, 5052, 422, 18547, 5633, 13, 467, 393, 312, 51050, 51050, 257, 688, 295, 589, 281, 2464, 264, 3089, 281, 8460, 12465, 1237, 23420, 1412, 337, 257, 2212, 51312, 51312, 3861, 13, 583, 562, 291, 3496, 565, 281, 360, 370, 11, 309, 393, 2171, 854, 291, 8460, 257, 588, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.10888702486768181, "compression_ratio": 1.6603773584905661, "no_speech_prob": 6.475898999269702e-07}, {"id": 129, "seek": 66708, "start": 686.0400000000001, "end": 692.8000000000001, "text": " application. But when you spend time to do so, it can sometimes help you generate a very", "tokens": [50364, 309, 767, 1542, 1238, 12465, 13, 407, 365, 23420, 1412, 5125, 411, 341, 11, 291, 393, 50702, 50702, 8460, 257, 588, 2416, 1230, 295, 5267, 420, 5110, 337, 428, 5052, 422, 18547, 5633, 13, 467, 393, 312, 51050, 51050, 257, 688, 295, 589, 281, 2464, 264, 3089, 281, 8460, 12465, 1237, 23420, 1412, 337, 257, 2212, 51312, 51312, 3861, 13, 583, 562, 291, 3496, 565, 281, 360, 370, 11, 309, 393, 2171, 854, 291, 8460, 257, 588, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.10888702486768181, "compression_ratio": 1.6603773584905661, "no_speech_prob": 6.475898999269702e-07}, {"id": 130, "seek": 69280, "start": 692.8, "end": 698.52, "text": " large amount of data for your application and give you a huge boost to your average", "tokens": [50364, 2416, 2372, 295, 1412, 337, 428, 3861, 293, 976, 291, 257, 2603, 9194, 281, 428, 4274, 50650, 50650, 3389, 13, 318, 18656, 3532, 1412, 5125, 575, 668, 1143, 881, 1391, 337, 3820, 5201, 50964, 50964, 9608, 293, 1570, 337, 661, 5821, 11, 406, 300, 709, 337, 6278, 9608, 382, 731, 13, 1057, 264, 51272, 51272, 7512, 291, 600, 1612, 294, 341, 960, 10961, 281, 5006, 2098, 281, 11403, 264, 1412, 1143, 51572, 51572, 538, 428, 1185, 13, 682, 264, 636, 300, 3479, 2539, 575, 4743, 670, 264, 1036, 2940, 7878, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.11870050932231703, "compression_ratio": 1.676923076923077, "no_speech_prob": 4.289212029107148e-06}, {"id": 131, "seek": 69280, "start": 698.52, "end": 704.8, "text": " performance. Synthetic data generation has been used most probably for computer vision", "tokens": [50364, 2416, 2372, 295, 1412, 337, 428, 3861, 293, 976, 291, 257, 2603, 9194, 281, 428, 4274, 50650, 50650, 3389, 13, 318, 18656, 3532, 1412, 5125, 575, 668, 1143, 881, 1391, 337, 3820, 5201, 50964, 50964, 9608, 293, 1570, 337, 661, 5821, 11, 406, 300, 709, 337, 6278, 9608, 382, 731, 13, 1057, 264, 51272, 51272, 7512, 291, 600, 1612, 294, 341, 960, 10961, 281, 5006, 2098, 281, 11403, 264, 1412, 1143, 51572, 51572, 538, 428, 1185, 13, 682, 264, 636, 300, 3479, 2539, 575, 4743, 670, 264, 1036, 2940, 7878, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.11870050932231703, "compression_ratio": 1.676923076923077, "no_speech_prob": 4.289212029107148e-06}, {"id": 132, "seek": 69280, "start": 704.8, "end": 710.9599999999999, "text": " tasks and less for other applications, not that much for audio tasks as well. All the", "tokens": [50364, 2416, 2372, 295, 1412, 337, 428, 3861, 293, 976, 291, 257, 2603, 9194, 281, 428, 4274, 50650, 50650, 3389, 13, 318, 18656, 3532, 1412, 5125, 575, 668, 1143, 881, 1391, 337, 3820, 5201, 50964, 50964, 9608, 293, 1570, 337, 661, 5821, 11, 406, 300, 709, 337, 6278, 9608, 382, 731, 13, 1057, 264, 51272, 51272, 7512, 291, 600, 1612, 294, 341, 960, 10961, 281, 5006, 2098, 281, 11403, 264, 1412, 1143, 51572, 51572, 538, 428, 1185, 13, 682, 264, 636, 300, 3479, 2539, 575, 4743, 670, 264, 1036, 2940, 7878, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.11870050932231703, "compression_ratio": 1.676923076923077, "no_speech_prob": 4.289212029107148e-06}, {"id": 133, "seek": 69280, "start": 710.9599999999999, "end": 716.9599999999999, "text": " techniques you've seen in this video relate to finding ways to engineer the data used", "tokens": [50364, 2416, 2372, 295, 1412, 337, 428, 3861, 293, 976, 291, 257, 2603, 9194, 281, 428, 4274, 50650, 50650, 3389, 13, 318, 18656, 3532, 1412, 5125, 575, 668, 1143, 881, 1391, 337, 3820, 5201, 50964, 50964, 9608, 293, 1570, 337, 661, 5821, 11, 406, 300, 709, 337, 6278, 9608, 382, 731, 13, 1057, 264, 51272, 51272, 7512, 291, 600, 1612, 294, 341, 960, 10961, 281, 5006, 2098, 281, 11403, 264, 1412, 1143, 51572, 51572, 538, 428, 1185, 13, 682, 264, 636, 300, 3479, 2539, 575, 4743, 670, 264, 1036, 2940, 7878, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.11870050932231703, "compression_ratio": 1.676923076923077, "no_speech_prob": 4.289212029107148e-06}, {"id": 134, "seek": 69280, "start": 716.9599999999999, "end": 722.76, "text": " by your system. In the way that machine learning has developed over the last several decades,", "tokens": [50364, 2416, 2372, 295, 1412, 337, 428, 3861, 293, 976, 291, 257, 2603, 9194, 281, 428, 4274, 50650, 50650, 3389, 13, 318, 18656, 3532, 1412, 5125, 575, 668, 1143, 881, 1391, 337, 3820, 5201, 50964, 50964, 9608, 293, 1570, 337, 661, 5821, 11, 406, 300, 709, 337, 6278, 9608, 382, 731, 13, 1057, 264, 51272, 51272, 7512, 291, 600, 1612, 294, 341, 960, 10961, 281, 5006, 2098, 281, 11403, 264, 1412, 1143, 51572, 51572, 538, 428, 1185, 13, 682, 264, 636, 300, 3479, 2539, 575, 4743, 670, 264, 1036, 2940, 7878, 11, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.11870050932231703, "compression_ratio": 1.676923076923077, "no_speech_prob": 4.289212029107148e-06}, {"id": 135, "seek": 72276, "start": 722.76, "end": 729.48, "text": " many decades, most machine learning researchers attention was on the conventional model centric", "tokens": [50364, 867, 7878, 11, 881, 3479, 2539, 10309, 3202, 390, 322, 264, 16011, 2316, 1489, 1341, 50700, 50700, 3109, 13, 400, 510, 311, 437, 286, 914, 13, 316, 3479, 2539, 1185, 420, 364, 7318, 1185, 5974, 1293, 51014, 51014, 3089, 281, 4445, 428, 9284, 420, 428, 2316, 11, 382, 731, 382, 264, 1412, 300, 291, 3847, 264, 9284, 51274, 51274, 322, 13, 400, 670, 264, 1036, 1326, 7878, 11, 881, 10309, 884, 3479, 2539, 2132, 576, 5484, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.15541164875030516, "compression_ratio": 1.8405797101449275, "no_speech_prob": 7.527524303441169e-06}, {"id": 136, "seek": 72276, "start": 729.48, "end": 735.76, "text": " approach. And here's what I mean. A machine learning system or an AI system includes both", "tokens": [50364, 867, 7878, 11, 881, 3479, 2539, 10309, 3202, 390, 322, 264, 16011, 2316, 1489, 1341, 50700, 50700, 3109, 13, 400, 510, 311, 437, 286, 914, 13, 316, 3479, 2539, 1185, 420, 364, 7318, 1185, 5974, 1293, 51014, 51014, 3089, 281, 4445, 428, 9284, 420, 428, 2316, 11, 382, 731, 382, 264, 1412, 300, 291, 3847, 264, 9284, 51274, 51274, 322, 13, 400, 670, 264, 1036, 1326, 7878, 11, 881, 10309, 884, 3479, 2539, 2132, 576, 5484, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.15541164875030516, "compression_ratio": 1.8405797101449275, "no_speech_prob": 7.527524303441169e-06}, {"id": 137, "seek": 72276, "start": 735.76, "end": 740.96, "text": " code to implement your algorithm or your model, as well as the data that you train the algorithm", "tokens": [50364, 867, 7878, 11, 881, 3479, 2539, 10309, 3202, 390, 322, 264, 16011, 2316, 1489, 1341, 50700, 50700, 3109, 13, 400, 510, 311, 437, 286, 914, 13, 316, 3479, 2539, 1185, 420, 364, 7318, 1185, 5974, 1293, 51014, 51014, 3089, 281, 4445, 428, 9284, 420, 428, 2316, 11, 382, 731, 382, 264, 1412, 300, 291, 3847, 264, 9284, 51274, 51274, 322, 13, 400, 670, 264, 1036, 1326, 7878, 11, 881, 10309, 884, 3479, 2539, 2132, 576, 5484, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.15541164875030516, "compression_ratio": 1.8405797101449275, "no_speech_prob": 7.527524303441169e-06}, {"id": 138, "seek": 72276, "start": 740.96, "end": 748.04, "text": " on. And over the last few decades, most researchers doing machine learning research would download", "tokens": [50364, 867, 7878, 11, 881, 3479, 2539, 10309, 3202, 390, 322, 264, 16011, 2316, 1489, 1341, 50700, 50700, 3109, 13, 400, 510, 311, 437, 286, 914, 13, 316, 3479, 2539, 1185, 420, 364, 7318, 1185, 5974, 1293, 51014, 51014, 3089, 281, 4445, 428, 9284, 420, 428, 2316, 11, 382, 731, 382, 264, 1412, 300, 291, 3847, 264, 9284, 51274, 51274, 322, 13, 400, 670, 264, 1036, 1326, 7878, 11, 881, 10309, 884, 3479, 2539, 2132, 576, 5484, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.15541164875030516, "compression_ratio": 1.8405797101449275, "no_speech_prob": 7.527524303441169e-06}, {"id": 139, "seek": 74804, "start": 748.04, "end": 753.52, "text": " the data set and hold the data fix while they focus on improving the code or the algorithm", "tokens": [50364, 264, 1412, 992, 293, 1797, 264, 1412, 3191, 1339, 436, 1879, 322, 11470, 264, 3089, 420, 264, 9284, 50638, 50638, 420, 264, 2316, 13, 2561, 281, 300, 24709, 295, 3479, 2539, 2132, 11, 286, 915, 300, 965, 264, 14642, 51088, 51088, 321, 362, 2105, 281, 11, 1270, 382, 8213, 24590, 11, 3565, 3142, 24590, 11, 18161, 9590, 11, 611, 51330, 51330, 3537, 5852, 11, 597, 291, 536, 958, 1243, 11, 456, 366, 14642, 300, 366, 1217, 588, 665, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.15854316804467178, "compression_ratio": 1.7083333333333333, "no_speech_prob": 1.5056488109621569e-06}, {"id": 140, "seek": 74804, "start": 753.52, "end": 762.52, "text": " or the model. Thanks to that paradigm of machine learning research, I find that today the algorithms", "tokens": [50364, 264, 1412, 992, 293, 1797, 264, 1412, 3191, 1339, 436, 1879, 322, 11470, 264, 3089, 420, 264, 9284, 50638, 50638, 420, 264, 2316, 13, 2561, 281, 300, 24709, 295, 3479, 2539, 2132, 11, 286, 915, 300, 965, 264, 14642, 51088, 51088, 321, 362, 2105, 281, 11, 1270, 382, 8213, 24590, 11, 3565, 3142, 24590, 11, 18161, 9590, 11, 611, 51330, 51330, 3537, 5852, 11, 597, 291, 536, 958, 1243, 11, 456, 366, 14642, 300, 366, 1217, 588, 665, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.15854316804467178, "compression_ratio": 1.7083333333333333, "no_speech_prob": 1.5056488109621569e-06}, {"id": 141, "seek": 74804, "start": 762.52, "end": 767.36, "text": " we have access to, such as linear regression, logistic regression, neural networks, also", "tokens": [50364, 264, 1412, 992, 293, 1797, 264, 1412, 3191, 1339, 436, 1879, 322, 11470, 264, 3089, 420, 264, 9284, 50638, 50638, 420, 264, 2316, 13, 2561, 281, 300, 24709, 295, 3479, 2539, 2132, 11, 286, 915, 300, 965, 264, 14642, 51088, 51088, 321, 362, 2105, 281, 11, 1270, 382, 8213, 24590, 11, 3565, 3142, 24590, 11, 18161, 9590, 11, 611, 51330, 51330, 3537, 5852, 11, 597, 291, 536, 958, 1243, 11, 456, 366, 14642, 300, 366, 1217, 588, 665, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.15854316804467178, "compression_ratio": 1.7083333333333333, "no_speech_prob": 1.5056488109621569e-06}, {"id": 142, "seek": 74804, "start": 767.36, "end": 772.28, "text": " decision trees, which you see next week, there are algorithms that are already very good", "tokens": [50364, 264, 1412, 992, 293, 1797, 264, 1412, 3191, 1339, 436, 1879, 322, 11470, 264, 3089, 420, 264, 9284, 50638, 50638, 420, 264, 2316, 13, 2561, 281, 300, 24709, 295, 3479, 2539, 2132, 11, 286, 915, 300, 965, 264, 14642, 51088, 51088, 321, 362, 2105, 281, 11, 1270, 382, 8213, 24590, 11, 3565, 3142, 24590, 11, 18161, 9590, 11, 611, 51330, 51330, 3537, 5852, 11, 597, 291, 536, 958, 1243, 11, 456, 366, 14642, 300, 366, 1217, 588, 665, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.15854316804467178, "compression_ratio": 1.7083333333333333, "no_speech_prob": 1.5056488109621569e-06}, {"id": 143, "seek": 77228, "start": 772.28, "end": 779.4, "text": " and will work well for many applications. And so sometimes it can be more fruitful to", "tokens": [50364, 293, 486, 589, 731, 337, 867, 5821, 13, 400, 370, 2171, 309, 393, 312, 544, 49795, 281, 50720, 50720, 3496, 544, 295, 428, 565, 1940, 257, 1412, 1489, 1341, 3109, 294, 597, 291, 1879, 322, 7043, 51056, 51056, 264, 1412, 1143, 538, 428, 9284, 13, 400, 341, 393, 312, 1340, 490, 12510, 544, 1412, 51360, 51360, 281, 12510, 544, 1412, 445, 322, 27130, 24028, 11, 498, 300, 311, 437, 6713, 5215, 1907, 291, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.08423325922582056, "compression_ratio": 1.6431924882629108, "no_speech_prob": 3.412481532905076e-07}, {"id": 144, "seek": 77228, "start": 779.4, "end": 786.12, "text": " spend more of your time taking a data centric approach in which you focus on engineering", "tokens": [50364, 293, 486, 589, 731, 337, 867, 5821, 13, 400, 370, 2171, 309, 393, 312, 544, 49795, 281, 50720, 50720, 3496, 544, 295, 428, 565, 1940, 257, 1412, 1489, 1341, 3109, 294, 597, 291, 1879, 322, 7043, 51056, 51056, 264, 1412, 1143, 538, 428, 9284, 13, 400, 341, 393, 312, 1340, 490, 12510, 544, 1412, 51360, 51360, 281, 12510, 544, 1412, 445, 322, 27130, 24028, 11, 498, 300, 311, 437, 6713, 5215, 1907, 291, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.08423325922582056, "compression_ratio": 1.6431924882629108, "no_speech_prob": 3.412481532905076e-07}, {"id": 145, "seek": 77228, "start": 786.12, "end": 792.1999999999999, "text": " the data used by your algorithm. And this can be anything from collecting more data", "tokens": [50364, 293, 486, 589, 731, 337, 867, 5821, 13, 400, 370, 2171, 309, 393, 312, 544, 49795, 281, 50720, 50720, 3496, 544, 295, 428, 565, 1940, 257, 1412, 1489, 1341, 3109, 294, 597, 291, 1879, 322, 7043, 51056, 51056, 264, 1412, 1143, 538, 428, 9284, 13, 400, 341, 393, 312, 1340, 490, 12510, 544, 1412, 51360, 51360, 281, 12510, 544, 1412, 445, 322, 27130, 24028, 11, 498, 300, 311, 437, 6713, 5215, 1907, 291, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.08423325922582056, "compression_ratio": 1.6431924882629108, "no_speech_prob": 3.412481532905076e-07}, {"id": 146, "seek": 77228, "start": 792.1999999999999, "end": 796.64, "text": " to collecting more data just on pharmaceutical spam, if that's what error analysis told you", "tokens": [50364, 293, 486, 589, 731, 337, 867, 5821, 13, 400, 370, 2171, 309, 393, 312, 544, 49795, 281, 50720, 50720, 3496, 544, 295, 428, 565, 1940, 257, 1412, 1489, 1341, 3109, 294, 597, 291, 1879, 322, 7043, 51056, 51056, 264, 1412, 1143, 538, 428, 9284, 13, 400, 341, 393, 312, 1340, 490, 12510, 544, 1412, 51360, 51360, 281, 12510, 544, 1412, 445, 322, 27130, 24028, 11, 498, 300, 311, 437, 6713, 5215, 1907, 291, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.08423325922582056, "compression_ratio": 1.6431924882629108, "no_speech_prob": 3.412481532905076e-07}, {"id": 147, "seek": 79664, "start": 796.64, "end": 802.72, "text": " to do, to using data augmentation to generate more images or more audio or using data synthesis", "tokens": [50364, 281, 360, 11, 281, 1228, 1412, 14501, 19631, 281, 8460, 544, 5267, 420, 544, 6278, 420, 1228, 1412, 30252, 50668, 50668, 281, 445, 1884, 544, 3097, 5110, 13, 400, 2171, 300, 1879, 322, 264, 1412, 393, 312, 364, 50964, 50964, 7148, 636, 281, 854, 428, 2539, 9284, 3470, 1080, 3389, 13, 407, 286, 1454, 300, 341, 51260, 51260, 960, 2709, 291, 257, 992, 295, 3873, 281, 312, 7148, 293, 4942, 294, 577, 291, 909, 544, 1412, 281, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.09923906679506656, "compression_ratio": 1.6484018264840183, "no_speech_prob": 1.3708834103454137e-06}, {"id": 148, "seek": 79664, "start": 802.72, "end": 808.64, "text": " to just create more training examples. And sometimes that focus on the data can be an", "tokens": [50364, 281, 360, 11, 281, 1228, 1412, 14501, 19631, 281, 8460, 544, 5267, 420, 544, 6278, 420, 1228, 1412, 30252, 50668, 50668, 281, 445, 1884, 544, 3097, 5110, 13, 400, 2171, 300, 1879, 322, 264, 1412, 393, 312, 364, 50964, 50964, 7148, 636, 281, 854, 428, 2539, 9284, 3470, 1080, 3389, 13, 407, 286, 1454, 300, 341, 51260, 51260, 960, 2709, 291, 257, 992, 295, 3873, 281, 312, 7148, 293, 4942, 294, 577, 291, 909, 544, 1412, 281, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.09923906679506656, "compression_ratio": 1.6484018264840183, "no_speech_prob": 1.3708834103454137e-06}, {"id": 149, "seek": 79664, "start": 808.64, "end": 814.56, "text": " efficient way to help your learning algorithm improve its performance. So I hope that this", "tokens": [50364, 281, 360, 11, 281, 1228, 1412, 14501, 19631, 281, 8460, 544, 5267, 420, 544, 6278, 420, 1228, 1412, 30252, 50668, 50668, 281, 445, 1884, 544, 3097, 5110, 13, 400, 2171, 300, 1879, 322, 264, 1412, 393, 312, 364, 50964, 50964, 7148, 636, 281, 854, 428, 2539, 9284, 3470, 1080, 3389, 13, 407, 286, 1454, 300, 341, 51260, 51260, 960, 2709, 291, 257, 992, 295, 3873, 281, 312, 7148, 293, 4942, 294, 577, 291, 909, 544, 1412, 281, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.09923906679506656, "compression_ratio": 1.6484018264840183, "no_speech_prob": 1.3708834103454137e-06}, {"id": 150, "seek": 79664, "start": 814.56, "end": 821.0, "text": " video gives you a set of tools to be efficient and effective in how you add more data to", "tokens": [50364, 281, 360, 11, 281, 1228, 1412, 14501, 19631, 281, 8460, 544, 5267, 420, 544, 6278, 420, 1228, 1412, 30252, 50668, 50668, 281, 445, 1884, 544, 3097, 5110, 13, 400, 2171, 300, 1879, 322, 264, 1412, 393, 312, 364, 50964, 50964, 7148, 636, 281, 854, 428, 2539, 9284, 3470, 1080, 3389, 13, 407, 286, 1454, 300, 341, 51260, 51260, 960, 2709, 291, 257, 992, 295, 3873, 281, 312, 7148, 293, 4942, 294, 577, 291, 909, 544, 1412, 281, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.09923906679506656, "compression_ratio": 1.6484018264840183, "no_speech_prob": 1.3708834103454137e-06}, {"id": 151, "seek": 82100, "start": 821.0, "end": 826.68, "text": " get your learning algorithm to work better. Now, there are also some applications where", "tokens": [50364, 483, 428, 2539, 9284, 281, 589, 1101, 13, 823, 11, 456, 366, 611, 512, 5821, 689, 50648, 50648, 291, 445, 500, 380, 362, 300, 709, 1412, 293, 309, 311, 534, 1152, 281, 483, 544, 1412, 13, 467, 4523, 484, 50902, 50902, 300, 456, 311, 257, 6532, 1219, 5003, 2539, 11, 597, 727, 3079, 294, 300, 3287, 281, 976, 51160, 51160, 428, 2539, 9284, 311, 3389, 257, 2603, 9194, 13, 400, 264, 2141, 1558, 307, 281, 747, 1412, 490, 51412, 51412, 257, 3879, 819, 11, 6457, 4077, 5633, 13, 583, 1228, 257, 18161, 3209, 11, 456, 311, 2171, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.10278046485221032, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.397174497076776e-06}, {"id": 152, "seek": 82100, "start": 826.68, "end": 831.76, "text": " you just don't have that much data and it's really hard to get more data. It turns out", "tokens": [50364, 483, 428, 2539, 9284, 281, 589, 1101, 13, 823, 11, 456, 366, 611, 512, 5821, 689, 50648, 50648, 291, 445, 500, 380, 362, 300, 709, 1412, 293, 309, 311, 534, 1152, 281, 483, 544, 1412, 13, 467, 4523, 484, 50902, 50902, 300, 456, 311, 257, 6532, 1219, 5003, 2539, 11, 597, 727, 3079, 294, 300, 3287, 281, 976, 51160, 51160, 428, 2539, 9284, 311, 3389, 257, 2603, 9194, 13, 400, 264, 2141, 1558, 307, 281, 747, 1412, 490, 51412, 51412, 257, 3879, 819, 11, 6457, 4077, 5633, 13, 583, 1228, 257, 18161, 3209, 11, 456, 311, 2171, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.10278046485221032, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.397174497076776e-06}, {"id": 153, "seek": 82100, "start": 831.76, "end": 836.92, "text": " that there's a technique called transfer learning, which could apply in that setting to give", "tokens": [50364, 483, 428, 2539, 9284, 281, 589, 1101, 13, 823, 11, 456, 366, 611, 512, 5821, 689, 50648, 50648, 291, 445, 500, 380, 362, 300, 709, 1412, 293, 309, 311, 534, 1152, 281, 483, 544, 1412, 13, 467, 4523, 484, 50902, 50902, 300, 456, 311, 257, 6532, 1219, 5003, 2539, 11, 597, 727, 3079, 294, 300, 3287, 281, 976, 51160, 51160, 428, 2539, 9284, 311, 3389, 257, 2603, 9194, 13, 400, 264, 2141, 1558, 307, 281, 747, 1412, 490, 51412, 51412, 257, 3879, 819, 11, 6457, 4077, 5633, 13, 583, 1228, 257, 18161, 3209, 11, 456, 311, 2171, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.10278046485221032, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.397174497076776e-06}, {"id": 154, "seek": 82100, "start": 836.92, "end": 841.96, "text": " your learning algorithm's performance a huge boost. And the key idea is to take data from", "tokens": [50364, 483, 428, 2539, 9284, 281, 589, 1101, 13, 823, 11, 456, 366, 611, 512, 5821, 689, 50648, 50648, 291, 445, 500, 380, 362, 300, 709, 1412, 293, 309, 311, 534, 1152, 281, 483, 544, 1412, 13, 467, 4523, 484, 50902, 50902, 300, 456, 311, 257, 6532, 1219, 5003, 2539, 11, 597, 727, 3079, 294, 300, 3287, 281, 976, 51160, 51160, 428, 2539, 9284, 311, 3389, 257, 2603, 9194, 13, 400, 264, 2141, 1558, 307, 281, 747, 1412, 490, 51412, 51412, 257, 3879, 819, 11, 6457, 4077, 5633, 13, 583, 1228, 257, 18161, 3209, 11, 456, 311, 2171, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.10278046485221032, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.397174497076776e-06}, {"id": 155, "seek": 82100, "start": 841.96, "end": 847.68, "text": " a totally different, fairly related task. But using a neural network, there's sometimes", "tokens": [50364, 483, 428, 2539, 9284, 281, 589, 1101, 13, 823, 11, 456, 366, 611, 512, 5821, 689, 50648, 50648, 291, 445, 500, 380, 362, 300, 709, 1412, 293, 309, 311, 534, 1152, 281, 483, 544, 1412, 13, 467, 4523, 484, 50902, 50902, 300, 456, 311, 257, 6532, 1219, 5003, 2539, 11, 597, 727, 3079, 294, 300, 3287, 281, 976, 51160, 51160, 428, 2539, 9284, 311, 3389, 257, 2603, 9194, 13, 400, 264, 2141, 1558, 307, 281, 747, 1412, 490, 51412, 51412, 257, 3879, 819, 11, 6457, 4077, 5633, 13, 583, 1228, 257, 18161, 3209, 11, 456, 311, 2171, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.10278046485221032, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.397174497076776e-06}, {"id": 156, "seek": 84768, "start": 847.68, "end": 853.1999999999999, "text": " ways to use that data from a very different task to get your algorithm to do better on", "tokens": [50364, 2098, 281, 764, 300, 1412, 490, 257, 588, 819, 5633, 281, 483, 428, 9284, 281, 360, 1101, 322, 50640, 50640, 428, 3861, 13, 12955, 380, 3079, 281, 1203, 11, 457, 562, 309, 775, 11, 309, 393, 312, 588, 4005, 13, 50924, 50924, 961, 311, 747, 257, 574, 294, 264, 958, 960, 412, 577, 5003, 2539, 1985, 13, 51114], "temperature": 0.0, "avg_logprob": -0.14424983660380045, "compression_ratio": 1.4352941176470588, "no_speech_prob": 1.028013230097713e-05}, {"id": 157, "seek": 84768, "start": 853.1999999999999, "end": 858.88, "text": " your application. Doesn't apply to everything, but when it does, it can be very powerful.", "tokens": [50364, 2098, 281, 764, 300, 1412, 490, 257, 588, 819, 5633, 281, 483, 428, 9284, 281, 360, 1101, 322, 50640, 50640, 428, 3861, 13, 12955, 380, 3079, 281, 1203, 11, 457, 562, 309, 775, 11, 309, 393, 312, 588, 4005, 13, 50924, 50924, 961, 311, 747, 257, 574, 294, 264, 958, 960, 412, 577, 5003, 2539, 1985, 13, 51114], "temperature": 0.0, "avg_logprob": -0.14424983660380045, "compression_ratio": 1.4352941176470588, "no_speech_prob": 1.028013230097713e-05}, {"id": 158, "seek": 85888, "start": 858.88, "end": 878.88, "text": " Let's take a look in the next video at how transfer learning works.", "tokens": [50364, 961, 311, 747, 257, 574, 294, 264, 958, 960, 412, 577, 5003, 2539, 1985, 13, 51364], "temperature": 0.0, "avg_logprob": -0.3335527843899197, "compression_ratio": 1.0, "no_speech_prob": 1.361402973998338e-05}], "language": "en", "video_id": "YQNWuC69uqI", "entity": "ML Specialization, Andrew Ng (2022)"}}