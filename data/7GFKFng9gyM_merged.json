{"video_id": "7GFKFng9gyM", "title": "4.16 Vectorization (optional) | Matrix multiplication rules-- [Machine Learning - Andrew Ng]", "description": "Second Course:\nAdvanced Learning Algorithms.\n\n\nIf you liked the content please subscribe and put a little blue thumb.\nTake heart!", "author": "Machine Learning", "keywords": [], "channel_url": "https://www.youtube.com/channel/UClG5HEAJJFOavT_UolqYROQ", "length": 573, "views": 89, "publish_date": "11/04/2022", "timestamp": 1661385600, "entity": "ML Specialization, Andrew Ng (2022)", "transcript": {"text": " So, let's take a look at the general form of how you multiply two matrices together. And then in the last video after this one, we'll take this and apply it to the vectorized implementation of a neural network. Let's dive in. Here's a matrix A, which is a 2 by 3 matrix, because it has two rows and three columns. As before, I'd encourage you to think of the columns of this matrix as three vectors, vectors A1, A2, and A3. And what we're going to do is take A transpose and multiply that with a matrix W. The first, what is A transpose? Well, A transpose is obtained by taking the first column of A and laying it on the side like this, and then taking the second column of A and laying it on the side like this, and then the third column of A and laying it on the side like that. And so these rows are now A1 transpose, A2 transpose, and A3 transpose. Next, here's a matrix W. I encourage you to think of W as vectors W1, W2, W3, and W4 stacked together as so. Let's look at how you then compute A transpose times W. Now, notice that I've also used slightly different shades of orange to denote the different columns of A, where the same shade corresponds to numbers that we think of as grouped together into a vector. And that same shade is used to indicate different rows of A transpose, because the different rows of A transpose are A1 transpose, A2 transpose, and A3 transpose. And in a similar way, I've used different shades to denote the different columns of W, because the numbers of the same shade of blue are the ones that are grouped together to form the vectors W1, or W2, or W3, or W4. Now, let's look at how you can compute A transpose times W. I'm going to draw vertical bars with the different shades of blue, and horizontal bars with the different shades of orange to indicate which elements of Z, that is A transpose W, are influenced or affected by the different rows of A transpose, and which are influenced or affected by the different columns of W. So, for example, let's look at the first column of W, so that's W1, as indicated by the lightest shade of blue here. So W1 will influence or will correspond to this first column of Z, shown here, by this lightest shade of blue. And the values of this second column of W, that is W2, as indicated by this second lightest shade of blue, will affect the values computed in the second column of Z, and so on, for the third and fourth columns. Correspondingly, let's look at A transpose. A1 transpose is the first row of A transpose, as indicated by the lightest shade of orange, and A1 transpose will affect or influence or correspond to the values in the first row of Z, and A2 transpose will influence the second row of Z, and A3 transpose will influence or correspond to this third row of Z. So let's figure out how to compute the matrix Z, which is going to be a 3 by 4 matrix, so with 12 numbers altogether. Let's start off and figure out how to compute the number in the first row and the first column of Z. So this upper left most element here. Because this is the first row and the first column corresponding to the lightest shade of orange and the lightest shade of blue, the way you compute that is to grab the first row of A transpose and the first column of W and take their inner product or the dot product. And so this number is going to be 12 dot product with 3, 4, which is 1 times 3 plus 2 times 4, which is equal to 11. Let's look at a second example. How would you compute this number, this element of Z? So this is in the third row, row 1, row 2, row 3, so this is row 3 and the second column, column 1, column 2. So to compute the number in row 3, column 2 of Z, you would now grab row 3 of A transpose and column 2 of W and dot product those together. Notice that this corresponds to the darkest shade of orange and the second lightest shade of blue. And to compute this, this is 0.1 times 5 plus 0.2 times 6, which is 0.5 plus 1.2, which is equal to 1.7. So to compute the number in row 3, column 2 of Z, you grab the third row, row 3 of A transpose and column 2 of W. Let's look at one more example and let's see if you can figure this one out. This is row 2, column 3 of the matrix Z. Why don't you take a look and see if you can figure out which row and which column to grab to dot product together and therefore what is the number that will go in this element of this matrix. Hopefully you got that you should be grabbing row 2 of A transpose and column 3 of W and when you dot product that together, you have A2 transpose W3 is negative 1 times 7 plus negative 2 times 8, which is negative 7 plus negative 16, which is equal to negative 23. And so that's how you compute this element of the matrix Z. And it turns out if you do this for every element of the matrix Z, then you can compute all of the numbers in this matrix, which turns out to look like that. Feel free to pause the video if you want and pick any element and double check that the formula we've been going through gives you the right value for Z. I just want to point out one last interesting requirement for multiplying matrices together, which is that X transpose here is a 3 by 2 matrix because it has 3 rows and 2 columns and W here is a 2 by 4 matrix because it has 2 rows and 4 columns. One requirement in order to multiply 2 matrices together is that this number must match that number and that's because you can only take dot products between vectors that are the same length. So you can take the dot product between a vector with 2 numbers and that's because you can take the inner product between a vector of length 2 only with another vector of length 2. You can't take the inner product between a vector of length 2 with a vector of length 3, for example. And that's why matrix multiplication is valid only if the number of columns of the first matrix, that is A transpose here, is equal to the number of rows of the second matrix, minus the number of rows of W here, so that when you take dot products during this process, you're taking dot products of vectors of the same size. And then the other observation is that the output Z equals A transpose W, the dimensions of Z is 3 by 4, and so the output of this multiplication will have the same number of rows as X transpose and the same number of columns as W. And so that too is another property of matrix multiplication. So that's matrix multiplication. All these videos are optional, so thank you for sticking with me through these. And if you're interested, later in this week, there are also some purely optional quizzes to let you practice some more of these calculations yourself as well. So with that, let's take what we've learned about matrix multiplication and apply it back to the vectorized implementation of a neural network. I have to say, the first time I understood the vectorized implementation, I thought it was actually really cool. I've been implementing neural networks for a while myself without the vectorized implementation. And when I finally understood the vectorized implementation and implemented it that way for the first time, it ran blazingly much faster than anything I've ever done before. And I thought, wow, I wish I had figured this out earlier. The vectorized implementation, it is a little bit complicated, but it makes neural networks run much faster. So let's take a look at that in the next video.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 8.6, "text": " So, let's take a look at the general form of how you multiply two matrices together.", "tokens": [50364, 407, 11, 718, 311, 747, 257, 574, 412, 264, 2674, 1254, 295, 577, 291, 12972, 732, 32284, 1214, 13, 50794, 50794, 400, 550, 294, 264, 1036, 960, 934, 341, 472, 11, 321, 603, 747, 341, 293, 3079, 309, 281, 264, 8062, 1602, 51060, 51060, 11420, 295, 257, 18161, 3209, 13, 51198, 51198, 961, 311, 9192, 294, 13, 51248, 51248, 1692, 311, 257, 8141, 316, 11, 597, 307, 257, 568, 538, 805, 8141, 11, 570, 309, 575, 732, 13241, 293, 1045, 13766, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.15272637300713118, "compression_ratio": 1.4976076555023923, "no_speech_prob": 0.008574938401579857}, {"id": 1, "seek": 0, "start": 8.6, "end": 13.92, "text": " And then in the last video after this one, we'll take this and apply it to the vectorized", "tokens": [50364, 407, 11, 718, 311, 747, 257, 574, 412, 264, 2674, 1254, 295, 577, 291, 12972, 732, 32284, 1214, 13, 50794, 50794, 400, 550, 294, 264, 1036, 960, 934, 341, 472, 11, 321, 603, 747, 341, 293, 3079, 309, 281, 264, 8062, 1602, 51060, 51060, 11420, 295, 257, 18161, 3209, 13, 51198, 51198, 961, 311, 9192, 294, 13, 51248, 51248, 1692, 311, 257, 8141, 316, 11, 597, 307, 257, 568, 538, 805, 8141, 11, 570, 309, 575, 732, 13241, 293, 1045, 13766, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.15272637300713118, "compression_ratio": 1.4976076555023923, "no_speech_prob": 0.008574938401579857}, {"id": 2, "seek": 0, "start": 13.92, "end": 16.68, "text": " implementation of a neural network.", "tokens": [50364, 407, 11, 718, 311, 747, 257, 574, 412, 264, 2674, 1254, 295, 577, 291, 12972, 732, 32284, 1214, 13, 50794, 50794, 400, 550, 294, 264, 1036, 960, 934, 341, 472, 11, 321, 603, 747, 341, 293, 3079, 309, 281, 264, 8062, 1602, 51060, 51060, 11420, 295, 257, 18161, 3209, 13, 51198, 51198, 961, 311, 9192, 294, 13, 51248, 51248, 1692, 311, 257, 8141, 316, 11, 597, 307, 257, 568, 538, 805, 8141, 11, 570, 309, 575, 732, 13241, 293, 1045, 13766, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.15272637300713118, "compression_ratio": 1.4976076555023923, "no_speech_prob": 0.008574938401579857}, {"id": 3, "seek": 0, "start": 16.68, "end": 17.68, "text": " Let's dive in.", "tokens": [50364, 407, 11, 718, 311, 747, 257, 574, 412, 264, 2674, 1254, 295, 577, 291, 12972, 732, 32284, 1214, 13, 50794, 50794, 400, 550, 294, 264, 1036, 960, 934, 341, 472, 11, 321, 603, 747, 341, 293, 3079, 309, 281, 264, 8062, 1602, 51060, 51060, 11420, 295, 257, 18161, 3209, 13, 51198, 51198, 961, 311, 9192, 294, 13, 51248, 51248, 1692, 311, 257, 8141, 316, 11, 597, 307, 257, 568, 538, 805, 8141, 11, 570, 309, 575, 732, 13241, 293, 1045, 13766, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.15272637300713118, "compression_ratio": 1.4976076555023923, "no_speech_prob": 0.008574938401579857}, {"id": 4, "seek": 0, "start": 17.68, "end": 26.98, "text": " Here's a matrix A, which is a 2 by 3 matrix, because it has two rows and three columns.", "tokens": [50364, 407, 11, 718, 311, 747, 257, 574, 412, 264, 2674, 1254, 295, 577, 291, 12972, 732, 32284, 1214, 13, 50794, 50794, 400, 550, 294, 264, 1036, 960, 934, 341, 472, 11, 321, 603, 747, 341, 293, 3079, 309, 281, 264, 8062, 1602, 51060, 51060, 11420, 295, 257, 18161, 3209, 13, 51198, 51198, 961, 311, 9192, 294, 13, 51248, 51248, 1692, 311, 257, 8141, 316, 11, 597, 307, 257, 568, 538, 805, 8141, 11, 570, 309, 575, 732, 13241, 293, 1045, 13766, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.15272637300713118, "compression_ratio": 1.4976076555023923, "no_speech_prob": 0.008574938401579857}, {"id": 5, "seek": 2698, "start": 26.98, "end": 33.480000000000004, "text": " As before, I'd encourage you to think of the columns of this matrix as three vectors, vectors", "tokens": [50364, 1018, 949, 11, 286, 1116, 5373, 291, 281, 519, 295, 264, 13766, 295, 341, 8141, 382, 1045, 18875, 11, 18875, 50689, 50689, 316, 16, 11, 316, 17, 11, 293, 316, 18, 13, 50893, 50893, 400, 437, 321, 434, 516, 281, 360, 307, 747, 316, 25167, 293, 12972, 300, 365, 257, 8141, 343, 13, 51267, 51267, 440, 700, 11, 437, 307, 316, 25167, 30, 51341, 51341, 1042, 11, 316, 25167, 307, 14879, 538, 1940, 264, 700, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 51643, 51643], "temperature": 0.0, "avg_logprob": -0.15616057135842062, "compression_ratio": 1.5707070707070707, "no_speech_prob": 2.144369136658497e-05}, {"id": 6, "seek": 2698, "start": 33.480000000000004, "end": 37.56, "text": " A1, A2, and A3.", "tokens": [50364, 1018, 949, 11, 286, 1116, 5373, 291, 281, 519, 295, 264, 13766, 295, 341, 8141, 382, 1045, 18875, 11, 18875, 50689, 50689, 316, 16, 11, 316, 17, 11, 293, 316, 18, 13, 50893, 50893, 400, 437, 321, 434, 516, 281, 360, 307, 747, 316, 25167, 293, 12972, 300, 365, 257, 8141, 343, 13, 51267, 51267, 440, 700, 11, 437, 307, 316, 25167, 30, 51341, 51341, 1042, 11, 316, 25167, 307, 14879, 538, 1940, 264, 700, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 51643, 51643], "temperature": 0.0, "avg_logprob": -0.15616057135842062, "compression_ratio": 1.5707070707070707, "no_speech_prob": 2.144369136658497e-05}, {"id": 7, "seek": 2698, "start": 37.56, "end": 45.04, "text": " And what we're going to do is take A transpose and multiply that with a matrix W.", "tokens": [50364, 1018, 949, 11, 286, 1116, 5373, 291, 281, 519, 295, 264, 13766, 295, 341, 8141, 382, 1045, 18875, 11, 18875, 50689, 50689, 316, 16, 11, 316, 17, 11, 293, 316, 18, 13, 50893, 50893, 400, 437, 321, 434, 516, 281, 360, 307, 747, 316, 25167, 293, 12972, 300, 365, 257, 8141, 343, 13, 51267, 51267, 440, 700, 11, 437, 307, 316, 25167, 30, 51341, 51341, 1042, 11, 316, 25167, 307, 14879, 538, 1940, 264, 700, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 51643, 51643], "temperature": 0.0, "avg_logprob": -0.15616057135842062, "compression_ratio": 1.5707070707070707, "no_speech_prob": 2.144369136658497e-05}, {"id": 8, "seek": 2698, "start": 45.04, "end": 46.519999999999996, "text": " The first, what is A transpose?", "tokens": [50364, 1018, 949, 11, 286, 1116, 5373, 291, 281, 519, 295, 264, 13766, 295, 341, 8141, 382, 1045, 18875, 11, 18875, 50689, 50689, 316, 16, 11, 316, 17, 11, 293, 316, 18, 13, 50893, 50893, 400, 437, 321, 434, 516, 281, 360, 307, 747, 316, 25167, 293, 12972, 300, 365, 257, 8141, 343, 13, 51267, 51267, 440, 700, 11, 437, 307, 316, 25167, 30, 51341, 51341, 1042, 11, 316, 25167, 307, 14879, 538, 1940, 264, 700, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 51643, 51643], "temperature": 0.0, "avg_logprob": -0.15616057135842062, "compression_ratio": 1.5707070707070707, "no_speech_prob": 2.144369136658497e-05}, {"id": 9, "seek": 2698, "start": 46.519999999999996, "end": 52.56, "text": " Well, A transpose is obtained by taking the first column of A and laying it on the side", "tokens": [50364, 1018, 949, 11, 286, 1116, 5373, 291, 281, 519, 295, 264, 13766, 295, 341, 8141, 382, 1045, 18875, 11, 18875, 50689, 50689, 316, 16, 11, 316, 17, 11, 293, 316, 18, 13, 50893, 50893, 400, 437, 321, 434, 516, 281, 360, 307, 747, 316, 25167, 293, 12972, 300, 365, 257, 8141, 343, 13, 51267, 51267, 440, 700, 11, 437, 307, 316, 25167, 30, 51341, 51341, 1042, 11, 316, 25167, 307, 14879, 538, 1940, 264, 700, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 51643, 51643], "temperature": 0.0, "avg_logprob": -0.15616057135842062, "compression_ratio": 1.5707070707070707, "no_speech_prob": 2.144369136658497e-05}, {"id": 10, "seek": 5256, "start": 52.56, "end": 57.68, "text": " like this, and then taking the second column of A and laying it on the side like this,", "tokens": [50364, 411, 341, 11, 293, 550, 1940, 264, 1150, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 411, 341, 11, 50620, 50620, 293, 550, 264, 2636, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 411, 300, 13, 50780, 50780, 400, 370, 613, 13241, 366, 586, 316, 16, 25167, 11, 316, 17, 25167, 11, 293, 316, 18, 25167, 13, 51146, 51146, 3087, 11, 510, 311, 257, 8141, 343, 13, 286, 5373, 291, 281, 519, 295, 343, 382, 18875, 343, 16, 11, 343, 17, 11, 343, 18, 11, 293, 343, 19, 51752, 51752, 28867, 1214, 382, 370, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14901090376447923, "compression_ratio": 1.763157894736842, "no_speech_prob": 1.2410834642651025e-05}, {"id": 11, "seek": 5256, "start": 57.68, "end": 60.88, "text": " and then the third column of A and laying it on the side like that.", "tokens": [50364, 411, 341, 11, 293, 550, 1940, 264, 1150, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 411, 341, 11, 50620, 50620, 293, 550, 264, 2636, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 411, 300, 13, 50780, 50780, 400, 370, 613, 13241, 366, 586, 316, 16, 25167, 11, 316, 17, 25167, 11, 293, 316, 18, 25167, 13, 51146, 51146, 3087, 11, 510, 311, 257, 8141, 343, 13, 286, 5373, 291, 281, 519, 295, 343, 382, 18875, 343, 16, 11, 343, 17, 11, 343, 18, 11, 293, 343, 19, 51752, 51752, 28867, 1214, 382, 370, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14901090376447923, "compression_ratio": 1.763157894736842, "no_speech_prob": 1.2410834642651025e-05}, {"id": 12, "seek": 5256, "start": 60.88, "end": 68.2, "text": " And so these rows are now A1 transpose, A2 transpose, and A3 transpose.", "tokens": [50364, 411, 341, 11, 293, 550, 1940, 264, 1150, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 411, 341, 11, 50620, 50620, 293, 550, 264, 2636, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 411, 300, 13, 50780, 50780, 400, 370, 613, 13241, 366, 586, 316, 16, 25167, 11, 316, 17, 25167, 11, 293, 316, 18, 25167, 13, 51146, 51146, 3087, 11, 510, 311, 257, 8141, 343, 13, 286, 5373, 291, 281, 519, 295, 343, 382, 18875, 343, 16, 11, 343, 17, 11, 343, 18, 11, 293, 343, 19, 51752, 51752, 28867, 1214, 382, 370, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14901090376447923, "compression_ratio": 1.763157894736842, "no_speech_prob": 1.2410834642651025e-05}, {"id": 13, "seek": 5256, "start": 68.2, "end": 80.32000000000001, "text": " Next, here's a matrix W. I encourage you to think of W as vectors W1, W2, W3, and W4", "tokens": [50364, 411, 341, 11, 293, 550, 1940, 264, 1150, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 411, 341, 11, 50620, 50620, 293, 550, 264, 2636, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 411, 300, 13, 50780, 50780, 400, 370, 613, 13241, 366, 586, 316, 16, 25167, 11, 316, 17, 25167, 11, 293, 316, 18, 25167, 13, 51146, 51146, 3087, 11, 510, 311, 257, 8141, 343, 13, 286, 5373, 291, 281, 519, 295, 343, 382, 18875, 343, 16, 11, 343, 17, 11, 343, 18, 11, 293, 343, 19, 51752, 51752, 28867, 1214, 382, 370, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14901090376447923, "compression_ratio": 1.763157894736842, "no_speech_prob": 1.2410834642651025e-05}, {"id": 14, "seek": 5256, "start": 80.32000000000001, "end": 82.32000000000001, "text": " stacked together as so.", "tokens": [50364, 411, 341, 11, 293, 550, 1940, 264, 1150, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 411, 341, 11, 50620, 50620, 293, 550, 264, 2636, 7738, 295, 316, 293, 14903, 309, 322, 264, 1252, 411, 300, 13, 50780, 50780, 400, 370, 613, 13241, 366, 586, 316, 16, 25167, 11, 316, 17, 25167, 11, 293, 316, 18, 25167, 13, 51146, 51146, 3087, 11, 510, 311, 257, 8141, 343, 13, 286, 5373, 291, 281, 519, 295, 343, 382, 18875, 343, 16, 11, 343, 17, 11, 343, 18, 11, 293, 343, 19, 51752, 51752, 28867, 1214, 382, 370, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14901090376447923, "compression_ratio": 1.763157894736842, "no_speech_prob": 1.2410834642651025e-05}, {"id": 15, "seek": 8232, "start": 82.32, "end": 85.6, "text": " Let's look at how you then compute A transpose times W.", "tokens": [50364, 961, 311, 574, 412, 577, 291, 550, 14722, 316, 25167, 1413, 343, 13, 50528, 50528, 823, 11, 3449, 300, 286, 600, 611, 1143, 4748, 819, 20639, 295, 7671, 281, 45708, 264, 819, 13766, 50900, 50900, 295, 316, 11, 689, 264, 912, 11466, 23249, 281, 3547, 300, 321, 519, 295, 382, 41877, 1214, 51225, 51225, 666, 257, 8062, 13, 51332, 51332, 400, 300, 912, 11466, 307, 1143, 281, 13330, 819, 13241, 295, 316, 25167, 11, 570, 264, 819, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.10857034612584997, "compression_ratio": 1.6826923076923077, "no_speech_prob": 1.0030112207459752e-06}, {"id": 16, "seek": 8232, "start": 85.6, "end": 93.03999999999999, "text": " Now, notice that I've also used slightly different shades of orange to denote the different columns", "tokens": [50364, 961, 311, 574, 412, 577, 291, 550, 14722, 316, 25167, 1413, 343, 13, 50528, 50528, 823, 11, 3449, 300, 286, 600, 611, 1143, 4748, 819, 20639, 295, 7671, 281, 45708, 264, 819, 13766, 50900, 50900, 295, 316, 11, 689, 264, 912, 11466, 23249, 281, 3547, 300, 321, 519, 295, 382, 41877, 1214, 51225, 51225, 666, 257, 8062, 13, 51332, 51332, 400, 300, 912, 11466, 307, 1143, 281, 13330, 819, 13241, 295, 316, 25167, 11, 570, 264, 819, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.10857034612584997, "compression_ratio": 1.6826923076923077, "no_speech_prob": 1.0030112207459752e-06}, {"id": 17, "seek": 8232, "start": 93.03999999999999, "end": 99.53999999999999, "text": " of A, where the same shade corresponds to numbers that we think of as grouped together", "tokens": [50364, 961, 311, 574, 412, 577, 291, 550, 14722, 316, 25167, 1413, 343, 13, 50528, 50528, 823, 11, 3449, 300, 286, 600, 611, 1143, 4748, 819, 20639, 295, 7671, 281, 45708, 264, 819, 13766, 50900, 50900, 295, 316, 11, 689, 264, 912, 11466, 23249, 281, 3547, 300, 321, 519, 295, 382, 41877, 1214, 51225, 51225, 666, 257, 8062, 13, 51332, 51332, 400, 300, 912, 11466, 307, 1143, 281, 13330, 819, 13241, 295, 316, 25167, 11, 570, 264, 819, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.10857034612584997, "compression_ratio": 1.6826923076923077, "no_speech_prob": 1.0030112207459752e-06}, {"id": 18, "seek": 8232, "start": 99.53999999999999, "end": 101.67999999999999, "text": " into a vector.", "tokens": [50364, 961, 311, 574, 412, 577, 291, 550, 14722, 316, 25167, 1413, 343, 13, 50528, 50528, 823, 11, 3449, 300, 286, 600, 611, 1143, 4748, 819, 20639, 295, 7671, 281, 45708, 264, 819, 13766, 50900, 50900, 295, 316, 11, 689, 264, 912, 11466, 23249, 281, 3547, 300, 321, 519, 295, 382, 41877, 1214, 51225, 51225, 666, 257, 8062, 13, 51332, 51332, 400, 300, 912, 11466, 307, 1143, 281, 13330, 819, 13241, 295, 316, 25167, 11, 570, 264, 819, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.10857034612584997, "compression_ratio": 1.6826923076923077, "no_speech_prob": 1.0030112207459752e-06}, {"id": 19, "seek": 8232, "start": 101.67999999999999, "end": 107.0, "text": " And that same shade is used to indicate different rows of A transpose, because the different", "tokens": [50364, 961, 311, 574, 412, 577, 291, 550, 14722, 316, 25167, 1413, 343, 13, 50528, 50528, 823, 11, 3449, 300, 286, 600, 611, 1143, 4748, 819, 20639, 295, 7671, 281, 45708, 264, 819, 13766, 50900, 50900, 295, 316, 11, 689, 264, 912, 11466, 23249, 281, 3547, 300, 321, 519, 295, 382, 41877, 1214, 51225, 51225, 666, 257, 8062, 13, 51332, 51332, 400, 300, 912, 11466, 307, 1143, 281, 13330, 819, 13241, 295, 316, 25167, 11, 570, 264, 819, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.10857034612584997, "compression_ratio": 1.6826923076923077, "no_speech_prob": 1.0030112207459752e-06}, {"id": 20, "seek": 10700, "start": 107.0, "end": 112.28, "text": " rows of A transpose are A1 transpose, A2 transpose, and A3 transpose.", "tokens": [50364, 13241, 295, 316, 25167, 366, 316, 16, 25167, 11, 316, 17, 25167, 11, 293, 316, 18, 25167, 13, 50628, 50628, 400, 294, 257, 2531, 636, 11, 286, 600, 1143, 819, 20639, 281, 45708, 264, 819, 13766, 295, 343, 11, 50934, 50934, 570, 264, 3547, 295, 264, 912, 11466, 295, 3344, 366, 264, 2306, 300, 366, 41877, 1214, 281, 51180, 51180, 1254, 264, 18875, 343, 16, 11, 420, 343, 17, 11, 420, 343, 18, 11, 420, 343, 19, 13, 51418, 51418, 823, 11, 718, 311, 574, 412, 577, 291, 393, 14722, 316, 25167, 1413, 343, 13, 51771, 51771], "temperature": 0.0, "avg_logprob": -0.11619038052029079, "compression_ratio": 1.6476190476190475, "no_speech_prob": 2.2958906811254565e-06}, {"id": 21, "seek": 10700, "start": 112.28, "end": 118.4, "text": " And in a similar way, I've used different shades to denote the different columns of W,", "tokens": [50364, 13241, 295, 316, 25167, 366, 316, 16, 25167, 11, 316, 17, 25167, 11, 293, 316, 18, 25167, 13, 50628, 50628, 400, 294, 257, 2531, 636, 11, 286, 600, 1143, 819, 20639, 281, 45708, 264, 819, 13766, 295, 343, 11, 50934, 50934, 570, 264, 3547, 295, 264, 912, 11466, 295, 3344, 366, 264, 2306, 300, 366, 41877, 1214, 281, 51180, 51180, 1254, 264, 18875, 343, 16, 11, 420, 343, 17, 11, 420, 343, 18, 11, 420, 343, 19, 13, 51418, 51418, 823, 11, 718, 311, 574, 412, 577, 291, 393, 14722, 316, 25167, 1413, 343, 13, 51771, 51771], "temperature": 0.0, "avg_logprob": -0.11619038052029079, "compression_ratio": 1.6476190476190475, "no_speech_prob": 2.2958906811254565e-06}, {"id": 22, "seek": 10700, "start": 118.4, "end": 123.32, "text": " because the numbers of the same shade of blue are the ones that are grouped together to", "tokens": [50364, 13241, 295, 316, 25167, 366, 316, 16, 25167, 11, 316, 17, 25167, 11, 293, 316, 18, 25167, 13, 50628, 50628, 400, 294, 257, 2531, 636, 11, 286, 600, 1143, 819, 20639, 281, 45708, 264, 819, 13766, 295, 343, 11, 50934, 50934, 570, 264, 3547, 295, 264, 912, 11466, 295, 3344, 366, 264, 2306, 300, 366, 41877, 1214, 281, 51180, 51180, 1254, 264, 18875, 343, 16, 11, 420, 343, 17, 11, 420, 343, 18, 11, 420, 343, 19, 13, 51418, 51418, 823, 11, 718, 311, 574, 412, 577, 291, 393, 14722, 316, 25167, 1413, 343, 13, 51771, 51771], "temperature": 0.0, "avg_logprob": -0.11619038052029079, "compression_ratio": 1.6476190476190475, "no_speech_prob": 2.2958906811254565e-06}, {"id": 23, "seek": 10700, "start": 123.32, "end": 128.08, "text": " form the vectors W1, or W2, or W3, or W4.", "tokens": [50364, 13241, 295, 316, 25167, 366, 316, 16, 25167, 11, 316, 17, 25167, 11, 293, 316, 18, 25167, 13, 50628, 50628, 400, 294, 257, 2531, 636, 11, 286, 600, 1143, 819, 20639, 281, 45708, 264, 819, 13766, 295, 343, 11, 50934, 50934, 570, 264, 3547, 295, 264, 912, 11466, 295, 3344, 366, 264, 2306, 300, 366, 41877, 1214, 281, 51180, 51180, 1254, 264, 18875, 343, 16, 11, 420, 343, 17, 11, 420, 343, 18, 11, 420, 343, 19, 13, 51418, 51418, 823, 11, 718, 311, 574, 412, 577, 291, 393, 14722, 316, 25167, 1413, 343, 13, 51771, 51771], "temperature": 0.0, "avg_logprob": -0.11619038052029079, "compression_ratio": 1.6476190476190475, "no_speech_prob": 2.2958906811254565e-06}, {"id": 24, "seek": 10700, "start": 128.08, "end": 135.14, "text": " Now, let's look at how you can compute A transpose times W.", "tokens": [50364, 13241, 295, 316, 25167, 366, 316, 16, 25167, 11, 316, 17, 25167, 11, 293, 316, 18, 25167, 13, 50628, 50628, 400, 294, 257, 2531, 636, 11, 286, 600, 1143, 819, 20639, 281, 45708, 264, 819, 13766, 295, 343, 11, 50934, 50934, 570, 264, 3547, 295, 264, 912, 11466, 295, 3344, 366, 264, 2306, 300, 366, 41877, 1214, 281, 51180, 51180, 1254, 264, 18875, 343, 16, 11, 420, 343, 17, 11, 420, 343, 18, 11, 420, 343, 19, 13, 51418, 51418, 823, 11, 718, 311, 574, 412, 577, 291, 393, 14722, 316, 25167, 1413, 343, 13, 51771, 51771], "temperature": 0.0, "avg_logprob": -0.11619038052029079, "compression_ratio": 1.6476190476190475, "no_speech_prob": 2.2958906811254565e-06}, {"id": 25, "seek": 13514, "start": 135.14, "end": 139.83999999999997, "text": " I'm going to draw vertical bars with the different shades of blue, and horizontal bars with the", "tokens": [50364, 286, 478, 516, 281, 2642, 9429, 10228, 365, 264, 819, 20639, 295, 3344, 11, 293, 12750, 10228, 365, 264, 50599, 50599, 819, 20639, 295, 7671, 281, 13330, 597, 4959, 295, 1176, 11, 300, 307, 316, 25167, 343, 11, 366, 51105, 51105, 15269, 420, 8028, 538, 264, 819, 13241, 295, 316, 25167, 11, 293, 597, 366, 15269, 420, 51427, 51427, 8028, 538, 264, 819, 13766, 295, 343, 13, 51573, 51573], "temperature": 0.0, "avg_logprob": -0.12128611013922892, "compression_ratio": 1.9316770186335404, "no_speech_prob": 4.222769803163828e-06}, {"id": 26, "seek": 13514, "start": 139.83999999999997, "end": 149.95999999999998, "text": " different shades of orange to indicate which elements of Z, that is A transpose W, are", "tokens": [50364, 286, 478, 516, 281, 2642, 9429, 10228, 365, 264, 819, 20639, 295, 3344, 11, 293, 12750, 10228, 365, 264, 50599, 50599, 819, 20639, 295, 7671, 281, 13330, 597, 4959, 295, 1176, 11, 300, 307, 316, 25167, 343, 11, 366, 51105, 51105, 15269, 420, 8028, 538, 264, 819, 13241, 295, 316, 25167, 11, 293, 597, 366, 15269, 420, 51427, 51427, 8028, 538, 264, 819, 13766, 295, 343, 13, 51573, 51573], "temperature": 0.0, "avg_logprob": -0.12128611013922892, "compression_ratio": 1.9316770186335404, "no_speech_prob": 4.222769803163828e-06}, {"id": 27, "seek": 13514, "start": 149.95999999999998, "end": 156.39999999999998, "text": " influenced or affected by the different rows of A transpose, and which are influenced or", "tokens": [50364, 286, 478, 516, 281, 2642, 9429, 10228, 365, 264, 819, 20639, 295, 3344, 11, 293, 12750, 10228, 365, 264, 50599, 50599, 819, 20639, 295, 7671, 281, 13330, 597, 4959, 295, 1176, 11, 300, 307, 316, 25167, 343, 11, 366, 51105, 51105, 15269, 420, 8028, 538, 264, 819, 13241, 295, 316, 25167, 11, 293, 597, 366, 15269, 420, 51427, 51427, 8028, 538, 264, 819, 13766, 295, 343, 13, 51573, 51573], "temperature": 0.0, "avg_logprob": -0.12128611013922892, "compression_ratio": 1.9316770186335404, "no_speech_prob": 4.222769803163828e-06}, {"id": 28, "seek": 13514, "start": 156.39999999999998, "end": 159.32, "text": " affected by the different columns of W.", "tokens": [50364, 286, 478, 516, 281, 2642, 9429, 10228, 365, 264, 819, 20639, 295, 3344, 11, 293, 12750, 10228, 365, 264, 50599, 50599, 819, 20639, 295, 7671, 281, 13330, 597, 4959, 295, 1176, 11, 300, 307, 316, 25167, 343, 11, 366, 51105, 51105, 15269, 420, 8028, 538, 264, 819, 13241, 295, 316, 25167, 11, 293, 597, 366, 15269, 420, 51427, 51427, 8028, 538, 264, 819, 13766, 295, 343, 13, 51573, 51573], "temperature": 0.0, "avg_logprob": -0.12128611013922892, "compression_ratio": 1.9316770186335404, "no_speech_prob": 4.222769803163828e-06}, {"id": 29, "seek": 15932, "start": 159.32, "end": 166.64, "text": " So, for example, let's look at the first column of W, so that's W1, as indicated by the lightest", "tokens": [50364, 407, 11, 337, 1365, 11, 718, 311, 574, 412, 264, 700, 7738, 295, 343, 11, 370, 300, 311, 343, 16, 11, 382, 16176, 538, 264, 1442, 377, 50730, 50730, 11466, 295, 3344, 510, 13, 50860, 50860, 407, 343, 16, 486, 6503, 420, 486, 6805, 281, 341, 700, 7738, 295, 1176, 11, 4898, 510, 11, 538, 341, 51352, 51352, 1442, 377, 11466, 295, 3344, 13, 51454, 51454, 400, 264, 4190, 295, 341, 1150, 7738, 295, 343, 11, 300, 307, 343, 17, 11, 382, 16176, 538, 341, 1150, 1442, 377, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.08807860250058382, "compression_ratio": 1.782122905027933, "no_speech_prob": 6.540332378790481e-06}, {"id": 30, "seek": 15932, "start": 166.64, "end": 169.23999999999998, "text": " shade of blue here.", "tokens": [50364, 407, 11, 337, 1365, 11, 718, 311, 574, 412, 264, 700, 7738, 295, 343, 11, 370, 300, 311, 343, 16, 11, 382, 16176, 538, 264, 1442, 377, 50730, 50730, 11466, 295, 3344, 510, 13, 50860, 50860, 407, 343, 16, 486, 6503, 420, 486, 6805, 281, 341, 700, 7738, 295, 1176, 11, 4898, 510, 11, 538, 341, 51352, 51352, 1442, 377, 11466, 295, 3344, 13, 51454, 51454, 400, 264, 4190, 295, 341, 1150, 7738, 295, 343, 11, 300, 307, 343, 17, 11, 382, 16176, 538, 341, 1150, 1442, 377, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.08807860250058382, "compression_ratio": 1.782122905027933, "no_speech_prob": 6.540332378790481e-06}, {"id": 31, "seek": 15932, "start": 169.23999999999998, "end": 179.07999999999998, "text": " So W1 will influence or will correspond to this first column of Z, shown here, by this", "tokens": [50364, 407, 11, 337, 1365, 11, 718, 311, 574, 412, 264, 700, 7738, 295, 343, 11, 370, 300, 311, 343, 16, 11, 382, 16176, 538, 264, 1442, 377, 50730, 50730, 11466, 295, 3344, 510, 13, 50860, 50860, 407, 343, 16, 486, 6503, 420, 486, 6805, 281, 341, 700, 7738, 295, 1176, 11, 4898, 510, 11, 538, 341, 51352, 51352, 1442, 377, 11466, 295, 3344, 13, 51454, 51454, 400, 264, 4190, 295, 341, 1150, 7738, 295, 343, 11, 300, 307, 343, 17, 11, 382, 16176, 538, 341, 1150, 1442, 377, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.08807860250058382, "compression_ratio": 1.782122905027933, "no_speech_prob": 6.540332378790481e-06}, {"id": 32, "seek": 15932, "start": 179.07999999999998, "end": 181.12, "text": " lightest shade of blue.", "tokens": [50364, 407, 11, 337, 1365, 11, 718, 311, 574, 412, 264, 700, 7738, 295, 343, 11, 370, 300, 311, 343, 16, 11, 382, 16176, 538, 264, 1442, 377, 50730, 50730, 11466, 295, 3344, 510, 13, 50860, 50860, 407, 343, 16, 486, 6503, 420, 486, 6805, 281, 341, 700, 7738, 295, 1176, 11, 4898, 510, 11, 538, 341, 51352, 51352, 1442, 377, 11466, 295, 3344, 13, 51454, 51454, 400, 264, 4190, 295, 341, 1150, 7738, 295, 343, 11, 300, 307, 343, 17, 11, 382, 16176, 538, 341, 1150, 1442, 377, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.08807860250058382, "compression_ratio": 1.782122905027933, "no_speech_prob": 6.540332378790481e-06}, {"id": 33, "seek": 15932, "start": 181.12, "end": 188.51999999999998, "text": " And the values of this second column of W, that is W2, as indicated by this second lightest", "tokens": [50364, 407, 11, 337, 1365, 11, 718, 311, 574, 412, 264, 700, 7738, 295, 343, 11, 370, 300, 311, 343, 16, 11, 382, 16176, 538, 264, 1442, 377, 50730, 50730, 11466, 295, 3344, 510, 13, 50860, 50860, 407, 343, 16, 486, 6503, 420, 486, 6805, 281, 341, 700, 7738, 295, 1176, 11, 4898, 510, 11, 538, 341, 51352, 51352, 1442, 377, 11466, 295, 3344, 13, 51454, 51454, 400, 264, 4190, 295, 341, 1150, 7738, 295, 343, 11, 300, 307, 343, 17, 11, 382, 16176, 538, 341, 1150, 1442, 377, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.08807860250058382, "compression_ratio": 1.782122905027933, "no_speech_prob": 6.540332378790481e-06}, {"id": 34, "seek": 18852, "start": 188.52, "end": 195.48000000000002, "text": " shade of blue, will affect the values computed in the second column of Z, and so on, for", "tokens": [50364, 11466, 295, 3344, 11, 486, 3345, 264, 4190, 40610, 294, 264, 1150, 7738, 295, 1176, 11, 293, 370, 322, 11, 337, 50712, 50712, 264, 2636, 293, 6409, 13766, 13, 50870, 50870, 3925, 6663, 12163, 11, 718, 311, 574, 412, 316, 25167, 13, 51112, 51112, 316, 16, 25167, 307, 264, 700, 5386, 295, 316, 25167, 11, 382, 16176, 538, 264, 1442, 377, 11466, 295, 7671, 11, 51430, 51430, 293, 316, 16, 25167, 486, 3345, 420, 6503, 420, 6805, 281, 264, 4190, 294, 264, 700, 5386, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13880796865983444, "compression_ratio": 1.766839378238342, "no_speech_prob": 2.0261261397536146e-06}, {"id": 35, "seek": 18852, "start": 195.48000000000002, "end": 198.64000000000001, "text": " the third and fourth columns.", "tokens": [50364, 11466, 295, 3344, 11, 486, 3345, 264, 4190, 40610, 294, 264, 1150, 7738, 295, 1176, 11, 293, 370, 322, 11, 337, 50712, 50712, 264, 2636, 293, 6409, 13766, 13, 50870, 50870, 3925, 6663, 12163, 11, 718, 311, 574, 412, 316, 25167, 13, 51112, 51112, 316, 16, 25167, 307, 264, 700, 5386, 295, 316, 25167, 11, 382, 16176, 538, 264, 1442, 377, 11466, 295, 7671, 11, 51430, 51430, 293, 316, 16, 25167, 486, 3345, 420, 6503, 420, 6805, 281, 264, 4190, 294, 264, 700, 5386, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13880796865983444, "compression_ratio": 1.766839378238342, "no_speech_prob": 2.0261261397536146e-06}, {"id": 36, "seek": 18852, "start": 198.64000000000001, "end": 203.48000000000002, "text": " Correspondingly, let's look at A transpose.", "tokens": [50364, 11466, 295, 3344, 11, 486, 3345, 264, 4190, 40610, 294, 264, 1150, 7738, 295, 1176, 11, 293, 370, 322, 11, 337, 50712, 50712, 264, 2636, 293, 6409, 13766, 13, 50870, 50870, 3925, 6663, 12163, 11, 718, 311, 574, 412, 316, 25167, 13, 51112, 51112, 316, 16, 25167, 307, 264, 700, 5386, 295, 316, 25167, 11, 382, 16176, 538, 264, 1442, 377, 11466, 295, 7671, 11, 51430, 51430, 293, 316, 16, 25167, 486, 3345, 420, 6503, 420, 6805, 281, 264, 4190, 294, 264, 700, 5386, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13880796865983444, "compression_ratio": 1.766839378238342, "no_speech_prob": 2.0261261397536146e-06}, {"id": 37, "seek": 18852, "start": 203.48000000000002, "end": 209.84, "text": " A1 transpose is the first row of A transpose, as indicated by the lightest shade of orange,", "tokens": [50364, 11466, 295, 3344, 11, 486, 3345, 264, 4190, 40610, 294, 264, 1150, 7738, 295, 1176, 11, 293, 370, 322, 11, 337, 50712, 50712, 264, 2636, 293, 6409, 13766, 13, 50870, 50870, 3925, 6663, 12163, 11, 718, 311, 574, 412, 316, 25167, 13, 51112, 51112, 316, 16, 25167, 307, 264, 700, 5386, 295, 316, 25167, 11, 382, 16176, 538, 264, 1442, 377, 11466, 295, 7671, 11, 51430, 51430, 293, 316, 16, 25167, 486, 3345, 420, 6503, 420, 6805, 281, 264, 4190, 294, 264, 700, 5386, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13880796865983444, "compression_ratio": 1.766839378238342, "no_speech_prob": 2.0261261397536146e-06}, {"id": 38, "seek": 18852, "start": 209.84, "end": 216.20000000000002, "text": " and A1 transpose will affect or influence or correspond to the values in the first row", "tokens": [50364, 11466, 295, 3344, 11, 486, 3345, 264, 4190, 40610, 294, 264, 1150, 7738, 295, 1176, 11, 293, 370, 322, 11, 337, 50712, 50712, 264, 2636, 293, 6409, 13766, 13, 50870, 50870, 3925, 6663, 12163, 11, 718, 311, 574, 412, 316, 25167, 13, 51112, 51112, 316, 16, 25167, 307, 264, 700, 5386, 295, 316, 25167, 11, 382, 16176, 538, 264, 1442, 377, 11466, 295, 7671, 11, 51430, 51430, 293, 316, 16, 25167, 486, 3345, 420, 6503, 420, 6805, 281, 264, 4190, 294, 264, 700, 5386, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13880796865983444, "compression_ratio": 1.766839378238342, "no_speech_prob": 2.0261261397536146e-06}, {"id": 39, "seek": 21620, "start": 216.2, "end": 224.11999999999998, "text": " of Z, and A2 transpose will influence the second row of Z, and A3 transpose will influence", "tokens": [50364, 295, 1176, 11, 293, 316, 17, 25167, 486, 6503, 264, 1150, 5386, 295, 1176, 11, 293, 316, 18, 25167, 486, 6503, 50760, 50760, 420, 6805, 281, 341, 2636, 5386, 295, 1176, 13, 50986, 50986, 407, 718, 311, 2573, 484, 577, 281, 14722, 264, 8141, 1176, 11, 597, 307, 516, 281, 312, 257, 805, 538, 1017, 8141, 11, 370, 51314, 51314, 365, 2272, 3547, 19051, 13, 51430, 51430, 961, 311, 722, 766, 293, 2573, 484, 577, 281, 14722, 264, 1230, 294, 264, 700, 5386, 293, 264, 700, 51736, 51736, 7738, 295, 1176, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.11828240752220154, "compression_ratio": 1.8072916666666667, "no_speech_prob": 1.1478496162453666e-05}, {"id": 40, "seek": 21620, "start": 224.11999999999998, "end": 228.64, "text": " or correspond to this third row of Z.", "tokens": [50364, 295, 1176, 11, 293, 316, 17, 25167, 486, 6503, 264, 1150, 5386, 295, 1176, 11, 293, 316, 18, 25167, 486, 6503, 50760, 50760, 420, 6805, 281, 341, 2636, 5386, 295, 1176, 13, 50986, 50986, 407, 718, 311, 2573, 484, 577, 281, 14722, 264, 8141, 1176, 11, 597, 307, 516, 281, 312, 257, 805, 538, 1017, 8141, 11, 370, 51314, 51314, 365, 2272, 3547, 19051, 13, 51430, 51430, 961, 311, 722, 766, 293, 2573, 484, 577, 281, 14722, 264, 1230, 294, 264, 700, 5386, 293, 264, 700, 51736, 51736, 7738, 295, 1176, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.11828240752220154, "compression_ratio": 1.8072916666666667, "no_speech_prob": 1.1478496162453666e-05}, {"id": 41, "seek": 21620, "start": 228.64, "end": 235.2, "text": " So let's figure out how to compute the matrix Z, which is going to be a 3 by 4 matrix, so", "tokens": [50364, 295, 1176, 11, 293, 316, 17, 25167, 486, 6503, 264, 1150, 5386, 295, 1176, 11, 293, 316, 18, 25167, 486, 6503, 50760, 50760, 420, 6805, 281, 341, 2636, 5386, 295, 1176, 13, 50986, 50986, 407, 718, 311, 2573, 484, 577, 281, 14722, 264, 8141, 1176, 11, 597, 307, 516, 281, 312, 257, 805, 538, 1017, 8141, 11, 370, 51314, 51314, 365, 2272, 3547, 19051, 13, 51430, 51430, 961, 311, 722, 766, 293, 2573, 484, 577, 281, 14722, 264, 1230, 294, 264, 700, 5386, 293, 264, 700, 51736, 51736, 7738, 295, 1176, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.11828240752220154, "compression_ratio": 1.8072916666666667, "no_speech_prob": 1.1478496162453666e-05}, {"id": 42, "seek": 21620, "start": 235.2, "end": 237.51999999999998, "text": " with 12 numbers altogether.", "tokens": [50364, 295, 1176, 11, 293, 316, 17, 25167, 486, 6503, 264, 1150, 5386, 295, 1176, 11, 293, 316, 18, 25167, 486, 6503, 50760, 50760, 420, 6805, 281, 341, 2636, 5386, 295, 1176, 13, 50986, 50986, 407, 718, 311, 2573, 484, 577, 281, 14722, 264, 8141, 1176, 11, 597, 307, 516, 281, 312, 257, 805, 538, 1017, 8141, 11, 370, 51314, 51314, 365, 2272, 3547, 19051, 13, 51430, 51430, 961, 311, 722, 766, 293, 2573, 484, 577, 281, 14722, 264, 1230, 294, 264, 700, 5386, 293, 264, 700, 51736, 51736, 7738, 295, 1176, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.11828240752220154, "compression_ratio": 1.8072916666666667, "no_speech_prob": 1.1478496162453666e-05}, {"id": 43, "seek": 21620, "start": 237.51999999999998, "end": 243.64, "text": " Let's start off and figure out how to compute the number in the first row and the first", "tokens": [50364, 295, 1176, 11, 293, 316, 17, 25167, 486, 6503, 264, 1150, 5386, 295, 1176, 11, 293, 316, 18, 25167, 486, 6503, 50760, 50760, 420, 6805, 281, 341, 2636, 5386, 295, 1176, 13, 50986, 50986, 407, 718, 311, 2573, 484, 577, 281, 14722, 264, 8141, 1176, 11, 597, 307, 516, 281, 312, 257, 805, 538, 1017, 8141, 11, 370, 51314, 51314, 365, 2272, 3547, 19051, 13, 51430, 51430, 961, 311, 722, 766, 293, 2573, 484, 577, 281, 14722, 264, 1230, 294, 264, 700, 5386, 293, 264, 700, 51736, 51736, 7738, 295, 1176, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.11828240752220154, "compression_ratio": 1.8072916666666667, "no_speech_prob": 1.1478496162453666e-05}, {"id": 44, "seek": 21620, "start": 243.64, "end": 244.64, "text": " column of Z.", "tokens": [50364, 295, 1176, 11, 293, 316, 17, 25167, 486, 6503, 264, 1150, 5386, 295, 1176, 11, 293, 316, 18, 25167, 486, 6503, 50760, 50760, 420, 6805, 281, 341, 2636, 5386, 295, 1176, 13, 50986, 50986, 407, 718, 311, 2573, 484, 577, 281, 14722, 264, 8141, 1176, 11, 597, 307, 516, 281, 312, 257, 805, 538, 1017, 8141, 11, 370, 51314, 51314, 365, 2272, 3547, 19051, 13, 51430, 51430, 961, 311, 722, 766, 293, 2573, 484, 577, 281, 14722, 264, 1230, 294, 264, 700, 5386, 293, 264, 700, 51736, 51736, 7738, 295, 1176, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.11828240752220154, "compression_ratio": 1.8072916666666667, "no_speech_prob": 1.1478496162453666e-05}, {"id": 45, "seek": 24464, "start": 244.64, "end": 247.48, "text": " So this upper left most element here.", "tokens": [50364, 407, 341, 6597, 1411, 881, 4478, 510, 13, 50506, 50506, 1436, 341, 307, 264, 700, 5386, 293, 264, 700, 7738, 11760, 281, 264, 1442, 377, 11466, 50707, 50707, 295, 7671, 293, 264, 1442, 377, 11466, 295, 3344, 11, 264, 636, 291, 14722, 300, 307, 281, 4444, 264, 700, 50966, 50966, 5386, 295, 316, 25167, 293, 264, 700, 7738, 295, 343, 293, 747, 641, 7284, 1674, 420, 264, 5893, 51280, 51280, 1674, 13, 51349, 51349, 400, 370, 341, 1230, 307, 516, 281, 312, 2272, 5893, 1674, 365, 805, 11, 1017, 11, 597, 307, 502, 1413, 805, 1804, 568, 1413, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1400159480524998, "compression_ratio": 1.7927927927927927, "no_speech_prob": 1.1125476703455206e-05}, {"id": 46, "seek": 24464, "start": 247.48, "end": 251.5, "text": " Because this is the first row and the first column corresponding to the lightest shade", "tokens": [50364, 407, 341, 6597, 1411, 881, 4478, 510, 13, 50506, 50506, 1436, 341, 307, 264, 700, 5386, 293, 264, 700, 7738, 11760, 281, 264, 1442, 377, 11466, 50707, 50707, 295, 7671, 293, 264, 1442, 377, 11466, 295, 3344, 11, 264, 636, 291, 14722, 300, 307, 281, 4444, 264, 700, 50966, 50966, 5386, 295, 316, 25167, 293, 264, 700, 7738, 295, 343, 293, 747, 641, 7284, 1674, 420, 264, 5893, 51280, 51280, 1674, 13, 51349, 51349, 400, 370, 341, 1230, 307, 516, 281, 312, 2272, 5893, 1674, 365, 805, 11, 1017, 11, 597, 307, 502, 1413, 805, 1804, 568, 1413, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1400159480524998, "compression_ratio": 1.7927927927927927, "no_speech_prob": 1.1125476703455206e-05}, {"id": 47, "seek": 24464, "start": 251.5, "end": 256.68, "text": " of orange and the lightest shade of blue, the way you compute that is to grab the first", "tokens": [50364, 407, 341, 6597, 1411, 881, 4478, 510, 13, 50506, 50506, 1436, 341, 307, 264, 700, 5386, 293, 264, 700, 7738, 11760, 281, 264, 1442, 377, 11466, 50707, 50707, 295, 7671, 293, 264, 1442, 377, 11466, 295, 3344, 11, 264, 636, 291, 14722, 300, 307, 281, 4444, 264, 700, 50966, 50966, 5386, 295, 316, 25167, 293, 264, 700, 7738, 295, 343, 293, 747, 641, 7284, 1674, 420, 264, 5893, 51280, 51280, 1674, 13, 51349, 51349, 400, 370, 341, 1230, 307, 516, 281, 312, 2272, 5893, 1674, 365, 805, 11, 1017, 11, 597, 307, 502, 1413, 805, 1804, 568, 1413, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1400159480524998, "compression_ratio": 1.7927927927927927, "no_speech_prob": 1.1125476703455206e-05}, {"id": 48, "seek": 24464, "start": 256.68, "end": 262.96, "text": " row of A transpose and the first column of W and take their inner product or the dot", "tokens": [50364, 407, 341, 6597, 1411, 881, 4478, 510, 13, 50506, 50506, 1436, 341, 307, 264, 700, 5386, 293, 264, 700, 7738, 11760, 281, 264, 1442, 377, 11466, 50707, 50707, 295, 7671, 293, 264, 1442, 377, 11466, 295, 3344, 11, 264, 636, 291, 14722, 300, 307, 281, 4444, 264, 700, 50966, 50966, 5386, 295, 316, 25167, 293, 264, 700, 7738, 295, 343, 293, 747, 641, 7284, 1674, 420, 264, 5893, 51280, 51280, 1674, 13, 51349, 51349, 400, 370, 341, 1230, 307, 516, 281, 312, 2272, 5893, 1674, 365, 805, 11, 1017, 11, 597, 307, 502, 1413, 805, 1804, 568, 1413, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1400159480524998, "compression_ratio": 1.7927927927927927, "no_speech_prob": 1.1125476703455206e-05}, {"id": 49, "seek": 24464, "start": 262.96, "end": 264.34, "text": " product.", "tokens": [50364, 407, 341, 6597, 1411, 881, 4478, 510, 13, 50506, 50506, 1436, 341, 307, 264, 700, 5386, 293, 264, 700, 7738, 11760, 281, 264, 1442, 377, 11466, 50707, 50707, 295, 7671, 293, 264, 1442, 377, 11466, 295, 3344, 11, 264, 636, 291, 14722, 300, 307, 281, 4444, 264, 700, 50966, 50966, 5386, 295, 316, 25167, 293, 264, 700, 7738, 295, 343, 293, 747, 641, 7284, 1674, 420, 264, 5893, 51280, 51280, 1674, 13, 51349, 51349, 400, 370, 341, 1230, 307, 516, 281, 312, 2272, 5893, 1674, 365, 805, 11, 1017, 11, 597, 307, 502, 1413, 805, 1804, 568, 1413, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1400159480524998, "compression_ratio": 1.7927927927927927, "no_speech_prob": 1.1125476703455206e-05}, {"id": 50, "seek": 24464, "start": 264.34, "end": 272.88, "text": " And so this number is going to be 12 dot product with 3, 4, which is 1 times 3 plus 2 times", "tokens": [50364, 407, 341, 6597, 1411, 881, 4478, 510, 13, 50506, 50506, 1436, 341, 307, 264, 700, 5386, 293, 264, 700, 7738, 11760, 281, 264, 1442, 377, 11466, 50707, 50707, 295, 7671, 293, 264, 1442, 377, 11466, 295, 3344, 11, 264, 636, 291, 14722, 300, 307, 281, 4444, 264, 700, 50966, 50966, 5386, 295, 316, 25167, 293, 264, 700, 7738, 295, 343, 293, 747, 641, 7284, 1674, 420, 264, 5893, 51280, 51280, 1674, 13, 51349, 51349, 400, 370, 341, 1230, 307, 516, 281, 312, 2272, 5893, 1674, 365, 805, 11, 1017, 11, 597, 307, 502, 1413, 805, 1804, 568, 1413, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1400159480524998, "compression_ratio": 1.7927927927927927, "no_speech_prob": 1.1125476703455206e-05}, {"id": 51, "seek": 27288, "start": 272.88, "end": 277.0, "text": " 4, which is equal to 11.", "tokens": [50364, 1017, 11, 597, 307, 2681, 281, 2975, 13, 50570, 50570, 961, 311, 574, 412, 257, 1150, 1365, 13, 50662, 50662, 1012, 576, 291, 14722, 341, 1230, 11, 341, 4478, 295, 1176, 30, 50963, 50963, 407, 341, 307, 294, 264, 2636, 5386, 11, 5386, 502, 11, 5386, 568, 11, 5386, 805, 11, 370, 341, 307, 5386, 805, 293, 264, 1150, 7738, 11, 51264, 51264, 7738, 502, 11, 7738, 568, 13, 51353, 51353], "temperature": 0.0, "avg_logprob": -0.14866507543276433, "compression_ratio": 1.476510067114094, "no_speech_prob": 5.255295491224388e-06}, {"id": 52, "seek": 27288, "start": 277.0, "end": 278.84, "text": " Let's look at a second example.", "tokens": [50364, 1017, 11, 597, 307, 2681, 281, 2975, 13, 50570, 50570, 961, 311, 574, 412, 257, 1150, 1365, 13, 50662, 50662, 1012, 576, 291, 14722, 341, 1230, 11, 341, 4478, 295, 1176, 30, 50963, 50963, 407, 341, 307, 294, 264, 2636, 5386, 11, 5386, 502, 11, 5386, 568, 11, 5386, 805, 11, 370, 341, 307, 5386, 805, 293, 264, 1150, 7738, 11, 51264, 51264, 7738, 502, 11, 7738, 568, 13, 51353, 51353], "temperature": 0.0, "avg_logprob": -0.14866507543276433, "compression_ratio": 1.476510067114094, "no_speech_prob": 5.255295491224388e-06}, {"id": 53, "seek": 27288, "start": 278.84, "end": 284.86, "text": " How would you compute this number, this element of Z?", "tokens": [50364, 1017, 11, 597, 307, 2681, 281, 2975, 13, 50570, 50570, 961, 311, 574, 412, 257, 1150, 1365, 13, 50662, 50662, 1012, 576, 291, 14722, 341, 1230, 11, 341, 4478, 295, 1176, 30, 50963, 50963, 407, 341, 307, 294, 264, 2636, 5386, 11, 5386, 502, 11, 5386, 568, 11, 5386, 805, 11, 370, 341, 307, 5386, 805, 293, 264, 1150, 7738, 11, 51264, 51264, 7738, 502, 11, 7738, 568, 13, 51353, 51353], "temperature": 0.0, "avg_logprob": -0.14866507543276433, "compression_ratio": 1.476510067114094, "no_speech_prob": 5.255295491224388e-06}, {"id": 54, "seek": 27288, "start": 284.86, "end": 290.88, "text": " So this is in the third row, row 1, row 2, row 3, so this is row 3 and the second column,", "tokens": [50364, 1017, 11, 597, 307, 2681, 281, 2975, 13, 50570, 50570, 961, 311, 574, 412, 257, 1150, 1365, 13, 50662, 50662, 1012, 576, 291, 14722, 341, 1230, 11, 341, 4478, 295, 1176, 30, 50963, 50963, 407, 341, 307, 294, 264, 2636, 5386, 11, 5386, 502, 11, 5386, 568, 11, 5386, 805, 11, 370, 341, 307, 5386, 805, 293, 264, 1150, 7738, 11, 51264, 51264, 7738, 502, 11, 7738, 568, 13, 51353, 51353], "temperature": 0.0, "avg_logprob": -0.14866507543276433, "compression_ratio": 1.476510067114094, "no_speech_prob": 5.255295491224388e-06}, {"id": 55, "seek": 27288, "start": 290.88, "end": 292.65999999999997, "text": " column 1, column 2.", "tokens": [50364, 1017, 11, 597, 307, 2681, 281, 2975, 13, 50570, 50570, 961, 311, 574, 412, 257, 1150, 1365, 13, 50662, 50662, 1012, 576, 291, 14722, 341, 1230, 11, 341, 4478, 295, 1176, 30, 50963, 50963, 407, 341, 307, 294, 264, 2636, 5386, 11, 5386, 502, 11, 5386, 568, 11, 5386, 805, 11, 370, 341, 307, 5386, 805, 293, 264, 1150, 7738, 11, 51264, 51264, 7738, 502, 11, 7738, 568, 13, 51353, 51353], "temperature": 0.0, "avg_logprob": -0.14866507543276433, "compression_ratio": 1.476510067114094, "no_speech_prob": 5.255295491224388e-06}, {"id": 56, "seek": 29266, "start": 292.66, "end": 303.26000000000005, "text": " So to compute the number in row 3, column 2 of Z, you would now grab row 3 of A transpose", "tokens": [50364, 407, 281, 14722, 264, 1230, 294, 5386, 805, 11, 7738, 568, 295, 1176, 11, 291, 576, 586, 4444, 5386, 805, 295, 316, 25167, 50894, 50894, 293, 7738, 568, 295, 343, 293, 5893, 1674, 729, 1214, 13, 51119, 51119, 13428, 300, 341, 23249, 281, 264, 33460, 11466, 295, 7671, 293, 264, 1150, 1442, 377, 11466, 51368, 51368, 295, 3344, 13, 51441, 51441], "temperature": 0.0, "avg_logprob": -0.11248404639107841, "compression_ratio": 1.4968553459119496, "no_speech_prob": 1.7880369114209316e-06}, {"id": 57, "seek": 29266, "start": 303.26000000000005, "end": 307.76000000000005, "text": " and column 2 of W and dot product those together.", "tokens": [50364, 407, 281, 14722, 264, 1230, 294, 5386, 805, 11, 7738, 568, 295, 1176, 11, 291, 576, 586, 4444, 5386, 805, 295, 316, 25167, 50894, 50894, 293, 7738, 568, 295, 343, 293, 5893, 1674, 729, 1214, 13, 51119, 51119, 13428, 300, 341, 23249, 281, 264, 33460, 11466, 295, 7671, 293, 264, 1150, 1442, 377, 11466, 51368, 51368, 295, 3344, 13, 51441, 51441], "temperature": 0.0, "avg_logprob": -0.11248404639107841, "compression_ratio": 1.4968553459119496, "no_speech_prob": 1.7880369114209316e-06}, {"id": 58, "seek": 29266, "start": 307.76000000000005, "end": 312.74, "text": " Notice that this corresponds to the darkest shade of orange and the second lightest shade", "tokens": [50364, 407, 281, 14722, 264, 1230, 294, 5386, 805, 11, 7738, 568, 295, 1176, 11, 291, 576, 586, 4444, 5386, 805, 295, 316, 25167, 50894, 50894, 293, 7738, 568, 295, 343, 293, 5893, 1674, 729, 1214, 13, 51119, 51119, 13428, 300, 341, 23249, 281, 264, 33460, 11466, 295, 7671, 293, 264, 1150, 1442, 377, 11466, 51368, 51368, 295, 3344, 13, 51441, 51441], "temperature": 0.0, "avg_logprob": -0.11248404639107841, "compression_ratio": 1.4968553459119496, "no_speech_prob": 1.7880369114209316e-06}, {"id": 59, "seek": 29266, "start": 312.74, "end": 314.20000000000005, "text": " of blue.", "tokens": [50364, 407, 281, 14722, 264, 1230, 294, 5386, 805, 11, 7738, 568, 295, 1176, 11, 291, 576, 586, 4444, 5386, 805, 295, 316, 25167, 50894, 50894, 293, 7738, 568, 295, 343, 293, 5893, 1674, 729, 1214, 13, 51119, 51119, 13428, 300, 341, 23249, 281, 264, 33460, 11466, 295, 7671, 293, 264, 1150, 1442, 377, 11466, 51368, 51368, 295, 3344, 13, 51441, 51441], "temperature": 0.0, "avg_logprob": -0.11248404639107841, "compression_ratio": 1.4968553459119496, "no_speech_prob": 1.7880369114209316e-06}, {"id": 60, "seek": 31420, "start": 314.2, "end": 324.84, "text": " And to compute this, this is 0.1 times 5 plus 0.2 times 6, which is 0.5 plus 1.2, which", "tokens": [50364, 400, 281, 14722, 341, 11, 341, 307, 1958, 13, 16, 1413, 1025, 1804, 1958, 13, 17, 1413, 1386, 11, 597, 307, 1958, 13, 20, 1804, 502, 13, 17, 11, 597, 50896, 50896, 307, 2681, 281, 502, 13, 22, 13, 51022, 51022, 407, 281, 14722, 264, 1230, 294, 5386, 805, 11, 7738, 568, 295, 1176, 11, 291, 4444, 264, 2636, 5386, 11, 5386, 805, 295, 316, 51312, 51312, 25167, 293, 7738, 568, 295, 343, 13, 51500, 51500, 961, 311, 574, 412, 472, 544, 1365, 293, 718, 311, 536, 498, 291, 393, 2573, 341, 472, 484, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.06253942335494841, "compression_ratio": 1.586021505376344, "no_speech_prob": 2.769364527921425e-06}, {"id": 61, "seek": 31420, "start": 324.84, "end": 327.36, "text": " is equal to 1.7.", "tokens": [50364, 400, 281, 14722, 341, 11, 341, 307, 1958, 13, 16, 1413, 1025, 1804, 1958, 13, 17, 1413, 1386, 11, 597, 307, 1958, 13, 20, 1804, 502, 13, 17, 11, 597, 50896, 50896, 307, 2681, 281, 502, 13, 22, 13, 51022, 51022, 407, 281, 14722, 264, 1230, 294, 5386, 805, 11, 7738, 568, 295, 1176, 11, 291, 4444, 264, 2636, 5386, 11, 5386, 805, 295, 316, 51312, 51312, 25167, 293, 7738, 568, 295, 343, 13, 51500, 51500, 961, 311, 574, 412, 472, 544, 1365, 293, 718, 311, 536, 498, 291, 393, 2573, 341, 472, 484, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.06253942335494841, "compression_ratio": 1.586021505376344, "no_speech_prob": 2.769364527921425e-06}, {"id": 62, "seek": 31420, "start": 327.36, "end": 333.15999999999997, "text": " So to compute the number in row 3, column 2 of Z, you grab the third row, row 3 of A", "tokens": [50364, 400, 281, 14722, 341, 11, 341, 307, 1958, 13, 16, 1413, 1025, 1804, 1958, 13, 17, 1413, 1386, 11, 597, 307, 1958, 13, 20, 1804, 502, 13, 17, 11, 597, 50896, 50896, 307, 2681, 281, 502, 13, 22, 13, 51022, 51022, 407, 281, 14722, 264, 1230, 294, 5386, 805, 11, 7738, 568, 295, 1176, 11, 291, 4444, 264, 2636, 5386, 11, 5386, 805, 295, 316, 51312, 51312, 25167, 293, 7738, 568, 295, 343, 13, 51500, 51500, 961, 311, 574, 412, 472, 544, 1365, 293, 718, 311, 536, 498, 291, 393, 2573, 341, 472, 484, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.06253942335494841, "compression_ratio": 1.586021505376344, "no_speech_prob": 2.769364527921425e-06}, {"id": 63, "seek": 31420, "start": 333.15999999999997, "end": 336.91999999999996, "text": " transpose and column 2 of W.", "tokens": [50364, 400, 281, 14722, 341, 11, 341, 307, 1958, 13, 16, 1413, 1025, 1804, 1958, 13, 17, 1413, 1386, 11, 597, 307, 1958, 13, 20, 1804, 502, 13, 17, 11, 597, 50896, 50896, 307, 2681, 281, 502, 13, 22, 13, 51022, 51022, 407, 281, 14722, 264, 1230, 294, 5386, 805, 11, 7738, 568, 295, 1176, 11, 291, 4444, 264, 2636, 5386, 11, 5386, 805, 295, 316, 51312, 51312, 25167, 293, 7738, 568, 295, 343, 13, 51500, 51500, 961, 311, 574, 412, 472, 544, 1365, 293, 718, 311, 536, 498, 291, 393, 2573, 341, 472, 484, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.06253942335494841, "compression_ratio": 1.586021505376344, "no_speech_prob": 2.769364527921425e-06}, {"id": 64, "seek": 31420, "start": 336.91999999999996, "end": 342.44, "text": " Let's look at one more example and let's see if you can figure this one out.", "tokens": [50364, 400, 281, 14722, 341, 11, 341, 307, 1958, 13, 16, 1413, 1025, 1804, 1958, 13, 17, 1413, 1386, 11, 597, 307, 1958, 13, 20, 1804, 502, 13, 17, 11, 597, 50896, 50896, 307, 2681, 281, 502, 13, 22, 13, 51022, 51022, 407, 281, 14722, 264, 1230, 294, 5386, 805, 11, 7738, 568, 295, 1176, 11, 291, 4444, 264, 2636, 5386, 11, 5386, 805, 295, 316, 51312, 51312, 25167, 293, 7738, 568, 295, 343, 13, 51500, 51500, 961, 311, 574, 412, 472, 544, 1365, 293, 718, 311, 536, 498, 291, 393, 2573, 341, 472, 484, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.06253942335494841, "compression_ratio": 1.586021505376344, "no_speech_prob": 2.769364527921425e-06}, {"id": 65, "seek": 34244, "start": 342.44, "end": 348.04, "text": " This is row 2, column 3 of the matrix Z.", "tokens": [50364, 639, 307, 5386, 568, 11, 7738, 805, 295, 264, 8141, 1176, 13, 50644, 50644, 1545, 500, 380, 291, 747, 257, 574, 293, 536, 498, 291, 393, 2573, 484, 597, 5386, 293, 597, 7738, 281, 4444, 50964, 50964, 281, 5893, 1674, 1214, 293, 4412, 437, 307, 264, 1230, 300, 486, 352, 294, 341, 4478, 51270, 51270, 295, 341, 8141, 13, 51364, 51364, 10429, 291, 658, 300, 291, 820, 312, 23771, 5386, 568, 295, 316, 25167, 293, 7738, 805, 295, 343, 293, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.12789142699468703, "compression_ratio": 1.5631067961165048, "no_speech_prob": 7.411115802824497e-06}, {"id": 66, "seek": 34244, "start": 348.04, "end": 354.44, "text": " Why don't you take a look and see if you can figure out which row and which column to grab", "tokens": [50364, 639, 307, 5386, 568, 11, 7738, 805, 295, 264, 8141, 1176, 13, 50644, 50644, 1545, 500, 380, 291, 747, 257, 574, 293, 536, 498, 291, 393, 2573, 484, 597, 5386, 293, 597, 7738, 281, 4444, 50964, 50964, 281, 5893, 1674, 1214, 293, 4412, 437, 307, 264, 1230, 300, 486, 352, 294, 341, 4478, 51270, 51270, 295, 341, 8141, 13, 51364, 51364, 10429, 291, 658, 300, 291, 820, 312, 23771, 5386, 568, 295, 316, 25167, 293, 7738, 805, 295, 343, 293, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.12789142699468703, "compression_ratio": 1.5631067961165048, "no_speech_prob": 7.411115802824497e-06}, {"id": 67, "seek": 34244, "start": 354.44, "end": 360.56, "text": " to dot product together and therefore what is the number that will go in this element", "tokens": [50364, 639, 307, 5386, 568, 11, 7738, 805, 295, 264, 8141, 1176, 13, 50644, 50644, 1545, 500, 380, 291, 747, 257, 574, 293, 536, 498, 291, 393, 2573, 484, 597, 5386, 293, 597, 7738, 281, 4444, 50964, 50964, 281, 5893, 1674, 1214, 293, 4412, 437, 307, 264, 1230, 300, 486, 352, 294, 341, 4478, 51270, 51270, 295, 341, 8141, 13, 51364, 51364, 10429, 291, 658, 300, 291, 820, 312, 23771, 5386, 568, 295, 316, 25167, 293, 7738, 805, 295, 343, 293, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.12789142699468703, "compression_ratio": 1.5631067961165048, "no_speech_prob": 7.411115802824497e-06}, {"id": 68, "seek": 34244, "start": 360.56, "end": 362.44, "text": " of this matrix.", "tokens": [50364, 639, 307, 5386, 568, 11, 7738, 805, 295, 264, 8141, 1176, 13, 50644, 50644, 1545, 500, 380, 291, 747, 257, 574, 293, 536, 498, 291, 393, 2573, 484, 597, 5386, 293, 597, 7738, 281, 4444, 50964, 50964, 281, 5893, 1674, 1214, 293, 4412, 437, 307, 264, 1230, 300, 486, 352, 294, 341, 4478, 51270, 51270, 295, 341, 8141, 13, 51364, 51364, 10429, 291, 658, 300, 291, 820, 312, 23771, 5386, 568, 295, 316, 25167, 293, 7738, 805, 295, 343, 293, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.12789142699468703, "compression_ratio": 1.5631067961165048, "no_speech_prob": 7.411115802824497e-06}, {"id": 69, "seek": 34244, "start": 362.44, "end": 370.4, "text": " Hopefully you got that you should be grabbing row 2 of A transpose and column 3 of W and", "tokens": [50364, 639, 307, 5386, 568, 11, 7738, 805, 295, 264, 8141, 1176, 13, 50644, 50644, 1545, 500, 380, 291, 747, 257, 574, 293, 536, 498, 291, 393, 2573, 484, 597, 5386, 293, 597, 7738, 281, 4444, 50964, 50964, 281, 5893, 1674, 1214, 293, 4412, 437, 307, 264, 1230, 300, 486, 352, 294, 341, 4478, 51270, 51270, 295, 341, 8141, 13, 51364, 51364, 10429, 291, 658, 300, 291, 820, 312, 23771, 5386, 568, 295, 316, 25167, 293, 7738, 805, 295, 343, 293, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.12789142699468703, "compression_ratio": 1.5631067961165048, "no_speech_prob": 7.411115802824497e-06}, {"id": 70, "seek": 37040, "start": 370.4, "end": 377.64, "text": " when you dot product that together, you have A2 transpose W3 is negative 1 times 7 plus", "tokens": [50364, 562, 291, 5893, 1674, 300, 1214, 11, 291, 362, 316, 17, 25167, 343, 18, 307, 3671, 502, 1413, 1614, 1804, 50726, 50726, 3671, 568, 1413, 1649, 11, 597, 307, 3671, 1614, 1804, 3671, 3165, 11, 597, 307, 2681, 281, 3671, 6673, 13, 51079, 51079, 400, 370, 300, 311, 577, 291, 14722, 341, 4478, 295, 264, 8141, 1176, 13, 51274, 51274, 400, 309, 4523, 484, 498, 291, 360, 341, 337, 633, 4478, 295, 264, 8141, 1176, 11, 550, 291, 393, 14722, 51534, 51534, 439, 295, 264, 3547, 294, 341, 8141, 11, 597, 4523, 484, 281, 574, 411, 300, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11210772570441752, "compression_ratio": 1.8497652582159625, "no_speech_prob": 3.66882341040764e-06}, {"id": 71, "seek": 37040, "start": 377.64, "end": 384.7, "text": " negative 2 times 8, which is negative 7 plus negative 16, which is equal to negative 23.", "tokens": [50364, 562, 291, 5893, 1674, 300, 1214, 11, 291, 362, 316, 17, 25167, 343, 18, 307, 3671, 502, 1413, 1614, 1804, 50726, 50726, 3671, 568, 1413, 1649, 11, 597, 307, 3671, 1614, 1804, 3671, 3165, 11, 597, 307, 2681, 281, 3671, 6673, 13, 51079, 51079, 400, 370, 300, 311, 577, 291, 14722, 341, 4478, 295, 264, 8141, 1176, 13, 51274, 51274, 400, 309, 4523, 484, 498, 291, 360, 341, 337, 633, 4478, 295, 264, 8141, 1176, 11, 550, 291, 393, 14722, 51534, 51534, 439, 295, 264, 3547, 294, 341, 8141, 11, 597, 4523, 484, 281, 574, 411, 300, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11210772570441752, "compression_ratio": 1.8497652582159625, "no_speech_prob": 3.66882341040764e-06}, {"id": 72, "seek": 37040, "start": 384.7, "end": 388.59999999999997, "text": " And so that's how you compute this element of the matrix Z.", "tokens": [50364, 562, 291, 5893, 1674, 300, 1214, 11, 291, 362, 316, 17, 25167, 343, 18, 307, 3671, 502, 1413, 1614, 1804, 50726, 50726, 3671, 568, 1413, 1649, 11, 597, 307, 3671, 1614, 1804, 3671, 3165, 11, 597, 307, 2681, 281, 3671, 6673, 13, 51079, 51079, 400, 370, 300, 311, 577, 291, 14722, 341, 4478, 295, 264, 8141, 1176, 13, 51274, 51274, 400, 309, 4523, 484, 498, 291, 360, 341, 337, 633, 4478, 295, 264, 8141, 1176, 11, 550, 291, 393, 14722, 51534, 51534, 439, 295, 264, 3547, 294, 341, 8141, 11, 597, 4523, 484, 281, 574, 411, 300, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11210772570441752, "compression_ratio": 1.8497652582159625, "no_speech_prob": 3.66882341040764e-06}, {"id": 73, "seek": 37040, "start": 388.59999999999997, "end": 393.79999999999995, "text": " And it turns out if you do this for every element of the matrix Z, then you can compute", "tokens": [50364, 562, 291, 5893, 1674, 300, 1214, 11, 291, 362, 316, 17, 25167, 343, 18, 307, 3671, 502, 1413, 1614, 1804, 50726, 50726, 3671, 568, 1413, 1649, 11, 597, 307, 3671, 1614, 1804, 3671, 3165, 11, 597, 307, 2681, 281, 3671, 6673, 13, 51079, 51079, 400, 370, 300, 311, 577, 291, 14722, 341, 4478, 295, 264, 8141, 1176, 13, 51274, 51274, 400, 309, 4523, 484, 498, 291, 360, 341, 337, 633, 4478, 295, 264, 8141, 1176, 11, 550, 291, 393, 14722, 51534, 51534, 439, 295, 264, 3547, 294, 341, 8141, 11, 597, 4523, 484, 281, 574, 411, 300, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11210772570441752, "compression_ratio": 1.8497652582159625, "no_speech_prob": 3.66882341040764e-06}, {"id": 74, "seek": 37040, "start": 393.79999999999995, "end": 399.0, "text": " all of the numbers in this matrix, which turns out to look like that.", "tokens": [50364, 562, 291, 5893, 1674, 300, 1214, 11, 291, 362, 316, 17, 25167, 343, 18, 307, 3671, 502, 1413, 1614, 1804, 50726, 50726, 3671, 568, 1413, 1649, 11, 597, 307, 3671, 1614, 1804, 3671, 3165, 11, 597, 307, 2681, 281, 3671, 6673, 13, 51079, 51079, 400, 370, 300, 311, 577, 291, 14722, 341, 4478, 295, 264, 8141, 1176, 13, 51274, 51274, 400, 309, 4523, 484, 498, 291, 360, 341, 337, 633, 4478, 295, 264, 8141, 1176, 11, 550, 291, 393, 14722, 51534, 51534, 439, 295, 264, 3547, 294, 341, 8141, 11, 597, 4523, 484, 281, 574, 411, 300, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11210772570441752, "compression_ratio": 1.8497652582159625, "no_speech_prob": 3.66882341040764e-06}, {"id": 75, "seek": 39900, "start": 399.0, "end": 403.0, "text": " Feel free to pause the video if you want and pick any element and double check that the", "tokens": [50364, 14113, 1737, 281, 10465, 264, 960, 498, 291, 528, 293, 1888, 604, 4478, 293, 3834, 1520, 300, 264, 50564, 50564, 8513, 321, 600, 668, 516, 807, 2709, 291, 264, 558, 2158, 337, 1176, 13, 50850, 50850, 286, 445, 528, 281, 935, 484, 472, 1036, 1880, 11695, 337, 30955, 32284, 1214, 11, 51252, 51252, 597, 307, 300, 1783, 25167, 510, 307, 257, 805, 538, 568, 8141, 570, 309, 575, 805, 13241, 293, 568, 13766, 51601, 51601], "temperature": 0.0, "avg_logprob": -0.12254743452195997, "compression_ratio": 1.5299539170506913, "no_speech_prob": 5.7718057178135496e-06}, {"id": 76, "seek": 39900, "start": 403.0, "end": 408.72, "text": " formula we've been going through gives you the right value for Z.", "tokens": [50364, 14113, 1737, 281, 10465, 264, 960, 498, 291, 528, 293, 1888, 604, 4478, 293, 3834, 1520, 300, 264, 50564, 50564, 8513, 321, 600, 668, 516, 807, 2709, 291, 264, 558, 2158, 337, 1176, 13, 50850, 50850, 286, 445, 528, 281, 935, 484, 472, 1036, 1880, 11695, 337, 30955, 32284, 1214, 11, 51252, 51252, 597, 307, 300, 1783, 25167, 510, 307, 257, 805, 538, 568, 8141, 570, 309, 575, 805, 13241, 293, 568, 13766, 51601, 51601], "temperature": 0.0, "avg_logprob": -0.12254743452195997, "compression_ratio": 1.5299539170506913, "no_speech_prob": 5.7718057178135496e-06}, {"id": 77, "seek": 39900, "start": 408.72, "end": 416.76, "text": " I just want to point out one last interesting requirement for multiplying matrices together,", "tokens": [50364, 14113, 1737, 281, 10465, 264, 960, 498, 291, 528, 293, 1888, 604, 4478, 293, 3834, 1520, 300, 264, 50564, 50564, 8513, 321, 600, 668, 516, 807, 2709, 291, 264, 558, 2158, 337, 1176, 13, 50850, 50850, 286, 445, 528, 281, 935, 484, 472, 1036, 1880, 11695, 337, 30955, 32284, 1214, 11, 51252, 51252, 597, 307, 300, 1783, 25167, 510, 307, 257, 805, 538, 568, 8141, 570, 309, 575, 805, 13241, 293, 568, 13766, 51601, 51601], "temperature": 0.0, "avg_logprob": -0.12254743452195997, "compression_ratio": 1.5299539170506913, "no_speech_prob": 5.7718057178135496e-06}, {"id": 78, "seek": 39900, "start": 416.76, "end": 423.74, "text": " which is that X transpose here is a 3 by 2 matrix because it has 3 rows and 2 columns", "tokens": [50364, 14113, 1737, 281, 10465, 264, 960, 498, 291, 528, 293, 1888, 604, 4478, 293, 3834, 1520, 300, 264, 50564, 50564, 8513, 321, 600, 668, 516, 807, 2709, 291, 264, 558, 2158, 337, 1176, 13, 50850, 50850, 286, 445, 528, 281, 935, 484, 472, 1036, 1880, 11695, 337, 30955, 32284, 1214, 11, 51252, 51252, 597, 307, 300, 1783, 25167, 510, 307, 257, 805, 538, 568, 8141, 570, 309, 575, 805, 13241, 293, 568, 13766, 51601, 51601], "temperature": 0.0, "avg_logprob": -0.12254743452195997, "compression_ratio": 1.5299539170506913, "no_speech_prob": 5.7718057178135496e-06}, {"id": 79, "seek": 42374, "start": 423.74, "end": 430.32, "text": " and W here is a 2 by 4 matrix because it has 2 rows and 4 columns.", "tokens": [50364, 293, 343, 510, 307, 257, 568, 538, 1017, 8141, 570, 309, 575, 568, 13241, 293, 1017, 13766, 13, 50693, 50693, 1485, 11695, 294, 1668, 281, 12972, 568, 32284, 1214, 307, 300, 341, 1230, 1633, 2995, 300, 51049, 51049, 1230, 293, 300, 311, 570, 291, 393, 787, 747, 5893, 3383, 1296, 18875, 300, 366, 264, 51375, 51375, 912, 4641, 13, 51425, 51425, 407, 291, 393, 747, 264, 5893, 1674, 1296, 257, 8062, 365, 568, 3547, 293, 300, 311, 570, 291, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.09077569662806499, "compression_ratio": 1.725, "no_speech_prob": 7.337910119531443e-07}, {"id": 80, "seek": 42374, "start": 430.32, "end": 437.44, "text": " One requirement in order to multiply 2 matrices together is that this number must match that", "tokens": [50364, 293, 343, 510, 307, 257, 568, 538, 1017, 8141, 570, 309, 575, 568, 13241, 293, 1017, 13766, 13, 50693, 50693, 1485, 11695, 294, 1668, 281, 12972, 568, 32284, 1214, 307, 300, 341, 1230, 1633, 2995, 300, 51049, 51049, 1230, 293, 300, 311, 570, 291, 393, 787, 747, 5893, 3383, 1296, 18875, 300, 366, 264, 51375, 51375, 912, 4641, 13, 51425, 51425, 407, 291, 393, 747, 264, 5893, 1674, 1296, 257, 8062, 365, 568, 3547, 293, 300, 311, 570, 291, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.09077569662806499, "compression_ratio": 1.725, "no_speech_prob": 7.337910119531443e-07}, {"id": 81, "seek": 42374, "start": 437.44, "end": 443.96000000000004, "text": " number and that's because you can only take dot products between vectors that are the", "tokens": [50364, 293, 343, 510, 307, 257, 568, 538, 1017, 8141, 570, 309, 575, 568, 13241, 293, 1017, 13766, 13, 50693, 50693, 1485, 11695, 294, 1668, 281, 12972, 568, 32284, 1214, 307, 300, 341, 1230, 1633, 2995, 300, 51049, 51049, 1230, 293, 300, 311, 570, 291, 393, 787, 747, 5893, 3383, 1296, 18875, 300, 366, 264, 51375, 51375, 912, 4641, 13, 51425, 51425, 407, 291, 393, 747, 264, 5893, 1674, 1296, 257, 8062, 365, 568, 3547, 293, 300, 311, 570, 291, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.09077569662806499, "compression_ratio": 1.725, "no_speech_prob": 7.337910119531443e-07}, {"id": 82, "seek": 42374, "start": 443.96000000000004, "end": 444.96000000000004, "text": " same length.", "tokens": [50364, 293, 343, 510, 307, 257, 568, 538, 1017, 8141, 570, 309, 575, 568, 13241, 293, 1017, 13766, 13, 50693, 50693, 1485, 11695, 294, 1668, 281, 12972, 568, 32284, 1214, 307, 300, 341, 1230, 1633, 2995, 300, 51049, 51049, 1230, 293, 300, 311, 570, 291, 393, 787, 747, 5893, 3383, 1296, 18875, 300, 366, 264, 51375, 51375, 912, 4641, 13, 51425, 51425, 407, 291, 393, 747, 264, 5893, 1674, 1296, 257, 8062, 365, 568, 3547, 293, 300, 311, 570, 291, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.09077569662806499, "compression_ratio": 1.725, "no_speech_prob": 7.337910119531443e-07}, {"id": 83, "seek": 42374, "start": 444.96000000000004, "end": 450.98, "text": " So you can take the dot product between a vector with 2 numbers and that's because you", "tokens": [50364, 293, 343, 510, 307, 257, 568, 538, 1017, 8141, 570, 309, 575, 568, 13241, 293, 1017, 13766, 13, 50693, 50693, 1485, 11695, 294, 1668, 281, 12972, 568, 32284, 1214, 307, 300, 341, 1230, 1633, 2995, 300, 51049, 51049, 1230, 293, 300, 311, 570, 291, 393, 787, 747, 5893, 3383, 1296, 18875, 300, 366, 264, 51375, 51375, 912, 4641, 13, 51425, 51425, 407, 291, 393, 747, 264, 5893, 1674, 1296, 257, 8062, 365, 568, 3547, 293, 300, 311, 570, 291, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.09077569662806499, "compression_ratio": 1.725, "no_speech_prob": 7.337910119531443e-07}, {"id": 84, "seek": 45098, "start": 450.98, "end": 456.8, "text": " can take the inner product between a vector of length 2 only with another vector of length", "tokens": [50364, 393, 747, 264, 7284, 1674, 1296, 257, 8062, 295, 4641, 568, 787, 365, 1071, 8062, 295, 4641, 50655, 50655, 568, 13, 50705, 50705, 509, 393, 380, 747, 264, 7284, 1674, 1296, 257, 8062, 295, 4641, 568, 365, 257, 8062, 295, 4641, 50901, 50901, 805, 11, 337, 1365, 13, 51001, 51001, 400, 300, 311, 983, 8141, 27290, 307, 7363, 787, 498, 264, 1230, 295, 13766, 295, 264, 700, 51315, 51315, 8141, 11, 300, 307, 316, 25167, 510, 11, 307, 2681, 281, 264, 1230, 295, 13241, 295, 264, 1150, 8141, 11, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.11401942468458606, "compression_ratio": 1.9322916666666667, "no_speech_prob": 4.495092525758082e-06}, {"id": 85, "seek": 45098, "start": 456.8, "end": 457.8, "text": " 2.", "tokens": [50364, 393, 747, 264, 7284, 1674, 1296, 257, 8062, 295, 4641, 568, 787, 365, 1071, 8062, 295, 4641, 50655, 50655, 568, 13, 50705, 50705, 509, 393, 380, 747, 264, 7284, 1674, 1296, 257, 8062, 295, 4641, 568, 365, 257, 8062, 295, 4641, 50901, 50901, 805, 11, 337, 1365, 13, 51001, 51001, 400, 300, 311, 983, 8141, 27290, 307, 7363, 787, 498, 264, 1230, 295, 13766, 295, 264, 700, 51315, 51315, 8141, 11, 300, 307, 316, 25167, 510, 11, 307, 2681, 281, 264, 1230, 295, 13241, 295, 264, 1150, 8141, 11, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.11401942468458606, "compression_ratio": 1.9322916666666667, "no_speech_prob": 4.495092525758082e-06}, {"id": 86, "seek": 45098, "start": 457.8, "end": 461.72, "text": " You can't take the inner product between a vector of length 2 with a vector of length", "tokens": [50364, 393, 747, 264, 7284, 1674, 1296, 257, 8062, 295, 4641, 568, 787, 365, 1071, 8062, 295, 4641, 50655, 50655, 568, 13, 50705, 50705, 509, 393, 380, 747, 264, 7284, 1674, 1296, 257, 8062, 295, 4641, 568, 365, 257, 8062, 295, 4641, 50901, 50901, 805, 11, 337, 1365, 13, 51001, 51001, 400, 300, 311, 983, 8141, 27290, 307, 7363, 787, 498, 264, 1230, 295, 13766, 295, 264, 700, 51315, 51315, 8141, 11, 300, 307, 316, 25167, 510, 11, 307, 2681, 281, 264, 1230, 295, 13241, 295, 264, 1150, 8141, 11, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.11401942468458606, "compression_ratio": 1.9322916666666667, "no_speech_prob": 4.495092525758082e-06}, {"id": 87, "seek": 45098, "start": 461.72, "end": 463.72, "text": " 3, for example.", "tokens": [50364, 393, 747, 264, 7284, 1674, 1296, 257, 8062, 295, 4641, 568, 787, 365, 1071, 8062, 295, 4641, 50655, 50655, 568, 13, 50705, 50705, 509, 393, 380, 747, 264, 7284, 1674, 1296, 257, 8062, 295, 4641, 568, 365, 257, 8062, 295, 4641, 50901, 50901, 805, 11, 337, 1365, 13, 51001, 51001, 400, 300, 311, 983, 8141, 27290, 307, 7363, 787, 498, 264, 1230, 295, 13766, 295, 264, 700, 51315, 51315, 8141, 11, 300, 307, 316, 25167, 510, 11, 307, 2681, 281, 264, 1230, 295, 13241, 295, 264, 1150, 8141, 11, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.11401942468458606, "compression_ratio": 1.9322916666666667, "no_speech_prob": 4.495092525758082e-06}, {"id": 88, "seek": 45098, "start": 463.72, "end": 470.0, "text": " And that's why matrix multiplication is valid only if the number of columns of the first", "tokens": [50364, 393, 747, 264, 7284, 1674, 1296, 257, 8062, 295, 4641, 568, 787, 365, 1071, 8062, 295, 4641, 50655, 50655, 568, 13, 50705, 50705, 509, 393, 380, 747, 264, 7284, 1674, 1296, 257, 8062, 295, 4641, 568, 365, 257, 8062, 295, 4641, 50901, 50901, 805, 11, 337, 1365, 13, 51001, 51001, 400, 300, 311, 983, 8141, 27290, 307, 7363, 787, 498, 264, 1230, 295, 13766, 295, 264, 700, 51315, 51315, 8141, 11, 300, 307, 316, 25167, 510, 11, 307, 2681, 281, 264, 1230, 295, 13241, 295, 264, 1150, 8141, 11, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.11401942468458606, "compression_ratio": 1.9322916666666667, "no_speech_prob": 4.495092525758082e-06}, {"id": 89, "seek": 45098, "start": 470.0, "end": 476.32, "text": " matrix, that is A transpose here, is equal to the number of rows of the second matrix,", "tokens": [50364, 393, 747, 264, 7284, 1674, 1296, 257, 8062, 295, 4641, 568, 787, 365, 1071, 8062, 295, 4641, 50655, 50655, 568, 13, 50705, 50705, 509, 393, 380, 747, 264, 7284, 1674, 1296, 257, 8062, 295, 4641, 568, 365, 257, 8062, 295, 4641, 50901, 50901, 805, 11, 337, 1365, 13, 51001, 51001, 400, 300, 311, 983, 8141, 27290, 307, 7363, 787, 498, 264, 1230, 295, 13766, 295, 264, 700, 51315, 51315, 8141, 11, 300, 307, 316, 25167, 510, 11, 307, 2681, 281, 264, 1230, 295, 13241, 295, 264, 1150, 8141, 11, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.11401942468458606, "compression_ratio": 1.9322916666666667, "no_speech_prob": 4.495092525758082e-06}, {"id": 90, "seek": 47632, "start": 476.32, "end": 482.64, "text": " minus the number of rows of W here, so that when you take dot products during this process,", "tokens": [50364, 3175, 264, 1230, 295, 13241, 295, 343, 510, 11, 370, 300, 562, 291, 747, 5893, 3383, 1830, 341, 1399, 11, 50680, 50680, 291, 434, 1940, 5893, 3383, 295, 18875, 295, 264, 912, 2744, 13, 50910, 50910, 400, 550, 264, 661, 14816, 307, 300, 264, 5598, 1176, 6915, 316, 25167, 343, 11, 264, 12819, 51302, 51302, 295, 1176, 307, 805, 538, 1017, 11, 293, 370, 264, 5598, 295, 341, 27290, 486, 362, 264, 912, 1230, 295, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.11616871024988874, "compression_ratio": 1.6019900497512438, "no_speech_prob": 2.443958464937168e-06}, {"id": 91, "seek": 47632, "start": 482.64, "end": 487.24, "text": " you're taking dot products of vectors of the same size.", "tokens": [50364, 3175, 264, 1230, 295, 13241, 295, 343, 510, 11, 370, 300, 562, 291, 747, 5893, 3383, 1830, 341, 1399, 11, 50680, 50680, 291, 434, 1940, 5893, 3383, 295, 18875, 295, 264, 912, 2744, 13, 50910, 50910, 400, 550, 264, 661, 14816, 307, 300, 264, 5598, 1176, 6915, 316, 25167, 343, 11, 264, 12819, 51302, 51302, 295, 1176, 307, 805, 538, 1017, 11, 293, 370, 264, 5598, 295, 341, 27290, 486, 362, 264, 912, 1230, 295, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.11616871024988874, "compression_ratio": 1.6019900497512438, "no_speech_prob": 2.443958464937168e-06}, {"id": 92, "seek": 47632, "start": 487.24, "end": 495.08, "text": " And then the other observation is that the output Z equals A transpose W, the dimensions", "tokens": [50364, 3175, 264, 1230, 295, 13241, 295, 343, 510, 11, 370, 300, 562, 291, 747, 5893, 3383, 1830, 341, 1399, 11, 50680, 50680, 291, 434, 1940, 5893, 3383, 295, 18875, 295, 264, 912, 2744, 13, 50910, 50910, 400, 550, 264, 661, 14816, 307, 300, 264, 5598, 1176, 6915, 316, 25167, 343, 11, 264, 12819, 51302, 51302, 295, 1176, 307, 805, 538, 1017, 11, 293, 370, 264, 5598, 295, 341, 27290, 486, 362, 264, 912, 1230, 295, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.11616871024988874, "compression_ratio": 1.6019900497512438, "no_speech_prob": 2.443958464937168e-06}, {"id": 93, "seek": 47632, "start": 495.08, "end": 502.52, "text": " of Z is 3 by 4, and so the output of this multiplication will have the same number of", "tokens": [50364, 3175, 264, 1230, 295, 13241, 295, 343, 510, 11, 370, 300, 562, 291, 747, 5893, 3383, 1830, 341, 1399, 11, 50680, 50680, 291, 434, 1940, 5893, 3383, 295, 18875, 295, 264, 912, 2744, 13, 50910, 50910, 400, 550, 264, 661, 14816, 307, 300, 264, 5598, 1176, 6915, 316, 25167, 343, 11, 264, 12819, 51302, 51302, 295, 1176, 307, 805, 538, 1017, 11, 293, 370, 264, 5598, 295, 341, 27290, 486, 362, 264, 912, 1230, 295, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.11616871024988874, "compression_ratio": 1.6019900497512438, "no_speech_prob": 2.443958464937168e-06}, {"id": 94, "seek": 50252, "start": 502.52, "end": 510.44, "text": " rows as X transpose and the same number of columns as W. And so that too is another property", "tokens": [50364, 13241, 382, 1783, 25167, 293, 264, 912, 1230, 295, 13766, 382, 343, 13, 400, 370, 300, 886, 307, 1071, 4707, 50760, 50760, 295, 8141, 27290, 13, 50914, 50914, 407, 300, 311, 8141, 27290, 13, 51058, 51058, 1057, 613, 2145, 366, 17312, 11, 370, 1309, 291, 337, 13465, 365, 385, 807, 613, 13, 51284, 51284, 400, 498, 291, 434, 3102, 11, 1780, 294, 341, 1243, 11, 456, 366, 611, 512, 17491, 17312, 48955, 51540, 51540, 281, 718, 291, 3124, 512, 544, 295, 613, 20448, 1803, 382, 731, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13948737133990277, "compression_ratio": 1.6567796610169492, "no_speech_prob": 5.594227332039736e-06}, {"id": 95, "seek": 50252, "start": 510.44, "end": 513.52, "text": " of matrix multiplication.", "tokens": [50364, 13241, 382, 1783, 25167, 293, 264, 912, 1230, 295, 13766, 382, 343, 13, 400, 370, 300, 886, 307, 1071, 4707, 50760, 50760, 295, 8141, 27290, 13, 50914, 50914, 407, 300, 311, 8141, 27290, 13, 51058, 51058, 1057, 613, 2145, 366, 17312, 11, 370, 1309, 291, 337, 13465, 365, 385, 807, 613, 13, 51284, 51284, 400, 498, 291, 434, 3102, 11, 1780, 294, 341, 1243, 11, 456, 366, 611, 512, 17491, 17312, 48955, 51540, 51540, 281, 718, 291, 3124, 512, 544, 295, 613, 20448, 1803, 382, 731, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13948737133990277, "compression_ratio": 1.6567796610169492, "no_speech_prob": 5.594227332039736e-06}, {"id": 96, "seek": 50252, "start": 513.52, "end": 516.4, "text": " So that's matrix multiplication.", "tokens": [50364, 13241, 382, 1783, 25167, 293, 264, 912, 1230, 295, 13766, 382, 343, 13, 400, 370, 300, 886, 307, 1071, 4707, 50760, 50760, 295, 8141, 27290, 13, 50914, 50914, 407, 300, 311, 8141, 27290, 13, 51058, 51058, 1057, 613, 2145, 366, 17312, 11, 370, 1309, 291, 337, 13465, 365, 385, 807, 613, 13, 51284, 51284, 400, 498, 291, 434, 3102, 11, 1780, 294, 341, 1243, 11, 456, 366, 611, 512, 17491, 17312, 48955, 51540, 51540, 281, 718, 291, 3124, 512, 544, 295, 613, 20448, 1803, 382, 731, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13948737133990277, "compression_ratio": 1.6567796610169492, "no_speech_prob": 5.594227332039736e-06}, {"id": 97, "seek": 50252, "start": 516.4, "end": 520.92, "text": " All these videos are optional, so thank you for sticking with me through these.", "tokens": [50364, 13241, 382, 1783, 25167, 293, 264, 912, 1230, 295, 13766, 382, 343, 13, 400, 370, 300, 886, 307, 1071, 4707, 50760, 50760, 295, 8141, 27290, 13, 50914, 50914, 407, 300, 311, 8141, 27290, 13, 51058, 51058, 1057, 613, 2145, 366, 17312, 11, 370, 1309, 291, 337, 13465, 365, 385, 807, 613, 13, 51284, 51284, 400, 498, 291, 434, 3102, 11, 1780, 294, 341, 1243, 11, 456, 366, 611, 512, 17491, 17312, 48955, 51540, 51540, 281, 718, 291, 3124, 512, 544, 295, 613, 20448, 1803, 382, 731, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13948737133990277, "compression_ratio": 1.6567796610169492, "no_speech_prob": 5.594227332039736e-06}, {"id": 98, "seek": 50252, "start": 520.92, "end": 526.04, "text": " And if you're interested, later in this week, there are also some purely optional quizzes", "tokens": [50364, 13241, 382, 1783, 25167, 293, 264, 912, 1230, 295, 13766, 382, 343, 13, 400, 370, 300, 886, 307, 1071, 4707, 50760, 50760, 295, 8141, 27290, 13, 50914, 50914, 407, 300, 311, 8141, 27290, 13, 51058, 51058, 1057, 613, 2145, 366, 17312, 11, 370, 1309, 291, 337, 13465, 365, 385, 807, 613, 13, 51284, 51284, 400, 498, 291, 434, 3102, 11, 1780, 294, 341, 1243, 11, 456, 366, 611, 512, 17491, 17312, 48955, 51540, 51540, 281, 718, 291, 3124, 512, 544, 295, 613, 20448, 1803, 382, 731, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13948737133990277, "compression_ratio": 1.6567796610169492, "no_speech_prob": 5.594227332039736e-06}, {"id": 99, "seek": 50252, "start": 526.04, "end": 530.48, "text": " to let you practice some more of these calculations yourself as well.", "tokens": [50364, 13241, 382, 1783, 25167, 293, 264, 912, 1230, 295, 13766, 382, 343, 13, 400, 370, 300, 886, 307, 1071, 4707, 50760, 50760, 295, 8141, 27290, 13, 50914, 50914, 407, 300, 311, 8141, 27290, 13, 51058, 51058, 1057, 613, 2145, 366, 17312, 11, 370, 1309, 291, 337, 13465, 365, 385, 807, 613, 13, 51284, 51284, 400, 498, 291, 434, 3102, 11, 1780, 294, 341, 1243, 11, 456, 366, 611, 512, 17491, 17312, 48955, 51540, 51540, 281, 718, 291, 3124, 512, 544, 295, 613, 20448, 1803, 382, 731, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13948737133990277, "compression_ratio": 1.6567796610169492, "no_speech_prob": 5.594227332039736e-06}, {"id": 100, "seek": 53048, "start": 530.48, "end": 535.0, "text": " So with that, let's take what we've learned about matrix multiplication and apply it back", "tokens": [50364, 407, 365, 300, 11, 718, 311, 747, 437, 321, 600, 3264, 466, 8141, 27290, 293, 3079, 309, 646, 50590, 50590, 281, 264, 8062, 1602, 11420, 295, 257, 18161, 3209, 13, 50740, 50740, 286, 362, 281, 584, 11, 264, 700, 565, 286, 7320, 264, 8062, 1602, 11420, 11, 286, 1194, 309, 50972, 50972, 390, 767, 534, 1627, 13, 51078, 51078, 286, 600, 668, 18114, 18161, 9590, 337, 257, 1339, 2059, 1553, 264, 8062, 1602, 11420, 13, 51364, 51364, 400, 562, 286, 2721, 7320, 264, 8062, 1602, 11420, 293, 12270, 309, 300, 636, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.15153107894094367, "compression_ratio": 1.9513274336283186, "no_speech_prob": 2.6270899979863316e-05}, {"id": 101, "seek": 53048, "start": 535.0, "end": 538.0, "text": " to the vectorized implementation of a neural network.", "tokens": [50364, 407, 365, 300, 11, 718, 311, 747, 437, 321, 600, 3264, 466, 8141, 27290, 293, 3079, 309, 646, 50590, 50590, 281, 264, 8062, 1602, 11420, 295, 257, 18161, 3209, 13, 50740, 50740, 286, 362, 281, 584, 11, 264, 700, 565, 286, 7320, 264, 8062, 1602, 11420, 11, 286, 1194, 309, 50972, 50972, 390, 767, 534, 1627, 13, 51078, 51078, 286, 600, 668, 18114, 18161, 9590, 337, 257, 1339, 2059, 1553, 264, 8062, 1602, 11420, 13, 51364, 51364, 400, 562, 286, 2721, 7320, 264, 8062, 1602, 11420, 293, 12270, 309, 300, 636, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.15153107894094367, "compression_ratio": 1.9513274336283186, "no_speech_prob": 2.6270899979863316e-05}, {"id": 102, "seek": 53048, "start": 538.0, "end": 542.64, "text": " I have to say, the first time I understood the vectorized implementation, I thought it", "tokens": [50364, 407, 365, 300, 11, 718, 311, 747, 437, 321, 600, 3264, 466, 8141, 27290, 293, 3079, 309, 646, 50590, 50590, 281, 264, 8062, 1602, 11420, 295, 257, 18161, 3209, 13, 50740, 50740, 286, 362, 281, 584, 11, 264, 700, 565, 286, 7320, 264, 8062, 1602, 11420, 11, 286, 1194, 309, 50972, 50972, 390, 767, 534, 1627, 13, 51078, 51078, 286, 600, 668, 18114, 18161, 9590, 337, 257, 1339, 2059, 1553, 264, 8062, 1602, 11420, 13, 51364, 51364, 400, 562, 286, 2721, 7320, 264, 8062, 1602, 11420, 293, 12270, 309, 300, 636, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.15153107894094367, "compression_ratio": 1.9513274336283186, "no_speech_prob": 2.6270899979863316e-05}, {"id": 103, "seek": 53048, "start": 542.64, "end": 544.76, "text": " was actually really cool.", "tokens": [50364, 407, 365, 300, 11, 718, 311, 747, 437, 321, 600, 3264, 466, 8141, 27290, 293, 3079, 309, 646, 50590, 50590, 281, 264, 8062, 1602, 11420, 295, 257, 18161, 3209, 13, 50740, 50740, 286, 362, 281, 584, 11, 264, 700, 565, 286, 7320, 264, 8062, 1602, 11420, 11, 286, 1194, 309, 50972, 50972, 390, 767, 534, 1627, 13, 51078, 51078, 286, 600, 668, 18114, 18161, 9590, 337, 257, 1339, 2059, 1553, 264, 8062, 1602, 11420, 13, 51364, 51364, 400, 562, 286, 2721, 7320, 264, 8062, 1602, 11420, 293, 12270, 309, 300, 636, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.15153107894094367, "compression_ratio": 1.9513274336283186, "no_speech_prob": 2.6270899979863316e-05}, {"id": 104, "seek": 53048, "start": 544.76, "end": 550.48, "text": " I've been implementing neural networks for a while myself without the vectorized implementation.", "tokens": [50364, 407, 365, 300, 11, 718, 311, 747, 437, 321, 600, 3264, 466, 8141, 27290, 293, 3079, 309, 646, 50590, 50590, 281, 264, 8062, 1602, 11420, 295, 257, 18161, 3209, 13, 50740, 50740, 286, 362, 281, 584, 11, 264, 700, 565, 286, 7320, 264, 8062, 1602, 11420, 11, 286, 1194, 309, 50972, 50972, 390, 767, 534, 1627, 13, 51078, 51078, 286, 600, 668, 18114, 18161, 9590, 337, 257, 1339, 2059, 1553, 264, 8062, 1602, 11420, 13, 51364, 51364, 400, 562, 286, 2721, 7320, 264, 8062, 1602, 11420, 293, 12270, 309, 300, 636, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.15153107894094367, "compression_ratio": 1.9513274336283186, "no_speech_prob": 2.6270899979863316e-05}, {"id": 105, "seek": 53048, "start": 550.48, "end": 555.4, "text": " And when I finally understood the vectorized implementation and implemented it that way", "tokens": [50364, 407, 365, 300, 11, 718, 311, 747, 437, 321, 600, 3264, 466, 8141, 27290, 293, 3079, 309, 646, 50590, 50590, 281, 264, 8062, 1602, 11420, 295, 257, 18161, 3209, 13, 50740, 50740, 286, 362, 281, 584, 11, 264, 700, 565, 286, 7320, 264, 8062, 1602, 11420, 11, 286, 1194, 309, 50972, 50972, 390, 767, 534, 1627, 13, 51078, 51078, 286, 600, 668, 18114, 18161, 9590, 337, 257, 1339, 2059, 1553, 264, 8062, 1602, 11420, 13, 51364, 51364, 400, 562, 286, 2721, 7320, 264, 8062, 1602, 11420, 293, 12270, 309, 300, 636, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.15153107894094367, "compression_ratio": 1.9513274336283186, "no_speech_prob": 2.6270899979863316e-05}, {"id": 106, "seek": 55540, "start": 555.4, "end": 560.56, "text": " for the first time, it ran blazingly much faster than anything I've ever done before.", "tokens": [50364, 337, 264, 700, 565, 11, 309, 5872, 16379, 8781, 356, 709, 4663, 813, 1340, 286, 600, 1562, 1096, 949, 13, 50622, 50622, 400, 286, 1194, 11, 6076, 11, 286, 3172, 286, 632, 8932, 341, 484, 3071, 13, 50786, 50786, 440, 8062, 1602, 11420, 11, 309, 307, 257, 707, 857, 6179, 11, 457, 309, 1669, 18161, 9590, 51008, 51008, 1190, 709, 4663, 13, 51104, 51104, 407, 718, 311, 747, 257, 574, 412, 300, 294, 264, 958, 960, 13, 51216], "temperature": 0.0, "avg_logprob": -0.10338215827941895, "compression_ratio": 1.4682926829268292, "no_speech_prob": 1.5425923265866004e-05}, {"id": 107, "seek": 55540, "start": 560.56, "end": 563.84, "text": " And I thought, wow, I wish I had figured this out earlier.", "tokens": [50364, 337, 264, 700, 565, 11, 309, 5872, 16379, 8781, 356, 709, 4663, 813, 1340, 286, 600, 1562, 1096, 949, 13, 50622, 50622, 400, 286, 1194, 11, 6076, 11, 286, 3172, 286, 632, 8932, 341, 484, 3071, 13, 50786, 50786, 440, 8062, 1602, 11420, 11, 309, 307, 257, 707, 857, 6179, 11, 457, 309, 1669, 18161, 9590, 51008, 51008, 1190, 709, 4663, 13, 51104, 51104, 407, 718, 311, 747, 257, 574, 412, 300, 294, 264, 958, 960, 13, 51216], "temperature": 0.0, "avg_logprob": -0.10338215827941895, "compression_ratio": 1.4682926829268292, "no_speech_prob": 1.5425923265866004e-05}, {"id": 108, "seek": 55540, "start": 563.84, "end": 568.28, "text": " The vectorized implementation, it is a little bit complicated, but it makes neural networks", "tokens": [50364, 337, 264, 700, 565, 11, 309, 5872, 16379, 8781, 356, 709, 4663, 813, 1340, 286, 600, 1562, 1096, 949, 13, 50622, 50622, 400, 286, 1194, 11, 6076, 11, 286, 3172, 286, 632, 8932, 341, 484, 3071, 13, 50786, 50786, 440, 8062, 1602, 11420, 11, 309, 307, 257, 707, 857, 6179, 11, 457, 309, 1669, 18161, 9590, 51008, 51008, 1190, 709, 4663, 13, 51104, 51104, 407, 718, 311, 747, 257, 574, 412, 300, 294, 264, 958, 960, 13, 51216], "temperature": 0.0, "avg_logprob": -0.10338215827941895, "compression_ratio": 1.4682926829268292, "no_speech_prob": 1.5425923265866004e-05}, {"id": 109, "seek": 55540, "start": 568.28, "end": 570.1999999999999, "text": " run much faster.", "tokens": [50364, 337, 264, 700, 565, 11, 309, 5872, 16379, 8781, 356, 709, 4663, 813, 1340, 286, 600, 1562, 1096, 949, 13, 50622, 50622, 400, 286, 1194, 11, 6076, 11, 286, 3172, 286, 632, 8932, 341, 484, 3071, 13, 50786, 50786, 440, 8062, 1602, 11420, 11, 309, 307, 257, 707, 857, 6179, 11, 457, 309, 1669, 18161, 9590, 51008, 51008, 1190, 709, 4663, 13, 51104, 51104, 407, 718, 311, 747, 257, 574, 412, 300, 294, 264, 958, 960, 13, 51216], "temperature": 0.0, "avg_logprob": -0.10338215827941895, "compression_ratio": 1.4682926829268292, "no_speech_prob": 1.5425923265866004e-05}, {"id": 110, "seek": 57020, "start": 570.2, "end": 586.1600000000001, "text": " So let's take a look at that in the next video.", "tokens": [50364, 407, 718, 311, 747, 257, 574, 412, 300, 294, 264, 958, 960, 13, 51162], "temperature": 0.0, "avg_logprob": -0.3420296609401703, "compression_ratio": 0.9038461538461539, "no_speech_prob": 2.834612132573966e-05}], "language": "en", "video_id": "7GFKFng9gyM", "entity": "ML Specialization, Andrew Ng (2022)"}}