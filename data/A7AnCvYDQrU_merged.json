{"video_id": "A7AnCvYDQrU", "title": "Yann LeCun: \"Energy-Based Self-Supervised Learning\"", "description": "Machine Learning for Physics and the Physics of Learning 2019\r\nWorkshop IV: Using Physical Insights for Machine Learning\n\r\n\"Energy-Based Self-Supervised Learning\"\nYann LeCun - Courant Institute of Mathematical Sciences, New York University & Facebook AI Research\n\nInstitute for Pure and Applied Mathematics, UCLA\r\nNovember 18, 2019\r\n\nFor more information: http://www.ipam.ucla.edu/mlpws4", "author": "Institute for Pure & Applied Mathematics (IPAM)", "keywords": ["ipam", "math", "mathematics", "ucla", "yann lecun", "machine learning", "supervised learning", "AI", "artificial intelligence", "self-supervised learning"], "channel_url": "https://www.youtube.com/channel/UCGzuiiLdQZu9wxDNJHO_JnA", "length": 3610, "views": 31406, "publish_date": "11/02/2022", "timestamp": 1575936000, "entity": "Yann LeCun", "transcript": {"text": " I'm going to talk about, basically my goal, my aspiration is to kind of get to the next step in AI, machine learning, et cetera. And what we see today is a huge amount of success in machine learning, but the sample efficiency of all of the techniques that we use today are much, much worse than everything we observe in humans and animals. In other words, it takes many more samples or many more trials in the case of reinforcement learning for a machine to learn anything compared to humans and animals. So a lot of people are very quick to draw conclusions from this, oh, but humans draw on, and animals draw on evolution and innate behavior, blah, blah, blah. But I think it's just more efficient learning. And another kind of reaction to this is we draw on our background knowledge about the world, and that's true. The big question I'm asking here is, where does that come from? How do we acquire all the background knowledge we have about the world that allows us to learn a new task very quickly? So all the success that you see in practical machine learning today, almost all of it is due to supervised learning, and we all know what that means, right, to give, let's say you want to do image recognition, you give an image to the machine, and if the machine doesn't give you the right answer, you tell it what the right answer is, and it adjusts its internal parameters using stochastic gradient descent or something like that, a gradient-based method to get the output closer to the one you want. The amount of information you give to the machine at every trial is relatively small. Even in the case of something like ImageNet, which has 1,000 categories, you tell it what the correct category is, and that's less than 10 bits of information. So you're asking the machine to predict a very small amount of information every time. As a result, you need a lot of samples to try and do anything. Reinforcement learning is even worse. So reinforcement learning is a situation where you don't tell the machine the correct answer, you only tell it whether the answer you produce was good or bad. Okay? And there is like a harder form of reinforcement learning where what the machine sees next time step depends on the answer it got, and then there is a problem of exploration, exploitation, et cetera. But even without talking about this, if you look at how long it takes even to learn for a machine to learn to play, it's a convolutional net that it just learns by reinforcement learning to play an Atari game, very simple Atari game from the 1980s. It takes the equivalent on average of 80 hours of training to reach the performance that any human can reach in about 15 minutes. Those machines actually get to superhuman performance, but it takes them a long time. The Go system that was produced by DeepMind and the one that was produced by Facebook a little bit later, I know the numbers for Facebook because they're published, and also they're my friends. This takes about 20 million of self-play games to reach superhuman performance running on 2000 GPUs for two weeks. This is a lot of games, more of games than any humans can play. Go? Go? Yes. Go is complicated. And StarCraft, so this is a recent, the paper actually just appeared last week, but the results have been on for a while. From DeepMind, the AlphaStar system takes about 200 years of equivalent real time to learn to play on a single map for a single player, a single type of player if you want. And that's an enormous amount of computation. There's rumors that just to train this for a week or two, that team took more computational resources at Google than all of search. And similar for, there is a recent demo by OpenAI and a corresponding paper using reinforcement learning to learn manipulation from simulation. And then you can sort of transfer this to a real robot, and it takes the equivalent of 10,000 years of real time in simulation. So you can run simulation faster, you can run it in parallel, it just costs money or power or CO2 emissions. But it doesn't work in the real world. So if you want to train a car to drive itself and you don't have accurate enough simulation to run this in simulation, it's not going to work. You will have the car, you'll need a car to drive itself for millions of hours, cause thousands of accidents, destroy itself multiple times, it will have to run off a cliff multiple times before it realizes it's a bad idea to run off a cliff. When it starts, it doesn't know anything about gravity or anything like that. And so it's not practical for the real world, although it may be practical in simulation if you can do an accurate enough simulation, but it's going to cost you a lot in terms of computation. So how is it that humans can launch a driver car in about 20 hours of training for most of us without causing any accidents, also for most of us, right? That's a big question, how do humans and animals learn so quickly? And one hypothesis there is that it's not supervised learning, it's not reinforcement learning, it's something else. And so when you look at babies, you talk to cognitive scientists, developmental cognitive scientists and you ask them, you know, when do babies learn basic things like gravity? You know, when do they learn that objects are supposed to fall? And they tell you around nine months. So before nine months old, you show a baby the scenario here where there's a little car on the platform, you push it off, and the car appears to float in the air. It's a trick, of course. Babies barely pay attention. That's another thing they see, you know, they see all kinds of stuff during their day. They learn from every single one of them, but that doesn't surprise them. After nine months old, they've learned about gravity, and they look at this like a little girl here. They're really, really surprised, because in the meantime, they've learned that objects are not supposed to, you know, kind of float in the air, they're supposed to fall if they're not supported. And so that's actually a trick that, a method, I would say that psychophysis is used to identify when babies learn new concepts. So you know, babies learn face tracking very quickly, and you know, this could be, you know, there are computational models that learn kind of phase detection based on motion, you know, self-supervised based on motion that learn in minutes. So that could be learned, but really quickly. The notion of object permanence, the fact that when an object is hidden behind another one, it's still there. We don't seem to be born with this, but we learn this quite quickly as well. So many animals are born with this. The distinction between animate and inanimate objects, that's learned around three months. There are objects whose trajectory are completely predictable and others that are not animate objects. And here you go, gravity, inertia, conservation of momentum, basically what we call intuitive physics, that comes much later, around nine months. And it looks as if, or maybe that's a hypothesis, but you know, babies kind of learn sort of basic concepts kind of on a stage by stage basis, sort of building more abstract concepts on top of simpler ones. So for example, you know, are we born with a concept that the world is three dimensional? Or do we learn this? I think it's a good hypothesis to think that we learn this. A lot of psychologists will tell you we're born with it, but I don't see like how the cortex could be wired to sort of, you know, you know, tell us how to compute depth, right? Although there is certainly some bias in the wiring that makes this favorable in the sense that, you know, connections from the left eye and the right eye actually go to the same place in the cortex. So if the cortex wants to compute disparity, it's easy for it. The wires are there, okay? But the function, not really. And so here is how you could compute, how you could learn that the world is three dimensional. If you train your visual system to predict what the world is going to look like when you move your head, the best explanation for how the world changes is the fact that every pixel, every location in the world has a depth, right? Because then you get parallax motion. So implicitly, if you learn to predict what the world is going to look like when you move your head, you're going to have to learn depth implicitly, even if you have no idea that the world is three dimensional. Because that's the best way to explain how the world changes. Okay? So that's an idea that suggests how we can learn very simple concepts just by learning to predict, essentially. And that's going to be the general theme of this talk, which is learning to predict. Prediction is the essence of intelligence, in my opinion. And so we built models of the world that allows us to learn to drive in 20 hours, to learn all kinds of stuff. But animals do that too. So I really love this video of this little baby orangutong here is being shown a magic trick where you put a cherry in a cup and then the cherry is removed. But he doesn't see that. And then the cup is empty. And he was on the floor laughing. Okay? So his model of the world has obviously been violated. And he finds that funny. I mean, there's two things that happen when your model of the world is violated. Either you find that funny or you find it scary. Because here is something you didn't predict, right? It could kill you. In both cases, you pay attention. Okay. So that brings us to this idea of self-supervised learning. This idea of learning by prediction. Okay? So not learning a task, not learning to classify objects in categories that come to you from a deus ex machina, but learning the structure of the world by just observing the world, essentially. So the basic hypothesis of this is, or the principle that you can base this on is, predict everything from everything else. What do I mean by this? So let's say you have a piece of data for the sake of concreteness here. Let's think about a video clip, for example. There's going to be a piece of that data that you're going to tell the machine. You can look at it. And there's another piece that the machine pretends it doesn't know. It doesn't see. Here it's the future frames of the video. Okay? So it looks at the video up to a point. And then it tries to predict the rest of the video, but it pretends it doesn't know it yet. And then it trains itself to predict it. Of course, it can just wait and observe what's going to happen in the world, and it trains and predicts it by just observing what happened. Another form of this is called a mass self-supervised learning. You give a piece of data. It's very popular in the context of natural language processing these days. Take a window of text, a bunch of words. You remove some of the words, and you ask the machine to predict the words that are missing. In the process of doing so, the machine has to basically develop a representation of language that allows it to make those predictions. And basically, in the process of doing this, it kind of understands language. Not completely, not deeply, but still. But really, more generally, it's the idea of taking a piece of data and asking the machine to predict a piece of it from the piece that it sees. So as I just mentioned, this type of learning has become, in the last year, has become extremely popular in natural language processing. It's actually brought about a huge improvement in performance of all natural language processing systems, including translation, search, so Google. There's been a series of ideas going back to the 90s on this, but really sort of a paper that convinced everyone that this had to be the thing came up on archive in October last year from Google AI. It was on Google Brain, actually. And they use a particular type of neural net, a gigantic one, called a transformer architecture. So transformer architecture is kind of a funny kind of neural net where groups of neurons basically implement some sort of memory module, differentiable memory module. So they don't just compute weighted sums. They compute weighted sums, but then they compare those weighted sums with vectors called keys, and then that gives them scores that you normalize to one. And then you can compute a linear combination of other vectors. And it's a little complicated, but it's kind of an associative memory. Every module in there is an associative memory. And you put 40 layers of those with hundreds of millions of parameters. You train this on billions of words of text, and you train it in the following way. You take a window of a few hundred words. You take out 15% of the words, and you train the machine to just predict the missing words. Now, the machine cannot do a perfect job at this. So what it outputs is for each word that are missing, it outputs a probability vector whose size is the size of the dictionary. And it gives you a probability for every word. So that's the way it handles uncertainty in the prediction. It produces a large probability vector. This has completely revolutionized an LP. Everybody does this now. It works so well that Google deployed this within a year. In the last few weeks, they basically deployed this as a way of, for example, if you ask a question to Google, it will produce an answer. The answer is computed by a thing like this. Facebook has developed things like this for translation and content filtering, haste speech detection, all kinds of stuff. Yes? I'm wondering also, how do you use the fact that you know the, you said predict, and then compare with the real thing. Right. So here you do the same thing? Well, here you know what those words are, right? It's just you. But so how is that different from the supervised classification? It's not. Okay. It's because you have this axis, this thing without the words. Right. It's not. It's supervised learning with two differences. One is you don't have a extraneous piece of data you have sufficient to predict. So basically you're not asking it to perform any task other than understanding the input data, the internal structure of the input data. Second thing is that prediction cannot be done exactly because you can't predict exactly which word is going to go here. And so you need to deal with uncertainty. And those are crucial key points that distinguish this from sort of regular supervised learning if you want. Okay. It doesn't work so well for, yes? About the uncertainty, so would it predict multiple answers and then say... Yeah. It produces a probability vector over all words.... answers and then... Yeah. It's a separate one for every word, by the way. So yeah, so there's no consistency between... Yeah, if you pick one word, you can pick another word independently from it from that distribution vector. Yeah. So of course people have tried to do this for images. So the equivalent of this would be take an image, you know, blank out some of the areas of this image and then train a neural net, the convolutional net or something, to predict the missing parts. The problem with this is that now the distribution of outputs is over a high dimensional continuous space. And we don't know how to parameterize good distributions of others. So those so far have not been very successful. Not to the extent that those have been successful. So the way you use those things is you train this network and then you take the internal representation of language that those things learn and use it as input to a supervised task, his speech detection, answering, question answering, you know, whatever. There's a group, two students at Facebook in Paris who have used this for training a translator. So you give a sentence in English and a sentence in French, you remove different words randomly from the two sentences, and then you ask the system to translate. And the magic thing is that because some of the words that are removed from the French version are present in the English version, it learns to produce a representation that is independent of language. And so what you get in the end is a meaning representation that works for English and French. And you have two encoders, one for English, one for French. Google has a version of this that has, you know, 100 languages. Facebook now has a version of this that has a couple hundred languages. Those are massive networks. The latest, biggest ones are tens of billions of parameters. It's just ridiculously large. If you're imaging, it looks like inpainting on steroids. Yeah, it's inpainting on steroids, exactly. Yeah, so about the images, is it that the pixel, so it's the head eventually, the pixel intensities are real long-term, or whatever, or is it 2D structure matter at all? Yeah, it does. So because you can't pick pixels independent of each other. So this is a trick that DeepMind has proposed, if you're a former postdoc of Mind and DeepMind, Carl Greger, which is you make the prediction of pixels sequential and you turn it into a classification problem for the great scale where it's, you know, one among 256. It just strikes me as wrong. You know, it kind of works surprisingly well, but you know, it can be the ultimate answer. So this is sort of lost, you don't think we'll have it? No. I think we'll find something better. Is this network essentially learning verge frequencies or is it building up semantic concepts? Who knows? There is actually some analysis of the... Yeah, there is. There is some studies about this, actually. People who have tried to study what the representation inside. So Chris Manning at Stanford has done some work on this and his various groups. It seems that those things actually represent meaning to some extent, right? It's not a deep understanding of text, you know, but it's shallow because those are words that are not connected with the real world, right? I mean, the thing on this is text. There's a big question. So it has the linguistics community up in arms because it basically breaks the entire universe of like, you know, what about grammar? What about, you know, semantics? What about all those things? Is it all statistics? You know, what about symbol manipulation, right? Those things basically just represent everything by vectors. They embed everything in vector spaces. And so the Chomskians in linguistics say, oh my God, they write books against this. Okay. So basically that's the idea of self-supervised learning. You train a system with sort of a pretext task, which is not really a task. It's just reconstruction or prediction. And as I said, it works really well for text and symbols. And people use this now for like, you know, DNA sequences, all kinds of stuff. It's very new. Images, not so much. Video, not so much either. Signal audio, not so much either. There is some results, you know, that sort of improve the state of the art a little bit, but they're not as successful as in NLP. In NLP, they're incredibly successful. Okay. There's another reason why we might want to use self-supervised learning, which is, and it goes back to this idea of training a car to drive itself. The reason why we can learn to drive a car in 20 hours without crashing most of the time is that we have this model of the world that allows us to predict the consequences of our actions. So if we drive next to a cliff and we turn the wheel to the right, you know, the car with rear off to the right, it will run off the cliff and crash down the bottom because we know about gravity and nothing good is going to come out of it. So we don't even try, right? Because we have this predictive model. We can predict the consequences of some of our actions at least. So the way this works is actually a very standard thing for optimal control theory, which is if you have a predictive forward model of the world that gives you the state of the world at time t plus one as a function of the state of the world at time t, your action and perhaps some latent variable that represents all the stuff you don't know about the world, then you can sort of run this in your head. You can run your model in your head with a proposed sequence of action and see what the result will be and you can measure the cost of it. You can have an internal cost for how good things are, you know, I don't want to crash, right? And so you can sort of run this model forward and perhaps infer a action sequence that will sort of minimize your costs, right? That model will have to be learned with self-supervised learning basically. Here is the state of the world. Let me take an action and see what the result is or not take an action just because the world is being the world. And that's the same problem we need to solve here, the self-supervised learning problem. And the main issue is that the world is not deterministic. Okay, so that led me to this picture of the three paradigms of learning if you want, reinforcement learning, supervised learning, and self-supervised learning. And the difference is how much feedback information you give to the system at every trial or every sample. Here is just one scalar. Here is just a few bits per sample. And here it's basically a whole video, right? It's a huge amount of information you give to the machine. So the hope is that you can train gigantic networks without them being, you know, ridiculously overparameterized. And they will learn a lot of the structure of the world just by observation without actually taking any risk and without you spending money collecting labels. That's probably how humans and animals learn so much. That might be how common sense emerges, right? The accumulation of all the background knowledge we have about the world that we accumulate by observation, that's the basis of common sense essentially. So we need to get machines to do this. And for, I mean, I've been advocating for this for a while and, you know, made those obnoxious, you know, slides about reinforcement learning being a cherry on the cake of machine learning. And self-supervised learning being the dark matter of AI. We don't know what it is. It's actually the dark energy more, you know, it's most of the energy. Okay, so the next revolution in AI will not be supervised, will not be reinforced either. I saw this from Marjole\u0161a Efros. My colleague, Jitendra Malik, who's from Berkeley, also at Facebook says labels are the opium of the machine learning researcher. So you know, it's all like revolutionary statements. And some dude actually produces a t-shirt that you can buy. Okay, so that leads me to energy-based models, which really is a proposal for how we approach this problem. So the main problem is how do we predict with uncertainty? So if I do an experiment, I'll come back to this, if I do an experiment, which is I put a pen on the table and I let it go in a minute. And if I repeat the experiment multiple times, and it's not the same video clip, every time the pen will fall in a different direction. And if I ask you to predict what is going to be the state of the world in two seconds, you can tell that the pen is going to fall, but you can't tell really in which direction, right, most of the time. So if you train a deterministic function to make one prediction, the best thing you can do is predict the average of all the possible features, which would be a transparent pen, you know, possible configurations. And if you actually do this, you train a system to predict video frames. Here the first frame, the first four frames of the videos are observed, the last two are predicted, you get blurry predictions. They're basically the average of all the stuff that could happen. And then machines can decide which one. It has to make one prediction. So it seems to me that the frame is similar to adversarial networks in which you replace the discriminator with some stochastic process generated by nature in a sense. So can you borrow some control from adversarial networks? Yes and no. Okay, so adversarial networks tend to try to solve the same problem in a different way from the one I'm going to explain. But I'll come back to that analogy later. Okay, so the point is if you have an input, a deterministic function that produces one output and some cost function here that measures the discrepancy, if this cost function is only zero when the prediction and the observation are the same, then this guy can only predict the average. Now to come back to your point, if you make this cost function complicated in such a way that it doesn't compare points but it compares distributions, for example, then yes. But then that becomes complicated. That's what adversarial training is about. You have to train this thing to do the, to compare distributions, which is hard. Okay, so we're not going to use a deterministic function. So here is the crux of energy-based models and it's very connected to things like factor graphs that people were talking about in the context of graphical models and Bayesian networks and stuff like that. So basically you have an input, an observation, you have an observed or a hypothesis for a prediction and you have an energy function here that measures the compatibility between the two. If the two are compatible, if y is a good prediction for x, then the energy produced by this is low. If they're not compatible, it's high. And the way you do inference is that I give you an x, you find a y, there might be multiple, that produces a low energy. So for example here, this is x and y. If I give you this x, there are two possible answers for y that have low energy. This is the manifold of data. That's where data is sampled from. And you'll have two answers. So I'm not telling you how to do this minimization, how to produce multiple answers, but that's the inference mechanism. So the energy here is not used for training, it's used for inference. It's very different. So you could say, well, all right, that's an energy function. But you can take the exponential and normalize with a Gibbs distribution, and that gives you a probability. Yes, except that I don't actually want the log of a probability. I don't want the energy to be the log of a probability. Here the probability is a set of measures zero. I speak like if I know anything about math, right? It's a thin plate. And so the distribution here would be infinity on that point, on that manifold, and zero just epsilon outside of it. Which means this energy function, however you parameterize it, will have to have infinite parameters, infinite weights, or something if it's a neural net. And it's not very useful because you can't do inference with this. It becomes a golf course. You can't do inference. What you want is a function that is smooth, so that at any point here, the gradient of that function might tell you where to go to get a point from the manifold. So this is very emphatic. You do not want to learn distributions. They're bad for you. Maximum likelihood sucks. It just doesn't do the right thing. This is a big mistake that actually GANs do. The original formulation insists that this should be one here, zero outside, and that's just a bad idea. So that's an example where applying probability theory blindly actually is bad for you. And I've been trying to snap people out of it for 20 years without success so far. So this is the, what I just showed you is the conditional version. And there's an unconditional version where you don't actually have an observation. The only thing you want to know is model the internal consistency of y. And really, those two problems are not that different from each other. In the first case, you know a priori which set of variables are observable. In the second case, you don't know a priori which part of y is going to be observed. And so here, what the model gives you is kind of a dependency, a function that gives you the dependency between y1 and y2 in this case. So things like autoencoders are this type. Yes? So you're writing here energy equals negative log likelihood, but you don't want that. Okay. It's akin to a negative log likelihood, but you don't want to train it with maximum likelihood. Or not at least without heavily regularizing it. And you don't need the normalization because it's not like you're going to sample from it anyway. So in the end, it's just an energy. There's some more elementary concept that you can derive from. And you know, physicists in the audience know that energy is more fundamental than probabilities. Probabilities cannot derive from it. Or Hamiltonian if you're a quantum physicist. But there's no probability it's amplitude. Well, whatever. Okay. So how do we train an energy-based model? So of course we're going to parameterize this in some way, right? It's going to be some sort of neural net with a particular architecture. And it's going to have parameters in it. And we need to train it in such a way that it takes the shape so that the training data we observe takes low energy and everything else has higher energy. And not specifying that it should be the difference of energy should be akin to a ratio, difference of log of probabilities. I don't insist on that. And there are two classes of methods for doing this. What I call contrastive methods and architectural methods. So contrastive methods basically consist in pushing down on the energy of points, of data points, right? So give a pair x, y to the model and tweak the parameters so that the energy coming out of it goes down. Easy. And then the contrastive term, which prevents this thing from just collapsing to zero everywhere, picks points intelligently outside and push their energy up. And the problem is how intelligent you have to be to kind of pick those points. And by the way, GANs are an example of this. So GANs are an example where the discriminator is this energy function and the generator is the smart system that picks out the points whose energy is going to push up. That's called energy-based GANs. I had a paper on this a few years ago. And then there's architectural methods. And those architectural methods consist in building the energy function in such a way that the volume of stuff that can take low energy is limited or minimized. So either by construction or through some regularization term. And I'll come to how you do this in a minute. But let's start with, OK, so there are all kinds of traditional unsupervised learning methods that you can cast in that language. And as I said, basically, the basic idea of contrastive methods is push down the energy of data points, push up everywhere else, which is maximum likelihood does. If you have tractable partition function, variational approximation, push down the energy of data points and push up on chosen location. And maximum likelihood with Monte Carlo, Marcocce Monte Carlo, Hamiltonian Monte Carlo, contrastive divergence, metric learning, ratio matching. All those stuff basically are different versions of this, including GANs. And the third one is trying to function on mass points of the data manifold to points on the data manifold. That's called denoising autoencoder. And that's what those large NLP model I was telling you about do. That's called a mass autoencoder or a particular case of denoising autoencoder. I'm going to mention a little bit metric learning because it's one of the few cases where it works. And it's, in fact, the only case we know where it works in the context of images. So it's kind of important. And those results are recent, like last week. And then there's architectural methods. Some of them, some of you I'm sure know. So we think like PCA. So PCA, you make sure the whole space is not reconstructed because the representation is constrained to be low dimensional. K-means, Gaussian mixture model, square ICA, et cetera. These are the ones I'm going to talk about because that's where my money is right now. So think like sparse coding, sparse autoencoders, which some of you, of course, have heard of. And then the other ones I'm not going to mention. So how does it work in the context of PCA and K-means? So in PCA, the region of the space that is perfectly reconstructed is the principal subspace. In this case here, if the data points are sampled from this spiral, the principal subspace here, dimension one, is this. So this has reconstruction error zero, and everything else grows quadratically. Because you take a point, you project it on this. And so if it's already there, reconstruction error is zero. If it's here, reconstruction error is the square of the Euclidean distance. Not a good model of a spiral, as you can tell. K-means says, so K-means is interesting because it has a latent variable in it. So the energy function is not directly a function. It's the minimum of some other more elementary energy function. So it's the min over a vector z of the square distance between the data point and this z vector multiplied by a matrix whose columns are the prototypes of the K-means model. And you constrain this vector to be a one-hot vector. So only one component can be one. The other ones have to be zero. And so you have to do this search exhaustively, which is akin to a nearest neighbor. And what you see here, those little black areas are the minima centered on the prototypes. So K-means just put prototypes more or less equally distant over the manifold. It looks great in two dimensions. In high dimension, K-means really doesn't work that well. But what's interesting about both of those cases is that they work because the capacity, the volume of the white space that can take low energy is limited. That's a key concept. I already talked about the maximum likelihood. So I'm going to skip that. So that leads us to this idea of latent variable models. So energy models, f of x and y, that are actually defined by minimizing a more elementary energy function, E of x, y, z, with respect to z, or by marginalizing over z, which is equivalent to defining f of x, y as minus 1 over beta, which you can think of as an inverse temperature, log integral over z, exponential minus beta, the energy. This is a log partition function, for those of you who don't know. And this is a free energy, which is why I call it f, for physicists in the room. So there's the conditional version and the unconditional version, which only consists in taking x out. So that's what the model looks like. You have observed variable, variable you need to predict, and some latent variable you have to minimize over. Now why is that interesting? Latent variables are interesting because they are an essential tool for making a system be able to predict multiple outputs instead of just one. So if I build a system out of deterministic functions, here I have a neural net with a few layers. It produces some representation of the observed variables. And then I feed this to another neural net, I call it a decoder, together with a latent variable. By varying this latent variable over a set, I can make the output vary over a set, maybe some complicated manifold if this network is complicated. And basically that allows me to solve this problem of not predicting the average. I can just predict the actual thing I'm observing by finding the latent variable that will make my model predict the best thing. So here is how you train an energy-based model there. You show it an x and a y. You find a z that minimizes the reconstruction error. And if that's not perfect, then with one step of stochastic gradient descent, you update the parameters of whatever functions you're using to make this small. This works great, except there's a slight problem with this, which is that imagine that z has the same dimension as y. So if z has the same dimension as y, and the decoder is not a degenerate function, then for any y you show the machine, there's always going to be a z that's going to reconstruct it perfectly. Which means your energy surface is going to be completely flat. It's not a good model of dependency of y on x, because your energy function doesn't tell you which y is good. So again, what we're going to have to do is limit the information capacity of z. Like we did with chemists, basically we're going to have to limit the volume of y space that can take low energy. And that volume will have to be commensurate with the volume of our data manifold, essentially. Okay, but let's start with contrastive embedding. So contrastive embedding is the following idea. To handle the fact that multiple y's are compatible with x, you feed both x and y to neural nets. And those neural nets will have invariances. And so you're going to be able to modify y for a given x without changing the output, because of the invariances built into the system. And that's a way of handling the fact that there are multiple y's that are compatible with an x. But now the way you need to train this is that you need to tell it, okay, here are two images, they're actually the same conceptually. So whatever representation you extract from this image should be similar to the representation you extract from this image. So basically, I want h and h prime here to be as close to each other as possible, because really they represent the same thing. But if you only do this, you see a collapse. You see basically those networks completely ignoring the inputs and producing constant vectors. So you need a contrastive term, which is kind of a subclass of this idea of pushing up the energy of stuff you don't want. You show pairs of examples that are dissimilar, and then you train those networks to produce outputs that are different from each other. And there's various loss functions to do this. So this is, in the business, it's called Siamese neural nets. And it's an old idea, but it's been kind of revived more recently. It's very successful for training your face recognition system, or there's a paper that just came out that actually beats the, actually used self-supervised learning in vision to improve performance over purely supervised learning. It's this one, MoCo. And it's using a trick to kind of slow down one of those. The main issue here is the difficulty of finding hard negatives. So here you have to mine your entire data set for images that the system thinks are similar to this one, but really aren't. And that's really where things become complicated. But that idea, this paper I just mentioned, actually improves the performance of image recognition systems over purely supervised. Yes? So you're labeling this function f or f over x, y, whatever. Is this in a parameterized class? Yeah. It's a neural net, whatever your favorite parameterized class is. But in this case, it's large convolutional nets. In fact, the name of the architecture is right here. This means ResNet-50 with four times the size of the feature maps. ResNet-50 is kind of a standard architecture for image recognition. So the BERT system that's used for NLP, those masked auto-encoder or denoising auto-encoder, the diagram looks like this. You start with a piece of data. You corrupt it, which means you remove some pieces. You run it through a few layers of neural net. There's a latent variable which is implicit in those models, which is which of the outputs is picked as a function of the probability distribution on the output. And then you compare this with the actual data that you observed. And you train the entire system to minimize the reconstruction error. And in continuous space, conceptually what that does is that if you imagine that your data manifold is this, those points, you take a point, you corrupt it. So you add noise to it, for example, in this case. And then you train your parameterized neural net to map this input to that output. You feed this as input, and you tell it you should map it here. Once this system is trained, you can actually plot the vector field of, you know, those are little vectors that point in the direction where the neural net, if you feed with this input, would take you. I mean, you have to lengthen the thing, but they almost all take you to the manifold here. And the color here indicates the energy. So the energy is low on the manifold, which is what you want. It's high outside, except there's a problem right here. There's a ridge here, and it's kind of a flat ridge, which is not good. So here the reconstruction error is actually zero, because the system, when it's trained, can't decide whether to go this way or that way. So there's a flaw with this thing. There are ways to fix it, but not clear. The main issue with this is that it doesn't scale well in high dimension, because in high dimension there are many, many, many ways to be different from a sample. And you're never going to explore the entire dimension of all the space. Why is this a flaw? I mean, it's right, right? It could be either. It could be either, but the problem of using the reconstruction error is that here the reconstruction error is zero, which means the energy is zero. It's bad. It's a phantom low energy thing. There are ways to fix it that are not cheap, which I'm not going to go into. So prediction with latent variables. As I told you before, I give you an x, I give you a y, you find a z that minimizes the reconstruction error. And unfortunately, because if z has high capacity, this is going to give you a flat energy surface. So the solution to this is you regularize z. You basically add a term in the energy, lambda times rz, where rz measures, basically tells you if you are in a particular region of space that you're happy with. And so basically you pay a price for making z go outside of that region. A good example of this, which is familiar to many of you, is rz could be the L1 norm of z. So if you put the L1 norm of z, there's some of the absolute values of the components of z. To make this small, you have to basically make many of the components of z zero, as many as possible. And so you end up with sparse representation. And that actually limits the volume of space that has low energy, essentially. This is what you get. So this is sort of the unconditional version of it, where there is no x. You're just modeling y. And here I give you a y. The regularizer for z is the L1 norm. Z is multiplied by a matrix called an atom matrix, if you want, or a decoding matrix. It produces a reconstruction. You measure the square Euclidean distance between the two. And that's your energy function. It's very classical, in the applied math community, at least. You could generalize this. And so what you get is, when you train this on this little spiral here, you get that the low energy regions are basically piecewise linear approximations with low dimensionality, linear subspaces of the entire system. That works really well in high dimension. That's the cool thing. And it's been studied a lot. One thing that has not been studied is, what if you make the decoder nonlinear? Let's say, instead of having a matrix here that you multiply z by, you have an entire neural net. What happens? I'll tell you about this a little bit later. Now here is the problem, though. Finding z for a given pair x, y, finding the z that minimizes the sum of those two terms can be expensive. You have to backpropagate gradient through this, do gradient descent. This could be a non-smooth function. You have to do those L1, L2 optimizations, ISTA, or whatever. It can be expensive. So one idea is, you actually train a neural net to predict the optimal solution to that optimization problem. So ignore the gray part for now. I give you an x and a y. Find the z that minimizes the sum of this and that. And then use this as a target to train a neural net, which from x and y is going to predict this guy. And then if this guy is well-trained, then I don't need to run the optimization algorithm for inference anymore. I just need to run through the encoder. So now it becomes very clear that it's very important to limit the information content of z, because the system can cheat here. It actually has access to the answer, and it can just copy the answer on the output. So unless you have a way of restricting the information content of this, the system will cheat and completely ignore x. So if you have the unconditional version of this where you don't have this part, this is called a regularized autoencoder or a sparse autoencoder. This works really well in the sense that if you train a sparse autoencoder like this, where the decoder is linear and the encoder is a few layers of a neural net, on the nist, the columns of the decoding matrix end up being little parts of characters, which means you can reconstruct any character with a linear combination of a small number of those things. People call these things atoms. If you train on natural image patches, this is a learning algorithm running. You end up with oriented edge detectors, which is great. You have to do a little bit of whitening for the images. If you do this in a convolutional mode where the decoder is actually convolutional, so z is not a vector. It's a bunch of feature maps, and then you run them through convolutions and you compute the sum, and that's how you decode. You get beautiful... These are the business functions in the decoder, the kernels that I used to reconstruct the outputs. These are weights in the first layer of the encoder. The encoder only has two layers in this case, and they're basically mirror images of the decoder. This is for 1, 2, 4, 8, 16, 32, 64 filters. You get a very high diversity of filters centered around gradings, oriented edges at various frequencies. It's really nice. These are 10-year-old results. More recently, we can revive this technology because it's really interesting. This is, again, filters that are learned on natural image patches from the CIFAR dataset, 9x9 kernels. Those are corresponding feature maps that are extremely sparse that can reconstruct basically any image on CIFAR with relatively good accuracy. Some other work we're doing along those lines is having multi-layer decoders. Basically, here is an image, and then take a bunch of feature maps here, run them through convolutions and ReLU, and convolutions and ReLU, and reconstruct. Then you can stack multiple layers of those and train this carefully if you know how to do it. It's not easy, but it kind of works. These are reconstructions. This is the original. These are reconstructions you obtain with sparse representation. If you only reconstruct from here, you ignore the rest. You get high-frequency information. If you only reconstruct from here, ignore this. You just run through this network. You reconstruct low-resolution versions. You can think of this as non-linear wavelets if you want. The system naturally learns to represent this. Let me skip this. Okay, let me talk about this really quickly. Something that's become very popular in the business is something called variational autoencoders. Variational autoencoders are basically autoencoder models. They could be made conditional if you want, but I kind of grayed this out. They are an example of a model where you also limit the capacity of the representation here in the middle. The way you limit the information capacity of this vector is that you add noise. Basically, here's a why. You run through an encoder. You produce a prediction for what the code should be. Then you add additive Gaussian noise to it. You run through the decoder. There's a constraint here that it's a penalty really used during learning that the norm of the outputs of the encoder needs to be as small as possible. It's L2 regularization if you want during learning. How does that limit the information content of the code? Let's say that you train without noise. You train your autoencoder is going to assign a code. This is in code space. It's going to assign a code vector to every training sample. These are all of the training samples. Add noise to those guys. You turn them into fuzzables. Those fuzzables might overlap. For example, this sample and that sample might end up being confused with each other because when you add noise, you can turn one into the other. The reconstruction error will probably increase. What is the system going to do? Very easy. It's going to make those fuzzables fly away from each other so that they don't overlap. That really is not that interesting. It just makes the norm of the output of the encoder just larger, but it doesn't do anything for you. What you do is you play a trick. You attach each of those little fuzzables to the origin with a spring. You tell them, okay, you can fly away, but not too far. You kind of have to overlap with each other and construct some sort of data manifold if you want. Two bubbles will overlap to the extent that the reconstruction error is not dramatic on the output. There's a tradeoff between the strength of that spring, the size of those bubbles, which in the case of variational autoencoders are maximized, actually, and things like that. If you read all the papers on variational autoencoders, it's never formulated like this. It's formulated as some variational lower bound of some probability distribution. This is a mechanical analogy, and it makes it completely clear this is just a way of reducing the information capacity of the code. I'm going to end with an application of all this, which is the problem of predicting what the world around you is going to do for things like avoiding to bump into other cars, for example. I already talked about this idea that if you have a forward model of the world that gives you the state of the world at time t plus one, the function of the state at time t, and the action you're going to take, you can roll out an action in your head with using this model and perhaps plan a sequence of action that will minimize your cost here, the cost being I want to stay in my lane and I don't want to bump into other cars. I don't want to get too close to any other cars. That's a differentiable cost. I'm not talking about reinforcement learning. Everything is differentiable. Everything is computable. I don't need to try anything. I don't need to estimate gradients of stuff by trial and error. Everything is differentiable. The problem, of course, is that this model of what cars around you are going to do is not deterministic. There's a lot of things that cars around you are going to do that you may not predict. There is a latent variable in the model that you're going to need to sample, which is going to parameterize a set of all stupid things that cars around you can do and non-stupid things as well. You start from a state, which you observe. This is your current state. This is where the cars around you are. You sample the certain variable. You take an action, a virtual action, and then the system gives you a prediction for where the cars around you are going to be relative to you. If you decide to turn the wheel, the world around you is going to rotate. This is predicting what the world around you is going to look like. What you can do is you can backpropagate gradient from the cost to a network here that is supposed to predict the correct action from the state. Should I turn the wheel? Should I brake? Should I accelerate? By sampling multiple samples and running this on different initial conditions, you might have a car that trained itself to drive without actually driving by just thinking about it, having trained its forward model by observing how the car is driving. The way we do this is that there is a camera that looks at a highway from the top, and then you track every car and you extract a little rectangle around every car, centered on every car, and it turns with the car. That's the world around every car. Then you can record sequences of those little things by tracking every car. That constitutes a training set, a set of videos centered on every car. You give a few frames of this thing, observed frames, and you train a system that has written variables and all that stuff to predict the next frame. Who is C here? Z will represent all the stuff you can predict that the other cars are going to do, essentially. How big is it? Oh, I see. That's a good question. I think it's 256 dimensions, a vector of 256 dimensions. For inference, you need to sample Z. For training, Z is given to you by an encoder, basically, that you train. You need one of those information capacity reduction here, which in our case is done by a combination of adding noise and what we call dropout. It basically sets Z to zero. It forces Z to be zero half the time. It tells the system, even if you don't have a latent variable, do a good job at predicting whatever you can. Then half the time, it lets the system use Z. The latent variable is combined additively with the representation extracted from the predictor so that zero has a special meaning if you want. This is what it produces. This is a recording of the real world. This is a prediction when you set Z to zero all the time, and so you get blurry predictions. What you see here are... I'm going to restart if it wants to restart. What you see here are four different predictions run recursively for different samplings of the Z variables. You see they predict different futures. It's indicated by the square on the circle here. They indicate cars that do different things for the different sampling. The cost function for training this thing is very simple. Whether the car is in lane or whether it's... and how far it is from its neighbors. We can train this policy by just back-dropping the ingredient of the cost through the entire system all the way down to the policy network. If you do this, it doesn't work because what happens is the system gets into regions of the space where the Ford model does a really bad job at predicting, but happens to have low cost. The car goes off the road or something like that. This can be due also to flaws in the cost function, but basically it doesn't do what you want. What you have to do is regularize it by forcing the system to stay within regions of the Ford model where the Ford model is pretty sure of its predictions so that the system doesn't try to drive crazy stuff in crazy ways that are not present in the training set and where its Ford model can't really predict what's going to happen accurately. You do this by estimating the uncertainty in the prediction of the Ford model by sampling the output of the Ford model with these random variables you can sample like the dropout of various neurons in the network, computing the variance of it, and then using this as a term in the cost function. It forces the system to stay within a region of space where predictions are fairly reliable with low variance. This is what the system does. This is the car being driven. The green cars are recorded videos. The white dot indicates whether the car wants to turn, accelerate, brake, etc. It's perhaps more visible in this example. The yellow car is the car that is in the recorded video. The blue car is the one that we are driving. It didn't change lane. The problem is that the blue car is invisible to the other ones, and so it gets squeezed and it has to escape because the other cars are just recorded. They don't see the blue car. This is another example. There are less issues. It's trying to stay halfway between the cars in the front and in the back. So that slide. I think this whole idea of self-supervised learning is the future of machine learning. Don't necessarily believe me, but that's where my money is. I think we can learn complex hierarchical features for low resource tasks, which is becoming really important using self-supervised learning. Clearly in natural language it works. It's very important for natural language. For example, it's important for Facebook to be able to translate Burmese into English, or more precisely to actually train a classification system that detects hate speech in Burmese because there is ethnic conflicts in Myanmar. You want to be able to detect hate speech to prevent bad things from happening. But how much training data do we have in Burmese? So one way to do this is to turn text into a language-independent representation and then train a hate speech detector independently of language. It's very important for low resource languages like Burmese or whatever. I mean, there's 2,000 languages or something that people use on Facebook. The advantage of that is that we can train massive networks that can accumulate a lot of background knowledge about the world in a non-task-dependent way. Then we can use similar techniques that handle uncertainty to learn forward models for model-based control and model-based reinforcement learning. So my money currently is on energy-based approaches, latent variable models, so that they can handle multimodality, regularized latent variable models to prevent this collapse problem, in particular sparse latent variable models, although the precise way how to make them sparse is not clear, and then latent variable prediction through a trainable encoder. That's what I'm working on at the moment. I gave you a preliminary result, but this is kind of a long-term project. Thank you. I'll talk about it in the next class.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 15.8, "text": " I'm going to talk about, basically my goal, my aspiration is to kind of get to the next", "tokens": [50364, 286, 478, 516, 281, 751, 466, 11, 1936, 452, 3387, 11, 452, 44565, 307, 281, 733, 295, 483, 281, 264, 958, 51154, 51154, 1823, 294, 7318, 11, 3479, 2539, 11, 1030, 11458, 13, 51330, 51330, 400, 437, 321, 536, 965, 307, 257, 2603, 2372, 295, 2245, 294, 3479, 2539, 11, 457, 264, 6889, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.19382826487223306, "compression_ratio": 1.4657534246575343, "no_speech_prob": 0.018777163699269295}, {"id": 1, "seek": 0, "start": 15.8, "end": 19.32, "text": " step in AI, machine learning, et cetera.", "tokens": [50364, 286, 478, 516, 281, 751, 466, 11, 1936, 452, 3387, 11, 452, 44565, 307, 281, 733, 295, 483, 281, 264, 958, 51154, 51154, 1823, 294, 7318, 11, 3479, 2539, 11, 1030, 11458, 13, 51330, 51330, 400, 437, 321, 536, 965, 307, 257, 2603, 2372, 295, 2245, 294, 3479, 2539, 11, 457, 264, 6889, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.19382826487223306, "compression_ratio": 1.4657534246575343, "no_speech_prob": 0.018777163699269295}, {"id": 2, "seek": 0, "start": 19.32, "end": 27.04, "text": " And what we see today is a huge amount of success in machine learning, but the sample", "tokens": [50364, 286, 478, 516, 281, 751, 466, 11, 1936, 452, 3387, 11, 452, 44565, 307, 281, 733, 295, 483, 281, 264, 958, 51154, 51154, 1823, 294, 7318, 11, 3479, 2539, 11, 1030, 11458, 13, 51330, 51330, 400, 437, 321, 536, 965, 307, 257, 2603, 2372, 295, 2245, 294, 3479, 2539, 11, 457, 264, 6889, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.19382826487223306, "compression_ratio": 1.4657534246575343, "no_speech_prob": 0.018777163699269295}, {"id": 3, "seek": 2704, "start": 27.04, "end": 32.32, "text": " efficiency of all of the techniques that we use today are much, much worse than everything", "tokens": [50364, 10493, 295, 439, 295, 264, 7512, 300, 321, 764, 965, 366, 709, 11, 709, 5324, 813, 1203, 50628, 50628, 321, 11441, 294, 6255, 293, 4882, 13, 50770, 50770, 682, 661, 2283, 11, 309, 2516, 867, 544, 10938, 420, 867, 544, 12450, 294, 264, 1389, 295, 29280, 50952, 50952, 2539, 337, 257, 3479, 281, 1466, 1340, 5347, 281, 6255, 293, 4882, 13, 51214, 51214, 407, 257, 688, 295, 561, 366, 588, 1702, 281, 2642, 22865, 490, 341, 11, 1954, 11, 457, 6255, 2642, 51402, 51402, 322, 11, 293, 4882, 2642, 322, 9303, 293, 41766, 5223, 11, 12288, 11, 12288, 11, 12288, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12350284031459263, "compression_ratio": 1.7738095238095237, "no_speech_prob": 8.74035176821053e-05}, {"id": 4, "seek": 2704, "start": 32.32, "end": 35.16, "text": " we observe in humans and animals.", "tokens": [50364, 10493, 295, 439, 295, 264, 7512, 300, 321, 764, 965, 366, 709, 11, 709, 5324, 813, 1203, 50628, 50628, 321, 11441, 294, 6255, 293, 4882, 13, 50770, 50770, 682, 661, 2283, 11, 309, 2516, 867, 544, 10938, 420, 867, 544, 12450, 294, 264, 1389, 295, 29280, 50952, 50952, 2539, 337, 257, 3479, 281, 1466, 1340, 5347, 281, 6255, 293, 4882, 13, 51214, 51214, 407, 257, 688, 295, 561, 366, 588, 1702, 281, 2642, 22865, 490, 341, 11, 1954, 11, 457, 6255, 2642, 51402, 51402, 322, 11, 293, 4882, 2642, 322, 9303, 293, 41766, 5223, 11, 12288, 11, 12288, 11, 12288, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12350284031459263, "compression_ratio": 1.7738095238095237, "no_speech_prob": 8.74035176821053e-05}, {"id": 5, "seek": 2704, "start": 35.16, "end": 38.8, "text": " In other words, it takes many more samples or many more trials in the case of reinforcement", "tokens": [50364, 10493, 295, 439, 295, 264, 7512, 300, 321, 764, 965, 366, 709, 11, 709, 5324, 813, 1203, 50628, 50628, 321, 11441, 294, 6255, 293, 4882, 13, 50770, 50770, 682, 661, 2283, 11, 309, 2516, 867, 544, 10938, 420, 867, 544, 12450, 294, 264, 1389, 295, 29280, 50952, 50952, 2539, 337, 257, 3479, 281, 1466, 1340, 5347, 281, 6255, 293, 4882, 13, 51214, 51214, 407, 257, 688, 295, 561, 366, 588, 1702, 281, 2642, 22865, 490, 341, 11, 1954, 11, 457, 6255, 2642, 51402, 51402, 322, 11, 293, 4882, 2642, 322, 9303, 293, 41766, 5223, 11, 12288, 11, 12288, 11, 12288, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12350284031459263, "compression_ratio": 1.7738095238095237, "no_speech_prob": 8.74035176821053e-05}, {"id": 6, "seek": 2704, "start": 38.8, "end": 44.04, "text": " learning for a machine to learn anything compared to humans and animals.", "tokens": [50364, 10493, 295, 439, 295, 264, 7512, 300, 321, 764, 965, 366, 709, 11, 709, 5324, 813, 1203, 50628, 50628, 321, 11441, 294, 6255, 293, 4882, 13, 50770, 50770, 682, 661, 2283, 11, 309, 2516, 867, 544, 10938, 420, 867, 544, 12450, 294, 264, 1389, 295, 29280, 50952, 50952, 2539, 337, 257, 3479, 281, 1466, 1340, 5347, 281, 6255, 293, 4882, 13, 51214, 51214, 407, 257, 688, 295, 561, 366, 588, 1702, 281, 2642, 22865, 490, 341, 11, 1954, 11, 457, 6255, 2642, 51402, 51402, 322, 11, 293, 4882, 2642, 322, 9303, 293, 41766, 5223, 11, 12288, 11, 12288, 11, 12288, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12350284031459263, "compression_ratio": 1.7738095238095237, "no_speech_prob": 8.74035176821053e-05}, {"id": 7, "seek": 2704, "start": 44.04, "end": 47.8, "text": " So a lot of people are very quick to draw conclusions from this, oh, but humans draw", "tokens": [50364, 10493, 295, 439, 295, 264, 7512, 300, 321, 764, 965, 366, 709, 11, 709, 5324, 813, 1203, 50628, 50628, 321, 11441, 294, 6255, 293, 4882, 13, 50770, 50770, 682, 661, 2283, 11, 309, 2516, 867, 544, 10938, 420, 867, 544, 12450, 294, 264, 1389, 295, 29280, 50952, 50952, 2539, 337, 257, 3479, 281, 1466, 1340, 5347, 281, 6255, 293, 4882, 13, 51214, 51214, 407, 257, 688, 295, 561, 366, 588, 1702, 281, 2642, 22865, 490, 341, 11, 1954, 11, 457, 6255, 2642, 51402, 51402, 322, 11, 293, 4882, 2642, 322, 9303, 293, 41766, 5223, 11, 12288, 11, 12288, 11, 12288, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12350284031459263, "compression_ratio": 1.7738095238095237, "no_speech_prob": 8.74035176821053e-05}, {"id": 8, "seek": 2704, "start": 47.8, "end": 55.28, "text": " on, and animals draw on evolution and innate behavior, blah, blah, blah.", "tokens": [50364, 10493, 295, 439, 295, 264, 7512, 300, 321, 764, 965, 366, 709, 11, 709, 5324, 813, 1203, 50628, 50628, 321, 11441, 294, 6255, 293, 4882, 13, 50770, 50770, 682, 661, 2283, 11, 309, 2516, 867, 544, 10938, 420, 867, 544, 12450, 294, 264, 1389, 295, 29280, 50952, 50952, 2539, 337, 257, 3479, 281, 1466, 1340, 5347, 281, 6255, 293, 4882, 13, 51214, 51214, 407, 257, 688, 295, 561, 366, 588, 1702, 281, 2642, 22865, 490, 341, 11, 1954, 11, 457, 6255, 2642, 51402, 51402, 322, 11, 293, 4882, 2642, 322, 9303, 293, 41766, 5223, 11, 12288, 11, 12288, 11, 12288, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12350284031459263, "compression_ratio": 1.7738095238095237, "no_speech_prob": 8.74035176821053e-05}, {"id": 9, "seek": 5528, "start": 55.28, "end": 57.44, "text": " But I think it's just more efficient learning.", "tokens": [50364, 583, 286, 519, 309, 311, 445, 544, 7148, 2539, 13, 50472, 50472, 400, 1071, 733, 295, 5480, 281, 341, 307, 321, 2642, 322, 527, 3678, 3601, 466, 264, 50830, 50830, 1002, 11, 293, 300, 311, 2074, 13, 50904, 50904, 440, 955, 1168, 286, 478, 3365, 510, 307, 11, 689, 775, 300, 808, 490, 30, 51020, 51020, 1012, 360, 321, 20001, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 4045, 505, 281, 51168, 51168, 1466, 257, 777, 5633, 588, 2661, 30, 51410, 51410, 407, 439, 264, 2245, 300, 291, 536, 294, 8496, 3479, 2539, 965, 11, 1920, 439, 295, 309, 307, 51614, 51614, 3462, 281, 46533, 2539, 11, 293, 321, 439, 458, 437, 300, 1355, 11, 558, 11, 281, 976, 11, 718, 311, 584, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.13961165080698887, "compression_ratio": 1.725752508361204, "no_speech_prob": 4.46752346761059e-05}, {"id": 10, "seek": 5528, "start": 57.44, "end": 64.6, "text": " And another kind of reaction to this is we draw on our background knowledge about the", "tokens": [50364, 583, 286, 519, 309, 311, 445, 544, 7148, 2539, 13, 50472, 50472, 400, 1071, 733, 295, 5480, 281, 341, 307, 321, 2642, 322, 527, 3678, 3601, 466, 264, 50830, 50830, 1002, 11, 293, 300, 311, 2074, 13, 50904, 50904, 440, 955, 1168, 286, 478, 3365, 510, 307, 11, 689, 775, 300, 808, 490, 30, 51020, 51020, 1012, 360, 321, 20001, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 4045, 505, 281, 51168, 51168, 1466, 257, 777, 5633, 588, 2661, 30, 51410, 51410, 407, 439, 264, 2245, 300, 291, 536, 294, 8496, 3479, 2539, 965, 11, 1920, 439, 295, 309, 307, 51614, 51614, 3462, 281, 46533, 2539, 11, 293, 321, 439, 458, 437, 300, 1355, 11, 558, 11, 281, 976, 11, 718, 311, 584, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.13961165080698887, "compression_ratio": 1.725752508361204, "no_speech_prob": 4.46752346761059e-05}, {"id": 11, "seek": 5528, "start": 64.6, "end": 66.08, "text": " world, and that's true.", "tokens": [50364, 583, 286, 519, 309, 311, 445, 544, 7148, 2539, 13, 50472, 50472, 400, 1071, 733, 295, 5480, 281, 341, 307, 321, 2642, 322, 527, 3678, 3601, 466, 264, 50830, 50830, 1002, 11, 293, 300, 311, 2074, 13, 50904, 50904, 440, 955, 1168, 286, 478, 3365, 510, 307, 11, 689, 775, 300, 808, 490, 30, 51020, 51020, 1012, 360, 321, 20001, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 4045, 505, 281, 51168, 51168, 1466, 257, 777, 5633, 588, 2661, 30, 51410, 51410, 407, 439, 264, 2245, 300, 291, 536, 294, 8496, 3479, 2539, 965, 11, 1920, 439, 295, 309, 307, 51614, 51614, 3462, 281, 46533, 2539, 11, 293, 321, 439, 458, 437, 300, 1355, 11, 558, 11, 281, 976, 11, 718, 311, 584, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.13961165080698887, "compression_ratio": 1.725752508361204, "no_speech_prob": 4.46752346761059e-05}, {"id": 12, "seek": 5528, "start": 66.08, "end": 68.4, "text": " The big question I'm asking here is, where does that come from?", "tokens": [50364, 583, 286, 519, 309, 311, 445, 544, 7148, 2539, 13, 50472, 50472, 400, 1071, 733, 295, 5480, 281, 341, 307, 321, 2642, 322, 527, 3678, 3601, 466, 264, 50830, 50830, 1002, 11, 293, 300, 311, 2074, 13, 50904, 50904, 440, 955, 1168, 286, 478, 3365, 510, 307, 11, 689, 775, 300, 808, 490, 30, 51020, 51020, 1012, 360, 321, 20001, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 4045, 505, 281, 51168, 51168, 1466, 257, 777, 5633, 588, 2661, 30, 51410, 51410, 407, 439, 264, 2245, 300, 291, 536, 294, 8496, 3479, 2539, 965, 11, 1920, 439, 295, 309, 307, 51614, 51614, 3462, 281, 46533, 2539, 11, 293, 321, 439, 458, 437, 300, 1355, 11, 558, 11, 281, 976, 11, 718, 311, 584, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.13961165080698887, "compression_ratio": 1.725752508361204, "no_speech_prob": 4.46752346761059e-05}, {"id": 13, "seek": 5528, "start": 68.4, "end": 71.36, "text": " How do we acquire all the background knowledge we have about the world that allows us to", "tokens": [50364, 583, 286, 519, 309, 311, 445, 544, 7148, 2539, 13, 50472, 50472, 400, 1071, 733, 295, 5480, 281, 341, 307, 321, 2642, 322, 527, 3678, 3601, 466, 264, 50830, 50830, 1002, 11, 293, 300, 311, 2074, 13, 50904, 50904, 440, 955, 1168, 286, 478, 3365, 510, 307, 11, 689, 775, 300, 808, 490, 30, 51020, 51020, 1012, 360, 321, 20001, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 4045, 505, 281, 51168, 51168, 1466, 257, 777, 5633, 588, 2661, 30, 51410, 51410, 407, 439, 264, 2245, 300, 291, 536, 294, 8496, 3479, 2539, 965, 11, 1920, 439, 295, 309, 307, 51614, 51614, 3462, 281, 46533, 2539, 11, 293, 321, 439, 458, 437, 300, 1355, 11, 558, 11, 281, 976, 11, 718, 311, 584, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.13961165080698887, "compression_ratio": 1.725752508361204, "no_speech_prob": 4.46752346761059e-05}, {"id": 14, "seek": 5528, "start": 71.36, "end": 76.2, "text": " learn a new task very quickly?", "tokens": [50364, 583, 286, 519, 309, 311, 445, 544, 7148, 2539, 13, 50472, 50472, 400, 1071, 733, 295, 5480, 281, 341, 307, 321, 2642, 322, 527, 3678, 3601, 466, 264, 50830, 50830, 1002, 11, 293, 300, 311, 2074, 13, 50904, 50904, 440, 955, 1168, 286, 478, 3365, 510, 307, 11, 689, 775, 300, 808, 490, 30, 51020, 51020, 1012, 360, 321, 20001, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 4045, 505, 281, 51168, 51168, 1466, 257, 777, 5633, 588, 2661, 30, 51410, 51410, 407, 439, 264, 2245, 300, 291, 536, 294, 8496, 3479, 2539, 965, 11, 1920, 439, 295, 309, 307, 51614, 51614, 3462, 281, 46533, 2539, 11, 293, 321, 439, 458, 437, 300, 1355, 11, 558, 11, 281, 976, 11, 718, 311, 584, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.13961165080698887, "compression_ratio": 1.725752508361204, "no_speech_prob": 4.46752346761059e-05}, {"id": 15, "seek": 5528, "start": 76.2, "end": 80.28, "text": " So all the success that you see in practical machine learning today, almost all of it is", "tokens": [50364, 583, 286, 519, 309, 311, 445, 544, 7148, 2539, 13, 50472, 50472, 400, 1071, 733, 295, 5480, 281, 341, 307, 321, 2642, 322, 527, 3678, 3601, 466, 264, 50830, 50830, 1002, 11, 293, 300, 311, 2074, 13, 50904, 50904, 440, 955, 1168, 286, 478, 3365, 510, 307, 11, 689, 775, 300, 808, 490, 30, 51020, 51020, 1012, 360, 321, 20001, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 4045, 505, 281, 51168, 51168, 1466, 257, 777, 5633, 588, 2661, 30, 51410, 51410, 407, 439, 264, 2245, 300, 291, 536, 294, 8496, 3479, 2539, 965, 11, 1920, 439, 295, 309, 307, 51614, 51614, 3462, 281, 46533, 2539, 11, 293, 321, 439, 458, 437, 300, 1355, 11, 558, 11, 281, 976, 11, 718, 311, 584, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.13961165080698887, "compression_ratio": 1.725752508361204, "no_speech_prob": 4.46752346761059e-05}, {"id": 16, "seek": 5528, "start": 80.28, "end": 85.04, "text": " due to supervised learning, and we all know what that means, right, to give, let's say", "tokens": [50364, 583, 286, 519, 309, 311, 445, 544, 7148, 2539, 13, 50472, 50472, 400, 1071, 733, 295, 5480, 281, 341, 307, 321, 2642, 322, 527, 3678, 3601, 466, 264, 50830, 50830, 1002, 11, 293, 300, 311, 2074, 13, 50904, 50904, 440, 955, 1168, 286, 478, 3365, 510, 307, 11, 689, 775, 300, 808, 490, 30, 51020, 51020, 1012, 360, 321, 20001, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 4045, 505, 281, 51168, 51168, 1466, 257, 777, 5633, 588, 2661, 30, 51410, 51410, 407, 439, 264, 2245, 300, 291, 536, 294, 8496, 3479, 2539, 965, 11, 1920, 439, 295, 309, 307, 51614, 51614, 3462, 281, 46533, 2539, 11, 293, 321, 439, 458, 437, 300, 1355, 11, 558, 11, 281, 976, 11, 718, 311, 584, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.13961165080698887, "compression_ratio": 1.725752508361204, "no_speech_prob": 4.46752346761059e-05}, {"id": 17, "seek": 8504, "start": 85.04, "end": 88.28, "text": " you want to do image recognition, you give an image to the machine, and if the machine", "tokens": [50364, 291, 528, 281, 360, 3256, 11150, 11, 291, 976, 364, 3256, 281, 264, 3479, 11, 293, 498, 264, 3479, 50526, 50526, 1177, 380, 976, 291, 264, 558, 1867, 11, 291, 980, 309, 437, 264, 558, 1867, 307, 11, 293, 309, 4369, 82, 50704, 50704, 1080, 6920, 9834, 1228, 342, 8997, 2750, 16235, 23475, 420, 746, 411, 300, 11, 257, 16235, 12, 6032, 50974, 50974, 3170, 281, 483, 264, 5598, 4966, 281, 264, 472, 291, 528, 13, 51214, 51214, 440, 2372, 295, 1589, 291, 976, 281, 264, 3479, 412, 633, 7308, 307, 7226, 1359, 13, 51418, 51418, 2754, 294, 264, 1389, 295, 746, 411, 29903, 31890, 11, 597, 575, 502, 11, 1360, 10479, 11, 291, 980, 309, 437, 51608, 51608, 264, 3006, 7719, 307, 11, 293, 300, 311, 1570, 813, 1266, 9239, 295, 1589, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.08819838537686113, "compression_ratio": 1.881578947368421, "no_speech_prob": 2.0780838895007037e-05}, {"id": 18, "seek": 8504, "start": 88.28, "end": 91.84, "text": " doesn't give you the right answer, you tell it what the right answer is, and it adjusts", "tokens": [50364, 291, 528, 281, 360, 3256, 11150, 11, 291, 976, 364, 3256, 281, 264, 3479, 11, 293, 498, 264, 3479, 50526, 50526, 1177, 380, 976, 291, 264, 558, 1867, 11, 291, 980, 309, 437, 264, 558, 1867, 307, 11, 293, 309, 4369, 82, 50704, 50704, 1080, 6920, 9834, 1228, 342, 8997, 2750, 16235, 23475, 420, 746, 411, 300, 11, 257, 16235, 12, 6032, 50974, 50974, 3170, 281, 483, 264, 5598, 4966, 281, 264, 472, 291, 528, 13, 51214, 51214, 440, 2372, 295, 1589, 291, 976, 281, 264, 3479, 412, 633, 7308, 307, 7226, 1359, 13, 51418, 51418, 2754, 294, 264, 1389, 295, 746, 411, 29903, 31890, 11, 597, 575, 502, 11, 1360, 10479, 11, 291, 980, 309, 437, 51608, 51608, 264, 3006, 7719, 307, 11, 293, 300, 311, 1570, 813, 1266, 9239, 295, 1589, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.08819838537686113, "compression_ratio": 1.881578947368421, "no_speech_prob": 2.0780838895007037e-05}, {"id": 19, "seek": 8504, "start": 91.84, "end": 97.24000000000001, "text": " its internal parameters using stochastic gradient descent or something like that, a gradient-based", "tokens": [50364, 291, 528, 281, 360, 3256, 11150, 11, 291, 976, 364, 3256, 281, 264, 3479, 11, 293, 498, 264, 3479, 50526, 50526, 1177, 380, 976, 291, 264, 558, 1867, 11, 291, 980, 309, 437, 264, 558, 1867, 307, 11, 293, 309, 4369, 82, 50704, 50704, 1080, 6920, 9834, 1228, 342, 8997, 2750, 16235, 23475, 420, 746, 411, 300, 11, 257, 16235, 12, 6032, 50974, 50974, 3170, 281, 483, 264, 5598, 4966, 281, 264, 472, 291, 528, 13, 51214, 51214, 440, 2372, 295, 1589, 291, 976, 281, 264, 3479, 412, 633, 7308, 307, 7226, 1359, 13, 51418, 51418, 2754, 294, 264, 1389, 295, 746, 411, 29903, 31890, 11, 597, 575, 502, 11, 1360, 10479, 11, 291, 980, 309, 437, 51608, 51608, 264, 3006, 7719, 307, 11, 293, 300, 311, 1570, 813, 1266, 9239, 295, 1589, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.08819838537686113, "compression_ratio": 1.881578947368421, "no_speech_prob": 2.0780838895007037e-05}, {"id": 20, "seek": 8504, "start": 97.24000000000001, "end": 102.04, "text": " method to get the output closer to the one you want.", "tokens": [50364, 291, 528, 281, 360, 3256, 11150, 11, 291, 976, 364, 3256, 281, 264, 3479, 11, 293, 498, 264, 3479, 50526, 50526, 1177, 380, 976, 291, 264, 558, 1867, 11, 291, 980, 309, 437, 264, 558, 1867, 307, 11, 293, 309, 4369, 82, 50704, 50704, 1080, 6920, 9834, 1228, 342, 8997, 2750, 16235, 23475, 420, 746, 411, 300, 11, 257, 16235, 12, 6032, 50974, 50974, 3170, 281, 483, 264, 5598, 4966, 281, 264, 472, 291, 528, 13, 51214, 51214, 440, 2372, 295, 1589, 291, 976, 281, 264, 3479, 412, 633, 7308, 307, 7226, 1359, 13, 51418, 51418, 2754, 294, 264, 1389, 295, 746, 411, 29903, 31890, 11, 597, 575, 502, 11, 1360, 10479, 11, 291, 980, 309, 437, 51608, 51608, 264, 3006, 7719, 307, 11, 293, 300, 311, 1570, 813, 1266, 9239, 295, 1589, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.08819838537686113, "compression_ratio": 1.881578947368421, "no_speech_prob": 2.0780838895007037e-05}, {"id": 21, "seek": 8504, "start": 102.04, "end": 106.12, "text": " The amount of information you give to the machine at every trial is relatively small.", "tokens": [50364, 291, 528, 281, 360, 3256, 11150, 11, 291, 976, 364, 3256, 281, 264, 3479, 11, 293, 498, 264, 3479, 50526, 50526, 1177, 380, 976, 291, 264, 558, 1867, 11, 291, 980, 309, 437, 264, 558, 1867, 307, 11, 293, 309, 4369, 82, 50704, 50704, 1080, 6920, 9834, 1228, 342, 8997, 2750, 16235, 23475, 420, 746, 411, 300, 11, 257, 16235, 12, 6032, 50974, 50974, 3170, 281, 483, 264, 5598, 4966, 281, 264, 472, 291, 528, 13, 51214, 51214, 440, 2372, 295, 1589, 291, 976, 281, 264, 3479, 412, 633, 7308, 307, 7226, 1359, 13, 51418, 51418, 2754, 294, 264, 1389, 295, 746, 411, 29903, 31890, 11, 597, 575, 502, 11, 1360, 10479, 11, 291, 980, 309, 437, 51608, 51608, 264, 3006, 7719, 307, 11, 293, 300, 311, 1570, 813, 1266, 9239, 295, 1589, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.08819838537686113, "compression_ratio": 1.881578947368421, "no_speech_prob": 2.0780838895007037e-05}, {"id": 22, "seek": 8504, "start": 106.12, "end": 109.92, "text": " Even in the case of something like ImageNet, which has 1,000 categories, you tell it what", "tokens": [50364, 291, 528, 281, 360, 3256, 11150, 11, 291, 976, 364, 3256, 281, 264, 3479, 11, 293, 498, 264, 3479, 50526, 50526, 1177, 380, 976, 291, 264, 558, 1867, 11, 291, 980, 309, 437, 264, 558, 1867, 307, 11, 293, 309, 4369, 82, 50704, 50704, 1080, 6920, 9834, 1228, 342, 8997, 2750, 16235, 23475, 420, 746, 411, 300, 11, 257, 16235, 12, 6032, 50974, 50974, 3170, 281, 483, 264, 5598, 4966, 281, 264, 472, 291, 528, 13, 51214, 51214, 440, 2372, 295, 1589, 291, 976, 281, 264, 3479, 412, 633, 7308, 307, 7226, 1359, 13, 51418, 51418, 2754, 294, 264, 1389, 295, 746, 411, 29903, 31890, 11, 597, 575, 502, 11, 1360, 10479, 11, 291, 980, 309, 437, 51608, 51608, 264, 3006, 7719, 307, 11, 293, 300, 311, 1570, 813, 1266, 9239, 295, 1589, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.08819838537686113, "compression_ratio": 1.881578947368421, "no_speech_prob": 2.0780838895007037e-05}, {"id": 23, "seek": 8504, "start": 109.92, "end": 113.96000000000001, "text": " the correct category is, and that's less than 10 bits of information.", "tokens": [50364, 291, 528, 281, 360, 3256, 11150, 11, 291, 976, 364, 3256, 281, 264, 3479, 11, 293, 498, 264, 3479, 50526, 50526, 1177, 380, 976, 291, 264, 558, 1867, 11, 291, 980, 309, 437, 264, 558, 1867, 307, 11, 293, 309, 4369, 82, 50704, 50704, 1080, 6920, 9834, 1228, 342, 8997, 2750, 16235, 23475, 420, 746, 411, 300, 11, 257, 16235, 12, 6032, 50974, 50974, 3170, 281, 483, 264, 5598, 4966, 281, 264, 472, 291, 528, 13, 51214, 51214, 440, 2372, 295, 1589, 291, 976, 281, 264, 3479, 412, 633, 7308, 307, 7226, 1359, 13, 51418, 51418, 2754, 294, 264, 1389, 295, 746, 411, 29903, 31890, 11, 597, 575, 502, 11, 1360, 10479, 11, 291, 980, 309, 437, 51608, 51608, 264, 3006, 7719, 307, 11, 293, 300, 311, 1570, 813, 1266, 9239, 295, 1589, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.08819838537686113, "compression_ratio": 1.881578947368421, "no_speech_prob": 2.0780838895007037e-05}, {"id": 24, "seek": 11396, "start": 113.96, "end": 117.96, "text": " So you're asking the machine to predict a very small amount of information every time.", "tokens": [50364, 407, 291, 434, 3365, 264, 3479, 281, 6069, 257, 588, 1359, 2372, 295, 1589, 633, 565, 13, 50564, 50564, 1018, 257, 1874, 11, 291, 643, 257, 688, 295, 10938, 281, 853, 293, 360, 1340, 13, 50736, 50736, 42116, 9382, 2539, 307, 754, 5324, 13, 50786, 50786, 407, 29280, 2539, 307, 257, 2590, 689, 291, 500, 380, 980, 264, 3479, 264, 3006, 1867, 11, 50932, 50932, 291, 787, 980, 309, 1968, 264, 1867, 291, 5258, 390, 665, 420, 1578, 13, 51064, 51064, 1033, 30, 51114, 51114, 400, 456, 307, 411, 257, 6081, 1254, 295, 29280, 2539, 689, 437, 264, 3479, 8194, 958, 51318, 51318, 565, 1823, 5946, 322, 264, 1867, 309, 658, 11, 293, 550, 456, 307, 257, 1154, 295, 16197, 11, 33122, 11, 51524, 51524, 1030, 11458, 13, 51574, 51574, 583, 754, 1553, 1417, 466, 341, 11, 498, 291, 574, 412, 577, 938, 309, 2516, 754, 281, 1466, 337, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16193881066016902, "compression_ratio": 1.8991097922848665, "no_speech_prob": 5.254687948763603e-06}, {"id": 25, "seek": 11396, "start": 117.96, "end": 121.39999999999999, "text": " As a result, you need a lot of samples to try and do anything.", "tokens": [50364, 407, 291, 434, 3365, 264, 3479, 281, 6069, 257, 588, 1359, 2372, 295, 1589, 633, 565, 13, 50564, 50564, 1018, 257, 1874, 11, 291, 643, 257, 688, 295, 10938, 281, 853, 293, 360, 1340, 13, 50736, 50736, 42116, 9382, 2539, 307, 754, 5324, 13, 50786, 50786, 407, 29280, 2539, 307, 257, 2590, 689, 291, 500, 380, 980, 264, 3479, 264, 3006, 1867, 11, 50932, 50932, 291, 787, 980, 309, 1968, 264, 1867, 291, 5258, 390, 665, 420, 1578, 13, 51064, 51064, 1033, 30, 51114, 51114, 400, 456, 307, 411, 257, 6081, 1254, 295, 29280, 2539, 689, 437, 264, 3479, 8194, 958, 51318, 51318, 565, 1823, 5946, 322, 264, 1867, 309, 658, 11, 293, 550, 456, 307, 257, 1154, 295, 16197, 11, 33122, 11, 51524, 51524, 1030, 11458, 13, 51574, 51574, 583, 754, 1553, 1417, 466, 341, 11, 498, 291, 574, 412, 577, 938, 309, 2516, 754, 281, 1466, 337, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16193881066016902, "compression_ratio": 1.8991097922848665, "no_speech_prob": 5.254687948763603e-06}, {"id": 26, "seek": 11396, "start": 121.39999999999999, "end": 122.39999999999999, "text": " Reinforcement learning is even worse.", "tokens": [50364, 407, 291, 434, 3365, 264, 3479, 281, 6069, 257, 588, 1359, 2372, 295, 1589, 633, 565, 13, 50564, 50564, 1018, 257, 1874, 11, 291, 643, 257, 688, 295, 10938, 281, 853, 293, 360, 1340, 13, 50736, 50736, 42116, 9382, 2539, 307, 754, 5324, 13, 50786, 50786, 407, 29280, 2539, 307, 257, 2590, 689, 291, 500, 380, 980, 264, 3479, 264, 3006, 1867, 11, 50932, 50932, 291, 787, 980, 309, 1968, 264, 1867, 291, 5258, 390, 665, 420, 1578, 13, 51064, 51064, 1033, 30, 51114, 51114, 400, 456, 307, 411, 257, 6081, 1254, 295, 29280, 2539, 689, 437, 264, 3479, 8194, 958, 51318, 51318, 565, 1823, 5946, 322, 264, 1867, 309, 658, 11, 293, 550, 456, 307, 257, 1154, 295, 16197, 11, 33122, 11, 51524, 51524, 1030, 11458, 13, 51574, 51574, 583, 754, 1553, 1417, 466, 341, 11, 498, 291, 574, 412, 577, 938, 309, 2516, 754, 281, 1466, 337, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16193881066016902, "compression_ratio": 1.8991097922848665, "no_speech_prob": 5.254687948763603e-06}, {"id": 27, "seek": 11396, "start": 122.39999999999999, "end": 125.32, "text": " So reinforcement learning is a situation where you don't tell the machine the correct answer,", "tokens": [50364, 407, 291, 434, 3365, 264, 3479, 281, 6069, 257, 588, 1359, 2372, 295, 1589, 633, 565, 13, 50564, 50564, 1018, 257, 1874, 11, 291, 643, 257, 688, 295, 10938, 281, 853, 293, 360, 1340, 13, 50736, 50736, 42116, 9382, 2539, 307, 754, 5324, 13, 50786, 50786, 407, 29280, 2539, 307, 257, 2590, 689, 291, 500, 380, 980, 264, 3479, 264, 3006, 1867, 11, 50932, 50932, 291, 787, 980, 309, 1968, 264, 1867, 291, 5258, 390, 665, 420, 1578, 13, 51064, 51064, 1033, 30, 51114, 51114, 400, 456, 307, 411, 257, 6081, 1254, 295, 29280, 2539, 689, 437, 264, 3479, 8194, 958, 51318, 51318, 565, 1823, 5946, 322, 264, 1867, 309, 658, 11, 293, 550, 456, 307, 257, 1154, 295, 16197, 11, 33122, 11, 51524, 51524, 1030, 11458, 13, 51574, 51574, 583, 754, 1553, 1417, 466, 341, 11, 498, 291, 574, 412, 577, 938, 309, 2516, 754, 281, 1466, 337, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16193881066016902, "compression_ratio": 1.8991097922848665, "no_speech_prob": 5.254687948763603e-06}, {"id": 28, "seek": 11396, "start": 125.32, "end": 127.96, "text": " you only tell it whether the answer you produce was good or bad.", "tokens": [50364, 407, 291, 434, 3365, 264, 3479, 281, 6069, 257, 588, 1359, 2372, 295, 1589, 633, 565, 13, 50564, 50564, 1018, 257, 1874, 11, 291, 643, 257, 688, 295, 10938, 281, 853, 293, 360, 1340, 13, 50736, 50736, 42116, 9382, 2539, 307, 754, 5324, 13, 50786, 50786, 407, 29280, 2539, 307, 257, 2590, 689, 291, 500, 380, 980, 264, 3479, 264, 3006, 1867, 11, 50932, 50932, 291, 787, 980, 309, 1968, 264, 1867, 291, 5258, 390, 665, 420, 1578, 13, 51064, 51064, 1033, 30, 51114, 51114, 400, 456, 307, 411, 257, 6081, 1254, 295, 29280, 2539, 689, 437, 264, 3479, 8194, 958, 51318, 51318, 565, 1823, 5946, 322, 264, 1867, 309, 658, 11, 293, 550, 456, 307, 257, 1154, 295, 16197, 11, 33122, 11, 51524, 51524, 1030, 11458, 13, 51574, 51574, 583, 754, 1553, 1417, 466, 341, 11, 498, 291, 574, 412, 577, 938, 309, 2516, 754, 281, 1466, 337, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16193881066016902, "compression_ratio": 1.8991097922848665, "no_speech_prob": 5.254687948763603e-06}, {"id": 29, "seek": 11396, "start": 127.96, "end": 128.95999999999998, "text": " Okay?", "tokens": [50364, 407, 291, 434, 3365, 264, 3479, 281, 6069, 257, 588, 1359, 2372, 295, 1589, 633, 565, 13, 50564, 50564, 1018, 257, 1874, 11, 291, 643, 257, 688, 295, 10938, 281, 853, 293, 360, 1340, 13, 50736, 50736, 42116, 9382, 2539, 307, 754, 5324, 13, 50786, 50786, 407, 29280, 2539, 307, 257, 2590, 689, 291, 500, 380, 980, 264, 3479, 264, 3006, 1867, 11, 50932, 50932, 291, 787, 980, 309, 1968, 264, 1867, 291, 5258, 390, 665, 420, 1578, 13, 51064, 51064, 1033, 30, 51114, 51114, 400, 456, 307, 411, 257, 6081, 1254, 295, 29280, 2539, 689, 437, 264, 3479, 8194, 958, 51318, 51318, 565, 1823, 5946, 322, 264, 1867, 309, 658, 11, 293, 550, 456, 307, 257, 1154, 295, 16197, 11, 33122, 11, 51524, 51524, 1030, 11458, 13, 51574, 51574, 583, 754, 1553, 1417, 466, 341, 11, 498, 291, 574, 412, 577, 938, 309, 2516, 754, 281, 1466, 337, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16193881066016902, "compression_ratio": 1.8991097922848665, "no_speech_prob": 5.254687948763603e-06}, {"id": 30, "seek": 11396, "start": 128.95999999999998, "end": 133.04, "text": " And there is like a harder form of reinforcement learning where what the machine sees next", "tokens": [50364, 407, 291, 434, 3365, 264, 3479, 281, 6069, 257, 588, 1359, 2372, 295, 1589, 633, 565, 13, 50564, 50564, 1018, 257, 1874, 11, 291, 643, 257, 688, 295, 10938, 281, 853, 293, 360, 1340, 13, 50736, 50736, 42116, 9382, 2539, 307, 754, 5324, 13, 50786, 50786, 407, 29280, 2539, 307, 257, 2590, 689, 291, 500, 380, 980, 264, 3479, 264, 3006, 1867, 11, 50932, 50932, 291, 787, 980, 309, 1968, 264, 1867, 291, 5258, 390, 665, 420, 1578, 13, 51064, 51064, 1033, 30, 51114, 51114, 400, 456, 307, 411, 257, 6081, 1254, 295, 29280, 2539, 689, 437, 264, 3479, 8194, 958, 51318, 51318, 565, 1823, 5946, 322, 264, 1867, 309, 658, 11, 293, 550, 456, 307, 257, 1154, 295, 16197, 11, 33122, 11, 51524, 51524, 1030, 11458, 13, 51574, 51574, 583, 754, 1553, 1417, 466, 341, 11, 498, 291, 574, 412, 577, 938, 309, 2516, 754, 281, 1466, 337, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16193881066016902, "compression_ratio": 1.8991097922848665, "no_speech_prob": 5.254687948763603e-06}, {"id": 31, "seek": 11396, "start": 133.04, "end": 137.16, "text": " time step depends on the answer it got, and then there is a problem of exploration, exploitation,", "tokens": [50364, 407, 291, 434, 3365, 264, 3479, 281, 6069, 257, 588, 1359, 2372, 295, 1589, 633, 565, 13, 50564, 50564, 1018, 257, 1874, 11, 291, 643, 257, 688, 295, 10938, 281, 853, 293, 360, 1340, 13, 50736, 50736, 42116, 9382, 2539, 307, 754, 5324, 13, 50786, 50786, 407, 29280, 2539, 307, 257, 2590, 689, 291, 500, 380, 980, 264, 3479, 264, 3006, 1867, 11, 50932, 50932, 291, 787, 980, 309, 1968, 264, 1867, 291, 5258, 390, 665, 420, 1578, 13, 51064, 51064, 1033, 30, 51114, 51114, 400, 456, 307, 411, 257, 6081, 1254, 295, 29280, 2539, 689, 437, 264, 3479, 8194, 958, 51318, 51318, 565, 1823, 5946, 322, 264, 1867, 309, 658, 11, 293, 550, 456, 307, 257, 1154, 295, 16197, 11, 33122, 11, 51524, 51524, 1030, 11458, 13, 51574, 51574, 583, 754, 1553, 1417, 466, 341, 11, 498, 291, 574, 412, 577, 938, 309, 2516, 754, 281, 1466, 337, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16193881066016902, "compression_ratio": 1.8991097922848665, "no_speech_prob": 5.254687948763603e-06}, {"id": 32, "seek": 11396, "start": 137.16, "end": 138.16, "text": " et cetera.", "tokens": [50364, 407, 291, 434, 3365, 264, 3479, 281, 6069, 257, 588, 1359, 2372, 295, 1589, 633, 565, 13, 50564, 50564, 1018, 257, 1874, 11, 291, 643, 257, 688, 295, 10938, 281, 853, 293, 360, 1340, 13, 50736, 50736, 42116, 9382, 2539, 307, 754, 5324, 13, 50786, 50786, 407, 29280, 2539, 307, 257, 2590, 689, 291, 500, 380, 980, 264, 3479, 264, 3006, 1867, 11, 50932, 50932, 291, 787, 980, 309, 1968, 264, 1867, 291, 5258, 390, 665, 420, 1578, 13, 51064, 51064, 1033, 30, 51114, 51114, 400, 456, 307, 411, 257, 6081, 1254, 295, 29280, 2539, 689, 437, 264, 3479, 8194, 958, 51318, 51318, 565, 1823, 5946, 322, 264, 1867, 309, 658, 11, 293, 550, 456, 307, 257, 1154, 295, 16197, 11, 33122, 11, 51524, 51524, 1030, 11458, 13, 51574, 51574, 583, 754, 1553, 1417, 466, 341, 11, 498, 291, 574, 412, 577, 938, 309, 2516, 754, 281, 1466, 337, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16193881066016902, "compression_ratio": 1.8991097922848665, "no_speech_prob": 5.254687948763603e-06}, {"id": 33, "seek": 11396, "start": 138.16, "end": 143.64, "text": " But even without talking about this, if you look at how long it takes even to learn for", "tokens": [50364, 407, 291, 434, 3365, 264, 3479, 281, 6069, 257, 588, 1359, 2372, 295, 1589, 633, 565, 13, 50564, 50564, 1018, 257, 1874, 11, 291, 643, 257, 688, 295, 10938, 281, 853, 293, 360, 1340, 13, 50736, 50736, 42116, 9382, 2539, 307, 754, 5324, 13, 50786, 50786, 407, 29280, 2539, 307, 257, 2590, 689, 291, 500, 380, 980, 264, 3479, 264, 3006, 1867, 11, 50932, 50932, 291, 787, 980, 309, 1968, 264, 1867, 291, 5258, 390, 665, 420, 1578, 13, 51064, 51064, 1033, 30, 51114, 51114, 400, 456, 307, 411, 257, 6081, 1254, 295, 29280, 2539, 689, 437, 264, 3479, 8194, 958, 51318, 51318, 565, 1823, 5946, 322, 264, 1867, 309, 658, 11, 293, 550, 456, 307, 257, 1154, 295, 16197, 11, 33122, 11, 51524, 51524, 1030, 11458, 13, 51574, 51574, 583, 754, 1553, 1417, 466, 341, 11, 498, 291, 574, 412, 577, 938, 309, 2516, 754, 281, 1466, 337, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16193881066016902, "compression_ratio": 1.8991097922848665, "no_speech_prob": 5.254687948763603e-06}, {"id": 34, "seek": 14364, "start": 143.64, "end": 147.04, "text": " a machine to learn to play, it's a convolutional net that it just learns by reinforcement learning", "tokens": [50364, 257, 3479, 281, 1466, 281, 862, 11, 309, 311, 257, 45216, 304, 2533, 300, 309, 445, 27152, 538, 29280, 2539, 50534, 50534, 281, 862, 364, 41381, 1216, 11, 588, 2199, 41381, 1216, 490, 264, 13626, 82, 13, 50740, 50740, 467, 2516, 264, 10344, 322, 4274, 295, 4688, 2496, 295, 3097, 281, 2524, 264, 3389, 300, 604, 50936, 50936, 1952, 393, 2524, 294, 466, 2119, 2077, 13, 51098, 51098, 3950, 8379, 767, 483, 281, 1687, 18796, 3389, 11, 457, 309, 2516, 552, 257, 938, 565, 13, 51404, 51404, 440, 1037, 1185, 300, 390, 7126, 538, 14895, 44, 471, 293, 264, 472, 300, 390, 7126, 538, 4384, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.12330542573141395, "compression_ratio": 1.6923076923076923, "no_speech_prob": 3.3203366911038756e-05}, {"id": 35, "seek": 14364, "start": 147.04, "end": 151.16, "text": " to play an Atari game, very simple Atari game from the 1980s.", "tokens": [50364, 257, 3479, 281, 1466, 281, 862, 11, 309, 311, 257, 45216, 304, 2533, 300, 309, 445, 27152, 538, 29280, 2539, 50534, 50534, 281, 862, 364, 41381, 1216, 11, 588, 2199, 41381, 1216, 490, 264, 13626, 82, 13, 50740, 50740, 467, 2516, 264, 10344, 322, 4274, 295, 4688, 2496, 295, 3097, 281, 2524, 264, 3389, 300, 604, 50936, 50936, 1952, 393, 2524, 294, 466, 2119, 2077, 13, 51098, 51098, 3950, 8379, 767, 483, 281, 1687, 18796, 3389, 11, 457, 309, 2516, 552, 257, 938, 565, 13, 51404, 51404, 440, 1037, 1185, 300, 390, 7126, 538, 14895, 44, 471, 293, 264, 472, 300, 390, 7126, 538, 4384, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.12330542573141395, "compression_ratio": 1.6923076923076923, "no_speech_prob": 3.3203366911038756e-05}, {"id": 36, "seek": 14364, "start": 151.16, "end": 155.07999999999998, "text": " It takes the equivalent on average of 80 hours of training to reach the performance that any", "tokens": [50364, 257, 3479, 281, 1466, 281, 862, 11, 309, 311, 257, 45216, 304, 2533, 300, 309, 445, 27152, 538, 29280, 2539, 50534, 50534, 281, 862, 364, 41381, 1216, 11, 588, 2199, 41381, 1216, 490, 264, 13626, 82, 13, 50740, 50740, 467, 2516, 264, 10344, 322, 4274, 295, 4688, 2496, 295, 3097, 281, 2524, 264, 3389, 300, 604, 50936, 50936, 1952, 393, 2524, 294, 466, 2119, 2077, 13, 51098, 51098, 3950, 8379, 767, 483, 281, 1687, 18796, 3389, 11, 457, 309, 2516, 552, 257, 938, 565, 13, 51404, 51404, 440, 1037, 1185, 300, 390, 7126, 538, 14895, 44, 471, 293, 264, 472, 300, 390, 7126, 538, 4384, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.12330542573141395, "compression_ratio": 1.6923076923076923, "no_speech_prob": 3.3203366911038756e-05}, {"id": 37, "seek": 14364, "start": 155.07999999999998, "end": 158.32, "text": " human can reach in about 15 minutes.", "tokens": [50364, 257, 3479, 281, 1466, 281, 862, 11, 309, 311, 257, 45216, 304, 2533, 300, 309, 445, 27152, 538, 29280, 2539, 50534, 50534, 281, 862, 364, 41381, 1216, 11, 588, 2199, 41381, 1216, 490, 264, 13626, 82, 13, 50740, 50740, 467, 2516, 264, 10344, 322, 4274, 295, 4688, 2496, 295, 3097, 281, 2524, 264, 3389, 300, 604, 50936, 50936, 1952, 393, 2524, 294, 466, 2119, 2077, 13, 51098, 51098, 3950, 8379, 767, 483, 281, 1687, 18796, 3389, 11, 457, 309, 2516, 552, 257, 938, 565, 13, 51404, 51404, 440, 1037, 1185, 300, 390, 7126, 538, 14895, 44, 471, 293, 264, 472, 300, 390, 7126, 538, 4384, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.12330542573141395, "compression_ratio": 1.6923076923076923, "no_speech_prob": 3.3203366911038756e-05}, {"id": 38, "seek": 14364, "start": 158.32, "end": 164.44, "text": " Those machines actually get to superhuman performance, but it takes them a long time.", "tokens": [50364, 257, 3479, 281, 1466, 281, 862, 11, 309, 311, 257, 45216, 304, 2533, 300, 309, 445, 27152, 538, 29280, 2539, 50534, 50534, 281, 862, 364, 41381, 1216, 11, 588, 2199, 41381, 1216, 490, 264, 13626, 82, 13, 50740, 50740, 467, 2516, 264, 10344, 322, 4274, 295, 4688, 2496, 295, 3097, 281, 2524, 264, 3389, 300, 604, 50936, 50936, 1952, 393, 2524, 294, 466, 2119, 2077, 13, 51098, 51098, 3950, 8379, 767, 483, 281, 1687, 18796, 3389, 11, 457, 309, 2516, 552, 257, 938, 565, 13, 51404, 51404, 440, 1037, 1185, 300, 390, 7126, 538, 14895, 44, 471, 293, 264, 472, 300, 390, 7126, 538, 4384, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.12330542573141395, "compression_ratio": 1.6923076923076923, "no_speech_prob": 3.3203366911038756e-05}, {"id": 39, "seek": 14364, "start": 164.44, "end": 170.44, "text": " The Go system that was produced by DeepMind and the one that was produced by Facebook", "tokens": [50364, 257, 3479, 281, 1466, 281, 862, 11, 309, 311, 257, 45216, 304, 2533, 300, 309, 445, 27152, 538, 29280, 2539, 50534, 50534, 281, 862, 364, 41381, 1216, 11, 588, 2199, 41381, 1216, 490, 264, 13626, 82, 13, 50740, 50740, 467, 2516, 264, 10344, 322, 4274, 295, 4688, 2496, 295, 3097, 281, 2524, 264, 3389, 300, 604, 50936, 50936, 1952, 393, 2524, 294, 466, 2119, 2077, 13, 51098, 51098, 3950, 8379, 767, 483, 281, 1687, 18796, 3389, 11, 457, 309, 2516, 552, 257, 938, 565, 13, 51404, 51404, 440, 1037, 1185, 300, 390, 7126, 538, 14895, 44, 471, 293, 264, 472, 300, 390, 7126, 538, 4384, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.12330542573141395, "compression_ratio": 1.6923076923076923, "no_speech_prob": 3.3203366911038756e-05}, {"id": 40, "seek": 17044, "start": 170.44, "end": 174.6, "text": " a little bit later, I know the numbers for Facebook because they're published, and also", "tokens": [50364, 257, 707, 857, 1780, 11, 286, 458, 264, 3547, 337, 4384, 570, 436, 434, 6572, 11, 293, 611, 50572, 50572, 436, 434, 452, 1855, 13, 50696, 50696, 639, 2516, 466, 945, 2459, 295, 2698, 12, 2858, 2813, 281, 2524, 1687, 18796, 3389, 2614, 322, 50944, 50944, 8132, 18407, 82, 337, 732, 3259, 13, 51086, 51086, 639, 307, 257, 688, 295, 2813, 11, 544, 295, 2813, 813, 604, 6255, 393, 862, 13, 51228, 51228, 1037, 30, 51278, 51278, 1037, 30, 51328, 51328, 1079, 13, 51378, 51378, 1037, 307, 6179, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.2490301029656523, "compression_ratio": 1.4587155963302751, "no_speech_prob": 2.3181017240858637e-05}, {"id": 41, "seek": 17044, "start": 174.6, "end": 177.07999999999998, "text": " they're my friends.", "tokens": [50364, 257, 707, 857, 1780, 11, 286, 458, 264, 3547, 337, 4384, 570, 436, 434, 6572, 11, 293, 611, 50572, 50572, 436, 434, 452, 1855, 13, 50696, 50696, 639, 2516, 466, 945, 2459, 295, 2698, 12, 2858, 2813, 281, 2524, 1687, 18796, 3389, 2614, 322, 50944, 50944, 8132, 18407, 82, 337, 732, 3259, 13, 51086, 51086, 639, 307, 257, 688, 295, 2813, 11, 544, 295, 2813, 813, 604, 6255, 393, 862, 13, 51228, 51228, 1037, 30, 51278, 51278, 1037, 30, 51328, 51328, 1079, 13, 51378, 51378, 1037, 307, 6179, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.2490301029656523, "compression_ratio": 1.4587155963302751, "no_speech_prob": 2.3181017240858637e-05}, {"id": 42, "seek": 17044, "start": 177.07999999999998, "end": 182.04, "text": " This takes about 20 million of self-play games to reach superhuman performance running on", "tokens": [50364, 257, 707, 857, 1780, 11, 286, 458, 264, 3547, 337, 4384, 570, 436, 434, 6572, 11, 293, 611, 50572, 50572, 436, 434, 452, 1855, 13, 50696, 50696, 639, 2516, 466, 945, 2459, 295, 2698, 12, 2858, 2813, 281, 2524, 1687, 18796, 3389, 2614, 322, 50944, 50944, 8132, 18407, 82, 337, 732, 3259, 13, 51086, 51086, 639, 307, 257, 688, 295, 2813, 11, 544, 295, 2813, 813, 604, 6255, 393, 862, 13, 51228, 51228, 1037, 30, 51278, 51278, 1037, 30, 51328, 51328, 1079, 13, 51378, 51378, 1037, 307, 6179, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.2490301029656523, "compression_ratio": 1.4587155963302751, "no_speech_prob": 2.3181017240858637e-05}, {"id": 43, "seek": 17044, "start": 182.04, "end": 184.88, "text": " 2000 GPUs for two weeks.", "tokens": [50364, 257, 707, 857, 1780, 11, 286, 458, 264, 3547, 337, 4384, 570, 436, 434, 6572, 11, 293, 611, 50572, 50572, 436, 434, 452, 1855, 13, 50696, 50696, 639, 2516, 466, 945, 2459, 295, 2698, 12, 2858, 2813, 281, 2524, 1687, 18796, 3389, 2614, 322, 50944, 50944, 8132, 18407, 82, 337, 732, 3259, 13, 51086, 51086, 639, 307, 257, 688, 295, 2813, 11, 544, 295, 2813, 813, 604, 6255, 393, 862, 13, 51228, 51228, 1037, 30, 51278, 51278, 1037, 30, 51328, 51328, 1079, 13, 51378, 51378, 1037, 307, 6179, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.2490301029656523, "compression_ratio": 1.4587155963302751, "no_speech_prob": 2.3181017240858637e-05}, {"id": 44, "seek": 17044, "start": 184.88, "end": 187.72, "text": " This is a lot of games, more of games than any humans can play.", "tokens": [50364, 257, 707, 857, 1780, 11, 286, 458, 264, 3547, 337, 4384, 570, 436, 434, 6572, 11, 293, 611, 50572, 50572, 436, 434, 452, 1855, 13, 50696, 50696, 639, 2516, 466, 945, 2459, 295, 2698, 12, 2858, 2813, 281, 2524, 1687, 18796, 3389, 2614, 322, 50944, 50944, 8132, 18407, 82, 337, 732, 3259, 13, 51086, 51086, 639, 307, 257, 688, 295, 2813, 11, 544, 295, 2813, 813, 604, 6255, 393, 862, 13, 51228, 51228, 1037, 30, 51278, 51278, 1037, 30, 51328, 51328, 1079, 13, 51378, 51378, 1037, 307, 6179, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.2490301029656523, "compression_ratio": 1.4587155963302751, "no_speech_prob": 2.3181017240858637e-05}, {"id": 45, "seek": 17044, "start": 187.72, "end": 188.72, "text": " Go?", "tokens": [50364, 257, 707, 857, 1780, 11, 286, 458, 264, 3547, 337, 4384, 570, 436, 434, 6572, 11, 293, 611, 50572, 50572, 436, 434, 452, 1855, 13, 50696, 50696, 639, 2516, 466, 945, 2459, 295, 2698, 12, 2858, 2813, 281, 2524, 1687, 18796, 3389, 2614, 322, 50944, 50944, 8132, 18407, 82, 337, 732, 3259, 13, 51086, 51086, 639, 307, 257, 688, 295, 2813, 11, 544, 295, 2813, 813, 604, 6255, 393, 862, 13, 51228, 51228, 1037, 30, 51278, 51278, 1037, 30, 51328, 51328, 1079, 13, 51378, 51378, 1037, 307, 6179, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.2490301029656523, "compression_ratio": 1.4587155963302751, "no_speech_prob": 2.3181017240858637e-05}, {"id": 46, "seek": 17044, "start": 188.72, "end": 189.72, "text": " Go?", "tokens": [50364, 257, 707, 857, 1780, 11, 286, 458, 264, 3547, 337, 4384, 570, 436, 434, 6572, 11, 293, 611, 50572, 50572, 436, 434, 452, 1855, 13, 50696, 50696, 639, 2516, 466, 945, 2459, 295, 2698, 12, 2858, 2813, 281, 2524, 1687, 18796, 3389, 2614, 322, 50944, 50944, 8132, 18407, 82, 337, 732, 3259, 13, 51086, 51086, 639, 307, 257, 688, 295, 2813, 11, 544, 295, 2813, 813, 604, 6255, 393, 862, 13, 51228, 51228, 1037, 30, 51278, 51278, 1037, 30, 51328, 51328, 1079, 13, 51378, 51378, 1037, 307, 6179, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.2490301029656523, "compression_ratio": 1.4587155963302751, "no_speech_prob": 2.3181017240858637e-05}, {"id": 47, "seek": 17044, "start": 189.72, "end": 190.72, "text": " Yes.", "tokens": [50364, 257, 707, 857, 1780, 11, 286, 458, 264, 3547, 337, 4384, 570, 436, 434, 6572, 11, 293, 611, 50572, 50572, 436, 434, 452, 1855, 13, 50696, 50696, 639, 2516, 466, 945, 2459, 295, 2698, 12, 2858, 2813, 281, 2524, 1687, 18796, 3389, 2614, 322, 50944, 50944, 8132, 18407, 82, 337, 732, 3259, 13, 51086, 51086, 639, 307, 257, 688, 295, 2813, 11, 544, 295, 2813, 813, 604, 6255, 393, 862, 13, 51228, 51228, 1037, 30, 51278, 51278, 1037, 30, 51328, 51328, 1079, 13, 51378, 51378, 1037, 307, 6179, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.2490301029656523, "compression_ratio": 1.4587155963302751, "no_speech_prob": 2.3181017240858637e-05}, {"id": 48, "seek": 17044, "start": 190.72, "end": 199.8, "text": " Go is complicated.", "tokens": [50364, 257, 707, 857, 1780, 11, 286, 458, 264, 3547, 337, 4384, 570, 436, 434, 6572, 11, 293, 611, 50572, 50572, 436, 434, 452, 1855, 13, 50696, 50696, 639, 2516, 466, 945, 2459, 295, 2698, 12, 2858, 2813, 281, 2524, 1687, 18796, 3389, 2614, 322, 50944, 50944, 8132, 18407, 82, 337, 732, 3259, 13, 51086, 51086, 639, 307, 257, 688, 295, 2813, 11, 544, 295, 2813, 813, 604, 6255, 393, 862, 13, 51228, 51228, 1037, 30, 51278, 51278, 1037, 30, 51328, 51328, 1079, 13, 51378, 51378, 1037, 307, 6179, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.2490301029656523, "compression_ratio": 1.4587155963302751, "no_speech_prob": 2.3181017240858637e-05}, {"id": 49, "seek": 19980, "start": 199.8, "end": 203.76000000000002, "text": " And StarCraft, so this is a recent, the paper actually just appeared last week, but the", "tokens": [50364, 400, 5705, 34, 4469, 11, 370, 341, 307, 257, 5162, 11, 264, 3035, 767, 445, 8516, 1036, 1243, 11, 457, 264, 50562, 50562, 3542, 362, 668, 322, 337, 257, 1339, 13, 50642, 50642, 3358, 14895, 44, 471, 11, 264, 20588, 24659, 1185, 2516, 466, 2331, 924, 295, 10344, 957, 565, 281, 50872, 50872, 1466, 281, 862, 322, 257, 2167, 4471, 337, 257, 2167, 4256, 11, 257, 2167, 2010, 295, 4256, 498, 291, 528, 13, 51164, 51164, 400, 300, 311, 364, 11322, 2372, 295, 24903, 13, 51268, 51268, 821, 311, 21201, 300, 445, 281, 3847, 341, 337, 257, 1243, 420, 732, 11, 300, 1469, 1890, 544, 28270, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.16894725452769888, "compression_ratio": 1.6179775280898876, "no_speech_prob": 3.119498796877451e-05}, {"id": 50, "seek": 19980, "start": 203.76000000000002, "end": 205.36, "text": " results have been on for a while.", "tokens": [50364, 400, 5705, 34, 4469, 11, 370, 341, 307, 257, 5162, 11, 264, 3035, 767, 445, 8516, 1036, 1243, 11, 457, 264, 50562, 50562, 3542, 362, 668, 322, 337, 257, 1339, 13, 50642, 50642, 3358, 14895, 44, 471, 11, 264, 20588, 24659, 1185, 2516, 466, 2331, 924, 295, 10344, 957, 565, 281, 50872, 50872, 1466, 281, 862, 322, 257, 2167, 4471, 337, 257, 2167, 4256, 11, 257, 2167, 2010, 295, 4256, 498, 291, 528, 13, 51164, 51164, 400, 300, 311, 364, 11322, 2372, 295, 24903, 13, 51268, 51268, 821, 311, 21201, 300, 445, 281, 3847, 341, 337, 257, 1243, 420, 732, 11, 300, 1469, 1890, 544, 28270, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.16894725452769888, "compression_ratio": 1.6179775280898876, "no_speech_prob": 3.119498796877451e-05}, {"id": 51, "seek": 19980, "start": 205.36, "end": 209.96, "text": " From DeepMind, the AlphaStar system takes about 200 years of equivalent real time to", "tokens": [50364, 400, 5705, 34, 4469, 11, 370, 341, 307, 257, 5162, 11, 264, 3035, 767, 445, 8516, 1036, 1243, 11, 457, 264, 50562, 50562, 3542, 362, 668, 322, 337, 257, 1339, 13, 50642, 50642, 3358, 14895, 44, 471, 11, 264, 20588, 24659, 1185, 2516, 466, 2331, 924, 295, 10344, 957, 565, 281, 50872, 50872, 1466, 281, 862, 322, 257, 2167, 4471, 337, 257, 2167, 4256, 11, 257, 2167, 2010, 295, 4256, 498, 291, 528, 13, 51164, 51164, 400, 300, 311, 364, 11322, 2372, 295, 24903, 13, 51268, 51268, 821, 311, 21201, 300, 445, 281, 3847, 341, 337, 257, 1243, 420, 732, 11, 300, 1469, 1890, 544, 28270, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.16894725452769888, "compression_ratio": 1.6179775280898876, "no_speech_prob": 3.119498796877451e-05}, {"id": 52, "seek": 19980, "start": 209.96, "end": 215.8, "text": " learn to play on a single map for a single player, a single type of player if you want.", "tokens": [50364, 400, 5705, 34, 4469, 11, 370, 341, 307, 257, 5162, 11, 264, 3035, 767, 445, 8516, 1036, 1243, 11, 457, 264, 50562, 50562, 3542, 362, 668, 322, 337, 257, 1339, 13, 50642, 50642, 3358, 14895, 44, 471, 11, 264, 20588, 24659, 1185, 2516, 466, 2331, 924, 295, 10344, 957, 565, 281, 50872, 50872, 1466, 281, 862, 322, 257, 2167, 4471, 337, 257, 2167, 4256, 11, 257, 2167, 2010, 295, 4256, 498, 291, 528, 13, 51164, 51164, 400, 300, 311, 364, 11322, 2372, 295, 24903, 13, 51268, 51268, 821, 311, 21201, 300, 445, 281, 3847, 341, 337, 257, 1243, 420, 732, 11, 300, 1469, 1890, 544, 28270, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.16894725452769888, "compression_ratio": 1.6179775280898876, "no_speech_prob": 3.119498796877451e-05}, {"id": 53, "seek": 19980, "start": 215.8, "end": 217.88000000000002, "text": " And that's an enormous amount of computation.", "tokens": [50364, 400, 5705, 34, 4469, 11, 370, 341, 307, 257, 5162, 11, 264, 3035, 767, 445, 8516, 1036, 1243, 11, 457, 264, 50562, 50562, 3542, 362, 668, 322, 337, 257, 1339, 13, 50642, 50642, 3358, 14895, 44, 471, 11, 264, 20588, 24659, 1185, 2516, 466, 2331, 924, 295, 10344, 957, 565, 281, 50872, 50872, 1466, 281, 862, 322, 257, 2167, 4471, 337, 257, 2167, 4256, 11, 257, 2167, 2010, 295, 4256, 498, 291, 528, 13, 51164, 51164, 400, 300, 311, 364, 11322, 2372, 295, 24903, 13, 51268, 51268, 821, 311, 21201, 300, 445, 281, 3847, 341, 337, 257, 1243, 420, 732, 11, 300, 1469, 1890, 544, 28270, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.16894725452769888, "compression_ratio": 1.6179775280898876, "no_speech_prob": 3.119498796877451e-05}, {"id": 54, "seek": 19980, "start": 217.88000000000002, "end": 225.08, "text": " There's rumors that just to train this for a week or two, that team took more computational", "tokens": [50364, 400, 5705, 34, 4469, 11, 370, 341, 307, 257, 5162, 11, 264, 3035, 767, 445, 8516, 1036, 1243, 11, 457, 264, 50562, 50562, 3542, 362, 668, 322, 337, 257, 1339, 13, 50642, 50642, 3358, 14895, 44, 471, 11, 264, 20588, 24659, 1185, 2516, 466, 2331, 924, 295, 10344, 957, 565, 281, 50872, 50872, 1466, 281, 862, 322, 257, 2167, 4471, 337, 257, 2167, 4256, 11, 257, 2167, 2010, 295, 4256, 498, 291, 528, 13, 51164, 51164, 400, 300, 311, 364, 11322, 2372, 295, 24903, 13, 51268, 51268, 821, 311, 21201, 300, 445, 281, 3847, 341, 337, 257, 1243, 420, 732, 11, 300, 1469, 1890, 544, 28270, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.16894725452769888, "compression_ratio": 1.6179775280898876, "no_speech_prob": 3.119498796877451e-05}, {"id": 55, "seek": 22508, "start": 225.08, "end": 231.76000000000002, "text": " resources at Google than all of search.", "tokens": [50364, 3593, 412, 3329, 813, 439, 295, 3164, 13, 50698, 50698, 400, 2531, 337, 11, 456, 307, 257, 5162, 10723, 538, 7238, 48698, 293, 257, 11760, 3035, 1228, 29280, 51074, 51074, 2539, 281, 1466, 26475, 490, 16575, 13, 51278, 51278, 400, 550, 291, 393, 1333, 295, 5003, 341, 281, 257, 957, 7881, 11, 293, 309, 2516, 264, 10344, 51572, 51572, 295, 1266, 11, 1360, 924, 295, 957, 565, 294, 16575, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.21964493313351194, "compression_ratio": 1.5320197044334976, "no_speech_prob": 6.048556315363385e-06}, {"id": 56, "seek": 22508, "start": 231.76000000000002, "end": 239.28, "text": " And similar for, there is a recent demo by OpenAI and a corresponding paper using reinforcement", "tokens": [50364, 3593, 412, 3329, 813, 439, 295, 3164, 13, 50698, 50698, 400, 2531, 337, 11, 456, 307, 257, 5162, 10723, 538, 7238, 48698, 293, 257, 11760, 3035, 1228, 29280, 51074, 51074, 2539, 281, 1466, 26475, 490, 16575, 13, 51278, 51278, 400, 550, 291, 393, 1333, 295, 5003, 341, 281, 257, 957, 7881, 11, 293, 309, 2516, 264, 10344, 51572, 51572, 295, 1266, 11, 1360, 924, 295, 957, 565, 294, 16575, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.21964493313351194, "compression_ratio": 1.5320197044334976, "no_speech_prob": 6.048556315363385e-06}, {"id": 57, "seek": 22508, "start": 239.28, "end": 243.36, "text": " learning to learn manipulation from simulation.", "tokens": [50364, 3593, 412, 3329, 813, 439, 295, 3164, 13, 50698, 50698, 400, 2531, 337, 11, 456, 307, 257, 5162, 10723, 538, 7238, 48698, 293, 257, 11760, 3035, 1228, 29280, 51074, 51074, 2539, 281, 1466, 26475, 490, 16575, 13, 51278, 51278, 400, 550, 291, 393, 1333, 295, 5003, 341, 281, 257, 957, 7881, 11, 293, 309, 2516, 264, 10344, 51572, 51572, 295, 1266, 11, 1360, 924, 295, 957, 565, 294, 16575, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.21964493313351194, "compression_ratio": 1.5320197044334976, "no_speech_prob": 6.048556315363385e-06}, {"id": 58, "seek": 22508, "start": 243.36, "end": 249.24, "text": " And then you can sort of transfer this to a real robot, and it takes the equivalent", "tokens": [50364, 3593, 412, 3329, 813, 439, 295, 3164, 13, 50698, 50698, 400, 2531, 337, 11, 456, 307, 257, 5162, 10723, 538, 7238, 48698, 293, 257, 11760, 3035, 1228, 29280, 51074, 51074, 2539, 281, 1466, 26475, 490, 16575, 13, 51278, 51278, 400, 550, 291, 393, 1333, 295, 5003, 341, 281, 257, 957, 7881, 11, 293, 309, 2516, 264, 10344, 51572, 51572, 295, 1266, 11, 1360, 924, 295, 957, 565, 294, 16575, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.21964493313351194, "compression_ratio": 1.5320197044334976, "no_speech_prob": 6.048556315363385e-06}, {"id": 59, "seek": 22508, "start": 249.24, "end": 252.04000000000002, "text": " of 10,000 years of real time in simulation.", "tokens": [50364, 3593, 412, 3329, 813, 439, 295, 3164, 13, 50698, 50698, 400, 2531, 337, 11, 456, 307, 257, 5162, 10723, 538, 7238, 48698, 293, 257, 11760, 3035, 1228, 29280, 51074, 51074, 2539, 281, 1466, 26475, 490, 16575, 13, 51278, 51278, 400, 550, 291, 393, 1333, 295, 5003, 341, 281, 257, 957, 7881, 11, 293, 309, 2516, 264, 10344, 51572, 51572, 295, 1266, 11, 1360, 924, 295, 957, 565, 294, 16575, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.21964493313351194, "compression_ratio": 1.5320197044334976, "no_speech_prob": 6.048556315363385e-06}, {"id": 60, "seek": 25204, "start": 252.04, "end": 256.36, "text": " So you can run simulation faster, you can run it in parallel, it just costs money or", "tokens": [50364, 407, 291, 393, 1190, 16575, 4663, 11, 291, 393, 1190, 309, 294, 8952, 11, 309, 445, 5497, 1460, 420, 50580, 50580, 1347, 420, 3002, 17, 14607, 13, 50840, 50840, 583, 309, 1177, 380, 589, 294, 264, 957, 1002, 13, 50908, 50908, 407, 498, 291, 528, 281, 3847, 257, 1032, 281, 3332, 2564, 293, 291, 500, 380, 362, 8559, 1547, 16575, 51252, 51252, 281, 1190, 341, 294, 16575, 11, 309, 311, 406, 516, 281, 589, 13, 51528, 51528, 509, 486, 362, 264, 1032, 11, 291, 603, 643, 257, 1032, 281, 3332, 2564, 337, 6803, 295, 2496, 11, 3082, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.13394225469910273, "compression_ratio": 1.6936936936936937, "no_speech_prob": 1.341882125416305e-05}, {"id": 61, "seek": 25204, "start": 256.36, "end": 261.56, "text": " power or CO2 emissions.", "tokens": [50364, 407, 291, 393, 1190, 16575, 4663, 11, 291, 393, 1190, 309, 294, 8952, 11, 309, 445, 5497, 1460, 420, 50580, 50580, 1347, 420, 3002, 17, 14607, 13, 50840, 50840, 583, 309, 1177, 380, 589, 294, 264, 957, 1002, 13, 50908, 50908, 407, 498, 291, 528, 281, 3847, 257, 1032, 281, 3332, 2564, 293, 291, 500, 380, 362, 8559, 1547, 16575, 51252, 51252, 281, 1190, 341, 294, 16575, 11, 309, 311, 406, 516, 281, 589, 13, 51528, 51528, 509, 486, 362, 264, 1032, 11, 291, 603, 643, 257, 1032, 281, 3332, 2564, 337, 6803, 295, 2496, 11, 3082, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.13394225469910273, "compression_ratio": 1.6936936936936937, "no_speech_prob": 1.341882125416305e-05}, {"id": 62, "seek": 25204, "start": 261.56, "end": 262.92, "text": " But it doesn't work in the real world.", "tokens": [50364, 407, 291, 393, 1190, 16575, 4663, 11, 291, 393, 1190, 309, 294, 8952, 11, 309, 445, 5497, 1460, 420, 50580, 50580, 1347, 420, 3002, 17, 14607, 13, 50840, 50840, 583, 309, 1177, 380, 589, 294, 264, 957, 1002, 13, 50908, 50908, 407, 498, 291, 528, 281, 3847, 257, 1032, 281, 3332, 2564, 293, 291, 500, 380, 362, 8559, 1547, 16575, 51252, 51252, 281, 1190, 341, 294, 16575, 11, 309, 311, 406, 516, 281, 589, 13, 51528, 51528, 509, 486, 362, 264, 1032, 11, 291, 603, 643, 257, 1032, 281, 3332, 2564, 337, 6803, 295, 2496, 11, 3082, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.13394225469910273, "compression_ratio": 1.6936936936936937, "no_speech_prob": 1.341882125416305e-05}, {"id": 63, "seek": 25204, "start": 262.92, "end": 269.8, "text": " So if you want to train a car to drive itself and you don't have accurate enough simulation", "tokens": [50364, 407, 291, 393, 1190, 16575, 4663, 11, 291, 393, 1190, 309, 294, 8952, 11, 309, 445, 5497, 1460, 420, 50580, 50580, 1347, 420, 3002, 17, 14607, 13, 50840, 50840, 583, 309, 1177, 380, 589, 294, 264, 957, 1002, 13, 50908, 50908, 407, 498, 291, 528, 281, 3847, 257, 1032, 281, 3332, 2564, 293, 291, 500, 380, 362, 8559, 1547, 16575, 51252, 51252, 281, 1190, 341, 294, 16575, 11, 309, 311, 406, 516, 281, 589, 13, 51528, 51528, 509, 486, 362, 264, 1032, 11, 291, 603, 643, 257, 1032, 281, 3332, 2564, 337, 6803, 295, 2496, 11, 3082, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.13394225469910273, "compression_ratio": 1.6936936936936937, "no_speech_prob": 1.341882125416305e-05}, {"id": 64, "seek": 25204, "start": 269.8, "end": 275.32, "text": " to run this in simulation, it's not going to work.", "tokens": [50364, 407, 291, 393, 1190, 16575, 4663, 11, 291, 393, 1190, 309, 294, 8952, 11, 309, 445, 5497, 1460, 420, 50580, 50580, 1347, 420, 3002, 17, 14607, 13, 50840, 50840, 583, 309, 1177, 380, 589, 294, 264, 957, 1002, 13, 50908, 50908, 407, 498, 291, 528, 281, 3847, 257, 1032, 281, 3332, 2564, 293, 291, 500, 380, 362, 8559, 1547, 16575, 51252, 51252, 281, 1190, 341, 294, 16575, 11, 309, 311, 406, 516, 281, 589, 13, 51528, 51528, 509, 486, 362, 264, 1032, 11, 291, 603, 643, 257, 1032, 281, 3332, 2564, 337, 6803, 295, 2496, 11, 3082, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.13394225469910273, "compression_ratio": 1.6936936936936937, "no_speech_prob": 1.341882125416305e-05}, {"id": 65, "seek": 25204, "start": 275.32, "end": 279.9, "text": " You will have the car, you'll need a car to drive itself for millions of hours, cause", "tokens": [50364, 407, 291, 393, 1190, 16575, 4663, 11, 291, 393, 1190, 309, 294, 8952, 11, 309, 445, 5497, 1460, 420, 50580, 50580, 1347, 420, 3002, 17, 14607, 13, 50840, 50840, 583, 309, 1177, 380, 589, 294, 264, 957, 1002, 13, 50908, 50908, 407, 498, 291, 528, 281, 3847, 257, 1032, 281, 3332, 2564, 293, 291, 500, 380, 362, 8559, 1547, 16575, 51252, 51252, 281, 1190, 341, 294, 16575, 11, 309, 311, 406, 516, 281, 589, 13, 51528, 51528, 509, 486, 362, 264, 1032, 11, 291, 603, 643, 257, 1032, 281, 3332, 2564, 337, 6803, 295, 2496, 11, 3082, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.13394225469910273, "compression_ratio": 1.6936936936936937, "no_speech_prob": 1.341882125416305e-05}, {"id": 66, "seek": 27990, "start": 279.9, "end": 284.15999999999997, "text": " thousands of accidents, destroy itself multiple times, it will have to run off a cliff multiple", "tokens": [50364, 5383, 295, 23875, 11, 5293, 2564, 3866, 1413, 11, 309, 486, 362, 281, 1190, 766, 257, 22316, 3866, 50577, 50577, 1413, 949, 309, 29316, 309, 311, 257, 1578, 1558, 281, 1190, 766, 257, 22316, 13, 50719, 50719, 1133, 309, 3719, 11, 309, 1177, 380, 458, 1340, 466, 12110, 420, 1340, 411, 300, 13, 50943, 50943, 400, 370, 309, 311, 406, 8496, 337, 264, 957, 1002, 11, 4878, 309, 815, 312, 8496, 294, 16575, 51165, 51165, 498, 291, 393, 360, 364, 8559, 1547, 16575, 11, 457, 309, 311, 516, 281, 2063, 291, 257, 688, 294, 2115, 51353, 51353, 295, 24903, 13, 51461, 51461, 407, 577, 307, 309, 300, 6255, 393, 4025, 257, 6787, 1032, 294, 466, 945, 2496, 295, 3097, 337, 881, 51635, 51635], "temperature": 0.0, "avg_logprob": -0.09246703338623047, "compression_ratio": 1.748299319727891, "no_speech_prob": 1.147779039456509e-05}, {"id": 67, "seek": 27990, "start": 284.15999999999997, "end": 287.0, "text": " times before it realizes it's a bad idea to run off a cliff.", "tokens": [50364, 5383, 295, 23875, 11, 5293, 2564, 3866, 1413, 11, 309, 486, 362, 281, 1190, 766, 257, 22316, 3866, 50577, 50577, 1413, 949, 309, 29316, 309, 311, 257, 1578, 1558, 281, 1190, 766, 257, 22316, 13, 50719, 50719, 1133, 309, 3719, 11, 309, 1177, 380, 458, 1340, 466, 12110, 420, 1340, 411, 300, 13, 50943, 50943, 400, 370, 309, 311, 406, 8496, 337, 264, 957, 1002, 11, 4878, 309, 815, 312, 8496, 294, 16575, 51165, 51165, 498, 291, 393, 360, 364, 8559, 1547, 16575, 11, 457, 309, 311, 516, 281, 2063, 291, 257, 688, 294, 2115, 51353, 51353, 295, 24903, 13, 51461, 51461, 407, 577, 307, 309, 300, 6255, 393, 4025, 257, 6787, 1032, 294, 466, 945, 2496, 295, 3097, 337, 881, 51635, 51635], "temperature": 0.0, "avg_logprob": -0.09246703338623047, "compression_ratio": 1.748299319727891, "no_speech_prob": 1.147779039456509e-05}, {"id": 68, "seek": 27990, "start": 287.0, "end": 291.47999999999996, "text": " When it starts, it doesn't know anything about gravity or anything like that.", "tokens": [50364, 5383, 295, 23875, 11, 5293, 2564, 3866, 1413, 11, 309, 486, 362, 281, 1190, 766, 257, 22316, 3866, 50577, 50577, 1413, 949, 309, 29316, 309, 311, 257, 1578, 1558, 281, 1190, 766, 257, 22316, 13, 50719, 50719, 1133, 309, 3719, 11, 309, 1177, 380, 458, 1340, 466, 12110, 420, 1340, 411, 300, 13, 50943, 50943, 400, 370, 309, 311, 406, 8496, 337, 264, 957, 1002, 11, 4878, 309, 815, 312, 8496, 294, 16575, 51165, 51165, 498, 291, 393, 360, 364, 8559, 1547, 16575, 11, 457, 309, 311, 516, 281, 2063, 291, 257, 688, 294, 2115, 51353, 51353, 295, 24903, 13, 51461, 51461, 407, 577, 307, 309, 300, 6255, 393, 4025, 257, 6787, 1032, 294, 466, 945, 2496, 295, 3097, 337, 881, 51635, 51635], "temperature": 0.0, "avg_logprob": -0.09246703338623047, "compression_ratio": 1.748299319727891, "no_speech_prob": 1.147779039456509e-05}, {"id": 69, "seek": 27990, "start": 291.47999999999996, "end": 295.91999999999996, "text": " And so it's not practical for the real world, although it may be practical in simulation", "tokens": [50364, 5383, 295, 23875, 11, 5293, 2564, 3866, 1413, 11, 309, 486, 362, 281, 1190, 766, 257, 22316, 3866, 50577, 50577, 1413, 949, 309, 29316, 309, 311, 257, 1578, 1558, 281, 1190, 766, 257, 22316, 13, 50719, 50719, 1133, 309, 3719, 11, 309, 1177, 380, 458, 1340, 466, 12110, 420, 1340, 411, 300, 13, 50943, 50943, 400, 370, 309, 311, 406, 8496, 337, 264, 957, 1002, 11, 4878, 309, 815, 312, 8496, 294, 16575, 51165, 51165, 498, 291, 393, 360, 364, 8559, 1547, 16575, 11, 457, 309, 311, 516, 281, 2063, 291, 257, 688, 294, 2115, 51353, 51353, 295, 24903, 13, 51461, 51461, 407, 577, 307, 309, 300, 6255, 393, 4025, 257, 6787, 1032, 294, 466, 945, 2496, 295, 3097, 337, 881, 51635, 51635], "temperature": 0.0, "avg_logprob": -0.09246703338623047, "compression_ratio": 1.748299319727891, "no_speech_prob": 1.147779039456509e-05}, {"id": 70, "seek": 27990, "start": 295.91999999999996, "end": 299.67999999999995, "text": " if you can do an accurate enough simulation, but it's going to cost you a lot in terms", "tokens": [50364, 5383, 295, 23875, 11, 5293, 2564, 3866, 1413, 11, 309, 486, 362, 281, 1190, 766, 257, 22316, 3866, 50577, 50577, 1413, 949, 309, 29316, 309, 311, 257, 1578, 1558, 281, 1190, 766, 257, 22316, 13, 50719, 50719, 1133, 309, 3719, 11, 309, 1177, 380, 458, 1340, 466, 12110, 420, 1340, 411, 300, 13, 50943, 50943, 400, 370, 309, 311, 406, 8496, 337, 264, 957, 1002, 11, 4878, 309, 815, 312, 8496, 294, 16575, 51165, 51165, 498, 291, 393, 360, 364, 8559, 1547, 16575, 11, 457, 309, 311, 516, 281, 2063, 291, 257, 688, 294, 2115, 51353, 51353, 295, 24903, 13, 51461, 51461, 407, 577, 307, 309, 300, 6255, 393, 4025, 257, 6787, 1032, 294, 466, 945, 2496, 295, 3097, 337, 881, 51635, 51635], "temperature": 0.0, "avg_logprob": -0.09246703338623047, "compression_ratio": 1.748299319727891, "no_speech_prob": 1.147779039456509e-05}, {"id": 71, "seek": 27990, "start": 299.67999999999995, "end": 301.84, "text": " of computation.", "tokens": [50364, 5383, 295, 23875, 11, 5293, 2564, 3866, 1413, 11, 309, 486, 362, 281, 1190, 766, 257, 22316, 3866, 50577, 50577, 1413, 949, 309, 29316, 309, 311, 257, 1578, 1558, 281, 1190, 766, 257, 22316, 13, 50719, 50719, 1133, 309, 3719, 11, 309, 1177, 380, 458, 1340, 466, 12110, 420, 1340, 411, 300, 13, 50943, 50943, 400, 370, 309, 311, 406, 8496, 337, 264, 957, 1002, 11, 4878, 309, 815, 312, 8496, 294, 16575, 51165, 51165, 498, 291, 393, 360, 364, 8559, 1547, 16575, 11, 457, 309, 311, 516, 281, 2063, 291, 257, 688, 294, 2115, 51353, 51353, 295, 24903, 13, 51461, 51461, 407, 577, 307, 309, 300, 6255, 393, 4025, 257, 6787, 1032, 294, 466, 945, 2496, 295, 3097, 337, 881, 51635, 51635], "temperature": 0.0, "avg_logprob": -0.09246703338623047, "compression_ratio": 1.748299319727891, "no_speech_prob": 1.147779039456509e-05}, {"id": 72, "seek": 27990, "start": 301.84, "end": 305.32, "text": " So how is it that humans can launch a driver car in about 20 hours of training for most", "tokens": [50364, 5383, 295, 23875, 11, 5293, 2564, 3866, 1413, 11, 309, 486, 362, 281, 1190, 766, 257, 22316, 3866, 50577, 50577, 1413, 949, 309, 29316, 309, 311, 257, 1578, 1558, 281, 1190, 766, 257, 22316, 13, 50719, 50719, 1133, 309, 3719, 11, 309, 1177, 380, 458, 1340, 466, 12110, 420, 1340, 411, 300, 13, 50943, 50943, 400, 370, 309, 311, 406, 8496, 337, 264, 957, 1002, 11, 4878, 309, 815, 312, 8496, 294, 16575, 51165, 51165, 498, 291, 393, 360, 364, 8559, 1547, 16575, 11, 457, 309, 311, 516, 281, 2063, 291, 257, 688, 294, 2115, 51353, 51353, 295, 24903, 13, 51461, 51461, 407, 577, 307, 309, 300, 6255, 393, 4025, 257, 6787, 1032, 294, 466, 945, 2496, 295, 3097, 337, 881, 51635, 51635], "temperature": 0.0, "avg_logprob": -0.09246703338623047, "compression_ratio": 1.748299319727891, "no_speech_prob": 1.147779039456509e-05}, {"id": 73, "seek": 30532, "start": 305.32, "end": 311.28, "text": " of us without causing any accidents, also for most of us, right?", "tokens": [50364, 295, 505, 1553, 9853, 604, 23875, 11, 611, 337, 881, 295, 505, 11, 558, 30, 50662, 50662, 663, 311, 257, 955, 1168, 11, 577, 360, 6255, 293, 4882, 1466, 370, 2661, 30, 50902, 50902, 400, 472, 17291, 456, 307, 300, 309, 311, 406, 46533, 2539, 11, 309, 311, 406, 29280, 51056, 51056, 2539, 11, 309, 311, 746, 1646, 13, 51186, 51186, 400, 370, 562, 291, 574, 412, 10917, 11, 291, 751, 281, 15605, 7708, 11, 30160, 15605, 51462, 51462, 7708, 293, 291, 1029, 552, 11, 291, 458, 11, 562, 360, 10917, 1466, 3875, 721, 411, 12110, 30, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1536215319491849, "compression_ratio": 1.7, "no_speech_prob": 9.57024667513906e-07}, {"id": 74, "seek": 30532, "start": 311.28, "end": 316.08, "text": " That's a big question, how do humans and animals learn so quickly?", "tokens": [50364, 295, 505, 1553, 9853, 604, 23875, 11, 611, 337, 881, 295, 505, 11, 558, 30, 50662, 50662, 663, 311, 257, 955, 1168, 11, 577, 360, 6255, 293, 4882, 1466, 370, 2661, 30, 50902, 50902, 400, 472, 17291, 456, 307, 300, 309, 311, 406, 46533, 2539, 11, 309, 311, 406, 29280, 51056, 51056, 2539, 11, 309, 311, 746, 1646, 13, 51186, 51186, 400, 370, 562, 291, 574, 412, 10917, 11, 291, 751, 281, 15605, 7708, 11, 30160, 15605, 51462, 51462, 7708, 293, 291, 1029, 552, 11, 291, 458, 11, 562, 360, 10917, 1466, 3875, 721, 411, 12110, 30, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1536215319491849, "compression_ratio": 1.7, "no_speech_prob": 9.57024667513906e-07}, {"id": 75, "seek": 30532, "start": 316.08, "end": 319.15999999999997, "text": " And one hypothesis there is that it's not supervised learning, it's not reinforcement", "tokens": [50364, 295, 505, 1553, 9853, 604, 23875, 11, 611, 337, 881, 295, 505, 11, 558, 30, 50662, 50662, 663, 311, 257, 955, 1168, 11, 577, 360, 6255, 293, 4882, 1466, 370, 2661, 30, 50902, 50902, 400, 472, 17291, 456, 307, 300, 309, 311, 406, 46533, 2539, 11, 309, 311, 406, 29280, 51056, 51056, 2539, 11, 309, 311, 746, 1646, 13, 51186, 51186, 400, 370, 562, 291, 574, 412, 10917, 11, 291, 751, 281, 15605, 7708, 11, 30160, 15605, 51462, 51462, 7708, 293, 291, 1029, 552, 11, 291, 458, 11, 562, 360, 10917, 1466, 3875, 721, 411, 12110, 30, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1536215319491849, "compression_ratio": 1.7, "no_speech_prob": 9.57024667513906e-07}, {"id": 76, "seek": 30532, "start": 319.15999999999997, "end": 321.76, "text": " learning, it's something else.", "tokens": [50364, 295, 505, 1553, 9853, 604, 23875, 11, 611, 337, 881, 295, 505, 11, 558, 30, 50662, 50662, 663, 311, 257, 955, 1168, 11, 577, 360, 6255, 293, 4882, 1466, 370, 2661, 30, 50902, 50902, 400, 472, 17291, 456, 307, 300, 309, 311, 406, 46533, 2539, 11, 309, 311, 406, 29280, 51056, 51056, 2539, 11, 309, 311, 746, 1646, 13, 51186, 51186, 400, 370, 562, 291, 574, 412, 10917, 11, 291, 751, 281, 15605, 7708, 11, 30160, 15605, 51462, 51462, 7708, 293, 291, 1029, 552, 11, 291, 458, 11, 562, 360, 10917, 1466, 3875, 721, 411, 12110, 30, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1536215319491849, "compression_ratio": 1.7, "no_speech_prob": 9.57024667513906e-07}, {"id": 77, "seek": 30532, "start": 321.76, "end": 327.28, "text": " And so when you look at babies, you talk to cognitive scientists, developmental cognitive", "tokens": [50364, 295, 505, 1553, 9853, 604, 23875, 11, 611, 337, 881, 295, 505, 11, 558, 30, 50662, 50662, 663, 311, 257, 955, 1168, 11, 577, 360, 6255, 293, 4882, 1466, 370, 2661, 30, 50902, 50902, 400, 472, 17291, 456, 307, 300, 309, 311, 406, 46533, 2539, 11, 309, 311, 406, 29280, 51056, 51056, 2539, 11, 309, 311, 746, 1646, 13, 51186, 51186, 400, 370, 562, 291, 574, 412, 10917, 11, 291, 751, 281, 15605, 7708, 11, 30160, 15605, 51462, 51462, 7708, 293, 291, 1029, 552, 11, 291, 458, 11, 562, 360, 10917, 1466, 3875, 721, 411, 12110, 30, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1536215319491849, "compression_ratio": 1.7, "no_speech_prob": 9.57024667513906e-07}, {"id": 78, "seek": 30532, "start": 327.28, "end": 334.15999999999997, "text": " scientists and you ask them, you know, when do babies learn basic things like gravity?", "tokens": [50364, 295, 505, 1553, 9853, 604, 23875, 11, 611, 337, 881, 295, 505, 11, 558, 30, 50662, 50662, 663, 311, 257, 955, 1168, 11, 577, 360, 6255, 293, 4882, 1466, 370, 2661, 30, 50902, 50902, 400, 472, 17291, 456, 307, 300, 309, 311, 406, 46533, 2539, 11, 309, 311, 406, 29280, 51056, 51056, 2539, 11, 309, 311, 746, 1646, 13, 51186, 51186, 400, 370, 562, 291, 574, 412, 10917, 11, 291, 751, 281, 15605, 7708, 11, 30160, 15605, 51462, 51462, 7708, 293, 291, 1029, 552, 11, 291, 458, 11, 562, 360, 10917, 1466, 3875, 721, 411, 12110, 30, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1536215319491849, "compression_ratio": 1.7, "no_speech_prob": 9.57024667513906e-07}, {"id": 79, "seek": 33416, "start": 334.16, "end": 336.0, "text": " You know, when do they learn that objects are supposed to fall?", "tokens": [50364, 509, 458, 11, 562, 360, 436, 1466, 300, 6565, 366, 3442, 281, 2100, 30, 50456, 50456, 400, 436, 980, 291, 926, 4949, 2493, 13, 50595, 50595, 407, 949, 4949, 2493, 1331, 11, 291, 855, 257, 3186, 264, 9005, 510, 689, 456, 311, 257, 707, 1032, 50816, 50816, 322, 264, 3663, 11, 291, 2944, 309, 766, 11, 293, 264, 1032, 7038, 281, 15706, 294, 264, 1988, 13, 50974, 50974, 467, 311, 257, 4282, 11, 295, 1164, 13, 51098, 51098, 15820, 530, 10268, 1689, 3202, 13, 51246, 51246, 663, 311, 1071, 551, 436, 536, 11, 291, 458, 11, 436, 536, 439, 3685, 295, 1507, 1830, 641, 786, 13, 51468, 51468, 814, 1466, 490, 633, 2167, 472, 295, 552, 11, 457, 300, 1177, 380, 6365, 552, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.184435173869133, "compression_ratio": 1.6748251748251748, "no_speech_prob": 4.63730793853756e-06}, {"id": 80, "seek": 33416, "start": 336.0, "end": 338.78000000000003, "text": " And they tell you around nine months.", "tokens": [50364, 509, 458, 11, 562, 360, 436, 1466, 300, 6565, 366, 3442, 281, 2100, 30, 50456, 50456, 400, 436, 980, 291, 926, 4949, 2493, 13, 50595, 50595, 407, 949, 4949, 2493, 1331, 11, 291, 855, 257, 3186, 264, 9005, 510, 689, 456, 311, 257, 707, 1032, 50816, 50816, 322, 264, 3663, 11, 291, 2944, 309, 766, 11, 293, 264, 1032, 7038, 281, 15706, 294, 264, 1988, 13, 50974, 50974, 467, 311, 257, 4282, 11, 295, 1164, 13, 51098, 51098, 15820, 530, 10268, 1689, 3202, 13, 51246, 51246, 663, 311, 1071, 551, 436, 536, 11, 291, 458, 11, 436, 536, 439, 3685, 295, 1507, 1830, 641, 786, 13, 51468, 51468, 814, 1466, 490, 633, 2167, 472, 295, 552, 11, 457, 300, 1177, 380, 6365, 552, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.184435173869133, "compression_ratio": 1.6748251748251748, "no_speech_prob": 4.63730793853756e-06}, {"id": 81, "seek": 33416, "start": 338.78000000000003, "end": 343.20000000000005, "text": " So before nine months old, you show a baby the scenario here where there's a little car", "tokens": [50364, 509, 458, 11, 562, 360, 436, 1466, 300, 6565, 366, 3442, 281, 2100, 30, 50456, 50456, 400, 436, 980, 291, 926, 4949, 2493, 13, 50595, 50595, 407, 949, 4949, 2493, 1331, 11, 291, 855, 257, 3186, 264, 9005, 510, 689, 456, 311, 257, 707, 1032, 50816, 50816, 322, 264, 3663, 11, 291, 2944, 309, 766, 11, 293, 264, 1032, 7038, 281, 15706, 294, 264, 1988, 13, 50974, 50974, 467, 311, 257, 4282, 11, 295, 1164, 13, 51098, 51098, 15820, 530, 10268, 1689, 3202, 13, 51246, 51246, 663, 311, 1071, 551, 436, 536, 11, 291, 458, 11, 436, 536, 439, 3685, 295, 1507, 1830, 641, 786, 13, 51468, 51468, 814, 1466, 490, 633, 2167, 472, 295, 552, 11, 457, 300, 1177, 380, 6365, 552, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.184435173869133, "compression_ratio": 1.6748251748251748, "no_speech_prob": 4.63730793853756e-06}, {"id": 82, "seek": 33416, "start": 343.20000000000005, "end": 346.36, "text": " on the platform, you push it off, and the car appears to float in the air.", "tokens": [50364, 509, 458, 11, 562, 360, 436, 1466, 300, 6565, 366, 3442, 281, 2100, 30, 50456, 50456, 400, 436, 980, 291, 926, 4949, 2493, 13, 50595, 50595, 407, 949, 4949, 2493, 1331, 11, 291, 855, 257, 3186, 264, 9005, 510, 689, 456, 311, 257, 707, 1032, 50816, 50816, 322, 264, 3663, 11, 291, 2944, 309, 766, 11, 293, 264, 1032, 7038, 281, 15706, 294, 264, 1988, 13, 50974, 50974, 467, 311, 257, 4282, 11, 295, 1164, 13, 51098, 51098, 15820, 530, 10268, 1689, 3202, 13, 51246, 51246, 663, 311, 1071, 551, 436, 536, 11, 291, 458, 11, 436, 536, 439, 3685, 295, 1507, 1830, 641, 786, 13, 51468, 51468, 814, 1466, 490, 633, 2167, 472, 295, 552, 11, 457, 300, 1177, 380, 6365, 552, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.184435173869133, "compression_ratio": 1.6748251748251748, "no_speech_prob": 4.63730793853756e-06}, {"id": 83, "seek": 33416, "start": 346.36, "end": 348.84000000000003, "text": " It's a trick, of course.", "tokens": [50364, 509, 458, 11, 562, 360, 436, 1466, 300, 6565, 366, 3442, 281, 2100, 30, 50456, 50456, 400, 436, 980, 291, 926, 4949, 2493, 13, 50595, 50595, 407, 949, 4949, 2493, 1331, 11, 291, 855, 257, 3186, 264, 9005, 510, 689, 456, 311, 257, 707, 1032, 50816, 50816, 322, 264, 3663, 11, 291, 2944, 309, 766, 11, 293, 264, 1032, 7038, 281, 15706, 294, 264, 1988, 13, 50974, 50974, 467, 311, 257, 4282, 11, 295, 1164, 13, 51098, 51098, 15820, 530, 10268, 1689, 3202, 13, 51246, 51246, 663, 311, 1071, 551, 436, 536, 11, 291, 458, 11, 436, 536, 439, 3685, 295, 1507, 1830, 641, 786, 13, 51468, 51468, 814, 1466, 490, 633, 2167, 472, 295, 552, 11, 457, 300, 1177, 380, 6365, 552, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.184435173869133, "compression_ratio": 1.6748251748251748, "no_speech_prob": 4.63730793853756e-06}, {"id": 84, "seek": 33416, "start": 348.84000000000003, "end": 351.8, "text": " Babies barely pay attention.", "tokens": [50364, 509, 458, 11, 562, 360, 436, 1466, 300, 6565, 366, 3442, 281, 2100, 30, 50456, 50456, 400, 436, 980, 291, 926, 4949, 2493, 13, 50595, 50595, 407, 949, 4949, 2493, 1331, 11, 291, 855, 257, 3186, 264, 9005, 510, 689, 456, 311, 257, 707, 1032, 50816, 50816, 322, 264, 3663, 11, 291, 2944, 309, 766, 11, 293, 264, 1032, 7038, 281, 15706, 294, 264, 1988, 13, 50974, 50974, 467, 311, 257, 4282, 11, 295, 1164, 13, 51098, 51098, 15820, 530, 10268, 1689, 3202, 13, 51246, 51246, 663, 311, 1071, 551, 436, 536, 11, 291, 458, 11, 436, 536, 439, 3685, 295, 1507, 1830, 641, 786, 13, 51468, 51468, 814, 1466, 490, 633, 2167, 472, 295, 552, 11, 457, 300, 1177, 380, 6365, 552, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.184435173869133, "compression_ratio": 1.6748251748251748, "no_speech_prob": 4.63730793853756e-06}, {"id": 85, "seek": 33416, "start": 351.8, "end": 356.24, "text": " That's another thing they see, you know, they see all kinds of stuff during their day.", "tokens": [50364, 509, 458, 11, 562, 360, 436, 1466, 300, 6565, 366, 3442, 281, 2100, 30, 50456, 50456, 400, 436, 980, 291, 926, 4949, 2493, 13, 50595, 50595, 407, 949, 4949, 2493, 1331, 11, 291, 855, 257, 3186, 264, 9005, 510, 689, 456, 311, 257, 707, 1032, 50816, 50816, 322, 264, 3663, 11, 291, 2944, 309, 766, 11, 293, 264, 1032, 7038, 281, 15706, 294, 264, 1988, 13, 50974, 50974, 467, 311, 257, 4282, 11, 295, 1164, 13, 51098, 51098, 15820, 530, 10268, 1689, 3202, 13, 51246, 51246, 663, 311, 1071, 551, 436, 536, 11, 291, 458, 11, 436, 536, 439, 3685, 295, 1507, 1830, 641, 786, 13, 51468, 51468, 814, 1466, 490, 633, 2167, 472, 295, 552, 11, 457, 300, 1177, 380, 6365, 552, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.184435173869133, "compression_ratio": 1.6748251748251748, "no_speech_prob": 4.63730793853756e-06}, {"id": 86, "seek": 33416, "start": 356.24, "end": 360.58000000000004, "text": " They learn from every single one of them, but that doesn't surprise them.", "tokens": [50364, 509, 458, 11, 562, 360, 436, 1466, 300, 6565, 366, 3442, 281, 2100, 30, 50456, 50456, 400, 436, 980, 291, 926, 4949, 2493, 13, 50595, 50595, 407, 949, 4949, 2493, 1331, 11, 291, 855, 257, 3186, 264, 9005, 510, 689, 456, 311, 257, 707, 1032, 50816, 50816, 322, 264, 3663, 11, 291, 2944, 309, 766, 11, 293, 264, 1032, 7038, 281, 15706, 294, 264, 1988, 13, 50974, 50974, 467, 311, 257, 4282, 11, 295, 1164, 13, 51098, 51098, 15820, 530, 10268, 1689, 3202, 13, 51246, 51246, 663, 311, 1071, 551, 436, 536, 11, 291, 458, 11, 436, 536, 439, 3685, 295, 1507, 1830, 641, 786, 13, 51468, 51468, 814, 1466, 490, 633, 2167, 472, 295, 552, 11, 457, 300, 1177, 380, 6365, 552, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.184435173869133, "compression_ratio": 1.6748251748251748, "no_speech_prob": 4.63730793853756e-06}, {"id": 87, "seek": 36058, "start": 360.58, "end": 365.8, "text": " After nine months old, they've learned about gravity, and they look at this like a little", "tokens": [50364, 2381, 4949, 2493, 1331, 11, 436, 600, 3264, 466, 12110, 11, 293, 436, 574, 412, 341, 411, 257, 707, 50625, 50625, 2013, 510, 13, 50675, 50675, 814, 434, 534, 11, 534, 6100, 11, 570, 294, 264, 14991, 11, 436, 600, 3264, 300, 6565, 50819, 50819, 366, 406, 3442, 281, 11, 291, 458, 11, 733, 295, 15706, 294, 264, 1988, 11, 436, 434, 3442, 281, 2100, 498, 436, 434, 50985, 50985, 406, 8104, 13, 51135, 51135, 400, 370, 300, 311, 767, 257, 4282, 300, 11, 257, 3170, 11, 286, 576, 584, 300, 4681, 5317, 4642, 307, 1143, 281, 5876, 51419, 51419, 562, 10917, 1466, 777, 10392, 13, 51515, 51515, 407, 291, 458, 11, 10917, 1466, 1851, 11603, 588, 2661, 11, 293, 291, 458, 11, 341, 727, 312, 11, 291, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17653359788836856, "compression_ratio": 1.7902097902097902, "no_speech_prob": 2.123264721376472e-06}, {"id": 88, "seek": 36058, "start": 365.8, "end": 366.8, "text": " girl here.", "tokens": [50364, 2381, 4949, 2493, 1331, 11, 436, 600, 3264, 466, 12110, 11, 293, 436, 574, 412, 341, 411, 257, 707, 50625, 50625, 2013, 510, 13, 50675, 50675, 814, 434, 534, 11, 534, 6100, 11, 570, 294, 264, 14991, 11, 436, 600, 3264, 300, 6565, 50819, 50819, 366, 406, 3442, 281, 11, 291, 458, 11, 733, 295, 15706, 294, 264, 1988, 11, 436, 434, 3442, 281, 2100, 498, 436, 434, 50985, 50985, 406, 8104, 13, 51135, 51135, 400, 370, 300, 311, 767, 257, 4282, 300, 11, 257, 3170, 11, 286, 576, 584, 300, 4681, 5317, 4642, 307, 1143, 281, 5876, 51419, 51419, 562, 10917, 1466, 777, 10392, 13, 51515, 51515, 407, 291, 458, 11, 10917, 1466, 1851, 11603, 588, 2661, 11, 293, 291, 458, 11, 341, 727, 312, 11, 291, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17653359788836856, "compression_ratio": 1.7902097902097902, "no_speech_prob": 2.123264721376472e-06}, {"id": 89, "seek": 36058, "start": 366.8, "end": 369.68, "text": " They're really, really surprised, because in the meantime, they've learned that objects", "tokens": [50364, 2381, 4949, 2493, 1331, 11, 436, 600, 3264, 466, 12110, 11, 293, 436, 574, 412, 341, 411, 257, 707, 50625, 50625, 2013, 510, 13, 50675, 50675, 814, 434, 534, 11, 534, 6100, 11, 570, 294, 264, 14991, 11, 436, 600, 3264, 300, 6565, 50819, 50819, 366, 406, 3442, 281, 11, 291, 458, 11, 733, 295, 15706, 294, 264, 1988, 11, 436, 434, 3442, 281, 2100, 498, 436, 434, 50985, 50985, 406, 8104, 13, 51135, 51135, 400, 370, 300, 311, 767, 257, 4282, 300, 11, 257, 3170, 11, 286, 576, 584, 300, 4681, 5317, 4642, 307, 1143, 281, 5876, 51419, 51419, 562, 10917, 1466, 777, 10392, 13, 51515, 51515, 407, 291, 458, 11, 10917, 1466, 1851, 11603, 588, 2661, 11, 293, 291, 458, 11, 341, 727, 312, 11, 291, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17653359788836856, "compression_ratio": 1.7902097902097902, "no_speech_prob": 2.123264721376472e-06}, {"id": 90, "seek": 36058, "start": 369.68, "end": 373.0, "text": " are not supposed to, you know, kind of float in the air, they're supposed to fall if they're", "tokens": [50364, 2381, 4949, 2493, 1331, 11, 436, 600, 3264, 466, 12110, 11, 293, 436, 574, 412, 341, 411, 257, 707, 50625, 50625, 2013, 510, 13, 50675, 50675, 814, 434, 534, 11, 534, 6100, 11, 570, 294, 264, 14991, 11, 436, 600, 3264, 300, 6565, 50819, 50819, 366, 406, 3442, 281, 11, 291, 458, 11, 733, 295, 15706, 294, 264, 1988, 11, 436, 434, 3442, 281, 2100, 498, 436, 434, 50985, 50985, 406, 8104, 13, 51135, 51135, 400, 370, 300, 311, 767, 257, 4282, 300, 11, 257, 3170, 11, 286, 576, 584, 300, 4681, 5317, 4642, 307, 1143, 281, 5876, 51419, 51419, 562, 10917, 1466, 777, 10392, 13, 51515, 51515, 407, 291, 458, 11, 10917, 1466, 1851, 11603, 588, 2661, 11, 293, 291, 458, 11, 341, 727, 312, 11, 291, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17653359788836856, "compression_ratio": 1.7902097902097902, "no_speech_prob": 2.123264721376472e-06}, {"id": 91, "seek": 36058, "start": 373.0, "end": 376.0, "text": " not supported.", "tokens": [50364, 2381, 4949, 2493, 1331, 11, 436, 600, 3264, 466, 12110, 11, 293, 436, 574, 412, 341, 411, 257, 707, 50625, 50625, 2013, 510, 13, 50675, 50675, 814, 434, 534, 11, 534, 6100, 11, 570, 294, 264, 14991, 11, 436, 600, 3264, 300, 6565, 50819, 50819, 366, 406, 3442, 281, 11, 291, 458, 11, 733, 295, 15706, 294, 264, 1988, 11, 436, 434, 3442, 281, 2100, 498, 436, 434, 50985, 50985, 406, 8104, 13, 51135, 51135, 400, 370, 300, 311, 767, 257, 4282, 300, 11, 257, 3170, 11, 286, 576, 584, 300, 4681, 5317, 4642, 307, 1143, 281, 5876, 51419, 51419, 562, 10917, 1466, 777, 10392, 13, 51515, 51515, 407, 291, 458, 11, 10917, 1466, 1851, 11603, 588, 2661, 11, 293, 291, 458, 11, 341, 727, 312, 11, 291, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17653359788836856, "compression_ratio": 1.7902097902097902, "no_speech_prob": 2.123264721376472e-06}, {"id": 92, "seek": 36058, "start": 376.0, "end": 381.68, "text": " And so that's actually a trick that, a method, I would say that psychophysis is used to identify", "tokens": [50364, 2381, 4949, 2493, 1331, 11, 436, 600, 3264, 466, 12110, 11, 293, 436, 574, 412, 341, 411, 257, 707, 50625, 50625, 2013, 510, 13, 50675, 50675, 814, 434, 534, 11, 534, 6100, 11, 570, 294, 264, 14991, 11, 436, 600, 3264, 300, 6565, 50819, 50819, 366, 406, 3442, 281, 11, 291, 458, 11, 733, 295, 15706, 294, 264, 1988, 11, 436, 434, 3442, 281, 2100, 498, 436, 434, 50985, 50985, 406, 8104, 13, 51135, 51135, 400, 370, 300, 311, 767, 257, 4282, 300, 11, 257, 3170, 11, 286, 576, 584, 300, 4681, 5317, 4642, 307, 1143, 281, 5876, 51419, 51419, 562, 10917, 1466, 777, 10392, 13, 51515, 51515, 407, 291, 458, 11, 10917, 1466, 1851, 11603, 588, 2661, 11, 293, 291, 458, 11, 341, 727, 312, 11, 291, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17653359788836856, "compression_ratio": 1.7902097902097902, "no_speech_prob": 2.123264721376472e-06}, {"id": 93, "seek": 36058, "start": 381.68, "end": 383.59999999999997, "text": " when babies learn new concepts.", "tokens": [50364, 2381, 4949, 2493, 1331, 11, 436, 600, 3264, 466, 12110, 11, 293, 436, 574, 412, 341, 411, 257, 707, 50625, 50625, 2013, 510, 13, 50675, 50675, 814, 434, 534, 11, 534, 6100, 11, 570, 294, 264, 14991, 11, 436, 600, 3264, 300, 6565, 50819, 50819, 366, 406, 3442, 281, 11, 291, 458, 11, 733, 295, 15706, 294, 264, 1988, 11, 436, 434, 3442, 281, 2100, 498, 436, 434, 50985, 50985, 406, 8104, 13, 51135, 51135, 400, 370, 300, 311, 767, 257, 4282, 300, 11, 257, 3170, 11, 286, 576, 584, 300, 4681, 5317, 4642, 307, 1143, 281, 5876, 51419, 51419, 562, 10917, 1466, 777, 10392, 13, 51515, 51515, 407, 291, 458, 11, 10917, 1466, 1851, 11603, 588, 2661, 11, 293, 291, 458, 11, 341, 727, 312, 11, 291, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17653359788836856, "compression_ratio": 1.7902097902097902, "no_speech_prob": 2.123264721376472e-06}, {"id": 94, "seek": 36058, "start": 383.59999999999997, "end": 390.08, "text": " So you know, babies learn face tracking very quickly, and you know, this could be, you", "tokens": [50364, 2381, 4949, 2493, 1331, 11, 436, 600, 3264, 466, 12110, 11, 293, 436, 574, 412, 341, 411, 257, 707, 50625, 50625, 2013, 510, 13, 50675, 50675, 814, 434, 534, 11, 534, 6100, 11, 570, 294, 264, 14991, 11, 436, 600, 3264, 300, 6565, 50819, 50819, 366, 406, 3442, 281, 11, 291, 458, 11, 733, 295, 15706, 294, 264, 1988, 11, 436, 434, 3442, 281, 2100, 498, 436, 434, 50985, 50985, 406, 8104, 13, 51135, 51135, 400, 370, 300, 311, 767, 257, 4282, 300, 11, 257, 3170, 11, 286, 576, 584, 300, 4681, 5317, 4642, 307, 1143, 281, 5876, 51419, 51419, 562, 10917, 1466, 777, 10392, 13, 51515, 51515, 407, 291, 458, 11, 10917, 1466, 1851, 11603, 588, 2661, 11, 293, 291, 458, 11, 341, 727, 312, 11, 291, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17653359788836856, "compression_ratio": 1.7902097902097902, "no_speech_prob": 2.123264721376472e-06}, {"id": 95, "seek": 39008, "start": 390.08, "end": 395.71999999999997, "text": " know, there are computational models that learn kind of phase detection based on motion,", "tokens": [50364, 458, 11, 456, 366, 28270, 5245, 300, 1466, 733, 295, 5574, 17784, 2361, 322, 5394, 11, 50646, 50646, 291, 458, 11, 2698, 12, 48172, 24420, 2361, 322, 5394, 300, 1466, 294, 2077, 13, 50794, 50794, 407, 300, 727, 312, 3264, 11, 457, 534, 2661, 13, 50934, 50934, 440, 10710, 295, 2657, 8105, 655, 11, 264, 1186, 300, 562, 364, 2657, 307, 7633, 2261, 1071, 51094, 51094, 472, 11, 309, 311, 920, 456, 13, 51144, 51144, 492, 500, 380, 1643, 281, 312, 4232, 365, 341, 11, 457, 321, 1466, 341, 1596, 2661, 382, 731, 13, 51332, 51332, 407, 867, 4882, 366, 4232, 365, 341, 13, 51476, 51476, 440, 16844, 1296, 36439, 293, 33113, 2905, 6565, 11, 300, 311, 3264, 926, 1045, 2493, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.18234395223950584, "compression_ratio": 1.8256227758007118, "no_speech_prob": 9.816766578296665e-06}, {"id": 96, "seek": 39008, "start": 395.71999999999997, "end": 398.68, "text": " you know, self-supervised based on motion that learn in minutes.", "tokens": [50364, 458, 11, 456, 366, 28270, 5245, 300, 1466, 733, 295, 5574, 17784, 2361, 322, 5394, 11, 50646, 50646, 291, 458, 11, 2698, 12, 48172, 24420, 2361, 322, 5394, 300, 1466, 294, 2077, 13, 50794, 50794, 407, 300, 727, 312, 3264, 11, 457, 534, 2661, 13, 50934, 50934, 440, 10710, 295, 2657, 8105, 655, 11, 264, 1186, 300, 562, 364, 2657, 307, 7633, 2261, 1071, 51094, 51094, 472, 11, 309, 311, 920, 456, 13, 51144, 51144, 492, 500, 380, 1643, 281, 312, 4232, 365, 341, 11, 457, 321, 1466, 341, 1596, 2661, 382, 731, 13, 51332, 51332, 407, 867, 4882, 366, 4232, 365, 341, 13, 51476, 51476, 440, 16844, 1296, 36439, 293, 33113, 2905, 6565, 11, 300, 311, 3264, 926, 1045, 2493, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.18234395223950584, "compression_ratio": 1.8256227758007118, "no_speech_prob": 9.816766578296665e-06}, {"id": 97, "seek": 39008, "start": 398.68, "end": 401.47999999999996, "text": " So that could be learned, but really quickly.", "tokens": [50364, 458, 11, 456, 366, 28270, 5245, 300, 1466, 733, 295, 5574, 17784, 2361, 322, 5394, 11, 50646, 50646, 291, 458, 11, 2698, 12, 48172, 24420, 2361, 322, 5394, 300, 1466, 294, 2077, 13, 50794, 50794, 407, 300, 727, 312, 3264, 11, 457, 534, 2661, 13, 50934, 50934, 440, 10710, 295, 2657, 8105, 655, 11, 264, 1186, 300, 562, 364, 2657, 307, 7633, 2261, 1071, 51094, 51094, 472, 11, 309, 311, 920, 456, 13, 51144, 51144, 492, 500, 380, 1643, 281, 312, 4232, 365, 341, 11, 457, 321, 1466, 341, 1596, 2661, 382, 731, 13, 51332, 51332, 407, 867, 4882, 366, 4232, 365, 341, 13, 51476, 51476, 440, 16844, 1296, 36439, 293, 33113, 2905, 6565, 11, 300, 311, 3264, 926, 1045, 2493, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.18234395223950584, "compression_ratio": 1.8256227758007118, "no_speech_prob": 9.816766578296665e-06}, {"id": 98, "seek": 39008, "start": 401.47999999999996, "end": 404.68, "text": " The notion of object permanence, the fact that when an object is hidden behind another", "tokens": [50364, 458, 11, 456, 366, 28270, 5245, 300, 1466, 733, 295, 5574, 17784, 2361, 322, 5394, 11, 50646, 50646, 291, 458, 11, 2698, 12, 48172, 24420, 2361, 322, 5394, 300, 1466, 294, 2077, 13, 50794, 50794, 407, 300, 727, 312, 3264, 11, 457, 534, 2661, 13, 50934, 50934, 440, 10710, 295, 2657, 8105, 655, 11, 264, 1186, 300, 562, 364, 2657, 307, 7633, 2261, 1071, 51094, 51094, 472, 11, 309, 311, 920, 456, 13, 51144, 51144, 492, 500, 380, 1643, 281, 312, 4232, 365, 341, 11, 457, 321, 1466, 341, 1596, 2661, 382, 731, 13, 51332, 51332, 407, 867, 4882, 366, 4232, 365, 341, 13, 51476, 51476, 440, 16844, 1296, 36439, 293, 33113, 2905, 6565, 11, 300, 311, 3264, 926, 1045, 2493, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.18234395223950584, "compression_ratio": 1.8256227758007118, "no_speech_prob": 9.816766578296665e-06}, {"id": 99, "seek": 39008, "start": 404.68, "end": 405.68, "text": " one, it's still there.", "tokens": [50364, 458, 11, 456, 366, 28270, 5245, 300, 1466, 733, 295, 5574, 17784, 2361, 322, 5394, 11, 50646, 50646, 291, 458, 11, 2698, 12, 48172, 24420, 2361, 322, 5394, 300, 1466, 294, 2077, 13, 50794, 50794, 407, 300, 727, 312, 3264, 11, 457, 534, 2661, 13, 50934, 50934, 440, 10710, 295, 2657, 8105, 655, 11, 264, 1186, 300, 562, 364, 2657, 307, 7633, 2261, 1071, 51094, 51094, 472, 11, 309, 311, 920, 456, 13, 51144, 51144, 492, 500, 380, 1643, 281, 312, 4232, 365, 341, 11, 457, 321, 1466, 341, 1596, 2661, 382, 731, 13, 51332, 51332, 407, 867, 4882, 366, 4232, 365, 341, 13, 51476, 51476, 440, 16844, 1296, 36439, 293, 33113, 2905, 6565, 11, 300, 311, 3264, 926, 1045, 2493, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.18234395223950584, "compression_ratio": 1.8256227758007118, "no_speech_prob": 9.816766578296665e-06}, {"id": 100, "seek": 39008, "start": 405.68, "end": 409.44, "text": " We don't seem to be born with this, but we learn this quite quickly as well.", "tokens": [50364, 458, 11, 456, 366, 28270, 5245, 300, 1466, 733, 295, 5574, 17784, 2361, 322, 5394, 11, 50646, 50646, 291, 458, 11, 2698, 12, 48172, 24420, 2361, 322, 5394, 300, 1466, 294, 2077, 13, 50794, 50794, 407, 300, 727, 312, 3264, 11, 457, 534, 2661, 13, 50934, 50934, 440, 10710, 295, 2657, 8105, 655, 11, 264, 1186, 300, 562, 364, 2657, 307, 7633, 2261, 1071, 51094, 51094, 472, 11, 309, 311, 920, 456, 13, 51144, 51144, 492, 500, 380, 1643, 281, 312, 4232, 365, 341, 11, 457, 321, 1466, 341, 1596, 2661, 382, 731, 13, 51332, 51332, 407, 867, 4882, 366, 4232, 365, 341, 13, 51476, 51476, 440, 16844, 1296, 36439, 293, 33113, 2905, 6565, 11, 300, 311, 3264, 926, 1045, 2493, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.18234395223950584, "compression_ratio": 1.8256227758007118, "no_speech_prob": 9.816766578296665e-06}, {"id": 101, "seek": 39008, "start": 409.44, "end": 412.32, "text": " So many animals are born with this.", "tokens": [50364, 458, 11, 456, 366, 28270, 5245, 300, 1466, 733, 295, 5574, 17784, 2361, 322, 5394, 11, 50646, 50646, 291, 458, 11, 2698, 12, 48172, 24420, 2361, 322, 5394, 300, 1466, 294, 2077, 13, 50794, 50794, 407, 300, 727, 312, 3264, 11, 457, 534, 2661, 13, 50934, 50934, 440, 10710, 295, 2657, 8105, 655, 11, 264, 1186, 300, 562, 364, 2657, 307, 7633, 2261, 1071, 51094, 51094, 472, 11, 309, 311, 920, 456, 13, 51144, 51144, 492, 500, 380, 1643, 281, 312, 4232, 365, 341, 11, 457, 321, 1466, 341, 1596, 2661, 382, 731, 13, 51332, 51332, 407, 867, 4882, 366, 4232, 365, 341, 13, 51476, 51476, 440, 16844, 1296, 36439, 293, 33113, 2905, 6565, 11, 300, 311, 3264, 926, 1045, 2493, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.18234395223950584, "compression_ratio": 1.8256227758007118, "no_speech_prob": 9.816766578296665e-06}, {"id": 102, "seek": 39008, "start": 412.32, "end": 417.76, "text": " The distinction between animate and inanimate objects, that's learned around three months.", "tokens": [50364, 458, 11, 456, 366, 28270, 5245, 300, 1466, 733, 295, 5574, 17784, 2361, 322, 5394, 11, 50646, 50646, 291, 458, 11, 2698, 12, 48172, 24420, 2361, 322, 5394, 300, 1466, 294, 2077, 13, 50794, 50794, 407, 300, 727, 312, 3264, 11, 457, 534, 2661, 13, 50934, 50934, 440, 10710, 295, 2657, 8105, 655, 11, 264, 1186, 300, 562, 364, 2657, 307, 7633, 2261, 1071, 51094, 51094, 472, 11, 309, 311, 920, 456, 13, 51144, 51144, 492, 500, 380, 1643, 281, 312, 4232, 365, 341, 11, 457, 321, 1466, 341, 1596, 2661, 382, 731, 13, 51332, 51332, 407, 867, 4882, 366, 4232, 365, 341, 13, 51476, 51476, 440, 16844, 1296, 36439, 293, 33113, 2905, 6565, 11, 300, 311, 3264, 926, 1045, 2493, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.18234395223950584, "compression_ratio": 1.8256227758007118, "no_speech_prob": 9.816766578296665e-06}, {"id": 103, "seek": 41776, "start": 417.76, "end": 423.59999999999997, "text": " There are objects whose trajectory are completely predictable and others that are not animate", "tokens": [50364, 821, 366, 6565, 6104, 21512, 366, 2584, 27737, 293, 2357, 300, 366, 406, 36439, 50656, 50656, 6565, 13, 50782, 50782, 400, 510, 291, 352, 11, 12110, 11, 37234, 11, 16185, 295, 11244, 11, 1936, 437, 321, 818, 21769, 50960, 50960, 10649, 11, 300, 1487, 709, 1780, 11, 926, 4949, 2493, 13, 51210, 51210, 400, 309, 1542, 382, 498, 11, 420, 1310, 300, 311, 257, 17291, 11, 457, 291, 458, 11, 10917, 733, 295, 1466, 1333, 295, 51458, 51458, 3875, 10392, 733, 295, 322, 257, 3233, 538, 3233, 5143, 11, 1333, 295, 2390, 544, 12649, 10392, 51696, 51696, 322, 1192, 295, 18587, 2306, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16446728572667202, "compression_ratio": 1.6851851851851851, "no_speech_prob": 2.8571496386575745e-06}, {"id": 104, "seek": 41776, "start": 423.59999999999997, "end": 426.12, "text": " objects.", "tokens": [50364, 821, 366, 6565, 6104, 21512, 366, 2584, 27737, 293, 2357, 300, 366, 406, 36439, 50656, 50656, 6565, 13, 50782, 50782, 400, 510, 291, 352, 11, 12110, 11, 37234, 11, 16185, 295, 11244, 11, 1936, 437, 321, 818, 21769, 50960, 50960, 10649, 11, 300, 1487, 709, 1780, 11, 926, 4949, 2493, 13, 51210, 51210, 400, 309, 1542, 382, 498, 11, 420, 1310, 300, 311, 257, 17291, 11, 457, 291, 458, 11, 10917, 733, 295, 1466, 1333, 295, 51458, 51458, 3875, 10392, 733, 295, 322, 257, 3233, 538, 3233, 5143, 11, 1333, 295, 2390, 544, 12649, 10392, 51696, 51696, 322, 1192, 295, 18587, 2306, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16446728572667202, "compression_ratio": 1.6851851851851851, "no_speech_prob": 2.8571496386575745e-06}, {"id": 105, "seek": 41776, "start": 426.12, "end": 429.68, "text": " And here you go, gravity, inertia, conservation of momentum, basically what we call intuitive", "tokens": [50364, 821, 366, 6565, 6104, 21512, 366, 2584, 27737, 293, 2357, 300, 366, 406, 36439, 50656, 50656, 6565, 13, 50782, 50782, 400, 510, 291, 352, 11, 12110, 11, 37234, 11, 16185, 295, 11244, 11, 1936, 437, 321, 818, 21769, 50960, 50960, 10649, 11, 300, 1487, 709, 1780, 11, 926, 4949, 2493, 13, 51210, 51210, 400, 309, 1542, 382, 498, 11, 420, 1310, 300, 311, 257, 17291, 11, 457, 291, 458, 11, 10917, 733, 295, 1466, 1333, 295, 51458, 51458, 3875, 10392, 733, 295, 322, 257, 3233, 538, 3233, 5143, 11, 1333, 295, 2390, 544, 12649, 10392, 51696, 51696, 322, 1192, 295, 18587, 2306, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16446728572667202, "compression_ratio": 1.6851851851851851, "no_speech_prob": 2.8571496386575745e-06}, {"id": 106, "seek": 41776, "start": 429.68, "end": 434.68, "text": " physics, that comes much later, around nine months.", "tokens": [50364, 821, 366, 6565, 6104, 21512, 366, 2584, 27737, 293, 2357, 300, 366, 406, 36439, 50656, 50656, 6565, 13, 50782, 50782, 400, 510, 291, 352, 11, 12110, 11, 37234, 11, 16185, 295, 11244, 11, 1936, 437, 321, 818, 21769, 50960, 50960, 10649, 11, 300, 1487, 709, 1780, 11, 926, 4949, 2493, 13, 51210, 51210, 400, 309, 1542, 382, 498, 11, 420, 1310, 300, 311, 257, 17291, 11, 457, 291, 458, 11, 10917, 733, 295, 1466, 1333, 295, 51458, 51458, 3875, 10392, 733, 295, 322, 257, 3233, 538, 3233, 5143, 11, 1333, 295, 2390, 544, 12649, 10392, 51696, 51696, 322, 1192, 295, 18587, 2306, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16446728572667202, "compression_ratio": 1.6851851851851851, "no_speech_prob": 2.8571496386575745e-06}, {"id": 107, "seek": 41776, "start": 434.68, "end": 439.64, "text": " And it looks as if, or maybe that's a hypothesis, but you know, babies kind of learn sort of", "tokens": [50364, 821, 366, 6565, 6104, 21512, 366, 2584, 27737, 293, 2357, 300, 366, 406, 36439, 50656, 50656, 6565, 13, 50782, 50782, 400, 510, 291, 352, 11, 12110, 11, 37234, 11, 16185, 295, 11244, 11, 1936, 437, 321, 818, 21769, 50960, 50960, 10649, 11, 300, 1487, 709, 1780, 11, 926, 4949, 2493, 13, 51210, 51210, 400, 309, 1542, 382, 498, 11, 420, 1310, 300, 311, 257, 17291, 11, 457, 291, 458, 11, 10917, 733, 295, 1466, 1333, 295, 51458, 51458, 3875, 10392, 733, 295, 322, 257, 3233, 538, 3233, 5143, 11, 1333, 295, 2390, 544, 12649, 10392, 51696, 51696, 322, 1192, 295, 18587, 2306, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16446728572667202, "compression_ratio": 1.6851851851851851, "no_speech_prob": 2.8571496386575745e-06}, {"id": 108, "seek": 41776, "start": 439.64, "end": 444.4, "text": " basic concepts kind of on a stage by stage basis, sort of building more abstract concepts", "tokens": [50364, 821, 366, 6565, 6104, 21512, 366, 2584, 27737, 293, 2357, 300, 366, 406, 36439, 50656, 50656, 6565, 13, 50782, 50782, 400, 510, 291, 352, 11, 12110, 11, 37234, 11, 16185, 295, 11244, 11, 1936, 437, 321, 818, 21769, 50960, 50960, 10649, 11, 300, 1487, 709, 1780, 11, 926, 4949, 2493, 13, 51210, 51210, 400, 309, 1542, 382, 498, 11, 420, 1310, 300, 311, 257, 17291, 11, 457, 291, 458, 11, 10917, 733, 295, 1466, 1333, 295, 51458, 51458, 3875, 10392, 733, 295, 322, 257, 3233, 538, 3233, 5143, 11, 1333, 295, 2390, 544, 12649, 10392, 51696, 51696, 322, 1192, 295, 18587, 2306, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16446728572667202, "compression_ratio": 1.6851851851851851, "no_speech_prob": 2.8571496386575745e-06}, {"id": 109, "seek": 41776, "start": 444.4, "end": 445.84, "text": " on top of simpler ones.", "tokens": [50364, 821, 366, 6565, 6104, 21512, 366, 2584, 27737, 293, 2357, 300, 366, 406, 36439, 50656, 50656, 6565, 13, 50782, 50782, 400, 510, 291, 352, 11, 12110, 11, 37234, 11, 16185, 295, 11244, 11, 1936, 437, 321, 818, 21769, 50960, 50960, 10649, 11, 300, 1487, 709, 1780, 11, 926, 4949, 2493, 13, 51210, 51210, 400, 309, 1542, 382, 498, 11, 420, 1310, 300, 311, 257, 17291, 11, 457, 291, 458, 11, 10917, 733, 295, 1466, 1333, 295, 51458, 51458, 3875, 10392, 733, 295, 322, 257, 3233, 538, 3233, 5143, 11, 1333, 295, 2390, 544, 12649, 10392, 51696, 51696, 322, 1192, 295, 18587, 2306, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16446728572667202, "compression_ratio": 1.6851851851851851, "no_speech_prob": 2.8571496386575745e-06}, {"id": 110, "seek": 44584, "start": 445.84, "end": 450.85999999999996, "text": " So for example, you know, are we born with a concept that the world is three dimensional?", "tokens": [50364, 407, 337, 1365, 11, 291, 458, 11, 366, 321, 4232, 365, 257, 3410, 300, 264, 1002, 307, 1045, 18795, 30, 50615, 50615, 1610, 360, 321, 1466, 341, 30, 50725, 50725, 286, 519, 309, 311, 257, 665, 17291, 281, 519, 300, 321, 1466, 341, 13, 50858, 50858, 316, 688, 295, 41562, 486, 980, 291, 321, 434, 4232, 365, 309, 11, 457, 286, 500, 380, 536, 411, 577, 264, 51148, 51148, 33312, 727, 312, 27415, 281, 1333, 295, 11, 291, 458, 11, 291, 458, 11, 980, 505, 577, 281, 14722, 7161, 11, 558, 30, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.1379882593949636, "compression_ratio": 1.6214953271028036, "no_speech_prob": 1.8627002646098845e-05}, {"id": 111, "seek": 44584, "start": 450.85999999999996, "end": 453.06, "text": " Or do we learn this?", "tokens": [50364, 407, 337, 1365, 11, 291, 458, 11, 366, 321, 4232, 365, 257, 3410, 300, 264, 1002, 307, 1045, 18795, 30, 50615, 50615, 1610, 360, 321, 1466, 341, 30, 50725, 50725, 286, 519, 309, 311, 257, 665, 17291, 281, 519, 300, 321, 1466, 341, 13, 50858, 50858, 316, 688, 295, 41562, 486, 980, 291, 321, 434, 4232, 365, 309, 11, 457, 286, 500, 380, 536, 411, 577, 264, 51148, 51148, 33312, 727, 312, 27415, 281, 1333, 295, 11, 291, 458, 11, 291, 458, 11, 980, 505, 577, 281, 14722, 7161, 11, 558, 30, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.1379882593949636, "compression_ratio": 1.6214953271028036, "no_speech_prob": 1.8627002646098845e-05}, {"id": 112, "seek": 44584, "start": 453.06, "end": 455.71999999999997, "text": " I think it's a good hypothesis to think that we learn this.", "tokens": [50364, 407, 337, 1365, 11, 291, 458, 11, 366, 321, 4232, 365, 257, 3410, 300, 264, 1002, 307, 1045, 18795, 30, 50615, 50615, 1610, 360, 321, 1466, 341, 30, 50725, 50725, 286, 519, 309, 311, 257, 665, 17291, 281, 519, 300, 321, 1466, 341, 13, 50858, 50858, 316, 688, 295, 41562, 486, 980, 291, 321, 434, 4232, 365, 309, 11, 457, 286, 500, 380, 536, 411, 577, 264, 51148, 51148, 33312, 727, 312, 27415, 281, 1333, 295, 11, 291, 458, 11, 291, 458, 11, 980, 505, 577, 281, 14722, 7161, 11, 558, 30, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.1379882593949636, "compression_ratio": 1.6214953271028036, "no_speech_prob": 1.8627002646098845e-05}, {"id": 113, "seek": 44584, "start": 455.71999999999997, "end": 461.52, "text": " A lot of psychologists will tell you we're born with it, but I don't see like how the", "tokens": [50364, 407, 337, 1365, 11, 291, 458, 11, 366, 321, 4232, 365, 257, 3410, 300, 264, 1002, 307, 1045, 18795, 30, 50615, 50615, 1610, 360, 321, 1466, 341, 30, 50725, 50725, 286, 519, 309, 311, 257, 665, 17291, 281, 519, 300, 321, 1466, 341, 13, 50858, 50858, 316, 688, 295, 41562, 486, 980, 291, 321, 434, 4232, 365, 309, 11, 457, 286, 500, 380, 536, 411, 577, 264, 51148, 51148, 33312, 727, 312, 27415, 281, 1333, 295, 11, 291, 458, 11, 291, 458, 11, 980, 505, 577, 281, 14722, 7161, 11, 558, 30, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.1379882593949636, "compression_ratio": 1.6214953271028036, "no_speech_prob": 1.8627002646098845e-05}, {"id": 114, "seek": 44584, "start": 461.52, "end": 470.15999999999997, "text": " cortex could be wired to sort of, you know, you know, tell us how to compute depth, right?", "tokens": [50364, 407, 337, 1365, 11, 291, 458, 11, 366, 321, 4232, 365, 257, 3410, 300, 264, 1002, 307, 1045, 18795, 30, 50615, 50615, 1610, 360, 321, 1466, 341, 30, 50725, 50725, 286, 519, 309, 311, 257, 665, 17291, 281, 519, 300, 321, 1466, 341, 13, 50858, 50858, 316, 688, 295, 41562, 486, 980, 291, 321, 434, 4232, 365, 309, 11, 457, 286, 500, 380, 536, 411, 577, 264, 51148, 51148, 33312, 727, 312, 27415, 281, 1333, 295, 11, 291, 458, 11, 291, 458, 11, 980, 505, 577, 281, 14722, 7161, 11, 558, 30, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.1379882593949636, "compression_ratio": 1.6214953271028036, "no_speech_prob": 1.8627002646098845e-05}, {"id": 115, "seek": 47016, "start": 470.16, "end": 477.02000000000004, "text": " Although there is certainly some bias in the wiring that makes this favorable in the sense", "tokens": [50364, 5780, 456, 307, 3297, 512, 12577, 294, 264, 27520, 300, 1669, 341, 29557, 294, 264, 2020, 50707, 50707, 300, 11, 291, 458, 11, 9271, 490, 264, 1411, 3313, 293, 264, 558, 3313, 767, 352, 281, 264, 912, 50850, 50850, 1081, 294, 264, 33312, 13, 50900, 50900, 407, 498, 264, 33312, 2738, 281, 14722, 47415, 11, 309, 311, 1858, 337, 309, 13, 51104, 51104, 440, 15537, 366, 456, 11, 1392, 30, 51172, 51172, 583, 264, 2445, 11, 406, 534, 13, 51306, 51306, 400, 370, 510, 307, 577, 291, 727, 14722, 11, 577, 291, 727, 1466, 300, 264, 1002, 307, 1045, 18795, 13, 51576, 51576, 759, 291, 3847, 428, 5056, 1185, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.11054432007574266, "compression_ratio": 1.7570422535211268, "no_speech_prob": 1.1299916877760552e-05}, {"id": 116, "seek": 47016, "start": 477.02000000000004, "end": 479.88000000000005, "text": " that, you know, connections from the left eye and the right eye actually go to the same", "tokens": [50364, 5780, 456, 307, 3297, 512, 12577, 294, 264, 27520, 300, 1669, 341, 29557, 294, 264, 2020, 50707, 50707, 300, 11, 291, 458, 11, 9271, 490, 264, 1411, 3313, 293, 264, 558, 3313, 767, 352, 281, 264, 912, 50850, 50850, 1081, 294, 264, 33312, 13, 50900, 50900, 407, 498, 264, 33312, 2738, 281, 14722, 47415, 11, 309, 311, 1858, 337, 309, 13, 51104, 51104, 440, 15537, 366, 456, 11, 1392, 30, 51172, 51172, 583, 264, 2445, 11, 406, 534, 13, 51306, 51306, 400, 370, 510, 307, 577, 291, 727, 14722, 11, 577, 291, 727, 1466, 300, 264, 1002, 307, 1045, 18795, 13, 51576, 51576, 759, 291, 3847, 428, 5056, 1185, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.11054432007574266, "compression_ratio": 1.7570422535211268, "no_speech_prob": 1.1299916877760552e-05}, {"id": 117, "seek": 47016, "start": 479.88000000000005, "end": 480.88000000000005, "text": " place in the cortex.", "tokens": [50364, 5780, 456, 307, 3297, 512, 12577, 294, 264, 27520, 300, 1669, 341, 29557, 294, 264, 2020, 50707, 50707, 300, 11, 291, 458, 11, 9271, 490, 264, 1411, 3313, 293, 264, 558, 3313, 767, 352, 281, 264, 912, 50850, 50850, 1081, 294, 264, 33312, 13, 50900, 50900, 407, 498, 264, 33312, 2738, 281, 14722, 47415, 11, 309, 311, 1858, 337, 309, 13, 51104, 51104, 440, 15537, 366, 456, 11, 1392, 30, 51172, 51172, 583, 264, 2445, 11, 406, 534, 13, 51306, 51306, 400, 370, 510, 307, 577, 291, 727, 14722, 11, 577, 291, 727, 1466, 300, 264, 1002, 307, 1045, 18795, 13, 51576, 51576, 759, 291, 3847, 428, 5056, 1185, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.11054432007574266, "compression_ratio": 1.7570422535211268, "no_speech_prob": 1.1299916877760552e-05}, {"id": 118, "seek": 47016, "start": 480.88000000000005, "end": 484.96000000000004, "text": " So if the cortex wants to compute disparity, it's easy for it.", "tokens": [50364, 5780, 456, 307, 3297, 512, 12577, 294, 264, 27520, 300, 1669, 341, 29557, 294, 264, 2020, 50707, 50707, 300, 11, 291, 458, 11, 9271, 490, 264, 1411, 3313, 293, 264, 558, 3313, 767, 352, 281, 264, 912, 50850, 50850, 1081, 294, 264, 33312, 13, 50900, 50900, 407, 498, 264, 33312, 2738, 281, 14722, 47415, 11, 309, 311, 1858, 337, 309, 13, 51104, 51104, 440, 15537, 366, 456, 11, 1392, 30, 51172, 51172, 583, 264, 2445, 11, 406, 534, 13, 51306, 51306, 400, 370, 510, 307, 577, 291, 727, 14722, 11, 577, 291, 727, 1466, 300, 264, 1002, 307, 1045, 18795, 13, 51576, 51576, 759, 291, 3847, 428, 5056, 1185, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.11054432007574266, "compression_ratio": 1.7570422535211268, "no_speech_prob": 1.1299916877760552e-05}, {"id": 119, "seek": 47016, "start": 484.96000000000004, "end": 486.32000000000005, "text": " The wires are there, okay?", "tokens": [50364, 5780, 456, 307, 3297, 512, 12577, 294, 264, 27520, 300, 1669, 341, 29557, 294, 264, 2020, 50707, 50707, 300, 11, 291, 458, 11, 9271, 490, 264, 1411, 3313, 293, 264, 558, 3313, 767, 352, 281, 264, 912, 50850, 50850, 1081, 294, 264, 33312, 13, 50900, 50900, 407, 498, 264, 33312, 2738, 281, 14722, 47415, 11, 309, 311, 1858, 337, 309, 13, 51104, 51104, 440, 15537, 366, 456, 11, 1392, 30, 51172, 51172, 583, 264, 2445, 11, 406, 534, 13, 51306, 51306, 400, 370, 510, 307, 577, 291, 727, 14722, 11, 577, 291, 727, 1466, 300, 264, 1002, 307, 1045, 18795, 13, 51576, 51576, 759, 291, 3847, 428, 5056, 1185, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.11054432007574266, "compression_ratio": 1.7570422535211268, "no_speech_prob": 1.1299916877760552e-05}, {"id": 120, "seek": 47016, "start": 486.32000000000005, "end": 489.0, "text": " But the function, not really.", "tokens": [50364, 5780, 456, 307, 3297, 512, 12577, 294, 264, 27520, 300, 1669, 341, 29557, 294, 264, 2020, 50707, 50707, 300, 11, 291, 458, 11, 9271, 490, 264, 1411, 3313, 293, 264, 558, 3313, 767, 352, 281, 264, 912, 50850, 50850, 1081, 294, 264, 33312, 13, 50900, 50900, 407, 498, 264, 33312, 2738, 281, 14722, 47415, 11, 309, 311, 1858, 337, 309, 13, 51104, 51104, 440, 15537, 366, 456, 11, 1392, 30, 51172, 51172, 583, 264, 2445, 11, 406, 534, 13, 51306, 51306, 400, 370, 510, 307, 577, 291, 727, 14722, 11, 577, 291, 727, 1466, 300, 264, 1002, 307, 1045, 18795, 13, 51576, 51576, 759, 291, 3847, 428, 5056, 1185, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.11054432007574266, "compression_ratio": 1.7570422535211268, "no_speech_prob": 1.1299916877760552e-05}, {"id": 121, "seek": 47016, "start": 489.0, "end": 494.40000000000003, "text": " And so here is how you could compute, how you could learn that the world is three dimensional.", "tokens": [50364, 5780, 456, 307, 3297, 512, 12577, 294, 264, 27520, 300, 1669, 341, 29557, 294, 264, 2020, 50707, 50707, 300, 11, 291, 458, 11, 9271, 490, 264, 1411, 3313, 293, 264, 558, 3313, 767, 352, 281, 264, 912, 50850, 50850, 1081, 294, 264, 33312, 13, 50900, 50900, 407, 498, 264, 33312, 2738, 281, 14722, 47415, 11, 309, 311, 1858, 337, 309, 13, 51104, 51104, 440, 15537, 366, 456, 11, 1392, 30, 51172, 51172, 583, 264, 2445, 11, 406, 534, 13, 51306, 51306, 400, 370, 510, 307, 577, 291, 727, 14722, 11, 577, 291, 727, 1466, 300, 264, 1002, 307, 1045, 18795, 13, 51576, 51576, 759, 291, 3847, 428, 5056, 1185, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.11054432007574266, "compression_ratio": 1.7570422535211268, "no_speech_prob": 1.1299916877760552e-05}, {"id": 122, "seek": 47016, "start": 494.40000000000003, "end": 498.64000000000004, "text": " If you train your visual system to predict what the world is going to look like when", "tokens": [50364, 5780, 456, 307, 3297, 512, 12577, 294, 264, 27520, 300, 1669, 341, 29557, 294, 264, 2020, 50707, 50707, 300, 11, 291, 458, 11, 9271, 490, 264, 1411, 3313, 293, 264, 558, 3313, 767, 352, 281, 264, 912, 50850, 50850, 1081, 294, 264, 33312, 13, 50900, 50900, 407, 498, 264, 33312, 2738, 281, 14722, 47415, 11, 309, 311, 1858, 337, 309, 13, 51104, 51104, 440, 15537, 366, 456, 11, 1392, 30, 51172, 51172, 583, 264, 2445, 11, 406, 534, 13, 51306, 51306, 400, 370, 510, 307, 577, 291, 727, 14722, 11, 577, 291, 727, 1466, 300, 264, 1002, 307, 1045, 18795, 13, 51576, 51576, 759, 291, 3847, 428, 5056, 1185, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.11054432007574266, "compression_ratio": 1.7570422535211268, "no_speech_prob": 1.1299916877760552e-05}, {"id": 123, "seek": 49864, "start": 498.64, "end": 504.8, "text": " you move your head, the best explanation for how the world changes is the fact that every", "tokens": [50364, 291, 1286, 428, 1378, 11, 264, 1151, 10835, 337, 577, 264, 1002, 2962, 307, 264, 1186, 300, 633, 50672, 50672, 19261, 11, 633, 4914, 294, 264, 1002, 575, 257, 7161, 11, 558, 30, 50810, 50810, 1436, 550, 291, 483, 8069, 2797, 5394, 13, 50896, 50896, 407, 26947, 356, 11, 498, 291, 1466, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 291, 1286, 51094, 51094, 428, 1378, 11, 291, 434, 516, 281, 362, 281, 1466, 7161, 26947, 356, 11, 754, 498, 291, 362, 572, 1558, 300, 51256, 51256, 264, 1002, 307, 1045, 18795, 13, 51306, 51306, 1436, 300, 311, 264, 1151, 636, 281, 2903, 577, 264, 1002, 2962, 13, 51444, 51444, 1033, 30, 51494, 51494, 407, 300, 311, 364, 1558, 300, 13409, 577, 321, 393, 1466, 588, 2199, 10392, 445, 538, 2539, 51728, 51728, 281, 6069, 11, 4476, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11432043930579876, "compression_ratio": 1.9489795918367347, "no_speech_prob": 1.9523526134435087e-05}, {"id": 124, "seek": 49864, "start": 504.8, "end": 507.56, "text": " pixel, every location in the world has a depth, right?", "tokens": [50364, 291, 1286, 428, 1378, 11, 264, 1151, 10835, 337, 577, 264, 1002, 2962, 307, 264, 1186, 300, 633, 50672, 50672, 19261, 11, 633, 4914, 294, 264, 1002, 575, 257, 7161, 11, 558, 30, 50810, 50810, 1436, 550, 291, 483, 8069, 2797, 5394, 13, 50896, 50896, 407, 26947, 356, 11, 498, 291, 1466, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 291, 1286, 51094, 51094, 428, 1378, 11, 291, 434, 516, 281, 362, 281, 1466, 7161, 26947, 356, 11, 754, 498, 291, 362, 572, 1558, 300, 51256, 51256, 264, 1002, 307, 1045, 18795, 13, 51306, 51306, 1436, 300, 311, 264, 1151, 636, 281, 2903, 577, 264, 1002, 2962, 13, 51444, 51444, 1033, 30, 51494, 51494, 407, 300, 311, 364, 1558, 300, 13409, 577, 321, 393, 1466, 588, 2199, 10392, 445, 538, 2539, 51728, 51728, 281, 6069, 11, 4476, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11432043930579876, "compression_ratio": 1.9489795918367347, "no_speech_prob": 1.9523526134435087e-05}, {"id": 125, "seek": 49864, "start": 507.56, "end": 509.28, "text": " Because then you get parallax motion.", "tokens": [50364, 291, 1286, 428, 1378, 11, 264, 1151, 10835, 337, 577, 264, 1002, 2962, 307, 264, 1186, 300, 633, 50672, 50672, 19261, 11, 633, 4914, 294, 264, 1002, 575, 257, 7161, 11, 558, 30, 50810, 50810, 1436, 550, 291, 483, 8069, 2797, 5394, 13, 50896, 50896, 407, 26947, 356, 11, 498, 291, 1466, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 291, 1286, 51094, 51094, 428, 1378, 11, 291, 434, 516, 281, 362, 281, 1466, 7161, 26947, 356, 11, 754, 498, 291, 362, 572, 1558, 300, 51256, 51256, 264, 1002, 307, 1045, 18795, 13, 51306, 51306, 1436, 300, 311, 264, 1151, 636, 281, 2903, 577, 264, 1002, 2962, 13, 51444, 51444, 1033, 30, 51494, 51494, 407, 300, 311, 364, 1558, 300, 13409, 577, 321, 393, 1466, 588, 2199, 10392, 445, 538, 2539, 51728, 51728, 281, 6069, 11, 4476, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11432043930579876, "compression_ratio": 1.9489795918367347, "no_speech_prob": 1.9523526134435087e-05}, {"id": 126, "seek": 49864, "start": 509.28, "end": 513.24, "text": " So implicitly, if you learn to predict what the world is going to look like when you move", "tokens": [50364, 291, 1286, 428, 1378, 11, 264, 1151, 10835, 337, 577, 264, 1002, 2962, 307, 264, 1186, 300, 633, 50672, 50672, 19261, 11, 633, 4914, 294, 264, 1002, 575, 257, 7161, 11, 558, 30, 50810, 50810, 1436, 550, 291, 483, 8069, 2797, 5394, 13, 50896, 50896, 407, 26947, 356, 11, 498, 291, 1466, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 291, 1286, 51094, 51094, 428, 1378, 11, 291, 434, 516, 281, 362, 281, 1466, 7161, 26947, 356, 11, 754, 498, 291, 362, 572, 1558, 300, 51256, 51256, 264, 1002, 307, 1045, 18795, 13, 51306, 51306, 1436, 300, 311, 264, 1151, 636, 281, 2903, 577, 264, 1002, 2962, 13, 51444, 51444, 1033, 30, 51494, 51494, 407, 300, 311, 364, 1558, 300, 13409, 577, 321, 393, 1466, 588, 2199, 10392, 445, 538, 2539, 51728, 51728, 281, 6069, 11, 4476, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11432043930579876, "compression_ratio": 1.9489795918367347, "no_speech_prob": 1.9523526134435087e-05}, {"id": 127, "seek": 49864, "start": 513.24, "end": 516.48, "text": " your head, you're going to have to learn depth implicitly, even if you have no idea that", "tokens": [50364, 291, 1286, 428, 1378, 11, 264, 1151, 10835, 337, 577, 264, 1002, 2962, 307, 264, 1186, 300, 633, 50672, 50672, 19261, 11, 633, 4914, 294, 264, 1002, 575, 257, 7161, 11, 558, 30, 50810, 50810, 1436, 550, 291, 483, 8069, 2797, 5394, 13, 50896, 50896, 407, 26947, 356, 11, 498, 291, 1466, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 291, 1286, 51094, 51094, 428, 1378, 11, 291, 434, 516, 281, 362, 281, 1466, 7161, 26947, 356, 11, 754, 498, 291, 362, 572, 1558, 300, 51256, 51256, 264, 1002, 307, 1045, 18795, 13, 51306, 51306, 1436, 300, 311, 264, 1151, 636, 281, 2903, 577, 264, 1002, 2962, 13, 51444, 51444, 1033, 30, 51494, 51494, 407, 300, 311, 364, 1558, 300, 13409, 577, 321, 393, 1466, 588, 2199, 10392, 445, 538, 2539, 51728, 51728, 281, 6069, 11, 4476, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11432043930579876, "compression_ratio": 1.9489795918367347, "no_speech_prob": 1.9523526134435087e-05}, {"id": 128, "seek": 49864, "start": 516.48, "end": 517.48, "text": " the world is three dimensional.", "tokens": [50364, 291, 1286, 428, 1378, 11, 264, 1151, 10835, 337, 577, 264, 1002, 2962, 307, 264, 1186, 300, 633, 50672, 50672, 19261, 11, 633, 4914, 294, 264, 1002, 575, 257, 7161, 11, 558, 30, 50810, 50810, 1436, 550, 291, 483, 8069, 2797, 5394, 13, 50896, 50896, 407, 26947, 356, 11, 498, 291, 1466, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 291, 1286, 51094, 51094, 428, 1378, 11, 291, 434, 516, 281, 362, 281, 1466, 7161, 26947, 356, 11, 754, 498, 291, 362, 572, 1558, 300, 51256, 51256, 264, 1002, 307, 1045, 18795, 13, 51306, 51306, 1436, 300, 311, 264, 1151, 636, 281, 2903, 577, 264, 1002, 2962, 13, 51444, 51444, 1033, 30, 51494, 51494, 407, 300, 311, 364, 1558, 300, 13409, 577, 321, 393, 1466, 588, 2199, 10392, 445, 538, 2539, 51728, 51728, 281, 6069, 11, 4476, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11432043930579876, "compression_ratio": 1.9489795918367347, "no_speech_prob": 1.9523526134435087e-05}, {"id": 129, "seek": 49864, "start": 517.48, "end": 520.24, "text": " Because that's the best way to explain how the world changes.", "tokens": [50364, 291, 1286, 428, 1378, 11, 264, 1151, 10835, 337, 577, 264, 1002, 2962, 307, 264, 1186, 300, 633, 50672, 50672, 19261, 11, 633, 4914, 294, 264, 1002, 575, 257, 7161, 11, 558, 30, 50810, 50810, 1436, 550, 291, 483, 8069, 2797, 5394, 13, 50896, 50896, 407, 26947, 356, 11, 498, 291, 1466, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 291, 1286, 51094, 51094, 428, 1378, 11, 291, 434, 516, 281, 362, 281, 1466, 7161, 26947, 356, 11, 754, 498, 291, 362, 572, 1558, 300, 51256, 51256, 264, 1002, 307, 1045, 18795, 13, 51306, 51306, 1436, 300, 311, 264, 1151, 636, 281, 2903, 577, 264, 1002, 2962, 13, 51444, 51444, 1033, 30, 51494, 51494, 407, 300, 311, 364, 1558, 300, 13409, 577, 321, 393, 1466, 588, 2199, 10392, 445, 538, 2539, 51728, 51728, 281, 6069, 11, 4476, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11432043930579876, "compression_ratio": 1.9489795918367347, "no_speech_prob": 1.9523526134435087e-05}, {"id": 130, "seek": 49864, "start": 520.24, "end": 521.24, "text": " Okay?", "tokens": [50364, 291, 1286, 428, 1378, 11, 264, 1151, 10835, 337, 577, 264, 1002, 2962, 307, 264, 1186, 300, 633, 50672, 50672, 19261, 11, 633, 4914, 294, 264, 1002, 575, 257, 7161, 11, 558, 30, 50810, 50810, 1436, 550, 291, 483, 8069, 2797, 5394, 13, 50896, 50896, 407, 26947, 356, 11, 498, 291, 1466, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 291, 1286, 51094, 51094, 428, 1378, 11, 291, 434, 516, 281, 362, 281, 1466, 7161, 26947, 356, 11, 754, 498, 291, 362, 572, 1558, 300, 51256, 51256, 264, 1002, 307, 1045, 18795, 13, 51306, 51306, 1436, 300, 311, 264, 1151, 636, 281, 2903, 577, 264, 1002, 2962, 13, 51444, 51444, 1033, 30, 51494, 51494, 407, 300, 311, 364, 1558, 300, 13409, 577, 321, 393, 1466, 588, 2199, 10392, 445, 538, 2539, 51728, 51728, 281, 6069, 11, 4476, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11432043930579876, "compression_ratio": 1.9489795918367347, "no_speech_prob": 1.9523526134435087e-05}, {"id": 131, "seek": 49864, "start": 521.24, "end": 525.92, "text": " So that's an idea that suggests how we can learn very simple concepts just by learning", "tokens": [50364, 291, 1286, 428, 1378, 11, 264, 1151, 10835, 337, 577, 264, 1002, 2962, 307, 264, 1186, 300, 633, 50672, 50672, 19261, 11, 633, 4914, 294, 264, 1002, 575, 257, 7161, 11, 558, 30, 50810, 50810, 1436, 550, 291, 483, 8069, 2797, 5394, 13, 50896, 50896, 407, 26947, 356, 11, 498, 291, 1466, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 291, 1286, 51094, 51094, 428, 1378, 11, 291, 434, 516, 281, 362, 281, 1466, 7161, 26947, 356, 11, 754, 498, 291, 362, 572, 1558, 300, 51256, 51256, 264, 1002, 307, 1045, 18795, 13, 51306, 51306, 1436, 300, 311, 264, 1151, 636, 281, 2903, 577, 264, 1002, 2962, 13, 51444, 51444, 1033, 30, 51494, 51494, 407, 300, 311, 364, 1558, 300, 13409, 577, 321, 393, 1466, 588, 2199, 10392, 445, 538, 2539, 51728, 51728, 281, 6069, 11, 4476, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11432043930579876, "compression_ratio": 1.9489795918367347, "no_speech_prob": 1.9523526134435087e-05}, {"id": 132, "seek": 49864, "start": 525.92, "end": 527.2, "text": " to predict, essentially.", "tokens": [50364, 291, 1286, 428, 1378, 11, 264, 1151, 10835, 337, 577, 264, 1002, 2962, 307, 264, 1186, 300, 633, 50672, 50672, 19261, 11, 633, 4914, 294, 264, 1002, 575, 257, 7161, 11, 558, 30, 50810, 50810, 1436, 550, 291, 483, 8069, 2797, 5394, 13, 50896, 50896, 407, 26947, 356, 11, 498, 291, 1466, 281, 6069, 437, 264, 1002, 307, 516, 281, 574, 411, 562, 291, 1286, 51094, 51094, 428, 1378, 11, 291, 434, 516, 281, 362, 281, 1466, 7161, 26947, 356, 11, 754, 498, 291, 362, 572, 1558, 300, 51256, 51256, 264, 1002, 307, 1045, 18795, 13, 51306, 51306, 1436, 300, 311, 264, 1151, 636, 281, 2903, 577, 264, 1002, 2962, 13, 51444, 51444, 1033, 30, 51494, 51494, 407, 300, 311, 364, 1558, 300, 13409, 577, 321, 393, 1466, 588, 2199, 10392, 445, 538, 2539, 51728, 51728, 281, 6069, 11, 4476, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11432043930579876, "compression_ratio": 1.9489795918367347, "no_speech_prob": 1.9523526134435087e-05}, {"id": 133, "seek": 52720, "start": 527.2, "end": 533.9200000000001, "text": " And that's going to be the general theme of this talk, which is learning to predict.", "tokens": [50364, 400, 300, 311, 516, 281, 312, 264, 2674, 6314, 295, 341, 751, 11, 597, 307, 2539, 281, 6069, 13, 50700, 50700, 32969, 4105, 307, 264, 12801, 295, 7599, 11, 294, 452, 4800, 13, 50960, 50960, 400, 370, 321, 3094, 5245, 295, 264, 1002, 300, 4045, 505, 281, 1466, 281, 3332, 294, 945, 2496, 11, 281, 1466, 51176, 51176, 439, 3685, 295, 1507, 13, 51270, 51270, 583, 4882, 360, 300, 886, 13, 51364, 51364, 407, 286, 534, 959, 341, 960, 295, 341, 707, 3186, 17481, 325, 556, 510, 307, 885, 4898, 257, 5585, 51580, 51580, 4282, 689, 291, 829, 257, 20164, 294, 257, 4414, 293, 550, 264, 20164, 307, 7261, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.13890906384116725, "compression_ratio": 1.6539923954372624, "no_speech_prob": 2.506141026969999e-05}, {"id": 134, "seek": 52720, "start": 533.9200000000001, "end": 539.12, "text": " Prediction is the essence of intelligence, in my opinion.", "tokens": [50364, 400, 300, 311, 516, 281, 312, 264, 2674, 6314, 295, 341, 751, 11, 597, 307, 2539, 281, 6069, 13, 50700, 50700, 32969, 4105, 307, 264, 12801, 295, 7599, 11, 294, 452, 4800, 13, 50960, 50960, 400, 370, 321, 3094, 5245, 295, 264, 1002, 300, 4045, 505, 281, 1466, 281, 3332, 294, 945, 2496, 11, 281, 1466, 51176, 51176, 439, 3685, 295, 1507, 13, 51270, 51270, 583, 4882, 360, 300, 886, 13, 51364, 51364, 407, 286, 534, 959, 341, 960, 295, 341, 707, 3186, 17481, 325, 556, 510, 307, 885, 4898, 257, 5585, 51580, 51580, 4282, 689, 291, 829, 257, 20164, 294, 257, 4414, 293, 550, 264, 20164, 307, 7261, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.13890906384116725, "compression_ratio": 1.6539923954372624, "no_speech_prob": 2.506141026969999e-05}, {"id": 135, "seek": 52720, "start": 539.12, "end": 543.44, "text": " And so we built models of the world that allows us to learn to drive in 20 hours, to learn", "tokens": [50364, 400, 300, 311, 516, 281, 312, 264, 2674, 6314, 295, 341, 751, 11, 597, 307, 2539, 281, 6069, 13, 50700, 50700, 32969, 4105, 307, 264, 12801, 295, 7599, 11, 294, 452, 4800, 13, 50960, 50960, 400, 370, 321, 3094, 5245, 295, 264, 1002, 300, 4045, 505, 281, 1466, 281, 3332, 294, 945, 2496, 11, 281, 1466, 51176, 51176, 439, 3685, 295, 1507, 13, 51270, 51270, 583, 4882, 360, 300, 886, 13, 51364, 51364, 407, 286, 534, 959, 341, 960, 295, 341, 707, 3186, 17481, 325, 556, 510, 307, 885, 4898, 257, 5585, 51580, 51580, 4282, 689, 291, 829, 257, 20164, 294, 257, 4414, 293, 550, 264, 20164, 307, 7261, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.13890906384116725, "compression_ratio": 1.6539923954372624, "no_speech_prob": 2.506141026969999e-05}, {"id": 136, "seek": 52720, "start": 543.44, "end": 545.32, "text": " all kinds of stuff.", "tokens": [50364, 400, 300, 311, 516, 281, 312, 264, 2674, 6314, 295, 341, 751, 11, 597, 307, 2539, 281, 6069, 13, 50700, 50700, 32969, 4105, 307, 264, 12801, 295, 7599, 11, 294, 452, 4800, 13, 50960, 50960, 400, 370, 321, 3094, 5245, 295, 264, 1002, 300, 4045, 505, 281, 1466, 281, 3332, 294, 945, 2496, 11, 281, 1466, 51176, 51176, 439, 3685, 295, 1507, 13, 51270, 51270, 583, 4882, 360, 300, 886, 13, 51364, 51364, 407, 286, 534, 959, 341, 960, 295, 341, 707, 3186, 17481, 325, 556, 510, 307, 885, 4898, 257, 5585, 51580, 51580, 4282, 689, 291, 829, 257, 20164, 294, 257, 4414, 293, 550, 264, 20164, 307, 7261, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.13890906384116725, "compression_ratio": 1.6539923954372624, "no_speech_prob": 2.506141026969999e-05}, {"id": 137, "seek": 52720, "start": 545.32, "end": 547.2, "text": " But animals do that too.", "tokens": [50364, 400, 300, 311, 516, 281, 312, 264, 2674, 6314, 295, 341, 751, 11, 597, 307, 2539, 281, 6069, 13, 50700, 50700, 32969, 4105, 307, 264, 12801, 295, 7599, 11, 294, 452, 4800, 13, 50960, 50960, 400, 370, 321, 3094, 5245, 295, 264, 1002, 300, 4045, 505, 281, 1466, 281, 3332, 294, 945, 2496, 11, 281, 1466, 51176, 51176, 439, 3685, 295, 1507, 13, 51270, 51270, 583, 4882, 360, 300, 886, 13, 51364, 51364, 407, 286, 534, 959, 341, 960, 295, 341, 707, 3186, 17481, 325, 556, 510, 307, 885, 4898, 257, 5585, 51580, 51580, 4282, 689, 291, 829, 257, 20164, 294, 257, 4414, 293, 550, 264, 20164, 307, 7261, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.13890906384116725, "compression_ratio": 1.6539923954372624, "no_speech_prob": 2.506141026969999e-05}, {"id": 138, "seek": 52720, "start": 547.2, "end": 551.5200000000001, "text": " So I really love this video of this little baby orangutong here is being shown a magic", "tokens": [50364, 400, 300, 311, 516, 281, 312, 264, 2674, 6314, 295, 341, 751, 11, 597, 307, 2539, 281, 6069, 13, 50700, 50700, 32969, 4105, 307, 264, 12801, 295, 7599, 11, 294, 452, 4800, 13, 50960, 50960, 400, 370, 321, 3094, 5245, 295, 264, 1002, 300, 4045, 505, 281, 1466, 281, 3332, 294, 945, 2496, 11, 281, 1466, 51176, 51176, 439, 3685, 295, 1507, 13, 51270, 51270, 583, 4882, 360, 300, 886, 13, 51364, 51364, 407, 286, 534, 959, 341, 960, 295, 341, 707, 3186, 17481, 325, 556, 510, 307, 885, 4898, 257, 5585, 51580, 51580, 4282, 689, 291, 829, 257, 20164, 294, 257, 4414, 293, 550, 264, 20164, 307, 7261, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.13890906384116725, "compression_ratio": 1.6539923954372624, "no_speech_prob": 2.506141026969999e-05}, {"id": 139, "seek": 52720, "start": 551.5200000000001, "end": 556.9200000000001, "text": " trick where you put a cherry in a cup and then the cherry is removed.", "tokens": [50364, 400, 300, 311, 516, 281, 312, 264, 2674, 6314, 295, 341, 751, 11, 597, 307, 2539, 281, 6069, 13, 50700, 50700, 32969, 4105, 307, 264, 12801, 295, 7599, 11, 294, 452, 4800, 13, 50960, 50960, 400, 370, 321, 3094, 5245, 295, 264, 1002, 300, 4045, 505, 281, 1466, 281, 3332, 294, 945, 2496, 11, 281, 1466, 51176, 51176, 439, 3685, 295, 1507, 13, 51270, 51270, 583, 4882, 360, 300, 886, 13, 51364, 51364, 407, 286, 534, 959, 341, 960, 295, 341, 707, 3186, 17481, 325, 556, 510, 307, 885, 4898, 257, 5585, 51580, 51580, 4282, 689, 291, 829, 257, 20164, 294, 257, 4414, 293, 550, 264, 20164, 307, 7261, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.13890906384116725, "compression_ratio": 1.6539923954372624, "no_speech_prob": 2.506141026969999e-05}, {"id": 140, "seek": 55692, "start": 556.92, "end": 557.92, "text": " But he doesn't see that.", "tokens": [50364, 583, 415, 1177, 380, 536, 300, 13, 50414, 50414, 400, 550, 264, 4414, 307, 6707, 13, 50488, 50488, 400, 415, 390, 322, 264, 4123, 5059, 13, 50726, 50726, 1033, 30, 50776, 50776, 407, 702, 2316, 295, 264, 1002, 575, 2745, 668, 33239, 13, 51022, 51022, 400, 415, 10704, 300, 4074, 13, 51072, 51072, 286, 914, 11, 456, 311, 732, 721, 300, 1051, 562, 428, 2316, 295, 264, 1002, 307, 33239, 13, 51308, 51308, 13746, 291, 915, 300, 4074, 420, 291, 915, 309, 6958, 13, 51570, 51570, 1436, 510, 307, 746, 291, 994, 380, 6069, 11, 558, 30, 51674, 51674, 467, 727, 1961, 291, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2589217821756999, "compression_ratio": 1.6651785714285714, "no_speech_prob": 2.8390841180225834e-05}, {"id": 141, "seek": 55692, "start": 557.92, "end": 559.4, "text": " And then the cup is empty.", "tokens": [50364, 583, 415, 1177, 380, 536, 300, 13, 50414, 50414, 400, 550, 264, 4414, 307, 6707, 13, 50488, 50488, 400, 415, 390, 322, 264, 4123, 5059, 13, 50726, 50726, 1033, 30, 50776, 50776, 407, 702, 2316, 295, 264, 1002, 575, 2745, 668, 33239, 13, 51022, 51022, 400, 415, 10704, 300, 4074, 13, 51072, 51072, 286, 914, 11, 456, 311, 732, 721, 300, 1051, 562, 428, 2316, 295, 264, 1002, 307, 33239, 13, 51308, 51308, 13746, 291, 915, 300, 4074, 420, 291, 915, 309, 6958, 13, 51570, 51570, 1436, 510, 307, 746, 291, 994, 380, 6069, 11, 558, 30, 51674, 51674, 467, 727, 1961, 291, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2589217821756999, "compression_ratio": 1.6651785714285714, "no_speech_prob": 2.8390841180225834e-05}, {"id": 142, "seek": 55692, "start": 559.4, "end": 564.16, "text": " And he was on the floor laughing.", "tokens": [50364, 583, 415, 1177, 380, 536, 300, 13, 50414, 50414, 400, 550, 264, 4414, 307, 6707, 13, 50488, 50488, 400, 415, 390, 322, 264, 4123, 5059, 13, 50726, 50726, 1033, 30, 50776, 50776, 407, 702, 2316, 295, 264, 1002, 575, 2745, 668, 33239, 13, 51022, 51022, 400, 415, 10704, 300, 4074, 13, 51072, 51072, 286, 914, 11, 456, 311, 732, 721, 300, 1051, 562, 428, 2316, 295, 264, 1002, 307, 33239, 13, 51308, 51308, 13746, 291, 915, 300, 4074, 420, 291, 915, 309, 6958, 13, 51570, 51570, 1436, 510, 307, 746, 291, 994, 380, 6069, 11, 558, 30, 51674, 51674, 467, 727, 1961, 291, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2589217821756999, "compression_ratio": 1.6651785714285714, "no_speech_prob": 2.8390841180225834e-05}, {"id": 143, "seek": 55692, "start": 564.16, "end": 565.16, "text": " Okay?", "tokens": [50364, 583, 415, 1177, 380, 536, 300, 13, 50414, 50414, 400, 550, 264, 4414, 307, 6707, 13, 50488, 50488, 400, 415, 390, 322, 264, 4123, 5059, 13, 50726, 50726, 1033, 30, 50776, 50776, 407, 702, 2316, 295, 264, 1002, 575, 2745, 668, 33239, 13, 51022, 51022, 400, 415, 10704, 300, 4074, 13, 51072, 51072, 286, 914, 11, 456, 311, 732, 721, 300, 1051, 562, 428, 2316, 295, 264, 1002, 307, 33239, 13, 51308, 51308, 13746, 291, 915, 300, 4074, 420, 291, 915, 309, 6958, 13, 51570, 51570, 1436, 510, 307, 746, 291, 994, 380, 6069, 11, 558, 30, 51674, 51674, 467, 727, 1961, 291, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2589217821756999, "compression_ratio": 1.6651785714285714, "no_speech_prob": 2.8390841180225834e-05}, {"id": 144, "seek": 55692, "start": 565.16, "end": 570.0799999999999, "text": " So his model of the world has obviously been violated.", "tokens": [50364, 583, 415, 1177, 380, 536, 300, 13, 50414, 50414, 400, 550, 264, 4414, 307, 6707, 13, 50488, 50488, 400, 415, 390, 322, 264, 4123, 5059, 13, 50726, 50726, 1033, 30, 50776, 50776, 407, 702, 2316, 295, 264, 1002, 575, 2745, 668, 33239, 13, 51022, 51022, 400, 415, 10704, 300, 4074, 13, 51072, 51072, 286, 914, 11, 456, 311, 732, 721, 300, 1051, 562, 428, 2316, 295, 264, 1002, 307, 33239, 13, 51308, 51308, 13746, 291, 915, 300, 4074, 420, 291, 915, 309, 6958, 13, 51570, 51570, 1436, 510, 307, 746, 291, 994, 380, 6069, 11, 558, 30, 51674, 51674, 467, 727, 1961, 291, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2589217821756999, "compression_ratio": 1.6651785714285714, "no_speech_prob": 2.8390841180225834e-05}, {"id": 145, "seek": 55692, "start": 570.0799999999999, "end": 571.0799999999999, "text": " And he finds that funny.", "tokens": [50364, 583, 415, 1177, 380, 536, 300, 13, 50414, 50414, 400, 550, 264, 4414, 307, 6707, 13, 50488, 50488, 400, 415, 390, 322, 264, 4123, 5059, 13, 50726, 50726, 1033, 30, 50776, 50776, 407, 702, 2316, 295, 264, 1002, 575, 2745, 668, 33239, 13, 51022, 51022, 400, 415, 10704, 300, 4074, 13, 51072, 51072, 286, 914, 11, 456, 311, 732, 721, 300, 1051, 562, 428, 2316, 295, 264, 1002, 307, 33239, 13, 51308, 51308, 13746, 291, 915, 300, 4074, 420, 291, 915, 309, 6958, 13, 51570, 51570, 1436, 510, 307, 746, 291, 994, 380, 6069, 11, 558, 30, 51674, 51674, 467, 727, 1961, 291, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2589217821756999, "compression_ratio": 1.6651785714285714, "no_speech_prob": 2.8390841180225834e-05}, {"id": 146, "seek": 55692, "start": 571.0799999999999, "end": 575.8, "text": " I mean, there's two things that happen when your model of the world is violated.", "tokens": [50364, 583, 415, 1177, 380, 536, 300, 13, 50414, 50414, 400, 550, 264, 4414, 307, 6707, 13, 50488, 50488, 400, 415, 390, 322, 264, 4123, 5059, 13, 50726, 50726, 1033, 30, 50776, 50776, 407, 702, 2316, 295, 264, 1002, 575, 2745, 668, 33239, 13, 51022, 51022, 400, 415, 10704, 300, 4074, 13, 51072, 51072, 286, 914, 11, 456, 311, 732, 721, 300, 1051, 562, 428, 2316, 295, 264, 1002, 307, 33239, 13, 51308, 51308, 13746, 291, 915, 300, 4074, 420, 291, 915, 309, 6958, 13, 51570, 51570, 1436, 510, 307, 746, 291, 994, 380, 6069, 11, 558, 30, 51674, 51674, 467, 727, 1961, 291, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2589217821756999, "compression_ratio": 1.6651785714285714, "no_speech_prob": 2.8390841180225834e-05}, {"id": 147, "seek": 55692, "start": 575.8, "end": 581.04, "text": " Either you find that funny or you find it scary.", "tokens": [50364, 583, 415, 1177, 380, 536, 300, 13, 50414, 50414, 400, 550, 264, 4414, 307, 6707, 13, 50488, 50488, 400, 415, 390, 322, 264, 4123, 5059, 13, 50726, 50726, 1033, 30, 50776, 50776, 407, 702, 2316, 295, 264, 1002, 575, 2745, 668, 33239, 13, 51022, 51022, 400, 415, 10704, 300, 4074, 13, 51072, 51072, 286, 914, 11, 456, 311, 732, 721, 300, 1051, 562, 428, 2316, 295, 264, 1002, 307, 33239, 13, 51308, 51308, 13746, 291, 915, 300, 4074, 420, 291, 915, 309, 6958, 13, 51570, 51570, 1436, 510, 307, 746, 291, 994, 380, 6069, 11, 558, 30, 51674, 51674, 467, 727, 1961, 291, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2589217821756999, "compression_ratio": 1.6651785714285714, "no_speech_prob": 2.8390841180225834e-05}, {"id": 148, "seek": 55692, "start": 581.04, "end": 583.12, "text": " Because here is something you didn't predict, right?", "tokens": [50364, 583, 415, 1177, 380, 536, 300, 13, 50414, 50414, 400, 550, 264, 4414, 307, 6707, 13, 50488, 50488, 400, 415, 390, 322, 264, 4123, 5059, 13, 50726, 50726, 1033, 30, 50776, 50776, 407, 702, 2316, 295, 264, 1002, 575, 2745, 668, 33239, 13, 51022, 51022, 400, 415, 10704, 300, 4074, 13, 51072, 51072, 286, 914, 11, 456, 311, 732, 721, 300, 1051, 562, 428, 2316, 295, 264, 1002, 307, 33239, 13, 51308, 51308, 13746, 291, 915, 300, 4074, 420, 291, 915, 309, 6958, 13, 51570, 51570, 1436, 510, 307, 746, 291, 994, 380, 6069, 11, 558, 30, 51674, 51674, 467, 727, 1961, 291, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2589217821756999, "compression_ratio": 1.6651785714285714, "no_speech_prob": 2.8390841180225834e-05}, {"id": 149, "seek": 55692, "start": 583.12, "end": 584.12, "text": " It could kill you.", "tokens": [50364, 583, 415, 1177, 380, 536, 300, 13, 50414, 50414, 400, 550, 264, 4414, 307, 6707, 13, 50488, 50488, 400, 415, 390, 322, 264, 4123, 5059, 13, 50726, 50726, 1033, 30, 50776, 50776, 407, 702, 2316, 295, 264, 1002, 575, 2745, 668, 33239, 13, 51022, 51022, 400, 415, 10704, 300, 4074, 13, 51072, 51072, 286, 914, 11, 456, 311, 732, 721, 300, 1051, 562, 428, 2316, 295, 264, 1002, 307, 33239, 13, 51308, 51308, 13746, 291, 915, 300, 4074, 420, 291, 915, 309, 6958, 13, 51570, 51570, 1436, 510, 307, 746, 291, 994, 380, 6069, 11, 558, 30, 51674, 51674, 467, 727, 1961, 291, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2589217821756999, "compression_ratio": 1.6651785714285714, "no_speech_prob": 2.8390841180225834e-05}, {"id": 150, "seek": 58412, "start": 584.12, "end": 588.68, "text": " In both cases, you pay attention.", "tokens": [50364, 682, 1293, 3331, 11, 291, 1689, 3202, 13, 50592, 50592, 1033, 13, 50646, 50646, 407, 300, 5607, 505, 281, 341, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50820, 50820, 639, 1558, 295, 2539, 538, 17630, 13, 50904, 50904, 1033, 30, 50954, 50954, 407, 406, 2539, 257, 5633, 11, 406, 2539, 281, 33872, 6565, 294, 10479, 300, 808, 281, 291, 490, 51236, 51236, 257, 368, 301, 454, 2246, 1426, 11, 457, 2539, 264, 3877, 295, 264, 1002, 538, 445, 22107, 264, 1002, 11, 51500, 51500, 4476, 13, 51550, 51550, 407, 264, 3875, 17291, 295, 341, 307, 11, 420, 264, 8665, 300, 291, 393, 3096, 341, 322, 307, 11, 6069, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.18687084501823492, "compression_ratio": 1.757201646090535, "no_speech_prob": 1.0614076927595306e-05}, {"id": 151, "seek": 58412, "start": 588.68, "end": 589.76, "text": " Okay.", "tokens": [50364, 682, 1293, 3331, 11, 291, 1689, 3202, 13, 50592, 50592, 1033, 13, 50646, 50646, 407, 300, 5607, 505, 281, 341, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50820, 50820, 639, 1558, 295, 2539, 538, 17630, 13, 50904, 50904, 1033, 30, 50954, 50954, 407, 406, 2539, 257, 5633, 11, 406, 2539, 281, 33872, 6565, 294, 10479, 300, 808, 281, 291, 490, 51236, 51236, 257, 368, 301, 454, 2246, 1426, 11, 457, 2539, 264, 3877, 295, 264, 1002, 538, 445, 22107, 264, 1002, 11, 51500, 51500, 4476, 13, 51550, 51550, 407, 264, 3875, 17291, 295, 341, 307, 11, 420, 264, 8665, 300, 291, 393, 3096, 341, 322, 307, 11, 6069, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.18687084501823492, "compression_ratio": 1.757201646090535, "no_speech_prob": 1.0614076927595306e-05}, {"id": 152, "seek": 58412, "start": 589.76, "end": 593.24, "text": " So that brings us to this idea of self-supervised learning.", "tokens": [50364, 682, 1293, 3331, 11, 291, 1689, 3202, 13, 50592, 50592, 1033, 13, 50646, 50646, 407, 300, 5607, 505, 281, 341, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50820, 50820, 639, 1558, 295, 2539, 538, 17630, 13, 50904, 50904, 1033, 30, 50954, 50954, 407, 406, 2539, 257, 5633, 11, 406, 2539, 281, 33872, 6565, 294, 10479, 300, 808, 281, 291, 490, 51236, 51236, 257, 368, 301, 454, 2246, 1426, 11, 457, 2539, 264, 3877, 295, 264, 1002, 538, 445, 22107, 264, 1002, 11, 51500, 51500, 4476, 13, 51550, 51550, 407, 264, 3875, 17291, 295, 341, 307, 11, 420, 264, 8665, 300, 291, 393, 3096, 341, 322, 307, 11, 6069, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.18687084501823492, "compression_ratio": 1.757201646090535, "no_speech_prob": 1.0614076927595306e-05}, {"id": 153, "seek": 58412, "start": 593.24, "end": 594.92, "text": " This idea of learning by prediction.", "tokens": [50364, 682, 1293, 3331, 11, 291, 1689, 3202, 13, 50592, 50592, 1033, 13, 50646, 50646, 407, 300, 5607, 505, 281, 341, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50820, 50820, 639, 1558, 295, 2539, 538, 17630, 13, 50904, 50904, 1033, 30, 50954, 50954, 407, 406, 2539, 257, 5633, 11, 406, 2539, 281, 33872, 6565, 294, 10479, 300, 808, 281, 291, 490, 51236, 51236, 257, 368, 301, 454, 2246, 1426, 11, 457, 2539, 264, 3877, 295, 264, 1002, 538, 445, 22107, 264, 1002, 11, 51500, 51500, 4476, 13, 51550, 51550, 407, 264, 3875, 17291, 295, 341, 307, 11, 420, 264, 8665, 300, 291, 393, 3096, 341, 322, 307, 11, 6069, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.18687084501823492, "compression_ratio": 1.757201646090535, "no_speech_prob": 1.0614076927595306e-05}, {"id": 154, "seek": 58412, "start": 594.92, "end": 595.92, "text": " Okay?", "tokens": [50364, 682, 1293, 3331, 11, 291, 1689, 3202, 13, 50592, 50592, 1033, 13, 50646, 50646, 407, 300, 5607, 505, 281, 341, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50820, 50820, 639, 1558, 295, 2539, 538, 17630, 13, 50904, 50904, 1033, 30, 50954, 50954, 407, 406, 2539, 257, 5633, 11, 406, 2539, 281, 33872, 6565, 294, 10479, 300, 808, 281, 291, 490, 51236, 51236, 257, 368, 301, 454, 2246, 1426, 11, 457, 2539, 264, 3877, 295, 264, 1002, 538, 445, 22107, 264, 1002, 11, 51500, 51500, 4476, 13, 51550, 51550, 407, 264, 3875, 17291, 295, 341, 307, 11, 420, 264, 8665, 300, 291, 393, 3096, 341, 322, 307, 11, 6069, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.18687084501823492, "compression_ratio": 1.757201646090535, "no_speech_prob": 1.0614076927595306e-05}, {"id": 155, "seek": 58412, "start": 595.92, "end": 601.5600000000001, "text": " So not learning a task, not learning to classify objects in categories that come to you from", "tokens": [50364, 682, 1293, 3331, 11, 291, 1689, 3202, 13, 50592, 50592, 1033, 13, 50646, 50646, 407, 300, 5607, 505, 281, 341, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50820, 50820, 639, 1558, 295, 2539, 538, 17630, 13, 50904, 50904, 1033, 30, 50954, 50954, 407, 406, 2539, 257, 5633, 11, 406, 2539, 281, 33872, 6565, 294, 10479, 300, 808, 281, 291, 490, 51236, 51236, 257, 368, 301, 454, 2246, 1426, 11, 457, 2539, 264, 3877, 295, 264, 1002, 538, 445, 22107, 264, 1002, 11, 51500, 51500, 4476, 13, 51550, 51550, 407, 264, 3875, 17291, 295, 341, 307, 11, 420, 264, 8665, 300, 291, 393, 3096, 341, 322, 307, 11, 6069, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.18687084501823492, "compression_ratio": 1.757201646090535, "no_speech_prob": 1.0614076927595306e-05}, {"id": 156, "seek": 58412, "start": 601.5600000000001, "end": 606.84, "text": " a deus ex machina, but learning the structure of the world by just observing the world,", "tokens": [50364, 682, 1293, 3331, 11, 291, 1689, 3202, 13, 50592, 50592, 1033, 13, 50646, 50646, 407, 300, 5607, 505, 281, 341, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50820, 50820, 639, 1558, 295, 2539, 538, 17630, 13, 50904, 50904, 1033, 30, 50954, 50954, 407, 406, 2539, 257, 5633, 11, 406, 2539, 281, 33872, 6565, 294, 10479, 300, 808, 281, 291, 490, 51236, 51236, 257, 368, 301, 454, 2246, 1426, 11, 457, 2539, 264, 3877, 295, 264, 1002, 538, 445, 22107, 264, 1002, 11, 51500, 51500, 4476, 13, 51550, 51550, 407, 264, 3875, 17291, 295, 341, 307, 11, 420, 264, 8665, 300, 291, 393, 3096, 341, 322, 307, 11, 6069, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.18687084501823492, "compression_ratio": 1.757201646090535, "no_speech_prob": 1.0614076927595306e-05}, {"id": 157, "seek": 58412, "start": 606.84, "end": 607.84, "text": " essentially.", "tokens": [50364, 682, 1293, 3331, 11, 291, 1689, 3202, 13, 50592, 50592, 1033, 13, 50646, 50646, 407, 300, 5607, 505, 281, 341, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50820, 50820, 639, 1558, 295, 2539, 538, 17630, 13, 50904, 50904, 1033, 30, 50954, 50954, 407, 406, 2539, 257, 5633, 11, 406, 2539, 281, 33872, 6565, 294, 10479, 300, 808, 281, 291, 490, 51236, 51236, 257, 368, 301, 454, 2246, 1426, 11, 457, 2539, 264, 3877, 295, 264, 1002, 538, 445, 22107, 264, 1002, 11, 51500, 51500, 4476, 13, 51550, 51550, 407, 264, 3875, 17291, 295, 341, 307, 11, 420, 264, 8665, 300, 291, 393, 3096, 341, 322, 307, 11, 6069, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.18687084501823492, "compression_ratio": 1.757201646090535, "no_speech_prob": 1.0614076927595306e-05}, {"id": 158, "seek": 58412, "start": 607.84, "end": 613.16, "text": " So the basic hypothesis of this is, or the principle that you can base this on is, predict", "tokens": [50364, 682, 1293, 3331, 11, 291, 1689, 3202, 13, 50592, 50592, 1033, 13, 50646, 50646, 407, 300, 5607, 505, 281, 341, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50820, 50820, 639, 1558, 295, 2539, 538, 17630, 13, 50904, 50904, 1033, 30, 50954, 50954, 407, 406, 2539, 257, 5633, 11, 406, 2539, 281, 33872, 6565, 294, 10479, 300, 808, 281, 291, 490, 51236, 51236, 257, 368, 301, 454, 2246, 1426, 11, 457, 2539, 264, 3877, 295, 264, 1002, 538, 445, 22107, 264, 1002, 11, 51500, 51500, 4476, 13, 51550, 51550, 407, 264, 3875, 17291, 295, 341, 307, 11, 420, 264, 8665, 300, 291, 393, 3096, 341, 322, 307, 11, 6069, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.18687084501823492, "compression_ratio": 1.757201646090535, "no_speech_prob": 1.0614076927595306e-05}, {"id": 159, "seek": 61316, "start": 613.16, "end": 615.36, "text": " everything from everything else.", "tokens": [50364, 1203, 490, 1203, 1646, 13, 50474, 50474, 708, 360, 286, 914, 538, 341, 30, 50524, 50524, 407, 718, 311, 584, 291, 362, 257, 2522, 295, 1412, 337, 264, 9717, 295, 1588, 35383, 442, 510, 13, 50774, 50774, 961, 311, 519, 466, 257, 960, 7353, 11, 337, 1365, 13, 50882, 50882, 821, 311, 516, 281, 312, 257, 2522, 295, 300, 1412, 300, 291, 434, 516, 281, 980, 264, 3479, 13, 51066, 51066, 509, 393, 574, 412, 309, 13, 51116, 51116, 400, 456, 311, 1071, 2522, 300, 264, 3479, 1162, 2581, 309, 1177, 380, 458, 13, 51336, 51336, 467, 1177, 380, 536, 13, 51428, 51428, 1692, 309, 311, 264, 2027, 12083, 295, 264, 960, 13, 51560, 51560, 1033, 30, 51610, 51610, 407, 309, 1542, 412, 264, 960, 493, 281, 257, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.134592013572579, "compression_ratio": 1.7192307692307693, "no_speech_prob": 1.2216564755362924e-05}, {"id": 160, "seek": 61316, "start": 615.36, "end": 616.36, "text": " What do I mean by this?", "tokens": [50364, 1203, 490, 1203, 1646, 13, 50474, 50474, 708, 360, 286, 914, 538, 341, 30, 50524, 50524, 407, 718, 311, 584, 291, 362, 257, 2522, 295, 1412, 337, 264, 9717, 295, 1588, 35383, 442, 510, 13, 50774, 50774, 961, 311, 519, 466, 257, 960, 7353, 11, 337, 1365, 13, 50882, 50882, 821, 311, 516, 281, 312, 257, 2522, 295, 300, 1412, 300, 291, 434, 516, 281, 980, 264, 3479, 13, 51066, 51066, 509, 393, 574, 412, 309, 13, 51116, 51116, 400, 456, 311, 1071, 2522, 300, 264, 3479, 1162, 2581, 309, 1177, 380, 458, 13, 51336, 51336, 467, 1177, 380, 536, 13, 51428, 51428, 1692, 309, 311, 264, 2027, 12083, 295, 264, 960, 13, 51560, 51560, 1033, 30, 51610, 51610, 407, 309, 1542, 412, 264, 960, 493, 281, 257, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.134592013572579, "compression_ratio": 1.7192307692307693, "no_speech_prob": 1.2216564755362924e-05}, {"id": 161, "seek": 61316, "start": 616.36, "end": 621.36, "text": " So let's say you have a piece of data for the sake of concreteness here.", "tokens": [50364, 1203, 490, 1203, 1646, 13, 50474, 50474, 708, 360, 286, 914, 538, 341, 30, 50524, 50524, 407, 718, 311, 584, 291, 362, 257, 2522, 295, 1412, 337, 264, 9717, 295, 1588, 35383, 442, 510, 13, 50774, 50774, 961, 311, 519, 466, 257, 960, 7353, 11, 337, 1365, 13, 50882, 50882, 821, 311, 516, 281, 312, 257, 2522, 295, 300, 1412, 300, 291, 434, 516, 281, 980, 264, 3479, 13, 51066, 51066, 509, 393, 574, 412, 309, 13, 51116, 51116, 400, 456, 311, 1071, 2522, 300, 264, 3479, 1162, 2581, 309, 1177, 380, 458, 13, 51336, 51336, 467, 1177, 380, 536, 13, 51428, 51428, 1692, 309, 311, 264, 2027, 12083, 295, 264, 960, 13, 51560, 51560, 1033, 30, 51610, 51610, 407, 309, 1542, 412, 264, 960, 493, 281, 257, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.134592013572579, "compression_ratio": 1.7192307692307693, "no_speech_prob": 1.2216564755362924e-05}, {"id": 162, "seek": 61316, "start": 621.36, "end": 623.52, "text": " Let's think about a video clip, for example.", "tokens": [50364, 1203, 490, 1203, 1646, 13, 50474, 50474, 708, 360, 286, 914, 538, 341, 30, 50524, 50524, 407, 718, 311, 584, 291, 362, 257, 2522, 295, 1412, 337, 264, 9717, 295, 1588, 35383, 442, 510, 13, 50774, 50774, 961, 311, 519, 466, 257, 960, 7353, 11, 337, 1365, 13, 50882, 50882, 821, 311, 516, 281, 312, 257, 2522, 295, 300, 1412, 300, 291, 434, 516, 281, 980, 264, 3479, 13, 51066, 51066, 509, 393, 574, 412, 309, 13, 51116, 51116, 400, 456, 311, 1071, 2522, 300, 264, 3479, 1162, 2581, 309, 1177, 380, 458, 13, 51336, 51336, 467, 1177, 380, 536, 13, 51428, 51428, 1692, 309, 311, 264, 2027, 12083, 295, 264, 960, 13, 51560, 51560, 1033, 30, 51610, 51610, 407, 309, 1542, 412, 264, 960, 493, 281, 257, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.134592013572579, "compression_ratio": 1.7192307692307693, "no_speech_prob": 1.2216564755362924e-05}, {"id": 163, "seek": 61316, "start": 623.52, "end": 627.1999999999999, "text": " There's going to be a piece of that data that you're going to tell the machine.", "tokens": [50364, 1203, 490, 1203, 1646, 13, 50474, 50474, 708, 360, 286, 914, 538, 341, 30, 50524, 50524, 407, 718, 311, 584, 291, 362, 257, 2522, 295, 1412, 337, 264, 9717, 295, 1588, 35383, 442, 510, 13, 50774, 50774, 961, 311, 519, 466, 257, 960, 7353, 11, 337, 1365, 13, 50882, 50882, 821, 311, 516, 281, 312, 257, 2522, 295, 300, 1412, 300, 291, 434, 516, 281, 980, 264, 3479, 13, 51066, 51066, 509, 393, 574, 412, 309, 13, 51116, 51116, 400, 456, 311, 1071, 2522, 300, 264, 3479, 1162, 2581, 309, 1177, 380, 458, 13, 51336, 51336, 467, 1177, 380, 536, 13, 51428, 51428, 1692, 309, 311, 264, 2027, 12083, 295, 264, 960, 13, 51560, 51560, 1033, 30, 51610, 51610, 407, 309, 1542, 412, 264, 960, 493, 281, 257, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.134592013572579, "compression_ratio": 1.7192307692307693, "no_speech_prob": 1.2216564755362924e-05}, {"id": 164, "seek": 61316, "start": 627.1999999999999, "end": 628.1999999999999, "text": " You can look at it.", "tokens": [50364, 1203, 490, 1203, 1646, 13, 50474, 50474, 708, 360, 286, 914, 538, 341, 30, 50524, 50524, 407, 718, 311, 584, 291, 362, 257, 2522, 295, 1412, 337, 264, 9717, 295, 1588, 35383, 442, 510, 13, 50774, 50774, 961, 311, 519, 466, 257, 960, 7353, 11, 337, 1365, 13, 50882, 50882, 821, 311, 516, 281, 312, 257, 2522, 295, 300, 1412, 300, 291, 434, 516, 281, 980, 264, 3479, 13, 51066, 51066, 509, 393, 574, 412, 309, 13, 51116, 51116, 400, 456, 311, 1071, 2522, 300, 264, 3479, 1162, 2581, 309, 1177, 380, 458, 13, 51336, 51336, 467, 1177, 380, 536, 13, 51428, 51428, 1692, 309, 311, 264, 2027, 12083, 295, 264, 960, 13, 51560, 51560, 1033, 30, 51610, 51610, 407, 309, 1542, 412, 264, 960, 493, 281, 257, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.134592013572579, "compression_ratio": 1.7192307692307693, "no_speech_prob": 1.2216564755362924e-05}, {"id": 165, "seek": 61316, "start": 628.1999999999999, "end": 632.6, "text": " And there's another piece that the machine pretends it doesn't know.", "tokens": [50364, 1203, 490, 1203, 1646, 13, 50474, 50474, 708, 360, 286, 914, 538, 341, 30, 50524, 50524, 407, 718, 311, 584, 291, 362, 257, 2522, 295, 1412, 337, 264, 9717, 295, 1588, 35383, 442, 510, 13, 50774, 50774, 961, 311, 519, 466, 257, 960, 7353, 11, 337, 1365, 13, 50882, 50882, 821, 311, 516, 281, 312, 257, 2522, 295, 300, 1412, 300, 291, 434, 516, 281, 980, 264, 3479, 13, 51066, 51066, 509, 393, 574, 412, 309, 13, 51116, 51116, 400, 456, 311, 1071, 2522, 300, 264, 3479, 1162, 2581, 309, 1177, 380, 458, 13, 51336, 51336, 467, 1177, 380, 536, 13, 51428, 51428, 1692, 309, 311, 264, 2027, 12083, 295, 264, 960, 13, 51560, 51560, 1033, 30, 51610, 51610, 407, 309, 1542, 412, 264, 960, 493, 281, 257, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.134592013572579, "compression_ratio": 1.7192307692307693, "no_speech_prob": 1.2216564755362924e-05}, {"id": 166, "seek": 61316, "start": 632.6, "end": 634.4399999999999, "text": " It doesn't see.", "tokens": [50364, 1203, 490, 1203, 1646, 13, 50474, 50474, 708, 360, 286, 914, 538, 341, 30, 50524, 50524, 407, 718, 311, 584, 291, 362, 257, 2522, 295, 1412, 337, 264, 9717, 295, 1588, 35383, 442, 510, 13, 50774, 50774, 961, 311, 519, 466, 257, 960, 7353, 11, 337, 1365, 13, 50882, 50882, 821, 311, 516, 281, 312, 257, 2522, 295, 300, 1412, 300, 291, 434, 516, 281, 980, 264, 3479, 13, 51066, 51066, 509, 393, 574, 412, 309, 13, 51116, 51116, 400, 456, 311, 1071, 2522, 300, 264, 3479, 1162, 2581, 309, 1177, 380, 458, 13, 51336, 51336, 467, 1177, 380, 536, 13, 51428, 51428, 1692, 309, 311, 264, 2027, 12083, 295, 264, 960, 13, 51560, 51560, 1033, 30, 51610, 51610, 407, 309, 1542, 412, 264, 960, 493, 281, 257, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.134592013572579, "compression_ratio": 1.7192307692307693, "no_speech_prob": 1.2216564755362924e-05}, {"id": 167, "seek": 61316, "start": 634.4399999999999, "end": 637.0799999999999, "text": " Here it's the future frames of the video.", "tokens": [50364, 1203, 490, 1203, 1646, 13, 50474, 50474, 708, 360, 286, 914, 538, 341, 30, 50524, 50524, 407, 718, 311, 584, 291, 362, 257, 2522, 295, 1412, 337, 264, 9717, 295, 1588, 35383, 442, 510, 13, 50774, 50774, 961, 311, 519, 466, 257, 960, 7353, 11, 337, 1365, 13, 50882, 50882, 821, 311, 516, 281, 312, 257, 2522, 295, 300, 1412, 300, 291, 434, 516, 281, 980, 264, 3479, 13, 51066, 51066, 509, 393, 574, 412, 309, 13, 51116, 51116, 400, 456, 311, 1071, 2522, 300, 264, 3479, 1162, 2581, 309, 1177, 380, 458, 13, 51336, 51336, 467, 1177, 380, 536, 13, 51428, 51428, 1692, 309, 311, 264, 2027, 12083, 295, 264, 960, 13, 51560, 51560, 1033, 30, 51610, 51610, 407, 309, 1542, 412, 264, 960, 493, 281, 257, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.134592013572579, "compression_ratio": 1.7192307692307693, "no_speech_prob": 1.2216564755362924e-05}, {"id": 168, "seek": 61316, "start": 637.0799999999999, "end": 638.0799999999999, "text": " Okay?", "tokens": [50364, 1203, 490, 1203, 1646, 13, 50474, 50474, 708, 360, 286, 914, 538, 341, 30, 50524, 50524, 407, 718, 311, 584, 291, 362, 257, 2522, 295, 1412, 337, 264, 9717, 295, 1588, 35383, 442, 510, 13, 50774, 50774, 961, 311, 519, 466, 257, 960, 7353, 11, 337, 1365, 13, 50882, 50882, 821, 311, 516, 281, 312, 257, 2522, 295, 300, 1412, 300, 291, 434, 516, 281, 980, 264, 3479, 13, 51066, 51066, 509, 393, 574, 412, 309, 13, 51116, 51116, 400, 456, 311, 1071, 2522, 300, 264, 3479, 1162, 2581, 309, 1177, 380, 458, 13, 51336, 51336, 467, 1177, 380, 536, 13, 51428, 51428, 1692, 309, 311, 264, 2027, 12083, 295, 264, 960, 13, 51560, 51560, 1033, 30, 51610, 51610, 407, 309, 1542, 412, 264, 960, 493, 281, 257, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.134592013572579, "compression_ratio": 1.7192307692307693, "no_speech_prob": 1.2216564755362924e-05}, {"id": 169, "seek": 61316, "start": 638.0799999999999, "end": 639.6, "text": " So it looks at the video up to a point.", "tokens": [50364, 1203, 490, 1203, 1646, 13, 50474, 50474, 708, 360, 286, 914, 538, 341, 30, 50524, 50524, 407, 718, 311, 584, 291, 362, 257, 2522, 295, 1412, 337, 264, 9717, 295, 1588, 35383, 442, 510, 13, 50774, 50774, 961, 311, 519, 466, 257, 960, 7353, 11, 337, 1365, 13, 50882, 50882, 821, 311, 516, 281, 312, 257, 2522, 295, 300, 1412, 300, 291, 434, 516, 281, 980, 264, 3479, 13, 51066, 51066, 509, 393, 574, 412, 309, 13, 51116, 51116, 400, 456, 311, 1071, 2522, 300, 264, 3479, 1162, 2581, 309, 1177, 380, 458, 13, 51336, 51336, 467, 1177, 380, 536, 13, 51428, 51428, 1692, 309, 311, 264, 2027, 12083, 295, 264, 960, 13, 51560, 51560, 1033, 30, 51610, 51610, 407, 309, 1542, 412, 264, 960, 493, 281, 257, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.134592013572579, "compression_ratio": 1.7192307692307693, "no_speech_prob": 1.2216564755362924e-05}, {"id": 170, "seek": 63960, "start": 639.6, "end": 643.44, "text": " And then it tries to predict the rest of the video, but it pretends it doesn't know it", "tokens": [50364, 400, 550, 309, 9898, 281, 6069, 264, 1472, 295, 264, 960, 11, 457, 309, 1162, 2581, 309, 1177, 380, 458, 309, 50556, 50556, 1939, 13, 50624, 50624, 400, 550, 309, 16329, 2564, 281, 6069, 309, 13, 50694, 50694, 2720, 1164, 11, 309, 393, 445, 1699, 293, 11441, 437, 311, 516, 281, 1051, 294, 264, 1002, 11, 293, 309, 16329, 50848, 50848, 293, 6069, 82, 309, 538, 445, 22107, 437, 2011, 13, 51062, 51062, 3996, 1254, 295, 341, 307, 1219, 257, 2758, 2698, 12, 48172, 24420, 2539, 13, 51356, 51356, 509, 976, 257, 2522, 295, 1412, 13, 51424, 51424, 467, 311, 588, 3743, 294, 264, 4319, 295, 3303, 2856, 9007, 613, 1708, 13, 51596, 51596, 3664, 257, 4910, 295, 2487, 11, 257, 3840, 295, 2283, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1348860541055369, "compression_ratio": 1.7168458781362008, "no_speech_prob": 1.37092001750716e-06}, {"id": 171, "seek": 63960, "start": 643.44, "end": 644.8000000000001, "text": " yet.", "tokens": [50364, 400, 550, 309, 9898, 281, 6069, 264, 1472, 295, 264, 960, 11, 457, 309, 1162, 2581, 309, 1177, 380, 458, 309, 50556, 50556, 1939, 13, 50624, 50624, 400, 550, 309, 16329, 2564, 281, 6069, 309, 13, 50694, 50694, 2720, 1164, 11, 309, 393, 445, 1699, 293, 11441, 437, 311, 516, 281, 1051, 294, 264, 1002, 11, 293, 309, 16329, 50848, 50848, 293, 6069, 82, 309, 538, 445, 22107, 437, 2011, 13, 51062, 51062, 3996, 1254, 295, 341, 307, 1219, 257, 2758, 2698, 12, 48172, 24420, 2539, 13, 51356, 51356, 509, 976, 257, 2522, 295, 1412, 13, 51424, 51424, 467, 311, 588, 3743, 294, 264, 4319, 295, 3303, 2856, 9007, 613, 1708, 13, 51596, 51596, 3664, 257, 4910, 295, 2487, 11, 257, 3840, 295, 2283, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1348860541055369, "compression_ratio": 1.7168458781362008, "no_speech_prob": 1.37092001750716e-06}, {"id": 172, "seek": 63960, "start": 644.8000000000001, "end": 646.2, "text": " And then it trains itself to predict it.", "tokens": [50364, 400, 550, 309, 9898, 281, 6069, 264, 1472, 295, 264, 960, 11, 457, 309, 1162, 2581, 309, 1177, 380, 458, 309, 50556, 50556, 1939, 13, 50624, 50624, 400, 550, 309, 16329, 2564, 281, 6069, 309, 13, 50694, 50694, 2720, 1164, 11, 309, 393, 445, 1699, 293, 11441, 437, 311, 516, 281, 1051, 294, 264, 1002, 11, 293, 309, 16329, 50848, 50848, 293, 6069, 82, 309, 538, 445, 22107, 437, 2011, 13, 51062, 51062, 3996, 1254, 295, 341, 307, 1219, 257, 2758, 2698, 12, 48172, 24420, 2539, 13, 51356, 51356, 509, 976, 257, 2522, 295, 1412, 13, 51424, 51424, 467, 311, 588, 3743, 294, 264, 4319, 295, 3303, 2856, 9007, 613, 1708, 13, 51596, 51596, 3664, 257, 4910, 295, 2487, 11, 257, 3840, 295, 2283, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1348860541055369, "compression_ratio": 1.7168458781362008, "no_speech_prob": 1.37092001750716e-06}, {"id": 173, "seek": 63960, "start": 646.2, "end": 649.28, "text": " Of course, it can just wait and observe what's going to happen in the world, and it trains", "tokens": [50364, 400, 550, 309, 9898, 281, 6069, 264, 1472, 295, 264, 960, 11, 457, 309, 1162, 2581, 309, 1177, 380, 458, 309, 50556, 50556, 1939, 13, 50624, 50624, 400, 550, 309, 16329, 2564, 281, 6069, 309, 13, 50694, 50694, 2720, 1164, 11, 309, 393, 445, 1699, 293, 11441, 437, 311, 516, 281, 1051, 294, 264, 1002, 11, 293, 309, 16329, 50848, 50848, 293, 6069, 82, 309, 538, 445, 22107, 437, 2011, 13, 51062, 51062, 3996, 1254, 295, 341, 307, 1219, 257, 2758, 2698, 12, 48172, 24420, 2539, 13, 51356, 51356, 509, 976, 257, 2522, 295, 1412, 13, 51424, 51424, 467, 311, 588, 3743, 294, 264, 4319, 295, 3303, 2856, 9007, 613, 1708, 13, 51596, 51596, 3664, 257, 4910, 295, 2487, 11, 257, 3840, 295, 2283, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1348860541055369, "compression_ratio": 1.7168458781362008, "no_speech_prob": 1.37092001750716e-06}, {"id": 174, "seek": 63960, "start": 649.28, "end": 653.5600000000001, "text": " and predicts it by just observing what happened.", "tokens": [50364, 400, 550, 309, 9898, 281, 6069, 264, 1472, 295, 264, 960, 11, 457, 309, 1162, 2581, 309, 1177, 380, 458, 309, 50556, 50556, 1939, 13, 50624, 50624, 400, 550, 309, 16329, 2564, 281, 6069, 309, 13, 50694, 50694, 2720, 1164, 11, 309, 393, 445, 1699, 293, 11441, 437, 311, 516, 281, 1051, 294, 264, 1002, 11, 293, 309, 16329, 50848, 50848, 293, 6069, 82, 309, 538, 445, 22107, 437, 2011, 13, 51062, 51062, 3996, 1254, 295, 341, 307, 1219, 257, 2758, 2698, 12, 48172, 24420, 2539, 13, 51356, 51356, 509, 976, 257, 2522, 295, 1412, 13, 51424, 51424, 467, 311, 588, 3743, 294, 264, 4319, 295, 3303, 2856, 9007, 613, 1708, 13, 51596, 51596, 3664, 257, 4910, 295, 2487, 11, 257, 3840, 295, 2283, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1348860541055369, "compression_ratio": 1.7168458781362008, "no_speech_prob": 1.37092001750716e-06}, {"id": 175, "seek": 63960, "start": 653.5600000000001, "end": 659.44, "text": " Another form of this is called a mass self-supervised learning.", "tokens": [50364, 400, 550, 309, 9898, 281, 6069, 264, 1472, 295, 264, 960, 11, 457, 309, 1162, 2581, 309, 1177, 380, 458, 309, 50556, 50556, 1939, 13, 50624, 50624, 400, 550, 309, 16329, 2564, 281, 6069, 309, 13, 50694, 50694, 2720, 1164, 11, 309, 393, 445, 1699, 293, 11441, 437, 311, 516, 281, 1051, 294, 264, 1002, 11, 293, 309, 16329, 50848, 50848, 293, 6069, 82, 309, 538, 445, 22107, 437, 2011, 13, 51062, 51062, 3996, 1254, 295, 341, 307, 1219, 257, 2758, 2698, 12, 48172, 24420, 2539, 13, 51356, 51356, 509, 976, 257, 2522, 295, 1412, 13, 51424, 51424, 467, 311, 588, 3743, 294, 264, 4319, 295, 3303, 2856, 9007, 613, 1708, 13, 51596, 51596, 3664, 257, 4910, 295, 2487, 11, 257, 3840, 295, 2283, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1348860541055369, "compression_ratio": 1.7168458781362008, "no_speech_prob": 1.37092001750716e-06}, {"id": 176, "seek": 63960, "start": 659.44, "end": 660.8000000000001, "text": " You give a piece of data.", "tokens": [50364, 400, 550, 309, 9898, 281, 6069, 264, 1472, 295, 264, 960, 11, 457, 309, 1162, 2581, 309, 1177, 380, 458, 309, 50556, 50556, 1939, 13, 50624, 50624, 400, 550, 309, 16329, 2564, 281, 6069, 309, 13, 50694, 50694, 2720, 1164, 11, 309, 393, 445, 1699, 293, 11441, 437, 311, 516, 281, 1051, 294, 264, 1002, 11, 293, 309, 16329, 50848, 50848, 293, 6069, 82, 309, 538, 445, 22107, 437, 2011, 13, 51062, 51062, 3996, 1254, 295, 341, 307, 1219, 257, 2758, 2698, 12, 48172, 24420, 2539, 13, 51356, 51356, 509, 976, 257, 2522, 295, 1412, 13, 51424, 51424, 467, 311, 588, 3743, 294, 264, 4319, 295, 3303, 2856, 9007, 613, 1708, 13, 51596, 51596, 3664, 257, 4910, 295, 2487, 11, 257, 3840, 295, 2283, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1348860541055369, "compression_ratio": 1.7168458781362008, "no_speech_prob": 1.37092001750716e-06}, {"id": 177, "seek": 63960, "start": 660.8000000000001, "end": 664.24, "text": " It's very popular in the context of natural language processing these days.", "tokens": [50364, 400, 550, 309, 9898, 281, 6069, 264, 1472, 295, 264, 960, 11, 457, 309, 1162, 2581, 309, 1177, 380, 458, 309, 50556, 50556, 1939, 13, 50624, 50624, 400, 550, 309, 16329, 2564, 281, 6069, 309, 13, 50694, 50694, 2720, 1164, 11, 309, 393, 445, 1699, 293, 11441, 437, 311, 516, 281, 1051, 294, 264, 1002, 11, 293, 309, 16329, 50848, 50848, 293, 6069, 82, 309, 538, 445, 22107, 437, 2011, 13, 51062, 51062, 3996, 1254, 295, 341, 307, 1219, 257, 2758, 2698, 12, 48172, 24420, 2539, 13, 51356, 51356, 509, 976, 257, 2522, 295, 1412, 13, 51424, 51424, 467, 311, 588, 3743, 294, 264, 4319, 295, 3303, 2856, 9007, 613, 1708, 13, 51596, 51596, 3664, 257, 4910, 295, 2487, 11, 257, 3840, 295, 2283, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1348860541055369, "compression_ratio": 1.7168458781362008, "no_speech_prob": 1.37092001750716e-06}, {"id": 178, "seek": 63960, "start": 664.24, "end": 666.2, "text": " Take a window of text, a bunch of words.", "tokens": [50364, 400, 550, 309, 9898, 281, 6069, 264, 1472, 295, 264, 960, 11, 457, 309, 1162, 2581, 309, 1177, 380, 458, 309, 50556, 50556, 1939, 13, 50624, 50624, 400, 550, 309, 16329, 2564, 281, 6069, 309, 13, 50694, 50694, 2720, 1164, 11, 309, 393, 445, 1699, 293, 11441, 437, 311, 516, 281, 1051, 294, 264, 1002, 11, 293, 309, 16329, 50848, 50848, 293, 6069, 82, 309, 538, 445, 22107, 437, 2011, 13, 51062, 51062, 3996, 1254, 295, 341, 307, 1219, 257, 2758, 2698, 12, 48172, 24420, 2539, 13, 51356, 51356, 509, 976, 257, 2522, 295, 1412, 13, 51424, 51424, 467, 311, 588, 3743, 294, 264, 4319, 295, 3303, 2856, 9007, 613, 1708, 13, 51596, 51596, 3664, 257, 4910, 295, 2487, 11, 257, 3840, 295, 2283, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.1348860541055369, "compression_ratio": 1.7168458781362008, "no_speech_prob": 1.37092001750716e-06}, {"id": 179, "seek": 66620, "start": 666.2, "end": 670.32, "text": " You remove some of the words, and you ask the machine to predict the words that are", "tokens": [50364, 509, 4159, 512, 295, 264, 2283, 11, 293, 291, 1029, 264, 3479, 281, 6069, 264, 2283, 300, 366, 50570, 50570, 5361, 13, 50620, 50620, 682, 264, 1399, 295, 884, 370, 11, 264, 3479, 575, 281, 1936, 1499, 257, 10290, 295, 2856, 50890, 50890, 300, 4045, 309, 281, 652, 729, 21264, 13, 51018, 51018, 400, 1936, 11, 294, 264, 1399, 295, 884, 341, 11, 309, 733, 295, 15146, 2856, 13, 51186, 51186, 1726, 2584, 11, 406, 8760, 11, 457, 920, 13, 51334, 51334, 583, 534, 11, 544, 5101, 11, 309, 311, 264, 1558, 295, 1940, 257, 2522, 295, 1412, 293, 3365, 264, 3479, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.14751107737703142, "compression_ratio": 1.7723577235772359, "no_speech_prob": 7.410212219838286e-06}, {"id": 180, "seek": 66620, "start": 670.32, "end": 671.32, "text": " missing.", "tokens": [50364, 509, 4159, 512, 295, 264, 2283, 11, 293, 291, 1029, 264, 3479, 281, 6069, 264, 2283, 300, 366, 50570, 50570, 5361, 13, 50620, 50620, 682, 264, 1399, 295, 884, 370, 11, 264, 3479, 575, 281, 1936, 1499, 257, 10290, 295, 2856, 50890, 50890, 300, 4045, 309, 281, 652, 729, 21264, 13, 51018, 51018, 400, 1936, 11, 294, 264, 1399, 295, 884, 341, 11, 309, 733, 295, 15146, 2856, 13, 51186, 51186, 1726, 2584, 11, 406, 8760, 11, 457, 920, 13, 51334, 51334, 583, 534, 11, 544, 5101, 11, 309, 311, 264, 1558, 295, 1940, 257, 2522, 295, 1412, 293, 3365, 264, 3479, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.14751107737703142, "compression_ratio": 1.7723577235772359, "no_speech_prob": 7.410212219838286e-06}, {"id": 181, "seek": 66620, "start": 671.32, "end": 676.72, "text": " In the process of doing so, the machine has to basically develop a representation of language", "tokens": [50364, 509, 4159, 512, 295, 264, 2283, 11, 293, 291, 1029, 264, 3479, 281, 6069, 264, 2283, 300, 366, 50570, 50570, 5361, 13, 50620, 50620, 682, 264, 1399, 295, 884, 370, 11, 264, 3479, 575, 281, 1936, 1499, 257, 10290, 295, 2856, 50890, 50890, 300, 4045, 309, 281, 652, 729, 21264, 13, 51018, 51018, 400, 1936, 11, 294, 264, 1399, 295, 884, 341, 11, 309, 733, 295, 15146, 2856, 13, 51186, 51186, 1726, 2584, 11, 406, 8760, 11, 457, 920, 13, 51334, 51334, 583, 534, 11, 544, 5101, 11, 309, 311, 264, 1558, 295, 1940, 257, 2522, 295, 1412, 293, 3365, 264, 3479, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.14751107737703142, "compression_ratio": 1.7723577235772359, "no_speech_prob": 7.410212219838286e-06}, {"id": 182, "seek": 66620, "start": 676.72, "end": 679.2800000000001, "text": " that allows it to make those predictions.", "tokens": [50364, 509, 4159, 512, 295, 264, 2283, 11, 293, 291, 1029, 264, 3479, 281, 6069, 264, 2283, 300, 366, 50570, 50570, 5361, 13, 50620, 50620, 682, 264, 1399, 295, 884, 370, 11, 264, 3479, 575, 281, 1936, 1499, 257, 10290, 295, 2856, 50890, 50890, 300, 4045, 309, 281, 652, 729, 21264, 13, 51018, 51018, 400, 1936, 11, 294, 264, 1399, 295, 884, 341, 11, 309, 733, 295, 15146, 2856, 13, 51186, 51186, 1726, 2584, 11, 406, 8760, 11, 457, 920, 13, 51334, 51334, 583, 534, 11, 544, 5101, 11, 309, 311, 264, 1558, 295, 1940, 257, 2522, 295, 1412, 293, 3365, 264, 3479, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.14751107737703142, "compression_ratio": 1.7723577235772359, "no_speech_prob": 7.410212219838286e-06}, {"id": 183, "seek": 66620, "start": 679.2800000000001, "end": 682.6400000000001, "text": " And basically, in the process of doing this, it kind of understands language.", "tokens": [50364, 509, 4159, 512, 295, 264, 2283, 11, 293, 291, 1029, 264, 3479, 281, 6069, 264, 2283, 300, 366, 50570, 50570, 5361, 13, 50620, 50620, 682, 264, 1399, 295, 884, 370, 11, 264, 3479, 575, 281, 1936, 1499, 257, 10290, 295, 2856, 50890, 50890, 300, 4045, 309, 281, 652, 729, 21264, 13, 51018, 51018, 400, 1936, 11, 294, 264, 1399, 295, 884, 341, 11, 309, 733, 295, 15146, 2856, 13, 51186, 51186, 1726, 2584, 11, 406, 8760, 11, 457, 920, 13, 51334, 51334, 583, 534, 11, 544, 5101, 11, 309, 311, 264, 1558, 295, 1940, 257, 2522, 295, 1412, 293, 3365, 264, 3479, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.14751107737703142, "compression_ratio": 1.7723577235772359, "no_speech_prob": 7.410212219838286e-06}, {"id": 184, "seek": 66620, "start": 682.6400000000001, "end": 685.6, "text": " Not completely, not deeply, but still.", "tokens": [50364, 509, 4159, 512, 295, 264, 2283, 11, 293, 291, 1029, 264, 3479, 281, 6069, 264, 2283, 300, 366, 50570, 50570, 5361, 13, 50620, 50620, 682, 264, 1399, 295, 884, 370, 11, 264, 3479, 575, 281, 1936, 1499, 257, 10290, 295, 2856, 50890, 50890, 300, 4045, 309, 281, 652, 729, 21264, 13, 51018, 51018, 400, 1936, 11, 294, 264, 1399, 295, 884, 341, 11, 309, 733, 295, 15146, 2856, 13, 51186, 51186, 1726, 2584, 11, 406, 8760, 11, 457, 920, 13, 51334, 51334, 583, 534, 11, 544, 5101, 11, 309, 311, 264, 1558, 295, 1940, 257, 2522, 295, 1412, 293, 3365, 264, 3479, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.14751107737703142, "compression_ratio": 1.7723577235772359, "no_speech_prob": 7.410212219838286e-06}, {"id": 185, "seek": 66620, "start": 685.6, "end": 690.72, "text": " But really, more generally, it's the idea of taking a piece of data and asking the machine", "tokens": [50364, 509, 4159, 512, 295, 264, 2283, 11, 293, 291, 1029, 264, 3479, 281, 6069, 264, 2283, 300, 366, 50570, 50570, 5361, 13, 50620, 50620, 682, 264, 1399, 295, 884, 370, 11, 264, 3479, 575, 281, 1936, 1499, 257, 10290, 295, 2856, 50890, 50890, 300, 4045, 309, 281, 652, 729, 21264, 13, 51018, 51018, 400, 1936, 11, 294, 264, 1399, 295, 884, 341, 11, 309, 733, 295, 15146, 2856, 13, 51186, 51186, 1726, 2584, 11, 406, 8760, 11, 457, 920, 13, 51334, 51334, 583, 534, 11, 544, 5101, 11, 309, 311, 264, 1558, 295, 1940, 257, 2522, 295, 1412, 293, 3365, 264, 3479, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.14751107737703142, "compression_ratio": 1.7723577235772359, "no_speech_prob": 7.410212219838286e-06}, {"id": 186, "seek": 69072, "start": 690.72, "end": 697.72, "text": " to predict a piece of it from the piece that it sees.", "tokens": [50364, 281, 6069, 257, 2522, 295, 309, 490, 264, 2522, 300, 309, 8194, 13, 50714, 50714, 407, 382, 286, 445, 2835, 11, 341, 2010, 295, 2539, 575, 1813, 11, 294, 264, 1036, 1064, 11, 575, 1813, 4664, 51002, 51002, 3743, 294, 3303, 2856, 9007, 13, 51076, 51076, 467, 311, 767, 3038, 466, 257, 2603, 10444, 294, 3389, 295, 439, 3303, 2856, 9007, 51266, 51266, 3652, 11, 3009, 12853, 11, 3164, 11, 370, 3329, 13, 51504, 51504, 821, 311, 668, 257, 2638, 295, 3487, 516, 646, 281, 264, 4289, 82, 322, 341, 11, 457, 534, 1333, 295, 257, 3035, 51767, 51767], "temperature": 0.0, "avg_logprob": -0.165457810505782, "compression_ratio": 1.6745098039215687, "no_speech_prob": 3.9666692828177474e-06}, {"id": 187, "seek": 69072, "start": 697.72, "end": 703.48, "text": " So as I just mentioned, this type of learning has become, in the last year, has become extremely", "tokens": [50364, 281, 6069, 257, 2522, 295, 309, 490, 264, 2522, 300, 309, 8194, 13, 50714, 50714, 407, 382, 286, 445, 2835, 11, 341, 2010, 295, 2539, 575, 1813, 11, 294, 264, 1036, 1064, 11, 575, 1813, 4664, 51002, 51002, 3743, 294, 3303, 2856, 9007, 13, 51076, 51076, 467, 311, 767, 3038, 466, 257, 2603, 10444, 294, 3389, 295, 439, 3303, 2856, 9007, 51266, 51266, 3652, 11, 3009, 12853, 11, 3164, 11, 370, 3329, 13, 51504, 51504, 821, 311, 668, 257, 2638, 295, 3487, 516, 646, 281, 264, 4289, 82, 322, 341, 11, 457, 534, 1333, 295, 257, 3035, 51767, 51767], "temperature": 0.0, "avg_logprob": -0.165457810505782, "compression_ratio": 1.6745098039215687, "no_speech_prob": 3.9666692828177474e-06}, {"id": 188, "seek": 69072, "start": 703.48, "end": 704.96, "text": " popular in natural language processing.", "tokens": [50364, 281, 6069, 257, 2522, 295, 309, 490, 264, 2522, 300, 309, 8194, 13, 50714, 50714, 407, 382, 286, 445, 2835, 11, 341, 2010, 295, 2539, 575, 1813, 11, 294, 264, 1036, 1064, 11, 575, 1813, 4664, 51002, 51002, 3743, 294, 3303, 2856, 9007, 13, 51076, 51076, 467, 311, 767, 3038, 466, 257, 2603, 10444, 294, 3389, 295, 439, 3303, 2856, 9007, 51266, 51266, 3652, 11, 3009, 12853, 11, 3164, 11, 370, 3329, 13, 51504, 51504, 821, 311, 668, 257, 2638, 295, 3487, 516, 646, 281, 264, 4289, 82, 322, 341, 11, 457, 534, 1333, 295, 257, 3035, 51767, 51767], "temperature": 0.0, "avg_logprob": -0.165457810505782, "compression_ratio": 1.6745098039215687, "no_speech_prob": 3.9666692828177474e-06}, {"id": 189, "seek": 69072, "start": 704.96, "end": 708.76, "text": " It's actually brought about a huge improvement in performance of all natural language processing", "tokens": [50364, 281, 6069, 257, 2522, 295, 309, 490, 264, 2522, 300, 309, 8194, 13, 50714, 50714, 407, 382, 286, 445, 2835, 11, 341, 2010, 295, 2539, 575, 1813, 11, 294, 264, 1036, 1064, 11, 575, 1813, 4664, 51002, 51002, 3743, 294, 3303, 2856, 9007, 13, 51076, 51076, 467, 311, 767, 3038, 466, 257, 2603, 10444, 294, 3389, 295, 439, 3303, 2856, 9007, 51266, 51266, 3652, 11, 3009, 12853, 11, 3164, 11, 370, 3329, 13, 51504, 51504, 821, 311, 668, 257, 2638, 295, 3487, 516, 646, 281, 264, 4289, 82, 322, 341, 11, 457, 534, 1333, 295, 257, 3035, 51767, 51767], "temperature": 0.0, "avg_logprob": -0.165457810505782, "compression_ratio": 1.6745098039215687, "no_speech_prob": 3.9666692828177474e-06}, {"id": 190, "seek": 69072, "start": 708.76, "end": 713.52, "text": " systems, including translation, search, so Google.", "tokens": [50364, 281, 6069, 257, 2522, 295, 309, 490, 264, 2522, 300, 309, 8194, 13, 50714, 50714, 407, 382, 286, 445, 2835, 11, 341, 2010, 295, 2539, 575, 1813, 11, 294, 264, 1036, 1064, 11, 575, 1813, 4664, 51002, 51002, 3743, 294, 3303, 2856, 9007, 13, 51076, 51076, 467, 311, 767, 3038, 466, 257, 2603, 10444, 294, 3389, 295, 439, 3303, 2856, 9007, 51266, 51266, 3652, 11, 3009, 12853, 11, 3164, 11, 370, 3329, 13, 51504, 51504, 821, 311, 668, 257, 2638, 295, 3487, 516, 646, 281, 264, 4289, 82, 322, 341, 11, 457, 534, 1333, 295, 257, 3035, 51767, 51767], "temperature": 0.0, "avg_logprob": -0.165457810505782, "compression_ratio": 1.6745098039215687, "no_speech_prob": 3.9666692828177474e-06}, {"id": 191, "seek": 69072, "start": 713.52, "end": 718.78, "text": " There's been a series of ideas going back to the 90s on this, but really sort of a paper", "tokens": [50364, 281, 6069, 257, 2522, 295, 309, 490, 264, 2522, 300, 309, 8194, 13, 50714, 50714, 407, 382, 286, 445, 2835, 11, 341, 2010, 295, 2539, 575, 1813, 11, 294, 264, 1036, 1064, 11, 575, 1813, 4664, 51002, 51002, 3743, 294, 3303, 2856, 9007, 13, 51076, 51076, 467, 311, 767, 3038, 466, 257, 2603, 10444, 294, 3389, 295, 439, 3303, 2856, 9007, 51266, 51266, 3652, 11, 3009, 12853, 11, 3164, 11, 370, 3329, 13, 51504, 51504, 821, 311, 668, 257, 2638, 295, 3487, 516, 646, 281, 264, 4289, 82, 322, 341, 11, 457, 534, 1333, 295, 257, 3035, 51767, 51767], "temperature": 0.0, "avg_logprob": -0.165457810505782, "compression_ratio": 1.6745098039215687, "no_speech_prob": 3.9666692828177474e-06}, {"id": 192, "seek": 71878, "start": 718.78, "end": 725.76, "text": " that convinced everyone that this had to be the thing came up on archive in October last", "tokens": [50364, 300, 12561, 1518, 300, 341, 632, 281, 312, 264, 551, 1361, 493, 322, 23507, 294, 7617, 1036, 50713, 50713, 1064, 490, 3329, 7318, 13, 50873, 50873, 467, 390, 322, 3329, 29783, 11, 767, 13, 51127, 51127, 400, 436, 764, 257, 1729, 2010, 295, 18161, 2533, 11, 257, 26800, 472, 11, 1219, 257, 31782, 9482, 13, 51387, 51387, 407, 31782, 9482, 307, 733, 295, 257, 4074, 733, 295, 18161, 2533, 689, 3935, 295, 22027, 51615, 51615, 1936, 4445, 512, 1333, 295, 4675, 10088, 11, 819, 9364, 4675, 10088, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.17102088098940643, "compression_ratio": 1.6585365853658536, "no_speech_prob": 9.513863005849998e-06}, {"id": 193, "seek": 71878, "start": 725.76, "end": 728.9599999999999, "text": " year from Google AI.", "tokens": [50364, 300, 12561, 1518, 300, 341, 632, 281, 312, 264, 551, 1361, 493, 322, 23507, 294, 7617, 1036, 50713, 50713, 1064, 490, 3329, 7318, 13, 50873, 50873, 467, 390, 322, 3329, 29783, 11, 767, 13, 51127, 51127, 400, 436, 764, 257, 1729, 2010, 295, 18161, 2533, 11, 257, 26800, 472, 11, 1219, 257, 31782, 9482, 13, 51387, 51387, 407, 31782, 9482, 307, 733, 295, 257, 4074, 733, 295, 18161, 2533, 689, 3935, 295, 22027, 51615, 51615, 1936, 4445, 512, 1333, 295, 4675, 10088, 11, 819, 9364, 4675, 10088, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.17102088098940643, "compression_ratio": 1.6585365853658536, "no_speech_prob": 9.513863005849998e-06}, {"id": 194, "seek": 71878, "start": 728.9599999999999, "end": 734.04, "text": " It was on Google Brain, actually.", "tokens": [50364, 300, 12561, 1518, 300, 341, 632, 281, 312, 264, 551, 1361, 493, 322, 23507, 294, 7617, 1036, 50713, 50713, 1064, 490, 3329, 7318, 13, 50873, 50873, 467, 390, 322, 3329, 29783, 11, 767, 13, 51127, 51127, 400, 436, 764, 257, 1729, 2010, 295, 18161, 2533, 11, 257, 26800, 472, 11, 1219, 257, 31782, 9482, 13, 51387, 51387, 407, 31782, 9482, 307, 733, 295, 257, 4074, 733, 295, 18161, 2533, 689, 3935, 295, 22027, 51615, 51615, 1936, 4445, 512, 1333, 295, 4675, 10088, 11, 819, 9364, 4675, 10088, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.17102088098940643, "compression_ratio": 1.6585365853658536, "no_speech_prob": 9.513863005849998e-06}, {"id": 195, "seek": 71878, "start": 734.04, "end": 739.24, "text": " And they use a particular type of neural net, a gigantic one, called a transformer architecture.", "tokens": [50364, 300, 12561, 1518, 300, 341, 632, 281, 312, 264, 551, 1361, 493, 322, 23507, 294, 7617, 1036, 50713, 50713, 1064, 490, 3329, 7318, 13, 50873, 50873, 467, 390, 322, 3329, 29783, 11, 767, 13, 51127, 51127, 400, 436, 764, 257, 1729, 2010, 295, 18161, 2533, 11, 257, 26800, 472, 11, 1219, 257, 31782, 9482, 13, 51387, 51387, 407, 31782, 9482, 307, 733, 295, 257, 4074, 733, 295, 18161, 2533, 689, 3935, 295, 22027, 51615, 51615, 1936, 4445, 512, 1333, 295, 4675, 10088, 11, 819, 9364, 4675, 10088, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.17102088098940643, "compression_ratio": 1.6585365853658536, "no_speech_prob": 9.513863005849998e-06}, {"id": 196, "seek": 71878, "start": 739.24, "end": 743.8, "text": " So transformer architecture is kind of a funny kind of neural net where groups of neurons", "tokens": [50364, 300, 12561, 1518, 300, 341, 632, 281, 312, 264, 551, 1361, 493, 322, 23507, 294, 7617, 1036, 50713, 50713, 1064, 490, 3329, 7318, 13, 50873, 50873, 467, 390, 322, 3329, 29783, 11, 767, 13, 51127, 51127, 400, 436, 764, 257, 1729, 2010, 295, 18161, 2533, 11, 257, 26800, 472, 11, 1219, 257, 31782, 9482, 13, 51387, 51387, 407, 31782, 9482, 307, 733, 295, 257, 4074, 733, 295, 18161, 2533, 689, 3935, 295, 22027, 51615, 51615, 1936, 4445, 512, 1333, 295, 4675, 10088, 11, 819, 9364, 4675, 10088, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.17102088098940643, "compression_ratio": 1.6585365853658536, "no_speech_prob": 9.513863005849998e-06}, {"id": 197, "seek": 71878, "start": 743.8, "end": 747.9, "text": " basically implement some sort of memory module, differentiable memory module.", "tokens": [50364, 300, 12561, 1518, 300, 341, 632, 281, 312, 264, 551, 1361, 493, 322, 23507, 294, 7617, 1036, 50713, 50713, 1064, 490, 3329, 7318, 13, 50873, 50873, 467, 390, 322, 3329, 29783, 11, 767, 13, 51127, 51127, 400, 436, 764, 257, 1729, 2010, 295, 18161, 2533, 11, 257, 26800, 472, 11, 1219, 257, 31782, 9482, 13, 51387, 51387, 407, 31782, 9482, 307, 733, 295, 257, 4074, 733, 295, 18161, 2533, 689, 3935, 295, 22027, 51615, 51615, 1936, 4445, 512, 1333, 295, 4675, 10088, 11, 819, 9364, 4675, 10088, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.17102088098940643, "compression_ratio": 1.6585365853658536, "no_speech_prob": 9.513863005849998e-06}, {"id": 198, "seek": 74790, "start": 747.9, "end": 749.56, "text": " So they don't just compute weighted sums.", "tokens": [50364, 407, 436, 500, 380, 445, 14722, 32807, 34499, 13, 50447, 50447, 814, 14722, 32807, 34499, 11, 457, 550, 436, 6794, 729, 32807, 34499, 365, 18875, 1219, 50675, 50675, 9317, 11, 293, 550, 300, 2709, 552, 13444, 300, 291, 2710, 1125, 281, 472, 13, 50863, 50863, 400, 550, 291, 393, 14722, 257, 8213, 6562, 295, 661, 18875, 13, 50985, 50985, 400, 309, 311, 257, 707, 6179, 11, 457, 309, 311, 733, 295, 364, 4180, 1166, 4675, 13, 51187, 51187, 2048, 10088, 294, 456, 307, 364, 4180, 1166, 4675, 13, 51305, 51305, 400, 291, 829, 3356, 7914, 295, 729, 365, 6779, 295, 6803, 295, 9834, 13, 51478, 51478, 509, 3847, 341, 322, 17375, 295, 2283, 295, 2487, 11, 293, 291, 3847, 309, 294, 264, 3480, 636, 13, 51701, 51701, 509, 747, 257, 4910, 295, 257, 1326, 3262, 2283, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.15320507347161041, "compression_ratio": 1.9169435215946844, "no_speech_prob": 1.147550756286364e-05}, {"id": 199, "seek": 74790, "start": 749.56, "end": 754.12, "text": " They compute weighted sums, but then they compare those weighted sums with vectors called", "tokens": [50364, 407, 436, 500, 380, 445, 14722, 32807, 34499, 13, 50447, 50447, 814, 14722, 32807, 34499, 11, 457, 550, 436, 6794, 729, 32807, 34499, 365, 18875, 1219, 50675, 50675, 9317, 11, 293, 550, 300, 2709, 552, 13444, 300, 291, 2710, 1125, 281, 472, 13, 50863, 50863, 400, 550, 291, 393, 14722, 257, 8213, 6562, 295, 661, 18875, 13, 50985, 50985, 400, 309, 311, 257, 707, 6179, 11, 457, 309, 311, 733, 295, 364, 4180, 1166, 4675, 13, 51187, 51187, 2048, 10088, 294, 456, 307, 364, 4180, 1166, 4675, 13, 51305, 51305, 400, 291, 829, 3356, 7914, 295, 729, 365, 6779, 295, 6803, 295, 9834, 13, 51478, 51478, 509, 3847, 341, 322, 17375, 295, 2283, 295, 2487, 11, 293, 291, 3847, 309, 294, 264, 3480, 636, 13, 51701, 51701, 509, 747, 257, 4910, 295, 257, 1326, 3262, 2283, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.15320507347161041, "compression_ratio": 1.9169435215946844, "no_speech_prob": 1.147550756286364e-05}, {"id": 200, "seek": 74790, "start": 754.12, "end": 757.88, "text": " keys, and then that gives them scores that you normalize to one.", "tokens": [50364, 407, 436, 500, 380, 445, 14722, 32807, 34499, 13, 50447, 50447, 814, 14722, 32807, 34499, 11, 457, 550, 436, 6794, 729, 32807, 34499, 365, 18875, 1219, 50675, 50675, 9317, 11, 293, 550, 300, 2709, 552, 13444, 300, 291, 2710, 1125, 281, 472, 13, 50863, 50863, 400, 550, 291, 393, 14722, 257, 8213, 6562, 295, 661, 18875, 13, 50985, 50985, 400, 309, 311, 257, 707, 6179, 11, 457, 309, 311, 733, 295, 364, 4180, 1166, 4675, 13, 51187, 51187, 2048, 10088, 294, 456, 307, 364, 4180, 1166, 4675, 13, 51305, 51305, 400, 291, 829, 3356, 7914, 295, 729, 365, 6779, 295, 6803, 295, 9834, 13, 51478, 51478, 509, 3847, 341, 322, 17375, 295, 2283, 295, 2487, 11, 293, 291, 3847, 309, 294, 264, 3480, 636, 13, 51701, 51701, 509, 747, 257, 4910, 295, 257, 1326, 3262, 2283, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.15320507347161041, "compression_ratio": 1.9169435215946844, "no_speech_prob": 1.147550756286364e-05}, {"id": 201, "seek": 74790, "start": 757.88, "end": 760.3199999999999, "text": " And then you can compute a linear combination of other vectors.", "tokens": [50364, 407, 436, 500, 380, 445, 14722, 32807, 34499, 13, 50447, 50447, 814, 14722, 32807, 34499, 11, 457, 550, 436, 6794, 729, 32807, 34499, 365, 18875, 1219, 50675, 50675, 9317, 11, 293, 550, 300, 2709, 552, 13444, 300, 291, 2710, 1125, 281, 472, 13, 50863, 50863, 400, 550, 291, 393, 14722, 257, 8213, 6562, 295, 661, 18875, 13, 50985, 50985, 400, 309, 311, 257, 707, 6179, 11, 457, 309, 311, 733, 295, 364, 4180, 1166, 4675, 13, 51187, 51187, 2048, 10088, 294, 456, 307, 364, 4180, 1166, 4675, 13, 51305, 51305, 400, 291, 829, 3356, 7914, 295, 729, 365, 6779, 295, 6803, 295, 9834, 13, 51478, 51478, 509, 3847, 341, 322, 17375, 295, 2283, 295, 2487, 11, 293, 291, 3847, 309, 294, 264, 3480, 636, 13, 51701, 51701, 509, 747, 257, 4910, 295, 257, 1326, 3262, 2283, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.15320507347161041, "compression_ratio": 1.9169435215946844, "no_speech_prob": 1.147550756286364e-05}, {"id": 202, "seek": 74790, "start": 760.3199999999999, "end": 764.36, "text": " And it's a little complicated, but it's kind of an associative memory.", "tokens": [50364, 407, 436, 500, 380, 445, 14722, 32807, 34499, 13, 50447, 50447, 814, 14722, 32807, 34499, 11, 457, 550, 436, 6794, 729, 32807, 34499, 365, 18875, 1219, 50675, 50675, 9317, 11, 293, 550, 300, 2709, 552, 13444, 300, 291, 2710, 1125, 281, 472, 13, 50863, 50863, 400, 550, 291, 393, 14722, 257, 8213, 6562, 295, 661, 18875, 13, 50985, 50985, 400, 309, 311, 257, 707, 6179, 11, 457, 309, 311, 733, 295, 364, 4180, 1166, 4675, 13, 51187, 51187, 2048, 10088, 294, 456, 307, 364, 4180, 1166, 4675, 13, 51305, 51305, 400, 291, 829, 3356, 7914, 295, 729, 365, 6779, 295, 6803, 295, 9834, 13, 51478, 51478, 509, 3847, 341, 322, 17375, 295, 2283, 295, 2487, 11, 293, 291, 3847, 309, 294, 264, 3480, 636, 13, 51701, 51701, 509, 747, 257, 4910, 295, 257, 1326, 3262, 2283, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.15320507347161041, "compression_ratio": 1.9169435215946844, "no_speech_prob": 1.147550756286364e-05}, {"id": 203, "seek": 74790, "start": 764.36, "end": 766.72, "text": " Every module in there is an associative memory.", "tokens": [50364, 407, 436, 500, 380, 445, 14722, 32807, 34499, 13, 50447, 50447, 814, 14722, 32807, 34499, 11, 457, 550, 436, 6794, 729, 32807, 34499, 365, 18875, 1219, 50675, 50675, 9317, 11, 293, 550, 300, 2709, 552, 13444, 300, 291, 2710, 1125, 281, 472, 13, 50863, 50863, 400, 550, 291, 393, 14722, 257, 8213, 6562, 295, 661, 18875, 13, 50985, 50985, 400, 309, 311, 257, 707, 6179, 11, 457, 309, 311, 733, 295, 364, 4180, 1166, 4675, 13, 51187, 51187, 2048, 10088, 294, 456, 307, 364, 4180, 1166, 4675, 13, 51305, 51305, 400, 291, 829, 3356, 7914, 295, 729, 365, 6779, 295, 6803, 295, 9834, 13, 51478, 51478, 509, 3847, 341, 322, 17375, 295, 2283, 295, 2487, 11, 293, 291, 3847, 309, 294, 264, 3480, 636, 13, 51701, 51701, 509, 747, 257, 4910, 295, 257, 1326, 3262, 2283, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.15320507347161041, "compression_ratio": 1.9169435215946844, "no_speech_prob": 1.147550756286364e-05}, {"id": 204, "seek": 74790, "start": 766.72, "end": 770.18, "text": " And you put 40 layers of those with hundreds of millions of parameters.", "tokens": [50364, 407, 436, 500, 380, 445, 14722, 32807, 34499, 13, 50447, 50447, 814, 14722, 32807, 34499, 11, 457, 550, 436, 6794, 729, 32807, 34499, 365, 18875, 1219, 50675, 50675, 9317, 11, 293, 550, 300, 2709, 552, 13444, 300, 291, 2710, 1125, 281, 472, 13, 50863, 50863, 400, 550, 291, 393, 14722, 257, 8213, 6562, 295, 661, 18875, 13, 50985, 50985, 400, 309, 311, 257, 707, 6179, 11, 457, 309, 311, 733, 295, 364, 4180, 1166, 4675, 13, 51187, 51187, 2048, 10088, 294, 456, 307, 364, 4180, 1166, 4675, 13, 51305, 51305, 400, 291, 829, 3356, 7914, 295, 729, 365, 6779, 295, 6803, 295, 9834, 13, 51478, 51478, 509, 3847, 341, 322, 17375, 295, 2283, 295, 2487, 11, 293, 291, 3847, 309, 294, 264, 3480, 636, 13, 51701, 51701, 509, 747, 257, 4910, 295, 257, 1326, 3262, 2283, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.15320507347161041, "compression_ratio": 1.9169435215946844, "no_speech_prob": 1.147550756286364e-05}, {"id": 205, "seek": 74790, "start": 770.18, "end": 774.64, "text": " You train this on billions of words of text, and you train it in the following way.", "tokens": [50364, 407, 436, 500, 380, 445, 14722, 32807, 34499, 13, 50447, 50447, 814, 14722, 32807, 34499, 11, 457, 550, 436, 6794, 729, 32807, 34499, 365, 18875, 1219, 50675, 50675, 9317, 11, 293, 550, 300, 2709, 552, 13444, 300, 291, 2710, 1125, 281, 472, 13, 50863, 50863, 400, 550, 291, 393, 14722, 257, 8213, 6562, 295, 661, 18875, 13, 50985, 50985, 400, 309, 311, 257, 707, 6179, 11, 457, 309, 311, 733, 295, 364, 4180, 1166, 4675, 13, 51187, 51187, 2048, 10088, 294, 456, 307, 364, 4180, 1166, 4675, 13, 51305, 51305, 400, 291, 829, 3356, 7914, 295, 729, 365, 6779, 295, 6803, 295, 9834, 13, 51478, 51478, 509, 3847, 341, 322, 17375, 295, 2283, 295, 2487, 11, 293, 291, 3847, 309, 294, 264, 3480, 636, 13, 51701, 51701, 509, 747, 257, 4910, 295, 257, 1326, 3262, 2283, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.15320507347161041, "compression_ratio": 1.9169435215946844, "no_speech_prob": 1.147550756286364e-05}, {"id": 206, "seek": 74790, "start": 774.64, "end": 776.6, "text": " You take a window of a few hundred words.", "tokens": [50364, 407, 436, 500, 380, 445, 14722, 32807, 34499, 13, 50447, 50447, 814, 14722, 32807, 34499, 11, 457, 550, 436, 6794, 729, 32807, 34499, 365, 18875, 1219, 50675, 50675, 9317, 11, 293, 550, 300, 2709, 552, 13444, 300, 291, 2710, 1125, 281, 472, 13, 50863, 50863, 400, 550, 291, 393, 14722, 257, 8213, 6562, 295, 661, 18875, 13, 50985, 50985, 400, 309, 311, 257, 707, 6179, 11, 457, 309, 311, 733, 295, 364, 4180, 1166, 4675, 13, 51187, 51187, 2048, 10088, 294, 456, 307, 364, 4180, 1166, 4675, 13, 51305, 51305, 400, 291, 829, 3356, 7914, 295, 729, 365, 6779, 295, 6803, 295, 9834, 13, 51478, 51478, 509, 3847, 341, 322, 17375, 295, 2283, 295, 2487, 11, 293, 291, 3847, 309, 294, 264, 3480, 636, 13, 51701, 51701, 509, 747, 257, 4910, 295, 257, 1326, 3262, 2283, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.15320507347161041, "compression_ratio": 1.9169435215946844, "no_speech_prob": 1.147550756286364e-05}, {"id": 207, "seek": 77660, "start": 776.6, "end": 780.96, "text": " You take out 15% of the words, and you train the machine to just predict the missing words.", "tokens": [50364, 509, 747, 484, 2119, 4, 295, 264, 2283, 11, 293, 291, 3847, 264, 3479, 281, 445, 6069, 264, 5361, 2283, 13, 50582, 50582, 823, 11, 264, 3479, 2644, 360, 257, 2176, 1691, 412, 341, 13, 50691, 50691, 407, 437, 309, 23930, 307, 337, 1184, 1349, 300, 366, 5361, 11, 309, 23930, 257, 8482, 8062, 6104, 51014, 51014, 2744, 307, 264, 2744, 295, 264, 25890, 13, 51172, 51172, 400, 309, 2709, 291, 257, 8482, 337, 633, 1349, 13, 51298, 51298, 407, 300, 311, 264, 636, 309, 18722, 15697, 294, 264, 17630, 13, 51420, 51420, 467, 14725, 257, 2416, 8482, 8062, 13, 51614, 51614, 639, 575, 2584, 8894, 1602, 364, 38095, 13, 51712, 51712, 7646, 775, 341, 586, 13, 51805, 51805], "temperature": 0.0, "avg_logprob": -0.1231657847885258, "compression_ratio": 1.7127659574468086, "no_speech_prob": 3.2374680358771e-06}, {"id": 208, "seek": 77660, "start": 780.96, "end": 783.14, "text": " Now, the machine cannot do a perfect job at this.", "tokens": [50364, 509, 747, 484, 2119, 4, 295, 264, 2283, 11, 293, 291, 3847, 264, 3479, 281, 445, 6069, 264, 5361, 2283, 13, 50582, 50582, 823, 11, 264, 3479, 2644, 360, 257, 2176, 1691, 412, 341, 13, 50691, 50691, 407, 437, 309, 23930, 307, 337, 1184, 1349, 300, 366, 5361, 11, 309, 23930, 257, 8482, 8062, 6104, 51014, 51014, 2744, 307, 264, 2744, 295, 264, 25890, 13, 51172, 51172, 400, 309, 2709, 291, 257, 8482, 337, 633, 1349, 13, 51298, 51298, 407, 300, 311, 264, 636, 309, 18722, 15697, 294, 264, 17630, 13, 51420, 51420, 467, 14725, 257, 2416, 8482, 8062, 13, 51614, 51614, 639, 575, 2584, 8894, 1602, 364, 38095, 13, 51712, 51712, 7646, 775, 341, 586, 13, 51805, 51805], "temperature": 0.0, "avg_logprob": -0.1231657847885258, "compression_ratio": 1.7127659574468086, "no_speech_prob": 3.2374680358771e-06}, {"id": 209, "seek": 77660, "start": 783.14, "end": 789.6, "text": " So what it outputs is for each word that are missing, it outputs a probability vector whose", "tokens": [50364, 509, 747, 484, 2119, 4, 295, 264, 2283, 11, 293, 291, 3847, 264, 3479, 281, 445, 6069, 264, 5361, 2283, 13, 50582, 50582, 823, 11, 264, 3479, 2644, 360, 257, 2176, 1691, 412, 341, 13, 50691, 50691, 407, 437, 309, 23930, 307, 337, 1184, 1349, 300, 366, 5361, 11, 309, 23930, 257, 8482, 8062, 6104, 51014, 51014, 2744, 307, 264, 2744, 295, 264, 25890, 13, 51172, 51172, 400, 309, 2709, 291, 257, 8482, 337, 633, 1349, 13, 51298, 51298, 407, 300, 311, 264, 636, 309, 18722, 15697, 294, 264, 17630, 13, 51420, 51420, 467, 14725, 257, 2416, 8482, 8062, 13, 51614, 51614, 639, 575, 2584, 8894, 1602, 364, 38095, 13, 51712, 51712, 7646, 775, 341, 586, 13, 51805, 51805], "temperature": 0.0, "avg_logprob": -0.1231657847885258, "compression_ratio": 1.7127659574468086, "no_speech_prob": 3.2374680358771e-06}, {"id": 210, "seek": 77660, "start": 789.6, "end": 792.76, "text": " size is the size of the dictionary.", "tokens": [50364, 509, 747, 484, 2119, 4, 295, 264, 2283, 11, 293, 291, 3847, 264, 3479, 281, 445, 6069, 264, 5361, 2283, 13, 50582, 50582, 823, 11, 264, 3479, 2644, 360, 257, 2176, 1691, 412, 341, 13, 50691, 50691, 407, 437, 309, 23930, 307, 337, 1184, 1349, 300, 366, 5361, 11, 309, 23930, 257, 8482, 8062, 6104, 51014, 51014, 2744, 307, 264, 2744, 295, 264, 25890, 13, 51172, 51172, 400, 309, 2709, 291, 257, 8482, 337, 633, 1349, 13, 51298, 51298, 407, 300, 311, 264, 636, 309, 18722, 15697, 294, 264, 17630, 13, 51420, 51420, 467, 14725, 257, 2416, 8482, 8062, 13, 51614, 51614, 639, 575, 2584, 8894, 1602, 364, 38095, 13, 51712, 51712, 7646, 775, 341, 586, 13, 51805, 51805], "temperature": 0.0, "avg_logprob": -0.1231657847885258, "compression_ratio": 1.7127659574468086, "no_speech_prob": 3.2374680358771e-06}, {"id": 211, "seek": 77660, "start": 792.76, "end": 795.28, "text": " And it gives you a probability for every word.", "tokens": [50364, 509, 747, 484, 2119, 4, 295, 264, 2283, 11, 293, 291, 3847, 264, 3479, 281, 445, 6069, 264, 5361, 2283, 13, 50582, 50582, 823, 11, 264, 3479, 2644, 360, 257, 2176, 1691, 412, 341, 13, 50691, 50691, 407, 437, 309, 23930, 307, 337, 1184, 1349, 300, 366, 5361, 11, 309, 23930, 257, 8482, 8062, 6104, 51014, 51014, 2744, 307, 264, 2744, 295, 264, 25890, 13, 51172, 51172, 400, 309, 2709, 291, 257, 8482, 337, 633, 1349, 13, 51298, 51298, 407, 300, 311, 264, 636, 309, 18722, 15697, 294, 264, 17630, 13, 51420, 51420, 467, 14725, 257, 2416, 8482, 8062, 13, 51614, 51614, 639, 575, 2584, 8894, 1602, 364, 38095, 13, 51712, 51712, 7646, 775, 341, 586, 13, 51805, 51805], "temperature": 0.0, "avg_logprob": -0.1231657847885258, "compression_ratio": 1.7127659574468086, "no_speech_prob": 3.2374680358771e-06}, {"id": 212, "seek": 77660, "start": 795.28, "end": 797.72, "text": " So that's the way it handles uncertainty in the prediction.", "tokens": [50364, 509, 747, 484, 2119, 4, 295, 264, 2283, 11, 293, 291, 3847, 264, 3479, 281, 445, 6069, 264, 5361, 2283, 13, 50582, 50582, 823, 11, 264, 3479, 2644, 360, 257, 2176, 1691, 412, 341, 13, 50691, 50691, 407, 437, 309, 23930, 307, 337, 1184, 1349, 300, 366, 5361, 11, 309, 23930, 257, 8482, 8062, 6104, 51014, 51014, 2744, 307, 264, 2744, 295, 264, 25890, 13, 51172, 51172, 400, 309, 2709, 291, 257, 8482, 337, 633, 1349, 13, 51298, 51298, 407, 300, 311, 264, 636, 309, 18722, 15697, 294, 264, 17630, 13, 51420, 51420, 467, 14725, 257, 2416, 8482, 8062, 13, 51614, 51614, 639, 575, 2584, 8894, 1602, 364, 38095, 13, 51712, 51712, 7646, 775, 341, 586, 13, 51805, 51805], "temperature": 0.0, "avg_logprob": -0.1231657847885258, "compression_ratio": 1.7127659574468086, "no_speech_prob": 3.2374680358771e-06}, {"id": 213, "seek": 77660, "start": 797.72, "end": 801.6, "text": " It produces a large probability vector.", "tokens": [50364, 509, 747, 484, 2119, 4, 295, 264, 2283, 11, 293, 291, 3847, 264, 3479, 281, 445, 6069, 264, 5361, 2283, 13, 50582, 50582, 823, 11, 264, 3479, 2644, 360, 257, 2176, 1691, 412, 341, 13, 50691, 50691, 407, 437, 309, 23930, 307, 337, 1184, 1349, 300, 366, 5361, 11, 309, 23930, 257, 8482, 8062, 6104, 51014, 51014, 2744, 307, 264, 2744, 295, 264, 25890, 13, 51172, 51172, 400, 309, 2709, 291, 257, 8482, 337, 633, 1349, 13, 51298, 51298, 407, 300, 311, 264, 636, 309, 18722, 15697, 294, 264, 17630, 13, 51420, 51420, 467, 14725, 257, 2416, 8482, 8062, 13, 51614, 51614, 639, 575, 2584, 8894, 1602, 364, 38095, 13, 51712, 51712, 7646, 775, 341, 586, 13, 51805, 51805], "temperature": 0.0, "avg_logprob": -0.1231657847885258, "compression_ratio": 1.7127659574468086, "no_speech_prob": 3.2374680358771e-06}, {"id": 214, "seek": 77660, "start": 801.6, "end": 803.5600000000001, "text": " This has completely revolutionized an LP.", "tokens": [50364, 509, 747, 484, 2119, 4, 295, 264, 2283, 11, 293, 291, 3847, 264, 3479, 281, 445, 6069, 264, 5361, 2283, 13, 50582, 50582, 823, 11, 264, 3479, 2644, 360, 257, 2176, 1691, 412, 341, 13, 50691, 50691, 407, 437, 309, 23930, 307, 337, 1184, 1349, 300, 366, 5361, 11, 309, 23930, 257, 8482, 8062, 6104, 51014, 51014, 2744, 307, 264, 2744, 295, 264, 25890, 13, 51172, 51172, 400, 309, 2709, 291, 257, 8482, 337, 633, 1349, 13, 51298, 51298, 407, 300, 311, 264, 636, 309, 18722, 15697, 294, 264, 17630, 13, 51420, 51420, 467, 14725, 257, 2416, 8482, 8062, 13, 51614, 51614, 639, 575, 2584, 8894, 1602, 364, 38095, 13, 51712, 51712, 7646, 775, 341, 586, 13, 51805, 51805], "temperature": 0.0, "avg_logprob": -0.1231657847885258, "compression_ratio": 1.7127659574468086, "no_speech_prob": 3.2374680358771e-06}, {"id": 215, "seek": 77660, "start": 803.5600000000001, "end": 805.4200000000001, "text": " Everybody does this now.", "tokens": [50364, 509, 747, 484, 2119, 4, 295, 264, 2283, 11, 293, 291, 3847, 264, 3479, 281, 445, 6069, 264, 5361, 2283, 13, 50582, 50582, 823, 11, 264, 3479, 2644, 360, 257, 2176, 1691, 412, 341, 13, 50691, 50691, 407, 437, 309, 23930, 307, 337, 1184, 1349, 300, 366, 5361, 11, 309, 23930, 257, 8482, 8062, 6104, 51014, 51014, 2744, 307, 264, 2744, 295, 264, 25890, 13, 51172, 51172, 400, 309, 2709, 291, 257, 8482, 337, 633, 1349, 13, 51298, 51298, 407, 300, 311, 264, 636, 309, 18722, 15697, 294, 264, 17630, 13, 51420, 51420, 467, 14725, 257, 2416, 8482, 8062, 13, 51614, 51614, 639, 575, 2584, 8894, 1602, 364, 38095, 13, 51712, 51712, 7646, 775, 341, 586, 13, 51805, 51805], "temperature": 0.0, "avg_logprob": -0.1231657847885258, "compression_ratio": 1.7127659574468086, "no_speech_prob": 3.2374680358771e-06}, {"id": 216, "seek": 80542, "start": 805.42, "end": 810.1999999999999, "text": " It works so well that Google deployed this within a year.", "tokens": [50364, 467, 1985, 370, 731, 300, 3329, 17826, 341, 1951, 257, 1064, 13, 50603, 50603, 682, 264, 1036, 1326, 3259, 11, 436, 1936, 17826, 341, 382, 257, 636, 295, 11, 337, 1365, 11, 498, 291, 1029, 50809, 50809, 257, 1168, 281, 3329, 11, 309, 486, 5258, 364, 1867, 13, 50947, 50947, 440, 1867, 307, 40610, 538, 257, 551, 411, 341, 13, 51073, 51073, 4384, 575, 4743, 721, 411, 341, 337, 12853, 293, 2701, 30822, 11, 6581, 68, 6218, 51343, 51343, 17784, 11, 439, 3685, 295, 1507, 13, 51393, 51393, 1079, 30, 51443, 51443, 286, 478, 6359, 611, 11, 577, 360, 291, 764, 264, 1186, 300, 291, 458, 264, 11, 291, 848, 6069, 11, 293, 550, 51643, 51643, 6794, 365, 264, 957, 551, 13, 51693, 51693, 1779, 13, 51743, 51743, 407, 510, 291, 360, 264, 912, 551, 30, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.23011583600725447, "compression_ratio": 1.6719745222929936, "no_speech_prob": 4.682641156250611e-05}, {"id": 217, "seek": 80542, "start": 810.1999999999999, "end": 814.3199999999999, "text": " In the last few weeks, they basically deployed this as a way of, for example, if you ask", "tokens": [50364, 467, 1985, 370, 731, 300, 3329, 17826, 341, 1951, 257, 1064, 13, 50603, 50603, 682, 264, 1036, 1326, 3259, 11, 436, 1936, 17826, 341, 382, 257, 636, 295, 11, 337, 1365, 11, 498, 291, 1029, 50809, 50809, 257, 1168, 281, 3329, 11, 309, 486, 5258, 364, 1867, 13, 50947, 50947, 440, 1867, 307, 40610, 538, 257, 551, 411, 341, 13, 51073, 51073, 4384, 575, 4743, 721, 411, 341, 337, 12853, 293, 2701, 30822, 11, 6581, 68, 6218, 51343, 51343, 17784, 11, 439, 3685, 295, 1507, 13, 51393, 51393, 1079, 30, 51443, 51443, 286, 478, 6359, 611, 11, 577, 360, 291, 764, 264, 1186, 300, 291, 458, 264, 11, 291, 848, 6069, 11, 293, 550, 51643, 51643, 6794, 365, 264, 957, 551, 13, 51693, 51693, 1779, 13, 51743, 51743, 407, 510, 291, 360, 264, 912, 551, 30, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.23011583600725447, "compression_ratio": 1.6719745222929936, "no_speech_prob": 4.682641156250611e-05}, {"id": 218, "seek": 80542, "start": 814.3199999999999, "end": 817.0799999999999, "text": " a question to Google, it will produce an answer.", "tokens": [50364, 467, 1985, 370, 731, 300, 3329, 17826, 341, 1951, 257, 1064, 13, 50603, 50603, 682, 264, 1036, 1326, 3259, 11, 436, 1936, 17826, 341, 382, 257, 636, 295, 11, 337, 1365, 11, 498, 291, 1029, 50809, 50809, 257, 1168, 281, 3329, 11, 309, 486, 5258, 364, 1867, 13, 50947, 50947, 440, 1867, 307, 40610, 538, 257, 551, 411, 341, 13, 51073, 51073, 4384, 575, 4743, 721, 411, 341, 337, 12853, 293, 2701, 30822, 11, 6581, 68, 6218, 51343, 51343, 17784, 11, 439, 3685, 295, 1507, 13, 51393, 51393, 1079, 30, 51443, 51443, 286, 478, 6359, 611, 11, 577, 360, 291, 764, 264, 1186, 300, 291, 458, 264, 11, 291, 848, 6069, 11, 293, 550, 51643, 51643, 6794, 365, 264, 957, 551, 13, 51693, 51693, 1779, 13, 51743, 51743, 407, 510, 291, 360, 264, 912, 551, 30, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.23011583600725447, "compression_ratio": 1.6719745222929936, "no_speech_prob": 4.682641156250611e-05}, {"id": 219, "seek": 80542, "start": 817.0799999999999, "end": 819.5999999999999, "text": " The answer is computed by a thing like this.", "tokens": [50364, 467, 1985, 370, 731, 300, 3329, 17826, 341, 1951, 257, 1064, 13, 50603, 50603, 682, 264, 1036, 1326, 3259, 11, 436, 1936, 17826, 341, 382, 257, 636, 295, 11, 337, 1365, 11, 498, 291, 1029, 50809, 50809, 257, 1168, 281, 3329, 11, 309, 486, 5258, 364, 1867, 13, 50947, 50947, 440, 1867, 307, 40610, 538, 257, 551, 411, 341, 13, 51073, 51073, 4384, 575, 4743, 721, 411, 341, 337, 12853, 293, 2701, 30822, 11, 6581, 68, 6218, 51343, 51343, 17784, 11, 439, 3685, 295, 1507, 13, 51393, 51393, 1079, 30, 51443, 51443, 286, 478, 6359, 611, 11, 577, 360, 291, 764, 264, 1186, 300, 291, 458, 264, 11, 291, 848, 6069, 11, 293, 550, 51643, 51643, 6794, 365, 264, 957, 551, 13, 51693, 51693, 1779, 13, 51743, 51743, 407, 510, 291, 360, 264, 912, 551, 30, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.23011583600725447, "compression_ratio": 1.6719745222929936, "no_speech_prob": 4.682641156250611e-05}, {"id": 220, "seek": 80542, "start": 819.5999999999999, "end": 825.0, "text": " Facebook has developed things like this for translation and content filtering, haste speech", "tokens": [50364, 467, 1985, 370, 731, 300, 3329, 17826, 341, 1951, 257, 1064, 13, 50603, 50603, 682, 264, 1036, 1326, 3259, 11, 436, 1936, 17826, 341, 382, 257, 636, 295, 11, 337, 1365, 11, 498, 291, 1029, 50809, 50809, 257, 1168, 281, 3329, 11, 309, 486, 5258, 364, 1867, 13, 50947, 50947, 440, 1867, 307, 40610, 538, 257, 551, 411, 341, 13, 51073, 51073, 4384, 575, 4743, 721, 411, 341, 337, 12853, 293, 2701, 30822, 11, 6581, 68, 6218, 51343, 51343, 17784, 11, 439, 3685, 295, 1507, 13, 51393, 51393, 1079, 30, 51443, 51443, 286, 478, 6359, 611, 11, 577, 360, 291, 764, 264, 1186, 300, 291, 458, 264, 11, 291, 848, 6069, 11, 293, 550, 51643, 51643, 6794, 365, 264, 957, 551, 13, 51693, 51693, 1779, 13, 51743, 51743, 407, 510, 291, 360, 264, 912, 551, 30, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.23011583600725447, "compression_ratio": 1.6719745222929936, "no_speech_prob": 4.682641156250611e-05}, {"id": 221, "seek": 80542, "start": 825.0, "end": 826.0, "text": " detection, all kinds of stuff.", "tokens": [50364, 467, 1985, 370, 731, 300, 3329, 17826, 341, 1951, 257, 1064, 13, 50603, 50603, 682, 264, 1036, 1326, 3259, 11, 436, 1936, 17826, 341, 382, 257, 636, 295, 11, 337, 1365, 11, 498, 291, 1029, 50809, 50809, 257, 1168, 281, 3329, 11, 309, 486, 5258, 364, 1867, 13, 50947, 50947, 440, 1867, 307, 40610, 538, 257, 551, 411, 341, 13, 51073, 51073, 4384, 575, 4743, 721, 411, 341, 337, 12853, 293, 2701, 30822, 11, 6581, 68, 6218, 51343, 51343, 17784, 11, 439, 3685, 295, 1507, 13, 51393, 51393, 1079, 30, 51443, 51443, 286, 478, 6359, 611, 11, 577, 360, 291, 764, 264, 1186, 300, 291, 458, 264, 11, 291, 848, 6069, 11, 293, 550, 51643, 51643, 6794, 365, 264, 957, 551, 13, 51693, 51693, 1779, 13, 51743, 51743, 407, 510, 291, 360, 264, 912, 551, 30, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.23011583600725447, "compression_ratio": 1.6719745222929936, "no_speech_prob": 4.682641156250611e-05}, {"id": 222, "seek": 80542, "start": 826.0, "end": 827.0, "text": " Yes?", "tokens": [50364, 467, 1985, 370, 731, 300, 3329, 17826, 341, 1951, 257, 1064, 13, 50603, 50603, 682, 264, 1036, 1326, 3259, 11, 436, 1936, 17826, 341, 382, 257, 636, 295, 11, 337, 1365, 11, 498, 291, 1029, 50809, 50809, 257, 1168, 281, 3329, 11, 309, 486, 5258, 364, 1867, 13, 50947, 50947, 440, 1867, 307, 40610, 538, 257, 551, 411, 341, 13, 51073, 51073, 4384, 575, 4743, 721, 411, 341, 337, 12853, 293, 2701, 30822, 11, 6581, 68, 6218, 51343, 51343, 17784, 11, 439, 3685, 295, 1507, 13, 51393, 51393, 1079, 30, 51443, 51443, 286, 478, 6359, 611, 11, 577, 360, 291, 764, 264, 1186, 300, 291, 458, 264, 11, 291, 848, 6069, 11, 293, 550, 51643, 51643, 6794, 365, 264, 957, 551, 13, 51693, 51693, 1779, 13, 51743, 51743, 407, 510, 291, 360, 264, 912, 551, 30, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.23011583600725447, "compression_ratio": 1.6719745222929936, "no_speech_prob": 4.682641156250611e-05}, {"id": 223, "seek": 80542, "start": 827.0, "end": 831.0, "text": " I'm wondering also, how do you use the fact that you know the, you said predict, and then", "tokens": [50364, 467, 1985, 370, 731, 300, 3329, 17826, 341, 1951, 257, 1064, 13, 50603, 50603, 682, 264, 1036, 1326, 3259, 11, 436, 1936, 17826, 341, 382, 257, 636, 295, 11, 337, 1365, 11, 498, 291, 1029, 50809, 50809, 257, 1168, 281, 3329, 11, 309, 486, 5258, 364, 1867, 13, 50947, 50947, 440, 1867, 307, 40610, 538, 257, 551, 411, 341, 13, 51073, 51073, 4384, 575, 4743, 721, 411, 341, 337, 12853, 293, 2701, 30822, 11, 6581, 68, 6218, 51343, 51343, 17784, 11, 439, 3685, 295, 1507, 13, 51393, 51393, 1079, 30, 51443, 51443, 286, 478, 6359, 611, 11, 577, 360, 291, 764, 264, 1186, 300, 291, 458, 264, 11, 291, 848, 6069, 11, 293, 550, 51643, 51643, 6794, 365, 264, 957, 551, 13, 51693, 51693, 1779, 13, 51743, 51743, 407, 510, 291, 360, 264, 912, 551, 30, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.23011583600725447, "compression_ratio": 1.6719745222929936, "no_speech_prob": 4.682641156250611e-05}, {"id": 224, "seek": 80542, "start": 831.0, "end": 832.0, "text": " compare with the real thing.", "tokens": [50364, 467, 1985, 370, 731, 300, 3329, 17826, 341, 1951, 257, 1064, 13, 50603, 50603, 682, 264, 1036, 1326, 3259, 11, 436, 1936, 17826, 341, 382, 257, 636, 295, 11, 337, 1365, 11, 498, 291, 1029, 50809, 50809, 257, 1168, 281, 3329, 11, 309, 486, 5258, 364, 1867, 13, 50947, 50947, 440, 1867, 307, 40610, 538, 257, 551, 411, 341, 13, 51073, 51073, 4384, 575, 4743, 721, 411, 341, 337, 12853, 293, 2701, 30822, 11, 6581, 68, 6218, 51343, 51343, 17784, 11, 439, 3685, 295, 1507, 13, 51393, 51393, 1079, 30, 51443, 51443, 286, 478, 6359, 611, 11, 577, 360, 291, 764, 264, 1186, 300, 291, 458, 264, 11, 291, 848, 6069, 11, 293, 550, 51643, 51643, 6794, 365, 264, 957, 551, 13, 51693, 51693, 1779, 13, 51743, 51743, 407, 510, 291, 360, 264, 912, 551, 30, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.23011583600725447, "compression_ratio": 1.6719745222929936, "no_speech_prob": 4.682641156250611e-05}, {"id": 225, "seek": 80542, "start": 832.0, "end": 833.0, "text": " Right.", "tokens": [50364, 467, 1985, 370, 731, 300, 3329, 17826, 341, 1951, 257, 1064, 13, 50603, 50603, 682, 264, 1036, 1326, 3259, 11, 436, 1936, 17826, 341, 382, 257, 636, 295, 11, 337, 1365, 11, 498, 291, 1029, 50809, 50809, 257, 1168, 281, 3329, 11, 309, 486, 5258, 364, 1867, 13, 50947, 50947, 440, 1867, 307, 40610, 538, 257, 551, 411, 341, 13, 51073, 51073, 4384, 575, 4743, 721, 411, 341, 337, 12853, 293, 2701, 30822, 11, 6581, 68, 6218, 51343, 51343, 17784, 11, 439, 3685, 295, 1507, 13, 51393, 51393, 1079, 30, 51443, 51443, 286, 478, 6359, 611, 11, 577, 360, 291, 764, 264, 1186, 300, 291, 458, 264, 11, 291, 848, 6069, 11, 293, 550, 51643, 51643, 6794, 365, 264, 957, 551, 13, 51693, 51693, 1779, 13, 51743, 51743, 407, 510, 291, 360, 264, 912, 551, 30, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.23011583600725447, "compression_ratio": 1.6719745222929936, "no_speech_prob": 4.682641156250611e-05}, {"id": 226, "seek": 80542, "start": 833.0, "end": 834.0, "text": " So here you do the same thing?", "tokens": [50364, 467, 1985, 370, 731, 300, 3329, 17826, 341, 1951, 257, 1064, 13, 50603, 50603, 682, 264, 1036, 1326, 3259, 11, 436, 1936, 17826, 341, 382, 257, 636, 295, 11, 337, 1365, 11, 498, 291, 1029, 50809, 50809, 257, 1168, 281, 3329, 11, 309, 486, 5258, 364, 1867, 13, 50947, 50947, 440, 1867, 307, 40610, 538, 257, 551, 411, 341, 13, 51073, 51073, 4384, 575, 4743, 721, 411, 341, 337, 12853, 293, 2701, 30822, 11, 6581, 68, 6218, 51343, 51343, 17784, 11, 439, 3685, 295, 1507, 13, 51393, 51393, 1079, 30, 51443, 51443, 286, 478, 6359, 611, 11, 577, 360, 291, 764, 264, 1186, 300, 291, 458, 264, 11, 291, 848, 6069, 11, 293, 550, 51643, 51643, 6794, 365, 264, 957, 551, 13, 51693, 51693, 1779, 13, 51743, 51743, 407, 510, 291, 360, 264, 912, 551, 30, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.23011583600725447, "compression_ratio": 1.6719745222929936, "no_speech_prob": 4.682641156250611e-05}, {"id": 227, "seek": 83400, "start": 834.0, "end": 836.52, "text": " Well, here you know what those words are, right?", "tokens": [50364, 1042, 11, 510, 291, 458, 437, 729, 2283, 366, 11, 558, 30, 50490, 50490, 467, 311, 445, 291, 13, 50540, 50540, 583, 370, 577, 307, 300, 819, 490, 264, 46533, 21538, 30, 50674, 50674, 467, 311, 406, 13, 50724, 50724, 1033, 13, 50774, 50774, 467, 311, 570, 291, 362, 341, 10298, 11, 341, 551, 1553, 264, 2283, 13, 50924, 50924, 1779, 13, 50974, 50974, 467, 311, 406, 13, 51024, 51024, 467, 311, 46533, 2539, 365, 732, 7300, 13, 51154, 51154, 1485, 307, 291, 500, 380, 362, 257, 16455, 15447, 2522, 295, 1412, 291, 362, 11563, 281, 6069, 13, 51339, 51339, 407, 1936, 291, 434, 406, 3365, 309, 281, 2042, 604, 5633, 661, 813, 3701, 264, 4846, 51546, 51546, 1412, 11, 264, 6920, 3877, 295, 264, 4846, 1412, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.21794450644290808, "compression_ratio": 1.7279151943462898, "no_speech_prob": 1.0448052307765465e-05}, {"id": 228, "seek": 83400, "start": 836.52, "end": 837.52, "text": " It's just you.", "tokens": [50364, 1042, 11, 510, 291, 458, 437, 729, 2283, 366, 11, 558, 30, 50490, 50490, 467, 311, 445, 291, 13, 50540, 50540, 583, 370, 577, 307, 300, 819, 490, 264, 46533, 21538, 30, 50674, 50674, 467, 311, 406, 13, 50724, 50724, 1033, 13, 50774, 50774, 467, 311, 570, 291, 362, 341, 10298, 11, 341, 551, 1553, 264, 2283, 13, 50924, 50924, 1779, 13, 50974, 50974, 467, 311, 406, 13, 51024, 51024, 467, 311, 46533, 2539, 365, 732, 7300, 13, 51154, 51154, 1485, 307, 291, 500, 380, 362, 257, 16455, 15447, 2522, 295, 1412, 291, 362, 11563, 281, 6069, 13, 51339, 51339, 407, 1936, 291, 434, 406, 3365, 309, 281, 2042, 604, 5633, 661, 813, 3701, 264, 4846, 51546, 51546, 1412, 11, 264, 6920, 3877, 295, 264, 4846, 1412, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.21794450644290808, "compression_ratio": 1.7279151943462898, "no_speech_prob": 1.0448052307765465e-05}, {"id": 229, "seek": 83400, "start": 837.52, "end": 840.2, "text": " But so how is that different from the supervised classification?", "tokens": [50364, 1042, 11, 510, 291, 458, 437, 729, 2283, 366, 11, 558, 30, 50490, 50490, 467, 311, 445, 291, 13, 50540, 50540, 583, 370, 577, 307, 300, 819, 490, 264, 46533, 21538, 30, 50674, 50674, 467, 311, 406, 13, 50724, 50724, 1033, 13, 50774, 50774, 467, 311, 570, 291, 362, 341, 10298, 11, 341, 551, 1553, 264, 2283, 13, 50924, 50924, 1779, 13, 50974, 50974, 467, 311, 406, 13, 51024, 51024, 467, 311, 46533, 2539, 365, 732, 7300, 13, 51154, 51154, 1485, 307, 291, 500, 380, 362, 257, 16455, 15447, 2522, 295, 1412, 291, 362, 11563, 281, 6069, 13, 51339, 51339, 407, 1936, 291, 434, 406, 3365, 309, 281, 2042, 604, 5633, 661, 813, 3701, 264, 4846, 51546, 51546, 1412, 11, 264, 6920, 3877, 295, 264, 4846, 1412, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.21794450644290808, "compression_ratio": 1.7279151943462898, "no_speech_prob": 1.0448052307765465e-05}, {"id": 230, "seek": 83400, "start": 840.2, "end": 841.2, "text": " It's not.", "tokens": [50364, 1042, 11, 510, 291, 458, 437, 729, 2283, 366, 11, 558, 30, 50490, 50490, 467, 311, 445, 291, 13, 50540, 50540, 583, 370, 577, 307, 300, 819, 490, 264, 46533, 21538, 30, 50674, 50674, 467, 311, 406, 13, 50724, 50724, 1033, 13, 50774, 50774, 467, 311, 570, 291, 362, 341, 10298, 11, 341, 551, 1553, 264, 2283, 13, 50924, 50924, 1779, 13, 50974, 50974, 467, 311, 406, 13, 51024, 51024, 467, 311, 46533, 2539, 365, 732, 7300, 13, 51154, 51154, 1485, 307, 291, 500, 380, 362, 257, 16455, 15447, 2522, 295, 1412, 291, 362, 11563, 281, 6069, 13, 51339, 51339, 407, 1936, 291, 434, 406, 3365, 309, 281, 2042, 604, 5633, 661, 813, 3701, 264, 4846, 51546, 51546, 1412, 11, 264, 6920, 3877, 295, 264, 4846, 1412, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.21794450644290808, "compression_ratio": 1.7279151943462898, "no_speech_prob": 1.0448052307765465e-05}, {"id": 231, "seek": 83400, "start": 841.2, "end": 842.2, "text": " Okay.", "tokens": [50364, 1042, 11, 510, 291, 458, 437, 729, 2283, 366, 11, 558, 30, 50490, 50490, 467, 311, 445, 291, 13, 50540, 50540, 583, 370, 577, 307, 300, 819, 490, 264, 46533, 21538, 30, 50674, 50674, 467, 311, 406, 13, 50724, 50724, 1033, 13, 50774, 50774, 467, 311, 570, 291, 362, 341, 10298, 11, 341, 551, 1553, 264, 2283, 13, 50924, 50924, 1779, 13, 50974, 50974, 467, 311, 406, 13, 51024, 51024, 467, 311, 46533, 2539, 365, 732, 7300, 13, 51154, 51154, 1485, 307, 291, 500, 380, 362, 257, 16455, 15447, 2522, 295, 1412, 291, 362, 11563, 281, 6069, 13, 51339, 51339, 407, 1936, 291, 434, 406, 3365, 309, 281, 2042, 604, 5633, 661, 813, 3701, 264, 4846, 51546, 51546, 1412, 11, 264, 6920, 3877, 295, 264, 4846, 1412, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.21794450644290808, "compression_ratio": 1.7279151943462898, "no_speech_prob": 1.0448052307765465e-05}, {"id": 232, "seek": 83400, "start": 842.2, "end": 845.2, "text": " It's because you have this axis, this thing without the words.", "tokens": [50364, 1042, 11, 510, 291, 458, 437, 729, 2283, 366, 11, 558, 30, 50490, 50490, 467, 311, 445, 291, 13, 50540, 50540, 583, 370, 577, 307, 300, 819, 490, 264, 46533, 21538, 30, 50674, 50674, 467, 311, 406, 13, 50724, 50724, 1033, 13, 50774, 50774, 467, 311, 570, 291, 362, 341, 10298, 11, 341, 551, 1553, 264, 2283, 13, 50924, 50924, 1779, 13, 50974, 50974, 467, 311, 406, 13, 51024, 51024, 467, 311, 46533, 2539, 365, 732, 7300, 13, 51154, 51154, 1485, 307, 291, 500, 380, 362, 257, 16455, 15447, 2522, 295, 1412, 291, 362, 11563, 281, 6069, 13, 51339, 51339, 407, 1936, 291, 434, 406, 3365, 309, 281, 2042, 604, 5633, 661, 813, 3701, 264, 4846, 51546, 51546, 1412, 11, 264, 6920, 3877, 295, 264, 4846, 1412, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.21794450644290808, "compression_ratio": 1.7279151943462898, "no_speech_prob": 1.0448052307765465e-05}, {"id": 233, "seek": 83400, "start": 845.2, "end": 846.2, "text": " Right.", "tokens": [50364, 1042, 11, 510, 291, 458, 437, 729, 2283, 366, 11, 558, 30, 50490, 50490, 467, 311, 445, 291, 13, 50540, 50540, 583, 370, 577, 307, 300, 819, 490, 264, 46533, 21538, 30, 50674, 50674, 467, 311, 406, 13, 50724, 50724, 1033, 13, 50774, 50774, 467, 311, 570, 291, 362, 341, 10298, 11, 341, 551, 1553, 264, 2283, 13, 50924, 50924, 1779, 13, 50974, 50974, 467, 311, 406, 13, 51024, 51024, 467, 311, 46533, 2539, 365, 732, 7300, 13, 51154, 51154, 1485, 307, 291, 500, 380, 362, 257, 16455, 15447, 2522, 295, 1412, 291, 362, 11563, 281, 6069, 13, 51339, 51339, 407, 1936, 291, 434, 406, 3365, 309, 281, 2042, 604, 5633, 661, 813, 3701, 264, 4846, 51546, 51546, 1412, 11, 264, 6920, 3877, 295, 264, 4846, 1412, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.21794450644290808, "compression_ratio": 1.7279151943462898, "no_speech_prob": 1.0448052307765465e-05}, {"id": 234, "seek": 83400, "start": 846.2, "end": 847.2, "text": " It's not.", "tokens": [50364, 1042, 11, 510, 291, 458, 437, 729, 2283, 366, 11, 558, 30, 50490, 50490, 467, 311, 445, 291, 13, 50540, 50540, 583, 370, 577, 307, 300, 819, 490, 264, 46533, 21538, 30, 50674, 50674, 467, 311, 406, 13, 50724, 50724, 1033, 13, 50774, 50774, 467, 311, 570, 291, 362, 341, 10298, 11, 341, 551, 1553, 264, 2283, 13, 50924, 50924, 1779, 13, 50974, 50974, 467, 311, 406, 13, 51024, 51024, 467, 311, 46533, 2539, 365, 732, 7300, 13, 51154, 51154, 1485, 307, 291, 500, 380, 362, 257, 16455, 15447, 2522, 295, 1412, 291, 362, 11563, 281, 6069, 13, 51339, 51339, 407, 1936, 291, 434, 406, 3365, 309, 281, 2042, 604, 5633, 661, 813, 3701, 264, 4846, 51546, 51546, 1412, 11, 264, 6920, 3877, 295, 264, 4846, 1412, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.21794450644290808, "compression_ratio": 1.7279151943462898, "no_speech_prob": 1.0448052307765465e-05}, {"id": 235, "seek": 83400, "start": 847.2, "end": 849.8, "text": " It's supervised learning with two differences.", "tokens": [50364, 1042, 11, 510, 291, 458, 437, 729, 2283, 366, 11, 558, 30, 50490, 50490, 467, 311, 445, 291, 13, 50540, 50540, 583, 370, 577, 307, 300, 819, 490, 264, 46533, 21538, 30, 50674, 50674, 467, 311, 406, 13, 50724, 50724, 1033, 13, 50774, 50774, 467, 311, 570, 291, 362, 341, 10298, 11, 341, 551, 1553, 264, 2283, 13, 50924, 50924, 1779, 13, 50974, 50974, 467, 311, 406, 13, 51024, 51024, 467, 311, 46533, 2539, 365, 732, 7300, 13, 51154, 51154, 1485, 307, 291, 500, 380, 362, 257, 16455, 15447, 2522, 295, 1412, 291, 362, 11563, 281, 6069, 13, 51339, 51339, 407, 1936, 291, 434, 406, 3365, 309, 281, 2042, 604, 5633, 661, 813, 3701, 264, 4846, 51546, 51546, 1412, 11, 264, 6920, 3877, 295, 264, 4846, 1412, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.21794450644290808, "compression_ratio": 1.7279151943462898, "no_speech_prob": 1.0448052307765465e-05}, {"id": 236, "seek": 83400, "start": 849.8, "end": 853.5, "text": " One is you don't have a extraneous piece of data you have sufficient to predict.", "tokens": [50364, 1042, 11, 510, 291, 458, 437, 729, 2283, 366, 11, 558, 30, 50490, 50490, 467, 311, 445, 291, 13, 50540, 50540, 583, 370, 577, 307, 300, 819, 490, 264, 46533, 21538, 30, 50674, 50674, 467, 311, 406, 13, 50724, 50724, 1033, 13, 50774, 50774, 467, 311, 570, 291, 362, 341, 10298, 11, 341, 551, 1553, 264, 2283, 13, 50924, 50924, 1779, 13, 50974, 50974, 467, 311, 406, 13, 51024, 51024, 467, 311, 46533, 2539, 365, 732, 7300, 13, 51154, 51154, 1485, 307, 291, 500, 380, 362, 257, 16455, 15447, 2522, 295, 1412, 291, 362, 11563, 281, 6069, 13, 51339, 51339, 407, 1936, 291, 434, 406, 3365, 309, 281, 2042, 604, 5633, 661, 813, 3701, 264, 4846, 51546, 51546, 1412, 11, 264, 6920, 3877, 295, 264, 4846, 1412, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.21794450644290808, "compression_ratio": 1.7279151943462898, "no_speech_prob": 1.0448052307765465e-05}, {"id": 237, "seek": 83400, "start": 853.5, "end": 857.64, "text": " So basically you're not asking it to perform any task other than understanding the input", "tokens": [50364, 1042, 11, 510, 291, 458, 437, 729, 2283, 366, 11, 558, 30, 50490, 50490, 467, 311, 445, 291, 13, 50540, 50540, 583, 370, 577, 307, 300, 819, 490, 264, 46533, 21538, 30, 50674, 50674, 467, 311, 406, 13, 50724, 50724, 1033, 13, 50774, 50774, 467, 311, 570, 291, 362, 341, 10298, 11, 341, 551, 1553, 264, 2283, 13, 50924, 50924, 1779, 13, 50974, 50974, 467, 311, 406, 13, 51024, 51024, 467, 311, 46533, 2539, 365, 732, 7300, 13, 51154, 51154, 1485, 307, 291, 500, 380, 362, 257, 16455, 15447, 2522, 295, 1412, 291, 362, 11563, 281, 6069, 13, 51339, 51339, 407, 1936, 291, 434, 406, 3365, 309, 281, 2042, 604, 5633, 661, 813, 3701, 264, 4846, 51546, 51546, 1412, 11, 264, 6920, 3877, 295, 264, 4846, 1412, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.21794450644290808, "compression_ratio": 1.7279151943462898, "no_speech_prob": 1.0448052307765465e-05}, {"id": 238, "seek": 83400, "start": 857.64, "end": 860.72, "text": " data, the internal structure of the input data.", "tokens": [50364, 1042, 11, 510, 291, 458, 437, 729, 2283, 366, 11, 558, 30, 50490, 50490, 467, 311, 445, 291, 13, 50540, 50540, 583, 370, 577, 307, 300, 819, 490, 264, 46533, 21538, 30, 50674, 50674, 467, 311, 406, 13, 50724, 50724, 1033, 13, 50774, 50774, 467, 311, 570, 291, 362, 341, 10298, 11, 341, 551, 1553, 264, 2283, 13, 50924, 50924, 1779, 13, 50974, 50974, 467, 311, 406, 13, 51024, 51024, 467, 311, 46533, 2539, 365, 732, 7300, 13, 51154, 51154, 1485, 307, 291, 500, 380, 362, 257, 16455, 15447, 2522, 295, 1412, 291, 362, 11563, 281, 6069, 13, 51339, 51339, 407, 1936, 291, 434, 406, 3365, 309, 281, 2042, 604, 5633, 661, 813, 3701, 264, 4846, 51546, 51546, 1412, 11, 264, 6920, 3877, 295, 264, 4846, 1412, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.21794450644290808, "compression_ratio": 1.7279151943462898, "no_speech_prob": 1.0448052307765465e-05}, {"id": 239, "seek": 86072, "start": 860.72, "end": 866.08, "text": " Second thing is that prediction cannot be done exactly because you can't predict exactly", "tokens": [50364, 5736, 551, 307, 300, 17630, 2644, 312, 1096, 2293, 570, 291, 393, 380, 6069, 2293, 50632, 50632, 597, 1349, 307, 516, 281, 352, 510, 13, 50708, 50708, 400, 370, 291, 643, 281, 2028, 365, 15697, 13, 50802, 50802, 400, 729, 366, 11462, 2141, 2793, 300, 20206, 341, 490, 1333, 295, 3890, 46533, 2539, 51076, 51076, 498, 291, 528, 13, 51156, 51156, 1033, 13, 51214, 51214, 467, 1177, 380, 589, 370, 731, 337, 11, 2086, 30, 51314, 51314, 7769, 264, 15697, 11, 370, 576, 309, 6069, 3866, 6338, 293, 550, 584, 485, 51484, 51484, 865, 13, 51534, 51534, 467, 14725, 257, 8482, 8062, 670, 439, 2283, 13, 51634, 51634, 1097, 6338, 293, 550, 485, 51684, 51684, 865, 13, 51734, 51734, 467, 311, 257, 4994, 472, 337, 633, 1349, 11, 538, 264, 636, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.3028509196113138, "compression_ratio": 1.7242524916943522, "no_speech_prob": 1.1477259249659255e-05}, {"id": 240, "seek": 86072, "start": 866.08, "end": 867.6, "text": " which word is going to go here.", "tokens": [50364, 5736, 551, 307, 300, 17630, 2644, 312, 1096, 2293, 570, 291, 393, 380, 6069, 2293, 50632, 50632, 597, 1349, 307, 516, 281, 352, 510, 13, 50708, 50708, 400, 370, 291, 643, 281, 2028, 365, 15697, 13, 50802, 50802, 400, 729, 366, 11462, 2141, 2793, 300, 20206, 341, 490, 1333, 295, 3890, 46533, 2539, 51076, 51076, 498, 291, 528, 13, 51156, 51156, 1033, 13, 51214, 51214, 467, 1177, 380, 589, 370, 731, 337, 11, 2086, 30, 51314, 51314, 7769, 264, 15697, 11, 370, 576, 309, 6069, 3866, 6338, 293, 550, 584, 485, 51484, 51484, 865, 13, 51534, 51534, 467, 14725, 257, 8482, 8062, 670, 439, 2283, 13, 51634, 51634, 1097, 6338, 293, 550, 485, 51684, 51684, 865, 13, 51734, 51734, 467, 311, 257, 4994, 472, 337, 633, 1349, 11, 538, 264, 636, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.3028509196113138, "compression_ratio": 1.7242524916943522, "no_speech_prob": 1.1477259249659255e-05}, {"id": 241, "seek": 86072, "start": 867.6, "end": 869.48, "text": " And so you need to deal with uncertainty.", "tokens": [50364, 5736, 551, 307, 300, 17630, 2644, 312, 1096, 2293, 570, 291, 393, 380, 6069, 2293, 50632, 50632, 597, 1349, 307, 516, 281, 352, 510, 13, 50708, 50708, 400, 370, 291, 643, 281, 2028, 365, 15697, 13, 50802, 50802, 400, 729, 366, 11462, 2141, 2793, 300, 20206, 341, 490, 1333, 295, 3890, 46533, 2539, 51076, 51076, 498, 291, 528, 13, 51156, 51156, 1033, 13, 51214, 51214, 467, 1177, 380, 589, 370, 731, 337, 11, 2086, 30, 51314, 51314, 7769, 264, 15697, 11, 370, 576, 309, 6069, 3866, 6338, 293, 550, 584, 485, 51484, 51484, 865, 13, 51534, 51534, 467, 14725, 257, 8482, 8062, 670, 439, 2283, 13, 51634, 51634, 1097, 6338, 293, 550, 485, 51684, 51684, 865, 13, 51734, 51734, 467, 311, 257, 4994, 472, 337, 633, 1349, 11, 538, 264, 636, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.3028509196113138, "compression_ratio": 1.7242524916943522, "no_speech_prob": 1.1477259249659255e-05}, {"id": 242, "seek": 86072, "start": 869.48, "end": 874.96, "text": " And those are crucial key points that distinguish this from sort of regular supervised learning", "tokens": [50364, 5736, 551, 307, 300, 17630, 2644, 312, 1096, 2293, 570, 291, 393, 380, 6069, 2293, 50632, 50632, 597, 1349, 307, 516, 281, 352, 510, 13, 50708, 50708, 400, 370, 291, 643, 281, 2028, 365, 15697, 13, 50802, 50802, 400, 729, 366, 11462, 2141, 2793, 300, 20206, 341, 490, 1333, 295, 3890, 46533, 2539, 51076, 51076, 498, 291, 528, 13, 51156, 51156, 1033, 13, 51214, 51214, 467, 1177, 380, 589, 370, 731, 337, 11, 2086, 30, 51314, 51314, 7769, 264, 15697, 11, 370, 576, 309, 6069, 3866, 6338, 293, 550, 584, 485, 51484, 51484, 865, 13, 51534, 51534, 467, 14725, 257, 8482, 8062, 670, 439, 2283, 13, 51634, 51634, 1097, 6338, 293, 550, 485, 51684, 51684, 865, 13, 51734, 51734, 467, 311, 257, 4994, 472, 337, 633, 1349, 11, 538, 264, 636, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.3028509196113138, "compression_ratio": 1.7242524916943522, "no_speech_prob": 1.1477259249659255e-05}, {"id": 243, "seek": 86072, "start": 874.96, "end": 876.5600000000001, "text": " if you want.", "tokens": [50364, 5736, 551, 307, 300, 17630, 2644, 312, 1096, 2293, 570, 291, 393, 380, 6069, 2293, 50632, 50632, 597, 1349, 307, 516, 281, 352, 510, 13, 50708, 50708, 400, 370, 291, 643, 281, 2028, 365, 15697, 13, 50802, 50802, 400, 729, 366, 11462, 2141, 2793, 300, 20206, 341, 490, 1333, 295, 3890, 46533, 2539, 51076, 51076, 498, 291, 528, 13, 51156, 51156, 1033, 13, 51214, 51214, 467, 1177, 380, 589, 370, 731, 337, 11, 2086, 30, 51314, 51314, 7769, 264, 15697, 11, 370, 576, 309, 6069, 3866, 6338, 293, 550, 584, 485, 51484, 51484, 865, 13, 51534, 51534, 467, 14725, 257, 8482, 8062, 670, 439, 2283, 13, 51634, 51634, 1097, 6338, 293, 550, 485, 51684, 51684, 865, 13, 51734, 51734, 467, 311, 257, 4994, 472, 337, 633, 1349, 11, 538, 264, 636, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.3028509196113138, "compression_ratio": 1.7242524916943522, "no_speech_prob": 1.1477259249659255e-05}, {"id": 244, "seek": 86072, "start": 876.5600000000001, "end": 877.72, "text": " Okay.", "tokens": [50364, 5736, 551, 307, 300, 17630, 2644, 312, 1096, 2293, 570, 291, 393, 380, 6069, 2293, 50632, 50632, 597, 1349, 307, 516, 281, 352, 510, 13, 50708, 50708, 400, 370, 291, 643, 281, 2028, 365, 15697, 13, 50802, 50802, 400, 729, 366, 11462, 2141, 2793, 300, 20206, 341, 490, 1333, 295, 3890, 46533, 2539, 51076, 51076, 498, 291, 528, 13, 51156, 51156, 1033, 13, 51214, 51214, 467, 1177, 380, 589, 370, 731, 337, 11, 2086, 30, 51314, 51314, 7769, 264, 15697, 11, 370, 576, 309, 6069, 3866, 6338, 293, 550, 584, 485, 51484, 51484, 865, 13, 51534, 51534, 467, 14725, 257, 8482, 8062, 670, 439, 2283, 13, 51634, 51634, 1097, 6338, 293, 550, 485, 51684, 51684, 865, 13, 51734, 51734, 467, 311, 257, 4994, 472, 337, 633, 1349, 11, 538, 264, 636, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.3028509196113138, "compression_ratio": 1.7242524916943522, "no_speech_prob": 1.1477259249659255e-05}, {"id": 245, "seek": 86072, "start": 877.72, "end": 879.72, "text": " It doesn't work so well for, yes?", "tokens": [50364, 5736, 551, 307, 300, 17630, 2644, 312, 1096, 2293, 570, 291, 393, 380, 6069, 2293, 50632, 50632, 597, 1349, 307, 516, 281, 352, 510, 13, 50708, 50708, 400, 370, 291, 643, 281, 2028, 365, 15697, 13, 50802, 50802, 400, 729, 366, 11462, 2141, 2793, 300, 20206, 341, 490, 1333, 295, 3890, 46533, 2539, 51076, 51076, 498, 291, 528, 13, 51156, 51156, 1033, 13, 51214, 51214, 467, 1177, 380, 589, 370, 731, 337, 11, 2086, 30, 51314, 51314, 7769, 264, 15697, 11, 370, 576, 309, 6069, 3866, 6338, 293, 550, 584, 485, 51484, 51484, 865, 13, 51534, 51534, 467, 14725, 257, 8482, 8062, 670, 439, 2283, 13, 51634, 51634, 1097, 6338, 293, 550, 485, 51684, 51684, 865, 13, 51734, 51734, 467, 311, 257, 4994, 472, 337, 633, 1349, 11, 538, 264, 636, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.3028509196113138, "compression_ratio": 1.7242524916943522, "no_speech_prob": 1.1477259249659255e-05}, {"id": 246, "seek": 86072, "start": 879.72, "end": 883.12, "text": " About the uncertainty, so would it predict multiple answers and then say...", "tokens": [50364, 5736, 551, 307, 300, 17630, 2644, 312, 1096, 2293, 570, 291, 393, 380, 6069, 2293, 50632, 50632, 597, 1349, 307, 516, 281, 352, 510, 13, 50708, 50708, 400, 370, 291, 643, 281, 2028, 365, 15697, 13, 50802, 50802, 400, 729, 366, 11462, 2141, 2793, 300, 20206, 341, 490, 1333, 295, 3890, 46533, 2539, 51076, 51076, 498, 291, 528, 13, 51156, 51156, 1033, 13, 51214, 51214, 467, 1177, 380, 589, 370, 731, 337, 11, 2086, 30, 51314, 51314, 7769, 264, 15697, 11, 370, 576, 309, 6069, 3866, 6338, 293, 550, 584, 485, 51484, 51484, 865, 13, 51534, 51534, 467, 14725, 257, 8482, 8062, 670, 439, 2283, 13, 51634, 51634, 1097, 6338, 293, 550, 485, 51684, 51684, 865, 13, 51734, 51734, 467, 311, 257, 4994, 472, 337, 633, 1349, 11, 538, 264, 636, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.3028509196113138, "compression_ratio": 1.7242524916943522, "no_speech_prob": 1.1477259249659255e-05}, {"id": 247, "seek": 86072, "start": 883.12, "end": 884.12, "text": " Yeah.", "tokens": [50364, 5736, 551, 307, 300, 17630, 2644, 312, 1096, 2293, 570, 291, 393, 380, 6069, 2293, 50632, 50632, 597, 1349, 307, 516, 281, 352, 510, 13, 50708, 50708, 400, 370, 291, 643, 281, 2028, 365, 15697, 13, 50802, 50802, 400, 729, 366, 11462, 2141, 2793, 300, 20206, 341, 490, 1333, 295, 3890, 46533, 2539, 51076, 51076, 498, 291, 528, 13, 51156, 51156, 1033, 13, 51214, 51214, 467, 1177, 380, 589, 370, 731, 337, 11, 2086, 30, 51314, 51314, 7769, 264, 15697, 11, 370, 576, 309, 6069, 3866, 6338, 293, 550, 584, 485, 51484, 51484, 865, 13, 51534, 51534, 467, 14725, 257, 8482, 8062, 670, 439, 2283, 13, 51634, 51634, 1097, 6338, 293, 550, 485, 51684, 51684, 865, 13, 51734, 51734, 467, 311, 257, 4994, 472, 337, 633, 1349, 11, 538, 264, 636, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.3028509196113138, "compression_ratio": 1.7242524916943522, "no_speech_prob": 1.1477259249659255e-05}, {"id": 248, "seek": 86072, "start": 884.12, "end": 886.12, "text": " It produces a probability vector over all words.", "tokens": [50364, 5736, 551, 307, 300, 17630, 2644, 312, 1096, 2293, 570, 291, 393, 380, 6069, 2293, 50632, 50632, 597, 1349, 307, 516, 281, 352, 510, 13, 50708, 50708, 400, 370, 291, 643, 281, 2028, 365, 15697, 13, 50802, 50802, 400, 729, 366, 11462, 2141, 2793, 300, 20206, 341, 490, 1333, 295, 3890, 46533, 2539, 51076, 51076, 498, 291, 528, 13, 51156, 51156, 1033, 13, 51214, 51214, 467, 1177, 380, 589, 370, 731, 337, 11, 2086, 30, 51314, 51314, 7769, 264, 15697, 11, 370, 576, 309, 6069, 3866, 6338, 293, 550, 584, 485, 51484, 51484, 865, 13, 51534, 51534, 467, 14725, 257, 8482, 8062, 670, 439, 2283, 13, 51634, 51634, 1097, 6338, 293, 550, 485, 51684, 51684, 865, 13, 51734, 51734, 467, 311, 257, 4994, 472, 337, 633, 1349, 11, 538, 264, 636, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.3028509196113138, "compression_ratio": 1.7242524916943522, "no_speech_prob": 1.1477259249659255e-05}, {"id": 249, "seek": 86072, "start": 886.12, "end": 887.12, "text": "... answers and then...", "tokens": [50364, 5736, 551, 307, 300, 17630, 2644, 312, 1096, 2293, 570, 291, 393, 380, 6069, 2293, 50632, 50632, 597, 1349, 307, 516, 281, 352, 510, 13, 50708, 50708, 400, 370, 291, 643, 281, 2028, 365, 15697, 13, 50802, 50802, 400, 729, 366, 11462, 2141, 2793, 300, 20206, 341, 490, 1333, 295, 3890, 46533, 2539, 51076, 51076, 498, 291, 528, 13, 51156, 51156, 1033, 13, 51214, 51214, 467, 1177, 380, 589, 370, 731, 337, 11, 2086, 30, 51314, 51314, 7769, 264, 15697, 11, 370, 576, 309, 6069, 3866, 6338, 293, 550, 584, 485, 51484, 51484, 865, 13, 51534, 51534, 467, 14725, 257, 8482, 8062, 670, 439, 2283, 13, 51634, 51634, 1097, 6338, 293, 550, 485, 51684, 51684, 865, 13, 51734, 51734, 467, 311, 257, 4994, 472, 337, 633, 1349, 11, 538, 264, 636, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.3028509196113138, "compression_ratio": 1.7242524916943522, "no_speech_prob": 1.1477259249659255e-05}, {"id": 250, "seek": 86072, "start": 887.12, "end": 888.12, "text": " Yeah.", "tokens": [50364, 5736, 551, 307, 300, 17630, 2644, 312, 1096, 2293, 570, 291, 393, 380, 6069, 2293, 50632, 50632, 597, 1349, 307, 516, 281, 352, 510, 13, 50708, 50708, 400, 370, 291, 643, 281, 2028, 365, 15697, 13, 50802, 50802, 400, 729, 366, 11462, 2141, 2793, 300, 20206, 341, 490, 1333, 295, 3890, 46533, 2539, 51076, 51076, 498, 291, 528, 13, 51156, 51156, 1033, 13, 51214, 51214, 467, 1177, 380, 589, 370, 731, 337, 11, 2086, 30, 51314, 51314, 7769, 264, 15697, 11, 370, 576, 309, 6069, 3866, 6338, 293, 550, 584, 485, 51484, 51484, 865, 13, 51534, 51534, 467, 14725, 257, 8482, 8062, 670, 439, 2283, 13, 51634, 51634, 1097, 6338, 293, 550, 485, 51684, 51684, 865, 13, 51734, 51734, 467, 311, 257, 4994, 472, 337, 633, 1349, 11, 538, 264, 636, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.3028509196113138, "compression_ratio": 1.7242524916943522, "no_speech_prob": 1.1477259249659255e-05}, {"id": 251, "seek": 86072, "start": 888.12, "end": 889.64, "text": " It's a separate one for every word, by the way.", "tokens": [50364, 5736, 551, 307, 300, 17630, 2644, 312, 1096, 2293, 570, 291, 393, 380, 6069, 2293, 50632, 50632, 597, 1349, 307, 516, 281, 352, 510, 13, 50708, 50708, 400, 370, 291, 643, 281, 2028, 365, 15697, 13, 50802, 50802, 400, 729, 366, 11462, 2141, 2793, 300, 20206, 341, 490, 1333, 295, 3890, 46533, 2539, 51076, 51076, 498, 291, 528, 13, 51156, 51156, 1033, 13, 51214, 51214, 467, 1177, 380, 589, 370, 731, 337, 11, 2086, 30, 51314, 51314, 7769, 264, 15697, 11, 370, 576, 309, 6069, 3866, 6338, 293, 550, 584, 485, 51484, 51484, 865, 13, 51534, 51534, 467, 14725, 257, 8482, 8062, 670, 439, 2283, 13, 51634, 51634, 1097, 6338, 293, 550, 485, 51684, 51684, 865, 13, 51734, 51734, 467, 311, 257, 4994, 472, 337, 633, 1349, 11, 538, 264, 636, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.3028509196113138, "compression_ratio": 1.7242524916943522, "no_speech_prob": 1.1477259249659255e-05}, {"id": 252, "seek": 88964, "start": 889.64, "end": 893.28, "text": " So yeah, so there's no consistency between...", "tokens": [50364, 407, 1338, 11, 370, 456, 311, 572, 14416, 1296, 485, 50546, 50546, 865, 11, 498, 291, 1888, 472, 1349, 11, 291, 393, 1888, 1071, 1349, 21761, 490, 309, 490, 300, 7316, 50724, 50724, 8062, 13, 50774, 50774, 865, 13, 50824, 50824, 407, 295, 1164, 561, 362, 3031, 281, 360, 341, 337, 5267, 13, 51048, 51048, 407, 264, 10344, 295, 341, 576, 312, 747, 364, 3256, 11, 291, 458, 11, 8247, 484, 512, 295, 264, 3179, 51288, 51288, 295, 341, 3256, 293, 550, 3847, 257, 18161, 2533, 11, 264, 45216, 304, 2533, 420, 746, 11, 281, 6069, 51514, 51514, 264, 5361, 3166, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.21280326483384618, "compression_ratio": 1.683127572016461, "no_speech_prob": 8.663385415275116e-06}, {"id": 253, "seek": 88964, "start": 893.28, "end": 896.84, "text": " Yeah, if you pick one word, you can pick another word independently from it from that distribution", "tokens": [50364, 407, 1338, 11, 370, 456, 311, 572, 14416, 1296, 485, 50546, 50546, 865, 11, 498, 291, 1888, 472, 1349, 11, 291, 393, 1888, 1071, 1349, 21761, 490, 309, 490, 300, 7316, 50724, 50724, 8062, 13, 50774, 50774, 865, 13, 50824, 50824, 407, 295, 1164, 561, 362, 3031, 281, 360, 341, 337, 5267, 13, 51048, 51048, 407, 264, 10344, 295, 341, 576, 312, 747, 364, 3256, 11, 291, 458, 11, 8247, 484, 512, 295, 264, 3179, 51288, 51288, 295, 341, 3256, 293, 550, 3847, 257, 18161, 2533, 11, 264, 45216, 304, 2533, 420, 746, 11, 281, 6069, 51514, 51514, 264, 5361, 3166, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.21280326483384618, "compression_ratio": 1.683127572016461, "no_speech_prob": 8.663385415275116e-06}, {"id": 254, "seek": 88964, "start": 896.84, "end": 897.84, "text": " vector.", "tokens": [50364, 407, 1338, 11, 370, 456, 311, 572, 14416, 1296, 485, 50546, 50546, 865, 11, 498, 291, 1888, 472, 1349, 11, 291, 393, 1888, 1071, 1349, 21761, 490, 309, 490, 300, 7316, 50724, 50724, 8062, 13, 50774, 50774, 865, 13, 50824, 50824, 407, 295, 1164, 561, 362, 3031, 281, 360, 341, 337, 5267, 13, 51048, 51048, 407, 264, 10344, 295, 341, 576, 312, 747, 364, 3256, 11, 291, 458, 11, 8247, 484, 512, 295, 264, 3179, 51288, 51288, 295, 341, 3256, 293, 550, 3847, 257, 18161, 2533, 11, 264, 45216, 304, 2533, 420, 746, 11, 281, 6069, 51514, 51514, 264, 5361, 3166, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.21280326483384618, "compression_ratio": 1.683127572016461, "no_speech_prob": 8.663385415275116e-06}, {"id": 255, "seek": 88964, "start": 897.84, "end": 898.84, "text": " Yeah.", "tokens": [50364, 407, 1338, 11, 370, 456, 311, 572, 14416, 1296, 485, 50546, 50546, 865, 11, 498, 291, 1888, 472, 1349, 11, 291, 393, 1888, 1071, 1349, 21761, 490, 309, 490, 300, 7316, 50724, 50724, 8062, 13, 50774, 50774, 865, 13, 50824, 50824, 407, 295, 1164, 561, 362, 3031, 281, 360, 341, 337, 5267, 13, 51048, 51048, 407, 264, 10344, 295, 341, 576, 312, 747, 364, 3256, 11, 291, 458, 11, 8247, 484, 512, 295, 264, 3179, 51288, 51288, 295, 341, 3256, 293, 550, 3847, 257, 18161, 2533, 11, 264, 45216, 304, 2533, 420, 746, 11, 281, 6069, 51514, 51514, 264, 5361, 3166, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.21280326483384618, "compression_ratio": 1.683127572016461, "no_speech_prob": 8.663385415275116e-06}, {"id": 256, "seek": 88964, "start": 898.84, "end": 903.3199999999999, "text": " So of course people have tried to do this for images.", "tokens": [50364, 407, 1338, 11, 370, 456, 311, 572, 14416, 1296, 485, 50546, 50546, 865, 11, 498, 291, 1888, 472, 1349, 11, 291, 393, 1888, 1071, 1349, 21761, 490, 309, 490, 300, 7316, 50724, 50724, 8062, 13, 50774, 50774, 865, 13, 50824, 50824, 407, 295, 1164, 561, 362, 3031, 281, 360, 341, 337, 5267, 13, 51048, 51048, 407, 264, 10344, 295, 341, 576, 312, 747, 364, 3256, 11, 291, 458, 11, 8247, 484, 512, 295, 264, 3179, 51288, 51288, 295, 341, 3256, 293, 550, 3847, 257, 18161, 2533, 11, 264, 45216, 304, 2533, 420, 746, 11, 281, 6069, 51514, 51514, 264, 5361, 3166, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.21280326483384618, "compression_ratio": 1.683127572016461, "no_speech_prob": 8.663385415275116e-06}, {"id": 257, "seek": 88964, "start": 903.3199999999999, "end": 908.12, "text": " So the equivalent of this would be take an image, you know, blank out some of the areas", "tokens": [50364, 407, 1338, 11, 370, 456, 311, 572, 14416, 1296, 485, 50546, 50546, 865, 11, 498, 291, 1888, 472, 1349, 11, 291, 393, 1888, 1071, 1349, 21761, 490, 309, 490, 300, 7316, 50724, 50724, 8062, 13, 50774, 50774, 865, 13, 50824, 50824, 407, 295, 1164, 561, 362, 3031, 281, 360, 341, 337, 5267, 13, 51048, 51048, 407, 264, 10344, 295, 341, 576, 312, 747, 364, 3256, 11, 291, 458, 11, 8247, 484, 512, 295, 264, 3179, 51288, 51288, 295, 341, 3256, 293, 550, 3847, 257, 18161, 2533, 11, 264, 45216, 304, 2533, 420, 746, 11, 281, 6069, 51514, 51514, 264, 5361, 3166, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.21280326483384618, "compression_ratio": 1.683127572016461, "no_speech_prob": 8.663385415275116e-06}, {"id": 258, "seek": 88964, "start": 908.12, "end": 912.64, "text": " of this image and then train a neural net, the convolutional net or something, to predict", "tokens": [50364, 407, 1338, 11, 370, 456, 311, 572, 14416, 1296, 485, 50546, 50546, 865, 11, 498, 291, 1888, 472, 1349, 11, 291, 393, 1888, 1071, 1349, 21761, 490, 309, 490, 300, 7316, 50724, 50724, 8062, 13, 50774, 50774, 865, 13, 50824, 50824, 407, 295, 1164, 561, 362, 3031, 281, 360, 341, 337, 5267, 13, 51048, 51048, 407, 264, 10344, 295, 341, 576, 312, 747, 364, 3256, 11, 291, 458, 11, 8247, 484, 512, 295, 264, 3179, 51288, 51288, 295, 341, 3256, 293, 550, 3847, 257, 18161, 2533, 11, 264, 45216, 304, 2533, 420, 746, 11, 281, 6069, 51514, 51514, 264, 5361, 3166, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.21280326483384618, "compression_ratio": 1.683127572016461, "no_speech_prob": 8.663385415275116e-06}, {"id": 259, "seek": 88964, "start": 912.64, "end": 914.36, "text": " the missing parts.", "tokens": [50364, 407, 1338, 11, 370, 456, 311, 572, 14416, 1296, 485, 50546, 50546, 865, 11, 498, 291, 1888, 472, 1349, 11, 291, 393, 1888, 1071, 1349, 21761, 490, 309, 490, 300, 7316, 50724, 50724, 8062, 13, 50774, 50774, 865, 13, 50824, 50824, 407, 295, 1164, 561, 362, 3031, 281, 360, 341, 337, 5267, 13, 51048, 51048, 407, 264, 10344, 295, 341, 576, 312, 747, 364, 3256, 11, 291, 458, 11, 8247, 484, 512, 295, 264, 3179, 51288, 51288, 295, 341, 3256, 293, 550, 3847, 257, 18161, 2533, 11, 264, 45216, 304, 2533, 420, 746, 11, 281, 6069, 51514, 51514, 264, 5361, 3166, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.21280326483384618, "compression_ratio": 1.683127572016461, "no_speech_prob": 8.663385415275116e-06}, {"id": 260, "seek": 91436, "start": 914.36, "end": 920.04, "text": " The problem with this is that now the distribution of outputs is over a high dimensional continuous", "tokens": [50364, 440, 1154, 365, 341, 307, 300, 586, 264, 7316, 295, 23930, 307, 670, 257, 1090, 18795, 10957, 50648, 50648, 1901, 13, 50698, 50698, 400, 321, 500, 380, 458, 577, 281, 13075, 1125, 665, 37870, 295, 2357, 13, 50900, 50900, 407, 729, 370, 1400, 362, 406, 668, 588, 4406, 13, 51094, 51094, 1726, 281, 264, 8396, 300, 729, 362, 668, 4406, 13, 51176, 51176, 407, 264, 636, 291, 764, 729, 721, 307, 291, 3847, 341, 3209, 293, 550, 291, 747, 264, 6920, 51339, 51339, 10290, 295, 2856, 300, 729, 721, 1466, 293, 764, 309, 382, 4846, 281, 257, 46533, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.0966335371428845, "compression_ratio": 1.7431906614785992, "no_speech_prob": 4.156997420068365e-06}, {"id": 261, "seek": 91436, "start": 920.04, "end": 921.04, "text": " space.", "tokens": [50364, 440, 1154, 365, 341, 307, 300, 586, 264, 7316, 295, 23930, 307, 670, 257, 1090, 18795, 10957, 50648, 50648, 1901, 13, 50698, 50698, 400, 321, 500, 380, 458, 577, 281, 13075, 1125, 665, 37870, 295, 2357, 13, 50900, 50900, 407, 729, 370, 1400, 362, 406, 668, 588, 4406, 13, 51094, 51094, 1726, 281, 264, 8396, 300, 729, 362, 668, 4406, 13, 51176, 51176, 407, 264, 636, 291, 764, 729, 721, 307, 291, 3847, 341, 3209, 293, 550, 291, 747, 264, 6920, 51339, 51339, 10290, 295, 2856, 300, 729, 721, 1466, 293, 764, 309, 382, 4846, 281, 257, 46533, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.0966335371428845, "compression_ratio": 1.7431906614785992, "no_speech_prob": 4.156997420068365e-06}, {"id": 262, "seek": 91436, "start": 921.04, "end": 925.08, "text": " And we don't know how to parameterize good distributions of others.", "tokens": [50364, 440, 1154, 365, 341, 307, 300, 586, 264, 7316, 295, 23930, 307, 670, 257, 1090, 18795, 10957, 50648, 50648, 1901, 13, 50698, 50698, 400, 321, 500, 380, 458, 577, 281, 13075, 1125, 665, 37870, 295, 2357, 13, 50900, 50900, 407, 729, 370, 1400, 362, 406, 668, 588, 4406, 13, 51094, 51094, 1726, 281, 264, 8396, 300, 729, 362, 668, 4406, 13, 51176, 51176, 407, 264, 636, 291, 764, 729, 721, 307, 291, 3847, 341, 3209, 293, 550, 291, 747, 264, 6920, 51339, 51339, 10290, 295, 2856, 300, 729, 721, 1466, 293, 764, 309, 382, 4846, 281, 257, 46533, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.0966335371428845, "compression_ratio": 1.7431906614785992, "no_speech_prob": 4.156997420068365e-06}, {"id": 263, "seek": 91436, "start": 925.08, "end": 928.96, "text": " So those so far have not been very successful.", "tokens": [50364, 440, 1154, 365, 341, 307, 300, 586, 264, 7316, 295, 23930, 307, 670, 257, 1090, 18795, 10957, 50648, 50648, 1901, 13, 50698, 50698, 400, 321, 500, 380, 458, 577, 281, 13075, 1125, 665, 37870, 295, 2357, 13, 50900, 50900, 407, 729, 370, 1400, 362, 406, 668, 588, 4406, 13, 51094, 51094, 1726, 281, 264, 8396, 300, 729, 362, 668, 4406, 13, 51176, 51176, 407, 264, 636, 291, 764, 729, 721, 307, 291, 3847, 341, 3209, 293, 550, 291, 747, 264, 6920, 51339, 51339, 10290, 295, 2856, 300, 729, 721, 1466, 293, 764, 309, 382, 4846, 281, 257, 46533, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.0966335371428845, "compression_ratio": 1.7431906614785992, "no_speech_prob": 4.156997420068365e-06}, {"id": 264, "seek": 91436, "start": 928.96, "end": 930.6, "text": " Not to the extent that those have been successful.", "tokens": [50364, 440, 1154, 365, 341, 307, 300, 586, 264, 7316, 295, 23930, 307, 670, 257, 1090, 18795, 10957, 50648, 50648, 1901, 13, 50698, 50698, 400, 321, 500, 380, 458, 577, 281, 13075, 1125, 665, 37870, 295, 2357, 13, 50900, 50900, 407, 729, 370, 1400, 362, 406, 668, 588, 4406, 13, 51094, 51094, 1726, 281, 264, 8396, 300, 729, 362, 668, 4406, 13, 51176, 51176, 407, 264, 636, 291, 764, 729, 721, 307, 291, 3847, 341, 3209, 293, 550, 291, 747, 264, 6920, 51339, 51339, 10290, 295, 2856, 300, 729, 721, 1466, 293, 764, 309, 382, 4846, 281, 257, 46533, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.0966335371428845, "compression_ratio": 1.7431906614785992, "no_speech_prob": 4.156997420068365e-06}, {"id": 265, "seek": 91436, "start": 930.6, "end": 933.86, "text": " So the way you use those things is you train this network and then you take the internal", "tokens": [50364, 440, 1154, 365, 341, 307, 300, 586, 264, 7316, 295, 23930, 307, 670, 257, 1090, 18795, 10957, 50648, 50648, 1901, 13, 50698, 50698, 400, 321, 500, 380, 458, 577, 281, 13075, 1125, 665, 37870, 295, 2357, 13, 50900, 50900, 407, 729, 370, 1400, 362, 406, 668, 588, 4406, 13, 51094, 51094, 1726, 281, 264, 8396, 300, 729, 362, 668, 4406, 13, 51176, 51176, 407, 264, 636, 291, 764, 729, 721, 307, 291, 3847, 341, 3209, 293, 550, 291, 747, 264, 6920, 51339, 51339, 10290, 295, 2856, 300, 729, 721, 1466, 293, 764, 309, 382, 4846, 281, 257, 46533, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.0966335371428845, "compression_ratio": 1.7431906614785992, "no_speech_prob": 4.156997420068365e-06}, {"id": 266, "seek": 91436, "start": 933.86, "end": 939.08, "text": " representation of language that those things learn and use it as input to a supervised", "tokens": [50364, 440, 1154, 365, 341, 307, 300, 586, 264, 7316, 295, 23930, 307, 670, 257, 1090, 18795, 10957, 50648, 50648, 1901, 13, 50698, 50698, 400, 321, 500, 380, 458, 577, 281, 13075, 1125, 665, 37870, 295, 2357, 13, 50900, 50900, 407, 729, 370, 1400, 362, 406, 668, 588, 4406, 13, 51094, 51094, 1726, 281, 264, 8396, 300, 729, 362, 668, 4406, 13, 51176, 51176, 407, 264, 636, 291, 764, 729, 721, 307, 291, 3847, 341, 3209, 293, 550, 291, 747, 264, 6920, 51339, 51339, 10290, 295, 2856, 300, 729, 721, 1466, 293, 764, 309, 382, 4846, 281, 257, 46533, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.0966335371428845, "compression_ratio": 1.7431906614785992, "no_speech_prob": 4.156997420068365e-06}, {"id": 267, "seek": 93908, "start": 939.08, "end": 944.8000000000001, "text": " task, his speech detection, answering, question answering, you know, whatever.", "tokens": [50364, 5633, 11, 702, 6218, 17784, 11, 13430, 11, 1168, 13430, 11, 291, 458, 11, 2035, 13, 50650, 50650, 821, 311, 257, 1594, 11, 732, 1731, 412, 4384, 294, 8380, 567, 362, 1143, 341, 337, 3097, 257, 50910, 50910, 35223, 13, 50960, 50960, 407, 291, 976, 257, 8174, 294, 3669, 293, 257, 8174, 294, 5522, 11, 291, 4159, 819, 2283, 16979, 51298, 51298, 490, 264, 732, 16579, 11, 293, 550, 291, 1029, 264, 1185, 281, 13799, 13, 51484, 51484, 400, 264, 5585, 551, 307, 300, 570, 512, 295, 264, 2283, 300, 366, 7261, 490, 264, 5522, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.15749066285412722, "compression_ratio": 1.696, "no_speech_prob": 5.4211445785767864e-06}, {"id": 268, "seek": 93908, "start": 944.8000000000001, "end": 950.0, "text": " There's a group, two students at Facebook in Paris who have used this for training a", "tokens": [50364, 5633, 11, 702, 6218, 17784, 11, 13430, 11, 1168, 13430, 11, 291, 458, 11, 2035, 13, 50650, 50650, 821, 311, 257, 1594, 11, 732, 1731, 412, 4384, 294, 8380, 567, 362, 1143, 341, 337, 3097, 257, 50910, 50910, 35223, 13, 50960, 50960, 407, 291, 976, 257, 8174, 294, 3669, 293, 257, 8174, 294, 5522, 11, 291, 4159, 819, 2283, 16979, 51298, 51298, 490, 264, 732, 16579, 11, 293, 550, 291, 1029, 264, 1185, 281, 13799, 13, 51484, 51484, 400, 264, 5585, 551, 307, 300, 570, 512, 295, 264, 2283, 300, 366, 7261, 490, 264, 5522, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.15749066285412722, "compression_ratio": 1.696, "no_speech_prob": 5.4211445785767864e-06}, {"id": 269, "seek": 93908, "start": 950.0, "end": 951.0, "text": " translator.", "tokens": [50364, 5633, 11, 702, 6218, 17784, 11, 13430, 11, 1168, 13430, 11, 291, 458, 11, 2035, 13, 50650, 50650, 821, 311, 257, 1594, 11, 732, 1731, 412, 4384, 294, 8380, 567, 362, 1143, 341, 337, 3097, 257, 50910, 50910, 35223, 13, 50960, 50960, 407, 291, 976, 257, 8174, 294, 3669, 293, 257, 8174, 294, 5522, 11, 291, 4159, 819, 2283, 16979, 51298, 51298, 490, 264, 732, 16579, 11, 293, 550, 291, 1029, 264, 1185, 281, 13799, 13, 51484, 51484, 400, 264, 5585, 551, 307, 300, 570, 512, 295, 264, 2283, 300, 366, 7261, 490, 264, 5522, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.15749066285412722, "compression_ratio": 1.696, "no_speech_prob": 5.4211445785767864e-06}, {"id": 270, "seek": 93908, "start": 951.0, "end": 957.76, "text": " So you give a sentence in English and a sentence in French, you remove different words randomly", "tokens": [50364, 5633, 11, 702, 6218, 17784, 11, 13430, 11, 1168, 13430, 11, 291, 458, 11, 2035, 13, 50650, 50650, 821, 311, 257, 1594, 11, 732, 1731, 412, 4384, 294, 8380, 567, 362, 1143, 341, 337, 3097, 257, 50910, 50910, 35223, 13, 50960, 50960, 407, 291, 976, 257, 8174, 294, 3669, 293, 257, 8174, 294, 5522, 11, 291, 4159, 819, 2283, 16979, 51298, 51298, 490, 264, 732, 16579, 11, 293, 550, 291, 1029, 264, 1185, 281, 13799, 13, 51484, 51484, 400, 264, 5585, 551, 307, 300, 570, 512, 295, 264, 2283, 300, 366, 7261, 490, 264, 5522, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.15749066285412722, "compression_ratio": 1.696, "no_speech_prob": 5.4211445785767864e-06}, {"id": 271, "seek": 93908, "start": 957.76, "end": 961.48, "text": " from the two sentences, and then you ask the system to translate.", "tokens": [50364, 5633, 11, 702, 6218, 17784, 11, 13430, 11, 1168, 13430, 11, 291, 458, 11, 2035, 13, 50650, 50650, 821, 311, 257, 1594, 11, 732, 1731, 412, 4384, 294, 8380, 567, 362, 1143, 341, 337, 3097, 257, 50910, 50910, 35223, 13, 50960, 50960, 407, 291, 976, 257, 8174, 294, 3669, 293, 257, 8174, 294, 5522, 11, 291, 4159, 819, 2283, 16979, 51298, 51298, 490, 264, 732, 16579, 11, 293, 550, 291, 1029, 264, 1185, 281, 13799, 13, 51484, 51484, 400, 264, 5585, 551, 307, 300, 570, 512, 295, 264, 2283, 300, 366, 7261, 490, 264, 5522, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.15749066285412722, "compression_ratio": 1.696, "no_speech_prob": 5.4211445785767864e-06}, {"id": 272, "seek": 93908, "start": 961.48, "end": 965.1600000000001, "text": " And the magic thing is that because some of the words that are removed from the French", "tokens": [50364, 5633, 11, 702, 6218, 17784, 11, 13430, 11, 1168, 13430, 11, 291, 458, 11, 2035, 13, 50650, 50650, 821, 311, 257, 1594, 11, 732, 1731, 412, 4384, 294, 8380, 567, 362, 1143, 341, 337, 3097, 257, 50910, 50910, 35223, 13, 50960, 50960, 407, 291, 976, 257, 8174, 294, 3669, 293, 257, 8174, 294, 5522, 11, 291, 4159, 819, 2283, 16979, 51298, 51298, 490, 264, 732, 16579, 11, 293, 550, 291, 1029, 264, 1185, 281, 13799, 13, 51484, 51484, 400, 264, 5585, 551, 307, 300, 570, 512, 295, 264, 2283, 300, 366, 7261, 490, 264, 5522, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.15749066285412722, "compression_ratio": 1.696, "no_speech_prob": 5.4211445785767864e-06}, {"id": 273, "seek": 96516, "start": 965.16, "end": 969.4, "text": " version are present in the English version, it learns to produce a representation that", "tokens": [50364, 3037, 366, 1974, 294, 264, 3669, 3037, 11, 309, 27152, 281, 5258, 257, 10290, 300, 50576, 50576, 307, 6695, 295, 2856, 13, 50626, 50626, 400, 370, 437, 291, 483, 294, 264, 917, 307, 257, 3620, 10290, 300, 1985, 337, 3669, 293, 50944, 50944, 5522, 13, 50994, 50994, 400, 291, 362, 732, 2058, 378, 433, 11, 472, 337, 3669, 11, 472, 337, 5522, 13, 51094, 51094, 3329, 575, 257, 3037, 295, 341, 300, 575, 11, 291, 458, 11, 2319, 8650, 13, 51280, 51280, 4384, 586, 575, 257, 3037, 295, 341, 300, 575, 257, 1916, 3262, 8650, 13, 51452, 51452, 3950, 366, 5994, 9590, 13, 51502, 51502, 440, 6792, 11, 3880, 2306, 366, 10688, 295, 17375, 295, 9834, 13, 51686, 51686, 467, 311, 445, 41358, 2416, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.18104429023210392, "compression_ratio": 1.8612099644128113, "no_speech_prob": 6.960494829399977e-06}, {"id": 274, "seek": 96516, "start": 969.4, "end": 970.4, "text": " is independent of language.", "tokens": [50364, 3037, 366, 1974, 294, 264, 3669, 3037, 11, 309, 27152, 281, 5258, 257, 10290, 300, 50576, 50576, 307, 6695, 295, 2856, 13, 50626, 50626, 400, 370, 437, 291, 483, 294, 264, 917, 307, 257, 3620, 10290, 300, 1985, 337, 3669, 293, 50944, 50944, 5522, 13, 50994, 50994, 400, 291, 362, 732, 2058, 378, 433, 11, 472, 337, 3669, 11, 472, 337, 5522, 13, 51094, 51094, 3329, 575, 257, 3037, 295, 341, 300, 575, 11, 291, 458, 11, 2319, 8650, 13, 51280, 51280, 4384, 586, 575, 257, 3037, 295, 341, 300, 575, 257, 1916, 3262, 8650, 13, 51452, 51452, 3950, 366, 5994, 9590, 13, 51502, 51502, 440, 6792, 11, 3880, 2306, 366, 10688, 295, 17375, 295, 9834, 13, 51686, 51686, 467, 311, 445, 41358, 2416, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.18104429023210392, "compression_ratio": 1.8612099644128113, "no_speech_prob": 6.960494829399977e-06}, {"id": 275, "seek": 96516, "start": 970.4, "end": 976.76, "text": " And so what you get in the end is a meaning representation that works for English and", "tokens": [50364, 3037, 366, 1974, 294, 264, 3669, 3037, 11, 309, 27152, 281, 5258, 257, 10290, 300, 50576, 50576, 307, 6695, 295, 2856, 13, 50626, 50626, 400, 370, 437, 291, 483, 294, 264, 917, 307, 257, 3620, 10290, 300, 1985, 337, 3669, 293, 50944, 50944, 5522, 13, 50994, 50994, 400, 291, 362, 732, 2058, 378, 433, 11, 472, 337, 3669, 11, 472, 337, 5522, 13, 51094, 51094, 3329, 575, 257, 3037, 295, 341, 300, 575, 11, 291, 458, 11, 2319, 8650, 13, 51280, 51280, 4384, 586, 575, 257, 3037, 295, 341, 300, 575, 257, 1916, 3262, 8650, 13, 51452, 51452, 3950, 366, 5994, 9590, 13, 51502, 51502, 440, 6792, 11, 3880, 2306, 366, 10688, 295, 17375, 295, 9834, 13, 51686, 51686, 467, 311, 445, 41358, 2416, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.18104429023210392, "compression_ratio": 1.8612099644128113, "no_speech_prob": 6.960494829399977e-06}, {"id": 276, "seek": 96516, "start": 976.76, "end": 977.76, "text": " French.", "tokens": [50364, 3037, 366, 1974, 294, 264, 3669, 3037, 11, 309, 27152, 281, 5258, 257, 10290, 300, 50576, 50576, 307, 6695, 295, 2856, 13, 50626, 50626, 400, 370, 437, 291, 483, 294, 264, 917, 307, 257, 3620, 10290, 300, 1985, 337, 3669, 293, 50944, 50944, 5522, 13, 50994, 50994, 400, 291, 362, 732, 2058, 378, 433, 11, 472, 337, 3669, 11, 472, 337, 5522, 13, 51094, 51094, 3329, 575, 257, 3037, 295, 341, 300, 575, 11, 291, 458, 11, 2319, 8650, 13, 51280, 51280, 4384, 586, 575, 257, 3037, 295, 341, 300, 575, 257, 1916, 3262, 8650, 13, 51452, 51452, 3950, 366, 5994, 9590, 13, 51502, 51502, 440, 6792, 11, 3880, 2306, 366, 10688, 295, 17375, 295, 9834, 13, 51686, 51686, 467, 311, 445, 41358, 2416, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.18104429023210392, "compression_ratio": 1.8612099644128113, "no_speech_prob": 6.960494829399977e-06}, {"id": 277, "seek": 96516, "start": 977.76, "end": 979.76, "text": " And you have two encoders, one for English, one for French.", "tokens": [50364, 3037, 366, 1974, 294, 264, 3669, 3037, 11, 309, 27152, 281, 5258, 257, 10290, 300, 50576, 50576, 307, 6695, 295, 2856, 13, 50626, 50626, 400, 370, 437, 291, 483, 294, 264, 917, 307, 257, 3620, 10290, 300, 1985, 337, 3669, 293, 50944, 50944, 5522, 13, 50994, 50994, 400, 291, 362, 732, 2058, 378, 433, 11, 472, 337, 3669, 11, 472, 337, 5522, 13, 51094, 51094, 3329, 575, 257, 3037, 295, 341, 300, 575, 11, 291, 458, 11, 2319, 8650, 13, 51280, 51280, 4384, 586, 575, 257, 3037, 295, 341, 300, 575, 257, 1916, 3262, 8650, 13, 51452, 51452, 3950, 366, 5994, 9590, 13, 51502, 51502, 440, 6792, 11, 3880, 2306, 366, 10688, 295, 17375, 295, 9834, 13, 51686, 51686, 467, 311, 445, 41358, 2416, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.18104429023210392, "compression_ratio": 1.8612099644128113, "no_speech_prob": 6.960494829399977e-06}, {"id": 278, "seek": 96516, "start": 979.76, "end": 983.48, "text": " Google has a version of this that has, you know, 100 languages.", "tokens": [50364, 3037, 366, 1974, 294, 264, 3669, 3037, 11, 309, 27152, 281, 5258, 257, 10290, 300, 50576, 50576, 307, 6695, 295, 2856, 13, 50626, 50626, 400, 370, 437, 291, 483, 294, 264, 917, 307, 257, 3620, 10290, 300, 1985, 337, 3669, 293, 50944, 50944, 5522, 13, 50994, 50994, 400, 291, 362, 732, 2058, 378, 433, 11, 472, 337, 3669, 11, 472, 337, 5522, 13, 51094, 51094, 3329, 575, 257, 3037, 295, 341, 300, 575, 11, 291, 458, 11, 2319, 8650, 13, 51280, 51280, 4384, 586, 575, 257, 3037, 295, 341, 300, 575, 257, 1916, 3262, 8650, 13, 51452, 51452, 3950, 366, 5994, 9590, 13, 51502, 51502, 440, 6792, 11, 3880, 2306, 366, 10688, 295, 17375, 295, 9834, 13, 51686, 51686, 467, 311, 445, 41358, 2416, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.18104429023210392, "compression_ratio": 1.8612099644128113, "no_speech_prob": 6.960494829399977e-06}, {"id": 279, "seek": 96516, "start": 983.48, "end": 986.92, "text": " Facebook now has a version of this that has a couple hundred languages.", "tokens": [50364, 3037, 366, 1974, 294, 264, 3669, 3037, 11, 309, 27152, 281, 5258, 257, 10290, 300, 50576, 50576, 307, 6695, 295, 2856, 13, 50626, 50626, 400, 370, 437, 291, 483, 294, 264, 917, 307, 257, 3620, 10290, 300, 1985, 337, 3669, 293, 50944, 50944, 5522, 13, 50994, 50994, 400, 291, 362, 732, 2058, 378, 433, 11, 472, 337, 3669, 11, 472, 337, 5522, 13, 51094, 51094, 3329, 575, 257, 3037, 295, 341, 300, 575, 11, 291, 458, 11, 2319, 8650, 13, 51280, 51280, 4384, 586, 575, 257, 3037, 295, 341, 300, 575, 257, 1916, 3262, 8650, 13, 51452, 51452, 3950, 366, 5994, 9590, 13, 51502, 51502, 440, 6792, 11, 3880, 2306, 366, 10688, 295, 17375, 295, 9834, 13, 51686, 51686, 467, 311, 445, 41358, 2416, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.18104429023210392, "compression_ratio": 1.8612099644128113, "no_speech_prob": 6.960494829399977e-06}, {"id": 280, "seek": 96516, "start": 986.92, "end": 987.92, "text": " Those are massive networks.", "tokens": [50364, 3037, 366, 1974, 294, 264, 3669, 3037, 11, 309, 27152, 281, 5258, 257, 10290, 300, 50576, 50576, 307, 6695, 295, 2856, 13, 50626, 50626, 400, 370, 437, 291, 483, 294, 264, 917, 307, 257, 3620, 10290, 300, 1985, 337, 3669, 293, 50944, 50944, 5522, 13, 50994, 50994, 400, 291, 362, 732, 2058, 378, 433, 11, 472, 337, 3669, 11, 472, 337, 5522, 13, 51094, 51094, 3329, 575, 257, 3037, 295, 341, 300, 575, 11, 291, 458, 11, 2319, 8650, 13, 51280, 51280, 4384, 586, 575, 257, 3037, 295, 341, 300, 575, 257, 1916, 3262, 8650, 13, 51452, 51452, 3950, 366, 5994, 9590, 13, 51502, 51502, 440, 6792, 11, 3880, 2306, 366, 10688, 295, 17375, 295, 9834, 13, 51686, 51686, 467, 311, 445, 41358, 2416, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.18104429023210392, "compression_ratio": 1.8612099644128113, "no_speech_prob": 6.960494829399977e-06}, {"id": 281, "seek": 96516, "start": 987.92, "end": 991.6, "text": " The latest, biggest ones are tens of billions of parameters.", "tokens": [50364, 3037, 366, 1974, 294, 264, 3669, 3037, 11, 309, 27152, 281, 5258, 257, 10290, 300, 50576, 50576, 307, 6695, 295, 2856, 13, 50626, 50626, 400, 370, 437, 291, 483, 294, 264, 917, 307, 257, 3620, 10290, 300, 1985, 337, 3669, 293, 50944, 50944, 5522, 13, 50994, 50994, 400, 291, 362, 732, 2058, 378, 433, 11, 472, 337, 3669, 11, 472, 337, 5522, 13, 51094, 51094, 3329, 575, 257, 3037, 295, 341, 300, 575, 11, 291, 458, 11, 2319, 8650, 13, 51280, 51280, 4384, 586, 575, 257, 3037, 295, 341, 300, 575, 257, 1916, 3262, 8650, 13, 51452, 51452, 3950, 366, 5994, 9590, 13, 51502, 51502, 440, 6792, 11, 3880, 2306, 366, 10688, 295, 17375, 295, 9834, 13, 51686, 51686, 467, 311, 445, 41358, 2416, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.18104429023210392, "compression_ratio": 1.8612099644128113, "no_speech_prob": 6.960494829399977e-06}, {"id": 282, "seek": 96516, "start": 991.6, "end": 992.6, "text": " It's just ridiculously large.", "tokens": [50364, 3037, 366, 1974, 294, 264, 3669, 3037, 11, 309, 27152, 281, 5258, 257, 10290, 300, 50576, 50576, 307, 6695, 295, 2856, 13, 50626, 50626, 400, 370, 437, 291, 483, 294, 264, 917, 307, 257, 3620, 10290, 300, 1985, 337, 3669, 293, 50944, 50944, 5522, 13, 50994, 50994, 400, 291, 362, 732, 2058, 378, 433, 11, 472, 337, 3669, 11, 472, 337, 5522, 13, 51094, 51094, 3329, 575, 257, 3037, 295, 341, 300, 575, 11, 291, 458, 11, 2319, 8650, 13, 51280, 51280, 4384, 586, 575, 257, 3037, 295, 341, 300, 575, 257, 1916, 3262, 8650, 13, 51452, 51452, 3950, 366, 5994, 9590, 13, 51502, 51502, 440, 6792, 11, 3880, 2306, 366, 10688, 295, 17375, 295, 9834, 13, 51686, 51686, 467, 311, 445, 41358, 2416, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.18104429023210392, "compression_ratio": 1.8612099644128113, "no_speech_prob": 6.960494829399977e-06}, {"id": 283, "seek": 99260, "start": 992.6, "end": 996.48, "text": " If you're imaging, it looks like inpainting on steroids.", "tokens": [50364, 759, 291, 434, 25036, 11, 309, 1542, 411, 294, 79, 491, 783, 322, 45717, 13, 50558, 50558, 865, 11, 309, 311, 294, 79, 491, 783, 322, 45717, 11, 2293, 13, 50658, 50658, 865, 11, 370, 466, 264, 5267, 11, 307, 309, 300, 264, 19261, 11, 370, 309, 311, 264, 1378, 4728, 11, 264, 19261, 51008, 51008, 14056, 1088, 366, 957, 938, 12, 7039, 11, 420, 2035, 11, 420, 307, 309, 568, 35, 3877, 1871, 412, 439, 30, 51322, 51322, 865, 11, 309, 775, 13, 51372, 51372, 407, 570, 291, 393, 380, 1888, 18668, 6695, 295, 1184, 661, 13, 51510, 51510, 407, 341, 307, 257, 4282, 300, 14895, 44, 471, 575, 10348, 11, 498, 291, 434, 257, 5819, 2183, 39966, 295, 13719, 293, 14895, 44, 471, 11, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.4465642782358023, "compression_ratio": 1.72265625, "no_speech_prob": 5.821963713970035e-05}, {"id": 284, "seek": 99260, "start": 996.48, "end": 998.48, "text": " Yeah, it's inpainting on steroids, exactly.", "tokens": [50364, 759, 291, 434, 25036, 11, 309, 1542, 411, 294, 79, 491, 783, 322, 45717, 13, 50558, 50558, 865, 11, 309, 311, 294, 79, 491, 783, 322, 45717, 11, 2293, 13, 50658, 50658, 865, 11, 370, 466, 264, 5267, 11, 307, 309, 300, 264, 19261, 11, 370, 309, 311, 264, 1378, 4728, 11, 264, 19261, 51008, 51008, 14056, 1088, 366, 957, 938, 12, 7039, 11, 420, 2035, 11, 420, 307, 309, 568, 35, 3877, 1871, 412, 439, 30, 51322, 51322, 865, 11, 309, 775, 13, 51372, 51372, 407, 570, 291, 393, 380, 1888, 18668, 6695, 295, 1184, 661, 13, 51510, 51510, 407, 341, 307, 257, 4282, 300, 14895, 44, 471, 575, 10348, 11, 498, 291, 434, 257, 5819, 2183, 39966, 295, 13719, 293, 14895, 44, 471, 11, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.4465642782358023, "compression_ratio": 1.72265625, "no_speech_prob": 5.821963713970035e-05}, {"id": 285, "seek": 99260, "start": 998.48, "end": 1005.48, "text": " Yeah, so about the images, is it that the pixel, so it's the head eventually, the pixel", "tokens": [50364, 759, 291, 434, 25036, 11, 309, 1542, 411, 294, 79, 491, 783, 322, 45717, 13, 50558, 50558, 865, 11, 309, 311, 294, 79, 491, 783, 322, 45717, 11, 2293, 13, 50658, 50658, 865, 11, 370, 466, 264, 5267, 11, 307, 309, 300, 264, 19261, 11, 370, 309, 311, 264, 1378, 4728, 11, 264, 19261, 51008, 51008, 14056, 1088, 366, 957, 938, 12, 7039, 11, 420, 2035, 11, 420, 307, 309, 568, 35, 3877, 1871, 412, 439, 30, 51322, 51322, 865, 11, 309, 775, 13, 51372, 51372, 407, 570, 291, 393, 380, 1888, 18668, 6695, 295, 1184, 661, 13, 51510, 51510, 407, 341, 307, 257, 4282, 300, 14895, 44, 471, 575, 10348, 11, 498, 291, 434, 257, 5819, 2183, 39966, 295, 13719, 293, 14895, 44, 471, 11, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.4465642782358023, "compression_ratio": 1.72265625, "no_speech_prob": 5.821963713970035e-05}, {"id": 286, "seek": 99260, "start": 1005.48, "end": 1011.76, "text": " intensities are real long-term, or whatever, or is it 2D structure matter at all?", "tokens": [50364, 759, 291, 434, 25036, 11, 309, 1542, 411, 294, 79, 491, 783, 322, 45717, 13, 50558, 50558, 865, 11, 309, 311, 294, 79, 491, 783, 322, 45717, 11, 2293, 13, 50658, 50658, 865, 11, 370, 466, 264, 5267, 11, 307, 309, 300, 264, 19261, 11, 370, 309, 311, 264, 1378, 4728, 11, 264, 19261, 51008, 51008, 14056, 1088, 366, 957, 938, 12, 7039, 11, 420, 2035, 11, 420, 307, 309, 568, 35, 3877, 1871, 412, 439, 30, 51322, 51322, 865, 11, 309, 775, 13, 51372, 51372, 407, 570, 291, 393, 380, 1888, 18668, 6695, 295, 1184, 661, 13, 51510, 51510, 407, 341, 307, 257, 4282, 300, 14895, 44, 471, 575, 10348, 11, 498, 291, 434, 257, 5819, 2183, 39966, 295, 13719, 293, 14895, 44, 471, 11, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.4465642782358023, "compression_ratio": 1.72265625, "no_speech_prob": 5.821963713970035e-05}, {"id": 287, "seek": 99260, "start": 1011.76, "end": 1012.76, "text": " Yeah, it does.", "tokens": [50364, 759, 291, 434, 25036, 11, 309, 1542, 411, 294, 79, 491, 783, 322, 45717, 13, 50558, 50558, 865, 11, 309, 311, 294, 79, 491, 783, 322, 45717, 11, 2293, 13, 50658, 50658, 865, 11, 370, 466, 264, 5267, 11, 307, 309, 300, 264, 19261, 11, 370, 309, 311, 264, 1378, 4728, 11, 264, 19261, 51008, 51008, 14056, 1088, 366, 957, 938, 12, 7039, 11, 420, 2035, 11, 420, 307, 309, 568, 35, 3877, 1871, 412, 439, 30, 51322, 51322, 865, 11, 309, 775, 13, 51372, 51372, 407, 570, 291, 393, 380, 1888, 18668, 6695, 295, 1184, 661, 13, 51510, 51510, 407, 341, 307, 257, 4282, 300, 14895, 44, 471, 575, 10348, 11, 498, 291, 434, 257, 5819, 2183, 39966, 295, 13719, 293, 14895, 44, 471, 11, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.4465642782358023, "compression_ratio": 1.72265625, "no_speech_prob": 5.821963713970035e-05}, {"id": 288, "seek": 99260, "start": 1012.76, "end": 1015.52, "text": " So because you can't pick pixels independent of each other.", "tokens": [50364, 759, 291, 434, 25036, 11, 309, 1542, 411, 294, 79, 491, 783, 322, 45717, 13, 50558, 50558, 865, 11, 309, 311, 294, 79, 491, 783, 322, 45717, 11, 2293, 13, 50658, 50658, 865, 11, 370, 466, 264, 5267, 11, 307, 309, 300, 264, 19261, 11, 370, 309, 311, 264, 1378, 4728, 11, 264, 19261, 51008, 51008, 14056, 1088, 366, 957, 938, 12, 7039, 11, 420, 2035, 11, 420, 307, 309, 568, 35, 3877, 1871, 412, 439, 30, 51322, 51322, 865, 11, 309, 775, 13, 51372, 51372, 407, 570, 291, 393, 380, 1888, 18668, 6695, 295, 1184, 661, 13, 51510, 51510, 407, 341, 307, 257, 4282, 300, 14895, 44, 471, 575, 10348, 11, 498, 291, 434, 257, 5819, 2183, 39966, 295, 13719, 293, 14895, 44, 471, 11, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.4465642782358023, "compression_ratio": 1.72265625, "no_speech_prob": 5.821963713970035e-05}, {"id": 289, "seek": 99260, "start": 1015.52, "end": 1019.52, "text": " So this is a trick that DeepMind has proposed, if you're a former postdoc of Mind and DeepMind,", "tokens": [50364, 759, 291, 434, 25036, 11, 309, 1542, 411, 294, 79, 491, 783, 322, 45717, 13, 50558, 50558, 865, 11, 309, 311, 294, 79, 491, 783, 322, 45717, 11, 2293, 13, 50658, 50658, 865, 11, 370, 466, 264, 5267, 11, 307, 309, 300, 264, 19261, 11, 370, 309, 311, 264, 1378, 4728, 11, 264, 19261, 51008, 51008, 14056, 1088, 366, 957, 938, 12, 7039, 11, 420, 2035, 11, 420, 307, 309, 568, 35, 3877, 1871, 412, 439, 30, 51322, 51322, 865, 11, 309, 775, 13, 51372, 51372, 407, 570, 291, 393, 380, 1888, 18668, 6695, 295, 1184, 661, 13, 51510, 51510, 407, 341, 307, 257, 4282, 300, 14895, 44, 471, 575, 10348, 11, 498, 291, 434, 257, 5819, 2183, 39966, 295, 13719, 293, 14895, 44, 471, 11, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.4465642782358023, "compression_ratio": 1.72265625, "no_speech_prob": 5.821963713970035e-05}, {"id": 290, "seek": 101952, "start": 1019.52, "end": 1024.28, "text": " Carl Greger, which is you make the prediction of pixels sequential and you turn it into", "tokens": [50364, 14256, 14986, 1321, 11, 597, 307, 291, 652, 264, 17630, 295, 18668, 42881, 293, 291, 1261, 309, 666, 50602, 50602, 257, 21538, 1154, 337, 264, 869, 4373, 689, 309, 311, 11, 291, 458, 11, 472, 3654, 38882, 13, 50922, 50922, 467, 445, 16750, 385, 382, 2085, 13, 51010, 51010, 509, 458, 11, 309, 733, 295, 1985, 17600, 731, 11, 457, 291, 458, 11, 309, 393, 312, 264, 9705, 1867, 13, 51226, 51226, 407, 341, 307, 1333, 295, 2731, 11, 291, 500, 380, 519, 321, 603, 362, 309, 30, 51432, 51432, 883, 13, 51482, 51482, 286, 519, 321, 603, 915, 746, 1101, 13, 51532, 51532, 1119, 341, 3209, 4476, 2539, 37164, 20250, 420, 307, 309, 2390, 493, 47982, 51738, 51738, 10392, 30, 51788, 51788, 2102, 3255, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.26226031963641827, "compression_ratio": 1.5974025974025974, "no_speech_prob": 2.6677309506339952e-05}, {"id": 291, "seek": 101952, "start": 1024.28, "end": 1030.68, "text": " a classification problem for the great scale where it's, you know, one among 256.", "tokens": [50364, 14256, 14986, 1321, 11, 597, 307, 291, 652, 264, 17630, 295, 18668, 42881, 293, 291, 1261, 309, 666, 50602, 50602, 257, 21538, 1154, 337, 264, 869, 4373, 689, 309, 311, 11, 291, 458, 11, 472, 3654, 38882, 13, 50922, 50922, 467, 445, 16750, 385, 382, 2085, 13, 51010, 51010, 509, 458, 11, 309, 733, 295, 1985, 17600, 731, 11, 457, 291, 458, 11, 309, 393, 312, 264, 9705, 1867, 13, 51226, 51226, 407, 341, 307, 1333, 295, 2731, 11, 291, 500, 380, 519, 321, 603, 362, 309, 30, 51432, 51432, 883, 13, 51482, 51482, 286, 519, 321, 603, 915, 746, 1101, 13, 51532, 51532, 1119, 341, 3209, 4476, 2539, 37164, 20250, 420, 307, 309, 2390, 493, 47982, 51738, 51738, 10392, 30, 51788, 51788, 2102, 3255, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.26226031963641827, "compression_ratio": 1.5974025974025974, "no_speech_prob": 2.6677309506339952e-05}, {"id": 292, "seek": 101952, "start": 1030.68, "end": 1032.44, "text": " It just strikes me as wrong.", "tokens": [50364, 14256, 14986, 1321, 11, 597, 307, 291, 652, 264, 17630, 295, 18668, 42881, 293, 291, 1261, 309, 666, 50602, 50602, 257, 21538, 1154, 337, 264, 869, 4373, 689, 309, 311, 11, 291, 458, 11, 472, 3654, 38882, 13, 50922, 50922, 467, 445, 16750, 385, 382, 2085, 13, 51010, 51010, 509, 458, 11, 309, 733, 295, 1985, 17600, 731, 11, 457, 291, 458, 11, 309, 393, 312, 264, 9705, 1867, 13, 51226, 51226, 407, 341, 307, 1333, 295, 2731, 11, 291, 500, 380, 519, 321, 603, 362, 309, 30, 51432, 51432, 883, 13, 51482, 51482, 286, 519, 321, 603, 915, 746, 1101, 13, 51532, 51532, 1119, 341, 3209, 4476, 2539, 37164, 20250, 420, 307, 309, 2390, 493, 47982, 51738, 51738, 10392, 30, 51788, 51788, 2102, 3255, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.26226031963641827, "compression_ratio": 1.5974025974025974, "no_speech_prob": 2.6677309506339952e-05}, {"id": 293, "seek": 101952, "start": 1032.44, "end": 1036.76, "text": " You know, it kind of works surprisingly well, but you know, it can be the ultimate answer.", "tokens": [50364, 14256, 14986, 1321, 11, 597, 307, 291, 652, 264, 17630, 295, 18668, 42881, 293, 291, 1261, 309, 666, 50602, 50602, 257, 21538, 1154, 337, 264, 869, 4373, 689, 309, 311, 11, 291, 458, 11, 472, 3654, 38882, 13, 50922, 50922, 467, 445, 16750, 385, 382, 2085, 13, 51010, 51010, 509, 458, 11, 309, 733, 295, 1985, 17600, 731, 11, 457, 291, 458, 11, 309, 393, 312, 264, 9705, 1867, 13, 51226, 51226, 407, 341, 307, 1333, 295, 2731, 11, 291, 500, 380, 519, 321, 603, 362, 309, 30, 51432, 51432, 883, 13, 51482, 51482, 286, 519, 321, 603, 915, 746, 1101, 13, 51532, 51532, 1119, 341, 3209, 4476, 2539, 37164, 20250, 420, 307, 309, 2390, 493, 47982, 51738, 51738, 10392, 30, 51788, 51788, 2102, 3255, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.26226031963641827, "compression_ratio": 1.5974025974025974, "no_speech_prob": 2.6677309506339952e-05}, {"id": 294, "seek": 101952, "start": 1036.76, "end": 1040.8799999999999, "text": " So this is sort of lost, you don't think we'll have it?", "tokens": [50364, 14256, 14986, 1321, 11, 597, 307, 291, 652, 264, 17630, 295, 18668, 42881, 293, 291, 1261, 309, 666, 50602, 50602, 257, 21538, 1154, 337, 264, 869, 4373, 689, 309, 311, 11, 291, 458, 11, 472, 3654, 38882, 13, 50922, 50922, 467, 445, 16750, 385, 382, 2085, 13, 51010, 51010, 509, 458, 11, 309, 733, 295, 1985, 17600, 731, 11, 457, 291, 458, 11, 309, 393, 312, 264, 9705, 1867, 13, 51226, 51226, 407, 341, 307, 1333, 295, 2731, 11, 291, 500, 380, 519, 321, 603, 362, 309, 30, 51432, 51432, 883, 13, 51482, 51482, 286, 519, 321, 603, 915, 746, 1101, 13, 51532, 51532, 1119, 341, 3209, 4476, 2539, 37164, 20250, 420, 307, 309, 2390, 493, 47982, 51738, 51738, 10392, 30, 51788, 51788, 2102, 3255, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.26226031963641827, "compression_ratio": 1.5974025974025974, "no_speech_prob": 2.6677309506339952e-05}, {"id": 295, "seek": 101952, "start": 1040.8799999999999, "end": 1041.8799999999999, "text": " No.", "tokens": [50364, 14256, 14986, 1321, 11, 597, 307, 291, 652, 264, 17630, 295, 18668, 42881, 293, 291, 1261, 309, 666, 50602, 50602, 257, 21538, 1154, 337, 264, 869, 4373, 689, 309, 311, 11, 291, 458, 11, 472, 3654, 38882, 13, 50922, 50922, 467, 445, 16750, 385, 382, 2085, 13, 51010, 51010, 509, 458, 11, 309, 733, 295, 1985, 17600, 731, 11, 457, 291, 458, 11, 309, 393, 312, 264, 9705, 1867, 13, 51226, 51226, 407, 341, 307, 1333, 295, 2731, 11, 291, 500, 380, 519, 321, 603, 362, 309, 30, 51432, 51432, 883, 13, 51482, 51482, 286, 519, 321, 603, 915, 746, 1101, 13, 51532, 51532, 1119, 341, 3209, 4476, 2539, 37164, 20250, 420, 307, 309, 2390, 493, 47982, 51738, 51738, 10392, 30, 51788, 51788, 2102, 3255, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.26226031963641827, "compression_ratio": 1.5974025974025974, "no_speech_prob": 2.6677309506339952e-05}, {"id": 296, "seek": 101952, "start": 1041.8799999999999, "end": 1042.8799999999999, "text": " I think we'll find something better.", "tokens": [50364, 14256, 14986, 1321, 11, 597, 307, 291, 652, 264, 17630, 295, 18668, 42881, 293, 291, 1261, 309, 666, 50602, 50602, 257, 21538, 1154, 337, 264, 869, 4373, 689, 309, 311, 11, 291, 458, 11, 472, 3654, 38882, 13, 50922, 50922, 467, 445, 16750, 385, 382, 2085, 13, 51010, 51010, 509, 458, 11, 309, 733, 295, 1985, 17600, 731, 11, 457, 291, 458, 11, 309, 393, 312, 264, 9705, 1867, 13, 51226, 51226, 407, 341, 307, 1333, 295, 2731, 11, 291, 500, 380, 519, 321, 603, 362, 309, 30, 51432, 51432, 883, 13, 51482, 51482, 286, 519, 321, 603, 915, 746, 1101, 13, 51532, 51532, 1119, 341, 3209, 4476, 2539, 37164, 20250, 420, 307, 309, 2390, 493, 47982, 51738, 51738, 10392, 30, 51788, 51788, 2102, 3255, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.26226031963641827, "compression_ratio": 1.5974025974025974, "no_speech_prob": 2.6677309506339952e-05}, {"id": 297, "seek": 101952, "start": 1042.8799999999999, "end": 1047.0, "text": " Is this network essentially learning verge frequencies or is it building up semantic", "tokens": [50364, 14256, 14986, 1321, 11, 597, 307, 291, 652, 264, 17630, 295, 18668, 42881, 293, 291, 1261, 309, 666, 50602, 50602, 257, 21538, 1154, 337, 264, 869, 4373, 689, 309, 311, 11, 291, 458, 11, 472, 3654, 38882, 13, 50922, 50922, 467, 445, 16750, 385, 382, 2085, 13, 51010, 51010, 509, 458, 11, 309, 733, 295, 1985, 17600, 731, 11, 457, 291, 458, 11, 309, 393, 312, 264, 9705, 1867, 13, 51226, 51226, 407, 341, 307, 1333, 295, 2731, 11, 291, 500, 380, 519, 321, 603, 362, 309, 30, 51432, 51432, 883, 13, 51482, 51482, 286, 519, 321, 603, 915, 746, 1101, 13, 51532, 51532, 1119, 341, 3209, 4476, 2539, 37164, 20250, 420, 307, 309, 2390, 493, 47982, 51738, 51738, 10392, 30, 51788, 51788, 2102, 3255, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.26226031963641827, "compression_ratio": 1.5974025974025974, "no_speech_prob": 2.6677309506339952e-05}, {"id": 298, "seek": 101952, "start": 1047.0, "end": 1048.0, "text": " concepts?", "tokens": [50364, 14256, 14986, 1321, 11, 597, 307, 291, 652, 264, 17630, 295, 18668, 42881, 293, 291, 1261, 309, 666, 50602, 50602, 257, 21538, 1154, 337, 264, 869, 4373, 689, 309, 311, 11, 291, 458, 11, 472, 3654, 38882, 13, 50922, 50922, 467, 445, 16750, 385, 382, 2085, 13, 51010, 51010, 509, 458, 11, 309, 733, 295, 1985, 17600, 731, 11, 457, 291, 458, 11, 309, 393, 312, 264, 9705, 1867, 13, 51226, 51226, 407, 341, 307, 1333, 295, 2731, 11, 291, 500, 380, 519, 321, 603, 362, 309, 30, 51432, 51432, 883, 13, 51482, 51482, 286, 519, 321, 603, 915, 746, 1101, 13, 51532, 51532, 1119, 341, 3209, 4476, 2539, 37164, 20250, 420, 307, 309, 2390, 493, 47982, 51738, 51738, 10392, 30, 51788, 51788, 2102, 3255, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.26226031963641827, "compression_ratio": 1.5974025974025974, "no_speech_prob": 2.6677309506339952e-05}, {"id": 299, "seek": 101952, "start": 1048.0, "end": 1049.0, "text": " Who knows?", "tokens": [50364, 14256, 14986, 1321, 11, 597, 307, 291, 652, 264, 17630, 295, 18668, 42881, 293, 291, 1261, 309, 666, 50602, 50602, 257, 21538, 1154, 337, 264, 869, 4373, 689, 309, 311, 11, 291, 458, 11, 472, 3654, 38882, 13, 50922, 50922, 467, 445, 16750, 385, 382, 2085, 13, 51010, 51010, 509, 458, 11, 309, 733, 295, 1985, 17600, 731, 11, 457, 291, 458, 11, 309, 393, 312, 264, 9705, 1867, 13, 51226, 51226, 407, 341, 307, 1333, 295, 2731, 11, 291, 500, 380, 519, 321, 603, 362, 309, 30, 51432, 51432, 883, 13, 51482, 51482, 286, 519, 321, 603, 915, 746, 1101, 13, 51532, 51532, 1119, 341, 3209, 4476, 2539, 37164, 20250, 420, 307, 309, 2390, 493, 47982, 51738, 51738, 10392, 30, 51788, 51788, 2102, 3255, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.26226031963641827, "compression_ratio": 1.5974025974025974, "no_speech_prob": 2.6677309506339952e-05}, {"id": 300, "seek": 104900, "start": 1049.0, "end": 1050.96, "text": " There is actually some analysis of the...", "tokens": [50364, 821, 307, 767, 512, 5215, 295, 264, 485, 50462, 50462, 865, 11, 456, 307, 13, 50512, 50512, 821, 307, 512, 5313, 466, 341, 11, 767, 13, 50582, 50582, 3432, 567, 362, 3031, 281, 2979, 437, 264, 10290, 1854, 13, 50748, 50748, 407, 6688, 2458, 773, 412, 20374, 575, 1096, 512, 589, 322, 341, 293, 702, 3683, 3935, 13, 50976, 50976, 467, 2544, 300, 729, 721, 767, 2906, 3620, 281, 512, 8396, 11, 558, 30, 51238, 51238, 467, 311, 406, 257, 2452, 3701, 295, 2487, 11, 291, 458, 11, 457, 309, 311, 20488, 570, 729, 366, 2283, 51430, 51430, 300, 366, 406, 4582, 365, 264, 957, 1002, 11, 558, 30, 51530, 51530, 286, 914, 11, 264, 551, 322, 341, 307, 2487, 13, 51634, 51634, 821, 311, 257, 955, 1168, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24265349538702713, "compression_ratio": 1.7194719471947195, "no_speech_prob": 1.4060796274861787e-05}, {"id": 301, "seek": 104900, "start": 1050.96, "end": 1051.96, "text": " Yeah, there is.", "tokens": [50364, 821, 307, 767, 512, 5215, 295, 264, 485, 50462, 50462, 865, 11, 456, 307, 13, 50512, 50512, 821, 307, 512, 5313, 466, 341, 11, 767, 13, 50582, 50582, 3432, 567, 362, 3031, 281, 2979, 437, 264, 10290, 1854, 13, 50748, 50748, 407, 6688, 2458, 773, 412, 20374, 575, 1096, 512, 589, 322, 341, 293, 702, 3683, 3935, 13, 50976, 50976, 467, 2544, 300, 729, 721, 767, 2906, 3620, 281, 512, 8396, 11, 558, 30, 51238, 51238, 467, 311, 406, 257, 2452, 3701, 295, 2487, 11, 291, 458, 11, 457, 309, 311, 20488, 570, 729, 366, 2283, 51430, 51430, 300, 366, 406, 4582, 365, 264, 957, 1002, 11, 558, 30, 51530, 51530, 286, 914, 11, 264, 551, 322, 341, 307, 2487, 13, 51634, 51634, 821, 311, 257, 955, 1168, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24265349538702713, "compression_ratio": 1.7194719471947195, "no_speech_prob": 1.4060796274861787e-05}, {"id": 302, "seek": 104900, "start": 1051.96, "end": 1053.36, "text": " There is some studies about this, actually.", "tokens": [50364, 821, 307, 767, 512, 5215, 295, 264, 485, 50462, 50462, 865, 11, 456, 307, 13, 50512, 50512, 821, 307, 512, 5313, 466, 341, 11, 767, 13, 50582, 50582, 3432, 567, 362, 3031, 281, 2979, 437, 264, 10290, 1854, 13, 50748, 50748, 407, 6688, 2458, 773, 412, 20374, 575, 1096, 512, 589, 322, 341, 293, 702, 3683, 3935, 13, 50976, 50976, 467, 2544, 300, 729, 721, 767, 2906, 3620, 281, 512, 8396, 11, 558, 30, 51238, 51238, 467, 311, 406, 257, 2452, 3701, 295, 2487, 11, 291, 458, 11, 457, 309, 311, 20488, 570, 729, 366, 2283, 51430, 51430, 300, 366, 406, 4582, 365, 264, 957, 1002, 11, 558, 30, 51530, 51530, 286, 914, 11, 264, 551, 322, 341, 307, 2487, 13, 51634, 51634, 821, 311, 257, 955, 1168, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24265349538702713, "compression_ratio": 1.7194719471947195, "no_speech_prob": 1.4060796274861787e-05}, {"id": 303, "seek": 104900, "start": 1053.36, "end": 1056.68, "text": " People who have tried to study what the representation inside.", "tokens": [50364, 821, 307, 767, 512, 5215, 295, 264, 485, 50462, 50462, 865, 11, 456, 307, 13, 50512, 50512, 821, 307, 512, 5313, 466, 341, 11, 767, 13, 50582, 50582, 3432, 567, 362, 3031, 281, 2979, 437, 264, 10290, 1854, 13, 50748, 50748, 407, 6688, 2458, 773, 412, 20374, 575, 1096, 512, 589, 322, 341, 293, 702, 3683, 3935, 13, 50976, 50976, 467, 2544, 300, 729, 721, 767, 2906, 3620, 281, 512, 8396, 11, 558, 30, 51238, 51238, 467, 311, 406, 257, 2452, 3701, 295, 2487, 11, 291, 458, 11, 457, 309, 311, 20488, 570, 729, 366, 2283, 51430, 51430, 300, 366, 406, 4582, 365, 264, 957, 1002, 11, 558, 30, 51530, 51530, 286, 914, 11, 264, 551, 322, 341, 307, 2487, 13, 51634, 51634, 821, 311, 257, 955, 1168, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24265349538702713, "compression_ratio": 1.7194719471947195, "no_speech_prob": 1.4060796274861787e-05}, {"id": 304, "seek": 104900, "start": 1056.68, "end": 1061.24, "text": " So Chris Manning at Stanford has done some work on this and his various groups.", "tokens": [50364, 821, 307, 767, 512, 5215, 295, 264, 485, 50462, 50462, 865, 11, 456, 307, 13, 50512, 50512, 821, 307, 512, 5313, 466, 341, 11, 767, 13, 50582, 50582, 3432, 567, 362, 3031, 281, 2979, 437, 264, 10290, 1854, 13, 50748, 50748, 407, 6688, 2458, 773, 412, 20374, 575, 1096, 512, 589, 322, 341, 293, 702, 3683, 3935, 13, 50976, 50976, 467, 2544, 300, 729, 721, 767, 2906, 3620, 281, 512, 8396, 11, 558, 30, 51238, 51238, 467, 311, 406, 257, 2452, 3701, 295, 2487, 11, 291, 458, 11, 457, 309, 311, 20488, 570, 729, 366, 2283, 51430, 51430, 300, 366, 406, 4582, 365, 264, 957, 1002, 11, 558, 30, 51530, 51530, 286, 914, 11, 264, 551, 322, 341, 307, 2487, 13, 51634, 51634, 821, 311, 257, 955, 1168, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24265349538702713, "compression_ratio": 1.7194719471947195, "no_speech_prob": 1.4060796274861787e-05}, {"id": 305, "seek": 104900, "start": 1061.24, "end": 1066.48, "text": " It seems that those things actually represent meaning to some extent, right?", "tokens": [50364, 821, 307, 767, 512, 5215, 295, 264, 485, 50462, 50462, 865, 11, 456, 307, 13, 50512, 50512, 821, 307, 512, 5313, 466, 341, 11, 767, 13, 50582, 50582, 3432, 567, 362, 3031, 281, 2979, 437, 264, 10290, 1854, 13, 50748, 50748, 407, 6688, 2458, 773, 412, 20374, 575, 1096, 512, 589, 322, 341, 293, 702, 3683, 3935, 13, 50976, 50976, 467, 2544, 300, 729, 721, 767, 2906, 3620, 281, 512, 8396, 11, 558, 30, 51238, 51238, 467, 311, 406, 257, 2452, 3701, 295, 2487, 11, 291, 458, 11, 457, 309, 311, 20488, 570, 729, 366, 2283, 51430, 51430, 300, 366, 406, 4582, 365, 264, 957, 1002, 11, 558, 30, 51530, 51530, 286, 914, 11, 264, 551, 322, 341, 307, 2487, 13, 51634, 51634, 821, 311, 257, 955, 1168, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24265349538702713, "compression_ratio": 1.7194719471947195, "no_speech_prob": 1.4060796274861787e-05}, {"id": 306, "seek": 104900, "start": 1066.48, "end": 1070.32, "text": " It's not a deep understanding of text, you know, but it's shallow because those are words", "tokens": [50364, 821, 307, 767, 512, 5215, 295, 264, 485, 50462, 50462, 865, 11, 456, 307, 13, 50512, 50512, 821, 307, 512, 5313, 466, 341, 11, 767, 13, 50582, 50582, 3432, 567, 362, 3031, 281, 2979, 437, 264, 10290, 1854, 13, 50748, 50748, 407, 6688, 2458, 773, 412, 20374, 575, 1096, 512, 589, 322, 341, 293, 702, 3683, 3935, 13, 50976, 50976, 467, 2544, 300, 729, 721, 767, 2906, 3620, 281, 512, 8396, 11, 558, 30, 51238, 51238, 467, 311, 406, 257, 2452, 3701, 295, 2487, 11, 291, 458, 11, 457, 309, 311, 20488, 570, 729, 366, 2283, 51430, 51430, 300, 366, 406, 4582, 365, 264, 957, 1002, 11, 558, 30, 51530, 51530, 286, 914, 11, 264, 551, 322, 341, 307, 2487, 13, 51634, 51634, 821, 311, 257, 955, 1168, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24265349538702713, "compression_ratio": 1.7194719471947195, "no_speech_prob": 1.4060796274861787e-05}, {"id": 307, "seek": 104900, "start": 1070.32, "end": 1072.32, "text": " that are not connected with the real world, right?", "tokens": [50364, 821, 307, 767, 512, 5215, 295, 264, 485, 50462, 50462, 865, 11, 456, 307, 13, 50512, 50512, 821, 307, 512, 5313, 466, 341, 11, 767, 13, 50582, 50582, 3432, 567, 362, 3031, 281, 2979, 437, 264, 10290, 1854, 13, 50748, 50748, 407, 6688, 2458, 773, 412, 20374, 575, 1096, 512, 589, 322, 341, 293, 702, 3683, 3935, 13, 50976, 50976, 467, 2544, 300, 729, 721, 767, 2906, 3620, 281, 512, 8396, 11, 558, 30, 51238, 51238, 467, 311, 406, 257, 2452, 3701, 295, 2487, 11, 291, 458, 11, 457, 309, 311, 20488, 570, 729, 366, 2283, 51430, 51430, 300, 366, 406, 4582, 365, 264, 957, 1002, 11, 558, 30, 51530, 51530, 286, 914, 11, 264, 551, 322, 341, 307, 2487, 13, 51634, 51634, 821, 311, 257, 955, 1168, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24265349538702713, "compression_ratio": 1.7194719471947195, "no_speech_prob": 1.4060796274861787e-05}, {"id": 308, "seek": 104900, "start": 1072.32, "end": 1074.4, "text": " I mean, the thing on this is text.", "tokens": [50364, 821, 307, 767, 512, 5215, 295, 264, 485, 50462, 50462, 865, 11, 456, 307, 13, 50512, 50512, 821, 307, 512, 5313, 466, 341, 11, 767, 13, 50582, 50582, 3432, 567, 362, 3031, 281, 2979, 437, 264, 10290, 1854, 13, 50748, 50748, 407, 6688, 2458, 773, 412, 20374, 575, 1096, 512, 589, 322, 341, 293, 702, 3683, 3935, 13, 50976, 50976, 467, 2544, 300, 729, 721, 767, 2906, 3620, 281, 512, 8396, 11, 558, 30, 51238, 51238, 467, 311, 406, 257, 2452, 3701, 295, 2487, 11, 291, 458, 11, 457, 309, 311, 20488, 570, 729, 366, 2283, 51430, 51430, 300, 366, 406, 4582, 365, 264, 957, 1002, 11, 558, 30, 51530, 51530, 286, 914, 11, 264, 551, 322, 341, 307, 2487, 13, 51634, 51634, 821, 311, 257, 955, 1168, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24265349538702713, "compression_ratio": 1.7194719471947195, "no_speech_prob": 1.4060796274861787e-05}, {"id": 309, "seek": 104900, "start": 1074.4, "end": 1076.28, "text": " There's a big question.", "tokens": [50364, 821, 307, 767, 512, 5215, 295, 264, 485, 50462, 50462, 865, 11, 456, 307, 13, 50512, 50512, 821, 307, 512, 5313, 466, 341, 11, 767, 13, 50582, 50582, 3432, 567, 362, 3031, 281, 2979, 437, 264, 10290, 1854, 13, 50748, 50748, 407, 6688, 2458, 773, 412, 20374, 575, 1096, 512, 589, 322, 341, 293, 702, 3683, 3935, 13, 50976, 50976, 467, 2544, 300, 729, 721, 767, 2906, 3620, 281, 512, 8396, 11, 558, 30, 51238, 51238, 467, 311, 406, 257, 2452, 3701, 295, 2487, 11, 291, 458, 11, 457, 309, 311, 20488, 570, 729, 366, 2283, 51430, 51430, 300, 366, 406, 4582, 365, 264, 957, 1002, 11, 558, 30, 51530, 51530, 286, 914, 11, 264, 551, 322, 341, 307, 2487, 13, 51634, 51634, 821, 311, 257, 955, 1168, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24265349538702713, "compression_ratio": 1.7194719471947195, "no_speech_prob": 1.4060796274861787e-05}, {"id": 310, "seek": 107628, "start": 1076.28, "end": 1082.0, "text": " So it has the linguistics community up in arms because it basically breaks the entire", "tokens": [50364, 407, 309, 575, 264, 21766, 6006, 1768, 493, 294, 5812, 570, 309, 1936, 9857, 264, 2302, 50650, 50650, 6445, 295, 411, 11, 291, 458, 11, 437, 466, 22317, 30, 50806, 50806, 708, 466, 11, 291, 458, 11, 4361, 45298, 30, 50872, 50872, 708, 466, 439, 729, 721, 30, 50972, 50972, 1119, 309, 439, 12523, 30, 51026, 51026, 509, 458, 11, 437, 466, 5986, 26475, 11, 558, 30, 51112, 51112, 3950, 721, 1936, 445, 2906, 1203, 538, 18875, 13, 51254, 51254, 814, 12240, 1203, 294, 8062, 7673, 13, 51360, 51360, 400, 370, 264, 761, 4785, 74, 2567, 294, 21766, 6006, 584, 11, 1954, 452, 1265, 11, 436, 2464, 3642, 1970, 341, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.24943401502526324, "compression_ratio": 1.76171875, "no_speech_prob": 4.424720827955753e-06}, {"id": 311, "seek": 107628, "start": 1082.0, "end": 1085.12, "text": " universe of like, you know, what about grammar?", "tokens": [50364, 407, 309, 575, 264, 21766, 6006, 1768, 493, 294, 5812, 570, 309, 1936, 9857, 264, 2302, 50650, 50650, 6445, 295, 411, 11, 291, 458, 11, 437, 466, 22317, 30, 50806, 50806, 708, 466, 11, 291, 458, 11, 4361, 45298, 30, 50872, 50872, 708, 466, 439, 729, 721, 30, 50972, 50972, 1119, 309, 439, 12523, 30, 51026, 51026, 509, 458, 11, 437, 466, 5986, 26475, 11, 558, 30, 51112, 51112, 3950, 721, 1936, 445, 2906, 1203, 538, 18875, 13, 51254, 51254, 814, 12240, 1203, 294, 8062, 7673, 13, 51360, 51360, 400, 370, 264, 761, 4785, 74, 2567, 294, 21766, 6006, 584, 11, 1954, 452, 1265, 11, 436, 2464, 3642, 1970, 341, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.24943401502526324, "compression_ratio": 1.76171875, "no_speech_prob": 4.424720827955753e-06}, {"id": 312, "seek": 107628, "start": 1085.12, "end": 1086.44, "text": " What about, you know, semantics?", "tokens": [50364, 407, 309, 575, 264, 21766, 6006, 1768, 493, 294, 5812, 570, 309, 1936, 9857, 264, 2302, 50650, 50650, 6445, 295, 411, 11, 291, 458, 11, 437, 466, 22317, 30, 50806, 50806, 708, 466, 11, 291, 458, 11, 4361, 45298, 30, 50872, 50872, 708, 466, 439, 729, 721, 30, 50972, 50972, 1119, 309, 439, 12523, 30, 51026, 51026, 509, 458, 11, 437, 466, 5986, 26475, 11, 558, 30, 51112, 51112, 3950, 721, 1936, 445, 2906, 1203, 538, 18875, 13, 51254, 51254, 814, 12240, 1203, 294, 8062, 7673, 13, 51360, 51360, 400, 370, 264, 761, 4785, 74, 2567, 294, 21766, 6006, 584, 11, 1954, 452, 1265, 11, 436, 2464, 3642, 1970, 341, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.24943401502526324, "compression_ratio": 1.76171875, "no_speech_prob": 4.424720827955753e-06}, {"id": 313, "seek": 107628, "start": 1086.44, "end": 1088.44, "text": " What about all those things?", "tokens": [50364, 407, 309, 575, 264, 21766, 6006, 1768, 493, 294, 5812, 570, 309, 1936, 9857, 264, 2302, 50650, 50650, 6445, 295, 411, 11, 291, 458, 11, 437, 466, 22317, 30, 50806, 50806, 708, 466, 11, 291, 458, 11, 4361, 45298, 30, 50872, 50872, 708, 466, 439, 729, 721, 30, 50972, 50972, 1119, 309, 439, 12523, 30, 51026, 51026, 509, 458, 11, 437, 466, 5986, 26475, 11, 558, 30, 51112, 51112, 3950, 721, 1936, 445, 2906, 1203, 538, 18875, 13, 51254, 51254, 814, 12240, 1203, 294, 8062, 7673, 13, 51360, 51360, 400, 370, 264, 761, 4785, 74, 2567, 294, 21766, 6006, 584, 11, 1954, 452, 1265, 11, 436, 2464, 3642, 1970, 341, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.24943401502526324, "compression_ratio": 1.76171875, "no_speech_prob": 4.424720827955753e-06}, {"id": 314, "seek": 107628, "start": 1088.44, "end": 1089.52, "text": " Is it all statistics?", "tokens": [50364, 407, 309, 575, 264, 21766, 6006, 1768, 493, 294, 5812, 570, 309, 1936, 9857, 264, 2302, 50650, 50650, 6445, 295, 411, 11, 291, 458, 11, 437, 466, 22317, 30, 50806, 50806, 708, 466, 11, 291, 458, 11, 4361, 45298, 30, 50872, 50872, 708, 466, 439, 729, 721, 30, 50972, 50972, 1119, 309, 439, 12523, 30, 51026, 51026, 509, 458, 11, 437, 466, 5986, 26475, 11, 558, 30, 51112, 51112, 3950, 721, 1936, 445, 2906, 1203, 538, 18875, 13, 51254, 51254, 814, 12240, 1203, 294, 8062, 7673, 13, 51360, 51360, 400, 370, 264, 761, 4785, 74, 2567, 294, 21766, 6006, 584, 11, 1954, 452, 1265, 11, 436, 2464, 3642, 1970, 341, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.24943401502526324, "compression_ratio": 1.76171875, "no_speech_prob": 4.424720827955753e-06}, {"id": 315, "seek": 107628, "start": 1089.52, "end": 1091.24, "text": " You know, what about symbol manipulation, right?", "tokens": [50364, 407, 309, 575, 264, 21766, 6006, 1768, 493, 294, 5812, 570, 309, 1936, 9857, 264, 2302, 50650, 50650, 6445, 295, 411, 11, 291, 458, 11, 437, 466, 22317, 30, 50806, 50806, 708, 466, 11, 291, 458, 11, 4361, 45298, 30, 50872, 50872, 708, 466, 439, 729, 721, 30, 50972, 50972, 1119, 309, 439, 12523, 30, 51026, 51026, 509, 458, 11, 437, 466, 5986, 26475, 11, 558, 30, 51112, 51112, 3950, 721, 1936, 445, 2906, 1203, 538, 18875, 13, 51254, 51254, 814, 12240, 1203, 294, 8062, 7673, 13, 51360, 51360, 400, 370, 264, 761, 4785, 74, 2567, 294, 21766, 6006, 584, 11, 1954, 452, 1265, 11, 436, 2464, 3642, 1970, 341, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.24943401502526324, "compression_ratio": 1.76171875, "no_speech_prob": 4.424720827955753e-06}, {"id": 316, "seek": 107628, "start": 1091.24, "end": 1094.08, "text": " Those things basically just represent everything by vectors.", "tokens": [50364, 407, 309, 575, 264, 21766, 6006, 1768, 493, 294, 5812, 570, 309, 1936, 9857, 264, 2302, 50650, 50650, 6445, 295, 411, 11, 291, 458, 11, 437, 466, 22317, 30, 50806, 50806, 708, 466, 11, 291, 458, 11, 4361, 45298, 30, 50872, 50872, 708, 466, 439, 729, 721, 30, 50972, 50972, 1119, 309, 439, 12523, 30, 51026, 51026, 509, 458, 11, 437, 466, 5986, 26475, 11, 558, 30, 51112, 51112, 3950, 721, 1936, 445, 2906, 1203, 538, 18875, 13, 51254, 51254, 814, 12240, 1203, 294, 8062, 7673, 13, 51360, 51360, 400, 370, 264, 761, 4785, 74, 2567, 294, 21766, 6006, 584, 11, 1954, 452, 1265, 11, 436, 2464, 3642, 1970, 341, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.24943401502526324, "compression_ratio": 1.76171875, "no_speech_prob": 4.424720827955753e-06}, {"id": 317, "seek": 107628, "start": 1094.08, "end": 1096.2, "text": " They embed everything in vector spaces.", "tokens": [50364, 407, 309, 575, 264, 21766, 6006, 1768, 493, 294, 5812, 570, 309, 1936, 9857, 264, 2302, 50650, 50650, 6445, 295, 411, 11, 291, 458, 11, 437, 466, 22317, 30, 50806, 50806, 708, 466, 11, 291, 458, 11, 4361, 45298, 30, 50872, 50872, 708, 466, 439, 729, 721, 30, 50972, 50972, 1119, 309, 439, 12523, 30, 51026, 51026, 509, 458, 11, 437, 466, 5986, 26475, 11, 558, 30, 51112, 51112, 3950, 721, 1936, 445, 2906, 1203, 538, 18875, 13, 51254, 51254, 814, 12240, 1203, 294, 8062, 7673, 13, 51360, 51360, 400, 370, 264, 761, 4785, 74, 2567, 294, 21766, 6006, 584, 11, 1954, 452, 1265, 11, 436, 2464, 3642, 1970, 341, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.24943401502526324, "compression_ratio": 1.76171875, "no_speech_prob": 4.424720827955753e-06}, {"id": 318, "seek": 107628, "start": 1096.2, "end": 1104.3999999999999, "text": " And so the Chomskians in linguistics say, oh my God, they write books against this.", "tokens": [50364, 407, 309, 575, 264, 21766, 6006, 1768, 493, 294, 5812, 570, 309, 1936, 9857, 264, 2302, 50650, 50650, 6445, 295, 411, 11, 291, 458, 11, 437, 466, 22317, 30, 50806, 50806, 708, 466, 11, 291, 458, 11, 4361, 45298, 30, 50872, 50872, 708, 466, 439, 729, 721, 30, 50972, 50972, 1119, 309, 439, 12523, 30, 51026, 51026, 509, 458, 11, 437, 466, 5986, 26475, 11, 558, 30, 51112, 51112, 3950, 721, 1936, 445, 2906, 1203, 538, 18875, 13, 51254, 51254, 814, 12240, 1203, 294, 8062, 7673, 13, 51360, 51360, 400, 370, 264, 761, 4785, 74, 2567, 294, 21766, 6006, 584, 11, 1954, 452, 1265, 11, 436, 2464, 3642, 1970, 341, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.24943401502526324, "compression_ratio": 1.76171875, "no_speech_prob": 4.424720827955753e-06}, {"id": 319, "seek": 110440, "start": 1104.4, "end": 1107.16, "text": " Okay.", "tokens": [50364, 1033, 13, 50502, 50502, 407, 1936, 300, 311, 264, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50626, 50626, 509, 3847, 257, 1185, 365, 1333, 295, 257, 659, 25111, 5633, 11, 597, 307, 406, 534, 257, 5633, 13, 50864, 50864, 467, 311, 445, 31565, 420, 17630, 13, 50996, 50996, 400, 382, 286, 848, 11, 309, 1985, 534, 731, 337, 2487, 293, 16944, 13, 51200, 51200, 400, 561, 764, 341, 586, 337, 411, 11, 291, 458, 11, 8272, 22978, 11, 439, 3685, 295, 1507, 13, 51348, 51348, 467, 311, 588, 777, 13, 51422, 51422, 4331, 1660, 11, 406, 370, 709, 13, 51544, 51544, 9777, 11, 406, 370, 709, 2139, 13, 51634, 51634, 43414, 6278, 11, 406, 370, 709, 2139, 13, 51698, 51698, 821, 307, 512, 3542, 11, 291, 458, 11, 300, 1333, 295, 3470, 264, 1785, 295, 264, 1523, 257, 707, 857, 11, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.21396885179493524, "compression_ratio": 1.6845637583892616, "no_speech_prob": 4.9363848120265175e-06}, {"id": 320, "seek": 110440, "start": 1107.16, "end": 1109.64, "text": " So basically that's the idea of self-supervised learning.", "tokens": [50364, 1033, 13, 50502, 50502, 407, 1936, 300, 311, 264, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50626, 50626, 509, 3847, 257, 1185, 365, 1333, 295, 257, 659, 25111, 5633, 11, 597, 307, 406, 534, 257, 5633, 13, 50864, 50864, 467, 311, 445, 31565, 420, 17630, 13, 50996, 50996, 400, 382, 286, 848, 11, 309, 1985, 534, 731, 337, 2487, 293, 16944, 13, 51200, 51200, 400, 561, 764, 341, 586, 337, 411, 11, 291, 458, 11, 8272, 22978, 11, 439, 3685, 295, 1507, 13, 51348, 51348, 467, 311, 588, 777, 13, 51422, 51422, 4331, 1660, 11, 406, 370, 709, 13, 51544, 51544, 9777, 11, 406, 370, 709, 2139, 13, 51634, 51634, 43414, 6278, 11, 406, 370, 709, 2139, 13, 51698, 51698, 821, 307, 512, 3542, 11, 291, 458, 11, 300, 1333, 295, 3470, 264, 1785, 295, 264, 1523, 257, 707, 857, 11, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.21396885179493524, "compression_ratio": 1.6845637583892616, "no_speech_prob": 4.9363848120265175e-06}, {"id": 321, "seek": 110440, "start": 1109.64, "end": 1114.4, "text": " You train a system with sort of a pretext task, which is not really a task.", "tokens": [50364, 1033, 13, 50502, 50502, 407, 1936, 300, 311, 264, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50626, 50626, 509, 3847, 257, 1185, 365, 1333, 295, 257, 659, 25111, 5633, 11, 597, 307, 406, 534, 257, 5633, 13, 50864, 50864, 467, 311, 445, 31565, 420, 17630, 13, 50996, 50996, 400, 382, 286, 848, 11, 309, 1985, 534, 731, 337, 2487, 293, 16944, 13, 51200, 51200, 400, 561, 764, 341, 586, 337, 411, 11, 291, 458, 11, 8272, 22978, 11, 439, 3685, 295, 1507, 13, 51348, 51348, 467, 311, 588, 777, 13, 51422, 51422, 4331, 1660, 11, 406, 370, 709, 13, 51544, 51544, 9777, 11, 406, 370, 709, 2139, 13, 51634, 51634, 43414, 6278, 11, 406, 370, 709, 2139, 13, 51698, 51698, 821, 307, 512, 3542, 11, 291, 458, 11, 300, 1333, 295, 3470, 264, 1785, 295, 264, 1523, 257, 707, 857, 11, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.21396885179493524, "compression_ratio": 1.6845637583892616, "no_speech_prob": 4.9363848120265175e-06}, {"id": 322, "seek": 110440, "start": 1114.4, "end": 1117.0400000000002, "text": " It's just reconstruction or prediction.", "tokens": [50364, 1033, 13, 50502, 50502, 407, 1936, 300, 311, 264, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50626, 50626, 509, 3847, 257, 1185, 365, 1333, 295, 257, 659, 25111, 5633, 11, 597, 307, 406, 534, 257, 5633, 13, 50864, 50864, 467, 311, 445, 31565, 420, 17630, 13, 50996, 50996, 400, 382, 286, 848, 11, 309, 1985, 534, 731, 337, 2487, 293, 16944, 13, 51200, 51200, 400, 561, 764, 341, 586, 337, 411, 11, 291, 458, 11, 8272, 22978, 11, 439, 3685, 295, 1507, 13, 51348, 51348, 467, 311, 588, 777, 13, 51422, 51422, 4331, 1660, 11, 406, 370, 709, 13, 51544, 51544, 9777, 11, 406, 370, 709, 2139, 13, 51634, 51634, 43414, 6278, 11, 406, 370, 709, 2139, 13, 51698, 51698, 821, 307, 512, 3542, 11, 291, 458, 11, 300, 1333, 295, 3470, 264, 1785, 295, 264, 1523, 257, 707, 857, 11, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.21396885179493524, "compression_ratio": 1.6845637583892616, "no_speech_prob": 4.9363848120265175e-06}, {"id": 323, "seek": 110440, "start": 1117.0400000000002, "end": 1121.1200000000001, "text": " And as I said, it works really well for text and symbols.", "tokens": [50364, 1033, 13, 50502, 50502, 407, 1936, 300, 311, 264, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50626, 50626, 509, 3847, 257, 1185, 365, 1333, 295, 257, 659, 25111, 5633, 11, 597, 307, 406, 534, 257, 5633, 13, 50864, 50864, 467, 311, 445, 31565, 420, 17630, 13, 50996, 50996, 400, 382, 286, 848, 11, 309, 1985, 534, 731, 337, 2487, 293, 16944, 13, 51200, 51200, 400, 561, 764, 341, 586, 337, 411, 11, 291, 458, 11, 8272, 22978, 11, 439, 3685, 295, 1507, 13, 51348, 51348, 467, 311, 588, 777, 13, 51422, 51422, 4331, 1660, 11, 406, 370, 709, 13, 51544, 51544, 9777, 11, 406, 370, 709, 2139, 13, 51634, 51634, 43414, 6278, 11, 406, 370, 709, 2139, 13, 51698, 51698, 821, 307, 512, 3542, 11, 291, 458, 11, 300, 1333, 295, 3470, 264, 1785, 295, 264, 1523, 257, 707, 857, 11, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.21396885179493524, "compression_ratio": 1.6845637583892616, "no_speech_prob": 4.9363848120265175e-06}, {"id": 324, "seek": 110440, "start": 1121.1200000000001, "end": 1124.0800000000002, "text": " And people use this now for like, you know, DNA sequences, all kinds of stuff.", "tokens": [50364, 1033, 13, 50502, 50502, 407, 1936, 300, 311, 264, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50626, 50626, 509, 3847, 257, 1185, 365, 1333, 295, 257, 659, 25111, 5633, 11, 597, 307, 406, 534, 257, 5633, 13, 50864, 50864, 467, 311, 445, 31565, 420, 17630, 13, 50996, 50996, 400, 382, 286, 848, 11, 309, 1985, 534, 731, 337, 2487, 293, 16944, 13, 51200, 51200, 400, 561, 764, 341, 586, 337, 411, 11, 291, 458, 11, 8272, 22978, 11, 439, 3685, 295, 1507, 13, 51348, 51348, 467, 311, 588, 777, 13, 51422, 51422, 4331, 1660, 11, 406, 370, 709, 13, 51544, 51544, 9777, 11, 406, 370, 709, 2139, 13, 51634, 51634, 43414, 6278, 11, 406, 370, 709, 2139, 13, 51698, 51698, 821, 307, 512, 3542, 11, 291, 458, 11, 300, 1333, 295, 3470, 264, 1785, 295, 264, 1523, 257, 707, 857, 11, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.21396885179493524, "compression_ratio": 1.6845637583892616, "no_speech_prob": 4.9363848120265175e-06}, {"id": 325, "seek": 110440, "start": 1124.0800000000002, "end": 1125.5600000000002, "text": " It's very new.", "tokens": [50364, 1033, 13, 50502, 50502, 407, 1936, 300, 311, 264, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50626, 50626, 509, 3847, 257, 1185, 365, 1333, 295, 257, 659, 25111, 5633, 11, 597, 307, 406, 534, 257, 5633, 13, 50864, 50864, 467, 311, 445, 31565, 420, 17630, 13, 50996, 50996, 400, 382, 286, 848, 11, 309, 1985, 534, 731, 337, 2487, 293, 16944, 13, 51200, 51200, 400, 561, 764, 341, 586, 337, 411, 11, 291, 458, 11, 8272, 22978, 11, 439, 3685, 295, 1507, 13, 51348, 51348, 467, 311, 588, 777, 13, 51422, 51422, 4331, 1660, 11, 406, 370, 709, 13, 51544, 51544, 9777, 11, 406, 370, 709, 2139, 13, 51634, 51634, 43414, 6278, 11, 406, 370, 709, 2139, 13, 51698, 51698, 821, 307, 512, 3542, 11, 291, 458, 11, 300, 1333, 295, 3470, 264, 1785, 295, 264, 1523, 257, 707, 857, 11, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.21396885179493524, "compression_ratio": 1.6845637583892616, "no_speech_prob": 4.9363848120265175e-06}, {"id": 326, "seek": 110440, "start": 1125.5600000000002, "end": 1128.0, "text": " Images, not so much.", "tokens": [50364, 1033, 13, 50502, 50502, 407, 1936, 300, 311, 264, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50626, 50626, 509, 3847, 257, 1185, 365, 1333, 295, 257, 659, 25111, 5633, 11, 597, 307, 406, 534, 257, 5633, 13, 50864, 50864, 467, 311, 445, 31565, 420, 17630, 13, 50996, 50996, 400, 382, 286, 848, 11, 309, 1985, 534, 731, 337, 2487, 293, 16944, 13, 51200, 51200, 400, 561, 764, 341, 586, 337, 411, 11, 291, 458, 11, 8272, 22978, 11, 439, 3685, 295, 1507, 13, 51348, 51348, 467, 311, 588, 777, 13, 51422, 51422, 4331, 1660, 11, 406, 370, 709, 13, 51544, 51544, 9777, 11, 406, 370, 709, 2139, 13, 51634, 51634, 43414, 6278, 11, 406, 370, 709, 2139, 13, 51698, 51698, 821, 307, 512, 3542, 11, 291, 458, 11, 300, 1333, 295, 3470, 264, 1785, 295, 264, 1523, 257, 707, 857, 11, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.21396885179493524, "compression_ratio": 1.6845637583892616, "no_speech_prob": 4.9363848120265175e-06}, {"id": 327, "seek": 110440, "start": 1128.0, "end": 1129.8000000000002, "text": " Video, not so much either.", "tokens": [50364, 1033, 13, 50502, 50502, 407, 1936, 300, 311, 264, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50626, 50626, 509, 3847, 257, 1185, 365, 1333, 295, 257, 659, 25111, 5633, 11, 597, 307, 406, 534, 257, 5633, 13, 50864, 50864, 467, 311, 445, 31565, 420, 17630, 13, 50996, 50996, 400, 382, 286, 848, 11, 309, 1985, 534, 731, 337, 2487, 293, 16944, 13, 51200, 51200, 400, 561, 764, 341, 586, 337, 411, 11, 291, 458, 11, 8272, 22978, 11, 439, 3685, 295, 1507, 13, 51348, 51348, 467, 311, 588, 777, 13, 51422, 51422, 4331, 1660, 11, 406, 370, 709, 13, 51544, 51544, 9777, 11, 406, 370, 709, 2139, 13, 51634, 51634, 43414, 6278, 11, 406, 370, 709, 2139, 13, 51698, 51698, 821, 307, 512, 3542, 11, 291, 458, 11, 300, 1333, 295, 3470, 264, 1785, 295, 264, 1523, 257, 707, 857, 11, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.21396885179493524, "compression_ratio": 1.6845637583892616, "no_speech_prob": 4.9363848120265175e-06}, {"id": 328, "seek": 110440, "start": 1129.8000000000002, "end": 1131.0800000000002, "text": " Signal audio, not so much either.", "tokens": [50364, 1033, 13, 50502, 50502, 407, 1936, 300, 311, 264, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50626, 50626, 509, 3847, 257, 1185, 365, 1333, 295, 257, 659, 25111, 5633, 11, 597, 307, 406, 534, 257, 5633, 13, 50864, 50864, 467, 311, 445, 31565, 420, 17630, 13, 50996, 50996, 400, 382, 286, 848, 11, 309, 1985, 534, 731, 337, 2487, 293, 16944, 13, 51200, 51200, 400, 561, 764, 341, 586, 337, 411, 11, 291, 458, 11, 8272, 22978, 11, 439, 3685, 295, 1507, 13, 51348, 51348, 467, 311, 588, 777, 13, 51422, 51422, 4331, 1660, 11, 406, 370, 709, 13, 51544, 51544, 9777, 11, 406, 370, 709, 2139, 13, 51634, 51634, 43414, 6278, 11, 406, 370, 709, 2139, 13, 51698, 51698, 821, 307, 512, 3542, 11, 291, 458, 11, 300, 1333, 295, 3470, 264, 1785, 295, 264, 1523, 257, 707, 857, 11, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.21396885179493524, "compression_ratio": 1.6845637583892616, "no_speech_prob": 4.9363848120265175e-06}, {"id": 329, "seek": 110440, "start": 1131.0800000000002, "end": 1134.16, "text": " There is some results, you know, that sort of improve the state of the art a little bit,", "tokens": [50364, 1033, 13, 50502, 50502, 407, 1936, 300, 311, 264, 1558, 295, 2698, 12, 48172, 24420, 2539, 13, 50626, 50626, 509, 3847, 257, 1185, 365, 1333, 295, 257, 659, 25111, 5633, 11, 597, 307, 406, 534, 257, 5633, 13, 50864, 50864, 467, 311, 445, 31565, 420, 17630, 13, 50996, 50996, 400, 382, 286, 848, 11, 309, 1985, 534, 731, 337, 2487, 293, 16944, 13, 51200, 51200, 400, 561, 764, 341, 586, 337, 411, 11, 291, 458, 11, 8272, 22978, 11, 439, 3685, 295, 1507, 13, 51348, 51348, 467, 311, 588, 777, 13, 51422, 51422, 4331, 1660, 11, 406, 370, 709, 13, 51544, 51544, 9777, 11, 406, 370, 709, 2139, 13, 51634, 51634, 43414, 6278, 11, 406, 370, 709, 2139, 13, 51698, 51698, 821, 307, 512, 3542, 11, 291, 458, 11, 300, 1333, 295, 3470, 264, 1785, 295, 264, 1523, 257, 707, 857, 11, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.21396885179493524, "compression_ratio": 1.6845637583892616, "no_speech_prob": 4.9363848120265175e-06}, {"id": 330, "seek": 113416, "start": 1134.16, "end": 1137.24, "text": " but they're not as successful as in NLP.", "tokens": [50364, 457, 436, 434, 406, 382, 4406, 382, 294, 426, 45196, 13, 50518, 50518, 682, 426, 45196, 11, 436, 434, 6252, 4406, 13, 50628, 50628, 1033, 13, 50678, 50678, 821, 311, 1071, 1778, 983, 321, 1062, 528, 281, 764, 2698, 12, 48172, 24420, 2539, 11, 597, 307, 11, 293, 50922, 50922, 309, 1709, 646, 281, 341, 1558, 295, 3097, 257, 1032, 281, 3332, 2564, 13, 51084, 51084, 440, 1778, 983, 321, 393, 1466, 281, 3332, 257, 1032, 294, 945, 2496, 1553, 26900, 881, 295, 264, 565, 51422, 51422, 307, 300, 321, 362, 341, 2316, 295, 264, 1002, 300, 4045, 505, 281, 6069, 264, 10098, 295, 527, 51662, 51662, 5909, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1401920065415644, "compression_ratio": 1.6614173228346456, "no_speech_prob": 4.222427833155962e-06}, {"id": 331, "seek": 113416, "start": 1137.24, "end": 1139.44, "text": " In NLP, they're incredibly successful.", "tokens": [50364, 457, 436, 434, 406, 382, 4406, 382, 294, 426, 45196, 13, 50518, 50518, 682, 426, 45196, 11, 436, 434, 6252, 4406, 13, 50628, 50628, 1033, 13, 50678, 50678, 821, 311, 1071, 1778, 983, 321, 1062, 528, 281, 764, 2698, 12, 48172, 24420, 2539, 11, 597, 307, 11, 293, 50922, 50922, 309, 1709, 646, 281, 341, 1558, 295, 3097, 257, 1032, 281, 3332, 2564, 13, 51084, 51084, 440, 1778, 983, 321, 393, 1466, 281, 3332, 257, 1032, 294, 945, 2496, 1553, 26900, 881, 295, 264, 565, 51422, 51422, 307, 300, 321, 362, 341, 2316, 295, 264, 1002, 300, 4045, 505, 281, 6069, 264, 10098, 295, 527, 51662, 51662, 5909, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1401920065415644, "compression_ratio": 1.6614173228346456, "no_speech_prob": 4.222427833155962e-06}, {"id": 332, "seek": 113416, "start": 1139.44, "end": 1140.44, "text": " Okay.", "tokens": [50364, 457, 436, 434, 406, 382, 4406, 382, 294, 426, 45196, 13, 50518, 50518, 682, 426, 45196, 11, 436, 434, 6252, 4406, 13, 50628, 50628, 1033, 13, 50678, 50678, 821, 311, 1071, 1778, 983, 321, 1062, 528, 281, 764, 2698, 12, 48172, 24420, 2539, 11, 597, 307, 11, 293, 50922, 50922, 309, 1709, 646, 281, 341, 1558, 295, 3097, 257, 1032, 281, 3332, 2564, 13, 51084, 51084, 440, 1778, 983, 321, 393, 1466, 281, 3332, 257, 1032, 294, 945, 2496, 1553, 26900, 881, 295, 264, 565, 51422, 51422, 307, 300, 321, 362, 341, 2316, 295, 264, 1002, 300, 4045, 505, 281, 6069, 264, 10098, 295, 527, 51662, 51662, 5909, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1401920065415644, "compression_ratio": 1.6614173228346456, "no_speech_prob": 4.222427833155962e-06}, {"id": 333, "seek": 113416, "start": 1140.44, "end": 1145.3200000000002, "text": " There's another reason why we might want to use self-supervised learning, which is, and", "tokens": [50364, 457, 436, 434, 406, 382, 4406, 382, 294, 426, 45196, 13, 50518, 50518, 682, 426, 45196, 11, 436, 434, 6252, 4406, 13, 50628, 50628, 1033, 13, 50678, 50678, 821, 311, 1071, 1778, 983, 321, 1062, 528, 281, 764, 2698, 12, 48172, 24420, 2539, 11, 597, 307, 11, 293, 50922, 50922, 309, 1709, 646, 281, 341, 1558, 295, 3097, 257, 1032, 281, 3332, 2564, 13, 51084, 51084, 440, 1778, 983, 321, 393, 1466, 281, 3332, 257, 1032, 294, 945, 2496, 1553, 26900, 881, 295, 264, 565, 51422, 51422, 307, 300, 321, 362, 341, 2316, 295, 264, 1002, 300, 4045, 505, 281, 6069, 264, 10098, 295, 527, 51662, 51662, 5909, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1401920065415644, "compression_ratio": 1.6614173228346456, "no_speech_prob": 4.222427833155962e-06}, {"id": 334, "seek": 113416, "start": 1145.3200000000002, "end": 1148.5600000000002, "text": " it goes back to this idea of training a car to drive itself.", "tokens": [50364, 457, 436, 434, 406, 382, 4406, 382, 294, 426, 45196, 13, 50518, 50518, 682, 426, 45196, 11, 436, 434, 6252, 4406, 13, 50628, 50628, 1033, 13, 50678, 50678, 821, 311, 1071, 1778, 983, 321, 1062, 528, 281, 764, 2698, 12, 48172, 24420, 2539, 11, 597, 307, 11, 293, 50922, 50922, 309, 1709, 646, 281, 341, 1558, 295, 3097, 257, 1032, 281, 3332, 2564, 13, 51084, 51084, 440, 1778, 983, 321, 393, 1466, 281, 3332, 257, 1032, 294, 945, 2496, 1553, 26900, 881, 295, 264, 565, 51422, 51422, 307, 300, 321, 362, 341, 2316, 295, 264, 1002, 300, 4045, 505, 281, 6069, 264, 10098, 295, 527, 51662, 51662, 5909, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1401920065415644, "compression_ratio": 1.6614173228346456, "no_speech_prob": 4.222427833155962e-06}, {"id": 335, "seek": 113416, "start": 1148.5600000000002, "end": 1155.3200000000002, "text": " The reason why we can learn to drive a car in 20 hours without crashing most of the time", "tokens": [50364, 457, 436, 434, 406, 382, 4406, 382, 294, 426, 45196, 13, 50518, 50518, 682, 426, 45196, 11, 436, 434, 6252, 4406, 13, 50628, 50628, 1033, 13, 50678, 50678, 821, 311, 1071, 1778, 983, 321, 1062, 528, 281, 764, 2698, 12, 48172, 24420, 2539, 11, 597, 307, 11, 293, 50922, 50922, 309, 1709, 646, 281, 341, 1558, 295, 3097, 257, 1032, 281, 3332, 2564, 13, 51084, 51084, 440, 1778, 983, 321, 393, 1466, 281, 3332, 257, 1032, 294, 945, 2496, 1553, 26900, 881, 295, 264, 565, 51422, 51422, 307, 300, 321, 362, 341, 2316, 295, 264, 1002, 300, 4045, 505, 281, 6069, 264, 10098, 295, 527, 51662, 51662, 5909, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1401920065415644, "compression_ratio": 1.6614173228346456, "no_speech_prob": 4.222427833155962e-06}, {"id": 336, "seek": 113416, "start": 1155.3200000000002, "end": 1160.1200000000001, "text": " is that we have this model of the world that allows us to predict the consequences of our", "tokens": [50364, 457, 436, 434, 406, 382, 4406, 382, 294, 426, 45196, 13, 50518, 50518, 682, 426, 45196, 11, 436, 434, 6252, 4406, 13, 50628, 50628, 1033, 13, 50678, 50678, 821, 311, 1071, 1778, 983, 321, 1062, 528, 281, 764, 2698, 12, 48172, 24420, 2539, 11, 597, 307, 11, 293, 50922, 50922, 309, 1709, 646, 281, 341, 1558, 295, 3097, 257, 1032, 281, 3332, 2564, 13, 51084, 51084, 440, 1778, 983, 321, 393, 1466, 281, 3332, 257, 1032, 294, 945, 2496, 1553, 26900, 881, 295, 264, 565, 51422, 51422, 307, 300, 321, 362, 341, 2316, 295, 264, 1002, 300, 4045, 505, 281, 6069, 264, 10098, 295, 527, 51662, 51662, 5909, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1401920065415644, "compression_ratio": 1.6614173228346456, "no_speech_prob": 4.222427833155962e-06}, {"id": 337, "seek": 113416, "start": 1160.1200000000001, "end": 1161.1200000000001, "text": " actions.", "tokens": [50364, 457, 436, 434, 406, 382, 4406, 382, 294, 426, 45196, 13, 50518, 50518, 682, 426, 45196, 11, 436, 434, 6252, 4406, 13, 50628, 50628, 1033, 13, 50678, 50678, 821, 311, 1071, 1778, 983, 321, 1062, 528, 281, 764, 2698, 12, 48172, 24420, 2539, 11, 597, 307, 11, 293, 50922, 50922, 309, 1709, 646, 281, 341, 1558, 295, 3097, 257, 1032, 281, 3332, 2564, 13, 51084, 51084, 440, 1778, 983, 321, 393, 1466, 281, 3332, 257, 1032, 294, 945, 2496, 1553, 26900, 881, 295, 264, 565, 51422, 51422, 307, 300, 321, 362, 341, 2316, 295, 264, 1002, 300, 4045, 505, 281, 6069, 264, 10098, 295, 527, 51662, 51662, 5909, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1401920065415644, "compression_ratio": 1.6614173228346456, "no_speech_prob": 4.222427833155962e-06}, {"id": 338, "seek": 116112, "start": 1161.12, "end": 1165.56, "text": " So if we drive next to a cliff and we turn the wheel to the right, you know, the car", "tokens": [50364, 407, 498, 321, 3332, 958, 281, 257, 22316, 293, 321, 1261, 264, 5589, 281, 264, 558, 11, 291, 458, 11, 264, 1032, 50586, 50586, 365, 8250, 766, 281, 264, 558, 11, 309, 486, 1190, 766, 264, 22316, 293, 8252, 760, 264, 2767, 570, 50770, 50770, 321, 458, 466, 12110, 293, 1825, 665, 307, 516, 281, 808, 484, 295, 309, 13, 50906, 50906, 407, 321, 500, 380, 754, 853, 11, 558, 30, 50984, 50984, 1436, 321, 362, 341, 35521, 2316, 13, 51046, 51046, 492, 393, 6069, 264, 10098, 295, 512, 295, 527, 5909, 412, 1935, 13, 51226, 51226, 407, 264, 636, 341, 1985, 307, 767, 257, 588, 3832, 551, 337, 16252, 1969, 5261, 11, 597, 307, 51506, 51506, 498, 291, 362, 257, 35521, 2128, 2316, 295, 264, 1002, 300, 2709, 291, 264, 1785, 295, 264, 51668, 51668, 1002, 412, 565, 256, 1804, 472, 382, 257, 2445, 295, 264, 1785, 295, 264, 1002, 412, 565, 256, 11, 428, 3069, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1438800977623981, "compression_ratio": 1.9186746987951808, "no_speech_prob": 6.747508905391442e-06}, {"id": 339, "seek": 116112, "start": 1165.56, "end": 1169.2399999999998, "text": " with rear off to the right, it will run off the cliff and crash down the bottom because", "tokens": [50364, 407, 498, 321, 3332, 958, 281, 257, 22316, 293, 321, 1261, 264, 5589, 281, 264, 558, 11, 291, 458, 11, 264, 1032, 50586, 50586, 365, 8250, 766, 281, 264, 558, 11, 309, 486, 1190, 766, 264, 22316, 293, 8252, 760, 264, 2767, 570, 50770, 50770, 321, 458, 466, 12110, 293, 1825, 665, 307, 516, 281, 808, 484, 295, 309, 13, 50906, 50906, 407, 321, 500, 380, 754, 853, 11, 558, 30, 50984, 50984, 1436, 321, 362, 341, 35521, 2316, 13, 51046, 51046, 492, 393, 6069, 264, 10098, 295, 512, 295, 527, 5909, 412, 1935, 13, 51226, 51226, 407, 264, 636, 341, 1985, 307, 767, 257, 588, 3832, 551, 337, 16252, 1969, 5261, 11, 597, 307, 51506, 51506, 498, 291, 362, 257, 35521, 2128, 2316, 295, 264, 1002, 300, 2709, 291, 264, 1785, 295, 264, 51668, 51668, 1002, 412, 565, 256, 1804, 472, 382, 257, 2445, 295, 264, 1785, 295, 264, 1002, 412, 565, 256, 11, 428, 3069, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1438800977623981, "compression_ratio": 1.9186746987951808, "no_speech_prob": 6.747508905391442e-06}, {"id": 340, "seek": 116112, "start": 1169.2399999999998, "end": 1171.9599999999998, "text": " we know about gravity and nothing good is going to come out of it.", "tokens": [50364, 407, 498, 321, 3332, 958, 281, 257, 22316, 293, 321, 1261, 264, 5589, 281, 264, 558, 11, 291, 458, 11, 264, 1032, 50586, 50586, 365, 8250, 766, 281, 264, 558, 11, 309, 486, 1190, 766, 264, 22316, 293, 8252, 760, 264, 2767, 570, 50770, 50770, 321, 458, 466, 12110, 293, 1825, 665, 307, 516, 281, 808, 484, 295, 309, 13, 50906, 50906, 407, 321, 500, 380, 754, 853, 11, 558, 30, 50984, 50984, 1436, 321, 362, 341, 35521, 2316, 13, 51046, 51046, 492, 393, 6069, 264, 10098, 295, 512, 295, 527, 5909, 412, 1935, 13, 51226, 51226, 407, 264, 636, 341, 1985, 307, 767, 257, 588, 3832, 551, 337, 16252, 1969, 5261, 11, 597, 307, 51506, 51506, 498, 291, 362, 257, 35521, 2128, 2316, 295, 264, 1002, 300, 2709, 291, 264, 1785, 295, 264, 51668, 51668, 1002, 412, 565, 256, 1804, 472, 382, 257, 2445, 295, 264, 1785, 295, 264, 1002, 412, 565, 256, 11, 428, 3069, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1438800977623981, "compression_ratio": 1.9186746987951808, "no_speech_prob": 6.747508905391442e-06}, {"id": 341, "seek": 116112, "start": 1171.9599999999998, "end": 1173.52, "text": " So we don't even try, right?", "tokens": [50364, 407, 498, 321, 3332, 958, 281, 257, 22316, 293, 321, 1261, 264, 5589, 281, 264, 558, 11, 291, 458, 11, 264, 1032, 50586, 50586, 365, 8250, 766, 281, 264, 558, 11, 309, 486, 1190, 766, 264, 22316, 293, 8252, 760, 264, 2767, 570, 50770, 50770, 321, 458, 466, 12110, 293, 1825, 665, 307, 516, 281, 808, 484, 295, 309, 13, 50906, 50906, 407, 321, 500, 380, 754, 853, 11, 558, 30, 50984, 50984, 1436, 321, 362, 341, 35521, 2316, 13, 51046, 51046, 492, 393, 6069, 264, 10098, 295, 512, 295, 527, 5909, 412, 1935, 13, 51226, 51226, 407, 264, 636, 341, 1985, 307, 767, 257, 588, 3832, 551, 337, 16252, 1969, 5261, 11, 597, 307, 51506, 51506, 498, 291, 362, 257, 35521, 2128, 2316, 295, 264, 1002, 300, 2709, 291, 264, 1785, 295, 264, 51668, 51668, 1002, 412, 565, 256, 1804, 472, 382, 257, 2445, 295, 264, 1785, 295, 264, 1002, 412, 565, 256, 11, 428, 3069, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1438800977623981, "compression_ratio": 1.9186746987951808, "no_speech_prob": 6.747508905391442e-06}, {"id": 342, "seek": 116112, "start": 1173.52, "end": 1174.76, "text": " Because we have this predictive model.", "tokens": [50364, 407, 498, 321, 3332, 958, 281, 257, 22316, 293, 321, 1261, 264, 5589, 281, 264, 558, 11, 291, 458, 11, 264, 1032, 50586, 50586, 365, 8250, 766, 281, 264, 558, 11, 309, 486, 1190, 766, 264, 22316, 293, 8252, 760, 264, 2767, 570, 50770, 50770, 321, 458, 466, 12110, 293, 1825, 665, 307, 516, 281, 808, 484, 295, 309, 13, 50906, 50906, 407, 321, 500, 380, 754, 853, 11, 558, 30, 50984, 50984, 1436, 321, 362, 341, 35521, 2316, 13, 51046, 51046, 492, 393, 6069, 264, 10098, 295, 512, 295, 527, 5909, 412, 1935, 13, 51226, 51226, 407, 264, 636, 341, 1985, 307, 767, 257, 588, 3832, 551, 337, 16252, 1969, 5261, 11, 597, 307, 51506, 51506, 498, 291, 362, 257, 35521, 2128, 2316, 295, 264, 1002, 300, 2709, 291, 264, 1785, 295, 264, 51668, 51668, 1002, 412, 565, 256, 1804, 472, 382, 257, 2445, 295, 264, 1785, 295, 264, 1002, 412, 565, 256, 11, 428, 3069, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1438800977623981, "compression_ratio": 1.9186746987951808, "no_speech_prob": 6.747508905391442e-06}, {"id": 343, "seek": 116112, "start": 1174.76, "end": 1178.36, "text": " We can predict the consequences of some of our actions at least.", "tokens": [50364, 407, 498, 321, 3332, 958, 281, 257, 22316, 293, 321, 1261, 264, 5589, 281, 264, 558, 11, 291, 458, 11, 264, 1032, 50586, 50586, 365, 8250, 766, 281, 264, 558, 11, 309, 486, 1190, 766, 264, 22316, 293, 8252, 760, 264, 2767, 570, 50770, 50770, 321, 458, 466, 12110, 293, 1825, 665, 307, 516, 281, 808, 484, 295, 309, 13, 50906, 50906, 407, 321, 500, 380, 754, 853, 11, 558, 30, 50984, 50984, 1436, 321, 362, 341, 35521, 2316, 13, 51046, 51046, 492, 393, 6069, 264, 10098, 295, 512, 295, 527, 5909, 412, 1935, 13, 51226, 51226, 407, 264, 636, 341, 1985, 307, 767, 257, 588, 3832, 551, 337, 16252, 1969, 5261, 11, 597, 307, 51506, 51506, 498, 291, 362, 257, 35521, 2128, 2316, 295, 264, 1002, 300, 2709, 291, 264, 1785, 295, 264, 51668, 51668, 1002, 412, 565, 256, 1804, 472, 382, 257, 2445, 295, 264, 1785, 295, 264, 1002, 412, 565, 256, 11, 428, 3069, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1438800977623981, "compression_ratio": 1.9186746987951808, "no_speech_prob": 6.747508905391442e-06}, {"id": 344, "seek": 116112, "start": 1178.36, "end": 1183.9599999999998, "text": " So the way this works is actually a very standard thing for optimal control theory, which is", "tokens": [50364, 407, 498, 321, 3332, 958, 281, 257, 22316, 293, 321, 1261, 264, 5589, 281, 264, 558, 11, 291, 458, 11, 264, 1032, 50586, 50586, 365, 8250, 766, 281, 264, 558, 11, 309, 486, 1190, 766, 264, 22316, 293, 8252, 760, 264, 2767, 570, 50770, 50770, 321, 458, 466, 12110, 293, 1825, 665, 307, 516, 281, 808, 484, 295, 309, 13, 50906, 50906, 407, 321, 500, 380, 754, 853, 11, 558, 30, 50984, 50984, 1436, 321, 362, 341, 35521, 2316, 13, 51046, 51046, 492, 393, 6069, 264, 10098, 295, 512, 295, 527, 5909, 412, 1935, 13, 51226, 51226, 407, 264, 636, 341, 1985, 307, 767, 257, 588, 3832, 551, 337, 16252, 1969, 5261, 11, 597, 307, 51506, 51506, 498, 291, 362, 257, 35521, 2128, 2316, 295, 264, 1002, 300, 2709, 291, 264, 1785, 295, 264, 51668, 51668, 1002, 412, 565, 256, 1804, 472, 382, 257, 2445, 295, 264, 1785, 295, 264, 1002, 412, 565, 256, 11, 428, 3069, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1438800977623981, "compression_ratio": 1.9186746987951808, "no_speech_prob": 6.747508905391442e-06}, {"id": 345, "seek": 116112, "start": 1183.9599999999998, "end": 1187.1999999999998, "text": " if you have a predictive forward model of the world that gives you the state of the", "tokens": [50364, 407, 498, 321, 3332, 958, 281, 257, 22316, 293, 321, 1261, 264, 5589, 281, 264, 558, 11, 291, 458, 11, 264, 1032, 50586, 50586, 365, 8250, 766, 281, 264, 558, 11, 309, 486, 1190, 766, 264, 22316, 293, 8252, 760, 264, 2767, 570, 50770, 50770, 321, 458, 466, 12110, 293, 1825, 665, 307, 516, 281, 808, 484, 295, 309, 13, 50906, 50906, 407, 321, 500, 380, 754, 853, 11, 558, 30, 50984, 50984, 1436, 321, 362, 341, 35521, 2316, 13, 51046, 51046, 492, 393, 6069, 264, 10098, 295, 512, 295, 527, 5909, 412, 1935, 13, 51226, 51226, 407, 264, 636, 341, 1985, 307, 767, 257, 588, 3832, 551, 337, 16252, 1969, 5261, 11, 597, 307, 51506, 51506, 498, 291, 362, 257, 35521, 2128, 2316, 295, 264, 1002, 300, 2709, 291, 264, 1785, 295, 264, 51668, 51668, 1002, 412, 565, 256, 1804, 472, 382, 257, 2445, 295, 264, 1785, 295, 264, 1002, 412, 565, 256, 11, 428, 3069, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1438800977623981, "compression_ratio": 1.9186746987951808, "no_speech_prob": 6.747508905391442e-06}, {"id": 346, "seek": 116112, "start": 1187.1999999999998, "end": 1190.6399999999999, "text": " world at time t plus one as a function of the state of the world at time t, your action", "tokens": [50364, 407, 498, 321, 3332, 958, 281, 257, 22316, 293, 321, 1261, 264, 5589, 281, 264, 558, 11, 291, 458, 11, 264, 1032, 50586, 50586, 365, 8250, 766, 281, 264, 558, 11, 309, 486, 1190, 766, 264, 22316, 293, 8252, 760, 264, 2767, 570, 50770, 50770, 321, 458, 466, 12110, 293, 1825, 665, 307, 516, 281, 808, 484, 295, 309, 13, 50906, 50906, 407, 321, 500, 380, 754, 853, 11, 558, 30, 50984, 50984, 1436, 321, 362, 341, 35521, 2316, 13, 51046, 51046, 492, 393, 6069, 264, 10098, 295, 512, 295, 527, 5909, 412, 1935, 13, 51226, 51226, 407, 264, 636, 341, 1985, 307, 767, 257, 588, 3832, 551, 337, 16252, 1969, 5261, 11, 597, 307, 51506, 51506, 498, 291, 362, 257, 35521, 2128, 2316, 295, 264, 1002, 300, 2709, 291, 264, 1785, 295, 264, 51668, 51668, 1002, 412, 565, 256, 1804, 472, 382, 257, 2445, 295, 264, 1785, 295, 264, 1002, 412, 565, 256, 11, 428, 3069, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1438800977623981, "compression_ratio": 1.9186746987951808, "no_speech_prob": 6.747508905391442e-06}, {"id": 347, "seek": 119064, "start": 1190.64, "end": 1195.3200000000002, "text": " and perhaps some latent variable that represents all the stuff you don't know about the world,", "tokens": [50364, 293, 4317, 512, 48994, 7006, 300, 8855, 439, 264, 1507, 291, 500, 380, 458, 466, 264, 1002, 11, 50598, 50598, 550, 291, 393, 1333, 295, 1190, 341, 294, 428, 1378, 13, 50710, 50710, 509, 393, 1190, 428, 2316, 294, 428, 1378, 365, 257, 10348, 8310, 295, 3069, 293, 536, 437, 264, 50944, 50944, 1874, 486, 312, 293, 291, 393, 3481, 264, 2063, 295, 309, 13, 51054, 51054, 509, 393, 362, 364, 6920, 2063, 337, 577, 665, 721, 366, 11, 291, 458, 11, 286, 500, 380, 528, 281, 8252, 11, 51330, 51330, 558, 30, 51380, 51380, 400, 370, 291, 393, 1333, 295, 1190, 341, 2316, 2128, 293, 4317, 13596, 257, 3069, 8310, 300, 486, 51674, 51674, 1333, 295, 17522, 428, 5497, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1568959153543307, "compression_ratio": 1.858736059479554, "no_speech_prob": 7.4103977567574475e-06}, {"id": 348, "seek": 119064, "start": 1195.3200000000002, "end": 1197.5600000000002, "text": " then you can sort of run this in your head.", "tokens": [50364, 293, 4317, 512, 48994, 7006, 300, 8855, 439, 264, 1507, 291, 500, 380, 458, 466, 264, 1002, 11, 50598, 50598, 550, 291, 393, 1333, 295, 1190, 341, 294, 428, 1378, 13, 50710, 50710, 509, 393, 1190, 428, 2316, 294, 428, 1378, 365, 257, 10348, 8310, 295, 3069, 293, 536, 437, 264, 50944, 50944, 1874, 486, 312, 293, 291, 393, 3481, 264, 2063, 295, 309, 13, 51054, 51054, 509, 393, 362, 364, 6920, 2063, 337, 577, 665, 721, 366, 11, 291, 458, 11, 286, 500, 380, 528, 281, 8252, 11, 51330, 51330, 558, 30, 51380, 51380, 400, 370, 291, 393, 1333, 295, 1190, 341, 2316, 2128, 293, 4317, 13596, 257, 3069, 8310, 300, 486, 51674, 51674, 1333, 295, 17522, 428, 5497, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1568959153543307, "compression_ratio": 1.858736059479554, "no_speech_prob": 7.4103977567574475e-06}, {"id": 349, "seek": 119064, "start": 1197.5600000000002, "end": 1202.24, "text": " You can run your model in your head with a proposed sequence of action and see what the", "tokens": [50364, 293, 4317, 512, 48994, 7006, 300, 8855, 439, 264, 1507, 291, 500, 380, 458, 466, 264, 1002, 11, 50598, 50598, 550, 291, 393, 1333, 295, 1190, 341, 294, 428, 1378, 13, 50710, 50710, 509, 393, 1190, 428, 2316, 294, 428, 1378, 365, 257, 10348, 8310, 295, 3069, 293, 536, 437, 264, 50944, 50944, 1874, 486, 312, 293, 291, 393, 3481, 264, 2063, 295, 309, 13, 51054, 51054, 509, 393, 362, 364, 6920, 2063, 337, 577, 665, 721, 366, 11, 291, 458, 11, 286, 500, 380, 528, 281, 8252, 11, 51330, 51330, 558, 30, 51380, 51380, 400, 370, 291, 393, 1333, 295, 1190, 341, 2316, 2128, 293, 4317, 13596, 257, 3069, 8310, 300, 486, 51674, 51674, 1333, 295, 17522, 428, 5497, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1568959153543307, "compression_ratio": 1.858736059479554, "no_speech_prob": 7.4103977567574475e-06}, {"id": 350, "seek": 119064, "start": 1202.24, "end": 1204.44, "text": " result will be and you can measure the cost of it.", "tokens": [50364, 293, 4317, 512, 48994, 7006, 300, 8855, 439, 264, 1507, 291, 500, 380, 458, 466, 264, 1002, 11, 50598, 50598, 550, 291, 393, 1333, 295, 1190, 341, 294, 428, 1378, 13, 50710, 50710, 509, 393, 1190, 428, 2316, 294, 428, 1378, 365, 257, 10348, 8310, 295, 3069, 293, 536, 437, 264, 50944, 50944, 1874, 486, 312, 293, 291, 393, 3481, 264, 2063, 295, 309, 13, 51054, 51054, 509, 393, 362, 364, 6920, 2063, 337, 577, 665, 721, 366, 11, 291, 458, 11, 286, 500, 380, 528, 281, 8252, 11, 51330, 51330, 558, 30, 51380, 51380, 400, 370, 291, 393, 1333, 295, 1190, 341, 2316, 2128, 293, 4317, 13596, 257, 3069, 8310, 300, 486, 51674, 51674, 1333, 295, 17522, 428, 5497, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1568959153543307, "compression_ratio": 1.858736059479554, "no_speech_prob": 7.4103977567574475e-06}, {"id": 351, "seek": 119064, "start": 1204.44, "end": 1209.96, "text": " You can have an internal cost for how good things are, you know, I don't want to crash,", "tokens": [50364, 293, 4317, 512, 48994, 7006, 300, 8855, 439, 264, 1507, 291, 500, 380, 458, 466, 264, 1002, 11, 50598, 50598, 550, 291, 393, 1333, 295, 1190, 341, 294, 428, 1378, 13, 50710, 50710, 509, 393, 1190, 428, 2316, 294, 428, 1378, 365, 257, 10348, 8310, 295, 3069, 293, 536, 437, 264, 50944, 50944, 1874, 486, 312, 293, 291, 393, 3481, 264, 2063, 295, 309, 13, 51054, 51054, 509, 393, 362, 364, 6920, 2063, 337, 577, 665, 721, 366, 11, 291, 458, 11, 286, 500, 380, 528, 281, 8252, 11, 51330, 51330, 558, 30, 51380, 51380, 400, 370, 291, 393, 1333, 295, 1190, 341, 2316, 2128, 293, 4317, 13596, 257, 3069, 8310, 300, 486, 51674, 51674, 1333, 295, 17522, 428, 5497, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1568959153543307, "compression_ratio": 1.858736059479554, "no_speech_prob": 7.4103977567574475e-06}, {"id": 352, "seek": 119064, "start": 1209.96, "end": 1210.96, "text": " right?", "tokens": [50364, 293, 4317, 512, 48994, 7006, 300, 8855, 439, 264, 1507, 291, 500, 380, 458, 466, 264, 1002, 11, 50598, 50598, 550, 291, 393, 1333, 295, 1190, 341, 294, 428, 1378, 13, 50710, 50710, 509, 393, 1190, 428, 2316, 294, 428, 1378, 365, 257, 10348, 8310, 295, 3069, 293, 536, 437, 264, 50944, 50944, 1874, 486, 312, 293, 291, 393, 3481, 264, 2063, 295, 309, 13, 51054, 51054, 509, 393, 362, 364, 6920, 2063, 337, 577, 665, 721, 366, 11, 291, 458, 11, 286, 500, 380, 528, 281, 8252, 11, 51330, 51330, 558, 30, 51380, 51380, 400, 370, 291, 393, 1333, 295, 1190, 341, 2316, 2128, 293, 4317, 13596, 257, 3069, 8310, 300, 486, 51674, 51674, 1333, 295, 17522, 428, 5497, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1568959153543307, "compression_ratio": 1.858736059479554, "no_speech_prob": 7.4103977567574475e-06}, {"id": 353, "seek": 119064, "start": 1210.96, "end": 1216.8400000000001, "text": " And so you can sort of run this model forward and perhaps infer a action sequence that will", "tokens": [50364, 293, 4317, 512, 48994, 7006, 300, 8855, 439, 264, 1507, 291, 500, 380, 458, 466, 264, 1002, 11, 50598, 50598, 550, 291, 393, 1333, 295, 1190, 341, 294, 428, 1378, 13, 50710, 50710, 509, 393, 1190, 428, 2316, 294, 428, 1378, 365, 257, 10348, 8310, 295, 3069, 293, 536, 437, 264, 50944, 50944, 1874, 486, 312, 293, 291, 393, 3481, 264, 2063, 295, 309, 13, 51054, 51054, 509, 393, 362, 364, 6920, 2063, 337, 577, 665, 721, 366, 11, 291, 458, 11, 286, 500, 380, 528, 281, 8252, 11, 51330, 51330, 558, 30, 51380, 51380, 400, 370, 291, 393, 1333, 295, 1190, 341, 2316, 2128, 293, 4317, 13596, 257, 3069, 8310, 300, 486, 51674, 51674, 1333, 295, 17522, 428, 5497, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1568959153543307, "compression_ratio": 1.858736059479554, "no_speech_prob": 7.4103977567574475e-06}, {"id": 354, "seek": 119064, "start": 1216.8400000000001, "end": 1220.2, "text": " sort of minimize your costs, right?", "tokens": [50364, 293, 4317, 512, 48994, 7006, 300, 8855, 439, 264, 1507, 291, 500, 380, 458, 466, 264, 1002, 11, 50598, 50598, 550, 291, 393, 1333, 295, 1190, 341, 294, 428, 1378, 13, 50710, 50710, 509, 393, 1190, 428, 2316, 294, 428, 1378, 365, 257, 10348, 8310, 295, 3069, 293, 536, 437, 264, 50944, 50944, 1874, 486, 312, 293, 291, 393, 3481, 264, 2063, 295, 309, 13, 51054, 51054, 509, 393, 362, 364, 6920, 2063, 337, 577, 665, 721, 366, 11, 291, 458, 11, 286, 500, 380, 528, 281, 8252, 11, 51330, 51330, 558, 30, 51380, 51380, 400, 370, 291, 393, 1333, 295, 1190, 341, 2316, 2128, 293, 4317, 13596, 257, 3069, 8310, 300, 486, 51674, 51674, 1333, 295, 17522, 428, 5497, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1568959153543307, "compression_ratio": 1.858736059479554, "no_speech_prob": 7.4103977567574475e-06}, {"id": 355, "seek": 122020, "start": 1220.2, "end": 1223.56, "text": " That model will have to be learned with self-supervised learning basically.", "tokens": [50364, 663, 2316, 486, 362, 281, 312, 3264, 365, 2698, 12, 48172, 24420, 2539, 1936, 13, 50532, 50532, 1692, 307, 264, 1785, 295, 264, 1002, 13, 50582, 50582, 961, 385, 747, 364, 3069, 293, 536, 437, 264, 1874, 307, 420, 406, 747, 364, 3069, 445, 570, 264, 50758, 50758, 1002, 307, 885, 264, 1002, 13, 50894, 50894, 400, 300, 311, 264, 912, 1154, 321, 643, 281, 5039, 510, 11, 264, 2698, 12, 48172, 24420, 2539, 1154, 13, 51148, 51148, 400, 264, 2135, 2734, 307, 300, 264, 1002, 307, 406, 15957, 3142, 13, 51320, 51320, 1033, 11, 370, 300, 4684, 385, 281, 341, 3036, 295, 264, 1045, 13480, 328, 2592, 295, 2539, 498, 291, 528, 11, 29280, 51708, 51708, 2539, 11, 46533, 2539, 11, 293, 2698, 12, 48172, 24420, 2539, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.17003723373986723, "compression_ratio": 1.9592592592592593, "no_speech_prob": 2.752947148110252e-05}, {"id": 356, "seek": 122020, "start": 1223.56, "end": 1224.56, "text": " Here is the state of the world.", "tokens": [50364, 663, 2316, 486, 362, 281, 312, 3264, 365, 2698, 12, 48172, 24420, 2539, 1936, 13, 50532, 50532, 1692, 307, 264, 1785, 295, 264, 1002, 13, 50582, 50582, 961, 385, 747, 364, 3069, 293, 536, 437, 264, 1874, 307, 420, 406, 747, 364, 3069, 445, 570, 264, 50758, 50758, 1002, 307, 885, 264, 1002, 13, 50894, 50894, 400, 300, 311, 264, 912, 1154, 321, 643, 281, 5039, 510, 11, 264, 2698, 12, 48172, 24420, 2539, 1154, 13, 51148, 51148, 400, 264, 2135, 2734, 307, 300, 264, 1002, 307, 406, 15957, 3142, 13, 51320, 51320, 1033, 11, 370, 300, 4684, 385, 281, 341, 3036, 295, 264, 1045, 13480, 328, 2592, 295, 2539, 498, 291, 528, 11, 29280, 51708, 51708, 2539, 11, 46533, 2539, 11, 293, 2698, 12, 48172, 24420, 2539, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.17003723373986723, "compression_ratio": 1.9592592592592593, "no_speech_prob": 2.752947148110252e-05}, {"id": 357, "seek": 122020, "start": 1224.56, "end": 1228.0800000000002, "text": " Let me take an action and see what the result is or not take an action just because the", "tokens": [50364, 663, 2316, 486, 362, 281, 312, 3264, 365, 2698, 12, 48172, 24420, 2539, 1936, 13, 50532, 50532, 1692, 307, 264, 1785, 295, 264, 1002, 13, 50582, 50582, 961, 385, 747, 364, 3069, 293, 536, 437, 264, 1874, 307, 420, 406, 747, 364, 3069, 445, 570, 264, 50758, 50758, 1002, 307, 885, 264, 1002, 13, 50894, 50894, 400, 300, 311, 264, 912, 1154, 321, 643, 281, 5039, 510, 11, 264, 2698, 12, 48172, 24420, 2539, 1154, 13, 51148, 51148, 400, 264, 2135, 2734, 307, 300, 264, 1002, 307, 406, 15957, 3142, 13, 51320, 51320, 1033, 11, 370, 300, 4684, 385, 281, 341, 3036, 295, 264, 1045, 13480, 328, 2592, 295, 2539, 498, 291, 528, 11, 29280, 51708, 51708, 2539, 11, 46533, 2539, 11, 293, 2698, 12, 48172, 24420, 2539, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.17003723373986723, "compression_ratio": 1.9592592592592593, "no_speech_prob": 2.752947148110252e-05}, {"id": 358, "seek": 122020, "start": 1228.0800000000002, "end": 1230.8, "text": " world is being the world.", "tokens": [50364, 663, 2316, 486, 362, 281, 312, 3264, 365, 2698, 12, 48172, 24420, 2539, 1936, 13, 50532, 50532, 1692, 307, 264, 1785, 295, 264, 1002, 13, 50582, 50582, 961, 385, 747, 364, 3069, 293, 536, 437, 264, 1874, 307, 420, 406, 747, 364, 3069, 445, 570, 264, 50758, 50758, 1002, 307, 885, 264, 1002, 13, 50894, 50894, 400, 300, 311, 264, 912, 1154, 321, 643, 281, 5039, 510, 11, 264, 2698, 12, 48172, 24420, 2539, 1154, 13, 51148, 51148, 400, 264, 2135, 2734, 307, 300, 264, 1002, 307, 406, 15957, 3142, 13, 51320, 51320, 1033, 11, 370, 300, 4684, 385, 281, 341, 3036, 295, 264, 1045, 13480, 328, 2592, 295, 2539, 498, 291, 528, 11, 29280, 51708, 51708, 2539, 11, 46533, 2539, 11, 293, 2698, 12, 48172, 24420, 2539, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.17003723373986723, "compression_ratio": 1.9592592592592593, "no_speech_prob": 2.752947148110252e-05}, {"id": 359, "seek": 122020, "start": 1230.8, "end": 1235.88, "text": " And that's the same problem we need to solve here, the self-supervised learning problem.", "tokens": [50364, 663, 2316, 486, 362, 281, 312, 3264, 365, 2698, 12, 48172, 24420, 2539, 1936, 13, 50532, 50532, 1692, 307, 264, 1785, 295, 264, 1002, 13, 50582, 50582, 961, 385, 747, 364, 3069, 293, 536, 437, 264, 1874, 307, 420, 406, 747, 364, 3069, 445, 570, 264, 50758, 50758, 1002, 307, 885, 264, 1002, 13, 50894, 50894, 400, 300, 311, 264, 912, 1154, 321, 643, 281, 5039, 510, 11, 264, 2698, 12, 48172, 24420, 2539, 1154, 13, 51148, 51148, 400, 264, 2135, 2734, 307, 300, 264, 1002, 307, 406, 15957, 3142, 13, 51320, 51320, 1033, 11, 370, 300, 4684, 385, 281, 341, 3036, 295, 264, 1045, 13480, 328, 2592, 295, 2539, 498, 291, 528, 11, 29280, 51708, 51708, 2539, 11, 46533, 2539, 11, 293, 2698, 12, 48172, 24420, 2539, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.17003723373986723, "compression_ratio": 1.9592592592592593, "no_speech_prob": 2.752947148110252e-05}, {"id": 360, "seek": 122020, "start": 1235.88, "end": 1239.32, "text": " And the main issue is that the world is not deterministic.", "tokens": [50364, 663, 2316, 486, 362, 281, 312, 3264, 365, 2698, 12, 48172, 24420, 2539, 1936, 13, 50532, 50532, 1692, 307, 264, 1785, 295, 264, 1002, 13, 50582, 50582, 961, 385, 747, 364, 3069, 293, 536, 437, 264, 1874, 307, 420, 406, 747, 364, 3069, 445, 570, 264, 50758, 50758, 1002, 307, 885, 264, 1002, 13, 50894, 50894, 400, 300, 311, 264, 912, 1154, 321, 643, 281, 5039, 510, 11, 264, 2698, 12, 48172, 24420, 2539, 1154, 13, 51148, 51148, 400, 264, 2135, 2734, 307, 300, 264, 1002, 307, 406, 15957, 3142, 13, 51320, 51320, 1033, 11, 370, 300, 4684, 385, 281, 341, 3036, 295, 264, 1045, 13480, 328, 2592, 295, 2539, 498, 291, 528, 11, 29280, 51708, 51708, 2539, 11, 46533, 2539, 11, 293, 2698, 12, 48172, 24420, 2539, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.17003723373986723, "compression_ratio": 1.9592592592592593, "no_speech_prob": 2.752947148110252e-05}, {"id": 361, "seek": 122020, "start": 1239.32, "end": 1247.0800000000002, "text": " Okay, so that led me to this picture of the three paradigms of learning if you want, reinforcement", "tokens": [50364, 663, 2316, 486, 362, 281, 312, 3264, 365, 2698, 12, 48172, 24420, 2539, 1936, 13, 50532, 50532, 1692, 307, 264, 1785, 295, 264, 1002, 13, 50582, 50582, 961, 385, 747, 364, 3069, 293, 536, 437, 264, 1874, 307, 420, 406, 747, 364, 3069, 445, 570, 264, 50758, 50758, 1002, 307, 885, 264, 1002, 13, 50894, 50894, 400, 300, 311, 264, 912, 1154, 321, 643, 281, 5039, 510, 11, 264, 2698, 12, 48172, 24420, 2539, 1154, 13, 51148, 51148, 400, 264, 2135, 2734, 307, 300, 264, 1002, 307, 406, 15957, 3142, 13, 51320, 51320, 1033, 11, 370, 300, 4684, 385, 281, 341, 3036, 295, 264, 1045, 13480, 328, 2592, 295, 2539, 498, 291, 528, 11, 29280, 51708, 51708, 2539, 11, 46533, 2539, 11, 293, 2698, 12, 48172, 24420, 2539, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.17003723373986723, "compression_ratio": 1.9592592592592593, "no_speech_prob": 2.752947148110252e-05}, {"id": 362, "seek": 122020, "start": 1247.0800000000002, "end": 1248.8400000000001, "text": " learning, supervised learning, and self-supervised learning.", "tokens": [50364, 663, 2316, 486, 362, 281, 312, 3264, 365, 2698, 12, 48172, 24420, 2539, 1936, 13, 50532, 50532, 1692, 307, 264, 1785, 295, 264, 1002, 13, 50582, 50582, 961, 385, 747, 364, 3069, 293, 536, 437, 264, 1874, 307, 420, 406, 747, 364, 3069, 445, 570, 264, 50758, 50758, 1002, 307, 885, 264, 1002, 13, 50894, 50894, 400, 300, 311, 264, 912, 1154, 321, 643, 281, 5039, 510, 11, 264, 2698, 12, 48172, 24420, 2539, 1154, 13, 51148, 51148, 400, 264, 2135, 2734, 307, 300, 264, 1002, 307, 406, 15957, 3142, 13, 51320, 51320, 1033, 11, 370, 300, 4684, 385, 281, 341, 3036, 295, 264, 1045, 13480, 328, 2592, 295, 2539, 498, 291, 528, 11, 29280, 51708, 51708, 2539, 11, 46533, 2539, 11, 293, 2698, 12, 48172, 24420, 2539, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.17003723373986723, "compression_ratio": 1.9592592592592593, "no_speech_prob": 2.752947148110252e-05}, {"id": 363, "seek": 124884, "start": 1248.84, "end": 1254.32, "text": " And the difference is how much feedback information you give to the system at every trial or every", "tokens": [50364, 400, 264, 2649, 307, 577, 709, 5824, 1589, 291, 976, 281, 264, 1185, 412, 633, 7308, 420, 633, 50638, 50638, 6889, 13, 50688, 50688, 1692, 307, 445, 472, 39684, 13, 50738, 50738, 1692, 307, 445, 257, 1326, 9239, 680, 6889, 13, 50894, 50894, 400, 510, 309, 311, 1936, 257, 1379, 960, 11, 558, 30, 51058, 51058, 467, 311, 257, 2603, 2372, 295, 1589, 291, 976, 281, 264, 3479, 13, 51184, 51184, 407, 264, 1454, 307, 300, 291, 393, 3847, 26800, 9590, 1553, 552, 885, 11, 291, 458, 11, 41358, 51410, 51410, 670, 2181, 335, 2398, 1602, 13, 51460, 51460, 400, 436, 486, 1466, 257, 688, 295, 264, 3877, 295, 264, 1002, 445, 538, 14816, 1553, 767, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.13294264475504558, "compression_ratio": 1.7545787545787546, "no_speech_prob": 7.410303169308463e-06}, {"id": 364, "seek": 124884, "start": 1254.32, "end": 1255.32, "text": " sample.", "tokens": [50364, 400, 264, 2649, 307, 577, 709, 5824, 1589, 291, 976, 281, 264, 1185, 412, 633, 7308, 420, 633, 50638, 50638, 6889, 13, 50688, 50688, 1692, 307, 445, 472, 39684, 13, 50738, 50738, 1692, 307, 445, 257, 1326, 9239, 680, 6889, 13, 50894, 50894, 400, 510, 309, 311, 1936, 257, 1379, 960, 11, 558, 30, 51058, 51058, 467, 311, 257, 2603, 2372, 295, 1589, 291, 976, 281, 264, 3479, 13, 51184, 51184, 407, 264, 1454, 307, 300, 291, 393, 3847, 26800, 9590, 1553, 552, 885, 11, 291, 458, 11, 41358, 51410, 51410, 670, 2181, 335, 2398, 1602, 13, 51460, 51460, 400, 436, 486, 1466, 257, 688, 295, 264, 3877, 295, 264, 1002, 445, 538, 14816, 1553, 767, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.13294264475504558, "compression_ratio": 1.7545787545787546, "no_speech_prob": 7.410303169308463e-06}, {"id": 365, "seek": 124884, "start": 1255.32, "end": 1256.32, "text": " Here is just one scalar.", "tokens": [50364, 400, 264, 2649, 307, 577, 709, 5824, 1589, 291, 976, 281, 264, 1185, 412, 633, 7308, 420, 633, 50638, 50638, 6889, 13, 50688, 50688, 1692, 307, 445, 472, 39684, 13, 50738, 50738, 1692, 307, 445, 257, 1326, 9239, 680, 6889, 13, 50894, 50894, 400, 510, 309, 311, 1936, 257, 1379, 960, 11, 558, 30, 51058, 51058, 467, 311, 257, 2603, 2372, 295, 1589, 291, 976, 281, 264, 3479, 13, 51184, 51184, 407, 264, 1454, 307, 300, 291, 393, 3847, 26800, 9590, 1553, 552, 885, 11, 291, 458, 11, 41358, 51410, 51410, 670, 2181, 335, 2398, 1602, 13, 51460, 51460, 400, 436, 486, 1466, 257, 688, 295, 264, 3877, 295, 264, 1002, 445, 538, 14816, 1553, 767, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.13294264475504558, "compression_ratio": 1.7545787545787546, "no_speech_prob": 7.410303169308463e-06}, {"id": 366, "seek": 124884, "start": 1256.32, "end": 1259.4399999999998, "text": " Here is just a few bits per sample.", "tokens": [50364, 400, 264, 2649, 307, 577, 709, 5824, 1589, 291, 976, 281, 264, 1185, 412, 633, 7308, 420, 633, 50638, 50638, 6889, 13, 50688, 50688, 1692, 307, 445, 472, 39684, 13, 50738, 50738, 1692, 307, 445, 257, 1326, 9239, 680, 6889, 13, 50894, 50894, 400, 510, 309, 311, 1936, 257, 1379, 960, 11, 558, 30, 51058, 51058, 467, 311, 257, 2603, 2372, 295, 1589, 291, 976, 281, 264, 3479, 13, 51184, 51184, 407, 264, 1454, 307, 300, 291, 393, 3847, 26800, 9590, 1553, 552, 885, 11, 291, 458, 11, 41358, 51410, 51410, 670, 2181, 335, 2398, 1602, 13, 51460, 51460, 400, 436, 486, 1466, 257, 688, 295, 264, 3877, 295, 264, 1002, 445, 538, 14816, 1553, 767, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.13294264475504558, "compression_ratio": 1.7545787545787546, "no_speech_prob": 7.410303169308463e-06}, {"id": 367, "seek": 124884, "start": 1259.4399999999998, "end": 1262.72, "text": " And here it's basically a whole video, right?", "tokens": [50364, 400, 264, 2649, 307, 577, 709, 5824, 1589, 291, 976, 281, 264, 1185, 412, 633, 7308, 420, 633, 50638, 50638, 6889, 13, 50688, 50688, 1692, 307, 445, 472, 39684, 13, 50738, 50738, 1692, 307, 445, 257, 1326, 9239, 680, 6889, 13, 50894, 50894, 400, 510, 309, 311, 1936, 257, 1379, 960, 11, 558, 30, 51058, 51058, 467, 311, 257, 2603, 2372, 295, 1589, 291, 976, 281, 264, 3479, 13, 51184, 51184, 407, 264, 1454, 307, 300, 291, 393, 3847, 26800, 9590, 1553, 552, 885, 11, 291, 458, 11, 41358, 51410, 51410, 670, 2181, 335, 2398, 1602, 13, 51460, 51460, 400, 436, 486, 1466, 257, 688, 295, 264, 3877, 295, 264, 1002, 445, 538, 14816, 1553, 767, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.13294264475504558, "compression_ratio": 1.7545787545787546, "no_speech_prob": 7.410303169308463e-06}, {"id": 368, "seek": 124884, "start": 1262.72, "end": 1265.24, "text": " It's a huge amount of information you give to the machine.", "tokens": [50364, 400, 264, 2649, 307, 577, 709, 5824, 1589, 291, 976, 281, 264, 1185, 412, 633, 7308, 420, 633, 50638, 50638, 6889, 13, 50688, 50688, 1692, 307, 445, 472, 39684, 13, 50738, 50738, 1692, 307, 445, 257, 1326, 9239, 680, 6889, 13, 50894, 50894, 400, 510, 309, 311, 1936, 257, 1379, 960, 11, 558, 30, 51058, 51058, 467, 311, 257, 2603, 2372, 295, 1589, 291, 976, 281, 264, 3479, 13, 51184, 51184, 407, 264, 1454, 307, 300, 291, 393, 3847, 26800, 9590, 1553, 552, 885, 11, 291, 458, 11, 41358, 51410, 51410, 670, 2181, 335, 2398, 1602, 13, 51460, 51460, 400, 436, 486, 1466, 257, 688, 295, 264, 3877, 295, 264, 1002, 445, 538, 14816, 1553, 767, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.13294264475504558, "compression_ratio": 1.7545787545787546, "no_speech_prob": 7.410303169308463e-06}, {"id": 369, "seek": 124884, "start": 1265.24, "end": 1269.76, "text": " So the hope is that you can train gigantic networks without them being, you know, ridiculously", "tokens": [50364, 400, 264, 2649, 307, 577, 709, 5824, 1589, 291, 976, 281, 264, 1185, 412, 633, 7308, 420, 633, 50638, 50638, 6889, 13, 50688, 50688, 1692, 307, 445, 472, 39684, 13, 50738, 50738, 1692, 307, 445, 257, 1326, 9239, 680, 6889, 13, 50894, 50894, 400, 510, 309, 311, 1936, 257, 1379, 960, 11, 558, 30, 51058, 51058, 467, 311, 257, 2603, 2372, 295, 1589, 291, 976, 281, 264, 3479, 13, 51184, 51184, 407, 264, 1454, 307, 300, 291, 393, 3847, 26800, 9590, 1553, 552, 885, 11, 291, 458, 11, 41358, 51410, 51410, 670, 2181, 335, 2398, 1602, 13, 51460, 51460, 400, 436, 486, 1466, 257, 688, 295, 264, 3877, 295, 264, 1002, 445, 538, 14816, 1553, 767, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.13294264475504558, "compression_ratio": 1.7545787545787546, "no_speech_prob": 7.410303169308463e-06}, {"id": 370, "seek": 124884, "start": 1269.76, "end": 1270.76, "text": " overparameterized.", "tokens": [50364, 400, 264, 2649, 307, 577, 709, 5824, 1589, 291, 976, 281, 264, 1185, 412, 633, 7308, 420, 633, 50638, 50638, 6889, 13, 50688, 50688, 1692, 307, 445, 472, 39684, 13, 50738, 50738, 1692, 307, 445, 257, 1326, 9239, 680, 6889, 13, 50894, 50894, 400, 510, 309, 311, 1936, 257, 1379, 960, 11, 558, 30, 51058, 51058, 467, 311, 257, 2603, 2372, 295, 1589, 291, 976, 281, 264, 3479, 13, 51184, 51184, 407, 264, 1454, 307, 300, 291, 393, 3847, 26800, 9590, 1553, 552, 885, 11, 291, 458, 11, 41358, 51410, 51410, 670, 2181, 335, 2398, 1602, 13, 51460, 51460, 400, 436, 486, 1466, 257, 688, 295, 264, 3877, 295, 264, 1002, 445, 538, 14816, 1553, 767, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.13294264475504558, "compression_ratio": 1.7545787545787546, "no_speech_prob": 7.410303169308463e-06}, {"id": 371, "seek": 124884, "start": 1270.76, "end": 1274.34, "text": " And they will learn a lot of the structure of the world just by observation without actually", "tokens": [50364, 400, 264, 2649, 307, 577, 709, 5824, 1589, 291, 976, 281, 264, 1185, 412, 633, 7308, 420, 633, 50638, 50638, 6889, 13, 50688, 50688, 1692, 307, 445, 472, 39684, 13, 50738, 50738, 1692, 307, 445, 257, 1326, 9239, 680, 6889, 13, 50894, 50894, 400, 510, 309, 311, 1936, 257, 1379, 960, 11, 558, 30, 51058, 51058, 467, 311, 257, 2603, 2372, 295, 1589, 291, 976, 281, 264, 3479, 13, 51184, 51184, 407, 264, 1454, 307, 300, 291, 393, 3847, 26800, 9590, 1553, 552, 885, 11, 291, 458, 11, 41358, 51410, 51410, 670, 2181, 335, 2398, 1602, 13, 51460, 51460, 400, 436, 486, 1466, 257, 688, 295, 264, 3877, 295, 264, 1002, 445, 538, 14816, 1553, 767, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.13294264475504558, "compression_ratio": 1.7545787545787546, "no_speech_prob": 7.410303169308463e-06}, {"id": 372, "seek": 127434, "start": 1274.34, "end": 1278.9199999999998, "text": " taking any risk and without you spending money collecting labels.", "tokens": [50364, 1940, 604, 3148, 293, 1553, 291, 6434, 1460, 12510, 16949, 13, 50593, 50593, 663, 311, 1391, 577, 6255, 293, 4882, 1466, 370, 709, 13, 50749, 50749, 663, 1062, 312, 577, 2689, 2020, 38965, 11, 558, 30, 50893, 50893, 440, 35647, 295, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 321, 33384, 51099, 51099, 538, 14816, 11, 300, 311, 264, 5143, 295, 2689, 2020, 4476, 13, 51335, 51335, 407, 321, 643, 281, 483, 8379, 281, 360, 341, 13, 51499, 51499, 400, 337, 11, 286, 914, 11, 286, 600, 668, 32050, 337, 341, 337, 257, 1339, 293, 11, 291, 458, 11, 1027, 729, 51759, 51759], "temperature": 0.0, "avg_logprob": -0.15282957130503433, "compression_ratio": 1.6383763837638377, "no_speech_prob": 2.6424863790452946e-06}, {"id": 373, "seek": 127434, "start": 1278.9199999999998, "end": 1282.04, "text": " That's probably how humans and animals learn so much.", "tokens": [50364, 1940, 604, 3148, 293, 1553, 291, 6434, 1460, 12510, 16949, 13, 50593, 50593, 663, 311, 1391, 577, 6255, 293, 4882, 1466, 370, 709, 13, 50749, 50749, 663, 1062, 312, 577, 2689, 2020, 38965, 11, 558, 30, 50893, 50893, 440, 35647, 295, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 321, 33384, 51099, 51099, 538, 14816, 11, 300, 311, 264, 5143, 295, 2689, 2020, 4476, 13, 51335, 51335, 407, 321, 643, 281, 483, 8379, 281, 360, 341, 13, 51499, 51499, 400, 337, 11, 286, 914, 11, 286, 600, 668, 32050, 337, 341, 337, 257, 1339, 293, 11, 291, 458, 11, 1027, 729, 51759, 51759], "temperature": 0.0, "avg_logprob": -0.15282957130503433, "compression_ratio": 1.6383763837638377, "no_speech_prob": 2.6424863790452946e-06}, {"id": 374, "seek": 127434, "start": 1282.04, "end": 1284.9199999999998, "text": " That might be how common sense emerges, right?", "tokens": [50364, 1940, 604, 3148, 293, 1553, 291, 6434, 1460, 12510, 16949, 13, 50593, 50593, 663, 311, 1391, 577, 6255, 293, 4882, 1466, 370, 709, 13, 50749, 50749, 663, 1062, 312, 577, 2689, 2020, 38965, 11, 558, 30, 50893, 50893, 440, 35647, 295, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 321, 33384, 51099, 51099, 538, 14816, 11, 300, 311, 264, 5143, 295, 2689, 2020, 4476, 13, 51335, 51335, 407, 321, 643, 281, 483, 8379, 281, 360, 341, 13, 51499, 51499, 400, 337, 11, 286, 914, 11, 286, 600, 668, 32050, 337, 341, 337, 257, 1339, 293, 11, 291, 458, 11, 1027, 729, 51759, 51759], "temperature": 0.0, "avg_logprob": -0.15282957130503433, "compression_ratio": 1.6383763837638377, "no_speech_prob": 2.6424863790452946e-06}, {"id": 375, "seek": 127434, "start": 1284.9199999999998, "end": 1289.04, "text": " The accumulation of all the background knowledge we have about the world that we accumulate", "tokens": [50364, 1940, 604, 3148, 293, 1553, 291, 6434, 1460, 12510, 16949, 13, 50593, 50593, 663, 311, 1391, 577, 6255, 293, 4882, 1466, 370, 709, 13, 50749, 50749, 663, 1062, 312, 577, 2689, 2020, 38965, 11, 558, 30, 50893, 50893, 440, 35647, 295, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 321, 33384, 51099, 51099, 538, 14816, 11, 300, 311, 264, 5143, 295, 2689, 2020, 4476, 13, 51335, 51335, 407, 321, 643, 281, 483, 8379, 281, 360, 341, 13, 51499, 51499, 400, 337, 11, 286, 914, 11, 286, 600, 668, 32050, 337, 341, 337, 257, 1339, 293, 11, 291, 458, 11, 1027, 729, 51759, 51759], "temperature": 0.0, "avg_logprob": -0.15282957130503433, "compression_ratio": 1.6383763837638377, "no_speech_prob": 2.6424863790452946e-06}, {"id": 376, "seek": 127434, "start": 1289.04, "end": 1293.76, "text": " by observation, that's the basis of common sense essentially.", "tokens": [50364, 1940, 604, 3148, 293, 1553, 291, 6434, 1460, 12510, 16949, 13, 50593, 50593, 663, 311, 1391, 577, 6255, 293, 4882, 1466, 370, 709, 13, 50749, 50749, 663, 1062, 312, 577, 2689, 2020, 38965, 11, 558, 30, 50893, 50893, 440, 35647, 295, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 321, 33384, 51099, 51099, 538, 14816, 11, 300, 311, 264, 5143, 295, 2689, 2020, 4476, 13, 51335, 51335, 407, 321, 643, 281, 483, 8379, 281, 360, 341, 13, 51499, 51499, 400, 337, 11, 286, 914, 11, 286, 600, 668, 32050, 337, 341, 337, 257, 1339, 293, 11, 291, 458, 11, 1027, 729, 51759, 51759], "temperature": 0.0, "avg_logprob": -0.15282957130503433, "compression_ratio": 1.6383763837638377, "no_speech_prob": 2.6424863790452946e-06}, {"id": 377, "seek": 127434, "start": 1293.76, "end": 1297.04, "text": " So we need to get machines to do this.", "tokens": [50364, 1940, 604, 3148, 293, 1553, 291, 6434, 1460, 12510, 16949, 13, 50593, 50593, 663, 311, 1391, 577, 6255, 293, 4882, 1466, 370, 709, 13, 50749, 50749, 663, 1062, 312, 577, 2689, 2020, 38965, 11, 558, 30, 50893, 50893, 440, 35647, 295, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 321, 33384, 51099, 51099, 538, 14816, 11, 300, 311, 264, 5143, 295, 2689, 2020, 4476, 13, 51335, 51335, 407, 321, 643, 281, 483, 8379, 281, 360, 341, 13, 51499, 51499, 400, 337, 11, 286, 914, 11, 286, 600, 668, 32050, 337, 341, 337, 257, 1339, 293, 11, 291, 458, 11, 1027, 729, 51759, 51759], "temperature": 0.0, "avg_logprob": -0.15282957130503433, "compression_ratio": 1.6383763837638377, "no_speech_prob": 2.6424863790452946e-06}, {"id": 378, "seek": 127434, "start": 1297.04, "end": 1302.24, "text": " And for, I mean, I've been advocating for this for a while and, you know, made those", "tokens": [50364, 1940, 604, 3148, 293, 1553, 291, 6434, 1460, 12510, 16949, 13, 50593, 50593, 663, 311, 1391, 577, 6255, 293, 4882, 1466, 370, 709, 13, 50749, 50749, 663, 1062, 312, 577, 2689, 2020, 38965, 11, 558, 30, 50893, 50893, 440, 35647, 295, 439, 264, 3678, 3601, 321, 362, 466, 264, 1002, 300, 321, 33384, 51099, 51099, 538, 14816, 11, 300, 311, 264, 5143, 295, 2689, 2020, 4476, 13, 51335, 51335, 407, 321, 643, 281, 483, 8379, 281, 360, 341, 13, 51499, 51499, 400, 337, 11, 286, 914, 11, 286, 600, 668, 32050, 337, 341, 337, 257, 1339, 293, 11, 291, 458, 11, 1027, 729, 51759, 51759], "temperature": 0.0, "avg_logprob": -0.15282957130503433, "compression_ratio": 1.6383763837638377, "no_speech_prob": 2.6424863790452946e-06}, {"id": 379, "seek": 130224, "start": 1302.24, "end": 1308.32, "text": " obnoxious, you know, slides about reinforcement learning being a cherry on the cake of machine", "tokens": [50364, 1111, 29129, 851, 11, 291, 458, 11, 9788, 466, 29280, 2539, 885, 257, 20164, 322, 264, 5908, 295, 3479, 50668, 50668, 2539, 13, 50718, 50718, 400, 2698, 12, 48172, 24420, 2539, 885, 264, 2877, 1871, 295, 7318, 13, 50990, 50990, 492, 500, 380, 458, 437, 309, 307, 13, 51040, 51040, 467, 311, 767, 264, 2877, 2281, 544, 11, 291, 458, 11, 309, 311, 881, 295, 264, 2281, 13, 51212, 51212, 1033, 11, 370, 264, 958, 8894, 294, 7318, 486, 406, 312, 46533, 11, 486, 406, 312, 31365, 2139, 13, 51452, 51452, 286, 1866, 341, 490, 2039, 73, 4812, 7891, 64, 462, 5779, 329, 13, 51602, 51602, 1222, 13532, 11, 508, 270, 27332, 5746, 1035, 11, 567, 311, 490, 23684, 11, 611, 412, 4384, 1619, 16949, 366, 264, 999, 2197, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.276561134739926, "compression_ratio": 1.63013698630137, "no_speech_prob": 1.1477080079203006e-05}, {"id": 380, "seek": 130224, "start": 1308.32, "end": 1309.32, "text": " learning.", "tokens": [50364, 1111, 29129, 851, 11, 291, 458, 11, 9788, 466, 29280, 2539, 885, 257, 20164, 322, 264, 5908, 295, 3479, 50668, 50668, 2539, 13, 50718, 50718, 400, 2698, 12, 48172, 24420, 2539, 885, 264, 2877, 1871, 295, 7318, 13, 50990, 50990, 492, 500, 380, 458, 437, 309, 307, 13, 51040, 51040, 467, 311, 767, 264, 2877, 2281, 544, 11, 291, 458, 11, 309, 311, 881, 295, 264, 2281, 13, 51212, 51212, 1033, 11, 370, 264, 958, 8894, 294, 7318, 486, 406, 312, 46533, 11, 486, 406, 312, 31365, 2139, 13, 51452, 51452, 286, 1866, 341, 490, 2039, 73, 4812, 7891, 64, 462, 5779, 329, 13, 51602, 51602, 1222, 13532, 11, 508, 270, 27332, 5746, 1035, 11, 567, 311, 490, 23684, 11, 611, 412, 4384, 1619, 16949, 366, 264, 999, 2197, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.276561134739926, "compression_ratio": 1.63013698630137, "no_speech_prob": 1.1477080079203006e-05}, {"id": 381, "seek": 130224, "start": 1309.32, "end": 1314.76, "text": " And self-supervised learning being the dark matter of AI.", "tokens": [50364, 1111, 29129, 851, 11, 291, 458, 11, 9788, 466, 29280, 2539, 885, 257, 20164, 322, 264, 5908, 295, 3479, 50668, 50668, 2539, 13, 50718, 50718, 400, 2698, 12, 48172, 24420, 2539, 885, 264, 2877, 1871, 295, 7318, 13, 50990, 50990, 492, 500, 380, 458, 437, 309, 307, 13, 51040, 51040, 467, 311, 767, 264, 2877, 2281, 544, 11, 291, 458, 11, 309, 311, 881, 295, 264, 2281, 13, 51212, 51212, 1033, 11, 370, 264, 958, 8894, 294, 7318, 486, 406, 312, 46533, 11, 486, 406, 312, 31365, 2139, 13, 51452, 51452, 286, 1866, 341, 490, 2039, 73, 4812, 7891, 64, 462, 5779, 329, 13, 51602, 51602, 1222, 13532, 11, 508, 270, 27332, 5746, 1035, 11, 567, 311, 490, 23684, 11, 611, 412, 4384, 1619, 16949, 366, 264, 999, 2197, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.276561134739926, "compression_ratio": 1.63013698630137, "no_speech_prob": 1.1477080079203006e-05}, {"id": 382, "seek": 130224, "start": 1314.76, "end": 1315.76, "text": " We don't know what it is.", "tokens": [50364, 1111, 29129, 851, 11, 291, 458, 11, 9788, 466, 29280, 2539, 885, 257, 20164, 322, 264, 5908, 295, 3479, 50668, 50668, 2539, 13, 50718, 50718, 400, 2698, 12, 48172, 24420, 2539, 885, 264, 2877, 1871, 295, 7318, 13, 50990, 50990, 492, 500, 380, 458, 437, 309, 307, 13, 51040, 51040, 467, 311, 767, 264, 2877, 2281, 544, 11, 291, 458, 11, 309, 311, 881, 295, 264, 2281, 13, 51212, 51212, 1033, 11, 370, 264, 958, 8894, 294, 7318, 486, 406, 312, 46533, 11, 486, 406, 312, 31365, 2139, 13, 51452, 51452, 286, 1866, 341, 490, 2039, 73, 4812, 7891, 64, 462, 5779, 329, 13, 51602, 51602, 1222, 13532, 11, 508, 270, 27332, 5746, 1035, 11, 567, 311, 490, 23684, 11, 611, 412, 4384, 1619, 16949, 366, 264, 999, 2197, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.276561134739926, "compression_ratio": 1.63013698630137, "no_speech_prob": 1.1477080079203006e-05}, {"id": 383, "seek": 130224, "start": 1315.76, "end": 1319.2, "text": " It's actually the dark energy more, you know, it's most of the energy.", "tokens": [50364, 1111, 29129, 851, 11, 291, 458, 11, 9788, 466, 29280, 2539, 885, 257, 20164, 322, 264, 5908, 295, 3479, 50668, 50668, 2539, 13, 50718, 50718, 400, 2698, 12, 48172, 24420, 2539, 885, 264, 2877, 1871, 295, 7318, 13, 50990, 50990, 492, 500, 380, 458, 437, 309, 307, 13, 51040, 51040, 467, 311, 767, 264, 2877, 2281, 544, 11, 291, 458, 11, 309, 311, 881, 295, 264, 2281, 13, 51212, 51212, 1033, 11, 370, 264, 958, 8894, 294, 7318, 486, 406, 312, 46533, 11, 486, 406, 312, 31365, 2139, 13, 51452, 51452, 286, 1866, 341, 490, 2039, 73, 4812, 7891, 64, 462, 5779, 329, 13, 51602, 51602, 1222, 13532, 11, 508, 270, 27332, 5746, 1035, 11, 567, 311, 490, 23684, 11, 611, 412, 4384, 1619, 16949, 366, 264, 999, 2197, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.276561134739926, "compression_ratio": 1.63013698630137, "no_speech_prob": 1.1477080079203006e-05}, {"id": 384, "seek": 130224, "start": 1319.2, "end": 1324.0, "text": " Okay, so the next revolution in AI will not be supervised, will not be reinforced either.", "tokens": [50364, 1111, 29129, 851, 11, 291, 458, 11, 9788, 466, 29280, 2539, 885, 257, 20164, 322, 264, 5908, 295, 3479, 50668, 50668, 2539, 13, 50718, 50718, 400, 2698, 12, 48172, 24420, 2539, 885, 264, 2877, 1871, 295, 7318, 13, 50990, 50990, 492, 500, 380, 458, 437, 309, 307, 13, 51040, 51040, 467, 311, 767, 264, 2877, 2281, 544, 11, 291, 458, 11, 309, 311, 881, 295, 264, 2281, 13, 51212, 51212, 1033, 11, 370, 264, 958, 8894, 294, 7318, 486, 406, 312, 46533, 11, 486, 406, 312, 31365, 2139, 13, 51452, 51452, 286, 1866, 341, 490, 2039, 73, 4812, 7891, 64, 462, 5779, 329, 13, 51602, 51602, 1222, 13532, 11, 508, 270, 27332, 5746, 1035, 11, 567, 311, 490, 23684, 11, 611, 412, 4384, 1619, 16949, 366, 264, 999, 2197, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.276561134739926, "compression_ratio": 1.63013698630137, "no_speech_prob": 1.1477080079203006e-05}, {"id": 385, "seek": 130224, "start": 1324.0, "end": 1327.0, "text": " I saw this from Marjole\u0161a Efros.", "tokens": [50364, 1111, 29129, 851, 11, 291, 458, 11, 9788, 466, 29280, 2539, 885, 257, 20164, 322, 264, 5908, 295, 3479, 50668, 50668, 2539, 13, 50718, 50718, 400, 2698, 12, 48172, 24420, 2539, 885, 264, 2877, 1871, 295, 7318, 13, 50990, 50990, 492, 500, 380, 458, 437, 309, 307, 13, 51040, 51040, 467, 311, 767, 264, 2877, 2281, 544, 11, 291, 458, 11, 309, 311, 881, 295, 264, 2281, 13, 51212, 51212, 1033, 11, 370, 264, 958, 8894, 294, 7318, 486, 406, 312, 46533, 11, 486, 406, 312, 31365, 2139, 13, 51452, 51452, 286, 1866, 341, 490, 2039, 73, 4812, 7891, 64, 462, 5779, 329, 13, 51602, 51602, 1222, 13532, 11, 508, 270, 27332, 5746, 1035, 11, 567, 311, 490, 23684, 11, 611, 412, 4384, 1619, 16949, 366, 264, 999, 2197, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.276561134739926, "compression_ratio": 1.63013698630137, "no_speech_prob": 1.1477080079203006e-05}, {"id": 386, "seek": 130224, "start": 1327.0, "end": 1330.96, "text": " My colleague, Jitendra Malik, who's from Berkeley, also at Facebook says labels are the opium", "tokens": [50364, 1111, 29129, 851, 11, 291, 458, 11, 9788, 466, 29280, 2539, 885, 257, 20164, 322, 264, 5908, 295, 3479, 50668, 50668, 2539, 13, 50718, 50718, 400, 2698, 12, 48172, 24420, 2539, 885, 264, 2877, 1871, 295, 7318, 13, 50990, 50990, 492, 500, 380, 458, 437, 309, 307, 13, 51040, 51040, 467, 311, 767, 264, 2877, 2281, 544, 11, 291, 458, 11, 309, 311, 881, 295, 264, 2281, 13, 51212, 51212, 1033, 11, 370, 264, 958, 8894, 294, 7318, 486, 406, 312, 46533, 11, 486, 406, 312, 31365, 2139, 13, 51452, 51452, 286, 1866, 341, 490, 2039, 73, 4812, 7891, 64, 462, 5779, 329, 13, 51602, 51602, 1222, 13532, 11, 508, 270, 27332, 5746, 1035, 11, 567, 311, 490, 23684, 11, 611, 412, 4384, 1619, 16949, 366, 264, 999, 2197, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.276561134739926, "compression_ratio": 1.63013698630137, "no_speech_prob": 1.1477080079203006e-05}, {"id": 387, "seek": 133096, "start": 1330.96, "end": 1332.52, "text": " of the machine learning researcher.", "tokens": [50364, 295, 264, 3479, 2539, 21751, 13, 50442, 50442, 407, 291, 458, 11, 309, 311, 439, 411, 22687, 12363, 13, 50742, 50742, 400, 512, 6449, 767, 14725, 257, 256, 12, 15313, 300, 291, 393, 2256, 13, 50924, 50924, 1033, 11, 370, 300, 6689, 385, 281, 2281, 12, 6032, 5245, 11, 597, 534, 307, 257, 11494, 337, 577, 321, 3109, 51292, 51292, 341, 1154, 13, 51398, 51398, 407, 264, 2135, 1154, 307, 577, 360, 321, 6069, 365, 15697, 30, 51609, 51609], "temperature": 0.0, "avg_logprob": -0.15750116183434004, "compression_ratio": 1.4788732394366197, "no_speech_prob": 1.1296750017208979e-05}, {"id": 388, "seek": 133096, "start": 1332.52, "end": 1338.52, "text": " So you know, it's all like revolutionary statements.", "tokens": [50364, 295, 264, 3479, 2539, 21751, 13, 50442, 50442, 407, 291, 458, 11, 309, 311, 439, 411, 22687, 12363, 13, 50742, 50742, 400, 512, 6449, 767, 14725, 257, 256, 12, 15313, 300, 291, 393, 2256, 13, 50924, 50924, 1033, 11, 370, 300, 6689, 385, 281, 2281, 12, 6032, 5245, 11, 597, 534, 307, 257, 11494, 337, 577, 321, 3109, 51292, 51292, 341, 1154, 13, 51398, 51398, 407, 264, 2135, 1154, 307, 577, 360, 321, 6069, 365, 15697, 30, 51609, 51609], "temperature": 0.0, "avg_logprob": -0.15750116183434004, "compression_ratio": 1.4788732394366197, "no_speech_prob": 1.1296750017208979e-05}, {"id": 389, "seek": 133096, "start": 1338.52, "end": 1342.16, "text": " And some dude actually produces a t-shirt that you can buy.", "tokens": [50364, 295, 264, 3479, 2539, 21751, 13, 50442, 50442, 407, 291, 458, 11, 309, 311, 439, 411, 22687, 12363, 13, 50742, 50742, 400, 512, 6449, 767, 14725, 257, 256, 12, 15313, 300, 291, 393, 2256, 13, 50924, 50924, 1033, 11, 370, 300, 6689, 385, 281, 2281, 12, 6032, 5245, 11, 597, 534, 307, 257, 11494, 337, 577, 321, 3109, 51292, 51292, 341, 1154, 13, 51398, 51398, 407, 264, 2135, 1154, 307, 577, 360, 321, 6069, 365, 15697, 30, 51609, 51609], "temperature": 0.0, "avg_logprob": -0.15750116183434004, "compression_ratio": 1.4788732394366197, "no_speech_prob": 1.1296750017208979e-05}, {"id": 390, "seek": 133096, "start": 1342.16, "end": 1349.52, "text": " Okay, so that leads me to energy-based models, which really is a proposal for how we approach", "tokens": [50364, 295, 264, 3479, 2539, 21751, 13, 50442, 50442, 407, 291, 458, 11, 309, 311, 439, 411, 22687, 12363, 13, 50742, 50742, 400, 512, 6449, 767, 14725, 257, 256, 12, 15313, 300, 291, 393, 2256, 13, 50924, 50924, 1033, 11, 370, 300, 6689, 385, 281, 2281, 12, 6032, 5245, 11, 597, 534, 307, 257, 11494, 337, 577, 321, 3109, 51292, 51292, 341, 1154, 13, 51398, 51398, 407, 264, 2135, 1154, 307, 577, 360, 321, 6069, 365, 15697, 30, 51609, 51609], "temperature": 0.0, "avg_logprob": -0.15750116183434004, "compression_ratio": 1.4788732394366197, "no_speech_prob": 1.1296750017208979e-05}, {"id": 391, "seek": 133096, "start": 1349.52, "end": 1351.64, "text": " this problem.", "tokens": [50364, 295, 264, 3479, 2539, 21751, 13, 50442, 50442, 407, 291, 458, 11, 309, 311, 439, 411, 22687, 12363, 13, 50742, 50742, 400, 512, 6449, 767, 14725, 257, 256, 12, 15313, 300, 291, 393, 2256, 13, 50924, 50924, 1033, 11, 370, 300, 6689, 385, 281, 2281, 12, 6032, 5245, 11, 597, 534, 307, 257, 11494, 337, 577, 321, 3109, 51292, 51292, 341, 1154, 13, 51398, 51398, 407, 264, 2135, 1154, 307, 577, 360, 321, 6069, 365, 15697, 30, 51609, 51609], "temperature": 0.0, "avg_logprob": -0.15750116183434004, "compression_ratio": 1.4788732394366197, "no_speech_prob": 1.1296750017208979e-05}, {"id": 392, "seek": 133096, "start": 1351.64, "end": 1355.8600000000001, "text": " So the main problem is how do we predict with uncertainty?", "tokens": [50364, 295, 264, 3479, 2539, 21751, 13, 50442, 50442, 407, 291, 458, 11, 309, 311, 439, 411, 22687, 12363, 13, 50742, 50742, 400, 512, 6449, 767, 14725, 257, 256, 12, 15313, 300, 291, 393, 2256, 13, 50924, 50924, 1033, 11, 370, 300, 6689, 385, 281, 2281, 12, 6032, 5245, 11, 597, 534, 307, 257, 11494, 337, 577, 321, 3109, 51292, 51292, 341, 1154, 13, 51398, 51398, 407, 264, 2135, 1154, 307, 577, 360, 321, 6069, 365, 15697, 30, 51609, 51609], "temperature": 0.0, "avg_logprob": -0.15750116183434004, "compression_ratio": 1.4788732394366197, "no_speech_prob": 1.1296750017208979e-05}, {"id": 393, "seek": 135586, "start": 1355.86, "end": 1362.6399999999999, "text": " So if I do an experiment, I'll come back to this, if I do an experiment, which is I put", "tokens": [50364, 407, 498, 286, 360, 364, 5120, 11, 286, 603, 808, 646, 281, 341, 11, 498, 286, 360, 364, 5120, 11, 597, 307, 286, 829, 50703, 50703, 257, 3435, 322, 264, 3199, 293, 286, 718, 309, 352, 294, 257, 3456, 13, 50959, 50959, 400, 498, 286, 7149, 264, 5120, 3866, 1413, 11, 293, 309, 311, 406, 264, 912, 960, 7353, 11, 633, 565, 51171, 51171, 264, 3435, 486, 2100, 294, 257, 819, 3513, 13, 51281, 51281, 400, 498, 286, 1029, 291, 281, 6069, 437, 307, 516, 281, 312, 264, 1785, 295, 264, 1002, 294, 732, 3949, 11, 51497, 51497, 291, 393, 980, 300, 264, 3435, 307, 516, 281, 2100, 11, 457, 291, 393, 380, 980, 534, 294, 597, 3513, 11, 51635, 51635, 558, 11, 881, 295, 264, 565, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1383281187577681, "compression_ratio": 1.8053435114503817, "no_speech_prob": 3.7043071642983705e-05}, {"id": 394, "seek": 135586, "start": 1362.6399999999999, "end": 1367.76, "text": " a pen on the table and I let it go in a minute.", "tokens": [50364, 407, 498, 286, 360, 364, 5120, 11, 286, 603, 808, 646, 281, 341, 11, 498, 286, 360, 364, 5120, 11, 597, 307, 286, 829, 50703, 50703, 257, 3435, 322, 264, 3199, 293, 286, 718, 309, 352, 294, 257, 3456, 13, 50959, 50959, 400, 498, 286, 7149, 264, 5120, 3866, 1413, 11, 293, 309, 311, 406, 264, 912, 960, 7353, 11, 633, 565, 51171, 51171, 264, 3435, 486, 2100, 294, 257, 819, 3513, 13, 51281, 51281, 400, 498, 286, 1029, 291, 281, 6069, 437, 307, 516, 281, 312, 264, 1785, 295, 264, 1002, 294, 732, 3949, 11, 51497, 51497, 291, 393, 980, 300, 264, 3435, 307, 516, 281, 2100, 11, 457, 291, 393, 380, 980, 534, 294, 597, 3513, 11, 51635, 51635, 558, 11, 881, 295, 264, 565, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1383281187577681, "compression_ratio": 1.8053435114503817, "no_speech_prob": 3.7043071642983705e-05}, {"id": 395, "seek": 135586, "start": 1367.76, "end": 1372.0, "text": " And if I repeat the experiment multiple times, and it's not the same video clip, every time", "tokens": [50364, 407, 498, 286, 360, 364, 5120, 11, 286, 603, 808, 646, 281, 341, 11, 498, 286, 360, 364, 5120, 11, 597, 307, 286, 829, 50703, 50703, 257, 3435, 322, 264, 3199, 293, 286, 718, 309, 352, 294, 257, 3456, 13, 50959, 50959, 400, 498, 286, 7149, 264, 5120, 3866, 1413, 11, 293, 309, 311, 406, 264, 912, 960, 7353, 11, 633, 565, 51171, 51171, 264, 3435, 486, 2100, 294, 257, 819, 3513, 13, 51281, 51281, 400, 498, 286, 1029, 291, 281, 6069, 437, 307, 516, 281, 312, 264, 1785, 295, 264, 1002, 294, 732, 3949, 11, 51497, 51497, 291, 393, 980, 300, 264, 3435, 307, 516, 281, 2100, 11, 457, 291, 393, 380, 980, 534, 294, 597, 3513, 11, 51635, 51635, 558, 11, 881, 295, 264, 565, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1383281187577681, "compression_ratio": 1.8053435114503817, "no_speech_prob": 3.7043071642983705e-05}, {"id": 396, "seek": 135586, "start": 1372.0, "end": 1374.1999999999998, "text": " the pen will fall in a different direction.", "tokens": [50364, 407, 498, 286, 360, 364, 5120, 11, 286, 603, 808, 646, 281, 341, 11, 498, 286, 360, 364, 5120, 11, 597, 307, 286, 829, 50703, 50703, 257, 3435, 322, 264, 3199, 293, 286, 718, 309, 352, 294, 257, 3456, 13, 50959, 50959, 400, 498, 286, 7149, 264, 5120, 3866, 1413, 11, 293, 309, 311, 406, 264, 912, 960, 7353, 11, 633, 565, 51171, 51171, 264, 3435, 486, 2100, 294, 257, 819, 3513, 13, 51281, 51281, 400, 498, 286, 1029, 291, 281, 6069, 437, 307, 516, 281, 312, 264, 1785, 295, 264, 1002, 294, 732, 3949, 11, 51497, 51497, 291, 393, 980, 300, 264, 3435, 307, 516, 281, 2100, 11, 457, 291, 393, 380, 980, 534, 294, 597, 3513, 11, 51635, 51635, 558, 11, 881, 295, 264, 565, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1383281187577681, "compression_ratio": 1.8053435114503817, "no_speech_prob": 3.7043071642983705e-05}, {"id": 397, "seek": 135586, "start": 1374.1999999999998, "end": 1378.52, "text": " And if I ask you to predict what is going to be the state of the world in two seconds,", "tokens": [50364, 407, 498, 286, 360, 364, 5120, 11, 286, 603, 808, 646, 281, 341, 11, 498, 286, 360, 364, 5120, 11, 597, 307, 286, 829, 50703, 50703, 257, 3435, 322, 264, 3199, 293, 286, 718, 309, 352, 294, 257, 3456, 13, 50959, 50959, 400, 498, 286, 7149, 264, 5120, 3866, 1413, 11, 293, 309, 311, 406, 264, 912, 960, 7353, 11, 633, 565, 51171, 51171, 264, 3435, 486, 2100, 294, 257, 819, 3513, 13, 51281, 51281, 400, 498, 286, 1029, 291, 281, 6069, 437, 307, 516, 281, 312, 264, 1785, 295, 264, 1002, 294, 732, 3949, 11, 51497, 51497, 291, 393, 980, 300, 264, 3435, 307, 516, 281, 2100, 11, 457, 291, 393, 380, 980, 534, 294, 597, 3513, 11, 51635, 51635, 558, 11, 881, 295, 264, 565, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1383281187577681, "compression_ratio": 1.8053435114503817, "no_speech_prob": 3.7043071642983705e-05}, {"id": 398, "seek": 135586, "start": 1378.52, "end": 1381.28, "text": " you can tell that the pen is going to fall, but you can't tell really in which direction,", "tokens": [50364, 407, 498, 286, 360, 364, 5120, 11, 286, 603, 808, 646, 281, 341, 11, 498, 286, 360, 364, 5120, 11, 597, 307, 286, 829, 50703, 50703, 257, 3435, 322, 264, 3199, 293, 286, 718, 309, 352, 294, 257, 3456, 13, 50959, 50959, 400, 498, 286, 7149, 264, 5120, 3866, 1413, 11, 293, 309, 311, 406, 264, 912, 960, 7353, 11, 633, 565, 51171, 51171, 264, 3435, 486, 2100, 294, 257, 819, 3513, 13, 51281, 51281, 400, 498, 286, 1029, 291, 281, 6069, 437, 307, 516, 281, 312, 264, 1785, 295, 264, 1002, 294, 732, 3949, 11, 51497, 51497, 291, 393, 980, 300, 264, 3435, 307, 516, 281, 2100, 11, 457, 291, 393, 380, 980, 534, 294, 597, 3513, 11, 51635, 51635, 558, 11, 881, 295, 264, 565, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1383281187577681, "compression_ratio": 1.8053435114503817, "no_speech_prob": 3.7043071642983705e-05}, {"id": 399, "seek": 135586, "start": 1381.28, "end": 1384.02, "text": " right, most of the time.", "tokens": [50364, 407, 498, 286, 360, 364, 5120, 11, 286, 603, 808, 646, 281, 341, 11, 498, 286, 360, 364, 5120, 11, 597, 307, 286, 829, 50703, 50703, 257, 3435, 322, 264, 3199, 293, 286, 718, 309, 352, 294, 257, 3456, 13, 50959, 50959, 400, 498, 286, 7149, 264, 5120, 3866, 1413, 11, 293, 309, 311, 406, 264, 912, 960, 7353, 11, 633, 565, 51171, 51171, 264, 3435, 486, 2100, 294, 257, 819, 3513, 13, 51281, 51281, 400, 498, 286, 1029, 291, 281, 6069, 437, 307, 516, 281, 312, 264, 1785, 295, 264, 1002, 294, 732, 3949, 11, 51497, 51497, 291, 393, 980, 300, 264, 3435, 307, 516, 281, 2100, 11, 457, 291, 393, 380, 980, 534, 294, 597, 3513, 11, 51635, 51635, 558, 11, 881, 295, 264, 565, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1383281187577681, "compression_ratio": 1.8053435114503817, "no_speech_prob": 3.7043071642983705e-05}, {"id": 400, "seek": 138402, "start": 1384.02, "end": 1389.04, "text": " So if you train a deterministic function to make one prediction, the best thing you can", "tokens": [50364, 407, 498, 291, 3847, 257, 15957, 3142, 2445, 281, 652, 472, 17630, 11, 264, 1151, 551, 291, 393, 50615, 50615, 360, 307, 6069, 264, 4274, 295, 439, 264, 1944, 4122, 11, 597, 576, 312, 257, 12737, 3435, 11, 50787, 50787, 291, 458, 11, 1944, 31493, 13, 50873, 50873, 400, 498, 291, 767, 360, 341, 11, 291, 3847, 257, 1185, 281, 6069, 960, 12083, 13, 51119, 51119, 1692, 264, 700, 3920, 11, 264, 700, 1451, 12083, 295, 264, 2145, 366, 13095, 11, 264, 1036, 732, 366, 51299, 51299, 19147, 11, 291, 483, 37644, 21264, 13, 51381, 51381, 814, 434, 1936, 264, 4274, 295, 439, 264, 1507, 300, 727, 1051, 13, 51509, 51509, 400, 550, 8379, 393, 4536, 597, 472, 13, 51587, 51587, 467, 575, 281, 652, 472, 17630, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.2202044833790172, "compression_ratio": 1.896551724137931, "no_speech_prob": 8.394639735342935e-06}, {"id": 401, "seek": 138402, "start": 1389.04, "end": 1392.48, "text": " do is predict the average of all the possible features, which would be a transparent pen,", "tokens": [50364, 407, 498, 291, 3847, 257, 15957, 3142, 2445, 281, 652, 472, 17630, 11, 264, 1151, 551, 291, 393, 50615, 50615, 360, 307, 6069, 264, 4274, 295, 439, 264, 1944, 4122, 11, 597, 576, 312, 257, 12737, 3435, 11, 50787, 50787, 291, 458, 11, 1944, 31493, 13, 50873, 50873, 400, 498, 291, 767, 360, 341, 11, 291, 3847, 257, 1185, 281, 6069, 960, 12083, 13, 51119, 51119, 1692, 264, 700, 3920, 11, 264, 700, 1451, 12083, 295, 264, 2145, 366, 13095, 11, 264, 1036, 732, 366, 51299, 51299, 19147, 11, 291, 483, 37644, 21264, 13, 51381, 51381, 814, 434, 1936, 264, 4274, 295, 439, 264, 1507, 300, 727, 1051, 13, 51509, 51509, 400, 550, 8379, 393, 4536, 597, 472, 13, 51587, 51587, 467, 575, 281, 652, 472, 17630, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.2202044833790172, "compression_ratio": 1.896551724137931, "no_speech_prob": 8.394639735342935e-06}, {"id": 402, "seek": 138402, "start": 1392.48, "end": 1394.2, "text": " you know, possible configurations.", "tokens": [50364, 407, 498, 291, 3847, 257, 15957, 3142, 2445, 281, 652, 472, 17630, 11, 264, 1151, 551, 291, 393, 50615, 50615, 360, 307, 6069, 264, 4274, 295, 439, 264, 1944, 4122, 11, 597, 576, 312, 257, 12737, 3435, 11, 50787, 50787, 291, 458, 11, 1944, 31493, 13, 50873, 50873, 400, 498, 291, 767, 360, 341, 11, 291, 3847, 257, 1185, 281, 6069, 960, 12083, 13, 51119, 51119, 1692, 264, 700, 3920, 11, 264, 700, 1451, 12083, 295, 264, 2145, 366, 13095, 11, 264, 1036, 732, 366, 51299, 51299, 19147, 11, 291, 483, 37644, 21264, 13, 51381, 51381, 814, 434, 1936, 264, 4274, 295, 439, 264, 1507, 300, 727, 1051, 13, 51509, 51509, 400, 550, 8379, 393, 4536, 597, 472, 13, 51587, 51587, 467, 575, 281, 652, 472, 17630, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.2202044833790172, "compression_ratio": 1.896551724137931, "no_speech_prob": 8.394639735342935e-06}, {"id": 403, "seek": 138402, "start": 1394.2, "end": 1399.12, "text": " And if you actually do this, you train a system to predict video frames.", "tokens": [50364, 407, 498, 291, 3847, 257, 15957, 3142, 2445, 281, 652, 472, 17630, 11, 264, 1151, 551, 291, 393, 50615, 50615, 360, 307, 6069, 264, 4274, 295, 439, 264, 1944, 4122, 11, 597, 576, 312, 257, 12737, 3435, 11, 50787, 50787, 291, 458, 11, 1944, 31493, 13, 50873, 50873, 400, 498, 291, 767, 360, 341, 11, 291, 3847, 257, 1185, 281, 6069, 960, 12083, 13, 51119, 51119, 1692, 264, 700, 3920, 11, 264, 700, 1451, 12083, 295, 264, 2145, 366, 13095, 11, 264, 1036, 732, 366, 51299, 51299, 19147, 11, 291, 483, 37644, 21264, 13, 51381, 51381, 814, 434, 1936, 264, 4274, 295, 439, 264, 1507, 300, 727, 1051, 13, 51509, 51509, 400, 550, 8379, 393, 4536, 597, 472, 13, 51587, 51587, 467, 575, 281, 652, 472, 17630, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.2202044833790172, "compression_ratio": 1.896551724137931, "no_speech_prob": 8.394639735342935e-06}, {"id": 404, "seek": 138402, "start": 1399.12, "end": 1402.72, "text": " Here the first frame, the first four frames of the videos are observed, the last two are", "tokens": [50364, 407, 498, 291, 3847, 257, 15957, 3142, 2445, 281, 652, 472, 17630, 11, 264, 1151, 551, 291, 393, 50615, 50615, 360, 307, 6069, 264, 4274, 295, 439, 264, 1944, 4122, 11, 597, 576, 312, 257, 12737, 3435, 11, 50787, 50787, 291, 458, 11, 1944, 31493, 13, 50873, 50873, 400, 498, 291, 767, 360, 341, 11, 291, 3847, 257, 1185, 281, 6069, 960, 12083, 13, 51119, 51119, 1692, 264, 700, 3920, 11, 264, 700, 1451, 12083, 295, 264, 2145, 366, 13095, 11, 264, 1036, 732, 366, 51299, 51299, 19147, 11, 291, 483, 37644, 21264, 13, 51381, 51381, 814, 434, 1936, 264, 4274, 295, 439, 264, 1507, 300, 727, 1051, 13, 51509, 51509, 400, 550, 8379, 393, 4536, 597, 472, 13, 51587, 51587, 467, 575, 281, 652, 472, 17630, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.2202044833790172, "compression_ratio": 1.896551724137931, "no_speech_prob": 8.394639735342935e-06}, {"id": 405, "seek": 138402, "start": 1402.72, "end": 1404.36, "text": " predicted, you get blurry predictions.", "tokens": [50364, 407, 498, 291, 3847, 257, 15957, 3142, 2445, 281, 652, 472, 17630, 11, 264, 1151, 551, 291, 393, 50615, 50615, 360, 307, 6069, 264, 4274, 295, 439, 264, 1944, 4122, 11, 597, 576, 312, 257, 12737, 3435, 11, 50787, 50787, 291, 458, 11, 1944, 31493, 13, 50873, 50873, 400, 498, 291, 767, 360, 341, 11, 291, 3847, 257, 1185, 281, 6069, 960, 12083, 13, 51119, 51119, 1692, 264, 700, 3920, 11, 264, 700, 1451, 12083, 295, 264, 2145, 366, 13095, 11, 264, 1036, 732, 366, 51299, 51299, 19147, 11, 291, 483, 37644, 21264, 13, 51381, 51381, 814, 434, 1936, 264, 4274, 295, 439, 264, 1507, 300, 727, 1051, 13, 51509, 51509, 400, 550, 8379, 393, 4536, 597, 472, 13, 51587, 51587, 467, 575, 281, 652, 472, 17630, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.2202044833790172, "compression_ratio": 1.896551724137931, "no_speech_prob": 8.394639735342935e-06}, {"id": 406, "seek": 138402, "start": 1404.36, "end": 1406.92, "text": " They're basically the average of all the stuff that could happen.", "tokens": [50364, 407, 498, 291, 3847, 257, 15957, 3142, 2445, 281, 652, 472, 17630, 11, 264, 1151, 551, 291, 393, 50615, 50615, 360, 307, 6069, 264, 4274, 295, 439, 264, 1944, 4122, 11, 597, 576, 312, 257, 12737, 3435, 11, 50787, 50787, 291, 458, 11, 1944, 31493, 13, 50873, 50873, 400, 498, 291, 767, 360, 341, 11, 291, 3847, 257, 1185, 281, 6069, 960, 12083, 13, 51119, 51119, 1692, 264, 700, 3920, 11, 264, 700, 1451, 12083, 295, 264, 2145, 366, 13095, 11, 264, 1036, 732, 366, 51299, 51299, 19147, 11, 291, 483, 37644, 21264, 13, 51381, 51381, 814, 434, 1936, 264, 4274, 295, 439, 264, 1507, 300, 727, 1051, 13, 51509, 51509, 400, 550, 8379, 393, 4536, 597, 472, 13, 51587, 51587, 467, 575, 281, 652, 472, 17630, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.2202044833790172, "compression_ratio": 1.896551724137931, "no_speech_prob": 8.394639735342935e-06}, {"id": 407, "seek": 138402, "start": 1406.92, "end": 1408.48, "text": " And then machines can decide which one.", "tokens": [50364, 407, 498, 291, 3847, 257, 15957, 3142, 2445, 281, 652, 472, 17630, 11, 264, 1151, 551, 291, 393, 50615, 50615, 360, 307, 6069, 264, 4274, 295, 439, 264, 1944, 4122, 11, 597, 576, 312, 257, 12737, 3435, 11, 50787, 50787, 291, 458, 11, 1944, 31493, 13, 50873, 50873, 400, 498, 291, 767, 360, 341, 11, 291, 3847, 257, 1185, 281, 6069, 960, 12083, 13, 51119, 51119, 1692, 264, 700, 3920, 11, 264, 700, 1451, 12083, 295, 264, 2145, 366, 13095, 11, 264, 1036, 732, 366, 51299, 51299, 19147, 11, 291, 483, 37644, 21264, 13, 51381, 51381, 814, 434, 1936, 264, 4274, 295, 439, 264, 1507, 300, 727, 1051, 13, 51509, 51509, 400, 550, 8379, 393, 4536, 597, 472, 13, 51587, 51587, 467, 575, 281, 652, 472, 17630, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.2202044833790172, "compression_ratio": 1.896551724137931, "no_speech_prob": 8.394639735342935e-06}, {"id": 408, "seek": 138402, "start": 1408.48, "end": 1409.48, "text": " It has to make one prediction.", "tokens": [50364, 407, 498, 291, 3847, 257, 15957, 3142, 2445, 281, 652, 472, 17630, 11, 264, 1151, 551, 291, 393, 50615, 50615, 360, 307, 6069, 264, 4274, 295, 439, 264, 1944, 4122, 11, 597, 576, 312, 257, 12737, 3435, 11, 50787, 50787, 291, 458, 11, 1944, 31493, 13, 50873, 50873, 400, 498, 291, 767, 360, 341, 11, 291, 3847, 257, 1185, 281, 6069, 960, 12083, 13, 51119, 51119, 1692, 264, 700, 3920, 11, 264, 700, 1451, 12083, 295, 264, 2145, 366, 13095, 11, 264, 1036, 732, 366, 51299, 51299, 19147, 11, 291, 483, 37644, 21264, 13, 51381, 51381, 814, 434, 1936, 264, 4274, 295, 439, 264, 1507, 300, 727, 1051, 13, 51509, 51509, 400, 550, 8379, 393, 4536, 597, 472, 13, 51587, 51587, 467, 575, 281, 652, 472, 17630, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.2202044833790172, "compression_ratio": 1.896551724137931, "no_speech_prob": 8.394639735342935e-06}, {"id": 409, "seek": 140948, "start": 1409.48, "end": 1416.48, "text": " So it seems to me that the frame is similar to adversarial networks in which you replace", "tokens": [50364, 407, 309, 2544, 281, 385, 300, 264, 3920, 307, 2531, 281, 17641, 44745, 9590, 294, 597, 291, 7406, 50714, 50714, 264, 20828, 1639, 365, 512, 342, 8997, 2750, 1399, 10833, 538, 3687, 294, 257, 2020, 13, 51030, 51030, 407, 393, 291, 11172, 512, 1969, 490, 17641, 44745, 9590, 30, 51180, 51180, 1079, 293, 572, 13, 51230, 51230, 1033, 11, 370, 17641, 44745, 9590, 3928, 281, 853, 281, 5039, 264, 912, 1154, 294, 257, 819, 636, 51426, 51426, 490, 264, 472, 286, 478, 516, 281, 2903, 13, 51554, 51554, 583, 286, 603, 808, 646, 281, 300, 21663, 1780, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.2691513136321423, "compression_ratio": 1.6639004149377594, "no_speech_prob": 3.8819038309156895e-05}, {"id": 410, "seek": 140948, "start": 1416.48, "end": 1422.8, "text": " the discriminator with some stochastic process generated by nature in a sense.", "tokens": [50364, 407, 309, 2544, 281, 385, 300, 264, 3920, 307, 2531, 281, 17641, 44745, 9590, 294, 597, 291, 7406, 50714, 50714, 264, 20828, 1639, 365, 512, 342, 8997, 2750, 1399, 10833, 538, 3687, 294, 257, 2020, 13, 51030, 51030, 407, 393, 291, 11172, 512, 1969, 490, 17641, 44745, 9590, 30, 51180, 51180, 1079, 293, 572, 13, 51230, 51230, 1033, 11, 370, 17641, 44745, 9590, 3928, 281, 853, 281, 5039, 264, 912, 1154, 294, 257, 819, 636, 51426, 51426, 490, 264, 472, 286, 478, 516, 281, 2903, 13, 51554, 51554, 583, 286, 603, 808, 646, 281, 300, 21663, 1780, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.2691513136321423, "compression_ratio": 1.6639004149377594, "no_speech_prob": 3.8819038309156895e-05}, {"id": 411, "seek": 140948, "start": 1422.8, "end": 1425.8, "text": " So can you borrow some control from adversarial networks?", "tokens": [50364, 407, 309, 2544, 281, 385, 300, 264, 3920, 307, 2531, 281, 17641, 44745, 9590, 294, 597, 291, 7406, 50714, 50714, 264, 20828, 1639, 365, 512, 342, 8997, 2750, 1399, 10833, 538, 3687, 294, 257, 2020, 13, 51030, 51030, 407, 393, 291, 11172, 512, 1969, 490, 17641, 44745, 9590, 30, 51180, 51180, 1079, 293, 572, 13, 51230, 51230, 1033, 11, 370, 17641, 44745, 9590, 3928, 281, 853, 281, 5039, 264, 912, 1154, 294, 257, 819, 636, 51426, 51426, 490, 264, 472, 286, 478, 516, 281, 2903, 13, 51554, 51554, 583, 286, 603, 808, 646, 281, 300, 21663, 1780, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.2691513136321423, "compression_ratio": 1.6639004149377594, "no_speech_prob": 3.8819038309156895e-05}, {"id": 412, "seek": 140948, "start": 1425.8, "end": 1426.8, "text": " Yes and no.", "tokens": [50364, 407, 309, 2544, 281, 385, 300, 264, 3920, 307, 2531, 281, 17641, 44745, 9590, 294, 597, 291, 7406, 50714, 50714, 264, 20828, 1639, 365, 512, 342, 8997, 2750, 1399, 10833, 538, 3687, 294, 257, 2020, 13, 51030, 51030, 407, 393, 291, 11172, 512, 1969, 490, 17641, 44745, 9590, 30, 51180, 51180, 1079, 293, 572, 13, 51230, 51230, 1033, 11, 370, 17641, 44745, 9590, 3928, 281, 853, 281, 5039, 264, 912, 1154, 294, 257, 819, 636, 51426, 51426, 490, 264, 472, 286, 478, 516, 281, 2903, 13, 51554, 51554, 583, 286, 603, 808, 646, 281, 300, 21663, 1780, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.2691513136321423, "compression_ratio": 1.6639004149377594, "no_speech_prob": 3.8819038309156895e-05}, {"id": 413, "seek": 140948, "start": 1426.8, "end": 1430.72, "text": " Okay, so adversarial networks tend to try to solve the same problem in a different way", "tokens": [50364, 407, 309, 2544, 281, 385, 300, 264, 3920, 307, 2531, 281, 17641, 44745, 9590, 294, 597, 291, 7406, 50714, 50714, 264, 20828, 1639, 365, 512, 342, 8997, 2750, 1399, 10833, 538, 3687, 294, 257, 2020, 13, 51030, 51030, 407, 393, 291, 11172, 512, 1969, 490, 17641, 44745, 9590, 30, 51180, 51180, 1079, 293, 572, 13, 51230, 51230, 1033, 11, 370, 17641, 44745, 9590, 3928, 281, 853, 281, 5039, 264, 912, 1154, 294, 257, 819, 636, 51426, 51426, 490, 264, 472, 286, 478, 516, 281, 2903, 13, 51554, 51554, 583, 286, 603, 808, 646, 281, 300, 21663, 1780, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.2691513136321423, "compression_ratio": 1.6639004149377594, "no_speech_prob": 3.8819038309156895e-05}, {"id": 414, "seek": 140948, "start": 1430.72, "end": 1433.28, "text": " from the one I'm going to explain.", "tokens": [50364, 407, 309, 2544, 281, 385, 300, 264, 3920, 307, 2531, 281, 17641, 44745, 9590, 294, 597, 291, 7406, 50714, 50714, 264, 20828, 1639, 365, 512, 342, 8997, 2750, 1399, 10833, 538, 3687, 294, 257, 2020, 13, 51030, 51030, 407, 393, 291, 11172, 512, 1969, 490, 17641, 44745, 9590, 30, 51180, 51180, 1079, 293, 572, 13, 51230, 51230, 1033, 11, 370, 17641, 44745, 9590, 3928, 281, 853, 281, 5039, 264, 912, 1154, 294, 257, 819, 636, 51426, 51426, 490, 264, 472, 286, 478, 516, 281, 2903, 13, 51554, 51554, 583, 286, 603, 808, 646, 281, 300, 21663, 1780, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.2691513136321423, "compression_ratio": 1.6639004149377594, "no_speech_prob": 3.8819038309156895e-05}, {"id": 415, "seek": 140948, "start": 1433.28, "end": 1435.6, "text": " But I'll come back to that analogy later.", "tokens": [50364, 407, 309, 2544, 281, 385, 300, 264, 3920, 307, 2531, 281, 17641, 44745, 9590, 294, 597, 291, 7406, 50714, 50714, 264, 20828, 1639, 365, 512, 342, 8997, 2750, 1399, 10833, 538, 3687, 294, 257, 2020, 13, 51030, 51030, 407, 393, 291, 11172, 512, 1969, 490, 17641, 44745, 9590, 30, 51180, 51180, 1079, 293, 572, 13, 51230, 51230, 1033, 11, 370, 17641, 44745, 9590, 3928, 281, 853, 281, 5039, 264, 912, 1154, 294, 257, 819, 636, 51426, 51426, 490, 264, 472, 286, 478, 516, 281, 2903, 13, 51554, 51554, 583, 286, 603, 808, 646, 281, 300, 21663, 1780, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.2691513136321423, "compression_ratio": 1.6639004149377594, "no_speech_prob": 3.8819038309156895e-05}, {"id": 416, "seek": 143560, "start": 1435.6, "end": 1441.9199999999998, "text": " Okay, so the point is if you have an input, a deterministic function that produces one", "tokens": [50364, 1033, 11, 370, 264, 935, 307, 498, 291, 362, 364, 4846, 11, 257, 15957, 3142, 2445, 300, 14725, 472, 50680, 50680, 5598, 293, 512, 2063, 2445, 510, 300, 8000, 264, 2983, 265, 6040, 1344, 11, 498, 341, 2063, 2445, 307, 50898, 50898, 787, 4018, 562, 264, 17630, 293, 264, 14816, 366, 264, 912, 11, 550, 341, 2146, 393, 787, 6069, 51208, 51208, 264, 4274, 13, 51258, 51258, 823, 281, 808, 646, 281, 428, 935, 11, 498, 291, 652, 341, 2063, 2445, 6179, 294, 1270, 257, 636, 51492, 51492, 300, 309, 1177, 380, 6794, 2793, 457, 309, 38334, 37870, 11, 337, 1365, 11, 550, 2086, 13, 51735, 51735, 583, 550, 300, 3643, 6179, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1082059094029614, "compression_ratio": 1.8296296296296297, "no_speech_prob": 1.7061013295460725e-06}, {"id": 417, "seek": 143560, "start": 1441.9199999999998, "end": 1446.28, "text": " output and some cost function here that measures the discrepancy, if this cost function is", "tokens": [50364, 1033, 11, 370, 264, 935, 307, 498, 291, 362, 364, 4846, 11, 257, 15957, 3142, 2445, 300, 14725, 472, 50680, 50680, 5598, 293, 512, 2063, 2445, 510, 300, 8000, 264, 2983, 265, 6040, 1344, 11, 498, 341, 2063, 2445, 307, 50898, 50898, 787, 4018, 562, 264, 17630, 293, 264, 14816, 366, 264, 912, 11, 550, 341, 2146, 393, 787, 6069, 51208, 51208, 264, 4274, 13, 51258, 51258, 823, 281, 808, 646, 281, 428, 935, 11, 498, 291, 652, 341, 2063, 2445, 6179, 294, 1270, 257, 636, 51492, 51492, 300, 309, 1177, 380, 6794, 2793, 457, 309, 38334, 37870, 11, 337, 1365, 11, 550, 2086, 13, 51735, 51735, 583, 550, 300, 3643, 6179, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1082059094029614, "compression_ratio": 1.8296296296296297, "no_speech_prob": 1.7061013295460725e-06}, {"id": 418, "seek": 143560, "start": 1446.28, "end": 1452.48, "text": " only zero when the prediction and the observation are the same, then this guy can only predict", "tokens": [50364, 1033, 11, 370, 264, 935, 307, 498, 291, 362, 364, 4846, 11, 257, 15957, 3142, 2445, 300, 14725, 472, 50680, 50680, 5598, 293, 512, 2063, 2445, 510, 300, 8000, 264, 2983, 265, 6040, 1344, 11, 498, 341, 2063, 2445, 307, 50898, 50898, 787, 4018, 562, 264, 17630, 293, 264, 14816, 366, 264, 912, 11, 550, 341, 2146, 393, 787, 6069, 51208, 51208, 264, 4274, 13, 51258, 51258, 823, 281, 808, 646, 281, 428, 935, 11, 498, 291, 652, 341, 2063, 2445, 6179, 294, 1270, 257, 636, 51492, 51492, 300, 309, 1177, 380, 6794, 2793, 457, 309, 38334, 37870, 11, 337, 1365, 11, 550, 2086, 13, 51735, 51735, 583, 550, 300, 3643, 6179, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1082059094029614, "compression_ratio": 1.8296296296296297, "no_speech_prob": 1.7061013295460725e-06}, {"id": 419, "seek": 143560, "start": 1452.48, "end": 1453.48, "text": " the average.", "tokens": [50364, 1033, 11, 370, 264, 935, 307, 498, 291, 362, 364, 4846, 11, 257, 15957, 3142, 2445, 300, 14725, 472, 50680, 50680, 5598, 293, 512, 2063, 2445, 510, 300, 8000, 264, 2983, 265, 6040, 1344, 11, 498, 341, 2063, 2445, 307, 50898, 50898, 787, 4018, 562, 264, 17630, 293, 264, 14816, 366, 264, 912, 11, 550, 341, 2146, 393, 787, 6069, 51208, 51208, 264, 4274, 13, 51258, 51258, 823, 281, 808, 646, 281, 428, 935, 11, 498, 291, 652, 341, 2063, 2445, 6179, 294, 1270, 257, 636, 51492, 51492, 300, 309, 1177, 380, 6794, 2793, 457, 309, 38334, 37870, 11, 337, 1365, 11, 550, 2086, 13, 51735, 51735, 583, 550, 300, 3643, 6179, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1082059094029614, "compression_ratio": 1.8296296296296297, "no_speech_prob": 1.7061013295460725e-06}, {"id": 420, "seek": 143560, "start": 1453.48, "end": 1458.1599999999999, "text": " Now to come back to your point, if you make this cost function complicated in such a way", "tokens": [50364, 1033, 11, 370, 264, 935, 307, 498, 291, 362, 364, 4846, 11, 257, 15957, 3142, 2445, 300, 14725, 472, 50680, 50680, 5598, 293, 512, 2063, 2445, 510, 300, 8000, 264, 2983, 265, 6040, 1344, 11, 498, 341, 2063, 2445, 307, 50898, 50898, 787, 4018, 562, 264, 17630, 293, 264, 14816, 366, 264, 912, 11, 550, 341, 2146, 393, 787, 6069, 51208, 51208, 264, 4274, 13, 51258, 51258, 823, 281, 808, 646, 281, 428, 935, 11, 498, 291, 652, 341, 2063, 2445, 6179, 294, 1270, 257, 636, 51492, 51492, 300, 309, 1177, 380, 6794, 2793, 457, 309, 38334, 37870, 11, 337, 1365, 11, 550, 2086, 13, 51735, 51735, 583, 550, 300, 3643, 6179, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1082059094029614, "compression_ratio": 1.8296296296296297, "no_speech_prob": 1.7061013295460725e-06}, {"id": 421, "seek": 143560, "start": 1458.1599999999999, "end": 1463.02, "text": " that it doesn't compare points but it compares distributions, for example, then yes.", "tokens": [50364, 1033, 11, 370, 264, 935, 307, 498, 291, 362, 364, 4846, 11, 257, 15957, 3142, 2445, 300, 14725, 472, 50680, 50680, 5598, 293, 512, 2063, 2445, 510, 300, 8000, 264, 2983, 265, 6040, 1344, 11, 498, 341, 2063, 2445, 307, 50898, 50898, 787, 4018, 562, 264, 17630, 293, 264, 14816, 366, 264, 912, 11, 550, 341, 2146, 393, 787, 6069, 51208, 51208, 264, 4274, 13, 51258, 51258, 823, 281, 808, 646, 281, 428, 935, 11, 498, 291, 652, 341, 2063, 2445, 6179, 294, 1270, 257, 636, 51492, 51492, 300, 309, 1177, 380, 6794, 2793, 457, 309, 38334, 37870, 11, 337, 1365, 11, 550, 2086, 13, 51735, 51735, 583, 550, 300, 3643, 6179, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1082059094029614, "compression_ratio": 1.8296296296296297, "no_speech_prob": 1.7061013295460725e-06}, {"id": 422, "seek": 143560, "start": 1463.02, "end": 1464.36, "text": " But then that becomes complicated.", "tokens": [50364, 1033, 11, 370, 264, 935, 307, 498, 291, 362, 364, 4846, 11, 257, 15957, 3142, 2445, 300, 14725, 472, 50680, 50680, 5598, 293, 512, 2063, 2445, 510, 300, 8000, 264, 2983, 265, 6040, 1344, 11, 498, 341, 2063, 2445, 307, 50898, 50898, 787, 4018, 562, 264, 17630, 293, 264, 14816, 366, 264, 912, 11, 550, 341, 2146, 393, 787, 6069, 51208, 51208, 264, 4274, 13, 51258, 51258, 823, 281, 808, 646, 281, 428, 935, 11, 498, 291, 652, 341, 2063, 2445, 6179, 294, 1270, 257, 636, 51492, 51492, 300, 309, 1177, 380, 6794, 2793, 457, 309, 38334, 37870, 11, 337, 1365, 11, 550, 2086, 13, 51735, 51735, 583, 550, 300, 3643, 6179, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1082059094029614, "compression_ratio": 1.8296296296296297, "no_speech_prob": 1.7061013295460725e-06}, {"id": 423, "seek": 146436, "start": 1464.36, "end": 1466.6799999999998, "text": " That's what adversarial training is about.", "tokens": [50364, 663, 311, 437, 17641, 44745, 3097, 307, 466, 13, 50480, 50480, 509, 362, 281, 3847, 341, 551, 281, 360, 264, 11, 281, 6794, 37870, 11, 597, 307, 1152, 13, 50762, 50762, 1033, 11, 370, 321, 434, 406, 516, 281, 764, 257, 15957, 3142, 2445, 13, 51066, 51066, 407, 510, 307, 264, 5140, 87, 295, 2281, 12, 6032, 5245, 293, 309, 311, 588, 4582, 281, 721, 411, 5952, 51371, 51371, 24877, 300, 561, 645, 1417, 466, 294, 264, 4319, 295, 35942, 5245, 293, 7840, 42434, 9590, 51560, 51560, 293, 1507, 411, 300, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.1746625304222107, "compression_ratio": 1.5691056910569106, "no_speech_prob": 7.410736088786507e-06}, {"id": 424, "seek": 146436, "start": 1466.6799999999998, "end": 1472.32, "text": " You have to train this thing to do the, to compare distributions, which is hard.", "tokens": [50364, 663, 311, 437, 17641, 44745, 3097, 307, 466, 13, 50480, 50480, 509, 362, 281, 3847, 341, 551, 281, 360, 264, 11, 281, 6794, 37870, 11, 597, 307, 1152, 13, 50762, 50762, 1033, 11, 370, 321, 434, 406, 516, 281, 764, 257, 15957, 3142, 2445, 13, 51066, 51066, 407, 510, 307, 264, 5140, 87, 295, 2281, 12, 6032, 5245, 293, 309, 311, 588, 4582, 281, 721, 411, 5952, 51371, 51371, 24877, 300, 561, 645, 1417, 466, 294, 264, 4319, 295, 35942, 5245, 293, 7840, 42434, 9590, 51560, 51560, 293, 1507, 411, 300, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.1746625304222107, "compression_ratio": 1.5691056910569106, "no_speech_prob": 7.410736088786507e-06}, {"id": 425, "seek": 146436, "start": 1472.32, "end": 1478.3999999999999, "text": " Okay, so we're not going to use a deterministic function.", "tokens": [50364, 663, 311, 437, 17641, 44745, 3097, 307, 466, 13, 50480, 50480, 509, 362, 281, 3847, 341, 551, 281, 360, 264, 11, 281, 6794, 37870, 11, 597, 307, 1152, 13, 50762, 50762, 1033, 11, 370, 321, 434, 406, 516, 281, 764, 257, 15957, 3142, 2445, 13, 51066, 51066, 407, 510, 307, 264, 5140, 87, 295, 2281, 12, 6032, 5245, 293, 309, 311, 588, 4582, 281, 721, 411, 5952, 51371, 51371, 24877, 300, 561, 645, 1417, 466, 294, 264, 4319, 295, 35942, 5245, 293, 7840, 42434, 9590, 51560, 51560, 293, 1507, 411, 300, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.1746625304222107, "compression_ratio": 1.5691056910569106, "no_speech_prob": 7.410736088786507e-06}, {"id": 426, "seek": 146436, "start": 1478.3999999999999, "end": 1484.5, "text": " So here is the crux of energy-based models and it's very connected to things like factor", "tokens": [50364, 663, 311, 437, 17641, 44745, 3097, 307, 466, 13, 50480, 50480, 509, 362, 281, 3847, 341, 551, 281, 360, 264, 11, 281, 6794, 37870, 11, 597, 307, 1152, 13, 50762, 50762, 1033, 11, 370, 321, 434, 406, 516, 281, 764, 257, 15957, 3142, 2445, 13, 51066, 51066, 407, 510, 307, 264, 5140, 87, 295, 2281, 12, 6032, 5245, 293, 309, 311, 588, 4582, 281, 721, 411, 5952, 51371, 51371, 24877, 300, 561, 645, 1417, 466, 294, 264, 4319, 295, 35942, 5245, 293, 7840, 42434, 9590, 51560, 51560, 293, 1507, 411, 300, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.1746625304222107, "compression_ratio": 1.5691056910569106, "no_speech_prob": 7.410736088786507e-06}, {"id": 427, "seek": 146436, "start": 1484.5, "end": 1488.28, "text": " graphs that people were talking about in the context of graphical models and Bayesian networks", "tokens": [50364, 663, 311, 437, 17641, 44745, 3097, 307, 466, 13, 50480, 50480, 509, 362, 281, 3847, 341, 551, 281, 360, 264, 11, 281, 6794, 37870, 11, 597, 307, 1152, 13, 50762, 50762, 1033, 11, 370, 321, 434, 406, 516, 281, 764, 257, 15957, 3142, 2445, 13, 51066, 51066, 407, 510, 307, 264, 5140, 87, 295, 2281, 12, 6032, 5245, 293, 309, 311, 588, 4582, 281, 721, 411, 5952, 51371, 51371, 24877, 300, 561, 645, 1417, 466, 294, 264, 4319, 295, 35942, 5245, 293, 7840, 42434, 9590, 51560, 51560, 293, 1507, 411, 300, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.1746625304222107, "compression_ratio": 1.5691056910569106, "no_speech_prob": 7.410736088786507e-06}, {"id": 428, "seek": 146436, "start": 1488.28, "end": 1489.4599999999998, "text": " and stuff like that.", "tokens": [50364, 663, 311, 437, 17641, 44745, 3097, 307, 466, 13, 50480, 50480, 509, 362, 281, 3847, 341, 551, 281, 360, 264, 11, 281, 6794, 37870, 11, 597, 307, 1152, 13, 50762, 50762, 1033, 11, 370, 321, 434, 406, 516, 281, 764, 257, 15957, 3142, 2445, 13, 51066, 51066, 407, 510, 307, 264, 5140, 87, 295, 2281, 12, 6032, 5245, 293, 309, 311, 588, 4582, 281, 721, 411, 5952, 51371, 51371, 24877, 300, 561, 645, 1417, 466, 294, 264, 4319, 295, 35942, 5245, 293, 7840, 42434, 9590, 51560, 51560, 293, 1507, 411, 300, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.1746625304222107, "compression_ratio": 1.5691056910569106, "no_speech_prob": 7.410736088786507e-06}, {"id": 429, "seek": 148946, "start": 1489.46, "end": 1495.6000000000001, "text": " So basically you have an input, an observation, you have an observed or a hypothesis for a", "tokens": [50364, 407, 1936, 291, 362, 364, 4846, 11, 364, 14816, 11, 291, 362, 364, 13095, 420, 257, 17291, 337, 257, 50671, 50671, 17630, 293, 291, 362, 364, 2281, 2445, 510, 300, 8000, 264, 34237, 1296, 50889, 50889, 264, 732, 13, 50939, 50939, 759, 264, 732, 366, 18218, 11, 498, 288, 307, 257, 665, 17630, 337, 2031, 11, 550, 264, 2281, 7126, 51138, 51138, 538, 341, 307, 2295, 13, 51188, 51188, 759, 436, 434, 406, 18218, 11, 309, 311, 1090, 13, 51354, 51354, 400, 264, 636, 291, 360, 38253, 307, 300, 286, 976, 291, 364, 2031, 11, 291, 915, 257, 288, 11, 456, 1062, 312, 3866, 11, 51592, 51592, 300, 14725, 257, 2295, 2281, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.1350308605748364, "compression_ratio": 1.8170731707317074, "no_speech_prob": 3.50067807630694e-06}, {"id": 430, "seek": 148946, "start": 1495.6000000000001, "end": 1499.96, "text": " prediction and you have an energy function here that measures the compatibility between", "tokens": [50364, 407, 1936, 291, 362, 364, 4846, 11, 364, 14816, 11, 291, 362, 364, 13095, 420, 257, 17291, 337, 257, 50671, 50671, 17630, 293, 291, 362, 364, 2281, 2445, 510, 300, 8000, 264, 34237, 1296, 50889, 50889, 264, 732, 13, 50939, 50939, 759, 264, 732, 366, 18218, 11, 498, 288, 307, 257, 665, 17630, 337, 2031, 11, 550, 264, 2281, 7126, 51138, 51138, 538, 341, 307, 2295, 13, 51188, 51188, 759, 436, 434, 406, 18218, 11, 309, 311, 1090, 13, 51354, 51354, 400, 264, 636, 291, 360, 38253, 307, 300, 286, 976, 291, 364, 2031, 11, 291, 915, 257, 288, 11, 456, 1062, 312, 3866, 11, 51592, 51592, 300, 14725, 257, 2295, 2281, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.1350308605748364, "compression_ratio": 1.8170731707317074, "no_speech_prob": 3.50067807630694e-06}, {"id": 431, "seek": 148946, "start": 1499.96, "end": 1500.96, "text": " the two.", "tokens": [50364, 407, 1936, 291, 362, 364, 4846, 11, 364, 14816, 11, 291, 362, 364, 13095, 420, 257, 17291, 337, 257, 50671, 50671, 17630, 293, 291, 362, 364, 2281, 2445, 510, 300, 8000, 264, 34237, 1296, 50889, 50889, 264, 732, 13, 50939, 50939, 759, 264, 732, 366, 18218, 11, 498, 288, 307, 257, 665, 17630, 337, 2031, 11, 550, 264, 2281, 7126, 51138, 51138, 538, 341, 307, 2295, 13, 51188, 51188, 759, 436, 434, 406, 18218, 11, 309, 311, 1090, 13, 51354, 51354, 400, 264, 636, 291, 360, 38253, 307, 300, 286, 976, 291, 364, 2031, 11, 291, 915, 257, 288, 11, 456, 1062, 312, 3866, 11, 51592, 51592, 300, 14725, 257, 2295, 2281, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.1350308605748364, "compression_ratio": 1.8170731707317074, "no_speech_prob": 3.50067807630694e-06}, {"id": 432, "seek": 148946, "start": 1500.96, "end": 1504.94, "text": " If the two are compatible, if y is a good prediction for x, then the energy produced", "tokens": [50364, 407, 1936, 291, 362, 364, 4846, 11, 364, 14816, 11, 291, 362, 364, 13095, 420, 257, 17291, 337, 257, 50671, 50671, 17630, 293, 291, 362, 364, 2281, 2445, 510, 300, 8000, 264, 34237, 1296, 50889, 50889, 264, 732, 13, 50939, 50939, 759, 264, 732, 366, 18218, 11, 498, 288, 307, 257, 665, 17630, 337, 2031, 11, 550, 264, 2281, 7126, 51138, 51138, 538, 341, 307, 2295, 13, 51188, 51188, 759, 436, 434, 406, 18218, 11, 309, 311, 1090, 13, 51354, 51354, 400, 264, 636, 291, 360, 38253, 307, 300, 286, 976, 291, 364, 2031, 11, 291, 915, 257, 288, 11, 456, 1062, 312, 3866, 11, 51592, 51592, 300, 14725, 257, 2295, 2281, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.1350308605748364, "compression_ratio": 1.8170731707317074, "no_speech_prob": 3.50067807630694e-06}, {"id": 433, "seek": 148946, "start": 1504.94, "end": 1505.94, "text": " by this is low.", "tokens": [50364, 407, 1936, 291, 362, 364, 4846, 11, 364, 14816, 11, 291, 362, 364, 13095, 420, 257, 17291, 337, 257, 50671, 50671, 17630, 293, 291, 362, 364, 2281, 2445, 510, 300, 8000, 264, 34237, 1296, 50889, 50889, 264, 732, 13, 50939, 50939, 759, 264, 732, 366, 18218, 11, 498, 288, 307, 257, 665, 17630, 337, 2031, 11, 550, 264, 2281, 7126, 51138, 51138, 538, 341, 307, 2295, 13, 51188, 51188, 759, 436, 434, 406, 18218, 11, 309, 311, 1090, 13, 51354, 51354, 400, 264, 636, 291, 360, 38253, 307, 300, 286, 976, 291, 364, 2031, 11, 291, 915, 257, 288, 11, 456, 1062, 312, 3866, 11, 51592, 51592, 300, 14725, 257, 2295, 2281, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.1350308605748364, "compression_ratio": 1.8170731707317074, "no_speech_prob": 3.50067807630694e-06}, {"id": 434, "seek": 148946, "start": 1505.94, "end": 1509.26, "text": " If they're not compatible, it's high.", "tokens": [50364, 407, 1936, 291, 362, 364, 4846, 11, 364, 14816, 11, 291, 362, 364, 13095, 420, 257, 17291, 337, 257, 50671, 50671, 17630, 293, 291, 362, 364, 2281, 2445, 510, 300, 8000, 264, 34237, 1296, 50889, 50889, 264, 732, 13, 50939, 50939, 759, 264, 732, 366, 18218, 11, 498, 288, 307, 257, 665, 17630, 337, 2031, 11, 550, 264, 2281, 7126, 51138, 51138, 538, 341, 307, 2295, 13, 51188, 51188, 759, 436, 434, 406, 18218, 11, 309, 311, 1090, 13, 51354, 51354, 400, 264, 636, 291, 360, 38253, 307, 300, 286, 976, 291, 364, 2031, 11, 291, 915, 257, 288, 11, 456, 1062, 312, 3866, 11, 51592, 51592, 300, 14725, 257, 2295, 2281, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.1350308605748364, "compression_ratio": 1.8170731707317074, "no_speech_prob": 3.50067807630694e-06}, {"id": 435, "seek": 148946, "start": 1509.26, "end": 1514.02, "text": " And the way you do inference is that I give you an x, you find a y, there might be multiple,", "tokens": [50364, 407, 1936, 291, 362, 364, 4846, 11, 364, 14816, 11, 291, 362, 364, 13095, 420, 257, 17291, 337, 257, 50671, 50671, 17630, 293, 291, 362, 364, 2281, 2445, 510, 300, 8000, 264, 34237, 1296, 50889, 50889, 264, 732, 13, 50939, 50939, 759, 264, 732, 366, 18218, 11, 498, 288, 307, 257, 665, 17630, 337, 2031, 11, 550, 264, 2281, 7126, 51138, 51138, 538, 341, 307, 2295, 13, 51188, 51188, 759, 436, 434, 406, 18218, 11, 309, 311, 1090, 13, 51354, 51354, 400, 264, 636, 291, 360, 38253, 307, 300, 286, 976, 291, 364, 2031, 11, 291, 915, 257, 288, 11, 456, 1062, 312, 3866, 11, 51592, 51592, 300, 14725, 257, 2295, 2281, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.1350308605748364, "compression_ratio": 1.8170731707317074, "no_speech_prob": 3.50067807630694e-06}, {"id": 436, "seek": 148946, "start": 1514.02, "end": 1517.08, "text": " that produces a low energy.", "tokens": [50364, 407, 1936, 291, 362, 364, 4846, 11, 364, 14816, 11, 291, 362, 364, 13095, 420, 257, 17291, 337, 257, 50671, 50671, 17630, 293, 291, 362, 364, 2281, 2445, 510, 300, 8000, 264, 34237, 1296, 50889, 50889, 264, 732, 13, 50939, 50939, 759, 264, 732, 366, 18218, 11, 498, 288, 307, 257, 665, 17630, 337, 2031, 11, 550, 264, 2281, 7126, 51138, 51138, 538, 341, 307, 2295, 13, 51188, 51188, 759, 436, 434, 406, 18218, 11, 309, 311, 1090, 13, 51354, 51354, 400, 264, 636, 291, 360, 38253, 307, 300, 286, 976, 291, 364, 2031, 11, 291, 915, 257, 288, 11, 456, 1062, 312, 3866, 11, 51592, 51592, 300, 14725, 257, 2295, 2281, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.1350308605748364, "compression_ratio": 1.8170731707317074, "no_speech_prob": 3.50067807630694e-06}, {"id": 437, "seek": 151708, "start": 1517.08, "end": 1520.1399999999999, "text": " So for example here, this is x and y.", "tokens": [50364, 407, 337, 1365, 510, 11, 341, 307, 2031, 293, 288, 13, 50517, 50517, 759, 286, 976, 291, 341, 2031, 11, 456, 366, 732, 1944, 6338, 337, 288, 300, 362, 2295, 2281, 13, 50723, 50723, 639, 307, 264, 47138, 295, 1412, 13, 50821, 50821, 663, 311, 689, 1412, 307, 3247, 15551, 490, 13, 50960, 50960, 400, 291, 603, 362, 732, 6338, 13, 51136, 51136, 407, 286, 478, 406, 3585, 291, 577, 281, 360, 341, 4464, 2144, 11, 577, 281, 5258, 3866, 6338, 11, 457, 300, 311, 51324, 51324, 264, 38253, 7513, 13, 51401, 51401, 407, 264, 2281, 510, 307, 406, 1143, 337, 3097, 11, 309, 311, 1143, 337, 38253, 13, 51532, 51532, 467, 311, 588, 819, 13, 51662, 51662, 407, 291, 727, 584, 11, 731, 11, 439, 558, 11, 300, 311, 364, 2281, 2445, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15267213185628256, "compression_ratio": 1.7482014388489209, "no_speech_prob": 4.157116109126946e-06}, {"id": 438, "seek": 151708, "start": 1520.1399999999999, "end": 1524.26, "text": " If I give you this x, there are two possible answers for y that have low energy.", "tokens": [50364, 407, 337, 1365, 510, 11, 341, 307, 2031, 293, 288, 13, 50517, 50517, 759, 286, 976, 291, 341, 2031, 11, 456, 366, 732, 1944, 6338, 337, 288, 300, 362, 2295, 2281, 13, 50723, 50723, 639, 307, 264, 47138, 295, 1412, 13, 50821, 50821, 663, 311, 689, 1412, 307, 3247, 15551, 490, 13, 50960, 50960, 400, 291, 603, 362, 732, 6338, 13, 51136, 51136, 407, 286, 478, 406, 3585, 291, 577, 281, 360, 341, 4464, 2144, 11, 577, 281, 5258, 3866, 6338, 11, 457, 300, 311, 51324, 51324, 264, 38253, 7513, 13, 51401, 51401, 407, 264, 2281, 510, 307, 406, 1143, 337, 3097, 11, 309, 311, 1143, 337, 38253, 13, 51532, 51532, 467, 311, 588, 819, 13, 51662, 51662, 407, 291, 727, 584, 11, 731, 11, 439, 558, 11, 300, 311, 364, 2281, 2445, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15267213185628256, "compression_ratio": 1.7482014388489209, "no_speech_prob": 4.157116109126946e-06}, {"id": 439, "seek": 151708, "start": 1524.26, "end": 1526.22, "text": " This is the manifold of data.", "tokens": [50364, 407, 337, 1365, 510, 11, 341, 307, 2031, 293, 288, 13, 50517, 50517, 759, 286, 976, 291, 341, 2031, 11, 456, 366, 732, 1944, 6338, 337, 288, 300, 362, 2295, 2281, 13, 50723, 50723, 639, 307, 264, 47138, 295, 1412, 13, 50821, 50821, 663, 311, 689, 1412, 307, 3247, 15551, 490, 13, 50960, 50960, 400, 291, 603, 362, 732, 6338, 13, 51136, 51136, 407, 286, 478, 406, 3585, 291, 577, 281, 360, 341, 4464, 2144, 11, 577, 281, 5258, 3866, 6338, 11, 457, 300, 311, 51324, 51324, 264, 38253, 7513, 13, 51401, 51401, 407, 264, 2281, 510, 307, 406, 1143, 337, 3097, 11, 309, 311, 1143, 337, 38253, 13, 51532, 51532, 467, 311, 588, 819, 13, 51662, 51662, 407, 291, 727, 584, 11, 731, 11, 439, 558, 11, 300, 311, 364, 2281, 2445, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15267213185628256, "compression_ratio": 1.7482014388489209, "no_speech_prob": 4.157116109126946e-06}, {"id": 440, "seek": 151708, "start": 1526.22, "end": 1529.0, "text": " That's where data is sampled from.", "tokens": [50364, 407, 337, 1365, 510, 11, 341, 307, 2031, 293, 288, 13, 50517, 50517, 759, 286, 976, 291, 341, 2031, 11, 456, 366, 732, 1944, 6338, 337, 288, 300, 362, 2295, 2281, 13, 50723, 50723, 639, 307, 264, 47138, 295, 1412, 13, 50821, 50821, 663, 311, 689, 1412, 307, 3247, 15551, 490, 13, 50960, 50960, 400, 291, 603, 362, 732, 6338, 13, 51136, 51136, 407, 286, 478, 406, 3585, 291, 577, 281, 360, 341, 4464, 2144, 11, 577, 281, 5258, 3866, 6338, 11, 457, 300, 311, 51324, 51324, 264, 38253, 7513, 13, 51401, 51401, 407, 264, 2281, 510, 307, 406, 1143, 337, 3097, 11, 309, 311, 1143, 337, 38253, 13, 51532, 51532, 467, 311, 588, 819, 13, 51662, 51662, 407, 291, 727, 584, 11, 731, 11, 439, 558, 11, 300, 311, 364, 2281, 2445, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15267213185628256, "compression_ratio": 1.7482014388489209, "no_speech_prob": 4.157116109126946e-06}, {"id": 441, "seek": 151708, "start": 1529.0, "end": 1532.52, "text": " And you'll have two answers.", "tokens": [50364, 407, 337, 1365, 510, 11, 341, 307, 2031, 293, 288, 13, 50517, 50517, 759, 286, 976, 291, 341, 2031, 11, 456, 366, 732, 1944, 6338, 337, 288, 300, 362, 2295, 2281, 13, 50723, 50723, 639, 307, 264, 47138, 295, 1412, 13, 50821, 50821, 663, 311, 689, 1412, 307, 3247, 15551, 490, 13, 50960, 50960, 400, 291, 603, 362, 732, 6338, 13, 51136, 51136, 407, 286, 478, 406, 3585, 291, 577, 281, 360, 341, 4464, 2144, 11, 577, 281, 5258, 3866, 6338, 11, 457, 300, 311, 51324, 51324, 264, 38253, 7513, 13, 51401, 51401, 407, 264, 2281, 510, 307, 406, 1143, 337, 3097, 11, 309, 311, 1143, 337, 38253, 13, 51532, 51532, 467, 311, 588, 819, 13, 51662, 51662, 407, 291, 727, 584, 11, 731, 11, 439, 558, 11, 300, 311, 364, 2281, 2445, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15267213185628256, "compression_ratio": 1.7482014388489209, "no_speech_prob": 4.157116109126946e-06}, {"id": 442, "seek": 151708, "start": 1532.52, "end": 1536.28, "text": " So I'm not telling you how to do this minimization, how to produce multiple answers, but that's", "tokens": [50364, 407, 337, 1365, 510, 11, 341, 307, 2031, 293, 288, 13, 50517, 50517, 759, 286, 976, 291, 341, 2031, 11, 456, 366, 732, 1944, 6338, 337, 288, 300, 362, 2295, 2281, 13, 50723, 50723, 639, 307, 264, 47138, 295, 1412, 13, 50821, 50821, 663, 311, 689, 1412, 307, 3247, 15551, 490, 13, 50960, 50960, 400, 291, 603, 362, 732, 6338, 13, 51136, 51136, 407, 286, 478, 406, 3585, 291, 577, 281, 360, 341, 4464, 2144, 11, 577, 281, 5258, 3866, 6338, 11, 457, 300, 311, 51324, 51324, 264, 38253, 7513, 13, 51401, 51401, 407, 264, 2281, 510, 307, 406, 1143, 337, 3097, 11, 309, 311, 1143, 337, 38253, 13, 51532, 51532, 467, 311, 588, 819, 13, 51662, 51662, 407, 291, 727, 584, 11, 731, 11, 439, 558, 11, 300, 311, 364, 2281, 2445, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15267213185628256, "compression_ratio": 1.7482014388489209, "no_speech_prob": 4.157116109126946e-06}, {"id": 443, "seek": 151708, "start": 1536.28, "end": 1537.82, "text": " the inference mechanism.", "tokens": [50364, 407, 337, 1365, 510, 11, 341, 307, 2031, 293, 288, 13, 50517, 50517, 759, 286, 976, 291, 341, 2031, 11, 456, 366, 732, 1944, 6338, 337, 288, 300, 362, 2295, 2281, 13, 50723, 50723, 639, 307, 264, 47138, 295, 1412, 13, 50821, 50821, 663, 311, 689, 1412, 307, 3247, 15551, 490, 13, 50960, 50960, 400, 291, 603, 362, 732, 6338, 13, 51136, 51136, 407, 286, 478, 406, 3585, 291, 577, 281, 360, 341, 4464, 2144, 11, 577, 281, 5258, 3866, 6338, 11, 457, 300, 311, 51324, 51324, 264, 38253, 7513, 13, 51401, 51401, 407, 264, 2281, 510, 307, 406, 1143, 337, 3097, 11, 309, 311, 1143, 337, 38253, 13, 51532, 51532, 467, 311, 588, 819, 13, 51662, 51662, 407, 291, 727, 584, 11, 731, 11, 439, 558, 11, 300, 311, 364, 2281, 2445, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15267213185628256, "compression_ratio": 1.7482014388489209, "no_speech_prob": 4.157116109126946e-06}, {"id": 444, "seek": 151708, "start": 1537.82, "end": 1540.4399999999998, "text": " So the energy here is not used for training, it's used for inference.", "tokens": [50364, 407, 337, 1365, 510, 11, 341, 307, 2031, 293, 288, 13, 50517, 50517, 759, 286, 976, 291, 341, 2031, 11, 456, 366, 732, 1944, 6338, 337, 288, 300, 362, 2295, 2281, 13, 50723, 50723, 639, 307, 264, 47138, 295, 1412, 13, 50821, 50821, 663, 311, 689, 1412, 307, 3247, 15551, 490, 13, 50960, 50960, 400, 291, 603, 362, 732, 6338, 13, 51136, 51136, 407, 286, 478, 406, 3585, 291, 577, 281, 360, 341, 4464, 2144, 11, 577, 281, 5258, 3866, 6338, 11, 457, 300, 311, 51324, 51324, 264, 38253, 7513, 13, 51401, 51401, 407, 264, 2281, 510, 307, 406, 1143, 337, 3097, 11, 309, 311, 1143, 337, 38253, 13, 51532, 51532, 467, 311, 588, 819, 13, 51662, 51662, 407, 291, 727, 584, 11, 731, 11, 439, 558, 11, 300, 311, 364, 2281, 2445, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15267213185628256, "compression_ratio": 1.7482014388489209, "no_speech_prob": 4.157116109126946e-06}, {"id": 445, "seek": 151708, "start": 1540.4399999999998, "end": 1543.04, "text": " It's very different.", "tokens": [50364, 407, 337, 1365, 510, 11, 341, 307, 2031, 293, 288, 13, 50517, 50517, 759, 286, 976, 291, 341, 2031, 11, 456, 366, 732, 1944, 6338, 337, 288, 300, 362, 2295, 2281, 13, 50723, 50723, 639, 307, 264, 47138, 295, 1412, 13, 50821, 50821, 663, 311, 689, 1412, 307, 3247, 15551, 490, 13, 50960, 50960, 400, 291, 603, 362, 732, 6338, 13, 51136, 51136, 407, 286, 478, 406, 3585, 291, 577, 281, 360, 341, 4464, 2144, 11, 577, 281, 5258, 3866, 6338, 11, 457, 300, 311, 51324, 51324, 264, 38253, 7513, 13, 51401, 51401, 407, 264, 2281, 510, 307, 406, 1143, 337, 3097, 11, 309, 311, 1143, 337, 38253, 13, 51532, 51532, 467, 311, 588, 819, 13, 51662, 51662, 407, 291, 727, 584, 11, 731, 11, 439, 558, 11, 300, 311, 364, 2281, 2445, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15267213185628256, "compression_ratio": 1.7482014388489209, "no_speech_prob": 4.157116109126946e-06}, {"id": 446, "seek": 151708, "start": 1543.04, "end": 1545.8799999999999, "text": " So you could say, well, all right, that's an energy function.", "tokens": [50364, 407, 337, 1365, 510, 11, 341, 307, 2031, 293, 288, 13, 50517, 50517, 759, 286, 976, 291, 341, 2031, 11, 456, 366, 732, 1944, 6338, 337, 288, 300, 362, 2295, 2281, 13, 50723, 50723, 639, 307, 264, 47138, 295, 1412, 13, 50821, 50821, 663, 311, 689, 1412, 307, 3247, 15551, 490, 13, 50960, 50960, 400, 291, 603, 362, 732, 6338, 13, 51136, 51136, 407, 286, 478, 406, 3585, 291, 577, 281, 360, 341, 4464, 2144, 11, 577, 281, 5258, 3866, 6338, 11, 457, 300, 311, 51324, 51324, 264, 38253, 7513, 13, 51401, 51401, 407, 264, 2281, 510, 307, 406, 1143, 337, 3097, 11, 309, 311, 1143, 337, 38253, 13, 51532, 51532, 467, 311, 588, 819, 13, 51662, 51662, 407, 291, 727, 584, 11, 731, 11, 439, 558, 11, 300, 311, 364, 2281, 2445, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15267213185628256, "compression_ratio": 1.7482014388489209, "no_speech_prob": 4.157116109126946e-06}, {"id": 447, "seek": 154588, "start": 1545.88, "end": 1549.8200000000002, "text": " But you can take the exponential and normalize with a Gibbs distribution, and that gives", "tokens": [50364, 583, 291, 393, 747, 264, 21510, 293, 2710, 1125, 365, 257, 30199, 7316, 11, 293, 300, 2709, 50561, 50561, 291, 257, 8482, 13, 50633, 50633, 1079, 11, 3993, 300, 286, 500, 380, 767, 528, 264, 3565, 295, 257, 8482, 13, 50898, 50898, 286, 500, 380, 528, 264, 2281, 281, 312, 264, 3565, 295, 257, 8482, 13, 51015, 51015, 1692, 264, 8482, 307, 257, 992, 295, 8000, 4018, 13, 51265, 51265, 286, 1710, 411, 498, 286, 458, 1340, 466, 5221, 11, 558, 30, 51470, 51470, 467, 311, 257, 5862, 5924, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2115441991927776, "compression_ratio": 1.6476190476190475, "no_speech_prob": 6.337220384011744e-06}, {"id": 448, "seek": 154588, "start": 1549.8200000000002, "end": 1551.2600000000002, "text": " you a probability.", "tokens": [50364, 583, 291, 393, 747, 264, 21510, 293, 2710, 1125, 365, 257, 30199, 7316, 11, 293, 300, 2709, 50561, 50561, 291, 257, 8482, 13, 50633, 50633, 1079, 11, 3993, 300, 286, 500, 380, 767, 528, 264, 3565, 295, 257, 8482, 13, 50898, 50898, 286, 500, 380, 528, 264, 2281, 281, 312, 264, 3565, 295, 257, 8482, 13, 51015, 51015, 1692, 264, 8482, 307, 257, 992, 295, 8000, 4018, 13, 51265, 51265, 286, 1710, 411, 498, 286, 458, 1340, 466, 5221, 11, 558, 30, 51470, 51470, 467, 311, 257, 5862, 5924, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2115441991927776, "compression_ratio": 1.6476190476190475, "no_speech_prob": 6.337220384011744e-06}, {"id": 449, "seek": 154588, "start": 1551.2600000000002, "end": 1556.5600000000002, "text": " Yes, except that I don't actually want the log of a probability.", "tokens": [50364, 583, 291, 393, 747, 264, 21510, 293, 2710, 1125, 365, 257, 30199, 7316, 11, 293, 300, 2709, 50561, 50561, 291, 257, 8482, 13, 50633, 50633, 1079, 11, 3993, 300, 286, 500, 380, 767, 528, 264, 3565, 295, 257, 8482, 13, 50898, 50898, 286, 500, 380, 528, 264, 2281, 281, 312, 264, 3565, 295, 257, 8482, 13, 51015, 51015, 1692, 264, 8482, 307, 257, 992, 295, 8000, 4018, 13, 51265, 51265, 286, 1710, 411, 498, 286, 458, 1340, 466, 5221, 11, 558, 30, 51470, 51470, 467, 311, 257, 5862, 5924, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2115441991927776, "compression_ratio": 1.6476190476190475, "no_speech_prob": 6.337220384011744e-06}, {"id": 450, "seek": 154588, "start": 1556.5600000000002, "end": 1558.9, "text": " I don't want the energy to be the log of a probability.", "tokens": [50364, 583, 291, 393, 747, 264, 21510, 293, 2710, 1125, 365, 257, 30199, 7316, 11, 293, 300, 2709, 50561, 50561, 291, 257, 8482, 13, 50633, 50633, 1079, 11, 3993, 300, 286, 500, 380, 767, 528, 264, 3565, 295, 257, 8482, 13, 50898, 50898, 286, 500, 380, 528, 264, 2281, 281, 312, 264, 3565, 295, 257, 8482, 13, 51015, 51015, 1692, 264, 8482, 307, 257, 992, 295, 8000, 4018, 13, 51265, 51265, 286, 1710, 411, 498, 286, 458, 1340, 466, 5221, 11, 558, 30, 51470, 51470, 467, 311, 257, 5862, 5924, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2115441991927776, "compression_ratio": 1.6476190476190475, "no_speech_prob": 6.337220384011744e-06}, {"id": 451, "seek": 154588, "start": 1558.9, "end": 1563.9, "text": " Here the probability is a set of measures zero.", "tokens": [50364, 583, 291, 393, 747, 264, 21510, 293, 2710, 1125, 365, 257, 30199, 7316, 11, 293, 300, 2709, 50561, 50561, 291, 257, 8482, 13, 50633, 50633, 1079, 11, 3993, 300, 286, 500, 380, 767, 528, 264, 3565, 295, 257, 8482, 13, 50898, 50898, 286, 500, 380, 528, 264, 2281, 281, 312, 264, 3565, 295, 257, 8482, 13, 51015, 51015, 1692, 264, 8482, 307, 257, 992, 295, 8000, 4018, 13, 51265, 51265, 286, 1710, 411, 498, 286, 458, 1340, 466, 5221, 11, 558, 30, 51470, 51470, 467, 311, 257, 5862, 5924, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2115441991927776, "compression_ratio": 1.6476190476190475, "no_speech_prob": 6.337220384011744e-06}, {"id": 452, "seek": 154588, "start": 1563.9, "end": 1568.0, "text": " I speak like if I know anything about math, right?", "tokens": [50364, 583, 291, 393, 747, 264, 21510, 293, 2710, 1125, 365, 257, 30199, 7316, 11, 293, 300, 2709, 50561, 50561, 291, 257, 8482, 13, 50633, 50633, 1079, 11, 3993, 300, 286, 500, 380, 767, 528, 264, 3565, 295, 257, 8482, 13, 50898, 50898, 286, 500, 380, 528, 264, 2281, 281, 312, 264, 3565, 295, 257, 8482, 13, 51015, 51015, 1692, 264, 8482, 307, 257, 992, 295, 8000, 4018, 13, 51265, 51265, 286, 1710, 411, 498, 286, 458, 1340, 466, 5221, 11, 558, 30, 51470, 51470, 467, 311, 257, 5862, 5924, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2115441991927776, "compression_ratio": 1.6476190476190475, "no_speech_prob": 6.337220384011744e-06}, {"id": 453, "seek": 154588, "start": 1568.0, "end": 1570.0, "text": " It's a thin plate.", "tokens": [50364, 583, 291, 393, 747, 264, 21510, 293, 2710, 1125, 365, 257, 30199, 7316, 11, 293, 300, 2709, 50561, 50561, 291, 257, 8482, 13, 50633, 50633, 1079, 11, 3993, 300, 286, 500, 380, 767, 528, 264, 3565, 295, 257, 8482, 13, 50898, 50898, 286, 500, 380, 528, 264, 2281, 281, 312, 264, 3565, 295, 257, 8482, 13, 51015, 51015, 1692, 264, 8482, 307, 257, 992, 295, 8000, 4018, 13, 51265, 51265, 286, 1710, 411, 498, 286, 458, 1340, 466, 5221, 11, 558, 30, 51470, 51470, 467, 311, 257, 5862, 5924, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2115441991927776, "compression_ratio": 1.6476190476190475, "no_speech_prob": 6.337220384011744e-06}, {"id": 454, "seek": 157000, "start": 1570.0, "end": 1579.2, "text": " And so the distribution here would be infinity on that point, on that manifold, and zero", "tokens": [50364, 400, 370, 264, 7316, 510, 576, 312, 13202, 322, 300, 935, 11, 322, 300, 47138, 11, 293, 4018, 50824, 50824, 445, 17889, 2380, 295, 309, 13, 50990, 50990, 3013, 1355, 341, 2281, 2445, 11, 4461, 291, 13075, 1125, 309, 11, 486, 362, 281, 362, 13785, 51186, 51186, 9834, 11, 13785, 17443, 11, 420, 746, 498, 309, 311, 257, 18161, 2533, 13, 51366, 51366, 400, 309, 311, 406, 588, 4420, 570, 291, 393, 380, 360, 38253, 365, 341, 13, 51466, 51466, 467, 3643, 257, 12880, 1164, 13, 51516, 51516, 509, 393, 380, 360, 38253, 13, 51566, 51566, 708, 291, 528, 307, 257, 2445, 300, 307, 5508, 11, 370, 300, 412, 604, 935, 510, 11, 264, 16235, 295, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12455068429311117, "compression_ratio": 1.7148014440433212, "no_speech_prob": 3.611760348576354e-06}, {"id": 455, "seek": 157000, "start": 1579.2, "end": 1582.52, "text": " just epsilon outside of it.", "tokens": [50364, 400, 370, 264, 7316, 510, 576, 312, 13202, 322, 300, 935, 11, 322, 300, 47138, 11, 293, 4018, 50824, 50824, 445, 17889, 2380, 295, 309, 13, 50990, 50990, 3013, 1355, 341, 2281, 2445, 11, 4461, 291, 13075, 1125, 309, 11, 486, 362, 281, 362, 13785, 51186, 51186, 9834, 11, 13785, 17443, 11, 420, 746, 498, 309, 311, 257, 18161, 2533, 13, 51366, 51366, 400, 309, 311, 406, 588, 4420, 570, 291, 393, 380, 360, 38253, 365, 341, 13, 51466, 51466, 467, 3643, 257, 12880, 1164, 13, 51516, 51516, 509, 393, 380, 360, 38253, 13, 51566, 51566, 708, 291, 528, 307, 257, 2445, 300, 307, 5508, 11, 370, 300, 412, 604, 935, 510, 11, 264, 16235, 295, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12455068429311117, "compression_ratio": 1.7148014440433212, "no_speech_prob": 3.611760348576354e-06}, {"id": 456, "seek": 157000, "start": 1582.52, "end": 1586.44, "text": " Which means this energy function, however you parameterize it, will have to have infinite", "tokens": [50364, 400, 370, 264, 7316, 510, 576, 312, 13202, 322, 300, 935, 11, 322, 300, 47138, 11, 293, 4018, 50824, 50824, 445, 17889, 2380, 295, 309, 13, 50990, 50990, 3013, 1355, 341, 2281, 2445, 11, 4461, 291, 13075, 1125, 309, 11, 486, 362, 281, 362, 13785, 51186, 51186, 9834, 11, 13785, 17443, 11, 420, 746, 498, 309, 311, 257, 18161, 2533, 13, 51366, 51366, 400, 309, 311, 406, 588, 4420, 570, 291, 393, 380, 360, 38253, 365, 341, 13, 51466, 51466, 467, 3643, 257, 12880, 1164, 13, 51516, 51516, 509, 393, 380, 360, 38253, 13, 51566, 51566, 708, 291, 528, 307, 257, 2445, 300, 307, 5508, 11, 370, 300, 412, 604, 935, 510, 11, 264, 16235, 295, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12455068429311117, "compression_ratio": 1.7148014440433212, "no_speech_prob": 3.611760348576354e-06}, {"id": 457, "seek": 157000, "start": 1586.44, "end": 1590.04, "text": " parameters, infinite weights, or something if it's a neural net.", "tokens": [50364, 400, 370, 264, 7316, 510, 576, 312, 13202, 322, 300, 935, 11, 322, 300, 47138, 11, 293, 4018, 50824, 50824, 445, 17889, 2380, 295, 309, 13, 50990, 50990, 3013, 1355, 341, 2281, 2445, 11, 4461, 291, 13075, 1125, 309, 11, 486, 362, 281, 362, 13785, 51186, 51186, 9834, 11, 13785, 17443, 11, 420, 746, 498, 309, 311, 257, 18161, 2533, 13, 51366, 51366, 400, 309, 311, 406, 588, 4420, 570, 291, 393, 380, 360, 38253, 365, 341, 13, 51466, 51466, 467, 3643, 257, 12880, 1164, 13, 51516, 51516, 509, 393, 380, 360, 38253, 13, 51566, 51566, 708, 291, 528, 307, 257, 2445, 300, 307, 5508, 11, 370, 300, 412, 604, 935, 510, 11, 264, 16235, 295, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12455068429311117, "compression_ratio": 1.7148014440433212, "no_speech_prob": 3.611760348576354e-06}, {"id": 458, "seek": 157000, "start": 1590.04, "end": 1592.04, "text": " And it's not very useful because you can't do inference with this.", "tokens": [50364, 400, 370, 264, 7316, 510, 576, 312, 13202, 322, 300, 935, 11, 322, 300, 47138, 11, 293, 4018, 50824, 50824, 445, 17889, 2380, 295, 309, 13, 50990, 50990, 3013, 1355, 341, 2281, 2445, 11, 4461, 291, 13075, 1125, 309, 11, 486, 362, 281, 362, 13785, 51186, 51186, 9834, 11, 13785, 17443, 11, 420, 746, 498, 309, 311, 257, 18161, 2533, 13, 51366, 51366, 400, 309, 311, 406, 588, 4420, 570, 291, 393, 380, 360, 38253, 365, 341, 13, 51466, 51466, 467, 3643, 257, 12880, 1164, 13, 51516, 51516, 509, 393, 380, 360, 38253, 13, 51566, 51566, 708, 291, 528, 307, 257, 2445, 300, 307, 5508, 11, 370, 300, 412, 604, 935, 510, 11, 264, 16235, 295, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12455068429311117, "compression_ratio": 1.7148014440433212, "no_speech_prob": 3.611760348576354e-06}, {"id": 459, "seek": 157000, "start": 1592.04, "end": 1593.04, "text": " It becomes a golf course.", "tokens": [50364, 400, 370, 264, 7316, 510, 576, 312, 13202, 322, 300, 935, 11, 322, 300, 47138, 11, 293, 4018, 50824, 50824, 445, 17889, 2380, 295, 309, 13, 50990, 50990, 3013, 1355, 341, 2281, 2445, 11, 4461, 291, 13075, 1125, 309, 11, 486, 362, 281, 362, 13785, 51186, 51186, 9834, 11, 13785, 17443, 11, 420, 746, 498, 309, 311, 257, 18161, 2533, 13, 51366, 51366, 400, 309, 311, 406, 588, 4420, 570, 291, 393, 380, 360, 38253, 365, 341, 13, 51466, 51466, 467, 3643, 257, 12880, 1164, 13, 51516, 51516, 509, 393, 380, 360, 38253, 13, 51566, 51566, 708, 291, 528, 307, 257, 2445, 300, 307, 5508, 11, 370, 300, 412, 604, 935, 510, 11, 264, 16235, 295, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12455068429311117, "compression_ratio": 1.7148014440433212, "no_speech_prob": 3.611760348576354e-06}, {"id": 460, "seek": 157000, "start": 1593.04, "end": 1594.04, "text": " You can't do inference.", "tokens": [50364, 400, 370, 264, 7316, 510, 576, 312, 13202, 322, 300, 935, 11, 322, 300, 47138, 11, 293, 4018, 50824, 50824, 445, 17889, 2380, 295, 309, 13, 50990, 50990, 3013, 1355, 341, 2281, 2445, 11, 4461, 291, 13075, 1125, 309, 11, 486, 362, 281, 362, 13785, 51186, 51186, 9834, 11, 13785, 17443, 11, 420, 746, 498, 309, 311, 257, 18161, 2533, 13, 51366, 51366, 400, 309, 311, 406, 588, 4420, 570, 291, 393, 380, 360, 38253, 365, 341, 13, 51466, 51466, 467, 3643, 257, 12880, 1164, 13, 51516, 51516, 509, 393, 380, 360, 38253, 13, 51566, 51566, 708, 291, 528, 307, 257, 2445, 300, 307, 5508, 11, 370, 300, 412, 604, 935, 510, 11, 264, 16235, 295, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12455068429311117, "compression_ratio": 1.7148014440433212, "no_speech_prob": 3.611760348576354e-06}, {"id": 461, "seek": 157000, "start": 1594.04, "end": 1599.12, "text": " What you want is a function that is smooth, so that at any point here, the gradient of", "tokens": [50364, 400, 370, 264, 7316, 510, 576, 312, 13202, 322, 300, 935, 11, 322, 300, 47138, 11, 293, 4018, 50824, 50824, 445, 17889, 2380, 295, 309, 13, 50990, 50990, 3013, 1355, 341, 2281, 2445, 11, 4461, 291, 13075, 1125, 309, 11, 486, 362, 281, 362, 13785, 51186, 51186, 9834, 11, 13785, 17443, 11, 420, 746, 498, 309, 311, 257, 18161, 2533, 13, 51366, 51366, 400, 309, 311, 406, 588, 4420, 570, 291, 393, 380, 360, 38253, 365, 341, 13, 51466, 51466, 467, 3643, 257, 12880, 1164, 13, 51516, 51516, 509, 393, 380, 360, 38253, 13, 51566, 51566, 708, 291, 528, 307, 257, 2445, 300, 307, 5508, 11, 370, 300, 412, 604, 935, 510, 11, 264, 16235, 295, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12455068429311117, "compression_ratio": 1.7148014440433212, "no_speech_prob": 3.611760348576354e-06}, {"id": 462, "seek": 159912, "start": 1599.12, "end": 1603.8, "text": " that function might tell you where to go to get a point from the manifold.", "tokens": [50364, 300, 2445, 1062, 980, 291, 689, 281, 352, 281, 483, 257, 935, 490, 264, 47138, 13, 50598, 50598, 407, 341, 307, 588, 846, 950, 2399, 13, 50715, 50715, 509, 360, 406, 528, 281, 1466, 37870, 13, 50836, 50836, 814, 434, 1578, 337, 291, 13, 50886, 50886, 29076, 449, 22119, 15846, 13, 50936, 50936, 467, 445, 1177, 380, 360, 264, 558, 551, 13, 51072, 51072, 639, 307, 257, 955, 6146, 300, 767, 460, 1770, 82, 360, 13, 51200, 51200, 440, 3380, 37642, 50137, 300, 341, 820, 312, 472, 510, 11, 4018, 2380, 11, 293, 300, 311, 51526, 51526, 445, 257, 1578, 1558, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.18002333731021522, "compression_ratio": 1.528688524590164, "no_speech_prob": 7.646202902833465e-06}, {"id": 463, "seek": 159912, "start": 1603.8, "end": 1606.1399999999999, "text": " So this is very emphatic.", "tokens": [50364, 300, 2445, 1062, 980, 291, 689, 281, 352, 281, 483, 257, 935, 490, 264, 47138, 13, 50598, 50598, 407, 341, 307, 588, 846, 950, 2399, 13, 50715, 50715, 509, 360, 406, 528, 281, 1466, 37870, 13, 50836, 50836, 814, 434, 1578, 337, 291, 13, 50886, 50886, 29076, 449, 22119, 15846, 13, 50936, 50936, 467, 445, 1177, 380, 360, 264, 558, 551, 13, 51072, 51072, 639, 307, 257, 955, 6146, 300, 767, 460, 1770, 82, 360, 13, 51200, 51200, 440, 3380, 37642, 50137, 300, 341, 820, 312, 472, 510, 11, 4018, 2380, 11, 293, 300, 311, 51526, 51526, 445, 257, 1578, 1558, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.18002333731021522, "compression_ratio": 1.528688524590164, "no_speech_prob": 7.646202902833465e-06}, {"id": 464, "seek": 159912, "start": 1606.1399999999999, "end": 1608.56, "text": " You do not want to learn distributions.", "tokens": [50364, 300, 2445, 1062, 980, 291, 689, 281, 352, 281, 483, 257, 935, 490, 264, 47138, 13, 50598, 50598, 407, 341, 307, 588, 846, 950, 2399, 13, 50715, 50715, 509, 360, 406, 528, 281, 1466, 37870, 13, 50836, 50836, 814, 434, 1578, 337, 291, 13, 50886, 50886, 29076, 449, 22119, 15846, 13, 50936, 50936, 467, 445, 1177, 380, 360, 264, 558, 551, 13, 51072, 51072, 639, 307, 257, 955, 6146, 300, 767, 460, 1770, 82, 360, 13, 51200, 51200, 440, 3380, 37642, 50137, 300, 341, 820, 312, 472, 510, 11, 4018, 2380, 11, 293, 300, 311, 51526, 51526, 445, 257, 1578, 1558, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.18002333731021522, "compression_ratio": 1.528688524590164, "no_speech_prob": 7.646202902833465e-06}, {"id": 465, "seek": 159912, "start": 1608.56, "end": 1609.56, "text": " They're bad for you.", "tokens": [50364, 300, 2445, 1062, 980, 291, 689, 281, 352, 281, 483, 257, 935, 490, 264, 47138, 13, 50598, 50598, 407, 341, 307, 588, 846, 950, 2399, 13, 50715, 50715, 509, 360, 406, 528, 281, 1466, 37870, 13, 50836, 50836, 814, 434, 1578, 337, 291, 13, 50886, 50886, 29076, 449, 22119, 15846, 13, 50936, 50936, 467, 445, 1177, 380, 360, 264, 558, 551, 13, 51072, 51072, 639, 307, 257, 955, 6146, 300, 767, 460, 1770, 82, 360, 13, 51200, 51200, 440, 3380, 37642, 50137, 300, 341, 820, 312, 472, 510, 11, 4018, 2380, 11, 293, 300, 311, 51526, 51526, 445, 257, 1578, 1558, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.18002333731021522, "compression_ratio": 1.528688524590164, "no_speech_prob": 7.646202902833465e-06}, {"id": 466, "seek": 159912, "start": 1609.56, "end": 1610.56, "text": " Maximum likelihood sucks.", "tokens": [50364, 300, 2445, 1062, 980, 291, 689, 281, 352, 281, 483, 257, 935, 490, 264, 47138, 13, 50598, 50598, 407, 341, 307, 588, 846, 950, 2399, 13, 50715, 50715, 509, 360, 406, 528, 281, 1466, 37870, 13, 50836, 50836, 814, 434, 1578, 337, 291, 13, 50886, 50886, 29076, 449, 22119, 15846, 13, 50936, 50936, 467, 445, 1177, 380, 360, 264, 558, 551, 13, 51072, 51072, 639, 307, 257, 955, 6146, 300, 767, 460, 1770, 82, 360, 13, 51200, 51200, 440, 3380, 37642, 50137, 300, 341, 820, 312, 472, 510, 11, 4018, 2380, 11, 293, 300, 311, 51526, 51526, 445, 257, 1578, 1558, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.18002333731021522, "compression_ratio": 1.528688524590164, "no_speech_prob": 7.646202902833465e-06}, {"id": 467, "seek": 159912, "start": 1610.56, "end": 1613.28, "text": " It just doesn't do the right thing.", "tokens": [50364, 300, 2445, 1062, 980, 291, 689, 281, 352, 281, 483, 257, 935, 490, 264, 47138, 13, 50598, 50598, 407, 341, 307, 588, 846, 950, 2399, 13, 50715, 50715, 509, 360, 406, 528, 281, 1466, 37870, 13, 50836, 50836, 814, 434, 1578, 337, 291, 13, 50886, 50886, 29076, 449, 22119, 15846, 13, 50936, 50936, 467, 445, 1177, 380, 360, 264, 558, 551, 13, 51072, 51072, 639, 307, 257, 955, 6146, 300, 767, 460, 1770, 82, 360, 13, 51200, 51200, 440, 3380, 37642, 50137, 300, 341, 820, 312, 472, 510, 11, 4018, 2380, 11, 293, 300, 311, 51526, 51526, 445, 257, 1578, 1558, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.18002333731021522, "compression_ratio": 1.528688524590164, "no_speech_prob": 7.646202902833465e-06}, {"id": 468, "seek": 159912, "start": 1613.28, "end": 1615.84, "text": " This is a big mistake that actually GANs do.", "tokens": [50364, 300, 2445, 1062, 980, 291, 689, 281, 352, 281, 483, 257, 935, 490, 264, 47138, 13, 50598, 50598, 407, 341, 307, 588, 846, 950, 2399, 13, 50715, 50715, 509, 360, 406, 528, 281, 1466, 37870, 13, 50836, 50836, 814, 434, 1578, 337, 291, 13, 50886, 50886, 29076, 449, 22119, 15846, 13, 50936, 50936, 467, 445, 1177, 380, 360, 264, 558, 551, 13, 51072, 51072, 639, 307, 257, 955, 6146, 300, 767, 460, 1770, 82, 360, 13, 51200, 51200, 440, 3380, 37642, 50137, 300, 341, 820, 312, 472, 510, 11, 4018, 2380, 11, 293, 300, 311, 51526, 51526, 445, 257, 1578, 1558, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.18002333731021522, "compression_ratio": 1.528688524590164, "no_speech_prob": 7.646202902833465e-06}, {"id": 469, "seek": 159912, "start": 1615.84, "end": 1622.36, "text": " The original formulation insists that this should be one here, zero outside, and that's", "tokens": [50364, 300, 2445, 1062, 980, 291, 689, 281, 352, 281, 483, 257, 935, 490, 264, 47138, 13, 50598, 50598, 407, 341, 307, 588, 846, 950, 2399, 13, 50715, 50715, 509, 360, 406, 528, 281, 1466, 37870, 13, 50836, 50836, 814, 434, 1578, 337, 291, 13, 50886, 50886, 29076, 449, 22119, 15846, 13, 50936, 50936, 467, 445, 1177, 380, 360, 264, 558, 551, 13, 51072, 51072, 639, 307, 257, 955, 6146, 300, 767, 460, 1770, 82, 360, 13, 51200, 51200, 440, 3380, 37642, 50137, 300, 341, 820, 312, 472, 510, 11, 4018, 2380, 11, 293, 300, 311, 51526, 51526, 445, 257, 1578, 1558, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.18002333731021522, "compression_ratio": 1.528688524590164, "no_speech_prob": 7.646202902833465e-06}, {"id": 470, "seek": 159912, "start": 1622.36, "end": 1624.56, "text": " just a bad idea.", "tokens": [50364, 300, 2445, 1062, 980, 291, 689, 281, 352, 281, 483, 257, 935, 490, 264, 47138, 13, 50598, 50598, 407, 341, 307, 588, 846, 950, 2399, 13, 50715, 50715, 509, 360, 406, 528, 281, 1466, 37870, 13, 50836, 50836, 814, 434, 1578, 337, 291, 13, 50886, 50886, 29076, 449, 22119, 15846, 13, 50936, 50936, 467, 445, 1177, 380, 360, 264, 558, 551, 13, 51072, 51072, 639, 307, 257, 955, 6146, 300, 767, 460, 1770, 82, 360, 13, 51200, 51200, 440, 3380, 37642, 50137, 300, 341, 820, 312, 472, 510, 11, 4018, 2380, 11, 293, 300, 311, 51526, 51526, 445, 257, 1578, 1558, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.18002333731021522, "compression_ratio": 1.528688524590164, "no_speech_prob": 7.646202902833465e-06}, {"id": 471, "seek": 162456, "start": 1624.56, "end": 1631.72, "text": " So that's an example where applying probability theory blindly actually is bad for you.", "tokens": [50364, 407, 300, 311, 364, 1365, 689, 9275, 8482, 5261, 47744, 767, 307, 1578, 337, 291, 13, 50722, 50722, 400, 286, 600, 668, 1382, 281, 13650, 561, 484, 295, 309, 337, 945, 924, 1553, 2245, 370, 1400, 13, 51236, 51236, 407, 341, 307, 264, 11, 437, 286, 445, 4712, 291, 307, 264, 27708, 3037, 13, 51378, 51378, 400, 456, 311, 364, 47916, 3037, 689, 291, 500, 380, 767, 362, 364, 14816, 13, 51536, 51536, 440, 787, 551, 291, 528, 281, 458, 307, 2316, 264, 6920, 14416, 295, 288, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14008182028065558, "compression_ratio": 1.6131687242798354, "no_speech_prob": 2.3454171582670824e-07}, {"id": 472, "seek": 162456, "start": 1631.72, "end": 1642.0, "text": " And I've been trying to snap people out of it for 20 years without success so far.", "tokens": [50364, 407, 300, 311, 364, 1365, 689, 9275, 8482, 5261, 47744, 767, 307, 1578, 337, 291, 13, 50722, 50722, 400, 286, 600, 668, 1382, 281, 13650, 561, 484, 295, 309, 337, 945, 924, 1553, 2245, 370, 1400, 13, 51236, 51236, 407, 341, 307, 264, 11, 437, 286, 445, 4712, 291, 307, 264, 27708, 3037, 13, 51378, 51378, 400, 456, 311, 364, 47916, 3037, 689, 291, 500, 380, 767, 362, 364, 14816, 13, 51536, 51536, 440, 787, 551, 291, 528, 281, 458, 307, 2316, 264, 6920, 14416, 295, 288, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14008182028065558, "compression_ratio": 1.6131687242798354, "no_speech_prob": 2.3454171582670824e-07}, {"id": 473, "seek": 162456, "start": 1642.0, "end": 1644.84, "text": " So this is the, what I just showed you is the conditional version.", "tokens": [50364, 407, 300, 311, 364, 1365, 689, 9275, 8482, 5261, 47744, 767, 307, 1578, 337, 291, 13, 50722, 50722, 400, 286, 600, 668, 1382, 281, 13650, 561, 484, 295, 309, 337, 945, 924, 1553, 2245, 370, 1400, 13, 51236, 51236, 407, 341, 307, 264, 11, 437, 286, 445, 4712, 291, 307, 264, 27708, 3037, 13, 51378, 51378, 400, 456, 311, 364, 47916, 3037, 689, 291, 500, 380, 767, 362, 364, 14816, 13, 51536, 51536, 440, 787, 551, 291, 528, 281, 458, 307, 2316, 264, 6920, 14416, 295, 288, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14008182028065558, "compression_ratio": 1.6131687242798354, "no_speech_prob": 2.3454171582670824e-07}, {"id": 474, "seek": 162456, "start": 1644.84, "end": 1648.0, "text": " And there's an unconditional version where you don't actually have an observation.", "tokens": [50364, 407, 300, 311, 364, 1365, 689, 9275, 8482, 5261, 47744, 767, 307, 1578, 337, 291, 13, 50722, 50722, 400, 286, 600, 668, 1382, 281, 13650, 561, 484, 295, 309, 337, 945, 924, 1553, 2245, 370, 1400, 13, 51236, 51236, 407, 341, 307, 264, 11, 437, 286, 445, 4712, 291, 307, 264, 27708, 3037, 13, 51378, 51378, 400, 456, 311, 364, 47916, 3037, 689, 291, 500, 380, 767, 362, 364, 14816, 13, 51536, 51536, 440, 787, 551, 291, 528, 281, 458, 307, 2316, 264, 6920, 14416, 295, 288, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14008182028065558, "compression_ratio": 1.6131687242798354, "no_speech_prob": 2.3454171582670824e-07}, {"id": 475, "seek": 162456, "start": 1648.0, "end": 1653.56, "text": " The only thing you want to know is model the internal consistency of y.", "tokens": [50364, 407, 300, 311, 364, 1365, 689, 9275, 8482, 5261, 47744, 767, 307, 1578, 337, 291, 13, 50722, 50722, 400, 286, 600, 668, 1382, 281, 13650, 561, 484, 295, 309, 337, 945, 924, 1553, 2245, 370, 1400, 13, 51236, 51236, 407, 341, 307, 264, 11, 437, 286, 445, 4712, 291, 307, 264, 27708, 3037, 13, 51378, 51378, 400, 456, 311, 364, 47916, 3037, 689, 291, 500, 380, 767, 362, 364, 14816, 13, 51536, 51536, 440, 787, 551, 291, 528, 281, 458, 307, 2316, 264, 6920, 14416, 295, 288, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14008182028065558, "compression_ratio": 1.6131687242798354, "no_speech_prob": 2.3454171582670824e-07}, {"id": 476, "seek": 165356, "start": 1653.56, "end": 1655.8799999999999, "text": " And really, those two problems are not that different from each other.", "tokens": [50364, 400, 534, 11, 729, 732, 2740, 366, 406, 300, 819, 490, 1184, 661, 13, 50480, 50480, 682, 264, 700, 1389, 11, 291, 458, 257, 4059, 72, 597, 992, 295, 9102, 366, 9951, 712, 13, 50654, 50654, 682, 264, 1150, 1389, 11, 291, 500, 380, 458, 257, 4059, 72, 597, 644, 295, 288, 307, 516, 281, 312, 13095, 13, 50816, 50816, 400, 370, 510, 11, 437, 264, 2316, 2709, 291, 307, 733, 295, 257, 33621, 11, 257, 2445, 300, 2709, 291, 51054, 51054, 264, 33621, 1296, 288, 16, 293, 288, 17, 294, 341, 1389, 13, 51232, 51232, 407, 721, 411, 8399, 22660, 378, 433, 366, 341, 2010, 13, 51308, 51308, 1079, 30, 51358, 51358, 407, 291, 434, 3579, 510, 2281, 6915, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 300, 13, 51576, 51576, 1033, 13, 51626, 51626, 467, 311, 47540, 281, 257, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 281, 3847, 309, 365, 6674, 22119, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18312628475236303, "compression_ratio": 1.869969040247678, "no_speech_prob": 2.5068313334486447e-05}, {"id": 477, "seek": 165356, "start": 1655.8799999999999, "end": 1659.36, "text": " In the first case, you know a priori which set of variables are observable.", "tokens": [50364, 400, 534, 11, 729, 732, 2740, 366, 406, 300, 819, 490, 1184, 661, 13, 50480, 50480, 682, 264, 700, 1389, 11, 291, 458, 257, 4059, 72, 597, 992, 295, 9102, 366, 9951, 712, 13, 50654, 50654, 682, 264, 1150, 1389, 11, 291, 500, 380, 458, 257, 4059, 72, 597, 644, 295, 288, 307, 516, 281, 312, 13095, 13, 50816, 50816, 400, 370, 510, 11, 437, 264, 2316, 2709, 291, 307, 733, 295, 257, 33621, 11, 257, 2445, 300, 2709, 291, 51054, 51054, 264, 33621, 1296, 288, 16, 293, 288, 17, 294, 341, 1389, 13, 51232, 51232, 407, 721, 411, 8399, 22660, 378, 433, 366, 341, 2010, 13, 51308, 51308, 1079, 30, 51358, 51358, 407, 291, 434, 3579, 510, 2281, 6915, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 300, 13, 51576, 51576, 1033, 13, 51626, 51626, 467, 311, 47540, 281, 257, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 281, 3847, 309, 365, 6674, 22119, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18312628475236303, "compression_ratio": 1.869969040247678, "no_speech_prob": 2.5068313334486447e-05}, {"id": 478, "seek": 165356, "start": 1659.36, "end": 1662.6, "text": " In the second case, you don't know a priori which part of y is going to be observed.", "tokens": [50364, 400, 534, 11, 729, 732, 2740, 366, 406, 300, 819, 490, 1184, 661, 13, 50480, 50480, 682, 264, 700, 1389, 11, 291, 458, 257, 4059, 72, 597, 992, 295, 9102, 366, 9951, 712, 13, 50654, 50654, 682, 264, 1150, 1389, 11, 291, 500, 380, 458, 257, 4059, 72, 597, 644, 295, 288, 307, 516, 281, 312, 13095, 13, 50816, 50816, 400, 370, 510, 11, 437, 264, 2316, 2709, 291, 307, 733, 295, 257, 33621, 11, 257, 2445, 300, 2709, 291, 51054, 51054, 264, 33621, 1296, 288, 16, 293, 288, 17, 294, 341, 1389, 13, 51232, 51232, 407, 721, 411, 8399, 22660, 378, 433, 366, 341, 2010, 13, 51308, 51308, 1079, 30, 51358, 51358, 407, 291, 434, 3579, 510, 2281, 6915, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 300, 13, 51576, 51576, 1033, 13, 51626, 51626, 467, 311, 47540, 281, 257, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 281, 3847, 309, 365, 6674, 22119, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18312628475236303, "compression_ratio": 1.869969040247678, "no_speech_prob": 2.5068313334486447e-05}, {"id": 479, "seek": 165356, "start": 1662.6, "end": 1667.36, "text": " And so here, what the model gives you is kind of a dependency, a function that gives you", "tokens": [50364, 400, 534, 11, 729, 732, 2740, 366, 406, 300, 819, 490, 1184, 661, 13, 50480, 50480, 682, 264, 700, 1389, 11, 291, 458, 257, 4059, 72, 597, 992, 295, 9102, 366, 9951, 712, 13, 50654, 50654, 682, 264, 1150, 1389, 11, 291, 500, 380, 458, 257, 4059, 72, 597, 644, 295, 288, 307, 516, 281, 312, 13095, 13, 50816, 50816, 400, 370, 510, 11, 437, 264, 2316, 2709, 291, 307, 733, 295, 257, 33621, 11, 257, 2445, 300, 2709, 291, 51054, 51054, 264, 33621, 1296, 288, 16, 293, 288, 17, 294, 341, 1389, 13, 51232, 51232, 407, 721, 411, 8399, 22660, 378, 433, 366, 341, 2010, 13, 51308, 51308, 1079, 30, 51358, 51358, 407, 291, 434, 3579, 510, 2281, 6915, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 300, 13, 51576, 51576, 1033, 13, 51626, 51626, 467, 311, 47540, 281, 257, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 281, 3847, 309, 365, 6674, 22119, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18312628475236303, "compression_ratio": 1.869969040247678, "no_speech_prob": 2.5068313334486447e-05}, {"id": 480, "seek": 165356, "start": 1667.36, "end": 1670.9199999999998, "text": " the dependency between y1 and y2 in this case.", "tokens": [50364, 400, 534, 11, 729, 732, 2740, 366, 406, 300, 819, 490, 1184, 661, 13, 50480, 50480, 682, 264, 700, 1389, 11, 291, 458, 257, 4059, 72, 597, 992, 295, 9102, 366, 9951, 712, 13, 50654, 50654, 682, 264, 1150, 1389, 11, 291, 500, 380, 458, 257, 4059, 72, 597, 644, 295, 288, 307, 516, 281, 312, 13095, 13, 50816, 50816, 400, 370, 510, 11, 437, 264, 2316, 2709, 291, 307, 733, 295, 257, 33621, 11, 257, 2445, 300, 2709, 291, 51054, 51054, 264, 33621, 1296, 288, 16, 293, 288, 17, 294, 341, 1389, 13, 51232, 51232, 407, 721, 411, 8399, 22660, 378, 433, 366, 341, 2010, 13, 51308, 51308, 1079, 30, 51358, 51358, 407, 291, 434, 3579, 510, 2281, 6915, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 300, 13, 51576, 51576, 1033, 13, 51626, 51626, 467, 311, 47540, 281, 257, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 281, 3847, 309, 365, 6674, 22119, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18312628475236303, "compression_ratio": 1.869969040247678, "no_speech_prob": 2.5068313334486447e-05}, {"id": 481, "seek": 165356, "start": 1670.9199999999998, "end": 1672.44, "text": " So things like autoencoders are this type.", "tokens": [50364, 400, 534, 11, 729, 732, 2740, 366, 406, 300, 819, 490, 1184, 661, 13, 50480, 50480, 682, 264, 700, 1389, 11, 291, 458, 257, 4059, 72, 597, 992, 295, 9102, 366, 9951, 712, 13, 50654, 50654, 682, 264, 1150, 1389, 11, 291, 500, 380, 458, 257, 4059, 72, 597, 644, 295, 288, 307, 516, 281, 312, 13095, 13, 50816, 50816, 400, 370, 510, 11, 437, 264, 2316, 2709, 291, 307, 733, 295, 257, 33621, 11, 257, 2445, 300, 2709, 291, 51054, 51054, 264, 33621, 1296, 288, 16, 293, 288, 17, 294, 341, 1389, 13, 51232, 51232, 407, 721, 411, 8399, 22660, 378, 433, 366, 341, 2010, 13, 51308, 51308, 1079, 30, 51358, 51358, 407, 291, 434, 3579, 510, 2281, 6915, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 300, 13, 51576, 51576, 1033, 13, 51626, 51626, 467, 311, 47540, 281, 257, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 281, 3847, 309, 365, 6674, 22119, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18312628475236303, "compression_ratio": 1.869969040247678, "no_speech_prob": 2.5068313334486447e-05}, {"id": 482, "seek": 165356, "start": 1672.44, "end": 1673.44, "text": " Yes?", "tokens": [50364, 400, 534, 11, 729, 732, 2740, 366, 406, 300, 819, 490, 1184, 661, 13, 50480, 50480, 682, 264, 700, 1389, 11, 291, 458, 257, 4059, 72, 597, 992, 295, 9102, 366, 9951, 712, 13, 50654, 50654, 682, 264, 1150, 1389, 11, 291, 500, 380, 458, 257, 4059, 72, 597, 644, 295, 288, 307, 516, 281, 312, 13095, 13, 50816, 50816, 400, 370, 510, 11, 437, 264, 2316, 2709, 291, 307, 733, 295, 257, 33621, 11, 257, 2445, 300, 2709, 291, 51054, 51054, 264, 33621, 1296, 288, 16, 293, 288, 17, 294, 341, 1389, 13, 51232, 51232, 407, 721, 411, 8399, 22660, 378, 433, 366, 341, 2010, 13, 51308, 51308, 1079, 30, 51358, 51358, 407, 291, 434, 3579, 510, 2281, 6915, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 300, 13, 51576, 51576, 1033, 13, 51626, 51626, 467, 311, 47540, 281, 257, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 281, 3847, 309, 365, 6674, 22119, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18312628475236303, "compression_ratio": 1.869969040247678, "no_speech_prob": 2.5068313334486447e-05}, {"id": 483, "seek": 165356, "start": 1673.44, "end": 1677.8, "text": " So you're writing here energy equals negative log likelihood, but you don't want that.", "tokens": [50364, 400, 534, 11, 729, 732, 2740, 366, 406, 300, 819, 490, 1184, 661, 13, 50480, 50480, 682, 264, 700, 1389, 11, 291, 458, 257, 4059, 72, 597, 992, 295, 9102, 366, 9951, 712, 13, 50654, 50654, 682, 264, 1150, 1389, 11, 291, 500, 380, 458, 257, 4059, 72, 597, 644, 295, 288, 307, 516, 281, 312, 13095, 13, 50816, 50816, 400, 370, 510, 11, 437, 264, 2316, 2709, 291, 307, 733, 295, 257, 33621, 11, 257, 2445, 300, 2709, 291, 51054, 51054, 264, 33621, 1296, 288, 16, 293, 288, 17, 294, 341, 1389, 13, 51232, 51232, 407, 721, 411, 8399, 22660, 378, 433, 366, 341, 2010, 13, 51308, 51308, 1079, 30, 51358, 51358, 407, 291, 434, 3579, 510, 2281, 6915, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 300, 13, 51576, 51576, 1033, 13, 51626, 51626, 467, 311, 47540, 281, 257, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 281, 3847, 309, 365, 6674, 22119, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18312628475236303, "compression_ratio": 1.869969040247678, "no_speech_prob": 2.5068313334486447e-05}, {"id": 484, "seek": 165356, "start": 1677.8, "end": 1678.8, "text": " Okay.", "tokens": [50364, 400, 534, 11, 729, 732, 2740, 366, 406, 300, 819, 490, 1184, 661, 13, 50480, 50480, 682, 264, 700, 1389, 11, 291, 458, 257, 4059, 72, 597, 992, 295, 9102, 366, 9951, 712, 13, 50654, 50654, 682, 264, 1150, 1389, 11, 291, 500, 380, 458, 257, 4059, 72, 597, 644, 295, 288, 307, 516, 281, 312, 13095, 13, 50816, 50816, 400, 370, 510, 11, 437, 264, 2316, 2709, 291, 307, 733, 295, 257, 33621, 11, 257, 2445, 300, 2709, 291, 51054, 51054, 264, 33621, 1296, 288, 16, 293, 288, 17, 294, 341, 1389, 13, 51232, 51232, 407, 721, 411, 8399, 22660, 378, 433, 366, 341, 2010, 13, 51308, 51308, 1079, 30, 51358, 51358, 407, 291, 434, 3579, 510, 2281, 6915, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 300, 13, 51576, 51576, 1033, 13, 51626, 51626, 467, 311, 47540, 281, 257, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 281, 3847, 309, 365, 6674, 22119, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18312628475236303, "compression_ratio": 1.869969040247678, "no_speech_prob": 2.5068313334486447e-05}, {"id": 485, "seek": 165356, "start": 1678.8, "end": 1683.28, "text": " It's akin to a negative log likelihood, but you don't want to train it with maximum likelihood.", "tokens": [50364, 400, 534, 11, 729, 732, 2740, 366, 406, 300, 819, 490, 1184, 661, 13, 50480, 50480, 682, 264, 700, 1389, 11, 291, 458, 257, 4059, 72, 597, 992, 295, 9102, 366, 9951, 712, 13, 50654, 50654, 682, 264, 1150, 1389, 11, 291, 500, 380, 458, 257, 4059, 72, 597, 644, 295, 288, 307, 516, 281, 312, 13095, 13, 50816, 50816, 400, 370, 510, 11, 437, 264, 2316, 2709, 291, 307, 733, 295, 257, 33621, 11, 257, 2445, 300, 2709, 291, 51054, 51054, 264, 33621, 1296, 288, 16, 293, 288, 17, 294, 341, 1389, 13, 51232, 51232, 407, 721, 411, 8399, 22660, 378, 433, 366, 341, 2010, 13, 51308, 51308, 1079, 30, 51358, 51358, 407, 291, 434, 3579, 510, 2281, 6915, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 300, 13, 51576, 51576, 1033, 13, 51626, 51626, 467, 311, 47540, 281, 257, 3671, 3565, 22119, 11, 457, 291, 500, 380, 528, 281, 3847, 309, 365, 6674, 22119, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18312628475236303, "compression_ratio": 1.869969040247678, "no_speech_prob": 2.5068313334486447e-05}, {"id": 486, "seek": 168328, "start": 1683.28, "end": 1687.3999999999999, "text": " Or not at least without heavily regularizing it.", "tokens": [50364, 1610, 406, 412, 1935, 1553, 10950, 3890, 3319, 309, 13, 50570, 50570, 400, 291, 500, 380, 643, 264, 2710, 2144, 570, 309, 311, 406, 411, 291, 434, 516, 281, 6889, 490, 50728, 50728, 309, 4033, 13, 50778, 50778, 407, 294, 264, 917, 11, 309, 311, 445, 364, 2281, 13, 50852, 50852, 821, 311, 512, 544, 16429, 3410, 300, 291, 393, 28446, 490, 13, 50972, 50972, 400, 291, 458, 11, 48716, 294, 264, 4034, 458, 300, 2281, 307, 544, 8088, 813, 33783, 13, 51174, 51174, 8736, 6167, 2644, 28446, 490, 309, 13, 51432, 51432, 1610, 18484, 952, 498, 291, 434, 257, 13018, 42466, 13, 51536, 51536, 583, 456, 311, 572, 8482, 309, 311, 27433, 13, 51696, 51696, 1042, 11, 2035, 13, 51746, 51746, 1033, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.2570337653160095, "compression_ratio": 1.7167832167832169, "no_speech_prob": 1.994642616409692e-06}, {"id": 487, "seek": 168328, "start": 1687.3999999999999, "end": 1690.56, "text": " And you don't need the normalization because it's not like you're going to sample from", "tokens": [50364, 1610, 406, 412, 1935, 1553, 10950, 3890, 3319, 309, 13, 50570, 50570, 400, 291, 500, 380, 643, 264, 2710, 2144, 570, 309, 311, 406, 411, 291, 434, 516, 281, 6889, 490, 50728, 50728, 309, 4033, 13, 50778, 50778, 407, 294, 264, 917, 11, 309, 311, 445, 364, 2281, 13, 50852, 50852, 821, 311, 512, 544, 16429, 3410, 300, 291, 393, 28446, 490, 13, 50972, 50972, 400, 291, 458, 11, 48716, 294, 264, 4034, 458, 300, 2281, 307, 544, 8088, 813, 33783, 13, 51174, 51174, 8736, 6167, 2644, 28446, 490, 309, 13, 51432, 51432, 1610, 18484, 952, 498, 291, 434, 257, 13018, 42466, 13, 51536, 51536, 583, 456, 311, 572, 8482, 309, 311, 27433, 13, 51696, 51696, 1042, 11, 2035, 13, 51746, 51746, 1033, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.2570337653160095, "compression_ratio": 1.7167832167832169, "no_speech_prob": 1.994642616409692e-06}, {"id": 488, "seek": 168328, "start": 1690.56, "end": 1691.56, "text": " it anyway.", "tokens": [50364, 1610, 406, 412, 1935, 1553, 10950, 3890, 3319, 309, 13, 50570, 50570, 400, 291, 500, 380, 643, 264, 2710, 2144, 570, 309, 311, 406, 411, 291, 434, 516, 281, 6889, 490, 50728, 50728, 309, 4033, 13, 50778, 50778, 407, 294, 264, 917, 11, 309, 311, 445, 364, 2281, 13, 50852, 50852, 821, 311, 512, 544, 16429, 3410, 300, 291, 393, 28446, 490, 13, 50972, 50972, 400, 291, 458, 11, 48716, 294, 264, 4034, 458, 300, 2281, 307, 544, 8088, 813, 33783, 13, 51174, 51174, 8736, 6167, 2644, 28446, 490, 309, 13, 51432, 51432, 1610, 18484, 952, 498, 291, 434, 257, 13018, 42466, 13, 51536, 51536, 583, 456, 311, 572, 8482, 309, 311, 27433, 13, 51696, 51696, 1042, 11, 2035, 13, 51746, 51746, 1033, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.2570337653160095, "compression_ratio": 1.7167832167832169, "no_speech_prob": 1.994642616409692e-06}, {"id": 489, "seek": 168328, "start": 1691.56, "end": 1693.04, "text": " So in the end, it's just an energy.", "tokens": [50364, 1610, 406, 412, 1935, 1553, 10950, 3890, 3319, 309, 13, 50570, 50570, 400, 291, 500, 380, 643, 264, 2710, 2144, 570, 309, 311, 406, 411, 291, 434, 516, 281, 6889, 490, 50728, 50728, 309, 4033, 13, 50778, 50778, 407, 294, 264, 917, 11, 309, 311, 445, 364, 2281, 13, 50852, 50852, 821, 311, 512, 544, 16429, 3410, 300, 291, 393, 28446, 490, 13, 50972, 50972, 400, 291, 458, 11, 48716, 294, 264, 4034, 458, 300, 2281, 307, 544, 8088, 813, 33783, 13, 51174, 51174, 8736, 6167, 2644, 28446, 490, 309, 13, 51432, 51432, 1610, 18484, 952, 498, 291, 434, 257, 13018, 42466, 13, 51536, 51536, 583, 456, 311, 572, 8482, 309, 311, 27433, 13, 51696, 51696, 1042, 11, 2035, 13, 51746, 51746, 1033, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.2570337653160095, "compression_ratio": 1.7167832167832169, "no_speech_prob": 1.994642616409692e-06}, {"id": 490, "seek": 168328, "start": 1693.04, "end": 1695.44, "text": " There's some more elementary concept that you can derive from.", "tokens": [50364, 1610, 406, 412, 1935, 1553, 10950, 3890, 3319, 309, 13, 50570, 50570, 400, 291, 500, 380, 643, 264, 2710, 2144, 570, 309, 311, 406, 411, 291, 434, 516, 281, 6889, 490, 50728, 50728, 309, 4033, 13, 50778, 50778, 407, 294, 264, 917, 11, 309, 311, 445, 364, 2281, 13, 50852, 50852, 821, 311, 512, 544, 16429, 3410, 300, 291, 393, 28446, 490, 13, 50972, 50972, 400, 291, 458, 11, 48716, 294, 264, 4034, 458, 300, 2281, 307, 544, 8088, 813, 33783, 13, 51174, 51174, 8736, 6167, 2644, 28446, 490, 309, 13, 51432, 51432, 1610, 18484, 952, 498, 291, 434, 257, 13018, 42466, 13, 51536, 51536, 583, 456, 311, 572, 8482, 309, 311, 27433, 13, 51696, 51696, 1042, 11, 2035, 13, 51746, 51746, 1033, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.2570337653160095, "compression_ratio": 1.7167832167832169, "no_speech_prob": 1.994642616409692e-06}, {"id": 491, "seek": 168328, "start": 1695.44, "end": 1699.48, "text": " And you know, physicists in the audience know that energy is more fundamental than probabilities.", "tokens": [50364, 1610, 406, 412, 1935, 1553, 10950, 3890, 3319, 309, 13, 50570, 50570, 400, 291, 500, 380, 643, 264, 2710, 2144, 570, 309, 311, 406, 411, 291, 434, 516, 281, 6889, 490, 50728, 50728, 309, 4033, 13, 50778, 50778, 407, 294, 264, 917, 11, 309, 311, 445, 364, 2281, 13, 50852, 50852, 821, 311, 512, 544, 16429, 3410, 300, 291, 393, 28446, 490, 13, 50972, 50972, 400, 291, 458, 11, 48716, 294, 264, 4034, 458, 300, 2281, 307, 544, 8088, 813, 33783, 13, 51174, 51174, 8736, 6167, 2644, 28446, 490, 309, 13, 51432, 51432, 1610, 18484, 952, 498, 291, 434, 257, 13018, 42466, 13, 51536, 51536, 583, 456, 311, 572, 8482, 309, 311, 27433, 13, 51696, 51696, 1042, 11, 2035, 13, 51746, 51746, 1033, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.2570337653160095, "compression_ratio": 1.7167832167832169, "no_speech_prob": 1.994642616409692e-06}, {"id": 492, "seek": 168328, "start": 1699.48, "end": 1704.6399999999999, "text": " Probabilities cannot derive from it.", "tokens": [50364, 1610, 406, 412, 1935, 1553, 10950, 3890, 3319, 309, 13, 50570, 50570, 400, 291, 500, 380, 643, 264, 2710, 2144, 570, 309, 311, 406, 411, 291, 434, 516, 281, 6889, 490, 50728, 50728, 309, 4033, 13, 50778, 50778, 407, 294, 264, 917, 11, 309, 311, 445, 364, 2281, 13, 50852, 50852, 821, 311, 512, 544, 16429, 3410, 300, 291, 393, 28446, 490, 13, 50972, 50972, 400, 291, 458, 11, 48716, 294, 264, 4034, 458, 300, 2281, 307, 544, 8088, 813, 33783, 13, 51174, 51174, 8736, 6167, 2644, 28446, 490, 309, 13, 51432, 51432, 1610, 18484, 952, 498, 291, 434, 257, 13018, 42466, 13, 51536, 51536, 583, 456, 311, 572, 8482, 309, 311, 27433, 13, 51696, 51696, 1042, 11, 2035, 13, 51746, 51746, 1033, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.2570337653160095, "compression_ratio": 1.7167832167832169, "no_speech_prob": 1.994642616409692e-06}, {"id": 493, "seek": 168328, "start": 1704.6399999999999, "end": 1706.72, "text": " Or Hamiltonian if you're a quantum physicist.", "tokens": [50364, 1610, 406, 412, 1935, 1553, 10950, 3890, 3319, 309, 13, 50570, 50570, 400, 291, 500, 380, 643, 264, 2710, 2144, 570, 309, 311, 406, 411, 291, 434, 516, 281, 6889, 490, 50728, 50728, 309, 4033, 13, 50778, 50778, 407, 294, 264, 917, 11, 309, 311, 445, 364, 2281, 13, 50852, 50852, 821, 311, 512, 544, 16429, 3410, 300, 291, 393, 28446, 490, 13, 50972, 50972, 400, 291, 458, 11, 48716, 294, 264, 4034, 458, 300, 2281, 307, 544, 8088, 813, 33783, 13, 51174, 51174, 8736, 6167, 2644, 28446, 490, 309, 13, 51432, 51432, 1610, 18484, 952, 498, 291, 434, 257, 13018, 42466, 13, 51536, 51536, 583, 456, 311, 572, 8482, 309, 311, 27433, 13, 51696, 51696, 1042, 11, 2035, 13, 51746, 51746, 1033, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.2570337653160095, "compression_ratio": 1.7167832167832169, "no_speech_prob": 1.994642616409692e-06}, {"id": 494, "seek": 168328, "start": 1706.72, "end": 1709.92, "text": " But there's no probability it's amplitude.", "tokens": [50364, 1610, 406, 412, 1935, 1553, 10950, 3890, 3319, 309, 13, 50570, 50570, 400, 291, 500, 380, 643, 264, 2710, 2144, 570, 309, 311, 406, 411, 291, 434, 516, 281, 6889, 490, 50728, 50728, 309, 4033, 13, 50778, 50778, 407, 294, 264, 917, 11, 309, 311, 445, 364, 2281, 13, 50852, 50852, 821, 311, 512, 544, 16429, 3410, 300, 291, 393, 28446, 490, 13, 50972, 50972, 400, 291, 458, 11, 48716, 294, 264, 4034, 458, 300, 2281, 307, 544, 8088, 813, 33783, 13, 51174, 51174, 8736, 6167, 2644, 28446, 490, 309, 13, 51432, 51432, 1610, 18484, 952, 498, 291, 434, 257, 13018, 42466, 13, 51536, 51536, 583, 456, 311, 572, 8482, 309, 311, 27433, 13, 51696, 51696, 1042, 11, 2035, 13, 51746, 51746, 1033, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.2570337653160095, "compression_ratio": 1.7167832167832169, "no_speech_prob": 1.994642616409692e-06}, {"id": 495, "seek": 168328, "start": 1709.92, "end": 1710.92, "text": " Well, whatever.", "tokens": [50364, 1610, 406, 412, 1935, 1553, 10950, 3890, 3319, 309, 13, 50570, 50570, 400, 291, 500, 380, 643, 264, 2710, 2144, 570, 309, 311, 406, 411, 291, 434, 516, 281, 6889, 490, 50728, 50728, 309, 4033, 13, 50778, 50778, 407, 294, 264, 917, 11, 309, 311, 445, 364, 2281, 13, 50852, 50852, 821, 311, 512, 544, 16429, 3410, 300, 291, 393, 28446, 490, 13, 50972, 50972, 400, 291, 458, 11, 48716, 294, 264, 4034, 458, 300, 2281, 307, 544, 8088, 813, 33783, 13, 51174, 51174, 8736, 6167, 2644, 28446, 490, 309, 13, 51432, 51432, 1610, 18484, 952, 498, 291, 434, 257, 13018, 42466, 13, 51536, 51536, 583, 456, 311, 572, 8482, 309, 311, 27433, 13, 51696, 51696, 1042, 11, 2035, 13, 51746, 51746, 1033, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.2570337653160095, "compression_ratio": 1.7167832167832169, "no_speech_prob": 1.994642616409692e-06}, {"id": 496, "seek": 168328, "start": 1710.92, "end": 1711.92, "text": " Okay.", "tokens": [50364, 1610, 406, 412, 1935, 1553, 10950, 3890, 3319, 309, 13, 50570, 50570, 400, 291, 500, 380, 643, 264, 2710, 2144, 570, 309, 311, 406, 411, 291, 434, 516, 281, 6889, 490, 50728, 50728, 309, 4033, 13, 50778, 50778, 407, 294, 264, 917, 11, 309, 311, 445, 364, 2281, 13, 50852, 50852, 821, 311, 512, 544, 16429, 3410, 300, 291, 393, 28446, 490, 13, 50972, 50972, 400, 291, 458, 11, 48716, 294, 264, 4034, 458, 300, 2281, 307, 544, 8088, 813, 33783, 13, 51174, 51174, 8736, 6167, 2644, 28446, 490, 309, 13, 51432, 51432, 1610, 18484, 952, 498, 291, 434, 257, 13018, 42466, 13, 51536, 51536, 583, 456, 311, 572, 8482, 309, 311, 27433, 13, 51696, 51696, 1042, 11, 2035, 13, 51746, 51746, 1033, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.2570337653160095, "compression_ratio": 1.7167832167832169, "no_speech_prob": 1.994642616409692e-06}, {"id": 497, "seek": 171192, "start": 1711.92, "end": 1714.2, "text": " So how do we train an energy-based model?", "tokens": [50364, 407, 577, 360, 321, 3847, 364, 2281, 12, 6032, 2316, 30, 50478, 50478, 407, 295, 1164, 321, 434, 516, 281, 13075, 1125, 341, 294, 512, 636, 11, 558, 30, 50584, 50584, 467, 311, 516, 281, 312, 512, 1333, 295, 18161, 2533, 365, 257, 1729, 9482, 13, 50740, 50740, 400, 309, 311, 516, 281, 362, 9834, 294, 309, 13, 50806, 50806, 400, 321, 643, 281, 3847, 309, 294, 1270, 257, 636, 300, 309, 2516, 264, 3909, 370, 300, 264, 3097, 1412, 51062, 51062, 321, 11441, 2516, 2295, 2281, 293, 1203, 1646, 575, 2946, 2281, 13, 51250, 51250, 400, 406, 1608, 5489, 300, 309, 820, 312, 264, 2649, 295, 2281, 820, 312, 47540, 281, 257, 8509, 11, 2649, 51700, 51700, 295, 3565, 295, 33783, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.18033970810296968, "compression_ratio": 1.7956989247311828, "no_speech_prob": 2.7263670290267328e-06}, {"id": 498, "seek": 171192, "start": 1714.2, "end": 1716.3200000000002, "text": " So of course we're going to parameterize this in some way, right?", "tokens": [50364, 407, 577, 360, 321, 3847, 364, 2281, 12, 6032, 2316, 30, 50478, 50478, 407, 295, 1164, 321, 434, 516, 281, 13075, 1125, 341, 294, 512, 636, 11, 558, 30, 50584, 50584, 467, 311, 516, 281, 312, 512, 1333, 295, 18161, 2533, 365, 257, 1729, 9482, 13, 50740, 50740, 400, 309, 311, 516, 281, 362, 9834, 294, 309, 13, 50806, 50806, 400, 321, 643, 281, 3847, 309, 294, 1270, 257, 636, 300, 309, 2516, 264, 3909, 370, 300, 264, 3097, 1412, 51062, 51062, 321, 11441, 2516, 2295, 2281, 293, 1203, 1646, 575, 2946, 2281, 13, 51250, 51250, 400, 406, 1608, 5489, 300, 309, 820, 312, 264, 2649, 295, 2281, 820, 312, 47540, 281, 257, 8509, 11, 2649, 51700, 51700, 295, 3565, 295, 33783, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.18033970810296968, "compression_ratio": 1.7956989247311828, "no_speech_prob": 2.7263670290267328e-06}, {"id": 499, "seek": 171192, "start": 1716.3200000000002, "end": 1719.44, "text": " It's going to be some sort of neural net with a particular architecture.", "tokens": [50364, 407, 577, 360, 321, 3847, 364, 2281, 12, 6032, 2316, 30, 50478, 50478, 407, 295, 1164, 321, 434, 516, 281, 13075, 1125, 341, 294, 512, 636, 11, 558, 30, 50584, 50584, 467, 311, 516, 281, 312, 512, 1333, 295, 18161, 2533, 365, 257, 1729, 9482, 13, 50740, 50740, 400, 309, 311, 516, 281, 362, 9834, 294, 309, 13, 50806, 50806, 400, 321, 643, 281, 3847, 309, 294, 1270, 257, 636, 300, 309, 2516, 264, 3909, 370, 300, 264, 3097, 1412, 51062, 51062, 321, 11441, 2516, 2295, 2281, 293, 1203, 1646, 575, 2946, 2281, 13, 51250, 51250, 400, 406, 1608, 5489, 300, 309, 820, 312, 264, 2649, 295, 2281, 820, 312, 47540, 281, 257, 8509, 11, 2649, 51700, 51700, 295, 3565, 295, 33783, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.18033970810296968, "compression_ratio": 1.7956989247311828, "no_speech_prob": 2.7263670290267328e-06}, {"id": 500, "seek": 171192, "start": 1719.44, "end": 1720.76, "text": " And it's going to have parameters in it.", "tokens": [50364, 407, 577, 360, 321, 3847, 364, 2281, 12, 6032, 2316, 30, 50478, 50478, 407, 295, 1164, 321, 434, 516, 281, 13075, 1125, 341, 294, 512, 636, 11, 558, 30, 50584, 50584, 467, 311, 516, 281, 312, 512, 1333, 295, 18161, 2533, 365, 257, 1729, 9482, 13, 50740, 50740, 400, 309, 311, 516, 281, 362, 9834, 294, 309, 13, 50806, 50806, 400, 321, 643, 281, 3847, 309, 294, 1270, 257, 636, 300, 309, 2516, 264, 3909, 370, 300, 264, 3097, 1412, 51062, 51062, 321, 11441, 2516, 2295, 2281, 293, 1203, 1646, 575, 2946, 2281, 13, 51250, 51250, 400, 406, 1608, 5489, 300, 309, 820, 312, 264, 2649, 295, 2281, 820, 312, 47540, 281, 257, 8509, 11, 2649, 51700, 51700, 295, 3565, 295, 33783, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.18033970810296968, "compression_ratio": 1.7956989247311828, "no_speech_prob": 2.7263670290267328e-06}, {"id": 501, "seek": 171192, "start": 1720.76, "end": 1725.88, "text": " And we need to train it in such a way that it takes the shape so that the training data", "tokens": [50364, 407, 577, 360, 321, 3847, 364, 2281, 12, 6032, 2316, 30, 50478, 50478, 407, 295, 1164, 321, 434, 516, 281, 13075, 1125, 341, 294, 512, 636, 11, 558, 30, 50584, 50584, 467, 311, 516, 281, 312, 512, 1333, 295, 18161, 2533, 365, 257, 1729, 9482, 13, 50740, 50740, 400, 309, 311, 516, 281, 362, 9834, 294, 309, 13, 50806, 50806, 400, 321, 643, 281, 3847, 309, 294, 1270, 257, 636, 300, 309, 2516, 264, 3909, 370, 300, 264, 3097, 1412, 51062, 51062, 321, 11441, 2516, 2295, 2281, 293, 1203, 1646, 575, 2946, 2281, 13, 51250, 51250, 400, 406, 1608, 5489, 300, 309, 820, 312, 264, 2649, 295, 2281, 820, 312, 47540, 281, 257, 8509, 11, 2649, 51700, 51700, 295, 3565, 295, 33783, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.18033970810296968, "compression_ratio": 1.7956989247311828, "no_speech_prob": 2.7263670290267328e-06}, {"id": 502, "seek": 171192, "start": 1725.88, "end": 1729.64, "text": " we observe takes low energy and everything else has higher energy.", "tokens": [50364, 407, 577, 360, 321, 3847, 364, 2281, 12, 6032, 2316, 30, 50478, 50478, 407, 295, 1164, 321, 434, 516, 281, 13075, 1125, 341, 294, 512, 636, 11, 558, 30, 50584, 50584, 467, 311, 516, 281, 312, 512, 1333, 295, 18161, 2533, 365, 257, 1729, 9482, 13, 50740, 50740, 400, 309, 311, 516, 281, 362, 9834, 294, 309, 13, 50806, 50806, 400, 321, 643, 281, 3847, 309, 294, 1270, 257, 636, 300, 309, 2516, 264, 3909, 370, 300, 264, 3097, 1412, 51062, 51062, 321, 11441, 2516, 2295, 2281, 293, 1203, 1646, 575, 2946, 2281, 13, 51250, 51250, 400, 406, 1608, 5489, 300, 309, 820, 312, 264, 2649, 295, 2281, 820, 312, 47540, 281, 257, 8509, 11, 2649, 51700, 51700, 295, 3565, 295, 33783, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.18033970810296968, "compression_ratio": 1.7956989247311828, "no_speech_prob": 2.7263670290267328e-06}, {"id": 503, "seek": 171192, "start": 1729.64, "end": 1738.64, "text": " And not specifying that it should be the difference of energy should be akin to a ratio, difference", "tokens": [50364, 407, 577, 360, 321, 3847, 364, 2281, 12, 6032, 2316, 30, 50478, 50478, 407, 295, 1164, 321, 434, 516, 281, 13075, 1125, 341, 294, 512, 636, 11, 558, 30, 50584, 50584, 467, 311, 516, 281, 312, 512, 1333, 295, 18161, 2533, 365, 257, 1729, 9482, 13, 50740, 50740, 400, 309, 311, 516, 281, 362, 9834, 294, 309, 13, 50806, 50806, 400, 321, 643, 281, 3847, 309, 294, 1270, 257, 636, 300, 309, 2516, 264, 3909, 370, 300, 264, 3097, 1412, 51062, 51062, 321, 11441, 2516, 2295, 2281, 293, 1203, 1646, 575, 2946, 2281, 13, 51250, 51250, 400, 406, 1608, 5489, 300, 309, 820, 312, 264, 2649, 295, 2281, 820, 312, 47540, 281, 257, 8509, 11, 2649, 51700, 51700, 295, 3565, 295, 33783, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.18033970810296968, "compression_ratio": 1.7956989247311828, "no_speech_prob": 2.7263670290267328e-06}, {"id": 504, "seek": 171192, "start": 1738.64, "end": 1739.64, "text": " of log of probabilities.", "tokens": [50364, 407, 577, 360, 321, 3847, 364, 2281, 12, 6032, 2316, 30, 50478, 50478, 407, 295, 1164, 321, 434, 516, 281, 13075, 1125, 341, 294, 512, 636, 11, 558, 30, 50584, 50584, 467, 311, 516, 281, 312, 512, 1333, 295, 18161, 2533, 365, 257, 1729, 9482, 13, 50740, 50740, 400, 309, 311, 516, 281, 362, 9834, 294, 309, 13, 50806, 50806, 400, 321, 643, 281, 3847, 309, 294, 1270, 257, 636, 300, 309, 2516, 264, 3909, 370, 300, 264, 3097, 1412, 51062, 51062, 321, 11441, 2516, 2295, 2281, 293, 1203, 1646, 575, 2946, 2281, 13, 51250, 51250, 400, 406, 1608, 5489, 300, 309, 820, 312, 264, 2649, 295, 2281, 820, 312, 47540, 281, 257, 8509, 11, 2649, 51700, 51700, 295, 3565, 295, 33783, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.18033970810296968, "compression_ratio": 1.7956989247311828, "no_speech_prob": 2.7263670290267328e-06}, {"id": 505, "seek": 173964, "start": 1739.64, "end": 1742.2, "text": " I don't insist on that.", "tokens": [50364, 286, 500, 380, 13466, 322, 300, 13, 50492, 50492, 400, 456, 366, 732, 5359, 295, 7150, 337, 884, 341, 13, 50592, 50592, 708, 286, 818, 8712, 488, 7150, 293, 26621, 7150, 13, 50772, 50772, 407, 8712, 488, 7150, 1936, 4603, 294, 7380, 760, 322, 264, 2281, 295, 2793, 11, 295, 1412, 51076, 51076, 2793, 11, 558, 30, 51154, 51154, 407, 976, 257, 6119, 2031, 11, 288, 281, 264, 2316, 293, 29879, 264, 9834, 370, 300, 264, 2281, 1348, 484, 51386, 51386, 295, 309, 1709, 760, 13, 51454, 51454, 16002, 13, 51504, 51504, 400, 550, 264, 8712, 488, 1433, 11, 597, 22367, 341, 551, 490, 445, 45339, 281, 4018, 5315, 11, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16887668141147547, "compression_ratio": 1.726923076923077, "no_speech_prob": 1.7060364143617335e-06}, {"id": 506, "seek": 173964, "start": 1742.2, "end": 1744.2, "text": " And there are two classes of methods for doing this.", "tokens": [50364, 286, 500, 380, 13466, 322, 300, 13, 50492, 50492, 400, 456, 366, 732, 5359, 295, 7150, 337, 884, 341, 13, 50592, 50592, 708, 286, 818, 8712, 488, 7150, 293, 26621, 7150, 13, 50772, 50772, 407, 8712, 488, 7150, 1936, 4603, 294, 7380, 760, 322, 264, 2281, 295, 2793, 11, 295, 1412, 51076, 51076, 2793, 11, 558, 30, 51154, 51154, 407, 976, 257, 6119, 2031, 11, 288, 281, 264, 2316, 293, 29879, 264, 9834, 370, 300, 264, 2281, 1348, 484, 51386, 51386, 295, 309, 1709, 760, 13, 51454, 51454, 16002, 13, 51504, 51504, 400, 550, 264, 8712, 488, 1433, 11, 597, 22367, 341, 551, 490, 445, 45339, 281, 4018, 5315, 11, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16887668141147547, "compression_ratio": 1.726923076923077, "no_speech_prob": 1.7060364143617335e-06}, {"id": 507, "seek": 173964, "start": 1744.2, "end": 1747.8000000000002, "text": " What I call contrastive methods and architectural methods.", "tokens": [50364, 286, 500, 380, 13466, 322, 300, 13, 50492, 50492, 400, 456, 366, 732, 5359, 295, 7150, 337, 884, 341, 13, 50592, 50592, 708, 286, 818, 8712, 488, 7150, 293, 26621, 7150, 13, 50772, 50772, 407, 8712, 488, 7150, 1936, 4603, 294, 7380, 760, 322, 264, 2281, 295, 2793, 11, 295, 1412, 51076, 51076, 2793, 11, 558, 30, 51154, 51154, 407, 976, 257, 6119, 2031, 11, 288, 281, 264, 2316, 293, 29879, 264, 9834, 370, 300, 264, 2281, 1348, 484, 51386, 51386, 295, 309, 1709, 760, 13, 51454, 51454, 16002, 13, 51504, 51504, 400, 550, 264, 8712, 488, 1433, 11, 597, 22367, 341, 551, 490, 445, 45339, 281, 4018, 5315, 11, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16887668141147547, "compression_ratio": 1.726923076923077, "no_speech_prob": 1.7060364143617335e-06}, {"id": 508, "seek": 173964, "start": 1747.8000000000002, "end": 1753.88, "text": " So contrastive methods basically consist in pushing down on the energy of points, of data", "tokens": [50364, 286, 500, 380, 13466, 322, 300, 13, 50492, 50492, 400, 456, 366, 732, 5359, 295, 7150, 337, 884, 341, 13, 50592, 50592, 708, 286, 818, 8712, 488, 7150, 293, 26621, 7150, 13, 50772, 50772, 407, 8712, 488, 7150, 1936, 4603, 294, 7380, 760, 322, 264, 2281, 295, 2793, 11, 295, 1412, 51076, 51076, 2793, 11, 558, 30, 51154, 51154, 407, 976, 257, 6119, 2031, 11, 288, 281, 264, 2316, 293, 29879, 264, 9834, 370, 300, 264, 2281, 1348, 484, 51386, 51386, 295, 309, 1709, 760, 13, 51454, 51454, 16002, 13, 51504, 51504, 400, 550, 264, 8712, 488, 1433, 11, 597, 22367, 341, 551, 490, 445, 45339, 281, 4018, 5315, 11, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16887668141147547, "compression_ratio": 1.726923076923077, "no_speech_prob": 1.7060364143617335e-06}, {"id": 509, "seek": 173964, "start": 1753.88, "end": 1755.44, "text": " points, right?", "tokens": [50364, 286, 500, 380, 13466, 322, 300, 13, 50492, 50492, 400, 456, 366, 732, 5359, 295, 7150, 337, 884, 341, 13, 50592, 50592, 708, 286, 818, 8712, 488, 7150, 293, 26621, 7150, 13, 50772, 50772, 407, 8712, 488, 7150, 1936, 4603, 294, 7380, 760, 322, 264, 2281, 295, 2793, 11, 295, 1412, 51076, 51076, 2793, 11, 558, 30, 51154, 51154, 407, 976, 257, 6119, 2031, 11, 288, 281, 264, 2316, 293, 29879, 264, 9834, 370, 300, 264, 2281, 1348, 484, 51386, 51386, 295, 309, 1709, 760, 13, 51454, 51454, 16002, 13, 51504, 51504, 400, 550, 264, 8712, 488, 1433, 11, 597, 22367, 341, 551, 490, 445, 45339, 281, 4018, 5315, 11, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16887668141147547, "compression_ratio": 1.726923076923077, "no_speech_prob": 1.7060364143617335e-06}, {"id": 510, "seek": 173964, "start": 1755.44, "end": 1760.0800000000002, "text": " So give a pair x, y to the model and tweak the parameters so that the energy coming out", "tokens": [50364, 286, 500, 380, 13466, 322, 300, 13, 50492, 50492, 400, 456, 366, 732, 5359, 295, 7150, 337, 884, 341, 13, 50592, 50592, 708, 286, 818, 8712, 488, 7150, 293, 26621, 7150, 13, 50772, 50772, 407, 8712, 488, 7150, 1936, 4603, 294, 7380, 760, 322, 264, 2281, 295, 2793, 11, 295, 1412, 51076, 51076, 2793, 11, 558, 30, 51154, 51154, 407, 976, 257, 6119, 2031, 11, 288, 281, 264, 2316, 293, 29879, 264, 9834, 370, 300, 264, 2281, 1348, 484, 51386, 51386, 295, 309, 1709, 760, 13, 51454, 51454, 16002, 13, 51504, 51504, 400, 550, 264, 8712, 488, 1433, 11, 597, 22367, 341, 551, 490, 445, 45339, 281, 4018, 5315, 11, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16887668141147547, "compression_ratio": 1.726923076923077, "no_speech_prob": 1.7060364143617335e-06}, {"id": 511, "seek": 173964, "start": 1760.0800000000002, "end": 1761.44, "text": " of it goes down.", "tokens": [50364, 286, 500, 380, 13466, 322, 300, 13, 50492, 50492, 400, 456, 366, 732, 5359, 295, 7150, 337, 884, 341, 13, 50592, 50592, 708, 286, 818, 8712, 488, 7150, 293, 26621, 7150, 13, 50772, 50772, 407, 8712, 488, 7150, 1936, 4603, 294, 7380, 760, 322, 264, 2281, 295, 2793, 11, 295, 1412, 51076, 51076, 2793, 11, 558, 30, 51154, 51154, 407, 976, 257, 6119, 2031, 11, 288, 281, 264, 2316, 293, 29879, 264, 9834, 370, 300, 264, 2281, 1348, 484, 51386, 51386, 295, 309, 1709, 760, 13, 51454, 51454, 16002, 13, 51504, 51504, 400, 550, 264, 8712, 488, 1433, 11, 597, 22367, 341, 551, 490, 445, 45339, 281, 4018, 5315, 11, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16887668141147547, "compression_ratio": 1.726923076923077, "no_speech_prob": 1.7060364143617335e-06}, {"id": 512, "seek": 173964, "start": 1761.44, "end": 1762.44, "text": " Easy.", "tokens": [50364, 286, 500, 380, 13466, 322, 300, 13, 50492, 50492, 400, 456, 366, 732, 5359, 295, 7150, 337, 884, 341, 13, 50592, 50592, 708, 286, 818, 8712, 488, 7150, 293, 26621, 7150, 13, 50772, 50772, 407, 8712, 488, 7150, 1936, 4603, 294, 7380, 760, 322, 264, 2281, 295, 2793, 11, 295, 1412, 51076, 51076, 2793, 11, 558, 30, 51154, 51154, 407, 976, 257, 6119, 2031, 11, 288, 281, 264, 2316, 293, 29879, 264, 9834, 370, 300, 264, 2281, 1348, 484, 51386, 51386, 295, 309, 1709, 760, 13, 51454, 51454, 16002, 13, 51504, 51504, 400, 550, 264, 8712, 488, 1433, 11, 597, 22367, 341, 551, 490, 445, 45339, 281, 4018, 5315, 11, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16887668141147547, "compression_ratio": 1.726923076923077, "no_speech_prob": 1.7060364143617335e-06}, {"id": 513, "seek": 173964, "start": 1762.44, "end": 1768.68, "text": " And then the contrastive term, which prevents this thing from just collapsing to zero everywhere,", "tokens": [50364, 286, 500, 380, 13466, 322, 300, 13, 50492, 50492, 400, 456, 366, 732, 5359, 295, 7150, 337, 884, 341, 13, 50592, 50592, 708, 286, 818, 8712, 488, 7150, 293, 26621, 7150, 13, 50772, 50772, 407, 8712, 488, 7150, 1936, 4603, 294, 7380, 760, 322, 264, 2281, 295, 2793, 11, 295, 1412, 51076, 51076, 2793, 11, 558, 30, 51154, 51154, 407, 976, 257, 6119, 2031, 11, 288, 281, 264, 2316, 293, 29879, 264, 9834, 370, 300, 264, 2281, 1348, 484, 51386, 51386, 295, 309, 1709, 760, 13, 51454, 51454, 16002, 13, 51504, 51504, 400, 550, 264, 8712, 488, 1433, 11, 597, 22367, 341, 551, 490, 445, 45339, 281, 4018, 5315, 11, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16887668141147547, "compression_ratio": 1.726923076923077, "no_speech_prob": 1.7060364143617335e-06}, {"id": 514, "seek": 176868, "start": 1768.68, "end": 1775.1200000000001, "text": " picks points intelligently outside and push their energy up.", "tokens": [50364, 16137, 2793, 5613, 2276, 2380, 293, 2944, 641, 2281, 493, 13, 50686, 50686, 400, 264, 1154, 307, 577, 13232, 291, 362, 281, 312, 281, 733, 295, 1888, 729, 2793, 13, 51004, 51004, 400, 538, 264, 636, 11, 460, 1770, 82, 366, 364, 1365, 295, 341, 13, 51090, 51090, 407, 460, 1770, 82, 366, 364, 1365, 689, 264, 20828, 1639, 307, 341, 2281, 2445, 293, 264, 19265, 51280, 51280, 307, 264, 4069, 1185, 300, 16137, 484, 264, 2793, 6104, 2281, 307, 516, 281, 2944, 493, 13, 51526, 51526, 663, 311, 1219, 2281, 12, 6032, 460, 1770, 82, 13, 51576, 51576, 286, 632, 257, 3035, 322, 341, 257, 1326, 924, 2057, 13, 51780, 51780, 400, 550, 456, 311, 26621, 7150, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17269883504727992, "compression_ratio": 1.7453183520599251, "no_speech_prob": 8.397503734158818e-06}, {"id": 515, "seek": 176868, "start": 1775.1200000000001, "end": 1781.48, "text": " And the problem is how intelligent you have to be to kind of pick those points.", "tokens": [50364, 16137, 2793, 5613, 2276, 2380, 293, 2944, 641, 2281, 493, 13, 50686, 50686, 400, 264, 1154, 307, 577, 13232, 291, 362, 281, 312, 281, 733, 295, 1888, 729, 2793, 13, 51004, 51004, 400, 538, 264, 636, 11, 460, 1770, 82, 366, 364, 1365, 295, 341, 13, 51090, 51090, 407, 460, 1770, 82, 366, 364, 1365, 689, 264, 20828, 1639, 307, 341, 2281, 2445, 293, 264, 19265, 51280, 51280, 307, 264, 4069, 1185, 300, 16137, 484, 264, 2793, 6104, 2281, 307, 516, 281, 2944, 493, 13, 51526, 51526, 663, 311, 1219, 2281, 12, 6032, 460, 1770, 82, 13, 51576, 51576, 286, 632, 257, 3035, 322, 341, 257, 1326, 924, 2057, 13, 51780, 51780, 400, 550, 456, 311, 26621, 7150, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17269883504727992, "compression_ratio": 1.7453183520599251, "no_speech_prob": 8.397503734158818e-06}, {"id": 516, "seek": 176868, "start": 1781.48, "end": 1783.2, "text": " And by the way, GANs are an example of this.", "tokens": [50364, 16137, 2793, 5613, 2276, 2380, 293, 2944, 641, 2281, 493, 13, 50686, 50686, 400, 264, 1154, 307, 577, 13232, 291, 362, 281, 312, 281, 733, 295, 1888, 729, 2793, 13, 51004, 51004, 400, 538, 264, 636, 11, 460, 1770, 82, 366, 364, 1365, 295, 341, 13, 51090, 51090, 407, 460, 1770, 82, 366, 364, 1365, 689, 264, 20828, 1639, 307, 341, 2281, 2445, 293, 264, 19265, 51280, 51280, 307, 264, 4069, 1185, 300, 16137, 484, 264, 2793, 6104, 2281, 307, 516, 281, 2944, 493, 13, 51526, 51526, 663, 311, 1219, 2281, 12, 6032, 460, 1770, 82, 13, 51576, 51576, 286, 632, 257, 3035, 322, 341, 257, 1326, 924, 2057, 13, 51780, 51780, 400, 550, 456, 311, 26621, 7150, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17269883504727992, "compression_ratio": 1.7453183520599251, "no_speech_prob": 8.397503734158818e-06}, {"id": 517, "seek": 176868, "start": 1783.2, "end": 1787.0, "text": " So GANs are an example where the discriminator is this energy function and the generator", "tokens": [50364, 16137, 2793, 5613, 2276, 2380, 293, 2944, 641, 2281, 493, 13, 50686, 50686, 400, 264, 1154, 307, 577, 13232, 291, 362, 281, 312, 281, 733, 295, 1888, 729, 2793, 13, 51004, 51004, 400, 538, 264, 636, 11, 460, 1770, 82, 366, 364, 1365, 295, 341, 13, 51090, 51090, 407, 460, 1770, 82, 366, 364, 1365, 689, 264, 20828, 1639, 307, 341, 2281, 2445, 293, 264, 19265, 51280, 51280, 307, 264, 4069, 1185, 300, 16137, 484, 264, 2793, 6104, 2281, 307, 516, 281, 2944, 493, 13, 51526, 51526, 663, 311, 1219, 2281, 12, 6032, 460, 1770, 82, 13, 51576, 51576, 286, 632, 257, 3035, 322, 341, 257, 1326, 924, 2057, 13, 51780, 51780, 400, 550, 456, 311, 26621, 7150, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17269883504727992, "compression_ratio": 1.7453183520599251, "no_speech_prob": 8.397503734158818e-06}, {"id": 518, "seek": 176868, "start": 1787.0, "end": 1791.92, "text": " is the smart system that picks out the points whose energy is going to push up.", "tokens": [50364, 16137, 2793, 5613, 2276, 2380, 293, 2944, 641, 2281, 493, 13, 50686, 50686, 400, 264, 1154, 307, 577, 13232, 291, 362, 281, 312, 281, 733, 295, 1888, 729, 2793, 13, 51004, 51004, 400, 538, 264, 636, 11, 460, 1770, 82, 366, 364, 1365, 295, 341, 13, 51090, 51090, 407, 460, 1770, 82, 366, 364, 1365, 689, 264, 20828, 1639, 307, 341, 2281, 2445, 293, 264, 19265, 51280, 51280, 307, 264, 4069, 1185, 300, 16137, 484, 264, 2793, 6104, 2281, 307, 516, 281, 2944, 493, 13, 51526, 51526, 663, 311, 1219, 2281, 12, 6032, 460, 1770, 82, 13, 51576, 51576, 286, 632, 257, 3035, 322, 341, 257, 1326, 924, 2057, 13, 51780, 51780, 400, 550, 456, 311, 26621, 7150, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17269883504727992, "compression_ratio": 1.7453183520599251, "no_speech_prob": 8.397503734158818e-06}, {"id": 519, "seek": 176868, "start": 1791.92, "end": 1792.92, "text": " That's called energy-based GANs.", "tokens": [50364, 16137, 2793, 5613, 2276, 2380, 293, 2944, 641, 2281, 493, 13, 50686, 50686, 400, 264, 1154, 307, 577, 13232, 291, 362, 281, 312, 281, 733, 295, 1888, 729, 2793, 13, 51004, 51004, 400, 538, 264, 636, 11, 460, 1770, 82, 366, 364, 1365, 295, 341, 13, 51090, 51090, 407, 460, 1770, 82, 366, 364, 1365, 689, 264, 20828, 1639, 307, 341, 2281, 2445, 293, 264, 19265, 51280, 51280, 307, 264, 4069, 1185, 300, 16137, 484, 264, 2793, 6104, 2281, 307, 516, 281, 2944, 493, 13, 51526, 51526, 663, 311, 1219, 2281, 12, 6032, 460, 1770, 82, 13, 51576, 51576, 286, 632, 257, 3035, 322, 341, 257, 1326, 924, 2057, 13, 51780, 51780, 400, 550, 456, 311, 26621, 7150, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17269883504727992, "compression_ratio": 1.7453183520599251, "no_speech_prob": 8.397503734158818e-06}, {"id": 520, "seek": 176868, "start": 1792.92, "end": 1797.0, "text": " I had a paper on this a few years ago.", "tokens": [50364, 16137, 2793, 5613, 2276, 2380, 293, 2944, 641, 2281, 493, 13, 50686, 50686, 400, 264, 1154, 307, 577, 13232, 291, 362, 281, 312, 281, 733, 295, 1888, 729, 2793, 13, 51004, 51004, 400, 538, 264, 636, 11, 460, 1770, 82, 366, 364, 1365, 295, 341, 13, 51090, 51090, 407, 460, 1770, 82, 366, 364, 1365, 689, 264, 20828, 1639, 307, 341, 2281, 2445, 293, 264, 19265, 51280, 51280, 307, 264, 4069, 1185, 300, 16137, 484, 264, 2793, 6104, 2281, 307, 516, 281, 2944, 493, 13, 51526, 51526, 663, 311, 1219, 2281, 12, 6032, 460, 1770, 82, 13, 51576, 51576, 286, 632, 257, 3035, 322, 341, 257, 1326, 924, 2057, 13, 51780, 51780, 400, 550, 456, 311, 26621, 7150, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17269883504727992, "compression_ratio": 1.7453183520599251, "no_speech_prob": 8.397503734158818e-06}, {"id": 521, "seek": 176868, "start": 1797.0, "end": 1798.48, "text": " And then there's architectural methods.", "tokens": [50364, 16137, 2793, 5613, 2276, 2380, 293, 2944, 641, 2281, 493, 13, 50686, 50686, 400, 264, 1154, 307, 577, 13232, 291, 362, 281, 312, 281, 733, 295, 1888, 729, 2793, 13, 51004, 51004, 400, 538, 264, 636, 11, 460, 1770, 82, 366, 364, 1365, 295, 341, 13, 51090, 51090, 407, 460, 1770, 82, 366, 364, 1365, 689, 264, 20828, 1639, 307, 341, 2281, 2445, 293, 264, 19265, 51280, 51280, 307, 264, 4069, 1185, 300, 16137, 484, 264, 2793, 6104, 2281, 307, 516, 281, 2944, 493, 13, 51526, 51526, 663, 311, 1219, 2281, 12, 6032, 460, 1770, 82, 13, 51576, 51576, 286, 632, 257, 3035, 322, 341, 257, 1326, 924, 2057, 13, 51780, 51780, 400, 550, 456, 311, 26621, 7150, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17269883504727992, "compression_ratio": 1.7453183520599251, "no_speech_prob": 8.397503734158818e-06}, {"id": 522, "seek": 179848, "start": 1798.48, "end": 1801.92, "text": " And those architectural methods consist in building the energy function in such a way", "tokens": [50364, 400, 729, 26621, 7150, 4603, 294, 2390, 264, 2281, 2445, 294, 1270, 257, 636, 50536, 50536, 300, 264, 5523, 295, 1507, 300, 393, 747, 2295, 2281, 307, 5567, 420, 4464, 1602, 13, 50834, 50834, 407, 2139, 538, 6435, 420, 807, 512, 3890, 2144, 1433, 13, 51034, 51034, 400, 286, 603, 808, 281, 577, 291, 360, 341, 294, 257, 3456, 13, 51192, 51192, 583, 718, 311, 722, 365, 11, 2264, 11, 370, 456, 366, 439, 3685, 295, 5164, 2693, 12879, 24420, 2539, 51480, 51480, 7150, 300, 291, 393, 4193, 294, 300, 2856, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13915905356407166, "compression_ratio": 1.5647058823529412, "no_speech_prob": 6.239619779080385e-06}, {"id": 523, "seek": 179848, "start": 1801.92, "end": 1807.88, "text": " that the volume of stuff that can take low energy is limited or minimized.", "tokens": [50364, 400, 729, 26621, 7150, 4603, 294, 2390, 264, 2281, 2445, 294, 1270, 257, 636, 50536, 50536, 300, 264, 5523, 295, 1507, 300, 393, 747, 2295, 2281, 307, 5567, 420, 4464, 1602, 13, 50834, 50834, 407, 2139, 538, 6435, 420, 807, 512, 3890, 2144, 1433, 13, 51034, 51034, 400, 286, 603, 808, 281, 577, 291, 360, 341, 294, 257, 3456, 13, 51192, 51192, 583, 718, 311, 722, 365, 11, 2264, 11, 370, 456, 366, 439, 3685, 295, 5164, 2693, 12879, 24420, 2539, 51480, 51480, 7150, 300, 291, 393, 4193, 294, 300, 2856, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13915905356407166, "compression_ratio": 1.5647058823529412, "no_speech_prob": 6.239619779080385e-06}, {"id": 524, "seek": 179848, "start": 1807.88, "end": 1811.88, "text": " So either by construction or through some regularization term.", "tokens": [50364, 400, 729, 26621, 7150, 4603, 294, 2390, 264, 2281, 2445, 294, 1270, 257, 636, 50536, 50536, 300, 264, 5523, 295, 1507, 300, 393, 747, 2295, 2281, 307, 5567, 420, 4464, 1602, 13, 50834, 50834, 407, 2139, 538, 6435, 420, 807, 512, 3890, 2144, 1433, 13, 51034, 51034, 400, 286, 603, 808, 281, 577, 291, 360, 341, 294, 257, 3456, 13, 51192, 51192, 583, 718, 311, 722, 365, 11, 2264, 11, 370, 456, 366, 439, 3685, 295, 5164, 2693, 12879, 24420, 2539, 51480, 51480, 7150, 300, 291, 393, 4193, 294, 300, 2856, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13915905356407166, "compression_ratio": 1.5647058823529412, "no_speech_prob": 6.239619779080385e-06}, {"id": 525, "seek": 179848, "start": 1811.88, "end": 1815.04, "text": " And I'll come to how you do this in a minute.", "tokens": [50364, 400, 729, 26621, 7150, 4603, 294, 2390, 264, 2281, 2445, 294, 1270, 257, 636, 50536, 50536, 300, 264, 5523, 295, 1507, 300, 393, 747, 2295, 2281, 307, 5567, 420, 4464, 1602, 13, 50834, 50834, 407, 2139, 538, 6435, 420, 807, 512, 3890, 2144, 1433, 13, 51034, 51034, 400, 286, 603, 808, 281, 577, 291, 360, 341, 294, 257, 3456, 13, 51192, 51192, 583, 718, 311, 722, 365, 11, 2264, 11, 370, 456, 366, 439, 3685, 295, 5164, 2693, 12879, 24420, 2539, 51480, 51480, 7150, 300, 291, 393, 4193, 294, 300, 2856, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13915905356407166, "compression_ratio": 1.5647058823529412, "no_speech_prob": 6.239619779080385e-06}, {"id": 526, "seek": 179848, "start": 1815.04, "end": 1820.8, "text": " But let's start with, OK, so there are all kinds of traditional unsupervised learning", "tokens": [50364, 400, 729, 26621, 7150, 4603, 294, 2390, 264, 2281, 2445, 294, 1270, 257, 636, 50536, 50536, 300, 264, 5523, 295, 1507, 300, 393, 747, 2295, 2281, 307, 5567, 420, 4464, 1602, 13, 50834, 50834, 407, 2139, 538, 6435, 420, 807, 512, 3890, 2144, 1433, 13, 51034, 51034, 400, 286, 603, 808, 281, 577, 291, 360, 341, 294, 257, 3456, 13, 51192, 51192, 583, 718, 311, 722, 365, 11, 2264, 11, 370, 456, 366, 439, 3685, 295, 5164, 2693, 12879, 24420, 2539, 51480, 51480, 7150, 300, 291, 393, 4193, 294, 300, 2856, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13915905356407166, "compression_ratio": 1.5647058823529412, "no_speech_prob": 6.239619779080385e-06}, {"id": 527, "seek": 179848, "start": 1820.8, "end": 1827.88, "text": " methods that you can cast in that language.", "tokens": [50364, 400, 729, 26621, 7150, 4603, 294, 2390, 264, 2281, 2445, 294, 1270, 257, 636, 50536, 50536, 300, 264, 5523, 295, 1507, 300, 393, 747, 2295, 2281, 307, 5567, 420, 4464, 1602, 13, 50834, 50834, 407, 2139, 538, 6435, 420, 807, 512, 3890, 2144, 1433, 13, 51034, 51034, 400, 286, 603, 808, 281, 577, 291, 360, 341, 294, 257, 3456, 13, 51192, 51192, 583, 718, 311, 722, 365, 11, 2264, 11, 370, 456, 366, 439, 3685, 295, 5164, 2693, 12879, 24420, 2539, 51480, 51480, 7150, 300, 291, 393, 4193, 294, 300, 2856, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13915905356407166, "compression_ratio": 1.5647058823529412, "no_speech_prob": 6.239619779080385e-06}, {"id": 528, "seek": 182788, "start": 1827.88, "end": 1831.8000000000002, "text": " And as I said, basically, the basic idea of contrastive methods is push down the energy", "tokens": [50364, 400, 382, 286, 848, 11, 1936, 11, 264, 3875, 1558, 295, 8712, 488, 7150, 307, 2944, 760, 264, 2281, 50560, 50560, 295, 1412, 2793, 11, 2944, 493, 5315, 1646, 11, 597, 307, 6674, 22119, 775, 13, 50902, 50902, 759, 291, 362, 24207, 712, 24808, 2445, 11, 3034, 1478, 28023, 11, 2944, 760, 264, 2281, 51108, 51108, 295, 1412, 2793, 293, 2944, 493, 322, 8614, 4914, 13, 51230, 51230, 400, 6674, 22119, 365, 38105, 45112, 11, 18460, 905, 384, 38105, 45112, 11, 18484, 952, 38105, 45112, 11, 8712, 488, 51538, 51538, 47387, 11, 20678, 2539, 11, 8509, 14324, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.2501443601122089, "compression_ratio": 1.7903225806451613, "no_speech_prob": 2.282129935338162e-05}, {"id": 529, "seek": 182788, "start": 1831.8000000000002, "end": 1838.64, "text": " of data points, push up everywhere else, which is maximum likelihood does.", "tokens": [50364, 400, 382, 286, 848, 11, 1936, 11, 264, 3875, 1558, 295, 8712, 488, 7150, 307, 2944, 760, 264, 2281, 50560, 50560, 295, 1412, 2793, 11, 2944, 493, 5315, 1646, 11, 597, 307, 6674, 22119, 775, 13, 50902, 50902, 759, 291, 362, 24207, 712, 24808, 2445, 11, 3034, 1478, 28023, 11, 2944, 760, 264, 2281, 51108, 51108, 295, 1412, 2793, 293, 2944, 493, 322, 8614, 4914, 13, 51230, 51230, 400, 6674, 22119, 365, 38105, 45112, 11, 18460, 905, 384, 38105, 45112, 11, 18484, 952, 38105, 45112, 11, 8712, 488, 51538, 51538, 47387, 11, 20678, 2539, 11, 8509, 14324, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.2501443601122089, "compression_ratio": 1.7903225806451613, "no_speech_prob": 2.282129935338162e-05}, {"id": 530, "seek": 182788, "start": 1838.64, "end": 1842.7600000000002, "text": " If you have tractable partition function, variational approximation, push down the energy", "tokens": [50364, 400, 382, 286, 848, 11, 1936, 11, 264, 3875, 1558, 295, 8712, 488, 7150, 307, 2944, 760, 264, 2281, 50560, 50560, 295, 1412, 2793, 11, 2944, 493, 5315, 1646, 11, 597, 307, 6674, 22119, 775, 13, 50902, 50902, 759, 291, 362, 24207, 712, 24808, 2445, 11, 3034, 1478, 28023, 11, 2944, 760, 264, 2281, 51108, 51108, 295, 1412, 2793, 293, 2944, 493, 322, 8614, 4914, 13, 51230, 51230, 400, 6674, 22119, 365, 38105, 45112, 11, 18460, 905, 384, 38105, 45112, 11, 18484, 952, 38105, 45112, 11, 8712, 488, 51538, 51538, 47387, 11, 20678, 2539, 11, 8509, 14324, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.2501443601122089, "compression_ratio": 1.7903225806451613, "no_speech_prob": 2.282129935338162e-05}, {"id": 531, "seek": 182788, "start": 1842.7600000000002, "end": 1845.2, "text": " of data points and push up on chosen location.", "tokens": [50364, 400, 382, 286, 848, 11, 1936, 11, 264, 3875, 1558, 295, 8712, 488, 7150, 307, 2944, 760, 264, 2281, 50560, 50560, 295, 1412, 2793, 11, 2944, 493, 5315, 1646, 11, 597, 307, 6674, 22119, 775, 13, 50902, 50902, 759, 291, 362, 24207, 712, 24808, 2445, 11, 3034, 1478, 28023, 11, 2944, 760, 264, 2281, 51108, 51108, 295, 1412, 2793, 293, 2944, 493, 322, 8614, 4914, 13, 51230, 51230, 400, 6674, 22119, 365, 38105, 45112, 11, 18460, 905, 384, 38105, 45112, 11, 18484, 952, 38105, 45112, 11, 8712, 488, 51538, 51538, 47387, 11, 20678, 2539, 11, 8509, 14324, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.2501443601122089, "compression_ratio": 1.7903225806451613, "no_speech_prob": 2.282129935338162e-05}, {"id": 532, "seek": 182788, "start": 1845.2, "end": 1851.3600000000001, "text": " And maximum likelihood with Monte Carlo, Marcocce Monte Carlo, Hamiltonian Monte Carlo, contrastive", "tokens": [50364, 400, 382, 286, 848, 11, 1936, 11, 264, 3875, 1558, 295, 8712, 488, 7150, 307, 2944, 760, 264, 2281, 50560, 50560, 295, 1412, 2793, 11, 2944, 493, 5315, 1646, 11, 597, 307, 6674, 22119, 775, 13, 50902, 50902, 759, 291, 362, 24207, 712, 24808, 2445, 11, 3034, 1478, 28023, 11, 2944, 760, 264, 2281, 51108, 51108, 295, 1412, 2793, 293, 2944, 493, 322, 8614, 4914, 13, 51230, 51230, 400, 6674, 22119, 365, 38105, 45112, 11, 18460, 905, 384, 38105, 45112, 11, 18484, 952, 38105, 45112, 11, 8712, 488, 51538, 51538, 47387, 11, 20678, 2539, 11, 8509, 14324, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.2501443601122089, "compression_ratio": 1.7903225806451613, "no_speech_prob": 2.282129935338162e-05}, {"id": 533, "seek": 182788, "start": 1851.3600000000001, "end": 1853.0400000000002, "text": " divergence, metric learning, ratio matching.", "tokens": [50364, 400, 382, 286, 848, 11, 1936, 11, 264, 3875, 1558, 295, 8712, 488, 7150, 307, 2944, 760, 264, 2281, 50560, 50560, 295, 1412, 2793, 11, 2944, 493, 5315, 1646, 11, 597, 307, 6674, 22119, 775, 13, 50902, 50902, 759, 291, 362, 24207, 712, 24808, 2445, 11, 3034, 1478, 28023, 11, 2944, 760, 264, 2281, 51108, 51108, 295, 1412, 2793, 293, 2944, 493, 322, 8614, 4914, 13, 51230, 51230, 400, 6674, 22119, 365, 38105, 45112, 11, 18460, 905, 384, 38105, 45112, 11, 18484, 952, 38105, 45112, 11, 8712, 488, 51538, 51538, 47387, 11, 20678, 2539, 11, 8509, 14324, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.2501443601122089, "compression_ratio": 1.7903225806451613, "no_speech_prob": 2.282129935338162e-05}, {"id": 534, "seek": 185304, "start": 1853.04, "end": 1857.96, "text": " All those stuff basically are different versions of this, including GANs.", "tokens": [50364, 1057, 729, 1507, 1936, 366, 819, 9606, 295, 341, 11, 3009, 460, 1770, 82, 13, 50610, 50610, 400, 264, 2636, 472, 307, 1382, 281, 2445, 322, 2758, 2793, 295, 264, 1412, 47138, 281, 2793, 50811, 50811, 322, 264, 1412, 47138, 13, 50861, 50861, 663, 311, 1219, 1441, 78, 3436, 8399, 22660, 19866, 13, 50911, 50911, 400, 300, 311, 437, 729, 2416, 426, 45196, 2316, 286, 390, 3585, 291, 466, 360, 13, 51152, 51152, 663, 311, 1219, 257, 2758, 8399, 22660, 19866, 420, 257, 1729, 1389, 295, 1441, 78, 3436, 8399, 22660, 19866, 13, 51328, 51328, 286, 478, 516, 281, 2152, 257, 707, 857, 20678, 2539, 570, 309, 311, 472, 295, 264, 1326, 3331, 689, 309, 51528, 51528, 1985, 13, 51578, 51578, 400, 309, 311, 11, 294, 1186, 11, 264, 787, 1389, 321, 458, 689, 309, 1985, 294, 264, 4319, 295, 5267, 13, 51732, 51732, 407, 309, 311, 733, 295, 1021, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.17083391989431074, "compression_ratio": 1.8603896103896105, "no_speech_prob": 3.704160553752445e-05}, {"id": 535, "seek": 185304, "start": 1857.96, "end": 1861.98, "text": " And the third one is trying to function on mass points of the data manifold to points", "tokens": [50364, 1057, 729, 1507, 1936, 366, 819, 9606, 295, 341, 11, 3009, 460, 1770, 82, 13, 50610, 50610, 400, 264, 2636, 472, 307, 1382, 281, 2445, 322, 2758, 2793, 295, 264, 1412, 47138, 281, 2793, 50811, 50811, 322, 264, 1412, 47138, 13, 50861, 50861, 663, 311, 1219, 1441, 78, 3436, 8399, 22660, 19866, 13, 50911, 50911, 400, 300, 311, 437, 729, 2416, 426, 45196, 2316, 286, 390, 3585, 291, 466, 360, 13, 51152, 51152, 663, 311, 1219, 257, 2758, 8399, 22660, 19866, 420, 257, 1729, 1389, 295, 1441, 78, 3436, 8399, 22660, 19866, 13, 51328, 51328, 286, 478, 516, 281, 2152, 257, 707, 857, 20678, 2539, 570, 309, 311, 472, 295, 264, 1326, 3331, 689, 309, 51528, 51528, 1985, 13, 51578, 51578, 400, 309, 311, 11, 294, 1186, 11, 264, 787, 1389, 321, 458, 689, 309, 1985, 294, 264, 4319, 295, 5267, 13, 51732, 51732, 407, 309, 311, 733, 295, 1021, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.17083391989431074, "compression_ratio": 1.8603896103896105, "no_speech_prob": 3.704160553752445e-05}, {"id": 536, "seek": 185304, "start": 1861.98, "end": 1862.98, "text": " on the data manifold.", "tokens": [50364, 1057, 729, 1507, 1936, 366, 819, 9606, 295, 341, 11, 3009, 460, 1770, 82, 13, 50610, 50610, 400, 264, 2636, 472, 307, 1382, 281, 2445, 322, 2758, 2793, 295, 264, 1412, 47138, 281, 2793, 50811, 50811, 322, 264, 1412, 47138, 13, 50861, 50861, 663, 311, 1219, 1441, 78, 3436, 8399, 22660, 19866, 13, 50911, 50911, 400, 300, 311, 437, 729, 2416, 426, 45196, 2316, 286, 390, 3585, 291, 466, 360, 13, 51152, 51152, 663, 311, 1219, 257, 2758, 8399, 22660, 19866, 420, 257, 1729, 1389, 295, 1441, 78, 3436, 8399, 22660, 19866, 13, 51328, 51328, 286, 478, 516, 281, 2152, 257, 707, 857, 20678, 2539, 570, 309, 311, 472, 295, 264, 1326, 3331, 689, 309, 51528, 51528, 1985, 13, 51578, 51578, 400, 309, 311, 11, 294, 1186, 11, 264, 787, 1389, 321, 458, 689, 309, 1985, 294, 264, 4319, 295, 5267, 13, 51732, 51732, 407, 309, 311, 733, 295, 1021, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.17083391989431074, "compression_ratio": 1.8603896103896105, "no_speech_prob": 3.704160553752445e-05}, {"id": 537, "seek": 185304, "start": 1862.98, "end": 1863.98, "text": " That's called denoising autoencoder.", "tokens": [50364, 1057, 729, 1507, 1936, 366, 819, 9606, 295, 341, 11, 3009, 460, 1770, 82, 13, 50610, 50610, 400, 264, 2636, 472, 307, 1382, 281, 2445, 322, 2758, 2793, 295, 264, 1412, 47138, 281, 2793, 50811, 50811, 322, 264, 1412, 47138, 13, 50861, 50861, 663, 311, 1219, 1441, 78, 3436, 8399, 22660, 19866, 13, 50911, 50911, 400, 300, 311, 437, 729, 2416, 426, 45196, 2316, 286, 390, 3585, 291, 466, 360, 13, 51152, 51152, 663, 311, 1219, 257, 2758, 8399, 22660, 19866, 420, 257, 1729, 1389, 295, 1441, 78, 3436, 8399, 22660, 19866, 13, 51328, 51328, 286, 478, 516, 281, 2152, 257, 707, 857, 20678, 2539, 570, 309, 311, 472, 295, 264, 1326, 3331, 689, 309, 51528, 51528, 1985, 13, 51578, 51578, 400, 309, 311, 11, 294, 1186, 11, 264, 787, 1389, 321, 458, 689, 309, 1985, 294, 264, 4319, 295, 5267, 13, 51732, 51732, 407, 309, 311, 733, 295, 1021, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.17083391989431074, "compression_ratio": 1.8603896103896105, "no_speech_prob": 3.704160553752445e-05}, {"id": 538, "seek": 185304, "start": 1863.98, "end": 1868.8, "text": " And that's what those large NLP model I was telling you about do.", "tokens": [50364, 1057, 729, 1507, 1936, 366, 819, 9606, 295, 341, 11, 3009, 460, 1770, 82, 13, 50610, 50610, 400, 264, 2636, 472, 307, 1382, 281, 2445, 322, 2758, 2793, 295, 264, 1412, 47138, 281, 2793, 50811, 50811, 322, 264, 1412, 47138, 13, 50861, 50861, 663, 311, 1219, 1441, 78, 3436, 8399, 22660, 19866, 13, 50911, 50911, 400, 300, 311, 437, 729, 2416, 426, 45196, 2316, 286, 390, 3585, 291, 466, 360, 13, 51152, 51152, 663, 311, 1219, 257, 2758, 8399, 22660, 19866, 420, 257, 1729, 1389, 295, 1441, 78, 3436, 8399, 22660, 19866, 13, 51328, 51328, 286, 478, 516, 281, 2152, 257, 707, 857, 20678, 2539, 570, 309, 311, 472, 295, 264, 1326, 3331, 689, 309, 51528, 51528, 1985, 13, 51578, 51578, 400, 309, 311, 11, 294, 1186, 11, 264, 787, 1389, 321, 458, 689, 309, 1985, 294, 264, 4319, 295, 5267, 13, 51732, 51732, 407, 309, 311, 733, 295, 1021, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.17083391989431074, "compression_ratio": 1.8603896103896105, "no_speech_prob": 3.704160553752445e-05}, {"id": 539, "seek": 185304, "start": 1868.8, "end": 1872.32, "text": " That's called a mass autoencoder or a particular case of denoising autoencoder.", "tokens": [50364, 1057, 729, 1507, 1936, 366, 819, 9606, 295, 341, 11, 3009, 460, 1770, 82, 13, 50610, 50610, 400, 264, 2636, 472, 307, 1382, 281, 2445, 322, 2758, 2793, 295, 264, 1412, 47138, 281, 2793, 50811, 50811, 322, 264, 1412, 47138, 13, 50861, 50861, 663, 311, 1219, 1441, 78, 3436, 8399, 22660, 19866, 13, 50911, 50911, 400, 300, 311, 437, 729, 2416, 426, 45196, 2316, 286, 390, 3585, 291, 466, 360, 13, 51152, 51152, 663, 311, 1219, 257, 2758, 8399, 22660, 19866, 420, 257, 1729, 1389, 295, 1441, 78, 3436, 8399, 22660, 19866, 13, 51328, 51328, 286, 478, 516, 281, 2152, 257, 707, 857, 20678, 2539, 570, 309, 311, 472, 295, 264, 1326, 3331, 689, 309, 51528, 51528, 1985, 13, 51578, 51578, 400, 309, 311, 11, 294, 1186, 11, 264, 787, 1389, 321, 458, 689, 309, 1985, 294, 264, 4319, 295, 5267, 13, 51732, 51732, 407, 309, 311, 733, 295, 1021, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.17083391989431074, "compression_ratio": 1.8603896103896105, "no_speech_prob": 3.704160553752445e-05}, {"id": 540, "seek": 185304, "start": 1872.32, "end": 1876.32, "text": " I'm going to mention a little bit metric learning because it's one of the few cases where it", "tokens": [50364, 1057, 729, 1507, 1936, 366, 819, 9606, 295, 341, 11, 3009, 460, 1770, 82, 13, 50610, 50610, 400, 264, 2636, 472, 307, 1382, 281, 2445, 322, 2758, 2793, 295, 264, 1412, 47138, 281, 2793, 50811, 50811, 322, 264, 1412, 47138, 13, 50861, 50861, 663, 311, 1219, 1441, 78, 3436, 8399, 22660, 19866, 13, 50911, 50911, 400, 300, 311, 437, 729, 2416, 426, 45196, 2316, 286, 390, 3585, 291, 466, 360, 13, 51152, 51152, 663, 311, 1219, 257, 2758, 8399, 22660, 19866, 420, 257, 1729, 1389, 295, 1441, 78, 3436, 8399, 22660, 19866, 13, 51328, 51328, 286, 478, 516, 281, 2152, 257, 707, 857, 20678, 2539, 570, 309, 311, 472, 295, 264, 1326, 3331, 689, 309, 51528, 51528, 1985, 13, 51578, 51578, 400, 309, 311, 11, 294, 1186, 11, 264, 787, 1389, 321, 458, 689, 309, 1985, 294, 264, 4319, 295, 5267, 13, 51732, 51732, 407, 309, 311, 733, 295, 1021, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.17083391989431074, "compression_ratio": 1.8603896103896105, "no_speech_prob": 3.704160553752445e-05}, {"id": 541, "seek": 185304, "start": 1876.32, "end": 1877.32, "text": " works.", "tokens": [50364, 1057, 729, 1507, 1936, 366, 819, 9606, 295, 341, 11, 3009, 460, 1770, 82, 13, 50610, 50610, 400, 264, 2636, 472, 307, 1382, 281, 2445, 322, 2758, 2793, 295, 264, 1412, 47138, 281, 2793, 50811, 50811, 322, 264, 1412, 47138, 13, 50861, 50861, 663, 311, 1219, 1441, 78, 3436, 8399, 22660, 19866, 13, 50911, 50911, 400, 300, 311, 437, 729, 2416, 426, 45196, 2316, 286, 390, 3585, 291, 466, 360, 13, 51152, 51152, 663, 311, 1219, 257, 2758, 8399, 22660, 19866, 420, 257, 1729, 1389, 295, 1441, 78, 3436, 8399, 22660, 19866, 13, 51328, 51328, 286, 478, 516, 281, 2152, 257, 707, 857, 20678, 2539, 570, 309, 311, 472, 295, 264, 1326, 3331, 689, 309, 51528, 51528, 1985, 13, 51578, 51578, 400, 309, 311, 11, 294, 1186, 11, 264, 787, 1389, 321, 458, 689, 309, 1985, 294, 264, 4319, 295, 5267, 13, 51732, 51732, 407, 309, 311, 733, 295, 1021, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.17083391989431074, "compression_ratio": 1.8603896103896105, "no_speech_prob": 3.704160553752445e-05}, {"id": 542, "seek": 185304, "start": 1877.32, "end": 1880.3999999999999, "text": " And it's, in fact, the only case we know where it works in the context of images.", "tokens": [50364, 1057, 729, 1507, 1936, 366, 819, 9606, 295, 341, 11, 3009, 460, 1770, 82, 13, 50610, 50610, 400, 264, 2636, 472, 307, 1382, 281, 2445, 322, 2758, 2793, 295, 264, 1412, 47138, 281, 2793, 50811, 50811, 322, 264, 1412, 47138, 13, 50861, 50861, 663, 311, 1219, 1441, 78, 3436, 8399, 22660, 19866, 13, 50911, 50911, 400, 300, 311, 437, 729, 2416, 426, 45196, 2316, 286, 390, 3585, 291, 466, 360, 13, 51152, 51152, 663, 311, 1219, 257, 2758, 8399, 22660, 19866, 420, 257, 1729, 1389, 295, 1441, 78, 3436, 8399, 22660, 19866, 13, 51328, 51328, 286, 478, 516, 281, 2152, 257, 707, 857, 20678, 2539, 570, 309, 311, 472, 295, 264, 1326, 3331, 689, 309, 51528, 51528, 1985, 13, 51578, 51578, 400, 309, 311, 11, 294, 1186, 11, 264, 787, 1389, 321, 458, 689, 309, 1985, 294, 264, 4319, 295, 5267, 13, 51732, 51732, 407, 309, 311, 733, 295, 1021, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.17083391989431074, "compression_ratio": 1.8603896103896105, "no_speech_prob": 3.704160553752445e-05}, {"id": 543, "seek": 185304, "start": 1880.3999999999999, "end": 1881.72, "text": " So it's kind of important.", "tokens": [50364, 1057, 729, 1507, 1936, 366, 819, 9606, 295, 341, 11, 3009, 460, 1770, 82, 13, 50610, 50610, 400, 264, 2636, 472, 307, 1382, 281, 2445, 322, 2758, 2793, 295, 264, 1412, 47138, 281, 2793, 50811, 50811, 322, 264, 1412, 47138, 13, 50861, 50861, 663, 311, 1219, 1441, 78, 3436, 8399, 22660, 19866, 13, 50911, 50911, 400, 300, 311, 437, 729, 2416, 426, 45196, 2316, 286, 390, 3585, 291, 466, 360, 13, 51152, 51152, 663, 311, 1219, 257, 2758, 8399, 22660, 19866, 420, 257, 1729, 1389, 295, 1441, 78, 3436, 8399, 22660, 19866, 13, 51328, 51328, 286, 478, 516, 281, 2152, 257, 707, 857, 20678, 2539, 570, 309, 311, 472, 295, 264, 1326, 3331, 689, 309, 51528, 51528, 1985, 13, 51578, 51578, 400, 309, 311, 11, 294, 1186, 11, 264, 787, 1389, 321, 458, 689, 309, 1985, 294, 264, 4319, 295, 5267, 13, 51732, 51732, 407, 309, 311, 733, 295, 1021, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.17083391989431074, "compression_ratio": 1.8603896103896105, "no_speech_prob": 3.704160553752445e-05}, {"id": 544, "seek": 188172, "start": 1881.72, "end": 1888.76, "text": " And those results are recent, like last week.", "tokens": [50364, 400, 729, 3542, 366, 5162, 11, 411, 1036, 1243, 13, 50716, 50716, 400, 550, 456, 311, 26621, 7150, 13, 50804, 50804, 2188, 295, 552, 11, 512, 295, 291, 286, 478, 988, 458, 13, 50876, 50876, 407, 321, 519, 411, 6465, 32, 13, 50938, 50938, 407, 6465, 32, 11, 291, 652, 988, 264, 1379, 1901, 307, 406, 31499, 292, 570, 264, 10290, 307, 51298, 51298, 38901, 281, 312, 2295, 18795, 13, 51398, 51398, 591, 12, 1398, 599, 11, 39148, 9925, 2316, 11, 3732, 14360, 32, 11, 1030, 11458, 13, 51616, 51616, 1981, 366, 264, 2306, 286, 478, 516, 281, 751, 466, 570, 300, 311, 689, 452, 1460, 307, 558, 586, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18807591890033923, "compression_ratio": 1.5900383141762453, "no_speech_prob": 4.7093312787183095e-06}, {"id": 545, "seek": 188172, "start": 1888.76, "end": 1890.52, "text": " And then there's architectural methods.", "tokens": [50364, 400, 729, 3542, 366, 5162, 11, 411, 1036, 1243, 13, 50716, 50716, 400, 550, 456, 311, 26621, 7150, 13, 50804, 50804, 2188, 295, 552, 11, 512, 295, 291, 286, 478, 988, 458, 13, 50876, 50876, 407, 321, 519, 411, 6465, 32, 13, 50938, 50938, 407, 6465, 32, 11, 291, 652, 988, 264, 1379, 1901, 307, 406, 31499, 292, 570, 264, 10290, 307, 51298, 51298, 38901, 281, 312, 2295, 18795, 13, 51398, 51398, 591, 12, 1398, 599, 11, 39148, 9925, 2316, 11, 3732, 14360, 32, 11, 1030, 11458, 13, 51616, 51616, 1981, 366, 264, 2306, 286, 478, 516, 281, 751, 466, 570, 300, 311, 689, 452, 1460, 307, 558, 586, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18807591890033923, "compression_ratio": 1.5900383141762453, "no_speech_prob": 4.7093312787183095e-06}, {"id": 546, "seek": 188172, "start": 1890.52, "end": 1891.96, "text": " Some of them, some of you I'm sure know.", "tokens": [50364, 400, 729, 3542, 366, 5162, 11, 411, 1036, 1243, 13, 50716, 50716, 400, 550, 456, 311, 26621, 7150, 13, 50804, 50804, 2188, 295, 552, 11, 512, 295, 291, 286, 478, 988, 458, 13, 50876, 50876, 407, 321, 519, 411, 6465, 32, 13, 50938, 50938, 407, 6465, 32, 11, 291, 652, 988, 264, 1379, 1901, 307, 406, 31499, 292, 570, 264, 10290, 307, 51298, 51298, 38901, 281, 312, 2295, 18795, 13, 51398, 51398, 591, 12, 1398, 599, 11, 39148, 9925, 2316, 11, 3732, 14360, 32, 11, 1030, 11458, 13, 51616, 51616, 1981, 366, 264, 2306, 286, 478, 516, 281, 751, 466, 570, 300, 311, 689, 452, 1460, 307, 558, 586, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18807591890033923, "compression_ratio": 1.5900383141762453, "no_speech_prob": 4.7093312787183095e-06}, {"id": 547, "seek": 188172, "start": 1891.96, "end": 1893.2, "text": " So we think like PCA.", "tokens": [50364, 400, 729, 3542, 366, 5162, 11, 411, 1036, 1243, 13, 50716, 50716, 400, 550, 456, 311, 26621, 7150, 13, 50804, 50804, 2188, 295, 552, 11, 512, 295, 291, 286, 478, 988, 458, 13, 50876, 50876, 407, 321, 519, 411, 6465, 32, 13, 50938, 50938, 407, 6465, 32, 11, 291, 652, 988, 264, 1379, 1901, 307, 406, 31499, 292, 570, 264, 10290, 307, 51298, 51298, 38901, 281, 312, 2295, 18795, 13, 51398, 51398, 591, 12, 1398, 599, 11, 39148, 9925, 2316, 11, 3732, 14360, 32, 11, 1030, 11458, 13, 51616, 51616, 1981, 366, 264, 2306, 286, 478, 516, 281, 751, 466, 570, 300, 311, 689, 452, 1460, 307, 558, 586, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18807591890033923, "compression_ratio": 1.5900383141762453, "no_speech_prob": 4.7093312787183095e-06}, {"id": 548, "seek": 188172, "start": 1893.2, "end": 1900.4, "text": " So PCA, you make sure the whole space is not reconstructed because the representation is", "tokens": [50364, 400, 729, 3542, 366, 5162, 11, 411, 1036, 1243, 13, 50716, 50716, 400, 550, 456, 311, 26621, 7150, 13, 50804, 50804, 2188, 295, 552, 11, 512, 295, 291, 286, 478, 988, 458, 13, 50876, 50876, 407, 321, 519, 411, 6465, 32, 13, 50938, 50938, 407, 6465, 32, 11, 291, 652, 988, 264, 1379, 1901, 307, 406, 31499, 292, 570, 264, 10290, 307, 51298, 51298, 38901, 281, 312, 2295, 18795, 13, 51398, 51398, 591, 12, 1398, 599, 11, 39148, 9925, 2316, 11, 3732, 14360, 32, 11, 1030, 11458, 13, 51616, 51616, 1981, 366, 264, 2306, 286, 478, 516, 281, 751, 466, 570, 300, 311, 689, 452, 1460, 307, 558, 586, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18807591890033923, "compression_ratio": 1.5900383141762453, "no_speech_prob": 4.7093312787183095e-06}, {"id": 549, "seek": 188172, "start": 1900.4, "end": 1902.4, "text": " constrained to be low dimensional.", "tokens": [50364, 400, 729, 3542, 366, 5162, 11, 411, 1036, 1243, 13, 50716, 50716, 400, 550, 456, 311, 26621, 7150, 13, 50804, 50804, 2188, 295, 552, 11, 512, 295, 291, 286, 478, 988, 458, 13, 50876, 50876, 407, 321, 519, 411, 6465, 32, 13, 50938, 50938, 407, 6465, 32, 11, 291, 652, 988, 264, 1379, 1901, 307, 406, 31499, 292, 570, 264, 10290, 307, 51298, 51298, 38901, 281, 312, 2295, 18795, 13, 51398, 51398, 591, 12, 1398, 599, 11, 39148, 9925, 2316, 11, 3732, 14360, 32, 11, 1030, 11458, 13, 51616, 51616, 1981, 366, 264, 2306, 286, 478, 516, 281, 751, 466, 570, 300, 311, 689, 452, 1460, 307, 558, 586, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18807591890033923, "compression_ratio": 1.5900383141762453, "no_speech_prob": 4.7093312787183095e-06}, {"id": 550, "seek": 188172, "start": 1902.4, "end": 1906.76, "text": " K-means, Gaussian mixture model, square ICA, et cetera.", "tokens": [50364, 400, 729, 3542, 366, 5162, 11, 411, 1036, 1243, 13, 50716, 50716, 400, 550, 456, 311, 26621, 7150, 13, 50804, 50804, 2188, 295, 552, 11, 512, 295, 291, 286, 478, 988, 458, 13, 50876, 50876, 407, 321, 519, 411, 6465, 32, 13, 50938, 50938, 407, 6465, 32, 11, 291, 652, 988, 264, 1379, 1901, 307, 406, 31499, 292, 570, 264, 10290, 307, 51298, 51298, 38901, 281, 312, 2295, 18795, 13, 51398, 51398, 591, 12, 1398, 599, 11, 39148, 9925, 2316, 11, 3732, 14360, 32, 11, 1030, 11458, 13, 51616, 51616, 1981, 366, 264, 2306, 286, 478, 516, 281, 751, 466, 570, 300, 311, 689, 452, 1460, 307, 558, 586, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18807591890033923, "compression_ratio": 1.5900383141762453, "no_speech_prob": 4.7093312787183095e-06}, {"id": 551, "seek": 188172, "start": 1906.76, "end": 1910.16, "text": " These are the ones I'm going to talk about because that's where my money is right now.", "tokens": [50364, 400, 729, 3542, 366, 5162, 11, 411, 1036, 1243, 13, 50716, 50716, 400, 550, 456, 311, 26621, 7150, 13, 50804, 50804, 2188, 295, 552, 11, 512, 295, 291, 286, 478, 988, 458, 13, 50876, 50876, 407, 321, 519, 411, 6465, 32, 13, 50938, 50938, 407, 6465, 32, 11, 291, 652, 988, 264, 1379, 1901, 307, 406, 31499, 292, 570, 264, 10290, 307, 51298, 51298, 38901, 281, 312, 2295, 18795, 13, 51398, 51398, 591, 12, 1398, 599, 11, 39148, 9925, 2316, 11, 3732, 14360, 32, 11, 1030, 11458, 13, 51616, 51616, 1981, 366, 264, 2306, 286, 478, 516, 281, 751, 466, 570, 300, 311, 689, 452, 1460, 307, 558, 586, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18807591890033923, "compression_ratio": 1.5900383141762453, "no_speech_prob": 4.7093312787183095e-06}, {"id": 552, "seek": 191016, "start": 1910.16, "end": 1914.24, "text": " So think like sparse coding, sparse autoencoders, which some of you, of course, have heard of.", "tokens": [50364, 407, 519, 411, 637, 11668, 17720, 11, 637, 11668, 8399, 22660, 378, 433, 11, 597, 512, 295, 291, 11, 295, 1164, 11, 362, 2198, 295, 13, 50568, 50568, 400, 550, 264, 661, 2306, 286, 478, 406, 516, 281, 2152, 13, 50724, 50724, 407, 577, 775, 309, 589, 294, 264, 4319, 295, 6465, 32, 293, 591, 12, 1398, 599, 30, 50993, 50993, 407, 294, 6465, 32, 11, 264, 4458, 295, 264, 1901, 300, 307, 6239, 31499, 292, 307, 264, 9716, 2090, 17940, 13, 51344, 51344, 682, 341, 1389, 510, 11, 498, 264, 1412, 2793, 366, 3247, 15551, 490, 341, 25165, 11, 264, 9716, 2090, 17940, 51641, 51641, 510, 11, 10139, 472, 11, 307, 341, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.13487912032563806, "compression_ratio": 1.6363636363636365, "no_speech_prob": 1.1840810657304246e-05}, {"id": 553, "seek": 191016, "start": 1914.24, "end": 1917.3600000000001, "text": " And then the other ones I'm not going to mention.", "tokens": [50364, 407, 519, 411, 637, 11668, 17720, 11, 637, 11668, 8399, 22660, 378, 433, 11, 597, 512, 295, 291, 11, 295, 1164, 11, 362, 2198, 295, 13, 50568, 50568, 400, 550, 264, 661, 2306, 286, 478, 406, 516, 281, 2152, 13, 50724, 50724, 407, 577, 775, 309, 589, 294, 264, 4319, 295, 6465, 32, 293, 591, 12, 1398, 599, 30, 50993, 50993, 407, 294, 6465, 32, 11, 264, 4458, 295, 264, 1901, 300, 307, 6239, 31499, 292, 307, 264, 9716, 2090, 17940, 13, 51344, 51344, 682, 341, 1389, 510, 11, 498, 264, 1412, 2793, 366, 3247, 15551, 490, 341, 25165, 11, 264, 9716, 2090, 17940, 51641, 51641, 510, 11, 10139, 472, 11, 307, 341, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.13487912032563806, "compression_ratio": 1.6363636363636365, "no_speech_prob": 1.1840810657304246e-05}, {"id": 554, "seek": 191016, "start": 1917.3600000000001, "end": 1922.74, "text": " So how does it work in the context of PCA and K-means?", "tokens": [50364, 407, 519, 411, 637, 11668, 17720, 11, 637, 11668, 8399, 22660, 378, 433, 11, 597, 512, 295, 291, 11, 295, 1164, 11, 362, 2198, 295, 13, 50568, 50568, 400, 550, 264, 661, 2306, 286, 478, 406, 516, 281, 2152, 13, 50724, 50724, 407, 577, 775, 309, 589, 294, 264, 4319, 295, 6465, 32, 293, 591, 12, 1398, 599, 30, 50993, 50993, 407, 294, 6465, 32, 11, 264, 4458, 295, 264, 1901, 300, 307, 6239, 31499, 292, 307, 264, 9716, 2090, 17940, 13, 51344, 51344, 682, 341, 1389, 510, 11, 498, 264, 1412, 2793, 366, 3247, 15551, 490, 341, 25165, 11, 264, 9716, 2090, 17940, 51641, 51641, 510, 11, 10139, 472, 11, 307, 341, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.13487912032563806, "compression_ratio": 1.6363636363636365, "no_speech_prob": 1.1840810657304246e-05}, {"id": 555, "seek": 191016, "start": 1922.74, "end": 1929.76, "text": " So in PCA, the region of the space that is perfectly reconstructed is the principal subspace.", "tokens": [50364, 407, 519, 411, 637, 11668, 17720, 11, 637, 11668, 8399, 22660, 378, 433, 11, 597, 512, 295, 291, 11, 295, 1164, 11, 362, 2198, 295, 13, 50568, 50568, 400, 550, 264, 661, 2306, 286, 478, 406, 516, 281, 2152, 13, 50724, 50724, 407, 577, 775, 309, 589, 294, 264, 4319, 295, 6465, 32, 293, 591, 12, 1398, 599, 30, 50993, 50993, 407, 294, 6465, 32, 11, 264, 4458, 295, 264, 1901, 300, 307, 6239, 31499, 292, 307, 264, 9716, 2090, 17940, 13, 51344, 51344, 682, 341, 1389, 510, 11, 498, 264, 1412, 2793, 366, 3247, 15551, 490, 341, 25165, 11, 264, 9716, 2090, 17940, 51641, 51641, 510, 11, 10139, 472, 11, 307, 341, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.13487912032563806, "compression_ratio": 1.6363636363636365, "no_speech_prob": 1.1840810657304246e-05}, {"id": 556, "seek": 191016, "start": 1929.76, "end": 1935.7, "text": " In this case here, if the data points are sampled from this spiral, the principal subspace", "tokens": [50364, 407, 519, 411, 637, 11668, 17720, 11, 637, 11668, 8399, 22660, 378, 433, 11, 597, 512, 295, 291, 11, 295, 1164, 11, 362, 2198, 295, 13, 50568, 50568, 400, 550, 264, 661, 2306, 286, 478, 406, 516, 281, 2152, 13, 50724, 50724, 407, 577, 775, 309, 589, 294, 264, 4319, 295, 6465, 32, 293, 591, 12, 1398, 599, 30, 50993, 50993, 407, 294, 6465, 32, 11, 264, 4458, 295, 264, 1901, 300, 307, 6239, 31499, 292, 307, 264, 9716, 2090, 17940, 13, 51344, 51344, 682, 341, 1389, 510, 11, 498, 264, 1412, 2793, 366, 3247, 15551, 490, 341, 25165, 11, 264, 9716, 2090, 17940, 51641, 51641, 510, 11, 10139, 472, 11, 307, 341, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.13487912032563806, "compression_ratio": 1.6363636363636365, "no_speech_prob": 1.1840810657304246e-05}, {"id": 557, "seek": 191016, "start": 1935.7, "end": 1936.92, "text": " here, dimension one, is this.", "tokens": [50364, 407, 519, 411, 637, 11668, 17720, 11, 637, 11668, 8399, 22660, 378, 433, 11, 597, 512, 295, 291, 11, 295, 1164, 11, 362, 2198, 295, 13, 50568, 50568, 400, 550, 264, 661, 2306, 286, 478, 406, 516, 281, 2152, 13, 50724, 50724, 407, 577, 775, 309, 589, 294, 264, 4319, 295, 6465, 32, 293, 591, 12, 1398, 599, 30, 50993, 50993, 407, 294, 6465, 32, 11, 264, 4458, 295, 264, 1901, 300, 307, 6239, 31499, 292, 307, 264, 9716, 2090, 17940, 13, 51344, 51344, 682, 341, 1389, 510, 11, 498, 264, 1412, 2793, 366, 3247, 15551, 490, 341, 25165, 11, 264, 9716, 2090, 17940, 51641, 51641, 510, 11, 10139, 472, 11, 307, 341, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.13487912032563806, "compression_ratio": 1.6363636363636365, "no_speech_prob": 1.1840810657304246e-05}, {"id": 558, "seek": 193692, "start": 1936.92, "end": 1942.8400000000001, "text": " So this has reconstruction error zero, and everything else grows quadratically.", "tokens": [50364, 407, 341, 575, 31565, 6713, 4018, 11, 293, 1203, 1646, 13156, 10787, 4481, 984, 13, 50660, 50660, 1436, 291, 747, 257, 935, 11, 291, 1716, 309, 322, 341, 13, 50766, 50766, 400, 370, 498, 309, 311, 1217, 456, 11, 31565, 6713, 307, 4018, 13, 50882, 50882, 759, 309, 311, 510, 11, 31565, 6713, 307, 264, 3732, 295, 264, 462, 1311, 31264, 282, 4560, 13, 51150, 51150, 1726, 257, 665, 2316, 295, 257, 25165, 11, 382, 291, 393, 980, 13, 51314, 51314, 591, 12, 1398, 599, 1619, 11, 370, 591, 12, 1398, 599, 307, 1880, 570, 309, 575, 257, 48994, 7006, 294, 309, 13, 51586, 51586, 407, 264, 2281, 2445, 307, 406, 3838, 257, 2445, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.1340613004540195, "compression_ratio": 1.7237354085603114, "no_speech_prob": 1.4366585219249828e-06}, {"id": 559, "seek": 193692, "start": 1942.8400000000001, "end": 1944.96, "text": " Because you take a point, you project it on this.", "tokens": [50364, 407, 341, 575, 31565, 6713, 4018, 11, 293, 1203, 1646, 13156, 10787, 4481, 984, 13, 50660, 50660, 1436, 291, 747, 257, 935, 11, 291, 1716, 309, 322, 341, 13, 50766, 50766, 400, 370, 498, 309, 311, 1217, 456, 11, 31565, 6713, 307, 4018, 13, 50882, 50882, 759, 309, 311, 510, 11, 31565, 6713, 307, 264, 3732, 295, 264, 462, 1311, 31264, 282, 4560, 13, 51150, 51150, 1726, 257, 665, 2316, 295, 257, 25165, 11, 382, 291, 393, 980, 13, 51314, 51314, 591, 12, 1398, 599, 1619, 11, 370, 591, 12, 1398, 599, 307, 1880, 570, 309, 575, 257, 48994, 7006, 294, 309, 13, 51586, 51586, 407, 264, 2281, 2445, 307, 406, 3838, 257, 2445, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.1340613004540195, "compression_ratio": 1.7237354085603114, "no_speech_prob": 1.4366585219249828e-06}, {"id": 560, "seek": 193692, "start": 1944.96, "end": 1947.28, "text": " And so if it's already there, reconstruction error is zero.", "tokens": [50364, 407, 341, 575, 31565, 6713, 4018, 11, 293, 1203, 1646, 13156, 10787, 4481, 984, 13, 50660, 50660, 1436, 291, 747, 257, 935, 11, 291, 1716, 309, 322, 341, 13, 50766, 50766, 400, 370, 498, 309, 311, 1217, 456, 11, 31565, 6713, 307, 4018, 13, 50882, 50882, 759, 309, 311, 510, 11, 31565, 6713, 307, 264, 3732, 295, 264, 462, 1311, 31264, 282, 4560, 13, 51150, 51150, 1726, 257, 665, 2316, 295, 257, 25165, 11, 382, 291, 393, 980, 13, 51314, 51314, 591, 12, 1398, 599, 1619, 11, 370, 591, 12, 1398, 599, 307, 1880, 570, 309, 575, 257, 48994, 7006, 294, 309, 13, 51586, 51586, 407, 264, 2281, 2445, 307, 406, 3838, 257, 2445, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.1340613004540195, "compression_ratio": 1.7237354085603114, "no_speech_prob": 1.4366585219249828e-06}, {"id": 561, "seek": 193692, "start": 1947.28, "end": 1952.64, "text": " If it's here, reconstruction error is the square of the Euclidean distance.", "tokens": [50364, 407, 341, 575, 31565, 6713, 4018, 11, 293, 1203, 1646, 13156, 10787, 4481, 984, 13, 50660, 50660, 1436, 291, 747, 257, 935, 11, 291, 1716, 309, 322, 341, 13, 50766, 50766, 400, 370, 498, 309, 311, 1217, 456, 11, 31565, 6713, 307, 4018, 13, 50882, 50882, 759, 309, 311, 510, 11, 31565, 6713, 307, 264, 3732, 295, 264, 462, 1311, 31264, 282, 4560, 13, 51150, 51150, 1726, 257, 665, 2316, 295, 257, 25165, 11, 382, 291, 393, 980, 13, 51314, 51314, 591, 12, 1398, 599, 1619, 11, 370, 591, 12, 1398, 599, 307, 1880, 570, 309, 575, 257, 48994, 7006, 294, 309, 13, 51586, 51586, 407, 264, 2281, 2445, 307, 406, 3838, 257, 2445, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.1340613004540195, "compression_ratio": 1.7237354085603114, "no_speech_prob": 1.4366585219249828e-06}, {"id": 562, "seek": 193692, "start": 1952.64, "end": 1955.92, "text": " Not a good model of a spiral, as you can tell.", "tokens": [50364, 407, 341, 575, 31565, 6713, 4018, 11, 293, 1203, 1646, 13156, 10787, 4481, 984, 13, 50660, 50660, 1436, 291, 747, 257, 935, 11, 291, 1716, 309, 322, 341, 13, 50766, 50766, 400, 370, 498, 309, 311, 1217, 456, 11, 31565, 6713, 307, 4018, 13, 50882, 50882, 759, 309, 311, 510, 11, 31565, 6713, 307, 264, 3732, 295, 264, 462, 1311, 31264, 282, 4560, 13, 51150, 51150, 1726, 257, 665, 2316, 295, 257, 25165, 11, 382, 291, 393, 980, 13, 51314, 51314, 591, 12, 1398, 599, 1619, 11, 370, 591, 12, 1398, 599, 307, 1880, 570, 309, 575, 257, 48994, 7006, 294, 309, 13, 51586, 51586, 407, 264, 2281, 2445, 307, 406, 3838, 257, 2445, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.1340613004540195, "compression_ratio": 1.7237354085603114, "no_speech_prob": 1.4366585219249828e-06}, {"id": 563, "seek": 193692, "start": 1955.92, "end": 1961.3600000000001, "text": " K-means says, so K-means is interesting because it has a latent variable in it.", "tokens": [50364, 407, 341, 575, 31565, 6713, 4018, 11, 293, 1203, 1646, 13156, 10787, 4481, 984, 13, 50660, 50660, 1436, 291, 747, 257, 935, 11, 291, 1716, 309, 322, 341, 13, 50766, 50766, 400, 370, 498, 309, 311, 1217, 456, 11, 31565, 6713, 307, 4018, 13, 50882, 50882, 759, 309, 311, 510, 11, 31565, 6713, 307, 264, 3732, 295, 264, 462, 1311, 31264, 282, 4560, 13, 51150, 51150, 1726, 257, 665, 2316, 295, 257, 25165, 11, 382, 291, 393, 980, 13, 51314, 51314, 591, 12, 1398, 599, 1619, 11, 370, 591, 12, 1398, 599, 307, 1880, 570, 309, 575, 257, 48994, 7006, 294, 309, 13, 51586, 51586, 407, 264, 2281, 2445, 307, 406, 3838, 257, 2445, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.1340613004540195, "compression_ratio": 1.7237354085603114, "no_speech_prob": 1.4366585219249828e-06}, {"id": 564, "seek": 193692, "start": 1961.3600000000001, "end": 1965.2, "text": " So the energy function is not directly a function.", "tokens": [50364, 407, 341, 575, 31565, 6713, 4018, 11, 293, 1203, 1646, 13156, 10787, 4481, 984, 13, 50660, 50660, 1436, 291, 747, 257, 935, 11, 291, 1716, 309, 322, 341, 13, 50766, 50766, 400, 370, 498, 309, 311, 1217, 456, 11, 31565, 6713, 307, 4018, 13, 50882, 50882, 759, 309, 311, 510, 11, 31565, 6713, 307, 264, 3732, 295, 264, 462, 1311, 31264, 282, 4560, 13, 51150, 51150, 1726, 257, 665, 2316, 295, 257, 25165, 11, 382, 291, 393, 980, 13, 51314, 51314, 591, 12, 1398, 599, 1619, 11, 370, 591, 12, 1398, 599, 307, 1880, 570, 309, 575, 257, 48994, 7006, 294, 309, 13, 51586, 51586, 407, 264, 2281, 2445, 307, 406, 3838, 257, 2445, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.1340613004540195, "compression_ratio": 1.7237354085603114, "no_speech_prob": 1.4366585219249828e-06}, {"id": 565, "seek": 196520, "start": 1965.2, "end": 1968.56, "text": " It's the minimum of some other more elementary energy function.", "tokens": [50364, 467, 311, 264, 7285, 295, 512, 661, 544, 16429, 2281, 2445, 13, 50532, 50532, 407, 309, 311, 264, 923, 670, 257, 8062, 710, 295, 264, 3732, 4560, 1296, 264, 1412, 935, 293, 341, 710, 50950, 50950, 8062, 17207, 538, 257, 8141, 6104, 13766, 366, 264, 42197, 295, 264, 591, 12, 1398, 599, 2316, 13, 51376, 51376, 400, 291, 1817, 7146, 341, 8062, 281, 312, 257, 472, 12, 12194, 8062, 13, 51540, 51540, 407, 787, 472, 6542, 393, 312, 472, 13, 51682, 51682, 440, 661, 2306, 362, 281, 312, 4018, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.14548289522211602, "compression_ratio": 1.6081081081081081, "no_speech_prob": 9.815018529479858e-06}, {"id": 566, "seek": 196520, "start": 1968.56, "end": 1976.92, "text": " So it's the min over a vector z of the square distance between the data point and this z", "tokens": [50364, 467, 311, 264, 7285, 295, 512, 661, 544, 16429, 2281, 2445, 13, 50532, 50532, 407, 309, 311, 264, 923, 670, 257, 8062, 710, 295, 264, 3732, 4560, 1296, 264, 1412, 935, 293, 341, 710, 50950, 50950, 8062, 17207, 538, 257, 8141, 6104, 13766, 366, 264, 42197, 295, 264, 591, 12, 1398, 599, 2316, 13, 51376, 51376, 400, 291, 1817, 7146, 341, 8062, 281, 312, 257, 472, 12, 12194, 8062, 13, 51540, 51540, 407, 787, 472, 6542, 393, 312, 472, 13, 51682, 51682, 440, 661, 2306, 362, 281, 312, 4018, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.14548289522211602, "compression_ratio": 1.6081081081081081, "no_speech_prob": 9.815018529479858e-06}, {"id": 567, "seek": 196520, "start": 1976.92, "end": 1985.44, "text": " vector multiplied by a matrix whose columns are the prototypes of the K-means model.", "tokens": [50364, 467, 311, 264, 7285, 295, 512, 661, 544, 16429, 2281, 2445, 13, 50532, 50532, 407, 309, 311, 264, 923, 670, 257, 8062, 710, 295, 264, 3732, 4560, 1296, 264, 1412, 935, 293, 341, 710, 50950, 50950, 8062, 17207, 538, 257, 8141, 6104, 13766, 366, 264, 42197, 295, 264, 591, 12, 1398, 599, 2316, 13, 51376, 51376, 400, 291, 1817, 7146, 341, 8062, 281, 312, 257, 472, 12, 12194, 8062, 13, 51540, 51540, 407, 787, 472, 6542, 393, 312, 472, 13, 51682, 51682, 440, 661, 2306, 362, 281, 312, 4018, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.14548289522211602, "compression_ratio": 1.6081081081081081, "no_speech_prob": 9.815018529479858e-06}, {"id": 568, "seek": 196520, "start": 1985.44, "end": 1988.72, "text": " And you constrain this vector to be a one-hot vector.", "tokens": [50364, 467, 311, 264, 7285, 295, 512, 661, 544, 16429, 2281, 2445, 13, 50532, 50532, 407, 309, 311, 264, 923, 670, 257, 8062, 710, 295, 264, 3732, 4560, 1296, 264, 1412, 935, 293, 341, 710, 50950, 50950, 8062, 17207, 538, 257, 8141, 6104, 13766, 366, 264, 42197, 295, 264, 591, 12, 1398, 599, 2316, 13, 51376, 51376, 400, 291, 1817, 7146, 341, 8062, 281, 312, 257, 472, 12, 12194, 8062, 13, 51540, 51540, 407, 787, 472, 6542, 393, 312, 472, 13, 51682, 51682, 440, 661, 2306, 362, 281, 312, 4018, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.14548289522211602, "compression_ratio": 1.6081081081081081, "no_speech_prob": 9.815018529479858e-06}, {"id": 569, "seek": 196520, "start": 1988.72, "end": 1991.56, "text": " So only one component can be one.", "tokens": [50364, 467, 311, 264, 7285, 295, 512, 661, 544, 16429, 2281, 2445, 13, 50532, 50532, 407, 309, 311, 264, 923, 670, 257, 8062, 710, 295, 264, 3732, 4560, 1296, 264, 1412, 935, 293, 341, 710, 50950, 50950, 8062, 17207, 538, 257, 8141, 6104, 13766, 366, 264, 42197, 295, 264, 591, 12, 1398, 599, 2316, 13, 51376, 51376, 400, 291, 1817, 7146, 341, 8062, 281, 312, 257, 472, 12, 12194, 8062, 13, 51540, 51540, 407, 787, 472, 6542, 393, 312, 472, 13, 51682, 51682, 440, 661, 2306, 362, 281, 312, 4018, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.14548289522211602, "compression_ratio": 1.6081081081081081, "no_speech_prob": 9.815018529479858e-06}, {"id": 570, "seek": 196520, "start": 1991.56, "end": 1993.16, "text": " The other ones have to be zero.", "tokens": [50364, 467, 311, 264, 7285, 295, 512, 661, 544, 16429, 2281, 2445, 13, 50532, 50532, 407, 309, 311, 264, 923, 670, 257, 8062, 710, 295, 264, 3732, 4560, 1296, 264, 1412, 935, 293, 341, 710, 50950, 50950, 8062, 17207, 538, 257, 8141, 6104, 13766, 366, 264, 42197, 295, 264, 591, 12, 1398, 599, 2316, 13, 51376, 51376, 400, 291, 1817, 7146, 341, 8062, 281, 312, 257, 472, 12, 12194, 8062, 13, 51540, 51540, 407, 787, 472, 6542, 393, 312, 472, 13, 51682, 51682, 440, 661, 2306, 362, 281, 312, 4018, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.14548289522211602, "compression_ratio": 1.6081081081081081, "no_speech_prob": 9.815018529479858e-06}, {"id": 571, "seek": 199316, "start": 1993.16, "end": 1997.4, "text": " And so you have to do this search exhaustively, which is akin to a nearest neighbor.", "tokens": [50364, 400, 370, 291, 362, 281, 360, 341, 3164, 14687, 3413, 11, 597, 307, 47540, 281, 257, 23831, 5987, 13, 50576, 50576, 400, 437, 291, 536, 510, 11, 729, 707, 2211, 3179, 366, 264, 4464, 64, 18988, 322, 264, 42197, 13, 50964, 50964, 407, 591, 12, 1398, 599, 445, 829, 42197, 544, 420, 1570, 12309, 17275, 670, 264, 47138, 13, 51160, 51160, 467, 1542, 869, 294, 732, 12819, 13, 51252, 51252, 682, 1090, 10139, 11, 591, 12, 1398, 599, 534, 1177, 380, 589, 300, 731, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.13491070136595307, "compression_ratio": 1.5515695067264574, "no_speech_prob": 1.3496879773811088e-06}, {"id": 572, "seek": 199316, "start": 1997.4, "end": 2005.16, "text": " And what you see here, those little black areas are the minima centered on the prototypes.", "tokens": [50364, 400, 370, 291, 362, 281, 360, 341, 3164, 14687, 3413, 11, 597, 307, 47540, 281, 257, 23831, 5987, 13, 50576, 50576, 400, 437, 291, 536, 510, 11, 729, 707, 2211, 3179, 366, 264, 4464, 64, 18988, 322, 264, 42197, 13, 50964, 50964, 407, 591, 12, 1398, 599, 445, 829, 42197, 544, 420, 1570, 12309, 17275, 670, 264, 47138, 13, 51160, 51160, 467, 1542, 869, 294, 732, 12819, 13, 51252, 51252, 682, 1090, 10139, 11, 591, 12, 1398, 599, 534, 1177, 380, 589, 300, 731, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.13491070136595307, "compression_ratio": 1.5515695067264574, "no_speech_prob": 1.3496879773811088e-06}, {"id": 573, "seek": 199316, "start": 2005.16, "end": 2009.0800000000002, "text": " So K-means just put prototypes more or less equally distant over the manifold.", "tokens": [50364, 400, 370, 291, 362, 281, 360, 341, 3164, 14687, 3413, 11, 597, 307, 47540, 281, 257, 23831, 5987, 13, 50576, 50576, 400, 437, 291, 536, 510, 11, 729, 707, 2211, 3179, 366, 264, 4464, 64, 18988, 322, 264, 42197, 13, 50964, 50964, 407, 591, 12, 1398, 599, 445, 829, 42197, 544, 420, 1570, 12309, 17275, 670, 264, 47138, 13, 51160, 51160, 467, 1542, 869, 294, 732, 12819, 13, 51252, 51252, 682, 1090, 10139, 11, 591, 12, 1398, 599, 534, 1177, 380, 589, 300, 731, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.13491070136595307, "compression_ratio": 1.5515695067264574, "no_speech_prob": 1.3496879773811088e-06}, {"id": 574, "seek": 199316, "start": 2009.0800000000002, "end": 2010.92, "text": " It looks great in two dimensions.", "tokens": [50364, 400, 370, 291, 362, 281, 360, 341, 3164, 14687, 3413, 11, 597, 307, 47540, 281, 257, 23831, 5987, 13, 50576, 50576, 400, 437, 291, 536, 510, 11, 729, 707, 2211, 3179, 366, 264, 4464, 64, 18988, 322, 264, 42197, 13, 50964, 50964, 407, 591, 12, 1398, 599, 445, 829, 42197, 544, 420, 1570, 12309, 17275, 670, 264, 47138, 13, 51160, 51160, 467, 1542, 869, 294, 732, 12819, 13, 51252, 51252, 682, 1090, 10139, 11, 591, 12, 1398, 599, 534, 1177, 380, 589, 300, 731, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.13491070136595307, "compression_ratio": 1.5515695067264574, "no_speech_prob": 1.3496879773811088e-06}, {"id": 575, "seek": 199316, "start": 2010.92, "end": 2019.0400000000002, "text": " In high dimension, K-means really doesn't work that well.", "tokens": [50364, 400, 370, 291, 362, 281, 360, 341, 3164, 14687, 3413, 11, 597, 307, 47540, 281, 257, 23831, 5987, 13, 50576, 50576, 400, 437, 291, 536, 510, 11, 729, 707, 2211, 3179, 366, 264, 4464, 64, 18988, 322, 264, 42197, 13, 50964, 50964, 407, 591, 12, 1398, 599, 445, 829, 42197, 544, 420, 1570, 12309, 17275, 670, 264, 47138, 13, 51160, 51160, 467, 1542, 869, 294, 732, 12819, 13, 51252, 51252, 682, 1090, 10139, 11, 591, 12, 1398, 599, 534, 1177, 380, 589, 300, 731, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.13491070136595307, "compression_ratio": 1.5515695067264574, "no_speech_prob": 1.3496879773811088e-06}, {"id": 576, "seek": 201904, "start": 2019.04, "end": 2025.28, "text": " But what's interesting about both of those cases is that they work because the capacity,", "tokens": [50364, 583, 437, 311, 1880, 466, 1293, 295, 729, 3331, 307, 300, 436, 589, 570, 264, 6042, 11, 50676, 50676, 264, 5523, 295, 264, 2418, 1901, 300, 393, 747, 2295, 2281, 307, 5567, 13, 50882, 50882, 663, 311, 257, 2141, 3410, 13, 51046, 51046, 286, 1217, 2825, 466, 264, 6674, 22119, 13, 51246, 51246, 407, 286, 478, 516, 281, 10023, 300, 13, 51362, 51362, 407, 300, 6689, 505, 281, 341, 1558, 295, 48994, 7006, 5245, 13, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.21072148673142058, "compression_ratio": 1.5098039215686274, "no_speech_prob": 1.1726074262696784e-06}, {"id": 577, "seek": 201904, "start": 2025.28, "end": 2029.3999999999999, "text": " the volume of the white space that can take low energy is limited.", "tokens": [50364, 583, 437, 311, 1880, 466, 1293, 295, 729, 3331, 307, 300, 436, 589, 570, 264, 6042, 11, 50676, 50676, 264, 5523, 295, 264, 2418, 1901, 300, 393, 747, 2295, 2281, 307, 5567, 13, 50882, 50882, 663, 311, 257, 2141, 3410, 13, 51046, 51046, 286, 1217, 2825, 466, 264, 6674, 22119, 13, 51246, 51246, 407, 286, 478, 516, 281, 10023, 300, 13, 51362, 51362, 407, 300, 6689, 505, 281, 341, 1558, 295, 48994, 7006, 5245, 13, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.21072148673142058, "compression_ratio": 1.5098039215686274, "no_speech_prob": 1.1726074262696784e-06}, {"id": 578, "seek": 201904, "start": 2029.3999999999999, "end": 2032.68, "text": " That's a key concept.", "tokens": [50364, 583, 437, 311, 1880, 466, 1293, 295, 729, 3331, 307, 300, 436, 589, 570, 264, 6042, 11, 50676, 50676, 264, 5523, 295, 264, 2418, 1901, 300, 393, 747, 2295, 2281, 307, 5567, 13, 50882, 50882, 663, 311, 257, 2141, 3410, 13, 51046, 51046, 286, 1217, 2825, 466, 264, 6674, 22119, 13, 51246, 51246, 407, 286, 478, 516, 281, 10023, 300, 13, 51362, 51362, 407, 300, 6689, 505, 281, 341, 1558, 295, 48994, 7006, 5245, 13, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.21072148673142058, "compression_ratio": 1.5098039215686274, "no_speech_prob": 1.1726074262696784e-06}, {"id": 579, "seek": 201904, "start": 2032.68, "end": 2036.68, "text": " I already talked about the maximum likelihood.", "tokens": [50364, 583, 437, 311, 1880, 466, 1293, 295, 729, 3331, 307, 300, 436, 589, 570, 264, 6042, 11, 50676, 50676, 264, 5523, 295, 264, 2418, 1901, 300, 393, 747, 2295, 2281, 307, 5567, 13, 50882, 50882, 663, 311, 257, 2141, 3410, 13, 51046, 51046, 286, 1217, 2825, 466, 264, 6674, 22119, 13, 51246, 51246, 407, 286, 478, 516, 281, 10023, 300, 13, 51362, 51362, 407, 300, 6689, 505, 281, 341, 1558, 295, 48994, 7006, 5245, 13, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.21072148673142058, "compression_ratio": 1.5098039215686274, "no_speech_prob": 1.1726074262696784e-06}, {"id": 580, "seek": 201904, "start": 2036.68, "end": 2039.0, "text": " So I'm going to skip that.", "tokens": [50364, 583, 437, 311, 1880, 466, 1293, 295, 729, 3331, 307, 300, 436, 589, 570, 264, 6042, 11, 50676, 50676, 264, 5523, 295, 264, 2418, 1901, 300, 393, 747, 2295, 2281, 307, 5567, 13, 50882, 50882, 663, 311, 257, 2141, 3410, 13, 51046, 51046, 286, 1217, 2825, 466, 264, 6674, 22119, 13, 51246, 51246, 407, 286, 478, 516, 281, 10023, 300, 13, 51362, 51362, 407, 300, 6689, 505, 281, 341, 1558, 295, 48994, 7006, 5245, 13, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.21072148673142058, "compression_ratio": 1.5098039215686274, "no_speech_prob": 1.1726074262696784e-06}, {"id": 581, "seek": 201904, "start": 2039.0, "end": 2043.86, "text": " So that leads us to this idea of latent variable models.", "tokens": [50364, 583, 437, 311, 1880, 466, 1293, 295, 729, 3331, 307, 300, 436, 589, 570, 264, 6042, 11, 50676, 50676, 264, 5523, 295, 264, 2418, 1901, 300, 393, 747, 2295, 2281, 307, 5567, 13, 50882, 50882, 663, 311, 257, 2141, 3410, 13, 51046, 51046, 286, 1217, 2825, 466, 264, 6674, 22119, 13, 51246, 51246, 407, 286, 478, 516, 281, 10023, 300, 13, 51362, 51362, 407, 300, 6689, 505, 281, 341, 1558, 295, 48994, 7006, 5245, 13, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.21072148673142058, "compression_ratio": 1.5098039215686274, "no_speech_prob": 1.1726074262696784e-06}, {"id": 582, "seek": 204386, "start": 2043.86, "end": 2049.44, "text": " So energy models, f of x and y, that are actually defined by minimizing a more elementary energy", "tokens": [50364, 407, 2281, 5245, 11, 283, 295, 2031, 293, 288, 11, 300, 366, 767, 7642, 538, 46608, 257, 544, 16429, 2281, 50643, 50643, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 710, 11, 420, 538, 16885, 3319, 670, 710, 11, 597, 307, 10344, 50887, 50887, 281, 17827, 283, 295, 2031, 11, 288, 382, 3175, 502, 670, 9861, 11, 597, 291, 393, 519, 295, 382, 364, 17340, 4292, 11, 51217, 51217, 3565, 11573, 670, 710, 11, 21510, 3175, 9861, 11, 264, 2281, 13, 51433, 51433, 639, 307, 257, 3565, 24808, 2445, 11, 337, 729, 295, 291, 567, 500, 380, 458, 13, 51545, 51545, 400, 341, 307, 257, 1737, 2281, 11, 597, 307, 983, 286, 818, 309, 283, 11, 337, 48716, 294, 264, 1808, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1411479192835684, "compression_ratio": 1.7234042553191489, "no_speech_prob": 2.295825197506929e-06}, {"id": 583, "seek": 204386, "start": 2049.44, "end": 2054.3199999999997, "text": " function, E of x, y, z, with respect to z, or by marginalizing over z, which is equivalent", "tokens": [50364, 407, 2281, 5245, 11, 283, 295, 2031, 293, 288, 11, 300, 366, 767, 7642, 538, 46608, 257, 544, 16429, 2281, 50643, 50643, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 710, 11, 420, 538, 16885, 3319, 670, 710, 11, 597, 307, 10344, 50887, 50887, 281, 17827, 283, 295, 2031, 11, 288, 382, 3175, 502, 670, 9861, 11, 597, 291, 393, 519, 295, 382, 364, 17340, 4292, 11, 51217, 51217, 3565, 11573, 670, 710, 11, 21510, 3175, 9861, 11, 264, 2281, 13, 51433, 51433, 639, 307, 257, 3565, 24808, 2445, 11, 337, 729, 295, 291, 567, 500, 380, 458, 13, 51545, 51545, 400, 341, 307, 257, 1737, 2281, 11, 597, 307, 983, 286, 818, 309, 283, 11, 337, 48716, 294, 264, 1808, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1411479192835684, "compression_ratio": 1.7234042553191489, "no_speech_prob": 2.295825197506929e-06}, {"id": 584, "seek": 204386, "start": 2054.3199999999997, "end": 2060.92, "text": " to defining f of x, y as minus 1 over beta, which you can think of as an inverse temperature,", "tokens": [50364, 407, 2281, 5245, 11, 283, 295, 2031, 293, 288, 11, 300, 366, 767, 7642, 538, 46608, 257, 544, 16429, 2281, 50643, 50643, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 710, 11, 420, 538, 16885, 3319, 670, 710, 11, 597, 307, 10344, 50887, 50887, 281, 17827, 283, 295, 2031, 11, 288, 382, 3175, 502, 670, 9861, 11, 597, 291, 393, 519, 295, 382, 364, 17340, 4292, 11, 51217, 51217, 3565, 11573, 670, 710, 11, 21510, 3175, 9861, 11, 264, 2281, 13, 51433, 51433, 639, 307, 257, 3565, 24808, 2445, 11, 337, 729, 295, 291, 567, 500, 380, 458, 13, 51545, 51545, 400, 341, 307, 257, 1737, 2281, 11, 597, 307, 983, 286, 818, 309, 283, 11, 337, 48716, 294, 264, 1808, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1411479192835684, "compression_ratio": 1.7234042553191489, "no_speech_prob": 2.295825197506929e-06}, {"id": 585, "seek": 204386, "start": 2060.92, "end": 2065.24, "text": " log integral over z, exponential minus beta, the energy.", "tokens": [50364, 407, 2281, 5245, 11, 283, 295, 2031, 293, 288, 11, 300, 366, 767, 7642, 538, 46608, 257, 544, 16429, 2281, 50643, 50643, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 710, 11, 420, 538, 16885, 3319, 670, 710, 11, 597, 307, 10344, 50887, 50887, 281, 17827, 283, 295, 2031, 11, 288, 382, 3175, 502, 670, 9861, 11, 597, 291, 393, 519, 295, 382, 364, 17340, 4292, 11, 51217, 51217, 3565, 11573, 670, 710, 11, 21510, 3175, 9861, 11, 264, 2281, 13, 51433, 51433, 639, 307, 257, 3565, 24808, 2445, 11, 337, 729, 295, 291, 567, 500, 380, 458, 13, 51545, 51545, 400, 341, 307, 257, 1737, 2281, 11, 597, 307, 983, 286, 818, 309, 283, 11, 337, 48716, 294, 264, 1808, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1411479192835684, "compression_ratio": 1.7234042553191489, "no_speech_prob": 2.295825197506929e-06}, {"id": 586, "seek": 204386, "start": 2065.24, "end": 2067.48, "text": " This is a log partition function, for those of you who don't know.", "tokens": [50364, 407, 2281, 5245, 11, 283, 295, 2031, 293, 288, 11, 300, 366, 767, 7642, 538, 46608, 257, 544, 16429, 2281, 50643, 50643, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 710, 11, 420, 538, 16885, 3319, 670, 710, 11, 597, 307, 10344, 50887, 50887, 281, 17827, 283, 295, 2031, 11, 288, 382, 3175, 502, 670, 9861, 11, 597, 291, 393, 519, 295, 382, 364, 17340, 4292, 11, 51217, 51217, 3565, 11573, 670, 710, 11, 21510, 3175, 9861, 11, 264, 2281, 13, 51433, 51433, 639, 307, 257, 3565, 24808, 2445, 11, 337, 729, 295, 291, 567, 500, 380, 458, 13, 51545, 51545, 400, 341, 307, 257, 1737, 2281, 11, 597, 307, 983, 286, 818, 309, 283, 11, 337, 48716, 294, 264, 1808, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1411479192835684, "compression_ratio": 1.7234042553191489, "no_speech_prob": 2.295825197506929e-06}, {"id": 587, "seek": 204386, "start": 2067.48, "end": 2073.12, "text": " And this is a free energy, which is why I call it f, for physicists in the room.", "tokens": [50364, 407, 2281, 5245, 11, 283, 295, 2031, 293, 288, 11, 300, 366, 767, 7642, 538, 46608, 257, 544, 16429, 2281, 50643, 50643, 2445, 11, 462, 295, 2031, 11, 288, 11, 710, 11, 365, 3104, 281, 710, 11, 420, 538, 16885, 3319, 670, 710, 11, 597, 307, 10344, 50887, 50887, 281, 17827, 283, 295, 2031, 11, 288, 382, 3175, 502, 670, 9861, 11, 597, 291, 393, 519, 295, 382, 364, 17340, 4292, 11, 51217, 51217, 3565, 11573, 670, 710, 11, 21510, 3175, 9861, 11, 264, 2281, 13, 51433, 51433, 639, 307, 257, 3565, 24808, 2445, 11, 337, 729, 295, 291, 567, 500, 380, 458, 13, 51545, 51545, 400, 341, 307, 257, 1737, 2281, 11, 597, 307, 983, 286, 818, 309, 283, 11, 337, 48716, 294, 264, 1808, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1411479192835684, "compression_ratio": 1.7234042553191489, "no_speech_prob": 2.295825197506929e-06}, {"id": 588, "seek": 207312, "start": 2073.12, "end": 2075.88, "text": " So there's the conditional version and the unconditional version, which only consists", "tokens": [50364, 407, 456, 311, 264, 27708, 3037, 293, 264, 47916, 3037, 11, 597, 787, 14689, 50502, 50502, 294, 1940, 2031, 484, 13, 50676, 50676, 407, 300, 311, 437, 264, 2316, 1542, 411, 13, 50778, 50778, 509, 362, 13095, 7006, 11, 7006, 291, 643, 281, 6069, 11, 293, 512, 48994, 7006, 291, 362, 50924, 50924, 281, 17522, 670, 13, 51210, 51210, 823, 983, 307, 300, 1880, 30, 51400, 51400, 7354, 317, 9102, 366, 1880, 570, 436, 366, 364, 7115, 2290, 337, 1455, 257, 1185, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.15533243223678234, "compression_ratio": 1.6944444444444444, "no_speech_prob": 1.84478051323822e-06}, {"id": 589, "seek": 207312, "start": 2075.88, "end": 2079.3599999999997, "text": " in taking x out.", "tokens": [50364, 407, 456, 311, 264, 27708, 3037, 293, 264, 47916, 3037, 11, 597, 787, 14689, 50502, 50502, 294, 1940, 2031, 484, 13, 50676, 50676, 407, 300, 311, 437, 264, 2316, 1542, 411, 13, 50778, 50778, 509, 362, 13095, 7006, 11, 7006, 291, 643, 281, 6069, 11, 293, 512, 48994, 7006, 291, 362, 50924, 50924, 281, 17522, 670, 13, 51210, 51210, 823, 983, 307, 300, 1880, 30, 51400, 51400, 7354, 317, 9102, 366, 1880, 570, 436, 366, 364, 7115, 2290, 337, 1455, 257, 1185, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.15533243223678234, "compression_ratio": 1.6944444444444444, "no_speech_prob": 1.84478051323822e-06}, {"id": 590, "seek": 207312, "start": 2079.3599999999997, "end": 2081.4, "text": " So that's what the model looks like.", "tokens": [50364, 407, 456, 311, 264, 27708, 3037, 293, 264, 47916, 3037, 11, 597, 787, 14689, 50502, 50502, 294, 1940, 2031, 484, 13, 50676, 50676, 407, 300, 311, 437, 264, 2316, 1542, 411, 13, 50778, 50778, 509, 362, 13095, 7006, 11, 7006, 291, 643, 281, 6069, 11, 293, 512, 48994, 7006, 291, 362, 50924, 50924, 281, 17522, 670, 13, 51210, 51210, 823, 983, 307, 300, 1880, 30, 51400, 51400, 7354, 317, 9102, 366, 1880, 570, 436, 366, 364, 7115, 2290, 337, 1455, 257, 1185, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.15533243223678234, "compression_ratio": 1.6944444444444444, "no_speech_prob": 1.84478051323822e-06}, {"id": 591, "seek": 207312, "start": 2081.4, "end": 2084.3199999999997, "text": " You have observed variable, variable you need to predict, and some latent variable you have", "tokens": [50364, 407, 456, 311, 264, 27708, 3037, 293, 264, 47916, 3037, 11, 597, 787, 14689, 50502, 50502, 294, 1940, 2031, 484, 13, 50676, 50676, 407, 300, 311, 437, 264, 2316, 1542, 411, 13, 50778, 50778, 509, 362, 13095, 7006, 11, 7006, 291, 643, 281, 6069, 11, 293, 512, 48994, 7006, 291, 362, 50924, 50924, 281, 17522, 670, 13, 51210, 51210, 823, 983, 307, 300, 1880, 30, 51400, 51400, 7354, 317, 9102, 366, 1880, 570, 436, 366, 364, 7115, 2290, 337, 1455, 257, 1185, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.15533243223678234, "compression_ratio": 1.6944444444444444, "no_speech_prob": 1.84478051323822e-06}, {"id": 592, "seek": 207312, "start": 2084.3199999999997, "end": 2090.04, "text": " to minimize over.", "tokens": [50364, 407, 456, 311, 264, 27708, 3037, 293, 264, 47916, 3037, 11, 597, 787, 14689, 50502, 50502, 294, 1940, 2031, 484, 13, 50676, 50676, 407, 300, 311, 437, 264, 2316, 1542, 411, 13, 50778, 50778, 509, 362, 13095, 7006, 11, 7006, 291, 643, 281, 6069, 11, 293, 512, 48994, 7006, 291, 362, 50924, 50924, 281, 17522, 670, 13, 51210, 51210, 823, 983, 307, 300, 1880, 30, 51400, 51400, 7354, 317, 9102, 366, 1880, 570, 436, 366, 364, 7115, 2290, 337, 1455, 257, 1185, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.15533243223678234, "compression_ratio": 1.6944444444444444, "no_speech_prob": 1.84478051323822e-06}, {"id": 593, "seek": 207312, "start": 2090.04, "end": 2093.8399999999997, "text": " Now why is that interesting?", "tokens": [50364, 407, 456, 311, 264, 27708, 3037, 293, 264, 47916, 3037, 11, 597, 787, 14689, 50502, 50502, 294, 1940, 2031, 484, 13, 50676, 50676, 407, 300, 311, 437, 264, 2316, 1542, 411, 13, 50778, 50778, 509, 362, 13095, 7006, 11, 7006, 291, 643, 281, 6069, 11, 293, 512, 48994, 7006, 291, 362, 50924, 50924, 281, 17522, 670, 13, 51210, 51210, 823, 983, 307, 300, 1880, 30, 51400, 51400, 7354, 317, 9102, 366, 1880, 570, 436, 366, 364, 7115, 2290, 337, 1455, 257, 1185, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.15533243223678234, "compression_ratio": 1.6944444444444444, "no_speech_prob": 1.84478051323822e-06}, {"id": 594, "seek": 207312, "start": 2093.8399999999997, "end": 2099.9, "text": " Latent variables are interesting because they are an essential tool for making a system", "tokens": [50364, 407, 456, 311, 264, 27708, 3037, 293, 264, 47916, 3037, 11, 597, 787, 14689, 50502, 50502, 294, 1940, 2031, 484, 13, 50676, 50676, 407, 300, 311, 437, 264, 2316, 1542, 411, 13, 50778, 50778, 509, 362, 13095, 7006, 11, 7006, 291, 643, 281, 6069, 11, 293, 512, 48994, 7006, 291, 362, 50924, 50924, 281, 17522, 670, 13, 51210, 51210, 823, 983, 307, 300, 1880, 30, 51400, 51400, 7354, 317, 9102, 366, 1880, 570, 436, 366, 364, 7115, 2290, 337, 1455, 257, 1185, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.15533243223678234, "compression_ratio": 1.6944444444444444, "no_speech_prob": 1.84478051323822e-06}, {"id": 595, "seek": 209990, "start": 2099.9, "end": 2103.48, "text": " be able to predict multiple outputs instead of just one.", "tokens": [50364, 312, 1075, 281, 6069, 3866, 23930, 2602, 295, 445, 472, 13, 50543, 50543, 407, 498, 286, 1322, 257, 1185, 484, 295, 15957, 3142, 6828, 11, 510, 286, 362, 257, 18161, 2533, 365, 257, 50823, 50823, 1326, 7914, 13, 50873, 50873, 467, 14725, 512, 10290, 295, 264, 13095, 9102, 13, 51048, 51048, 400, 550, 286, 3154, 341, 281, 1071, 18161, 2533, 11, 286, 818, 309, 257, 979, 19866, 11, 1214, 365, 257, 48994, 51229, 51229, 7006, 13, 51279, 51279, 3146, 22984, 341, 48994, 7006, 670, 257, 992, 11, 286, 393, 652, 264, 5598, 10559, 670, 257, 992, 11, 1310, 51523, 51523, 512, 6179, 47138, 498, 341, 3209, 307, 6179, 13, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12467230737736795, "compression_ratio": 1.7452471482889733, "no_speech_prob": 3.0415237688430352e-06}, {"id": 596, "seek": 209990, "start": 2103.48, "end": 2109.08, "text": " So if I build a system out of deterministic functions, here I have a neural net with a", "tokens": [50364, 312, 1075, 281, 6069, 3866, 23930, 2602, 295, 445, 472, 13, 50543, 50543, 407, 498, 286, 1322, 257, 1185, 484, 295, 15957, 3142, 6828, 11, 510, 286, 362, 257, 18161, 2533, 365, 257, 50823, 50823, 1326, 7914, 13, 50873, 50873, 467, 14725, 512, 10290, 295, 264, 13095, 9102, 13, 51048, 51048, 400, 550, 286, 3154, 341, 281, 1071, 18161, 2533, 11, 286, 818, 309, 257, 979, 19866, 11, 1214, 365, 257, 48994, 51229, 51229, 7006, 13, 51279, 51279, 3146, 22984, 341, 48994, 7006, 670, 257, 992, 11, 286, 393, 652, 264, 5598, 10559, 670, 257, 992, 11, 1310, 51523, 51523, 512, 6179, 47138, 498, 341, 3209, 307, 6179, 13, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12467230737736795, "compression_ratio": 1.7452471482889733, "no_speech_prob": 3.0415237688430352e-06}, {"id": 597, "seek": 209990, "start": 2109.08, "end": 2110.08, "text": " few layers.", "tokens": [50364, 312, 1075, 281, 6069, 3866, 23930, 2602, 295, 445, 472, 13, 50543, 50543, 407, 498, 286, 1322, 257, 1185, 484, 295, 15957, 3142, 6828, 11, 510, 286, 362, 257, 18161, 2533, 365, 257, 50823, 50823, 1326, 7914, 13, 50873, 50873, 467, 14725, 512, 10290, 295, 264, 13095, 9102, 13, 51048, 51048, 400, 550, 286, 3154, 341, 281, 1071, 18161, 2533, 11, 286, 818, 309, 257, 979, 19866, 11, 1214, 365, 257, 48994, 51229, 51229, 7006, 13, 51279, 51279, 3146, 22984, 341, 48994, 7006, 670, 257, 992, 11, 286, 393, 652, 264, 5598, 10559, 670, 257, 992, 11, 1310, 51523, 51523, 512, 6179, 47138, 498, 341, 3209, 307, 6179, 13, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12467230737736795, "compression_ratio": 1.7452471482889733, "no_speech_prob": 3.0415237688430352e-06}, {"id": 598, "seek": 209990, "start": 2110.08, "end": 2113.58, "text": " It produces some representation of the observed variables.", "tokens": [50364, 312, 1075, 281, 6069, 3866, 23930, 2602, 295, 445, 472, 13, 50543, 50543, 407, 498, 286, 1322, 257, 1185, 484, 295, 15957, 3142, 6828, 11, 510, 286, 362, 257, 18161, 2533, 365, 257, 50823, 50823, 1326, 7914, 13, 50873, 50873, 467, 14725, 512, 10290, 295, 264, 13095, 9102, 13, 51048, 51048, 400, 550, 286, 3154, 341, 281, 1071, 18161, 2533, 11, 286, 818, 309, 257, 979, 19866, 11, 1214, 365, 257, 48994, 51229, 51229, 7006, 13, 51279, 51279, 3146, 22984, 341, 48994, 7006, 670, 257, 992, 11, 286, 393, 652, 264, 5598, 10559, 670, 257, 992, 11, 1310, 51523, 51523, 512, 6179, 47138, 498, 341, 3209, 307, 6179, 13, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12467230737736795, "compression_ratio": 1.7452471482889733, "no_speech_prob": 3.0415237688430352e-06}, {"id": 599, "seek": 209990, "start": 2113.58, "end": 2117.2000000000003, "text": " And then I feed this to another neural net, I call it a decoder, together with a latent", "tokens": [50364, 312, 1075, 281, 6069, 3866, 23930, 2602, 295, 445, 472, 13, 50543, 50543, 407, 498, 286, 1322, 257, 1185, 484, 295, 15957, 3142, 6828, 11, 510, 286, 362, 257, 18161, 2533, 365, 257, 50823, 50823, 1326, 7914, 13, 50873, 50873, 467, 14725, 512, 10290, 295, 264, 13095, 9102, 13, 51048, 51048, 400, 550, 286, 3154, 341, 281, 1071, 18161, 2533, 11, 286, 818, 309, 257, 979, 19866, 11, 1214, 365, 257, 48994, 51229, 51229, 7006, 13, 51279, 51279, 3146, 22984, 341, 48994, 7006, 670, 257, 992, 11, 286, 393, 652, 264, 5598, 10559, 670, 257, 992, 11, 1310, 51523, 51523, 512, 6179, 47138, 498, 341, 3209, 307, 6179, 13, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12467230737736795, "compression_ratio": 1.7452471482889733, "no_speech_prob": 3.0415237688430352e-06}, {"id": 600, "seek": 209990, "start": 2117.2000000000003, "end": 2118.2000000000003, "text": " variable.", "tokens": [50364, 312, 1075, 281, 6069, 3866, 23930, 2602, 295, 445, 472, 13, 50543, 50543, 407, 498, 286, 1322, 257, 1185, 484, 295, 15957, 3142, 6828, 11, 510, 286, 362, 257, 18161, 2533, 365, 257, 50823, 50823, 1326, 7914, 13, 50873, 50873, 467, 14725, 512, 10290, 295, 264, 13095, 9102, 13, 51048, 51048, 400, 550, 286, 3154, 341, 281, 1071, 18161, 2533, 11, 286, 818, 309, 257, 979, 19866, 11, 1214, 365, 257, 48994, 51229, 51229, 7006, 13, 51279, 51279, 3146, 22984, 341, 48994, 7006, 670, 257, 992, 11, 286, 393, 652, 264, 5598, 10559, 670, 257, 992, 11, 1310, 51523, 51523, 512, 6179, 47138, 498, 341, 3209, 307, 6179, 13, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12467230737736795, "compression_ratio": 1.7452471482889733, "no_speech_prob": 3.0415237688430352e-06}, {"id": 601, "seek": 209990, "start": 2118.2000000000003, "end": 2123.08, "text": " By varying this latent variable over a set, I can make the output vary over a set, maybe", "tokens": [50364, 312, 1075, 281, 6069, 3866, 23930, 2602, 295, 445, 472, 13, 50543, 50543, 407, 498, 286, 1322, 257, 1185, 484, 295, 15957, 3142, 6828, 11, 510, 286, 362, 257, 18161, 2533, 365, 257, 50823, 50823, 1326, 7914, 13, 50873, 50873, 467, 14725, 512, 10290, 295, 264, 13095, 9102, 13, 51048, 51048, 400, 550, 286, 3154, 341, 281, 1071, 18161, 2533, 11, 286, 818, 309, 257, 979, 19866, 11, 1214, 365, 257, 48994, 51229, 51229, 7006, 13, 51279, 51279, 3146, 22984, 341, 48994, 7006, 670, 257, 992, 11, 286, 393, 652, 264, 5598, 10559, 670, 257, 992, 11, 1310, 51523, 51523, 512, 6179, 47138, 498, 341, 3209, 307, 6179, 13, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12467230737736795, "compression_ratio": 1.7452471482889733, "no_speech_prob": 3.0415237688430352e-06}, {"id": 602, "seek": 209990, "start": 2123.08, "end": 2127.84, "text": " some complicated manifold if this network is complicated.", "tokens": [50364, 312, 1075, 281, 6069, 3866, 23930, 2602, 295, 445, 472, 13, 50543, 50543, 407, 498, 286, 1322, 257, 1185, 484, 295, 15957, 3142, 6828, 11, 510, 286, 362, 257, 18161, 2533, 365, 257, 50823, 50823, 1326, 7914, 13, 50873, 50873, 467, 14725, 512, 10290, 295, 264, 13095, 9102, 13, 51048, 51048, 400, 550, 286, 3154, 341, 281, 1071, 18161, 2533, 11, 286, 818, 309, 257, 979, 19866, 11, 1214, 365, 257, 48994, 51229, 51229, 7006, 13, 51279, 51279, 3146, 22984, 341, 48994, 7006, 670, 257, 992, 11, 286, 393, 652, 264, 5598, 10559, 670, 257, 992, 11, 1310, 51523, 51523, 512, 6179, 47138, 498, 341, 3209, 307, 6179, 13, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12467230737736795, "compression_ratio": 1.7452471482889733, "no_speech_prob": 3.0415237688430352e-06}, {"id": 603, "seek": 212784, "start": 2127.84, "end": 2133.52, "text": " And basically that allows me to solve this problem of not predicting the average.", "tokens": [50364, 400, 1936, 300, 4045, 385, 281, 5039, 341, 1154, 295, 406, 32884, 264, 4274, 13, 50648, 50648, 286, 393, 445, 6069, 264, 3539, 551, 286, 478, 22107, 538, 5006, 264, 48994, 7006, 300, 486, 652, 50916, 50916, 452, 2316, 6069, 264, 1151, 551, 13, 51020, 51020, 407, 510, 307, 577, 291, 3847, 364, 2281, 12, 6032, 2316, 456, 13, 51156, 51156, 509, 855, 309, 364, 2031, 293, 257, 288, 13, 51235, 51235, 509, 915, 257, 710, 300, 4464, 5660, 264, 31565, 6713, 13, 51623, 51623, 400, 498, 300, 311, 406, 2176, 11, 550, 365, 472, 1823, 295, 342, 8997, 2750, 16235, 23475, 11, 291, 5623, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.09110280133168631, "compression_ratio": 1.6401515151515151, "no_speech_prob": 4.7107573664106894e-06}, {"id": 604, "seek": 212784, "start": 2133.52, "end": 2138.88, "text": " I can just predict the actual thing I'm observing by finding the latent variable that will make", "tokens": [50364, 400, 1936, 300, 4045, 385, 281, 5039, 341, 1154, 295, 406, 32884, 264, 4274, 13, 50648, 50648, 286, 393, 445, 6069, 264, 3539, 551, 286, 478, 22107, 538, 5006, 264, 48994, 7006, 300, 486, 652, 50916, 50916, 452, 2316, 6069, 264, 1151, 551, 13, 51020, 51020, 407, 510, 307, 577, 291, 3847, 364, 2281, 12, 6032, 2316, 456, 13, 51156, 51156, 509, 855, 309, 364, 2031, 293, 257, 288, 13, 51235, 51235, 509, 915, 257, 710, 300, 4464, 5660, 264, 31565, 6713, 13, 51623, 51623, 400, 498, 300, 311, 406, 2176, 11, 550, 365, 472, 1823, 295, 342, 8997, 2750, 16235, 23475, 11, 291, 5623, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.09110280133168631, "compression_ratio": 1.6401515151515151, "no_speech_prob": 4.7107573664106894e-06}, {"id": 605, "seek": 212784, "start": 2138.88, "end": 2140.96, "text": " my model predict the best thing.", "tokens": [50364, 400, 1936, 300, 4045, 385, 281, 5039, 341, 1154, 295, 406, 32884, 264, 4274, 13, 50648, 50648, 286, 393, 445, 6069, 264, 3539, 551, 286, 478, 22107, 538, 5006, 264, 48994, 7006, 300, 486, 652, 50916, 50916, 452, 2316, 6069, 264, 1151, 551, 13, 51020, 51020, 407, 510, 307, 577, 291, 3847, 364, 2281, 12, 6032, 2316, 456, 13, 51156, 51156, 509, 855, 309, 364, 2031, 293, 257, 288, 13, 51235, 51235, 509, 915, 257, 710, 300, 4464, 5660, 264, 31565, 6713, 13, 51623, 51623, 400, 498, 300, 311, 406, 2176, 11, 550, 365, 472, 1823, 295, 342, 8997, 2750, 16235, 23475, 11, 291, 5623, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.09110280133168631, "compression_ratio": 1.6401515151515151, "no_speech_prob": 4.7107573664106894e-06}, {"id": 606, "seek": 212784, "start": 2140.96, "end": 2143.6800000000003, "text": " So here is how you train an energy-based model there.", "tokens": [50364, 400, 1936, 300, 4045, 385, 281, 5039, 341, 1154, 295, 406, 32884, 264, 4274, 13, 50648, 50648, 286, 393, 445, 6069, 264, 3539, 551, 286, 478, 22107, 538, 5006, 264, 48994, 7006, 300, 486, 652, 50916, 50916, 452, 2316, 6069, 264, 1151, 551, 13, 51020, 51020, 407, 510, 307, 577, 291, 3847, 364, 2281, 12, 6032, 2316, 456, 13, 51156, 51156, 509, 855, 309, 364, 2031, 293, 257, 288, 13, 51235, 51235, 509, 915, 257, 710, 300, 4464, 5660, 264, 31565, 6713, 13, 51623, 51623, 400, 498, 300, 311, 406, 2176, 11, 550, 365, 472, 1823, 295, 342, 8997, 2750, 16235, 23475, 11, 291, 5623, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.09110280133168631, "compression_ratio": 1.6401515151515151, "no_speech_prob": 4.7107573664106894e-06}, {"id": 607, "seek": 212784, "start": 2143.6800000000003, "end": 2145.26, "text": " You show it an x and a y.", "tokens": [50364, 400, 1936, 300, 4045, 385, 281, 5039, 341, 1154, 295, 406, 32884, 264, 4274, 13, 50648, 50648, 286, 393, 445, 6069, 264, 3539, 551, 286, 478, 22107, 538, 5006, 264, 48994, 7006, 300, 486, 652, 50916, 50916, 452, 2316, 6069, 264, 1151, 551, 13, 51020, 51020, 407, 510, 307, 577, 291, 3847, 364, 2281, 12, 6032, 2316, 456, 13, 51156, 51156, 509, 855, 309, 364, 2031, 293, 257, 288, 13, 51235, 51235, 509, 915, 257, 710, 300, 4464, 5660, 264, 31565, 6713, 13, 51623, 51623, 400, 498, 300, 311, 406, 2176, 11, 550, 365, 472, 1823, 295, 342, 8997, 2750, 16235, 23475, 11, 291, 5623, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.09110280133168631, "compression_ratio": 1.6401515151515151, "no_speech_prob": 4.7107573664106894e-06}, {"id": 608, "seek": 212784, "start": 2145.26, "end": 2153.02, "text": " You find a z that minimizes the reconstruction error.", "tokens": [50364, 400, 1936, 300, 4045, 385, 281, 5039, 341, 1154, 295, 406, 32884, 264, 4274, 13, 50648, 50648, 286, 393, 445, 6069, 264, 3539, 551, 286, 478, 22107, 538, 5006, 264, 48994, 7006, 300, 486, 652, 50916, 50916, 452, 2316, 6069, 264, 1151, 551, 13, 51020, 51020, 407, 510, 307, 577, 291, 3847, 364, 2281, 12, 6032, 2316, 456, 13, 51156, 51156, 509, 855, 309, 364, 2031, 293, 257, 288, 13, 51235, 51235, 509, 915, 257, 710, 300, 4464, 5660, 264, 31565, 6713, 13, 51623, 51623, 400, 498, 300, 311, 406, 2176, 11, 550, 365, 472, 1823, 295, 342, 8997, 2750, 16235, 23475, 11, 291, 5623, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.09110280133168631, "compression_ratio": 1.6401515151515151, "no_speech_prob": 4.7107573664106894e-06}, {"id": 609, "seek": 212784, "start": 2153.02, "end": 2156.2000000000003, "text": " And if that's not perfect, then with one step of stochastic gradient descent, you update", "tokens": [50364, 400, 1936, 300, 4045, 385, 281, 5039, 341, 1154, 295, 406, 32884, 264, 4274, 13, 50648, 50648, 286, 393, 445, 6069, 264, 3539, 551, 286, 478, 22107, 538, 5006, 264, 48994, 7006, 300, 486, 652, 50916, 50916, 452, 2316, 6069, 264, 1151, 551, 13, 51020, 51020, 407, 510, 307, 577, 291, 3847, 364, 2281, 12, 6032, 2316, 456, 13, 51156, 51156, 509, 855, 309, 364, 2031, 293, 257, 288, 13, 51235, 51235, 509, 915, 257, 710, 300, 4464, 5660, 264, 31565, 6713, 13, 51623, 51623, 400, 498, 300, 311, 406, 2176, 11, 550, 365, 472, 1823, 295, 342, 8997, 2750, 16235, 23475, 11, 291, 5623, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.09110280133168631, "compression_ratio": 1.6401515151515151, "no_speech_prob": 4.7107573664106894e-06}, {"id": 610, "seek": 215620, "start": 2156.2, "end": 2164.7999999999997, "text": " the parameters of whatever functions you're using to make this small.", "tokens": [50364, 264, 9834, 295, 2035, 6828, 291, 434, 1228, 281, 652, 341, 1359, 13, 50794, 50794, 639, 1985, 869, 11, 3993, 456, 311, 257, 4036, 1154, 365, 341, 11, 597, 307, 300, 3811, 300, 51120, 51120, 710, 575, 264, 912, 10139, 382, 288, 13, 51220, 51220, 407, 498, 710, 575, 264, 912, 10139, 382, 288, 11, 293, 264, 979, 19866, 307, 406, 257, 40520, 473, 2445, 11, 550, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1614878882824535, "compression_ratio": 1.5862068965517242, "no_speech_prob": 1.1842880667245481e-05}, {"id": 611, "seek": 215620, "start": 2164.7999999999997, "end": 2171.3199999999997, "text": " This works great, except there's a slight problem with this, which is that imagine that", "tokens": [50364, 264, 9834, 295, 2035, 6828, 291, 434, 1228, 281, 652, 341, 1359, 13, 50794, 50794, 639, 1985, 869, 11, 3993, 456, 311, 257, 4036, 1154, 365, 341, 11, 597, 307, 300, 3811, 300, 51120, 51120, 710, 575, 264, 912, 10139, 382, 288, 13, 51220, 51220, 407, 498, 710, 575, 264, 912, 10139, 382, 288, 11, 293, 264, 979, 19866, 307, 406, 257, 40520, 473, 2445, 11, 550, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1614878882824535, "compression_ratio": 1.5862068965517242, "no_speech_prob": 1.1842880667245481e-05}, {"id": 612, "seek": 215620, "start": 2171.3199999999997, "end": 2173.3199999999997, "text": " z has the same dimension as y.", "tokens": [50364, 264, 9834, 295, 2035, 6828, 291, 434, 1228, 281, 652, 341, 1359, 13, 50794, 50794, 639, 1985, 869, 11, 3993, 456, 311, 257, 4036, 1154, 365, 341, 11, 597, 307, 300, 3811, 300, 51120, 51120, 710, 575, 264, 912, 10139, 382, 288, 13, 51220, 51220, 407, 498, 710, 575, 264, 912, 10139, 382, 288, 11, 293, 264, 979, 19866, 307, 406, 257, 40520, 473, 2445, 11, 550, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1614878882824535, "compression_ratio": 1.5862068965517242, "no_speech_prob": 1.1842880667245481e-05}, {"id": 613, "seek": 215620, "start": 2173.3199999999997, "end": 2184.2799999999997, "text": " So if z has the same dimension as y, and the decoder is not a degenerate function, then", "tokens": [50364, 264, 9834, 295, 2035, 6828, 291, 434, 1228, 281, 652, 341, 1359, 13, 50794, 50794, 639, 1985, 869, 11, 3993, 456, 311, 257, 4036, 1154, 365, 341, 11, 597, 307, 300, 3811, 300, 51120, 51120, 710, 575, 264, 912, 10139, 382, 288, 13, 51220, 51220, 407, 498, 710, 575, 264, 912, 10139, 382, 288, 11, 293, 264, 979, 19866, 307, 406, 257, 40520, 473, 2445, 11, 550, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1614878882824535, "compression_ratio": 1.5862068965517242, "no_speech_prob": 1.1842880667245481e-05}, {"id": 614, "seek": 218428, "start": 2184.28, "end": 2189.84, "text": " for any y you show the machine, there's always going to be a z that's going to reconstruct", "tokens": [50364, 337, 604, 288, 291, 855, 264, 3479, 11, 456, 311, 1009, 516, 281, 312, 257, 710, 300, 311, 516, 281, 31499, 50642, 50642, 309, 6239, 13, 50756, 50756, 3013, 1355, 428, 2281, 3753, 307, 516, 281, 312, 2584, 4962, 13, 50898, 50898, 467, 311, 406, 257, 665, 2316, 295, 33621, 295, 288, 322, 2031, 11, 570, 428, 2281, 2445, 1177, 380, 980, 51202, 51202, 291, 597, 288, 307, 665, 13, 51354, 51354, 407, 797, 11, 437, 321, 434, 516, 281, 362, 281, 360, 307, 4948, 264, 1589, 6042, 295, 710, 13, 51569, 51569, 1743, 321, 630, 365, 4771, 1751, 11, 1936, 321, 434, 516, 281, 362, 281, 4948, 264, 5523, 295, 288, 1901, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.11842837700477013, "compression_ratio": 1.725868725868726, "no_speech_prob": 1.3418325579550583e-05}, {"id": 615, "seek": 218428, "start": 2189.84, "end": 2192.1200000000003, "text": " it perfectly.", "tokens": [50364, 337, 604, 288, 291, 855, 264, 3479, 11, 456, 311, 1009, 516, 281, 312, 257, 710, 300, 311, 516, 281, 31499, 50642, 50642, 309, 6239, 13, 50756, 50756, 3013, 1355, 428, 2281, 3753, 307, 516, 281, 312, 2584, 4962, 13, 50898, 50898, 467, 311, 406, 257, 665, 2316, 295, 33621, 295, 288, 322, 2031, 11, 570, 428, 2281, 2445, 1177, 380, 980, 51202, 51202, 291, 597, 288, 307, 665, 13, 51354, 51354, 407, 797, 11, 437, 321, 434, 516, 281, 362, 281, 360, 307, 4948, 264, 1589, 6042, 295, 710, 13, 51569, 51569, 1743, 321, 630, 365, 4771, 1751, 11, 1936, 321, 434, 516, 281, 362, 281, 4948, 264, 5523, 295, 288, 1901, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.11842837700477013, "compression_ratio": 1.725868725868726, "no_speech_prob": 1.3418325579550583e-05}, {"id": 616, "seek": 218428, "start": 2192.1200000000003, "end": 2194.96, "text": " Which means your energy surface is going to be completely flat.", "tokens": [50364, 337, 604, 288, 291, 855, 264, 3479, 11, 456, 311, 1009, 516, 281, 312, 257, 710, 300, 311, 516, 281, 31499, 50642, 50642, 309, 6239, 13, 50756, 50756, 3013, 1355, 428, 2281, 3753, 307, 516, 281, 312, 2584, 4962, 13, 50898, 50898, 467, 311, 406, 257, 665, 2316, 295, 33621, 295, 288, 322, 2031, 11, 570, 428, 2281, 2445, 1177, 380, 980, 51202, 51202, 291, 597, 288, 307, 665, 13, 51354, 51354, 407, 797, 11, 437, 321, 434, 516, 281, 362, 281, 360, 307, 4948, 264, 1589, 6042, 295, 710, 13, 51569, 51569, 1743, 321, 630, 365, 4771, 1751, 11, 1936, 321, 434, 516, 281, 362, 281, 4948, 264, 5523, 295, 288, 1901, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.11842837700477013, "compression_ratio": 1.725868725868726, "no_speech_prob": 1.3418325579550583e-05}, {"id": 617, "seek": 218428, "start": 2194.96, "end": 2201.0400000000004, "text": " It's not a good model of dependency of y on x, because your energy function doesn't tell", "tokens": [50364, 337, 604, 288, 291, 855, 264, 3479, 11, 456, 311, 1009, 516, 281, 312, 257, 710, 300, 311, 516, 281, 31499, 50642, 50642, 309, 6239, 13, 50756, 50756, 3013, 1355, 428, 2281, 3753, 307, 516, 281, 312, 2584, 4962, 13, 50898, 50898, 467, 311, 406, 257, 665, 2316, 295, 33621, 295, 288, 322, 2031, 11, 570, 428, 2281, 2445, 1177, 380, 980, 51202, 51202, 291, 597, 288, 307, 665, 13, 51354, 51354, 407, 797, 11, 437, 321, 434, 516, 281, 362, 281, 360, 307, 4948, 264, 1589, 6042, 295, 710, 13, 51569, 51569, 1743, 321, 630, 365, 4771, 1751, 11, 1936, 321, 434, 516, 281, 362, 281, 4948, 264, 5523, 295, 288, 1901, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.11842837700477013, "compression_ratio": 1.725868725868726, "no_speech_prob": 1.3418325579550583e-05}, {"id": 618, "seek": 218428, "start": 2201.0400000000004, "end": 2204.0800000000004, "text": " you which y is good.", "tokens": [50364, 337, 604, 288, 291, 855, 264, 3479, 11, 456, 311, 1009, 516, 281, 312, 257, 710, 300, 311, 516, 281, 31499, 50642, 50642, 309, 6239, 13, 50756, 50756, 3013, 1355, 428, 2281, 3753, 307, 516, 281, 312, 2584, 4962, 13, 50898, 50898, 467, 311, 406, 257, 665, 2316, 295, 33621, 295, 288, 322, 2031, 11, 570, 428, 2281, 2445, 1177, 380, 980, 51202, 51202, 291, 597, 288, 307, 665, 13, 51354, 51354, 407, 797, 11, 437, 321, 434, 516, 281, 362, 281, 360, 307, 4948, 264, 1589, 6042, 295, 710, 13, 51569, 51569, 1743, 321, 630, 365, 4771, 1751, 11, 1936, 321, 434, 516, 281, 362, 281, 4948, 264, 5523, 295, 288, 1901, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.11842837700477013, "compression_ratio": 1.725868725868726, "no_speech_prob": 1.3418325579550583e-05}, {"id": 619, "seek": 218428, "start": 2204.0800000000004, "end": 2208.38, "text": " So again, what we're going to have to do is limit the information capacity of z.", "tokens": [50364, 337, 604, 288, 291, 855, 264, 3479, 11, 456, 311, 1009, 516, 281, 312, 257, 710, 300, 311, 516, 281, 31499, 50642, 50642, 309, 6239, 13, 50756, 50756, 3013, 1355, 428, 2281, 3753, 307, 516, 281, 312, 2584, 4962, 13, 50898, 50898, 467, 311, 406, 257, 665, 2316, 295, 33621, 295, 288, 322, 2031, 11, 570, 428, 2281, 2445, 1177, 380, 980, 51202, 51202, 291, 597, 288, 307, 665, 13, 51354, 51354, 407, 797, 11, 437, 321, 434, 516, 281, 362, 281, 360, 307, 4948, 264, 1589, 6042, 295, 710, 13, 51569, 51569, 1743, 321, 630, 365, 4771, 1751, 11, 1936, 321, 434, 516, 281, 362, 281, 4948, 264, 5523, 295, 288, 1901, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.11842837700477013, "compression_ratio": 1.725868725868726, "no_speech_prob": 1.3418325579550583e-05}, {"id": 620, "seek": 218428, "start": 2208.38, "end": 2212.6400000000003, "text": " Like we did with chemists, basically we're going to have to limit the volume of y space", "tokens": [50364, 337, 604, 288, 291, 855, 264, 3479, 11, 456, 311, 1009, 516, 281, 312, 257, 710, 300, 311, 516, 281, 31499, 50642, 50642, 309, 6239, 13, 50756, 50756, 3013, 1355, 428, 2281, 3753, 307, 516, 281, 312, 2584, 4962, 13, 50898, 50898, 467, 311, 406, 257, 665, 2316, 295, 33621, 295, 288, 322, 2031, 11, 570, 428, 2281, 2445, 1177, 380, 980, 51202, 51202, 291, 597, 288, 307, 665, 13, 51354, 51354, 407, 797, 11, 437, 321, 434, 516, 281, 362, 281, 360, 307, 4948, 264, 1589, 6042, 295, 710, 13, 51569, 51569, 1743, 321, 630, 365, 4771, 1751, 11, 1936, 321, 434, 516, 281, 362, 281, 4948, 264, 5523, 295, 288, 1901, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.11842837700477013, "compression_ratio": 1.725868725868726, "no_speech_prob": 1.3418325579550583e-05}, {"id": 621, "seek": 221264, "start": 2212.64, "end": 2215.6, "text": " that can take low energy.", "tokens": [50364, 300, 393, 747, 2295, 2281, 13, 50512, 50512, 400, 300, 5523, 486, 362, 281, 312, 800, 694, 33144, 365, 264, 5523, 295, 527, 1412, 47138, 11, 4476, 13, 50920, 50920, 1033, 11, 457, 718, 311, 722, 365, 8712, 488, 12240, 3584, 13, 51104, 51104, 407, 8712, 488, 12240, 3584, 307, 264, 3480, 1558, 13, 51310, 51310, 1407, 4813, 264, 1186, 300, 3866, 288, 311, 366, 18218, 365, 2031, 11, 291, 3154, 1293, 2031, 293, 288, 281, 18161, 36170, 13, 51638, 51638, 400, 729, 18161, 36170, 486, 362, 33270, 2676, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.16387079117145945, "compression_ratio": 1.6759259259259258, "no_speech_prob": 9.514342309557833e-06}, {"id": 622, "seek": 221264, "start": 2215.6, "end": 2223.7599999999998, "text": " And that volume will have to be commensurate with the volume of our data manifold, essentially.", "tokens": [50364, 300, 393, 747, 2295, 2281, 13, 50512, 50512, 400, 300, 5523, 486, 362, 281, 312, 800, 694, 33144, 365, 264, 5523, 295, 527, 1412, 47138, 11, 4476, 13, 50920, 50920, 1033, 11, 457, 718, 311, 722, 365, 8712, 488, 12240, 3584, 13, 51104, 51104, 407, 8712, 488, 12240, 3584, 307, 264, 3480, 1558, 13, 51310, 51310, 1407, 4813, 264, 1186, 300, 3866, 288, 311, 366, 18218, 365, 2031, 11, 291, 3154, 1293, 2031, 293, 288, 281, 18161, 36170, 13, 51638, 51638, 400, 729, 18161, 36170, 486, 362, 33270, 2676, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.16387079117145945, "compression_ratio": 1.6759259259259258, "no_speech_prob": 9.514342309557833e-06}, {"id": 623, "seek": 221264, "start": 2223.7599999999998, "end": 2227.44, "text": " Okay, but let's start with contrastive embedding.", "tokens": [50364, 300, 393, 747, 2295, 2281, 13, 50512, 50512, 400, 300, 5523, 486, 362, 281, 312, 800, 694, 33144, 365, 264, 5523, 295, 527, 1412, 47138, 11, 4476, 13, 50920, 50920, 1033, 11, 457, 718, 311, 722, 365, 8712, 488, 12240, 3584, 13, 51104, 51104, 407, 8712, 488, 12240, 3584, 307, 264, 3480, 1558, 13, 51310, 51310, 1407, 4813, 264, 1186, 300, 3866, 288, 311, 366, 18218, 365, 2031, 11, 291, 3154, 1293, 2031, 293, 288, 281, 18161, 36170, 13, 51638, 51638, 400, 729, 18161, 36170, 486, 362, 33270, 2676, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.16387079117145945, "compression_ratio": 1.6759259259259258, "no_speech_prob": 9.514342309557833e-06}, {"id": 624, "seek": 221264, "start": 2227.44, "end": 2231.56, "text": " So contrastive embedding is the following idea.", "tokens": [50364, 300, 393, 747, 2295, 2281, 13, 50512, 50512, 400, 300, 5523, 486, 362, 281, 312, 800, 694, 33144, 365, 264, 5523, 295, 527, 1412, 47138, 11, 4476, 13, 50920, 50920, 1033, 11, 457, 718, 311, 722, 365, 8712, 488, 12240, 3584, 13, 51104, 51104, 407, 8712, 488, 12240, 3584, 307, 264, 3480, 1558, 13, 51310, 51310, 1407, 4813, 264, 1186, 300, 3866, 288, 311, 366, 18218, 365, 2031, 11, 291, 3154, 1293, 2031, 293, 288, 281, 18161, 36170, 13, 51638, 51638, 400, 729, 18161, 36170, 486, 362, 33270, 2676, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.16387079117145945, "compression_ratio": 1.6759259259259258, "no_speech_prob": 9.514342309557833e-06}, {"id": 625, "seek": 221264, "start": 2231.56, "end": 2238.12, "text": " To handle the fact that multiple y's are compatible with x, you feed both x and y to neural nets.", "tokens": [50364, 300, 393, 747, 2295, 2281, 13, 50512, 50512, 400, 300, 5523, 486, 362, 281, 312, 800, 694, 33144, 365, 264, 5523, 295, 527, 1412, 47138, 11, 4476, 13, 50920, 50920, 1033, 11, 457, 718, 311, 722, 365, 8712, 488, 12240, 3584, 13, 51104, 51104, 407, 8712, 488, 12240, 3584, 307, 264, 3480, 1558, 13, 51310, 51310, 1407, 4813, 264, 1186, 300, 3866, 288, 311, 366, 18218, 365, 2031, 11, 291, 3154, 1293, 2031, 293, 288, 281, 18161, 36170, 13, 51638, 51638, 400, 729, 18161, 36170, 486, 362, 33270, 2676, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.16387079117145945, "compression_ratio": 1.6759259259259258, "no_speech_prob": 9.514342309557833e-06}, {"id": 626, "seek": 221264, "start": 2238.12, "end": 2240.8799999999997, "text": " And those neural nets will have invariances.", "tokens": [50364, 300, 393, 747, 2295, 2281, 13, 50512, 50512, 400, 300, 5523, 486, 362, 281, 312, 800, 694, 33144, 365, 264, 5523, 295, 527, 1412, 47138, 11, 4476, 13, 50920, 50920, 1033, 11, 457, 718, 311, 722, 365, 8712, 488, 12240, 3584, 13, 51104, 51104, 407, 8712, 488, 12240, 3584, 307, 264, 3480, 1558, 13, 51310, 51310, 1407, 4813, 264, 1186, 300, 3866, 288, 311, 366, 18218, 365, 2031, 11, 291, 3154, 1293, 2031, 293, 288, 281, 18161, 36170, 13, 51638, 51638, 400, 729, 18161, 36170, 486, 362, 33270, 2676, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.16387079117145945, "compression_ratio": 1.6759259259259258, "no_speech_prob": 9.514342309557833e-06}, {"id": 627, "seek": 224088, "start": 2240.88, "end": 2246.6400000000003, "text": " And so you're going to be able to modify y for a given x without changing the output,", "tokens": [50364, 400, 370, 291, 434, 516, 281, 312, 1075, 281, 16927, 288, 337, 257, 2212, 2031, 1553, 4473, 264, 5598, 11, 50652, 50652, 570, 295, 264, 33270, 2676, 3094, 666, 264, 1185, 13, 50828, 50828, 400, 300, 311, 257, 636, 295, 13175, 264, 1186, 300, 456, 366, 3866, 288, 311, 300, 366, 18218, 51073, 51073, 365, 364, 2031, 13, 51170, 51170, 583, 586, 264, 636, 291, 643, 281, 3847, 341, 307, 300, 291, 643, 281, 980, 309, 11, 1392, 11, 510, 366, 732, 51392, 51392, 5267, 11, 436, 434, 767, 264, 912, 3410, 671, 13, 51544, 51544, 407, 2035, 10290, 291, 8947, 490, 341, 3256, 820, 312, 2531, 281, 264, 10290, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11276872534500926, "compression_ratio": 1.7174721189591078, "no_speech_prob": 6.577843123523053e-07}, {"id": 628, "seek": 224088, "start": 2246.6400000000003, "end": 2250.1600000000003, "text": " because of the invariances built into the system.", "tokens": [50364, 400, 370, 291, 434, 516, 281, 312, 1075, 281, 16927, 288, 337, 257, 2212, 2031, 1553, 4473, 264, 5598, 11, 50652, 50652, 570, 295, 264, 33270, 2676, 3094, 666, 264, 1185, 13, 50828, 50828, 400, 300, 311, 257, 636, 295, 13175, 264, 1186, 300, 456, 366, 3866, 288, 311, 300, 366, 18218, 51073, 51073, 365, 364, 2031, 13, 51170, 51170, 583, 586, 264, 636, 291, 643, 281, 3847, 341, 307, 300, 291, 643, 281, 980, 309, 11, 1392, 11, 510, 366, 732, 51392, 51392, 5267, 11, 436, 434, 767, 264, 912, 3410, 671, 13, 51544, 51544, 407, 2035, 10290, 291, 8947, 490, 341, 3256, 820, 312, 2531, 281, 264, 10290, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11276872534500926, "compression_ratio": 1.7174721189591078, "no_speech_prob": 6.577843123523053e-07}, {"id": 629, "seek": 224088, "start": 2250.1600000000003, "end": 2255.06, "text": " And that's a way of handling the fact that there are multiple y's that are compatible", "tokens": [50364, 400, 370, 291, 434, 516, 281, 312, 1075, 281, 16927, 288, 337, 257, 2212, 2031, 1553, 4473, 264, 5598, 11, 50652, 50652, 570, 295, 264, 33270, 2676, 3094, 666, 264, 1185, 13, 50828, 50828, 400, 300, 311, 257, 636, 295, 13175, 264, 1186, 300, 456, 366, 3866, 288, 311, 300, 366, 18218, 51073, 51073, 365, 364, 2031, 13, 51170, 51170, 583, 586, 264, 636, 291, 643, 281, 3847, 341, 307, 300, 291, 643, 281, 980, 309, 11, 1392, 11, 510, 366, 732, 51392, 51392, 5267, 11, 436, 434, 767, 264, 912, 3410, 671, 13, 51544, 51544, 407, 2035, 10290, 291, 8947, 490, 341, 3256, 820, 312, 2531, 281, 264, 10290, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11276872534500926, "compression_ratio": 1.7174721189591078, "no_speech_prob": 6.577843123523053e-07}, {"id": 630, "seek": 224088, "start": 2255.06, "end": 2257.0, "text": " with an x.", "tokens": [50364, 400, 370, 291, 434, 516, 281, 312, 1075, 281, 16927, 288, 337, 257, 2212, 2031, 1553, 4473, 264, 5598, 11, 50652, 50652, 570, 295, 264, 33270, 2676, 3094, 666, 264, 1185, 13, 50828, 50828, 400, 300, 311, 257, 636, 295, 13175, 264, 1186, 300, 456, 366, 3866, 288, 311, 300, 366, 18218, 51073, 51073, 365, 364, 2031, 13, 51170, 51170, 583, 586, 264, 636, 291, 643, 281, 3847, 341, 307, 300, 291, 643, 281, 980, 309, 11, 1392, 11, 510, 366, 732, 51392, 51392, 5267, 11, 436, 434, 767, 264, 912, 3410, 671, 13, 51544, 51544, 407, 2035, 10290, 291, 8947, 490, 341, 3256, 820, 312, 2531, 281, 264, 10290, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11276872534500926, "compression_ratio": 1.7174721189591078, "no_speech_prob": 6.577843123523053e-07}, {"id": 631, "seek": 224088, "start": 2257.0, "end": 2261.44, "text": " But now the way you need to train this is that you need to tell it, okay, here are two", "tokens": [50364, 400, 370, 291, 434, 516, 281, 312, 1075, 281, 16927, 288, 337, 257, 2212, 2031, 1553, 4473, 264, 5598, 11, 50652, 50652, 570, 295, 264, 33270, 2676, 3094, 666, 264, 1185, 13, 50828, 50828, 400, 300, 311, 257, 636, 295, 13175, 264, 1186, 300, 456, 366, 3866, 288, 311, 300, 366, 18218, 51073, 51073, 365, 364, 2031, 13, 51170, 51170, 583, 586, 264, 636, 291, 643, 281, 3847, 341, 307, 300, 291, 643, 281, 980, 309, 11, 1392, 11, 510, 366, 732, 51392, 51392, 5267, 11, 436, 434, 767, 264, 912, 3410, 671, 13, 51544, 51544, 407, 2035, 10290, 291, 8947, 490, 341, 3256, 820, 312, 2531, 281, 264, 10290, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11276872534500926, "compression_ratio": 1.7174721189591078, "no_speech_prob": 6.577843123523053e-07}, {"id": 632, "seek": 224088, "start": 2261.44, "end": 2264.48, "text": " images, they're actually the same conceptually.", "tokens": [50364, 400, 370, 291, 434, 516, 281, 312, 1075, 281, 16927, 288, 337, 257, 2212, 2031, 1553, 4473, 264, 5598, 11, 50652, 50652, 570, 295, 264, 33270, 2676, 3094, 666, 264, 1185, 13, 50828, 50828, 400, 300, 311, 257, 636, 295, 13175, 264, 1186, 300, 456, 366, 3866, 288, 311, 300, 366, 18218, 51073, 51073, 365, 364, 2031, 13, 51170, 51170, 583, 586, 264, 636, 291, 643, 281, 3847, 341, 307, 300, 291, 643, 281, 980, 309, 11, 1392, 11, 510, 366, 732, 51392, 51392, 5267, 11, 436, 434, 767, 264, 912, 3410, 671, 13, 51544, 51544, 407, 2035, 10290, 291, 8947, 490, 341, 3256, 820, 312, 2531, 281, 264, 10290, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11276872534500926, "compression_ratio": 1.7174721189591078, "no_speech_prob": 6.577843123523053e-07}, {"id": 633, "seek": 224088, "start": 2264.48, "end": 2269.88, "text": " So whatever representation you extract from this image should be similar to the representation", "tokens": [50364, 400, 370, 291, 434, 516, 281, 312, 1075, 281, 16927, 288, 337, 257, 2212, 2031, 1553, 4473, 264, 5598, 11, 50652, 50652, 570, 295, 264, 33270, 2676, 3094, 666, 264, 1185, 13, 50828, 50828, 400, 300, 311, 257, 636, 295, 13175, 264, 1186, 300, 456, 366, 3866, 288, 311, 300, 366, 18218, 51073, 51073, 365, 364, 2031, 13, 51170, 51170, 583, 586, 264, 636, 291, 643, 281, 3847, 341, 307, 300, 291, 643, 281, 980, 309, 11, 1392, 11, 510, 366, 732, 51392, 51392, 5267, 11, 436, 434, 767, 264, 912, 3410, 671, 13, 51544, 51544, 407, 2035, 10290, 291, 8947, 490, 341, 3256, 820, 312, 2531, 281, 264, 10290, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11276872534500926, "compression_ratio": 1.7174721189591078, "no_speech_prob": 6.577843123523053e-07}, {"id": 634, "seek": 226988, "start": 2269.88, "end": 2271.32, "text": " you extract from this image.", "tokens": [50364, 291, 8947, 490, 341, 3256, 13, 50436, 50436, 407, 1936, 11, 286, 528, 276, 293, 276, 5835, 510, 281, 312, 382, 1998, 281, 1184, 661, 382, 1944, 11, 570, 50700, 50700, 534, 436, 2906, 264, 912, 551, 13, 50850, 50850, 583, 498, 291, 787, 360, 341, 11, 291, 536, 257, 15584, 13, 50958, 50958, 509, 536, 1936, 729, 9590, 2584, 26258, 264, 15743, 293, 10501, 5754, 51112, 51112, 18875, 13, 51162, 51162, 407, 291, 643, 257, 8712, 488, 1433, 11, 597, 307, 733, 295, 257, 1422, 11665, 295, 341, 1558, 295, 7380, 493, 264, 51462, 51462, 2281, 295, 1507, 291, 500, 380, 528, 13, 51566, 51566, 509, 855, 15494, 295, 5110, 300, 366, 7802, 332, 2202, 11, 293, 550, 291, 3847, 729, 9590, 281, 5258, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1352738668752271, "compression_ratio": 1.7157190635451505, "no_speech_prob": 2.8129725251346827e-06}, {"id": 635, "seek": 226988, "start": 2271.32, "end": 2276.6, "text": " So basically, I want h and h prime here to be as close to each other as possible, because", "tokens": [50364, 291, 8947, 490, 341, 3256, 13, 50436, 50436, 407, 1936, 11, 286, 528, 276, 293, 276, 5835, 510, 281, 312, 382, 1998, 281, 1184, 661, 382, 1944, 11, 570, 50700, 50700, 534, 436, 2906, 264, 912, 551, 13, 50850, 50850, 583, 498, 291, 787, 360, 341, 11, 291, 536, 257, 15584, 13, 50958, 50958, 509, 536, 1936, 729, 9590, 2584, 26258, 264, 15743, 293, 10501, 5754, 51112, 51112, 18875, 13, 51162, 51162, 407, 291, 643, 257, 8712, 488, 1433, 11, 597, 307, 733, 295, 257, 1422, 11665, 295, 341, 1558, 295, 7380, 493, 264, 51462, 51462, 2281, 295, 1507, 291, 500, 380, 528, 13, 51566, 51566, 509, 855, 15494, 295, 5110, 300, 366, 7802, 332, 2202, 11, 293, 550, 291, 3847, 729, 9590, 281, 5258, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1352738668752271, "compression_ratio": 1.7157190635451505, "no_speech_prob": 2.8129725251346827e-06}, {"id": 636, "seek": 226988, "start": 2276.6, "end": 2279.6, "text": " really they represent the same thing.", "tokens": [50364, 291, 8947, 490, 341, 3256, 13, 50436, 50436, 407, 1936, 11, 286, 528, 276, 293, 276, 5835, 510, 281, 312, 382, 1998, 281, 1184, 661, 382, 1944, 11, 570, 50700, 50700, 534, 436, 2906, 264, 912, 551, 13, 50850, 50850, 583, 498, 291, 787, 360, 341, 11, 291, 536, 257, 15584, 13, 50958, 50958, 509, 536, 1936, 729, 9590, 2584, 26258, 264, 15743, 293, 10501, 5754, 51112, 51112, 18875, 13, 51162, 51162, 407, 291, 643, 257, 8712, 488, 1433, 11, 597, 307, 733, 295, 257, 1422, 11665, 295, 341, 1558, 295, 7380, 493, 264, 51462, 51462, 2281, 295, 1507, 291, 500, 380, 528, 13, 51566, 51566, 509, 855, 15494, 295, 5110, 300, 366, 7802, 332, 2202, 11, 293, 550, 291, 3847, 729, 9590, 281, 5258, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1352738668752271, "compression_ratio": 1.7157190635451505, "no_speech_prob": 2.8129725251346827e-06}, {"id": 637, "seek": 226988, "start": 2279.6, "end": 2281.76, "text": " But if you only do this, you see a collapse.", "tokens": [50364, 291, 8947, 490, 341, 3256, 13, 50436, 50436, 407, 1936, 11, 286, 528, 276, 293, 276, 5835, 510, 281, 312, 382, 1998, 281, 1184, 661, 382, 1944, 11, 570, 50700, 50700, 534, 436, 2906, 264, 912, 551, 13, 50850, 50850, 583, 498, 291, 787, 360, 341, 11, 291, 536, 257, 15584, 13, 50958, 50958, 509, 536, 1936, 729, 9590, 2584, 26258, 264, 15743, 293, 10501, 5754, 51112, 51112, 18875, 13, 51162, 51162, 407, 291, 643, 257, 8712, 488, 1433, 11, 597, 307, 733, 295, 257, 1422, 11665, 295, 341, 1558, 295, 7380, 493, 264, 51462, 51462, 2281, 295, 1507, 291, 500, 380, 528, 13, 51566, 51566, 509, 855, 15494, 295, 5110, 300, 366, 7802, 332, 2202, 11, 293, 550, 291, 3847, 729, 9590, 281, 5258, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1352738668752271, "compression_ratio": 1.7157190635451505, "no_speech_prob": 2.8129725251346827e-06}, {"id": 638, "seek": 226988, "start": 2281.76, "end": 2284.84, "text": " You see basically those networks completely ignoring the inputs and producing constant", "tokens": [50364, 291, 8947, 490, 341, 3256, 13, 50436, 50436, 407, 1936, 11, 286, 528, 276, 293, 276, 5835, 510, 281, 312, 382, 1998, 281, 1184, 661, 382, 1944, 11, 570, 50700, 50700, 534, 436, 2906, 264, 912, 551, 13, 50850, 50850, 583, 498, 291, 787, 360, 341, 11, 291, 536, 257, 15584, 13, 50958, 50958, 509, 536, 1936, 729, 9590, 2584, 26258, 264, 15743, 293, 10501, 5754, 51112, 51112, 18875, 13, 51162, 51162, 407, 291, 643, 257, 8712, 488, 1433, 11, 597, 307, 733, 295, 257, 1422, 11665, 295, 341, 1558, 295, 7380, 493, 264, 51462, 51462, 2281, 295, 1507, 291, 500, 380, 528, 13, 51566, 51566, 509, 855, 15494, 295, 5110, 300, 366, 7802, 332, 2202, 11, 293, 550, 291, 3847, 729, 9590, 281, 5258, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1352738668752271, "compression_ratio": 1.7157190635451505, "no_speech_prob": 2.8129725251346827e-06}, {"id": 639, "seek": 226988, "start": 2284.84, "end": 2285.84, "text": " vectors.", "tokens": [50364, 291, 8947, 490, 341, 3256, 13, 50436, 50436, 407, 1936, 11, 286, 528, 276, 293, 276, 5835, 510, 281, 312, 382, 1998, 281, 1184, 661, 382, 1944, 11, 570, 50700, 50700, 534, 436, 2906, 264, 912, 551, 13, 50850, 50850, 583, 498, 291, 787, 360, 341, 11, 291, 536, 257, 15584, 13, 50958, 50958, 509, 536, 1936, 729, 9590, 2584, 26258, 264, 15743, 293, 10501, 5754, 51112, 51112, 18875, 13, 51162, 51162, 407, 291, 643, 257, 8712, 488, 1433, 11, 597, 307, 733, 295, 257, 1422, 11665, 295, 341, 1558, 295, 7380, 493, 264, 51462, 51462, 2281, 295, 1507, 291, 500, 380, 528, 13, 51566, 51566, 509, 855, 15494, 295, 5110, 300, 366, 7802, 332, 2202, 11, 293, 550, 291, 3847, 729, 9590, 281, 5258, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1352738668752271, "compression_ratio": 1.7157190635451505, "no_speech_prob": 2.8129725251346827e-06}, {"id": 640, "seek": 226988, "start": 2285.84, "end": 2291.84, "text": " So you need a contrastive term, which is kind of a subclass of this idea of pushing up the", "tokens": [50364, 291, 8947, 490, 341, 3256, 13, 50436, 50436, 407, 1936, 11, 286, 528, 276, 293, 276, 5835, 510, 281, 312, 382, 1998, 281, 1184, 661, 382, 1944, 11, 570, 50700, 50700, 534, 436, 2906, 264, 912, 551, 13, 50850, 50850, 583, 498, 291, 787, 360, 341, 11, 291, 536, 257, 15584, 13, 50958, 50958, 509, 536, 1936, 729, 9590, 2584, 26258, 264, 15743, 293, 10501, 5754, 51112, 51112, 18875, 13, 51162, 51162, 407, 291, 643, 257, 8712, 488, 1433, 11, 597, 307, 733, 295, 257, 1422, 11665, 295, 341, 1558, 295, 7380, 493, 264, 51462, 51462, 2281, 295, 1507, 291, 500, 380, 528, 13, 51566, 51566, 509, 855, 15494, 295, 5110, 300, 366, 7802, 332, 2202, 11, 293, 550, 291, 3847, 729, 9590, 281, 5258, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1352738668752271, "compression_ratio": 1.7157190635451505, "no_speech_prob": 2.8129725251346827e-06}, {"id": 641, "seek": 226988, "start": 2291.84, "end": 2293.92, "text": " energy of stuff you don't want.", "tokens": [50364, 291, 8947, 490, 341, 3256, 13, 50436, 50436, 407, 1936, 11, 286, 528, 276, 293, 276, 5835, 510, 281, 312, 382, 1998, 281, 1184, 661, 382, 1944, 11, 570, 50700, 50700, 534, 436, 2906, 264, 912, 551, 13, 50850, 50850, 583, 498, 291, 787, 360, 341, 11, 291, 536, 257, 15584, 13, 50958, 50958, 509, 536, 1936, 729, 9590, 2584, 26258, 264, 15743, 293, 10501, 5754, 51112, 51112, 18875, 13, 51162, 51162, 407, 291, 643, 257, 8712, 488, 1433, 11, 597, 307, 733, 295, 257, 1422, 11665, 295, 341, 1558, 295, 7380, 493, 264, 51462, 51462, 2281, 295, 1507, 291, 500, 380, 528, 13, 51566, 51566, 509, 855, 15494, 295, 5110, 300, 366, 7802, 332, 2202, 11, 293, 550, 291, 3847, 729, 9590, 281, 5258, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1352738668752271, "compression_ratio": 1.7157190635451505, "no_speech_prob": 2.8129725251346827e-06}, {"id": 642, "seek": 226988, "start": 2293.92, "end": 2299.6800000000003, "text": " You show pairs of examples that are dissimilar, and then you train those networks to produce", "tokens": [50364, 291, 8947, 490, 341, 3256, 13, 50436, 50436, 407, 1936, 11, 286, 528, 276, 293, 276, 5835, 510, 281, 312, 382, 1998, 281, 1184, 661, 382, 1944, 11, 570, 50700, 50700, 534, 436, 2906, 264, 912, 551, 13, 50850, 50850, 583, 498, 291, 787, 360, 341, 11, 291, 536, 257, 15584, 13, 50958, 50958, 509, 536, 1936, 729, 9590, 2584, 26258, 264, 15743, 293, 10501, 5754, 51112, 51112, 18875, 13, 51162, 51162, 407, 291, 643, 257, 8712, 488, 1433, 11, 597, 307, 733, 295, 257, 1422, 11665, 295, 341, 1558, 295, 7380, 493, 264, 51462, 51462, 2281, 295, 1507, 291, 500, 380, 528, 13, 51566, 51566, 509, 855, 15494, 295, 5110, 300, 366, 7802, 332, 2202, 11, 293, 550, 291, 3847, 729, 9590, 281, 5258, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1352738668752271, "compression_ratio": 1.7157190635451505, "no_speech_prob": 2.8129725251346827e-06}, {"id": 643, "seek": 229968, "start": 2299.68, "end": 2301.2799999999997, "text": " outputs that are different from each other.", "tokens": [50364, 23930, 300, 366, 819, 490, 1184, 661, 13, 50444, 50444, 400, 456, 311, 3683, 4470, 6828, 281, 360, 341, 13, 50526, 50526, 407, 341, 307, 11, 294, 264, 1606, 11, 309, 311, 1219, 318, 2918, 1130, 18161, 36170, 13, 50692, 50692, 400, 309, 311, 364, 1331, 1558, 11, 457, 309, 311, 668, 733, 295, 48358, 544, 3938, 13, 50822, 50822, 467, 311, 588, 4406, 337, 3097, 428, 1851, 11150, 1185, 11, 420, 456, 311, 257, 3035, 300, 51086, 51086, 445, 1361, 484, 300, 767, 16447, 264, 11, 767, 1143, 2698, 12, 48172, 24420, 2539, 294, 5201, 281, 51304, 51304, 3470, 3389, 670, 17491, 46533, 2539, 13, 51452, 51452, 467, 311, 341, 472, 11, 3335, 21141, 13, 51502, 51502, 400, 309, 311, 1228, 257, 4282, 281, 733, 295, 2964, 760, 472, 295, 729, 13, 51666, 51666, 440, 2135, 2734, 510, 307, 264, 10360, 295, 5006, 1152, 40019, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17392738291759366, "compression_ratio": 1.7196531791907514, "no_speech_prob": 2.3549651814391837e-05}, {"id": 644, "seek": 229968, "start": 2301.2799999999997, "end": 2302.9199999999996, "text": " And there's various loss functions to do this.", "tokens": [50364, 23930, 300, 366, 819, 490, 1184, 661, 13, 50444, 50444, 400, 456, 311, 3683, 4470, 6828, 281, 360, 341, 13, 50526, 50526, 407, 341, 307, 11, 294, 264, 1606, 11, 309, 311, 1219, 318, 2918, 1130, 18161, 36170, 13, 50692, 50692, 400, 309, 311, 364, 1331, 1558, 11, 457, 309, 311, 668, 733, 295, 48358, 544, 3938, 13, 50822, 50822, 467, 311, 588, 4406, 337, 3097, 428, 1851, 11150, 1185, 11, 420, 456, 311, 257, 3035, 300, 51086, 51086, 445, 1361, 484, 300, 767, 16447, 264, 11, 767, 1143, 2698, 12, 48172, 24420, 2539, 294, 5201, 281, 51304, 51304, 3470, 3389, 670, 17491, 46533, 2539, 13, 51452, 51452, 467, 311, 341, 472, 11, 3335, 21141, 13, 51502, 51502, 400, 309, 311, 1228, 257, 4282, 281, 733, 295, 2964, 760, 472, 295, 729, 13, 51666, 51666, 440, 2135, 2734, 510, 307, 264, 10360, 295, 5006, 1152, 40019, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17392738291759366, "compression_ratio": 1.7196531791907514, "no_speech_prob": 2.3549651814391837e-05}, {"id": 645, "seek": 229968, "start": 2302.9199999999996, "end": 2306.24, "text": " So this is, in the business, it's called Siamese neural nets.", "tokens": [50364, 23930, 300, 366, 819, 490, 1184, 661, 13, 50444, 50444, 400, 456, 311, 3683, 4470, 6828, 281, 360, 341, 13, 50526, 50526, 407, 341, 307, 11, 294, 264, 1606, 11, 309, 311, 1219, 318, 2918, 1130, 18161, 36170, 13, 50692, 50692, 400, 309, 311, 364, 1331, 1558, 11, 457, 309, 311, 668, 733, 295, 48358, 544, 3938, 13, 50822, 50822, 467, 311, 588, 4406, 337, 3097, 428, 1851, 11150, 1185, 11, 420, 456, 311, 257, 3035, 300, 51086, 51086, 445, 1361, 484, 300, 767, 16447, 264, 11, 767, 1143, 2698, 12, 48172, 24420, 2539, 294, 5201, 281, 51304, 51304, 3470, 3389, 670, 17491, 46533, 2539, 13, 51452, 51452, 467, 311, 341, 472, 11, 3335, 21141, 13, 51502, 51502, 400, 309, 311, 1228, 257, 4282, 281, 733, 295, 2964, 760, 472, 295, 729, 13, 51666, 51666, 440, 2135, 2734, 510, 307, 264, 10360, 295, 5006, 1152, 40019, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17392738291759366, "compression_ratio": 1.7196531791907514, "no_speech_prob": 2.3549651814391837e-05}, {"id": 646, "seek": 229968, "start": 2306.24, "end": 2308.8399999999997, "text": " And it's an old idea, but it's been kind of revived more recently.", "tokens": [50364, 23930, 300, 366, 819, 490, 1184, 661, 13, 50444, 50444, 400, 456, 311, 3683, 4470, 6828, 281, 360, 341, 13, 50526, 50526, 407, 341, 307, 11, 294, 264, 1606, 11, 309, 311, 1219, 318, 2918, 1130, 18161, 36170, 13, 50692, 50692, 400, 309, 311, 364, 1331, 1558, 11, 457, 309, 311, 668, 733, 295, 48358, 544, 3938, 13, 50822, 50822, 467, 311, 588, 4406, 337, 3097, 428, 1851, 11150, 1185, 11, 420, 456, 311, 257, 3035, 300, 51086, 51086, 445, 1361, 484, 300, 767, 16447, 264, 11, 767, 1143, 2698, 12, 48172, 24420, 2539, 294, 5201, 281, 51304, 51304, 3470, 3389, 670, 17491, 46533, 2539, 13, 51452, 51452, 467, 311, 341, 472, 11, 3335, 21141, 13, 51502, 51502, 400, 309, 311, 1228, 257, 4282, 281, 733, 295, 2964, 760, 472, 295, 729, 13, 51666, 51666, 440, 2135, 2734, 510, 307, 264, 10360, 295, 5006, 1152, 40019, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17392738291759366, "compression_ratio": 1.7196531791907514, "no_speech_prob": 2.3549651814391837e-05}, {"id": 647, "seek": 229968, "start": 2308.8399999999997, "end": 2314.12, "text": " It's very successful for training your face recognition system, or there's a paper that", "tokens": [50364, 23930, 300, 366, 819, 490, 1184, 661, 13, 50444, 50444, 400, 456, 311, 3683, 4470, 6828, 281, 360, 341, 13, 50526, 50526, 407, 341, 307, 11, 294, 264, 1606, 11, 309, 311, 1219, 318, 2918, 1130, 18161, 36170, 13, 50692, 50692, 400, 309, 311, 364, 1331, 1558, 11, 457, 309, 311, 668, 733, 295, 48358, 544, 3938, 13, 50822, 50822, 467, 311, 588, 4406, 337, 3097, 428, 1851, 11150, 1185, 11, 420, 456, 311, 257, 3035, 300, 51086, 51086, 445, 1361, 484, 300, 767, 16447, 264, 11, 767, 1143, 2698, 12, 48172, 24420, 2539, 294, 5201, 281, 51304, 51304, 3470, 3389, 670, 17491, 46533, 2539, 13, 51452, 51452, 467, 311, 341, 472, 11, 3335, 21141, 13, 51502, 51502, 400, 309, 311, 1228, 257, 4282, 281, 733, 295, 2964, 760, 472, 295, 729, 13, 51666, 51666, 440, 2135, 2734, 510, 307, 264, 10360, 295, 5006, 1152, 40019, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17392738291759366, "compression_ratio": 1.7196531791907514, "no_speech_prob": 2.3549651814391837e-05}, {"id": 648, "seek": 229968, "start": 2314.12, "end": 2318.48, "text": " just came out that actually beats the, actually used self-supervised learning in vision to", "tokens": [50364, 23930, 300, 366, 819, 490, 1184, 661, 13, 50444, 50444, 400, 456, 311, 3683, 4470, 6828, 281, 360, 341, 13, 50526, 50526, 407, 341, 307, 11, 294, 264, 1606, 11, 309, 311, 1219, 318, 2918, 1130, 18161, 36170, 13, 50692, 50692, 400, 309, 311, 364, 1331, 1558, 11, 457, 309, 311, 668, 733, 295, 48358, 544, 3938, 13, 50822, 50822, 467, 311, 588, 4406, 337, 3097, 428, 1851, 11150, 1185, 11, 420, 456, 311, 257, 3035, 300, 51086, 51086, 445, 1361, 484, 300, 767, 16447, 264, 11, 767, 1143, 2698, 12, 48172, 24420, 2539, 294, 5201, 281, 51304, 51304, 3470, 3389, 670, 17491, 46533, 2539, 13, 51452, 51452, 467, 311, 341, 472, 11, 3335, 21141, 13, 51502, 51502, 400, 309, 311, 1228, 257, 4282, 281, 733, 295, 2964, 760, 472, 295, 729, 13, 51666, 51666, 440, 2135, 2734, 510, 307, 264, 10360, 295, 5006, 1152, 40019, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17392738291759366, "compression_ratio": 1.7196531791907514, "no_speech_prob": 2.3549651814391837e-05}, {"id": 649, "seek": 229968, "start": 2318.48, "end": 2321.44, "text": " improve performance over purely supervised learning.", "tokens": [50364, 23930, 300, 366, 819, 490, 1184, 661, 13, 50444, 50444, 400, 456, 311, 3683, 4470, 6828, 281, 360, 341, 13, 50526, 50526, 407, 341, 307, 11, 294, 264, 1606, 11, 309, 311, 1219, 318, 2918, 1130, 18161, 36170, 13, 50692, 50692, 400, 309, 311, 364, 1331, 1558, 11, 457, 309, 311, 668, 733, 295, 48358, 544, 3938, 13, 50822, 50822, 467, 311, 588, 4406, 337, 3097, 428, 1851, 11150, 1185, 11, 420, 456, 311, 257, 3035, 300, 51086, 51086, 445, 1361, 484, 300, 767, 16447, 264, 11, 767, 1143, 2698, 12, 48172, 24420, 2539, 294, 5201, 281, 51304, 51304, 3470, 3389, 670, 17491, 46533, 2539, 13, 51452, 51452, 467, 311, 341, 472, 11, 3335, 21141, 13, 51502, 51502, 400, 309, 311, 1228, 257, 4282, 281, 733, 295, 2964, 760, 472, 295, 729, 13, 51666, 51666, 440, 2135, 2734, 510, 307, 264, 10360, 295, 5006, 1152, 40019, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17392738291759366, "compression_ratio": 1.7196531791907514, "no_speech_prob": 2.3549651814391837e-05}, {"id": 650, "seek": 229968, "start": 2321.44, "end": 2322.44, "text": " It's this one, MoCo.", "tokens": [50364, 23930, 300, 366, 819, 490, 1184, 661, 13, 50444, 50444, 400, 456, 311, 3683, 4470, 6828, 281, 360, 341, 13, 50526, 50526, 407, 341, 307, 11, 294, 264, 1606, 11, 309, 311, 1219, 318, 2918, 1130, 18161, 36170, 13, 50692, 50692, 400, 309, 311, 364, 1331, 1558, 11, 457, 309, 311, 668, 733, 295, 48358, 544, 3938, 13, 50822, 50822, 467, 311, 588, 4406, 337, 3097, 428, 1851, 11150, 1185, 11, 420, 456, 311, 257, 3035, 300, 51086, 51086, 445, 1361, 484, 300, 767, 16447, 264, 11, 767, 1143, 2698, 12, 48172, 24420, 2539, 294, 5201, 281, 51304, 51304, 3470, 3389, 670, 17491, 46533, 2539, 13, 51452, 51452, 467, 311, 341, 472, 11, 3335, 21141, 13, 51502, 51502, 400, 309, 311, 1228, 257, 4282, 281, 733, 295, 2964, 760, 472, 295, 729, 13, 51666, 51666, 440, 2135, 2734, 510, 307, 264, 10360, 295, 5006, 1152, 40019, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17392738291759366, "compression_ratio": 1.7196531791907514, "no_speech_prob": 2.3549651814391837e-05}, {"id": 651, "seek": 229968, "start": 2322.44, "end": 2325.72, "text": " And it's using a trick to kind of slow down one of those.", "tokens": [50364, 23930, 300, 366, 819, 490, 1184, 661, 13, 50444, 50444, 400, 456, 311, 3683, 4470, 6828, 281, 360, 341, 13, 50526, 50526, 407, 341, 307, 11, 294, 264, 1606, 11, 309, 311, 1219, 318, 2918, 1130, 18161, 36170, 13, 50692, 50692, 400, 309, 311, 364, 1331, 1558, 11, 457, 309, 311, 668, 733, 295, 48358, 544, 3938, 13, 50822, 50822, 467, 311, 588, 4406, 337, 3097, 428, 1851, 11150, 1185, 11, 420, 456, 311, 257, 3035, 300, 51086, 51086, 445, 1361, 484, 300, 767, 16447, 264, 11, 767, 1143, 2698, 12, 48172, 24420, 2539, 294, 5201, 281, 51304, 51304, 3470, 3389, 670, 17491, 46533, 2539, 13, 51452, 51452, 467, 311, 341, 472, 11, 3335, 21141, 13, 51502, 51502, 400, 309, 311, 1228, 257, 4282, 281, 733, 295, 2964, 760, 472, 295, 729, 13, 51666, 51666, 440, 2135, 2734, 510, 307, 264, 10360, 295, 5006, 1152, 40019, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17392738291759366, "compression_ratio": 1.7196531791907514, "no_speech_prob": 2.3549651814391837e-05}, {"id": 652, "seek": 229968, "start": 2325.72, "end": 2329.24, "text": " The main issue here is the difficulty of finding hard negatives.", "tokens": [50364, 23930, 300, 366, 819, 490, 1184, 661, 13, 50444, 50444, 400, 456, 311, 3683, 4470, 6828, 281, 360, 341, 13, 50526, 50526, 407, 341, 307, 11, 294, 264, 1606, 11, 309, 311, 1219, 318, 2918, 1130, 18161, 36170, 13, 50692, 50692, 400, 309, 311, 364, 1331, 1558, 11, 457, 309, 311, 668, 733, 295, 48358, 544, 3938, 13, 50822, 50822, 467, 311, 588, 4406, 337, 3097, 428, 1851, 11150, 1185, 11, 420, 456, 311, 257, 3035, 300, 51086, 51086, 445, 1361, 484, 300, 767, 16447, 264, 11, 767, 1143, 2698, 12, 48172, 24420, 2539, 294, 5201, 281, 51304, 51304, 3470, 3389, 670, 17491, 46533, 2539, 13, 51452, 51452, 467, 311, 341, 472, 11, 3335, 21141, 13, 51502, 51502, 400, 309, 311, 1228, 257, 4282, 281, 733, 295, 2964, 760, 472, 295, 729, 13, 51666, 51666, 440, 2135, 2734, 510, 307, 264, 10360, 295, 5006, 1152, 40019, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17392738291759366, "compression_ratio": 1.7196531791907514, "no_speech_prob": 2.3549651814391837e-05}, {"id": 653, "seek": 232924, "start": 2329.24, "end": 2335.1, "text": " So here you have to mine your entire data set for images that the system thinks are", "tokens": [50364, 407, 510, 291, 362, 281, 3892, 428, 2302, 1412, 992, 337, 5267, 300, 264, 1185, 7309, 366, 50657, 50657, 2531, 281, 341, 472, 11, 457, 534, 3212, 380, 13, 50798, 50798, 400, 300, 311, 534, 689, 721, 1813, 6179, 13, 51002, 51002, 583, 300, 1558, 11, 341, 3035, 286, 445, 2835, 11, 767, 24771, 264, 3389, 295, 3256, 51318, 51318, 11150, 3652, 670, 17491, 46533, 13, 51418, 51418, 1079, 30, 51468, 51468, 407, 291, 434, 40244, 341, 2445, 283, 420, 283, 670, 2031, 11, 288, 11, 2035, 13, 51618, 51618, 1119, 341, 294, 257, 13075, 1602, 1508, 30, 51768, 51768, 865, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.2216815948486328, "compression_ratio": 1.5930232558139534, "no_speech_prob": 3.7262586829456268e-06}, {"id": 654, "seek": 232924, "start": 2335.1, "end": 2337.9199999999996, "text": " similar to this one, but really aren't.", "tokens": [50364, 407, 510, 291, 362, 281, 3892, 428, 2302, 1412, 992, 337, 5267, 300, 264, 1185, 7309, 366, 50657, 50657, 2531, 281, 341, 472, 11, 457, 534, 3212, 380, 13, 50798, 50798, 400, 300, 311, 534, 689, 721, 1813, 6179, 13, 51002, 51002, 583, 300, 1558, 11, 341, 3035, 286, 445, 2835, 11, 767, 24771, 264, 3389, 295, 3256, 51318, 51318, 11150, 3652, 670, 17491, 46533, 13, 51418, 51418, 1079, 30, 51468, 51468, 407, 291, 434, 40244, 341, 2445, 283, 420, 283, 670, 2031, 11, 288, 11, 2035, 13, 51618, 51618, 1119, 341, 294, 257, 13075, 1602, 1508, 30, 51768, 51768, 865, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.2216815948486328, "compression_ratio": 1.5930232558139534, "no_speech_prob": 3.7262586829456268e-06}, {"id": 655, "seek": 232924, "start": 2337.9199999999996, "end": 2342.0, "text": " And that's really where things become complicated.", "tokens": [50364, 407, 510, 291, 362, 281, 3892, 428, 2302, 1412, 992, 337, 5267, 300, 264, 1185, 7309, 366, 50657, 50657, 2531, 281, 341, 472, 11, 457, 534, 3212, 380, 13, 50798, 50798, 400, 300, 311, 534, 689, 721, 1813, 6179, 13, 51002, 51002, 583, 300, 1558, 11, 341, 3035, 286, 445, 2835, 11, 767, 24771, 264, 3389, 295, 3256, 51318, 51318, 11150, 3652, 670, 17491, 46533, 13, 51418, 51418, 1079, 30, 51468, 51468, 407, 291, 434, 40244, 341, 2445, 283, 420, 283, 670, 2031, 11, 288, 11, 2035, 13, 51618, 51618, 1119, 341, 294, 257, 13075, 1602, 1508, 30, 51768, 51768, 865, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.2216815948486328, "compression_ratio": 1.5930232558139534, "no_speech_prob": 3.7262586829456268e-06}, {"id": 656, "seek": 232924, "start": 2342.0, "end": 2348.3199999999997, "text": " But that idea, this paper I just mentioned, actually improves the performance of image", "tokens": [50364, 407, 510, 291, 362, 281, 3892, 428, 2302, 1412, 992, 337, 5267, 300, 264, 1185, 7309, 366, 50657, 50657, 2531, 281, 341, 472, 11, 457, 534, 3212, 380, 13, 50798, 50798, 400, 300, 311, 534, 689, 721, 1813, 6179, 13, 51002, 51002, 583, 300, 1558, 11, 341, 3035, 286, 445, 2835, 11, 767, 24771, 264, 3389, 295, 3256, 51318, 51318, 11150, 3652, 670, 17491, 46533, 13, 51418, 51418, 1079, 30, 51468, 51468, 407, 291, 434, 40244, 341, 2445, 283, 420, 283, 670, 2031, 11, 288, 11, 2035, 13, 51618, 51618, 1119, 341, 294, 257, 13075, 1602, 1508, 30, 51768, 51768, 865, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.2216815948486328, "compression_ratio": 1.5930232558139534, "no_speech_prob": 3.7262586829456268e-06}, {"id": 657, "seek": 232924, "start": 2348.3199999999997, "end": 2350.3199999999997, "text": " recognition systems over purely supervised.", "tokens": [50364, 407, 510, 291, 362, 281, 3892, 428, 2302, 1412, 992, 337, 5267, 300, 264, 1185, 7309, 366, 50657, 50657, 2531, 281, 341, 472, 11, 457, 534, 3212, 380, 13, 50798, 50798, 400, 300, 311, 534, 689, 721, 1813, 6179, 13, 51002, 51002, 583, 300, 1558, 11, 341, 3035, 286, 445, 2835, 11, 767, 24771, 264, 3389, 295, 3256, 51318, 51318, 11150, 3652, 670, 17491, 46533, 13, 51418, 51418, 1079, 30, 51468, 51468, 407, 291, 434, 40244, 341, 2445, 283, 420, 283, 670, 2031, 11, 288, 11, 2035, 13, 51618, 51618, 1119, 341, 294, 257, 13075, 1602, 1508, 30, 51768, 51768, 865, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.2216815948486328, "compression_ratio": 1.5930232558139534, "no_speech_prob": 3.7262586829456268e-06}, {"id": 658, "seek": 232924, "start": 2350.3199999999997, "end": 2351.3199999999997, "text": " Yes?", "tokens": [50364, 407, 510, 291, 362, 281, 3892, 428, 2302, 1412, 992, 337, 5267, 300, 264, 1185, 7309, 366, 50657, 50657, 2531, 281, 341, 472, 11, 457, 534, 3212, 380, 13, 50798, 50798, 400, 300, 311, 534, 689, 721, 1813, 6179, 13, 51002, 51002, 583, 300, 1558, 11, 341, 3035, 286, 445, 2835, 11, 767, 24771, 264, 3389, 295, 3256, 51318, 51318, 11150, 3652, 670, 17491, 46533, 13, 51418, 51418, 1079, 30, 51468, 51468, 407, 291, 434, 40244, 341, 2445, 283, 420, 283, 670, 2031, 11, 288, 11, 2035, 13, 51618, 51618, 1119, 341, 294, 257, 13075, 1602, 1508, 30, 51768, 51768, 865, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.2216815948486328, "compression_ratio": 1.5930232558139534, "no_speech_prob": 3.7262586829456268e-06}, {"id": 659, "seek": 232924, "start": 2351.3199999999997, "end": 2354.3199999999997, "text": " So you're labeling this function f or f over x, y, whatever.", "tokens": [50364, 407, 510, 291, 362, 281, 3892, 428, 2302, 1412, 992, 337, 5267, 300, 264, 1185, 7309, 366, 50657, 50657, 2531, 281, 341, 472, 11, 457, 534, 3212, 380, 13, 50798, 50798, 400, 300, 311, 534, 689, 721, 1813, 6179, 13, 51002, 51002, 583, 300, 1558, 11, 341, 3035, 286, 445, 2835, 11, 767, 24771, 264, 3389, 295, 3256, 51318, 51318, 11150, 3652, 670, 17491, 46533, 13, 51418, 51418, 1079, 30, 51468, 51468, 407, 291, 434, 40244, 341, 2445, 283, 420, 283, 670, 2031, 11, 288, 11, 2035, 13, 51618, 51618, 1119, 341, 294, 257, 13075, 1602, 1508, 30, 51768, 51768, 865, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.2216815948486328, "compression_ratio": 1.5930232558139534, "no_speech_prob": 3.7262586829456268e-06}, {"id": 660, "seek": 232924, "start": 2354.3199999999997, "end": 2357.3199999999997, "text": " Is this in a parameterized class?", "tokens": [50364, 407, 510, 291, 362, 281, 3892, 428, 2302, 1412, 992, 337, 5267, 300, 264, 1185, 7309, 366, 50657, 50657, 2531, 281, 341, 472, 11, 457, 534, 3212, 380, 13, 50798, 50798, 400, 300, 311, 534, 689, 721, 1813, 6179, 13, 51002, 51002, 583, 300, 1558, 11, 341, 3035, 286, 445, 2835, 11, 767, 24771, 264, 3389, 295, 3256, 51318, 51318, 11150, 3652, 670, 17491, 46533, 13, 51418, 51418, 1079, 30, 51468, 51468, 407, 291, 434, 40244, 341, 2445, 283, 420, 283, 670, 2031, 11, 288, 11, 2035, 13, 51618, 51618, 1119, 341, 294, 257, 13075, 1602, 1508, 30, 51768, 51768, 865, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.2216815948486328, "compression_ratio": 1.5930232558139534, "no_speech_prob": 3.7262586829456268e-06}, {"id": 661, "seek": 232924, "start": 2357.3199999999997, "end": 2358.3199999999997, "text": " Yeah.", "tokens": [50364, 407, 510, 291, 362, 281, 3892, 428, 2302, 1412, 992, 337, 5267, 300, 264, 1185, 7309, 366, 50657, 50657, 2531, 281, 341, 472, 11, 457, 534, 3212, 380, 13, 50798, 50798, 400, 300, 311, 534, 689, 721, 1813, 6179, 13, 51002, 51002, 583, 300, 1558, 11, 341, 3035, 286, 445, 2835, 11, 767, 24771, 264, 3389, 295, 3256, 51318, 51318, 11150, 3652, 670, 17491, 46533, 13, 51418, 51418, 1079, 30, 51468, 51468, 407, 291, 434, 40244, 341, 2445, 283, 420, 283, 670, 2031, 11, 288, 11, 2035, 13, 51618, 51618, 1119, 341, 294, 257, 13075, 1602, 1508, 30, 51768, 51768, 865, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.2216815948486328, "compression_ratio": 1.5930232558139534, "no_speech_prob": 3.7262586829456268e-06}, {"id": 662, "seek": 235832, "start": 2358.32, "end": 2362.28, "text": " It's a neural net, whatever your favorite parameterized class is.", "tokens": [50364, 467, 311, 257, 18161, 2533, 11, 2035, 428, 2954, 13075, 1602, 1508, 307, 13, 50562, 50562, 583, 294, 341, 1389, 11, 309, 311, 2416, 45216, 304, 36170, 13, 50684, 50684, 682, 1186, 11, 264, 1315, 295, 264, 9482, 307, 558, 510, 13, 50826, 50826, 639, 1355, 5015, 31890, 12, 2803, 365, 1451, 1413, 264, 2744, 295, 264, 4111, 11317, 13, 51016, 51016, 5015, 31890, 12, 2803, 307, 733, 295, 257, 3832, 9482, 337, 3256, 11150, 13, 51377, 51377, 407, 264, 363, 31479, 1185, 300, 311, 1143, 337, 426, 45196, 11, 729, 45249, 8399, 12, 22660, 19866, 420, 1441, 78, 3436, 8399, 12, 22660, 19866, 11, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.19501381620354608, "compression_ratio": 1.5674603174603174, "no_speech_prob": 1.1123418516945094e-05}, {"id": 663, "seek": 235832, "start": 2362.28, "end": 2364.7200000000003, "text": " But in this case, it's large convolutional nets.", "tokens": [50364, 467, 311, 257, 18161, 2533, 11, 2035, 428, 2954, 13075, 1602, 1508, 307, 13, 50562, 50562, 583, 294, 341, 1389, 11, 309, 311, 2416, 45216, 304, 36170, 13, 50684, 50684, 682, 1186, 11, 264, 1315, 295, 264, 9482, 307, 558, 510, 13, 50826, 50826, 639, 1355, 5015, 31890, 12, 2803, 365, 1451, 1413, 264, 2744, 295, 264, 4111, 11317, 13, 51016, 51016, 5015, 31890, 12, 2803, 307, 733, 295, 257, 3832, 9482, 337, 3256, 11150, 13, 51377, 51377, 407, 264, 363, 31479, 1185, 300, 311, 1143, 337, 426, 45196, 11, 729, 45249, 8399, 12, 22660, 19866, 420, 1441, 78, 3436, 8399, 12, 22660, 19866, 11, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.19501381620354608, "compression_ratio": 1.5674603174603174, "no_speech_prob": 1.1123418516945094e-05}, {"id": 664, "seek": 235832, "start": 2364.7200000000003, "end": 2367.56, "text": " In fact, the name of the architecture is right here.", "tokens": [50364, 467, 311, 257, 18161, 2533, 11, 2035, 428, 2954, 13075, 1602, 1508, 307, 13, 50562, 50562, 583, 294, 341, 1389, 11, 309, 311, 2416, 45216, 304, 36170, 13, 50684, 50684, 682, 1186, 11, 264, 1315, 295, 264, 9482, 307, 558, 510, 13, 50826, 50826, 639, 1355, 5015, 31890, 12, 2803, 365, 1451, 1413, 264, 2744, 295, 264, 4111, 11317, 13, 51016, 51016, 5015, 31890, 12, 2803, 307, 733, 295, 257, 3832, 9482, 337, 3256, 11150, 13, 51377, 51377, 407, 264, 363, 31479, 1185, 300, 311, 1143, 337, 426, 45196, 11, 729, 45249, 8399, 12, 22660, 19866, 420, 1441, 78, 3436, 8399, 12, 22660, 19866, 11, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.19501381620354608, "compression_ratio": 1.5674603174603174, "no_speech_prob": 1.1123418516945094e-05}, {"id": 665, "seek": 235832, "start": 2367.56, "end": 2371.36, "text": " This means ResNet-50 with four times the size of the feature maps.", "tokens": [50364, 467, 311, 257, 18161, 2533, 11, 2035, 428, 2954, 13075, 1602, 1508, 307, 13, 50562, 50562, 583, 294, 341, 1389, 11, 309, 311, 2416, 45216, 304, 36170, 13, 50684, 50684, 682, 1186, 11, 264, 1315, 295, 264, 9482, 307, 558, 510, 13, 50826, 50826, 639, 1355, 5015, 31890, 12, 2803, 365, 1451, 1413, 264, 2744, 295, 264, 4111, 11317, 13, 51016, 51016, 5015, 31890, 12, 2803, 307, 733, 295, 257, 3832, 9482, 337, 3256, 11150, 13, 51377, 51377, 407, 264, 363, 31479, 1185, 300, 311, 1143, 337, 426, 45196, 11, 729, 45249, 8399, 12, 22660, 19866, 420, 1441, 78, 3436, 8399, 12, 22660, 19866, 11, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.19501381620354608, "compression_ratio": 1.5674603174603174, "no_speech_prob": 1.1123418516945094e-05}, {"id": 666, "seek": 235832, "start": 2371.36, "end": 2378.5800000000004, "text": " ResNet-50 is kind of a standard architecture for image recognition.", "tokens": [50364, 467, 311, 257, 18161, 2533, 11, 2035, 428, 2954, 13075, 1602, 1508, 307, 13, 50562, 50562, 583, 294, 341, 1389, 11, 309, 311, 2416, 45216, 304, 36170, 13, 50684, 50684, 682, 1186, 11, 264, 1315, 295, 264, 9482, 307, 558, 510, 13, 50826, 50826, 639, 1355, 5015, 31890, 12, 2803, 365, 1451, 1413, 264, 2744, 295, 264, 4111, 11317, 13, 51016, 51016, 5015, 31890, 12, 2803, 307, 733, 295, 257, 3832, 9482, 337, 3256, 11150, 13, 51377, 51377, 407, 264, 363, 31479, 1185, 300, 311, 1143, 337, 426, 45196, 11, 729, 45249, 8399, 12, 22660, 19866, 420, 1441, 78, 3436, 8399, 12, 22660, 19866, 11, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.19501381620354608, "compression_ratio": 1.5674603174603174, "no_speech_prob": 1.1123418516945094e-05}, {"id": 667, "seek": 235832, "start": 2378.5800000000004, "end": 2387.6800000000003, "text": " So the BERT system that's used for NLP, those masked auto-encoder or denoising auto-encoder,", "tokens": [50364, 467, 311, 257, 18161, 2533, 11, 2035, 428, 2954, 13075, 1602, 1508, 307, 13, 50562, 50562, 583, 294, 341, 1389, 11, 309, 311, 2416, 45216, 304, 36170, 13, 50684, 50684, 682, 1186, 11, 264, 1315, 295, 264, 9482, 307, 558, 510, 13, 50826, 50826, 639, 1355, 5015, 31890, 12, 2803, 365, 1451, 1413, 264, 2744, 295, 264, 4111, 11317, 13, 51016, 51016, 5015, 31890, 12, 2803, 307, 733, 295, 257, 3832, 9482, 337, 3256, 11150, 13, 51377, 51377, 407, 264, 363, 31479, 1185, 300, 311, 1143, 337, 426, 45196, 11, 729, 45249, 8399, 12, 22660, 19866, 420, 1441, 78, 3436, 8399, 12, 22660, 19866, 11, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.19501381620354608, "compression_ratio": 1.5674603174603174, "no_speech_prob": 1.1123418516945094e-05}, {"id": 668, "seek": 238768, "start": 2387.68, "end": 2388.8799999999997, "text": " the diagram looks like this.", "tokens": [50364, 264, 10686, 1542, 411, 341, 13, 50424, 50424, 509, 722, 365, 257, 2522, 295, 1412, 13, 50497, 50497, 509, 17366, 309, 11, 597, 1355, 291, 4159, 512, 3755, 13, 50630, 50630, 509, 1190, 309, 807, 257, 1326, 7914, 295, 18161, 2533, 13, 50808, 50808, 821, 311, 257, 48994, 7006, 597, 307, 26947, 294, 729, 5245, 11, 597, 307, 597, 295, 264, 23930, 51012, 51012, 307, 6183, 382, 257, 2445, 295, 264, 8482, 7316, 322, 264, 5598, 13, 51286, 51286, 400, 550, 291, 6794, 341, 365, 264, 3539, 1412, 300, 291, 13095, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.1478643218676249, "compression_ratio": 1.6538461538461537, "no_speech_prob": 1.5203158000076655e-05}, {"id": 669, "seek": 238768, "start": 2388.8799999999997, "end": 2390.3399999999997, "text": " You start with a piece of data.", "tokens": [50364, 264, 10686, 1542, 411, 341, 13, 50424, 50424, 509, 722, 365, 257, 2522, 295, 1412, 13, 50497, 50497, 509, 17366, 309, 11, 597, 1355, 291, 4159, 512, 3755, 13, 50630, 50630, 509, 1190, 309, 807, 257, 1326, 7914, 295, 18161, 2533, 13, 50808, 50808, 821, 311, 257, 48994, 7006, 597, 307, 26947, 294, 729, 5245, 11, 597, 307, 597, 295, 264, 23930, 51012, 51012, 307, 6183, 382, 257, 2445, 295, 264, 8482, 7316, 322, 264, 5598, 13, 51286, 51286, 400, 550, 291, 6794, 341, 365, 264, 3539, 1412, 300, 291, 13095, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.1478643218676249, "compression_ratio": 1.6538461538461537, "no_speech_prob": 1.5203158000076655e-05}, {"id": 670, "seek": 238768, "start": 2390.3399999999997, "end": 2393.0, "text": " You corrupt it, which means you remove some pieces.", "tokens": [50364, 264, 10686, 1542, 411, 341, 13, 50424, 50424, 509, 722, 365, 257, 2522, 295, 1412, 13, 50497, 50497, 509, 17366, 309, 11, 597, 1355, 291, 4159, 512, 3755, 13, 50630, 50630, 509, 1190, 309, 807, 257, 1326, 7914, 295, 18161, 2533, 13, 50808, 50808, 821, 311, 257, 48994, 7006, 597, 307, 26947, 294, 729, 5245, 11, 597, 307, 597, 295, 264, 23930, 51012, 51012, 307, 6183, 382, 257, 2445, 295, 264, 8482, 7316, 322, 264, 5598, 13, 51286, 51286, 400, 550, 291, 6794, 341, 365, 264, 3539, 1412, 300, 291, 13095, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.1478643218676249, "compression_ratio": 1.6538461538461537, "no_speech_prob": 1.5203158000076655e-05}, {"id": 671, "seek": 238768, "start": 2393.0, "end": 2396.56, "text": " You run it through a few layers of neural net.", "tokens": [50364, 264, 10686, 1542, 411, 341, 13, 50424, 50424, 509, 722, 365, 257, 2522, 295, 1412, 13, 50497, 50497, 509, 17366, 309, 11, 597, 1355, 291, 4159, 512, 3755, 13, 50630, 50630, 509, 1190, 309, 807, 257, 1326, 7914, 295, 18161, 2533, 13, 50808, 50808, 821, 311, 257, 48994, 7006, 597, 307, 26947, 294, 729, 5245, 11, 597, 307, 597, 295, 264, 23930, 51012, 51012, 307, 6183, 382, 257, 2445, 295, 264, 8482, 7316, 322, 264, 5598, 13, 51286, 51286, 400, 550, 291, 6794, 341, 365, 264, 3539, 1412, 300, 291, 13095, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.1478643218676249, "compression_ratio": 1.6538461538461537, "no_speech_prob": 1.5203158000076655e-05}, {"id": 672, "seek": 238768, "start": 2396.56, "end": 2400.64, "text": " There's a latent variable which is implicit in those models, which is which of the outputs", "tokens": [50364, 264, 10686, 1542, 411, 341, 13, 50424, 50424, 509, 722, 365, 257, 2522, 295, 1412, 13, 50497, 50497, 509, 17366, 309, 11, 597, 1355, 291, 4159, 512, 3755, 13, 50630, 50630, 509, 1190, 309, 807, 257, 1326, 7914, 295, 18161, 2533, 13, 50808, 50808, 821, 311, 257, 48994, 7006, 597, 307, 26947, 294, 729, 5245, 11, 597, 307, 597, 295, 264, 23930, 51012, 51012, 307, 6183, 382, 257, 2445, 295, 264, 8482, 7316, 322, 264, 5598, 13, 51286, 51286, 400, 550, 291, 6794, 341, 365, 264, 3539, 1412, 300, 291, 13095, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.1478643218676249, "compression_ratio": 1.6538461538461537, "no_speech_prob": 1.5203158000076655e-05}, {"id": 673, "seek": 238768, "start": 2400.64, "end": 2406.12, "text": " is picked as a function of the probability distribution on the output.", "tokens": [50364, 264, 10686, 1542, 411, 341, 13, 50424, 50424, 509, 722, 365, 257, 2522, 295, 1412, 13, 50497, 50497, 509, 17366, 309, 11, 597, 1355, 291, 4159, 512, 3755, 13, 50630, 50630, 509, 1190, 309, 807, 257, 1326, 7914, 295, 18161, 2533, 13, 50808, 50808, 821, 311, 257, 48994, 7006, 597, 307, 26947, 294, 729, 5245, 11, 597, 307, 597, 295, 264, 23930, 51012, 51012, 307, 6183, 382, 257, 2445, 295, 264, 8482, 7316, 322, 264, 5598, 13, 51286, 51286, 400, 550, 291, 6794, 341, 365, 264, 3539, 1412, 300, 291, 13095, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.1478643218676249, "compression_ratio": 1.6538461538461537, "no_speech_prob": 1.5203158000076655e-05}, {"id": 674, "seek": 238768, "start": 2406.12, "end": 2411.8799999999997, "text": " And then you compare this with the actual data that you observed.", "tokens": [50364, 264, 10686, 1542, 411, 341, 13, 50424, 50424, 509, 722, 365, 257, 2522, 295, 1412, 13, 50497, 50497, 509, 17366, 309, 11, 597, 1355, 291, 4159, 512, 3755, 13, 50630, 50630, 509, 1190, 309, 807, 257, 1326, 7914, 295, 18161, 2533, 13, 50808, 50808, 821, 311, 257, 48994, 7006, 597, 307, 26947, 294, 729, 5245, 11, 597, 307, 597, 295, 264, 23930, 51012, 51012, 307, 6183, 382, 257, 2445, 295, 264, 8482, 7316, 322, 264, 5598, 13, 51286, 51286, 400, 550, 291, 6794, 341, 365, 264, 3539, 1412, 300, 291, 13095, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.1478643218676249, "compression_ratio": 1.6538461538461537, "no_speech_prob": 1.5203158000076655e-05}, {"id": 675, "seek": 241188, "start": 2411.88, "end": 2418.32, "text": " And you train the entire system to minimize the reconstruction error.", "tokens": [50364, 400, 291, 3847, 264, 2302, 1185, 281, 17522, 264, 31565, 6713, 13, 50686, 50686, 400, 294, 10957, 1901, 11, 3410, 671, 437, 300, 775, 307, 300, 498, 291, 3811, 300, 428, 50878, 50878, 1412, 47138, 307, 341, 11, 729, 2793, 11, 291, 747, 257, 935, 11, 291, 17366, 309, 13, 51133, 51133, 407, 291, 909, 5658, 281, 309, 11, 337, 1365, 11, 294, 341, 1389, 13, 51320, 51320, 400, 550, 291, 3847, 428, 13075, 1602, 18161, 2533, 281, 4471, 341, 4846, 281, 300, 5598, 13, 51600, 51600, 509, 3154, 341, 382, 4846, 11, 293, 291, 980, 309, 291, 820, 4471, 309, 510, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.10392190808447722, "compression_ratio": 1.7377049180327868, "no_speech_prob": 6.539361947943689e-06}, {"id": 676, "seek": 241188, "start": 2418.32, "end": 2422.1600000000003, "text": " And in continuous space, conceptually what that does is that if you imagine that your", "tokens": [50364, 400, 291, 3847, 264, 2302, 1185, 281, 17522, 264, 31565, 6713, 13, 50686, 50686, 400, 294, 10957, 1901, 11, 3410, 671, 437, 300, 775, 307, 300, 498, 291, 3811, 300, 428, 50878, 50878, 1412, 47138, 307, 341, 11, 729, 2793, 11, 291, 747, 257, 935, 11, 291, 17366, 309, 13, 51133, 51133, 407, 291, 909, 5658, 281, 309, 11, 337, 1365, 11, 294, 341, 1389, 13, 51320, 51320, 400, 550, 291, 3847, 428, 13075, 1602, 18161, 2533, 281, 4471, 341, 4846, 281, 300, 5598, 13, 51600, 51600, 509, 3154, 341, 382, 4846, 11, 293, 291, 980, 309, 291, 820, 4471, 309, 510, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.10392190808447722, "compression_ratio": 1.7377049180327868, "no_speech_prob": 6.539361947943689e-06}, {"id": 677, "seek": 241188, "start": 2422.1600000000003, "end": 2427.26, "text": " data manifold is this, those points, you take a point, you corrupt it.", "tokens": [50364, 400, 291, 3847, 264, 2302, 1185, 281, 17522, 264, 31565, 6713, 13, 50686, 50686, 400, 294, 10957, 1901, 11, 3410, 671, 437, 300, 775, 307, 300, 498, 291, 3811, 300, 428, 50878, 50878, 1412, 47138, 307, 341, 11, 729, 2793, 11, 291, 747, 257, 935, 11, 291, 17366, 309, 13, 51133, 51133, 407, 291, 909, 5658, 281, 309, 11, 337, 1365, 11, 294, 341, 1389, 13, 51320, 51320, 400, 550, 291, 3847, 428, 13075, 1602, 18161, 2533, 281, 4471, 341, 4846, 281, 300, 5598, 13, 51600, 51600, 509, 3154, 341, 382, 4846, 11, 293, 291, 980, 309, 291, 820, 4471, 309, 510, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.10392190808447722, "compression_ratio": 1.7377049180327868, "no_speech_prob": 6.539361947943689e-06}, {"id": 678, "seek": 241188, "start": 2427.26, "end": 2431.0, "text": " So you add noise to it, for example, in this case.", "tokens": [50364, 400, 291, 3847, 264, 2302, 1185, 281, 17522, 264, 31565, 6713, 13, 50686, 50686, 400, 294, 10957, 1901, 11, 3410, 671, 437, 300, 775, 307, 300, 498, 291, 3811, 300, 428, 50878, 50878, 1412, 47138, 307, 341, 11, 729, 2793, 11, 291, 747, 257, 935, 11, 291, 17366, 309, 13, 51133, 51133, 407, 291, 909, 5658, 281, 309, 11, 337, 1365, 11, 294, 341, 1389, 13, 51320, 51320, 400, 550, 291, 3847, 428, 13075, 1602, 18161, 2533, 281, 4471, 341, 4846, 281, 300, 5598, 13, 51600, 51600, 509, 3154, 341, 382, 4846, 11, 293, 291, 980, 309, 291, 820, 4471, 309, 510, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.10392190808447722, "compression_ratio": 1.7377049180327868, "no_speech_prob": 6.539361947943689e-06}, {"id": 679, "seek": 241188, "start": 2431.0, "end": 2436.6, "text": " And then you train your parameterized neural net to map this input to that output.", "tokens": [50364, 400, 291, 3847, 264, 2302, 1185, 281, 17522, 264, 31565, 6713, 13, 50686, 50686, 400, 294, 10957, 1901, 11, 3410, 671, 437, 300, 775, 307, 300, 498, 291, 3811, 300, 428, 50878, 50878, 1412, 47138, 307, 341, 11, 729, 2793, 11, 291, 747, 257, 935, 11, 291, 17366, 309, 13, 51133, 51133, 407, 291, 909, 5658, 281, 309, 11, 337, 1365, 11, 294, 341, 1389, 13, 51320, 51320, 400, 550, 291, 3847, 428, 13075, 1602, 18161, 2533, 281, 4471, 341, 4846, 281, 300, 5598, 13, 51600, 51600, 509, 3154, 341, 382, 4846, 11, 293, 291, 980, 309, 291, 820, 4471, 309, 510, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.10392190808447722, "compression_ratio": 1.7377049180327868, "no_speech_prob": 6.539361947943689e-06}, {"id": 680, "seek": 241188, "start": 2436.6, "end": 2441.6400000000003, "text": " You feed this as input, and you tell it you should map it here.", "tokens": [50364, 400, 291, 3847, 264, 2302, 1185, 281, 17522, 264, 31565, 6713, 13, 50686, 50686, 400, 294, 10957, 1901, 11, 3410, 671, 437, 300, 775, 307, 300, 498, 291, 3811, 300, 428, 50878, 50878, 1412, 47138, 307, 341, 11, 729, 2793, 11, 291, 747, 257, 935, 11, 291, 17366, 309, 13, 51133, 51133, 407, 291, 909, 5658, 281, 309, 11, 337, 1365, 11, 294, 341, 1389, 13, 51320, 51320, 400, 550, 291, 3847, 428, 13075, 1602, 18161, 2533, 281, 4471, 341, 4846, 281, 300, 5598, 13, 51600, 51600, 509, 3154, 341, 382, 4846, 11, 293, 291, 980, 309, 291, 820, 4471, 309, 510, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.10392190808447722, "compression_ratio": 1.7377049180327868, "no_speech_prob": 6.539361947943689e-06}, {"id": 681, "seek": 244164, "start": 2441.64, "end": 2446.2799999999997, "text": " Once this system is trained, you can actually plot the vector field of, you know, those", "tokens": [50364, 3443, 341, 1185, 307, 8895, 11, 291, 393, 767, 7542, 264, 8062, 2519, 295, 11, 291, 458, 11, 729, 50596, 50596, 366, 707, 18875, 300, 935, 294, 264, 3513, 689, 264, 18161, 2533, 11, 498, 291, 3154, 365, 341, 50792, 50792, 4846, 11, 576, 747, 291, 13, 50870, 50870, 286, 914, 11, 291, 362, 281, 4641, 268, 264, 551, 11, 457, 436, 1920, 439, 747, 291, 281, 264, 47138, 510, 13, 51284, 51284, 400, 264, 2017, 510, 16203, 264, 2281, 13, 51358, 51358, 407, 264, 2281, 307, 2295, 322, 264, 47138, 11, 597, 307, 437, 291, 528, 13, 51536, 51536, 467, 311, 1090, 2380, 11, 3993, 456, 311, 257, 1154, 558, 510, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12994769495776576, "compression_ratio": 1.6954887218045114, "no_speech_prob": 2.58618329098681e-05}, {"id": 682, "seek": 244164, "start": 2446.2799999999997, "end": 2450.2, "text": " are little vectors that point in the direction where the neural net, if you feed with this", "tokens": [50364, 3443, 341, 1185, 307, 8895, 11, 291, 393, 767, 7542, 264, 8062, 2519, 295, 11, 291, 458, 11, 729, 50596, 50596, 366, 707, 18875, 300, 935, 294, 264, 3513, 689, 264, 18161, 2533, 11, 498, 291, 3154, 365, 341, 50792, 50792, 4846, 11, 576, 747, 291, 13, 50870, 50870, 286, 914, 11, 291, 362, 281, 4641, 268, 264, 551, 11, 457, 436, 1920, 439, 747, 291, 281, 264, 47138, 510, 13, 51284, 51284, 400, 264, 2017, 510, 16203, 264, 2281, 13, 51358, 51358, 407, 264, 2281, 307, 2295, 322, 264, 47138, 11, 597, 307, 437, 291, 528, 13, 51536, 51536, 467, 311, 1090, 2380, 11, 3993, 456, 311, 257, 1154, 558, 510, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12994769495776576, "compression_ratio": 1.6954887218045114, "no_speech_prob": 2.58618329098681e-05}, {"id": 683, "seek": 244164, "start": 2450.2, "end": 2451.7599999999998, "text": " input, would take you.", "tokens": [50364, 3443, 341, 1185, 307, 8895, 11, 291, 393, 767, 7542, 264, 8062, 2519, 295, 11, 291, 458, 11, 729, 50596, 50596, 366, 707, 18875, 300, 935, 294, 264, 3513, 689, 264, 18161, 2533, 11, 498, 291, 3154, 365, 341, 50792, 50792, 4846, 11, 576, 747, 291, 13, 50870, 50870, 286, 914, 11, 291, 362, 281, 4641, 268, 264, 551, 11, 457, 436, 1920, 439, 747, 291, 281, 264, 47138, 510, 13, 51284, 51284, 400, 264, 2017, 510, 16203, 264, 2281, 13, 51358, 51358, 407, 264, 2281, 307, 2295, 322, 264, 47138, 11, 597, 307, 437, 291, 528, 13, 51536, 51536, 467, 311, 1090, 2380, 11, 3993, 456, 311, 257, 1154, 558, 510, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12994769495776576, "compression_ratio": 1.6954887218045114, "no_speech_prob": 2.58618329098681e-05}, {"id": 684, "seek": 244164, "start": 2451.7599999999998, "end": 2460.04, "text": " I mean, you have to lengthen the thing, but they almost all take you to the manifold here.", "tokens": [50364, 3443, 341, 1185, 307, 8895, 11, 291, 393, 767, 7542, 264, 8062, 2519, 295, 11, 291, 458, 11, 729, 50596, 50596, 366, 707, 18875, 300, 935, 294, 264, 3513, 689, 264, 18161, 2533, 11, 498, 291, 3154, 365, 341, 50792, 50792, 4846, 11, 576, 747, 291, 13, 50870, 50870, 286, 914, 11, 291, 362, 281, 4641, 268, 264, 551, 11, 457, 436, 1920, 439, 747, 291, 281, 264, 47138, 510, 13, 51284, 51284, 400, 264, 2017, 510, 16203, 264, 2281, 13, 51358, 51358, 407, 264, 2281, 307, 2295, 322, 264, 47138, 11, 597, 307, 437, 291, 528, 13, 51536, 51536, 467, 311, 1090, 2380, 11, 3993, 456, 311, 257, 1154, 558, 510, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12994769495776576, "compression_ratio": 1.6954887218045114, "no_speech_prob": 2.58618329098681e-05}, {"id": 685, "seek": 244164, "start": 2460.04, "end": 2461.52, "text": " And the color here indicates the energy.", "tokens": [50364, 3443, 341, 1185, 307, 8895, 11, 291, 393, 767, 7542, 264, 8062, 2519, 295, 11, 291, 458, 11, 729, 50596, 50596, 366, 707, 18875, 300, 935, 294, 264, 3513, 689, 264, 18161, 2533, 11, 498, 291, 3154, 365, 341, 50792, 50792, 4846, 11, 576, 747, 291, 13, 50870, 50870, 286, 914, 11, 291, 362, 281, 4641, 268, 264, 551, 11, 457, 436, 1920, 439, 747, 291, 281, 264, 47138, 510, 13, 51284, 51284, 400, 264, 2017, 510, 16203, 264, 2281, 13, 51358, 51358, 407, 264, 2281, 307, 2295, 322, 264, 47138, 11, 597, 307, 437, 291, 528, 13, 51536, 51536, 467, 311, 1090, 2380, 11, 3993, 456, 311, 257, 1154, 558, 510, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12994769495776576, "compression_ratio": 1.6954887218045114, "no_speech_prob": 2.58618329098681e-05}, {"id": 686, "seek": 244164, "start": 2461.52, "end": 2465.08, "text": " So the energy is low on the manifold, which is what you want.", "tokens": [50364, 3443, 341, 1185, 307, 8895, 11, 291, 393, 767, 7542, 264, 8062, 2519, 295, 11, 291, 458, 11, 729, 50596, 50596, 366, 707, 18875, 300, 935, 294, 264, 3513, 689, 264, 18161, 2533, 11, 498, 291, 3154, 365, 341, 50792, 50792, 4846, 11, 576, 747, 291, 13, 50870, 50870, 286, 914, 11, 291, 362, 281, 4641, 268, 264, 551, 11, 457, 436, 1920, 439, 747, 291, 281, 264, 47138, 510, 13, 51284, 51284, 400, 264, 2017, 510, 16203, 264, 2281, 13, 51358, 51358, 407, 264, 2281, 307, 2295, 322, 264, 47138, 11, 597, 307, 437, 291, 528, 13, 51536, 51536, 467, 311, 1090, 2380, 11, 3993, 456, 311, 257, 1154, 558, 510, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12994769495776576, "compression_ratio": 1.6954887218045114, "no_speech_prob": 2.58618329098681e-05}, {"id": 687, "seek": 244164, "start": 2465.08, "end": 2467.56, "text": " It's high outside, except there's a problem right here.", "tokens": [50364, 3443, 341, 1185, 307, 8895, 11, 291, 393, 767, 7542, 264, 8062, 2519, 295, 11, 291, 458, 11, 729, 50596, 50596, 366, 707, 18875, 300, 935, 294, 264, 3513, 689, 264, 18161, 2533, 11, 498, 291, 3154, 365, 341, 50792, 50792, 4846, 11, 576, 747, 291, 13, 50870, 50870, 286, 914, 11, 291, 362, 281, 4641, 268, 264, 551, 11, 457, 436, 1920, 439, 747, 291, 281, 264, 47138, 510, 13, 51284, 51284, 400, 264, 2017, 510, 16203, 264, 2281, 13, 51358, 51358, 407, 264, 2281, 307, 2295, 322, 264, 47138, 11, 597, 307, 437, 291, 528, 13, 51536, 51536, 467, 311, 1090, 2380, 11, 3993, 456, 311, 257, 1154, 558, 510, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12994769495776576, "compression_ratio": 1.6954887218045114, "no_speech_prob": 2.58618329098681e-05}, {"id": 688, "seek": 246756, "start": 2467.56, "end": 2471.7999999999997, "text": " There's a ridge here, and it's kind of a flat ridge, which is not good.", "tokens": [50364, 821, 311, 257, 34651, 510, 11, 293, 309, 311, 733, 295, 257, 4962, 34651, 11, 597, 307, 406, 665, 13, 50576, 50576, 407, 510, 264, 31565, 6713, 307, 767, 4018, 11, 570, 264, 1185, 11, 562, 309, 311, 8895, 11, 50766, 50766, 393, 380, 4536, 1968, 281, 352, 341, 636, 420, 300, 636, 13, 50864, 50864, 407, 456, 311, 257, 13717, 365, 341, 551, 13, 51048, 51048, 821, 366, 2098, 281, 3191, 309, 11, 457, 406, 1850, 13, 51226, 51226, 440, 2135, 2734, 365, 341, 307, 300, 309, 1177, 380, 4373, 731, 294, 1090, 10139, 11, 570, 294, 1090, 51450, 51450, 10139, 456, 366, 867, 11, 867, 11, 867, 2098, 281, 312, 819, 490, 257, 6889, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12792668460814421, "compression_ratio": 1.7817460317460319, "no_speech_prob": 1.6700912965461612e-05}, {"id": 689, "seek": 246756, "start": 2471.7999999999997, "end": 2475.6, "text": " So here the reconstruction error is actually zero, because the system, when it's trained,", "tokens": [50364, 821, 311, 257, 34651, 510, 11, 293, 309, 311, 733, 295, 257, 4962, 34651, 11, 597, 307, 406, 665, 13, 50576, 50576, 407, 510, 264, 31565, 6713, 307, 767, 4018, 11, 570, 264, 1185, 11, 562, 309, 311, 8895, 11, 50766, 50766, 393, 380, 4536, 1968, 281, 352, 341, 636, 420, 300, 636, 13, 50864, 50864, 407, 456, 311, 257, 13717, 365, 341, 551, 13, 51048, 51048, 821, 366, 2098, 281, 3191, 309, 11, 457, 406, 1850, 13, 51226, 51226, 440, 2135, 2734, 365, 341, 307, 300, 309, 1177, 380, 4373, 731, 294, 1090, 10139, 11, 570, 294, 1090, 51450, 51450, 10139, 456, 366, 867, 11, 867, 11, 867, 2098, 281, 312, 819, 490, 257, 6889, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12792668460814421, "compression_ratio": 1.7817460317460319, "no_speech_prob": 1.6700912965461612e-05}, {"id": 690, "seek": 246756, "start": 2475.6, "end": 2477.56, "text": " can't decide whether to go this way or that way.", "tokens": [50364, 821, 311, 257, 34651, 510, 11, 293, 309, 311, 733, 295, 257, 4962, 34651, 11, 597, 307, 406, 665, 13, 50576, 50576, 407, 510, 264, 31565, 6713, 307, 767, 4018, 11, 570, 264, 1185, 11, 562, 309, 311, 8895, 11, 50766, 50766, 393, 380, 4536, 1968, 281, 352, 341, 636, 420, 300, 636, 13, 50864, 50864, 407, 456, 311, 257, 13717, 365, 341, 551, 13, 51048, 51048, 821, 366, 2098, 281, 3191, 309, 11, 457, 406, 1850, 13, 51226, 51226, 440, 2135, 2734, 365, 341, 307, 300, 309, 1177, 380, 4373, 731, 294, 1090, 10139, 11, 570, 294, 1090, 51450, 51450, 10139, 456, 366, 867, 11, 867, 11, 867, 2098, 281, 312, 819, 490, 257, 6889, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12792668460814421, "compression_ratio": 1.7817460317460319, "no_speech_prob": 1.6700912965461612e-05}, {"id": 691, "seek": 246756, "start": 2477.56, "end": 2481.24, "text": " So there's a flaw with this thing.", "tokens": [50364, 821, 311, 257, 34651, 510, 11, 293, 309, 311, 733, 295, 257, 4962, 34651, 11, 597, 307, 406, 665, 13, 50576, 50576, 407, 510, 264, 31565, 6713, 307, 767, 4018, 11, 570, 264, 1185, 11, 562, 309, 311, 8895, 11, 50766, 50766, 393, 380, 4536, 1968, 281, 352, 341, 636, 420, 300, 636, 13, 50864, 50864, 407, 456, 311, 257, 13717, 365, 341, 551, 13, 51048, 51048, 821, 366, 2098, 281, 3191, 309, 11, 457, 406, 1850, 13, 51226, 51226, 440, 2135, 2734, 365, 341, 307, 300, 309, 1177, 380, 4373, 731, 294, 1090, 10139, 11, 570, 294, 1090, 51450, 51450, 10139, 456, 366, 867, 11, 867, 11, 867, 2098, 281, 312, 819, 490, 257, 6889, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12792668460814421, "compression_ratio": 1.7817460317460319, "no_speech_prob": 1.6700912965461612e-05}, {"id": 692, "seek": 246756, "start": 2481.24, "end": 2484.7999999999997, "text": " There are ways to fix it, but not clear.", "tokens": [50364, 821, 311, 257, 34651, 510, 11, 293, 309, 311, 733, 295, 257, 4962, 34651, 11, 597, 307, 406, 665, 13, 50576, 50576, 407, 510, 264, 31565, 6713, 307, 767, 4018, 11, 570, 264, 1185, 11, 562, 309, 311, 8895, 11, 50766, 50766, 393, 380, 4536, 1968, 281, 352, 341, 636, 420, 300, 636, 13, 50864, 50864, 407, 456, 311, 257, 13717, 365, 341, 551, 13, 51048, 51048, 821, 366, 2098, 281, 3191, 309, 11, 457, 406, 1850, 13, 51226, 51226, 440, 2135, 2734, 365, 341, 307, 300, 309, 1177, 380, 4373, 731, 294, 1090, 10139, 11, 570, 294, 1090, 51450, 51450, 10139, 456, 366, 867, 11, 867, 11, 867, 2098, 281, 312, 819, 490, 257, 6889, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12792668460814421, "compression_ratio": 1.7817460317460319, "no_speech_prob": 1.6700912965461612e-05}, {"id": 693, "seek": 246756, "start": 2484.7999999999997, "end": 2489.2799999999997, "text": " The main issue with this is that it doesn't scale well in high dimension, because in high", "tokens": [50364, 821, 311, 257, 34651, 510, 11, 293, 309, 311, 733, 295, 257, 4962, 34651, 11, 597, 307, 406, 665, 13, 50576, 50576, 407, 510, 264, 31565, 6713, 307, 767, 4018, 11, 570, 264, 1185, 11, 562, 309, 311, 8895, 11, 50766, 50766, 393, 380, 4536, 1968, 281, 352, 341, 636, 420, 300, 636, 13, 50864, 50864, 407, 456, 311, 257, 13717, 365, 341, 551, 13, 51048, 51048, 821, 366, 2098, 281, 3191, 309, 11, 457, 406, 1850, 13, 51226, 51226, 440, 2135, 2734, 365, 341, 307, 300, 309, 1177, 380, 4373, 731, 294, 1090, 10139, 11, 570, 294, 1090, 51450, 51450, 10139, 456, 366, 867, 11, 867, 11, 867, 2098, 281, 312, 819, 490, 257, 6889, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12792668460814421, "compression_ratio": 1.7817460317460319, "no_speech_prob": 1.6700912965461612e-05}, {"id": 694, "seek": 246756, "start": 2489.2799999999997, "end": 2493.6, "text": " dimension there are many, many, many ways to be different from a sample.", "tokens": [50364, 821, 311, 257, 34651, 510, 11, 293, 309, 311, 733, 295, 257, 4962, 34651, 11, 597, 307, 406, 665, 13, 50576, 50576, 407, 510, 264, 31565, 6713, 307, 767, 4018, 11, 570, 264, 1185, 11, 562, 309, 311, 8895, 11, 50766, 50766, 393, 380, 4536, 1968, 281, 352, 341, 636, 420, 300, 636, 13, 50864, 50864, 407, 456, 311, 257, 13717, 365, 341, 551, 13, 51048, 51048, 821, 366, 2098, 281, 3191, 309, 11, 457, 406, 1850, 13, 51226, 51226, 440, 2135, 2734, 365, 341, 307, 300, 309, 1177, 380, 4373, 731, 294, 1090, 10139, 11, 570, 294, 1090, 51450, 51450, 10139, 456, 366, 867, 11, 867, 11, 867, 2098, 281, 312, 819, 490, 257, 6889, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12792668460814421, "compression_ratio": 1.7817460317460319, "no_speech_prob": 1.6700912965461612e-05}, {"id": 695, "seek": 249360, "start": 2493.6, "end": 2498.3199999999997, "text": " And you're never going to explore the entire dimension of all the space.", "tokens": [50364, 400, 291, 434, 1128, 516, 281, 6839, 264, 2302, 10139, 295, 439, 264, 1901, 13, 50600, 50600, 1545, 307, 341, 257, 13717, 30, 50750, 50750, 286, 914, 11, 309, 311, 558, 11, 558, 30, 50848, 50848, 467, 727, 312, 2139, 13, 50938, 50938, 467, 727, 312, 2139, 11, 457, 264, 1154, 295, 1228, 264, 31565, 6713, 307, 300, 510, 264, 51096, 51096, 31565, 6713, 307, 4018, 11, 597, 1355, 264, 2281, 307, 4018, 13, 51256, 51256, 467, 311, 1578, 13, 51306, 51306, 467, 311, 257, 903, 25796, 2295, 2281, 551, 13, 51470, 51470, 821, 366, 2098, 281, 3191, 309, 300, 366, 406, 7084, 11, 597, 286, 478, 406, 516, 281, 352, 666, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2547902490338709, "compression_ratio": 1.7739130434782608, "no_speech_prob": 6.746493909304263e-06}, {"id": 696, "seek": 249360, "start": 2498.3199999999997, "end": 2501.3199999999997, "text": " Why is this a flaw?", "tokens": [50364, 400, 291, 434, 1128, 516, 281, 6839, 264, 2302, 10139, 295, 439, 264, 1901, 13, 50600, 50600, 1545, 307, 341, 257, 13717, 30, 50750, 50750, 286, 914, 11, 309, 311, 558, 11, 558, 30, 50848, 50848, 467, 727, 312, 2139, 13, 50938, 50938, 467, 727, 312, 2139, 11, 457, 264, 1154, 295, 1228, 264, 31565, 6713, 307, 300, 510, 264, 51096, 51096, 31565, 6713, 307, 4018, 11, 597, 1355, 264, 2281, 307, 4018, 13, 51256, 51256, 467, 311, 1578, 13, 51306, 51306, 467, 311, 257, 903, 25796, 2295, 2281, 551, 13, 51470, 51470, 821, 366, 2098, 281, 3191, 309, 300, 366, 406, 7084, 11, 597, 286, 478, 406, 516, 281, 352, 666, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2547902490338709, "compression_ratio": 1.7739130434782608, "no_speech_prob": 6.746493909304263e-06}, {"id": 697, "seek": 249360, "start": 2501.3199999999997, "end": 2503.2799999999997, "text": " I mean, it's right, right?", "tokens": [50364, 400, 291, 434, 1128, 516, 281, 6839, 264, 2302, 10139, 295, 439, 264, 1901, 13, 50600, 50600, 1545, 307, 341, 257, 13717, 30, 50750, 50750, 286, 914, 11, 309, 311, 558, 11, 558, 30, 50848, 50848, 467, 727, 312, 2139, 13, 50938, 50938, 467, 727, 312, 2139, 11, 457, 264, 1154, 295, 1228, 264, 31565, 6713, 307, 300, 510, 264, 51096, 51096, 31565, 6713, 307, 4018, 11, 597, 1355, 264, 2281, 307, 4018, 13, 51256, 51256, 467, 311, 1578, 13, 51306, 51306, 467, 311, 257, 903, 25796, 2295, 2281, 551, 13, 51470, 51470, 821, 366, 2098, 281, 3191, 309, 300, 366, 406, 7084, 11, 597, 286, 478, 406, 516, 281, 352, 666, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2547902490338709, "compression_ratio": 1.7739130434782608, "no_speech_prob": 6.746493909304263e-06}, {"id": 698, "seek": 249360, "start": 2503.2799999999997, "end": 2505.08, "text": " It could be either.", "tokens": [50364, 400, 291, 434, 1128, 516, 281, 6839, 264, 2302, 10139, 295, 439, 264, 1901, 13, 50600, 50600, 1545, 307, 341, 257, 13717, 30, 50750, 50750, 286, 914, 11, 309, 311, 558, 11, 558, 30, 50848, 50848, 467, 727, 312, 2139, 13, 50938, 50938, 467, 727, 312, 2139, 11, 457, 264, 1154, 295, 1228, 264, 31565, 6713, 307, 300, 510, 264, 51096, 51096, 31565, 6713, 307, 4018, 11, 597, 1355, 264, 2281, 307, 4018, 13, 51256, 51256, 467, 311, 1578, 13, 51306, 51306, 467, 311, 257, 903, 25796, 2295, 2281, 551, 13, 51470, 51470, 821, 366, 2098, 281, 3191, 309, 300, 366, 406, 7084, 11, 597, 286, 478, 406, 516, 281, 352, 666, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2547902490338709, "compression_ratio": 1.7739130434782608, "no_speech_prob": 6.746493909304263e-06}, {"id": 699, "seek": 249360, "start": 2505.08, "end": 2508.24, "text": " It could be either, but the problem of using the reconstruction error is that here the", "tokens": [50364, 400, 291, 434, 1128, 516, 281, 6839, 264, 2302, 10139, 295, 439, 264, 1901, 13, 50600, 50600, 1545, 307, 341, 257, 13717, 30, 50750, 50750, 286, 914, 11, 309, 311, 558, 11, 558, 30, 50848, 50848, 467, 727, 312, 2139, 13, 50938, 50938, 467, 727, 312, 2139, 11, 457, 264, 1154, 295, 1228, 264, 31565, 6713, 307, 300, 510, 264, 51096, 51096, 31565, 6713, 307, 4018, 11, 597, 1355, 264, 2281, 307, 4018, 13, 51256, 51256, 467, 311, 1578, 13, 51306, 51306, 467, 311, 257, 903, 25796, 2295, 2281, 551, 13, 51470, 51470, 821, 366, 2098, 281, 3191, 309, 300, 366, 406, 7084, 11, 597, 286, 478, 406, 516, 281, 352, 666, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2547902490338709, "compression_ratio": 1.7739130434782608, "no_speech_prob": 6.746493909304263e-06}, {"id": 700, "seek": 249360, "start": 2508.24, "end": 2511.44, "text": " reconstruction error is zero, which means the energy is zero.", "tokens": [50364, 400, 291, 434, 1128, 516, 281, 6839, 264, 2302, 10139, 295, 439, 264, 1901, 13, 50600, 50600, 1545, 307, 341, 257, 13717, 30, 50750, 50750, 286, 914, 11, 309, 311, 558, 11, 558, 30, 50848, 50848, 467, 727, 312, 2139, 13, 50938, 50938, 467, 727, 312, 2139, 11, 457, 264, 1154, 295, 1228, 264, 31565, 6713, 307, 300, 510, 264, 51096, 51096, 31565, 6713, 307, 4018, 11, 597, 1355, 264, 2281, 307, 4018, 13, 51256, 51256, 467, 311, 1578, 13, 51306, 51306, 467, 311, 257, 903, 25796, 2295, 2281, 551, 13, 51470, 51470, 821, 366, 2098, 281, 3191, 309, 300, 366, 406, 7084, 11, 597, 286, 478, 406, 516, 281, 352, 666, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2547902490338709, "compression_ratio": 1.7739130434782608, "no_speech_prob": 6.746493909304263e-06}, {"id": 701, "seek": 249360, "start": 2511.44, "end": 2512.44, "text": " It's bad.", "tokens": [50364, 400, 291, 434, 1128, 516, 281, 6839, 264, 2302, 10139, 295, 439, 264, 1901, 13, 50600, 50600, 1545, 307, 341, 257, 13717, 30, 50750, 50750, 286, 914, 11, 309, 311, 558, 11, 558, 30, 50848, 50848, 467, 727, 312, 2139, 13, 50938, 50938, 467, 727, 312, 2139, 11, 457, 264, 1154, 295, 1228, 264, 31565, 6713, 307, 300, 510, 264, 51096, 51096, 31565, 6713, 307, 4018, 11, 597, 1355, 264, 2281, 307, 4018, 13, 51256, 51256, 467, 311, 1578, 13, 51306, 51306, 467, 311, 257, 903, 25796, 2295, 2281, 551, 13, 51470, 51470, 821, 366, 2098, 281, 3191, 309, 300, 366, 406, 7084, 11, 597, 286, 478, 406, 516, 281, 352, 666, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2547902490338709, "compression_ratio": 1.7739130434782608, "no_speech_prob": 6.746493909304263e-06}, {"id": 702, "seek": 249360, "start": 2512.44, "end": 2515.72, "text": " It's a phantom low energy thing.", "tokens": [50364, 400, 291, 434, 1128, 516, 281, 6839, 264, 2302, 10139, 295, 439, 264, 1901, 13, 50600, 50600, 1545, 307, 341, 257, 13717, 30, 50750, 50750, 286, 914, 11, 309, 311, 558, 11, 558, 30, 50848, 50848, 467, 727, 312, 2139, 13, 50938, 50938, 467, 727, 312, 2139, 11, 457, 264, 1154, 295, 1228, 264, 31565, 6713, 307, 300, 510, 264, 51096, 51096, 31565, 6713, 307, 4018, 11, 597, 1355, 264, 2281, 307, 4018, 13, 51256, 51256, 467, 311, 1578, 13, 51306, 51306, 467, 311, 257, 903, 25796, 2295, 2281, 551, 13, 51470, 51470, 821, 366, 2098, 281, 3191, 309, 300, 366, 406, 7084, 11, 597, 286, 478, 406, 516, 281, 352, 666, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2547902490338709, "compression_ratio": 1.7739130434782608, "no_speech_prob": 6.746493909304263e-06}, {"id": 703, "seek": 249360, "start": 2515.72, "end": 2522.56, "text": " There are ways to fix it that are not cheap, which I'm not going to go into.", "tokens": [50364, 400, 291, 434, 1128, 516, 281, 6839, 264, 2302, 10139, 295, 439, 264, 1901, 13, 50600, 50600, 1545, 307, 341, 257, 13717, 30, 50750, 50750, 286, 914, 11, 309, 311, 558, 11, 558, 30, 50848, 50848, 467, 727, 312, 2139, 13, 50938, 50938, 467, 727, 312, 2139, 11, 457, 264, 1154, 295, 1228, 264, 31565, 6713, 307, 300, 510, 264, 51096, 51096, 31565, 6713, 307, 4018, 11, 597, 1355, 264, 2281, 307, 4018, 13, 51256, 51256, 467, 311, 1578, 13, 51306, 51306, 467, 311, 257, 903, 25796, 2295, 2281, 551, 13, 51470, 51470, 821, 366, 2098, 281, 3191, 309, 300, 366, 406, 7084, 11, 597, 286, 478, 406, 516, 281, 352, 666, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2547902490338709, "compression_ratio": 1.7739130434782608, "no_speech_prob": 6.746493909304263e-06}, {"id": 704, "seek": 252256, "start": 2522.56, "end": 2525.4, "text": " So prediction with latent variables.", "tokens": [50364, 407, 17630, 365, 48994, 9102, 13, 50506, 50506, 1018, 286, 1907, 291, 949, 11, 286, 976, 291, 364, 2031, 11, 286, 976, 291, 257, 288, 11, 291, 915, 257, 710, 300, 4464, 5660, 264, 31565, 50822, 50822, 6713, 13, 50922, 50922, 400, 7015, 11, 570, 498, 710, 575, 1090, 6042, 11, 341, 307, 516, 281, 976, 291, 257, 4962, 2281, 3753, 13, 51229, 51229, 407, 264, 3827, 281, 341, 307, 291, 3890, 1125, 710, 13, 51358, 51358, 509, 1936, 909, 257, 1433, 294, 264, 2281, 11, 13607, 1413, 367, 89, 11, 689, 367, 89, 8000, 11, 1936, 5112, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.11773403953103458, "compression_ratio": 1.61864406779661, "no_speech_prob": 1.3006138033233583e-05}, {"id": 705, "seek": 252256, "start": 2525.4, "end": 2531.72, "text": " As I told you before, I give you an x, I give you a y, you find a z that minimizes the reconstruction", "tokens": [50364, 407, 17630, 365, 48994, 9102, 13, 50506, 50506, 1018, 286, 1907, 291, 949, 11, 286, 976, 291, 364, 2031, 11, 286, 976, 291, 257, 288, 11, 291, 915, 257, 710, 300, 4464, 5660, 264, 31565, 50822, 50822, 6713, 13, 50922, 50922, 400, 7015, 11, 570, 498, 710, 575, 1090, 6042, 11, 341, 307, 516, 281, 976, 291, 257, 4962, 2281, 3753, 13, 51229, 51229, 407, 264, 3827, 281, 341, 307, 291, 3890, 1125, 710, 13, 51358, 51358, 509, 1936, 909, 257, 1433, 294, 264, 2281, 11, 13607, 1413, 367, 89, 11, 689, 367, 89, 8000, 11, 1936, 5112, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.11773403953103458, "compression_ratio": 1.61864406779661, "no_speech_prob": 1.3006138033233583e-05}, {"id": 706, "seek": 252256, "start": 2531.72, "end": 2533.72, "text": " error.", "tokens": [50364, 407, 17630, 365, 48994, 9102, 13, 50506, 50506, 1018, 286, 1907, 291, 949, 11, 286, 976, 291, 364, 2031, 11, 286, 976, 291, 257, 288, 11, 291, 915, 257, 710, 300, 4464, 5660, 264, 31565, 50822, 50822, 6713, 13, 50922, 50922, 400, 7015, 11, 570, 498, 710, 575, 1090, 6042, 11, 341, 307, 516, 281, 976, 291, 257, 4962, 2281, 3753, 13, 51229, 51229, 407, 264, 3827, 281, 341, 307, 291, 3890, 1125, 710, 13, 51358, 51358, 509, 1936, 909, 257, 1433, 294, 264, 2281, 11, 13607, 1413, 367, 89, 11, 689, 367, 89, 8000, 11, 1936, 5112, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.11773403953103458, "compression_ratio": 1.61864406779661, "no_speech_prob": 1.3006138033233583e-05}, {"id": 707, "seek": 252256, "start": 2533.72, "end": 2539.86, "text": " And unfortunately, because if z has high capacity, this is going to give you a flat energy surface.", "tokens": [50364, 407, 17630, 365, 48994, 9102, 13, 50506, 50506, 1018, 286, 1907, 291, 949, 11, 286, 976, 291, 364, 2031, 11, 286, 976, 291, 257, 288, 11, 291, 915, 257, 710, 300, 4464, 5660, 264, 31565, 50822, 50822, 6713, 13, 50922, 50922, 400, 7015, 11, 570, 498, 710, 575, 1090, 6042, 11, 341, 307, 516, 281, 976, 291, 257, 4962, 2281, 3753, 13, 51229, 51229, 407, 264, 3827, 281, 341, 307, 291, 3890, 1125, 710, 13, 51358, 51358, 509, 1936, 909, 257, 1433, 294, 264, 2281, 11, 13607, 1413, 367, 89, 11, 689, 367, 89, 8000, 11, 1936, 5112, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.11773403953103458, "compression_ratio": 1.61864406779661, "no_speech_prob": 1.3006138033233583e-05}, {"id": 708, "seek": 252256, "start": 2539.86, "end": 2542.44, "text": " So the solution to this is you regularize z.", "tokens": [50364, 407, 17630, 365, 48994, 9102, 13, 50506, 50506, 1018, 286, 1907, 291, 949, 11, 286, 976, 291, 364, 2031, 11, 286, 976, 291, 257, 288, 11, 291, 915, 257, 710, 300, 4464, 5660, 264, 31565, 50822, 50822, 6713, 13, 50922, 50922, 400, 7015, 11, 570, 498, 710, 575, 1090, 6042, 11, 341, 307, 516, 281, 976, 291, 257, 4962, 2281, 3753, 13, 51229, 51229, 407, 264, 3827, 281, 341, 307, 291, 3890, 1125, 710, 13, 51358, 51358, 509, 1936, 909, 257, 1433, 294, 264, 2281, 11, 13607, 1413, 367, 89, 11, 689, 367, 89, 8000, 11, 1936, 5112, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.11773403953103458, "compression_ratio": 1.61864406779661, "no_speech_prob": 1.3006138033233583e-05}, {"id": 709, "seek": 252256, "start": 2542.44, "end": 2549.52, "text": " You basically add a term in the energy, lambda times rz, where rz measures, basically tells", "tokens": [50364, 407, 17630, 365, 48994, 9102, 13, 50506, 50506, 1018, 286, 1907, 291, 949, 11, 286, 976, 291, 364, 2031, 11, 286, 976, 291, 257, 288, 11, 291, 915, 257, 710, 300, 4464, 5660, 264, 31565, 50822, 50822, 6713, 13, 50922, 50922, 400, 7015, 11, 570, 498, 710, 575, 1090, 6042, 11, 341, 307, 516, 281, 976, 291, 257, 4962, 2281, 3753, 13, 51229, 51229, 407, 264, 3827, 281, 341, 307, 291, 3890, 1125, 710, 13, 51358, 51358, 509, 1936, 909, 257, 1433, 294, 264, 2281, 11, 13607, 1413, 367, 89, 11, 689, 367, 89, 8000, 11, 1936, 5112, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.11773403953103458, "compression_ratio": 1.61864406779661, "no_speech_prob": 1.3006138033233583e-05}, {"id": 710, "seek": 254952, "start": 2549.52, "end": 2553.96, "text": " you if you are in a particular region of space that you're happy with.", "tokens": [50364, 291, 498, 291, 366, 294, 257, 1729, 4458, 295, 1901, 300, 291, 434, 2055, 365, 13, 50586, 50586, 400, 370, 1936, 291, 1689, 257, 3218, 337, 1455, 710, 352, 2380, 295, 300, 4458, 13, 50756, 50756, 316, 665, 1365, 295, 341, 11, 597, 307, 4963, 281, 867, 295, 291, 11, 307, 367, 89, 727, 312, 264, 441, 16, 2026, 51024, 51024, 295, 710, 13, 51074, 51074, 407, 498, 291, 829, 264, 441, 16, 2026, 295, 710, 11, 456, 311, 512, 295, 264, 8236, 4190, 295, 264, 6677, 295, 51214, 51214, 710, 13, 51306, 51306, 1407, 652, 341, 1359, 11, 291, 362, 281, 1936, 652, 867, 295, 264, 6677, 295, 710, 4018, 11, 382, 51526, 51526, 867, 382, 1944, 13, 51576, 51576, 400, 370, 291, 917, 493, 365, 637, 11668, 10290, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.12431599652325666, "compression_ratio": 1.7686567164179106, "no_speech_prob": 2.1233167899481487e-06}, {"id": 711, "seek": 254952, "start": 2553.96, "end": 2557.36, "text": " And so basically you pay a price for making z go outside of that region.", "tokens": [50364, 291, 498, 291, 366, 294, 257, 1729, 4458, 295, 1901, 300, 291, 434, 2055, 365, 13, 50586, 50586, 400, 370, 1936, 291, 1689, 257, 3218, 337, 1455, 710, 352, 2380, 295, 300, 4458, 13, 50756, 50756, 316, 665, 1365, 295, 341, 11, 597, 307, 4963, 281, 867, 295, 291, 11, 307, 367, 89, 727, 312, 264, 441, 16, 2026, 51024, 51024, 295, 710, 13, 51074, 51074, 407, 498, 291, 829, 264, 441, 16, 2026, 295, 710, 11, 456, 311, 512, 295, 264, 8236, 4190, 295, 264, 6677, 295, 51214, 51214, 710, 13, 51306, 51306, 1407, 652, 341, 1359, 11, 291, 362, 281, 1936, 652, 867, 295, 264, 6677, 295, 710, 4018, 11, 382, 51526, 51526, 867, 382, 1944, 13, 51576, 51576, 400, 370, 291, 917, 493, 365, 637, 11668, 10290, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.12431599652325666, "compression_ratio": 1.7686567164179106, "no_speech_prob": 2.1233167899481487e-06}, {"id": 712, "seek": 254952, "start": 2557.36, "end": 2562.72, "text": " A good example of this, which is familiar to many of you, is rz could be the L1 norm", "tokens": [50364, 291, 498, 291, 366, 294, 257, 1729, 4458, 295, 1901, 300, 291, 434, 2055, 365, 13, 50586, 50586, 400, 370, 1936, 291, 1689, 257, 3218, 337, 1455, 710, 352, 2380, 295, 300, 4458, 13, 50756, 50756, 316, 665, 1365, 295, 341, 11, 597, 307, 4963, 281, 867, 295, 291, 11, 307, 367, 89, 727, 312, 264, 441, 16, 2026, 51024, 51024, 295, 710, 13, 51074, 51074, 407, 498, 291, 829, 264, 441, 16, 2026, 295, 710, 11, 456, 311, 512, 295, 264, 8236, 4190, 295, 264, 6677, 295, 51214, 51214, 710, 13, 51306, 51306, 1407, 652, 341, 1359, 11, 291, 362, 281, 1936, 652, 867, 295, 264, 6677, 295, 710, 4018, 11, 382, 51526, 51526, 867, 382, 1944, 13, 51576, 51576, 400, 370, 291, 917, 493, 365, 637, 11668, 10290, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.12431599652325666, "compression_ratio": 1.7686567164179106, "no_speech_prob": 2.1233167899481487e-06}, {"id": 713, "seek": 254952, "start": 2562.72, "end": 2563.72, "text": " of z.", "tokens": [50364, 291, 498, 291, 366, 294, 257, 1729, 4458, 295, 1901, 300, 291, 434, 2055, 365, 13, 50586, 50586, 400, 370, 1936, 291, 1689, 257, 3218, 337, 1455, 710, 352, 2380, 295, 300, 4458, 13, 50756, 50756, 316, 665, 1365, 295, 341, 11, 597, 307, 4963, 281, 867, 295, 291, 11, 307, 367, 89, 727, 312, 264, 441, 16, 2026, 51024, 51024, 295, 710, 13, 51074, 51074, 407, 498, 291, 829, 264, 441, 16, 2026, 295, 710, 11, 456, 311, 512, 295, 264, 8236, 4190, 295, 264, 6677, 295, 51214, 51214, 710, 13, 51306, 51306, 1407, 652, 341, 1359, 11, 291, 362, 281, 1936, 652, 867, 295, 264, 6677, 295, 710, 4018, 11, 382, 51526, 51526, 867, 382, 1944, 13, 51576, 51576, 400, 370, 291, 917, 493, 365, 637, 11668, 10290, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.12431599652325666, "compression_ratio": 1.7686567164179106, "no_speech_prob": 2.1233167899481487e-06}, {"id": 714, "seek": 254952, "start": 2563.72, "end": 2566.52, "text": " So if you put the L1 norm of z, there's some of the absolute values of the components of", "tokens": [50364, 291, 498, 291, 366, 294, 257, 1729, 4458, 295, 1901, 300, 291, 434, 2055, 365, 13, 50586, 50586, 400, 370, 1936, 291, 1689, 257, 3218, 337, 1455, 710, 352, 2380, 295, 300, 4458, 13, 50756, 50756, 316, 665, 1365, 295, 341, 11, 597, 307, 4963, 281, 867, 295, 291, 11, 307, 367, 89, 727, 312, 264, 441, 16, 2026, 51024, 51024, 295, 710, 13, 51074, 51074, 407, 498, 291, 829, 264, 441, 16, 2026, 295, 710, 11, 456, 311, 512, 295, 264, 8236, 4190, 295, 264, 6677, 295, 51214, 51214, 710, 13, 51306, 51306, 1407, 652, 341, 1359, 11, 291, 362, 281, 1936, 652, 867, 295, 264, 6677, 295, 710, 4018, 11, 382, 51526, 51526, 867, 382, 1944, 13, 51576, 51576, 400, 370, 291, 917, 493, 365, 637, 11668, 10290, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.12431599652325666, "compression_ratio": 1.7686567164179106, "no_speech_prob": 2.1233167899481487e-06}, {"id": 715, "seek": 254952, "start": 2566.52, "end": 2568.36, "text": " z.", "tokens": [50364, 291, 498, 291, 366, 294, 257, 1729, 4458, 295, 1901, 300, 291, 434, 2055, 365, 13, 50586, 50586, 400, 370, 1936, 291, 1689, 257, 3218, 337, 1455, 710, 352, 2380, 295, 300, 4458, 13, 50756, 50756, 316, 665, 1365, 295, 341, 11, 597, 307, 4963, 281, 867, 295, 291, 11, 307, 367, 89, 727, 312, 264, 441, 16, 2026, 51024, 51024, 295, 710, 13, 51074, 51074, 407, 498, 291, 829, 264, 441, 16, 2026, 295, 710, 11, 456, 311, 512, 295, 264, 8236, 4190, 295, 264, 6677, 295, 51214, 51214, 710, 13, 51306, 51306, 1407, 652, 341, 1359, 11, 291, 362, 281, 1936, 652, 867, 295, 264, 6677, 295, 710, 4018, 11, 382, 51526, 51526, 867, 382, 1944, 13, 51576, 51576, 400, 370, 291, 917, 493, 365, 637, 11668, 10290, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.12431599652325666, "compression_ratio": 1.7686567164179106, "no_speech_prob": 2.1233167899481487e-06}, {"id": 716, "seek": 254952, "start": 2568.36, "end": 2572.7599999999998, "text": " To make this small, you have to basically make many of the components of z zero, as", "tokens": [50364, 291, 498, 291, 366, 294, 257, 1729, 4458, 295, 1901, 300, 291, 434, 2055, 365, 13, 50586, 50586, 400, 370, 1936, 291, 1689, 257, 3218, 337, 1455, 710, 352, 2380, 295, 300, 4458, 13, 50756, 50756, 316, 665, 1365, 295, 341, 11, 597, 307, 4963, 281, 867, 295, 291, 11, 307, 367, 89, 727, 312, 264, 441, 16, 2026, 51024, 51024, 295, 710, 13, 51074, 51074, 407, 498, 291, 829, 264, 441, 16, 2026, 295, 710, 11, 456, 311, 512, 295, 264, 8236, 4190, 295, 264, 6677, 295, 51214, 51214, 710, 13, 51306, 51306, 1407, 652, 341, 1359, 11, 291, 362, 281, 1936, 652, 867, 295, 264, 6677, 295, 710, 4018, 11, 382, 51526, 51526, 867, 382, 1944, 13, 51576, 51576, 400, 370, 291, 917, 493, 365, 637, 11668, 10290, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.12431599652325666, "compression_ratio": 1.7686567164179106, "no_speech_prob": 2.1233167899481487e-06}, {"id": 717, "seek": 254952, "start": 2572.7599999999998, "end": 2573.7599999999998, "text": " many as possible.", "tokens": [50364, 291, 498, 291, 366, 294, 257, 1729, 4458, 295, 1901, 300, 291, 434, 2055, 365, 13, 50586, 50586, 400, 370, 1936, 291, 1689, 257, 3218, 337, 1455, 710, 352, 2380, 295, 300, 4458, 13, 50756, 50756, 316, 665, 1365, 295, 341, 11, 597, 307, 4963, 281, 867, 295, 291, 11, 307, 367, 89, 727, 312, 264, 441, 16, 2026, 51024, 51024, 295, 710, 13, 51074, 51074, 407, 498, 291, 829, 264, 441, 16, 2026, 295, 710, 11, 456, 311, 512, 295, 264, 8236, 4190, 295, 264, 6677, 295, 51214, 51214, 710, 13, 51306, 51306, 1407, 652, 341, 1359, 11, 291, 362, 281, 1936, 652, 867, 295, 264, 6677, 295, 710, 4018, 11, 382, 51526, 51526, 867, 382, 1944, 13, 51576, 51576, 400, 370, 291, 917, 493, 365, 637, 11668, 10290, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.12431599652325666, "compression_ratio": 1.7686567164179106, "no_speech_prob": 2.1233167899481487e-06}, {"id": 718, "seek": 254952, "start": 2573.7599999999998, "end": 2578.98, "text": " And so you end up with sparse representation.", "tokens": [50364, 291, 498, 291, 366, 294, 257, 1729, 4458, 295, 1901, 300, 291, 434, 2055, 365, 13, 50586, 50586, 400, 370, 1936, 291, 1689, 257, 3218, 337, 1455, 710, 352, 2380, 295, 300, 4458, 13, 50756, 50756, 316, 665, 1365, 295, 341, 11, 597, 307, 4963, 281, 867, 295, 291, 11, 307, 367, 89, 727, 312, 264, 441, 16, 2026, 51024, 51024, 295, 710, 13, 51074, 51074, 407, 498, 291, 829, 264, 441, 16, 2026, 295, 710, 11, 456, 311, 512, 295, 264, 8236, 4190, 295, 264, 6677, 295, 51214, 51214, 710, 13, 51306, 51306, 1407, 652, 341, 1359, 11, 291, 362, 281, 1936, 652, 867, 295, 264, 6677, 295, 710, 4018, 11, 382, 51526, 51526, 867, 382, 1944, 13, 51576, 51576, 400, 370, 291, 917, 493, 365, 637, 11668, 10290, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.12431599652325666, "compression_ratio": 1.7686567164179106, "no_speech_prob": 2.1233167899481487e-06}, {"id": 719, "seek": 257898, "start": 2578.98, "end": 2590.64, "text": " And that actually limits the volume of space that has low energy, essentially.", "tokens": [50364, 400, 300, 767, 10406, 264, 5523, 295, 1901, 300, 575, 2295, 2281, 11, 4476, 13, 50947, 50947, 639, 307, 437, 291, 483, 13, 51087, 51087, 407, 341, 307, 1333, 295, 264, 47916, 3037, 295, 309, 11, 689, 456, 307, 572, 2031, 13, 51321, 51321, 509, 434, 445, 15983, 288, 13, 51438, 51438, 400, 510, 286, 976, 291, 257, 288, 13, 51613, 51613, 440, 3890, 6545, 337, 710, 307, 264, 441, 16, 2026, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.16222260215065695, "compression_ratio": 1.4130434782608696, "no_speech_prob": 1.07810010376852e-05}, {"id": 720, "seek": 257898, "start": 2590.64, "end": 2593.44, "text": " This is what you get.", "tokens": [50364, 400, 300, 767, 10406, 264, 5523, 295, 1901, 300, 575, 2295, 2281, 11, 4476, 13, 50947, 50947, 639, 307, 437, 291, 483, 13, 51087, 51087, 407, 341, 307, 1333, 295, 264, 47916, 3037, 295, 309, 11, 689, 456, 307, 572, 2031, 13, 51321, 51321, 509, 434, 445, 15983, 288, 13, 51438, 51438, 400, 510, 286, 976, 291, 257, 288, 13, 51613, 51613, 440, 3890, 6545, 337, 710, 307, 264, 441, 16, 2026, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.16222260215065695, "compression_ratio": 1.4130434782608696, "no_speech_prob": 1.07810010376852e-05}, {"id": 721, "seek": 257898, "start": 2593.44, "end": 2598.12, "text": " So this is sort of the unconditional version of it, where there is no x.", "tokens": [50364, 400, 300, 767, 10406, 264, 5523, 295, 1901, 300, 575, 2295, 2281, 11, 4476, 13, 50947, 50947, 639, 307, 437, 291, 483, 13, 51087, 51087, 407, 341, 307, 1333, 295, 264, 47916, 3037, 295, 309, 11, 689, 456, 307, 572, 2031, 13, 51321, 51321, 509, 434, 445, 15983, 288, 13, 51438, 51438, 400, 510, 286, 976, 291, 257, 288, 13, 51613, 51613, 440, 3890, 6545, 337, 710, 307, 264, 441, 16, 2026, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.16222260215065695, "compression_ratio": 1.4130434782608696, "no_speech_prob": 1.07810010376852e-05}, {"id": 722, "seek": 257898, "start": 2598.12, "end": 2600.46, "text": " You're just modeling y.", "tokens": [50364, 400, 300, 767, 10406, 264, 5523, 295, 1901, 300, 575, 2295, 2281, 11, 4476, 13, 50947, 50947, 639, 307, 437, 291, 483, 13, 51087, 51087, 407, 341, 307, 1333, 295, 264, 47916, 3037, 295, 309, 11, 689, 456, 307, 572, 2031, 13, 51321, 51321, 509, 434, 445, 15983, 288, 13, 51438, 51438, 400, 510, 286, 976, 291, 257, 288, 13, 51613, 51613, 440, 3890, 6545, 337, 710, 307, 264, 441, 16, 2026, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.16222260215065695, "compression_ratio": 1.4130434782608696, "no_speech_prob": 1.07810010376852e-05}, {"id": 723, "seek": 257898, "start": 2600.46, "end": 2603.96, "text": " And here I give you a y.", "tokens": [50364, 400, 300, 767, 10406, 264, 5523, 295, 1901, 300, 575, 2295, 2281, 11, 4476, 13, 50947, 50947, 639, 307, 437, 291, 483, 13, 51087, 51087, 407, 341, 307, 1333, 295, 264, 47916, 3037, 295, 309, 11, 689, 456, 307, 572, 2031, 13, 51321, 51321, 509, 434, 445, 15983, 288, 13, 51438, 51438, 400, 510, 286, 976, 291, 257, 288, 13, 51613, 51613, 440, 3890, 6545, 337, 710, 307, 264, 441, 16, 2026, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.16222260215065695, "compression_ratio": 1.4130434782608696, "no_speech_prob": 1.07810010376852e-05}, {"id": 724, "seek": 257898, "start": 2603.96, "end": 2605.88, "text": " The regularizer for z is the L1 norm.", "tokens": [50364, 400, 300, 767, 10406, 264, 5523, 295, 1901, 300, 575, 2295, 2281, 11, 4476, 13, 50947, 50947, 639, 307, 437, 291, 483, 13, 51087, 51087, 407, 341, 307, 1333, 295, 264, 47916, 3037, 295, 309, 11, 689, 456, 307, 572, 2031, 13, 51321, 51321, 509, 434, 445, 15983, 288, 13, 51438, 51438, 400, 510, 286, 976, 291, 257, 288, 13, 51613, 51613, 440, 3890, 6545, 337, 710, 307, 264, 441, 16, 2026, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.16222260215065695, "compression_ratio": 1.4130434782608696, "no_speech_prob": 1.07810010376852e-05}, {"id": 725, "seek": 260588, "start": 2605.88, "end": 2613.2400000000002, "text": " Z is multiplied by a matrix called an atom matrix, if you want, or a decoding matrix.", "tokens": [50364, 1176, 307, 17207, 538, 257, 8141, 1219, 364, 12018, 8141, 11, 498, 291, 528, 11, 420, 257, 979, 8616, 8141, 13, 50732, 50732, 467, 14725, 257, 31565, 13, 50782, 50782, 509, 3481, 264, 3732, 462, 1311, 31264, 282, 4560, 1296, 264, 732, 13, 50936, 50936, 400, 300, 311, 428, 2281, 2445, 13, 50986, 50986, 467, 311, 588, 13735, 11, 294, 264, 6456, 5221, 1768, 11, 412, 1935, 13, 51422, 51422, 509, 727, 2674, 1125, 341, 13, 51472, 51472, 400, 370, 437, 291, 483, 307, 11, 562, 291, 3847, 341, 322, 341, 707, 25165, 510, 11, 291, 483, 300, 264, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.16152278196464465, "compression_ratio": 1.5975103734439835, "no_speech_prob": 2.5612193894630764e-06}, {"id": 726, "seek": 260588, "start": 2613.2400000000002, "end": 2614.2400000000002, "text": " It produces a reconstruction.", "tokens": [50364, 1176, 307, 17207, 538, 257, 8141, 1219, 364, 12018, 8141, 11, 498, 291, 528, 11, 420, 257, 979, 8616, 8141, 13, 50732, 50732, 467, 14725, 257, 31565, 13, 50782, 50782, 509, 3481, 264, 3732, 462, 1311, 31264, 282, 4560, 1296, 264, 732, 13, 50936, 50936, 400, 300, 311, 428, 2281, 2445, 13, 50986, 50986, 467, 311, 588, 13735, 11, 294, 264, 6456, 5221, 1768, 11, 412, 1935, 13, 51422, 51422, 509, 727, 2674, 1125, 341, 13, 51472, 51472, 400, 370, 437, 291, 483, 307, 11, 562, 291, 3847, 341, 322, 341, 707, 25165, 510, 11, 291, 483, 300, 264, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.16152278196464465, "compression_ratio": 1.5975103734439835, "no_speech_prob": 2.5612193894630764e-06}, {"id": 727, "seek": 260588, "start": 2614.2400000000002, "end": 2617.32, "text": " You measure the square Euclidean distance between the two.", "tokens": [50364, 1176, 307, 17207, 538, 257, 8141, 1219, 364, 12018, 8141, 11, 498, 291, 528, 11, 420, 257, 979, 8616, 8141, 13, 50732, 50732, 467, 14725, 257, 31565, 13, 50782, 50782, 509, 3481, 264, 3732, 462, 1311, 31264, 282, 4560, 1296, 264, 732, 13, 50936, 50936, 400, 300, 311, 428, 2281, 2445, 13, 50986, 50986, 467, 311, 588, 13735, 11, 294, 264, 6456, 5221, 1768, 11, 412, 1935, 13, 51422, 51422, 509, 727, 2674, 1125, 341, 13, 51472, 51472, 400, 370, 437, 291, 483, 307, 11, 562, 291, 3847, 341, 322, 341, 707, 25165, 510, 11, 291, 483, 300, 264, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.16152278196464465, "compression_ratio": 1.5975103734439835, "no_speech_prob": 2.5612193894630764e-06}, {"id": 728, "seek": 260588, "start": 2617.32, "end": 2618.32, "text": " And that's your energy function.", "tokens": [50364, 1176, 307, 17207, 538, 257, 8141, 1219, 364, 12018, 8141, 11, 498, 291, 528, 11, 420, 257, 979, 8616, 8141, 13, 50732, 50732, 467, 14725, 257, 31565, 13, 50782, 50782, 509, 3481, 264, 3732, 462, 1311, 31264, 282, 4560, 1296, 264, 732, 13, 50936, 50936, 400, 300, 311, 428, 2281, 2445, 13, 50986, 50986, 467, 311, 588, 13735, 11, 294, 264, 6456, 5221, 1768, 11, 412, 1935, 13, 51422, 51422, 509, 727, 2674, 1125, 341, 13, 51472, 51472, 400, 370, 437, 291, 483, 307, 11, 562, 291, 3847, 341, 322, 341, 707, 25165, 510, 11, 291, 483, 300, 264, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.16152278196464465, "compression_ratio": 1.5975103734439835, "no_speech_prob": 2.5612193894630764e-06}, {"id": 729, "seek": 260588, "start": 2618.32, "end": 2627.04, "text": " It's very classical, in the applied math community, at least.", "tokens": [50364, 1176, 307, 17207, 538, 257, 8141, 1219, 364, 12018, 8141, 11, 498, 291, 528, 11, 420, 257, 979, 8616, 8141, 13, 50732, 50732, 467, 14725, 257, 31565, 13, 50782, 50782, 509, 3481, 264, 3732, 462, 1311, 31264, 282, 4560, 1296, 264, 732, 13, 50936, 50936, 400, 300, 311, 428, 2281, 2445, 13, 50986, 50986, 467, 311, 588, 13735, 11, 294, 264, 6456, 5221, 1768, 11, 412, 1935, 13, 51422, 51422, 509, 727, 2674, 1125, 341, 13, 51472, 51472, 400, 370, 437, 291, 483, 307, 11, 562, 291, 3847, 341, 322, 341, 707, 25165, 510, 11, 291, 483, 300, 264, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.16152278196464465, "compression_ratio": 1.5975103734439835, "no_speech_prob": 2.5612193894630764e-06}, {"id": 730, "seek": 260588, "start": 2627.04, "end": 2628.04, "text": " You could generalize this.", "tokens": [50364, 1176, 307, 17207, 538, 257, 8141, 1219, 364, 12018, 8141, 11, 498, 291, 528, 11, 420, 257, 979, 8616, 8141, 13, 50732, 50732, 467, 14725, 257, 31565, 13, 50782, 50782, 509, 3481, 264, 3732, 462, 1311, 31264, 282, 4560, 1296, 264, 732, 13, 50936, 50936, 400, 300, 311, 428, 2281, 2445, 13, 50986, 50986, 467, 311, 588, 13735, 11, 294, 264, 6456, 5221, 1768, 11, 412, 1935, 13, 51422, 51422, 509, 727, 2674, 1125, 341, 13, 51472, 51472, 400, 370, 437, 291, 483, 307, 11, 562, 291, 3847, 341, 322, 341, 707, 25165, 510, 11, 291, 483, 300, 264, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.16152278196464465, "compression_ratio": 1.5975103734439835, "no_speech_prob": 2.5612193894630764e-06}, {"id": 731, "seek": 260588, "start": 2628.04, "end": 2632.12, "text": " And so what you get is, when you train this on this little spiral here, you get that the", "tokens": [50364, 1176, 307, 17207, 538, 257, 8141, 1219, 364, 12018, 8141, 11, 498, 291, 528, 11, 420, 257, 979, 8616, 8141, 13, 50732, 50732, 467, 14725, 257, 31565, 13, 50782, 50782, 509, 3481, 264, 3732, 462, 1311, 31264, 282, 4560, 1296, 264, 732, 13, 50936, 50936, 400, 300, 311, 428, 2281, 2445, 13, 50986, 50986, 467, 311, 588, 13735, 11, 294, 264, 6456, 5221, 1768, 11, 412, 1935, 13, 51422, 51422, 509, 727, 2674, 1125, 341, 13, 51472, 51472, 400, 370, 437, 291, 483, 307, 11, 562, 291, 3847, 341, 322, 341, 707, 25165, 510, 11, 291, 483, 300, 264, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.16152278196464465, "compression_ratio": 1.5975103734439835, "no_speech_prob": 2.5612193894630764e-06}, {"id": 732, "seek": 263212, "start": 2632.12, "end": 2640.56, "text": " low energy regions are basically piecewise linear approximations with low dimensionality,", "tokens": [50364, 2295, 2281, 10682, 366, 1936, 2522, 3711, 8213, 8542, 763, 365, 2295, 10139, 1860, 11, 50786, 50786, 8213, 2090, 79, 2116, 295, 264, 2302, 1185, 13, 51040, 51040, 663, 1985, 534, 731, 294, 1090, 10139, 13, 51090, 51090, 663, 311, 264, 1627, 551, 13, 51140, 51140, 400, 309, 311, 668, 9454, 257, 688, 13, 51314, 51314, 1485, 551, 300, 575, 406, 668, 9454, 307, 11, 437, 498, 291, 652, 264, 979, 19866, 2107, 28263, 30, 51472, 51472, 961, 311, 584, 11, 2602, 295, 1419, 257, 8141, 510, 300, 291, 12972, 710, 538, 11, 291, 362, 364, 2302, 51684, 51684, 18161, 2533, 13, 51784, 51784, 708, 2314, 30, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.20310178533330694, "compression_ratio": 1.649402390438247, "no_speech_prob": 4.222595180181088e-06}, {"id": 733, "seek": 263212, "start": 2640.56, "end": 2645.64, "text": " linear subspaces of the entire system.", "tokens": [50364, 2295, 2281, 10682, 366, 1936, 2522, 3711, 8213, 8542, 763, 365, 2295, 10139, 1860, 11, 50786, 50786, 8213, 2090, 79, 2116, 295, 264, 2302, 1185, 13, 51040, 51040, 663, 1985, 534, 731, 294, 1090, 10139, 13, 51090, 51090, 663, 311, 264, 1627, 551, 13, 51140, 51140, 400, 309, 311, 668, 9454, 257, 688, 13, 51314, 51314, 1485, 551, 300, 575, 406, 668, 9454, 307, 11, 437, 498, 291, 652, 264, 979, 19866, 2107, 28263, 30, 51472, 51472, 961, 311, 584, 11, 2602, 295, 1419, 257, 8141, 510, 300, 291, 12972, 710, 538, 11, 291, 362, 364, 2302, 51684, 51684, 18161, 2533, 13, 51784, 51784, 708, 2314, 30, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.20310178533330694, "compression_ratio": 1.649402390438247, "no_speech_prob": 4.222595180181088e-06}, {"id": 734, "seek": 263212, "start": 2645.64, "end": 2646.64, "text": " That works really well in high dimension.", "tokens": [50364, 2295, 2281, 10682, 366, 1936, 2522, 3711, 8213, 8542, 763, 365, 2295, 10139, 1860, 11, 50786, 50786, 8213, 2090, 79, 2116, 295, 264, 2302, 1185, 13, 51040, 51040, 663, 1985, 534, 731, 294, 1090, 10139, 13, 51090, 51090, 663, 311, 264, 1627, 551, 13, 51140, 51140, 400, 309, 311, 668, 9454, 257, 688, 13, 51314, 51314, 1485, 551, 300, 575, 406, 668, 9454, 307, 11, 437, 498, 291, 652, 264, 979, 19866, 2107, 28263, 30, 51472, 51472, 961, 311, 584, 11, 2602, 295, 1419, 257, 8141, 510, 300, 291, 12972, 710, 538, 11, 291, 362, 364, 2302, 51684, 51684, 18161, 2533, 13, 51784, 51784, 708, 2314, 30, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.20310178533330694, "compression_ratio": 1.649402390438247, "no_speech_prob": 4.222595180181088e-06}, {"id": 735, "seek": 263212, "start": 2646.64, "end": 2647.64, "text": " That's the cool thing.", "tokens": [50364, 2295, 2281, 10682, 366, 1936, 2522, 3711, 8213, 8542, 763, 365, 2295, 10139, 1860, 11, 50786, 50786, 8213, 2090, 79, 2116, 295, 264, 2302, 1185, 13, 51040, 51040, 663, 1985, 534, 731, 294, 1090, 10139, 13, 51090, 51090, 663, 311, 264, 1627, 551, 13, 51140, 51140, 400, 309, 311, 668, 9454, 257, 688, 13, 51314, 51314, 1485, 551, 300, 575, 406, 668, 9454, 307, 11, 437, 498, 291, 652, 264, 979, 19866, 2107, 28263, 30, 51472, 51472, 961, 311, 584, 11, 2602, 295, 1419, 257, 8141, 510, 300, 291, 12972, 710, 538, 11, 291, 362, 364, 2302, 51684, 51684, 18161, 2533, 13, 51784, 51784, 708, 2314, 30, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.20310178533330694, "compression_ratio": 1.649402390438247, "no_speech_prob": 4.222595180181088e-06}, {"id": 736, "seek": 263212, "start": 2647.64, "end": 2651.12, "text": " And it's been studied a lot.", "tokens": [50364, 2295, 2281, 10682, 366, 1936, 2522, 3711, 8213, 8542, 763, 365, 2295, 10139, 1860, 11, 50786, 50786, 8213, 2090, 79, 2116, 295, 264, 2302, 1185, 13, 51040, 51040, 663, 1985, 534, 731, 294, 1090, 10139, 13, 51090, 51090, 663, 311, 264, 1627, 551, 13, 51140, 51140, 400, 309, 311, 668, 9454, 257, 688, 13, 51314, 51314, 1485, 551, 300, 575, 406, 668, 9454, 307, 11, 437, 498, 291, 652, 264, 979, 19866, 2107, 28263, 30, 51472, 51472, 961, 311, 584, 11, 2602, 295, 1419, 257, 8141, 510, 300, 291, 12972, 710, 538, 11, 291, 362, 364, 2302, 51684, 51684, 18161, 2533, 13, 51784, 51784, 708, 2314, 30, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.20310178533330694, "compression_ratio": 1.649402390438247, "no_speech_prob": 4.222595180181088e-06}, {"id": 737, "seek": 263212, "start": 2651.12, "end": 2654.2799999999997, "text": " One thing that has not been studied is, what if you make the decoder nonlinear?", "tokens": [50364, 2295, 2281, 10682, 366, 1936, 2522, 3711, 8213, 8542, 763, 365, 2295, 10139, 1860, 11, 50786, 50786, 8213, 2090, 79, 2116, 295, 264, 2302, 1185, 13, 51040, 51040, 663, 1985, 534, 731, 294, 1090, 10139, 13, 51090, 51090, 663, 311, 264, 1627, 551, 13, 51140, 51140, 400, 309, 311, 668, 9454, 257, 688, 13, 51314, 51314, 1485, 551, 300, 575, 406, 668, 9454, 307, 11, 437, 498, 291, 652, 264, 979, 19866, 2107, 28263, 30, 51472, 51472, 961, 311, 584, 11, 2602, 295, 1419, 257, 8141, 510, 300, 291, 12972, 710, 538, 11, 291, 362, 364, 2302, 51684, 51684, 18161, 2533, 13, 51784, 51784, 708, 2314, 30, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.20310178533330694, "compression_ratio": 1.649402390438247, "no_speech_prob": 4.222595180181088e-06}, {"id": 738, "seek": 263212, "start": 2654.2799999999997, "end": 2658.52, "text": " Let's say, instead of having a matrix here that you multiply z by, you have an entire", "tokens": [50364, 2295, 2281, 10682, 366, 1936, 2522, 3711, 8213, 8542, 763, 365, 2295, 10139, 1860, 11, 50786, 50786, 8213, 2090, 79, 2116, 295, 264, 2302, 1185, 13, 51040, 51040, 663, 1985, 534, 731, 294, 1090, 10139, 13, 51090, 51090, 663, 311, 264, 1627, 551, 13, 51140, 51140, 400, 309, 311, 668, 9454, 257, 688, 13, 51314, 51314, 1485, 551, 300, 575, 406, 668, 9454, 307, 11, 437, 498, 291, 652, 264, 979, 19866, 2107, 28263, 30, 51472, 51472, 961, 311, 584, 11, 2602, 295, 1419, 257, 8141, 510, 300, 291, 12972, 710, 538, 11, 291, 362, 364, 2302, 51684, 51684, 18161, 2533, 13, 51784, 51784, 708, 2314, 30, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.20310178533330694, "compression_ratio": 1.649402390438247, "no_speech_prob": 4.222595180181088e-06}, {"id": 739, "seek": 263212, "start": 2658.52, "end": 2660.52, "text": " neural net.", "tokens": [50364, 2295, 2281, 10682, 366, 1936, 2522, 3711, 8213, 8542, 763, 365, 2295, 10139, 1860, 11, 50786, 50786, 8213, 2090, 79, 2116, 295, 264, 2302, 1185, 13, 51040, 51040, 663, 1985, 534, 731, 294, 1090, 10139, 13, 51090, 51090, 663, 311, 264, 1627, 551, 13, 51140, 51140, 400, 309, 311, 668, 9454, 257, 688, 13, 51314, 51314, 1485, 551, 300, 575, 406, 668, 9454, 307, 11, 437, 498, 291, 652, 264, 979, 19866, 2107, 28263, 30, 51472, 51472, 961, 311, 584, 11, 2602, 295, 1419, 257, 8141, 510, 300, 291, 12972, 710, 538, 11, 291, 362, 364, 2302, 51684, 51684, 18161, 2533, 13, 51784, 51784, 708, 2314, 30, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.20310178533330694, "compression_ratio": 1.649402390438247, "no_speech_prob": 4.222595180181088e-06}, {"id": 740, "seek": 263212, "start": 2660.52, "end": 2661.52, "text": " What happens?", "tokens": [50364, 2295, 2281, 10682, 366, 1936, 2522, 3711, 8213, 8542, 763, 365, 2295, 10139, 1860, 11, 50786, 50786, 8213, 2090, 79, 2116, 295, 264, 2302, 1185, 13, 51040, 51040, 663, 1985, 534, 731, 294, 1090, 10139, 13, 51090, 51090, 663, 311, 264, 1627, 551, 13, 51140, 51140, 400, 309, 311, 668, 9454, 257, 688, 13, 51314, 51314, 1485, 551, 300, 575, 406, 668, 9454, 307, 11, 437, 498, 291, 652, 264, 979, 19866, 2107, 28263, 30, 51472, 51472, 961, 311, 584, 11, 2602, 295, 1419, 257, 8141, 510, 300, 291, 12972, 710, 538, 11, 291, 362, 364, 2302, 51684, 51684, 18161, 2533, 13, 51784, 51784, 708, 2314, 30, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.20310178533330694, "compression_ratio": 1.649402390438247, "no_speech_prob": 4.222595180181088e-06}, {"id": 741, "seek": 266152, "start": 2661.52, "end": 2665.8, "text": " I'll tell you about this a little bit later.", "tokens": [50364, 286, 603, 980, 291, 466, 341, 257, 707, 857, 1780, 13, 50578, 50578, 823, 510, 307, 264, 1154, 11, 1673, 13, 50818, 50818, 31947, 710, 337, 257, 2212, 6119, 2031, 11, 288, 11, 5006, 264, 710, 300, 4464, 5660, 264, 2408, 295, 729, 732, 2115, 51370, 51370, 393, 312, 5124, 13, 51420, 51420, 509, 362, 281, 646, 79, 1513, 559, 473, 16235, 807, 341, 11, 360, 16235, 23475, 13, 51536, 51536, 639, 727, 312, 257, 2107, 12, 82, 30803, 2445, 13, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.22198899213005516, "compression_ratio": 1.4477611940298507, "no_speech_prob": 1.428286668669898e-05}, {"id": 742, "seek": 266152, "start": 2665.8, "end": 2670.6, "text": " Now here is the problem, though.", "tokens": [50364, 286, 603, 980, 291, 466, 341, 257, 707, 857, 1780, 13, 50578, 50578, 823, 510, 307, 264, 1154, 11, 1673, 13, 50818, 50818, 31947, 710, 337, 257, 2212, 6119, 2031, 11, 288, 11, 5006, 264, 710, 300, 4464, 5660, 264, 2408, 295, 729, 732, 2115, 51370, 51370, 393, 312, 5124, 13, 51420, 51420, 509, 362, 281, 646, 79, 1513, 559, 473, 16235, 807, 341, 11, 360, 16235, 23475, 13, 51536, 51536, 639, 727, 312, 257, 2107, 12, 82, 30803, 2445, 13, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.22198899213005516, "compression_ratio": 1.4477611940298507, "no_speech_prob": 1.428286668669898e-05}, {"id": 743, "seek": 266152, "start": 2670.6, "end": 2681.64, "text": " Finding z for a given pair x, y, finding the z that minimizes the sum of those two terms", "tokens": [50364, 286, 603, 980, 291, 466, 341, 257, 707, 857, 1780, 13, 50578, 50578, 823, 510, 307, 264, 1154, 11, 1673, 13, 50818, 50818, 31947, 710, 337, 257, 2212, 6119, 2031, 11, 288, 11, 5006, 264, 710, 300, 4464, 5660, 264, 2408, 295, 729, 732, 2115, 51370, 51370, 393, 312, 5124, 13, 51420, 51420, 509, 362, 281, 646, 79, 1513, 559, 473, 16235, 807, 341, 11, 360, 16235, 23475, 13, 51536, 51536, 639, 727, 312, 257, 2107, 12, 82, 30803, 2445, 13, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.22198899213005516, "compression_ratio": 1.4477611940298507, "no_speech_prob": 1.428286668669898e-05}, {"id": 744, "seek": 266152, "start": 2681.64, "end": 2682.64, "text": " can be expensive.", "tokens": [50364, 286, 603, 980, 291, 466, 341, 257, 707, 857, 1780, 13, 50578, 50578, 823, 510, 307, 264, 1154, 11, 1673, 13, 50818, 50818, 31947, 710, 337, 257, 2212, 6119, 2031, 11, 288, 11, 5006, 264, 710, 300, 4464, 5660, 264, 2408, 295, 729, 732, 2115, 51370, 51370, 393, 312, 5124, 13, 51420, 51420, 509, 362, 281, 646, 79, 1513, 559, 473, 16235, 807, 341, 11, 360, 16235, 23475, 13, 51536, 51536, 639, 727, 312, 257, 2107, 12, 82, 30803, 2445, 13, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.22198899213005516, "compression_ratio": 1.4477611940298507, "no_speech_prob": 1.428286668669898e-05}, {"id": 745, "seek": 266152, "start": 2682.64, "end": 2684.96, "text": " You have to backpropagate gradient through this, do gradient descent.", "tokens": [50364, 286, 603, 980, 291, 466, 341, 257, 707, 857, 1780, 13, 50578, 50578, 823, 510, 307, 264, 1154, 11, 1673, 13, 50818, 50818, 31947, 710, 337, 257, 2212, 6119, 2031, 11, 288, 11, 5006, 264, 710, 300, 4464, 5660, 264, 2408, 295, 729, 732, 2115, 51370, 51370, 393, 312, 5124, 13, 51420, 51420, 509, 362, 281, 646, 79, 1513, 559, 473, 16235, 807, 341, 11, 360, 16235, 23475, 13, 51536, 51536, 639, 727, 312, 257, 2107, 12, 82, 30803, 2445, 13, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.22198899213005516, "compression_ratio": 1.4477611940298507, "no_speech_prob": 1.428286668669898e-05}, {"id": 746, "seek": 266152, "start": 2684.96, "end": 2685.96, "text": " This could be a non-smooth function.", "tokens": [50364, 286, 603, 980, 291, 466, 341, 257, 707, 857, 1780, 13, 50578, 50578, 823, 510, 307, 264, 1154, 11, 1673, 13, 50818, 50818, 31947, 710, 337, 257, 2212, 6119, 2031, 11, 288, 11, 5006, 264, 710, 300, 4464, 5660, 264, 2408, 295, 729, 732, 2115, 51370, 51370, 393, 312, 5124, 13, 51420, 51420, 509, 362, 281, 646, 79, 1513, 559, 473, 16235, 807, 341, 11, 360, 16235, 23475, 13, 51536, 51536, 639, 727, 312, 257, 2107, 12, 82, 30803, 2445, 13, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.22198899213005516, "compression_ratio": 1.4477611940298507, "no_speech_prob": 1.428286668669898e-05}, {"id": 747, "seek": 268596, "start": 2685.96, "end": 2692.48, "text": " You have to do those L1, L2 optimizations, ISTA, or whatever.", "tokens": [50364, 509, 362, 281, 360, 729, 441, 16, 11, 441, 17, 5028, 14455, 11, 6205, 8241, 11, 420, 2035, 13, 50690, 50690, 467, 393, 312, 5124, 13, 50808, 50808, 407, 472, 1558, 307, 11, 291, 767, 3847, 257, 18161, 2533, 281, 6069, 264, 16252, 3827, 281, 300, 51274, 51274, 19618, 1154, 13, 51388, 51388, 407, 11200, 264, 10855, 644, 337, 586, 13, 51492, 51492, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 51584, 51584, 11809, 264, 710, 300, 4464, 5660, 264, 2408, 295, 341, 293, 300, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.16875286940689926, "compression_ratio": 1.495049504950495, "no_speech_prob": 3.1874808428256074e-06}, {"id": 748, "seek": 268596, "start": 2692.48, "end": 2694.84, "text": " It can be expensive.", "tokens": [50364, 509, 362, 281, 360, 729, 441, 16, 11, 441, 17, 5028, 14455, 11, 6205, 8241, 11, 420, 2035, 13, 50690, 50690, 467, 393, 312, 5124, 13, 50808, 50808, 407, 472, 1558, 307, 11, 291, 767, 3847, 257, 18161, 2533, 281, 6069, 264, 16252, 3827, 281, 300, 51274, 51274, 19618, 1154, 13, 51388, 51388, 407, 11200, 264, 10855, 644, 337, 586, 13, 51492, 51492, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 51584, 51584, 11809, 264, 710, 300, 4464, 5660, 264, 2408, 295, 341, 293, 300, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.16875286940689926, "compression_ratio": 1.495049504950495, "no_speech_prob": 3.1874808428256074e-06}, {"id": 749, "seek": 268596, "start": 2694.84, "end": 2704.16, "text": " So one idea is, you actually train a neural net to predict the optimal solution to that", "tokens": [50364, 509, 362, 281, 360, 729, 441, 16, 11, 441, 17, 5028, 14455, 11, 6205, 8241, 11, 420, 2035, 13, 50690, 50690, 467, 393, 312, 5124, 13, 50808, 50808, 407, 472, 1558, 307, 11, 291, 767, 3847, 257, 18161, 2533, 281, 6069, 264, 16252, 3827, 281, 300, 51274, 51274, 19618, 1154, 13, 51388, 51388, 407, 11200, 264, 10855, 644, 337, 586, 13, 51492, 51492, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 51584, 51584, 11809, 264, 710, 300, 4464, 5660, 264, 2408, 295, 341, 293, 300, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.16875286940689926, "compression_ratio": 1.495049504950495, "no_speech_prob": 3.1874808428256074e-06}, {"id": 750, "seek": 268596, "start": 2704.16, "end": 2706.44, "text": " optimization problem.", "tokens": [50364, 509, 362, 281, 360, 729, 441, 16, 11, 441, 17, 5028, 14455, 11, 6205, 8241, 11, 420, 2035, 13, 50690, 50690, 467, 393, 312, 5124, 13, 50808, 50808, 407, 472, 1558, 307, 11, 291, 767, 3847, 257, 18161, 2533, 281, 6069, 264, 16252, 3827, 281, 300, 51274, 51274, 19618, 1154, 13, 51388, 51388, 407, 11200, 264, 10855, 644, 337, 586, 13, 51492, 51492, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 51584, 51584, 11809, 264, 710, 300, 4464, 5660, 264, 2408, 295, 341, 293, 300, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.16875286940689926, "compression_ratio": 1.495049504950495, "no_speech_prob": 3.1874808428256074e-06}, {"id": 751, "seek": 268596, "start": 2706.44, "end": 2708.52, "text": " So ignore the gray part for now.", "tokens": [50364, 509, 362, 281, 360, 729, 441, 16, 11, 441, 17, 5028, 14455, 11, 6205, 8241, 11, 420, 2035, 13, 50690, 50690, 467, 393, 312, 5124, 13, 50808, 50808, 407, 472, 1558, 307, 11, 291, 767, 3847, 257, 18161, 2533, 281, 6069, 264, 16252, 3827, 281, 300, 51274, 51274, 19618, 1154, 13, 51388, 51388, 407, 11200, 264, 10855, 644, 337, 586, 13, 51492, 51492, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 51584, 51584, 11809, 264, 710, 300, 4464, 5660, 264, 2408, 295, 341, 293, 300, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.16875286940689926, "compression_ratio": 1.495049504950495, "no_speech_prob": 3.1874808428256074e-06}, {"id": 752, "seek": 268596, "start": 2708.52, "end": 2710.36, "text": " I give you an x and a y.", "tokens": [50364, 509, 362, 281, 360, 729, 441, 16, 11, 441, 17, 5028, 14455, 11, 6205, 8241, 11, 420, 2035, 13, 50690, 50690, 467, 393, 312, 5124, 13, 50808, 50808, 407, 472, 1558, 307, 11, 291, 767, 3847, 257, 18161, 2533, 281, 6069, 264, 16252, 3827, 281, 300, 51274, 51274, 19618, 1154, 13, 51388, 51388, 407, 11200, 264, 10855, 644, 337, 586, 13, 51492, 51492, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 51584, 51584, 11809, 264, 710, 300, 4464, 5660, 264, 2408, 295, 341, 293, 300, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.16875286940689926, "compression_ratio": 1.495049504950495, "no_speech_prob": 3.1874808428256074e-06}, {"id": 753, "seek": 268596, "start": 2710.36, "end": 2713.32, "text": " Find the z that minimizes the sum of this and that.", "tokens": [50364, 509, 362, 281, 360, 729, 441, 16, 11, 441, 17, 5028, 14455, 11, 6205, 8241, 11, 420, 2035, 13, 50690, 50690, 467, 393, 312, 5124, 13, 50808, 50808, 407, 472, 1558, 307, 11, 291, 767, 3847, 257, 18161, 2533, 281, 6069, 264, 16252, 3827, 281, 300, 51274, 51274, 19618, 1154, 13, 51388, 51388, 407, 11200, 264, 10855, 644, 337, 586, 13, 51492, 51492, 286, 976, 291, 364, 2031, 293, 257, 288, 13, 51584, 51584, 11809, 264, 710, 300, 4464, 5660, 264, 2408, 295, 341, 293, 300, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.16875286940689926, "compression_ratio": 1.495049504950495, "no_speech_prob": 3.1874808428256074e-06}, {"id": 754, "seek": 271332, "start": 2713.32, "end": 2719.44, "text": " And then use this as a target to train a neural net, which from x and y is going to predict", "tokens": [50364, 400, 550, 764, 341, 382, 257, 3779, 281, 3847, 257, 18161, 2533, 11, 597, 490, 2031, 293, 288, 307, 516, 281, 6069, 50670, 50670, 341, 2146, 13, 50720, 50720, 400, 550, 498, 341, 2146, 307, 731, 12, 17227, 2001, 11, 550, 286, 500, 380, 643, 281, 1190, 264, 19618, 9284, 50894, 50894, 337, 38253, 3602, 13, 50944, 50944, 286, 445, 643, 281, 1190, 807, 264, 2058, 19866, 13, 51054, 51054, 407, 586, 309, 3643, 588, 1850, 300, 309, 311, 588, 1021, 281, 4948, 264, 1589, 2701, 51188, 51188, 295, 710, 11, 570, 264, 1185, 393, 17470, 510, 13, 51278, 51278, 467, 767, 575, 2105, 281, 264, 1867, 11, 293, 309, 393, 445, 5055, 264, 1867, 322, 264, 5598, 13, 51540, 51540, 407, 5969, 291, 362, 257, 636, 295, 1472, 37714, 264, 1589, 2701, 295, 341, 11, 264, 1185, 486, 51700, 51700, 17470, 293, 2584, 11200, 2031, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.11772952806081204, "compression_ratio": 1.8173374613003095, "no_speech_prob": 9.81723042059457e-06}, {"id": 755, "seek": 271332, "start": 2719.44, "end": 2720.44, "text": " this guy.", "tokens": [50364, 400, 550, 764, 341, 382, 257, 3779, 281, 3847, 257, 18161, 2533, 11, 597, 490, 2031, 293, 288, 307, 516, 281, 6069, 50670, 50670, 341, 2146, 13, 50720, 50720, 400, 550, 498, 341, 2146, 307, 731, 12, 17227, 2001, 11, 550, 286, 500, 380, 643, 281, 1190, 264, 19618, 9284, 50894, 50894, 337, 38253, 3602, 13, 50944, 50944, 286, 445, 643, 281, 1190, 807, 264, 2058, 19866, 13, 51054, 51054, 407, 586, 309, 3643, 588, 1850, 300, 309, 311, 588, 1021, 281, 4948, 264, 1589, 2701, 51188, 51188, 295, 710, 11, 570, 264, 1185, 393, 17470, 510, 13, 51278, 51278, 467, 767, 575, 2105, 281, 264, 1867, 11, 293, 309, 393, 445, 5055, 264, 1867, 322, 264, 5598, 13, 51540, 51540, 407, 5969, 291, 362, 257, 636, 295, 1472, 37714, 264, 1589, 2701, 295, 341, 11, 264, 1185, 486, 51700, 51700, 17470, 293, 2584, 11200, 2031, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.11772952806081204, "compression_ratio": 1.8173374613003095, "no_speech_prob": 9.81723042059457e-06}, {"id": 756, "seek": 271332, "start": 2720.44, "end": 2723.92, "text": " And then if this guy is well-trained, then I don't need to run the optimization algorithm", "tokens": [50364, 400, 550, 764, 341, 382, 257, 3779, 281, 3847, 257, 18161, 2533, 11, 597, 490, 2031, 293, 288, 307, 516, 281, 6069, 50670, 50670, 341, 2146, 13, 50720, 50720, 400, 550, 498, 341, 2146, 307, 731, 12, 17227, 2001, 11, 550, 286, 500, 380, 643, 281, 1190, 264, 19618, 9284, 50894, 50894, 337, 38253, 3602, 13, 50944, 50944, 286, 445, 643, 281, 1190, 807, 264, 2058, 19866, 13, 51054, 51054, 407, 586, 309, 3643, 588, 1850, 300, 309, 311, 588, 1021, 281, 4948, 264, 1589, 2701, 51188, 51188, 295, 710, 11, 570, 264, 1185, 393, 17470, 510, 13, 51278, 51278, 467, 767, 575, 2105, 281, 264, 1867, 11, 293, 309, 393, 445, 5055, 264, 1867, 322, 264, 5598, 13, 51540, 51540, 407, 5969, 291, 362, 257, 636, 295, 1472, 37714, 264, 1589, 2701, 295, 341, 11, 264, 1185, 486, 51700, 51700, 17470, 293, 2584, 11200, 2031, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.11772952806081204, "compression_ratio": 1.8173374613003095, "no_speech_prob": 9.81723042059457e-06}, {"id": 757, "seek": 271332, "start": 2723.92, "end": 2724.92, "text": " for inference anymore.", "tokens": [50364, 400, 550, 764, 341, 382, 257, 3779, 281, 3847, 257, 18161, 2533, 11, 597, 490, 2031, 293, 288, 307, 516, 281, 6069, 50670, 50670, 341, 2146, 13, 50720, 50720, 400, 550, 498, 341, 2146, 307, 731, 12, 17227, 2001, 11, 550, 286, 500, 380, 643, 281, 1190, 264, 19618, 9284, 50894, 50894, 337, 38253, 3602, 13, 50944, 50944, 286, 445, 643, 281, 1190, 807, 264, 2058, 19866, 13, 51054, 51054, 407, 586, 309, 3643, 588, 1850, 300, 309, 311, 588, 1021, 281, 4948, 264, 1589, 2701, 51188, 51188, 295, 710, 11, 570, 264, 1185, 393, 17470, 510, 13, 51278, 51278, 467, 767, 575, 2105, 281, 264, 1867, 11, 293, 309, 393, 445, 5055, 264, 1867, 322, 264, 5598, 13, 51540, 51540, 407, 5969, 291, 362, 257, 636, 295, 1472, 37714, 264, 1589, 2701, 295, 341, 11, 264, 1185, 486, 51700, 51700, 17470, 293, 2584, 11200, 2031, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.11772952806081204, "compression_ratio": 1.8173374613003095, "no_speech_prob": 9.81723042059457e-06}, {"id": 758, "seek": 271332, "start": 2724.92, "end": 2727.1200000000003, "text": " I just need to run through the encoder.", "tokens": [50364, 400, 550, 764, 341, 382, 257, 3779, 281, 3847, 257, 18161, 2533, 11, 597, 490, 2031, 293, 288, 307, 516, 281, 6069, 50670, 50670, 341, 2146, 13, 50720, 50720, 400, 550, 498, 341, 2146, 307, 731, 12, 17227, 2001, 11, 550, 286, 500, 380, 643, 281, 1190, 264, 19618, 9284, 50894, 50894, 337, 38253, 3602, 13, 50944, 50944, 286, 445, 643, 281, 1190, 807, 264, 2058, 19866, 13, 51054, 51054, 407, 586, 309, 3643, 588, 1850, 300, 309, 311, 588, 1021, 281, 4948, 264, 1589, 2701, 51188, 51188, 295, 710, 11, 570, 264, 1185, 393, 17470, 510, 13, 51278, 51278, 467, 767, 575, 2105, 281, 264, 1867, 11, 293, 309, 393, 445, 5055, 264, 1867, 322, 264, 5598, 13, 51540, 51540, 407, 5969, 291, 362, 257, 636, 295, 1472, 37714, 264, 1589, 2701, 295, 341, 11, 264, 1185, 486, 51700, 51700, 17470, 293, 2584, 11200, 2031, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.11772952806081204, "compression_ratio": 1.8173374613003095, "no_speech_prob": 9.81723042059457e-06}, {"id": 759, "seek": 271332, "start": 2727.1200000000003, "end": 2729.8, "text": " So now it becomes very clear that it's very important to limit the information content", "tokens": [50364, 400, 550, 764, 341, 382, 257, 3779, 281, 3847, 257, 18161, 2533, 11, 597, 490, 2031, 293, 288, 307, 516, 281, 6069, 50670, 50670, 341, 2146, 13, 50720, 50720, 400, 550, 498, 341, 2146, 307, 731, 12, 17227, 2001, 11, 550, 286, 500, 380, 643, 281, 1190, 264, 19618, 9284, 50894, 50894, 337, 38253, 3602, 13, 50944, 50944, 286, 445, 643, 281, 1190, 807, 264, 2058, 19866, 13, 51054, 51054, 407, 586, 309, 3643, 588, 1850, 300, 309, 311, 588, 1021, 281, 4948, 264, 1589, 2701, 51188, 51188, 295, 710, 11, 570, 264, 1185, 393, 17470, 510, 13, 51278, 51278, 467, 767, 575, 2105, 281, 264, 1867, 11, 293, 309, 393, 445, 5055, 264, 1867, 322, 264, 5598, 13, 51540, 51540, 407, 5969, 291, 362, 257, 636, 295, 1472, 37714, 264, 1589, 2701, 295, 341, 11, 264, 1185, 486, 51700, 51700, 17470, 293, 2584, 11200, 2031, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.11772952806081204, "compression_ratio": 1.8173374613003095, "no_speech_prob": 9.81723042059457e-06}, {"id": 760, "seek": 271332, "start": 2729.8, "end": 2731.6000000000004, "text": " of z, because the system can cheat here.", "tokens": [50364, 400, 550, 764, 341, 382, 257, 3779, 281, 3847, 257, 18161, 2533, 11, 597, 490, 2031, 293, 288, 307, 516, 281, 6069, 50670, 50670, 341, 2146, 13, 50720, 50720, 400, 550, 498, 341, 2146, 307, 731, 12, 17227, 2001, 11, 550, 286, 500, 380, 643, 281, 1190, 264, 19618, 9284, 50894, 50894, 337, 38253, 3602, 13, 50944, 50944, 286, 445, 643, 281, 1190, 807, 264, 2058, 19866, 13, 51054, 51054, 407, 586, 309, 3643, 588, 1850, 300, 309, 311, 588, 1021, 281, 4948, 264, 1589, 2701, 51188, 51188, 295, 710, 11, 570, 264, 1185, 393, 17470, 510, 13, 51278, 51278, 467, 767, 575, 2105, 281, 264, 1867, 11, 293, 309, 393, 445, 5055, 264, 1867, 322, 264, 5598, 13, 51540, 51540, 407, 5969, 291, 362, 257, 636, 295, 1472, 37714, 264, 1589, 2701, 295, 341, 11, 264, 1185, 486, 51700, 51700, 17470, 293, 2584, 11200, 2031, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.11772952806081204, "compression_ratio": 1.8173374613003095, "no_speech_prob": 9.81723042059457e-06}, {"id": 761, "seek": 271332, "start": 2731.6000000000004, "end": 2736.84, "text": " It actually has access to the answer, and it can just copy the answer on the output.", "tokens": [50364, 400, 550, 764, 341, 382, 257, 3779, 281, 3847, 257, 18161, 2533, 11, 597, 490, 2031, 293, 288, 307, 516, 281, 6069, 50670, 50670, 341, 2146, 13, 50720, 50720, 400, 550, 498, 341, 2146, 307, 731, 12, 17227, 2001, 11, 550, 286, 500, 380, 643, 281, 1190, 264, 19618, 9284, 50894, 50894, 337, 38253, 3602, 13, 50944, 50944, 286, 445, 643, 281, 1190, 807, 264, 2058, 19866, 13, 51054, 51054, 407, 586, 309, 3643, 588, 1850, 300, 309, 311, 588, 1021, 281, 4948, 264, 1589, 2701, 51188, 51188, 295, 710, 11, 570, 264, 1185, 393, 17470, 510, 13, 51278, 51278, 467, 767, 575, 2105, 281, 264, 1867, 11, 293, 309, 393, 445, 5055, 264, 1867, 322, 264, 5598, 13, 51540, 51540, 407, 5969, 291, 362, 257, 636, 295, 1472, 37714, 264, 1589, 2701, 295, 341, 11, 264, 1185, 486, 51700, 51700, 17470, 293, 2584, 11200, 2031, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.11772952806081204, "compression_ratio": 1.8173374613003095, "no_speech_prob": 9.81723042059457e-06}, {"id": 762, "seek": 271332, "start": 2736.84, "end": 2740.04, "text": " So unless you have a way of restricting the information content of this, the system will", "tokens": [50364, 400, 550, 764, 341, 382, 257, 3779, 281, 3847, 257, 18161, 2533, 11, 597, 490, 2031, 293, 288, 307, 516, 281, 6069, 50670, 50670, 341, 2146, 13, 50720, 50720, 400, 550, 498, 341, 2146, 307, 731, 12, 17227, 2001, 11, 550, 286, 500, 380, 643, 281, 1190, 264, 19618, 9284, 50894, 50894, 337, 38253, 3602, 13, 50944, 50944, 286, 445, 643, 281, 1190, 807, 264, 2058, 19866, 13, 51054, 51054, 407, 586, 309, 3643, 588, 1850, 300, 309, 311, 588, 1021, 281, 4948, 264, 1589, 2701, 51188, 51188, 295, 710, 11, 570, 264, 1185, 393, 17470, 510, 13, 51278, 51278, 467, 767, 575, 2105, 281, 264, 1867, 11, 293, 309, 393, 445, 5055, 264, 1867, 322, 264, 5598, 13, 51540, 51540, 407, 5969, 291, 362, 257, 636, 295, 1472, 37714, 264, 1589, 2701, 295, 341, 11, 264, 1185, 486, 51700, 51700, 17470, 293, 2584, 11200, 2031, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.11772952806081204, "compression_ratio": 1.8173374613003095, "no_speech_prob": 9.81723042059457e-06}, {"id": 763, "seek": 271332, "start": 2740.04, "end": 2741.2400000000002, "text": " cheat and completely ignore x.", "tokens": [50364, 400, 550, 764, 341, 382, 257, 3779, 281, 3847, 257, 18161, 2533, 11, 597, 490, 2031, 293, 288, 307, 516, 281, 6069, 50670, 50670, 341, 2146, 13, 50720, 50720, 400, 550, 498, 341, 2146, 307, 731, 12, 17227, 2001, 11, 550, 286, 500, 380, 643, 281, 1190, 264, 19618, 9284, 50894, 50894, 337, 38253, 3602, 13, 50944, 50944, 286, 445, 643, 281, 1190, 807, 264, 2058, 19866, 13, 51054, 51054, 407, 586, 309, 3643, 588, 1850, 300, 309, 311, 588, 1021, 281, 4948, 264, 1589, 2701, 51188, 51188, 295, 710, 11, 570, 264, 1185, 393, 17470, 510, 13, 51278, 51278, 467, 767, 575, 2105, 281, 264, 1867, 11, 293, 309, 393, 445, 5055, 264, 1867, 322, 264, 5598, 13, 51540, 51540, 407, 5969, 291, 362, 257, 636, 295, 1472, 37714, 264, 1589, 2701, 295, 341, 11, 264, 1185, 486, 51700, 51700, 17470, 293, 2584, 11200, 2031, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.11772952806081204, "compression_ratio": 1.8173374613003095, "no_speech_prob": 9.81723042059457e-06}, {"id": 764, "seek": 274124, "start": 2741.24, "end": 2748.9199999999996, "text": " So if you have the unconditional version of this where you don't have this part, this", "tokens": [50364, 407, 498, 291, 362, 264, 47916, 3037, 295, 341, 689, 291, 500, 380, 362, 341, 644, 11, 341, 50748, 50748, 307, 1219, 257, 3890, 1602, 8399, 22660, 19866, 420, 257, 637, 11668, 8399, 22660, 19866, 13, 51016, 51016, 639, 1985, 534, 731, 294, 264, 2020, 300, 498, 291, 3847, 257, 637, 11668, 8399, 22660, 19866, 411, 341, 11, 51208, 51208, 689, 264, 979, 19866, 307, 8213, 293, 264, 2058, 19866, 307, 257, 1326, 7914, 295, 257, 18161, 2533, 11, 322, 264, 297, 468, 11, 51488, 51488, 264, 13766, 295, 264, 979, 8616, 8141, 917, 493, 885, 707, 3166, 295, 4342, 11, 597, 1355, 51711, 51711], "temperature": 0.0, "avg_logprob": -0.14008218996992736, "compression_ratio": 1.7982456140350878, "no_speech_prob": 5.594195044977823e-06}, {"id": 765, "seek": 274124, "start": 2748.9199999999996, "end": 2754.2799999999997, "text": " is called a regularized autoencoder or a sparse autoencoder.", "tokens": [50364, 407, 498, 291, 362, 264, 47916, 3037, 295, 341, 689, 291, 500, 380, 362, 341, 644, 11, 341, 50748, 50748, 307, 1219, 257, 3890, 1602, 8399, 22660, 19866, 420, 257, 637, 11668, 8399, 22660, 19866, 13, 51016, 51016, 639, 1985, 534, 731, 294, 264, 2020, 300, 498, 291, 3847, 257, 637, 11668, 8399, 22660, 19866, 411, 341, 11, 51208, 51208, 689, 264, 979, 19866, 307, 8213, 293, 264, 2058, 19866, 307, 257, 1326, 7914, 295, 257, 18161, 2533, 11, 322, 264, 297, 468, 11, 51488, 51488, 264, 13766, 295, 264, 979, 8616, 8141, 917, 493, 885, 707, 3166, 295, 4342, 11, 597, 1355, 51711, 51711], "temperature": 0.0, "avg_logprob": -0.14008218996992736, "compression_ratio": 1.7982456140350878, "no_speech_prob": 5.594195044977823e-06}, {"id": 766, "seek": 274124, "start": 2754.2799999999997, "end": 2758.12, "text": " This works really well in the sense that if you train a sparse autoencoder like this,", "tokens": [50364, 407, 498, 291, 362, 264, 47916, 3037, 295, 341, 689, 291, 500, 380, 362, 341, 644, 11, 341, 50748, 50748, 307, 1219, 257, 3890, 1602, 8399, 22660, 19866, 420, 257, 637, 11668, 8399, 22660, 19866, 13, 51016, 51016, 639, 1985, 534, 731, 294, 264, 2020, 300, 498, 291, 3847, 257, 637, 11668, 8399, 22660, 19866, 411, 341, 11, 51208, 51208, 689, 264, 979, 19866, 307, 8213, 293, 264, 2058, 19866, 307, 257, 1326, 7914, 295, 257, 18161, 2533, 11, 322, 264, 297, 468, 11, 51488, 51488, 264, 13766, 295, 264, 979, 8616, 8141, 917, 493, 885, 707, 3166, 295, 4342, 11, 597, 1355, 51711, 51711], "temperature": 0.0, "avg_logprob": -0.14008218996992736, "compression_ratio": 1.7982456140350878, "no_speech_prob": 5.594195044977823e-06}, {"id": 767, "seek": 274124, "start": 2758.12, "end": 2763.72, "text": " where the decoder is linear and the encoder is a few layers of a neural net, on the nist,", "tokens": [50364, 407, 498, 291, 362, 264, 47916, 3037, 295, 341, 689, 291, 500, 380, 362, 341, 644, 11, 341, 50748, 50748, 307, 1219, 257, 3890, 1602, 8399, 22660, 19866, 420, 257, 637, 11668, 8399, 22660, 19866, 13, 51016, 51016, 639, 1985, 534, 731, 294, 264, 2020, 300, 498, 291, 3847, 257, 637, 11668, 8399, 22660, 19866, 411, 341, 11, 51208, 51208, 689, 264, 979, 19866, 307, 8213, 293, 264, 2058, 19866, 307, 257, 1326, 7914, 295, 257, 18161, 2533, 11, 322, 264, 297, 468, 11, 51488, 51488, 264, 13766, 295, 264, 979, 8616, 8141, 917, 493, 885, 707, 3166, 295, 4342, 11, 597, 1355, 51711, 51711], "temperature": 0.0, "avg_logprob": -0.14008218996992736, "compression_ratio": 1.7982456140350878, "no_speech_prob": 5.594195044977823e-06}, {"id": 768, "seek": 274124, "start": 2763.72, "end": 2768.18, "text": " the columns of the decoding matrix end up being little parts of characters, which means", "tokens": [50364, 407, 498, 291, 362, 264, 47916, 3037, 295, 341, 689, 291, 500, 380, 362, 341, 644, 11, 341, 50748, 50748, 307, 1219, 257, 3890, 1602, 8399, 22660, 19866, 420, 257, 637, 11668, 8399, 22660, 19866, 13, 51016, 51016, 639, 1985, 534, 731, 294, 264, 2020, 300, 498, 291, 3847, 257, 637, 11668, 8399, 22660, 19866, 411, 341, 11, 51208, 51208, 689, 264, 979, 19866, 307, 8213, 293, 264, 2058, 19866, 307, 257, 1326, 7914, 295, 257, 18161, 2533, 11, 322, 264, 297, 468, 11, 51488, 51488, 264, 13766, 295, 264, 979, 8616, 8141, 917, 493, 885, 707, 3166, 295, 4342, 11, 597, 1355, 51711, 51711], "temperature": 0.0, "avg_logprob": -0.14008218996992736, "compression_ratio": 1.7982456140350878, "no_speech_prob": 5.594195044977823e-06}, {"id": 769, "seek": 276818, "start": 2768.18, "end": 2772.68, "text": " you can reconstruct any character with a linear combination of a small number of those things.", "tokens": [50364, 291, 393, 31499, 604, 2517, 365, 257, 8213, 6562, 295, 257, 1359, 1230, 295, 729, 721, 13, 50589, 50589, 3432, 818, 613, 721, 16871, 13, 50733, 50733, 759, 291, 3847, 322, 3303, 3256, 26531, 11, 341, 307, 257, 2539, 9284, 2614, 13, 50927, 50927, 509, 917, 493, 365, 21841, 4691, 46866, 11, 597, 307, 869, 13, 51095, 51095, 509, 362, 281, 360, 257, 707, 857, 295, 47548, 4559, 337, 264, 5267, 13, 51297, 51297, 759, 291, 360, 341, 294, 257, 45216, 304, 4391, 689, 264, 979, 19866, 307, 767, 45216, 304, 11, 370, 51519, 51519, 710, 307, 406, 257, 8062, 13, 51571, 51571, 467, 311, 257, 3840, 295, 4111, 11317, 11, 293, 550, 291, 1190, 552, 807, 3754, 15892, 293, 291, 14722, 51723, 51723, 264, 2408, 11, 293, 300, 311, 577, 291, 979, 1429, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.13717603340423365, "compression_ratio": 1.773462783171521, "no_speech_prob": 9.515580131846946e-06}, {"id": 770, "seek": 276818, "start": 2772.68, "end": 2775.56, "text": " People call these things atoms.", "tokens": [50364, 291, 393, 31499, 604, 2517, 365, 257, 8213, 6562, 295, 257, 1359, 1230, 295, 729, 721, 13, 50589, 50589, 3432, 818, 613, 721, 16871, 13, 50733, 50733, 759, 291, 3847, 322, 3303, 3256, 26531, 11, 341, 307, 257, 2539, 9284, 2614, 13, 50927, 50927, 509, 917, 493, 365, 21841, 4691, 46866, 11, 597, 307, 869, 13, 51095, 51095, 509, 362, 281, 360, 257, 707, 857, 295, 47548, 4559, 337, 264, 5267, 13, 51297, 51297, 759, 291, 360, 341, 294, 257, 45216, 304, 4391, 689, 264, 979, 19866, 307, 767, 45216, 304, 11, 370, 51519, 51519, 710, 307, 406, 257, 8062, 13, 51571, 51571, 467, 311, 257, 3840, 295, 4111, 11317, 11, 293, 550, 291, 1190, 552, 807, 3754, 15892, 293, 291, 14722, 51723, 51723, 264, 2408, 11, 293, 300, 311, 577, 291, 979, 1429, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.13717603340423365, "compression_ratio": 1.773462783171521, "no_speech_prob": 9.515580131846946e-06}, {"id": 771, "seek": 276818, "start": 2775.56, "end": 2779.44, "text": " If you train on natural image patches, this is a learning algorithm running.", "tokens": [50364, 291, 393, 31499, 604, 2517, 365, 257, 8213, 6562, 295, 257, 1359, 1230, 295, 729, 721, 13, 50589, 50589, 3432, 818, 613, 721, 16871, 13, 50733, 50733, 759, 291, 3847, 322, 3303, 3256, 26531, 11, 341, 307, 257, 2539, 9284, 2614, 13, 50927, 50927, 509, 917, 493, 365, 21841, 4691, 46866, 11, 597, 307, 869, 13, 51095, 51095, 509, 362, 281, 360, 257, 707, 857, 295, 47548, 4559, 337, 264, 5267, 13, 51297, 51297, 759, 291, 360, 341, 294, 257, 45216, 304, 4391, 689, 264, 979, 19866, 307, 767, 45216, 304, 11, 370, 51519, 51519, 710, 307, 406, 257, 8062, 13, 51571, 51571, 467, 311, 257, 3840, 295, 4111, 11317, 11, 293, 550, 291, 1190, 552, 807, 3754, 15892, 293, 291, 14722, 51723, 51723, 264, 2408, 11, 293, 300, 311, 577, 291, 979, 1429, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.13717603340423365, "compression_ratio": 1.773462783171521, "no_speech_prob": 9.515580131846946e-06}, {"id": 772, "seek": 276818, "start": 2779.44, "end": 2782.7999999999997, "text": " You end up with oriented edge detectors, which is great.", "tokens": [50364, 291, 393, 31499, 604, 2517, 365, 257, 8213, 6562, 295, 257, 1359, 1230, 295, 729, 721, 13, 50589, 50589, 3432, 818, 613, 721, 16871, 13, 50733, 50733, 759, 291, 3847, 322, 3303, 3256, 26531, 11, 341, 307, 257, 2539, 9284, 2614, 13, 50927, 50927, 509, 917, 493, 365, 21841, 4691, 46866, 11, 597, 307, 869, 13, 51095, 51095, 509, 362, 281, 360, 257, 707, 857, 295, 47548, 4559, 337, 264, 5267, 13, 51297, 51297, 759, 291, 360, 341, 294, 257, 45216, 304, 4391, 689, 264, 979, 19866, 307, 767, 45216, 304, 11, 370, 51519, 51519, 710, 307, 406, 257, 8062, 13, 51571, 51571, 467, 311, 257, 3840, 295, 4111, 11317, 11, 293, 550, 291, 1190, 552, 807, 3754, 15892, 293, 291, 14722, 51723, 51723, 264, 2408, 11, 293, 300, 311, 577, 291, 979, 1429, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.13717603340423365, "compression_ratio": 1.773462783171521, "no_speech_prob": 9.515580131846946e-06}, {"id": 773, "seek": 276818, "start": 2782.7999999999997, "end": 2786.8399999999997, "text": " You have to do a little bit of whitening for the images.", "tokens": [50364, 291, 393, 31499, 604, 2517, 365, 257, 8213, 6562, 295, 257, 1359, 1230, 295, 729, 721, 13, 50589, 50589, 3432, 818, 613, 721, 16871, 13, 50733, 50733, 759, 291, 3847, 322, 3303, 3256, 26531, 11, 341, 307, 257, 2539, 9284, 2614, 13, 50927, 50927, 509, 917, 493, 365, 21841, 4691, 46866, 11, 597, 307, 869, 13, 51095, 51095, 509, 362, 281, 360, 257, 707, 857, 295, 47548, 4559, 337, 264, 5267, 13, 51297, 51297, 759, 291, 360, 341, 294, 257, 45216, 304, 4391, 689, 264, 979, 19866, 307, 767, 45216, 304, 11, 370, 51519, 51519, 710, 307, 406, 257, 8062, 13, 51571, 51571, 467, 311, 257, 3840, 295, 4111, 11317, 11, 293, 550, 291, 1190, 552, 807, 3754, 15892, 293, 291, 14722, 51723, 51723, 264, 2408, 11, 293, 300, 311, 577, 291, 979, 1429, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.13717603340423365, "compression_ratio": 1.773462783171521, "no_speech_prob": 9.515580131846946e-06}, {"id": 774, "seek": 276818, "start": 2786.8399999999997, "end": 2791.2799999999997, "text": " If you do this in a convolutional mode where the decoder is actually convolutional, so", "tokens": [50364, 291, 393, 31499, 604, 2517, 365, 257, 8213, 6562, 295, 257, 1359, 1230, 295, 729, 721, 13, 50589, 50589, 3432, 818, 613, 721, 16871, 13, 50733, 50733, 759, 291, 3847, 322, 3303, 3256, 26531, 11, 341, 307, 257, 2539, 9284, 2614, 13, 50927, 50927, 509, 917, 493, 365, 21841, 4691, 46866, 11, 597, 307, 869, 13, 51095, 51095, 509, 362, 281, 360, 257, 707, 857, 295, 47548, 4559, 337, 264, 5267, 13, 51297, 51297, 759, 291, 360, 341, 294, 257, 45216, 304, 4391, 689, 264, 979, 19866, 307, 767, 45216, 304, 11, 370, 51519, 51519, 710, 307, 406, 257, 8062, 13, 51571, 51571, 467, 311, 257, 3840, 295, 4111, 11317, 11, 293, 550, 291, 1190, 552, 807, 3754, 15892, 293, 291, 14722, 51723, 51723, 264, 2408, 11, 293, 300, 311, 577, 291, 979, 1429, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.13717603340423365, "compression_ratio": 1.773462783171521, "no_speech_prob": 9.515580131846946e-06}, {"id": 775, "seek": 276818, "start": 2791.2799999999997, "end": 2792.3199999999997, "text": " z is not a vector.", "tokens": [50364, 291, 393, 31499, 604, 2517, 365, 257, 8213, 6562, 295, 257, 1359, 1230, 295, 729, 721, 13, 50589, 50589, 3432, 818, 613, 721, 16871, 13, 50733, 50733, 759, 291, 3847, 322, 3303, 3256, 26531, 11, 341, 307, 257, 2539, 9284, 2614, 13, 50927, 50927, 509, 917, 493, 365, 21841, 4691, 46866, 11, 597, 307, 869, 13, 51095, 51095, 509, 362, 281, 360, 257, 707, 857, 295, 47548, 4559, 337, 264, 5267, 13, 51297, 51297, 759, 291, 360, 341, 294, 257, 45216, 304, 4391, 689, 264, 979, 19866, 307, 767, 45216, 304, 11, 370, 51519, 51519, 710, 307, 406, 257, 8062, 13, 51571, 51571, 467, 311, 257, 3840, 295, 4111, 11317, 11, 293, 550, 291, 1190, 552, 807, 3754, 15892, 293, 291, 14722, 51723, 51723, 264, 2408, 11, 293, 300, 311, 577, 291, 979, 1429, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.13717603340423365, "compression_ratio": 1.773462783171521, "no_speech_prob": 9.515580131846946e-06}, {"id": 776, "seek": 276818, "start": 2792.3199999999997, "end": 2795.3599999999997, "text": " It's a bunch of feature maps, and then you run them through convolutions and you compute", "tokens": [50364, 291, 393, 31499, 604, 2517, 365, 257, 8213, 6562, 295, 257, 1359, 1230, 295, 729, 721, 13, 50589, 50589, 3432, 818, 613, 721, 16871, 13, 50733, 50733, 759, 291, 3847, 322, 3303, 3256, 26531, 11, 341, 307, 257, 2539, 9284, 2614, 13, 50927, 50927, 509, 917, 493, 365, 21841, 4691, 46866, 11, 597, 307, 869, 13, 51095, 51095, 509, 362, 281, 360, 257, 707, 857, 295, 47548, 4559, 337, 264, 5267, 13, 51297, 51297, 759, 291, 360, 341, 294, 257, 45216, 304, 4391, 689, 264, 979, 19866, 307, 767, 45216, 304, 11, 370, 51519, 51519, 710, 307, 406, 257, 8062, 13, 51571, 51571, 467, 311, 257, 3840, 295, 4111, 11317, 11, 293, 550, 291, 1190, 552, 807, 3754, 15892, 293, 291, 14722, 51723, 51723, 264, 2408, 11, 293, 300, 311, 577, 291, 979, 1429, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.13717603340423365, "compression_ratio": 1.773462783171521, "no_speech_prob": 9.515580131846946e-06}, {"id": 777, "seek": 276818, "start": 2795.3599999999997, "end": 2797.6, "text": " the sum, and that's how you decode.", "tokens": [50364, 291, 393, 31499, 604, 2517, 365, 257, 8213, 6562, 295, 257, 1359, 1230, 295, 729, 721, 13, 50589, 50589, 3432, 818, 613, 721, 16871, 13, 50733, 50733, 759, 291, 3847, 322, 3303, 3256, 26531, 11, 341, 307, 257, 2539, 9284, 2614, 13, 50927, 50927, 509, 917, 493, 365, 21841, 4691, 46866, 11, 597, 307, 869, 13, 51095, 51095, 509, 362, 281, 360, 257, 707, 857, 295, 47548, 4559, 337, 264, 5267, 13, 51297, 51297, 759, 291, 360, 341, 294, 257, 45216, 304, 4391, 689, 264, 979, 19866, 307, 767, 45216, 304, 11, 370, 51519, 51519, 710, 307, 406, 257, 8062, 13, 51571, 51571, 467, 311, 257, 3840, 295, 4111, 11317, 11, 293, 550, 291, 1190, 552, 807, 3754, 15892, 293, 291, 14722, 51723, 51723, 264, 2408, 11, 293, 300, 311, 577, 291, 979, 1429, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.13717603340423365, "compression_ratio": 1.773462783171521, "no_speech_prob": 9.515580131846946e-06}, {"id": 778, "seek": 279760, "start": 2797.6, "end": 2802.52, "text": " You get beautiful... These are the business functions in the decoder, the kernels that", "tokens": [50364, 509, 483, 2238, 1097, 1981, 366, 264, 1606, 6828, 294, 264, 979, 19866, 11, 264, 23434, 1625, 300, 50610, 50610, 286, 1143, 281, 31499, 264, 23930, 13, 50938, 50938, 1981, 366, 17443, 294, 264, 700, 4583, 295, 264, 2058, 19866, 13, 51064, 51064, 440, 2058, 19866, 787, 575, 732, 7914, 294, 341, 1389, 11, 293, 436, 434, 1936, 8013, 5267, 295, 264, 51280, 51280, 979, 19866, 13, 51330, 51330, 639, 307, 337, 502, 11, 568, 11, 1017, 11, 1649, 11, 3165, 11, 8858, 11, 12145, 15995, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.15395136193914727, "compression_ratio": 1.5643564356435644, "no_speech_prob": 7.182975423347671e-06}, {"id": 779, "seek": 279760, "start": 2802.52, "end": 2809.08, "text": " I used to reconstruct the outputs.", "tokens": [50364, 509, 483, 2238, 1097, 1981, 366, 264, 1606, 6828, 294, 264, 979, 19866, 11, 264, 23434, 1625, 300, 50610, 50610, 286, 1143, 281, 31499, 264, 23930, 13, 50938, 50938, 1981, 366, 17443, 294, 264, 700, 4583, 295, 264, 2058, 19866, 13, 51064, 51064, 440, 2058, 19866, 787, 575, 732, 7914, 294, 341, 1389, 11, 293, 436, 434, 1936, 8013, 5267, 295, 264, 51280, 51280, 979, 19866, 13, 51330, 51330, 639, 307, 337, 502, 11, 568, 11, 1017, 11, 1649, 11, 3165, 11, 8858, 11, 12145, 15995, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.15395136193914727, "compression_ratio": 1.5643564356435644, "no_speech_prob": 7.182975423347671e-06}, {"id": 780, "seek": 279760, "start": 2809.08, "end": 2811.6, "text": " These are weights in the first layer of the encoder.", "tokens": [50364, 509, 483, 2238, 1097, 1981, 366, 264, 1606, 6828, 294, 264, 979, 19866, 11, 264, 23434, 1625, 300, 50610, 50610, 286, 1143, 281, 31499, 264, 23930, 13, 50938, 50938, 1981, 366, 17443, 294, 264, 700, 4583, 295, 264, 2058, 19866, 13, 51064, 51064, 440, 2058, 19866, 787, 575, 732, 7914, 294, 341, 1389, 11, 293, 436, 434, 1936, 8013, 5267, 295, 264, 51280, 51280, 979, 19866, 13, 51330, 51330, 639, 307, 337, 502, 11, 568, 11, 1017, 11, 1649, 11, 3165, 11, 8858, 11, 12145, 15995, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.15395136193914727, "compression_ratio": 1.5643564356435644, "no_speech_prob": 7.182975423347671e-06}, {"id": 781, "seek": 279760, "start": 2811.6, "end": 2815.92, "text": " The encoder only has two layers in this case, and they're basically mirror images of the", "tokens": [50364, 509, 483, 2238, 1097, 1981, 366, 264, 1606, 6828, 294, 264, 979, 19866, 11, 264, 23434, 1625, 300, 50610, 50610, 286, 1143, 281, 31499, 264, 23930, 13, 50938, 50938, 1981, 366, 17443, 294, 264, 700, 4583, 295, 264, 2058, 19866, 13, 51064, 51064, 440, 2058, 19866, 787, 575, 732, 7914, 294, 341, 1389, 11, 293, 436, 434, 1936, 8013, 5267, 295, 264, 51280, 51280, 979, 19866, 13, 51330, 51330, 639, 307, 337, 502, 11, 568, 11, 1017, 11, 1649, 11, 3165, 11, 8858, 11, 12145, 15995, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.15395136193914727, "compression_ratio": 1.5643564356435644, "no_speech_prob": 7.182975423347671e-06}, {"id": 782, "seek": 279760, "start": 2815.92, "end": 2816.92, "text": " decoder.", "tokens": [50364, 509, 483, 2238, 1097, 1981, 366, 264, 1606, 6828, 294, 264, 979, 19866, 11, 264, 23434, 1625, 300, 50610, 50610, 286, 1143, 281, 31499, 264, 23930, 13, 50938, 50938, 1981, 366, 17443, 294, 264, 700, 4583, 295, 264, 2058, 19866, 13, 51064, 51064, 440, 2058, 19866, 787, 575, 732, 7914, 294, 341, 1389, 11, 293, 436, 434, 1936, 8013, 5267, 295, 264, 51280, 51280, 979, 19866, 13, 51330, 51330, 639, 307, 337, 502, 11, 568, 11, 1017, 11, 1649, 11, 3165, 11, 8858, 11, 12145, 15995, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.15395136193914727, "compression_ratio": 1.5643564356435644, "no_speech_prob": 7.182975423347671e-06}, {"id": 783, "seek": 279760, "start": 2816.92, "end": 2822.68, "text": " This is for 1, 2, 4, 8, 16, 32, 64 filters.", "tokens": [50364, 509, 483, 2238, 1097, 1981, 366, 264, 1606, 6828, 294, 264, 979, 19866, 11, 264, 23434, 1625, 300, 50610, 50610, 286, 1143, 281, 31499, 264, 23930, 13, 50938, 50938, 1981, 366, 17443, 294, 264, 700, 4583, 295, 264, 2058, 19866, 13, 51064, 51064, 440, 2058, 19866, 787, 575, 732, 7914, 294, 341, 1389, 11, 293, 436, 434, 1936, 8013, 5267, 295, 264, 51280, 51280, 979, 19866, 13, 51330, 51330, 639, 307, 337, 502, 11, 568, 11, 1017, 11, 1649, 11, 3165, 11, 8858, 11, 12145, 15995, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.15395136193914727, "compression_ratio": 1.5643564356435644, "no_speech_prob": 7.182975423347671e-06}, {"id": 784, "seek": 282268, "start": 2822.68, "end": 2829.24, "text": " You get a very high diversity of filters centered around gradings, oriented edges at various", "tokens": [50364, 509, 483, 257, 588, 1090, 8811, 295, 15995, 18988, 926, 2771, 1109, 11, 21841, 8819, 412, 3683, 50692, 50692, 20250, 13, 50742, 50742, 467, 311, 534, 1481, 13, 50854, 50854, 1981, 366, 1266, 12, 5294, 12, 2641, 3542, 13, 50998, 50998, 5048, 3938, 11, 321, 393, 36292, 341, 2899, 570, 309, 311, 534, 1880, 13, 51224, 51224, 639, 307, 11, 797, 11, 15995, 300, 366, 3264, 322, 3303, 3256, 26531, 490, 264, 383, 12775, 1899, 28872, 11, 51508, 51508, 1722, 87, 24, 23434, 1625, 13, 51608, 51608, 3950, 366, 11760, 4111, 11317, 300, 366, 4664, 637, 11668, 300, 393, 31499, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.18603787055382362, "compression_ratio": 1.5461254612546125, "no_speech_prob": 1.1365418686182238e-06}, {"id": 785, "seek": 282268, "start": 2829.24, "end": 2830.24, "text": " frequencies.", "tokens": [50364, 509, 483, 257, 588, 1090, 8811, 295, 15995, 18988, 926, 2771, 1109, 11, 21841, 8819, 412, 3683, 50692, 50692, 20250, 13, 50742, 50742, 467, 311, 534, 1481, 13, 50854, 50854, 1981, 366, 1266, 12, 5294, 12, 2641, 3542, 13, 50998, 50998, 5048, 3938, 11, 321, 393, 36292, 341, 2899, 570, 309, 311, 534, 1880, 13, 51224, 51224, 639, 307, 11, 797, 11, 15995, 300, 366, 3264, 322, 3303, 3256, 26531, 490, 264, 383, 12775, 1899, 28872, 11, 51508, 51508, 1722, 87, 24, 23434, 1625, 13, 51608, 51608, 3950, 366, 11760, 4111, 11317, 300, 366, 4664, 637, 11668, 300, 393, 31499, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.18603787055382362, "compression_ratio": 1.5461254612546125, "no_speech_prob": 1.1365418686182238e-06}, {"id": 786, "seek": 282268, "start": 2830.24, "end": 2832.48, "text": " It's really nice.", "tokens": [50364, 509, 483, 257, 588, 1090, 8811, 295, 15995, 18988, 926, 2771, 1109, 11, 21841, 8819, 412, 3683, 50692, 50692, 20250, 13, 50742, 50742, 467, 311, 534, 1481, 13, 50854, 50854, 1981, 366, 1266, 12, 5294, 12, 2641, 3542, 13, 50998, 50998, 5048, 3938, 11, 321, 393, 36292, 341, 2899, 570, 309, 311, 534, 1880, 13, 51224, 51224, 639, 307, 11, 797, 11, 15995, 300, 366, 3264, 322, 3303, 3256, 26531, 490, 264, 383, 12775, 1899, 28872, 11, 51508, 51508, 1722, 87, 24, 23434, 1625, 13, 51608, 51608, 3950, 366, 11760, 4111, 11317, 300, 366, 4664, 637, 11668, 300, 393, 31499, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.18603787055382362, "compression_ratio": 1.5461254612546125, "no_speech_prob": 1.1365418686182238e-06}, {"id": 787, "seek": 282268, "start": 2832.48, "end": 2835.3599999999997, "text": " These are 10-year-old results.", "tokens": [50364, 509, 483, 257, 588, 1090, 8811, 295, 15995, 18988, 926, 2771, 1109, 11, 21841, 8819, 412, 3683, 50692, 50692, 20250, 13, 50742, 50742, 467, 311, 534, 1481, 13, 50854, 50854, 1981, 366, 1266, 12, 5294, 12, 2641, 3542, 13, 50998, 50998, 5048, 3938, 11, 321, 393, 36292, 341, 2899, 570, 309, 311, 534, 1880, 13, 51224, 51224, 639, 307, 11, 797, 11, 15995, 300, 366, 3264, 322, 3303, 3256, 26531, 490, 264, 383, 12775, 1899, 28872, 11, 51508, 51508, 1722, 87, 24, 23434, 1625, 13, 51608, 51608, 3950, 366, 11760, 4111, 11317, 300, 366, 4664, 637, 11668, 300, 393, 31499, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.18603787055382362, "compression_ratio": 1.5461254612546125, "no_speech_prob": 1.1365418686182238e-06}, {"id": 788, "seek": 282268, "start": 2835.3599999999997, "end": 2839.8799999999997, "text": " More recently, we can revive this technology because it's really interesting.", "tokens": [50364, 509, 483, 257, 588, 1090, 8811, 295, 15995, 18988, 926, 2771, 1109, 11, 21841, 8819, 412, 3683, 50692, 50692, 20250, 13, 50742, 50742, 467, 311, 534, 1481, 13, 50854, 50854, 1981, 366, 1266, 12, 5294, 12, 2641, 3542, 13, 50998, 50998, 5048, 3938, 11, 321, 393, 36292, 341, 2899, 570, 309, 311, 534, 1880, 13, 51224, 51224, 639, 307, 11, 797, 11, 15995, 300, 366, 3264, 322, 3303, 3256, 26531, 490, 264, 383, 12775, 1899, 28872, 11, 51508, 51508, 1722, 87, 24, 23434, 1625, 13, 51608, 51608, 3950, 366, 11760, 4111, 11317, 300, 366, 4664, 637, 11668, 300, 393, 31499, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.18603787055382362, "compression_ratio": 1.5461254612546125, "no_speech_prob": 1.1365418686182238e-06}, {"id": 789, "seek": 282268, "start": 2839.8799999999997, "end": 2845.56, "text": " This is, again, filters that are learned on natural image patches from the CIFAR dataset,", "tokens": [50364, 509, 483, 257, 588, 1090, 8811, 295, 15995, 18988, 926, 2771, 1109, 11, 21841, 8819, 412, 3683, 50692, 50692, 20250, 13, 50742, 50742, 467, 311, 534, 1481, 13, 50854, 50854, 1981, 366, 1266, 12, 5294, 12, 2641, 3542, 13, 50998, 50998, 5048, 3938, 11, 321, 393, 36292, 341, 2899, 570, 309, 311, 534, 1880, 13, 51224, 51224, 639, 307, 11, 797, 11, 15995, 300, 366, 3264, 322, 3303, 3256, 26531, 490, 264, 383, 12775, 1899, 28872, 11, 51508, 51508, 1722, 87, 24, 23434, 1625, 13, 51608, 51608, 3950, 366, 11760, 4111, 11317, 300, 366, 4664, 637, 11668, 300, 393, 31499, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.18603787055382362, "compression_ratio": 1.5461254612546125, "no_speech_prob": 1.1365418686182238e-06}, {"id": 790, "seek": 282268, "start": 2845.56, "end": 2847.56, "text": " 9x9 kernels.", "tokens": [50364, 509, 483, 257, 588, 1090, 8811, 295, 15995, 18988, 926, 2771, 1109, 11, 21841, 8819, 412, 3683, 50692, 50692, 20250, 13, 50742, 50742, 467, 311, 534, 1481, 13, 50854, 50854, 1981, 366, 1266, 12, 5294, 12, 2641, 3542, 13, 50998, 50998, 5048, 3938, 11, 321, 393, 36292, 341, 2899, 570, 309, 311, 534, 1880, 13, 51224, 51224, 639, 307, 11, 797, 11, 15995, 300, 366, 3264, 322, 3303, 3256, 26531, 490, 264, 383, 12775, 1899, 28872, 11, 51508, 51508, 1722, 87, 24, 23434, 1625, 13, 51608, 51608, 3950, 366, 11760, 4111, 11317, 300, 366, 4664, 637, 11668, 300, 393, 31499, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.18603787055382362, "compression_ratio": 1.5461254612546125, "no_speech_prob": 1.1365418686182238e-06}, {"id": 791, "seek": 282268, "start": 2847.56, "end": 2851.08, "text": " Those are corresponding feature maps that are extremely sparse that can reconstruct", "tokens": [50364, 509, 483, 257, 588, 1090, 8811, 295, 15995, 18988, 926, 2771, 1109, 11, 21841, 8819, 412, 3683, 50692, 50692, 20250, 13, 50742, 50742, 467, 311, 534, 1481, 13, 50854, 50854, 1981, 366, 1266, 12, 5294, 12, 2641, 3542, 13, 50998, 50998, 5048, 3938, 11, 321, 393, 36292, 341, 2899, 570, 309, 311, 534, 1880, 13, 51224, 51224, 639, 307, 11, 797, 11, 15995, 300, 366, 3264, 322, 3303, 3256, 26531, 490, 264, 383, 12775, 1899, 28872, 11, 51508, 51508, 1722, 87, 24, 23434, 1625, 13, 51608, 51608, 3950, 366, 11760, 4111, 11317, 300, 366, 4664, 637, 11668, 300, 393, 31499, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.18603787055382362, "compression_ratio": 1.5461254612546125, "no_speech_prob": 1.1365418686182238e-06}, {"id": 792, "seek": 285108, "start": 2851.08, "end": 2855.56, "text": " basically any image on CIFAR with relatively good accuracy.", "tokens": [50364, 1936, 604, 3256, 322, 383, 12775, 1899, 365, 7226, 665, 14170, 13, 50588, 50588, 2188, 661, 589, 321, 434, 884, 2051, 729, 3876, 307, 1419, 4825, 12, 8376, 260, 979, 378, 433, 13, 50756, 50756, 8537, 11, 510, 307, 364, 3256, 11, 293, 550, 747, 257, 3840, 295, 4111, 11317, 510, 11, 1190, 552, 807, 51040, 51040, 3754, 15892, 293, 1300, 43, 52, 11, 293, 3754, 15892, 293, 1300, 43, 52, 11, 293, 31499, 13, 51206, 51206, 1396, 291, 393, 8630, 3866, 7914, 295, 729, 293, 3847, 341, 7500, 498, 291, 458, 577, 281, 51382, 51382, 360, 309, 13, 51432, 51432, 467, 311, 406, 1858, 11, 457, 309, 733, 295, 1985, 13, 51710, 51710, 1981, 366, 31499, 626, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.20262670129295288, "compression_ratio": 1.641304347826087, "no_speech_prob": 3.1874994874669937e-06}, {"id": 793, "seek": 285108, "start": 2855.56, "end": 2858.92, "text": " Some other work we're doing along those lines is having multi-layer decoders.", "tokens": [50364, 1936, 604, 3256, 322, 383, 12775, 1899, 365, 7226, 665, 14170, 13, 50588, 50588, 2188, 661, 589, 321, 434, 884, 2051, 729, 3876, 307, 1419, 4825, 12, 8376, 260, 979, 378, 433, 13, 50756, 50756, 8537, 11, 510, 307, 364, 3256, 11, 293, 550, 747, 257, 3840, 295, 4111, 11317, 510, 11, 1190, 552, 807, 51040, 51040, 3754, 15892, 293, 1300, 43, 52, 11, 293, 3754, 15892, 293, 1300, 43, 52, 11, 293, 31499, 13, 51206, 51206, 1396, 291, 393, 8630, 3866, 7914, 295, 729, 293, 3847, 341, 7500, 498, 291, 458, 577, 281, 51382, 51382, 360, 309, 13, 51432, 51432, 467, 311, 406, 1858, 11, 457, 309, 733, 295, 1985, 13, 51710, 51710, 1981, 366, 31499, 626, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.20262670129295288, "compression_ratio": 1.641304347826087, "no_speech_prob": 3.1874994874669937e-06}, {"id": 794, "seek": 285108, "start": 2858.92, "end": 2864.6, "text": " Basically, here is an image, and then take a bunch of feature maps here, run them through", "tokens": [50364, 1936, 604, 3256, 322, 383, 12775, 1899, 365, 7226, 665, 14170, 13, 50588, 50588, 2188, 661, 589, 321, 434, 884, 2051, 729, 3876, 307, 1419, 4825, 12, 8376, 260, 979, 378, 433, 13, 50756, 50756, 8537, 11, 510, 307, 364, 3256, 11, 293, 550, 747, 257, 3840, 295, 4111, 11317, 510, 11, 1190, 552, 807, 51040, 51040, 3754, 15892, 293, 1300, 43, 52, 11, 293, 3754, 15892, 293, 1300, 43, 52, 11, 293, 31499, 13, 51206, 51206, 1396, 291, 393, 8630, 3866, 7914, 295, 729, 293, 3847, 341, 7500, 498, 291, 458, 577, 281, 51382, 51382, 360, 309, 13, 51432, 51432, 467, 311, 406, 1858, 11, 457, 309, 733, 295, 1985, 13, 51710, 51710, 1981, 366, 31499, 626, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.20262670129295288, "compression_ratio": 1.641304347826087, "no_speech_prob": 3.1874994874669937e-06}, {"id": 795, "seek": 285108, "start": 2864.6, "end": 2867.92, "text": " convolutions and ReLU, and convolutions and ReLU, and reconstruct.", "tokens": [50364, 1936, 604, 3256, 322, 383, 12775, 1899, 365, 7226, 665, 14170, 13, 50588, 50588, 2188, 661, 589, 321, 434, 884, 2051, 729, 3876, 307, 1419, 4825, 12, 8376, 260, 979, 378, 433, 13, 50756, 50756, 8537, 11, 510, 307, 364, 3256, 11, 293, 550, 747, 257, 3840, 295, 4111, 11317, 510, 11, 1190, 552, 807, 51040, 51040, 3754, 15892, 293, 1300, 43, 52, 11, 293, 3754, 15892, 293, 1300, 43, 52, 11, 293, 31499, 13, 51206, 51206, 1396, 291, 393, 8630, 3866, 7914, 295, 729, 293, 3847, 341, 7500, 498, 291, 458, 577, 281, 51382, 51382, 360, 309, 13, 51432, 51432, 467, 311, 406, 1858, 11, 457, 309, 733, 295, 1985, 13, 51710, 51710, 1981, 366, 31499, 626, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.20262670129295288, "compression_ratio": 1.641304347826087, "no_speech_prob": 3.1874994874669937e-06}, {"id": 796, "seek": 285108, "start": 2867.92, "end": 2871.44, "text": " Then you can stack multiple layers of those and train this carefully if you know how to", "tokens": [50364, 1936, 604, 3256, 322, 383, 12775, 1899, 365, 7226, 665, 14170, 13, 50588, 50588, 2188, 661, 589, 321, 434, 884, 2051, 729, 3876, 307, 1419, 4825, 12, 8376, 260, 979, 378, 433, 13, 50756, 50756, 8537, 11, 510, 307, 364, 3256, 11, 293, 550, 747, 257, 3840, 295, 4111, 11317, 510, 11, 1190, 552, 807, 51040, 51040, 3754, 15892, 293, 1300, 43, 52, 11, 293, 3754, 15892, 293, 1300, 43, 52, 11, 293, 31499, 13, 51206, 51206, 1396, 291, 393, 8630, 3866, 7914, 295, 729, 293, 3847, 341, 7500, 498, 291, 458, 577, 281, 51382, 51382, 360, 309, 13, 51432, 51432, 467, 311, 406, 1858, 11, 457, 309, 733, 295, 1985, 13, 51710, 51710, 1981, 366, 31499, 626, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.20262670129295288, "compression_ratio": 1.641304347826087, "no_speech_prob": 3.1874994874669937e-06}, {"id": 797, "seek": 285108, "start": 2871.44, "end": 2872.44, "text": " do it.", "tokens": [50364, 1936, 604, 3256, 322, 383, 12775, 1899, 365, 7226, 665, 14170, 13, 50588, 50588, 2188, 661, 589, 321, 434, 884, 2051, 729, 3876, 307, 1419, 4825, 12, 8376, 260, 979, 378, 433, 13, 50756, 50756, 8537, 11, 510, 307, 364, 3256, 11, 293, 550, 747, 257, 3840, 295, 4111, 11317, 510, 11, 1190, 552, 807, 51040, 51040, 3754, 15892, 293, 1300, 43, 52, 11, 293, 3754, 15892, 293, 1300, 43, 52, 11, 293, 31499, 13, 51206, 51206, 1396, 291, 393, 8630, 3866, 7914, 295, 729, 293, 3847, 341, 7500, 498, 291, 458, 577, 281, 51382, 51382, 360, 309, 13, 51432, 51432, 467, 311, 406, 1858, 11, 457, 309, 733, 295, 1985, 13, 51710, 51710, 1981, 366, 31499, 626, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.20262670129295288, "compression_ratio": 1.641304347826087, "no_speech_prob": 3.1874994874669937e-06}, {"id": 798, "seek": 285108, "start": 2872.44, "end": 2878.0, "text": " It's not easy, but it kind of works.", "tokens": [50364, 1936, 604, 3256, 322, 383, 12775, 1899, 365, 7226, 665, 14170, 13, 50588, 50588, 2188, 661, 589, 321, 434, 884, 2051, 729, 3876, 307, 1419, 4825, 12, 8376, 260, 979, 378, 433, 13, 50756, 50756, 8537, 11, 510, 307, 364, 3256, 11, 293, 550, 747, 257, 3840, 295, 4111, 11317, 510, 11, 1190, 552, 807, 51040, 51040, 3754, 15892, 293, 1300, 43, 52, 11, 293, 3754, 15892, 293, 1300, 43, 52, 11, 293, 31499, 13, 51206, 51206, 1396, 291, 393, 8630, 3866, 7914, 295, 729, 293, 3847, 341, 7500, 498, 291, 458, 577, 281, 51382, 51382, 360, 309, 13, 51432, 51432, 467, 311, 406, 1858, 11, 457, 309, 733, 295, 1985, 13, 51710, 51710, 1981, 366, 31499, 626, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.20262670129295288, "compression_ratio": 1.641304347826087, "no_speech_prob": 3.1874994874669937e-06}, {"id": 799, "seek": 285108, "start": 2878.0, "end": 2879.0, "text": " These are reconstructions.", "tokens": [50364, 1936, 604, 3256, 322, 383, 12775, 1899, 365, 7226, 665, 14170, 13, 50588, 50588, 2188, 661, 589, 321, 434, 884, 2051, 729, 3876, 307, 1419, 4825, 12, 8376, 260, 979, 378, 433, 13, 50756, 50756, 8537, 11, 510, 307, 364, 3256, 11, 293, 550, 747, 257, 3840, 295, 4111, 11317, 510, 11, 1190, 552, 807, 51040, 51040, 3754, 15892, 293, 1300, 43, 52, 11, 293, 3754, 15892, 293, 1300, 43, 52, 11, 293, 31499, 13, 51206, 51206, 1396, 291, 393, 8630, 3866, 7914, 295, 729, 293, 3847, 341, 7500, 498, 291, 458, 577, 281, 51382, 51382, 360, 309, 13, 51432, 51432, 467, 311, 406, 1858, 11, 457, 309, 733, 295, 1985, 13, 51710, 51710, 1981, 366, 31499, 626, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.20262670129295288, "compression_ratio": 1.641304347826087, "no_speech_prob": 3.1874994874669937e-06}, {"id": 800, "seek": 287900, "start": 2879.0, "end": 2881.68, "text": " This is the original.", "tokens": [50364, 639, 307, 264, 3380, 13, 50498, 50498, 1981, 366, 31499, 626, 291, 12701, 365, 637, 11668, 10290, 13, 50690, 50690, 759, 291, 787, 31499, 490, 510, 11, 291, 11200, 264, 1472, 13, 50862, 50862, 509, 483, 1090, 12, 19325, 48154, 1589, 13, 50956, 50956, 759, 291, 787, 31499, 490, 510, 11, 11200, 341, 13, 51090, 51090, 509, 445, 1190, 807, 341, 3209, 13, 51208, 51208, 509, 31499, 2295, 12, 495, 3386, 9606, 13, 51330, 51330, 509, 393, 519, 295, 341, 382, 2107, 12, 28263, 22144, 1385, 498, 291, 528, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.16114108105923267, "compression_ratio": 1.8090452261306533, "no_speech_prob": 1.0451218258822337e-05}, {"id": 801, "seek": 287900, "start": 2881.68, "end": 2885.52, "text": " These are reconstructions you obtain with sparse representation.", "tokens": [50364, 639, 307, 264, 3380, 13, 50498, 50498, 1981, 366, 31499, 626, 291, 12701, 365, 637, 11668, 10290, 13, 50690, 50690, 759, 291, 787, 31499, 490, 510, 11, 291, 11200, 264, 1472, 13, 50862, 50862, 509, 483, 1090, 12, 19325, 48154, 1589, 13, 50956, 50956, 759, 291, 787, 31499, 490, 510, 11, 11200, 341, 13, 51090, 51090, 509, 445, 1190, 807, 341, 3209, 13, 51208, 51208, 509, 31499, 2295, 12, 495, 3386, 9606, 13, 51330, 51330, 509, 393, 519, 295, 341, 382, 2107, 12, 28263, 22144, 1385, 498, 291, 528, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.16114108105923267, "compression_ratio": 1.8090452261306533, "no_speech_prob": 1.0451218258822337e-05}, {"id": 802, "seek": 287900, "start": 2885.52, "end": 2888.96, "text": " If you only reconstruct from here, you ignore the rest.", "tokens": [50364, 639, 307, 264, 3380, 13, 50498, 50498, 1981, 366, 31499, 626, 291, 12701, 365, 637, 11668, 10290, 13, 50690, 50690, 759, 291, 787, 31499, 490, 510, 11, 291, 11200, 264, 1472, 13, 50862, 50862, 509, 483, 1090, 12, 19325, 48154, 1589, 13, 50956, 50956, 759, 291, 787, 31499, 490, 510, 11, 11200, 341, 13, 51090, 51090, 509, 445, 1190, 807, 341, 3209, 13, 51208, 51208, 509, 31499, 2295, 12, 495, 3386, 9606, 13, 51330, 51330, 509, 393, 519, 295, 341, 382, 2107, 12, 28263, 22144, 1385, 498, 291, 528, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.16114108105923267, "compression_ratio": 1.8090452261306533, "no_speech_prob": 1.0451218258822337e-05}, {"id": 803, "seek": 287900, "start": 2888.96, "end": 2890.84, "text": " You get high-frequency information.", "tokens": [50364, 639, 307, 264, 3380, 13, 50498, 50498, 1981, 366, 31499, 626, 291, 12701, 365, 637, 11668, 10290, 13, 50690, 50690, 759, 291, 787, 31499, 490, 510, 11, 291, 11200, 264, 1472, 13, 50862, 50862, 509, 483, 1090, 12, 19325, 48154, 1589, 13, 50956, 50956, 759, 291, 787, 31499, 490, 510, 11, 11200, 341, 13, 51090, 51090, 509, 445, 1190, 807, 341, 3209, 13, 51208, 51208, 509, 31499, 2295, 12, 495, 3386, 9606, 13, 51330, 51330, 509, 393, 519, 295, 341, 382, 2107, 12, 28263, 22144, 1385, 498, 291, 528, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.16114108105923267, "compression_ratio": 1.8090452261306533, "no_speech_prob": 1.0451218258822337e-05}, {"id": 804, "seek": 287900, "start": 2890.84, "end": 2893.52, "text": " If you only reconstruct from here, ignore this.", "tokens": [50364, 639, 307, 264, 3380, 13, 50498, 50498, 1981, 366, 31499, 626, 291, 12701, 365, 637, 11668, 10290, 13, 50690, 50690, 759, 291, 787, 31499, 490, 510, 11, 291, 11200, 264, 1472, 13, 50862, 50862, 509, 483, 1090, 12, 19325, 48154, 1589, 13, 50956, 50956, 759, 291, 787, 31499, 490, 510, 11, 11200, 341, 13, 51090, 51090, 509, 445, 1190, 807, 341, 3209, 13, 51208, 51208, 509, 31499, 2295, 12, 495, 3386, 9606, 13, 51330, 51330, 509, 393, 519, 295, 341, 382, 2107, 12, 28263, 22144, 1385, 498, 291, 528, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.16114108105923267, "compression_ratio": 1.8090452261306533, "no_speech_prob": 1.0451218258822337e-05}, {"id": 805, "seek": 287900, "start": 2893.52, "end": 2895.88, "text": " You just run through this network.", "tokens": [50364, 639, 307, 264, 3380, 13, 50498, 50498, 1981, 366, 31499, 626, 291, 12701, 365, 637, 11668, 10290, 13, 50690, 50690, 759, 291, 787, 31499, 490, 510, 11, 291, 11200, 264, 1472, 13, 50862, 50862, 509, 483, 1090, 12, 19325, 48154, 1589, 13, 50956, 50956, 759, 291, 787, 31499, 490, 510, 11, 11200, 341, 13, 51090, 51090, 509, 445, 1190, 807, 341, 3209, 13, 51208, 51208, 509, 31499, 2295, 12, 495, 3386, 9606, 13, 51330, 51330, 509, 393, 519, 295, 341, 382, 2107, 12, 28263, 22144, 1385, 498, 291, 528, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.16114108105923267, "compression_ratio": 1.8090452261306533, "no_speech_prob": 1.0451218258822337e-05}, {"id": 806, "seek": 287900, "start": 2895.88, "end": 2898.32, "text": " You reconstruct low-resolution versions.", "tokens": [50364, 639, 307, 264, 3380, 13, 50498, 50498, 1981, 366, 31499, 626, 291, 12701, 365, 637, 11668, 10290, 13, 50690, 50690, 759, 291, 787, 31499, 490, 510, 11, 291, 11200, 264, 1472, 13, 50862, 50862, 509, 483, 1090, 12, 19325, 48154, 1589, 13, 50956, 50956, 759, 291, 787, 31499, 490, 510, 11, 11200, 341, 13, 51090, 51090, 509, 445, 1190, 807, 341, 3209, 13, 51208, 51208, 509, 31499, 2295, 12, 495, 3386, 9606, 13, 51330, 51330, 509, 393, 519, 295, 341, 382, 2107, 12, 28263, 22144, 1385, 498, 291, 528, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.16114108105923267, "compression_ratio": 1.8090452261306533, "no_speech_prob": 1.0451218258822337e-05}, {"id": 807, "seek": 287900, "start": 2898.32, "end": 2903.24, "text": " You can think of this as non-linear wavelets if you want.", "tokens": [50364, 639, 307, 264, 3380, 13, 50498, 50498, 1981, 366, 31499, 626, 291, 12701, 365, 637, 11668, 10290, 13, 50690, 50690, 759, 291, 787, 31499, 490, 510, 11, 291, 11200, 264, 1472, 13, 50862, 50862, 509, 483, 1090, 12, 19325, 48154, 1589, 13, 50956, 50956, 759, 291, 787, 31499, 490, 510, 11, 11200, 341, 13, 51090, 51090, 509, 445, 1190, 807, 341, 3209, 13, 51208, 51208, 509, 31499, 2295, 12, 495, 3386, 9606, 13, 51330, 51330, 509, 393, 519, 295, 341, 382, 2107, 12, 28263, 22144, 1385, 498, 291, 528, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.16114108105923267, "compression_ratio": 1.8090452261306533, "no_speech_prob": 1.0451218258822337e-05}, {"id": 808, "seek": 290324, "start": 2903.24, "end": 2909.24, "text": " The system naturally learns to represent this.", "tokens": [50364, 440, 1185, 8195, 27152, 281, 2906, 341, 13, 50664, 50664, 961, 385, 10023, 341, 13, 50764, 50764, 1033, 11, 718, 385, 751, 466, 341, 534, 2661, 13, 50970, 50970, 6595, 300, 311, 1813, 588, 3743, 294, 264, 1606, 307, 746, 1219, 3034, 1478, 8399, 22660, 378, 433, 13, 51228, 51228, 32511, 1478, 8399, 22660, 378, 433, 366, 1936, 8399, 22660, 19866, 5245, 13, 51360, 51360, 814, 727, 312, 1027, 27708, 498, 291, 528, 11, 457, 286, 733, 295, 10855, 292, 341, 484, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.22029148847207256, "compression_ratio": 1.6132075471698113, "no_speech_prob": 6.961523013160331e-06}, {"id": 809, "seek": 290324, "start": 2909.24, "end": 2911.24, "text": " Let me skip this.", "tokens": [50364, 440, 1185, 8195, 27152, 281, 2906, 341, 13, 50664, 50664, 961, 385, 10023, 341, 13, 50764, 50764, 1033, 11, 718, 385, 751, 466, 341, 534, 2661, 13, 50970, 50970, 6595, 300, 311, 1813, 588, 3743, 294, 264, 1606, 307, 746, 1219, 3034, 1478, 8399, 22660, 378, 433, 13, 51228, 51228, 32511, 1478, 8399, 22660, 378, 433, 366, 1936, 8399, 22660, 19866, 5245, 13, 51360, 51360, 814, 727, 312, 1027, 27708, 498, 291, 528, 11, 457, 286, 733, 295, 10855, 292, 341, 484, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.22029148847207256, "compression_ratio": 1.6132075471698113, "no_speech_prob": 6.961523013160331e-06}, {"id": 810, "seek": 290324, "start": 2911.24, "end": 2915.3599999999997, "text": " Okay, let me talk about this really quickly.", "tokens": [50364, 440, 1185, 8195, 27152, 281, 2906, 341, 13, 50664, 50664, 961, 385, 10023, 341, 13, 50764, 50764, 1033, 11, 718, 385, 751, 466, 341, 534, 2661, 13, 50970, 50970, 6595, 300, 311, 1813, 588, 3743, 294, 264, 1606, 307, 746, 1219, 3034, 1478, 8399, 22660, 378, 433, 13, 51228, 51228, 32511, 1478, 8399, 22660, 378, 433, 366, 1936, 8399, 22660, 19866, 5245, 13, 51360, 51360, 814, 727, 312, 1027, 27708, 498, 291, 528, 11, 457, 286, 733, 295, 10855, 292, 341, 484, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.22029148847207256, "compression_ratio": 1.6132075471698113, "no_speech_prob": 6.961523013160331e-06}, {"id": 811, "seek": 290324, "start": 2915.3599999999997, "end": 2920.52, "text": " Something that's become very popular in the business is something called variational autoencoders.", "tokens": [50364, 440, 1185, 8195, 27152, 281, 2906, 341, 13, 50664, 50664, 961, 385, 10023, 341, 13, 50764, 50764, 1033, 11, 718, 385, 751, 466, 341, 534, 2661, 13, 50970, 50970, 6595, 300, 311, 1813, 588, 3743, 294, 264, 1606, 307, 746, 1219, 3034, 1478, 8399, 22660, 378, 433, 13, 51228, 51228, 32511, 1478, 8399, 22660, 378, 433, 366, 1936, 8399, 22660, 19866, 5245, 13, 51360, 51360, 814, 727, 312, 1027, 27708, 498, 291, 528, 11, 457, 286, 733, 295, 10855, 292, 341, 484, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.22029148847207256, "compression_ratio": 1.6132075471698113, "no_speech_prob": 6.961523013160331e-06}, {"id": 812, "seek": 290324, "start": 2920.52, "end": 2923.16, "text": " Variational autoencoders are basically autoencoder models.", "tokens": [50364, 440, 1185, 8195, 27152, 281, 2906, 341, 13, 50664, 50664, 961, 385, 10023, 341, 13, 50764, 50764, 1033, 11, 718, 385, 751, 466, 341, 534, 2661, 13, 50970, 50970, 6595, 300, 311, 1813, 588, 3743, 294, 264, 1606, 307, 746, 1219, 3034, 1478, 8399, 22660, 378, 433, 13, 51228, 51228, 32511, 1478, 8399, 22660, 378, 433, 366, 1936, 8399, 22660, 19866, 5245, 13, 51360, 51360, 814, 727, 312, 1027, 27708, 498, 291, 528, 11, 457, 286, 733, 295, 10855, 292, 341, 484, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.22029148847207256, "compression_ratio": 1.6132075471698113, "no_speech_prob": 6.961523013160331e-06}, {"id": 813, "seek": 290324, "start": 2923.16, "end": 2928.6, "text": " They could be made conditional if you want, but I kind of grayed this out.", "tokens": [50364, 440, 1185, 8195, 27152, 281, 2906, 341, 13, 50664, 50664, 961, 385, 10023, 341, 13, 50764, 50764, 1033, 11, 718, 385, 751, 466, 341, 534, 2661, 13, 50970, 50970, 6595, 300, 311, 1813, 588, 3743, 294, 264, 1606, 307, 746, 1219, 3034, 1478, 8399, 22660, 378, 433, 13, 51228, 51228, 32511, 1478, 8399, 22660, 378, 433, 366, 1936, 8399, 22660, 19866, 5245, 13, 51360, 51360, 814, 727, 312, 1027, 27708, 498, 291, 528, 11, 457, 286, 733, 295, 10855, 292, 341, 484, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.22029148847207256, "compression_ratio": 1.6132075471698113, "no_speech_prob": 6.961523013160331e-06}, {"id": 814, "seek": 292860, "start": 2928.6, "end": 2934.48, "text": " They are an example of a model where you also limit the capacity of the representation here", "tokens": [50364, 814, 366, 364, 1365, 295, 257, 2316, 689, 291, 611, 4948, 264, 6042, 295, 264, 10290, 510, 50658, 50658, 294, 264, 2808, 13, 50738, 50738, 440, 636, 291, 4948, 264, 1589, 6042, 295, 341, 8062, 307, 300, 291, 909, 5658, 13, 50980, 50980, 8537, 11, 510, 311, 257, 983, 13, 51094, 51094, 509, 1190, 807, 364, 2058, 19866, 13, 51152, 51152, 509, 5258, 257, 17630, 337, 437, 264, 3089, 820, 312, 13, 51278, 51278, 1396, 291, 909, 45558, 39148, 5658, 281, 309, 13, 51450, 51450, 509, 1190, 807, 264, 979, 19866, 13, 51500, 51500, 821, 311, 257, 25534, 510, 300, 309, 311, 257, 16263, 534, 1143, 1830, 2539, 300, 264, 2026, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20960879118546197, "compression_ratio": 1.7984189723320159, "no_speech_prob": 5.2545392463798635e-06}, {"id": 815, "seek": 292860, "start": 2934.48, "end": 2936.08, "text": " in the middle.", "tokens": [50364, 814, 366, 364, 1365, 295, 257, 2316, 689, 291, 611, 4948, 264, 6042, 295, 264, 10290, 510, 50658, 50658, 294, 264, 2808, 13, 50738, 50738, 440, 636, 291, 4948, 264, 1589, 6042, 295, 341, 8062, 307, 300, 291, 909, 5658, 13, 50980, 50980, 8537, 11, 510, 311, 257, 983, 13, 51094, 51094, 509, 1190, 807, 364, 2058, 19866, 13, 51152, 51152, 509, 5258, 257, 17630, 337, 437, 264, 3089, 820, 312, 13, 51278, 51278, 1396, 291, 909, 45558, 39148, 5658, 281, 309, 13, 51450, 51450, 509, 1190, 807, 264, 979, 19866, 13, 51500, 51500, 821, 311, 257, 25534, 510, 300, 309, 311, 257, 16263, 534, 1143, 1830, 2539, 300, 264, 2026, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20960879118546197, "compression_ratio": 1.7984189723320159, "no_speech_prob": 5.2545392463798635e-06}, {"id": 816, "seek": 292860, "start": 2936.08, "end": 2940.92, "text": " The way you limit the information capacity of this vector is that you add noise.", "tokens": [50364, 814, 366, 364, 1365, 295, 257, 2316, 689, 291, 611, 4948, 264, 6042, 295, 264, 10290, 510, 50658, 50658, 294, 264, 2808, 13, 50738, 50738, 440, 636, 291, 4948, 264, 1589, 6042, 295, 341, 8062, 307, 300, 291, 909, 5658, 13, 50980, 50980, 8537, 11, 510, 311, 257, 983, 13, 51094, 51094, 509, 1190, 807, 364, 2058, 19866, 13, 51152, 51152, 509, 5258, 257, 17630, 337, 437, 264, 3089, 820, 312, 13, 51278, 51278, 1396, 291, 909, 45558, 39148, 5658, 281, 309, 13, 51450, 51450, 509, 1190, 807, 264, 979, 19866, 13, 51500, 51500, 821, 311, 257, 25534, 510, 300, 309, 311, 257, 16263, 534, 1143, 1830, 2539, 300, 264, 2026, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20960879118546197, "compression_ratio": 1.7984189723320159, "no_speech_prob": 5.2545392463798635e-06}, {"id": 817, "seek": 292860, "start": 2940.92, "end": 2943.2, "text": " Basically, here's a why.", "tokens": [50364, 814, 366, 364, 1365, 295, 257, 2316, 689, 291, 611, 4948, 264, 6042, 295, 264, 10290, 510, 50658, 50658, 294, 264, 2808, 13, 50738, 50738, 440, 636, 291, 4948, 264, 1589, 6042, 295, 341, 8062, 307, 300, 291, 909, 5658, 13, 50980, 50980, 8537, 11, 510, 311, 257, 983, 13, 51094, 51094, 509, 1190, 807, 364, 2058, 19866, 13, 51152, 51152, 509, 5258, 257, 17630, 337, 437, 264, 3089, 820, 312, 13, 51278, 51278, 1396, 291, 909, 45558, 39148, 5658, 281, 309, 13, 51450, 51450, 509, 1190, 807, 264, 979, 19866, 13, 51500, 51500, 821, 311, 257, 25534, 510, 300, 309, 311, 257, 16263, 534, 1143, 1830, 2539, 300, 264, 2026, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20960879118546197, "compression_ratio": 1.7984189723320159, "no_speech_prob": 5.2545392463798635e-06}, {"id": 818, "seek": 292860, "start": 2943.2, "end": 2944.36, "text": " You run through an encoder.", "tokens": [50364, 814, 366, 364, 1365, 295, 257, 2316, 689, 291, 611, 4948, 264, 6042, 295, 264, 10290, 510, 50658, 50658, 294, 264, 2808, 13, 50738, 50738, 440, 636, 291, 4948, 264, 1589, 6042, 295, 341, 8062, 307, 300, 291, 909, 5658, 13, 50980, 50980, 8537, 11, 510, 311, 257, 983, 13, 51094, 51094, 509, 1190, 807, 364, 2058, 19866, 13, 51152, 51152, 509, 5258, 257, 17630, 337, 437, 264, 3089, 820, 312, 13, 51278, 51278, 1396, 291, 909, 45558, 39148, 5658, 281, 309, 13, 51450, 51450, 509, 1190, 807, 264, 979, 19866, 13, 51500, 51500, 821, 311, 257, 25534, 510, 300, 309, 311, 257, 16263, 534, 1143, 1830, 2539, 300, 264, 2026, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20960879118546197, "compression_ratio": 1.7984189723320159, "no_speech_prob": 5.2545392463798635e-06}, {"id": 819, "seek": 292860, "start": 2944.36, "end": 2946.88, "text": " You produce a prediction for what the code should be.", "tokens": [50364, 814, 366, 364, 1365, 295, 257, 2316, 689, 291, 611, 4948, 264, 6042, 295, 264, 10290, 510, 50658, 50658, 294, 264, 2808, 13, 50738, 50738, 440, 636, 291, 4948, 264, 1589, 6042, 295, 341, 8062, 307, 300, 291, 909, 5658, 13, 50980, 50980, 8537, 11, 510, 311, 257, 983, 13, 51094, 51094, 509, 1190, 807, 364, 2058, 19866, 13, 51152, 51152, 509, 5258, 257, 17630, 337, 437, 264, 3089, 820, 312, 13, 51278, 51278, 1396, 291, 909, 45558, 39148, 5658, 281, 309, 13, 51450, 51450, 509, 1190, 807, 264, 979, 19866, 13, 51500, 51500, 821, 311, 257, 25534, 510, 300, 309, 311, 257, 16263, 534, 1143, 1830, 2539, 300, 264, 2026, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20960879118546197, "compression_ratio": 1.7984189723320159, "no_speech_prob": 5.2545392463798635e-06}, {"id": 820, "seek": 292860, "start": 2946.88, "end": 2950.3199999999997, "text": " Then you add additive Gaussian noise to it.", "tokens": [50364, 814, 366, 364, 1365, 295, 257, 2316, 689, 291, 611, 4948, 264, 6042, 295, 264, 10290, 510, 50658, 50658, 294, 264, 2808, 13, 50738, 50738, 440, 636, 291, 4948, 264, 1589, 6042, 295, 341, 8062, 307, 300, 291, 909, 5658, 13, 50980, 50980, 8537, 11, 510, 311, 257, 983, 13, 51094, 51094, 509, 1190, 807, 364, 2058, 19866, 13, 51152, 51152, 509, 5258, 257, 17630, 337, 437, 264, 3089, 820, 312, 13, 51278, 51278, 1396, 291, 909, 45558, 39148, 5658, 281, 309, 13, 51450, 51450, 509, 1190, 807, 264, 979, 19866, 13, 51500, 51500, 821, 311, 257, 25534, 510, 300, 309, 311, 257, 16263, 534, 1143, 1830, 2539, 300, 264, 2026, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20960879118546197, "compression_ratio": 1.7984189723320159, "no_speech_prob": 5.2545392463798635e-06}, {"id": 821, "seek": 292860, "start": 2950.3199999999997, "end": 2951.3199999999997, "text": " You run through the decoder.", "tokens": [50364, 814, 366, 364, 1365, 295, 257, 2316, 689, 291, 611, 4948, 264, 6042, 295, 264, 10290, 510, 50658, 50658, 294, 264, 2808, 13, 50738, 50738, 440, 636, 291, 4948, 264, 1589, 6042, 295, 341, 8062, 307, 300, 291, 909, 5658, 13, 50980, 50980, 8537, 11, 510, 311, 257, 983, 13, 51094, 51094, 509, 1190, 807, 364, 2058, 19866, 13, 51152, 51152, 509, 5258, 257, 17630, 337, 437, 264, 3089, 820, 312, 13, 51278, 51278, 1396, 291, 909, 45558, 39148, 5658, 281, 309, 13, 51450, 51450, 509, 1190, 807, 264, 979, 19866, 13, 51500, 51500, 821, 311, 257, 25534, 510, 300, 309, 311, 257, 16263, 534, 1143, 1830, 2539, 300, 264, 2026, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20960879118546197, "compression_ratio": 1.7984189723320159, "no_speech_prob": 5.2545392463798635e-06}, {"id": 822, "seek": 292860, "start": 2951.3199999999997, "end": 2958.38, "text": " There's a constraint here that it's a penalty really used during learning that the norm", "tokens": [50364, 814, 366, 364, 1365, 295, 257, 2316, 689, 291, 611, 4948, 264, 6042, 295, 264, 10290, 510, 50658, 50658, 294, 264, 2808, 13, 50738, 50738, 440, 636, 291, 4948, 264, 1589, 6042, 295, 341, 8062, 307, 300, 291, 909, 5658, 13, 50980, 50980, 8537, 11, 510, 311, 257, 983, 13, 51094, 51094, 509, 1190, 807, 364, 2058, 19866, 13, 51152, 51152, 509, 5258, 257, 17630, 337, 437, 264, 3089, 820, 312, 13, 51278, 51278, 1396, 291, 909, 45558, 39148, 5658, 281, 309, 13, 51450, 51450, 509, 1190, 807, 264, 979, 19866, 13, 51500, 51500, 821, 311, 257, 25534, 510, 300, 309, 311, 257, 16263, 534, 1143, 1830, 2539, 300, 264, 2026, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20960879118546197, "compression_ratio": 1.7984189723320159, "no_speech_prob": 5.2545392463798635e-06}, {"id": 823, "seek": 295838, "start": 2958.38, "end": 2961.2400000000002, "text": " of the outputs of the encoder needs to be as small as possible.", "tokens": [50364, 295, 264, 23930, 295, 264, 2058, 19866, 2203, 281, 312, 382, 1359, 382, 1944, 13, 50507, 50507, 467, 311, 441, 17, 3890, 2144, 498, 291, 528, 1830, 2539, 13, 50711, 50711, 1012, 775, 300, 4948, 264, 1589, 2701, 295, 264, 3089, 30, 50841, 50841, 961, 311, 584, 300, 291, 3847, 1553, 5658, 13, 50951, 50951, 509, 3847, 428, 8399, 22660, 19866, 307, 516, 281, 6269, 257, 3089, 13, 51083, 51083, 639, 307, 294, 3089, 1901, 13, 51133, 51133, 467, 311, 516, 281, 6269, 257, 3089, 8062, 281, 633, 3097, 6889, 13, 51259, 51259, 1981, 366, 439, 295, 264, 3097, 10938, 13, 51373, 51373, 5349, 5658, 281, 729, 1074, 13, 51435, 51435, 509, 1261, 552, 666, 283, 16740, 2965, 13, 51627, 51627, 3950, 283, 16740, 2965, 1062, 19959, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.17009213476470023, "compression_ratio": 1.7790262172284643, "no_speech_prob": 3.611797865232802e-06}, {"id": 824, "seek": 295838, "start": 2961.2400000000002, "end": 2965.32, "text": " It's L2 regularization if you want during learning.", "tokens": [50364, 295, 264, 23930, 295, 264, 2058, 19866, 2203, 281, 312, 382, 1359, 382, 1944, 13, 50507, 50507, 467, 311, 441, 17, 3890, 2144, 498, 291, 528, 1830, 2539, 13, 50711, 50711, 1012, 775, 300, 4948, 264, 1589, 2701, 295, 264, 3089, 30, 50841, 50841, 961, 311, 584, 300, 291, 3847, 1553, 5658, 13, 50951, 50951, 509, 3847, 428, 8399, 22660, 19866, 307, 516, 281, 6269, 257, 3089, 13, 51083, 51083, 639, 307, 294, 3089, 1901, 13, 51133, 51133, 467, 311, 516, 281, 6269, 257, 3089, 8062, 281, 633, 3097, 6889, 13, 51259, 51259, 1981, 366, 439, 295, 264, 3097, 10938, 13, 51373, 51373, 5349, 5658, 281, 729, 1074, 13, 51435, 51435, 509, 1261, 552, 666, 283, 16740, 2965, 13, 51627, 51627, 3950, 283, 16740, 2965, 1062, 19959, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.17009213476470023, "compression_ratio": 1.7790262172284643, "no_speech_prob": 3.611797865232802e-06}, {"id": 825, "seek": 295838, "start": 2965.32, "end": 2967.92, "text": " How does that limit the information content of the code?", "tokens": [50364, 295, 264, 23930, 295, 264, 2058, 19866, 2203, 281, 312, 382, 1359, 382, 1944, 13, 50507, 50507, 467, 311, 441, 17, 3890, 2144, 498, 291, 528, 1830, 2539, 13, 50711, 50711, 1012, 775, 300, 4948, 264, 1589, 2701, 295, 264, 3089, 30, 50841, 50841, 961, 311, 584, 300, 291, 3847, 1553, 5658, 13, 50951, 50951, 509, 3847, 428, 8399, 22660, 19866, 307, 516, 281, 6269, 257, 3089, 13, 51083, 51083, 639, 307, 294, 3089, 1901, 13, 51133, 51133, 467, 311, 516, 281, 6269, 257, 3089, 8062, 281, 633, 3097, 6889, 13, 51259, 51259, 1981, 366, 439, 295, 264, 3097, 10938, 13, 51373, 51373, 5349, 5658, 281, 729, 1074, 13, 51435, 51435, 509, 1261, 552, 666, 283, 16740, 2965, 13, 51627, 51627, 3950, 283, 16740, 2965, 1062, 19959, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.17009213476470023, "compression_ratio": 1.7790262172284643, "no_speech_prob": 3.611797865232802e-06}, {"id": 826, "seek": 295838, "start": 2967.92, "end": 2970.12, "text": " Let's say that you train without noise.", "tokens": [50364, 295, 264, 23930, 295, 264, 2058, 19866, 2203, 281, 312, 382, 1359, 382, 1944, 13, 50507, 50507, 467, 311, 441, 17, 3890, 2144, 498, 291, 528, 1830, 2539, 13, 50711, 50711, 1012, 775, 300, 4948, 264, 1589, 2701, 295, 264, 3089, 30, 50841, 50841, 961, 311, 584, 300, 291, 3847, 1553, 5658, 13, 50951, 50951, 509, 3847, 428, 8399, 22660, 19866, 307, 516, 281, 6269, 257, 3089, 13, 51083, 51083, 639, 307, 294, 3089, 1901, 13, 51133, 51133, 467, 311, 516, 281, 6269, 257, 3089, 8062, 281, 633, 3097, 6889, 13, 51259, 51259, 1981, 366, 439, 295, 264, 3097, 10938, 13, 51373, 51373, 5349, 5658, 281, 729, 1074, 13, 51435, 51435, 509, 1261, 552, 666, 283, 16740, 2965, 13, 51627, 51627, 3950, 283, 16740, 2965, 1062, 19959, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.17009213476470023, "compression_ratio": 1.7790262172284643, "no_speech_prob": 3.611797865232802e-06}, {"id": 827, "seek": 295838, "start": 2970.12, "end": 2972.76, "text": " You train your autoencoder is going to assign a code.", "tokens": [50364, 295, 264, 23930, 295, 264, 2058, 19866, 2203, 281, 312, 382, 1359, 382, 1944, 13, 50507, 50507, 467, 311, 441, 17, 3890, 2144, 498, 291, 528, 1830, 2539, 13, 50711, 50711, 1012, 775, 300, 4948, 264, 1589, 2701, 295, 264, 3089, 30, 50841, 50841, 961, 311, 584, 300, 291, 3847, 1553, 5658, 13, 50951, 50951, 509, 3847, 428, 8399, 22660, 19866, 307, 516, 281, 6269, 257, 3089, 13, 51083, 51083, 639, 307, 294, 3089, 1901, 13, 51133, 51133, 467, 311, 516, 281, 6269, 257, 3089, 8062, 281, 633, 3097, 6889, 13, 51259, 51259, 1981, 366, 439, 295, 264, 3097, 10938, 13, 51373, 51373, 5349, 5658, 281, 729, 1074, 13, 51435, 51435, 509, 1261, 552, 666, 283, 16740, 2965, 13, 51627, 51627, 3950, 283, 16740, 2965, 1062, 19959, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.17009213476470023, "compression_ratio": 1.7790262172284643, "no_speech_prob": 3.611797865232802e-06}, {"id": 828, "seek": 295838, "start": 2972.76, "end": 2973.76, "text": " This is in code space.", "tokens": [50364, 295, 264, 23930, 295, 264, 2058, 19866, 2203, 281, 312, 382, 1359, 382, 1944, 13, 50507, 50507, 467, 311, 441, 17, 3890, 2144, 498, 291, 528, 1830, 2539, 13, 50711, 50711, 1012, 775, 300, 4948, 264, 1589, 2701, 295, 264, 3089, 30, 50841, 50841, 961, 311, 584, 300, 291, 3847, 1553, 5658, 13, 50951, 50951, 509, 3847, 428, 8399, 22660, 19866, 307, 516, 281, 6269, 257, 3089, 13, 51083, 51083, 639, 307, 294, 3089, 1901, 13, 51133, 51133, 467, 311, 516, 281, 6269, 257, 3089, 8062, 281, 633, 3097, 6889, 13, 51259, 51259, 1981, 366, 439, 295, 264, 3097, 10938, 13, 51373, 51373, 5349, 5658, 281, 729, 1074, 13, 51435, 51435, 509, 1261, 552, 666, 283, 16740, 2965, 13, 51627, 51627, 3950, 283, 16740, 2965, 1062, 19959, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.17009213476470023, "compression_ratio": 1.7790262172284643, "no_speech_prob": 3.611797865232802e-06}, {"id": 829, "seek": 295838, "start": 2973.76, "end": 2976.28, "text": " It's going to assign a code vector to every training sample.", "tokens": [50364, 295, 264, 23930, 295, 264, 2058, 19866, 2203, 281, 312, 382, 1359, 382, 1944, 13, 50507, 50507, 467, 311, 441, 17, 3890, 2144, 498, 291, 528, 1830, 2539, 13, 50711, 50711, 1012, 775, 300, 4948, 264, 1589, 2701, 295, 264, 3089, 30, 50841, 50841, 961, 311, 584, 300, 291, 3847, 1553, 5658, 13, 50951, 50951, 509, 3847, 428, 8399, 22660, 19866, 307, 516, 281, 6269, 257, 3089, 13, 51083, 51083, 639, 307, 294, 3089, 1901, 13, 51133, 51133, 467, 311, 516, 281, 6269, 257, 3089, 8062, 281, 633, 3097, 6889, 13, 51259, 51259, 1981, 366, 439, 295, 264, 3097, 10938, 13, 51373, 51373, 5349, 5658, 281, 729, 1074, 13, 51435, 51435, 509, 1261, 552, 666, 283, 16740, 2965, 13, 51627, 51627, 3950, 283, 16740, 2965, 1062, 19959, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.17009213476470023, "compression_ratio": 1.7790262172284643, "no_speech_prob": 3.611797865232802e-06}, {"id": 830, "seek": 295838, "start": 2976.28, "end": 2978.56, "text": " These are all of the training samples.", "tokens": [50364, 295, 264, 23930, 295, 264, 2058, 19866, 2203, 281, 312, 382, 1359, 382, 1944, 13, 50507, 50507, 467, 311, 441, 17, 3890, 2144, 498, 291, 528, 1830, 2539, 13, 50711, 50711, 1012, 775, 300, 4948, 264, 1589, 2701, 295, 264, 3089, 30, 50841, 50841, 961, 311, 584, 300, 291, 3847, 1553, 5658, 13, 50951, 50951, 509, 3847, 428, 8399, 22660, 19866, 307, 516, 281, 6269, 257, 3089, 13, 51083, 51083, 639, 307, 294, 3089, 1901, 13, 51133, 51133, 467, 311, 516, 281, 6269, 257, 3089, 8062, 281, 633, 3097, 6889, 13, 51259, 51259, 1981, 366, 439, 295, 264, 3097, 10938, 13, 51373, 51373, 5349, 5658, 281, 729, 1074, 13, 51435, 51435, 509, 1261, 552, 666, 283, 16740, 2965, 13, 51627, 51627, 3950, 283, 16740, 2965, 1062, 19959, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.17009213476470023, "compression_ratio": 1.7790262172284643, "no_speech_prob": 3.611797865232802e-06}, {"id": 831, "seek": 295838, "start": 2978.56, "end": 2979.8, "text": " Add noise to those guys.", "tokens": [50364, 295, 264, 23930, 295, 264, 2058, 19866, 2203, 281, 312, 382, 1359, 382, 1944, 13, 50507, 50507, 467, 311, 441, 17, 3890, 2144, 498, 291, 528, 1830, 2539, 13, 50711, 50711, 1012, 775, 300, 4948, 264, 1589, 2701, 295, 264, 3089, 30, 50841, 50841, 961, 311, 584, 300, 291, 3847, 1553, 5658, 13, 50951, 50951, 509, 3847, 428, 8399, 22660, 19866, 307, 516, 281, 6269, 257, 3089, 13, 51083, 51083, 639, 307, 294, 3089, 1901, 13, 51133, 51133, 467, 311, 516, 281, 6269, 257, 3089, 8062, 281, 633, 3097, 6889, 13, 51259, 51259, 1981, 366, 439, 295, 264, 3097, 10938, 13, 51373, 51373, 5349, 5658, 281, 729, 1074, 13, 51435, 51435, 509, 1261, 552, 666, 283, 16740, 2965, 13, 51627, 51627, 3950, 283, 16740, 2965, 1062, 19959, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.17009213476470023, "compression_ratio": 1.7790262172284643, "no_speech_prob": 3.611797865232802e-06}, {"id": 832, "seek": 295838, "start": 2979.8, "end": 2983.6400000000003, "text": " You turn them into fuzzables.", "tokens": [50364, 295, 264, 23930, 295, 264, 2058, 19866, 2203, 281, 312, 382, 1359, 382, 1944, 13, 50507, 50507, 467, 311, 441, 17, 3890, 2144, 498, 291, 528, 1830, 2539, 13, 50711, 50711, 1012, 775, 300, 4948, 264, 1589, 2701, 295, 264, 3089, 30, 50841, 50841, 961, 311, 584, 300, 291, 3847, 1553, 5658, 13, 50951, 50951, 509, 3847, 428, 8399, 22660, 19866, 307, 516, 281, 6269, 257, 3089, 13, 51083, 51083, 639, 307, 294, 3089, 1901, 13, 51133, 51133, 467, 311, 516, 281, 6269, 257, 3089, 8062, 281, 633, 3097, 6889, 13, 51259, 51259, 1981, 366, 439, 295, 264, 3097, 10938, 13, 51373, 51373, 5349, 5658, 281, 729, 1074, 13, 51435, 51435, 509, 1261, 552, 666, 283, 16740, 2965, 13, 51627, 51627, 3950, 283, 16740, 2965, 1062, 19959, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.17009213476470023, "compression_ratio": 1.7790262172284643, "no_speech_prob": 3.611797865232802e-06}, {"id": 833, "seek": 295838, "start": 2983.6400000000003, "end": 2985.1600000000003, "text": " Those fuzzables might overlap.", "tokens": [50364, 295, 264, 23930, 295, 264, 2058, 19866, 2203, 281, 312, 382, 1359, 382, 1944, 13, 50507, 50507, 467, 311, 441, 17, 3890, 2144, 498, 291, 528, 1830, 2539, 13, 50711, 50711, 1012, 775, 300, 4948, 264, 1589, 2701, 295, 264, 3089, 30, 50841, 50841, 961, 311, 584, 300, 291, 3847, 1553, 5658, 13, 50951, 50951, 509, 3847, 428, 8399, 22660, 19866, 307, 516, 281, 6269, 257, 3089, 13, 51083, 51083, 639, 307, 294, 3089, 1901, 13, 51133, 51133, 467, 311, 516, 281, 6269, 257, 3089, 8062, 281, 633, 3097, 6889, 13, 51259, 51259, 1981, 366, 439, 295, 264, 3097, 10938, 13, 51373, 51373, 5349, 5658, 281, 729, 1074, 13, 51435, 51435, 509, 1261, 552, 666, 283, 16740, 2965, 13, 51627, 51627, 3950, 283, 16740, 2965, 1062, 19959, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.17009213476470023, "compression_ratio": 1.7790262172284643, "no_speech_prob": 3.611797865232802e-06}, {"id": 834, "seek": 298516, "start": 2985.16, "end": 2991.2, "text": " For example, this sample and that sample might end up being confused with each other because", "tokens": [50364, 1171, 1365, 11, 341, 6889, 293, 300, 6889, 1062, 917, 493, 885, 9019, 365, 1184, 661, 570, 50666, 50666, 562, 291, 909, 5658, 11, 291, 393, 1261, 472, 666, 264, 661, 13, 50818, 50818, 440, 31565, 6713, 486, 1391, 3488, 13, 50990, 50990, 708, 307, 264, 1185, 516, 281, 360, 30, 51066, 51066, 4372, 1858, 13, 51116, 51116, 467, 311, 516, 281, 652, 729, 283, 16740, 2965, 3603, 1314, 490, 1184, 661, 370, 300, 436, 500, 380, 19959, 13, 51362, 51362, 663, 534, 307, 406, 300, 1880, 13, 51480, 51480, 467, 445, 1669, 264, 2026, 295, 264, 5598, 295, 264, 2058, 19866, 445, 4833, 11, 457, 309, 1177, 380, 360, 1340, 51804, 51804, 337, 291, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10960493087768555, "compression_ratio": 1.6535714285714285, "no_speech_prob": 2.8572471819643397e-06}, {"id": 835, "seek": 298516, "start": 2991.2, "end": 2994.24, "text": " when you add noise, you can turn one into the other.", "tokens": [50364, 1171, 1365, 11, 341, 6889, 293, 300, 6889, 1062, 917, 493, 885, 9019, 365, 1184, 661, 570, 50666, 50666, 562, 291, 909, 5658, 11, 291, 393, 1261, 472, 666, 264, 661, 13, 50818, 50818, 440, 31565, 6713, 486, 1391, 3488, 13, 50990, 50990, 708, 307, 264, 1185, 516, 281, 360, 30, 51066, 51066, 4372, 1858, 13, 51116, 51116, 467, 311, 516, 281, 652, 729, 283, 16740, 2965, 3603, 1314, 490, 1184, 661, 370, 300, 436, 500, 380, 19959, 13, 51362, 51362, 663, 534, 307, 406, 300, 1880, 13, 51480, 51480, 467, 445, 1669, 264, 2026, 295, 264, 5598, 295, 264, 2058, 19866, 445, 4833, 11, 457, 309, 1177, 380, 360, 1340, 51804, 51804, 337, 291, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10960493087768555, "compression_ratio": 1.6535714285714285, "no_speech_prob": 2.8572471819643397e-06}, {"id": 836, "seek": 298516, "start": 2994.24, "end": 2997.68, "text": " The reconstruction error will probably increase.", "tokens": [50364, 1171, 1365, 11, 341, 6889, 293, 300, 6889, 1062, 917, 493, 885, 9019, 365, 1184, 661, 570, 50666, 50666, 562, 291, 909, 5658, 11, 291, 393, 1261, 472, 666, 264, 661, 13, 50818, 50818, 440, 31565, 6713, 486, 1391, 3488, 13, 50990, 50990, 708, 307, 264, 1185, 516, 281, 360, 30, 51066, 51066, 4372, 1858, 13, 51116, 51116, 467, 311, 516, 281, 652, 729, 283, 16740, 2965, 3603, 1314, 490, 1184, 661, 370, 300, 436, 500, 380, 19959, 13, 51362, 51362, 663, 534, 307, 406, 300, 1880, 13, 51480, 51480, 467, 445, 1669, 264, 2026, 295, 264, 5598, 295, 264, 2058, 19866, 445, 4833, 11, 457, 309, 1177, 380, 360, 1340, 51804, 51804, 337, 291, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10960493087768555, "compression_ratio": 1.6535714285714285, "no_speech_prob": 2.8572471819643397e-06}, {"id": 837, "seek": 298516, "start": 2997.68, "end": 2999.2, "text": " What is the system going to do?", "tokens": [50364, 1171, 1365, 11, 341, 6889, 293, 300, 6889, 1062, 917, 493, 885, 9019, 365, 1184, 661, 570, 50666, 50666, 562, 291, 909, 5658, 11, 291, 393, 1261, 472, 666, 264, 661, 13, 50818, 50818, 440, 31565, 6713, 486, 1391, 3488, 13, 50990, 50990, 708, 307, 264, 1185, 516, 281, 360, 30, 51066, 51066, 4372, 1858, 13, 51116, 51116, 467, 311, 516, 281, 652, 729, 283, 16740, 2965, 3603, 1314, 490, 1184, 661, 370, 300, 436, 500, 380, 19959, 13, 51362, 51362, 663, 534, 307, 406, 300, 1880, 13, 51480, 51480, 467, 445, 1669, 264, 2026, 295, 264, 5598, 295, 264, 2058, 19866, 445, 4833, 11, 457, 309, 1177, 380, 360, 1340, 51804, 51804, 337, 291, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10960493087768555, "compression_ratio": 1.6535714285714285, "no_speech_prob": 2.8572471819643397e-06}, {"id": 838, "seek": 298516, "start": 2999.2, "end": 3000.2, "text": " Very easy.", "tokens": [50364, 1171, 1365, 11, 341, 6889, 293, 300, 6889, 1062, 917, 493, 885, 9019, 365, 1184, 661, 570, 50666, 50666, 562, 291, 909, 5658, 11, 291, 393, 1261, 472, 666, 264, 661, 13, 50818, 50818, 440, 31565, 6713, 486, 1391, 3488, 13, 50990, 50990, 708, 307, 264, 1185, 516, 281, 360, 30, 51066, 51066, 4372, 1858, 13, 51116, 51116, 467, 311, 516, 281, 652, 729, 283, 16740, 2965, 3603, 1314, 490, 1184, 661, 370, 300, 436, 500, 380, 19959, 13, 51362, 51362, 663, 534, 307, 406, 300, 1880, 13, 51480, 51480, 467, 445, 1669, 264, 2026, 295, 264, 5598, 295, 264, 2058, 19866, 445, 4833, 11, 457, 309, 1177, 380, 360, 1340, 51804, 51804, 337, 291, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10960493087768555, "compression_ratio": 1.6535714285714285, "no_speech_prob": 2.8572471819643397e-06}, {"id": 839, "seek": 298516, "start": 3000.2, "end": 3005.12, "text": " It's going to make those fuzzables fly away from each other so that they don't overlap.", "tokens": [50364, 1171, 1365, 11, 341, 6889, 293, 300, 6889, 1062, 917, 493, 885, 9019, 365, 1184, 661, 570, 50666, 50666, 562, 291, 909, 5658, 11, 291, 393, 1261, 472, 666, 264, 661, 13, 50818, 50818, 440, 31565, 6713, 486, 1391, 3488, 13, 50990, 50990, 708, 307, 264, 1185, 516, 281, 360, 30, 51066, 51066, 4372, 1858, 13, 51116, 51116, 467, 311, 516, 281, 652, 729, 283, 16740, 2965, 3603, 1314, 490, 1184, 661, 370, 300, 436, 500, 380, 19959, 13, 51362, 51362, 663, 534, 307, 406, 300, 1880, 13, 51480, 51480, 467, 445, 1669, 264, 2026, 295, 264, 5598, 295, 264, 2058, 19866, 445, 4833, 11, 457, 309, 1177, 380, 360, 1340, 51804, 51804, 337, 291, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10960493087768555, "compression_ratio": 1.6535714285714285, "no_speech_prob": 2.8572471819643397e-06}, {"id": 840, "seek": 298516, "start": 3005.12, "end": 3007.48, "text": " That really is not that interesting.", "tokens": [50364, 1171, 1365, 11, 341, 6889, 293, 300, 6889, 1062, 917, 493, 885, 9019, 365, 1184, 661, 570, 50666, 50666, 562, 291, 909, 5658, 11, 291, 393, 1261, 472, 666, 264, 661, 13, 50818, 50818, 440, 31565, 6713, 486, 1391, 3488, 13, 50990, 50990, 708, 307, 264, 1185, 516, 281, 360, 30, 51066, 51066, 4372, 1858, 13, 51116, 51116, 467, 311, 516, 281, 652, 729, 283, 16740, 2965, 3603, 1314, 490, 1184, 661, 370, 300, 436, 500, 380, 19959, 13, 51362, 51362, 663, 534, 307, 406, 300, 1880, 13, 51480, 51480, 467, 445, 1669, 264, 2026, 295, 264, 5598, 295, 264, 2058, 19866, 445, 4833, 11, 457, 309, 1177, 380, 360, 1340, 51804, 51804, 337, 291, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10960493087768555, "compression_ratio": 1.6535714285714285, "no_speech_prob": 2.8572471819643397e-06}, {"id": 841, "seek": 298516, "start": 3007.48, "end": 3013.96, "text": " It just makes the norm of the output of the encoder just larger, but it doesn't do anything", "tokens": [50364, 1171, 1365, 11, 341, 6889, 293, 300, 6889, 1062, 917, 493, 885, 9019, 365, 1184, 661, 570, 50666, 50666, 562, 291, 909, 5658, 11, 291, 393, 1261, 472, 666, 264, 661, 13, 50818, 50818, 440, 31565, 6713, 486, 1391, 3488, 13, 50990, 50990, 708, 307, 264, 1185, 516, 281, 360, 30, 51066, 51066, 4372, 1858, 13, 51116, 51116, 467, 311, 516, 281, 652, 729, 283, 16740, 2965, 3603, 1314, 490, 1184, 661, 370, 300, 436, 500, 380, 19959, 13, 51362, 51362, 663, 534, 307, 406, 300, 1880, 13, 51480, 51480, 467, 445, 1669, 264, 2026, 295, 264, 5598, 295, 264, 2058, 19866, 445, 4833, 11, 457, 309, 1177, 380, 360, 1340, 51804, 51804, 337, 291, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10960493087768555, "compression_ratio": 1.6535714285714285, "no_speech_prob": 2.8572471819643397e-06}, {"id": 842, "seek": 298516, "start": 3013.96, "end": 3014.96, "text": " for you.", "tokens": [50364, 1171, 1365, 11, 341, 6889, 293, 300, 6889, 1062, 917, 493, 885, 9019, 365, 1184, 661, 570, 50666, 50666, 562, 291, 909, 5658, 11, 291, 393, 1261, 472, 666, 264, 661, 13, 50818, 50818, 440, 31565, 6713, 486, 1391, 3488, 13, 50990, 50990, 708, 307, 264, 1185, 516, 281, 360, 30, 51066, 51066, 4372, 1858, 13, 51116, 51116, 467, 311, 516, 281, 652, 729, 283, 16740, 2965, 3603, 1314, 490, 1184, 661, 370, 300, 436, 500, 380, 19959, 13, 51362, 51362, 663, 534, 307, 406, 300, 1880, 13, 51480, 51480, 467, 445, 1669, 264, 2026, 295, 264, 5598, 295, 264, 2058, 19866, 445, 4833, 11, 457, 309, 1177, 380, 360, 1340, 51804, 51804, 337, 291, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10960493087768555, "compression_ratio": 1.6535714285714285, "no_speech_prob": 2.8572471819643397e-06}, {"id": 843, "seek": 301496, "start": 3014.96, "end": 3016.64, "text": " What you do is you play a trick.", "tokens": [50364, 708, 291, 360, 307, 291, 862, 257, 4282, 13, 50448, 50448, 509, 5085, 1184, 295, 729, 707, 283, 16740, 2965, 281, 264, 4957, 365, 257, 5587, 13, 50718, 50718, 509, 980, 552, 11, 1392, 11, 291, 393, 3603, 1314, 11, 457, 406, 886, 1400, 13, 50866, 50866, 509, 733, 295, 362, 281, 19959, 365, 1184, 661, 293, 7690, 512, 1333, 295, 1412, 47138, 498, 51054, 51054, 291, 528, 13, 51234, 51234, 4453, 16295, 486, 19959, 281, 264, 8396, 300, 264, 31565, 6713, 307, 406, 12023, 322, 51416, 51416, 264, 5598, 13, 51466, 51466, 821, 311, 257, 4923, 4506, 1296, 264, 3800, 295, 300, 5587, 11, 264, 2744, 295, 729, 16295, 11, 597, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1447535383290258, "compression_ratio": 1.7153846153846153, "no_speech_prob": 3.9053556974977255e-06}, {"id": 844, "seek": 301496, "start": 3016.64, "end": 3022.04, "text": " You attach each of those little fuzzables to the origin with a spring.", "tokens": [50364, 708, 291, 360, 307, 291, 862, 257, 4282, 13, 50448, 50448, 509, 5085, 1184, 295, 729, 707, 283, 16740, 2965, 281, 264, 4957, 365, 257, 5587, 13, 50718, 50718, 509, 980, 552, 11, 1392, 11, 291, 393, 3603, 1314, 11, 457, 406, 886, 1400, 13, 50866, 50866, 509, 733, 295, 362, 281, 19959, 365, 1184, 661, 293, 7690, 512, 1333, 295, 1412, 47138, 498, 51054, 51054, 291, 528, 13, 51234, 51234, 4453, 16295, 486, 19959, 281, 264, 8396, 300, 264, 31565, 6713, 307, 406, 12023, 322, 51416, 51416, 264, 5598, 13, 51466, 51466, 821, 311, 257, 4923, 4506, 1296, 264, 3800, 295, 300, 5587, 11, 264, 2744, 295, 729, 16295, 11, 597, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1447535383290258, "compression_ratio": 1.7153846153846153, "no_speech_prob": 3.9053556974977255e-06}, {"id": 845, "seek": 301496, "start": 3022.04, "end": 3025.0, "text": " You tell them, okay, you can fly away, but not too far.", "tokens": [50364, 708, 291, 360, 307, 291, 862, 257, 4282, 13, 50448, 50448, 509, 5085, 1184, 295, 729, 707, 283, 16740, 2965, 281, 264, 4957, 365, 257, 5587, 13, 50718, 50718, 509, 980, 552, 11, 1392, 11, 291, 393, 3603, 1314, 11, 457, 406, 886, 1400, 13, 50866, 50866, 509, 733, 295, 362, 281, 19959, 365, 1184, 661, 293, 7690, 512, 1333, 295, 1412, 47138, 498, 51054, 51054, 291, 528, 13, 51234, 51234, 4453, 16295, 486, 19959, 281, 264, 8396, 300, 264, 31565, 6713, 307, 406, 12023, 322, 51416, 51416, 264, 5598, 13, 51466, 51466, 821, 311, 257, 4923, 4506, 1296, 264, 3800, 295, 300, 5587, 11, 264, 2744, 295, 729, 16295, 11, 597, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1447535383290258, "compression_ratio": 1.7153846153846153, "no_speech_prob": 3.9053556974977255e-06}, {"id": 846, "seek": 301496, "start": 3025.0, "end": 3028.76, "text": " You kind of have to overlap with each other and construct some sort of data manifold if", "tokens": [50364, 708, 291, 360, 307, 291, 862, 257, 4282, 13, 50448, 50448, 509, 5085, 1184, 295, 729, 707, 283, 16740, 2965, 281, 264, 4957, 365, 257, 5587, 13, 50718, 50718, 509, 980, 552, 11, 1392, 11, 291, 393, 3603, 1314, 11, 457, 406, 886, 1400, 13, 50866, 50866, 509, 733, 295, 362, 281, 19959, 365, 1184, 661, 293, 7690, 512, 1333, 295, 1412, 47138, 498, 51054, 51054, 291, 528, 13, 51234, 51234, 4453, 16295, 486, 19959, 281, 264, 8396, 300, 264, 31565, 6713, 307, 406, 12023, 322, 51416, 51416, 264, 5598, 13, 51466, 51466, 821, 311, 257, 4923, 4506, 1296, 264, 3800, 295, 300, 5587, 11, 264, 2744, 295, 729, 16295, 11, 597, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1447535383290258, "compression_ratio": 1.7153846153846153, "no_speech_prob": 3.9053556974977255e-06}, {"id": 847, "seek": 301496, "start": 3028.76, "end": 3032.36, "text": " you want.", "tokens": [50364, 708, 291, 360, 307, 291, 862, 257, 4282, 13, 50448, 50448, 509, 5085, 1184, 295, 729, 707, 283, 16740, 2965, 281, 264, 4957, 365, 257, 5587, 13, 50718, 50718, 509, 980, 552, 11, 1392, 11, 291, 393, 3603, 1314, 11, 457, 406, 886, 1400, 13, 50866, 50866, 509, 733, 295, 362, 281, 19959, 365, 1184, 661, 293, 7690, 512, 1333, 295, 1412, 47138, 498, 51054, 51054, 291, 528, 13, 51234, 51234, 4453, 16295, 486, 19959, 281, 264, 8396, 300, 264, 31565, 6713, 307, 406, 12023, 322, 51416, 51416, 264, 5598, 13, 51466, 51466, 821, 311, 257, 4923, 4506, 1296, 264, 3800, 295, 300, 5587, 11, 264, 2744, 295, 729, 16295, 11, 597, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1447535383290258, "compression_ratio": 1.7153846153846153, "no_speech_prob": 3.9053556974977255e-06}, {"id": 848, "seek": 301496, "start": 3032.36, "end": 3036.0, "text": " Two bubbles will overlap to the extent that the reconstruction error is not dramatic on", "tokens": [50364, 708, 291, 360, 307, 291, 862, 257, 4282, 13, 50448, 50448, 509, 5085, 1184, 295, 729, 707, 283, 16740, 2965, 281, 264, 4957, 365, 257, 5587, 13, 50718, 50718, 509, 980, 552, 11, 1392, 11, 291, 393, 3603, 1314, 11, 457, 406, 886, 1400, 13, 50866, 50866, 509, 733, 295, 362, 281, 19959, 365, 1184, 661, 293, 7690, 512, 1333, 295, 1412, 47138, 498, 51054, 51054, 291, 528, 13, 51234, 51234, 4453, 16295, 486, 19959, 281, 264, 8396, 300, 264, 31565, 6713, 307, 406, 12023, 322, 51416, 51416, 264, 5598, 13, 51466, 51466, 821, 311, 257, 4923, 4506, 1296, 264, 3800, 295, 300, 5587, 11, 264, 2744, 295, 729, 16295, 11, 597, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1447535383290258, "compression_ratio": 1.7153846153846153, "no_speech_prob": 3.9053556974977255e-06}, {"id": 849, "seek": 301496, "start": 3036.0, "end": 3037.0, "text": " the output.", "tokens": [50364, 708, 291, 360, 307, 291, 862, 257, 4282, 13, 50448, 50448, 509, 5085, 1184, 295, 729, 707, 283, 16740, 2965, 281, 264, 4957, 365, 257, 5587, 13, 50718, 50718, 509, 980, 552, 11, 1392, 11, 291, 393, 3603, 1314, 11, 457, 406, 886, 1400, 13, 50866, 50866, 509, 733, 295, 362, 281, 19959, 365, 1184, 661, 293, 7690, 512, 1333, 295, 1412, 47138, 498, 51054, 51054, 291, 528, 13, 51234, 51234, 4453, 16295, 486, 19959, 281, 264, 8396, 300, 264, 31565, 6713, 307, 406, 12023, 322, 51416, 51416, 264, 5598, 13, 51466, 51466, 821, 311, 257, 4923, 4506, 1296, 264, 3800, 295, 300, 5587, 11, 264, 2744, 295, 729, 16295, 11, 597, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1447535383290258, "compression_ratio": 1.7153846153846153, "no_speech_prob": 3.9053556974977255e-06}, {"id": 850, "seek": 301496, "start": 3037.0, "end": 3043.2, "text": " There's a tradeoff between the strength of that spring, the size of those bubbles, which", "tokens": [50364, 708, 291, 360, 307, 291, 862, 257, 4282, 13, 50448, 50448, 509, 5085, 1184, 295, 729, 707, 283, 16740, 2965, 281, 264, 4957, 365, 257, 5587, 13, 50718, 50718, 509, 980, 552, 11, 1392, 11, 291, 393, 3603, 1314, 11, 457, 406, 886, 1400, 13, 50866, 50866, 509, 733, 295, 362, 281, 19959, 365, 1184, 661, 293, 7690, 512, 1333, 295, 1412, 47138, 498, 51054, 51054, 291, 528, 13, 51234, 51234, 4453, 16295, 486, 19959, 281, 264, 8396, 300, 264, 31565, 6713, 307, 406, 12023, 322, 51416, 51416, 264, 5598, 13, 51466, 51466, 821, 311, 257, 4923, 4506, 1296, 264, 3800, 295, 300, 5587, 11, 264, 2744, 295, 729, 16295, 11, 597, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1447535383290258, "compression_ratio": 1.7153846153846153, "no_speech_prob": 3.9053556974977255e-06}, {"id": 851, "seek": 304320, "start": 3043.2, "end": 3051.0, "text": " in the case of variational autoencoders are maximized, actually, and things like that.", "tokens": [50364, 294, 264, 1389, 295, 3034, 1478, 8399, 22660, 378, 433, 366, 5138, 1602, 11, 767, 11, 293, 721, 411, 300, 13, 50754, 50754, 759, 291, 1401, 439, 264, 10577, 322, 3034, 1478, 8399, 22660, 378, 433, 11, 309, 311, 1128, 48936, 411, 341, 13, 50936, 50936, 467, 311, 48936, 382, 512, 3034, 1478, 3126, 5472, 295, 512, 8482, 7316, 13, 51196, 51196, 639, 307, 257, 12070, 21663, 11, 293, 309, 1669, 309, 2584, 1850, 341, 307, 445, 257, 636, 295, 51414, 51414, 12245, 264, 1589, 6042, 295, 264, 3089, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.18850476691063414, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93887863639975e-06}, {"id": 852, "seek": 304320, "start": 3051.0, "end": 3054.64, "text": " If you read all the papers on variational autoencoders, it's never formulated like this.", "tokens": [50364, 294, 264, 1389, 295, 3034, 1478, 8399, 22660, 378, 433, 366, 5138, 1602, 11, 767, 11, 293, 721, 411, 300, 13, 50754, 50754, 759, 291, 1401, 439, 264, 10577, 322, 3034, 1478, 8399, 22660, 378, 433, 11, 309, 311, 1128, 48936, 411, 341, 13, 50936, 50936, 467, 311, 48936, 382, 512, 3034, 1478, 3126, 5472, 295, 512, 8482, 7316, 13, 51196, 51196, 639, 307, 257, 12070, 21663, 11, 293, 309, 1669, 309, 2584, 1850, 341, 307, 445, 257, 636, 295, 51414, 51414, 12245, 264, 1589, 6042, 295, 264, 3089, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.18850476691063414, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93887863639975e-06}, {"id": 853, "seek": 304320, "start": 3054.64, "end": 3059.8399999999997, "text": " It's formulated as some variational lower bound of some probability distribution.", "tokens": [50364, 294, 264, 1389, 295, 3034, 1478, 8399, 22660, 378, 433, 366, 5138, 1602, 11, 767, 11, 293, 721, 411, 300, 13, 50754, 50754, 759, 291, 1401, 439, 264, 10577, 322, 3034, 1478, 8399, 22660, 378, 433, 11, 309, 311, 1128, 48936, 411, 341, 13, 50936, 50936, 467, 311, 48936, 382, 512, 3034, 1478, 3126, 5472, 295, 512, 8482, 7316, 13, 51196, 51196, 639, 307, 257, 12070, 21663, 11, 293, 309, 1669, 309, 2584, 1850, 341, 307, 445, 257, 636, 295, 51414, 51414, 12245, 264, 1589, 6042, 295, 264, 3089, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.18850476691063414, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93887863639975e-06}, {"id": 854, "seek": 304320, "start": 3059.8399999999997, "end": 3064.2, "text": " This is a mechanical analogy, and it makes it completely clear this is just a way of", "tokens": [50364, 294, 264, 1389, 295, 3034, 1478, 8399, 22660, 378, 433, 366, 5138, 1602, 11, 767, 11, 293, 721, 411, 300, 13, 50754, 50754, 759, 291, 1401, 439, 264, 10577, 322, 3034, 1478, 8399, 22660, 378, 433, 11, 309, 311, 1128, 48936, 411, 341, 13, 50936, 50936, 467, 311, 48936, 382, 512, 3034, 1478, 3126, 5472, 295, 512, 8482, 7316, 13, 51196, 51196, 639, 307, 257, 12070, 21663, 11, 293, 309, 1669, 309, 2584, 1850, 341, 307, 445, 257, 636, 295, 51414, 51414, 12245, 264, 1589, 6042, 295, 264, 3089, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.18850476691063414, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93887863639975e-06}, {"id": 855, "seek": 304320, "start": 3064.2, "end": 3067.4399999999996, "text": " reducing the information capacity of the code.", "tokens": [50364, 294, 264, 1389, 295, 3034, 1478, 8399, 22660, 378, 433, 366, 5138, 1602, 11, 767, 11, 293, 721, 411, 300, 13, 50754, 50754, 759, 291, 1401, 439, 264, 10577, 322, 3034, 1478, 8399, 22660, 378, 433, 11, 309, 311, 1128, 48936, 411, 341, 13, 50936, 50936, 467, 311, 48936, 382, 512, 3034, 1478, 3126, 5472, 295, 512, 8482, 7316, 13, 51196, 51196, 639, 307, 257, 12070, 21663, 11, 293, 309, 1669, 309, 2584, 1850, 341, 307, 445, 257, 636, 295, 51414, 51414, 12245, 264, 1589, 6042, 295, 264, 3089, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.18850476691063414, "compression_ratio": 1.691304347826087, "no_speech_prob": 8.93887863639975e-06}, {"id": 856, "seek": 306744, "start": 3067.44, "end": 3075.88, "text": " I'm going to end with an application of all this, which is the problem of predicting what", "tokens": [50364, 286, 478, 516, 281, 917, 365, 364, 3861, 295, 439, 341, 11, 597, 307, 264, 1154, 295, 32884, 437, 50786, 50786, 264, 1002, 926, 291, 307, 516, 281, 360, 337, 721, 411, 20220, 281, 9961, 666, 661, 5163, 11, 337, 51008, 51008, 1365, 13, 51058, 51058, 286, 1217, 2825, 466, 341, 1558, 300, 498, 291, 362, 257, 2128, 2316, 295, 264, 1002, 300, 2709, 51252, 51252, 291, 264, 1785, 295, 264, 1002, 412, 565, 256, 1804, 472, 11, 264, 2445, 295, 264, 1785, 412, 565, 256, 11, 51474, 51474], "temperature": 0.0, "avg_logprob": -0.13414510789808337, "compression_ratio": 1.7320574162679425, "no_speech_prob": 5.954686457698699e-06}, {"id": 857, "seek": 306744, "start": 3075.88, "end": 3080.32, "text": " the world around you is going to do for things like avoiding to bump into other cars, for", "tokens": [50364, 286, 478, 516, 281, 917, 365, 364, 3861, 295, 439, 341, 11, 597, 307, 264, 1154, 295, 32884, 437, 50786, 50786, 264, 1002, 926, 291, 307, 516, 281, 360, 337, 721, 411, 20220, 281, 9961, 666, 661, 5163, 11, 337, 51008, 51008, 1365, 13, 51058, 51058, 286, 1217, 2825, 466, 341, 1558, 300, 498, 291, 362, 257, 2128, 2316, 295, 264, 1002, 300, 2709, 51252, 51252, 291, 264, 1785, 295, 264, 1002, 412, 565, 256, 1804, 472, 11, 264, 2445, 295, 264, 1785, 412, 565, 256, 11, 51474, 51474], "temperature": 0.0, "avg_logprob": -0.13414510789808337, "compression_ratio": 1.7320574162679425, "no_speech_prob": 5.954686457698699e-06}, {"id": 858, "seek": 306744, "start": 3080.32, "end": 3081.32, "text": " example.", "tokens": [50364, 286, 478, 516, 281, 917, 365, 364, 3861, 295, 439, 341, 11, 597, 307, 264, 1154, 295, 32884, 437, 50786, 50786, 264, 1002, 926, 291, 307, 516, 281, 360, 337, 721, 411, 20220, 281, 9961, 666, 661, 5163, 11, 337, 51008, 51008, 1365, 13, 51058, 51058, 286, 1217, 2825, 466, 341, 1558, 300, 498, 291, 362, 257, 2128, 2316, 295, 264, 1002, 300, 2709, 51252, 51252, 291, 264, 1785, 295, 264, 1002, 412, 565, 256, 1804, 472, 11, 264, 2445, 295, 264, 1785, 412, 565, 256, 11, 51474, 51474], "temperature": 0.0, "avg_logprob": -0.13414510789808337, "compression_ratio": 1.7320574162679425, "no_speech_prob": 5.954686457698699e-06}, {"id": 859, "seek": 306744, "start": 3081.32, "end": 3085.2000000000003, "text": " I already talked about this idea that if you have a forward model of the world that gives", "tokens": [50364, 286, 478, 516, 281, 917, 365, 364, 3861, 295, 439, 341, 11, 597, 307, 264, 1154, 295, 32884, 437, 50786, 50786, 264, 1002, 926, 291, 307, 516, 281, 360, 337, 721, 411, 20220, 281, 9961, 666, 661, 5163, 11, 337, 51008, 51008, 1365, 13, 51058, 51058, 286, 1217, 2825, 466, 341, 1558, 300, 498, 291, 362, 257, 2128, 2316, 295, 264, 1002, 300, 2709, 51252, 51252, 291, 264, 1785, 295, 264, 1002, 412, 565, 256, 1804, 472, 11, 264, 2445, 295, 264, 1785, 412, 565, 256, 11, 51474, 51474], "temperature": 0.0, "avg_logprob": -0.13414510789808337, "compression_ratio": 1.7320574162679425, "no_speech_prob": 5.954686457698699e-06}, {"id": 860, "seek": 306744, "start": 3085.2000000000003, "end": 3089.64, "text": " you the state of the world at time t plus one, the function of the state at time t,", "tokens": [50364, 286, 478, 516, 281, 917, 365, 364, 3861, 295, 439, 341, 11, 597, 307, 264, 1154, 295, 32884, 437, 50786, 50786, 264, 1002, 926, 291, 307, 516, 281, 360, 337, 721, 411, 20220, 281, 9961, 666, 661, 5163, 11, 337, 51008, 51008, 1365, 13, 51058, 51058, 286, 1217, 2825, 466, 341, 1558, 300, 498, 291, 362, 257, 2128, 2316, 295, 264, 1002, 300, 2709, 51252, 51252, 291, 264, 1785, 295, 264, 1002, 412, 565, 256, 1804, 472, 11, 264, 2445, 295, 264, 1785, 412, 565, 256, 11, 51474, 51474], "temperature": 0.0, "avg_logprob": -0.13414510789808337, "compression_ratio": 1.7320574162679425, "no_speech_prob": 5.954686457698699e-06}, {"id": 861, "seek": 308964, "start": 3089.64, "end": 3097.72, "text": " and the action you're going to take, you can roll out an action in your head with using", "tokens": [50364, 293, 264, 3069, 291, 434, 516, 281, 747, 11, 291, 393, 3373, 484, 364, 3069, 294, 428, 1378, 365, 1228, 50768, 50768, 341, 2316, 293, 4317, 1393, 257, 8310, 295, 3069, 300, 486, 17522, 428, 2063, 510, 11, 51030, 51030, 264, 2063, 885, 286, 528, 281, 1754, 294, 452, 12705, 293, 286, 500, 380, 528, 281, 9961, 666, 661, 5163, 13, 51188, 51188, 286, 500, 380, 528, 281, 483, 886, 1998, 281, 604, 661, 5163, 13, 51314, 51314, 663, 311, 257, 819, 9364, 2063, 13, 51364, 51364, 286, 478, 406, 1417, 466, 29280, 2539, 13, 51454, 51454, 5471, 307, 819, 9364, 13, 51504, 51504, 5471, 307, 2807, 712, 13, 51554, 51554, 286, 500, 380, 643, 281, 853, 1340, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.110277951248293, "compression_ratio": 1.802325581395349, "no_speech_prob": 1.3709068298339844e-06}, {"id": 862, "seek": 308964, "start": 3097.72, "end": 3102.96, "text": " this model and perhaps plan a sequence of action that will minimize your cost here,", "tokens": [50364, 293, 264, 3069, 291, 434, 516, 281, 747, 11, 291, 393, 3373, 484, 364, 3069, 294, 428, 1378, 365, 1228, 50768, 50768, 341, 2316, 293, 4317, 1393, 257, 8310, 295, 3069, 300, 486, 17522, 428, 2063, 510, 11, 51030, 51030, 264, 2063, 885, 286, 528, 281, 1754, 294, 452, 12705, 293, 286, 500, 380, 528, 281, 9961, 666, 661, 5163, 13, 51188, 51188, 286, 500, 380, 528, 281, 483, 886, 1998, 281, 604, 661, 5163, 13, 51314, 51314, 663, 311, 257, 819, 9364, 2063, 13, 51364, 51364, 286, 478, 406, 1417, 466, 29280, 2539, 13, 51454, 51454, 5471, 307, 819, 9364, 13, 51504, 51504, 5471, 307, 2807, 712, 13, 51554, 51554, 286, 500, 380, 643, 281, 853, 1340, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.110277951248293, "compression_ratio": 1.802325581395349, "no_speech_prob": 1.3709068298339844e-06}, {"id": 863, "seek": 308964, "start": 3102.96, "end": 3106.12, "text": " the cost being I want to stay in my lane and I don't want to bump into other cars.", "tokens": [50364, 293, 264, 3069, 291, 434, 516, 281, 747, 11, 291, 393, 3373, 484, 364, 3069, 294, 428, 1378, 365, 1228, 50768, 50768, 341, 2316, 293, 4317, 1393, 257, 8310, 295, 3069, 300, 486, 17522, 428, 2063, 510, 11, 51030, 51030, 264, 2063, 885, 286, 528, 281, 1754, 294, 452, 12705, 293, 286, 500, 380, 528, 281, 9961, 666, 661, 5163, 13, 51188, 51188, 286, 500, 380, 528, 281, 483, 886, 1998, 281, 604, 661, 5163, 13, 51314, 51314, 663, 311, 257, 819, 9364, 2063, 13, 51364, 51364, 286, 478, 406, 1417, 466, 29280, 2539, 13, 51454, 51454, 5471, 307, 819, 9364, 13, 51504, 51504, 5471, 307, 2807, 712, 13, 51554, 51554, 286, 500, 380, 643, 281, 853, 1340, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.110277951248293, "compression_ratio": 1.802325581395349, "no_speech_prob": 1.3709068298339844e-06}, {"id": 864, "seek": 308964, "start": 3106.12, "end": 3108.64, "text": " I don't want to get too close to any other cars.", "tokens": [50364, 293, 264, 3069, 291, 434, 516, 281, 747, 11, 291, 393, 3373, 484, 364, 3069, 294, 428, 1378, 365, 1228, 50768, 50768, 341, 2316, 293, 4317, 1393, 257, 8310, 295, 3069, 300, 486, 17522, 428, 2063, 510, 11, 51030, 51030, 264, 2063, 885, 286, 528, 281, 1754, 294, 452, 12705, 293, 286, 500, 380, 528, 281, 9961, 666, 661, 5163, 13, 51188, 51188, 286, 500, 380, 528, 281, 483, 886, 1998, 281, 604, 661, 5163, 13, 51314, 51314, 663, 311, 257, 819, 9364, 2063, 13, 51364, 51364, 286, 478, 406, 1417, 466, 29280, 2539, 13, 51454, 51454, 5471, 307, 819, 9364, 13, 51504, 51504, 5471, 307, 2807, 712, 13, 51554, 51554, 286, 500, 380, 643, 281, 853, 1340, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.110277951248293, "compression_ratio": 1.802325581395349, "no_speech_prob": 1.3709068298339844e-06}, {"id": 865, "seek": 308964, "start": 3108.64, "end": 3109.64, "text": " That's a differentiable cost.", "tokens": [50364, 293, 264, 3069, 291, 434, 516, 281, 747, 11, 291, 393, 3373, 484, 364, 3069, 294, 428, 1378, 365, 1228, 50768, 50768, 341, 2316, 293, 4317, 1393, 257, 8310, 295, 3069, 300, 486, 17522, 428, 2063, 510, 11, 51030, 51030, 264, 2063, 885, 286, 528, 281, 1754, 294, 452, 12705, 293, 286, 500, 380, 528, 281, 9961, 666, 661, 5163, 13, 51188, 51188, 286, 500, 380, 528, 281, 483, 886, 1998, 281, 604, 661, 5163, 13, 51314, 51314, 663, 311, 257, 819, 9364, 2063, 13, 51364, 51364, 286, 478, 406, 1417, 466, 29280, 2539, 13, 51454, 51454, 5471, 307, 819, 9364, 13, 51504, 51504, 5471, 307, 2807, 712, 13, 51554, 51554, 286, 500, 380, 643, 281, 853, 1340, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.110277951248293, "compression_ratio": 1.802325581395349, "no_speech_prob": 1.3709068298339844e-06}, {"id": 866, "seek": 308964, "start": 3109.64, "end": 3111.44, "text": " I'm not talking about reinforcement learning.", "tokens": [50364, 293, 264, 3069, 291, 434, 516, 281, 747, 11, 291, 393, 3373, 484, 364, 3069, 294, 428, 1378, 365, 1228, 50768, 50768, 341, 2316, 293, 4317, 1393, 257, 8310, 295, 3069, 300, 486, 17522, 428, 2063, 510, 11, 51030, 51030, 264, 2063, 885, 286, 528, 281, 1754, 294, 452, 12705, 293, 286, 500, 380, 528, 281, 9961, 666, 661, 5163, 13, 51188, 51188, 286, 500, 380, 528, 281, 483, 886, 1998, 281, 604, 661, 5163, 13, 51314, 51314, 663, 311, 257, 819, 9364, 2063, 13, 51364, 51364, 286, 478, 406, 1417, 466, 29280, 2539, 13, 51454, 51454, 5471, 307, 819, 9364, 13, 51504, 51504, 5471, 307, 2807, 712, 13, 51554, 51554, 286, 500, 380, 643, 281, 853, 1340, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.110277951248293, "compression_ratio": 1.802325581395349, "no_speech_prob": 1.3709068298339844e-06}, {"id": 867, "seek": 308964, "start": 3111.44, "end": 3112.44, "text": " Everything is differentiable.", "tokens": [50364, 293, 264, 3069, 291, 434, 516, 281, 747, 11, 291, 393, 3373, 484, 364, 3069, 294, 428, 1378, 365, 1228, 50768, 50768, 341, 2316, 293, 4317, 1393, 257, 8310, 295, 3069, 300, 486, 17522, 428, 2063, 510, 11, 51030, 51030, 264, 2063, 885, 286, 528, 281, 1754, 294, 452, 12705, 293, 286, 500, 380, 528, 281, 9961, 666, 661, 5163, 13, 51188, 51188, 286, 500, 380, 528, 281, 483, 886, 1998, 281, 604, 661, 5163, 13, 51314, 51314, 663, 311, 257, 819, 9364, 2063, 13, 51364, 51364, 286, 478, 406, 1417, 466, 29280, 2539, 13, 51454, 51454, 5471, 307, 819, 9364, 13, 51504, 51504, 5471, 307, 2807, 712, 13, 51554, 51554, 286, 500, 380, 643, 281, 853, 1340, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.110277951248293, "compression_ratio": 1.802325581395349, "no_speech_prob": 1.3709068298339844e-06}, {"id": 868, "seek": 308964, "start": 3112.44, "end": 3113.44, "text": " Everything is computable.", "tokens": [50364, 293, 264, 3069, 291, 434, 516, 281, 747, 11, 291, 393, 3373, 484, 364, 3069, 294, 428, 1378, 365, 1228, 50768, 50768, 341, 2316, 293, 4317, 1393, 257, 8310, 295, 3069, 300, 486, 17522, 428, 2063, 510, 11, 51030, 51030, 264, 2063, 885, 286, 528, 281, 1754, 294, 452, 12705, 293, 286, 500, 380, 528, 281, 9961, 666, 661, 5163, 13, 51188, 51188, 286, 500, 380, 528, 281, 483, 886, 1998, 281, 604, 661, 5163, 13, 51314, 51314, 663, 311, 257, 819, 9364, 2063, 13, 51364, 51364, 286, 478, 406, 1417, 466, 29280, 2539, 13, 51454, 51454, 5471, 307, 819, 9364, 13, 51504, 51504, 5471, 307, 2807, 712, 13, 51554, 51554, 286, 500, 380, 643, 281, 853, 1340, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.110277951248293, "compression_ratio": 1.802325581395349, "no_speech_prob": 1.3709068298339844e-06}, {"id": 869, "seek": 308964, "start": 3113.44, "end": 3114.44, "text": " I don't need to try anything.", "tokens": [50364, 293, 264, 3069, 291, 434, 516, 281, 747, 11, 291, 393, 3373, 484, 364, 3069, 294, 428, 1378, 365, 1228, 50768, 50768, 341, 2316, 293, 4317, 1393, 257, 8310, 295, 3069, 300, 486, 17522, 428, 2063, 510, 11, 51030, 51030, 264, 2063, 885, 286, 528, 281, 1754, 294, 452, 12705, 293, 286, 500, 380, 528, 281, 9961, 666, 661, 5163, 13, 51188, 51188, 286, 500, 380, 528, 281, 483, 886, 1998, 281, 604, 661, 5163, 13, 51314, 51314, 663, 311, 257, 819, 9364, 2063, 13, 51364, 51364, 286, 478, 406, 1417, 466, 29280, 2539, 13, 51454, 51454, 5471, 307, 819, 9364, 13, 51504, 51504, 5471, 307, 2807, 712, 13, 51554, 51554, 286, 500, 380, 643, 281, 853, 1340, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.110277951248293, "compression_ratio": 1.802325581395349, "no_speech_prob": 1.3709068298339844e-06}, {"id": 870, "seek": 311444, "start": 3114.44, "end": 3119.88, "text": " I don't need to estimate gradients of stuff by trial and error.", "tokens": [50364, 286, 500, 380, 643, 281, 12539, 2771, 2448, 295, 1507, 538, 7308, 293, 6713, 13, 50636, 50636, 5471, 307, 819, 9364, 13, 50864, 50864, 440, 1154, 11, 295, 1164, 11, 307, 300, 341, 2316, 295, 437, 5163, 926, 291, 366, 516, 281, 360, 307, 51072, 51072, 406, 15957, 3142, 13, 51122, 51122, 821, 311, 257, 688, 295, 721, 300, 5163, 926, 291, 366, 516, 281, 360, 300, 291, 815, 406, 6069, 13, 51394, 51394, 821, 307, 257, 48994, 7006, 294, 264, 2316, 300, 291, 434, 516, 281, 643, 281, 6889, 11, 597, 307, 516, 51589, 51589, 281, 13075, 1125, 257, 992, 295, 439, 6631, 721, 300, 5163, 926, 291, 393, 360, 293, 2107, 12, 372, 6127, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12012832164764405, "compression_ratio": 1.889795918367347, "no_speech_prob": 8.315157629112946e-07}, {"id": 871, "seek": 311444, "start": 3119.88, "end": 3124.44, "text": " Everything is differentiable.", "tokens": [50364, 286, 500, 380, 643, 281, 12539, 2771, 2448, 295, 1507, 538, 7308, 293, 6713, 13, 50636, 50636, 5471, 307, 819, 9364, 13, 50864, 50864, 440, 1154, 11, 295, 1164, 11, 307, 300, 341, 2316, 295, 437, 5163, 926, 291, 366, 516, 281, 360, 307, 51072, 51072, 406, 15957, 3142, 13, 51122, 51122, 821, 311, 257, 688, 295, 721, 300, 5163, 926, 291, 366, 516, 281, 360, 300, 291, 815, 406, 6069, 13, 51394, 51394, 821, 307, 257, 48994, 7006, 294, 264, 2316, 300, 291, 434, 516, 281, 643, 281, 6889, 11, 597, 307, 516, 51589, 51589, 281, 13075, 1125, 257, 992, 295, 439, 6631, 721, 300, 5163, 926, 291, 393, 360, 293, 2107, 12, 372, 6127, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12012832164764405, "compression_ratio": 1.889795918367347, "no_speech_prob": 8.315157629112946e-07}, {"id": 872, "seek": 311444, "start": 3124.44, "end": 3128.6, "text": " The problem, of course, is that this model of what cars around you are going to do is", "tokens": [50364, 286, 500, 380, 643, 281, 12539, 2771, 2448, 295, 1507, 538, 7308, 293, 6713, 13, 50636, 50636, 5471, 307, 819, 9364, 13, 50864, 50864, 440, 1154, 11, 295, 1164, 11, 307, 300, 341, 2316, 295, 437, 5163, 926, 291, 366, 516, 281, 360, 307, 51072, 51072, 406, 15957, 3142, 13, 51122, 51122, 821, 311, 257, 688, 295, 721, 300, 5163, 926, 291, 366, 516, 281, 360, 300, 291, 815, 406, 6069, 13, 51394, 51394, 821, 307, 257, 48994, 7006, 294, 264, 2316, 300, 291, 434, 516, 281, 643, 281, 6889, 11, 597, 307, 516, 51589, 51589, 281, 13075, 1125, 257, 992, 295, 439, 6631, 721, 300, 5163, 926, 291, 393, 360, 293, 2107, 12, 372, 6127, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12012832164764405, "compression_ratio": 1.889795918367347, "no_speech_prob": 8.315157629112946e-07}, {"id": 873, "seek": 311444, "start": 3128.6, "end": 3129.6, "text": " not deterministic.", "tokens": [50364, 286, 500, 380, 643, 281, 12539, 2771, 2448, 295, 1507, 538, 7308, 293, 6713, 13, 50636, 50636, 5471, 307, 819, 9364, 13, 50864, 50864, 440, 1154, 11, 295, 1164, 11, 307, 300, 341, 2316, 295, 437, 5163, 926, 291, 366, 516, 281, 360, 307, 51072, 51072, 406, 15957, 3142, 13, 51122, 51122, 821, 311, 257, 688, 295, 721, 300, 5163, 926, 291, 366, 516, 281, 360, 300, 291, 815, 406, 6069, 13, 51394, 51394, 821, 307, 257, 48994, 7006, 294, 264, 2316, 300, 291, 434, 516, 281, 643, 281, 6889, 11, 597, 307, 516, 51589, 51589, 281, 13075, 1125, 257, 992, 295, 439, 6631, 721, 300, 5163, 926, 291, 393, 360, 293, 2107, 12, 372, 6127, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12012832164764405, "compression_ratio": 1.889795918367347, "no_speech_prob": 8.315157629112946e-07}, {"id": 874, "seek": 311444, "start": 3129.6, "end": 3135.04, "text": " There's a lot of things that cars around you are going to do that you may not predict.", "tokens": [50364, 286, 500, 380, 643, 281, 12539, 2771, 2448, 295, 1507, 538, 7308, 293, 6713, 13, 50636, 50636, 5471, 307, 819, 9364, 13, 50864, 50864, 440, 1154, 11, 295, 1164, 11, 307, 300, 341, 2316, 295, 437, 5163, 926, 291, 366, 516, 281, 360, 307, 51072, 51072, 406, 15957, 3142, 13, 51122, 51122, 821, 311, 257, 688, 295, 721, 300, 5163, 926, 291, 366, 516, 281, 360, 300, 291, 815, 406, 6069, 13, 51394, 51394, 821, 307, 257, 48994, 7006, 294, 264, 2316, 300, 291, 434, 516, 281, 643, 281, 6889, 11, 597, 307, 516, 51589, 51589, 281, 13075, 1125, 257, 992, 295, 439, 6631, 721, 300, 5163, 926, 291, 393, 360, 293, 2107, 12, 372, 6127, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12012832164764405, "compression_ratio": 1.889795918367347, "no_speech_prob": 8.315157629112946e-07}, {"id": 875, "seek": 311444, "start": 3135.04, "end": 3138.94, "text": " There is a latent variable in the model that you're going to need to sample, which is going", "tokens": [50364, 286, 500, 380, 643, 281, 12539, 2771, 2448, 295, 1507, 538, 7308, 293, 6713, 13, 50636, 50636, 5471, 307, 819, 9364, 13, 50864, 50864, 440, 1154, 11, 295, 1164, 11, 307, 300, 341, 2316, 295, 437, 5163, 926, 291, 366, 516, 281, 360, 307, 51072, 51072, 406, 15957, 3142, 13, 51122, 51122, 821, 311, 257, 688, 295, 721, 300, 5163, 926, 291, 366, 516, 281, 360, 300, 291, 815, 406, 6069, 13, 51394, 51394, 821, 307, 257, 48994, 7006, 294, 264, 2316, 300, 291, 434, 516, 281, 643, 281, 6889, 11, 597, 307, 516, 51589, 51589, 281, 13075, 1125, 257, 992, 295, 439, 6631, 721, 300, 5163, 926, 291, 393, 360, 293, 2107, 12, 372, 6127, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12012832164764405, "compression_ratio": 1.889795918367347, "no_speech_prob": 8.315157629112946e-07}, {"id": 876, "seek": 311444, "start": 3138.94, "end": 3143.56, "text": " to parameterize a set of all stupid things that cars around you can do and non-stupid", "tokens": [50364, 286, 500, 380, 643, 281, 12539, 2771, 2448, 295, 1507, 538, 7308, 293, 6713, 13, 50636, 50636, 5471, 307, 819, 9364, 13, 50864, 50864, 440, 1154, 11, 295, 1164, 11, 307, 300, 341, 2316, 295, 437, 5163, 926, 291, 366, 516, 281, 360, 307, 51072, 51072, 406, 15957, 3142, 13, 51122, 51122, 821, 311, 257, 688, 295, 721, 300, 5163, 926, 291, 366, 516, 281, 360, 300, 291, 815, 406, 6069, 13, 51394, 51394, 821, 307, 257, 48994, 7006, 294, 264, 2316, 300, 291, 434, 516, 281, 643, 281, 6889, 11, 597, 307, 516, 51589, 51589, 281, 13075, 1125, 257, 992, 295, 439, 6631, 721, 300, 5163, 926, 291, 393, 360, 293, 2107, 12, 372, 6127, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12012832164764405, "compression_ratio": 1.889795918367347, "no_speech_prob": 8.315157629112946e-07}, {"id": 877, "seek": 314356, "start": 3143.56, "end": 3146.36, "text": " things as well.", "tokens": [50364, 721, 382, 731, 13, 50504, 50504, 509, 722, 490, 257, 1785, 11, 597, 291, 11441, 13, 50590, 50590, 639, 307, 428, 2190, 1785, 13, 50640, 50640, 639, 307, 689, 264, 5163, 926, 291, 366, 13, 50792, 50792, 509, 6889, 264, 1629, 7006, 13, 50881, 50881, 509, 747, 364, 3069, 11, 257, 6374, 3069, 11, 293, 550, 264, 1185, 2709, 291, 257, 17630, 337, 51090, 51090, 689, 264, 5163, 926, 291, 366, 516, 281, 312, 4972, 281, 291, 13, 51276, 51276, 759, 291, 4536, 281, 1261, 264, 5589, 11, 264, 1002, 926, 291, 307, 516, 281, 13121, 13, 51558, 51558, 639, 307, 32884, 437, 264, 1002, 926, 291, 307, 516, 281, 574, 411, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1543339623345269, "compression_ratio": 2.009049773755656, "no_speech_prob": 4.092761628271546e-06}, {"id": 878, "seek": 314356, "start": 3146.36, "end": 3148.08, "text": " You start from a state, which you observe.", "tokens": [50364, 721, 382, 731, 13, 50504, 50504, 509, 722, 490, 257, 1785, 11, 597, 291, 11441, 13, 50590, 50590, 639, 307, 428, 2190, 1785, 13, 50640, 50640, 639, 307, 689, 264, 5163, 926, 291, 366, 13, 50792, 50792, 509, 6889, 264, 1629, 7006, 13, 50881, 50881, 509, 747, 364, 3069, 11, 257, 6374, 3069, 11, 293, 550, 264, 1185, 2709, 291, 257, 17630, 337, 51090, 51090, 689, 264, 5163, 926, 291, 366, 516, 281, 312, 4972, 281, 291, 13, 51276, 51276, 759, 291, 4536, 281, 1261, 264, 5589, 11, 264, 1002, 926, 291, 307, 516, 281, 13121, 13, 51558, 51558, 639, 307, 32884, 437, 264, 1002, 926, 291, 307, 516, 281, 574, 411, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1543339623345269, "compression_ratio": 2.009049773755656, "no_speech_prob": 4.092761628271546e-06}, {"id": 879, "seek": 314356, "start": 3148.08, "end": 3149.08, "text": " This is your current state.", "tokens": [50364, 721, 382, 731, 13, 50504, 50504, 509, 722, 490, 257, 1785, 11, 597, 291, 11441, 13, 50590, 50590, 639, 307, 428, 2190, 1785, 13, 50640, 50640, 639, 307, 689, 264, 5163, 926, 291, 366, 13, 50792, 50792, 509, 6889, 264, 1629, 7006, 13, 50881, 50881, 509, 747, 364, 3069, 11, 257, 6374, 3069, 11, 293, 550, 264, 1185, 2709, 291, 257, 17630, 337, 51090, 51090, 689, 264, 5163, 926, 291, 366, 516, 281, 312, 4972, 281, 291, 13, 51276, 51276, 759, 291, 4536, 281, 1261, 264, 5589, 11, 264, 1002, 926, 291, 307, 516, 281, 13121, 13, 51558, 51558, 639, 307, 32884, 437, 264, 1002, 926, 291, 307, 516, 281, 574, 411, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1543339623345269, "compression_ratio": 2.009049773755656, "no_speech_prob": 4.092761628271546e-06}, {"id": 880, "seek": 314356, "start": 3149.08, "end": 3152.12, "text": " This is where the cars around you are.", "tokens": [50364, 721, 382, 731, 13, 50504, 50504, 509, 722, 490, 257, 1785, 11, 597, 291, 11441, 13, 50590, 50590, 639, 307, 428, 2190, 1785, 13, 50640, 50640, 639, 307, 689, 264, 5163, 926, 291, 366, 13, 50792, 50792, 509, 6889, 264, 1629, 7006, 13, 50881, 50881, 509, 747, 364, 3069, 11, 257, 6374, 3069, 11, 293, 550, 264, 1185, 2709, 291, 257, 17630, 337, 51090, 51090, 689, 264, 5163, 926, 291, 366, 516, 281, 312, 4972, 281, 291, 13, 51276, 51276, 759, 291, 4536, 281, 1261, 264, 5589, 11, 264, 1002, 926, 291, 307, 516, 281, 13121, 13, 51558, 51558, 639, 307, 32884, 437, 264, 1002, 926, 291, 307, 516, 281, 574, 411, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1543339623345269, "compression_ratio": 2.009049773755656, "no_speech_prob": 4.092761628271546e-06}, {"id": 881, "seek": 314356, "start": 3152.12, "end": 3153.9, "text": " You sample the certain variable.", "tokens": [50364, 721, 382, 731, 13, 50504, 50504, 509, 722, 490, 257, 1785, 11, 597, 291, 11441, 13, 50590, 50590, 639, 307, 428, 2190, 1785, 13, 50640, 50640, 639, 307, 689, 264, 5163, 926, 291, 366, 13, 50792, 50792, 509, 6889, 264, 1629, 7006, 13, 50881, 50881, 509, 747, 364, 3069, 11, 257, 6374, 3069, 11, 293, 550, 264, 1185, 2709, 291, 257, 17630, 337, 51090, 51090, 689, 264, 5163, 926, 291, 366, 516, 281, 312, 4972, 281, 291, 13, 51276, 51276, 759, 291, 4536, 281, 1261, 264, 5589, 11, 264, 1002, 926, 291, 307, 516, 281, 13121, 13, 51558, 51558, 639, 307, 32884, 437, 264, 1002, 926, 291, 307, 516, 281, 574, 411, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1543339623345269, "compression_ratio": 2.009049773755656, "no_speech_prob": 4.092761628271546e-06}, {"id": 882, "seek": 314356, "start": 3153.9, "end": 3158.08, "text": " You take an action, a virtual action, and then the system gives you a prediction for", "tokens": [50364, 721, 382, 731, 13, 50504, 50504, 509, 722, 490, 257, 1785, 11, 597, 291, 11441, 13, 50590, 50590, 639, 307, 428, 2190, 1785, 13, 50640, 50640, 639, 307, 689, 264, 5163, 926, 291, 366, 13, 50792, 50792, 509, 6889, 264, 1629, 7006, 13, 50881, 50881, 509, 747, 364, 3069, 11, 257, 6374, 3069, 11, 293, 550, 264, 1185, 2709, 291, 257, 17630, 337, 51090, 51090, 689, 264, 5163, 926, 291, 366, 516, 281, 312, 4972, 281, 291, 13, 51276, 51276, 759, 291, 4536, 281, 1261, 264, 5589, 11, 264, 1002, 926, 291, 307, 516, 281, 13121, 13, 51558, 51558, 639, 307, 32884, 437, 264, 1002, 926, 291, 307, 516, 281, 574, 411, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1543339623345269, "compression_ratio": 2.009049773755656, "no_speech_prob": 4.092761628271546e-06}, {"id": 883, "seek": 314356, "start": 3158.08, "end": 3161.7999999999997, "text": " where the cars around you are going to be relative to you.", "tokens": [50364, 721, 382, 731, 13, 50504, 50504, 509, 722, 490, 257, 1785, 11, 597, 291, 11441, 13, 50590, 50590, 639, 307, 428, 2190, 1785, 13, 50640, 50640, 639, 307, 689, 264, 5163, 926, 291, 366, 13, 50792, 50792, 509, 6889, 264, 1629, 7006, 13, 50881, 50881, 509, 747, 364, 3069, 11, 257, 6374, 3069, 11, 293, 550, 264, 1185, 2709, 291, 257, 17630, 337, 51090, 51090, 689, 264, 5163, 926, 291, 366, 516, 281, 312, 4972, 281, 291, 13, 51276, 51276, 759, 291, 4536, 281, 1261, 264, 5589, 11, 264, 1002, 926, 291, 307, 516, 281, 13121, 13, 51558, 51558, 639, 307, 32884, 437, 264, 1002, 926, 291, 307, 516, 281, 574, 411, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1543339623345269, "compression_ratio": 2.009049773755656, "no_speech_prob": 4.092761628271546e-06}, {"id": 884, "seek": 314356, "start": 3161.7999999999997, "end": 3167.44, "text": " If you decide to turn the wheel, the world around you is going to rotate.", "tokens": [50364, 721, 382, 731, 13, 50504, 50504, 509, 722, 490, 257, 1785, 11, 597, 291, 11441, 13, 50590, 50590, 639, 307, 428, 2190, 1785, 13, 50640, 50640, 639, 307, 689, 264, 5163, 926, 291, 366, 13, 50792, 50792, 509, 6889, 264, 1629, 7006, 13, 50881, 50881, 509, 747, 364, 3069, 11, 257, 6374, 3069, 11, 293, 550, 264, 1185, 2709, 291, 257, 17630, 337, 51090, 51090, 689, 264, 5163, 926, 291, 366, 516, 281, 312, 4972, 281, 291, 13, 51276, 51276, 759, 291, 4536, 281, 1261, 264, 5589, 11, 264, 1002, 926, 291, 307, 516, 281, 13121, 13, 51558, 51558, 639, 307, 32884, 437, 264, 1002, 926, 291, 307, 516, 281, 574, 411, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1543339623345269, "compression_ratio": 2.009049773755656, "no_speech_prob": 4.092761628271546e-06}, {"id": 885, "seek": 314356, "start": 3167.44, "end": 3172.0, "text": " This is predicting what the world around you is going to look like.", "tokens": [50364, 721, 382, 731, 13, 50504, 50504, 509, 722, 490, 257, 1785, 11, 597, 291, 11441, 13, 50590, 50590, 639, 307, 428, 2190, 1785, 13, 50640, 50640, 639, 307, 689, 264, 5163, 926, 291, 366, 13, 50792, 50792, 509, 6889, 264, 1629, 7006, 13, 50881, 50881, 509, 747, 364, 3069, 11, 257, 6374, 3069, 11, 293, 550, 264, 1185, 2709, 291, 257, 17630, 337, 51090, 51090, 689, 264, 5163, 926, 291, 366, 516, 281, 312, 4972, 281, 291, 13, 51276, 51276, 759, 291, 4536, 281, 1261, 264, 5589, 11, 264, 1002, 926, 291, 307, 516, 281, 13121, 13, 51558, 51558, 639, 307, 32884, 437, 264, 1002, 926, 291, 307, 516, 281, 574, 411, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1543339623345269, "compression_ratio": 2.009049773755656, "no_speech_prob": 4.092761628271546e-06}, {"id": 886, "seek": 317200, "start": 3172.0, "end": 3178.28, "text": " What you can do is you can backpropagate gradient from the cost to a network here that is supposed", "tokens": [50364, 708, 291, 393, 360, 307, 291, 393, 646, 79, 1513, 559, 473, 16235, 490, 264, 2063, 281, 257, 3209, 510, 300, 307, 3442, 50678, 50678, 281, 6069, 264, 3006, 3069, 490, 264, 1785, 13, 50802, 50802, 6454, 286, 1261, 264, 5589, 30, 50902, 50902, 6454, 286, 13997, 30, 50952, 50952, 6454, 286, 21341, 30, 51077, 51077, 3146, 21179, 3866, 10938, 293, 2614, 341, 322, 819, 5883, 4487, 11, 291, 1062, 51314, 51314, 362, 257, 1032, 300, 8895, 2564, 281, 3332, 1553, 767, 4840, 538, 445, 1953, 466, 309, 11, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.17210917319020919, "compression_ratio": 1.6329113924050633, "no_speech_prob": 1.4367149105964927e-06}, {"id": 887, "seek": 317200, "start": 3178.28, "end": 3180.76, "text": " to predict the correct action from the state.", "tokens": [50364, 708, 291, 393, 360, 307, 291, 393, 646, 79, 1513, 559, 473, 16235, 490, 264, 2063, 281, 257, 3209, 510, 300, 307, 3442, 50678, 50678, 281, 6069, 264, 3006, 3069, 490, 264, 1785, 13, 50802, 50802, 6454, 286, 1261, 264, 5589, 30, 50902, 50902, 6454, 286, 13997, 30, 50952, 50952, 6454, 286, 21341, 30, 51077, 51077, 3146, 21179, 3866, 10938, 293, 2614, 341, 322, 819, 5883, 4487, 11, 291, 1062, 51314, 51314, 362, 257, 1032, 300, 8895, 2564, 281, 3332, 1553, 767, 4840, 538, 445, 1953, 466, 309, 11, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.17210917319020919, "compression_ratio": 1.6329113924050633, "no_speech_prob": 1.4367149105964927e-06}, {"id": 888, "seek": 317200, "start": 3180.76, "end": 3182.76, "text": " Should I turn the wheel?", "tokens": [50364, 708, 291, 393, 360, 307, 291, 393, 646, 79, 1513, 559, 473, 16235, 490, 264, 2063, 281, 257, 3209, 510, 300, 307, 3442, 50678, 50678, 281, 6069, 264, 3006, 3069, 490, 264, 1785, 13, 50802, 50802, 6454, 286, 1261, 264, 5589, 30, 50902, 50902, 6454, 286, 13997, 30, 50952, 50952, 6454, 286, 21341, 30, 51077, 51077, 3146, 21179, 3866, 10938, 293, 2614, 341, 322, 819, 5883, 4487, 11, 291, 1062, 51314, 51314, 362, 257, 1032, 300, 8895, 2564, 281, 3332, 1553, 767, 4840, 538, 445, 1953, 466, 309, 11, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.17210917319020919, "compression_ratio": 1.6329113924050633, "no_speech_prob": 1.4367149105964927e-06}, {"id": 889, "seek": 317200, "start": 3182.76, "end": 3183.76, "text": " Should I brake?", "tokens": [50364, 708, 291, 393, 360, 307, 291, 393, 646, 79, 1513, 559, 473, 16235, 490, 264, 2063, 281, 257, 3209, 510, 300, 307, 3442, 50678, 50678, 281, 6069, 264, 3006, 3069, 490, 264, 1785, 13, 50802, 50802, 6454, 286, 1261, 264, 5589, 30, 50902, 50902, 6454, 286, 13997, 30, 50952, 50952, 6454, 286, 21341, 30, 51077, 51077, 3146, 21179, 3866, 10938, 293, 2614, 341, 322, 819, 5883, 4487, 11, 291, 1062, 51314, 51314, 362, 257, 1032, 300, 8895, 2564, 281, 3332, 1553, 767, 4840, 538, 445, 1953, 466, 309, 11, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.17210917319020919, "compression_ratio": 1.6329113924050633, "no_speech_prob": 1.4367149105964927e-06}, {"id": 890, "seek": 317200, "start": 3183.76, "end": 3186.26, "text": " Should I accelerate?", "tokens": [50364, 708, 291, 393, 360, 307, 291, 393, 646, 79, 1513, 559, 473, 16235, 490, 264, 2063, 281, 257, 3209, 510, 300, 307, 3442, 50678, 50678, 281, 6069, 264, 3006, 3069, 490, 264, 1785, 13, 50802, 50802, 6454, 286, 1261, 264, 5589, 30, 50902, 50902, 6454, 286, 13997, 30, 50952, 50952, 6454, 286, 21341, 30, 51077, 51077, 3146, 21179, 3866, 10938, 293, 2614, 341, 322, 819, 5883, 4487, 11, 291, 1062, 51314, 51314, 362, 257, 1032, 300, 8895, 2564, 281, 3332, 1553, 767, 4840, 538, 445, 1953, 466, 309, 11, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.17210917319020919, "compression_ratio": 1.6329113924050633, "no_speech_prob": 1.4367149105964927e-06}, {"id": 891, "seek": 317200, "start": 3186.26, "end": 3191.0, "text": " By sampling multiple samples and running this on different initial conditions, you might", "tokens": [50364, 708, 291, 393, 360, 307, 291, 393, 646, 79, 1513, 559, 473, 16235, 490, 264, 2063, 281, 257, 3209, 510, 300, 307, 3442, 50678, 50678, 281, 6069, 264, 3006, 3069, 490, 264, 1785, 13, 50802, 50802, 6454, 286, 1261, 264, 5589, 30, 50902, 50902, 6454, 286, 13997, 30, 50952, 50952, 6454, 286, 21341, 30, 51077, 51077, 3146, 21179, 3866, 10938, 293, 2614, 341, 322, 819, 5883, 4487, 11, 291, 1062, 51314, 51314, 362, 257, 1032, 300, 8895, 2564, 281, 3332, 1553, 767, 4840, 538, 445, 1953, 466, 309, 11, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.17210917319020919, "compression_ratio": 1.6329113924050633, "no_speech_prob": 1.4367149105964927e-06}, {"id": 892, "seek": 317200, "start": 3191.0, "end": 3196.24, "text": " have a car that trained itself to drive without actually driving by just thinking about it,", "tokens": [50364, 708, 291, 393, 360, 307, 291, 393, 646, 79, 1513, 559, 473, 16235, 490, 264, 2063, 281, 257, 3209, 510, 300, 307, 3442, 50678, 50678, 281, 6069, 264, 3006, 3069, 490, 264, 1785, 13, 50802, 50802, 6454, 286, 1261, 264, 5589, 30, 50902, 50902, 6454, 286, 13997, 30, 50952, 50952, 6454, 286, 21341, 30, 51077, 51077, 3146, 21179, 3866, 10938, 293, 2614, 341, 322, 819, 5883, 4487, 11, 291, 1062, 51314, 51314, 362, 257, 1032, 300, 8895, 2564, 281, 3332, 1553, 767, 4840, 538, 445, 1953, 466, 309, 11, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.17210917319020919, "compression_ratio": 1.6329113924050633, "no_speech_prob": 1.4367149105964927e-06}, {"id": 893, "seek": 319624, "start": 3196.24, "end": 3202.72, "text": " having trained its forward model by observing how the car is driving.", "tokens": [50364, 1419, 8895, 1080, 2128, 2316, 538, 22107, 577, 264, 1032, 307, 4840, 13, 50688, 50688, 440, 636, 321, 360, 341, 307, 300, 456, 307, 257, 2799, 300, 1542, 412, 257, 17205, 490, 264, 1192, 11, 293, 50976, 50976, 550, 291, 2837, 633, 1032, 293, 291, 8947, 257, 707, 21930, 926, 633, 1032, 11, 18988, 51182, 51182, 322, 633, 1032, 11, 293, 309, 4523, 365, 264, 1032, 13, 51314, 51314, 663, 311, 264, 1002, 926, 633, 1032, 13, 51498, 51498, 1396, 291, 393, 2136, 22978, 295, 729, 707, 721, 538, 11603, 633, 1032, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.1533605241283928, "compression_ratio": 1.7792792792792793, "no_speech_prob": 4.092775270692073e-06}, {"id": 894, "seek": 319624, "start": 3202.72, "end": 3208.4799999999996, "text": " The way we do this is that there is a camera that looks at a highway from the top, and", "tokens": [50364, 1419, 8895, 1080, 2128, 2316, 538, 22107, 577, 264, 1032, 307, 4840, 13, 50688, 50688, 440, 636, 321, 360, 341, 307, 300, 456, 307, 257, 2799, 300, 1542, 412, 257, 17205, 490, 264, 1192, 11, 293, 50976, 50976, 550, 291, 2837, 633, 1032, 293, 291, 8947, 257, 707, 21930, 926, 633, 1032, 11, 18988, 51182, 51182, 322, 633, 1032, 11, 293, 309, 4523, 365, 264, 1032, 13, 51314, 51314, 663, 311, 264, 1002, 926, 633, 1032, 13, 51498, 51498, 1396, 291, 393, 2136, 22978, 295, 729, 707, 721, 538, 11603, 633, 1032, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.1533605241283928, "compression_ratio": 1.7792792792792793, "no_speech_prob": 4.092775270692073e-06}, {"id": 895, "seek": 319624, "start": 3208.4799999999996, "end": 3212.6, "text": " then you track every car and you extract a little rectangle around every car, centered", "tokens": [50364, 1419, 8895, 1080, 2128, 2316, 538, 22107, 577, 264, 1032, 307, 4840, 13, 50688, 50688, 440, 636, 321, 360, 341, 307, 300, 456, 307, 257, 2799, 300, 1542, 412, 257, 17205, 490, 264, 1192, 11, 293, 50976, 50976, 550, 291, 2837, 633, 1032, 293, 291, 8947, 257, 707, 21930, 926, 633, 1032, 11, 18988, 51182, 51182, 322, 633, 1032, 11, 293, 309, 4523, 365, 264, 1032, 13, 51314, 51314, 663, 311, 264, 1002, 926, 633, 1032, 13, 51498, 51498, 1396, 291, 393, 2136, 22978, 295, 729, 707, 721, 538, 11603, 633, 1032, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.1533605241283928, "compression_ratio": 1.7792792792792793, "no_speech_prob": 4.092775270692073e-06}, {"id": 896, "seek": 319624, "start": 3212.6, "end": 3215.24, "text": " on every car, and it turns with the car.", "tokens": [50364, 1419, 8895, 1080, 2128, 2316, 538, 22107, 577, 264, 1032, 307, 4840, 13, 50688, 50688, 440, 636, 321, 360, 341, 307, 300, 456, 307, 257, 2799, 300, 1542, 412, 257, 17205, 490, 264, 1192, 11, 293, 50976, 50976, 550, 291, 2837, 633, 1032, 293, 291, 8947, 257, 707, 21930, 926, 633, 1032, 11, 18988, 51182, 51182, 322, 633, 1032, 11, 293, 309, 4523, 365, 264, 1032, 13, 51314, 51314, 663, 311, 264, 1002, 926, 633, 1032, 13, 51498, 51498, 1396, 291, 393, 2136, 22978, 295, 729, 707, 721, 538, 11603, 633, 1032, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.1533605241283928, "compression_ratio": 1.7792792792792793, "no_speech_prob": 4.092775270692073e-06}, {"id": 897, "seek": 319624, "start": 3215.24, "end": 3218.9199999999996, "text": " That's the world around every car.", "tokens": [50364, 1419, 8895, 1080, 2128, 2316, 538, 22107, 577, 264, 1032, 307, 4840, 13, 50688, 50688, 440, 636, 321, 360, 341, 307, 300, 456, 307, 257, 2799, 300, 1542, 412, 257, 17205, 490, 264, 1192, 11, 293, 50976, 50976, 550, 291, 2837, 633, 1032, 293, 291, 8947, 257, 707, 21930, 926, 633, 1032, 11, 18988, 51182, 51182, 322, 633, 1032, 11, 293, 309, 4523, 365, 264, 1032, 13, 51314, 51314, 663, 311, 264, 1002, 926, 633, 1032, 13, 51498, 51498, 1396, 291, 393, 2136, 22978, 295, 729, 707, 721, 538, 11603, 633, 1032, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.1533605241283928, "compression_ratio": 1.7792792792792793, "no_speech_prob": 4.092775270692073e-06}, {"id": 898, "seek": 319624, "start": 3218.9199999999996, "end": 3222.3999999999996, "text": " Then you can record sequences of those little things by tracking every car.", "tokens": [50364, 1419, 8895, 1080, 2128, 2316, 538, 22107, 577, 264, 1032, 307, 4840, 13, 50688, 50688, 440, 636, 321, 360, 341, 307, 300, 456, 307, 257, 2799, 300, 1542, 412, 257, 17205, 490, 264, 1192, 11, 293, 50976, 50976, 550, 291, 2837, 633, 1032, 293, 291, 8947, 257, 707, 21930, 926, 633, 1032, 11, 18988, 51182, 51182, 322, 633, 1032, 11, 293, 309, 4523, 365, 264, 1032, 13, 51314, 51314, 663, 311, 264, 1002, 926, 633, 1032, 13, 51498, 51498, 1396, 291, 393, 2136, 22978, 295, 729, 707, 721, 538, 11603, 633, 1032, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.1533605241283928, "compression_ratio": 1.7792792792792793, "no_speech_prob": 4.092775270692073e-06}, {"id": 899, "seek": 322240, "start": 3222.4, "end": 3226.56, "text": " That constitutes a training set, a set of videos centered on every car.", "tokens": [50364, 663, 44204, 257, 3097, 992, 11, 257, 992, 295, 2145, 18988, 322, 633, 1032, 13, 50572, 50572, 509, 976, 257, 1326, 12083, 295, 341, 551, 11, 13095, 12083, 11, 293, 291, 3847, 257, 1185, 300, 575, 3720, 50896, 50896, 9102, 293, 439, 300, 1507, 281, 6069, 264, 958, 3920, 13, 51052, 51052, 2102, 307, 383, 510, 30, 51284, 51284, 1176, 486, 2906, 439, 264, 1507, 291, 393, 6069, 300, 264, 661, 5163, 366, 516, 281, 360, 11, 4476, 13, 51508, 51508, 1012, 955, 307, 309, 30, 51652, 51652, 876, 11, 286, 536, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.3084351057858811, "compression_ratio": 1.5608695652173914, "no_speech_prob": 2.7264013624517247e-06}, {"id": 900, "seek": 322240, "start": 3226.56, "end": 3233.04, "text": " You give a few frames of this thing, observed frames, and you train a system that has written", "tokens": [50364, 663, 44204, 257, 3097, 992, 11, 257, 992, 295, 2145, 18988, 322, 633, 1032, 13, 50572, 50572, 509, 976, 257, 1326, 12083, 295, 341, 551, 11, 13095, 12083, 11, 293, 291, 3847, 257, 1185, 300, 575, 3720, 50896, 50896, 9102, 293, 439, 300, 1507, 281, 6069, 264, 958, 3920, 13, 51052, 51052, 2102, 307, 383, 510, 30, 51284, 51284, 1176, 486, 2906, 439, 264, 1507, 291, 393, 6069, 300, 264, 661, 5163, 366, 516, 281, 360, 11, 4476, 13, 51508, 51508, 1012, 955, 307, 309, 30, 51652, 51652, 876, 11, 286, 536, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.3084351057858811, "compression_ratio": 1.5608695652173914, "no_speech_prob": 2.7264013624517247e-06}, {"id": 901, "seek": 322240, "start": 3233.04, "end": 3236.1600000000003, "text": " variables and all that stuff to predict the next frame.", "tokens": [50364, 663, 44204, 257, 3097, 992, 11, 257, 992, 295, 2145, 18988, 322, 633, 1032, 13, 50572, 50572, 509, 976, 257, 1326, 12083, 295, 341, 551, 11, 13095, 12083, 11, 293, 291, 3847, 257, 1185, 300, 575, 3720, 50896, 50896, 9102, 293, 439, 300, 1507, 281, 6069, 264, 958, 3920, 13, 51052, 51052, 2102, 307, 383, 510, 30, 51284, 51284, 1176, 486, 2906, 439, 264, 1507, 291, 393, 6069, 300, 264, 661, 5163, 366, 516, 281, 360, 11, 4476, 13, 51508, 51508, 1012, 955, 307, 309, 30, 51652, 51652, 876, 11, 286, 536, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.3084351057858811, "compression_ratio": 1.5608695652173914, "no_speech_prob": 2.7264013624517247e-06}, {"id": 902, "seek": 322240, "start": 3236.1600000000003, "end": 3240.8, "text": " Who is C here?", "tokens": [50364, 663, 44204, 257, 3097, 992, 11, 257, 992, 295, 2145, 18988, 322, 633, 1032, 13, 50572, 50572, 509, 976, 257, 1326, 12083, 295, 341, 551, 11, 13095, 12083, 11, 293, 291, 3847, 257, 1185, 300, 575, 3720, 50896, 50896, 9102, 293, 439, 300, 1507, 281, 6069, 264, 958, 3920, 13, 51052, 51052, 2102, 307, 383, 510, 30, 51284, 51284, 1176, 486, 2906, 439, 264, 1507, 291, 393, 6069, 300, 264, 661, 5163, 366, 516, 281, 360, 11, 4476, 13, 51508, 51508, 1012, 955, 307, 309, 30, 51652, 51652, 876, 11, 286, 536, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.3084351057858811, "compression_ratio": 1.5608695652173914, "no_speech_prob": 2.7264013624517247e-06}, {"id": 903, "seek": 322240, "start": 3240.8, "end": 3245.28, "text": " Z will represent all the stuff you can predict that the other cars are going to do, essentially.", "tokens": [50364, 663, 44204, 257, 3097, 992, 11, 257, 992, 295, 2145, 18988, 322, 633, 1032, 13, 50572, 50572, 509, 976, 257, 1326, 12083, 295, 341, 551, 11, 13095, 12083, 11, 293, 291, 3847, 257, 1185, 300, 575, 3720, 50896, 50896, 9102, 293, 439, 300, 1507, 281, 6069, 264, 958, 3920, 13, 51052, 51052, 2102, 307, 383, 510, 30, 51284, 51284, 1176, 486, 2906, 439, 264, 1507, 291, 393, 6069, 300, 264, 661, 5163, 366, 516, 281, 360, 11, 4476, 13, 51508, 51508, 1012, 955, 307, 309, 30, 51652, 51652, 876, 11, 286, 536, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.3084351057858811, "compression_ratio": 1.5608695652173914, "no_speech_prob": 2.7264013624517247e-06}, {"id": 904, "seek": 322240, "start": 3245.28, "end": 3248.1600000000003, "text": " How big is it?", "tokens": [50364, 663, 44204, 257, 3097, 992, 11, 257, 992, 295, 2145, 18988, 322, 633, 1032, 13, 50572, 50572, 509, 976, 257, 1326, 12083, 295, 341, 551, 11, 13095, 12083, 11, 293, 291, 3847, 257, 1185, 300, 575, 3720, 50896, 50896, 9102, 293, 439, 300, 1507, 281, 6069, 264, 958, 3920, 13, 51052, 51052, 2102, 307, 383, 510, 30, 51284, 51284, 1176, 486, 2906, 439, 264, 1507, 291, 393, 6069, 300, 264, 661, 5163, 366, 516, 281, 360, 11, 4476, 13, 51508, 51508, 1012, 955, 307, 309, 30, 51652, 51652, 876, 11, 286, 536, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.3084351057858811, "compression_ratio": 1.5608695652173914, "no_speech_prob": 2.7264013624517247e-06}, {"id": 905, "seek": 322240, "start": 3248.1600000000003, "end": 3250.6800000000003, "text": " Oh, I see.", "tokens": [50364, 663, 44204, 257, 3097, 992, 11, 257, 992, 295, 2145, 18988, 322, 633, 1032, 13, 50572, 50572, 509, 976, 257, 1326, 12083, 295, 341, 551, 11, 13095, 12083, 11, 293, 291, 3847, 257, 1185, 300, 575, 3720, 50896, 50896, 9102, 293, 439, 300, 1507, 281, 6069, 264, 958, 3920, 13, 51052, 51052, 2102, 307, 383, 510, 30, 51284, 51284, 1176, 486, 2906, 439, 264, 1507, 291, 393, 6069, 300, 264, 661, 5163, 366, 516, 281, 360, 11, 4476, 13, 51508, 51508, 1012, 955, 307, 309, 30, 51652, 51652, 876, 11, 286, 536, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.3084351057858811, "compression_ratio": 1.5608695652173914, "no_speech_prob": 2.7264013624517247e-06}, {"id": 906, "seek": 325068, "start": 3250.68, "end": 3252.96, "text": " That's a good question.", "tokens": [50364, 663, 311, 257, 665, 1168, 13, 50478, 50478, 286, 519, 309, 311, 38882, 12819, 11, 257, 8062, 295, 38882, 12819, 13, 51118, 51118, 1171, 38253, 11, 291, 643, 281, 6889, 1176, 13, 1171, 3097, 11, 1176, 307, 2212, 281, 291, 538, 364, 2058, 19866, 11, 1936, 11, 51426, 51426, 300, 291, 3847, 13, 51512, 51512, 509, 643, 472, 295, 729, 1589, 6042, 11004, 510, 11, 597, 294, 527, 1389, 307, 1096, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.23420664469401042, "compression_ratio": 1.4759358288770053, "no_speech_prob": 2.5610881948523456e-06}, {"id": 907, "seek": 325068, "start": 3252.96, "end": 3265.7599999999998, "text": " I think it's 256 dimensions, a vector of 256 dimensions.", "tokens": [50364, 663, 311, 257, 665, 1168, 13, 50478, 50478, 286, 519, 309, 311, 38882, 12819, 11, 257, 8062, 295, 38882, 12819, 13, 51118, 51118, 1171, 38253, 11, 291, 643, 281, 6889, 1176, 13, 1171, 3097, 11, 1176, 307, 2212, 281, 291, 538, 364, 2058, 19866, 11, 1936, 11, 51426, 51426, 300, 291, 3847, 13, 51512, 51512, 509, 643, 472, 295, 729, 1589, 6042, 11004, 510, 11, 597, 294, 527, 1389, 307, 1096, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.23420664469401042, "compression_ratio": 1.4759358288770053, "no_speech_prob": 2.5610881948523456e-06}, {"id": 908, "seek": 325068, "start": 3265.7599999999998, "end": 3271.9199999999996, "text": " For inference, you need to sample Z. For training, Z is given to you by an encoder, basically,", "tokens": [50364, 663, 311, 257, 665, 1168, 13, 50478, 50478, 286, 519, 309, 311, 38882, 12819, 11, 257, 8062, 295, 38882, 12819, 13, 51118, 51118, 1171, 38253, 11, 291, 643, 281, 6889, 1176, 13, 1171, 3097, 11, 1176, 307, 2212, 281, 291, 538, 364, 2058, 19866, 11, 1936, 11, 51426, 51426, 300, 291, 3847, 13, 51512, 51512, 509, 643, 472, 295, 729, 1589, 6042, 11004, 510, 11, 597, 294, 527, 1389, 307, 1096, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.23420664469401042, "compression_ratio": 1.4759358288770053, "no_speech_prob": 2.5610881948523456e-06}, {"id": 909, "seek": 325068, "start": 3271.9199999999996, "end": 3273.64, "text": " that you train.", "tokens": [50364, 663, 311, 257, 665, 1168, 13, 50478, 50478, 286, 519, 309, 311, 38882, 12819, 11, 257, 8062, 295, 38882, 12819, 13, 51118, 51118, 1171, 38253, 11, 291, 643, 281, 6889, 1176, 13, 1171, 3097, 11, 1176, 307, 2212, 281, 291, 538, 364, 2058, 19866, 11, 1936, 11, 51426, 51426, 300, 291, 3847, 13, 51512, 51512, 509, 643, 472, 295, 729, 1589, 6042, 11004, 510, 11, 597, 294, 527, 1389, 307, 1096, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.23420664469401042, "compression_ratio": 1.4759358288770053, "no_speech_prob": 2.5610881948523456e-06}, {"id": 910, "seek": 325068, "start": 3273.64, "end": 3278.48, "text": " You need one of those information capacity reduction here, which in our case is done", "tokens": [50364, 663, 311, 257, 665, 1168, 13, 50478, 50478, 286, 519, 309, 311, 38882, 12819, 11, 257, 8062, 295, 38882, 12819, 13, 51118, 51118, 1171, 38253, 11, 291, 643, 281, 6889, 1176, 13, 1171, 3097, 11, 1176, 307, 2212, 281, 291, 538, 364, 2058, 19866, 11, 1936, 11, 51426, 51426, 300, 291, 3847, 13, 51512, 51512, 509, 643, 472, 295, 729, 1589, 6042, 11004, 510, 11, 597, 294, 527, 1389, 307, 1096, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.23420664469401042, "compression_ratio": 1.4759358288770053, "no_speech_prob": 2.5610881948523456e-06}, {"id": 911, "seek": 327848, "start": 3278.48, "end": 3283.0, "text": " by a combination of adding noise and what we call dropout.", "tokens": [50364, 538, 257, 6562, 295, 5127, 5658, 293, 437, 321, 818, 3270, 346, 13, 50590, 50590, 467, 1936, 6352, 1176, 281, 4018, 13, 50826, 50826, 467, 5874, 1176, 281, 312, 4018, 1922, 264, 565, 13, 50932, 50932, 467, 5112, 264, 1185, 11, 754, 498, 291, 500, 380, 362, 257, 48994, 7006, 11, 360, 257, 665, 1691, 412, 32884, 51108, 51108, 2035, 291, 393, 13, 51158, 51158, 1396, 1922, 264, 565, 11, 309, 6653, 264, 1185, 764, 1176, 13, 440, 48994, 7006, 307, 9354, 45558, 356, 51424, 51424, 365, 264, 10290, 34086, 490, 264, 6069, 284, 370, 300, 4018, 575, 257, 2121, 3620, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14281552632649738, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.540135927934898e-06}, {"id": 912, "seek": 327848, "start": 3283.0, "end": 3287.72, "text": " It basically sets Z to zero.", "tokens": [50364, 538, 257, 6562, 295, 5127, 5658, 293, 437, 321, 818, 3270, 346, 13, 50590, 50590, 467, 1936, 6352, 1176, 281, 4018, 13, 50826, 50826, 467, 5874, 1176, 281, 312, 4018, 1922, 264, 565, 13, 50932, 50932, 467, 5112, 264, 1185, 11, 754, 498, 291, 500, 380, 362, 257, 48994, 7006, 11, 360, 257, 665, 1691, 412, 32884, 51108, 51108, 2035, 291, 393, 13, 51158, 51158, 1396, 1922, 264, 565, 11, 309, 6653, 264, 1185, 764, 1176, 13, 440, 48994, 7006, 307, 9354, 45558, 356, 51424, 51424, 365, 264, 10290, 34086, 490, 264, 6069, 284, 370, 300, 4018, 575, 257, 2121, 3620, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14281552632649738, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.540135927934898e-06}, {"id": 913, "seek": 327848, "start": 3287.72, "end": 3289.84, "text": " It forces Z to be zero half the time.", "tokens": [50364, 538, 257, 6562, 295, 5127, 5658, 293, 437, 321, 818, 3270, 346, 13, 50590, 50590, 467, 1936, 6352, 1176, 281, 4018, 13, 50826, 50826, 467, 5874, 1176, 281, 312, 4018, 1922, 264, 565, 13, 50932, 50932, 467, 5112, 264, 1185, 11, 754, 498, 291, 500, 380, 362, 257, 48994, 7006, 11, 360, 257, 665, 1691, 412, 32884, 51108, 51108, 2035, 291, 393, 13, 51158, 51158, 1396, 1922, 264, 565, 11, 309, 6653, 264, 1185, 764, 1176, 13, 440, 48994, 7006, 307, 9354, 45558, 356, 51424, 51424, 365, 264, 10290, 34086, 490, 264, 6069, 284, 370, 300, 4018, 575, 257, 2121, 3620, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14281552632649738, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.540135927934898e-06}, {"id": 914, "seek": 327848, "start": 3289.84, "end": 3293.36, "text": " It tells the system, even if you don't have a latent variable, do a good job at predicting", "tokens": [50364, 538, 257, 6562, 295, 5127, 5658, 293, 437, 321, 818, 3270, 346, 13, 50590, 50590, 467, 1936, 6352, 1176, 281, 4018, 13, 50826, 50826, 467, 5874, 1176, 281, 312, 4018, 1922, 264, 565, 13, 50932, 50932, 467, 5112, 264, 1185, 11, 754, 498, 291, 500, 380, 362, 257, 48994, 7006, 11, 360, 257, 665, 1691, 412, 32884, 51108, 51108, 2035, 291, 393, 13, 51158, 51158, 1396, 1922, 264, 565, 11, 309, 6653, 264, 1185, 764, 1176, 13, 440, 48994, 7006, 307, 9354, 45558, 356, 51424, 51424, 365, 264, 10290, 34086, 490, 264, 6069, 284, 370, 300, 4018, 575, 257, 2121, 3620, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14281552632649738, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.540135927934898e-06}, {"id": 915, "seek": 327848, "start": 3293.36, "end": 3294.36, "text": " whatever you can.", "tokens": [50364, 538, 257, 6562, 295, 5127, 5658, 293, 437, 321, 818, 3270, 346, 13, 50590, 50590, 467, 1936, 6352, 1176, 281, 4018, 13, 50826, 50826, 467, 5874, 1176, 281, 312, 4018, 1922, 264, 565, 13, 50932, 50932, 467, 5112, 264, 1185, 11, 754, 498, 291, 500, 380, 362, 257, 48994, 7006, 11, 360, 257, 665, 1691, 412, 32884, 51108, 51108, 2035, 291, 393, 13, 51158, 51158, 1396, 1922, 264, 565, 11, 309, 6653, 264, 1185, 764, 1176, 13, 440, 48994, 7006, 307, 9354, 45558, 356, 51424, 51424, 365, 264, 10290, 34086, 490, 264, 6069, 284, 370, 300, 4018, 575, 257, 2121, 3620, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14281552632649738, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.540135927934898e-06}, {"id": 916, "seek": 327848, "start": 3294.36, "end": 3299.68, "text": " Then half the time, it lets the system use Z. The latent variable is combined additively", "tokens": [50364, 538, 257, 6562, 295, 5127, 5658, 293, 437, 321, 818, 3270, 346, 13, 50590, 50590, 467, 1936, 6352, 1176, 281, 4018, 13, 50826, 50826, 467, 5874, 1176, 281, 312, 4018, 1922, 264, 565, 13, 50932, 50932, 467, 5112, 264, 1185, 11, 754, 498, 291, 500, 380, 362, 257, 48994, 7006, 11, 360, 257, 665, 1691, 412, 32884, 51108, 51108, 2035, 291, 393, 13, 51158, 51158, 1396, 1922, 264, 565, 11, 309, 6653, 264, 1185, 764, 1176, 13, 440, 48994, 7006, 307, 9354, 45558, 356, 51424, 51424, 365, 264, 10290, 34086, 490, 264, 6069, 284, 370, 300, 4018, 575, 257, 2121, 3620, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14281552632649738, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.540135927934898e-06}, {"id": 917, "seek": 327848, "start": 3299.68, "end": 3306.52, "text": " with the representation extracted from the predictor so that zero has a special meaning", "tokens": [50364, 538, 257, 6562, 295, 5127, 5658, 293, 437, 321, 818, 3270, 346, 13, 50590, 50590, 467, 1936, 6352, 1176, 281, 4018, 13, 50826, 50826, 467, 5874, 1176, 281, 312, 4018, 1922, 264, 565, 13, 50932, 50932, 467, 5112, 264, 1185, 11, 754, 498, 291, 500, 380, 362, 257, 48994, 7006, 11, 360, 257, 665, 1691, 412, 32884, 51108, 51108, 2035, 291, 393, 13, 51158, 51158, 1396, 1922, 264, 565, 11, 309, 6653, 264, 1185, 764, 1176, 13, 440, 48994, 7006, 307, 9354, 45558, 356, 51424, 51424, 365, 264, 10290, 34086, 490, 264, 6069, 284, 370, 300, 4018, 575, 257, 2121, 3620, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14281552632649738, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.540135927934898e-06}, {"id": 918, "seek": 330652, "start": 3306.52, "end": 3308.84, "text": " if you want.", "tokens": [50364, 498, 291, 528, 13, 50480, 50480, 639, 307, 437, 309, 14725, 13, 50625, 50625, 639, 307, 257, 6613, 295, 264, 957, 1002, 13, 50724, 50724, 639, 307, 257, 17630, 562, 291, 992, 1176, 281, 4018, 439, 264, 565, 11, 293, 370, 291, 483, 37644, 21264, 13, 50996, 50996, 708, 291, 536, 510, 366, 1097, 286, 478, 516, 281, 21022, 498, 309, 2738, 281, 21022, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.16062489108762878, "compression_ratio": 1.5483870967741935, "no_speech_prob": 4.092627023055684e-06}, {"id": 919, "seek": 330652, "start": 3308.84, "end": 3311.74, "text": " This is what it produces.", "tokens": [50364, 498, 291, 528, 13, 50480, 50480, 639, 307, 437, 309, 14725, 13, 50625, 50625, 639, 307, 257, 6613, 295, 264, 957, 1002, 13, 50724, 50724, 639, 307, 257, 17630, 562, 291, 992, 1176, 281, 4018, 439, 264, 565, 11, 293, 370, 291, 483, 37644, 21264, 13, 50996, 50996, 708, 291, 536, 510, 366, 1097, 286, 478, 516, 281, 21022, 498, 309, 2738, 281, 21022, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.16062489108762878, "compression_ratio": 1.5483870967741935, "no_speech_prob": 4.092627023055684e-06}, {"id": 920, "seek": 330652, "start": 3311.74, "end": 3313.72, "text": " This is a recording of the real world.", "tokens": [50364, 498, 291, 528, 13, 50480, 50480, 639, 307, 437, 309, 14725, 13, 50625, 50625, 639, 307, 257, 6613, 295, 264, 957, 1002, 13, 50724, 50724, 639, 307, 257, 17630, 562, 291, 992, 1176, 281, 4018, 439, 264, 565, 11, 293, 370, 291, 483, 37644, 21264, 13, 50996, 50996, 708, 291, 536, 510, 366, 1097, 286, 478, 516, 281, 21022, 498, 309, 2738, 281, 21022, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.16062489108762878, "compression_ratio": 1.5483870967741935, "no_speech_prob": 4.092627023055684e-06}, {"id": 921, "seek": 330652, "start": 3313.72, "end": 3319.16, "text": " This is a prediction when you set Z to zero all the time, and so you get blurry predictions.", "tokens": [50364, 498, 291, 528, 13, 50480, 50480, 639, 307, 437, 309, 14725, 13, 50625, 50625, 639, 307, 257, 6613, 295, 264, 957, 1002, 13, 50724, 50724, 639, 307, 257, 17630, 562, 291, 992, 1176, 281, 4018, 439, 264, 565, 11, 293, 370, 291, 483, 37644, 21264, 13, 50996, 50996, 708, 291, 536, 510, 366, 1097, 286, 478, 516, 281, 21022, 498, 309, 2738, 281, 21022, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.16062489108762878, "compression_ratio": 1.5483870967741935, "no_speech_prob": 4.092627023055684e-06}, {"id": 922, "seek": 330652, "start": 3319.16, "end": 3332.24, "text": " What you see here are... I'm going to restart if it wants to restart.", "tokens": [50364, 498, 291, 528, 13, 50480, 50480, 639, 307, 437, 309, 14725, 13, 50625, 50625, 639, 307, 257, 6613, 295, 264, 957, 1002, 13, 50724, 50724, 639, 307, 257, 17630, 562, 291, 992, 1176, 281, 4018, 439, 264, 565, 11, 293, 370, 291, 483, 37644, 21264, 13, 50996, 50996, 708, 291, 536, 510, 366, 1097, 286, 478, 516, 281, 21022, 498, 309, 2738, 281, 21022, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.16062489108762878, "compression_ratio": 1.5483870967741935, "no_speech_prob": 4.092627023055684e-06}, {"id": 923, "seek": 333224, "start": 3332.24, "end": 3339.12, "text": " What you see here are four different predictions run recursively for different samplings of", "tokens": [50364, 708, 291, 536, 510, 366, 1451, 819, 21264, 1190, 20560, 3413, 337, 819, 3247, 26921, 295, 50708, 50708, 264, 1176, 9102, 13, 50758, 50758, 509, 536, 436, 6069, 819, 26071, 13, 50962, 50962, 467, 311, 16176, 538, 264, 3732, 322, 264, 6329, 510, 13, 51106, 51106, 814, 13330, 5163, 300, 360, 819, 721, 337, 264, 819, 21179, 13, 51341, 51341, 440, 2063, 2445, 337, 3097, 341, 551, 307, 588, 2199, 13, 51486, 51486, 8503, 264, 1032, 307, 294, 12705, 420, 1968, 309, 311, 1097, 293, 577, 1400, 309, 307, 490, 1080, 12512, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.13575542096010187, "compression_ratio": 1.794759825327511, "no_speech_prob": 6.276618478295859e-07}, {"id": 924, "seek": 333224, "start": 3339.12, "end": 3340.12, "text": " the Z variables.", "tokens": [50364, 708, 291, 536, 510, 366, 1451, 819, 21264, 1190, 20560, 3413, 337, 819, 3247, 26921, 295, 50708, 50708, 264, 1176, 9102, 13, 50758, 50758, 509, 536, 436, 6069, 819, 26071, 13, 50962, 50962, 467, 311, 16176, 538, 264, 3732, 322, 264, 6329, 510, 13, 51106, 51106, 814, 13330, 5163, 300, 360, 819, 721, 337, 264, 819, 21179, 13, 51341, 51341, 440, 2063, 2445, 337, 3097, 341, 551, 307, 588, 2199, 13, 51486, 51486, 8503, 264, 1032, 307, 294, 12705, 420, 1968, 309, 311, 1097, 293, 577, 1400, 309, 307, 490, 1080, 12512, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.13575542096010187, "compression_ratio": 1.794759825327511, "no_speech_prob": 6.276618478295859e-07}, {"id": 925, "seek": 333224, "start": 3340.12, "end": 3344.2, "text": " You see they predict different futures.", "tokens": [50364, 708, 291, 536, 510, 366, 1451, 819, 21264, 1190, 20560, 3413, 337, 819, 3247, 26921, 295, 50708, 50708, 264, 1176, 9102, 13, 50758, 50758, 509, 536, 436, 6069, 819, 26071, 13, 50962, 50962, 467, 311, 16176, 538, 264, 3732, 322, 264, 6329, 510, 13, 51106, 51106, 814, 13330, 5163, 300, 360, 819, 721, 337, 264, 819, 21179, 13, 51341, 51341, 440, 2063, 2445, 337, 3097, 341, 551, 307, 588, 2199, 13, 51486, 51486, 8503, 264, 1032, 307, 294, 12705, 420, 1968, 309, 311, 1097, 293, 577, 1400, 309, 307, 490, 1080, 12512, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.13575542096010187, "compression_ratio": 1.794759825327511, "no_speech_prob": 6.276618478295859e-07}, {"id": 926, "seek": 333224, "start": 3344.2, "end": 3347.08, "text": " It's indicated by the square on the circle here.", "tokens": [50364, 708, 291, 536, 510, 366, 1451, 819, 21264, 1190, 20560, 3413, 337, 819, 3247, 26921, 295, 50708, 50708, 264, 1176, 9102, 13, 50758, 50758, 509, 536, 436, 6069, 819, 26071, 13, 50962, 50962, 467, 311, 16176, 538, 264, 3732, 322, 264, 6329, 510, 13, 51106, 51106, 814, 13330, 5163, 300, 360, 819, 721, 337, 264, 819, 21179, 13, 51341, 51341, 440, 2063, 2445, 337, 3097, 341, 551, 307, 588, 2199, 13, 51486, 51486, 8503, 264, 1032, 307, 294, 12705, 420, 1968, 309, 311, 1097, 293, 577, 1400, 309, 307, 490, 1080, 12512, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.13575542096010187, "compression_ratio": 1.794759825327511, "no_speech_prob": 6.276618478295859e-07}, {"id": 927, "seek": 333224, "start": 3347.08, "end": 3351.7799999999997, "text": " They indicate cars that do different things for the different sampling.", "tokens": [50364, 708, 291, 536, 510, 366, 1451, 819, 21264, 1190, 20560, 3413, 337, 819, 3247, 26921, 295, 50708, 50708, 264, 1176, 9102, 13, 50758, 50758, 509, 536, 436, 6069, 819, 26071, 13, 50962, 50962, 467, 311, 16176, 538, 264, 3732, 322, 264, 6329, 510, 13, 51106, 51106, 814, 13330, 5163, 300, 360, 819, 721, 337, 264, 819, 21179, 13, 51341, 51341, 440, 2063, 2445, 337, 3097, 341, 551, 307, 588, 2199, 13, 51486, 51486, 8503, 264, 1032, 307, 294, 12705, 420, 1968, 309, 311, 1097, 293, 577, 1400, 309, 307, 490, 1080, 12512, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.13575542096010187, "compression_ratio": 1.794759825327511, "no_speech_prob": 6.276618478295859e-07}, {"id": 928, "seek": 333224, "start": 3351.7799999999997, "end": 3354.68, "text": " The cost function for training this thing is very simple.", "tokens": [50364, 708, 291, 536, 510, 366, 1451, 819, 21264, 1190, 20560, 3413, 337, 819, 3247, 26921, 295, 50708, 50708, 264, 1176, 9102, 13, 50758, 50758, 509, 536, 436, 6069, 819, 26071, 13, 50962, 50962, 467, 311, 16176, 538, 264, 3732, 322, 264, 6329, 510, 13, 51106, 51106, 814, 13330, 5163, 300, 360, 819, 721, 337, 264, 819, 21179, 13, 51341, 51341, 440, 2063, 2445, 337, 3097, 341, 551, 307, 588, 2199, 13, 51486, 51486, 8503, 264, 1032, 307, 294, 12705, 420, 1968, 309, 311, 1097, 293, 577, 1400, 309, 307, 490, 1080, 12512, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.13575542096010187, "compression_ratio": 1.794759825327511, "no_speech_prob": 6.276618478295859e-07}, {"id": 929, "seek": 333224, "start": 3354.68, "end": 3360.4799999999996, "text": " Whether the car is in lane or whether it's... and how far it is from its neighbors.", "tokens": [50364, 708, 291, 536, 510, 366, 1451, 819, 21264, 1190, 20560, 3413, 337, 819, 3247, 26921, 295, 50708, 50708, 264, 1176, 9102, 13, 50758, 50758, 509, 536, 436, 6069, 819, 26071, 13, 50962, 50962, 467, 311, 16176, 538, 264, 3732, 322, 264, 6329, 510, 13, 51106, 51106, 814, 13330, 5163, 300, 360, 819, 721, 337, 264, 819, 21179, 13, 51341, 51341, 440, 2063, 2445, 337, 3097, 341, 551, 307, 588, 2199, 13, 51486, 51486, 8503, 264, 1032, 307, 294, 12705, 420, 1968, 309, 311, 1097, 293, 577, 1400, 309, 307, 490, 1080, 12512, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.13575542096010187, "compression_ratio": 1.794759825327511, "no_speech_prob": 6.276618478295859e-07}, {"id": 930, "seek": 336048, "start": 3360.48, "end": 3365.48, "text": " We can train this policy by just back-dropping the ingredient of the cost through the entire", "tokens": [50364, 492, 393, 3847, 341, 3897, 538, 445, 646, 12, 45869, 3759, 264, 14751, 295, 264, 2063, 807, 264, 2302, 50614, 50614, 1185, 439, 264, 636, 760, 281, 264, 3897, 3209, 13, 50832, 50832, 759, 291, 360, 341, 11, 309, 1177, 380, 589, 570, 437, 2314, 307, 264, 1185, 2170, 666, 10682, 295, 51086, 51086, 264, 1901, 689, 264, 11961, 2316, 775, 257, 534, 1578, 1691, 412, 32884, 11, 457, 2314, 281, 362, 51324, 51324, 2295, 2063, 13, 51412, 51412, 440, 1032, 1709, 766, 264, 3060, 420, 746, 411, 300, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.17770085436232547, "compression_ratio": 1.6025641025641026, "no_speech_prob": 1.1365440286681405e-06}, {"id": 931, "seek": 336048, "start": 3365.48, "end": 3369.84, "text": " system all the way down to the policy network.", "tokens": [50364, 492, 393, 3847, 341, 3897, 538, 445, 646, 12, 45869, 3759, 264, 14751, 295, 264, 2063, 807, 264, 2302, 50614, 50614, 1185, 439, 264, 636, 760, 281, 264, 3897, 3209, 13, 50832, 50832, 759, 291, 360, 341, 11, 309, 1177, 380, 589, 570, 437, 2314, 307, 264, 1185, 2170, 666, 10682, 295, 51086, 51086, 264, 1901, 689, 264, 11961, 2316, 775, 257, 534, 1578, 1691, 412, 32884, 11, 457, 2314, 281, 362, 51324, 51324, 2295, 2063, 13, 51412, 51412, 440, 1032, 1709, 766, 264, 3060, 420, 746, 411, 300, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.17770085436232547, "compression_ratio": 1.6025641025641026, "no_speech_prob": 1.1365440286681405e-06}, {"id": 932, "seek": 336048, "start": 3369.84, "end": 3374.92, "text": " If you do this, it doesn't work because what happens is the system gets into regions of", "tokens": [50364, 492, 393, 3847, 341, 3897, 538, 445, 646, 12, 45869, 3759, 264, 14751, 295, 264, 2063, 807, 264, 2302, 50614, 50614, 1185, 439, 264, 636, 760, 281, 264, 3897, 3209, 13, 50832, 50832, 759, 291, 360, 341, 11, 309, 1177, 380, 589, 570, 437, 2314, 307, 264, 1185, 2170, 666, 10682, 295, 51086, 51086, 264, 1901, 689, 264, 11961, 2316, 775, 257, 534, 1578, 1691, 412, 32884, 11, 457, 2314, 281, 362, 51324, 51324, 2295, 2063, 13, 51412, 51412, 440, 1032, 1709, 766, 264, 3060, 420, 746, 411, 300, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.17770085436232547, "compression_ratio": 1.6025641025641026, "no_speech_prob": 1.1365440286681405e-06}, {"id": 933, "seek": 336048, "start": 3374.92, "end": 3379.68, "text": " the space where the Ford model does a really bad job at predicting, but happens to have", "tokens": [50364, 492, 393, 3847, 341, 3897, 538, 445, 646, 12, 45869, 3759, 264, 14751, 295, 264, 2063, 807, 264, 2302, 50614, 50614, 1185, 439, 264, 636, 760, 281, 264, 3897, 3209, 13, 50832, 50832, 759, 291, 360, 341, 11, 309, 1177, 380, 589, 570, 437, 2314, 307, 264, 1185, 2170, 666, 10682, 295, 51086, 51086, 264, 1901, 689, 264, 11961, 2316, 775, 257, 534, 1578, 1691, 412, 32884, 11, 457, 2314, 281, 362, 51324, 51324, 2295, 2063, 13, 51412, 51412, 440, 1032, 1709, 766, 264, 3060, 420, 746, 411, 300, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.17770085436232547, "compression_ratio": 1.6025641025641026, "no_speech_prob": 1.1365440286681405e-06}, {"id": 934, "seek": 336048, "start": 3379.68, "end": 3381.44, "text": " low cost.", "tokens": [50364, 492, 393, 3847, 341, 3897, 538, 445, 646, 12, 45869, 3759, 264, 14751, 295, 264, 2063, 807, 264, 2302, 50614, 50614, 1185, 439, 264, 636, 760, 281, 264, 3897, 3209, 13, 50832, 50832, 759, 291, 360, 341, 11, 309, 1177, 380, 589, 570, 437, 2314, 307, 264, 1185, 2170, 666, 10682, 295, 51086, 51086, 264, 1901, 689, 264, 11961, 2316, 775, 257, 534, 1578, 1691, 412, 32884, 11, 457, 2314, 281, 362, 51324, 51324, 2295, 2063, 13, 51412, 51412, 440, 1032, 1709, 766, 264, 3060, 420, 746, 411, 300, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.17770085436232547, "compression_ratio": 1.6025641025641026, "no_speech_prob": 1.1365440286681405e-06}, {"id": 935, "seek": 336048, "start": 3381.44, "end": 3389.12, "text": " The car goes off the road or something like that.", "tokens": [50364, 492, 393, 3847, 341, 3897, 538, 445, 646, 12, 45869, 3759, 264, 14751, 295, 264, 2063, 807, 264, 2302, 50614, 50614, 1185, 439, 264, 636, 760, 281, 264, 3897, 3209, 13, 50832, 50832, 759, 291, 360, 341, 11, 309, 1177, 380, 589, 570, 437, 2314, 307, 264, 1185, 2170, 666, 10682, 295, 51086, 51086, 264, 1901, 689, 264, 11961, 2316, 775, 257, 534, 1578, 1691, 412, 32884, 11, 457, 2314, 281, 362, 51324, 51324, 2295, 2063, 13, 51412, 51412, 440, 1032, 1709, 766, 264, 3060, 420, 746, 411, 300, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.17770085436232547, "compression_ratio": 1.6025641025641026, "no_speech_prob": 1.1365440286681405e-06}, {"id": 936, "seek": 338912, "start": 3389.12, "end": 3393.88, "text": " This can be due also to flaws in the cost function, but basically it doesn't do what", "tokens": [50364, 639, 393, 312, 3462, 611, 281, 27108, 294, 264, 2063, 2445, 11, 457, 1936, 309, 1177, 380, 360, 437, 50602, 50602, 291, 528, 13, 50652, 50652, 708, 291, 362, 281, 360, 307, 3890, 1125, 309, 538, 19030, 264, 1185, 281, 1754, 1951, 10682, 295, 264, 11961, 50896, 50896, 2316, 689, 264, 11961, 2316, 307, 1238, 988, 295, 1080, 21264, 370, 300, 264, 1185, 1177, 380, 51140, 51140, 853, 281, 3332, 3219, 1507, 294, 3219, 2098, 300, 366, 406, 1974, 294, 264, 3097, 992, 293, 689, 51416, 51416, 1080, 11961, 2316, 393, 380, 534, 6069, 437, 311, 516, 281, 1051, 20095, 13, 51600, 51600, 509, 360, 341, 538, 8017, 990, 264, 15697, 294, 264, 17630, 295, 264, 11961, 2316, 538, 21179, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.10331624554049584, "compression_ratio": 1.8362369337979094, "no_speech_prob": 8.059329275056371e-07}, {"id": 937, "seek": 338912, "start": 3393.88, "end": 3394.88, "text": " you want.", "tokens": [50364, 639, 393, 312, 3462, 611, 281, 27108, 294, 264, 2063, 2445, 11, 457, 1936, 309, 1177, 380, 360, 437, 50602, 50602, 291, 528, 13, 50652, 50652, 708, 291, 362, 281, 360, 307, 3890, 1125, 309, 538, 19030, 264, 1185, 281, 1754, 1951, 10682, 295, 264, 11961, 50896, 50896, 2316, 689, 264, 11961, 2316, 307, 1238, 988, 295, 1080, 21264, 370, 300, 264, 1185, 1177, 380, 51140, 51140, 853, 281, 3332, 3219, 1507, 294, 3219, 2098, 300, 366, 406, 1974, 294, 264, 3097, 992, 293, 689, 51416, 51416, 1080, 11961, 2316, 393, 380, 534, 6069, 437, 311, 516, 281, 1051, 20095, 13, 51600, 51600, 509, 360, 341, 538, 8017, 990, 264, 15697, 294, 264, 17630, 295, 264, 11961, 2316, 538, 21179, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.10331624554049584, "compression_ratio": 1.8362369337979094, "no_speech_prob": 8.059329275056371e-07}, {"id": 938, "seek": 338912, "start": 3394.88, "end": 3399.7599999999998, "text": " What you have to do is regularize it by forcing the system to stay within regions of the Ford", "tokens": [50364, 639, 393, 312, 3462, 611, 281, 27108, 294, 264, 2063, 2445, 11, 457, 1936, 309, 1177, 380, 360, 437, 50602, 50602, 291, 528, 13, 50652, 50652, 708, 291, 362, 281, 360, 307, 3890, 1125, 309, 538, 19030, 264, 1185, 281, 1754, 1951, 10682, 295, 264, 11961, 50896, 50896, 2316, 689, 264, 11961, 2316, 307, 1238, 988, 295, 1080, 21264, 370, 300, 264, 1185, 1177, 380, 51140, 51140, 853, 281, 3332, 3219, 1507, 294, 3219, 2098, 300, 366, 406, 1974, 294, 264, 3097, 992, 293, 689, 51416, 51416, 1080, 11961, 2316, 393, 380, 534, 6069, 437, 311, 516, 281, 1051, 20095, 13, 51600, 51600, 509, 360, 341, 538, 8017, 990, 264, 15697, 294, 264, 17630, 295, 264, 11961, 2316, 538, 21179, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.10331624554049584, "compression_ratio": 1.8362369337979094, "no_speech_prob": 8.059329275056371e-07}, {"id": 939, "seek": 338912, "start": 3399.7599999999998, "end": 3404.64, "text": " model where the Ford model is pretty sure of its predictions so that the system doesn't", "tokens": [50364, 639, 393, 312, 3462, 611, 281, 27108, 294, 264, 2063, 2445, 11, 457, 1936, 309, 1177, 380, 360, 437, 50602, 50602, 291, 528, 13, 50652, 50652, 708, 291, 362, 281, 360, 307, 3890, 1125, 309, 538, 19030, 264, 1185, 281, 1754, 1951, 10682, 295, 264, 11961, 50896, 50896, 2316, 689, 264, 11961, 2316, 307, 1238, 988, 295, 1080, 21264, 370, 300, 264, 1185, 1177, 380, 51140, 51140, 853, 281, 3332, 3219, 1507, 294, 3219, 2098, 300, 366, 406, 1974, 294, 264, 3097, 992, 293, 689, 51416, 51416, 1080, 11961, 2316, 393, 380, 534, 6069, 437, 311, 516, 281, 1051, 20095, 13, 51600, 51600, 509, 360, 341, 538, 8017, 990, 264, 15697, 294, 264, 17630, 295, 264, 11961, 2316, 538, 21179, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.10331624554049584, "compression_ratio": 1.8362369337979094, "no_speech_prob": 8.059329275056371e-07}, {"id": 940, "seek": 338912, "start": 3404.64, "end": 3410.16, "text": " try to drive crazy stuff in crazy ways that are not present in the training set and where", "tokens": [50364, 639, 393, 312, 3462, 611, 281, 27108, 294, 264, 2063, 2445, 11, 457, 1936, 309, 1177, 380, 360, 437, 50602, 50602, 291, 528, 13, 50652, 50652, 708, 291, 362, 281, 360, 307, 3890, 1125, 309, 538, 19030, 264, 1185, 281, 1754, 1951, 10682, 295, 264, 11961, 50896, 50896, 2316, 689, 264, 11961, 2316, 307, 1238, 988, 295, 1080, 21264, 370, 300, 264, 1185, 1177, 380, 51140, 51140, 853, 281, 3332, 3219, 1507, 294, 3219, 2098, 300, 366, 406, 1974, 294, 264, 3097, 992, 293, 689, 51416, 51416, 1080, 11961, 2316, 393, 380, 534, 6069, 437, 311, 516, 281, 1051, 20095, 13, 51600, 51600, 509, 360, 341, 538, 8017, 990, 264, 15697, 294, 264, 17630, 295, 264, 11961, 2316, 538, 21179, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.10331624554049584, "compression_ratio": 1.8362369337979094, "no_speech_prob": 8.059329275056371e-07}, {"id": 941, "seek": 338912, "start": 3410.16, "end": 3413.8399999999997, "text": " its Ford model can't really predict what's going to happen accurately.", "tokens": [50364, 639, 393, 312, 3462, 611, 281, 27108, 294, 264, 2063, 2445, 11, 457, 1936, 309, 1177, 380, 360, 437, 50602, 50602, 291, 528, 13, 50652, 50652, 708, 291, 362, 281, 360, 307, 3890, 1125, 309, 538, 19030, 264, 1185, 281, 1754, 1951, 10682, 295, 264, 11961, 50896, 50896, 2316, 689, 264, 11961, 2316, 307, 1238, 988, 295, 1080, 21264, 370, 300, 264, 1185, 1177, 380, 51140, 51140, 853, 281, 3332, 3219, 1507, 294, 3219, 2098, 300, 366, 406, 1974, 294, 264, 3097, 992, 293, 689, 51416, 51416, 1080, 11961, 2316, 393, 380, 534, 6069, 437, 311, 516, 281, 1051, 20095, 13, 51600, 51600, 509, 360, 341, 538, 8017, 990, 264, 15697, 294, 264, 17630, 295, 264, 11961, 2316, 538, 21179, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.10331624554049584, "compression_ratio": 1.8362369337979094, "no_speech_prob": 8.059329275056371e-07}, {"id": 942, "seek": 338912, "start": 3413.8399999999997, "end": 3418.52, "text": " You do this by estimating the uncertainty in the prediction of the Ford model by sampling", "tokens": [50364, 639, 393, 312, 3462, 611, 281, 27108, 294, 264, 2063, 2445, 11, 457, 1936, 309, 1177, 380, 360, 437, 50602, 50602, 291, 528, 13, 50652, 50652, 708, 291, 362, 281, 360, 307, 3890, 1125, 309, 538, 19030, 264, 1185, 281, 1754, 1951, 10682, 295, 264, 11961, 50896, 50896, 2316, 689, 264, 11961, 2316, 307, 1238, 988, 295, 1080, 21264, 370, 300, 264, 1185, 1177, 380, 51140, 51140, 853, 281, 3332, 3219, 1507, 294, 3219, 2098, 300, 366, 406, 1974, 294, 264, 3097, 992, 293, 689, 51416, 51416, 1080, 11961, 2316, 393, 380, 534, 6069, 437, 311, 516, 281, 1051, 20095, 13, 51600, 51600, 509, 360, 341, 538, 8017, 990, 264, 15697, 294, 264, 17630, 295, 264, 11961, 2316, 538, 21179, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.10331624554049584, "compression_ratio": 1.8362369337979094, "no_speech_prob": 8.059329275056371e-07}, {"id": 943, "seek": 341852, "start": 3418.52, "end": 3424.12, "text": " the output of the Ford model with these random variables you can sample like the dropout", "tokens": [50364, 264, 5598, 295, 264, 11961, 2316, 365, 613, 4974, 9102, 291, 393, 6889, 411, 264, 3270, 346, 50644, 50644, 295, 3683, 22027, 294, 264, 3209, 11, 15866, 264, 21977, 295, 309, 11, 293, 550, 1228, 341, 382, 50894, 50894, 257, 1433, 294, 264, 2063, 2445, 13, 50956, 50956, 467, 5874, 264, 1185, 281, 1754, 1951, 257, 4458, 295, 1901, 689, 21264, 366, 6457, 12924, 51192, 51192, 365, 2295, 21977, 13, 51258, 51258, 639, 307, 437, 264, 1185, 775, 13, 51458, 51458, 639, 307, 264, 1032, 885, 9555, 13, 51522, 51522, 440, 3092, 5163, 366, 8287, 2145, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1711417283162032, "compression_ratio": 1.7238493723849373, "no_speech_prob": 5.093622348795179e-06}, {"id": 944, "seek": 341852, "start": 3424.12, "end": 3429.12, "text": " of various neurons in the network, computing the variance of it, and then using this as", "tokens": [50364, 264, 5598, 295, 264, 11961, 2316, 365, 613, 4974, 9102, 291, 393, 6889, 411, 264, 3270, 346, 50644, 50644, 295, 3683, 22027, 294, 264, 3209, 11, 15866, 264, 21977, 295, 309, 11, 293, 550, 1228, 341, 382, 50894, 50894, 257, 1433, 294, 264, 2063, 2445, 13, 50956, 50956, 467, 5874, 264, 1185, 281, 1754, 1951, 257, 4458, 295, 1901, 689, 21264, 366, 6457, 12924, 51192, 51192, 365, 2295, 21977, 13, 51258, 51258, 639, 307, 437, 264, 1185, 775, 13, 51458, 51458, 639, 307, 264, 1032, 885, 9555, 13, 51522, 51522, 440, 3092, 5163, 366, 8287, 2145, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1711417283162032, "compression_ratio": 1.7238493723849373, "no_speech_prob": 5.093622348795179e-06}, {"id": 945, "seek": 341852, "start": 3429.12, "end": 3430.36, "text": " a term in the cost function.", "tokens": [50364, 264, 5598, 295, 264, 11961, 2316, 365, 613, 4974, 9102, 291, 393, 6889, 411, 264, 3270, 346, 50644, 50644, 295, 3683, 22027, 294, 264, 3209, 11, 15866, 264, 21977, 295, 309, 11, 293, 550, 1228, 341, 382, 50894, 50894, 257, 1433, 294, 264, 2063, 2445, 13, 50956, 50956, 467, 5874, 264, 1185, 281, 1754, 1951, 257, 4458, 295, 1901, 689, 21264, 366, 6457, 12924, 51192, 51192, 365, 2295, 21977, 13, 51258, 51258, 639, 307, 437, 264, 1185, 775, 13, 51458, 51458, 639, 307, 264, 1032, 885, 9555, 13, 51522, 51522, 440, 3092, 5163, 366, 8287, 2145, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1711417283162032, "compression_ratio": 1.7238493723849373, "no_speech_prob": 5.093622348795179e-06}, {"id": 946, "seek": 341852, "start": 3430.36, "end": 3435.08, "text": " It forces the system to stay within a region of space where predictions are fairly reliable", "tokens": [50364, 264, 5598, 295, 264, 11961, 2316, 365, 613, 4974, 9102, 291, 393, 6889, 411, 264, 3270, 346, 50644, 50644, 295, 3683, 22027, 294, 264, 3209, 11, 15866, 264, 21977, 295, 309, 11, 293, 550, 1228, 341, 382, 50894, 50894, 257, 1433, 294, 264, 2063, 2445, 13, 50956, 50956, 467, 5874, 264, 1185, 281, 1754, 1951, 257, 4458, 295, 1901, 689, 21264, 366, 6457, 12924, 51192, 51192, 365, 2295, 21977, 13, 51258, 51258, 639, 307, 437, 264, 1185, 775, 13, 51458, 51458, 639, 307, 264, 1032, 885, 9555, 13, 51522, 51522, 440, 3092, 5163, 366, 8287, 2145, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1711417283162032, "compression_ratio": 1.7238493723849373, "no_speech_prob": 5.093622348795179e-06}, {"id": 947, "seek": 341852, "start": 3435.08, "end": 3436.4, "text": " with low variance.", "tokens": [50364, 264, 5598, 295, 264, 11961, 2316, 365, 613, 4974, 9102, 291, 393, 6889, 411, 264, 3270, 346, 50644, 50644, 295, 3683, 22027, 294, 264, 3209, 11, 15866, 264, 21977, 295, 309, 11, 293, 550, 1228, 341, 382, 50894, 50894, 257, 1433, 294, 264, 2063, 2445, 13, 50956, 50956, 467, 5874, 264, 1185, 281, 1754, 1951, 257, 4458, 295, 1901, 689, 21264, 366, 6457, 12924, 51192, 51192, 365, 2295, 21977, 13, 51258, 51258, 639, 307, 437, 264, 1185, 775, 13, 51458, 51458, 639, 307, 264, 1032, 885, 9555, 13, 51522, 51522, 440, 3092, 5163, 366, 8287, 2145, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1711417283162032, "compression_ratio": 1.7238493723849373, "no_speech_prob": 5.093622348795179e-06}, {"id": 948, "seek": 341852, "start": 3436.4, "end": 3440.4, "text": " This is what the system does.", "tokens": [50364, 264, 5598, 295, 264, 11961, 2316, 365, 613, 4974, 9102, 291, 393, 6889, 411, 264, 3270, 346, 50644, 50644, 295, 3683, 22027, 294, 264, 3209, 11, 15866, 264, 21977, 295, 309, 11, 293, 550, 1228, 341, 382, 50894, 50894, 257, 1433, 294, 264, 2063, 2445, 13, 50956, 50956, 467, 5874, 264, 1185, 281, 1754, 1951, 257, 4458, 295, 1901, 689, 21264, 366, 6457, 12924, 51192, 51192, 365, 2295, 21977, 13, 51258, 51258, 639, 307, 437, 264, 1185, 775, 13, 51458, 51458, 639, 307, 264, 1032, 885, 9555, 13, 51522, 51522, 440, 3092, 5163, 366, 8287, 2145, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1711417283162032, "compression_ratio": 1.7238493723849373, "no_speech_prob": 5.093622348795179e-06}, {"id": 949, "seek": 341852, "start": 3440.4, "end": 3441.68, "text": " This is the car being driven.", "tokens": [50364, 264, 5598, 295, 264, 11961, 2316, 365, 613, 4974, 9102, 291, 393, 6889, 411, 264, 3270, 346, 50644, 50644, 295, 3683, 22027, 294, 264, 3209, 11, 15866, 264, 21977, 295, 309, 11, 293, 550, 1228, 341, 382, 50894, 50894, 257, 1433, 294, 264, 2063, 2445, 13, 50956, 50956, 467, 5874, 264, 1185, 281, 1754, 1951, 257, 4458, 295, 1901, 689, 21264, 366, 6457, 12924, 51192, 51192, 365, 2295, 21977, 13, 51258, 51258, 639, 307, 437, 264, 1185, 775, 13, 51458, 51458, 639, 307, 264, 1032, 885, 9555, 13, 51522, 51522, 440, 3092, 5163, 366, 8287, 2145, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1711417283162032, "compression_ratio": 1.7238493723849373, "no_speech_prob": 5.093622348795179e-06}, {"id": 950, "seek": 341852, "start": 3441.68, "end": 3445.52, "text": " The green cars are recorded videos.", "tokens": [50364, 264, 5598, 295, 264, 11961, 2316, 365, 613, 4974, 9102, 291, 393, 6889, 411, 264, 3270, 346, 50644, 50644, 295, 3683, 22027, 294, 264, 3209, 11, 15866, 264, 21977, 295, 309, 11, 293, 550, 1228, 341, 382, 50894, 50894, 257, 1433, 294, 264, 2063, 2445, 13, 50956, 50956, 467, 5874, 264, 1185, 281, 1754, 1951, 257, 4458, 295, 1901, 689, 21264, 366, 6457, 12924, 51192, 51192, 365, 2295, 21977, 13, 51258, 51258, 639, 307, 437, 264, 1185, 775, 13, 51458, 51458, 639, 307, 264, 1032, 885, 9555, 13, 51522, 51522, 440, 3092, 5163, 366, 8287, 2145, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1711417283162032, "compression_ratio": 1.7238493723849373, "no_speech_prob": 5.093622348795179e-06}, {"id": 951, "seek": 344552, "start": 3445.52, "end": 3450.44, "text": " The white dot indicates whether the car wants to turn, accelerate, brake, etc.", "tokens": [50364, 440, 2418, 5893, 16203, 1968, 264, 1032, 2738, 281, 1261, 11, 21341, 11, 13997, 11, 5183, 13, 50610, 50610, 467, 311, 4317, 544, 8974, 294, 341, 1365, 13, 50936, 50936, 440, 5566, 1032, 307, 264, 1032, 300, 307, 294, 264, 8287, 960, 13, 51054, 51054, 440, 3344, 1032, 307, 264, 472, 300, 321, 366, 4840, 13, 51228, 51228, 467, 994, 380, 1319, 12705, 13, 51286, 51286, 440, 1154, 307, 300, 264, 3344, 1032, 307, 14603, 281, 264, 661, 2306, 11, 293, 370, 309, 2170, 39470, 51480, 51480, 293, 309, 575, 281, 7615, 570, 264, 661, 5163, 366, 445, 8287, 13, 51746, 51746, 814, 500, 380, 536, 264, 3344, 1032, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1950407530132093, "compression_ratio": 1.7644628099173554, "no_speech_prob": 4.637789061234798e-06}, {"id": 952, "seek": 344552, "start": 3450.44, "end": 3456.96, "text": " It's perhaps more visible in this example.", "tokens": [50364, 440, 2418, 5893, 16203, 1968, 264, 1032, 2738, 281, 1261, 11, 21341, 11, 13997, 11, 5183, 13, 50610, 50610, 467, 311, 4317, 544, 8974, 294, 341, 1365, 13, 50936, 50936, 440, 5566, 1032, 307, 264, 1032, 300, 307, 294, 264, 8287, 960, 13, 51054, 51054, 440, 3344, 1032, 307, 264, 472, 300, 321, 366, 4840, 13, 51228, 51228, 467, 994, 380, 1319, 12705, 13, 51286, 51286, 440, 1154, 307, 300, 264, 3344, 1032, 307, 14603, 281, 264, 661, 2306, 11, 293, 370, 309, 2170, 39470, 51480, 51480, 293, 309, 575, 281, 7615, 570, 264, 661, 5163, 366, 445, 8287, 13, 51746, 51746, 814, 500, 380, 536, 264, 3344, 1032, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1950407530132093, "compression_ratio": 1.7644628099173554, "no_speech_prob": 4.637789061234798e-06}, {"id": 953, "seek": 344552, "start": 3456.96, "end": 3459.32, "text": " The yellow car is the car that is in the recorded video.", "tokens": [50364, 440, 2418, 5893, 16203, 1968, 264, 1032, 2738, 281, 1261, 11, 21341, 11, 13997, 11, 5183, 13, 50610, 50610, 467, 311, 4317, 544, 8974, 294, 341, 1365, 13, 50936, 50936, 440, 5566, 1032, 307, 264, 1032, 300, 307, 294, 264, 8287, 960, 13, 51054, 51054, 440, 3344, 1032, 307, 264, 472, 300, 321, 366, 4840, 13, 51228, 51228, 467, 994, 380, 1319, 12705, 13, 51286, 51286, 440, 1154, 307, 300, 264, 3344, 1032, 307, 14603, 281, 264, 661, 2306, 11, 293, 370, 309, 2170, 39470, 51480, 51480, 293, 309, 575, 281, 7615, 570, 264, 661, 5163, 366, 445, 8287, 13, 51746, 51746, 814, 500, 380, 536, 264, 3344, 1032, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1950407530132093, "compression_ratio": 1.7644628099173554, "no_speech_prob": 4.637789061234798e-06}, {"id": 954, "seek": 344552, "start": 3459.32, "end": 3462.8, "text": " The blue car is the one that we are driving.", "tokens": [50364, 440, 2418, 5893, 16203, 1968, 264, 1032, 2738, 281, 1261, 11, 21341, 11, 13997, 11, 5183, 13, 50610, 50610, 467, 311, 4317, 544, 8974, 294, 341, 1365, 13, 50936, 50936, 440, 5566, 1032, 307, 264, 1032, 300, 307, 294, 264, 8287, 960, 13, 51054, 51054, 440, 3344, 1032, 307, 264, 472, 300, 321, 366, 4840, 13, 51228, 51228, 467, 994, 380, 1319, 12705, 13, 51286, 51286, 440, 1154, 307, 300, 264, 3344, 1032, 307, 14603, 281, 264, 661, 2306, 11, 293, 370, 309, 2170, 39470, 51480, 51480, 293, 309, 575, 281, 7615, 570, 264, 661, 5163, 366, 445, 8287, 13, 51746, 51746, 814, 500, 380, 536, 264, 3344, 1032, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1950407530132093, "compression_ratio": 1.7644628099173554, "no_speech_prob": 4.637789061234798e-06}, {"id": 955, "seek": 344552, "start": 3462.8, "end": 3463.96, "text": " It didn't change lane.", "tokens": [50364, 440, 2418, 5893, 16203, 1968, 264, 1032, 2738, 281, 1261, 11, 21341, 11, 13997, 11, 5183, 13, 50610, 50610, 467, 311, 4317, 544, 8974, 294, 341, 1365, 13, 50936, 50936, 440, 5566, 1032, 307, 264, 1032, 300, 307, 294, 264, 8287, 960, 13, 51054, 51054, 440, 3344, 1032, 307, 264, 472, 300, 321, 366, 4840, 13, 51228, 51228, 467, 994, 380, 1319, 12705, 13, 51286, 51286, 440, 1154, 307, 300, 264, 3344, 1032, 307, 14603, 281, 264, 661, 2306, 11, 293, 370, 309, 2170, 39470, 51480, 51480, 293, 309, 575, 281, 7615, 570, 264, 661, 5163, 366, 445, 8287, 13, 51746, 51746, 814, 500, 380, 536, 264, 3344, 1032, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1950407530132093, "compression_ratio": 1.7644628099173554, "no_speech_prob": 4.637789061234798e-06}, {"id": 956, "seek": 344552, "start": 3463.96, "end": 3467.84, "text": " The problem is that the blue car is invisible to the other ones, and so it gets squeezed", "tokens": [50364, 440, 2418, 5893, 16203, 1968, 264, 1032, 2738, 281, 1261, 11, 21341, 11, 13997, 11, 5183, 13, 50610, 50610, 467, 311, 4317, 544, 8974, 294, 341, 1365, 13, 50936, 50936, 440, 5566, 1032, 307, 264, 1032, 300, 307, 294, 264, 8287, 960, 13, 51054, 51054, 440, 3344, 1032, 307, 264, 472, 300, 321, 366, 4840, 13, 51228, 51228, 467, 994, 380, 1319, 12705, 13, 51286, 51286, 440, 1154, 307, 300, 264, 3344, 1032, 307, 14603, 281, 264, 661, 2306, 11, 293, 370, 309, 2170, 39470, 51480, 51480, 293, 309, 575, 281, 7615, 570, 264, 661, 5163, 366, 445, 8287, 13, 51746, 51746, 814, 500, 380, 536, 264, 3344, 1032, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1950407530132093, "compression_ratio": 1.7644628099173554, "no_speech_prob": 4.637789061234798e-06}, {"id": 957, "seek": 344552, "start": 3467.84, "end": 3473.16, "text": " and it has to escape because the other cars are just recorded.", "tokens": [50364, 440, 2418, 5893, 16203, 1968, 264, 1032, 2738, 281, 1261, 11, 21341, 11, 13997, 11, 5183, 13, 50610, 50610, 467, 311, 4317, 544, 8974, 294, 341, 1365, 13, 50936, 50936, 440, 5566, 1032, 307, 264, 1032, 300, 307, 294, 264, 8287, 960, 13, 51054, 51054, 440, 3344, 1032, 307, 264, 472, 300, 321, 366, 4840, 13, 51228, 51228, 467, 994, 380, 1319, 12705, 13, 51286, 51286, 440, 1154, 307, 300, 264, 3344, 1032, 307, 14603, 281, 264, 661, 2306, 11, 293, 370, 309, 2170, 39470, 51480, 51480, 293, 309, 575, 281, 7615, 570, 264, 661, 5163, 366, 445, 8287, 13, 51746, 51746, 814, 500, 380, 536, 264, 3344, 1032, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1950407530132093, "compression_ratio": 1.7644628099173554, "no_speech_prob": 4.637789061234798e-06}, {"id": 958, "seek": 344552, "start": 3473.16, "end": 3474.16, "text": " They don't see the blue car.", "tokens": [50364, 440, 2418, 5893, 16203, 1968, 264, 1032, 2738, 281, 1261, 11, 21341, 11, 13997, 11, 5183, 13, 50610, 50610, 467, 311, 4317, 544, 8974, 294, 341, 1365, 13, 50936, 50936, 440, 5566, 1032, 307, 264, 1032, 300, 307, 294, 264, 8287, 960, 13, 51054, 51054, 440, 3344, 1032, 307, 264, 472, 300, 321, 366, 4840, 13, 51228, 51228, 467, 994, 380, 1319, 12705, 13, 51286, 51286, 440, 1154, 307, 300, 264, 3344, 1032, 307, 14603, 281, 264, 661, 2306, 11, 293, 370, 309, 2170, 39470, 51480, 51480, 293, 309, 575, 281, 7615, 570, 264, 661, 5163, 366, 445, 8287, 13, 51746, 51746, 814, 500, 380, 536, 264, 3344, 1032, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1950407530132093, "compression_ratio": 1.7644628099173554, "no_speech_prob": 4.637789061234798e-06}, {"id": 959, "seek": 347416, "start": 3474.16, "end": 3475.68, "text": " This is another example.", "tokens": [50364, 639, 307, 1071, 1365, 13, 50440, 50440, 821, 366, 1570, 2663, 13, 50690, 50690, 467, 311, 1382, 281, 1754, 15461, 1296, 264, 5163, 294, 264, 1868, 293, 294, 264, 646, 13, 51036, 51036, 407, 300, 4137, 13, 51154, 51154, 286, 519, 341, 1379, 1558, 295, 2698, 12, 48172, 24420, 2539, 307, 264, 2027, 295, 3479, 2539, 13, 51392, 51392, 1468, 380, 4725, 1697, 385, 11, 457, 300, 311, 689, 452, 1460, 307, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.3264496047775467, "compression_ratio": 1.4791666666666667, "no_speech_prob": 1.1298984645691235e-05}, {"id": 960, "seek": 347416, "start": 3475.68, "end": 3480.68, "text": " There are less issues.", "tokens": [50364, 639, 307, 1071, 1365, 13, 50440, 50440, 821, 366, 1570, 2663, 13, 50690, 50690, 467, 311, 1382, 281, 1754, 15461, 1296, 264, 5163, 294, 264, 1868, 293, 294, 264, 646, 13, 51036, 51036, 407, 300, 4137, 13, 51154, 51154, 286, 519, 341, 1379, 1558, 295, 2698, 12, 48172, 24420, 2539, 307, 264, 2027, 295, 3479, 2539, 13, 51392, 51392, 1468, 380, 4725, 1697, 385, 11, 457, 300, 311, 689, 452, 1460, 307, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.3264496047775467, "compression_ratio": 1.4791666666666667, "no_speech_prob": 1.1298984645691235e-05}, {"id": 961, "seek": 347416, "start": 3480.68, "end": 3487.6, "text": " It's trying to stay halfway between the cars in the front and in the back.", "tokens": [50364, 639, 307, 1071, 1365, 13, 50440, 50440, 821, 366, 1570, 2663, 13, 50690, 50690, 467, 311, 1382, 281, 1754, 15461, 1296, 264, 5163, 294, 264, 1868, 293, 294, 264, 646, 13, 51036, 51036, 407, 300, 4137, 13, 51154, 51154, 286, 519, 341, 1379, 1558, 295, 2698, 12, 48172, 24420, 2539, 307, 264, 2027, 295, 3479, 2539, 13, 51392, 51392, 1468, 380, 4725, 1697, 385, 11, 457, 300, 311, 689, 452, 1460, 307, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.3264496047775467, "compression_ratio": 1.4791666666666667, "no_speech_prob": 1.1298984645691235e-05}, {"id": 962, "seek": 347416, "start": 3487.6, "end": 3489.96, "text": " So that slide.", "tokens": [50364, 639, 307, 1071, 1365, 13, 50440, 50440, 821, 366, 1570, 2663, 13, 50690, 50690, 467, 311, 1382, 281, 1754, 15461, 1296, 264, 5163, 294, 264, 1868, 293, 294, 264, 646, 13, 51036, 51036, 407, 300, 4137, 13, 51154, 51154, 286, 519, 341, 1379, 1558, 295, 2698, 12, 48172, 24420, 2539, 307, 264, 2027, 295, 3479, 2539, 13, 51392, 51392, 1468, 380, 4725, 1697, 385, 11, 457, 300, 311, 689, 452, 1460, 307, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.3264496047775467, "compression_ratio": 1.4791666666666667, "no_speech_prob": 1.1298984645691235e-05}, {"id": 963, "seek": 347416, "start": 3489.96, "end": 3494.72, "text": " I think this whole idea of self-supervised learning is the future of machine learning.", "tokens": [50364, 639, 307, 1071, 1365, 13, 50440, 50440, 821, 366, 1570, 2663, 13, 50690, 50690, 467, 311, 1382, 281, 1754, 15461, 1296, 264, 5163, 294, 264, 1868, 293, 294, 264, 646, 13, 51036, 51036, 407, 300, 4137, 13, 51154, 51154, 286, 519, 341, 1379, 1558, 295, 2698, 12, 48172, 24420, 2539, 307, 264, 2027, 295, 3479, 2539, 13, 51392, 51392, 1468, 380, 4725, 1697, 385, 11, 457, 300, 311, 689, 452, 1460, 307, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.3264496047775467, "compression_ratio": 1.4791666666666667, "no_speech_prob": 1.1298984645691235e-05}, {"id": 964, "seek": 347416, "start": 3494.72, "end": 3500.44, "text": " Don't necessarily believe me, but that's where my money is.", "tokens": [50364, 639, 307, 1071, 1365, 13, 50440, 50440, 821, 366, 1570, 2663, 13, 50690, 50690, 467, 311, 1382, 281, 1754, 15461, 1296, 264, 5163, 294, 264, 1868, 293, 294, 264, 646, 13, 51036, 51036, 407, 300, 4137, 13, 51154, 51154, 286, 519, 341, 1379, 1558, 295, 2698, 12, 48172, 24420, 2539, 307, 264, 2027, 295, 3479, 2539, 13, 51392, 51392, 1468, 380, 4725, 1697, 385, 11, 457, 300, 311, 689, 452, 1460, 307, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.3264496047775467, "compression_ratio": 1.4791666666666667, "no_speech_prob": 1.1298984645691235e-05}, {"id": 965, "seek": 350044, "start": 3500.44, "end": 3505.92, "text": " I think we can learn complex hierarchical features for low resource tasks, which is", "tokens": [50364, 286, 519, 321, 393, 1466, 3997, 35250, 804, 4122, 337, 2295, 7684, 9608, 11, 597, 307, 50638, 50638, 5617, 534, 1021, 1228, 2698, 12, 48172, 24420, 2539, 13, 50862, 50862, 24120, 294, 3303, 2856, 309, 1985, 13, 50964, 50964, 467, 311, 588, 1021, 337, 3303, 2856, 13, 51032, 51032, 1171, 1365, 11, 309, 311, 1021, 337, 4384, 281, 312, 1075, 281, 13799, 7031, 76, 1130, 666, 3669, 11, 51374, 51374, 420, 544, 13402, 281, 767, 3847, 257, 21538, 1185, 300, 5531, 82, 4700, 6218, 294, 7031, 76, 1130, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.1800932676895805, "compression_ratio": 1.6489795918367347, "no_speech_prob": 7.293287126231007e-06}, {"id": 966, "seek": 350044, "start": 3505.92, "end": 3510.4, "text": " becoming really important using self-supervised learning.", "tokens": [50364, 286, 519, 321, 393, 1466, 3997, 35250, 804, 4122, 337, 2295, 7684, 9608, 11, 597, 307, 50638, 50638, 5617, 534, 1021, 1228, 2698, 12, 48172, 24420, 2539, 13, 50862, 50862, 24120, 294, 3303, 2856, 309, 1985, 13, 50964, 50964, 467, 311, 588, 1021, 337, 3303, 2856, 13, 51032, 51032, 1171, 1365, 11, 309, 311, 1021, 337, 4384, 281, 312, 1075, 281, 13799, 7031, 76, 1130, 666, 3669, 11, 51374, 51374, 420, 544, 13402, 281, 767, 3847, 257, 21538, 1185, 300, 5531, 82, 4700, 6218, 294, 7031, 76, 1130, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.1800932676895805, "compression_ratio": 1.6489795918367347, "no_speech_prob": 7.293287126231007e-06}, {"id": 967, "seek": 350044, "start": 3510.4, "end": 3512.44, "text": " Clearly in natural language it works.", "tokens": [50364, 286, 519, 321, 393, 1466, 3997, 35250, 804, 4122, 337, 2295, 7684, 9608, 11, 597, 307, 50638, 50638, 5617, 534, 1021, 1228, 2698, 12, 48172, 24420, 2539, 13, 50862, 50862, 24120, 294, 3303, 2856, 309, 1985, 13, 50964, 50964, 467, 311, 588, 1021, 337, 3303, 2856, 13, 51032, 51032, 1171, 1365, 11, 309, 311, 1021, 337, 4384, 281, 312, 1075, 281, 13799, 7031, 76, 1130, 666, 3669, 11, 51374, 51374, 420, 544, 13402, 281, 767, 3847, 257, 21538, 1185, 300, 5531, 82, 4700, 6218, 294, 7031, 76, 1130, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.1800932676895805, "compression_ratio": 1.6489795918367347, "no_speech_prob": 7.293287126231007e-06}, {"id": 968, "seek": 350044, "start": 3512.44, "end": 3513.8, "text": " It's very important for natural language.", "tokens": [50364, 286, 519, 321, 393, 1466, 3997, 35250, 804, 4122, 337, 2295, 7684, 9608, 11, 597, 307, 50638, 50638, 5617, 534, 1021, 1228, 2698, 12, 48172, 24420, 2539, 13, 50862, 50862, 24120, 294, 3303, 2856, 309, 1985, 13, 50964, 50964, 467, 311, 588, 1021, 337, 3303, 2856, 13, 51032, 51032, 1171, 1365, 11, 309, 311, 1021, 337, 4384, 281, 312, 1075, 281, 13799, 7031, 76, 1130, 666, 3669, 11, 51374, 51374, 420, 544, 13402, 281, 767, 3847, 257, 21538, 1185, 300, 5531, 82, 4700, 6218, 294, 7031, 76, 1130, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.1800932676895805, "compression_ratio": 1.6489795918367347, "no_speech_prob": 7.293287126231007e-06}, {"id": 969, "seek": 350044, "start": 3513.8, "end": 3520.64, "text": " For example, it's important for Facebook to be able to translate Burmese into English,", "tokens": [50364, 286, 519, 321, 393, 1466, 3997, 35250, 804, 4122, 337, 2295, 7684, 9608, 11, 597, 307, 50638, 50638, 5617, 534, 1021, 1228, 2698, 12, 48172, 24420, 2539, 13, 50862, 50862, 24120, 294, 3303, 2856, 309, 1985, 13, 50964, 50964, 467, 311, 588, 1021, 337, 3303, 2856, 13, 51032, 51032, 1171, 1365, 11, 309, 311, 1021, 337, 4384, 281, 312, 1075, 281, 13799, 7031, 76, 1130, 666, 3669, 11, 51374, 51374, 420, 544, 13402, 281, 767, 3847, 257, 21538, 1185, 300, 5531, 82, 4700, 6218, 294, 7031, 76, 1130, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.1800932676895805, "compression_ratio": 1.6489795918367347, "no_speech_prob": 7.293287126231007e-06}, {"id": 970, "seek": 350044, "start": 3520.64, "end": 3526.48, "text": " or more precisely to actually train a classification system that detects hate speech in Burmese", "tokens": [50364, 286, 519, 321, 393, 1466, 3997, 35250, 804, 4122, 337, 2295, 7684, 9608, 11, 597, 307, 50638, 50638, 5617, 534, 1021, 1228, 2698, 12, 48172, 24420, 2539, 13, 50862, 50862, 24120, 294, 3303, 2856, 309, 1985, 13, 50964, 50964, 467, 311, 588, 1021, 337, 3303, 2856, 13, 51032, 51032, 1171, 1365, 11, 309, 311, 1021, 337, 4384, 281, 312, 1075, 281, 13799, 7031, 76, 1130, 666, 3669, 11, 51374, 51374, 420, 544, 13402, 281, 767, 3847, 257, 21538, 1185, 300, 5531, 82, 4700, 6218, 294, 7031, 76, 1130, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.1800932676895805, "compression_ratio": 1.6489795918367347, "no_speech_prob": 7.293287126231007e-06}, {"id": 971, "seek": 352648, "start": 3526.48, "end": 3531.36, "text": " because there is ethnic conflicts in Myanmar.", "tokens": [50364, 570, 456, 307, 14363, 19807, 294, 42725, 13, 50608, 50608, 509, 528, 281, 312, 1075, 281, 5531, 4700, 6218, 281, 4871, 1578, 721, 490, 2737, 13, 50778, 50778, 583, 577, 709, 3097, 1412, 360, 321, 362, 294, 7031, 76, 1130, 30, 50918, 50918, 407, 472, 636, 281, 360, 341, 307, 281, 1261, 2487, 666, 257, 2856, 12, 471, 4217, 317, 10290, 293, 51222, 51222, 550, 3847, 257, 4700, 6218, 25712, 21761, 295, 2856, 13, 51378, 51378, 467, 311, 588, 1021, 337, 2295, 7684, 8650, 411, 7031, 76, 1130, 420, 2035, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.20033850418893914, "compression_ratio": 1.6554621848739495, "no_speech_prob": 5.014178896090016e-06}, {"id": 972, "seek": 352648, "start": 3531.36, "end": 3534.76, "text": " You want to be able to detect hate speech to prevent bad things from happening.", "tokens": [50364, 570, 456, 307, 14363, 19807, 294, 42725, 13, 50608, 50608, 509, 528, 281, 312, 1075, 281, 5531, 4700, 6218, 281, 4871, 1578, 721, 490, 2737, 13, 50778, 50778, 583, 577, 709, 3097, 1412, 360, 321, 362, 294, 7031, 76, 1130, 30, 50918, 50918, 407, 472, 636, 281, 360, 341, 307, 281, 1261, 2487, 666, 257, 2856, 12, 471, 4217, 317, 10290, 293, 51222, 51222, 550, 3847, 257, 4700, 6218, 25712, 21761, 295, 2856, 13, 51378, 51378, 467, 311, 588, 1021, 337, 2295, 7684, 8650, 411, 7031, 76, 1130, 420, 2035, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.20033850418893914, "compression_ratio": 1.6554621848739495, "no_speech_prob": 5.014178896090016e-06}, {"id": 973, "seek": 352648, "start": 3534.76, "end": 3537.56, "text": " But how much training data do we have in Burmese?", "tokens": [50364, 570, 456, 307, 14363, 19807, 294, 42725, 13, 50608, 50608, 509, 528, 281, 312, 1075, 281, 5531, 4700, 6218, 281, 4871, 1578, 721, 490, 2737, 13, 50778, 50778, 583, 577, 709, 3097, 1412, 360, 321, 362, 294, 7031, 76, 1130, 30, 50918, 50918, 407, 472, 636, 281, 360, 341, 307, 281, 1261, 2487, 666, 257, 2856, 12, 471, 4217, 317, 10290, 293, 51222, 51222, 550, 3847, 257, 4700, 6218, 25712, 21761, 295, 2856, 13, 51378, 51378, 467, 311, 588, 1021, 337, 2295, 7684, 8650, 411, 7031, 76, 1130, 420, 2035, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.20033850418893914, "compression_ratio": 1.6554621848739495, "no_speech_prob": 5.014178896090016e-06}, {"id": 974, "seek": 352648, "start": 3537.56, "end": 3543.64, "text": " So one way to do this is to turn text into a language-independent representation and", "tokens": [50364, 570, 456, 307, 14363, 19807, 294, 42725, 13, 50608, 50608, 509, 528, 281, 312, 1075, 281, 5531, 4700, 6218, 281, 4871, 1578, 721, 490, 2737, 13, 50778, 50778, 583, 577, 709, 3097, 1412, 360, 321, 362, 294, 7031, 76, 1130, 30, 50918, 50918, 407, 472, 636, 281, 360, 341, 307, 281, 1261, 2487, 666, 257, 2856, 12, 471, 4217, 317, 10290, 293, 51222, 51222, 550, 3847, 257, 4700, 6218, 25712, 21761, 295, 2856, 13, 51378, 51378, 467, 311, 588, 1021, 337, 2295, 7684, 8650, 411, 7031, 76, 1130, 420, 2035, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.20033850418893914, "compression_ratio": 1.6554621848739495, "no_speech_prob": 5.014178896090016e-06}, {"id": 975, "seek": 352648, "start": 3543.64, "end": 3546.76, "text": " then train a hate speech detector independently of language.", "tokens": [50364, 570, 456, 307, 14363, 19807, 294, 42725, 13, 50608, 50608, 509, 528, 281, 312, 1075, 281, 5531, 4700, 6218, 281, 4871, 1578, 721, 490, 2737, 13, 50778, 50778, 583, 577, 709, 3097, 1412, 360, 321, 362, 294, 7031, 76, 1130, 30, 50918, 50918, 407, 472, 636, 281, 360, 341, 307, 281, 1261, 2487, 666, 257, 2856, 12, 471, 4217, 317, 10290, 293, 51222, 51222, 550, 3847, 257, 4700, 6218, 25712, 21761, 295, 2856, 13, 51378, 51378, 467, 311, 588, 1021, 337, 2295, 7684, 8650, 411, 7031, 76, 1130, 420, 2035, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.20033850418893914, "compression_ratio": 1.6554621848739495, "no_speech_prob": 5.014178896090016e-06}, {"id": 976, "seek": 352648, "start": 3546.76, "end": 3550.4, "text": " It's very important for low resource languages like Burmese or whatever.", "tokens": [50364, 570, 456, 307, 14363, 19807, 294, 42725, 13, 50608, 50608, 509, 528, 281, 312, 1075, 281, 5531, 4700, 6218, 281, 4871, 1578, 721, 490, 2737, 13, 50778, 50778, 583, 577, 709, 3097, 1412, 360, 321, 362, 294, 7031, 76, 1130, 30, 50918, 50918, 407, 472, 636, 281, 360, 341, 307, 281, 1261, 2487, 666, 257, 2856, 12, 471, 4217, 317, 10290, 293, 51222, 51222, 550, 3847, 257, 4700, 6218, 25712, 21761, 295, 2856, 13, 51378, 51378, 467, 311, 588, 1021, 337, 2295, 7684, 8650, 411, 7031, 76, 1130, 420, 2035, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.20033850418893914, "compression_ratio": 1.6554621848739495, "no_speech_prob": 5.014178896090016e-06}, {"id": 977, "seek": 355040, "start": 3550.4, "end": 3556.6800000000003, "text": " I mean, there's 2,000 languages or something that people use on Facebook.", "tokens": [50364, 286, 914, 11, 456, 311, 568, 11, 1360, 8650, 420, 746, 300, 561, 764, 322, 4384, 13, 50678, 50678, 440, 5002, 295, 300, 307, 300, 321, 393, 3847, 5994, 9590, 300, 393, 33384, 257, 688, 50866, 50866, 295, 3678, 3601, 466, 264, 1002, 294, 257, 2107, 12, 83, 3863, 12, 36763, 317, 636, 13, 51150, 51150, 1396, 321, 393, 764, 2531, 7512, 300, 4813, 15697, 281, 1466, 2128, 5245, 337, 2316, 12, 6032, 51396, 51396, 1969, 293, 2316, 12, 6032, 29280, 2539, 13, 51546, 51546, 407, 452, 1460, 4362, 307, 322, 2281, 12, 6032, 11587, 11, 48994, 7006, 5245, 11, 370, 300, 436, 393, 4813, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1292626792137776, "compression_ratio": 1.6413793103448275, "no_speech_prob": 2.947784878415405e-06}, {"id": 978, "seek": 355040, "start": 3556.6800000000003, "end": 3560.44, "text": " The advantage of that is that we can train massive networks that can accumulate a lot", "tokens": [50364, 286, 914, 11, 456, 311, 568, 11, 1360, 8650, 420, 746, 300, 561, 764, 322, 4384, 13, 50678, 50678, 440, 5002, 295, 300, 307, 300, 321, 393, 3847, 5994, 9590, 300, 393, 33384, 257, 688, 50866, 50866, 295, 3678, 3601, 466, 264, 1002, 294, 257, 2107, 12, 83, 3863, 12, 36763, 317, 636, 13, 51150, 51150, 1396, 321, 393, 764, 2531, 7512, 300, 4813, 15697, 281, 1466, 2128, 5245, 337, 2316, 12, 6032, 51396, 51396, 1969, 293, 2316, 12, 6032, 29280, 2539, 13, 51546, 51546, 407, 452, 1460, 4362, 307, 322, 2281, 12, 6032, 11587, 11, 48994, 7006, 5245, 11, 370, 300, 436, 393, 4813, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1292626792137776, "compression_ratio": 1.6413793103448275, "no_speech_prob": 2.947784878415405e-06}, {"id": 979, "seek": 355040, "start": 3560.44, "end": 3566.12, "text": " of background knowledge about the world in a non-task-dependent way.", "tokens": [50364, 286, 914, 11, 456, 311, 568, 11, 1360, 8650, 420, 746, 300, 561, 764, 322, 4384, 13, 50678, 50678, 440, 5002, 295, 300, 307, 300, 321, 393, 3847, 5994, 9590, 300, 393, 33384, 257, 688, 50866, 50866, 295, 3678, 3601, 466, 264, 1002, 294, 257, 2107, 12, 83, 3863, 12, 36763, 317, 636, 13, 51150, 51150, 1396, 321, 393, 764, 2531, 7512, 300, 4813, 15697, 281, 1466, 2128, 5245, 337, 2316, 12, 6032, 51396, 51396, 1969, 293, 2316, 12, 6032, 29280, 2539, 13, 51546, 51546, 407, 452, 1460, 4362, 307, 322, 2281, 12, 6032, 11587, 11, 48994, 7006, 5245, 11, 370, 300, 436, 393, 4813, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1292626792137776, "compression_ratio": 1.6413793103448275, "no_speech_prob": 2.947784878415405e-06}, {"id": 980, "seek": 355040, "start": 3566.12, "end": 3571.04, "text": " Then we can use similar techniques that handle uncertainty to learn forward models for model-based", "tokens": [50364, 286, 914, 11, 456, 311, 568, 11, 1360, 8650, 420, 746, 300, 561, 764, 322, 4384, 13, 50678, 50678, 440, 5002, 295, 300, 307, 300, 321, 393, 3847, 5994, 9590, 300, 393, 33384, 257, 688, 50866, 50866, 295, 3678, 3601, 466, 264, 1002, 294, 257, 2107, 12, 83, 3863, 12, 36763, 317, 636, 13, 51150, 51150, 1396, 321, 393, 764, 2531, 7512, 300, 4813, 15697, 281, 1466, 2128, 5245, 337, 2316, 12, 6032, 51396, 51396, 1969, 293, 2316, 12, 6032, 29280, 2539, 13, 51546, 51546, 407, 452, 1460, 4362, 307, 322, 2281, 12, 6032, 11587, 11, 48994, 7006, 5245, 11, 370, 300, 436, 393, 4813, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1292626792137776, "compression_ratio": 1.6413793103448275, "no_speech_prob": 2.947784878415405e-06}, {"id": 981, "seek": 355040, "start": 3571.04, "end": 3574.04, "text": " control and model-based reinforcement learning.", "tokens": [50364, 286, 914, 11, 456, 311, 568, 11, 1360, 8650, 420, 746, 300, 561, 764, 322, 4384, 13, 50678, 50678, 440, 5002, 295, 300, 307, 300, 321, 393, 3847, 5994, 9590, 300, 393, 33384, 257, 688, 50866, 50866, 295, 3678, 3601, 466, 264, 1002, 294, 257, 2107, 12, 83, 3863, 12, 36763, 317, 636, 13, 51150, 51150, 1396, 321, 393, 764, 2531, 7512, 300, 4813, 15697, 281, 1466, 2128, 5245, 337, 2316, 12, 6032, 51396, 51396, 1969, 293, 2316, 12, 6032, 29280, 2539, 13, 51546, 51546, 407, 452, 1460, 4362, 307, 322, 2281, 12, 6032, 11587, 11, 48994, 7006, 5245, 11, 370, 300, 436, 393, 4813, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1292626792137776, "compression_ratio": 1.6413793103448275, "no_speech_prob": 2.947784878415405e-06}, {"id": 982, "seek": 355040, "start": 3574.04, "end": 3579.6800000000003, "text": " So my money currently is on energy-based approaches, latent variable models, so that they can handle", "tokens": [50364, 286, 914, 11, 456, 311, 568, 11, 1360, 8650, 420, 746, 300, 561, 764, 322, 4384, 13, 50678, 50678, 440, 5002, 295, 300, 307, 300, 321, 393, 3847, 5994, 9590, 300, 393, 33384, 257, 688, 50866, 50866, 295, 3678, 3601, 466, 264, 1002, 294, 257, 2107, 12, 83, 3863, 12, 36763, 317, 636, 13, 51150, 51150, 1396, 321, 393, 764, 2531, 7512, 300, 4813, 15697, 281, 1466, 2128, 5245, 337, 2316, 12, 6032, 51396, 51396, 1969, 293, 2316, 12, 6032, 29280, 2539, 13, 51546, 51546, 407, 452, 1460, 4362, 307, 322, 2281, 12, 6032, 11587, 11, 48994, 7006, 5245, 11, 370, 300, 436, 393, 4813, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.1292626792137776, "compression_ratio": 1.6413793103448275, "no_speech_prob": 2.947784878415405e-06}, {"id": 983, "seek": 357968, "start": 3579.68, "end": 3585.7999999999997, "text": " multimodality, regularized latent variable models to prevent this collapse problem, in", "tokens": [50364, 32972, 378, 1860, 11, 3890, 1602, 48994, 7006, 5245, 281, 4871, 341, 15584, 1154, 11, 294, 50670, 50670, 1729, 637, 11668, 48994, 7006, 5245, 11, 4878, 264, 13600, 636, 577, 281, 652, 552, 50818, 50818, 637, 11668, 307, 406, 1850, 11, 293, 550, 48994, 7006, 17630, 807, 257, 3847, 712, 2058, 19866, 13, 51130, 51130, 663, 311, 437, 286, 478, 1364, 322, 412, 264, 1623, 13, 51180, 51180, 286, 2729, 291, 257, 28817, 1874, 11, 457, 341, 307, 733, 295, 257, 938, 12, 7039, 1716, 13, 51362, 51362, 1044, 291, 13, 51412, 51412], "temperature": 0.0, "avg_logprob": -0.1887129733436986, "compression_ratio": 1.6724890829694323, "no_speech_prob": 3.667888222480542e-06}, {"id": 984, "seek": 357968, "start": 3585.7999999999997, "end": 3588.7599999999998, "text": " particular sparse latent variable models, although the precise way how to make them", "tokens": [50364, 32972, 378, 1860, 11, 3890, 1602, 48994, 7006, 5245, 281, 4871, 341, 15584, 1154, 11, 294, 50670, 50670, 1729, 637, 11668, 48994, 7006, 5245, 11, 4878, 264, 13600, 636, 577, 281, 652, 552, 50818, 50818, 637, 11668, 307, 406, 1850, 11, 293, 550, 48994, 7006, 17630, 807, 257, 3847, 712, 2058, 19866, 13, 51130, 51130, 663, 311, 437, 286, 478, 1364, 322, 412, 264, 1623, 13, 51180, 51180, 286, 2729, 291, 257, 28817, 1874, 11, 457, 341, 307, 733, 295, 257, 938, 12, 7039, 1716, 13, 51362, 51362, 1044, 291, 13, 51412, 51412], "temperature": 0.0, "avg_logprob": -0.1887129733436986, "compression_ratio": 1.6724890829694323, "no_speech_prob": 3.667888222480542e-06}, {"id": 985, "seek": 357968, "start": 3588.7599999999998, "end": 3595.0, "text": " sparse is not clear, and then latent variable prediction through a trainable encoder.", "tokens": [50364, 32972, 378, 1860, 11, 3890, 1602, 48994, 7006, 5245, 281, 4871, 341, 15584, 1154, 11, 294, 50670, 50670, 1729, 637, 11668, 48994, 7006, 5245, 11, 4878, 264, 13600, 636, 577, 281, 652, 552, 50818, 50818, 637, 11668, 307, 406, 1850, 11, 293, 550, 48994, 7006, 17630, 807, 257, 3847, 712, 2058, 19866, 13, 51130, 51130, 663, 311, 437, 286, 478, 1364, 322, 412, 264, 1623, 13, 51180, 51180, 286, 2729, 291, 257, 28817, 1874, 11, 457, 341, 307, 733, 295, 257, 938, 12, 7039, 1716, 13, 51362, 51362, 1044, 291, 13, 51412, 51412], "temperature": 0.0, "avg_logprob": -0.1887129733436986, "compression_ratio": 1.6724890829694323, "no_speech_prob": 3.667888222480542e-06}, {"id": 986, "seek": 357968, "start": 3595.0, "end": 3596.0, "text": " That's what I'm working on at the moment.", "tokens": [50364, 32972, 378, 1860, 11, 3890, 1602, 48994, 7006, 5245, 281, 4871, 341, 15584, 1154, 11, 294, 50670, 50670, 1729, 637, 11668, 48994, 7006, 5245, 11, 4878, 264, 13600, 636, 577, 281, 652, 552, 50818, 50818, 637, 11668, 307, 406, 1850, 11, 293, 550, 48994, 7006, 17630, 807, 257, 3847, 712, 2058, 19866, 13, 51130, 51130, 663, 311, 437, 286, 478, 1364, 322, 412, 264, 1623, 13, 51180, 51180, 286, 2729, 291, 257, 28817, 1874, 11, 457, 341, 307, 733, 295, 257, 938, 12, 7039, 1716, 13, 51362, 51362, 1044, 291, 13, 51412, 51412], "temperature": 0.0, "avg_logprob": -0.1887129733436986, "compression_ratio": 1.6724890829694323, "no_speech_prob": 3.667888222480542e-06}, {"id": 987, "seek": 357968, "start": 3596.0, "end": 3599.64, "text": " I gave you a preliminary result, but this is kind of a long-term project.", "tokens": [50364, 32972, 378, 1860, 11, 3890, 1602, 48994, 7006, 5245, 281, 4871, 341, 15584, 1154, 11, 294, 50670, 50670, 1729, 637, 11668, 48994, 7006, 5245, 11, 4878, 264, 13600, 636, 577, 281, 652, 552, 50818, 50818, 637, 11668, 307, 406, 1850, 11, 293, 550, 48994, 7006, 17630, 807, 257, 3847, 712, 2058, 19866, 13, 51130, 51130, 663, 311, 437, 286, 478, 1364, 322, 412, 264, 1623, 13, 51180, 51180, 286, 2729, 291, 257, 28817, 1874, 11, 457, 341, 307, 733, 295, 257, 938, 12, 7039, 1716, 13, 51362, 51362, 1044, 291, 13, 51412, 51412], "temperature": 0.0, "avg_logprob": -0.1887129733436986, "compression_ratio": 1.6724890829694323, "no_speech_prob": 3.667888222480542e-06}, {"id": 988, "seek": 357968, "start": 3599.64, "end": 3600.64, "text": " Thank you.", "tokens": [50364, 32972, 378, 1860, 11, 3890, 1602, 48994, 7006, 5245, 281, 4871, 341, 15584, 1154, 11, 294, 50670, 50670, 1729, 637, 11668, 48994, 7006, 5245, 11, 4878, 264, 13600, 636, 577, 281, 652, 552, 50818, 50818, 637, 11668, 307, 406, 1850, 11, 293, 550, 48994, 7006, 17630, 807, 257, 3847, 712, 2058, 19866, 13, 51130, 51130, 663, 311, 437, 286, 478, 1364, 322, 412, 264, 1623, 13, 51180, 51180, 286, 2729, 291, 257, 28817, 1874, 11, 457, 341, 307, 733, 295, 257, 938, 12, 7039, 1716, 13, 51362, 51362, 1044, 291, 13, 51412, 51412], "temperature": 0.0, "avg_logprob": -0.1887129733436986, "compression_ratio": 1.6724890829694323, "no_speech_prob": 3.667888222480542e-06}, {"id": 989, "seek": 360064, "start": 3600.64, "end": 3618.92, "text": " I'll talk about it in the next class.", "tokens": [50364, 286, 603, 751, 466, 309, 294, 264, 958, 1508, 13, 51278, 51278, 4621, 13, 51615], "temperature": 1.0, "avg_logprob": -2.1236157136804916, "compression_ratio": 0.875, "no_speech_prob": 0.0024895931128412485}], "language": "en", "video_id": "A7AnCvYDQrU", "entity": "Yann LeCun"}}