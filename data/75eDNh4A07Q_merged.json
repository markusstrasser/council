{"video_id": "75eDNh4A07Q", "title": "1.13 Machine Learning Overview | Visualizing the cost function --[Machine Learning | Andrew Ng]", "description": "First Course:\nSupervised Machine Learning : Regression and Classification.\n\nIf you liked the content please subscribe and put a little blue thumb.\nTake heart!", "author": "Machine Learning", "keywords": [], "channel_url": "https://www.youtube.com/channel/UClG5HEAJJFOavT_UolqYROQ", "length": 513, "views": 458, "publish_date": "11/04/2022", "timestamp": 1660953600, "entity": "ML Specialization, Andrew Ng (2022)", "transcript": {"text": " In the last video, you saw one visualization of the cost function J of w or J of wb. Let's look at some further, richer visualizations so you can get an even better intuition about what the cost function is doing. Here is what we've seen so far. There's the model, the model's parameters w and b, the cost function J of w and b, as well as the goal of linear regression, which is to minimize the cost function J of w and b over parameters w and b. In the last video, we had temporarily set b to zero in order to simplify the visualizations. But now, let's go back to the original model with both parameters w and b without setting b to be equal to zero. Same as last time, we want to get a visual understanding of the model function f of x, shown here on the left, and how it relates to the cost function J of wb, shown here on the right. Here's a training set of house sizes and prices. Let's see pick one possible function of x, like this one. Here I've set w to 0.06 and b to 50. So f of x is 0.06 times x plus 50. Note that this is not a particularly good model for this training set. It's actually a pretty bad model. It seems to consistently underestimate housing prices. Given these values for w and b, let's look at what the cost function J of w and b may look like. Recall what we saw last time was when you had only w because we temporarily set b to zero to simplify things. Back then, we had come up with a plot of the cost function that looked like this as a function of w only. So when we had only one parameter w, the cost function had this u-shaped curve, shaped a bit like a soup bowl. That sounds delicious. Now, in this housing price example that we have on this slide, we have two parameters, w and b, and so the plot becomes a little more complex. It turns out that the cost function also has a similar shape, like a soup bowl, except in three dimensions instead of two. In fact, depending on your training set, the cost function will look something like this. To me, this looks like a soup bowl, maybe because I'm a little bit hungry. Or maybe to you, it looks like a curved dinner plate or a hammock. Actually, that sounds relaxing too. And there's your coconut drink. Maybe when you're done with this course, you should treat yourself to vacation and relax in a hammock like this. What you see here is a 3D surface plot where the axes are labeled w and b. So as you vary w and b, which are the two parameters of the model, you get different values for the cost function j of w and b. This is a lot like the u-shaped curve you saw in the last video, except instead of having one parameter, w, as input in the j, you now have two parameters, w and b, as inputs into this soup bowl or this hammock-shaped function j. And I just want to point out that any single point on the surface represents a particular choice of w and b. For example, if w was minus 10 and b was minus 15, then the height of the surface above this point is the value of j when w is minus 10 and b is minus 15. Now in order to look even more closely at specific points, there's another way of plotting the cost function j that would be useful for visualization, which is rather than using these 3D surface plots. I'd like to take this exact same function j, so I'm not changing the function j at all, and plot it using something called a contour plot. And if you've ever seen a topographical map showing how high different mountains are, the contours in a topographical map are basically horizontal slices of the landscape of, say, a mountain. This image is of Mount Fuji in Japan. I still remember my family visiting Mount Fuji when I was a teenager. It was a beautiful sight. And if you fly directly above the mountain, that's what this contour map looks like. It shows all the points that are at the same height for different heights. At the bottom of this slide is a 3D surface plot of the cost function j. I know it doesn't look very bow-shaped, but it is actually a bow just very stretched out, which is why it looks like that. In an optional lab that is shortly to follow, you'll be able to see this in 3D and spin around the surface yourself, and it'll look more obviously bow-shaped there. Next, here on the upper right is a contour plot of this exact same cost function as that shown at the bottom. The two axes on this contour plot are B on the vertical axis and W on the horizontal axis. What each of these ovals, also called ellipses, shows is the set of points on the 3D surface which are at the exact same height. In other words, the set of points which have the same value for the cost function j. So, to get a contour plot, you take the 3D surface at the bottom and you use a knife to slice it horizontally. You take horizontal slices of that 3D surface and get all the points that are at the same height. Therefore, each horizontal slice ends up being shown as one of these ellipses, or one of these ovals. So concretely, if you take that point, and that point, and that point, all of these three points have the same value for the cost function j, even though they have different values for W and B. And in the figure on the upper left, you see also that these three points correspond to different functions f, all three of which are actually pretty bad for predicting housing prices in this case. Now, the bottom of the bow, where the cost function j is at a minimum, is this point right here, at the center of this concentric ovals. If you haven't seen contour plots much before, I'd like you to imagine, if you will, that you are flying high up above the bow in an airplane or in a rocket ship, and you're looking straight down at it. So that is as if you set your computer monitor flat on your desk facing up, and the bow shape is coming directly out of your screen rising above your desk. Imagine that the bow shape grows out of your computer screen lying flat, like that, so that each of these ovals have the same height above your screen, and the minimum of the bow is right down there in the center of the smallest oval. So it turns out that the contour plots are a convenient way to visualize the 3D cost function j, but in a way that's plotted in just 2D. In this video, you saw how the 3D bow-shaped surface plot can also be visualized as a contour plot. Using this visualization tool, in the next video, let's visualize some specific choices of WMB in the linear regression model so that we can see how these different choices affect the straight line you're fitting to the data. Let's go on to the next video.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 8.700000000000001, "text": " In the last video, you saw one visualization of the cost function J of w or J of wb.", "tokens": [50364, 682, 264, 1036, 960, 11, 291, 1866, 472, 25801, 295, 264, 2063, 2445, 508, 295, 261, 420, 508, 295, 261, 65, 13, 50799, 50799, 961, 311, 574, 412, 512, 3052, 11, 29021, 5056, 14455, 370, 291, 393, 483, 364, 754, 1101, 24002, 466, 51073, 51073, 437, 264, 2063, 2445, 307, 884, 13, 51201, 51201, 1692, 307, 437, 321, 600, 1612, 370, 1400, 13, 51307, 51307, 821, 311, 264, 2316, 11, 264, 2316, 311, 9834, 261, 293, 272, 11, 264, 2063, 2445, 508, 295, 261, 293, 272, 11, 382, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.1584630945454473, "compression_ratio": 1.7329842931937174, "no_speech_prob": 0.006485863588750362}, {"id": 1, "seek": 0, "start": 8.700000000000001, "end": 14.18, "text": " Let's look at some further, richer visualizations so you can get an even better intuition about", "tokens": [50364, 682, 264, 1036, 960, 11, 291, 1866, 472, 25801, 295, 264, 2063, 2445, 508, 295, 261, 420, 508, 295, 261, 65, 13, 50799, 50799, 961, 311, 574, 412, 512, 3052, 11, 29021, 5056, 14455, 370, 291, 393, 483, 364, 754, 1101, 24002, 466, 51073, 51073, 437, 264, 2063, 2445, 307, 884, 13, 51201, 51201, 1692, 307, 437, 321, 600, 1612, 370, 1400, 13, 51307, 51307, 821, 311, 264, 2316, 11, 264, 2316, 311, 9834, 261, 293, 272, 11, 264, 2063, 2445, 508, 295, 261, 293, 272, 11, 382, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.1584630945454473, "compression_ratio": 1.7329842931937174, "no_speech_prob": 0.006485863588750362}, {"id": 2, "seek": 0, "start": 14.18, "end": 16.740000000000002, "text": " what the cost function is doing.", "tokens": [50364, 682, 264, 1036, 960, 11, 291, 1866, 472, 25801, 295, 264, 2063, 2445, 508, 295, 261, 420, 508, 295, 261, 65, 13, 50799, 50799, 961, 311, 574, 412, 512, 3052, 11, 29021, 5056, 14455, 370, 291, 393, 483, 364, 754, 1101, 24002, 466, 51073, 51073, 437, 264, 2063, 2445, 307, 884, 13, 51201, 51201, 1692, 307, 437, 321, 600, 1612, 370, 1400, 13, 51307, 51307, 821, 311, 264, 2316, 11, 264, 2316, 311, 9834, 261, 293, 272, 11, 264, 2063, 2445, 508, 295, 261, 293, 272, 11, 382, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.1584630945454473, "compression_ratio": 1.7329842931937174, "no_speech_prob": 0.006485863588750362}, {"id": 3, "seek": 0, "start": 16.740000000000002, "end": 18.86, "text": " Here is what we've seen so far.", "tokens": [50364, 682, 264, 1036, 960, 11, 291, 1866, 472, 25801, 295, 264, 2063, 2445, 508, 295, 261, 420, 508, 295, 261, 65, 13, 50799, 50799, 961, 311, 574, 412, 512, 3052, 11, 29021, 5056, 14455, 370, 291, 393, 483, 364, 754, 1101, 24002, 466, 51073, 51073, 437, 264, 2063, 2445, 307, 884, 13, 51201, 51201, 1692, 307, 437, 321, 600, 1612, 370, 1400, 13, 51307, 51307, 821, 311, 264, 2316, 11, 264, 2316, 311, 9834, 261, 293, 272, 11, 264, 2063, 2445, 508, 295, 261, 293, 272, 11, 382, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.1584630945454473, "compression_ratio": 1.7329842931937174, "no_speech_prob": 0.006485863588750362}, {"id": 4, "seek": 0, "start": 18.86, "end": 26.18, "text": " There's the model, the model's parameters w and b, the cost function J of w and b, as", "tokens": [50364, 682, 264, 1036, 960, 11, 291, 1866, 472, 25801, 295, 264, 2063, 2445, 508, 295, 261, 420, 508, 295, 261, 65, 13, 50799, 50799, 961, 311, 574, 412, 512, 3052, 11, 29021, 5056, 14455, 370, 291, 393, 483, 364, 754, 1101, 24002, 466, 51073, 51073, 437, 264, 2063, 2445, 307, 884, 13, 51201, 51201, 1692, 307, 437, 321, 600, 1612, 370, 1400, 13, 51307, 51307, 821, 311, 264, 2316, 11, 264, 2316, 311, 9834, 261, 293, 272, 11, 264, 2063, 2445, 508, 295, 261, 293, 272, 11, 382, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.1584630945454473, "compression_ratio": 1.7329842931937174, "no_speech_prob": 0.006485863588750362}, {"id": 5, "seek": 2618, "start": 26.18, "end": 31.96, "text": " well as the goal of linear regression, which is to minimize the cost function J of w and", "tokens": [50364, 731, 382, 264, 3387, 295, 8213, 24590, 11, 597, 307, 281, 17522, 264, 2063, 2445, 508, 295, 261, 293, 50653, 50653, 272, 670, 9834, 261, 293, 272, 13, 50833, 50833, 682, 264, 1036, 960, 11, 321, 632, 23750, 992, 272, 281, 4018, 294, 1668, 281, 20460, 264, 5056, 14455, 13, 51139, 51139, 583, 586, 11, 718, 311, 352, 646, 281, 264, 3380, 2316, 365, 1293, 9834, 261, 293, 272, 1553, 3287, 51487, 51487, 272, 281, 312, 2681, 281, 4018, 13, 51595, 51595], "temperature": 0.0, "avg_logprob": -0.15525309244791666, "compression_ratio": 1.5735294117647058, "no_speech_prob": 4.637761776393745e-06}, {"id": 6, "seek": 2618, "start": 31.96, "end": 35.56, "text": " b over parameters w and b.", "tokens": [50364, 731, 382, 264, 3387, 295, 8213, 24590, 11, 597, 307, 281, 17522, 264, 2063, 2445, 508, 295, 261, 293, 50653, 50653, 272, 670, 9834, 261, 293, 272, 13, 50833, 50833, 682, 264, 1036, 960, 11, 321, 632, 23750, 992, 272, 281, 4018, 294, 1668, 281, 20460, 264, 5056, 14455, 13, 51139, 51139, 583, 586, 11, 718, 311, 352, 646, 281, 264, 3380, 2316, 365, 1293, 9834, 261, 293, 272, 1553, 3287, 51487, 51487, 272, 281, 312, 2681, 281, 4018, 13, 51595, 51595], "temperature": 0.0, "avg_logprob": -0.15525309244791666, "compression_ratio": 1.5735294117647058, "no_speech_prob": 4.637761776393745e-06}, {"id": 7, "seek": 2618, "start": 35.56, "end": 41.68, "text": " In the last video, we had temporarily set b to zero in order to simplify the visualizations.", "tokens": [50364, 731, 382, 264, 3387, 295, 8213, 24590, 11, 597, 307, 281, 17522, 264, 2063, 2445, 508, 295, 261, 293, 50653, 50653, 272, 670, 9834, 261, 293, 272, 13, 50833, 50833, 682, 264, 1036, 960, 11, 321, 632, 23750, 992, 272, 281, 4018, 294, 1668, 281, 20460, 264, 5056, 14455, 13, 51139, 51139, 583, 586, 11, 718, 311, 352, 646, 281, 264, 3380, 2316, 365, 1293, 9834, 261, 293, 272, 1553, 3287, 51487, 51487, 272, 281, 312, 2681, 281, 4018, 13, 51595, 51595], "temperature": 0.0, "avg_logprob": -0.15525309244791666, "compression_ratio": 1.5735294117647058, "no_speech_prob": 4.637761776393745e-06}, {"id": 8, "seek": 2618, "start": 41.68, "end": 48.64, "text": " But now, let's go back to the original model with both parameters w and b without setting", "tokens": [50364, 731, 382, 264, 3387, 295, 8213, 24590, 11, 597, 307, 281, 17522, 264, 2063, 2445, 508, 295, 261, 293, 50653, 50653, 272, 670, 9834, 261, 293, 272, 13, 50833, 50833, 682, 264, 1036, 960, 11, 321, 632, 23750, 992, 272, 281, 4018, 294, 1668, 281, 20460, 264, 5056, 14455, 13, 51139, 51139, 583, 586, 11, 718, 311, 352, 646, 281, 264, 3380, 2316, 365, 1293, 9834, 261, 293, 272, 1553, 3287, 51487, 51487, 272, 281, 312, 2681, 281, 4018, 13, 51595, 51595], "temperature": 0.0, "avg_logprob": -0.15525309244791666, "compression_ratio": 1.5735294117647058, "no_speech_prob": 4.637761776393745e-06}, {"id": 9, "seek": 2618, "start": 48.64, "end": 50.8, "text": " b to be equal to zero.", "tokens": [50364, 731, 382, 264, 3387, 295, 8213, 24590, 11, 597, 307, 281, 17522, 264, 2063, 2445, 508, 295, 261, 293, 50653, 50653, 272, 670, 9834, 261, 293, 272, 13, 50833, 50833, 682, 264, 1036, 960, 11, 321, 632, 23750, 992, 272, 281, 4018, 294, 1668, 281, 20460, 264, 5056, 14455, 13, 51139, 51139, 583, 586, 11, 718, 311, 352, 646, 281, 264, 3380, 2316, 365, 1293, 9834, 261, 293, 272, 1553, 3287, 51487, 51487, 272, 281, 312, 2681, 281, 4018, 13, 51595, 51595], "temperature": 0.0, "avg_logprob": -0.15525309244791666, "compression_ratio": 1.5735294117647058, "no_speech_prob": 4.637761776393745e-06}, {"id": 10, "seek": 5080, "start": 50.8, "end": 57.48, "text": " Same as last time, we want to get a visual understanding of the model function f of x,", "tokens": [50364, 10635, 382, 1036, 565, 11, 321, 528, 281, 483, 257, 5056, 3701, 295, 264, 2316, 2445, 283, 295, 2031, 11, 50698, 50698, 4898, 510, 322, 264, 1411, 11, 293, 577, 309, 16155, 281, 264, 2063, 2445, 508, 295, 261, 65, 11, 4898, 510, 322, 51088, 51088, 264, 558, 13, 51138, 51138, 1692, 311, 257, 3097, 992, 295, 1782, 11602, 293, 7901, 13, 51368, 51368, 961, 311, 536, 1888, 472, 1944, 2445, 295, 2031, 11, 411, 341, 472, 13, 51578, 51578, 1692, 286, 600, 992, 261, 281, 1958, 13, 12791, 293, 272, 281, 2625, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15719476038095903, "compression_ratio": 1.5845410628019323, "no_speech_prob": 3.905434368789429e-06}, {"id": 11, "seek": 5080, "start": 57.48, "end": 65.28, "text": " shown here on the left, and how it relates to the cost function J of wb, shown here on", "tokens": [50364, 10635, 382, 1036, 565, 11, 321, 528, 281, 483, 257, 5056, 3701, 295, 264, 2316, 2445, 283, 295, 2031, 11, 50698, 50698, 4898, 510, 322, 264, 1411, 11, 293, 577, 309, 16155, 281, 264, 2063, 2445, 508, 295, 261, 65, 11, 4898, 510, 322, 51088, 51088, 264, 558, 13, 51138, 51138, 1692, 311, 257, 3097, 992, 295, 1782, 11602, 293, 7901, 13, 51368, 51368, 961, 311, 536, 1888, 472, 1944, 2445, 295, 2031, 11, 411, 341, 472, 13, 51578, 51578, 1692, 286, 600, 992, 261, 281, 1958, 13, 12791, 293, 272, 281, 2625, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15719476038095903, "compression_ratio": 1.5845410628019323, "no_speech_prob": 3.905434368789429e-06}, {"id": 12, "seek": 5080, "start": 65.28, "end": 66.28, "text": " the right.", "tokens": [50364, 10635, 382, 1036, 565, 11, 321, 528, 281, 483, 257, 5056, 3701, 295, 264, 2316, 2445, 283, 295, 2031, 11, 50698, 50698, 4898, 510, 322, 264, 1411, 11, 293, 577, 309, 16155, 281, 264, 2063, 2445, 508, 295, 261, 65, 11, 4898, 510, 322, 51088, 51088, 264, 558, 13, 51138, 51138, 1692, 311, 257, 3097, 992, 295, 1782, 11602, 293, 7901, 13, 51368, 51368, 961, 311, 536, 1888, 472, 1944, 2445, 295, 2031, 11, 411, 341, 472, 13, 51578, 51578, 1692, 286, 600, 992, 261, 281, 1958, 13, 12791, 293, 272, 281, 2625, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15719476038095903, "compression_ratio": 1.5845410628019323, "no_speech_prob": 3.905434368789429e-06}, {"id": 13, "seek": 5080, "start": 66.28, "end": 70.88, "text": " Here's a training set of house sizes and prices.", "tokens": [50364, 10635, 382, 1036, 565, 11, 321, 528, 281, 483, 257, 5056, 3701, 295, 264, 2316, 2445, 283, 295, 2031, 11, 50698, 50698, 4898, 510, 322, 264, 1411, 11, 293, 577, 309, 16155, 281, 264, 2063, 2445, 508, 295, 261, 65, 11, 4898, 510, 322, 51088, 51088, 264, 558, 13, 51138, 51138, 1692, 311, 257, 3097, 992, 295, 1782, 11602, 293, 7901, 13, 51368, 51368, 961, 311, 536, 1888, 472, 1944, 2445, 295, 2031, 11, 411, 341, 472, 13, 51578, 51578, 1692, 286, 600, 992, 261, 281, 1958, 13, 12791, 293, 272, 281, 2625, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15719476038095903, "compression_ratio": 1.5845410628019323, "no_speech_prob": 3.905434368789429e-06}, {"id": 14, "seek": 5080, "start": 70.88, "end": 75.08, "text": " Let's see pick one possible function of x, like this one.", "tokens": [50364, 10635, 382, 1036, 565, 11, 321, 528, 281, 483, 257, 5056, 3701, 295, 264, 2316, 2445, 283, 295, 2031, 11, 50698, 50698, 4898, 510, 322, 264, 1411, 11, 293, 577, 309, 16155, 281, 264, 2063, 2445, 508, 295, 261, 65, 11, 4898, 510, 322, 51088, 51088, 264, 558, 13, 51138, 51138, 1692, 311, 257, 3097, 992, 295, 1782, 11602, 293, 7901, 13, 51368, 51368, 961, 311, 536, 1888, 472, 1944, 2445, 295, 2031, 11, 411, 341, 472, 13, 51578, 51578, 1692, 286, 600, 992, 261, 281, 1958, 13, 12791, 293, 272, 281, 2625, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15719476038095903, "compression_ratio": 1.5845410628019323, "no_speech_prob": 3.905434368789429e-06}, {"id": 15, "seek": 5080, "start": 75.08, "end": 80.6, "text": " Here I've set w to 0.06 and b to 50.", "tokens": [50364, 10635, 382, 1036, 565, 11, 321, 528, 281, 483, 257, 5056, 3701, 295, 264, 2316, 2445, 283, 295, 2031, 11, 50698, 50698, 4898, 510, 322, 264, 1411, 11, 293, 577, 309, 16155, 281, 264, 2063, 2445, 508, 295, 261, 65, 11, 4898, 510, 322, 51088, 51088, 264, 558, 13, 51138, 51138, 1692, 311, 257, 3097, 992, 295, 1782, 11602, 293, 7901, 13, 51368, 51368, 961, 311, 536, 1888, 472, 1944, 2445, 295, 2031, 11, 411, 341, 472, 13, 51578, 51578, 1692, 286, 600, 992, 261, 281, 1958, 13, 12791, 293, 272, 281, 2625, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15719476038095903, "compression_ratio": 1.5845410628019323, "no_speech_prob": 3.905434368789429e-06}, {"id": 16, "seek": 8060, "start": 80.6, "end": 85.91999999999999, "text": " So f of x is 0.06 times x plus 50.", "tokens": [50364, 407, 283, 295, 2031, 307, 1958, 13, 12791, 1413, 2031, 1804, 2625, 13, 50630, 50630, 11633, 300, 341, 307, 406, 257, 4098, 665, 2316, 337, 341, 3097, 992, 13, 50782, 50782, 467, 311, 767, 257, 1238, 1578, 2316, 13, 50882, 50882, 467, 2544, 281, 14961, 35826, 6849, 7901, 13, 51104, 51104, 18600, 613, 4190, 337, 261, 293, 272, 11, 718, 311, 574, 412, 437, 264, 2063, 2445, 508, 295, 261, 293, 272, 815, 51414, 51414, 574, 411, 13, 51464, 51464, 9647, 336, 437, 321, 1866, 1036, 565, 390, 562, 291, 632, 787, 261, 570, 321, 23750, 992, 272, 281, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.16202258137823308, "compression_ratio": 1.5346938775510204, "no_speech_prob": 3.237724968130351e-06}, {"id": 17, "seek": 8060, "start": 85.91999999999999, "end": 88.96, "text": " Note that this is not a particularly good model for this training set.", "tokens": [50364, 407, 283, 295, 2031, 307, 1958, 13, 12791, 1413, 2031, 1804, 2625, 13, 50630, 50630, 11633, 300, 341, 307, 406, 257, 4098, 665, 2316, 337, 341, 3097, 992, 13, 50782, 50782, 467, 311, 767, 257, 1238, 1578, 2316, 13, 50882, 50882, 467, 2544, 281, 14961, 35826, 6849, 7901, 13, 51104, 51104, 18600, 613, 4190, 337, 261, 293, 272, 11, 718, 311, 574, 412, 437, 264, 2063, 2445, 508, 295, 261, 293, 272, 815, 51414, 51414, 574, 411, 13, 51464, 51464, 9647, 336, 437, 321, 1866, 1036, 565, 390, 562, 291, 632, 787, 261, 570, 321, 23750, 992, 272, 281, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.16202258137823308, "compression_ratio": 1.5346938775510204, "no_speech_prob": 3.237724968130351e-06}, {"id": 18, "seek": 8060, "start": 88.96, "end": 90.96, "text": " It's actually a pretty bad model.", "tokens": [50364, 407, 283, 295, 2031, 307, 1958, 13, 12791, 1413, 2031, 1804, 2625, 13, 50630, 50630, 11633, 300, 341, 307, 406, 257, 4098, 665, 2316, 337, 341, 3097, 992, 13, 50782, 50782, 467, 311, 767, 257, 1238, 1578, 2316, 13, 50882, 50882, 467, 2544, 281, 14961, 35826, 6849, 7901, 13, 51104, 51104, 18600, 613, 4190, 337, 261, 293, 272, 11, 718, 311, 574, 412, 437, 264, 2063, 2445, 508, 295, 261, 293, 272, 815, 51414, 51414, 574, 411, 13, 51464, 51464, 9647, 336, 437, 321, 1866, 1036, 565, 390, 562, 291, 632, 787, 261, 570, 321, 23750, 992, 272, 281, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.16202258137823308, "compression_ratio": 1.5346938775510204, "no_speech_prob": 3.237724968130351e-06}, {"id": 19, "seek": 8060, "start": 90.96, "end": 95.39999999999999, "text": " It seems to consistently underestimate housing prices.", "tokens": [50364, 407, 283, 295, 2031, 307, 1958, 13, 12791, 1413, 2031, 1804, 2625, 13, 50630, 50630, 11633, 300, 341, 307, 406, 257, 4098, 665, 2316, 337, 341, 3097, 992, 13, 50782, 50782, 467, 311, 767, 257, 1238, 1578, 2316, 13, 50882, 50882, 467, 2544, 281, 14961, 35826, 6849, 7901, 13, 51104, 51104, 18600, 613, 4190, 337, 261, 293, 272, 11, 718, 311, 574, 412, 437, 264, 2063, 2445, 508, 295, 261, 293, 272, 815, 51414, 51414, 574, 411, 13, 51464, 51464, 9647, 336, 437, 321, 1866, 1036, 565, 390, 562, 291, 632, 787, 261, 570, 321, 23750, 992, 272, 281, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.16202258137823308, "compression_ratio": 1.5346938775510204, "no_speech_prob": 3.237724968130351e-06}, {"id": 20, "seek": 8060, "start": 95.39999999999999, "end": 101.6, "text": " Given these values for w and b, let's look at what the cost function J of w and b may", "tokens": [50364, 407, 283, 295, 2031, 307, 1958, 13, 12791, 1413, 2031, 1804, 2625, 13, 50630, 50630, 11633, 300, 341, 307, 406, 257, 4098, 665, 2316, 337, 341, 3097, 992, 13, 50782, 50782, 467, 311, 767, 257, 1238, 1578, 2316, 13, 50882, 50882, 467, 2544, 281, 14961, 35826, 6849, 7901, 13, 51104, 51104, 18600, 613, 4190, 337, 261, 293, 272, 11, 718, 311, 574, 412, 437, 264, 2063, 2445, 508, 295, 261, 293, 272, 815, 51414, 51414, 574, 411, 13, 51464, 51464, 9647, 336, 437, 321, 1866, 1036, 565, 390, 562, 291, 632, 787, 261, 570, 321, 23750, 992, 272, 281, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.16202258137823308, "compression_ratio": 1.5346938775510204, "no_speech_prob": 3.237724968130351e-06}, {"id": 21, "seek": 8060, "start": 101.6, "end": 102.6, "text": " look like.", "tokens": [50364, 407, 283, 295, 2031, 307, 1958, 13, 12791, 1413, 2031, 1804, 2625, 13, 50630, 50630, 11633, 300, 341, 307, 406, 257, 4098, 665, 2316, 337, 341, 3097, 992, 13, 50782, 50782, 467, 311, 767, 257, 1238, 1578, 2316, 13, 50882, 50882, 467, 2544, 281, 14961, 35826, 6849, 7901, 13, 51104, 51104, 18600, 613, 4190, 337, 261, 293, 272, 11, 718, 311, 574, 412, 437, 264, 2063, 2445, 508, 295, 261, 293, 272, 815, 51414, 51414, 574, 411, 13, 51464, 51464, 9647, 336, 437, 321, 1866, 1036, 565, 390, 562, 291, 632, 787, 261, 570, 321, 23750, 992, 272, 281, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.16202258137823308, "compression_ratio": 1.5346938775510204, "no_speech_prob": 3.237724968130351e-06}, {"id": 22, "seek": 8060, "start": 102.6, "end": 110.0, "text": " Recall what we saw last time was when you had only w because we temporarily set b to", "tokens": [50364, 407, 283, 295, 2031, 307, 1958, 13, 12791, 1413, 2031, 1804, 2625, 13, 50630, 50630, 11633, 300, 341, 307, 406, 257, 4098, 665, 2316, 337, 341, 3097, 992, 13, 50782, 50782, 467, 311, 767, 257, 1238, 1578, 2316, 13, 50882, 50882, 467, 2544, 281, 14961, 35826, 6849, 7901, 13, 51104, 51104, 18600, 613, 4190, 337, 261, 293, 272, 11, 718, 311, 574, 412, 437, 264, 2063, 2445, 508, 295, 261, 293, 272, 815, 51414, 51414, 574, 411, 13, 51464, 51464, 9647, 336, 437, 321, 1866, 1036, 565, 390, 562, 291, 632, 787, 261, 570, 321, 23750, 992, 272, 281, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.16202258137823308, "compression_ratio": 1.5346938775510204, "no_speech_prob": 3.237724968130351e-06}, {"id": 23, "seek": 11000, "start": 110.0, "end": 111.8, "text": " zero to simplify things.", "tokens": [50364, 4018, 281, 20460, 721, 13, 50454, 50454, 5833, 550, 11, 321, 632, 808, 493, 365, 257, 7542, 295, 264, 2063, 2445, 300, 2956, 411, 341, 382, 257, 2445, 50764, 50764, 295, 261, 787, 13, 50888, 50888, 407, 562, 321, 632, 787, 472, 13075, 261, 11, 264, 2063, 2445, 632, 341, 344, 12, 23103, 7605, 11, 13475, 257, 51218, 51218, 857, 411, 257, 7884, 6571, 13, 51312, 51312, 663, 3263, 4809, 13, 51402, 51402, 823, 11, 294, 341, 6849, 3218, 1365, 300, 321, 362, 322, 341, 4137, 11, 321, 362, 732, 9834, 11, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1888709863026937, "compression_ratio": 1.6714285714285715, "no_speech_prob": 2.4824594220262952e-06}, {"id": 24, "seek": 11000, "start": 111.8, "end": 118.0, "text": " Back then, we had come up with a plot of the cost function that looked like this as a function", "tokens": [50364, 4018, 281, 20460, 721, 13, 50454, 50454, 5833, 550, 11, 321, 632, 808, 493, 365, 257, 7542, 295, 264, 2063, 2445, 300, 2956, 411, 341, 382, 257, 2445, 50764, 50764, 295, 261, 787, 13, 50888, 50888, 407, 562, 321, 632, 787, 472, 13075, 261, 11, 264, 2063, 2445, 632, 341, 344, 12, 23103, 7605, 11, 13475, 257, 51218, 51218, 857, 411, 257, 7884, 6571, 13, 51312, 51312, 663, 3263, 4809, 13, 51402, 51402, 823, 11, 294, 341, 6849, 3218, 1365, 300, 321, 362, 322, 341, 4137, 11, 321, 362, 732, 9834, 11, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1888709863026937, "compression_ratio": 1.6714285714285715, "no_speech_prob": 2.4824594220262952e-06}, {"id": 25, "seek": 11000, "start": 118.0, "end": 120.48, "text": " of w only.", "tokens": [50364, 4018, 281, 20460, 721, 13, 50454, 50454, 5833, 550, 11, 321, 632, 808, 493, 365, 257, 7542, 295, 264, 2063, 2445, 300, 2956, 411, 341, 382, 257, 2445, 50764, 50764, 295, 261, 787, 13, 50888, 50888, 407, 562, 321, 632, 787, 472, 13075, 261, 11, 264, 2063, 2445, 632, 341, 344, 12, 23103, 7605, 11, 13475, 257, 51218, 51218, 857, 411, 257, 7884, 6571, 13, 51312, 51312, 663, 3263, 4809, 13, 51402, 51402, 823, 11, 294, 341, 6849, 3218, 1365, 300, 321, 362, 322, 341, 4137, 11, 321, 362, 732, 9834, 11, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1888709863026937, "compression_ratio": 1.6714285714285715, "no_speech_prob": 2.4824594220262952e-06}, {"id": 26, "seek": 11000, "start": 120.48, "end": 127.08, "text": " So when we had only one parameter w, the cost function had this u-shaped curve, shaped a", "tokens": [50364, 4018, 281, 20460, 721, 13, 50454, 50454, 5833, 550, 11, 321, 632, 808, 493, 365, 257, 7542, 295, 264, 2063, 2445, 300, 2956, 411, 341, 382, 257, 2445, 50764, 50764, 295, 261, 787, 13, 50888, 50888, 407, 562, 321, 632, 787, 472, 13075, 261, 11, 264, 2063, 2445, 632, 341, 344, 12, 23103, 7605, 11, 13475, 257, 51218, 51218, 857, 411, 257, 7884, 6571, 13, 51312, 51312, 663, 3263, 4809, 13, 51402, 51402, 823, 11, 294, 341, 6849, 3218, 1365, 300, 321, 362, 322, 341, 4137, 11, 321, 362, 732, 9834, 11, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1888709863026937, "compression_ratio": 1.6714285714285715, "no_speech_prob": 2.4824594220262952e-06}, {"id": 27, "seek": 11000, "start": 127.08, "end": 128.96, "text": " bit like a soup bowl.", "tokens": [50364, 4018, 281, 20460, 721, 13, 50454, 50454, 5833, 550, 11, 321, 632, 808, 493, 365, 257, 7542, 295, 264, 2063, 2445, 300, 2956, 411, 341, 382, 257, 2445, 50764, 50764, 295, 261, 787, 13, 50888, 50888, 407, 562, 321, 632, 787, 472, 13075, 261, 11, 264, 2063, 2445, 632, 341, 344, 12, 23103, 7605, 11, 13475, 257, 51218, 51218, 857, 411, 257, 7884, 6571, 13, 51312, 51312, 663, 3263, 4809, 13, 51402, 51402, 823, 11, 294, 341, 6849, 3218, 1365, 300, 321, 362, 322, 341, 4137, 11, 321, 362, 732, 9834, 11, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1888709863026937, "compression_ratio": 1.6714285714285715, "no_speech_prob": 2.4824594220262952e-06}, {"id": 28, "seek": 11000, "start": 128.96, "end": 130.76, "text": " That sounds delicious.", "tokens": [50364, 4018, 281, 20460, 721, 13, 50454, 50454, 5833, 550, 11, 321, 632, 808, 493, 365, 257, 7542, 295, 264, 2063, 2445, 300, 2956, 411, 341, 382, 257, 2445, 50764, 50764, 295, 261, 787, 13, 50888, 50888, 407, 562, 321, 632, 787, 472, 13075, 261, 11, 264, 2063, 2445, 632, 341, 344, 12, 23103, 7605, 11, 13475, 257, 51218, 51218, 857, 411, 257, 7884, 6571, 13, 51312, 51312, 663, 3263, 4809, 13, 51402, 51402, 823, 11, 294, 341, 6849, 3218, 1365, 300, 321, 362, 322, 341, 4137, 11, 321, 362, 732, 9834, 11, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1888709863026937, "compression_ratio": 1.6714285714285715, "no_speech_prob": 2.4824594220262952e-06}, {"id": 29, "seek": 11000, "start": 130.76, "end": 138.12, "text": " Now, in this housing price example that we have on this slide, we have two parameters,", "tokens": [50364, 4018, 281, 20460, 721, 13, 50454, 50454, 5833, 550, 11, 321, 632, 808, 493, 365, 257, 7542, 295, 264, 2063, 2445, 300, 2956, 411, 341, 382, 257, 2445, 50764, 50764, 295, 261, 787, 13, 50888, 50888, 407, 562, 321, 632, 787, 472, 13075, 261, 11, 264, 2063, 2445, 632, 341, 344, 12, 23103, 7605, 11, 13475, 257, 51218, 51218, 857, 411, 257, 7884, 6571, 13, 51312, 51312, 663, 3263, 4809, 13, 51402, 51402, 823, 11, 294, 341, 6849, 3218, 1365, 300, 321, 362, 322, 341, 4137, 11, 321, 362, 732, 9834, 11, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1888709863026937, "compression_ratio": 1.6714285714285715, "no_speech_prob": 2.4824594220262952e-06}, {"id": 30, "seek": 13812, "start": 138.12, "end": 144.20000000000002, "text": " w and b, and so the plot becomes a little more complex.", "tokens": [50364, 261, 293, 272, 11, 293, 370, 264, 7542, 3643, 257, 707, 544, 3997, 13, 50668, 50668, 467, 4523, 484, 300, 264, 2063, 2445, 611, 575, 257, 2531, 3909, 11, 411, 257, 7884, 6571, 11, 3993, 51062, 51062, 294, 1045, 12819, 2602, 295, 732, 13, 51210, 51210, 682, 1186, 11, 5413, 322, 428, 3097, 992, 11, 264, 2063, 2445, 486, 574, 746, 411, 341, 13, 51506, 51506, 1407, 385, 11, 341, 1542, 411, 257, 7884, 6571, 11, 1310, 570, 286, 478, 257, 707, 857, 8067, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.10961794049552318, "compression_ratio": 1.6490384615384615, "no_speech_prob": 1.0348489922762383e-06}, {"id": 31, "seek": 13812, "start": 144.20000000000002, "end": 152.08, "text": " It turns out that the cost function also has a similar shape, like a soup bowl, except", "tokens": [50364, 261, 293, 272, 11, 293, 370, 264, 7542, 3643, 257, 707, 544, 3997, 13, 50668, 50668, 467, 4523, 484, 300, 264, 2063, 2445, 611, 575, 257, 2531, 3909, 11, 411, 257, 7884, 6571, 11, 3993, 51062, 51062, 294, 1045, 12819, 2602, 295, 732, 13, 51210, 51210, 682, 1186, 11, 5413, 322, 428, 3097, 992, 11, 264, 2063, 2445, 486, 574, 746, 411, 341, 13, 51506, 51506, 1407, 385, 11, 341, 1542, 411, 257, 7884, 6571, 11, 1310, 570, 286, 478, 257, 707, 857, 8067, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.10961794049552318, "compression_ratio": 1.6490384615384615, "no_speech_prob": 1.0348489922762383e-06}, {"id": 32, "seek": 13812, "start": 152.08, "end": 155.04000000000002, "text": " in three dimensions instead of two.", "tokens": [50364, 261, 293, 272, 11, 293, 370, 264, 7542, 3643, 257, 707, 544, 3997, 13, 50668, 50668, 467, 4523, 484, 300, 264, 2063, 2445, 611, 575, 257, 2531, 3909, 11, 411, 257, 7884, 6571, 11, 3993, 51062, 51062, 294, 1045, 12819, 2602, 295, 732, 13, 51210, 51210, 682, 1186, 11, 5413, 322, 428, 3097, 992, 11, 264, 2063, 2445, 486, 574, 746, 411, 341, 13, 51506, 51506, 1407, 385, 11, 341, 1542, 411, 257, 7884, 6571, 11, 1310, 570, 286, 478, 257, 707, 857, 8067, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.10961794049552318, "compression_ratio": 1.6490384615384615, "no_speech_prob": 1.0348489922762383e-06}, {"id": 33, "seek": 13812, "start": 155.04000000000002, "end": 160.96, "text": " In fact, depending on your training set, the cost function will look something like this.", "tokens": [50364, 261, 293, 272, 11, 293, 370, 264, 7542, 3643, 257, 707, 544, 3997, 13, 50668, 50668, 467, 4523, 484, 300, 264, 2063, 2445, 611, 575, 257, 2531, 3909, 11, 411, 257, 7884, 6571, 11, 3993, 51062, 51062, 294, 1045, 12819, 2602, 295, 732, 13, 51210, 51210, 682, 1186, 11, 5413, 322, 428, 3097, 992, 11, 264, 2063, 2445, 486, 574, 746, 411, 341, 13, 51506, 51506, 1407, 385, 11, 341, 1542, 411, 257, 7884, 6571, 11, 1310, 570, 286, 478, 257, 707, 857, 8067, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.10961794049552318, "compression_ratio": 1.6490384615384615, "no_speech_prob": 1.0348489922762383e-06}, {"id": 34, "seek": 13812, "start": 160.96, "end": 165.6, "text": " To me, this looks like a soup bowl, maybe because I'm a little bit hungry.", "tokens": [50364, 261, 293, 272, 11, 293, 370, 264, 7542, 3643, 257, 707, 544, 3997, 13, 50668, 50668, 467, 4523, 484, 300, 264, 2063, 2445, 611, 575, 257, 2531, 3909, 11, 411, 257, 7884, 6571, 11, 3993, 51062, 51062, 294, 1045, 12819, 2602, 295, 732, 13, 51210, 51210, 682, 1186, 11, 5413, 322, 428, 3097, 992, 11, 264, 2063, 2445, 486, 574, 746, 411, 341, 13, 51506, 51506, 1407, 385, 11, 341, 1542, 411, 257, 7884, 6571, 11, 1310, 570, 286, 478, 257, 707, 857, 8067, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.10961794049552318, "compression_ratio": 1.6490384615384615, "no_speech_prob": 1.0348489922762383e-06}, {"id": 35, "seek": 16560, "start": 165.6, "end": 170.6, "text": " Or maybe to you, it looks like a curved dinner plate or a hammock.", "tokens": [50364, 1610, 1310, 281, 291, 11, 309, 1542, 411, 257, 24991, 6148, 5924, 420, 257, 36600, 1560, 13, 50614, 50614, 5135, 11, 300, 3263, 20103, 886, 13, 50714, 50714, 400, 456, 311, 428, 13551, 2822, 13, 50882, 50882, 2704, 562, 291, 434, 1096, 365, 341, 1164, 11, 291, 820, 2387, 1803, 281, 12830, 293, 5789, 51080, 51080, 294, 257, 36600, 1560, 411, 341, 13, 51172, 51172, 708, 291, 536, 510, 307, 257, 805, 35, 3753, 7542, 689, 264, 35387, 366, 21335, 261, 293, 272, 13, 51528, 51528, 407, 382, 291, 10559, 261, 293, 272, 11, 597, 366, 264, 732, 9834, 295, 264, 2316, 11, 291, 483, 819, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.13148956298828124, "compression_ratio": 1.6023622047244095, "no_speech_prob": 2.3320610580412904e-06}, {"id": 36, "seek": 16560, "start": 170.6, "end": 172.6, "text": " Actually, that sounds relaxing too.", "tokens": [50364, 1610, 1310, 281, 291, 11, 309, 1542, 411, 257, 24991, 6148, 5924, 420, 257, 36600, 1560, 13, 50614, 50614, 5135, 11, 300, 3263, 20103, 886, 13, 50714, 50714, 400, 456, 311, 428, 13551, 2822, 13, 50882, 50882, 2704, 562, 291, 434, 1096, 365, 341, 1164, 11, 291, 820, 2387, 1803, 281, 12830, 293, 5789, 51080, 51080, 294, 257, 36600, 1560, 411, 341, 13, 51172, 51172, 708, 291, 536, 510, 307, 257, 805, 35, 3753, 7542, 689, 264, 35387, 366, 21335, 261, 293, 272, 13, 51528, 51528, 407, 382, 291, 10559, 261, 293, 272, 11, 597, 366, 264, 732, 9834, 295, 264, 2316, 11, 291, 483, 819, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.13148956298828124, "compression_ratio": 1.6023622047244095, "no_speech_prob": 2.3320610580412904e-06}, {"id": 37, "seek": 16560, "start": 172.6, "end": 175.95999999999998, "text": " And there's your coconut drink.", "tokens": [50364, 1610, 1310, 281, 291, 11, 309, 1542, 411, 257, 24991, 6148, 5924, 420, 257, 36600, 1560, 13, 50614, 50614, 5135, 11, 300, 3263, 20103, 886, 13, 50714, 50714, 400, 456, 311, 428, 13551, 2822, 13, 50882, 50882, 2704, 562, 291, 434, 1096, 365, 341, 1164, 11, 291, 820, 2387, 1803, 281, 12830, 293, 5789, 51080, 51080, 294, 257, 36600, 1560, 411, 341, 13, 51172, 51172, 708, 291, 536, 510, 307, 257, 805, 35, 3753, 7542, 689, 264, 35387, 366, 21335, 261, 293, 272, 13, 51528, 51528, 407, 382, 291, 10559, 261, 293, 272, 11, 597, 366, 264, 732, 9834, 295, 264, 2316, 11, 291, 483, 819, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.13148956298828124, "compression_ratio": 1.6023622047244095, "no_speech_prob": 2.3320610580412904e-06}, {"id": 38, "seek": 16560, "start": 175.95999999999998, "end": 179.92, "text": " Maybe when you're done with this course, you should treat yourself to vacation and relax", "tokens": [50364, 1610, 1310, 281, 291, 11, 309, 1542, 411, 257, 24991, 6148, 5924, 420, 257, 36600, 1560, 13, 50614, 50614, 5135, 11, 300, 3263, 20103, 886, 13, 50714, 50714, 400, 456, 311, 428, 13551, 2822, 13, 50882, 50882, 2704, 562, 291, 434, 1096, 365, 341, 1164, 11, 291, 820, 2387, 1803, 281, 12830, 293, 5789, 51080, 51080, 294, 257, 36600, 1560, 411, 341, 13, 51172, 51172, 708, 291, 536, 510, 307, 257, 805, 35, 3753, 7542, 689, 264, 35387, 366, 21335, 261, 293, 272, 13, 51528, 51528, 407, 382, 291, 10559, 261, 293, 272, 11, 597, 366, 264, 732, 9834, 295, 264, 2316, 11, 291, 483, 819, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.13148956298828124, "compression_ratio": 1.6023622047244095, "no_speech_prob": 2.3320610580412904e-06}, {"id": 39, "seek": 16560, "start": 179.92, "end": 181.76, "text": " in a hammock like this.", "tokens": [50364, 1610, 1310, 281, 291, 11, 309, 1542, 411, 257, 24991, 6148, 5924, 420, 257, 36600, 1560, 13, 50614, 50614, 5135, 11, 300, 3263, 20103, 886, 13, 50714, 50714, 400, 456, 311, 428, 13551, 2822, 13, 50882, 50882, 2704, 562, 291, 434, 1096, 365, 341, 1164, 11, 291, 820, 2387, 1803, 281, 12830, 293, 5789, 51080, 51080, 294, 257, 36600, 1560, 411, 341, 13, 51172, 51172, 708, 291, 536, 510, 307, 257, 805, 35, 3753, 7542, 689, 264, 35387, 366, 21335, 261, 293, 272, 13, 51528, 51528, 407, 382, 291, 10559, 261, 293, 272, 11, 597, 366, 264, 732, 9834, 295, 264, 2316, 11, 291, 483, 819, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.13148956298828124, "compression_ratio": 1.6023622047244095, "no_speech_prob": 2.3320610580412904e-06}, {"id": 40, "seek": 16560, "start": 181.76, "end": 188.88, "text": " What you see here is a 3D surface plot where the axes are labeled w and b.", "tokens": [50364, 1610, 1310, 281, 291, 11, 309, 1542, 411, 257, 24991, 6148, 5924, 420, 257, 36600, 1560, 13, 50614, 50614, 5135, 11, 300, 3263, 20103, 886, 13, 50714, 50714, 400, 456, 311, 428, 13551, 2822, 13, 50882, 50882, 2704, 562, 291, 434, 1096, 365, 341, 1164, 11, 291, 820, 2387, 1803, 281, 12830, 293, 5789, 51080, 51080, 294, 257, 36600, 1560, 411, 341, 13, 51172, 51172, 708, 291, 536, 510, 307, 257, 805, 35, 3753, 7542, 689, 264, 35387, 366, 21335, 261, 293, 272, 13, 51528, 51528, 407, 382, 291, 10559, 261, 293, 272, 11, 597, 366, 264, 732, 9834, 295, 264, 2316, 11, 291, 483, 819, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.13148956298828124, "compression_ratio": 1.6023622047244095, "no_speech_prob": 2.3320610580412904e-06}, {"id": 41, "seek": 16560, "start": 188.88, "end": 194.51999999999998, "text": " So as you vary w and b, which are the two parameters of the model, you get different", "tokens": [50364, 1610, 1310, 281, 291, 11, 309, 1542, 411, 257, 24991, 6148, 5924, 420, 257, 36600, 1560, 13, 50614, 50614, 5135, 11, 300, 3263, 20103, 886, 13, 50714, 50714, 400, 456, 311, 428, 13551, 2822, 13, 50882, 50882, 2704, 562, 291, 434, 1096, 365, 341, 1164, 11, 291, 820, 2387, 1803, 281, 12830, 293, 5789, 51080, 51080, 294, 257, 36600, 1560, 411, 341, 13, 51172, 51172, 708, 291, 536, 510, 307, 257, 805, 35, 3753, 7542, 689, 264, 35387, 366, 21335, 261, 293, 272, 13, 51528, 51528, 407, 382, 291, 10559, 261, 293, 272, 11, 597, 366, 264, 732, 9834, 295, 264, 2316, 11, 291, 483, 819, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.13148956298828124, "compression_ratio": 1.6023622047244095, "no_speech_prob": 2.3320610580412904e-06}, {"id": 42, "seek": 19452, "start": 194.52, "end": 199.44, "text": " values for the cost function j of w and b.", "tokens": [50364, 4190, 337, 264, 2063, 2445, 361, 295, 261, 293, 272, 13, 50610, 50610, 639, 307, 257, 688, 411, 264, 344, 12, 23103, 7605, 291, 1866, 294, 264, 1036, 960, 11, 3993, 2602, 295, 1419, 50866, 50866, 472, 13075, 11, 261, 11, 382, 4846, 294, 264, 361, 11, 291, 586, 362, 732, 9834, 11, 261, 293, 272, 11, 382, 15743, 666, 51236, 51236, 341, 7884, 6571, 420, 341, 36600, 1560, 12, 23103, 2445, 361, 13, 51430, 51430, 400, 286, 445, 528, 281, 935, 484, 300, 604, 2167, 935, 322, 264, 3753, 8855, 257, 1729, 51664, 51664, 3922, 295, 261, 293, 272, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14513137454078312, "compression_ratio": 1.6858407079646018, "no_speech_prob": 3.785270564549137e-06}, {"id": 43, "seek": 19452, "start": 199.44, "end": 204.56, "text": " This is a lot like the u-shaped curve you saw in the last video, except instead of having", "tokens": [50364, 4190, 337, 264, 2063, 2445, 361, 295, 261, 293, 272, 13, 50610, 50610, 639, 307, 257, 688, 411, 264, 344, 12, 23103, 7605, 291, 1866, 294, 264, 1036, 960, 11, 3993, 2602, 295, 1419, 50866, 50866, 472, 13075, 11, 261, 11, 382, 4846, 294, 264, 361, 11, 291, 586, 362, 732, 9834, 11, 261, 293, 272, 11, 382, 15743, 666, 51236, 51236, 341, 7884, 6571, 420, 341, 36600, 1560, 12, 23103, 2445, 361, 13, 51430, 51430, 400, 286, 445, 528, 281, 935, 484, 300, 604, 2167, 935, 322, 264, 3753, 8855, 257, 1729, 51664, 51664, 3922, 295, 261, 293, 272, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14513137454078312, "compression_ratio": 1.6858407079646018, "no_speech_prob": 3.785270564549137e-06}, {"id": 44, "seek": 19452, "start": 204.56, "end": 211.96, "text": " one parameter, w, as input in the j, you now have two parameters, w and b, as inputs into", "tokens": [50364, 4190, 337, 264, 2063, 2445, 361, 295, 261, 293, 272, 13, 50610, 50610, 639, 307, 257, 688, 411, 264, 344, 12, 23103, 7605, 291, 1866, 294, 264, 1036, 960, 11, 3993, 2602, 295, 1419, 50866, 50866, 472, 13075, 11, 261, 11, 382, 4846, 294, 264, 361, 11, 291, 586, 362, 732, 9834, 11, 261, 293, 272, 11, 382, 15743, 666, 51236, 51236, 341, 7884, 6571, 420, 341, 36600, 1560, 12, 23103, 2445, 361, 13, 51430, 51430, 400, 286, 445, 528, 281, 935, 484, 300, 604, 2167, 935, 322, 264, 3753, 8855, 257, 1729, 51664, 51664, 3922, 295, 261, 293, 272, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14513137454078312, "compression_ratio": 1.6858407079646018, "no_speech_prob": 3.785270564549137e-06}, {"id": 45, "seek": 19452, "start": 211.96, "end": 215.84, "text": " this soup bowl or this hammock-shaped function j.", "tokens": [50364, 4190, 337, 264, 2063, 2445, 361, 295, 261, 293, 272, 13, 50610, 50610, 639, 307, 257, 688, 411, 264, 344, 12, 23103, 7605, 291, 1866, 294, 264, 1036, 960, 11, 3993, 2602, 295, 1419, 50866, 50866, 472, 13075, 11, 261, 11, 382, 4846, 294, 264, 361, 11, 291, 586, 362, 732, 9834, 11, 261, 293, 272, 11, 382, 15743, 666, 51236, 51236, 341, 7884, 6571, 420, 341, 36600, 1560, 12, 23103, 2445, 361, 13, 51430, 51430, 400, 286, 445, 528, 281, 935, 484, 300, 604, 2167, 935, 322, 264, 3753, 8855, 257, 1729, 51664, 51664, 3922, 295, 261, 293, 272, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14513137454078312, "compression_ratio": 1.6858407079646018, "no_speech_prob": 3.785270564549137e-06}, {"id": 46, "seek": 19452, "start": 215.84, "end": 220.52, "text": " And I just want to point out that any single point on the surface represents a particular", "tokens": [50364, 4190, 337, 264, 2063, 2445, 361, 295, 261, 293, 272, 13, 50610, 50610, 639, 307, 257, 688, 411, 264, 344, 12, 23103, 7605, 291, 1866, 294, 264, 1036, 960, 11, 3993, 2602, 295, 1419, 50866, 50866, 472, 13075, 11, 261, 11, 382, 4846, 294, 264, 361, 11, 291, 586, 362, 732, 9834, 11, 261, 293, 272, 11, 382, 15743, 666, 51236, 51236, 341, 7884, 6571, 420, 341, 36600, 1560, 12, 23103, 2445, 361, 13, 51430, 51430, 400, 286, 445, 528, 281, 935, 484, 300, 604, 2167, 935, 322, 264, 3753, 8855, 257, 1729, 51664, 51664, 3922, 295, 261, 293, 272, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14513137454078312, "compression_ratio": 1.6858407079646018, "no_speech_prob": 3.785270564549137e-06}, {"id": 47, "seek": 19452, "start": 220.52, "end": 223.72, "text": " choice of w and b.", "tokens": [50364, 4190, 337, 264, 2063, 2445, 361, 295, 261, 293, 272, 13, 50610, 50610, 639, 307, 257, 688, 411, 264, 344, 12, 23103, 7605, 291, 1866, 294, 264, 1036, 960, 11, 3993, 2602, 295, 1419, 50866, 50866, 472, 13075, 11, 261, 11, 382, 4846, 294, 264, 361, 11, 291, 586, 362, 732, 9834, 11, 261, 293, 272, 11, 382, 15743, 666, 51236, 51236, 341, 7884, 6571, 420, 341, 36600, 1560, 12, 23103, 2445, 361, 13, 51430, 51430, 400, 286, 445, 528, 281, 935, 484, 300, 604, 2167, 935, 322, 264, 3753, 8855, 257, 1729, 51664, 51664, 3922, 295, 261, 293, 272, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14513137454078312, "compression_ratio": 1.6858407079646018, "no_speech_prob": 3.785270564549137e-06}, {"id": 48, "seek": 22372, "start": 223.72, "end": 232.32, "text": " For example, if w was minus 10 and b was minus 15, then the height of the surface above this", "tokens": [50364, 1171, 1365, 11, 498, 261, 390, 3175, 1266, 293, 272, 390, 3175, 2119, 11, 550, 264, 6681, 295, 264, 3753, 3673, 341, 50794, 50794, 935, 307, 264, 2158, 295, 361, 562, 261, 307, 3175, 1266, 293, 272, 307, 3175, 2119, 13, 51180, 51180, 823, 294, 1668, 281, 574, 754, 544, 8185, 412, 2685, 2793, 11, 456, 311, 1071, 636, 295, 41178, 51474, 51474, 264, 2063, 2445, 361, 300, 576, 312, 4420, 337, 25801, 11, 597, 307, 2831, 813, 1228, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.07884704061301358, "compression_ratio": 1.5734597156398105, "no_speech_prob": 2.8129959446232533e-06}, {"id": 49, "seek": 22372, "start": 232.32, "end": 240.04, "text": " point is the value of j when w is minus 10 and b is minus 15.", "tokens": [50364, 1171, 1365, 11, 498, 261, 390, 3175, 1266, 293, 272, 390, 3175, 2119, 11, 550, 264, 6681, 295, 264, 3753, 3673, 341, 50794, 50794, 935, 307, 264, 2158, 295, 361, 562, 261, 307, 3175, 1266, 293, 272, 307, 3175, 2119, 13, 51180, 51180, 823, 294, 1668, 281, 574, 754, 544, 8185, 412, 2685, 2793, 11, 456, 311, 1071, 636, 295, 41178, 51474, 51474, 264, 2063, 2445, 361, 300, 576, 312, 4420, 337, 25801, 11, 597, 307, 2831, 813, 1228, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.07884704061301358, "compression_ratio": 1.5734597156398105, "no_speech_prob": 2.8129959446232533e-06}, {"id": 50, "seek": 22372, "start": 240.04, "end": 245.92, "text": " Now in order to look even more closely at specific points, there's another way of plotting", "tokens": [50364, 1171, 1365, 11, 498, 261, 390, 3175, 1266, 293, 272, 390, 3175, 2119, 11, 550, 264, 6681, 295, 264, 3753, 3673, 341, 50794, 50794, 935, 307, 264, 2158, 295, 361, 562, 261, 307, 3175, 1266, 293, 272, 307, 3175, 2119, 13, 51180, 51180, 823, 294, 1668, 281, 574, 754, 544, 8185, 412, 2685, 2793, 11, 456, 311, 1071, 636, 295, 41178, 51474, 51474, 264, 2063, 2445, 361, 300, 576, 312, 4420, 337, 25801, 11, 597, 307, 2831, 813, 1228, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.07884704061301358, "compression_ratio": 1.5734597156398105, "no_speech_prob": 2.8129959446232533e-06}, {"id": 51, "seek": 22372, "start": 245.92, "end": 251.6, "text": " the cost function j that would be useful for visualization, which is rather than using", "tokens": [50364, 1171, 1365, 11, 498, 261, 390, 3175, 1266, 293, 272, 390, 3175, 2119, 11, 550, 264, 6681, 295, 264, 3753, 3673, 341, 50794, 50794, 935, 307, 264, 2158, 295, 361, 562, 261, 307, 3175, 1266, 293, 272, 307, 3175, 2119, 13, 51180, 51180, 823, 294, 1668, 281, 574, 754, 544, 8185, 412, 2685, 2793, 11, 456, 311, 1071, 636, 295, 41178, 51474, 51474, 264, 2063, 2445, 361, 300, 576, 312, 4420, 337, 25801, 11, 597, 307, 2831, 813, 1228, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.07884704061301358, "compression_ratio": 1.5734597156398105, "no_speech_prob": 2.8129959446232533e-06}, {"id": 52, "seek": 25160, "start": 251.6, "end": 253.88, "text": " these 3D surface plots.", "tokens": [50364, 613, 805, 35, 3753, 28609, 13, 50478, 50478, 286, 1116, 411, 281, 747, 341, 1900, 912, 2445, 361, 11, 370, 286, 478, 406, 4473, 264, 2445, 361, 412, 439, 11, 50772, 50772, 293, 7542, 309, 1228, 746, 1219, 257, 21234, 7542, 13, 50950, 50950, 400, 498, 291, 600, 1562, 1612, 257, 1192, 48434, 4471, 4099, 577, 1090, 819, 10233, 366, 11, 51216, 51216, 264, 660, 5067, 294, 257, 1192, 48434, 4471, 366, 1936, 12750, 19793, 295, 264, 9661, 295, 11, 584, 11, 51560, 51560, 257, 6937, 13, 51628, 51628, 639, 3256, 307, 295, 8426, 38119, 294, 3367, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1166667657739976, "compression_ratio": 1.6131687242798354, "no_speech_prob": 8.800980140222237e-06}, {"id": 53, "seek": 25160, "start": 253.88, "end": 259.76, "text": " I'd like to take this exact same function j, so I'm not changing the function j at all,", "tokens": [50364, 613, 805, 35, 3753, 28609, 13, 50478, 50478, 286, 1116, 411, 281, 747, 341, 1900, 912, 2445, 361, 11, 370, 286, 478, 406, 4473, 264, 2445, 361, 412, 439, 11, 50772, 50772, 293, 7542, 309, 1228, 746, 1219, 257, 21234, 7542, 13, 50950, 50950, 400, 498, 291, 600, 1562, 1612, 257, 1192, 48434, 4471, 4099, 577, 1090, 819, 10233, 366, 11, 51216, 51216, 264, 660, 5067, 294, 257, 1192, 48434, 4471, 366, 1936, 12750, 19793, 295, 264, 9661, 295, 11, 584, 11, 51560, 51560, 257, 6937, 13, 51628, 51628, 639, 3256, 307, 295, 8426, 38119, 294, 3367, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1166667657739976, "compression_ratio": 1.6131687242798354, "no_speech_prob": 8.800980140222237e-06}, {"id": 54, "seek": 25160, "start": 259.76, "end": 263.32, "text": " and plot it using something called a contour plot.", "tokens": [50364, 613, 805, 35, 3753, 28609, 13, 50478, 50478, 286, 1116, 411, 281, 747, 341, 1900, 912, 2445, 361, 11, 370, 286, 478, 406, 4473, 264, 2445, 361, 412, 439, 11, 50772, 50772, 293, 7542, 309, 1228, 746, 1219, 257, 21234, 7542, 13, 50950, 50950, 400, 498, 291, 600, 1562, 1612, 257, 1192, 48434, 4471, 4099, 577, 1090, 819, 10233, 366, 11, 51216, 51216, 264, 660, 5067, 294, 257, 1192, 48434, 4471, 366, 1936, 12750, 19793, 295, 264, 9661, 295, 11, 584, 11, 51560, 51560, 257, 6937, 13, 51628, 51628, 639, 3256, 307, 295, 8426, 38119, 294, 3367, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1166667657739976, "compression_ratio": 1.6131687242798354, "no_speech_prob": 8.800980140222237e-06}, {"id": 55, "seek": 25160, "start": 263.32, "end": 268.64, "text": " And if you've ever seen a topographical map showing how high different mountains are,", "tokens": [50364, 613, 805, 35, 3753, 28609, 13, 50478, 50478, 286, 1116, 411, 281, 747, 341, 1900, 912, 2445, 361, 11, 370, 286, 478, 406, 4473, 264, 2445, 361, 412, 439, 11, 50772, 50772, 293, 7542, 309, 1228, 746, 1219, 257, 21234, 7542, 13, 50950, 50950, 400, 498, 291, 600, 1562, 1612, 257, 1192, 48434, 4471, 4099, 577, 1090, 819, 10233, 366, 11, 51216, 51216, 264, 660, 5067, 294, 257, 1192, 48434, 4471, 366, 1936, 12750, 19793, 295, 264, 9661, 295, 11, 584, 11, 51560, 51560, 257, 6937, 13, 51628, 51628, 639, 3256, 307, 295, 8426, 38119, 294, 3367, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1166667657739976, "compression_ratio": 1.6131687242798354, "no_speech_prob": 8.800980140222237e-06}, {"id": 56, "seek": 25160, "start": 268.64, "end": 275.52, "text": " the contours in a topographical map are basically horizontal slices of the landscape of, say,", "tokens": [50364, 613, 805, 35, 3753, 28609, 13, 50478, 50478, 286, 1116, 411, 281, 747, 341, 1900, 912, 2445, 361, 11, 370, 286, 478, 406, 4473, 264, 2445, 361, 412, 439, 11, 50772, 50772, 293, 7542, 309, 1228, 746, 1219, 257, 21234, 7542, 13, 50950, 50950, 400, 498, 291, 600, 1562, 1612, 257, 1192, 48434, 4471, 4099, 577, 1090, 819, 10233, 366, 11, 51216, 51216, 264, 660, 5067, 294, 257, 1192, 48434, 4471, 366, 1936, 12750, 19793, 295, 264, 9661, 295, 11, 584, 11, 51560, 51560, 257, 6937, 13, 51628, 51628, 639, 3256, 307, 295, 8426, 38119, 294, 3367, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1166667657739976, "compression_ratio": 1.6131687242798354, "no_speech_prob": 8.800980140222237e-06}, {"id": 57, "seek": 25160, "start": 275.52, "end": 276.88, "text": " a mountain.", "tokens": [50364, 613, 805, 35, 3753, 28609, 13, 50478, 50478, 286, 1116, 411, 281, 747, 341, 1900, 912, 2445, 361, 11, 370, 286, 478, 406, 4473, 264, 2445, 361, 412, 439, 11, 50772, 50772, 293, 7542, 309, 1228, 746, 1219, 257, 21234, 7542, 13, 50950, 50950, 400, 498, 291, 600, 1562, 1612, 257, 1192, 48434, 4471, 4099, 577, 1090, 819, 10233, 366, 11, 51216, 51216, 264, 660, 5067, 294, 257, 1192, 48434, 4471, 366, 1936, 12750, 19793, 295, 264, 9661, 295, 11, 584, 11, 51560, 51560, 257, 6937, 13, 51628, 51628, 639, 3256, 307, 295, 8426, 38119, 294, 3367, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1166667657739976, "compression_ratio": 1.6131687242798354, "no_speech_prob": 8.800980140222237e-06}, {"id": 58, "seek": 25160, "start": 276.88, "end": 280.36, "text": " This image is of Mount Fuji in Japan.", "tokens": [50364, 613, 805, 35, 3753, 28609, 13, 50478, 50478, 286, 1116, 411, 281, 747, 341, 1900, 912, 2445, 361, 11, 370, 286, 478, 406, 4473, 264, 2445, 361, 412, 439, 11, 50772, 50772, 293, 7542, 309, 1228, 746, 1219, 257, 21234, 7542, 13, 50950, 50950, 400, 498, 291, 600, 1562, 1612, 257, 1192, 48434, 4471, 4099, 577, 1090, 819, 10233, 366, 11, 51216, 51216, 264, 660, 5067, 294, 257, 1192, 48434, 4471, 366, 1936, 12750, 19793, 295, 264, 9661, 295, 11, 584, 11, 51560, 51560, 257, 6937, 13, 51628, 51628, 639, 3256, 307, 295, 8426, 38119, 294, 3367, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1166667657739976, "compression_ratio": 1.6131687242798354, "no_speech_prob": 8.800980140222237e-06}, {"id": 59, "seek": 28036, "start": 280.36, "end": 284.8, "text": " I still remember my family visiting Mount Fuji when I was a teenager.", "tokens": [50364, 286, 920, 1604, 452, 1605, 11700, 8426, 38119, 562, 286, 390, 257, 21440, 13, 50586, 50586, 467, 390, 257, 2238, 7860, 13, 50738, 50738, 400, 498, 291, 3603, 3838, 3673, 264, 6937, 11, 300, 311, 437, 341, 21234, 4471, 1542, 411, 13, 51046, 51046, 467, 3110, 439, 264, 2793, 300, 366, 412, 264, 912, 6681, 337, 819, 25930, 13, 51346, 51346, 1711, 264, 2767, 295, 341, 4137, 307, 257, 805, 35, 3753, 7542, 295, 264, 2063, 2445, 361, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.12414801264383707, "compression_ratio": 1.5115207373271888, "no_speech_prob": 1.6280064301099628e-06}, {"id": 60, "seek": 28036, "start": 284.8, "end": 287.84000000000003, "text": " It was a beautiful sight.", "tokens": [50364, 286, 920, 1604, 452, 1605, 11700, 8426, 38119, 562, 286, 390, 257, 21440, 13, 50586, 50586, 467, 390, 257, 2238, 7860, 13, 50738, 50738, 400, 498, 291, 3603, 3838, 3673, 264, 6937, 11, 300, 311, 437, 341, 21234, 4471, 1542, 411, 13, 51046, 51046, 467, 3110, 439, 264, 2793, 300, 366, 412, 264, 912, 6681, 337, 819, 25930, 13, 51346, 51346, 1711, 264, 2767, 295, 341, 4137, 307, 257, 805, 35, 3753, 7542, 295, 264, 2063, 2445, 361, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.12414801264383707, "compression_ratio": 1.5115207373271888, "no_speech_prob": 1.6280064301099628e-06}, {"id": 61, "seek": 28036, "start": 287.84000000000003, "end": 294.0, "text": " And if you fly directly above the mountain, that's what this contour map looks like.", "tokens": [50364, 286, 920, 1604, 452, 1605, 11700, 8426, 38119, 562, 286, 390, 257, 21440, 13, 50586, 50586, 467, 390, 257, 2238, 7860, 13, 50738, 50738, 400, 498, 291, 3603, 3838, 3673, 264, 6937, 11, 300, 311, 437, 341, 21234, 4471, 1542, 411, 13, 51046, 51046, 467, 3110, 439, 264, 2793, 300, 366, 412, 264, 912, 6681, 337, 819, 25930, 13, 51346, 51346, 1711, 264, 2767, 295, 341, 4137, 307, 257, 805, 35, 3753, 7542, 295, 264, 2063, 2445, 361, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.12414801264383707, "compression_ratio": 1.5115207373271888, "no_speech_prob": 1.6280064301099628e-06}, {"id": 62, "seek": 28036, "start": 294.0, "end": 300.0, "text": " It shows all the points that are at the same height for different heights.", "tokens": [50364, 286, 920, 1604, 452, 1605, 11700, 8426, 38119, 562, 286, 390, 257, 21440, 13, 50586, 50586, 467, 390, 257, 2238, 7860, 13, 50738, 50738, 400, 498, 291, 3603, 3838, 3673, 264, 6937, 11, 300, 311, 437, 341, 21234, 4471, 1542, 411, 13, 51046, 51046, 467, 3110, 439, 264, 2793, 300, 366, 412, 264, 912, 6681, 337, 819, 25930, 13, 51346, 51346, 1711, 264, 2767, 295, 341, 4137, 307, 257, 805, 35, 3753, 7542, 295, 264, 2063, 2445, 361, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.12414801264383707, "compression_ratio": 1.5115207373271888, "no_speech_prob": 1.6280064301099628e-06}, {"id": 63, "seek": 28036, "start": 300.0, "end": 305.28000000000003, "text": " At the bottom of this slide is a 3D surface plot of the cost function j.", "tokens": [50364, 286, 920, 1604, 452, 1605, 11700, 8426, 38119, 562, 286, 390, 257, 21440, 13, 50586, 50586, 467, 390, 257, 2238, 7860, 13, 50738, 50738, 400, 498, 291, 3603, 3838, 3673, 264, 6937, 11, 300, 311, 437, 341, 21234, 4471, 1542, 411, 13, 51046, 51046, 467, 3110, 439, 264, 2793, 300, 366, 412, 264, 912, 6681, 337, 819, 25930, 13, 51346, 51346, 1711, 264, 2767, 295, 341, 4137, 307, 257, 805, 35, 3753, 7542, 295, 264, 2063, 2445, 361, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.12414801264383707, "compression_ratio": 1.5115207373271888, "no_speech_prob": 1.6280064301099628e-06}, {"id": 64, "seek": 30528, "start": 305.28, "end": 311.23999999999995, "text": " I know it doesn't look very bow-shaped, but it is actually a bow just very stretched out,", "tokens": [50364, 286, 458, 309, 1177, 380, 574, 588, 4503, 12, 23103, 11, 457, 309, 307, 767, 257, 4503, 445, 588, 23563, 484, 11, 50662, 50662, 597, 307, 983, 309, 1542, 411, 300, 13, 50758, 50758, 682, 364, 17312, 2715, 300, 307, 13392, 281, 1524, 11, 291, 603, 312, 1075, 281, 536, 341, 294, 805, 35, 293, 6060, 51042, 51042, 926, 264, 3753, 1803, 11, 293, 309, 603, 574, 544, 2745, 4503, 12, 23103, 456, 13, 51280, 51280, 3087, 11, 510, 322, 264, 6597, 558, 307, 257, 21234, 7542, 295, 341, 1900, 912, 2063, 2445, 382, 300, 51617, 51617, 4898, 412, 264, 2767, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.13060128014042693, "compression_ratio": 1.613821138211382, "no_speech_prob": 5.682303708454128e-06}, {"id": 65, "seek": 30528, "start": 311.23999999999995, "end": 313.15999999999997, "text": " which is why it looks like that.", "tokens": [50364, 286, 458, 309, 1177, 380, 574, 588, 4503, 12, 23103, 11, 457, 309, 307, 767, 257, 4503, 445, 588, 23563, 484, 11, 50662, 50662, 597, 307, 983, 309, 1542, 411, 300, 13, 50758, 50758, 682, 364, 17312, 2715, 300, 307, 13392, 281, 1524, 11, 291, 603, 312, 1075, 281, 536, 341, 294, 805, 35, 293, 6060, 51042, 51042, 926, 264, 3753, 1803, 11, 293, 309, 603, 574, 544, 2745, 4503, 12, 23103, 456, 13, 51280, 51280, 3087, 11, 510, 322, 264, 6597, 558, 307, 257, 21234, 7542, 295, 341, 1900, 912, 2063, 2445, 382, 300, 51617, 51617, 4898, 412, 264, 2767, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.13060128014042693, "compression_ratio": 1.613821138211382, "no_speech_prob": 5.682303708454128e-06}, {"id": 66, "seek": 30528, "start": 313.15999999999997, "end": 318.84, "text": " In an optional lab that is shortly to follow, you'll be able to see this in 3D and spin", "tokens": [50364, 286, 458, 309, 1177, 380, 574, 588, 4503, 12, 23103, 11, 457, 309, 307, 767, 257, 4503, 445, 588, 23563, 484, 11, 50662, 50662, 597, 307, 983, 309, 1542, 411, 300, 13, 50758, 50758, 682, 364, 17312, 2715, 300, 307, 13392, 281, 1524, 11, 291, 603, 312, 1075, 281, 536, 341, 294, 805, 35, 293, 6060, 51042, 51042, 926, 264, 3753, 1803, 11, 293, 309, 603, 574, 544, 2745, 4503, 12, 23103, 456, 13, 51280, 51280, 3087, 11, 510, 322, 264, 6597, 558, 307, 257, 21234, 7542, 295, 341, 1900, 912, 2063, 2445, 382, 300, 51617, 51617, 4898, 412, 264, 2767, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.13060128014042693, "compression_ratio": 1.613821138211382, "no_speech_prob": 5.682303708454128e-06}, {"id": 67, "seek": 30528, "start": 318.84, "end": 323.59999999999997, "text": " around the surface yourself, and it'll look more obviously bow-shaped there.", "tokens": [50364, 286, 458, 309, 1177, 380, 574, 588, 4503, 12, 23103, 11, 457, 309, 307, 767, 257, 4503, 445, 588, 23563, 484, 11, 50662, 50662, 597, 307, 983, 309, 1542, 411, 300, 13, 50758, 50758, 682, 364, 17312, 2715, 300, 307, 13392, 281, 1524, 11, 291, 603, 312, 1075, 281, 536, 341, 294, 805, 35, 293, 6060, 51042, 51042, 926, 264, 3753, 1803, 11, 293, 309, 603, 574, 544, 2745, 4503, 12, 23103, 456, 13, 51280, 51280, 3087, 11, 510, 322, 264, 6597, 558, 307, 257, 21234, 7542, 295, 341, 1900, 912, 2063, 2445, 382, 300, 51617, 51617, 4898, 412, 264, 2767, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.13060128014042693, "compression_ratio": 1.613821138211382, "no_speech_prob": 5.682303708454128e-06}, {"id": 68, "seek": 30528, "start": 323.59999999999997, "end": 330.34, "text": " Next, here on the upper right is a contour plot of this exact same cost function as that", "tokens": [50364, 286, 458, 309, 1177, 380, 574, 588, 4503, 12, 23103, 11, 457, 309, 307, 767, 257, 4503, 445, 588, 23563, 484, 11, 50662, 50662, 597, 307, 983, 309, 1542, 411, 300, 13, 50758, 50758, 682, 364, 17312, 2715, 300, 307, 13392, 281, 1524, 11, 291, 603, 312, 1075, 281, 536, 341, 294, 805, 35, 293, 6060, 51042, 51042, 926, 264, 3753, 1803, 11, 293, 309, 603, 574, 544, 2745, 4503, 12, 23103, 456, 13, 51280, 51280, 3087, 11, 510, 322, 264, 6597, 558, 307, 257, 21234, 7542, 295, 341, 1900, 912, 2063, 2445, 382, 300, 51617, 51617, 4898, 412, 264, 2767, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.13060128014042693, "compression_ratio": 1.613821138211382, "no_speech_prob": 5.682303708454128e-06}, {"id": 69, "seek": 30528, "start": 330.34, "end": 332.64, "text": " shown at the bottom.", "tokens": [50364, 286, 458, 309, 1177, 380, 574, 588, 4503, 12, 23103, 11, 457, 309, 307, 767, 257, 4503, 445, 588, 23563, 484, 11, 50662, 50662, 597, 307, 983, 309, 1542, 411, 300, 13, 50758, 50758, 682, 364, 17312, 2715, 300, 307, 13392, 281, 1524, 11, 291, 603, 312, 1075, 281, 536, 341, 294, 805, 35, 293, 6060, 51042, 51042, 926, 264, 3753, 1803, 11, 293, 309, 603, 574, 544, 2745, 4503, 12, 23103, 456, 13, 51280, 51280, 3087, 11, 510, 322, 264, 6597, 558, 307, 257, 21234, 7542, 295, 341, 1900, 912, 2063, 2445, 382, 300, 51617, 51617, 4898, 412, 264, 2767, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.13060128014042693, "compression_ratio": 1.613821138211382, "no_speech_prob": 5.682303708454128e-06}, {"id": 70, "seek": 33264, "start": 332.64, "end": 340.2, "text": " The two axes on this contour plot are B on the vertical axis and W on the horizontal", "tokens": [50364, 440, 732, 35387, 322, 341, 21234, 7542, 366, 363, 322, 264, 9429, 10298, 293, 343, 322, 264, 12750, 50742, 50742, 10298, 13, 50814, 50814, 708, 1184, 295, 613, 14187, 1124, 11, 611, 1219, 8284, 2600, 279, 11, 3110, 307, 264, 992, 295, 2793, 322, 264, 805, 35, 3753, 51228, 51228, 597, 366, 412, 264, 1900, 912, 6681, 13, 51340, 51340, 682, 661, 2283, 11, 264, 992, 295, 2793, 597, 362, 264, 912, 2158, 337, 264, 2063, 2445, 361, 13, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.1268540118114058, "compression_ratio": 1.6084656084656084, "no_speech_prob": 3.668827048386447e-06}, {"id": 71, "seek": 33264, "start": 340.2, "end": 341.64, "text": " axis.", "tokens": [50364, 440, 732, 35387, 322, 341, 21234, 7542, 366, 363, 322, 264, 9429, 10298, 293, 343, 322, 264, 12750, 50742, 50742, 10298, 13, 50814, 50814, 708, 1184, 295, 613, 14187, 1124, 11, 611, 1219, 8284, 2600, 279, 11, 3110, 307, 264, 992, 295, 2793, 322, 264, 805, 35, 3753, 51228, 51228, 597, 366, 412, 264, 1900, 912, 6681, 13, 51340, 51340, 682, 661, 2283, 11, 264, 992, 295, 2793, 597, 362, 264, 912, 2158, 337, 264, 2063, 2445, 361, 13, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.1268540118114058, "compression_ratio": 1.6084656084656084, "no_speech_prob": 3.668827048386447e-06}, {"id": 72, "seek": 33264, "start": 341.64, "end": 349.91999999999996, "text": " What each of these ovals, also called ellipses, shows is the set of points on the 3D surface", "tokens": [50364, 440, 732, 35387, 322, 341, 21234, 7542, 366, 363, 322, 264, 9429, 10298, 293, 343, 322, 264, 12750, 50742, 50742, 10298, 13, 50814, 50814, 708, 1184, 295, 613, 14187, 1124, 11, 611, 1219, 8284, 2600, 279, 11, 3110, 307, 264, 992, 295, 2793, 322, 264, 805, 35, 3753, 51228, 51228, 597, 366, 412, 264, 1900, 912, 6681, 13, 51340, 51340, 682, 661, 2283, 11, 264, 992, 295, 2793, 597, 362, 264, 912, 2158, 337, 264, 2063, 2445, 361, 13, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.1268540118114058, "compression_ratio": 1.6084656084656084, "no_speech_prob": 3.668827048386447e-06}, {"id": 73, "seek": 33264, "start": 349.91999999999996, "end": 352.15999999999997, "text": " which are at the exact same height.", "tokens": [50364, 440, 732, 35387, 322, 341, 21234, 7542, 366, 363, 322, 264, 9429, 10298, 293, 343, 322, 264, 12750, 50742, 50742, 10298, 13, 50814, 50814, 708, 1184, 295, 613, 14187, 1124, 11, 611, 1219, 8284, 2600, 279, 11, 3110, 307, 264, 992, 295, 2793, 322, 264, 805, 35, 3753, 51228, 51228, 597, 366, 412, 264, 1900, 912, 6681, 13, 51340, 51340, 682, 661, 2283, 11, 264, 992, 295, 2793, 597, 362, 264, 912, 2158, 337, 264, 2063, 2445, 361, 13, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.1268540118114058, "compression_ratio": 1.6084656084656084, "no_speech_prob": 3.668827048386447e-06}, {"id": 74, "seek": 33264, "start": 352.15999999999997, "end": 357.0, "text": " In other words, the set of points which have the same value for the cost function j.", "tokens": [50364, 440, 732, 35387, 322, 341, 21234, 7542, 366, 363, 322, 264, 9429, 10298, 293, 343, 322, 264, 12750, 50742, 50742, 10298, 13, 50814, 50814, 708, 1184, 295, 613, 14187, 1124, 11, 611, 1219, 8284, 2600, 279, 11, 3110, 307, 264, 992, 295, 2793, 322, 264, 805, 35, 3753, 51228, 51228, 597, 366, 412, 264, 1900, 912, 6681, 13, 51340, 51340, 682, 661, 2283, 11, 264, 992, 295, 2793, 597, 362, 264, 912, 2158, 337, 264, 2063, 2445, 361, 13, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.1268540118114058, "compression_ratio": 1.6084656084656084, "no_speech_prob": 3.668827048386447e-06}, {"id": 75, "seek": 35700, "start": 357.0, "end": 365.92, "text": " So, to get a contour plot, you take the 3D surface at the bottom and you use a knife", "tokens": [50364, 407, 11, 281, 483, 257, 21234, 7542, 11, 291, 747, 264, 805, 35, 3753, 412, 264, 2767, 293, 291, 764, 257, 7976, 50810, 50810, 281, 13153, 309, 33796, 13, 50946, 50946, 509, 747, 12750, 19793, 295, 300, 805, 35, 3753, 293, 483, 439, 264, 2793, 300, 366, 412, 264, 912, 51231, 51231, 6681, 13, 51281, 51281, 7504, 11, 1184, 12750, 13153, 5314, 493, 885, 4898, 382, 472, 295, 613, 8284, 2600, 279, 11, 420, 472, 295, 51648, 51648, 613, 14187, 1124, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14010088942771734, "compression_ratio": 1.684782608695652, "no_speech_prob": 5.014626367483288e-06}, {"id": 76, "seek": 35700, "start": 365.92, "end": 368.64, "text": " to slice it horizontally.", "tokens": [50364, 407, 11, 281, 483, 257, 21234, 7542, 11, 291, 747, 264, 805, 35, 3753, 412, 264, 2767, 293, 291, 764, 257, 7976, 50810, 50810, 281, 13153, 309, 33796, 13, 50946, 50946, 509, 747, 12750, 19793, 295, 300, 805, 35, 3753, 293, 483, 439, 264, 2793, 300, 366, 412, 264, 912, 51231, 51231, 6681, 13, 51281, 51281, 7504, 11, 1184, 12750, 13153, 5314, 493, 885, 4898, 382, 472, 295, 613, 8284, 2600, 279, 11, 420, 472, 295, 51648, 51648, 613, 14187, 1124, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14010088942771734, "compression_ratio": 1.684782608695652, "no_speech_prob": 5.014626367483288e-06}, {"id": 77, "seek": 35700, "start": 368.64, "end": 374.34, "text": " You take horizontal slices of that 3D surface and get all the points that are at the same", "tokens": [50364, 407, 11, 281, 483, 257, 21234, 7542, 11, 291, 747, 264, 805, 35, 3753, 412, 264, 2767, 293, 291, 764, 257, 7976, 50810, 50810, 281, 13153, 309, 33796, 13, 50946, 50946, 509, 747, 12750, 19793, 295, 300, 805, 35, 3753, 293, 483, 439, 264, 2793, 300, 366, 412, 264, 912, 51231, 51231, 6681, 13, 51281, 51281, 7504, 11, 1184, 12750, 13153, 5314, 493, 885, 4898, 382, 472, 295, 613, 8284, 2600, 279, 11, 420, 472, 295, 51648, 51648, 613, 14187, 1124, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14010088942771734, "compression_ratio": 1.684782608695652, "no_speech_prob": 5.014626367483288e-06}, {"id": 78, "seek": 35700, "start": 374.34, "end": 375.34, "text": " height.", "tokens": [50364, 407, 11, 281, 483, 257, 21234, 7542, 11, 291, 747, 264, 805, 35, 3753, 412, 264, 2767, 293, 291, 764, 257, 7976, 50810, 50810, 281, 13153, 309, 33796, 13, 50946, 50946, 509, 747, 12750, 19793, 295, 300, 805, 35, 3753, 293, 483, 439, 264, 2793, 300, 366, 412, 264, 912, 51231, 51231, 6681, 13, 51281, 51281, 7504, 11, 1184, 12750, 13153, 5314, 493, 885, 4898, 382, 472, 295, 613, 8284, 2600, 279, 11, 420, 472, 295, 51648, 51648, 613, 14187, 1124, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14010088942771734, "compression_ratio": 1.684782608695652, "no_speech_prob": 5.014626367483288e-06}, {"id": 79, "seek": 35700, "start": 375.34, "end": 382.68, "text": " Therefore, each horizontal slice ends up being shown as one of these ellipses, or one of", "tokens": [50364, 407, 11, 281, 483, 257, 21234, 7542, 11, 291, 747, 264, 805, 35, 3753, 412, 264, 2767, 293, 291, 764, 257, 7976, 50810, 50810, 281, 13153, 309, 33796, 13, 50946, 50946, 509, 747, 12750, 19793, 295, 300, 805, 35, 3753, 293, 483, 439, 264, 2793, 300, 366, 412, 264, 912, 51231, 51231, 6681, 13, 51281, 51281, 7504, 11, 1184, 12750, 13153, 5314, 493, 885, 4898, 382, 472, 295, 613, 8284, 2600, 279, 11, 420, 472, 295, 51648, 51648, 613, 14187, 1124, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14010088942771734, "compression_ratio": 1.684782608695652, "no_speech_prob": 5.014626367483288e-06}, {"id": 80, "seek": 35700, "start": 382.68, "end": 385.16, "text": " these ovals.", "tokens": [50364, 407, 11, 281, 483, 257, 21234, 7542, 11, 291, 747, 264, 805, 35, 3753, 412, 264, 2767, 293, 291, 764, 257, 7976, 50810, 50810, 281, 13153, 309, 33796, 13, 50946, 50946, 509, 747, 12750, 19793, 295, 300, 805, 35, 3753, 293, 483, 439, 264, 2793, 300, 366, 412, 264, 912, 51231, 51231, 6681, 13, 51281, 51281, 7504, 11, 1184, 12750, 13153, 5314, 493, 885, 4898, 382, 472, 295, 613, 8284, 2600, 279, 11, 420, 472, 295, 51648, 51648, 613, 14187, 1124, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14010088942771734, "compression_ratio": 1.684782608695652, "no_speech_prob": 5.014626367483288e-06}, {"id": 81, "seek": 38516, "start": 385.16, "end": 394.12, "text": " So concretely, if you take that point, and that point, and that point, all of these three", "tokens": [50364, 407, 39481, 736, 11, 498, 291, 747, 300, 935, 11, 293, 300, 935, 11, 293, 300, 935, 11, 439, 295, 613, 1045, 50812, 50812, 2793, 362, 264, 912, 2158, 337, 264, 2063, 2445, 361, 11, 754, 1673, 436, 362, 819, 4190, 51160, 51160, 337, 343, 293, 363, 13, 51310, 51310, 400, 294, 264, 2573, 322, 264, 6597, 1411, 11, 291, 536, 611, 300, 613, 1045, 2793, 6805, 281, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.11799697081247966, "compression_ratio": 1.7345679012345678, "no_speech_prob": 6.144101917016087e-06}, {"id": 82, "seek": 38516, "start": 394.12, "end": 401.08000000000004, "text": " points have the same value for the cost function j, even though they have different values", "tokens": [50364, 407, 39481, 736, 11, 498, 291, 747, 300, 935, 11, 293, 300, 935, 11, 293, 300, 935, 11, 439, 295, 613, 1045, 50812, 50812, 2793, 362, 264, 912, 2158, 337, 264, 2063, 2445, 361, 11, 754, 1673, 436, 362, 819, 4190, 51160, 51160, 337, 343, 293, 363, 13, 51310, 51310, 400, 294, 264, 2573, 322, 264, 6597, 1411, 11, 291, 536, 611, 300, 613, 1045, 2793, 6805, 281, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.11799697081247966, "compression_ratio": 1.7345679012345678, "no_speech_prob": 6.144101917016087e-06}, {"id": 83, "seek": 38516, "start": 401.08000000000004, "end": 404.08000000000004, "text": " for W and B.", "tokens": [50364, 407, 39481, 736, 11, 498, 291, 747, 300, 935, 11, 293, 300, 935, 11, 293, 300, 935, 11, 439, 295, 613, 1045, 50812, 50812, 2793, 362, 264, 912, 2158, 337, 264, 2063, 2445, 361, 11, 754, 1673, 436, 362, 819, 4190, 51160, 51160, 337, 343, 293, 363, 13, 51310, 51310, 400, 294, 264, 2573, 322, 264, 6597, 1411, 11, 291, 536, 611, 300, 613, 1045, 2793, 6805, 281, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.11799697081247966, "compression_ratio": 1.7345679012345678, "no_speech_prob": 6.144101917016087e-06}, {"id": 84, "seek": 38516, "start": 404.08000000000004, "end": 410.48, "text": " And in the figure on the upper left, you see also that these three points correspond to", "tokens": [50364, 407, 39481, 736, 11, 498, 291, 747, 300, 935, 11, 293, 300, 935, 11, 293, 300, 935, 11, 439, 295, 613, 1045, 50812, 50812, 2793, 362, 264, 912, 2158, 337, 264, 2063, 2445, 361, 11, 754, 1673, 436, 362, 819, 4190, 51160, 51160, 337, 343, 293, 363, 13, 51310, 51310, 400, 294, 264, 2573, 322, 264, 6597, 1411, 11, 291, 536, 611, 300, 613, 1045, 2793, 6805, 281, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.11799697081247966, "compression_ratio": 1.7345679012345678, "no_speech_prob": 6.144101917016087e-06}, {"id": 85, "seek": 41048, "start": 410.48, "end": 416.52000000000004, "text": " different functions f, all three of which are actually pretty bad for predicting housing", "tokens": [50364, 819, 6828, 283, 11, 439, 1045, 295, 597, 366, 767, 1238, 1578, 337, 32884, 6849, 50666, 50666, 7901, 294, 341, 1389, 13, 50758, 50758, 823, 11, 264, 2767, 295, 264, 4503, 11, 689, 264, 2063, 2445, 361, 307, 412, 257, 7285, 11, 307, 341, 935, 51207, 51207, 558, 510, 11, 412, 264, 3056, 295, 341, 5512, 1341, 14187, 1124, 13, 51446, 51446, 759, 291, 2378, 380, 1612, 21234, 28609, 709, 949, 11, 286, 1116, 411, 291, 281, 3811, 11, 498, 291, 486, 11, 300, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15932513367046008, "compression_ratio": 1.5849056603773586, "no_speech_prob": 2.6015820822067326e-06}, {"id": 86, "seek": 41048, "start": 416.52000000000004, "end": 418.36, "text": " prices in this case.", "tokens": [50364, 819, 6828, 283, 11, 439, 1045, 295, 597, 366, 767, 1238, 1578, 337, 32884, 6849, 50666, 50666, 7901, 294, 341, 1389, 13, 50758, 50758, 823, 11, 264, 2767, 295, 264, 4503, 11, 689, 264, 2063, 2445, 361, 307, 412, 257, 7285, 11, 307, 341, 935, 51207, 51207, 558, 510, 11, 412, 264, 3056, 295, 341, 5512, 1341, 14187, 1124, 13, 51446, 51446, 759, 291, 2378, 380, 1612, 21234, 28609, 709, 949, 11, 286, 1116, 411, 291, 281, 3811, 11, 498, 291, 486, 11, 300, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15932513367046008, "compression_ratio": 1.5849056603773586, "no_speech_prob": 2.6015820822067326e-06}, {"id": 87, "seek": 41048, "start": 418.36, "end": 427.34000000000003, "text": " Now, the bottom of the bow, where the cost function j is at a minimum, is this point", "tokens": [50364, 819, 6828, 283, 11, 439, 1045, 295, 597, 366, 767, 1238, 1578, 337, 32884, 6849, 50666, 50666, 7901, 294, 341, 1389, 13, 50758, 50758, 823, 11, 264, 2767, 295, 264, 4503, 11, 689, 264, 2063, 2445, 361, 307, 412, 257, 7285, 11, 307, 341, 935, 51207, 51207, 558, 510, 11, 412, 264, 3056, 295, 341, 5512, 1341, 14187, 1124, 13, 51446, 51446, 759, 291, 2378, 380, 1612, 21234, 28609, 709, 949, 11, 286, 1116, 411, 291, 281, 3811, 11, 498, 291, 486, 11, 300, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15932513367046008, "compression_ratio": 1.5849056603773586, "no_speech_prob": 2.6015820822067326e-06}, {"id": 88, "seek": 41048, "start": 427.34000000000003, "end": 432.12, "text": " right here, at the center of this concentric ovals.", "tokens": [50364, 819, 6828, 283, 11, 439, 1045, 295, 597, 366, 767, 1238, 1578, 337, 32884, 6849, 50666, 50666, 7901, 294, 341, 1389, 13, 50758, 50758, 823, 11, 264, 2767, 295, 264, 4503, 11, 689, 264, 2063, 2445, 361, 307, 412, 257, 7285, 11, 307, 341, 935, 51207, 51207, 558, 510, 11, 412, 264, 3056, 295, 341, 5512, 1341, 14187, 1124, 13, 51446, 51446, 759, 291, 2378, 380, 1612, 21234, 28609, 709, 949, 11, 286, 1116, 411, 291, 281, 3811, 11, 498, 291, 486, 11, 300, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15932513367046008, "compression_ratio": 1.5849056603773586, "no_speech_prob": 2.6015820822067326e-06}, {"id": 89, "seek": 41048, "start": 432.12, "end": 438.20000000000005, "text": " If you haven't seen contour plots much before, I'd like you to imagine, if you will, that", "tokens": [50364, 819, 6828, 283, 11, 439, 1045, 295, 597, 366, 767, 1238, 1578, 337, 32884, 6849, 50666, 50666, 7901, 294, 341, 1389, 13, 50758, 50758, 823, 11, 264, 2767, 295, 264, 4503, 11, 689, 264, 2063, 2445, 361, 307, 412, 257, 7285, 11, 307, 341, 935, 51207, 51207, 558, 510, 11, 412, 264, 3056, 295, 341, 5512, 1341, 14187, 1124, 13, 51446, 51446, 759, 291, 2378, 380, 1612, 21234, 28609, 709, 949, 11, 286, 1116, 411, 291, 281, 3811, 11, 498, 291, 486, 11, 300, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15932513367046008, "compression_ratio": 1.5849056603773586, "no_speech_prob": 2.6015820822067326e-06}, {"id": 90, "seek": 43820, "start": 438.2, "end": 444.92, "text": " you are flying high up above the bow in an airplane or in a rocket ship, and you're looking", "tokens": [50364, 291, 366, 7137, 1090, 493, 3673, 264, 4503, 294, 364, 17130, 420, 294, 257, 13012, 5374, 11, 293, 291, 434, 1237, 50700, 50700, 2997, 760, 412, 309, 13, 50796, 50796, 407, 300, 307, 382, 498, 291, 992, 428, 3820, 6002, 4962, 322, 428, 10026, 7170, 493, 11, 293, 264, 4503, 3909, 51146, 51146, 307, 1348, 3838, 484, 295, 428, 2568, 11636, 3673, 428, 10026, 13, 51380, 51380, 11739, 300, 264, 4503, 3909, 13156, 484, 295, 428, 3820, 2568, 8493, 4962, 11, 411, 300, 11, 370, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14772859851965744, "compression_ratio": 1.748768472906404, "no_speech_prob": 1.723099012451712e-05}, {"id": 91, "seek": 43820, "start": 444.92, "end": 446.84, "text": " straight down at it.", "tokens": [50364, 291, 366, 7137, 1090, 493, 3673, 264, 4503, 294, 364, 17130, 420, 294, 257, 13012, 5374, 11, 293, 291, 434, 1237, 50700, 50700, 2997, 760, 412, 309, 13, 50796, 50796, 407, 300, 307, 382, 498, 291, 992, 428, 3820, 6002, 4962, 322, 428, 10026, 7170, 493, 11, 293, 264, 4503, 3909, 51146, 51146, 307, 1348, 3838, 484, 295, 428, 2568, 11636, 3673, 428, 10026, 13, 51380, 51380, 11739, 300, 264, 4503, 3909, 13156, 484, 295, 428, 3820, 2568, 8493, 4962, 11, 411, 300, 11, 370, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14772859851965744, "compression_ratio": 1.748768472906404, "no_speech_prob": 1.723099012451712e-05}, {"id": 92, "seek": 43820, "start": 446.84, "end": 453.84, "text": " So that is as if you set your computer monitor flat on your desk facing up, and the bow shape", "tokens": [50364, 291, 366, 7137, 1090, 493, 3673, 264, 4503, 294, 364, 17130, 420, 294, 257, 13012, 5374, 11, 293, 291, 434, 1237, 50700, 50700, 2997, 760, 412, 309, 13, 50796, 50796, 407, 300, 307, 382, 498, 291, 992, 428, 3820, 6002, 4962, 322, 428, 10026, 7170, 493, 11, 293, 264, 4503, 3909, 51146, 51146, 307, 1348, 3838, 484, 295, 428, 2568, 11636, 3673, 428, 10026, 13, 51380, 51380, 11739, 300, 264, 4503, 3909, 13156, 484, 295, 428, 3820, 2568, 8493, 4962, 11, 411, 300, 11, 370, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14772859851965744, "compression_ratio": 1.748768472906404, "no_speech_prob": 1.723099012451712e-05}, {"id": 93, "seek": 43820, "start": 453.84, "end": 458.52, "text": " is coming directly out of your screen rising above your desk.", "tokens": [50364, 291, 366, 7137, 1090, 493, 3673, 264, 4503, 294, 364, 17130, 420, 294, 257, 13012, 5374, 11, 293, 291, 434, 1237, 50700, 50700, 2997, 760, 412, 309, 13, 50796, 50796, 407, 300, 307, 382, 498, 291, 992, 428, 3820, 6002, 4962, 322, 428, 10026, 7170, 493, 11, 293, 264, 4503, 3909, 51146, 51146, 307, 1348, 3838, 484, 295, 428, 2568, 11636, 3673, 428, 10026, 13, 51380, 51380, 11739, 300, 264, 4503, 3909, 13156, 484, 295, 428, 3820, 2568, 8493, 4962, 11, 411, 300, 11, 370, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14772859851965744, "compression_ratio": 1.748768472906404, "no_speech_prob": 1.723099012451712e-05}, {"id": 94, "seek": 43820, "start": 458.52, "end": 465.2, "text": " Imagine that the bow shape grows out of your computer screen lying flat, like that, so", "tokens": [50364, 291, 366, 7137, 1090, 493, 3673, 264, 4503, 294, 364, 17130, 420, 294, 257, 13012, 5374, 11, 293, 291, 434, 1237, 50700, 50700, 2997, 760, 412, 309, 13, 50796, 50796, 407, 300, 307, 382, 498, 291, 992, 428, 3820, 6002, 4962, 322, 428, 10026, 7170, 493, 11, 293, 264, 4503, 3909, 51146, 51146, 307, 1348, 3838, 484, 295, 428, 2568, 11636, 3673, 428, 10026, 13, 51380, 51380, 11739, 300, 264, 4503, 3909, 13156, 484, 295, 428, 3820, 2568, 8493, 4962, 11, 411, 300, 11, 370, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14772859851965744, "compression_ratio": 1.748768472906404, "no_speech_prob": 1.723099012451712e-05}, {"id": 95, "seek": 46520, "start": 465.2, "end": 470.8, "text": " that each of these ovals have the same height above your screen, and the minimum of the", "tokens": [50364, 300, 1184, 295, 613, 14187, 1124, 362, 264, 912, 6681, 3673, 428, 2568, 11, 293, 264, 7285, 295, 264, 50644, 50644, 4503, 307, 558, 760, 456, 294, 264, 3056, 295, 264, 16998, 37175, 13, 50958, 50958, 407, 309, 4523, 484, 300, 264, 21234, 28609, 366, 257, 10851, 636, 281, 23273, 264, 805, 35, 2063, 51246, 51246, 2445, 361, 11, 457, 294, 257, 636, 300, 311, 43288, 294, 445, 568, 35, 13, 51502, 51502, 682, 341, 960, 11, 291, 1866, 577, 264, 805, 35, 4503, 12, 23103, 3753, 7542, 393, 611, 312, 5056, 1602, 382, 257, 21234, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1083394718170166, "compression_ratio": 1.6293103448275863, "no_speech_prob": 1.6280332602036651e-06}, {"id": 96, "seek": 46520, "start": 470.8, "end": 477.08, "text": " bow is right down there in the center of the smallest oval.", "tokens": [50364, 300, 1184, 295, 613, 14187, 1124, 362, 264, 912, 6681, 3673, 428, 2568, 11, 293, 264, 7285, 295, 264, 50644, 50644, 4503, 307, 558, 760, 456, 294, 264, 3056, 295, 264, 16998, 37175, 13, 50958, 50958, 407, 309, 4523, 484, 300, 264, 21234, 28609, 366, 257, 10851, 636, 281, 23273, 264, 805, 35, 2063, 51246, 51246, 2445, 361, 11, 457, 294, 257, 636, 300, 311, 43288, 294, 445, 568, 35, 13, 51502, 51502, 682, 341, 960, 11, 291, 1866, 577, 264, 805, 35, 4503, 12, 23103, 3753, 7542, 393, 611, 312, 5056, 1602, 382, 257, 21234, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1083394718170166, "compression_ratio": 1.6293103448275863, "no_speech_prob": 1.6280332602036651e-06}, {"id": 97, "seek": 46520, "start": 477.08, "end": 482.84, "text": " So it turns out that the contour plots are a convenient way to visualize the 3D cost", "tokens": [50364, 300, 1184, 295, 613, 14187, 1124, 362, 264, 912, 6681, 3673, 428, 2568, 11, 293, 264, 7285, 295, 264, 50644, 50644, 4503, 307, 558, 760, 456, 294, 264, 3056, 295, 264, 16998, 37175, 13, 50958, 50958, 407, 309, 4523, 484, 300, 264, 21234, 28609, 366, 257, 10851, 636, 281, 23273, 264, 805, 35, 2063, 51246, 51246, 2445, 361, 11, 457, 294, 257, 636, 300, 311, 43288, 294, 445, 568, 35, 13, 51502, 51502, 682, 341, 960, 11, 291, 1866, 577, 264, 805, 35, 4503, 12, 23103, 3753, 7542, 393, 611, 312, 5056, 1602, 382, 257, 21234, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1083394718170166, "compression_ratio": 1.6293103448275863, "no_speech_prob": 1.6280332602036651e-06}, {"id": 98, "seek": 46520, "start": 482.84, "end": 487.96, "text": " function j, but in a way that's plotted in just 2D.", "tokens": [50364, 300, 1184, 295, 613, 14187, 1124, 362, 264, 912, 6681, 3673, 428, 2568, 11, 293, 264, 7285, 295, 264, 50644, 50644, 4503, 307, 558, 760, 456, 294, 264, 3056, 295, 264, 16998, 37175, 13, 50958, 50958, 407, 309, 4523, 484, 300, 264, 21234, 28609, 366, 257, 10851, 636, 281, 23273, 264, 805, 35, 2063, 51246, 51246, 2445, 361, 11, 457, 294, 257, 636, 300, 311, 43288, 294, 445, 568, 35, 13, 51502, 51502, 682, 341, 960, 11, 291, 1866, 577, 264, 805, 35, 4503, 12, 23103, 3753, 7542, 393, 611, 312, 5056, 1602, 382, 257, 21234, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1083394718170166, "compression_ratio": 1.6293103448275863, "no_speech_prob": 1.6280332602036651e-06}, {"id": 99, "seek": 46520, "start": 487.96, "end": 495.15999999999997, "text": " In this video, you saw how the 3D bow-shaped surface plot can also be visualized as a contour", "tokens": [50364, 300, 1184, 295, 613, 14187, 1124, 362, 264, 912, 6681, 3673, 428, 2568, 11, 293, 264, 7285, 295, 264, 50644, 50644, 4503, 307, 558, 760, 456, 294, 264, 3056, 295, 264, 16998, 37175, 13, 50958, 50958, 407, 309, 4523, 484, 300, 264, 21234, 28609, 366, 257, 10851, 636, 281, 23273, 264, 805, 35, 2063, 51246, 51246, 2445, 361, 11, 457, 294, 257, 636, 300, 311, 43288, 294, 445, 568, 35, 13, 51502, 51502, 682, 341, 960, 11, 291, 1866, 577, 264, 805, 35, 4503, 12, 23103, 3753, 7542, 393, 611, 312, 5056, 1602, 382, 257, 21234, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1083394718170166, "compression_ratio": 1.6293103448275863, "no_speech_prob": 1.6280332602036651e-06}, {"id": 100, "seek": 49516, "start": 495.16, "end": 496.48, "text": " plot.", "tokens": [50364, 7542, 13, 50430, 50430, 11142, 341, 25801, 2290, 11, 294, 264, 958, 960, 11, 718, 311, 23273, 512, 2685, 7994, 50714, 50714, 295, 343, 47554, 294, 264, 8213, 24590, 2316, 370, 300, 321, 393, 536, 577, 613, 819, 7994, 3345, 51003, 51003, 264, 2997, 1622, 291, 434, 15669, 281, 264, 1412, 13, 51138, 51138, 961, 311, 352, 322, 281, 264, 958, 960, 13, 51212], "temperature": 0.0, "avg_logprob": -0.1638907374757709, "compression_ratio": 1.5411764705882354, "no_speech_prob": 0.00012095752026652917}, {"id": 101, "seek": 49516, "start": 496.48, "end": 502.16, "text": " Using this visualization tool, in the next video, let's visualize some specific choices", "tokens": [50364, 7542, 13, 50430, 50430, 11142, 341, 25801, 2290, 11, 294, 264, 958, 960, 11, 718, 311, 23273, 512, 2685, 7994, 50714, 50714, 295, 343, 47554, 294, 264, 8213, 24590, 2316, 370, 300, 321, 393, 536, 577, 613, 819, 7994, 3345, 51003, 51003, 264, 2997, 1622, 291, 434, 15669, 281, 264, 1412, 13, 51138, 51138, 961, 311, 352, 322, 281, 264, 958, 960, 13, 51212], "temperature": 0.0, "avg_logprob": -0.1638907374757709, "compression_ratio": 1.5411764705882354, "no_speech_prob": 0.00012095752026652917}, {"id": 102, "seek": 49516, "start": 502.16, "end": 507.94000000000005, "text": " of WMB in the linear regression model so that we can see how these different choices affect", "tokens": [50364, 7542, 13, 50430, 50430, 11142, 341, 25801, 2290, 11, 294, 264, 958, 960, 11, 718, 311, 23273, 512, 2685, 7994, 50714, 50714, 295, 343, 47554, 294, 264, 8213, 24590, 2316, 370, 300, 321, 393, 536, 577, 613, 819, 7994, 3345, 51003, 51003, 264, 2997, 1622, 291, 434, 15669, 281, 264, 1412, 13, 51138, 51138, 961, 311, 352, 322, 281, 264, 958, 960, 13, 51212], "temperature": 0.0, "avg_logprob": -0.1638907374757709, "compression_ratio": 1.5411764705882354, "no_speech_prob": 0.00012095752026652917}, {"id": 103, "seek": 49516, "start": 507.94000000000005, "end": 510.64000000000004, "text": " the straight line you're fitting to the data.", "tokens": [50364, 7542, 13, 50430, 50430, 11142, 341, 25801, 2290, 11, 294, 264, 958, 960, 11, 718, 311, 23273, 512, 2685, 7994, 50714, 50714, 295, 343, 47554, 294, 264, 8213, 24590, 2316, 370, 300, 321, 393, 536, 577, 613, 819, 7994, 3345, 51003, 51003, 264, 2997, 1622, 291, 434, 15669, 281, 264, 1412, 13, 51138, 51138, 961, 311, 352, 322, 281, 264, 958, 960, 13, 51212], "temperature": 0.0, "avg_logprob": -0.1638907374757709, "compression_ratio": 1.5411764705882354, "no_speech_prob": 0.00012095752026652917}, {"id": 104, "seek": 51064, "start": 510.64, "end": 526.28, "text": " Let's go on to the next video.", "tokens": [50364, 961, 311, 352, 322, 281, 264, 958, 960, 13, 51146], "temperature": 0.0, "avg_logprob": -0.44780882199605304, "compression_ratio": 0.7894736842105263, "no_speech_prob": 0.0002722130448091775}], "language": "en", "video_id": "75eDNh4A07Q", "entity": "ML Specialization, Andrew Ng (2022)"}}