{"video_id": "Y66jLs9ubsY", "title": "6.1 Advice for applying machine learning | Deciding what to try next -[Machine Learning | Andrew Ng]", "description": "Second Course:\nAdvanced Learning Algorithms.\n\n\nIf you liked the content please subscribe and put a little blue thumb.\nTake heart!", "author": "Machine Learning", "keywords": [], "channel_url": "https://www.youtube.com/channel/UClG5HEAJJFOavT_UolqYROQ", "length": 221, "views": 107, "publish_date": "11/04/2022", "timestamp": 1661817600, "entity": "ML Specialization, Andrew Ng (2022)", "transcript": {"text": " Hi and welcome back. By now you've seen a lot of different learning algorithms including linear regression, logistic regression, even deep learning or neural networks, and next week you'll see decision trees as well. So you now have a lot of powerful tools of machine learning, but how do you use these tools effectively? I've seen teams sometimes take six months to build a machine learning system that I think a more skilled team could have taken or done in just a couple of weeks. And the efficiency of how quickly you can get a machine learning system to work well will depend to a large part on how well you can repeatedly make good decisions about what to do next in the course of a machine learning project. So in this week I hope to share with you a number of tips on how to make decisions about what to do next in a machine learning project that I hope will end up saving you a lot of time. So let's take a look at some advice on how to build machine learning systems. Let's start with an example. Say you've implemented regularized linear regression to predict housing prices. So you have the usual cost function for your learning algorithm, squared error plus this regularization term. But if you train the model and find that it makes unacceptably large errors in its predictions, what do you try next? When you're building a machine learning algorithm, there are usually a lot of different things you could try. For example, you could decide to get more training examples since it seems like having more data should help, right? Or maybe you think maybe you have too many features, you could try a smaller set of features. Or maybe you want to get additional features such as find additional properties of the houses to toss into your data. And maybe that will help it to do better. Or you might take the existing features x1, x2, and so on and try adding polynomial features like x1 squared, x2 squared, x1 x2 and so on. Or you might wonder if the value of lambda is chosen well and you might say, maybe it's too big, I want to decrease it. Or you may say, oh, maybe it's too small, I want to try increasing it. So on any given machine learning application, it will often turn out that some of these things could be fruitful and some of these things not fruitful. And a key to being effective at how you build a machine learning algorithm will be if you can find a way to make good choices about where to invest your time. For example, I have seen teams spend literally many, many months collecting more training examples, thinking that more training data has got to help. But it turns out sometimes it helps a lot and sometimes it doesn't. So in this week, you learn about how to carry out a set of diagnostics. And by diagnostic, I mean a test you can run to gain insight into what is or isn't working with a learning algorithm to gain guidance into improving performance. And some of these diagnostics will tell you things like, is it worth weeks or even months collecting more training data? Because if it is, then you can then go ahead and make the investment to get more data, which will hopefully lead to improved performance. Or if it isn't, then running that diagnostic could have saved you months of time. And one thing you see this week as well is that diagnostics can take time to implement, but running them can be a very good use of your time. So this week, we'll spend a lot of time talking about different diagnostics you can use to give you guidance on how to improve your learning algorithm's performance. But first, let's take a look at how to evaluate the performance of your learning algorithm. Let's go do that in the next video.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 4.0600000000000005, "text": " Hi and welcome back.", "tokens": [50364, 2421, 293, 2928, 646, 13, 50567, 50567, 3146, 586, 291, 600, 1612, 257, 688, 295, 819, 2539, 14642, 3009, 8213, 24590, 11, 3565, 3142, 50804, 50804, 24590, 11, 754, 2452, 2539, 420, 18161, 9590, 11, 293, 958, 1243, 291, 603, 536, 3537, 5852, 382, 51074, 51074, 731, 13, 51124, 51124, 407, 291, 586, 362, 257, 688, 295, 4005, 3873, 295, 3479, 2539, 11, 457, 577, 360, 291, 764, 613, 51371, 51371, 3873, 8659, 30, 51470, 51470, 286, 600, 1612, 5491, 2171, 747, 2309, 2493, 281, 1322, 257, 3479, 2539, 1185, 300, 286, 519, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1894958535420526, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.03897346556186676}, {"id": 1, "seek": 0, "start": 4.0600000000000005, "end": 8.8, "text": " By now you've seen a lot of different learning algorithms including linear regression, logistic", "tokens": [50364, 2421, 293, 2928, 646, 13, 50567, 50567, 3146, 586, 291, 600, 1612, 257, 688, 295, 819, 2539, 14642, 3009, 8213, 24590, 11, 3565, 3142, 50804, 50804, 24590, 11, 754, 2452, 2539, 420, 18161, 9590, 11, 293, 958, 1243, 291, 603, 536, 3537, 5852, 382, 51074, 51074, 731, 13, 51124, 51124, 407, 291, 586, 362, 257, 688, 295, 4005, 3873, 295, 3479, 2539, 11, 457, 577, 360, 291, 764, 613, 51371, 51371, 3873, 8659, 30, 51470, 51470, 286, 600, 1612, 5491, 2171, 747, 2309, 2493, 281, 1322, 257, 3479, 2539, 1185, 300, 286, 519, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1894958535420526, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.03897346556186676}, {"id": 2, "seek": 0, "start": 8.8, "end": 14.200000000000001, "text": " regression, even deep learning or neural networks, and next week you'll see decision trees as", "tokens": [50364, 2421, 293, 2928, 646, 13, 50567, 50567, 3146, 586, 291, 600, 1612, 257, 688, 295, 819, 2539, 14642, 3009, 8213, 24590, 11, 3565, 3142, 50804, 50804, 24590, 11, 754, 2452, 2539, 420, 18161, 9590, 11, 293, 958, 1243, 291, 603, 536, 3537, 5852, 382, 51074, 51074, 731, 13, 51124, 51124, 407, 291, 586, 362, 257, 688, 295, 4005, 3873, 295, 3479, 2539, 11, 457, 577, 360, 291, 764, 613, 51371, 51371, 3873, 8659, 30, 51470, 51470, 286, 600, 1612, 5491, 2171, 747, 2309, 2493, 281, 1322, 257, 3479, 2539, 1185, 300, 286, 519, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1894958535420526, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.03897346556186676}, {"id": 3, "seek": 0, "start": 14.200000000000001, "end": 15.200000000000001, "text": " well.", "tokens": [50364, 2421, 293, 2928, 646, 13, 50567, 50567, 3146, 586, 291, 600, 1612, 257, 688, 295, 819, 2539, 14642, 3009, 8213, 24590, 11, 3565, 3142, 50804, 50804, 24590, 11, 754, 2452, 2539, 420, 18161, 9590, 11, 293, 958, 1243, 291, 603, 536, 3537, 5852, 382, 51074, 51074, 731, 13, 51124, 51124, 407, 291, 586, 362, 257, 688, 295, 4005, 3873, 295, 3479, 2539, 11, 457, 577, 360, 291, 764, 613, 51371, 51371, 3873, 8659, 30, 51470, 51470, 286, 600, 1612, 5491, 2171, 747, 2309, 2493, 281, 1322, 257, 3479, 2539, 1185, 300, 286, 519, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1894958535420526, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.03897346556186676}, {"id": 4, "seek": 0, "start": 15.200000000000001, "end": 20.14, "text": " So you now have a lot of powerful tools of machine learning, but how do you use these", "tokens": [50364, 2421, 293, 2928, 646, 13, 50567, 50567, 3146, 586, 291, 600, 1612, 257, 688, 295, 819, 2539, 14642, 3009, 8213, 24590, 11, 3565, 3142, 50804, 50804, 24590, 11, 754, 2452, 2539, 420, 18161, 9590, 11, 293, 958, 1243, 291, 603, 536, 3537, 5852, 382, 51074, 51074, 731, 13, 51124, 51124, 407, 291, 586, 362, 257, 688, 295, 4005, 3873, 295, 3479, 2539, 11, 457, 577, 360, 291, 764, 613, 51371, 51371, 3873, 8659, 30, 51470, 51470, 286, 600, 1612, 5491, 2171, 747, 2309, 2493, 281, 1322, 257, 3479, 2539, 1185, 300, 286, 519, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1894958535420526, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.03897346556186676}, {"id": 5, "seek": 0, "start": 20.14, "end": 22.12, "text": " tools effectively?", "tokens": [50364, 2421, 293, 2928, 646, 13, 50567, 50567, 3146, 586, 291, 600, 1612, 257, 688, 295, 819, 2539, 14642, 3009, 8213, 24590, 11, 3565, 3142, 50804, 50804, 24590, 11, 754, 2452, 2539, 420, 18161, 9590, 11, 293, 958, 1243, 291, 603, 536, 3537, 5852, 382, 51074, 51074, 731, 13, 51124, 51124, 407, 291, 586, 362, 257, 688, 295, 4005, 3873, 295, 3479, 2539, 11, 457, 577, 360, 291, 764, 613, 51371, 51371, 3873, 8659, 30, 51470, 51470, 286, 600, 1612, 5491, 2171, 747, 2309, 2493, 281, 1322, 257, 3479, 2539, 1185, 300, 286, 519, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1894958535420526, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.03897346556186676}, {"id": 6, "seek": 0, "start": 22.12, "end": 27.080000000000002, "text": " I've seen teams sometimes take six months to build a machine learning system that I think", "tokens": [50364, 2421, 293, 2928, 646, 13, 50567, 50567, 3146, 586, 291, 600, 1612, 257, 688, 295, 819, 2539, 14642, 3009, 8213, 24590, 11, 3565, 3142, 50804, 50804, 24590, 11, 754, 2452, 2539, 420, 18161, 9590, 11, 293, 958, 1243, 291, 603, 536, 3537, 5852, 382, 51074, 51074, 731, 13, 51124, 51124, 407, 291, 586, 362, 257, 688, 295, 4005, 3873, 295, 3479, 2539, 11, 457, 577, 360, 291, 764, 613, 51371, 51371, 3873, 8659, 30, 51470, 51470, 286, 600, 1612, 5491, 2171, 747, 2309, 2493, 281, 1322, 257, 3479, 2539, 1185, 300, 286, 519, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1894958535420526, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.03897346556186676}, {"id": 7, "seek": 2708, "start": 27.08, "end": 32.04, "text": " a more skilled team could have taken or done in just a couple of weeks.", "tokens": [50364, 257, 544, 19690, 1469, 727, 362, 2726, 420, 1096, 294, 445, 257, 1916, 295, 3259, 13, 50612, 50612, 400, 264, 10493, 295, 577, 2661, 291, 393, 483, 257, 3479, 2539, 1185, 281, 589, 731, 50812, 50812, 486, 5672, 281, 257, 2416, 644, 322, 577, 731, 291, 393, 18227, 652, 665, 5327, 466, 437, 51050, 51050, 281, 360, 958, 294, 264, 1164, 295, 257, 3479, 2539, 1716, 13, 51218, 51218, 407, 294, 341, 1243, 286, 1454, 281, 2073, 365, 291, 257, 1230, 295, 6082, 322, 577, 281, 652, 5327, 466, 51452, 51452, 437, 281, 360, 958, 294, 257, 3479, 2539, 1716, 300, 286, 1454, 486, 917, 493, 6816, 291, 257, 688, 295, 51676, 51676, 565, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09758157489680443, "compression_ratio": 1.9098039215686275, "no_speech_prob": 3.5004516121261986e-06}, {"id": 8, "seek": 2708, "start": 32.04, "end": 36.04, "text": " And the efficiency of how quickly you can get a machine learning system to work well", "tokens": [50364, 257, 544, 19690, 1469, 727, 362, 2726, 420, 1096, 294, 445, 257, 1916, 295, 3259, 13, 50612, 50612, 400, 264, 10493, 295, 577, 2661, 291, 393, 483, 257, 3479, 2539, 1185, 281, 589, 731, 50812, 50812, 486, 5672, 281, 257, 2416, 644, 322, 577, 731, 291, 393, 18227, 652, 665, 5327, 466, 437, 51050, 51050, 281, 360, 958, 294, 264, 1164, 295, 257, 3479, 2539, 1716, 13, 51218, 51218, 407, 294, 341, 1243, 286, 1454, 281, 2073, 365, 291, 257, 1230, 295, 6082, 322, 577, 281, 652, 5327, 466, 51452, 51452, 437, 281, 360, 958, 294, 257, 3479, 2539, 1716, 300, 286, 1454, 486, 917, 493, 6816, 291, 257, 688, 295, 51676, 51676, 565, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09758157489680443, "compression_ratio": 1.9098039215686275, "no_speech_prob": 3.5004516121261986e-06}, {"id": 9, "seek": 2708, "start": 36.04, "end": 40.8, "text": " will depend to a large part on how well you can repeatedly make good decisions about what", "tokens": [50364, 257, 544, 19690, 1469, 727, 362, 2726, 420, 1096, 294, 445, 257, 1916, 295, 3259, 13, 50612, 50612, 400, 264, 10493, 295, 577, 2661, 291, 393, 483, 257, 3479, 2539, 1185, 281, 589, 731, 50812, 50812, 486, 5672, 281, 257, 2416, 644, 322, 577, 731, 291, 393, 18227, 652, 665, 5327, 466, 437, 51050, 51050, 281, 360, 958, 294, 264, 1164, 295, 257, 3479, 2539, 1716, 13, 51218, 51218, 407, 294, 341, 1243, 286, 1454, 281, 2073, 365, 291, 257, 1230, 295, 6082, 322, 577, 281, 652, 5327, 466, 51452, 51452, 437, 281, 360, 958, 294, 257, 3479, 2539, 1716, 300, 286, 1454, 486, 917, 493, 6816, 291, 257, 688, 295, 51676, 51676, 565, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09758157489680443, "compression_ratio": 1.9098039215686275, "no_speech_prob": 3.5004516121261986e-06}, {"id": 10, "seek": 2708, "start": 40.8, "end": 44.16, "text": " to do next in the course of a machine learning project.", "tokens": [50364, 257, 544, 19690, 1469, 727, 362, 2726, 420, 1096, 294, 445, 257, 1916, 295, 3259, 13, 50612, 50612, 400, 264, 10493, 295, 577, 2661, 291, 393, 483, 257, 3479, 2539, 1185, 281, 589, 731, 50812, 50812, 486, 5672, 281, 257, 2416, 644, 322, 577, 731, 291, 393, 18227, 652, 665, 5327, 466, 437, 51050, 51050, 281, 360, 958, 294, 264, 1164, 295, 257, 3479, 2539, 1716, 13, 51218, 51218, 407, 294, 341, 1243, 286, 1454, 281, 2073, 365, 291, 257, 1230, 295, 6082, 322, 577, 281, 652, 5327, 466, 51452, 51452, 437, 281, 360, 958, 294, 257, 3479, 2539, 1716, 300, 286, 1454, 486, 917, 493, 6816, 291, 257, 688, 295, 51676, 51676, 565, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09758157489680443, "compression_ratio": 1.9098039215686275, "no_speech_prob": 3.5004516121261986e-06}, {"id": 11, "seek": 2708, "start": 44.16, "end": 48.84, "text": " So in this week I hope to share with you a number of tips on how to make decisions about", "tokens": [50364, 257, 544, 19690, 1469, 727, 362, 2726, 420, 1096, 294, 445, 257, 1916, 295, 3259, 13, 50612, 50612, 400, 264, 10493, 295, 577, 2661, 291, 393, 483, 257, 3479, 2539, 1185, 281, 589, 731, 50812, 50812, 486, 5672, 281, 257, 2416, 644, 322, 577, 731, 291, 393, 18227, 652, 665, 5327, 466, 437, 51050, 51050, 281, 360, 958, 294, 264, 1164, 295, 257, 3479, 2539, 1716, 13, 51218, 51218, 407, 294, 341, 1243, 286, 1454, 281, 2073, 365, 291, 257, 1230, 295, 6082, 322, 577, 281, 652, 5327, 466, 51452, 51452, 437, 281, 360, 958, 294, 257, 3479, 2539, 1716, 300, 286, 1454, 486, 917, 493, 6816, 291, 257, 688, 295, 51676, 51676, 565, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09758157489680443, "compression_ratio": 1.9098039215686275, "no_speech_prob": 3.5004516121261986e-06}, {"id": 12, "seek": 2708, "start": 48.84, "end": 53.32, "text": " what to do next in a machine learning project that I hope will end up saving you a lot of", "tokens": [50364, 257, 544, 19690, 1469, 727, 362, 2726, 420, 1096, 294, 445, 257, 1916, 295, 3259, 13, 50612, 50612, 400, 264, 10493, 295, 577, 2661, 291, 393, 483, 257, 3479, 2539, 1185, 281, 589, 731, 50812, 50812, 486, 5672, 281, 257, 2416, 644, 322, 577, 731, 291, 393, 18227, 652, 665, 5327, 466, 437, 51050, 51050, 281, 360, 958, 294, 264, 1164, 295, 257, 3479, 2539, 1716, 13, 51218, 51218, 407, 294, 341, 1243, 286, 1454, 281, 2073, 365, 291, 257, 1230, 295, 6082, 322, 577, 281, 652, 5327, 466, 51452, 51452, 437, 281, 360, 958, 294, 257, 3479, 2539, 1716, 300, 286, 1454, 486, 917, 493, 6816, 291, 257, 688, 295, 51676, 51676, 565, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09758157489680443, "compression_ratio": 1.9098039215686275, "no_speech_prob": 3.5004516121261986e-06}, {"id": 13, "seek": 2708, "start": 53.32, "end": 54.44, "text": " time.", "tokens": [50364, 257, 544, 19690, 1469, 727, 362, 2726, 420, 1096, 294, 445, 257, 1916, 295, 3259, 13, 50612, 50612, 400, 264, 10493, 295, 577, 2661, 291, 393, 483, 257, 3479, 2539, 1185, 281, 589, 731, 50812, 50812, 486, 5672, 281, 257, 2416, 644, 322, 577, 731, 291, 393, 18227, 652, 665, 5327, 466, 437, 51050, 51050, 281, 360, 958, 294, 264, 1164, 295, 257, 3479, 2539, 1716, 13, 51218, 51218, 407, 294, 341, 1243, 286, 1454, 281, 2073, 365, 291, 257, 1230, 295, 6082, 322, 577, 281, 652, 5327, 466, 51452, 51452, 437, 281, 360, 958, 294, 257, 3479, 2539, 1716, 300, 286, 1454, 486, 917, 493, 6816, 291, 257, 688, 295, 51676, 51676, 565, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09758157489680443, "compression_ratio": 1.9098039215686275, "no_speech_prob": 3.5004516121261986e-06}, {"id": 14, "seek": 5444, "start": 54.44, "end": 59.64, "text": " So let's take a look at some advice on how to build machine learning systems.", "tokens": [50364, 407, 718, 311, 747, 257, 574, 412, 512, 5192, 322, 577, 281, 1322, 3479, 2539, 3652, 13, 50624, 50624, 961, 311, 722, 365, 364, 1365, 13, 50726, 50726, 6463, 291, 600, 12270, 3890, 1602, 8213, 24590, 281, 6069, 6849, 7901, 13, 50948, 50948, 407, 291, 362, 264, 7713, 2063, 2445, 337, 428, 2539, 9284, 11, 8889, 6713, 1804, 341, 51228, 51228, 3890, 2144, 1433, 13, 51306, 51306, 583, 498, 291, 3847, 264, 2316, 293, 915, 300, 309, 1669, 517, 24870, 1188, 2416, 13603, 294, 1080, 21264, 11, 51635, 51635, 437, 360, 291, 853, 958, 30, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.09291015008483271, "compression_ratio": 1.5862068965517242, "no_speech_prob": 1.933232624651282e-06}, {"id": 15, "seek": 5444, "start": 59.64, "end": 61.68, "text": " Let's start with an example.", "tokens": [50364, 407, 718, 311, 747, 257, 574, 412, 512, 5192, 322, 577, 281, 1322, 3479, 2539, 3652, 13, 50624, 50624, 961, 311, 722, 365, 364, 1365, 13, 50726, 50726, 6463, 291, 600, 12270, 3890, 1602, 8213, 24590, 281, 6069, 6849, 7901, 13, 50948, 50948, 407, 291, 362, 264, 7713, 2063, 2445, 337, 428, 2539, 9284, 11, 8889, 6713, 1804, 341, 51228, 51228, 3890, 2144, 1433, 13, 51306, 51306, 583, 498, 291, 3847, 264, 2316, 293, 915, 300, 309, 1669, 517, 24870, 1188, 2416, 13603, 294, 1080, 21264, 11, 51635, 51635, 437, 360, 291, 853, 958, 30, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.09291015008483271, "compression_ratio": 1.5862068965517242, "no_speech_prob": 1.933232624651282e-06}, {"id": 16, "seek": 5444, "start": 61.68, "end": 66.12, "text": " Say you've implemented regularized linear regression to predict housing prices.", "tokens": [50364, 407, 718, 311, 747, 257, 574, 412, 512, 5192, 322, 577, 281, 1322, 3479, 2539, 3652, 13, 50624, 50624, 961, 311, 722, 365, 364, 1365, 13, 50726, 50726, 6463, 291, 600, 12270, 3890, 1602, 8213, 24590, 281, 6069, 6849, 7901, 13, 50948, 50948, 407, 291, 362, 264, 7713, 2063, 2445, 337, 428, 2539, 9284, 11, 8889, 6713, 1804, 341, 51228, 51228, 3890, 2144, 1433, 13, 51306, 51306, 583, 498, 291, 3847, 264, 2316, 293, 915, 300, 309, 1669, 517, 24870, 1188, 2416, 13603, 294, 1080, 21264, 11, 51635, 51635, 437, 360, 291, 853, 958, 30, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.09291015008483271, "compression_ratio": 1.5862068965517242, "no_speech_prob": 1.933232624651282e-06}, {"id": 17, "seek": 5444, "start": 66.12, "end": 71.72, "text": " So you have the usual cost function for your learning algorithm, squared error plus this", "tokens": [50364, 407, 718, 311, 747, 257, 574, 412, 512, 5192, 322, 577, 281, 1322, 3479, 2539, 3652, 13, 50624, 50624, 961, 311, 722, 365, 364, 1365, 13, 50726, 50726, 6463, 291, 600, 12270, 3890, 1602, 8213, 24590, 281, 6069, 6849, 7901, 13, 50948, 50948, 407, 291, 362, 264, 7713, 2063, 2445, 337, 428, 2539, 9284, 11, 8889, 6713, 1804, 341, 51228, 51228, 3890, 2144, 1433, 13, 51306, 51306, 583, 498, 291, 3847, 264, 2316, 293, 915, 300, 309, 1669, 517, 24870, 1188, 2416, 13603, 294, 1080, 21264, 11, 51635, 51635, 437, 360, 291, 853, 958, 30, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.09291015008483271, "compression_ratio": 1.5862068965517242, "no_speech_prob": 1.933232624651282e-06}, {"id": 18, "seek": 5444, "start": 71.72, "end": 73.28, "text": " regularization term.", "tokens": [50364, 407, 718, 311, 747, 257, 574, 412, 512, 5192, 322, 577, 281, 1322, 3479, 2539, 3652, 13, 50624, 50624, 961, 311, 722, 365, 364, 1365, 13, 50726, 50726, 6463, 291, 600, 12270, 3890, 1602, 8213, 24590, 281, 6069, 6849, 7901, 13, 50948, 50948, 407, 291, 362, 264, 7713, 2063, 2445, 337, 428, 2539, 9284, 11, 8889, 6713, 1804, 341, 51228, 51228, 3890, 2144, 1433, 13, 51306, 51306, 583, 498, 291, 3847, 264, 2316, 293, 915, 300, 309, 1669, 517, 24870, 1188, 2416, 13603, 294, 1080, 21264, 11, 51635, 51635, 437, 360, 291, 853, 958, 30, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.09291015008483271, "compression_ratio": 1.5862068965517242, "no_speech_prob": 1.933232624651282e-06}, {"id": 19, "seek": 5444, "start": 73.28, "end": 79.86, "text": " But if you train the model and find that it makes unacceptably large errors in its predictions,", "tokens": [50364, 407, 718, 311, 747, 257, 574, 412, 512, 5192, 322, 577, 281, 1322, 3479, 2539, 3652, 13, 50624, 50624, 961, 311, 722, 365, 364, 1365, 13, 50726, 50726, 6463, 291, 600, 12270, 3890, 1602, 8213, 24590, 281, 6069, 6849, 7901, 13, 50948, 50948, 407, 291, 362, 264, 7713, 2063, 2445, 337, 428, 2539, 9284, 11, 8889, 6713, 1804, 341, 51228, 51228, 3890, 2144, 1433, 13, 51306, 51306, 583, 498, 291, 3847, 264, 2316, 293, 915, 300, 309, 1669, 517, 24870, 1188, 2416, 13603, 294, 1080, 21264, 11, 51635, 51635, 437, 360, 291, 853, 958, 30, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.09291015008483271, "compression_ratio": 1.5862068965517242, "no_speech_prob": 1.933232624651282e-06}, {"id": 20, "seek": 5444, "start": 79.86, "end": 80.86, "text": " what do you try next?", "tokens": [50364, 407, 718, 311, 747, 257, 574, 412, 512, 5192, 322, 577, 281, 1322, 3479, 2539, 3652, 13, 50624, 50624, 961, 311, 722, 365, 364, 1365, 13, 50726, 50726, 6463, 291, 600, 12270, 3890, 1602, 8213, 24590, 281, 6069, 6849, 7901, 13, 50948, 50948, 407, 291, 362, 264, 7713, 2063, 2445, 337, 428, 2539, 9284, 11, 8889, 6713, 1804, 341, 51228, 51228, 3890, 2144, 1433, 13, 51306, 51306, 583, 498, 291, 3847, 264, 2316, 293, 915, 300, 309, 1669, 517, 24870, 1188, 2416, 13603, 294, 1080, 21264, 11, 51635, 51635, 437, 360, 291, 853, 958, 30, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.09291015008483271, "compression_ratio": 1.5862068965517242, "no_speech_prob": 1.933232624651282e-06}, {"id": 21, "seek": 8086, "start": 80.86, "end": 84.88, "text": " When you're building a machine learning algorithm, there are usually a lot of different things", "tokens": [50364, 1133, 291, 434, 2390, 257, 3479, 2539, 9284, 11, 456, 366, 2673, 257, 688, 295, 819, 721, 50565, 50565, 291, 727, 853, 13, 50615, 50615, 1171, 1365, 11, 291, 727, 4536, 281, 483, 544, 3097, 5110, 1670, 309, 2544, 411, 1419, 50833, 50833, 544, 1412, 820, 854, 11, 558, 30, 50950, 50950, 1610, 1310, 291, 519, 1310, 291, 362, 886, 867, 4122, 11, 291, 727, 853, 257, 4356, 992, 295, 4122, 13, 51203, 51203, 1610, 1310, 291, 528, 281, 483, 4497, 4122, 1270, 382, 915, 4497, 7221, 295, 264, 51455, 51455, 8078, 281, 14432, 666, 428, 1412, 13, 51582, 51582, 400, 1310, 300, 486, 854, 309, 281, 360, 1101, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.13153457641601562, "compression_ratio": 1.7712177121771218, "no_speech_prob": 1.9332871943333885e-06}, {"id": 22, "seek": 8086, "start": 84.88, "end": 85.88, "text": " you could try.", "tokens": [50364, 1133, 291, 434, 2390, 257, 3479, 2539, 9284, 11, 456, 366, 2673, 257, 688, 295, 819, 721, 50565, 50565, 291, 727, 853, 13, 50615, 50615, 1171, 1365, 11, 291, 727, 4536, 281, 483, 544, 3097, 5110, 1670, 309, 2544, 411, 1419, 50833, 50833, 544, 1412, 820, 854, 11, 558, 30, 50950, 50950, 1610, 1310, 291, 519, 1310, 291, 362, 886, 867, 4122, 11, 291, 727, 853, 257, 4356, 992, 295, 4122, 13, 51203, 51203, 1610, 1310, 291, 528, 281, 483, 4497, 4122, 1270, 382, 915, 4497, 7221, 295, 264, 51455, 51455, 8078, 281, 14432, 666, 428, 1412, 13, 51582, 51582, 400, 1310, 300, 486, 854, 309, 281, 360, 1101, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.13153457641601562, "compression_ratio": 1.7712177121771218, "no_speech_prob": 1.9332871943333885e-06}, {"id": 23, "seek": 8086, "start": 85.88, "end": 90.24, "text": " For example, you could decide to get more training examples since it seems like having", "tokens": [50364, 1133, 291, 434, 2390, 257, 3479, 2539, 9284, 11, 456, 366, 2673, 257, 688, 295, 819, 721, 50565, 50565, 291, 727, 853, 13, 50615, 50615, 1171, 1365, 11, 291, 727, 4536, 281, 483, 544, 3097, 5110, 1670, 309, 2544, 411, 1419, 50833, 50833, 544, 1412, 820, 854, 11, 558, 30, 50950, 50950, 1610, 1310, 291, 519, 1310, 291, 362, 886, 867, 4122, 11, 291, 727, 853, 257, 4356, 992, 295, 4122, 13, 51203, 51203, 1610, 1310, 291, 528, 281, 483, 4497, 4122, 1270, 382, 915, 4497, 7221, 295, 264, 51455, 51455, 8078, 281, 14432, 666, 428, 1412, 13, 51582, 51582, 400, 1310, 300, 486, 854, 309, 281, 360, 1101, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.13153457641601562, "compression_ratio": 1.7712177121771218, "no_speech_prob": 1.9332871943333885e-06}, {"id": 24, "seek": 8086, "start": 90.24, "end": 92.58, "text": " more data should help, right?", "tokens": [50364, 1133, 291, 434, 2390, 257, 3479, 2539, 9284, 11, 456, 366, 2673, 257, 688, 295, 819, 721, 50565, 50565, 291, 727, 853, 13, 50615, 50615, 1171, 1365, 11, 291, 727, 4536, 281, 483, 544, 3097, 5110, 1670, 309, 2544, 411, 1419, 50833, 50833, 544, 1412, 820, 854, 11, 558, 30, 50950, 50950, 1610, 1310, 291, 519, 1310, 291, 362, 886, 867, 4122, 11, 291, 727, 853, 257, 4356, 992, 295, 4122, 13, 51203, 51203, 1610, 1310, 291, 528, 281, 483, 4497, 4122, 1270, 382, 915, 4497, 7221, 295, 264, 51455, 51455, 8078, 281, 14432, 666, 428, 1412, 13, 51582, 51582, 400, 1310, 300, 486, 854, 309, 281, 360, 1101, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.13153457641601562, "compression_ratio": 1.7712177121771218, "no_speech_prob": 1.9332871943333885e-06}, {"id": 25, "seek": 8086, "start": 92.58, "end": 97.64, "text": " Or maybe you think maybe you have too many features, you could try a smaller set of features.", "tokens": [50364, 1133, 291, 434, 2390, 257, 3479, 2539, 9284, 11, 456, 366, 2673, 257, 688, 295, 819, 721, 50565, 50565, 291, 727, 853, 13, 50615, 50615, 1171, 1365, 11, 291, 727, 4536, 281, 483, 544, 3097, 5110, 1670, 309, 2544, 411, 1419, 50833, 50833, 544, 1412, 820, 854, 11, 558, 30, 50950, 50950, 1610, 1310, 291, 519, 1310, 291, 362, 886, 867, 4122, 11, 291, 727, 853, 257, 4356, 992, 295, 4122, 13, 51203, 51203, 1610, 1310, 291, 528, 281, 483, 4497, 4122, 1270, 382, 915, 4497, 7221, 295, 264, 51455, 51455, 8078, 281, 14432, 666, 428, 1412, 13, 51582, 51582, 400, 1310, 300, 486, 854, 309, 281, 360, 1101, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.13153457641601562, "compression_ratio": 1.7712177121771218, "no_speech_prob": 1.9332871943333885e-06}, {"id": 26, "seek": 8086, "start": 97.64, "end": 102.68, "text": " Or maybe you want to get additional features such as find additional properties of the", "tokens": [50364, 1133, 291, 434, 2390, 257, 3479, 2539, 9284, 11, 456, 366, 2673, 257, 688, 295, 819, 721, 50565, 50565, 291, 727, 853, 13, 50615, 50615, 1171, 1365, 11, 291, 727, 4536, 281, 483, 544, 3097, 5110, 1670, 309, 2544, 411, 1419, 50833, 50833, 544, 1412, 820, 854, 11, 558, 30, 50950, 50950, 1610, 1310, 291, 519, 1310, 291, 362, 886, 867, 4122, 11, 291, 727, 853, 257, 4356, 992, 295, 4122, 13, 51203, 51203, 1610, 1310, 291, 528, 281, 483, 4497, 4122, 1270, 382, 915, 4497, 7221, 295, 264, 51455, 51455, 8078, 281, 14432, 666, 428, 1412, 13, 51582, 51582, 400, 1310, 300, 486, 854, 309, 281, 360, 1101, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.13153457641601562, "compression_ratio": 1.7712177121771218, "no_speech_prob": 1.9332871943333885e-06}, {"id": 27, "seek": 8086, "start": 102.68, "end": 105.22, "text": " houses to toss into your data.", "tokens": [50364, 1133, 291, 434, 2390, 257, 3479, 2539, 9284, 11, 456, 366, 2673, 257, 688, 295, 819, 721, 50565, 50565, 291, 727, 853, 13, 50615, 50615, 1171, 1365, 11, 291, 727, 4536, 281, 483, 544, 3097, 5110, 1670, 309, 2544, 411, 1419, 50833, 50833, 544, 1412, 820, 854, 11, 558, 30, 50950, 50950, 1610, 1310, 291, 519, 1310, 291, 362, 886, 867, 4122, 11, 291, 727, 853, 257, 4356, 992, 295, 4122, 13, 51203, 51203, 1610, 1310, 291, 528, 281, 483, 4497, 4122, 1270, 382, 915, 4497, 7221, 295, 264, 51455, 51455, 8078, 281, 14432, 666, 428, 1412, 13, 51582, 51582, 400, 1310, 300, 486, 854, 309, 281, 360, 1101, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.13153457641601562, "compression_ratio": 1.7712177121771218, "no_speech_prob": 1.9332871943333885e-06}, {"id": 28, "seek": 8086, "start": 105.22, "end": 107.42, "text": " And maybe that will help it to do better.", "tokens": [50364, 1133, 291, 434, 2390, 257, 3479, 2539, 9284, 11, 456, 366, 2673, 257, 688, 295, 819, 721, 50565, 50565, 291, 727, 853, 13, 50615, 50615, 1171, 1365, 11, 291, 727, 4536, 281, 483, 544, 3097, 5110, 1670, 309, 2544, 411, 1419, 50833, 50833, 544, 1412, 820, 854, 11, 558, 30, 50950, 50950, 1610, 1310, 291, 519, 1310, 291, 362, 886, 867, 4122, 11, 291, 727, 853, 257, 4356, 992, 295, 4122, 13, 51203, 51203, 1610, 1310, 291, 528, 281, 483, 4497, 4122, 1270, 382, 915, 4497, 7221, 295, 264, 51455, 51455, 8078, 281, 14432, 666, 428, 1412, 13, 51582, 51582, 400, 1310, 300, 486, 854, 309, 281, 360, 1101, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.13153457641601562, "compression_ratio": 1.7712177121771218, "no_speech_prob": 1.9332871943333885e-06}, {"id": 29, "seek": 10742, "start": 107.42, "end": 112.76, "text": " Or you might take the existing features x1, x2, and so on and try adding polynomial features", "tokens": [50364, 1610, 291, 1062, 747, 264, 6741, 4122, 2031, 16, 11, 2031, 17, 11, 293, 370, 322, 293, 853, 5127, 26110, 4122, 50631, 50631, 411, 2031, 16, 8889, 11, 2031, 17, 8889, 11, 2031, 16, 2031, 17, 293, 370, 322, 13, 50795, 50795, 1610, 291, 1062, 2441, 498, 264, 2158, 295, 13607, 307, 8614, 731, 293, 291, 1062, 584, 11, 1310, 309, 311, 51053, 51053, 886, 955, 11, 286, 528, 281, 11514, 309, 13, 51131, 51131, 1610, 291, 815, 584, 11, 1954, 11, 1310, 309, 311, 886, 1359, 11, 286, 528, 281, 853, 5662, 309, 13, 51343, 51343, 407, 322, 604, 2212, 3479, 2539, 3861, 11, 309, 486, 2049, 1261, 484, 300, 512, 295, 613, 51600, 51600, 721, 727, 312, 49795, 293, 512, 295, 613, 721, 406, 49795, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.13156388022682883, "compression_ratio": 1.8288973384030418, "no_speech_prob": 8.315200261677091e-07}, {"id": 30, "seek": 10742, "start": 112.76, "end": 116.04, "text": " like x1 squared, x2 squared, x1 x2 and so on.", "tokens": [50364, 1610, 291, 1062, 747, 264, 6741, 4122, 2031, 16, 11, 2031, 17, 11, 293, 370, 322, 293, 853, 5127, 26110, 4122, 50631, 50631, 411, 2031, 16, 8889, 11, 2031, 17, 8889, 11, 2031, 16, 2031, 17, 293, 370, 322, 13, 50795, 50795, 1610, 291, 1062, 2441, 498, 264, 2158, 295, 13607, 307, 8614, 731, 293, 291, 1062, 584, 11, 1310, 309, 311, 51053, 51053, 886, 955, 11, 286, 528, 281, 11514, 309, 13, 51131, 51131, 1610, 291, 815, 584, 11, 1954, 11, 1310, 309, 311, 886, 1359, 11, 286, 528, 281, 853, 5662, 309, 13, 51343, 51343, 407, 322, 604, 2212, 3479, 2539, 3861, 11, 309, 486, 2049, 1261, 484, 300, 512, 295, 613, 51600, 51600, 721, 727, 312, 49795, 293, 512, 295, 613, 721, 406, 49795, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.13156388022682883, "compression_ratio": 1.8288973384030418, "no_speech_prob": 8.315200261677091e-07}, {"id": 31, "seek": 10742, "start": 116.04, "end": 121.2, "text": " Or you might wonder if the value of lambda is chosen well and you might say, maybe it's", "tokens": [50364, 1610, 291, 1062, 747, 264, 6741, 4122, 2031, 16, 11, 2031, 17, 11, 293, 370, 322, 293, 853, 5127, 26110, 4122, 50631, 50631, 411, 2031, 16, 8889, 11, 2031, 17, 8889, 11, 2031, 16, 2031, 17, 293, 370, 322, 13, 50795, 50795, 1610, 291, 1062, 2441, 498, 264, 2158, 295, 13607, 307, 8614, 731, 293, 291, 1062, 584, 11, 1310, 309, 311, 51053, 51053, 886, 955, 11, 286, 528, 281, 11514, 309, 13, 51131, 51131, 1610, 291, 815, 584, 11, 1954, 11, 1310, 309, 311, 886, 1359, 11, 286, 528, 281, 853, 5662, 309, 13, 51343, 51343, 407, 322, 604, 2212, 3479, 2539, 3861, 11, 309, 486, 2049, 1261, 484, 300, 512, 295, 613, 51600, 51600, 721, 727, 312, 49795, 293, 512, 295, 613, 721, 406, 49795, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.13156388022682883, "compression_ratio": 1.8288973384030418, "no_speech_prob": 8.315200261677091e-07}, {"id": 32, "seek": 10742, "start": 121.2, "end": 122.76, "text": " too big, I want to decrease it.", "tokens": [50364, 1610, 291, 1062, 747, 264, 6741, 4122, 2031, 16, 11, 2031, 17, 11, 293, 370, 322, 293, 853, 5127, 26110, 4122, 50631, 50631, 411, 2031, 16, 8889, 11, 2031, 17, 8889, 11, 2031, 16, 2031, 17, 293, 370, 322, 13, 50795, 50795, 1610, 291, 1062, 2441, 498, 264, 2158, 295, 13607, 307, 8614, 731, 293, 291, 1062, 584, 11, 1310, 309, 311, 51053, 51053, 886, 955, 11, 286, 528, 281, 11514, 309, 13, 51131, 51131, 1610, 291, 815, 584, 11, 1954, 11, 1310, 309, 311, 886, 1359, 11, 286, 528, 281, 853, 5662, 309, 13, 51343, 51343, 407, 322, 604, 2212, 3479, 2539, 3861, 11, 309, 486, 2049, 1261, 484, 300, 512, 295, 613, 51600, 51600, 721, 727, 312, 49795, 293, 512, 295, 613, 721, 406, 49795, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.13156388022682883, "compression_ratio": 1.8288973384030418, "no_speech_prob": 8.315200261677091e-07}, {"id": 33, "seek": 10742, "start": 122.76, "end": 127.0, "text": " Or you may say, oh, maybe it's too small, I want to try increasing it.", "tokens": [50364, 1610, 291, 1062, 747, 264, 6741, 4122, 2031, 16, 11, 2031, 17, 11, 293, 370, 322, 293, 853, 5127, 26110, 4122, 50631, 50631, 411, 2031, 16, 8889, 11, 2031, 17, 8889, 11, 2031, 16, 2031, 17, 293, 370, 322, 13, 50795, 50795, 1610, 291, 1062, 2441, 498, 264, 2158, 295, 13607, 307, 8614, 731, 293, 291, 1062, 584, 11, 1310, 309, 311, 51053, 51053, 886, 955, 11, 286, 528, 281, 11514, 309, 13, 51131, 51131, 1610, 291, 815, 584, 11, 1954, 11, 1310, 309, 311, 886, 1359, 11, 286, 528, 281, 853, 5662, 309, 13, 51343, 51343, 407, 322, 604, 2212, 3479, 2539, 3861, 11, 309, 486, 2049, 1261, 484, 300, 512, 295, 613, 51600, 51600, 721, 727, 312, 49795, 293, 512, 295, 613, 721, 406, 49795, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.13156388022682883, "compression_ratio": 1.8288973384030418, "no_speech_prob": 8.315200261677091e-07}, {"id": 34, "seek": 10742, "start": 127.0, "end": 132.14, "text": " So on any given machine learning application, it will often turn out that some of these", "tokens": [50364, 1610, 291, 1062, 747, 264, 6741, 4122, 2031, 16, 11, 2031, 17, 11, 293, 370, 322, 293, 853, 5127, 26110, 4122, 50631, 50631, 411, 2031, 16, 8889, 11, 2031, 17, 8889, 11, 2031, 16, 2031, 17, 293, 370, 322, 13, 50795, 50795, 1610, 291, 1062, 2441, 498, 264, 2158, 295, 13607, 307, 8614, 731, 293, 291, 1062, 584, 11, 1310, 309, 311, 51053, 51053, 886, 955, 11, 286, 528, 281, 11514, 309, 13, 51131, 51131, 1610, 291, 815, 584, 11, 1954, 11, 1310, 309, 311, 886, 1359, 11, 286, 528, 281, 853, 5662, 309, 13, 51343, 51343, 407, 322, 604, 2212, 3479, 2539, 3861, 11, 309, 486, 2049, 1261, 484, 300, 512, 295, 613, 51600, 51600, 721, 727, 312, 49795, 293, 512, 295, 613, 721, 406, 49795, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.13156388022682883, "compression_ratio": 1.8288973384030418, "no_speech_prob": 8.315200261677091e-07}, {"id": 35, "seek": 10742, "start": 132.14, "end": 136.96, "text": " things could be fruitful and some of these things not fruitful.", "tokens": [50364, 1610, 291, 1062, 747, 264, 6741, 4122, 2031, 16, 11, 2031, 17, 11, 293, 370, 322, 293, 853, 5127, 26110, 4122, 50631, 50631, 411, 2031, 16, 8889, 11, 2031, 17, 8889, 11, 2031, 16, 2031, 17, 293, 370, 322, 13, 50795, 50795, 1610, 291, 1062, 2441, 498, 264, 2158, 295, 13607, 307, 8614, 731, 293, 291, 1062, 584, 11, 1310, 309, 311, 51053, 51053, 886, 955, 11, 286, 528, 281, 11514, 309, 13, 51131, 51131, 1610, 291, 815, 584, 11, 1954, 11, 1310, 309, 311, 886, 1359, 11, 286, 528, 281, 853, 5662, 309, 13, 51343, 51343, 407, 322, 604, 2212, 3479, 2539, 3861, 11, 309, 486, 2049, 1261, 484, 300, 512, 295, 613, 51600, 51600, 721, 727, 312, 49795, 293, 512, 295, 613, 721, 406, 49795, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.13156388022682883, "compression_ratio": 1.8288973384030418, "no_speech_prob": 8.315200261677091e-07}, {"id": 36, "seek": 13696, "start": 136.96, "end": 141.96, "text": " And a key to being effective at how you build a machine learning algorithm will be if you", "tokens": [50364, 400, 257, 2141, 281, 885, 4942, 412, 577, 291, 1322, 257, 3479, 2539, 9284, 486, 312, 498, 291, 50614, 50614, 393, 915, 257, 636, 281, 652, 665, 7994, 466, 689, 281, 1963, 428, 565, 13, 50844, 50844, 1171, 1365, 11, 286, 362, 1612, 5491, 3496, 3736, 867, 11, 867, 2493, 12510, 544, 3097, 51104, 51104, 5110, 11, 1953, 300, 544, 3097, 1412, 575, 658, 281, 854, 13, 51318, 51318, 583, 309, 4523, 484, 2171, 309, 3665, 257, 688, 293, 2171, 309, 1177, 380, 13, 51522, 51522, 407, 294, 341, 1243, 11, 291, 1466, 466, 577, 281, 3985, 484, 257, 992, 295, 43215, 1167, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.11248017240453649, "compression_ratio": 1.6654275092936803, "no_speech_prob": 3.4464273994672112e-06}, {"id": 37, "seek": 13696, "start": 141.96, "end": 146.56, "text": " can find a way to make good choices about where to invest your time.", "tokens": [50364, 400, 257, 2141, 281, 885, 4942, 412, 577, 291, 1322, 257, 3479, 2539, 9284, 486, 312, 498, 291, 50614, 50614, 393, 915, 257, 636, 281, 652, 665, 7994, 466, 689, 281, 1963, 428, 565, 13, 50844, 50844, 1171, 1365, 11, 286, 362, 1612, 5491, 3496, 3736, 867, 11, 867, 2493, 12510, 544, 3097, 51104, 51104, 5110, 11, 1953, 300, 544, 3097, 1412, 575, 658, 281, 854, 13, 51318, 51318, 583, 309, 4523, 484, 2171, 309, 3665, 257, 688, 293, 2171, 309, 1177, 380, 13, 51522, 51522, 407, 294, 341, 1243, 11, 291, 1466, 466, 577, 281, 3985, 484, 257, 992, 295, 43215, 1167, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.11248017240453649, "compression_ratio": 1.6654275092936803, "no_speech_prob": 3.4464273994672112e-06}, {"id": 38, "seek": 13696, "start": 146.56, "end": 151.76000000000002, "text": " For example, I have seen teams spend literally many, many months collecting more training", "tokens": [50364, 400, 257, 2141, 281, 885, 4942, 412, 577, 291, 1322, 257, 3479, 2539, 9284, 486, 312, 498, 291, 50614, 50614, 393, 915, 257, 636, 281, 652, 665, 7994, 466, 689, 281, 1963, 428, 565, 13, 50844, 50844, 1171, 1365, 11, 286, 362, 1612, 5491, 3496, 3736, 867, 11, 867, 2493, 12510, 544, 3097, 51104, 51104, 5110, 11, 1953, 300, 544, 3097, 1412, 575, 658, 281, 854, 13, 51318, 51318, 583, 309, 4523, 484, 2171, 309, 3665, 257, 688, 293, 2171, 309, 1177, 380, 13, 51522, 51522, 407, 294, 341, 1243, 11, 291, 1466, 466, 577, 281, 3985, 484, 257, 992, 295, 43215, 1167, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.11248017240453649, "compression_ratio": 1.6654275092936803, "no_speech_prob": 3.4464273994672112e-06}, {"id": 39, "seek": 13696, "start": 151.76000000000002, "end": 156.04000000000002, "text": " examples, thinking that more training data has got to help.", "tokens": [50364, 400, 257, 2141, 281, 885, 4942, 412, 577, 291, 1322, 257, 3479, 2539, 9284, 486, 312, 498, 291, 50614, 50614, 393, 915, 257, 636, 281, 652, 665, 7994, 466, 689, 281, 1963, 428, 565, 13, 50844, 50844, 1171, 1365, 11, 286, 362, 1612, 5491, 3496, 3736, 867, 11, 867, 2493, 12510, 544, 3097, 51104, 51104, 5110, 11, 1953, 300, 544, 3097, 1412, 575, 658, 281, 854, 13, 51318, 51318, 583, 309, 4523, 484, 2171, 309, 3665, 257, 688, 293, 2171, 309, 1177, 380, 13, 51522, 51522, 407, 294, 341, 1243, 11, 291, 1466, 466, 577, 281, 3985, 484, 257, 992, 295, 43215, 1167, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.11248017240453649, "compression_ratio": 1.6654275092936803, "no_speech_prob": 3.4464273994672112e-06}, {"id": 40, "seek": 13696, "start": 156.04000000000002, "end": 160.12, "text": " But it turns out sometimes it helps a lot and sometimes it doesn't.", "tokens": [50364, 400, 257, 2141, 281, 885, 4942, 412, 577, 291, 1322, 257, 3479, 2539, 9284, 486, 312, 498, 291, 50614, 50614, 393, 915, 257, 636, 281, 652, 665, 7994, 466, 689, 281, 1963, 428, 565, 13, 50844, 50844, 1171, 1365, 11, 286, 362, 1612, 5491, 3496, 3736, 867, 11, 867, 2493, 12510, 544, 3097, 51104, 51104, 5110, 11, 1953, 300, 544, 3097, 1412, 575, 658, 281, 854, 13, 51318, 51318, 583, 309, 4523, 484, 2171, 309, 3665, 257, 688, 293, 2171, 309, 1177, 380, 13, 51522, 51522, 407, 294, 341, 1243, 11, 291, 1466, 466, 577, 281, 3985, 484, 257, 992, 295, 43215, 1167, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.11248017240453649, "compression_ratio": 1.6654275092936803, "no_speech_prob": 3.4464273994672112e-06}, {"id": 41, "seek": 13696, "start": 160.12, "end": 166.16, "text": " So in this week, you learn about how to carry out a set of diagnostics.", "tokens": [50364, 400, 257, 2141, 281, 885, 4942, 412, 577, 291, 1322, 257, 3479, 2539, 9284, 486, 312, 498, 291, 50614, 50614, 393, 915, 257, 636, 281, 652, 665, 7994, 466, 689, 281, 1963, 428, 565, 13, 50844, 50844, 1171, 1365, 11, 286, 362, 1612, 5491, 3496, 3736, 867, 11, 867, 2493, 12510, 544, 3097, 51104, 51104, 5110, 11, 1953, 300, 544, 3097, 1412, 575, 658, 281, 854, 13, 51318, 51318, 583, 309, 4523, 484, 2171, 309, 3665, 257, 688, 293, 2171, 309, 1177, 380, 13, 51522, 51522, 407, 294, 341, 1243, 11, 291, 1466, 466, 577, 281, 3985, 484, 257, 992, 295, 43215, 1167, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.11248017240453649, "compression_ratio": 1.6654275092936803, "no_speech_prob": 3.4464273994672112e-06}, {"id": 42, "seek": 16616, "start": 166.16, "end": 171.84, "text": " And by diagnostic, I mean a test you can run to gain insight into what is or isn't working", "tokens": [50364, 400, 538, 27897, 11, 286, 914, 257, 1500, 291, 393, 1190, 281, 6052, 11269, 666, 437, 307, 420, 1943, 380, 1364, 50648, 50648, 365, 257, 2539, 9284, 281, 6052, 10056, 666, 11470, 3389, 13, 50866, 50866, 400, 512, 295, 613, 43215, 1167, 486, 980, 291, 721, 411, 11, 307, 309, 3163, 3259, 420, 754, 2493, 51082, 51082, 12510, 544, 3097, 1412, 30, 51174, 51174, 1436, 498, 309, 307, 11, 550, 291, 393, 550, 352, 2286, 293, 652, 264, 6078, 281, 483, 544, 1412, 11, 51400, 51400, 597, 486, 4696, 1477, 281, 9689, 3389, 13, 51510, 51510, 1610, 498, 309, 1943, 380, 11, 550, 2614, 300, 27897, 727, 362, 6624, 291, 2493, 295, 565, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.11934547101036977, "compression_ratio": 1.767605633802817, "no_speech_prob": 2.8571896564244526e-06}, {"id": 43, "seek": 16616, "start": 171.84, "end": 176.2, "text": " with a learning algorithm to gain guidance into improving performance.", "tokens": [50364, 400, 538, 27897, 11, 286, 914, 257, 1500, 291, 393, 1190, 281, 6052, 11269, 666, 437, 307, 420, 1943, 380, 1364, 50648, 50648, 365, 257, 2539, 9284, 281, 6052, 10056, 666, 11470, 3389, 13, 50866, 50866, 400, 512, 295, 613, 43215, 1167, 486, 980, 291, 721, 411, 11, 307, 309, 3163, 3259, 420, 754, 2493, 51082, 51082, 12510, 544, 3097, 1412, 30, 51174, 51174, 1436, 498, 309, 307, 11, 550, 291, 393, 550, 352, 2286, 293, 652, 264, 6078, 281, 483, 544, 1412, 11, 51400, 51400, 597, 486, 4696, 1477, 281, 9689, 3389, 13, 51510, 51510, 1610, 498, 309, 1943, 380, 11, 550, 2614, 300, 27897, 727, 362, 6624, 291, 2493, 295, 565, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.11934547101036977, "compression_ratio": 1.767605633802817, "no_speech_prob": 2.8571896564244526e-06}, {"id": 44, "seek": 16616, "start": 176.2, "end": 180.51999999999998, "text": " And some of these diagnostics will tell you things like, is it worth weeks or even months", "tokens": [50364, 400, 538, 27897, 11, 286, 914, 257, 1500, 291, 393, 1190, 281, 6052, 11269, 666, 437, 307, 420, 1943, 380, 1364, 50648, 50648, 365, 257, 2539, 9284, 281, 6052, 10056, 666, 11470, 3389, 13, 50866, 50866, 400, 512, 295, 613, 43215, 1167, 486, 980, 291, 721, 411, 11, 307, 309, 3163, 3259, 420, 754, 2493, 51082, 51082, 12510, 544, 3097, 1412, 30, 51174, 51174, 1436, 498, 309, 307, 11, 550, 291, 393, 550, 352, 2286, 293, 652, 264, 6078, 281, 483, 544, 1412, 11, 51400, 51400, 597, 486, 4696, 1477, 281, 9689, 3389, 13, 51510, 51510, 1610, 498, 309, 1943, 380, 11, 550, 2614, 300, 27897, 727, 362, 6624, 291, 2493, 295, 565, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.11934547101036977, "compression_ratio": 1.767605633802817, "no_speech_prob": 2.8571896564244526e-06}, {"id": 45, "seek": 16616, "start": 180.51999999999998, "end": 182.35999999999999, "text": " collecting more training data?", "tokens": [50364, 400, 538, 27897, 11, 286, 914, 257, 1500, 291, 393, 1190, 281, 6052, 11269, 666, 437, 307, 420, 1943, 380, 1364, 50648, 50648, 365, 257, 2539, 9284, 281, 6052, 10056, 666, 11470, 3389, 13, 50866, 50866, 400, 512, 295, 613, 43215, 1167, 486, 980, 291, 721, 411, 11, 307, 309, 3163, 3259, 420, 754, 2493, 51082, 51082, 12510, 544, 3097, 1412, 30, 51174, 51174, 1436, 498, 309, 307, 11, 550, 291, 393, 550, 352, 2286, 293, 652, 264, 6078, 281, 483, 544, 1412, 11, 51400, 51400, 597, 486, 4696, 1477, 281, 9689, 3389, 13, 51510, 51510, 1610, 498, 309, 1943, 380, 11, 550, 2614, 300, 27897, 727, 362, 6624, 291, 2493, 295, 565, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.11934547101036977, "compression_ratio": 1.767605633802817, "no_speech_prob": 2.8571896564244526e-06}, {"id": 46, "seek": 16616, "start": 182.35999999999999, "end": 186.88, "text": " Because if it is, then you can then go ahead and make the investment to get more data,", "tokens": [50364, 400, 538, 27897, 11, 286, 914, 257, 1500, 291, 393, 1190, 281, 6052, 11269, 666, 437, 307, 420, 1943, 380, 1364, 50648, 50648, 365, 257, 2539, 9284, 281, 6052, 10056, 666, 11470, 3389, 13, 50866, 50866, 400, 512, 295, 613, 43215, 1167, 486, 980, 291, 721, 411, 11, 307, 309, 3163, 3259, 420, 754, 2493, 51082, 51082, 12510, 544, 3097, 1412, 30, 51174, 51174, 1436, 498, 309, 307, 11, 550, 291, 393, 550, 352, 2286, 293, 652, 264, 6078, 281, 483, 544, 1412, 11, 51400, 51400, 597, 486, 4696, 1477, 281, 9689, 3389, 13, 51510, 51510, 1610, 498, 309, 1943, 380, 11, 550, 2614, 300, 27897, 727, 362, 6624, 291, 2493, 295, 565, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.11934547101036977, "compression_ratio": 1.767605633802817, "no_speech_prob": 2.8571896564244526e-06}, {"id": 47, "seek": 16616, "start": 186.88, "end": 189.07999999999998, "text": " which will hopefully lead to improved performance.", "tokens": [50364, 400, 538, 27897, 11, 286, 914, 257, 1500, 291, 393, 1190, 281, 6052, 11269, 666, 437, 307, 420, 1943, 380, 1364, 50648, 50648, 365, 257, 2539, 9284, 281, 6052, 10056, 666, 11470, 3389, 13, 50866, 50866, 400, 512, 295, 613, 43215, 1167, 486, 980, 291, 721, 411, 11, 307, 309, 3163, 3259, 420, 754, 2493, 51082, 51082, 12510, 544, 3097, 1412, 30, 51174, 51174, 1436, 498, 309, 307, 11, 550, 291, 393, 550, 352, 2286, 293, 652, 264, 6078, 281, 483, 544, 1412, 11, 51400, 51400, 597, 486, 4696, 1477, 281, 9689, 3389, 13, 51510, 51510, 1610, 498, 309, 1943, 380, 11, 550, 2614, 300, 27897, 727, 362, 6624, 291, 2493, 295, 565, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.11934547101036977, "compression_ratio": 1.767605633802817, "no_speech_prob": 2.8571896564244526e-06}, {"id": 48, "seek": 16616, "start": 189.07999999999998, "end": 195.8, "text": " Or if it isn't, then running that diagnostic could have saved you months of time.", "tokens": [50364, 400, 538, 27897, 11, 286, 914, 257, 1500, 291, 393, 1190, 281, 6052, 11269, 666, 437, 307, 420, 1943, 380, 1364, 50648, 50648, 365, 257, 2539, 9284, 281, 6052, 10056, 666, 11470, 3389, 13, 50866, 50866, 400, 512, 295, 613, 43215, 1167, 486, 980, 291, 721, 411, 11, 307, 309, 3163, 3259, 420, 754, 2493, 51082, 51082, 12510, 544, 3097, 1412, 30, 51174, 51174, 1436, 498, 309, 307, 11, 550, 291, 393, 550, 352, 2286, 293, 652, 264, 6078, 281, 483, 544, 1412, 11, 51400, 51400, 597, 486, 4696, 1477, 281, 9689, 3389, 13, 51510, 51510, 1610, 498, 309, 1943, 380, 11, 550, 2614, 300, 27897, 727, 362, 6624, 291, 2493, 295, 565, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.11934547101036977, "compression_ratio": 1.767605633802817, "no_speech_prob": 2.8571896564244526e-06}, {"id": 49, "seek": 19580, "start": 195.8, "end": 201.96, "text": " And one thing you see this week as well is that diagnostics can take time to implement,", "tokens": [50364, 400, 472, 551, 291, 536, 341, 1243, 382, 731, 307, 300, 43215, 1167, 393, 747, 565, 281, 4445, 11, 50672, 50672, 457, 2614, 552, 393, 312, 257, 588, 665, 764, 295, 428, 565, 13, 50850, 50850, 407, 341, 1243, 11, 321, 603, 3496, 257, 688, 295, 565, 1417, 466, 819, 43215, 1167, 291, 393, 764, 281, 51098, 51098, 976, 291, 10056, 322, 577, 281, 3470, 428, 2539, 9284, 311, 3389, 13, 51290, 51290, 583, 700, 11, 718, 311, 747, 257, 574, 412, 577, 281, 13059, 264, 3389, 295, 428, 2539, 9284, 13, 51532, 51532, 961, 311, 352, 360, 300, 294, 264, 958, 960, 13, 51606], "temperature": 0.0, "avg_logprob": -0.09059133262277763, "compression_ratio": 1.7755102040816326, "no_speech_prob": 2.665238753252197e-05}, {"id": 50, "seek": 19580, "start": 201.96, "end": 205.52, "text": " but running them can be a very good use of your time.", "tokens": [50364, 400, 472, 551, 291, 536, 341, 1243, 382, 731, 307, 300, 43215, 1167, 393, 747, 565, 281, 4445, 11, 50672, 50672, 457, 2614, 552, 393, 312, 257, 588, 665, 764, 295, 428, 565, 13, 50850, 50850, 407, 341, 1243, 11, 321, 603, 3496, 257, 688, 295, 565, 1417, 466, 819, 43215, 1167, 291, 393, 764, 281, 51098, 51098, 976, 291, 10056, 322, 577, 281, 3470, 428, 2539, 9284, 311, 3389, 13, 51290, 51290, 583, 700, 11, 718, 311, 747, 257, 574, 412, 577, 281, 13059, 264, 3389, 295, 428, 2539, 9284, 13, 51532, 51532, 961, 311, 352, 360, 300, 294, 264, 958, 960, 13, 51606], "temperature": 0.0, "avg_logprob": -0.09059133262277763, "compression_ratio": 1.7755102040816326, "no_speech_prob": 2.665238753252197e-05}, {"id": 51, "seek": 19580, "start": 205.52, "end": 210.48000000000002, "text": " So this week, we'll spend a lot of time talking about different diagnostics you can use to", "tokens": [50364, 400, 472, 551, 291, 536, 341, 1243, 382, 731, 307, 300, 43215, 1167, 393, 747, 565, 281, 4445, 11, 50672, 50672, 457, 2614, 552, 393, 312, 257, 588, 665, 764, 295, 428, 565, 13, 50850, 50850, 407, 341, 1243, 11, 321, 603, 3496, 257, 688, 295, 565, 1417, 466, 819, 43215, 1167, 291, 393, 764, 281, 51098, 51098, 976, 291, 10056, 322, 577, 281, 3470, 428, 2539, 9284, 311, 3389, 13, 51290, 51290, 583, 700, 11, 718, 311, 747, 257, 574, 412, 577, 281, 13059, 264, 3389, 295, 428, 2539, 9284, 13, 51532, 51532, 961, 311, 352, 360, 300, 294, 264, 958, 960, 13, 51606], "temperature": 0.0, "avg_logprob": -0.09059133262277763, "compression_ratio": 1.7755102040816326, "no_speech_prob": 2.665238753252197e-05}, {"id": 52, "seek": 19580, "start": 210.48000000000002, "end": 214.32000000000002, "text": " give you guidance on how to improve your learning algorithm's performance.", "tokens": [50364, 400, 472, 551, 291, 536, 341, 1243, 382, 731, 307, 300, 43215, 1167, 393, 747, 565, 281, 4445, 11, 50672, 50672, 457, 2614, 552, 393, 312, 257, 588, 665, 764, 295, 428, 565, 13, 50850, 50850, 407, 341, 1243, 11, 321, 603, 3496, 257, 688, 295, 565, 1417, 466, 819, 43215, 1167, 291, 393, 764, 281, 51098, 51098, 976, 291, 10056, 322, 577, 281, 3470, 428, 2539, 9284, 311, 3389, 13, 51290, 51290, 583, 700, 11, 718, 311, 747, 257, 574, 412, 577, 281, 13059, 264, 3389, 295, 428, 2539, 9284, 13, 51532, 51532, 961, 311, 352, 360, 300, 294, 264, 958, 960, 13, 51606], "temperature": 0.0, "avg_logprob": -0.09059133262277763, "compression_ratio": 1.7755102040816326, "no_speech_prob": 2.665238753252197e-05}, {"id": 53, "seek": 19580, "start": 214.32000000000002, "end": 219.16000000000003, "text": " But first, let's take a look at how to evaluate the performance of your learning algorithm.", "tokens": [50364, 400, 472, 551, 291, 536, 341, 1243, 382, 731, 307, 300, 43215, 1167, 393, 747, 565, 281, 4445, 11, 50672, 50672, 457, 2614, 552, 393, 312, 257, 588, 665, 764, 295, 428, 565, 13, 50850, 50850, 407, 341, 1243, 11, 321, 603, 3496, 257, 688, 295, 565, 1417, 466, 819, 43215, 1167, 291, 393, 764, 281, 51098, 51098, 976, 291, 10056, 322, 577, 281, 3470, 428, 2539, 9284, 311, 3389, 13, 51290, 51290, 583, 700, 11, 718, 311, 747, 257, 574, 412, 577, 281, 13059, 264, 3389, 295, 428, 2539, 9284, 13, 51532, 51532, 961, 311, 352, 360, 300, 294, 264, 958, 960, 13, 51606], "temperature": 0.0, "avg_logprob": -0.09059133262277763, "compression_ratio": 1.7755102040816326, "no_speech_prob": 2.665238753252197e-05}, {"id": 54, "seek": 21916, "start": 219.16, "end": 226.16, "text": " Let's go do that in the next video.", "tokens": [50364, 961, 311, 352, 360, 300, 294, 264, 958, 960, 13, 50714], "temperature": 0.0, "avg_logprob": -0.39280121143047625, "compression_ratio": 0.8536585365853658, "no_speech_prob": 0.00037242702092044055}], "language": "en", "video_id": "Y66jLs9ubsY", "entity": "ML Specialization, Andrew Ng (2022)"}}