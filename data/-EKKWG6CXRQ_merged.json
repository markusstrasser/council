{"video_id": "-EKKWG6CXRQ", "title": "6.11 Machine Learning development process | Error analysis --[ML | Andrew Ng]", "description": "Second Course:\nAdvanced Learning Algorithms.\n\n\nIf you liked the content please subscribe and put a little blue thumb.\nTake heart!", "author": "Machine Learning", "keywords": [], "channel_url": "https://www.youtube.com/channel/UClG5HEAJJFOavT_UolqYROQ", "length": 501, "views": 64, "publish_date": "11/04/2022", "timestamp": 1661817600, "entity": "ML Specialization, Andrew Ng (2022)", "transcript": {"text": " In terms of the most important ways to help you run diagnostics to choose what to try next to improve your learning algorithm performance, I would say bias invariance is probably the most important idea and error analysis would probably be second on my list. So let's take a look at what this means. Concretely, let's say you have MCV equals 500 cross-validation examples and your algorithm misclassifies 100 of these 500 cross-validating examples. The error analysis process just refers to manually looking through these 100 examples and trying to gain insights into where the algorithm is going wrong. Specifically, what I would often do is find a set of examples that the algorithm has misclassified examples from the cross-validation set and try to group them into common themes or common properties or common traits. So for example, if you notice that quite a lot of the misclassified spam emails are pharmaceutical sales, trying to sell medicines or drugs, then I would actually go through these examples and count up by hand how many emails are misclassified are pharmaceutical spam and say there are 21 emails that are pharmaceutical spam. Or if you suspect that deliberate misspellings may be tripping up your spam classifier, then I would also go through and just count up how many of these examples that it misclassified had a deliberate misspelling. Let's say I find three out of 100. Or looking through the email routing info, I find seven has unusual email routing and 18 emails trying to steal passwords or phishing emails. Spam is sometimes also instead of writing the spam message in the email body, they instead create an image and then write the spammy message inside an image that appears in the email. It's a bit harder for learning algorithm to figure out what's going on. And so maybe some of those emails are these embedded image spam. If you end up with these counts, then that tells you that pharmaceutical spam and emails trying to steal passwords or phishing emails seem to be huge problems. Whereas deliberate misspellings, well, it is a problem. It is a smaller one. In particular, what this analysis tells you is that even if you were to build really sophisticated algorithms to find deliberate misspellings, it would only solve three out of 100 of your misclassified examples. So the net impact seems like it may not be that large. Doesn't mean it's not worth doing, but when you're prioritizing what to do, you might therefore decide not to prioritize this as highly. And by the way, I'm telling the story because I once actually spent a lot of time building algorithms to find deliberate misspellings in spam emails only much later to realize that the net impact was actually quite small. So this is one example where I wish I had done a more careful error analysis before spending a lot of time myself trying to find these deliberate misspellings. Just a couple of notes on this process. These categories can be overlapping or in other words, they're not mutually exclusive. So for example, there can be a pharmaceutical spam email that also has unusual routing or a password that has deliberate misspellings and is also trying to carry out a phishing attack. So one email can be counted in multiple categories. And in this example, I had said that the algorithm misclassifies 100 examples and will look at 100 examples manually. If you have a larger cross validation set, say we had 5,000 cross validation examples, and if the algorithm misclassified, say 1,000 of them, then you may not have the time, depending on the team size and how much time you have to work on this project, you may not have the time to manually look at all 1,000 examples that the algorithm misclassifies. In that case, I will often sample randomly a subset of usually around 100, maybe a couple of hundred examples, because that's the amount that you can look through in a reasonable amount of time. And hopefully looking through maybe around 100 examples will give you enough statistics about what are the most common types of errors and therefore where may be most fruitful to focus your attention. And so after this analysis, if you find that a lot of errors are pharmaceutical spam emails, then this might give you some ideas or inspiration for things to do next. For example, you may decide to collect more data, but not more data of everything, but just try to find more data of pharmaceutical spam emails so that the learning algorithm can do a better job recognizing these pharmaceutical spams. Or you may decide to come up with some new features that are related to say specific names of drugs or specific names of pharmaceutical products that the spammers are trying to sell in order to help your learning algorithm become better at recognizing this type of pharma spam. Then again, this might inspire you to make specific changes to the algorithm relating to detecting phishing emails. For example, you might look at the URLs in the email and write special code to come up with extra features to see this linking to suspicious URLs. Or again, you may decide to get more data of phishing emails specifically in order to help your learning algorithm do a better job at recognizing them. So the point of this error analysis is by manually examining a set of examples that your algorithm is misclassifying or mislabeling. And this will create inspiration for what might be useful to try next. And sometimes it can also tell you that certain types of errors are sufficiently rare, that they aren't worth as much of your time to try to fix. And so returning to this list, a bias-variance analysis should tell you if collecting more data is helpful or not. Based on our error analysis in the example we just went through, it looks like more sophisticated email features could help, but only a bit. Whereas more sophisticated features to detect pharmas spam or phishing emails could help a lot. And this detecting misspellings would not help nearly as much. So in general, I've found both the bias-variance diagnostic as well as carrying out this form of error analysis to be really helpful to screening or to deciding which changes to the model are more promising to try out next. Now one limitation of error analysis is that it's much easier to do for problems that humans are good at. So you can look at an email and say, you think it's a spam email, why did the algorithm get it wrong? Error analysis can be a bit harder for tasks that even humans aren't good at. For example, if you're trying to predict what ads someone will click on on a website, well, I can't predict what someone will click on, so error analysis there actually tends to be more difficult. But when you apply error analysis to problems that you can, it can be extremely helpful for focusing attention on the more promising things to try. And that in turn can easily save you months of otherwise fruitless work. In the next video, I'd like to dive deeper into the problem of adding data. When you train a learning algorithm, sometimes you decide there's high variance and you want to get more data for it. And there's some techniques that can make how you add data much more efficient. So let's take a look at that so that hopefully you'll be armed with some good ways to get more data for your learning application.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.5200000000000005, "text": " In terms of the most important ways to help you run diagnostics to choose what to try", "tokens": [50364, 682, 2115, 295, 264, 881, 1021, 2098, 281, 854, 291, 1190, 43215, 1167, 281, 2826, 437, 281, 853, 50740, 50740, 958, 281, 3470, 428, 2539, 9284, 3389, 11, 286, 576, 584, 12577, 33270, 719, 307, 1391, 264, 51002, 51002, 881, 1021, 1558, 293, 6713, 5215, 576, 1391, 312, 1150, 322, 452, 1329, 13, 51232, 51232, 407, 718, 311, 747, 257, 574, 412, 437, 341, 1355, 13, 51348, 51348, 18200, 1505, 736, 11, 718, 311, 584, 291, 362, 8797, 53, 6915, 5923, 3278, 12, 3337, 327, 399, 5110, 293, 428, 9284, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.16448014847775724, "compression_ratio": 1.5918367346938775, "no_speech_prob": 0.028415514156222343}, {"id": 1, "seek": 0, "start": 7.5200000000000005, "end": 12.76, "text": " next to improve your learning algorithm performance, I would say bias invariance is probably the", "tokens": [50364, 682, 2115, 295, 264, 881, 1021, 2098, 281, 854, 291, 1190, 43215, 1167, 281, 2826, 437, 281, 853, 50740, 50740, 958, 281, 3470, 428, 2539, 9284, 3389, 11, 286, 576, 584, 12577, 33270, 719, 307, 1391, 264, 51002, 51002, 881, 1021, 1558, 293, 6713, 5215, 576, 1391, 312, 1150, 322, 452, 1329, 13, 51232, 51232, 407, 718, 311, 747, 257, 574, 412, 437, 341, 1355, 13, 51348, 51348, 18200, 1505, 736, 11, 718, 311, 584, 291, 362, 8797, 53, 6915, 5923, 3278, 12, 3337, 327, 399, 5110, 293, 428, 9284, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.16448014847775724, "compression_ratio": 1.5918367346938775, "no_speech_prob": 0.028415514156222343}, {"id": 2, "seek": 0, "start": 12.76, "end": 17.36, "text": " most important idea and error analysis would probably be second on my list.", "tokens": [50364, 682, 2115, 295, 264, 881, 1021, 2098, 281, 854, 291, 1190, 43215, 1167, 281, 2826, 437, 281, 853, 50740, 50740, 958, 281, 3470, 428, 2539, 9284, 3389, 11, 286, 576, 584, 12577, 33270, 719, 307, 1391, 264, 51002, 51002, 881, 1021, 1558, 293, 6713, 5215, 576, 1391, 312, 1150, 322, 452, 1329, 13, 51232, 51232, 407, 718, 311, 747, 257, 574, 412, 437, 341, 1355, 13, 51348, 51348, 18200, 1505, 736, 11, 718, 311, 584, 291, 362, 8797, 53, 6915, 5923, 3278, 12, 3337, 327, 399, 5110, 293, 428, 9284, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.16448014847775724, "compression_ratio": 1.5918367346938775, "no_speech_prob": 0.028415514156222343}, {"id": 3, "seek": 0, "start": 17.36, "end": 19.68, "text": " So let's take a look at what this means.", "tokens": [50364, 682, 2115, 295, 264, 881, 1021, 2098, 281, 854, 291, 1190, 43215, 1167, 281, 2826, 437, 281, 853, 50740, 50740, 958, 281, 3470, 428, 2539, 9284, 3389, 11, 286, 576, 584, 12577, 33270, 719, 307, 1391, 264, 51002, 51002, 881, 1021, 1558, 293, 6713, 5215, 576, 1391, 312, 1150, 322, 452, 1329, 13, 51232, 51232, 407, 718, 311, 747, 257, 574, 412, 437, 341, 1355, 13, 51348, 51348, 18200, 1505, 736, 11, 718, 311, 584, 291, 362, 8797, 53, 6915, 5923, 3278, 12, 3337, 327, 399, 5110, 293, 428, 9284, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.16448014847775724, "compression_ratio": 1.5918367346938775, "no_speech_prob": 0.028415514156222343}, {"id": 4, "seek": 0, "start": 19.68, "end": 27.96, "text": " Concretely, let's say you have MCV equals 500 cross-validation examples and your algorithm", "tokens": [50364, 682, 2115, 295, 264, 881, 1021, 2098, 281, 854, 291, 1190, 43215, 1167, 281, 2826, 437, 281, 853, 50740, 50740, 958, 281, 3470, 428, 2539, 9284, 3389, 11, 286, 576, 584, 12577, 33270, 719, 307, 1391, 264, 51002, 51002, 881, 1021, 1558, 293, 6713, 5215, 576, 1391, 312, 1150, 322, 452, 1329, 13, 51232, 51232, 407, 718, 311, 747, 257, 574, 412, 437, 341, 1355, 13, 51348, 51348, 18200, 1505, 736, 11, 718, 311, 584, 291, 362, 8797, 53, 6915, 5923, 3278, 12, 3337, 327, 399, 5110, 293, 428, 9284, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.16448014847775724, "compression_ratio": 1.5918367346938775, "no_speech_prob": 0.028415514156222343}, {"id": 5, "seek": 2796, "start": 27.96, "end": 33.08, "text": " misclassifies 100 of these 500 cross-validating examples.", "tokens": [50364, 3346, 11665, 11221, 2319, 295, 613, 5923, 3278, 12, 3337, 327, 990, 5110, 13, 50620, 50620, 440, 6713, 5215, 1399, 445, 14942, 281, 16945, 1237, 807, 613, 2319, 5110, 50992, 50992, 293, 1382, 281, 6052, 14310, 666, 689, 264, 9284, 307, 516, 2085, 13, 51240, 51240, 26058, 11, 437, 286, 576, 2049, 360, 307, 915, 257, 992, 295, 5110, 300, 264, 9284, 575, 3346, 11665, 2587, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.12133361271449498, "compression_ratio": 1.5628140703517588, "no_speech_prob": 2.2958224690228235e-06}, {"id": 6, "seek": 2796, "start": 33.08, "end": 40.52, "text": " The error analysis process just refers to manually looking through these 100 examples", "tokens": [50364, 3346, 11665, 11221, 2319, 295, 613, 5923, 3278, 12, 3337, 327, 990, 5110, 13, 50620, 50620, 440, 6713, 5215, 1399, 445, 14942, 281, 16945, 1237, 807, 613, 2319, 5110, 50992, 50992, 293, 1382, 281, 6052, 14310, 666, 689, 264, 9284, 307, 516, 2085, 13, 51240, 51240, 26058, 11, 437, 286, 576, 2049, 360, 307, 915, 257, 992, 295, 5110, 300, 264, 9284, 575, 3346, 11665, 2587, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.12133361271449498, "compression_ratio": 1.5628140703517588, "no_speech_prob": 2.2958224690228235e-06}, {"id": 7, "seek": 2796, "start": 40.52, "end": 45.480000000000004, "text": " and trying to gain insights into where the algorithm is going wrong.", "tokens": [50364, 3346, 11665, 11221, 2319, 295, 613, 5923, 3278, 12, 3337, 327, 990, 5110, 13, 50620, 50620, 440, 6713, 5215, 1399, 445, 14942, 281, 16945, 1237, 807, 613, 2319, 5110, 50992, 50992, 293, 1382, 281, 6052, 14310, 666, 689, 264, 9284, 307, 516, 2085, 13, 51240, 51240, 26058, 11, 437, 286, 576, 2049, 360, 307, 915, 257, 992, 295, 5110, 300, 264, 9284, 575, 3346, 11665, 2587, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.12133361271449498, "compression_ratio": 1.5628140703517588, "no_speech_prob": 2.2958224690228235e-06}, {"id": 8, "seek": 2796, "start": 45.480000000000004, "end": 53.92, "text": " Specifically, what I would often do is find a set of examples that the algorithm has misclassified", "tokens": [50364, 3346, 11665, 11221, 2319, 295, 613, 5923, 3278, 12, 3337, 327, 990, 5110, 13, 50620, 50620, 440, 6713, 5215, 1399, 445, 14942, 281, 16945, 1237, 807, 613, 2319, 5110, 50992, 50992, 293, 1382, 281, 6052, 14310, 666, 689, 264, 9284, 307, 516, 2085, 13, 51240, 51240, 26058, 11, 437, 286, 576, 2049, 360, 307, 915, 257, 992, 295, 5110, 300, 264, 9284, 575, 3346, 11665, 2587, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.12133361271449498, "compression_ratio": 1.5628140703517588, "no_speech_prob": 2.2958224690228235e-06}, {"id": 9, "seek": 5392, "start": 53.92, "end": 60.56, "text": " examples from the cross-validation set and try to group them into common themes or common", "tokens": [50364, 5110, 490, 264, 3278, 12, 3337, 327, 399, 992, 293, 853, 281, 1594, 552, 666, 2689, 13544, 420, 2689, 50696, 50696, 7221, 420, 2689, 19526, 13, 50828, 50828, 407, 337, 1365, 11, 498, 291, 3449, 300, 1596, 257, 688, 295, 264, 3346, 11665, 2587, 24028, 12524, 366, 27130, 51168, 51168, 5763, 11, 1382, 281, 3607, 24251, 420, 7766, 11, 550, 286, 576, 767, 352, 807, 613, 5110, 51448, 51448, 293, 1207, 493, 538, 1011, 577, 867, 12524, 366, 3346, 11665, 2587, 366, 27130, 24028, 293, 584, 456, 366, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.13284121388974396, "compression_ratio": 1.7641921397379912, "no_speech_prob": 2.368755531279021e-06}, {"id": 10, "seek": 5392, "start": 60.56, "end": 63.2, "text": " properties or common traits.", "tokens": [50364, 5110, 490, 264, 3278, 12, 3337, 327, 399, 992, 293, 853, 281, 1594, 552, 666, 2689, 13544, 420, 2689, 50696, 50696, 7221, 420, 2689, 19526, 13, 50828, 50828, 407, 337, 1365, 11, 498, 291, 3449, 300, 1596, 257, 688, 295, 264, 3346, 11665, 2587, 24028, 12524, 366, 27130, 51168, 51168, 5763, 11, 1382, 281, 3607, 24251, 420, 7766, 11, 550, 286, 576, 767, 352, 807, 613, 5110, 51448, 51448, 293, 1207, 493, 538, 1011, 577, 867, 12524, 366, 3346, 11665, 2587, 366, 27130, 24028, 293, 584, 456, 366, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.13284121388974396, "compression_ratio": 1.7641921397379912, "no_speech_prob": 2.368755531279021e-06}, {"id": 11, "seek": 5392, "start": 63.2, "end": 70.0, "text": " So for example, if you notice that quite a lot of the misclassified spam emails are pharmaceutical", "tokens": [50364, 5110, 490, 264, 3278, 12, 3337, 327, 399, 992, 293, 853, 281, 1594, 552, 666, 2689, 13544, 420, 2689, 50696, 50696, 7221, 420, 2689, 19526, 13, 50828, 50828, 407, 337, 1365, 11, 498, 291, 3449, 300, 1596, 257, 688, 295, 264, 3346, 11665, 2587, 24028, 12524, 366, 27130, 51168, 51168, 5763, 11, 1382, 281, 3607, 24251, 420, 7766, 11, 550, 286, 576, 767, 352, 807, 613, 5110, 51448, 51448, 293, 1207, 493, 538, 1011, 577, 867, 12524, 366, 3346, 11665, 2587, 366, 27130, 24028, 293, 584, 456, 366, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.13284121388974396, "compression_ratio": 1.7641921397379912, "no_speech_prob": 2.368755531279021e-06}, {"id": 12, "seek": 5392, "start": 70.0, "end": 75.6, "text": " sales, trying to sell medicines or drugs, then I would actually go through these examples", "tokens": [50364, 5110, 490, 264, 3278, 12, 3337, 327, 399, 992, 293, 853, 281, 1594, 552, 666, 2689, 13544, 420, 2689, 50696, 50696, 7221, 420, 2689, 19526, 13, 50828, 50828, 407, 337, 1365, 11, 498, 291, 3449, 300, 1596, 257, 688, 295, 264, 3346, 11665, 2587, 24028, 12524, 366, 27130, 51168, 51168, 5763, 11, 1382, 281, 3607, 24251, 420, 7766, 11, 550, 286, 576, 767, 352, 807, 613, 5110, 51448, 51448, 293, 1207, 493, 538, 1011, 577, 867, 12524, 366, 3346, 11665, 2587, 366, 27130, 24028, 293, 584, 456, 366, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.13284121388974396, "compression_ratio": 1.7641921397379912, "no_speech_prob": 2.368755531279021e-06}, {"id": 13, "seek": 5392, "start": 75.6, "end": 82.56, "text": " and count up by hand how many emails are misclassified are pharmaceutical spam and say there are", "tokens": [50364, 5110, 490, 264, 3278, 12, 3337, 327, 399, 992, 293, 853, 281, 1594, 552, 666, 2689, 13544, 420, 2689, 50696, 50696, 7221, 420, 2689, 19526, 13, 50828, 50828, 407, 337, 1365, 11, 498, 291, 3449, 300, 1596, 257, 688, 295, 264, 3346, 11665, 2587, 24028, 12524, 366, 27130, 51168, 51168, 5763, 11, 1382, 281, 3607, 24251, 420, 7766, 11, 550, 286, 576, 767, 352, 807, 613, 5110, 51448, 51448, 293, 1207, 493, 538, 1011, 577, 867, 12524, 366, 3346, 11665, 2587, 366, 27130, 24028, 293, 584, 456, 366, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.13284121388974396, "compression_ratio": 1.7641921397379912, "no_speech_prob": 2.368755531279021e-06}, {"id": 14, "seek": 8256, "start": 82.56, "end": 86.0, "text": " 21 emails that are pharmaceutical spam.", "tokens": [50364, 5080, 12524, 300, 366, 27130, 24028, 13, 50536, 50536, 1610, 498, 291, 9091, 300, 30515, 1713, 49241, 1109, 815, 312, 1376, 3759, 493, 428, 24028, 1508, 9902, 11, 550, 50904, 50904, 286, 576, 611, 352, 807, 293, 445, 1207, 493, 577, 867, 295, 613, 5110, 300, 309, 3346, 11665, 2587, 51212, 51212, 632, 257, 30515, 1713, 494, 2669, 13, 51296, 51296, 961, 311, 584, 286, 915, 1045, 484, 295, 2319, 13, 51450, 51450], "temperature": 0.0, "avg_logprob": -0.1427940877278646, "compression_ratio": 1.5319148936170213, "no_speech_prob": 1.2289116284591728e-06}, {"id": 15, "seek": 8256, "start": 86.0, "end": 93.36, "text": " Or if you suspect that deliberate misspellings may be tripping up your spam classifier, then", "tokens": [50364, 5080, 12524, 300, 366, 27130, 24028, 13, 50536, 50536, 1610, 498, 291, 9091, 300, 30515, 1713, 49241, 1109, 815, 312, 1376, 3759, 493, 428, 24028, 1508, 9902, 11, 550, 50904, 50904, 286, 576, 611, 352, 807, 293, 445, 1207, 493, 577, 867, 295, 613, 5110, 300, 309, 3346, 11665, 2587, 51212, 51212, 632, 257, 30515, 1713, 494, 2669, 13, 51296, 51296, 961, 311, 584, 286, 915, 1045, 484, 295, 2319, 13, 51450, 51450], "temperature": 0.0, "avg_logprob": -0.1427940877278646, "compression_ratio": 1.5319148936170213, "no_speech_prob": 1.2289116284591728e-06}, {"id": 16, "seek": 8256, "start": 93.36, "end": 99.52000000000001, "text": " I would also go through and just count up how many of these examples that it misclassified", "tokens": [50364, 5080, 12524, 300, 366, 27130, 24028, 13, 50536, 50536, 1610, 498, 291, 9091, 300, 30515, 1713, 49241, 1109, 815, 312, 1376, 3759, 493, 428, 24028, 1508, 9902, 11, 550, 50904, 50904, 286, 576, 611, 352, 807, 293, 445, 1207, 493, 577, 867, 295, 613, 5110, 300, 309, 3346, 11665, 2587, 51212, 51212, 632, 257, 30515, 1713, 494, 2669, 13, 51296, 51296, 961, 311, 584, 286, 915, 1045, 484, 295, 2319, 13, 51450, 51450], "temperature": 0.0, "avg_logprob": -0.1427940877278646, "compression_ratio": 1.5319148936170213, "no_speech_prob": 1.2289116284591728e-06}, {"id": 17, "seek": 8256, "start": 99.52000000000001, "end": 101.2, "text": " had a deliberate misspelling.", "tokens": [50364, 5080, 12524, 300, 366, 27130, 24028, 13, 50536, 50536, 1610, 498, 291, 9091, 300, 30515, 1713, 49241, 1109, 815, 312, 1376, 3759, 493, 428, 24028, 1508, 9902, 11, 550, 50904, 50904, 286, 576, 611, 352, 807, 293, 445, 1207, 493, 577, 867, 295, 613, 5110, 300, 309, 3346, 11665, 2587, 51212, 51212, 632, 257, 30515, 1713, 494, 2669, 13, 51296, 51296, 961, 311, 584, 286, 915, 1045, 484, 295, 2319, 13, 51450, 51450], "temperature": 0.0, "avg_logprob": -0.1427940877278646, "compression_ratio": 1.5319148936170213, "no_speech_prob": 1.2289116284591728e-06}, {"id": 18, "seek": 8256, "start": 101.2, "end": 104.28, "text": " Let's say I find three out of 100.", "tokens": [50364, 5080, 12524, 300, 366, 27130, 24028, 13, 50536, 50536, 1610, 498, 291, 9091, 300, 30515, 1713, 49241, 1109, 815, 312, 1376, 3759, 493, 428, 24028, 1508, 9902, 11, 550, 50904, 50904, 286, 576, 611, 352, 807, 293, 445, 1207, 493, 577, 867, 295, 613, 5110, 300, 309, 3346, 11665, 2587, 51212, 51212, 632, 257, 30515, 1713, 494, 2669, 13, 51296, 51296, 961, 311, 584, 286, 915, 1045, 484, 295, 2319, 13, 51450, 51450], "temperature": 0.0, "avg_logprob": -0.1427940877278646, "compression_ratio": 1.5319148936170213, "no_speech_prob": 1.2289116284591728e-06}, {"id": 19, "seek": 10428, "start": 104.28, "end": 112.56, "text": " Or looking through the email routing info, I find seven has unusual email routing and", "tokens": [50364, 1610, 1237, 807, 264, 3796, 32722, 13614, 11, 286, 915, 3407, 575, 10901, 3796, 32722, 293, 50778, 50778, 2443, 12524, 1382, 281, 11009, 33149, 420, 903, 3807, 12524, 13, 51068, 51068, 1738, 335, 307, 2171, 611, 2602, 295, 3579, 264, 24028, 3636, 294, 264, 3796, 1772, 11, 436, 2602, 51392, 51392, 1884, 364, 3256, 293, 550, 2464, 264, 24028, 2226, 3636, 1854, 364, 3256, 300, 7038, 294, 264, 51700, 51700, 3796, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15197023592497172, "compression_ratio": 1.7473118279569892, "no_speech_prob": 1.3709407085116254e-06}, {"id": 20, "seek": 10428, "start": 112.56, "end": 118.36, "text": " 18 emails trying to steal passwords or phishing emails.", "tokens": [50364, 1610, 1237, 807, 264, 3796, 32722, 13614, 11, 286, 915, 3407, 575, 10901, 3796, 32722, 293, 50778, 50778, 2443, 12524, 1382, 281, 11009, 33149, 420, 903, 3807, 12524, 13, 51068, 51068, 1738, 335, 307, 2171, 611, 2602, 295, 3579, 264, 24028, 3636, 294, 264, 3796, 1772, 11, 436, 2602, 51392, 51392, 1884, 364, 3256, 293, 550, 2464, 264, 24028, 2226, 3636, 1854, 364, 3256, 300, 7038, 294, 264, 51700, 51700, 3796, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15197023592497172, "compression_ratio": 1.7473118279569892, "no_speech_prob": 1.3709407085116254e-06}, {"id": 21, "seek": 10428, "start": 118.36, "end": 124.84, "text": " Spam is sometimes also instead of writing the spam message in the email body, they instead", "tokens": [50364, 1610, 1237, 807, 264, 3796, 32722, 13614, 11, 286, 915, 3407, 575, 10901, 3796, 32722, 293, 50778, 50778, 2443, 12524, 1382, 281, 11009, 33149, 420, 903, 3807, 12524, 13, 51068, 51068, 1738, 335, 307, 2171, 611, 2602, 295, 3579, 264, 24028, 3636, 294, 264, 3796, 1772, 11, 436, 2602, 51392, 51392, 1884, 364, 3256, 293, 550, 2464, 264, 24028, 2226, 3636, 1854, 364, 3256, 300, 7038, 294, 264, 51700, 51700, 3796, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15197023592497172, "compression_ratio": 1.7473118279569892, "no_speech_prob": 1.3709407085116254e-06}, {"id": 22, "seek": 10428, "start": 124.84, "end": 131.0, "text": " create an image and then write the spammy message inside an image that appears in the", "tokens": [50364, 1610, 1237, 807, 264, 3796, 32722, 13614, 11, 286, 915, 3407, 575, 10901, 3796, 32722, 293, 50778, 50778, 2443, 12524, 1382, 281, 11009, 33149, 420, 903, 3807, 12524, 13, 51068, 51068, 1738, 335, 307, 2171, 611, 2602, 295, 3579, 264, 24028, 3636, 294, 264, 3796, 1772, 11, 436, 2602, 51392, 51392, 1884, 364, 3256, 293, 550, 2464, 264, 24028, 2226, 3636, 1854, 364, 3256, 300, 7038, 294, 264, 51700, 51700, 3796, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15197023592497172, "compression_ratio": 1.7473118279569892, "no_speech_prob": 1.3709407085116254e-06}, {"id": 23, "seek": 10428, "start": 131.0, "end": 132.0, "text": " email.", "tokens": [50364, 1610, 1237, 807, 264, 3796, 32722, 13614, 11, 286, 915, 3407, 575, 10901, 3796, 32722, 293, 50778, 50778, 2443, 12524, 1382, 281, 11009, 33149, 420, 903, 3807, 12524, 13, 51068, 51068, 1738, 335, 307, 2171, 611, 2602, 295, 3579, 264, 24028, 3636, 294, 264, 3796, 1772, 11, 436, 2602, 51392, 51392, 1884, 364, 3256, 293, 550, 2464, 264, 24028, 2226, 3636, 1854, 364, 3256, 300, 7038, 294, 264, 51700, 51700, 3796, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15197023592497172, "compression_ratio": 1.7473118279569892, "no_speech_prob": 1.3709407085116254e-06}, {"id": 24, "seek": 13200, "start": 132.0, "end": 134.8, "text": " It's a bit harder for learning algorithm to figure out what's going on.", "tokens": [50364, 467, 311, 257, 857, 6081, 337, 2539, 9284, 281, 2573, 484, 437, 311, 516, 322, 13, 50504, 50504, 400, 370, 1310, 512, 295, 729, 12524, 366, 613, 16741, 3256, 24028, 13, 50762, 50762, 759, 291, 917, 493, 365, 613, 14893, 11, 550, 300, 5112, 291, 300, 27130, 24028, 293, 12524, 51208, 51208, 1382, 281, 11009, 33149, 420, 903, 3807, 12524, 1643, 281, 312, 2603, 2740, 13, 51484, 51484, 13813, 30515, 1713, 49241, 1109, 11, 731, 11, 309, 307, 257, 1154, 13, 51670, 51670, 467, 307, 257, 4356, 472, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.16166909535725912, "compression_ratio": 1.6147186147186148, "no_speech_prob": 2.726425009313971e-06}, {"id": 25, "seek": 13200, "start": 134.8, "end": 139.96, "text": " And so maybe some of those emails are these embedded image spam.", "tokens": [50364, 467, 311, 257, 857, 6081, 337, 2539, 9284, 281, 2573, 484, 437, 311, 516, 322, 13, 50504, 50504, 400, 370, 1310, 512, 295, 729, 12524, 366, 613, 16741, 3256, 24028, 13, 50762, 50762, 759, 291, 917, 493, 365, 613, 14893, 11, 550, 300, 5112, 291, 300, 27130, 24028, 293, 12524, 51208, 51208, 1382, 281, 11009, 33149, 420, 903, 3807, 12524, 1643, 281, 312, 2603, 2740, 13, 51484, 51484, 13813, 30515, 1713, 49241, 1109, 11, 731, 11, 309, 307, 257, 1154, 13, 51670, 51670, 467, 307, 257, 4356, 472, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.16166909535725912, "compression_ratio": 1.6147186147186148, "no_speech_prob": 2.726425009313971e-06}, {"id": 26, "seek": 13200, "start": 139.96, "end": 148.88, "text": " If you end up with these counts, then that tells you that pharmaceutical spam and emails", "tokens": [50364, 467, 311, 257, 857, 6081, 337, 2539, 9284, 281, 2573, 484, 437, 311, 516, 322, 13, 50504, 50504, 400, 370, 1310, 512, 295, 729, 12524, 366, 613, 16741, 3256, 24028, 13, 50762, 50762, 759, 291, 917, 493, 365, 613, 14893, 11, 550, 300, 5112, 291, 300, 27130, 24028, 293, 12524, 51208, 51208, 1382, 281, 11009, 33149, 420, 903, 3807, 12524, 1643, 281, 312, 2603, 2740, 13, 51484, 51484, 13813, 30515, 1713, 49241, 1109, 11, 731, 11, 309, 307, 257, 1154, 13, 51670, 51670, 467, 307, 257, 4356, 472, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.16166909535725912, "compression_ratio": 1.6147186147186148, "no_speech_prob": 2.726425009313971e-06}, {"id": 27, "seek": 13200, "start": 148.88, "end": 154.4, "text": " trying to steal passwords or phishing emails seem to be huge problems.", "tokens": [50364, 467, 311, 257, 857, 6081, 337, 2539, 9284, 281, 2573, 484, 437, 311, 516, 322, 13, 50504, 50504, 400, 370, 1310, 512, 295, 729, 12524, 366, 613, 16741, 3256, 24028, 13, 50762, 50762, 759, 291, 917, 493, 365, 613, 14893, 11, 550, 300, 5112, 291, 300, 27130, 24028, 293, 12524, 51208, 51208, 1382, 281, 11009, 33149, 420, 903, 3807, 12524, 1643, 281, 312, 2603, 2740, 13, 51484, 51484, 13813, 30515, 1713, 49241, 1109, 11, 731, 11, 309, 307, 257, 1154, 13, 51670, 51670, 467, 307, 257, 4356, 472, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.16166909535725912, "compression_ratio": 1.6147186147186148, "no_speech_prob": 2.726425009313971e-06}, {"id": 28, "seek": 13200, "start": 154.4, "end": 158.12, "text": " Whereas deliberate misspellings, well, it is a problem.", "tokens": [50364, 467, 311, 257, 857, 6081, 337, 2539, 9284, 281, 2573, 484, 437, 311, 516, 322, 13, 50504, 50504, 400, 370, 1310, 512, 295, 729, 12524, 366, 613, 16741, 3256, 24028, 13, 50762, 50762, 759, 291, 917, 493, 365, 613, 14893, 11, 550, 300, 5112, 291, 300, 27130, 24028, 293, 12524, 51208, 51208, 1382, 281, 11009, 33149, 420, 903, 3807, 12524, 1643, 281, 312, 2603, 2740, 13, 51484, 51484, 13813, 30515, 1713, 49241, 1109, 11, 731, 11, 309, 307, 257, 1154, 13, 51670, 51670, 467, 307, 257, 4356, 472, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.16166909535725912, "compression_ratio": 1.6147186147186148, "no_speech_prob": 2.726425009313971e-06}, {"id": 29, "seek": 13200, "start": 158.12, "end": 159.84, "text": " It is a smaller one.", "tokens": [50364, 467, 311, 257, 857, 6081, 337, 2539, 9284, 281, 2573, 484, 437, 311, 516, 322, 13, 50504, 50504, 400, 370, 1310, 512, 295, 729, 12524, 366, 613, 16741, 3256, 24028, 13, 50762, 50762, 759, 291, 917, 493, 365, 613, 14893, 11, 550, 300, 5112, 291, 300, 27130, 24028, 293, 12524, 51208, 51208, 1382, 281, 11009, 33149, 420, 903, 3807, 12524, 1643, 281, 312, 2603, 2740, 13, 51484, 51484, 13813, 30515, 1713, 49241, 1109, 11, 731, 11, 309, 307, 257, 1154, 13, 51670, 51670, 467, 307, 257, 4356, 472, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.16166909535725912, "compression_ratio": 1.6147186147186148, "no_speech_prob": 2.726425009313971e-06}, {"id": 30, "seek": 15984, "start": 159.84, "end": 165.72, "text": " In particular, what this analysis tells you is that even if you were to build really sophisticated", "tokens": [50364, 682, 1729, 11, 437, 341, 5215, 5112, 291, 307, 300, 754, 498, 291, 645, 281, 1322, 534, 16950, 50658, 50658, 14642, 281, 915, 30515, 1713, 49241, 1109, 11, 309, 576, 787, 5039, 1045, 484, 295, 2319, 295, 428, 51014, 51014, 3346, 11665, 2587, 5110, 13, 51102, 51102, 407, 264, 2533, 2712, 2544, 411, 309, 815, 406, 312, 300, 2416, 13, 51310, 51310, 12955, 380, 914, 309, 311, 406, 3163, 884, 11, 457, 562, 291, 434, 14846, 3319, 437, 281, 360, 11, 291, 1062, 51541, 51541, 4412, 4536, 406, 281, 25164, 341, 382, 5405, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11636852731510085, "compression_ratio": 1.580392156862745, "no_speech_prob": 1.7330089576717e-06}, {"id": 31, "seek": 15984, "start": 165.72, "end": 172.84, "text": " algorithms to find deliberate misspellings, it would only solve three out of 100 of your", "tokens": [50364, 682, 1729, 11, 437, 341, 5215, 5112, 291, 307, 300, 754, 498, 291, 645, 281, 1322, 534, 16950, 50658, 50658, 14642, 281, 915, 30515, 1713, 49241, 1109, 11, 309, 576, 787, 5039, 1045, 484, 295, 2319, 295, 428, 51014, 51014, 3346, 11665, 2587, 5110, 13, 51102, 51102, 407, 264, 2533, 2712, 2544, 411, 309, 815, 406, 312, 300, 2416, 13, 51310, 51310, 12955, 380, 914, 309, 311, 406, 3163, 884, 11, 457, 562, 291, 434, 14846, 3319, 437, 281, 360, 11, 291, 1062, 51541, 51541, 4412, 4536, 406, 281, 25164, 341, 382, 5405, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11636852731510085, "compression_ratio": 1.580392156862745, "no_speech_prob": 1.7330089576717e-06}, {"id": 32, "seek": 15984, "start": 172.84, "end": 174.6, "text": " misclassified examples.", "tokens": [50364, 682, 1729, 11, 437, 341, 5215, 5112, 291, 307, 300, 754, 498, 291, 645, 281, 1322, 534, 16950, 50658, 50658, 14642, 281, 915, 30515, 1713, 49241, 1109, 11, 309, 576, 787, 5039, 1045, 484, 295, 2319, 295, 428, 51014, 51014, 3346, 11665, 2587, 5110, 13, 51102, 51102, 407, 264, 2533, 2712, 2544, 411, 309, 815, 406, 312, 300, 2416, 13, 51310, 51310, 12955, 380, 914, 309, 311, 406, 3163, 884, 11, 457, 562, 291, 434, 14846, 3319, 437, 281, 360, 11, 291, 1062, 51541, 51541, 4412, 4536, 406, 281, 25164, 341, 382, 5405, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11636852731510085, "compression_ratio": 1.580392156862745, "no_speech_prob": 1.7330089576717e-06}, {"id": 33, "seek": 15984, "start": 174.6, "end": 178.76, "text": " So the net impact seems like it may not be that large.", "tokens": [50364, 682, 1729, 11, 437, 341, 5215, 5112, 291, 307, 300, 754, 498, 291, 645, 281, 1322, 534, 16950, 50658, 50658, 14642, 281, 915, 30515, 1713, 49241, 1109, 11, 309, 576, 787, 5039, 1045, 484, 295, 2319, 295, 428, 51014, 51014, 3346, 11665, 2587, 5110, 13, 51102, 51102, 407, 264, 2533, 2712, 2544, 411, 309, 815, 406, 312, 300, 2416, 13, 51310, 51310, 12955, 380, 914, 309, 311, 406, 3163, 884, 11, 457, 562, 291, 434, 14846, 3319, 437, 281, 360, 11, 291, 1062, 51541, 51541, 4412, 4536, 406, 281, 25164, 341, 382, 5405, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11636852731510085, "compression_ratio": 1.580392156862745, "no_speech_prob": 1.7330089576717e-06}, {"id": 34, "seek": 15984, "start": 178.76, "end": 183.38, "text": " Doesn't mean it's not worth doing, but when you're prioritizing what to do, you might", "tokens": [50364, 682, 1729, 11, 437, 341, 5215, 5112, 291, 307, 300, 754, 498, 291, 645, 281, 1322, 534, 16950, 50658, 50658, 14642, 281, 915, 30515, 1713, 49241, 1109, 11, 309, 576, 787, 5039, 1045, 484, 295, 2319, 295, 428, 51014, 51014, 3346, 11665, 2587, 5110, 13, 51102, 51102, 407, 264, 2533, 2712, 2544, 411, 309, 815, 406, 312, 300, 2416, 13, 51310, 51310, 12955, 380, 914, 309, 311, 406, 3163, 884, 11, 457, 562, 291, 434, 14846, 3319, 437, 281, 360, 11, 291, 1062, 51541, 51541, 4412, 4536, 406, 281, 25164, 341, 382, 5405, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11636852731510085, "compression_ratio": 1.580392156862745, "no_speech_prob": 1.7330089576717e-06}, {"id": 35, "seek": 15984, "start": 183.38, "end": 186.92000000000002, "text": " therefore decide not to prioritize this as highly.", "tokens": [50364, 682, 1729, 11, 437, 341, 5215, 5112, 291, 307, 300, 754, 498, 291, 645, 281, 1322, 534, 16950, 50658, 50658, 14642, 281, 915, 30515, 1713, 49241, 1109, 11, 309, 576, 787, 5039, 1045, 484, 295, 2319, 295, 428, 51014, 51014, 3346, 11665, 2587, 5110, 13, 51102, 51102, 407, 264, 2533, 2712, 2544, 411, 309, 815, 406, 312, 300, 2416, 13, 51310, 51310, 12955, 380, 914, 309, 311, 406, 3163, 884, 11, 457, 562, 291, 434, 14846, 3319, 437, 281, 360, 11, 291, 1062, 51541, 51541, 4412, 4536, 406, 281, 25164, 341, 382, 5405, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11636852731510085, "compression_ratio": 1.580392156862745, "no_speech_prob": 1.7330089576717e-06}, {"id": 36, "seek": 18692, "start": 186.92, "end": 191.95999999999998, "text": " And by the way, I'm telling the story because I once actually spent a lot of time building", "tokens": [50364, 400, 538, 264, 636, 11, 286, 478, 3585, 264, 1657, 570, 286, 1564, 767, 4418, 257, 688, 295, 565, 2390, 50616, 50616, 14642, 281, 915, 30515, 1713, 49241, 1109, 294, 24028, 12524, 787, 709, 1780, 281, 4325, 50872, 50872, 300, 264, 2533, 2712, 390, 767, 1596, 1359, 13, 51000, 51000, 407, 341, 307, 472, 1365, 689, 286, 3172, 286, 632, 1096, 257, 544, 5026, 6713, 5215, 949, 51220, 51220, 6434, 257, 688, 295, 565, 2059, 1382, 281, 915, 613, 30515, 1713, 49241, 1109, 13, 51498, 51498, 1449, 257, 1916, 295, 5570, 322, 341, 1399, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.08339032259854404, "compression_ratio": 1.6772908366533865, "no_speech_prob": 3.6119413380220067e-06}, {"id": 37, "seek": 18692, "start": 191.95999999999998, "end": 197.07999999999998, "text": " algorithms to find deliberate misspellings in spam emails only much later to realize", "tokens": [50364, 400, 538, 264, 636, 11, 286, 478, 3585, 264, 1657, 570, 286, 1564, 767, 4418, 257, 688, 295, 565, 2390, 50616, 50616, 14642, 281, 915, 30515, 1713, 49241, 1109, 294, 24028, 12524, 787, 709, 1780, 281, 4325, 50872, 50872, 300, 264, 2533, 2712, 390, 767, 1596, 1359, 13, 51000, 51000, 407, 341, 307, 472, 1365, 689, 286, 3172, 286, 632, 1096, 257, 544, 5026, 6713, 5215, 949, 51220, 51220, 6434, 257, 688, 295, 565, 2059, 1382, 281, 915, 613, 30515, 1713, 49241, 1109, 13, 51498, 51498, 1449, 257, 1916, 295, 5570, 322, 341, 1399, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.08339032259854404, "compression_ratio": 1.6772908366533865, "no_speech_prob": 3.6119413380220067e-06}, {"id": 38, "seek": 18692, "start": 197.07999999999998, "end": 199.64, "text": " that the net impact was actually quite small.", "tokens": [50364, 400, 538, 264, 636, 11, 286, 478, 3585, 264, 1657, 570, 286, 1564, 767, 4418, 257, 688, 295, 565, 2390, 50616, 50616, 14642, 281, 915, 30515, 1713, 49241, 1109, 294, 24028, 12524, 787, 709, 1780, 281, 4325, 50872, 50872, 300, 264, 2533, 2712, 390, 767, 1596, 1359, 13, 51000, 51000, 407, 341, 307, 472, 1365, 689, 286, 3172, 286, 632, 1096, 257, 544, 5026, 6713, 5215, 949, 51220, 51220, 6434, 257, 688, 295, 565, 2059, 1382, 281, 915, 613, 30515, 1713, 49241, 1109, 13, 51498, 51498, 1449, 257, 1916, 295, 5570, 322, 341, 1399, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.08339032259854404, "compression_ratio": 1.6772908366533865, "no_speech_prob": 3.6119413380220067e-06}, {"id": 39, "seek": 18692, "start": 199.64, "end": 204.04, "text": " So this is one example where I wish I had done a more careful error analysis before", "tokens": [50364, 400, 538, 264, 636, 11, 286, 478, 3585, 264, 1657, 570, 286, 1564, 767, 4418, 257, 688, 295, 565, 2390, 50616, 50616, 14642, 281, 915, 30515, 1713, 49241, 1109, 294, 24028, 12524, 787, 709, 1780, 281, 4325, 50872, 50872, 300, 264, 2533, 2712, 390, 767, 1596, 1359, 13, 51000, 51000, 407, 341, 307, 472, 1365, 689, 286, 3172, 286, 632, 1096, 257, 544, 5026, 6713, 5215, 949, 51220, 51220, 6434, 257, 688, 295, 565, 2059, 1382, 281, 915, 613, 30515, 1713, 49241, 1109, 13, 51498, 51498, 1449, 257, 1916, 295, 5570, 322, 341, 1399, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.08339032259854404, "compression_ratio": 1.6772908366533865, "no_speech_prob": 3.6119413380220067e-06}, {"id": 40, "seek": 18692, "start": 204.04, "end": 209.6, "text": " spending a lot of time myself trying to find these deliberate misspellings.", "tokens": [50364, 400, 538, 264, 636, 11, 286, 478, 3585, 264, 1657, 570, 286, 1564, 767, 4418, 257, 688, 295, 565, 2390, 50616, 50616, 14642, 281, 915, 30515, 1713, 49241, 1109, 294, 24028, 12524, 787, 709, 1780, 281, 4325, 50872, 50872, 300, 264, 2533, 2712, 390, 767, 1596, 1359, 13, 51000, 51000, 407, 341, 307, 472, 1365, 689, 286, 3172, 286, 632, 1096, 257, 544, 5026, 6713, 5215, 949, 51220, 51220, 6434, 257, 688, 295, 565, 2059, 1382, 281, 915, 613, 30515, 1713, 49241, 1109, 13, 51498, 51498, 1449, 257, 1916, 295, 5570, 322, 341, 1399, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.08339032259854404, "compression_ratio": 1.6772908366533865, "no_speech_prob": 3.6119413380220067e-06}, {"id": 41, "seek": 18692, "start": 209.6, "end": 212.6, "text": " Just a couple of notes on this process.", "tokens": [50364, 400, 538, 264, 636, 11, 286, 478, 3585, 264, 1657, 570, 286, 1564, 767, 4418, 257, 688, 295, 565, 2390, 50616, 50616, 14642, 281, 915, 30515, 1713, 49241, 1109, 294, 24028, 12524, 787, 709, 1780, 281, 4325, 50872, 50872, 300, 264, 2533, 2712, 390, 767, 1596, 1359, 13, 51000, 51000, 407, 341, 307, 472, 1365, 689, 286, 3172, 286, 632, 1096, 257, 544, 5026, 6713, 5215, 949, 51220, 51220, 6434, 257, 688, 295, 565, 2059, 1382, 281, 915, 613, 30515, 1713, 49241, 1109, 13, 51498, 51498, 1449, 257, 1916, 295, 5570, 322, 341, 1399, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.08339032259854404, "compression_ratio": 1.6772908366533865, "no_speech_prob": 3.6119413380220067e-06}, {"id": 42, "seek": 21260, "start": 212.6, "end": 218.92, "text": " These categories can be overlapping or in other words, they're not mutually exclusive.", "tokens": [50364, 1981, 10479, 393, 312, 33535, 420, 294, 661, 2283, 11, 436, 434, 406, 39144, 13005, 13, 50680, 50680, 407, 337, 1365, 11, 456, 393, 312, 257, 27130, 24028, 3796, 300, 611, 575, 10901, 32722, 420, 51044, 51044, 257, 11524, 300, 575, 30515, 1713, 49241, 1109, 293, 307, 611, 1382, 281, 3985, 484, 257, 903, 3807, 51330, 51330, 2690, 13, 51387, 51387, 407, 472, 3796, 393, 312, 20150, 294, 3866, 10479, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.10123034159342448, "compression_ratio": 1.599009900990099, "no_speech_prob": 4.222788447805215e-06}, {"id": 43, "seek": 21260, "start": 218.92, "end": 226.2, "text": " So for example, there can be a pharmaceutical spam email that also has unusual routing or", "tokens": [50364, 1981, 10479, 393, 312, 33535, 420, 294, 661, 2283, 11, 436, 434, 406, 39144, 13005, 13, 50680, 50680, 407, 337, 1365, 11, 456, 393, 312, 257, 27130, 24028, 3796, 300, 611, 575, 10901, 32722, 420, 51044, 51044, 257, 11524, 300, 575, 30515, 1713, 49241, 1109, 293, 307, 611, 1382, 281, 3985, 484, 257, 903, 3807, 51330, 51330, 2690, 13, 51387, 51387, 407, 472, 3796, 393, 312, 20150, 294, 3866, 10479, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.10123034159342448, "compression_ratio": 1.599009900990099, "no_speech_prob": 4.222788447805215e-06}, {"id": 44, "seek": 21260, "start": 226.2, "end": 231.92, "text": " a password that has deliberate misspellings and is also trying to carry out a phishing", "tokens": [50364, 1981, 10479, 393, 312, 33535, 420, 294, 661, 2283, 11, 436, 434, 406, 39144, 13005, 13, 50680, 50680, 407, 337, 1365, 11, 456, 393, 312, 257, 27130, 24028, 3796, 300, 611, 575, 10901, 32722, 420, 51044, 51044, 257, 11524, 300, 575, 30515, 1713, 49241, 1109, 293, 307, 611, 1382, 281, 3985, 484, 257, 903, 3807, 51330, 51330, 2690, 13, 51387, 51387, 407, 472, 3796, 393, 312, 20150, 294, 3866, 10479, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.10123034159342448, "compression_ratio": 1.599009900990099, "no_speech_prob": 4.222788447805215e-06}, {"id": 45, "seek": 21260, "start": 231.92, "end": 233.06, "text": " attack.", "tokens": [50364, 1981, 10479, 393, 312, 33535, 420, 294, 661, 2283, 11, 436, 434, 406, 39144, 13005, 13, 50680, 50680, 407, 337, 1365, 11, 456, 393, 312, 257, 27130, 24028, 3796, 300, 611, 575, 10901, 32722, 420, 51044, 51044, 257, 11524, 300, 575, 30515, 1713, 49241, 1109, 293, 307, 611, 1382, 281, 3985, 484, 257, 903, 3807, 51330, 51330, 2690, 13, 51387, 51387, 407, 472, 3796, 393, 312, 20150, 294, 3866, 10479, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.10123034159342448, "compression_ratio": 1.599009900990099, "no_speech_prob": 4.222788447805215e-06}, {"id": 46, "seek": 21260, "start": 233.06, "end": 237.51999999999998, "text": " So one email can be counted in multiple categories.", "tokens": [50364, 1981, 10479, 393, 312, 33535, 420, 294, 661, 2283, 11, 436, 434, 406, 39144, 13005, 13, 50680, 50680, 407, 337, 1365, 11, 456, 393, 312, 257, 27130, 24028, 3796, 300, 611, 575, 10901, 32722, 420, 51044, 51044, 257, 11524, 300, 575, 30515, 1713, 49241, 1109, 293, 307, 611, 1382, 281, 3985, 484, 257, 903, 3807, 51330, 51330, 2690, 13, 51387, 51387, 407, 472, 3796, 393, 312, 20150, 294, 3866, 10479, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.10123034159342448, "compression_ratio": 1.599009900990099, "no_speech_prob": 4.222788447805215e-06}, {"id": 47, "seek": 23752, "start": 237.52, "end": 243.44, "text": " And in this example, I had said that the algorithm misclassifies 100 examples and will look at", "tokens": [50364, 400, 294, 341, 1365, 11, 286, 632, 848, 300, 264, 9284, 3346, 11665, 11221, 2319, 5110, 293, 486, 574, 412, 50660, 50660, 2319, 5110, 16945, 13, 50804, 50804, 759, 291, 362, 257, 4833, 3278, 24071, 992, 11, 584, 321, 632, 1025, 11, 1360, 3278, 24071, 5110, 11, 51132, 51132, 293, 498, 264, 9284, 3346, 11665, 2587, 11, 584, 502, 11, 1360, 295, 552, 11, 550, 291, 815, 406, 362, 264, 565, 11, 5413, 51480, 51480, 322, 264, 1469, 2744, 293, 577, 709, 565, 291, 362, 281, 589, 322, 341, 1716, 11, 291, 815, 406, 362, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.15308478384306937, "compression_ratio": 1.808411214953271, "no_speech_prob": 5.014540874981321e-06}, {"id": 48, "seek": 23752, "start": 243.44, "end": 246.32000000000002, "text": " 100 examples manually.", "tokens": [50364, 400, 294, 341, 1365, 11, 286, 632, 848, 300, 264, 9284, 3346, 11665, 11221, 2319, 5110, 293, 486, 574, 412, 50660, 50660, 2319, 5110, 16945, 13, 50804, 50804, 759, 291, 362, 257, 4833, 3278, 24071, 992, 11, 584, 321, 632, 1025, 11, 1360, 3278, 24071, 5110, 11, 51132, 51132, 293, 498, 264, 9284, 3346, 11665, 2587, 11, 584, 502, 11, 1360, 295, 552, 11, 550, 291, 815, 406, 362, 264, 565, 11, 5413, 51480, 51480, 322, 264, 1469, 2744, 293, 577, 709, 565, 291, 362, 281, 589, 322, 341, 1716, 11, 291, 815, 406, 362, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.15308478384306937, "compression_ratio": 1.808411214953271, "no_speech_prob": 5.014540874981321e-06}, {"id": 49, "seek": 23752, "start": 246.32000000000002, "end": 252.88, "text": " If you have a larger cross validation set, say we had 5,000 cross validation examples,", "tokens": [50364, 400, 294, 341, 1365, 11, 286, 632, 848, 300, 264, 9284, 3346, 11665, 11221, 2319, 5110, 293, 486, 574, 412, 50660, 50660, 2319, 5110, 16945, 13, 50804, 50804, 759, 291, 362, 257, 4833, 3278, 24071, 992, 11, 584, 321, 632, 1025, 11, 1360, 3278, 24071, 5110, 11, 51132, 51132, 293, 498, 264, 9284, 3346, 11665, 2587, 11, 584, 502, 11, 1360, 295, 552, 11, 550, 291, 815, 406, 362, 264, 565, 11, 5413, 51480, 51480, 322, 264, 1469, 2744, 293, 577, 709, 565, 291, 362, 281, 589, 322, 341, 1716, 11, 291, 815, 406, 362, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.15308478384306937, "compression_ratio": 1.808411214953271, "no_speech_prob": 5.014540874981321e-06}, {"id": 50, "seek": 23752, "start": 252.88, "end": 259.84000000000003, "text": " and if the algorithm misclassified, say 1,000 of them, then you may not have the time, depending", "tokens": [50364, 400, 294, 341, 1365, 11, 286, 632, 848, 300, 264, 9284, 3346, 11665, 11221, 2319, 5110, 293, 486, 574, 412, 50660, 50660, 2319, 5110, 16945, 13, 50804, 50804, 759, 291, 362, 257, 4833, 3278, 24071, 992, 11, 584, 321, 632, 1025, 11, 1360, 3278, 24071, 5110, 11, 51132, 51132, 293, 498, 264, 9284, 3346, 11665, 2587, 11, 584, 502, 11, 1360, 295, 552, 11, 550, 291, 815, 406, 362, 264, 565, 11, 5413, 51480, 51480, 322, 264, 1469, 2744, 293, 577, 709, 565, 291, 362, 281, 589, 322, 341, 1716, 11, 291, 815, 406, 362, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.15308478384306937, "compression_ratio": 1.808411214953271, "no_speech_prob": 5.014540874981321e-06}, {"id": 51, "seek": 23752, "start": 259.84000000000003, "end": 265.12, "text": " on the team size and how much time you have to work on this project, you may not have", "tokens": [50364, 400, 294, 341, 1365, 11, 286, 632, 848, 300, 264, 9284, 3346, 11665, 11221, 2319, 5110, 293, 486, 574, 412, 50660, 50660, 2319, 5110, 16945, 13, 50804, 50804, 759, 291, 362, 257, 4833, 3278, 24071, 992, 11, 584, 321, 632, 1025, 11, 1360, 3278, 24071, 5110, 11, 51132, 51132, 293, 498, 264, 9284, 3346, 11665, 2587, 11, 584, 502, 11, 1360, 295, 552, 11, 550, 291, 815, 406, 362, 264, 565, 11, 5413, 51480, 51480, 322, 264, 1469, 2744, 293, 577, 709, 565, 291, 362, 281, 589, 322, 341, 1716, 11, 291, 815, 406, 362, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.15308478384306937, "compression_ratio": 1.808411214953271, "no_speech_prob": 5.014540874981321e-06}, {"id": 52, "seek": 26512, "start": 265.12, "end": 270.6, "text": " the time to manually look at all 1,000 examples that the algorithm misclassifies.", "tokens": [50364, 264, 565, 281, 16945, 574, 412, 439, 502, 11, 1360, 5110, 300, 264, 9284, 3346, 11665, 11221, 13, 50638, 50638, 682, 300, 1389, 11, 286, 486, 2049, 6889, 16979, 257, 25993, 295, 2673, 926, 2319, 11, 1310, 257, 1916, 50960, 50960, 295, 3262, 5110, 11, 570, 300, 311, 264, 2372, 300, 291, 393, 574, 807, 294, 257, 10585, 51144, 51144, 2372, 295, 565, 13, 51232, 51232, 400, 4696, 1237, 807, 1310, 926, 2319, 5110, 486, 976, 291, 1547, 12523, 51468, 51468, 466, 437, 366, 264, 881, 2689, 3467, 295, 13603, 293, 4412, 689, 815, 312, 881, 49795, 281, 51722, 51722, 1879, 428, 3202, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1426689271573667, "compression_ratio": 1.7220216606498195, "no_speech_prob": 2.9022696708125295e-06}, {"id": 53, "seek": 26512, "start": 270.6, "end": 277.04, "text": " In that case, I will often sample randomly a subset of usually around 100, maybe a couple", "tokens": [50364, 264, 565, 281, 16945, 574, 412, 439, 502, 11, 1360, 5110, 300, 264, 9284, 3346, 11665, 11221, 13, 50638, 50638, 682, 300, 1389, 11, 286, 486, 2049, 6889, 16979, 257, 25993, 295, 2673, 926, 2319, 11, 1310, 257, 1916, 50960, 50960, 295, 3262, 5110, 11, 570, 300, 311, 264, 2372, 300, 291, 393, 574, 807, 294, 257, 10585, 51144, 51144, 2372, 295, 565, 13, 51232, 51232, 400, 4696, 1237, 807, 1310, 926, 2319, 5110, 486, 976, 291, 1547, 12523, 51468, 51468, 466, 437, 366, 264, 881, 2689, 3467, 295, 13603, 293, 4412, 689, 815, 312, 881, 49795, 281, 51722, 51722, 1879, 428, 3202, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1426689271573667, "compression_ratio": 1.7220216606498195, "no_speech_prob": 2.9022696708125295e-06}, {"id": 54, "seek": 26512, "start": 277.04, "end": 280.72, "text": " of hundred examples, because that's the amount that you can look through in a reasonable", "tokens": [50364, 264, 565, 281, 16945, 574, 412, 439, 502, 11, 1360, 5110, 300, 264, 9284, 3346, 11665, 11221, 13, 50638, 50638, 682, 300, 1389, 11, 286, 486, 2049, 6889, 16979, 257, 25993, 295, 2673, 926, 2319, 11, 1310, 257, 1916, 50960, 50960, 295, 3262, 5110, 11, 570, 300, 311, 264, 2372, 300, 291, 393, 574, 807, 294, 257, 10585, 51144, 51144, 2372, 295, 565, 13, 51232, 51232, 400, 4696, 1237, 807, 1310, 926, 2319, 5110, 486, 976, 291, 1547, 12523, 51468, 51468, 466, 437, 366, 264, 881, 2689, 3467, 295, 13603, 293, 4412, 689, 815, 312, 881, 49795, 281, 51722, 51722, 1879, 428, 3202, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1426689271573667, "compression_ratio": 1.7220216606498195, "no_speech_prob": 2.9022696708125295e-06}, {"id": 55, "seek": 26512, "start": 280.72, "end": 282.48, "text": " amount of time.", "tokens": [50364, 264, 565, 281, 16945, 574, 412, 439, 502, 11, 1360, 5110, 300, 264, 9284, 3346, 11665, 11221, 13, 50638, 50638, 682, 300, 1389, 11, 286, 486, 2049, 6889, 16979, 257, 25993, 295, 2673, 926, 2319, 11, 1310, 257, 1916, 50960, 50960, 295, 3262, 5110, 11, 570, 300, 311, 264, 2372, 300, 291, 393, 574, 807, 294, 257, 10585, 51144, 51144, 2372, 295, 565, 13, 51232, 51232, 400, 4696, 1237, 807, 1310, 926, 2319, 5110, 486, 976, 291, 1547, 12523, 51468, 51468, 466, 437, 366, 264, 881, 2689, 3467, 295, 13603, 293, 4412, 689, 815, 312, 881, 49795, 281, 51722, 51722, 1879, 428, 3202, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1426689271573667, "compression_ratio": 1.7220216606498195, "no_speech_prob": 2.9022696708125295e-06}, {"id": 56, "seek": 26512, "start": 282.48, "end": 287.2, "text": " And hopefully looking through maybe around 100 examples will give you enough statistics", "tokens": [50364, 264, 565, 281, 16945, 574, 412, 439, 502, 11, 1360, 5110, 300, 264, 9284, 3346, 11665, 11221, 13, 50638, 50638, 682, 300, 1389, 11, 286, 486, 2049, 6889, 16979, 257, 25993, 295, 2673, 926, 2319, 11, 1310, 257, 1916, 50960, 50960, 295, 3262, 5110, 11, 570, 300, 311, 264, 2372, 300, 291, 393, 574, 807, 294, 257, 10585, 51144, 51144, 2372, 295, 565, 13, 51232, 51232, 400, 4696, 1237, 807, 1310, 926, 2319, 5110, 486, 976, 291, 1547, 12523, 51468, 51468, 466, 437, 366, 264, 881, 2689, 3467, 295, 13603, 293, 4412, 689, 815, 312, 881, 49795, 281, 51722, 51722, 1879, 428, 3202, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1426689271573667, "compression_ratio": 1.7220216606498195, "no_speech_prob": 2.9022696708125295e-06}, {"id": 57, "seek": 26512, "start": 287.2, "end": 292.28000000000003, "text": " about what are the most common types of errors and therefore where may be most fruitful to", "tokens": [50364, 264, 565, 281, 16945, 574, 412, 439, 502, 11, 1360, 5110, 300, 264, 9284, 3346, 11665, 11221, 13, 50638, 50638, 682, 300, 1389, 11, 286, 486, 2049, 6889, 16979, 257, 25993, 295, 2673, 926, 2319, 11, 1310, 257, 1916, 50960, 50960, 295, 3262, 5110, 11, 570, 300, 311, 264, 2372, 300, 291, 393, 574, 807, 294, 257, 10585, 51144, 51144, 2372, 295, 565, 13, 51232, 51232, 400, 4696, 1237, 807, 1310, 926, 2319, 5110, 486, 976, 291, 1547, 12523, 51468, 51468, 466, 437, 366, 264, 881, 2689, 3467, 295, 13603, 293, 4412, 689, 815, 312, 881, 49795, 281, 51722, 51722, 1879, 428, 3202, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1426689271573667, "compression_ratio": 1.7220216606498195, "no_speech_prob": 2.9022696708125295e-06}, {"id": 58, "seek": 26512, "start": 292.28000000000003, "end": 294.64, "text": " focus your attention.", "tokens": [50364, 264, 565, 281, 16945, 574, 412, 439, 502, 11, 1360, 5110, 300, 264, 9284, 3346, 11665, 11221, 13, 50638, 50638, 682, 300, 1389, 11, 286, 486, 2049, 6889, 16979, 257, 25993, 295, 2673, 926, 2319, 11, 1310, 257, 1916, 50960, 50960, 295, 3262, 5110, 11, 570, 300, 311, 264, 2372, 300, 291, 393, 574, 807, 294, 257, 10585, 51144, 51144, 2372, 295, 565, 13, 51232, 51232, 400, 4696, 1237, 807, 1310, 926, 2319, 5110, 486, 976, 291, 1547, 12523, 51468, 51468, 466, 437, 366, 264, 881, 2689, 3467, 295, 13603, 293, 4412, 689, 815, 312, 881, 49795, 281, 51722, 51722, 1879, 428, 3202, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1426689271573667, "compression_ratio": 1.7220216606498195, "no_speech_prob": 2.9022696708125295e-06}, {"id": 59, "seek": 29464, "start": 294.64, "end": 302.56, "text": " And so after this analysis, if you find that a lot of errors are pharmaceutical spam emails,", "tokens": [50364, 400, 370, 934, 341, 5215, 11, 498, 291, 915, 300, 257, 688, 295, 13603, 366, 27130, 24028, 12524, 11, 50760, 50760, 550, 341, 1062, 976, 291, 512, 3487, 420, 10249, 337, 721, 281, 360, 958, 13, 51064, 51064, 1171, 1365, 11, 291, 815, 4536, 281, 2500, 544, 1412, 11, 457, 406, 544, 1412, 295, 1203, 11, 457, 51438, 51438, 445, 853, 281, 915, 544, 1412, 295, 27130, 24028, 12524, 370, 300, 264, 2539, 9284, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.11009662579267453, "compression_ratio": 1.7222222222222223, "no_speech_prob": 6.143815426185029e-06}, {"id": 60, "seek": 29464, "start": 302.56, "end": 308.64, "text": " then this might give you some ideas or inspiration for things to do next.", "tokens": [50364, 400, 370, 934, 341, 5215, 11, 498, 291, 915, 300, 257, 688, 295, 13603, 366, 27130, 24028, 12524, 11, 50760, 50760, 550, 341, 1062, 976, 291, 512, 3487, 420, 10249, 337, 721, 281, 360, 958, 13, 51064, 51064, 1171, 1365, 11, 291, 815, 4536, 281, 2500, 544, 1412, 11, 457, 406, 544, 1412, 295, 1203, 11, 457, 51438, 51438, 445, 853, 281, 915, 544, 1412, 295, 27130, 24028, 12524, 370, 300, 264, 2539, 9284, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.11009662579267453, "compression_ratio": 1.7222222222222223, "no_speech_prob": 6.143815426185029e-06}, {"id": 61, "seek": 29464, "start": 308.64, "end": 316.12, "text": " For example, you may decide to collect more data, but not more data of everything, but", "tokens": [50364, 400, 370, 934, 341, 5215, 11, 498, 291, 915, 300, 257, 688, 295, 13603, 366, 27130, 24028, 12524, 11, 50760, 50760, 550, 341, 1062, 976, 291, 512, 3487, 420, 10249, 337, 721, 281, 360, 958, 13, 51064, 51064, 1171, 1365, 11, 291, 815, 4536, 281, 2500, 544, 1412, 11, 457, 406, 544, 1412, 295, 1203, 11, 457, 51438, 51438, 445, 853, 281, 915, 544, 1412, 295, 27130, 24028, 12524, 370, 300, 264, 2539, 9284, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.11009662579267453, "compression_ratio": 1.7222222222222223, "no_speech_prob": 6.143815426185029e-06}, {"id": 62, "seek": 29464, "start": 316.12, "end": 321.47999999999996, "text": " just try to find more data of pharmaceutical spam emails so that the learning algorithm", "tokens": [50364, 400, 370, 934, 341, 5215, 11, 498, 291, 915, 300, 257, 688, 295, 13603, 366, 27130, 24028, 12524, 11, 50760, 50760, 550, 341, 1062, 976, 291, 512, 3487, 420, 10249, 337, 721, 281, 360, 958, 13, 51064, 51064, 1171, 1365, 11, 291, 815, 4536, 281, 2500, 544, 1412, 11, 457, 406, 544, 1412, 295, 1203, 11, 457, 51438, 51438, 445, 853, 281, 915, 544, 1412, 295, 27130, 24028, 12524, 370, 300, 264, 2539, 9284, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.11009662579267453, "compression_ratio": 1.7222222222222223, "no_speech_prob": 6.143815426185029e-06}, {"id": 63, "seek": 32148, "start": 321.48, "end": 325.8, "text": " can do a better job recognizing these pharmaceutical spams.", "tokens": [50364, 393, 360, 257, 1101, 1691, 18538, 613, 27130, 637, 4070, 13, 50580, 50580, 1610, 291, 815, 4536, 281, 808, 493, 365, 512, 777, 4122, 300, 366, 4077, 281, 584, 2685, 50828, 50828, 5288, 295, 7766, 420, 2685, 5288, 295, 27130, 3383, 300, 264, 637, 48414, 366, 1382, 281, 3607, 51104, 51104, 294, 1668, 281, 854, 428, 2539, 9284, 1813, 1101, 412, 18538, 341, 2010, 295, 903, 36159, 51350, 51350, 24028, 13, 51400, 51400, 1396, 797, 11, 341, 1062, 15638, 291, 281, 652, 2685, 2962, 281, 264, 9284, 23968, 51708, 51708, 281, 40237, 903, 3807, 12524, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11608583450317383, "compression_ratio": 1.8266129032258065, "no_speech_prob": 4.356624231149908e-06}, {"id": 64, "seek": 32148, "start": 325.8, "end": 330.76, "text": " Or you may decide to come up with some new features that are related to say specific", "tokens": [50364, 393, 360, 257, 1101, 1691, 18538, 613, 27130, 637, 4070, 13, 50580, 50580, 1610, 291, 815, 4536, 281, 808, 493, 365, 512, 777, 4122, 300, 366, 4077, 281, 584, 2685, 50828, 50828, 5288, 295, 7766, 420, 2685, 5288, 295, 27130, 3383, 300, 264, 637, 48414, 366, 1382, 281, 3607, 51104, 51104, 294, 1668, 281, 854, 428, 2539, 9284, 1813, 1101, 412, 18538, 341, 2010, 295, 903, 36159, 51350, 51350, 24028, 13, 51400, 51400, 1396, 797, 11, 341, 1062, 15638, 291, 281, 652, 2685, 2962, 281, 264, 9284, 23968, 51708, 51708, 281, 40237, 903, 3807, 12524, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11608583450317383, "compression_ratio": 1.8266129032258065, "no_speech_prob": 4.356624231149908e-06}, {"id": 65, "seek": 32148, "start": 330.76, "end": 336.28000000000003, "text": " names of drugs or specific names of pharmaceutical products that the spammers are trying to sell", "tokens": [50364, 393, 360, 257, 1101, 1691, 18538, 613, 27130, 637, 4070, 13, 50580, 50580, 1610, 291, 815, 4536, 281, 808, 493, 365, 512, 777, 4122, 300, 366, 4077, 281, 584, 2685, 50828, 50828, 5288, 295, 7766, 420, 2685, 5288, 295, 27130, 3383, 300, 264, 637, 48414, 366, 1382, 281, 3607, 51104, 51104, 294, 1668, 281, 854, 428, 2539, 9284, 1813, 1101, 412, 18538, 341, 2010, 295, 903, 36159, 51350, 51350, 24028, 13, 51400, 51400, 1396, 797, 11, 341, 1062, 15638, 291, 281, 652, 2685, 2962, 281, 264, 9284, 23968, 51708, 51708, 281, 40237, 903, 3807, 12524, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11608583450317383, "compression_ratio": 1.8266129032258065, "no_speech_prob": 4.356624231149908e-06}, {"id": 66, "seek": 32148, "start": 336.28000000000003, "end": 341.20000000000005, "text": " in order to help your learning algorithm become better at recognizing this type of pharma", "tokens": [50364, 393, 360, 257, 1101, 1691, 18538, 613, 27130, 637, 4070, 13, 50580, 50580, 1610, 291, 815, 4536, 281, 808, 493, 365, 512, 777, 4122, 300, 366, 4077, 281, 584, 2685, 50828, 50828, 5288, 295, 7766, 420, 2685, 5288, 295, 27130, 3383, 300, 264, 637, 48414, 366, 1382, 281, 3607, 51104, 51104, 294, 1668, 281, 854, 428, 2539, 9284, 1813, 1101, 412, 18538, 341, 2010, 295, 903, 36159, 51350, 51350, 24028, 13, 51400, 51400, 1396, 797, 11, 341, 1062, 15638, 291, 281, 652, 2685, 2962, 281, 264, 9284, 23968, 51708, 51708, 281, 40237, 903, 3807, 12524, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11608583450317383, "compression_ratio": 1.8266129032258065, "no_speech_prob": 4.356624231149908e-06}, {"id": 67, "seek": 32148, "start": 341.20000000000005, "end": 342.20000000000005, "text": " spam.", "tokens": [50364, 393, 360, 257, 1101, 1691, 18538, 613, 27130, 637, 4070, 13, 50580, 50580, 1610, 291, 815, 4536, 281, 808, 493, 365, 512, 777, 4122, 300, 366, 4077, 281, 584, 2685, 50828, 50828, 5288, 295, 7766, 420, 2685, 5288, 295, 27130, 3383, 300, 264, 637, 48414, 366, 1382, 281, 3607, 51104, 51104, 294, 1668, 281, 854, 428, 2539, 9284, 1813, 1101, 412, 18538, 341, 2010, 295, 903, 36159, 51350, 51350, 24028, 13, 51400, 51400, 1396, 797, 11, 341, 1062, 15638, 291, 281, 652, 2685, 2962, 281, 264, 9284, 23968, 51708, 51708, 281, 40237, 903, 3807, 12524, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11608583450317383, "compression_ratio": 1.8266129032258065, "no_speech_prob": 4.356624231149908e-06}, {"id": 68, "seek": 32148, "start": 342.20000000000005, "end": 348.36, "text": " Then again, this might inspire you to make specific changes to the algorithm relating", "tokens": [50364, 393, 360, 257, 1101, 1691, 18538, 613, 27130, 637, 4070, 13, 50580, 50580, 1610, 291, 815, 4536, 281, 808, 493, 365, 512, 777, 4122, 300, 366, 4077, 281, 584, 2685, 50828, 50828, 5288, 295, 7766, 420, 2685, 5288, 295, 27130, 3383, 300, 264, 637, 48414, 366, 1382, 281, 3607, 51104, 51104, 294, 1668, 281, 854, 428, 2539, 9284, 1813, 1101, 412, 18538, 341, 2010, 295, 903, 36159, 51350, 51350, 24028, 13, 51400, 51400, 1396, 797, 11, 341, 1062, 15638, 291, 281, 652, 2685, 2962, 281, 264, 9284, 23968, 51708, 51708, 281, 40237, 903, 3807, 12524, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11608583450317383, "compression_ratio": 1.8266129032258065, "no_speech_prob": 4.356624231149908e-06}, {"id": 69, "seek": 32148, "start": 348.36, "end": 350.32, "text": " to detecting phishing emails.", "tokens": [50364, 393, 360, 257, 1101, 1691, 18538, 613, 27130, 637, 4070, 13, 50580, 50580, 1610, 291, 815, 4536, 281, 808, 493, 365, 512, 777, 4122, 300, 366, 4077, 281, 584, 2685, 50828, 50828, 5288, 295, 7766, 420, 2685, 5288, 295, 27130, 3383, 300, 264, 637, 48414, 366, 1382, 281, 3607, 51104, 51104, 294, 1668, 281, 854, 428, 2539, 9284, 1813, 1101, 412, 18538, 341, 2010, 295, 903, 36159, 51350, 51350, 24028, 13, 51400, 51400, 1396, 797, 11, 341, 1062, 15638, 291, 281, 652, 2685, 2962, 281, 264, 9284, 23968, 51708, 51708, 281, 40237, 903, 3807, 12524, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11608583450317383, "compression_ratio": 1.8266129032258065, "no_speech_prob": 4.356624231149908e-06}, {"id": 70, "seek": 35032, "start": 350.32, "end": 355.48, "text": " For example, you might look at the URLs in the email and write special code to come up", "tokens": [50364, 1171, 1365, 11, 291, 1062, 574, 412, 264, 43267, 294, 264, 3796, 293, 2464, 2121, 3089, 281, 808, 493, 50622, 50622, 365, 2857, 4122, 281, 536, 341, 25775, 281, 17931, 43267, 13, 50810, 50810, 1610, 797, 11, 291, 815, 4536, 281, 483, 544, 1412, 295, 903, 3807, 12524, 4682, 294, 1668, 281, 51064, 51064, 854, 428, 2539, 9284, 360, 257, 1101, 1691, 412, 18538, 552, 13, 51238, 51238, 407, 264, 935, 295, 341, 6713, 5215, 307, 538, 16945, 34662, 257, 992, 295, 5110, 300, 51562, 51562, 428, 9284, 307, 3346, 11665, 5489, 420, 3346, 44990, 11031, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13711678155578008, "compression_ratio": 1.6264150943396227, "no_speech_prob": 6.577822091458074e-07}, {"id": 71, "seek": 35032, "start": 355.48, "end": 359.24, "text": " with extra features to see this linking to suspicious URLs.", "tokens": [50364, 1171, 1365, 11, 291, 1062, 574, 412, 264, 43267, 294, 264, 3796, 293, 2464, 2121, 3089, 281, 808, 493, 50622, 50622, 365, 2857, 4122, 281, 536, 341, 25775, 281, 17931, 43267, 13, 50810, 50810, 1610, 797, 11, 291, 815, 4536, 281, 483, 544, 1412, 295, 903, 3807, 12524, 4682, 294, 1668, 281, 51064, 51064, 854, 428, 2539, 9284, 360, 257, 1101, 1691, 412, 18538, 552, 13, 51238, 51238, 407, 264, 935, 295, 341, 6713, 5215, 307, 538, 16945, 34662, 257, 992, 295, 5110, 300, 51562, 51562, 428, 9284, 307, 3346, 11665, 5489, 420, 3346, 44990, 11031, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13711678155578008, "compression_ratio": 1.6264150943396227, "no_speech_prob": 6.577822091458074e-07}, {"id": 72, "seek": 35032, "start": 359.24, "end": 364.32, "text": " Or again, you may decide to get more data of phishing emails specifically in order to", "tokens": [50364, 1171, 1365, 11, 291, 1062, 574, 412, 264, 43267, 294, 264, 3796, 293, 2464, 2121, 3089, 281, 808, 493, 50622, 50622, 365, 2857, 4122, 281, 536, 341, 25775, 281, 17931, 43267, 13, 50810, 50810, 1610, 797, 11, 291, 815, 4536, 281, 483, 544, 1412, 295, 903, 3807, 12524, 4682, 294, 1668, 281, 51064, 51064, 854, 428, 2539, 9284, 360, 257, 1101, 1691, 412, 18538, 552, 13, 51238, 51238, 407, 264, 935, 295, 341, 6713, 5215, 307, 538, 16945, 34662, 257, 992, 295, 5110, 300, 51562, 51562, 428, 9284, 307, 3346, 11665, 5489, 420, 3346, 44990, 11031, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13711678155578008, "compression_ratio": 1.6264150943396227, "no_speech_prob": 6.577822091458074e-07}, {"id": 73, "seek": 35032, "start": 364.32, "end": 367.8, "text": " help your learning algorithm do a better job at recognizing them.", "tokens": [50364, 1171, 1365, 11, 291, 1062, 574, 412, 264, 43267, 294, 264, 3796, 293, 2464, 2121, 3089, 281, 808, 493, 50622, 50622, 365, 2857, 4122, 281, 536, 341, 25775, 281, 17931, 43267, 13, 50810, 50810, 1610, 797, 11, 291, 815, 4536, 281, 483, 544, 1412, 295, 903, 3807, 12524, 4682, 294, 1668, 281, 51064, 51064, 854, 428, 2539, 9284, 360, 257, 1101, 1691, 412, 18538, 552, 13, 51238, 51238, 407, 264, 935, 295, 341, 6713, 5215, 307, 538, 16945, 34662, 257, 992, 295, 5110, 300, 51562, 51562, 428, 9284, 307, 3346, 11665, 5489, 420, 3346, 44990, 11031, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13711678155578008, "compression_ratio": 1.6264150943396227, "no_speech_prob": 6.577822091458074e-07}, {"id": 74, "seek": 35032, "start": 367.8, "end": 374.28, "text": " So the point of this error analysis is by manually examining a set of examples that", "tokens": [50364, 1171, 1365, 11, 291, 1062, 574, 412, 264, 43267, 294, 264, 3796, 293, 2464, 2121, 3089, 281, 808, 493, 50622, 50622, 365, 2857, 4122, 281, 536, 341, 25775, 281, 17931, 43267, 13, 50810, 50810, 1610, 797, 11, 291, 815, 4536, 281, 483, 544, 1412, 295, 903, 3807, 12524, 4682, 294, 1668, 281, 51064, 51064, 854, 428, 2539, 9284, 360, 257, 1101, 1691, 412, 18538, 552, 13, 51238, 51238, 407, 264, 935, 295, 341, 6713, 5215, 307, 538, 16945, 34662, 257, 992, 295, 5110, 300, 51562, 51562, 428, 9284, 307, 3346, 11665, 5489, 420, 3346, 44990, 11031, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13711678155578008, "compression_ratio": 1.6264150943396227, "no_speech_prob": 6.577822091458074e-07}, {"id": 75, "seek": 35032, "start": 374.28, "end": 378.2, "text": " your algorithm is misclassifying or mislabeling.", "tokens": [50364, 1171, 1365, 11, 291, 1062, 574, 412, 264, 43267, 294, 264, 3796, 293, 2464, 2121, 3089, 281, 808, 493, 50622, 50622, 365, 2857, 4122, 281, 536, 341, 25775, 281, 17931, 43267, 13, 50810, 50810, 1610, 797, 11, 291, 815, 4536, 281, 483, 544, 1412, 295, 903, 3807, 12524, 4682, 294, 1668, 281, 51064, 51064, 854, 428, 2539, 9284, 360, 257, 1101, 1691, 412, 18538, 552, 13, 51238, 51238, 407, 264, 935, 295, 341, 6713, 5215, 307, 538, 16945, 34662, 257, 992, 295, 5110, 300, 51562, 51562, 428, 9284, 307, 3346, 11665, 5489, 420, 3346, 44990, 11031, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13711678155578008, "compression_ratio": 1.6264150943396227, "no_speech_prob": 6.577822091458074e-07}, {"id": 76, "seek": 37820, "start": 378.2, "end": 383.88, "text": " And this will create inspiration for what might be useful to try next.", "tokens": [50364, 400, 341, 486, 1884, 10249, 337, 437, 1062, 312, 4420, 281, 853, 958, 13, 50648, 50648, 400, 2171, 309, 393, 611, 980, 291, 300, 1629, 3467, 295, 13603, 366, 31868, 5892, 11, 300, 50970, 50970, 436, 3212, 380, 3163, 382, 709, 295, 428, 565, 281, 853, 281, 3191, 13, 51164, 51164, 400, 370, 12678, 281, 341, 1329, 11, 257, 12577, 12, 34033, 719, 5215, 820, 980, 291, 498, 12510, 544, 51458, 51458, 1412, 307, 4961, 420, 406, 13, 51596, 51596, 18785, 322, 527, 6713, 5215, 294, 264, 1365, 321, 445, 1437, 807, 11, 309, 1542, 411, 544, 16950, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11730555927052218, "compression_ratio": 1.6311787072243347, "no_speech_prob": 1.4367203675647033e-06}, {"id": 77, "seek": 37820, "start": 383.88, "end": 390.32, "text": " And sometimes it can also tell you that certain types of errors are sufficiently rare, that", "tokens": [50364, 400, 341, 486, 1884, 10249, 337, 437, 1062, 312, 4420, 281, 853, 958, 13, 50648, 50648, 400, 2171, 309, 393, 611, 980, 291, 300, 1629, 3467, 295, 13603, 366, 31868, 5892, 11, 300, 50970, 50970, 436, 3212, 380, 3163, 382, 709, 295, 428, 565, 281, 853, 281, 3191, 13, 51164, 51164, 400, 370, 12678, 281, 341, 1329, 11, 257, 12577, 12, 34033, 719, 5215, 820, 980, 291, 498, 12510, 544, 51458, 51458, 1412, 307, 4961, 420, 406, 13, 51596, 51596, 18785, 322, 527, 6713, 5215, 294, 264, 1365, 321, 445, 1437, 807, 11, 309, 1542, 411, 544, 16950, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11730555927052218, "compression_ratio": 1.6311787072243347, "no_speech_prob": 1.4367203675647033e-06}, {"id": 78, "seek": 37820, "start": 390.32, "end": 394.2, "text": " they aren't worth as much of your time to try to fix.", "tokens": [50364, 400, 341, 486, 1884, 10249, 337, 437, 1062, 312, 4420, 281, 853, 958, 13, 50648, 50648, 400, 2171, 309, 393, 611, 980, 291, 300, 1629, 3467, 295, 13603, 366, 31868, 5892, 11, 300, 50970, 50970, 436, 3212, 380, 3163, 382, 709, 295, 428, 565, 281, 853, 281, 3191, 13, 51164, 51164, 400, 370, 12678, 281, 341, 1329, 11, 257, 12577, 12, 34033, 719, 5215, 820, 980, 291, 498, 12510, 544, 51458, 51458, 1412, 307, 4961, 420, 406, 13, 51596, 51596, 18785, 322, 527, 6713, 5215, 294, 264, 1365, 321, 445, 1437, 807, 11, 309, 1542, 411, 544, 16950, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11730555927052218, "compression_ratio": 1.6311787072243347, "no_speech_prob": 1.4367203675647033e-06}, {"id": 79, "seek": 37820, "start": 394.2, "end": 400.08, "text": " And so returning to this list, a bias-variance analysis should tell you if collecting more", "tokens": [50364, 400, 341, 486, 1884, 10249, 337, 437, 1062, 312, 4420, 281, 853, 958, 13, 50648, 50648, 400, 2171, 309, 393, 611, 980, 291, 300, 1629, 3467, 295, 13603, 366, 31868, 5892, 11, 300, 50970, 50970, 436, 3212, 380, 3163, 382, 709, 295, 428, 565, 281, 853, 281, 3191, 13, 51164, 51164, 400, 370, 12678, 281, 341, 1329, 11, 257, 12577, 12, 34033, 719, 5215, 820, 980, 291, 498, 12510, 544, 51458, 51458, 1412, 307, 4961, 420, 406, 13, 51596, 51596, 18785, 322, 527, 6713, 5215, 294, 264, 1365, 321, 445, 1437, 807, 11, 309, 1542, 411, 544, 16950, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11730555927052218, "compression_ratio": 1.6311787072243347, "no_speech_prob": 1.4367203675647033e-06}, {"id": 80, "seek": 37820, "start": 400.08, "end": 402.84, "text": " data is helpful or not.", "tokens": [50364, 400, 341, 486, 1884, 10249, 337, 437, 1062, 312, 4420, 281, 853, 958, 13, 50648, 50648, 400, 2171, 309, 393, 611, 980, 291, 300, 1629, 3467, 295, 13603, 366, 31868, 5892, 11, 300, 50970, 50970, 436, 3212, 380, 3163, 382, 709, 295, 428, 565, 281, 853, 281, 3191, 13, 51164, 51164, 400, 370, 12678, 281, 341, 1329, 11, 257, 12577, 12, 34033, 719, 5215, 820, 980, 291, 498, 12510, 544, 51458, 51458, 1412, 307, 4961, 420, 406, 13, 51596, 51596, 18785, 322, 527, 6713, 5215, 294, 264, 1365, 321, 445, 1437, 807, 11, 309, 1542, 411, 544, 16950, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11730555927052218, "compression_ratio": 1.6311787072243347, "no_speech_prob": 1.4367203675647033e-06}, {"id": 81, "seek": 37820, "start": 402.84, "end": 407.03999999999996, "text": " Based on our error analysis in the example we just went through, it looks like more sophisticated", "tokens": [50364, 400, 341, 486, 1884, 10249, 337, 437, 1062, 312, 4420, 281, 853, 958, 13, 50648, 50648, 400, 2171, 309, 393, 611, 980, 291, 300, 1629, 3467, 295, 13603, 366, 31868, 5892, 11, 300, 50970, 50970, 436, 3212, 380, 3163, 382, 709, 295, 428, 565, 281, 853, 281, 3191, 13, 51164, 51164, 400, 370, 12678, 281, 341, 1329, 11, 257, 12577, 12, 34033, 719, 5215, 820, 980, 291, 498, 12510, 544, 51458, 51458, 1412, 307, 4961, 420, 406, 13, 51596, 51596, 18785, 322, 527, 6713, 5215, 294, 264, 1365, 321, 445, 1437, 807, 11, 309, 1542, 411, 544, 16950, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11730555927052218, "compression_ratio": 1.6311787072243347, "no_speech_prob": 1.4367203675647033e-06}, {"id": 82, "seek": 40704, "start": 407.04, "end": 410.36, "text": " email features could help, but only a bit.", "tokens": [50364, 3796, 4122, 727, 854, 11, 457, 787, 257, 857, 13, 50530, 50530, 13813, 544, 16950, 4122, 281, 5531, 903, 289, 3799, 24028, 420, 903, 3807, 12524, 727, 854, 50764, 50764, 257, 688, 13, 50814, 50814, 400, 341, 40237, 1713, 49241, 1109, 576, 406, 854, 6217, 382, 709, 13, 51030, 51030, 407, 294, 2674, 11, 286, 600, 1352, 1293, 264, 12577, 12, 34033, 719, 27897, 382, 731, 382, 9792, 484, 341, 1254, 51268, 51268, 295, 6713, 5215, 281, 312, 534, 4961, 281, 17732, 420, 281, 17990, 597, 2962, 281, 51582, 51582, 264, 2316, 366, 544, 20257, 281, 853, 484, 958, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1465717737491314, "compression_ratio": 1.6536964980544746, "no_speech_prob": 1.5534528756688815e-06}, {"id": 83, "seek": 40704, "start": 410.36, "end": 415.04, "text": " Whereas more sophisticated features to detect pharmas spam or phishing emails could help", "tokens": [50364, 3796, 4122, 727, 854, 11, 457, 787, 257, 857, 13, 50530, 50530, 13813, 544, 16950, 4122, 281, 5531, 903, 289, 3799, 24028, 420, 903, 3807, 12524, 727, 854, 50764, 50764, 257, 688, 13, 50814, 50814, 400, 341, 40237, 1713, 49241, 1109, 576, 406, 854, 6217, 382, 709, 13, 51030, 51030, 407, 294, 2674, 11, 286, 600, 1352, 1293, 264, 12577, 12, 34033, 719, 27897, 382, 731, 382, 9792, 484, 341, 1254, 51268, 51268, 295, 6713, 5215, 281, 312, 534, 4961, 281, 17732, 420, 281, 17990, 597, 2962, 281, 51582, 51582, 264, 2316, 366, 544, 20257, 281, 853, 484, 958, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1465717737491314, "compression_ratio": 1.6536964980544746, "no_speech_prob": 1.5534528756688815e-06}, {"id": 84, "seek": 40704, "start": 415.04, "end": 416.04, "text": " a lot.", "tokens": [50364, 3796, 4122, 727, 854, 11, 457, 787, 257, 857, 13, 50530, 50530, 13813, 544, 16950, 4122, 281, 5531, 903, 289, 3799, 24028, 420, 903, 3807, 12524, 727, 854, 50764, 50764, 257, 688, 13, 50814, 50814, 400, 341, 40237, 1713, 49241, 1109, 576, 406, 854, 6217, 382, 709, 13, 51030, 51030, 407, 294, 2674, 11, 286, 600, 1352, 1293, 264, 12577, 12, 34033, 719, 27897, 382, 731, 382, 9792, 484, 341, 1254, 51268, 51268, 295, 6713, 5215, 281, 312, 534, 4961, 281, 17732, 420, 281, 17990, 597, 2962, 281, 51582, 51582, 264, 2316, 366, 544, 20257, 281, 853, 484, 958, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1465717737491314, "compression_ratio": 1.6536964980544746, "no_speech_prob": 1.5534528756688815e-06}, {"id": 85, "seek": 40704, "start": 416.04, "end": 420.36, "text": " And this detecting misspellings would not help nearly as much.", "tokens": [50364, 3796, 4122, 727, 854, 11, 457, 787, 257, 857, 13, 50530, 50530, 13813, 544, 16950, 4122, 281, 5531, 903, 289, 3799, 24028, 420, 903, 3807, 12524, 727, 854, 50764, 50764, 257, 688, 13, 50814, 50814, 400, 341, 40237, 1713, 49241, 1109, 576, 406, 854, 6217, 382, 709, 13, 51030, 51030, 407, 294, 2674, 11, 286, 600, 1352, 1293, 264, 12577, 12, 34033, 719, 27897, 382, 731, 382, 9792, 484, 341, 1254, 51268, 51268, 295, 6713, 5215, 281, 312, 534, 4961, 281, 17732, 420, 281, 17990, 597, 2962, 281, 51582, 51582, 264, 2316, 366, 544, 20257, 281, 853, 484, 958, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1465717737491314, "compression_ratio": 1.6536964980544746, "no_speech_prob": 1.5534528756688815e-06}, {"id": 86, "seek": 40704, "start": 420.36, "end": 425.12, "text": " So in general, I've found both the bias-variance diagnostic as well as carrying out this form", "tokens": [50364, 3796, 4122, 727, 854, 11, 457, 787, 257, 857, 13, 50530, 50530, 13813, 544, 16950, 4122, 281, 5531, 903, 289, 3799, 24028, 420, 903, 3807, 12524, 727, 854, 50764, 50764, 257, 688, 13, 50814, 50814, 400, 341, 40237, 1713, 49241, 1109, 576, 406, 854, 6217, 382, 709, 13, 51030, 51030, 407, 294, 2674, 11, 286, 600, 1352, 1293, 264, 12577, 12, 34033, 719, 27897, 382, 731, 382, 9792, 484, 341, 1254, 51268, 51268, 295, 6713, 5215, 281, 312, 534, 4961, 281, 17732, 420, 281, 17990, 597, 2962, 281, 51582, 51582, 264, 2316, 366, 544, 20257, 281, 853, 484, 958, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1465717737491314, "compression_ratio": 1.6536964980544746, "no_speech_prob": 1.5534528756688815e-06}, {"id": 87, "seek": 40704, "start": 425.12, "end": 431.40000000000003, "text": " of error analysis to be really helpful to screening or to deciding which changes to", "tokens": [50364, 3796, 4122, 727, 854, 11, 457, 787, 257, 857, 13, 50530, 50530, 13813, 544, 16950, 4122, 281, 5531, 903, 289, 3799, 24028, 420, 903, 3807, 12524, 727, 854, 50764, 50764, 257, 688, 13, 50814, 50814, 400, 341, 40237, 1713, 49241, 1109, 576, 406, 854, 6217, 382, 709, 13, 51030, 51030, 407, 294, 2674, 11, 286, 600, 1352, 1293, 264, 12577, 12, 34033, 719, 27897, 382, 731, 382, 9792, 484, 341, 1254, 51268, 51268, 295, 6713, 5215, 281, 312, 534, 4961, 281, 17732, 420, 281, 17990, 597, 2962, 281, 51582, 51582, 264, 2316, 366, 544, 20257, 281, 853, 484, 958, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1465717737491314, "compression_ratio": 1.6536964980544746, "no_speech_prob": 1.5534528756688815e-06}, {"id": 88, "seek": 40704, "start": 431.40000000000003, "end": 434.40000000000003, "text": " the model are more promising to try out next.", "tokens": [50364, 3796, 4122, 727, 854, 11, 457, 787, 257, 857, 13, 50530, 50530, 13813, 544, 16950, 4122, 281, 5531, 903, 289, 3799, 24028, 420, 903, 3807, 12524, 727, 854, 50764, 50764, 257, 688, 13, 50814, 50814, 400, 341, 40237, 1713, 49241, 1109, 576, 406, 854, 6217, 382, 709, 13, 51030, 51030, 407, 294, 2674, 11, 286, 600, 1352, 1293, 264, 12577, 12, 34033, 719, 27897, 382, 731, 382, 9792, 484, 341, 1254, 51268, 51268, 295, 6713, 5215, 281, 312, 534, 4961, 281, 17732, 420, 281, 17990, 597, 2962, 281, 51582, 51582, 264, 2316, 366, 544, 20257, 281, 853, 484, 958, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.1465717737491314, "compression_ratio": 1.6536964980544746, "no_speech_prob": 1.5534528756688815e-06}, {"id": 89, "seek": 43440, "start": 434.4, "end": 440.32, "text": " Now one limitation of error analysis is that it's much easier to do for problems that humans", "tokens": [50364, 823, 472, 27432, 295, 6713, 5215, 307, 300, 309, 311, 709, 3571, 281, 360, 337, 2740, 300, 6255, 50660, 50660, 366, 665, 412, 13, 50710, 50710, 407, 291, 393, 574, 412, 364, 3796, 293, 584, 11, 291, 519, 309, 311, 257, 24028, 3796, 11, 983, 630, 264, 9284, 483, 50942, 50942, 309, 2085, 30, 50992, 50992, 3300, 2874, 5215, 393, 312, 257, 857, 6081, 337, 9608, 300, 754, 6255, 3212, 380, 665, 412, 13, 51204, 51204, 1171, 1365, 11, 498, 291, 434, 1382, 281, 6069, 437, 10342, 1580, 486, 2052, 322, 322, 257, 3144, 11, 731, 11, 51440, 51440, 286, 393, 380, 6069, 437, 1580, 486, 2052, 322, 11, 370, 6713, 5215, 456, 767, 12258, 281, 51642, 51642, 312, 544, 2252, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.11827547588045635, "compression_ratio": 1.740072202166065, "no_speech_prob": 4.338594195019141e-08}, {"id": 90, "seek": 43440, "start": 440.32, "end": 441.32, "text": " are good at.", "tokens": [50364, 823, 472, 27432, 295, 6713, 5215, 307, 300, 309, 311, 709, 3571, 281, 360, 337, 2740, 300, 6255, 50660, 50660, 366, 665, 412, 13, 50710, 50710, 407, 291, 393, 574, 412, 364, 3796, 293, 584, 11, 291, 519, 309, 311, 257, 24028, 3796, 11, 983, 630, 264, 9284, 483, 50942, 50942, 309, 2085, 30, 50992, 50992, 3300, 2874, 5215, 393, 312, 257, 857, 6081, 337, 9608, 300, 754, 6255, 3212, 380, 665, 412, 13, 51204, 51204, 1171, 1365, 11, 498, 291, 434, 1382, 281, 6069, 437, 10342, 1580, 486, 2052, 322, 322, 257, 3144, 11, 731, 11, 51440, 51440, 286, 393, 380, 6069, 437, 1580, 486, 2052, 322, 11, 370, 6713, 5215, 456, 767, 12258, 281, 51642, 51642, 312, 544, 2252, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.11827547588045635, "compression_ratio": 1.740072202166065, "no_speech_prob": 4.338594195019141e-08}, {"id": 91, "seek": 43440, "start": 441.32, "end": 445.96, "text": " So you can look at an email and say, you think it's a spam email, why did the algorithm get", "tokens": [50364, 823, 472, 27432, 295, 6713, 5215, 307, 300, 309, 311, 709, 3571, 281, 360, 337, 2740, 300, 6255, 50660, 50660, 366, 665, 412, 13, 50710, 50710, 407, 291, 393, 574, 412, 364, 3796, 293, 584, 11, 291, 519, 309, 311, 257, 24028, 3796, 11, 983, 630, 264, 9284, 483, 50942, 50942, 309, 2085, 30, 50992, 50992, 3300, 2874, 5215, 393, 312, 257, 857, 6081, 337, 9608, 300, 754, 6255, 3212, 380, 665, 412, 13, 51204, 51204, 1171, 1365, 11, 498, 291, 434, 1382, 281, 6069, 437, 10342, 1580, 486, 2052, 322, 322, 257, 3144, 11, 731, 11, 51440, 51440, 286, 393, 380, 6069, 437, 1580, 486, 2052, 322, 11, 370, 6713, 5215, 456, 767, 12258, 281, 51642, 51642, 312, 544, 2252, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.11827547588045635, "compression_ratio": 1.740072202166065, "no_speech_prob": 4.338594195019141e-08}, {"id": 92, "seek": 43440, "start": 445.96, "end": 446.96, "text": " it wrong?", "tokens": [50364, 823, 472, 27432, 295, 6713, 5215, 307, 300, 309, 311, 709, 3571, 281, 360, 337, 2740, 300, 6255, 50660, 50660, 366, 665, 412, 13, 50710, 50710, 407, 291, 393, 574, 412, 364, 3796, 293, 584, 11, 291, 519, 309, 311, 257, 24028, 3796, 11, 983, 630, 264, 9284, 483, 50942, 50942, 309, 2085, 30, 50992, 50992, 3300, 2874, 5215, 393, 312, 257, 857, 6081, 337, 9608, 300, 754, 6255, 3212, 380, 665, 412, 13, 51204, 51204, 1171, 1365, 11, 498, 291, 434, 1382, 281, 6069, 437, 10342, 1580, 486, 2052, 322, 322, 257, 3144, 11, 731, 11, 51440, 51440, 286, 393, 380, 6069, 437, 1580, 486, 2052, 322, 11, 370, 6713, 5215, 456, 767, 12258, 281, 51642, 51642, 312, 544, 2252, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.11827547588045635, "compression_ratio": 1.740072202166065, "no_speech_prob": 4.338594195019141e-08}, {"id": 93, "seek": 43440, "start": 446.96, "end": 451.2, "text": " Error analysis can be a bit harder for tasks that even humans aren't good at.", "tokens": [50364, 823, 472, 27432, 295, 6713, 5215, 307, 300, 309, 311, 709, 3571, 281, 360, 337, 2740, 300, 6255, 50660, 50660, 366, 665, 412, 13, 50710, 50710, 407, 291, 393, 574, 412, 364, 3796, 293, 584, 11, 291, 519, 309, 311, 257, 24028, 3796, 11, 983, 630, 264, 9284, 483, 50942, 50942, 309, 2085, 30, 50992, 50992, 3300, 2874, 5215, 393, 312, 257, 857, 6081, 337, 9608, 300, 754, 6255, 3212, 380, 665, 412, 13, 51204, 51204, 1171, 1365, 11, 498, 291, 434, 1382, 281, 6069, 437, 10342, 1580, 486, 2052, 322, 322, 257, 3144, 11, 731, 11, 51440, 51440, 286, 393, 380, 6069, 437, 1580, 486, 2052, 322, 11, 370, 6713, 5215, 456, 767, 12258, 281, 51642, 51642, 312, 544, 2252, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.11827547588045635, "compression_ratio": 1.740072202166065, "no_speech_prob": 4.338594195019141e-08}, {"id": 94, "seek": 43440, "start": 451.2, "end": 455.91999999999996, "text": " For example, if you're trying to predict what ads someone will click on on a website, well,", "tokens": [50364, 823, 472, 27432, 295, 6713, 5215, 307, 300, 309, 311, 709, 3571, 281, 360, 337, 2740, 300, 6255, 50660, 50660, 366, 665, 412, 13, 50710, 50710, 407, 291, 393, 574, 412, 364, 3796, 293, 584, 11, 291, 519, 309, 311, 257, 24028, 3796, 11, 983, 630, 264, 9284, 483, 50942, 50942, 309, 2085, 30, 50992, 50992, 3300, 2874, 5215, 393, 312, 257, 857, 6081, 337, 9608, 300, 754, 6255, 3212, 380, 665, 412, 13, 51204, 51204, 1171, 1365, 11, 498, 291, 434, 1382, 281, 6069, 437, 10342, 1580, 486, 2052, 322, 322, 257, 3144, 11, 731, 11, 51440, 51440, 286, 393, 380, 6069, 437, 1580, 486, 2052, 322, 11, 370, 6713, 5215, 456, 767, 12258, 281, 51642, 51642, 312, 544, 2252, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.11827547588045635, "compression_ratio": 1.740072202166065, "no_speech_prob": 4.338594195019141e-08}, {"id": 95, "seek": 43440, "start": 455.91999999999996, "end": 459.96, "text": " I can't predict what someone will click on, so error analysis there actually tends to", "tokens": [50364, 823, 472, 27432, 295, 6713, 5215, 307, 300, 309, 311, 709, 3571, 281, 360, 337, 2740, 300, 6255, 50660, 50660, 366, 665, 412, 13, 50710, 50710, 407, 291, 393, 574, 412, 364, 3796, 293, 584, 11, 291, 519, 309, 311, 257, 24028, 3796, 11, 983, 630, 264, 9284, 483, 50942, 50942, 309, 2085, 30, 50992, 50992, 3300, 2874, 5215, 393, 312, 257, 857, 6081, 337, 9608, 300, 754, 6255, 3212, 380, 665, 412, 13, 51204, 51204, 1171, 1365, 11, 498, 291, 434, 1382, 281, 6069, 437, 10342, 1580, 486, 2052, 322, 322, 257, 3144, 11, 731, 11, 51440, 51440, 286, 393, 380, 6069, 437, 1580, 486, 2052, 322, 11, 370, 6713, 5215, 456, 767, 12258, 281, 51642, 51642, 312, 544, 2252, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.11827547588045635, "compression_ratio": 1.740072202166065, "no_speech_prob": 4.338594195019141e-08}, {"id": 96, "seek": 43440, "start": 459.96, "end": 461.5, "text": " be more difficult.", "tokens": [50364, 823, 472, 27432, 295, 6713, 5215, 307, 300, 309, 311, 709, 3571, 281, 360, 337, 2740, 300, 6255, 50660, 50660, 366, 665, 412, 13, 50710, 50710, 407, 291, 393, 574, 412, 364, 3796, 293, 584, 11, 291, 519, 309, 311, 257, 24028, 3796, 11, 983, 630, 264, 9284, 483, 50942, 50942, 309, 2085, 30, 50992, 50992, 3300, 2874, 5215, 393, 312, 257, 857, 6081, 337, 9608, 300, 754, 6255, 3212, 380, 665, 412, 13, 51204, 51204, 1171, 1365, 11, 498, 291, 434, 1382, 281, 6069, 437, 10342, 1580, 486, 2052, 322, 322, 257, 3144, 11, 731, 11, 51440, 51440, 286, 393, 380, 6069, 437, 1580, 486, 2052, 322, 11, 370, 6713, 5215, 456, 767, 12258, 281, 51642, 51642, 312, 544, 2252, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.11827547588045635, "compression_ratio": 1.740072202166065, "no_speech_prob": 4.338594195019141e-08}, {"id": 97, "seek": 46150, "start": 461.5, "end": 467.0, "text": " But when you apply error analysis to problems that you can, it can be extremely helpful", "tokens": [50364, 583, 562, 291, 3079, 6713, 5215, 281, 2740, 300, 291, 393, 11, 309, 393, 312, 4664, 4961, 50639, 50639, 337, 8416, 3202, 322, 264, 544, 20257, 721, 281, 853, 13, 50807, 50807, 400, 300, 294, 1261, 393, 3612, 3155, 291, 2493, 295, 5911, 6773, 1832, 589, 13, 51079, 51079, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 9192, 7731, 666, 264, 1154, 295, 5127, 1412, 13, 51401, 51401, 1133, 291, 3847, 257, 2539, 9284, 11, 2171, 291, 4536, 456, 311, 1090, 21977, 293, 291, 528, 51620, 51620, 281, 483, 544, 1412, 337, 309, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10852442847357856, "compression_ratio": 1.6171875, "no_speech_prob": 2.406030489510158e-06}, {"id": 98, "seek": 46150, "start": 467.0, "end": 470.36, "text": " for focusing attention on the more promising things to try.", "tokens": [50364, 583, 562, 291, 3079, 6713, 5215, 281, 2740, 300, 291, 393, 11, 309, 393, 312, 4664, 4961, 50639, 50639, 337, 8416, 3202, 322, 264, 544, 20257, 721, 281, 853, 13, 50807, 50807, 400, 300, 294, 1261, 393, 3612, 3155, 291, 2493, 295, 5911, 6773, 1832, 589, 13, 51079, 51079, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 9192, 7731, 666, 264, 1154, 295, 5127, 1412, 13, 51401, 51401, 1133, 291, 3847, 257, 2539, 9284, 11, 2171, 291, 4536, 456, 311, 1090, 21977, 293, 291, 528, 51620, 51620, 281, 483, 544, 1412, 337, 309, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10852442847357856, "compression_ratio": 1.6171875, "no_speech_prob": 2.406030489510158e-06}, {"id": 99, "seek": 46150, "start": 470.36, "end": 475.8, "text": " And that in turn can easily save you months of otherwise fruitless work.", "tokens": [50364, 583, 562, 291, 3079, 6713, 5215, 281, 2740, 300, 291, 393, 11, 309, 393, 312, 4664, 4961, 50639, 50639, 337, 8416, 3202, 322, 264, 544, 20257, 721, 281, 853, 13, 50807, 50807, 400, 300, 294, 1261, 393, 3612, 3155, 291, 2493, 295, 5911, 6773, 1832, 589, 13, 51079, 51079, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 9192, 7731, 666, 264, 1154, 295, 5127, 1412, 13, 51401, 51401, 1133, 291, 3847, 257, 2539, 9284, 11, 2171, 291, 4536, 456, 311, 1090, 21977, 293, 291, 528, 51620, 51620, 281, 483, 544, 1412, 337, 309, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10852442847357856, "compression_ratio": 1.6171875, "no_speech_prob": 2.406030489510158e-06}, {"id": 100, "seek": 46150, "start": 475.8, "end": 482.24, "text": " In the next video, I'd like to dive deeper into the problem of adding data.", "tokens": [50364, 583, 562, 291, 3079, 6713, 5215, 281, 2740, 300, 291, 393, 11, 309, 393, 312, 4664, 4961, 50639, 50639, 337, 8416, 3202, 322, 264, 544, 20257, 721, 281, 853, 13, 50807, 50807, 400, 300, 294, 1261, 393, 3612, 3155, 291, 2493, 295, 5911, 6773, 1832, 589, 13, 51079, 51079, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 9192, 7731, 666, 264, 1154, 295, 5127, 1412, 13, 51401, 51401, 1133, 291, 3847, 257, 2539, 9284, 11, 2171, 291, 4536, 456, 311, 1090, 21977, 293, 291, 528, 51620, 51620, 281, 483, 544, 1412, 337, 309, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10852442847357856, "compression_ratio": 1.6171875, "no_speech_prob": 2.406030489510158e-06}, {"id": 101, "seek": 46150, "start": 482.24, "end": 486.62, "text": " When you train a learning algorithm, sometimes you decide there's high variance and you want", "tokens": [50364, 583, 562, 291, 3079, 6713, 5215, 281, 2740, 300, 291, 393, 11, 309, 393, 312, 4664, 4961, 50639, 50639, 337, 8416, 3202, 322, 264, 544, 20257, 721, 281, 853, 13, 50807, 50807, 400, 300, 294, 1261, 393, 3612, 3155, 291, 2493, 295, 5911, 6773, 1832, 589, 13, 51079, 51079, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 9192, 7731, 666, 264, 1154, 295, 5127, 1412, 13, 51401, 51401, 1133, 291, 3847, 257, 2539, 9284, 11, 2171, 291, 4536, 456, 311, 1090, 21977, 293, 291, 528, 51620, 51620, 281, 483, 544, 1412, 337, 309, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10852442847357856, "compression_ratio": 1.6171875, "no_speech_prob": 2.406030489510158e-06}, {"id": 102, "seek": 46150, "start": 486.62, "end": 488.82, "text": " to get more data for it.", "tokens": [50364, 583, 562, 291, 3079, 6713, 5215, 281, 2740, 300, 291, 393, 11, 309, 393, 312, 4664, 4961, 50639, 50639, 337, 8416, 3202, 322, 264, 544, 20257, 721, 281, 853, 13, 50807, 50807, 400, 300, 294, 1261, 393, 3612, 3155, 291, 2493, 295, 5911, 6773, 1832, 589, 13, 51079, 51079, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 9192, 7731, 666, 264, 1154, 295, 5127, 1412, 13, 51401, 51401, 1133, 291, 3847, 257, 2539, 9284, 11, 2171, 291, 4536, 456, 311, 1090, 21977, 293, 291, 528, 51620, 51620, 281, 483, 544, 1412, 337, 309, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10852442847357856, "compression_ratio": 1.6171875, "no_speech_prob": 2.406030489510158e-06}, {"id": 103, "seek": 48882, "start": 488.82, "end": 493.44, "text": " And there's some techniques that can make how you add data much more efficient.", "tokens": [50364, 400, 456, 311, 512, 7512, 300, 393, 652, 577, 291, 909, 1412, 709, 544, 7148, 13, 50595, 50595, 407, 718, 311, 747, 257, 574, 412, 300, 370, 300, 4696, 291, 603, 312, 16297, 365, 512, 665, 2098, 281, 483, 50841, 50841, 544, 1412, 337, 428, 2539, 3861, 13, 50951], "temperature": 0.0, "avg_logprob": -0.11043562608606675, "compression_ratio": 1.4189189189189189, "no_speech_prob": 2.2929471015231684e-06}, {"id": 104, "seek": 48882, "start": 493.44, "end": 498.36, "text": " So let's take a look at that so that hopefully you'll be armed with some good ways to get", "tokens": [50364, 400, 456, 311, 512, 7512, 300, 393, 652, 577, 291, 909, 1412, 709, 544, 7148, 13, 50595, 50595, 407, 718, 311, 747, 257, 574, 412, 300, 370, 300, 4696, 291, 603, 312, 16297, 365, 512, 665, 2098, 281, 483, 50841, 50841, 544, 1412, 337, 428, 2539, 3861, 13, 50951], "temperature": 0.0, "avg_logprob": -0.11043562608606675, "compression_ratio": 1.4189189189189189, "no_speech_prob": 2.2929471015231684e-06}, {"id": 105, "seek": 49836, "start": 498.36, "end": 519.4, "text": " more data for your learning application.", "tokens": [50364, 544, 1412, 337, 428, 2539, 3861, 13, 51416], "temperature": 0.0, "avg_logprob": -0.5186984539031982, "compression_ratio": 0.8333333333333334, "no_speech_prob": 2.14483734453097e-05}], "language": "en", "video_id": "-EKKWG6CXRQ", "entity": "ML Specialization, Andrew Ng (2022)"}}