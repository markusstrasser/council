{"video_id": "nTlCqaL7fCY", "title": "01L \u2013 Gradient descent and the backpropagation algorithm", "description": "Course website: http://bit.ly/DLSP21-home\nPlaylist: http://bit.ly/DLSP21-YouTube\nSpeaker: Yann LeCun\n\nChapters\n00:00:00 \u2013 Supervised learning\n00:03:43 \u2013 Parametrised models\n00:07:23 \u2013 Block diagram\n00:08:55 \u2013 Loss function, average loss\n00:12:23 \u2013 Gradient descent\n00:30:47 \u2013 Traditional neural nets\n00:35:07 \u2013 Backprop through a non-linear function\n00:40:41 \u2013 Backprop through a weighted sum\n00:50:55 \u2013 PyTorch implementation\n00:57:18 \u2013 Backprop through a functional module\n01:05:08 \u2013 Backprop through a functional module\n01:12:15 \u2013 Backprop in practice\n01:33:15 \u2013 Learning representations\n01:42:14 \u2013 Shallow networks are universal approximators!\n01:47:25 \u2013 Multilayer architectures == compositional structure of data", "author": "Alfredo Canziani", "keywords": ["PyTorch", "NYU", "Yann LeCun", "Deep Learning", "neural networks"], "channel_url": "https://www.youtube.com/channel/UCupQLyNchb9-2Z5lmUOIijw", "length": 6664, "views": 33084, "publish_date": "11/02/2022", "timestamp": 1626134400, "entity": "Yann LeCun", "transcript": {"text": " So as you know, we're going to talk about deep learning, and we're going to jump right in. So much of practical applications of deep learning today, machine learning and AI in general, use a paradigm called supervised learning, which I'm sure most of you have heard of before. So this is the paradigm by which you train a machine by showing it examples of inputs and outputs. You want to build a machine to distinguish images of cars from airplanes. You show it an image of a car. If the machine says car, you don't do anything. If it says something else, you adjust the internal parameters of the system so that the output gets closer to the one you want. So imagine the target output is some vector of activities on a set of outputs. You want the vector coming out of the machine to get closer to the vector that is the desired output. And this works really well as long as you have lots of data. It works for speech recognition, image recognition, face recognition, generating captions, translation, all kinds of stuff. So this is, I would say, 95% of all applications of machine learning today. There are two other paradigms, one of which I will not talk about, one of which I will talk about a lot. So the two other paradigms are reinforcement learning, which I will not talk about. And there are other courses. There's a course by Larry Pinto about this that I encourage you to take. And a third paradigm is self-supervised learning or unsupervised learning. And we'll talk about this quite a lot in the following weeks. But for now, let's talk about supervised learning. Self-supervised learning, you could think of it as kind of a play on supervised learning. So the traditional model of pattern recognition, machine learning, and supervised learning, certainly going back to the late 50s or the 60s, is the idea by which you take a raw signal, let's say an image or an audio signal or a set of features representing an object, and then you turn it into a representation using a feature extractor, which in the past was engineered. And then you take that representation, which is generally in the form of a vector or a table of numbers or some kind of tensor, a multidimensional array, but sometimes could be a different type of representation. And you feed that to a trainable classifier. So this is where the learning takes part. So this is the classical model. And it's still popular. It's still used a lot. But basically, what deep learning has done is replace this sort of manual hand engineering of the feature extractor by a stack of trainable modules, if you want. So in deep learning, the main idea of deep learning and the only reason why it's called deep is that we stack a bunch of modules, each of which transforms the input a little bit into something that's going to slightly higher level of abstraction, if you want. And then we train the entire system end to end. So I represented those sort of pinkish modules to indicate the ones that are trainable. And the blue modules are the fixed ones, the hand engineered ones. So that's why deep learning is called deep. We stack multiple layers of trainable things. And we train it end to end. The idea for this goes back a long time. The practical methods for this go back to the mid to late 80s with the back propagation algorithm, is going to be the main subject of today's lecture, actually. But it took a long time for this idea to actually percolate and become the main tool that people use to build machine learning systems. It's only about 10 years old. So let's go through a few definitions. So we're going to deal with parameterized models. A parameterized model, or learning model, if you want, is a parameterized function, g of x and w, where x is the input and w is a set of parameters. I'm representing this here on the right with a particular symbolism where a function like this that produces a single output, think of the output as either a vector or a matrix or a tensor or perhaps even a scalar, but generally is multidimensional. It can actually be something else in a multidimensional array, but something that maybe like a sparse array representation or a graph with values on it. But for now, let's think of it just as a multidimensional array. So both the inputs and the outputs are multidimensional arrays, what people call tensors. It's not really the appropriate definition of tensor, but it's OK. And that function is parameterized by a set of parameters w. Those are the knobs that we're going to adjust during training, and they basically determine the input-output relationship between the input x and the predicted output y bar. So I'm not explicitly representing the wire that comes in with w. Here, I assume that w is somewhere inside of this module. Think of this as an object in object-oriented programming. So it's an instance of a class that you instantiated, and it's got a slot in it that represents the parameters. And there is a forward function, basically, that takes as argument the input and returns the output. OK? So a basic learning machine will have a cost function. And the cost function in supervised learning, but also in some other settings, will basically compute the discrepancy, distance, divergence, whatever you want to call it, between the desired output y, which is given to you from the training set, and the output produced by the system y bar. OK? So an example of this, a very simple example of a setting like this is linear regression. In linear regression, x is a vector composed of components x i's. w is also a vector, and the output is a scalar that is simply the dot product of x with w. So y bar now is a scalar, and what you compute is the square distance, the square difference, really, between y and y bar. If w is a matrix, then now y is a vector, and you compute the square norm of the difference between y and y bar. And that's basically linear regression. So learning will consist in finding the set of w's that minimize this particular cost function averaged over a training set. I'll come to this in a minute. But I want you to think right now about the fact that this g function may not be something particularly simple to compute. So it may not be just multiplying a vector by matrix. It may not be just carrying some sort of fixed computation with sort of a fixed number of steps. It could involve something complicated. It could involve minimizing a function with respect to some other variable that you don't know. It could involve a lot of iteration of some algorithm that converges towards a fixed point. So let's not restrict ourselves to g of x, w, that are simple things. It could be very complicated things. And we'll come to this in a few weeks. Right, so this is just to explain the notations that I will use during the course of this class. So we have observed input and desired output variables. Those are kind of grayish bubbles. Other variables that are produced by the system or internal to the system are those kind of empty circle variables. We have deterministic functions. So functions that are indicated by this sort of rounded shape. Here, they can take multiple inputs and multiple outputs. And each of those can be tensors or scalars or whatever. And they have implicit parameters that are attunable by training. And then we have cost functions. So cost functions are basically functions that take one or multiple inputs and output a scalar. But I'm not representing the output. It's implicit. So if you have a red square, it has an implicit output. And it's a scalar. And we interpret it as a cost or an energy function. So this symbolism is kind of similar to what people use in graphical models, if you've heard what a graphical model is, particularly the type of graphical model called a factor graph. So in a factor graph, you have those variable bubbles. And you have those factors, which are those square cost functions. You don't have this idea that you have deterministic functions in it, because graphical models don't care about the fact that you have functions in one direction or another. But here, we care about it. So we have this extra symbol. OK, so machine learning consists in basically finding the set of parameters, w, that minimize the cost function averaged over a training set. So a training set is a set of pairs, x, y, indexed by an index p. So we have p training samples. And little p is the index of the training sample. And our overall loss function that we're going to have to minimize is equal to the cost of the discrepancy between y and the output of our model, y bar, g of x, w, as I said earlier. So l is a value. c is a module. And l is a way of writing c of y, g of x, w, where that depends explicitly on x, y, and w. But it's the same thing, really. The overall loss function, which is this curly l, is the average of the per sample loss function over the entire training set. So compute l for the entire training set, divide by all the terms, divide by p. And that's the average. That's the loss. So now the name of the game is trying to find the minimum of that loss with respect to the parameters. This is an optimization problem. So symbolically, I can represent this entire graph as the thing on the right. This is rarely used in practice, but this is a way to visualize this. So think about each training sample as a identical copy of the replica, if you want, of the model and the cost function applied to a different training sample. And then there is an average operation that computes the loss. So everything you can write as a formula, you can probably write in terms of those graphs. This is going to be very useful, as we're going to see later. So supervised machine learning and a lot of other machine learning paradigms, as well, actually, can be viewed as function optimization and a very simple approach to optimizing a function, which means finding the set of parameters to a function that minimizes its value. Is gradient descent or gradient-based algorithms. So a gradient-based algorithm makes the assumption that a function is somewhat smooth and mostly differentiable. Doesn't have to be everywhere differentiable, but has to be continuous, has to be almost everywhere differentiable. And it has to be somewhat smooth, otherwise the local information of the slope doesn't tell you much about where the minimum is. So here's an example here depicted on the right. The lines that you see here, the pink lines, are the lines of equal cost. And this cost is quadratic. So it's basically a kind of paraboloid. And this is the trajectory of a method called stochastic gradient descent, which we'll talk about in a minute. So for stochastic gradient descent, the procedure is, you show an example, you run it through the machine, you compute the objective for that particular sample, and then you figure out by how much and how to modify each of the knobs in the machine, the w parameters, so that the objective function goes down by a little bit. You make that change, and then you go to the next sample. Let's be a little more formal. So gradient descent is this very basic algorithm here. You replace the value of w by its previous value minus a step size, eta here, multiplied by the gradient of the objective function with respect to the parameters. So what is a gradient? A gradient is a vector of the same size as the parameter vector. And for each component of the parameter vector, it tells you by how much the loss function l would increase if you increase the parameter by a tiny amount. It's a derivative, but it's a directional derivative. So let's say, among all the directions, you only look at w34. And let's imagine that you tweak w34 by a tiny amount. The loss function curly l is going to increase by a tiny amount. You divide the tiny amount by which l increased by the tiny amount that you modified this w34. And what you get is the gradient of the loss with respect to w34. If you do this for every single weight, you get the gradient of the loss function with respect to all the weights. And it's a vector which, for each component of the weight, gives you, or the parameter, gives you that quantity. So since Newton and Euler, it's been written as dl over dw, because it indicates the fact that there is this little twiddle. You can twiddle w by little. And there is a resulting twiddling of l. And if you divide those two twiddles, then they are infinitely small. You get the derivative. That's kind of standard notation in mathematics for a few hundred years. OK, so now the gradient is going to be a vector. And as indicated here on the top right, that vector is an arrow that points upwards along the line of larger slope. So if you are in a 2D surface, you have two w parameters. And the surface is represented here, some sort of quadratic ball here in this case. So it's a second degree polynomial in w1 and w0. Here on the right is the kind of a top down view of this, where the lines represent the lines of equal cost. The little arrows here represent the gradient at various locations. So you have a long arrow if the slope is steep, a short arrow if the slope is not steep, not large. At the bottom, it's 0. And it points towards the direction of highest slope. So imagine you are in a landscape, a mountainous landscape. And you are in a fog. And you want to go down the valley. You look around you. And you can tell the local slope of the landscape. You can't tell where the minimum is because you're in a fog. But you can tell the local slope. So you can figure out what is the direction of larger slope and then take a step. And that will take you upwards. Now you turn around 180 degrees, take a step in that direction. And that is going to take you downwards. And if you keep doing this and the landscape is convex, which means it has only one local minimum, this will eventually take you down to the valley and presumably to the village. Right, so that's gradient-based algorithms. They all differ by how you compute the gradient first and by what this eta step size parameter is. So in simple forms, eta is just a positive constant that sometimes is decreased as the system runs more, but most of the time not. But in more complex versions of gradient-based learning, eta is actually an entire matrix itself, generally a positive definite or semi-definite matrix. And so the direction adopted by those algorithms is not necessarily the steepest descent. It goes downwards, but it's not necessarily the steepest descent. And we can see why here. So in this diagram here that I'm showing, this is the trajectory that will be followed by gradient descent in this quadratic cost environment. And as you see, the trajectory is not straight. It's not straight because the system goes down by following the slope of steepest descent. And so it goes down the valley before finding the minimum of the valley, if you want. So if your cost function is a little squeezed in one direction, it will go down the ravine and then follow the ravine towards the bottom. In complex situations where you have things that are, the trajectory actually is being cut here, but when the weather function is highly irregular, this might even be more complicated. And then you might have to be smart about what you do here. OK, so stochastic gradient descent is universally used in deep learning. And this is a slight modification of the gradient steepest descent algorithm, where you don't compute the gradient of the entire objective function averaged over all the samples. But what you do is you take one sample and you compute the gradient of the objective function for that one sample with respect to the parameters, and you take a step. And you keep doing this. You pick another sample, compute the gradient of the objective function for that sample with respect to the way it's making an update. What is it called stochastic gradient? Stochastic is a fancy term for random, essentially. And it's called stochastic because the evaluation of the gradient you get on the basis of a single sample is a noisy estimate of the full gradient. The average of the gradients, because the gradient is a linear operation, the average of the gradients will be the gradient of the average. And so things work out. If you compute the gradient and you keep going, overall, the average trajectory will be the trajectory you would have followed by doing a full gradient. But in fact, the reason we're doing this is because it's much more efficient in terms of speed of convergence. So although the trajectory followed by stochastic gradient is very noisy, things can bounce around a lot. As you can see in the trajectory here at the bottom, the trajectory is very erratic. But in fact, it goes to the bottom faster. And it has other advantages that people are still writing papers on. The reason for that is that stochastic gradient exploits the redundancy between the samples. So although in a machine learning setting, the training samples have some similarities between them. If they don't, then basically the learning problem is impossible. So they necessarily do have some redundancy between them. And the faster you update the parameters, the more often you update them, the more you exploit this redundancy between those parameters. Now, in practice, what people do is they use mini-batches. So instead of computing the gradient on the basis of a single sample, you take a batch of samples, typically anywhere between, let's say, 30 and a few thousand. But smaller batches are better in most cases, actually. And you compute the average of the gradient over those samples. So you compute the average cost over those samples and compute the gradient of the average over those samples, and then make an update. The reason for doing this is not intrinsically an algorithmic reason. It's because it's a simple way of parallelizing stochastic gradient on parallel hardware, such as GPUs. So there's no good reason to do batching other than the fact that our hardware likes it. Question? So actually, for real complex deep learning problems, does the subjecting function have to be continuously differentiable? Well, it needs to be continuous, mostly. If it's non-continuous, you're going to get in trouble. It needs to be differentiable almost everywhere. But in fact, neural nets that most people use are actually not differentiable. And there's a lot of places where they're not differentiable. But they are continuous in the sense that they are functions that have kind of corners in them, if you want. They have kinks. And if you have a kink once in a while, it's not too much of a problem. So in that case, those quantities should not be called gradients. They should be called subgradients. So a subgradient is basically a generalization of the idea of derivative or gradient to functions that have kinks in them. So wherever you have a function that has a kink in it, any slope that is between the slope of one side and the slope of the other side is a valid subgradient. So when you are at the kink, you decide, well, the derivative is this, or it's that, or it's kind of somewhere in between. And you're fine. Most of the proof that apply to smooth functions in terms of minimization often apply also to non-smooth functions that basically are differentiable in most of the way. So then how do we ensure strict convexity? We do not ensure strict convexity. In fact, in deep learning systems, most deep learning systems, the function that we are optimizing is non-convex. In fact, this is one reason why it took so long for deep learning to become prominent. It's because a lot of people, particularly theoreticians, people who are theoretically minded, were very scared of the idea that you had to minimize a non-convex objective. And they say, this can't possibly work, because you can't prove anything about it. Turns out it does work. You can't prove anything about it, but it does work. And so this is a situation, and it's an interesting thing to think about, a situation where the theoretical thinking basically limited what people could do in terms of engineering, because they couldn't prove things about it. But it turned out to be actually very powerful. OK? Like your colleague. We need to optimize non-convex functions. Like your colleague at the Bell Labs, who didn't like the non-MATHE. It was a whole debate within the machine learning community that lasted 20 years, basically. All right, so what about how doesn't SGD get stuck in local minima once it reaches them? It does. OK. So full gradient does get stuck in local minima, right? SGD is slightly less stuck in local minima, because it's noisy. It allows it sometimes to escape local minima. But the real reason why we're going to optimize non-convex functions and local minima are not going to be such a huge problem is that there aren't that many local minima that are traps. OK? So we're going to build neural nets. And those neural nets are deep learning systems. And they're going to be built in such a way that the parameter space is such a high dimension that is going to be very hard for the system to actually create local minima for us. OK? So think about a picture where we have, in one dimension, a cost function that has one local minima and then a global minimum, right? OK? So it's a function like this, right? Mm-hmm. And we start from here. If we optimize using gradient descent, we're going to get stuck in that local minima. Now let's imagine that we parameterize this function now with two parameters. OK? So we're not looking at a one-dimensional function anymore. We're looking at a two-dimensional function. We have an extra parameter. This extra parameter will allow us to go around the mountain and go towards the valley, perhaps without having to climb the little hill in the middle. OK? So this is just an intuitive example to tell you that in very high dimensional spaces, you may not have as much of a local minimum problem as you have in the sort of intuitive picture of low dimensional spaces, right? So here, those pictures are in two dimensions. They are very misleading. We're going to be working with millions of dimensions. And some of the most recent deep learning systems have trillions of parameters. Yeah. So local minima is not going to be that much of a problem. We're going to have other problems, but not that one. So there is a trend in this hyper overparameterization, right? It seems like that more neurons we have, and the better these networks work somehow. That's right. So we're going to make those networks very large. And they're going to be overparameterized, which means they're going to have way more adjustable parameters than we would actually need, which means they're going to be able to learn the training set almost perfectly. And the big question is, how well are they going to work on a separate validation set or test set that is separate from the training set? Two more questions. How well are they going to work in a real situation where the distribution of samples may be different from what we trained it on? So that's the real question of machine learning, which I'm sure a lot of you are familiar with. Two more questions. Can we do? Yep. Yep. So how do we escape instead of southern points? Right. There are tons and tons of southern points in deep learning systems. A communitarily large number of southern points, as a matter of fact. I'll have a lecture on this, so I don't want to spend too long answering this. But yeah, there are southern points. The trick with southern points is you don't want to get too close to them, essentially. And the stochastic gradient helps a little bit with southern points. Some people have proposed explicit methods to stay away from southern points. But in practice, it doesn't seem to be that much of a problem, actually. Finally, how do you pick samples for stochastic gradient descent randomly? OK. There is lots of different methods for that. Yeah, the basic thing you should do is you have your training set. You shuffle the samples in a random order. And then you just pick them one at a time. And then you cycle through them. An alternative is once you get to the end, you reshuffle them and then cycle through them again. An alternative is you pick a random sample using a random number. Every time you pick a new sample, you pick them randomly. If you do batching, a good idea is to put in a batch samples that are maximally different from each other. So things that are, for example, different categories if you do classification. But most people just pick them randomly. But it's good to have samples that are maximally different, that are nearby either in a batch or during the process of training. And then there are all kinds of tricks that people use to emphasize difficult samples so that the boring, easy samples are not, you don't waste your time just seeing them over and over again. There's all kinds of tricks. But the simple one is, which most people use, you shuffle your samples and you run through them. A lot of people now use also data augmentation. So every sample is actually distorted by some process. For an image, you can distort the geometry a little bit. You change the colors. You add noise, et cetera. This is an artificial way of adding more samples than you actually have. And people do this randomly on the fly or they can precompute those transformations. So lots of tricks there as well. Last question, how do you pick the batch size? The best? The batch size. Oh, the batch size. That's determined by your hardware. So if you have a GPU, generally for reasonably sized networks, your batch size would be anywhere between 16 and 64 or something like that. For smaller networks, you might have to batch more to exploit your hardware better to have maximum usage of it. If you parallelize on multiple GPUs within a machine, you may have to have, so let's say you have eight GPUs, then it would be 8 times 32. So it's 256 or something. And then a lot of the big guys parallelize that over multiple machines, each of which has eight GPUs. Some of them have TPUs, whatever. And then you might have to parallelize over thousands of examples. This diminishing return in doing this, when you increase the size of the batch, you actually reduce the speed of convergence. You accelerate the calculation, but you reduce the speed of convergence. So at some point, it's not worth increasing your batch size. So if we are doing a classification problem with k classes, what's going to be our go-to batch size? So there are papers that say if your batch size is significantly larger than the number of categories, or let's say twice the number of categories, then you're probably wasting competition, essentially, going down convergence. So you're trying to train an image recognizer on ImageNet. If your batch size is larger than about 1,000, you're probably wasting time. OK, that's it. Thanks. I mean, you're wasting competition. You're not wasting time. OK, OK. OK, so let's talk about traditional neural nets. So a traditional neural net is a model, a particular type of parameterized function, which is built by stacking linear and nonlinear operations. Right, so here is a depiction of a traditional neural net here, in this case with two layers. But I'm not imagining there might be more layers here. So you have a bunch of inputs here on the left. Each input is multiplied by a weight, different weights, presumably. And the weighted sum of those inputs by those weights is computed here by what's called a unit or a neuron. People don't like using the word neuron in that context because there are incredibly simplified models of neurons in the brain. But that's the inspiration, really. OK, so one of those units just computes a weighted sum of its inputs using those weights. This unit computes a different weighted sum of the same inputs with different weights, and et cetera. So here we have three units here in the first layer. This is called a hidden layer, by the way, because it's neither an input nor an output. This is the input, and this is the output, and this is somewhere in the middle. So we compute those weighted sums, and then we pass those weighted sums individually through a nonlinear function. So here what I've shown is the ReLU function. So this is called rectified linear unit. This is the name that people have given it in the neural net lingo. In other contexts, this is called a half-wave rectifier if you're an engineer. It's called positive part if you are a mathematician. Basically, it's a function that is equal to the identity when its argument is positive, and it's equal to 0 if its argument is negative. So very simple graph. And then we stack a second layer of the same thing, the second stage. So again, a layer of linear operations where we compute weighted sums. And then we pass the results with nonlinearities. And we can stack many of those layers, and that's basically a traditional plain vanilla garden variety neural net. In this case, fully connected. So fully connected neural net means that every unit in one layer is connected to every unit in the next layer. And you have this well-organized layer architecture, if you want. Each of those weights are going to be the things that our learning algorithm is going to tune. And the big trick, the one trick, really, of deep learning is how we compute those gradients. OK, so if you want to write this, you can say the weighted sum number i. So you can give a number to each of the units in the network. So this unit with number i and the weighted sum s of i is simply the sum where j goes over the upstreams, the set of upstream units to i, which may be all the units in the previous layer or not. It could be just a subset. And then you compute the product of zj, which is the output of the unit number j, times wij, which is the weight that links unit j to unit i. And then after that, you take this si, which is the weighted sum, you pass it through the activation function, this ReLU, or whatever it is that you use. And that gives you zi, which is the activation for unit i. OK, simple notation. By changing the set of upstream units of every unit, by building a graph of interconnection, you can basically build any kind of network arrangement that you want. There is one constraint that we will lift in the subsequent lecture, which is that the graph has to be acyclic in the sense that it can't have loops. If you have loops, that means you can't organize the units in layers. You can't sort of number them in a way that you can compute them so that every time you want to compute a unit, you already have the state of the previous units. If there are loops, then you can do that, right? So for now, we're going to assume that the wij matrix, the w matrix, doesn't have loops. Represents a graph that doesn't have loops. That's what I should say. OK, so here's sort of an intuitive explanation of the backpropagation algorithm. So the backpropagation algorithm is the main technique that is used everywhere in deep learning to compute the gradient of a cost function, whatever it is, objective function, with respect to a variable inside of the network. This variable can be a state variable, like a z or an s, or it could be a parameter variable, like a w. And we're going to need to do both. So this is going to be an intuitive explanation. And then after that, there's going to be a more mathematical explanation, which is less intuitive, but perhaps actually easier to understand. But let me start with the intuition here. So let's say we have a big network. And inside of this big network, we have one of those little activation functions. In this case, it's a sigmoid function, but it doesn't matter what it is for now. This function takes an s and produces a z. We call this function h of s. So when we wiggle z, the cost is going to wiggle by some quantity. And if we divide the wiggling of z by the wiggling of c, by the wiggling of z that causes it, that gives us the partial derivative of c with respect to z. So this one term is a gradient of c with respect to all the z's in the network. And there's one component of that gradient, which is the partial derivative of the cost with respect to that single variable z inside the network. And that really indicates how much c would wiggle if we wiggled z by some amount. We divide the wiggling of c by the wiggling of z, and that gives us the partial derivative of c with respect to z. This is not how we're going to compute the gradient of c with respect to z, but this is a description of what it is conceptually, or intuitively, rather. So let's assume that we know this quantity. So we know the partial derivative of c with respect to z. So c with respect to z is this quantity here, dc over dz. So think of dz as the wiggling of z and dc as the wiggling of c. Divide one by the other, and you get the partial derivative of c with respect to z. What we have here is what we have to apply is chain rule, the rule that tells us how to compute the derivative of a function composed of two individual functions that we apply one after the other. So remember, chain rule, if you have a function g, then you apply it to another function h, which is function of the parameter s, and you want the derivative of it. The derivative of that is equal to the derivative of g at point h of s multiplied by the derivative of h at point s. That's chain rule. You learned that a few years ago, hopefully. Now, if I want to write this in terms of partial derivative, it's the same thing. Partial derivative is just a derivative just with respect to one single variable. So I would write this something like this, dc over ds. So c really is the result of applying this h function to s and then applying some unknown g function to compute c, which is the rest of the network plus the cost. But I'm just going to call the gradient. I'm going to assume that this dc over dz is known. Someone gave it to me. So this is this variable here on the right. dc over dz is given to me. And I want to compute dc over ds. So what I need to do is write this. dc over ds equals dc over dz times dz over ds. And why is this identity true? It's because I can simplify by dz. It's as simple as this. So you have trivial algebra. You have dz at the denominator here, dz at the numerator here. Simplify, you get dc over ds. It's a very trivial, simple identity, which is basically just general applied to partial derivatives. Now, dz over ds, we know what it is. It's just h prime of s. It's just the derivative of the h function. So we have this formula, dc over ds equals dc over dz, which we assume is known, times h prime of s. What does that mean? That means that if we have this component of the gradient of the cost function with respect to z here, we multiply this by the derivative of the h function at point s, the same point s that we had here. And what we get now is the gradient of the cost function with respect to s. Now, here's the trick. If we had a chain of those h functions, we could keep propagating this gradient backwards by just multiplying by the derivative of all those h functions going backwards. And that's why it's called back propagation. So it's just a practical application of chain rule. And if you want to convince yourself of this, you can run through this idea of perturbation. If I twiddle s by some value, it's going to twiddle z by some value equal to ds times h prime of s, basically the slope of s. So dz equals h prime of s times ds. And then I'm going to have to multiply this by dc over dz. And so I rearrange the terms. And I get immediately that this formula, dc over ds equals dc over dz times h prime of s. So we had another element in our multilayer net, which was the linear sum. And there, it's just a little bit more complicated, but not really. So one particular variable z here, we would like to compute the partial derivative of our cost function with respect to that z. And we're going to assume that we know the partial derivative of s with respect to each of those s's, the weighted sums at the next layer that z is going into. So z only influences c through those s's. So presumably, by basically multiplying how each of those s's influence c, and then multiplying by how z influences each of the s's, and summing up, we're going to get the influence of z over c. And that's the basic idea. So here's what we're going to do. Let's say we perturb z by dz. This is going to perturb s0 by dz times w0. We multiply z by w0. So the derivative of this linear operation is the coefficient itself. So here, the perturbation, which is dz0, is equal to dz times w0. And now, in turn, this is going to modify c. And we're going to multiply this quantity by dc over ds0 to get the dc, if you want. Now, whenever we perturb z, it's not going to perturb just s0. It's also going to perturb s1 and s2. And to see the effect on c, we're going to have to sum up the effect of the perturbation on each of the s's, and then sum them up to see the overall effect on c. So this is written here on the left. The perturbation of c is equal to the perturbation of s multiplied by the partial derivative of c with respect to s plus the perturbation of s1 multiplied by the partial derivative of dc with respect to s1 plus the same thing for s2. So this is the fact that we need to take into account all the perturbations here that z may influence. And so I can just write down a very simple thing. Because dc of 0 is equal to w0 times dz, and ds of 2 is w2 times dz, I can plug this in there and just write dc over dz equal dc over ds0, which I assume is known, times w0 plus dc over ds1 times w1 plus dc over ds2 times w2. If I want to represent this operation graphically, this is shown on the right here. I have dc over ds0, dc over ds1, dc over ds2, which I assume are known, are given to me somehow. I compute dc over ds0 multiplied by w0, I multiply dc over ds1 by w1, dc over ds2 by w2. I sum them up, and that gives me dc over dz. It's just the formula here. So here's the cool trick about back propagation through a linear module that computes weighted sums. You take the same weights, and you still compute weighted sum with those weights, but you use the weights backwards. So whenever you had the unit that was sending its output to multiple outputs, to multiple units through a weight, you take the gradient of the cost with respect to all those weighted sums, and you compute their weighted sum backwards using the weights backwards to get the gradient with respect to the state of the unit at the bottom. And you can do this for all the units. So it's super simple. Now, if you were to write a program to do back prop for classical neural nets in Python, it would take like half a page. It's very, very simple. Here's one function to compute weighted sums going forward in the right order. Here's another function and applying the nonlinearity. Here's another function to compute weighted sums going backward and multiplying by the derivative of the nonlinearity at every step. It's incredibly simple. What's surprising is that it took so long for people to realize this was so useful, maybe because it was too simple. So it's useful to write this in matrix form. So really, the way you should think about a neural net of this type is each state inside the network, think of it as a vector. It could be a multidimensional array, but let's think of it just as a vector. A linear operation is just going to multiply this vector by matrix. And each row of the matrix contains all the weights that are used to compute a particular weighted sum for a particular unit. So multiply this by this matrix. So this dimension has to be equal to that dimension, which is not really well depicted here, actually. One sec. From the previous slide, you wrote ds0. What is s, differentiated with respect to? So there is a ds. What is ds, basically? ds0, you mean? Yeah. OK, ds0 is a perturbation of s0, an infinitely small perturbation of s0. Doesn't matter what it is. And what we're saying here is that if you have an infinitely small perturbation of s0, and you multiply this perturbation by the partial derivative of c with respect to s0, you get the perturbation of c, except that corresponds to this perturbation of s0. But we're not interested in just the perturbation of s0. We're also interested in the perturbation of s1 and s2. So the overall perturbation of c would be the sum of the perturbations of s0, s1, and s2 multiplied by the corresponding partial derivative of c with respect to each of them. It's a virtual thing, right? It's not an existing thing you're going to manipulate. Just imagine that there is some perturbation of s0 here. This is going to perturb c by some value. And that value is going to be the perturbation of s0 multiplied by the partial derivative of c with respect to s0. And then if you perturb s1 simultaneously, you're also going to cause a perturbation of c. If you perturb s2 simultaneously, you're also going to cause a perturbation of c. The overall perturbation of c will be the sum of those perturbations. And that is given by this expression here. Now, those infinitely small quantities, ds, dc, et cetera, think of them as numbers. You can do algebra with them. You can divide one by the other. You can do stuff like that. So now you say, what is ds0 equal to? If I tweak z by a quantity dz, it's going in turn to modify s0 by ds0. And what is the quantity by which s0 is going to be tweaked? If I tweak z by dz, because s is the result of computing the product of z by w0, then the perturbation is also going to be multiplied by w0. So the ds0 corresponding to a particular dz is going to be equal to dz times w0. And this is what's expressed here. ds0 equal w0 dz. Now, if I take this expression for ds0 and I insert it here in this formula, I get dc equal w0 times dz times dc over ds0 plus same thing for 1 plus same thing for 2. And I'm going to take the dz and pass it to the other side. I'm going to divide both sides by dz. So now I get dc over dz equal the dz doesn't appear anymore because it's been put underneath here. It's w0 times dc over ds0 plus w1 times dc over ds1, et cetera. It's just simple algebra. It's differential calculus, basically. So it's better to write this in matrix form. So really, when you're computing, if I go back a few slides, this is really kind of a matrix of all the weights that are upstream of the zj's. So you can align the zj as a vector. Maybe only the zj's that have non-zero terms in w, wij. And then you can write those w's as a matrix. And this is just a matrix vector product. So this is the way this would be written. You have a vector. You multiply it by a matrix. You get a new vector. Pass that through nonlinearities. Relu's, multiply that by a matrix, et cetera. So symbolically, you can write a simple neural net this way, where you have linear blocks, linear functional blocks, which basically take the previous state and multiply it by a matrix. So you have a state here, z1, multiplied by a matrix. You get w1, z1. And that gives you the vector of weighted sums, s2. Then you take that, pass it through the nonlinear functions, each component individually. And that gives you z2. So that's a three-layer neural net. First weight matrix, nonlinearity, second weight matrix, nonlinearity, third weight matrix. And this is the output. You have two hidden layers, three layers of weights. The reason for writing it this way is that this is symbolically the easiest way to understand really what kind of backprop does. And in fact, it corresponds also to the way we define neural nets and we run them on deep learning frameworks like PyTorch. So this is the object-oriented version of defining a neural net in PyTorch. We're going to use predefined class, which are the linear class that basically multiplies a vector by matrix. It also has biases, but let's not talk about this just now. And another class, which is the ReLU function, which takes a vector or a multidimensional array and applies the nonlinear function to every component separately. So this is a little piece of Python program that uses Torch, we import Torch. We make an image, which is 10 pixels by 20 pixels and three components for color. We compute the size of it, and we're going to plug a neural net where the number of inputs is the number of components of our image. So in this case, that would be 600 or so. And we're going to define a class. The class is going to define a neural net, and that's pretty much all we need to do here. So we define our network architecture. It's a subclass of NeuralNetModule, which is a pretty fine class. It's got a constructor here that will take the sizes of the internal layers that we want, the size of the input, the size of S1 and Z1, the size of S2 and Z2, and the size of S3. We call the parent class initializer. And then we just create three modules that are all linear modules. And we need to store them somewhere because they have internal parameters. So we're going to have three slots in our object, N0, N1, N2, module 0, module 1, module 2. And each of them is going to be an instance of the class NN.linear with two sizes, the input size and the output size. So the first module has input size D0, output size D1, et cetera. And those classes are, since there is a capital L, means it's an object. And inside there are parameters inside that item there. Right. Right, so for example, the relu doesn't have a capital because it doesn't have internal parameters. It's not a trainable module. It's just a function. Whereas those things with capitals, they have internal parameters, the weight matrices inside of them. So now we define a forward function, which basically computes the output from the input. And the first thing we do is we take the input thing, which may be a multidimensional array, and we flatten it. We flatten it using this idiomatic expression here in PyTorch. And then we apply the first module to x. We put the result in s1, which is a temporary variable, local variable. Then we apply the relu to s1, put the result in z, then apply the second layer, put the result in s2. Apply the relu again, put the result in s3, and then the last linear layer, put the result in s3, and return s3. And there is a typo. So the second line should have been s1. It's the self.m0 of z0, right? But z0 here. Yes, correct. Yeah, yeah, yeah. I know. Yeah, this is something that was going to be fixed, right? Which I didn't fix. I know. Yeah, this is z0. Thanks for reminding me of this. OK, but you'll see examples. I mean, I'll probably show you actual examples of this, and you'll be able to run them yourself. That's all you need to do. You don't need to write how you compute the back prop, how you propagate the gradients. You could write it, and it would be as simple as forward. You could write a backward function, and it would basically multiply by the matrices going backwards. But you don't need to do this, because PyTorch does this automatically for you. When you define the forward function, it knows what modules you've called in what order, what are the dependencies between the variables, and it will know how to generate the functions that compute the gradient backwards. So you don't need to worry about it. That's the magic of PyTorch, if you want. That's a bit the magic of deep learning, really. That's called automatic differentiation. And this is a particular form of automatic differentiation. There's another way to write functions in PyTorch that are kind of more functional. So you're not using modules with internal parameters. You're just calling functions one after the other. And PyTorch has a mechanism by which it can automatically compute the gradient of any function you define with respect to whatever parameters you want. Actually, these big guys with the capital L, like the nn.capital linear inside, is going to have a lowercase linear, which is the functional part, which is performing the matrix multiplication between the weight stored inside the object with a capital L and then the input. So every capital letter object will inside have the functional weight. So one can decide to use either the functional form by default or use this encapsulated version, which are more convenient to just use. Right. So in the end, you can create an instance of this class. You can create multiple instances, so you can create one here. Just call mynet and give it the size as you want. And then to apply this to a particular image, you just do how to equal model of image. That's as simple as that. So this is your first neural net. And it does all the back prop automatically. But you need to understand how backprop works. It's not because PyTorch does it for you that you can sort of forget about how you actually compute the gradient of a function, because it's inevitable that at some point, you're going to want to actually assemble a neural net with a module that does not pre-exist, and you're going to have to write your own backprop function. So to do this, you basically have, if you want to create a new module with some complex operation that does not pre-exist in PyTorch, then you do something like this. You define a class, but you write your own backward function, basically. OK, so let's get one step up in terms of abstraction and write this in sort of slightly more generic form, mathematical form, if you want. So let's say we have a cost function here, and we want to compute the gradient of this cost function with respect to a particular vector in the system, zf. It could be a parameter. It could be a state. It doesn't matter. Some states inside. And we have chain rule. And chain rule is nothing more than this that I explained earlier. dc over dzf is equal to dc over dzg, dzg over dzf. As long as c is only influenced by zf through zg, there is no other way for zf to influence c than to go through zg, then this formula is correct. And of course, the identity is trivial because it's just a simplification by this infinitesimal vector quantity dzg. So let's say zg is a vector of size dg by 1. So this means a column vector. And zf is a column vector of size df. This is, if we want to write the correct dimensions of this, we get something a little complicated. So first of all, this object here, dz over dzg over dzf. Well, let me start with this one. This one, dc over dzg, that's a gradient vector. dzg is a vector. dc over dzg is a gradient vector. And it's the same size as dzg. But by convention, we actually write it as a row vector. So this thing here is going to be a row vector whose size is the same size as dzg, but it's going to be horizontal instead of vertical. This object here is something more complicated. It's actually a matrix. Why is it a matrix? It's because it's the derivative of a vector with respect to another vector. So let's look at this diagram here on the right. We have a function g. It takes zf as an input, and it produces zg as an output. And if we want to capture the information about the derivative of that module, which is this quantity here, dzg over dzf, there's a lot of terms to capture because there is a lot of ways in which every single output, every component of dzg can be influenced by every component of zf. So for every pair of components, dzg and zf, there is a derivative term which indicates by how much dzg would be perturbed if I perturbed zf by a small infinitesimal quantity. We have that for every pair of components of dzg and zf. As a result, this is a matrix whose dimension is the number of rows is the size of dzg, and the number of columns is the size of zf. And each term in this matrix is one partial derivative term. So this whole matrix here, if I take the component ij, it's the partial derivative of the ith output of that module, the ith component of dzg with respect to the jth component of zf. So what we get here is a row vector is equal to a row vector multiplied by a matrix, and the sizes kind of work out so that they're compatible with each other. So what is backpropagation now? Backpropagation is this formula. It says if you have the gradient of some cost function with respect to some variable, and you know the dependency of this variable with respect to another variable, you multiply this gradient vector by that Jacobian matrix, and you get the gradient vector with respect to that second variable. So graphically here on the right, if I have the gradient of the cost with respect to dzg, which is dc over dzg, and I want to compute the gradient of c with respect to zf, which is dc over dzf, I only need to take that vector, which is a row vector, multiply it by the Jacobian matrix, dg over dzf, or dzg over dzf, and I get dc over dzf. OK? It's this formula. Someone is a bit objecting here. Isn't a summation missing here? Which summation? A summation of all the components of these partial multiplications. Here? Yeah. Well, this is a vector. This is a vector. This is a matrix. There is a lot of sums going on here, because when you compute the product of this vector with its matrix, you're going to have a lot of sums, right? Yep. So it's hidden, right? Yeah, the sums are hidden inside of this vector matrix product. You can take a specific example. Let's imagine that this g function is just a matrix multiplication. We just multiply by zf by matrix w. So we have a linear operation. The derivative of the Jacobian matrix of the multiplication by matrix is the transpose of that matrix. So what we're going to do here is take this vector, multiply it by the transpose of the w matrix, and what we get is that vector. OK? And it all makes sense, right? The sizes make sense. This matrix here is the transpose of the weight matrix, which, of course, had the reverse size. We pre-multiply it by the row vector of the gradient from the layer above, and we get the gradient with respect to the layer below. OK? So backpropagating through a linear module just means multiplying the transpose of the matrix used by that module. And it's just a generalized form of what I explained earlier, of propagating through the weights of a linear system. But it's less intuitive, right? OK, so we're going to be able to do backpropagation by computing gradients all the way through by propagating backwards. But this module really has two inputs. It has an input, which is zf, and the other one is wg, the weight matrix, the parameter vector that is used inside of this module. So there is a second Jacobian matrix, which is a Jacobian matrix of zg with respect to the terms of this weight parameter. OK? And to compute the gradient of the cost function with respect to those weight parameter, I need to multiply this gradient vector by the Jacobian matrix of that block with respect to its weight. And it's not the same as the Jacobian matrix with respect to the input. It's a different Jacobian matrix. I'll come back to this in a second. So to do backprop, again, if we have a vector of gradients of some cost with respect to a state, and we have a function that is a function of one or several variables, we multiply this gradient by the Jacobian matrix of this block with respect to each of these inputs. And that gives us the gradient with respect to each of the inputs. And that's going to be expressed here. So this is the backpropagation of states in a layerwise classical type neural net. dc over dzk, which is the state of layer k, is dc over zk plus 1, which is the gradient of the cost with respect to the layer above, times the Jacobian matrix of the state of layer k plus 1 with respect to the state of layer k. Right? Now we assume dc over dzk plus 1 is known. And we just need to multiply the Jacobian matrix of the function that links zk to zk plus 1. The function is used to compute zk plus 1 from zk. And this may be a function also of some parameters inside. But here, that's the matrix of partial derivatives of f, which is with output zk plus 1 with respect to each of the components of zk. So that's the first rule of backpropagation. And it's a recursive rule. So you can start from the top. You start initially with dc over dc, which is 1, which is why I have this 1 here on top. And then you just keep multiplying by the Jacobian matrix all the way down. And that backpropagates gradients. And now you get gradients with respect to all the states. You also want the gradients with respect to the weights, because that's what you need to do learning. So what you can write is the same chain rule. dc over dwk is equal to dc over dzk plus 1, which we assume is known, times dzk plus 1 over dwk. And you can write this as dc over dk plus 1. And the dependency between zk plus 1 and wk is the function zk applied to wk. So you can differentiate the output of the function zk with respect to wk. And that gives you another Jacobian matrix. And so with those two formulas, you can do backpropagation with just about anything. Really what goes on inside PyTorch and inside most of those frameworks, TensorFlow and Jackson, whatever, is something like this, where you have, so let's take a very simple diagram here, where you have an input, parameterized function that computes an output that goes to a cost function. And that cost function measures the discrepancy between the output of the system and the desired output. So you can write this function as c of g of w. I didn't put the x here, but just for clarity. And the derivative of this is, again, you apply chain rule, or you can write it with partial derivatives this way. And same for expand the dependency of the output with respect to the parameters as the Jacobian matrix of g with respect to w. If w is a scalar, then this is just a derivative, partial derivative. Now, you can express this as a compute graph. So you can say, how am I going to compute dc over dw? What I'm going to have to do is take the value 1, which is the derivative of c with respect to itself, basically, the loss with respect to itself. I'm going to multiply this by the derivative of the cost with respect to y bar. And that's going to give me dc over dy bar, obviously. This is the same as this, because I've just multiplied by 1. Then multiply this by the Jacobian matrix of g with respect to w, which is a derivative if w is a scalar. That output depends on x. And I get dc over dw. So this is a so-called compute graph. This is a way of organizing operations. This is a way of organizing operations to compute the gradient. And there is essentially an automatic way of transforming a compute graph of this type into a compute graph of this type that computes the gradient automatically. And this is the magic that happens in the automatic differentiation inside PyTorch and TensorFlow and other systems. Some systems are pretty smart about this in a sense that those functions can be fairly complicated. They can involve themselves computing derivatives and stuff. And they can involve dynamic computation, where the graph of computation depends on the data. And actually, PyTorch knows this properly. I'm not going to go through all the details of this, but this is kind of a way of reminding you what the dimensions of all those things are. So if y is a column vector size n, w is a column vector size n. Then this is a row vector size n. This is a row vector size m. And this is a geocommunic matrix of size n by n. And all of this works out. OK, so the way we're going to build neural nets, and I'll come back to this in a subsequent lecture, is that we are going to have at our disposal a large collection of basic modules, which we're going to be able to arrange in more or less complex graphs as a way to build the architecture of a learning system. So either we're going to write a class, or we're going to write a program that runs the forward pass. And this program is going to be composed of basic mathematical operations, addition, subtraction of tensors or multi-dimensional arrays, other types of scalar operations, or the application of one of the predefined complex parameterized functions, like a linear module, a ReLU, or things like that. And we have at our disposal a large library of such modules, which are things that people have come up with over the years that are basic modules that are used in a lot of applications. So the basic things that we've seen so far, I think, like ReLUs, there's other nonlinear functions, like sigmoids and variations of this. There's a large collection of them. And then we have cost functions, like squared error, cross entropy, hinge loss, ranking loss, and blah, blah, blah, which I'm not going to go through now, but we'll talk about this later. The nice thing about this formalism is that, as I said before, you can sort of compute graphs. You can construct a deep learning system by assembling those modules in any kind of arrangement you want, as long as there is no loops in the connection graph. So as long as you can come up with a partial order in those modules, that's a good thing. You can come up with a partial order in those modules that will ensure that they are computed in the proper way. But there is a way to handle loops, and that's called recurrent nets. We'll talk about this later. So here's a few practical tricks if you want to play with neural nets. And you're going to do that soon enough, perhaps even tomorrow. So these are a bit of the black art of deep learning, which is sort of a lot of it is implemented already in things like PyTorch if you use standard tools. But some of it is kind of more of the sort of oral culture, if you want, of the deep learning community. You can find this in papers, but it's a little difficult to find sometimes. So most neural nets use, we'll use as the main non-linearity, so this sort of half-wave rectifier. Hyperbolic tangent, which is a similar function, and logistic function, which is also a similar function, are used, but not as much, not nearly as much. You need to initialize the weights properly. So if you have a neural net and you initialize the weights to zero, it never takes off. It will never learn. The gradients will always be zero all the time. And the reason is because when you back propagate the gradient, you can actually see the gradients. So you can see that the gradients are always zero, but when you back propagate the gradient, you multiply by the transpose of the weight matrix. If that weight matrix is zero, your gradient is zero. So if you start with all the weights equal to zero, you never take off. And someone asked a question about saddle points before. Zero is a saddle point. And so if you start at this saddle point, you never get out of it. So you have to break the symmetry in the system. You have to initialize the weights to small random values. So you can initialize them, but it works fine if they're random. And the way you initialize is actually quite important. So there's all kinds of tricks to initialize things properly. One of the tricks was invented by my friend, Leong Bo-Tu, about 30 years ago, even more than that, actually, 34 years ago almost. Unfortunately now, it's called differently. It's called the Kaming trick, but it's the same. And it consists in initializing the weights in such a way that if a unit has many inputs, the weights are smaller than if it has few inputs. And the reason for this is that you want the weighted sum to roughly have some reasonable value. If the input variables have some reasonable value, let's say variance 1 or something like this, and you're computing a weighted sum of them, the size of the weighted sum is going to grow like the square root of the number of inputs. And so you want to set the weights to something like the inverse square root if you want the weighted sum to be about the same size as each of the inputs. So that's built into PyTorch. You can call this initialization procedure. What's the exact name of it, Alfredo? I can't remember. The one that is? The Kaming, Kaming, Kaminghe. Then there is the Xavier, and then there is also yours we have in PyTorch. Yeah. They're slightly different, but they kind of do the same more or less. Yeah, the Xavier-Gloireau version. Yeah. Yeah. Yeah, this one divides by the Fanin and Fanin. There's various loss functions. So I haven't talked yet about what the cross entropy loss is. But cross entropy loss is a particular cost that's used for classification. I'll probably talk about this next week, and I'll have some time at the end of this lecture. This is for classification. As I said, we use stochastic gradient descent on mini-batches. And mini-batches, only because the hardware that we have needs mini-batches to perform properly. If we had different hardware, we would use mini-batch size 1. As I said before, we need to shuffle the training samples. So if someone gives you a training set and puts all the examples of category 1, then all the examples of category 2, all the examples of category 3, et cetera, if you use stochastic gradient by keeping this order, it is not going to work. You have to shuffle the samples so that you basically get samples from all the categories within a small subset, if you want. There is an objection here for the stochastic gradient. Isn't Adam better? All right, OK. There is a lot of variance of stochastic gradient. There are all stochastic gradient methods. In fact, people in optimization said this should not be called stochastic gradient descent because it's not a descent algorithm, because stochastic gradient sometimes goes uphill because of the noise. So people who want to really be correct about this say it's stochastic gradient optimization, but not stochastic gradient descent. That's the first thing. Stochastic gradient optimization or stochastic gradient descent, SGD, is a special case of gradient-based optimization. And the specification of it says you have to have a step size eta, but nobody tells you how you said the step size eta. And nobody tells you that this step size is a scalar or a diagonal matrix or a full matrix. So there are variations of SGD in which eta is changed all the time for every sample or every batch. In SGD, most of the time, this eta is decreased according to a schedule. And there are a bunch of standard schedules in PyTorch that are implemented. In techniques like Atom, eta is actually a diagonal matrix. And that diagonal matrix, the term in the diagonal matrix are changed all the time. They're computed based on some estimate of the curvature of the cost function. There's a lot of methods to do this. They're all SGD-type methods. Atom is an SGD method with a special type of eta. So yeah, in the Optin package in Torch, there's a whole bunch of those methods. There's going to be a whole lecture on this, so don't worry about it, about optimization. Normalized input variables to zero mean and unit variance. So this is a very important point that this type of optimization method, gradient-based optimization methods, when you have weighted sums, linear operations, tends to be very sensitive to how the data is prepared. So if you have two variables that have very widely different variances, one of them varies between, let's say, minus 1 and plus 1. The other one varies between minus 100 and plus 100. The system will basically not pay attention to the one that varies between plus 1 and minus 1. We'll only pay attention to the big one. And this may be good or this may be bad. Furthermore, the learning rate, you're going to have to use the eta parameter, the set size, is going to have to be set to a relatively small value to prevent the weights that look at this highly variable input from diverging. The gradients are going to be very large, because the gradients basically are proportional to the size of the input, or even to the variance of the input. So if you don't want your system to diverge, you're going to have to tune down the learning rate if the input variance is large. If the input variables are all shifted, they're all between, let's say, 99 and 101 instead of minus 1 and 1, then again, it's very difficult for a gradient-based algorithm that uses weighted sums to figure out those things. Again, I'll talk about this more formally later. Right now, just remember the trick that you need to normalize your input. So basically, take every variable of your input, subtract the mean. You compute the mean over the training set of each variable. So let's say your training set is a set of images. The images are, let's say, 100 by 100 pixels. Let's say they're great scale, so you get 10,000 variables. And let's say you get a million samples. You're going to take each of those 10,000 variables, compute the mean of it over the training set, compute the standard deviation of it over the entire training set. And the samples you're going to show to your system are going to be a sample where you have subtracted the mean from each of the 10,000 pixels and divided the resulting values by the standard deviation that you computed. So now what you have is a bunch of variables that are all zero mean and all standard deviation equal to 1. And that makes your neural net happy. That makes your optimization algorithm happy, actually. We have actually a question. So you keep repeating SGD type methods, gradient-based methods. Because there are other types of methods? Yes. OK. So there is gradient-free methods. So a gradient-free method is a method where you do not assume that the function you're trying to optimize is differentiable or even continuous with respect to the parameters. For several reasons, perhaps it's a function that looks like a golf course, right? It's flat, and then maybe it's got steps. And it's difficult to, like the local gradient information, does not give you any information as to where you should go to find the minimum. It could be that the function is essentially discrete. It's not a function of continuous variables. It's a function of discrete variables. So for example, am I going to win this chess game? The variable you can manipulate is the position on the board. That's a discrete variable. So you can't compute a gradient of a score with respect to a position on the chess game. It's a discrete variable. Another example is the cost function is not something you can compute. You don't actually know the cost function. So for example, the only thing you can do is give an input to the cost function, and it tells you the cost. But you don't know the function. It's not a program on a computer. You can't back propagate gradient through it. A good example of this is the real world. The real world, you can think of it as a cost function. You learn to ride a bike, and you ride your bike, and at some point you fall. The real world does not give you a gradient of that cost function, which is how much you hurt with respect to your actions. The only thing you can do is try something else and see if you get the same result or not. So what do you do in that case? So basically now your cost function is a black box. So now you cannot propagate gradient to this black box. What you have to do is estimate the gradient by perturbing what you feed to that black box. So you try something, and that something would be a perturbation of your input to this black box. And you see what resulting perturbation occurs on the output of the black box, the cost. And now you can estimate whether this modification improved or made the result worse. So essentially this is like this optimization problem I was telling you about earlier. The gradient-based algorithm is like you are in the mountain, lost in the mountain in a fog. You can't see anything. But you can estimate the direction of steepest descent. You can just look around, and you can tell which is the direction of steepest descent. You just take a step in that direction. What if you can't see? So basically to estimate in which direction the function goes down, you have to actually take a step. So you take a step in one direction. Then you come back. Then you take a step in the other direction, come back. And then maybe you get an estimate for where the steepest descent is. So you can take a step for steepest descent. So this is estimating the gradient by perturbation instead of by analytic means of backpropagating gradients, computing Jacobians or whatever, partial derivatives. And then there is the second step of complexity. Let's imagine that the landscape you're in is basically flat everywhere, except once in a while, there is a step. So taking a small step in one direction will not give you any information about which direction you have to go to. So there you have to use other techniques. Taking bigger steps, working for a while, and seeing if you fall down a step or not or go up a step, maybe you can multiply yourself in 10,000 copies of yourself and then explore the surroundings. And then whenever someone says, oh, I find a hole, calls everyone to come there. So all those methods are called gradient-free optimization algorithms. Sometimes they're called 0th order method. Why 0th order? Because first order is when you can compute the derivative. 0th order is when you cannot compute the derivative. You can only compute the function or get a value for the function. And then you have second order methods that compute not just the first derivative, but also the second derivative. And they're also gradient-based because they need the first derivative as well. But they can accelerate the process by also computing the second derivative. And Adam is a very simplified form of second order method. It's not a second order method, but it has a hint of second order. Another hint of second order method is what's called conjugate gradient. There's another class of method called quasi-Newton methods, which are also using curvature information, if you want, to accelerate. Many of those are not actually practical for neural net training, but there are some forms that are. If you are interested in 0th order optimization, there is a library that is actually produced by, it's an open source library, which originated at Facebook Air Research in Paris by an author called Olivier Teteau. But it's really a community effort. There's a lot of contributors to it. It's called NeverGrad. And it implements a very large number of different optimization algorithms that do not assume that you have access to the gradient. There are genetic algorithms or evolutionary methods that are particle swarm optimization. There are perturbation methods. There's all kinds of tricks. I mean, there's a whole catalog of those things. And those sometimes are unavoidable. You have to use them because you don't know the cost function. So a very common situation where you have to use those things is reinforcement learning. So reinforcement learning is basically a situation where you tell the system, you don't tell the system the correct answer. You only tell the system whether the answer was good or bad. Basically, you give the value of the cost, but you don't tell the machine what the cost is. So the machine doesn't know what the cost function is. And so the machine cannot actually compute the gradient of the cost. And so it has to use something like a zero-thought method. So what you can do is you can compute a gradient with respect to the parameters of the overall cost function by perturbing the parameters. Or what you can do is compute the gradient of the cost function with respect to the output of your neural net using perturbation. And once you have this estimate, then you backpropagate the gradient through your network using regular backprop. So that's a combination of estimating the gradient through perturbation for the cost function because you don't know it and then backpropagating from there. This is basically the technique that was used by the deep mind people in the first deep Q learning type methods. Back to the normalization, do we normalize the entire data set or each batch? It's equivalent. So you normalize each sample. The variable you're computing is on the entire training set. So you're computing the standard deviation and the mean over the entire training set. In fact, most of the time, you don't even need to do it over the entire training set because mean and standard deviation converges pretty fast. But you do it over the entire training set. And what you get is a constant number, two constant numbers, a number that you subtract and a number that you should divide for each component of your input. It's a fixed preprocessing. For a given training set, you'll have a fixed mean and standard deviation vector. But maybe we can connect to the other tool, the other module, the batch normalization. OK, we haven't talked about that yet. I'm saying that we can perhaps extend this normalization bit to the both sides, the whole data set and the batch itself. OK, yes, yes. So again, there's going to be a whole lecture on this. But for the same reason, it's good to have variables, the input that are zero mean and unit variance. It's also good for the state variables inside the network to basically have zero mean and unit variance. And so people have come up with various ways of doing normalization of the variables inside the network so that they approach zero mean and unit variance. And there are many ways to do this. They have cute names like batch normalization, like layer normalization. And the idea goes back a very long time. Batch norm is kind of a more recent incarnation of it. Let's see, what was I? Scheduled to decrease the learning rate. Yeah, as it turns out, for reasons that are still not completely fully understood, you need to learn fast. Initially, you need a learning rate of a particular size. But to get good results in the end, you need to decrease the learning rate and let the system settle inside of minima. And that requires decreasing the learning rate. There's various semi-valid theoretical explanation for this. But experimentally, it's clear you need to do that. And again, there are schedules that are pre-programmed in PyTorch for this. Use a bit of L1 or L2 regularization on the weights or combination. Yeah, after you've trained your system for a few epochs, you might want to kind of prune it, eliminate the weights that are useless, make sure that the weights have their kind of minimum size. And what you do is you add a term in the cost function that basically shrinks the weights at every iteration. You might know what L2 and L1 regularization means if you've taken a class in machine learning for large decongression and stuff like that. It's very common. But L2 sometimes is called weight decay. So this, again, are pre-programmed in PyTorch. A trick that a lot of people use for large neural nets is a trick called dropout. Dropout is implemented as kind of a layer in PyTorch. And what this layer does is that it takes the state of a layer and it randomly picks a certain proportion of the units and basically sets them to zero. So you can think of it as a mask, a layer that applies a mask to an input. And the mask is randomly picked at every sample. And some proportion of the mask are set, the value in the mask are set to zero, some are set to one, and you multiply the input by the mask. So only a subset of the units are allowed to speak to the next layer, essentially. That's called dropout. And the reason for doing this is that it forces the unit to distribute the information about the input over multiple units instead of kind of squeezing everything into a small number. And it makes the system more robust. There's some theoretical arguments for why it does that. Experimentally, if you add this to a large network, you get better generalization error. You get better performance on the test set. It's not always necessary, but it helps. OK, there's lots of tricks, and I'll devote a lecture on this. So I'm not going to go through all of them right now. That requires explaining a bit more about optimizations. So really, what deep learning is about. Like, I told you everything about deep learning, like the basics of deep learning. What I haven't told you is why we use deep learning. OK, and that's basically what I'm going to tell you about now, the motivation for why is it that we need basically multi-layer neural nets or things of this type. OK, so the traditional prototypical model of supervised learning for a very long time is basically a linear classifier. Linear classifier for a two-class problem is basically a single unit of the similar type that we talked about earlier. You compute a weighted sum of inputs, add a bias, and you can think of the bias as just another trainable weight. So you can think of it as a single unit just another trainable weight whose corresponding input is equal to 1, if you want. And then you pass that through a threshold function, the sine function, that outputs minus 1 if the weighted sum is below 0 and plus 1 if it's above 0. OK, so this basic linear classifier basically partitions the space, the input space of x's, into two half spaces separated by a hyperplane. So the equation, sum of IWI xI plus V equals 0 is the surface that separates the category I that is going to produce y bar equal plus 1 from category II where y bar equals minus 1. Why does it divide the space into two halves? It's because you're computing the dot product of an input vector with a weight vector. If those two vectors are orthogonal, then the dot product is 0. OK, b is just an offset. So the set of points in x space where this dot product is 0 is the set of points that are orthogonal to the vector w. So in a n-dimensional space, your vector w is a vector. And the set of x whose dot product with w is 0 is a hyperplane. So it's a linear subspace of dimension n minus 1. And that hyperplane divides the space of dimension n into halves. So here is the situation in two dimensions. You have two dimensions, x1, x2. You have data points here, the red category and the blue category. And there is a weight vector plus a bias where the intercept here of this green separating line with x1 is minus b times divided by w1. So that gives you an idea for what w should be. And the w vector is orthogonal to that separating surface. So changing b will change the position. And then changing w will change the orientation, basically. Now, what about situations like this where the points are the red and blue points are not separable by a hyperplane? That's called a non-linearly separable case. So there, you can't use a linear classifier to separate those. What are we going to do? In fact, there is a theorem that goes back to 1966 by Tom Cover, who died recently, actually. It was at Stanford, that says the probability that a particular separation of p points is linearly separable in n dimension is close to 1 when p is smaller than n, but is close to 0 when p is larger than n. In other words, if you take an n-dimensional space, you throw p random points in that n-dimensional space, data points, and you randomly label them blue and red. You ask the question, what is the probability that that particular dichotomy is linearly separable? I can separate the blue points from the red points with a hyperplane. And the answer is, if p is less than n, you have a good chance that they will be separable. If p is larger than n, you basically have no chance that they will. So if you have image classification problem, let's say, and you have tons of examples, way bigger. So let's say you do n-nist. So n-nist is a data set of handwritten digits. The images are on 28 by 28 pixels. In fact, the intrinsic dimension is smaller because some pixels are always 0. And you have 60,000 samples. The probability that those 60,000 samples of, let's say, 0s from everything else or 1s from everything else is linearly separable is basically 0. Which is why people invented the classical model of pattern recognition, which consists in taking an input, engineering a feature extractor to produce a representation in such a way that in that space now, your problem becomes, let's say, linearly separable if you use a linear classifier or some other separability if you use another type of classifier. Now, necessarily, this feature extraction must be nonlinear itself if the only thing it does is some affine transformation of the input. It's not going to make a nonlinearly separable problem into a linear separable one. So necessarily, this feature extractor has to be nonlinear. This is very important to remember. A linear pre-processing doesn't do anything for you, essentially. So people spent decades in computer vision, for example, as speech recognition, devising good feature extractors for particular problems. What features are good to do face recognition, for example? Can I do things like detect the eyes and then measure the ratio between the separation of the eyes with the separation from the mouth and then compute feature like this and then feed that to a classifier and figure out who the person is? So most papers between, let's say, the 1960s or 70s and the late 2000s or early 2010s in computer vision were essentially about that, how you represent images properly. Not all of them, but a lot of them for recognition. And a lot of people devise very generic ways of devising feature extractors. The basic idea is you just expand the dimension of the representation in a nonlinear way so that now your number of dimensions is larger than the number of samples. And now your problem has a chance of becoming linearly separable. So the idea is that I'm not going to go through space styling, random projection. So random projection basically is a very simple idea. You take your input vectors, you multiply them by a random matrix, and then you pass the result through some nonlinear operation. That's called random projection. And if the dimension of the output is larger than the dimension of the input, it might make a nonlinearly separable problem linearly separable. It's very inefficient because you might need a very large number of this dimension to be able to do a good job. But it works in certain cases. And you don't have to train the first layer. You basically pick it randomly. And so the only thing you need to train is a linear classifier on top. These polynomial classifiers, which I'll talk about in a minute, read your basis functions and kernel machines. So those are basically techniques to turn an input into a representation that then will be essentially classifiable by a simple classifier like a linear classifier. So what's a polynomial classifier? A polynomial classifier, basically, imagine that your input vector has two dimensions. The way you increase the dimensionality of the representation is that you take each of the input variables, but you also take every product of pairs of input variables. So now you have a new feature vector, which is composed of x1, x2. You add 1 for the bias. And then also x1 times x2, x1 squared, and x2 squared. So when you do a linear classification in that space, what you're doing really is a quadratic classification in the original space. The surface, the separating surface in the original space now is a quadratic curve in two dimensions. In n dimension, it's a quadratic hypersurface, basically. So it could be a parabola, or an ellipse, or a hyperbola, depending on the coefficients. Now, the problem with this is that it doesn't work very well in high dimension because the number of features grows with a square of the number of inputs. So if you want to apply this to, let's say, an ImageNet type image, the resolution is 256 by 256 by 3 because you have color channels. That's already a high dimension. If you take the cross product of all of those variables, that's way too large. So it's not really practical for high dimensional problems, but it's a trick. So super vector machines are basically two layer networks, or kernel machines more generally, are two layer systems in which the first layer has as many dimensions as you have training samples. So for each training sample, you create a neuron, a unit, if you want. And the role of this unit is to produce a large output if the input vector matches one of the training samples and a small output if it doesn't, or the other way around. A small output if it matches, a large output if it doesn't. OK, doesn't really matter. But it has to be nonlinear. So something like compute the dot product of the input by one of the training samples and pass it through a negative exponential or a square or something like that. So this gives you how much the input vector resembles one of the training samples. And you do this for every single training samples. And then you train a linear classifier basically to use those inputs as input to a linear classifier. You compute the weight of that linear classifier. It's basically as simple as that. There's some regularization involved. So essentially, it's kind of a lookup table. You have your entire training set as points in your neurons, if you want, or units in your first layer. And they each indicate how close the current input vector is to them. So you get some picture of where the input vector is by basically having the relative position to all of the training samples. And then using a simple linear operation, you can figure out what's the correct answer. This works really well for low dimensional problems, the small number of training samples. But you're not going to do computer vision with it, at least not if x's are pixels, because it's basically template matching. Now here is a very interesting fact. It's the fact that if you build a two layer neural net on this model, so let's say a two layer neural net, you have an input layer, a hidden layer, and not specifying the size, and a single output unit. And you ask, what functions can I approximate with an architecture of this type? The answer is, you can approximate pretty much any well-behaved function as close as you want, as long as you have enough of those units in the middle. So this is a theorem that says that two layer neural nets are universal approximators. It doesn't really matter what nonlinear function you put in the middle. Any nonlinear function will do. A two layer neural net is a universal approximator. And immediately, you say, well, why do we need multiple layers, then, if we can approximate anything with two layers? And the answer is, it's very, very inefficient to try to approximate everything with only two layers, because many, many, many interesting functions we're interested in learning cannot be efficiently represented by a two layer system. They can possibly be represented by a two layer system. But the number of hidden units it would require to be so ridiculously large is completely impractical. So that's why we need layers. This very simple point is something that took until basically the 2010s for the machine learning and computer vision communities to understand. If you understood what I just said, you just took a few seconds to beat them. There is a last question here before we finish class. So does the depth of the network then have anything to do with generalization? So generalization is a different story. Generalization is very difficult to predict. It depends on a lot of things. It depends on the appropriateness of the architecture to the problem at hand. So for example, people use convolutional nets for computer vision, they use transformers for text, blah, blah, blah. Certain architectures that work well for certain types of data. So that's the main thing that will improve generalization. But generally, yes, multiple layers can improve generalization because for a particular function you're interested in learning, computing it with multiple layers will allow you to reduce the overall size of the system that will do a good job. And so by reducing the size, you're basically making it easier for the system to find kind of good representation. But there is something else which has to do with compositionality. I'll come to this in a minute if I have time. Also the minimum, the well is larger if we have overparameterized networks. If you have overparameterized network, it's much easier to find a minimum to your objective function, which is why neural nets are generally overparameterized. They generally have a much larger number of parameters than what you would think is necessary. And when you make them bigger, they work better usually. It's not always the case, but it's a very curious phenomenon about this. We'll talk about this later. This is the one point I want to make. And it's the fact that the reason why layers are good is that the world is compositional. The perceptual world in particular, but the world in general, the universe if you want, is compositional. What does that mean? It means that at the level of the universe, we have elementary particles. They assemble to form less elementary particles. Those assemble to form atoms. Those assemble to form molecules. Those assemble to form materials. Those assemble to form structures, objects, et cetera, and environments, scenes, et cetera. You have the same kind of hierarchy for images. You have pixels. They assemble to form edges and textons and motifs, parts and objects. In text, you have characters that assemble to form words, word groups, clauses, sentences, stories. In speech, you have speech samples that assemble to form kind of elementary sounds, phones, phonemes, syllables, words, et cetera. So you have this kind of compositional hierarchy in a lot of natural signals. And this is what makes the world understandable. There's this famous quote by Albert Einstein, the most incomprehensible thing about the world is that the world is comprehensible. And the reason why the world is comprehensible is because it's compositional, because small part assembled to form bigger part. And that allows you to have a description, an abstract description of the world in terms of parts from the level immediately below in terms of level of abstraction. So to some extent, the layered architecture in a neural net reflects this idea that you have a compositional hierarchy where simple things assemble to form slightly more complex things. So images, you have pixels formed to form edges that are kind of depicted here. These are actually feature detectors, visualization of feature detectors by a particular compositional net, which is a particular type of neural net, multilayer neural net. So at the low level, you have units that detect oriented edges. A couple of layers up, you have things that detect simple motifs, circles, gratings, corners, et cetera. And then a few layers up, there are things like parts of objects and things like that. So I think personally that the magic of deep learning, the fact that multiple layers help, is the fact that the perceptual world is basically a compositional hierarchy. And then this end-to-end learning in deep learning allows the system to learn hierarchical representations where each layer learns a representation that has a level of abstraction slightly higher than the previous one. So low level, you have individual pixels. Then you have the presence or absence of an edge. Then you have the presence or absence of a part of an object. And then you have the presence or absence of an object, independently of the position of that object, the illumination, the color, the occlusions, the background, things like that. So that's the motivation, the idea why deep learning is so successful and why it's basically taken over the world over the last 10 years or so. All right. Thank you for your attention. That's great. So for tomorrow, guys, don't forget to try to go over the 01 tutorial, tensor, sorry, the 01 notebook that we have on the website such that we can get all on the same level for the ones that are not really familiar with NumPy stuff. So otherwise, let's see you tomorrow morning. And have a nice day. Take care, everyone. Bye bye.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 2.2, "text": " So as you know, we're going to talk about deep learning,", "tokens": [50364, 407, 382, 291, 458, 11, 321, 434, 516, 281, 751, 466, 2452, 2539, 11, 50474, 50474, 293, 321, 434, 516, 281, 3012, 558, 294, 13, 50594, 50594, 407, 709, 295, 8496, 5821, 295, 2452, 2539, 50876, 50876, 965, 11, 3479, 2539, 293, 7318, 294, 2674, 11, 51090, 51090, 764, 257, 24709, 1219, 46533, 2539, 11, 597, 286, 478, 988, 881, 51278, 51278, 295, 291, 362, 2198, 295, 949, 13, 51356, 51356, 407, 341, 307, 264, 24709, 538, 597, 291, 3847, 257, 3479, 51466, 51466, 538, 4099, 309, 5110, 295, 15743, 293, 23930, 13, 51652, 51652, 509, 528, 281, 1322, 257, 3479, 281, 20206, 5267, 51766, 51766, 295, 5163, 490, 32947, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15385115250297215, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.0005346125108189881}, {"id": 1, "seek": 0, "start": 2.2, "end": 4.6000000000000005, "text": " and we're going to jump right in.", "tokens": [50364, 407, 382, 291, 458, 11, 321, 434, 516, 281, 751, 466, 2452, 2539, 11, 50474, 50474, 293, 321, 434, 516, 281, 3012, 558, 294, 13, 50594, 50594, 407, 709, 295, 8496, 5821, 295, 2452, 2539, 50876, 50876, 965, 11, 3479, 2539, 293, 7318, 294, 2674, 11, 51090, 51090, 764, 257, 24709, 1219, 46533, 2539, 11, 597, 286, 478, 988, 881, 51278, 51278, 295, 291, 362, 2198, 295, 949, 13, 51356, 51356, 407, 341, 307, 264, 24709, 538, 597, 291, 3847, 257, 3479, 51466, 51466, 538, 4099, 309, 5110, 295, 15743, 293, 23930, 13, 51652, 51652, 509, 528, 281, 1322, 257, 3479, 281, 20206, 5267, 51766, 51766, 295, 5163, 490, 32947, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15385115250297215, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.0005346125108189881}, {"id": 2, "seek": 0, "start": 4.6000000000000005, "end": 10.24, "text": " So much of practical applications of deep learning", "tokens": [50364, 407, 382, 291, 458, 11, 321, 434, 516, 281, 751, 466, 2452, 2539, 11, 50474, 50474, 293, 321, 434, 516, 281, 3012, 558, 294, 13, 50594, 50594, 407, 709, 295, 8496, 5821, 295, 2452, 2539, 50876, 50876, 965, 11, 3479, 2539, 293, 7318, 294, 2674, 11, 51090, 51090, 764, 257, 24709, 1219, 46533, 2539, 11, 597, 286, 478, 988, 881, 51278, 51278, 295, 291, 362, 2198, 295, 949, 13, 51356, 51356, 407, 341, 307, 264, 24709, 538, 597, 291, 3847, 257, 3479, 51466, 51466, 538, 4099, 309, 5110, 295, 15743, 293, 23930, 13, 51652, 51652, 509, 528, 281, 1322, 257, 3479, 281, 20206, 5267, 51766, 51766, 295, 5163, 490, 32947, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15385115250297215, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.0005346125108189881}, {"id": 3, "seek": 0, "start": 10.24, "end": 14.52, "text": " today, machine learning and AI in general,", "tokens": [50364, 407, 382, 291, 458, 11, 321, 434, 516, 281, 751, 466, 2452, 2539, 11, 50474, 50474, 293, 321, 434, 516, 281, 3012, 558, 294, 13, 50594, 50594, 407, 709, 295, 8496, 5821, 295, 2452, 2539, 50876, 50876, 965, 11, 3479, 2539, 293, 7318, 294, 2674, 11, 51090, 51090, 764, 257, 24709, 1219, 46533, 2539, 11, 597, 286, 478, 988, 881, 51278, 51278, 295, 291, 362, 2198, 295, 949, 13, 51356, 51356, 407, 341, 307, 264, 24709, 538, 597, 291, 3847, 257, 3479, 51466, 51466, 538, 4099, 309, 5110, 295, 15743, 293, 23930, 13, 51652, 51652, 509, 528, 281, 1322, 257, 3479, 281, 20206, 5267, 51766, 51766, 295, 5163, 490, 32947, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15385115250297215, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.0005346125108189881}, {"id": 4, "seek": 0, "start": 14.52, "end": 18.28, "text": " use a paradigm called supervised learning, which I'm sure most", "tokens": [50364, 407, 382, 291, 458, 11, 321, 434, 516, 281, 751, 466, 2452, 2539, 11, 50474, 50474, 293, 321, 434, 516, 281, 3012, 558, 294, 13, 50594, 50594, 407, 709, 295, 8496, 5821, 295, 2452, 2539, 50876, 50876, 965, 11, 3479, 2539, 293, 7318, 294, 2674, 11, 51090, 51090, 764, 257, 24709, 1219, 46533, 2539, 11, 597, 286, 478, 988, 881, 51278, 51278, 295, 291, 362, 2198, 295, 949, 13, 51356, 51356, 407, 341, 307, 264, 24709, 538, 597, 291, 3847, 257, 3479, 51466, 51466, 538, 4099, 309, 5110, 295, 15743, 293, 23930, 13, 51652, 51652, 509, 528, 281, 1322, 257, 3479, 281, 20206, 5267, 51766, 51766, 295, 5163, 490, 32947, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15385115250297215, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.0005346125108189881}, {"id": 5, "seek": 0, "start": 18.28, "end": 19.84, "text": " of you have heard of before.", "tokens": [50364, 407, 382, 291, 458, 11, 321, 434, 516, 281, 751, 466, 2452, 2539, 11, 50474, 50474, 293, 321, 434, 516, 281, 3012, 558, 294, 13, 50594, 50594, 407, 709, 295, 8496, 5821, 295, 2452, 2539, 50876, 50876, 965, 11, 3479, 2539, 293, 7318, 294, 2674, 11, 51090, 51090, 764, 257, 24709, 1219, 46533, 2539, 11, 597, 286, 478, 988, 881, 51278, 51278, 295, 291, 362, 2198, 295, 949, 13, 51356, 51356, 407, 341, 307, 264, 24709, 538, 597, 291, 3847, 257, 3479, 51466, 51466, 538, 4099, 309, 5110, 295, 15743, 293, 23930, 13, 51652, 51652, 509, 528, 281, 1322, 257, 3479, 281, 20206, 5267, 51766, 51766, 295, 5163, 490, 32947, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15385115250297215, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.0005346125108189881}, {"id": 6, "seek": 0, "start": 19.84, "end": 22.04, "text": " So this is the paradigm by which you train a machine", "tokens": [50364, 407, 382, 291, 458, 11, 321, 434, 516, 281, 751, 466, 2452, 2539, 11, 50474, 50474, 293, 321, 434, 516, 281, 3012, 558, 294, 13, 50594, 50594, 407, 709, 295, 8496, 5821, 295, 2452, 2539, 50876, 50876, 965, 11, 3479, 2539, 293, 7318, 294, 2674, 11, 51090, 51090, 764, 257, 24709, 1219, 46533, 2539, 11, 597, 286, 478, 988, 881, 51278, 51278, 295, 291, 362, 2198, 295, 949, 13, 51356, 51356, 407, 341, 307, 264, 24709, 538, 597, 291, 3847, 257, 3479, 51466, 51466, 538, 4099, 309, 5110, 295, 15743, 293, 23930, 13, 51652, 51652, 509, 528, 281, 1322, 257, 3479, 281, 20206, 5267, 51766, 51766, 295, 5163, 490, 32947, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15385115250297215, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.0005346125108189881}, {"id": 7, "seek": 0, "start": 22.04, "end": 25.76, "text": " by showing it examples of inputs and outputs.", "tokens": [50364, 407, 382, 291, 458, 11, 321, 434, 516, 281, 751, 466, 2452, 2539, 11, 50474, 50474, 293, 321, 434, 516, 281, 3012, 558, 294, 13, 50594, 50594, 407, 709, 295, 8496, 5821, 295, 2452, 2539, 50876, 50876, 965, 11, 3479, 2539, 293, 7318, 294, 2674, 11, 51090, 51090, 764, 257, 24709, 1219, 46533, 2539, 11, 597, 286, 478, 988, 881, 51278, 51278, 295, 291, 362, 2198, 295, 949, 13, 51356, 51356, 407, 341, 307, 264, 24709, 538, 597, 291, 3847, 257, 3479, 51466, 51466, 538, 4099, 309, 5110, 295, 15743, 293, 23930, 13, 51652, 51652, 509, 528, 281, 1322, 257, 3479, 281, 20206, 5267, 51766, 51766, 295, 5163, 490, 32947, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15385115250297215, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.0005346125108189881}, {"id": 8, "seek": 0, "start": 25.76, "end": 28.04, "text": " You want to build a machine to distinguish images", "tokens": [50364, 407, 382, 291, 458, 11, 321, 434, 516, 281, 751, 466, 2452, 2539, 11, 50474, 50474, 293, 321, 434, 516, 281, 3012, 558, 294, 13, 50594, 50594, 407, 709, 295, 8496, 5821, 295, 2452, 2539, 50876, 50876, 965, 11, 3479, 2539, 293, 7318, 294, 2674, 11, 51090, 51090, 764, 257, 24709, 1219, 46533, 2539, 11, 597, 286, 478, 988, 881, 51278, 51278, 295, 291, 362, 2198, 295, 949, 13, 51356, 51356, 407, 341, 307, 264, 24709, 538, 597, 291, 3847, 257, 3479, 51466, 51466, 538, 4099, 309, 5110, 295, 15743, 293, 23930, 13, 51652, 51652, 509, 528, 281, 1322, 257, 3479, 281, 20206, 5267, 51766, 51766, 295, 5163, 490, 32947, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15385115250297215, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.0005346125108189881}, {"id": 9, "seek": 0, "start": 28.04, "end": 28.96, "text": " of cars from airplanes.", "tokens": [50364, 407, 382, 291, 458, 11, 321, 434, 516, 281, 751, 466, 2452, 2539, 11, 50474, 50474, 293, 321, 434, 516, 281, 3012, 558, 294, 13, 50594, 50594, 407, 709, 295, 8496, 5821, 295, 2452, 2539, 50876, 50876, 965, 11, 3479, 2539, 293, 7318, 294, 2674, 11, 51090, 51090, 764, 257, 24709, 1219, 46533, 2539, 11, 597, 286, 478, 988, 881, 51278, 51278, 295, 291, 362, 2198, 295, 949, 13, 51356, 51356, 407, 341, 307, 264, 24709, 538, 597, 291, 3847, 257, 3479, 51466, 51466, 538, 4099, 309, 5110, 295, 15743, 293, 23930, 13, 51652, 51652, 509, 528, 281, 1322, 257, 3479, 281, 20206, 5267, 51766, 51766, 295, 5163, 490, 32947, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15385115250297215, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.0005346125108189881}, {"id": 10, "seek": 2896, "start": 28.96, "end": 30.76, "text": " You show it an image of a car.", "tokens": [50364, 509, 855, 309, 364, 3256, 295, 257, 1032, 13, 50454, 50454, 759, 264, 3479, 1619, 1032, 11, 291, 500, 380, 360, 1340, 13, 50562, 50562, 759, 309, 1619, 746, 1646, 11, 291, 4369, 50652, 50652, 264, 6920, 9834, 295, 264, 1185, 50734, 50734, 370, 300, 264, 5598, 2170, 4966, 281, 264, 472, 291, 528, 13, 50886, 50886, 407, 3811, 264, 3779, 5598, 307, 512, 8062, 295, 5354, 51082, 51082, 322, 257, 992, 295, 23930, 13, 51168, 51168, 509, 528, 264, 8062, 1348, 484, 295, 264, 3479, 51266, 51266, 281, 483, 4966, 281, 264, 8062, 300, 307, 264, 14721, 5598, 13, 51496, 51496, 400, 341, 1985, 534, 731, 382, 938, 51564, 51564, 382, 291, 362, 3195, 295, 1412, 13, 51666, 51666, 467, 1985, 337, 6218, 11150, 11, 3256, 11150, 11, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10945317261201098, "compression_ratio": 1.8656716417910448, "no_speech_prob": 8.078473911155015e-05}, {"id": 11, "seek": 2896, "start": 30.76, "end": 32.92, "text": " If the machine says car, you don't do anything.", "tokens": [50364, 509, 855, 309, 364, 3256, 295, 257, 1032, 13, 50454, 50454, 759, 264, 3479, 1619, 1032, 11, 291, 500, 380, 360, 1340, 13, 50562, 50562, 759, 309, 1619, 746, 1646, 11, 291, 4369, 50652, 50652, 264, 6920, 9834, 295, 264, 1185, 50734, 50734, 370, 300, 264, 5598, 2170, 4966, 281, 264, 472, 291, 528, 13, 50886, 50886, 407, 3811, 264, 3779, 5598, 307, 512, 8062, 295, 5354, 51082, 51082, 322, 257, 992, 295, 23930, 13, 51168, 51168, 509, 528, 264, 8062, 1348, 484, 295, 264, 3479, 51266, 51266, 281, 483, 4966, 281, 264, 8062, 300, 307, 264, 14721, 5598, 13, 51496, 51496, 400, 341, 1985, 534, 731, 382, 938, 51564, 51564, 382, 291, 362, 3195, 295, 1412, 13, 51666, 51666, 467, 1985, 337, 6218, 11150, 11, 3256, 11150, 11, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10945317261201098, "compression_ratio": 1.8656716417910448, "no_speech_prob": 8.078473911155015e-05}, {"id": 12, "seek": 2896, "start": 32.92, "end": 34.72, "text": " If it says something else, you adjust", "tokens": [50364, 509, 855, 309, 364, 3256, 295, 257, 1032, 13, 50454, 50454, 759, 264, 3479, 1619, 1032, 11, 291, 500, 380, 360, 1340, 13, 50562, 50562, 759, 309, 1619, 746, 1646, 11, 291, 4369, 50652, 50652, 264, 6920, 9834, 295, 264, 1185, 50734, 50734, 370, 300, 264, 5598, 2170, 4966, 281, 264, 472, 291, 528, 13, 50886, 50886, 407, 3811, 264, 3779, 5598, 307, 512, 8062, 295, 5354, 51082, 51082, 322, 257, 992, 295, 23930, 13, 51168, 51168, 509, 528, 264, 8062, 1348, 484, 295, 264, 3479, 51266, 51266, 281, 483, 4966, 281, 264, 8062, 300, 307, 264, 14721, 5598, 13, 51496, 51496, 400, 341, 1985, 534, 731, 382, 938, 51564, 51564, 382, 291, 362, 3195, 295, 1412, 13, 51666, 51666, 467, 1985, 337, 6218, 11150, 11, 3256, 11150, 11, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10945317261201098, "compression_ratio": 1.8656716417910448, "no_speech_prob": 8.078473911155015e-05}, {"id": 13, "seek": 2896, "start": 34.72, "end": 36.36, "text": " the internal parameters of the system", "tokens": [50364, 509, 855, 309, 364, 3256, 295, 257, 1032, 13, 50454, 50454, 759, 264, 3479, 1619, 1032, 11, 291, 500, 380, 360, 1340, 13, 50562, 50562, 759, 309, 1619, 746, 1646, 11, 291, 4369, 50652, 50652, 264, 6920, 9834, 295, 264, 1185, 50734, 50734, 370, 300, 264, 5598, 2170, 4966, 281, 264, 472, 291, 528, 13, 50886, 50886, 407, 3811, 264, 3779, 5598, 307, 512, 8062, 295, 5354, 51082, 51082, 322, 257, 992, 295, 23930, 13, 51168, 51168, 509, 528, 264, 8062, 1348, 484, 295, 264, 3479, 51266, 51266, 281, 483, 4966, 281, 264, 8062, 300, 307, 264, 14721, 5598, 13, 51496, 51496, 400, 341, 1985, 534, 731, 382, 938, 51564, 51564, 382, 291, 362, 3195, 295, 1412, 13, 51666, 51666, 467, 1985, 337, 6218, 11150, 11, 3256, 11150, 11, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10945317261201098, "compression_ratio": 1.8656716417910448, "no_speech_prob": 8.078473911155015e-05}, {"id": 14, "seek": 2896, "start": 36.36, "end": 39.4, "text": " so that the output gets closer to the one you want.", "tokens": [50364, 509, 855, 309, 364, 3256, 295, 257, 1032, 13, 50454, 50454, 759, 264, 3479, 1619, 1032, 11, 291, 500, 380, 360, 1340, 13, 50562, 50562, 759, 309, 1619, 746, 1646, 11, 291, 4369, 50652, 50652, 264, 6920, 9834, 295, 264, 1185, 50734, 50734, 370, 300, 264, 5598, 2170, 4966, 281, 264, 472, 291, 528, 13, 50886, 50886, 407, 3811, 264, 3779, 5598, 307, 512, 8062, 295, 5354, 51082, 51082, 322, 257, 992, 295, 23930, 13, 51168, 51168, 509, 528, 264, 8062, 1348, 484, 295, 264, 3479, 51266, 51266, 281, 483, 4966, 281, 264, 8062, 300, 307, 264, 14721, 5598, 13, 51496, 51496, 400, 341, 1985, 534, 731, 382, 938, 51564, 51564, 382, 291, 362, 3195, 295, 1412, 13, 51666, 51666, 467, 1985, 337, 6218, 11150, 11, 3256, 11150, 11, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10945317261201098, "compression_ratio": 1.8656716417910448, "no_speech_prob": 8.078473911155015e-05}, {"id": 15, "seek": 2896, "start": 39.4, "end": 43.32, "text": " So imagine the target output is some vector of activities", "tokens": [50364, 509, 855, 309, 364, 3256, 295, 257, 1032, 13, 50454, 50454, 759, 264, 3479, 1619, 1032, 11, 291, 500, 380, 360, 1340, 13, 50562, 50562, 759, 309, 1619, 746, 1646, 11, 291, 4369, 50652, 50652, 264, 6920, 9834, 295, 264, 1185, 50734, 50734, 370, 300, 264, 5598, 2170, 4966, 281, 264, 472, 291, 528, 13, 50886, 50886, 407, 3811, 264, 3779, 5598, 307, 512, 8062, 295, 5354, 51082, 51082, 322, 257, 992, 295, 23930, 13, 51168, 51168, 509, 528, 264, 8062, 1348, 484, 295, 264, 3479, 51266, 51266, 281, 483, 4966, 281, 264, 8062, 300, 307, 264, 14721, 5598, 13, 51496, 51496, 400, 341, 1985, 534, 731, 382, 938, 51564, 51564, 382, 291, 362, 3195, 295, 1412, 13, 51666, 51666, 467, 1985, 337, 6218, 11150, 11, 3256, 11150, 11, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10945317261201098, "compression_ratio": 1.8656716417910448, "no_speech_prob": 8.078473911155015e-05}, {"id": 16, "seek": 2896, "start": 43.32, "end": 45.040000000000006, "text": " on a set of outputs.", "tokens": [50364, 509, 855, 309, 364, 3256, 295, 257, 1032, 13, 50454, 50454, 759, 264, 3479, 1619, 1032, 11, 291, 500, 380, 360, 1340, 13, 50562, 50562, 759, 309, 1619, 746, 1646, 11, 291, 4369, 50652, 50652, 264, 6920, 9834, 295, 264, 1185, 50734, 50734, 370, 300, 264, 5598, 2170, 4966, 281, 264, 472, 291, 528, 13, 50886, 50886, 407, 3811, 264, 3779, 5598, 307, 512, 8062, 295, 5354, 51082, 51082, 322, 257, 992, 295, 23930, 13, 51168, 51168, 509, 528, 264, 8062, 1348, 484, 295, 264, 3479, 51266, 51266, 281, 483, 4966, 281, 264, 8062, 300, 307, 264, 14721, 5598, 13, 51496, 51496, 400, 341, 1985, 534, 731, 382, 938, 51564, 51564, 382, 291, 362, 3195, 295, 1412, 13, 51666, 51666, 467, 1985, 337, 6218, 11150, 11, 3256, 11150, 11, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10945317261201098, "compression_ratio": 1.8656716417910448, "no_speech_prob": 8.078473911155015e-05}, {"id": 17, "seek": 2896, "start": 45.040000000000006, "end": 47.0, "text": " You want the vector coming out of the machine", "tokens": [50364, 509, 855, 309, 364, 3256, 295, 257, 1032, 13, 50454, 50454, 759, 264, 3479, 1619, 1032, 11, 291, 500, 380, 360, 1340, 13, 50562, 50562, 759, 309, 1619, 746, 1646, 11, 291, 4369, 50652, 50652, 264, 6920, 9834, 295, 264, 1185, 50734, 50734, 370, 300, 264, 5598, 2170, 4966, 281, 264, 472, 291, 528, 13, 50886, 50886, 407, 3811, 264, 3779, 5598, 307, 512, 8062, 295, 5354, 51082, 51082, 322, 257, 992, 295, 23930, 13, 51168, 51168, 509, 528, 264, 8062, 1348, 484, 295, 264, 3479, 51266, 51266, 281, 483, 4966, 281, 264, 8062, 300, 307, 264, 14721, 5598, 13, 51496, 51496, 400, 341, 1985, 534, 731, 382, 938, 51564, 51564, 382, 291, 362, 3195, 295, 1412, 13, 51666, 51666, 467, 1985, 337, 6218, 11150, 11, 3256, 11150, 11, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10945317261201098, "compression_ratio": 1.8656716417910448, "no_speech_prob": 8.078473911155015e-05}, {"id": 18, "seek": 2896, "start": 47.0, "end": 51.6, "text": " to get closer to the vector that is the desired output.", "tokens": [50364, 509, 855, 309, 364, 3256, 295, 257, 1032, 13, 50454, 50454, 759, 264, 3479, 1619, 1032, 11, 291, 500, 380, 360, 1340, 13, 50562, 50562, 759, 309, 1619, 746, 1646, 11, 291, 4369, 50652, 50652, 264, 6920, 9834, 295, 264, 1185, 50734, 50734, 370, 300, 264, 5598, 2170, 4966, 281, 264, 472, 291, 528, 13, 50886, 50886, 407, 3811, 264, 3779, 5598, 307, 512, 8062, 295, 5354, 51082, 51082, 322, 257, 992, 295, 23930, 13, 51168, 51168, 509, 528, 264, 8062, 1348, 484, 295, 264, 3479, 51266, 51266, 281, 483, 4966, 281, 264, 8062, 300, 307, 264, 14721, 5598, 13, 51496, 51496, 400, 341, 1985, 534, 731, 382, 938, 51564, 51564, 382, 291, 362, 3195, 295, 1412, 13, 51666, 51666, 467, 1985, 337, 6218, 11150, 11, 3256, 11150, 11, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10945317261201098, "compression_ratio": 1.8656716417910448, "no_speech_prob": 8.078473911155015e-05}, {"id": 19, "seek": 2896, "start": 51.6, "end": 52.96, "text": " And this works really well as long", "tokens": [50364, 509, 855, 309, 364, 3256, 295, 257, 1032, 13, 50454, 50454, 759, 264, 3479, 1619, 1032, 11, 291, 500, 380, 360, 1340, 13, 50562, 50562, 759, 309, 1619, 746, 1646, 11, 291, 4369, 50652, 50652, 264, 6920, 9834, 295, 264, 1185, 50734, 50734, 370, 300, 264, 5598, 2170, 4966, 281, 264, 472, 291, 528, 13, 50886, 50886, 407, 3811, 264, 3779, 5598, 307, 512, 8062, 295, 5354, 51082, 51082, 322, 257, 992, 295, 23930, 13, 51168, 51168, 509, 528, 264, 8062, 1348, 484, 295, 264, 3479, 51266, 51266, 281, 483, 4966, 281, 264, 8062, 300, 307, 264, 14721, 5598, 13, 51496, 51496, 400, 341, 1985, 534, 731, 382, 938, 51564, 51564, 382, 291, 362, 3195, 295, 1412, 13, 51666, 51666, 467, 1985, 337, 6218, 11150, 11, 3256, 11150, 11, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10945317261201098, "compression_ratio": 1.8656716417910448, "no_speech_prob": 8.078473911155015e-05}, {"id": 20, "seek": 2896, "start": 52.96, "end": 55.0, "text": " as you have lots of data.", "tokens": [50364, 509, 855, 309, 364, 3256, 295, 257, 1032, 13, 50454, 50454, 759, 264, 3479, 1619, 1032, 11, 291, 500, 380, 360, 1340, 13, 50562, 50562, 759, 309, 1619, 746, 1646, 11, 291, 4369, 50652, 50652, 264, 6920, 9834, 295, 264, 1185, 50734, 50734, 370, 300, 264, 5598, 2170, 4966, 281, 264, 472, 291, 528, 13, 50886, 50886, 407, 3811, 264, 3779, 5598, 307, 512, 8062, 295, 5354, 51082, 51082, 322, 257, 992, 295, 23930, 13, 51168, 51168, 509, 528, 264, 8062, 1348, 484, 295, 264, 3479, 51266, 51266, 281, 483, 4966, 281, 264, 8062, 300, 307, 264, 14721, 5598, 13, 51496, 51496, 400, 341, 1985, 534, 731, 382, 938, 51564, 51564, 382, 291, 362, 3195, 295, 1412, 13, 51666, 51666, 467, 1985, 337, 6218, 11150, 11, 3256, 11150, 11, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10945317261201098, "compression_ratio": 1.8656716417910448, "no_speech_prob": 8.078473911155015e-05}, {"id": 21, "seek": 2896, "start": 55.0, "end": 58.120000000000005, "text": " It works for speech recognition, image recognition,", "tokens": [50364, 509, 855, 309, 364, 3256, 295, 257, 1032, 13, 50454, 50454, 759, 264, 3479, 1619, 1032, 11, 291, 500, 380, 360, 1340, 13, 50562, 50562, 759, 309, 1619, 746, 1646, 11, 291, 4369, 50652, 50652, 264, 6920, 9834, 295, 264, 1185, 50734, 50734, 370, 300, 264, 5598, 2170, 4966, 281, 264, 472, 291, 528, 13, 50886, 50886, 407, 3811, 264, 3779, 5598, 307, 512, 8062, 295, 5354, 51082, 51082, 322, 257, 992, 295, 23930, 13, 51168, 51168, 509, 528, 264, 8062, 1348, 484, 295, 264, 3479, 51266, 51266, 281, 483, 4966, 281, 264, 8062, 300, 307, 264, 14721, 5598, 13, 51496, 51496, 400, 341, 1985, 534, 731, 382, 938, 51564, 51564, 382, 291, 362, 3195, 295, 1412, 13, 51666, 51666, 467, 1985, 337, 6218, 11150, 11, 3256, 11150, 11, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10945317261201098, "compression_ratio": 1.8656716417910448, "no_speech_prob": 8.078473911155015e-05}, {"id": 22, "seek": 5812, "start": 58.12, "end": 61.839999999999996, "text": " face recognition, generating captions, translation,", "tokens": [50364, 1851, 11150, 11, 17746, 44832, 11, 12853, 11, 50550, 50550, 439, 3685, 295, 1507, 13, 50634, 50634, 407, 341, 307, 11, 286, 576, 584, 11, 13420, 4, 295, 439, 5821, 50780, 50780, 295, 3479, 2539, 965, 13, 50876, 50876, 821, 366, 732, 661, 13480, 328, 2592, 11, 472, 295, 597, 50976, 50976, 286, 486, 406, 751, 466, 11, 472, 295, 597, 286, 486, 751, 466, 257, 688, 13, 51098, 51098, 407, 264, 732, 661, 13480, 328, 2592, 366, 29280, 2539, 11, 51288, 51288, 597, 286, 486, 406, 751, 466, 13, 51368, 51368, 400, 456, 366, 661, 7712, 13, 51524, 51524, 821, 311, 257, 1164, 538, 18145, 430, 17246, 466, 341, 51632, 51632, 300, 286, 5373, 291, 281, 747, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.12709067119815484, "compression_ratio": 1.825, "no_speech_prob": 8.397569217777345e-06}, {"id": 23, "seek": 5812, "start": 61.839999999999996, "end": 63.519999999999996, "text": " all kinds of stuff.", "tokens": [50364, 1851, 11150, 11, 17746, 44832, 11, 12853, 11, 50550, 50550, 439, 3685, 295, 1507, 13, 50634, 50634, 407, 341, 307, 11, 286, 576, 584, 11, 13420, 4, 295, 439, 5821, 50780, 50780, 295, 3479, 2539, 965, 13, 50876, 50876, 821, 366, 732, 661, 13480, 328, 2592, 11, 472, 295, 597, 50976, 50976, 286, 486, 406, 751, 466, 11, 472, 295, 597, 286, 486, 751, 466, 257, 688, 13, 51098, 51098, 407, 264, 732, 661, 13480, 328, 2592, 366, 29280, 2539, 11, 51288, 51288, 597, 286, 486, 406, 751, 466, 13, 51368, 51368, 400, 456, 366, 661, 7712, 13, 51524, 51524, 821, 311, 257, 1164, 538, 18145, 430, 17246, 466, 341, 51632, 51632, 300, 286, 5373, 291, 281, 747, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.12709067119815484, "compression_ratio": 1.825, "no_speech_prob": 8.397569217777345e-06}, {"id": 24, "seek": 5812, "start": 63.519999999999996, "end": 66.44, "text": " So this is, I would say, 95% of all applications", "tokens": [50364, 1851, 11150, 11, 17746, 44832, 11, 12853, 11, 50550, 50550, 439, 3685, 295, 1507, 13, 50634, 50634, 407, 341, 307, 11, 286, 576, 584, 11, 13420, 4, 295, 439, 5821, 50780, 50780, 295, 3479, 2539, 965, 13, 50876, 50876, 821, 366, 732, 661, 13480, 328, 2592, 11, 472, 295, 597, 50976, 50976, 286, 486, 406, 751, 466, 11, 472, 295, 597, 286, 486, 751, 466, 257, 688, 13, 51098, 51098, 407, 264, 732, 661, 13480, 328, 2592, 366, 29280, 2539, 11, 51288, 51288, 597, 286, 486, 406, 751, 466, 13, 51368, 51368, 400, 456, 366, 661, 7712, 13, 51524, 51524, 821, 311, 257, 1164, 538, 18145, 430, 17246, 466, 341, 51632, 51632, 300, 286, 5373, 291, 281, 747, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.12709067119815484, "compression_ratio": 1.825, "no_speech_prob": 8.397569217777345e-06}, {"id": 25, "seek": 5812, "start": 66.44, "end": 68.36, "text": " of machine learning today.", "tokens": [50364, 1851, 11150, 11, 17746, 44832, 11, 12853, 11, 50550, 50550, 439, 3685, 295, 1507, 13, 50634, 50634, 407, 341, 307, 11, 286, 576, 584, 11, 13420, 4, 295, 439, 5821, 50780, 50780, 295, 3479, 2539, 965, 13, 50876, 50876, 821, 366, 732, 661, 13480, 328, 2592, 11, 472, 295, 597, 50976, 50976, 286, 486, 406, 751, 466, 11, 472, 295, 597, 286, 486, 751, 466, 257, 688, 13, 51098, 51098, 407, 264, 732, 661, 13480, 328, 2592, 366, 29280, 2539, 11, 51288, 51288, 597, 286, 486, 406, 751, 466, 13, 51368, 51368, 400, 456, 366, 661, 7712, 13, 51524, 51524, 821, 311, 257, 1164, 538, 18145, 430, 17246, 466, 341, 51632, 51632, 300, 286, 5373, 291, 281, 747, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.12709067119815484, "compression_ratio": 1.825, "no_speech_prob": 8.397569217777345e-06}, {"id": 26, "seek": 5812, "start": 68.36, "end": 70.36, "text": " There are two other paradigms, one of which", "tokens": [50364, 1851, 11150, 11, 17746, 44832, 11, 12853, 11, 50550, 50550, 439, 3685, 295, 1507, 13, 50634, 50634, 407, 341, 307, 11, 286, 576, 584, 11, 13420, 4, 295, 439, 5821, 50780, 50780, 295, 3479, 2539, 965, 13, 50876, 50876, 821, 366, 732, 661, 13480, 328, 2592, 11, 472, 295, 597, 50976, 50976, 286, 486, 406, 751, 466, 11, 472, 295, 597, 286, 486, 751, 466, 257, 688, 13, 51098, 51098, 407, 264, 732, 661, 13480, 328, 2592, 366, 29280, 2539, 11, 51288, 51288, 597, 286, 486, 406, 751, 466, 13, 51368, 51368, 400, 456, 366, 661, 7712, 13, 51524, 51524, 821, 311, 257, 1164, 538, 18145, 430, 17246, 466, 341, 51632, 51632, 300, 286, 5373, 291, 281, 747, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.12709067119815484, "compression_ratio": 1.825, "no_speech_prob": 8.397569217777345e-06}, {"id": 27, "seek": 5812, "start": 70.36, "end": 72.8, "text": " I will not talk about, one of which I will talk about a lot.", "tokens": [50364, 1851, 11150, 11, 17746, 44832, 11, 12853, 11, 50550, 50550, 439, 3685, 295, 1507, 13, 50634, 50634, 407, 341, 307, 11, 286, 576, 584, 11, 13420, 4, 295, 439, 5821, 50780, 50780, 295, 3479, 2539, 965, 13, 50876, 50876, 821, 366, 732, 661, 13480, 328, 2592, 11, 472, 295, 597, 50976, 50976, 286, 486, 406, 751, 466, 11, 472, 295, 597, 286, 486, 751, 466, 257, 688, 13, 51098, 51098, 407, 264, 732, 661, 13480, 328, 2592, 366, 29280, 2539, 11, 51288, 51288, 597, 286, 486, 406, 751, 466, 13, 51368, 51368, 400, 456, 366, 661, 7712, 13, 51524, 51524, 821, 311, 257, 1164, 538, 18145, 430, 17246, 466, 341, 51632, 51632, 300, 286, 5373, 291, 281, 747, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.12709067119815484, "compression_ratio": 1.825, "no_speech_prob": 8.397569217777345e-06}, {"id": 28, "seek": 5812, "start": 72.8, "end": 76.6, "text": " So the two other paradigms are reinforcement learning,", "tokens": [50364, 1851, 11150, 11, 17746, 44832, 11, 12853, 11, 50550, 50550, 439, 3685, 295, 1507, 13, 50634, 50634, 407, 341, 307, 11, 286, 576, 584, 11, 13420, 4, 295, 439, 5821, 50780, 50780, 295, 3479, 2539, 965, 13, 50876, 50876, 821, 366, 732, 661, 13480, 328, 2592, 11, 472, 295, 597, 50976, 50976, 286, 486, 406, 751, 466, 11, 472, 295, 597, 286, 486, 751, 466, 257, 688, 13, 51098, 51098, 407, 264, 732, 661, 13480, 328, 2592, 366, 29280, 2539, 11, 51288, 51288, 597, 286, 486, 406, 751, 466, 13, 51368, 51368, 400, 456, 366, 661, 7712, 13, 51524, 51524, 821, 311, 257, 1164, 538, 18145, 430, 17246, 466, 341, 51632, 51632, 300, 286, 5373, 291, 281, 747, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.12709067119815484, "compression_ratio": 1.825, "no_speech_prob": 8.397569217777345e-06}, {"id": 29, "seek": 5812, "start": 76.6, "end": 78.2, "text": " which I will not talk about.", "tokens": [50364, 1851, 11150, 11, 17746, 44832, 11, 12853, 11, 50550, 50550, 439, 3685, 295, 1507, 13, 50634, 50634, 407, 341, 307, 11, 286, 576, 584, 11, 13420, 4, 295, 439, 5821, 50780, 50780, 295, 3479, 2539, 965, 13, 50876, 50876, 821, 366, 732, 661, 13480, 328, 2592, 11, 472, 295, 597, 50976, 50976, 286, 486, 406, 751, 466, 11, 472, 295, 597, 286, 486, 751, 466, 257, 688, 13, 51098, 51098, 407, 264, 732, 661, 13480, 328, 2592, 366, 29280, 2539, 11, 51288, 51288, 597, 286, 486, 406, 751, 466, 13, 51368, 51368, 400, 456, 366, 661, 7712, 13, 51524, 51524, 821, 311, 257, 1164, 538, 18145, 430, 17246, 466, 341, 51632, 51632, 300, 286, 5373, 291, 281, 747, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.12709067119815484, "compression_ratio": 1.825, "no_speech_prob": 8.397569217777345e-06}, {"id": 30, "seek": 5812, "start": 78.2, "end": 81.32, "text": " And there are other courses.", "tokens": [50364, 1851, 11150, 11, 17746, 44832, 11, 12853, 11, 50550, 50550, 439, 3685, 295, 1507, 13, 50634, 50634, 407, 341, 307, 11, 286, 576, 584, 11, 13420, 4, 295, 439, 5821, 50780, 50780, 295, 3479, 2539, 965, 13, 50876, 50876, 821, 366, 732, 661, 13480, 328, 2592, 11, 472, 295, 597, 50976, 50976, 286, 486, 406, 751, 466, 11, 472, 295, 597, 286, 486, 751, 466, 257, 688, 13, 51098, 51098, 407, 264, 732, 661, 13480, 328, 2592, 366, 29280, 2539, 11, 51288, 51288, 597, 286, 486, 406, 751, 466, 13, 51368, 51368, 400, 456, 366, 661, 7712, 13, 51524, 51524, 821, 311, 257, 1164, 538, 18145, 430, 17246, 466, 341, 51632, 51632, 300, 286, 5373, 291, 281, 747, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.12709067119815484, "compression_ratio": 1.825, "no_speech_prob": 8.397569217777345e-06}, {"id": 31, "seek": 5812, "start": 81.32, "end": 83.47999999999999, "text": " There's a course by Larry Pinto about this", "tokens": [50364, 1851, 11150, 11, 17746, 44832, 11, 12853, 11, 50550, 50550, 439, 3685, 295, 1507, 13, 50634, 50634, 407, 341, 307, 11, 286, 576, 584, 11, 13420, 4, 295, 439, 5821, 50780, 50780, 295, 3479, 2539, 965, 13, 50876, 50876, 821, 366, 732, 661, 13480, 328, 2592, 11, 472, 295, 597, 50976, 50976, 286, 486, 406, 751, 466, 11, 472, 295, 597, 286, 486, 751, 466, 257, 688, 13, 51098, 51098, 407, 264, 732, 661, 13480, 328, 2592, 366, 29280, 2539, 11, 51288, 51288, 597, 286, 486, 406, 751, 466, 13, 51368, 51368, 400, 456, 366, 661, 7712, 13, 51524, 51524, 821, 311, 257, 1164, 538, 18145, 430, 17246, 466, 341, 51632, 51632, 300, 286, 5373, 291, 281, 747, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.12709067119815484, "compression_ratio": 1.825, "no_speech_prob": 8.397569217777345e-06}, {"id": 32, "seek": 5812, "start": 83.47999999999999, "end": 84.96, "text": " that I encourage you to take.", "tokens": [50364, 1851, 11150, 11, 17746, 44832, 11, 12853, 11, 50550, 50550, 439, 3685, 295, 1507, 13, 50634, 50634, 407, 341, 307, 11, 286, 576, 584, 11, 13420, 4, 295, 439, 5821, 50780, 50780, 295, 3479, 2539, 965, 13, 50876, 50876, 821, 366, 732, 661, 13480, 328, 2592, 11, 472, 295, 597, 50976, 50976, 286, 486, 406, 751, 466, 11, 472, 295, 597, 286, 486, 751, 466, 257, 688, 13, 51098, 51098, 407, 264, 732, 661, 13480, 328, 2592, 366, 29280, 2539, 11, 51288, 51288, 597, 286, 486, 406, 751, 466, 13, 51368, 51368, 400, 456, 366, 661, 7712, 13, 51524, 51524, 821, 311, 257, 1164, 538, 18145, 430, 17246, 466, 341, 51632, 51632, 300, 286, 5373, 291, 281, 747, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.12709067119815484, "compression_ratio": 1.825, "no_speech_prob": 8.397569217777345e-06}, {"id": 33, "seek": 8496, "start": 84.96, "end": 88.67999999999999, "text": " And a third paradigm is self-supervised learning", "tokens": [50364, 400, 257, 2636, 24709, 307, 2698, 12, 48172, 24420, 2539, 50550, 50550, 420, 2693, 12879, 24420, 2539, 13, 50600, 50600, 400, 321, 603, 751, 466, 341, 1596, 257, 688, 294, 264, 3480, 3259, 13, 50866, 50866, 583, 337, 586, 11, 718, 311, 751, 466, 46533, 2539, 13, 50964, 50964, 16348, 12, 48172, 24420, 2539, 11, 291, 727, 519, 295, 309, 51038, 51038, 382, 733, 295, 257, 862, 322, 46533, 2539, 13, 51214, 51214, 407, 264, 5164, 2316, 295, 5102, 11150, 11, 3479, 51370, 51370, 2539, 11, 293, 46533, 2539, 11, 3297, 516, 646, 51472, 51472, 281, 264, 3469, 2625, 82, 420, 264, 4060, 82, 11, 307, 264, 1558, 51614, 51614, 538, 597, 291, 747, 257, 8936, 6358, 11, 718, 311, 584, 364, 3256, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15564637672244094, "compression_ratio": 1.8937007874015748, "no_speech_prob": 8.395375516556669e-06}, {"id": 34, "seek": 8496, "start": 88.67999999999999, "end": 89.67999999999999, "text": " or unsupervised learning.", "tokens": [50364, 400, 257, 2636, 24709, 307, 2698, 12, 48172, 24420, 2539, 50550, 50550, 420, 2693, 12879, 24420, 2539, 13, 50600, 50600, 400, 321, 603, 751, 466, 341, 1596, 257, 688, 294, 264, 3480, 3259, 13, 50866, 50866, 583, 337, 586, 11, 718, 311, 751, 466, 46533, 2539, 13, 50964, 50964, 16348, 12, 48172, 24420, 2539, 11, 291, 727, 519, 295, 309, 51038, 51038, 382, 733, 295, 257, 862, 322, 46533, 2539, 13, 51214, 51214, 407, 264, 5164, 2316, 295, 5102, 11150, 11, 3479, 51370, 51370, 2539, 11, 293, 46533, 2539, 11, 3297, 516, 646, 51472, 51472, 281, 264, 3469, 2625, 82, 420, 264, 4060, 82, 11, 307, 264, 1558, 51614, 51614, 538, 597, 291, 747, 257, 8936, 6358, 11, 718, 311, 584, 364, 3256, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15564637672244094, "compression_ratio": 1.8937007874015748, "no_speech_prob": 8.395375516556669e-06}, {"id": 35, "seek": 8496, "start": 89.67999999999999, "end": 95.0, "text": " And we'll talk about this quite a lot in the following weeks.", "tokens": [50364, 400, 257, 2636, 24709, 307, 2698, 12, 48172, 24420, 2539, 50550, 50550, 420, 2693, 12879, 24420, 2539, 13, 50600, 50600, 400, 321, 603, 751, 466, 341, 1596, 257, 688, 294, 264, 3480, 3259, 13, 50866, 50866, 583, 337, 586, 11, 718, 311, 751, 466, 46533, 2539, 13, 50964, 50964, 16348, 12, 48172, 24420, 2539, 11, 291, 727, 519, 295, 309, 51038, 51038, 382, 733, 295, 257, 862, 322, 46533, 2539, 13, 51214, 51214, 407, 264, 5164, 2316, 295, 5102, 11150, 11, 3479, 51370, 51370, 2539, 11, 293, 46533, 2539, 11, 3297, 516, 646, 51472, 51472, 281, 264, 3469, 2625, 82, 420, 264, 4060, 82, 11, 307, 264, 1558, 51614, 51614, 538, 597, 291, 747, 257, 8936, 6358, 11, 718, 311, 584, 364, 3256, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15564637672244094, "compression_ratio": 1.8937007874015748, "no_speech_prob": 8.395375516556669e-06}, {"id": 36, "seek": 8496, "start": 95.0, "end": 96.96, "text": " But for now, let's talk about supervised learning.", "tokens": [50364, 400, 257, 2636, 24709, 307, 2698, 12, 48172, 24420, 2539, 50550, 50550, 420, 2693, 12879, 24420, 2539, 13, 50600, 50600, 400, 321, 603, 751, 466, 341, 1596, 257, 688, 294, 264, 3480, 3259, 13, 50866, 50866, 583, 337, 586, 11, 718, 311, 751, 466, 46533, 2539, 13, 50964, 50964, 16348, 12, 48172, 24420, 2539, 11, 291, 727, 519, 295, 309, 51038, 51038, 382, 733, 295, 257, 862, 322, 46533, 2539, 13, 51214, 51214, 407, 264, 5164, 2316, 295, 5102, 11150, 11, 3479, 51370, 51370, 2539, 11, 293, 46533, 2539, 11, 3297, 516, 646, 51472, 51472, 281, 264, 3469, 2625, 82, 420, 264, 4060, 82, 11, 307, 264, 1558, 51614, 51614, 538, 597, 291, 747, 257, 8936, 6358, 11, 718, 311, 584, 364, 3256, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15564637672244094, "compression_ratio": 1.8937007874015748, "no_speech_prob": 8.395375516556669e-06}, {"id": 37, "seek": 8496, "start": 96.96, "end": 98.44, "text": " Self-supervised learning, you could think of it", "tokens": [50364, 400, 257, 2636, 24709, 307, 2698, 12, 48172, 24420, 2539, 50550, 50550, 420, 2693, 12879, 24420, 2539, 13, 50600, 50600, 400, 321, 603, 751, 466, 341, 1596, 257, 688, 294, 264, 3480, 3259, 13, 50866, 50866, 583, 337, 586, 11, 718, 311, 751, 466, 46533, 2539, 13, 50964, 50964, 16348, 12, 48172, 24420, 2539, 11, 291, 727, 519, 295, 309, 51038, 51038, 382, 733, 295, 257, 862, 322, 46533, 2539, 13, 51214, 51214, 407, 264, 5164, 2316, 295, 5102, 11150, 11, 3479, 51370, 51370, 2539, 11, 293, 46533, 2539, 11, 3297, 516, 646, 51472, 51472, 281, 264, 3469, 2625, 82, 420, 264, 4060, 82, 11, 307, 264, 1558, 51614, 51614, 538, 597, 291, 747, 257, 8936, 6358, 11, 718, 311, 584, 364, 3256, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15564637672244094, "compression_ratio": 1.8937007874015748, "no_speech_prob": 8.395375516556669e-06}, {"id": 38, "seek": 8496, "start": 98.44, "end": 101.96, "text": " as kind of a play on supervised learning.", "tokens": [50364, 400, 257, 2636, 24709, 307, 2698, 12, 48172, 24420, 2539, 50550, 50550, 420, 2693, 12879, 24420, 2539, 13, 50600, 50600, 400, 321, 603, 751, 466, 341, 1596, 257, 688, 294, 264, 3480, 3259, 13, 50866, 50866, 583, 337, 586, 11, 718, 311, 751, 466, 46533, 2539, 13, 50964, 50964, 16348, 12, 48172, 24420, 2539, 11, 291, 727, 519, 295, 309, 51038, 51038, 382, 733, 295, 257, 862, 322, 46533, 2539, 13, 51214, 51214, 407, 264, 5164, 2316, 295, 5102, 11150, 11, 3479, 51370, 51370, 2539, 11, 293, 46533, 2539, 11, 3297, 516, 646, 51472, 51472, 281, 264, 3469, 2625, 82, 420, 264, 4060, 82, 11, 307, 264, 1558, 51614, 51614, 538, 597, 291, 747, 257, 8936, 6358, 11, 718, 311, 584, 364, 3256, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15564637672244094, "compression_ratio": 1.8937007874015748, "no_speech_prob": 8.395375516556669e-06}, {"id": 39, "seek": 8496, "start": 101.96, "end": 105.08, "text": " So the traditional model of pattern recognition, machine", "tokens": [50364, 400, 257, 2636, 24709, 307, 2698, 12, 48172, 24420, 2539, 50550, 50550, 420, 2693, 12879, 24420, 2539, 13, 50600, 50600, 400, 321, 603, 751, 466, 341, 1596, 257, 688, 294, 264, 3480, 3259, 13, 50866, 50866, 583, 337, 586, 11, 718, 311, 751, 466, 46533, 2539, 13, 50964, 50964, 16348, 12, 48172, 24420, 2539, 11, 291, 727, 519, 295, 309, 51038, 51038, 382, 733, 295, 257, 862, 322, 46533, 2539, 13, 51214, 51214, 407, 264, 5164, 2316, 295, 5102, 11150, 11, 3479, 51370, 51370, 2539, 11, 293, 46533, 2539, 11, 3297, 516, 646, 51472, 51472, 281, 264, 3469, 2625, 82, 420, 264, 4060, 82, 11, 307, 264, 1558, 51614, 51614, 538, 597, 291, 747, 257, 8936, 6358, 11, 718, 311, 584, 364, 3256, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15564637672244094, "compression_ratio": 1.8937007874015748, "no_speech_prob": 8.395375516556669e-06}, {"id": 40, "seek": 8496, "start": 105.08, "end": 107.11999999999999, "text": " learning, and supervised learning, certainly going back", "tokens": [50364, 400, 257, 2636, 24709, 307, 2698, 12, 48172, 24420, 2539, 50550, 50550, 420, 2693, 12879, 24420, 2539, 13, 50600, 50600, 400, 321, 603, 751, 466, 341, 1596, 257, 688, 294, 264, 3480, 3259, 13, 50866, 50866, 583, 337, 586, 11, 718, 311, 751, 466, 46533, 2539, 13, 50964, 50964, 16348, 12, 48172, 24420, 2539, 11, 291, 727, 519, 295, 309, 51038, 51038, 382, 733, 295, 257, 862, 322, 46533, 2539, 13, 51214, 51214, 407, 264, 5164, 2316, 295, 5102, 11150, 11, 3479, 51370, 51370, 2539, 11, 293, 46533, 2539, 11, 3297, 516, 646, 51472, 51472, 281, 264, 3469, 2625, 82, 420, 264, 4060, 82, 11, 307, 264, 1558, 51614, 51614, 538, 597, 291, 747, 257, 8936, 6358, 11, 718, 311, 584, 364, 3256, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15564637672244094, "compression_ratio": 1.8937007874015748, "no_speech_prob": 8.395375516556669e-06}, {"id": 41, "seek": 8496, "start": 107.11999999999999, "end": 109.96, "text": " to the late 50s or the 60s, is the idea", "tokens": [50364, 400, 257, 2636, 24709, 307, 2698, 12, 48172, 24420, 2539, 50550, 50550, 420, 2693, 12879, 24420, 2539, 13, 50600, 50600, 400, 321, 603, 751, 466, 341, 1596, 257, 688, 294, 264, 3480, 3259, 13, 50866, 50866, 583, 337, 586, 11, 718, 311, 751, 466, 46533, 2539, 13, 50964, 50964, 16348, 12, 48172, 24420, 2539, 11, 291, 727, 519, 295, 309, 51038, 51038, 382, 733, 295, 257, 862, 322, 46533, 2539, 13, 51214, 51214, 407, 264, 5164, 2316, 295, 5102, 11150, 11, 3479, 51370, 51370, 2539, 11, 293, 46533, 2539, 11, 3297, 516, 646, 51472, 51472, 281, 264, 3469, 2625, 82, 420, 264, 4060, 82, 11, 307, 264, 1558, 51614, 51614, 538, 597, 291, 747, 257, 8936, 6358, 11, 718, 311, 584, 364, 3256, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15564637672244094, "compression_ratio": 1.8937007874015748, "no_speech_prob": 8.395375516556669e-06}, {"id": 42, "seek": 8496, "start": 109.96, "end": 112.83999999999999, "text": " by which you take a raw signal, let's say an image", "tokens": [50364, 400, 257, 2636, 24709, 307, 2698, 12, 48172, 24420, 2539, 50550, 50550, 420, 2693, 12879, 24420, 2539, 13, 50600, 50600, 400, 321, 603, 751, 466, 341, 1596, 257, 688, 294, 264, 3480, 3259, 13, 50866, 50866, 583, 337, 586, 11, 718, 311, 751, 466, 46533, 2539, 13, 50964, 50964, 16348, 12, 48172, 24420, 2539, 11, 291, 727, 519, 295, 309, 51038, 51038, 382, 733, 295, 257, 862, 322, 46533, 2539, 13, 51214, 51214, 407, 264, 5164, 2316, 295, 5102, 11150, 11, 3479, 51370, 51370, 2539, 11, 293, 46533, 2539, 11, 3297, 516, 646, 51472, 51472, 281, 264, 3469, 2625, 82, 420, 264, 4060, 82, 11, 307, 264, 1558, 51614, 51614, 538, 597, 291, 747, 257, 8936, 6358, 11, 718, 311, 584, 364, 3256, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15564637672244094, "compression_ratio": 1.8937007874015748, "no_speech_prob": 8.395375516556669e-06}, {"id": 43, "seek": 11284, "start": 112.84, "end": 116.04, "text": " or an audio signal or a set of features representing", "tokens": [50364, 420, 364, 6278, 6358, 420, 257, 992, 295, 4122, 13460, 50524, 50524, 364, 2657, 11, 293, 550, 291, 1261, 309, 666, 257, 10290, 50738, 50738, 1228, 257, 4111, 8947, 284, 11, 597, 294, 264, 1791, 390, 38648, 13, 50992, 50992, 400, 550, 291, 747, 300, 10290, 11, 51088, 51088, 597, 307, 5101, 294, 264, 1254, 295, 257, 8062, 420, 257, 3199, 51220, 51220, 295, 3547, 420, 512, 733, 295, 40863, 11, 51310, 51310, 257, 2120, 327, 332, 11075, 10225, 11, 457, 2171, 727, 51454, 51454, 312, 257, 819, 2010, 295, 10290, 13, 51550, 51550, 400, 291, 3154, 300, 281, 257, 3847, 712, 1508, 9902, 13, 51702, 51702, 407, 341, 307, 689, 264, 2539, 2516, 644, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.12174912293752034, "compression_ratio": 1.7961538461538462, "no_speech_prob": 3.0235973099479452e-05}, {"id": 44, "seek": 11284, "start": 116.04, "end": 120.32000000000001, "text": " an object, and then you turn it into a representation", "tokens": [50364, 420, 364, 6278, 6358, 420, 257, 992, 295, 4122, 13460, 50524, 50524, 364, 2657, 11, 293, 550, 291, 1261, 309, 666, 257, 10290, 50738, 50738, 1228, 257, 4111, 8947, 284, 11, 597, 294, 264, 1791, 390, 38648, 13, 50992, 50992, 400, 550, 291, 747, 300, 10290, 11, 51088, 51088, 597, 307, 5101, 294, 264, 1254, 295, 257, 8062, 420, 257, 3199, 51220, 51220, 295, 3547, 420, 512, 733, 295, 40863, 11, 51310, 51310, 257, 2120, 327, 332, 11075, 10225, 11, 457, 2171, 727, 51454, 51454, 312, 257, 819, 2010, 295, 10290, 13, 51550, 51550, 400, 291, 3154, 300, 281, 257, 3847, 712, 1508, 9902, 13, 51702, 51702, 407, 341, 307, 689, 264, 2539, 2516, 644, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.12174912293752034, "compression_ratio": 1.7961538461538462, "no_speech_prob": 3.0235973099479452e-05}, {"id": 45, "seek": 11284, "start": 120.32000000000001, "end": 125.4, "text": " using a feature extractor, which in the past was engineered.", "tokens": [50364, 420, 364, 6278, 6358, 420, 257, 992, 295, 4122, 13460, 50524, 50524, 364, 2657, 11, 293, 550, 291, 1261, 309, 666, 257, 10290, 50738, 50738, 1228, 257, 4111, 8947, 284, 11, 597, 294, 264, 1791, 390, 38648, 13, 50992, 50992, 400, 550, 291, 747, 300, 10290, 11, 51088, 51088, 597, 307, 5101, 294, 264, 1254, 295, 257, 8062, 420, 257, 3199, 51220, 51220, 295, 3547, 420, 512, 733, 295, 40863, 11, 51310, 51310, 257, 2120, 327, 332, 11075, 10225, 11, 457, 2171, 727, 51454, 51454, 312, 257, 819, 2010, 295, 10290, 13, 51550, 51550, 400, 291, 3154, 300, 281, 257, 3847, 712, 1508, 9902, 13, 51702, 51702, 407, 341, 307, 689, 264, 2539, 2516, 644, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.12174912293752034, "compression_ratio": 1.7961538461538462, "no_speech_prob": 3.0235973099479452e-05}, {"id": 46, "seek": 11284, "start": 125.4, "end": 127.32000000000001, "text": " And then you take that representation,", "tokens": [50364, 420, 364, 6278, 6358, 420, 257, 992, 295, 4122, 13460, 50524, 50524, 364, 2657, 11, 293, 550, 291, 1261, 309, 666, 257, 10290, 50738, 50738, 1228, 257, 4111, 8947, 284, 11, 597, 294, 264, 1791, 390, 38648, 13, 50992, 50992, 400, 550, 291, 747, 300, 10290, 11, 51088, 51088, 597, 307, 5101, 294, 264, 1254, 295, 257, 8062, 420, 257, 3199, 51220, 51220, 295, 3547, 420, 512, 733, 295, 40863, 11, 51310, 51310, 257, 2120, 327, 332, 11075, 10225, 11, 457, 2171, 727, 51454, 51454, 312, 257, 819, 2010, 295, 10290, 13, 51550, 51550, 400, 291, 3154, 300, 281, 257, 3847, 712, 1508, 9902, 13, 51702, 51702, 407, 341, 307, 689, 264, 2539, 2516, 644, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.12174912293752034, "compression_ratio": 1.7961538461538462, "no_speech_prob": 3.0235973099479452e-05}, {"id": 47, "seek": 11284, "start": 127.32000000000001, "end": 129.96, "text": " which is generally in the form of a vector or a table", "tokens": [50364, 420, 364, 6278, 6358, 420, 257, 992, 295, 4122, 13460, 50524, 50524, 364, 2657, 11, 293, 550, 291, 1261, 309, 666, 257, 10290, 50738, 50738, 1228, 257, 4111, 8947, 284, 11, 597, 294, 264, 1791, 390, 38648, 13, 50992, 50992, 400, 550, 291, 747, 300, 10290, 11, 51088, 51088, 597, 307, 5101, 294, 264, 1254, 295, 257, 8062, 420, 257, 3199, 51220, 51220, 295, 3547, 420, 512, 733, 295, 40863, 11, 51310, 51310, 257, 2120, 327, 332, 11075, 10225, 11, 457, 2171, 727, 51454, 51454, 312, 257, 819, 2010, 295, 10290, 13, 51550, 51550, 400, 291, 3154, 300, 281, 257, 3847, 712, 1508, 9902, 13, 51702, 51702, 407, 341, 307, 689, 264, 2539, 2516, 644, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.12174912293752034, "compression_ratio": 1.7961538461538462, "no_speech_prob": 3.0235973099479452e-05}, {"id": 48, "seek": 11284, "start": 129.96, "end": 131.76, "text": " of numbers or some kind of tensor,", "tokens": [50364, 420, 364, 6278, 6358, 420, 257, 992, 295, 4122, 13460, 50524, 50524, 364, 2657, 11, 293, 550, 291, 1261, 309, 666, 257, 10290, 50738, 50738, 1228, 257, 4111, 8947, 284, 11, 597, 294, 264, 1791, 390, 38648, 13, 50992, 50992, 400, 550, 291, 747, 300, 10290, 11, 51088, 51088, 597, 307, 5101, 294, 264, 1254, 295, 257, 8062, 420, 257, 3199, 51220, 51220, 295, 3547, 420, 512, 733, 295, 40863, 11, 51310, 51310, 257, 2120, 327, 332, 11075, 10225, 11, 457, 2171, 727, 51454, 51454, 312, 257, 819, 2010, 295, 10290, 13, 51550, 51550, 400, 291, 3154, 300, 281, 257, 3847, 712, 1508, 9902, 13, 51702, 51702, 407, 341, 307, 689, 264, 2539, 2516, 644, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.12174912293752034, "compression_ratio": 1.7961538461538462, "no_speech_prob": 3.0235973099479452e-05}, {"id": 49, "seek": 11284, "start": 131.76, "end": 134.64000000000001, "text": " a multidimensional array, but sometimes could", "tokens": [50364, 420, 364, 6278, 6358, 420, 257, 992, 295, 4122, 13460, 50524, 50524, 364, 2657, 11, 293, 550, 291, 1261, 309, 666, 257, 10290, 50738, 50738, 1228, 257, 4111, 8947, 284, 11, 597, 294, 264, 1791, 390, 38648, 13, 50992, 50992, 400, 550, 291, 747, 300, 10290, 11, 51088, 51088, 597, 307, 5101, 294, 264, 1254, 295, 257, 8062, 420, 257, 3199, 51220, 51220, 295, 3547, 420, 512, 733, 295, 40863, 11, 51310, 51310, 257, 2120, 327, 332, 11075, 10225, 11, 457, 2171, 727, 51454, 51454, 312, 257, 819, 2010, 295, 10290, 13, 51550, 51550, 400, 291, 3154, 300, 281, 257, 3847, 712, 1508, 9902, 13, 51702, 51702, 407, 341, 307, 689, 264, 2539, 2516, 644, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.12174912293752034, "compression_ratio": 1.7961538461538462, "no_speech_prob": 3.0235973099479452e-05}, {"id": 50, "seek": 11284, "start": 134.64000000000001, "end": 136.56, "text": " be a different type of representation.", "tokens": [50364, 420, 364, 6278, 6358, 420, 257, 992, 295, 4122, 13460, 50524, 50524, 364, 2657, 11, 293, 550, 291, 1261, 309, 666, 257, 10290, 50738, 50738, 1228, 257, 4111, 8947, 284, 11, 597, 294, 264, 1791, 390, 38648, 13, 50992, 50992, 400, 550, 291, 747, 300, 10290, 11, 51088, 51088, 597, 307, 5101, 294, 264, 1254, 295, 257, 8062, 420, 257, 3199, 51220, 51220, 295, 3547, 420, 512, 733, 295, 40863, 11, 51310, 51310, 257, 2120, 327, 332, 11075, 10225, 11, 457, 2171, 727, 51454, 51454, 312, 257, 819, 2010, 295, 10290, 13, 51550, 51550, 400, 291, 3154, 300, 281, 257, 3847, 712, 1508, 9902, 13, 51702, 51702, 407, 341, 307, 689, 264, 2539, 2516, 644, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.12174912293752034, "compression_ratio": 1.7961538461538462, "no_speech_prob": 3.0235973099479452e-05}, {"id": 51, "seek": 11284, "start": 136.56, "end": 139.6, "text": " And you feed that to a trainable classifier.", "tokens": [50364, 420, 364, 6278, 6358, 420, 257, 992, 295, 4122, 13460, 50524, 50524, 364, 2657, 11, 293, 550, 291, 1261, 309, 666, 257, 10290, 50738, 50738, 1228, 257, 4111, 8947, 284, 11, 597, 294, 264, 1791, 390, 38648, 13, 50992, 50992, 400, 550, 291, 747, 300, 10290, 11, 51088, 51088, 597, 307, 5101, 294, 264, 1254, 295, 257, 8062, 420, 257, 3199, 51220, 51220, 295, 3547, 420, 512, 733, 295, 40863, 11, 51310, 51310, 257, 2120, 327, 332, 11075, 10225, 11, 457, 2171, 727, 51454, 51454, 312, 257, 819, 2010, 295, 10290, 13, 51550, 51550, 400, 291, 3154, 300, 281, 257, 3847, 712, 1508, 9902, 13, 51702, 51702, 407, 341, 307, 689, 264, 2539, 2516, 644, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.12174912293752034, "compression_ratio": 1.7961538461538462, "no_speech_prob": 3.0235973099479452e-05}, {"id": 52, "seek": 11284, "start": 139.6, "end": 142.16, "text": " So this is where the learning takes part.", "tokens": [50364, 420, 364, 6278, 6358, 420, 257, 992, 295, 4122, 13460, 50524, 50524, 364, 2657, 11, 293, 550, 291, 1261, 309, 666, 257, 10290, 50738, 50738, 1228, 257, 4111, 8947, 284, 11, 597, 294, 264, 1791, 390, 38648, 13, 50992, 50992, 400, 550, 291, 747, 300, 10290, 11, 51088, 51088, 597, 307, 5101, 294, 264, 1254, 295, 257, 8062, 420, 257, 3199, 51220, 51220, 295, 3547, 420, 512, 733, 295, 40863, 11, 51310, 51310, 257, 2120, 327, 332, 11075, 10225, 11, 457, 2171, 727, 51454, 51454, 312, 257, 819, 2010, 295, 10290, 13, 51550, 51550, 400, 291, 3154, 300, 281, 257, 3847, 712, 1508, 9902, 13, 51702, 51702, 407, 341, 307, 689, 264, 2539, 2516, 644, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.12174912293752034, "compression_ratio": 1.7961538461538462, "no_speech_prob": 3.0235973099479452e-05}, {"id": 53, "seek": 14216, "start": 142.16, "end": 144.2, "text": " So this is the classical model.", "tokens": [50364, 407, 341, 307, 264, 13735, 2316, 13, 50466, 50466, 400, 309, 311, 920, 3743, 13, 50526, 50526, 467, 311, 920, 1143, 257, 688, 13, 50608, 50608, 583, 1936, 11, 437, 2452, 2539, 575, 1096, 50694, 50694, 307, 7406, 341, 1333, 295, 9688, 1011, 7043, 50884, 50884, 295, 264, 4111, 8947, 284, 538, 257, 8630, 295, 3847, 712, 16679, 11, 51124, 51124, 498, 291, 528, 13, 51150, 51150, 407, 294, 2452, 2539, 11, 264, 2135, 1558, 295, 2452, 2539, 51264, 51264, 293, 264, 787, 1778, 983, 309, 311, 1219, 2452, 51352, 51352, 307, 300, 321, 8630, 257, 3840, 295, 16679, 11, 1184, 295, 597, 51546, 51546, 35592, 264, 4846, 257, 707, 857, 666, 746, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13698075775407317, "compression_ratio": 1.6848249027237354, "no_speech_prob": 5.771386895503383e-06}, {"id": 54, "seek": 14216, "start": 144.2, "end": 145.4, "text": " And it's still popular.", "tokens": [50364, 407, 341, 307, 264, 13735, 2316, 13, 50466, 50466, 400, 309, 311, 920, 3743, 13, 50526, 50526, 467, 311, 920, 1143, 257, 688, 13, 50608, 50608, 583, 1936, 11, 437, 2452, 2539, 575, 1096, 50694, 50694, 307, 7406, 341, 1333, 295, 9688, 1011, 7043, 50884, 50884, 295, 264, 4111, 8947, 284, 538, 257, 8630, 295, 3847, 712, 16679, 11, 51124, 51124, 498, 291, 528, 13, 51150, 51150, 407, 294, 2452, 2539, 11, 264, 2135, 1558, 295, 2452, 2539, 51264, 51264, 293, 264, 787, 1778, 983, 309, 311, 1219, 2452, 51352, 51352, 307, 300, 321, 8630, 257, 3840, 295, 16679, 11, 1184, 295, 597, 51546, 51546, 35592, 264, 4846, 257, 707, 857, 666, 746, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13698075775407317, "compression_ratio": 1.6848249027237354, "no_speech_prob": 5.771386895503383e-06}, {"id": 55, "seek": 14216, "start": 145.4, "end": 147.04, "text": " It's still used a lot.", "tokens": [50364, 407, 341, 307, 264, 13735, 2316, 13, 50466, 50466, 400, 309, 311, 920, 3743, 13, 50526, 50526, 467, 311, 920, 1143, 257, 688, 13, 50608, 50608, 583, 1936, 11, 437, 2452, 2539, 575, 1096, 50694, 50694, 307, 7406, 341, 1333, 295, 9688, 1011, 7043, 50884, 50884, 295, 264, 4111, 8947, 284, 538, 257, 8630, 295, 3847, 712, 16679, 11, 51124, 51124, 498, 291, 528, 13, 51150, 51150, 407, 294, 2452, 2539, 11, 264, 2135, 1558, 295, 2452, 2539, 51264, 51264, 293, 264, 787, 1778, 983, 309, 311, 1219, 2452, 51352, 51352, 307, 300, 321, 8630, 257, 3840, 295, 16679, 11, 1184, 295, 597, 51546, 51546, 35592, 264, 4846, 257, 707, 857, 666, 746, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13698075775407317, "compression_ratio": 1.6848249027237354, "no_speech_prob": 5.771386895503383e-06}, {"id": 56, "seek": 14216, "start": 147.04, "end": 148.76, "text": " But basically, what deep learning has done", "tokens": [50364, 407, 341, 307, 264, 13735, 2316, 13, 50466, 50466, 400, 309, 311, 920, 3743, 13, 50526, 50526, 467, 311, 920, 1143, 257, 688, 13, 50608, 50608, 583, 1936, 11, 437, 2452, 2539, 575, 1096, 50694, 50694, 307, 7406, 341, 1333, 295, 9688, 1011, 7043, 50884, 50884, 295, 264, 4111, 8947, 284, 538, 257, 8630, 295, 3847, 712, 16679, 11, 51124, 51124, 498, 291, 528, 13, 51150, 51150, 407, 294, 2452, 2539, 11, 264, 2135, 1558, 295, 2452, 2539, 51264, 51264, 293, 264, 787, 1778, 983, 309, 311, 1219, 2452, 51352, 51352, 307, 300, 321, 8630, 257, 3840, 295, 16679, 11, 1184, 295, 597, 51546, 51546, 35592, 264, 4846, 257, 707, 857, 666, 746, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13698075775407317, "compression_ratio": 1.6848249027237354, "no_speech_prob": 5.771386895503383e-06}, {"id": 57, "seek": 14216, "start": 148.76, "end": 152.56, "text": " is replace this sort of manual hand engineering", "tokens": [50364, 407, 341, 307, 264, 13735, 2316, 13, 50466, 50466, 400, 309, 311, 920, 3743, 13, 50526, 50526, 467, 311, 920, 1143, 257, 688, 13, 50608, 50608, 583, 1936, 11, 437, 2452, 2539, 575, 1096, 50694, 50694, 307, 7406, 341, 1333, 295, 9688, 1011, 7043, 50884, 50884, 295, 264, 4111, 8947, 284, 538, 257, 8630, 295, 3847, 712, 16679, 11, 51124, 51124, 498, 291, 528, 13, 51150, 51150, 407, 294, 2452, 2539, 11, 264, 2135, 1558, 295, 2452, 2539, 51264, 51264, 293, 264, 787, 1778, 983, 309, 311, 1219, 2452, 51352, 51352, 307, 300, 321, 8630, 257, 3840, 295, 16679, 11, 1184, 295, 597, 51546, 51546, 35592, 264, 4846, 257, 707, 857, 666, 746, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13698075775407317, "compression_ratio": 1.6848249027237354, "no_speech_prob": 5.771386895503383e-06}, {"id": 58, "seek": 14216, "start": 152.56, "end": 157.35999999999999, "text": " of the feature extractor by a stack of trainable modules,", "tokens": [50364, 407, 341, 307, 264, 13735, 2316, 13, 50466, 50466, 400, 309, 311, 920, 3743, 13, 50526, 50526, 467, 311, 920, 1143, 257, 688, 13, 50608, 50608, 583, 1936, 11, 437, 2452, 2539, 575, 1096, 50694, 50694, 307, 7406, 341, 1333, 295, 9688, 1011, 7043, 50884, 50884, 295, 264, 4111, 8947, 284, 538, 257, 8630, 295, 3847, 712, 16679, 11, 51124, 51124, 498, 291, 528, 13, 51150, 51150, 407, 294, 2452, 2539, 11, 264, 2135, 1558, 295, 2452, 2539, 51264, 51264, 293, 264, 787, 1778, 983, 309, 311, 1219, 2452, 51352, 51352, 307, 300, 321, 8630, 257, 3840, 295, 16679, 11, 1184, 295, 597, 51546, 51546, 35592, 264, 4846, 257, 707, 857, 666, 746, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13698075775407317, "compression_ratio": 1.6848249027237354, "no_speech_prob": 5.771386895503383e-06}, {"id": 59, "seek": 14216, "start": 157.35999999999999, "end": 157.88, "text": " if you want.", "tokens": [50364, 407, 341, 307, 264, 13735, 2316, 13, 50466, 50466, 400, 309, 311, 920, 3743, 13, 50526, 50526, 467, 311, 920, 1143, 257, 688, 13, 50608, 50608, 583, 1936, 11, 437, 2452, 2539, 575, 1096, 50694, 50694, 307, 7406, 341, 1333, 295, 9688, 1011, 7043, 50884, 50884, 295, 264, 4111, 8947, 284, 538, 257, 8630, 295, 3847, 712, 16679, 11, 51124, 51124, 498, 291, 528, 13, 51150, 51150, 407, 294, 2452, 2539, 11, 264, 2135, 1558, 295, 2452, 2539, 51264, 51264, 293, 264, 787, 1778, 983, 309, 311, 1219, 2452, 51352, 51352, 307, 300, 321, 8630, 257, 3840, 295, 16679, 11, 1184, 295, 597, 51546, 51546, 35592, 264, 4846, 257, 707, 857, 666, 746, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13698075775407317, "compression_ratio": 1.6848249027237354, "no_speech_prob": 5.771386895503383e-06}, {"id": 60, "seek": 14216, "start": 157.88, "end": 160.16, "text": " So in deep learning, the main idea of deep learning", "tokens": [50364, 407, 341, 307, 264, 13735, 2316, 13, 50466, 50466, 400, 309, 311, 920, 3743, 13, 50526, 50526, 467, 311, 920, 1143, 257, 688, 13, 50608, 50608, 583, 1936, 11, 437, 2452, 2539, 575, 1096, 50694, 50694, 307, 7406, 341, 1333, 295, 9688, 1011, 7043, 50884, 50884, 295, 264, 4111, 8947, 284, 538, 257, 8630, 295, 3847, 712, 16679, 11, 51124, 51124, 498, 291, 528, 13, 51150, 51150, 407, 294, 2452, 2539, 11, 264, 2135, 1558, 295, 2452, 2539, 51264, 51264, 293, 264, 787, 1778, 983, 309, 311, 1219, 2452, 51352, 51352, 307, 300, 321, 8630, 257, 3840, 295, 16679, 11, 1184, 295, 597, 51546, 51546, 35592, 264, 4846, 257, 707, 857, 666, 746, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13698075775407317, "compression_ratio": 1.6848249027237354, "no_speech_prob": 5.771386895503383e-06}, {"id": 61, "seek": 14216, "start": 160.16, "end": 161.92, "text": " and the only reason why it's called deep", "tokens": [50364, 407, 341, 307, 264, 13735, 2316, 13, 50466, 50466, 400, 309, 311, 920, 3743, 13, 50526, 50526, 467, 311, 920, 1143, 257, 688, 13, 50608, 50608, 583, 1936, 11, 437, 2452, 2539, 575, 1096, 50694, 50694, 307, 7406, 341, 1333, 295, 9688, 1011, 7043, 50884, 50884, 295, 264, 4111, 8947, 284, 538, 257, 8630, 295, 3847, 712, 16679, 11, 51124, 51124, 498, 291, 528, 13, 51150, 51150, 407, 294, 2452, 2539, 11, 264, 2135, 1558, 295, 2452, 2539, 51264, 51264, 293, 264, 787, 1778, 983, 309, 311, 1219, 2452, 51352, 51352, 307, 300, 321, 8630, 257, 3840, 295, 16679, 11, 1184, 295, 597, 51546, 51546, 35592, 264, 4846, 257, 707, 857, 666, 746, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13698075775407317, "compression_ratio": 1.6848249027237354, "no_speech_prob": 5.771386895503383e-06}, {"id": 62, "seek": 14216, "start": 161.92, "end": 165.8, "text": " is that we stack a bunch of modules, each of which", "tokens": [50364, 407, 341, 307, 264, 13735, 2316, 13, 50466, 50466, 400, 309, 311, 920, 3743, 13, 50526, 50526, 467, 311, 920, 1143, 257, 688, 13, 50608, 50608, 583, 1936, 11, 437, 2452, 2539, 575, 1096, 50694, 50694, 307, 7406, 341, 1333, 295, 9688, 1011, 7043, 50884, 50884, 295, 264, 4111, 8947, 284, 538, 257, 8630, 295, 3847, 712, 16679, 11, 51124, 51124, 498, 291, 528, 13, 51150, 51150, 407, 294, 2452, 2539, 11, 264, 2135, 1558, 295, 2452, 2539, 51264, 51264, 293, 264, 787, 1778, 983, 309, 311, 1219, 2452, 51352, 51352, 307, 300, 321, 8630, 257, 3840, 295, 16679, 11, 1184, 295, 597, 51546, 51546, 35592, 264, 4846, 257, 707, 857, 666, 746, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13698075775407317, "compression_ratio": 1.6848249027237354, "no_speech_prob": 5.771386895503383e-06}, {"id": 63, "seek": 14216, "start": 165.8, "end": 168.56, "text": " transforms the input a little bit into something", "tokens": [50364, 407, 341, 307, 264, 13735, 2316, 13, 50466, 50466, 400, 309, 311, 920, 3743, 13, 50526, 50526, 467, 311, 920, 1143, 257, 688, 13, 50608, 50608, 583, 1936, 11, 437, 2452, 2539, 575, 1096, 50694, 50694, 307, 7406, 341, 1333, 295, 9688, 1011, 7043, 50884, 50884, 295, 264, 4111, 8947, 284, 538, 257, 8630, 295, 3847, 712, 16679, 11, 51124, 51124, 498, 291, 528, 13, 51150, 51150, 407, 294, 2452, 2539, 11, 264, 2135, 1558, 295, 2452, 2539, 51264, 51264, 293, 264, 787, 1778, 983, 309, 311, 1219, 2452, 51352, 51352, 307, 300, 321, 8630, 257, 3840, 295, 16679, 11, 1184, 295, 597, 51546, 51546, 35592, 264, 4846, 257, 707, 857, 666, 746, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.13698075775407317, "compression_ratio": 1.6848249027237354, "no_speech_prob": 5.771386895503383e-06}, {"id": 64, "seek": 16856, "start": 168.56, "end": 173.16, "text": " that's going to slightly higher level of abstraction,", "tokens": [50364, 300, 311, 516, 281, 4748, 2946, 1496, 295, 37765, 11, 50594, 50594, 498, 291, 528, 13, 50654, 50654, 400, 550, 321, 3847, 264, 2302, 1185, 917, 281, 917, 13, 50868, 50868, 407, 286, 10379, 729, 1333, 295, 7022, 742, 16679, 51186, 51186, 281, 13330, 264, 2306, 300, 366, 3847, 712, 13, 51270, 51270, 400, 264, 3344, 16679, 366, 264, 6806, 2306, 11, 51436, 51436, 264, 1011, 38648, 2306, 13, 51554, 51554, 407, 300, 311, 983, 2452, 2539, 307, 1219, 2452, 13, 51656, 51656, 492, 8630, 3866, 7914, 295, 3847, 712, 721, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1322790582974752, "compression_ratio": 1.639269406392694, "no_speech_prob": 1.568752486491576e-05}, {"id": 65, "seek": 16856, "start": 173.16, "end": 174.36, "text": " if you want.", "tokens": [50364, 300, 311, 516, 281, 4748, 2946, 1496, 295, 37765, 11, 50594, 50594, 498, 291, 528, 13, 50654, 50654, 400, 550, 321, 3847, 264, 2302, 1185, 917, 281, 917, 13, 50868, 50868, 407, 286, 10379, 729, 1333, 295, 7022, 742, 16679, 51186, 51186, 281, 13330, 264, 2306, 300, 366, 3847, 712, 13, 51270, 51270, 400, 264, 3344, 16679, 366, 264, 6806, 2306, 11, 51436, 51436, 264, 1011, 38648, 2306, 13, 51554, 51554, 407, 300, 311, 983, 2452, 2539, 307, 1219, 2452, 13, 51656, 51656, 492, 8630, 3866, 7914, 295, 3847, 712, 721, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1322790582974752, "compression_ratio": 1.639269406392694, "no_speech_prob": 1.568752486491576e-05}, {"id": 66, "seek": 16856, "start": 174.36, "end": 178.64000000000001, "text": " And then we train the entire system end to end.", "tokens": [50364, 300, 311, 516, 281, 4748, 2946, 1496, 295, 37765, 11, 50594, 50594, 498, 291, 528, 13, 50654, 50654, 400, 550, 321, 3847, 264, 2302, 1185, 917, 281, 917, 13, 50868, 50868, 407, 286, 10379, 729, 1333, 295, 7022, 742, 16679, 51186, 51186, 281, 13330, 264, 2306, 300, 366, 3847, 712, 13, 51270, 51270, 400, 264, 3344, 16679, 366, 264, 6806, 2306, 11, 51436, 51436, 264, 1011, 38648, 2306, 13, 51554, 51554, 407, 300, 311, 983, 2452, 2539, 307, 1219, 2452, 13, 51656, 51656, 492, 8630, 3866, 7914, 295, 3847, 712, 721, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1322790582974752, "compression_ratio": 1.639269406392694, "no_speech_prob": 1.568752486491576e-05}, {"id": 67, "seek": 16856, "start": 178.64000000000001, "end": 185.0, "text": " So I represented those sort of pinkish modules", "tokens": [50364, 300, 311, 516, 281, 4748, 2946, 1496, 295, 37765, 11, 50594, 50594, 498, 291, 528, 13, 50654, 50654, 400, 550, 321, 3847, 264, 2302, 1185, 917, 281, 917, 13, 50868, 50868, 407, 286, 10379, 729, 1333, 295, 7022, 742, 16679, 51186, 51186, 281, 13330, 264, 2306, 300, 366, 3847, 712, 13, 51270, 51270, 400, 264, 3344, 16679, 366, 264, 6806, 2306, 11, 51436, 51436, 264, 1011, 38648, 2306, 13, 51554, 51554, 407, 300, 311, 983, 2452, 2539, 307, 1219, 2452, 13, 51656, 51656, 492, 8630, 3866, 7914, 295, 3847, 712, 721, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1322790582974752, "compression_ratio": 1.639269406392694, "no_speech_prob": 1.568752486491576e-05}, {"id": 68, "seek": 16856, "start": 185.0, "end": 186.68, "text": " to indicate the ones that are trainable.", "tokens": [50364, 300, 311, 516, 281, 4748, 2946, 1496, 295, 37765, 11, 50594, 50594, 498, 291, 528, 13, 50654, 50654, 400, 550, 321, 3847, 264, 2302, 1185, 917, 281, 917, 13, 50868, 50868, 407, 286, 10379, 729, 1333, 295, 7022, 742, 16679, 51186, 51186, 281, 13330, 264, 2306, 300, 366, 3847, 712, 13, 51270, 51270, 400, 264, 3344, 16679, 366, 264, 6806, 2306, 11, 51436, 51436, 264, 1011, 38648, 2306, 13, 51554, 51554, 407, 300, 311, 983, 2452, 2539, 307, 1219, 2452, 13, 51656, 51656, 492, 8630, 3866, 7914, 295, 3847, 712, 721, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1322790582974752, "compression_ratio": 1.639269406392694, "no_speech_prob": 1.568752486491576e-05}, {"id": 69, "seek": 16856, "start": 186.68, "end": 190.0, "text": " And the blue modules are the fixed ones,", "tokens": [50364, 300, 311, 516, 281, 4748, 2946, 1496, 295, 37765, 11, 50594, 50594, 498, 291, 528, 13, 50654, 50654, 400, 550, 321, 3847, 264, 2302, 1185, 917, 281, 917, 13, 50868, 50868, 407, 286, 10379, 729, 1333, 295, 7022, 742, 16679, 51186, 51186, 281, 13330, 264, 2306, 300, 366, 3847, 712, 13, 51270, 51270, 400, 264, 3344, 16679, 366, 264, 6806, 2306, 11, 51436, 51436, 264, 1011, 38648, 2306, 13, 51554, 51554, 407, 300, 311, 983, 2452, 2539, 307, 1219, 2452, 13, 51656, 51656, 492, 8630, 3866, 7914, 295, 3847, 712, 721, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1322790582974752, "compression_ratio": 1.639269406392694, "no_speech_prob": 1.568752486491576e-05}, {"id": 70, "seek": 16856, "start": 190.0, "end": 192.36, "text": " the hand engineered ones.", "tokens": [50364, 300, 311, 516, 281, 4748, 2946, 1496, 295, 37765, 11, 50594, 50594, 498, 291, 528, 13, 50654, 50654, 400, 550, 321, 3847, 264, 2302, 1185, 917, 281, 917, 13, 50868, 50868, 407, 286, 10379, 729, 1333, 295, 7022, 742, 16679, 51186, 51186, 281, 13330, 264, 2306, 300, 366, 3847, 712, 13, 51270, 51270, 400, 264, 3344, 16679, 366, 264, 6806, 2306, 11, 51436, 51436, 264, 1011, 38648, 2306, 13, 51554, 51554, 407, 300, 311, 983, 2452, 2539, 307, 1219, 2452, 13, 51656, 51656, 492, 8630, 3866, 7914, 295, 3847, 712, 721, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1322790582974752, "compression_ratio": 1.639269406392694, "no_speech_prob": 1.568752486491576e-05}, {"id": 71, "seek": 16856, "start": 192.36, "end": 194.4, "text": " So that's why deep learning is called deep.", "tokens": [50364, 300, 311, 516, 281, 4748, 2946, 1496, 295, 37765, 11, 50594, 50594, 498, 291, 528, 13, 50654, 50654, 400, 550, 321, 3847, 264, 2302, 1185, 917, 281, 917, 13, 50868, 50868, 407, 286, 10379, 729, 1333, 295, 7022, 742, 16679, 51186, 51186, 281, 13330, 264, 2306, 300, 366, 3847, 712, 13, 51270, 51270, 400, 264, 3344, 16679, 366, 264, 6806, 2306, 11, 51436, 51436, 264, 1011, 38648, 2306, 13, 51554, 51554, 407, 300, 311, 983, 2452, 2539, 307, 1219, 2452, 13, 51656, 51656, 492, 8630, 3866, 7914, 295, 3847, 712, 721, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1322790582974752, "compression_ratio": 1.639269406392694, "no_speech_prob": 1.568752486491576e-05}, {"id": 72, "seek": 16856, "start": 194.4, "end": 196.8, "text": " We stack multiple layers of trainable things.", "tokens": [50364, 300, 311, 516, 281, 4748, 2946, 1496, 295, 37765, 11, 50594, 50594, 498, 291, 528, 13, 50654, 50654, 400, 550, 321, 3847, 264, 2302, 1185, 917, 281, 917, 13, 50868, 50868, 407, 286, 10379, 729, 1333, 295, 7022, 742, 16679, 51186, 51186, 281, 13330, 264, 2306, 300, 366, 3847, 712, 13, 51270, 51270, 400, 264, 3344, 16679, 366, 264, 6806, 2306, 11, 51436, 51436, 264, 1011, 38648, 2306, 13, 51554, 51554, 407, 300, 311, 983, 2452, 2539, 307, 1219, 2452, 13, 51656, 51656, 492, 8630, 3866, 7914, 295, 3847, 712, 721, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1322790582974752, "compression_ratio": 1.639269406392694, "no_speech_prob": 1.568752486491576e-05}, {"id": 73, "seek": 19680, "start": 196.8, "end": 199.60000000000002, "text": " And we train it end to end.", "tokens": [50364, 400, 321, 3847, 309, 917, 281, 917, 13, 50504, 50504, 440, 1558, 337, 341, 1709, 646, 257, 938, 565, 13, 50600, 50600, 440, 8496, 7150, 337, 341, 352, 646, 281, 264, 2062, 281, 3469, 4688, 82, 50856, 50856, 365, 264, 646, 38377, 9284, 11, 50946, 50946, 307, 516, 281, 312, 264, 2135, 3983, 295, 965, 311, 7991, 11, 767, 13, 51196, 51196, 583, 309, 1890, 257, 938, 565, 337, 341, 1558, 51278, 51278, 281, 767, 680, 8768, 473, 293, 1813, 264, 2135, 2290, 51536, 51536, 300, 561, 764, 281, 1322, 3479, 2539, 3652, 13, 51634, 51634, 467, 311, 787, 466, 1266, 924, 1331, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.14448464358294452, "compression_ratio": 1.6808510638297873, "no_speech_prob": 7.070988431223668e-06}, {"id": 74, "seek": 19680, "start": 199.60000000000002, "end": 201.52, "text": " The idea for this goes back a long time.", "tokens": [50364, 400, 321, 3847, 309, 917, 281, 917, 13, 50504, 50504, 440, 1558, 337, 341, 1709, 646, 257, 938, 565, 13, 50600, 50600, 440, 8496, 7150, 337, 341, 352, 646, 281, 264, 2062, 281, 3469, 4688, 82, 50856, 50856, 365, 264, 646, 38377, 9284, 11, 50946, 50946, 307, 516, 281, 312, 264, 2135, 3983, 295, 965, 311, 7991, 11, 767, 13, 51196, 51196, 583, 309, 1890, 257, 938, 565, 337, 341, 1558, 51278, 51278, 281, 767, 680, 8768, 473, 293, 1813, 264, 2135, 2290, 51536, 51536, 300, 561, 764, 281, 1322, 3479, 2539, 3652, 13, 51634, 51634, 467, 311, 787, 466, 1266, 924, 1331, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.14448464358294452, "compression_ratio": 1.6808510638297873, "no_speech_prob": 7.070988431223668e-06}, {"id": 75, "seek": 19680, "start": 201.52, "end": 206.64000000000001, "text": " The practical methods for this go back to the mid to late 80s", "tokens": [50364, 400, 321, 3847, 309, 917, 281, 917, 13, 50504, 50504, 440, 1558, 337, 341, 1709, 646, 257, 938, 565, 13, 50600, 50600, 440, 8496, 7150, 337, 341, 352, 646, 281, 264, 2062, 281, 3469, 4688, 82, 50856, 50856, 365, 264, 646, 38377, 9284, 11, 50946, 50946, 307, 516, 281, 312, 264, 2135, 3983, 295, 965, 311, 7991, 11, 767, 13, 51196, 51196, 583, 309, 1890, 257, 938, 565, 337, 341, 1558, 51278, 51278, 281, 767, 680, 8768, 473, 293, 1813, 264, 2135, 2290, 51536, 51536, 300, 561, 764, 281, 1322, 3479, 2539, 3652, 13, 51634, 51634, 467, 311, 787, 466, 1266, 924, 1331, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.14448464358294452, "compression_ratio": 1.6808510638297873, "no_speech_prob": 7.070988431223668e-06}, {"id": 76, "seek": 19680, "start": 206.64000000000001, "end": 208.44, "text": " with the back propagation algorithm,", "tokens": [50364, 400, 321, 3847, 309, 917, 281, 917, 13, 50504, 50504, 440, 1558, 337, 341, 1709, 646, 257, 938, 565, 13, 50600, 50600, 440, 8496, 7150, 337, 341, 352, 646, 281, 264, 2062, 281, 3469, 4688, 82, 50856, 50856, 365, 264, 646, 38377, 9284, 11, 50946, 50946, 307, 516, 281, 312, 264, 2135, 3983, 295, 965, 311, 7991, 11, 767, 13, 51196, 51196, 583, 309, 1890, 257, 938, 565, 337, 341, 1558, 51278, 51278, 281, 767, 680, 8768, 473, 293, 1813, 264, 2135, 2290, 51536, 51536, 300, 561, 764, 281, 1322, 3479, 2539, 3652, 13, 51634, 51634, 467, 311, 787, 466, 1266, 924, 1331, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.14448464358294452, "compression_ratio": 1.6808510638297873, "no_speech_prob": 7.070988431223668e-06}, {"id": 77, "seek": 19680, "start": 208.44, "end": 213.44, "text": " is going to be the main subject of today's lecture, actually.", "tokens": [50364, 400, 321, 3847, 309, 917, 281, 917, 13, 50504, 50504, 440, 1558, 337, 341, 1709, 646, 257, 938, 565, 13, 50600, 50600, 440, 8496, 7150, 337, 341, 352, 646, 281, 264, 2062, 281, 3469, 4688, 82, 50856, 50856, 365, 264, 646, 38377, 9284, 11, 50946, 50946, 307, 516, 281, 312, 264, 2135, 3983, 295, 965, 311, 7991, 11, 767, 13, 51196, 51196, 583, 309, 1890, 257, 938, 565, 337, 341, 1558, 51278, 51278, 281, 767, 680, 8768, 473, 293, 1813, 264, 2135, 2290, 51536, 51536, 300, 561, 764, 281, 1322, 3479, 2539, 3652, 13, 51634, 51634, 467, 311, 787, 466, 1266, 924, 1331, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.14448464358294452, "compression_ratio": 1.6808510638297873, "no_speech_prob": 7.070988431223668e-06}, {"id": 78, "seek": 19680, "start": 213.44, "end": 215.08, "text": " But it took a long time for this idea", "tokens": [50364, 400, 321, 3847, 309, 917, 281, 917, 13, 50504, 50504, 440, 1558, 337, 341, 1709, 646, 257, 938, 565, 13, 50600, 50600, 440, 8496, 7150, 337, 341, 352, 646, 281, 264, 2062, 281, 3469, 4688, 82, 50856, 50856, 365, 264, 646, 38377, 9284, 11, 50946, 50946, 307, 516, 281, 312, 264, 2135, 3983, 295, 965, 311, 7991, 11, 767, 13, 51196, 51196, 583, 309, 1890, 257, 938, 565, 337, 341, 1558, 51278, 51278, 281, 767, 680, 8768, 473, 293, 1813, 264, 2135, 2290, 51536, 51536, 300, 561, 764, 281, 1322, 3479, 2539, 3652, 13, 51634, 51634, 467, 311, 787, 466, 1266, 924, 1331, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.14448464358294452, "compression_ratio": 1.6808510638297873, "no_speech_prob": 7.070988431223668e-06}, {"id": 79, "seek": 19680, "start": 215.08, "end": 220.24, "text": " to actually percolate and become the main tool", "tokens": [50364, 400, 321, 3847, 309, 917, 281, 917, 13, 50504, 50504, 440, 1558, 337, 341, 1709, 646, 257, 938, 565, 13, 50600, 50600, 440, 8496, 7150, 337, 341, 352, 646, 281, 264, 2062, 281, 3469, 4688, 82, 50856, 50856, 365, 264, 646, 38377, 9284, 11, 50946, 50946, 307, 516, 281, 312, 264, 2135, 3983, 295, 965, 311, 7991, 11, 767, 13, 51196, 51196, 583, 309, 1890, 257, 938, 565, 337, 341, 1558, 51278, 51278, 281, 767, 680, 8768, 473, 293, 1813, 264, 2135, 2290, 51536, 51536, 300, 561, 764, 281, 1322, 3479, 2539, 3652, 13, 51634, 51634, 467, 311, 787, 466, 1266, 924, 1331, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.14448464358294452, "compression_ratio": 1.6808510638297873, "no_speech_prob": 7.070988431223668e-06}, {"id": 80, "seek": 19680, "start": 220.24, "end": 222.20000000000002, "text": " that people use to build machine learning systems.", "tokens": [50364, 400, 321, 3847, 309, 917, 281, 917, 13, 50504, 50504, 440, 1558, 337, 341, 1709, 646, 257, 938, 565, 13, 50600, 50600, 440, 8496, 7150, 337, 341, 352, 646, 281, 264, 2062, 281, 3469, 4688, 82, 50856, 50856, 365, 264, 646, 38377, 9284, 11, 50946, 50946, 307, 516, 281, 312, 264, 2135, 3983, 295, 965, 311, 7991, 11, 767, 13, 51196, 51196, 583, 309, 1890, 257, 938, 565, 337, 341, 1558, 51278, 51278, 281, 767, 680, 8768, 473, 293, 1813, 264, 2135, 2290, 51536, 51536, 300, 561, 764, 281, 1322, 3479, 2539, 3652, 13, 51634, 51634, 467, 311, 787, 466, 1266, 924, 1331, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.14448464358294452, "compression_ratio": 1.6808510638297873, "no_speech_prob": 7.070988431223668e-06}, {"id": 81, "seek": 19680, "start": 222.20000000000002, "end": 224.48000000000002, "text": " It's only about 10 years old.", "tokens": [50364, 400, 321, 3847, 309, 917, 281, 917, 13, 50504, 50504, 440, 1558, 337, 341, 1709, 646, 257, 938, 565, 13, 50600, 50600, 440, 8496, 7150, 337, 341, 352, 646, 281, 264, 2062, 281, 3469, 4688, 82, 50856, 50856, 365, 264, 646, 38377, 9284, 11, 50946, 50946, 307, 516, 281, 312, 264, 2135, 3983, 295, 965, 311, 7991, 11, 767, 13, 51196, 51196, 583, 309, 1890, 257, 938, 565, 337, 341, 1558, 51278, 51278, 281, 767, 680, 8768, 473, 293, 1813, 264, 2135, 2290, 51536, 51536, 300, 561, 764, 281, 1322, 3479, 2539, 3652, 13, 51634, 51634, 467, 311, 787, 466, 1266, 924, 1331, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.14448464358294452, "compression_ratio": 1.6808510638297873, "no_speech_prob": 7.070988431223668e-06}, {"id": 82, "seek": 22448, "start": 224.48, "end": 227.44, "text": " So let's go through a few definitions.", "tokens": [50364, 407, 718, 311, 352, 807, 257, 1326, 21988, 13, 50512, 50512, 407, 321, 434, 516, 281, 2028, 365, 13075, 1602, 5245, 13, 50630, 50630, 316, 13075, 1602, 2316, 11, 420, 2539, 2316, 11, 498, 291, 528, 11, 50752, 50752, 307, 257, 13075, 1602, 2445, 11, 290, 295, 2031, 293, 261, 11, 50934, 50934, 689, 2031, 307, 264, 4846, 293, 261, 307, 257, 992, 295, 9834, 13, 51158, 51158, 286, 478, 13460, 341, 510, 322, 264, 558, 51270, 51270, 365, 257, 1729, 47061, 689, 51380, 51380, 257, 2445, 411, 341, 300, 14725, 257, 2167, 5598, 11, 51638, 51638, 519, 295, 264, 5598, 382, 2139, 257, 8062, 420, 257, 8141, 420, 257, 40863, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13487408679464588, "compression_ratio": 1.7459016393442623, "no_speech_prob": 3.4257776860613376e-05}, {"id": 83, "seek": 22448, "start": 227.44, "end": 229.79999999999998, "text": " So we're going to deal with parameterized models.", "tokens": [50364, 407, 718, 311, 352, 807, 257, 1326, 21988, 13, 50512, 50512, 407, 321, 434, 516, 281, 2028, 365, 13075, 1602, 5245, 13, 50630, 50630, 316, 13075, 1602, 2316, 11, 420, 2539, 2316, 11, 498, 291, 528, 11, 50752, 50752, 307, 257, 13075, 1602, 2445, 11, 290, 295, 2031, 293, 261, 11, 50934, 50934, 689, 2031, 307, 264, 4846, 293, 261, 307, 257, 992, 295, 9834, 13, 51158, 51158, 286, 478, 13460, 341, 510, 322, 264, 558, 51270, 51270, 365, 257, 1729, 47061, 689, 51380, 51380, 257, 2445, 411, 341, 300, 14725, 257, 2167, 5598, 11, 51638, 51638, 519, 295, 264, 5598, 382, 2139, 257, 8062, 420, 257, 8141, 420, 257, 40863, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13487408679464588, "compression_ratio": 1.7459016393442623, "no_speech_prob": 3.4257776860613376e-05}, {"id": 84, "seek": 22448, "start": 229.79999999999998, "end": 232.23999999999998, "text": " A parameterized model, or learning model, if you want,", "tokens": [50364, 407, 718, 311, 352, 807, 257, 1326, 21988, 13, 50512, 50512, 407, 321, 434, 516, 281, 2028, 365, 13075, 1602, 5245, 13, 50630, 50630, 316, 13075, 1602, 2316, 11, 420, 2539, 2316, 11, 498, 291, 528, 11, 50752, 50752, 307, 257, 13075, 1602, 2445, 11, 290, 295, 2031, 293, 261, 11, 50934, 50934, 689, 2031, 307, 264, 4846, 293, 261, 307, 257, 992, 295, 9834, 13, 51158, 51158, 286, 478, 13460, 341, 510, 322, 264, 558, 51270, 51270, 365, 257, 1729, 47061, 689, 51380, 51380, 257, 2445, 411, 341, 300, 14725, 257, 2167, 5598, 11, 51638, 51638, 519, 295, 264, 5598, 382, 2139, 257, 8062, 420, 257, 8141, 420, 257, 40863, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13487408679464588, "compression_ratio": 1.7459016393442623, "no_speech_prob": 3.4257776860613376e-05}, {"id": 85, "seek": 22448, "start": 232.23999999999998, "end": 235.88, "text": " is a parameterized function, g of x and w,", "tokens": [50364, 407, 718, 311, 352, 807, 257, 1326, 21988, 13, 50512, 50512, 407, 321, 434, 516, 281, 2028, 365, 13075, 1602, 5245, 13, 50630, 50630, 316, 13075, 1602, 2316, 11, 420, 2539, 2316, 11, 498, 291, 528, 11, 50752, 50752, 307, 257, 13075, 1602, 2445, 11, 290, 295, 2031, 293, 261, 11, 50934, 50934, 689, 2031, 307, 264, 4846, 293, 261, 307, 257, 992, 295, 9834, 13, 51158, 51158, 286, 478, 13460, 341, 510, 322, 264, 558, 51270, 51270, 365, 257, 1729, 47061, 689, 51380, 51380, 257, 2445, 411, 341, 300, 14725, 257, 2167, 5598, 11, 51638, 51638, 519, 295, 264, 5598, 382, 2139, 257, 8062, 420, 257, 8141, 420, 257, 40863, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13487408679464588, "compression_ratio": 1.7459016393442623, "no_speech_prob": 3.4257776860613376e-05}, {"id": 86, "seek": 22448, "start": 235.88, "end": 240.35999999999999, "text": " where x is the input and w is a set of parameters.", "tokens": [50364, 407, 718, 311, 352, 807, 257, 1326, 21988, 13, 50512, 50512, 407, 321, 434, 516, 281, 2028, 365, 13075, 1602, 5245, 13, 50630, 50630, 316, 13075, 1602, 2316, 11, 420, 2539, 2316, 11, 498, 291, 528, 11, 50752, 50752, 307, 257, 13075, 1602, 2445, 11, 290, 295, 2031, 293, 261, 11, 50934, 50934, 689, 2031, 307, 264, 4846, 293, 261, 307, 257, 992, 295, 9834, 13, 51158, 51158, 286, 478, 13460, 341, 510, 322, 264, 558, 51270, 51270, 365, 257, 1729, 47061, 689, 51380, 51380, 257, 2445, 411, 341, 300, 14725, 257, 2167, 5598, 11, 51638, 51638, 519, 295, 264, 5598, 382, 2139, 257, 8062, 420, 257, 8141, 420, 257, 40863, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13487408679464588, "compression_ratio": 1.7459016393442623, "no_speech_prob": 3.4257776860613376e-05}, {"id": 87, "seek": 22448, "start": 240.35999999999999, "end": 242.6, "text": " I'm representing this here on the right", "tokens": [50364, 407, 718, 311, 352, 807, 257, 1326, 21988, 13, 50512, 50512, 407, 321, 434, 516, 281, 2028, 365, 13075, 1602, 5245, 13, 50630, 50630, 316, 13075, 1602, 2316, 11, 420, 2539, 2316, 11, 498, 291, 528, 11, 50752, 50752, 307, 257, 13075, 1602, 2445, 11, 290, 295, 2031, 293, 261, 11, 50934, 50934, 689, 2031, 307, 264, 4846, 293, 261, 307, 257, 992, 295, 9834, 13, 51158, 51158, 286, 478, 13460, 341, 510, 322, 264, 558, 51270, 51270, 365, 257, 1729, 47061, 689, 51380, 51380, 257, 2445, 411, 341, 300, 14725, 257, 2167, 5598, 11, 51638, 51638, 519, 295, 264, 5598, 382, 2139, 257, 8062, 420, 257, 8141, 420, 257, 40863, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13487408679464588, "compression_ratio": 1.7459016393442623, "no_speech_prob": 3.4257776860613376e-05}, {"id": 88, "seek": 22448, "start": 242.6, "end": 244.79999999999998, "text": " with a particular symbolism where", "tokens": [50364, 407, 718, 311, 352, 807, 257, 1326, 21988, 13, 50512, 50512, 407, 321, 434, 516, 281, 2028, 365, 13075, 1602, 5245, 13, 50630, 50630, 316, 13075, 1602, 2316, 11, 420, 2539, 2316, 11, 498, 291, 528, 11, 50752, 50752, 307, 257, 13075, 1602, 2445, 11, 290, 295, 2031, 293, 261, 11, 50934, 50934, 689, 2031, 307, 264, 4846, 293, 261, 307, 257, 992, 295, 9834, 13, 51158, 51158, 286, 478, 13460, 341, 510, 322, 264, 558, 51270, 51270, 365, 257, 1729, 47061, 689, 51380, 51380, 257, 2445, 411, 341, 300, 14725, 257, 2167, 5598, 11, 51638, 51638, 519, 295, 264, 5598, 382, 2139, 257, 8062, 420, 257, 8141, 420, 257, 40863, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13487408679464588, "compression_ratio": 1.7459016393442623, "no_speech_prob": 3.4257776860613376e-05}, {"id": 89, "seek": 22448, "start": 244.79999999999998, "end": 249.95999999999998, "text": " a function like this that produces a single output,", "tokens": [50364, 407, 718, 311, 352, 807, 257, 1326, 21988, 13, 50512, 50512, 407, 321, 434, 516, 281, 2028, 365, 13075, 1602, 5245, 13, 50630, 50630, 316, 13075, 1602, 2316, 11, 420, 2539, 2316, 11, 498, 291, 528, 11, 50752, 50752, 307, 257, 13075, 1602, 2445, 11, 290, 295, 2031, 293, 261, 11, 50934, 50934, 689, 2031, 307, 264, 4846, 293, 261, 307, 257, 992, 295, 9834, 13, 51158, 51158, 286, 478, 13460, 341, 510, 322, 264, 558, 51270, 51270, 365, 257, 1729, 47061, 689, 51380, 51380, 257, 2445, 411, 341, 300, 14725, 257, 2167, 5598, 11, 51638, 51638, 519, 295, 264, 5598, 382, 2139, 257, 8062, 420, 257, 8141, 420, 257, 40863, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13487408679464588, "compression_ratio": 1.7459016393442623, "no_speech_prob": 3.4257776860613376e-05}, {"id": 90, "seek": 22448, "start": 249.95999999999998, "end": 253.48, "text": " think of the output as either a vector or a matrix or a tensor", "tokens": [50364, 407, 718, 311, 352, 807, 257, 1326, 21988, 13, 50512, 50512, 407, 321, 434, 516, 281, 2028, 365, 13075, 1602, 5245, 13, 50630, 50630, 316, 13075, 1602, 2316, 11, 420, 2539, 2316, 11, 498, 291, 528, 11, 50752, 50752, 307, 257, 13075, 1602, 2445, 11, 290, 295, 2031, 293, 261, 11, 50934, 50934, 689, 2031, 307, 264, 4846, 293, 261, 307, 257, 992, 295, 9834, 13, 51158, 51158, 286, 478, 13460, 341, 510, 322, 264, 558, 51270, 51270, 365, 257, 1729, 47061, 689, 51380, 51380, 257, 2445, 411, 341, 300, 14725, 257, 2167, 5598, 11, 51638, 51638, 519, 295, 264, 5598, 382, 2139, 257, 8062, 420, 257, 8141, 420, 257, 40863, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13487408679464588, "compression_ratio": 1.7459016393442623, "no_speech_prob": 3.4257776860613376e-05}, {"id": 91, "seek": 25348, "start": 253.48, "end": 257.36, "text": " or perhaps even a scalar, but generally is multidimensional.", "tokens": [50364, 420, 4317, 754, 257, 39684, 11, 457, 5101, 307, 2120, 327, 332, 11075, 13, 50558, 50558, 467, 393, 767, 312, 746, 1646, 50628, 50628, 294, 257, 2120, 327, 332, 11075, 10225, 11, 457, 746, 50726, 50726, 300, 1310, 411, 257, 637, 11668, 10225, 10290, 420, 257, 4295, 50958, 50958, 365, 4190, 322, 309, 13, 51046, 51046, 583, 337, 586, 11, 718, 311, 519, 295, 309, 445, 382, 257, 2120, 327, 332, 11075, 10225, 13, 51224, 51224, 407, 1293, 264, 15743, 293, 264, 23930, 51292, 51292, 366, 2120, 327, 332, 11075, 41011, 11, 437, 561, 818, 10688, 830, 13, 51524, 51524, 467, 311, 406, 534, 264, 6854, 7123, 295, 40863, 11, 51694, 51694, 457, 309, 311, 2264, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.13668676644317374, "compression_ratio": 1.7827868852459017, "no_speech_prob": 1.5204372175503522e-05}, {"id": 92, "seek": 25348, "start": 257.36, "end": 258.76, "text": " It can actually be something else", "tokens": [50364, 420, 4317, 754, 257, 39684, 11, 457, 5101, 307, 2120, 327, 332, 11075, 13, 50558, 50558, 467, 393, 767, 312, 746, 1646, 50628, 50628, 294, 257, 2120, 327, 332, 11075, 10225, 11, 457, 746, 50726, 50726, 300, 1310, 411, 257, 637, 11668, 10225, 10290, 420, 257, 4295, 50958, 50958, 365, 4190, 322, 309, 13, 51046, 51046, 583, 337, 586, 11, 718, 311, 519, 295, 309, 445, 382, 257, 2120, 327, 332, 11075, 10225, 13, 51224, 51224, 407, 1293, 264, 15743, 293, 264, 23930, 51292, 51292, 366, 2120, 327, 332, 11075, 41011, 11, 437, 561, 818, 10688, 830, 13, 51524, 51524, 467, 311, 406, 534, 264, 6854, 7123, 295, 40863, 11, 51694, 51694, 457, 309, 311, 2264, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.13668676644317374, "compression_ratio": 1.7827868852459017, "no_speech_prob": 1.5204372175503522e-05}, {"id": 93, "seek": 25348, "start": 258.76, "end": 260.71999999999997, "text": " in a multidimensional array, but something", "tokens": [50364, 420, 4317, 754, 257, 39684, 11, 457, 5101, 307, 2120, 327, 332, 11075, 13, 50558, 50558, 467, 393, 767, 312, 746, 1646, 50628, 50628, 294, 257, 2120, 327, 332, 11075, 10225, 11, 457, 746, 50726, 50726, 300, 1310, 411, 257, 637, 11668, 10225, 10290, 420, 257, 4295, 50958, 50958, 365, 4190, 322, 309, 13, 51046, 51046, 583, 337, 586, 11, 718, 311, 519, 295, 309, 445, 382, 257, 2120, 327, 332, 11075, 10225, 13, 51224, 51224, 407, 1293, 264, 15743, 293, 264, 23930, 51292, 51292, 366, 2120, 327, 332, 11075, 41011, 11, 437, 561, 818, 10688, 830, 13, 51524, 51524, 467, 311, 406, 534, 264, 6854, 7123, 295, 40863, 11, 51694, 51694, 457, 309, 311, 2264, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.13668676644317374, "compression_ratio": 1.7827868852459017, "no_speech_prob": 1.5204372175503522e-05}, {"id": 94, "seek": 25348, "start": 260.71999999999997, "end": 265.36, "text": " that maybe like a sparse array representation or a graph", "tokens": [50364, 420, 4317, 754, 257, 39684, 11, 457, 5101, 307, 2120, 327, 332, 11075, 13, 50558, 50558, 467, 393, 767, 312, 746, 1646, 50628, 50628, 294, 257, 2120, 327, 332, 11075, 10225, 11, 457, 746, 50726, 50726, 300, 1310, 411, 257, 637, 11668, 10225, 10290, 420, 257, 4295, 50958, 50958, 365, 4190, 322, 309, 13, 51046, 51046, 583, 337, 586, 11, 718, 311, 519, 295, 309, 445, 382, 257, 2120, 327, 332, 11075, 10225, 13, 51224, 51224, 407, 1293, 264, 15743, 293, 264, 23930, 51292, 51292, 366, 2120, 327, 332, 11075, 41011, 11, 437, 561, 818, 10688, 830, 13, 51524, 51524, 467, 311, 406, 534, 264, 6854, 7123, 295, 40863, 11, 51694, 51694, 457, 309, 311, 2264, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.13668676644317374, "compression_ratio": 1.7827868852459017, "no_speech_prob": 1.5204372175503522e-05}, {"id": 95, "seek": 25348, "start": 265.36, "end": 267.12, "text": " with values on it.", "tokens": [50364, 420, 4317, 754, 257, 39684, 11, 457, 5101, 307, 2120, 327, 332, 11075, 13, 50558, 50558, 467, 393, 767, 312, 746, 1646, 50628, 50628, 294, 257, 2120, 327, 332, 11075, 10225, 11, 457, 746, 50726, 50726, 300, 1310, 411, 257, 637, 11668, 10225, 10290, 420, 257, 4295, 50958, 50958, 365, 4190, 322, 309, 13, 51046, 51046, 583, 337, 586, 11, 718, 311, 519, 295, 309, 445, 382, 257, 2120, 327, 332, 11075, 10225, 13, 51224, 51224, 407, 1293, 264, 15743, 293, 264, 23930, 51292, 51292, 366, 2120, 327, 332, 11075, 41011, 11, 437, 561, 818, 10688, 830, 13, 51524, 51524, 467, 311, 406, 534, 264, 6854, 7123, 295, 40863, 11, 51694, 51694, 457, 309, 311, 2264, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.13668676644317374, "compression_ratio": 1.7827868852459017, "no_speech_prob": 1.5204372175503522e-05}, {"id": 96, "seek": 25348, "start": 267.12, "end": 270.68, "text": " But for now, let's think of it just as a multidimensional array.", "tokens": [50364, 420, 4317, 754, 257, 39684, 11, 457, 5101, 307, 2120, 327, 332, 11075, 13, 50558, 50558, 467, 393, 767, 312, 746, 1646, 50628, 50628, 294, 257, 2120, 327, 332, 11075, 10225, 11, 457, 746, 50726, 50726, 300, 1310, 411, 257, 637, 11668, 10225, 10290, 420, 257, 4295, 50958, 50958, 365, 4190, 322, 309, 13, 51046, 51046, 583, 337, 586, 11, 718, 311, 519, 295, 309, 445, 382, 257, 2120, 327, 332, 11075, 10225, 13, 51224, 51224, 407, 1293, 264, 15743, 293, 264, 23930, 51292, 51292, 366, 2120, 327, 332, 11075, 41011, 11, 437, 561, 818, 10688, 830, 13, 51524, 51524, 467, 311, 406, 534, 264, 6854, 7123, 295, 40863, 11, 51694, 51694, 457, 309, 311, 2264, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.13668676644317374, "compression_ratio": 1.7827868852459017, "no_speech_prob": 1.5204372175503522e-05}, {"id": 97, "seek": 25348, "start": 270.68, "end": 272.03999999999996, "text": " So both the inputs and the outputs", "tokens": [50364, 420, 4317, 754, 257, 39684, 11, 457, 5101, 307, 2120, 327, 332, 11075, 13, 50558, 50558, 467, 393, 767, 312, 746, 1646, 50628, 50628, 294, 257, 2120, 327, 332, 11075, 10225, 11, 457, 746, 50726, 50726, 300, 1310, 411, 257, 637, 11668, 10225, 10290, 420, 257, 4295, 50958, 50958, 365, 4190, 322, 309, 13, 51046, 51046, 583, 337, 586, 11, 718, 311, 519, 295, 309, 445, 382, 257, 2120, 327, 332, 11075, 10225, 13, 51224, 51224, 407, 1293, 264, 15743, 293, 264, 23930, 51292, 51292, 366, 2120, 327, 332, 11075, 41011, 11, 437, 561, 818, 10688, 830, 13, 51524, 51524, 467, 311, 406, 534, 264, 6854, 7123, 295, 40863, 11, 51694, 51694, 457, 309, 311, 2264, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.13668676644317374, "compression_ratio": 1.7827868852459017, "no_speech_prob": 1.5204372175503522e-05}, {"id": 98, "seek": 25348, "start": 272.03999999999996, "end": 276.68, "text": " are multidimensional arrays, what people call tensors.", "tokens": [50364, 420, 4317, 754, 257, 39684, 11, 457, 5101, 307, 2120, 327, 332, 11075, 13, 50558, 50558, 467, 393, 767, 312, 746, 1646, 50628, 50628, 294, 257, 2120, 327, 332, 11075, 10225, 11, 457, 746, 50726, 50726, 300, 1310, 411, 257, 637, 11668, 10225, 10290, 420, 257, 4295, 50958, 50958, 365, 4190, 322, 309, 13, 51046, 51046, 583, 337, 586, 11, 718, 311, 519, 295, 309, 445, 382, 257, 2120, 327, 332, 11075, 10225, 13, 51224, 51224, 407, 1293, 264, 15743, 293, 264, 23930, 51292, 51292, 366, 2120, 327, 332, 11075, 41011, 11, 437, 561, 818, 10688, 830, 13, 51524, 51524, 467, 311, 406, 534, 264, 6854, 7123, 295, 40863, 11, 51694, 51694, 457, 309, 311, 2264, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.13668676644317374, "compression_ratio": 1.7827868852459017, "no_speech_prob": 1.5204372175503522e-05}, {"id": 99, "seek": 25348, "start": 276.68, "end": 280.08, "text": " It's not really the appropriate definition of tensor,", "tokens": [50364, 420, 4317, 754, 257, 39684, 11, 457, 5101, 307, 2120, 327, 332, 11075, 13, 50558, 50558, 467, 393, 767, 312, 746, 1646, 50628, 50628, 294, 257, 2120, 327, 332, 11075, 10225, 11, 457, 746, 50726, 50726, 300, 1310, 411, 257, 637, 11668, 10225, 10290, 420, 257, 4295, 50958, 50958, 365, 4190, 322, 309, 13, 51046, 51046, 583, 337, 586, 11, 718, 311, 519, 295, 309, 445, 382, 257, 2120, 327, 332, 11075, 10225, 13, 51224, 51224, 407, 1293, 264, 15743, 293, 264, 23930, 51292, 51292, 366, 2120, 327, 332, 11075, 41011, 11, 437, 561, 818, 10688, 830, 13, 51524, 51524, 467, 311, 406, 534, 264, 6854, 7123, 295, 40863, 11, 51694, 51694, 457, 309, 311, 2264, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.13668676644317374, "compression_ratio": 1.7827868852459017, "no_speech_prob": 1.5204372175503522e-05}, {"id": 100, "seek": 25348, "start": 280.08, "end": 282.2, "text": " but it's OK.", "tokens": [50364, 420, 4317, 754, 257, 39684, 11, 457, 5101, 307, 2120, 327, 332, 11075, 13, 50558, 50558, 467, 393, 767, 312, 746, 1646, 50628, 50628, 294, 257, 2120, 327, 332, 11075, 10225, 11, 457, 746, 50726, 50726, 300, 1310, 411, 257, 637, 11668, 10225, 10290, 420, 257, 4295, 50958, 50958, 365, 4190, 322, 309, 13, 51046, 51046, 583, 337, 586, 11, 718, 311, 519, 295, 309, 445, 382, 257, 2120, 327, 332, 11075, 10225, 13, 51224, 51224, 407, 1293, 264, 15743, 293, 264, 23930, 51292, 51292, 366, 2120, 327, 332, 11075, 41011, 11, 437, 561, 818, 10688, 830, 13, 51524, 51524, 467, 311, 406, 534, 264, 6854, 7123, 295, 40863, 11, 51694, 51694, 457, 309, 311, 2264, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.13668676644317374, "compression_ratio": 1.7827868852459017, "no_speech_prob": 1.5204372175503522e-05}, {"id": 101, "seek": 28220, "start": 282.2, "end": 283.76, "text": " And that function is parameterized", "tokens": [50364, 400, 300, 2445, 307, 13075, 1602, 50442, 50442, 538, 257, 992, 295, 9834, 261, 13, 50508, 50508, 3950, 366, 264, 46999, 300, 321, 434, 516, 50581, 50581, 281, 4369, 1830, 3097, 11, 293, 436, 1936, 50732, 50732, 6997, 264, 4846, 12, 346, 2582, 2480, 1296, 264, 4846, 2031, 50984, 50984, 293, 264, 19147, 5598, 288, 2159, 13, 51112, 51112, 407, 286, 478, 406, 20803, 13460, 264, 6234, 51422, 51422, 300, 1487, 294, 365, 261, 13, 51548, 51548, 1692, 11, 286, 6552, 300, 261, 307, 4079, 51642, 51642, 1854, 295, 341, 10088, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14189114173253378, "compression_ratio": 1.5955555555555556, "no_speech_prob": 4.9366608436685055e-06}, {"id": 102, "seek": 28220, "start": 283.76, "end": 285.08, "text": " by a set of parameters w.", "tokens": [50364, 400, 300, 2445, 307, 13075, 1602, 50442, 50442, 538, 257, 992, 295, 9834, 261, 13, 50508, 50508, 3950, 366, 264, 46999, 300, 321, 434, 516, 50581, 50581, 281, 4369, 1830, 3097, 11, 293, 436, 1936, 50732, 50732, 6997, 264, 4846, 12, 346, 2582, 2480, 1296, 264, 4846, 2031, 50984, 50984, 293, 264, 19147, 5598, 288, 2159, 13, 51112, 51112, 407, 286, 478, 406, 20803, 13460, 264, 6234, 51422, 51422, 300, 1487, 294, 365, 261, 13, 51548, 51548, 1692, 11, 286, 6552, 300, 261, 307, 4079, 51642, 51642, 1854, 295, 341, 10088, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14189114173253378, "compression_ratio": 1.5955555555555556, "no_speech_prob": 4.9366608436685055e-06}, {"id": 103, "seek": 28220, "start": 285.08, "end": 286.53999999999996, "text": " Those are the knobs that we're going", "tokens": [50364, 400, 300, 2445, 307, 13075, 1602, 50442, 50442, 538, 257, 992, 295, 9834, 261, 13, 50508, 50508, 3950, 366, 264, 46999, 300, 321, 434, 516, 50581, 50581, 281, 4369, 1830, 3097, 11, 293, 436, 1936, 50732, 50732, 6997, 264, 4846, 12, 346, 2582, 2480, 1296, 264, 4846, 2031, 50984, 50984, 293, 264, 19147, 5598, 288, 2159, 13, 51112, 51112, 407, 286, 478, 406, 20803, 13460, 264, 6234, 51422, 51422, 300, 1487, 294, 365, 261, 13, 51548, 51548, 1692, 11, 286, 6552, 300, 261, 307, 4079, 51642, 51642, 1854, 295, 341, 10088, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14189114173253378, "compression_ratio": 1.5955555555555556, "no_speech_prob": 4.9366608436685055e-06}, {"id": 104, "seek": 28220, "start": 286.53999999999996, "end": 289.56, "text": " to adjust during training, and they basically", "tokens": [50364, 400, 300, 2445, 307, 13075, 1602, 50442, 50442, 538, 257, 992, 295, 9834, 261, 13, 50508, 50508, 3950, 366, 264, 46999, 300, 321, 434, 516, 50581, 50581, 281, 4369, 1830, 3097, 11, 293, 436, 1936, 50732, 50732, 6997, 264, 4846, 12, 346, 2582, 2480, 1296, 264, 4846, 2031, 50984, 50984, 293, 264, 19147, 5598, 288, 2159, 13, 51112, 51112, 407, 286, 478, 406, 20803, 13460, 264, 6234, 51422, 51422, 300, 1487, 294, 365, 261, 13, 51548, 51548, 1692, 11, 286, 6552, 300, 261, 307, 4079, 51642, 51642, 1854, 295, 341, 10088, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14189114173253378, "compression_ratio": 1.5955555555555556, "no_speech_prob": 4.9366608436685055e-06}, {"id": 105, "seek": 28220, "start": 289.56, "end": 294.59999999999997, "text": " determine the input-output relationship between the input x", "tokens": [50364, 400, 300, 2445, 307, 13075, 1602, 50442, 50442, 538, 257, 992, 295, 9834, 261, 13, 50508, 50508, 3950, 366, 264, 46999, 300, 321, 434, 516, 50581, 50581, 281, 4369, 1830, 3097, 11, 293, 436, 1936, 50732, 50732, 6997, 264, 4846, 12, 346, 2582, 2480, 1296, 264, 4846, 2031, 50984, 50984, 293, 264, 19147, 5598, 288, 2159, 13, 51112, 51112, 407, 286, 478, 406, 20803, 13460, 264, 6234, 51422, 51422, 300, 1487, 294, 365, 261, 13, 51548, 51548, 1692, 11, 286, 6552, 300, 261, 307, 4079, 51642, 51642, 1854, 295, 341, 10088, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14189114173253378, "compression_ratio": 1.5955555555555556, "no_speech_prob": 4.9366608436685055e-06}, {"id": 106, "seek": 28220, "start": 294.59999999999997, "end": 297.15999999999997, "text": " and the predicted output y bar.", "tokens": [50364, 400, 300, 2445, 307, 13075, 1602, 50442, 50442, 538, 257, 992, 295, 9834, 261, 13, 50508, 50508, 3950, 366, 264, 46999, 300, 321, 434, 516, 50581, 50581, 281, 4369, 1830, 3097, 11, 293, 436, 1936, 50732, 50732, 6997, 264, 4846, 12, 346, 2582, 2480, 1296, 264, 4846, 2031, 50984, 50984, 293, 264, 19147, 5598, 288, 2159, 13, 51112, 51112, 407, 286, 478, 406, 20803, 13460, 264, 6234, 51422, 51422, 300, 1487, 294, 365, 261, 13, 51548, 51548, 1692, 11, 286, 6552, 300, 261, 307, 4079, 51642, 51642, 1854, 295, 341, 10088, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14189114173253378, "compression_ratio": 1.5955555555555556, "no_speech_prob": 4.9366608436685055e-06}, {"id": 107, "seek": 28220, "start": 297.15999999999997, "end": 303.36, "text": " So I'm not explicitly representing the wire", "tokens": [50364, 400, 300, 2445, 307, 13075, 1602, 50442, 50442, 538, 257, 992, 295, 9834, 261, 13, 50508, 50508, 3950, 366, 264, 46999, 300, 321, 434, 516, 50581, 50581, 281, 4369, 1830, 3097, 11, 293, 436, 1936, 50732, 50732, 6997, 264, 4846, 12, 346, 2582, 2480, 1296, 264, 4846, 2031, 50984, 50984, 293, 264, 19147, 5598, 288, 2159, 13, 51112, 51112, 407, 286, 478, 406, 20803, 13460, 264, 6234, 51422, 51422, 300, 1487, 294, 365, 261, 13, 51548, 51548, 1692, 11, 286, 6552, 300, 261, 307, 4079, 51642, 51642, 1854, 295, 341, 10088, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14189114173253378, "compression_ratio": 1.5955555555555556, "no_speech_prob": 4.9366608436685055e-06}, {"id": 108, "seek": 28220, "start": 303.36, "end": 305.88, "text": " that comes in with w.", "tokens": [50364, 400, 300, 2445, 307, 13075, 1602, 50442, 50442, 538, 257, 992, 295, 9834, 261, 13, 50508, 50508, 3950, 366, 264, 46999, 300, 321, 434, 516, 50581, 50581, 281, 4369, 1830, 3097, 11, 293, 436, 1936, 50732, 50732, 6997, 264, 4846, 12, 346, 2582, 2480, 1296, 264, 4846, 2031, 50984, 50984, 293, 264, 19147, 5598, 288, 2159, 13, 51112, 51112, 407, 286, 478, 406, 20803, 13460, 264, 6234, 51422, 51422, 300, 1487, 294, 365, 261, 13, 51548, 51548, 1692, 11, 286, 6552, 300, 261, 307, 4079, 51642, 51642, 1854, 295, 341, 10088, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14189114173253378, "compression_ratio": 1.5955555555555556, "no_speech_prob": 4.9366608436685055e-06}, {"id": 109, "seek": 28220, "start": 305.88, "end": 307.76, "text": " Here, I assume that w is somewhere", "tokens": [50364, 400, 300, 2445, 307, 13075, 1602, 50442, 50442, 538, 257, 992, 295, 9834, 261, 13, 50508, 50508, 3950, 366, 264, 46999, 300, 321, 434, 516, 50581, 50581, 281, 4369, 1830, 3097, 11, 293, 436, 1936, 50732, 50732, 6997, 264, 4846, 12, 346, 2582, 2480, 1296, 264, 4846, 2031, 50984, 50984, 293, 264, 19147, 5598, 288, 2159, 13, 51112, 51112, 407, 286, 478, 406, 20803, 13460, 264, 6234, 51422, 51422, 300, 1487, 294, 365, 261, 13, 51548, 51548, 1692, 11, 286, 6552, 300, 261, 307, 4079, 51642, 51642, 1854, 295, 341, 10088, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14189114173253378, "compression_ratio": 1.5955555555555556, "no_speech_prob": 4.9366608436685055e-06}, {"id": 110, "seek": 28220, "start": 307.76, "end": 310.2, "text": " inside of this module.", "tokens": [50364, 400, 300, 2445, 307, 13075, 1602, 50442, 50442, 538, 257, 992, 295, 9834, 261, 13, 50508, 50508, 3950, 366, 264, 46999, 300, 321, 434, 516, 50581, 50581, 281, 4369, 1830, 3097, 11, 293, 436, 1936, 50732, 50732, 6997, 264, 4846, 12, 346, 2582, 2480, 1296, 264, 4846, 2031, 50984, 50984, 293, 264, 19147, 5598, 288, 2159, 13, 51112, 51112, 407, 286, 478, 406, 20803, 13460, 264, 6234, 51422, 51422, 300, 1487, 294, 365, 261, 13, 51548, 51548, 1692, 11, 286, 6552, 300, 261, 307, 4079, 51642, 51642, 1854, 295, 341, 10088, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14189114173253378, "compression_ratio": 1.5955555555555556, "no_speech_prob": 4.9366608436685055e-06}, {"id": 111, "seek": 31020, "start": 310.2, "end": 314.96, "text": " Think of this as an object in object-oriented programming.", "tokens": [50364, 6557, 295, 341, 382, 364, 2657, 294, 2657, 12, 27414, 9410, 13, 50602, 50602, 407, 309, 311, 364, 5197, 295, 257, 1508, 300, 291, 9836, 72, 770, 11, 50760, 50760, 293, 309, 311, 658, 257, 14747, 294, 309, 300, 8855, 264, 9834, 13, 50928, 50928, 400, 456, 307, 257, 2128, 2445, 11, 1936, 11, 51052, 51052, 300, 2516, 382, 6770, 264, 4846, 293, 11247, 264, 5598, 13, 51262, 51262, 2264, 30, 51286, 51410, 407, 257, 3875, 2539, 3479, 486, 362, 257, 2063, 2445, 13, 51596, 51596, 400, 264, 2063, 2445, 294, 46533, 2539, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17209329410475127, "compression_ratio": 1.6563876651982379, "no_speech_prob": 4.092747531103669e-06}, {"id": 112, "seek": 31020, "start": 314.96, "end": 318.12, "text": " So it's an instance of a class that you instantiated,", "tokens": [50364, 6557, 295, 341, 382, 364, 2657, 294, 2657, 12, 27414, 9410, 13, 50602, 50602, 407, 309, 311, 364, 5197, 295, 257, 1508, 300, 291, 9836, 72, 770, 11, 50760, 50760, 293, 309, 311, 658, 257, 14747, 294, 309, 300, 8855, 264, 9834, 13, 50928, 50928, 400, 456, 307, 257, 2128, 2445, 11, 1936, 11, 51052, 51052, 300, 2516, 382, 6770, 264, 4846, 293, 11247, 264, 5598, 13, 51262, 51262, 2264, 30, 51286, 51410, 407, 257, 3875, 2539, 3479, 486, 362, 257, 2063, 2445, 13, 51596, 51596, 400, 264, 2063, 2445, 294, 46533, 2539, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17209329410475127, "compression_ratio": 1.6563876651982379, "no_speech_prob": 4.092747531103669e-06}, {"id": 113, "seek": 31020, "start": 318.12, "end": 321.47999999999996, "text": " and it's got a slot in it that represents the parameters.", "tokens": [50364, 6557, 295, 341, 382, 364, 2657, 294, 2657, 12, 27414, 9410, 13, 50602, 50602, 407, 309, 311, 364, 5197, 295, 257, 1508, 300, 291, 9836, 72, 770, 11, 50760, 50760, 293, 309, 311, 658, 257, 14747, 294, 309, 300, 8855, 264, 9834, 13, 50928, 50928, 400, 456, 307, 257, 2128, 2445, 11, 1936, 11, 51052, 51052, 300, 2516, 382, 6770, 264, 4846, 293, 11247, 264, 5598, 13, 51262, 51262, 2264, 30, 51286, 51410, 407, 257, 3875, 2539, 3479, 486, 362, 257, 2063, 2445, 13, 51596, 51596, 400, 264, 2063, 2445, 294, 46533, 2539, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17209329410475127, "compression_ratio": 1.6563876651982379, "no_speech_prob": 4.092747531103669e-06}, {"id": 114, "seek": 31020, "start": 321.47999999999996, "end": 323.96, "text": " And there is a forward function, basically,", "tokens": [50364, 6557, 295, 341, 382, 364, 2657, 294, 2657, 12, 27414, 9410, 13, 50602, 50602, 407, 309, 311, 364, 5197, 295, 257, 1508, 300, 291, 9836, 72, 770, 11, 50760, 50760, 293, 309, 311, 658, 257, 14747, 294, 309, 300, 8855, 264, 9834, 13, 50928, 50928, 400, 456, 307, 257, 2128, 2445, 11, 1936, 11, 51052, 51052, 300, 2516, 382, 6770, 264, 4846, 293, 11247, 264, 5598, 13, 51262, 51262, 2264, 30, 51286, 51410, 407, 257, 3875, 2539, 3479, 486, 362, 257, 2063, 2445, 13, 51596, 51596, 400, 264, 2063, 2445, 294, 46533, 2539, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17209329410475127, "compression_ratio": 1.6563876651982379, "no_speech_prob": 4.092747531103669e-06}, {"id": 115, "seek": 31020, "start": 323.96, "end": 328.15999999999997, "text": " that takes as argument the input and returns the output.", "tokens": [50364, 6557, 295, 341, 382, 364, 2657, 294, 2657, 12, 27414, 9410, 13, 50602, 50602, 407, 309, 311, 364, 5197, 295, 257, 1508, 300, 291, 9836, 72, 770, 11, 50760, 50760, 293, 309, 311, 658, 257, 14747, 294, 309, 300, 8855, 264, 9834, 13, 50928, 50928, 400, 456, 307, 257, 2128, 2445, 11, 1936, 11, 51052, 51052, 300, 2516, 382, 6770, 264, 4846, 293, 11247, 264, 5598, 13, 51262, 51262, 2264, 30, 51286, 51410, 407, 257, 3875, 2539, 3479, 486, 362, 257, 2063, 2445, 13, 51596, 51596, 400, 264, 2063, 2445, 294, 46533, 2539, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17209329410475127, "compression_ratio": 1.6563876651982379, "no_speech_prob": 4.092747531103669e-06}, {"id": 116, "seek": 31020, "start": 328.15999999999997, "end": 328.64, "text": " OK?", "tokens": [50364, 6557, 295, 341, 382, 364, 2657, 294, 2657, 12, 27414, 9410, 13, 50602, 50602, 407, 309, 311, 364, 5197, 295, 257, 1508, 300, 291, 9836, 72, 770, 11, 50760, 50760, 293, 309, 311, 658, 257, 14747, 294, 309, 300, 8855, 264, 9834, 13, 50928, 50928, 400, 456, 307, 257, 2128, 2445, 11, 1936, 11, 51052, 51052, 300, 2516, 382, 6770, 264, 4846, 293, 11247, 264, 5598, 13, 51262, 51262, 2264, 30, 51286, 51410, 407, 257, 3875, 2539, 3479, 486, 362, 257, 2063, 2445, 13, 51596, 51596, 400, 264, 2063, 2445, 294, 46533, 2539, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17209329410475127, "compression_ratio": 1.6563876651982379, "no_speech_prob": 4.092747531103669e-06}, {"id": 117, "seek": 31020, "start": 331.12, "end": 334.84, "text": " So a basic learning machine will have a cost function.", "tokens": [50364, 6557, 295, 341, 382, 364, 2657, 294, 2657, 12, 27414, 9410, 13, 50602, 50602, 407, 309, 311, 364, 5197, 295, 257, 1508, 300, 291, 9836, 72, 770, 11, 50760, 50760, 293, 309, 311, 658, 257, 14747, 294, 309, 300, 8855, 264, 9834, 13, 50928, 50928, 400, 456, 307, 257, 2128, 2445, 11, 1936, 11, 51052, 51052, 300, 2516, 382, 6770, 264, 4846, 293, 11247, 264, 5598, 13, 51262, 51262, 2264, 30, 51286, 51410, 407, 257, 3875, 2539, 3479, 486, 362, 257, 2063, 2445, 13, 51596, 51596, 400, 264, 2063, 2445, 294, 46533, 2539, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17209329410475127, "compression_ratio": 1.6563876651982379, "no_speech_prob": 4.092747531103669e-06}, {"id": 118, "seek": 31020, "start": 334.84, "end": 337.2, "text": " And the cost function in supervised learning,", "tokens": [50364, 6557, 295, 341, 382, 364, 2657, 294, 2657, 12, 27414, 9410, 13, 50602, 50602, 407, 309, 311, 364, 5197, 295, 257, 1508, 300, 291, 9836, 72, 770, 11, 50760, 50760, 293, 309, 311, 658, 257, 14747, 294, 309, 300, 8855, 264, 9834, 13, 50928, 50928, 400, 456, 307, 257, 2128, 2445, 11, 1936, 11, 51052, 51052, 300, 2516, 382, 6770, 264, 4846, 293, 11247, 264, 5598, 13, 51262, 51262, 2264, 30, 51286, 51410, 407, 257, 3875, 2539, 3479, 486, 362, 257, 2063, 2445, 13, 51596, 51596, 400, 264, 2063, 2445, 294, 46533, 2539, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17209329410475127, "compression_ratio": 1.6563876651982379, "no_speech_prob": 4.092747531103669e-06}, {"id": 119, "seek": 33720, "start": 337.2, "end": 341.96, "text": " but also in some other settings, will basically", "tokens": [50364, 457, 611, 294, 512, 661, 6257, 11, 486, 1936, 50602, 50602, 14722, 264, 2983, 265, 6040, 1344, 11, 4560, 11, 47387, 11, 50810, 50810, 2035, 291, 528, 281, 818, 309, 11, 1296, 264, 14721, 5598, 288, 11, 50976, 50976, 597, 307, 2212, 281, 291, 490, 264, 3097, 992, 11, 51064, 51064, 293, 264, 5598, 7126, 538, 264, 1185, 288, 2159, 13, 51236, 51236, 2264, 30, 51260, 51260, 407, 364, 1365, 295, 341, 11, 257, 588, 2199, 1365, 295, 257, 3287, 51420, 51420, 411, 341, 307, 8213, 24590, 13, 51498, 51498, 682, 8213, 24590, 11, 2031, 307, 257, 8062, 51660, 51660, 18204, 295, 6677, 2031, 741, 311, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.17840314985395553, "compression_ratio": 1.6833333333333333, "no_speech_prob": 3.6686342355096713e-06}, {"id": 120, "seek": 33720, "start": 341.96, "end": 346.12, "text": " compute the discrepancy, distance, divergence,", "tokens": [50364, 457, 611, 294, 512, 661, 6257, 11, 486, 1936, 50602, 50602, 14722, 264, 2983, 265, 6040, 1344, 11, 4560, 11, 47387, 11, 50810, 50810, 2035, 291, 528, 281, 818, 309, 11, 1296, 264, 14721, 5598, 288, 11, 50976, 50976, 597, 307, 2212, 281, 291, 490, 264, 3097, 992, 11, 51064, 51064, 293, 264, 5598, 7126, 538, 264, 1185, 288, 2159, 13, 51236, 51236, 2264, 30, 51260, 51260, 407, 364, 1365, 295, 341, 11, 257, 588, 2199, 1365, 295, 257, 3287, 51420, 51420, 411, 341, 307, 8213, 24590, 13, 51498, 51498, 682, 8213, 24590, 11, 2031, 307, 257, 8062, 51660, 51660, 18204, 295, 6677, 2031, 741, 311, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.17840314985395553, "compression_ratio": 1.6833333333333333, "no_speech_prob": 3.6686342355096713e-06}, {"id": 121, "seek": 33720, "start": 346.12, "end": 349.44, "text": " whatever you want to call it, between the desired output y,", "tokens": [50364, 457, 611, 294, 512, 661, 6257, 11, 486, 1936, 50602, 50602, 14722, 264, 2983, 265, 6040, 1344, 11, 4560, 11, 47387, 11, 50810, 50810, 2035, 291, 528, 281, 818, 309, 11, 1296, 264, 14721, 5598, 288, 11, 50976, 50976, 597, 307, 2212, 281, 291, 490, 264, 3097, 992, 11, 51064, 51064, 293, 264, 5598, 7126, 538, 264, 1185, 288, 2159, 13, 51236, 51236, 2264, 30, 51260, 51260, 407, 364, 1365, 295, 341, 11, 257, 588, 2199, 1365, 295, 257, 3287, 51420, 51420, 411, 341, 307, 8213, 24590, 13, 51498, 51498, 682, 8213, 24590, 11, 2031, 307, 257, 8062, 51660, 51660, 18204, 295, 6677, 2031, 741, 311, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.17840314985395553, "compression_ratio": 1.6833333333333333, "no_speech_prob": 3.6686342355096713e-06}, {"id": 122, "seek": 33720, "start": 349.44, "end": 351.2, "text": " which is given to you from the training set,", "tokens": [50364, 457, 611, 294, 512, 661, 6257, 11, 486, 1936, 50602, 50602, 14722, 264, 2983, 265, 6040, 1344, 11, 4560, 11, 47387, 11, 50810, 50810, 2035, 291, 528, 281, 818, 309, 11, 1296, 264, 14721, 5598, 288, 11, 50976, 50976, 597, 307, 2212, 281, 291, 490, 264, 3097, 992, 11, 51064, 51064, 293, 264, 5598, 7126, 538, 264, 1185, 288, 2159, 13, 51236, 51236, 2264, 30, 51260, 51260, 407, 364, 1365, 295, 341, 11, 257, 588, 2199, 1365, 295, 257, 3287, 51420, 51420, 411, 341, 307, 8213, 24590, 13, 51498, 51498, 682, 8213, 24590, 11, 2031, 307, 257, 8062, 51660, 51660, 18204, 295, 6677, 2031, 741, 311, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.17840314985395553, "compression_ratio": 1.6833333333333333, "no_speech_prob": 3.6686342355096713e-06}, {"id": 123, "seek": 33720, "start": 351.2, "end": 354.64, "text": " and the output produced by the system y bar.", "tokens": [50364, 457, 611, 294, 512, 661, 6257, 11, 486, 1936, 50602, 50602, 14722, 264, 2983, 265, 6040, 1344, 11, 4560, 11, 47387, 11, 50810, 50810, 2035, 291, 528, 281, 818, 309, 11, 1296, 264, 14721, 5598, 288, 11, 50976, 50976, 597, 307, 2212, 281, 291, 490, 264, 3097, 992, 11, 51064, 51064, 293, 264, 5598, 7126, 538, 264, 1185, 288, 2159, 13, 51236, 51236, 2264, 30, 51260, 51260, 407, 364, 1365, 295, 341, 11, 257, 588, 2199, 1365, 295, 257, 3287, 51420, 51420, 411, 341, 307, 8213, 24590, 13, 51498, 51498, 682, 8213, 24590, 11, 2031, 307, 257, 8062, 51660, 51660, 18204, 295, 6677, 2031, 741, 311, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.17840314985395553, "compression_ratio": 1.6833333333333333, "no_speech_prob": 3.6686342355096713e-06}, {"id": 124, "seek": 33720, "start": 354.64, "end": 355.12, "text": " OK?", "tokens": [50364, 457, 611, 294, 512, 661, 6257, 11, 486, 1936, 50602, 50602, 14722, 264, 2983, 265, 6040, 1344, 11, 4560, 11, 47387, 11, 50810, 50810, 2035, 291, 528, 281, 818, 309, 11, 1296, 264, 14721, 5598, 288, 11, 50976, 50976, 597, 307, 2212, 281, 291, 490, 264, 3097, 992, 11, 51064, 51064, 293, 264, 5598, 7126, 538, 264, 1185, 288, 2159, 13, 51236, 51236, 2264, 30, 51260, 51260, 407, 364, 1365, 295, 341, 11, 257, 588, 2199, 1365, 295, 257, 3287, 51420, 51420, 411, 341, 307, 8213, 24590, 13, 51498, 51498, 682, 8213, 24590, 11, 2031, 307, 257, 8062, 51660, 51660, 18204, 295, 6677, 2031, 741, 311, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.17840314985395553, "compression_ratio": 1.6833333333333333, "no_speech_prob": 3.6686342355096713e-06}, {"id": 125, "seek": 33720, "start": 355.12, "end": 358.32, "text": " So an example of this, a very simple example of a setting", "tokens": [50364, 457, 611, 294, 512, 661, 6257, 11, 486, 1936, 50602, 50602, 14722, 264, 2983, 265, 6040, 1344, 11, 4560, 11, 47387, 11, 50810, 50810, 2035, 291, 528, 281, 818, 309, 11, 1296, 264, 14721, 5598, 288, 11, 50976, 50976, 597, 307, 2212, 281, 291, 490, 264, 3097, 992, 11, 51064, 51064, 293, 264, 5598, 7126, 538, 264, 1185, 288, 2159, 13, 51236, 51236, 2264, 30, 51260, 51260, 407, 364, 1365, 295, 341, 11, 257, 588, 2199, 1365, 295, 257, 3287, 51420, 51420, 411, 341, 307, 8213, 24590, 13, 51498, 51498, 682, 8213, 24590, 11, 2031, 307, 257, 8062, 51660, 51660, 18204, 295, 6677, 2031, 741, 311, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.17840314985395553, "compression_ratio": 1.6833333333333333, "no_speech_prob": 3.6686342355096713e-06}, {"id": 126, "seek": 33720, "start": 358.32, "end": 359.88, "text": " like this is linear regression.", "tokens": [50364, 457, 611, 294, 512, 661, 6257, 11, 486, 1936, 50602, 50602, 14722, 264, 2983, 265, 6040, 1344, 11, 4560, 11, 47387, 11, 50810, 50810, 2035, 291, 528, 281, 818, 309, 11, 1296, 264, 14721, 5598, 288, 11, 50976, 50976, 597, 307, 2212, 281, 291, 490, 264, 3097, 992, 11, 51064, 51064, 293, 264, 5598, 7126, 538, 264, 1185, 288, 2159, 13, 51236, 51236, 2264, 30, 51260, 51260, 407, 364, 1365, 295, 341, 11, 257, 588, 2199, 1365, 295, 257, 3287, 51420, 51420, 411, 341, 307, 8213, 24590, 13, 51498, 51498, 682, 8213, 24590, 11, 2031, 307, 257, 8062, 51660, 51660, 18204, 295, 6677, 2031, 741, 311, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.17840314985395553, "compression_ratio": 1.6833333333333333, "no_speech_prob": 3.6686342355096713e-06}, {"id": 127, "seek": 33720, "start": 359.88, "end": 363.12, "text": " In linear regression, x is a vector", "tokens": [50364, 457, 611, 294, 512, 661, 6257, 11, 486, 1936, 50602, 50602, 14722, 264, 2983, 265, 6040, 1344, 11, 4560, 11, 47387, 11, 50810, 50810, 2035, 291, 528, 281, 818, 309, 11, 1296, 264, 14721, 5598, 288, 11, 50976, 50976, 597, 307, 2212, 281, 291, 490, 264, 3097, 992, 11, 51064, 51064, 293, 264, 5598, 7126, 538, 264, 1185, 288, 2159, 13, 51236, 51236, 2264, 30, 51260, 51260, 407, 364, 1365, 295, 341, 11, 257, 588, 2199, 1365, 295, 257, 3287, 51420, 51420, 411, 341, 307, 8213, 24590, 13, 51498, 51498, 682, 8213, 24590, 11, 2031, 307, 257, 8062, 51660, 51660, 18204, 295, 6677, 2031, 741, 311, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.17840314985395553, "compression_ratio": 1.6833333333333333, "no_speech_prob": 3.6686342355096713e-06}, {"id": 128, "seek": 33720, "start": 363.12, "end": 365.4, "text": " composed of components x i's.", "tokens": [50364, 457, 611, 294, 512, 661, 6257, 11, 486, 1936, 50602, 50602, 14722, 264, 2983, 265, 6040, 1344, 11, 4560, 11, 47387, 11, 50810, 50810, 2035, 291, 528, 281, 818, 309, 11, 1296, 264, 14721, 5598, 288, 11, 50976, 50976, 597, 307, 2212, 281, 291, 490, 264, 3097, 992, 11, 51064, 51064, 293, 264, 5598, 7126, 538, 264, 1185, 288, 2159, 13, 51236, 51236, 2264, 30, 51260, 51260, 407, 364, 1365, 295, 341, 11, 257, 588, 2199, 1365, 295, 257, 3287, 51420, 51420, 411, 341, 307, 8213, 24590, 13, 51498, 51498, 682, 8213, 24590, 11, 2031, 307, 257, 8062, 51660, 51660, 18204, 295, 6677, 2031, 741, 311, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.17840314985395553, "compression_ratio": 1.6833333333333333, "no_speech_prob": 3.6686342355096713e-06}, {"id": 129, "seek": 36540, "start": 365.4, "end": 367.44, "text": " w is also a vector, and the output", "tokens": [50364, 261, 307, 611, 257, 8062, 11, 293, 264, 5598, 50466, 50466, 307, 257, 39684, 300, 307, 2935, 264, 5893, 1674, 295, 2031, 365, 261, 13, 50726, 50726, 407, 288, 2159, 586, 307, 257, 39684, 11, 293, 437, 291, 14722, 50880, 50880, 307, 264, 3732, 4560, 11, 264, 3732, 2649, 11, 534, 11, 51020, 51020, 1296, 288, 293, 288, 2159, 13, 51084, 51084, 759, 261, 307, 257, 8141, 11, 550, 586, 288, 307, 257, 8062, 11, 51224, 51224, 293, 291, 14722, 264, 3732, 2026, 295, 264, 2649, 1296, 288, 51406, 51406, 293, 288, 2159, 13, 51450, 51450, 400, 300, 311, 1936, 8213, 24590, 13, 51654, 51654, 407, 2539, 486, 4603, 294, 5006, 264, 992, 295, 261, 311, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08630037307739258, "compression_ratio": 1.8699551569506727, "no_speech_prob": 5.507165496965172e-06}, {"id": 130, "seek": 36540, "start": 367.44, "end": 372.64, "text": " is a scalar that is simply the dot product of x with w.", "tokens": [50364, 261, 307, 611, 257, 8062, 11, 293, 264, 5598, 50466, 50466, 307, 257, 39684, 300, 307, 2935, 264, 5893, 1674, 295, 2031, 365, 261, 13, 50726, 50726, 407, 288, 2159, 586, 307, 257, 39684, 11, 293, 437, 291, 14722, 50880, 50880, 307, 264, 3732, 4560, 11, 264, 3732, 2649, 11, 534, 11, 51020, 51020, 1296, 288, 293, 288, 2159, 13, 51084, 51084, 759, 261, 307, 257, 8141, 11, 550, 586, 288, 307, 257, 8062, 11, 51224, 51224, 293, 291, 14722, 264, 3732, 2026, 295, 264, 2649, 1296, 288, 51406, 51406, 293, 288, 2159, 13, 51450, 51450, 400, 300, 311, 1936, 8213, 24590, 13, 51654, 51654, 407, 2539, 486, 4603, 294, 5006, 264, 992, 295, 261, 311, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08630037307739258, "compression_ratio": 1.8699551569506727, "no_speech_prob": 5.507165496965172e-06}, {"id": 131, "seek": 36540, "start": 372.64, "end": 375.71999999999997, "text": " So y bar now is a scalar, and what you compute", "tokens": [50364, 261, 307, 611, 257, 8062, 11, 293, 264, 5598, 50466, 50466, 307, 257, 39684, 300, 307, 2935, 264, 5893, 1674, 295, 2031, 365, 261, 13, 50726, 50726, 407, 288, 2159, 586, 307, 257, 39684, 11, 293, 437, 291, 14722, 50880, 50880, 307, 264, 3732, 4560, 11, 264, 3732, 2649, 11, 534, 11, 51020, 51020, 1296, 288, 293, 288, 2159, 13, 51084, 51084, 759, 261, 307, 257, 8141, 11, 550, 586, 288, 307, 257, 8062, 11, 51224, 51224, 293, 291, 14722, 264, 3732, 2026, 295, 264, 2649, 1296, 288, 51406, 51406, 293, 288, 2159, 13, 51450, 51450, 400, 300, 311, 1936, 8213, 24590, 13, 51654, 51654, 407, 2539, 486, 4603, 294, 5006, 264, 992, 295, 261, 311, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08630037307739258, "compression_ratio": 1.8699551569506727, "no_speech_prob": 5.507165496965172e-06}, {"id": 132, "seek": 36540, "start": 375.71999999999997, "end": 378.52, "text": " is the square distance, the square difference, really,", "tokens": [50364, 261, 307, 611, 257, 8062, 11, 293, 264, 5598, 50466, 50466, 307, 257, 39684, 300, 307, 2935, 264, 5893, 1674, 295, 2031, 365, 261, 13, 50726, 50726, 407, 288, 2159, 586, 307, 257, 39684, 11, 293, 437, 291, 14722, 50880, 50880, 307, 264, 3732, 4560, 11, 264, 3732, 2649, 11, 534, 11, 51020, 51020, 1296, 288, 293, 288, 2159, 13, 51084, 51084, 759, 261, 307, 257, 8141, 11, 550, 586, 288, 307, 257, 8062, 11, 51224, 51224, 293, 291, 14722, 264, 3732, 2026, 295, 264, 2649, 1296, 288, 51406, 51406, 293, 288, 2159, 13, 51450, 51450, 400, 300, 311, 1936, 8213, 24590, 13, 51654, 51654, 407, 2539, 486, 4603, 294, 5006, 264, 992, 295, 261, 311, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08630037307739258, "compression_ratio": 1.8699551569506727, "no_speech_prob": 5.507165496965172e-06}, {"id": 133, "seek": 36540, "start": 378.52, "end": 379.79999999999995, "text": " between y and y bar.", "tokens": [50364, 261, 307, 611, 257, 8062, 11, 293, 264, 5598, 50466, 50466, 307, 257, 39684, 300, 307, 2935, 264, 5893, 1674, 295, 2031, 365, 261, 13, 50726, 50726, 407, 288, 2159, 586, 307, 257, 39684, 11, 293, 437, 291, 14722, 50880, 50880, 307, 264, 3732, 4560, 11, 264, 3732, 2649, 11, 534, 11, 51020, 51020, 1296, 288, 293, 288, 2159, 13, 51084, 51084, 759, 261, 307, 257, 8141, 11, 550, 586, 288, 307, 257, 8062, 11, 51224, 51224, 293, 291, 14722, 264, 3732, 2026, 295, 264, 2649, 1296, 288, 51406, 51406, 293, 288, 2159, 13, 51450, 51450, 400, 300, 311, 1936, 8213, 24590, 13, 51654, 51654, 407, 2539, 486, 4603, 294, 5006, 264, 992, 295, 261, 311, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08630037307739258, "compression_ratio": 1.8699551569506727, "no_speech_prob": 5.507165496965172e-06}, {"id": 134, "seek": 36540, "start": 379.79999999999995, "end": 382.59999999999997, "text": " If w is a matrix, then now y is a vector,", "tokens": [50364, 261, 307, 611, 257, 8062, 11, 293, 264, 5598, 50466, 50466, 307, 257, 39684, 300, 307, 2935, 264, 5893, 1674, 295, 2031, 365, 261, 13, 50726, 50726, 407, 288, 2159, 586, 307, 257, 39684, 11, 293, 437, 291, 14722, 50880, 50880, 307, 264, 3732, 4560, 11, 264, 3732, 2649, 11, 534, 11, 51020, 51020, 1296, 288, 293, 288, 2159, 13, 51084, 51084, 759, 261, 307, 257, 8141, 11, 550, 586, 288, 307, 257, 8062, 11, 51224, 51224, 293, 291, 14722, 264, 3732, 2026, 295, 264, 2649, 1296, 288, 51406, 51406, 293, 288, 2159, 13, 51450, 51450, 400, 300, 311, 1936, 8213, 24590, 13, 51654, 51654, 407, 2539, 486, 4603, 294, 5006, 264, 992, 295, 261, 311, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08630037307739258, "compression_ratio": 1.8699551569506727, "no_speech_prob": 5.507165496965172e-06}, {"id": 135, "seek": 36540, "start": 382.59999999999997, "end": 386.23999999999995, "text": " and you compute the square norm of the difference between y", "tokens": [50364, 261, 307, 611, 257, 8062, 11, 293, 264, 5598, 50466, 50466, 307, 257, 39684, 300, 307, 2935, 264, 5893, 1674, 295, 2031, 365, 261, 13, 50726, 50726, 407, 288, 2159, 586, 307, 257, 39684, 11, 293, 437, 291, 14722, 50880, 50880, 307, 264, 3732, 4560, 11, 264, 3732, 2649, 11, 534, 11, 51020, 51020, 1296, 288, 293, 288, 2159, 13, 51084, 51084, 759, 261, 307, 257, 8141, 11, 550, 586, 288, 307, 257, 8062, 11, 51224, 51224, 293, 291, 14722, 264, 3732, 2026, 295, 264, 2649, 1296, 288, 51406, 51406, 293, 288, 2159, 13, 51450, 51450, 400, 300, 311, 1936, 8213, 24590, 13, 51654, 51654, 407, 2539, 486, 4603, 294, 5006, 264, 992, 295, 261, 311, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08630037307739258, "compression_ratio": 1.8699551569506727, "no_speech_prob": 5.507165496965172e-06}, {"id": 136, "seek": 36540, "start": 386.23999999999995, "end": 387.12, "text": " and y bar.", "tokens": [50364, 261, 307, 611, 257, 8062, 11, 293, 264, 5598, 50466, 50466, 307, 257, 39684, 300, 307, 2935, 264, 5893, 1674, 295, 2031, 365, 261, 13, 50726, 50726, 407, 288, 2159, 586, 307, 257, 39684, 11, 293, 437, 291, 14722, 50880, 50880, 307, 264, 3732, 4560, 11, 264, 3732, 2649, 11, 534, 11, 51020, 51020, 1296, 288, 293, 288, 2159, 13, 51084, 51084, 759, 261, 307, 257, 8141, 11, 550, 586, 288, 307, 257, 8062, 11, 51224, 51224, 293, 291, 14722, 264, 3732, 2026, 295, 264, 2649, 1296, 288, 51406, 51406, 293, 288, 2159, 13, 51450, 51450, 400, 300, 311, 1936, 8213, 24590, 13, 51654, 51654, 407, 2539, 486, 4603, 294, 5006, 264, 992, 295, 261, 311, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08630037307739258, "compression_ratio": 1.8699551569506727, "no_speech_prob": 5.507165496965172e-06}, {"id": 137, "seek": 36540, "start": 387.12, "end": 391.2, "text": " And that's basically linear regression.", "tokens": [50364, 261, 307, 611, 257, 8062, 11, 293, 264, 5598, 50466, 50466, 307, 257, 39684, 300, 307, 2935, 264, 5893, 1674, 295, 2031, 365, 261, 13, 50726, 50726, 407, 288, 2159, 586, 307, 257, 39684, 11, 293, 437, 291, 14722, 50880, 50880, 307, 264, 3732, 4560, 11, 264, 3732, 2649, 11, 534, 11, 51020, 51020, 1296, 288, 293, 288, 2159, 13, 51084, 51084, 759, 261, 307, 257, 8141, 11, 550, 586, 288, 307, 257, 8062, 11, 51224, 51224, 293, 291, 14722, 264, 3732, 2026, 295, 264, 2649, 1296, 288, 51406, 51406, 293, 288, 2159, 13, 51450, 51450, 400, 300, 311, 1936, 8213, 24590, 13, 51654, 51654, 407, 2539, 486, 4603, 294, 5006, 264, 992, 295, 261, 311, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08630037307739258, "compression_ratio": 1.8699551569506727, "no_speech_prob": 5.507165496965172e-06}, {"id": 138, "seek": 36540, "start": 391.2, "end": 393.84, "text": " So learning will consist in finding the set of w's", "tokens": [50364, 261, 307, 611, 257, 8062, 11, 293, 264, 5598, 50466, 50466, 307, 257, 39684, 300, 307, 2935, 264, 5893, 1674, 295, 2031, 365, 261, 13, 50726, 50726, 407, 288, 2159, 586, 307, 257, 39684, 11, 293, 437, 291, 14722, 50880, 50880, 307, 264, 3732, 4560, 11, 264, 3732, 2649, 11, 534, 11, 51020, 51020, 1296, 288, 293, 288, 2159, 13, 51084, 51084, 759, 261, 307, 257, 8141, 11, 550, 586, 288, 307, 257, 8062, 11, 51224, 51224, 293, 291, 14722, 264, 3732, 2026, 295, 264, 2649, 1296, 288, 51406, 51406, 293, 288, 2159, 13, 51450, 51450, 400, 300, 311, 1936, 8213, 24590, 13, 51654, 51654, 407, 2539, 486, 4603, 294, 5006, 264, 992, 295, 261, 311, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08630037307739258, "compression_ratio": 1.8699551569506727, "no_speech_prob": 5.507165496965172e-06}, {"id": 139, "seek": 39384, "start": 393.84, "end": 396.35999999999996, "text": " that minimize this particular cost function averaged", "tokens": [50364, 300, 17522, 341, 1729, 2063, 2445, 18247, 2980, 50490, 50490, 670, 257, 3097, 992, 13, 50548, 50548, 286, 603, 808, 281, 341, 294, 257, 3456, 13, 50620, 50620, 583, 286, 528, 291, 281, 519, 558, 586, 466, 264, 1186, 50732, 50732, 300, 341, 290, 2445, 815, 406, 312, 746, 4098, 50920, 50920, 2199, 281, 14722, 13, 50964, 50964, 407, 309, 815, 406, 312, 445, 30955, 257, 8062, 51102, 51102, 538, 8141, 13, 51134, 51134, 467, 815, 406, 312, 445, 9792, 512, 1333, 295, 6806, 24903, 51476, 51476, 365, 1333, 295, 257, 6806, 1230, 295, 4439, 13, 51576, 51576, 467, 727, 9494, 746, 6179, 13, 51664, 51664, 467, 727, 9494, 46608, 257, 2445, 365, 3104, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12817424838825808, "compression_ratio": 1.8725099601593624, "no_speech_prob": 6.338889761536848e-06}, {"id": 140, "seek": 39384, "start": 396.35999999999996, "end": 397.52, "text": " over a training set.", "tokens": [50364, 300, 17522, 341, 1729, 2063, 2445, 18247, 2980, 50490, 50490, 670, 257, 3097, 992, 13, 50548, 50548, 286, 603, 808, 281, 341, 294, 257, 3456, 13, 50620, 50620, 583, 286, 528, 291, 281, 519, 558, 586, 466, 264, 1186, 50732, 50732, 300, 341, 290, 2445, 815, 406, 312, 746, 4098, 50920, 50920, 2199, 281, 14722, 13, 50964, 50964, 407, 309, 815, 406, 312, 445, 30955, 257, 8062, 51102, 51102, 538, 8141, 13, 51134, 51134, 467, 815, 406, 312, 445, 9792, 512, 1333, 295, 6806, 24903, 51476, 51476, 365, 1333, 295, 257, 6806, 1230, 295, 4439, 13, 51576, 51576, 467, 727, 9494, 746, 6179, 13, 51664, 51664, 467, 727, 9494, 46608, 257, 2445, 365, 3104, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12817424838825808, "compression_ratio": 1.8725099601593624, "no_speech_prob": 6.338889761536848e-06}, {"id": 141, "seek": 39384, "start": 397.52, "end": 398.96, "text": " I'll come to this in a minute.", "tokens": [50364, 300, 17522, 341, 1729, 2063, 2445, 18247, 2980, 50490, 50490, 670, 257, 3097, 992, 13, 50548, 50548, 286, 603, 808, 281, 341, 294, 257, 3456, 13, 50620, 50620, 583, 286, 528, 291, 281, 519, 558, 586, 466, 264, 1186, 50732, 50732, 300, 341, 290, 2445, 815, 406, 312, 746, 4098, 50920, 50920, 2199, 281, 14722, 13, 50964, 50964, 407, 309, 815, 406, 312, 445, 30955, 257, 8062, 51102, 51102, 538, 8141, 13, 51134, 51134, 467, 815, 406, 312, 445, 9792, 512, 1333, 295, 6806, 24903, 51476, 51476, 365, 1333, 295, 257, 6806, 1230, 295, 4439, 13, 51576, 51576, 467, 727, 9494, 746, 6179, 13, 51664, 51664, 467, 727, 9494, 46608, 257, 2445, 365, 3104, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12817424838825808, "compression_ratio": 1.8725099601593624, "no_speech_prob": 6.338889761536848e-06}, {"id": 142, "seek": 39384, "start": 398.96, "end": 401.2, "text": " But I want you to think right now about the fact", "tokens": [50364, 300, 17522, 341, 1729, 2063, 2445, 18247, 2980, 50490, 50490, 670, 257, 3097, 992, 13, 50548, 50548, 286, 603, 808, 281, 341, 294, 257, 3456, 13, 50620, 50620, 583, 286, 528, 291, 281, 519, 558, 586, 466, 264, 1186, 50732, 50732, 300, 341, 290, 2445, 815, 406, 312, 746, 4098, 50920, 50920, 2199, 281, 14722, 13, 50964, 50964, 407, 309, 815, 406, 312, 445, 30955, 257, 8062, 51102, 51102, 538, 8141, 13, 51134, 51134, 467, 815, 406, 312, 445, 9792, 512, 1333, 295, 6806, 24903, 51476, 51476, 365, 1333, 295, 257, 6806, 1230, 295, 4439, 13, 51576, 51576, 467, 727, 9494, 746, 6179, 13, 51664, 51664, 467, 727, 9494, 46608, 257, 2445, 365, 3104, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12817424838825808, "compression_ratio": 1.8725099601593624, "no_speech_prob": 6.338889761536848e-06}, {"id": 143, "seek": 39384, "start": 401.2, "end": 404.96, "text": " that this g function may not be something particularly", "tokens": [50364, 300, 17522, 341, 1729, 2063, 2445, 18247, 2980, 50490, 50490, 670, 257, 3097, 992, 13, 50548, 50548, 286, 603, 808, 281, 341, 294, 257, 3456, 13, 50620, 50620, 583, 286, 528, 291, 281, 519, 558, 586, 466, 264, 1186, 50732, 50732, 300, 341, 290, 2445, 815, 406, 312, 746, 4098, 50920, 50920, 2199, 281, 14722, 13, 50964, 50964, 407, 309, 815, 406, 312, 445, 30955, 257, 8062, 51102, 51102, 538, 8141, 13, 51134, 51134, 467, 815, 406, 312, 445, 9792, 512, 1333, 295, 6806, 24903, 51476, 51476, 365, 1333, 295, 257, 6806, 1230, 295, 4439, 13, 51576, 51576, 467, 727, 9494, 746, 6179, 13, 51664, 51664, 467, 727, 9494, 46608, 257, 2445, 365, 3104, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12817424838825808, "compression_ratio": 1.8725099601593624, "no_speech_prob": 6.338889761536848e-06}, {"id": 144, "seek": 39384, "start": 404.96, "end": 405.84, "text": " simple to compute.", "tokens": [50364, 300, 17522, 341, 1729, 2063, 2445, 18247, 2980, 50490, 50490, 670, 257, 3097, 992, 13, 50548, 50548, 286, 603, 808, 281, 341, 294, 257, 3456, 13, 50620, 50620, 583, 286, 528, 291, 281, 519, 558, 586, 466, 264, 1186, 50732, 50732, 300, 341, 290, 2445, 815, 406, 312, 746, 4098, 50920, 50920, 2199, 281, 14722, 13, 50964, 50964, 407, 309, 815, 406, 312, 445, 30955, 257, 8062, 51102, 51102, 538, 8141, 13, 51134, 51134, 467, 815, 406, 312, 445, 9792, 512, 1333, 295, 6806, 24903, 51476, 51476, 365, 1333, 295, 257, 6806, 1230, 295, 4439, 13, 51576, 51576, 467, 727, 9494, 746, 6179, 13, 51664, 51664, 467, 727, 9494, 46608, 257, 2445, 365, 3104, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12817424838825808, "compression_ratio": 1.8725099601593624, "no_speech_prob": 6.338889761536848e-06}, {"id": 145, "seek": 39384, "start": 405.84, "end": 408.59999999999997, "text": " So it may not be just multiplying a vector", "tokens": [50364, 300, 17522, 341, 1729, 2063, 2445, 18247, 2980, 50490, 50490, 670, 257, 3097, 992, 13, 50548, 50548, 286, 603, 808, 281, 341, 294, 257, 3456, 13, 50620, 50620, 583, 286, 528, 291, 281, 519, 558, 586, 466, 264, 1186, 50732, 50732, 300, 341, 290, 2445, 815, 406, 312, 746, 4098, 50920, 50920, 2199, 281, 14722, 13, 50964, 50964, 407, 309, 815, 406, 312, 445, 30955, 257, 8062, 51102, 51102, 538, 8141, 13, 51134, 51134, 467, 815, 406, 312, 445, 9792, 512, 1333, 295, 6806, 24903, 51476, 51476, 365, 1333, 295, 257, 6806, 1230, 295, 4439, 13, 51576, 51576, 467, 727, 9494, 746, 6179, 13, 51664, 51664, 467, 727, 9494, 46608, 257, 2445, 365, 3104, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12817424838825808, "compression_ratio": 1.8725099601593624, "no_speech_prob": 6.338889761536848e-06}, {"id": 146, "seek": 39384, "start": 408.59999999999997, "end": 409.23999999999995, "text": " by matrix.", "tokens": [50364, 300, 17522, 341, 1729, 2063, 2445, 18247, 2980, 50490, 50490, 670, 257, 3097, 992, 13, 50548, 50548, 286, 603, 808, 281, 341, 294, 257, 3456, 13, 50620, 50620, 583, 286, 528, 291, 281, 519, 558, 586, 466, 264, 1186, 50732, 50732, 300, 341, 290, 2445, 815, 406, 312, 746, 4098, 50920, 50920, 2199, 281, 14722, 13, 50964, 50964, 407, 309, 815, 406, 312, 445, 30955, 257, 8062, 51102, 51102, 538, 8141, 13, 51134, 51134, 467, 815, 406, 312, 445, 9792, 512, 1333, 295, 6806, 24903, 51476, 51476, 365, 1333, 295, 257, 6806, 1230, 295, 4439, 13, 51576, 51576, 467, 727, 9494, 746, 6179, 13, 51664, 51664, 467, 727, 9494, 46608, 257, 2445, 365, 3104, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12817424838825808, "compression_ratio": 1.8725099601593624, "no_speech_prob": 6.338889761536848e-06}, {"id": 147, "seek": 39384, "start": 409.23999999999995, "end": 416.08, "text": " It may not be just carrying some sort of fixed computation", "tokens": [50364, 300, 17522, 341, 1729, 2063, 2445, 18247, 2980, 50490, 50490, 670, 257, 3097, 992, 13, 50548, 50548, 286, 603, 808, 281, 341, 294, 257, 3456, 13, 50620, 50620, 583, 286, 528, 291, 281, 519, 558, 586, 466, 264, 1186, 50732, 50732, 300, 341, 290, 2445, 815, 406, 312, 746, 4098, 50920, 50920, 2199, 281, 14722, 13, 50964, 50964, 407, 309, 815, 406, 312, 445, 30955, 257, 8062, 51102, 51102, 538, 8141, 13, 51134, 51134, 467, 815, 406, 312, 445, 9792, 512, 1333, 295, 6806, 24903, 51476, 51476, 365, 1333, 295, 257, 6806, 1230, 295, 4439, 13, 51576, 51576, 467, 727, 9494, 746, 6179, 13, 51664, 51664, 467, 727, 9494, 46608, 257, 2445, 365, 3104, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12817424838825808, "compression_ratio": 1.8725099601593624, "no_speech_prob": 6.338889761536848e-06}, {"id": 148, "seek": 39384, "start": 416.08, "end": 418.08, "text": " with sort of a fixed number of steps.", "tokens": [50364, 300, 17522, 341, 1729, 2063, 2445, 18247, 2980, 50490, 50490, 670, 257, 3097, 992, 13, 50548, 50548, 286, 603, 808, 281, 341, 294, 257, 3456, 13, 50620, 50620, 583, 286, 528, 291, 281, 519, 558, 586, 466, 264, 1186, 50732, 50732, 300, 341, 290, 2445, 815, 406, 312, 746, 4098, 50920, 50920, 2199, 281, 14722, 13, 50964, 50964, 407, 309, 815, 406, 312, 445, 30955, 257, 8062, 51102, 51102, 538, 8141, 13, 51134, 51134, 467, 815, 406, 312, 445, 9792, 512, 1333, 295, 6806, 24903, 51476, 51476, 365, 1333, 295, 257, 6806, 1230, 295, 4439, 13, 51576, 51576, 467, 727, 9494, 746, 6179, 13, 51664, 51664, 467, 727, 9494, 46608, 257, 2445, 365, 3104, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12817424838825808, "compression_ratio": 1.8725099601593624, "no_speech_prob": 6.338889761536848e-06}, {"id": 149, "seek": 39384, "start": 418.08, "end": 419.84, "text": " It could involve something complicated.", "tokens": [50364, 300, 17522, 341, 1729, 2063, 2445, 18247, 2980, 50490, 50490, 670, 257, 3097, 992, 13, 50548, 50548, 286, 603, 808, 281, 341, 294, 257, 3456, 13, 50620, 50620, 583, 286, 528, 291, 281, 519, 558, 586, 466, 264, 1186, 50732, 50732, 300, 341, 290, 2445, 815, 406, 312, 746, 4098, 50920, 50920, 2199, 281, 14722, 13, 50964, 50964, 407, 309, 815, 406, 312, 445, 30955, 257, 8062, 51102, 51102, 538, 8141, 13, 51134, 51134, 467, 815, 406, 312, 445, 9792, 512, 1333, 295, 6806, 24903, 51476, 51476, 365, 1333, 295, 257, 6806, 1230, 295, 4439, 13, 51576, 51576, 467, 727, 9494, 746, 6179, 13, 51664, 51664, 467, 727, 9494, 46608, 257, 2445, 365, 3104, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12817424838825808, "compression_ratio": 1.8725099601593624, "no_speech_prob": 6.338889761536848e-06}, {"id": 150, "seek": 39384, "start": 419.84, "end": 423.0, "text": " It could involve minimizing a function with respect", "tokens": [50364, 300, 17522, 341, 1729, 2063, 2445, 18247, 2980, 50490, 50490, 670, 257, 3097, 992, 13, 50548, 50548, 286, 603, 808, 281, 341, 294, 257, 3456, 13, 50620, 50620, 583, 286, 528, 291, 281, 519, 558, 586, 466, 264, 1186, 50732, 50732, 300, 341, 290, 2445, 815, 406, 312, 746, 4098, 50920, 50920, 2199, 281, 14722, 13, 50964, 50964, 407, 309, 815, 406, 312, 445, 30955, 257, 8062, 51102, 51102, 538, 8141, 13, 51134, 51134, 467, 815, 406, 312, 445, 9792, 512, 1333, 295, 6806, 24903, 51476, 51476, 365, 1333, 295, 257, 6806, 1230, 295, 4439, 13, 51576, 51576, 467, 727, 9494, 746, 6179, 13, 51664, 51664, 467, 727, 9494, 46608, 257, 2445, 365, 3104, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12817424838825808, "compression_ratio": 1.8725099601593624, "no_speech_prob": 6.338889761536848e-06}, {"id": 151, "seek": 42300, "start": 423.0, "end": 425.32, "text": " to some other variable that you don't know.", "tokens": [50364, 281, 512, 661, 7006, 300, 291, 500, 380, 458, 13, 50480, 50480, 467, 727, 9494, 257, 688, 295, 24784, 50664, 50664, 295, 512, 9284, 300, 9652, 2880, 3030, 257, 6806, 935, 13, 50826, 50826, 407, 718, 311, 406, 7694, 4175, 281, 290, 295, 2031, 11, 261, 11, 51114, 51114, 300, 366, 2199, 721, 13, 51196, 51196, 467, 727, 312, 588, 6179, 721, 13, 51270, 51270, 400, 321, 603, 808, 281, 341, 294, 257, 1326, 3259, 13, 51394, 51394, 1779, 11, 370, 341, 307, 445, 281, 2903, 264, 406, 763, 51558, 51558, 300, 286, 486, 764, 1830, 264, 1164, 295, 341, 1508, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15039480857129367, "compression_ratio": 1.6085106382978724, "no_speech_prob": 9.515804777038284e-06}, {"id": 152, "seek": 42300, "start": 425.32, "end": 429.0, "text": " It could involve a lot of iteration", "tokens": [50364, 281, 512, 661, 7006, 300, 291, 500, 380, 458, 13, 50480, 50480, 467, 727, 9494, 257, 688, 295, 24784, 50664, 50664, 295, 512, 9284, 300, 9652, 2880, 3030, 257, 6806, 935, 13, 50826, 50826, 407, 718, 311, 406, 7694, 4175, 281, 290, 295, 2031, 11, 261, 11, 51114, 51114, 300, 366, 2199, 721, 13, 51196, 51196, 467, 727, 312, 588, 6179, 721, 13, 51270, 51270, 400, 321, 603, 808, 281, 341, 294, 257, 1326, 3259, 13, 51394, 51394, 1779, 11, 370, 341, 307, 445, 281, 2903, 264, 406, 763, 51558, 51558, 300, 286, 486, 764, 1830, 264, 1164, 295, 341, 1508, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15039480857129367, "compression_ratio": 1.6085106382978724, "no_speech_prob": 9.515804777038284e-06}, {"id": 153, "seek": 42300, "start": 429.0, "end": 432.24, "text": " of some algorithm that converges towards a fixed point.", "tokens": [50364, 281, 512, 661, 7006, 300, 291, 500, 380, 458, 13, 50480, 50480, 467, 727, 9494, 257, 688, 295, 24784, 50664, 50664, 295, 512, 9284, 300, 9652, 2880, 3030, 257, 6806, 935, 13, 50826, 50826, 407, 718, 311, 406, 7694, 4175, 281, 290, 295, 2031, 11, 261, 11, 51114, 51114, 300, 366, 2199, 721, 13, 51196, 51196, 467, 727, 312, 588, 6179, 721, 13, 51270, 51270, 400, 321, 603, 808, 281, 341, 294, 257, 1326, 3259, 13, 51394, 51394, 1779, 11, 370, 341, 307, 445, 281, 2903, 264, 406, 763, 51558, 51558, 300, 286, 486, 764, 1830, 264, 1164, 295, 341, 1508, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15039480857129367, "compression_ratio": 1.6085106382978724, "no_speech_prob": 9.515804777038284e-06}, {"id": 154, "seek": 42300, "start": 432.24, "end": 438.0, "text": " So let's not restrict ourselves to g of x, w,", "tokens": [50364, 281, 512, 661, 7006, 300, 291, 500, 380, 458, 13, 50480, 50480, 467, 727, 9494, 257, 688, 295, 24784, 50664, 50664, 295, 512, 9284, 300, 9652, 2880, 3030, 257, 6806, 935, 13, 50826, 50826, 407, 718, 311, 406, 7694, 4175, 281, 290, 295, 2031, 11, 261, 11, 51114, 51114, 300, 366, 2199, 721, 13, 51196, 51196, 467, 727, 312, 588, 6179, 721, 13, 51270, 51270, 400, 321, 603, 808, 281, 341, 294, 257, 1326, 3259, 13, 51394, 51394, 1779, 11, 370, 341, 307, 445, 281, 2903, 264, 406, 763, 51558, 51558, 300, 286, 486, 764, 1830, 264, 1164, 295, 341, 1508, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15039480857129367, "compression_ratio": 1.6085106382978724, "no_speech_prob": 9.515804777038284e-06}, {"id": 155, "seek": 42300, "start": 438.0, "end": 439.64, "text": " that are simple things.", "tokens": [50364, 281, 512, 661, 7006, 300, 291, 500, 380, 458, 13, 50480, 50480, 467, 727, 9494, 257, 688, 295, 24784, 50664, 50664, 295, 512, 9284, 300, 9652, 2880, 3030, 257, 6806, 935, 13, 50826, 50826, 407, 718, 311, 406, 7694, 4175, 281, 290, 295, 2031, 11, 261, 11, 51114, 51114, 300, 366, 2199, 721, 13, 51196, 51196, 467, 727, 312, 588, 6179, 721, 13, 51270, 51270, 400, 321, 603, 808, 281, 341, 294, 257, 1326, 3259, 13, 51394, 51394, 1779, 11, 370, 341, 307, 445, 281, 2903, 264, 406, 763, 51558, 51558, 300, 286, 486, 764, 1830, 264, 1164, 295, 341, 1508, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15039480857129367, "compression_ratio": 1.6085106382978724, "no_speech_prob": 9.515804777038284e-06}, {"id": 156, "seek": 42300, "start": 439.64, "end": 441.12, "text": " It could be very complicated things.", "tokens": [50364, 281, 512, 661, 7006, 300, 291, 500, 380, 458, 13, 50480, 50480, 467, 727, 9494, 257, 688, 295, 24784, 50664, 50664, 295, 512, 9284, 300, 9652, 2880, 3030, 257, 6806, 935, 13, 50826, 50826, 407, 718, 311, 406, 7694, 4175, 281, 290, 295, 2031, 11, 261, 11, 51114, 51114, 300, 366, 2199, 721, 13, 51196, 51196, 467, 727, 312, 588, 6179, 721, 13, 51270, 51270, 400, 321, 603, 808, 281, 341, 294, 257, 1326, 3259, 13, 51394, 51394, 1779, 11, 370, 341, 307, 445, 281, 2903, 264, 406, 763, 51558, 51558, 300, 286, 486, 764, 1830, 264, 1164, 295, 341, 1508, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15039480857129367, "compression_ratio": 1.6085106382978724, "no_speech_prob": 9.515804777038284e-06}, {"id": 157, "seek": 42300, "start": 441.12, "end": 443.6, "text": " And we'll come to this in a few weeks.", "tokens": [50364, 281, 512, 661, 7006, 300, 291, 500, 380, 458, 13, 50480, 50480, 467, 727, 9494, 257, 688, 295, 24784, 50664, 50664, 295, 512, 9284, 300, 9652, 2880, 3030, 257, 6806, 935, 13, 50826, 50826, 407, 718, 311, 406, 7694, 4175, 281, 290, 295, 2031, 11, 261, 11, 51114, 51114, 300, 366, 2199, 721, 13, 51196, 51196, 467, 727, 312, 588, 6179, 721, 13, 51270, 51270, 400, 321, 603, 808, 281, 341, 294, 257, 1326, 3259, 13, 51394, 51394, 1779, 11, 370, 341, 307, 445, 281, 2903, 264, 406, 763, 51558, 51558, 300, 286, 486, 764, 1830, 264, 1164, 295, 341, 1508, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15039480857129367, "compression_ratio": 1.6085106382978724, "no_speech_prob": 9.515804777038284e-06}, {"id": 158, "seek": 42300, "start": 443.6, "end": 446.88, "text": " Right, so this is just to explain the notations", "tokens": [50364, 281, 512, 661, 7006, 300, 291, 500, 380, 458, 13, 50480, 50480, 467, 727, 9494, 257, 688, 295, 24784, 50664, 50664, 295, 512, 9284, 300, 9652, 2880, 3030, 257, 6806, 935, 13, 50826, 50826, 407, 718, 311, 406, 7694, 4175, 281, 290, 295, 2031, 11, 261, 11, 51114, 51114, 300, 366, 2199, 721, 13, 51196, 51196, 467, 727, 312, 588, 6179, 721, 13, 51270, 51270, 400, 321, 603, 808, 281, 341, 294, 257, 1326, 3259, 13, 51394, 51394, 1779, 11, 370, 341, 307, 445, 281, 2903, 264, 406, 763, 51558, 51558, 300, 286, 486, 764, 1830, 264, 1164, 295, 341, 1508, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15039480857129367, "compression_ratio": 1.6085106382978724, "no_speech_prob": 9.515804777038284e-06}, {"id": 159, "seek": 42300, "start": 446.88, "end": 451.64, "text": " that I will use during the course of this class.", "tokens": [50364, 281, 512, 661, 7006, 300, 291, 500, 380, 458, 13, 50480, 50480, 467, 727, 9494, 257, 688, 295, 24784, 50664, 50664, 295, 512, 9284, 300, 9652, 2880, 3030, 257, 6806, 935, 13, 50826, 50826, 407, 718, 311, 406, 7694, 4175, 281, 290, 295, 2031, 11, 261, 11, 51114, 51114, 300, 366, 2199, 721, 13, 51196, 51196, 467, 727, 312, 588, 6179, 721, 13, 51270, 51270, 400, 321, 603, 808, 281, 341, 294, 257, 1326, 3259, 13, 51394, 51394, 1779, 11, 370, 341, 307, 445, 281, 2903, 264, 406, 763, 51558, 51558, 300, 286, 486, 764, 1830, 264, 1164, 295, 341, 1508, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15039480857129367, "compression_ratio": 1.6085106382978724, "no_speech_prob": 9.515804777038284e-06}, {"id": 160, "seek": 45164, "start": 451.64, "end": 455.59999999999997, "text": " So we have observed input and desired output variables.", "tokens": [50364, 407, 321, 362, 13095, 4846, 293, 14721, 5598, 9102, 13, 50562, 50562, 3950, 366, 733, 295, 10855, 742, 16295, 13, 50774, 50774, 5358, 9102, 300, 366, 7126, 538, 264, 1185, 50910, 50910, 420, 6920, 281, 264, 1185, 366, 729, 733, 51052, 51052, 295, 6707, 6329, 9102, 13, 51284, 51284, 492, 362, 15957, 3142, 6828, 13, 51348, 51348, 407, 6828, 300, 366, 16176, 538, 341, 1333, 295, 23382, 3909, 13, 51584, 51584, 1692, 11, 436, 393, 747, 3866, 15743, 293, 3866, 23930, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.13558280190756156, "compression_ratio": 1.7391304347826086, "no_speech_prob": 1.496899585617939e-05}, {"id": 161, "seek": 45164, "start": 455.59999999999997, "end": 459.84, "text": " Those are kind of grayish bubbles.", "tokens": [50364, 407, 321, 362, 13095, 4846, 293, 14721, 5598, 9102, 13, 50562, 50562, 3950, 366, 733, 295, 10855, 742, 16295, 13, 50774, 50774, 5358, 9102, 300, 366, 7126, 538, 264, 1185, 50910, 50910, 420, 6920, 281, 264, 1185, 366, 729, 733, 51052, 51052, 295, 6707, 6329, 9102, 13, 51284, 51284, 492, 362, 15957, 3142, 6828, 13, 51348, 51348, 407, 6828, 300, 366, 16176, 538, 341, 1333, 295, 23382, 3909, 13, 51584, 51584, 1692, 11, 436, 393, 747, 3866, 15743, 293, 3866, 23930, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.13558280190756156, "compression_ratio": 1.7391304347826086, "no_speech_prob": 1.496899585617939e-05}, {"id": 162, "seek": 45164, "start": 459.84, "end": 462.56, "text": " Other variables that are produced by the system", "tokens": [50364, 407, 321, 362, 13095, 4846, 293, 14721, 5598, 9102, 13, 50562, 50562, 3950, 366, 733, 295, 10855, 742, 16295, 13, 50774, 50774, 5358, 9102, 300, 366, 7126, 538, 264, 1185, 50910, 50910, 420, 6920, 281, 264, 1185, 366, 729, 733, 51052, 51052, 295, 6707, 6329, 9102, 13, 51284, 51284, 492, 362, 15957, 3142, 6828, 13, 51348, 51348, 407, 6828, 300, 366, 16176, 538, 341, 1333, 295, 23382, 3909, 13, 51584, 51584, 1692, 11, 436, 393, 747, 3866, 15743, 293, 3866, 23930, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.13558280190756156, "compression_ratio": 1.7391304347826086, "no_speech_prob": 1.496899585617939e-05}, {"id": 163, "seek": 45164, "start": 462.56, "end": 465.4, "text": " or internal to the system are those kind", "tokens": [50364, 407, 321, 362, 13095, 4846, 293, 14721, 5598, 9102, 13, 50562, 50562, 3950, 366, 733, 295, 10855, 742, 16295, 13, 50774, 50774, 5358, 9102, 300, 366, 7126, 538, 264, 1185, 50910, 50910, 420, 6920, 281, 264, 1185, 366, 729, 733, 51052, 51052, 295, 6707, 6329, 9102, 13, 51284, 51284, 492, 362, 15957, 3142, 6828, 13, 51348, 51348, 407, 6828, 300, 366, 16176, 538, 341, 1333, 295, 23382, 3909, 13, 51584, 51584, 1692, 11, 436, 393, 747, 3866, 15743, 293, 3866, 23930, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.13558280190756156, "compression_ratio": 1.7391304347826086, "no_speech_prob": 1.496899585617939e-05}, {"id": 164, "seek": 45164, "start": 465.4, "end": 470.03999999999996, "text": " of empty circle variables.", "tokens": [50364, 407, 321, 362, 13095, 4846, 293, 14721, 5598, 9102, 13, 50562, 50562, 3950, 366, 733, 295, 10855, 742, 16295, 13, 50774, 50774, 5358, 9102, 300, 366, 7126, 538, 264, 1185, 50910, 50910, 420, 6920, 281, 264, 1185, 366, 729, 733, 51052, 51052, 295, 6707, 6329, 9102, 13, 51284, 51284, 492, 362, 15957, 3142, 6828, 13, 51348, 51348, 407, 6828, 300, 366, 16176, 538, 341, 1333, 295, 23382, 3909, 13, 51584, 51584, 1692, 11, 436, 393, 747, 3866, 15743, 293, 3866, 23930, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.13558280190756156, "compression_ratio": 1.7391304347826086, "no_speech_prob": 1.496899585617939e-05}, {"id": 165, "seek": 45164, "start": 470.03999999999996, "end": 471.32, "text": " We have deterministic functions.", "tokens": [50364, 407, 321, 362, 13095, 4846, 293, 14721, 5598, 9102, 13, 50562, 50562, 3950, 366, 733, 295, 10855, 742, 16295, 13, 50774, 50774, 5358, 9102, 300, 366, 7126, 538, 264, 1185, 50910, 50910, 420, 6920, 281, 264, 1185, 366, 729, 733, 51052, 51052, 295, 6707, 6329, 9102, 13, 51284, 51284, 492, 362, 15957, 3142, 6828, 13, 51348, 51348, 407, 6828, 300, 366, 16176, 538, 341, 1333, 295, 23382, 3909, 13, 51584, 51584, 1692, 11, 436, 393, 747, 3866, 15743, 293, 3866, 23930, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.13558280190756156, "compression_ratio": 1.7391304347826086, "no_speech_prob": 1.496899585617939e-05}, {"id": 166, "seek": 45164, "start": 471.32, "end": 476.03999999999996, "text": " So functions that are indicated by this sort of rounded shape.", "tokens": [50364, 407, 321, 362, 13095, 4846, 293, 14721, 5598, 9102, 13, 50562, 50562, 3950, 366, 733, 295, 10855, 742, 16295, 13, 50774, 50774, 5358, 9102, 300, 366, 7126, 538, 264, 1185, 50910, 50910, 420, 6920, 281, 264, 1185, 366, 729, 733, 51052, 51052, 295, 6707, 6329, 9102, 13, 51284, 51284, 492, 362, 15957, 3142, 6828, 13, 51348, 51348, 407, 6828, 300, 366, 16176, 538, 341, 1333, 295, 23382, 3909, 13, 51584, 51584, 1692, 11, 436, 393, 747, 3866, 15743, 293, 3866, 23930, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.13558280190756156, "compression_ratio": 1.7391304347826086, "no_speech_prob": 1.496899585617939e-05}, {"id": 167, "seek": 45164, "start": 476.03999999999996, "end": 479.96, "text": " Here, they can take multiple inputs and multiple outputs.", "tokens": [50364, 407, 321, 362, 13095, 4846, 293, 14721, 5598, 9102, 13, 50562, 50562, 3950, 366, 733, 295, 10855, 742, 16295, 13, 50774, 50774, 5358, 9102, 300, 366, 7126, 538, 264, 1185, 50910, 50910, 420, 6920, 281, 264, 1185, 366, 729, 733, 51052, 51052, 295, 6707, 6329, 9102, 13, 51284, 51284, 492, 362, 15957, 3142, 6828, 13, 51348, 51348, 407, 6828, 300, 366, 16176, 538, 341, 1333, 295, 23382, 3909, 13, 51584, 51584, 1692, 11, 436, 393, 747, 3866, 15743, 293, 3866, 23930, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.13558280190756156, "compression_ratio": 1.7391304347826086, "no_speech_prob": 1.496899585617939e-05}, {"id": 168, "seek": 47996, "start": 479.96, "end": 483.28, "text": " And each of those can be tensors or scalars or whatever.", "tokens": [50364, 400, 1184, 295, 729, 393, 312, 10688, 830, 420, 15664, 685, 420, 2035, 13, 50530, 50530, 400, 436, 362, 26947, 9834, 50598, 50598, 300, 366, 951, 409, 712, 538, 3097, 13, 50718, 50718, 400, 550, 321, 362, 2063, 6828, 13, 50822, 50822, 407, 2063, 6828, 366, 1936, 6828, 50966, 50966, 300, 747, 472, 420, 3866, 15743, 293, 5598, 257, 39684, 13, 51194, 51194, 583, 286, 478, 406, 13460, 264, 5598, 13, 51284, 51284, 467, 311, 26947, 13, 51356, 51356, 407, 498, 291, 362, 257, 2182, 3732, 11, 309, 575, 364, 26947, 5598, 13, 51528, 51528, 400, 309, 311, 257, 39684, 13, 51642, 51642, 400, 321, 7302, 309, 382, 257, 2063, 420, 364, 2281, 2445, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.09300901108429212, "compression_ratio": 1.7883817427385893, "no_speech_prob": 8.139124474837445e-06}, {"id": 169, "seek": 47996, "start": 483.28, "end": 484.64, "text": " And they have implicit parameters", "tokens": [50364, 400, 1184, 295, 729, 393, 312, 10688, 830, 420, 15664, 685, 420, 2035, 13, 50530, 50530, 400, 436, 362, 26947, 9834, 50598, 50598, 300, 366, 951, 409, 712, 538, 3097, 13, 50718, 50718, 400, 550, 321, 362, 2063, 6828, 13, 50822, 50822, 407, 2063, 6828, 366, 1936, 6828, 50966, 50966, 300, 747, 472, 420, 3866, 15743, 293, 5598, 257, 39684, 13, 51194, 51194, 583, 286, 478, 406, 13460, 264, 5598, 13, 51284, 51284, 467, 311, 26947, 13, 51356, 51356, 407, 498, 291, 362, 257, 2182, 3732, 11, 309, 575, 364, 26947, 5598, 13, 51528, 51528, 400, 309, 311, 257, 39684, 13, 51642, 51642, 400, 321, 7302, 309, 382, 257, 2063, 420, 364, 2281, 2445, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.09300901108429212, "compression_ratio": 1.7883817427385893, "no_speech_prob": 8.139124474837445e-06}, {"id": 170, "seek": 47996, "start": 484.64, "end": 487.03999999999996, "text": " that are attunable by training.", "tokens": [50364, 400, 1184, 295, 729, 393, 312, 10688, 830, 420, 15664, 685, 420, 2035, 13, 50530, 50530, 400, 436, 362, 26947, 9834, 50598, 50598, 300, 366, 951, 409, 712, 538, 3097, 13, 50718, 50718, 400, 550, 321, 362, 2063, 6828, 13, 50822, 50822, 407, 2063, 6828, 366, 1936, 6828, 50966, 50966, 300, 747, 472, 420, 3866, 15743, 293, 5598, 257, 39684, 13, 51194, 51194, 583, 286, 478, 406, 13460, 264, 5598, 13, 51284, 51284, 467, 311, 26947, 13, 51356, 51356, 407, 498, 291, 362, 257, 2182, 3732, 11, 309, 575, 364, 26947, 5598, 13, 51528, 51528, 400, 309, 311, 257, 39684, 13, 51642, 51642, 400, 321, 7302, 309, 382, 257, 2063, 420, 364, 2281, 2445, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.09300901108429212, "compression_ratio": 1.7883817427385893, "no_speech_prob": 8.139124474837445e-06}, {"id": 171, "seek": 47996, "start": 487.03999999999996, "end": 489.12, "text": " And then we have cost functions.", "tokens": [50364, 400, 1184, 295, 729, 393, 312, 10688, 830, 420, 15664, 685, 420, 2035, 13, 50530, 50530, 400, 436, 362, 26947, 9834, 50598, 50598, 300, 366, 951, 409, 712, 538, 3097, 13, 50718, 50718, 400, 550, 321, 362, 2063, 6828, 13, 50822, 50822, 407, 2063, 6828, 366, 1936, 6828, 50966, 50966, 300, 747, 472, 420, 3866, 15743, 293, 5598, 257, 39684, 13, 51194, 51194, 583, 286, 478, 406, 13460, 264, 5598, 13, 51284, 51284, 467, 311, 26947, 13, 51356, 51356, 407, 498, 291, 362, 257, 2182, 3732, 11, 309, 575, 364, 26947, 5598, 13, 51528, 51528, 400, 309, 311, 257, 39684, 13, 51642, 51642, 400, 321, 7302, 309, 382, 257, 2063, 420, 364, 2281, 2445, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.09300901108429212, "compression_ratio": 1.7883817427385893, "no_speech_prob": 8.139124474837445e-06}, {"id": 172, "seek": 47996, "start": 489.12, "end": 492.0, "text": " So cost functions are basically functions", "tokens": [50364, 400, 1184, 295, 729, 393, 312, 10688, 830, 420, 15664, 685, 420, 2035, 13, 50530, 50530, 400, 436, 362, 26947, 9834, 50598, 50598, 300, 366, 951, 409, 712, 538, 3097, 13, 50718, 50718, 400, 550, 321, 362, 2063, 6828, 13, 50822, 50822, 407, 2063, 6828, 366, 1936, 6828, 50966, 50966, 300, 747, 472, 420, 3866, 15743, 293, 5598, 257, 39684, 13, 51194, 51194, 583, 286, 478, 406, 13460, 264, 5598, 13, 51284, 51284, 467, 311, 26947, 13, 51356, 51356, 407, 498, 291, 362, 257, 2182, 3732, 11, 309, 575, 364, 26947, 5598, 13, 51528, 51528, 400, 309, 311, 257, 39684, 13, 51642, 51642, 400, 321, 7302, 309, 382, 257, 2063, 420, 364, 2281, 2445, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.09300901108429212, "compression_ratio": 1.7883817427385893, "no_speech_prob": 8.139124474837445e-06}, {"id": 173, "seek": 47996, "start": 492.0, "end": 496.56, "text": " that take one or multiple inputs and output a scalar.", "tokens": [50364, 400, 1184, 295, 729, 393, 312, 10688, 830, 420, 15664, 685, 420, 2035, 13, 50530, 50530, 400, 436, 362, 26947, 9834, 50598, 50598, 300, 366, 951, 409, 712, 538, 3097, 13, 50718, 50718, 400, 550, 321, 362, 2063, 6828, 13, 50822, 50822, 407, 2063, 6828, 366, 1936, 6828, 50966, 50966, 300, 747, 472, 420, 3866, 15743, 293, 5598, 257, 39684, 13, 51194, 51194, 583, 286, 478, 406, 13460, 264, 5598, 13, 51284, 51284, 467, 311, 26947, 13, 51356, 51356, 407, 498, 291, 362, 257, 2182, 3732, 11, 309, 575, 364, 26947, 5598, 13, 51528, 51528, 400, 309, 311, 257, 39684, 13, 51642, 51642, 400, 321, 7302, 309, 382, 257, 2063, 420, 364, 2281, 2445, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.09300901108429212, "compression_ratio": 1.7883817427385893, "no_speech_prob": 8.139124474837445e-06}, {"id": 174, "seek": 47996, "start": 496.56, "end": 498.35999999999996, "text": " But I'm not representing the output.", "tokens": [50364, 400, 1184, 295, 729, 393, 312, 10688, 830, 420, 15664, 685, 420, 2035, 13, 50530, 50530, 400, 436, 362, 26947, 9834, 50598, 50598, 300, 366, 951, 409, 712, 538, 3097, 13, 50718, 50718, 400, 550, 321, 362, 2063, 6828, 13, 50822, 50822, 407, 2063, 6828, 366, 1936, 6828, 50966, 50966, 300, 747, 472, 420, 3866, 15743, 293, 5598, 257, 39684, 13, 51194, 51194, 583, 286, 478, 406, 13460, 264, 5598, 13, 51284, 51284, 467, 311, 26947, 13, 51356, 51356, 407, 498, 291, 362, 257, 2182, 3732, 11, 309, 575, 364, 26947, 5598, 13, 51528, 51528, 400, 309, 311, 257, 39684, 13, 51642, 51642, 400, 321, 7302, 309, 382, 257, 2063, 420, 364, 2281, 2445, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.09300901108429212, "compression_ratio": 1.7883817427385893, "no_speech_prob": 8.139124474837445e-06}, {"id": 175, "seek": 47996, "start": 498.35999999999996, "end": 499.79999999999995, "text": " It's implicit.", "tokens": [50364, 400, 1184, 295, 729, 393, 312, 10688, 830, 420, 15664, 685, 420, 2035, 13, 50530, 50530, 400, 436, 362, 26947, 9834, 50598, 50598, 300, 366, 951, 409, 712, 538, 3097, 13, 50718, 50718, 400, 550, 321, 362, 2063, 6828, 13, 50822, 50822, 407, 2063, 6828, 366, 1936, 6828, 50966, 50966, 300, 747, 472, 420, 3866, 15743, 293, 5598, 257, 39684, 13, 51194, 51194, 583, 286, 478, 406, 13460, 264, 5598, 13, 51284, 51284, 467, 311, 26947, 13, 51356, 51356, 407, 498, 291, 362, 257, 2182, 3732, 11, 309, 575, 364, 26947, 5598, 13, 51528, 51528, 400, 309, 311, 257, 39684, 13, 51642, 51642, 400, 321, 7302, 309, 382, 257, 2063, 420, 364, 2281, 2445, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.09300901108429212, "compression_ratio": 1.7883817427385893, "no_speech_prob": 8.139124474837445e-06}, {"id": 176, "seek": 47996, "start": 499.79999999999995, "end": 503.24, "text": " So if you have a red square, it has an implicit output.", "tokens": [50364, 400, 1184, 295, 729, 393, 312, 10688, 830, 420, 15664, 685, 420, 2035, 13, 50530, 50530, 400, 436, 362, 26947, 9834, 50598, 50598, 300, 366, 951, 409, 712, 538, 3097, 13, 50718, 50718, 400, 550, 321, 362, 2063, 6828, 13, 50822, 50822, 407, 2063, 6828, 366, 1936, 6828, 50966, 50966, 300, 747, 472, 420, 3866, 15743, 293, 5598, 257, 39684, 13, 51194, 51194, 583, 286, 478, 406, 13460, 264, 5598, 13, 51284, 51284, 467, 311, 26947, 13, 51356, 51356, 407, 498, 291, 362, 257, 2182, 3732, 11, 309, 575, 364, 26947, 5598, 13, 51528, 51528, 400, 309, 311, 257, 39684, 13, 51642, 51642, 400, 321, 7302, 309, 382, 257, 2063, 420, 364, 2281, 2445, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.09300901108429212, "compression_ratio": 1.7883817427385893, "no_speech_prob": 8.139124474837445e-06}, {"id": 177, "seek": 47996, "start": 503.24, "end": 505.52, "text": " And it's a scalar.", "tokens": [50364, 400, 1184, 295, 729, 393, 312, 10688, 830, 420, 15664, 685, 420, 2035, 13, 50530, 50530, 400, 436, 362, 26947, 9834, 50598, 50598, 300, 366, 951, 409, 712, 538, 3097, 13, 50718, 50718, 400, 550, 321, 362, 2063, 6828, 13, 50822, 50822, 407, 2063, 6828, 366, 1936, 6828, 50966, 50966, 300, 747, 472, 420, 3866, 15743, 293, 5598, 257, 39684, 13, 51194, 51194, 583, 286, 478, 406, 13460, 264, 5598, 13, 51284, 51284, 467, 311, 26947, 13, 51356, 51356, 407, 498, 291, 362, 257, 2182, 3732, 11, 309, 575, 364, 26947, 5598, 13, 51528, 51528, 400, 309, 311, 257, 39684, 13, 51642, 51642, 400, 321, 7302, 309, 382, 257, 2063, 420, 364, 2281, 2445, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.09300901108429212, "compression_ratio": 1.7883817427385893, "no_speech_prob": 8.139124474837445e-06}, {"id": 178, "seek": 47996, "start": 505.52, "end": 508.59999999999997, "text": " And we interpret it as a cost or an energy function.", "tokens": [50364, 400, 1184, 295, 729, 393, 312, 10688, 830, 420, 15664, 685, 420, 2035, 13, 50530, 50530, 400, 436, 362, 26947, 9834, 50598, 50598, 300, 366, 951, 409, 712, 538, 3097, 13, 50718, 50718, 400, 550, 321, 362, 2063, 6828, 13, 50822, 50822, 407, 2063, 6828, 366, 1936, 6828, 50966, 50966, 300, 747, 472, 420, 3866, 15743, 293, 5598, 257, 39684, 13, 51194, 51194, 583, 286, 478, 406, 13460, 264, 5598, 13, 51284, 51284, 467, 311, 26947, 13, 51356, 51356, 407, 498, 291, 362, 257, 2182, 3732, 11, 309, 575, 364, 26947, 5598, 13, 51528, 51528, 400, 309, 311, 257, 39684, 13, 51642, 51642, 400, 321, 7302, 309, 382, 257, 2063, 420, 364, 2281, 2445, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.09300901108429212, "compression_ratio": 1.7883817427385893, "no_speech_prob": 8.139124474837445e-06}, {"id": 179, "seek": 50860, "start": 508.6, "end": 512.52, "text": " So this symbolism is kind of similar to what", "tokens": [50364, 407, 341, 47061, 307, 733, 295, 2531, 281, 437, 50560, 50560, 561, 764, 294, 35942, 5245, 11, 498, 291, 600, 50758, 50758, 2198, 437, 257, 35942, 2316, 307, 11, 4098, 50852, 50852, 264, 2010, 295, 35942, 2316, 1219, 257, 5952, 4295, 13, 50958, 50958, 407, 294, 257, 5952, 4295, 11, 291, 362, 729, 7006, 16295, 13, 51112, 51112, 400, 291, 362, 729, 6771, 11, 597, 366, 51198, 51198, 729, 3732, 2063, 6828, 13, 51296, 51296, 509, 500, 380, 362, 341, 1558, 300, 291, 362, 15957, 3142, 6828, 51422, 51422, 294, 309, 11, 570, 35942, 5245, 500, 380, 1127, 466, 264, 1186, 51552, 51552, 300, 291, 362, 6828, 294, 472, 3513, 420, 1071, 13, 51660, 51660, 583, 510, 11, 321, 1127, 466, 309, 13, 51738, 51738, 407, 321, 362, 341, 2857, 5986, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14275615355547736, "compression_ratio": 1.981549815498155, "no_speech_prob": 1.777529359969776e-05}, {"id": 180, "seek": 50860, "start": 512.52, "end": 516.48, "text": " people use in graphical models, if you've", "tokens": [50364, 407, 341, 47061, 307, 733, 295, 2531, 281, 437, 50560, 50560, 561, 764, 294, 35942, 5245, 11, 498, 291, 600, 50758, 50758, 2198, 437, 257, 35942, 2316, 307, 11, 4098, 50852, 50852, 264, 2010, 295, 35942, 2316, 1219, 257, 5952, 4295, 13, 50958, 50958, 407, 294, 257, 5952, 4295, 11, 291, 362, 729, 7006, 16295, 13, 51112, 51112, 400, 291, 362, 729, 6771, 11, 597, 366, 51198, 51198, 729, 3732, 2063, 6828, 13, 51296, 51296, 509, 500, 380, 362, 341, 1558, 300, 291, 362, 15957, 3142, 6828, 51422, 51422, 294, 309, 11, 570, 35942, 5245, 500, 380, 1127, 466, 264, 1186, 51552, 51552, 300, 291, 362, 6828, 294, 472, 3513, 420, 1071, 13, 51660, 51660, 583, 510, 11, 321, 1127, 466, 309, 13, 51738, 51738, 407, 321, 362, 341, 2857, 5986, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14275615355547736, "compression_ratio": 1.981549815498155, "no_speech_prob": 1.777529359969776e-05}, {"id": 181, "seek": 50860, "start": 516.48, "end": 518.36, "text": " heard what a graphical model is, particularly", "tokens": [50364, 407, 341, 47061, 307, 733, 295, 2531, 281, 437, 50560, 50560, 561, 764, 294, 35942, 5245, 11, 498, 291, 600, 50758, 50758, 2198, 437, 257, 35942, 2316, 307, 11, 4098, 50852, 50852, 264, 2010, 295, 35942, 2316, 1219, 257, 5952, 4295, 13, 50958, 50958, 407, 294, 257, 5952, 4295, 11, 291, 362, 729, 7006, 16295, 13, 51112, 51112, 400, 291, 362, 729, 6771, 11, 597, 366, 51198, 51198, 729, 3732, 2063, 6828, 13, 51296, 51296, 509, 500, 380, 362, 341, 1558, 300, 291, 362, 15957, 3142, 6828, 51422, 51422, 294, 309, 11, 570, 35942, 5245, 500, 380, 1127, 466, 264, 1186, 51552, 51552, 300, 291, 362, 6828, 294, 472, 3513, 420, 1071, 13, 51660, 51660, 583, 510, 11, 321, 1127, 466, 309, 13, 51738, 51738, 407, 321, 362, 341, 2857, 5986, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14275615355547736, "compression_ratio": 1.981549815498155, "no_speech_prob": 1.777529359969776e-05}, {"id": 182, "seek": 50860, "start": 518.36, "end": 520.48, "text": " the type of graphical model called a factor graph.", "tokens": [50364, 407, 341, 47061, 307, 733, 295, 2531, 281, 437, 50560, 50560, 561, 764, 294, 35942, 5245, 11, 498, 291, 600, 50758, 50758, 2198, 437, 257, 35942, 2316, 307, 11, 4098, 50852, 50852, 264, 2010, 295, 35942, 2316, 1219, 257, 5952, 4295, 13, 50958, 50958, 407, 294, 257, 5952, 4295, 11, 291, 362, 729, 7006, 16295, 13, 51112, 51112, 400, 291, 362, 729, 6771, 11, 597, 366, 51198, 51198, 729, 3732, 2063, 6828, 13, 51296, 51296, 509, 500, 380, 362, 341, 1558, 300, 291, 362, 15957, 3142, 6828, 51422, 51422, 294, 309, 11, 570, 35942, 5245, 500, 380, 1127, 466, 264, 1186, 51552, 51552, 300, 291, 362, 6828, 294, 472, 3513, 420, 1071, 13, 51660, 51660, 583, 510, 11, 321, 1127, 466, 309, 13, 51738, 51738, 407, 321, 362, 341, 2857, 5986, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14275615355547736, "compression_ratio": 1.981549815498155, "no_speech_prob": 1.777529359969776e-05}, {"id": 183, "seek": 50860, "start": 520.48, "end": 523.5600000000001, "text": " So in a factor graph, you have those variable bubbles.", "tokens": [50364, 407, 341, 47061, 307, 733, 295, 2531, 281, 437, 50560, 50560, 561, 764, 294, 35942, 5245, 11, 498, 291, 600, 50758, 50758, 2198, 437, 257, 35942, 2316, 307, 11, 4098, 50852, 50852, 264, 2010, 295, 35942, 2316, 1219, 257, 5952, 4295, 13, 50958, 50958, 407, 294, 257, 5952, 4295, 11, 291, 362, 729, 7006, 16295, 13, 51112, 51112, 400, 291, 362, 729, 6771, 11, 597, 366, 51198, 51198, 729, 3732, 2063, 6828, 13, 51296, 51296, 509, 500, 380, 362, 341, 1558, 300, 291, 362, 15957, 3142, 6828, 51422, 51422, 294, 309, 11, 570, 35942, 5245, 500, 380, 1127, 466, 264, 1186, 51552, 51552, 300, 291, 362, 6828, 294, 472, 3513, 420, 1071, 13, 51660, 51660, 583, 510, 11, 321, 1127, 466, 309, 13, 51738, 51738, 407, 321, 362, 341, 2857, 5986, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14275615355547736, "compression_ratio": 1.981549815498155, "no_speech_prob": 1.777529359969776e-05}, {"id": 184, "seek": 50860, "start": 523.5600000000001, "end": 525.28, "text": " And you have those factors, which are", "tokens": [50364, 407, 341, 47061, 307, 733, 295, 2531, 281, 437, 50560, 50560, 561, 764, 294, 35942, 5245, 11, 498, 291, 600, 50758, 50758, 2198, 437, 257, 35942, 2316, 307, 11, 4098, 50852, 50852, 264, 2010, 295, 35942, 2316, 1219, 257, 5952, 4295, 13, 50958, 50958, 407, 294, 257, 5952, 4295, 11, 291, 362, 729, 7006, 16295, 13, 51112, 51112, 400, 291, 362, 729, 6771, 11, 597, 366, 51198, 51198, 729, 3732, 2063, 6828, 13, 51296, 51296, 509, 500, 380, 362, 341, 1558, 300, 291, 362, 15957, 3142, 6828, 51422, 51422, 294, 309, 11, 570, 35942, 5245, 500, 380, 1127, 466, 264, 1186, 51552, 51552, 300, 291, 362, 6828, 294, 472, 3513, 420, 1071, 13, 51660, 51660, 583, 510, 11, 321, 1127, 466, 309, 13, 51738, 51738, 407, 321, 362, 341, 2857, 5986, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14275615355547736, "compression_ratio": 1.981549815498155, "no_speech_prob": 1.777529359969776e-05}, {"id": 185, "seek": 50860, "start": 525.28, "end": 527.24, "text": " those square cost functions.", "tokens": [50364, 407, 341, 47061, 307, 733, 295, 2531, 281, 437, 50560, 50560, 561, 764, 294, 35942, 5245, 11, 498, 291, 600, 50758, 50758, 2198, 437, 257, 35942, 2316, 307, 11, 4098, 50852, 50852, 264, 2010, 295, 35942, 2316, 1219, 257, 5952, 4295, 13, 50958, 50958, 407, 294, 257, 5952, 4295, 11, 291, 362, 729, 7006, 16295, 13, 51112, 51112, 400, 291, 362, 729, 6771, 11, 597, 366, 51198, 51198, 729, 3732, 2063, 6828, 13, 51296, 51296, 509, 500, 380, 362, 341, 1558, 300, 291, 362, 15957, 3142, 6828, 51422, 51422, 294, 309, 11, 570, 35942, 5245, 500, 380, 1127, 466, 264, 1186, 51552, 51552, 300, 291, 362, 6828, 294, 472, 3513, 420, 1071, 13, 51660, 51660, 583, 510, 11, 321, 1127, 466, 309, 13, 51738, 51738, 407, 321, 362, 341, 2857, 5986, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14275615355547736, "compression_ratio": 1.981549815498155, "no_speech_prob": 1.777529359969776e-05}, {"id": 186, "seek": 50860, "start": 527.24, "end": 529.76, "text": " You don't have this idea that you have deterministic functions", "tokens": [50364, 407, 341, 47061, 307, 733, 295, 2531, 281, 437, 50560, 50560, 561, 764, 294, 35942, 5245, 11, 498, 291, 600, 50758, 50758, 2198, 437, 257, 35942, 2316, 307, 11, 4098, 50852, 50852, 264, 2010, 295, 35942, 2316, 1219, 257, 5952, 4295, 13, 50958, 50958, 407, 294, 257, 5952, 4295, 11, 291, 362, 729, 7006, 16295, 13, 51112, 51112, 400, 291, 362, 729, 6771, 11, 597, 366, 51198, 51198, 729, 3732, 2063, 6828, 13, 51296, 51296, 509, 500, 380, 362, 341, 1558, 300, 291, 362, 15957, 3142, 6828, 51422, 51422, 294, 309, 11, 570, 35942, 5245, 500, 380, 1127, 466, 264, 1186, 51552, 51552, 300, 291, 362, 6828, 294, 472, 3513, 420, 1071, 13, 51660, 51660, 583, 510, 11, 321, 1127, 466, 309, 13, 51738, 51738, 407, 321, 362, 341, 2857, 5986, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14275615355547736, "compression_ratio": 1.981549815498155, "no_speech_prob": 1.777529359969776e-05}, {"id": 187, "seek": 50860, "start": 529.76, "end": 532.36, "text": " in it, because graphical models don't care about the fact", "tokens": [50364, 407, 341, 47061, 307, 733, 295, 2531, 281, 437, 50560, 50560, 561, 764, 294, 35942, 5245, 11, 498, 291, 600, 50758, 50758, 2198, 437, 257, 35942, 2316, 307, 11, 4098, 50852, 50852, 264, 2010, 295, 35942, 2316, 1219, 257, 5952, 4295, 13, 50958, 50958, 407, 294, 257, 5952, 4295, 11, 291, 362, 729, 7006, 16295, 13, 51112, 51112, 400, 291, 362, 729, 6771, 11, 597, 366, 51198, 51198, 729, 3732, 2063, 6828, 13, 51296, 51296, 509, 500, 380, 362, 341, 1558, 300, 291, 362, 15957, 3142, 6828, 51422, 51422, 294, 309, 11, 570, 35942, 5245, 500, 380, 1127, 466, 264, 1186, 51552, 51552, 300, 291, 362, 6828, 294, 472, 3513, 420, 1071, 13, 51660, 51660, 583, 510, 11, 321, 1127, 466, 309, 13, 51738, 51738, 407, 321, 362, 341, 2857, 5986, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14275615355547736, "compression_ratio": 1.981549815498155, "no_speech_prob": 1.777529359969776e-05}, {"id": 188, "seek": 50860, "start": 532.36, "end": 534.52, "text": " that you have functions in one direction or another.", "tokens": [50364, 407, 341, 47061, 307, 733, 295, 2531, 281, 437, 50560, 50560, 561, 764, 294, 35942, 5245, 11, 498, 291, 600, 50758, 50758, 2198, 437, 257, 35942, 2316, 307, 11, 4098, 50852, 50852, 264, 2010, 295, 35942, 2316, 1219, 257, 5952, 4295, 13, 50958, 50958, 407, 294, 257, 5952, 4295, 11, 291, 362, 729, 7006, 16295, 13, 51112, 51112, 400, 291, 362, 729, 6771, 11, 597, 366, 51198, 51198, 729, 3732, 2063, 6828, 13, 51296, 51296, 509, 500, 380, 362, 341, 1558, 300, 291, 362, 15957, 3142, 6828, 51422, 51422, 294, 309, 11, 570, 35942, 5245, 500, 380, 1127, 466, 264, 1186, 51552, 51552, 300, 291, 362, 6828, 294, 472, 3513, 420, 1071, 13, 51660, 51660, 583, 510, 11, 321, 1127, 466, 309, 13, 51738, 51738, 407, 321, 362, 341, 2857, 5986, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14275615355547736, "compression_ratio": 1.981549815498155, "no_speech_prob": 1.777529359969776e-05}, {"id": 189, "seek": 50860, "start": 534.52, "end": 536.08, "text": " But here, we care about it.", "tokens": [50364, 407, 341, 47061, 307, 733, 295, 2531, 281, 437, 50560, 50560, 561, 764, 294, 35942, 5245, 11, 498, 291, 600, 50758, 50758, 2198, 437, 257, 35942, 2316, 307, 11, 4098, 50852, 50852, 264, 2010, 295, 35942, 2316, 1219, 257, 5952, 4295, 13, 50958, 50958, 407, 294, 257, 5952, 4295, 11, 291, 362, 729, 7006, 16295, 13, 51112, 51112, 400, 291, 362, 729, 6771, 11, 597, 366, 51198, 51198, 729, 3732, 2063, 6828, 13, 51296, 51296, 509, 500, 380, 362, 341, 1558, 300, 291, 362, 15957, 3142, 6828, 51422, 51422, 294, 309, 11, 570, 35942, 5245, 500, 380, 1127, 466, 264, 1186, 51552, 51552, 300, 291, 362, 6828, 294, 472, 3513, 420, 1071, 13, 51660, 51660, 583, 510, 11, 321, 1127, 466, 309, 13, 51738, 51738, 407, 321, 362, 341, 2857, 5986, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14275615355547736, "compression_ratio": 1.981549815498155, "no_speech_prob": 1.777529359969776e-05}, {"id": 190, "seek": 50860, "start": 536.08, "end": 538.48, "text": " So we have this extra symbol.", "tokens": [50364, 407, 341, 47061, 307, 733, 295, 2531, 281, 437, 50560, 50560, 561, 764, 294, 35942, 5245, 11, 498, 291, 600, 50758, 50758, 2198, 437, 257, 35942, 2316, 307, 11, 4098, 50852, 50852, 264, 2010, 295, 35942, 2316, 1219, 257, 5952, 4295, 13, 50958, 50958, 407, 294, 257, 5952, 4295, 11, 291, 362, 729, 7006, 16295, 13, 51112, 51112, 400, 291, 362, 729, 6771, 11, 597, 366, 51198, 51198, 729, 3732, 2063, 6828, 13, 51296, 51296, 509, 500, 380, 362, 341, 1558, 300, 291, 362, 15957, 3142, 6828, 51422, 51422, 294, 309, 11, 570, 35942, 5245, 500, 380, 1127, 466, 264, 1186, 51552, 51552, 300, 291, 362, 6828, 294, 472, 3513, 420, 1071, 13, 51660, 51660, 583, 510, 11, 321, 1127, 466, 309, 13, 51738, 51738, 407, 321, 362, 341, 2857, 5986, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.14275615355547736, "compression_ratio": 1.981549815498155, "no_speech_prob": 1.777529359969776e-05}, {"id": 191, "seek": 53848, "start": 538.48, "end": 542.5600000000001, "text": " OK, so machine learning consists in basically", "tokens": [50364, 2264, 11, 370, 3479, 2539, 14689, 294, 1936, 50568, 50568, 5006, 264, 992, 295, 9834, 11, 261, 11, 50662, 50662, 300, 17522, 264, 2063, 2445, 18247, 2980, 670, 257, 3097, 992, 13, 50884, 50884, 407, 257, 3097, 992, 307, 257, 992, 295, 15494, 11, 2031, 11, 288, 11, 51134, 51134, 8186, 292, 538, 364, 8186, 280, 13, 51264, 51264, 407, 321, 362, 280, 3097, 10938, 13, 51382, 51382, 400, 707, 280, 307, 264, 8186, 295, 264, 3097, 6889, 13, 51540, 51540, 400, 527, 4787, 4470, 2445, 300, 321, 434, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.1629810333251953, "compression_ratio": 1.6785714285714286, "no_speech_prob": 4.637557140085846e-06}, {"id": 192, "seek": 53848, "start": 542.5600000000001, "end": 544.44, "text": " finding the set of parameters, w,", "tokens": [50364, 2264, 11, 370, 3479, 2539, 14689, 294, 1936, 50568, 50568, 5006, 264, 992, 295, 9834, 11, 261, 11, 50662, 50662, 300, 17522, 264, 2063, 2445, 18247, 2980, 670, 257, 3097, 992, 13, 50884, 50884, 407, 257, 3097, 992, 307, 257, 992, 295, 15494, 11, 2031, 11, 288, 11, 51134, 51134, 8186, 292, 538, 364, 8186, 280, 13, 51264, 51264, 407, 321, 362, 280, 3097, 10938, 13, 51382, 51382, 400, 707, 280, 307, 264, 8186, 295, 264, 3097, 6889, 13, 51540, 51540, 400, 527, 4787, 4470, 2445, 300, 321, 434, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.1629810333251953, "compression_ratio": 1.6785714285714286, "no_speech_prob": 4.637557140085846e-06}, {"id": 193, "seek": 53848, "start": 544.44, "end": 548.88, "text": " that minimize the cost function averaged over a training set.", "tokens": [50364, 2264, 11, 370, 3479, 2539, 14689, 294, 1936, 50568, 50568, 5006, 264, 992, 295, 9834, 11, 261, 11, 50662, 50662, 300, 17522, 264, 2063, 2445, 18247, 2980, 670, 257, 3097, 992, 13, 50884, 50884, 407, 257, 3097, 992, 307, 257, 992, 295, 15494, 11, 2031, 11, 288, 11, 51134, 51134, 8186, 292, 538, 364, 8186, 280, 13, 51264, 51264, 407, 321, 362, 280, 3097, 10938, 13, 51382, 51382, 400, 707, 280, 307, 264, 8186, 295, 264, 3097, 6889, 13, 51540, 51540, 400, 527, 4787, 4470, 2445, 300, 321, 434, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.1629810333251953, "compression_ratio": 1.6785714285714286, "no_speech_prob": 4.637557140085846e-06}, {"id": 194, "seek": 53848, "start": 548.88, "end": 553.88, "text": " So a training set is a set of pairs, x, y,", "tokens": [50364, 2264, 11, 370, 3479, 2539, 14689, 294, 1936, 50568, 50568, 5006, 264, 992, 295, 9834, 11, 261, 11, 50662, 50662, 300, 17522, 264, 2063, 2445, 18247, 2980, 670, 257, 3097, 992, 13, 50884, 50884, 407, 257, 3097, 992, 307, 257, 992, 295, 15494, 11, 2031, 11, 288, 11, 51134, 51134, 8186, 292, 538, 364, 8186, 280, 13, 51264, 51264, 407, 321, 362, 280, 3097, 10938, 13, 51382, 51382, 400, 707, 280, 307, 264, 8186, 295, 264, 3097, 6889, 13, 51540, 51540, 400, 527, 4787, 4470, 2445, 300, 321, 434, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.1629810333251953, "compression_ratio": 1.6785714285714286, "no_speech_prob": 4.637557140085846e-06}, {"id": 195, "seek": 53848, "start": 553.88, "end": 556.48, "text": " indexed by an index p.", "tokens": [50364, 2264, 11, 370, 3479, 2539, 14689, 294, 1936, 50568, 50568, 5006, 264, 992, 295, 9834, 11, 261, 11, 50662, 50662, 300, 17522, 264, 2063, 2445, 18247, 2980, 670, 257, 3097, 992, 13, 50884, 50884, 407, 257, 3097, 992, 307, 257, 992, 295, 15494, 11, 2031, 11, 288, 11, 51134, 51134, 8186, 292, 538, 364, 8186, 280, 13, 51264, 51264, 407, 321, 362, 280, 3097, 10938, 13, 51382, 51382, 400, 707, 280, 307, 264, 8186, 295, 264, 3097, 6889, 13, 51540, 51540, 400, 527, 4787, 4470, 2445, 300, 321, 434, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.1629810333251953, "compression_ratio": 1.6785714285714286, "no_speech_prob": 4.637557140085846e-06}, {"id": 196, "seek": 53848, "start": 556.48, "end": 558.84, "text": " So we have p training samples.", "tokens": [50364, 2264, 11, 370, 3479, 2539, 14689, 294, 1936, 50568, 50568, 5006, 264, 992, 295, 9834, 11, 261, 11, 50662, 50662, 300, 17522, 264, 2063, 2445, 18247, 2980, 670, 257, 3097, 992, 13, 50884, 50884, 407, 257, 3097, 992, 307, 257, 992, 295, 15494, 11, 2031, 11, 288, 11, 51134, 51134, 8186, 292, 538, 364, 8186, 280, 13, 51264, 51264, 407, 321, 362, 280, 3097, 10938, 13, 51382, 51382, 400, 707, 280, 307, 264, 8186, 295, 264, 3097, 6889, 13, 51540, 51540, 400, 527, 4787, 4470, 2445, 300, 321, 434, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.1629810333251953, "compression_ratio": 1.6785714285714286, "no_speech_prob": 4.637557140085846e-06}, {"id": 197, "seek": 53848, "start": 558.84, "end": 562.0, "text": " And little p is the index of the training sample.", "tokens": [50364, 2264, 11, 370, 3479, 2539, 14689, 294, 1936, 50568, 50568, 5006, 264, 992, 295, 9834, 11, 261, 11, 50662, 50662, 300, 17522, 264, 2063, 2445, 18247, 2980, 670, 257, 3097, 992, 13, 50884, 50884, 407, 257, 3097, 992, 307, 257, 992, 295, 15494, 11, 2031, 11, 288, 11, 51134, 51134, 8186, 292, 538, 364, 8186, 280, 13, 51264, 51264, 407, 321, 362, 280, 3097, 10938, 13, 51382, 51382, 400, 707, 280, 307, 264, 8186, 295, 264, 3097, 6889, 13, 51540, 51540, 400, 527, 4787, 4470, 2445, 300, 321, 434, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.1629810333251953, "compression_ratio": 1.6785714285714286, "no_speech_prob": 4.637557140085846e-06}, {"id": 198, "seek": 53848, "start": 562.0, "end": 565.04, "text": " And our overall loss function that we're", "tokens": [50364, 2264, 11, 370, 3479, 2539, 14689, 294, 1936, 50568, 50568, 5006, 264, 992, 295, 9834, 11, 261, 11, 50662, 50662, 300, 17522, 264, 2063, 2445, 18247, 2980, 670, 257, 3097, 992, 13, 50884, 50884, 407, 257, 3097, 992, 307, 257, 992, 295, 15494, 11, 2031, 11, 288, 11, 51134, 51134, 8186, 292, 538, 364, 8186, 280, 13, 51264, 51264, 407, 321, 362, 280, 3097, 10938, 13, 51382, 51382, 400, 707, 280, 307, 264, 8186, 295, 264, 3097, 6889, 13, 51540, 51540, 400, 527, 4787, 4470, 2445, 300, 321, 434, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.1629810333251953, "compression_ratio": 1.6785714285714286, "no_speech_prob": 4.637557140085846e-06}, {"id": 199, "seek": 56504, "start": 565.04, "end": 570.92, "text": " going to have to minimize is equal to the cost", "tokens": [50364, 516, 281, 362, 281, 17522, 307, 2681, 281, 264, 2063, 50658, 50658, 295, 264, 2983, 265, 6040, 1344, 1296, 288, 293, 264, 5598, 295, 527, 2316, 11, 50864, 50864, 288, 2159, 11, 290, 295, 2031, 11, 261, 11, 382, 286, 848, 3071, 13, 51020, 51020, 407, 287, 307, 257, 2158, 13, 51094, 51094, 269, 307, 257, 10088, 13, 51240, 51240, 400, 287, 307, 257, 636, 295, 3579, 269, 295, 288, 11, 290, 295, 2031, 11, 261, 11, 51494, 51494, 689, 300, 5946, 20803, 322, 2031, 11, 288, 11, 293, 261, 13, 51668, 51668, 583, 309, 311, 264, 912, 551, 11, 534, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1222913939997835, "compression_ratio": 1.523076923076923, "no_speech_prob": 2.0778925318154506e-05}, {"id": 200, "seek": 56504, "start": 570.92, "end": 575.04, "text": " of the discrepancy between y and the output of our model,", "tokens": [50364, 516, 281, 362, 281, 17522, 307, 2681, 281, 264, 2063, 50658, 50658, 295, 264, 2983, 265, 6040, 1344, 1296, 288, 293, 264, 5598, 295, 527, 2316, 11, 50864, 50864, 288, 2159, 11, 290, 295, 2031, 11, 261, 11, 382, 286, 848, 3071, 13, 51020, 51020, 407, 287, 307, 257, 2158, 13, 51094, 51094, 269, 307, 257, 10088, 13, 51240, 51240, 400, 287, 307, 257, 636, 295, 3579, 269, 295, 288, 11, 290, 295, 2031, 11, 261, 11, 51494, 51494, 689, 300, 5946, 20803, 322, 2031, 11, 288, 11, 293, 261, 13, 51668, 51668, 583, 309, 311, 264, 912, 551, 11, 534, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1222913939997835, "compression_ratio": 1.523076923076923, "no_speech_prob": 2.0778925318154506e-05}, {"id": 201, "seek": 56504, "start": 575.04, "end": 578.16, "text": " y bar, g of x, w, as I said earlier.", "tokens": [50364, 516, 281, 362, 281, 17522, 307, 2681, 281, 264, 2063, 50658, 50658, 295, 264, 2983, 265, 6040, 1344, 1296, 288, 293, 264, 5598, 295, 527, 2316, 11, 50864, 50864, 288, 2159, 11, 290, 295, 2031, 11, 261, 11, 382, 286, 848, 3071, 13, 51020, 51020, 407, 287, 307, 257, 2158, 13, 51094, 51094, 269, 307, 257, 10088, 13, 51240, 51240, 400, 287, 307, 257, 636, 295, 3579, 269, 295, 288, 11, 290, 295, 2031, 11, 261, 11, 51494, 51494, 689, 300, 5946, 20803, 322, 2031, 11, 288, 11, 293, 261, 13, 51668, 51668, 583, 309, 311, 264, 912, 551, 11, 534, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1222913939997835, "compression_ratio": 1.523076923076923, "no_speech_prob": 2.0778925318154506e-05}, {"id": 202, "seek": 56504, "start": 578.16, "end": 579.64, "text": " So l is a value.", "tokens": [50364, 516, 281, 362, 281, 17522, 307, 2681, 281, 264, 2063, 50658, 50658, 295, 264, 2983, 265, 6040, 1344, 1296, 288, 293, 264, 5598, 295, 527, 2316, 11, 50864, 50864, 288, 2159, 11, 290, 295, 2031, 11, 261, 11, 382, 286, 848, 3071, 13, 51020, 51020, 407, 287, 307, 257, 2158, 13, 51094, 51094, 269, 307, 257, 10088, 13, 51240, 51240, 400, 287, 307, 257, 636, 295, 3579, 269, 295, 288, 11, 290, 295, 2031, 11, 261, 11, 51494, 51494, 689, 300, 5946, 20803, 322, 2031, 11, 288, 11, 293, 261, 13, 51668, 51668, 583, 309, 311, 264, 912, 551, 11, 534, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1222913939997835, "compression_ratio": 1.523076923076923, "no_speech_prob": 2.0778925318154506e-05}, {"id": 203, "seek": 56504, "start": 579.64, "end": 582.56, "text": " c is a module.", "tokens": [50364, 516, 281, 362, 281, 17522, 307, 2681, 281, 264, 2063, 50658, 50658, 295, 264, 2983, 265, 6040, 1344, 1296, 288, 293, 264, 5598, 295, 527, 2316, 11, 50864, 50864, 288, 2159, 11, 290, 295, 2031, 11, 261, 11, 382, 286, 848, 3071, 13, 51020, 51020, 407, 287, 307, 257, 2158, 13, 51094, 51094, 269, 307, 257, 10088, 13, 51240, 51240, 400, 287, 307, 257, 636, 295, 3579, 269, 295, 288, 11, 290, 295, 2031, 11, 261, 11, 51494, 51494, 689, 300, 5946, 20803, 322, 2031, 11, 288, 11, 293, 261, 13, 51668, 51668, 583, 309, 311, 264, 912, 551, 11, 534, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1222913939997835, "compression_ratio": 1.523076923076923, "no_speech_prob": 2.0778925318154506e-05}, {"id": 204, "seek": 56504, "start": 582.56, "end": 587.64, "text": " And l is a way of writing c of y, g of x, w,", "tokens": [50364, 516, 281, 362, 281, 17522, 307, 2681, 281, 264, 2063, 50658, 50658, 295, 264, 2983, 265, 6040, 1344, 1296, 288, 293, 264, 5598, 295, 527, 2316, 11, 50864, 50864, 288, 2159, 11, 290, 295, 2031, 11, 261, 11, 382, 286, 848, 3071, 13, 51020, 51020, 407, 287, 307, 257, 2158, 13, 51094, 51094, 269, 307, 257, 10088, 13, 51240, 51240, 400, 287, 307, 257, 636, 295, 3579, 269, 295, 288, 11, 290, 295, 2031, 11, 261, 11, 51494, 51494, 689, 300, 5946, 20803, 322, 2031, 11, 288, 11, 293, 261, 13, 51668, 51668, 583, 309, 311, 264, 912, 551, 11, 534, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1222913939997835, "compression_ratio": 1.523076923076923, "no_speech_prob": 2.0778925318154506e-05}, {"id": 205, "seek": 56504, "start": 587.64, "end": 591.12, "text": " where that depends explicitly on x, y, and w.", "tokens": [50364, 516, 281, 362, 281, 17522, 307, 2681, 281, 264, 2063, 50658, 50658, 295, 264, 2983, 265, 6040, 1344, 1296, 288, 293, 264, 5598, 295, 527, 2316, 11, 50864, 50864, 288, 2159, 11, 290, 295, 2031, 11, 261, 11, 382, 286, 848, 3071, 13, 51020, 51020, 407, 287, 307, 257, 2158, 13, 51094, 51094, 269, 307, 257, 10088, 13, 51240, 51240, 400, 287, 307, 257, 636, 295, 3579, 269, 295, 288, 11, 290, 295, 2031, 11, 261, 11, 51494, 51494, 689, 300, 5946, 20803, 322, 2031, 11, 288, 11, 293, 261, 13, 51668, 51668, 583, 309, 311, 264, 912, 551, 11, 534, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1222913939997835, "compression_ratio": 1.523076923076923, "no_speech_prob": 2.0778925318154506e-05}, {"id": 206, "seek": 56504, "start": 591.12, "end": 593.8, "text": " But it's the same thing, really.", "tokens": [50364, 516, 281, 362, 281, 17522, 307, 2681, 281, 264, 2063, 50658, 50658, 295, 264, 2983, 265, 6040, 1344, 1296, 288, 293, 264, 5598, 295, 527, 2316, 11, 50864, 50864, 288, 2159, 11, 290, 295, 2031, 11, 261, 11, 382, 286, 848, 3071, 13, 51020, 51020, 407, 287, 307, 257, 2158, 13, 51094, 51094, 269, 307, 257, 10088, 13, 51240, 51240, 400, 287, 307, 257, 636, 295, 3579, 269, 295, 288, 11, 290, 295, 2031, 11, 261, 11, 51494, 51494, 689, 300, 5946, 20803, 322, 2031, 11, 288, 11, 293, 261, 13, 51668, 51668, 583, 309, 311, 264, 912, 551, 11, 534, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1222913939997835, "compression_ratio": 1.523076923076923, "no_speech_prob": 2.0778925318154506e-05}, {"id": 207, "seek": 59380, "start": 593.8, "end": 598.7199999999999, "text": " The overall loss function, which is this curly l,", "tokens": [50364, 440, 4787, 4470, 2445, 11, 597, 307, 341, 32066, 287, 11, 50610, 50610, 307, 264, 4274, 295, 264, 680, 6889, 4470, 2445, 50762, 50762, 670, 264, 2302, 3097, 992, 13, 50874, 50874, 407, 14722, 287, 337, 264, 2302, 3097, 992, 11, 51012, 51012, 9845, 538, 439, 264, 2115, 11, 9845, 538, 280, 13, 51166, 51166, 400, 300, 311, 264, 4274, 13, 51304, 51304, 663, 311, 264, 4470, 13, 51386, 51386, 407, 586, 264, 1315, 295, 264, 1216, 307, 1382, 51464, 51464, 281, 915, 264, 7285, 295, 300, 4470, 365, 3104, 281, 264, 9834, 13, 51650, 51650, 639, 307, 364, 19618, 1154, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16641589830506523, "compression_ratio": 1.8066037735849056, "no_speech_prob": 1.2411100215103943e-05}, {"id": 208, "seek": 59380, "start": 598.7199999999999, "end": 601.76, "text": " is the average of the per sample loss function", "tokens": [50364, 440, 4787, 4470, 2445, 11, 597, 307, 341, 32066, 287, 11, 50610, 50610, 307, 264, 4274, 295, 264, 680, 6889, 4470, 2445, 50762, 50762, 670, 264, 2302, 3097, 992, 13, 50874, 50874, 407, 14722, 287, 337, 264, 2302, 3097, 992, 11, 51012, 51012, 9845, 538, 439, 264, 2115, 11, 9845, 538, 280, 13, 51166, 51166, 400, 300, 311, 264, 4274, 13, 51304, 51304, 663, 311, 264, 4470, 13, 51386, 51386, 407, 586, 264, 1315, 295, 264, 1216, 307, 1382, 51464, 51464, 281, 915, 264, 7285, 295, 300, 4470, 365, 3104, 281, 264, 9834, 13, 51650, 51650, 639, 307, 364, 19618, 1154, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16641589830506523, "compression_ratio": 1.8066037735849056, "no_speech_prob": 1.2411100215103943e-05}, {"id": 209, "seek": 59380, "start": 601.76, "end": 604.0, "text": " over the entire training set.", "tokens": [50364, 440, 4787, 4470, 2445, 11, 597, 307, 341, 32066, 287, 11, 50610, 50610, 307, 264, 4274, 295, 264, 680, 6889, 4470, 2445, 50762, 50762, 670, 264, 2302, 3097, 992, 13, 50874, 50874, 407, 14722, 287, 337, 264, 2302, 3097, 992, 11, 51012, 51012, 9845, 538, 439, 264, 2115, 11, 9845, 538, 280, 13, 51166, 51166, 400, 300, 311, 264, 4274, 13, 51304, 51304, 663, 311, 264, 4470, 13, 51386, 51386, 407, 586, 264, 1315, 295, 264, 1216, 307, 1382, 51464, 51464, 281, 915, 264, 7285, 295, 300, 4470, 365, 3104, 281, 264, 9834, 13, 51650, 51650, 639, 307, 364, 19618, 1154, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16641589830506523, "compression_ratio": 1.8066037735849056, "no_speech_prob": 1.2411100215103943e-05}, {"id": 210, "seek": 59380, "start": 604.0, "end": 606.76, "text": " So compute l for the entire training set,", "tokens": [50364, 440, 4787, 4470, 2445, 11, 597, 307, 341, 32066, 287, 11, 50610, 50610, 307, 264, 4274, 295, 264, 680, 6889, 4470, 2445, 50762, 50762, 670, 264, 2302, 3097, 992, 13, 50874, 50874, 407, 14722, 287, 337, 264, 2302, 3097, 992, 11, 51012, 51012, 9845, 538, 439, 264, 2115, 11, 9845, 538, 280, 13, 51166, 51166, 400, 300, 311, 264, 4274, 13, 51304, 51304, 663, 311, 264, 4470, 13, 51386, 51386, 407, 586, 264, 1315, 295, 264, 1216, 307, 1382, 51464, 51464, 281, 915, 264, 7285, 295, 300, 4470, 365, 3104, 281, 264, 9834, 13, 51650, 51650, 639, 307, 364, 19618, 1154, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16641589830506523, "compression_ratio": 1.8066037735849056, "no_speech_prob": 1.2411100215103943e-05}, {"id": 211, "seek": 59380, "start": 606.76, "end": 609.8399999999999, "text": " divide by all the terms, divide by p.", "tokens": [50364, 440, 4787, 4470, 2445, 11, 597, 307, 341, 32066, 287, 11, 50610, 50610, 307, 264, 4274, 295, 264, 680, 6889, 4470, 2445, 50762, 50762, 670, 264, 2302, 3097, 992, 13, 50874, 50874, 407, 14722, 287, 337, 264, 2302, 3097, 992, 11, 51012, 51012, 9845, 538, 439, 264, 2115, 11, 9845, 538, 280, 13, 51166, 51166, 400, 300, 311, 264, 4274, 13, 51304, 51304, 663, 311, 264, 4470, 13, 51386, 51386, 407, 586, 264, 1315, 295, 264, 1216, 307, 1382, 51464, 51464, 281, 915, 264, 7285, 295, 300, 4470, 365, 3104, 281, 264, 9834, 13, 51650, 51650, 639, 307, 364, 19618, 1154, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16641589830506523, "compression_ratio": 1.8066037735849056, "no_speech_prob": 1.2411100215103943e-05}, {"id": 212, "seek": 59380, "start": 609.8399999999999, "end": 612.5999999999999, "text": " And that's the average.", "tokens": [50364, 440, 4787, 4470, 2445, 11, 597, 307, 341, 32066, 287, 11, 50610, 50610, 307, 264, 4274, 295, 264, 680, 6889, 4470, 2445, 50762, 50762, 670, 264, 2302, 3097, 992, 13, 50874, 50874, 407, 14722, 287, 337, 264, 2302, 3097, 992, 11, 51012, 51012, 9845, 538, 439, 264, 2115, 11, 9845, 538, 280, 13, 51166, 51166, 400, 300, 311, 264, 4274, 13, 51304, 51304, 663, 311, 264, 4470, 13, 51386, 51386, 407, 586, 264, 1315, 295, 264, 1216, 307, 1382, 51464, 51464, 281, 915, 264, 7285, 295, 300, 4470, 365, 3104, 281, 264, 9834, 13, 51650, 51650, 639, 307, 364, 19618, 1154, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16641589830506523, "compression_ratio": 1.8066037735849056, "no_speech_prob": 1.2411100215103943e-05}, {"id": 213, "seek": 59380, "start": 612.5999999999999, "end": 614.24, "text": " That's the loss.", "tokens": [50364, 440, 4787, 4470, 2445, 11, 597, 307, 341, 32066, 287, 11, 50610, 50610, 307, 264, 4274, 295, 264, 680, 6889, 4470, 2445, 50762, 50762, 670, 264, 2302, 3097, 992, 13, 50874, 50874, 407, 14722, 287, 337, 264, 2302, 3097, 992, 11, 51012, 51012, 9845, 538, 439, 264, 2115, 11, 9845, 538, 280, 13, 51166, 51166, 400, 300, 311, 264, 4274, 13, 51304, 51304, 663, 311, 264, 4470, 13, 51386, 51386, 407, 586, 264, 1315, 295, 264, 1216, 307, 1382, 51464, 51464, 281, 915, 264, 7285, 295, 300, 4470, 365, 3104, 281, 264, 9834, 13, 51650, 51650, 639, 307, 364, 19618, 1154, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16641589830506523, "compression_ratio": 1.8066037735849056, "no_speech_prob": 1.2411100215103943e-05}, {"id": 214, "seek": 59380, "start": 614.24, "end": 615.8, "text": " So now the name of the game is trying", "tokens": [50364, 440, 4787, 4470, 2445, 11, 597, 307, 341, 32066, 287, 11, 50610, 50610, 307, 264, 4274, 295, 264, 680, 6889, 4470, 2445, 50762, 50762, 670, 264, 2302, 3097, 992, 13, 50874, 50874, 407, 14722, 287, 337, 264, 2302, 3097, 992, 11, 51012, 51012, 9845, 538, 439, 264, 2115, 11, 9845, 538, 280, 13, 51166, 51166, 400, 300, 311, 264, 4274, 13, 51304, 51304, 663, 311, 264, 4470, 13, 51386, 51386, 407, 586, 264, 1315, 295, 264, 1216, 307, 1382, 51464, 51464, 281, 915, 264, 7285, 295, 300, 4470, 365, 3104, 281, 264, 9834, 13, 51650, 51650, 639, 307, 364, 19618, 1154, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16641589830506523, "compression_ratio": 1.8066037735849056, "no_speech_prob": 1.2411100215103943e-05}, {"id": 215, "seek": 59380, "start": 615.8, "end": 619.52, "text": " to find the minimum of that loss with respect to the parameters.", "tokens": [50364, 440, 4787, 4470, 2445, 11, 597, 307, 341, 32066, 287, 11, 50610, 50610, 307, 264, 4274, 295, 264, 680, 6889, 4470, 2445, 50762, 50762, 670, 264, 2302, 3097, 992, 13, 50874, 50874, 407, 14722, 287, 337, 264, 2302, 3097, 992, 11, 51012, 51012, 9845, 538, 439, 264, 2115, 11, 9845, 538, 280, 13, 51166, 51166, 400, 300, 311, 264, 4274, 13, 51304, 51304, 663, 311, 264, 4470, 13, 51386, 51386, 407, 586, 264, 1315, 295, 264, 1216, 307, 1382, 51464, 51464, 281, 915, 264, 7285, 295, 300, 4470, 365, 3104, 281, 264, 9834, 13, 51650, 51650, 639, 307, 364, 19618, 1154, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16641589830506523, "compression_ratio": 1.8066037735849056, "no_speech_prob": 1.2411100215103943e-05}, {"id": 216, "seek": 59380, "start": 619.52, "end": 622.88, "text": " This is an optimization problem.", "tokens": [50364, 440, 4787, 4470, 2445, 11, 597, 307, 341, 32066, 287, 11, 50610, 50610, 307, 264, 4274, 295, 264, 680, 6889, 4470, 2445, 50762, 50762, 670, 264, 2302, 3097, 992, 13, 50874, 50874, 407, 14722, 287, 337, 264, 2302, 3097, 992, 11, 51012, 51012, 9845, 538, 439, 264, 2115, 11, 9845, 538, 280, 13, 51166, 51166, 400, 300, 311, 264, 4274, 13, 51304, 51304, 663, 311, 264, 4470, 13, 51386, 51386, 407, 586, 264, 1315, 295, 264, 1216, 307, 1382, 51464, 51464, 281, 915, 264, 7285, 295, 300, 4470, 365, 3104, 281, 264, 9834, 13, 51650, 51650, 639, 307, 364, 19618, 1154, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16641589830506523, "compression_ratio": 1.8066037735849056, "no_speech_prob": 1.2411100215103943e-05}, {"id": 217, "seek": 62288, "start": 622.88, "end": 625.68, "text": " So symbolically, I can represent this entire graph", "tokens": [50364, 407, 5986, 984, 11, 286, 393, 2906, 341, 2302, 4295, 50504, 50504, 382, 264, 551, 322, 264, 558, 13, 50596, 50596, 639, 307, 13752, 1143, 294, 3124, 11, 457, 341, 307, 50700, 50700, 257, 636, 281, 23273, 341, 13, 50768, 50768, 407, 519, 466, 1184, 3097, 6889, 50870, 50870, 382, 257, 14800, 5055, 295, 264, 35456, 11, 51184, 51184, 498, 291, 528, 11, 295, 264, 2316, 293, 264, 2063, 2445, 51318, 51318, 6456, 281, 257, 819, 3097, 6889, 13, 51406, 51406, 400, 550, 456, 307, 364, 4274, 6916, 51482, 51482, 300, 715, 1819, 264, 4470, 13, 51532, 51532, 407, 1203, 291, 393, 2464, 382, 257, 8513, 11, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13440521343334302, "compression_ratio": 1.6747967479674797, "no_speech_prob": 4.936523964715889e-06}, {"id": 218, "seek": 62288, "start": 625.68, "end": 627.52, "text": " as the thing on the right.", "tokens": [50364, 407, 5986, 984, 11, 286, 393, 2906, 341, 2302, 4295, 50504, 50504, 382, 264, 551, 322, 264, 558, 13, 50596, 50596, 639, 307, 13752, 1143, 294, 3124, 11, 457, 341, 307, 50700, 50700, 257, 636, 281, 23273, 341, 13, 50768, 50768, 407, 519, 466, 1184, 3097, 6889, 50870, 50870, 382, 257, 14800, 5055, 295, 264, 35456, 11, 51184, 51184, 498, 291, 528, 11, 295, 264, 2316, 293, 264, 2063, 2445, 51318, 51318, 6456, 281, 257, 819, 3097, 6889, 13, 51406, 51406, 400, 550, 456, 307, 364, 4274, 6916, 51482, 51482, 300, 715, 1819, 264, 4470, 13, 51532, 51532, 407, 1203, 291, 393, 2464, 382, 257, 8513, 11, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13440521343334302, "compression_ratio": 1.6747967479674797, "no_speech_prob": 4.936523964715889e-06}, {"id": 219, "seek": 62288, "start": 627.52, "end": 629.6, "text": " This is rarely used in practice, but this is", "tokens": [50364, 407, 5986, 984, 11, 286, 393, 2906, 341, 2302, 4295, 50504, 50504, 382, 264, 551, 322, 264, 558, 13, 50596, 50596, 639, 307, 13752, 1143, 294, 3124, 11, 457, 341, 307, 50700, 50700, 257, 636, 281, 23273, 341, 13, 50768, 50768, 407, 519, 466, 1184, 3097, 6889, 50870, 50870, 382, 257, 14800, 5055, 295, 264, 35456, 11, 51184, 51184, 498, 291, 528, 11, 295, 264, 2316, 293, 264, 2063, 2445, 51318, 51318, 6456, 281, 257, 819, 3097, 6889, 13, 51406, 51406, 400, 550, 456, 307, 364, 4274, 6916, 51482, 51482, 300, 715, 1819, 264, 4470, 13, 51532, 51532, 407, 1203, 291, 393, 2464, 382, 257, 8513, 11, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13440521343334302, "compression_ratio": 1.6747967479674797, "no_speech_prob": 4.936523964715889e-06}, {"id": 220, "seek": 62288, "start": 629.6, "end": 630.96, "text": " a way to visualize this.", "tokens": [50364, 407, 5986, 984, 11, 286, 393, 2906, 341, 2302, 4295, 50504, 50504, 382, 264, 551, 322, 264, 558, 13, 50596, 50596, 639, 307, 13752, 1143, 294, 3124, 11, 457, 341, 307, 50700, 50700, 257, 636, 281, 23273, 341, 13, 50768, 50768, 407, 519, 466, 1184, 3097, 6889, 50870, 50870, 382, 257, 14800, 5055, 295, 264, 35456, 11, 51184, 51184, 498, 291, 528, 11, 295, 264, 2316, 293, 264, 2063, 2445, 51318, 51318, 6456, 281, 257, 819, 3097, 6889, 13, 51406, 51406, 400, 550, 456, 307, 364, 4274, 6916, 51482, 51482, 300, 715, 1819, 264, 4470, 13, 51532, 51532, 407, 1203, 291, 393, 2464, 382, 257, 8513, 11, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13440521343334302, "compression_ratio": 1.6747967479674797, "no_speech_prob": 4.936523964715889e-06}, {"id": 221, "seek": 62288, "start": 630.96, "end": 633.0, "text": " So think about each training sample", "tokens": [50364, 407, 5986, 984, 11, 286, 393, 2906, 341, 2302, 4295, 50504, 50504, 382, 264, 551, 322, 264, 558, 13, 50596, 50596, 639, 307, 13752, 1143, 294, 3124, 11, 457, 341, 307, 50700, 50700, 257, 636, 281, 23273, 341, 13, 50768, 50768, 407, 519, 466, 1184, 3097, 6889, 50870, 50870, 382, 257, 14800, 5055, 295, 264, 35456, 11, 51184, 51184, 498, 291, 528, 11, 295, 264, 2316, 293, 264, 2063, 2445, 51318, 51318, 6456, 281, 257, 819, 3097, 6889, 13, 51406, 51406, 400, 550, 456, 307, 364, 4274, 6916, 51482, 51482, 300, 715, 1819, 264, 4470, 13, 51532, 51532, 407, 1203, 291, 393, 2464, 382, 257, 8513, 11, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13440521343334302, "compression_ratio": 1.6747967479674797, "no_speech_prob": 4.936523964715889e-06}, {"id": 222, "seek": 62288, "start": 633.0, "end": 639.28, "text": " as a identical copy of the replica,", "tokens": [50364, 407, 5986, 984, 11, 286, 393, 2906, 341, 2302, 4295, 50504, 50504, 382, 264, 551, 322, 264, 558, 13, 50596, 50596, 639, 307, 13752, 1143, 294, 3124, 11, 457, 341, 307, 50700, 50700, 257, 636, 281, 23273, 341, 13, 50768, 50768, 407, 519, 466, 1184, 3097, 6889, 50870, 50870, 382, 257, 14800, 5055, 295, 264, 35456, 11, 51184, 51184, 498, 291, 528, 11, 295, 264, 2316, 293, 264, 2063, 2445, 51318, 51318, 6456, 281, 257, 819, 3097, 6889, 13, 51406, 51406, 400, 550, 456, 307, 364, 4274, 6916, 51482, 51482, 300, 715, 1819, 264, 4470, 13, 51532, 51532, 407, 1203, 291, 393, 2464, 382, 257, 8513, 11, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13440521343334302, "compression_ratio": 1.6747967479674797, "no_speech_prob": 4.936523964715889e-06}, {"id": 223, "seek": 62288, "start": 639.28, "end": 641.96, "text": " if you want, of the model and the cost function", "tokens": [50364, 407, 5986, 984, 11, 286, 393, 2906, 341, 2302, 4295, 50504, 50504, 382, 264, 551, 322, 264, 558, 13, 50596, 50596, 639, 307, 13752, 1143, 294, 3124, 11, 457, 341, 307, 50700, 50700, 257, 636, 281, 23273, 341, 13, 50768, 50768, 407, 519, 466, 1184, 3097, 6889, 50870, 50870, 382, 257, 14800, 5055, 295, 264, 35456, 11, 51184, 51184, 498, 291, 528, 11, 295, 264, 2316, 293, 264, 2063, 2445, 51318, 51318, 6456, 281, 257, 819, 3097, 6889, 13, 51406, 51406, 400, 550, 456, 307, 364, 4274, 6916, 51482, 51482, 300, 715, 1819, 264, 4470, 13, 51532, 51532, 407, 1203, 291, 393, 2464, 382, 257, 8513, 11, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13440521343334302, "compression_ratio": 1.6747967479674797, "no_speech_prob": 4.936523964715889e-06}, {"id": 224, "seek": 62288, "start": 641.96, "end": 643.72, "text": " applied to a different training sample.", "tokens": [50364, 407, 5986, 984, 11, 286, 393, 2906, 341, 2302, 4295, 50504, 50504, 382, 264, 551, 322, 264, 558, 13, 50596, 50596, 639, 307, 13752, 1143, 294, 3124, 11, 457, 341, 307, 50700, 50700, 257, 636, 281, 23273, 341, 13, 50768, 50768, 407, 519, 466, 1184, 3097, 6889, 50870, 50870, 382, 257, 14800, 5055, 295, 264, 35456, 11, 51184, 51184, 498, 291, 528, 11, 295, 264, 2316, 293, 264, 2063, 2445, 51318, 51318, 6456, 281, 257, 819, 3097, 6889, 13, 51406, 51406, 400, 550, 456, 307, 364, 4274, 6916, 51482, 51482, 300, 715, 1819, 264, 4470, 13, 51532, 51532, 407, 1203, 291, 393, 2464, 382, 257, 8513, 11, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13440521343334302, "compression_ratio": 1.6747967479674797, "no_speech_prob": 4.936523964715889e-06}, {"id": 225, "seek": 62288, "start": 643.72, "end": 645.24, "text": " And then there is an average operation", "tokens": [50364, 407, 5986, 984, 11, 286, 393, 2906, 341, 2302, 4295, 50504, 50504, 382, 264, 551, 322, 264, 558, 13, 50596, 50596, 639, 307, 13752, 1143, 294, 3124, 11, 457, 341, 307, 50700, 50700, 257, 636, 281, 23273, 341, 13, 50768, 50768, 407, 519, 466, 1184, 3097, 6889, 50870, 50870, 382, 257, 14800, 5055, 295, 264, 35456, 11, 51184, 51184, 498, 291, 528, 11, 295, 264, 2316, 293, 264, 2063, 2445, 51318, 51318, 6456, 281, 257, 819, 3097, 6889, 13, 51406, 51406, 400, 550, 456, 307, 364, 4274, 6916, 51482, 51482, 300, 715, 1819, 264, 4470, 13, 51532, 51532, 407, 1203, 291, 393, 2464, 382, 257, 8513, 11, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13440521343334302, "compression_ratio": 1.6747967479674797, "no_speech_prob": 4.936523964715889e-06}, {"id": 226, "seek": 62288, "start": 645.24, "end": 646.24, "text": " that computes the loss.", "tokens": [50364, 407, 5986, 984, 11, 286, 393, 2906, 341, 2302, 4295, 50504, 50504, 382, 264, 551, 322, 264, 558, 13, 50596, 50596, 639, 307, 13752, 1143, 294, 3124, 11, 457, 341, 307, 50700, 50700, 257, 636, 281, 23273, 341, 13, 50768, 50768, 407, 519, 466, 1184, 3097, 6889, 50870, 50870, 382, 257, 14800, 5055, 295, 264, 35456, 11, 51184, 51184, 498, 291, 528, 11, 295, 264, 2316, 293, 264, 2063, 2445, 51318, 51318, 6456, 281, 257, 819, 3097, 6889, 13, 51406, 51406, 400, 550, 456, 307, 364, 4274, 6916, 51482, 51482, 300, 715, 1819, 264, 4470, 13, 51532, 51532, 407, 1203, 291, 393, 2464, 382, 257, 8513, 11, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13440521343334302, "compression_ratio": 1.6747967479674797, "no_speech_prob": 4.936523964715889e-06}, {"id": 227, "seek": 62288, "start": 646.24, "end": 650.84, "text": " So everything you can write as a formula,", "tokens": [50364, 407, 5986, 984, 11, 286, 393, 2906, 341, 2302, 4295, 50504, 50504, 382, 264, 551, 322, 264, 558, 13, 50596, 50596, 639, 307, 13752, 1143, 294, 3124, 11, 457, 341, 307, 50700, 50700, 257, 636, 281, 23273, 341, 13, 50768, 50768, 407, 519, 466, 1184, 3097, 6889, 50870, 50870, 382, 257, 14800, 5055, 295, 264, 35456, 11, 51184, 51184, 498, 291, 528, 11, 295, 264, 2316, 293, 264, 2063, 2445, 51318, 51318, 6456, 281, 257, 819, 3097, 6889, 13, 51406, 51406, 400, 550, 456, 307, 364, 4274, 6916, 51482, 51482, 300, 715, 1819, 264, 4470, 13, 51532, 51532, 407, 1203, 291, 393, 2464, 382, 257, 8513, 11, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13440521343334302, "compression_ratio": 1.6747967479674797, "no_speech_prob": 4.936523964715889e-06}, {"id": 228, "seek": 65084, "start": 650.84, "end": 653.96, "text": " you can probably write in terms of those graphs.", "tokens": [50364, 291, 393, 1391, 2464, 294, 2115, 295, 729, 24877, 13, 50520, 50520, 639, 307, 516, 281, 312, 588, 4420, 11, 382, 321, 434, 516, 281, 536, 1780, 13, 50672, 50806, 407, 46533, 3479, 2539, 293, 257, 688, 295, 661, 3479, 50916, 50916, 2539, 13480, 328, 2592, 11, 382, 731, 11, 767, 11, 51068, 51068, 393, 312, 19174, 382, 2445, 19618, 51254, 51254, 293, 257, 588, 2199, 3109, 281, 40425, 257, 2445, 11, 597, 51502, 51502, 1355, 5006, 264, 992, 295, 9834, 51658, 51658, 281, 257, 2445, 300, 4464, 5660, 1080, 2158, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1483244001865387, "compression_ratio": 1.7008928571428572, "no_speech_prob": 6.540235062857391e-06}, {"id": 229, "seek": 65084, "start": 653.96, "end": 657.0, "text": " This is going to be very useful, as we're going to see later.", "tokens": [50364, 291, 393, 1391, 2464, 294, 2115, 295, 729, 24877, 13, 50520, 50520, 639, 307, 516, 281, 312, 588, 4420, 11, 382, 321, 434, 516, 281, 536, 1780, 13, 50672, 50806, 407, 46533, 3479, 2539, 293, 257, 688, 295, 661, 3479, 50916, 50916, 2539, 13480, 328, 2592, 11, 382, 731, 11, 767, 11, 51068, 51068, 393, 312, 19174, 382, 2445, 19618, 51254, 51254, 293, 257, 588, 2199, 3109, 281, 40425, 257, 2445, 11, 597, 51502, 51502, 1355, 5006, 264, 992, 295, 9834, 51658, 51658, 281, 257, 2445, 300, 4464, 5660, 1080, 2158, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1483244001865387, "compression_ratio": 1.7008928571428572, "no_speech_prob": 6.540235062857391e-06}, {"id": 230, "seek": 65084, "start": 659.6800000000001, "end": 661.88, "text": " So supervised machine learning and a lot of other machine", "tokens": [50364, 291, 393, 1391, 2464, 294, 2115, 295, 729, 24877, 13, 50520, 50520, 639, 307, 516, 281, 312, 588, 4420, 11, 382, 321, 434, 516, 281, 536, 1780, 13, 50672, 50806, 407, 46533, 3479, 2539, 293, 257, 688, 295, 661, 3479, 50916, 50916, 2539, 13480, 328, 2592, 11, 382, 731, 11, 767, 11, 51068, 51068, 393, 312, 19174, 382, 2445, 19618, 51254, 51254, 293, 257, 588, 2199, 3109, 281, 40425, 257, 2445, 11, 597, 51502, 51502, 1355, 5006, 264, 992, 295, 9834, 51658, 51658, 281, 257, 2445, 300, 4464, 5660, 1080, 2158, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1483244001865387, "compression_ratio": 1.7008928571428572, "no_speech_prob": 6.540235062857391e-06}, {"id": 231, "seek": 65084, "start": 661.88, "end": 664.9200000000001, "text": " learning paradigms, as well, actually,", "tokens": [50364, 291, 393, 1391, 2464, 294, 2115, 295, 729, 24877, 13, 50520, 50520, 639, 307, 516, 281, 312, 588, 4420, 11, 382, 321, 434, 516, 281, 536, 1780, 13, 50672, 50806, 407, 46533, 3479, 2539, 293, 257, 688, 295, 661, 3479, 50916, 50916, 2539, 13480, 328, 2592, 11, 382, 731, 11, 767, 11, 51068, 51068, 393, 312, 19174, 382, 2445, 19618, 51254, 51254, 293, 257, 588, 2199, 3109, 281, 40425, 257, 2445, 11, 597, 51502, 51502, 1355, 5006, 264, 992, 295, 9834, 51658, 51658, 281, 257, 2445, 300, 4464, 5660, 1080, 2158, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1483244001865387, "compression_ratio": 1.7008928571428572, "no_speech_prob": 6.540235062857391e-06}, {"id": 232, "seek": 65084, "start": 664.9200000000001, "end": 668.64, "text": " can be viewed as function optimization", "tokens": [50364, 291, 393, 1391, 2464, 294, 2115, 295, 729, 24877, 13, 50520, 50520, 639, 307, 516, 281, 312, 588, 4420, 11, 382, 321, 434, 516, 281, 536, 1780, 13, 50672, 50806, 407, 46533, 3479, 2539, 293, 257, 688, 295, 661, 3479, 50916, 50916, 2539, 13480, 328, 2592, 11, 382, 731, 11, 767, 11, 51068, 51068, 393, 312, 19174, 382, 2445, 19618, 51254, 51254, 293, 257, 588, 2199, 3109, 281, 40425, 257, 2445, 11, 597, 51502, 51502, 1355, 5006, 264, 992, 295, 9834, 51658, 51658, 281, 257, 2445, 300, 4464, 5660, 1080, 2158, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1483244001865387, "compression_ratio": 1.7008928571428572, "no_speech_prob": 6.540235062857391e-06}, {"id": 233, "seek": 65084, "start": 668.64, "end": 673.6, "text": " and a very simple approach to optimizing a function, which", "tokens": [50364, 291, 393, 1391, 2464, 294, 2115, 295, 729, 24877, 13, 50520, 50520, 639, 307, 516, 281, 312, 588, 4420, 11, 382, 321, 434, 516, 281, 536, 1780, 13, 50672, 50806, 407, 46533, 3479, 2539, 293, 257, 688, 295, 661, 3479, 50916, 50916, 2539, 13480, 328, 2592, 11, 382, 731, 11, 767, 11, 51068, 51068, 393, 312, 19174, 382, 2445, 19618, 51254, 51254, 293, 257, 588, 2199, 3109, 281, 40425, 257, 2445, 11, 597, 51502, 51502, 1355, 5006, 264, 992, 295, 9834, 51658, 51658, 281, 257, 2445, 300, 4464, 5660, 1080, 2158, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1483244001865387, "compression_ratio": 1.7008928571428572, "no_speech_prob": 6.540235062857391e-06}, {"id": 234, "seek": 65084, "start": 673.6, "end": 676.72, "text": " means finding the set of parameters", "tokens": [50364, 291, 393, 1391, 2464, 294, 2115, 295, 729, 24877, 13, 50520, 50520, 639, 307, 516, 281, 312, 588, 4420, 11, 382, 321, 434, 516, 281, 536, 1780, 13, 50672, 50806, 407, 46533, 3479, 2539, 293, 257, 688, 295, 661, 3479, 50916, 50916, 2539, 13480, 328, 2592, 11, 382, 731, 11, 767, 11, 51068, 51068, 393, 312, 19174, 382, 2445, 19618, 51254, 51254, 293, 257, 588, 2199, 3109, 281, 40425, 257, 2445, 11, 597, 51502, 51502, 1355, 5006, 264, 992, 295, 9834, 51658, 51658, 281, 257, 2445, 300, 4464, 5660, 1080, 2158, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1483244001865387, "compression_ratio": 1.7008928571428572, "no_speech_prob": 6.540235062857391e-06}, {"id": 235, "seek": 65084, "start": 676.72, "end": 680.48, "text": " to a function that minimizes its value.", "tokens": [50364, 291, 393, 1391, 2464, 294, 2115, 295, 729, 24877, 13, 50520, 50520, 639, 307, 516, 281, 312, 588, 4420, 11, 382, 321, 434, 516, 281, 536, 1780, 13, 50672, 50806, 407, 46533, 3479, 2539, 293, 257, 688, 295, 661, 3479, 50916, 50916, 2539, 13480, 328, 2592, 11, 382, 731, 11, 767, 11, 51068, 51068, 393, 312, 19174, 382, 2445, 19618, 51254, 51254, 293, 257, 588, 2199, 3109, 281, 40425, 257, 2445, 11, 597, 51502, 51502, 1355, 5006, 264, 992, 295, 9834, 51658, 51658, 281, 257, 2445, 300, 4464, 5660, 1080, 2158, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1483244001865387, "compression_ratio": 1.7008928571428572, "no_speech_prob": 6.540235062857391e-06}, {"id": 236, "seek": 68048, "start": 680.48, "end": 683.08, "text": " Is gradient descent or gradient-based algorithms.", "tokens": [50364, 1119, 16235, 23475, 420, 16235, 12, 6032, 14642, 13, 50494, 50494, 407, 257, 16235, 12, 6032, 9284, 1669, 264, 15302, 50600, 50600, 300, 257, 2445, 307, 8344, 5508, 293, 5240, 50786, 50786, 819, 9364, 13, 50828, 50828, 12955, 380, 362, 281, 312, 5315, 819, 9364, 11, 50920, 50920, 457, 575, 281, 312, 10957, 11, 575, 281, 312, 1920, 5315, 51068, 51068, 819, 9364, 13, 51122, 51122, 400, 309, 575, 281, 312, 8344, 5508, 11, 51220, 51220, 5911, 264, 2654, 1589, 295, 264, 13525, 51396, 51396, 1177, 380, 980, 291, 709, 466, 689, 264, 7285, 307, 13, 51520, 51520, 407, 510, 311, 364, 1365, 510, 30207, 322, 264, 558, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1637284270430033, "compression_ratio": 1.876543209876543, "no_speech_prob": 6.105975626269355e-05}, {"id": 237, "seek": 68048, "start": 683.08, "end": 685.2, "text": " So a gradient-based algorithm makes the assumption", "tokens": [50364, 1119, 16235, 23475, 420, 16235, 12, 6032, 14642, 13, 50494, 50494, 407, 257, 16235, 12, 6032, 9284, 1669, 264, 15302, 50600, 50600, 300, 257, 2445, 307, 8344, 5508, 293, 5240, 50786, 50786, 819, 9364, 13, 50828, 50828, 12955, 380, 362, 281, 312, 5315, 819, 9364, 11, 50920, 50920, 457, 575, 281, 312, 10957, 11, 575, 281, 312, 1920, 5315, 51068, 51068, 819, 9364, 13, 51122, 51122, 400, 309, 575, 281, 312, 8344, 5508, 11, 51220, 51220, 5911, 264, 2654, 1589, 295, 264, 13525, 51396, 51396, 1177, 380, 980, 291, 709, 466, 689, 264, 7285, 307, 13, 51520, 51520, 407, 510, 311, 364, 1365, 510, 30207, 322, 264, 558, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1637284270430033, "compression_ratio": 1.876543209876543, "no_speech_prob": 6.105975626269355e-05}, {"id": 238, "seek": 68048, "start": 685.2, "end": 688.9200000000001, "text": " that a function is somewhat smooth and mostly", "tokens": [50364, 1119, 16235, 23475, 420, 16235, 12, 6032, 14642, 13, 50494, 50494, 407, 257, 16235, 12, 6032, 9284, 1669, 264, 15302, 50600, 50600, 300, 257, 2445, 307, 8344, 5508, 293, 5240, 50786, 50786, 819, 9364, 13, 50828, 50828, 12955, 380, 362, 281, 312, 5315, 819, 9364, 11, 50920, 50920, 457, 575, 281, 312, 10957, 11, 575, 281, 312, 1920, 5315, 51068, 51068, 819, 9364, 13, 51122, 51122, 400, 309, 575, 281, 312, 8344, 5508, 11, 51220, 51220, 5911, 264, 2654, 1589, 295, 264, 13525, 51396, 51396, 1177, 380, 980, 291, 709, 466, 689, 264, 7285, 307, 13, 51520, 51520, 407, 510, 311, 364, 1365, 510, 30207, 322, 264, 558, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1637284270430033, "compression_ratio": 1.876543209876543, "no_speech_prob": 6.105975626269355e-05}, {"id": 239, "seek": 68048, "start": 688.9200000000001, "end": 689.76, "text": " differentiable.", "tokens": [50364, 1119, 16235, 23475, 420, 16235, 12, 6032, 14642, 13, 50494, 50494, 407, 257, 16235, 12, 6032, 9284, 1669, 264, 15302, 50600, 50600, 300, 257, 2445, 307, 8344, 5508, 293, 5240, 50786, 50786, 819, 9364, 13, 50828, 50828, 12955, 380, 362, 281, 312, 5315, 819, 9364, 11, 50920, 50920, 457, 575, 281, 312, 10957, 11, 575, 281, 312, 1920, 5315, 51068, 51068, 819, 9364, 13, 51122, 51122, 400, 309, 575, 281, 312, 8344, 5508, 11, 51220, 51220, 5911, 264, 2654, 1589, 295, 264, 13525, 51396, 51396, 1177, 380, 980, 291, 709, 466, 689, 264, 7285, 307, 13, 51520, 51520, 407, 510, 311, 364, 1365, 510, 30207, 322, 264, 558, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1637284270430033, "compression_ratio": 1.876543209876543, "no_speech_prob": 6.105975626269355e-05}, {"id": 240, "seek": 68048, "start": 689.76, "end": 691.6, "text": " Doesn't have to be everywhere differentiable,", "tokens": [50364, 1119, 16235, 23475, 420, 16235, 12, 6032, 14642, 13, 50494, 50494, 407, 257, 16235, 12, 6032, 9284, 1669, 264, 15302, 50600, 50600, 300, 257, 2445, 307, 8344, 5508, 293, 5240, 50786, 50786, 819, 9364, 13, 50828, 50828, 12955, 380, 362, 281, 312, 5315, 819, 9364, 11, 50920, 50920, 457, 575, 281, 312, 10957, 11, 575, 281, 312, 1920, 5315, 51068, 51068, 819, 9364, 13, 51122, 51122, 400, 309, 575, 281, 312, 8344, 5508, 11, 51220, 51220, 5911, 264, 2654, 1589, 295, 264, 13525, 51396, 51396, 1177, 380, 980, 291, 709, 466, 689, 264, 7285, 307, 13, 51520, 51520, 407, 510, 311, 364, 1365, 510, 30207, 322, 264, 558, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1637284270430033, "compression_ratio": 1.876543209876543, "no_speech_prob": 6.105975626269355e-05}, {"id": 241, "seek": 68048, "start": 691.6, "end": 694.5600000000001, "text": " but has to be continuous, has to be almost everywhere", "tokens": [50364, 1119, 16235, 23475, 420, 16235, 12, 6032, 14642, 13, 50494, 50494, 407, 257, 16235, 12, 6032, 9284, 1669, 264, 15302, 50600, 50600, 300, 257, 2445, 307, 8344, 5508, 293, 5240, 50786, 50786, 819, 9364, 13, 50828, 50828, 12955, 380, 362, 281, 312, 5315, 819, 9364, 11, 50920, 50920, 457, 575, 281, 312, 10957, 11, 575, 281, 312, 1920, 5315, 51068, 51068, 819, 9364, 13, 51122, 51122, 400, 309, 575, 281, 312, 8344, 5508, 11, 51220, 51220, 5911, 264, 2654, 1589, 295, 264, 13525, 51396, 51396, 1177, 380, 980, 291, 709, 466, 689, 264, 7285, 307, 13, 51520, 51520, 407, 510, 311, 364, 1365, 510, 30207, 322, 264, 558, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1637284270430033, "compression_ratio": 1.876543209876543, "no_speech_prob": 6.105975626269355e-05}, {"id": 242, "seek": 68048, "start": 694.5600000000001, "end": 695.64, "text": " differentiable.", "tokens": [50364, 1119, 16235, 23475, 420, 16235, 12, 6032, 14642, 13, 50494, 50494, 407, 257, 16235, 12, 6032, 9284, 1669, 264, 15302, 50600, 50600, 300, 257, 2445, 307, 8344, 5508, 293, 5240, 50786, 50786, 819, 9364, 13, 50828, 50828, 12955, 380, 362, 281, 312, 5315, 819, 9364, 11, 50920, 50920, 457, 575, 281, 312, 10957, 11, 575, 281, 312, 1920, 5315, 51068, 51068, 819, 9364, 13, 51122, 51122, 400, 309, 575, 281, 312, 8344, 5508, 11, 51220, 51220, 5911, 264, 2654, 1589, 295, 264, 13525, 51396, 51396, 1177, 380, 980, 291, 709, 466, 689, 264, 7285, 307, 13, 51520, 51520, 407, 510, 311, 364, 1365, 510, 30207, 322, 264, 558, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1637284270430033, "compression_ratio": 1.876543209876543, "no_speech_prob": 6.105975626269355e-05}, {"id": 243, "seek": 68048, "start": 695.64, "end": 697.6, "text": " And it has to be somewhat smooth,", "tokens": [50364, 1119, 16235, 23475, 420, 16235, 12, 6032, 14642, 13, 50494, 50494, 407, 257, 16235, 12, 6032, 9284, 1669, 264, 15302, 50600, 50600, 300, 257, 2445, 307, 8344, 5508, 293, 5240, 50786, 50786, 819, 9364, 13, 50828, 50828, 12955, 380, 362, 281, 312, 5315, 819, 9364, 11, 50920, 50920, 457, 575, 281, 312, 10957, 11, 575, 281, 312, 1920, 5315, 51068, 51068, 819, 9364, 13, 51122, 51122, 400, 309, 575, 281, 312, 8344, 5508, 11, 51220, 51220, 5911, 264, 2654, 1589, 295, 264, 13525, 51396, 51396, 1177, 380, 980, 291, 709, 466, 689, 264, 7285, 307, 13, 51520, 51520, 407, 510, 311, 364, 1365, 510, 30207, 322, 264, 558, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1637284270430033, "compression_ratio": 1.876543209876543, "no_speech_prob": 6.105975626269355e-05}, {"id": 244, "seek": 68048, "start": 697.6, "end": 701.12, "text": " otherwise the local information of the slope", "tokens": [50364, 1119, 16235, 23475, 420, 16235, 12, 6032, 14642, 13, 50494, 50494, 407, 257, 16235, 12, 6032, 9284, 1669, 264, 15302, 50600, 50600, 300, 257, 2445, 307, 8344, 5508, 293, 5240, 50786, 50786, 819, 9364, 13, 50828, 50828, 12955, 380, 362, 281, 312, 5315, 819, 9364, 11, 50920, 50920, 457, 575, 281, 312, 10957, 11, 575, 281, 312, 1920, 5315, 51068, 51068, 819, 9364, 13, 51122, 51122, 400, 309, 575, 281, 312, 8344, 5508, 11, 51220, 51220, 5911, 264, 2654, 1589, 295, 264, 13525, 51396, 51396, 1177, 380, 980, 291, 709, 466, 689, 264, 7285, 307, 13, 51520, 51520, 407, 510, 311, 364, 1365, 510, 30207, 322, 264, 558, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1637284270430033, "compression_ratio": 1.876543209876543, "no_speech_prob": 6.105975626269355e-05}, {"id": 245, "seek": 68048, "start": 701.12, "end": 703.6, "text": " doesn't tell you much about where the minimum is.", "tokens": [50364, 1119, 16235, 23475, 420, 16235, 12, 6032, 14642, 13, 50494, 50494, 407, 257, 16235, 12, 6032, 9284, 1669, 264, 15302, 50600, 50600, 300, 257, 2445, 307, 8344, 5508, 293, 5240, 50786, 50786, 819, 9364, 13, 50828, 50828, 12955, 380, 362, 281, 312, 5315, 819, 9364, 11, 50920, 50920, 457, 575, 281, 312, 10957, 11, 575, 281, 312, 1920, 5315, 51068, 51068, 819, 9364, 13, 51122, 51122, 400, 309, 575, 281, 312, 8344, 5508, 11, 51220, 51220, 5911, 264, 2654, 1589, 295, 264, 13525, 51396, 51396, 1177, 380, 980, 291, 709, 466, 689, 264, 7285, 307, 13, 51520, 51520, 407, 510, 311, 364, 1365, 510, 30207, 322, 264, 558, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1637284270430033, "compression_ratio": 1.876543209876543, "no_speech_prob": 6.105975626269355e-05}, {"id": 246, "seek": 68048, "start": 703.6, "end": 708.32, "text": " So here's an example here depicted on the right.", "tokens": [50364, 1119, 16235, 23475, 420, 16235, 12, 6032, 14642, 13, 50494, 50494, 407, 257, 16235, 12, 6032, 9284, 1669, 264, 15302, 50600, 50600, 300, 257, 2445, 307, 8344, 5508, 293, 5240, 50786, 50786, 819, 9364, 13, 50828, 50828, 12955, 380, 362, 281, 312, 5315, 819, 9364, 11, 50920, 50920, 457, 575, 281, 312, 10957, 11, 575, 281, 312, 1920, 5315, 51068, 51068, 819, 9364, 13, 51122, 51122, 400, 309, 575, 281, 312, 8344, 5508, 11, 51220, 51220, 5911, 264, 2654, 1589, 295, 264, 13525, 51396, 51396, 1177, 380, 980, 291, 709, 466, 689, 264, 7285, 307, 13, 51520, 51520, 407, 510, 311, 364, 1365, 510, 30207, 322, 264, 558, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1637284270430033, "compression_ratio": 1.876543209876543, "no_speech_prob": 6.105975626269355e-05}, {"id": 247, "seek": 70832, "start": 708.32, "end": 710.84, "text": " The lines that you see here, the pink lines,", "tokens": [50364, 440, 3876, 300, 291, 536, 510, 11, 264, 7022, 3876, 11, 50490, 50490, 366, 264, 3876, 295, 2681, 2063, 13, 50556, 50556, 400, 341, 2063, 307, 37262, 13, 50648, 50648, 407, 309, 311, 1936, 257, 733, 295, 45729, 7902, 327, 13, 50816, 50816, 400, 341, 307, 264, 21512, 295, 257, 3170, 50940, 50940, 1219, 342, 8997, 2750, 16235, 23475, 11, 597, 51020, 51020, 321, 603, 751, 466, 294, 257, 3456, 13, 51102, 51102, 407, 337, 342, 8997, 2750, 16235, 23475, 11, 264, 10747, 307, 11, 51242, 51242, 291, 855, 364, 1365, 11, 291, 1190, 309, 807, 264, 3479, 11, 51354, 51354, 291, 14722, 264, 10024, 337, 300, 1729, 6889, 11, 51484, 51484, 293, 550, 291, 2573, 484, 538, 577, 709, 51642, 51642, 293, 577, 281, 16927, 1184, 295, 264, 46999, 294, 264, 3479, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12482969311700351, "compression_ratio": 1.815217391304348, "no_speech_prob": 2.429666528769303e-05}, {"id": 248, "seek": 70832, "start": 710.84, "end": 712.1600000000001, "text": " are the lines of equal cost.", "tokens": [50364, 440, 3876, 300, 291, 536, 510, 11, 264, 7022, 3876, 11, 50490, 50490, 366, 264, 3876, 295, 2681, 2063, 13, 50556, 50556, 400, 341, 2063, 307, 37262, 13, 50648, 50648, 407, 309, 311, 1936, 257, 733, 295, 45729, 7902, 327, 13, 50816, 50816, 400, 341, 307, 264, 21512, 295, 257, 3170, 50940, 50940, 1219, 342, 8997, 2750, 16235, 23475, 11, 597, 51020, 51020, 321, 603, 751, 466, 294, 257, 3456, 13, 51102, 51102, 407, 337, 342, 8997, 2750, 16235, 23475, 11, 264, 10747, 307, 11, 51242, 51242, 291, 855, 364, 1365, 11, 291, 1190, 309, 807, 264, 3479, 11, 51354, 51354, 291, 14722, 264, 10024, 337, 300, 1729, 6889, 11, 51484, 51484, 293, 550, 291, 2573, 484, 538, 577, 709, 51642, 51642, 293, 577, 281, 16927, 1184, 295, 264, 46999, 294, 264, 3479, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12482969311700351, "compression_ratio": 1.815217391304348, "no_speech_prob": 2.429666528769303e-05}, {"id": 249, "seek": 70832, "start": 712.1600000000001, "end": 714.0, "text": " And this cost is quadratic.", "tokens": [50364, 440, 3876, 300, 291, 536, 510, 11, 264, 7022, 3876, 11, 50490, 50490, 366, 264, 3876, 295, 2681, 2063, 13, 50556, 50556, 400, 341, 2063, 307, 37262, 13, 50648, 50648, 407, 309, 311, 1936, 257, 733, 295, 45729, 7902, 327, 13, 50816, 50816, 400, 341, 307, 264, 21512, 295, 257, 3170, 50940, 50940, 1219, 342, 8997, 2750, 16235, 23475, 11, 597, 51020, 51020, 321, 603, 751, 466, 294, 257, 3456, 13, 51102, 51102, 407, 337, 342, 8997, 2750, 16235, 23475, 11, 264, 10747, 307, 11, 51242, 51242, 291, 855, 364, 1365, 11, 291, 1190, 309, 807, 264, 3479, 11, 51354, 51354, 291, 14722, 264, 10024, 337, 300, 1729, 6889, 11, 51484, 51484, 293, 550, 291, 2573, 484, 538, 577, 709, 51642, 51642, 293, 577, 281, 16927, 1184, 295, 264, 46999, 294, 264, 3479, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12482969311700351, "compression_ratio": 1.815217391304348, "no_speech_prob": 2.429666528769303e-05}, {"id": 250, "seek": 70832, "start": 714.0, "end": 717.36, "text": " So it's basically a kind of paraboloid.", "tokens": [50364, 440, 3876, 300, 291, 536, 510, 11, 264, 7022, 3876, 11, 50490, 50490, 366, 264, 3876, 295, 2681, 2063, 13, 50556, 50556, 400, 341, 2063, 307, 37262, 13, 50648, 50648, 407, 309, 311, 1936, 257, 733, 295, 45729, 7902, 327, 13, 50816, 50816, 400, 341, 307, 264, 21512, 295, 257, 3170, 50940, 50940, 1219, 342, 8997, 2750, 16235, 23475, 11, 597, 51020, 51020, 321, 603, 751, 466, 294, 257, 3456, 13, 51102, 51102, 407, 337, 342, 8997, 2750, 16235, 23475, 11, 264, 10747, 307, 11, 51242, 51242, 291, 855, 364, 1365, 11, 291, 1190, 309, 807, 264, 3479, 11, 51354, 51354, 291, 14722, 264, 10024, 337, 300, 1729, 6889, 11, 51484, 51484, 293, 550, 291, 2573, 484, 538, 577, 709, 51642, 51642, 293, 577, 281, 16927, 1184, 295, 264, 46999, 294, 264, 3479, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12482969311700351, "compression_ratio": 1.815217391304348, "no_speech_prob": 2.429666528769303e-05}, {"id": 251, "seek": 70832, "start": 717.36, "end": 719.84, "text": " And this is the trajectory of a method", "tokens": [50364, 440, 3876, 300, 291, 536, 510, 11, 264, 7022, 3876, 11, 50490, 50490, 366, 264, 3876, 295, 2681, 2063, 13, 50556, 50556, 400, 341, 2063, 307, 37262, 13, 50648, 50648, 407, 309, 311, 1936, 257, 733, 295, 45729, 7902, 327, 13, 50816, 50816, 400, 341, 307, 264, 21512, 295, 257, 3170, 50940, 50940, 1219, 342, 8997, 2750, 16235, 23475, 11, 597, 51020, 51020, 321, 603, 751, 466, 294, 257, 3456, 13, 51102, 51102, 407, 337, 342, 8997, 2750, 16235, 23475, 11, 264, 10747, 307, 11, 51242, 51242, 291, 855, 364, 1365, 11, 291, 1190, 309, 807, 264, 3479, 11, 51354, 51354, 291, 14722, 264, 10024, 337, 300, 1729, 6889, 11, 51484, 51484, 293, 550, 291, 2573, 484, 538, 577, 709, 51642, 51642, 293, 577, 281, 16927, 1184, 295, 264, 46999, 294, 264, 3479, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12482969311700351, "compression_ratio": 1.815217391304348, "no_speech_prob": 2.429666528769303e-05}, {"id": 252, "seek": 70832, "start": 719.84, "end": 721.44, "text": " called stochastic gradient descent, which", "tokens": [50364, 440, 3876, 300, 291, 536, 510, 11, 264, 7022, 3876, 11, 50490, 50490, 366, 264, 3876, 295, 2681, 2063, 13, 50556, 50556, 400, 341, 2063, 307, 37262, 13, 50648, 50648, 407, 309, 311, 1936, 257, 733, 295, 45729, 7902, 327, 13, 50816, 50816, 400, 341, 307, 264, 21512, 295, 257, 3170, 50940, 50940, 1219, 342, 8997, 2750, 16235, 23475, 11, 597, 51020, 51020, 321, 603, 751, 466, 294, 257, 3456, 13, 51102, 51102, 407, 337, 342, 8997, 2750, 16235, 23475, 11, 264, 10747, 307, 11, 51242, 51242, 291, 855, 364, 1365, 11, 291, 1190, 309, 807, 264, 3479, 11, 51354, 51354, 291, 14722, 264, 10024, 337, 300, 1729, 6889, 11, 51484, 51484, 293, 550, 291, 2573, 484, 538, 577, 709, 51642, 51642, 293, 577, 281, 16927, 1184, 295, 264, 46999, 294, 264, 3479, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12482969311700351, "compression_ratio": 1.815217391304348, "no_speech_prob": 2.429666528769303e-05}, {"id": 253, "seek": 70832, "start": 721.44, "end": 723.08, "text": " we'll talk about in a minute.", "tokens": [50364, 440, 3876, 300, 291, 536, 510, 11, 264, 7022, 3876, 11, 50490, 50490, 366, 264, 3876, 295, 2681, 2063, 13, 50556, 50556, 400, 341, 2063, 307, 37262, 13, 50648, 50648, 407, 309, 311, 1936, 257, 733, 295, 45729, 7902, 327, 13, 50816, 50816, 400, 341, 307, 264, 21512, 295, 257, 3170, 50940, 50940, 1219, 342, 8997, 2750, 16235, 23475, 11, 597, 51020, 51020, 321, 603, 751, 466, 294, 257, 3456, 13, 51102, 51102, 407, 337, 342, 8997, 2750, 16235, 23475, 11, 264, 10747, 307, 11, 51242, 51242, 291, 855, 364, 1365, 11, 291, 1190, 309, 807, 264, 3479, 11, 51354, 51354, 291, 14722, 264, 10024, 337, 300, 1729, 6889, 11, 51484, 51484, 293, 550, 291, 2573, 484, 538, 577, 709, 51642, 51642, 293, 577, 281, 16927, 1184, 295, 264, 46999, 294, 264, 3479, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12482969311700351, "compression_ratio": 1.815217391304348, "no_speech_prob": 2.429666528769303e-05}, {"id": 254, "seek": 70832, "start": 723.08, "end": 725.88, "text": " So for stochastic gradient descent, the procedure is,", "tokens": [50364, 440, 3876, 300, 291, 536, 510, 11, 264, 7022, 3876, 11, 50490, 50490, 366, 264, 3876, 295, 2681, 2063, 13, 50556, 50556, 400, 341, 2063, 307, 37262, 13, 50648, 50648, 407, 309, 311, 1936, 257, 733, 295, 45729, 7902, 327, 13, 50816, 50816, 400, 341, 307, 264, 21512, 295, 257, 3170, 50940, 50940, 1219, 342, 8997, 2750, 16235, 23475, 11, 597, 51020, 51020, 321, 603, 751, 466, 294, 257, 3456, 13, 51102, 51102, 407, 337, 342, 8997, 2750, 16235, 23475, 11, 264, 10747, 307, 11, 51242, 51242, 291, 855, 364, 1365, 11, 291, 1190, 309, 807, 264, 3479, 11, 51354, 51354, 291, 14722, 264, 10024, 337, 300, 1729, 6889, 11, 51484, 51484, 293, 550, 291, 2573, 484, 538, 577, 709, 51642, 51642, 293, 577, 281, 16927, 1184, 295, 264, 46999, 294, 264, 3479, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12482969311700351, "compression_ratio": 1.815217391304348, "no_speech_prob": 2.429666528769303e-05}, {"id": 255, "seek": 70832, "start": 725.88, "end": 728.12, "text": " you show an example, you run it through the machine,", "tokens": [50364, 440, 3876, 300, 291, 536, 510, 11, 264, 7022, 3876, 11, 50490, 50490, 366, 264, 3876, 295, 2681, 2063, 13, 50556, 50556, 400, 341, 2063, 307, 37262, 13, 50648, 50648, 407, 309, 311, 1936, 257, 733, 295, 45729, 7902, 327, 13, 50816, 50816, 400, 341, 307, 264, 21512, 295, 257, 3170, 50940, 50940, 1219, 342, 8997, 2750, 16235, 23475, 11, 597, 51020, 51020, 321, 603, 751, 466, 294, 257, 3456, 13, 51102, 51102, 407, 337, 342, 8997, 2750, 16235, 23475, 11, 264, 10747, 307, 11, 51242, 51242, 291, 855, 364, 1365, 11, 291, 1190, 309, 807, 264, 3479, 11, 51354, 51354, 291, 14722, 264, 10024, 337, 300, 1729, 6889, 11, 51484, 51484, 293, 550, 291, 2573, 484, 538, 577, 709, 51642, 51642, 293, 577, 281, 16927, 1184, 295, 264, 46999, 294, 264, 3479, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12482969311700351, "compression_ratio": 1.815217391304348, "no_speech_prob": 2.429666528769303e-05}, {"id": 256, "seek": 70832, "start": 728.12, "end": 730.72, "text": " you compute the objective for that particular sample,", "tokens": [50364, 440, 3876, 300, 291, 536, 510, 11, 264, 7022, 3876, 11, 50490, 50490, 366, 264, 3876, 295, 2681, 2063, 13, 50556, 50556, 400, 341, 2063, 307, 37262, 13, 50648, 50648, 407, 309, 311, 1936, 257, 733, 295, 45729, 7902, 327, 13, 50816, 50816, 400, 341, 307, 264, 21512, 295, 257, 3170, 50940, 50940, 1219, 342, 8997, 2750, 16235, 23475, 11, 597, 51020, 51020, 321, 603, 751, 466, 294, 257, 3456, 13, 51102, 51102, 407, 337, 342, 8997, 2750, 16235, 23475, 11, 264, 10747, 307, 11, 51242, 51242, 291, 855, 364, 1365, 11, 291, 1190, 309, 807, 264, 3479, 11, 51354, 51354, 291, 14722, 264, 10024, 337, 300, 1729, 6889, 11, 51484, 51484, 293, 550, 291, 2573, 484, 538, 577, 709, 51642, 51642, 293, 577, 281, 16927, 1184, 295, 264, 46999, 294, 264, 3479, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12482969311700351, "compression_ratio": 1.815217391304348, "no_speech_prob": 2.429666528769303e-05}, {"id": 257, "seek": 70832, "start": 730.72, "end": 733.8800000000001, "text": " and then you figure out by how much", "tokens": [50364, 440, 3876, 300, 291, 536, 510, 11, 264, 7022, 3876, 11, 50490, 50490, 366, 264, 3876, 295, 2681, 2063, 13, 50556, 50556, 400, 341, 2063, 307, 37262, 13, 50648, 50648, 407, 309, 311, 1936, 257, 733, 295, 45729, 7902, 327, 13, 50816, 50816, 400, 341, 307, 264, 21512, 295, 257, 3170, 50940, 50940, 1219, 342, 8997, 2750, 16235, 23475, 11, 597, 51020, 51020, 321, 603, 751, 466, 294, 257, 3456, 13, 51102, 51102, 407, 337, 342, 8997, 2750, 16235, 23475, 11, 264, 10747, 307, 11, 51242, 51242, 291, 855, 364, 1365, 11, 291, 1190, 309, 807, 264, 3479, 11, 51354, 51354, 291, 14722, 264, 10024, 337, 300, 1729, 6889, 11, 51484, 51484, 293, 550, 291, 2573, 484, 538, 577, 709, 51642, 51642, 293, 577, 281, 16927, 1184, 295, 264, 46999, 294, 264, 3479, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12482969311700351, "compression_ratio": 1.815217391304348, "no_speech_prob": 2.429666528769303e-05}, {"id": 258, "seek": 70832, "start": 733.8800000000001, "end": 736.5600000000001, "text": " and how to modify each of the knobs in the machine,", "tokens": [50364, 440, 3876, 300, 291, 536, 510, 11, 264, 7022, 3876, 11, 50490, 50490, 366, 264, 3876, 295, 2681, 2063, 13, 50556, 50556, 400, 341, 2063, 307, 37262, 13, 50648, 50648, 407, 309, 311, 1936, 257, 733, 295, 45729, 7902, 327, 13, 50816, 50816, 400, 341, 307, 264, 21512, 295, 257, 3170, 50940, 50940, 1219, 342, 8997, 2750, 16235, 23475, 11, 597, 51020, 51020, 321, 603, 751, 466, 294, 257, 3456, 13, 51102, 51102, 407, 337, 342, 8997, 2750, 16235, 23475, 11, 264, 10747, 307, 11, 51242, 51242, 291, 855, 364, 1365, 11, 291, 1190, 309, 807, 264, 3479, 11, 51354, 51354, 291, 14722, 264, 10024, 337, 300, 1729, 6889, 11, 51484, 51484, 293, 550, 291, 2573, 484, 538, 577, 709, 51642, 51642, 293, 577, 281, 16927, 1184, 295, 264, 46999, 294, 264, 3479, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12482969311700351, "compression_ratio": 1.815217391304348, "no_speech_prob": 2.429666528769303e-05}, {"id": 259, "seek": 73656, "start": 736.56, "end": 740.16, "text": " the w parameters, so that the objective function goes down", "tokens": [50364, 264, 261, 9834, 11, 370, 300, 264, 10024, 2445, 1709, 760, 50544, 50544, 538, 257, 707, 857, 13, 50590, 50590, 509, 652, 300, 1319, 11, 293, 550, 291, 352, 281, 264, 958, 6889, 13, 50716, 50716, 961, 311, 312, 257, 707, 544, 9860, 13, 50808, 50808, 407, 16235, 23475, 307, 341, 588, 3875, 9284, 510, 13, 51048, 51048, 509, 7406, 264, 2158, 295, 261, 538, 1080, 3894, 2158, 51178, 51178, 3175, 257, 1823, 2744, 11, 32415, 510, 11, 17207, 51392, 51392, 538, 264, 16235, 295, 264, 10024, 2445, 51494, 51494, 365, 3104, 281, 264, 9834, 13, 51712, 51712, 407, 437, 307, 257, 16235, 30, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11778555976019965, "compression_ratio": 1.6945606694560669, "no_speech_prob": 2.144132486137096e-05}, {"id": 260, "seek": 73656, "start": 740.16, "end": 741.0799999999999, "text": " by a little bit.", "tokens": [50364, 264, 261, 9834, 11, 370, 300, 264, 10024, 2445, 1709, 760, 50544, 50544, 538, 257, 707, 857, 13, 50590, 50590, 509, 652, 300, 1319, 11, 293, 550, 291, 352, 281, 264, 958, 6889, 13, 50716, 50716, 961, 311, 312, 257, 707, 544, 9860, 13, 50808, 50808, 407, 16235, 23475, 307, 341, 588, 3875, 9284, 510, 13, 51048, 51048, 509, 7406, 264, 2158, 295, 261, 538, 1080, 3894, 2158, 51178, 51178, 3175, 257, 1823, 2744, 11, 32415, 510, 11, 17207, 51392, 51392, 538, 264, 16235, 295, 264, 10024, 2445, 51494, 51494, 365, 3104, 281, 264, 9834, 13, 51712, 51712, 407, 437, 307, 257, 16235, 30, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11778555976019965, "compression_ratio": 1.6945606694560669, "no_speech_prob": 2.144132486137096e-05}, {"id": 261, "seek": 73656, "start": 741.0799999999999, "end": 743.5999999999999, "text": " You make that change, and then you go to the next sample.", "tokens": [50364, 264, 261, 9834, 11, 370, 300, 264, 10024, 2445, 1709, 760, 50544, 50544, 538, 257, 707, 857, 13, 50590, 50590, 509, 652, 300, 1319, 11, 293, 550, 291, 352, 281, 264, 958, 6889, 13, 50716, 50716, 961, 311, 312, 257, 707, 544, 9860, 13, 50808, 50808, 407, 16235, 23475, 307, 341, 588, 3875, 9284, 510, 13, 51048, 51048, 509, 7406, 264, 2158, 295, 261, 538, 1080, 3894, 2158, 51178, 51178, 3175, 257, 1823, 2744, 11, 32415, 510, 11, 17207, 51392, 51392, 538, 264, 16235, 295, 264, 10024, 2445, 51494, 51494, 365, 3104, 281, 264, 9834, 13, 51712, 51712, 407, 437, 307, 257, 16235, 30, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11778555976019965, "compression_ratio": 1.6945606694560669, "no_speech_prob": 2.144132486137096e-05}, {"id": 262, "seek": 73656, "start": 743.5999999999999, "end": 745.4399999999999, "text": " Let's be a little more formal.", "tokens": [50364, 264, 261, 9834, 11, 370, 300, 264, 10024, 2445, 1709, 760, 50544, 50544, 538, 257, 707, 857, 13, 50590, 50590, 509, 652, 300, 1319, 11, 293, 550, 291, 352, 281, 264, 958, 6889, 13, 50716, 50716, 961, 311, 312, 257, 707, 544, 9860, 13, 50808, 50808, 407, 16235, 23475, 307, 341, 588, 3875, 9284, 510, 13, 51048, 51048, 509, 7406, 264, 2158, 295, 261, 538, 1080, 3894, 2158, 51178, 51178, 3175, 257, 1823, 2744, 11, 32415, 510, 11, 17207, 51392, 51392, 538, 264, 16235, 295, 264, 10024, 2445, 51494, 51494, 365, 3104, 281, 264, 9834, 13, 51712, 51712, 407, 437, 307, 257, 16235, 30, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11778555976019965, "compression_ratio": 1.6945606694560669, "no_speech_prob": 2.144132486137096e-05}, {"id": 263, "seek": 73656, "start": 745.4399999999999, "end": 750.2399999999999, "text": " So gradient descent is this very basic algorithm here.", "tokens": [50364, 264, 261, 9834, 11, 370, 300, 264, 10024, 2445, 1709, 760, 50544, 50544, 538, 257, 707, 857, 13, 50590, 50590, 509, 652, 300, 1319, 11, 293, 550, 291, 352, 281, 264, 958, 6889, 13, 50716, 50716, 961, 311, 312, 257, 707, 544, 9860, 13, 50808, 50808, 407, 16235, 23475, 307, 341, 588, 3875, 9284, 510, 13, 51048, 51048, 509, 7406, 264, 2158, 295, 261, 538, 1080, 3894, 2158, 51178, 51178, 3175, 257, 1823, 2744, 11, 32415, 510, 11, 17207, 51392, 51392, 538, 264, 16235, 295, 264, 10024, 2445, 51494, 51494, 365, 3104, 281, 264, 9834, 13, 51712, 51712, 407, 437, 307, 257, 16235, 30, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11778555976019965, "compression_ratio": 1.6945606694560669, "no_speech_prob": 2.144132486137096e-05}, {"id": 264, "seek": 73656, "start": 750.2399999999999, "end": 752.8399999999999, "text": " You replace the value of w by its previous value", "tokens": [50364, 264, 261, 9834, 11, 370, 300, 264, 10024, 2445, 1709, 760, 50544, 50544, 538, 257, 707, 857, 13, 50590, 50590, 509, 652, 300, 1319, 11, 293, 550, 291, 352, 281, 264, 958, 6889, 13, 50716, 50716, 961, 311, 312, 257, 707, 544, 9860, 13, 50808, 50808, 407, 16235, 23475, 307, 341, 588, 3875, 9284, 510, 13, 51048, 51048, 509, 7406, 264, 2158, 295, 261, 538, 1080, 3894, 2158, 51178, 51178, 3175, 257, 1823, 2744, 11, 32415, 510, 11, 17207, 51392, 51392, 538, 264, 16235, 295, 264, 10024, 2445, 51494, 51494, 365, 3104, 281, 264, 9834, 13, 51712, 51712, 407, 437, 307, 257, 16235, 30, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11778555976019965, "compression_ratio": 1.6945606694560669, "no_speech_prob": 2.144132486137096e-05}, {"id": 265, "seek": 73656, "start": 752.8399999999999, "end": 757.1199999999999, "text": " minus a step size, eta here, multiplied", "tokens": [50364, 264, 261, 9834, 11, 370, 300, 264, 10024, 2445, 1709, 760, 50544, 50544, 538, 257, 707, 857, 13, 50590, 50590, 509, 652, 300, 1319, 11, 293, 550, 291, 352, 281, 264, 958, 6889, 13, 50716, 50716, 961, 311, 312, 257, 707, 544, 9860, 13, 50808, 50808, 407, 16235, 23475, 307, 341, 588, 3875, 9284, 510, 13, 51048, 51048, 509, 7406, 264, 2158, 295, 261, 538, 1080, 3894, 2158, 51178, 51178, 3175, 257, 1823, 2744, 11, 32415, 510, 11, 17207, 51392, 51392, 538, 264, 16235, 295, 264, 10024, 2445, 51494, 51494, 365, 3104, 281, 264, 9834, 13, 51712, 51712, 407, 437, 307, 257, 16235, 30, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11778555976019965, "compression_ratio": 1.6945606694560669, "no_speech_prob": 2.144132486137096e-05}, {"id": 266, "seek": 73656, "start": 757.1199999999999, "end": 759.16, "text": " by the gradient of the objective function", "tokens": [50364, 264, 261, 9834, 11, 370, 300, 264, 10024, 2445, 1709, 760, 50544, 50544, 538, 257, 707, 857, 13, 50590, 50590, 509, 652, 300, 1319, 11, 293, 550, 291, 352, 281, 264, 958, 6889, 13, 50716, 50716, 961, 311, 312, 257, 707, 544, 9860, 13, 50808, 50808, 407, 16235, 23475, 307, 341, 588, 3875, 9284, 510, 13, 51048, 51048, 509, 7406, 264, 2158, 295, 261, 538, 1080, 3894, 2158, 51178, 51178, 3175, 257, 1823, 2744, 11, 32415, 510, 11, 17207, 51392, 51392, 538, 264, 16235, 295, 264, 10024, 2445, 51494, 51494, 365, 3104, 281, 264, 9834, 13, 51712, 51712, 407, 437, 307, 257, 16235, 30, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11778555976019965, "compression_ratio": 1.6945606694560669, "no_speech_prob": 2.144132486137096e-05}, {"id": 267, "seek": 73656, "start": 759.16, "end": 763.52, "text": " with respect to the parameters.", "tokens": [50364, 264, 261, 9834, 11, 370, 300, 264, 10024, 2445, 1709, 760, 50544, 50544, 538, 257, 707, 857, 13, 50590, 50590, 509, 652, 300, 1319, 11, 293, 550, 291, 352, 281, 264, 958, 6889, 13, 50716, 50716, 961, 311, 312, 257, 707, 544, 9860, 13, 50808, 50808, 407, 16235, 23475, 307, 341, 588, 3875, 9284, 510, 13, 51048, 51048, 509, 7406, 264, 2158, 295, 261, 538, 1080, 3894, 2158, 51178, 51178, 3175, 257, 1823, 2744, 11, 32415, 510, 11, 17207, 51392, 51392, 538, 264, 16235, 295, 264, 10024, 2445, 51494, 51494, 365, 3104, 281, 264, 9834, 13, 51712, 51712, 407, 437, 307, 257, 16235, 30, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11778555976019965, "compression_ratio": 1.6945606694560669, "no_speech_prob": 2.144132486137096e-05}, {"id": 268, "seek": 73656, "start": 763.52, "end": 765.1199999999999, "text": " So what is a gradient?", "tokens": [50364, 264, 261, 9834, 11, 370, 300, 264, 10024, 2445, 1709, 760, 50544, 50544, 538, 257, 707, 857, 13, 50590, 50590, 509, 652, 300, 1319, 11, 293, 550, 291, 352, 281, 264, 958, 6889, 13, 50716, 50716, 961, 311, 312, 257, 707, 544, 9860, 13, 50808, 50808, 407, 16235, 23475, 307, 341, 588, 3875, 9284, 510, 13, 51048, 51048, 509, 7406, 264, 2158, 295, 261, 538, 1080, 3894, 2158, 51178, 51178, 3175, 257, 1823, 2744, 11, 32415, 510, 11, 17207, 51392, 51392, 538, 264, 16235, 295, 264, 10024, 2445, 51494, 51494, 365, 3104, 281, 264, 9834, 13, 51712, 51712, 407, 437, 307, 257, 16235, 30, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11778555976019965, "compression_ratio": 1.6945606694560669, "no_speech_prob": 2.144132486137096e-05}, {"id": 269, "seek": 76512, "start": 765.12, "end": 767.6, "text": " A gradient is a vector of the same size", "tokens": [50364, 316, 16235, 307, 257, 8062, 295, 264, 912, 2744, 50488, 50488, 382, 264, 13075, 8062, 13, 50578, 50578, 400, 337, 1184, 6542, 295, 264, 13075, 8062, 11, 50694, 50694, 309, 5112, 291, 538, 577, 709, 264, 4470, 2445, 287, 50896, 50896, 576, 3488, 498, 291, 3488, 264, 13075, 51062, 51062, 538, 257, 5870, 2372, 13, 51152, 51152, 467, 311, 257, 13760, 11, 457, 309, 311, 257, 42242, 13760, 13, 51302, 51302, 407, 718, 311, 584, 11, 3654, 439, 264, 11095, 11, 51418, 51418, 291, 787, 574, 412, 261, 12249, 13, 51586, 51586, 400, 718, 311, 3811, 300, 291, 29879, 261, 12249, 538, 257, 5870, 2372, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.09163449894298206, "compression_ratio": 1.7692307692307692, "no_speech_prob": 1.5204695955617353e-05}, {"id": 270, "seek": 76512, "start": 767.6, "end": 769.4, "text": " as the parameter vector.", "tokens": [50364, 316, 16235, 307, 257, 8062, 295, 264, 912, 2744, 50488, 50488, 382, 264, 13075, 8062, 13, 50578, 50578, 400, 337, 1184, 6542, 295, 264, 13075, 8062, 11, 50694, 50694, 309, 5112, 291, 538, 577, 709, 264, 4470, 2445, 287, 50896, 50896, 576, 3488, 498, 291, 3488, 264, 13075, 51062, 51062, 538, 257, 5870, 2372, 13, 51152, 51152, 467, 311, 257, 13760, 11, 457, 309, 311, 257, 42242, 13760, 13, 51302, 51302, 407, 718, 311, 584, 11, 3654, 439, 264, 11095, 11, 51418, 51418, 291, 787, 574, 412, 261, 12249, 13, 51586, 51586, 400, 718, 311, 3811, 300, 291, 29879, 261, 12249, 538, 257, 5870, 2372, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.09163449894298206, "compression_ratio": 1.7692307692307692, "no_speech_prob": 1.5204695955617353e-05}, {"id": 271, "seek": 76512, "start": 769.4, "end": 771.72, "text": " And for each component of the parameter vector,", "tokens": [50364, 316, 16235, 307, 257, 8062, 295, 264, 912, 2744, 50488, 50488, 382, 264, 13075, 8062, 13, 50578, 50578, 400, 337, 1184, 6542, 295, 264, 13075, 8062, 11, 50694, 50694, 309, 5112, 291, 538, 577, 709, 264, 4470, 2445, 287, 50896, 50896, 576, 3488, 498, 291, 3488, 264, 13075, 51062, 51062, 538, 257, 5870, 2372, 13, 51152, 51152, 467, 311, 257, 13760, 11, 457, 309, 311, 257, 42242, 13760, 13, 51302, 51302, 407, 718, 311, 584, 11, 3654, 439, 264, 11095, 11, 51418, 51418, 291, 787, 574, 412, 261, 12249, 13, 51586, 51586, 400, 718, 311, 3811, 300, 291, 29879, 261, 12249, 538, 257, 5870, 2372, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.09163449894298206, "compression_ratio": 1.7692307692307692, "no_speech_prob": 1.5204695955617353e-05}, {"id": 272, "seek": 76512, "start": 771.72, "end": 775.76, "text": " it tells you by how much the loss function l", "tokens": [50364, 316, 16235, 307, 257, 8062, 295, 264, 912, 2744, 50488, 50488, 382, 264, 13075, 8062, 13, 50578, 50578, 400, 337, 1184, 6542, 295, 264, 13075, 8062, 11, 50694, 50694, 309, 5112, 291, 538, 577, 709, 264, 4470, 2445, 287, 50896, 50896, 576, 3488, 498, 291, 3488, 264, 13075, 51062, 51062, 538, 257, 5870, 2372, 13, 51152, 51152, 467, 311, 257, 13760, 11, 457, 309, 311, 257, 42242, 13760, 13, 51302, 51302, 407, 718, 311, 584, 11, 3654, 439, 264, 11095, 11, 51418, 51418, 291, 787, 574, 412, 261, 12249, 13, 51586, 51586, 400, 718, 311, 3811, 300, 291, 29879, 261, 12249, 538, 257, 5870, 2372, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.09163449894298206, "compression_ratio": 1.7692307692307692, "no_speech_prob": 1.5204695955617353e-05}, {"id": 273, "seek": 76512, "start": 775.76, "end": 779.08, "text": " would increase if you increase the parameter", "tokens": [50364, 316, 16235, 307, 257, 8062, 295, 264, 912, 2744, 50488, 50488, 382, 264, 13075, 8062, 13, 50578, 50578, 400, 337, 1184, 6542, 295, 264, 13075, 8062, 11, 50694, 50694, 309, 5112, 291, 538, 577, 709, 264, 4470, 2445, 287, 50896, 50896, 576, 3488, 498, 291, 3488, 264, 13075, 51062, 51062, 538, 257, 5870, 2372, 13, 51152, 51152, 467, 311, 257, 13760, 11, 457, 309, 311, 257, 42242, 13760, 13, 51302, 51302, 407, 718, 311, 584, 11, 3654, 439, 264, 11095, 11, 51418, 51418, 291, 787, 574, 412, 261, 12249, 13, 51586, 51586, 400, 718, 311, 3811, 300, 291, 29879, 261, 12249, 538, 257, 5870, 2372, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.09163449894298206, "compression_ratio": 1.7692307692307692, "no_speech_prob": 1.5204695955617353e-05}, {"id": 274, "seek": 76512, "start": 779.08, "end": 780.88, "text": " by a tiny amount.", "tokens": [50364, 316, 16235, 307, 257, 8062, 295, 264, 912, 2744, 50488, 50488, 382, 264, 13075, 8062, 13, 50578, 50578, 400, 337, 1184, 6542, 295, 264, 13075, 8062, 11, 50694, 50694, 309, 5112, 291, 538, 577, 709, 264, 4470, 2445, 287, 50896, 50896, 576, 3488, 498, 291, 3488, 264, 13075, 51062, 51062, 538, 257, 5870, 2372, 13, 51152, 51152, 467, 311, 257, 13760, 11, 457, 309, 311, 257, 42242, 13760, 13, 51302, 51302, 407, 718, 311, 584, 11, 3654, 439, 264, 11095, 11, 51418, 51418, 291, 787, 574, 412, 261, 12249, 13, 51586, 51586, 400, 718, 311, 3811, 300, 291, 29879, 261, 12249, 538, 257, 5870, 2372, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.09163449894298206, "compression_ratio": 1.7692307692307692, "no_speech_prob": 1.5204695955617353e-05}, {"id": 275, "seek": 76512, "start": 780.88, "end": 783.88, "text": " It's a derivative, but it's a directional derivative.", "tokens": [50364, 316, 16235, 307, 257, 8062, 295, 264, 912, 2744, 50488, 50488, 382, 264, 13075, 8062, 13, 50578, 50578, 400, 337, 1184, 6542, 295, 264, 13075, 8062, 11, 50694, 50694, 309, 5112, 291, 538, 577, 709, 264, 4470, 2445, 287, 50896, 50896, 576, 3488, 498, 291, 3488, 264, 13075, 51062, 51062, 538, 257, 5870, 2372, 13, 51152, 51152, 467, 311, 257, 13760, 11, 457, 309, 311, 257, 42242, 13760, 13, 51302, 51302, 407, 718, 311, 584, 11, 3654, 439, 264, 11095, 11, 51418, 51418, 291, 787, 574, 412, 261, 12249, 13, 51586, 51586, 400, 718, 311, 3811, 300, 291, 29879, 261, 12249, 538, 257, 5870, 2372, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.09163449894298206, "compression_ratio": 1.7692307692307692, "no_speech_prob": 1.5204695955617353e-05}, {"id": 276, "seek": 76512, "start": 783.88, "end": 786.2, "text": " So let's say, among all the directions,", "tokens": [50364, 316, 16235, 307, 257, 8062, 295, 264, 912, 2744, 50488, 50488, 382, 264, 13075, 8062, 13, 50578, 50578, 400, 337, 1184, 6542, 295, 264, 13075, 8062, 11, 50694, 50694, 309, 5112, 291, 538, 577, 709, 264, 4470, 2445, 287, 50896, 50896, 576, 3488, 498, 291, 3488, 264, 13075, 51062, 51062, 538, 257, 5870, 2372, 13, 51152, 51152, 467, 311, 257, 13760, 11, 457, 309, 311, 257, 42242, 13760, 13, 51302, 51302, 407, 718, 311, 584, 11, 3654, 439, 264, 11095, 11, 51418, 51418, 291, 787, 574, 412, 261, 12249, 13, 51586, 51586, 400, 718, 311, 3811, 300, 291, 29879, 261, 12249, 538, 257, 5870, 2372, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.09163449894298206, "compression_ratio": 1.7692307692307692, "no_speech_prob": 1.5204695955617353e-05}, {"id": 277, "seek": 76512, "start": 786.2, "end": 789.5600000000001, "text": " you only look at w34.", "tokens": [50364, 316, 16235, 307, 257, 8062, 295, 264, 912, 2744, 50488, 50488, 382, 264, 13075, 8062, 13, 50578, 50578, 400, 337, 1184, 6542, 295, 264, 13075, 8062, 11, 50694, 50694, 309, 5112, 291, 538, 577, 709, 264, 4470, 2445, 287, 50896, 50896, 576, 3488, 498, 291, 3488, 264, 13075, 51062, 51062, 538, 257, 5870, 2372, 13, 51152, 51152, 467, 311, 257, 13760, 11, 457, 309, 311, 257, 42242, 13760, 13, 51302, 51302, 407, 718, 311, 584, 11, 3654, 439, 264, 11095, 11, 51418, 51418, 291, 787, 574, 412, 261, 12249, 13, 51586, 51586, 400, 718, 311, 3811, 300, 291, 29879, 261, 12249, 538, 257, 5870, 2372, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.09163449894298206, "compression_ratio": 1.7692307692307692, "no_speech_prob": 1.5204695955617353e-05}, {"id": 278, "seek": 76512, "start": 789.5600000000001, "end": 794.16, "text": " And let's imagine that you tweak w34 by a tiny amount.", "tokens": [50364, 316, 16235, 307, 257, 8062, 295, 264, 912, 2744, 50488, 50488, 382, 264, 13075, 8062, 13, 50578, 50578, 400, 337, 1184, 6542, 295, 264, 13075, 8062, 11, 50694, 50694, 309, 5112, 291, 538, 577, 709, 264, 4470, 2445, 287, 50896, 50896, 576, 3488, 498, 291, 3488, 264, 13075, 51062, 51062, 538, 257, 5870, 2372, 13, 51152, 51152, 467, 311, 257, 13760, 11, 457, 309, 311, 257, 42242, 13760, 13, 51302, 51302, 407, 718, 311, 584, 11, 3654, 439, 264, 11095, 11, 51418, 51418, 291, 787, 574, 412, 261, 12249, 13, 51586, 51586, 400, 718, 311, 3811, 300, 291, 29879, 261, 12249, 538, 257, 5870, 2372, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.09163449894298206, "compression_ratio": 1.7692307692307692, "no_speech_prob": 1.5204695955617353e-05}, {"id": 279, "seek": 79416, "start": 794.16, "end": 797.0799999999999, "text": " The loss function curly l is going", "tokens": [50364, 440, 4470, 2445, 32066, 287, 307, 516, 50510, 50510, 281, 3488, 538, 257, 5870, 2372, 13, 50598, 50598, 509, 9845, 264, 5870, 2372, 538, 597, 50672, 50672, 287, 6505, 538, 264, 5870, 2372, 300, 291, 15873, 341, 261, 12249, 13, 50912, 50912, 400, 437, 291, 483, 307, 264, 16235, 295, 264, 4470, 51138, 51138, 365, 3104, 281, 261, 12249, 13, 51212, 51212, 759, 291, 360, 341, 337, 633, 2167, 3364, 11, 51302, 51302, 291, 483, 264, 16235, 295, 264, 4470, 2445, 51394, 51394, 365, 3104, 281, 439, 264, 17443, 13, 51464, 51464, 400, 309, 311, 257, 8062, 597, 11, 337, 1184, 6542, 295, 264, 3364, 11, 51596, 51596, 2709, 291, 11, 420, 264, 13075, 11, 2709, 291, 300, 11275, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11165928071545016, "compression_ratio": 1.895397489539749, "no_speech_prob": 8.938965038396418e-06}, {"id": 280, "seek": 79416, "start": 797.0799999999999, "end": 798.8399999999999, "text": " to increase by a tiny amount.", "tokens": [50364, 440, 4470, 2445, 32066, 287, 307, 516, 50510, 50510, 281, 3488, 538, 257, 5870, 2372, 13, 50598, 50598, 509, 9845, 264, 5870, 2372, 538, 597, 50672, 50672, 287, 6505, 538, 264, 5870, 2372, 300, 291, 15873, 341, 261, 12249, 13, 50912, 50912, 400, 437, 291, 483, 307, 264, 16235, 295, 264, 4470, 51138, 51138, 365, 3104, 281, 261, 12249, 13, 51212, 51212, 759, 291, 360, 341, 337, 633, 2167, 3364, 11, 51302, 51302, 291, 483, 264, 16235, 295, 264, 4470, 2445, 51394, 51394, 365, 3104, 281, 439, 264, 17443, 13, 51464, 51464, 400, 309, 311, 257, 8062, 597, 11, 337, 1184, 6542, 295, 264, 3364, 11, 51596, 51596, 2709, 291, 11, 420, 264, 13075, 11, 2709, 291, 300, 11275, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11165928071545016, "compression_ratio": 1.895397489539749, "no_speech_prob": 8.938965038396418e-06}, {"id": 281, "seek": 79416, "start": 798.8399999999999, "end": 800.3199999999999, "text": " You divide the tiny amount by which", "tokens": [50364, 440, 4470, 2445, 32066, 287, 307, 516, 50510, 50510, 281, 3488, 538, 257, 5870, 2372, 13, 50598, 50598, 509, 9845, 264, 5870, 2372, 538, 597, 50672, 50672, 287, 6505, 538, 264, 5870, 2372, 300, 291, 15873, 341, 261, 12249, 13, 50912, 50912, 400, 437, 291, 483, 307, 264, 16235, 295, 264, 4470, 51138, 51138, 365, 3104, 281, 261, 12249, 13, 51212, 51212, 759, 291, 360, 341, 337, 633, 2167, 3364, 11, 51302, 51302, 291, 483, 264, 16235, 295, 264, 4470, 2445, 51394, 51394, 365, 3104, 281, 439, 264, 17443, 13, 51464, 51464, 400, 309, 311, 257, 8062, 597, 11, 337, 1184, 6542, 295, 264, 3364, 11, 51596, 51596, 2709, 291, 11, 420, 264, 13075, 11, 2709, 291, 300, 11275, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11165928071545016, "compression_ratio": 1.895397489539749, "no_speech_prob": 8.938965038396418e-06}, {"id": 282, "seek": 79416, "start": 800.3199999999999, "end": 805.12, "text": " l increased by the tiny amount that you modified this w34.", "tokens": [50364, 440, 4470, 2445, 32066, 287, 307, 516, 50510, 50510, 281, 3488, 538, 257, 5870, 2372, 13, 50598, 50598, 509, 9845, 264, 5870, 2372, 538, 597, 50672, 50672, 287, 6505, 538, 264, 5870, 2372, 300, 291, 15873, 341, 261, 12249, 13, 50912, 50912, 400, 437, 291, 483, 307, 264, 16235, 295, 264, 4470, 51138, 51138, 365, 3104, 281, 261, 12249, 13, 51212, 51212, 759, 291, 360, 341, 337, 633, 2167, 3364, 11, 51302, 51302, 291, 483, 264, 16235, 295, 264, 4470, 2445, 51394, 51394, 365, 3104, 281, 439, 264, 17443, 13, 51464, 51464, 400, 309, 311, 257, 8062, 597, 11, 337, 1184, 6542, 295, 264, 3364, 11, 51596, 51596, 2709, 291, 11, 420, 264, 13075, 11, 2709, 291, 300, 11275, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11165928071545016, "compression_ratio": 1.895397489539749, "no_speech_prob": 8.938965038396418e-06}, {"id": 283, "seek": 79416, "start": 805.12, "end": 809.64, "text": " And what you get is the gradient of the loss", "tokens": [50364, 440, 4470, 2445, 32066, 287, 307, 516, 50510, 50510, 281, 3488, 538, 257, 5870, 2372, 13, 50598, 50598, 509, 9845, 264, 5870, 2372, 538, 597, 50672, 50672, 287, 6505, 538, 264, 5870, 2372, 300, 291, 15873, 341, 261, 12249, 13, 50912, 50912, 400, 437, 291, 483, 307, 264, 16235, 295, 264, 4470, 51138, 51138, 365, 3104, 281, 261, 12249, 13, 51212, 51212, 759, 291, 360, 341, 337, 633, 2167, 3364, 11, 51302, 51302, 291, 483, 264, 16235, 295, 264, 4470, 2445, 51394, 51394, 365, 3104, 281, 439, 264, 17443, 13, 51464, 51464, 400, 309, 311, 257, 8062, 597, 11, 337, 1184, 6542, 295, 264, 3364, 11, 51596, 51596, 2709, 291, 11, 420, 264, 13075, 11, 2709, 291, 300, 11275, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11165928071545016, "compression_ratio": 1.895397489539749, "no_speech_prob": 8.938965038396418e-06}, {"id": 284, "seek": 79416, "start": 809.64, "end": 811.12, "text": " with respect to w34.", "tokens": [50364, 440, 4470, 2445, 32066, 287, 307, 516, 50510, 50510, 281, 3488, 538, 257, 5870, 2372, 13, 50598, 50598, 509, 9845, 264, 5870, 2372, 538, 597, 50672, 50672, 287, 6505, 538, 264, 5870, 2372, 300, 291, 15873, 341, 261, 12249, 13, 50912, 50912, 400, 437, 291, 483, 307, 264, 16235, 295, 264, 4470, 51138, 51138, 365, 3104, 281, 261, 12249, 13, 51212, 51212, 759, 291, 360, 341, 337, 633, 2167, 3364, 11, 51302, 51302, 291, 483, 264, 16235, 295, 264, 4470, 2445, 51394, 51394, 365, 3104, 281, 439, 264, 17443, 13, 51464, 51464, 400, 309, 311, 257, 8062, 597, 11, 337, 1184, 6542, 295, 264, 3364, 11, 51596, 51596, 2709, 291, 11, 420, 264, 13075, 11, 2709, 291, 300, 11275, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11165928071545016, "compression_ratio": 1.895397489539749, "no_speech_prob": 8.938965038396418e-06}, {"id": 285, "seek": 79416, "start": 811.12, "end": 812.92, "text": " If you do this for every single weight,", "tokens": [50364, 440, 4470, 2445, 32066, 287, 307, 516, 50510, 50510, 281, 3488, 538, 257, 5870, 2372, 13, 50598, 50598, 509, 9845, 264, 5870, 2372, 538, 597, 50672, 50672, 287, 6505, 538, 264, 5870, 2372, 300, 291, 15873, 341, 261, 12249, 13, 50912, 50912, 400, 437, 291, 483, 307, 264, 16235, 295, 264, 4470, 51138, 51138, 365, 3104, 281, 261, 12249, 13, 51212, 51212, 759, 291, 360, 341, 337, 633, 2167, 3364, 11, 51302, 51302, 291, 483, 264, 16235, 295, 264, 4470, 2445, 51394, 51394, 365, 3104, 281, 439, 264, 17443, 13, 51464, 51464, 400, 309, 311, 257, 8062, 597, 11, 337, 1184, 6542, 295, 264, 3364, 11, 51596, 51596, 2709, 291, 11, 420, 264, 13075, 11, 2709, 291, 300, 11275, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11165928071545016, "compression_ratio": 1.895397489539749, "no_speech_prob": 8.938965038396418e-06}, {"id": 286, "seek": 79416, "start": 812.92, "end": 814.76, "text": " you get the gradient of the loss function", "tokens": [50364, 440, 4470, 2445, 32066, 287, 307, 516, 50510, 50510, 281, 3488, 538, 257, 5870, 2372, 13, 50598, 50598, 509, 9845, 264, 5870, 2372, 538, 597, 50672, 50672, 287, 6505, 538, 264, 5870, 2372, 300, 291, 15873, 341, 261, 12249, 13, 50912, 50912, 400, 437, 291, 483, 307, 264, 16235, 295, 264, 4470, 51138, 51138, 365, 3104, 281, 261, 12249, 13, 51212, 51212, 759, 291, 360, 341, 337, 633, 2167, 3364, 11, 51302, 51302, 291, 483, 264, 16235, 295, 264, 4470, 2445, 51394, 51394, 365, 3104, 281, 439, 264, 17443, 13, 51464, 51464, 400, 309, 311, 257, 8062, 597, 11, 337, 1184, 6542, 295, 264, 3364, 11, 51596, 51596, 2709, 291, 11, 420, 264, 13075, 11, 2709, 291, 300, 11275, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11165928071545016, "compression_ratio": 1.895397489539749, "no_speech_prob": 8.938965038396418e-06}, {"id": 287, "seek": 79416, "start": 814.76, "end": 816.16, "text": " with respect to all the weights.", "tokens": [50364, 440, 4470, 2445, 32066, 287, 307, 516, 50510, 50510, 281, 3488, 538, 257, 5870, 2372, 13, 50598, 50598, 509, 9845, 264, 5870, 2372, 538, 597, 50672, 50672, 287, 6505, 538, 264, 5870, 2372, 300, 291, 15873, 341, 261, 12249, 13, 50912, 50912, 400, 437, 291, 483, 307, 264, 16235, 295, 264, 4470, 51138, 51138, 365, 3104, 281, 261, 12249, 13, 51212, 51212, 759, 291, 360, 341, 337, 633, 2167, 3364, 11, 51302, 51302, 291, 483, 264, 16235, 295, 264, 4470, 2445, 51394, 51394, 365, 3104, 281, 439, 264, 17443, 13, 51464, 51464, 400, 309, 311, 257, 8062, 597, 11, 337, 1184, 6542, 295, 264, 3364, 11, 51596, 51596, 2709, 291, 11, 420, 264, 13075, 11, 2709, 291, 300, 11275, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11165928071545016, "compression_ratio": 1.895397489539749, "no_speech_prob": 8.938965038396418e-06}, {"id": 288, "seek": 79416, "start": 816.16, "end": 818.8, "text": " And it's a vector which, for each component of the weight,", "tokens": [50364, 440, 4470, 2445, 32066, 287, 307, 516, 50510, 50510, 281, 3488, 538, 257, 5870, 2372, 13, 50598, 50598, 509, 9845, 264, 5870, 2372, 538, 597, 50672, 50672, 287, 6505, 538, 264, 5870, 2372, 300, 291, 15873, 341, 261, 12249, 13, 50912, 50912, 400, 437, 291, 483, 307, 264, 16235, 295, 264, 4470, 51138, 51138, 365, 3104, 281, 261, 12249, 13, 51212, 51212, 759, 291, 360, 341, 337, 633, 2167, 3364, 11, 51302, 51302, 291, 483, 264, 16235, 295, 264, 4470, 2445, 51394, 51394, 365, 3104, 281, 439, 264, 17443, 13, 51464, 51464, 400, 309, 311, 257, 8062, 597, 11, 337, 1184, 6542, 295, 264, 3364, 11, 51596, 51596, 2709, 291, 11, 420, 264, 13075, 11, 2709, 291, 300, 11275, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11165928071545016, "compression_ratio": 1.895397489539749, "no_speech_prob": 8.938965038396418e-06}, {"id": 289, "seek": 79416, "start": 818.8, "end": 823.04, "text": " gives you, or the parameter, gives you that quantity.", "tokens": [50364, 440, 4470, 2445, 32066, 287, 307, 516, 50510, 50510, 281, 3488, 538, 257, 5870, 2372, 13, 50598, 50598, 509, 9845, 264, 5870, 2372, 538, 597, 50672, 50672, 287, 6505, 538, 264, 5870, 2372, 300, 291, 15873, 341, 261, 12249, 13, 50912, 50912, 400, 437, 291, 483, 307, 264, 16235, 295, 264, 4470, 51138, 51138, 365, 3104, 281, 261, 12249, 13, 51212, 51212, 759, 291, 360, 341, 337, 633, 2167, 3364, 11, 51302, 51302, 291, 483, 264, 16235, 295, 264, 4470, 2445, 51394, 51394, 365, 3104, 281, 439, 264, 17443, 13, 51464, 51464, 400, 309, 311, 257, 8062, 597, 11, 337, 1184, 6542, 295, 264, 3364, 11, 51596, 51596, 2709, 291, 11, 420, 264, 13075, 11, 2709, 291, 300, 11275, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11165928071545016, "compression_ratio": 1.895397489539749, "no_speech_prob": 8.938965038396418e-06}, {"id": 290, "seek": 82304, "start": 823.04, "end": 829.8399999999999, "text": " So since Newton and Euler, it's been written as dl over dw,", "tokens": [50364, 407, 1670, 19541, 293, 462, 26318, 11, 309, 311, 668, 3720, 382, 37873, 670, 27379, 11, 50704, 50704, 570, 309, 16203, 264, 1186, 300, 456, 50792, 50792, 307, 341, 707, 683, 327, 2285, 13, 50842, 50842, 509, 393, 683, 327, 2285, 261, 538, 707, 13, 50922, 50922, 400, 456, 307, 257, 16505, 683, 14273, 1688, 295, 287, 13, 51122, 51122, 400, 498, 291, 9845, 729, 732, 683, 14273, 904, 11, 51200, 51200, 550, 436, 366, 36227, 1359, 13, 51268, 51268, 509, 483, 264, 13760, 13, 51336, 51336, 663, 311, 733, 295, 3832, 24657, 294, 18666, 51438, 51438, 337, 257, 1326, 3262, 924, 13, 51506, 51506, 2264, 11, 370, 586, 264, 16235, 307, 516, 281, 312, 257, 8062, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15756664901483255, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.97266124613816e-06}, {"id": 291, "seek": 82304, "start": 829.8399999999999, "end": 831.5999999999999, "text": " because it indicates the fact that there", "tokens": [50364, 407, 1670, 19541, 293, 462, 26318, 11, 309, 311, 668, 3720, 382, 37873, 670, 27379, 11, 50704, 50704, 570, 309, 16203, 264, 1186, 300, 456, 50792, 50792, 307, 341, 707, 683, 327, 2285, 13, 50842, 50842, 509, 393, 683, 327, 2285, 261, 538, 707, 13, 50922, 50922, 400, 456, 307, 257, 16505, 683, 14273, 1688, 295, 287, 13, 51122, 51122, 400, 498, 291, 9845, 729, 732, 683, 14273, 904, 11, 51200, 51200, 550, 436, 366, 36227, 1359, 13, 51268, 51268, 509, 483, 264, 13760, 13, 51336, 51336, 663, 311, 733, 295, 3832, 24657, 294, 18666, 51438, 51438, 337, 257, 1326, 3262, 924, 13, 51506, 51506, 2264, 11, 370, 586, 264, 16235, 307, 516, 281, 312, 257, 8062, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15756664901483255, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.97266124613816e-06}, {"id": 292, "seek": 82304, "start": 831.5999999999999, "end": 832.5999999999999, "text": " is this little twiddle.", "tokens": [50364, 407, 1670, 19541, 293, 462, 26318, 11, 309, 311, 668, 3720, 382, 37873, 670, 27379, 11, 50704, 50704, 570, 309, 16203, 264, 1186, 300, 456, 50792, 50792, 307, 341, 707, 683, 327, 2285, 13, 50842, 50842, 509, 393, 683, 327, 2285, 261, 538, 707, 13, 50922, 50922, 400, 456, 307, 257, 16505, 683, 14273, 1688, 295, 287, 13, 51122, 51122, 400, 498, 291, 9845, 729, 732, 683, 14273, 904, 11, 51200, 51200, 550, 436, 366, 36227, 1359, 13, 51268, 51268, 509, 483, 264, 13760, 13, 51336, 51336, 663, 311, 733, 295, 3832, 24657, 294, 18666, 51438, 51438, 337, 257, 1326, 3262, 924, 13, 51506, 51506, 2264, 11, 370, 586, 264, 16235, 307, 516, 281, 312, 257, 8062, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15756664901483255, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.97266124613816e-06}, {"id": 293, "seek": 82304, "start": 832.5999999999999, "end": 834.1999999999999, "text": " You can twiddle w by little.", "tokens": [50364, 407, 1670, 19541, 293, 462, 26318, 11, 309, 311, 668, 3720, 382, 37873, 670, 27379, 11, 50704, 50704, 570, 309, 16203, 264, 1186, 300, 456, 50792, 50792, 307, 341, 707, 683, 327, 2285, 13, 50842, 50842, 509, 393, 683, 327, 2285, 261, 538, 707, 13, 50922, 50922, 400, 456, 307, 257, 16505, 683, 14273, 1688, 295, 287, 13, 51122, 51122, 400, 498, 291, 9845, 729, 732, 683, 14273, 904, 11, 51200, 51200, 550, 436, 366, 36227, 1359, 13, 51268, 51268, 509, 483, 264, 13760, 13, 51336, 51336, 663, 311, 733, 295, 3832, 24657, 294, 18666, 51438, 51438, 337, 257, 1326, 3262, 924, 13, 51506, 51506, 2264, 11, 370, 586, 264, 16235, 307, 516, 281, 312, 257, 8062, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15756664901483255, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.97266124613816e-06}, {"id": 294, "seek": 82304, "start": 834.1999999999999, "end": 838.1999999999999, "text": " And there is a resulting twiddling of l.", "tokens": [50364, 407, 1670, 19541, 293, 462, 26318, 11, 309, 311, 668, 3720, 382, 37873, 670, 27379, 11, 50704, 50704, 570, 309, 16203, 264, 1186, 300, 456, 50792, 50792, 307, 341, 707, 683, 327, 2285, 13, 50842, 50842, 509, 393, 683, 327, 2285, 261, 538, 707, 13, 50922, 50922, 400, 456, 307, 257, 16505, 683, 14273, 1688, 295, 287, 13, 51122, 51122, 400, 498, 291, 9845, 729, 732, 683, 14273, 904, 11, 51200, 51200, 550, 436, 366, 36227, 1359, 13, 51268, 51268, 509, 483, 264, 13760, 13, 51336, 51336, 663, 311, 733, 295, 3832, 24657, 294, 18666, 51438, 51438, 337, 257, 1326, 3262, 924, 13, 51506, 51506, 2264, 11, 370, 586, 264, 16235, 307, 516, 281, 312, 257, 8062, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15756664901483255, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.97266124613816e-06}, {"id": 295, "seek": 82304, "start": 838.1999999999999, "end": 839.76, "text": " And if you divide those two twiddles,", "tokens": [50364, 407, 1670, 19541, 293, 462, 26318, 11, 309, 311, 668, 3720, 382, 37873, 670, 27379, 11, 50704, 50704, 570, 309, 16203, 264, 1186, 300, 456, 50792, 50792, 307, 341, 707, 683, 327, 2285, 13, 50842, 50842, 509, 393, 683, 327, 2285, 261, 538, 707, 13, 50922, 50922, 400, 456, 307, 257, 16505, 683, 14273, 1688, 295, 287, 13, 51122, 51122, 400, 498, 291, 9845, 729, 732, 683, 14273, 904, 11, 51200, 51200, 550, 436, 366, 36227, 1359, 13, 51268, 51268, 509, 483, 264, 13760, 13, 51336, 51336, 663, 311, 733, 295, 3832, 24657, 294, 18666, 51438, 51438, 337, 257, 1326, 3262, 924, 13, 51506, 51506, 2264, 11, 370, 586, 264, 16235, 307, 516, 281, 312, 257, 8062, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15756664901483255, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.97266124613816e-06}, {"id": 296, "seek": 82304, "start": 839.76, "end": 841.12, "text": " then they are infinitely small.", "tokens": [50364, 407, 1670, 19541, 293, 462, 26318, 11, 309, 311, 668, 3720, 382, 37873, 670, 27379, 11, 50704, 50704, 570, 309, 16203, 264, 1186, 300, 456, 50792, 50792, 307, 341, 707, 683, 327, 2285, 13, 50842, 50842, 509, 393, 683, 327, 2285, 261, 538, 707, 13, 50922, 50922, 400, 456, 307, 257, 16505, 683, 14273, 1688, 295, 287, 13, 51122, 51122, 400, 498, 291, 9845, 729, 732, 683, 14273, 904, 11, 51200, 51200, 550, 436, 366, 36227, 1359, 13, 51268, 51268, 509, 483, 264, 13760, 13, 51336, 51336, 663, 311, 733, 295, 3832, 24657, 294, 18666, 51438, 51438, 337, 257, 1326, 3262, 924, 13, 51506, 51506, 2264, 11, 370, 586, 264, 16235, 307, 516, 281, 312, 257, 8062, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15756664901483255, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.97266124613816e-06}, {"id": 297, "seek": 82304, "start": 841.12, "end": 842.48, "text": " You get the derivative.", "tokens": [50364, 407, 1670, 19541, 293, 462, 26318, 11, 309, 311, 668, 3720, 382, 37873, 670, 27379, 11, 50704, 50704, 570, 309, 16203, 264, 1186, 300, 456, 50792, 50792, 307, 341, 707, 683, 327, 2285, 13, 50842, 50842, 509, 393, 683, 327, 2285, 261, 538, 707, 13, 50922, 50922, 400, 456, 307, 257, 16505, 683, 14273, 1688, 295, 287, 13, 51122, 51122, 400, 498, 291, 9845, 729, 732, 683, 14273, 904, 11, 51200, 51200, 550, 436, 366, 36227, 1359, 13, 51268, 51268, 509, 483, 264, 13760, 13, 51336, 51336, 663, 311, 733, 295, 3832, 24657, 294, 18666, 51438, 51438, 337, 257, 1326, 3262, 924, 13, 51506, 51506, 2264, 11, 370, 586, 264, 16235, 307, 516, 281, 312, 257, 8062, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15756664901483255, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.97266124613816e-06}, {"id": 298, "seek": 82304, "start": 842.48, "end": 844.52, "text": " That's kind of standard notation in mathematics", "tokens": [50364, 407, 1670, 19541, 293, 462, 26318, 11, 309, 311, 668, 3720, 382, 37873, 670, 27379, 11, 50704, 50704, 570, 309, 16203, 264, 1186, 300, 456, 50792, 50792, 307, 341, 707, 683, 327, 2285, 13, 50842, 50842, 509, 393, 683, 327, 2285, 261, 538, 707, 13, 50922, 50922, 400, 456, 307, 257, 16505, 683, 14273, 1688, 295, 287, 13, 51122, 51122, 400, 498, 291, 9845, 729, 732, 683, 14273, 904, 11, 51200, 51200, 550, 436, 366, 36227, 1359, 13, 51268, 51268, 509, 483, 264, 13760, 13, 51336, 51336, 663, 311, 733, 295, 3832, 24657, 294, 18666, 51438, 51438, 337, 257, 1326, 3262, 924, 13, 51506, 51506, 2264, 11, 370, 586, 264, 16235, 307, 516, 281, 312, 257, 8062, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15756664901483255, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.97266124613816e-06}, {"id": 299, "seek": 82304, "start": 844.52, "end": 845.88, "text": " for a few hundred years.", "tokens": [50364, 407, 1670, 19541, 293, 462, 26318, 11, 309, 311, 668, 3720, 382, 37873, 670, 27379, 11, 50704, 50704, 570, 309, 16203, 264, 1186, 300, 456, 50792, 50792, 307, 341, 707, 683, 327, 2285, 13, 50842, 50842, 509, 393, 683, 327, 2285, 261, 538, 707, 13, 50922, 50922, 400, 456, 307, 257, 16505, 683, 14273, 1688, 295, 287, 13, 51122, 51122, 400, 498, 291, 9845, 729, 732, 683, 14273, 904, 11, 51200, 51200, 550, 436, 366, 36227, 1359, 13, 51268, 51268, 509, 483, 264, 13760, 13, 51336, 51336, 663, 311, 733, 295, 3832, 24657, 294, 18666, 51438, 51438, 337, 257, 1326, 3262, 924, 13, 51506, 51506, 2264, 11, 370, 586, 264, 16235, 307, 516, 281, 312, 257, 8062, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15756664901483255, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.97266124613816e-06}, {"id": 300, "seek": 82304, "start": 845.88, "end": 852.7199999999999, "text": " OK, so now the gradient is going to be a vector.", "tokens": [50364, 407, 1670, 19541, 293, 462, 26318, 11, 309, 311, 668, 3720, 382, 37873, 670, 27379, 11, 50704, 50704, 570, 309, 16203, 264, 1186, 300, 456, 50792, 50792, 307, 341, 707, 683, 327, 2285, 13, 50842, 50842, 509, 393, 683, 327, 2285, 261, 538, 707, 13, 50922, 50922, 400, 456, 307, 257, 16505, 683, 14273, 1688, 295, 287, 13, 51122, 51122, 400, 498, 291, 9845, 729, 732, 683, 14273, 904, 11, 51200, 51200, 550, 436, 366, 36227, 1359, 13, 51268, 51268, 509, 483, 264, 13760, 13, 51336, 51336, 663, 311, 733, 295, 3832, 24657, 294, 18666, 51438, 51438, 337, 257, 1326, 3262, 924, 13, 51506, 51506, 2264, 11, 370, 586, 264, 16235, 307, 516, 281, 312, 257, 8062, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15756664901483255, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.97266124613816e-06}, {"id": 301, "seek": 85272, "start": 852.72, "end": 855.48, "text": " And as indicated here on the top right,", "tokens": [50364, 400, 382, 16176, 510, 322, 264, 1192, 558, 11, 50502, 50502, 300, 8062, 307, 364, 11610, 300, 2793, 22167, 50834, 50834, 2051, 264, 1622, 295, 4833, 13525, 13, 51016, 51016, 407, 498, 291, 366, 294, 257, 568, 35, 3753, 11, 291, 362, 732, 261, 9834, 13, 51246, 51246, 400, 264, 3753, 307, 10379, 510, 11, 51380, 51380, 512, 1333, 295, 37262, 2594, 510, 294, 341, 1389, 13, 51536, 51536, 407, 309, 311, 257, 1150, 4314, 26110, 294, 261, 16, 293, 261, 15, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10729757944742839, "compression_ratio": 1.5, "no_speech_prob": 6.143860900920117e-06}, {"id": 302, "seek": 85272, "start": 855.48, "end": 862.12, "text": " that vector is an arrow that points upwards", "tokens": [50364, 400, 382, 16176, 510, 322, 264, 1192, 558, 11, 50502, 50502, 300, 8062, 307, 364, 11610, 300, 2793, 22167, 50834, 50834, 2051, 264, 1622, 295, 4833, 13525, 13, 51016, 51016, 407, 498, 291, 366, 294, 257, 568, 35, 3753, 11, 291, 362, 732, 261, 9834, 13, 51246, 51246, 400, 264, 3753, 307, 10379, 510, 11, 51380, 51380, 512, 1333, 295, 37262, 2594, 510, 294, 341, 1389, 13, 51536, 51536, 407, 309, 311, 257, 1150, 4314, 26110, 294, 261, 16, 293, 261, 15, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10729757944742839, "compression_ratio": 1.5, "no_speech_prob": 6.143860900920117e-06}, {"id": 303, "seek": 85272, "start": 862.12, "end": 865.76, "text": " along the line of larger slope.", "tokens": [50364, 400, 382, 16176, 510, 322, 264, 1192, 558, 11, 50502, 50502, 300, 8062, 307, 364, 11610, 300, 2793, 22167, 50834, 50834, 2051, 264, 1622, 295, 4833, 13525, 13, 51016, 51016, 407, 498, 291, 366, 294, 257, 568, 35, 3753, 11, 291, 362, 732, 261, 9834, 13, 51246, 51246, 400, 264, 3753, 307, 10379, 510, 11, 51380, 51380, 512, 1333, 295, 37262, 2594, 510, 294, 341, 1389, 13, 51536, 51536, 407, 309, 311, 257, 1150, 4314, 26110, 294, 261, 16, 293, 261, 15, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10729757944742839, "compression_ratio": 1.5, "no_speech_prob": 6.143860900920117e-06}, {"id": 304, "seek": 85272, "start": 865.76, "end": 870.36, "text": " So if you are in a 2D surface, you have two w parameters.", "tokens": [50364, 400, 382, 16176, 510, 322, 264, 1192, 558, 11, 50502, 50502, 300, 8062, 307, 364, 11610, 300, 2793, 22167, 50834, 50834, 2051, 264, 1622, 295, 4833, 13525, 13, 51016, 51016, 407, 498, 291, 366, 294, 257, 568, 35, 3753, 11, 291, 362, 732, 261, 9834, 13, 51246, 51246, 400, 264, 3753, 307, 10379, 510, 11, 51380, 51380, 512, 1333, 295, 37262, 2594, 510, 294, 341, 1389, 13, 51536, 51536, 407, 309, 311, 257, 1150, 4314, 26110, 294, 261, 16, 293, 261, 15, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10729757944742839, "compression_ratio": 1.5, "no_speech_prob": 6.143860900920117e-06}, {"id": 305, "seek": 85272, "start": 870.36, "end": 873.0400000000001, "text": " And the surface is represented here,", "tokens": [50364, 400, 382, 16176, 510, 322, 264, 1192, 558, 11, 50502, 50502, 300, 8062, 307, 364, 11610, 300, 2793, 22167, 50834, 50834, 2051, 264, 1622, 295, 4833, 13525, 13, 51016, 51016, 407, 498, 291, 366, 294, 257, 568, 35, 3753, 11, 291, 362, 732, 261, 9834, 13, 51246, 51246, 400, 264, 3753, 307, 10379, 510, 11, 51380, 51380, 512, 1333, 295, 37262, 2594, 510, 294, 341, 1389, 13, 51536, 51536, 407, 309, 311, 257, 1150, 4314, 26110, 294, 261, 16, 293, 261, 15, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10729757944742839, "compression_ratio": 1.5, "no_speech_prob": 6.143860900920117e-06}, {"id": 306, "seek": 85272, "start": 873.0400000000001, "end": 876.1600000000001, "text": " some sort of quadratic ball here in this case.", "tokens": [50364, 400, 382, 16176, 510, 322, 264, 1192, 558, 11, 50502, 50502, 300, 8062, 307, 364, 11610, 300, 2793, 22167, 50834, 50834, 2051, 264, 1622, 295, 4833, 13525, 13, 51016, 51016, 407, 498, 291, 366, 294, 257, 568, 35, 3753, 11, 291, 362, 732, 261, 9834, 13, 51246, 51246, 400, 264, 3753, 307, 10379, 510, 11, 51380, 51380, 512, 1333, 295, 37262, 2594, 510, 294, 341, 1389, 13, 51536, 51536, 407, 309, 311, 257, 1150, 4314, 26110, 294, 261, 16, 293, 261, 15, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10729757944742839, "compression_ratio": 1.5, "no_speech_prob": 6.143860900920117e-06}, {"id": 307, "seek": 85272, "start": 876.1600000000001, "end": 881.0400000000001, "text": " So it's a second degree polynomial in w1 and w0.", "tokens": [50364, 400, 382, 16176, 510, 322, 264, 1192, 558, 11, 50502, 50502, 300, 8062, 307, 364, 11610, 300, 2793, 22167, 50834, 50834, 2051, 264, 1622, 295, 4833, 13525, 13, 51016, 51016, 407, 498, 291, 366, 294, 257, 568, 35, 3753, 11, 291, 362, 732, 261, 9834, 13, 51246, 51246, 400, 264, 3753, 307, 10379, 510, 11, 51380, 51380, 512, 1333, 295, 37262, 2594, 510, 294, 341, 1389, 13, 51536, 51536, 407, 309, 311, 257, 1150, 4314, 26110, 294, 261, 16, 293, 261, 15, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10729757944742839, "compression_ratio": 1.5, "no_speech_prob": 6.143860900920117e-06}, {"id": 308, "seek": 88104, "start": 881.04, "end": 884.48, "text": " Here on the right is the kind of a top down view of this,", "tokens": [50364, 1692, 322, 264, 558, 307, 264, 733, 295, 257, 1192, 760, 1910, 295, 341, 11, 50536, 50536, 689, 264, 3876, 2906, 264, 3876, 295, 2681, 2063, 13, 50762, 50762, 440, 707, 19669, 510, 2906, 264, 16235, 50858, 50858, 412, 3683, 9253, 13, 50972, 50972, 407, 291, 362, 257, 938, 11610, 498, 264, 13525, 307, 16841, 11, 51136, 51136, 257, 2099, 11610, 498, 264, 13525, 307, 406, 16841, 11, 406, 2416, 13, 51422, 51422, 1711, 264, 2767, 11, 309, 311, 1958, 13, 51536, 51536, 400, 309, 2793, 3030, 264, 3513, 295, 6343, 13525, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11549992905449621, "compression_ratio": 1.7053140096618358, "no_speech_prob": 2.123255399055779e-06}, {"id": 309, "seek": 88104, "start": 884.48, "end": 889.0, "text": " where the lines represent the lines of equal cost.", "tokens": [50364, 1692, 322, 264, 558, 307, 264, 733, 295, 257, 1192, 760, 1910, 295, 341, 11, 50536, 50536, 689, 264, 3876, 2906, 264, 3876, 295, 2681, 2063, 13, 50762, 50762, 440, 707, 19669, 510, 2906, 264, 16235, 50858, 50858, 412, 3683, 9253, 13, 50972, 50972, 407, 291, 362, 257, 938, 11610, 498, 264, 13525, 307, 16841, 11, 51136, 51136, 257, 2099, 11610, 498, 264, 13525, 307, 406, 16841, 11, 406, 2416, 13, 51422, 51422, 1711, 264, 2767, 11, 309, 311, 1958, 13, 51536, 51536, 400, 309, 2793, 3030, 264, 3513, 295, 6343, 13525, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11549992905449621, "compression_ratio": 1.7053140096618358, "no_speech_prob": 2.123255399055779e-06}, {"id": 310, "seek": 88104, "start": 889.0, "end": 890.92, "text": " The little arrows here represent the gradient", "tokens": [50364, 1692, 322, 264, 558, 307, 264, 733, 295, 257, 1192, 760, 1910, 295, 341, 11, 50536, 50536, 689, 264, 3876, 2906, 264, 3876, 295, 2681, 2063, 13, 50762, 50762, 440, 707, 19669, 510, 2906, 264, 16235, 50858, 50858, 412, 3683, 9253, 13, 50972, 50972, 407, 291, 362, 257, 938, 11610, 498, 264, 13525, 307, 16841, 11, 51136, 51136, 257, 2099, 11610, 498, 264, 13525, 307, 406, 16841, 11, 406, 2416, 13, 51422, 51422, 1711, 264, 2767, 11, 309, 311, 1958, 13, 51536, 51536, 400, 309, 2793, 3030, 264, 3513, 295, 6343, 13525, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11549992905449621, "compression_ratio": 1.7053140096618358, "no_speech_prob": 2.123255399055779e-06}, {"id": 311, "seek": 88104, "start": 890.92, "end": 893.1999999999999, "text": " at various locations.", "tokens": [50364, 1692, 322, 264, 558, 307, 264, 733, 295, 257, 1192, 760, 1910, 295, 341, 11, 50536, 50536, 689, 264, 3876, 2906, 264, 3876, 295, 2681, 2063, 13, 50762, 50762, 440, 707, 19669, 510, 2906, 264, 16235, 50858, 50858, 412, 3683, 9253, 13, 50972, 50972, 407, 291, 362, 257, 938, 11610, 498, 264, 13525, 307, 16841, 11, 51136, 51136, 257, 2099, 11610, 498, 264, 13525, 307, 406, 16841, 11, 406, 2416, 13, 51422, 51422, 1711, 264, 2767, 11, 309, 311, 1958, 13, 51536, 51536, 400, 309, 2793, 3030, 264, 3513, 295, 6343, 13525, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11549992905449621, "compression_ratio": 1.7053140096618358, "no_speech_prob": 2.123255399055779e-06}, {"id": 312, "seek": 88104, "start": 893.1999999999999, "end": 896.48, "text": " So you have a long arrow if the slope is steep,", "tokens": [50364, 1692, 322, 264, 558, 307, 264, 733, 295, 257, 1192, 760, 1910, 295, 341, 11, 50536, 50536, 689, 264, 3876, 2906, 264, 3876, 295, 2681, 2063, 13, 50762, 50762, 440, 707, 19669, 510, 2906, 264, 16235, 50858, 50858, 412, 3683, 9253, 13, 50972, 50972, 407, 291, 362, 257, 938, 11610, 498, 264, 13525, 307, 16841, 11, 51136, 51136, 257, 2099, 11610, 498, 264, 13525, 307, 406, 16841, 11, 406, 2416, 13, 51422, 51422, 1711, 264, 2767, 11, 309, 311, 1958, 13, 51536, 51536, 400, 309, 2793, 3030, 264, 3513, 295, 6343, 13525, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11549992905449621, "compression_ratio": 1.7053140096618358, "no_speech_prob": 2.123255399055779e-06}, {"id": 313, "seek": 88104, "start": 896.48, "end": 902.1999999999999, "text": " a short arrow if the slope is not steep, not large.", "tokens": [50364, 1692, 322, 264, 558, 307, 264, 733, 295, 257, 1192, 760, 1910, 295, 341, 11, 50536, 50536, 689, 264, 3876, 2906, 264, 3876, 295, 2681, 2063, 13, 50762, 50762, 440, 707, 19669, 510, 2906, 264, 16235, 50858, 50858, 412, 3683, 9253, 13, 50972, 50972, 407, 291, 362, 257, 938, 11610, 498, 264, 13525, 307, 16841, 11, 51136, 51136, 257, 2099, 11610, 498, 264, 13525, 307, 406, 16841, 11, 406, 2416, 13, 51422, 51422, 1711, 264, 2767, 11, 309, 311, 1958, 13, 51536, 51536, 400, 309, 2793, 3030, 264, 3513, 295, 6343, 13525, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11549992905449621, "compression_ratio": 1.7053140096618358, "no_speech_prob": 2.123255399055779e-06}, {"id": 314, "seek": 88104, "start": 902.1999999999999, "end": 904.48, "text": " At the bottom, it's 0.", "tokens": [50364, 1692, 322, 264, 558, 307, 264, 733, 295, 257, 1192, 760, 1910, 295, 341, 11, 50536, 50536, 689, 264, 3876, 2906, 264, 3876, 295, 2681, 2063, 13, 50762, 50762, 440, 707, 19669, 510, 2906, 264, 16235, 50858, 50858, 412, 3683, 9253, 13, 50972, 50972, 407, 291, 362, 257, 938, 11610, 498, 264, 13525, 307, 16841, 11, 51136, 51136, 257, 2099, 11610, 498, 264, 13525, 307, 406, 16841, 11, 406, 2416, 13, 51422, 51422, 1711, 264, 2767, 11, 309, 311, 1958, 13, 51536, 51536, 400, 309, 2793, 3030, 264, 3513, 295, 6343, 13525, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11549992905449621, "compression_ratio": 1.7053140096618358, "no_speech_prob": 2.123255399055779e-06}, {"id": 315, "seek": 88104, "start": 904.48, "end": 909.16, "text": " And it points towards the direction of highest slope.", "tokens": [50364, 1692, 322, 264, 558, 307, 264, 733, 295, 257, 1192, 760, 1910, 295, 341, 11, 50536, 50536, 689, 264, 3876, 2906, 264, 3876, 295, 2681, 2063, 13, 50762, 50762, 440, 707, 19669, 510, 2906, 264, 16235, 50858, 50858, 412, 3683, 9253, 13, 50972, 50972, 407, 291, 362, 257, 938, 11610, 498, 264, 13525, 307, 16841, 11, 51136, 51136, 257, 2099, 11610, 498, 264, 13525, 307, 406, 16841, 11, 406, 2416, 13, 51422, 51422, 1711, 264, 2767, 11, 309, 311, 1958, 13, 51536, 51536, 400, 309, 2793, 3030, 264, 3513, 295, 6343, 13525, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11549992905449621, "compression_ratio": 1.7053140096618358, "no_speech_prob": 2.123255399055779e-06}, {"id": 316, "seek": 90916, "start": 909.16, "end": 911.4399999999999, "text": " So imagine you are in a landscape,", "tokens": [50364, 407, 3811, 291, 366, 294, 257, 9661, 11, 50478, 50478, 257, 6937, 563, 9661, 13, 50574, 50574, 400, 291, 366, 294, 257, 13648, 13, 50658, 50658, 400, 291, 528, 281, 352, 760, 264, 17636, 13, 50744, 50744, 509, 574, 926, 291, 13, 50786, 50786, 400, 291, 393, 980, 264, 2654, 13525, 295, 264, 9661, 13, 51096, 51096, 509, 393, 380, 980, 689, 264, 7285, 307, 570, 291, 434, 294, 257, 13648, 13, 51344, 51344, 583, 291, 393, 980, 264, 2654, 13525, 13, 51410, 51410, 407, 291, 393, 2573, 484, 437, 307, 264, 3513, 295, 4833, 13525, 51630, 51630, 293, 550, 747, 257, 1823, 13, 51670, 51670, 400, 300, 486, 747, 291, 22167, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.14742984934749767, "compression_ratio": 1.8952380952380952, "no_speech_prob": 2.2123380404082127e-05}, {"id": 317, "seek": 90916, "start": 911.4399999999999, "end": 913.36, "text": " a mountainous landscape.", "tokens": [50364, 407, 3811, 291, 366, 294, 257, 9661, 11, 50478, 50478, 257, 6937, 563, 9661, 13, 50574, 50574, 400, 291, 366, 294, 257, 13648, 13, 50658, 50658, 400, 291, 528, 281, 352, 760, 264, 17636, 13, 50744, 50744, 509, 574, 926, 291, 13, 50786, 50786, 400, 291, 393, 980, 264, 2654, 13525, 295, 264, 9661, 13, 51096, 51096, 509, 393, 380, 980, 689, 264, 7285, 307, 570, 291, 434, 294, 257, 13648, 13, 51344, 51344, 583, 291, 393, 980, 264, 2654, 13525, 13, 51410, 51410, 407, 291, 393, 2573, 484, 437, 307, 264, 3513, 295, 4833, 13525, 51630, 51630, 293, 550, 747, 257, 1823, 13, 51670, 51670, 400, 300, 486, 747, 291, 22167, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.14742984934749767, "compression_ratio": 1.8952380952380952, "no_speech_prob": 2.2123380404082127e-05}, {"id": 318, "seek": 90916, "start": 913.36, "end": 915.04, "text": " And you are in a fog.", "tokens": [50364, 407, 3811, 291, 366, 294, 257, 9661, 11, 50478, 50478, 257, 6937, 563, 9661, 13, 50574, 50574, 400, 291, 366, 294, 257, 13648, 13, 50658, 50658, 400, 291, 528, 281, 352, 760, 264, 17636, 13, 50744, 50744, 509, 574, 926, 291, 13, 50786, 50786, 400, 291, 393, 980, 264, 2654, 13525, 295, 264, 9661, 13, 51096, 51096, 509, 393, 380, 980, 689, 264, 7285, 307, 570, 291, 434, 294, 257, 13648, 13, 51344, 51344, 583, 291, 393, 980, 264, 2654, 13525, 13, 51410, 51410, 407, 291, 393, 2573, 484, 437, 307, 264, 3513, 295, 4833, 13525, 51630, 51630, 293, 550, 747, 257, 1823, 13, 51670, 51670, 400, 300, 486, 747, 291, 22167, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.14742984934749767, "compression_ratio": 1.8952380952380952, "no_speech_prob": 2.2123380404082127e-05}, {"id": 319, "seek": 90916, "start": 915.04, "end": 916.76, "text": " And you want to go down the valley.", "tokens": [50364, 407, 3811, 291, 366, 294, 257, 9661, 11, 50478, 50478, 257, 6937, 563, 9661, 13, 50574, 50574, 400, 291, 366, 294, 257, 13648, 13, 50658, 50658, 400, 291, 528, 281, 352, 760, 264, 17636, 13, 50744, 50744, 509, 574, 926, 291, 13, 50786, 50786, 400, 291, 393, 980, 264, 2654, 13525, 295, 264, 9661, 13, 51096, 51096, 509, 393, 380, 980, 689, 264, 7285, 307, 570, 291, 434, 294, 257, 13648, 13, 51344, 51344, 583, 291, 393, 980, 264, 2654, 13525, 13, 51410, 51410, 407, 291, 393, 2573, 484, 437, 307, 264, 3513, 295, 4833, 13525, 51630, 51630, 293, 550, 747, 257, 1823, 13, 51670, 51670, 400, 300, 486, 747, 291, 22167, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.14742984934749767, "compression_ratio": 1.8952380952380952, "no_speech_prob": 2.2123380404082127e-05}, {"id": 320, "seek": 90916, "start": 916.76, "end": 917.6, "text": " You look around you.", "tokens": [50364, 407, 3811, 291, 366, 294, 257, 9661, 11, 50478, 50478, 257, 6937, 563, 9661, 13, 50574, 50574, 400, 291, 366, 294, 257, 13648, 13, 50658, 50658, 400, 291, 528, 281, 352, 760, 264, 17636, 13, 50744, 50744, 509, 574, 926, 291, 13, 50786, 50786, 400, 291, 393, 980, 264, 2654, 13525, 295, 264, 9661, 13, 51096, 51096, 509, 393, 380, 980, 689, 264, 7285, 307, 570, 291, 434, 294, 257, 13648, 13, 51344, 51344, 583, 291, 393, 980, 264, 2654, 13525, 13, 51410, 51410, 407, 291, 393, 2573, 484, 437, 307, 264, 3513, 295, 4833, 13525, 51630, 51630, 293, 550, 747, 257, 1823, 13, 51670, 51670, 400, 300, 486, 747, 291, 22167, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.14742984934749767, "compression_ratio": 1.8952380952380952, "no_speech_prob": 2.2123380404082127e-05}, {"id": 321, "seek": 90916, "start": 917.6, "end": 923.8, "text": " And you can tell the local slope of the landscape.", "tokens": [50364, 407, 3811, 291, 366, 294, 257, 9661, 11, 50478, 50478, 257, 6937, 563, 9661, 13, 50574, 50574, 400, 291, 366, 294, 257, 13648, 13, 50658, 50658, 400, 291, 528, 281, 352, 760, 264, 17636, 13, 50744, 50744, 509, 574, 926, 291, 13, 50786, 50786, 400, 291, 393, 980, 264, 2654, 13525, 295, 264, 9661, 13, 51096, 51096, 509, 393, 380, 980, 689, 264, 7285, 307, 570, 291, 434, 294, 257, 13648, 13, 51344, 51344, 583, 291, 393, 980, 264, 2654, 13525, 13, 51410, 51410, 407, 291, 393, 2573, 484, 437, 307, 264, 3513, 295, 4833, 13525, 51630, 51630, 293, 550, 747, 257, 1823, 13, 51670, 51670, 400, 300, 486, 747, 291, 22167, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.14742984934749767, "compression_ratio": 1.8952380952380952, "no_speech_prob": 2.2123380404082127e-05}, {"id": 322, "seek": 90916, "start": 923.8, "end": 928.76, "text": " You can't tell where the minimum is because you're in a fog.", "tokens": [50364, 407, 3811, 291, 366, 294, 257, 9661, 11, 50478, 50478, 257, 6937, 563, 9661, 13, 50574, 50574, 400, 291, 366, 294, 257, 13648, 13, 50658, 50658, 400, 291, 528, 281, 352, 760, 264, 17636, 13, 50744, 50744, 509, 574, 926, 291, 13, 50786, 50786, 400, 291, 393, 980, 264, 2654, 13525, 295, 264, 9661, 13, 51096, 51096, 509, 393, 380, 980, 689, 264, 7285, 307, 570, 291, 434, 294, 257, 13648, 13, 51344, 51344, 583, 291, 393, 980, 264, 2654, 13525, 13, 51410, 51410, 407, 291, 393, 2573, 484, 437, 307, 264, 3513, 295, 4833, 13525, 51630, 51630, 293, 550, 747, 257, 1823, 13, 51670, 51670, 400, 300, 486, 747, 291, 22167, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.14742984934749767, "compression_ratio": 1.8952380952380952, "no_speech_prob": 2.2123380404082127e-05}, {"id": 323, "seek": 90916, "start": 928.76, "end": 930.0799999999999, "text": " But you can tell the local slope.", "tokens": [50364, 407, 3811, 291, 366, 294, 257, 9661, 11, 50478, 50478, 257, 6937, 563, 9661, 13, 50574, 50574, 400, 291, 366, 294, 257, 13648, 13, 50658, 50658, 400, 291, 528, 281, 352, 760, 264, 17636, 13, 50744, 50744, 509, 574, 926, 291, 13, 50786, 50786, 400, 291, 393, 980, 264, 2654, 13525, 295, 264, 9661, 13, 51096, 51096, 509, 393, 380, 980, 689, 264, 7285, 307, 570, 291, 434, 294, 257, 13648, 13, 51344, 51344, 583, 291, 393, 980, 264, 2654, 13525, 13, 51410, 51410, 407, 291, 393, 2573, 484, 437, 307, 264, 3513, 295, 4833, 13525, 51630, 51630, 293, 550, 747, 257, 1823, 13, 51670, 51670, 400, 300, 486, 747, 291, 22167, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.14742984934749767, "compression_ratio": 1.8952380952380952, "no_speech_prob": 2.2123380404082127e-05}, {"id": 324, "seek": 90916, "start": 930.0799999999999, "end": 934.48, "text": " So you can figure out what is the direction of larger slope", "tokens": [50364, 407, 3811, 291, 366, 294, 257, 9661, 11, 50478, 50478, 257, 6937, 563, 9661, 13, 50574, 50574, 400, 291, 366, 294, 257, 13648, 13, 50658, 50658, 400, 291, 528, 281, 352, 760, 264, 17636, 13, 50744, 50744, 509, 574, 926, 291, 13, 50786, 50786, 400, 291, 393, 980, 264, 2654, 13525, 295, 264, 9661, 13, 51096, 51096, 509, 393, 380, 980, 689, 264, 7285, 307, 570, 291, 434, 294, 257, 13648, 13, 51344, 51344, 583, 291, 393, 980, 264, 2654, 13525, 13, 51410, 51410, 407, 291, 393, 2573, 484, 437, 307, 264, 3513, 295, 4833, 13525, 51630, 51630, 293, 550, 747, 257, 1823, 13, 51670, 51670, 400, 300, 486, 747, 291, 22167, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.14742984934749767, "compression_ratio": 1.8952380952380952, "no_speech_prob": 2.2123380404082127e-05}, {"id": 325, "seek": 90916, "start": 934.48, "end": 935.28, "text": " and then take a step.", "tokens": [50364, 407, 3811, 291, 366, 294, 257, 9661, 11, 50478, 50478, 257, 6937, 563, 9661, 13, 50574, 50574, 400, 291, 366, 294, 257, 13648, 13, 50658, 50658, 400, 291, 528, 281, 352, 760, 264, 17636, 13, 50744, 50744, 509, 574, 926, 291, 13, 50786, 50786, 400, 291, 393, 980, 264, 2654, 13525, 295, 264, 9661, 13, 51096, 51096, 509, 393, 380, 980, 689, 264, 7285, 307, 570, 291, 434, 294, 257, 13648, 13, 51344, 51344, 583, 291, 393, 980, 264, 2654, 13525, 13, 51410, 51410, 407, 291, 393, 2573, 484, 437, 307, 264, 3513, 295, 4833, 13525, 51630, 51630, 293, 550, 747, 257, 1823, 13, 51670, 51670, 400, 300, 486, 747, 291, 22167, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.14742984934749767, "compression_ratio": 1.8952380952380952, "no_speech_prob": 2.2123380404082127e-05}, {"id": 326, "seek": 90916, "start": 935.28, "end": 936.9599999999999, "text": " And that will take you upwards.", "tokens": [50364, 407, 3811, 291, 366, 294, 257, 9661, 11, 50478, 50478, 257, 6937, 563, 9661, 13, 50574, 50574, 400, 291, 366, 294, 257, 13648, 13, 50658, 50658, 400, 291, 528, 281, 352, 760, 264, 17636, 13, 50744, 50744, 509, 574, 926, 291, 13, 50786, 50786, 400, 291, 393, 980, 264, 2654, 13525, 295, 264, 9661, 13, 51096, 51096, 509, 393, 380, 980, 689, 264, 7285, 307, 570, 291, 434, 294, 257, 13648, 13, 51344, 51344, 583, 291, 393, 980, 264, 2654, 13525, 13, 51410, 51410, 407, 291, 393, 2573, 484, 437, 307, 264, 3513, 295, 4833, 13525, 51630, 51630, 293, 550, 747, 257, 1823, 13, 51670, 51670, 400, 300, 486, 747, 291, 22167, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.14742984934749767, "compression_ratio": 1.8952380952380952, "no_speech_prob": 2.2123380404082127e-05}, {"id": 327, "seek": 93696, "start": 936.96, "end": 941.2, "text": " Now you turn around 180 degrees, take a step in that direction.", "tokens": [50364, 823, 291, 1261, 926, 11971, 5310, 11, 747, 257, 1823, 294, 300, 3513, 13, 50576, 50576, 400, 300, 307, 516, 281, 747, 291, 39880, 13, 50690, 50690, 400, 498, 291, 1066, 884, 341, 293, 264, 9661, 307, 42432, 11, 50886, 50886, 597, 1355, 309, 575, 787, 472, 2654, 7285, 11, 51012, 51012, 341, 486, 4728, 747, 291, 760, 281, 264, 17636, 51178, 51178, 293, 26742, 281, 264, 7288, 13, 51304, 51304, 1779, 11, 370, 300, 311, 16235, 12, 6032, 14642, 13, 51458, 51458, 814, 439, 743, 538, 577, 291, 14722, 264, 16235, 700, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12083541240888773, "compression_ratio": 1.5875, "no_speech_prob": 6.747844963683747e-06}, {"id": 328, "seek": 93696, "start": 941.2, "end": 943.48, "text": " And that is going to take you downwards.", "tokens": [50364, 823, 291, 1261, 926, 11971, 5310, 11, 747, 257, 1823, 294, 300, 3513, 13, 50576, 50576, 400, 300, 307, 516, 281, 747, 291, 39880, 13, 50690, 50690, 400, 498, 291, 1066, 884, 341, 293, 264, 9661, 307, 42432, 11, 50886, 50886, 597, 1355, 309, 575, 787, 472, 2654, 7285, 11, 51012, 51012, 341, 486, 4728, 747, 291, 760, 281, 264, 17636, 51178, 51178, 293, 26742, 281, 264, 7288, 13, 51304, 51304, 1779, 11, 370, 300, 311, 16235, 12, 6032, 14642, 13, 51458, 51458, 814, 439, 743, 538, 577, 291, 14722, 264, 16235, 700, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12083541240888773, "compression_ratio": 1.5875, "no_speech_prob": 6.747844963683747e-06}, {"id": 329, "seek": 93696, "start": 943.48, "end": 947.4000000000001, "text": " And if you keep doing this and the landscape is convex,", "tokens": [50364, 823, 291, 1261, 926, 11971, 5310, 11, 747, 257, 1823, 294, 300, 3513, 13, 50576, 50576, 400, 300, 307, 516, 281, 747, 291, 39880, 13, 50690, 50690, 400, 498, 291, 1066, 884, 341, 293, 264, 9661, 307, 42432, 11, 50886, 50886, 597, 1355, 309, 575, 787, 472, 2654, 7285, 11, 51012, 51012, 341, 486, 4728, 747, 291, 760, 281, 264, 17636, 51178, 51178, 293, 26742, 281, 264, 7288, 13, 51304, 51304, 1779, 11, 370, 300, 311, 16235, 12, 6032, 14642, 13, 51458, 51458, 814, 439, 743, 538, 577, 291, 14722, 264, 16235, 700, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12083541240888773, "compression_ratio": 1.5875, "no_speech_prob": 6.747844963683747e-06}, {"id": 330, "seek": 93696, "start": 947.4000000000001, "end": 949.9200000000001, "text": " which means it has only one local minimum,", "tokens": [50364, 823, 291, 1261, 926, 11971, 5310, 11, 747, 257, 1823, 294, 300, 3513, 13, 50576, 50576, 400, 300, 307, 516, 281, 747, 291, 39880, 13, 50690, 50690, 400, 498, 291, 1066, 884, 341, 293, 264, 9661, 307, 42432, 11, 50886, 50886, 597, 1355, 309, 575, 787, 472, 2654, 7285, 11, 51012, 51012, 341, 486, 4728, 747, 291, 760, 281, 264, 17636, 51178, 51178, 293, 26742, 281, 264, 7288, 13, 51304, 51304, 1779, 11, 370, 300, 311, 16235, 12, 6032, 14642, 13, 51458, 51458, 814, 439, 743, 538, 577, 291, 14722, 264, 16235, 700, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12083541240888773, "compression_ratio": 1.5875, "no_speech_prob": 6.747844963683747e-06}, {"id": 331, "seek": 93696, "start": 949.9200000000001, "end": 953.24, "text": " this will eventually take you down to the valley", "tokens": [50364, 823, 291, 1261, 926, 11971, 5310, 11, 747, 257, 1823, 294, 300, 3513, 13, 50576, 50576, 400, 300, 307, 516, 281, 747, 291, 39880, 13, 50690, 50690, 400, 498, 291, 1066, 884, 341, 293, 264, 9661, 307, 42432, 11, 50886, 50886, 597, 1355, 309, 575, 787, 472, 2654, 7285, 11, 51012, 51012, 341, 486, 4728, 747, 291, 760, 281, 264, 17636, 51178, 51178, 293, 26742, 281, 264, 7288, 13, 51304, 51304, 1779, 11, 370, 300, 311, 16235, 12, 6032, 14642, 13, 51458, 51458, 814, 439, 743, 538, 577, 291, 14722, 264, 16235, 700, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12083541240888773, "compression_ratio": 1.5875, "no_speech_prob": 6.747844963683747e-06}, {"id": 332, "seek": 93696, "start": 953.24, "end": 955.76, "text": " and presumably to the village.", "tokens": [50364, 823, 291, 1261, 926, 11971, 5310, 11, 747, 257, 1823, 294, 300, 3513, 13, 50576, 50576, 400, 300, 307, 516, 281, 747, 291, 39880, 13, 50690, 50690, 400, 498, 291, 1066, 884, 341, 293, 264, 9661, 307, 42432, 11, 50886, 50886, 597, 1355, 309, 575, 787, 472, 2654, 7285, 11, 51012, 51012, 341, 486, 4728, 747, 291, 760, 281, 264, 17636, 51178, 51178, 293, 26742, 281, 264, 7288, 13, 51304, 51304, 1779, 11, 370, 300, 311, 16235, 12, 6032, 14642, 13, 51458, 51458, 814, 439, 743, 538, 577, 291, 14722, 264, 16235, 700, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12083541240888773, "compression_ratio": 1.5875, "no_speech_prob": 6.747844963683747e-06}, {"id": 333, "seek": 93696, "start": 955.76, "end": 958.84, "text": " Right, so that's gradient-based algorithms.", "tokens": [50364, 823, 291, 1261, 926, 11971, 5310, 11, 747, 257, 1823, 294, 300, 3513, 13, 50576, 50576, 400, 300, 307, 516, 281, 747, 291, 39880, 13, 50690, 50690, 400, 498, 291, 1066, 884, 341, 293, 264, 9661, 307, 42432, 11, 50886, 50886, 597, 1355, 309, 575, 787, 472, 2654, 7285, 11, 51012, 51012, 341, 486, 4728, 747, 291, 760, 281, 264, 17636, 51178, 51178, 293, 26742, 281, 264, 7288, 13, 51304, 51304, 1779, 11, 370, 300, 311, 16235, 12, 6032, 14642, 13, 51458, 51458, 814, 439, 743, 538, 577, 291, 14722, 264, 16235, 700, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12083541240888773, "compression_ratio": 1.5875, "no_speech_prob": 6.747844963683747e-06}, {"id": 334, "seek": 93696, "start": 958.84, "end": 964.84, "text": " They all differ by how you compute the gradient first", "tokens": [50364, 823, 291, 1261, 926, 11971, 5310, 11, 747, 257, 1823, 294, 300, 3513, 13, 50576, 50576, 400, 300, 307, 516, 281, 747, 291, 39880, 13, 50690, 50690, 400, 498, 291, 1066, 884, 341, 293, 264, 9661, 307, 42432, 11, 50886, 50886, 597, 1355, 309, 575, 787, 472, 2654, 7285, 11, 51012, 51012, 341, 486, 4728, 747, 291, 760, 281, 264, 17636, 51178, 51178, 293, 26742, 281, 264, 7288, 13, 51304, 51304, 1779, 11, 370, 300, 311, 16235, 12, 6032, 14642, 13, 51458, 51458, 814, 439, 743, 538, 577, 291, 14722, 264, 16235, 700, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.12083541240888773, "compression_ratio": 1.5875, "no_speech_prob": 6.747844963683747e-06}, {"id": 335, "seek": 96484, "start": 964.84, "end": 969.0400000000001, "text": " and by what this eta step size parameter is.", "tokens": [50364, 293, 538, 437, 341, 32415, 1823, 2744, 13075, 307, 13, 50574, 50574, 407, 294, 2199, 6422, 11, 32415, 307, 445, 257, 3353, 5754, 50754, 50754, 300, 2171, 307, 24436, 382, 264, 1185, 6676, 544, 11, 50986, 50986, 457, 881, 295, 264, 565, 406, 13, 51156, 51156, 583, 294, 544, 3997, 9606, 295, 16235, 12, 6032, 2539, 11, 51338, 51338, 32415, 307, 767, 364, 2302, 8141, 2564, 11, 5101, 51492, 51492, 257, 3353, 25131, 420, 12909, 12, 1479, 5194, 642, 8141, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.08485094519222484, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.817279533308465e-06}, {"id": 336, "seek": 96484, "start": 969.0400000000001, "end": 972.64, "text": " So in simple forms, eta is just a positive constant", "tokens": [50364, 293, 538, 437, 341, 32415, 1823, 2744, 13075, 307, 13, 50574, 50574, 407, 294, 2199, 6422, 11, 32415, 307, 445, 257, 3353, 5754, 50754, 50754, 300, 2171, 307, 24436, 382, 264, 1185, 6676, 544, 11, 50986, 50986, 457, 881, 295, 264, 565, 406, 13, 51156, 51156, 583, 294, 544, 3997, 9606, 295, 16235, 12, 6032, 2539, 11, 51338, 51338, 32415, 307, 767, 364, 2302, 8141, 2564, 11, 5101, 51492, 51492, 257, 3353, 25131, 420, 12909, 12, 1479, 5194, 642, 8141, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.08485094519222484, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.817279533308465e-06}, {"id": 337, "seek": 96484, "start": 972.64, "end": 977.2800000000001, "text": " that sometimes is decreased as the system runs more,", "tokens": [50364, 293, 538, 437, 341, 32415, 1823, 2744, 13075, 307, 13, 50574, 50574, 407, 294, 2199, 6422, 11, 32415, 307, 445, 257, 3353, 5754, 50754, 50754, 300, 2171, 307, 24436, 382, 264, 1185, 6676, 544, 11, 50986, 50986, 457, 881, 295, 264, 565, 406, 13, 51156, 51156, 583, 294, 544, 3997, 9606, 295, 16235, 12, 6032, 2539, 11, 51338, 51338, 32415, 307, 767, 364, 2302, 8141, 2564, 11, 5101, 51492, 51492, 257, 3353, 25131, 420, 12909, 12, 1479, 5194, 642, 8141, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.08485094519222484, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.817279533308465e-06}, {"id": 338, "seek": 96484, "start": 977.2800000000001, "end": 980.6800000000001, "text": " but most of the time not.", "tokens": [50364, 293, 538, 437, 341, 32415, 1823, 2744, 13075, 307, 13, 50574, 50574, 407, 294, 2199, 6422, 11, 32415, 307, 445, 257, 3353, 5754, 50754, 50754, 300, 2171, 307, 24436, 382, 264, 1185, 6676, 544, 11, 50986, 50986, 457, 881, 295, 264, 565, 406, 13, 51156, 51156, 583, 294, 544, 3997, 9606, 295, 16235, 12, 6032, 2539, 11, 51338, 51338, 32415, 307, 767, 364, 2302, 8141, 2564, 11, 5101, 51492, 51492, 257, 3353, 25131, 420, 12909, 12, 1479, 5194, 642, 8141, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.08485094519222484, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.817279533308465e-06}, {"id": 339, "seek": 96484, "start": 980.6800000000001, "end": 984.32, "text": " But in more complex versions of gradient-based learning,", "tokens": [50364, 293, 538, 437, 341, 32415, 1823, 2744, 13075, 307, 13, 50574, 50574, 407, 294, 2199, 6422, 11, 32415, 307, 445, 257, 3353, 5754, 50754, 50754, 300, 2171, 307, 24436, 382, 264, 1185, 6676, 544, 11, 50986, 50986, 457, 881, 295, 264, 565, 406, 13, 51156, 51156, 583, 294, 544, 3997, 9606, 295, 16235, 12, 6032, 2539, 11, 51338, 51338, 32415, 307, 767, 364, 2302, 8141, 2564, 11, 5101, 51492, 51492, 257, 3353, 25131, 420, 12909, 12, 1479, 5194, 642, 8141, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.08485094519222484, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.817279533308465e-06}, {"id": 340, "seek": 96484, "start": 984.32, "end": 987.4, "text": " eta is actually an entire matrix itself, generally", "tokens": [50364, 293, 538, 437, 341, 32415, 1823, 2744, 13075, 307, 13, 50574, 50574, 407, 294, 2199, 6422, 11, 32415, 307, 445, 257, 3353, 5754, 50754, 50754, 300, 2171, 307, 24436, 382, 264, 1185, 6676, 544, 11, 50986, 50986, 457, 881, 295, 264, 565, 406, 13, 51156, 51156, 583, 294, 544, 3997, 9606, 295, 16235, 12, 6032, 2539, 11, 51338, 51338, 32415, 307, 767, 364, 2302, 8141, 2564, 11, 5101, 51492, 51492, 257, 3353, 25131, 420, 12909, 12, 1479, 5194, 642, 8141, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.08485094519222484, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.817279533308465e-06}, {"id": 341, "seek": 96484, "start": 987.4, "end": 991.1600000000001, "text": " a positive definite or semi-definite matrix.", "tokens": [50364, 293, 538, 437, 341, 32415, 1823, 2744, 13075, 307, 13, 50574, 50574, 407, 294, 2199, 6422, 11, 32415, 307, 445, 257, 3353, 5754, 50754, 50754, 300, 2171, 307, 24436, 382, 264, 1185, 6676, 544, 11, 50986, 50986, 457, 881, 295, 264, 565, 406, 13, 51156, 51156, 583, 294, 544, 3997, 9606, 295, 16235, 12, 6032, 2539, 11, 51338, 51338, 32415, 307, 767, 364, 2302, 8141, 2564, 11, 5101, 51492, 51492, 257, 3353, 25131, 420, 12909, 12, 1479, 5194, 642, 8141, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.08485094519222484, "compression_ratio": 1.607843137254902, "no_speech_prob": 9.817279533308465e-06}, {"id": 342, "seek": 99116, "start": 991.16, "end": 996.1999999999999, "text": " And so the direction adopted by those algorithms", "tokens": [50364, 400, 370, 264, 3513, 12175, 538, 729, 14642, 50616, 50616, 307, 406, 4725, 264, 16841, 377, 23475, 13, 50700, 50700, 467, 1709, 39880, 11, 457, 309, 311, 406, 4725, 264, 16841, 377, 23475, 13, 50892, 50892, 400, 321, 393, 536, 983, 510, 13, 50972, 50972, 407, 294, 341, 10686, 510, 300, 286, 478, 4099, 11, 51176, 51176, 341, 307, 264, 21512, 300, 486, 312, 51252, 51252, 6263, 538, 16235, 23475, 294, 341, 37262, 2063, 51448, 51448, 2823, 13, 51494, 51494, 400, 382, 291, 536, 11, 264, 21512, 307, 406, 2997, 13, 51624, 51624, 467, 311, 406, 2997, 570, 264, 1185, 1709, 760, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13094663619995117, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.6958816559053957e-05}, {"id": 343, "seek": 99116, "start": 996.1999999999999, "end": 997.88, "text": " is not necessarily the steepest descent.", "tokens": [50364, 400, 370, 264, 3513, 12175, 538, 729, 14642, 50616, 50616, 307, 406, 4725, 264, 16841, 377, 23475, 13, 50700, 50700, 467, 1709, 39880, 11, 457, 309, 311, 406, 4725, 264, 16841, 377, 23475, 13, 50892, 50892, 400, 321, 393, 536, 983, 510, 13, 50972, 50972, 407, 294, 341, 10686, 510, 300, 286, 478, 4099, 11, 51176, 51176, 341, 307, 264, 21512, 300, 486, 312, 51252, 51252, 6263, 538, 16235, 23475, 294, 341, 37262, 2063, 51448, 51448, 2823, 13, 51494, 51494, 400, 382, 291, 536, 11, 264, 21512, 307, 406, 2997, 13, 51624, 51624, 467, 311, 406, 2997, 570, 264, 1185, 1709, 760, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13094663619995117, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.6958816559053957e-05}, {"id": 344, "seek": 99116, "start": 997.88, "end": 1001.7199999999999, "text": " It goes downwards, but it's not necessarily the steepest descent.", "tokens": [50364, 400, 370, 264, 3513, 12175, 538, 729, 14642, 50616, 50616, 307, 406, 4725, 264, 16841, 377, 23475, 13, 50700, 50700, 467, 1709, 39880, 11, 457, 309, 311, 406, 4725, 264, 16841, 377, 23475, 13, 50892, 50892, 400, 321, 393, 536, 983, 510, 13, 50972, 50972, 407, 294, 341, 10686, 510, 300, 286, 478, 4099, 11, 51176, 51176, 341, 307, 264, 21512, 300, 486, 312, 51252, 51252, 6263, 538, 16235, 23475, 294, 341, 37262, 2063, 51448, 51448, 2823, 13, 51494, 51494, 400, 382, 291, 536, 11, 264, 21512, 307, 406, 2997, 13, 51624, 51624, 467, 311, 406, 2997, 570, 264, 1185, 1709, 760, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13094663619995117, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.6958816559053957e-05}, {"id": 345, "seek": 99116, "start": 1001.7199999999999, "end": 1003.3199999999999, "text": " And we can see why here.", "tokens": [50364, 400, 370, 264, 3513, 12175, 538, 729, 14642, 50616, 50616, 307, 406, 4725, 264, 16841, 377, 23475, 13, 50700, 50700, 467, 1709, 39880, 11, 457, 309, 311, 406, 4725, 264, 16841, 377, 23475, 13, 50892, 50892, 400, 321, 393, 536, 983, 510, 13, 50972, 50972, 407, 294, 341, 10686, 510, 300, 286, 478, 4099, 11, 51176, 51176, 341, 307, 264, 21512, 300, 486, 312, 51252, 51252, 6263, 538, 16235, 23475, 294, 341, 37262, 2063, 51448, 51448, 2823, 13, 51494, 51494, 400, 382, 291, 536, 11, 264, 21512, 307, 406, 2997, 13, 51624, 51624, 467, 311, 406, 2997, 570, 264, 1185, 1709, 760, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13094663619995117, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.6958816559053957e-05}, {"id": 346, "seek": 99116, "start": 1003.3199999999999, "end": 1007.4, "text": " So in this diagram here that I'm showing,", "tokens": [50364, 400, 370, 264, 3513, 12175, 538, 729, 14642, 50616, 50616, 307, 406, 4725, 264, 16841, 377, 23475, 13, 50700, 50700, 467, 1709, 39880, 11, 457, 309, 311, 406, 4725, 264, 16841, 377, 23475, 13, 50892, 50892, 400, 321, 393, 536, 983, 510, 13, 50972, 50972, 407, 294, 341, 10686, 510, 300, 286, 478, 4099, 11, 51176, 51176, 341, 307, 264, 21512, 300, 486, 312, 51252, 51252, 6263, 538, 16235, 23475, 294, 341, 37262, 2063, 51448, 51448, 2823, 13, 51494, 51494, 400, 382, 291, 536, 11, 264, 21512, 307, 406, 2997, 13, 51624, 51624, 467, 311, 406, 2997, 570, 264, 1185, 1709, 760, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13094663619995117, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.6958816559053957e-05}, {"id": 347, "seek": 99116, "start": 1007.4, "end": 1008.92, "text": " this is the trajectory that will be", "tokens": [50364, 400, 370, 264, 3513, 12175, 538, 729, 14642, 50616, 50616, 307, 406, 4725, 264, 16841, 377, 23475, 13, 50700, 50700, 467, 1709, 39880, 11, 457, 309, 311, 406, 4725, 264, 16841, 377, 23475, 13, 50892, 50892, 400, 321, 393, 536, 983, 510, 13, 50972, 50972, 407, 294, 341, 10686, 510, 300, 286, 478, 4099, 11, 51176, 51176, 341, 307, 264, 21512, 300, 486, 312, 51252, 51252, 6263, 538, 16235, 23475, 294, 341, 37262, 2063, 51448, 51448, 2823, 13, 51494, 51494, 400, 382, 291, 536, 11, 264, 21512, 307, 406, 2997, 13, 51624, 51624, 467, 311, 406, 2997, 570, 264, 1185, 1709, 760, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13094663619995117, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.6958816559053957e-05}, {"id": 348, "seek": 99116, "start": 1008.92, "end": 1012.8399999999999, "text": " followed by gradient descent in this quadratic cost", "tokens": [50364, 400, 370, 264, 3513, 12175, 538, 729, 14642, 50616, 50616, 307, 406, 4725, 264, 16841, 377, 23475, 13, 50700, 50700, 467, 1709, 39880, 11, 457, 309, 311, 406, 4725, 264, 16841, 377, 23475, 13, 50892, 50892, 400, 321, 393, 536, 983, 510, 13, 50972, 50972, 407, 294, 341, 10686, 510, 300, 286, 478, 4099, 11, 51176, 51176, 341, 307, 264, 21512, 300, 486, 312, 51252, 51252, 6263, 538, 16235, 23475, 294, 341, 37262, 2063, 51448, 51448, 2823, 13, 51494, 51494, 400, 382, 291, 536, 11, 264, 21512, 307, 406, 2997, 13, 51624, 51624, 467, 311, 406, 2997, 570, 264, 1185, 1709, 760, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13094663619995117, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.6958816559053957e-05}, {"id": 349, "seek": 99116, "start": 1012.8399999999999, "end": 1013.76, "text": " environment.", "tokens": [50364, 400, 370, 264, 3513, 12175, 538, 729, 14642, 50616, 50616, 307, 406, 4725, 264, 16841, 377, 23475, 13, 50700, 50700, 467, 1709, 39880, 11, 457, 309, 311, 406, 4725, 264, 16841, 377, 23475, 13, 50892, 50892, 400, 321, 393, 536, 983, 510, 13, 50972, 50972, 407, 294, 341, 10686, 510, 300, 286, 478, 4099, 11, 51176, 51176, 341, 307, 264, 21512, 300, 486, 312, 51252, 51252, 6263, 538, 16235, 23475, 294, 341, 37262, 2063, 51448, 51448, 2823, 13, 51494, 51494, 400, 382, 291, 536, 11, 264, 21512, 307, 406, 2997, 13, 51624, 51624, 467, 311, 406, 2997, 570, 264, 1185, 1709, 760, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13094663619995117, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.6958816559053957e-05}, {"id": 350, "seek": 99116, "start": 1013.76, "end": 1016.36, "text": " And as you see, the trajectory is not straight.", "tokens": [50364, 400, 370, 264, 3513, 12175, 538, 729, 14642, 50616, 50616, 307, 406, 4725, 264, 16841, 377, 23475, 13, 50700, 50700, 467, 1709, 39880, 11, 457, 309, 311, 406, 4725, 264, 16841, 377, 23475, 13, 50892, 50892, 400, 321, 393, 536, 983, 510, 13, 50972, 50972, 407, 294, 341, 10686, 510, 300, 286, 478, 4099, 11, 51176, 51176, 341, 307, 264, 21512, 300, 486, 312, 51252, 51252, 6263, 538, 16235, 23475, 294, 341, 37262, 2063, 51448, 51448, 2823, 13, 51494, 51494, 400, 382, 291, 536, 11, 264, 21512, 307, 406, 2997, 13, 51624, 51624, 467, 311, 406, 2997, 570, 264, 1185, 1709, 760, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13094663619995117, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.6958816559053957e-05}, {"id": 351, "seek": 99116, "start": 1016.36, "end": 1019.8399999999999, "text": " It's not straight because the system goes down", "tokens": [50364, 400, 370, 264, 3513, 12175, 538, 729, 14642, 50616, 50616, 307, 406, 4725, 264, 16841, 377, 23475, 13, 50700, 50700, 467, 1709, 39880, 11, 457, 309, 311, 406, 4725, 264, 16841, 377, 23475, 13, 50892, 50892, 400, 321, 393, 536, 983, 510, 13, 50972, 50972, 407, 294, 341, 10686, 510, 300, 286, 478, 4099, 11, 51176, 51176, 341, 307, 264, 21512, 300, 486, 312, 51252, 51252, 6263, 538, 16235, 23475, 294, 341, 37262, 2063, 51448, 51448, 2823, 13, 51494, 51494, 400, 382, 291, 536, 11, 264, 21512, 307, 406, 2997, 13, 51624, 51624, 467, 311, 406, 2997, 570, 264, 1185, 1709, 760, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13094663619995117, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.6958816559053957e-05}, {"id": 352, "seek": 101984, "start": 1019.84, "end": 1021.88, "text": " by following the slope of steepest descent.", "tokens": [50364, 538, 3480, 264, 13525, 295, 16841, 377, 23475, 13, 50466, 50466, 400, 370, 309, 1709, 760, 264, 17636, 949, 5006, 50638, 50638, 264, 7285, 295, 264, 17636, 11, 498, 291, 528, 13, 50748, 50748, 407, 498, 428, 2063, 2445, 307, 257, 707, 39470, 50844, 50844, 294, 472, 3513, 11, 309, 486, 352, 760, 264, 32987, 533, 50988, 50988, 293, 550, 1524, 264, 32987, 533, 3030, 264, 2767, 13, 51158, 51158, 682, 3997, 6851, 689, 291, 362, 721, 300, 366, 11, 51396, 51396, 264, 21512, 767, 307, 885, 1723, 510, 11, 51484, 51484, 457, 562, 264, 5503, 2445, 307, 5405, 29349, 11, 51772, 51772, 341, 1062, 754, 312, 544, 6179, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11601342652973376, "compression_ratio": 1.7056603773584906, "no_speech_prob": 1.2217816220072564e-05}, {"id": 353, "seek": 101984, "start": 1021.88, "end": 1025.32, "text": " And so it goes down the valley before finding", "tokens": [50364, 538, 3480, 264, 13525, 295, 16841, 377, 23475, 13, 50466, 50466, 400, 370, 309, 1709, 760, 264, 17636, 949, 5006, 50638, 50638, 264, 7285, 295, 264, 17636, 11, 498, 291, 528, 13, 50748, 50748, 407, 498, 428, 2063, 2445, 307, 257, 707, 39470, 50844, 50844, 294, 472, 3513, 11, 309, 486, 352, 760, 264, 32987, 533, 50988, 50988, 293, 550, 1524, 264, 32987, 533, 3030, 264, 2767, 13, 51158, 51158, 682, 3997, 6851, 689, 291, 362, 721, 300, 366, 11, 51396, 51396, 264, 21512, 767, 307, 885, 1723, 510, 11, 51484, 51484, 457, 562, 264, 5503, 2445, 307, 5405, 29349, 11, 51772, 51772, 341, 1062, 754, 312, 544, 6179, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11601342652973376, "compression_ratio": 1.7056603773584906, "no_speech_prob": 1.2217816220072564e-05}, {"id": 354, "seek": 101984, "start": 1025.32, "end": 1027.52, "text": " the minimum of the valley, if you want.", "tokens": [50364, 538, 3480, 264, 13525, 295, 16841, 377, 23475, 13, 50466, 50466, 400, 370, 309, 1709, 760, 264, 17636, 949, 5006, 50638, 50638, 264, 7285, 295, 264, 17636, 11, 498, 291, 528, 13, 50748, 50748, 407, 498, 428, 2063, 2445, 307, 257, 707, 39470, 50844, 50844, 294, 472, 3513, 11, 309, 486, 352, 760, 264, 32987, 533, 50988, 50988, 293, 550, 1524, 264, 32987, 533, 3030, 264, 2767, 13, 51158, 51158, 682, 3997, 6851, 689, 291, 362, 721, 300, 366, 11, 51396, 51396, 264, 21512, 767, 307, 885, 1723, 510, 11, 51484, 51484, 457, 562, 264, 5503, 2445, 307, 5405, 29349, 11, 51772, 51772, 341, 1062, 754, 312, 544, 6179, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11601342652973376, "compression_ratio": 1.7056603773584906, "no_speech_prob": 1.2217816220072564e-05}, {"id": 355, "seek": 101984, "start": 1027.52, "end": 1029.44, "text": " So if your cost function is a little squeezed", "tokens": [50364, 538, 3480, 264, 13525, 295, 16841, 377, 23475, 13, 50466, 50466, 400, 370, 309, 1709, 760, 264, 17636, 949, 5006, 50638, 50638, 264, 7285, 295, 264, 17636, 11, 498, 291, 528, 13, 50748, 50748, 407, 498, 428, 2063, 2445, 307, 257, 707, 39470, 50844, 50844, 294, 472, 3513, 11, 309, 486, 352, 760, 264, 32987, 533, 50988, 50988, 293, 550, 1524, 264, 32987, 533, 3030, 264, 2767, 13, 51158, 51158, 682, 3997, 6851, 689, 291, 362, 721, 300, 366, 11, 51396, 51396, 264, 21512, 767, 307, 885, 1723, 510, 11, 51484, 51484, 457, 562, 264, 5503, 2445, 307, 5405, 29349, 11, 51772, 51772, 341, 1062, 754, 312, 544, 6179, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11601342652973376, "compression_ratio": 1.7056603773584906, "no_speech_prob": 1.2217816220072564e-05}, {"id": 356, "seek": 101984, "start": 1029.44, "end": 1032.32, "text": " in one direction, it will go down the ravine", "tokens": [50364, 538, 3480, 264, 13525, 295, 16841, 377, 23475, 13, 50466, 50466, 400, 370, 309, 1709, 760, 264, 17636, 949, 5006, 50638, 50638, 264, 7285, 295, 264, 17636, 11, 498, 291, 528, 13, 50748, 50748, 407, 498, 428, 2063, 2445, 307, 257, 707, 39470, 50844, 50844, 294, 472, 3513, 11, 309, 486, 352, 760, 264, 32987, 533, 50988, 50988, 293, 550, 1524, 264, 32987, 533, 3030, 264, 2767, 13, 51158, 51158, 682, 3997, 6851, 689, 291, 362, 721, 300, 366, 11, 51396, 51396, 264, 21512, 767, 307, 885, 1723, 510, 11, 51484, 51484, 457, 562, 264, 5503, 2445, 307, 5405, 29349, 11, 51772, 51772, 341, 1062, 754, 312, 544, 6179, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11601342652973376, "compression_ratio": 1.7056603773584906, "no_speech_prob": 1.2217816220072564e-05}, {"id": 357, "seek": 101984, "start": 1032.32, "end": 1035.72, "text": " and then follow the ravine towards the bottom.", "tokens": [50364, 538, 3480, 264, 13525, 295, 16841, 377, 23475, 13, 50466, 50466, 400, 370, 309, 1709, 760, 264, 17636, 949, 5006, 50638, 50638, 264, 7285, 295, 264, 17636, 11, 498, 291, 528, 13, 50748, 50748, 407, 498, 428, 2063, 2445, 307, 257, 707, 39470, 50844, 50844, 294, 472, 3513, 11, 309, 486, 352, 760, 264, 32987, 533, 50988, 50988, 293, 550, 1524, 264, 32987, 533, 3030, 264, 2767, 13, 51158, 51158, 682, 3997, 6851, 689, 291, 362, 721, 300, 366, 11, 51396, 51396, 264, 21512, 767, 307, 885, 1723, 510, 11, 51484, 51484, 457, 562, 264, 5503, 2445, 307, 5405, 29349, 11, 51772, 51772, 341, 1062, 754, 312, 544, 6179, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11601342652973376, "compression_ratio": 1.7056603773584906, "no_speech_prob": 1.2217816220072564e-05}, {"id": 358, "seek": 101984, "start": 1035.72, "end": 1040.48, "text": " In complex situations where you have things that are,", "tokens": [50364, 538, 3480, 264, 13525, 295, 16841, 377, 23475, 13, 50466, 50466, 400, 370, 309, 1709, 760, 264, 17636, 949, 5006, 50638, 50638, 264, 7285, 295, 264, 17636, 11, 498, 291, 528, 13, 50748, 50748, 407, 498, 428, 2063, 2445, 307, 257, 707, 39470, 50844, 50844, 294, 472, 3513, 11, 309, 486, 352, 760, 264, 32987, 533, 50988, 50988, 293, 550, 1524, 264, 32987, 533, 3030, 264, 2767, 13, 51158, 51158, 682, 3997, 6851, 689, 291, 362, 721, 300, 366, 11, 51396, 51396, 264, 21512, 767, 307, 885, 1723, 510, 11, 51484, 51484, 457, 562, 264, 5503, 2445, 307, 5405, 29349, 11, 51772, 51772, 341, 1062, 754, 312, 544, 6179, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11601342652973376, "compression_ratio": 1.7056603773584906, "no_speech_prob": 1.2217816220072564e-05}, {"id": 359, "seek": 101984, "start": 1040.48, "end": 1042.24, "text": " the trajectory actually is being cut here,", "tokens": [50364, 538, 3480, 264, 13525, 295, 16841, 377, 23475, 13, 50466, 50466, 400, 370, 309, 1709, 760, 264, 17636, 949, 5006, 50638, 50638, 264, 7285, 295, 264, 17636, 11, 498, 291, 528, 13, 50748, 50748, 407, 498, 428, 2063, 2445, 307, 257, 707, 39470, 50844, 50844, 294, 472, 3513, 11, 309, 486, 352, 760, 264, 32987, 533, 50988, 50988, 293, 550, 1524, 264, 32987, 533, 3030, 264, 2767, 13, 51158, 51158, 682, 3997, 6851, 689, 291, 362, 721, 300, 366, 11, 51396, 51396, 264, 21512, 767, 307, 885, 1723, 510, 11, 51484, 51484, 457, 562, 264, 5503, 2445, 307, 5405, 29349, 11, 51772, 51772, 341, 1062, 754, 312, 544, 6179, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11601342652973376, "compression_ratio": 1.7056603773584906, "no_speech_prob": 1.2217816220072564e-05}, {"id": 360, "seek": 101984, "start": 1042.24, "end": 1048.0, "text": " but when the weather function is highly irregular,", "tokens": [50364, 538, 3480, 264, 13525, 295, 16841, 377, 23475, 13, 50466, 50466, 400, 370, 309, 1709, 760, 264, 17636, 949, 5006, 50638, 50638, 264, 7285, 295, 264, 17636, 11, 498, 291, 528, 13, 50748, 50748, 407, 498, 428, 2063, 2445, 307, 257, 707, 39470, 50844, 50844, 294, 472, 3513, 11, 309, 486, 352, 760, 264, 32987, 533, 50988, 50988, 293, 550, 1524, 264, 32987, 533, 3030, 264, 2767, 13, 51158, 51158, 682, 3997, 6851, 689, 291, 362, 721, 300, 366, 11, 51396, 51396, 264, 21512, 767, 307, 885, 1723, 510, 11, 51484, 51484, 457, 562, 264, 5503, 2445, 307, 5405, 29349, 11, 51772, 51772, 341, 1062, 754, 312, 544, 6179, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11601342652973376, "compression_ratio": 1.7056603773584906, "no_speech_prob": 1.2217816220072564e-05}, {"id": 361, "seek": 101984, "start": 1048.0, "end": 1049.76, "text": " this might even be more complicated.", "tokens": [50364, 538, 3480, 264, 13525, 295, 16841, 377, 23475, 13, 50466, 50466, 400, 370, 309, 1709, 760, 264, 17636, 949, 5006, 50638, 50638, 264, 7285, 295, 264, 17636, 11, 498, 291, 528, 13, 50748, 50748, 407, 498, 428, 2063, 2445, 307, 257, 707, 39470, 50844, 50844, 294, 472, 3513, 11, 309, 486, 352, 760, 264, 32987, 533, 50988, 50988, 293, 550, 1524, 264, 32987, 533, 3030, 264, 2767, 13, 51158, 51158, 682, 3997, 6851, 689, 291, 362, 721, 300, 366, 11, 51396, 51396, 264, 21512, 767, 307, 885, 1723, 510, 11, 51484, 51484, 457, 562, 264, 5503, 2445, 307, 5405, 29349, 11, 51772, 51772, 341, 1062, 754, 312, 544, 6179, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11601342652973376, "compression_ratio": 1.7056603773584906, "no_speech_prob": 1.2217816220072564e-05}, {"id": 362, "seek": 104976, "start": 1049.76, "end": 1053.32, "text": " And then you might have to be smart about what you do here.", "tokens": [50364, 400, 550, 291, 1062, 362, 281, 312, 4069, 466, 437, 291, 360, 510, 13, 50542, 50542, 2264, 11, 370, 342, 8997, 2750, 16235, 23475, 50644, 50644, 307, 43995, 1143, 294, 2452, 2539, 13, 50902, 50902, 400, 341, 307, 257, 4036, 26747, 51070, 51070, 295, 264, 16235, 16841, 377, 23475, 9284, 11, 51366, 51366, 689, 291, 500, 380, 14722, 264, 16235, 51520, 51520, 295, 264, 2302, 10024, 2445, 18247, 2980, 670, 439, 264, 10938, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11599261944110577, "compression_ratio": 1.594871794871795, "no_speech_prob": 1.3843519809597638e-05}, {"id": 363, "seek": 104976, "start": 1053.32, "end": 1055.36, "text": " OK, so stochastic gradient descent", "tokens": [50364, 400, 550, 291, 1062, 362, 281, 312, 4069, 466, 437, 291, 360, 510, 13, 50542, 50542, 2264, 11, 370, 342, 8997, 2750, 16235, 23475, 50644, 50644, 307, 43995, 1143, 294, 2452, 2539, 13, 50902, 50902, 400, 341, 307, 257, 4036, 26747, 51070, 51070, 295, 264, 16235, 16841, 377, 23475, 9284, 11, 51366, 51366, 689, 291, 500, 380, 14722, 264, 16235, 51520, 51520, 295, 264, 2302, 10024, 2445, 18247, 2980, 670, 439, 264, 10938, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11599261944110577, "compression_ratio": 1.594871794871795, "no_speech_prob": 1.3843519809597638e-05}, {"id": 364, "seek": 104976, "start": 1055.36, "end": 1060.52, "text": " is universally used in deep learning.", "tokens": [50364, 400, 550, 291, 1062, 362, 281, 312, 4069, 466, 437, 291, 360, 510, 13, 50542, 50542, 2264, 11, 370, 342, 8997, 2750, 16235, 23475, 50644, 50644, 307, 43995, 1143, 294, 2452, 2539, 13, 50902, 50902, 400, 341, 307, 257, 4036, 26747, 51070, 51070, 295, 264, 16235, 16841, 377, 23475, 9284, 11, 51366, 51366, 689, 291, 500, 380, 14722, 264, 16235, 51520, 51520, 295, 264, 2302, 10024, 2445, 18247, 2980, 670, 439, 264, 10938, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11599261944110577, "compression_ratio": 1.594871794871795, "no_speech_prob": 1.3843519809597638e-05}, {"id": 365, "seek": 104976, "start": 1060.52, "end": 1063.8799999999999, "text": " And this is a slight modification", "tokens": [50364, 400, 550, 291, 1062, 362, 281, 312, 4069, 466, 437, 291, 360, 510, 13, 50542, 50542, 2264, 11, 370, 342, 8997, 2750, 16235, 23475, 50644, 50644, 307, 43995, 1143, 294, 2452, 2539, 13, 50902, 50902, 400, 341, 307, 257, 4036, 26747, 51070, 51070, 295, 264, 16235, 16841, 377, 23475, 9284, 11, 51366, 51366, 689, 291, 500, 380, 14722, 264, 16235, 51520, 51520, 295, 264, 2302, 10024, 2445, 18247, 2980, 670, 439, 264, 10938, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11599261944110577, "compression_ratio": 1.594871794871795, "no_speech_prob": 1.3843519809597638e-05}, {"id": 366, "seek": 104976, "start": 1063.8799999999999, "end": 1069.8, "text": " of the gradient steepest descent algorithm,", "tokens": [50364, 400, 550, 291, 1062, 362, 281, 312, 4069, 466, 437, 291, 360, 510, 13, 50542, 50542, 2264, 11, 370, 342, 8997, 2750, 16235, 23475, 50644, 50644, 307, 43995, 1143, 294, 2452, 2539, 13, 50902, 50902, 400, 341, 307, 257, 4036, 26747, 51070, 51070, 295, 264, 16235, 16841, 377, 23475, 9284, 11, 51366, 51366, 689, 291, 500, 380, 14722, 264, 16235, 51520, 51520, 295, 264, 2302, 10024, 2445, 18247, 2980, 670, 439, 264, 10938, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11599261944110577, "compression_ratio": 1.594871794871795, "no_speech_prob": 1.3843519809597638e-05}, {"id": 367, "seek": 104976, "start": 1069.8, "end": 1072.8799999999999, "text": " where you don't compute the gradient", "tokens": [50364, 400, 550, 291, 1062, 362, 281, 312, 4069, 466, 437, 291, 360, 510, 13, 50542, 50542, 2264, 11, 370, 342, 8997, 2750, 16235, 23475, 50644, 50644, 307, 43995, 1143, 294, 2452, 2539, 13, 50902, 50902, 400, 341, 307, 257, 4036, 26747, 51070, 51070, 295, 264, 16235, 16841, 377, 23475, 9284, 11, 51366, 51366, 689, 291, 500, 380, 14722, 264, 16235, 51520, 51520, 295, 264, 2302, 10024, 2445, 18247, 2980, 670, 439, 264, 10938, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11599261944110577, "compression_ratio": 1.594871794871795, "no_speech_prob": 1.3843519809597638e-05}, {"id": 368, "seek": 104976, "start": 1072.8799999999999, "end": 1078.32, "text": " of the entire objective function averaged over all the samples.", "tokens": [50364, 400, 550, 291, 1062, 362, 281, 312, 4069, 466, 437, 291, 360, 510, 13, 50542, 50542, 2264, 11, 370, 342, 8997, 2750, 16235, 23475, 50644, 50644, 307, 43995, 1143, 294, 2452, 2539, 13, 50902, 50902, 400, 341, 307, 257, 4036, 26747, 51070, 51070, 295, 264, 16235, 16841, 377, 23475, 9284, 11, 51366, 51366, 689, 291, 500, 380, 14722, 264, 16235, 51520, 51520, 295, 264, 2302, 10024, 2445, 18247, 2980, 670, 439, 264, 10938, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.11599261944110577, "compression_ratio": 1.594871794871795, "no_speech_prob": 1.3843519809597638e-05}, {"id": 369, "seek": 107832, "start": 1078.32, "end": 1081.12, "text": " But what you do is you take one sample", "tokens": [50364, 583, 437, 291, 360, 307, 291, 747, 472, 6889, 50504, 50504, 293, 291, 14722, 264, 16235, 295, 264, 10024, 2445, 50616, 50616, 337, 300, 472, 6889, 365, 3104, 281, 264, 9834, 11, 50794, 50794, 293, 291, 747, 257, 1823, 13, 50932, 50932, 400, 291, 1066, 884, 341, 13, 51034, 51034, 509, 1888, 1071, 6889, 11, 14722, 264, 16235, 51126, 51126, 295, 264, 10024, 2445, 337, 300, 6889, 365, 3104, 51270, 51270, 281, 264, 636, 309, 311, 1455, 364, 5623, 13, 51392, 51392, 708, 307, 309, 1219, 342, 8997, 2750, 16235, 30, 51468, 51468, 745, 8997, 2750, 307, 257, 10247, 1433, 337, 4974, 11, 4476, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11906435730260446, "compression_ratio": 1.9216589861751152, "no_speech_prob": 7.2956731855811086e-06}, {"id": 370, "seek": 107832, "start": 1081.12, "end": 1083.36, "text": " and you compute the gradient of the objective function", "tokens": [50364, 583, 437, 291, 360, 307, 291, 747, 472, 6889, 50504, 50504, 293, 291, 14722, 264, 16235, 295, 264, 10024, 2445, 50616, 50616, 337, 300, 472, 6889, 365, 3104, 281, 264, 9834, 11, 50794, 50794, 293, 291, 747, 257, 1823, 13, 50932, 50932, 400, 291, 1066, 884, 341, 13, 51034, 51034, 509, 1888, 1071, 6889, 11, 14722, 264, 16235, 51126, 51126, 295, 264, 10024, 2445, 337, 300, 6889, 365, 3104, 51270, 51270, 281, 264, 636, 309, 311, 1455, 364, 5623, 13, 51392, 51392, 708, 307, 309, 1219, 342, 8997, 2750, 16235, 30, 51468, 51468, 745, 8997, 2750, 307, 257, 10247, 1433, 337, 4974, 11, 4476, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11906435730260446, "compression_ratio": 1.9216589861751152, "no_speech_prob": 7.2956731855811086e-06}, {"id": 371, "seek": 107832, "start": 1083.36, "end": 1086.9199999999998, "text": " for that one sample with respect to the parameters,", "tokens": [50364, 583, 437, 291, 360, 307, 291, 747, 472, 6889, 50504, 50504, 293, 291, 14722, 264, 16235, 295, 264, 10024, 2445, 50616, 50616, 337, 300, 472, 6889, 365, 3104, 281, 264, 9834, 11, 50794, 50794, 293, 291, 747, 257, 1823, 13, 50932, 50932, 400, 291, 1066, 884, 341, 13, 51034, 51034, 509, 1888, 1071, 6889, 11, 14722, 264, 16235, 51126, 51126, 295, 264, 10024, 2445, 337, 300, 6889, 365, 3104, 51270, 51270, 281, 264, 636, 309, 311, 1455, 364, 5623, 13, 51392, 51392, 708, 307, 309, 1219, 342, 8997, 2750, 16235, 30, 51468, 51468, 745, 8997, 2750, 307, 257, 10247, 1433, 337, 4974, 11, 4476, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11906435730260446, "compression_ratio": 1.9216589861751152, "no_speech_prob": 7.2956731855811086e-06}, {"id": 372, "seek": 107832, "start": 1086.9199999999998, "end": 1089.6799999999998, "text": " and you take a step.", "tokens": [50364, 583, 437, 291, 360, 307, 291, 747, 472, 6889, 50504, 50504, 293, 291, 14722, 264, 16235, 295, 264, 10024, 2445, 50616, 50616, 337, 300, 472, 6889, 365, 3104, 281, 264, 9834, 11, 50794, 50794, 293, 291, 747, 257, 1823, 13, 50932, 50932, 400, 291, 1066, 884, 341, 13, 51034, 51034, 509, 1888, 1071, 6889, 11, 14722, 264, 16235, 51126, 51126, 295, 264, 10024, 2445, 337, 300, 6889, 365, 3104, 51270, 51270, 281, 264, 636, 309, 311, 1455, 364, 5623, 13, 51392, 51392, 708, 307, 309, 1219, 342, 8997, 2750, 16235, 30, 51468, 51468, 745, 8997, 2750, 307, 257, 10247, 1433, 337, 4974, 11, 4476, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11906435730260446, "compression_ratio": 1.9216589861751152, "no_speech_prob": 7.2956731855811086e-06}, {"id": 373, "seek": 107832, "start": 1089.6799999999998, "end": 1091.72, "text": " And you keep doing this.", "tokens": [50364, 583, 437, 291, 360, 307, 291, 747, 472, 6889, 50504, 50504, 293, 291, 14722, 264, 16235, 295, 264, 10024, 2445, 50616, 50616, 337, 300, 472, 6889, 365, 3104, 281, 264, 9834, 11, 50794, 50794, 293, 291, 747, 257, 1823, 13, 50932, 50932, 400, 291, 1066, 884, 341, 13, 51034, 51034, 509, 1888, 1071, 6889, 11, 14722, 264, 16235, 51126, 51126, 295, 264, 10024, 2445, 337, 300, 6889, 365, 3104, 51270, 51270, 281, 264, 636, 309, 311, 1455, 364, 5623, 13, 51392, 51392, 708, 307, 309, 1219, 342, 8997, 2750, 16235, 30, 51468, 51468, 745, 8997, 2750, 307, 257, 10247, 1433, 337, 4974, 11, 4476, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11906435730260446, "compression_ratio": 1.9216589861751152, "no_speech_prob": 7.2956731855811086e-06}, {"id": 374, "seek": 107832, "start": 1091.72, "end": 1093.56, "text": " You pick another sample, compute the gradient", "tokens": [50364, 583, 437, 291, 360, 307, 291, 747, 472, 6889, 50504, 50504, 293, 291, 14722, 264, 16235, 295, 264, 10024, 2445, 50616, 50616, 337, 300, 472, 6889, 365, 3104, 281, 264, 9834, 11, 50794, 50794, 293, 291, 747, 257, 1823, 13, 50932, 50932, 400, 291, 1066, 884, 341, 13, 51034, 51034, 509, 1888, 1071, 6889, 11, 14722, 264, 16235, 51126, 51126, 295, 264, 10024, 2445, 337, 300, 6889, 365, 3104, 51270, 51270, 281, 264, 636, 309, 311, 1455, 364, 5623, 13, 51392, 51392, 708, 307, 309, 1219, 342, 8997, 2750, 16235, 30, 51468, 51468, 745, 8997, 2750, 307, 257, 10247, 1433, 337, 4974, 11, 4476, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11906435730260446, "compression_ratio": 1.9216589861751152, "no_speech_prob": 7.2956731855811086e-06}, {"id": 375, "seek": 107832, "start": 1093.56, "end": 1096.4399999999998, "text": " of the objective function for that sample with respect", "tokens": [50364, 583, 437, 291, 360, 307, 291, 747, 472, 6889, 50504, 50504, 293, 291, 14722, 264, 16235, 295, 264, 10024, 2445, 50616, 50616, 337, 300, 472, 6889, 365, 3104, 281, 264, 9834, 11, 50794, 50794, 293, 291, 747, 257, 1823, 13, 50932, 50932, 400, 291, 1066, 884, 341, 13, 51034, 51034, 509, 1888, 1071, 6889, 11, 14722, 264, 16235, 51126, 51126, 295, 264, 10024, 2445, 337, 300, 6889, 365, 3104, 51270, 51270, 281, 264, 636, 309, 311, 1455, 364, 5623, 13, 51392, 51392, 708, 307, 309, 1219, 342, 8997, 2750, 16235, 30, 51468, 51468, 745, 8997, 2750, 307, 257, 10247, 1433, 337, 4974, 11, 4476, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11906435730260446, "compression_ratio": 1.9216589861751152, "no_speech_prob": 7.2956731855811086e-06}, {"id": 376, "seek": 107832, "start": 1096.4399999999998, "end": 1098.8799999999999, "text": " to the way it's making an update.", "tokens": [50364, 583, 437, 291, 360, 307, 291, 747, 472, 6889, 50504, 50504, 293, 291, 14722, 264, 16235, 295, 264, 10024, 2445, 50616, 50616, 337, 300, 472, 6889, 365, 3104, 281, 264, 9834, 11, 50794, 50794, 293, 291, 747, 257, 1823, 13, 50932, 50932, 400, 291, 1066, 884, 341, 13, 51034, 51034, 509, 1888, 1071, 6889, 11, 14722, 264, 16235, 51126, 51126, 295, 264, 10024, 2445, 337, 300, 6889, 365, 3104, 51270, 51270, 281, 264, 636, 309, 311, 1455, 364, 5623, 13, 51392, 51392, 708, 307, 309, 1219, 342, 8997, 2750, 16235, 30, 51468, 51468, 745, 8997, 2750, 307, 257, 10247, 1433, 337, 4974, 11, 4476, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11906435730260446, "compression_ratio": 1.9216589861751152, "no_speech_prob": 7.2956731855811086e-06}, {"id": 377, "seek": 107832, "start": 1098.8799999999999, "end": 1100.3999999999999, "text": " What is it called stochastic gradient?", "tokens": [50364, 583, 437, 291, 360, 307, 291, 747, 472, 6889, 50504, 50504, 293, 291, 14722, 264, 16235, 295, 264, 10024, 2445, 50616, 50616, 337, 300, 472, 6889, 365, 3104, 281, 264, 9834, 11, 50794, 50794, 293, 291, 747, 257, 1823, 13, 50932, 50932, 400, 291, 1066, 884, 341, 13, 51034, 51034, 509, 1888, 1071, 6889, 11, 14722, 264, 16235, 51126, 51126, 295, 264, 10024, 2445, 337, 300, 6889, 365, 3104, 51270, 51270, 281, 264, 636, 309, 311, 1455, 364, 5623, 13, 51392, 51392, 708, 307, 309, 1219, 342, 8997, 2750, 16235, 30, 51468, 51468, 745, 8997, 2750, 307, 257, 10247, 1433, 337, 4974, 11, 4476, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11906435730260446, "compression_ratio": 1.9216589861751152, "no_speech_prob": 7.2956731855811086e-06}, {"id": 378, "seek": 107832, "start": 1100.3999999999999, "end": 1107.24, "text": " Stochastic is a fancy term for random, essentially.", "tokens": [50364, 583, 437, 291, 360, 307, 291, 747, 472, 6889, 50504, 50504, 293, 291, 14722, 264, 16235, 295, 264, 10024, 2445, 50616, 50616, 337, 300, 472, 6889, 365, 3104, 281, 264, 9834, 11, 50794, 50794, 293, 291, 747, 257, 1823, 13, 50932, 50932, 400, 291, 1066, 884, 341, 13, 51034, 51034, 509, 1888, 1071, 6889, 11, 14722, 264, 16235, 51126, 51126, 295, 264, 10024, 2445, 337, 300, 6889, 365, 3104, 51270, 51270, 281, 264, 636, 309, 311, 1455, 364, 5623, 13, 51392, 51392, 708, 307, 309, 1219, 342, 8997, 2750, 16235, 30, 51468, 51468, 745, 8997, 2750, 307, 257, 10247, 1433, 337, 4974, 11, 4476, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11906435730260446, "compression_ratio": 1.9216589861751152, "no_speech_prob": 7.2956731855811086e-06}, {"id": 379, "seek": 110724, "start": 1107.24, "end": 1110.1200000000001, "text": " And it's called stochastic because the evaluation", "tokens": [50364, 400, 309, 311, 1219, 342, 8997, 2750, 570, 264, 13344, 50508, 50508, 295, 264, 16235, 291, 483, 322, 264, 5143, 295, 257, 2167, 6889, 50680, 50680, 307, 257, 24518, 12539, 295, 264, 1577, 16235, 13, 50838, 50838, 440, 4274, 295, 264, 2771, 2448, 11, 570, 264, 16235, 50978, 50978, 307, 257, 8213, 6916, 11, 264, 4274, 295, 264, 2771, 2448, 51078, 51078, 486, 312, 264, 16235, 295, 264, 4274, 13, 51168, 51168, 400, 370, 721, 589, 484, 13, 51220, 51220, 759, 291, 14722, 264, 16235, 293, 291, 1066, 516, 11, 51394, 51394, 4787, 11, 264, 4274, 21512, 486, 51482, 51482, 312, 264, 21512, 291, 576, 362, 6263, 51622, 51622, 538, 884, 257, 1577, 16235, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09776584240568786, "compression_ratio": 2.0086580086580086, "no_speech_prob": 6.961812687222846e-06}, {"id": 380, "seek": 110724, "start": 1110.1200000000001, "end": 1113.56, "text": " of the gradient you get on the basis of a single sample", "tokens": [50364, 400, 309, 311, 1219, 342, 8997, 2750, 570, 264, 13344, 50508, 50508, 295, 264, 16235, 291, 483, 322, 264, 5143, 295, 257, 2167, 6889, 50680, 50680, 307, 257, 24518, 12539, 295, 264, 1577, 16235, 13, 50838, 50838, 440, 4274, 295, 264, 2771, 2448, 11, 570, 264, 16235, 50978, 50978, 307, 257, 8213, 6916, 11, 264, 4274, 295, 264, 2771, 2448, 51078, 51078, 486, 312, 264, 16235, 295, 264, 4274, 13, 51168, 51168, 400, 370, 721, 589, 484, 13, 51220, 51220, 759, 291, 14722, 264, 16235, 293, 291, 1066, 516, 11, 51394, 51394, 4787, 11, 264, 4274, 21512, 486, 51482, 51482, 312, 264, 21512, 291, 576, 362, 6263, 51622, 51622, 538, 884, 257, 1577, 16235, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09776584240568786, "compression_ratio": 2.0086580086580086, "no_speech_prob": 6.961812687222846e-06}, {"id": 381, "seek": 110724, "start": 1113.56, "end": 1116.72, "text": " is a noisy estimate of the full gradient.", "tokens": [50364, 400, 309, 311, 1219, 342, 8997, 2750, 570, 264, 13344, 50508, 50508, 295, 264, 16235, 291, 483, 322, 264, 5143, 295, 257, 2167, 6889, 50680, 50680, 307, 257, 24518, 12539, 295, 264, 1577, 16235, 13, 50838, 50838, 440, 4274, 295, 264, 2771, 2448, 11, 570, 264, 16235, 50978, 50978, 307, 257, 8213, 6916, 11, 264, 4274, 295, 264, 2771, 2448, 51078, 51078, 486, 312, 264, 16235, 295, 264, 4274, 13, 51168, 51168, 400, 370, 721, 589, 484, 13, 51220, 51220, 759, 291, 14722, 264, 16235, 293, 291, 1066, 516, 11, 51394, 51394, 4787, 11, 264, 4274, 21512, 486, 51482, 51482, 312, 264, 21512, 291, 576, 362, 6263, 51622, 51622, 538, 884, 257, 1577, 16235, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09776584240568786, "compression_ratio": 2.0086580086580086, "no_speech_prob": 6.961812687222846e-06}, {"id": 382, "seek": 110724, "start": 1116.72, "end": 1119.52, "text": " The average of the gradients, because the gradient", "tokens": [50364, 400, 309, 311, 1219, 342, 8997, 2750, 570, 264, 13344, 50508, 50508, 295, 264, 16235, 291, 483, 322, 264, 5143, 295, 257, 2167, 6889, 50680, 50680, 307, 257, 24518, 12539, 295, 264, 1577, 16235, 13, 50838, 50838, 440, 4274, 295, 264, 2771, 2448, 11, 570, 264, 16235, 50978, 50978, 307, 257, 8213, 6916, 11, 264, 4274, 295, 264, 2771, 2448, 51078, 51078, 486, 312, 264, 16235, 295, 264, 4274, 13, 51168, 51168, 400, 370, 721, 589, 484, 13, 51220, 51220, 759, 291, 14722, 264, 16235, 293, 291, 1066, 516, 11, 51394, 51394, 4787, 11, 264, 4274, 21512, 486, 51482, 51482, 312, 264, 21512, 291, 576, 362, 6263, 51622, 51622, 538, 884, 257, 1577, 16235, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09776584240568786, "compression_ratio": 2.0086580086580086, "no_speech_prob": 6.961812687222846e-06}, {"id": 383, "seek": 110724, "start": 1119.52, "end": 1121.52, "text": " is a linear operation, the average of the gradients", "tokens": [50364, 400, 309, 311, 1219, 342, 8997, 2750, 570, 264, 13344, 50508, 50508, 295, 264, 16235, 291, 483, 322, 264, 5143, 295, 257, 2167, 6889, 50680, 50680, 307, 257, 24518, 12539, 295, 264, 1577, 16235, 13, 50838, 50838, 440, 4274, 295, 264, 2771, 2448, 11, 570, 264, 16235, 50978, 50978, 307, 257, 8213, 6916, 11, 264, 4274, 295, 264, 2771, 2448, 51078, 51078, 486, 312, 264, 16235, 295, 264, 4274, 13, 51168, 51168, 400, 370, 721, 589, 484, 13, 51220, 51220, 759, 291, 14722, 264, 16235, 293, 291, 1066, 516, 11, 51394, 51394, 4787, 11, 264, 4274, 21512, 486, 51482, 51482, 312, 264, 21512, 291, 576, 362, 6263, 51622, 51622, 538, 884, 257, 1577, 16235, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09776584240568786, "compression_ratio": 2.0086580086580086, "no_speech_prob": 6.961812687222846e-06}, {"id": 384, "seek": 110724, "start": 1121.52, "end": 1123.32, "text": " will be the gradient of the average.", "tokens": [50364, 400, 309, 311, 1219, 342, 8997, 2750, 570, 264, 13344, 50508, 50508, 295, 264, 16235, 291, 483, 322, 264, 5143, 295, 257, 2167, 6889, 50680, 50680, 307, 257, 24518, 12539, 295, 264, 1577, 16235, 13, 50838, 50838, 440, 4274, 295, 264, 2771, 2448, 11, 570, 264, 16235, 50978, 50978, 307, 257, 8213, 6916, 11, 264, 4274, 295, 264, 2771, 2448, 51078, 51078, 486, 312, 264, 16235, 295, 264, 4274, 13, 51168, 51168, 400, 370, 721, 589, 484, 13, 51220, 51220, 759, 291, 14722, 264, 16235, 293, 291, 1066, 516, 11, 51394, 51394, 4787, 11, 264, 4274, 21512, 486, 51482, 51482, 312, 264, 21512, 291, 576, 362, 6263, 51622, 51622, 538, 884, 257, 1577, 16235, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09776584240568786, "compression_ratio": 2.0086580086580086, "no_speech_prob": 6.961812687222846e-06}, {"id": 385, "seek": 110724, "start": 1123.32, "end": 1124.36, "text": " And so things work out.", "tokens": [50364, 400, 309, 311, 1219, 342, 8997, 2750, 570, 264, 13344, 50508, 50508, 295, 264, 16235, 291, 483, 322, 264, 5143, 295, 257, 2167, 6889, 50680, 50680, 307, 257, 24518, 12539, 295, 264, 1577, 16235, 13, 50838, 50838, 440, 4274, 295, 264, 2771, 2448, 11, 570, 264, 16235, 50978, 50978, 307, 257, 8213, 6916, 11, 264, 4274, 295, 264, 2771, 2448, 51078, 51078, 486, 312, 264, 16235, 295, 264, 4274, 13, 51168, 51168, 400, 370, 721, 589, 484, 13, 51220, 51220, 759, 291, 14722, 264, 16235, 293, 291, 1066, 516, 11, 51394, 51394, 4787, 11, 264, 4274, 21512, 486, 51482, 51482, 312, 264, 21512, 291, 576, 362, 6263, 51622, 51622, 538, 884, 257, 1577, 16235, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09776584240568786, "compression_ratio": 2.0086580086580086, "no_speech_prob": 6.961812687222846e-06}, {"id": 386, "seek": 110724, "start": 1124.36, "end": 1127.84, "text": " If you compute the gradient and you keep going,", "tokens": [50364, 400, 309, 311, 1219, 342, 8997, 2750, 570, 264, 13344, 50508, 50508, 295, 264, 16235, 291, 483, 322, 264, 5143, 295, 257, 2167, 6889, 50680, 50680, 307, 257, 24518, 12539, 295, 264, 1577, 16235, 13, 50838, 50838, 440, 4274, 295, 264, 2771, 2448, 11, 570, 264, 16235, 50978, 50978, 307, 257, 8213, 6916, 11, 264, 4274, 295, 264, 2771, 2448, 51078, 51078, 486, 312, 264, 16235, 295, 264, 4274, 13, 51168, 51168, 400, 370, 721, 589, 484, 13, 51220, 51220, 759, 291, 14722, 264, 16235, 293, 291, 1066, 516, 11, 51394, 51394, 4787, 11, 264, 4274, 21512, 486, 51482, 51482, 312, 264, 21512, 291, 576, 362, 6263, 51622, 51622, 538, 884, 257, 1577, 16235, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09776584240568786, "compression_ratio": 2.0086580086580086, "no_speech_prob": 6.961812687222846e-06}, {"id": 387, "seek": 110724, "start": 1127.84, "end": 1129.6, "text": " overall, the average trajectory will", "tokens": [50364, 400, 309, 311, 1219, 342, 8997, 2750, 570, 264, 13344, 50508, 50508, 295, 264, 16235, 291, 483, 322, 264, 5143, 295, 257, 2167, 6889, 50680, 50680, 307, 257, 24518, 12539, 295, 264, 1577, 16235, 13, 50838, 50838, 440, 4274, 295, 264, 2771, 2448, 11, 570, 264, 16235, 50978, 50978, 307, 257, 8213, 6916, 11, 264, 4274, 295, 264, 2771, 2448, 51078, 51078, 486, 312, 264, 16235, 295, 264, 4274, 13, 51168, 51168, 400, 370, 721, 589, 484, 13, 51220, 51220, 759, 291, 14722, 264, 16235, 293, 291, 1066, 516, 11, 51394, 51394, 4787, 11, 264, 4274, 21512, 486, 51482, 51482, 312, 264, 21512, 291, 576, 362, 6263, 51622, 51622, 538, 884, 257, 1577, 16235, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09776584240568786, "compression_ratio": 2.0086580086580086, "no_speech_prob": 6.961812687222846e-06}, {"id": 388, "seek": 110724, "start": 1129.6, "end": 1132.4, "text": " be the trajectory you would have followed", "tokens": [50364, 400, 309, 311, 1219, 342, 8997, 2750, 570, 264, 13344, 50508, 50508, 295, 264, 16235, 291, 483, 322, 264, 5143, 295, 257, 2167, 6889, 50680, 50680, 307, 257, 24518, 12539, 295, 264, 1577, 16235, 13, 50838, 50838, 440, 4274, 295, 264, 2771, 2448, 11, 570, 264, 16235, 50978, 50978, 307, 257, 8213, 6916, 11, 264, 4274, 295, 264, 2771, 2448, 51078, 51078, 486, 312, 264, 16235, 295, 264, 4274, 13, 51168, 51168, 400, 370, 721, 589, 484, 13, 51220, 51220, 759, 291, 14722, 264, 16235, 293, 291, 1066, 516, 11, 51394, 51394, 4787, 11, 264, 4274, 21512, 486, 51482, 51482, 312, 264, 21512, 291, 576, 362, 6263, 51622, 51622, 538, 884, 257, 1577, 16235, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09776584240568786, "compression_ratio": 2.0086580086580086, "no_speech_prob": 6.961812687222846e-06}, {"id": 389, "seek": 110724, "start": 1132.4, "end": 1136.0, "text": " by doing a full gradient.", "tokens": [50364, 400, 309, 311, 1219, 342, 8997, 2750, 570, 264, 13344, 50508, 50508, 295, 264, 16235, 291, 483, 322, 264, 5143, 295, 257, 2167, 6889, 50680, 50680, 307, 257, 24518, 12539, 295, 264, 1577, 16235, 13, 50838, 50838, 440, 4274, 295, 264, 2771, 2448, 11, 570, 264, 16235, 50978, 50978, 307, 257, 8213, 6916, 11, 264, 4274, 295, 264, 2771, 2448, 51078, 51078, 486, 312, 264, 16235, 295, 264, 4274, 13, 51168, 51168, 400, 370, 721, 589, 484, 13, 51220, 51220, 759, 291, 14722, 264, 16235, 293, 291, 1066, 516, 11, 51394, 51394, 4787, 11, 264, 4274, 21512, 486, 51482, 51482, 312, 264, 21512, 291, 576, 362, 6263, 51622, 51622, 538, 884, 257, 1577, 16235, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09776584240568786, "compression_ratio": 2.0086580086580086, "no_speech_prob": 6.961812687222846e-06}, {"id": 390, "seek": 113600, "start": 1136.0, "end": 1138.68, "text": " But in fact, the reason we're doing this", "tokens": [50364, 583, 294, 1186, 11, 264, 1778, 321, 434, 884, 341, 50498, 50498, 307, 570, 309, 311, 709, 544, 7148, 294, 2115, 50626, 50626, 295, 3073, 295, 32181, 13, 50686, 50686, 407, 4878, 264, 21512, 6263, 538, 342, 8997, 2750, 16235, 50892, 50892, 307, 588, 24518, 11, 721, 393, 15894, 926, 257, 688, 13, 51066, 51066, 1018, 291, 393, 536, 294, 264, 21512, 510, 412, 264, 2767, 11, 51280, 51280, 264, 21512, 307, 588, 1189, 25198, 13, 51374, 51374, 583, 294, 1186, 11, 309, 1709, 281, 264, 2767, 4663, 13, 51520, 51520, 400, 309, 575, 661, 14906, 300, 561, 366, 920, 51626, 51626, 3579, 10577, 322, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.10968698154796254, "compression_ratio": 1.6857142857142857, "no_speech_prob": 6.240607490326511e-06}, {"id": 391, "seek": 113600, "start": 1138.68, "end": 1141.24, "text": " is because it's much more efficient in terms", "tokens": [50364, 583, 294, 1186, 11, 264, 1778, 321, 434, 884, 341, 50498, 50498, 307, 570, 309, 311, 709, 544, 7148, 294, 2115, 50626, 50626, 295, 3073, 295, 32181, 13, 50686, 50686, 407, 4878, 264, 21512, 6263, 538, 342, 8997, 2750, 16235, 50892, 50892, 307, 588, 24518, 11, 721, 393, 15894, 926, 257, 688, 13, 51066, 51066, 1018, 291, 393, 536, 294, 264, 21512, 510, 412, 264, 2767, 11, 51280, 51280, 264, 21512, 307, 588, 1189, 25198, 13, 51374, 51374, 583, 294, 1186, 11, 309, 1709, 281, 264, 2767, 4663, 13, 51520, 51520, 400, 309, 575, 661, 14906, 300, 561, 366, 920, 51626, 51626, 3579, 10577, 322, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.10968698154796254, "compression_ratio": 1.6857142857142857, "no_speech_prob": 6.240607490326511e-06}, {"id": 392, "seek": 113600, "start": 1141.24, "end": 1142.44, "text": " of speed of convergence.", "tokens": [50364, 583, 294, 1186, 11, 264, 1778, 321, 434, 884, 341, 50498, 50498, 307, 570, 309, 311, 709, 544, 7148, 294, 2115, 50626, 50626, 295, 3073, 295, 32181, 13, 50686, 50686, 407, 4878, 264, 21512, 6263, 538, 342, 8997, 2750, 16235, 50892, 50892, 307, 588, 24518, 11, 721, 393, 15894, 926, 257, 688, 13, 51066, 51066, 1018, 291, 393, 536, 294, 264, 21512, 510, 412, 264, 2767, 11, 51280, 51280, 264, 21512, 307, 588, 1189, 25198, 13, 51374, 51374, 583, 294, 1186, 11, 309, 1709, 281, 264, 2767, 4663, 13, 51520, 51520, 400, 309, 575, 661, 14906, 300, 561, 366, 920, 51626, 51626, 3579, 10577, 322, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.10968698154796254, "compression_ratio": 1.6857142857142857, "no_speech_prob": 6.240607490326511e-06}, {"id": 393, "seek": 113600, "start": 1142.44, "end": 1146.56, "text": " So although the trajectory followed by stochastic gradient", "tokens": [50364, 583, 294, 1186, 11, 264, 1778, 321, 434, 884, 341, 50498, 50498, 307, 570, 309, 311, 709, 544, 7148, 294, 2115, 50626, 50626, 295, 3073, 295, 32181, 13, 50686, 50686, 407, 4878, 264, 21512, 6263, 538, 342, 8997, 2750, 16235, 50892, 50892, 307, 588, 24518, 11, 721, 393, 15894, 926, 257, 688, 13, 51066, 51066, 1018, 291, 393, 536, 294, 264, 21512, 510, 412, 264, 2767, 11, 51280, 51280, 264, 21512, 307, 588, 1189, 25198, 13, 51374, 51374, 583, 294, 1186, 11, 309, 1709, 281, 264, 2767, 4663, 13, 51520, 51520, 400, 309, 575, 661, 14906, 300, 561, 366, 920, 51626, 51626, 3579, 10577, 322, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.10968698154796254, "compression_ratio": 1.6857142857142857, "no_speech_prob": 6.240607490326511e-06}, {"id": 394, "seek": 113600, "start": 1146.56, "end": 1150.04, "text": " is very noisy, things can bounce around a lot.", "tokens": [50364, 583, 294, 1186, 11, 264, 1778, 321, 434, 884, 341, 50498, 50498, 307, 570, 309, 311, 709, 544, 7148, 294, 2115, 50626, 50626, 295, 3073, 295, 32181, 13, 50686, 50686, 407, 4878, 264, 21512, 6263, 538, 342, 8997, 2750, 16235, 50892, 50892, 307, 588, 24518, 11, 721, 393, 15894, 926, 257, 688, 13, 51066, 51066, 1018, 291, 393, 536, 294, 264, 21512, 510, 412, 264, 2767, 11, 51280, 51280, 264, 21512, 307, 588, 1189, 25198, 13, 51374, 51374, 583, 294, 1186, 11, 309, 1709, 281, 264, 2767, 4663, 13, 51520, 51520, 400, 309, 575, 661, 14906, 300, 561, 366, 920, 51626, 51626, 3579, 10577, 322, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.10968698154796254, "compression_ratio": 1.6857142857142857, "no_speech_prob": 6.240607490326511e-06}, {"id": 395, "seek": 113600, "start": 1150.04, "end": 1154.32, "text": " As you can see in the trajectory here at the bottom,", "tokens": [50364, 583, 294, 1186, 11, 264, 1778, 321, 434, 884, 341, 50498, 50498, 307, 570, 309, 311, 709, 544, 7148, 294, 2115, 50626, 50626, 295, 3073, 295, 32181, 13, 50686, 50686, 407, 4878, 264, 21512, 6263, 538, 342, 8997, 2750, 16235, 50892, 50892, 307, 588, 24518, 11, 721, 393, 15894, 926, 257, 688, 13, 51066, 51066, 1018, 291, 393, 536, 294, 264, 21512, 510, 412, 264, 2767, 11, 51280, 51280, 264, 21512, 307, 588, 1189, 25198, 13, 51374, 51374, 583, 294, 1186, 11, 309, 1709, 281, 264, 2767, 4663, 13, 51520, 51520, 400, 309, 575, 661, 14906, 300, 561, 366, 920, 51626, 51626, 3579, 10577, 322, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.10968698154796254, "compression_ratio": 1.6857142857142857, "no_speech_prob": 6.240607490326511e-06}, {"id": 396, "seek": 113600, "start": 1154.32, "end": 1156.2, "text": " the trajectory is very erratic.", "tokens": [50364, 583, 294, 1186, 11, 264, 1778, 321, 434, 884, 341, 50498, 50498, 307, 570, 309, 311, 709, 544, 7148, 294, 2115, 50626, 50626, 295, 3073, 295, 32181, 13, 50686, 50686, 407, 4878, 264, 21512, 6263, 538, 342, 8997, 2750, 16235, 50892, 50892, 307, 588, 24518, 11, 721, 393, 15894, 926, 257, 688, 13, 51066, 51066, 1018, 291, 393, 536, 294, 264, 21512, 510, 412, 264, 2767, 11, 51280, 51280, 264, 21512, 307, 588, 1189, 25198, 13, 51374, 51374, 583, 294, 1186, 11, 309, 1709, 281, 264, 2767, 4663, 13, 51520, 51520, 400, 309, 575, 661, 14906, 300, 561, 366, 920, 51626, 51626, 3579, 10577, 322, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.10968698154796254, "compression_ratio": 1.6857142857142857, "no_speech_prob": 6.240607490326511e-06}, {"id": 397, "seek": 113600, "start": 1156.2, "end": 1159.12, "text": " But in fact, it goes to the bottom faster.", "tokens": [50364, 583, 294, 1186, 11, 264, 1778, 321, 434, 884, 341, 50498, 50498, 307, 570, 309, 311, 709, 544, 7148, 294, 2115, 50626, 50626, 295, 3073, 295, 32181, 13, 50686, 50686, 407, 4878, 264, 21512, 6263, 538, 342, 8997, 2750, 16235, 50892, 50892, 307, 588, 24518, 11, 721, 393, 15894, 926, 257, 688, 13, 51066, 51066, 1018, 291, 393, 536, 294, 264, 21512, 510, 412, 264, 2767, 11, 51280, 51280, 264, 21512, 307, 588, 1189, 25198, 13, 51374, 51374, 583, 294, 1186, 11, 309, 1709, 281, 264, 2767, 4663, 13, 51520, 51520, 400, 309, 575, 661, 14906, 300, 561, 366, 920, 51626, 51626, 3579, 10577, 322, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.10968698154796254, "compression_ratio": 1.6857142857142857, "no_speech_prob": 6.240607490326511e-06}, {"id": 398, "seek": 113600, "start": 1159.12, "end": 1161.24, "text": " And it has other advantages that people are still", "tokens": [50364, 583, 294, 1186, 11, 264, 1778, 321, 434, 884, 341, 50498, 50498, 307, 570, 309, 311, 709, 544, 7148, 294, 2115, 50626, 50626, 295, 3073, 295, 32181, 13, 50686, 50686, 407, 4878, 264, 21512, 6263, 538, 342, 8997, 2750, 16235, 50892, 50892, 307, 588, 24518, 11, 721, 393, 15894, 926, 257, 688, 13, 51066, 51066, 1018, 291, 393, 536, 294, 264, 21512, 510, 412, 264, 2767, 11, 51280, 51280, 264, 21512, 307, 588, 1189, 25198, 13, 51374, 51374, 583, 294, 1186, 11, 309, 1709, 281, 264, 2767, 4663, 13, 51520, 51520, 400, 309, 575, 661, 14906, 300, 561, 366, 920, 51626, 51626, 3579, 10577, 322, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.10968698154796254, "compression_ratio": 1.6857142857142857, "no_speech_prob": 6.240607490326511e-06}, {"id": 399, "seek": 113600, "start": 1161.24, "end": 1163.84, "text": " writing papers on.", "tokens": [50364, 583, 294, 1186, 11, 264, 1778, 321, 434, 884, 341, 50498, 50498, 307, 570, 309, 311, 709, 544, 7148, 294, 2115, 50626, 50626, 295, 3073, 295, 32181, 13, 50686, 50686, 407, 4878, 264, 21512, 6263, 538, 342, 8997, 2750, 16235, 50892, 50892, 307, 588, 24518, 11, 721, 393, 15894, 926, 257, 688, 13, 51066, 51066, 1018, 291, 393, 536, 294, 264, 21512, 510, 412, 264, 2767, 11, 51280, 51280, 264, 21512, 307, 588, 1189, 25198, 13, 51374, 51374, 583, 294, 1186, 11, 309, 1709, 281, 264, 2767, 4663, 13, 51520, 51520, 400, 309, 575, 661, 14906, 300, 561, 366, 920, 51626, 51626, 3579, 10577, 322, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.10968698154796254, "compression_ratio": 1.6857142857142857, "no_speech_prob": 6.240607490326511e-06}, {"id": 400, "seek": 116384, "start": 1163.84, "end": 1166.36, "text": " The reason for that is that stochastic gradient", "tokens": [50364, 440, 1778, 337, 300, 307, 300, 342, 8997, 2750, 16235, 50490, 50490, 12382, 1208, 264, 27830, 6717, 1296, 264, 10938, 13, 50660, 50660, 407, 4878, 294, 257, 3479, 2539, 3287, 11, 50876, 50876, 264, 3097, 10938, 362, 512, 24197, 1296, 552, 13, 51008, 51008, 759, 436, 500, 380, 11, 550, 1936, 264, 2539, 1154, 51110, 51110, 307, 6243, 13, 51144, 51144, 407, 436, 4725, 360, 362, 512, 27830, 6717, 1296, 552, 13, 51348, 51348, 400, 264, 4663, 291, 5623, 264, 9834, 11, 51464, 51464, 264, 544, 2049, 291, 5623, 552, 11, 264, 544, 51562, 51562, 291, 25924, 341, 27830, 6717, 1296, 729, 9834, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.09891254813582809, "compression_ratio": 1.9319148936170212, "no_speech_prob": 1.2602882634382695e-05}, {"id": 401, "seek": 116384, "start": 1166.36, "end": 1169.76, "text": " exploits the redundancy between the samples.", "tokens": [50364, 440, 1778, 337, 300, 307, 300, 342, 8997, 2750, 16235, 50490, 50490, 12382, 1208, 264, 27830, 6717, 1296, 264, 10938, 13, 50660, 50660, 407, 4878, 294, 257, 3479, 2539, 3287, 11, 50876, 50876, 264, 3097, 10938, 362, 512, 24197, 1296, 552, 13, 51008, 51008, 759, 436, 500, 380, 11, 550, 1936, 264, 2539, 1154, 51110, 51110, 307, 6243, 13, 51144, 51144, 407, 436, 4725, 360, 362, 512, 27830, 6717, 1296, 552, 13, 51348, 51348, 400, 264, 4663, 291, 5623, 264, 9834, 11, 51464, 51464, 264, 544, 2049, 291, 5623, 552, 11, 264, 544, 51562, 51562, 291, 25924, 341, 27830, 6717, 1296, 729, 9834, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.09891254813582809, "compression_ratio": 1.9319148936170212, "no_speech_prob": 1.2602882634382695e-05}, {"id": 402, "seek": 116384, "start": 1169.76, "end": 1174.08, "text": " So although in a machine learning setting,", "tokens": [50364, 440, 1778, 337, 300, 307, 300, 342, 8997, 2750, 16235, 50490, 50490, 12382, 1208, 264, 27830, 6717, 1296, 264, 10938, 13, 50660, 50660, 407, 4878, 294, 257, 3479, 2539, 3287, 11, 50876, 50876, 264, 3097, 10938, 362, 512, 24197, 1296, 552, 13, 51008, 51008, 759, 436, 500, 380, 11, 550, 1936, 264, 2539, 1154, 51110, 51110, 307, 6243, 13, 51144, 51144, 407, 436, 4725, 360, 362, 512, 27830, 6717, 1296, 552, 13, 51348, 51348, 400, 264, 4663, 291, 5623, 264, 9834, 11, 51464, 51464, 264, 544, 2049, 291, 5623, 552, 11, 264, 544, 51562, 51562, 291, 25924, 341, 27830, 6717, 1296, 729, 9834, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.09891254813582809, "compression_ratio": 1.9319148936170212, "no_speech_prob": 1.2602882634382695e-05}, {"id": 403, "seek": 116384, "start": 1174.08, "end": 1176.72, "text": " the training samples have some similarities between them.", "tokens": [50364, 440, 1778, 337, 300, 307, 300, 342, 8997, 2750, 16235, 50490, 50490, 12382, 1208, 264, 27830, 6717, 1296, 264, 10938, 13, 50660, 50660, 407, 4878, 294, 257, 3479, 2539, 3287, 11, 50876, 50876, 264, 3097, 10938, 362, 512, 24197, 1296, 552, 13, 51008, 51008, 759, 436, 500, 380, 11, 550, 1936, 264, 2539, 1154, 51110, 51110, 307, 6243, 13, 51144, 51144, 407, 436, 4725, 360, 362, 512, 27830, 6717, 1296, 552, 13, 51348, 51348, 400, 264, 4663, 291, 5623, 264, 9834, 11, 51464, 51464, 264, 544, 2049, 291, 5623, 552, 11, 264, 544, 51562, 51562, 291, 25924, 341, 27830, 6717, 1296, 729, 9834, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.09891254813582809, "compression_ratio": 1.9319148936170212, "no_speech_prob": 1.2602882634382695e-05}, {"id": 404, "seek": 116384, "start": 1176.72, "end": 1178.76, "text": " If they don't, then basically the learning problem", "tokens": [50364, 440, 1778, 337, 300, 307, 300, 342, 8997, 2750, 16235, 50490, 50490, 12382, 1208, 264, 27830, 6717, 1296, 264, 10938, 13, 50660, 50660, 407, 4878, 294, 257, 3479, 2539, 3287, 11, 50876, 50876, 264, 3097, 10938, 362, 512, 24197, 1296, 552, 13, 51008, 51008, 759, 436, 500, 380, 11, 550, 1936, 264, 2539, 1154, 51110, 51110, 307, 6243, 13, 51144, 51144, 407, 436, 4725, 360, 362, 512, 27830, 6717, 1296, 552, 13, 51348, 51348, 400, 264, 4663, 291, 5623, 264, 9834, 11, 51464, 51464, 264, 544, 2049, 291, 5623, 552, 11, 264, 544, 51562, 51562, 291, 25924, 341, 27830, 6717, 1296, 729, 9834, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.09891254813582809, "compression_ratio": 1.9319148936170212, "no_speech_prob": 1.2602882634382695e-05}, {"id": 405, "seek": 116384, "start": 1178.76, "end": 1179.4399999999998, "text": " is impossible.", "tokens": [50364, 440, 1778, 337, 300, 307, 300, 342, 8997, 2750, 16235, 50490, 50490, 12382, 1208, 264, 27830, 6717, 1296, 264, 10938, 13, 50660, 50660, 407, 4878, 294, 257, 3479, 2539, 3287, 11, 50876, 50876, 264, 3097, 10938, 362, 512, 24197, 1296, 552, 13, 51008, 51008, 759, 436, 500, 380, 11, 550, 1936, 264, 2539, 1154, 51110, 51110, 307, 6243, 13, 51144, 51144, 407, 436, 4725, 360, 362, 512, 27830, 6717, 1296, 552, 13, 51348, 51348, 400, 264, 4663, 291, 5623, 264, 9834, 11, 51464, 51464, 264, 544, 2049, 291, 5623, 552, 11, 264, 544, 51562, 51562, 291, 25924, 341, 27830, 6717, 1296, 729, 9834, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.09891254813582809, "compression_ratio": 1.9319148936170212, "no_speech_prob": 1.2602882634382695e-05}, {"id": 406, "seek": 116384, "start": 1179.4399999999998, "end": 1183.52, "text": " So they necessarily do have some redundancy between them.", "tokens": [50364, 440, 1778, 337, 300, 307, 300, 342, 8997, 2750, 16235, 50490, 50490, 12382, 1208, 264, 27830, 6717, 1296, 264, 10938, 13, 50660, 50660, 407, 4878, 294, 257, 3479, 2539, 3287, 11, 50876, 50876, 264, 3097, 10938, 362, 512, 24197, 1296, 552, 13, 51008, 51008, 759, 436, 500, 380, 11, 550, 1936, 264, 2539, 1154, 51110, 51110, 307, 6243, 13, 51144, 51144, 407, 436, 4725, 360, 362, 512, 27830, 6717, 1296, 552, 13, 51348, 51348, 400, 264, 4663, 291, 5623, 264, 9834, 11, 51464, 51464, 264, 544, 2049, 291, 5623, 552, 11, 264, 544, 51562, 51562, 291, 25924, 341, 27830, 6717, 1296, 729, 9834, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.09891254813582809, "compression_ratio": 1.9319148936170212, "no_speech_prob": 1.2602882634382695e-05}, {"id": 407, "seek": 116384, "start": 1183.52, "end": 1185.84, "text": " And the faster you update the parameters,", "tokens": [50364, 440, 1778, 337, 300, 307, 300, 342, 8997, 2750, 16235, 50490, 50490, 12382, 1208, 264, 27830, 6717, 1296, 264, 10938, 13, 50660, 50660, 407, 4878, 294, 257, 3479, 2539, 3287, 11, 50876, 50876, 264, 3097, 10938, 362, 512, 24197, 1296, 552, 13, 51008, 51008, 759, 436, 500, 380, 11, 550, 1936, 264, 2539, 1154, 51110, 51110, 307, 6243, 13, 51144, 51144, 407, 436, 4725, 360, 362, 512, 27830, 6717, 1296, 552, 13, 51348, 51348, 400, 264, 4663, 291, 5623, 264, 9834, 11, 51464, 51464, 264, 544, 2049, 291, 5623, 552, 11, 264, 544, 51562, 51562, 291, 25924, 341, 27830, 6717, 1296, 729, 9834, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.09891254813582809, "compression_ratio": 1.9319148936170212, "no_speech_prob": 1.2602882634382695e-05}, {"id": 408, "seek": 116384, "start": 1185.84, "end": 1187.8, "text": " the more often you update them, the more", "tokens": [50364, 440, 1778, 337, 300, 307, 300, 342, 8997, 2750, 16235, 50490, 50490, 12382, 1208, 264, 27830, 6717, 1296, 264, 10938, 13, 50660, 50660, 407, 4878, 294, 257, 3479, 2539, 3287, 11, 50876, 50876, 264, 3097, 10938, 362, 512, 24197, 1296, 552, 13, 51008, 51008, 759, 436, 500, 380, 11, 550, 1936, 264, 2539, 1154, 51110, 51110, 307, 6243, 13, 51144, 51144, 407, 436, 4725, 360, 362, 512, 27830, 6717, 1296, 552, 13, 51348, 51348, 400, 264, 4663, 291, 5623, 264, 9834, 11, 51464, 51464, 264, 544, 2049, 291, 5623, 552, 11, 264, 544, 51562, 51562, 291, 25924, 341, 27830, 6717, 1296, 729, 9834, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.09891254813582809, "compression_ratio": 1.9319148936170212, "no_speech_prob": 1.2602882634382695e-05}, {"id": 409, "seek": 116384, "start": 1187.8, "end": 1191.32, "text": " you exploit this redundancy between those parameters.", "tokens": [50364, 440, 1778, 337, 300, 307, 300, 342, 8997, 2750, 16235, 50490, 50490, 12382, 1208, 264, 27830, 6717, 1296, 264, 10938, 13, 50660, 50660, 407, 4878, 294, 257, 3479, 2539, 3287, 11, 50876, 50876, 264, 3097, 10938, 362, 512, 24197, 1296, 552, 13, 51008, 51008, 759, 436, 500, 380, 11, 550, 1936, 264, 2539, 1154, 51110, 51110, 307, 6243, 13, 51144, 51144, 407, 436, 4725, 360, 362, 512, 27830, 6717, 1296, 552, 13, 51348, 51348, 400, 264, 4663, 291, 5623, 264, 9834, 11, 51464, 51464, 264, 544, 2049, 291, 5623, 552, 11, 264, 544, 51562, 51562, 291, 25924, 341, 27830, 6717, 1296, 729, 9834, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.09891254813582809, "compression_ratio": 1.9319148936170212, "no_speech_prob": 1.2602882634382695e-05}, {"id": 410, "seek": 119132, "start": 1191.32, "end": 1196.6799999999998, "text": " Now, in practice, what people do is they use mini-batches.", "tokens": [50364, 823, 11, 294, 3124, 11, 437, 561, 360, 307, 436, 764, 8382, 12, 65, 852, 279, 13, 50632, 50632, 407, 2602, 295, 15866, 264, 16235, 50722, 50722, 322, 264, 5143, 295, 257, 2167, 6889, 11, 291, 747, 257, 15245, 295, 10938, 11, 50940, 50940, 5850, 4992, 1296, 11, 718, 311, 584, 11, 2217, 293, 257, 1326, 4714, 13, 51210, 51210, 583, 4356, 15245, 279, 366, 1101, 294, 881, 3331, 11, 767, 13, 51344, 51344, 400, 291, 14722, 264, 4274, 295, 264, 16235, 51572, 51572, 670, 729, 10938, 13, 51640, 51640, 407, 291, 14722, 264, 4274, 2063, 670, 729, 10938, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10199507000376877, "compression_ratio": 1.7410714285714286, "no_speech_prob": 8.80002244230127e-06}, {"id": 411, "seek": 119132, "start": 1196.6799999999998, "end": 1198.48, "text": " So instead of computing the gradient", "tokens": [50364, 823, 11, 294, 3124, 11, 437, 561, 360, 307, 436, 764, 8382, 12, 65, 852, 279, 13, 50632, 50632, 407, 2602, 295, 15866, 264, 16235, 50722, 50722, 322, 264, 5143, 295, 257, 2167, 6889, 11, 291, 747, 257, 15245, 295, 10938, 11, 50940, 50940, 5850, 4992, 1296, 11, 718, 311, 584, 11, 2217, 293, 257, 1326, 4714, 13, 51210, 51210, 583, 4356, 15245, 279, 366, 1101, 294, 881, 3331, 11, 767, 13, 51344, 51344, 400, 291, 14722, 264, 4274, 295, 264, 16235, 51572, 51572, 670, 729, 10938, 13, 51640, 51640, 407, 291, 14722, 264, 4274, 2063, 670, 729, 10938, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10199507000376877, "compression_ratio": 1.7410714285714286, "no_speech_prob": 8.80002244230127e-06}, {"id": 412, "seek": 119132, "start": 1198.48, "end": 1202.84, "text": " on the basis of a single sample, you take a batch of samples,", "tokens": [50364, 823, 11, 294, 3124, 11, 437, 561, 360, 307, 436, 764, 8382, 12, 65, 852, 279, 13, 50632, 50632, 407, 2602, 295, 15866, 264, 16235, 50722, 50722, 322, 264, 5143, 295, 257, 2167, 6889, 11, 291, 747, 257, 15245, 295, 10938, 11, 50940, 50940, 5850, 4992, 1296, 11, 718, 311, 584, 11, 2217, 293, 257, 1326, 4714, 13, 51210, 51210, 583, 4356, 15245, 279, 366, 1101, 294, 881, 3331, 11, 767, 13, 51344, 51344, 400, 291, 14722, 264, 4274, 295, 264, 16235, 51572, 51572, 670, 729, 10938, 13, 51640, 51640, 407, 291, 14722, 264, 4274, 2063, 670, 729, 10938, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10199507000376877, "compression_ratio": 1.7410714285714286, "no_speech_prob": 8.80002244230127e-06}, {"id": 413, "seek": 119132, "start": 1202.84, "end": 1208.24, "text": " typically anywhere between, let's say, 30 and a few thousand.", "tokens": [50364, 823, 11, 294, 3124, 11, 437, 561, 360, 307, 436, 764, 8382, 12, 65, 852, 279, 13, 50632, 50632, 407, 2602, 295, 15866, 264, 16235, 50722, 50722, 322, 264, 5143, 295, 257, 2167, 6889, 11, 291, 747, 257, 15245, 295, 10938, 11, 50940, 50940, 5850, 4992, 1296, 11, 718, 311, 584, 11, 2217, 293, 257, 1326, 4714, 13, 51210, 51210, 583, 4356, 15245, 279, 366, 1101, 294, 881, 3331, 11, 767, 13, 51344, 51344, 400, 291, 14722, 264, 4274, 295, 264, 16235, 51572, 51572, 670, 729, 10938, 13, 51640, 51640, 407, 291, 14722, 264, 4274, 2063, 670, 729, 10938, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10199507000376877, "compression_ratio": 1.7410714285714286, "no_speech_prob": 8.80002244230127e-06}, {"id": 414, "seek": 119132, "start": 1208.24, "end": 1210.9199999999998, "text": " But smaller batches are better in most cases, actually.", "tokens": [50364, 823, 11, 294, 3124, 11, 437, 561, 360, 307, 436, 764, 8382, 12, 65, 852, 279, 13, 50632, 50632, 407, 2602, 295, 15866, 264, 16235, 50722, 50722, 322, 264, 5143, 295, 257, 2167, 6889, 11, 291, 747, 257, 15245, 295, 10938, 11, 50940, 50940, 5850, 4992, 1296, 11, 718, 311, 584, 11, 2217, 293, 257, 1326, 4714, 13, 51210, 51210, 583, 4356, 15245, 279, 366, 1101, 294, 881, 3331, 11, 767, 13, 51344, 51344, 400, 291, 14722, 264, 4274, 295, 264, 16235, 51572, 51572, 670, 729, 10938, 13, 51640, 51640, 407, 291, 14722, 264, 4274, 2063, 670, 729, 10938, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10199507000376877, "compression_ratio": 1.7410714285714286, "no_speech_prob": 8.80002244230127e-06}, {"id": 415, "seek": 119132, "start": 1210.9199999999998, "end": 1215.48, "text": " And you compute the average of the gradient", "tokens": [50364, 823, 11, 294, 3124, 11, 437, 561, 360, 307, 436, 764, 8382, 12, 65, 852, 279, 13, 50632, 50632, 407, 2602, 295, 15866, 264, 16235, 50722, 50722, 322, 264, 5143, 295, 257, 2167, 6889, 11, 291, 747, 257, 15245, 295, 10938, 11, 50940, 50940, 5850, 4992, 1296, 11, 718, 311, 584, 11, 2217, 293, 257, 1326, 4714, 13, 51210, 51210, 583, 4356, 15245, 279, 366, 1101, 294, 881, 3331, 11, 767, 13, 51344, 51344, 400, 291, 14722, 264, 4274, 295, 264, 16235, 51572, 51572, 670, 729, 10938, 13, 51640, 51640, 407, 291, 14722, 264, 4274, 2063, 670, 729, 10938, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10199507000376877, "compression_ratio": 1.7410714285714286, "no_speech_prob": 8.80002244230127e-06}, {"id": 416, "seek": 119132, "start": 1215.48, "end": 1216.84, "text": " over those samples.", "tokens": [50364, 823, 11, 294, 3124, 11, 437, 561, 360, 307, 436, 764, 8382, 12, 65, 852, 279, 13, 50632, 50632, 407, 2602, 295, 15866, 264, 16235, 50722, 50722, 322, 264, 5143, 295, 257, 2167, 6889, 11, 291, 747, 257, 15245, 295, 10938, 11, 50940, 50940, 5850, 4992, 1296, 11, 718, 311, 584, 11, 2217, 293, 257, 1326, 4714, 13, 51210, 51210, 583, 4356, 15245, 279, 366, 1101, 294, 881, 3331, 11, 767, 13, 51344, 51344, 400, 291, 14722, 264, 4274, 295, 264, 16235, 51572, 51572, 670, 729, 10938, 13, 51640, 51640, 407, 291, 14722, 264, 4274, 2063, 670, 729, 10938, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10199507000376877, "compression_ratio": 1.7410714285714286, "no_speech_prob": 8.80002244230127e-06}, {"id": 417, "seek": 119132, "start": 1216.84, "end": 1219.8799999999999, "text": " So you compute the average cost over those samples", "tokens": [50364, 823, 11, 294, 3124, 11, 437, 561, 360, 307, 436, 764, 8382, 12, 65, 852, 279, 13, 50632, 50632, 407, 2602, 295, 15866, 264, 16235, 50722, 50722, 322, 264, 5143, 295, 257, 2167, 6889, 11, 291, 747, 257, 15245, 295, 10938, 11, 50940, 50940, 5850, 4992, 1296, 11, 718, 311, 584, 11, 2217, 293, 257, 1326, 4714, 13, 51210, 51210, 583, 4356, 15245, 279, 366, 1101, 294, 881, 3331, 11, 767, 13, 51344, 51344, 400, 291, 14722, 264, 4274, 295, 264, 16235, 51572, 51572, 670, 729, 10938, 13, 51640, 51640, 407, 291, 14722, 264, 4274, 2063, 670, 729, 10938, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10199507000376877, "compression_ratio": 1.7410714285714286, "no_speech_prob": 8.80002244230127e-06}, {"id": 418, "seek": 121988, "start": 1219.88, "end": 1224.3200000000002, "text": " and compute the gradient of the average over those samples,", "tokens": [50364, 293, 14722, 264, 16235, 295, 264, 4274, 670, 729, 10938, 11, 50586, 50586, 293, 550, 652, 364, 5623, 13, 50716, 50716, 440, 1778, 337, 884, 341, 307, 406, 28621, 984, 50898, 50898, 364, 9284, 299, 1778, 13, 50974, 50974, 467, 311, 570, 309, 311, 257, 2199, 636, 295, 8952, 3319, 51206, 51206, 342, 8997, 2750, 16235, 322, 8952, 8837, 11, 1270, 382, 18407, 82, 13, 51426, 51426, 407, 456, 311, 572, 665, 1778, 281, 360, 15245, 278, 661, 813, 264, 1186, 51606, 51606, 300, 527, 8837, 5902, 309, 13, 51756, 51756, 14464, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15065351466542667, "compression_ratio": 1.579646017699115, "no_speech_prob": 2.5861589165288024e-05}, {"id": 419, "seek": 121988, "start": 1224.3200000000002, "end": 1226.92, "text": " and then make an update.", "tokens": [50364, 293, 14722, 264, 16235, 295, 264, 4274, 670, 729, 10938, 11, 50586, 50586, 293, 550, 652, 364, 5623, 13, 50716, 50716, 440, 1778, 337, 884, 341, 307, 406, 28621, 984, 50898, 50898, 364, 9284, 299, 1778, 13, 50974, 50974, 467, 311, 570, 309, 311, 257, 2199, 636, 295, 8952, 3319, 51206, 51206, 342, 8997, 2750, 16235, 322, 8952, 8837, 11, 1270, 382, 18407, 82, 13, 51426, 51426, 407, 456, 311, 572, 665, 1778, 281, 360, 15245, 278, 661, 813, 264, 1186, 51606, 51606, 300, 527, 8837, 5902, 309, 13, 51756, 51756, 14464, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15065351466542667, "compression_ratio": 1.579646017699115, "no_speech_prob": 2.5861589165288024e-05}, {"id": 420, "seek": 121988, "start": 1226.92, "end": 1230.5600000000002, "text": " The reason for doing this is not intrinsically", "tokens": [50364, 293, 14722, 264, 16235, 295, 264, 4274, 670, 729, 10938, 11, 50586, 50586, 293, 550, 652, 364, 5623, 13, 50716, 50716, 440, 1778, 337, 884, 341, 307, 406, 28621, 984, 50898, 50898, 364, 9284, 299, 1778, 13, 50974, 50974, 467, 311, 570, 309, 311, 257, 2199, 636, 295, 8952, 3319, 51206, 51206, 342, 8997, 2750, 16235, 322, 8952, 8837, 11, 1270, 382, 18407, 82, 13, 51426, 51426, 407, 456, 311, 572, 665, 1778, 281, 360, 15245, 278, 661, 813, 264, 1186, 51606, 51606, 300, 527, 8837, 5902, 309, 13, 51756, 51756, 14464, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15065351466542667, "compression_ratio": 1.579646017699115, "no_speech_prob": 2.5861589165288024e-05}, {"id": 421, "seek": 121988, "start": 1230.5600000000002, "end": 1232.0800000000002, "text": " an algorithmic reason.", "tokens": [50364, 293, 14722, 264, 16235, 295, 264, 4274, 670, 729, 10938, 11, 50586, 50586, 293, 550, 652, 364, 5623, 13, 50716, 50716, 440, 1778, 337, 884, 341, 307, 406, 28621, 984, 50898, 50898, 364, 9284, 299, 1778, 13, 50974, 50974, 467, 311, 570, 309, 311, 257, 2199, 636, 295, 8952, 3319, 51206, 51206, 342, 8997, 2750, 16235, 322, 8952, 8837, 11, 1270, 382, 18407, 82, 13, 51426, 51426, 407, 456, 311, 572, 665, 1778, 281, 360, 15245, 278, 661, 813, 264, 1186, 51606, 51606, 300, 527, 8837, 5902, 309, 13, 51756, 51756, 14464, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15065351466542667, "compression_ratio": 1.579646017699115, "no_speech_prob": 2.5861589165288024e-05}, {"id": 422, "seek": 121988, "start": 1232.0800000000002, "end": 1236.72, "text": " It's because it's a simple way of parallelizing", "tokens": [50364, 293, 14722, 264, 16235, 295, 264, 4274, 670, 729, 10938, 11, 50586, 50586, 293, 550, 652, 364, 5623, 13, 50716, 50716, 440, 1778, 337, 884, 341, 307, 406, 28621, 984, 50898, 50898, 364, 9284, 299, 1778, 13, 50974, 50974, 467, 311, 570, 309, 311, 257, 2199, 636, 295, 8952, 3319, 51206, 51206, 342, 8997, 2750, 16235, 322, 8952, 8837, 11, 1270, 382, 18407, 82, 13, 51426, 51426, 407, 456, 311, 572, 665, 1778, 281, 360, 15245, 278, 661, 813, 264, 1186, 51606, 51606, 300, 527, 8837, 5902, 309, 13, 51756, 51756, 14464, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15065351466542667, "compression_ratio": 1.579646017699115, "no_speech_prob": 2.5861589165288024e-05}, {"id": 423, "seek": 121988, "start": 1236.72, "end": 1241.1200000000001, "text": " stochastic gradient on parallel hardware, such as GPUs.", "tokens": [50364, 293, 14722, 264, 16235, 295, 264, 4274, 670, 729, 10938, 11, 50586, 50586, 293, 550, 652, 364, 5623, 13, 50716, 50716, 440, 1778, 337, 884, 341, 307, 406, 28621, 984, 50898, 50898, 364, 9284, 299, 1778, 13, 50974, 50974, 467, 311, 570, 309, 311, 257, 2199, 636, 295, 8952, 3319, 51206, 51206, 342, 8997, 2750, 16235, 322, 8952, 8837, 11, 1270, 382, 18407, 82, 13, 51426, 51426, 407, 456, 311, 572, 665, 1778, 281, 360, 15245, 278, 661, 813, 264, 1186, 51606, 51606, 300, 527, 8837, 5902, 309, 13, 51756, 51756, 14464, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15065351466542667, "compression_ratio": 1.579646017699115, "no_speech_prob": 2.5861589165288024e-05}, {"id": 424, "seek": 121988, "start": 1241.1200000000001, "end": 1244.72, "text": " So there's no good reason to do batching other than the fact", "tokens": [50364, 293, 14722, 264, 16235, 295, 264, 4274, 670, 729, 10938, 11, 50586, 50586, 293, 550, 652, 364, 5623, 13, 50716, 50716, 440, 1778, 337, 884, 341, 307, 406, 28621, 984, 50898, 50898, 364, 9284, 299, 1778, 13, 50974, 50974, 467, 311, 570, 309, 311, 257, 2199, 636, 295, 8952, 3319, 51206, 51206, 342, 8997, 2750, 16235, 322, 8952, 8837, 11, 1270, 382, 18407, 82, 13, 51426, 51426, 407, 456, 311, 572, 665, 1778, 281, 360, 15245, 278, 661, 813, 264, 1186, 51606, 51606, 300, 527, 8837, 5902, 309, 13, 51756, 51756, 14464, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15065351466542667, "compression_ratio": 1.579646017699115, "no_speech_prob": 2.5861589165288024e-05}, {"id": 425, "seek": 121988, "start": 1244.72, "end": 1247.72, "text": " that our hardware likes it.", "tokens": [50364, 293, 14722, 264, 16235, 295, 264, 4274, 670, 729, 10938, 11, 50586, 50586, 293, 550, 652, 364, 5623, 13, 50716, 50716, 440, 1778, 337, 884, 341, 307, 406, 28621, 984, 50898, 50898, 364, 9284, 299, 1778, 13, 50974, 50974, 467, 311, 570, 309, 311, 257, 2199, 636, 295, 8952, 3319, 51206, 51206, 342, 8997, 2750, 16235, 322, 8952, 8837, 11, 1270, 382, 18407, 82, 13, 51426, 51426, 407, 456, 311, 572, 665, 1778, 281, 360, 15245, 278, 661, 813, 264, 1186, 51606, 51606, 300, 527, 8837, 5902, 309, 13, 51756, 51756, 14464, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15065351466542667, "compression_ratio": 1.579646017699115, "no_speech_prob": 2.5861589165288024e-05}, {"id": 426, "seek": 121988, "start": 1247.72, "end": 1248.8400000000001, "text": " Question?", "tokens": [50364, 293, 14722, 264, 16235, 295, 264, 4274, 670, 729, 10938, 11, 50586, 50586, 293, 550, 652, 364, 5623, 13, 50716, 50716, 440, 1778, 337, 884, 341, 307, 406, 28621, 984, 50898, 50898, 364, 9284, 299, 1778, 13, 50974, 50974, 467, 311, 570, 309, 311, 257, 2199, 636, 295, 8952, 3319, 51206, 51206, 342, 8997, 2750, 16235, 322, 8952, 8837, 11, 1270, 382, 18407, 82, 13, 51426, 51426, 407, 456, 311, 572, 665, 1778, 281, 360, 15245, 278, 661, 813, 264, 1186, 51606, 51606, 300, 527, 8837, 5902, 309, 13, 51756, 51756, 14464, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.15065351466542667, "compression_ratio": 1.579646017699115, "no_speech_prob": 2.5861589165288024e-05}, {"id": 427, "seek": 124884, "start": 1248.84, "end": 1253.12, "text": " So actually, for real complex deep learning problems,", "tokens": [50364, 407, 767, 11, 337, 957, 3997, 2452, 2539, 2740, 11, 50578, 50578, 775, 264, 3983, 278, 2445, 362, 50668, 50668, 281, 312, 15684, 819, 9364, 30, 50830, 50830, 1042, 11, 309, 2203, 281, 312, 10957, 11, 5240, 13, 50934, 50934, 759, 309, 311, 2107, 12, 9000, 259, 12549, 11, 291, 434, 516, 281, 483, 294, 5253, 13, 51094, 51094, 467, 2203, 281, 312, 819, 9364, 1920, 5315, 13, 51346, 51346, 583, 294, 1186, 11, 18161, 36170, 300, 881, 561, 764, 51526, 51526, 366, 767, 406, 819, 9364, 13, 51602, 51602, 400, 456, 311, 257, 688, 295, 3190, 689, 436, 434, 406, 819, 9364, 13, 51720, 51720, 583, 436, 366, 10957, 294, 264, 2020, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1546814910367004, "compression_ratio": 1.8506224066390042, "no_speech_prob": 3.269154331064783e-05}, {"id": 428, "seek": 124884, "start": 1253.12, "end": 1254.9199999999998, "text": " does the subjecting function have", "tokens": [50364, 407, 767, 11, 337, 957, 3997, 2452, 2539, 2740, 11, 50578, 50578, 775, 264, 3983, 278, 2445, 362, 50668, 50668, 281, 312, 15684, 819, 9364, 30, 50830, 50830, 1042, 11, 309, 2203, 281, 312, 10957, 11, 5240, 13, 50934, 50934, 759, 309, 311, 2107, 12, 9000, 259, 12549, 11, 291, 434, 516, 281, 483, 294, 5253, 13, 51094, 51094, 467, 2203, 281, 312, 819, 9364, 1920, 5315, 13, 51346, 51346, 583, 294, 1186, 11, 18161, 36170, 300, 881, 561, 764, 51526, 51526, 366, 767, 406, 819, 9364, 13, 51602, 51602, 400, 456, 311, 257, 688, 295, 3190, 689, 436, 434, 406, 819, 9364, 13, 51720, 51720, 583, 436, 366, 10957, 294, 264, 2020, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1546814910367004, "compression_ratio": 1.8506224066390042, "no_speech_prob": 3.269154331064783e-05}, {"id": 429, "seek": 124884, "start": 1254.9199999999998, "end": 1258.1599999999999, "text": " to be continuously differentiable?", "tokens": [50364, 407, 767, 11, 337, 957, 3997, 2452, 2539, 2740, 11, 50578, 50578, 775, 264, 3983, 278, 2445, 362, 50668, 50668, 281, 312, 15684, 819, 9364, 30, 50830, 50830, 1042, 11, 309, 2203, 281, 312, 10957, 11, 5240, 13, 50934, 50934, 759, 309, 311, 2107, 12, 9000, 259, 12549, 11, 291, 434, 516, 281, 483, 294, 5253, 13, 51094, 51094, 467, 2203, 281, 312, 819, 9364, 1920, 5315, 13, 51346, 51346, 583, 294, 1186, 11, 18161, 36170, 300, 881, 561, 764, 51526, 51526, 366, 767, 406, 819, 9364, 13, 51602, 51602, 400, 456, 311, 257, 688, 295, 3190, 689, 436, 434, 406, 819, 9364, 13, 51720, 51720, 583, 436, 366, 10957, 294, 264, 2020, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1546814910367004, "compression_ratio": 1.8506224066390042, "no_speech_prob": 3.269154331064783e-05}, {"id": 430, "seek": 124884, "start": 1258.1599999999999, "end": 1260.24, "text": " Well, it needs to be continuous, mostly.", "tokens": [50364, 407, 767, 11, 337, 957, 3997, 2452, 2539, 2740, 11, 50578, 50578, 775, 264, 3983, 278, 2445, 362, 50668, 50668, 281, 312, 15684, 819, 9364, 30, 50830, 50830, 1042, 11, 309, 2203, 281, 312, 10957, 11, 5240, 13, 50934, 50934, 759, 309, 311, 2107, 12, 9000, 259, 12549, 11, 291, 434, 516, 281, 483, 294, 5253, 13, 51094, 51094, 467, 2203, 281, 312, 819, 9364, 1920, 5315, 13, 51346, 51346, 583, 294, 1186, 11, 18161, 36170, 300, 881, 561, 764, 51526, 51526, 366, 767, 406, 819, 9364, 13, 51602, 51602, 400, 456, 311, 257, 688, 295, 3190, 689, 436, 434, 406, 819, 9364, 13, 51720, 51720, 583, 436, 366, 10957, 294, 264, 2020, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1546814910367004, "compression_ratio": 1.8506224066390042, "no_speech_prob": 3.269154331064783e-05}, {"id": 431, "seek": 124884, "start": 1260.24, "end": 1263.4399999999998, "text": " If it's non-continuous, you're going to get in trouble.", "tokens": [50364, 407, 767, 11, 337, 957, 3997, 2452, 2539, 2740, 11, 50578, 50578, 775, 264, 3983, 278, 2445, 362, 50668, 50668, 281, 312, 15684, 819, 9364, 30, 50830, 50830, 1042, 11, 309, 2203, 281, 312, 10957, 11, 5240, 13, 50934, 50934, 759, 309, 311, 2107, 12, 9000, 259, 12549, 11, 291, 434, 516, 281, 483, 294, 5253, 13, 51094, 51094, 467, 2203, 281, 312, 819, 9364, 1920, 5315, 13, 51346, 51346, 583, 294, 1186, 11, 18161, 36170, 300, 881, 561, 764, 51526, 51526, 366, 767, 406, 819, 9364, 13, 51602, 51602, 400, 456, 311, 257, 688, 295, 3190, 689, 436, 434, 406, 819, 9364, 13, 51720, 51720, 583, 436, 366, 10957, 294, 264, 2020, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1546814910367004, "compression_ratio": 1.8506224066390042, "no_speech_prob": 3.269154331064783e-05}, {"id": 432, "seek": 124884, "start": 1263.4399999999998, "end": 1268.48, "text": " It needs to be differentiable almost everywhere.", "tokens": [50364, 407, 767, 11, 337, 957, 3997, 2452, 2539, 2740, 11, 50578, 50578, 775, 264, 3983, 278, 2445, 362, 50668, 50668, 281, 312, 15684, 819, 9364, 30, 50830, 50830, 1042, 11, 309, 2203, 281, 312, 10957, 11, 5240, 13, 50934, 50934, 759, 309, 311, 2107, 12, 9000, 259, 12549, 11, 291, 434, 516, 281, 483, 294, 5253, 13, 51094, 51094, 467, 2203, 281, 312, 819, 9364, 1920, 5315, 13, 51346, 51346, 583, 294, 1186, 11, 18161, 36170, 300, 881, 561, 764, 51526, 51526, 366, 767, 406, 819, 9364, 13, 51602, 51602, 400, 456, 311, 257, 688, 295, 3190, 689, 436, 434, 406, 819, 9364, 13, 51720, 51720, 583, 436, 366, 10957, 294, 264, 2020, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1546814910367004, "compression_ratio": 1.8506224066390042, "no_speech_prob": 3.269154331064783e-05}, {"id": 433, "seek": 124884, "start": 1268.48, "end": 1272.08, "text": " But in fact, neural nets that most people use", "tokens": [50364, 407, 767, 11, 337, 957, 3997, 2452, 2539, 2740, 11, 50578, 50578, 775, 264, 3983, 278, 2445, 362, 50668, 50668, 281, 312, 15684, 819, 9364, 30, 50830, 50830, 1042, 11, 309, 2203, 281, 312, 10957, 11, 5240, 13, 50934, 50934, 759, 309, 311, 2107, 12, 9000, 259, 12549, 11, 291, 434, 516, 281, 483, 294, 5253, 13, 51094, 51094, 467, 2203, 281, 312, 819, 9364, 1920, 5315, 13, 51346, 51346, 583, 294, 1186, 11, 18161, 36170, 300, 881, 561, 764, 51526, 51526, 366, 767, 406, 819, 9364, 13, 51602, 51602, 400, 456, 311, 257, 688, 295, 3190, 689, 436, 434, 406, 819, 9364, 13, 51720, 51720, 583, 436, 366, 10957, 294, 264, 2020, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1546814910367004, "compression_ratio": 1.8506224066390042, "no_speech_prob": 3.269154331064783e-05}, {"id": 434, "seek": 124884, "start": 1272.08, "end": 1273.6, "text": " are actually not differentiable.", "tokens": [50364, 407, 767, 11, 337, 957, 3997, 2452, 2539, 2740, 11, 50578, 50578, 775, 264, 3983, 278, 2445, 362, 50668, 50668, 281, 312, 15684, 819, 9364, 30, 50830, 50830, 1042, 11, 309, 2203, 281, 312, 10957, 11, 5240, 13, 50934, 50934, 759, 309, 311, 2107, 12, 9000, 259, 12549, 11, 291, 434, 516, 281, 483, 294, 5253, 13, 51094, 51094, 467, 2203, 281, 312, 819, 9364, 1920, 5315, 13, 51346, 51346, 583, 294, 1186, 11, 18161, 36170, 300, 881, 561, 764, 51526, 51526, 366, 767, 406, 819, 9364, 13, 51602, 51602, 400, 456, 311, 257, 688, 295, 3190, 689, 436, 434, 406, 819, 9364, 13, 51720, 51720, 583, 436, 366, 10957, 294, 264, 2020, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1546814910367004, "compression_ratio": 1.8506224066390042, "no_speech_prob": 3.269154331064783e-05}, {"id": 435, "seek": 124884, "start": 1273.6, "end": 1275.9599999999998, "text": " And there's a lot of places where they're not differentiable.", "tokens": [50364, 407, 767, 11, 337, 957, 3997, 2452, 2539, 2740, 11, 50578, 50578, 775, 264, 3983, 278, 2445, 362, 50668, 50668, 281, 312, 15684, 819, 9364, 30, 50830, 50830, 1042, 11, 309, 2203, 281, 312, 10957, 11, 5240, 13, 50934, 50934, 759, 309, 311, 2107, 12, 9000, 259, 12549, 11, 291, 434, 516, 281, 483, 294, 5253, 13, 51094, 51094, 467, 2203, 281, 312, 819, 9364, 1920, 5315, 13, 51346, 51346, 583, 294, 1186, 11, 18161, 36170, 300, 881, 561, 764, 51526, 51526, 366, 767, 406, 819, 9364, 13, 51602, 51602, 400, 456, 311, 257, 688, 295, 3190, 689, 436, 434, 406, 819, 9364, 13, 51720, 51720, 583, 436, 366, 10957, 294, 264, 2020, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1546814910367004, "compression_ratio": 1.8506224066390042, "no_speech_prob": 3.269154331064783e-05}, {"id": 436, "seek": 124884, "start": 1275.9599999999998, "end": 1277.3999999999999, "text": " But they are continuous in the sense", "tokens": [50364, 407, 767, 11, 337, 957, 3997, 2452, 2539, 2740, 11, 50578, 50578, 775, 264, 3983, 278, 2445, 362, 50668, 50668, 281, 312, 15684, 819, 9364, 30, 50830, 50830, 1042, 11, 309, 2203, 281, 312, 10957, 11, 5240, 13, 50934, 50934, 759, 309, 311, 2107, 12, 9000, 259, 12549, 11, 291, 434, 516, 281, 483, 294, 5253, 13, 51094, 51094, 467, 2203, 281, 312, 819, 9364, 1920, 5315, 13, 51346, 51346, 583, 294, 1186, 11, 18161, 36170, 300, 881, 561, 764, 51526, 51526, 366, 767, 406, 819, 9364, 13, 51602, 51602, 400, 456, 311, 257, 688, 295, 3190, 689, 436, 434, 406, 819, 9364, 13, 51720, 51720, 583, 436, 366, 10957, 294, 264, 2020, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1546814910367004, "compression_ratio": 1.8506224066390042, "no_speech_prob": 3.269154331064783e-05}, {"id": 437, "seek": 127740, "start": 1277.4, "end": 1279.96, "text": " that they are functions that have kind of corners in them,", "tokens": [50364, 300, 436, 366, 6828, 300, 362, 733, 295, 12413, 294, 552, 11, 50492, 50492, 498, 291, 528, 13, 50522, 50522, 814, 362, 350, 16431, 13, 50598, 50598, 400, 498, 291, 362, 257, 350, 475, 1564, 294, 257, 1339, 11, 50680, 50680, 309, 311, 406, 886, 709, 295, 257, 1154, 13, 50740, 50946, 407, 294, 300, 1389, 11, 729, 22927, 51208, 51208, 820, 406, 312, 1219, 2771, 2448, 13, 51270, 51270, 814, 820, 312, 1219, 1422, 7165, 2448, 13, 51366, 51366, 407, 257, 1422, 7165, 1196, 307, 1936, 257, 2674, 2144, 51494, 51494, 295, 264, 1558, 295, 13760, 420, 16235, 51630, 51630, 281, 6828, 300, 362, 350, 16431, 294, 552, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.18170995879591556, "compression_ratio": 1.7906976744186047, "no_speech_prob": 2.0144632799201645e-05}, {"id": 438, "seek": 127740, "start": 1279.96, "end": 1280.5600000000002, "text": " if you want.", "tokens": [50364, 300, 436, 366, 6828, 300, 362, 733, 295, 12413, 294, 552, 11, 50492, 50492, 498, 291, 528, 13, 50522, 50522, 814, 362, 350, 16431, 13, 50598, 50598, 400, 498, 291, 362, 257, 350, 475, 1564, 294, 257, 1339, 11, 50680, 50680, 309, 311, 406, 886, 709, 295, 257, 1154, 13, 50740, 50946, 407, 294, 300, 1389, 11, 729, 22927, 51208, 51208, 820, 406, 312, 1219, 2771, 2448, 13, 51270, 51270, 814, 820, 312, 1219, 1422, 7165, 2448, 13, 51366, 51366, 407, 257, 1422, 7165, 1196, 307, 1936, 257, 2674, 2144, 51494, 51494, 295, 264, 1558, 295, 13760, 420, 16235, 51630, 51630, 281, 6828, 300, 362, 350, 16431, 294, 552, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.18170995879591556, "compression_ratio": 1.7906976744186047, "no_speech_prob": 2.0144632799201645e-05}, {"id": 439, "seek": 127740, "start": 1280.5600000000002, "end": 1282.0800000000002, "text": " They have kinks.", "tokens": [50364, 300, 436, 366, 6828, 300, 362, 733, 295, 12413, 294, 552, 11, 50492, 50492, 498, 291, 528, 13, 50522, 50522, 814, 362, 350, 16431, 13, 50598, 50598, 400, 498, 291, 362, 257, 350, 475, 1564, 294, 257, 1339, 11, 50680, 50680, 309, 311, 406, 886, 709, 295, 257, 1154, 13, 50740, 50946, 407, 294, 300, 1389, 11, 729, 22927, 51208, 51208, 820, 406, 312, 1219, 2771, 2448, 13, 51270, 51270, 814, 820, 312, 1219, 1422, 7165, 2448, 13, 51366, 51366, 407, 257, 1422, 7165, 1196, 307, 1936, 257, 2674, 2144, 51494, 51494, 295, 264, 1558, 295, 13760, 420, 16235, 51630, 51630, 281, 6828, 300, 362, 350, 16431, 294, 552, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.18170995879591556, "compression_ratio": 1.7906976744186047, "no_speech_prob": 2.0144632799201645e-05}, {"id": 440, "seek": 127740, "start": 1282.0800000000002, "end": 1283.72, "text": " And if you have a kink once in a while,", "tokens": [50364, 300, 436, 366, 6828, 300, 362, 733, 295, 12413, 294, 552, 11, 50492, 50492, 498, 291, 528, 13, 50522, 50522, 814, 362, 350, 16431, 13, 50598, 50598, 400, 498, 291, 362, 257, 350, 475, 1564, 294, 257, 1339, 11, 50680, 50680, 309, 311, 406, 886, 709, 295, 257, 1154, 13, 50740, 50946, 407, 294, 300, 1389, 11, 729, 22927, 51208, 51208, 820, 406, 312, 1219, 2771, 2448, 13, 51270, 51270, 814, 820, 312, 1219, 1422, 7165, 2448, 13, 51366, 51366, 407, 257, 1422, 7165, 1196, 307, 1936, 257, 2674, 2144, 51494, 51494, 295, 264, 1558, 295, 13760, 420, 16235, 51630, 51630, 281, 6828, 300, 362, 350, 16431, 294, 552, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.18170995879591556, "compression_ratio": 1.7906976744186047, "no_speech_prob": 2.0144632799201645e-05}, {"id": 441, "seek": 127740, "start": 1283.72, "end": 1284.92, "text": " it's not too much of a problem.", "tokens": [50364, 300, 436, 366, 6828, 300, 362, 733, 295, 12413, 294, 552, 11, 50492, 50492, 498, 291, 528, 13, 50522, 50522, 814, 362, 350, 16431, 13, 50598, 50598, 400, 498, 291, 362, 257, 350, 475, 1564, 294, 257, 1339, 11, 50680, 50680, 309, 311, 406, 886, 709, 295, 257, 1154, 13, 50740, 50946, 407, 294, 300, 1389, 11, 729, 22927, 51208, 51208, 820, 406, 312, 1219, 2771, 2448, 13, 51270, 51270, 814, 820, 312, 1219, 1422, 7165, 2448, 13, 51366, 51366, 407, 257, 1422, 7165, 1196, 307, 1936, 257, 2674, 2144, 51494, 51494, 295, 264, 1558, 295, 13760, 420, 16235, 51630, 51630, 281, 6828, 300, 362, 350, 16431, 294, 552, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.18170995879591556, "compression_ratio": 1.7906976744186047, "no_speech_prob": 2.0144632799201645e-05}, {"id": 442, "seek": 127740, "start": 1289.0400000000002, "end": 1294.2800000000002, "text": " So in that case, those quantities", "tokens": [50364, 300, 436, 366, 6828, 300, 362, 733, 295, 12413, 294, 552, 11, 50492, 50492, 498, 291, 528, 13, 50522, 50522, 814, 362, 350, 16431, 13, 50598, 50598, 400, 498, 291, 362, 257, 350, 475, 1564, 294, 257, 1339, 11, 50680, 50680, 309, 311, 406, 886, 709, 295, 257, 1154, 13, 50740, 50946, 407, 294, 300, 1389, 11, 729, 22927, 51208, 51208, 820, 406, 312, 1219, 2771, 2448, 13, 51270, 51270, 814, 820, 312, 1219, 1422, 7165, 2448, 13, 51366, 51366, 407, 257, 1422, 7165, 1196, 307, 1936, 257, 2674, 2144, 51494, 51494, 295, 264, 1558, 295, 13760, 420, 16235, 51630, 51630, 281, 6828, 300, 362, 350, 16431, 294, 552, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.18170995879591556, "compression_ratio": 1.7906976744186047, "no_speech_prob": 2.0144632799201645e-05}, {"id": 443, "seek": 127740, "start": 1294.2800000000002, "end": 1295.52, "text": " should not be called gradients.", "tokens": [50364, 300, 436, 366, 6828, 300, 362, 733, 295, 12413, 294, 552, 11, 50492, 50492, 498, 291, 528, 13, 50522, 50522, 814, 362, 350, 16431, 13, 50598, 50598, 400, 498, 291, 362, 257, 350, 475, 1564, 294, 257, 1339, 11, 50680, 50680, 309, 311, 406, 886, 709, 295, 257, 1154, 13, 50740, 50946, 407, 294, 300, 1389, 11, 729, 22927, 51208, 51208, 820, 406, 312, 1219, 2771, 2448, 13, 51270, 51270, 814, 820, 312, 1219, 1422, 7165, 2448, 13, 51366, 51366, 407, 257, 1422, 7165, 1196, 307, 1936, 257, 2674, 2144, 51494, 51494, 295, 264, 1558, 295, 13760, 420, 16235, 51630, 51630, 281, 6828, 300, 362, 350, 16431, 294, 552, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.18170995879591556, "compression_ratio": 1.7906976744186047, "no_speech_prob": 2.0144632799201645e-05}, {"id": 444, "seek": 127740, "start": 1295.52, "end": 1297.44, "text": " They should be called subgradients.", "tokens": [50364, 300, 436, 366, 6828, 300, 362, 733, 295, 12413, 294, 552, 11, 50492, 50492, 498, 291, 528, 13, 50522, 50522, 814, 362, 350, 16431, 13, 50598, 50598, 400, 498, 291, 362, 257, 350, 475, 1564, 294, 257, 1339, 11, 50680, 50680, 309, 311, 406, 886, 709, 295, 257, 1154, 13, 50740, 50946, 407, 294, 300, 1389, 11, 729, 22927, 51208, 51208, 820, 406, 312, 1219, 2771, 2448, 13, 51270, 51270, 814, 820, 312, 1219, 1422, 7165, 2448, 13, 51366, 51366, 407, 257, 1422, 7165, 1196, 307, 1936, 257, 2674, 2144, 51494, 51494, 295, 264, 1558, 295, 13760, 420, 16235, 51630, 51630, 281, 6828, 300, 362, 350, 16431, 294, 552, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.18170995879591556, "compression_ratio": 1.7906976744186047, "no_speech_prob": 2.0144632799201645e-05}, {"id": 445, "seek": 127740, "start": 1297.44, "end": 1300.0, "text": " So a subgradient is basically a generalization", "tokens": [50364, 300, 436, 366, 6828, 300, 362, 733, 295, 12413, 294, 552, 11, 50492, 50492, 498, 291, 528, 13, 50522, 50522, 814, 362, 350, 16431, 13, 50598, 50598, 400, 498, 291, 362, 257, 350, 475, 1564, 294, 257, 1339, 11, 50680, 50680, 309, 311, 406, 886, 709, 295, 257, 1154, 13, 50740, 50946, 407, 294, 300, 1389, 11, 729, 22927, 51208, 51208, 820, 406, 312, 1219, 2771, 2448, 13, 51270, 51270, 814, 820, 312, 1219, 1422, 7165, 2448, 13, 51366, 51366, 407, 257, 1422, 7165, 1196, 307, 1936, 257, 2674, 2144, 51494, 51494, 295, 264, 1558, 295, 13760, 420, 16235, 51630, 51630, 281, 6828, 300, 362, 350, 16431, 294, 552, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.18170995879591556, "compression_ratio": 1.7906976744186047, "no_speech_prob": 2.0144632799201645e-05}, {"id": 446, "seek": 127740, "start": 1300.0, "end": 1302.72, "text": " of the idea of derivative or gradient", "tokens": [50364, 300, 436, 366, 6828, 300, 362, 733, 295, 12413, 294, 552, 11, 50492, 50492, 498, 291, 528, 13, 50522, 50522, 814, 362, 350, 16431, 13, 50598, 50598, 400, 498, 291, 362, 257, 350, 475, 1564, 294, 257, 1339, 11, 50680, 50680, 309, 311, 406, 886, 709, 295, 257, 1154, 13, 50740, 50946, 407, 294, 300, 1389, 11, 729, 22927, 51208, 51208, 820, 406, 312, 1219, 2771, 2448, 13, 51270, 51270, 814, 820, 312, 1219, 1422, 7165, 2448, 13, 51366, 51366, 407, 257, 1422, 7165, 1196, 307, 1936, 257, 2674, 2144, 51494, 51494, 295, 264, 1558, 295, 13760, 420, 16235, 51630, 51630, 281, 6828, 300, 362, 350, 16431, 294, 552, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.18170995879591556, "compression_ratio": 1.7906976744186047, "no_speech_prob": 2.0144632799201645e-05}, {"id": 447, "seek": 127740, "start": 1302.72, "end": 1306.0400000000002, "text": " to functions that have kinks in them.", "tokens": [50364, 300, 436, 366, 6828, 300, 362, 733, 295, 12413, 294, 552, 11, 50492, 50492, 498, 291, 528, 13, 50522, 50522, 814, 362, 350, 16431, 13, 50598, 50598, 400, 498, 291, 362, 257, 350, 475, 1564, 294, 257, 1339, 11, 50680, 50680, 309, 311, 406, 886, 709, 295, 257, 1154, 13, 50740, 50946, 407, 294, 300, 1389, 11, 729, 22927, 51208, 51208, 820, 406, 312, 1219, 2771, 2448, 13, 51270, 51270, 814, 820, 312, 1219, 1422, 7165, 2448, 13, 51366, 51366, 407, 257, 1422, 7165, 1196, 307, 1936, 257, 2674, 2144, 51494, 51494, 295, 264, 1558, 295, 13760, 420, 16235, 51630, 51630, 281, 6828, 300, 362, 350, 16431, 294, 552, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.18170995879591556, "compression_ratio": 1.7906976744186047, "no_speech_prob": 2.0144632799201645e-05}, {"id": 448, "seek": 130604, "start": 1306.04, "end": 1309.6399999999999, "text": " So wherever you have a function that has a kink in it,", "tokens": [50364, 407, 8660, 291, 362, 257, 2445, 300, 575, 257, 350, 475, 294, 309, 11, 50544, 50544, 604, 13525, 300, 307, 1296, 264, 13525, 295, 472, 1252, 50750, 50750, 293, 264, 13525, 295, 264, 661, 1252, 307, 257, 7363, 1422, 7165, 1196, 13, 51118, 51118, 407, 562, 291, 366, 412, 264, 350, 475, 11, 291, 4536, 11, 51216, 51216, 731, 11, 264, 13760, 307, 341, 11, 420, 309, 311, 300, 11, 51308, 51308, 420, 309, 311, 733, 295, 4079, 294, 1296, 13, 51394, 51394, 400, 291, 434, 2489, 13, 51480, 51480, 4534, 295, 264, 8177, 300, 3079, 281, 5508, 6828, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.10894457807818662, "compression_ratio": 1.6763285024154588, "no_speech_prob": 1.0450216905155685e-05}, {"id": 449, "seek": 130604, "start": 1309.6399999999999, "end": 1313.76, "text": " any slope that is between the slope of one side", "tokens": [50364, 407, 8660, 291, 362, 257, 2445, 300, 575, 257, 350, 475, 294, 309, 11, 50544, 50544, 604, 13525, 300, 307, 1296, 264, 13525, 295, 472, 1252, 50750, 50750, 293, 264, 13525, 295, 264, 661, 1252, 307, 257, 7363, 1422, 7165, 1196, 13, 51118, 51118, 407, 562, 291, 366, 412, 264, 350, 475, 11, 291, 4536, 11, 51216, 51216, 731, 11, 264, 13760, 307, 341, 11, 420, 309, 311, 300, 11, 51308, 51308, 420, 309, 311, 733, 295, 4079, 294, 1296, 13, 51394, 51394, 400, 291, 434, 2489, 13, 51480, 51480, 4534, 295, 264, 8177, 300, 3079, 281, 5508, 6828, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.10894457807818662, "compression_ratio": 1.6763285024154588, "no_speech_prob": 1.0450216905155685e-05}, {"id": 450, "seek": 130604, "start": 1313.76, "end": 1321.12, "text": " and the slope of the other side is a valid subgradient.", "tokens": [50364, 407, 8660, 291, 362, 257, 2445, 300, 575, 257, 350, 475, 294, 309, 11, 50544, 50544, 604, 13525, 300, 307, 1296, 264, 13525, 295, 472, 1252, 50750, 50750, 293, 264, 13525, 295, 264, 661, 1252, 307, 257, 7363, 1422, 7165, 1196, 13, 51118, 51118, 407, 562, 291, 366, 412, 264, 350, 475, 11, 291, 4536, 11, 51216, 51216, 731, 11, 264, 13760, 307, 341, 11, 420, 309, 311, 300, 11, 51308, 51308, 420, 309, 311, 733, 295, 4079, 294, 1296, 13, 51394, 51394, 400, 291, 434, 2489, 13, 51480, 51480, 4534, 295, 264, 8177, 300, 3079, 281, 5508, 6828, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.10894457807818662, "compression_ratio": 1.6763285024154588, "no_speech_prob": 1.0450216905155685e-05}, {"id": 451, "seek": 130604, "start": 1321.12, "end": 1323.08, "text": " So when you are at the kink, you decide,", "tokens": [50364, 407, 8660, 291, 362, 257, 2445, 300, 575, 257, 350, 475, 294, 309, 11, 50544, 50544, 604, 13525, 300, 307, 1296, 264, 13525, 295, 472, 1252, 50750, 50750, 293, 264, 13525, 295, 264, 661, 1252, 307, 257, 7363, 1422, 7165, 1196, 13, 51118, 51118, 407, 562, 291, 366, 412, 264, 350, 475, 11, 291, 4536, 11, 51216, 51216, 731, 11, 264, 13760, 307, 341, 11, 420, 309, 311, 300, 11, 51308, 51308, 420, 309, 311, 733, 295, 4079, 294, 1296, 13, 51394, 51394, 400, 291, 434, 2489, 13, 51480, 51480, 4534, 295, 264, 8177, 300, 3079, 281, 5508, 6828, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.10894457807818662, "compression_ratio": 1.6763285024154588, "no_speech_prob": 1.0450216905155685e-05}, {"id": 452, "seek": 130604, "start": 1323.08, "end": 1324.92, "text": " well, the derivative is this, or it's that,", "tokens": [50364, 407, 8660, 291, 362, 257, 2445, 300, 575, 257, 350, 475, 294, 309, 11, 50544, 50544, 604, 13525, 300, 307, 1296, 264, 13525, 295, 472, 1252, 50750, 50750, 293, 264, 13525, 295, 264, 661, 1252, 307, 257, 7363, 1422, 7165, 1196, 13, 51118, 51118, 407, 562, 291, 366, 412, 264, 350, 475, 11, 291, 4536, 11, 51216, 51216, 731, 11, 264, 13760, 307, 341, 11, 420, 309, 311, 300, 11, 51308, 51308, 420, 309, 311, 733, 295, 4079, 294, 1296, 13, 51394, 51394, 400, 291, 434, 2489, 13, 51480, 51480, 4534, 295, 264, 8177, 300, 3079, 281, 5508, 6828, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.10894457807818662, "compression_ratio": 1.6763285024154588, "no_speech_prob": 1.0450216905155685e-05}, {"id": 453, "seek": 130604, "start": 1324.92, "end": 1326.6399999999999, "text": " or it's kind of somewhere in between.", "tokens": [50364, 407, 8660, 291, 362, 257, 2445, 300, 575, 257, 350, 475, 294, 309, 11, 50544, 50544, 604, 13525, 300, 307, 1296, 264, 13525, 295, 472, 1252, 50750, 50750, 293, 264, 13525, 295, 264, 661, 1252, 307, 257, 7363, 1422, 7165, 1196, 13, 51118, 51118, 407, 562, 291, 366, 412, 264, 350, 475, 11, 291, 4536, 11, 51216, 51216, 731, 11, 264, 13760, 307, 341, 11, 420, 309, 311, 300, 11, 51308, 51308, 420, 309, 311, 733, 295, 4079, 294, 1296, 13, 51394, 51394, 400, 291, 434, 2489, 13, 51480, 51480, 4534, 295, 264, 8177, 300, 3079, 281, 5508, 6828, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.10894457807818662, "compression_ratio": 1.6763285024154588, "no_speech_prob": 1.0450216905155685e-05}, {"id": 454, "seek": 130604, "start": 1326.6399999999999, "end": 1328.36, "text": " And you're fine.", "tokens": [50364, 407, 8660, 291, 362, 257, 2445, 300, 575, 257, 350, 475, 294, 309, 11, 50544, 50544, 604, 13525, 300, 307, 1296, 264, 13525, 295, 472, 1252, 50750, 50750, 293, 264, 13525, 295, 264, 661, 1252, 307, 257, 7363, 1422, 7165, 1196, 13, 51118, 51118, 407, 562, 291, 366, 412, 264, 350, 475, 11, 291, 4536, 11, 51216, 51216, 731, 11, 264, 13760, 307, 341, 11, 420, 309, 311, 300, 11, 51308, 51308, 420, 309, 311, 733, 295, 4079, 294, 1296, 13, 51394, 51394, 400, 291, 434, 2489, 13, 51480, 51480, 4534, 295, 264, 8177, 300, 3079, 281, 5508, 6828, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.10894457807818662, "compression_ratio": 1.6763285024154588, "no_speech_prob": 1.0450216905155685e-05}, {"id": 455, "seek": 130604, "start": 1328.36, "end": 1335.32, "text": " Most of the proof that apply to smooth functions", "tokens": [50364, 407, 8660, 291, 362, 257, 2445, 300, 575, 257, 350, 475, 294, 309, 11, 50544, 50544, 604, 13525, 300, 307, 1296, 264, 13525, 295, 472, 1252, 50750, 50750, 293, 264, 13525, 295, 264, 661, 1252, 307, 257, 7363, 1422, 7165, 1196, 13, 51118, 51118, 407, 562, 291, 366, 412, 264, 350, 475, 11, 291, 4536, 11, 51216, 51216, 731, 11, 264, 13760, 307, 341, 11, 420, 309, 311, 300, 11, 51308, 51308, 420, 309, 311, 733, 295, 4079, 294, 1296, 13, 51394, 51394, 400, 291, 434, 2489, 13, 51480, 51480, 4534, 295, 264, 8177, 300, 3079, 281, 5508, 6828, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.10894457807818662, "compression_ratio": 1.6763285024154588, "no_speech_prob": 1.0450216905155685e-05}, {"id": 456, "seek": 133532, "start": 1335.32, "end": 1338.48, "text": " in terms of minimization often apply also", "tokens": [50364, 294, 2115, 295, 4464, 2144, 2049, 3079, 611, 50522, 50522, 281, 2107, 12, 82, 30803, 6828, 300, 1936, 366, 50714, 50714, 819, 9364, 294, 881, 295, 264, 636, 13, 50818, 50818, 407, 550, 577, 360, 321, 5586, 10910, 42432, 507, 30, 50994, 50994, 492, 360, 406, 5586, 10910, 42432, 507, 13, 51170, 51170, 682, 1186, 11, 294, 2452, 2539, 3652, 11, 51308, 51308, 881, 2452, 2539, 3652, 11, 264, 2445, 300, 321, 366, 40425, 51486, 51486, 307, 2107, 12, 1671, 303, 87, 13, 51620, 51620, 682, 1186, 11, 341, 307, 472, 1778, 983, 309, 51696, 51696, 1890, 370, 938, 337, 2452, 2539, 281, 1813, 17034, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1401780215176669, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.4733688658452593e-05}, {"id": 457, "seek": 133532, "start": 1338.48, "end": 1342.32, "text": " to non-smooth functions that basically are", "tokens": [50364, 294, 2115, 295, 4464, 2144, 2049, 3079, 611, 50522, 50522, 281, 2107, 12, 82, 30803, 6828, 300, 1936, 366, 50714, 50714, 819, 9364, 294, 881, 295, 264, 636, 13, 50818, 50818, 407, 550, 577, 360, 321, 5586, 10910, 42432, 507, 30, 50994, 50994, 492, 360, 406, 5586, 10910, 42432, 507, 13, 51170, 51170, 682, 1186, 11, 294, 2452, 2539, 3652, 11, 51308, 51308, 881, 2452, 2539, 3652, 11, 264, 2445, 300, 321, 366, 40425, 51486, 51486, 307, 2107, 12, 1671, 303, 87, 13, 51620, 51620, 682, 1186, 11, 341, 307, 472, 1778, 983, 309, 51696, 51696, 1890, 370, 938, 337, 2452, 2539, 281, 1813, 17034, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1401780215176669, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.4733688658452593e-05}, {"id": 458, "seek": 133532, "start": 1342.32, "end": 1344.3999999999999, "text": " differentiable in most of the way.", "tokens": [50364, 294, 2115, 295, 4464, 2144, 2049, 3079, 611, 50522, 50522, 281, 2107, 12, 82, 30803, 6828, 300, 1936, 366, 50714, 50714, 819, 9364, 294, 881, 295, 264, 636, 13, 50818, 50818, 407, 550, 577, 360, 321, 5586, 10910, 42432, 507, 30, 50994, 50994, 492, 360, 406, 5586, 10910, 42432, 507, 13, 51170, 51170, 682, 1186, 11, 294, 2452, 2539, 3652, 11, 51308, 51308, 881, 2452, 2539, 3652, 11, 264, 2445, 300, 321, 366, 40425, 51486, 51486, 307, 2107, 12, 1671, 303, 87, 13, 51620, 51620, 682, 1186, 11, 341, 307, 472, 1778, 983, 309, 51696, 51696, 1890, 370, 938, 337, 2452, 2539, 281, 1813, 17034, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1401780215176669, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.4733688658452593e-05}, {"id": 459, "seek": 133532, "start": 1344.3999999999999, "end": 1347.9199999999998, "text": " So then how do we ensure strict convexity?", "tokens": [50364, 294, 2115, 295, 4464, 2144, 2049, 3079, 611, 50522, 50522, 281, 2107, 12, 82, 30803, 6828, 300, 1936, 366, 50714, 50714, 819, 9364, 294, 881, 295, 264, 636, 13, 50818, 50818, 407, 550, 577, 360, 321, 5586, 10910, 42432, 507, 30, 50994, 50994, 492, 360, 406, 5586, 10910, 42432, 507, 13, 51170, 51170, 682, 1186, 11, 294, 2452, 2539, 3652, 11, 51308, 51308, 881, 2452, 2539, 3652, 11, 264, 2445, 300, 321, 366, 40425, 51486, 51486, 307, 2107, 12, 1671, 303, 87, 13, 51620, 51620, 682, 1186, 11, 341, 307, 472, 1778, 983, 309, 51696, 51696, 1890, 370, 938, 337, 2452, 2539, 281, 1813, 17034, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1401780215176669, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.4733688658452593e-05}, {"id": 460, "seek": 133532, "start": 1347.9199999999998, "end": 1351.4399999999998, "text": " We do not ensure strict convexity.", "tokens": [50364, 294, 2115, 295, 4464, 2144, 2049, 3079, 611, 50522, 50522, 281, 2107, 12, 82, 30803, 6828, 300, 1936, 366, 50714, 50714, 819, 9364, 294, 881, 295, 264, 636, 13, 50818, 50818, 407, 550, 577, 360, 321, 5586, 10910, 42432, 507, 30, 50994, 50994, 492, 360, 406, 5586, 10910, 42432, 507, 13, 51170, 51170, 682, 1186, 11, 294, 2452, 2539, 3652, 11, 51308, 51308, 881, 2452, 2539, 3652, 11, 264, 2445, 300, 321, 366, 40425, 51486, 51486, 307, 2107, 12, 1671, 303, 87, 13, 51620, 51620, 682, 1186, 11, 341, 307, 472, 1778, 983, 309, 51696, 51696, 1890, 370, 938, 337, 2452, 2539, 281, 1813, 17034, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1401780215176669, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.4733688658452593e-05}, {"id": 461, "seek": 133532, "start": 1351.4399999999998, "end": 1354.2, "text": " In fact, in deep learning systems,", "tokens": [50364, 294, 2115, 295, 4464, 2144, 2049, 3079, 611, 50522, 50522, 281, 2107, 12, 82, 30803, 6828, 300, 1936, 366, 50714, 50714, 819, 9364, 294, 881, 295, 264, 636, 13, 50818, 50818, 407, 550, 577, 360, 321, 5586, 10910, 42432, 507, 30, 50994, 50994, 492, 360, 406, 5586, 10910, 42432, 507, 13, 51170, 51170, 682, 1186, 11, 294, 2452, 2539, 3652, 11, 51308, 51308, 881, 2452, 2539, 3652, 11, 264, 2445, 300, 321, 366, 40425, 51486, 51486, 307, 2107, 12, 1671, 303, 87, 13, 51620, 51620, 682, 1186, 11, 341, 307, 472, 1778, 983, 309, 51696, 51696, 1890, 370, 938, 337, 2452, 2539, 281, 1813, 17034, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1401780215176669, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.4733688658452593e-05}, {"id": 462, "seek": 133532, "start": 1354.2, "end": 1357.76, "text": " most deep learning systems, the function that we are optimizing", "tokens": [50364, 294, 2115, 295, 4464, 2144, 2049, 3079, 611, 50522, 50522, 281, 2107, 12, 82, 30803, 6828, 300, 1936, 366, 50714, 50714, 819, 9364, 294, 881, 295, 264, 636, 13, 50818, 50818, 407, 550, 577, 360, 321, 5586, 10910, 42432, 507, 30, 50994, 50994, 492, 360, 406, 5586, 10910, 42432, 507, 13, 51170, 51170, 682, 1186, 11, 294, 2452, 2539, 3652, 11, 51308, 51308, 881, 2452, 2539, 3652, 11, 264, 2445, 300, 321, 366, 40425, 51486, 51486, 307, 2107, 12, 1671, 303, 87, 13, 51620, 51620, 682, 1186, 11, 341, 307, 472, 1778, 983, 309, 51696, 51696, 1890, 370, 938, 337, 2452, 2539, 281, 1813, 17034, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1401780215176669, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.4733688658452593e-05}, {"id": 463, "seek": 133532, "start": 1357.76, "end": 1360.4399999999998, "text": " is non-convex.", "tokens": [50364, 294, 2115, 295, 4464, 2144, 2049, 3079, 611, 50522, 50522, 281, 2107, 12, 82, 30803, 6828, 300, 1936, 366, 50714, 50714, 819, 9364, 294, 881, 295, 264, 636, 13, 50818, 50818, 407, 550, 577, 360, 321, 5586, 10910, 42432, 507, 30, 50994, 50994, 492, 360, 406, 5586, 10910, 42432, 507, 13, 51170, 51170, 682, 1186, 11, 294, 2452, 2539, 3652, 11, 51308, 51308, 881, 2452, 2539, 3652, 11, 264, 2445, 300, 321, 366, 40425, 51486, 51486, 307, 2107, 12, 1671, 303, 87, 13, 51620, 51620, 682, 1186, 11, 341, 307, 472, 1778, 983, 309, 51696, 51696, 1890, 370, 938, 337, 2452, 2539, 281, 1813, 17034, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1401780215176669, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.4733688658452593e-05}, {"id": 464, "seek": 133532, "start": 1360.4399999999998, "end": 1361.96, "text": " In fact, this is one reason why it", "tokens": [50364, 294, 2115, 295, 4464, 2144, 2049, 3079, 611, 50522, 50522, 281, 2107, 12, 82, 30803, 6828, 300, 1936, 366, 50714, 50714, 819, 9364, 294, 881, 295, 264, 636, 13, 50818, 50818, 407, 550, 577, 360, 321, 5586, 10910, 42432, 507, 30, 50994, 50994, 492, 360, 406, 5586, 10910, 42432, 507, 13, 51170, 51170, 682, 1186, 11, 294, 2452, 2539, 3652, 11, 51308, 51308, 881, 2452, 2539, 3652, 11, 264, 2445, 300, 321, 366, 40425, 51486, 51486, 307, 2107, 12, 1671, 303, 87, 13, 51620, 51620, 682, 1186, 11, 341, 307, 472, 1778, 983, 309, 51696, 51696, 1890, 370, 938, 337, 2452, 2539, 281, 1813, 17034, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1401780215176669, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.4733688658452593e-05}, {"id": 465, "seek": 133532, "start": 1361.96, "end": 1364.3999999999999, "text": " took so long for deep learning to become prominent.", "tokens": [50364, 294, 2115, 295, 4464, 2144, 2049, 3079, 611, 50522, 50522, 281, 2107, 12, 82, 30803, 6828, 300, 1936, 366, 50714, 50714, 819, 9364, 294, 881, 295, 264, 636, 13, 50818, 50818, 407, 550, 577, 360, 321, 5586, 10910, 42432, 507, 30, 50994, 50994, 492, 360, 406, 5586, 10910, 42432, 507, 13, 51170, 51170, 682, 1186, 11, 294, 2452, 2539, 3652, 11, 51308, 51308, 881, 2452, 2539, 3652, 11, 264, 2445, 300, 321, 366, 40425, 51486, 51486, 307, 2107, 12, 1671, 303, 87, 13, 51620, 51620, 682, 1186, 11, 341, 307, 472, 1778, 983, 309, 51696, 51696, 1890, 370, 938, 337, 2452, 2539, 281, 1813, 17034, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1401780215176669, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.4733688658452593e-05}, {"id": 466, "seek": 136440, "start": 1364.4, "end": 1367.64, "text": " It's because a lot of people, particularly theoreticians,", "tokens": [50364, 467, 311, 570, 257, 688, 295, 561, 11, 4098, 14308, 8455, 11, 50526, 50526, 561, 567, 366, 29400, 36707, 11, 50622, 50622, 645, 588, 5338, 295, 264, 1558, 300, 291, 50700, 50700, 632, 281, 17522, 257, 2107, 12, 1671, 303, 87, 10024, 13, 50824, 50824, 400, 436, 584, 11, 341, 393, 380, 6264, 589, 11, 50904, 50904, 570, 291, 393, 380, 7081, 1340, 466, 309, 13, 50988, 50988, 29524, 484, 309, 775, 589, 13, 51034, 51034, 509, 393, 380, 7081, 1340, 466, 309, 11, 457, 309, 775, 589, 13, 51148, 51148, 400, 370, 341, 307, 257, 2590, 11, 293, 309, 311, 364, 1880, 551, 51382, 51382, 281, 519, 466, 11, 257, 2590, 689, 51508, 51508, 264, 20864, 1953, 1936, 5567, 51642, 51642, 437, 561, 727, 360, 294, 2115, 295, 7043, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16390776457609954, "compression_ratio": 1.851985559566787, "no_speech_prob": 2.6271094611729495e-05}, {"id": 467, "seek": 136440, "start": 1367.64, "end": 1369.5600000000002, "text": " people who are theoretically minded,", "tokens": [50364, 467, 311, 570, 257, 688, 295, 561, 11, 4098, 14308, 8455, 11, 50526, 50526, 561, 567, 366, 29400, 36707, 11, 50622, 50622, 645, 588, 5338, 295, 264, 1558, 300, 291, 50700, 50700, 632, 281, 17522, 257, 2107, 12, 1671, 303, 87, 10024, 13, 50824, 50824, 400, 436, 584, 11, 341, 393, 380, 6264, 589, 11, 50904, 50904, 570, 291, 393, 380, 7081, 1340, 466, 309, 13, 50988, 50988, 29524, 484, 309, 775, 589, 13, 51034, 51034, 509, 393, 380, 7081, 1340, 466, 309, 11, 457, 309, 775, 589, 13, 51148, 51148, 400, 370, 341, 307, 257, 2590, 11, 293, 309, 311, 364, 1880, 551, 51382, 51382, 281, 519, 466, 11, 257, 2590, 689, 51508, 51508, 264, 20864, 1953, 1936, 5567, 51642, 51642, 437, 561, 727, 360, 294, 2115, 295, 7043, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16390776457609954, "compression_ratio": 1.851985559566787, "no_speech_prob": 2.6271094611729495e-05}, {"id": 468, "seek": 136440, "start": 1369.5600000000002, "end": 1371.1200000000001, "text": " were very scared of the idea that you", "tokens": [50364, 467, 311, 570, 257, 688, 295, 561, 11, 4098, 14308, 8455, 11, 50526, 50526, 561, 567, 366, 29400, 36707, 11, 50622, 50622, 645, 588, 5338, 295, 264, 1558, 300, 291, 50700, 50700, 632, 281, 17522, 257, 2107, 12, 1671, 303, 87, 10024, 13, 50824, 50824, 400, 436, 584, 11, 341, 393, 380, 6264, 589, 11, 50904, 50904, 570, 291, 393, 380, 7081, 1340, 466, 309, 13, 50988, 50988, 29524, 484, 309, 775, 589, 13, 51034, 51034, 509, 393, 380, 7081, 1340, 466, 309, 11, 457, 309, 775, 589, 13, 51148, 51148, 400, 370, 341, 307, 257, 2590, 11, 293, 309, 311, 364, 1880, 551, 51382, 51382, 281, 519, 466, 11, 257, 2590, 689, 51508, 51508, 264, 20864, 1953, 1936, 5567, 51642, 51642, 437, 561, 727, 360, 294, 2115, 295, 7043, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16390776457609954, "compression_ratio": 1.851985559566787, "no_speech_prob": 2.6271094611729495e-05}, {"id": 469, "seek": 136440, "start": 1371.1200000000001, "end": 1373.6000000000001, "text": " had to minimize a non-convex objective.", "tokens": [50364, 467, 311, 570, 257, 688, 295, 561, 11, 4098, 14308, 8455, 11, 50526, 50526, 561, 567, 366, 29400, 36707, 11, 50622, 50622, 645, 588, 5338, 295, 264, 1558, 300, 291, 50700, 50700, 632, 281, 17522, 257, 2107, 12, 1671, 303, 87, 10024, 13, 50824, 50824, 400, 436, 584, 11, 341, 393, 380, 6264, 589, 11, 50904, 50904, 570, 291, 393, 380, 7081, 1340, 466, 309, 13, 50988, 50988, 29524, 484, 309, 775, 589, 13, 51034, 51034, 509, 393, 380, 7081, 1340, 466, 309, 11, 457, 309, 775, 589, 13, 51148, 51148, 400, 370, 341, 307, 257, 2590, 11, 293, 309, 311, 364, 1880, 551, 51382, 51382, 281, 519, 466, 11, 257, 2590, 689, 51508, 51508, 264, 20864, 1953, 1936, 5567, 51642, 51642, 437, 561, 727, 360, 294, 2115, 295, 7043, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16390776457609954, "compression_ratio": 1.851985559566787, "no_speech_prob": 2.6271094611729495e-05}, {"id": 470, "seek": 136440, "start": 1373.6000000000001, "end": 1375.2, "text": " And they say, this can't possibly work,", "tokens": [50364, 467, 311, 570, 257, 688, 295, 561, 11, 4098, 14308, 8455, 11, 50526, 50526, 561, 567, 366, 29400, 36707, 11, 50622, 50622, 645, 588, 5338, 295, 264, 1558, 300, 291, 50700, 50700, 632, 281, 17522, 257, 2107, 12, 1671, 303, 87, 10024, 13, 50824, 50824, 400, 436, 584, 11, 341, 393, 380, 6264, 589, 11, 50904, 50904, 570, 291, 393, 380, 7081, 1340, 466, 309, 13, 50988, 50988, 29524, 484, 309, 775, 589, 13, 51034, 51034, 509, 393, 380, 7081, 1340, 466, 309, 11, 457, 309, 775, 589, 13, 51148, 51148, 400, 370, 341, 307, 257, 2590, 11, 293, 309, 311, 364, 1880, 551, 51382, 51382, 281, 519, 466, 11, 257, 2590, 689, 51508, 51508, 264, 20864, 1953, 1936, 5567, 51642, 51642, 437, 561, 727, 360, 294, 2115, 295, 7043, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16390776457609954, "compression_ratio": 1.851985559566787, "no_speech_prob": 2.6271094611729495e-05}, {"id": 471, "seek": 136440, "start": 1375.2, "end": 1376.88, "text": " because you can't prove anything about it.", "tokens": [50364, 467, 311, 570, 257, 688, 295, 561, 11, 4098, 14308, 8455, 11, 50526, 50526, 561, 567, 366, 29400, 36707, 11, 50622, 50622, 645, 588, 5338, 295, 264, 1558, 300, 291, 50700, 50700, 632, 281, 17522, 257, 2107, 12, 1671, 303, 87, 10024, 13, 50824, 50824, 400, 436, 584, 11, 341, 393, 380, 6264, 589, 11, 50904, 50904, 570, 291, 393, 380, 7081, 1340, 466, 309, 13, 50988, 50988, 29524, 484, 309, 775, 589, 13, 51034, 51034, 509, 393, 380, 7081, 1340, 466, 309, 11, 457, 309, 775, 589, 13, 51148, 51148, 400, 370, 341, 307, 257, 2590, 11, 293, 309, 311, 364, 1880, 551, 51382, 51382, 281, 519, 466, 11, 257, 2590, 689, 51508, 51508, 264, 20864, 1953, 1936, 5567, 51642, 51642, 437, 561, 727, 360, 294, 2115, 295, 7043, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16390776457609954, "compression_ratio": 1.851985559566787, "no_speech_prob": 2.6271094611729495e-05}, {"id": 472, "seek": 136440, "start": 1376.88, "end": 1377.8000000000002, "text": " Turns out it does work.", "tokens": [50364, 467, 311, 570, 257, 688, 295, 561, 11, 4098, 14308, 8455, 11, 50526, 50526, 561, 567, 366, 29400, 36707, 11, 50622, 50622, 645, 588, 5338, 295, 264, 1558, 300, 291, 50700, 50700, 632, 281, 17522, 257, 2107, 12, 1671, 303, 87, 10024, 13, 50824, 50824, 400, 436, 584, 11, 341, 393, 380, 6264, 589, 11, 50904, 50904, 570, 291, 393, 380, 7081, 1340, 466, 309, 13, 50988, 50988, 29524, 484, 309, 775, 589, 13, 51034, 51034, 509, 393, 380, 7081, 1340, 466, 309, 11, 457, 309, 775, 589, 13, 51148, 51148, 400, 370, 341, 307, 257, 2590, 11, 293, 309, 311, 364, 1880, 551, 51382, 51382, 281, 519, 466, 11, 257, 2590, 689, 51508, 51508, 264, 20864, 1953, 1936, 5567, 51642, 51642, 437, 561, 727, 360, 294, 2115, 295, 7043, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16390776457609954, "compression_ratio": 1.851985559566787, "no_speech_prob": 2.6271094611729495e-05}, {"id": 473, "seek": 136440, "start": 1377.8000000000002, "end": 1380.0800000000002, "text": " You can't prove anything about it, but it does work.", "tokens": [50364, 467, 311, 570, 257, 688, 295, 561, 11, 4098, 14308, 8455, 11, 50526, 50526, 561, 567, 366, 29400, 36707, 11, 50622, 50622, 645, 588, 5338, 295, 264, 1558, 300, 291, 50700, 50700, 632, 281, 17522, 257, 2107, 12, 1671, 303, 87, 10024, 13, 50824, 50824, 400, 436, 584, 11, 341, 393, 380, 6264, 589, 11, 50904, 50904, 570, 291, 393, 380, 7081, 1340, 466, 309, 13, 50988, 50988, 29524, 484, 309, 775, 589, 13, 51034, 51034, 509, 393, 380, 7081, 1340, 466, 309, 11, 457, 309, 775, 589, 13, 51148, 51148, 400, 370, 341, 307, 257, 2590, 11, 293, 309, 311, 364, 1880, 551, 51382, 51382, 281, 519, 466, 11, 257, 2590, 689, 51508, 51508, 264, 20864, 1953, 1936, 5567, 51642, 51642, 437, 561, 727, 360, 294, 2115, 295, 7043, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16390776457609954, "compression_ratio": 1.851985559566787, "no_speech_prob": 2.6271094611729495e-05}, {"id": 474, "seek": 136440, "start": 1380.0800000000002, "end": 1384.76, "text": " And so this is a situation, and it's an interesting thing", "tokens": [50364, 467, 311, 570, 257, 688, 295, 561, 11, 4098, 14308, 8455, 11, 50526, 50526, 561, 567, 366, 29400, 36707, 11, 50622, 50622, 645, 588, 5338, 295, 264, 1558, 300, 291, 50700, 50700, 632, 281, 17522, 257, 2107, 12, 1671, 303, 87, 10024, 13, 50824, 50824, 400, 436, 584, 11, 341, 393, 380, 6264, 589, 11, 50904, 50904, 570, 291, 393, 380, 7081, 1340, 466, 309, 13, 50988, 50988, 29524, 484, 309, 775, 589, 13, 51034, 51034, 509, 393, 380, 7081, 1340, 466, 309, 11, 457, 309, 775, 589, 13, 51148, 51148, 400, 370, 341, 307, 257, 2590, 11, 293, 309, 311, 364, 1880, 551, 51382, 51382, 281, 519, 466, 11, 257, 2590, 689, 51508, 51508, 264, 20864, 1953, 1936, 5567, 51642, 51642, 437, 561, 727, 360, 294, 2115, 295, 7043, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16390776457609954, "compression_ratio": 1.851985559566787, "no_speech_prob": 2.6271094611729495e-05}, {"id": 475, "seek": 136440, "start": 1384.76, "end": 1387.2800000000002, "text": " to think about, a situation where", "tokens": [50364, 467, 311, 570, 257, 688, 295, 561, 11, 4098, 14308, 8455, 11, 50526, 50526, 561, 567, 366, 29400, 36707, 11, 50622, 50622, 645, 588, 5338, 295, 264, 1558, 300, 291, 50700, 50700, 632, 281, 17522, 257, 2107, 12, 1671, 303, 87, 10024, 13, 50824, 50824, 400, 436, 584, 11, 341, 393, 380, 6264, 589, 11, 50904, 50904, 570, 291, 393, 380, 7081, 1340, 466, 309, 13, 50988, 50988, 29524, 484, 309, 775, 589, 13, 51034, 51034, 509, 393, 380, 7081, 1340, 466, 309, 11, 457, 309, 775, 589, 13, 51148, 51148, 400, 370, 341, 307, 257, 2590, 11, 293, 309, 311, 364, 1880, 551, 51382, 51382, 281, 519, 466, 11, 257, 2590, 689, 51508, 51508, 264, 20864, 1953, 1936, 5567, 51642, 51642, 437, 561, 727, 360, 294, 2115, 295, 7043, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16390776457609954, "compression_ratio": 1.851985559566787, "no_speech_prob": 2.6271094611729495e-05}, {"id": 476, "seek": 136440, "start": 1387.2800000000002, "end": 1389.96, "text": " the theoretical thinking basically limited", "tokens": [50364, 467, 311, 570, 257, 688, 295, 561, 11, 4098, 14308, 8455, 11, 50526, 50526, 561, 567, 366, 29400, 36707, 11, 50622, 50622, 645, 588, 5338, 295, 264, 1558, 300, 291, 50700, 50700, 632, 281, 17522, 257, 2107, 12, 1671, 303, 87, 10024, 13, 50824, 50824, 400, 436, 584, 11, 341, 393, 380, 6264, 589, 11, 50904, 50904, 570, 291, 393, 380, 7081, 1340, 466, 309, 13, 50988, 50988, 29524, 484, 309, 775, 589, 13, 51034, 51034, 509, 393, 380, 7081, 1340, 466, 309, 11, 457, 309, 775, 589, 13, 51148, 51148, 400, 370, 341, 307, 257, 2590, 11, 293, 309, 311, 364, 1880, 551, 51382, 51382, 281, 519, 466, 11, 257, 2590, 689, 51508, 51508, 264, 20864, 1953, 1936, 5567, 51642, 51642, 437, 561, 727, 360, 294, 2115, 295, 7043, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16390776457609954, "compression_ratio": 1.851985559566787, "no_speech_prob": 2.6271094611729495e-05}, {"id": 477, "seek": 136440, "start": 1389.96, "end": 1392.68, "text": " what people could do in terms of engineering,", "tokens": [50364, 467, 311, 570, 257, 688, 295, 561, 11, 4098, 14308, 8455, 11, 50526, 50526, 561, 567, 366, 29400, 36707, 11, 50622, 50622, 645, 588, 5338, 295, 264, 1558, 300, 291, 50700, 50700, 632, 281, 17522, 257, 2107, 12, 1671, 303, 87, 10024, 13, 50824, 50824, 400, 436, 584, 11, 341, 393, 380, 6264, 589, 11, 50904, 50904, 570, 291, 393, 380, 7081, 1340, 466, 309, 13, 50988, 50988, 29524, 484, 309, 775, 589, 13, 51034, 51034, 509, 393, 380, 7081, 1340, 466, 309, 11, 457, 309, 775, 589, 13, 51148, 51148, 400, 370, 341, 307, 257, 2590, 11, 293, 309, 311, 364, 1880, 551, 51382, 51382, 281, 519, 466, 11, 257, 2590, 689, 51508, 51508, 264, 20864, 1953, 1936, 5567, 51642, 51642, 437, 561, 727, 360, 294, 2115, 295, 7043, 11, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.16390776457609954, "compression_ratio": 1.851985559566787, "no_speech_prob": 2.6271094611729495e-05}, {"id": 478, "seek": 139268, "start": 1392.68, "end": 1394.48, "text": " because they couldn't prove things about it.", "tokens": [50364, 570, 436, 2809, 380, 7081, 721, 466, 309, 13, 50454, 50454, 583, 309, 3574, 484, 281, 312, 767, 588, 4005, 13, 50556, 50556, 2264, 30, 50580, 50580, 1743, 428, 13532, 13, 50618, 50618, 492, 643, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 13, 50732, 50732, 1743, 428, 13532, 412, 264, 11485, 40047, 11, 50818, 50818, 567, 994, 380, 411, 264, 2107, 12, 44, 17026, 36, 13, 50900, 51116, 467, 390, 257, 1379, 7958, 1951, 264, 3479, 2539, 1768, 51256, 51256, 300, 21116, 945, 924, 11, 1936, 13, 51424, 51424, 1057, 558, 11, 370, 437, 466, 577, 1177, 380, 34520, 35, 51554, 51554, 483, 5541, 294, 2654, 4464, 64, 1564, 309, 14235, 552, 30, 51806, 51806, 467, 775, 13, 51834, 51834, 2264, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.28005993460107037, "compression_ratio": 1.5215827338129497, "no_speech_prob": 2.505388511053752e-05}, {"id": 479, "seek": 139268, "start": 1394.48, "end": 1396.52, "text": " But it turned out to be actually very powerful.", "tokens": [50364, 570, 436, 2809, 380, 7081, 721, 466, 309, 13, 50454, 50454, 583, 309, 3574, 484, 281, 312, 767, 588, 4005, 13, 50556, 50556, 2264, 30, 50580, 50580, 1743, 428, 13532, 13, 50618, 50618, 492, 643, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 13, 50732, 50732, 1743, 428, 13532, 412, 264, 11485, 40047, 11, 50818, 50818, 567, 994, 380, 411, 264, 2107, 12, 44, 17026, 36, 13, 50900, 51116, 467, 390, 257, 1379, 7958, 1951, 264, 3479, 2539, 1768, 51256, 51256, 300, 21116, 945, 924, 11, 1936, 13, 51424, 51424, 1057, 558, 11, 370, 437, 466, 577, 1177, 380, 34520, 35, 51554, 51554, 483, 5541, 294, 2654, 4464, 64, 1564, 309, 14235, 552, 30, 51806, 51806, 467, 775, 13, 51834, 51834, 2264, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.28005993460107037, "compression_ratio": 1.5215827338129497, "no_speech_prob": 2.505388511053752e-05}, {"id": 480, "seek": 139268, "start": 1396.52, "end": 1397.0, "text": " OK?", "tokens": [50364, 570, 436, 2809, 380, 7081, 721, 466, 309, 13, 50454, 50454, 583, 309, 3574, 484, 281, 312, 767, 588, 4005, 13, 50556, 50556, 2264, 30, 50580, 50580, 1743, 428, 13532, 13, 50618, 50618, 492, 643, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 13, 50732, 50732, 1743, 428, 13532, 412, 264, 11485, 40047, 11, 50818, 50818, 567, 994, 380, 411, 264, 2107, 12, 44, 17026, 36, 13, 50900, 51116, 467, 390, 257, 1379, 7958, 1951, 264, 3479, 2539, 1768, 51256, 51256, 300, 21116, 945, 924, 11, 1936, 13, 51424, 51424, 1057, 558, 11, 370, 437, 466, 577, 1177, 380, 34520, 35, 51554, 51554, 483, 5541, 294, 2654, 4464, 64, 1564, 309, 14235, 552, 30, 51806, 51806, 467, 775, 13, 51834, 51834, 2264, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.28005993460107037, "compression_ratio": 1.5215827338129497, "no_speech_prob": 2.505388511053752e-05}, {"id": 481, "seek": 139268, "start": 1397.0, "end": 1397.76, "text": " Like your colleague.", "tokens": [50364, 570, 436, 2809, 380, 7081, 721, 466, 309, 13, 50454, 50454, 583, 309, 3574, 484, 281, 312, 767, 588, 4005, 13, 50556, 50556, 2264, 30, 50580, 50580, 1743, 428, 13532, 13, 50618, 50618, 492, 643, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 13, 50732, 50732, 1743, 428, 13532, 412, 264, 11485, 40047, 11, 50818, 50818, 567, 994, 380, 411, 264, 2107, 12, 44, 17026, 36, 13, 50900, 51116, 467, 390, 257, 1379, 7958, 1951, 264, 3479, 2539, 1768, 51256, 51256, 300, 21116, 945, 924, 11, 1936, 13, 51424, 51424, 1057, 558, 11, 370, 437, 466, 577, 1177, 380, 34520, 35, 51554, 51554, 483, 5541, 294, 2654, 4464, 64, 1564, 309, 14235, 552, 30, 51806, 51806, 467, 775, 13, 51834, 51834, 2264, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.28005993460107037, "compression_ratio": 1.5215827338129497, "no_speech_prob": 2.505388511053752e-05}, {"id": 482, "seek": 139268, "start": 1397.76, "end": 1400.04, "text": " We need to optimize non-convex functions.", "tokens": [50364, 570, 436, 2809, 380, 7081, 721, 466, 309, 13, 50454, 50454, 583, 309, 3574, 484, 281, 312, 767, 588, 4005, 13, 50556, 50556, 2264, 30, 50580, 50580, 1743, 428, 13532, 13, 50618, 50618, 492, 643, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 13, 50732, 50732, 1743, 428, 13532, 412, 264, 11485, 40047, 11, 50818, 50818, 567, 994, 380, 411, 264, 2107, 12, 44, 17026, 36, 13, 50900, 51116, 467, 390, 257, 1379, 7958, 1951, 264, 3479, 2539, 1768, 51256, 51256, 300, 21116, 945, 924, 11, 1936, 13, 51424, 51424, 1057, 558, 11, 370, 437, 466, 577, 1177, 380, 34520, 35, 51554, 51554, 483, 5541, 294, 2654, 4464, 64, 1564, 309, 14235, 552, 30, 51806, 51806, 467, 775, 13, 51834, 51834, 2264, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.28005993460107037, "compression_ratio": 1.5215827338129497, "no_speech_prob": 2.505388511053752e-05}, {"id": 483, "seek": 139268, "start": 1400.04, "end": 1401.76, "text": " Like your colleague at the Bell Labs,", "tokens": [50364, 570, 436, 2809, 380, 7081, 721, 466, 309, 13, 50454, 50454, 583, 309, 3574, 484, 281, 312, 767, 588, 4005, 13, 50556, 50556, 2264, 30, 50580, 50580, 1743, 428, 13532, 13, 50618, 50618, 492, 643, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 13, 50732, 50732, 1743, 428, 13532, 412, 264, 11485, 40047, 11, 50818, 50818, 567, 994, 380, 411, 264, 2107, 12, 44, 17026, 36, 13, 50900, 51116, 467, 390, 257, 1379, 7958, 1951, 264, 3479, 2539, 1768, 51256, 51256, 300, 21116, 945, 924, 11, 1936, 13, 51424, 51424, 1057, 558, 11, 370, 437, 466, 577, 1177, 380, 34520, 35, 51554, 51554, 483, 5541, 294, 2654, 4464, 64, 1564, 309, 14235, 552, 30, 51806, 51806, 467, 775, 13, 51834, 51834, 2264, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.28005993460107037, "compression_ratio": 1.5215827338129497, "no_speech_prob": 2.505388511053752e-05}, {"id": 484, "seek": 139268, "start": 1401.76, "end": 1403.4, "text": " who didn't like the non-MATHE.", "tokens": [50364, 570, 436, 2809, 380, 7081, 721, 466, 309, 13, 50454, 50454, 583, 309, 3574, 484, 281, 312, 767, 588, 4005, 13, 50556, 50556, 2264, 30, 50580, 50580, 1743, 428, 13532, 13, 50618, 50618, 492, 643, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 13, 50732, 50732, 1743, 428, 13532, 412, 264, 11485, 40047, 11, 50818, 50818, 567, 994, 380, 411, 264, 2107, 12, 44, 17026, 36, 13, 50900, 51116, 467, 390, 257, 1379, 7958, 1951, 264, 3479, 2539, 1768, 51256, 51256, 300, 21116, 945, 924, 11, 1936, 13, 51424, 51424, 1057, 558, 11, 370, 437, 466, 577, 1177, 380, 34520, 35, 51554, 51554, 483, 5541, 294, 2654, 4464, 64, 1564, 309, 14235, 552, 30, 51806, 51806, 467, 775, 13, 51834, 51834, 2264, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.28005993460107037, "compression_ratio": 1.5215827338129497, "no_speech_prob": 2.505388511053752e-05}, {"id": 485, "seek": 139268, "start": 1407.72, "end": 1410.52, "text": " It was a whole debate within the machine learning community", "tokens": [50364, 570, 436, 2809, 380, 7081, 721, 466, 309, 13, 50454, 50454, 583, 309, 3574, 484, 281, 312, 767, 588, 4005, 13, 50556, 50556, 2264, 30, 50580, 50580, 1743, 428, 13532, 13, 50618, 50618, 492, 643, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 13, 50732, 50732, 1743, 428, 13532, 412, 264, 11485, 40047, 11, 50818, 50818, 567, 994, 380, 411, 264, 2107, 12, 44, 17026, 36, 13, 50900, 51116, 467, 390, 257, 1379, 7958, 1951, 264, 3479, 2539, 1768, 51256, 51256, 300, 21116, 945, 924, 11, 1936, 13, 51424, 51424, 1057, 558, 11, 370, 437, 466, 577, 1177, 380, 34520, 35, 51554, 51554, 483, 5541, 294, 2654, 4464, 64, 1564, 309, 14235, 552, 30, 51806, 51806, 467, 775, 13, 51834, 51834, 2264, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.28005993460107037, "compression_ratio": 1.5215827338129497, "no_speech_prob": 2.505388511053752e-05}, {"id": 486, "seek": 139268, "start": 1410.52, "end": 1413.88, "text": " that lasted 20 years, basically.", "tokens": [50364, 570, 436, 2809, 380, 7081, 721, 466, 309, 13, 50454, 50454, 583, 309, 3574, 484, 281, 312, 767, 588, 4005, 13, 50556, 50556, 2264, 30, 50580, 50580, 1743, 428, 13532, 13, 50618, 50618, 492, 643, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 13, 50732, 50732, 1743, 428, 13532, 412, 264, 11485, 40047, 11, 50818, 50818, 567, 994, 380, 411, 264, 2107, 12, 44, 17026, 36, 13, 50900, 51116, 467, 390, 257, 1379, 7958, 1951, 264, 3479, 2539, 1768, 51256, 51256, 300, 21116, 945, 924, 11, 1936, 13, 51424, 51424, 1057, 558, 11, 370, 437, 466, 577, 1177, 380, 34520, 35, 51554, 51554, 483, 5541, 294, 2654, 4464, 64, 1564, 309, 14235, 552, 30, 51806, 51806, 467, 775, 13, 51834, 51834, 2264, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.28005993460107037, "compression_ratio": 1.5215827338129497, "no_speech_prob": 2.505388511053752e-05}, {"id": 487, "seek": 139268, "start": 1413.88, "end": 1416.48, "text": " All right, so what about how doesn't SGD", "tokens": [50364, 570, 436, 2809, 380, 7081, 721, 466, 309, 13, 50454, 50454, 583, 309, 3574, 484, 281, 312, 767, 588, 4005, 13, 50556, 50556, 2264, 30, 50580, 50580, 1743, 428, 13532, 13, 50618, 50618, 492, 643, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 13, 50732, 50732, 1743, 428, 13532, 412, 264, 11485, 40047, 11, 50818, 50818, 567, 994, 380, 411, 264, 2107, 12, 44, 17026, 36, 13, 50900, 51116, 467, 390, 257, 1379, 7958, 1951, 264, 3479, 2539, 1768, 51256, 51256, 300, 21116, 945, 924, 11, 1936, 13, 51424, 51424, 1057, 558, 11, 370, 437, 466, 577, 1177, 380, 34520, 35, 51554, 51554, 483, 5541, 294, 2654, 4464, 64, 1564, 309, 14235, 552, 30, 51806, 51806, 467, 775, 13, 51834, 51834, 2264, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.28005993460107037, "compression_ratio": 1.5215827338129497, "no_speech_prob": 2.505388511053752e-05}, {"id": 488, "seek": 139268, "start": 1416.48, "end": 1421.52, "text": " get stuck in local minima once it reaches them?", "tokens": [50364, 570, 436, 2809, 380, 7081, 721, 466, 309, 13, 50454, 50454, 583, 309, 3574, 484, 281, 312, 767, 588, 4005, 13, 50556, 50556, 2264, 30, 50580, 50580, 1743, 428, 13532, 13, 50618, 50618, 492, 643, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 13, 50732, 50732, 1743, 428, 13532, 412, 264, 11485, 40047, 11, 50818, 50818, 567, 994, 380, 411, 264, 2107, 12, 44, 17026, 36, 13, 50900, 51116, 467, 390, 257, 1379, 7958, 1951, 264, 3479, 2539, 1768, 51256, 51256, 300, 21116, 945, 924, 11, 1936, 13, 51424, 51424, 1057, 558, 11, 370, 437, 466, 577, 1177, 380, 34520, 35, 51554, 51554, 483, 5541, 294, 2654, 4464, 64, 1564, 309, 14235, 552, 30, 51806, 51806, 467, 775, 13, 51834, 51834, 2264, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.28005993460107037, "compression_ratio": 1.5215827338129497, "no_speech_prob": 2.505388511053752e-05}, {"id": 489, "seek": 139268, "start": 1421.52, "end": 1422.0800000000002, "text": " It does.", "tokens": [50364, 570, 436, 2809, 380, 7081, 721, 466, 309, 13, 50454, 50454, 583, 309, 3574, 484, 281, 312, 767, 588, 4005, 13, 50556, 50556, 2264, 30, 50580, 50580, 1743, 428, 13532, 13, 50618, 50618, 492, 643, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 13, 50732, 50732, 1743, 428, 13532, 412, 264, 11485, 40047, 11, 50818, 50818, 567, 994, 380, 411, 264, 2107, 12, 44, 17026, 36, 13, 50900, 51116, 467, 390, 257, 1379, 7958, 1951, 264, 3479, 2539, 1768, 51256, 51256, 300, 21116, 945, 924, 11, 1936, 13, 51424, 51424, 1057, 558, 11, 370, 437, 466, 577, 1177, 380, 34520, 35, 51554, 51554, 483, 5541, 294, 2654, 4464, 64, 1564, 309, 14235, 552, 30, 51806, 51806, 467, 775, 13, 51834, 51834, 2264, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.28005993460107037, "compression_ratio": 1.5215827338129497, "no_speech_prob": 2.505388511053752e-05}, {"id": 490, "seek": 139268, "start": 1422.0800000000002, "end": 1422.5600000000002, "text": " OK.", "tokens": [50364, 570, 436, 2809, 380, 7081, 721, 466, 309, 13, 50454, 50454, 583, 309, 3574, 484, 281, 312, 767, 588, 4005, 13, 50556, 50556, 2264, 30, 50580, 50580, 1743, 428, 13532, 13, 50618, 50618, 492, 643, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 13, 50732, 50732, 1743, 428, 13532, 412, 264, 11485, 40047, 11, 50818, 50818, 567, 994, 380, 411, 264, 2107, 12, 44, 17026, 36, 13, 50900, 51116, 467, 390, 257, 1379, 7958, 1951, 264, 3479, 2539, 1768, 51256, 51256, 300, 21116, 945, 924, 11, 1936, 13, 51424, 51424, 1057, 558, 11, 370, 437, 466, 577, 1177, 380, 34520, 35, 51554, 51554, 483, 5541, 294, 2654, 4464, 64, 1564, 309, 14235, 552, 30, 51806, 51806, 467, 775, 13, 51834, 51834, 2264, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.28005993460107037, "compression_ratio": 1.5215827338129497, "no_speech_prob": 2.505388511053752e-05}, {"id": 491, "seek": 142256, "start": 1422.56, "end": 1429.04, "text": " So full gradient does get stuck in local minima, right?", "tokens": [50364, 407, 1577, 16235, 775, 483, 5541, 294, 2654, 4464, 64, 11, 558, 30, 50688, 50688, 34520, 35, 307, 4748, 1570, 5541, 294, 2654, 4464, 64, 11, 50922, 50922, 570, 309, 311, 24518, 13, 50994, 50994, 467, 4045, 309, 2171, 281, 7615, 2654, 4464, 64, 13, 51168, 51168, 583, 264, 957, 1778, 983, 321, 434, 516, 51362, 51362, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 293, 2654, 4464, 64, 51516, 51516, 366, 406, 516, 281, 312, 1270, 257, 2603, 1154, 51608, 51608, 307, 300, 456, 3212, 380, 300, 867, 2654, 4464, 64, 300, 366, 24173, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11910058975219727, "compression_ratio": 1.6761904761904762, "no_speech_prob": 9.817057616601232e-06}, {"id": 492, "seek": 142256, "start": 1429.04, "end": 1433.72, "text": " SGD is slightly less stuck in local minima,", "tokens": [50364, 407, 1577, 16235, 775, 483, 5541, 294, 2654, 4464, 64, 11, 558, 30, 50688, 50688, 34520, 35, 307, 4748, 1570, 5541, 294, 2654, 4464, 64, 11, 50922, 50922, 570, 309, 311, 24518, 13, 50994, 50994, 467, 4045, 309, 2171, 281, 7615, 2654, 4464, 64, 13, 51168, 51168, 583, 264, 957, 1778, 983, 321, 434, 516, 51362, 51362, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 293, 2654, 4464, 64, 51516, 51516, 366, 406, 516, 281, 312, 1270, 257, 2603, 1154, 51608, 51608, 307, 300, 456, 3212, 380, 300, 867, 2654, 4464, 64, 300, 366, 24173, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11910058975219727, "compression_ratio": 1.6761904761904762, "no_speech_prob": 9.817057616601232e-06}, {"id": 493, "seek": 142256, "start": 1433.72, "end": 1435.1599999999999, "text": " because it's noisy.", "tokens": [50364, 407, 1577, 16235, 775, 483, 5541, 294, 2654, 4464, 64, 11, 558, 30, 50688, 50688, 34520, 35, 307, 4748, 1570, 5541, 294, 2654, 4464, 64, 11, 50922, 50922, 570, 309, 311, 24518, 13, 50994, 50994, 467, 4045, 309, 2171, 281, 7615, 2654, 4464, 64, 13, 51168, 51168, 583, 264, 957, 1778, 983, 321, 434, 516, 51362, 51362, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 293, 2654, 4464, 64, 51516, 51516, 366, 406, 516, 281, 312, 1270, 257, 2603, 1154, 51608, 51608, 307, 300, 456, 3212, 380, 300, 867, 2654, 4464, 64, 300, 366, 24173, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11910058975219727, "compression_ratio": 1.6761904761904762, "no_speech_prob": 9.817057616601232e-06}, {"id": 494, "seek": 142256, "start": 1435.1599999999999, "end": 1438.6399999999999, "text": " It allows it sometimes to escape local minima.", "tokens": [50364, 407, 1577, 16235, 775, 483, 5541, 294, 2654, 4464, 64, 11, 558, 30, 50688, 50688, 34520, 35, 307, 4748, 1570, 5541, 294, 2654, 4464, 64, 11, 50922, 50922, 570, 309, 311, 24518, 13, 50994, 50994, 467, 4045, 309, 2171, 281, 7615, 2654, 4464, 64, 13, 51168, 51168, 583, 264, 957, 1778, 983, 321, 434, 516, 51362, 51362, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 293, 2654, 4464, 64, 51516, 51516, 366, 406, 516, 281, 312, 1270, 257, 2603, 1154, 51608, 51608, 307, 300, 456, 3212, 380, 300, 867, 2654, 4464, 64, 300, 366, 24173, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11910058975219727, "compression_ratio": 1.6761904761904762, "no_speech_prob": 9.817057616601232e-06}, {"id": 495, "seek": 142256, "start": 1438.6399999999999, "end": 1442.52, "text": " But the real reason why we're going", "tokens": [50364, 407, 1577, 16235, 775, 483, 5541, 294, 2654, 4464, 64, 11, 558, 30, 50688, 50688, 34520, 35, 307, 4748, 1570, 5541, 294, 2654, 4464, 64, 11, 50922, 50922, 570, 309, 311, 24518, 13, 50994, 50994, 467, 4045, 309, 2171, 281, 7615, 2654, 4464, 64, 13, 51168, 51168, 583, 264, 957, 1778, 983, 321, 434, 516, 51362, 51362, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 293, 2654, 4464, 64, 51516, 51516, 366, 406, 516, 281, 312, 1270, 257, 2603, 1154, 51608, 51608, 307, 300, 456, 3212, 380, 300, 867, 2654, 4464, 64, 300, 366, 24173, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11910058975219727, "compression_ratio": 1.6761904761904762, "no_speech_prob": 9.817057616601232e-06}, {"id": 496, "seek": 142256, "start": 1442.52, "end": 1445.6, "text": " to optimize non-convex functions and local minima", "tokens": [50364, 407, 1577, 16235, 775, 483, 5541, 294, 2654, 4464, 64, 11, 558, 30, 50688, 50688, 34520, 35, 307, 4748, 1570, 5541, 294, 2654, 4464, 64, 11, 50922, 50922, 570, 309, 311, 24518, 13, 50994, 50994, 467, 4045, 309, 2171, 281, 7615, 2654, 4464, 64, 13, 51168, 51168, 583, 264, 957, 1778, 983, 321, 434, 516, 51362, 51362, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 293, 2654, 4464, 64, 51516, 51516, 366, 406, 516, 281, 312, 1270, 257, 2603, 1154, 51608, 51608, 307, 300, 456, 3212, 380, 300, 867, 2654, 4464, 64, 300, 366, 24173, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11910058975219727, "compression_ratio": 1.6761904761904762, "no_speech_prob": 9.817057616601232e-06}, {"id": 497, "seek": 142256, "start": 1445.6, "end": 1447.44, "text": " are not going to be such a huge problem", "tokens": [50364, 407, 1577, 16235, 775, 483, 5541, 294, 2654, 4464, 64, 11, 558, 30, 50688, 50688, 34520, 35, 307, 4748, 1570, 5541, 294, 2654, 4464, 64, 11, 50922, 50922, 570, 309, 311, 24518, 13, 50994, 50994, 467, 4045, 309, 2171, 281, 7615, 2654, 4464, 64, 13, 51168, 51168, 583, 264, 957, 1778, 983, 321, 434, 516, 51362, 51362, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 293, 2654, 4464, 64, 51516, 51516, 366, 406, 516, 281, 312, 1270, 257, 2603, 1154, 51608, 51608, 307, 300, 456, 3212, 380, 300, 867, 2654, 4464, 64, 300, 366, 24173, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11910058975219727, "compression_ratio": 1.6761904761904762, "no_speech_prob": 9.817057616601232e-06}, {"id": 498, "seek": 142256, "start": 1447.44, "end": 1452.48, "text": " is that there aren't that many local minima that are traps.", "tokens": [50364, 407, 1577, 16235, 775, 483, 5541, 294, 2654, 4464, 64, 11, 558, 30, 50688, 50688, 34520, 35, 307, 4748, 1570, 5541, 294, 2654, 4464, 64, 11, 50922, 50922, 570, 309, 311, 24518, 13, 50994, 50994, 467, 4045, 309, 2171, 281, 7615, 2654, 4464, 64, 13, 51168, 51168, 583, 264, 957, 1778, 983, 321, 434, 516, 51362, 51362, 281, 19719, 2107, 12, 1671, 303, 87, 6828, 293, 2654, 4464, 64, 51516, 51516, 366, 406, 516, 281, 312, 1270, 257, 2603, 1154, 51608, 51608, 307, 300, 456, 3212, 380, 300, 867, 2654, 4464, 64, 300, 366, 24173, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11910058975219727, "compression_ratio": 1.6761904761904762, "no_speech_prob": 9.817057616601232e-06}, {"id": 499, "seek": 145248, "start": 1452.48, "end": 1453.0, "text": " OK?", "tokens": [50364, 2264, 30, 50390, 50390, 407, 321, 434, 516, 281, 1322, 18161, 36170, 13, 50520, 50520, 400, 729, 18161, 36170, 366, 2452, 2539, 3652, 13, 50690, 50690, 400, 436, 434, 516, 281, 312, 3094, 294, 1270, 257, 636, 50772, 50772, 300, 264, 13075, 1901, 307, 1270, 257, 1090, 10139, 300, 50988, 50988, 307, 516, 281, 312, 588, 1152, 337, 264, 1185, 281, 767, 1884, 51098, 51098, 2654, 4464, 64, 337, 505, 13, 51176, 51176, 2264, 30, 51256, 51256, 407, 519, 466, 257, 3036, 689, 321, 362, 11, 294, 472, 10139, 11, 51474, 51474, 257, 2063, 2445, 300, 575, 472, 2654, 4464, 64, 293, 550, 51572, 51572, 257, 4338, 7285, 11, 558, 30, 51696, 51696, 2264, 30, 51722, 51722, 407, 309, 311, 257, 2445, 411, 341, 11, 558, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.24386806342437978, "compression_ratio": 1.8319672131147542, "no_speech_prob": 1.4508088497677818e-05}, {"id": 500, "seek": 145248, "start": 1453.0, "end": 1455.6, "text": " So we're going to build neural nets.", "tokens": [50364, 2264, 30, 50390, 50390, 407, 321, 434, 516, 281, 1322, 18161, 36170, 13, 50520, 50520, 400, 729, 18161, 36170, 366, 2452, 2539, 3652, 13, 50690, 50690, 400, 436, 434, 516, 281, 312, 3094, 294, 1270, 257, 636, 50772, 50772, 300, 264, 13075, 1901, 307, 1270, 257, 1090, 10139, 300, 50988, 50988, 307, 516, 281, 312, 588, 1152, 337, 264, 1185, 281, 767, 1884, 51098, 51098, 2654, 4464, 64, 337, 505, 13, 51176, 51176, 2264, 30, 51256, 51256, 407, 519, 466, 257, 3036, 689, 321, 362, 11, 294, 472, 10139, 11, 51474, 51474, 257, 2063, 2445, 300, 575, 472, 2654, 4464, 64, 293, 550, 51572, 51572, 257, 4338, 7285, 11, 558, 30, 51696, 51696, 2264, 30, 51722, 51722, 407, 309, 311, 257, 2445, 411, 341, 11, 558, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.24386806342437978, "compression_ratio": 1.8319672131147542, "no_speech_prob": 1.4508088497677818e-05}, {"id": 501, "seek": 145248, "start": 1455.6, "end": 1459.0, "text": " And those neural nets are deep learning systems.", "tokens": [50364, 2264, 30, 50390, 50390, 407, 321, 434, 516, 281, 1322, 18161, 36170, 13, 50520, 50520, 400, 729, 18161, 36170, 366, 2452, 2539, 3652, 13, 50690, 50690, 400, 436, 434, 516, 281, 312, 3094, 294, 1270, 257, 636, 50772, 50772, 300, 264, 13075, 1901, 307, 1270, 257, 1090, 10139, 300, 50988, 50988, 307, 516, 281, 312, 588, 1152, 337, 264, 1185, 281, 767, 1884, 51098, 51098, 2654, 4464, 64, 337, 505, 13, 51176, 51176, 2264, 30, 51256, 51256, 407, 519, 466, 257, 3036, 689, 321, 362, 11, 294, 472, 10139, 11, 51474, 51474, 257, 2063, 2445, 300, 575, 472, 2654, 4464, 64, 293, 550, 51572, 51572, 257, 4338, 7285, 11, 558, 30, 51696, 51696, 2264, 30, 51722, 51722, 407, 309, 311, 257, 2445, 411, 341, 11, 558, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.24386806342437978, "compression_ratio": 1.8319672131147542, "no_speech_prob": 1.4508088497677818e-05}, {"id": 502, "seek": 145248, "start": 1459.0, "end": 1460.64, "text": " And they're going to be built in such a way", "tokens": [50364, 2264, 30, 50390, 50390, 407, 321, 434, 516, 281, 1322, 18161, 36170, 13, 50520, 50520, 400, 729, 18161, 36170, 366, 2452, 2539, 3652, 13, 50690, 50690, 400, 436, 434, 516, 281, 312, 3094, 294, 1270, 257, 636, 50772, 50772, 300, 264, 13075, 1901, 307, 1270, 257, 1090, 10139, 300, 50988, 50988, 307, 516, 281, 312, 588, 1152, 337, 264, 1185, 281, 767, 1884, 51098, 51098, 2654, 4464, 64, 337, 505, 13, 51176, 51176, 2264, 30, 51256, 51256, 407, 519, 466, 257, 3036, 689, 321, 362, 11, 294, 472, 10139, 11, 51474, 51474, 257, 2063, 2445, 300, 575, 472, 2654, 4464, 64, 293, 550, 51572, 51572, 257, 4338, 7285, 11, 558, 30, 51696, 51696, 2264, 30, 51722, 51722, 407, 309, 311, 257, 2445, 411, 341, 11, 558, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.24386806342437978, "compression_ratio": 1.8319672131147542, "no_speech_prob": 1.4508088497677818e-05}, {"id": 503, "seek": 145248, "start": 1460.64, "end": 1464.96, "text": " that the parameter space is such a high dimension that", "tokens": [50364, 2264, 30, 50390, 50390, 407, 321, 434, 516, 281, 1322, 18161, 36170, 13, 50520, 50520, 400, 729, 18161, 36170, 366, 2452, 2539, 3652, 13, 50690, 50690, 400, 436, 434, 516, 281, 312, 3094, 294, 1270, 257, 636, 50772, 50772, 300, 264, 13075, 1901, 307, 1270, 257, 1090, 10139, 300, 50988, 50988, 307, 516, 281, 312, 588, 1152, 337, 264, 1185, 281, 767, 1884, 51098, 51098, 2654, 4464, 64, 337, 505, 13, 51176, 51176, 2264, 30, 51256, 51256, 407, 519, 466, 257, 3036, 689, 321, 362, 11, 294, 472, 10139, 11, 51474, 51474, 257, 2063, 2445, 300, 575, 472, 2654, 4464, 64, 293, 550, 51572, 51572, 257, 4338, 7285, 11, 558, 30, 51696, 51696, 2264, 30, 51722, 51722, 407, 309, 311, 257, 2445, 411, 341, 11, 558, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.24386806342437978, "compression_ratio": 1.8319672131147542, "no_speech_prob": 1.4508088497677818e-05}, {"id": 504, "seek": 145248, "start": 1464.96, "end": 1467.16, "text": " is going to be very hard for the system to actually create", "tokens": [50364, 2264, 30, 50390, 50390, 407, 321, 434, 516, 281, 1322, 18161, 36170, 13, 50520, 50520, 400, 729, 18161, 36170, 366, 2452, 2539, 3652, 13, 50690, 50690, 400, 436, 434, 516, 281, 312, 3094, 294, 1270, 257, 636, 50772, 50772, 300, 264, 13075, 1901, 307, 1270, 257, 1090, 10139, 300, 50988, 50988, 307, 516, 281, 312, 588, 1152, 337, 264, 1185, 281, 767, 1884, 51098, 51098, 2654, 4464, 64, 337, 505, 13, 51176, 51176, 2264, 30, 51256, 51256, 407, 519, 466, 257, 3036, 689, 321, 362, 11, 294, 472, 10139, 11, 51474, 51474, 257, 2063, 2445, 300, 575, 472, 2654, 4464, 64, 293, 550, 51572, 51572, 257, 4338, 7285, 11, 558, 30, 51696, 51696, 2264, 30, 51722, 51722, 407, 309, 311, 257, 2445, 411, 341, 11, 558, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.24386806342437978, "compression_ratio": 1.8319672131147542, "no_speech_prob": 1.4508088497677818e-05}, {"id": 505, "seek": 145248, "start": 1467.16, "end": 1468.72, "text": " local minima for us.", "tokens": [50364, 2264, 30, 50390, 50390, 407, 321, 434, 516, 281, 1322, 18161, 36170, 13, 50520, 50520, 400, 729, 18161, 36170, 366, 2452, 2539, 3652, 13, 50690, 50690, 400, 436, 434, 516, 281, 312, 3094, 294, 1270, 257, 636, 50772, 50772, 300, 264, 13075, 1901, 307, 1270, 257, 1090, 10139, 300, 50988, 50988, 307, 516, 281, 312, 588, 1152, 337, 264, 1185, 281, 767, 1884, 51098, 51098, 2654, 4464, 64, 337, 505, 13, 51176, 51176, 2264, 30, 51256, 51256, 407, 519, 466, 257, 3036, 689, 321, 362, 11, 294, 472, 10139, 11, 51474, 51474, 257, 2063, 2445, 300, 575, 472, 2654, 4464, 64, 293, 550, 51572, 51572, 257, 4338, 7285, 11, 558, 30, 51696, 51696, 2264, 30, 51722, 51722, 407, 309, 311, 257, 2445, 411, 341, 11, 558, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.24386806342437978, "compression_ratio": 1.8319672131147542, "no_speech_prob": 1.4508088497677818e-05}, {"id": 506, "seek": 145248, "start": 1468.72, "end": 1470.32, "text": " OK?", "tokens": [50364, 2264, 30, 50390, 50390, 407, 321, 434, 516, 281, 1322, 18161, 36170, 13, 50520, 50520, 400, 729, 18161, 36170, 366, 2452, 2539, 3652, 13, 50690, 50690, 400, 436, 434, 516, 281, 312, 3094, 294, 1270, 257, 636, 50772, 50772, 300, 264, 13075, 1901, 307, 1270, 257, 1090, 10139, 300, 50988, 50988, 307, 516, 281, 312, 588, 1152, 337, 264, 1185, 281, 767, 1884, 51098, 51098, 2654, 4464, 64, 337, 505, 13, 51176, 51176, 2264, 30, 51256, 51256, 407, 519, 466, 257, 3036, 689, 321, 362, 11, 294, 472, 10139, 11, 51474, 51474, 257, 2063, 2445, 300, 575, 472, 2654, 4464, 64, 293, 550, 51572, 51572, 257, 4338, 7285, 11, 558, 30, 51696, 51696, 2264, 30, 51722, 51722, 407, 309, 311, 257, 2445, 411, 341, 11, 558, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.24386806342437978, "compression_ratio": 1.8319672131147542, "no_speech_prob": 1.4508088497677818e-05}, {"id": 507, "seek": 145248, "start": 1470.32, "end": 1474.68, "text": " So think about a picture where we have, in one dimension,", "tokens": [50364, 2264, 30, 50390, 50390, 407, 321, 434, 516, 281, 1322, 18161, 36170, 13, 50520, 50520, 400, 729, 18161, 36170, 366, 2452, 2539, 3652, 13, 50690, 50690, 400, 436, 434, 516, 281, 312, 3094, 294, 1270, 257, 636, 50772, 50772, 300, 264, 13075, 1901, 307, 1270, 257, 1090, 10139, 300, 50988, 50988, 307, 516, 281, 312, 588, 1152, 337, 264, 1185, 281, 767, 1884, 51098, 51098, 2654, 4464, 64, 337, 505, 13, 51176, 51176, 2264, 30, 51256, 51256, 407, 519, 466, 257, 3036, 689, 321, 362, 11, 294, 472, 10139, 11, 51474, 51474, 257, 2063, 2445, 300, 575, 472, 2654, 4464, 64, 293, 550, 51572, 51572, 257, 4338, 7285, 11, 558, 30, 51696, 51696, 2264, 30, 51722, 51722, 407, 309, 311, 257, 2445, 411, 341, 11, 558, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.24386806342437978, "compression_ratio": 1.8319672131147542, "no_speech_prob": 1.4508088497677818e-05}, {"id": 508, "seek": 145248, "start": 1474.68, "end": 1476.64, "text": " a cost function that has one local minima and then", "tokens": [50364, 2264, 30, 50390, 50390, 407, 321, 434, 516, 281, 1322, 18161, 36170, 13, 50520, 50520, 400, 729, 18161, 36170, 366, 2452, 2539, 3652, 13, 50690, 50690, 400, 436, 434, 516, 281, 312, 3094, 294, 1270, 257, 636, 50772, 50772, 300, 264, 13075, 1901, 307, 1270, 257, 1090, 10139, 300, 50988, 50988, 307, 516, 281, 312, 588, 1152, 337, 264, 1185, 281, 767, 1884, 51098, 51098, 2654, 4464, 64, 337, 505, 13, 51176, 51176, 2264, 30, 51256, 51256, 407, 519, 466, 257, 3036, 689, 321, 362, 11, 294, 472, 10139, 11, 51474, 51474, 257, 2063, 2445, 300, 575, 472, 2654, 4464, 64, 293, 550, 51572, 51572, 257, 4338, 7285, 11, 558, 30, 51696, 51696, 2264, 30, 51722, 51722, 407, 309, 311, 257, 2445, 411, 341, 11, 558, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.24386806342437978, "compression_ratio": 1.8319672131147542, "no_speech_prob": 1.4508088497677818e-05}, {"id": 509, "seek": 145248, "start": 1476.64, "end": 1479.1200000000001, "text": " a global minimum, right?", "tokens": [50364, 2264, 30, 50390, 50390, 407, 321, 434, 516, 281, 1322, 18161, 36170, 13, 50520, 50520, 400, 729, 18161, 36170, 366, 2452, 2539, 3652, 13, 50690, 50690, 400, 436, 434, 516, 281, 312, 3094, 294, 1270, 257, 636, 50772, 50772, 300, 264, 13075, 1901, 307, 1270, 257, 1090, 10139, 300, 50988, 50988, 307, 516, 281, 312, 588, 1152, 337, 264, 1185, 281, 767, 1884, 51098, 51098, 2654, 4464, 64, 337, 505, 13, 51176, 51176, 2264, 30, 51256, 51256, 407, 519, 466, 257, 3036, 689, 321, 362, 11, 294, 472, 10139, 11, 51474, 51474, 257, 2063, 2445, 300, 575, 472, 2654, 4464, 64, 293, 550, 51572, 51572, 257, 4338, 7285, 11, 558, 30, 51696, 51696, 2264, 30, 51722, 51722, 407, 309, 311, 257, 2445, 411, 341, 11, 558, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.24386806342437978, "compression_ratio": 1.8319672131147542, "no_speech_prob": 1.4508088497677818e-05}, {"id": 510, "seek": 145248, "start": 1479.1200000000001, "end": 1479.64, "text": " OK?", "tokens": [50364, 2264, 30, 50390, 50390, 407, 321, 434, 516, 281, 1322, 18161, 36170, 13, 50520, 50520, 400, 729, 18161, 36170, 366, 2452, 2539, 3652, 13, 50690, 50690, 400, 436, 434, 516, 281, 312, 3094, 294, 1270, 257, 636, 50772, 50772, 300, 264, 13075, 1901, 307, 1270, 257, 1090, 10139, 300, 50988, 50988, 307, 516, 281, 312, 588, 1152, 337, 264, 1185, 281, 767, 1884, 51098, 51098, 2654, 4464, 64, 337, 505, 13, 51176, 51176, 2264, 30, 51256, 51256, 407, 519, 466, 257, 3036, 689, 321, 362, 11, 294, 472, 10139, 11, 51474, 51474, 257, 2063, 2445, 300, 575, 472, 2654, 4464, 64, 293, 550, 51572, 51572, 257, 4338, 7285, 11, 558, 30, 51696, 51696, 2264, 30, 51722, 51722, 407, 309, 311, 257, 2445, 411, 341, 11, 558, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.24386806342437978, "compression_ratio": 1.8319672131147542, "no_speech_prob": 1.4508088497677818e-05}, {"id": 511, "seek": 145248, "start": 1479.64, "end": 1481.08, "text": " So it's a function like this, right?", "tokens": [50364, 2264, 30, 50390, 50390, 407, 321, 434, 516, 281, 1322, 18161, 36170, 13, 50520, 50520, 400, 729, 18161, 36170, 366, 2452, 2539, 3652, 13, 50690, 50690, 400, 436, 434, 516, 281, 312, 3094, 294, 1270, 257, 636, 50772, 50772, 300, 264, 13075, 1901, 307, 1270, 257, 1090, 10139, 300, 50988, 50988, 307, 516, 281, 312, 588, 1152, 337, 264, 1185, 281, 767, 1884, 51098, 51098, 2654, 4464, 64, 337, 505, 13, 51176, 51176, 2264, 30, 51256, 51256, 407, 519, 466, 257, 3036, 689, 321, 362, 11, 294, 472, 10139, 11, 51474, 51474, 257, 2063, 2445, 300, 575, 472, 2654, 4464, 64, 293, 550, 51572, 51572, 257, 4338, 7285, 11, 558, 30, 51696, 51696, 2264, 30, 51722, 51722, 407, 309, 311, 257, 2445, 411, 341, 11, 558, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.24386806342437978, "compression_ratio": 1.8319672131147542, "no_speech_prob": 1.4508088497677818e-05}, {"id": 512, "seek": 148108, "start": 1481.08, "end": 1483.52, "text": " Mm-hmm.", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 513, "seek": 148108, "start": 1483.52, "end": 1484.6799999999998, "text": " And we start from here.", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 514, "seek": 148108, "start": 1484.6799999999998, "end": 1486.32, "text": " If we optimize using gradient descent,", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 515, "seek": 148108, "start": 1486.32, "end": 1488.3999999999999, "text": " we're going to get stuck in that local minima.", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 516, "seek": 148108, "start": 1488.3999999999999, "end": 1491.36, "text": " Now let's imagine that we parameterize this function now", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 517, "seek": 148108, "start": 1491.36, "end": 1492.32, "text": " with two parameters.", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 518, "seek": 148108, "start": 1492.32, "end": 1492.84, "text": " OK?", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 519, "seek": 148108, "start": 1492.84, "end": 1495.36, "text": " So we're not looking at a one-dimensional function", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 520, "seek": 148108, "start": 1495.36, "end": 1496.08, "text": " anymore.", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 521, "seek": 148108, "start": 1496.08, "end": 1498.0, "text": " We're looking at a two-dimensional function.", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 522, "seek": 148108, "start": 1498.0, "end": 1499.8799999999999, "text": " We have an extra parameter.", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 523, "seek": 148108, "start": 1499.8799999999999, "end": 1503.72, "text": " This extra parameter will allow us to go around the mountain", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 524, "seek": 148108, "start": 1503.72, "end": 1505.6799999999998, "text": " and go towards the valley, perhaps", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 525, "seek": 148108, "start": 1505.6799999999998, "end": 1508.84, "text": " without having to climb the little hill in the middle.", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 526, "seek": 148108, "start": 1508.84, "end": 1509.32, "text": " OK?", "tokens": [50364, 8266, 12, 10250, 13, 50486, 50486, 400, 321, 722, 490, 510, 13, 50544, 50544, 759, 321, 19719, 1228, 16235, 23475, 11, 50626, 50626, 321, 434, 516, 281, 483, 5541, 294, 300, 2654, 4464, 64, 13, 50730, 50730, 823, 718, 311, 3811, 300, 321, 13075, 1125, 341, 2445, 586, 50878, 50878, 365, 732, 9834, 13, 50926, 50926, 2264, 30, 50952, 50952, 407, 321, 434, 406, 1237, 412, 257, 472, 12, 18759, 2445, 51078, 51078, 3602, 13, 51114, 51114, 492, 434, 1237, 412, 257, 732, 12, 18759, 2445, 13, 51210, 51210, 492, 362, 364, 2857, 13075, 13, 51304, 51304, 639, 2857, 13075, 486, 2089, 505, 281, 352, 926, 264, 6937, 51496, 51496, 293, 352, 3030, 264, 17636, 11, 4317, 51594, 51594, 1553, 1419, 281, 10724, 264, 707, 10997, 294, 264, 2808, 13, 51752, 51752, 2264, 30, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1932410502779311, "compression_ratio": 1.7392857142857143, "no_speech_prob": 6.539975402120035e-06}, {"id": 527, "seek": 150932, "start": 1509.32, "end": 1511.28, "text": " So this is just an intuitive example", "tokens": [50364, 407, 341, 307, 445, 364, 21769, 1365, 50462, 50462, 281, 980, 291, 300, 294, 588, 1090, 18795, 7673, 11, 50602, 50602, 291, 815, 406, 362, 382, 709, 295, 257, 2654, 7285, 1154, 50722, 50722, 382, 291, 362, 294, 264, 1333, 295, 21769, 3036, 50856, 50856, 295, 2295, 18795, 7673, 11, 558, 30, 50938, 50938, 407, 510, 11, 729, 5242, 366, 294, 732, 12819, 13, 51046, 51046, 814, 366, 588, 36429, 13, 51130, 51130, 492, 434, 516, 281, 312, 1364, 365, 6803, 295, 12819, 13, 51260, 51260, 400, 512, 295, 264, 881, 5162, 2452, 2539, 3652, 51600, 51600, 362, 504, 46279, 295, 9834, 13, 51680, 51680, 865, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14587651501904736, "compression_ratio": 1.7171314741035857, "no_speech_prob": 1.8161571233576979e-06}, {"id": 528, "seek": 150932, "start": 1511.28, "end": 1514.08, "text": " to tell you that in very high dimensional spaces,", "tokens": [50364, 407, 341, 307, 445, 364, 21769, 1365, 50462, 50462, 281, 980, 291, 300, 294, 588, 1090, 18795, 7673, 11, 50602, 50602, 291, 815, 406, 362, 382, 709, 295, 257, 2654, 7285, 1154, 50722, 50722, 382, 291, 362, 294, 264, 1333, 295, 21769, 3036, 50856, 50856, 295, 2295, 18795, 7673, 11, 558, 30, 50938, 50938, 407, 510, 11, 729, 5242, 366, 294, 732, 12819, 13, 51046, 51046, 814, 366, 588, 36429, 13, 51130, 51130, 492, 434, 516, 281, 312, 1364, 365, 6803, 295, 12819, 13, 51260, 51260, 400, 512, 295, 264, 881, 5162, 2452, 2539, 3652, 51600, 51600, 362, 504, 46279, 295, 9834, 13, 51680, 51680, 865, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14587651501904736, "compression_ratio": 1.7171314741035857, "no_speech_prob": 1.8161571233576979e-06}, {"id": 529, "seek": 150932, "start": 1514.08, "end": 1516.48, "text": " you may not have as much of a local minimum problem", "tokens": [50364, 407, 341, 307, 445, 364, 21769, 1365, 50462, 50462, 281, 980, 291, 300, 294, 588, 1090, 18795, 7673, 11, 50602, 50602, 291, 815, 406, 362, 382, 709, 295, 257, 2654, 7285, 1154, 50722, 50722, 382, 291, 362, 294, 264, 1333, 295, 21769, 3036, 50856, 50856, 295, 2295, 18795, 7673, 11, 558, 30, 50938, 50938, 407, 510, 11, 729, 5242, 366, 294, 732, 12819, 13, 51046, 51046, 814, 366, 588, 36429, 13, 51130, 51130, 492, 434, 516, 281, 312, 1364, 365, 6803, 295, 12819, 13, 51260, 51260, 400, 512, 295, 264, 881, 5162, 2452, 2539, 3652, 51600, 51600, 362, 504, 46279, 295, 9834, 13, 51680, 51680, 865, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14587651501904736, "compression_ratio": 1.7171314741035857, "no_speech_prob": 1.8161571233576979e-06}, {"id": 530, "seek": 150932, "start": 1516.48, "end": 1519.1599999999999, "text": " as you have in the sort of intuitive picture", "tokens": [50364, 407, 341, 307, 445, 364, 21769, 1365, 50462, 50462, 281, 980, 291, 300, 294, 588, 1090, 18795, 7673, 11, 50602, 50602, 291, 815, 406, 362, 382, 709, 295, 257, 2654, 7285, 1154, 50722, 50722, 382, 291, 362, 294, 264, 1333, 295, 21769, 3036, 50856, 50856, 295, 2295, 18795, 7673, 11, 558, 30, 50938, 50938, 407, 510, 11, 729, 5242, 366, 294, 732, 12819, 13, 51046, 51046, 814, 366, 588, 36429, 13, 51130, 51130, 492, 434, 516, 281, 312, 1364, 365, 6803, 295, 12819, 13, 51260, 51260, 400, 512, 295, 264, 881, 5162, 2452, 2539, 3652, 51600, 51600, 362, 504, 46279, 295, 9834, 13, 51680, 51680, 865, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14587651501904736, "compression_ratio": 1.7171314741035857, "no_speech_prob": 1.8161571233576979e-06}, {"id": 531, "seek": 150932, "start": 1519.1599999999999, "end": 1520.8, "text": " of low dimensional spaces, right?", "tokens": [50364, 407, 341, 307, 445, 364, 21769, 1365, 50462, 50462, 281, 980, 291, 300, 294, 588, 1090, 18795, 7673, 11, 50602, 50602, 291, 815, 406, 362, 382, 709, 295, 257, 2654, 7285, 1154, 50722, 50722, 382, 291, 362, 294, 264, 1333, 295, 21769, 3036, 50856, 50856, 295, 2295, 18795, 7673, 11, 558, 30, 50938, 50938, 407, 510, 11, 729, 5242, 366, 294, 732, 12819, 13, 51046, 51046, 814, 366, 588, 36429, 13, 51130, 51130, 492, 434, 516, 281, 312, 1364, 365, 6803, 295, 12819, 13, 51260, 51260, 400, 512, 295, 264, 881, 5162, 2452, 2539, 3652, 51600, 51600, 362, 504, 46279, 295, 9834, 13, 51680, 51680, 865, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14587651501904736, "compression_ratio": 1.7171314741035857, "no_speech_prob": 1.8161571233576979e-06}, {"id": 532, "seek": 150932, "start": 1520.8, "end": 1522.96, "text": " So here, those pictures are in two dimensions.", "tokens": [50364, 407, 341, 307, 445, 364, 21769, 1365, 50462, 50462, 281, 980, 291, 300, 294, 588, 1090, 18795, 7673, 11, 50602, 50602, 291, 815, 406, 362, 382, 709, 295, 257, 2654, 7285, 1154, 50722, 50722, 382, 291, 362, 294, 264, 1333, 295, 21769, 3036, 50856, 50856, 295, 2295, 18795, 7673, 11, 558, 30, 50938, 50938, 407, 510, 11, 729, 5242, 366, 294, 732, 12819, 13, 51046, 51046, 814, 366, 588, 36429, 13, 51130, 51130, 492, 434, 516, 281, 312, 1364, 365, 6803, 295, 12819, 13, 51260, 51260, 400, 512, 295, 264, 881, 5162, 2452, 2539, 3652, 51600, 51600, 362, 504, 46279, 295, 9834, 13, 51680, 51680, 865, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14587651501904736, "compression_ratio": 1.7171314741035857, "no_speech_prob": 1.8161571233576979e-06}, {"id": 533, "seek": 150932, "start": 1522.96, "end": 1524.6399999999999, "text": " They are very misleading.", "tokens": [50364, 407, 341, 307, 445, 364, 21769, 1365, 50462, 50462, 281, 980, 291, 300, 294, 588, 1090, 18795, 7673, 11, 50602, 50602, 291, 815, 406, 362, 382, 709, 295, 257, 2654, 7285, 1154, 50722, 50722, 382, 291, 362, 294, 264, 1333, 295, 21769, 3036, 50856, 50856, 295, 2295, 18795, 7673, 11, 558, 30, 50938, 50938, 407, 510, 11, 729, 5242, 366, 294, 732, 12819, 13, 51046, 51046, 814, 366, 588, 36429, 13, 51130, 51130, 492, 434, 516, 281, 312, 1364, 365, 6803, 295, 12819, 13, 51260, 51260, 400, 512, 295, 264, 881, 5162, 2452, 2539, 3652, 51600, 51600, 362, 504, 46279, 295, 9834, 13, 51680, 51680, 865, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14587651501904736, "compression_ratio": 1.7171314741035857, "no_speech_prob": 1.8161571233576979e-06}, {"id": 534, "seek": 150932, "start": 1524.6399999999999, "end": 1527.24, "text": " We're going to be working with millions of dimensions.", "tokens": [50364, 407, 341, 307, 445, 364, 21769, 1365, 50462, 50462, 281, 980, 291, 300, 294, 588, 1090, 18795, 7673, 11, 50602, 50602, 291, 815, 406, 362, 382, 709, 295, 257, 2654, 7285, 1154, 50722, 50722, 382, 291, 362, 294, 264, 1333, 295, 21769, 3036, 50856, 50856, 295, 2295, 18795, 7673, 11, 558, 30, 50938, 50938, 407, 510, 11, 729, 5242, 366, 294, 732, 12819, 13, 51046, 51046, 814, 366, 588, 36429, 13, 51130, 51130, 492, 434, 516, 281, 312, 1364, 365, 6803, 295, 12819, 13, 51260, 51260, 400, 512, 295, 264, 881, 5162, 2452, 2539, 3652, 51600, 51600, 362, 504, 46279, 295, 9834, 13, 51680, 51680, 865, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14587651501904736, "compression_ratio": 1.7171314741035857, "no_speech_prob": 1.8161571233576979e-06}, {"id": 535, "seek": 150932, "start": 1527.24, "end": 1534.04, "text": " And some of the most recent deep learning systems", "tokens": [50364, 407, 341, 307, 445, 364, 21769, 1365, 50462, 50462, 281, 980, 291, 300, 294, 588, 1090, 18795, 7673, 11, 50602, 50602, 291, 815, 406, 362, 382, 709, 295, 257, 2654, 7285, 1154, 50722, 50722, 382, 291, 362, 294, 264, 1333, 295, 21769, 3036, 50856, 50856, 295, 2295, 18795, 7673, 11, 558, 30, 50938, 50938, 407, 510, 11, 729, 5242, 366, 294, 732, 12819, 13, 51046, 51046, 814, 366, 588, 36429, 13, 51130, 51130, 492, 434, 516, 281, 312, 1364, 365, 6803, 295, 12819, 13, 51260, 51260, 400, 512, 295, 264, 881, 5162, 2452, 2539, 3652, 51600, 51600, 362, 504, 46279, 295, 9834, 13, 51680, 51680, 865, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14587651501904736, "compression_ratio": 1.7171314741035857, "no_speech_prob": 1.8161571233576979e-06}, {"id": 536, "seek": 150932, "start": 1534.04, "end": 1535.6399999999999, "text": " have trillions of parameters.", "tokens": [50364, 407, 341, 307, 445, 364, 21769, 1365, 50462, 50462, 281, 980, 291, 300, 294, 588, 1090, 18795, 7673, 11, 50602, 50602, 291, 815, 406, 362, 382, 709, 295, 257, 2654, 7285, 1154, 50722, 50722, 382, 291, 362, 294, 264, 1333, 295, 21769, 3036, 50856, 50856, 295, 2295, 18795, 7673, 11, 558, 30, 50938, 50938, 407, 510, 11, 729, 5242, 366, 294, 732, 12819, 13, 51046, 51046, 814, 366, 588, 36429, 13, 51130, 51130, 492, 434, 516, 281, 312, 1364, 365, 6803, 295, 12819, 13, 51260, 51260, 400, 512, 295, 264, 881, 5162, 2452, 2539, 3652, 51600, 51600, 362, 504, 46279, 295, 9834, 13, 51680, 51680, 865, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14587651501904736, "compression_ratio": 1.7171314741035857, "no_speech_prob": 1.8161571233576979e-06}, {"id": 537, "seek": 150932, "start": 1535.6399999999999, "end": 1538.36, "text": " Yeah.", "tokens": [50364, 407, 341, 307, 445, 364, 21769, 1365, 50462, 50462, 281, 980, 291, 300, 294, 588, 1090, 18795, 7673, 11, 50602, 50602, 291, 815, 406, 362, 382, 709, 295, 257, 2654, 7285, 1154, 50722, 50722, 382, 291, 362, 294, 264, 1333, 295, 21769, 3036, 50856, 50856, 295, 2295, 18795, 7673, 11, 558, 30, 50938, 50938, 407, 510, 11, 729, 5242, 366, 294, 732, 12819, 13, 51046, 51046, 814, 366, 588, 36429, 13, 51130, 51130, 492, 434, 516, 281, 312, 1364, 365, 6803, 295, 12819, 13, 51260, 51260, 400, 512, 295, 264, 881, 5162, 2452, 2539, 3652, 51600, 51600, 362, 504, 46279, 295, 9834, 13, 51680, 51680, 865, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.14587651501904736, "compression_ratio": 1.7171314741035857, "no_speech_prob": 1.8161571233576979e-06}, {"id": 538, "seek": 153836, "start": 1538.36, "end": 1541.04, "text": " So local minima is not going to be that much of a problem.", "tokens": [50364, 407, 2654, 4464, 64, 307, 406, 516, 281, 312, 300, 709, 295, 257, 1154, 13, 50498, 50498, 492, 434, 516, 281, 362, 661, 2740, 11, 457, 406, 300, 472, 13, 50600, 50600, 407, 456, 307, 257, 6028, 294, 341, 9848, 670, 2181, 335, 2398, 2144, 11, 50862, 50862, 558, 30, 50912, 50912, 467, 2544, 411, 300, 544, 22027, 321, 362, 11, 51018, 51018, 293, 264, 1101, 613, 9590, 589, 6063, 13, 51160, 51160, 663, 311, 558, 13, 51178, 51178, 407, 321, 434, 516, 281, 652, 729, 9590, 588, 2416, 13, 51264, 51264, 400, 436, 434, 516, 281, 312, 670, 2181, 335, 2398, 1602, 11, 51332, 51332, 597, 1355, 436, 434, 516, 281, 362, 636, 544, 27804, 51436, 51436, 9834, 813, 321, 576, 767, 643, 11, 597, 51534, 51534, 1355, 436, 434, 516, 281, 312, 1075, 281, 1466, 264, 3097, 51630, 51630, 992, 1920, 6239, 13, 51694, 51694, 400, 264, 955, 1168, 307, 11, 577, 731, 366, 436, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1921888434368631, "compression_ratio": 1.9180327868852458, "no_speech_prob": 2.144304926332552e-05}, {"id": 539, "seek": 153836, "start": 1541.04, "end": 1543.08, "text": " We're going to have other problems, but not that one.", "tokens": [50364, 407, 2654, 4464, 64, 307, 406, 516, 281, 312, 300, 709, 295, 257, 1154, 13, 50498, 50498, 492, 434, 516, 281, 362, 661, 2740, 11, 457, 406, 300, 472, 13, 50600, 50600, 407, 456, 307, 257, 6028, 294, 341, 9848, 670, 2181, 335, 2398, 2144, 11, 50862, 50862, 558, 30, 50912, 50912, 467, 2544, 411, 300, 544, 22027, 321, 362, 11, 51018, 51018, 293, 264, 1101, 613, 9590, 589, 6063, 13, 51160, 51160, 663, 311, 558, 13, 51178, 51178, 407, 321, 434, 516, 281, 652, 729, 9590, 588, 2416, 13, 51264, 51264, 400, 436, 434, 516, 281, 312, 670, 2181, 335, 2398, 1602, 11, 51332, 51332, 597, 1355, 436, 434, 516, 281, 362, 636, 544, 27804, 51436, 51436, 9834, 813, 321, 576, 767, 643, 11, 597, 51534, 51534, 1355, 436, 434, 516, 281, 312, 1075, 281, 1466, 264, 3097, 51630, 51630, 992, 1920, 6239, 13, 51694, 51694, 400, 264, 955, 1168, 307, 11, 577, 731, 366, 436, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1921888434368631, "compression_ratio": 1.9180327868852458, "no_speech_prob": 2.144304926332552e-05}, {"id": 540, "seek": 153836, "start": 1543.08, "end": 1548.32, "text": " So there is a trend in this hyper overparameterization,", "tokens": [50364, 407, 2654, 4464, 64, 307, 406, 516, 281, 312, 300, 709, 295, 257, 1154, 13, 50498, 50498, 492, 434, 516, 281, 362, 661, 2740, 11, 457, 406, 300, 472, 13, 50600, 50600, 407, 456, 307, 257, 6028, 294, 341, 9848, 670, 2181, 335, 2398, 2144, 11, 50862, 50862, 558, 30, 50912, 50912, 467, 2544, 411, 300, 544, 22027, 321, 362, 11, 51018, 51018, 293, 264, 1101, 613, 9590, 589, 6063, 13, 51160, 51160, 663, 311, 558, 13, 51178, 51178, 407, 321, 434, 516, 281, 652, 729, 9590, 588, 2416, 13, 51264, 51264, 400, 436, 434, 516, 281, 312, 670, 2181, 335, 2398, 1602, 11, 51332, 51332, 597, 1355, 436, 434, 516, 281, 362, 636, 544, 27804, 51436, 51436, 9834, 813, 321, 576, 767, 643, 11, 597, 51534, 51534, 1355, 436, 434, 516, 281, 312, 1075, 281, 1466, 264, 3097, 51630, 51630, 992, 1920, 6239, 13, 51694, 51694, 400, 264, 955, 1168, 307, 11, 577, 731, 366, 436, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1921888434368631, "compression_ratio": 1.9180327868852458, "no_speech_prob": 2.144304926332552e-05}, {"id": 541, "seek": 153836, "start": 1548.32, "end": 1549.32, "text": " right?", "tokens": [50364, 407, 2654, 4464, 64, 307, 406, 516, 281, 312, 300, 709, 295, 257, 1154, 13, 50498, 50498, 492, 434, 516, 281, 362, 661, 2740, 11, 457, 406, 300, 472, 13, 50600, 50600, 407, 456, 307, 257, 6028, 294, 341, 9848, 670, 2181, 335, 2398, 2144, 11, 50862, 50862, 558, 30, 50912, 50912, 467, 2544, 411, 300, 544, 22027, 321, 362, 11, 51018, 51018, 293, 264, 1101, 613, 9590, 589, 6063, 13, 51160, 51160, 663, 311, 558, 13, 51178, 51178, 407, 321, 434, 516, 281, 652, 729, 9590, 588, 2416, 13, 51264, 51264, 400, 436, 434, 516, 281, 312, 670, 2181, 335, 2398, 1602, 11, 51332, 51332, 597, 1355, 436, 434, 516, 281, 362, 636, 544, 27804, 51436, 51436, 9834, 813, 321, 576, 767, 643, 11, 597, 51534, 51534, 1355, 436, 434, 516, 281, 312, 1075, 281, 1466, 264, 3097, 51630, 51630, 992, 1920, 6239, 13, 51694, 51694, 400, 264, 955, 1168, 307, 11, 577, 731, 366, 436, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1921888434368631, "compression_ratio": 1.9180327868852458, "no_speech_prob": 2.144304926332552e-05}, {"id": 542, "seek": 153836, "start": 1549.32, "end": 1551.4399999999998, "text": " It seems like that more neurons we have,", "tokens": [50364, 407, 2654, 4464, 64, 307, 406, 516, 281, 312, 300, 709, 295, 257, 1154, 13, 50498, 50498, 492, 434, 516, 281, 362, 661, 2740, 11, 457, 406, 300, 472, 13, 50600, 50600, 407, 456, 307, 257, 6028, 294, 341, 9848, 670, 2181, 335, 2398, 2144, 11, 50862, 50862, 558, 30, 50912, 50912, 467, 2544, 411, 300, 544, 22027, 321, 362, 11, 51018, 51018, 293, 264, 1101, 613, 9590, 589, 6063, 13, 51160, 51160, 663, 311, 558, 13, 51178, 51178, 407, 321, 434, 516, 281, 652, 729, 9590, 588, 2416, 13, 51264, 51264, 400, 436, 434, 516, 281, 312, 670, 2181, 335, 2398, 1602, 11, 51332, 51332, 597, 1355, 436, 434, 516, 281, 362, 636, 544, 27804, 51436, 51436, 9834, 813, 321, 576, 767, 643, 11, 597, 51534, 51534, 1355, 436, 434, 516, 281, 312, 1075, 281, 1466, 264, 3097, 51630, 51630, 992, 1920, 6239, 13, 51694, 51694, 400, 264, 955, 1168, 307, 11, 577, 731, 366, 436, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1921888434368631, "compression_ratio": 1.9180327868852458, "no_speech_prob": 2.144304926332552e-05}, {"id": 543, "seek": 153836, "start": 1551.4399999999998, "end": 1554.28, "text": " and the better these networks work somehow.", "tokens": [50364, 407, 2654, 4464, 64, 307, 406, 516, 281, 312, 300, 709, 295, 257, 1154, 13, 50498, 50498, 492, 434, 516, 281, 362, 661, 2740, 11, 457, 406, 300, 472, 13, 50600, 50600, 407, 456, 307, 257, 6028, 294, 341, 9848, 670, 2181, 335, 2398, 2144, 11, 50862, 50862, 558, 30, 50912, 50912, 467, 2544, 411, 300, 544, 22027, 321, 362, 11, 51018, 51018, 293, 264, 1101, 613, 9590, 589, 6063, 13, 51160, 51160, 663, 311, 558, 13, 51178, 51178, 407, 321, 434, 516, 281, 652, 729, 9590, 588, 2416, 13, 51264, 51264, 400, 436, 434, 516, 281, 312, 670, 2181, 335, 2398, 1602, 11, 51332, 51332, 597, 1355, 436, 434, 516, 281, 362, 636, 544, 27804, 51436, 51436, 9834, 813, 321, 576, 767, 643, 11, 597, 51534, 51534, 1355, 436, 434, 516, 281, 312, 1075, 281, 1466, 264, 3097, 51630, 51630, 992, 1920, 6239, 13, 51694, 51694, 400, 264, 955, 1168, 307, 11, 577, 731, 366, 436, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1921888434368631, "compression_ratio": 1.9180327868852458, "no_speech_prob": 2.144304926332552e-05}, {"id": 544, "seek": 153836, "start": 1554.28, "end": 1554.6399999999999, "text": " That's right.", "tokens": [50364, 407, 2654, 4464, 64, 307, 406, 516, 281, 312, 300, 709, 295, 257, 1154, 13, 50498, 50498, 492, 434, 516, 281, 362, 661, 2740, 11, 457, 406, 300, 472, 13, 50600, 50600, 407, 456, 307, 257, 6028, 294, 341, 9848, 670, 2181, 335, 2398, 2144, 11, 50862, 50862, 558, 30, 50912, 50912, 467, 2544, 411, 300, 544, 22027, 321, 362, 11, 51018, 51018, 293, 264, 1101, 613, 9590, 589, 6063, 13, 51160, 51160, 663, 311, 558, 13, 51178, 51178, 407, 321, 434, 516, 281, 652, 729, 9590, 588, 2416, 13, 51264, 51264, 400, 436, 434, 516, 281, 312, 670, 2181, 335, 2398, 1602, 11, 51332, 51332, 597, 1355, 436, 434, 516, 281, 362, 636, 544, 27804, 51436, 51436, 9834, 813, 321, 576, 767, 643, 11, 597, 51534, 51534, 1355, 436, 434, 516, 281, 312, 1075, 281, 1466, 264, 3097, 51630, 51630, 992, 1920, 6239, 13, 51694, 51694, 400, 264, 955, 1168, 307, 11, 577, 731, 366, 436, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1921888434368631, "compression_ratio": 1.9180327868852458, "no_speech_prob": 2.144304926332552e-05}, {"id": 545, "seek": 153836, "start": 1554.6399999999999, "end": 1556.36, "text": " So we're going to make those networks very large.", "tokens": [50364, 407, 2654, 4464, 64, 307, 406, 516, 281, 312, 300, 709, 295, 257, 1154, 13, 50498, 50498, 492, 434, 516, 281, 362, 661, 2740, 11, 457, 406, 300, 472, 13, 50600, 50600, 407, 456, 307, 257, 6028, 294, 341, 9848, 670, 2181, 335, 2398, 2144, 11, 50862, 50862, 558, 30, 50912, 50912, 467, 2544, 411, 300, 544, 22027, 321, 362, 11, 51018, 51018, 293, 264, 1101, 613, 9590, 589, 6063, 13, 51160, 51160, 663, 311, 558, 13, 51178, 51178, 407, 321, 434, 516, 281, 652, 729, 9590, 588, 2416, 13, 51264, 51264, 400, 436, 434, 516, 281, 312, 670, 2181, 335, 2398, 1602, 11, 51332, 51332, 597, 1355, 436, 434, 516, 281, 362, 636, 544, 27804, 51436, 51436, 9834, 813, 321, 576, 767, 643, 11, 597, 51534, 51534, 1355, 436, 434, 516, 281, 312, 1075, 281, 1466, 264, 3097, 51630, 51630, 992, 1920, 6239, 13, 51694, 51694, 400, 264, 955, 1168, 307, 11, 577, 731, 366, 436, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1921888434368631, "compression_ratio": 1.9180327868852458, "no_speech_prob": 2.144304926332552e-05}, {"id": 546, "seek": 153836, "start": 1556.36, "end": 1557.7199999999998, "text": " And they're going to be overparameterized,", "tokens": [50364, 407, 2654, 4464, 64, 307, 406, 516, 281, 312, 300, 709, 295, 257, 1154, 13, 50498, 50498, 492, 434, 516, 281, 362, 661, 2740, 11, 457, 406, 300, 472, 13, 50600, 50600, 407, 456, 307, 257, 6028, 294, 341, 9848, 670, 2181, 335, 2398, 2144, 11, 50862, 50862, 558, 30, 50912, 50912, 467, 2544, 411, 300, 544, 22027, 321, 362, 11, 51018, 51018, 293, 264, 1101, 613, 9590, 589, 6063, 13, 51160, 51160, 663, 311, 558, 13, 51178, 51178, 407, 321, 434, 516, 281, 652, 729, 9590, 588, 2416, 13, 51264, 51264, 400, 436, 434, 516, 281, 312, 670, 2181, 335, 2398, 1602, 11, 51332, 51332, 597, 1355, 436, 434, 516, 281, 362, 636, 544, 27804, 51436, 51436, 9834, 813, 321, 576, 767, 643, 11, 597, 51534, 51534, 1355, 436, 434, 516, 281, 312, 1075, 281, 1466, 264, 3097, 51630, 51630, 992, 1920, 6239, 13, 51694, 51694, 400, 264, 955, 1168, 307, 11, 577, 731, 366, 436, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1921888434368631, "compression_ratio": 1.9180327868852458, "no_speech_prob": 2.144304926332552e-05}, {"id": 547, "seek": 153836, "start": 1557.7199999999998, "end": 1559.8, "text": " which means they're going to have way more adjustable", "tokens": [50364, 407, 2654, 4464, 64, 307, 406, 516, 281, 312, 300, 709, 295, 257, 1154, 13, 50498, 50498, 492, 434, 516, 281, 362, 661, 2740, 11, 457, 406, 300, 472, 13, 50600, 50600, 407, 456, 307, 257, 6028, 294, 341, 9848, 670, 2181, 335, 2398, 2144, 11, 50862, 50862, 558, 30, 50912, 50912, 467, 2544, 411, 300, 544, 22027, 321, 362, 11, 51018, 51018, 293, 264, 1101, 613, 9590, 589, 6063, 13, 51160, 51160, 663, 311, 558, 13, 51178, 51178, 407, 321, 434, 516, 281, 652, 729, 9590, 588, 2416, 13, 51264, 51264, 400, 436, 434, 516, 281, 312, 670, 2181, 335, 2398, 1602, 11, 51332, 51332, 597, 1355, 436, 434, 516, 281, 362, 636, 544, 27804, 51436, 51436, 9834, 813, 321, 576, 767, 643, 11, 597, 51534, 51534, 1355, 436, 434, 516, 281, 312, 1075, 281, 1466, 264, 3097, 51630, 51630, 992, 1920, 6239, 13, 51694, 51694, 400, 264, 955, 1168, 307, 11, 577, 731, 366, 436, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1921888434368631, "compression_ratio": 1.9180327868852458, "no_speech_prob": 2.144304926332552e-05}, {"id": 548, "seek": 153836, "start": 1559.8, "end": 1561.76, "text": " parameters than we would actually need, which", "tokens": [50364, 407, 2654, 4464, 64, 307, 406, 516, 281, 312, 300, 709, 295, 257, 1154, 13, 50498, 50498, 492, 434, 516, 281, 362, 661, 2740, 11, 457, 406, 300, 472, 13, 50600, 50600, 407, 456, 307, 257, 6028, 294, 341, 9848, 670, 2181, 335, 2398, 2144, 11, 50862, 50862, 558, 30, 50912, 50912, 467, 2544, 411, 300, 544, 22027, 321, 362, 11, 51018, 51018, 293, 264, 1101, 613, 9590, 589, 6063, 13, 51160, 51160, 663, 311, 558, 13, 51178, 51178, 407, 321, 434, 516, 281, 652, 729, 9590, 588, 2416, 13, 51264, 51264, 400, 436, 434, 516, 281, 312, 670, 2181, 335, 2398, 1602, 11, 51332, 51332, 597, 1355, 436, 434, 516, 281, 362, 636, 544, 27804, 51436, 51436, 9834, 813, 321, 576, 767, 643, 11, 597, 51534, 51534, 1355, 436, 434, 516, 281, 312, 1075, 281, 1466, 264, 3097, 51630, 51630, 992, 1920, 6239, 13, 51694, 51694, 400, 264, 955, 1168, 307, 11, 577, 731, 366, 436, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1921888434368631, "compression_ratio": 1.9180327868852458, "no_speech_prob": 2.144304926332552e-05}, {"id": 549, "seek": 153836, "start": 1561.76, "end": 1563.6799999999998, "text": " means they're going to be able to learn the training", "tokens": [50364, 407, 2654, 4464, 64, 307, 406, 516, 281, 312, 300, 709, 295, 257, 1154, 13, 50498, 50498, 492, 434, 516, 281, 362, 661, 2740, 11, 457, 406, 300, 472, 13, 50600, 50600, 407, 456, 307, 257, 6028, 294, 341, 9848, 670, 2181, 335, 2398, 2144, 11, 50862, 50862, 558, 30, 50912, 50912, 467, 2544, 411, 300, 544, 22027, 321, 362, 11, 51018, 51018, 293, 264, 1101, 613, 9590, 589, 6063, 13, 51160, 51160, 663, 311, 558, 13, 51178, 51178, 407, 321, 434, 516, 281, 652, 729, 9590, 588, 2416, 13, 51264, 51264, 400, 436, 434, 516, 281, 312, 670, 2181, 335, 2398, 1602, 11, 51332, 51332, 597, 1355, 436, 434, 516, 281, 362, 636, 544, 27804, 51436, 51436, 9834, 813, 321, 576, 767, 643, 11, 597, 51534, 51534, 1355, 436, 434, 516, 281, 312, 1075, 281, 1466, 264, 3097, 51630, 51630, 992, 1920, 6239, 13, 51694, 51694, 400, 264, 955, 1168, 307, 11, 577, 731, 366, 436, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1921888434368631, "compression_ratio": 1.9180327868852458, "no_speech_prob": 2.144304926332552e-05}, {"id": 550, "seek": 153836, "start": 1563.6799999999998, "end": 1564.9599999999998, "text": " set almost perfectly.", "tokens": [50364, 407, 2654, 4464, 64, 307, 406, 516, 281, 312, 300, 709, 295, 257, 1154, 13, 50498, 50498, 492, 434, 516, 281, 362, 661, 2740, 11, 457, 406, 300, 472, 13, 50600, 50600, 407, 456, 307, 257, 6028, 294, 341, 9848, 670, 2181, 335, 2398, 2144, 11, 50862, 50862, 558, 30, 50912, 50912, 467, 2544, 411, 300, 544, 22027, 321, 362, 11, 51018, 51018, 293, 264, 1101, 613, 9590, 589, 6063, 13, 51160, 51160, 663, 311, 558, 13, 51178, 51178, 407, 321, 434, 516, 281, 652, 729, 9590, 588, 2416, 13, 51264, 51264, 400, 436, 434, 516, 281, 312, 670, 2181, 335, 2398, 1602, 11, 51332, 51332, 597, 1355, 436, 434, 516, 281, 362, 636, 544, 27804, 51436, 51436, 9834, 813, 321, 576, 767, 643, 11, 597, 51534, 51534, 1355, 436, 434, 516, 281, 312, 1075, 281, 1466, 264, 3097, 51630, 51630, 992, 1920, 6239, 13, 51694, 51694, 400, 264, 955, 1168, 307, 11, 577, 731, 366, 436, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1921888434368631, "compression_ratio": 1.9180327868852458, "no_speech_prob": 2.144304926332552e-05}, {"id": 551, "seek": 153836, "start": 1564.9599999999998, "end": 1566.6, "text": " And the big question is, how well are they", "tokens": [50364, 407, 2654, 4464, 64, 307, 406, 516, 281, 312, 300, 709, 295, 257, 1154, 13, 50498, 50498, 492, 434, 516, 281, 362, 661, 2740, 11, 457, 406, 300, 472, 13, 50600, 50600, 407, 456, 307, 257, 6028, 294, 341, 9848, 670, 2181, 335, 2398, 2144, 11, 50862, 50862, 558, 30, 50912, 50912, 467, 2544, 411, 300, 544, 22027, 321, 362, 11, 51018, 51018, 293, 264, 1101, 613, 9590, 589, 6063, 13, 51160, 51160, 663, 311, 558, 13, 51178, 51178, 407, 321, 434, 516, 281, 652, 729, 9590, 588, 2416, 13, 51264, 51264, 400, 436, 434, 516, 281, 312, 670, 2181, 335, 2398, 1602, 11, 51332, 51332, 597, 1355, 436, 434, 516, 281, 362, 636, 544, 27804, 51436, 51436, 9834, 813, 321, 576, 767, 643, 11, 597, 51534, 51534, 1355, 436, 434, 516, 281, 312, 1075, 281, 1466, 264, 3097, 51630, 51630, 992, 1920, 6239, 13, 51694, 51694, 400, 264, 955, 1168, 307, 11, 577, 731, 366, 436, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1921888434368631, "compression_ratio": 1.9180327868852458, "no_speech_prob": 2.144304926332552e-05}, {"id": 552, "seek": 156660, "start": 1566.6, "end": 1570.1999999999998, "text": " going to work on a separate validation set or test", "tokens": [50364, 516, 281, 589, 322, 257, 4994, 24071, 992, 420, 1500, 50544, 50544, 992, 300, 307, 4994, 490, 264, 3097, 992, 30, 50718, 50718, 4453, 544, 1651, 13, 50758, 50758, 1012, 731, 366, 436, 516, 281, 589, 294, 257, 957, 2590, 50882, 50882, 689, 264, 7316, 295, 10938, 51020, 51020, 815, 312, 819, 490, 437, 321, 8895, 309, 322, 30, 51110, 51110, 407, 300, 311, 264, 957, 1168, 295, 3479, 2539, 11, 51232, 51232, 597, 286, 478, 988, 257, 688, 295, 291, 366, 4963, 365, 13, 51400, 51400, 4453, 544, 1651, 13, 51438, 51438, 1664, 321, 360, 30, 51462, 51462, 7010, 13, 51488, 51488, 7010, 13, 51518, 51518, 407, 577, 360, 321, 7615, 2602, 295, 13456, 2793, 30, 51738, 51738, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.25617462158203125, "compression_ratio": 1.7003891050583657, "no_speech_prob": 4.6372833821806125e-06}, {"id": 553, "seek": 156660, "start": 1570.1999999999998, "end": 1573.6799999999998, "text": " set that is separate from the training set?", "tokens": [50364, 516, 281, 589, 322, 257, 4994, 24071, 992, 420, 1500, 50544, 50544, 992, 300, 307, 4994, 490, 264, 3097, 992, 30, 50718, 50718, 4453, 544, 1651, 13, 50758, 50758, 1012, 731, 366, 436, 516, 281, 589, 294, 257, 957, 2590, 50882, 50882, 689, 264, 7316, 295, 10938, 51020, 51020, 815, 312, 819, 490, 437, 321, 8895, 309, 322, 30, 51110, 51110, 407, 300, 311, 264, 957, 1168, 295, 3479, 2539, 11, 51232, 51232, 597, 286, 478, 988, 257, 688, 295, 291, 366, 4963, 365, 13, 51400, 51400, 4453, 544, 1651, 13, 51438, 51438, 1664, 321, 360, 30, 51462, 51462, 7010, 13, 51488, 51488, 7010, 13, 51518, 51518, 407, 577, 360, 321, 7615, 2602, 295, 13456, 2793, 30, 51738, 51738, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.25617462158203125, "compression_ratio": 1.7003891050583657, "no_speech_prob": 4.6372833821806125e-06}, {"id": 554, "seek": 156660, "start": 1573.6799999999998, "end": 1574.48, "text": " Two more questions.", "tokens": [50364, 516, 281, 589, 322, 257, 4994, 24071, 992, 420, 1500, 50544, 50544, 992, 300, 307, 4994, 490, 264, 3097, 992, 30, 50718, 50718, 4453, 544, 1651, 13, 50758, 50758, 1012, 731, 366, 436, 516, 281, 589, 294, 257, 957, 2590, 50882, 50882, 689, 264, 7316, 295, 10938, 51020, 51020, 815, 312, 819, 490, 437, 321, 8895, 309, 322, 30, 51110, 51110, 407, 300, 311, 264, 957, 1168, 295, 3479, 2539, 11, 51232, 51232, 597, 286, 478, 988, 257, 688, 295, 291, 366, 4963, 365, 13, 51400, 51400, 4453, 544, 1651, 13, 51438, 51438, 1664, 321, 360, 30, 51462, 51462, 7010, 13, 51488, 51488, 7010, 13, 51518, 51518, 407, 577, 360, 321, 7615, 2602, 295, 13456, 2793, 30, 51738, 51738, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.25617462158203125, "compression_ratio": 1.7003891050583657, "no_speech_prob": 4.6372833821806125e-06}, {"id": 555, "seek": 156660, "start": 1574.48, "end": 1576.9599999999998, "text": " How well are they going to work in a real situation", "tokens": [50364, 516, 281, 589, 322, 257, 4994, 24071, 992, 420, 1500, 50544, 50544, 992, 300, 307, 4994, 490, 264, 3097, 992, 30, 50718, 50718, 4453, 544, 1651, 13, 50758, 50758, 1012, 731, 366, 436, 516, 281, 589, 294, 257, 957, 2590, 50882, 50882, 689, 264, 7316, 295, 10938, 51020, 51020, 815, 312, 819, 490, 437, 321, 8895, 309, 322, 30, 51110, 51110, 407, 300, 311, 264, 957, 1168, 295, 3479, 2539, 11, 51232, 51232, 597, 286, 478, 988, 257, 688, 295, 291, 366, 4963, 365, 13, 51400, 51400, 4453, 544, 1651, 13, 51438, 51438, 1664, 321, 360, 30, 51462, 51462, 7010, 13, 51488, 51488, 7010, 13, 51518, 51518, 407, 577, 360, 321, 7615, 2602, 295, 13456, 2793, 30, 51738, 51738, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.25617462158203125, "compression_ratio": 1.7003891050583657, "no_speech_prob": 4.6372833821806125e-06}, {"id": 556, "seek": 156660, "start": 1576.9599999999998, "end": 1579.7199999999998, "text": " where the distribution of samples", "tokens": [50364, 516, 281, 589, 322, 257, 4994, 24071, 992, 420, 1500, 50544, 50544, 992, 300, 307, 4994, 490, 264, 3097, 992, 30, 50718, 50718, 4453, 544, 1651, 13, 50758, 50758, 1012, 731, 366, 436, 516, 281, 589, 294, 257, 957, 2590, 50882, 50882, 689, 264, 7316, 295, 10938, 51020, 51020, 815, 312, 819, 490, 437, 321, 8895, 309, 322, 30, 51110, 51110, 407, 300, 311, 264, 957, 1168, 295, 3479, 2539, 11, 51232, 51232, 597, 286, 478, 988, 257, 688, 295, 291, 366, 4963, 365, 13, 51400, 51400, 4453, 544, 1651, 13, 51438, 51438, 1664, 321, 360, 30, 51462, 51462, 7010, 13, 51488, 51488, 7010, 13, 51518, 51518, 407, 577, 360, 321, 7615, 2602, 295, 13456, 2793, 30, 51738, 51738, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.25617462158203125, "compression_ratio": 1.7003891050583657, "no_speech_prob": 4.6372833821806125e-06}, {"id": 557, "seek": 156660, "start": 1579.7199999999998, "end": 1581.52, "text": " may be different from what we trained it on?", "tokens": [50364, 516, 281, 589, 322, 257, 4994, 24071, 992, 420, 1500, 50544, 50544, 992, 300, 307, 4994, 490, 264, 3097, 992, 30, 50718, 50718, 4453, 544, 1651, 13, 50758, 50758, 1012, 731, 366, 436, 516, 281, 589, 294, 257, 957, 2590, 50882, 50882, 689, 264, 7316, 295, 10938, 51020, 51020, 815, 312, 819, 490, 437, 321, 8895, 309, 322, 30, 51110, 51110, 407, 300, 311, 264, 957, 1168, 295, 3479, 2539, 11, 51232, 51232, 597, 286, 478, 988, 257, 688, 295, 291, 366, 4963, 365, 13, 51400, 51400, 4453, 544, 1651, 13, 51438, 51438, 1664, 321, 360, 30, 51462, 51462, 7010, 13, 51488, 51488, 7010, 13, 51518, 51518, 407, 577, 360, 321, 7615, 2602, 295, 13456, 2793, 30, 51738, 51738, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.25617462158203125, "compression_ratio": 1.7003891050583657, "no_speech_prob": 4.6372833821806125e-06}, {"id": 558, "seek": 156660, "start": 1581.52, "end": 1583.9599999999998, "text": " So that's the real question of machine learning,", "tokens": [50364, 516, 281, 589, 322, 257, 4994, 24071, 992, 420, 1500, 50544, 50544, 992, 300, 307, 4994, 490, 264, 3097, 992, 30, 50718, 50718, 4453, 544, 1651, 13, 50758, 50758, 1012, 731, 366, 436, 516, 281, 589, 294, 257, 957, 2590, 50882, 50882, 689, 264, 7316, 295, 10938, 51020, 51020, 815, 312, 819, 490, 437, 321, 8895, 309, 322, 30, 51110, 51110, 407, 300, 311, 264, 957, 1168, 295, 3479, 2539, 11, 51232, 51232, 597, 286, 478, 988, 257, 688, 295, 291, 366, 4963, 365, 13, 51400, 51400, 4453, 544, 1651, 13, 51438, 51438, 1664, 321, 360, 30, 51462, 51462, 7010, 13, 51488, 51488, 7010, 13, 51518, 51518, 407, 577, 360, 321, 7615, 2602, 295, 13456, 2793, 30, 51738, 51738, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.25617462158203125, "compression_ratio": 1.7003891050583657, "no_speech_prob": 4.6372833821806125e-06}, {"id": 559, "seek": 156660, "start": 1583.9599999999998, "end": 1587.32, "text": " which I'm sure a lot of you are familiar with.", "tokens": [50364, 516, 281, 589, 322, 257, 4994, 24071, 992, 420, 1500, 50544, 50544, 992, 300, 307, 4994, 490, 264, 3097, 992, 30, 50718, 50718, 4453, 544, 1651, 13, 50758, 50758, 1012, 731, 366, 436, 516, 281, 589, 294, 257, 957, 2590, 50882, 50882, 689, 264, 7316, 295, 10938, 51020, 51020, 815, 312, 819, 490, 437, 321, 8895, 309, 322, 30, 51110, 51110, 407, 300, 311, 264, 957, 1168, 295, 3479, 2539, 11, 51232, 51232, 597, 286, 478, 988, 257, 688, 295, 291, 366, 4963, 365, 13, 51400, 51400, 4453, 544, 1651, 13, 51438, 51438, 1664, 321, 360, 30, 51462, 51462, 7010, 13, 51488, 51488, 7010, 13, 51518, 51518, 407, 577, 360, 321, 7615, 2602, 295, 13456, 2793, 30, 51738, 51738, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.25617462158203125, "compression_ratio": 1.7003891050583657, "no_speech_prob": 4.6372833821806125e-06}, {"id": 560, "seek": 156660, "start": 1587.32, "end": 1588.08, "text": " Two more questions.", "tokens": [50364, 516, 281, 589, 322, 257, 4994, 24071, 992, 420, 1500, 50544, 50544, 992, 300, 307, 4994, 490, 264, 3097, 992, 30, 50718, 50718, 4453, 544, 1651, 13, 50758, 50758, 1012, 731, 366, 436, 516, 281, 589, 294, 257, 957, 2590, 50882, 50882, 689, 264, 7316, 295, 10938, 51020, 51020, 815, 312, 819, 490, 437, 321, 8895, 309, 322, 30, 51110, 51110, 407, 300, 311, 264, 957, 1168, 295, 3479, 2539, 11, 51232, 51232, 597, 286, 478, 988, 257, 688, 295, 291, 366, 4963, 365, 13, 51400, 51400, 4453, 544, 1651, 13, 51438, 51438, 1664, 321, 360, 30, 51462, 51462, 7010, 13, 51488, 51488, 7010, 13, 51518, 51518, 407, 577, 360, 321, 7615, 2602, 295, 13456, 2793, 30, 51738, 51738, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.25617462158203125, "compression_ratio": 1.7003891050583657, "no_speech_prob": 4.6372833821806125e-06}, {"id": 561, "seek": 156660, "start": 1588.08, "end": 1588.56, "text": " Can we do?", "tokens": [50364, 516, 281, 589, 322, 257, 4994, 24071, 992, 420, 1500, 50544, 50544, 992, 300, 307, 4994, 490, 264, 3097, 992, 30, 50718, 50718, 4453, 544, 1651, 13, 50758, 50758, 1012, 731, 366, 436, 516, 281, 589, 294, 257, 957, 2590, 50882, 50882, 689, 264, 7316, 295, 10938, 51020, 51020, 815, 312, 819, 490, 437, 321, 8895, 309, 322, 30, 51110, 51110, 407, 300, 311, 264, 957, 1168, 295, 3479, 2539, 11, 51232, 51232, 597, 286, 478, 988, 257, 688, 295, 291, 366, 4963, 365, 13, 51400, 51400, 4453, 544, 1651, 13, 51438, 51438, 1664, 321, 360, 30, 51462, 51462, 7010, 13, 51488, 51488, 7010, 13, 51518, 51518, 407, 577, 360, 321, 7615, 2602, 295, 13456, 2793, 30, 51738, 51738, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.25617462158203125, "compression_ratio": 1.7003891050583657, "no_speech_prob": 4.6372833821806125e-06}, {"id": 562, "seek": 156660, "start": 1588.56, "end": 1589.08, "text": " Yep.", "tokens": [50364, 516, 281, 589, 322, 257, 4994, 24071, 992, 420, 1500, 50544, 50544, 992, 300, 307, 4994, 490, 264, 3097, 992, 30, 50718, 50718, 4453, 544, 1651, 13, 50758, 50758, 1012, 731, 366, 436, 516, 281, 589, 294, 257, 957, 2590, 50882, 50882, 689, 264, 7316, 295, 10938, 51020, 51020, 815, 312, 819, 490, 437, 321, 8895, 309, 322, 30, 51110, 51110, 407, 300, 311, 264, 957, 1168, 295, 3479, 2539, 11, 51232, 51232, 597, 286, 478, 988, 257, 688, 295, 291, 366, 4963, 365, 13, 51400, 51400, 4453, 544, 1651, 13, 51438, 51438, 1664, 321, 360, 30, 51462, 51462, 7010, 13, 51488, 51488, 7010, 13, 51518, 51518, 407, 577, 360, 321, 7615, 2602, 295, 13456, 2793, 30, 51738, 51738, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.25617462158203125, "compression_ratio": 1.7003891050583657, "no_speech_prob": 4.6372833821806125e-06}, {"id": 563, "seek": 156660, "start": 1589.08, "end": 1589.6799999999998, "text": " Yep.", "tokens": [50364, 516, 281, 589, 322, 257, 4994, 24071, 992, 420, 1500, 50544, 50544, 992, 300, 307, 4994, 490, 264, 3097, 992, 30, 50718, 50718, 4453, 544, 1651, 13, 50758, 50758, 1012, 731, 366, 436, 516, 281, 589, 294, 257, 957, 2590, 50882, 50882, 689, 264, 7316, 295, 10938, 51020, 51020, 815, 312, 819, 490, 437, 321, 8895, 309, 322, 30, 51110, 51110, 407, 300, 311, 264, 957, 1168, 295, 3479, 2539, 11, 51232, 51232, 597, 286, 478, 988, 257, 688, 295, 291, 366, 4963, 365, 13, 51400, 51400, 4453, 544, 1651, 13, 51438, 51438, 1664, 321, 360, 30, 51462, 51462, 7010, 13, 51488, 51488, 7010, 13, 51518, 51518, 407, 577, 360, 321, 7615, 2602, 295, 13456, 2793, 30, 51738, 51738, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.25617462158203125, "compression_ratio": 1.7003891050583657, "no_speech_prob": 4.6372833821806125e-06}, {"id": 564, "seek": 156660, "start": 1589.6799999999998, "end": 1594.08, "text": " So how do we escape instead of southern points?", "tokens": [50364, 516, 281, 589, 322, 257, 4994, 24071, 992, 420, 1500, 50544, 50544, 992, 300, 307, 4994, 490, 264, 3097, 992, 30, 50718, 50718, 4453, 544, 1651, 13, 50758, 50758, 1012, 731, 366, 436, 516, 281, 589, 294, 257, 957, 2590, 50882, 50882, 689, 264, 7316, 295, 10938, 51020, 51020, 815, 312, 819, 490, 437, 321, 8895, 309, 322, 30, 51110, 51110, 407, 300, 311, 264, 957, 1168, 295, 3479, 2539, 11, 51232, 51232, 597, 286, 478, 988, 257, 688, 295, 291, 366, 4963, 365, 13, 51400, 51400, 4453, 544, 1651, 13, 51438, 51438, 1664, 321, 360, 30, 51462, 51462, 7010, 13, 51488, 51488, 7010, 13, 51518, 51518, 407, 577, 360, 321, 7615, 2602, 295, 13456, 2793, 30, 51738, 51738, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.25617462158203125, "compression_ratio": 1.7003891050583657, "no_speech_prob": 4.6372833821806125e-06}, {"id": 565, "seek": 156660, "start": 1594.08, "end": 1595.6, "text": " Right.", "tokens": [50364, 516, 281, 589, 322, 257, 4994, 24071, 992, 420, 1500, 50544, 50544, 992, 300, 307, 4994, 490, 264, 3097, 992, 30, 50718, 50718, 4453, 544, 1651, 13, 50758, 50758, 1012, 731, 366, 436, 516, 281, 589, 294, 257, 957, 2590, 50882, 50882, 689, 264, 7316, 295, 10938, 51020, 51020, 815, 312, 819, 490, 437, 321, 8895, 309, 322, 30, 51110, 51110, 407, 300, 311, 264, 957, 1168, 295, 3479, 2539, 11, 51232, 51232, 597, 286, 478, 988, 257, 688, 295, 291, 366, 4963, 365, 13, 51400, 51400, 4453, 544, 1651, 13, 51438, 51438, 1664, 321, 360, 30, 51462, 51462, 7010, 13, 51488, 51488, 7010, 13, 51518, 51518, 407, 577, 360, 321, 7615, 2602, 295, 13456, 2793, 30, 51738, 51738, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.25617462158203125, "compression_ratio": 1.7003891050583657, "no_speech_prob": 4.6372833821806125e-06}, {"id": 566, "seek": 159560, "start": 1595.6, "end": 1597.7199999999998, "text": " There are tons and tons of southern points", "tokens": [50364, 821, 366, 9131, 293, 9131, 295, 13456, 2793, 50470, 50470, 294, 2452, 2539, 3652, 13, 50596, 50596, 316, 1199, 270, 3289, 2416, 1230, 295, 13456, 2793, 11, 50690, 50690, 382, 257, 1871, 295, 1186, 13, 50814, 50814, 286, 603, 362, 257, 7991, 322, 341, 11, 370, 286, 50920, 50920, 500, 380, 528, 281, 3496, 886, 938, 13430, 341, 13, 51118, 51118, 583, 1338, 11, 456, 366, 13456, 2793, 13, 51194, 51194, 440, 4282, 365, 13456, 2793, 307, 51292, 51292, 291, 500, 380, 528, 281, 483, 886, 1998, 281, 552, 11, 4476, 13, 51462, 51462, 400, 264, 342, 8997, 2750, 16235, 3665, 257, 707, 857, 51694, 51694, 365, 13456, 2793, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.18468405071057772, "compression_ratio": 1.794759825327511, "no_speech_prob": 3.3726933907018974e-05}, {"id": 567, "seek": 159560, "start": 1597.7199999999998, "end": 1600.24, "text": " in deep learning systems.", "tokens": [50364, 821, 366, 9131, 293, 9131, 295, 13456, 2793, 50470, 50470, 294, 2452, 2539, 3652, 13, 50596, 50596, 316, 1199, 270, 3289, 2416, 1230, 295, 13456, 2793, 11, 50690, 50690, 382, 257, 1871, 295, 1186, 13, 50814, 50814, 286, 603, 362, 257, 7991, 322, 341, 11, 370, 286, 50920, 50920, 500, 380, 528, 281, 3496, 886, 938, 13430, 341, 13, 51118, 51118, 583, 1338, 11, 456, 366, 13456, 2793, 13, 51194, 51194, 440, 4282, 365, 13456, 2793, 307, 51292, 51292, 291, 500, 380, 528, 281, 483, 886, 1998, 281, 552, 11, 4476, 13, 51462, 51462, 400, 264, 342, 8997, 2750, 16235, 3665, 257, 707, 857, 51694, 51694, 365, 13456, 2793, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.18468405071057772, "compression_ratio": 1.794759825327511, "no_speech_prob": 3.3726933907018974e-05}, {"id": 568, "seek": 159560, "start": 1600.24, "end": 1602.12, "text": " A communitarily large number of southern points,", "tokens": [50364, 821, 366, 9131, 293, 9131, 295, 13456, 2793, 50470, 50470, 294, 2452, 2539, 3652, 13, 50596, 50596, 316, 1199, 270, 3289, 2416, 1230, 295, 13456, 2793, 11, 50690, 50690, 382, 257, 1871, 295, 1186, 13, 50814, 50814, 286, 603, 362, 257, 7991, 322, 341, 11, 370, 286, 50920, 50920, 500, 380, 528, 281, 3496, 886, 938, 13430, 341, 13, 51118, 51118, 583, 1338, 11, 456, 366, 13456, 2793, 13, 51194, 51194, 440, 4282, 365, 13456, 2793, 307, 51292, 51292, 291, 500, 380, 528, 281, 483, 886, 1998, 281, 552, 11, 4476, 13, 51462, 51462, 400, 264, 342, 8997, 2750, 16235, 3665, 257, 707, 857, 51694, 51694, 365, 13456, 2793, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.18468405071057772, "compression_ratio": 1.794759825327511, "no_speech_prob": 3.3726933907018974e-05}, {"id": 569, "seek": 159560, "start": 1602.12, "end": 1604.6, "text": " as a matter of fact.", "tokens": [50364, 821, 366, 9131, 293, 9131, 295, 13456, 2793, 50470, 50470, 294, 2452, 2539, 3652, 13, 50596, 50596, 316, 1199, 270, 3289, 2416, 1230, 295, 13456, 2793, 11, 50690, 50690, 382, 257, 1871, 295, 1186, 13, 50814, 50814, 286, 603, 362, 257, 7991, 322, 341, 11, 370, 286, 50920, 50920, 500, 380, 528, 281, 3496, 886, 938, 13430, 341, 13, 51118, 51118, 583, 1338, 11, 456, 366, 13456, 2793, 13, 51194, 51194, 440, 4282, 365, 13456, 2793, 307, 51292, 51292, 291, 500, 380, 528, 281, 483, 886, 1998, 281, 552, 11, 4476, 13, 51462, 51462, 400, 264, 342, 8997, 2750, 16235, 3665, 257, 707, 857, 51694, 51694, 365, 13456, 2793, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.18468405071057772, "compression_ratio": 1.794759825327511, "no_speech_prob": 3.3726933907018974e-05}, {"id": 570, "seek": 159560, "start": 1604.6, "end": 1606.7199999999998, "text": " I'll have a lecture on this, so I", "tokens": [50364, 821, 366, 9131, 293, 9131, 295, 13456, 2793, 50470, 50470, 294, 2452, 2539, 3652, 13, 50596, 50596, 316, 1199, 270, 3289, 2416, 1230, 295, 13456, 2793, 11, 50690, 50690, 382, 257, 1871, 295, 1186, 13, 50814, 50814, 286, 603, 362, 257, 7991, 322, 341, 11, 370, 286, 50920, 50920, 500, 380, 528, 281, 3496, 886, 938, 13430, 341, 13, 51118, 51118, 583, 1338, 11, 456, 366, 13456, 2793, 13, 51194, 51194, 440, 4282, 365, 13456, 2793, 307, 51292, 51292, 291, 500, 380, 528, 281, 483, 886, 1998, 281, 552, 11, 4476, 13, 51462, 51462, 400, 264, 342, 8997, 2750, 16235, 3665, 257, 707, 857, 51694, 51694, 365, 13456, 2793, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.18468405071057772, "compression_ratio": 1.794759825327511, "no_speech_prob": 3.3726933907018974e-05}, {"id": 571, "seek": 159560, "start": 1606.7199999999998, "end": 1610.6799999999998, "text": " don't want to spend too long answering this.", "tokens": [50364, 821, 366, 9131, 293, 9131, 295, 13456, 2793, 50470, 50470, 294, 2452, 2539, 3652, 13, 50596, 50596, 316, 1199, 270, 3289, 2416, 1230, 295, 13456, 2793, 11, 50690, 50690, 382, 257, 1871, 295, 1186, 13, 50814, 50814, 286, 603, 362, 257, 7991, 322, 341, 11, 370, 286, 50920, 50920, 500, 380, 528, 281, 3496, 886, 938, 13430, 341, 13, 51118, 51118, 583, 1338, 11, 456, 366, 13456, 2793, 13, 51194, 51194, 440, 4282, 365, 13456, 2793, 307, 51292, 51292, 291, 500, 380, 528, 281, 483, 886, 1998, 281, 552, 11, 4476, 13, 51462, 51462, 400, 264, 342, 8997, 2750, 16235, 3665, 257, 707, 857, 51694, 51694, 365, 13456, 2793, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.18468405071057772, "compression_ratio": 1.794759825327511, "no_speech_prob": 3.3726933907018974e-05}, {"id": 572, "seek": 159560, "start": 1610.6799999999998, "end": 1612.1999999999998, "text": " But yeah, there are southern points.", "tokens": [50364, 821, 366, 9131, 293, 9131, 295, 13456, 2793, 50470, 50470, 294, 2452, 2539, 3652, 13, 50596, 50596, 316, 1199, 270, 3289, 2416, 1230, 295, 13456, 2793, 11, 50690, 50690, 382, 257, 1871, 295, 1186, 13, 50814, 50814, 286, 603, 362, 257, 7991, 322, 341, 11, 370, 286, 50920, 50920, 500, 380, 528, 281, 3496, 886, 938, 13430, 341, 13, 51118, 51118, 583, 1338, 11, 456, 366, 13456, 2793, 13, 51194, 51194, 440, 4282, 365, 13456, 2793, 307, 51292, 51292, 291, 500, 380, 528, 281, 483, 886, 1998, 281, 552, 11, 4476, 13, 51462, 51462, 400, 264, 342, 8997, 2750, 16235, 3665, 257, 707, 857, 51694, 51694, 365, 13456, 2793, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.18468405071057772, "compression_ratio": 1.794759825327511, "no_speech_prob": 3.3726933907018974e-05}, {"id": 573, "seek": 159560, "start": 1612.1999999999998, "end": 1614.1599999999999, "text": " The trick with southern points is", "tokens": [50364, 821, 366, 9131, 293, 9131, 295, 13456, 2793, 50470, 50470, 294, 2452, 2539, 3652, 13, 50596, 50596, 316, 1199, 270, 3289, 2416, 1230, 295, 13456, 2793, 11, 50690, 50690, 382, 257, 1871, 295, 1186, 13, 50814, 50814, 286, 603, 362, 257, 7991, 322, 341, 11, 370, 286, 50920, 50920, 500, 380, 528, 281, 3496, 886, 938, 13430, 341, 13, 51118, 51118, 583, 1338, 11, 456, 366, 13456, 2793, 13, 51194, 51194, 440, 4282, 365, 13456, 2793, 307, 51292, 51292, 291, 500, 380, 528, 281, 483, 886, 1998, 281, 552, 11, 4476, 13, 51462, 51462, 400, 264, 342, 8997, 2750, 16235, 3665, 257, 707, 857, 51694, 51694, 365, 13456, 2793, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.18468405071057772, "compression_ratio": 1.794759825327511, "no_speech_prob": 3.3726933907018974e-05}, {"id": 574, "seek": 159560, "start": 1614.1599999999999, "end": 1617.56, "text": " you don't want to get too close to them, essentially.", "tokens": [50364, 821, 366, 9131, 293, 9131, 295, 13456, 2793, 50470, 50470, 294, 2452, 2539, 3652, 13, 50596, 50596, 316, 1199, 270, 3289, 2416, 1230, 295, 13456, 2793, 11, 50690, 50690, 382, 257, 1871, 295, 1186, 13, 50814, 50814, 286, 603, 362, 257, 7991, 322, 341, 11, 370, 286, 50920, 50920, 500, 380, 528, 281, 3496, 886, 938, 13430, 341, 13, 51118, 51118, 583, 1338, 11, 456, 366, 13456, 2793, 13, 51194, 51194, 440, 4282, 365, 13456, 2793, 307, 51292, 51292, 291, 500, 380, 528, 281, 483, 886, 1998, 281, 552, 11, 4476, 13, 51462, 51462, 400, 264, 342, 8997, 2750, 16235, 3665, 257, 707, 857, 51694, 51694, 365, 13456, 2793, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.18468405071057772, "compression_ratio": 1.794759825327511, "no_speech_prob": 3.3726933907018974e-05}, {"id": 575, "seek": 159560, "start": 1617.56, "end": 1622.1999999999998, "text": " And the stochastic gradient helps a little bit", "tokens": [50364, 821, 366, 9131, 293, 9131, 295, 13456, 2793, 50470, 50470, 294, 2452, 2539, 3652, 13, 50596, 50596, 316, 1199, 270, 3289, 2416, 1230, 295, 13456, 2793, 11, 50690, 50690, 382, 257, 1871, 295, 1186, 13, 50814, 50814, 286, 603, 362, 257, 7991, 322, 341, 11, 370, 286, 50920, 50920, 500, 380, 528, 281, 3496, 886, 938, 13430, 341, 13, 51118, 51118, 583, 1338, 11, 456, 366, 13456, 2793, 13, 51194, 51194, 440, 4282, 365, 13456, 2793, 307, 51292, 51292, 291, 500, 380, 528, 281, 483, 886, 1998, 281, 552, 11, 4476, 13, 51462, 51462, 400, 264, 342, 8997, 2750, 16235, 3665, 257, 707, 857, 51694, 51694, 365, 13456, 2793, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.18468405071057772, "compression_ratio": 1.794759825327511, "no_speech_prob": 3.3726933907018974e-05}, {"id": 576, "seek": 159560, "start": 1622.1999999999998, "end": 1624.84, "text": " with southern points.", "tokens": [50364, 821, 366, 9131, 293, 9131, 295, 13456, 2793, 50470, 50470, 294, 2452, 2539, 3652, 13, 50596, 50596, 316, 1199, 270, 3289, 2416, 1230, 295, 13456, 2793, 11, 50690, 50690, 382, 257, 1871, 295, 1186, 13, 50814, 50814, 286, 603, 362, 257, 7991, 322, 341, 11, 370, 286, 50920, 50920, 500, 380, 528, 281, 3496, 886, 938, 13430, 341, 13, 51118, 51118, 583, 1338, 11, 456, 366, 13456, 2793, 13, 51194, 51194, 440, 4282, 365, 13456, 2793, 307, 51292, 51292, 291, 500, 380, 528, 281, 483, 886, 1998, 281, 552, 11, 4476, 13, 51462, 51462, 400, 264, 342, 8997, 2750, 16235, 3665, 257, 707, 857, 51694, 51694, 365, 13456, 2793, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.18468405071057772, "compression_ratio": 1.794759825327511, "no_speech_prob": 3.3726933907018974e-05}, {"id": 577, "seek": 162484, "start": 1624.84, "end": 1627.0, "text": " Some people have proposed explicit methods", "tokens": [50364, 2188, 561, 362, 10348, 13691, 7150, 50472, 50472, 281, 1754, 1314, 490, 13456, 2793, 13, 50560, 50560, 583, 294, 3124, 11, 309, 1177, 380, 1643, 281, 312, 300, 709, 295, 257, 1154, 11, 50732, 50732, 767, 13, 50822, 50822, 6288, 11, 577, 360, 291, 1888, 10938, 337, 342, 8997, 2750, 16235, 23475, 51018, 51018, 16979, 30, 51110, 51110, 2264, 13, 51182, 51182, 821, 307, 3195, 295, 819, 7150, 337, 300, 13, 51326, 51326, 865, 11, 264, 3875, 551, 291, 820, 360, 51418, 51418, 307, 291, 362, 428, 3097, 992, 13, 51490, 51490, 509, 39426, 264, 10938, 294, 257, 4974, 1668, 13, 51632, 51632, 400, 550, 291, 445, 1888, 552, 472, 412, 257, 565, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14271561574127714, "compression_ratio": 1.587360594795539, "no_speech_prob": 4.565439667203464e-06}, {"id": 578, "seek": 162484, "start": 1627.0, "end": 1628.76, "text": " to stay away from southern points.", "tokens": [50364, 2188, 561, 362, 10348, 13691, 7150, 50472, 50472, 281, 1754, 1314, 490, 13456, 2793, 13, 50560, 50560, 583, 294, 3124, 11, 309, 1177, 380, 1643, 281, 312, 300, 709, 295, 257, 1154, 11, 50732, 50732, 767, 13, 50822, 50822, 6288, 11, 577, 360, 291, 1888, 10938, 337, 342, 8997, 2750, 16235, 23475, 51018, 51018, 16979, 30, 51110, 51110, 2264, 13, 51182, 51182, 821, 307, 3195, 295, 819, 7150, 337, 300, 13, 51326, 51326, 865, 11, 264, 3875, 551, 291, 820, 360, 51418, 51418, 307, 291, 362, 428, 3097, 992, 13, 51490, 51490, 509, 39426, 264, 10938, 294, 257, 4974, 1668, 13, 51632, 51632, 400, 550, 291, 445, 1888, 552, 472, 412, 257, 565, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14271561574127714, "compression_ratio": 1.587360594795539, "no_speech_prob": 4.565439667203464e-06}, {"id": 579, "seek": 162484, "start": 1628.76, "end": 1632.1999999999998, "text": " But in practice, it doesn't seem to be that much of a problem,", "tokens": [50364, 2188, 561, 362, 10348, 13691, 7150, 50472, 50472, 281, 1754, 1314, 490, 13456, 2793, 13, 50560, 50560, 583, 294, 3124, 11, 309, 1177, 380, 1643, 281, 312, 300, 709, 295, 257, 1154, 11, 50732, 50732, 767, 13, 50822, 50822, 6288, 11, 577, 360, 291, 1888, 10938, 337, 342, 8997, 2750, 16235, 23475, 51018, 51018, 16979, 30, 51110, 51110, 2264, 13, 51182, 51182, 821, 307, 3195, 295, 819, 7150, 337, 300, 13, 51326, 51326, 865, 11, 264, 3875, 551, 291, 820, 360, 51418, 51418, 307, 291, 362, 428, 3097, 992, 13, 51490, 51490, 509, 39426, 264, 10938, 294, 257, 4974, 1668, 13, 51632, 51632, 400, 550, 291, 445, 1888, 552, 472, 412, 257, 565, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14271561574127714, "compression_ratio": 1.587360594795539, "no_speech_prob": 4.565439667203464e-06}, {"id": 580, "seek": 162484, "start": 1632.1999999999998, "end": 1634.0, "text": " actually.", "tokens": [50364, 2188, 561, 362, 10348, 13691, 7150, 50472, 50472, 281, 1754, 1314, 490, 13456, 2793, 13, 50560, 50560, 583, 294, 3124, 11, 309, 1177, 380, 1643, 281, 312, 300, 709, 295, 257, 1154, 11, 50732, 50732, 767, 13, 50822, 50822, 6288, 11, 577, 360, 291, 1888, 10938, 337, 342, 8997, 2750, 16235, 23475, 51018, 51018, 16979, 30, 51110, 51110, 2264, 13, 51182, 51182, 821, 307, 3195, 295, 819, 7150, 337, 300, 13, 51326, 51326, 865, 11, 264, 3875, 551, 291, 820, 360, 51418, 51418, 307, 291, 362, 428, 3097, 992, 13, 51490, 51490, 509, 39426, 264, 10938, 294, 257, 4974, 1668, 13, 51632, 51632, 400, 550, 291, 445, 1888, 552, 472, 412, 257, 565, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14271561574127714, "compression_ratio": 1.587360594795539, "no_speech_prob": 4.565439667203464e-06}, {"id": 581, "seek": 162484, "start": 1634.0, "end": 1637.9199999999998, "text": " Finally, how do you pick samples for stochastic gradient descent", "tokens": [50364, 2188, 561, 362, 10348, 13691, 7150, 50472, 50472, 281, 1754, 1314, 490, 13456, 2793, 13, 50560, 50560, 583, 294, 3124, 11, 309, 1177, 380, 1643, 281, 312, 300, 709, 295, 257, 1154, 11, 50732, 50732, 767, 13, 50822, 50822, 6288, 11, 577, 360, 291, 1888, 10938, 337, 342, 8997, 2750, 16235, 23475, 51018, 51018, 16979, 30, 51110, 51110, 2264, 13, 51182, 51182, 821, 307, 3195, 295, 819, 7150, 337, 300, 13, 51326, 51326, 865, 11, 264, 3875, 551, 291, 820, 360, 51418, 51418, 307, 291, 362, 428, 3097, 992, 13, 51490, 51490, 509, 39426, 264, 10938, 294, 257, 4974, 1668, 13, 51632, 51632, 400, 550, 291, 445, 1888, 552, 472, 412, 257, 565, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14271561574127714, "compression_ratio": 1.587360594795539, "no_speech_prob": 4.565439667203464e-06}, {"id": 582, "seek": 162484, "start": 1637.9199999999998, "end": 1639.76, "text": " randomly?", "tokens": [50364, 2188, 561, 362, 10348, 13691, 7150, 50472, 50472, 281, 1754, 1314, 490, 13456, 2793, 13, 50560, 50560, 583, 294, 3124, 11, 309, 1177, 380, 1643, 281, 312, 300, 709, 295, 257, 1154, 11, 50732, 50732, 767, 13, 50822, 50822, 6288, 11, 577, 360, 291, 1888, 10938, 337, 342, 8997, 2750, 16235, 23475, 51018, 51018, 16979, 30, 51110, 51110, 2264, 13, 51182, 51182, 821, 307, 3195, 295, 819, 7150, 337, 300, 13, 51326, 51326, 865, 11, 264, 3875, 551, 291, 820, 360, 51418, 51418, 307, 291, 362, 428, 3097, 992, 13, 51490, 51490, 509, 39426, 264, 10938, 294, 257, 4974, 1668, 13, 51632, 51632, 400, 550, 291, 445, 1888, 552, 472, 412, 257, 565, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14271561574127714, "compression_ratio": 1.587360594795539, "no_speech_prob": 4.565439667203464e-06}, {"id": 583, "seek": 162484, "start": 1639.76, "end": 1641.1999999999998, "text": " OK.", "tokens": [50364, 2188, 561, 362, 10348, 13691, 7150, 50472, 50472, 281, 1754, 1314, 490, 13456, 2793, 13, 50560, 50560, 583, 294, 3124, 11, 309, 1177, 380, 1643, 281, 312, 300, 709, 295, 257, 1154, 11, 50732, 50732, 767, 13, 50822, 50822, 6288, 11, 577, 360, 291, 1888, 10938, 337, 342, 8997, 2750, 16235, 23475, 51018, 51018, 16979, 30, 51110, 51110, 2264, 13, 51182, 51182, 821, 307, 3195, 295, 819, 7150, 337, 300, 13, 51326, 51326, 865, 11, 264, 3875, 551, 291, 820, 360, 51418, 51418, 307, 291, 362, 428, 3097, 992, 13, 51490, 51490, 509, 39426, 264, 10938, 294, 257, 4974, 1668, 13, 51632, 51632, 400, 550, 291, 445, 1888, 552, 472, 412, 257, 565, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14271561574127714, "compression_ratio": 1.587360594795539, "no_speech_prob": 4.565439667203464e-06}, {"id": 584, "seek": 162484, "start": 1641.1999999999998, "end": 1644.08, "text": " There is lots of different methods for that.", "tokens": [50364, 2188, 561, 362, 10348, 13691, 7150, 50472, 50472, 281, 1754, 1314, 490, 13456, 2793, 13, 50560, 50560, 583, 294, 3124, 11, 309, 1177, 380, 1643, 281, 312, 300, 709, 295, 257, 1154, 11, 50732, 50732, 767, 13, 50822, 50822, 6288, 11, 577, 360, 291, 1888, 10938, 337, 342, 8997, 2750, 16235, 23475, 51018, 51018, 16979, 30, 51110, 51110, 2264, 13, 51182, 51182, 821, 307, 3195, 295, 819, 7150, 337, 300, 13, 51326, 51326, 865, 11, 264, 3875, 551, 291, 820, 360, 51418, 51418, 307, 291, 362, 428, 3097, 992, 13, 51490, 51490, 509, 39426, 264, 10938, 294, 257, 4974, 1668, 13, 51632, 51632, 400, 550, 291, 445, 1888, 552, 472, 412, 257, 565, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14271561574127714, "compression_ratio": 1.587360594795539, "no_speech_prob": 4.565439667203464e-06}, {"id": 585, "seek": 162484, "start": 1644.08, "end": 1645.9199999999998, "text": " Yeah, the basic thing you should do", "tokens": [50364, 2188, 561, 362, 10348, 13691, 7150, 50472, 50472, 281, 1754, 1314, 490, 13456, 2793, 13, 50560, 50560, 583, 294, 3124, 11, 309, 1177, 380, 1643, 281, 312, 300, 709, 295, 257, 1154, 11, 50732, 50732, 767, 13, 50822, 50822, 6288, 11, 577, 360, 291, 1888, 10938, 337, 342, 8997, 2750, 16235, 23475, 51018, 51018, 16979, 30, 51110, 51110, 2264, 13, 51182, 51182, 821, 307, 3195, 295, 819, 7150, 337, 300, 13, 51326, 51326, 865, 11, 264, 3875, 551, 291, 820, 360, 51418, 51418, 307, 291, 362, 428, 3097, 992, 13, 51490, 51490, 509, 39426, 264, 10938, 294, 257, 4974, 1668, 13, 51632, 51632, 400, 550, 291, 445, 1888, 552, 472, 412, 257, 565, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14271561574127714, "compression_ratio": 1.587360594795539, "no_speech_prob": 4.565439667203464e-06}, {"id": 586, "seek": 162484, "start": 1645.9199999999998, "end": 1647.36, "text": " is you have your training set.", "tokens": [50364, 2188, 561, 362, 10348, 13691, 7150, 50472, 50472, 281, 1754, 1314, 490, 13456, 2793, 13, 50560, 50560, 583, 294, 3124, 11, 309, 1177, 380, 1643, 281, 312, 300, 709, 295, 257, 1154, 11, 50732, 50732, 767, 13, 50822, 50822, 6288, 11, 577, 360, 291, 1888, 10938, 337, 342, 8997, 2750, 16235, 23475, 51018, 51018, 16979, 30, 51110, 51110, 2264, 13, 51182, 51182, 821, 307, 3195, 295, 819, 7150, 337, 300, 13, 51326, 51326, 865, 11, 264, 3875, 551, 291, 820, 360, 51418, 51418, 307, 291, 362, 428, 3097, 992, 13, 51490, 51490, 509, 39426, 264, 10938, 294, 257, 4974, 1668, 13, 51632, 51632, 400, 550, 291, 445, 1888, 552, 472, 412, 257, 565, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14271561574127714, "compression_ratio": 1.587360594795539, "no_speech_prob": 4.565439667203464e-06}, {"id": 587, "seek": 162484, "start": 1647.36, "end": 1650.1999999999998, "text": " You shuffle the samples in a random order.", "tokens": [50364, 2188, 561, 362, 10348, 13691, 7150, 50472, 50472, 281, 1754, 1314, 490, 13456, 2793, 13, 50560, 50560, 583, 294, 3124, 11, 309, 1177, 380, 1643, 281, 312, 300, 709, 295, 257, 1154, 11, 50732, 50732, 767, 13, 50822, 50822, 6288, 11, 577, 360, 291, 1888, 10938, 337, 342, 8997, 2750, 16235, 23475, 51018, 51018, 16979, 30, 51110, 51110, 2264, 13, 51182, 51182, 821, 307, 3195, 295, 819, 7150, 337, 300, 13, 51326, 51326, 865, 11, 264, 3875, 551, 291, 820, 360, 51418, 51418, 307, 291, 362, 428, 3097, 992, 13, 51490, 51490, 509, 39426, 264, 10938, 294, 257, 4974, 1668, 13, 51632, 51632, 400, 550, 291, 445, 1888, 552, 472, 412, 257, 565, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14271561574127714, "compression_ratio": 1.587360594795539, "no_speech_prob": 4.565439667203464e-06}, {"id": 588, "seek": 162484, "start": 1650.1999999999998, "end": 1653.48, "text": " And then you just pick them one at a time.", "tokens": [50364, 2188, 561, 362, 10348, 13691, 7150, 50472, 50472, 281, 1754, 1314, 490, 13456, 2793, 13, 50560, 50560, 583, 294, 3124, 11, 309, 1177, 380, 1643, 281, 312, 300, 709, 295, 257, 1154, 11, 50732, 50732, 767, 13, 50822, 50822, 6288, 11, 577, 360, 291, 1888, 10938, 337, 342, 8997, 2750, 16235, 23475, 51018, 51018, 16979, 30, 51110, 51110, 2264, 13, 51182, 51182, 821, 307, 3195, 295, 819, 7150, 337, 300, 13, 51326, 51326, 865, 11, 264, 3875, 551, 291, 820, 360, 51418, 51418, 307, 291, 362, 428, 3097, 992, 13, 51490, 51490, 509, 39426, 264, 10938, 294, 257, 4974, 1668, 13, 51632, 51632, 400, 550, 291, 445, 1888, 552, 472, 412, 257, 565, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14271561574127714, "compression_ratio": 1.587360594795539, "no_speech_prob": 4.565439667203464e-06}, {"id": 589, "seek": 165348, "start": 1653.48, "end": 1656.4, "text": " And then you cycle through them.", "tokens": [50364, 400, 550, 291, 6586, 807, 552, 13, 50510, 50510, 1107, 8535, 307, 1564, 291, 483, 281, 264, 917, 11, 50684, 50684, 291, 725, 71, 21665, 552, 293, 550, 6586, 807, 552, 797, 13, 50800, 50800, 1107, 8535, 307, 291, 1888, 257, 4974, 6889, 50956, 50956, 1228, 257, 4974, 1230, 13, 51100, 51100, 2048, 565, 291, 1888, 257, 777, 6889, 11, 291, 1888, 552, 16979, 13, 51238, 51414, 759, 291, 360, 15245, 278, 11, 257, 665, 1558, 307, 51586, 51586, 281, 829, 294, 257, 15245, 10938, 300, 366, 5138, 379, 51706, 51706, 819, 490, 1184, 661, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10270373344421387, "compression_ratio": 1.7821782178217822, "no_speech_prob": 1.669863377173897e-05}, {"id": 590, "seek": 165348, "start": 1656.4, "end": 1659.88, "text": " An alternative is once you get to the end,", "tokens": [50364, 400, 550, 291, 6586, 807, 552, 13, 50510, 50510, 1107, 8535, 307, 1564, 291, 483, 281, 264, 917, 11, 50684, 50684, 291, 725, 71, 21665, 552, 293, 550, 6586, 807, 552, 797, 13, 50800, 50800, 1107, 8535, 307, 291, 1888, 257, 4974, 6889, 50956, 50956, 1228, 257, 4974, 1230, 13, 51100, 51100, 2048, 565, 291, 1888, 257, 777, 6889, 11, 291, 1888, 552, 16979, 13, 51238, 51414, 759, 291, 360, 15245, 278, 11, 257, 665, 1558, 307, 51586, 51586, 281, 829, 294, 257, 15245, 10938, 300, 366, 5138, 379, 51706, 51706, 819, 490, 1184, 661, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10270373344421387, "compression_ratio": 1.7821782178217822, "no_speech_prob": 1.669863377173897e-05}, {"id": 591, "seek": 165348, "start": 1659.88, "end": 1662.2, "text": " you reshuffle them and then cycle through them again.", "tokens": [50364, 400, 550, 291, 6586, 807, 552, 13, 50510, 50510, 1107, 8535, 307, 1564, 291, 483, 281, 264, 917, 11, 50684, 50684, 291, 725, 71, 21665, 552, 293, 550, 6586, 807, 552, 797, 13, 50800, 50800, 1107, 8535, 307, 291, 1888, 257, 4974, 6889, 50956, 50956, 1228, 257, 4974, 1230, 13, 51100, 51100, 2048, 565, 291, 1888, 257, 777, 6889, 11, 291, 1888, 552, 16979, 13, 51238, 51414, 759, 291, 360, 15245, 278, 11, 257, 665, 1558, 307, 51586, 51586, 281, 829, 294, 257, 15245, 10938, 300, 366, 5138, 379, 51706, 51706, 819, 490, 1184, 661, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10270373344421387, "compression_ratio": 1.7821782178217822, "no_speech_prob": 1.669863377173897e-05}, {"id": 592, "seek": 165348, "start": 1662.2, "end": 1665.32, "text": " An alternative is you pick a random sample", "tokens": [50364, 400, 550, 291, 6586, 807, 552, 13, 50510, 50510, 1107, 8535, 307, 1564, 291, 483, 281, 264, 917, 11, 50684, 50684, 291, 725, 71, 21665, 552, 293, 550, 6586, 807, 552, 797, 13, 50800, 50800, 1107, 8535, 307, 291, 1888, 257, 4974, 6889, 50956, 50956, 1228, 257, 4974, 1230, 13, 51100, 51100, 2048, 565, 291, 1888, 257, 777, 6889, 11, 291, 1888, 552, 16979, 13, 51238, 51414, 759, 291, 360, 15245, 278, 11, 257, 665, 1558, 307, 51586, 51586, 281, 829, 294, 257, 15245, 10938, 300, 366, 5138, 379, 51706, 51706, 819, 490, 1184, 661, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10270373344421387, "compression_ratio": 1.7821782178217822, "no_speech_prob": 1.669863377173897e-05}, {"id": 593, "seek": 165348, "start": 1665.32, "end": 1668.2, "text": " using a random number.", "tokens": [50364, 400, 550, 291, 6586, 807, 552, 13, 50510, 50510, 1107, 8535, 307, 1564, 291, 483, 281, 264, 917, 11, 50684, 50684, 291, 725, 71, 21665, 552, 293, 550, 6586, 807, 552, 797, 13, 50800, 50800, 1107, 8535, 307, 291, 1888, 257, 4974, 6889, 50956, 50956, 1228, 257, 4974, 1230, 13, 51100, 51100, 2048, 565, 291, 1888, 257, 777, 6889, 11, 291, 1888, 552, 16979, 13, 51238, 51414, 759, 291, 360, 15245, 278, 11, 257, 665, 1558, 307, 51586, 51586, 281, 829, 294, 257, 15245, 10938, 300, 366, 5138, 379, 51706, 51706, 819, 490, 1184, 661, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10270373344421387, "compression_ratio": 1.7821782178217822, "no_speech_prob": 1.669863377173897e-05}, {"id": 594, "seek": 165348, "start": 1668.2, "end": 1670.96, "text": " Every time you pick a new sample, you pick them randomly.", "tokens": [50364, 400, 550, 291, 6586, 807, 552, 13, 50510, 50510, 1107, 8535, 307, 1564, 291, 483, 281, 264, 917, 11, 50684, 50684, 291, 725, 71, 21665, 552, 293, 550, 6586, 807, 552, 797, 13, 50800, 50800, 1107, 8535, 307, 291, 1888, 257, 4974, 6889, 50956, 50956, 1228, 257, 4974, 1230, 13, 51100, 51100, 2048, 565, 291, 1888, 257, 777, 6889, 11, 291, 1888, 552, 16979, 13, 51238, 51414, 759, 291, 360, 15245, 278, 11, 257, 665, 1558, 307, 51586, 51586, 281, 829, 294, 257, 15245, 10938, 300, 366, 5138, 379, 51706, 51706, 819, 490, 1184, 661, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10270373344421387, "compression_ratio": 1.7821782178217822, "no_speech_prob": 1.669863377173897e-05}, {"id": 595, "seek": 165348, "start": 1674.48, "end": 1677.92, "text": " If you do batching, a good idea is", "tokens": [50364, 400, 550, 291, 6586, 807, 552, 13, 50510, 50510, 1107, 8535, 307, 1564, 291, 483, 281, 264, 917, 11, 50684, 50684, 291, 725, 71, 21665, 552, 293, 550, 6586, 807, 552, 797, 13, 50800, 50800, 1107, 8535, 307, 291, 1888, 257, 4974, 6889, 50956, 50956, 1228, 257, 4974, 1230, 13, 51100, 51100, 2048, 565, 291, 1888, 257, 777, 6889, 11, 291, 1888, 552, 16979, 13, 51238, 51414, 759, 291, 360, 15245, 278, 11, 257, 665, 1558, 307, 51586, 51586, 281, 829, 294, 257, 15245, 10938, 300, 366, 5138, 379, 51706, 51706, 819, 490, 1184, 661, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10270373344421387, "compression_ratio": 1.7821782178217822, "no_speech_prob": 1.669863377173897e-05}, {"id": 596, "seek": 165348, "start": 1677.92, "end": 1680.32, "text": " to put in a batch samples that are maximally", "tokens": [50364, 400, 550, 291, 6586, 807, 552, 13, 50510, 50510, 1107, 8535, 307, 1564, 291, 483, 281, 264, 917, 11, 50684, 50684, 291, 725, 71, 21665, 552, 293, 550, 6586, 807, 552, 797, 13, 50800, 50800, 1107, 8535, 307, 291, 1888, 257, 4974, 6889, 50956, 50956, 1228, 257, 4974, 1230, 13, 51100, 51100, 2048, 565, 291, 1888, 257, 777, 6889, 11, 291, 1888, 552, 16979, 13, 51238, 51414, 759, 291, 360, 15245, 278, 11, 257, 665, 1558, 307, 51586, 51586, 281, 829, 294, 257, 15245, 10938, 300, 366, 5138, 379, 51706, 51706, 819, 490, 1184, 661, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10270373344421387, "compression_ratio": 1.7821782178217822, "no_speech_prob": 1.669863377173897e-05}, {"id": 597, "seek": 165348, "start": 1680.32, "end": 1681.4, "text": " different from each other.", "tokens": [50364, 400, 550, 291, 6586, 807, 552, 13, 50510, 50510, 1107, 8535, 307, 1564, 291, 483, 281, 264, 917, 11, 50684, 50684, 291, 725, 71, 21665, 552, 293, 550, 6586, 807, 552, 797, 13, 50800, 50800, 1107, 8535, 307, 291, 1888, 257, 4974, 6889, 50956, 50956, 1228, 257, 4974, 1230, 13, 51100, 51100, 2048, 565, 291, 1888, 257, 777, 6889, 11, 291, 1888, 552, 16979, 13, 51238, 51414, 759, 291, 360, 15245, 278, 11, 257, 665, 1558, 307, 51586, 51586, 281, 829, 294, 257, 15245, 10938, 300, 366, 5138, 379, 51706, 51706, 819, 490, 1184, 661, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10270373344421387, "compression_ratio": 1.7821782178217822, "no_speech_prob": 1.669863377173897e-05}, {"id": 598, "seek": 168140, "start": 1681.4, "end": 1683.92, "text": " So things that are, for example, different categories", "tokens": [50364, 407, 721, 300, 366, 11, 337, 1365, 11, 819, 10479, 50490, 50490, 498, 291, 360, 21538, 13, 50614, 50614, 583, 881, 561, 445, 1888, 552, 16979, 13, 50758, 50758, 583, 309, 311, 665, 281, 362, 10938, 300, 366, 5138, 379, 819, 11, 50880, 50880, 300, 366, 11184, 2139, 294, 257, 15245, 51004, 51004, 420, 1830, 264, 1399, 295, 3097, 13, 51090, 51090, 400, 550, 456, 366, 439, 3685, 295, 11733, 51168, 51168, 300, 561, 764, 281, 16078, 2252, 10938, 51390, 51390, 370, 300, 264, 9989, 11, 1858, 10938, 366, 406, 11, 51528, 51528, 291, 500, 380, 5964, 428, 565, 445, 2577, 552, 670, 293, 670, 51644, 51644, 797, 13, 51712, 51712, 821, 311, 439, 3685, 295, 11733, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11396952144435195, "compression_ratio": 1.7938931297709924, "no_speech_prob": 1.4282441043178551e-05}, {"id": 599, "seek": 168140, "start": 1683.92, "end": 1686.4, "text": " if you do classification.", "tokens": [50364, 407, 721, 300, 366, 11, 337, 1365, 11, 819, 10479, 50490, 50490, 498, 291, 360, 21538, 13, 50614, 50614, 583, 881, 561, 445, 1888, 552, 16979, 13, 50758, 50758, 583, 309, 311, 665, 281, 362, 10938, 300, 366, 5138, 379, 819, 11, 50880, 50880, 300, 366, 11184, 2139, 294, 257, 15245, 51004, 51004, 420, 1830, 264, 1399, 295, 3097, 13, 51090, 51090, 400, 550, 456, 366, 439, 3685, 295, 11733, 51168, 51168, 300, 561, 764, 281, 16078, 2252, 10938, 51390, 51390, 370, 300, 264, 9989, 11, 1858, 10938, 366, 406, 11, 51528, 51528, 291, 500, 380, 5964, 428, 565, 445, 2577, 552, 670, 293, 670, 51644, 51644, 797, 13, 51712, 51712, 821, 311, 439, 3685, 295, 11733, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11396952144435195, "compression_ratio": 1.7938931297709924, "no_speech_prob": 1.4282441043178551e-05}, {"id": 600, "seek": 168140, "start": 1686.4, "end": 1689.2800000000002, "text": " But most people just pick them randomly.", "tokens": [50364, 407, 721, 300, 366, 11, 337, 1365, 11, 819, 10479, 50490, 50490, 498, 291, 360, 21538, 13, 50614, 50614, 583, 881, 561, 445, 1888, 552, 16979, 13, 50758, 50758, 583, 309, 311, 665, 281, 362, 10938, 300, 366, 5138, 379, 819, 11, 50880, 50880, 300, 366, 11184, 2139, 294, 257, 15245, 51004, 51004, 420, 1830, 264, 1399, 295, 3097, 13, 51090, 51090, 400, 550, 456, 366, 439, 3685, 295, 11733, 51168, 51168, 300, 561, 764, 281, 16078, 2252, 10938, 51390, 51390, 370, 300, 264, 9989, 11, 1858, 10938, 366, 406, 11, 51528, 51528, 291, 500, 380, 5964, 428, 565, 445, 2577, 552, 670, 293, 670, 51644, 51644, 797, 13, 51712, 51712, 821, 311, 439, 3685, 295, 11733, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11396952144435195, "compression_ratio": 1.7938931297709924, "no_speech_prob": 1.4282441043178551e-05}, {"id": 601, "seek": 168140, "start": 1689.2800000000002, "end": 1691.72, "text": " But it's good to have samples that are maximally different,", "tokens": [50364, 407, 721, 300, 366, 11, 337, 1365, 11, 819, 10479, 50490, 50490, 498, 291, 360, 21538, 13, 50614, 50614, 583, 881, 561, 445, 1888, 552, 16979, 13, 50758, 50758, 583, 309, 311, 665, 281, 362, 10938, 300, 366, 5138, 379, 819, 11, 50880, 50880, 300, 366, 11184, 2139, 294, 257, 15245, 51004, 51004, 420, 1830, 264, 1399, 295, 3097, 13, 51090, 51090, 400, 550, 456, 366, 439, 3685, 295, 11733, 51168, 51168, 300, 561, 764, 281, 16078, 2252, 10938, 51390, 51390, 370, 300, 264, 9989, 11, 1858, 10938, 366, 406, 11, 51528, 51528, 291, 500, 380, 5964, 428, 565, 445, 2577, 552, 670, 293, 670, 51644, 51644, 797, 13, 51712, 51712, 821, 311, 439, 3685, 295, 11733, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11396952144435195, "compression_ratio": 1.7938931297709924, "no_speech_prob": 1.4282441043178551e-05}, {"id": 602, "seek": 168140, "start": 1691.72, "end": 1694.2, "text": " that are nearby either in a batch", "tokens": [50364, 407, 721, 300, 366, 11, 337, 1365, 11, 819, 10479, 50490, 50490, 498, 291, 360, 21538, 13, 50614, 50614, 583, 881, 561, 445, 1888, 552, 16979, 13, 50758, 50758, 583, 309, 311, 665, 281, 362, 10938, 300, 366, 5138, 379, 819, 11, 50880, 50880, 300, 366, 11184, 2139, 294, 257, 15245, 51004, 51004, 420, 1830, 264, 1399, 295, 3097, 13, 51090, 51090, 400, 550, 456, 366, 439, 3685, 295, 11733, 51168, 51168, 300, 561, 764, 281, 16078, 2252, 10938, 51390, 51390, 370, 300, 264, 9989, 11, 1858, 10938, 366, 406, 11, 51528, 51528, 291, 500, 380, 5964, 428, 565, 445, 2577, 552, 670, 293, 670, 51644, 51644, 797, 13, 51712, 51712, 821, 311, 439, 3685, 295, 11733, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11396952144435195, "compression_ratio": 1.7938931297709924, "no_speech_prob": 1.4282441043178551e-05}, {"id": 603, "seek": 168140, "start": 1694.2, "end": 1695.92, "text": " or during the process of training.", "tokens": [50364, 407, 721, 300, 366, 11, 337, 1365, 11, 819, 10479, 50490, 50490, 498, 291, 360, 21538, 13, 50614, 50614, 583, 881, 561, 445, 1888, 552, 16979, 13, 50758, 50758, 583, 309, 311, 665, 281, 362, 10938, 300, 366, 5138, 379, 819, 11, 50880, 50880, 300, 366, 11184, 2139, 294, 257, 15245, 51004, 51004, 420, 1830, 264, 1399, 295, 3097, 13, 51090, 51090, 400, 550, 456, 366, 439, 3685, 295, 11733, 51168, 51168, 300, 561, 764, 281, 16078, 2252, 10938, 51390, 51390, 370, 300, 264, 9989, 11, 1858, 10938, 366, 406, 11, 51528, 51528, 291, 500, 380, 5964, 428, 565, 445, 2577, 552, 670, 293, 670, 51644, 51644, 797, 13, 51712, 51712, 821, 311, 439, 3685, 295, 11733, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11396952144435195, "compression_ratio": 1.7938931297709924, "no_speech_prob": 1.4282441043178551e-05}, {"id": 604, "seek": 168140, "start": 1695.92, "end": 1697.48, "text": " And then there are all kinds of tricks", "tokens": [50364, 407, 721, 300, 366, 11, 337, 1365, 11, 819, 10479, 50490, 50490, 498, 291, 360, 21538, 13, 50614, 50614, 583, 881, 561, 445, 1888, 552, 16979, 13, 50758, 50758, 583, 309, 311, 665, 281, 362, 10938, 300, 366, 5138, 379, 819, 11, 50880, 50880, 300, 366, 11184, 2139, 294, 257, 15245, 51004, 51004, 420, 1830, 264, 1399, 295, 3097, 13, 51090, 51090, 400, 550, 456, 366, 439, 3685, 295, 11733, 51168, 51168, 300, 561, 764, 281, 16078, 2252, 10938, 51390, 51390, 370, 300, 264, 9989, 11, 1858, 10938, 366, 406, 11, 51528, 51528, 291, 500, 380, 5964, 428, 565, 445, 2577, 552, 670, 293, 670, 51644, 51644, 797, 13, 51712, 51712, 821, 311, 439, 3685, 295, 11733, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11396952144435195, "compression_ratio": 1.7938931297709924, "no_speech_prob": 1.4282441043178551e-05}, {"id": 605, "seek": 168140, "start": 1697.48, "end": 1701.92, "text": " that people use to emphasize difficult samples", "tokens": [50364, 407, 721, 300, 366, 11, 337, 1365, 11, 819, 10479, 50490, 50490, 498, 291, 360, 21538, 13, 50614, 50614, 583, 881, 561, 445, 1888, 552, 16979, 13, 50758, 50758, 583, 309, 311, 665, 281, 362, 10938, 300, 366, 5138, 379, 819, 11, 50880, 50880, 300, 366, 11184, 2139, 294, 257, 15245, 51004, 51004, 420, 1830, 264, 1399, 295, 3097, 13, 51090, 51090, 400, 550, 456, 366, 439, 3685, 295, 11733, 51168, 51168, 300, 561, 764, 281, 16078, 2252, 10938, 51390, 51390, 370, 300, 264, 9989, 11, 1858, 10938, 366, 406, 11, 51528, 51528, 291, 500, 380, 5964, 428, 565, 445, 2577, 552, 670, 293, 670, 51644, 51644, 797, 13, 51712, 51712, 821, 311, 439, 3685, 295, 11733, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11396952144435195, "compression_ratio": 1.7938931297709924, "no_speech_prob": 1.4282441043178551e-05}, {"id": 606, "seek": 168140, "start": 1701.92, "end": 1704.68, "text": " so that the boring, easy samples are not,", "tokens": [50364, 407, 721, 300, 366, 11, 337, 1365, 11, 819, 10479, 50490, 50490, 498, 291, 360, 21538, 13, 50614, 50614, 583, 881, 561, 445, 1888, 552, 16979, 13, 50758, 50758, 583, 309, 311, 665, 281, 362, 10938, 300, 366, 5138, 379, 819, 11, 50880, 50880, 300, 366, 11184, 2139, 294, 257, 15245, 51004, 51004, 420, 1830, 264, 1399, 295, 3097, 13, 51090, 51090, 400, 550, 456, 366, 439, 3685, 295, 11733, 51168, 51168, 300, 561, 764, 281, 16078, 2252, 10938, 51390, 51390, 370, 300, 264, 9989, 11, 1858, 10938, 366, 406, 11, 51528, 51528, 291, 500, 380, 5964, 428, 565, 445, 2577, 552, 670, 293, 670, 51644, 51644, 797, 13, 51712, 51712, 821, 311, 439, 3685, 295, 11733, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11396952144435195, "compression_ratio": 1.7938931297709924, "no_speech_prob": 1.4282441043178551e-05}, {"id": 607, "seek": 168140, "start": 1704.68, "end": 1707.0, "text": " you don't waste your time just seeing them over and over", "tokens": [50364, 407, 721, 300, 366, 11, 337, 1365, 11, 819, 10479, 50490, 50490, 498, 291, 360, 21538, 13, 50614, 50614, 583, 881, 561, 445, 1888, 552, 16979, 13, 50758, 50758, 583, 309, 311, 665, 281, 362, 10938, 300, 366, 5138, 379, 819, 11, 50880, 50880, 300, 366, 11184, 2139, 294, 257, 15245, 51004, 51004, 420, 1830, 264, 1399, 295, 3097, 13, 51090, 51090, 400, 550, 456, 366, 439, 3685, 295, 11733, 51168, 51168, 300, 561, 764, 281, 16078, 2252, 10938, 51390, 51390, 370, 300, 264, 9989, 11, 1858, 10938, 366, 406, 11, 51528, 51528, 291, 500, 380, 5964, 428, 565, 445, 2577, 552, 670, 293, 670, 51644, 51644, 797, 13, 51712, 51712, 821, 311, 439, 3685, 295, 11733, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11396952144435195, "compression_ratio": 1.7938931297709924, "no_speech_prob": 1.4282441043178551e-05}, {"id": 608, "seek": 168140, "start": 1707.0, "end": 1708.3600000000001, "text": " again.", "tokens": [50364, 407, 721, 300, 366, 11, 337, 1365, 11, 819, 10479, 50490, 50490, 498, 291, 360, 21538, 13, 50614, 50614, 583, 881, 561, 445, 1888, 552, 16979, 13, 50758, 50758, 583, 309, 311, 665, 281, 362, 10938, 300, 366, 5138, 379, 819, 11, 50880, 50880, 300, 366, 11184, 2139, 294, 257, 15245, 51004, 51004, 420, 1830, 264, 1399, 295, 3097, 13, 51090, 51090, 400, 550, 456, 366, 439, 3685, 295, 11733, 51168, 51168, 300, 561, 764, 281, 16078, 2252, 10938, 51390, 51390, 370, 300, 264, 9989, 11, 1858, 10938, 366, 406, 11, 51528, 51528, 291, 500, 380, 5964, 428, 565, 445, 2577, 552, 670, 293, 670, 51644, 51644, 797, 13, 51712, 51712, 821, 311, 439, 3685, 295, 11733, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11396952144435195, "compression_ratio": 1.7938931297709924, "no_speech_prob": 1.4282441043178551e-05}, {"id": 609, "seek": 168140, "start": 1708.3600000000001, "end": 1710.72, "text": " There's all kinds of tricks.", "tokens": [50364, 407, 721, 300, 366, 11, 337, 1365, 11, 819, 10479, 50490, 50490, 498, 291, 360, 21538, 13, 50614, 50614, 583, 881, 561, 445, 1888, 552, 16979, 13, 50758, 50758, 583, 309, 311, 665, 281, 362, 10938, 300, 366, 5138, 379, 819, 11, 50880, 50880, 300, 366, 11184, 2139, 294, 257, 15245, 51004, 51004, 420, 1830, 264, 1399, 295, 3097, 13, 51090, 51090, 400, 550, 456, 366, 439, 3685, 295, 11733, 51168, 51168, 300, 561, 764, 281, 16078, 2252, 10938, 51390, 51390, 370, 300, 264, 9989, 11, 1858, 10938, 366, 406, 11, 51528, 51528, 291, 500, 380, 5964, 428, 565, 445, 2577, 552, 670, 293, 670, 51644, 51644, 797, 13, 51712, 51712, 821, 311, 439, 3685, 295, 11733, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11396952144435195, "compression_ratio": 1.7938931297709924, "no_speech_prob": 1.4282441043178551e-05}, {"id": 610, "seek": 171072, "start": 1710.72, "end": 1713.96, "text": " But the simple one is, which most people use,", "tokens": [50364, 583, 264, 2199, 472, 307, 11, 597, 881, 561, 764, 11, 50526, 50526, 291, 39426, 428, 10938, 293, 291, 1190, 807, 552, 13, 50680, 50680, 316, 688, 295, 561, 586, 764, 611, 1412, 14501, 19631, 13, 50778, 50778, 407, 633, 6889, 307, 767, 33431, 50876, 50876, 538, 512, 1399, 13, 51014, 51014, 1171, 364, 3256, 11, 291, 393, 37555, 264, 18426, 257, 707, 857, 13, 51134, 51134, 509, 1319, 264, 4577, 13, 51182, 51182, 509, 909, 5658, 11, 1030, 11458, 13, 51284, 51284, 639, 307, 364, 11677, 636, 295, 5127, 544, 10938, 51506, 51506, 813, 291, 767, 362, 13, 51580, 51580, 400, 561, 360, 341, 16979, 322, 264, 3603, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11347915008004787, "compression_ratio": 1.6547619047619047, "no_speech_prob": 2.467609192535747e-05}, {"id": 611, "seek": 171072, "start": 1713.96, "end": 1717.04, "text": " you shuffle your samples and you run through them.", "tokens": [50364, 583, 264, 2199, 472, 307, 11, 597, 881, 561, 764, 11, 50526, 50526, 291, 39426, 428, 10938, 293, 291, 1190, 807, 552, 13, 50680, 50680, 316, 688, 295, 561, 586, 764, 611, 1412, 14501, 19631, 13, 50778, 50778, 407, 633, 6889, 307, 767, 33431, 50876, 50876, 538, 512, 1399, 13, 51014, 51014, 1171, 364, 3256, 11, 291, 393, 37555, 264, 18426, 257, 707, 857, 13, 51134, 51134, 509, 1319, 264, 4577, 13, 51182, 51182, 509, 909, 5658, 11, 1030, 11458, 13, 51284, 51284, 639, 307, 364, 11677, 636, 295, 5127, 544, 10938, 51506, 51506, 813, 291, 767, 362, 13, 51580, 51580, 400, 561, 360, 341, 16979, 322, 264, 3603, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11347915008004787, "compression_ratio": 1.6547619047619047, "no_speech_prob": 2.467609192535747e-05}, {"id": 612, "seek": 171072, "start": 1717.04, "end": 1719.0, "text": " A lot of people now use also data augmentation.", "tokens": [50364, 583, 264, 2199, 472, 307, 11, 597, 881, 561, 764, 11, 50526, 50526, 291, 39426, 428, 10938, 293, 291, 1190, 807, 552, 13, 50680, 50680, 316, 688, 295, 561, 586, 764, 611, 1412, 14501, 19631, 13, 50778, 50778, 407, 633, 6889, 307, 767, 33431, 50876, 50876, 538, 512, 1399, 13, 51014, 51014, 1171, 364, 3256, 11, 291, 393, 37555, 264, 18426, 257, 707, 857, 13, 51134, 51134, 509, 1319, 264, 4577, 13, 51182, 51182, 509, 909, 5658, 11, 1030, 11458, 13, 51284, 51284, 639, 307, 364, 11677, 636, 295, 5127, 544, 10938, 51506, 51506, 813, 291, 767, 362, 13, 51580, 51580, 400, 561, 360, 341, 16979, 322, 264, 3603, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11347915008004787, "compression_ratio": 1.6547619047619047, "no_speech_prob": 2.467609192535747e-05}, {"id": 613, "seek": 171072, "start": 1719.0, "end": 1720.96, "text": " So every sample is actually distorted", "tokens": [50364, 583, 264, 2199, 472, 307, 11, 597, 881, 561, 764, 11, 50526, 50526, 291, 39426, 428, 10938, 293, 291, 1190, 807, 552, 13, 50680, 50680, 316, 688, 295, 561, 586, 764, 611, 1412, 14501, 19631, 13, 50778, 50778, 407, 633, 6889, 307, 767, 33431, 50876, 50876, 538, 512, 1399, 13, 51014, 51014, 1171, 364, 3256, 11, 291, 393, 37555, 264, 18426, 257, 707, 857, 13, 51134, 51134, 509, 1319, 264, 4577, 13, 51182, 51182, 509, 909, 5658, 11, 1030, 11458, 13, 51284, 51284, 639, 307, 364, 11677, 636, 295, 5127, 544, 10938, 51506, 51506, 813, 291, 767, 362, 13, 51580, 51580, 400, 561, 360, 341, 16979, 322, 264, 3603, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11347915008004787, "compression_ratio": 1.6547619047619047, "no_speech_prob": 2.467609192535747e-05}, {"id": 614, "seek": 171072, "start": 1720.96, "end": 1723.72, "text": " by some process.", "tokens": [50364, 583, 264, 2199, 472, 307, 11, 597, 881, 561, 764, 11, 50526, 50526, 291, 39426, 428, 10938, 293, 291, 1190, 807, 552, 13, 50680, 50680, 316, 688, 295, 561, 586, 764, 611, 1412, 14501, 19631, 13, 50778, 50778, 407, 633, 6889, 307, 767, 33431, 50876, 50876, 538, 512, 1399, 13, 51014, 51014, 1171, 364, 3256, 11, 291, 393, 37555, 264, 18426, 257, 707, 857, 13, 51134, 51134, 509, 1319, 264, 4577, 13, 51182, 51182, 509, 909, 5658, 11, 1030, 11458, 13, 51284, 51284, 639, 307, 364, 11677, 636, 295, 5127, 544, 10938, 51506, 51506, 813, 291, 767, 362, 13, 51580, 51580, 400, 561, 360, 341, 16979, 322, 264, 3603, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11347915008004787, "compression_ratio": 1.6547619047619047, "no_speech_prob": 2.467609192535747e-05}, {"id": 615, "seek": 171072, "start": 1723.72, "end": 1726.1200000000001, "text": " For an image, you can distort the geometry a little bit.", "tokens": [50364, 583, 264, 2199, 472, 307, 11, 597, 881, 561, 764, 11, 50526, 50526, 291, 39426, 428, 10938, 293, 291, 1190, 807, 552, 13, 50680, 50680, 316, 688, 295, 561, 586, 764, 611, 1412, 14501, 19631, 13, 50778, 50778, 407, 633, 6889, 307, 767, 33431, 50876, 50876, 538, 512, 1399, 13, 51014, 51014, 1171, 364, 3256, 11, 291, 393, 37555, 264, 18426, 257, 707, 857, 13, 51134, 51134, 509, 1319, 264, 4577, 13, 51182, 51182, 509, 909, 5658, 11, 1030, 11458, 13, 51284, 51284, 639, 307, 364, 11677, 636, 295, 5127, 544, 10938, 51506, 51506, 813, 291, 767, 362, 13, 51580, 51580, 400, 561, 360, 341, 16979, 322, 264, 3603, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11347915008004787, "compression_ratio": 1.6547619047619047, "no_speech_prob": 2.467609192535747e-05}, {"id": 616, "seek": 171072, "start": 1726.1200000000001, "end": 1727.08, "text": " You change the colors.", "tokens": [50364, 583, 264, 2199, 472, 307, 11, 597, 881, 561, 764, 11, 50526, 50526, 291, 39426, 428, 10938, 293, 291, 1190, 807, 552, 13, 50680, 50680, 316, 688, 295, 561, 586, 764, 611, 1412, 14501, 19631, 13, 50778, 50778, 407, 633, 6889, 307, 767, 33431, 50876, 50876, 538, 512, 1399, 13, 51014, 51014, 1171, 364, 3256, 11, 291, 393, 37555, 264, 18426, 257, 707, 857, 13, 51134, 51134, 509, 1319, 264, 4577, 13, 51182, 51182, 509, 909, 5658, 11, 1030, 11458, 13, 51284, 51284, 639, 307, 364, 11677, 636, 295, 5127, 544, 10938, 51506, 51506, 813, 291, 767, 362, 13, 51580, 51580, 400, 561, 360, 341, 16979, 322, 264, 3603, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11347915008004787, "compression_ratio": 1.6547619047619047, "no_speech_prob": 2.467609192535747e-05}, {"id": 617, "seek": 171072, "start": 1727.08, "end": 1729.1200000000001, "text": " You add noise, et cetera.", "tokens": [50364, 583, 264, 2199, 472, 307, 11, 597, 881, 561, 764, 11, 50526, 50526, 291, 39426, 428, 10938, 293, 291, 1190, 807, 552, 13, 50680, 50680, 316, 688, 295, 561, 586, 764, 611, 1412, 14501, 19631, 13, 50778, 50778, 407, 633, 6889, 307, 767, 33431, 50876, 50876, 538, 512, 1399, 13, 51014, 51014, 1171, 364, 3256, 11, 291, 393, 37555, 264, 18426, 257, 707, 857, 13, 51134, 51134, 509, 1319, 264, 4577, 13, 51182, 51182, 509, 909, 5658, 11, 1030, 11458, 13, 51284, 51284, 639, 307, 364, 11677, 636, 295, 5127, 544, 10938, 51506, 51506, 813, 291, 767, 362, 13, 51580, 51580, 400, 561, 360, 341, 16979, 322, 264, 3603, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11347915008004787, "compression_ratio": 1.6547619047619047, "no_speech_prob": 2.467609192535747e-05}, {"id": 618, "seek": 171072, "start": 1729.1200000000001, "end": 1733.56, "text": " This is an artificial way of adding more samples", "tokens": [50364, 583, 264, 2199, 472, 307, 11, 597, 881, 561, 764, 11, 50526, 50526, 291, 39426, 428, 10938, 293, 291, 1190, 807, 552, 13, 50680, 50680, 316, 688, 295, 561, 586, 764, 611, 1412, 14501, 19631, 13, 50778, 50778, 407, 633, 6889, 307, 767, 33431, 50876, 50876, 538, 512, 1399, 13, 51014, 51014, 1171, 364, 3256, 11, 291, 393, 37555, 264, 18426, 257, 707, 857, 13, 51134, 51134, 509, 1319, 264, 4577, 13, 51182, 51182, 509, 909, 5658, 11, 1030, 11458, 13, 51284, 51284, 639, 307, 364, 11677, 636, 295, 5127, 544, 10938, 51506, 51506, 813, 291, 767, 362, 13, 51580, 51580, 400, 561, 360, 341, 16979, 322, 264, 3603, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11347915008004787, "compression_ratio": 1.6547619047619047, "no_speech_prob": 2.467609192535747e-05}, {"id": 619, "seek": 171072, "start": 1733.56, "end": 1735.04, "text": " than you actually have.", "tokens": [50364, 583, 264, 2199, 472, 307, 11, 597, 881, 561, 764, 11, 50526, 50526, 291, 39426, 428, 10938, 293, 291, 1190, 807, 552, 13, 50680, 50680, 316, 688, 295, 561, 586, 764, 611, 1412, 14501, 19631, 13, 50778, 50778, 407, 633, 6889, 307, 767, 33431, 50876, 50876, 538, 512, 1399, 13, 51014, 51014, 1171, 364, 3256, 11, 291, 393, 37555, 264, 18426, 257, 707, 857, 13, 51134, 51134, 509, 1319, 264, 4577, 13, 51182, 51182, 509, 909, 5658, 11, 1030, 11458, 13, 51284, 51284, 639, 307, 364, 11677, 636, 295, 5127, 544, 10938, 51506, 51506, 813, 291, 767, 362, 13, 51580, 51580, 400, 561, 360, 341, 16979, 322, 264, 3603, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11347915008004787, "compression_ratio": 1.6547619047619047, "no_speech_prob": 2.467609192535747e-05}, {"id": 620, "seek": 171072, "start": 1735.04, "end": 1737.72, "text": " And people do this randomly on the fly", "tokens": [50364, 583, 264, 2199, 472, 307, 11, 597, 881, 561, 764, 11, 50526, 50526, 291, 39426, 428, 10938, 293, 291, 1190, 807, 552, 13, 50680, 50680, 316, 688, 295, 561, 586, 764, 611, 1412, 14501, 19631, 13, 50778, 50778, 407, 633, 6889, 307, 767, 33431, 50876, 50876, 538, 512, 1399, 13, 51014, 51014, 1171, 364, 3256, 11, 291, 393, 37555, 264, 18426, 257, 707, 857, 13, 51134, 51134, 509, 1319, 264, 4577, 13, 51182, 51182, 509, 909, 5658, 11, 1030, 11458, 13, 51284, 51284, 639, 307, 364, 11677, 636, 295, 5127, 544, 10938, 51506, 51506, 813, 291, 767, 362, 13, 51580, 51580, 400, 561, 360, 341, 16979, 322, 264, 3603, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11347915008004787, "compression_ratio": 1.6547619047619047, "no_speech_prob": 2.467609192535747e-05}, {"id": 621, "seek": 173772, "start": 1737.72, "end": 1741.56, "text": " or they can precompute those transformations.", "tokens": [50364, 420, 436, 393, 659, 21541, 1169, 729, 34852, 13, 50556, 50556, 407, 3195, 295, 11733, 456, 382, 731, 13, 50674, 50674, 5264, 1168, 11, 577, 360, 291, 1888, 264, 15245, 2744, 30, 50846, 50846, 440, 1151, 30, 50904, 50904, 440, 15245, 2744, 13, 50978, 50978, 876, 11, 264, 15245, 2744, 13, 51046, 51046, 663, 311, 9540, 538, 428, 8837, 13, 51124, 51124, 407, 498, 291, 362, 257, 18407, 11, 5101, 337, 23551, 20004, 9590, 11, 51428, 51428, 428, 15245, 2744, 576, 312, 4992, 1296, 3165, 293, 12145, 51566, 51566, 420, 746, 411, 300, 13, 51614, 51614, 1171, 4356, 9590, 11, 291, 1062, 362, 281, 15245, 544, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1524962685324929, "compression_ratio": 1.6072874493927125, "no_speech_prob": 2.6681846065912396e-05}, {"id": 622, "seek": 173772, "start": 1741.56, "end": 1743.92, "text": " So lots of tricks there as well.", "tokens": [50364, 420, 436, 393, 659, 21541, 1169, 729, 34852, 13, 50556, 50556, 407, 3195, 295, 11733, 456, 382, 731, 13, 50674, 50674, 5264, 1168, 11, 577, 360, 291, 1888, 264, 15245, 2744, 30, 50846, 50846, 440, 1151, 30, 50904, 50904, 440, 15245, 2744, 13, 50978, 50978, 876, 11, 264, 15245, 2744, 13, 51046, 51046, 663, 311, 9540, 538, 428, 8837, 13, 51124, 51124, 407, 498, 291, 362, 257, 18407, 11, 5101, 337, 23551, 20004, 9590, 11, 51428, 51428, 428, 15245, 2744, 576, 312, 4992, 1296, 3165, 293, 12145, 51566, 51566, 420, 746, 411, 300, 13, 51614, 51614, 1171, 4356, 9590, 11, 291, 1062, 362, 281, 15245, 544, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1524962685324929, "compression_ratio": 1.6072874493927125, "no_speech_prob": 2.6681846065912396e-05}, {"id": 623, "seek": 173772, "start": 1743.92, "end": 1747.3600000000001, "text": " Last question, how do you pick the batch size?", "tokens": [50364, 420, 436, 393, 659, 21541, 1169, 729, 34852, 13, 50556, 50556, 407, 3195, 295, 11733, 456, 382, 731, 13, 50674, 50674, 5264, 1168, 11, 577, 360, 291, 1888, 264, 15245, 2744, 30, 50846, 50846, 440, 1151, 30, 50904, 50904, 440, 15245, 2744, 13, 50978, 50978, 876, 11, 264, 15245, 2744, 13, 51046, 51046, 663, 311, 9540, 538, 428, 8837, 13, 51124, 51124, 407, 498, 291, 362, 257, 18407, 11, 5101, 337, 23551, 20004, 9590, 11, 51428, 51428, 428, 15245, 2744, 576, 312, 4992, 1296, 3165, 293, 12145, 51566, 51566, 420, 746, 411, 300, 13, 51614, 51614, 1171, 4356, 9590, 11, 291, 1062, 362, 281, 15245, 544, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1524962685324929, "compression_ratio": 1.6072874493927125, "no_speech_prob": 2.6681846065912396e-05}, {"id": 624, "seek": 173772, "start": 1747.3600000000001, "end": 1748.52, "text": " The best?", "tokens": [50364, 420, 436, 393, 659, 21541, 1169, 729, 34852, 13, 50556, 50556, 407, 3195, 295, 11733, 456, 382, 731, 13, 50674, 50674, 5264, 1168, 11, 577, 360, 291, 1888, 264, 15245, 2744, 30, 50846, 50846, 440, 1151, 30, 50904, 50904, 440, 15245, 2744, 13, 50978, 50978, 876, 11, 264, 15245, 2744, 13, 51046, 51046, 663, 311, 9540, 538, 428, 8837, 13, 51124, 51124, 407, 498, 291, 362, 257, 18407, 11, 5101, 337, 23551, 20004, 9590, 11, 51428, 51428, 428, 15245, 2744, 576, 312, 4992, 1296, 3165, 293, 12145, 51566, 51566, 420, 746, 411, 300, 13, 51614, 51614, 1171, 4356, 9590, 11, 291, 1062, 362, 281, 15245, 544, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1524962685324929, "compression_ratio": 1.6072874493927125, "no_speech_prob": 2.6681846065912396e-05}, {"id": 625, "seek": 173772, "start": 1748.52, "end": 1750.0, "text": " The batch size.", "tokens": [50364, 420, 436, 393, 659, 21541, 1169, 729, 34852, 13, 50556, 50556, 407, 3195, 295, 11733, 456, 382, 731, 13, 50674, 50674, 5264, 1168, 11, 577, 360, 291, 1888, 264, 15245, 2744, 30, 50846, 50846, 440, 1151, 30, 50904, 50904, 440, 15245, 2744, 13, 50978, 50978, 876, 11, 264, 15245, 2744, 13, 51046, 51046, 663, 311, 9540, 538, 428, 8837, 13, 51124, 51124, 407, 498, 291, 362, 257, 18407, 11, 5101, 337, 23551, 20004, 9590, 11, 51428, 51428, 428, 15245, 2744, 576, 312, 4992, 1296, 3165, 293, 12145, 51566, 51566, 420, 746, 411, 300, 13, 51614, 51614, 1171, 4356, 9590, 11, 291, 1062, 362, 281, 15245, 544, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1524962685324929, "compression_ratio": 1.6072874493927125, "no_speech_prob": 2.6681846065912396e-05}, {"id": 626, "seek": 173772, "start": 1750.0, "end": 1751.3600000000001, "text": " Oh, the batch size.", "tokens": [50364, 420, 436, 393, 659, 21541, 1169, 729, 34852, 13, 50556, 50556, 407, 3195, 295, 11733, 456, 382, 731, 13, 50674, 50674, 5264, 1168, 11, 577, 360, 291, 1888, 264, 15245, 2744, 30, 50846, 50846, 440, 1151, 30, 50904, 50904, 440, 15245, 2744, 13, 50978, 50978, 876, 11, 264, 15245, 2744, 13, 51046, 51046, 663, 311, 9540, 538, 428, 8837, 13, 51124, 51124, 407, 498, 291, 362, 257, 18407, 11, 5101, 337, 23551, 20004, 9590, 11, 51428, 51428, 428, 15245, 2744, 576, 312, 4992, 1296, 3165, 293, 12145, 51566, 51566, 420, 746, 411, 300, 13, 51614, 51614, 1171, 4356, 9590, 11, 291, 1062, 362, 281, 15245, 544, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1524962685324929, "compression_ratio": 1.6072874493927125, "no_speech_prob": 2.6681846065912396e-05}, {"id": 627, "seek": 173772, "start": 1751.3600000000001, "end": 1752.92, "text": " That's determined by your hardware.", "tokens": [50364, 420, 436, 393, 659, 21541, 1169, 729, 34852, 13, 50556, 50556, 407, 3195, 295, 11733, 456, 382, 731, 13, 50674, 50674, 5264, 1168, 11, 577, 360, 291, 1888, 264, 15245, 2744, 30, 50846, 50846, 440, 1151, 30, 50904, 50904, 440, 15245, 2744, 13, 50978, 50978, 876, 11, 264, 15245, 2744, 13, 51046, 51046, 663, 311, 9540, 538, 428, 8837, 13, 51124, 51124, 407, 498, 291, 362, 257, 18407, 11, 5101, 337, 23551, 20004, 9590, 11, 51428, 51428, 428, 15245, 2744, 576, 312, 4992, 1296, 3165, 293, 12145, 51566, 51566, 420, 746, 411, 300, 13, 51614, 51614, 1171, 4356, 9590, 11, 291, 1062, 362, 281, 15245, 544, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1524962685324929, "compression_ratio": 1.6072874493927125, "no_speech_prob": 2.6681846065912396e-05}, {"id": 628, "seek": 173772, "start": 1752.92, "end": 1759.0, "text": " So if you have a GPU, generally for reasonably sized networks,", "tokens": [50364, 420, 436, 393, 659, 21541, 1169, 729, 34852, 13, 50556, 50556, 407, 3195, 295, 11733, 456, 382, 731, 13, 50674, 50674, 5264, 1168, 11, 577, 360, 291, 1888, 264, 15245, 2744, 30, 50846, 50846, 440, 1151, 30, 50904, 50904, 440, 15245, 2744, 13, 50978, 50978, 876, 11, 264, 15245, 2744, 13, 51046, 51046, 663, 311, 9540, 538, 428, 8837, 13, 51124, 51124, 407, 498, 291, 362, 257, 18407, 11, 5101, 337, 23551, 20004, 9590, 11, 51428, 51428, 428, 15245, 2744, 576, 312, 4992, 1296, 3165, 293, 12145, 51566, 51566, 420, 746, 411, 300, 13, 51614, 51614, 1171, 4356, 9590, 11, 291, 1062, 362, 281, 15245, 544, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1524962685324929, "compression_ratio": 1.6072874493927125, "no_speech_prob": 2.6681846065912396e-05}, {"id": 629, "seek": 173772, "start": 1759.0, "end": 1761.76, "text": " your batch size would be anywhere between 16 and 64", "tokens": [50364, 420, 436, 393, 659, 21541, 1169, 729, 34852, 13, 50556, 50556, 407, 3195, 295, 11733, 456, 382, 731, 13, 50674, 50674, 5264, 1168, 11, 577, 360, 291, 1888, 264, 15245, 2744, 30, 50846, 50846, 440, 1151, 30, 50904, 50904, 440, 15245, 2744, 13, 50978, 50978, 876, 11, 264, 15245, 2744, 13, 51046, 51046, 663, 311, 9540, 538, 428, 8837, 13, 51124, 51124, 407, 498, 291, 362, 257, 18407, 11, 5101, 337, 23551, 20004, 9590, 11, 51428, 51428, 428, 15245, 2744, 576, 312, 4992, 1296, 3165, 293, 12145, 51566, 51566, 420, 746, 411, 300, 13, 51614, 51614, 1171, 4356, 9590, 11, 291, 1062, 362, 281, 15245, 544, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1524962685324929, "compression_ratio": 1.6072874493927125, "no_speech_prob": 2.6681846065912396e-05}, {"id": 630, "seek": 173772, "start": 1761.76, "end": 1762.72, "text": " or something like that.", "tokens": [50364, 420, 436, 393, 659, 21541, 1169, 729, 34852, 13, 50556, 50556, 407, 3195, 295, 11733, 456, 382, 731, 13, 50674, 50674, 5264, 1168, 11, 577, 360, 291, 1888, 264, 15245, 2744, 30, 50846, 50846, 440, 1151, 30, 50904, 50904, 440, 15245, 2744, 13, 50978, 50978, 876, 11, 264, 15245, 2744, 13, 51046, 51046, 663, 311, 9540, 538, 428, 8837, 13, 51124, 51124, 407, 498, 291, 362, 257, 18407, 11, 5101, 337, 23551, 20004, 9590, 11, 51428, 51428, 428, 15245, 2744, 576, 312, 4992, 1296, 3165, 293, 12145, 51566, 51566, 420, 746, 411, 300, 13, 51614, 51614, 1171, 4356, 9590, 11, 291, 1062, 362, 281, 15245, 544, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1524962685324929, "compression_ratio": 1.6072874493927125, "no_speech_prob": 2.6681846065912396e-05}, {"id": 631, "seek": 173772, "start": 1762.72, "end": 1764.96, "text": " For smaller networks, you might have to batch more", "tokens": [50364, 420, 436, 393, 659, 21541, 1169, 729, 34852, 13, 50556, 50556, 407, 3195, 295, 11733, 456, 382, 731, 13, 50674, 50674, 5264, 1168, 11, 577, 360, 291, 1888, 264, 15245, 2744, 30, 50846, 50846, 440, 1151, 30, 50904, 50904, 440, 15245, 2744, 13, 50978, 50978, 876, 11, 264, 15245, 2744, 13, 51046, 51046, 663, 311, 9540, 538, 428, 8837, 13, 51124, 51124, 407, 498, 291, 362, 257, 18407, 11, 5101, 337, 23551, 20004, 9590, 11, 51428, 51428, 428, 15245, 2744, 576, 312, 4992, 1296, 3165, 293, 12145, 51566, 51566, 420, 746, 411, 300, 13, 51614, 51614, 1171, 4356, 9590, 11, 291, 1062, 362, 281, 15245, 544, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1524962685324929, "compression_ratio": 1.6072874493927125, "no_speech_prob": 2.6681846065912396e-05}, {"id": 632, "seek": 176496, "start": 1764.96, "end": 1770.72, "text": " to exploit your hardware better to have maximum usage of it.", "tokens": [50364, 281, 25924, 428, 8837, 1101, 281, 362, 6674, 14924, 295, 309, 13, 50652, 50652, 759, 291, 8952, 1125, 322, 3866, 18407, 82, 1951, 257, 3479, 11, 50778, 50778, 291, 815, 362, 281, 362, 11, 370, 718, 311, 584, 291, 362, 3180, 18407, 82, 11, 50940, 50940, 550, 309, 576, 312, 1649, 1413, 8858, 13, 51038, 51038, 407, 309, 311, 38882, 420, 746, 13, 51224, 51224, 400, 550, 257, 688, 295, 264, 955, 1074, 8952, 1125, 51404, 51404, 300, 670, 3866, 8379, 11, 1184, 295, 597, 575, 3180, 18407, 82, 13, 51548, 51548, 2188, 295, 552, 362, 314, 8115, 82, 11, 2035, 13, 51636, 51636, 400, 550, 291, 1062, 362, 281, 8952, 1125, 51720, 51720, 670, 5383, 295, 5110, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.15105156006851816, "compression_ratio": 1.705179282868526, "no_speech_prob": 1.8923346942756325e-05}, {"id": 633, "seek": 176496, "start": 1770.72, "end": 1773.24, "text": " If you parallelize on multiple GPUs within a machine,", "tokens": [50364, 281, 25924, 428, 8837, 1101, 281, 362, 6674, 14924, 295, 309, 13, 50652, 50652, 759, 291, 8952, 1125, 322, 3866, 18407, 82, 1951, 257, 3479, 11, 50778, 50778, 291, 815, 362, 281, 362, 11, 370, 718, 311, 584, 291, 362, 3180, 18407, 82, 11, 50940, 50940, 550, 309, 576, 312, 1649, 1413, 8858, 13, 51038, 51038, 407, 309, 311, 38882, 420, 746, 13, 51224, 51224, 400, 550, 257, 688, 295, 264, 955, 1074, 8952, 1125, 51404, 51404, 300, 670, 3866, 8379, 11, 1184, 295, 597, 575, 3180, 18407, 82, 13, 51548, 51548, 2188, 295, 552, 362, 314, 8115, 82, 11, 2035, 13, 51636, 51636, 400, 550, 291, 1062, 362, 281, 8952, 1125, 51720, 51720, 670, 5383, 295, 5110, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.15105156006851816, "compression_ratio": 1.705179282868526, "no_speech_prob": 1.8923346942756325e-05}, {"id": 634, "seek": 176496, "start": 1773.24, "end": 1776.48, "text": " you may have to have, so let's say you have eight GPUs,", "tokens": [50364, 281, 25924, 428, 8837, 1101, 281, 362, 6674, 14924, 295, 309, 13, 50652, 50652, 759, 291, 8952, 1125, 322, 3866, 18407, 82, 1951, 257, 3479, 11, 50778, 50778, 291, 815, 362, 281, 362, 11, 370, 718, 311, 584, 291, 362, 3180, 18407, 82, 11, 50940, 50940, 550, 309, 576, 312, 1649, 1413, 8858, 13, 51038, 51038, 407, 309, 311, 38882, 420, 746, 13, 51224, 51224, 400, 550, 257, 688, 295, 264, 955, 1074, 8952, 1125, 51404, 51404, 300, 670, 3866, 8379, 11, 1184, 295, 597, 575, 3180, 18407, 82, 13, 51548, 51548, 2188, 295, 552, 362, 314, 8115, 82, 11, 2035, 13, 51636, 51636, 400, 550, 291, 1062, 362, 281, 8952, 1125, 51720, 51720, 670, 5383, 295, 5110, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.15105156006851816, "compression_ratio": 1.705179282868526, "no_speech_prob": 1.8923346942756325e-05}, {"id": 635, "seek": 176496, "start": 1776.48, "end": 1778.44, "text": " then it would be 8 times 32.", "tokens": [50364, 281, 25924, 428, 8837, 1101, 281, 362, 6674, 14924, 295, 309, 13, 50652, 50652, 759, 291, 8952, 1125, 322, 3866, 18407, 82, 1951, 257, 3479, 11, 50778, 50778, 291, 815, 362, 281, 362, 11, 370, 718, 311, 584, 291, 362, 3180, 18407, 82, 11, 50940, 50940, 550, 309, 576, 312, 1649, 1413, 8858, 13, 51038, 51038, 407, 309, 311, 38882, 420, 746, 13, 51224, 51224, 400, 550, 257, 688, 295, 264, 955, 1074, 8952, 1125, 51404, 51404, 300, 670, 3866, 8379, 11, 1184, 295, 597, 575, 3180, 18407, 82, 13, 51548, 51548, 2188, 295, 552, 362, 314, 8115, 82, 11, 2035, 13, 51636, 51636, 400, 550, 291, 1062, 362, 281, 8952, 1125, 51720, 51720, 670, 5383, 295, 5110, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.15105156006851816, "compression_ratio": 1.705179282868526, "no_speech_prob": 1.8923346942756325e-05}, {"id": 636, "seek": 176496, "start": 1778.44, "end": 1782.16, "text": " So it's 256 or something.", "tokens": [50364, 281, 25924, 428, 8837, 1101, 281, 362, 6674, 14924, 295, 309, 13, 50652, 50652, 759, 291, 8952, 1125, 322, 3866, 18407, 82, 1951, 257, 3479, 11, 50778, 50778, 291, 815, 362, 281, 362, 11, 370, 718, 311, 584, 291, 362, 3180, 18407, 82, 11, 50940, 50940, 550, 309, 576, 312, 1649, 1413, 8858, 13, 51038, 51038, 407, 309, 311, 38882, 420, 746, 13, 51224, 51224, 400, 550, 257, 688, 295, 264, 955, 1074, 8952, 1125, 51404, 51404, 300, 670, 3866, 8379, 11, 1184, 295, 597, 575, 3180, 18407, 82, 13, 51548, 51548, 2188, 295, 552, 362, 314, 8115, 82, 11, 2035, 13, 51636, 51636, 400, 550, 291, 1062, 362, 281, 8952, 1125, 51720, 51720, 670, 5383, 295, 5110, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.15105156006851816, "compression_ratio": 1.705179282868526, "no_speech_prob": 1.8923346942756325e-05}, {"id": 637, "seek": 176496, "start": 1782.16, "end": 1785.76, "text": " And then a lot of the big guys parallelize", "tokens": [50364, 281, 25924, 428, 8837, 1101, 281, 362, 6674, 14924, 295, 309, 13, 50652, 50652, 759, 291, 8952, 1125, 322, 3866, 18407, 82, 1951, 257, 3479, 11, 50778, 50778, 291, 815, 362, 281, 362, 11, 370, 718, 311, 584, 291, 362, 3180, 18407, 82, 11, 50940, 50940, 550, 309, 576, 312, 1649, 1413, 8858, 13, 51038, 51038, 407, 309, 311, 38882, 420, 746, 13, 51224, 51224, 400, 550, 257, 688, 295, 264, 955, 1074, 8952, 1125, 51404, 51404, 300, 670, 3866, 8379, 11, 1184, 295, 597, 575, 3180, 18407, 82, 13, 51548, 51548, 2188, 295, 552, 362, 314, 8115, 82, 11, 2035, 13, 51636, 51636, 400, 550, 291, 1062, 362, 281, 8952, 1125, 51720, 51720, 670, 5383, 295, 5110, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.15105156006851816, "compression_ratio": 1.705179282868526, "no_speech_prob": 1.8923346942756325e-05}, {"id": 638, "seek": 176496, "start": 1785.76, "end": 1788.64, "text": " that over multiple machines, each of which has eight GPUs.", "tokens": [50364, 281, 25924, 428, 8837, 1101, 281, 362, 6674, 14924, 295, 309, 13, 50652, 50652, 759, 291, 8952, 1125, 322, 3866, 18407, 82, 1951, 257, 3479, 11, 50778, 50778, 291, 815, 362, 281, 362, 11, 370, 718, 311, 584, 291, 362, 3180, 18407, 82, 11, 50940, 50940, 550, 309, 576, 312, 1649, 1413, 8858, 13, 51038, 51038, 407, 309, 311, 38882, 420, 746, 13, 51224, 51224, 400, 550, 257, 688, 295, 264, 955, 1074, 8952, 1125, 51404, 51404, 300, 670, 3866, 8379, 11, 1184, 295, 597, 575, 3180, 18407, 82, 13, 51548, 51548, 2188, 295, 552, 362, 314, 8115, 82, 11, 2035, 13, 51636, 51636, 400, 550, 291, 1062, 362, 281, 8952, 1125, 51720, 51720, 670, 5383, 295, 5110, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.15105156006851816, "compression_ratio": 1.705179282868526, "no_speech_prob": 1.8923346942756325e-05}, {"id": 639, "seek": 176496, "start": 1788.64, "end": 1790.4, "text": " Some of them have TPUs, whatever.", "tokens": [50364, 281, 25924, 428, 8837, 1101, 281, 362, 6674, 14924, 295, 309, 13, 50652, 50652, 759, 291, 8952, 1125, 322, 3866, 18407, 82, 1951, 257, 3479, 11, 50778, 50778, 291, 815, 362, 281, 362, 11, 370, 718, 311, 584, 291, 362, 3180, 18407, 82, 11, 50940, 50940, 550, 309, 576, 312, 1649, 1413, 8858, 13, 51038, 51038, 407, 309, 311, 38882, 420, 746, 13, 51224, 51224, 400, 550, 257, 688, 295, 264, 955, 1074, 8952, 1125, 51404, 51404, 300, 670, 3866, 8379, 11, 1184, 295, 597, 575, 3180, 18407, 82, 13, 51548, 51548, 2188, 295, 552, 362, 314, 8115, 82, 11, 2035, 13, 51636, 51636, 400, 550, 291, 1062, 362, 281, 8952, 1125, 51720, 51720, 670, 5383, 295, 5110, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.15105156006851816, "compression_ratio": 1.705179282868526, "no_speech_prob": 1.8923346942756325e-05}, {"id": 640, "seek": 176496, "start": 1790.4, "end": 1792.08, "text": " And then you might have to parallelize", "tokens": [50364, 281, 25924, 428, 8837, 1101, 281, 362, 6674, 14924, 295, 309, 13, 50652, 50652, 759, 291, 8952, 1125, 322, 3866, 18407, 82, 1951, 257, 3479, 11, 50778, 50778, 291, 815, 362, 281, 362, 11, 370, 718, 311, 584, 291, 362, 3180, 18407, 82, 11, 50940, 50940, 550, 309, 576, 312, 1649, 1413, 8858, 13, 51038, 51038, 407, 309, 311, 38882, 420, 746, 13, 51224, 51224, 400, 550, 257, 688, 295, 264, 955, 1074, 8952, 1125, 51404, 51404, 300, 670, 3866, 8379, 11, 1184, 295, 597, 575, 3180, 18407, 82, 13, 51548, 51548, 2188, 295, 552, 362, 314, 8115, 82, 11, 2035, 13, 51636, 51636, 400, 550, 291, 1062, 362, 281, 8952, 1125, 51720, 51720, 670, 5383, 295, 5110, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.15105156006851816, "compression_ratio": 1.705179282868526, "no_speech_prob": 1.8923346942756325e-05}, {"id": 641, "seek": 176496, "start": 1792.08, "end": 1793.3600000000001, "text": " over thousands of examples.", "tokens": [50364, 281, 25924, 428, 8837, 1101, 281, 362, 6674, 14924, 295, 309, 13, 50652, 50652, 759, 291, 8952, 1125, 322, 3866, 18407, 82, 1951, 257, 3479, 11, 50778, 50778, 291, 815, 362, 281, 362, 11, 370, 718, 311, 584, 291, 362, 3180, 18407, 82, 11, 50940, 50940, 550, 309, 576, 312, 1649, 1413, 8858, 13, 51038, 51038, 407, 309, 311, 38882, 420, 746, 13, 51224, 51224, 400, 550, 257, 688, 295, 264, 955, 1074, 8952, 1125, 51404, 51404, 300, 670, 3866, 8379, 11, 1184, 295, 597, 575, 3180, 18407, 82, 13, 51548, 51548, 2188, 295, 552, 362, 314, 8115, 82, 11, 2035, 13, 51636, 51636, 400, 550, 291, 1062, 362, 281, 8952, 1125, 51720, 51720, 670, 5383, 295, 5110, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.15105156006851816, "compression_ratio": 1.705179282868526, "no_speech_prob": 1.8923346942756325e-05}, {"id": 642, "seek": 179336, "start": 1793.36, "end": 1795.6399999999999, "text": " This diminishing return in doing this,", "tokens": [50364, 639, 15739, 3807, 2736, 294, 884, 341, 11, 50478, 50478, 562, 291, 3488, 264, 2744, 295, 264, 15245, 11, 50570, 50570, 291, 767, 5407, 264, 3073, 295, 32181, 13, 50780, 50780, 509, 21341, 264, 17108, 11, 457, 291, 50868, 50868, 5407, 264, 3073, 295, 32181, 13, 50934, 50934, 407, 412, 512, 935, 11, 309, 311, 406, 3163, 5662, 428, 15245, 2744, 13, 51152, 51152, 407, 498, 321, 366, 884, 257, 21538, 1154, 51256, 51256, 365, 350, 5359, 11, 437, 311, 516, 281, 312, 527, 352, 12, 1353, 15245, 2744, 30, 51574, 51574, 407, 456, 366, 10577, 300, 584, 498, 428, 15245, 2744, 307, 10591, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14115716792919017, "compression_ratio": 1.8008474576271187, "no_speech_prob": 1.3419249626167584e-05}, {"id": 643, "seek": 179336, "start": 1795.6399999999999, "end": 1797.4799999999998, "text": " when you increase the size of the batch,", "tokens": [50364, 639, 15739, 3807, 2736, 294, 884, 341, 11, 50478, 50478, 562, 291, 3488, 264, 2744, 295, 264, 15245, 11, 50570, 50570, 291, 767, 5407, 264, 3073, 295, 32181, 13, 50780, 50780, 509, 21341, 264, 17108, 11, 457, 291, 50868, 50868, 5407, 264, 3073, 295, 32181, 13, 50934, 50934, 407, 412, 512, 935, 11, 309, 311, 406, 3163, 5662, 428, 15245, 2744, 13, 51152, 51152, 407, 498, 321, 366, 884, 257, 21538, 1154, 51256, 51256, 365, 350, 5359, 11, 437, 311, 516, 281, 312, 527, 352, 12, 1353, 15245, 2744, 30, 51574, 51574, 407, 456, 366, 10577, 300, 584, 498, 428, 15245, 2744, 307, 10591, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14115716792919017, "compression_ratio": 1.8008474576271187, "no_speech_prob": 1.3419249626167584e-05}, {"id": 644, "seek": 179336, "start": 1797.4799999999998, "end": 1801.6799999999998, "text": " you actually reduce the speed of convergence.", "tokens": [50364, 639, 15739, 3807, 2736, 294, 884, 341, 11, 50478, 50478, 562, 291, 3488, 264, 2744, 295, 264, 15245, 11, 50570, 50570, 291, 767, 5407, 264, 3073, 295, 32181, 13, 50780, 50780, 509, 21341, 264, 17108, 11, 457, 291, 50868, 50868, 5407, 264, 3073, 295, 32181, 13, 50934, 50934, 407, 412, 512, 935, 11, 309, 311, 406, 3163, 5662, 428, 15245, 2744, 13, 51152, 51152, 407, 498, 321, 366, 884, 257, 21538, 1154, 51256, 51256, 365, 350, 5359, 11, 437, 311, 516, 281, 312, 527, 352, 12, 1353, 15245, 2744, 30, 51574, 51574, 407, 456, 366, 10577, 300, 584, 498, 428, 15245, 2744, 307, 10591, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14115716792919017, "compression_ratio": 1.8008474576271187, "no_speech_prob": 1.3419249626167584e-05}, {"id": 645, "seek": 179336, "start": 1801.6799999999998, "end": 1803.4399999999998, "text": " You accelerate the calculation, but you", "tokens": [50364, 639, 15739, 3807, 2736, 294, 884, 341, 11, 50478, 50478, 562, 291, 3488, 264, 2744, 295, 264, 15245, 11, 50570, 50570, 291, 767, 5407, 264, 3073, 295, 32181, 13, 50780, 50780, 509, 21341, 264, 17108, 11, 457, 291, 50868, 50868, 5407, 264, 3073, 295, 32181, 13, 50934, 50934, 407, 412, 512, 935, 11, 309, 311, 406, 3163, 5662, 428, 15245, 2744, 13, 51152, 51152, 407, 498, 321, 366, 884, 257, 21538, 1154, 51256, 51256, 365, 350, 5359, 11, 437, 311, 516, 281, 312, 527, 352, 12, 1353, 15245, 2744, 30, 51574, 51574, 407, 456, 366, 10577, 300, 584, 498, 428, 15245, 2744, 307, 10591, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14115716792919017, "compression_ratio": 1.8008474576271187, "no_speech_prob": 1.3419249626167584e-05}, {"id": 646, "seek": 179336, "start": 1803.4399999999998, "end": 1804.76, "text": " reduce the speed of convergence.", "tokens": [50364, 639, 15739, 3807, 2736, 294, 884, 341, 11, 50478, 50478, 562, 291, 3488, 264, 2744, 295, 264, 15245, 11, 50570, 50570, 291, 767, 5407, 264, 3073, 295, 32181, 13, 50780, 50780, 509, 21341, 264, 17108, 11, 457, 291, 50868, 50868, 5407, 264, 3073, 295, 32181, 13, 50934, 50934, 407, 412, 512, 935, 11, 309, 311, 406, 3163, 5662, 428, 15245, 2744, 13, 51152, 51152, 407, 498, 321, 366, 884, 257, 21538, 1154, 51256, 51256, 365, 350, 5359, 11, 437, 311, 516, 281, 312, 527, 352, 12, 1353, 15245, 2744, 30, 51574, 51574, 407, 456, 366, 10577, 300, 584, 498, 428, 15245, 2744, 307, 10591, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14115716792919017, "compression_ratio": 1.8008474576271187, "no_speech_prob": 1.3419249626167584e-05}, {"id": 647, "seek": 179336, "start": 1804.76, "end": 1809.12, "text": " So at some point, it's not worth increasing your batch size.", "tokens": [50364, 639, 15739, 3807, 2736, 294, 884, 341, 11, 50478, 50478, 562, 291, 3488, 264, 2744, 295, 264, 15245, 11, 50570, 50570, 291, 767, 5407, 264, 3073, 295, 32181, 13, 50780, 50780, 509, 21341, 264, 17108, 11, 457, 291, 50868, 50868, 5407, 264, 3073, 295, 32181, 13, 50934, 50934, 407, 412, 512, 935, 11, 309, 311, 406, 3163, 5662, 428, 15245, 2744, 13, 51152, 51152, 407, 498, 321, 366, 884, 257, 21538, 1154, 51256, 51256, 365, 350, 5359, 11, 437, 311, 516, 281, 312, 527, 352, 12, 1353, 15245, 2744, 30, 51574, 51574, 407, 456, 366, 10577, 300, 584, 498, 428, 15245, 2744, 307, 10591, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14115716792919017, "compression_ratio": 1.8008474576271187, "no_speech_prob": 1.3419249626167584e-05}, {"id": 648, "seek": 179336, "start": 1809.12, "end": 1811.1999999999998, "text": " So if we are doing a classification problem", "tokens": [50364, 639, 15739, 3807, 2736, 294, 884, 341, 11, 50478, 50478, 562, 291, 3488, 264, 2744, 295, 264, 15245, 11, 50570, 50570, 291, 767, 5407, 264, 3073, 295, 32181, 13, 50780, 50780, 509, 21341, 264, 17108, 11, 457, 291, 50868, 50868, 5407, 264, 3073, 295, 32181, 13, 50934, 50934, 407, 412, 512, 935, 11, 309, 311, 406, 3163, 5662, 428, 15245, 2744, 13, 51152, 51152, 407, 498, 321, 366, 884, 257, 21538, 1154, 51256, 51256, 365, 350, 5359, 11, 437, 311, 516, 281, 312, 527, 352, 12, 1353, 15245, 2744, 30, 51574, 51574, 407, 456, 366, 10577, 300, 584, 498, 428, 15245, 2744, 307, 10591, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14115716792919017, "compression_ratio": 1.8008474576271187, "no_speech_prob": 1.3419249626167584e-05}, {"id": 649, "seek": 179336, "start": 1811.1999999999998, "end": 1817.56, "text": " with k classes, what's going to be our go-to batch size?", "tokens": [50364, 639, 15739, 3807, 2736, 294, 884, 341, 11, 50478, 50478, 562, 291, 3488, 264, 2744, 295, 264, 15245, 11, 50570, 50570, 291, 767, 5407, 264, 3073, 295, 32181, 13, 50780, 50780, 509, 21341, 264, 17108, 11, 457, 291, 50868, 50868, 5407, 264, 3073, 295, 32181, 13, 50934, 50934, 407, 412, 512, 935, 11, 309, 311, 406, 3163, 5662, 428, 15245, 2744, 13, 51152, 51152, 407, 498, 321, 366, 884, 257, 21538, 1154, 51256, 51256, 365, 350, 5359, 11, 437, 311, 516, 281, 312, 527, 352, 12, 1353, 15245, 2744, 30, 51574, 51574, 407, 456, 366, 10577, 300, 584, 498, 428, 15245, 2744, 307, 10591, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14115716792919017, "compression_ratio": 1.8008474576271187, "no_speech_prob": 1.3419249626167584e-05}, {"id": 650, "seek": 179336, "start": 1817.56, "end": 1821.3999999999999, "text": " So there are papers that say if your batch size is significantly", "tokens": [50364, 639, 15739, 3807, 2736, 294, 884, 341, 11, 50478, 50478, 562, 291, 3488, 264, 2744, 295, 264, 15245, 11, 50570, 50570, 291, 767, 5407, 264, 3073, 295, 32181, 13, 50780, 50780, 509, 21341, 264, 17108, 11, 457, 291, 50868, 50868, 5407, 264, 3073, 295, 32181, 13, 50934, 50934, 407, 412, 512, 935, 11, 309, 311, 406, 3163, 5662, 428, 15245, 2744, 13, 51152, 51152, 407, 498, 321, 366, 884, 257, 21538, 1154, 51256, 51256, 365, 350, 5359, 11, 437, 311, 516, 281, 312, 527, 352, 12, 1353, 15245, 2744, 30, 51574, 51574, 407, 456, 366, 10577, 300, 584, 498, 428, 15245, 2744, 307, 10591, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14115716792919017, "compression_ratio": 1.8008474576271187, "no_speech_prob": 1.3419249626167584e-05}, {"id": 651, "seek": 182140, "start": 1821.4, "end": 1823.96, "text": " larger than the number of categories,", "tokens": [50364, 4833, 813, 264, 1230, 295, 10479, 11, 50492, 50492, 420, 718, 311, 584, 6091, 264, 1230, 295, 10479, 11, 50572, 50572, 550, 291, 434, 1391, 20457, 6211, 11, 4476, 11, 50828, 50828, 516, 760, 32181, 13, 50926, 50926, 407, 291, 434, 1382, 281, 3847, 364, 3256, 3068, 6545, 322, 29903, 31890, 13, 51070, 51070, 759, 428, 15245, 2744, 307, 4833, 813, 466, 502, 11, 1360, 11, 51230, 51230, 291, 434, 1391, 20457, 565, 13, 51344, 51344, 2264, 11, 300, 311, 309, 13, 51398, 51398, 2561, 13, 51454, 51454, 286, 914, 11, 291, 434, 20457, 6211, 13, 51542, 51542, 509, 434, 406, 20457, 565, 13, 51590, 51590, 2264, 11, 2264, 13, 51668, 51668, 2264, 11, 370, 718, 311, 751, 466, 5164, 18161, 36170, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.20373927138921782, "compression_ratio": 1.8403361344537814, "no_speech_prob": 5.862611487827962e-06}, {"id": 652, "seek": 182140, "start": 1823.96, "end": 1825.5600000000002, "text": " or let's say twice the number of categories,", "tokens": [50364, 4833, 813, 264, 1230, 295, 10479, 11, 50492, 50492, 420, 718, 311, 584, 6091, 264, 1230, 295, 10479, 11, 50572, 50572, 550, 291, 434, 1391, 20457, 6211, 11, 4476, 11, 50828, 50828, 516, 760, 32181, 13, 50926, 50926, 407, 291, 434, 1382, 281, 3847, 364, 3256, 3068, 6545, 322, 29903, 31890, 13, 51070, 51070, 759, 428, 15245, 2744, 307, 4833, 813, 466, 502, 11, 1360, 11, 51230, 51230, 291, 434, 1391, 20457, 565, 13, 51344, 51344, 2264, 11, 300, 311, 309, 13, 51398, 51398, 2561, 13, 51454, 51454, 286, 914, 11, 291, 434, 20457, 6211, 13, 51542, 51542, 509, 434, 406, 20457, 565, 13, 51590, 51590, 2264, 11, 2264, 13, 51668, 51668, 2264, 11, 370, 718, 311, 751, 466, 5164, 18161, 36170, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.20373927138921782, "compression_ratio": 1.8403361344537814, "no_speech_prob": 5.862611487827962e-06}, {"id": 653, "seek": 182140, "start": 1825.5600000000002, "end": 1830.68, "text": " then you're probably wasting competition, essentially,", "tokens": [50364, 4833, 813, 264, 1230, 295, 10479, 11, 50492, 50492, 420, 718, 311, 584, 6091, 264, 1230, 295, 10479, 11, 50572, 50572, 550, 291, 434, 1391, 20457, 6211, 11, 4476, 11, 50828, 50828, 516, 760, 32181, 13, 50926, 50926, 407, 291, 434, 1382, 281, 3847, 364, 3256, 3068, 6545, 322, 29903, 31890, 13, 51070, 51070, 759, 428, 15245, 2744, 307, 4833, 813, 466, 502, 11, 1360, 11, 51230, 51230, 291, 434, 1391, 20457, 565, 13, 51344, 51344, 2264, 11, 300, 311, 309, 13, 51398, 51398, 2561, 13, 51454, 51454, 286, 914, 11, 291, 434, 20457, 6211, 13, 51542, 51542, 509, 434, 406, 20457, 565, 13, 51590, 51590, 2264, 11, 2264, 13, 51668, 51668, 2264, 11, 370, 718, 311, 751, 466, 5164, 18161, 36170, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.20373927138921782, "compression_ratio": 1.8403361344537814, "no_speech_prob": 5.862611487827962e-06}, {"id": 654, "seek": 182140, "start": 1830.68, "end": 1832.64, "text": " going down convergence.", "tokens": [50364, 4833, 813, 264, 1230, 295, 10479, 11, 50492, 50492, 420, 718, 311, 584, 6091, 264, 1230, 295, 10479, 11, 50572, 50572, 550, 291, 434, 1391, 20457, 6211, 11, 4476, 11, 50828, 50828, 516, 760, 32181, 13, 50926, 50926, 407, 291, 434, 1382, 281, 3847, 364, 3256, 3068, 6545, 322, 29903, 31890, 13, 51070, 51070, 759, 428, 15245, 2744, 307, 4833, 813, 466, 502, 11, 1360, 11, 51230, 51230, 291, 434, 1391, 20457, 565, 13, 51344, 51344, 2264, 11, 300, 311, 309, 13, 51398, 51398, 2561, 13, 51454, 51454, 286, 914, 11, 291, 434, 20457, 6211, 13, 51542, 51542, 509, 434, 406, 20457, 565, 13, 51590, 51590, 2264, 11, 2264, 13, 51668, 51668, 2264, 11, 370, 718, 311, 751, 466, 5164, 18161, 36170, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.20373927138921782, "compression_ratio": 1.8403361344537814, "no_speech_prob": 5.862611487827962e-06}, {"id": 655, "seek": 182140, "start": 1832.64, "end": 1835.52, "text": " So you're trying to train an image recognizer on ImageNet.", "tokens": [50364, 4833, 813, 264, 1230, 295, 10479, 11, 50492, 50492, 420, 718, 311, 584, 6091, 264, 1230, 295, 10479, 11, 50572, 50572, 550, 291, 434, 1391, 20457, 6211, 11, 4476, 11, 50828, 50828, 516, 760, 32181, 13, 50926, 50926, 407, 291, 434, 1382, 281, 3847, 364, 3256, 3068, 6545, 322, 29903, 31890, 13, 51070, 51070, 759, 428, 15245, 2744, 307, 4833, 813, 466, 502, 11, 1360, 11, 51230, 51230, 291, 434, 1391, 20457, 565, 13, 51344, 51344, 2264, 11, 300, 311, 309, 13, 51398, 51398, 2561, 13, 51454, 51454, 286, 914, 11, 291, 434, 20457, 6211, 13, 51542, 51542, 509, 434, 406, 20457, 565, 13, 51590, 51590, 2264, 11, 2264, 13, 51668, 51668, 2264, 11, 370, 718, 311, 751, 466, 5164, 18161, 36170, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.20373927138921782, "compression_ratio": 1.8403361344537814, "no_speech_prob": 5.862611487827962e-06}, {"id": 656, "seek": 182140, "start": 1835.52, "end": 1838.72, "text": " If your batch size is larger than about 1,000,", "tokens": [50364, 4833, 813, 264, 1230, 295, 10479, 11, 50492, 50492, 420, 718, 311, 584, 6091, 264, 1230, 295, 10479, 11, 50572, 50572, 550, 291, 434, 1391, 20457, 6211, 11, 4476, 11, 50828, 50828, 516, 760, 32181, 13, 50926, 50926, 407, 291, 434, 1382, 281, 3847, 364, 3256, 3068, 6545, 322, 29903, 31890, 13, 51070, 51070, 759, 428, 15245, 2744, 307, 4833, 813, 466, 502, 11, 1360, 11, 51230, 51230, 291, 434, 1391, 20457, 565, 13, 51344, 51344, 2264, 11, 300, 311, 309, 13, 51398, 51398, 2561, 13, 51454, 51454, 286, 914, 11, 291, 434, 20457, 6211, 13, 51542, 51542, 509, 434, 406, 20457, 565, 13, 51590, 51590, 2264, 11, 2264, 13, 51668, 51668, 2264, 11, 370, 718, 311, 751, 466, 5164, 18161, 36170, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.20373927138921782, "compression_ratio": 1.8403361344537814, "no_speech_prob": 5.862611487827962e-06}, {"id": 657, "seek": 182140, "start": 1838.72, "end": 1841.0, "text": " you're probably wasting time.", "tokens": [50364, 4833, 813, 264, 1230, 295, 10479, 11, 50492, 50492, 420, 718, 311, 584, 6091, 264, 1230, 295, 10479, 11, 50572, 50572, 550, 291, 434, 1391, 20457, 6211, 11, 4476, 11, 50828, 50828, 516, 760, 32181, 13, 50926, 50926, 407, 291, 434, 1382, 281, 3847, 364, 3256, 3068, 6545, 322, 29903, 31890, 13, 51070, 51070, 759, 428, 15245, 2744, 307, 4833, 813, 466, 502, 11, 1360, 11, 51230, 51230, 291, 434, 1391, 20457, 565, 13, 51344, 51344, 2264, 11, 300, 311, 309, 13, 51398, 51398, 2561, 13, 51454, 51454, 286, 914, 11, 291, 434, 20457, 6211, 13, 51542, 51542, 509, 434, 406, 20457, 565, 13, 51590, 51590, 2264, 11, 2264, 13, 51668, 51668, 2264, 11, 370, 718, 311, 751, 466, 5164, 18161, 36170, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.20373927138921782, "compression_ratio": 1.8403361344537814, "no_speech_prob": 5.862611487827962e-06}, {"id": 658, "seek": 182140, "start": 1841.0, "end": 1842.0800000000002, "text": " OK, that's it.", "tokens": [50364, 4833, 813, 264, 1230, 295, 10479, 11, 50492, 50492, 420, 718, 311, 584, 6091, 264, 1230, 295, 10479, 11, 50572, 50572, 550, 291, 434, 1391, 20457, 6211, 11, 4476, 11, 50828, 50828, 516, 760, 32181, 13, 50926, 50926, 407, 291, 434, 1382, 281, 3847, 364, 3256, 3068, 6545, 322, 29903, 31890, 13, 51070, 51070, 759, 428, 15245, 2744, 307, 4833, 813, 466, 502, 11, 1360, 11, 51230, 51230, 291, 434, 1391, 20457, 565, 13, 51344, 51344, 2264, 11, 300, 311, 309, 13, 51398, 51398, 2561, 13, 51454, 51454, 286, 914, 11, 291, 434, 20457, 6211, 13, 51542, 51542, 509, 434, 406, 20457, 565, 13, 51590, 51590, 2264, 11, 2264, 13, 51668, 51668, 2264, 11, 370, 718, 311, 751, 466, 5164, 18161, 36170, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.20373927138921782, "compression_ratio": 1.8403361344537814, "no_speech_prob": 5.862611487827962e-06}, {"id": 659, "seek": 182140, "start": 1842.0800000000002, "end": 1843.2, "text": " Thanks.", "tokens": [50364, 4833, 813, 264, 1230, 295, 10479, 11, 50492, 50492, 420, 718, 311, 584, 6091, 264, 1230, 295, 10479, 11, 50572, 50572, 550, 291, 434, 1391, 20457, 6211, 11, 4476, 11, 50828, 50828, 516, 760, 32181, 13, 50926, 50926, 407, 291, 434, 1382, 281, 3847, 364, 3256, 3068, 6545, 322, 29903, 31890, 13, 51070, 51070, 759, 428, 15245, 2744, 307, 4833, 813, 466, 502, 11, 1360, 11, 51230, 51230, 291, 434, 1391, 20457, 565, 13, 51344, 51344, 2264, 11, 300, 311, 309, 13, 51398, 51398, 2561, 13, 51454, 51454, 286, 914, 11, 291, 434, 20457, 6211, 13, 51542, 51542, 509, 434, 406, 20457, 565, 13, 51590, 51590, 2264, 11, 2264, 13, 51668, 51668, 2264, 11, 370, 718, 311, 751, 466, 5164, 18161, 36170, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.20373927138921782, "compression_ratio": 1.8403361344537814, "no_speech_prob": 5.862611487827962e-06}, {"id": 660, "seek": 182140, "start": 1843.2, "end": 1844.96, "text": " I mean, you're wasting competition.", "tokens": [50364, 4833, 813, 264, 1230, 295, 10479, 11, 50492, 50492, 420, 718, 311, 584, 6091, 264, 1230, 295, 10479, 11, 50572, 50572, 550, 291, 434, 1391, 20457, 6211, 11, 4476, 11, 50828, 50828, 516, 760, 32181, 13, 50926, 50926, 407, 291, 434, 1382, 281, 3847, 364, 3256, 3068, 6545, 322, 29903, 31890, 13, 51070, 51070, 759, 428, 15245, 2744, 307, 4833, 813, 466, 502, 11, 1360, 11, 51230, 51230, 291, 434, 1391, 20457, 565, 13, 51344, 51344, 2264, 11, 300, 311, 309, 13, 51398, 51398, 2561, 13, 51454, 51454, 286, 914, 11, 291, 434, 20457, 6211, 13, 51542, 51542, 509, 434, 406, 20457, 565, 13, 51590, 51590, 2264, 11, 2264, 13, 51668, 51668, 2264, 11, 370, 718, 311, 751, 466, 5164, 18161, 36170, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.20373927138921782, "compression_ratio": 1.8403361344537814, "no_speech_prob": 5.862611487827962e-06}, {"id": 661, "seek": 182140, "start": 1844.96, "end": 1845.92, "text": " You're not wasting time.", "tokens": [50364, 4833, 813, 264, 1230, 295, 10479, 11, 50492, 50492, 420, 718, 311, 584, 6091, 264, 1230, 295, 10479, 11, 50572, 50572, 550, 291, 434, 1391, 20457, 6211, 11, 4476, 11, 50828, 50828, 516, 760, 32181, 13, 50926, 50926, 407, 291, 434, 1382, 281, 3847, 364, 3256, 3068, 6545, 322, 29903, 31890, 13, 51070, 51070, 759, 428, 15245, 2744, 307, 4833, 813, 466, 502, 11, 1360, 11, 51230, 51230, 291, 434, 1391, 20457, 565, 13, 51344, 51344, 2264, 11, 300, 311, 309, 13, 51398, 51398, 2561, 13, 51454, 51454, 286, 914, 11, 291, 434, 20457, 6211, 13, 51542, 51542, 509, 434, 406, 20457, 565, 13, 51590, 51590, 2264, 11, 2264, 13, 51668, 51668, 2264, 11, 370, 718, 311, 751, 466, 5164, 18161, 36170, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.20373927138921782, "compression_ratio": 1.8403361344537814, "no_speech_prob": 5.862611487827962e-06}, {"id": 662, "seek": 182140, "start": 1845.92, "end": 1847.48, "text": " OK, OK.", "tokens": [50364, 4833, 813, 264, 1230, 295, 10479, 11, 50492, 50492, 420, 718, 311, 584, 6091, 264, 1230, 295, 10479, 11, 50572, 50572, 550, 291, 434, 1391, 20457, 6211, 11, 4476, 11, 50828, 50828, 516, 760, 32181, 13, 50926, 50926, 407, 291, 434, 1382, 281, 3847, 364, 3256, 3068, 6545, 322, 29903, 31890, 13, 51070, 51070, 759, 428, 15245, 2744, 307, 4833, 813, 466, 502, 11, 1360, 11, 51230, 51230, 291, 434, 1391, 20457, 565, 13, 51344, 51344, 2264, 11, 300, 311, 309, 13, 51398, 51398, 2561, 13, 51454, 51454, 286, 914, 11, 291, 434, 20457, 6211, 13, 51542, 51542, 509, 434, 406, 20457, 565, 13, 51590, 51590, 2264, 11, 2264, 13, 51668, 51668, 2264, 11, 370, 718, 311, 751, 466, 5164, 18161, 36170, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.20373927138921782, "compression_ratio": 1.8403361344537814, "no_speech_prob": 5.862611487827962e-06}, {"id": 663, "seek": 182140, "start": 1847.48, "end": 1849.64, "text": " OK, so let's talk about traditional neural nets.", "tokens": [50364, 4833, 813, 264, 1230, 295, 10479, 11, 50492, 50492, 420, 718, 311, 584, 6091, 264, 1230, 295, 10479, 11, 50572, 50572, 550, 291, 434, 1391, 20457, 6211, 11, 4476, 11, 50828, 50828, 516, 760, 32181, 13, 50926, 50926, 407, 291, 434, 1382, 281, 3847, 364, 3256, 3068, 6545, 322, 29903, 31890, 13, 51070, 51070, 759, 428, 15245, 2744, 307, 4833, 813, 466, 502, 11, 1360, 11, 51230, 51230, 291, 434, 1391, 20457, 565, 13, 51344, 51344, 2264, 11, 300, 311, 309, 13, 51398, 51398, 2561, 13, 51454, 51454, 286, 914, 11, 291, 434, 20457, 6211, 13, 51542, 51542, 509, 434, 406, 20457, 565, 13, 51590, 51590, 2264, 11, 2264, 13, 51668, 51668, 2264, 11, 370, 718, 311, 751, 466, 5164, 18161, 36170, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.20373927138921782, "compression_ratio": 1.8403361344537814, "no_speech_prob": 5.862611487827962e-06}, {"id": 664, "seek": 184964, "start": 1849.64, "end": 1855.0400000000002, "text": " So a traditional neural net is a model, a particular type", "tokens": [50364, 407, 257, 5164, 18161, 2533, 307, 257, 2316, 11, 257, 1729, 2010, 50634, 50634, 295, 13075, 1602, 2445, 11, 597, 307, 50766, 50766, 3094, 538, 41376, 8213, 293, 2107, 28263, 7705, 13, 50958, 50958, 1779, 11, 370, 510, 307, 257, 47740, 295, 257, 5164, 18161, 2533, 510, 11, 51102, 51102, 294, 341, 1389, 365, 732, 7914, 13, 51160, 51160, 583, 286, 478, 406, 27798, 456, 1062, 312, 544, 7914, 510, 13, 51370, 51370, 407, 291, 362, 257, 3840, 295, 15743, 510, 322, 264, 1411, 13, 51474, 51474, 6947, 4846, 307, 17207, 538, 257, 3364, 11, 819, 17443, 11, 51732, 51732, 26742, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.18010736861318913, "compression_ratio": 1.6872427983539096, "no_speech_prob": 3.1874074011284392e-06}, {"id": 665, "seek": 184964, "start": 1855.0400000000002, "end": 1857.68, "text": " of parameterized function, which is", "tokens": [50364, 407, 257, 5164, 18161, 2533, 307, 257, 2316, 11, 257, 1729, 2010, 50634, 50634, 295, 13075, 1602, 2445, 11, 597, 307, 50766, 50766, 3094, 538, 41376, 8213, 293, 2107, 28263, 7705, 13, 50958, 50958, 1779, 11, 370, 510, 307, 257, 47740, 295, 257, 5164, 18161, 2533, 510, 11, 51102, 51102, 294, 341, 1389, 365, 732, 7914, 13, 51160, 51160, 583, 286, 478, 406, 27798, 456, 1062, 312, 544, 7914, 510, 13, 51370, 51370, 407, 291, 362, 257, 3840, 295, 15743, 510, 322, 264, 1411, 13, 51474, 51474, 6947, 4846, 307, 17207, 538, 257, 3364, 11, 819, 17443, 11, 51732, 51732, 26742, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.18010736861318913, "compression_ratio": 1.6872427983539096, "no_speech_prob": 3.1874074011284392e-06}, {"id": 666, "seek": 184964, "start": 1857.68, "end": 1861.5200000000002, "text": " built by stacking linear and nonlinear operations.", "tokens": [50364, 407, 257, 5164, 18161, 2533, 307, 257, 2316, 11, 257, 1729, 2010, 50634, 50634, 295, 13075, 1602, 2445, 11, 597, 307, 50766, 50766, 3094, 538, 41376, 8213, 293, 2107, 28263, 7705, 13, 50958, 50958, 1779, 11, 370, 510, 307, 257, 47740, 295, 257, 5164, 18161, 2533, 510, 11, 51102, 51102, 294, 341, 1389, 365, 732, 7914, 13, 51160, 51160, 583, 286, 478, 406, 27798, 456, 1062, 312, 544, 7914, 510, 13, 51370, 51370, 407, 291, 362, 257, 3840, 295, 15743, 510, 322, 264, 1411, 13, 51474, 51474, 6947, 4846, 307, 17207, 538, 257, 3364, 11, 819, 17443, 11, 51732, 51732, 26742, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.18010736861318913, "compression_ratio": 1.6872427983539096, "no_speech_prob": 3.1874074011284392e-06}, {"id": 667, "seek": 184964, "start": 1861.5200000000002, "end": 1864.4, "text": " Right, so here is a depiction of a traditional neural net here,", "tokens": [50364, 407, 257, 5164, 18161, 2533, 307, 257, 2316, 11, 257, 1729, 2010, 50634, 50634, 295, 13075, 1602, 2445, 11, 597, 307, 50766, 50766, 3094, 538, 41376, 8213, 293, 2107, 28263, 7705, 13, 50958, 50958, 1779, 11, 370, 510, 307, 257, 47740, 295, 257, 5164, 18161, 2533, 510, 11, 51102, 51102, 294, 341, 1389, 365, 732, 7914, 13, 51160, 51160, 583, 286, 478, 406, 27798, 456, 1062, 312, 544, 7914, 510, 13, 51370, 51370, 407, 291, 362, 257, 3840, 295, 15743, 510, 322, 264, 1411, 13, 51474, 51474, 6947, 4846, 307, 17207, 538, 257, 3364, 11, 819, 17443, 11, 51732, 51732, 26742, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.18010736861318913, "compression_ratio": 1.6872427983539096, "no_speech_prob": 3.1874074011284392e-06}, {"id": 668, "seek": 184964, "start": 1864.4, "end": 1865.5600000000002, "text": " in this case with two layers.", "tokens": [50364, 407, 257, 5164, 18161, 2533, 307, 257, 2316, 11, 257, 1729, 2010, 50634, 50634, 295, 13075, 1602, 2445, 11, 597, 307, 50766, 50766, 3094, 538, 41376, 8213, 293, 2107, 28263, 7705, 13, 50958, 50958, 1779, 11, 370, 510, 307, 257, 47740, 295, 257, 5164, 18161, 2533, 510, 11, 51102, 51102, 294, 341, 1389, 365, 732, 7914, 13, 51160, 51160, 583, 286, 478, 406, 27798, 456, 1062, 312, 544, 7914, 510, 13, 51370, 51370, 407, 291, 362, 257, 3840, 295, 15743, 510, 322, 264, 1411, 13, 51474, 51474, 6947, 4846, 307, 17207, 538, 257, 3364, 11, 819, 17443, 11, 51732, 51732, 26742, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.18010736861318913, "compression_ratio": 1.6872427983539096, "no_speech_prob": 3.1874074011284392e-06}, {"id": 669, "seek": 184964, "start": 1865.5600000000002, "end": 1869.76, "text": " But I'm not imagining there might be more layers here.", "tokens": [50364, 407, 257, 5164, 18161, 2533, 307, 257, 2316, 11, 257, 1729, 2010, 50634, 50634, 295, 13075, 1602, 2445, 11, 597, 307, 50766, 50766, 3094, 538, 41376, 8213, 293, 2107, 28263, 7705, 13, 50958, 50958, 1779, 11, 370, 510, 307, 257, 47740, 295, 257, 5164, 18161, 2533, 510, 11, 51102, 51102, 294, 341, 1389, 365, 732, 7914, 13, 51160, 51160, 583, 286, 478, 406, 27798, 456, 1062, 312, 544, 7914, 510, 13, 51370, 51370, 407, 291, 362, 257, 3840, 295, 15743, 510, 322, 264, 1411, 13, 51474, 51474, 6947, 4846, 307, 17207, 538, 257, 3364, 11, 819, 17443, 11, 51732, 51732, 26742, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.18010736861318913, "compression_ratio": 1.6872427983539096, "no_speech_prob": 3.1874074011284392e-06}, {"id": 670, "seek": 184964, "start": 1869.76, "end": 1871.8400000000001, "text": " So you have a bunch of inputs here on the left.", "tokens": [50364, 407, 257, 5164, 18161, 2533, 307, 257, 2316, 11, 257, 1729, 2010, 50634, 50634, 295, 13075, 1602, 2445, 11, 597, 307, 50766, 50766, 3094, 538, 41376, 8213, 293, 2107, 28263, 7705, 13, 50958, 50958, 1779, 11, 370, 510, 307, 257, 47740, 295, 257, 5164, 18161, 2533, 510, 11, 51102, 51102, 294, 341, 1389, 365, 732, 7914, 13, 51160, 51160, 583, 286, 478, 406, 27798, 456, 1062, 312, 544, 7914, 510, 13, 51370, 51370, 407, 291, 362, 257, 3840, 295, 15743, 510, 322, 264, 1411, 13, 51474, 51474, 6947, 4846, 307, 17207, 538, 257, 3364, 11, 819, 17443, 11, 51732, 51732, 26742, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.18010736861318913, "compression_ratio": 1.6872427983539096, "no_speech_prob": 3.1874074011284392e-06}, {"id": 671, "seek": 184964, "start": 1871.8400000000001, "end": 1877.0, "text": " Each input is multiplied by a weight, different weights,", "tokens": [50364, 407, 257, 5164, 18161, 2533, 307, 257, 2316, 11, 257, 1729, 2010, 50634, 50634, 295, 13075, 1602, 2445, 11, 597, 307, 50766, 50766, 3094, 538, 41376, 8213, 293, 2107, 28263, 7705, 13, 50958, 50958, 1779, 11, 370, 510, 307, 257, 47740, 295, 257, 5164, 18161, 2533, 510, 11, 51102, 51102, 294, 341, 1389, 365, 732, 7914, 13, 51160, 51160, 583, 286, 478, 406, 27798, 456, 1062, 312, 544, 7914, 510, 13, 51370, 51370, 407, 291, 362, 257, 3840, 295, 15743, 510, 322, 264, 1411, 13, 51474, 51474, 6947, 4846, 307, 17207, 538, 257, 3364, 11, 819, 17443, 11, 51732, 51732, 26742, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.18010736861318913, "compression_ratio": 1.6872427983539096, "no_speech_prob": 3.1874074011284392e-06}, {"id": 672, "seek": 184964, "start": 1877.0, "end": 1878.0, "text": " presumably.", "tokens": [50364, 407, 257, 5164, 18161, 2533, 307, 257, 2316, 11, 257, 1729, 2010, 50634, 50634, 295, 13075, 1602, 2445, 11, 597, 307, 50766, 50766, 3094, 538, 41376, 8213, 293, 2107, 28263, 7705, 13, 50958, 50958, 1779, 11, 370, 510, 307, 257, 47740, 295, 257, 5164, 18161, 2533, 510, 11, 51102, 51102, 294, 341, 1389, 365, 732, 7914, 13, 51160, 51160, 583, 286, 478, 406, 27798, 456, 1062, 312, 544, 7914, 510, 13, 51370, 51370, 407, 291, 362, 257, 3840, 295, 15743, 510, 322, 264, 1411, 13, 51474, 51474, 6947, 4846, 307, 17207, 538, 257, 3364, 11, 819, 17443, 11, 51732, 51732, 26742, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.18010736861318913, "compression_ratio": 1.6872427983539096, "no_speech_prob": 3.1874074011284392e-06}, {"id": 673, "seek": 187800, "start": 1878.0, "end": 1881.68, "text": " And the weighted sum of those inputs by those weights", "tokens": [50364, 400, 264, 32807, 2408, 295, 729, 15743, 538, 729, 17443, 50548, 50548, 307, 40610, 510, 538, 437, 311, 1219, 257, 4985, 420, 257, 34090, 13, 50782, 50782, 3432, 500, 380, 411, 1228, 264, 1349, 34090, 294, 300, 4319, 50918, 50918, 570, 456, 366, 6252, 26335, 5245, 295, 22027, 51068, 51068, 294, 264, 3567, 13, 51102, 51102, 583, 300, 311, 264, 10249, 11, 534, 13, 51264, 51264, 2264, 11, 370, 472, 295, 729, 6815, 445, 715, 1819, 257, 32807, 2408, 51418, 51418, 295, 1080, 15743, 1228, 729, 17443, 13, 51542, 51542, 639, 4985, 715, 1819, 257, 819, 32807, 2408, 51678, 51678, 295, 264, 912, 15743, 365, 819, 17443, 11, 51772, 51772, 293, 1030, 11458, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.11259967189724163, "compression_ratio": 1.852, "no_speech_prob": 1.112471909436863e-05}, {"id": 674, "seek": 187800, "start": 1881.68, "end": 1886.36, "text": " is computed here by what's called a unit or a neuron.", "tokens": [50364, 400, 264, 32807, 2408, 295, 729, 15743, 538, 729, 17443, 50548, 50548, 307, 40610, 510, 538, 437, 311, 1219, 257, 4985, 420, 257, 34090, 13, 50782, 50782, 3432, 500, 380, 411, 1228, 264, 1349, 34090, 294, 300, 4319, 50918, 50918, 570, 456, 366, 6252, 26335, 5245, 295, 22027, 51068, 51068, 294, 264, 3567, 13, 51102, 51102, 583, 300, 311, 264, 10249, 11, 534, 13, 51264, 51264, 2264, 11, 370, 472, 295, 729, 6815, 445, 715, 1819, 257, 32807, 2408, 51418, 51418, 295, 1080, 15743, 1228, 729, 17443, 13, 51542, 51542, 639, 4985, 715, 1819, 257, 819, 32807, 2408, 51678, 51678, 295, 264, 912, 15743, 365, 819, 17443, 11, 51772, 51772, 293, 1030, 11458, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.11259967189724163, "compression_ratio": 1.852, "no_speech_prob": 1.112471909436863e-05}, {"id": 675, "seek": 187800, "start": 1886.36, "end": 1889.08, "text": " People don't like using the word neuron in that context", "tokens": [50364, 400, 264, 32807, 2408, 295, 729, 15743, 538, 729, 17443, 50548, 50548, 307, 40610, 510, 538, 437, 311, 1219, 257, 4985, 420, 257, 34090, 13, 50782, 50782, 3432, 500, 380, 411, 1228, 264, 1349, 34090, 294, 300, 4319, 50918, 50918, 570, 456, 366, 6252, 26335, 5245, 295, 22027, 51068, 51068, 294, 264, 3567, 13, 51102, 51102, 583, 300, 311, 264, 10249, 11, 534, 13, 51264, 51264, 2264, 11, 370, 472, 295, 729, 6815, 445, 715, 1819, 257, 32807, 2408, 51418, 51418, 295, 1080, 15743, 1228, 729, 17443, 13, 51542, 51542, 639, 4985, 715, 1819, 257, 819, 32807, 2408, 51678, 51678, 295, 264, 912, 15743, 365, 819, 17443, 11, 51772, 51772, 293, 1030, 11458, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.11259967189724163, "compression_ratio": 1.852, "no_speech_prob": 1.112471909436863e-05}, {"id": 676, "seek": 187800, "start": 1889.08, "end": 1892.08, "text": " because there are incredibly simplified models of neurons", "tokens": [50364, 400, 264, 32807, 2408, 295, 729, 15743, 538, 729, 17443, 50548, 50548, 307, 40610, 510, 538, 437, 311, 1219, 257, 4985, 420, 257, 34090, 13, 50782, 50782, 3432, 500, 380, 411, 1228, 264, 1349, 34090, 294, 300, 4319, 50918, 50918, 570, 456, 366, 6252, 26335, 5245, 295, 22027, 51068, 51068, 294, 264, 3567, 13, 51102, 51102, 583, 300, 311, 264, 10249, 11, 534, 13, 51264, 51264, 2264, 11, 370, 472, 295, 729, 6815, 445, 715, 1819, 257, 32807, 2408, 51418, 51418, 295, 1080, 15743, 1228, 729, 17443, 13, 51542, 51542, 639, 4985, 715, 1819, 257, 819, 32807, 2408, 51678, 51678, 295, 264, 912, 15743, 365, 819, 17443, 11, 51772, 51772, 293, 1030, 11458, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.11259967189724163, "compression_ratio": 1.852, "no_speech_prob": 1.112471909436863e-05}, {"id": 677, "seek": 187800, "start": 1892.08, "end": 1892.76, "text": " in the brain.", "tokens": [50364, 400, 264, 32807, 2408, 295, 729, 15743, 538, 729, 17443, 50548, 50548, 307, 40610, 510, 538, 437, 311, 1219, 257, 4985, 420, 257, 34090, 13, 50782, 50782, 3432, 500, 380, 411, 1228, 264, 1349, 34090, 294, 300, 4319, 50918, 50918, 570, 456, 366, 6252, 26335, 5245, 295, 22027, 51068, 51068, 294, 264, 3567, 13, 51102, 51102, 583, 300, 311, 264, 10249, 11, 534, 13, 51264, 51264, 2264, 11, 370, 472, 295, 729, 6815, 445, 715, 1819, 257, 32807, 2408, 51418, 51418, 295, 1080, 15743, 1228, 729, 17443, 13, 51542, 51542, 639, 4985, 715, 1819, 257, 819, 32807, 2408, 51678, 51678, 295, 264, 912, 15743, 365, 819, 17443, 11, 51772, 51772, 293, 1030, 11458, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.11259967189724163, "compression_ratio": 1.852, "no_speech_prob": 1.112471909436863e-05}, {"id": 678, "seek": 187800, "start": 1892.76, "end": 1896.0, "text": " But that's the inspiration, really.", "tokens": [50364, 400, 264, 32807, 2408, 295, 729, 15743, 538, 729, 17443, 50548, 50548, 307, 40610, 510, 538, 437, 311, 1219, 257, 4985, 420, 257, 34090, 13, 50782, 50782, 3432, 500, 380, 411, 1228, 264, 1349, 34090, 294, 300, 4319, 50918, 50918, 570, 456, 366, 6252, 26335, 5245, 295, 22027, 51068, 51068, 294, 264, 3567, 13, 51102, 51102, 583, 300, 311, 264, 10249, 11, 534, 13, 51264, 51264, 2264, 11, 370, 472, 295, 729, 6815, 445, 715, 1819, 257, 32807, 2408, 51418, 51418, 295, 1080, 15743, 1228, 729, 17443, 13, 51542, 51542, 639, 4985, 715, 1819, 257, 819, 32807, 2408, 51678, 51678, 295, 264, 912, 15743, 365, 819, 17443, 11, 51772, 51772, 293, 1030, 11458, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.11259967189724163, "compression_ratio": 1.852, "no_speech_prob": 1.112471909436863e-05}, {"id": 679, "seek": 187800, "start": 1896.0, "end": 1899.08, "text": " OK, so one of those units just computes a weighted sum", "tokens": [50364, 400, 264, 32807, 2408, 295, 729, 15743, 538, 729, 17443, 50548, 50548, 307, 40610, 510, 538, 437, 311, 1219, 257, 4985, 420, 257, 34090, 13, 50782, 50782, 3432, 500, 380, 411, 1228, 264, 1349, 34090, 294, 300, 4319, 50918, 50918, 570, 456, 366, 6252, 26335, 5245, 295, 22027, 51068, 51068, 294, 264, 3567, 13, 51102, 51102, 583, 300, 311, 264, 10249, 11, 534, 13, 51264, 51264, 2264, 11, 370, 472, 295, 729, 6815, 445, 715, 1819, 257, 32807, 2408, 51418, 51418, 295, 1080, 15743, 1228, 729, 17443, 13, 51542, 51542, 639, 4985, 715, 1819, 257, 819, 32807, 2408, 51678, 51678, 295, 264, 912, 15743, 365, 819, 17443, 11, 51772, 51772, 293, 1030, 11458, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.11259967189724163, "compression_ratio": 1.852, "no_speech_prob": 1.112471909436863e-05}, {"id": 680, "seek": 187800, "start": 1899.08, "end": 1901.56, "text": " of its inputs using those weights.", "tokens": [50364, 400, 264, 32807, 2408, 295, 729, 15743, 538, 729, 17443, 50548, 50548, 307, 40610, 510, 538, 437, 311, 1219, 257, 4985, 420, 257, 34090, 13, 50782, 50782, 3432, 500, 380, 411, 1228, 264, 1349, 34090, 294, 300, 4319, 50918, 50918, 570, 456, 366, 6252, 26335, 5245, 295, 22027, 51068, 51068, 294, 264, 3567, 13, 51102, 51102, 583, 300, 311, 264, 10249, 11, 534, 13, 51264, 51264, 2264, 11, 370, 472, 295, 729, 6815, 445, 715, 1819, 257, 32807, 2408, 51418, 51418, 295, 1080, 15743, 1228, 729, 17443, 13, 51542, 51542, 639, 4985, 715, 1819, 257, 819, 32807, 2408, 51678, 51678, 295, 264, 912, 15743, 365, 819, 17443, 11, 51772, 51772, 293, 1030, 11458, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.11259967189724163, "compression_ratio": 1.852, "no_speech_prob": 1.112471909436863e-05}, {"id": 681, "seek": 187800, "start": 1901.56, "end": 1904.28, "text": " This unit computes a different weighted sum", "tokens": [50364, 400, 264, 32807, 2408, 295, 729, 15743, 538, 729, 17443, 50548, 50548, 307, 40610, 510, 538, 437, 311, 1219, 257, 4985, 420, 257, 34090, 13, 50782, 50782, 3432, 500, 380, 411, 1228, 264, 1349, 34090, 294, 300, 4319, 50918, 50918, 570, 456, 366, 6252, 26335, 5245, 295, 22027, 51068, 51068, 294, 264, 3567, 13, 51102, 51102, 583, 300, 311, 264, 10249, 11, 534, 13, 51264, 51264, 2264, 11, 370, 472, 295, 729, 6815, 445, 715, 1819, 257, 32807, 2408, 51418, 51418, 295, 1080, 15743, 1228, 729, 17443, 13, 51542, 51542, 639, 4985, 715, 1819, 257, 819, 32807, 2408, 51678, 51678, 295, 264, 912, 15743, 365, 819, 17443, 11, 51772, 51772, 293, 1030, 11458, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.11259967189724163, "compression_ratio": 1.852, "no_speech_prob": 1.112471909436863e-05}, {"id": 682, "seek": 187800, "start": 1904.28, "end": 1906.16, "text": " of the same inputs with different weights,", "tokens": [50364, 400, 264, 32807, 2408, 295, 729, 15743, 538, 729, 17443, 50548, 50548, 307, 40610, 510, 538, 437, 311, 1219, 257, 4985, 420, 257, 34090, 13, 50782, 50782, 3432, 500, 380, 411, 1228, 264, 1349, 34090, 294, 300, 4319, 50918, 50918, 570, 456, 366, 6252, 26335, 5245, 295, 22027, 51068, 51068, 294, 264, 3567, 13, 51102, 51102, 583, 300, 311, 264, 10249, 11, 534, 13, 51264, 51264, 2264, 11, 370, 472, 295, 729, 6815, 445, 715, 1819, 257, 32807, 2408, 51418, 51418, 295, 1080, 15743, 1228, 729, 17443, 13, 51542, 51542, 639, 4985, 715, 1819, 257, 819, 32807, 2408, 51678, 51678, 295, 264, 912, 15743, 365, 819, 17443, 11, 51772, 51772, 293, 1030, 11458, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.11259967189724163, "compression_ratio": 1.852, "no_speech_prob": 1.112471909436863e-05}, {"id": 683, "seek": 187800, "start": 1906.16, "end": 1906.96, "text": " and et cetera.", "tokens": [50364, 400, 264, 32807, 2408, 295, 729, 15743, 538, 729, 17443, 50548, 50548, 307, 40610, 510, 538, 437, 311, 1219, 257, 4985, 420, 257, 34090, 13, 50782, 50782, 3432, 500, 380, 411, 1228, 264, 1349, 34090, 294, 300, 4319, 50918, 50918, 570, 456, 366, 6252, 26335, 5245, 295, 22027, 51068, 51068, 294, 264, 3567, 13, 51102, 51102, 583, 300, 311, 264, 10249, 11, 534, 13, 51264, 51264, 2264, 11, 370, 472, 295, 729, 6815, 445, 715, 1819, 257, 32807, 2408, 51418, 51418, 295, 1080, 15743, 1228, 729, 17443, 13, 51542, 51542, 639, 4985, 715, 1819, 257, 819, 32807, 2408, 51678, 51678, 295, 264, 912, 15743, 365, 819, 17443, 11, 51772, 51772, 293, 1030, 11458, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.11259967189724163, "compression_ratio": 1.852, "no_speech_prob": 1.112471909436863e-05}, {"id": 684, "seek": 190696, "start": 1906.96, "end": 1909.3600000000001, "text": " So here we have three units here in the first layer.", "tokens": [50364, 407, 510, 321, 362, 1045, 6815, 510, 294, 264, 700, 4583, 13, 50484, 50484, 639, 307, 1219, 257, 7633, 4583, 11, 538, 264, 636, 11, 50590, 50590, 570, 309, 311, 9662, 364, 4846, 6051, 364, 5598, 13, 50682, 50682, 639, 307, 264, 4846, 11, 293, 341, 307, 264, 5598, 11, 50760, 50760, 293, 341, 307, 4079, 294, 264, 2808, 13, 50832, 50832, 407, 321, 14722, 729, 32807, 34499, 11, 50940, 50940, 293, 550, 321, 1320, 729, 32807, 34499, 16652, 51042, 51042, 807, 257, 2107, 28263, 2445, 13, 51160, 51160, 407, 510, 437, 286, 600, 4898, 307, 264, 1300, 43, 52, 2445, 13, 51286, 51286, 407, 341, 307, 1219, 11048, 2587, 8213, 4985, 13, 51400, 51536, 639, 307, 264, 1315, 300, 561, 362, 2212, 309, 51654, 51654, 294, 264, 18161, 2533, 287, 18459, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.15690115768543994, "compression_ratio": 1.9215686274509804, "no_speech_prob": 1.2409869668772444e-05}, {"id": 685, "seek": 190696, "start": 1909.3600000000001, "end": 1911.48, "text": " This is called a hidden layer, by the way,", "tokens": [50364, 407, 510, 321, 362, 1045, 6815, 510, 294, 264, 700, 4583, 13, 50484, 50484, 639, 307, 1219, 257, 7633, 4583, 11, 538, 264, 636, 11, 50590, 50590, 570, 309, 311, 9662, 364, 4846, 6051, 364, 5598, 13, 50682, 50682, 639, 307, 264, 4846, 11, 293, 341, 307, 264, 5598, 11, 50760, 50760, 293, 341, 307, 4079, 294, 264, 2808, 13, 50832, 50832, 407, 321, 14722, 729, 32807, 34499, 11, 50940, 50940, 293, 550, 321, 1320, 729, 32807, 34499, 16652, 51042, 51042, 807, 257, 2107, 28263, 2445, 13, 51160, 51160, 407, 510, 437, 286, 600, 4898, 307, 264, 1300, 43, 52, 2445, 13, 51286, 51286, 407, 341, 307, 1219, 11048, 2587, 8213, 4985, 13, 51400, 51536, 639, 307, 264, 1315, 300, 561, 362, 2212, 309, 51654, 51654, 294, 264, 18161, 2533, 287, 18459, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.15690115768543994, "compression_ratio": 1.9215686274509804, "no_speech_prob": 1.2409869668772444e-05}, {"id": 686, "seek": 190696, "start": 1911.48, "end": 1913.32, "text": " because it's neither an input nor an output.", "tokens": [50364, 407, 510, 321, 362, 1045, 6815, 510, 294, 264, 700, 4583, 13, 50484, 50484, 639, 307, 1219, 257, 7633, 4583, 11, 538, 264, 636, 11, 50590, 50590, 570, 309, 311, 9662, 364, 4846, 6051, 364, 5598, 13, 50682, 50682, 639, 307, 264, 4846, 11, 293, 341, 307, 264, 5598, 11, 50760, 50760, 293, 341, 307, 4079, 294, 264, 2808, 13, 50832, 50832, 407, 321, 14722, 729, 32807, 34499, 11, 50940, 50940, 293, 550, 321, 1320, 729, 32807, 34499, 16652, 51042, 51042, 807, 257, 2107, 28263, 2445, 13, 51160, 51160, 407, 510, 437, 286, 600, 4898, 307, 264, 1300, 43, 52, 2445, 13, 51286, 51286, 407, 341, 307, 1219, 11048, 2587, 8213, 4985, 13, 51400, 51536, 639, 307, 264, 1315, 300, 561, 362, 2212, 309, 51654, 51654, 294, 264, 18161, 2533, 287, 18459, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.15690115768543994, "compression_ratio": 1.9215686274509804, "no_speech_prob": 1.2409869668772444e-05}, {"id": 687, "seek": 190696, "start": 1913.32, "end": 1914.88, "text": " This is the input, and this is the output,", "tokens": [50364, 407, 510, 321, 362, 1045, 6815, 510, 294, 264, 700, 4583, 13, 50484, 50484, 639, 307, 1219, 257, 7633, 4583, 11, 538, 264, 636, 11, 50590, 50590, 570, 309, 311, 9662, 364, 4846, 6051, 364, 5598, 13, 50682, 50682, 639, 307, 264, 4846, 11, 293, 341, 307, 264, 5598, 11, 50760, 50760, 293, 341, 307, 4079, 294, 264, 2808, 13, 50832, 50832, 407, 321, 14722, 729, 32807, 34499, 11, 50940, 50940, 293, 550, 321, 1320, 729, 32807, 34499, 16652, 51042, 51042, 807, 257, 2107, 28263, 2445, 13, 51160, 51160, 407, 510, 437, 286, 600, 4898, 307, 264, 1300, 43, 52, 2445, 13, 51286, 51286, 407, 341, 307, 1219, 11048, 2587, 8213, 4985, 13, 51400, 51536, 639, 307, 264, 1315, 300, 561, 362, 2212, 309, 51654, 51654, 294, 264, 18161, 2533, 287, 18459, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.15690115768543994, "compression_ratio": 1.9215686274509804, "no_speech_prob": 1.2409869668772444e-05}, {"id": 688, "seek": 190696, "start": 1914.88, "end": 1916.32, "text": " and this is somewhere in the middle.", "tokens": [50364, 407, 510, 321, 362, 1045, 6815, 510, 294, 264, 700, 4583, 13, 50484, 50484, 639, 307, 1219, 257, 7633, 4583, 11, 538, 264, 636, 11, 50590, 50590, 570, 309, 311, 9662, 364, 4846, 6051, 364, 5598, 13, 50682, 50682, 639, 307, 264, 4846, 11, 293, 341, 307, 264, 5598, 11, 50760, 50760, 293, 341, 307, 4079, 294, 264, 2808, 13, 50832, 50832, 407, 321, 14722, 729, 32807, 34499, 11, 50940, 50940, 293, 550, 321, 1320, 729, 32807, 34499, 16652, 51042, 51042, 807, 257, 2107, 28263, 2445, 13, 51160, 51160, 407, 510, 437, 286, 600, 4898, 307, 264, 1300, 43, 52, 2445, 13, 51286, 51286, 407, 341, 307, 1219, 11048, 2587, 8213, 4985, 13, 51400, 51536, 639, 307, 264, 1315, 300, 561, 362, 2212, 309, 51654, 51654, 294, 264, 18161, 2533, 287, 18459, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.15690115768543994, "compression_ratio": 1.9215686274509804, "no_speech_prob": 1.2409869668772444e-05}, {"id": 689, "seek": 190696, "start": 1916.32, "end": 1918.48, "text": " So we compute those weighted sums,", "tokens": [50364, 407, 510, 321, 362, 1045, 6815, 510, 294, 264, 700, 4583, 13, 50484, 50484, 639, 307, 1219, 257, 7633, 4583, 11, 538, 264, 636, 11, 50590, 50590, 570, 309, 311, 9662, 364, 4846, 6051, 364, 5598, 13, 50682, 50682, 639, 307, 264, 4846, 11, 293, 341, 307, 264, 5598, 11, 50760, 50760, 293, 341, 307, 4079, 294, 264, 2808, 13, 50832, 50832, 407, 321, 14722, 729, 32807, 34499, 11, 50940, 50940, 293, 550, 321, 1320, 729, 32807, 34499, 16652, 51042, 51042, 807, 257, 2107, 28263, 2445, 13, 51160, 51160, 407, 510, 437, 286, 600, 4898, 307, 264, 1300, 43, 52, 2445, 13, 51286, 51286, 407, 341, 307, 1219, 11048, 2587, 8213, 4985, 13, 51400, 51536, 639, 307, 264, 1315, 300, 561, 362, 2212, 309, 51654, 51654, 294, 264, 18161, 2533, 287, 18459, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.15690115768543994, "compression_ratio": 1.9215686274509804, "no_speech_prob": 1.2409869668772444e-05}, {"id": 690, "seek": 190696, "start": 1918.48, "end": 1920.52, "text": " and then we pass those weighted sums individually", "tokens": [50364, 407, 510, 321, 362, 1045, 6815, 510, 294, 264, 700, 4583, 13, 50484, 50484, 639, 307, 1219, 257, 7633, 4583, 11, 538, 264, 636, 11, 50590, 50590, 570, 309, 311, 9662, 364, 4846, 6051, 364, 5598, 13, 50682, 50682, 639, 307, 264, 4846, 11, 293, 341, 307, 264, 5598, 11, 50760, 50760, 293, 341, 307, 4079, 294, 264, 2808, 13, 50832, 50832, 407, 321, 14722, 729, 32807, 34499, 11, 50940, 50940, 293, 550, 321, 1320, 729, 32807, 34499, 16652, 51042, 51042, 807, 257, 2107, 28263, 2445, 13, 51160, 51160, 407, 510, 437, 286, 600, 4898, 307, 264, 1300, 43, 52, 2445, 13, 51286, 51286, 407, 341, 307, 1219, 11048, 2587, 8213, 4985, 13, 51400, 51536, 639, 307, 264, 1315, 300, 561, 362, 2212, 309, 51654, 51654, 294, 264, 18161, 2533, 287, 18459, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.15690115768543994, "compression_ratio": 1.9215686274509804, "no_speech_prob": 1.2409869668772444e-05}, {"id": 691, "seek": 190696, "start": 1920.52, "end": 1922.88, "text": " through a nonlinear function.", "tokens": [50364, 407, 510, 321, 362, 1045, 6815, 510, 294, 264, 700, 4583, 13, 50484, 50484, 639, 307, 1219, 257, 7633, 4583, 11, 538, 264, 636, 11, 50590, 50590, 570, 309, 311, 9662, 364, 4846, 6051, 364, 5598, 13, 50682, 50682, 639, 307, 264, 4846, 11, 293, 341, 307, 264, 5598, 11, 50760, 50760, 293, 341, 307, 4079, 294, 264, 2808, 13, 50832, 50832, 407, 321, 14722, 729, 32807, 34499, 11, 50940, 50940, 293, 550, 321, 1320, 729, 32807, 34499, 16652, 51042, 51042, 807, 257, 2107, 28263, 2445, 13, 51160, 51160, 407, 510, 437, 286, 600, 4898, 307, 264, 1300, 43, 52, 2445, 13, 51286, 51286, 407, 341, 307, 1219, 11048, 2587, 8213, 4985, 13, 51400, 51536, 639, 307, 264, 1315, 300, 561, 362, 2212, 309, 51654, 51654, 294, 264, 18161, 2533, 287, 18459, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.15690115768543994, "compression_ratio": 1.9215686274509804, "no_speech_prob": 1.2409869668772444e-05}, {"id": 692, "seek": 190696, "start": 1922.88, "end": 1925.4, "text": " So here what I've shown is the ReLU function.", "tokens": [50364, 407, 510, 321, 362, 1045, 6815, 510, 294, 264, 700, 4583, 13, 50484, 50484, 639, 307, 1219, 257, 7633, 4583, 11, 538, 264, 636, 11, 50590, 50590, 570, 309, 311, 9662, 364, 4846, 6051, 364, 5598, 13, 50682, 50682, 639, 307, 264, 4846, 11, 293, 341, 307, 264, 5598, 11, 50760, 50760, 293, 341, 307, 4079, 294, 264, 2808, 13, 50832, 50832, 407, 321, 14722, 729, 32807, 34499, 11, 50940, 50940, 293, 550, 321, 1320, 729, 32807, 34499, 16652, 51042, 51042, 807, 257, 2107, 28263, 2445, 13, 51160, 51160, 407, 510, 437, 286, 600, 4898, 307, 264, 1300, 43, 52, 2445, 13, 51286, 51286, 407, 341, 307, 1219, 11048, 2587, 8213, 4985, 13, 51400, 51536, 639, 307, 264, 1315, 300, 561, 362, 2212, 309, 51654, 51654, 294, 264, 18161, 2533, 287, 18459, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.15690115768543994, "compression_ratio": 1.9215686274509804, "no_speech_prob": 1.2409869668772444e-05}, {"id": 693, "seek": 190696, "start": 1925.4, "end": 1927.68, "text": " So this is called rectified linear unit.", "tokens": [50364, 407, 510, 321, 362, 1045, 6815, 510, 294, 264, 700, 4583, 13, 50484, 50484, 639, 307, 1219, 257, 7633, 4583, 11, 538, 264, 636, 11, 50590, 50590, 570, 309, 311, 9662, 364, 4846, 6051, 364, 5598, 13, 50682, 50682, 639, 307, 264, 4846, 11, 293, 341, 307, 264, 5598, 11, 50760, 50760, 293, 341, 307, 4079, 294, 264, 2808, 13, 50832, 50832, 407, 321, 14722, 729, 32807, 34499, 11, 50940, 50940, 293, 550, 321, 1320, 729, 32807, 34499, 16652, 51042, 51042, 807, 257, 2107, 28263, 2445, 13, 51160, 51160, 407, 510, 437, 286, 600, 4898, 307, 264, 1300, 43, 52, 2445, 13, 51286, 51286, 407, 341, 307, 1219, 11048, 2587, 8213, 4985, 13, 51400, 51536, 639, 307, 264, 1315, 300, 561, 362, 2212, 309, 51654, 51654, 294, 264, 18161, 2533, 287, 18459, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.15690115768543994, "compression_ratio": 1.9215686274509804, "no_speech_prob": 1.2409869668772444e-05}, {"id": 694, "seek": 190696, "start": 1930.4, "end": 1932.76, "text": " This is the name that people have given it", "tokens": [50364, 407, 510, 321, 362, 1045, 6815, 510, 294, 264, 700, 4583, 13, 50484, 50484, 639, 307, 1219, 257, 7633, 4583, 11, 538, 264, 636, 11, 50590, 50590, 570, 309, 311, 9662, 364, 4846, 6051, 364, 5598, 13, 50682, 50682, 639, 307, 264, 4846, 11, 293, 341, 307, 264, 5598, 11, 50760, 50760, 293, 341, 307, 4079, 294, 264, 2808, 13, 50832, 50832, 407, 321, 14722, 729, 32807, 34499, 11, 50940, 50940, 293, 550, 321, 1320, 729, 32807, 34499, 16652, 51042, 51042, 807, 257, 2107, 28263, 2445, 13, 51160, 51160, 407, 510, 437, 286, 600, 4898, 307, 264, 1300, 43, 52, 2445, 13, 51286, 51286, 407, 341, 307, 1219, 11048, 2587, 8213, 4985, 13, 51400, 51536, 639, 307, 264, 1315, 300, 561, 362, 2212, 309, 51654, 51654, 294, 264, 18161, 2533, 287, 18459, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.15690115768543994, "compression_ratio": 1.9215686274509804, "no_speech_prob": 1.2409869668772444e-05}, {"id": 695, "seek": 190696, "start": 1932.76, "end": 1935.56, "text": " in the neural net lingo.", "tokens": [50364, 407, 510, 321, 362, 1045, 6815, 510, 294, 264, 700, 4583, 13, 50484, 50484, 639, 307, 1219, 257, 7633, 4583, 11, 538, 264, 636, 11, 50590, 50590, 570, 309, 311, 9662, 364, 4846, 6051, 364, 5598, 13, 50682, 50682, 639, 307, 264, 4846, 11, 293, 341, 307, 264, 5598, 11, 50760, 50760, 293, 341, 307, 4079, 294, 264, 2808, 13, 50832, 50832, 407, 321, 14722, 729, 32807, 34499, 11, 50940, 50940, 293, 550, 321, 1320, 729, 32807, 34499, 16652, 51042, 51042, 807, 257, 2107, 28263, 2445, 13, 51160, 51160, 407, 510, 437, 286, 600, 4898, 307, 264, 1300, 43, 52, 2445, 13, 51286, 51286, 407, 341, 307, 1219, 11048, 2587, 8213, 4985, 13, 51400, 51536, 639, 307, 264, 1315, 300, 561, 362, 2212, 309, 51654, 51654, 294, 264, 18161, 2533, 287, 18459, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.15690115768543994, "compression_ratio": 1.9215686274509804, "no_speech_prob": 1.2409869668772444e-05}, {"id": 696, "seek": 193556, "start": 1935.56, "end": 1938.1599999999999, "text": " In other contexts, this is called a half-wave rectifier", "tokens": [50364, 682, 661, 30628, 11, 341, 307, 1219, 257, 1922, 12, 35461, 11048, 9902, 50494, 50494, 498, 291, 434, 364, 11403, 13, 50612, 50612, 467, 311, 1219, 3353, 644, 498, 291, 366, 257, 48281, 13, 50808, 50808, 8537, 11, 309, 311, 257, 2445, 300, 307, 2681, 281, 264, 6575, 50972, 50972, 562, 1080, 6770, 307, 3353, 11, 293, 309, 311, 2681, 281, 1958, 51076, 51076, 498, 1080, 6770, 307, 3671, 13, 51140, 51282, 407, 588, 2199, 4295, 13, 51420, 51420, 400, 550, 321, 8630, 257, 1150, 4583, 295, 264, 912, 551, 11, 51532, 51532, 264, 1150, 3233, 13, 51578, 51578, 407, 797, 11, 257, 4583, 295, 8213, 7705, 51696, 51696, 689, 321, 14722, 32807, 34499, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13846899080677194, "compression_ratio": 1.6809338521400778, "no_speech_prob": 5.771592441305984e-06}, {"id": 697, "seek": 193556, "start": 1938.1599999999999, "end": 1940.52, "text": " if you're an engineer.", "tokens": [50364, 682, 661, 30628, 11, 341, 307, 1219, 257, 1922, 12, 35461, 11048, 9902, 50494, 50494, 498, 291, 434, 364, 11403, 13, 50612, 50612, 467, 311, 1219, 3353, 644, 498, 291, 366, 257, 48281, 13, 50808, 50808, 8537, 11, 309, 311, 257, 2445, 300, 307, 2681, 281, 264, 6575, 50972, 50972, 562, 1080, 6770, 307, 3353, 11, 293, 309, 311, 2681, 281, 1958, 51076, 51076, 498, 1080, 6770, 307, 3671, 13, 51140, 51282, 407, 588, 2199, 4295, 13, 51420, 51420, 400, 550, 321, 8630, 257, 1150, 4583, 295, 264, 912, 551, 11, 51532, 51532, 264, 1150, 3233, 13, 51578, 51578, 407, 797, 11, 257, 4583, 295, 8213, 7705, 51696, 51696, 689, 321, 14722, 32807, 34499, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13846899080677194, "compression_ratio": 1.6809338521400778, "no_speech_prob": 5.771592441305984e-06}, {"id": 698, "seek": 193556, "start": 1940.52, "end": 1944.44, "text": " It's called positive part if you are a mathematician.", "tokens": [50364, 682, 661, 30628, 11, 341, 307, 1219, 257, 1922, 12, 35461, 11048, 9902, 50494, 50494, 498, 291, 434, 364, 11403, 13, 50612, 50612, 467, 311, 1219, 3353, 644, 498, 291, 366, 257, 48281, 13, 50808, 50808, 8537, 11, 309, 311, 257, 2445, 300, 307, 2681, 281, 264, 6575, 50972, 50972, 562, 1080, 6770, 307, 3353, 11, 293, 309, 311, 2681, 281, 1958, 51076, 51076, 498, 1080, 6770, 307, 3671, 13, 51140, 51282, 407, 588, 2199, 4295, 13, 51420, 51420, 400, 550, 321, 8630, 257, 1150, 4583, 295, 264, 912, 551, 11, 51532, 51532, 264, 1150, 3233, 13, 51578, 51578, 407, 797, 11, 257, 4583, 295, 8213, 7705, 51696, 51696, 689, 321, 14722, 32807, 34499, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13846899080677194, "compression_ratio": 1.6809338521400778, "no_speech_prob": 5.771592441305984e-06}, {"id": 699, "seek": 193556, "start": 1944.44, "end": 1947.72, "text": " Basically, it's a function that is equal to the identity", "tokens": [50364, 682, 661, 30628, 11, 341, 307, 1219, 257, 1922, 12, 35461, 11048, 9902, 50494, 50494, 498, 291, 434, 364, 11403, 13, 50612, 50612, 467, 311, 1219, 3353, 644, 498, 291, 366, 257, 48281, 13, 50808, 50808, 8537, 11, 309, 311, 257, 2445, 300, 307, 2681, 281, 264, 6575, 50972, 50972, 562, 1080, 6770, 307, 3353, 11, 293, 309, 311, 2681, 281, 1958, 51076, 51076, 498, 1080, 6770, 307, 3671, 13, 51140, 51282, 407, 588, 2199, 4295, 13, 51420, 51420, 400, 550, 321, 8630, 257, 1150, 4583, 295, 264, 912, 551, 11, 51532, 51532, 264, 1150, 3233, 13, 51578, 51578, 407, 797, 11, 257, 4583, 295, 8213, 7705, 51696, 51696, 689, 321, 14722, 32807, 34499, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13846899080677194, "compression_ratio": 1.6809338521400778, "no_speech_prob": 5.771592441305984e-06}, {"id": 700, "seek": 193556, "start": 1947.72, "end": 1949.8, "text": " when its argument is positive, and it's equal to 0", "tokens": [50364, 682, 661, 30628, 11, 341, 307, 1219, 257, 1922, 12, 35461, 11048, 9902, 50494, 50494, 498, 291, 434, 364, 11403, 13, 50612, 50612, 467, 311, 1219, 3353, 644, 498, 291, 366, 257, 48281, 13, 50808, 50808, 8537, 11, 309, 311, 257, 2445, 300, 307, 2681, 281, 264, 6575, 50972, 50972, 562, 1080, 6770, 307, 3353, 11, 293, 309, 311, 2681, 281, 1958, 51076, 51076, 498, 1080, 6770, 307, 3671, 13, 51140, 51282, 407, 588, 2199, 4295, 13, 51420, 51420, 400, 550, 321, 8630, 257, 1150, 4583, 295, 264, 912, 551, 11, 51532, 51532, 264, 1150, 3233, 13, 51578, 51578, 407, 797, 11, 257, 4583, 295, 8213, 7705, 51696, 51696, 689, 321, 14722, 32807, 34499, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13846899080677194, "compression_ratio": 1.6809338521400778, "no_speech_prob": 5.771592441305984e-06}, {"id": 701, "seek": 193556, "start": 1949.8, "end": 1951.08, "text": " if its argument is negative.", "tokens": [50364, 682, 661, 30628, 11, 341, 307, 1219, 257, 1922, 12, 35461, 11048, 9902, 50494, 50494, 498, 291, 434, 364, 11403, 13, 50612, 50612, 467, 311, 1219, 3353, 644, 498, 291, 366, 257, 48281, 13, 50808, 50808, 8537, 11, 309, 311, 257, 2445, 300, 307, 2681, 281, 264, 6575, 50972, 50972, 562, 1080, 6770, 307, 3353, 11, 293, 309, 311, 2681, 281, 1958, 51076, 51076, 498, 1080, 6770, 307, 3671, 13, 51140, 51282, 407, 588, 2199, 4295, 13, 51420, 51420, 400, 550, 321, 8630, 257, 1150, 4583, 295, 264, 912, 551, 11, 51532, 51532, 264, 1150, 3233, 13, 51578, 51578, 407, 797, 11, 257, 4583, 295, 8213, 7705, 51696, 51696, 689, 321, 14722, 32807, 34499, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13846899080677194, "compression_ratio": 1.6809338521400778, "no_speech_prob": 5.771592441305984e-06}, {"id": 702, "seek": 193556, "start": 1953.9199999999998, "end": 1956.6799999999998, "text": " So very simple graph.", "tokens": [50364, 682, 661, 30628, 11, 341, 307, 1219, 257, 1922, 12, 35461, 11048, 9902, 50494, 50494, 498, 291, 434, 364, 11403, 13, 50612, 50612, 467, 311, 1219, 3353, 644, 498, 291, 366, 257, 48281, 13, 50808, 50808, 8537, 11, 309, 311, 257, 2445, 300, 307, 2681, 281, 264, 6575, 50972, 50972, 562, 1080, 6770, 307, 3353, 11, 293, 309, 311, 2681, 281, 1958, 51076, 51076, 498, 1080, 6770, 307, 3671, 13, 51140, 51282, 407, 588, 2199, 4295, 13, 51420, 51420, 400, 550, 321, 8630, 257, 1150, 4583, 295, 264, 912, 551, 11, 51532, 51532, 264, 1150, 3233, 13, 51578, 51578, 407, 797, 11, 257, 4583, 295, 8213, 7705, 51696, 51696, 689, 321, 14722, 32807, 34499, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13846899080677194, "compression_ratio": 1.6809338521400778, "no_speech_prob": 5.771592441305984e-06}, {"id": 703, "seek": 193556, "start": 1956.6799999999998, "end": 1958.9199999999998, "text": " And then we stack a second layer of the same thing,", "tokens": [50364, 682, 661, 30628, 11, 341, 307, 1219, 257, 1922, 12, 35461, 11048, 9902, 50494, 50494, 498, 291, 434, 364, 11403, 13, 50612, 50612, 467, 311, 1219, 3353, 644, 498, 291, 366, 257, 48281, 13, 50808, 50808, 8537, 11, 309, 311, 257, 2445, 300, 307, 2681, 281, 264, 6575, 50972, 50972, 562, 1080, 6770, 307, 3353, 11, 293, 309, 311, 2681, 281, 1958, 51076, 51076, 498, 1080, 6770, 307, 3671, 13, 51140, 51282, 407, 588, 2199, 4295, 13, 51420, 51420, 400, 550, 321, 8630, 257, 1150, 4583, 295, 264, 912, 551, 11, 51532, 51532, 264, 1150, 3233, 13, 51578, 51578, 407, 797, 11, 257, 4583, 295, 8213, 7705, 51696, 51696, 689, 321, 14722, 32807, 34499, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13846899080677194, "compression_ratio": 1.6809338521400778, "no_speech_prob": 5.771592441305984e-06}, {"id": 704, "seek": 193556, "start": 1958.9199999999998, "end": 1959.84, "text": " the second stage.", "tokens": [50364, 682, 661, 30628, 11, 341, 307, 1219, 257, 1922, 12, 35461, 11048, 9902, 50494, 50494, 498, 291, 434, 364, 11403, 13, 50612, 50612, 467, 311, 1219, 3353, 644, 498, 291, 366, 257, 48281, 13, 50808, 50808, 8537, 11, 309, 311, 257, 2445, 300, 307, 2681, 281, 264, 6575, 50972, 50972, 562, 1080, 6770, 307, 3353, 11, 293, 309, 311, 2681, 281, 1958, 51076, 51076, 498, 1080, 6770, 307, 3671, 13, 51140, 51282, 407, 588, 2199, 4295, 13, 51420, 51420, 400, 550, 321, 8630, 257, 1150, 4583, 295, 264, 912, 551, 11, 51532, 51532, 264, 1150, 3233, 13, 51578, 51578, 407, 797, 11, 257, 4583, 295, 8213, 7705, 51696, 51696, 689, 321, 14722, 32807, 34499, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13846899080677194, "compression_ratio": 1.6809338521400778, "no_speech_prob": 5.771592441305984e-06}, {"id": 705, "seek": 193556, "start": 1959.84, "end": 1962.2, "text": " So again, a layer of linear operations", "tokens": [50364, 682, 661, 30628, 11, 341, 307, 1219, 257, 1922, 12, 35461, 11048, 9902, 50494, 50494, 498, 291, 434, 364, 11403, 13, 50612, 50612, 467, 311, 1219, 3353, 644, 498, 291, 366, 257, 48281, 13, 50808, 50808, 8537, 11, 309, 311, 257, 2445, 300, 307, 2681, 281, 264, 6575, 50972, 50972, 562, 1080, 6770, 307, 3353, 11, 293, 309, 311, 2681, 281, 1958, 51076, 51076, 498, 1080, 6770, 307, 3671, 13, 51140, 51282, 407, 588, 2199, 4295, 13, 51420, 51420, 400, 550, 321, 8630, 257, 1150, 4583, 295, 264, 912, 551, 11, 51532, 51532, 264, 1150, 3233, 13, 51578, 51578, 407, 797, 11, 257, 4583, 295, 8213, 7705, 51696, 51696, 689, 321, 14722, 32807, 34499, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13846899080677194, "compression_ratio": 1.6809338521400778, "no_speech_prob": 5.771592441305984e-06}, {"id": 706, "seek": 193556, "start": 1962.2, "end": 1964.3999999999999, "text": " where we compute weighted sums.", "tokens": [50364, 682, 661, 30628, 11, 341, 307, 1219, 257, 1922, 12, 35461, 11048, 9902, 50494, 50494, 498, 291, 434, 364, 11403, 13, 50612, 50612, 467, 311, 1219, 3353, 644, 498, 291, 366, 257, 48281, 13, 50808, 50808, 8537, 11, 309, 311, 257, 2445, 300, 307, 2681, 281, 264, 6575, 50972, 50972, 562, 1080, 6770, 307, 3353, 11, 293, 309, 311, 2681, 281, 1958, 51076, 51076, 498, 1080, 6770, 307, 3671, 13, 51140, 51282, 407, 588, 2199, 4295, 13, 51420, 51420, 400, 550, 321, 8630, 257, 1150, 4583, 295, 264, 912, 551, 11, 51532, 51532, 264, 1150, 3233, 13, 51578, 51578, 407, 797, 11, 257, 4583, 295, 8213, 7705, 51696, 51696, 689, 321, 14722, 32807, 34499, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13846899080677194, "compression_ratio": 1.6809338521400778, "no_speech_prob": 5.771592441305984e-06}, {"id": 707, "seek": 196440, "start": 1964.4, "end": 1966.0800000000002, "text": " And then we pass the results with nonlinearities.", "tokens": [50364, 400, 550, 321, 1320, 264, 3542, 365, 2107, 28263, 1088, 13, 50448, 50448, 400, 321, 393, 8630, 867, 295, 729, 7914, 11, 50538, 50538, 293, 300, 311, 1936, 257, 5164, 11121, 17528, 50690, 50690, 7431, 5673, 18161, 2533, 13, 50808, 50808, 682, 341, 1389, 11, 4498, 4582, 13, 50870, 50870, 407, 4498, 4582, 18161, 2533, 1355, 50952, 50952, 300, 633, 4985, 294, 472, 4583, 307, 4582, 281, 633, 4985, 51172, 51172, 294, 264, 958, 4583, 13, 51222, 51222, 400, 291, 362, 341, 731, 12, 12372, 1602, 4583, 9482, 11, 51454, 51454, 498, 291, 528, 13, 51532, 51532, 6947, 295, 729, 17443, 366, 516, 281, 312, 264, 721, 300, 527, 51654, 51654, 2539, 9284, 307, 516, 281, 10864, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.17402283090059875, "compression_ratio": 1.749063670411985, "no_speech_prob": 6.643125288974261e-06}, {"id": 708, "seek": 196440, "start": 1966.0800000000002, "end": 1967.88, "text": " And we can stack many of those layers,", "tokens": [50364, 400, 550, 321, 1320, 264, 3542, 365, 2107, 28263, 1088, 13, 50448, 50448, 400, 321, 393, 8630, 867, 295, 729, 7914, 11, 50538, 50538, 293, 300, 311, 1936, 257, 5164, 11121, 17528, 50690, 50690, 7431, 5673, 18161, 2533, 13, 50808, 50808, 682, 341, 1389, 11, 4498, 4582, 13, 50870, 50870, 407, 4498, 4582, 18161, 2533, 1355, 50952, 50952, 300, 633, 4985, 294, 472, 4583, 307, 4582, 281, 633, 4985, 51172, 51172, 294, 264, 958, 4583, 13, 51222, 51222, 400, 291, 362, 341, 731, 12, 12372, 1602, 4583, 9482, 11, 51454, 51454, 498, 291, 528, 13, 51532, 51532, 6947, 295, 729, 17443, 366, 516, 281, 312, 264, 721, 300, 527, 51654, 51654, 2539, 9284, 307, 516, 281, 10864, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.17402283090059875, "compression_ratio": 1.749063670411985, "no_speech_prob": 6.643125288974261e-06}, {"id": 709, "seek": 196440, "start": 1967.88, "end": 1970.92, "text": " and that's basically a traditional plain vanilla", "tokens": [50364, 400, 550, 321, 1320, 264, 3542, 365, 2107, 28263, 1088, 13, 50448, 50448, 400, 321, 393, 8630, 867, 295, 729, 7914, 11, 50538, 50538, 293, 300, 311, 1936, 257, 5164, 11121, 17528, 50690, 50690, 7431, 5673, 18161, 2533, 13, 50808, 50808, 682, 341, 1389, 11, 4498, 4582, 13, 50870, 50870, 407, 4498, 4582, 18161, 2533, 1355, 50952, 50952, 300, 633, 4985, 294, 472, 4583, 307, 4582, 281, 633, 4985, 51172, 51172, 294, 264, 958, 4583, 13, 51222, 51222, 400, 291, 362, 341, 731, 12, 12372, 1602, 4583, 9482, 11, 51454, 51454, 498, 291, 528, 13, 51532, 51532, 6947, 295, 729, 17443, 366, 516, 281, 312, 264, 721, 300, 527, 51654, 51654, 2539, 9284, 307, 516, 281, 10864, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.17402283090059875, "compression_ratio": 1.749063670411985, "no_speech_prob": 6.643125288974261e-06}, {"id": 710, "seek": 196440, "start": 1970.92, "end": 1973.2800000000002, "text": " garden variety neural net.", "tokens": [50364, 400, 550, 321, 1320, 264, 3542, 365, 2107, 28263, 1088, 13, 50448, 50448, 400, 321, 393, 8630, 867, 295, 729, 7914, 11, 50538, 50538, 293, 300, 311, 1936, 257, 5164, 11121, 17528, 50690, 50690, 7431, 5673, 18161, 2533, 13, 50808, 50808, 682, 341, 1389, 11, 4498, 4582, 13, 50870, 50870, 407, 4498, 4582, 18161, 2533, 1355, 50952, 50952, 300, 633, 4985, 294, 472, 4583, 307, 4582, 281, 633, 4985, 51172, 51172, 294, 264, 958, 4583, 13, 51222, 51222, 400, 291, 362, 341, 731, 12, 12372, 1602, 4583, 9482, 11, 51454, 51454, 498, 291, 528, 13, 51532, 51532, 6947, 295, 729, 17443, 366, 516, 281, 312, 264, 721, 300, 527, 51654, 51654, 2539, 9284, 307, 516, 281, 10864, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.17402283090059875, "compression_ratio": 1.749063670411985, "no_speech_prob": 6.643125288974261e-06}, {"id": 711, "seek": 196440, "start": 1973.2800000000002, "end": 1974.52, "text": " In this case, fully connected.", "tokens": [50364, 400, 550, 321, 1320, 264, 3542, 365, 2107, 28263, 1088, 13, 50448, 50448, 400, 321, 393, 8630, 867, 295, 729, 7914, 11, 50538, 50538, 293, 300, 311, 1936, 257, 5164, 11121, 17528, 50690, 50690, 7431, 5673, 18161, 2533, 13, 50808, 50808, 682, 341, 1389, 11, 4498, 4582, 13, 50870, 50870, 407, 4498, 4582, 18161, 2533, 1355, 50952, 50952, 300, 633, 4985, 294, 472, 4583, 307, 4582, 281, 633, 4985, 51172, 51172, 294, 264, 958, 4583, 13, 51222, 51222, 400, 291, 362, 341, 731, 12, 12372, 1602, 4583, 9482, 11, 51454, 51454, 498, 291, 528, 13, 51532, 51532, 6947, 295, 729, 17443, 366, 516, 281, 312, 264, 721, 300, 527, 51654, 51654, 2539, 9284, 307, 516, 281, 10864, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.17402283090059875, "compression_ratio": 1.749063670411985, "no_speech_prob": 6.643125288974261e-06}, {"id": 712, "seek": 196440, "start": 1974.52, "end": 1976.16, "text": " So fully connected neural net means", "tokens": [50364, 400, 550, 321, 1320, 264, 3542, 365, 2107, 28263, 1088, 13, 50448, 50448, 400, 321, 393, 8630, 867, 295, 729, 7914, 11, 50538, 50538, 293, 300, 311, 1936, 257, 5164, 11121, 17528, 50690, 50690, 7431, 5673, 18161, 2533, 13, 50808, 50808, 682, 341, 1389, 11, 4498, 4582, 13, 50870, 50870, 407, 4498, 4582, 18161, 2533, 1355, 50952, 50952, 300, 633, 4985, 294, 472, 4583, 307, 4582, 281, 633, 4985, 51172, 51172, 294, 264, 958, 4583, 13, 51222, 51222, 400, 291, 362, 341, 731, 12, 12372, 1602, 4583, 9482, 11, 51454, 51454, 498, 291, 528, 13, 51532, 51532, 6947, 295, 729, 17443, 366, 516, 281, 312, 264, 721, 300, 527, 51654, 51654, 2539, 9284, 307, 516, 281, 10864, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.17402283090059875, "compression_ratio": 1.749063670411985, "no_speech_prob": 6.643125288974261e-06}, {"id": 713, "seek": 196440, "start": 1976.16, "end": 1980.5600000000002, "text": " that every unit in one layer is connected to every unit", "tokens": [50364, 400, 550, 321, 1320, 264, 3542, 365, 2107, 28263, 1088, 13, 50448, 50448, 400, 321, 393, 8630, 867, 295, 729, 7914, 11, 50538, 50538, 293, 300, 311, 1936, 257, 5164, 11121, 17528, 50690, 50690, 7431, 5673, 18161, 2533, 13, 50808, 50808, 682, 341, 1389, 11, 4498, 4582, 13, 50870, 50870, 407, 4498, 4582, 18161, 2533, 1355, 50952, 50952, 300, 633, 4985, 294, 472, 4583, 307, 4582, 281, 633, 4985, 51172, 51172, 294, 264, 958, 4583, 13, 51222, 51222, 400, 291, 362, 341, 731, 12, 12372, 1602, 4583, 9482, 11, 51454, 51454, 498, 291, 528, 13, 51532, 51532, 6947, 295, 729, 17443, 366, 516, 281, 312, 264, 721, 300, 527, 51654, 51654, 2539, 9284, 307, 516, 281, 10864, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.17402283090059875, "compression_ratio": 1.749063670411985, "no_speech_prob": 6.643125288974261e-06}, {"id": 714, "seek": 196440, "start": 1980.5600000000002, "end": 1981.5600000000002, "text": " in the next layer.", "tokens": [50364, 400, 550, 321, 1320, 264, 3542, 365, 2107, 28263, 1088, 13, 50448, 50448, 400, 321, 393, 8630, 867, 295, 729, 7914, 11, 50538, 50538, 293, 300, 311, 1936, 257, 5164, 11121, 17528, 50690, 50690, 7431, 5673, 18161, 2533, 13, 50808, 50808, 682, 341, 1389, 11, 4498, 4582, 13, 50870, 50870, 407, 4498, 4582, 18161, 2533, 1355, 50952, 50952, 300, 633, 4985, 294, 472, 4583, 307, 4582, 281, 633, 4985, 51172, 51172, 294, 264, 958, 4583, 13, 51222, 51222, 400, 291, 362, 341, 731, 12, 12372, 1602, 4583, 9482, 11, 51454, 51454, 498, 291, 528, 13, 51532, 51532, 6947, 295, 729, 17443, 366, 516, 281, 312, 264, 721, 300, 527, 51654, 51654, 2539, 9284, 307, 516, 281, 10864, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.17402283090059875, "compression_ratio": 1.749063670411985, "no_speech_prob": 6.643125288974261e-06}, {"id": 715, "seek": 196440, "start": 1981.5600000000002, "end": 1986.2, "text": " And you have this well-organized layer architecture,", "tokens": [50364, 400, 550, 321, 1320, 264, 3542, 365, 2107, 28263, 1088, 13, 50448, 50448, 400, 321, 393, 8630, 867, 295, 729, 7914, 11, 50538, 50538, 293, 300, 311, 1936, 257, 5164, 11121, 17528, 50690, 50690, 7431, 5673, 18161, 2533, 13, 50808, 50808, 682, 341, 1389, 11, 4498, 4582, 13, 50870, 50870, 407, 4498, 4582, 18161, 2533, 1355, 50952, 50952, 300, 633, 4985, 294, 472, 4583, 307, 4582, 281, 633, 4985, 51172, 51172, 294, 264, 958, 4583, 13, 51222, 51222, 400, 291, 362, 341, 731, 12, 12372, 1602, 4583, 9482, 11, 51454, 51454, 498, 291, 528, 13, 51532, 51532, 6947, 295, 729, 17443, 366, 516, 281, 312, 264, 721, 300, 527, 51654, 51654, 2539, 9284, 307, 516, 281, 10864, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.17402283090059875, "compression_ratio": 1.749063670411985, "no_speech_prob": 6.643125288974261e-06}, {"id": 716, "seek": 196440, "start": 1986.2, "end": 1987.76, "text": " if you want.", "tokens": [50364, 400, 550, 321, 1320, 264, 3542, 365, 2107, 28263, 1088, 13, 50448, 50448, 400, 321, 393, 8630, 867, 295, 729, 7914, 11, 50538, 50538, 293, 300, 311, 1936, 257, 5164, 11121, 17528, 50690, 50690, 7431, 5673, 18161, 2533, 13, 50808, 50808, 682, 341, 1389, 11, 4498, 4582, 13, 50870, 50870, 407, 4498, 4582, 18161, 2533, 1355, 50952, 50952, 300, 633, 4985, 294, 472, 4583, 307, 4582, 281, 633, 4985, 51172, 51172, 294, 264, 958, 4583, 13, 51222, 51222, 400, 291, 362, 341, 731, 12, 12372, 1602, 4583, 9482, 11, 51454, 51454, 498, 291, 528, 13, 51532, 51532, 6947, 295, 729, 17443, 366, 516, 281, 312, 264, 721, 300, 527, 51654, 51654, 2539, 9284, 307, 516, 281, 10864, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.17402283090059875, "compression_ratio": 1.749063670411985, "no_speech_prob": 6.643125288974261e-06}, {"id": 717, "seek": 196440, "start": 1987.76, "end": 1990.2, "text": " Each of those weights are going to be the things that our", "tokens": [50364, 400, 550, 321, 1320, 264, 3542, 365, 2107, 28263, 1088, 13, 50448, 50448, 400, 321, 393, 8630, 867, 295, 729, 7914, 11, 50538, 50538, 293, 300, 311, 1936, 257, 5164, 11121, 17528, 50690, 50690, 7431, 5673, 18161, 2533, 13, 50808, 50808, 682, 341, 1389, 11, 4498, 4582, 13, 50870, 50870, 407, 4498, 4582, 18161, 2533, 1355, 50952, 50952, 300, 633, 4985, 294, 472, 4583, 307, 4582, 281, 633, 4985, 51172, 51172, 294, 264, 958, 4583, 13, 51222, 51222, 400, 291, 362, 341, 731, 12, 12372, 1602, 4583, 9482, 11, 51454, 51454, 498, 291, 528, 13, 51532, 51532, 6947, 295, 729, 17443, 366, 516, 281, 312, 264, 721, 300, 527, 51654, 51654, 2539, 9284, 307, 516, 281, 10864, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.17402283090059875, "compression_ratio": 1.749063670411985, "no_speech_prob": 6.643125288974261e-06}, {"id": 718, "seek": 196440, "start": 1990.2, "end": 1992.48, "text": " learning algorithm is going to tune.", "tokens": [50364, 400, 550, 321, 1320, 264, 3542, 365, 2107, 28263, 1088, 13, 50448, 50448, 400, 321, 393, 8630, 867, 295, 729, 7914, 11, 50538, 50538, 293, 300, 311, 1936, 257, 5164, 11121, 17528, 50690, 50690, 7431, 5673, 18161, 2533, 13, 50808, 50808, 682, 341, 1389, 11, 4498, 4582, 13, 50870, 50870, 407, 4498, 4582, 18161, 2533, 1355, 50952, 50952, 300, 633, 4985, 294, 472, 4583, 307, 4582, 281, 633, 4985, 51172, 51172, 294, 264, 958, 4583, 13, 51222, 51222, 400, 291, 362, 341, 731, 12, 12372, 1602, 4583, 9482, 11, 51454, 51454, 498, 291, 528, 13, 51532, 51532, 6947, 295, 729, 17443, 366, 516, 281, 312, 264, 721, 300, 527, 51654, 51654, 2539, 9284, 307, 516, 281, 10864, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.17402283090059875, "compression_ratio": 1.749063670411985, "no_speech_prob": 6.643125288974261e-06}, {"id": 719, "seek": 199248, "start": 1992.48, "end": 1996.96, "text": " And the big trick, the one trick, really, of deep learning", "tokens": [50364, 400, 264, 955, 4282, 11, 264, 472, 4282, 11, 534, 11, 295, 2452, 2539, 50588, 50588, 307, 577, 321, 14722, 729, 2771, 2448, 13, 50788, 50788, 2264, 11, 370, 498, 291, 528, 281, 2464, 341, 11, 50884, 50884, 291, 393, 584, 264, 32807, 2408, 1230, 741, 13, 51042, 51042, 407, 291, 393, 976, 257, 1230, 281, 1184, 295, 264, 6815, 294, 264, 3209, 13, 51374, 51374, 407, 341, 4985, 365, 1230, 741, 293, 264, 32807, 2408, 262, 295, 741, 51580, 51580, 307, 2935, 264, 2408, 689, 361, 1709, 670, 264, 33915, 82, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12399110105848804, "compression_ratio": 1.67, "no_speech_prob": 7.5266880230628885e-06}, {"id": 720, "seek": 199248, "start": 1996.96, "end": 2000.96, "text": " is how we compute those gradients.", "tokens": [50364, 400, 264, 955, 4282, 11, 264, 472, 4282, 11, 534, 11, 295, 2452, 2539, 50588, 50588, 307, 577, 321, 14722, 729, 2771, 2448, 13, 50788, 50788, 2264, 11, 370, 498, 291, 528, 281, 2464, 341, 11, 50884, 50884, 291, 393, 584, 264, 32807, 2408, 1230, 741, 13, 51042, 51042, 407, 291, 393, 976, 257, 1230, 281, 1184, 295, 264, 6815, 294, 264, 3209, 13, 51374, 51374, 407, 341, 4985, 365, 1230, 741, 293, 264, 32807, 2408, 262, 295, 741, 51580, 51580, 307, 2935, 264, 2408, 689, 361, 1709, 670, 264, 33915, 82, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12399110105848804, "compression_ratio": 1.67, "no_speech_prob": 7.5266880230628885e-06}, {"id": 721, "seek": 199248, "start": 2000.96, "end": 2002.88, "text": " OK, so if you want to write this,", "tokens": [50364, 400, 264, 955, 4282, 11, 264, 472, 4282, 11, 534, 11, 295, 2452, 2539, 50588, 50588, 307, 577, 321, 14722, 729, 2771, 2448, 13, 50788, 50788, 2264, 11, 370, 498, 291, 528, 281, 2464, 341, 11, 50884, 50884, 291, 393, 584, 264, 32807, 2408, 1230, 741, 13, 51042, 51042, 407, 291, 393, 976, 257, 1230, 281, 1184, 295, 264, 6815, 294, 264, 3209, 13, 51374, 51374, 407, 341, 4985, 365, 1230, 741, 293, 264, 32807, 2408, 262, 295, 741, 51580, 51580, 307, 2935, 264, 2408, 689, 361, 1709, 670, 264, 33915, 82, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12399110105848804, "compression_ratio": 1.67, "no_speech_prob": 7.5266880230628885e-06}, {"id": 722, "seek": 199248, "start": 2002.88, "end": 2006.04, "text": " you can say the weighted sum number i.", "tokens": [50364, 400, 264, 955, 4282, 11, 264, 472, 4282, 11, 534, 11, 295, 2452, 2539, 50588, 50588, 307, 577, 321, 14722, 729, 2771, 2448, 13, 50788, 50788, 2264, 11, 370, 498, 291, 528, 281, 2464, 341, 11, 50884, 50884, 291, 393, 584, 264, 32807, 2408, 1230, 741, 13, 51042, 51042, 407, 291, 393, 976, 257, 1230, 281, 1184, 295, 264, 6815, 294, 264, 3209, 13, 51374, 51374, 407, 341, 4985, 365, 1230, 741, 293, 264, 32807, 2408, 262, 295, 741, 51580, 51580, 307, 2935, 264, 2408, 689, 361, 1709, 670, 264, 33915, 82, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12399110105848804, "compression_ratio": 1.67, "no_speech_prob": 7.5266880230628885e-06}, {"id": 723, "seek": 199248, "start": 2006.04, "end": 2012.68, "text": " So you can give a number to each of the units in the network.", "tokens": [50364, 400, 264, 955, 4282, 11, 264, 472, 4282, 11, 534, 11, 295, 2452, 2539, 50588, 50588, 307, 577, 321, 14722, 729, 2771, 2448, 13, 50788, 50788, 2264, 11, 370, 498, 291, 528, 281, 2464, 341, 11, 50884, 50884, 291, 393, 584, 264, 32807, 2408, 1230, 741, 13, 51042, 51042, 407, 291, 393, 976, 257, 1230, 281, 1184, 295, 264, 6815, 294, 264, 3209, 13, 51374, 51374, 407, 341, 4985, 365, 1230, 741, 293, 264, 32807, 2408, 262, 295, 741, 51580, 51580, 307, 2935, 264, 2408, 689, 361, 1709, 670, 264, 33915, 82, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12399110105848804, "compression_ratio": 1.67, "no_speech_prob": 7.5266880230628885e-06}, {"id": 724, "seek": 199248, "start": 2012.68, "end": 2016.8, "text": " So this unit with number i and the weighted sum s of i", "tokens": [50364, 400, 264, 955, 4282, 11, 264, 472, 4282, 11, 534, 11, 295, 2452, 2539, 50588, 50588, 307, 577, 321, 14722, 729, 2771, 2448, 13, 50788, 50788, 2264, 11, 370, 498, 291, 528, 281, 2464, 341, 11, 50884, 50884, 291, 393, 584, 264, 32807, 2408, 1230, 741, 13, 51042, 51042, 407, 291, 393, 976, 257, 1230, 281, 1184, 295, 264, 6815, 294, 264, 3209, 13, 51374, 51374, 407, 341, 4985, 365, 1230, 741, 293, 264, 32807, 2408, 262, 295, 741, 51580, 51580, 307, 2935, 264, 2408, 689, 361, 1709, 670, 264, 33915, 82, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12399110105848804, "compression_ratio": 1.67, "no_speech_prob": 7.5266880230628885e-06}, {"id": 725, "seek": 199248, "start": 2016.8, "end": 2021.2, "text": " is simply the sum where j goes over the upstreams,", "tokens": [50364, 400, 264, 955, 4282, 11, 264, 472, 4282, 11, 534, 11, 295, 2452, 2539, 50588, 50588, 307, 577, 321, 14722, 729, 2771, 2448, 13, 50788, 50788, 2264, 11, 370, 498, 291, 528, 281, 2464, 341, 11, 50884, 50884, 291, 393, 584, 264, 32807, 2408, 1230, 741, 13, 51042, 51042, 407, 291, 393, 976, 257, 1230, 281, 1184, 295, 264, 6815, 294, 264, 3209, 13, 51374, 51374, 407, 341, 4985, 365, 1230, 741, 293, 264, 32807, 2408, 262, 295, 741, 51580, 51580, 307, 2935, 264, 2408, 689, 361, 1709, 670, 264, 33915, 82, 11, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12399110105848804, "compression_ratio": 1.67, "no_speech_prob": 7.5266880230628885e-06}, {"id": 726, "seek": 202120, "start": 2021.2, "end": 2023.0, "text": " the set of upstream units to i, which", "tokens": [50364, 264, 992, 295, 33915, 6815, 281, 741, 11, 597, 50454, 50454, 815, 312, 439, 264, 6815, 294, 264, 3894, 4583, 420, 406, 13, 50554, 50554, 467, 727, 312, 445, 257, 25993, 13, 50726, 50726, 400, 550, 291, 14722, 264, 1674, 295, 710, 73, 11, 50868, 50868, 597, 307, 264, 5598, 295, 264, 4985, 1230, 361, 11, 1413, 24770, 11, 51124, 51124, 597, 307, 264, 3364, 300, 6123, 4985, 361, 281, 4985, 741, 13, 51382, 51382, 400, 550, 934, 300, 11, 291, 747, 341, 1511, 11, 597, 307, 264, 32807, 51508, 51508, 2408, 11, 291, 1320, 309, 807, 264, 24433, 2445, 11, 51606, 51606, 341, 1300, 43, 52, 11, 420, 2035, 309, 307, 300, 291, 764, 13, 51738, 51738, 400, 300, 2709, 291, 710, 72, 11, 597, 307, 264, 24433, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.16836190761480116, "compression_ratio": 1.854251012145749, "no_speech_prob": 3.2886000553844497e-06}, {"id": 727, "seek": 202120, "start": 2023.0, "end": 2025.0, "text": " may be all the units in the previous layer or not.", "tokens": [50364, 264, 992, 295, 33915, 6815, 281, 741, 11, 597, 50454, 50454, 815, 312, 439, 264, 6815, 294, 264, 3894, 4583, 420, 406, 13, 50554, 50554, 467, 727, 312, 445, 257, 25993, 13, 50726, 50726, 400, 550, 291, 14722, 264, 1674, 295, 710, 73, 11, 50868, 50868, 597, 307, 264, 5598, 295, 264, 4985, 1230, 361, 11, 1413, 24770, 11, 51124, 51124, 597, 307, 264, 3364, 300, 6123, 4985, 361, 281, 4985, 741, 13, 51382, 51382, 400, 550, 934, 300, 11, 291, 747, 341, 1511, 11, 597, 307, 264, 32807, 51508, 51508, 2408, 11, 291, 1320, 309, 807, 264, 24433, 2445, 11, 51606, 51606, 341, 1300, 43, 52, 11, 420, 2035, 309, 307, 300, 291, 764, 13, 51738, 51738, 400, 300, 2709, 291, 710, 72, 11, 597, 307, 264, 24433, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.16836190761480116, "compression_ratio": 1.854251012145749, "no_speech_prob": 3.2886000553844497e-06}, {"id": 728, "seek": 202120, "start": 2025.0, "end": 2028.44, "text": " It could be just a subset.", "tokens": [50364, 264, 992, 295, 33915, 6815, 281, 741, 11, 597, 50454, 50454, 815, 312, 439, 264, 6815, 294, 264, 3894, 4583, 420, 406, 13, 50554, 50554, 467, 727, 312, 445, 257, 25993, 13, 50726, 50726, 400, 550, 291, 14722, 264, 1674, 295, 710, 73, 11, 50868, 50868, 597, 307, 264, 5598, 295, 264, 4985, 1230, 361, 11, 1413, 24770, 11, 51124, 51124, 597, 307, 264, 3364, 300, 6123, 4985, 361, 281, 4985, 741, 13, 51382, 51382, 400, 550, 934, 300, 11, 291, 747, 341, 1511, 11, 597, 307, 264, 32807, 51508, 51508, 2408, 11, 291, 1320, 309, 807, 264, 24433, 2445, 11, 51606, 51606, 341, 1300, 43, 52, 11, 420, 2035, 309, 307, 300, 291, 764, 13, 51738, 51738, 400, 300, 2709, 291, 710, 72, 11, 597, 307, 264, 24433, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.16836190761480116, "compression_ratio": 1.854251012145749, "no_speech_prob": 3.2886000553844497e-06}, {"id": 729, "seek": 202120, "start": 2028.44, "end": 2031.28, "text": " And then you compute the product of zj,", "tokens": [50364, 264, 992, 295, 33915, 6815, 281, 741, 11, 597, 50454, 50454, 815, 312, 439, 264, 6815, 294, 264, 3894, 4583, 420, 406, 13, 50554, 50554, 467, 727, 312, 445, 257, 25993, 13, 50726, 50726, 400, 550, 291, 14722, 264, 1674, 295, 710, 73, 11, 50868, 50868, 597, 307, 264, 5598, 295, 264, 4985, 1230, 361, 11, 1413, 24770, 11, 51124, 51124, 597, 307, 264, 3364, 300, 6123, 4985, 361, 281, 4985, 741, 13, 51382, 51382, 400, 550, 934, 300, 11, 291, 747, 341, 1511, 11, 597, 307, 264, 32807, 51508, 51508, 2408, 11, 291, 1320, 309, 807, 264, 24433, 2445, 11, 51606, 51606, 341, 1300, 43, 52, 11, 420, 2035, 309, 307, 300, 291, 764, 13, 51738, 51738, 400, 300, 2709, 291, 710, 72, 11, 597, 307, 264, 24433, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.16836190761480116, "compression_ratio": 1.854251012145749, "no_speech_prob": 3.2886000553844497e-06}, {"id": 730, "seek": 202120, "start": 2031.28, "end": 2036.4, "text": " which is the output of the unit number j, times wij,", "tokens": [50364, 264, 992, 295, 33915, 6815, 281, 741, 11, 597, 50454, 50454, 815, 312, 439, 264, 6815, 294, 264, 3894, 4583, 420, 406, 13, 50554, 50554, 467, 727, 312, 445, 257, 25993, 13, 50726, 50726, 400, 550, 291, 14722, 264, 1674, 295, 710, 73, 11, 50868, 50868, 597, 307, 264, 5598, 295, 264, 4985, 1230, 361, 11, 1413, 24770, 11, 51124, 51124, 597, 307, 264, 3364, 300, 6123, 4985, 361, 281, 4985, 741, 13, 51382, 51382, 400, 550, 934, 300, 11, 291, 747, 341, 1511, 11, 597, 307, 264, 32807, 51508, 51508, 2408, 11, 291, 1320, 309, 807, 264, 24433, 2445, 11, 51606, 51606, 341, 1300, 43, 52, 11, 420, 2035, 309, 307, 300, 291, 764, 13, 51738, 51738, 400, 300, 2709, 291, 710, 72, 11, 597, 307, 264, 24433, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.16836190761480116, "compression_ratio": 1.854251012145749, "no_speech_prob": 3.2886000553844497e-06}, {"id": 731, "seek": 202120, "start": 2036.4, "end": 2041.56, "text": " which is the weight that links unit j to unit i.", "tokens": [50364, 264, 992, 295, 33915, 6815, 281, 741, 11, 597, 50454, 50454, 815, 312, 439, 264, 6815, 294, 264, 3894, 4583, 420, 406, 13, 50554, 50554, 467, 727, 312, 445, 257, 25993, 13, 50726, 50726, 400, 550, 291, 14722, 264, 1674, 295, 710, 73, 11, 50868, 50868, 597, 307, 264, 5598, 295, 264, 4985, 1230, 361, 11, 1413, 24770, 11, 51124, 51124, 597, 307, 264, 3364, 300, 6123, 4985, 361, 281, 4985, 741, 13, 51382, 51382, 400, 550, 934, 300, 11, 291, 747, 341, 1511, 11, 597, 307, 264, 32807, 51508, 51508, 2408, 11, 291, 1320, 309, 807, 264, 24433, 2445, 11, 51606, 51606, 341, 1300, 43, 52, 11, 420, 2035, 309, 307, 300, 291, 764, 13, 51738, 51738, 400, 300, 2709, 291, 710, 72, 11, 597, 307, 264, 24433, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.16836190761480116, "compression_ratio": 1.854251012145749, "no_speech_prob": 3.2886000553844497e-06}, {"id": 732, "seek": 202120, "start": 2041.56, "end": 2044.0800000000002, "text": " And then after that, you take this si, which is the weighted", "tokens": [50364, 264, 992, 295, 33915, 6815, 281, 741, 11, 597, 50454, 50454, 815, 312, 439, 264, 6815, 294, 264, 3894, 4583, 420, 406, 13, 50554, 50554, 467, 727, 312, 445, 257, 25993, 13, 50726, 50726, 400, 550, 291, 14722, 264, 1674, 295, 710, 73, 11, 50868, 50868, 597, 307, 264, 5598, 295, 264, 4985, 1230, 361, 11, 1413, 24770, 11, 51124, 51124, 597, 307, 264, 3364, 300, 6123, 4985, 361, 281, 4985, 741, 13, 51382, 51382, 400, 550, 934, 300, 11, 291, 747, 341, 1511, 11, 597, 307, 264, 32807, 51508, 51508, 2408, 11, 291, 1320, 309, 807, 264, 24433, 2445, 11, 51606, 51606, 341, 1300, 43, 52, 11, 420, 2035, 309, 307, 300, 291, 764, 13, 51738, 51738, 400, 300, 2709, 291, 710, 72, 11, 597, 307, 264, 24433, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.16836190761480116, "compression_ratio": 1.854251012145749, "no_speech_prob": 3.2886000553844497e-06}, {"id": 733, "seek": 202120, "start": 2044.0800000000002, "end": 2046.04, "text": " sum, you pass it through the activation function,", "tokens": [50364, 264, 992, 295, 33915, 6815, 281, 741, 11, 597, 50454, 50454, 815, 312, 439, 264, 6815, 294, 264, 3894, 4583, 420, 406, 13, 50554, 50554, 467, 727, 312, 445, 257, 25993, 13, 50726, 50726, 400, 550, 291, 14722, 264, 1674, 295, 710, 73, 11, 50868, 50868, 597, 307, 264, 5598, 295, 264, 4985, 1230, 361, 11, 1413, 24770, 11, 51124, 51124, 597, 307, 264, 3364, 300, 6123, 4985, 361, 281, 4985, 741, 13, 51382, 51382, 400, 550, 934, 300, 11, 291, 747, 341, 1511, 11, 597, 307, 264, 32807, 51508, 51508, 2408, 11, 291, 1320, 309, 807, 264, 24433, 2445, 11, 51606, 51606, 341, 1300, 43, 52, 11, 420, 2035, 309, 307, 300, 291, 764, 13, 51738, 51738, 400, 300, 2709, 291, 710, 72, 11, 597, 307, 264, 24433, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.16836190761480116, "compression_ratio": 1.854251012145749, "no_speech_prob": 3.2886000553844497e-06}, {"id": 734, "seek": 202120, "start": 2046.04, "end": 2048.68, "text": " this ReLU, or whatever it is that you use.", "tokens": [50364, 264, 992, 295, 33915, 6815, 281, 741, 11, 597, 50454, 50454, 815, 312, 439, 264, 6815, 294, 264, 3894, 4583, 420, 406, 13, 50554, 50554, 467, 727, 312, 445, 257, 25993, 13, 50726, 50726, 400, 550, 291, 14722, 264, 1674, 295, 710, 73, 11, 50868, 50868, 597, 307, 264, 5598, 295, 264, 4985, 1230, 361, 11, 1413, 24770, 11, 51124, 51124, 597, 307, 264, 3364, 300, 6123, 4985, 361, 281, 4985, 741, 13, 51382, 51382, 400, 550, 934, 300, 11, 291, 747, 341, 1511, 11, 597, 307, 264, 32807, 51508, 51508, 2408, 11, 291, 1320, 309, 807, 264, 24433, 2445, 11, 51606, 51606, 341, 1300, 43, 52, 11, 420, 2035, 309, 307, 300, 291, 764, 13, 51738, 51738, 400, 300, 2709, 291, 710, 72, 11, 597, 307, 264, 24433, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.16836190761480116, "compression_ratio": 1.854251012145749, "no_speech_prob": 3.2886000553844497e-06}, {"id": 735, "seek": 202120, "start": 2048.68, "end": 2050.56, "text": " And that gives you zi, which is the activation", "tokens": [50364, 264, 992, 295, 33915, 6815, 281, 741, 11, 597, 50454, 50454, 815, 312, 439, 264, 6815, 294, 264, 3894, 4583, 420, 406, 13, 50554, 50554, 467, 727, 312, 445, 257, 25993, 13, 50726, 50726, 400, 550, 291, 14722, 264, 1674, 295, 710, 73, 11, 50868, 50868, 597, 307, 264, 5598, 295, 264, 4985, 1230, 361, 11, 1413, 24770, 11, 51124, 51124, 597, 307, 264, 3364, 300, 6123, 4985, 361, 281, 4985, 741, 13, 51382, 51382, 400, 550, 934, 300, 11, 291, 747, 341, 1511, 11, 597, 307, 264, 32807, 51508, 51508, 2408, 11, 291, 1320, 309, 807, 264, 24433, 2445, 11, 51606, 51606, 341, 1300, 43, 52, 11, 420, 2035, 309, 307, 300, 291, 764, 13, 51738, 51738, 400, 300, 2709, 291, 710, 72, 11, 597, 307, 264, 24433, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.16836190761480116, "compression_ratio": 1.854251012145749, "no_speech_prob": 3.2886000553844497e-06}, {"id": 736, "seek": 205056, "start": 2050.56, "end": 2052.72, "text": " for unit i.", "tokens": [50364, 337, 4985, 741, 13, 50472, 50472, 2264, 11, 2199, 24657, 13, 50596, 50596, 3146, 4473, 264, 992, 295, 33915, 6815, 295, 633, 4985, 11, 50744, 50744, 538, 2390, 257, 4295, 295, 26253, 313, 11, 50826, 50826, 291, 393, 1936, 1322, 604, 733, 295, 3209, 17620, 50960, 50960, 300, 291, 528, 13, 51086, 51086, 821, 307, 472, 25534, 300, 321, 486, 51232, 51232, 5533, 294, 264, 19962, 7991, 11, 597, 51348, 51348, 307, 300, 264, 4295, 575, 281, 312, 696, 88, 66, 1050, 294, 264, 2020, 51726, 51726, 300, 309, 393, 380, 362, 16121, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15097875011210538, "compression_ratio": 1.5799086757990868, "no_speech_prob": 3.119550092378631e-05}, {"id": 737, "seek": 205056, "start": 2052.72, "end": 2055.2, "text": " OK, simple notation.", "tokens": [50364, 337, 4985, 741, 13, 50472, 50472, 2264, 11, 2199, 24657, 13, 50596, 50596, 3146, 4473, 264, 992, 295, 33915, 6815, 295, 633, 4985, 11, 50744, 50744, 538, 2390, 257, 4295, 295, 26253, 313, 11, 50826, 50826, 291, 393, 1936, 1322, 604, 733, 295, 3209, 17620, 50960, 50960, 300, 291, 528, 13, 51086, 51086, 821, 307, 472, 25534, 300, 321, 486, 51232, 51232, 5533, 294, 264, 19962, 7991, 11, 597, 51348, 51348, 307, 300, 264, 4295, 575, 281, 312, 696, 88, 66, 1050, 294, 264, 2020, 51726, 51726, 300, 309, 393, 380, 362, 16121, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15097875011210538, "compression_ratio": 1.5799086757990868, "no_speech_prob": 3.119550092378631e-05}, {"id": 738, "seek": 205056, "start": 2055.2, "end": 2058.16, "text": " By changing the set of upstream units of every unit,", "tokens": [50364, 337, 4985, 741, 13, 50472, 50472, 2264, 11, 2199, 24657, 13, 50596, 50596, 3146, 4473, 264, 992, 295, 33915, 6815, 295, 633, 4985, 11, 50744, 50744, 538, 2390, 257, 4295, 295, 26253, 313, 11, 50826, 50826, 291, 393, 1936, 1322, 604, 733, 295, 3209, 17620, 50960, 50960, 300, 291, 528, 13, 51086, 51086, 821, 307, 472, 25534, 300, 321, 486, 51232, 51232, 5533, 294, 264, 19962, 7991, 11, 597, 51348, 51348, 307, 300, 264, 4295, 575, 281, 312, 696, 88, 66, 1050, 294, 264, 2020, 51726, 51726, 300, 309, 393, 380, 362, 16121, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15097875011210538, "compression_ratio": 1.5799086757990868, "no_speech_prob": 3.119550092378631e-05}, {"id": 739, "seek": 205056, "start": 2058.16, "end": 2059.7999999999997, "text": " by building a graph of interconnection,", "tokens": [50364, 337, 4985, 741, 13, 50472, 50472, 2264, 11, 2199, 24657, 13, 50596, 50596, 3146, 4473, 264, 992, 295, 33915, 6815, 295, 633, 4985, 11, 50744, 50744, 538, 2390, 257, 4295, 295, 26253, 313, 11, 50826, 50826, 291, 393, 1936, 1322, 604, 733, 295, 3209, 17620, 50960, 50960, 300, 291, 528, 13, 51086, 51086, 821, 307, 472, 25534, 300, 321, 486, 51232, 51232, 5533, 294, 264, 19962, 7991, 11, 597, 51348, 51348, 307, 300, 264, 4295, 575, 281, 312, 696, 88, 66, 1050, 294, 264, 2020, 51726, 51726, 300, 309, 393, 380, 362, 16121, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15097875011210538, "compression_ratio": 1.5799086757990868, "no_speech_prob": 3.119550092378631e-05}, {"id": 740, "seek": 205056, "start": 2059.7999999999997, "end": 2062.48, "text": " you can basically build any kind of network arrangement", "tokens": [50364, 337, 4985, 741, 13, 50472, 50472, 2264, 11, 2199, 24657, 13, 50596, 50596, 3146, 4473, 264, 992, 295, 33915, 6815, 295, 633, 4985, 11, 50744, 50744, 538, 2390, 257, 4295, 295, 26253, 313, 11, 50826, 50826, 291, 393, 1936, 1322, 604, 733, 295, 3209, 17620, 50960, 50960, 300, 291, 528, 13, 51086, 51086, 821, 307, 472, 25534, 300, 321, 486, 51232, 51232, 5533, 294, 264, 19962, 7991, 11, 597, 51348, 51348, 307, 300, 264, 4295, 575, 281, 312, 696, 88, 66, 1050, 294, 264, 2020, 51726, 51726, 300, 309, 393, 380, 362, 16121, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15097875011210538, "compression_ratio": 1.5799086757990868, "no_speech_prob": 3.119550092378631e-05}, {"id": 741, "seek": 205056, "start": 2062.48, "end": 2065.0, "text": " that you want.", "tokens": [50364, 337, 4985, 741, 13, 50472, 50472, 2264, 11, 2199, 24657, 13, 50596, 50596, 3146, 4473, 264, 992, 295, 33915, 6815, 295, 633, 4985, 11, 50744, 50744, 538, 2390, 257, 4295, 295, 26253, 313, 11, 50826, 50826, 291, 393, 1936, 1322, 604, 733, 295, 3209, 17620, 50960, 50960, 300, 291, 528, 13, 51086, 51086, 821, 307, 472, 25534, 300, 321, 486, 51232, 51232, 5533, 294, 264, 19962, 7991, 11, 597, 51348, 51348, 307, 300, 264, 4295, 575, 281, 312, 696, 88, 66, 1050, 294, 264, 2020, 51726, 51726, 300, 309, 393, 380, 362, 16121, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15097875011210538, "compression_ratio": 1.5799086757990868, "no_speech_prob": 3.119550092378631e-05}, {"id": 742, "seek": 205056, "start": 2065.0, "end": 2067.92, "text": " There is one constraint that we will", "tokens": [50364, 337, 4985, 741, 13, 50472, 50472, 2264, 11, 2199, 24657, 13, 50596, 50596, 3146, 4473, 264, 992, 295, 33915, 6815, 295, 633, 4985, 11, 50744, 50744, 538, 2390, 257, 4295, 295, 26253, 313, 11, 50826, 50826, 291, 393, 1936, 1322, 604, 733, 295, 3209, 17620, 50960, 50960, 300, 291, 528, 13, 51086, 51086, 821, 307, 472, 25534, 300, 321, 486, 51232, 51232, 5533, 294, 264, 19962, 7991, 11, 597, 51348, 51348, 307, 300, 264, 4295, 575, 281, 312, 696, 88, 66, 1050, 294, 264, 2020, 51726, 51726, 300, 309, 393, 380, 362, 16121, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15097875011210538, "compression_ratio": 1.5799086757990868, "no_speech_prob": 3.119550092378631e-05}, {"id": 743, "seek": 205056, "start": 2067.92, "end": 2070.24, "text": " lift in the subsequent lecture, which", "tokens": [50364, 337, 4985, 741, 13, 50472, 50472, 2264, 11, 2199, 24657, 13, 50596, 50596, 3146, 4473, 264, 992, 295, 33915, 6815, 295, 633, 4985, 11, 50744, 50744, 538, 2390, 257, 4295, 295, 26253, 313, 11, 50826, 50826, 291, 393, 1936, 1322, 604, 733, 295, 3209, 17620, 50960, 50960, 300, 291, 528, 13, 51086, 51086, 821, 307, 472, 25534, 300, 321, 486, 51232, 51232, 5533, 294, 264, 19962, 7991, 11, 597, 51348, 51348, 307, 300, 264, 4295, 575, 281, 312, 696, 88, 66, 1050, 294, 264, 2020, 51726, 51726, 300, 309, 393, 380, 362, 16121, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15097875011210538, "compression_ratio": 1.5799086757990868, "no_speech_prob": 3.119550092378631e-05}, {"id": 744, "seek": 205056, "start": 2070.24, "end": 2077.7999999999997, "text": " is that the graph has to be acyclic in the sense", "tokens": [50364, 337, 4985, 741, 13, 50472, 50472, 2264, 11, 2199, 24657, 13, 50596, 50596, 3146, 4473, 264, 992, 295, 33915, 6815, 295, 633, 4985, 11, 50744, 50744, 538, 2390, 257, 4295, 295, 26253, 313, 11, 50826, 50826, 291, 393, 1936, 1322, 604, 733, 295, 3209, 17620, 50960, 50960, 300, 291, 528, 13, 51086, 51086, 821, 307, 472, 25534, 300, 321, 486, 51232, 51232, 5533, 294, 264, 19962, 7991, 11, 597, 51348, 51348, 307, 300, 264, 4295, 575, 281, 312, 696, 88, 66, 1050, 294, 264, 2020, 51726, 51726, 300, 309, 393, 380, 362, 16121, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15097875011210538, "compression_ratio": 1.5799086757990868, "no_speech_prob": 3.119550092378631e-05}, {"id": 745, "seek": 205056, "start": 2077.7999999999997, "end": 2079.2, "text": " that it can't have loops.", "tokens": [50364, 337, 4985, 741, 13, 50472, 50472, 2264, 11, 2199, 24657, 13, 50596, 50596, 3146, 4473, 264, 992, 295, 33915, 6815, 295, 633, 4985, 11, 50744, 50744, 538, 2390, 257, 4295, 295, 26253, 313, 11, 50826, 50826, 291, 393, 1936, 1322, 604, 733, 295, 3209, 17620, 50960, 50960, 300, 291, 528, 13, 51086, 51086, 821, 307, 472, 25534, 300, 321, 486, 51232, 51232, 5533, 294, 264, 19962, 7991, 11, 597, 51348, 51348, 307, 300, 264, 4295, 575, 281, 312, 696, 88, 66, 1050, 294, 264, 2020, 51726, 51726, 300, 309, 393, 380, 362, 16121, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.15097875011210538, "compression_ratio": 1.5799086757990868, "no_speech_prob": 3.119550092378631e-05}, {"id": 746, "seek": 207920, "start": 2079.2, "end": 2082.56, "text": " If you have loops, that means you can't organize the units", "tokens": [50364, 759, 291, 362, 16121, 11, 300, 1355, 291, 393, 380, 13859, 264, 6815, 50532, 50532, 294, 7914, 13, 50590, 50590, 509, 393, 380, 1333, 295, 1230, 552, 294, 257, 636, 300, 291, 393, 14722, 552, 50772, 50772, 370, 300, 633, 565, 291, 528, 281, 14722, 257, 4985, 11, 50878, 50878, 291, 1217, 362, 264, 1785, 295, 264, 3894, 6815, 13, 50996, 50996, 759, 456, 366, 16121, 11, 550, 291, 393, 360, 300, 11, 558, 30, 51136, 51136, 407, 337, 586, 11, 321, 434, 516, 281, 6552, 300, 264, 24770, 8141, 11, 51356, 51356, 264, 261, 8141, 11, 1177, 380, 362, 16121, 13, 51452, 51610, 3696, 495, 791, 257, 4295, 300, 1177, 380, 362, 16121, 13, 51704, 51704, 663, 311, 437, 286, 820, 584, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15285994112491608, "compression_ratio": 1.8291666666666666, "no_speech_prob": 1.1477864063635934e-05}, {"id": 747, "seek": 207920, "start": 2082.56, "end": 2083.72, "text": " in layers.", "tokens": [50364, 759, 291, 362, 16121, 11, 300, 1355, 291, 393, 380, 13859, 264, 6815, 50532, 50532, 294, 7914, 13, 50590, 50590, 509, 393, 380, 1333, 295, 1230, 552, 294, 257, 636, 300, 291, 393, 14722, 552, 50772, 50772, 370, 300, 633, 565, 291, 528, 281, 14722, 257, 4985, 11, 50878, 50878, 291, 1217, 362, 264, 1785, 295, 264, 3894, 6815, 13, 50996, 50996, 759, 456, 366, 16121, 11, 550, 291, 393, 360, 300, 11, 558, 30, 51136, 51136, 407, 337, 586, 11, 321, 434, 516, 281, 6552, 300, 264, 24770, 8141, 11, 51356, 51356, 264, 261, 8141, 11, 1177, 380, 362, 16121, 13, 51452, 51610, 3696, 495, 791, 257, 4295, 300, 1177, 380, 362, 16121, 13, 51704, 51704, 663, 311, 437, 286, 820, 584, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15285994112491608, "compression_ratio": 1.8291666666666666, "no_speech_prob": 1.1477864063635934e-05}, {"id": 748, "seek": 207920, "start": 2083.72, "end": 2087.3599999999997, "text": " You can't sort of number them in a way that you can compute them", "tokens": [50364, 759, 291, 362, 16121, 11, 300, 1355, 291, 393, 380, 13859, 264, 6815, 50532, 50532, 294, 7914, 13, 50590, 50590, 509, 393, 380, 1333, 295, 1230, 552, 294, 257, 636, 300, 291, 393, 14722, 552, 50772, 50772, 370, 300, 633, 565, 291, 528, 281, 14722, 257, 4985, 11, 50878, 50878, 291, 1217, 362, 264, 1785, 295, 264, 3894, 6815, 13, 50996, 50996, 759, 456, 366, 16121, 11, 550, 291, 393, 360, 300, 11, 558, 30, 51136, 51136, 407, 337, 586, 11, 321, 434, 516, 281, 6552, 300, 264, 24770, 8141, 11, 51356, 51356, 264, 261, 8141, 11, 1177, 380, 362, 16121, 13, 51452, 51610, 3696, 495, 791, 257, 4295, 300, 1177, 380, 362, 16121, 13, 51704, 51704, 663, 311, 437, 286, 820, 584, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15285994112491608, "compression_ratio": 1.8291666666666666, "no_speech_prob": 1.1477864063635934e-05}, {"id": 749, "seek": 207920, "start": 2087.3599999999997, "end": 2089.48, "text": " so that every time you want to compute a unit,", "tokens": [50364, 759, 291, 362, 16121, 11, 300, 1355, 291, 393, 380, 13859, 264, 6815, 50532, 50532, 294, 7914, 13, 50590, 50590, 509, 393, 380, 1333, 295, 1230, 552, 294, 257, 636, 300, 291, 393, 14722, 552, 50772, 50772, 370, 300, 633, 565, 291, 528, 281, 14722, 257, 4985, 11, 50878, 50878, 291, 1217, 362, 264, 1785, 295, 264, 3894, 6815, 13, 50996, 50996, 759, 456, 366, 16121, 11, 550, 291, 393, 360, 300, 11, 558, 30, 51136, 51136, 407, 337, 586, 11, 321, 434, 516, 281, 6552, 300, 264, 24770, 8141, 11, 51356, 51356, 264, 261, 8141, 11, 1177, 380, 362, 16121, 13, 51452, 51610, 3696, 495, 791, 257, 4295, 300, 1177, 380, 362, 16121, 13, 51704, 51704, 663, 311, 437, 286, 820, 584, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15285994112491608, "compression_ratio": 1.8291666666666666, "no_speech_prob": 1.1477864063635934e-05}, {"id": 750, "seek": 207920, "start": 2089.48, "end": 2091.8399999999997, "text": " you already have the state of the previous units.", "tokens": [50364, 759, 291, 362, 16121, 11, 300, 1355, 291, 393, 380, 13859, 264, 6815, 50532, 50532, 294, 7914, 13, 50590, 50590, 509, 393, 380, 1333, 295, 1230, 552, 294, 257, 636, 300, 291, 393, 14722, 552, 50772, 50772, 370, 300, 633, 565, 291, 528, 281, 14722, 257, 4985, 11, 50878, 50878, 291, 1217, 362, 264, 1785, 295, 264, 3894, 6815, 13, 50996, 50996, 759, 456, 366, 16121, 11, 550, 291, 393, 360, 300, 11, 558, 30, 51136, 51136, 407, 337, 586, 11, 321, 434, 516, 281, 6552, 300, 264, 24770, 8141, 11, 51356, 51356, 264, 261, 8141, 11, 1177, 380, 362, 16121, 13, 51452, 51610, 3696, 495, 791, 257, 4295, 300, 1177, 380, 362, 16121, 13, 51704, 51704, 663, 311, 437, 286, 820, 584, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15285994112491608, "compression_ratio": 1.8291666666666666, "no_speech_prob": 1.1477864063635934e-05}, {"id": 751, "seek": 207920, "start": 2091.8399999999997, "end": 2094.64, "text": " If there are loops, then you can do that, right?", "tokens": [50364, 759, 291, 362, 16121, 11, 300, 1355, 291, 393, 380, 13859, 264, 6815, 50532, 50532, 294, 7914, 13, 50590, 50590, 509, 393, 380, 1333, 295, 1230, 552, 294, 257, 636, 300, 291, 393, 14722, 552, 50772, 50772, 370, 300, 633, 565, 291, 528, 281, 14722, 257, 4985, 11, 50878, 50878, 291, 1217, 362, 264, 1785, 295, 264, 3894, 6815, 13, 50996, 50996, 759, 456, 366, 16121, 11, 550, 291, 393, 360, 300, 11, 558, 30, 51136, 51136, 407, 337, 586, 11, 321, 434, 516, 281, 6552, 300, 264, 24770, 8141, 11, 51356, 51356, 264, 261, 8141, 11, 1177, 380, 362, 16121, 13, 51452, 51610, 3696, 495, 791, 257, 4295, 300, 1177, 380, 362, 16121, 13, 51704, 51704, 663, 311, 437, 286, 820, 584, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15285994112491608, "compression_ratio": 1.8291666666666666, "no_speech_prob": 1.1477864063635934e-05}, {"id": 752, "seek": 207920, "start": 2094.64, "end": 2099.04, "text": " So for now, we're going to assume that the wij matrix,", "tokens": [50364, 759, 291, 362, 16121, 11, 300, 1355, 291, 393, 380, 13859, 264, 6815, 50532, 50532, 294, 7914, 13, 50590, 50590, 509, 393, 380, 1333, 295, 1230, 552, 294, 257, 636, 300, 291, 393, 14722, 552, 50772, 50772, 370, 300, 633, 565, 291, 528, 281, 14722, 257, 4985, 11, 50878, 50878, 291, 1217, 362, 264, 1785, 295, 264, 3894, 6815, 13, 50996, 50996, 759, 456, 366, 16121, 11, 550, 291, 393, 360, 300, 11, 558, 30, 51136, 51136, 407, 337, 586, 11, 321, 434, 516, 281, 6552, 300, 264, 24770, 8141, 11, 51356, 51356, 264, 261, 8141, 11, 1177, 380, 362, 16121, 13, 51452, 51610, 3696, 495, 791, 257, 4295, 300, 1177, 380, 362, 16121, 13, 51704, 51704, 663, 311, 437, 286, 820, 584, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15285994112491608, "compression_ratio": 1.8291666666666666, "no_speech_prob": 1.1477864063635934e-05}, {"id": 753, "seek": 207920, "start": 2099.04, "end": 2100.96, "text": " the w matrix, doesn't have loops.", "tokens": [50364, 759, 291, 362, 16121, 11, 300, 1355, 291, 393, 380, 13859, 264, 6815, 50532, 50532, 294, 7914, 13, 50590, 50590, 509, 393, 380, 1333, 295, 1230, 552, 294, 257, 636, 300, 291, 393, 14722, 552, 50772, 50772, 370, 300, 633, 565, 291, 528, 281, 14722, 257, 4985, 11, 50878, 50878, 291, 1217, 362, 264, 1785, 295, 264, 3894, 6815, 13, 50996, 50996, 759, 456, 366, 16121, 11, 550, 291, 393, 360, 300, 11, 558, 30, 51136, 51136, 407, 337, 586, 11, 321, 434, 516, 281, 6552, 300, 264, 24770, 8141, 11, 51356, 51356, 264, 261, 8141, 11, 1177, 380, 362, 16121, 13, 51452, 51610, 3696, 495, 791, 257, 4295, 300, 1177, 380, 362, 16121, 13, 51704, 51704, 663, 311, 437, 286, 820, 584, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15285994112491608, "compression_ratio": 1.8291666666666666, "no_speech_prob": 1.1477864063635934e-05}, {"id": 754, "seek": 207920, "start": 2104.12, "end": 2106.0, "text": " Represents a graph that doesn't have loops.", "tokens": [50364, 759, 291, 362, 16121, 11, 300, 1355, 291, 393, 380, 13859, 264, 6815, 50532, 50532, 294, 7914, 13, 50590, 50590, 509, 393, 380, 1333, 295, 1230, 552, 294, 257, 636, 300, 291, 393, 14722, 552, 50772, 50772, 370, 300, 633, 565, 291, 528, 281, 14722, 257, 4985, 11, 50878, 50878, 291, 1217, 362, 264, 1785, 295, 264, 3894, 6815, 13, 50996, 50996, 759, 456, 366, 16121, 11, 550, 291, 393, 360, 300, 11, 558, 30, 51136, 51136, 407, 337, 586, 11, 321, 434, 516, 281, 6552, 300, 264, 24770, 8141, 11, 51356, 51356, 264, 261, 8141, 11, 1177, 380, 362, 16121, 13, 51452, 51610, 3696, 495, 791, 257, 4295, 300, 1177, 380, 362, 16121, 13, 51704, 51704, 663, 311, 437, 286, 820, 584, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15285994112491608, "compression_ratio": 1.8291666666666666, "no_speech_prob": 1.1477864063635934e-05}, {"id": 755, "seek": 207920, "start": 2106.0, "end": 2107.68, "text": " That's what I should say.", "tokens": [50364, 759, 291, 362, 16121, 11, 300, 1355, 291, 393, 380, 13859, 264, 6815, 50532, 50532, 294, 7914, 13, 50590, 50590, 509, 393, 380, 1333, 295, 1230, 552, 294, 257, 636, 300, 291, 393, 14722, 552, 50772, 50772, 370, 300, 633, 565, 291, 528, 281, 14722, 257, 4985, 11, 50878, 50878, 291, 1217, 362, 264, 1785, 295, 264, 3894, 6815, 13, 50996, 50996, 759, 456, 366, 16121, 11, 550, 291, 393, 360, 300, 11, 558, 30, 51136, 51136, 407, 337, 586, 11, 321, 434, 516, 281, 6552, 300, 264, 24770, 8141, 11, 51356, 51356, 264, 261, 8141, 11, 1177, 380, 362, 16121, 13, 51452, 51610, 3696, 495, 791, 257, 4295, 300, 1177, 380, 362, 16121, 13, 51704, 51704, 663, 311, 437, 286, 820, 584, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15285994112491608, "compression_ratio": 1.8291666666666666, "no_speech_prob": 1.1477864063635934e-05}, {"id": 756, "seek": 210768, "start": 2107.68, "end": 2111.64, "text": " OK, so here's sort of an intuitive explanation", "tokens": [50364, 2264, 11, 370, 510, 311, 1333, 295, 364, 21769, 10835, 50562, 50562, 295, 264, 646, 79, 1513, 559, 399, 9284, 13, 50642, 50642, 407, 264, 646, 79, 1513, 559, 399, 9284, 307, 264, 2135, 6532, 50776, 50776, 300, 307, 1143, 5315, 294, 2452, 2539, 50930, 50930, 281, 14722, 264, 16235, 295, 257, 2063, 2445, 11, 2035, 51170, 51170, 309, 307, 11, 10024, 2445, 11, 365, 3104, 281, 257, 7006, 51382, 51382, 1854, 295, 264, 3209, 13, 51430, 51430, 639, 7006, 393, 312, 257, 1785, 7006, 11, 411, 257, 710, 420, 364, 262, 11, 51612, 51612, 420, 309, 727, 312, 257, 13075, 7006, 11, 411, 257, 261, 13, 51760, 51760, 400, 321, 434, 516, 281, 643, 281, 360, 1293, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12164626082753748, "compression_ratio": 1.7628458498023716, "no_speech_prob": 4.425184215506306e-06}, {"id": 757, "seek": 210768, "start": 2111.64, "end": 2113.24, "text": " of the backpropagation algorithm.", "tokens": [50364, 2264, 11, 370, 510, 311, 1333, 295, 364, 21769, 10835, 50562, 50562, 295, 264, 646, 79, 1513, 559, 399, 9284, 13, 50642, 50642, 407, 264, 646, 79, 1513, 559, 399, 9284, 307, 264, 2135, 6532, 50776, 50776, 300, 307, 1143, 5315, 294, 2452, 2539, 50930, 50930, 281, 14722, 264, 16235, 295, 257, 2063, 2445, 11, 2035, 51170, 51170, 309, 307, 11, 10024, 2445, 11, 365, 3104, 281, 257, 7006, 51382, 51382, 1854, 295, 264, 3209, 13, 51430, 51430, 639, 7006, 393, 312, 257, 1785, 7006, 11, 411, 257, 710, 420, 364, 262, 11, 51612, 51612, 420, 309, 727, 312, 257, 13075, 7006, 11, 411, 257, 261, 13, 51760, 51760, 400, 321, 434, 516, 281, 643, 281, 360, 1293, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12164626082753748, "compression_ratio": 1.7628458498023716, "no_speech_prob": 4.425184215506306e-06}, {"id": 758, "seek": 210768, "start": 2113.24, "end": 2115.9199999999996, "text": " So the backpropagation algorithm is the main technique", "tokens": [50364, 2264, 11, 370, 510, 311, 1333, 295, 364, 21769, 10835, 50562, 50562, 295, 264, 646, 79, 1513, 559, 399, 9284, 13, 50642, 50642, 407, 264, 646, 79, 1513, 559, 399, 9284, 307, 264, 2135, 6532, 50776, 50776, 300, 307, 1143, 5315, 294, 2452, 2539, 50930, 50930, 281, 14722, 264, 16235, 295, 257, 2063, 2445, 11, 2035, 51170, 51170, 309, 307, 11, 10024, 2445, 11, 365, 3104, 281, 257, 7006, 51382, 51382, 1854, 295, 264, 3209, 13, 51430, 51430, 639, 7006, 393, 312, 257, 1785, 7006, 11, 411, 257, 710, 420, 364, 262, 11, 51612, 51612, 420, 309, 727, 312, 257, 13075, 7006, 11, 411, 257, 261, 13, 51760, 51760, 400, 321, 434, 516, 281, 643, 281, 360, 1293, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12164626082753748, "compression_ratio": 1.7628458498023716, "no_speech_prob": 4.425184215506306e-06}, {"id": 759, "seek": 210768, "start": 2115.9199999999996, "end": 2119.0, "text": " that is used everywhere in deep learning", "tokens": [50364, 2264, 11, 370, 510, 311, 1333, 295, 364, 21769, 10835, 50562, 50562, 295, 264, 646, 79, 1513, 559, 399, 9284, 13, 50642, 50642, 407, 264, 646, 79, 1513, 559, 399, 9284, 307, 264, 2135, 6532, 50776, 50776, 300, 307, 1143, 5315, 294, 2452, 2539, 50930, 50930, 281, 14722, 264, 16235, 295, 257, 2063, 2445, 11, 2035, 51170, 51170, 309, 307, 11, 10024, 2445, 11, 365, 3104, 281, 257, 7006, 51382, 51382, 1854, 295, 264, 3209, 13, 51430, 51430, 639, 7006, 393, 312, 257, 1785, 7006, 11, 411, 257, 710, 420, 364, 262, 11, 51612, 51612, 420, 309, 727, 312, 257, 13075, 7006, 11, 411, 257, 261, 13, 51760, 51760, 400, 321, 434, 516, 281, 643, 281, 360, 1293, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12164626082753748, "compression_ratio": 1.7628458498023716, "no_speech_prob": 4.425184215506306e-06}, {"id": 760, "seek": 210768, "start": 2119.0, "end": 2123.7999999999997, "text": " to compute the gradient of a cost function, whatever", "tokens": [50364, 2264, 11, 370, 510, 311, 1333, 295, 364, 21769, 10835, 50562, 50562, 295, 264, 646, 79, 1513, 559, 399, 9284, 13, 50642, 50642, 407, 264, 646, 79, 1513, 559, 399, 9284, 307, 264, 2135, 6532, 50776, 50776, 300, 307, 1143, 5315, 294, 2452, 2539, 50930, 50930, 281, 14722, 264, 16235, 295, 257, 2063, 2445, 11, 2035, 51170, 51170, 309, 307, 11, 10024, 2445, 11, 365, 3104, 281, 257, 7006, 51382, 51382, 1854, 295, 264, 3209, 13, 51430, 51430, 639, 7006, 393, 312, 257, 1785, 7006, 11, 411, 257, 710, 420, 364, 262, 11, 51612, 51612, 420, 309, 727, 312, 257, 13075, 7006, 11, 411, 257, 261, 13, 51760, 51760, 400, 321, 434, 516, 281, 643, 281, 360, 1293, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12164626082753748, "compression_ratio": 1.7628458498023716, "no_speech_prob": 4.425184215506306e-06}, {"id": 761, "seek": 210768, "start": 2123.7999999999997, "end": 2128.04, "text": " it is, objective function, with respect to a variable", "tokens": [50364, 2264, 11, 370, 510, 311, 1333, 295, 364, 21769, 10835, 50562, 50562, 295, 264, 646, 79, 1513, 559, 399, 9284, 13, 50642, 50642, 407, 264, 646, 79, 1513, 559, 399, 9284, 307, 264, 2135, 6532, 50776, 50776, 300, 307, 1143, 5315, 294, 2452, 2539, 50930, 50930, 281, 14722, 264, 16235, 295, 257, 2063, 2445, 11, 2035, 51170, 51170, 309, 307, 11, 10024, 2445, 11, 365, 3104, 281, 257, 7006, 51382, 51382, 1854, 295, 264, 3209, 13, 51430, 51430, 639, 7006, 393, 312, 257, 1785, 7006, 11, 411, 257, 710, 420, 364, 262, 11, 51612, 51612, 420, 309, 727, 312, 257, 13075, 7006, 11, 411, 257, 261, 13, 51760, 51760, 400, 321, 434, 516, 281, 643, 281, 360, 1293, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12164626082753748, "compression_ratio": 1.7628458498023716, "no_speech_prob": 4.425184215506306e-06}, {"id": 762, "seek": 210768, "start": 2128.04, "end": 2129.0, "text": " inside of the network.", "tokens": [50364, 2264, 11, 370, 510, 311, 1333, 295, 364, 21769, 10835, 50562, 50562, 295, 264, 646, 79, 1513, 559, 399, 9284, 13, 50642, 50642, 407, 264, 646, 79, 1513, 559, 399, 9284, 307, 264, 2135, 6532, 50776, 50776, 300, 307, 1143, 5315, 294, 2452, 2539, 50930, 50930, 281, 14722, 264, 16235, 295, 257, 2063, 2445, 11, 2035, 51170, 51170, 309, 307, 11, 10024, 2445, 11, 365, 3104, 281, 257, 7006, 51382, 51382, 1854, 295, 264, 3209, 13, 51430, 51430, 639, 7006, 393, 312, 257, 1785, 7006, 11, 411, 257, 710, 420, 364, 262, 11, 51612, 51612, 420, 309, 727, 312, 257, 13075, 7006, 11, 411, 257, 261, 13, 51760, 51760, 400, 321, 434, 516, 281, 643, 281, 360, 1293, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12164626082753748, "compression_ratio": 1.7628458498023716, "no_speech_prob": 4.425184215506306e-06}, {"id": 763, "seek": 210768, "start": 2129.0, "end": 2132.64, "text": " This variable can be a state variable, like a z or an s,", "tokens": [50364, 2264, 11, 370, 510, 311, 1333, 295, 364, 21769, 10835, 50562, 50562, 295, 264, 646, 79, 1513, 559, 399, 9284, 13, 50642, 50642, 407, 264, 646, 79, 1513, 559, 399, 9284, 307, 264, 2135, 6532, 50776, 50776, 300, 307, 1143, 5315, 294, 2452, 2539, 50930, 50930, 281, 14722, 264, 16235, 295, 257, 2063, 2445, 11, 2035, 51170, 51170, 309, 307, 11, 10024, 2445, 11, 365, 3104, 281, 257, 7006, 51382, 51382, 1854, 295, 264, 3209, 13, 51430, 51430, 639, 7006, 393, 312, 257, 1785, 7006, 11, 411, 257, 710, 420, 364, 262, 11, 51612, 51612, 420, 309, 727, 312, 257, 13075, 7006, 11, 411, 257, 261, 13, 51760, 51760, 400, 321, 434, 516, 281, 643, 281, 360, 1293, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12164626082753748, "compression_ratio": 1.7628458498023716, "no_speech_prob": 4.425184215506306e-06}, {"id": 764, "seek": 210768, "start": 2132.64, "end": 2135.6, "text": " or it could be a parameter variable, like a w.", "tokens": [50364, 2264, 11, 370, 510, 311, 1333, 295, 364, 21769, 10835, 50562, 50562, 295, 264, 646, 79, 1513, 559, 399, 9284, 13, 50642, 50642, 407, 264, 646, 79, 1513, 559, 399, 9284, 307, 264, 2135, 6532, 50776, 50776, 300, 307, 1143, 5315, 294, 2452, 2539, 50930, 50930, 281, 14722, 264, 16235, 295, 257, 2063, 2445, 11, 2035, 51170, 51170, 309, 307, 11, 10024, 2445, 11, 365, 3104, 281, 257, 7006, 51382, 51382, 1854, 295, 264, 3209, 13, 51430, 51430, 639, 7006, 393, 312, 257, 1785, 7006, 11, 411, 257, 710, 420, 364, 262, 11, 51612, 51612, 420, 309, 727, 312, 257, 13075, 7006, 11, 411, 257, 261, 13, 51760, 51760, 400, 321, 434, 516, 281, 643, 281, 360, 1293, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12164626082753748, "compression_ratio": 1.7628458498023716, "no_speech_prob": 4.425184215506306e-06}, {"id": 765, "seek": 210768, "start": 2135.6, "end": 2137.3999999999996, "text": " And we're going to need to do both.", "tokens": [50364, 2264, 11, 370, 510, 311, 1333, 295, 364, 21769, 10835, 50562, 50562, 295, 264, 646, 79, 1513, 559, 399, 9284, 13, 50642, 50642, 407, 264, 646, 79, 1513, 559, 399, 9284, 307, 264, 2135, 6532, 50776, 50776, 300, 307, 1143, 5315, 294, 2452, 2539, 50930, 50930, 281, 14722, 264, 16235, 295, 257, 2063, 2445, 11, 2035, 51170, 51170, 309, 307, 11, 10024, 2445, 11, 365, 3104, 281, 257, 7006, 51382, 51382, 1854, 295, 264, 3209, 13, 51430, 51430, 639, 7006, 393, 312, 257, 1785, 7006, 11, 411, 257, 710, 420, 364, 262, 11, 51612, 51612, 420, 309, 727, 312, 257, 13075, 7006, 11, 411, 257, 261, 13, 51760, 51760, 400, 321, 434, 516, 281, 643, 281, 360, 1293, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12164626082753748, "compression_ratio": 1.7628458498023716, "no_speech_prob": 4.425184215506306e-06}, {"id": 766, "seek": 213740, "start": 2137.4, "end": 2139.36, "text": " So this is going to be an intuitive explanation.", "tokens": [50364, 407, 341, 307, 516, 281, 312, 364, 21769, 10835, 13, 50462, 50462, 400, 550, 934, 300, 11, 456, 311, 516, 50504, 50504, 281, 312, 257, 544, 18894, 10835, 11, 50590, 50590, 597, 307, 1570, 21769, 11, 457, 4317, 767, 3571, 50742, 50742, 281, 1223, 13, 50822, 50822, 583, 718, 385, 722, 365, 264, 24002, 510, 13, 50906, 50906, 407, 718, 311, 584, 321, 362, 257, 955, 3209, 13, 50986, 50986, 400, 1854, 295, 341, 955, 3209, 11, 321, 51062, 51062, 362, 472, 295, 729, 707, 24433, 6828, 13, 51184, 51184, 682, 341, 1389, 11, 309, 311, 257, 4556, 3280, 327, 2445, 11, 51268, 51268, 457, 309, 1177, 380, 1871, 437, 309, 307, 337, 586, 13, 51412, 51412, 639, 2445, 2516, 364, 262, 293, 14725, 257, 710, 13, 51558, 51558, 492, 818, 341, 2445, 276, 295, 262, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1563525639527233, "compression_ratio": 1.8, "no_speech_prob": 1.0615425708238035e-05}, {"id": 767, "seek": 213740, "start": 2139.36, "end": 2140.2000000000003, "text": " And then after that, there's going", "tokens": [50364, 407, 341, 307, 516, 281, 312, 364, 21769, 10835, 13, 50462, 50462, 400, 550, 934, 300, 11, 456, 311, 516, 50504, 50504, 281, 312, 257, 544, 18894, 10835, 11, 50590, 50590, 597, 307, 1570, 21769, 11, 457, 4317, 767, 3571, 50742, 50742, 281, 1223, 13, 50822, 50822, 583, 718, 385, 722, 365, 264, 24002, 510, 13, 50906, 50906, 407, 718, 311, 584, 321, 362, 257, 955, 3209, 13, 50986, 50986, 400, 1854, 295, 341, 955, 3209, 11, 321, 51062, 51062, 362, 472, 295, 729, 707, 24433, 6828, 13, 51184, 51184, 682, 341, 1389, 11, 309, 311, 257, 4556, 3280, 327, 2445, 11, 51268, 51268, 457, 309, 1177, 380, 1871, 437, 309, 307, 337, 586, 13, 51412, 51412, 639, 2445, 2516, 364, 262, 293, 14725, 257, 710, 13, 51558, 51558, 492, 818, 341, 2445, 276, 295, 262, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1563525639527233, "compression_ratio": 1.8, "no_speech_prob": 1.0615425708238035e-05}, {"id": 768, "seek": 213740, "start": 2140.2000000000003, "end": 2141.92, "text": " to be a more mathematical explanation,", "tokens": [50364, 407, 341, 307, 516, 281, 312, 364, 21769, 10835, 13, 50462, 50462, 400, 550, 934, 300, 11, 456, 311, 516, 50504, 50504, 281, 312, 257, 544, 18894, 10835, 11, 50590, 50590, 597, 307, 1570, 21769, 11, 457, 4317, 767, 3571, 50742, 50742, 281, 1223, 13, 50822, 50822, 583, 718, 385, 722, 365, 264, 24002, 510, 13, 50906, 50906, 407, 718, 311, 584, 321, 362, 257, 955, 3209, 13, 50986, 50986, 400, 1854, 295, 341, 955, 3209, 11, 321, 51062, 51062, 362, 472, 295, 729, 707, 24433, 6828, 13, 51184, 51184, 682, 341, 1389, 11, 309, 311, 257, 4556, 3280, 327, 2445, 11, 51268, 51268, 457, 309, 1177, 380, 1871, 437, 309, 307, 337, 586, 13, 51412, 51412, 639, 2445, 2516, 364, 262, 293, 14725, 257, 710, 13, 51558, 51558, 492, 818, 341, 2445, 276, 295, 262, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1563525639527233, "compression_ratio": 1.8, "no_speech_prob": 1.0615425708238035e-05}, {"id": 769, "seek": 213740, "start": 2141.92, "end": 2144.96, "text": " which is less intuitive, but perhaps actually easier", "tokens": [50364, 407, 341, 307, 516, 281, 312, 364, 21769, 10835, 13, 50462, 50462, 400, 550, 934, 300, 11, 456, 311, 516, 50504, 50504, 281, 312, 257, 544, 18894, 10835, 11, 50590, 50590, 597, 307, 1570, 21769, 11, 457, 4317, 767, 3571, 50742, 50742, 281, 1223, 13, 50822, 50822, 583, 718, 385, 722, 365, 264, 24002, 510, 13, 50906, 50906, 407, 718, 311, 584, 321, 362, 257, 955, 3209, 13, 50986, 50986, 400, 1854, 295, 341, 955, 3209, 11, 321, 51062, 51062, 362, 472, 295, 729, 707, 24433, 6828, 13, 51184, 51184, 682, 341, 1389, 11, 309, 311, 257, 4556, 3280, 327, 2445, 11, 51268, 51268, 457, 309, 1177, 380, 1871, 437, 309, 307, 337, 586, 13, 51412, 51412, 639, 2445, 2516, 364, 262, 293, 14725, 257, 710, 13, 51558, 51558, 492, 818, 341, 2445, 276, 295, 262, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1563525639527233, "compression_ratio": 1.8, "no_speech_prob": 1.0615425708238035e-05}, {"id": 770, "seek": 213740, "start": 2144.96, "end": 2146.56, "text": " to understand.", "tokens": [50364, 407, 341, 307, 516, 281, 312, 364, 21769, 10835, 13, 50462, 50462, 400, 550, 934, 300, 11, 456, 311, 516, 50504, 50504, 281, 312, 257, 544, 18894, 10835, 11, 50590, 50590, 597, 307, 1570, 21769, 11, 457, 4317, 767, 3571, 50742, 50742, 281, 1223, 13, 50822, 50822, 583, 718, 385, 722, 365, 264, 24002, 510, 13, 50906, 50906, 407, 718, 311, 584, 321, 362, 257, 955, 3209, 13, 50986, 50986, 400, 1854, 295, 341, 955, 3209, 11, 321, 51062, 51062, 362, 472, 295, 729, 707, 24433, 6828, 13, 51184, 51184, 682, 341, 1389, 11, 309, 311, 257, 4556, 3280, 327, 2445, 11, 51268, 51268, 457, 309, 1177, 380, 1871, 437, 309, 307, 337, 586, 13, 51412, 51412, 639, 2445, 2516, 364, 262, 293, 14725, 257, 710, 13, 51558, 51558, 492, 818, 341, 2445, 276, 295, 262, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1563525639527233, "compression_ratio": 1.8, "no_speech_prob": 1.0615425708238035e-05}, {"id": 771, "seek": 213740, "start": 2146.56, "end": 2148.2400000000002, "text": " But let me start with the intuition here.", "tokens": [50364, 407, 341, 307, 516, 281, 312, 364, 21769, 10835, 13, 50462, 50462, 400, 550, 934, 300, 11, 456, 311, 516, 50504, 50504, 281, 312, 257, 544, 18894, 10835, 11, 50590, 50590, 597, 307, 1570, 21769, 11, 457, 4317, 767, 3571, 50742, 50742, 281, 1223, 13, 50822, 50822, 583, 718, 385, 722, 365, 264, 24002, 510, 13, 50906, 50906, 407, 718, 311, 584, 321, 362, 257, 955, 3209, 13, 50986, 50986, 400, 1854, 295, 341, 955, 3209, 11, 321, 51062, 51062, 362, 472, 295, 729, 707, 24433, 6828, 13, 51184, 51184, 682, 341, 1389, 11, 309, 311, 257, 4556, 3280, 327, 2445, 11, 51268, 51268, 457, 309, 1177, 380, 1871, 437, 309, 307, 337, 586, 13, 51412, 51412, 639, 2445, 2516, 364, 262, 293, 14725, 257, 710, 13, 51558, 51558, 492, 818, 341, 2445, 276, 295, 262, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1563525639527233, "compression_ratio": 1.8, "no_speech_prob": 1.0615425708238035e-05}, {"id": 772, "seek": 213740, "start": 2148.2400000000002, "end": 2149.84, "text": " So let's say we have a big network.", "tokens": [50364, 407, 341, 307, 516, 281, 312, 364, 21769, 10835, 13, 50462, 50462, 400, 550, 934, 300, 11, 456, 311, 516, 50504, 50504, 281, 312, 257, 544, 18894, 10835, 11, 50590, 50590, 597, 307, 1570, 21769, 11, 457, 4317, 767, 3571, 50742, 50742, 281, 1223, 13, 50822, 50822, 583, 718, 385, 722, 365, 264, 24002, 510, 13, 50906, 50906, 407, 718, 311, 584, 321, 362, 257, 955, 3209, 13, 50986, 50986, 400, 1854, 295, 341, 955, 3209, 11, 321, 51062, 51062, 362, 472, 295, 729, 707, 24433, 6828, 13, 51184, 51184, 682, 341, 1389, 11, 309, 311, 257, 4556, 3280, 327, 2445, 11, 51268, 51268, 457, 309, 1177, 380, 1871, 437, 309, 307, 337, 586, 13, 51412, 51412, 639, 2445, 2516, 364, 262, 293, 14725, 257, 710, 13, 51558, 51558, 492, 818, 341, 2445, 276, 295, 262, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1563525639527233, "compression_ratio": 1.8, "no_speech_prob": 1.0615425708238035e-05}, {"id": 773, "seek": 213740, "start": 2149.84, "end": 2151.36, "text": " And inside of this big network, we", "tokens": [50364, 407, 341, 307, 516, 281, 312, 364, 21769, 10835, 13, 50462, 50462, 400, 550, 934, 300, 11, 456, 311, 516, 50504, 50504, 281, 312, 257, 544, 18894, 10835, 11, 50590, 50590, 597, 307, 1570, 21769, 11, 457, 4317, 767, 3571, 50742, 50742, 281, 1223, 13, 50822, 50822, 583, 718, 385, 722, 365, 264, 24002, 510, 13, 50906, 50906, 407, 718, 311, 584, 321, 362, 257, 955, 3209, 13, 50986, 50986, 400, 1854, 295, 341, 955, 3209, 11, 321, 51062, 51062, 362, 472, 295, 729, 707, 24433, 6828, 13, 51184, 51184, 682, 341, 1389, 11, 309, 311, 257, 4556, 3280, 327, 2445, 11, 51268, 51268, 457, 309, 1177, 380, 1871, 437, 309, 307, 337, 586, 13, 51412, 51412, 639, 2445, 2516, 364, 262, 293, 14725, 257, 710, 13, 51558, 51558, 492, 818, 341, 2445, 276, 295, 262, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1563525639527233, "compression_ratio": 1.8, "no_speech_prob": 1.0615425708238035e-05}, {"id": 774, "seek": 213740, "start": 2151.36, "end": 2153.8, "text": " have one of those little activation functions.", "tokens": [50364, 407, 341, 307, 516, 281, 312, 364, 21769, 10835, 13, 50462, 50462, 400, 550, 934, 300, 11, 456, 311, 516, 50504, 50504, 281, 312, 257, 544, 18894, 10835, 11, 50590, 50590, 597, 307, 1570, 21769, 11, 457, 4317, 767, 3571, 50742, 50742, 281, 1223, 13, 50822, 50822, 583, 718, 385, 722, 365, 264, 24002, 510, 13, 50906, 50906, 407, 718, 311, 584, 321, 362, 257, 955, 3209, 13, 50986, 50986, 400, 1854, 295, 341, 955, 3209, 11, 321, 51062, 51062, 362, 472, 295, 729, 707, 24433, 6828, 13, 51184, 51184, 682, 341, 1389, 11, 309, 311, 257, 4556, 3280, 327, 2445, 11, 51268, 51268, 457, 309, 1177, 380, 1871, 437, 309, 307, 337, 586, 13, 51412, 51412, 639, 2445, 2516, 364, 262, 293, 14725, 257, 710, 13, 51558, 51558, 492, 818, 341, 2445, 276, 295, 262, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1563525639527233, "compression_ratio": 1.8, "no_speech_prob": 1.0615425708238035e-05}, {"id": 775, "seek": 213740, "start": 2153.8, "end": 2155.48, "text": " In this case, it's a sigmoid function,", "tokens": [50364, 407, 341, 307, 516, 281, 312, 364, 21769, 10835, 13, 50462, 50462, 400, 550, 934, 300, 11, 456, 311, 516, 50504, 50504, 281, 312, 257, 544, 18894, 10835, 11, 50590, 50590, 597, 307, 1570, 21769, 11, 457, 4317, 767, 3571, 50742, 50742, 281, 1223, 13, 50822, 50822, 583, 718, 385, 722, 365, 264, 24002, 510, 13, 50906, 50906, 407, 718, 311, 584, 321, 362, 257, 955, 3209, 13, 50986, 50986, 400, 1854, 295, 341, 955, 3209, 11, 321, 51062, 51062, 362, 472, 295, 729, 707, 24433, 6828, 13, 51184, 51184, 682, 341, 1389, 11, 309, 311, 257, 4556, 3280, 327, 2445, 11, 51268, 51268, 457, 309, 1177, 380, 1871, 437, 309, 307, 337, 586, 13, 51412, 51412, 639, 2445, 2516, 364, 262, 293, 14725, 257, 710, 13, 51558, 51558, 492, 818, 341, 2445, 276, 295, 262, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1563525639527233, "compression_ratio": 1.8, "no_speech_prob": 1.0615425708238035e-05}, {"id": 776, "seek": 213740, "start": 2155.48, "end": 2158.36, "text": " but it doesn't matter what it is for now.", "tokens": [50364, 407, 341, 307, 516, 281, 312, 364, 21769, 10835, 13, 50462, 50462, 400, 550, 934, 300, 11, 456, 311, 516, 50504, 50504, 281, 312, 257, 544, 18894, 10835, 11, 50590, 50590, 597, 307, 1570, 21769, 11, 457, 4317, 767, 3571, 50742, 50742, 281, 1223, 13, 50822, 50822, 583, 718, 385, 722, 365, 264, 24002, 510, 13, 50906, 50906, 407, 718, 311, 584, 321, 362, 257, 955, 3209, 13, 50986, 50986, 400, 1854, 295, 341, 955, 3209, 11, 321, 51062, 51062, 362, 472, 295, 729, 707, 24433, 6828, 13, 51184, 51184, 682, 341, 1389, 11, 309, 311, 257, 4556, 3280, 327, 2445, 11, 51268, 51268, 457, 309, 1177, 380, 1871, 437, 309, 307, 337, 586, 13, 51412, 51412, 639, 2445, 2516, 364, 262, 293, 14725, 257, 710, 13, 51558, 51558, 492, 818, 341, 2445, 276, 295, 262, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1563525639527233, "compression_ratio": 1.8, "no_speech_prob": 1.0615425708238035e-05}, {"id": 777, "seek": 213740, "start": 2158.36, "end": 2161.28, "text": " This function takes an s and produces a z.", "tokens": [50364, 407, 341, 307, 516, 281, 312, 364, 21769, 10835, 13, 50462, 50462, 400, 550, 934, 300, 11, 456, 311, 516, 50504, 50504, 281, 312, 257, 544, 18894, 10835, 11, 50590, 50590, 597, 307, 1570, 21769, 11, 457, 4317, 767, 3571, 50742, 50742, 281, 1223, 13, 50822, 50822, 583, 718, 385, 722, 365, 264, 24002, 510, 13, 50906, 50906, 407, 718, 311, 584, 321, 362, 257, 955, 3209, 13, 50986, 50986, 400, 1854, 295, 341, 955, 3209, 11, 321, 51062, 51062, 362, 472, 295, 729, 707, 24433, 6828, 13, 51184, 51184, 682, 341, 1389, 11, 309, 311, 257, 4556, 3280, 327, 2445, 11, 51268, 51268, 457, 309, 1177, 380, 1871, 437, 309, 307, 337, 586, 13, 51412, 51412, 639, 2445, 2516, 364, 262, 293, 14725, 257, 710, 13, 51558, 51558, 492, 818, 341, 2445, 276, 295, 262, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1563525639527233, "compression_ratio": 1.8, "no_speech_prob": 1.0615425708238035e-05}, {"id": 778, "seek": 213740, "start": 2161.28, "end": 2165.0, "text": " We call this function h of s.", "tokens": [50364, 407, 341, 307, 516, 281, 312, 364, 21769, 10835, 13, 50462, 50462, 400, 550, 934, 300, 11, 456, 311, 516, 50504, 50504, 281, 312, 257, 544, 18894, 10835, 11, 50590, 50590, 597, 307, 1570, 21769, 11, 457, 4317, 767, 3571, 50742, 50742, 281, 1223, 13, 50822, 50822, 583, 718, 385, 722, 365, 264, 24002, 510, 13, 50906, 50906, 407, 718, 311, 584, 321, 362, 257, 955, 3209, 13, 50986, 50986, 400, 1854, 295, 341, 955, 3209, 11, 321, 51062, 51062, 362, 472, 295, 729, 707, 24433, 6828, 13, 51184, 51184, 682, 341, 1389, 11, 309, 311, 257, 4556, 3280, 327, 2445, 11, 51268, 51268, 457, 309, 1177, 380, 1871, 437, 309, 307, 337, 586, 13, 51412, 51412, 639, 2445, 2516, 364, 262, 293, 14725, 257, 710, 13, 51558, 51558, 492, 818, 341, 2445, 276, 295, 262, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1563525639527233, "compression_ratio": 1.8, "no_speech_prob": 1.0615425708238035e-05}, {"id": 779, "seek": 216500, "start": 2165.0, "end": 2172.04, "text": " So when we wiggle z, the cost is going", "tokens": [50364, 407, 562, 321, 33377, 710, 11, 264, 2063, 307, 516, 50716, 50716, 281, 33377, 538, 512, 11275, 13, 50798, 50798, 400, 498, 321, 9845, 264, 261, 24542, 295, 710, 538, 264, 261, 24542, 295, 269, 11, 51006, 51006, 538, 264, 261, 24542, 295, 710, 300, 7700, 309, 11, 51114, 51114, 300, 2709, 505, 264, 14641, 13760, 295, 269, 51226, 51226, 365, 3104, 281, 710, 13, 51274, 51274, 407, 341, 472, 1433, 307, 257, 16235, 295, 269, 365, 3104, 51418, 51418, 281, 439, 264, 710, 311, 294, 264, 3209, 13, 51494, 51494, 400, 456, 311, 472, 6542, 295, 300, 16235, 11, 51592, 51592, 597, 307, 264, 14641, 13760, 295, 264, 2063, 365, 3104, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10290607912787075, "compression_ratio": 1.9514563106796117, "no_speech_prob": 5.954920652584406e-06}, {"id": 780, "seek": 216500, "start": 2172.04, "end": 2173.68, "text": " to wiggle by some quantity.", "tokens": [50364, 407, 562, 321, 33377, 710, 11, 264, 2063, 307, 516, 50716, 50716, 281, 33377, 538, 512, 11275, 13, 50798, 50798, 400, 498, 321, 9845, 264, 261, 24542, 295, 710, 538, 264, 261, 24542, 295, 269, 11, 51006, 51006, 538, 264, 261, 24542, 295, 710, 300, 7700, 309, 11, 51114, 51114, 300, 2709, 505, 264, 14641, 13760, 295, 269, 51226, 51226, 365, 3104, 281, 710, 13, 51274, 51274, 407, 341, 472, 1433, 307, 257, 16235, 295, 269, 365, 3104, 51418, 51418, 281, 439, 264, 710, 311, 294, 264, 3209, 13, 51494, 51494, 400, 456, 311, 472, 6542, 295, 300, 16235, 11, 51592, 51592, 597, 307, 264, 14641, 13760, 295, 264, 2063, 365, 3104, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10290607912787075, "compression_ratio": 1.9514563106796117, "no_speech_prob": 5.954920652584406e-06}, {"id": 781, "seek": 216500, "start": 2173.68, "end": 2177.84, "text": " And if we divide the wiggling of z by the wiggling of c,", "tokens": [50364, 407, 562, 321, 33377, 710, 11, 264, 2063, 307, 516, 50716, 50716, 281, 33377, 538, 512, 11275, 13, 50798, 50798, 400, 498, 321, 9845, 264, 261, 24542, 295, 710, 538, 264, 261, 24542, 295, 269, 11, 51006, 51006, 538, 264, 261, 24542, 295, 710, 300, 7700, 309, 11, 51114, 51114, 300, 2709, 505, 264, 14641, 13760, 295, 269, 51226, 51226, 365, 3104, 281, 710, 13, 51274, 51274, 407, 341, 472, 1433, 307, 257, 16235, 295, 269, 365, 3104, 51418, 51418, 281, 439, 264, 710, 311, 294, 264, 3209, 13, 51494, 51494, 400, 456, 311, 472, 6542, 295, 300, 16235, 11, 51592, 51592, 597, 307, 264, 14641, 13760, 295, 264, 2063, 365, 3104, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10290607912787075, "compression_ratio": 1.9514563106796117, "no_speech_prob": 5.954920652584406e-06}, {"id": 782, "seek": 216500, "start": 2177.84, "end": 2180.0, "text": " by the wiggling of z that causes it,", "tokens": [50364, 407, 562, 321, 33377, 710, 11, 264, 2063, 307, 516, 50716, 50716, 281, 33377, 538, 512, 11275, 13, 50798, 50798, 400, 498, 321, 9845, 264, 261, 24542, 295, 710, 538, 264, 261, 24542, 295, 269, 11, 51006, 51006, 538, 264, 261, 24542, 295, 710, 300, 7700, 309, 11, 51114, 51114, 300, 2709, 505, 264, 14641, 13760, 295, 269, 51226, 51226, 365, 3104, 281, 710, 13, 51274, 51274, 407, 341, 472, 1433, 307, 257, 16235, 295, 269, 365, 3104, 51418, 51418, 281, 439, 264, 710, 311, 294, 264, 3209, 13, 51494, 51494, 400, 456, 311, 472, 6542, 295, 300, 16235, 11, 51592, 51592, 597, 307, 264, 14641, 13760, 295, 264, 2063, 365, 3104, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10290607912787075, "compression_ratio": 1.9514563106796117, "no_speech_prob": 5.954920652584406e-06}, {"id": 783, "seek": 216500, "start": 2180.0, "end": 2182.24, "text": " that gives us the partial derivative of c", "tokens": [50364, 407, 562, 321, 33377, 710, 11, 264, 2063, 307, 516, 50716, 50716, 281, 33377, 538, 512, 11275, 13, 50798, 50798, 400, 498, 321, 9845, 264, 261, 24542, 295, 710, 538, 264, 261, 24542, 295, 269, 11, 51006, 51006, 538, 264, 261, 24542, 295, 710, 300, 7700, 309, 11, 51114, 51114, 300, 2709, 505, 264, 14641, 13760, 295, 269, 51226, 51226, 365, 3104, 281, 710, 13, 51274, 51274, 407, 341, 472, 1433, 307, 257, 16235, 295, 269, 365, 3104, 51418, 51418, 281, 439, 264, 710, 311, 294, 264, 3209, 13, 51494, 51494, 400, 456, 311, 472, 6542, 295, 300, 16235, 11, 51592, 51592, 597, 307, 264, 14641, 13760, 295, 264, 2063, 365, 3104, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10290607912787075, "compression_ratio": 1.9514563106796117, "no_speech_prob": 5.954920652584406e-06}, {"id": 784, "seek": 216500, "start": 2182.24, "end": 2183.2, "text": " with respect to z.", "tokens": [50364, 407, 562, 321, 33377, 710, 11, 264, 2063, 307, 516, 50716, 50716, 281, 33377, 538, 512, 11275, 13, 50798, 50798, 400, 498, 321, 9845, 264, 261, 24542, 295, 710, 538, 264, 261, 24542, 295, 269, 11, 51006, 51006, 538, 264, 261, 24542, 295, 710, 300, 7700, 309, 11, 51114, 51114, 300, 2709, 505, 264, 14641, 13760, 295, 269, 51226, 51226, 365, 3104, 281, 710, 13, 51274, 51274, 407, 341, 472, 1433, 307, 257, 16235, 295, 269, 365, 3104, 51418, 51418, 281, 439, 264, 710, 311, 294, 264, 3209, 13, 51494, 51494, 400, 456, 311, 472, 6542, 295, 300, 16235, 11, 51592, 51592, 597, 307, 264, 14641, 13760, 295, 264, 2063, 365, 3104, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10290607912787075, "compression_ratio": 1.9514563106796117, "no_speech_prob": 5.954920652584406e-06}, {"id": 785, "seek": 216500, "start": 2183.2, "end": 2186.08, "text": " So this one term is a gradient of c with respect", "tokens": [50364, 407, 562, 321, 33377, 710, 11, 264, 2063, 307, 516, 50716, 50716, 281, 33377, 538, 512, 11275, 13, 50798, 50798, 400, 498, 321, 9845, 264, 261, 24542, 295, 710, 538, 264, 261, 24542, 295, 269, 11, 51006, 51006, 538, 264, 261, 24542, 295, 710, 300, 7700, 309, 11, 51114, 51114, 300, 2709, 505, 264, 14641, 13760, 295, 269, 51226, 51226, 365, 3104, 281, 710, 13, 51274, 51274, 407, 341, 472, 1433, 307, 257, 16235, 295, 269, 365, 3104, 51418, 51418, 281, 439, 264, 710, 311, 294, 264, 3209, 13, 51494, 51494, 400, 456, 311, 472, 6542, 295, 300, 16235, 11, 51592, 51592, 597, 307, 264, 14641, 13760, 295, 264, 2063, 365, 3104, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10290607912787075, "compression_ratio": 1.9514563106796117, "no_speech_prob": 5.954920652584406e-06}, {"id": 786, "seek": 216500, "start": 2186.08, "end": 2187.6, "text": " to all the z's in the network.", "tokens": [50364, 407, 562, 321, 33377, 710, 11, 264, 2063, 307, 516, 50716, 50716, 281, 33377, 538, 512, 11275, 13, 50798, 50798, 400, 498, 321, 9845, 264, 261, 24542, 295, 710, 538, 264, 261, 24542, 295, 269, 11, 51006, 51006, 538, 264, 261, 24542, 295, 710, 300, 7700, 309, 11, 51114, 51114, 300, 2709, 505, 264, 14641, 13760, 295, 269, 51226, 51226, 365, 3104, 281, 710, 13, 51274, 51274, 407, 341, 472, 1433, 307, 257, 16235, 295, 269, 365, 3104, 51418, 51418, 281, 439, 264, 710, 311, 294, 264, 3209, 13, 51494, 51494, 400, 456, 311, 472, 6542, 295, 300, 16235, 11, 51592, 51592, 597, 307, 264, 14641, 13760, 295, 264, 2063, 365, 3104, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10290607912787075, "compression_ratio": 1.9514563106796117, "no_speech_prob": 5.954920652584406e-06}, {"id": 787, "seek": 216500, "start": 2187.6, "end": 2189.56, "text": " And there's one component of that gradient,", "tokens": [50364, 407, 562, 321, 33377, 710, 11, 264, 2063, 307, 516, 50716, 50716, 281, 33377, 538, 512, 11275, 13, 50798, 50798, 400, 498, 321, 9845, 264, 261, 24542, 295, 710, 538, 264, 261, 24542, 295, 269, 11, 51006, 51006, 538, 264, 261, 24542, 295, 710, 300, 7700, 309, 11, 51114, 51114, 300, 2709, 505, 264, 14641, 13760, 295, 269, 51226, 51226, 365, 3104, 281, 710, 13, 51274, 51274, 407, 341, 472, 1433, 307, 257, 16235, 295, 269, 365, 3104, 51418, 51418, 281, 439, 264, 710, 311, 294, 264, 3209, 13, 51494, 51494, 400, 456, 311, 472, 6542, 295, 300, 16235, 11, 51592, 51592, 597, 307, 264, 14641, 13760, 295, 264, 2063, 365, 3104, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10290607912787075, "compression_ratio": 1.9514563106796117, "no_speech_prob": 5.954920652584406e-06}, {"id": 788, "seek": 216500, "start": 2189.56, "end": 2194.32, "text": " which is the partial derivative of the cost with respect", "tokens": [50364, 407, 562, 321, 33377, 710, 11, 264, 2063, 307, 516, 50716, 50716, 281, 33377, 538, 512, 11275, 13, 50798, 50798, 400, 498, 321, 9845, 264, 261, 24542, 295, 710, 538, 264, 261, 24542, 295, 269, 11, 51006, 51006, 538, 264, 261, 24542, 295, 710, 300, 7700, 309, 11, 51114, 51114, 300, 2709, 505, 264, 14641, 13760, 295, 269, 51226, 51226, 365, 3104, 281, 710, 13, 51274, 51274, 407, 341, 472, 1433, 307, 257, 16235, 295, 269, 365, 3104, 51418, 51418, 281, 439, 264, 710, 311, 294, 264, 3209, 13, 51494, 51494, 400, 456, 311, 472, 6542, 295, 300, 16235, 11, 51592, 51592, 597, 307, 264, 14641, 13760, 295, 264, 2063, 365, 3104, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10290607912787075, "compression_ratio": 1.9514563106796117, "no_speech_prob": 5.954920652584406e-06}, {"id": 789, "seek": 219432, "start": 2194.32, "end": 2197.6800000000003, "text": " to that single variable z inside the network.", "tokens": [50364, 281, 300, 2167, 7006, 710, 1854, 264, 3209, 13, 50532, 50532, 400, 300, 534, 16203, 577, 709, 269, 576, 33377, 50660, 50660, 498, 321, 261, 6249, 1493, 710, 538, 512, 2372, 13, 50812, 50812, 492, 9845, 264, 261, 24542, 295, 269, 538, 264, 261, 24542, 295, 710, 11, 50918, 50918, 293, 300, 2709, 505, 264, 14641, 13760, 51008, 51008, 295, 269, 365, 3104, 281, 710, 13, 51136, 51136, 639, 307, 406, 577, 321, 434, 516, 281, 14722, 264, 16235, 295, 269, 51300, 51300, 365, 3104, 281, 710, 11, 457, 341, 307, 257, 3855, 295, 437, 51476, 51476, 309, 307, 3410, 671, 11, 420, 46506, 11, 2831, 13, 51670, 51670, 407, 718, 311, 6552, 300, 321, 458, 341, 11275, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1264051344336533, "compression_ratio": 1.7120622568093384, "no_speech_prob": 6.643145752605051e-06}, {"id": 790, "seek": 219432, "start": 2197.6800000000003, "end": 2200.2400000000002, "text": " And that really indicates how much c would wiggle", "tokens": [50364, 281, 300, 2167, 7006, 710, 1854, 264, 3209, 13, 50532, 50532, 400, 300, 534, 16203, 577, 709, 269, 576, 33377, 50660, 50660, 498, 321, 261, 6249, 1493, 710, 538, 512, 2372, 13, 50812, 50812, 492, 9845, 264, 261, 24542, 295, 269, 538, 264, 261, 24542, 295, 710, 11, 50918, 50918, 293, 300, 2709, 505, 264, 14641, 13760, 51008, 51008, 295, 269, 365, 3104, 281, 710, 13, 51136, 51136, 639, 307, 406, 577, 321, 434, 516, 281, 14722, 264, 16235, 295, 269, 51300, 51300, 365, 3104, 281, 710, 11, 457, 341, 307, 257, 3855, 295, 437, 51476, 51476, 309, 307, 3410, 671, 11, 420, 46506, 11, 2831, 13, 51670, 51670, 407, 718, 311, 6552, 300, 321, 458, 341, 11275, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1264051344336533, "compression_ratio": 1.7120622568093384, "no_speech_prob": 6.643145752605051e-06}, {"id": 791, "seek": 219432, "start": 2200.2400000000002, "end": 2203.28, "text": " if we wiggled z by some amount.", "tokens": [50364, 281, 300, 2167, 7006, 710, 1854, 264, 3209, 13, 50532, 50532, 400, 300, 534, 16203, 577, 709, 269, 576, 33377, 50660, 50660, 498, 321, 261, 6249, 1493, 710, 538, 512, 2372, 13, 50812, 50812, 492, 9845, 264, 261, 24542, 295, 269, 538, 264, 261, 24542, 295, 710, 11, 50918, 50918, 293, 300, 2709, 505, 264, 14641, 13760, 51008, 51008, 295, 269, 365, 3104, 281, 710, 13, 51136, 51136, 639, 307, 406, 577, 321, 434, 516, 281, 14722, 264, 16235, 295, 269, 51300, 51300, 365, 3104, 281, 710, 11, 457, 341, 307, 257, 3855, 295, 437, 51476, 51476, 309, 307, 3410, 671, 11, 420, 46506, 11, 2831, 13, 51670, 51670, 407, 718, 311, 6552, 300, 321, 458, 341, 11275, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1264051344336533, "compression_ratio": 1.7120622568093384, "no_speech_prob": 6.643145752605051e-06}, {"id": 792, "seek": 219432, "start": 2203.28, "end": 2205.4, "text": " We divide the wiggling of c by the wiggling of z,", "tokens": [50364, 281, 300, 2167, 7006, 710, 1854, 264, 3209, 13, 50532, 50532, 400, 300, 534, 16203, 577, 709, 269, 576, 33377, 50660, 50660, 498, 321, 261, 6249, 1493, 710, 538, 512, 2372, 13, 50812, 50812, 492, 9845, 264, 261, 24542, 295, 269, 538, 264, 261, 24542, 295, 710, 11, 50918, 50918, 293, 300, 2709, 505, 264, 14641, 13760, 51008, 51008, 295, 269, 365, 3104, 281, 710, 13, 51136, 51136, 639, 307, 406, 577, 321, 434, 516, 281, 14722, 264, 16235, 295, 269, 51300, 51300, 365, 3104, 281, 710, 11, 457, 341, 307, 257, 3855, 295, 437, 51476, 51476, 309, 307, 3410, 671, 11, 420, 46506, 11, 2831, 13, 51670, 51670, 407, 718, 311, 6552, 300, 321, 458, 341, 11275, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1264051344336533, "compression_ratio": 1.7120622568093384, "no_speech_prob": 6.643145752605051e-06}, {"id": 793, "seek": 219432, "start": 2205.4, "end": 2207.2000000000003, "text": " and that gives us the partial derivative", "tokens": [50364, 281, 300, 2167, 7006, 710, 1854, 264, 3209, 13, 50532, 50532, 400, 300, 534, 16203, 577, 709, 269, 576, 33377, 50660, 50660, 498, 321, 261, 6249, 1493, 710, 538, 512, 2372, 13, 50812, 50812, 492, 9845, 264, 261, 24542, 295, 269, 538, 264, 261, 24542, 295, 710, 11, 50918, 50918, 293, 300, 2709, 505, 264, 14641, 13760, 51008, 51008, 295, 269, 365, 3104, 281, 710, 13, 51136, 51136, 639, 307, 406, 577, 321, 434, 516, 281, 14722, 264, 16235, 295, 269, 51300, 51300, 365, 3104, 281, 710, 11, 457, 341, 307, 257, 3855, 295, 437, 51476, 51476, 309, 307, 3410, 671, 11, 420, 46506, 11, 2831, 13, 51670, 51670, 407, 718, 311, 6552, 300, 321, 458, 341, 11275, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1264051344336533, "compression_ratio": 1.7120622568093384, "no_speech_prob": 6.643145752605051e-06}, {"id": 794, "seek": 219432, "start": 2207.2000000000003, "end": 2209.76, "text": " of c with respect to z.", "tokens": [50364, 281, 300, 2167, 7006, 710, 1854, 264, 3209, 13, 50532, 50532, 400, 300, 534, 16203, 577, 709, 269, 576, 33377, 50660, 50660, 498, 321, 261, 6249, 1493, 710, 538, 512, 2372, 13, 50812, 50812, 492, 9845, 264, 261, 24542, 295, 269, 538, 264, 261, 24542, 295, 710, 11, 50918, 50918, 293, 300, 2709, 505, 264, 14641, 13760, 51008, 51008, 295, 269, 365, 3104, 281, 710, 13, 51136, 51136, 639, 307, 406, 577, 321, 434, 516, 281, 14722, 264, 16235, 295, 269, 51300, 51300, 365, 3104, 281, 710, 11, 457, 341, 307, 257, 3855, 295, 437, 51476, 51476, 309, 307, 3410, 671, 11, 420, 46506, 11, 2831, 13, 51670, 51670, 407, 718, 311, 6552, 300, 321, 458, 341, 11275, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1264051344336533, "compression_ratio": 1.7120622568093384, "no_speech_prob": 6.643145752605051e-06}, {"id": 795, "seek": 219432, "start": 2209.76, "end": 2213.04, "text": " This is not how we're going to compute the gradient of c", "tokens": [50364, 281, 300, 2167, 7006, 710, 1854, 264, 3209, 13, 50532, 50532, 400, 300, 534, 16203, 577, 709, 269, 576, 33377, 50660, 50660, 498, 321, 261, 6249, 1493, 710, 538, 512, 2372, 13, 50812, 50812, 492, 9845, 264, 261, 24542, 295, 269, 538, 264, 261, 24542, 295, 710, 11, 50918, 50918, 293, 300, 2709, 505, 264, 14641, 13760, 51008, 51008, 295, 269, 365, 3104, 281, 710, 13, 51136, 51136, 639, 307, 406, 577, 321, 434, 516, 281, 14722, 264, 16235, 295, 269, 51300, 51300, 365, 3104, 281, 710, 11, 457, 341, 307, 257, 3855, 295, 437, 51476, 51476, 309, 307, 3410, 671, 11, 420, 46506, 11, 2831, 13, 51670, 51670, 407, 718, 311, 6552, 300, 321, 458, 341, 11275, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1264051344336533, "compression_ratio": 1.7120622568093384, "no_speech_prob": 6.643145752605051e-06}, {"id": 796, "seek": 219432, "start": 2213.04, "end": 2216.56, "text": " with respect to z, but this is a description of what", "tokens": [50364, 281, 300, 2167, 7006, 710, 1854, 264, 3209, 13, 50532, 50532, 400, 300, 534, 16203, 577, 709, 269, 576, 33377, 50660, 50660, 498, 321, 261, 6249, 1493, 710, 538, 512, 2372, 13, 50812, 50812, 492, 9845, 264, 261, 24542, 295, 269, 538, 264, 261, 24542, 295, 710, 11, 50918, 50918, 293, 300, 2709, 505, 264, 14641, 13760, 51008, 51008, 295, 269, 365, 3104, 281, 710, 13, 51136, 51136, 639, 307, 406, 577, 321, 434, 516, 281, 14722, 264, 16235, 295, 269, 51300, 51300, 365, 3104, 281, 710, 11, 457, 341, 307, 257, 3855, 295, 437, 51476, 51476, 309, 307, 3410, 671, 11, 420, 46506, 11, 2831, 13, 51670, 51670, 407, 718, 311, 6552, 300, 321, 458, 341, 11275, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1264051344336533, "compression_ratio": 1.7120622568093384, "no_speech_prob": 6.643145752605051e-06}, {"id": 797, "seek": 219432, "start": 2216.56, "end": 2220.44, "text": " it is conceptually, or intuitively, rather.", "tokens": [50364, 281, 300, 2167, 7006, 710, 1854, 264, 3209, 13, 50532, 50532, 400, 300, 534, 16203, 577, 709, 269, 576, 33377, 50660, 50660, 498, 321, 261, 6249, 1493, 710, 538, 512, 2372, 13, 50812, 50812, 492, 9845, 264, 261, 24542, 295, 269, 538, 264, 261, 24542, 295, 710, 11, 50918, 50918, 293, 300, 2709, 505, 264, 14641, 13760, 51008, 51008, 295, 269, 365, 3104, 281, 710, 13, 51136, 51136, 639, 307, 406, 577, 321, 434, 516, 281, 14722, 264, 16235, 295, 269, 51300, 51300, 365, 3104, 281, 710, 11, 457, 341, 307, 257, 3855, 295, 437, 51476, 51476, 309, 307, 3410, 671, 11, 420, 46506, 11, 2831, 13, 51670, 51670, 407, 718, 311, 6552, 300, 321, 458, 341, 11275, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1264051344336533, "compression_ratio": 1.7120622568093384, "no_speech_prob": 6.643145752605051e-06}, {"id": 798, "seek": 219432, "start": 2220.44, "end": 2222.2400000000002, "text": " So let's assume that we know this quantity.", "tokens": [50364, 281, 300, 2167, 7006, 710, 1854, 264, 3209, 13, 50532, 50532, 400, 300, 534, 16203, 577, 709, 269, 576, 33377, 50660, 50660, 498, 321, 261, 6249, 1493, 710, 538, 512, 2372, 13, 50812, 50812, 492, 9845, 264, 261, 24542, 295, 269, 538, 264, 261, 24542, 295, 710, 11, 50918, 50918, 293, 300, 2709, 505, 264, 14641, 13760, 51008, 51008, 295, 269, 365, 3104, 281, 710, 13, 51136, 51136, 639, 307, 406, 577, 321, 434, 516, 281, 14722, 264, 16235, 295, 269, 51300, 51300, 365, 3104, 281, 710, 11, 457, 341, 307, 257, 3855, 295, 437, 51476, 51476, 309, 307, 3410, 671, 11, 420, 46506, 11, 2831, 13, 51670, 51670, 407, 718, 311, 6552, 300, 321, 458, 341, 11275, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1264051344336533, "compression_ratio": 1.7120622568093384, "no_speech_prob": 6.643145752605051e-06}, {"id": 799, "seek": 222224, "start": 2222.24, "end": 2226.9599999999996, "text": " So we know the partial derivative of c with respect to z.", "tokens": [50364, 407, 321, 458, 264, 14641, 13760, 295, 269, 365, 3104, 281, 710, 13, 50600, 50600, 407, 269, 365, 3104, 281, 710, 307, 341, 11275, 510, 11, 274, 66, 670, 9758, 13, 50900, 50900, 407, 519, 295, 9758, 382, 264, 261, 24542, 295, 710, 293, 274, 66, 51040, 51040, 382, 264, 261, 24542, 295, 269, 13, 51098, 51098, 9886, 482, 472, 538, 264, 661, 11, 293, 291, 483, 264, 14641, 13760, 51244, 51244, 295, 269, 365, 3104, 281, 710, 13, 51292, 51446, 708, 321, 362, 510, 307, 437, 321, 362, 281, 3079, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14450017025596218, "compression_ratio": 1.8950617283950617, "no_speech_prob": 6.240661150513915e-06}, {"id": 800, "seek": 222224, "start": 2226.9599999999996, "end": 2232.9599999999996, "text": " So c with respect to z is this quantity here, dc over dz.", "tokens": [50364, 407, 321, 458, 264, 14641, 13760, 295, 269, 365, 3104, 281, 710, 13, 50600, 50600, 407, 269, 365, 3104, 281, 710, 307, 341, 11275, 510, 11, 274, 66, 670, 9758, 13, 50900, 50900, 407, 519, 295, 9758, 382, 264, 261, 24542, 295, 710, 293, 274, 66, 51040, 51040, 382, 264, 261, 24542, 295, 269, 13, 51098, 51098, 9886, 482, 472, 538, 264, 661, 11, 293, 291, 483, 264, 14641, 13760, 51244, 51244, 295, 269, 365, 3104, 281, 710, 13, 51292, 51446, 708, 321, 362, 510, 307, 437, 321, 362, 281, 3079, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14450017025596218, "compression_ratio": 1.8950617283950617, "no_speech_prob": 6.240661150513915e-06}, {"id": 801, "seek": 222224, "start": 2232.9599999999996, "end": 2235.7599999999998, "text": " So think of dz as the wiggling of z and dc", "tokens": [50364, 407, 321, 458, 264, 14641, 13760, 295, 269, 365, 3104, 281, 710, 13, 50600, 50600, 407, 269, 365, 3104, 281, 710, 307, 341, 11275, 510, 11, 274, 66, 670, 9758, 13, 50900, 50900, 407, 519, 295, 9758, 382, 264, 261, 24542, 295, 710, 293, 274, 66, 51040, 51040, 382, 264, 261, 24542, 295, 269, 13, 51098, 51098, 9886, 482, 472, 538, 264, 661, 11, 293, 291, 483, 264, 14641, 13760, 51244, 51244, 295, 269, 365, 3104, 281, 710, 13, 51292, 51446, 708, 321, 362, 510, 307, 437, 321, 362, 281, 3079, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14450017025596218, "compression_ratio": 1.8950617283950617, "no_speech_prob": 6.240661150513915e-06}, {"id": 802, "seek": 222224, "start": 2235.7599999999998, "end": 2236.9199999999996, "text": " as the wiggling of c.", "tokens": [50364, 407, 321, 458, 264, 14641, 13760, 295, 269, 365, 3104, 281, 710, 13, 50600, 50600, 407, 269, 365, 3104, 281, 710, 307, 341, 11275, 510, 11, 274, 66, 670, 9758, 13, 50900, 50900, 407, 519, 295, 9758, 382, 264, 261, 24542, 295, 710, 293, 274, 66, 51040, 51040, 382, 264, 261, 24542, 295, 269, 13, 51098, 51098, 9886, 482, 472, 538, 264, 661, 11, 293, 291, 483, 264, 14641, 13760, 51244, 51244, 295, 269, 365, 3104, 281, 710, 13, 51292, 51446, 708, 321, 362, 510, 307, 437, 321, 362, 281, 3079, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14450017025596218, "compression_ratio": 1.8950617283950617, "no_speech_prob": 6.240661150513915e-06}, {"id": 803, "seek": 222224, "start": 2236.9199999999996, "end": 2239.8399999999997, "text": " Divide one by the other, and you get the partial derivative", "tokens": [50364, 407, 321, 458, 264, 14641, 13760, 295, 269, 365, 3104, 281, 710, 13, 50600, 50600, 407, 269, 365, 3104, 281, 710, 307, 341, 11275, 510, 11, 274, 66, 670, 9758, 13, 50900, 50900, 407, 519, 295, 9758, 382, 264, 261, 24542, 295, 710, 293, 274, 66, 51040, 51040, 382, 264, 261, 24542, 295, 269, 13, 51098, 51098, 9886, 482, 472, 538, 264, 661, 11, 293, 291, 483, 264, 14641, 13760, 51244, 51244, 295, 269, 365, 3104, 281, 710, 13, 51292, 51446, 708, 321, 362, 510, 307, 437, 321, 362, 281, 3079, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14450017025596218, "compression_ratio": 1.8950617283950617, "no_speech_prob": 6.240661150513915e-06}, {"id": 804, "seek": 222224, "start": 2239.8399999999997, "end": 2240.7999999999997, "text": " of c with respect to z.", "tokens": [50364, 407, 321, 458, 264, 14641, 13760, 295, 269, 365, 3104, 281, 710, 13, 50600, 50600, 407, 269, 365, 3104, 281, 710, 307, 341, 11275, 510, 11, 274, 66, 670, 9758, 13, 50900, 50900, 407, 519, 295, 9758, 382, 264, 261, 24542, 295, 710, 293, 274, 66, 51040, 51040, 382, 264, 261, 24542, 295, 269, 13, 51098, 51098, 9886, 482, 472, 538, 264, 661, 11, 293, 291, 483, 264, 14641, 13760, 51244, 51244, 295, 269, 365, 3104, 281, 710, 13, 51292, 51446, 708, 321, 362, 510, 307, 437, 321, 362, 281, 3079, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14450017025596218, "compression_ratio": 1.8950617283950617, "no_speech_prob": 6.240661150513915e-06}, {"id": 805, "seek": 222224, "start": 2243.8799999999997, "end": 2249.7999999999997, "text": " What we have here is what we have to apply", "tokens": [50364, 407, 321, 458, 264, 14641, 13760, 295, 269, 365, 3104, 281, 710, 13, 50600, 50600, 407, 269, 365, 3104, 281, 710, 307, 341, 11275, 510, 11, 274, 66, 670, 9758, 13, 50900, 50900, 407, 519, 295, 9758, 382, 264, 261, 24542, 295, 710, 293, 274, 66, 51040, 51040, 382, 264, 261, 24542, 295, 269, 13, 51098, 51098, 9886, 482, 472, 538, 264, 661, 11, 293, 291, 483, 264, 14641, 13760, 51244, 51244, 295, 269, 365, 3104, 281, 710, 13, 51292, 51446, 708, 321, 362, 510, 307, 437, 321, 362, 281, 3079, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14450017025596218, "compression_ratio": 1.8950617283950617, "no_speech_prob": 6.240661150513915e-06}, {"id": 806, "seek": 224980, "start": 2249.8, "end": 2253.44, "text": " is chain rule, the rule that tells us", "tokens": [50364, 307, 5021, 4978, 11, 264, 4978, 300, 5112, 505, 50546, 50546, 577, 281, 14722, 264, 13760, 295, 257, 2445, 18204, 50728, 50728, 295, 732, 2609, 6828, 300, 321, 3079, 472, 934, 264, 661, 13, 50866, 50866, 407, 1604, 11, 5021, 4978, 11, 498, 291, 362, 257, 2445, 290, 11, 50982, 50982, 550, 291, 3079, 309, 281, 1071, 2445, 276, 11, 51100, 51100, 597, 307, 2445, 295, 264, 13075, 262, 11, 51180, 51180, 293, 291, 528, 264, 13760, 295, 309, 13, 51312, 51312, 440, 13760, 295, 300, 307, 2681, 281, 264, 13760, 295, 290, 51422, 51422, 412, 935, 276, 295, 262, 17207, 538, 264, 13760, 295, 276, 412, 935, 262, 13, 51724, 51724, 663, 311, 5021, 4978, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.14962754367796843, "compression_ratio": 2.0358744394618835, "no_speech_prob": 3.943025512853637e-05}, {"id": 807, "seek": 224980, "start": 2253.44, "end": 2257.0800000000004, "text": " how to compute the derivative of a function composed", "tokens": [50364, 307, 5021, 4978, 11, 264, 4978, 300, 5112, 505, 50546, 50546, 577, 281, 14722, 264, 13760, 295, 257, 2445, 18204, 50728, 50728, 295, 732, 2609, 6828, 300, 321, 3079, 472, 934, 264, 661, 13, 50866, 50866, 407, 1604, 11, 5021, 4978, 11, 498, 291, 362, 257, 2445, 290, 11, 50982, 50982, 550, 291, 3079, 309, 281, 1071, 2445, 276, 11, 51100, 51100, 597, 307, 2445, 295, 264, 13075, 262, 11, 51180, 51180, 293, 291, 528, 264, 13760, 295, 309, 13, 51312, 51312, 440, 13760, 295, 300, 307, 2681, 281, 264, 13760, 295, 290, 51422, 51422, 412, 935, 276, 295, 262, 17207, 538, 264, 13760, 295, 276, 412, 935, 262, 13, 51724, 51724, 663, 311, 5021, 4978, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.14962754367796843, "compression_ratio": 2.0358744394618835, "no_speech_prob": 3.943025512853637e-05}, {"id": 808, "seek": 224980, "start": 2257.0800000000004, "end": 2259.84, "text": " of two individual functions that we apply one after the other.", "tokens": [50364, 307, 5021, 4978, 11, 264, 4978, 300, 5112, 505, 50546, 50546, 577, 281, 14722, 264, 13760, 295, 257, 2445, 18204, 50728, 50728, 295, 732, 2609, 6828, 300, 321, 3079, 472, 934, 264, 661, 13, 50866, 50866, 407, 1604, 11, 5021, 4978, 11, 498, 291, 362, 257, 2445, 290, 11, 50982, 50982, 550, 291, 3079, 309, 281, 1071, 2445, 276, 11, 51100, 51100, 597, 307, 2445, 295, 264, 13075, 262, 11, 51180, 51180, 293, 291, 528, 264, 13760, 295, 309, 13, 51312, 51312, 440, 13760, 295, 300, 307, 2681, 281, 264, 13760, 295, 290, 51422, 51422, 412, 935, 276, 295, 262, 17207, 538, 264, 13760, 295, 276, 412, 935, 262, 13, 51724, 51724, 663, 311, 5021, 4978, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.14962754367796843, "compression_ratio": 2.0358744394618835, "no_speech_prob": 3.943025512853637e-05}, {"id": 809, "seek": 224980, "start": 2259.84, "end": 2262.1600000000003, "text": " So remember, chain rule, if you have a function g,", "tokens": [50364, 307, 5021, 4978, 11, 264, 4978, 300, 5112, 505, 50546, 50546, 577, 281, 14722, 264, 13760, 295, 257, 2445, 18204, 50728, 50728, 295, 732, 2609, 6828, 300, 321, 3079, 472, 934, 264, 661, 13, 50866, 50866, 407, 1604, 11, 5021, 4978, 11, 498, 291, 362, 257, 2445, 290, 11, 50982, 50982, 550, 291, 3079, 309, 281, 1071, 2445, 276, 11, 51100, 51100, 597, 307, 2445, 295, 264, 13075, 262, 11, 51180, 51180, 293, 291, 528, 264, 13760, 295, 309, 13, 51312, 51312, 440, 13760, 295, 300, 307, 2681, 281, 264, 13760, 295, 290, 51422, 51422, 412, 935, 276, 295, 262, 17207, 538, 264, 13760, 295, 276, 412, 935, 262, 13, 51724, 51724, 663, 311, 5021, 4978, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.14962754367796843, "compression_ratio": 2.0358744394618835, "no_speech_prob": 3.943025512853637e-05}, {"id": 810, "seek": 224980, "start": 2262.1600000000003, "end": 2264.52, "text": " then you apply it to another function h,", "tokens": [50364, 307, 5021, 4978, 11, 264, 4978, 300, 5112, 505, 50546, 50546, 577, 281, 14722, 264, 13760, 295, 257, 2445, 18204, 50728, 50728, 295, 732, 2609, 6828, 300, 321, 3079, 472, 934, 264, 661, 13, 50866, 50866, 407, 1604, 11, 5021, 4978, 11, 498, 291, 362, 257, 2445, 290, 11, 50982, 50982, 550, 291, 3079, 309, 281, 1071, 2445, 276, 11, 51100, 51100, 597, 307, 2445, 295, 264, 13075, 262, 11, 51180, 51180, 293, 291, 528, 264, 13760, 295, 309, 13, 51312, 51312, 440, 13760, 295, 300, 307, 2681, 281, 264, 13760, 295, 290, 51422, 51422, 412, 935, 276, 295, 262, 17207, 538, 264, 13760, 295, 276, 412, 935, 262, 13, 51724, 51724, 663, 311, 5021, 4978, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.14962754367796843, "compression_ratio": 2.0358744394618835, "no_speech_prob": 3.943025512853637e-05}, {"id": 811, "seek": 224980, "start": 2264.52, "end": 2266.1200000000003, "text": " which is function of the parameter s,", "tokens": [50364, 307, 5021, 4978, 11, 264, 4978, 300, 5112, 505, 50546, 50546, 577, 281, 14722, 264, 13760, 295, 257, 2445, 18204, 50728, 50728, 295, 732, 2609, 6828, 300, 321, 3079, 472, 934, 264, 661, 13, 50866, 50866, 407, 1604, 11, 5021, 4978, 11, 498, 291, 362, 257, 2445, 290, 11, 50982, 50982, 550, 291, 3079, 309, 281, 1071, 2445, 276, 11, 51100, 51100, 597, 307, 2445, 295, 264, 13075, 262, 11, 51180, 51180, 293, 291, 528, 264, 13760, 295, 309, 13, 51312, 51312, 440, 13760, 295, 300, 307, 2681, 281, 264, 13760, 295, 290, 51422, 51422, 412, 935, 276, 295, 262, 17207, 538, 264, 13760, 295, 276, 412, 935, 262, 13, 51724, 51724, 663, 311, 5021, 4978, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.14962754367796843, "compression_ratio": 2.0358744394618835, "no_speech_prob": 3.943025512853637e-05}, {"id": 812, "seek": 224980, "start": 2266.1200000000003, "end": 2268.76, "text": " and you want the derivative of it.", "tokens": [50364, 307, 5021, 4978, 11, 264, 4978, 300, 5112, 505, 50546, 50546, 577, 281, 14722, 264, 13760, 295, 257, 2445, 18204, 50728, 50728, 295, 732, 2609, 6828, 300, 321, 3079, 472, 934, 264, 661, 13, 50866, 50866, 407, 1604, 11, 5021, 4978, 11, 498, 291, 362, 257, 2445, 290, 11, 50982, 50982, 550, 291, 3079, 309, 281, 1071, 2445, 276, 11, 51100, 51100, 597, 307, 2445, 295, 264, 13075, 262, 11, 51180, 51180, 293, 291, 528, 264, 13760, 295, 309, 13, 51312, 51312, 440, 13760, 295, 300, 307, 2681, 281, 264, 13760, 295, 290, 51422, 51422, 412, 935, 276, 295, 262, 17207, 538, 264, 13760, 295, 276, 412, 935, 262, 13, 51724, 51724, 663, 311, 5021, 4978, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.14962754367796843, "compression_ratio": 2.0358744394618835, "no_speech_prob": 3.943025512853637e-05}, {"id": 813, "seek": 224980, "start": 2268.76, "end": 2270.96, "text": " The derivative of that is equal to the derivative of g", "tokens": [50364, 307, 5021, 4978, 11, 264, 4978, 300, 5112, 505, 50546, 50546, 577, 281, 14722, 264, 13760, 295, 257, 2445, 18204, 50728, 50728, 295, 732, 2609, 6828, 300, 321, 3079, 472, 934, 264, 661, 13, 50866, 50866, 407, 1604, 11, 5021, 4978, 11, 498, 291, 362, 257, 2445, 290, 11, 50982, 50982, 550, 291, 3079, 309, 281, 1071, 2445, 276, 11, 51100, 51100, 597, 307, 2445, 295, 264, 13075, 262, 11, 51180, 51180, 293, 291, 528, 264, 13760, 295, 309, 13, 51312, 51312, 440, 13760, 295, 300, 307, 2681, 281, 264, 13760, 295, 290, 51422, 51422, 412, 935, 276, 295, 262, 17207, 538, 264, 13760, 295, 276, 412, 935, 262, 13, 51724, 51724, 663, 311, 5021, 4978, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.14962754367796843, "compression_ratio": 2.0358744394618835, "no_speech_prob": 3.943025512853637e-05}, {"id": 814, "seek": 224980, "start": 2270.96, "end": 2277.0, "text": " at point h of s multiplied by the derivative of h at point s.", "tokens": [50364, 307, 5021, 4978, 11, 264, 4978, 300, 5112, 505, 50546, 50546, 577, 281, 14722, 264, 13760, 295, 257, 2445, 18204, 50728, 50728, 295, 732, 2609, 6828, 300, 321, 3079, 472, 934, 264, 661, 13, 50866, 50866, 407, 1604, 11, 5021, 4978, 11, 498, 291, 362, 257, 2445, 290, 11, 50982, 50982, 550, 291, 3079, 309, 281, 1071, 2445, 276, 11, 51100, 51100, 597, 307, 2445, 295, 264, 13075, 262, 11, 51180, 51180, 293, 291, 528, 264, 13760, 295, 309, 13, 51312, 51312, 440, 13760, 295, 300, 307, 2681, 281, 264, 13760, 295, 290, 51422, 51422, 412, 935, 276, 295, 262, 17207, 538, 264, 13760, 295, 276, 412, 935, 262, 13, 51724, 51724, 663, 311, 5021, 4978, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.14962754367796843, "compression_ratio": 2.0358744394618835, "no_speech_prob": 3.943025512853637e-05}, {"id": 815, "seek": 224980, "start": 2277.0, "end": 2278.96, "text": " That's chain rule.", "tokens": [50364, 307, 5021, 4978, 11, 264, 4978, 300, 5112, 505, 50546, 50546, 577, 281, 14722, 264, 13760, 295, 257, 2445, 18204, 50728, 50728, 295, 732, 2609, 6828, 300, 321, 3079, 472, 934, 264, 661, 13, 50866, 50866, 407, 1604, 11, 5021, 4978, 11, 498, 291, 362, 257, 2445, 290, 11, 50982, 50982, 550, 291, 3079, 309, 281, 1071, 2445, 276, 11, 51100, 51100, 597, 307, 2445, 295, 264, 13075, 262, 11, 51180, 51180, 293, 291, 528, 264, 13760, 295, 309, 13, 51312, 51312, 440, 13760, 295, 300, 307, 2681, 281, 264, 13760, 295, 290, 51422, 51422, 412, 935, 276, 295, 262, 17207, 538, 264, 13760, 295, 276, 412, 935, 262, 13, 51724, 51724, 663, 311, 5021, 4978, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.14962754367796843, "compression_ratio": 2.0358744394618835, "no_speech_prob": 3.943025512853637e-05}, {"id": 816, "seek": 227896, "start": 2278.96, "end": 2282.08, "text": " You learned that a few years ago, hopefully.", "tokens": [50364, 509, 3264, 300, 257, 1326, 924, 2057, 11, 4696, 13, 50520, 50520, 823, 11, 498, 286, 528, 281, 2464, 341, 294, 2115, 295, 14641, 13760, 11, 50662, 50662, 309, 311, 264, 912, 551, 13, 50708, 50708, 4100, 831, 13760, 307, 445, 257, 13760, 445, 365, 3104, 50822, 50822, 281, 472, 2167, 7006, 13, 50934, 50934, 407, 286, 576, 2464, 341, 746, 411, 341, 11, 274, 66, 670, 274, 82, 13, 51082, 51082, 407, 269, 534, 307, 264, 1874, 295, 9275, 341, 276, 2445, 281, 262, 51308, 51308, 293, 550, 9275, 512, 9841, 290, 2445, 281, 14722, 269, 11, 51530, 51530, 597, 307, 264, 1472, 295, 264, 3209, 1804, 264, 2063, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12065974525783373, "compression_ratio": 1.7459016393442623, "no_speech_prob": 1.3419095921562985e-05}, {"id": 817, "seek": 227896, "start": 2282.08, "end": 2284.92, "text": " Now, if I want to write this in terms of partial derivative,", "tokens": [50364, 509, 3264, 300, 257, 1326, 924, 2057, 11, 4696, 13, 50520, 50520, 823, 11, 498, 286, 528, 281, 2464, 341, 294, 2115, 295, 14641, 13760, 11, 50662, 50662, 309, 311, 264, 912, 551, 13, 50708, 50708, 4100, 831, 13760, 307, 445, 257, 13760, 445, 365, 3104, 50822, 50822, 281, 472, 2167, 7006, 13, 50934, 50934, 407, 286, 576, 2464, 341, 746, 411, 341, 11, 274, 66, 670, 274, 82, 13, 51082, 51082, 407, 269, 534, 307, 264, 1874, 295, 9275, 341, 276, 2445, 281, 262, 51308, 51308, 293, 550, 9275, 512, 9841, 290, 2445, 281, 14722, 269, 11, 51530, 51530, 597, 307, 264, 1472, 295, 264, 3209, 1804, 264, 2063, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12065974525783373, "compression_ratio": 1.7459016393442623, "no_speech_prob": 1.3419095921562985e-05}, {"id": 818, "seek": 227896, "start": 2284.92, "end": 2285.84, "text": " it's the same thing.", "tokens": [50364, 509, 3264, 300, 257, 1326, 924, 2057, 11, 4696, 13, 50520, 50520, 823, 11, 498, 286, 528, 281, 2464, 341, 294, 2115, 295, 14641, 13760, 11, 50662, 50662, 309, 311, 264, 912, 551, 13, 50708, 50708, 4100, 831, 13760, 307, 445, 257, 13760, 445, 365, 3104, 50822, 50822, 281, 472, 2167, 7006, 13, 50934, 50934, 407, 286, 576, 2464, 341, 746, 411, 341, 11, 274, 66, 670, 274, 82, 13, 51082, 51082, 407, 269, 534, 307, 264, 1874, 295, 9275, 341, 276, 2445, 281, 262, 51308, 51308, 293, 550, 9275, 512, 9841, 290, 2445, 281, 14722, 269, 11, 51530, 51530, 597, 307, 264, 1472, 295, 264, 3209, 1804, 264, 2063, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12065974525783373, "compression_ratio": 1.7459016393442623, "no_speech_prob": 1.3419095921562985e-05}, {"id": 819, "seek": 227896, "start": 2285.84, "end": 2288.12, "text": " Partial derivative is just a derivative just with respect", "tokens": [50364, 509, 3264, 300, 257, 1326, 924, 2057, 11, 4696, 13, 50520, 50520, 823, 11, 498, 286, 528, 281, 2464, 341, 294, 2115, 295, 14641, 13760, 11, 50662, 50662, 309, 311, 264, 912, 551, 13, 50708, 50708, 4100, 831, 13760, 307, 445, 257, 13760, 445, 365, 3104, 50822, 50822, 281, 472, 2167, 7006, 13, 50934, 50934, 407, 286, 576, 2464, 341, 746, 411, 341, 11, 274, 66, 670, 274, 82, 13, 51082, 51082, 407, 269, 534, 307, 264, 1874, 295, 9275, 341, 276, 2445, 281, 262, 51308, 51308, 293, 550, 9275, 512, 9841, 290, 2445, 281, 14722, 269, 11, 51530, 51530, 597, 307, 264, 1472, 295, 264, 3209, 1804, 264, 2063, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12065974525783373, "compression_ratio": 1.7459016393442623, "no_speech_prob": 1.3419095921562985e-05}, {"id": 820, "seek": 227896, "start": 2288.12, "end": 2290.36, "text": " to one single variable.", "tokens": [50364, 509, 3264, 300, 257, 1326, 924, 2057, 11, 4696, 13, 50520, 50520, 823, 11, 498, 286, 528, 281, 2464, 341, 294, 2115, 295, 14641, 13760, 11, 50662, 50662, 309, 311, 264, 912, 551, 13, 50708, 50708, 4100, 831, 13760, 307, 445, 257, 13760, 445, 365, 3104, 50822, 50822, 281, 472, 2167, 7006, 13, 50934, 50934, 407, 286, 576, 2464, 341, 746, 411, 341, 11, 274, 66, 670, 274, 82, 13, 51082, 51082, 407, 269, 534, 307, 264, 1874, 295, 9275, 341, 276, 2445, 281, 262, 51308, 51308, 293, 550, 9275, 512, 9841, 290, 2445, 281, 14722, 269, 11, 51530, 51530, 597, 307, 264, 1472, 295, 264, 3209, 1804, 264, 2063, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12065974525783373, "compression_ratio": 1.7459016393442623, "no_speech_prob": 1.3419095921562985e-05}, {"id": 821, "seek": 227896, "start": 2290.36, "end": 2293.32, "text": " So I would write this something like this, dc over ds.", "tokens": [50364, 509, 3264, 300, 257, 1326, 924, 2057, 11, 4696, 13, 50520, 50520, 823, 11, 498, 286, 528, 281, 2464, 341, 294, 2115, 295, 14641, 13760, 11, 50662, 50662, 309, 311, 264, 912, 551, 13, 50708, 50708, 4100, 831, 13760, 307, 445, 257, 13760, 445, 365, 3104, 50822, 50822, 281, 472, 2167, 7006, 13, 50934, 50934, 407, 286, 576, 2464, 341, 746, 411, 341, 11, 274, 66, 670, 274, 82, 13, 51082, 51082, 407, 269, 534, 307, 264, 1874, 295, 9275, 341, 276, 2445, 281, 262, 51308, 51308, 293, 550, 9275, 512, 9841, 290, 2445, 281, 14722, 269, 11, 51530, 51530, 597, 307, 264, 1472, 295, 264, 3209, 1804, 264, 2063, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12065974525783373, "compression_ratio": 1.7459016393442623, "no_speech_prob": 1.3419095921562985e-05}, {"id": 822, "seek": 227896, "start": 2293.32, "end": 2297.84, "text": " So c really is the result of applying this h function to s", "tokens": [50364, 509, 3264, 300, 257, 1326, 924, 2057, 11, 4696, 13, 50520, 50520, 823, 11, 498, 286, 528, 281, 2464, 341, 294, 2115, 295, 14641, 13760, 11, 50662, 50662, 309, 311, 264, 912, 551, 13, 50708, 50708, 4100, 831, 13760, 307, 445, 257, 13760, 445, 365, 3104, 50822, 50822, 281, 472, 2167, 7006, 13, 50934, 50934, 407, 286, 576, 2464, 341, 746, 411, 341, 11, 274, 66, 670, 274, 82, 13, 51082, 51082, 407, 269, 534, 307, 264, 1874, 295, 9275, 341, 276, 2445, 281, 262, 51308, 51308, 293, 550, 9275, 512, 9841, 290, 2445, 281, 14722, 269, 11, 51530, 51530, 597, 307, 264, 1472, 295, 264, 3209, 1804, 264, 2063, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12065974525783373, "compression_ratio": 1.7459016393442623, "no_speech_prob": 1.3419095921562985e-05}, {"id": 823, "seek": 227896, "start": 2297.84, "end": 2302.28, "text": " and then applying some unknown g function to compute c,", "tokens": [50364, 509, 3264, 300, 257, 1326, 924, 2057, 11, 4696, 13, 50520, 50520, 823, 11, 498, 286, 528, 281, 2464, 341, 294, 2115, 295, 14641, 13760, 11, 50662, 50662, 309, 311, 264, 912, 551, 13, 50708, 50708, 4100, 831, 13760, 307, 445, 257, 13760, 445, 365, 3104, 50822, 50822, 281, 472, 2167, 7006, 13, 50934, 50934, 407, 286, 576, 2464, 341, 746, 411, 341, 11, 274, 66, 670, 274, 82, 13, 51082, 51082, 407, 269, 534, 307, 264, 1874, 295, 9275, 341, 276, 2445, 281, 262, 51308, 51308, 293, 550, 9275, 512, 9841, 290, 2445, 281, 14722, 269, 11, 51530, 51530, 597, 307, 264, 1472, 295, 264, 3209, 1804, 264, 2063, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12065974525783373, "compression_ratio": 1.7459016393442623, "no_speech_prob": 1.3419095921562985e-05}, {"id": 824, "seek": 227896, "start": 2302.28, "end": 2306.16, "text": " which is the rest of the network plus the cost.", "tokens": [50364, 509, 3264, 300, 257, 1326, 924, 2057, 11, 4696, 13, 50520, 50520, 823, 11, 498, 286, 528, 281, 2464, 341, 294, 2115, 295, 14641, 13760, 11, 50662, 50662, 309, 311, 264, 912, 551, 13, 50708, 50708, 4100, 831, 13760, 307, 445, 257, 13760, 445, 365, 3104, 50822, 50822, 281, 472, 2167, 7006, 13, 50934, 50934, 407, 286, 576, 2464, 341, 746, 411, 341, 11, 274, 66, 670, 274, 82, 13, 51082, 51082, 407, 269, 534, 307, 264, 1874, 295, 9275, 341, 276, 2445, 281, 262, 51308, 51308, 293, 550, 9275, 512, 9841, 290, 2445, 281, 14722, 269, 11, 51530, 51530, 597, 307, 264, 1472, 295, 264, 3209, 1804, 264, 2063, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12065974525783373, "compression_ratio": 1.7459016393442623, "no_speech_prob": 1.3419095921562985e-05}, {"id": 825, "seek": 230616, "start": 2306.16, "end": 2308.96, "text": " But I'm just going to call the gradient.", "tokens": [50364, 583, 286, 478, 445, 516, 281, 818, 264, 16235, 13, 50504, 50504, 286, 478, 516, 281, 6552, 300, 341, 274, 66, 670, 9758, 307, 2570, 13, 50778, 50778, 8734, 2729, 309, 281, 385, 13, 50890, 50890, 407, 341, 307, 341, 7006, 510, 322, 264, 558, 13, 50976, 50976, 274, 66, 670, 9758, 307, 2212, 281, 385, 13, 51082, 51082, 400, 286, 528, 281, 14722, 274, 66, 670, 274, 82, 13, 51258, 51258, 407, 437, 286, 643, 281, 360, 307, 2464, 341, 13, 51402, 51402, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 1413, 9758, 670, 274, 82, 13, 51652, 51652, 400, 983, 307, 341, 6575, 2074, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.12701868377955614, "compression_ratio": 1.7253886010362693, "no_speech_prob": 1.1473231097625103e-05}, {"id": 826, "seek": 230616, "start": 2308.96, "end": 2314.44, "text": " I'm going to assume that this dc over dz is known.", "tokens": [50364, 583, 286, 478, 445, 516, 281, 818, 264, 16235, 13, 50504, 50504, 286, 478, 516, 281, 6552, 300, 341, 274, 66, 670, 9758, 307, 2570, 13, 50778, 50778, 8734, 2729, 309, 281, 385, 13, 50890, 50890, 407, 341, 307, 341, 7006, 510, 322, 264, 558, 13, 50976, 50976, 274, 66, 670, 9758, 307, 2212, 281, 385, 13, 51082, 51082, 400, 286, 528, 281, 14722, 274, 66, 670, 274, 82, 13, 51258, 51258, 407, 437, 286, 643, 281, 360, 307, 2464, 341, 13, 51402, 51402, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 1413, 9758, 670, 274, 82, 13, 51652, 51652, 400, 983, 307, 341, 6575, 2074, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.12701868377955614, "compression_ratio": 1.7253886010362693, "no_speech_prob": 1.1473231097625103e-05}, {"id": 827, "seek": 230616, "start": 2314.44, "end": 2316.68, "text": " Someone gave it to me.", "tokens": [50364, 583, 286, 478, 445, 516, 281, 818, 264, 16235, 13, 50504, 50504, 286, 478, 516, 281, 6552, 300, 341, 274, 66, 670, 9758, 307, 2570, 13, 50778, 50778, 8734, 2729, 309, 281, 385, 13, 50890, 50890, 407, 341, 307, 341, 7006, 510, 322, 264, 558, 13, 50976, 50976, 274, 66, 670, 9758, 307, 2212, 281, 385, 13, 51082, 51082, 400, 286, 528, 281, 14722, 274, 66, 670, 274, 82, 13, 51258, 51258, 407, 437, 286, 643, 281, 360, 307, 2464, 341, 13, 51402, 51402, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 1413, 9758, 670, 274, 82, 13, 51652, 51652, 400, 983, 307, 341, 6575, 2074, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.12701868377955614, "compression_ratio": 1.7253886010362693, "no_speech_prob": 1.1473231097625103e-05}, {"id": 828, "seek": 230616, "start": 2316.68, "end": 2318.3999999999996, "text": " So this is this variable here on the right.", "tokens": [50364, 583, 286, 478, 445, 516, 281, 818, 264, 16235, 13, 50504, 50504, 286, 478, 516, 281, 6552, 300, 341, 274, 66, 670, 9758, 307, 2570, 13, 50778, 50778, 8734, 2729, 309, 281, 385, 13, 50890, 50890, 407, 341, 307, 341, 7006, 510, 322, 264, 558, 13, 50976, 50976, 274, 66, 670, 9758, 307, 2212, 281, 385, 13, 51082, 51082, 400, 286, 528, 281, 14722, 274, 66, 670, 274, 82, 13, 51258, 51258, 407, 437, 286, 643, 281, 360, 307, 2464, 341, 13, 51402, 51402, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 1413, 9758, 670, 274, 82, 13, 51652, 51652, 400, 983, 307, 341, 6575, 2074, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.12701868377955614, "compression_ratio": 1.7253886010362693, "no_speech_prob": 1.1473231097625103e-05}, {"id": 829, "seek": 230616, "start": 2318.3999999999996, "end": 2320.52, "text": " dc over dz is given to me.", "tokens": [50364, 583, 286, 478, 445, 516, 281, 818, 264, 16235, 13, 50504, 50504, 286, 478, 516, 281, 6552, 300, 341, 274, 66, 670, 9758, 307, 2570, 13, 50778, 50778, 8734, 2729, 309, 281, 385, 13, 50890, 50890, 407, 341, 307, 341, 7006, 510, 322, 264, 558, 13, 50976, 50976, 274, 66, 670, 9758, 307, 2212, 281, 385, 13, 51082, 51082, 400, 286, 528, 281, 14722, 274, 66, 670, 274, 82, 13, 51258, 51258, 407, 437, 286, 643, 281, 360, 307, 2464, 341, 13, 51402, 51402, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 1413, 9758, 670, 274, 82, 13, 51652, 51652, 400, 983, 307, 341, 6575, 2074, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.12701868377955614, "compression_ratio": 1.7253886010362693, "no_speech_prob": 1.1473231097625103e-05}, {"id": 830, "seek": 230616, "start": 2320.52, "end": 2324.04, "text": " And I want to compute dc over ds.", "tokens": [50364, 583, 286, 478, 445, 516, 281, 818, 264, 16235, 13, 50504, 50504, 286, 478, 516, 281, 6552, 300, 341, 274, 66, 670, 9758, 307, 2570, 13, 50778, 50778, 8734, 2729, 309, 281, 385, 13, 50890, 50890, 407, 341, 307, 341, 7006, 510, 322, 264, 558, 13, 50976, 50976, 274, 66, 670, 9758, 307, 2212, 281, 385, 13, 51082, 51082, 400, 286, 528, 281, 14722, 274, 66, 670, 274, 82, 13, 51258, 51258, 407, 437, 286, 643, 281, 360, 307, 2464, 341, 13, 51402, 51402, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 1413, 9758, 670, 274, 82, 13, 51652, 51652, 400, 983, 307, 341, 6575, 2074, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.12701868377955614, "compression_ratio": 1.7253886010362693, "no_speech_prob": 1.1473231097625103e-05}, {"id": 831, "seek": 230616, "start": 2324.04, "end": 2326.92, "text": " So what I need to do is write this.", "tokens": [50364, 583, 286, 478, 445, 516, 281, 818, 264, 16235, 13, 50504, 50504, 286, 478, 516, 281, 6552, 300, 341, 274, 66, 670, 9758, 307, 2570, 13, 50778, 50778, 8734, 2729, 309, 281, 385, 13, 50890, 50890, 407, 341, 307, 341, 7006, 510, 322, 264, 558, 13, 50976, 50976, 274, 66, 670, 9758, 307, 2212, 281, 385, 13, 51082, 51082, 400, 286, 528, 281, 14722, 274, 66, 670, 274, 82, 13, 51258, 51258, 407, 437, 286, 643, 281, 360, 307, 2464, 341, 13, 51402, 51402, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 1413, 9758, 670, 274, 82, 13, 51652, 51652, 400, 983, 307, 341, 6575, 2074, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.12701868377955614, "compression_ratio": 1.7253886010362693, "no_speech_prob": 1.1473231097625103e-05}, {"id": 832, "seek": 230616, "start": 2326.92, "end": 2331.92, "text": " dc over ds equals dc over dz times dz over ds.", "tokens": [50364, 583, 286, 478, 445, 516, 281, 818, 264, 16235, 13, 50504, 50504, 286, 478, 516, 281, 6552, 300, 341, 274, 66, 670, 9758, 307, 2570, 13, 50778, 50778, 8734, 2729, 309, 281, 385, 13, 50890, 50890, 407, 341, 307, 341, 7006, 510, 322, 264, 558, 13, 50976, 50976, 274, 66, 670, 9758, 307, 2212, 281, 385, 13, 51082, 51082, 400, 286, 528, 281, 14722, 274, 66, 670, 274, 82, 13, 51258, 51258, 407, 437, 286, 643, 281, 360, 307, 2464, 341, 13, 51402, 51402, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 1413, 9758, 670, 274, 82, 13, 51652, 51652, 400, 983, 307, 341, 6575, 2074, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.12701868377955614, "compression_ratio": 1.7253886010362693, "no_speech_prob": 1.1473231097625103e-05}, {"id": 833, "seek": 230616, "start": 2331.92, "end": 2334.3199999999997, "text": " And why is this identity true?", "tokens": [50364, 583, 286, 478, 445, 516, 281, 818, 264, 16235, 13, 50504, 50504, 286, 478, 516, 281, 6552, 300, 341, 274, 66, 670, 9758, 307, 2570, 13, 50778, 50778, 8734, 2729, 309, 281, 385, 13, 50890, 50890, 407, 341, 307, 341, 7006, 510, 322, 264, 558, 13, 50976, 50976, 274, 66, 670, 9758, 307, 2212, 281, 385, 13, 51082, 51082, 400, 286, 528, 281, 14722, 274, 66, 670, 274, 82, 13, 51258, 51258, 407, 437, 286, 643, 281, 360, 307, 2464, 341, 13, 51402, 51402, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 1413, 9758, 670, 274, 82, 13, 51652, 51652, 400, 983, 307, 341, 6575, 2074, 30, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.12701868377955614, "compression_ratio": 1.7253886010362693, "no_speech_prob": 1.1473231097625103e-05}, {"id": 834, "seek": 233432, "start": 2334.32, "end": 2336.28, "text": " It's because I can simplify by dz.", "tokens": [50364, 467, 311, 570, 286, 393, 20460, 538, 9758, 13, 50462, 50462, 467, 311, 382, 2199, 382, 341, 13, 50546, 50546, 407, 291, 362, 26703, 21989, 13, 50750, 50750, 509, 362, 9758, 412, 264, 20687, 510, 11, 50826, 50826, 9758, 412, 264, 30380, 510, 13, 50886, 50886, 3998, 564, 2505, 11, 291, 483, 274, 66, 670, 274, 82, 13, 50982, 50982, 467, 311, 257, 588, 26703, 11, 2199, 6575, 11, 51086, 51086, 597, 307, 1936, 445, 2674, 6456, 51180, 51180, 281, 14641, 33733, 13, 51328, 51328, 823, 11, 9758, 670, 274, 82, 11, 321, 458, 437, 309, 307, 13, 51440, 51440, 467, 311, 445, 276, 5835, 295, 262, 13, 51516, 51516, 467, 311, 445, 264, 13760, 295, 264, 276, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1353743460870558, "compression_ratio": 1.7276785714285714, "no_speech_prob": 7.071635081956629e-06}, {"id": 835, "seek": 233432, "start": 2336.28, "end": 2337.96, "text": " It's as simple as this.", "tokens": [50364, 467, 311, 570, 286, 393, 20460, 538, 9758, 13, 50462, 50462, 467, 311, 382, 2199, 382, 341, 13, 50546, 50546, 407, 291, 362, 26703, 21989, 13, 50750, 50750, 509, 362, 9758, 412, 264, 20687, 510, 11, 50826, 50826, 9758, 412, 264, 30380, 510, 13, 50886, 50886, 3998, 564, 2505, 11, 291, 483, 274, 66, 670, 274, 82, 13, 50982, 50982, 467, 311, 257, 588, 26703, 11, 2199, 6575, 11, 51086, 51086, 597, 307, 1936, 445, 2674, 6456, 51180, 51180, 281, 14641, 33733, 13, 51328, 51328, 823, 11, 9758, 670, 274, 82, 11, 321, 458, 437, 309, 307, 13, 51440, 51440, 467, 311, 445, 276, 5835, 295, 262, 13, 51516, 51516, 467, 311, 445, 264, 13760, 295, 264, 276, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1353743460870558, "compression_ratio": 1.7276785714285714, "no_speech_prob": 7.071635081956629e-06}, {"id": 836, "seek": 233432, "start": 2337.96, "end": 2342.04, "text": " So you have trivial algebra.", "tokens": [50364, 467, 311, 570, 286, 393, 20460, 538, 9758, 13, 50462, 50462, 467, 311, 382, 2199, 382, 341, 13, 50546, 50546, 407, 291, 362, 26703, 21989, 13, 50750, 50750, 509, 362, 9758, 412, 264, 20687, 510, 11, 50826, 50826, 9758, 412, 264, 30380, 510, 13, 50886, 50886, 3998, 564, 2505, 11, 291, 483, 274, 66, 670, 274, 82, 13, 50982, 50982, 467, 311, 257, 588, 26703, 11, 2199, 6575, 11, 51086, 51086, 597, 307, 1936, 445, 2674, 6456, 51180, 51180, 281, 14641, 33733, 13, 51328, 51328, 823, 11, 9758, 670, 274, 82, 11, 321, 458, 437, 309, 307, 13, 51440, 51440, 467, 311, 445, 276, 5835, 295, 262, 13, 51516, 51516, 467, 311, 445, 264, 13760, 295, 264, 276, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1353743460870558, "compression_ratio": 1.7276785714285714, "no_speech_prob": 7.071635081956629e-06}, {"id": 837, "seek": 233432, "start": 2342.04, "end": 2343.56, "text": " You have dz at the denominator here,", "tokens": [50364, 467, 311, 570, 286, 393, 20460, 538, 9758, 13, 50462, 50462, 467, 311, 382, 2199, 382, 341, 13, 50546, 50546, 407, 291, 362, 26703, 21989, 13, 50750, 50750, 509, 362, 9758, 412, 264, 20687, 510, 11, 50826, 50826, 9758, 412, 264, 30380, 510, 13, 50886, 50886, 3998, 564, 2505, 11, 291, 483, 274, 66, 670, 274, 82, 13, 50982, 50982, 467, 311, 257, 588, 26703, 11, 2199, 6575, 11, 51086, 51086, 597, 307, 1936, 445, 2674, 6456, 51180, 51180, 281, 14641, 33733, 13, 51328, 51328, 823, 11, 9758, 670, 274, 82, 11, 321, 458, 437, 309, 307, 13, 51440, 51440, 467, 311, 445, 276, 5835, 295, 262, 13, 51516, 51516, 467, 311, 445, 264, 13760, 295, 264, 276, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1353743460870558, "compression_ratio": 1.7276785714285714, "no_speech_prob": 7.071635081956629e-06}, {"id": 838, "seek": 233432, "start": 2343.56, "end": 2344.76, "text": " dz at the numerator here.", "tokens": [50364, 467, 311, 570, 286, 393, 20460, 538, 9758, 13, 50462, 50462, 467, 311, 382, 2199, 382, 341, 13, 50546, 50546, 407, 291, 362, 26703, 21989, 13, 50750, 50750, 509, 362, 9758, 412, 264, 20687, 510, 11, 50826, 50826, 9758, 412, 264, 30380, 510, 13, 50886, 50886, 3998, 564, 2505, 11, 291, 483, 274, 66, 670, 274, 82, 13, 50982, 50982, 467, 311, 257, 588, 26703, 11, 2199, 6575, 11, 51086, 51086, 597, 307, 1936, 445, 2674, 6456, 51180, 51180, 281, 14641, 33733, 13, 51328, 51328, 823, 11, 9758, 670, 274, 82, 11, 321, 458, 437, 309, 307, 13, 51440, 51440, 467, 311, 445, 276, 5835, 295, 262, 13, 51516, 51516, 467, 311, 445, 264, 13760, 295, 264, 276, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1353743460870558, "compression_ratio": 1.7276785714285714, "no_speech_prob": 7.071635081956629e-06}, {"id": 839, "seek": 233432, "start": 2344.76, "end": 2346.6800000000003, "text": " Simplify, you get dc over ds.", "tokens": [50364, 467, 311, 570, 286, 393, 20460, 538, 9758, 13, 50462, 50462, 467, 311, 382, 2199, 382, 341, 13, 50546, 50546, 407, 291, 362, 26703, 21989, 13, 50750, 50750, 509, 362, 9758, 412, 264, 20687, 510, 11, 50826, 50826, 9758, 412, 264, 30380, 510, 13, 50886, 50886, 3998, 564, 2505, 11, 291, 483, 274, 66, 670, 274, 82, 13, 50982, 50982, 467, 311, 257, 588, 26703, 11, 2199, 6575, 11, 51086, 51086, 597, 307, 1936, 445, 2674, 6456, 51180, 51180, 281, 14641, 33733, 13, 51328, 51328, 823, 11, 9758, 670, 274, 82, 11, 321, 458, 437, 309, 307, 13, 51440, 51440, 467, 311, 445, 276, 5835, 295, 262, 13, 51516, 51516, 467, 311, 445, 264, 13760, 295, 264, 276, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1353743460870558, "compression_ratio": 1.7276785714285714, "no_speech_prob": 7.071635081956629e-06}, {"id": 840, "seek": 233432, "start": 2346.6800000000003, "end": 2348.76, "text": " It's a very trivial, simple identity,", "tokens": [50364, 467, 311, 570, 286, 393, 20460, 538, 9758, 13, 50462, 50462, 467, 311, 382, 2199, 382, 341, 13, 50546, 50546, 407, 291, 362, 26703, 21989, 13, 50750, 50750, 509, 362, 9758, 412, 264, 20687, 510, 11, 50826, 50826, 9758, 412, 264, 30380, 510, 13, 50886, 50886, 3998, 564, 2505, 11, 291, 483, 274, 66, 670, 274, 82, 13, 50982, 50982, 467, 311, 257, 588, 26703, 11, 2199, 6575, 11, 51086, 51086, 597, 307, 1936, 445, 2674, 6456, 51180, 51180, 281, 14641, 33733, 13, 51328, 51328, 823, 11, 9758, 670, 274, 82, 11, 321, 458, 437, 309, 307, 13, 51440, 51440, 467, 311, 445, 276, 5835, 295, 262, 13, 51516, 51516, 467, 311, 445, 264, 13760, 295, 264, 276, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1353743460870558, "compression_ratio": 1.7276785714285714, "no_speech_prob": 7.071635081956629e-06}, {"id": 841, "seek": 233432, "start": 2348.76, "end": 2350.6400000000003, "text": " which is basically just general applied", "tokens": [50364, 467, 311, 570, 286, 393, 20460, 538, 9758, 13, 50462, 50462, 467, 311, 382, 2199, 382, 341, 13, 50546, 50546, 407, 291, 362, 26703, 21989, 13, 50750, 50750, 509, 362, 9758, 412, 264, 20687, 510, 11, 50826, 50826, 9758, 412, 264, 30380, 510, 13, 50886, 50886, 3998, 564, 2505, 11, 291, 483, 274, 66, 670, 274, 82, 13, 50982, 50982, 467, 311, 257, 588, 26703, 11, 2199, 6575, 11, 51086, 51086, 597, 307, 1936, 445, 2674, 6456, 51180, 51180, 281, 14641, 33733, 13, 51328, 51328, 823, 11, 9758, 670, 274, 82, 11, 321, 458, 437, 309, 307, 13, 51440, 51440, 467, 311, 445, 276, 5835, 295, 262, 13, 51516, 51516, 467, 311, 445, 264, 13760, 295, 264, 276, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1353743460870558, "compression_ratio": 1.7276785714285714, "no_speech_prob": 7.071635081956629e-06}, {"id": 842, "seek": 233432, "start": 2350.6400000000003, "end": 2353.6000000000004, "text": " to partial derivatives.", "tokens": [50364, 467, 311, 570, 286, 393, 20460, 538, 9758, 13, 50462, 50462, 467, 311, 382, 2199, 382, 341, 13, 50546, 50546, 407, 291, 362, 26703, 21989, 13, 50750, 50750, 509, 362, 9758, 412, 264, 20687, 510, 11, 50826, 50826, 9758, 412, 264, 30380, 510, 13, 50886, 50886, 3998, 564, 2505, 11, 291, 483, 274, 66, 670, 274, 82, 13, 50982, 50982, 467, 311, 257, 588, 26703, 11, 2199, 6575, 11, 51086, 51086, 597, 307, 1936, 445, 2674, 6456, 51180, 51180, 281, 14641, 33733, 13, 51328, 51328, 823, 11, 9758, 670, 274, 82, 11, 321, 458, 437, 309, 307, 13, 51440, 51440, 467, 311, 445, 276, 5835, 295, 262, 13, 51516, 51516, 467, 311, 445, 264, 13760, 295, 264, 276, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1353743460870558, "compression_ratio": 1.7276785714285714, "no_speech_prob": 7.071635081956629e-06}, {"id": 843, "seek": 233432, "start": 2353.6000000000004, "end": 2355.84, "text": " Now, dz over ds, we know what it is.", "tokens": [50364, 467, 311, 570, 286, 393, 20460, 538, 9758, 13, 50462, 50462, 467, 311, 382, 2199, 382, 341, 13, 50546, 50546, 407, 291, 362, 26703, 21989, 13, 50750, 50750, 509, 362, 9758, 412, 264, 20687, 510, 11, 50826, 50826, 9758, 412, 264, 30380, 510, 13, 50886, 50886, 3998, 564, 2505, 11, 291, 483, 274, 66, 670, 274, 82, 13, 50982, 50982, 467, 311, 257, 588, 26703, 11, 2199, 6575, 11, 51086, 51086, 597, 307, 1936, 445, 2674, 6456, 51180, 51180, 281, 14641, 33733, 13, 51328, 51328, 823, 11, 9758, 670, 274, 82, 11, 321, 458, 437, 309, 307, 13, 51440, 51440, 467, 311, 445, 276, 5835, 295, 262, 13, 51516, 51516, 467, 311, 445, 264, 13760, 295, 264, 276, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1353743460870558, "compression_ratio": 1.7276785714285714, "no_speech_prob": 7.071635081956629e-06}, {"id": 844, "seek": 233432, "start": 2355.84, "end": 2357.36, "text": " It's just h prime of s.", "tokens": [50364, 467, 311, 570, 286, 393, 20460, 538, 9758, 13, 50462, 50462, 467, 311, 382, 2199, 382, 341, 13, 50546, 50546, 407, 291, 362, 26703, 21989, 13, 50750, 50750, 509, 362, 9758, 412, 264, 20687, 510, 11, 50826, 50826, 9758, 412, 264, 30380, 510, 13, 50886, 50886, 3998, 564, 2505, 11, 291, 483, 274, 66, 670, 274, 82, 13, 50982, 50982, 467, 311, 257, 588, 26703, 11, 2199, 6575, 11, 51086, 51086, 597, 307, 1936, 445, 2674, 6456, 51180, 51180, 281, 14641, 33733, 13, 51328, 51328, 823, 11, 9758, 670, 274, 82, 11, 321, 458, 437, 309, 307, 13, 51440, 51440, 467, 311, 445, 276, 5835, 295, 262, 13, 51516, 51516, 467, 311, 445, 264, 13760, 295, 264, 276, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1353743460870558, "compression_ratio": 1.7276785714285714, "no_speech_prob": 7.071635081956629e-06}, {"id": 845, "seek": 233432, "start": 2357.36, "end": 2361.92, "text": " It's just the derivative of the h function.", "tokens": [50364, 467, 311, 570, 286, 393, 20460, 538, 9758, 13, 50462, 50462, 467, 311, 382, 2199, 382, 341, 13, 50546, 50546, 407, 291, 362, 26703, 21989, 13, 50750, 50750, 509, 362, 9758, 412, 264, 20687, 510, 11, 50826, 50826, 9758, 412, 264, 30380, 510, 13, 50886, 50886, 3998, 564, 2505, 11, 291, 483, 274, 66, 670, 274, 82, 13, 50982, 50982, 467, 311, 257, 588, 26703, 11, 2199, 6575, 11, 51086, 51086, 597, 307, 1936, 445, 2674, 6456, 51180, 51180, 281, 14641, 33733, 13, 51328, 51328, 823, 11, 9758, 670, 274, 82, 11, 321, 458, 437, 309, 307, 13, 51440, 51440, 467, 311, 445, 276, 5835, 295, 262, 13, 51516, 51516, 467, 311, 445, 264, 13760, 295, 264, 276, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1353743460870558, "compression_ratio": 1.7276785714285714, "no_speech_prob": 7.071635081956629e-06}, {"id": 846, "seek": 236192, "start": 2361.92, "end": 2365.08, "text": " So we have this formula, dc over ds equals dc over dz,", "tokens": [50364, 407, 321, 362, 341, 8513, 11, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 11, 50522, 50522, 597, 321, 6552, 307, 2570, 11, 1413, 276, 5835, 295, 262, 13, 50678, 50678, 708, 775, 300, 914, 30, 50720, 50720, 663, 1355, 300, 498, 321, 362, 341, 6542, 50848, 50848, 295, 264, 16235, 295, 264, 2063, 2445, 365, 3104, 281, 710, 50960, 50960, 510, 11, 321, 12972, 341, 538, 264, 13760, 295, 264, 276, 2445, 51262, 51262, 412, 935, 262, 11, 264, 912, 935, 262, 300, 321, 632, 510, 13, 51420, 51420, 400, 437, 321, 483, 586, 307, 264, 16235, 295, 264, 2063, 2445, 51594, 51594, 365, 3104, 281, 262, 13, 51692, 51692, 823, 11, 510, 311, 264, 4282, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1000389898976972, "compression_ratio": 1.8716814159292035, "no_speech_prob": 4.860175977228209e-06}, {"id": 847, "seek": 236192, "start": 2365.08, "end": 2368.2000000000003, "text": " which we assume is known, times h prime of s.", "tokens": [50364, 407, 321, 362, 341, 8513, 11, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 11, 50522, 50522, 597, 321, 6552, 307, 2570, 11, 1413, 276, 5835, 295, 262, 13, 50678, 50678, 708, 775, 300, 914, 30, 50720, 50720, 663, 1355, 300, 498, 321, 362, 341, 6542, 50848, 50848, 295, 264, 16235, 295, 264, 2063, 2445, 365, 3104, 281, 710, 50960, 50960, 510, 11, 321, 12972, 341, 538, 264, 13760, 295, 264, 276, 2445, 51262, 51262, 412, 935, 262, 11, 264, 912, 935, 262, 300, 321, 632, 510, 13, 51420, 51420, 400, 437, 321, 483, 586, 307, 264, 16235, 295, 264, 2063, 2445, 51594, 51594, 365, 3104, 281, 262, 13, 51692, 51692, 823, 11, 510, 311, 264, 4282, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1000389898976972, "compression_ratio": 1.8716814159292035, "no_speech_prob": 4.860175977228209e-06}, {"id": 848, "seek": 236192, "start": 2368.2000000000003, "end": 2369.04, "text": " What does that mean?", "tokens": [50364, 407, 321, 362, 341, 8513, 11, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 11, 50522, 50522, 597, 321, 6552, 307, 2570, 11, 1413, 276, 5835, 295, 262, 13, 50678, 50678, 708, 775, 300, 914, 30, 50720, 50720, 663, 1355, 300, 498, 321, 362, 341, 6542, 50848, 50848, 295, 264, 16235, 295, 264, 2063, 2445, 365, 3104, 281, 710, 50960, 50960, 510, 11, 321, 12972, 341, 538, 264, 13760, 295, 264, 276, 2445, 51262, 51262, 412, 935, 262, 11, 264, 912, 935, 262, 300, 321, 632, 510, 13, 51420, 51420, 400, 437, 321, 483, 586, 307, 264, 16235, 295, 264, 2063, 2445, 51594, 51594, 365, 3104, 281, 262, 13, 51692, 51692, 823, 11, 510, 311, 264, 4282, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1000389898976972, "compression_ratio": 1.8716814159292035, "no_speech_prob": 4.860175977228209e-06}, {"id": 849, "seek": 236192, "start": 2369.04, "end": 2371.6, "text": " That means that if we have this component", "tokens": [50364, 407, 321, 362, 341, 8513, 11, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 11, 50522, 50522, 597, 321, 6552, 307, 2570, 11, 1413, 276, 5835, 295, 262, 13, 50678, 50678, 708, 775, 300, 914, 30, 50720, 50720, 663, 1355, 300, 498, 321, 362, 341, 6542, 50848, 50848, 295, 264, 16235, 295, 264, 2063, 2445, 365, 3104, 281, 710, 50960, 50960, 510, 11, 321, 12972, 341, 538, 264, 13760, 295, 264, 276, 2445, 51262, 51262, 412, 935, 262, 11, 264, 912, 935, 262, 300, 321, 632, 510, 13, 51420, 51420, 400, 437, 321, 483, 586, 307, 264, 16235, 295, 264, 2063, 2445, 51594, 51594, 365, 3104, 281, 262, 13, 51692, 51692, 823, 11, 510, 311, 264, 4282, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1000389898976972, "compression_ratio": 1.8716814159292035, "no_speech_prob": 4.860175977228209e-06}, {"id": 850, "seek": 236192, "start": 2371.6, "end": 2373.84, "text": " of the gradient of the cost function with respect to z", "tokens": [50364, 407, 321, 362, 341, 8513, 11, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 11, 50522, 50522, 597, 321, 6552, 307, 2570, 11, 1413, 276, 5835, 295, 262, 13, 50678, 50678, 708, 775, 300, 914, 30, 50720, 50720, 663, 1355, 300, 498, 321, 362, 341, 6542, 50848, 50848, 295, 264, 16235, 295, 264, 2063, 2445, 365, 3104, 281, 710, 50960, 50960, 510, 11, 321, 12972, 341, 538, 264, 13760, 295, 264, 276, 2445, 51262, 51262, 412, 935, 262, 11, 264, 912, 935, 262, 300, 321, 632, 510, 13, 51420, 51420, 400, 437, 321, 483, 586, 307, 264, 16235, 295, 264, 2063, 2445, 51594, 51594, 365, 3104, 281, 262, 13, 51692, 51692, 823, 11, 510, 311, 264, 4282, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1000389898976972, "compression_ratio": 1.8716814159292035, "no_speech_prob": 4.860175977228209e-06}, {"id": 851, "seek": 236192, "start": 2373.84, "end": 2379.88, "text": " here, we multiply this by the derivative of the h function", "tokens": [50364, 407, 321, 362, 341, 8513, 11, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 11, 50522, 50522, 597, 321, 6552, 307, 2570, 11, 1413, 276, 5835, 295, 262, 13, 50678, 50678, 708, 775, 300, 914, 30, 50720, 50720, 663, 1355, 300, 498, 321, 362, 341, 6542, 50848, 50848, 295, 264, 16235, 295, 264, 2063, 2445, 365, 3104, 281, 710, 50960, 50960, 510, 11, 321, 12972, 341, 538, 264, 13760, 295, 264, 276, 2445, 51262, 51262, 412, 935, 262, 11, 264, 912, 935, 262, 300, 321, 632, 510, 13, 51420, 51420, 400, 437, 321, 483, 586, 307, 264, 16235, 295, 264, 2063, 2445, 51594, 51594, 365, 3104, 281, 262, 13, 51692, 51692, 823, 11, 510, 311, 264, 4282, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1000389898976972, "compression_ratio": 1.8716814159292035, "no_speech_prob": 4.860175977228209e-06}, {"id": 852, "seek": 236192, "start": 2379.88, "end": 2383.04, "text": " at point s, the same point s that we had here.", "tokens": [50364, 407, 321, 362, 341, 8513, 11, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 11, 50522, 50522, 597, 321, 6552, 307, 2570, 11, 1413, 276, 5835, 295, 262, 13, 50678, 50678, 708, 775, 300, 914, 30, 50720, 50720, 663, 1355, 300, 498, 321, 362, 341, 6542, 50848, 50848, 295, 264, 16235, 295, 264, 2063, 2445, 365, 3104, 281, 710, 50960, 50960, 510, 11, 321, 12972, 341, 538, 264, 13760, 295, 264, 276, 2445, 51262, 51262, 412, 935, 262, 11, 264, 912, 935, 262, 300, 321, 632, 510, 13, 51420, 51420, 400, 437, 321, 483, 586, 307, 264, 16235, 295, 264, 2063, 2445, 51594, 51594, 365, 3104, 281, 262, 13, 51692, 51692, 823, 11, 510, 311, 264, 4282, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1000389898976972, "compression_ratio": 1.8716814159292035, "no_speech_prob": 4.860175977228209e-06}, {"id": 853, "seek": 236192, "start": 2383.04, "end": 2386.52, "text": " And what we get now is the gradient of the cost function", "tokens": [50364, 407, 321, 362, 341, 8513, 11, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 11, 50522, 50522, 597, 321, 6552, 307, 2570, 11, 1413, 276, 5835, 295, 262, 13, 50678, 50678, 708, 775, 300, 914, 30, 50720, 50720, 663, 1355, 300, 498, 321, 362, 341, 6542, 50848, 50848, 295, 264, 16235, 295, 264, 2063, 2445, 365, 3104, 281, 710, 50960, 50960, 510, 11, 321, 12972, 341, 538, 264, 13760, 295, 264, 276, 2445, 51262, 51262, 412, 935, 262, 11, 264, 912, 935, 262, 300, 321, 632, 510, 13, 51420, 51420, 400, 437, 321, 483, 586, 307, 264, 16235, 295, 264, 2063, 2445, 51594, 51594, 365, 3104, 281, 262, 13, 51692, 51692, 823, 11, 510, 311, 264, 4282, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1000389898976972, "compression_ratio": 1.8716814159292035, "no_speech_prob": 4.860175977228209e-06}, {"id": 854, "seek": 236192, "start": 2386.52, "end": 2388.48, "text": " with respect to s.", "tokens": [50364, 407, 321, 362, 341, 8513, 11, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 11, 50522, 50522, 597, 321, 6552, 307, 2570, 11, 1413, 276, 5835, 295, 262, 13, 50678, 50678, 708, 775, 300, 914, 30, 50720, 50720, 663, 1355, 300, 498, 321, 362, 341, 6542, 50848, 50848, 295, 264, 16235, 295, 264, 2063, 2445, 365, 3104, 281, 710, 50960, 50960, 510, 11, 321, 12972, 341, 538, 264, 13760, 295, 264, 276, 2445, 51262, 51262, 412, 935, 262, 11, 264, 912, 935, 262, 300, 321, 632, 510, 13, 51420, 51420, 400, 437, 321, 483, 586, 307, 264, 16235, 295, 264, 2063, 2445, 51594, 51594, 365, 3104, 281, 262, 13, 51692, 51692, 823, 11, 510, 311, 264, 4282, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1000389898976972, "compression_ratio": 1.8716814159292035, "no_speech_prob": 4.860175977228209e-06}, {"id": 855, "seek": 236192, "start": 2388.48, "end": 2389.64, "text": " Now, here's the trick.", "tokens": [50364, 407, 321, 362, 341, 8513, 11, 274, 66, 670, 274, 82, 6915, 274, 66, 670, 9758, 11, 50522, 50522, 597, 321, 6552, 307, 2570, 11, 1413, 276, 5835, 295, 262, 13, 50678, 50678, 708, 775, 300, 914, 30, 50720, 50720, 663, 1355, 300, 498, 321, 362, 341, 6542, 50848, 50848, 295, 264, 16235, 295, 264, 2063, 2445, 365, 3104, 281, 710, 50960, 50960, 510, 11, 321, 12972, 341, 538, 264, 13760, 295, 264, 276, 2445, 51262, 51262, 412, 935, 262, 11, 264, 912, 935, 262, 300, 321, 632, 510, 13, 51420, 51420, 400, 437, 321, 483, 586, 307, 264, 16235, 295, 264, 2063, 2445, 51594, 51594, 365, 3104, 281, 262, 13, 51692, 51692, 823, 11, 510, 311, 264, 4282, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1000389898976972, "compression_ratio": 1.8716814159292035, "no_speech_prob": 4.860175977228209e-06}, {"id": 856, "seek": 238964, "start": 2389.64, "end": 2392.08, "text": " If we had a chain of those h functions,", "tokens": [50364, 759, 321, 632, 257, 5021, 295, 729, 276, 6828, 11, 50486, 50486, 321, 727, 1066, 12425, 990, 341, 16235, 12204, 50606, 50606, 538, 445, 30955, 538, 264, 13760, 295, 439, 729, 276, 50724, 50724, 6828, 516, 12204, 13, 50800, 50800, 400, 300, 311, 983, 309, 311, 1219, 646, 38377, 13, 50994, 50994, 407, 309, 311, 445, 257, 8496, 3861, 295, 5021, 4978, 13, 51162, 51162, 400, 498, 291, 528, 281, 13447, 1803, 295, 341, 11, 51266, 51266, 291, 393, 1190, 807, 341, 1558, 295, 40468, 399, 13, 51406, 51406, 759, 286, 683, 327, 2285, 262, 538, 512, 2158, 11, 309, 311, 51560, 51560, 516, 281, 683, 327, 2285, 710, 538, 512, 2158, 2681, 281, 274, 82, 1413, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.09895409040214602, "compression_ratio": 1.7519685039370079, "no_speech_prob": 9.223193956131581e-06}, {"id": 857, "seek": 238964, "start": 2392.08, "end": 2394.48, "text": " we could keep propagating this gradient backwards", "tokens": [50364, 759, 321, 632, 257, 5021, 295, 729, 276, 6828, 11, 50486, 50486, 321, 727, 1066, 12425, 990, 341, 16235, 12204, 50606, 50606, 538, 445, 30955, 538, 264, 13760, 295, 439, 729, 276, 50724, 50724, 6828, 516, 12204, 13, 50800, 50800, 400, 300, 311, 983, 309, 311, 1219, 646, 38377, 13, 50994, 50994, 407, 309, 311, 445, 257, 8496, 3861, 295, 5021, 4978, 13, 51162, 51162, 400, 498, 291, 528, 281, 13447, 1803, 295, 341, 11, 51266, 51266, 291, 393, 1190, 807, 341, 1558, 295, 40468, 399, 13, 51406, 51406, 759, 286, 683, 327, 2285, 262, 538, 512, 2158, 11, 309, 311, 51560, 51560, 516, 281, 683, 327, 2285, 710, 538, 512, 2158, 2681, 281, 274, 82, 1413, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.09895409040214602, "compression_ratio": 1.7519685039370079, "no_speech_prob": 9.223193956131581e-06}, {"id": 858, "seek": 238964, "start": 2394.48, "end": 2396.8399999999997, "text": " by just multiplying by the derivative of all those h", "tokens": [50364, 759, 321, 632, 257, 5021, 295, 729, 276, 6828, 11, 50486, 50486, 321, 727, 1066, 12425, 990, 341, 16235, 12204, 50606, 50606, 538, 445, 30955, 538, 264, 13760, 295, 439, 729, 276, 50724, 50724, 6828, 516, 12204, 13, 50800, 50800, 400, 300, 311, 983, 309, 311, 1219, 646, 38377, 13, 50994, 50994, 407, 309, 311, 445, 257, 8496, 3861, 295, 5021, 4978, 13, 51162, 51162, 400, 498, 291, 528, 281, 13447, 1803, 295, 341, 11, 51266, 51266, 291, 393, 1190, 807, 341, 1558, 295, 40468, 399, 13, 51406, 51406, 759, 286, 683, 327, 2285, 262, 538, 512, 2158, 11, 309, 311, 51560, 51560, 516, 281, 683, 327, 2285, 710, 538, 512, 2158, 2681, 281, 274, 82, 1413, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.09895409040214602, "compression_ratio": 1.7519685039370079, "no_speech_prob": 9.223193956131581e-06}, {"id": 859, "seek": 238964, "start": 2396.8399999999997, "end": 2398.3599999999997, "text": " functions going backwards.", "tokens": [50364, 759, 321, 632, 257, 5021, 295, 729, 276, 6828, 11, 50486, 50486, 321, 727, 1066, 12425, 990, 341, 16235, 12204, 50606, 50606, 538, 445, 30955, 538, 264, 13760, 295, 439, 729, 276, 50724, 50724, 6828, 516, 12204, 13, 50800, 50800, 400, 300, 311, 983, 309, 311, 1219, 646, 38377, 13, 50994, 50994, 407, 309, 311, 445, 257, 8496, 3861, 295, 5021, 4978, 13, 51162, 51162, 400, 498, 291, 528, 281, 13447, 1803, 295, 341, 11, 51266, 51266, 291, 393, 1190, 807, 341, 1558, 295, 40468, 399, 13, 51406, 51406, 759, 286, 683, 327, 2285, 262, 538, 512, 2158, 11, 309, 311, 51560, 51560, 516, 281, 683, 327, 2285, 710, 538, 512, 2158, 2681, 281, 274, 82, 1413, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.09895409040214602, "compression_ratio": 1.7519685039370079, "no_speech_prob": 9.223193956131581e-06}, {"id": 860, "seek": 238964, "start": 2398.3599999999997, "end": 2402.24, "text": " And that's why it's called back propagation.", "tokens": [50364, 759, 321, 632, 257, 5021, 295, 729, 276, 6828, 11, 50486, 50486, 321, 727, 1066, 12425, 990, 341, 16235, 12204, 50606, 50606, 538, 445, 30955, 538, 264, 13760, 295, 439, 729, 276, 50724, 50724, 6828, 516, 12204, 13, 50800, 50800, 400, 300, 311, 983, 309, 311, 1219, 646, 38377, 13, 50994, 50994, 407, 309, 311, 445, 257, 8496, 3861, 295, 5021, 4978, 13, 51162, 51162, 400, 498, 291, 528, 281, 13447, 1803, 295, 341, 11, 51266, 51266, 291, 393, 1190, 807, 341, 1558, 295, 40468, 399, 13, 51406, 51406, 759, 286, 683, 327, 2285, 262, 538, 512, 2158, 11, 309, 311, 51560, 51560, 516, 281, 683, 327, 2285, 710, 538, 512, 2158, 2681, 281, 274, 82, 1413, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.09895409040214602, "compression_ratio": 1.7519685039370079, "no_speech_prob": 9.223193956131581e-06}, {"id": 861, "seek": 238964, "start": 2402.24, "end": 2405.6, "text": " So it's just a practical application of chain rule.", "tokens": [50364, 759, 321, 632, 257, 5021, 295, 729, 276, 6828, 11, 50486, 50486, 321, 727, 1066, 12425, 990, 341, 16235, 12204, 50606, 50606, 538, 445, 30955, 538, 264, 13760, 295, 439, 729, 276, 50724, 50724, 6828, 516, 12204, 13, 50800, 50800, 400, 300, 311, 983, 309, 311, 1219, 646, 38377, 13, 50994, 50994, 407, 309, 311, 445, 257, 8496, 3861, 295, 5021, 4978, 13, 51162, 51162, 400, 498, 291, 528, 281, 13447, 1803, 295, 341, 11, 51266, 51266, 291, 393, 1190, 807, 341, 1558, 295, 40468, 399, 13, 51406, 51406, 759, 286, 683, 327, 2285, 262, 538, 512, 2158, 11, 309, 311, 51560, 51560, 516, 281, 683, 327, 2285, 710, 538, 512, 2158, 2681, 281, 274, 82, 1413, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.09895409040214602, "compression_ratio": 1.7519685039370079, "no_speech_prob": 9.223193956131581e-06}, {"id": 862, "seek": 238964, "start": 2405.6, "end": 2407.68, "text": " And if you want to convince yourself of this,", "tokens": [50364, 759, 321, 632, 257, 5021, 295, 729, 276, 6828, 11, 50486, 50486, 321, 727, 1066, 12425, 990, 341, 16235, 12204, 50606, 50606, 538, 445, 30955, 538, 264, 13760, 295, 439, 729, 276, 50724, 50724, 6828, 516, 12204, 13, 50800, 50800, 400, 300, 311, 983, 309, 311, 1219, 646, 38377, 13, 50994, 50994, 407, 309, 311, 445, 257, 8496, 3861, 295, 5021, 4978, 13, 51162, 51162, 400, 498, 291, 528, 281, 13447, 1803, 295, 341, 11, 51266, 51266, 291, 393, 1190, 807, 341, 1558, 295, 40468, 399, 13, 51406, 51406, 759, 286, 683, 327, 2285, 262, 538, 512, 2158, 11, 309, 311, 51560, 51560, 516, 281, 683, 327, 2285, 710, 538, 512, 2158, 2681, 281, 274, 82, 1413, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.09895409040214602, "compression_ratio": 1.7519685039370079, "no_speech_prob": 9.223193956131581e-06}, {"id": 863, "seek": 238964, "start": 2407.68, "end": 2410.48, "text": " you can run through this idea of perturbation.", "tokens": [50364, 759, 321, 632, 257, 5021, 295, 729, 276, 6828, 11, 50486, 50486, 321, 727, 1066, 12425, 990, 341, 16235, 12204, 50606, 50606, 538, 445, 30955, 538, 264, 13760, 295, 439, 729, 276, 50724, 50724, 6828, 516, 12204, 13, 50800, 50800, 400, 300, 311, 983, 309, 311, 1219, 646, 38377, 13, 50994, 50994, 407, 309, 311, 445, 257, 8496, 3861, 295, 5021, 4978, 13, 51162, 51162, 400, 498, 291, 528, 281, 13447, 1803, 295, 341, 11, 51266, 51266, 291, 393, 1190, 807, 341, 1558, 295, 40468, 399, 13, 51406, 51406, 759, 286, 683, 327, 2285, 262, 538, 512, 2158, 11, 309, 311, 51560, 51560, 516, 281, 683, 327, 2285, 710, 538, 512, 2158, 2681, 281, 274, 82, 1413, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.09895409040214602, "compression_ratio": 1.7519685039370079, "no_speech_prob": 9.223193956131581e-06}, {"id": 864, "seek": 238964, "start": 2410.48, "end": 2413.56, "text": " If I twiddle s by some value, it's", "tokens": [50364, 759, 321, 632, 257, 5021, 295, 729, 276, 6828, 11, 50486, 50486, 321, 727, 1066, 12425, 990, 341, 16235, 12204, 50606, 50606, 538, 445, 30955, 538, 264, 13760, 295, 439, 729, 276, 50724, 50724, 6828, 516, 12204, 13, 50800, 50800, 400, 300, 311, 983, 309, 311, 1219, 646, 38377, 13, 50994, 50994, 407, 309, 311, 445, 257, 8496, 3861, 295, 5021, 4978, 13, 51162, 51162, 400, 498, 291, 528, 281, 13447, 1803, 295, 341, 11, 51266, 51266, 291, 393, 1190, 807, 341, 1558, 295, 40468, 399, 13, 51406, 51406, 759, 286, 683, 327, 2285, 262, 538, 512, 2158, 11, 309, 311, 51560, 51560, 516, 281, 683, 327, 2285, 710, 538, 512, 2158, 2681, 281, 274, 82, 1413, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.09895409040214602, "compression_ratio": 1.7519685039370079, "no_speech_prob": 9.223193956131581e-06}, {"id": 865, "seek": 238964, "start": 2413.56, "end": 2419.0, "text": " going to twiddle z by some value equal to ds times", "tokens": [50364, 759, 321, 632, 257, 5021, 295, 729, 276, 6828, 11, 50486, 50486, 321, 727, 1066, 12425, 990, 341, 16235, 12204, 50606, 50606, 538, 445, 30955, 538, 264, 13760, 295, 439, 729, 276, 50724, 50724, 6828, 516, 12204, 13, 50800, 50800, 400, 300, 311, 983, 309, 311, 1219, 646, 38377, 13, 50994, 50994, 407, 309, 311, 445, 257, 8496, 3861, 295, 5021, 4978, 13, 51162, 51162, 400, 498, 291, 528, 281, 13447, 1803, 295, 341, 11, 51266, 51266, 291, 393, 1190, 807, 341, 1558, 295, 40468, 399, 13, 51406, 51406, 759, 286, 683, 327, 2285, 262, 538, 512, 2158, 11, 309, 311, 51560, 51560, 516, 281, 683, 327, 2285, 710, 538, 512, 2158, 2681, 281, 274, 82, 1413, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.09895409040214602, "compression_ratio": 1.7519685039370079, "no_speech_prob": 9.223193956131581e-06}, {"id": 866, "seek": 241900, "start": 2419.0, "end": 2422.12, "text": " h prime of s, basically the slope of s.", "tokens": [50364, 276, 5835, 295, 262, 11, 1936, 264, 13525, 295, 262, 13, 50520, 50520, 407, 9758, 6915, 276, 5835, 295, 262, 1413, 274, 82, 13, 50718, 50718, 400, 550, 286, 478, 516, 281, 362, 281, 12972, 341, 538, 274, 66, 670, 9758, 13, 50930, 50930, 400, 370, 286, 39568, 264, 2115, 13, 51042, 51042, 400, 286, 483, 4258, 300, 341, 8513, 11, 274, 66, 670, 274, 82, 51328, 51328, 6915, 274, 66, 670, 9758, 1413, 276, 5835, 295, 262, 13, 51558, 51558, 407, 321, 632, 1071, 4478, 294, 527, 2120, 388, 11167, 2533, 11, 51668, 51668, 597, 390, 264, 8213, 2408, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12612184797014508, "compression_ratio": 1.6871794871794872, "no_speech_prob": 8.664523193147033e-06}, {"id": 867, "seek": 241900, "start": 2422.12, "end": 2426.08, "text": " So dz equals h prime of s times ds.", "tokens": [50364, 276, 5835, 295, 262, 11, 1936, 264, 13525, 295, 262, 13, 50520, 50520, 407, 9758, 6915, 276, 5835, 295, 262, 1413, 274, 82, 13, 50718, 50718, 400, 550, 286, 478, 516, 281, 362, 281, 12972, 341, 538, 274, 66, 670, 9758, 13, 50930, 50930, 400, 370, 286, 39568, 264, 2115, 13, 51042, 51042, 400, 286, 483, 4258, 300, 341, 8513, 11, 274, 66, 670, 274, 82, 51328, 51328, 6915, 274, 66, 670, 9758, 1413, 276, 5835, 295, 262, 13, 51558, 51558, 407, 321, 632, 1071, 4478, 294, 527, 2120, 388, 11167, 2533, 11, 51668, 51668, 597, 390, 264, 8213, 2408, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12612184797014508, "compression_ratio": 1.6871794871794872, "no_speech_prob": 8.664523193147033e-06}, {"id": 868, "seek": 241900, "start": 2426.08, "end": 2430.32, "text": " And then I'm going to have to multiply this by dc over dz.", "tokens": [50364, 276, 5835, 295, 262, 11, 1936, 264, 13525, 295, 262, 13, 50520, 50520, 407, 9758, 6915, 276, 5835, 295, 262, 1413, 274, 82, 13, 50718, 50718, 400, 550, 286, 478, 516, 281, 362, 281, 12972, 341, 538, 274, 66, 670, 9758, 13, 50930, 50930, 400, 370, 286, 39568, 264, 2115, 13, 51042, 51042, 400, 286, 483, 4258, 300, 341, 8513, 11, 274, 66, 670, 274, 82, 51328, 51328, 6915, 274, 66, 670, 9758, 1413, 276, 5835, 295, 262, 13, 51558, 51558, 407, 321, 632, 1071, 4478, 294, 527, 2120, 388, 11167, 2533, 11, 51668, 51668, 597, 390, 264, 8213, 2408, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12612184797014508, "compression_ratio": 1.6871794871794872, "no_speech_prob": 8.664523193147033e-06}, {"id": 869, "seek": 241900, "start": 2430.32, "end": 2432.56, "text": " And so I rearrange the terms.", "tokens": [50364, 276, 5835, 295, 262, 11, 1936, 264, 13525, 295, 262, 13, 50520, 50520, 407, 9758, 6915, 276, 5835, 295, 262, 1413, 274, 82, 13, 50718, 50718, 400, 550, 286, 478, 516, 281, 362, 281, 12972, 341, 538, 274, 66, 670, 9758, 13, 50930, 50930, 400, 370, 286, 39568, 264, 2115, 13, 51042, 51042, 400, 286, 483, 4258, 300, 341, 8513, 11, 274, 66, 670, 274, 82, 51328, 51328, 6915, 274, 66, 670, 9758, 1413, 276, 5835, 295, 262, 13, 51558, 51558, 407, 321, 632, 1071, 4478, 294, 527, 2120, 388, 11167, 2533, 11, 51668, 51668, 597, 390, 264, 8213, 2408, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12612184797014508, "compression_ratio": 1.6871794871794872, "no_speech_prob": 8.664523193147033e-06}, {"id": 870, "seek": 241900, "start": 2432.56, "end": 2438.28, "text": " And I get immediately that this formula, dc over ds", "tokens": [50364, 276, 5835, 295, 262, 11, 1936, 264, 13525, 295, 262, 13, 50520, 50520, 407, 9758, 6915, 276, 5835, 295, 262, 1413, 274, 82, 13, 50718, 50718, 400, 550, 286, 478, 516, 281, 362, 281, 12972, 341, 538, 274, 66, 670, 9758, 13, 50930, 50930, 400, 370, 286, 39568, 264, 2115, 13, 51042, 51042, 400, 286, 483, 4258, 300, 341, 8513, 11, 274, 66, 670, 274, 82, 51328, 51328, 6915, 274, 66, 670, 9758, 1413, 276, 5835, 295, 262, 13, 51558, 51558, 407, 321, 632, 1071, 4478, 294, 527, 2120, 388, 11167, 2533, 11, 51668, 51668, 597, 390, 264, 8213, 2408, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12612184797014508, "compression_ratio": 1.6871794871794872, "no_speech_prob": 8.664523193147033e-06}, {"id": 871, "seek": 241900, "start": 2438.28, "end": 2442.88, "text": " equals dc over dz times h prime of s.", "tokens": [50364, 276, 5835, 295, 262, 11, 1936, 264, 13525, 295, 262, 13, 50520, 50520, 407, 9758, 6915, 276, 5835, 295, 262, 1413, 274, 82, 13, 50718, 50718, 400, 550, 286, 478, 516, 281, 362, 281, 12972, 341, 538, 274, 66, 670, 9758, 13, 50930, 50930, 400, 370, 286, 39568, 264, 2115, 13, 51042, 51042, 400, 286, 483, 4258, 300, 341, 8513, 11, 274, 66, 670, 274, 82, 51328, 51328, 6915, 274, 66, 670, 9758, 1413, 276, 5835, 295, 262, 13, 51558, 51558, 407, 321, 632, 1071, 4478, 294, 527, 2120, 388, 11167, 2533, 11, 51668, 51668, 597, 390, 264, 8213, 2408, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12612184797014508, "compression_ratio": 1.6871794871794872, "no_speech_prob": 8.664523193147033e-06}, {"id": 872, "seek": 241900, "start": 2442.88, "end": 2445.08, "text": " So we had another element in our multilayer net,", "tokens": [50364, 276, 5835, 295, 262, 11, 1936, 264, 13525, 295, 262, 13, 50520, 50520, 407, 9758, 6915, 276, 5835, 295, 262, 1413, 274, 82, 13, 50718, 50718, 400, 550, 286, 478, 516, 281, 362, 281, 12972, 341, 538, 274, 66, 670, 9758, 13, 50930, 50930, 400, 370, 286, 39568, 264, 2115, 13, 51042, 51042, 400, 286, 483, 4258, 300, 341, 8513, 11, 274, 66, 670, 274, 82, 51328, 51328, 6915, 274, 66, 670, 9758, 1413, 276, 5835, 295, 262, 13, 51558, 51558, 407, 321, 632, 1071, 4478, 294, 527, 2120, 388, 11167, 2533, 11, 51668, 51668, 597, 390, 264, 8213, 2408, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12612184797014508, "compression_ratio": 1.6871794871794872, "no_speech_prob": 8.664523193147033e-06}, {"id": 873, "seek": 241900, "start": 2445.08, "end": 2448.44, "text": " which was the linear sum.", "tokens": [50364, 276, 5835, 295, 262, 11, 1936, 264, 13525, 295, 262, 13, 50520, 50520, 407, 9758, 6915, 276, 5835, 295, 262, 1413, 274, 82, 13, 50718, 50718, 400, 550, 286, 478, 516, 281, 362, 281, 12972, 341, 538, 274, 66, 670, 9758, 13, 50930, 50930, 400, 370, 286, 39568, 264, 2115, 13, 51042, 51042, 400, 286, 483, 4258, 300, 341, 8513, 11, 274, 66, 670, 274, 82, 51328, 51328, 6915, 274, 66, 670, 9758, 1413, 276, 5835, 295, 262, 13, 51558, 51558, 407, 321, 632, 1071, 4478, 294, 527, 2120, 388, 11167, 2533, 11, 51668, 51668, 597, 390, 264, 8213, 2408, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12612184797014508, "compression_ratio": 1.6871794871794872, "no_speech_prob": 8.664523193147033e-06}, {"id": 874, "seek": 244844, "start": 2448.44, "end": 2450.56, "text": " And there, it's just a little bit more complicated,", "tokens": [50364, 400, 456, 11, 309, 311, 445, 257, 707, 857, 544, 6179, 11, 50470, 50470, 457, 406, 534, 13, 50564, 50564, 407, 472, 1729, 7006, 710, 510, 11, 50666, 50666, 321, 576, 411, 281, 14722, 264, 14641, 13760, 50908, 50908, 295, 527, 2063, 2445, 365, 3104, 281, 300, 710, 13, 51018, 51146, 400, 321, 434, 516, 281, 6552, 300, 321, 51214, 51214, 458, 264, 14641, 13760, 295, 262, 365, 3104, 51306, 51306, 281, 1184, 295, 729, 262, 311, 11, 264, 32807, 34499, 412, 264, 958, 4583, 51480, 51480, 300, 710, 307, 516, 666, 13, 51584, 51584, 407, 710, 787, 21222, 269, 807, 729, 262, 311, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17153221970304436, "compression_ratio": 1.6893617021276597, "no_speech_prob": 1.1125373021059204e-05}, {"id": 875, "seek": 244844, "start": 2450.56, "end": 2452.44, "text": " but not really.", "tokens": [50364, 400, 456, 11, 309, 311, 445, 257, 707, 857, 544, 6179, 11, 50470, 50470, 457, 406, 534, 13, 50564, 50564, 407, 472, 1729, 7006, 710, 510, 11, 50666, 50666, 321, 576, 411, 281, 14722, 264, 14641, 13760, 50908, 50908, 295, 527, 2063, 2445, 365, 3104, 281, 300, 710, 13, 51018, 51146, 400, 321, 434, 516, 281, 6552, 300, 321, 51214, 51214, 458, 264, 14641, 13760, 295, 262, 365, 3104, 51306, 51306, 281, 1184, 295, 729, 262, 311, 11, 264, 32807, 34499, 412, 264, 958, 4583, 51480, 51480, 300, 710, 307, 516, 666, 13, 51584, 51584, 407, 710, 787, 21222, 269, 807, 729, 262, 311, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17153221970304436, "compression_ratio": 1.6893617021276597, "no_speech_prob": 1.1125373021059204e-05}, {"id": 876, "seek": 244844, "start": 2452.44, "end": 2454.48, "text": " So one particular variable z here,", "tokens": [50364, 400, 456, 11, 309, 311, 445, 257, 707, 857, 544, 6179, 11, 50470, 50470, 457, 406, 534, 13, 50564, 50564, 407, 472, 1729, 7006, 710, 510, 11, 50666, 50666, 321, 576, 411, 281, 14722, 264, 14641, 13760, 50908, 50908, 295, 527, 2063, 2445, 365, 3104, 281, 300, 710, 13, 51018, 51146, 400, 321, 434, 516, 281, 6552, 300, 321, 51214, 51214, 458, 264, 14641, 13760, 295, 262, 365, 3104, 51306, 51306, 281, 1184, 295, 729, 262, 311, 11, 264, 32807, 34499, 412, 264, 958, 4583, 51480, 51480, 300, 710, 307, 516, 666, 13, 51584, 51584, 407, 710, 787, 21222, 269, 807, 729, 262, 311, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17153221970304436, "compression_ratio": 1.6893617021276597, "no_speech_prob": 1.1125373021059204e-05}, {"id": 877, "seek": 244844, "start": 2454.48, "end": 2459.32, "text": " we would like to compute the partial derivative", "tokens": [50364, 400, 456, 11, 309, 311, 445, 257, 707, 857, 544, 6179, 11, 50470, 50470, 457, 406, 534, 13, 50564, 50564, 407, 472, 1729, 7006, 710, 510, 11, 50666, 50666, 321, 576, 411, 281, 14722, 264, 14641, 13760, 50908, 50908, 295, 527, 2063, 2445, 365, 3104, 281, 300, 710, 13, 51018, 51146, 400, 321, 434, 516, 281, 6552, 300, 321, 51214, 51214, 458, 264, 14641, 13760, 295, 262, 365, 3104, 51306, 51306, 281, 1184, 295, 729, 262, 311, 11, 264, 32807, 34499, 412, 264, 958, 4583, 51480, 51480, 300, 710, 307, 516, 666, 13, 51584, 51584, 407, 710, 787, 21222, 269, 807, 729, 262, 311, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17153221970304436, "compression_ratio": 1.6893617021276597, "no_speech_prob": 1.1125373021059204e-05}, {"id": 878, "seek": 244844, "start": 2459.32, "end": 2461.52, "text": " of our cost function with respect to that z.", "tokens": [50364, 400, 456, 11, 309, 311, 445, 257, 707, 857, 544, 6179, 11, 50470, 50470, 457, 406, 534, 13, 50564, 50564, 407, 472, 1729, 7006, 710, 510, 11, 50666, 50666, 321, 576, 411, 281, 14722, 264, 14641, 13760, 50908, 50908, 295, 527, 2063, 2445, 365, 3104, 281, 300, 710, 13, 51018, 51146, 400, 321, 434, 516, 281, 6552, 300, 321, 51214, 51214, 458, 264, 14641, 13760, 295, 262, 365, 3104, 51306, 51306, 281, 1184, 295, 729, 262, 311, 11, 264, 32807, 34499, 412, 264, 958, 4583, 51480, 51480, 300, 710, 307, 516, 666, 13, 51584, 51584, 407, 710, 787, 21222, 269, 807, 729, 262, 311, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17153221970304436, "compression_ratio": 1.6893617021276597, "no_speech_prob": 1.1125373021059204e-05}, {"id": 879, "seek": 244844, "start": 2464.08, "end": 2465.44, "text": " And we're going to assume that we", "tokens": [50364, 400, 456, 11, 309, 311, 445, 257, 707, 857, 544, 6179, 11, 50470, 50470, 457, 406, 534, 13, 50564, 50564, 407, 472, 1729, 7006, 710, 510, 11, 50666, 50666, 321, 576, 411, 281, 14722, 264, 14641, 13760, 50908, 50908, 295, 527, 2063, 2445, 365, 3104, 281, 300, 710, 13, 51018, 51146, 400, 321, 434, 516, 281, 6552, 300, 321, 51214, 51214, 458, 264, 14641, 13760, 295, 262, 365, 3104, 51306, 51306, 281, 1184, 295, 729, 262, 311, 11, 264, 32807, 34499, 412, 264, 958, 4583, 51480, 51480, 300, 710, 307, 516, 666, 13, 51584, 51584, 407, 710, 787, 21222, 269, 807, 729, 262, 311, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17153221970304436, "compression_ratio": 1.6893617021276597, "no_speech_prob": 1.1125373021059204e-05}, {"id": 880, "seek": 244844, "start": 2465.44, "end": 2467.28, "text": " know the partial derivative of s with respect", "tokens": [50364, 400, 456, 11, 309, 311, 445, 257, 707, 857, 544, 6179, 11, 50470, 50470, 457, 406, 534, 13, 50564, 50564, 407, 472, 1729, 7006, 710, 510, 11, 50666, 50666, 321, 576, 411, 281, 14722, 264, 14641, 13760, 50908, 50908, 295, 527, 2063, 2445, 365, 3104, 281, 300, 710, 13, 51018, 51146, 400, 321, 434, 516, 281, 6552, 300, 321, 51214, 51214, 458, 264, 14641, 13760, 295, 262, 365, 3104, 51306, 51306, 281, 1184, 295, 729, 262, 311, 11, 264, 32807, 34499, 412, 264, 958, 4583, 51480, 51480, 300, 710, 307, 516, 666, 13, 51584, 51584, 407, 710, 787, 21222, 269, 807, 729, 262, 311, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17153221970304436, "compression_ratio": 1.6893617021276597, "no_speech_prob": 1.1125373021059204e-05}, {"id": 881, "seek": 244844, "start": 2467.28, "end": 2470.76, "text": " to each of those s's, the weighted sums at the next layer", "tokens": [50364, 400, 456, 11, 309, 311, 445, 257, 707, 857, 544, 6179, 11, 50470, 50470, 457, 406, 534, 13, 50564, 50564, 407, 472, 1729, 7006, 710, 510, 11, 50666, 50666, 321, 576, 411, 281, 14722, 264, 14641, 13760, 50908, 50908, 295, 527, 2063, 2445, 365, 3104, 281, 300, 710, 13, 51018, 51146, 400, 321, 434, 516, 281, 6552, 300, 321, 51214, 51214, 458, 264, 14641, 13760, 295, 262, 365, 3104, 51306, 51306, 281, 1184, 295, 729, 262, 311, 11, 264, 32807, 34499, 412, 264, 958, 4583, 51480, 51480, 300, 710, 307, 516, 666, 13, 51584, 51584, 407, 710, 787, 21222, 269, 807, 729, 262, 311, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17153221970304436, "compression_ratio": 1.6893617021276597, "no_speech_prob": 1.1125373021059204e-05}, {"id": 882, "seek": 244844, "start": 2470.76, "end": 2472.84, "text": " that z is going into.", "tokens": [50364, 400, 456, 11, 309, 311, 445, 257, 707, 857, 544, 6179, 11, 50470, 50470, 457, 406, 534, 13, 50564, 50564, 407, 472, 1729, 7006, 710, 510, 11, 50666, 50666, 321, 576, 411, 281, 14722, 264, 14641, 13760, 50908, 50908, 295, 527, 2063, 2445, 365, 3104, 281, 300, 710, 13, 51018, 51146, 400, 321, 434, 516, 281, 6552, 300, 321, 51214, 51214, 458, 264, 14641, 13760, 295, 262, 365, 3104, 51306, 51306, 281, 1184, 295, 729, 262, 311, 11, 264, 32807, 34499, 412, 264, 958, 4583, 51480, 51480, 300, 710, 307, 516, 666, 13, 51584, 51584, 407, 710, 787, 21222, 269, 807, 729, 262, 311, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17153221970304436, "compression_ratio": 1.6893617021276597, "no_speech_prob": 1.1125373021059204e-05}, {"id": 883, "seek": 244844, "start": 2472.84, "end": 2478.0, "text": " So z only influences c through those s's.", "tokens": [50364, 400, 456, 11, 309, 311, 445, 257, 707, 857, 544, 6179, 11, 50470, 50470, 457, 406, 534, 13, 50564, 50564, 407, 472, 1729, 7006, 710, 510, 11, 50666, 50666, 321, 576, 411, 281, 14722, 264, 14641, 13760, 50908, 50908, 295, 527, 2063, 2445, 365, 3104, 281, 300, 710, 13, 51018, 51146, 400, 321, 434, 516, 281, 6552, 300, 321, 51214, 51214, 458, 264, 14641, 13760, 295, 262, 365, 3104, 51306, 51306, 281, 1184, 295, 729, 262, 311, 11, 264, 32807, 34499, 412, 264, 958, 4583, 51480, 51480, 300, 710, 307, 516, 666, 13, 51584, 51584, 407, 710, 787, 21222, 269, 807, 729, 262, 311, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.17153221970304436, "compression_ratio": 1.6893617021276597, "no_speech_prob": 1.1125373021059204e-05}, {"id": 884, "seek": 247800, "start": 2478.0, "end": 2481.92, "text": " So presumably, by basically multiplying", "tokens": [50364, 407, 26742, 11, 538, 1936, 30955, 50560, 50560, 577, 1184, 295, 729, 262, 311, 6503, 269, 11, 50732, 50732, 293, 550, 30955, 538, 577, 710, 21222, 1184, 295, 264, 262, 311, 11, 50922, 50922, 293, 2408, 2810, 493, 11, 321, 434, 516, 281, 483, 264, 6503, 295, 710, 670, 269, 13, 51076, 51076, 400, 300, 311, 264, 3875, 1558, 13, 51172, 51172, 407, 510, 311, 437, 321, 434, 516, 281, 360, 13, 51234, 51440, 961, 311, 584, 321, 40468, 710, 538, 9758, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.12390794425175108, "compression_ratio": 1.6569767441860466, "no_speech_prob": 9.080070412892383e-06}, {"id": 885, "seek": 247800, "start": 2481.92, "end": 2485.36, "text": " how each of those s's influence c,", "tokens": [50364, 407, 26742, 11, 538, 1936, 30955, 50560, 50560, 577, 1184, 295, 729, 262, 311, 6503, 269, 11, 50732, 50732, 293, 550, 30955, 538, 577, 710, 21222, 1184, 295, 264, 262, 311, 11, 50922, 50922, 293, 2408, 2810, 493, 11, 321, 434, 516, 281, 483, 264, 6503, 295, 710, 670, 269, 13, 51076, 51076, 400, 300, 311, 264, 3875, 1558, 13, 51172, 51172, 407, 510, 311, 437, 321, 434, 516, 281, 360, 13, 51234, 51440, 961, 311, 584, 321, 40468, 710, 538, 9758, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.12390794425175108, "compression_ratio": 1.6569767441860466, "no_speech_prob": 9.080070412892383e-06}, {"id": 886, "seek": 247800, "start": 2485.36, "end": 2489.16, "text": " and then multiplying by how z influences each of the s's,", "tokens": [50364, 407, 26742, 11, 538, 1936, 30955, 50560, 50560, 577, 1184, 295, 729, 262, 311, 6503, 269, 11, 50732, 50732, 293, 550, 30955, 538, 577, 710, 21222, 1184, 295, 264, 262, 311, 11, 50922, 50922, 293, 2408, 2810, 493, 11, 321, 434, 516, 281, 483, 264, 6503, 295, 710, 670, 269, 13, 51076, 51076, 400, 300, 311, 264, 3875, 1558, 13, 51172, 51172, 407, 510, 311, 437, 321, 434, 516, 281, 360, 13, 51234, 51440, 961, 311, 584, 321, 40468, 710, 538, 9758, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.12390794425175108, "compression_ratio": 1.6569767441860466, "no_speech_prob": 9.080070412892383e-06}, {"id": 887, "seek": 247800, "start": 2489.16, "end": 2492.24, "text": " and summing up, we're going to get the influence of z over c.", "tokens": [50364, 407, 26742, 11, 538, 1936, 30955, 50560, 50560, 577, 1184, 295, 729, 262, 311, 6503, 269, 11, 50732, 50732, 293, 550, 30955, 538, 577, 710, 21222, 1184, 295, 264, 262, 311, 11, 50922, 50922, 293, 2408, 2810, 493, 11, 321, 434, 516, 281, 483, 264, 6503, 295, 710, 670, 269, 13, 51076, 51076, 400, 300, 311, 264, 3875, 1558, 13, 51172, 51172, 407, 510, 311, 437, 321, 434, 516, 281, 360, 13, 51234, 51440, 961, 311, 584, 321, 40468, 710, 538, 9758, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.12390794425175108, "compression_ratio": 1.6569767441860466, "no_speech_prob": 9.080070412892383e-06}, {"id": 888, "seek": 247800, "start": 2492.24, "end": 2494.16, "text": " And that's the basic idea.", "tokens": [50364, 407, 26742, 11, 538, 1936, 30955, 50560, 50560, 577, 1184, 295, 729, 262, 311, 6503, 269, 11, 50732, 50732, 293, 550, 30955, 538, 577, 710, 21222, 1184, 295, 264, 262, 311, 11, 50922, 50922, 293, 2408, 2810, 493, 11, 321, 434, 516, 281, 483, 264, 6503, 295, 710, 670, 269, 13, 51076, 51076, 400, 300, 311, 264, 3875, 1558, 13, 51172, 51172, 407, 510, 311, 437, 321, 434, 516, 281, 360, 13, 51234, 51440, 961, 311, 584, 321, 40468, 710, 538, 9758, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.12390794425175108, "compression_ratio": 1.6569767441860466, "no_speech_prob": 9.080070412892383e-06}, {"id": 889, "seek": 247800, "start": 2494.16, "end": 2495.4, "text": " So here's what we're going to do.", "tokens": [50364, 407, 26742, 11, 538, 1936, 30955, 50560, 50560, 577, 1184, 295, 729, 262, 311, 6503, 269, 11, 50732, 50732, 293, 550, 30955, 538, 577, 710, 21222, 1184, 295, 264, 262, 311, 11, 50922, 50922, 293, 2408, 2810, 493, 11, 321, 434, 516, 281, 483, 264, 6503, 295, 710, 670, 269, 13, 51076, 51076, 400, 300, 311, 264, 3875, 1558, 13, 51172, 51172, 407, 510, 311, 437, 321, 434, 516, 281, 360, 13, 51234, 51440, 961, 311, 584, 321, 40468, 710, 538, 9758, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.12390794425175108, "compression_ratio": 1.6569767441860466, "no_speech_prob": 9.080070412892383e-06}, {"id": 890, "seek": 247800, "start": 2499.52, "end": 2503.6, "text": " Let's say we perturb z by dz.", "tokens": [50364, 407, 26742, 11, 538, 1936, 30955, 50560, 50560, 577, 1184, 295, 729, 262, 311, 6503, 269, 11, 50732, 50732, 293, 550, 30955, 538, 577, 710, 21222, 1184, 295, 264, 262, 311, 11, 50922, 50922, 293, 2408, 2810, 493, 11, 321, 434, 516, 281, 483, 264, 6503, 295, 710, 670, 269, 13, 51076, 51076, 400, 300, 311, 264, 3875, 1558, 13, 51172, 51172, 407, 510, 311, 437, 321, 434, 516, 281, 360, 13, 51234, 51440, 961, 311, 584, 321, 40468, 710, 538, 9758, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.12390794425175108, "compression_ratio": 1.6569767441860466, "no_speech_prob": 9.080070412892383e-06}, {"id": 891, "seek": 250360, "start": 2503.6, "end": 2509.64, "text": " This is going to perturb s0 by dz times w0.", "tokens": [50364, 639, 307, 516, 281, 40468, 262, 15, 538, 9758, 1413, 261, 15, 13, 50666, 50666, 492, 12972, 710, 538, 261, 15, 13, 50740, 50740, 407, 264, 13760, 295, 341, 8213, 6916, 50848, 50848, 307, 264, 17619, 2564, 13, 51012, 51012, 407, 510, 11, 264, 40468, 399, 11, 597, 307, 9758, 15, 11, 51332, 51332, 307, 2681, 281, 9758, 1413, 261, 15, 13, 51558, 51558, 400, 586, 11, 294, 1261, 11, 341, 307, 516, 281, 16927, 269, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.10773104208487051, "compression_ratio": 1.5123456790123457, "no_speech_prob": 5.954879725322826e-06}, {"id": 892, "seek": 250360, "start": 2509.64, "end": 2511.12, "text": " We multiply z by w0.", "tokens": [50364, 639, 307, 516, 281, 40468, 262, 15, 538, 9758, 1413, 261, 15, 13, 50666, 50666, 492, 12972, 710, 538, 261, 15, 13, 50740, 50740, 407, 264, 13760, 295, 341, 8213, 6916, 50848, 50848, 307, 264, 17619, 2564, 13, 51012, 51012, 407, 510, 11, 264, 40468, 399, 11, 597, 307, 9758, 15, 11, 51332, 51332, 307, 2681, 281, 9758, 1413, 261, 15, 13, 51558, 51558, 400, 586, 11, 294, 1261, 11, 341, 307, 516, 281, 16927, 269, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.10773104208487051, "compression_ratio": 1.5123456790123457, "no_speech_prob": 5.954879725322826e-06}, {"id": 893, "seek": 250360, "start": 2511.12, "end": 2513.2799999999997, "text": " So the derivative of this linear operation", "tokens": [50364, 639, 307, 516, 281, 40468, 262, 15, 538, 9758, 1413, 261, 15, 13, 50666, 50666, 492, 12972, 710, 538, 261, 15, 13, 50740, 50740, 407, 264, 13760, 295, 341, 8213, 6916, 50848, 50848, 307, 264, 17619, 2564, 13, 51012, 51012, 407, 510, 11, 264, 40468, 399, 11, 597, 307, 9758, 15, 11, 51332, 51332, 307, 2681, 281, 9758, 1413, 261, 15, 13, 51558, 51558, 400, 586, 11, 294, 1261, 11, 341, 307, 516, 281, 16927, 269, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.10773104208487051, "compression_ratio": 1.5123456790123457, "no_speech_prob": 5.954879725322826e-06}, {"id": 894, "seek": 250360, "start": 2513.2799999999997, "end": 2516.56, "text": " is the coefficient itself.", "tokens": [50364, 639, 307, 516, 281, 40468, 262, 15, 538, 9758, 1413, 261, 15, 13, 50666, 50666, 492, 12972, 710, 538, 261, 15, 13, 50740, 50740, 407, 264, 13760, 295, 341, 8213, 6916, 50848, 50848, 307, 264, 17619, 2564, 13, 51012, 51012, 407, 510, 11, 264, 40468, 399, 11, 597, 307, 9758, 15, 11, 51332, 51332, 307, 2681, 281, 9758, 1413, 261, 15, 13, 51558, 51558, 400, 586, 11, 294, 1261, 11, 341, 307, 516, 281, 16927, 269, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.10773104208487051, "compression_ratio": 1.5123456790123457, "no_speech_prob": 5.954879725322826e-06}, {"id": 895, "seek": 250360, "start": 2516.56, "end": 2522.96, "text": " So here, the perturbation, which is dz0,", "tokens": [50364, 639, 307, 516, 281, 40468, 262, 15, 538, 9758, 1413, 261, 15, 13, 50666, 50666, 492, 12972, 710, 538, 261, 15, 13, 50740, 50740, 407, 264, 13760, 295, 341, 8213, 6916, 50848, 50848, 307, 264, 17619, 2564, 13, 51012, 51012, 407, 510, 11, 264, 40468, 399, 11, 597, 307, 9758, 15, 11, 51332, 51332, 307, 2681, 281, 9758, 1413, 261, 15, 13, 51558, 51558, 400, 586, 11, 294, 1261, 11, 341, 307, 516, 281, 16927, 269, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.10773104208487051, "compression_ratio": 1.5123456790123457, "no_speech_prob": 5.954879725322826e-06}, {"id": 896, "seek": 250360, "start": 2522.96, "end": 2527.48, "text": " is equal to dz times w0.", "tokens": [50364, 639, 307, 516, 281, 40468, 262, 15, 538, 9758, 1413, 261, 15, 13, 50666, 50666, 492, 12972, 710, 538, 261, 15, 13, 50740, 50740, 407, 264, 13760, 295, 341, 8213, 6916, 50848, 50848, 307, 264, 17619, 2564, 13, 51012, 51012, 407, 510, 11, 264, 40468, 399, 11, 597, 307, 9758, 15, 11, 51332, 51332, 307, 2681, 281, 9758, 1413, 261, 15, 13, 51558, 51558, 400, 586, 11, 294, 1261, 11, 341, 307, 516, 281, 16927, 269, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.10773104208487051, "compression_ratio": 1.5123456790123457, "no_speech_prob": 5.954879725322826e-06}, {"id": 897, "seek": 250360, "start": 2527.48, "end": 2530.2799999999997, "text": " And now, in turn, this is going to modify c.", "tokens": [50364, 639, 307, 516, 281, 40468, 262, 15, 538, 9758, 1413, 261, 15, 13, 50666, 50666, 492, 12972, 710, 538, 261, 15, 13, 50740, 50740, 407, 264, 13760, 295, 341, 8213, 6916, 50848, 50848, 307, 264, 17619, 2564, 13, 51012, 51012, 407, 510, 11, 264, 40468, 399, 11, 597, 307, 9758, 15, 11, 51332, 51332, 307, 2681, 281, 9758, 1413, 261, 15, 13, 51558, 51558, 400, 586, 11, 294, 1261, 11, 341, 307, 516, 281, 16927, 269, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.10773104208487051, "compression_ratio": 1.5123456790123457, "no_speech_prob": 5.954879725322826e-06}, {"id": 898, "seek": 253028, "start": 2530.28, "end": 2535.2400000000002, "text": " And we're going to multiply this quantity by dc over ds0", "tokens": [50364, 400, 321, 434, 516, 281, 12972, 341, 11275, 538, 274, 66, 670, 274, 82, 15, 50612, 50612, 281, 483, 264, 274, 66, 11, 498, 291, 528, 13, 50888, 50888, 823, 11, 5699, 321, 40468, 710, 11, 309, 311, 406, 51008, 51008, 516, 281, 40468, 445, 262, 15, 13, 51084, 51084, 467, 311, 611, 516, 281, 40468, 262, 16, 293, 262, 17, 13, 51204, 51204, 400, 281, 536, 264, 1802, 322, 269, 11, 321, 434, 51276, 51276, 516, 281, 362, 281, 2408, 493, 264, 1802, 295, 264, 40468, 399, 51422, 51422, 322, 1184, 295, 264, 262, 311, 11, 293, 550, 2408, 552, 493, 51536, 51536, 281, 536, 264, 4787, 1802, 322, 269, 13, 51632, 51632, 407, 341, 307, 3720, 510, 322, 264, 1411, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.07225721464382381, "compression_ratio": 1.7534246575342465, "no_speech_prob": 1.6441726984339766e-05}, {"id": 899, "seek": 253028, "start": 2535.2400000000002, "end": 2540.76, "text": " to get the dc, if you want.", "tokens": [50364, 400, 321, 434, 516, 281, 12972, 341, 11275, 538, 274, 66, 670, 274, 82, 15, 50612, 50612, 281, 483, 264, 274, 66, 11, 498, 291, 528, 13, 50888, 50888, 823, 11, 5699, 321, 40468, 710, 11, 309, 311, 406, 51008, 51008, 516, 281, 40468, 445, 262, 15, 13, 51084, 51084, 467, 311, 611, 516, 281, 40468, 262, 16, 293, 262, 17, 13, 51204, 51204, 400, 281, 536, 264, 1802, 322, 269, 11, 321, 434, 51276, 51276, 516, 281, 362, 281, 2408, 493, 264, 1802, 295, 264, 40468, 399, 51422, 51422, 322, 1184, 295, 264, 262, 311, 11, 293, 550, 2408, 552, 493, 51536, 51536, 281, 536, 264, 4787, 1802, 322, 269, 13, 51632, 51632, 407, 341, 307, 3720, 510, 322, 264, 1411, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.07225721464382381, "compression_ratio": 1.7534246575342465, "no_speech_prob": 1.6441726984339766e-05}, {"id": 900, "seek": 253028, "start": 2540.76, "end": 2543.1600000000003, "text": " Now, whenever we perturb z, it's not", "tokens": [50364, 400, 321, 434, 516, 281, 12972, 341, 11275, 538, 274, 66, 670, 274, 82, 15, 50612, 50612, 281, 483, 264, 274, 66, 11, 498, 291, 528, 13, 50888, 50888, 823, 11, 5699, 321, 40468, 710, 11, 309, 311, 406, 51008, 51008, 516, 281, 40468, 445, 262, 15, 13, 51084, 51084, 467, 311, 611, 516, 281, 40468, 262, 16, 293, 262, 17, 13, 51204, 51204, 400, 281, 536, 264, 1802, 322, 269, 11, 321, 434, 51276, 51276, 516, 281, 362, 281, 2408, 493, 264, 1802, 295, 264, 40468, 399, 51422, 51422, 322, 1184, 295, 264, 262, 311, 11, 293, 550, 2408, 552, 493, 51536, 51536, 281, 536, 264, 4787, 1802, 322, 269, 13, 51632, 51632, 407, 341, 307, 3720, 510, 322, 264, 1411, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.07225721464382381, "compression_ratio": 1.7534246575342465, "no_speech_prob": 1.6441726984339766e-05}, {"id": 901, "seek": 253028, "start": 2543.1600000000003, "end": 2544.6800000000003, "text": " going to perturb just s0.", "tokens": [50364, 400, 321, 434, 516, 281, 12972, 341, 11275, 538, 274, 66, 670, 274, 82, 15, 50612, 50612, 281, 483, 264, 274, 66, 11, 498, 291, 528, 13, 50888, 50888, 823, 11, 5699, 321, 40468, 710, 11, 309, 311, 406, 51008, 51008, 516, 281, 40468, 445, 262, 15, 13, 51084, 51084, 467, 311, 611, 516, 281, 40468, 262, 16, 293, 262, 17, 13, 51204, 51204, 400, 281, 536, 264, 1802, 322, 269, 11, 321, 434, 51276, 51276, 516, 281, 362, 281, 2408, 493, 264, 1802, 295, 264, 40468, 399, 51422, 51422, 322, 1184, 295, 264, 262, 311, 11, 293, 550, 2408, 552, 493, 51536, 51536, 281, 536, 264, 4787, 1802, 322, 269, 13, 51632, 51632, 407, 341, 307, 3720, 510, 322, 264, 1411, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.07225721464382381, "compression_ratio": 1.7534246575342465, "no_speech_prob": 1.6441726984339766e-05}, {"id": 902, "seek": 253028, "start": 2544.6800000000003, "end": 2547.0800000000004, "text": " It's also going to perturb s1 and s2.", "tokens": [50364, 400, 321, 434, 516, 281, 12972, 341, 11275, 538, 274, 66, 670, 274, 82, 15, 50612, 50612, 281, 483, 264, 274, 66, 11, 498, 291, 528, 13, 50888, 50888, 823, 11, 5699, 321, 40468, 710, 11, 309, 311, 406, 51008, 51008, 516, 281, 40468, 445, 262, 15, 13, 51084, 51084, 467, 311, 611, 516, 281, 40468, 262, 16, 293, 262, 17, 13, 51204, 51204, 400, 281, 536, 264, 1802, 322, 269, 11, 321, 434, 51276, 51276, 516, 281, 362, 281, 2408, 493, 264, 1802, 295, 264, 40468, 399, 51422, 51422, 322, 1184, 295, 264, 262, 311, 11, 293, 550, 2408, 552, 493, 51536, 51536, 281, 536, 264, 4787, 1802, 322, 269, 13, 51632, 51632, 407, 341, 307, 3720, 510, 322, 264, 1411, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.07225721464382381, "compression_ratio": 1.7534246575342465, "no_speech_prob": 1.6441726984339766e-05}, {"id": 903, "seek": 253028, "start": 2547.0800000000004, "end": 2548.52, "text": " And to see the effect on c, we're", "tokens": [50364, 400, 321, 434, 516, 281, 12972, 341, 11275, 538, 274, 66, 670, 274, 82, 15, 50612, 50612, 281, 483, 264, 274, 66, 11, 498, 291, 528, 13, 50888, 50888, 823, 11, 5699, 321, 40468, 710, 11, 309, 311, 406, 51008, 51008, 516, 281, 40468, 445, 262, 15, 13, 51084, 51084, 467, 311, 611, 516, 281, 40468, 262, 16, 293, 262, 17, 13, 51204, 51204, 400, 281, 536, 264, 1802, 322, 269, 11, 321, 434, 51276, 51276, 516, 281, 362, 281, 2408, 493, 264, 1802, 295, 264, 40468, 399, 51422, 51422, 322, 1184, 295, 264, 262, 311, 11, 293, 550, 2408, 552, 493, 51536, 51536, 281, 536, 264, 4787, 1802, 322, 269, 13, 51632, 51632, 407, 341, 307, 3720, 510, 322, 264, 1411, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.07225721464382381, "compression_ratio": 1.7534246575342465, "no_speech_prob": 1.6441726984339766e-05}, {"id": 904, "seek": 253028, "start": 2548.52, "end": 2551.44, "text": " going to have to sum up the effect of the perturbation", "tokens": [50364, 400, 321, 434, 516, 281, 12972, 341, 11275, 538, 274, 66, 670, 274, 82, 15, 50612, 50612, 281, 483, 264, 274, 66, 11, 498, 291, 528, 13, 50888, 50888, 823, 11, 5699, 321, 40468, 710, 11, 309, 311, 406, 51008, 51008, 516, 281, 40468, 445, 262, 15, 13, 51084, 51084, 467, 311, 611, 516, 281, 40468, 262, 16, 293, 262, 17, 13, 51204, 51204, 400, 281, 536, 264, 1802, 322, 269, 11, 321, 434, 51276, 51276, 516, 281, 362, 281, 2408, 493, 264, 1802, 295, 264, 40468, 399, 51422, 51422, 322, 1184, 295, 264, 262, 311, 11, 293, 550, 2408, 552, 493, 51536, 51536, 281, 536, 264, 4787, 1802, 322, 269, 13, 51632, 51632, 407, 341, 307, 3720, 510, 322, 264, 1411, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.07225721464382381, "compression_ratio": 1.7534246575342465, "no_speech_prob": 1.6441726984339766e-05}, {"id": 905, "seek": 253028, "start": 2551.44, "end": 2553.7200000000003, "text": " on each of the s's, and then sum them up", "tokens": [50364, 400, 321, 434, 516, 281, 12972, 341, 11275, 538, 274, 66, 670, 274, 82, 15, 50612, 50612, 281, 483, 264, 274, 66, 11, 498, 291, 528, 13, 50888, 50888, 823, 11, 5699, 321, 40468, 710, 11, 309, 311, 406, 51008, 51008, 516, 281, 40468, 445, 262, 15, 13, 51084, 51084, 467, 311, 611, 516, 281, 40468, 262, 16, 293, 262, 17, 13, 51204, 51204, 400, 281, 536, 264, 1802, 322, 269, 11, 321, 434, 51276, 51276, 516, 281, 362, 281, 2408, 493, 264, 1802, 295, 264, 40468, 399, 51422, 51422, 322, 1184, 295, 264, 262, 311, 11, 293, 550, 2408, 552, 493, 51536, 51536, 281, 536, 264, 4787, 1802, 322, 269, 13, 51632, 51632, 407, 341, 307, 3720, 510, 322, 264, 1411, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.07225721464382381, "compression_ratio": 1.7534246575342465, "no_speech_prob": 1.6441726984339766e-05}, {"id": 906, "seek": 253028, "start": 2553.7200000000003, "end": 2555.6400000000003, "text": " to see the overall effect on c.", "tokens": [50364, 400, 321, 434, 516, 281, 12972, 341, 11275, 538, 274, 66, 670, 274, 82, 15, 50612, 50612, 281, 483, 264, 274, 66, 11, 498, 291, 528, 13, 50888, 50888, 823, 11, 5699, 321, 40468, 710, 11, 309, 311, 406, 51008, 51008, 516, 281, 40468, 445, 262, 15, 13, 51084, 51084, 467, 311, 611, 516, 281, 40468, 262, 16, 293, 262, 17, 13, 51204, 51204, 400, 281, 536, 264, 1802, 322, 269, 11, 321, 434, 51276, 51276, 516, 281, 362, 281, 2408, 493, 264, 1802, 295, 264, 40468, 399, 51422, 51422, 322, 1184, 295, 264, 262, 311, 11, 293, 550, 2408, 552, 493, 51536, 51536, 281, 536, 264, 4787, 1802, 322, 269, 13, 51632, 51632, 407, 341, 307, 3720, 510, 322, 264, 1411, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.07225721464382381, "compression_ratio": 1.7534246575342465, "no_speech_prob": 1.6441726984339766e-05}, {"id": 907, "seek": 253028, "start": 2555.6400000000003, "end": 2558.1600000000003, "text": " So this is written here on the left.", "tokens": [50364, 400, 321, 434, 516, 281, 12972, 341, 11275, 538, 274, 66, 670, 274, 82, 15, 50612, 50612, 281, 483, 264, 274, 66, 11, 498, 291, 528, 13, 50888, 50888, 823, 11, 5699, 321, 40468, 710, 11, 309, 311, 406, 51008, 51008, 516, 281, 40468, 445, 262, 15, 13, 51084, 51084, 467, 311, 611, 516, 281, 40468, 262, 16, 293, 262, 17, 13, 51204, 51204, 400, 281, 536, 264, 1802, 322, 269, 11, 321, 434, 51276, 51276, 516, 281, 362, 281, 2408, 493, 264, 1802, 295, 264, 40468, 399, 51422, 51422, 322, 1184, 295, 264, 262, 311, 11, 293, 550, 2408, 552, 493, 51536, 51536, 281, 536, 264, 4787, 1802, 322, 269, 13, 51632, 51632, 407, 341, 307, 3720, 510, 322, 264, 1411, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.07225721464382381, "compression_ratio": 1.7534246575342465, "no_speech_prob": 1.6441726984339766e-05}, {"id": 908, "seek": 255816, "start": 2558.16, "end": 2565.44, "text": " The perturbation of c is equal to the perturbation of s", "tokens": [50364, 440, 40468, 399, 295, 269, 307, 2681, 281, 264, 40468, 399, 295, 262, 50728, 50728, 17207, 538, 264, 14641, 13760, 295, 269, 50858, 50858, 365, 3104, 281, 262, 1804, 264, 40468, 399, 295, 262, 16, 51102, 51102, 17207, 538, 264, 14641, 13760, 295, 274, 66, 51212, 51212, 365, 3104, 281, 262, 16, 1804, 264, 912, 551, 337, 262, 17, 13, 51420, 51420, 407, 341, 307, 264, 1186, 300, 321, 643, 281, 747, 666, 2696, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.10767453756087865, "compression_ratio": 1.9930555555555556, "no_speech_prob": 2.4297749405377544e-05}, {"id": 909, "seek": 255816, "start": 2565.44, "end": 2568.04, "text": " multiplied by the partial derivative of c", "tokens": [50364, 440, 40468, 399, 295, 269, 307, 2681, 281, 264, 40468, 399, 295, 262, 50728, 50728, 17207, 538, 264, 14641, 13760, 295, 269, 50858, 50858, 365, 3104, 281, 262, 1804, 264, 40468, 399, 295, 262, 16, 51102, 51102, 17207, 538, 264, 14641, 13760, 295, 274, 66, 51212, 51212, 365, 3104, 281, 262, 16, 1804, 264, 912, 551, 337, 262, 17, 13, 51420, 51420, 407, 341, 307, 264, 1186, 300, 321, 643, 281, 747, 666, 2696, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.10767453756087865, "compression_ratio": 1.9930555555555556, "no_speech_prob": 2.4297749405377544e-05}, {"id": 910, "seek": 255816, "start": 2568.04, "end": 2572.92, "text": " with respect to s plus the perturbation of s1", "tokens": [50364, 440, 40468, 399, 295, 269, 307, 2681, 281, 264, 40468, 399, 295, 262, 50728, 50728, 17207, 538, 264, 14641, 13760, 295, 269, 50858, 50858, 365, 3104, 281, 262, 1804, 264, 40468, 399, 295, 262, 16, 51102, 51102, 17207, 538, 264, 14641, 13760, 295, 274, 66, 51212, 51212, 365, 3104, 281, 262, 16, 1804, 264, 912, 551, 337, 262, 17, 13, 51420, 51420, 407, 341, 307, 264, 1186, 300, 321, 643, 281, 747, 666, 2696, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.10767453756087865, "compression_ratio": 1.9930555555555556, "no_speech_prob": 2.4297749405377544e-05}, {"id": 911, "seek": 255816, "start": 2572.92, "end": 2575.12, "text": " multiplied by the partial derivative of dc", "tokens": [50364, 440, 40468, 399, 295, 269, 307, 2681, 281, 264, 40468, 399, 295, 262, 50728, 50728, 17207, 538, 264, 14641, 13760, 295, 269, 50858, 50858, 365, 3104, 281, 262, 1804, 264, 40468, 399, 295, 262, 16, 51102, 51102, 17207, 538, 264, 14641, 13760, 295, 274, 66, 51212, 51212, 365, 3104, 281, 262, 16, 1804, 264, 912, 551, 337, 262, 17, 13, 51420, 51420, 407, 341, 307, 264, 1186, 300, 321, 643, 281, 747, 666, 2696, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.10767453756087865, "compression_ratio": 1.9930555555555556, "no_speech_prob": 2.4297749405377544e-05}, {"id": 912, "seek": 255816, "start": 2575.12, "end": 2579.2799999999997, "text": " with respect to s1 plus the same thing for s2.", "tokens": [50364, 440, 40468, 399, 295, 269, 307, 2681, 281, 264, 40468, 399, 295, 262, 50728, 50728, 17207, 538, 264, 14641, 13760, 295, 269, 50858, 50858, 365, 3104, 281, 262, 1804, 264, 40468, 399, 295, 262, 16, 51102, 51102, 17207, 538, 264, 14641, 13760, 295, 274, 66, 51212, 51212, 365, 3104, 281, 262, 16, 1804, 264, 912, 551, 337, 262, 17, 13, 51420, 51420, 407, 341, 307, 264, 1186, 300, 321, 643, 281, 747, 666, 2696, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.10767453756087865, "compression_ratio": 1.9930555555555556, "no_speech_prob": 2.4297749405377544e-05}, {"id": 913, "seek": 255816, "start": 2579.2799999999997, "end": 2583.92, "text": " So this is the fact that we need to take into account", "tokens": [50364, 440, 40468, 399, 295, 269, 307, 2681, 281, 264, 40468, 399, 295, 262, 50728, 50728, 17207, 538, 264, 14641, 13760, 295, 269, 50858, 50858, 365, 3104, 281, 262, 1804, 264, 40468, 399, 295, 262, 16, 51102, 51102, 17207, 538, 264, 14641, 13760, 295, 274, 66, 51212, 51212, 365, 3104, 281, 262, 16, 1804, 264, 912, 551, 337, 262, 17, 13, 51420, 51420, 407, 341, 307, 264, 1186, 300, 321, 643, 281, 747, 666, 2696, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.10767453756087865, "compression_ratio": 1.9930555555555556, "no_speech_prob": 2.4297749405377544e-05}, {"id": 914, "seek": 258392, "start": 2583.92, "end": 2588.6800000000003, "text": " all the perturbations here that z may influence.", "tokens": [50364, 439, 264, 40468, 763, 510, 300, 710, 815, 6503, 13, 50602, 50602, 400, 370, 286, 393, 445, 2464, 760, 257, 588, 2199, 551, 13, 50764, 50764, 1436, 274, 66, 295, 1958, 307, 2681, 281, 261, 15, 1413, 9758, 11, 50914, 50914, 293, 274, 82, 295, 568, 307, 261, 17, 1413, 9758, 11, 286, 393, 5452, 341, 294, 456, 51224, 51224, 293, 445, 2464, 274, 66, 670, 9758, 2681, 274, 66, 670, 274, 82, 15, 11, 51384, 51384, 597, 286, 6552, 307, 2570, 11, 1413, 261, 15, 1804, 274, 66, 670, 274, 82, 16, 1413, 261, 16, 51600, 51600, 1804, 274, 66, 670, 274, 82, 17, 1413, 261, 17, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.09969556859109253, "compression_ratio": 1.7142857142857142, "no_speech_prob": 2.144329118891619e-05}, {"id": 915, "seek": 258392, "start": 2588.6800000000003, "end": 2591.92, "text": " And so I can just write down a very simple thing.", "tokens": [50364, 439, 264, 40468, 763, 510, 300, 710, 815, 6503, 13, 50602, 50602, 400, 370, 286, 393, 445, 2464, 760, 257, 588, 2199, 551, 13, 50764, 50764, 1436, 274, 66, 295, 1958, 307, 2681, 281, 261, 15, 1413, 9758, 11, 50914, 50914, 293, 274, 82, 295, 568, 307, 261, 17, 1413, 9758, 11, 286, 393, 5452, 341, 294, 456, 51224, 51224, 293, 445, 2464, 274, 66, 670, 9758, 2681, 274, 66, 670, 274, 82, 15, 11, 51384, 51384, 597, 286, 6552, 307, 2570, 11, 1413, 261, 15, 1804, 274, 66, 670, 274, 82, 16, 1413, 261, 16, 51600, 51600, 1804, 274, 66, 670, 274, 82, 17, 1413, 261, 17, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.09969556859109253, "compression_ratio": 1.7142857142857142, "no_speech_prob": 2.144329118891619e-05}, {"id": 916, "seek": 258392, "start": 2591.92, "end": 2594.92, "text": " Because dc of 0 is equal to w0 times dz,", "tokens": [50364, 439, 264, 40468, 763, 510, 300, 710, 815, 6503, 13, 50602, 50602, 400, 370, 286, 393, 445, 2464, 760, 257, 588, 2199, 551, 13, 50764, 50764, 1436, 274, 66, 295, 1958, 307, 2681, 281, 261, 15, 1413, 9758, 11, 50914, 50914, 293, 274, 82, 295, 568, 307, 261, 17, 1413, 9758, 11, 286, 393, 5452, 341, 294, 456, 51224, 51224, 293, 445, 2464, 274, 66, 670, 9758, 2681, 274, 66, 670, 274, 82, 15, 11, 51384, 51384, 597, 286, 6552, 307, 2570, 11, 1413, 261, 15, 1804, 274, 66, 670, 274, 82, 16, 1413, 261, 16, 51600, 51600, 1804, 274, 66, 670, 274, 82, 17, 1413, 261, 17, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.09969556859109253, "compression_ratio": 1.7142857142857142, "no_speech_prob": 2.144329118891619e-05}, {"id": 917, "seek": 258392, "start": 2594.92, "end": 2601.12, "text": " and ds of 2 is w2 times dz, I can plug this in there", "tokens": [50364, 439, 264, 40468, 763, 510, 300, 710, 815, 6503, 13, 50602, 50602, 400, 370, 286, 393, 445, 2464, 760, 257, 588, 2199, 551, 13, 50764, 50764, 1436, 274, 66, 295, 1958, 307, 2681, 281, 261, 15, 1413, 9758, 11, 50914, 50914, 293, 274, 82, 295, 568, 307, 261, 17, 1413, 9758, 11, 286, 393, 5452, 341, 294, 456, 51224, 51224, 293, 445, 2464, 274, 66, 670, 9758, 2681, 274, 66, 670, 274, 82, 15, 11, 51384, 51384, 597, 286, 6552, 307, 2570, 11, 1413, 261, 15, 1804, 274, 66, 670, 274, 82, 16, 1413, 261, 16, 51600, 51600, 1804, 274, 66, 670, 274, 82, 17, 1413, 261, 17, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.09969556859109253, "compression_ratio": 1.7142857142857142, "no_speech_prob": 2.144329118891619e-05}, {"id": 918, "seek": 258392, "start": 2601.12, "end": 2604.32, "text": " and just write dc over dz equal dc over ds0,", "tokens": [50364, 439, 264, 40468, 763, 510, 300, 710, 815, 6503, 13, 50602, 50602, 400, 370, 286, 393, 445, 2464, 760, 257, 588, 2199, 551, 13, 50764, 50764, 1436, 274, 66, 295, 1958, 307, 2681, 281, 261, 15, 1413, 9758, 11, 50914, 50914, 293, 274, 82, 295, 568, 307, 261, 17, 1413, 9758, 11, 286, 393, 5452, 341, 294, 456, 51224, 51224, 293, 445, 2464, 274, 66, 670, 9758, 2681, 274, 66, 670, 274, 82, 15, 11, 51384, 51384, 597, 286, 6552, 307, 2570, 11, 1413, 261, 15, 1804, 274, 66, 670, 274, 82, 16, 1413, 261, 16, 51600, 51600, 1804, 274, 66, 670, 274, 82, 17, 1413, 261, 17, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.09969556859109253, "compression_ratio": 1.7142857142857142, "no_speech_prob": 2.144329118891619e-05}, {"id": 919, "seek": 258392, "start": 2604.32, "end": 2608.64, "text": " which I assume is known, times w0 plus dc over ds1 times w1", "tokens": [50364, 439, 264, 40468, 763, 510, 300, 710, 815, 6503, 13, 50602, 50602, 400, 370, 286, 393, 445, 2464, 760, 257, 588, 2199, 551, 13, 50764, 50764, 1436, 274, 66, 295, 1958, 307, 2681, 281, 261, 15, 1413, 9758, 11, 50914, 50914, 293, 274, 82, 295, 568, 307, 261, 17, 1413, 9758, 11, 286, 393, 5452, 341, 294, 456, 51224, 51224, 293, 445, 2464, 274, 66, 670, 9758, 2681, 274, 66, 670, 274, 82, 15, 11, 51384, 51384, 597, 286, 6552, 307, 2570, 11, 1413, 261, 15, 1804, 274, 66, 670, 274, 82, 16, 1413, 261, 16, 51600, 51600, 1804, 274, 66, 670, 274, 82, 17, 1413, 261, 17, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.09969556859109253, "compression_ratio": 1.7142857142857142, "no_speech_prob": 2.144329118891619e-05}, {"id": 920, "seek": 258392, "start": 2608.64, "end": 2611.7200000000003, "text": " plus dc over ds2 times w2.", "tokens": [50364, 439, 264, 40468, 763, 510, 300, 710, 815, 6503, 13, 50602, 50602, 400, 370, 286, 393, 445, 2464, 760, 257, 588, 2199, 551, 13, 50764, 50764, 1436, 274, 66, 295, 1958, 307, 2681, 281, 261, 15, 1413, 9758, 11, 50914, 50914, 293, 274, 82, 295, 568, 307, 261, 17, 1413, 9758, 11, 286, 393, 5452, 341, 294, 456, 51224, 51224, 293, 445, 2464, 274, 66, 670, 9758, 2681, 274, 66, 670, 274, 82, 15, 11, 51384, 51384, 597, 286, 6552, 307, 2570, 11, 1413, 261, 15, 1804, 274, 66, 670, 274, 82, 16, 1413, 261, 16, 51600, 51600, 1804, 274, 66, 670, 274, 82, 17, 1413, 261, 17, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.09969556859109253, "compression_ratio": 1.7142857142857142, "no_speech_prob": 2.144329118891619e-05}, {"id": 921, "seek": 261172, "start": 2611.72, "end": 2615.3999999999996, "text": " If I want to represent this operation graphically,", "tokens": [50364, 759, 286, 528, 281, 2906, 341, 6916, 4295, 984, 11, 50548, 50548, 341, 307, 4898, 322, 264, 558, 510, 13, 50646, 50646, 286, 362, 274, 66, 670, 274, 82, 15, 11, 274, 66, 670, 274, 82, 16, 11, 274, 66, 670, 274, 82, 17, 11, 50892, 50892, 597, 286, 6552, 366, 2570, 11, 366, 2212, 281, 385, 6063, 13, 51052, 51052, 286, 14722, 274, 66, 670, 274, 82, 15, 17207, 538, 261, 15, 11, 51466, 51466, 286, 12972, 274, 66, 670, 274, 82, 16, 538, 261, 16, 11, 274, 66, 670, 274, 82, 17, 538, 261, 17, 13, 51674, 51674, 286, 2408, 552, 493, 11, 293, 300, 2709, 385, 274, 66, 670, 9758, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.09192950038586632, "compression_ratio": 1.7444444444444445, "no_speech_prob": 3.9996186387725174e-05}, {"id": 922, "seek": 261172, "start": 2615.3999999999996, "end": 2617.3599999999997, "text": " this is shown on the right here.", "tokens": [50364, 759, 286, 528, 281, 2906, 341, 6916, 4295, 984, 11, 50548, 50548, 341, 307, 4898, 322, 264, 558, 510, 13, 50646, 50646, 286, 362, 274, 66, 670, 274, 82, 15, 11, 274, 66, 670, 274, 82, 16, 11, 274, 66, 670, 274, 82, 17, 11, 50892, 50892, 597, 286, 6552, 366, 2570, 11, 366, 2212, 281, 385, 6063, 13, 51052, 51052, 286, 14722, 274, 66, 670, 274, 82, 15, 17207, 538, 261, 15, 11, 51466, 51466, 286, 12972, 274, 66, 670, 274, 82, 16, 538, 261, 16, 11, 274, 66, 670, 274, 82, 17, 538, 261, 17, 13, 51674, 51674, 286, 2408, 552, 493, 11, 293, 300, 2709, 385, 274, 66, 670, 9758, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.09192950038586632, "compression_ratio": 1.7444444444444445, "no_speech_prob": 3.9996186387725174e-05}, {"id": 923, "seek": 261172, "start": 2617.3599999999997, "end": 2622.2799999999997, "text": " I have dc over ds0, dc over ds1, dc over ds2,", "tokens": [50364, 759, 286, 528, 281, 2906, 341, 6916, 4295, 984, 11, 50548, 50548, 341, 307, 4898, 322, 264, 558, 510, 13, 50646, 50646, 286, 362, 274, 66, 670, 274, 82, 15, 11, 274, 66, 670, 274, 82, 16, 11, 274, 66, 670, 274, 82, 17, 11, 50892, 50892, 597, 286, 6552, 366, 2570, 11, 366, 2212, 281, 385, 6063, 13, 51052, 51052, 286, 14722, 274, 66, 670, 274, 82, 15, 17207, 538, 261, 15, 11, 51466, 51466, 286, 12972, 274, 66, 670, 274, 82, 16, 538, 261, 16, 11, 274, 66, 670, 274, 82, 17, 538, 261, 17, 13, 51674, 51674, 286, 2408, 552, 493, 11, 293, 300, 2709, 385, 274, 66, 670, 9758, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.09192950038586632, "compression_ratio": 1.7444444444444445, "no_speech_prob": 3.9996186387725174e-05}, {"id": 924, "seek": 261172, "start": 2622.2799999999997, "end": 2625.48, "text": " which I assume are known, are given to me somehow.", "tokens": [50364, 759, 286, 528, 281, 2906, 341, 6916, 4295, 984, 11, 50548, 50548, 341, 307, 4898, 322, 264, 558, 510, 13, 50646, 50646, 286, 362, 274, 66, 670, 274, 82, 15, 11, 274, 66, 670, 274, 82, 16, 11, 274, 66, 670, 274, 82, 17, 11, 50892, 50892, 597, 286, 6552, 366, 2570, 11, 366, 2212, 281, 385, 6063, 13, 51052, 51052, 286, 14722, 274, 66, 670, 274, 82, 15, 17207, 538, 261, 15, 11, 51466, 51466, 286, 12972, 274, 66, 670, 274, 82, 16, 538, 261, 16, 11, 274, 66, 670, 274, 82, 17, 538, 261, 17, 13, 51674, 51674, 286, 2408, 552, 493, 11, 293, 300, 2709, 385, 274, 66, 670, 9758, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.09192950038586632, "compression_ratio": 1.7444444444444445, "no_speech_prob": 3.9996186387725174e-05}, {"id": 925, "seek": 261172, "start": 2625.48, "end": 2633.7599999999998, "text": " I compute dc over ds0 multiplied by w0,", "tokens": [50364, 759, 286, 528, 281, 2906, 341, 6916, 4295, 984, 11, 50548, 50548, 341, 307, 4898, 322, 264, 558, 510, 13, 50646, 50646, 286, 362, 274, 66, 670, 274, 82, 15, 11, 274, 66, 670, 274, 82, 16, 11, 274, 66, 670, 274, 82, 17, 11, 50892, 50892, 597, 286, 6552, 366, 2570, 11, 366, 2212, 281, 385, 6063, 13, 51052, 51052, 286, 14722, 274, 66, 670, 274, 82, 15, 17207, 538, 261, 15, 11, 51466, 51466, 286, 12972, 274, 66, 670, 274, 82, 16, 538, 261, 16, 11, 274, 66, 670, 274, 82, 17, 538, 261, 17, 13, 51674, 51674, 286, 2408, 552, 493, 11, 293, 300, 2709, 385, 274, 66, 670, 9758, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.09192950038586632, "compression_ratio": 1.7444444444444445, "no_speech_prob": 3.9996186387725174e-05}, {"id": 926, "seek": 261172, "start": 2633.7599999999998, "end": 2637.9199999999996, "text": " I multiply dc over ds1 by w1, dc over ds2 by w2.", "tokens": [50364, 759, 286, 528, 281, 2906, 341, 6916, 4295, 984, 11, 50548, 50548, 341, 307, 4898, 322, 264, 558, 510, 13, 50646, 50646, 286, 362, 274, 66, 670, 274, 82, 15, 11, 274, 66, 670, 274, 82, 16, 11, 274, 66, 670, 274, 82, 17, 11, 50892, 50892, 597, 286, 6552, 366, 2570, 11, 366, 2212, 281, 385, 6063, 13, 51052, 51052, 286, 14722, 274, 66, 670, 274, 82, 15, 17207, 538, 261, 15, 11, 51466, 51466, 286, 12972, 274, 66, 670, 274, 82, 16, 538, 261, 16, 11, 274, 66, 670, 274, 82, 17, 538, 261, 17, 13, 51674, 51674, 286, 2408, 552, 493, 11, 293, 300, 2709, 385, 274, 66, 670, 9758, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.09192950038586632, "compression_ratio": 1.7444444444444445, "no_speech_prob": 3.9996186387725174e-05}, {"id": 927, "seek": 261172, "start": 2637.9199999999996, "end": 2640.8399999999997, "text": " I sum them up, and that gives me dc over dz.", "tokens": [50364, 759, 286, 528, 281, 2906, 341, 6916, 4295, 984, 11, 50548, 50548, 341, 307, 4898, 322, 264, 558, 510, 13, 50646, 50646, 286, 362, 274, 66, 670, 274, 82, 15, 11, 274, 66, 670, 274, 82, 16, 11, 274, 66, 670, 274, 82, 17, 11, 50892, 50892, 597, 286, 6552, 366, 2570, 11, 366, 2212, 281, 385, 6063, 13, 51052, 51052, 286, 14722, 274, 66, 670, 274, 82, 15, 17207, 538, 261, 15, 11, 51466, 51466, 286, 12972, 274, 66, 670, 274, 82, 16, 538, 261, 16, 11, 274, 66, 670, 274, 82, 17, 538, 261, 17, 13, 51674, 51674, 286, 2408, 552, 493, 11, 293, 300, 2709, 385, 274, 66, 670, 9758, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.09192950038586632, "compression_ratio": 1.7444444444444445, "no_speech_prob": 3.9996186387725174e-05}, {"id": 928, "seek": 264084, "start": 2640.84, "end": 2644.04, "text": " It's just the formula here.", "tokens": [50364, 467, 311, 445, 264, 8513, 510, 13, 50524, 50524, 407, 510, 311, 264, 1627, 4282, 466, 646, 38377, 50660, 50660, 807, 257, 8213, 10088, 300, 715, 1819, 32807, 34499, 13, 50852, 50852, 509, 747, 264, 912, 17443, 11, 293, 291, 920, 50986, 50986, 14722, 32807, 2408, 365, 729, 17443, 11, 51072, 51072, 457, 291, 764, 264, 17443, 12204, 13, 51190, 51190, 407, 5699, 291, 632, 264, 4985, 300, 390, 7750, 1080, 5598, 51316, 51316, 281, 3866, 23930, 11, 281, 3866, 6815, 807, 257, 3364, 11, 51606, 51606, 291, 747, 264, 16235, 295, 264, 2063, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.16159587976883868, "compression_ratio": 1.7945205479452055, "no_speech_prob": 1.618624446564354e-05}, {"id": 929, "seek": 264084, "start": 2644.04, "end": 2646.76, "text": " So here's the cool trick about back propagation", "tokens": [50364, 467, 311, 445, 264, 8513, 510, 13, 50524, 50524, 407, 510, 311, 264, 1627, 4282, 466, 646, 38377, 50660, 50660, 807, 257, 8213, 10088, 300, 715, 1819, 32807, 34499, 13, 50852, 50852, 509, 747, 264, 912, 17443, 11, 293, 291, 920, 50986, 50986, 14722, 32807, 2408, 365, 729, 17443, 11, 51072, 51072, 457, 291, 764, 264, 17443, 12204, 13, 51190, 51190, 407, 5699, 291, 632, 264, 4985, 300, 390, 7750, 1080, 5598, 51316, 51316, 281, 3866, 23930, 11, 281, 3866, 6815, 807, 257, 3364, 11, 51606, 51606, 291, 747, 264, 16235, 295, 264, 2063, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.16159587976883868, "compression_ratio": 1.7945205479452055, "no_speech_prob": 1.618624446564354e-05}, {"id": 930, "seek": 264084, "start": 2646.76, "end": 2650.6000000000004, "text": " through a linear module that computes weighted sums.", "tokens": [50364, 467, 311, 445, 264, 8513, 510, 13, 50524, 50524, 407, 510, 311, 264, 1627, 4282, 466, 646, 38377, 50660, 50660, 807, 257, 8213, 10088, 300, 715, 1819, 32807, 34499, 13, 50852, 50852, 509, 747, 264, 912, 17443, 11, 293, 291, 920, 50986, 50986, 14722, 32807, 2408, 365, 729, 17443, 11, 51072, 51072, 457, 291, 764, 264, 17443, 12204, 13, 51190, 51190, 407, 5699, 291, 632, 264, 4985, 300, 390, 7750, 1080, 5598, 51316, 51316, 281, 3866, 23930, 11, 281, 3866, 6815, 807, 257, 3364, 11, 51606, 51606, 291, 747, 264, 16235, 295, 264, 2063, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.16159587976883868, "compression_ratio": 1.7945205479452055, "no_speech_prob": 1.618624446564354e-05}, {"id": 931, "seek": 264084, "start": 2650.6000000000004, "end": 2653.28, "text": " You take the same weights, and you still", "tokens": [50364, 467, 311, 445, 264, 8513, 510, 13, 50524, 50524, 407, 510, 311, 264, 1627, 4282, 466, 646, 38377, 50660, 50660, 807, 257, 8213, 10088, 300, 715, 1819, 32807, 34499, 13, 50852, 50852, 509, 747, 264, 912, 17443, 11, 293, 291, 920, 50986, 50986, 14722, 32807, 2408, 365, 729, 17443, 11, 51072, 51072, 457, 291, 764, 264, 17443, 12204, 13, 51190, 51190, 407, 5699, 291, 632, 264, 4985, 300, 390, 7750, 1080, 5598, 51316, 51316, 281, 3866, 23930, 11, 281, 3866, 6815, 807, 257, 3364, 11, 51606, 51606, 291, 747, 264, 16235, 295, 264, 2063, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.16159587976883868, "compression_ratio": 1.7945205479452055, "no_speech_prob": 1.618624446564354e-05}, {"id": 932, "seek": 264084, "start": 2653.28, "end": 2655.0, "text": " compute weighted sum with those weights,", "tokens": [50364, 467, 311, 445, 264, 8513, 510, 13, 50524, 50524, 407, 510, 311, 264, 1627, 4282, 466, 646, 38377, 50660, 50660, 807, 257, 8213, 10088, 300, 715, 1819, 32807, 34499, 13, 50852, 50852, 509, 747, 264, 912, 17443, 11, 293, 291, 920, 50986, 50986, 14722, 32807, 2408, 365, 729, 17443, 11, 51072, 51072, 457, 291, 764, 264, 17443, 12204, 13, 51190, 51190, 407, 5699, 291, 632, 264, 4985, 300, 390, 7750, 1080, 5598, 51316, 51316, 281, 3866, 23930, 11, 281, 3866, 6815, 807, 257, 3364, 11, 51606, 51606, 291, 747, 264, 16235, 295, 264, 2063, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.16159587976883868, "compression_ratio": 1.7945205479452055, "no_speech_prob": 1.618624446564354e-05}, {"id": 933, "seek": 264084, "start": 2655.0, "end": 2657.36, "text": " but you use the weights backwards.", "tokens": [50364, 467, 311, 445, 264, 8513, 510, 13, 50524, 50524, 407, 510, 311, 264, 1627, 4282, 466, 646, 38377, 50660, 50660, 807, 257, 8213, 10088, 300, 715, 1819, 32807, 34499, 13, 50852, 50852, 509, 747, 264, 912, 17443, 11, 293, 291, 920, 50986, 50986, 14722, 32807, 2408, 365, 729, 17443, 11, 51072, 51072, 457, 291, 764, 264, 17443, 12204, 13, 51190, 51190, 407, 5699, 291, 632, 264, 4985, 300, 390, 7750, 1080, 5598, 51316, 51316, 281, 3866, 23930, 11, 281, 3866, 6815, 807, 257, 3364, 11, 51606, 51606, 291, 747, 264, 16235, 295, 264, 2063, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.16159587976883868, "compression_ratio": 1.7945205479452055, "no_speech_prob": 1.618624446564354e-05}, {"id": 934, "seek": 264084, "start": 2657.36, "end": 2659.88, "text": " So whenever you had the unit that was sending its output", "tokens": [50364, 467, 311, 445, 264, 8513, 510, 13, 50524, 50524, 407, 510, 311, 264, 1627, 4282, 466, 646, 38377, 50660, 50660, 807, 257, 8213, 10088, 300, 715, 1819, 32807, 34499, 13, 50852, 50852, 509, 747, 264, 912, 17443, 11, 293, 291, 920, 50986, 50986, 14722, 32807, 2408, 365, 729, 17443, 11, 51072, 51072, 457, 291, 764, 264, 17443, 12204, 13, 51190, 51190, 407, 5699, 291, 632, 264, 4985, 300, 390, 7750, 1080, 5598, 51316, 51316, 281, 3866, 23930, 11, 281, 3866, 6815, 807, 257, 3364, 11, 51606, 51606, 291, 747, 264, 16235, 295, 264, 2063, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.16159587976883868, "compression_ratio": 1.7945205479452055, "no_speech_prob": 1.618624446564354e-05}, {"id": 935, "seek": 264084, "start": 2659.88, "end": 2665.6800000000003, "text": " to multiple outputs, to multiple units through a weight,", "tokens": [50364, 467, 311, 445, 264, 8513, 510, 13, 50524, 50524, 407, 510, 311, 264, 1627, 4282, 466, 646, 38377, 50660, 50660, 807, 257, 8213, 10088, 300, 715, 1819, 32807, 34499, 13, 50852, 50852, 509, 747, 264, 912, 17443, 11, 293, 291, 920, 50986, 50986, 14722, 32807, 2408, 365, 729, 17443, 11, 51072, 51072, 457, 291, 764, 264, 17443, 12204, 13, 51190, 51190, 407, 5699, 291, 632, 264, 4985, 300, 390, 7750, 1080, 5598, 51316, 51316, 281, 3866, 23930, 11, 281, 3866, 6815, 807, 257, 3364, 11, 51606, 51606, 291, 747, 264, 16235, 295, 264, 2063, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.16159587976883868, "compression_ratio": 1.7945205479452055, "no_speech_prob": 1.618624446564354e-05}, {"id": 936, "seek": 264084, "start": 2665.6800000000003, "end": 2667.32, "text": " you take the gradient of the cost", "tokens": [50364, 467, 311, 445, 264, 8513, 510, 13, 50524, 50524, 407, 510, 311, 264, 1627, 4282, 466, 646, 38377, 50660, 50660, 807, 257, 8213, 10088, 300, 715, 1819, 32807, 34499, 13, 50852, 50852, 509, 747, 264, 912, 17443, 11, 293, 291, 920, 50986, 50986, 14722, 32807, 2408, 365, 729, 17443, 11, 51072, 51072, 457, 291, 764, 264, 17443, 12204, 13, 51190, 51190, 407, 5699, 291, 632, 264, 4985, 300, 390, 7750, 1080, 5598, 51316, 51316, 281, 3866, 23930, 11, 281, 3866, 6815, 807, 257, 3364, 11, 51606, 51606, 291, 747, 264, 16235, 295, 264, 2063, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.16159587976883868, "compression_ratio": 1.7945205479452055, "no_speech_prob": 1.618624446564354e-05}, {"id": 937, "seek": 266732, "start": 2667.32, "end": 2671.36, "text": " with respect to all those weighted sums,", "tokens": [50364, 365, 3104, 281, 439, 729, 32807, 34499, 11, 50566, 50566, 293, 291, 14722, 641, 32807, 2408, 12204, 50662, 50662, 1228, 264, 17443, 12204, 281, 483, 50836, 50836, 264, 16235, 365, 3104, 281, 264, 1785, 295, 264, 4985, 51052, 51052, 412, 264, 2767, 13, 51082, 51082, 400, 291, 393, 360, 341, 337, 439, 264, 6815, 13, 51198, 51198, 407, 309, 311, 1687, 2199, 13, 51270, 51270, 823, 11, 498, 291, 645, 281, 2464, 257, 1461, 51396, 51396, 281, 360, 646, 2365, 337, 13735, 18161, 36170, 294, 15329, 11, 51602, 51602, 309, 576, 747, 411, 1922, 257, 3028, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.16218028682293278, "compression_ratio": 1.6727272727272726, "no_speech_prob": 7.766113412799314e-06}, {"id": 938, "seek": 266732, "start": 2671.36, "end": 2673.28, "text": " and you compute their weighted sum backwards", "tokens": [50364, 365, 3104, 281, 439, 729, 32807, 34499, 11, 50566, 50566, 293, 291, 14722, 641, 32807, 2408, 12204, 50662, 50662, 1228, 264, 17443, 12204, 281, 483, 50836, 50836, 264, 16235, 365, 3104, 281, 264, 1785, 295, 264, 4985, 51052, 51052, 412, 264, 2767, 13, 51082, 51082, 400, 291, 393, 360, 341, 337, 439, 264, 6815, 13, 51198, 51198, 407, 309, 311, 1687, 2199, 13, 51270, 51270, 823, 11, 498, 291, 645, 281, 2464, 257, 1461, 51396, 51396, 281, 360, 646, 2365, 337, 13735, 18161, 36170, 294, 15329, 11, 51602, 51602, 309, 576, 747, 411, 1922, 257, 3028, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.16218028682293278, "compression_ratio": 1.6727272727272726, "no_speech_prob": 7.766113412799314e-06}, {"id": 939, "seek": 266732, "start": 2673.28, "end": 2676.76, "text": " using the weights backwards to get", "tokens": [50364, 365, 3104, 281, 439, 729, 32807, 34499, 11, 50566, 50566, 293, 291, 14722, 641, 32807, 2408, 12204, 50662, 50662, 1228, 264, 17443, 12204, 281, 483, 50836, 50836, 264, 16235, 365, 3104, 281, 264, 1785, 295, 264, 4985, 51052, 51052, 412, 264, 2767, 13, 51082, 51082, 400, 291, 393, 360, 341, 337, 439, 264, 6815, 13, 51198, 51198, 407, 309, 311, 1687, 2199, 13, 51270, 51270, 823, 11, 498, 291, 645, 281, 2464, 257, 1461, 51396, 51396, 281, 360, 646, 2365, 337, 13735, 18161, 36170, 294, 15329, 11, 51602, 51602, 309, 576, 747, 411, 1922, 257, 3028, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.16218028682293278, "compression_ratio": 1.6727272727272726, "no_speech_prob": 7.766113412799314e-06}, {"id": 940, "seek": 266732, "start": 2676.76, "end": 2681.0800000000004, "text": " the gradient with respect to the state of the unit", "tokens": [50364, 365, 3104, 281, 439, 729, 32807, 34499, 11, 50566, 50566, 293, 291, 14722, 641, 32807, 2408, 12204, 50662, 50662, 1228, 264, 17443, 12204, 281, 483, 50836, 50836, 264, 16235, 365, 3104, 281, 264, 1785, 295, 264, 4985, 51052, 51052, 412, 264, 2767, 13, 51082, 51082, 400, 291, 393, 360, 341, 337, 439, 264, 6815, 13, 51198, 51198, 407, 309, 311, 1687, 2199, 13, 51270, 51270, 823, 11, 498, 291, 645, 281, 2464, 257, 1461, 51396, 51396, 281, 360, 646, 2365, 337, 13735, 18161, 36170, 294, 15329, 11, 51602, 51602, 309, 576, 747, 411, 1922, 257, 3028, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.16218028682293278, "compression_ratio": 1.6727272727272726, "no_speech_prob": 7.766113412799314e-06}, {"id": 941, "seek": 266732, "start": 2681.0800000000004, "end": 2681.6800000000003, "text": " at the bottom.", "tokens": [50364, 365, 3104, 281, 439, 729, 32807, 34499, 11, 50566, 50566, 293, 291, 14722, 641, 32807, 2408, 12204, 50662, 50662, 1228, 264, 17443, 12204, 281, 483, 50836, 50836, 264, 16235, 365, 3104, 281, 264, 1785, 295, 264, 4985, 51052, 51052, 412, 264, 2767, 13, 51082, 51082, 400, 291, 393, 360, 341, 337, 439, 264, 6815, 13, 51198, 51198, 407, 309, 311, 1687, 2199, 13, 51270, 51270, 823, 11, 498, 291, 645, 281, 2464, 257, 1461, 51396, 51396, 281, 360, 646, 2365, 337, 13735, 18161, 36170, 294, 15329, 11, 51602, 51602, 309, 576, 747, 411, 1922, 257, 3028, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.16218028682293278, "compression_ratio": 1.6727272727272726, "no_speech_prob": 7.766113412799314e-06}, {"id": 942, "seek": 266732, "start": 2681.6800000000003, "end": 2684.0, "text": " And you can do this for all the units.", "tokens": [50364, 365, 3104, 281, 439, 729, 32807, 34499, 11, 50566, 50566, 293, 291, 14722, 641, 32807, 2408, 12204, 50662, 50662, 1228, 264, 17443, 12204, 281, 483, 50836, 50836, 264, 16235, 365, 3104, 281, 264, 1785, 295, 264, 4985, 51052, 51052, 412, 264, 2767, 13, 51082, 51082, 400, 291, 393, 360, 341, 337, 439, 264, 6815, 13, 51198, 51198, 407, 309, 311, 1687, 2199, 13, 51270, 51270, 823, 11, 498, 291, 645, 281, 2464, 257, 1461, 51396, 51396, 281, 360, 646, 2365, 337, 13735, 18161, 36170, 294, 15329, 11, 51602, 51602, 309, 576, 747, 411, 1922, 257, 3028, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.16218028682293278, "compression_ratio": 1.6727272727272726, "no_speech_prob": 7.766113412799314e-06}, {"id": 943, "seek": 266732, "start": 2684.0, "end": 2685.44, "text": " So it's super simple.", "tokens": [50364, 365, 3104, 281, 439, 729, 32807, 34499, 11, 50566, 50566, 293, 291, 14722, 641, 32807, 2408, 12204, 50662, 50662, 1228, 264, 17443, 12204, 281, 483, 50836, 50836, 264, 16235, 365, 3104, 281, 264, 1785, 295, 264, 4985, 51052, 51052, 412, 264, 2767, 13, 51082, 51082, 400, 291, 393, 360, 341, 337, 439, 264, 6815, 13, 51198, 51198, 407, 309, 311, 1687, 2199, 13, 51270, 51270, 823, 11, 498, 291, 645, 281, 2464, 257, 1461, 51396, 51396, 281, 360, 646, 2365, 337, 13735, 18161, 36170, 294, 15329, 11, 51602, 51602, 309, 576, 747, 411, 1922, 257, 3028, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.16218028682293278, "compression_ratio": 1.6727272727272726, "no_speech_prob": 7.766113412799314e-06}, {"id": 944, "seek": 266732, "start": 2685.44, "end": 2687.96, "text": " Now, if you were to write a program", "tokens": [50364, 365, 3104, 281, 439, 729, 32807, 34499, 11, 50566, 50566, 293, 291, 14722, 641, 32807, 2408, 12204, 50662, 50662, 1228, 264, 17443, 12204, 281, 483, 50836, 50836, 264, 16235, 365, 3104, 281, 264, 1785, 295, 264, 4985, 51052, 51052, 412, 264, 2767, 13, 51082, 51082, 400, 291, 393, 360, 341, 337, 439, 264, 6815, 13, 51198, 51198, 407, 309, 311, 1687, 2199, 13, 51270, 51270, 823, 11, 498, 291, 645, 281, 2464, 257, 1461, 51396, 51396, 281, 360, 646, 2365, 337, 13735, 18161, 36170, 294, 15329, 11, 51602, 51602, 309, 576, 747, 411, 1922, 257, 3028, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.16218028682293278, "compression_ratio": 1.6727272727272726, "no_speech_prob": 7.766113412799314e-06}, {"id": 945, "seek": 266732, "start": 2687.96, "end": 2692.0800000000004, "text": " to do back prop for classical neural nets in Python,", "tokens": [50364, 365, 3104, 281, 439, 729, 32807, 34499, 11, 50566, 50566, 293, 291, 14722, 641, 32807, 2408, 12204, 50662, 50662, 1228, 264, 17443, 12204, 281, 483, 50836, 50836, 264, 16235, 365, 3104, 281, 264, 1785, 295, 264, 4985, 51052, 51052, 412, 264, 2767, 13, 51082, 51082, 400, 291, 393, 360, 341, 337, 439, 264, 6815, 13, 51198, 51198, 407, 309, 311, 1687, 2199, 13, 51270, 51270, 823, 11, 498, 291, 645, 281, 2464, 257, 1461, 51396, 51396, 281, 360, 646, 2365, 337, 13735, 18161, 36170, 294, 15329, 11, 51602, 51602, 309, 576, 747, 411, 1922, 257, 3028, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.16218028682293278, "compression_ratio": 1.6727272727272726, "no_speech_prob": 7.766113412799314e-06}, {"id": 946, "seek": 266732, "start": 2692.0800000000004, "end": 2694.2400000000002, "text": " it would take like half a page.", "tokens": [50364, 365, 3104, 281, 439, 729, 32807, 34499, 11, 50566, 50566, 293, 291, 14722, 641, 32807, 2408, 12204, 50662, 50662, 1228, 264, 17443, 12204, 281, 483, 50836, 50836, 264, 16235, 365, 3104, 281, 264, 1785, 295, 264, 4985, 51052, 51052, 412, 264, 2767, 13, 51082, 51082, 400, 291, 393, 360, 341, 337, 439, 264, 6815, 13, 51198, 51198, 407, 309, 311, 1687, 2199, 13, 51270, 51270, 823, 11, 498, 291, 645, 281, 2464, 257, 1461, 51396, 51396, 281, 360, 646, 2365, 337, 13735, 18161, 36170, 294, 15329, 11, 51602, 51602, 309, 576, 747, 411, 1922, 257, 3028, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.16218028682293278, "compression_ratio": 1.6727272727272726, "no_speech_prob": 7.766113412799314e-06}, {"id": 947, "seek": 269424, "start": 2694.24, "end": 2697.68, "text": " It's very, very simple.", "tokens": [50364, 467, 311, 588, 11, 588, 2199, 13, 50536, 50536, 1692, 311, 472, 2445, 281, 14722, 32807, 34499, 516, 2128, 50678, 50678, 294, 264, 558, 1668, 13, 50730, 50730, 1692, 311, 1071, 2445, 293, 9275, 264, 2107, 1889, 17409, 13, 50906, 50906, 1692, 311, 1071, 2445, 281, 14722, 32807, 34499, 516, 51088, 51088, 23897, 293, 30955, 538, 264, 13760, 295, 264, 2107, 1889, 17409, 51288, 51288, 412, 633, 1823, 13, 51384, 51384, 467, 311, 6252, 2199, 13, 51492, 51492, 708, 311, 8830, 307, 300, 309, 1890, 370, 938, 337, 561, 51586, 51586, 281, 4325, 341, 390, 370, 4420, 11, 1310, 51692, 51692, 570, 309, 390, 886, 2199, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19589132016843502, "compression_ratio": 1.8658008658008658, "no_speech_prob": 1.2027598131680861e-05}, {"id": 948, "seek": 269424, "start": 2697.68, "end": 2700.52, "text": " Here's one function to compute weighted sums going forward", "tokens": [50364, 467, 311, 588, 11, 588, 2199, 13, 50536, 50536, 1692, 311, 472, 2445, 281, 14722, 32807, 34499, 516, 2128, 50678, 50678, 294, 264, 558, 1668, 13, 50730, 50730, 1692, 311, 1071, 2445, 293, 9275, 264, 2107, 1889, 17409, 13, 50906, 50906, 1692, 311, 1071, 2445, 281, 14722, 32807, 34499, 516, 51088, 51088, 23897, 293, 30955, 538, 264, 13760, 295, 264, 2107, 1889, 17409, 51288, 51288, 412, 633, 1823, 13, 51384, 51384, 467, 311, 6252, 2199, 13, 51492, 51492, 708, 311, 8830, 307, 300, 309, 1890, 370, 938, 337, 561, 51586, 51586, 281, 4325, 341, 390, 370, 4420, 11, 1310, 51692, 51692, 570, 309, 390, 886, 2199, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19589132016843502, "compression_ratio": 1.8658008658008658, "no_speech_prob": 1.2027598131680861e-05}, {"id": 949, "seek": 269424, "start": 2700.52, "end": 2701.56, "text": " in the right order.", "tokens": [50364, 467, 311, 588, 11, 588, 2199, 13, 50536, 50536, 1692, 311, 472, 2445, 281, 14722, 32807, 34499, 516, 2128, 50678, 50678, 294, 264, 558, 1668, 13, 50730, 50730, 1692, 311, 1071, 2445, 293, 9275, 264, 2107, 1889, 17409, 13, 50906, 50906, 1692, 311, 1071, 2445, 281, 14722, 32807, 34499, 516, 51088, 51088, 23897, 293, 30955, 538, 264, 13760, 295, 264, 2107, 1889, 17409, 51288, 51288, 412, 633, 1823, 13, 51384, 51384, 467, 311, 6252, 2199, 13, 51492, 51492, 708, 311, 8830, 307, 300, 309, 1890, 370, 938, 337, 561, 51586, 51586, 281, 4325, 341, 390, 370, 4420, 11, 1310, 51692, 51692, 570, 309, 390, 886, 2199, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19589132016843502, "compression_ratio": 1.8658008658008658, "no_speech_prob": 1.2027598131680861e-05}, {"id": 950, "seek": 269424, "start": 2701.56, "end": 2705.08, "text": " Here's another function and applying the nonlinearity.", "tokens": [50364, 467, 311, 588, 11, 588, 2199, 13, 50536, 50536, 1692, 311, 472, 2445, 281, 14722, 32807, 34499, 516, 2128, 50678, 50678, 294, 264, 558, 1668, 13, 50730, 50730, 1692, 311, 1071, 2445, 293, 9275, 264, 2107, 1889, 17409, 13, 50906, 50906, 1692, 311, 1071, 2445, 281, 14722, 32807, 34499, 516, 51088, 51088, 23897, 293, 30955, 538, 264, 13760, 295, 264, 2107, 1889, 17409, 51288, 51288, 412, 633, 1823, 13, 51384, 51384, 467, 311, 6252, 2199, 13, 51492, 51492, 708, 311, 8830, 307, 300, 309, 1890, 370, 938, 337, 561, 51586, 51586, 281, 4325, 341, 390, 370, 4420, 11, 1310, 51692, 51692, 570, 309, 390, 886, 2199, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19589132016843502, "compression_ratio": 1.8658008658008658, "no_speech_prob": 1.2027598131680861e-05}, {"id": 951, "seek": 269424, "start": 2705.08, "end": 2708.72, "text": " Here's another function to compute weighted sums going", "tokens": [50364, 467, 311, 588, 11, 588, 2199, 13, 50536, 50536, 1692, 311, 472, 2445, 281, 14722, 32807, 34499, 516, 2128, 50678, 50678, 294, 264, 558, 1668, 13, 50730, 50730, 1692, 311, 1071, 2445, 293, 9275, 264, 2107, 1889, 17409, 13, 50906, 50906, 1692, 311, 1071, 2445, 281, 14722, 32807, 34499, 516, 51088, 51088, 23897, 293, 30955, 538, 264, 13760, 295, 264, 2107, 1889, 17409, 51288, 51288, 412, 633, 1823, 13, 51384, 51384, 467, 311, 6252, 2199, 13, 51492, 51492, 708, 311, 8830, 307, 300, 309, 1890, 370, 938, 337, 561, 51586, 51586, 281, 4325, 341, 390, 370, 4420, 11, 1310, 51692, 51692, 570, 309, 390, 886, 2199, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19589132016843502, "compression_ratio": 1.8658008658008658, "no_speech_prob": 1.2027598131680861e-05}, {"id": 952, "seek": 269424, "start": 2708.72, "end": 2712.72, "text": " backward and multiplying by the derivative of the nonlinearity", "tokens": [50364, 467, 311, 588, 11, 588, 2199, 13, 50536, 50536, 1692, 311, 472, 2445, 281, 14722, 32807, 34499, 516, 2128, 50678, 50678, 294, 264, 558, 1668, 13, 50730, 50730, 1692, 311, 1071, 2445, 293, 9275, 264, 2107, 1889, 17409, 13, 50906, 50906, 1692, 311, 1071, 2445, 281, 14722, 32807, 34499, 516, 51088, 51088, 23897, 293, 30955, 538, 264, 13760, 295, 264, 2107, 1889, 17409, 51288, 51288, 412, 633, 1823, 13, 51384, 51384, 467, 311, 6252, 2199, 13, 51492, 51492, 708, 311, 8830, 307, 300, 309, 1890, 370, 938, 337, 561, 51586, 51586, 281, 4325, 341, 390, 370, 4420, 11, 1310, 51692, 51692, 570, 309, 390, 886, 2199, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19589132016843502, "compression_ratio": 1.8658008658008658, "no_speech_prob": 1.2027598131680861e-05}, {"id": 953, "seek": 269424, "start": 2712.72, "end": 2714.64, "text": " at every step.", "tokens": [50364, 467, 311, 588, 11, 588, 2199, 13, 50536, 50536, 1692, 311, 472, 2445, 281, 14722, 32807, 34499, 516, 2128, 50678, 50678, 294, 264, 558, 1668, 13, 50730, 50730, 1692, 311, 1071, 2445, 293, 9275, 264, 2107, 1889, 17409, 13, 50906, 50906, 1692, 311, 1071, 2445, 281, 14722, 32807, 34499, 516, 51088, 51088, 23897, 293, 30955, 538, 264, 13760, 295, 264, 2107, 1889, 17409, 51288, 51288, 412, 633, 1823, 13, 51384, 51384, 467, 311, 6252, 2199, 13, 51492, 51492, 708, 311, 8830, 307, 300, 309, 1890, 370, 938, 337, 561, 51586, 51586, 281, 4325, 341, 390, 370, 4420, 11, 1310, 51692, 51692, 570, 309, 390, 886, 2199, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19589132016843502, "compression_ratio": 1.8658008658008658, "no_speech_prob": 1.2027598131680861e-05}, {"id": 954, "seek": 269424, "start": 2714.64, "end": 2716.7999999999997, "text": " It's incredibly simple.", "tokens": [50364, 467, 311, 588, 11, 588, 2199, 13, 50536, 50536, 1692, 311, 472, 2445, 281, 14722, 32807, 34499, 516, 2128, 50678, 50678, 294, 264, 558, 1668, 13, 50730, 50730, 1692, 311, 1071, 2445, 293, 9275, 264, 2107, 1889, 17409, 13, 50906, 50906, 1692, 311, 1071, 2445, 281, 14722, 32807, 34499, 516, 51088, 51088, 23897, 293, 30955, 538, 264, 13760, 295, 264, 2107, 1889, 17409, 51288, 51288, 412, 633, 1823, 13, 51384, 51384, 467, 311, 6252, 2199, 13, 51492, 51492, 708, 311, 8830, 307, 300, 309, 1890, 370, 938, 337, 561, 51586, 51586, 281, 4325, 341, 390, 370, 4420, 11, 1310, 51692, 51692, 570, 309, 390, 886, 2199, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19589132016843502, "compression_ratio": 1.8658008658008658, "no_speech_prob": 1.2027598131680861e-05}, {"id": 955, "seek": 269424, "start": 2716.7999999999997, "end": 2718.68, "text": " What's surprising is that it took so long for people", "tokens": [50364, 467, 311, 588, 11, 588, 2199, 13, 50536, 50536, 1692, 311, 472, 2445, 281, 14722, 32807, 34499, 516, 2128, 50678, 50678, 294, 264, 558, 1668, 13, 50730, 50730, 1692, 311, 1071, 2445, 293, 9275, 264, 2107, 1889, 17409, 13, 50906, 50906, 1692, 311, 1071, 2445, 281, 14722, 32807, 34499, 516, 51088, 51088, 23897, 293, 30955, 538, 264, 13760, 295, 264, 2107, 1889, 17409, 51288, 51288, 412, 633, 1823, 13, 51384, 51384, 467, 311, 6252, 2199, 13, 51492, 51492, 708, 311, 8830, 307, 300, 309, 1890, 370, 938, 337, 561, 51586, 51586, 281, 4325, 341, 390, 370, 4420, 11, 1310, 51692, 51692, 570, 309, 390, 886, 2199, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19589132016843502, "compression_ratio": 1.8658008658008658, "no_speech_prob": 1.2027598131680861e-05}, {"id": 956, "seek": 269424, "start": 2718.68, "end": 2720.7999999999997, "text": " to realize this was so useful, maybe", "tokens": [50364, 467, 311, 588, 11, 588, 2199, 13, 50536, 50536, 1692, 311, 472, 2445, 281, 14722, 32807, 34499, 516, 2128, 50678, 50678, 294, 264, 558, 1668, 13, 50730, 50730, 1692, 311, 1071, 2445, 293, 9275, 264, 2107, 1889, 17409, 13, 50906, 50906, 1692, 311, 1071, 2445, 281, 14722, 32807, 34499, 516, 51088, 51088, 23897, 293, 30955, 538, 264, 13760, 295, 264, 2107, 1889, 17409, 51288, 51288, 412, 633, 1823, 13, 51384, 51384, 467, 311, 6252, 2199, 13, 51492, 51492, 708, 311, 8830, 307, 300, 309, 1890, 370, 938, 337, 561, 51586, 51586, 281, 4325, 341, 390, 370, 4420, 11, 1310, 51692, 51692, 570, 309, 390, 886, 2199, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19589132016843502, "compression_ratio": 1.8658008658008658, "no_speech_prob": 1.2027598131680861e-05}, {"id": 957, "seek": 269424, "start": 2720.7999999999997, "end": 2723.8799999999997, "text": " because it was too simple.", "tokens": [50364, 467, 311, 588, 11, 588, 2199, 13, 50536, 50536, 1692, 311, 472, 2445, 281, 14722, 32807, 34499, 516, 2128, 50678, 50678, 294, 264, 558, 1668, 13, 50730, 50730, 1692, 311, 1071, 2445, 293, 9275, 264, 2107, 1889, 17409, 13, 50906, 50906, 1692, 311, 1071, 2445, 281, 14722, 32807, 34499, 516, 51088, 51088, 23897, 293, 30955, 538, 264, 13760, 295, 264, 2107, 1889, 17409, 51288, 51288, 412, 633, 1823, 13, 51384, 51384, 467, 311, 6252, 2199, 13, 51492, 51492, 708, 311, 8830, 307, 300, 309, 1890, 370, 938, 337, 561, 51586, 51586, 281, 4325, 341, 390, 370, 4420, 11, 1310, 51692, 51692, 570, 309, 390, 886, 2199, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19589132016843502, "compression_ratio": 1.8658008658008658, "no_speech_prob": 1.2027598131680861e-05}, {"id": 958, "seek": 272388, "start": 2723.88, "end": 2726.6, "text": " So it's useful to write this in matrix form.", "tokens": [50364, 407, 309, 311, 4420, 281, 2464, 341, 294, 8141, 1254, 13, 50500, 50500, 407, 534, 11, 264, 636, 291, 820, 519, 50626, 50626, 466, 257, 18161, 2533, 295, 341, 2010, 307, 1184, 1785, 50892, 50892, 1854, 264, 3209, 11, 519, 295, 309, 382, 257, 8062, 13, 50984, 50984, 467, 727, 312, 257, 2120, 327, 332, 11075, 10225, 11, 51060, 51060, 457, 718, 311, 519, 295, 309, 445, 382, 257, 8062, 13, 51168, 51168, 316, 8213, 6916, 307, 445, 516, 281, 12972, 341, 8062, 51290, 51290, 538, 8141, 13, 51336, 51336, 400, 1184, 5386, 295, 264, 8141, 8306, 439, 264, 17443, 51492, 51492, 300, 366, 1143, 281, 14722, 257, 1729, 32807, 51582, 51582, 2408, 337, 257, 1729, 4985, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14229444597588212, "compression_ratio": 1.7440944881889764, "no_speech_prob": 1.3842361113347579e-05}, {"id": 959, "seek": 272388, "start": 2726.6, "end": 2729.12, "text": " So really, the way you should think", "tokens": [50364, 407, 309, 311, 4420, 281, 2464, 341, 294, 8141, 1254, 13, 50500, 50500, 407, 534, 11, 264, 636, 291, 820, 519, 50626, 50626, 466, 257, 18161, 2533, 295, 341, 2010, 307, 1184, 1785, 50892, 50892, 1854, 264, 3209, 11, 519, 295, 309, 382, 257, 8062, 13, 50984, 50984, 467, 727, 312, 257, 2120, 327, 332, 11075, 10225, 11, 51060, 51060, 457, 718, 311, 519, 295, 309, 445, 382, 257, 8062, 13, 51168, 51168, 316, 8213, 6916, 307, 445, 516, 281, 12972, 341, 8062, 51290, 51290, 538, 8141, 13, 51336, 51336, 400, 1184, 5386, 295, 264, 8141, 8306, 439, 264, 17443, 51492, 51492, 300, 366, 1143, 281, 14722, 257, 1729, 32807, 51582, 51582, 2408, 337, 257, 1729, 4985, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14229444597588212, "compression_ratio": 1.7440944881889764, "no_speech_prob": 1.3842361113347579e-05}, {"id": 960, "seek": 272388, "start": 2729.12, "end": 2734.44, "text": " about a neural net of this type is each state", "tokens": [50364, 407, 309, 311, 4420, 281, 2464, 341, 294, 8141, 1254, 13, 50500, 50500, 407, 534, 11, 264, 636, 291, 820, 519, 50626, 50626, 466, 257, 18161, 2533, 295, 341, 2010, 307, 1184, 1785, 50892, 50892, 1854, 264, 3209, 11, 519, 295, 309, 382, 257, 8062, 13, 50984, 50984, 467, 727, 312, 257, 2120, 327, 332, 11075, 10225, 11, 51060, 51060, 457, 718, 311, 519, 295, 309, 445, 382, 257, 8062, 13, 51168, 51168, 316, 8213, 6916, 307, 445, 516, 281, 12972, 341, 8062, 51290, 51290, 538, 8141, 13, 51336, 51336, 400, 1184, 5386, 295, 264, 8141, 8306, 439, 264, 17443, 51492, 51492, 300, 366, 1143, 281, 14722, 257, 1729, 32807, 51582, 51582, 2408, 337, 257, 1729, 4985, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14229444597588212, "compression_ratio": 1.7440944881889764, "no_speech_prob": 1.3842361113347579e-05}, {"id": 961, "seek": 272388, "start": 2734.44, "end": 2736.28, "text": " inside the network, think of it as a vector.", "tokens": [50364, 407, 309, 311, 4420, 281, 2464, 341, 294, 8141, 1254, 13, 50500, 50500, 407, 534, 11, 264, 636, 291, 820, 519, 50626, 50626, 466, 257, 18161, 2533, 295, 341, 2010, 307, 1184, 1785, 50892, 50892, 1854, 264, 3209, 11, 519, 295, 309, 382, 257, 8062, 13, 50984, 50984, 467, 727, 312, 257, 2120, 327, 332, 11075, 10225, 11, 51060, 51060, 457, 718, 311, 519, 295, 309, 445, 382, 257, 8062, 13, 51168, 51168, 316, 8213, 6916, 307, 445, 516, 281, 12972, 341, 8062, 51290, 51290, 538, 8141, 13, 51336, 51336, 400, 1184, 5386, 295, 264, 8141, 8306, 439, 264, 17443, 51492, 51492, 300, 366, 1143, 281, 14722, 257, 1729, 32807, 51582, 51582, 2408, 337, 257, 1729, 4985, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14229444597588212, "compression_ratio": 1.7440944881889764, "no_speech_prob": 1.3842361113347579e-05}, {"id": 962, "seek": 272388, "start": 2736.28, "end": 2737.8, "text": " It could be a multidimensional array,", "tokens": [50364, 407, 309, 311, 4420, 281, 2464, 341, 294, 8141, 1254, 13, 50500, 50500, 407, 534, 11, 264, 636, 291, 820, 519, 50626, 50626, 466, 257, 18161, 2533, 295, 341, 2010, 307, 1184, 1785, 50892, 50892, 1854, 264, 3209, 11, 519, 295, 309, 382, 257, 8062, 13, 50984, 50984, 467, 727, 312, 257, 2120, 327, 332, 11075, 10225, 11, 51060, 51060, 457, 718, 311, 519, 295, 309, 445, 382, 257, 8062, 13, 51168, 51168, 316, 8213, 6916, 307, 445, 516, 281, 12972, 341, 8062, 51290, 51290, 538, 8141, 13, 51336, 51336, 400, 1184, 5386, 295, 264, 8141, 8306, 439, 264, 17443, 51492, 51492, 300, 366, 1143, 281, 14722, 257, 1729, 32807, 51582, 51582, 2408, 337, 257, 1729, 4985, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14229444597588212, "compression_ratio": 1.7440944881889764, "no_speech_prob": 1.3842361113347579e-05}, {"id": 963, "seek": 272388, "start": 2737.8, "end": 2739.96, "text": " but let's think of it just as a vector.", "tokens": [50364, 407, 309, 311, 4420, 281, 2464, 341, 294, 8141, 1254, 13, 50500, 50500, 407, 534, 11, 264, 636, 291, 820, 519, 50626, 50626, 466, 257, 18161, 2533, 295, 341, 2010, 307, 1184, 1785, 50892, 50892, 1854, 264, 3209, 11, 519, 295, 309, 382, 257, 8062, 13, 50984, 50984, 467, 727, 312, 257, 2120, 327, 332, 11075, 10225, 11, 51060, 51060, 457, 718, 311, 519, 295, 309, 445, 382, 257, 8062, 13, 51168, 51168, 316, 8213, 6916, 307, 445, 516, 281, 12972, 341, 8062, 51290, 51290, 538, 8141, 13, 51336, 51336, 400, 1184, 5386, 295, 264, 8141, 8306, 439, 264, 17443, 51492, 51492, 300, 366, 1143, 281, 14722, 257, 1729, 32807, 51582, 51582, 2408, 337, 257, 1729, 4985, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14229444597588212, "compression_ratio": 1.7440944881889764, "no_speech_prob": 1.3842361113347579e-05}, {"id": 964, "seek": 272388, "start": 2739.96, "end": 2742.4, "text": " A linear operation is just going to multiply this vector", "tokens": [50364, 407, 309, 311, 4420, 281, 2464, 341, 294, 8141, 1254, 13, 50500, 50500, 407, 534, 11, 264, 636, 291, 820, 519, 50626, 50626, 466, 257, 18161, 2533, 295, 341, 2010, 307, 1184, 1785, 50892, 50892, 1854, 264, 3209, 11, 519, 295, 309, 382, 257, 8062, 13, 50984, 50984, 467, 727, 312, 257, 2120, 327, 332, 11075, 10225, 11, 51060, 51060, 457, 718, 311, 519, 295, 309, 445, 382, 257, 8062, 13, 51168, 51168, 316, 8213, 6916, 307, 445, 516, 281, 12972, 341, 8062, 51290, 51290, 538, 8141, 13, 51336, 51336, 400, 1184, 5386, 295, 264, 8141, 8306, 439, 264, 17443, 51492, 51492, 300, 366, 1143, 281, 14722, 257, 1729, 32807, 51582, 51582, 2408, 337, 257, 1729, 4985, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14229444597588212, "compression_ratio": 1.7440944881889764, "no_speech_prob": 1.3842361113347579e-05}, {"id": 965, "seek": 272388, "start": 2742.4, "end": 2743.32, "text": " by matrix.", "tokens": [50364, 407, 309, 311, 4420, 281, 2464, 341, 294, 8141, 1254, 13, 50500, 50500, 407, 534, 11, 264, 636, 291, 820, 519, 50626, 50626, 466, 257, 18161, 2533, 295, 341, 2010, 307, 1184, 1785, 50892, 50892, 1854, 264, 3209, 11, 519, 295, 309, 382, 257, 8062, 13, 50984, 50984, 467, 727, 312, 257, 2120, 327, 332, 11075, 10225, 11, 51060, 51060, 457, 718, 311, 519, 295, 309, 445, 382, 257, 8062, 13, 51168, 51168, 316, 8213, 6916, 307, 445, 516, 281, 12972, 341, 8062, 51290, 51290, 538, 8141, 13, 51336, 51336, 400, 1184, 5386, 295, 264, 8141, 8306, 439, 264, 17443, 51492, 51492, 300, 366, 1143, 281, 14722, 257, 1729, 32807, 51582, 51582, 2408, 337, 257, 1729, 4985, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14229444597588212, "compression_ratio": 1.7440944881889764, "no_speech_prob": 1.3842361113347579e-05}, {"id": 966, "seek": 272388, "start": 2743.32, "end": 2746.44, "text": " And each row of the matrix contains all the weights", "tokens": [50364, 407, 309, 311, 4420, 281, 2464, 341, 294, 8141, 1254, 13, 50500, 50500, 407, 534, 11, 264, 636, 291, 820, 519, 50626, 50626, 466, 257, 18161, 2533, 295, 341, 2010, 307, 1184, 1785, 50892, 50892, 1854, 264, 3209, 11, 519, 295, 309, 382, 257, 8062, 13, 50984, 50984, 467, 727, 312, 257, 2120, 327, 332, 11075, 10225, 11, 51060, 51060, 457, 718, 311, 519, 295, 309, 445, 382, 257, 8062, 13, 51168, 51168, 316, 8213, 6916, 307, 445, 516, 281, 12972, 341, 8062, 51290, 51290, 538, 8141, 13, 51336, 51336, 400, 1184, 5386, 295, 264, 8141, 8306, 439, 264, 17443, 51492, 51492, 300, 366, 1143, 281, 14722, 257, 1729, 32807, 51582, 51582, 2408, 337, 257, 1729, 4985, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14229444597588212, "compression_ratio": 1.7440944881889764, "no_speech_prob": 1.3842361113347579e-05}, {"id": 967, "seek": 272388, "start": 2746.44, "end": 2748.2400000000002, "text": " that are used to compute a particular weighted", "tokens": [50364, 407, 309, 311, 4420, 281, 2464, 341, 294, 8141, 1254, 13, 50500, 50500, 407, 534, 11, 264, 636, 291, 820, 519, 50626, 50626, 466, 257, 18161, 2533, 295, 341, 2010, 307, 1184, 1785, 50892, 50892, 1854, 264, 3209, 11, 519, 295, 309, 382, 257, 8062, 13, 50984, 50984, 467, 727, 312, 257, 2120, 327, 332, 11075, 10225, 11, 51060, 51060, 457, 718, 311, 519, 295, 309, 445, 382, 257, 8062, 13, 51168, 51168, 316, 8213, 6916, 307, 445, 516, 281, 12972, 341, 8062, 51290, 51290, 538, 8141, 13, 51336, 51336, 400, 1184, 5386, 295, 264, 8141, 8306, 439, 264, 17443, 51492, 51492, 300, 366, 1143, 281, 14722, 257, 1729, 32807, 51582, 51582, 2408, 337, 257, 1729, 4985, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14229444597588212, "compression_ratio": 1.7440944881889764, "no_speech_prob": 1.3842361113347579e-05}, {"id": 968, "seek": 272388, "start": 2748.2400000000002, "end": 2751.88, "text": " sum for a particular unit.", "tokens": [50364, 407, 309, 311, 4420, 281, 2464, 341, 294, 8141, 1254, 13, 50500, 50500, 407, 534, 11, 264, 636, 291, 820, 519, 50626, 50626, 466, 257, 18161, 2533, 295, 341, 2010, 307, 1184, 1785, 50892, 50892, 1854, 264, 3209, 11, 519, 295, 309, 382, 257, 8062, 13, 50984, 50984, 467, 727, 312, 257, 2120, 327, 332, 11075, 10225, 11, 51060, 51060, 457, 718, 311, 519, 295, 309, 445, 382, 257, 8062, 13, 51168, 51168, 316, 8213, 6916, 307, 445, 516, 281, 12972, 341, 8062, 51290, 51290, 538, 8141, 13, 51336, 51336, 400, 1184, 5386, 295, 264, 8141, 8306, 439, 264, 17443, 51492, 51492, 300, 366, 1143, 281, 14722, 257, 1729, 32807, 51582, 51582, 2408, 337, 257, 1729, 4985, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14229444597588212, "compression_ratio": 1.7440944881889764, "no_speech_prob": 1.3842361113347579e-05}, {"id": 969, "seek": 275188, "start": 2751.88, "end": 2756.4, "text": " So multiply this by this matrix.", "tokens": [50364, 407, 12972, 341, 538, 341, 8141, 13, 50590, 50590, 407, 341, 10139, 575, 281, 312, 2681, 281, 300, 10139, 11, 597, 50718, 50718, 307, 406, 534, 731, 30207, 510, 11, 767, 13, 50820, 50820, 1485, 907, 13, 50846, 50846, 3358, 264, 3894, 4137, 11, 291, 4114, 274, 82, 15, 13, 50984, 50984, 708, 307, 262, 11, 27372, 770, 365, 3104, 281, 30, 51164, 51164, 407, 456, 307, 257, 274, 82, 13, 51258, 51258, 708, 307, 274, 82, 11, 1936, 30, 51354, 51354, 274, 82, 15, 11, 291, 914, 30, 51432, 51432, 865, 13, 51476, 51476, 2264, 11, 274, 82, 15, 307, 257, 40468, 399, 295, 262, 15, 11, 364, 36227, 1359, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.20903746563455333, "compression_ratio": 1.5405405405405406, "no_speech_prob": 2.0777606550836936e-05}, {"id": 970, "seek": 275188, "start": 2756.4, "end": 2758.96, "text": " So this dimension has to be equal to that dimension, which", "tokens": [50364, 407, 12972, 341, 538, 341, 8141, 13, 50590, 50590, 407, 341, 10139, 575, 281, 312, 2681, 281, 300, 10139, 11, 597, 50718, 50718, 307, 406, 534, 731, 30207, 510, 11, 767, 13, 50820, 50820, 1485, 907, 13, 50846, 50846, 3358, 264, 3894, 4137, 11, 291, 4114, 274, 82, 15, 13, 50984, 50984, 708, 307, 262, 11, 27372, 770, 365, 3104, 281, 30, 51164, 51164, 407, 456, 307, 257, 274, 82, 13, 51258, 51258, 708, 307, 274, 82, 11, 1936, 30, 51354, 51354, 274, 82, 15, 11, 291, 914, 30, 51432, 51432, 865, 13, 51476, 51476, 2264, 11, 274, 82, 15, 307, 257, 40468, 399, 295, 262, 15, 11, 364, 36227, 1359, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.20903746563455333, "compression_ratio": 1.5405405405405406, "no_speech_prob": 2.0777606550836936e-05}, {"id": 971, "seek": 275188, "start": 2758.96, "end": 2761.0, "text": " is not really well depicted here, actually.", "tokens": [50364, 407, 12972, 341, 538, 341, 8141, 13, 50590, 50590, 407, 341, 10139, 575, 281, 312, 2681, 281, 300, 10139, 11, 597, 50718, 50718, 307, 406, 534, 731, 30207, 510, 11, 767, 13, 50820, 50820, 1485, 907, 13, 50846, 50846, 3358, 264, 3894, 4137, 11, 291, 4114, 274, 82, 15, 13, 50984, 50984, 708, 307, 262, 11, 27372, 770, 365, 3104, 281, 30, 51164, 51164, 407, 456, 307, 257, 274, 82, 13, 51258, 51258, 708, 307, 274, 82, 11, 1936, 30, 51354, 51354, 274, 82, 15, 11, 291, 914, 30, 51432, 51432, 865, 13, 51476, 51476, 2264, 11, 274, 82, 15, 307, 257, 40468, 399, 295, 262, 15, 11, 364, 36227, 1359, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.20903746563455333, "compression_ratio": 1.5405405405405406, "no_speech_prob": 2.0777606550836936e-05}, {"id": 972, "seek": 275188, "start": 2761.0, "end": 2761.52, "text": " One sec.", "tokens": [50364, 407, 12972, 341, 538, 341, 8141, 13, 50590, 50590, 407, 341, 10139, 575, 281, 312, 2681, 281, 300, 10139, 11, 597, 50718, 50718, 307, 406, 534, 731, 30207, 510, 11, 767, 13, 50820, 50820, 1485, 907, 13, 50846, 50846, 3358, 264, 3894, 4137, 11, 291, 4114, 274, 82, 15, 13, 50984, 50984, 708, 307, 262, 11, 27372, 770, 365, 3104, 281, 30, 51164, 51164, 407, 456, 307, 257, 274, 82, 13, 51258, 51258, 708, 307, 274, 82, 11, 1936, 30, 51354, 51354, 274, 82, 15, 11, 291, 914, 30, 51432, 51432, 865, 13, 51476, 51476, 2264, 11, 274, 82, 15, 307, 257, 40468, 399, 295, 262, 15, 11, 364, 36227, 1359, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.20903746563455333, "compression_ratio": 1.5405405405405406, "no_speech_prob": 2.0777606550836936e-05}, {"id": 973, "seek": 275188, "start": 2761.52, "end": 2764.28, "text": " From the previous slide, you wrote ds0.", "tokens": [50364, 407, 12972, 341, 538, 341, 8141, 13, 50590, 50590, 407, 341, 10139, 575, 281, 312, 2681, 281, 300, 10139, 11, 597, 50718, 50718, 307, 406, 534, 731, 30207, 510, 11, 767, 13, 50820, 50820, 1485, 907, 13, 50846, 50846, 3358, 264, 3894, 4137, 11, 291, 4114, 274, 82, 15, 13, 50984, 50984, 708, 307, 262, 11, 27372, 770, 365, 3104, 281, 30, 51164, 51164, 407, 456, 307, 257, 274, 82, 13, 51258, 51258, 708, 307, 274, 82, 11, 1936, 30, 51354, 51354, 274, 82, 15, 11, 291, 914, 30, 51432, 51432, 865, 13, 51476, 51476, 2264, 11, 274, 82, 15, 307, 257, 40468, 399, 295, 262, 15, 11, 364, 36227, 1359, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.20903746563455333, "compression_ratio": 1.5405405405405406, "no_speech_prob": 2.0777606550836936e-05}, {"id": 974, "seek": 275188, "start": 2764.28, "end": 2767.88, "text": " What is s, differentiated with respect to?", "tokens": [50364, 407, 12972, 341, 538, 341, 8141, 13, 50590, 50590, 407, 341, 10139, 575, 281, 312, 2681, 281, 300, 10139, 11, 597, 50718, 50718, 307, 406, 534, 731, 30207, 510, 11, 767, 13, 50820, 50820, 1485, 907, 13, 50846, 50846, 3358, 264, 3894, 4137, 11, 291, 4114, 274, 82, 15, 13, 50984, 50984, 708, 307, 262, 11, 27372, 770, 365, 3104, 281, 30, 51164, 51164, 407, 456, 307, 257, 274, 82, 13, 51258, 51258, 708, 307, 274, 82, 11, 1936, 30, 51354, 51354, 274, 82, 15, 11, 291, 914, 30, 51432, 51432, 865, 13, 51476, 51476, 2264, 11, 274, 82, 15, 307, 257, 40468, 399, 295, 262, 15, 11, 364, 36227, 1359, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.20903746563455333, "compression_ratio": 1.5405405405405406, "no_speech_prob": 2.0777606550836936e-05}, {"id": 975, "seek": 275188, "start": 2767.88, "end": 2769.76, "text": " So there is a ds.", "tokens": [50364, 407, 12972, 341, 538, 341, 8141, 13, 50590, 50590, 407, 341, 10139, 575, 281, 312, 2681, 281, 300, 10139, 11, 597, 50718, 50718, 307, 406, 534, 731, 30207, 510, 11, 767, 13, 50820, 50820, 1485, 907, 13, 50846, 50846, 3358, 264, 3894, 4137, 11, 291, 4114, 274, 82, 15, 13, 50984, 50984, 708, 307, 262, 11, 27372, 770, 365, 3104, 281, 30, 51164, 51164, 407, 456, 307, 257, 274, 82, 13, 51258, 51258, 708, 307, 274, 82, 11, 1936, 30, 51354, 51354, 274, 82, 15, 11, 291, 914, 30, 51432, 51432, 865, 13, 51476, 51476, 2264, 11, 274, 82, 15, 307, 257, 40468, 399, 295, 262, 15, 11, 364, 36227, 1359, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.20903746563455333, "compression_ratio": 1.5405405405405406, "no_speech_prob": 2.0777606550836936e-05}, {"id": 976, "seek": 275188, "start": 2769.76, "end": 2771.6800000000003, "text": " What is ds, basically?", "tokens": [50364, 407, 12972, 341, 538, 341, 8141, 13, 50590, 50590, 407, 341, 10139, 575, 281, 312, 2681, 281, 300, 10139, 11, 597, 50718, 50718, 307, 406, 534, 731, 30207, 510, 11, 767, 13, 50820, 50820, 1485, 907, 13, 50846, 50846, 3358, 264, 3894, 4137, 11, 291, 4114, 274, 82, 15, 13, 50984, 50984, 708, 307, 262, 11, 27372, 770, 365, 3104, 281, 30, 51164, 51164, 407, 456, 307, 257, 274, 82, 13, 51258, 51258, 708, 307, 274, 82, 11, 1936, 30, 51354, 51354, 274, 82, 15, 11, 291, 914, 30, 51432, 51432, 865, 13, 51476, 51476, 2264, 11, 274, 82, 15, 307, 257, 40468, 399, 295, 262, 15, 11, 364, 36227, 1359, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.20903746563455333, "compression_ratio": 1.5405405405405406, "no_speech_prob": 2.0777606550836936e-05}, {"id": 977, "seek": 275188, "start": 2771.6800000000003, "end": 2773.2400000000002, "text": " ds0, you mean?", "tokens": [50364, 407, 12972, 341, 538, 341, 8141, 13, 50590, 50590, 407, 341, 10139, 575, 281, 312, 2681, 281, 300, 10139, 11, 597, 50718, 50718, 307, 406, 534, 731, 30207, 510, 11, 767, 13, 50820, 50820, 1485, 907, 13, 50846, 50846, 3358, 264, 3894, 4137, 11, 291, 4114, 274, 82, 15, 13, 50984, 50984, 708, 307, 262, 11, 27372, 770, 365, 3104, 281, 30, 51164, 51164, 407, 456, 307, 257, 274, 82, 13, 51258, 51258, 708, 307, 274, 82, 11, 1936, 30, 51354, 51354, 274, 82, 15, 11, 291, 914, 30, 51432, 51432, 865, 13, 51476, 51476, 2264, 11, 274, 82, 15, 307, 257, 40468, 399, 295, 262, 15, 11, 364, 36227, 1359, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.20903746563455333, "compression_ratio": 1.5405405405405406, "no_speech_prob": 2.0777606550836936e-05}, {"id": 978, "seek": 275188, "start": 2773.2400000000002, "end": 2774.12, "text": " Yeah.", "tokens": [50364, 407, 12972, 341, 538, 341, 8141, 13, 50590, 50590, 407, 341, 10139, 575, 281, 312, 2681, 281, 300, 10139, 11, 597, 50718, 50718, 307, 406, 534, 731, 30207, 510, 11, 767, 13, 50820, 50820, 1485, 907, 13, 50846, 50846, 3358, 264, 3894, 4137, 11, 291, 4114, 274, 82, 15, 13, 50984, 50984, 708, 307, 262, 11, 27372, 770, 365, 3104, 281, 30, 51164, 51164, 407, 456, 307, 257, 274, 82, 13, 51258, 51258, 708, 307, 274, 82, 11, 1936, 30, 51354, 51354, 274, 82, 15, 11, 291, 914, 30, 51432, 51432, 865, 13, 51476, 51476, 2264, 11, 274, 82, 15, 307, 257, 40468, 399, 295, 262, 15, 11, 364, 36227, 1359, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.20903746563455333, "compression_ratio": 1.5405405405405406, "no_speech_prob": 2.0777606550836936e-05}, {"id": 979, "seek": 275188, "start": 2774.12, "end": 2780.76, "text": " OK, ds0 is a perturbation of s0, an infinitely small", "tokens": [50364, 407, 12972, 341, 538, 341, 8141, 13, 50590, 50590, 407, 341, 10139, 575, 281, 312, 2681, 281, 300, 10139, 11, 597, 50718, 50718, 307, 406, 534, 731, 30207, 510, 11, 767, 13, 50820, 50820, 1485, 907, 13, 50846, 50846, 3358, 264, 3894, 4137, 11, 291, 4114, 274, 82, 15, 13, 50984, 50984, 708, 307, 262, 11, 27372, 770, 365, 3104, 281, 30, 51164, 51164, 407, 456, 307, 257, 274, 82, 13, 51258, 51258, 708, 307, 274, 82, 11, 1936, 30, 51354, 51354, 274, 82, 15, 11, 291, 914, 30, 51432, 51432, 865, 13, 51476, 51476, 2264, 11, 274, 82, 15, 307, 257, 40468, 399, 295, 262, 15, 11, 364, 36227, 1359, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.20903746563455333, "compression_ratio": 1.5405405405405406, "no_speech_prob": 2.0777606550836936e-05}, {"id": 980, "seek": 278076, "start": 2780.76, "end": 2783.28, "text": " perturbation of s0.", "tokens": [50364, 40468, 399, 295, 262, 15, 13, 50490, 50490, 12955, 380, 1871, 437, 309, 307, 13, 50614, 50614, 400, 437, 321, 434, 1566, 510, 307, 300, 498, 291, 362, 364, 36227, 50778, 50778, 1359, 40468, 399, 295, 262, 15, 11, 293, 291, 12972, 341, 40468, 399, 50974, 50974, 538, 264, 14641, 13760, 295, 269, 365, 3104, 281, 262, 15, 11, 51300, 51300, 291, 483, 264, 40468, 399, 295, 269, 11, 3993, 300, 23249, 51586, 51586, 281, 341, 40468, 399, 295, 262, 15, 13, 51670, 51670, 583, 321, 434, 406, 3102, 294, 445, 264, 40468, 399, 295, 262, 15, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.13776593114815505, "compression_ratio": 1.8131313131313131, "no_speech_prob": 1.0615788596624043e-05}, {"id": 981, "seek": 278076, "start": 2783.28, "end": 2785.76, "text": " Doesn't matter what it is.", "tokens": [50364, 40468, 399, 295, 262, 15, 13, 50490, 50490, 12955, 380, 1871, 437, 309, 307, 13, 50614, 50614, 400, 437, 321, 434, 1566, 510, 307, 300, 498, 291, 362, 364, 36227, 50778, 50778, 1359, 40468, 399, 295, 262, 15, 11, 293, 291, 12972, 341, 40468, 399, 50974, 50974, 538, 264, 14641, 13760, 295, 269, 365, 3104, 281, 262, 15, 11, 51300, 51300, 291, 483, 264, 40468, 399, 295, 269, 11, 3993, 300, 23249, 51586, 51586, 281, 341, 40468, 399, 295, 262, 15, 13, 51670, 51670, 583, 321, 434, 406, 3102, 294, 445, 264, 40468, 399, 295, 262, 15, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.13776593114815505, "compression_ratio": 1.8131313131313131, "no_speech_prob": 1.0615788596624043e-05}, {"id": 982, "seek": 278076, "start": 2785.76, "end": 2789.0400000000004, "text": " And what we're saying here is that if you have an infinitely", "tokens": [50364, 40468, 399, 295, 262, 15, 13, 50490, 50490, 12955, 380, 1871, 437, 309, 307, 13, 50614, 50614, 400, 437, 321, 434, 1566, 510, 307, 300, 498, 291, 362, 364, 36227, 50778, 50778, 1359, 40468, 399, 295, 262, 15, 11, 293, 291, 12972, 341, 40468, 399, 50974, 50974, 538, 264, 14641, 13760, 295, 269, 365, 3104, 281, 262, 15, 11, 51300, 51300, 291, 483, 264, 40468, 399, 295, 269, 11, 3993, 300, 23249, 51586, 51586, 281, 341, 40468, 399, 295, 262, 15, 13, 51670, 51670, 583, 321, 434, 406, 3102, 294, 445, 264, 40468, 399, 295, 262, 15, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.13776593114815505, "compression_ratio": 1.8131313131313131, "no_speech_prob": 1.0615788596624043e-05}, {"id": 983, "seek": 278076, "start": 2789.0400000000004, "end": 2792.96, "text": " small perturbation of s0, and you multiply this perturbation", "tokens": [50364, 40468, 399, 295, 262, 15, 13, 50490, 50490, 12955, 380, 1871, 437, 309, 307, 13, 50614, 50614, 400, 437, 321, 434, 1566, 510, 307, 300, 498, 291, 362, 364, 36227, 50778, 50778, 1359, 40468, 399, 295, 262, 15, 11, 293, 291, 12972, 341, 40468, 399, 50974, 50974, 538, 264, 14641, 13760, 295, 269, 365, 3104, 281, 262, 15, 11, 51300, 51300, 291, 483, 264, 40468, 399, 295, 269, 11, 3993, 300, 23249, 51586, 51586, 281, 341, 40468, 399, 295, 262, 15, 13, 51670, 51670, 583, 321, 434, 406, 3102, 294, 445, 264, 40468, 399, 295, 262, 15, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.13776593114815505, "compression_ratio": 1.8131313131313131, "no_speech_prob": 1.0615788596624043e-05}, {"id": 984, "seek": 278076, "start": 2792.96, "end": 2799.48, "text": " by the partial derivative of c with respect to s0,", "tokens": [50364, 40468, 399, 295, 262, 15, 13, 50490, 50490, 12955, 380, 1871, 437, 309, 307, 13, 50614, 50614, 400, 437, 321, 434, 1566, 510, 307, 300, 498, 291, 362, 364, 36227, 50778, 50778, 1359, 40468, 399, 295, 262, 15, 11, 293, 291, 12972, 341, 40468, 399, 50974, 50974, 538, 264, 14641, 13760, 295, 269, 365, 3104, 281, 262, 15, 11, 51300, 51300, 291, 483, 264, 40468, 399, 295, 269, 11, 3993, 300, 23249, 51586, 51586, 281, 341, 40468, 399, 295, 262, 15, 13, 51670, 51670, 583, 321, 434, 406, 3102, 294, 445, 264, 40468, 399, 295, 262, 15, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.13776593114815505, "compression_ratio": 1.8131313131313131, "no_speech_prob": 1.0615788596624043e-05}, {"id": 985, "seek": 278076, "start": 2799.48, "end": 2805.2000000000003, "text": " you get the perturbation of c, except that corresponds", "tokens": [50364, 40468, 399, 295, 262, 15, 13, 50490, 50490, 12955, 380, 1871, 437, 309, 307, 13, 50614, 50614, 400, 437, 321, 434, 1566, 510, 307, 300, 498, 291, 362, 364, 36227, 50778, 50778, 1359, 40468, 399, 295, 262, 15, 11, 293, 291, 12972, 341, 40468, 399, 50974, 50974, 538, 264, 14641, 13760, 295, 269, 365, 3104, 281, 262, 15, 11, 51300, 51300, 291, 483, 264, 40468, 399, 295, 269, 11, 3993, 300, 23249, 51586, 51586, 281, 341, 40468, 399, 295, 262, 15, 13, 51670, 51670, 583, 321, 434, 406, 3102, 294, 445, 264, 40468, 399, 295, 262, 15, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.13776593114815505, "compression_ratio": 1.8131313131313131, "no_speech_prob": 1.0615788596624043e-05}, {"id": 986, "seek": 278076, "start": 2805.2000000000003, "end": 2806.88, "text": " to this perturbation of s0.", "tokens": [50364, 40468, 399, 295, 262, 15, 13, 50490, 50490, 12955, 380, 1871, 437, 309, 307, 13, 50614, 50614, 400, 437, 321, 434, 1566, 510, 307, 300, 498, 291, 362, 364, 36227, 50778, 50778, 1359, 40468, 399, 295, 262, 15, 11, 293, 291, 12972, 341, 40468, 399, 50974, 50974, 538, 264, 14641, 13760, 295, 269, 365, 3104, 281, 262, 15, 11, 51300, 51300, 291, 483, 264, 40468, 399, 295, 269, 11, 3993, 300, 23249, 51586, 51586, 281, 341, 40468, 399, 295, 262, 15, 13, 51670, 51670, 583, 321, 434, 406, 3102, 294, 445, 264, 40468, 399, 295, 262, 15, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.13776593114815505, "compression_ratio": 1.8131313131313131, "no_speech_prob": 1.0615788596624043e-05}, {"id": 987, "seek": 278076, "start": 2806.88, "end": 2809.4, "text": " But we're not interested in just the perturbation of s0.", "tokens": [50364, 40468, 399, 295, 262, 15, 13, 50490, 50490, 12955, 380, 1871, 437, 309, 307, 13, 50614, 50614, 400, 437, 321, 434, 1566, 510, 307, 300, 498, 291, 362, 364, 36227, 50778, 50778, 1359, 40468, 399, 295, 262, 15, 11, 293, 291, 12972, 341, 40468, 399, 50974, 50974, 538, 264, 14641, 13760, 295, 269, 365, 3104, 281, 262, 15, 11, 51300, 51300, 291, 483, 264, 40468, 399, 295, 269, 11, 3993, 300, 23249, 51586, 51586, 281, 341, 40468, 399, 295, 262, 15, 13, 51670, 51670, 583, 321, 434, 406, 3102, 294, 445, 264, 40468, 399, 295, 262, 15, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.13776593114815505, "compression_ratio": 1.8131313131313131, "no_speech_prob": 1.0615788596624043e-05}, {"id": 988, "seek": 280940, "start": 2809.4, "end": 2811.84, "text": " We're also interested in the perturbation of s1 and s2.", "tokens": [50364, 492, 434, 611, 3102, 294, 264, 40468, 399, 295, 262, 16, 293, 262, 17, 13, 50486, 50486, 407, 264, 4787, 40468, 399, 295, 269, 576, 50584, 50584, 312, 264, 2408, 295, 264, 40468, 763, 295, 262, 15, 11, 262, 16, 11, 293, 262, 17, 50784, 50784, 17207, 538, 264, 11760, 14641, 13760, 295, 269, 50910, 50910, 365, 3104, 281, 1184, 295, 552, 13, 51068, 51068, 467, 311, 257, 6374, 551, 11, 558, 30, 51174, 51174, 467, 311, 406, 364, 6741, 551, 291, 434, 516, 281, 20459, 13, 51322, 51322, 1449, 3811, 300, 456, 307, 512, 40468, 399, 295, 262, 15, 510, 13, 51576, 51576, 639, 307, 516, 281, 40468, 269, 538, 512, 2158, 13, 51676, 51676, 400, 300, 2158, 307, 516, 281, 312, 264, 40468, 399, 295, 262, 15, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1323984762779752, "compression_ratio": 1.8565737051792828, "no_speech_prob": 2.07839493668871e-05}, {"id": 989, "seek": 280940, "start": 2811.84, "end": 2813.8, "text": " So the overall perturbation of c would", "tokens": [50364, 492, 434, 611, 3102, 294, 264, 40468, 399, 295, 262, 16, 293, 262, 17, 13, 50486, 50486, 407, 264, 4787, 40468, 399, 295, 269, 576, 50584, 50584, 312, 264, 2408, 295, 264, 40468, 763, 295, 262, 15, 11, 262, 16, 11, 293, 262, 17, 50784, 50784, 17207, 538, 264, 11760, 14641, 13760, 295, 269, 50910, 50910, 365, 3104, 281, 1184, 295, 552, 13, 51068, 51068, 467, 311, 257, 6374, 551, 11, 558, 30, 51174, 51174, 467, 311, 406, 364, 6741, 551, 291, 434, 516, 281, 20459, 13, 51322, 51322, 1449, 3811, 300, 456, 307, 512, 40468, 399, 295, 262, 15, 510, 13, 51576, 51576, 639, 307, 516, 281, 40468, 269, 538, 512, 2158, 13, 51676, 51676, 400, 300, 2158, 307, 516, 281, 312, 264, 40468, 399, 295, 262, 15, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1323984762779752, "compression_ratio": 1.8565737051792828, "no_speech_prob": 2.07839493668871e-05}, {"id": 990, "seek": 280940, "start": 2813.8, "end": 2817.8, "text": " be the sum of the perturbations of s0, s1, and s2", "tokens": [50364, 492, 434, 611, 3102, 294, 264, 40468, 399, 295, 262, 16, 293, 262, 17, 13, 50486, 50486, 407, 264, 4787, 40468, 399, 295, 269, 576, 50584, 50584, 312, 264, 2408, 295, 264, 40468, 763, 295, 262, 15, 11, 262, 16, 11, 293, 262, 17, 50784, 50784, 17207, 538, 264, 11760, 14641, 13760, 295, 269, 50910, 50910, 365, 3104, 281, 1184, 295, 552, 13, 51068, 51068, 467, 311, 257, 6374, 551, 11, 558, 30, 51174, 51174, 467, 311, 406, 364, 6741, 551, 291, 434, 516, 281, 20459, 13, 51322, 51322, 1449, 3811, 300, 456, 307, 512, 40468, 399, 295, 262, 15, 510, 13, 51576, 51576, 639, 307, 516, 281, 40468, 269, 538, 512, 2158, 13, 51676, 51676, 400, 300, 2158, 307, 516, 281, 312, 264, 40468, 399, 295, 262, 15, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1323984762779752, "compression_ratio": 1.8565737051792828, "no_speech_prob": 2.07839493668871e-05}, {"id": 991, "seek": 280940, "start": 2817.8, "end": 2820.32, "text": " multiplied by the corresponding partial derivative of c", "tokens": [50364, 492, 434, 611, 3102, 294, 264, 40468, 399, 295, 262, 16, 293, 262, 17, 13, 50486, 50486, 407, 264, 4787, 40468, 399, 295, 269, 576, 50584, 50584, 312, 264, 2408, 295, 264, 40468, 763, 295, 262, 15, 11, 262, 16, 11, 293, 262, 17, 50784, 50784, 17207, 538, 264, 11760, 14641, 13760, 295, 269, 50910, 50910, 365, 3104, 281, 1184, 295, 552, 13, 51068, 51068, 467, 311, 257, 6374, 551, 11, 558, 30, 51174, 51174, 467, 311, 406, 364, 6741, 551, 291, 434, 516, 281, 20459, 13, 51322, 51322, 1449, 3811, 300, 456, 307, 512, 40468, 399, 295, 262, 15, 510, 13, 51576, 51576, 639, 307, 516, 281, 40468, 269, 538, 512, 2158, 13, 51676, 51676, 400, 300, 2158, 307, 516, 281, 312, 264, 40468, 399, 295, 262, 15, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1323984762779752, "compression_ratio": 1.8565737051792828, "no_speech_prob": 2.07839493668871e-05}, {"id": 992, "seek": 280940, "start": 2820.32, "end": 2823.48, "text": " with respect to each of them.", "tokens": [50364, 492, 434, 611, 3102, 294, 264, 40468, 399, 295, 262, 16, 293, 262, 17, 13, 50486, 50486, 407, 264, 4787, 40468, 399, 295, 269, 576, 50584, 50584, 312, 264, 2408, 295, 264, 40468, 763, 295, 262, 15, 11, 262, 16, 11, 293, 262, 17, 50784, 50784, 17207, 538, 264, 11760, 14641, 13760, 295, 269, 50910, 50910, 365, 3104, 281, 1184, 295, 552, 13, 51068, 51068, 467, 311, 257, 6374, 551, 11, 558, 30, 51174, 51174, 467, 311, 406, 364, 6741, 551, 291, 434, 516, 281, 20459, 13, 51322, 51322, 1449, 3811, 300, 456, 307, 512, 40468, 399, 295, 262, 15, 510, 13, 51576, 51576, 639, 307, 516, 281, 40468, 269, 538, 512, 2158, 13, 51676, 51676, 400, 300, 2158, 307, 516, 281, 312, 264, 40468, 399, 295, 262, 15, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1323984762779752, "compression_ratio": 1.8565737051792828, "no_speech_prob": 2.07839493668871e-05}, {"id": 993, "seek": 280940, "start": 2823.48, "end": 2825.6, "text": " It's a virtual thing, right?", "tokens": [50364, 492, 434, 611, 3102, 294, 264, 40468, 399, 295, 262, 16, 293, 262, 17, 13, 50486, 50486, 407, 264, 4787, 40468, 399, 295, 269, 576, 50584, 50584, 312, 264, 2408, 295, 264, 40468, 763, 295, 262, 15, 11, 262, 16, 11, 293, 262, 17, 50784, 50784, 17207, 538, 264, 11760, 14641, 13760, 295, 269, 50910, 50910, 365, 3104, 281, 1184, 295, 552, 13, 51068, 51068, 467, 311, 257, 6374, 551, 11, 558, 30, 51174, 51174, 467, 311, 406, 364, 6741, 551, 291, 434, 516, 281, 20459, 13, 51322, 51322, 1449, 3811, 300, 456, 307, 512, 40468, 399, 295, 262, 15, 510, 13, 51576, 51576, 639, 307, 516, 281, 40468, 269, 538, 512, 2158, 13, 51676, 51676, 400, 300, 2158, 307, 516, 281, 312, 264, 40468, 399, 295, 262, 15, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1323984762779752, "compression_ratio": 1.8565737051792828, "no_speech_prob": 2.07839493668871e-05}, {"id": 994, "seek": 280940, "start": 2825.6, "end": 2828.56, "text": " It's not an existing thing you're going to manipulate.", "tokens": [50364, 492, 434, 611, 3102, 294, 264, 40468, 399, 295, 262, 16, 293, 262, 17, 13, 50486, 50486, 407, 264, 4787, 40468, 399, 295, 269, 576, 50584, 50584, 312, 264, 2408, 295, 264, 40468, 763, 295, 262, 15, 11, 262, 16, 11, 293, 262, 17, 50784, 50784, 17207, 538, 264, 11760, 14641, 13760, 295, 269, 50910, 50910, 365, 3104, 281, 1184, 295, 552, 13, 51068, 51068, 467, 311, 257, 6374, 551, 11, 558, 30, 51174, 51174, 467, 311, 406, 364, 6741, 551, 291, 434, 516, 281, 20459, 13, 51322, 51322, 1449, 3811, 300, 456, 307, 512, 40468, 399, 295, 262, 15, 510, 13, 51576, 51576, 639, 307, 516, 281, 40468, 269, 538, 512, 2158, 13, 51676, 51676, 400, 300, 2158, 307, 516, 281, 312, 264, 40468, 399, 295, 262, 15, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1323984762779752, "compression_ratio": 1.8565737051792828, "no_speech_prob": 2.07839493668871e-05}, {"id": 995, "seek": 280940, "start": 2828.56, "end": 2833.64, "text": " Just imagine that there is some perturbation of s0 here.", "tokens": [50364, 492, 434, 611, 3102, 294, 264, 40468, 399, 295, 262, 16, 293, 262, 17, 13, 50486, 50486, 407, 264, 4787, 40468, 399, 295, 269, 576, 50584, 50584, 312, 264, 2408, 295, 264, 40468, 763, 295, 262, 15, 11, 262, 16, 11, 293, 262, 17, 50784, 50784, 17207, 538, 264, 11760, 14641, 13760, 295, 269, 50910, 50910, 365, 3104, 281, 1184, 295, 552, 13, 51068, 51068, 467, 311, 257, 6374, 551, 11, 558, 30, 51174, 51174, 467, 311, 406, 364, 6741, 551, 291, 434, 516, 281, 20459, 13, 51322, 51322, 1449, 3811, 300, 456, 307, 512, 40468, 399, 295, 262, 15, 510, 13, 51576, 51576, 639, 307, 516, 281, 40468, 269, 538, 512, 2158, 13, 51676, 51676, 400, 300, 2158, 307, 516, 281, 312, 264, 40468, 399, 295, 262, 15, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1323984762779752, "compression_ratio": 1.8565737051792828, "no_speech_prob": 2.07839493668871e-05}, {"id": 996, "seek": 280940, "start": 2833.64, "end": 2835.64, "text": " This is going to perturb c by some value.", "tokens": [50364, 492, 434, 611, 3102, 294, 264, 40468, 399, 295, 262, 16, 293, 262, 17, 13, 50486, 50486, 407, 264, 4787, 40468, 399, 295, 269, 576, 50584, 50584, 312, 264, 2408, 295, 264, 40468, 763, 295, 262, 15, 11, 262, 16, 11, 293, 262, 17, 50784, 50784, 17207, 538, 264, 11760, 14641, 13760, 295, 269, 50910, 50910, 365, 3104, 281, 1184, 295, 552, 13, 51068, 51068, 467, 311, 257, 6374, 551, 11, 558, 30, 51174, 51174, 467, 311, 406, 364, 6741, 551, 291, 434, 516, 281, 20459, 13, 51322, 51322, 1449, 3811, 300, 456, 307, 512, 40468, 399, 295, 262, 15, 510, 13, 51576, 51576, 639, 307, 516, 281, 40468, 269, 538, 512, 2158, 13, 51676, 51676, 400, 300, 2158, 307, 516, 281, 312, 264, 40468, 399, 295, 262, 15, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1323984762779752, "compression_ratio": 1.8565737051792828, "no_speech_prob": 2.07839493668871e-05}, {"id": 997, "seek": 280940, "start": 2835.64, "end": 2837.8, "text": " And that value is going to be the perturbation of s0", "tokens": [50364, 492, 434, 611, 3102, 294, 264, 40468, 399, 295, 262, 16, 293, 262, 17, 13, 50486, 50486, 407, 264, 4787, 40468, 399, 295, 269, 576, 50584, 50584, 312, 264, 2408, 295, 264, 40468, 763, 295, 262, 15, 11, 262, 16, 11, 293, 262, 17, 50784, 50784, 17207, 538, 264, 11760, 14641, 13760, 295, 269, 50910, 50910, 365, 3104, 281, 1184, 295, 552, 13, 51068, 51068, 467, 311, 257, 6374, 551, 11, 558, 30, 51174, 51174, 467, 311, 406, 364, 6741, 551, 291, 434, 516, 281, 20459, 13, 51322, 51322, 1449, 3811, 300, 456, 307, 512, 40468, 399, 295, 262, 15, 510, 13, 51576, 51576, 639, 307, 516, 281, 40468, 269, 538, 512, 2158, 13, 51676, 51676, 400, 300, 2158, 307, 516, 281, 312, 264, 40468, 399, 295, 262, 15, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1323984762779752, "compression_ratio": 1.8565737051792828, "no_speech_prob": 2.07839493668871e-05}, {"id": 998, "seek": 283780, "start": 2837.8, "end": 2840.0, "text": " multiplied by the partial derivative of c with respect", "tokens": [50364, 17207, 538, 264, 14641, 13760, 295, 269, 365, 3104, 50474, 50474, 281, 262, 15, 13, 50578, 50578, 400, 550, 498, 291, 40468, 262, 16, 16561, 11, 50762, 50762, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 50868, 50868, 759, 291, 40468, 262, 17, 16561, 11, 50954, 50954, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 51120, 51120, 440, 4787, 40468, 399, 295, 269, 486, 51190, 51190, 312, 264, 2408, 295, 729, 40468, 763, 13, 51270, 51270, 400, 300, 307, 2212, 538, 341, 6114, 510, 13, 51420, 51420, 823, 11, 729, 36227, 1359, 22927, 11, 274, 82, 11, 274, 66, 11, 1030, 11458, 11, 51690, 51690, 519, 295, 552, 382, 3547, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13379213286609185, "compression_ratio": 1.894736842105263, "no_speech_prob": 4.637729944079183e-06}, {"id": 999, "seek": 283780, "start": 2840.0, "end": 2842.0800000000004, "text": " to s0.", "tokens": [50364, 17207, 538, 264, 14641, 13760, 295, 269, 365, 3104, 50474, 50474, 281, 262, 15, 13, 50578, 50578, 400, 550, 498, 291, 40468, 262, 16, 16561, 11, 50762, 50762, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 50868, 50868, 759, 291, 40468, 262, 17, 16561, 11, 50954, 50954, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 51120, 51120, 440, 4787, 40468, 399, 295, 269, 486, 51190, 51190, 312, 264, 2408, 295, 729, 40468, 763, 13, 51270, 51270, 400, 300, 307, 2212, 538, 341, 6114, 510, 13, 51420, 51420, 823, 11, 729, 36227, 1359, 22927, 11, 274, 82, 11, 274, 66, 11, 1030, 11458, 11, 51690, 51690, 519, 295, 552, 382, 3547, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13379213286609185, "compression_ratio": 1.894736842105263, "no_speech_prob": 4.637729944079183e-06}, {"id": 1000, "seek": 283780, "start": 2842.0800000000004, "end": 2845.76, "text": " And then if you perturb s1 simultaneously,", "tokens": [50364, 17207, 538, 264, 14641, 13760, 295, 269, 365, 3104, 50474, 50474, 281, 262, 15, 13, 50578, 50578, 400, 550, 498, 291, 40468, 262, 16, 16561, 11, 50762, 50762, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 50868, 50868, 759, 291, 40468, 262, 17, 16561, 11, 50954, 50954, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 51120, 51120, 440, 4787, 40468, 399, 295, 269, 486, 51190, 51190, 312, 264, 2408, 295, 729, 40468, 763, 13, 51270, 51270, 400, 300, 307, 2212, 538, 341, 6114, 510, 13, 51420, 51420, 823, 11, 729, 36227, 1359, 22927, 11, 274, 82, 11, 274, 66, 11, 1030, 11458, 11, 51690, 51690, 519, 295, 552, 382, 3547, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13379213286609185, "compression_ratio": 1.894736842105263, "no_speech_prob": 4.637729944079183e-06}, {"id": 1001, "seek": 283780, "start": 2845.76, "end": 2847.88, "text": " you're also going to cause a perturbation of c.", "tokens": [50364, 17207, 538, 264, 14641, 13760, 295, 269, 365, 3104, 50474, 50474, 281, 262, 15, 13, 50578, 50578, 400, 550, 498, 291, 40468, 262, 16, 16561, 11, 50762, 50762, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 50868, 50868, 759, 291, 40468, 262, 17, 16561, 11, 50954, 50954, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 51120, 51120, 440, 4787, 40468, 399, 295, 269, 486, 51190, 51190, 312, 264, 2408, 295, 729, 40468, 763, 13, 51270, 51270, 400, 300, 307, 2212, 538, 341, 6114, 510, 13, 51420, 51420, 823, 11, 729, 36227, 1359, 22927, 11, 274, 82, 11, 274, 66, 11, 1030, 11458, 11, 51690, 51690, 519, 295, 552, 382, 3547, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13379213286609185, "compression_ratio": 1.894736842105263, "no_speech_prob": 4.637729944079183e-06}, {"id": 1002, "seek": 283780, "start": 2847.88, "end": 2849.6000000000004, "text": " If you perturb s2 simultaneously,", "tokens": [50364, 17207, 538, 264, 14641, 13760, 295, 269, 365, 3104, 50474, 50474, 281, 262, 15, 13, 50578, 50578, 400, 550, 498, 291, 40468, 262, 16, 16561, 11, 50762, 50762, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 50868, 50868, 759, 291, 40468, 262, 17, 16561, 11, 50954, 50954, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 51120, 51120, 440, 4787, 40468, 399, 295, 269, 486, 51190, 51190, 312, 264, 2408, 295, 729, 40468, 763, 13, 51270, 51270, 400, 300, 307, 2212, 538, 341, 6114, 510, 13, 51420, 51420, 823, 11, 729, 36227, 1359, 22927, 11, 274, 82, 11, 274, 66, 11, 1030, 11458, 11, 51690, 51690, 519, 295, 552, 382, 3547, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13379213286609185, "compression_ratio": 1.894736842105263, "no_speech_prob": 4.637729944079183e-06}, {"id": 1003, "seek": 283780, "start": 2849.6000000000004, "end": 2852.92, "text": " you're also going to cause a perturbation of c.", "tokens": [50364, 17207, 538, 264, 14641, 13760, 295, 269, 365, 3104, 50474, 50474, 281, 262, 15, 13, 50578, 50578, 400, 550, 498, 291, 40468, 262, 16, 16561, 11, 50762, 50762, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 50868, 50868, 759, 291, 40468, 262, 17, 16561, 11, 50954, 50954, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 51120, 51120, 440, 4787, 40468, 399, 295, 269, 486, 51190, 51190, 312, 264, 2408, 295, 729, 40468, 763, 13, 51270, 51270, 400, 300, 307, 2212, 538, 341, 6114, 510, 13, 51420, 51420, 823, 11, 729, 36227, 1359, 22927, 11, 274, 82, 11, 274, 66, 11, 1030, 11458, 11, 51690, 51690, 519, 295, 552, 382, 3547, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13379213286609185, "compression_ratio": 1.894736842105263, "no_speech_prob": 4.637729944079183e-06}, {"id": 1004, "seek": 283780, "start": 2852.92, "end": 2854.32, "text": " The overall perturbation of c will", "tokens": [50364, 17207, 538, 264, 14641, 13760, 295, 269, 365, 3104, 50474, 50474, 281, 262, 15, 13, 50578, 50578, 400, 550, 498, 291, 40468, 262, 16, 16561, 11, 50762, 50762, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 50868, 50868, 759, 291, 40468, 262, 17, 16561, 11, 50954, 50954, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 51120, 51120, 440, 4787, 40468, 399, 295, 269, 486, 51190, 51190, 312, 264, 2408, 295, 729, 40468, 763, 13, 51270, 51270, 400, 300, 307, 2212, 538, 341, 6114, 510, 13, 51420, 51420, 823, 11, 729, 36227, 1359, 22927, 11, 274, 82, 11, 274, 66, 11, 1030, 11458, 11, 51690, 51690, 519, 295, 552, 382, 3547, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13379213286609185, "compression_ratio": 1.894736842105263, "no_speech_prob": 4.637729944079183e-06}, {"id": 1005, "seek": 283780, "start": 2854.32, "end": 2855.92, "text": " be the sum of those perturbations.", "tokens": [50364, 17207, 538, 264, 14641, 13760, 295, 269, 365, 3104, 50474, 50474, 281, 262, 15, 13, 50578, 50578, 400, 550, 498, 291, 40468, 262, 16, 16561, 11, 50762, 50762, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 50868, 50868, 759, 291, 40468, 262, 17, 16561, 11, 50954, 50954, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 51120, 51120, 440, 4787, 40468, 399, 295, 269, 486, 51190, 51190, 312, 264, 2408, 295, 729, 40468, 763, 13, 51270, 51270, 400, 300, 307, 2212, 538, 341, 6114, 510, 13, 51420, 51420, 823, 11, 729, 36227, 1359, 22927, 11, 274, 82, 11, 274, 66, 11, 1030, 11458, 11, 51690, 51690, 519, 295, 552, 382, 3547, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13379213286609185, "compression_ratio": 1.894736842105263, "no_speech_prob": 4.637729944079183e-06}, {"id": 1006, "seek": 283780, "start": 2855.92, "end": 2858.92, "text": " And that is given by this expression here.", "tokens": [50364, 17207, 538, 264, 14641, 13760, 295, 269, 365, 3104, 50474, 50474, 281, 262, 15, 13, 50578, 50578, 400, 550, 498, 291, 40468, 262, 16, 16561, 11, 50762, 50762, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 50868, 50868, 759, 291, 40468, 262, 17, 16561, 11, 50954, 50954, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 51120, 51120, 440, 4787, 40468, 399, 295, 269, 486, 51190, 51190, 312, 264, 2408, 295, 729, 40468, 763, 13, 51270, 51270, 400, 300, 307, 2212, 538, 341, 6114, 510, 13, 51420, 51420, 823, 11, 729, 36227, 1359, 22927, 11, 274, 82, 11, 274, 66, 11, 1030, 11458, 11, 51690, 51690, 519, 295, 552, 382, 3547, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13379213286609185, "compression_ratio": 1.894736842105263, "no_speech_prob": 4.637729944079183e-06}, {"id": 1007, "seek": 283780, "start": 2858.92, "end": 2864.32, "text": " Now, those infinitely small quantities, ds, dc, et cetera,", "tokens": [50364, 17207, 538, 264, 14641, 13760, 295, 269, 365, 3104, 50474, 50474, 281, 262, 15, 13, 50578, 50578, 400, 550, 498, 291, 40468, 262, 16, 16561, 11, 50762, 50762, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 50868, 50868, 759, 291, 40468, 262, 17, 16561, 11, 50954, 50954, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 51120, 51120, 440, 4787, 40468, 399, 295, 269, 486, 51190, 51190, 312, 264, 2408, 295, 729, 40468, 763, 13, 51270, 51270, 400, 300, 307, 2212, 538, 341, 6114, 510, 13, 51420, 51420, 823, 11, 729, 36227, 1359, 22927, 11, 274, 82, 11, 274, 66, 11, 1030, 11458, 11, 51690, 51690, 519, 295, 552, 382, 3547, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13379213286609185, "compression_ratio": 1.894736842105263, "no_speech_prob": 4.637729944079183e-06}, {"id": 1008, "seek": 283780, "start": 2864.32, "end": 2866.84, "text": " think of them as numbers.", "tokens": [50364, 17207, 538, 264, 14641, 13760, 295, 269, 365, 3104, 50474, 50474, 281, 262, 15, 13, 50578, 50578, 400, 550, 498, 291, 40468, 262, 16, 16561, 11, 50762, 50762, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 50868, 50868, 759, 291, 40468, 262, 17, 16561, 11, 50954, 50954, 291, 434, 611, 516, 281, 3082, 257, 40468, 399, 295, 269, 13, 51120, 51120, 440, 4787, 40468, 399, 295, 269, 486, 51190, 51190, 312, 264, 2408, 295, 729, 40468, 763, 13, 51270, 51270, 400, 300, 307, 2212, 538, 341, 6114, 510, 13, 51420, 51420, 823, 11, 729, 36227, 1359, 22927, 11, 274, 82, 11, 274, 66, 11, 1030, 11458, 11, 51690, 51690, 519, 295, 552, 382, 3547, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13379213286609185, "compression_ratio": 1.894736842105263, "no_speech_prob": 4.637729944079183e-06}, {"id": 1009, "seek": 286684, "start": 2866.84, "end": 2867.92, "text": " You can do algebra with them.", "tokens": [50364, 509, 393, 360, 21989, 365, 552, 13, 50418, 50418, 509, 393, 9845, 472, 538, 264, 661, 13, 50490, 50490, 509, 393, 360, 1507, 411, 300, 13, 50572, 50572, 407, 586, 291, 584, 11, 437, 307, 274, 82, 15, 2681, 281, 30, 50706, 50706, 759, 286, 29879, 710, 538, 257, 11275, 9758, 11, 309, 311, 51112, 51112, 516, 294, 1261, 281, 16927, 262, 15, 538, 274, 82, 15, 13, 51402, 51402, 400, 437, 307, 264, 11275, 538, 597, 262, 15, 307, 516, 281, 312, 6986, 7301, 30, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.11909010145399306, "compression_ratio": 1.5294117647058822, "no_speech_prob": 5.593815785687184e-06}, {"id": 1010, "seek": 286684, "start": 2867.92, "end": 2869.36, "text": " You can divide one by the other.", "tokens": [50364, 509, 393, 360, 21989, 365, 552, 13, 50418, 50418, 509, 393, 9845, 472, 538, 264, 661, 13, 50490, 50490, 509, 393, 360, 1507, 411, 300, 13, 50572, 50572, 407, 586, 291, 584, 11, 437, 307, 274, 82, 15, 2681, 281, 30, 50706, 50706, 759, 286, 29879, 710, 538, 257, 11275, 9758, 11, 309, 311, 51112, 51112, 516, 294, 1261, 281, 16927, 262, 15, 538, 274, 82, 15, 13, 51402, 51402, 400, 437, 307, 264, 11275, 538, 597, 262, 15, 307, 516, 281, 312, 6986, 7301, 30, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.11909010145399306, "compression_ratio": 1.5294117647058822, "no_speech_prob": 5.593815785687184e-06}, {"id": 1011, "seek": 286684, "start": 2869.36, "end": 2871.0, "text": " You can do stuff like that.", "tokens": [50364, 509, 393, 360, 21989, 365, 552, 13, 50418, 50418, 509, 393, 9845, 472, 538, 264, 661, 13, 50490, 50490, 509, 393, 360, 1507, 411, 300, 13, 50572, 50572, 407, 586, 291, 584, 11, 437, 307, 274, 82, 15, 2681, 281, 30, 50706, 50706, 759, 286, 29879, 710, 538, 257, 11275, 9758, 11, 309, 311, 51112, 51112, 516, 294, 1261, 281, 16927, 262, 15, 538, 274, 82, 15, 13, 51402, 51402, 400, 437, 307, 264, 11275, 538, 597, 262, 15, 307, 516, 281, 312, 6986, 7301, 30, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.11909010145399306, "compression_ratio": 1.5294117647058822, "no_speech_prob": 5.593815785687184e-06}, {"id": 1012, "seek": 286684, "start": 2871.0, "end": 2873.6800000000003, "text": " So now you say, what is ds0 equal to?", "tokens": [50364, 509, 393, 360, 21989, 365, 552, 13, 50418, 50418, 509, 393, 9845, 472, 538, 264, 661, 13, 50490, 50490, 509, 393, 360, 1507, 411, 300, 13, 50572, 50572, 407, 586, 291, 584, 11, 437, 307, 274, 82, 15, 2681, 281, 30, 50706, 50706, 759, 286, 29879, 710, 538, 257, 11275, 9758, 11, 309, 311, 51112, 51112, 516, 294, 1261, 281, 16927, 262, 15, 538, 274, 82, 15, 13, 51402, 51402, 400, 437, 307, 264, 11275, 538, 597, 262, 15, 307, 516, 281, 312, 6986, 7301, 30, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.11909010145399306, "compression_ratio": 1.5294117647058822, "no_speech_prob": 5.593815785687184e-06}, {"id": 1013, "seek": 286684, "start": 2873.6800000000003, "end": 2881.8, "text": " If I tweak z by a quantity dz, it's", "tokens": [50364, 509, 393, 360, 21989, 365, 552, 13, 50418, 50418, 509, 393, 9845, 472, 538, 264, 661, 13, 50490, 50490, 509, 393, 360, 1507, 411, 300, 13, 50572, 50572, 407, 586, 291, 584, 11, 437, 307, 274, 82, 15, 2681, 281, 30, 50706, 50706, 759, 286, 29879, 710, 538, 257, 11275, 9758, 11, 309, 311, 51112, 51112, 516, 294, 1261, 281, 16927, 262, 15, 538, 274, 82, 15, 13, 51402, 51402, 400, 437, 307, 264, 11275, 538, 597, 262, 15, 307, 516, 281, 312, 6986, 7301, 30, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.11909010145399306, "compression_ratio": 1.5294117647058822, "no_speech_prob": 5.593815785687184e-06}, {"id": 1014, "seek": 286684, "start": 2881.8, "end": 2887.6000000000004, "text": " going in turn to modify s0 by ds0.", "tokens": [50364, 509, 393, 360, 21989, 365, 552, 13, 50418, 50418, 509, 393, 9845, 472, 538, 264, 661, 13, 50490, 50490, 509, 393, 360, 1507, 411, 300, 13, 50572, 50572, 407, 586, 291, 584, 11, 437, 307, 274, 82, 15, 2681, 281, 30, 50706, 50706, 759, 286, 29879, 710, 538, 257, 11275, 9758, 11, 309, 311, 51112, 51112, 516, 294, 1261, 281, 16927, 262, 15, 538, 274, 82, 15, 13, 51402, 51402, 400, 437, 307, 264, 11275, 538, 597, 262, 15, 307, 516, 281, 312, 6986, 7301, 30, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.11909010145399306, "compression_ratio": 1.5294117647058822, "no_speech_prob": 5.593815785687184e-06}, {"id": 1015, "seek": 286684, "start": 2887.6000000000004, "end": 2892.44, "text": " And what is the quantity by which s0 is going to be tweaked?", "tokens": [50364, 509, 393, 360, 21989, 365, 552, 13, 50418, 50418, 509, 393, 9845, 472, 538, 264, 661, 13, 50490, 50490, 509, 393, 360, 1507, 411, 300, 13, 50572, 50572, 407, 586, 291, 584, 11, 437, 307, 274, 82, 15, 2681, 281, 30, 50706, 50706, 759, 286, 29879, 710, 538, 257, 11275, 9758, 11, 309, 311, 51112, 51112, 516, 294, 1261, 281, 16927, 262, 15, 538, 274, 82, 15, 13, 51402, 51402, 400, 437, 307, 264, 11275, 538, 597, 262, 15, 307, 516, 281, 312, 6986, 7301, 30, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.11909010145399306, "compression_ratio": 1.5294117647058822, "no_speech_prob": 5.593815785687184e-06}, {"id": 1016, "seek": 289244, "start": 2892.44, "end": 2898.28, "text": " If I tweak z by dz, because s is the result of computing", "tokens": [50364, 759, 286, 29879, 710, 538, 9758, 11, 570, 262, 307, 264, 1874, 295, 15866, 50656, 50656, 264, 1674, 295, 710, 538, 261, 15, 11, 550, 264, 40468, 399, 50844, 50844, 307, 611, 516, 281, 312, 17207, 538, 261, 15, 13, 50998, 50998, 407, 264, 274, 82, 15, 11760, 281, 257, 1729, 9758, 51206, 51206, 307, 516, 281, 312, 2681, 281, 9758, 1413, 261, 15, 13, 51326, 51326, 400, 341, 307, 437, 311, 12675, 510, 13, 51444, 51444, 274, 82, 15, 2681, 261, 15, 9758, 13, 51632, 51632, 823, 11, 498, 286, 747, 341, 6114, 337, 274, 82, 15, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.0635683302785836, "compression_ratio": 1.5918367346938775, "no_speech_prob": 4.092725703230826e-06}, {"id": 1017, "seek": 289244, "start": 2898.28, "end": 2902.04, "text": " the product of z by w0, then the perturbation", "tokens": [50364, 759, 286, 29879, 710, 538, 9758, 11, 570, 262, 307, 264, 1874, 295, 15866, 50656, 50656, 264, 1674, 295, 710, 538, 261, 15, 11, 550, 264, 40468, 399, 50844, 50844, 307, 611, 516, 281, 312, 17207, 538, 261, 15, 13, 50998, 50998, 407, 264, 274, 82, 15, 11760, 281, 257, 1729, 9758, 51206, 51206, 307, 516, 281, 312, 2681, 281, 9758, 1413, 261, 15, 13, 51326, 51326, 400, 341, 307, 437, 311, 12675, 510, 13, 51444, 51444, 274, 82, 15, 2681, 261, 15, 9758, 13, 51632, 51632, 823, 11, 498, 286, 747, 341, 6114, 337, 274, 82, 15, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.0635683302785836, "compression_ratio": 1.5918367346938775, "no_speech_prob": 4.092725703230826e-06}, {"id": 1018, "seek": 289244, "start": 2902.04, "end": 2905.12, "text": " is also going to be multiplied by w0.", "tokens": [50364, 759, 286, 29879, 710, 538, 9758, 11, 570, 262, 307, 264, 1874, 295, 15866, 50656, 50656, 264, 1674, 295, 710, 538, 261, 15, 11, 550, 264, 40468, 399, 50844, 50844, 307, 611, 516, 281, 312, 17207, 538, 261, 15, 13, 50998, 50998, 407, 264, 274, 82, 15, 11760, 281, 257, 1729, 9758, 51206, 51206, 307, 516, 281, 312, 2681, 281, 9758, 1413, 261, 15, 13, 51326, 51326, 400, 341, 307, 437, 311, 12675, 510, 13, 51444, 51444, 274, 82, 15, 2681, 261, 15, 9758, 13, 51632, 51632, 823, 11, 498, 286, 747, 341, 6114, 337, 274, 82, 15, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.0635683302785836, "compression_ratio": 1.5918367346938775, "no_speech_prob": 4.092725703230826e-06}, {"id": 1019, "seek": 289244, "start": 2905.12, "end": 2909.28, "text": " So the ds0 corresponding to a particular dz", "tokens": [50364, 759, 286, 29879, 710, 538, 9758, 11, 570, 262, 307, 264, 1874, 295, 15866, 50656, 50656, 264, 1674, 295, 710, 538, 261, 15, 11, 550, 264, 40468, 399, 50844, 50844, 307, 611, 516, 281, 312, 17207, 538, 261, 15, 13, 50998, 50998, 407, 264, 274, 82, 15, 11760, 281, 257, 1729, 9758, 51206, 51206, 307, 516, 281, 312, 2681, 281, 9758, 1413, 261, 15, 13, 51326, 51326, 400, 341, 307, 437, 311, 12675, 510, 13, 51444, 51444, 274, 82, 15, 2681, 261, 15, 9758, 13, 51632, 51632, 823, 11, 498, 286, 747, 341, 6114, 337, 274, 82, 15, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.0635683302785836, "compression_ratio": 1.5918367346938775, "no_speech_prob": 4.092725703230826e-06}, {"id": 1020, "seek": 289244, "start": 2909.28, "end": 2911.68, "text": " is going to be equal to dz times w0.", "tokens": [50364, 759, 286, 29879, 710, 538, 9758, 11, 570, 262, 307, 264, 1874, 295, 15866, 50656, 50656, 264, 1674, 295, 710, 538, 261, 15, 11, 550, 264, 40468, 399, 50844, 50844, 307, 611, 516, 281, 312, 17207, 538, 261, 15, 13, 50998, 50998, 407, 264, 274, 82, 15, 11760, 281, 257, 1729, 9758, 51206, 51206, 307, 516, 281, 312, 2681, 281, 9758, 1413, 261, 15, 13, 51326, 51326, 400, 341, 307, 437, 311, 12675, 510, 13, 51444, 51444, 274, 82, 15, 2681, 261, 15, 9758, 13, 51632, 51632, 823, 11, 498, 286, 747, 341, 6114, 337, 274, 82, 15, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.0635683302785836, "compression_ratio": 1.5918367346938775, "no_speech_prob": 4.092725703230826e-06}, {"id": 1021, "seek": 289244, "start": 2911.68, "end": 2914.04, "text": " And this is what's expressed here.", "tokens": [50364, 759, 286, 29879, 710, 538, 9758, 11, 570, 262, 307, 264, 1874, 295, 15866, 50656, 50656, 264, 1674, 295, 710, 538, 261, 15, 11, 550, 264, 40468, 399, 50844, 50844, 307, 611, 516, 281, 312, 17207, 538, 261, 15, 13, 50998, 50998, 407, 264, 274, 82, 15, 11760, 281, 257, 1729, 9758, 51206, 51206, 307, 516, 281, 312, 2681, 281, 9758, 1413, 261, 15, 13, 51326, 51326, 400, 341, 307, 437, 311, 12675, 510, 13, 51444, 51444, 274, 82, 15, 2681, 261, 15, 9758, 13, 51632, 51632, 823, 11, 498, 286, 747, 341, 6114, 337, 274, 82, 15, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.0635683302785836, "compression_ratio": 1.5918367346938775, "no_speech_prob": 4.092725703230826e-06}, {"id": 1022, "seek": 289244, "start": 2914.04, "end": 2917.8, "text": " ds0 equal w0 dz.", "tokens": [50364, 759, 286, 29879, 710, 538, 9758, 11, 570, 262, 307, 264, 1874, 295, 15866, 50656, 50656, 264, 1674, 295, 710, 538, 261, 15, 11, 550, 264, 40468, 399, 50844, 50844, 307, 611, 516, 281, 312, 17207, 538, 261, 15, 13, 50998, 50998, 407, 264, 274, 82, 15, 11760, 281, 257, 1729, 9758, 51206, 51206, 307, 516, 281, 312, 2681, 281, 9758, 1413, 261, 15, 13, 51326, 51326, 400, 341, 307, 437, 311, 12675, 510, 13, 51444, 51444, 274, 82, 15, 2681, 261, 15, 9758, 13, 51632, 51632, 823, 11, 498, 286, 747, 341, 6114, 337, 274, 82, 15, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.0635683302785836, "compression_ratio": 1.5918367346938775, "no_speech_prob": 4.092725703230826e-06}, {"id": 1023, "seek": 289244, "start": 2917.8, "end": 2920.28, "text": " Now, if I take this expression for ds0", "tokens": [50364, 759, 286, 29879, 710, 538, 9758, 11, 570, 262, 307, 264, 1874, 295, 15866, 50656, 50656, 264, 1674, 295, 710, 538, 261, 15, 11, 550, 264, 40468, 399, 50844, 50844, 307, 611, 516, 281, 312, 17207, 538, 261, 15, 13, 50998, 50998, 407, 264, 274, 82, 15, 11760, 281, 257, 1729, 9758, 51206, 51206, 307, 516, 281, 312, 2681, 281, 9758, 1413, 261, 15, 13, 51326, 51326, 400, 341, 307, 437, 311, 12675, 510, 13, 51444, 51444, 274, 82, 15, 2681, 261, 15, 9758, 13, 51632, 51632, 823, 11, 498, 286, 747, 341, 6114, 337, 274, 82, 15, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.0635683302785836, "compression_ratio": 1.5918367346938775, "no_speech_prob": 4.092725703230826e-06}, {"id": 1024, "seek": 292028, "start": 2920.28, "end": 2923.5600000000004, "text": " and I insert it here in this formula,", "tokens": [50364, 293, 286, 8969, 309, 510, 294, 341, 8513, 11, 50528, 50528, 286, 483, 274, 66, 2681, 261, 15, 1413, 9758, 1413, 274, 66, 670, 274, 82, 15, 1804, 912, 551, 50820, 50820, 337, 502, 1804, 912, 551, 337, 568, 13, 50908, 50908, 400, 286, 478, 516, 281, 747, 264, 9758, 293, 1320, 309, 281, 264, 661, 1252, 13, 51140, 51140, 286, 478, 516, 281, 9845, 1293, 4881, 538, 9758, 13, 51228, 51228, 407, 586, 286, 483, 274, 66, 670, 9758, 2681, 264, 9758, 1177, 380, 4204, 3602, 51496, 51496, 570, 309, 311, 668, 829, 7223, 510, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.1472751315277402, "compression_ratio": 1.6281407035175879, "no_speech_prob": 5.955034794169478e-06}, {"id": 1025, "seek": 292028, "start": 2923.5600000000004, "end": 2929.4, "text": " I get dc equal w0 times dz times dc over ds0 plus same thing", "tokens": [50364, 293, 286, 8969, 309, 510, 294, 341, 8513, 11, 50528, 50528, 286, 483, 274, 66, 2681, 261, 15, 1413, 9758, 1413, 274, 66, 670, 274, 82, 15, 1804, 912, 551, 50820, 50820, 337, 502, 1804, 912, 551, 337, 568, 13, 50908, 50908, 400, 286, 478, 516, 281, 747, 264, 9758, 293, 1320, 309, 281, 264, 661, 1252, 13, 51140, 51140, 286, 478, 516, 281, 9845, 1293, 4881, 538, 9758, 13, 51228, 51228, 407, 586, 286, 483, 274, 66, 670, 9758, 2681, 264, 9758, 1177, 380, 4204, 3602, 51496, 51496, 570, 309, 311, 668, 829, 7223, 510, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.1472751315277402, "compression_ratio": 1.6281407035175879, "no_speech_prob": 5.955034794169478e-06}, {"id": 1026, "seek": 292028, "start": 2929.4, "end": 2931.1600000000003, "text": " for 1 plus same thing for 2.", "tokens": [50364, 293, 286, 8969, 309, 510, 294, 341, 8513, 11, 50528, 50528, 286, 483, 274, 66, 2681, 261, 15, 1413, 9758, 1413, 274, 66, 670, 274, 82, 15, 1804, 912, 551, 50820, 50820, 337, 502, 1804, 912, 551, 337, 568, 13, 50908, 50908, 400, 286, 478, 516, 281, 747, 264, 9758, 293, 1320, 309, 281, 264, 661, 1252, 13, 51140, 51140, 286, 478, 516, 281, 9845, 1293, 4881, 538, 9758, 13, 51228, 51228, 407, 586, 286, 483, 274, 66, 670, 9758, 2681, 264, 9758, 1177, 380, 4204, 3602, 51496, 51496, 570, 309, 311, 668, 829, 7223, 510, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.1472751315277402, "compression_ratio": 1.6281407035175879, "no_speech_prob": 5.955034794169478e-06}, {"id": 1027, "seek": 292028, "start": 2931.1600000000003, "end": 2935.8, "text": " And I'm going to take the dz and pass it to the other side.", "tokens": [50364, 293, 286, 8969, 309, 510, 294, 341, 8513, 11, 50528, 50528, 286, 483, 274, 66, 2681, 261, 15, 1413, 9758, 1413, 274, 66, 670, 274, 82, 15, 1804, 912, 551, 50820, 50820, 337, 502, 1804, 912, 551, 337, 568, 13, 50908, 50908, 400, 286, 478, 516, 281, 747, 264, 9758, 293, 1320, 309, 281, 264, 661, 1252, 13, 51140, 51140, 286, 478, 516, 281, 9845, 1293, 4881, 538, 9758, 13, 51228, 51228, 407, 586, 286, 483, 274, 66, 670, 9758, 2681, 264, 9758, 1177, 380, 4204, 3602, 51496, 51496, 570, 309, 311, 668, 829, 7223, 510, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.1472751315277402, "compression_ratio": 1.6281407035175879, "no_speech_prob": 5.955034794169478e-06}, {"id": 1028, "seek": 292028, "start": 2935.8, "end": 2937.5600000000004, "text": " I'm going to divide both sides by dz.", "tokens": [50364, 293, 286, 8969, 309, 510, 294, 341, 8513, 11, 50528, 50528, 286, 483, 274, 66, 2681, 261, 15, 1413, 9758, 1413, 274, 66, 670, 274, 82, 15, 1804, 912, 551, 50820, 50820, 337, 502, 1804, 912, 551, 337, 568, 13, 50908, 50908, 400, 286, 478, 516, 281, 747, 264, 9758, 293, 1320, 309, 281, 264, 661, 1252, 13, 51140, 51140, 286, 478, 516, 281, 9845, 1293, 4881, 538, 9758, 13, 51228, 51228, 407, 586, 286, 483, 274, 66, 670, 9758, 2681, 264, 9758, 1177, 380, 4204, 3602, 51496, 51496, 570, 309, 311, 668, 829, 7223, 510, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.1472751315277402, "compression_ratio": 1.6281407035175879, "no_speech_prob": 5.955034794169478e-06}, {"id": 1029, "seek": 292028, "start": 2937.5600000000004, "end": 2942.92, "text": " So now I get dc over dz equal the dz doesn't appear anymore", "tokens": [50364, 293, 286, 8969, 309, 510, 294, 341, 8513, 11, 50528, 50528, 286, 483, 274, 66, 2681, 261, 15, 1413, 9758, 1413, 274, 66, 670, 274, 82, 15, 1804, 912, 551, 50820, 50820, 337, 502, 1804, 912, 551, 337, 568, 13, 50908, 50908, 400, 286, 478, 516, 281, 747, 264, 9758, 293, 1320, 309, 281, 264, 661, 1252, 13, 51140, 51140, 286, 478, 516, 281, 9845, 1293, 4881, 538, 9758, 13, 51228, 51228, 407, 586, 286, 483, 274, 66, 670, 9758, 2681, 264, 9758, 1177, 380, 4204, 3602, 51496, 51496, 570, 309, 311, 668, 829, 7223, 510, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.1472751315277402, "compression_ratio": 1.6281407035175879, "no_speech_prob": 5.955034794169478e-06}, {"id": 1030, "seek": 292028, "start": 2942.92, "end": 2945.0800000000004, "text": " because it's been put underneath here.", "tokens": [50364, 293, 286, 8969, 309, 510, 294, 341, 8513, 11, 50528, 50528, 286, 483, 274, 66, 2681, 261, 15, 1413, 9758, 1413, 274, 66, 670, 274, 82, 15, 1804, 912, 551, 50820, 50820, 337, 502, 1804, 912, 551, 337, 568, 13, 50908, 50908, 400, 286, 478, 516, 281, 747, 264, 9758, 293, 1320, 309, 281, 264, 661, 1252, 13, 51140, 51140, 286, 478, 516, 281, 9845, 1293, 4881, 538, 9758, 13, 51228, 51228, 407, 586, 286, 483, 274, 66, 670, 9758, 2681, 264, 9758, 1177, 380, 4204, 3602, 51496, 51496, 570, 309, 311, 668, 829, 7223, 510, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.1472751315277402, "compression_ratio": 1.6281407035175879, "no_speech_prob": 5.955034794169478e-06}, {"id": 1031, "seek": 294508, "start": 2945.08, "end": 2952.2799999999997, "text": " It's w0 times dc over ds0 plus w1 times dc over ds1, et cetera.", "tokens": [50364, 467, 311, 261, 15, 1413, 274, 66, 670, 274, 82, 15, 1804, 261, 16, 1413, 274, 66, 670, 274, 82, 16, 11, 1030, 11458, 13, 50724, 50724, 467, 311, 445, 2199, 21989, 13, 50886, 50886, 467, 311, 15756, 33400, 11, 1936, 13, 51042, 51042, 407, 309, 311, 1101, 281, 2464, 341, 294, 8141, 1254, 13, 51202, 51202, 407, 534, 11, 562, 291, 434, 15866, 11, 51302, 51302, 498, 286, 352, 646, 257, 1326, 9788, 11, 341, 307, 534, 51528, 51528, 733, 295, 257, 8141, 295, 439, 264, 17443, 300, 51684, 51684, 366, 33915, 295, 264, 710, 73, 311, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1300663623994994, "compression_ratio": 1.5566502463054188, "no_speech_prob": 1.4738253412360791e-05}, {"id": 1032, "seek": 294508, "start": 2952.2799999999997, "end": 2955.52, "text": " It's just simple algebra.", "tokens": [50364, 467, 311, 261, 15, 1413, 274, 66, 670, 274, 82, 15, 1804, 261, 16, 1413, 274, 66, 670, 274, 82, 16, 11, 1030, 11458, 13, 50724, 50724, 467, 311, 445, 2199, 21989, 13, 50886, 50886, 467, 311, 15756, 33400, 11, 1936, 13, 51042, 51042, 407, 309, 311, 1101, 281, 2464, 341, 294, 8141, 1254, 13, 51202, 51202, 407, 534, 11, 562, 291, 434, 15866, 11, 51302, 51302, 498, 286, 352, 646, 257, 1326, 9788, 11, 341, 307, 534, 51528, 51528, 733, 295, 257, 8141, 295, 439, 264, 17443, 300, 51684, 51684, 366, 33915, 295, 264, 710, 73, 311, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1300663623994994, "compression_ratio": 1.5566502463054188, "no_speech_prob": 1.4738253412360791e-05}, {"id": 1033, "seek": 294508, "start": 2955.52, "end": 2958.64, "text": " It's differential calculus, basically.", "tokens": [50364, 467, 311, 261, 15, 1413, 274, 66, 670, 274, 82, 15, 1804, 261, 16, 1413, 274, 66, 670, 274, 82, 16, 11, 1030, 11458, 13, 50724, 50724, 467, 311, 445, 2199, 21989, 13, 50886, 50886, 467, 311, 15756, 33400, 11, 1936, 13, 51042, 51042, 407, 309, 311, 1101, 281, 2464, 341, 294, 8141, 1254, 13, 51202, 51202, 407, 534, 11, 562, 291, 434, 15866, 11, 51302, 51302, 498, 286, 352, 646, 257, 1326, 9788, 11, 341, 307, 534, 51528, 51528, 733, 295, 257, 8141, 295, 439, 264, 17443, 300, 51684, 51684, 366, 33915, 295, 264, 710, 73, 311, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1300663623994994, "compression_ratio": 1.5566502463054188, "no_speech_prob": 1.4738253412360791e-05}, {"id": 1034, "seek": 294508, "start": 2958.64, "end": 2961.84, "text": " So it's better to write this in matrix form.", "tokens": [50364, 467, 311, 261, 15, 1413, 274, 66, 670, 274, 82, 15, 1804, 261, 16, 1413, 274, 66, 670, 274, 82, 16, 11, 1030, 11458, 13, 50724, 50724, 467, 311, 445, 2199, 21989, 13, 50886, 50886, 467, 311, 15756, 33400, 11, 1936, 13, 51042, 51042, 407, 309, 311, 1101, 281, 2464, 341, 294, 8141, 1254, 13, 51202, 51202, 407, 534, 11, 562, 291, 434, 15866, 11, 51302, 51302, 498, 286, 352, 646, 257, 1326, 9788, 11, 341, 307, 534, 51528, 51528, 733, 295, 257, 8141, 295, 439, 264, 17443, 300, 51684, 51684, 366, 33915, 295, 264, 710, 73, 311, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1300663623994994, "compression_ratio": 1.5566502463054188, "no_speech_prob": 1.4738253412360791e-05}, {"id": 1035, "seek": 294508, "start": 2961.84, "end": 2963.84, "text": " So really, when you're computing,", "tokens": [50364, 467, 311, 261, 15, 1413, 274, 66, 670, 274, 82, 15, 1804, 261, 16, 1413, 274, 66, 670, 274, 82, 16, 11, 1030, 11458, 13, 50724, 50724, 467, 311, 445, 2199, 21989, 13, 50886, 50886, 467, 311, 15756, 33400, 11, 1936, 13, 51042, 51042, 407, 309, 311, 1101, 281, 2464, 341, 294, 8141, 1254, 13, 51202, 51202, 407, 534, 11, 562, 291, 434, 15866, 11, 51302, 51302, 498, 286, 352, 646, 257, 1326, 9788, 11, 341, 307, 534, 51528, 51528, 733, 295, 257, 8141, 295, 439, 264, 17443, 300, 51684, 51684, 366, 33915, 295, 264, 710, 73, 311, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1300663623994994, "compression_ratio": 1.5566502463054188, "no_speech_prob": 1.4738253412360791e-05}, {"id": 1036, "seek": 294508, "start": 2963.84, "end": 2968.36, "text": " if I go back a few slides, this is really", "tokens": [50364, 467, 311, 261, 15, 1413, 274, 66, 670, 274, 82, 15, 1804, 261, 16, 1413, 274, 66, 670, 274, 82, 16, 11, 1030, 11458, 13, 50724, 50724, 467, 311, 445, 2199, 21989, 13, 50886, 50886, 467, 311, 15756, 33400, 11, 1936, 13, 51042, 51042, 407, 309, 311, 1101, 281, 2464, 341, 294, 8141, 1254, 13, 51202, 51202, 407, 534, 11, 562, 291, 434, 15866, 11, 51302, 51302, 498, 286, 352, 646, 257, 1326, 9788, 11, 341, 307, 534, 51528, 51528, 733, 295, 257, 8141, 295, 439, 264, 17443, 300, 51684, 51684, 366, 33915, 295, 264, 710, 73, 311, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1300663623994994, "compression_ratio": 1.5566502463054188, "no_speech_prob": 1.4738253412360791e-05}, {"id": 1037, "seek": 294508, "start": 2968.36, "end": 2971.48, "text": " kind of a matrix of all the weights that", "tokens": [50364, 467, 311, 261, 15, 1413, 274, 66, 670, 274, 82, 15, 1804, 261, 16, 1413, 274, 66, 670, 274, 82, 16, 11, 1030, 11458, 13, 50724, 50724, 467, 311, 445, 2199, 21989, 13, 50886, 50886, 467, 311, 15756, 33400, 11, 1936, 13, 51042, 51042, 407, 309, 311, 1101, 281, 2464, 341, 294, 8141, 1254, 13, 51202, 51202, 407, 534, 11, 562, 291, 434, 15866, 11, 51302, 51302, 498, 286, 352, 646, 257, 1326, 9788, 11, 341, 307, 534, 51528, 51528, 733, 295, 257, 8141, 295, 439, 264, 17443, 300, 51684, 51684, 366, 33915, 295, 264, 710, 73, 311, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1300663623994994, "compression_ratio": 1.5566502463054188, "no_speech_prob": 1.4738253412360791e-05}, {"id": 1038, "seek": 294508, "start": 2971.48, "end": 2974.96, "text": " are upstream of the zj's.", "tokens": [50364, 467, 311, 261, 15, 1413, 274, 66, 670, 274, 82, 15, 1804, 261, 16, 1413, 274, 66, 670, 274, 82, 16, 11, 1030, 11458, 13, 50724, 50724, 467, 311, 445, 2199, 21989, 13, 50886, 50886, 467, 311, 15756, 33400, 11, 1936, 13, 51042, 51042, 407, 309, 311, 1101, 281, 2464, 341, 294, 8141, 1254, 13, 51202, 51202, 407, 534, 11, 562, 291, 434, 15866, 11, 51302, 51302, 498, 286, 352, 646, 257, 1326, 9788, 11, 341, 307, 534, 51528, 51528, 733, 295, 257, 8141, 295, 439, 264, 17443, 300, 51684, 51684, 366, 33915, 295, 264, 710, 73, 311, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1300663623994994, "compression_ratio": 1.5566502463054188, "no_speech_prob": 1.4738253412360791e-05}, {"id": 1039, "seek": 297496, "start": 2974.96, "end": 2977.76, "text": " So you can align the zj as a vector.", "tokens": [50364, 407, 291, 393, 7975, 264, 710, 73, 382, 257, 8062, 13, 50504, 50504, 2704, 787, 264, 710, 73, 311, 300, 362, 2107, 12, 32226, 2115, 294, 261, 11, 261, 1718, 13, 50824, 50824, 400, 550, 291, 393, 2464, 729, 261, 311, 382, 257, 8141, 13, 50924, 50924, 400, 341, 307, 445, 257, 8141, 8062, 1674, 13, 51124, 51124, 407, 341, 307, 264, 636, 341, 576, 312, 3720, 13, 51218, 51218, 509, 362, 257, 8062, 13, 51276, 51276, 509, 12972, 309, 538, 257, 8141, 13, 51340, 51340, 509, 483, 257, 777, 8062, 13, 51382, 51382, 10319, 300, 807, 2107, 28263, 1088, 13, 51482, 51482, 8738, 84, 311, 11, 12972, 300, 538, 257, 8141, 11, 1030, 11458, 13, 51658, 51658, 407, 5986, 984, 11, 291, 393, 2464, 257, 2199, 18161, 2533, 341, 636, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.2001502373639275, "compression_ratio": 1.7745901639344261, "no_speech_prob": 1.1478029591671657e-05}, {"id": 1040, "seek": 297496, "start": 2977.76, "end": 2984.16, "text": " Maybe only the zj's that have non-zero terms in w, wij.", "tokens": [50364, 407, 291, 393, 7975, 264, 710, 73, 382, 257, 8062, 13, 50504, 50504, 2704, 787, 264, 710, 73, 311, 300, 362, 2107, 12, 32226, 2115, 294, 261, 11, 261, 1718, 13, 50824, 50824, 400, 550, 291, 393, 2464, 729, 261, 311, 382, 257, 8141, 13, 50924, 50924, 400, 341, 307, 445, 257, 8141, 8062, 1674, 13, 51124, 51124, 407, 341, 307, 264, 636, 341, 576, 312, 3720, 13, 51218, 51218, 509, 362, 257, 8062, 13, 51276, 51276, 509, 12972, 309, 538, 257, 8141, 13, 51340, 51340, 509, 483, 257, 777, 8062, 13, 51382, 51382, 10319, 300, 807, 2107, 28263, 1088, 13, 51482, 51482, 8738, 84, 311, 11, 12972, 300, 538, 257, 8141, 11, 1030, 11458, 13, 51658, 51658, 407, 5986, 984, 11, 291, 393, 2464, 257, 2199, 18161, 2533, 341, 636, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.2001502373639275, "compression_ratio": 1.7745901639344261, "no_speech_prob": 1.1478029591671657e-05}, {"id": 1041, "seek": 297496, "start": 2984.16, "end": 2986.16, "text": " And then you can write those w's as a matrix.", "tokens": [50364, 407, 291, 393, 7975, 264, 710, 73, 382, 257, 8062, 13, 50504, 50504, 2704, 787, 264, 710, 73, 311, 300, 362, 2107, 12, 32226, 2115, 294, 261, 11, 261, 1718, 13, 50824, 50824, 400, 550, 291, 393, 2464, 729, 261, 311, 382, 257, 8141, 13, 50924, 50924, 400, 341, 307, 445, 257, 8141, 8062, 1674, 13, 51124, 51124, 407, 341, 307, 264, 636, 341, 576, 312, 3720, 13, 51218, 51218, 509, 362, 257, 8062, 13, 51276, 51276, 509, 12972, 309, 538, 257, 8141, 13, 51340, 51340, 509, 483, 257, 777, 8062, 13, 51382, 51382, 10319, 300, 807, 2107, 28263, 1088, 13, 51482, 51482, 8738, 84, 311, 11, 12972, 300, 538, 257, 8141, 11, 1030, 11458, 13, 51658, 51658, 407, 5986, 984, 11, 291, 393, 2464, 257, 2199, 18161, 2533, 341, 636, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.2001502373639275, "compression_ratio": 1.7745901639344261, "no_speech_prob": 1.1478029591671657e-05}, {"id": 1042, "seek": 297496, "start": 2986.16, "end": 2990.16, "text": " And this is just a matrix vector product.", "tokens": [50364, 407, 291, 393, 7975, 264, 710, 73, 382, 257, 8062, 13, 50504, 50504, 2704, 787, 264, 710, 73, 311, 300, 362, 2107, 12, 32226, 2115, 294, 261, 11, 261, 1718, 13, 50824, 50824, 400, 550, 291, 393, 2464, 729, 261, 311, 382, 257, 8141, 13, 50924, 50924, 400, 341, 307, 445, 257, 8141, 8062, 1674, 13, 51124, 51124, 407, 341, 307, 264, 636, 341, 576, 312, 3720, 13, 51218, 51218, 509, 362, 257, 8062, 13, 51276, 51276, 509, 12972, 309, 538, 257, 8141, 13, 51340, 51340, 509, 483, 257, 777, 8062, 13, 51382, 51382, 10319, 300, 807, 2107, 28263, 1088, 13, 51482, 51482, 8738, 84, 311, 11, 12972, 300, 538, 257, 8141, 11, 1030, 11458, 13, 51658, 51658, 407, 5986, 984, 11, 291, 393, 2464, 257, 2199, 18161, 2533, 341, 636, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.2001502373639275, "compression_ratio": 1.7745901639344261, "no_speech_prob": 1.1478029591671657e-05}, {"id": 1043, "seek": 297496, "start": 2990.16, "end": 2992.04, "text": " So this is the way this would be written.", "tokens": [50364, 407, 291, 393, 7975, 264, 710, 73, 382, 257, 8062, 13, 50504, 50504, 2704, 787, 264, 710, 73, 311, 300, 362, 2107, 12, 32226, 2115, 294, 261, 11, 261, 1718, 13, 50824, 50824, 400, 550, 291, 393, 2464, 729, 261, 311, 382, 257, 8141, 13, 50924, 50924, 400, 341, 307, 445, 257, 8141, 8062, 1674, 13, 51124, 51124, 407, 341, 307, 264, 636, 341, 576, 312, 3720, 13, 51218, 51218, 509, 362, 257, 8062, 13, 51276, 51276, 509, 12972, 309, 538, 257, 8141, 13, 51340, 51340, 509, 483, 257, 777, 8062, 13, 51382, 51382, 10319, 300, 807, 2107, 28263, 1088, 13, 51482, 51482, 8738, 84, 311, 11, 12972, 300, 538, 257, 8141, 11, 1030, 11458, 13, 51658, 51658, 407, 5986, 984, 11, 291, 393, 2464, 257, 2199, 18161, 2533, 341, 636, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.2001502373639275, "compression_ratio": 1.7745901639344261, "no_speech_prob": 1.1478029591671657e-05}, {"id": 1044, "seek": 297496, "start": 2992.04, "end": 2993.2, "text": " You have a vector.", "tokens": [50364, 407, 291, 393, 7975, 264, 710, 73, 382, 257, 8062, 13, 50504, 50504, 2704, 787, 264, 710, 73, 311, 300, 362, 2107, 12, 32226, 2115, 294, 261, 11, 261, 1718, 13, 50824, 50824, 400, 550, 291, 393, 2464, 729, 261, 311, 382, 257, 8141, 13, 50924, 50924, 400, 341, 307, 445, 257, 8141, 8062, 1674, 13, 51124, 51124, 407, 341, 307, 264, 636, 341, 576, 312, 3720, 13, 51218, 51218, 509, 362, 257, 8062, 13, 51276, 51276, 509, 12972, 309, 538, 257, 8141, 13, 51340, 51340, 509, 483, 257, 777, 8062, 13, 51382, 51382, 10319, 300, 807, 2107, 28263, 1088, 13, 51482, 51482, 8738, 84, 311, 11, 12972, 300, 538, 257, 8141, 11, 1030, 11458, 13, 51658, 51658, 407, 5986, 984, 11, 291, 393, 2464, 257, 2199, 18161, 2533, 341, 636, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.2001502373639275, "compression_ratio": 1.7745901639344261, "no_speech_prob": 1.1478029591671657e-05}, {"id": 1045, "seek": 297496, "start": 2993.2, "end": 2994.48, "text": " You multiply it by a matrix.", "tokens": [50364, 407, 291, 393, 7975, 264, 710, 73, 382, 257, 8062, 13, 50504, 50504, 2704, 787, 264, 710, 73, 311, 300, 362, 2107, 12, 32226, 2115, 294, 261, 11, 261, 1718, 13, 50824, 50824, 400, 550, 291, 393, 2464, 729, 261, 311, 382, 257, 8141, 13, 50924, 50924, 400, 341, 307, 445, 257, 8141, 8062, 1674, 13, 51124, 51124, 407, 341, 307, 264, 636, 341, 576, 312, 3720, 13, 51218, 51218, 509, 362, 257, 8062, 13, 51276, 51276, 509, 12972, 309, 538, 257, 8141, 13, 51340, 51340, 509, 483, 257, 777, 8062, 13, 51382, 51382, 10319, 300, 807, 2107, 28263, 1088, 13, 51482, 51482, 8738, 84, 311, 11, 12972, 300, 538, 257, 8141, 11, 1030, 11458, 13, 51658, 51658, 407, 5986, 984, 11, 291, 393, 2464, 257, 2199, 18161, 2533, 341, 636, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.2001502373639275, "compression_ratio": 1.7745901639344261, "no_speech_prob": 1.1478029591671657e-05}, {"id": 1046, "seek": 297496, "start": 2994.48, "end": 2995.32, "text": " You get a new vector.", "tokens": [50364, 407, 291, 393, 7975, 264, 710, 73, 382, 257, 8062, 13, 50504, 50504, 2704, 787, 264, 710, 73, 311, 300, 362, 2107, 12, 32226, 2115, 294, 261, 11, 261, 1718, 13, 50824, 50824, 400, 550, 291, 393, 2464, 729, 261, 311, 382, 257, 8141, 13, 50924, 50924, 400, 341, 307, 445, 257, 8141, 8062, 1674, 13, 51124, 51124, 407, 341, 307, 264, 636, 341, 576, 312, 3720, 13, 51218, 51218, 509, 362, 257, 8062, 13, 51276, 51276, 509, 12972, 309, 538, 257, 8141, 13, 51340, 51340, 509, 483, 257, 777, 8062, 13, 51382, 51382, 10319, 300, 807, 2107, 28263, 1088, 13, 51482, 51482, 8738, 84, 311, 11, 12972, 300, 538, 257, 8141, 11, 1030, 11458, 13, 51658, 51658, 407, 5986, 984, 11, 291, 393, 2464, 257, 2199, 18161, 2533, 341, 636, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.2001502373639275, "compression_ratio": 1.7745901639344261, "no_speech_prob": 1.1478029591671657e-05}, {"id": 1047, "seek": 297496, "start": 2995.32, "end": 2997.32, "text": " Pass that through nonlinearities.", "tokens": [50364, 407, 291, 393, 7975, 264, 710, 73, 382, 257, 8062, 13, 50504, 50504, 2704, 787, 264, 710, 73, 311, 300, 362, 2107, 12, 32226, 2115, 294, 261, 11, 261, 1718, 13, 50824, 50824, 400, 550, 291, 393, 2464, 729, 261, 311, 382, 257, 8141, 13, 50924, 50924, 400, 341, 307, 445, 257, 8141, 8062, 1674, 13, 51124, 51124, 407, 341, 307, 264, 636, 341, 576, 312, 3720, 13, 51218, 51218, 509, 362, 257, 8062, 13, 51276, 51276, 509, 12972, 309, 538, 257, 8141, 13, 51340, 51340, 509, 483, 257, 777, 8062, 13, 51382, 51382, 10319, 300, 807, 2107, 28263, 1088, 13, 51482, 51482, 8738, 84, 311, 11, 12972, 300, 538, 257, 8141, 11, 1030, 11458, 13, 51658, 51658, 407, 5986, 984, 11, 291, 393, 2464, 257, 2199, 18161, 2533, 341, 636, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.2001502373639275, "compression_ratio": 1.7745901639344261, "no_speech_prob": 1.1478029591671657e-05}, {"id": 1048, "seek": 297496, "start": 2997.32, "end": 3000.84, "text": " Relu's, multiply that by a matrix, et cetera.", "tokens": [50364, 407, 291, 393, 7975, 264, 710, 73, 382, 257, 8062, 13, 50504, 50504, 2704, 787, 264, 710, 73, 311, 300, 362, 2107, 12, 32226, 2115, 294, 261, 11, 261, 1718, 13, 50824, 50824, 400, 550, 291, 393, 2464, 729, 261, 311, 382, 257, 8141, 13, 50924, 50924, 400, 341, 307, 445, 257, 8141, 8062, 1674, 13, 51124, 51124, 407, 341, 307, 264, 636, 341, 576, 312, 3720, 13, 51218, 51218, 509, 362, 257, 8062, 13, 51276, 51276, 509, 12972, 309, 538, 257, 8141, 13, 51340, 51340, 509, 483, 257, 777, 8062, 13, 51382, 51382, 10319, 300, 807, 2107, 28263, 1088, 13, 51482, 51482, 8738, 84, 311, 11, 12972, 300, 538, 257, 8141, 11, 1030, 11458, 13, 51658, 51658, 407, 5986, 984, 11, 291, 393, 2464, 257, 2199, 18161, 2533, 341, 636, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.2001502373639275, "compression_ratio": 1.7745901639344261, "no_speech_prob": 1.1478029591671657e-05}, {"id": 1049, "seek": 297496, "start": 3000.84, "end": 3004.68, "text": " So symbolically, you can write a simple neural net this way,", "tokens": [50364, 407, 291, 393, 7975, 264, 710, 73, 382, 257, 8062, 13, 50504, 50504, 2704, 787, 264, 710, 73, 311, 300, 362, 2107, 12, 32226, 2115, 294, 261, 11, 261, 1718, 13, 50824, 50824, 400, 550, 291, 393, 2464, 729, 261, 311, 382, 257, 8141, 13, 50924, 50924, 400, 341, 307, 445, 257, 8141, 8062, 1674, 13, 51124, 51124, 407, 341, 307, 264, 636, 341, 576, 312, 3720, 13, 51218, 51218, 509, 362, 257, 8062, 13, 51276, 51276, 509, 12972, 309, 538, 257, 8141, 13, 51340, 51340, 509, 483, 257, 777, 8062, 13, 51382, 51382, 10319, 300, 807, 2107, 28263, 1088, 13, 51482, 51482, 8738, 84, 311, 11, 12972, 300, 538, 257, 8141, 11, 1030, 11458, 13, 51658, 51658, 407, 5986, 984, 11, 291, 393, 2464, 257, 2199, 18161, 2533, 341, 636, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.2001502373639275, "compression_ratio": 1.7745901639344261, "no_speech_prob": 1.1478029591671657e-05}, {"id": 1050, "seek": 300468, "start": 3004.68, "end": 3008.2, "text": " where you have linear blocks, linear functional blocks, which", "tokens": [50364, 689, 291, 362, 8213, 8474, 11, 8213, 11745, 8474, 11, 597, 50540, 50540, 1936, 747, 264, 3894, 1785, 50712, 50712, 293, 12972, 309, 538, 257, 8141, 13, 50814, 50814, 407, 291, 362, 257, 1785, 510, 11, 710, 16, 11, 17207, 538, 257, 8141, 13, 50968, 50968, 509, 483, 261, 16, 11, 710, 16, 13, 51032, 51032, 400, 300, 2709, 291, 264, 8062, 295, 32807, 34499, 11, 262, 17, 13, 51308, 51308, 1396, 291, 747, 300, 11, 1320, 309, 807, 264, 2107, 28263, 6828, 11, 51542, 51542, 1184, 6542, 16652, 13, 51642, 51642, 400, 300, 2709, 291, 710, 17, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13604927988885676, "compression_ratio": 1.6854460093896713, "no_speech_prob": 4.1571256588213146e-06}, {"id": 1051, "seek": 300468, "start": 3008.2, "end": 3011.64, "text": " basically take the previous state", "tokens": [50364, 689, 291, 362, 8213, 8474, 11, 8213, 11745, 8474, 11, 597, 50540, 50540, 1936, 747, 264, 3894, 1785, 50712, 50712, 293, 12972, 309, 538, 257, 8141, 13, 50814, 50814, 407, 291, 362, 257, 1785, 510, 11, 710, 16, 11, 17207, 538, 257, 8141, 13, 50968, 50968, 509, 483, 261, 16, 11, 710, 16, 13, 51032, 51032, 400, 300, 2709, 291, 264, 8062, 295, 32807, 34499, 11, 262, 17, 13, 51308, 51308, 1396, 291, 747, 300, 11, 1320, 309, 807, 264, 2107, 28263, 6828, 11, 51542, 51542, 1184, 6542, 16652, 13, 51642, 51642, 400, 300, 2709, 291, 710, 17, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13604927988885676, "compression_ratio": 1.6854460093896713, "no_speech_prob": 4.1571256588213146e-06}, {"id": 1052, "seek": 300468, "start": 3011.64, "end": 3013.68, "text": " and multiply it by a matrix.", "tokens": [50364, 689, 291, 362, 8213, 8474, 11, 8213, 11745, 8474, 11, 597, 50540, 50540, 1936, 747, 264, 3894, 1785, 50712, 50712, 293, 12972, 309, 538, 257, 8141, 13, 50814, 50814, 407, 291, 362, 257, 1785, 510, 11, 710, 16, 11, 17207, 538, 257, 8141, 13, 50968, 50968, 509, 483, 261, 16, 11, 710, 16, 13, 51032, 51032, 400, 300, 2709, 291, 264, 8062, 295, 32807, 34499, 11, 262, 17, 13, 51308, 51308, 1396, 291, 747, 300, 11, 1320, 309, 807, 264, 2107, 28263, 6828, 11, 51542, 51542, 1184, 6542, 16652, 13, 51642, 51642, 400, 300, 2709, 291, 710, 17, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13604927988885676, "compression_ratio": 1.6854460093896713, "no_speech_prob": 4.1571256588213146e-06}, {"id": 1053, "seek": 300468, "start": 3013.68, "end": 3016.7599999999998, "text": " So you have a state here, z1, multiplied by a matrix.", "tokens": [50364, 689, 291, 362, 8213, 8474, 11, 8213, 11745, 8474, 11, 597, 50540, 50540, 1936, 747, 264, 3894, 1785, 50712, 50712, 293, 12972, 309, 538, 257, 8141, 13, 50814, 50814, 407, 291, 362, 257, 1785, 510, 11, 710, 16, 11, 17207, 538, 257, 8141, 13, 50968, 50968, 509, 483, 261, 16, 11, 710, 16, 13, 51032, 51032, 400, 300, 2709, 291, 264, 8062, 295, 32807, 34499, 11, 262, 17, 13, 51308, 51308, 1396, 291, 747, 300, 11, 1320, 309, 807, 264, 2107, 28263, 6828, 11, 51542, 51542, 1184, 6542, 16652, 13, 51642, 51642, 400, 300, 2709, 291, 710, 17, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13604927988885676, "compression_ratio": 1.6854460093896713, "no_speech_prob": 4.1571256588213146e-06}, {"id": 1054, "seek": 300468, "start": 3016.7599999999998, "end": 3018.04, "text": " You get w1, z1.", "tokens": [50364, 689, 291, 362, 8213, 8474, 11, 8213, 11745, 8474, 11, 597, 50540, 50540, 1936, 747, 264, 3894, 1785, 50712, 50712, 293, 12972, 309, 538, 257, 8141, 13, 50814, 50814, 407, 291, 362, 257, 1785, 510, 11, 710, 16, 11, 17207, 538, 257, 8141, 13, 50968, 50968, 509, 483, 261, 16, 11, 710, 16, 13, 51032, 51032, 400, 300, 2709, 291, 264, 8062, 295, 32807, 34499, 11, 262, 17, 13, 51308, 51308, 1396, 291, 747, 300, 11, 1320, 309, 807, 264, 2107, 28263, 6828, 11, 51542, 51542, 1184, 6542, 16652, 13, 51642, 51642, 400, 300, 2709, 291, 710, 17, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13604927988885676, "compression_ratio": 1.6854460093896713, "no_speech_prob": 4.1571256588213146e-06}, {"id": 1055, "seek": 300468, "start": 3018.04, "end": 3023.56, "text": " And that gives you the vector of weighted sums, s2.", "tokens": [50364, 689, 291, 362, 8213, 8474, 11, 8213, 11745, 8474, 11, 597, 50540, 50540, 1936, 747, 264, 3894, 1785, 50712, 50712, 293, 12972, 309, 538, 257, 8141, 13, 50814, 50814, 407, 291, 362, 257, 1785, 510, 11, 710, 16, 11, 17207, 538, 257, 8141, 13, 50968, 50968, 509, 483, 261, 16, 11, 710, 16, 13, 51032, 51032, 400, 300, 2709, 291, 264, 8062, 295, 32807, 34499, 11, 262, 17, 13, 51308, 51308, 1396, 291, 747, 300, 11, 1320, 309, 807, 264, 2107, 28263, 6828, 11, 51542, 51542, 1184, 6542, 16652, 13, 51642, 51642, 400, 300, 2709, 291, 710, 17, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13604927988885676, "compression_ratio": 1.6854460093896713, "no_speech_prob": 4.1571256588213146e-06}, {"id": 1056, "seek": 300468, "start": 3023.56, "end": 3028.24, "text": " Then you take that, pass it through the nonlinear functions,", "tokens": [50364, 689, 291, 362, 8213, 8474, 11, 8213, 11745, 8474, 11, 597, 50540, 50540, 1936, 747, 264, 3894, 1785, 50712, 50712, 293, 12972, 309, 538, 257, 8141, 13, 50814, 50814, 407, 291, 362, 257, 1785, 510, 11, 710, 16, 11, 17207, 538, 257, 8141, 13, 50968, 50968, 509, 483, 261, 16, 11, 710, 16, 13, 51032, 51032, 400, 300, 2709, 291, 264, 8062, 295, 32807, 34499, 11, 262, 17, 13, 51308, 51308, 1396, 291, 747, 300, 11, 1320, 309, 807, 264, 2107, 28263, 6828, 11, 51542, 51542, 1184, 6542, 16652, 13, 51642, 51642, 400, 300, 2709, 291, 710, 17, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13604927988885676, "compression_ratio": 1.6854460093896713, "no_speech_prob": 4.1571256588213146e-06}, {"id": 1057, "seek": 300468, "start": 3028.24, "end": 3030.24, "text": " each component individually.", "tokens": [50364, 689, 291, 362, 8213, 8474, 11, 8213, 11745, 8474, 11, 597, 50540, 50540, 1936, 747, 264, 3894, 1785, 50712, 50712, 293, 12972, 309, 538, 257, 8141, 13, 50814, 50814, 407, 291, 362, 257, 1785, 510, 11, 710, 16, 11, 17207, 538, 257, 8141, 13, 50968, 50968, 509, 483, 261, 16, 11, 710, 16, 13, 51032, 51032, 400, 300, 2709, 291, 264, 8062, 295, 32807, 34499, 11, 262, 17, 13, 51308, 51308, 1396, 291, 747, 300, 11, 1320, 309, 807, 264, 2107, 28263, 6828, 11, 51542, 51542, 1184, 6542, 16652, 13, 51642, 51642, 400, 300, 2709, 291, 710, 17, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13604927988885676, "compression_ratio": 1.6854460093896713, "no_speech_prob": 4.1571256588213146e-06}, {"id": 1058, "seek": 300468, "start": 3030.24, "end": 3032.52, "text": " And that gives you z2.", "tokens": [50364, 689, 291, 362, 8213, 8474, 11, 8213, 11745, 8474, 11, 597, 50540, 50540, 1936, 747, 264, 3894, 1785, 50712, 50712, 293, 12972, 309, 538, 257, 8141, 13, 50814, 50814, 407, 291, 362, 257, 1785, 510, 11, 710, 16, 11, 17207, 538, 257, 8141, 13, 50968, 50968, 509, 483, 261, 16, 11, 710, 16, 13, 51032, 51032, 400, 300, 2709, 291, 264, 8062, 295, 32807, 34499, 11, 262, 17, 13, 51308, 51308, 1396, 291, 747, 300, 11, 1320, 309, 807, 264, 2107, 28263, 6828, 11, 51542, 51542, 1184, 6542, 16652, 13, 51642, 51642, 400, 300, 2709, 291, 710, 17, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13604927988885676, "compression_ratio": 1.6854460093896713, "no_speech_prob": 4.1571256588213146e-06}, {"id": 1059, "seek": 303252, "start": 3032.52, "end": 3035.72, "text": " So that's a three-layer neural net.", "tokens": [50364, 407, 300, 311, 257, 1045, 12, 8376, 260, 18161, 2533, 13, 50524, 50524, 2386, 3364, 8141, 11, 2107, 1889, 17409, 11, 1150, 3364, 50662, 50662, 8141, 11, 2107, 1889, 17409, 11, 2636, 3364, 8141, 13, 50756, 50756, 400, 341, 307, 264, 5598, 13, 50824, 50824, 509, 362, 732, 7633, 7914, 11, 1045, 7914, 295, 17443, 13, 51058, 51058, 440, 1778, 337, 3579, 309, 341, 636, 51138, 51138, 307, 300, 341, 307, 5986, 984, 264, 12889, 636, 281, 1223, 534, 51372, 51372, 437, 733, 295, 646, 79, 1513, 775, 13, 51558, 51558, 400, 294, 1186, 11, 309, 23249, 611, 281, 264, 636, 321, 6964, 18161, 36170, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17771838126926248, "compression_ratio": 1.7198275862068966, "no_speech_prob": 5.507473360921722e-06}, {"id": 1060, "seek": 303252, "start": 3035.72, "end": 3038.48, "text": " First weight matrix, nonlinearity, second weight", "tokens": [50364, 407, 300, 311, 257, 1045, 12, 8376, 260, 18161, 2533, 13, 50524, 50524, 2386, 3364, 8141, 11, 2107, 1889, 17409, 11, 1150, 3364, 50662, 50662, 8141, 11, 2107, 1889, 17409, 11, 2636, 3364, 8141, 13, 50756, 50756, 400, 341, 307, 264, 5598, 13, 50824, 50824, 509, 362, 732, 7633, 7914, 11, 1045, 7914, 295, 17443, 13, 51058, 51058, 440, 1778, 337, 3579, 309, 341, 636, 51138, 51138, 307, 300, 341, 307, 5986, 984, 264, 12889, 636, 281, 1223, 534, 51372, 51372, 437, 733, 295, 646, 79, 1513, 775, 13, 51558, 51558, 400, 294, 1186, 11, 309, 23249, 611, 281, 264, 636, 321, 6964, 18161, 36170, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17771838126926248, "compression_ratio": 1.7198275862068966, "no_speech_prob": 5.507473360921722e-06}, {"id": 1061, "seek": 303252, "start": 3038.48, "end": 3040.36, "text": " matrix, nonlinearity, third weight matrix.", "tokens": [50364, 407, 300, 311, 257, 1045, 12, 8376, 260, 18161, 2533, 13, 50524, 50524, 2386, 3364, 8141, 11, 2107, 1889, 17409, 11, 1150, 3364, 50662, 50662, 8141, 11, 2107, 1889, 17409, 11, 2636, 3364, 8141, 13, 50756, 50756, 400, 341, 307, 264, 5598, 13, 50824, 50824, 509, 362, 732, 7633, 7914, 11, 1045, 7914, 295, 17443, 13, 51058, 51058, 440, 1778, 337, 3579, 309, 341, 636, 51138, 51138, 307, 300, 341, 307, 5986, 984, 264, 12889, 636, 281, 1223, 534, 51372, 51372, 437, 733, 295, 646, 79, 1513, 775, 13, 51558, 51558, 400, 294, 1186, 11, 309, 23249, 611, 281, 264, 636, 321, 6964, 18161, 36170, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17771838126926248, "compression_ratio": 1.7198275862068966, "no_speech_prob": 5.507473360921722e-06}, {"id": 1062, "seek": 303252, "start": 3040.36, "end": 3041.72, "text": " And this is the output.", "tokens": [50364, 407, 300, 311, 257, 1045, 12, 8376, 260, 18161, 2533, 13, 50524, 50524, 2386, 3364, 8141, 11, 2107, 1889, 17409, 11, 1150, 3364, 50662, 50662, 8141, 11, 2107, 1889, 17409, 11, 2636, 3364, 8141, 13, 50756, 50756, 400, 341, 307, 264, 5598, 13, 50824, 50824, 509, 362, 732, 7633, 7914, 11, 1045, 7914, 295, 17443, 13, 51058, 51058, 440, 1778, 337, 3579, 309, 341, 636, 51138, 51138, 307, 300, 341, 307, 5986, 984, 264, 12889, 636, 281, 1223, 534, 51372, 51372, 437, 733, 295, 646, 79, 1513, 775, 13, 51558, 51558, 400, 294, 1186, 11, 309, 23249, 611, 281, 264, 636, 321, 6964, 18161, 36170, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17771838126926248, "compression_ratio": 1.7198275862068966, "no_speech_prob": 5.507473360921722e-06}, {"id": 1063, "seek": 303252, "start": 3041.72, "end": 3046.4, "text": " You have two hidden layers, three layers of weights.", "tokens": [50364, 407, 300, 311, 257, 1045, 12, 8376, 260, 18161, 2533, 13, 50524, 50524, 2386, 3364, 8141, 11, 2107, 1889, 17409, 11, 1150, 3364, 50662, 50662, 8141, 11, 2107, 1889, 17409, 11, 2636, 3364, 8141, 13, 50756, 50756, 400, 341, 307, 264, 5598, 13, 50824, 50824, 509, 362, 732, 7633, 7914, 11, 1045, 7914, 295, 17443, 13, 51058, 51058, 440, 1778, 337, 3579, 309, 341, 636, 51138, 51138, 307, 300, 341, 307, 5986, 984, 264, 12889, 636, 281, 1223, 534, 51372, 51372, 437, 733, 295, 646, 79, 1513, 775, 13, 51558, 51558, 400, 294, 1186, 11, 309, 23249, 611, 281, 264, 636, 321, 6964, 18161, 36170, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17771838126926248, "compression_ratio": 1.7198275862068966, "no_speech_prob": 5.507473360921722e-06}, {"id": 1064, "seek": 303252, "start": 3046.4, "end": 3048.0, "text": " The reason for writing it this way", "tokens": [50364, 407, 300, 311, 257, 1045, 12, 8376, 260, 18161, 2533, 13, 50524, 50524, 2386, 3364, 8141, 11, 2107, 1889, 17409, 11, 1150, 3364, 50662, 50662, 8141, 11, 2107, 1889, 17409, 11, 2636, 3364, 8141, 13, 50756, 50756, 400, 341, 307, 264, 5598, 13, 50824, 50824, 509, 362, 732, 7633, 7914, 11, 1045, 7914, 295, 17443, 13, 51058, 51058, 440, 1778, 337, 3579, 309, 341, 636, 51138, 51138, 307, 300, 341, 307, 5986, 984, 264, 12889, 636, 281, 1223, 534, 51372, 51372, 437, 733, 295, 646, 79, 1513, 775, 13, 51558, 51558, 400, 294, 1186, 11, 309, 23249, 611, 281, 264, 636, 321, 6964, 18161, 36170, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17771838126926248, "compression_ratio": 1.7198275862068966, "no_speech_prob": 5.507473360921722e-06}, {"id": 1065, "seek": 303252, "start": 3048.0, "end": 3052.68, "text": " is that this is symbolically the easiest way to understand really", "tokens": [50364, 407, 300, 311, 257, 1045, 12, 8376, 260, 18161, 2533, 13, 50524, 50524, 2386, 3364, 8141, 11, 2107, 1889, 17409, 11, 1150, 3364, 50662, 50662, 8141, 11, 2107, 1889, 17409, 11, 2636, 3364, 8141, 13, 50756, 50756, 400, 341, 307, 264, 5598, 13, 50824, 50824, 509, 362, 732, 7633, 7914, 11, 1045, 7914, 295, 17443, 13, 51058, 51058, 440, 1778, 337, 3579, 309, 341, 636, 51138, 51138, 307, 300, 341, 307, 5986, 984, 264, 12889, 636, 281, 1223, 534, 51372, 51372, 437, 733, 295, 646, 79, 1513, 775, 13, 51558, 51558, 400, 294, 1186, 11, 309, 23249, 611, 281, 264, 636, 321, 6964, 18161, 36170, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17771838126926248, "compression_ratio": 1.7198275862068966, "no_speech_prob": 5.507473360921722e-06}, {"id": 1066, "seek": 303252, "start": 3052.68, "end": 3056.4, "text": " what kind of backprop does.", "tokens": [50364, 407, 300, 311, 257, 1045, 12, 8376, 260, 18161, 2533, 13, 50524, 50524, 2386, 3364, 8141, 11, 2107, 1889, 17409, 11, 1150, 3364, 50662, 50662, 8141, 11, 2107, 1889, 17409, 11, 2636, 3364, 8141, 13, 50756, 50756, 400, 341, 307, 264, 5598, 13, 50824, 50824, 509, 362, 732, 7633, 7914, 11, 1045, 7914, 295, 17443, 13, 51058, 51058, 440, 1778, 337, 3579, 309, 341, 636, 51138, 51138, 307, 300, 341, 307, 5986, 984, 264, 12889, 636, 281, 1223, 534, 51372, 51372, 437, 733, 295, 646, 79, 1513, 775, 13, 51558, 51558, 400, 294, 1186, 11, 309, 23249, 611, 281, 264, 636, 321, 6964, 18161, 36170, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17771838126926248, "compression_ratio": 1.7198275862068966, "no_speech_prob": 5.507473360921722e-06}, {"id": 1067, "seek": 303252, "start": 3056.4, "end": 3060.08, "text": " And in fact, it corresponds also to the way we define neural nets", "tokens": [50364, 407, 300, 311, 257, 1045, 12, 8376, 260, 18161, 2533, 13, 50524, 50524, 2386, 3364, 8141, 11, 2107, 1889, 17409, 11, 1150, 3364, 50662, 50662, 8141, 11, 2107, 1889, 17409, 11, 2636, 3364, 8141, 13, 50756, 50756, 400, 341, 307, 264, 5598, 13, 50824, 50824, 509, 362, 732, 7633, 7914, 11, 1045, 7914, 295, 17443, 13, 51058, 51058, 440, 1778, 337, 3579, 309, 341, 636, 51138, 51138, 307, 300, 341, 307, 5986, 984, 264, 12889, 636, 281, 1223, 534, 51372, 51372, 437, 733, 295, 646, 79, 1513, 775, 13, 51558, 51558, 400, 294, 1186, 11, 309, 23249, 611, 281, 264, 636, 321, 6964, 18161, 36170, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17771838126926248, "compression_ratio": 1.7198275862068966, "no_speech_prob": 5.507473360921722e-06}, {"id": 1068, "seek": 306008, "start": 3060.08, "end": 3065.92, "text": " and we run them on deep learning frameworks like PyTorch.", "tokens": [50364, 293, 321, 1190, 552, 322, 2452, 2539, 29834, 411, 9953, 51, 284, 339, 13, 50656, 50784, 407, 341, 307, 264, 2657, 12, 27414, 3037, 50924, 50924, 295, 17827, 257, 18161, 2533, 294, 9953, 51, 284, 339, 13, 51186, 51186, 492, 434, 516, 281, 764, 659, 37716, 1508, 11, 597, 51288, 51288, 366, 264, 8213, 1508, 300, 1936, 12788, 530, 51478, 51478, 257, 8062, 538, 8141, 13, 51542, 51542, 467, 611, 575, 32152, 11, 457, 718, 311, 406, 751, 466, 341, 445, 586, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13732649266034708, "compression_ratio": 1.4780487804878049, "no_speech_prob": 2.295846798006096e-06}, {"id": 1069, "seek": 306008, "start": 3068.48, "end": 3071.2799999999997, "text": " So this is the object-oriented version", "tokens": [50364, 293, 321, 1190, 552, 322, 2452, 2539, 29834, 411, 9953, 51, 284, 339, 13, 50656, 50784, 407, 341, 307, 264, 2657, 12, 27414, 3037, 50924, 50924, 295, 17827, 257, 18161, 2533, 294, 9953, 51, 284, 339, 13, 51186, 51186, 492, 434, 516, 281, 764, 659, 37716, 1508, 11, 597, 51288, 51288, 366, 264, 8213, 1508, 300, 1936, 12788, 530, 51478, 51478, 257, 8062, 538, 8141, 13, 51542, 51542, 467, 611, 575, 32152, 11, 457, 718, 311, 406, 751, 466, 341, 445, 586, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13732649266034708, "compression_ratio": 1.4780487804878049, "no_speech_prob": 2.295846798006096e-06}, {"id": 1070, "seek": 306008, "start": 3071.2799999999997, "end": 3076.52, "text": " of defining a neural net in PyTorch.", "tokens": [50364, 293, 321, 1190, 552, 322, 2452, 2539, 29834, 411, 9953, 51, 284, 339, 13, 50656, 50784, 407, 341, 307, 264, 2657, 12, 27414, 3037, 50924, 50924, 295, 17827, 257, 18161, 2533, 294, 9953, 51, 284, 339, 13, 51186, 51186, 492, 434, 516, 281, 764, 659, 37716, 1508, 11, 597, 51288, 51288, 366, 264, 8213, 1508, 300, 1936, 12788, 530, 51478, 51478, 257, 8062, 538, 8141, 13, 51542, 51542, 467, 611, 575, 32152, 11, 457, 718, 311, 406, 751, 466, 341, 445, 586, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13732649266034708, "compression_ratio": 1.4780487804878049, "no_speech_prob": 2.295846798006096e-06}, {"id": 1071, "seek": 306008, "start": 3076.52, "end": 3078.56, "text": " We're going to use predefined class, which", "tokens": [50364, 293, 321, 1190, 552, 322, 2452, 2539, 29834, 411, 9953, 51, 284, 339, 13, 50656, 50784, 407, 341, 307, 264, 2657, 12, 27414, 3037, 50924, 50924, 295, 17827, 257, 18161, 2533, 294, 9953, 51, 284, 339, 13, 51186, 51186, 492, 434, 516, 281, 764, 659, 37716, 1508, 11, 597, 51288, 51288, 366, 264, 8213, 1508, 300, 1936, 12788, 530, 51478, 51478, 257, 8062, 538, 8141, 13, 51542, 51542, 467, 611, 575, 32152, 11, 457, 718, 311, 406, 751, 466, 341, 445, 586, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13732649266034708, "compression_ratio": 1.4780487804878049, "no_speech_prob": 2.295846798006096e-06}, {"id": 1072, "seek": 306008, "start": 3078.56, "end": 3082.36, "text": " are the linear class that basically multiplies", "tokens": [50364, 293, 321, 1190, 552, 322, 2452, 2539, 29834, 411, 9953, 51, 284, 339, 13, 50656, 50784, 407, 341, 307, 264, 2657, 12, 27414, 3037, 50924, 50924, 295, 17827, 257, 18161, 2533, 294, 9953, 51, 284, 339, 13, 51186, 51186, 492, 434, 516, 281, 764, 659, 37716, 1508, 11, 597, 51288, 51288, 366, 264, 8213, 1508, 300, 1936, 12788, 530, 51478, 51478, 257, 8062, 538, 8141, 13, 51542, 51542, 467, 611, 575, 32152, 11, 457, 718, 311, 406, 751, 466, 341, 445, 586, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13732649266034708, "compression_ratio": 1.4780487804878049, "no_speech_prob": 2.295846798006096e-06}, {"id": 1073, "seek": 306008, "start": 3082.36, "end": 3083.64, "text": " a vector by matrix.", "tokens": [50364, 293, 321, 1190, 552, 322, 2452, 2539, 29834, 411, 9953, 51, 284, 339, 13, 50656, 50784, 407, 341, 307, 264, 2657, 12, 27414, 3037, 50924, 50924, 295, 17827, 257, 18161, 2533, 294, 9953, 51, 284, 339, 13, 51186, 51186, 492, 434, 516, 281, 764, 659, 37716, 1508, 11, 597, 51288, 51288, 366, 264, 8213, 1508, 300, 1936, 12788, 530, 51478, 51478, 257, 8062, 538, 8141, 13, 51542, 51542, 467, 611, 575, 32152, 11, 457, 718, 311, 406, 751, 466, 341, 445, 586, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13732649266034708, "compression_ratio": 1.4780487804878049, "no_speech_prob": 2.295846798006096e-06}, {"id": 1074, "seek": 306008, "start": 3083.64, "end": 3087.88, "text": " It also has biases, but let's not talk about this just now.", "tokens": [50364, 293, 321, 1190, 552, 322, 2452, 2539, 29834, 411, 9953, 51, 284, 339, 13, 50656, 50784, 407, 341, 307, 264, 2657, 12, 27414, 3037, 50924, 50924, 295, 17827, 257, 18161, 2533, 294, 9953, 51, 284, 339, 13, 51186, 51186, 492, 434, 516, 281, 764, 659, 37716, 1508, 11, 597, 51288, 51288, 366, 264, 8213, 1508, 300, 1936, 12788, 530, 51478, 51478, 257, 8062, 538, 8141, 13, 51542, 51542, 467, 611, 575, 32152, 11, 457, 718, 311, 406, 751, 466, 341, 445, 586, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13732649266034708, "compression_ratio": 1.4780487804878049, "no_speech_prob": 2.295846798006096e-06}, {"id": 1075, "seek": 308788, "start": 3087.88, "end": 3090.6400000000003, "text": " And another class, which is the ReLU function, which", "tokens": [50364, 400, 1071, 1508, 11, 597, 307, 264, 1300, 43, 52, 2445, 11, 597, 50502, 50502, 2516, 257, 8062, 420, 257, 2120, 327, 332, 11075, 10225, 50620, 50620, 293, 13165, 264, 2107, 28263, 2445, 50730, 50730, 281, 633, 6542, 14759, 13, 50888, 50888, 407, 341, 307, 257, 707, 2522, 295, 15329, 1461, 50988, 50988, 300, 4960, 7160, 339, 11, 321, 974, 7160, 339, 13, 51162, 51162, 492, 652, 364, 3256, 11, 597, 307, 1266, 18668, 538, 945, 18668, 51350, 51350, 293, 1045, 6677, 337, 2017, 13, 51482, 51482, 492, 14722, 264, 2744, 295, 309, 11, 293, 321, 434, 51556, 51556, 516, 281, 5452, 257, 18161, 2533, 689, 264, 1230, 295, 15743, 51706, 51706, 307, 264, 1230, 295, 6677, 295, 527, 3256, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13348719787597657, "compression_ratio": 1.687732342007435, "no_speech_prob": 1.5444893506355584e-05}, {"id": 1076, "seek": 308788, "start": 3090.6400000000003, "end": 3093.0, "text": " takes a vector or a multidimensional array", "tokens": [50364, 400, 1071, 1508, 11, 597, 307, 264, 1300, 43, 52, 2445, 11, 597, 50502, 50502, 2516, 257, 8062, 420, 257, 2120, 327, 332, 11075, 10225, 50620, 50620, 293, 13165, 264, 2107, 28263, 2445, 50730, 50730, 281, 633, 6542, 14759, 13, 50888, 50888, 407, 341, 307, 257, 707, 2522, 295, 15329, 1461, 50988, 50988, 300, 4960, 7160, 339, 11, 321, 974, 7160, 339, 13, 51162, 51162, 492, 652, 364, 3256, 11, 597, 307, 1266, 18668, 538, 945, 18668, 51350, 51350, 293, 1045, 6677, 337, 2017, 13, 51482, 51482, 492, 14722, 264, 2744, 295, 309, 11, 293, 321, 434, 51556, 51556, 516, 281, 5452, 257, 18161, 2533, 689, 264, 1230, 295, 15743, 51706, 51706, 307, 264, 1230, 295, 6677, 295, 527, 3256, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13348719787597657, "compression_ratio": 1.687732342007435, "no_speech_prob": 1.5444893506355584e-05}, {"id": 1077, "seek": 308788, "start": 3093.0, "end": 3095.2000000000003, "text": " and applies the nonlinear function", "tokens": [50364, 400, 1071, 1508, 11, 597, 307, 264, 1300, 43, 52, 2445, 11, 597, 50502, 50502, 2516, 257, 8062, 420, 257, 2120, 327, 332, 11075, 10225, 50620, 50620, 293, 13165, 264, 2107, 28263, 2445, 50730, 50730, 281, 633, 6542, 14759, 13, 50888, 50888, 407, 341, 307, 257, 707, 2522, 295, 15329, 1461, 50988, 50988, 300, 4960, 7160, 339, 11, 321, 974, 7160, 339, 13, 51162, 51162, 492, 652, 364, 3256, 11, 597, 307, 1266, 18668, 538, 945, 18668, 51350, 51350, 293, 1045, 6677, 337, 2017, 13, 51482, 51482, 492, 14722, 264, 2744, 295, 309, 11, 293, 321, 434, 51556, 51556, 516, 281, 5452, 257, 18161, 2533, 689, 264, 1230, 295, 15743, 51706, 51706, 307, 264, 1230, 295, 6677, 295, 527, 3256, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13348719787597657, "compression_ratio": 1.687732342007435, "no_speech_prob": 1.5444893506355584e-05}, {"id": 1078, "seek": 308788, "start": 3095.2000000000003, "end": 3098.36, "text": " to every component separately.", "tokens": [50364, 400, 1071, 1508, 11, 597, 307, 264, 1300, 43, 52, 2445, 11, 597, 50502, 50502, 2516, 257, 8062, 420, 257, 2120, 327, 332, 11075, 10225, 50620, 50620, 293, 13165, 264, 2107, 28263, 2445, 50730, 50730, 281, 633, 6542, 14759, 13, 50888, 50888, 407, 341, 307, 257, 707, 2522, 295, 15329, 1461, 50988, 50988, 300, 4960, 7160, 339, 11, 321, 974, 7160, 339, 13, 51162, 51162, 492, 652, 364, 3256, 11, 597, 307, 1266, 18668, 538, 945, 18668, 51350, 51350, 293, 1045, 6677, 337, 2017, 13, 51482, 51482, 492, 14722, 264, 2744, 295, 309, 11, 293, 321, 434, 51556, 51556, 516, 281, 5452, 257, 18161, 2533, 689, 264, 1230, 295, 15743, 51706, 51706, 307, 264, 1230, 295, 6677, 295, 527, 3256, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13348719787597657, "compression_ratio": 1.687732342007435, "no_speech_prob": 1.5444893506355584e-05}, {"id": 1079, "seek": 308788, "start": 3098.36, "end": 3100.36, "text": " So this is a little piece of Python program", "tokens": [50364, 400, 1071, 1508, 11, 597, 307, 264, 1300, 43, 52, 2445, 11, 597, 50502, 50502, 2516, 257, 8062, 420, 257, 2120, 327, 332, 11075, 10225, 50620, 50620, 293, 13165, 264, 2107, 28263, 2445, 50730, 50730, 281, 633, 6542, 14759, 13, 50888, 50888, 407, 341, 307, 257, 707, 2522, 295, 15329, 1461, 50988, 50988, 300, 4960, 7160, 339, 11, 321, 974, 7160, 339, 13, 51162, 51162, 492, 652, 364, 3256, 11, 597, 307, 1266, 18668, 538, 945, 18668, 51350, 51350, 293, 1045, 6677, 337, 2017, 13, 51482, 51482, 492, 14722, 264, 2744, 295, 309, 11, 293, 321, 434, 51556, 51556, 516, 281, 5452, 257, 18161, 2533, 689, 264, 1230, 295, 15743, 51706, 51706, 307, 264, 1230, 295, 6677, 295, 527, 3256, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13348719787597657, "compression_ratio": 1.687732342007435, "no_speech_prob": 1.5444893506355584e-05}, {"id": 1080, "seek": 308788, "start": 3100.36, "end": 3103.84, "text": " that uses Torch, we import Torch.", "tokens": [50364, 400, 1071, 1508, 11, 597, 307, 264, 1300, 43, 52, 2445, 11, 597, 50502, 50502, 2516, 257, 8062, 420, 257, 2120, 327, 332, 11075, 10225, 50620, 50620, 293, 13165, 264, 2107, 28263, 2445, 50730, 50730, 281, 633, 6542, 14759, 13, 50888, 50888, 407, 341, 307, 257, 707, 2522, 295, 15329, 1461, 50988, 50988, 300, 4960, 7160, 339, 11, 321, 974, 7160, 339, 13, 51162, 51162, 492, 652, 364, 3256, 11, 597, 307, 1266, 18668, 538, 945, 18668, 51350, 51350, 293, 1045, 6677, 337, 2017, 13, 51482, 51482, 492, 14722, 264, 2744, 295, 309, 11, 293, 321, 434, 51556, 51556, 516, 281, 5452, 257, 18161, 2533, 689, 264, 1230, 295, 15743, 51706, 51706, 307, 264, 1230, 295, 6677, 295, 527, 3256, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13348719787597657, "compression_ratio": 1.687732342007435, "no_speech_prob": 1.5444893506355584e-05}, {"id": 1081, "seek": 308788, "start": 3103.84, "end": 3107.6, "text": " We make an image, which is 10 pixels by 20 pixels", "tokens": [50364, 400, 1071, 1508, 11, 597, 307, 264, 1300, 43, 52, 2445, 11, 597, 50502, 50502, 2516, 257, 8062, 420, 257, 2120, 327, 332, 11075, 10225, 50620, 50620, 293, 13165, 264, 2107, 28263, 2445, 50730, 50730, 281, 633, 6542, 14759, 13, 50888, 50888, 407, 341, 307, 257, 707, 2522, 295, 15329, 1461, 50988, 50988, 300, 4960, 7160, 339, 11, 321, 974, 7160, 339, 13, 51162, 51162, 492, 652, 364, 3256, 11, 597, 307, 1266, 18668, 538, 945, 18668, 51350, 51350, 293, 1045, 6677, 337, 2017, 13, 51482, 51482, 492, 14722, 264, 2744, 295, 309, 11, 293, 321, 434, 51556, 51556, 516, 281, 5452, 257, 18161, 2533, 689, 264, 1230, 295, 15743, 51706, 51706, 307, 264, 1230, 295, 6677, 295, 527, 3256, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13348719787597657, "compression_ratio": 1.687732342007435, "no_speech_prob": 1.5444893506355584e-05}, {"id": 1082, "seek": 308788, "start": 3107.6, "end": 3110.2400000000002, "text": " and three components for color.", "tokens": [50364, 400, 1071, 1508, 11, 597, 307, 264, 1300, 43, 52, 2445, 11, 597, 50502, 50502, 2516, 257, 8062, 420, 257, 2120, 327, 332, 11075, 10225, 50620, 50620, 293, 13165, 264, 2107, 28263, 2445, 50730, 50730, 281, 633, 6542, 14759, 13, 50888, 50888, 407, 341, 307, 257, 707, 2522, 295, 15329, 1461, 50988, 50988, 300, 4960, 7160, 339, 11, 321, 974, 7160, 339, 13, 51162, 51162, 492, 652, 364, 3256, 11, 597, 307, 1266, 18668, 538, 945, 18668, 51350, 51350, 293, 1045, 6677, 337, 2017, 13, 51482, 51482, 492, 14722, 264, 2744, 295, 309, 11, 293, 321, 434, 51556, 51556, 516, 281, 5452, 257, 18161, 2533, 689, 264, 1230, 295, 15743, 51706, 51706, 307, 264, 1230, 295, 6677, 295, 527, 3256, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13348719787597657, "compression_ratio": 1.687732342007435, "no_speech_prob": 1.5444893506355584e-05}, {"id": 1083, "seek": 308788, "start": 3110.2400000000002, "end": 3111.7200000000003, "text": " We compute the size of it, and we're", "tokens": [50364, 400, 1071, 1508, 11, 597, 307, 264, 1300, 43, 52, 2445, 11, 597, 50502, 50502, 2516, 257, 8062, 420, 257, 2120, 327, 332, 11075, 10225, 50620, 50620, 293, 13165, 264, 2107, 28263, 2445, 50730, 50730, 281, 633, 6542, 14759, 13, 50888, 50888, 407, 341, 307, 257, 707, 2522, 295, 15329, 1461, 50988, 50988, 300, 4960, 7160, 339, 11, 321, 974, 7160, 339, 13, 51162, 51162, 492, 652, 364, 3256, 11, 597, 307, 1266, 18668, 538, 945, 18668, 51350, 51350, 293, 1045, 6677, 337, 2017, 13, 51482, 51482, 492, 14722, 264, 2744, 295, 309, 11, 293, 321, 434, 51556, 51556, 516, 281, 5452, 257, 18161, 2533, 689, 264, 1230, 295, 15743, 51706, 51706, 307, 264, 1230, 295, 6677, 295, 527, 3256, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13348719787597657, "compression_ratio": 1.687732342007435, "no_speech_prob": 1.5444893506355584e-05}, {"id": 1084, "seek": 308788, "start": 3111.7200000000003, "end": 3114.7200000000003, "text": " going to plug a neural net where the number of inputs", "tokens": [50364, 400, 1071, 1508, 11, 597, 307, 264, 1300, 43, 52, 2445, 11, 597, 50502, 50502, 2516, 257, 8062, 420, 257, 2120, 327, 332, 11075, 10225, 50620, 50620, 293, 13165, 264, 2107, 28263, 2445, 50730, 50730, 281, 633, 6542, 14759, 13, 50888, 50888, 407, 341, 307, 257, 707, 2522, 295, 15329, 1461, 50988, 50988, 300, 4960, 7160, 339, 11, 321, 974, 7160, 339, 13, 51162, 51162, 492, 652, 364, 3256, 11, 597, 307, 1266, 18668, 538, 945, 18668, 51350, 51350, 293, 1045, 6677, 337, 2017, 13, 51482, 51482, 492, 14722, 264, 2744, 295, 309, 11, 293, 321, 434, 51556, 51556, 516, 281, 5452, 257, 18161, 2533, 689, 264, 1230, 295, 15743, 51706, 51706, 307, 264, 1230, 295, 6677, 295, 527, 3256, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13348719787597657, "compression_ratio": 1.687732342007435, "no_speech_prob": 1.5444893506355584e-05}, {"id": 1085, "seek": 308788, "start": 3114.7200000000003, "end": 3116.56, "text": " is the number of components of our image.", "tokens": [50364, 400, 1071, 1508, 11, 597, 307, 264, 1300, 43, 52, 2445, 11, 597, 50502, 50502, 2516, 257, 8062, 420, 257, 2120, 327, 332, 11075, 10225, 50620, 50620, 293, 13165, 264, 2107, 28263, 2445, 50730, 50730, 281, 633, 6542, 14759, 13, 50888, 50888, 407, 341, 307, 257, 707, 2522, 295, 15329, 1461, 50988, 50988, 300, 4960, 7160, 339, 11, 321, 974, 7160, 339, 13, 51162, 51162, 492, 652, 364, 3256, 11, 597, 307, 1266, 18668, 538, 945, 18668, 51350, 51350, 293, 1045, 6677, 337, 2017, 13, 51482, 51482, 492, 14722, 264, 2744, 295, 309, 11, 293, 321, 434, 51556, 51556, 516, 281, 5452, 257, 18161, 2533, 689, 264, 1230, 295, 15743, 51706, 51706, 307, 264, 1230, 295, 6677, 295, 527, 3256, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.13348719787597657, "compression_ratio": 1.687732342007435, "no_speech_prob": 1.5444893506355584e-05}, {"id": 1086, "seek": 311656, "start": 3116.56, "end": 3119.92, "text": " So in this case, that would be 600 or so.", "tokens": [50364, 407, 294, 341, 1389, 11, 300, 576, 312, 11849, 420, 370, 13, 50532, 50532, 400, 321, 434, 516, 281, 6964, 257, 1508, 13, 50612, 50612, 440, 1508, 307, 516, 281, 6964, 257, 18161, 2533, 11, 50702, 50702, 293, 300, 311, 1238, 709, 439, 321, 643, 281, 360, 510, 13, 50822, 50822, 407, 321, 6964, 527, 3209, 9482, 13, 50910, 50910, 467, 311, 257, 1422, 11665, 295, 1734, 1807, 31890, 44, 378, 2271, 11, 50992, 50992, 597, 307, 257, 1238, 2489, 1508, 13, 51122, 51122, 467, 311, 658, 257, 47479, 510, 300, 486, 51270, 51270, 747, 264, 11602, 295, 264, 6920, 7914, 300, 321, 528, 11, 51388, 51388, 264, 2744, 295, 264, 4846, 11, 264, 2744, 295, 318, 16, 293, 1176, 16, 11, 264, 2744, 295, 318, 17, 51620, 51620, 293, 1176, 17, 11, 293, 264, 2744, 295, 318, 18, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13442998462253147, "compression_ratio": 1.8, "no_speech_prob": 2.62704306805972e-05}, {"id": 1087, "seek": 311656, "start": 3119.92, "end": 3121.52, "text": " And we're going to define a class.", "tokens": [50364, 407, 294, 341, 1389, 11, 300, 576, 312, 11849, 420, 370, 13, 50532, 50532, 400, 321, 434, 516, 281, 6964, 257, 1508, 13, 50612, 50612, 440, 1508, 307, 516, 281, 6964, 257, 18161, 2533, 11, 50702, 50702, 293, 300, 311, 1238, 709, 439, 321, 643, 281, 360, 510, 13, 50822, 50822, 407, 321, 6964, 527, 3209, 9482, 13, 50910, 50910, 467, 311, 257, 1422, 11665, 295, 1734, 1807, 31890, 44, 378, 2271, 11, 50992, 50992, 597, 307, 257, 1238, 2489, 1508, 13, 51122, 51122, 467, 311, 658, 257, 47479, 510, 300, 486, 51270, 51270, 747, 264, 11602, 295, 264, 6920, 7914, 300, 321, 528, 11, 51388, 51388, 264, 2744, 295, 264, 4846, 11, 264, 2744, 295, 318, 16, 293, 1176, 16, 11, 264, 2744, 295, 318, 17, 51620, 51620, 293, 1176, 17, 11, 293, 264, 2744, 295, 318, 18, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13442998462253147, "compression_ratio": 1.8, "no_speech_prob": 2.62704306805972e-05}, {"id": 1088, "seek": 311656, "start": 3121.52, "end": 3123.32, "text": " The class is going to define a neural net,", "tokens": [50364, 407, 294, 341, 1389, 11, 300, 576, 312, 11849, 420, 370, 13, 50532, 50532, 400, 321, 434, 516, 281, 6964, 257, 1508, 13, 50612, 50612, 440, 1508, 307, 516, 281, 6964, 257, 18161, 2533, 11, 50702, 50702, 293, 300, 311, 1238, 709, 439, 321, 643, 281, 360, 510, 13, 50822, 50822, 407, 321, 6964, 527, 3209, 9482, 13, 50910, 50910, 467, 311, 257, 1422, 11665, 295, 1734, 1807, 31890, 44, 378, 2271, 11, 50992, 50992, 597, 307, 257, 1238, 2489, 1508, 13, 51122, 51122, 467, 311, 658, 257, 47479, 510, 300, 486, 51270, 51270, 747, 264, 11602, 295, 264, 6920, 7914, 300, 321, 528, 11, 51388, 51388, 264, 2744, 295, 264, 4846, 11, 264, 2744, 295, 318, 16, 293, 1176, 16, 11, 264, 2744, 295, 318, 17, 51620, 51620, 293, 1176, 17, 11, 293, 264, 2744, 295, 318, 18, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13442998462253147, "compression_ratio": 1.8, "no_speech_prob": 2.62704306805972e-05}, {"id": 1089, "seek": 311656, "start": 3123.32, "end": 3125.72, "text": " and that's pretty much all we need to do here.", "tokens": [50364, 407, 294, 341, 1389, 11, 300, 576, 312, 11849, 420, 370, 13, 50532, 50532, 400, 321, 434, 516, 281, 6964, 257, 1508, 13, 50612, 50612, 440, 1508, 307, 516, 281, 6964, 257, 18161, 2533, 11, 50702, 50702, 293, 300, 311, 1238, 709, 439, 321, 643, 281, 360, 510, 13, 50822, 50822, 407, 321, 6964, 527, 3209, 9482, 13, 50910, 50910, 467, 311, 257, 1422, 11665, 295, 1734, 1807, 31890, 44, 378, 2271, 11, 50992, 50992, 597, 307, 257, 1238, 2489, 1508, 13, 51122, 51122, 467, 311, 658, 257, 47479, 510, 300, 486, 51270, 51270, 747, 264, 11602, 295, 264, 6920, 7914, 300, 321, 528, 11, 51388, 51388, 264, 2744, 295, 264, 4846, 11, 264, 2744, 295, 318, 16, 293, 1176, 16, 11, 264, 2744, 295, 318, 17, 51620, 51620, 293, 1176, 17, 11, 293, 264, 2744, 295, 318, 18, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13442998462253147, "compression_ratio": 1.8, "no_speech_prob": 2.62704306805972e-05}, {"id": 1090, "seek": 311656, "start": 3125.72, "end": 3127.48, "text": " So we define our network architecture.", "tokens": [50364, 407, 294, 341, 1389, 11, 300, 576, 312, 11849, 420, 370, 13, 50532, 50532, 400, 321, 434, 516, 281, 6964, 257, 1508, 13, 50612, 50612, 440, 1508, 307, 516, 281, 6964, 257, 18161, 2533, 11, 50702, 50702, 293, 300, 311, 1238, 709, 439, 321, 643, 281, 360, 510, 13, 50822, 50822, 407, 321, 6964, 527, 3209, 9482, 13, 50910, 50910, 467, 311, 257, 1422, 11665, 295, 1734, 1807, 31890, 44, 378, 2271, 11, 50992, 50992, 597, 307, 257, 1238, 2489, 1508, 13, 51122, 51122, 467, 311, 658, 257, 47479, 510, 300, 486, 51270, 51270, 747, 264, 11602, 295, 264, 6920, 7914, 300, 321, 528, 11, 51388, 51388, 264, 2744, 295, 264, 4846, 11, 264, 2744, 295, 318, 16, 293, 1176, 16, 11, 264, 2744, 295, 318, 17, 51620, 51620, 293, 1176, 17, 11, 293, 264, 2744, 295, 318, 18, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13442998462253147, "compression_ratio": 1.8, "no_speech_prob": 2.62704306805972e-05}, {"id": 1091, "seek": 311656, "start": 3127.48, "end": 3129.12, "text": " It's a subclass of NeuralNetModule,", "tokens": [50364, 407, 294, 341, 1389, 11, 300, 576, 312, 11849, 420, 370, 13, 50532, 50532, 400, 321, 434, 516, 281, 6964, 257, 1508, 13, 50612, 50612, 440, 1508, 307, 516, 281, 6964, 257, 18161, 2533, 11, 50702, 50702, 293, 300, 311, 1238, 709, 439, 321, 643, 281, 360, 510, 13, 50822, 50822, 407, 321, 6964, 527, 3209, 9482, 13, 50910, 50910, 467, 311, 257, 1422, 11665, 295, 1734, 1807, 31890, 44, 378, 2271, 11, 50992, 50992, 597, 307, 257, 1238, 2489, 1508, 13, 51122, 51122, 467, 311, 658, 257, 47479, 510, 300, 486, 51270, 51270, 747, 264, 11602, 295, 264, 6920, 7914, 300, 321, 528, 11, 51388, 51388, 264, 2744, 295, 264, 4846, 11, 264, 2744, 295, 318, 16, 293, 1176, 16, 11, 264, 2744, 295, 318, 17, 51620, 51620, 293, 1176, 17, 11, 293, 264, 2744, 295, 318, 18, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13442998462253147, "compression_ratio": 1.8, "no_speech_prob": 2.62704306805972e-05}, {"id": 1092, "seek": 311656, "start": 3129.12, "end": 3131.72, "text": " which is a pretty fine class.", "tokens": [50364, 407, 294, 341, 1389, 11, 300, 576, 312, 11849, 420, 370, 13, 50532, 50532, 400, 321, 434, 516, 281, 6964, 257, 1508, 13, 50612, 50612, 440, 1508, 307, 516, 281, 6964, 257, 18161, 2533, 11, 50702, 50702, 293, 300, 311, 1238, 709, 439, 321, 643, 281, 360, 510, 13, 50822, 50822, 407, 321, 6964, 527, 3209, 9482, 13, 50910, 50910, 467, 311, 257, 1422, 11665, 295, 1734, 1807, 31890, 44, 378, 2271, 11, 50992, 50992, 597, 307, 257, 1238, 2489, 1508, 13, 51122, 51122, 467, 311, 658, 257, 47479, 510, 300, 486, 51270, 51270, 747, 264, 11602, 295, 264, 6920, 7914, 300, 321, 528, 11, 51388, 51388, 264, 2744, 295, 264, 4846, 11, 264, 2744, 295, 318, 16, 293, 1176, 16, 11, 264, 2744, 295, 318, 17, 51620, 51620, 293, 1176, 17, 11, 293, 264, 2744, 295, 318, 18, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13442998462253147, "compression_ratio": 1.8, "no_speech_prob": 2.62704306805972e-05}, {"id": 1093, "seek": 311656, "start": 3131.72, "end": 3134.68, "text": " It's got a constructor here that will", "tokens": [50364, 407, 294, 341, 1389, 11, 300, 576, 312, 11849, 420, 370, 13, 50532, 50532, 400, 321, 434, 516, 281, 6964, 257, 1508, 13, 50612, 50612, 440, 1508, 307, 516, 281, 6964, 257, 18161, 2533, 11, 50702, 50702, 293, 300, 311, 1238, 709, 439, 321, 643, 281, 360, 510, 13, 50822, 50822, 407, 321, 6964, 527, 3209, 9482, 13, 50910, 50910, 467, 311, 257, 1422, 11665, 295, 1734, 1807, 31890, 44, 378, 2271, 11, 50992, 50992, 597, 307, 257, 1238, 2489, 1508, 13, 51122, 51122, 467, 311, 658, 257, 47479, 510, 300, 486, 51270, 51270, 747, 264, 11602, 295, 264, 6920, 7914, 300, 321, 528, 11, 51388, 51388, 264, 2744, 295, 264, 4846, 11, 264, 2744, 295, 318, 16, 293, 1176, 16, 11, 264, 2744, 295, 318, 17, 51620, 51620, 293, 1176, 17, 11, 293, 264, 2744, 295, 318, 18, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13442998462253147, "compression_ratio": 1.8, "no_speech_prob": 2.62704306805972e-05}, {"id": 1094, "seek": 311656, "start": 3134.68, "end": 3137.04, "text": " take the sizes of the internal layers that we want,", "tokens": [50364, 407, 294, 341, 1389, 11, 300, 576, 312, 11849, 420, 370, 13, 50532, 50532, 400, 321, 434, 516, 281, 6964, 257, 1508, 13, 50612, 50612, 440, 1508, 307, 516, 281, 6964, 257, 18161, 2533, 11, 50702, 50702, 293, 300, 311, 1238, 709, 439, 321, 643, 281, 360, 510, 13, 50822, 50822, 407, 321, 6964, 527, 3209, 9482, 13, 50910, 50910, 467, 311, 257, 1422, 11665, 295, 1734, 1807, 31890, 44, 378, 2271, 11, 50992, 50992, 597, 307, 257, 1238, 2489, 1508, 13, 51122, 51122, 467, 311, 658, 257, 47479, 510, 300, 486, 51270, 51270, 747, 264, 11602, 295, 264, 6920, 7914, 300, 321, 528, 11, 51388, 51388, 264, 2744, 295, 264, 4846, 11, 264, 2744, 295, 318, 16, 293, 1176, 16, 11, 264, 2744, 295, 318, 17, 51620, 51620, 293, 1176, 17, 11, 293, 264, 2744, 295, 318, 18, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13442998462253147, "compression_ratio": 1.8, "no_speech_prob": 2.62704306805972e-05}, {"id": 1095, "seek": 311656, "start": 3137.04, "end": 3141.68, "text": " the size of the input, the size of S1 and Z1, the size of S2", "tokens": [50364, 407, 294, 341, 1389, 11, 300, 576, 312, 11849, 420, 370, 13, 50532, 50532, 400, 321, 434, 516, 281, 6964, 257, 1508, 13, 50612, 50612, 440, 1508, 307, 516, 281, 6964, 257, 18161, 2533, 11, 50702, 50702, 293, 300, 311, 1238, 709, 439, 321, 643, 281, 360, 510, 13, 50822, 50822, 407, 321, 6964, 527, 3209, 9482, 13, 50910, 50910, 467, 311, 257, 1422, 11665, 295, 1734, 1807, 31890, 44, 378, 2271, 11, 50992, 50992, 597, 307, 257, 1238, 2489, 1508, 13, 51122, 51122, 467, 311, 658, 257, 47479, 510, 300, 486, 51270, 51270, 747, 264, 11602, 295, 264, 6920, 7914, 300, 321, 528, 11, 51388, 51388, 264, 2744, 295, 264, 4846, 11, 264, 2744, 295, 318, 16, 293, 1176, 16, 11, 264, 2744, 295, 318, 17, 51620, 51620, 293, 1176, 17, 11, 293, 264, 2744, 295, 318, 18, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13442998462253147, "compression_ratio": 1.8, "no_speech_prob": 2.62704306805972e-05}, {"id": 1096, "seek": 311656, "start": 3141.68, "end": 3145.16, "text": " and Z2, and the size of S3.", "tokens": [50364, 407, 294, 341, 1389, 11, 300, 576, 312, 11849, 420, 370, 13, 50532, 50532, 400, 321, 434, 516, 281, 6964, 257, 1508, 13, 50612, 50612, 440, 1508, 307, 516, 281, 6964, 257, 18161, 2533, 11, 50702, 50702, 293, 300, 311, 1238, 709, 439, 321, 643, 281, 360, 510, 13, 50822, 50822, 407, 321, 6964, 527, 3209, 9482, 13, 50910, 50910, 467, 311, 257, 1422, 11665, 295, 1734, 1807, 31890, 44, 378, 2271, 11, 50992, 50992, 597, 307, 257, 1238, 2489, 1508, 13, 51122, 51122, 467, 311, 658, 257, 47479, 510, 300, 486, 51270, 51270, 747, 264, 11602, 295, 264, 6920, 7914, 300, 321, 528, 11, 51388, 51388, 264, 2744, 295, 264, 4846, 11, 264, 2744, 295, 318, 16, 293, 1176, 16, 11, 264, 2744, 295, 318, 17, 51620, 51620, 293, 1176, 17, 11, 293, 264, 2744, 295, 318, 18, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13442998462253147, "compression_ratio": 1.8, "no_speech_prob": 2.62704306805972e-05}, {"id": 1097, "seek": 314516, "start": 3145.16, "end": 3149.7999999999997, "text": " We call the parent class initializer.", "tokens": [50364, 492, 818, 264, 2596, 1508, 5883, 6545, 13, 50596, 50596, 400, 550, 321, 445, 1884, 1045, 16679, 50712, 50712, 300, 366, 439, 8213, 16679, 13, 50800, 50800, 400, 321, 643, 281, 3531, 552, 4079, 50882, 50882, 570, 436, 362, 6920, 9834, 13, 50972, 50972, 407, 321, 434, 516, 281, 362, 1045, 24266, 294, 527, 2657, 11, 426, 15, 11, 426, 16, 11, 51110, 51110, 426, 17, 11, 10088, 1958, 11, 10088, 502, 11, 10088, 568, 13, 51302, 51302, 400, 1184, 295, 552, 307, 516, 281, 312, 364, 5197, 295, 264, 1508, 51426, 51426, 426, 45, 13, 28263, 365, 732, 11602, 11, 264, 4846, 2744, 293, 264, 5598, 2744, 13, 51642, 51642, 407, 264, 700, 10088, 575, 4846, 2744, 413, 15, 11, 5598, 2744, 413, 16, 11, 51792, 51792, 1030, 11458, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.19253167046440972, "compression_ratio": 1.7674418604651163, "no_speech_prob": 3.0240475098253228e-05}, {"id": 1098, "seek": 314516, "start": 3149.7999999999997, "end": 3152.12, "text": " And then we just create three modules", "tokens": [50364, 492, 818, 264, 2596, 1508, 5883, 6545, 13, 50596, 50596, 400, 550, 321, 445, 1884, 1045, 16679, 50712, 50712, 300, 366, 439, 8213, 16679, 13, 50800, 50800, 400, 321, 643, 281, 3531, 552, 4079, 50882, 50882, 570, 436, 362, 6920, 9834, 13, 50972, 50972, 407, 321, 434, 516, 281, 362, 1045, 24266, 294, 527, 2657, 11, 426, 15, 11, 426, 16, 11, 51110, 51110, 426, 17, 11, 10088, 1958, 11, 10088, 502, 11, 10088, 568, 13, 51302, 51302, 400, 1184, 295, 552, 307, 516, 281, 312, 364, 5197, 295, 264, 1508, 51426, 51426, 426, 45, 13, 28263, 365, 732, 11602, 11, 264, 4846, 2744, 293, 264, 5598, 2744, 13, 51642, 51642, 407, 264, 700, 10088, 575, 4846, 2744, 413, 15, 11, 5598, 2744, 413, 16, 11, 51792, 51792, 1030, 11458, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.19253167046440972, "compression_ratio": 1.7674418604651163, "no_speech_prob": 3.0240475098253228e-05}, {"id": 1099, "seek": 314516, "start": 3152.12, "end": 3153.8799999999997, "text": " that are all linear modules.", "tokens": [50364, 492, 818, 264, 2596, 1508, 5883, 6545, 13, 50596, 50596, 400, 550, 321, 445, 1884, 1045, 16679, 50712, 50712, 300, 366, 439, 8213, 16679, 13, 50800, 50800, 400, 321, 643, 281, 3531, 552, 4079, 50882, 50882, 570, 436, 362, 6920, 9834, 13, 50972, 50972, 407, 321, 434, 516, 281, 362, 1045, 24266, 294, 527, 2657, 11, 426, 15, 11, 426, 16, 11, 51110, 51110, 426, 17, 11, 10088, 1958, 11, 10088, 502, 11, 10088, 568, 13, 51302, 51302, 400, 1184, 295, 552, 307, 516, 281, 312, 364, 5197, 295, 264, 1508, 51426, 51426, 426, 45, 13, 28263, 365, 732, 11602, 11, 264, 4846, 2744, 293, 264, 5598, 2744, 13, 51642, 51642, 407, 264, 700, 10088, 575, 4846, 2744, 413, 15, 11, 5598, 2744, 413, 16, 11, 51792, 51792, 1030, 11458, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.19253167046440972, "compression_ratio": 1.7674418604651163, "no_speech_prob": 3.0240475098253228e-05}, {"id": 1100, "seek": 314516, "start": 3153.8799999999997, "end": 3155.52, "text": " And we need to store them somewhere", "tokens": [50364, 492, 818, 264, 2596, 1508, 5883, 6545, 13, 50596, 50596, 400, 550, 321, 445, 1884, 1045, 16679, 50712, 50712, 300, 366, 439, 8213, 16679, 13, 50800, 50800, 400, 321, 643, 281, 3531, 552, 4079, 50882, 50882, 570, 436, 362, 6920, 9834, 13, 50972, 50972, 407, 321, 434, 516, 281, 362, 1045, 24266, 294, 527, 2657, 11, 426, 15, 11, 426, 16, 11, 51110, 51110, 426, 17, 11, 10088, 1958, 11, 10088, 502, 11, 10088, 568, 13, 51302, 51302, 400, 1184, 295, 552, 307, 516, 281, 312, 364, 5197, 295, 264, 1508, 51426, 51426, 426, 45, 13, 28263, 365, 732, 11602, 11, 264, 4846, 2744, 293, 264, 5598, 2744, 13, 51642, 51642, 407, 264, 700, 10088, 575, 4846, 2744, 413, 15, 11, 5598, 2744, 413, 16, 11, 51792, 51792, 1030, 11458, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.19253167046440972, "compression_ratio": 1.7674418604651163, "no_speech_prob": 3.0240475098253228e-05}, {"id": 1101, "seek": 314516, "start": 3155.52, "end": 3157.3199999999997, "text": " because they have internal parameters.", "tokens": [50364, 492, 818, 264, 2596, 1508, 5883, 6545, 13, 50596, 50596, 400, 550, 321, 445, 1884, 1045, 16679, 50712, 50712, 300, 366, 439, 8213, 16679, 13, 50800, 50800, 400, 321, 643, 281, 3531, 552, 4079, 50882, 50882, 570, 436, 362, 6920, 9834, 13, 50972, 50972, 407, 321, 434, 516, 281, 362, 1045, 24266, 294, 527, 2657, 11, 426, 15, 11, 426, 16, 11, 51110, 51110, 426, 17, 11, 10088, 1958, 11, 10088, 502, 11, 10088, 568, 13, 51302, 51302, 400, 1184, 295, 552, 307, 516, 281, 312, 364, 5197, 295, 264, 1508, 51426, 51426, 426, 45, 13, 28263, 365, 732, 11602, 11, 264, 4846, 2744, 293, 264, 5598, 2744, 13, 51642, 51642, 407, 264, 700, 10088, 575, 4846, 2744, 413, 15, 11, 5598, 2744, 413, 16, 11, 51792, 51792, 1030, 11458, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.19253167046440972, "compression_ratio": 1.7674418604651163, "no_speech_prob": 3.0240475098253228e-05}, {"id": 1102, "seek": 314516, "start": 3157.3199999999997, "end": 3160.08, "text": " So we're going to have three slots in our object, N0, N1,", "tokens": [50364, 492, 818, 264, 2596, 1508, 5883, 6545, 13, 50596, 50596, 400, 550, 321, 445, 1884, 1045, 16679, 50712, 50712, 300, 366, 439, 8213, 16679, 13, 50800, 50800, 400, 321, 643, 281, 3531, 552, 4079, 50882, 50882, 570, 436, 362, 6920, 9834, 13, 50972, 50972, 407, 321, 434, 516, 281, 362, 1045, 24266, 294, 527, 2657, 11, 426, 15, 11, 426, 16, 11, 51110, 51110, 426, 17, 11, 10088, 1958, 11, 10088, 502, 11, 10088, 568, 13, 51302, 51302, 400, 1184, 295, 552, 307, 516, 281, 312, 364, 5197, 295, 264, 1508, 51426, 51426, 426, 45, 13, 28263, 365, 732, 11602, 11, 264, 4846, 2744, 293, 264, 5598, 2744, 13, 51642, 51642, 407, 264, 700, 10088, 575, 4846, 2744, 413, 15, 11, 5598, 2744, 413, 16, 11, 51792, 51792, 1030, 11458, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.19253167046440972, "compression_ratio": 1.7674418604651163, "no_speech_prob": 3.0240475098253228e-05}, {"id": 1103, "seek": 314516, "start": 3160.08, "end": 3163.92, "text": " N2, module 0, module 1, module 2.", "tokens": [50364, 492, 818, 264, 2596, 1508, 5883, 6545, 13, 50596, 50596, 400, 550, 321, 445, 1884, 1045, 16679, 50712, 50712, 300, 366, 439, 8213, 16679, 13, 50800, 50800, 400, 321, 643, 281, 3531, 552, 4079, 50882, 50882, 570, 436, 362, 6920, 9834, 13, 50972, 50972, 407, 321, 434, 516, 281, 362, 1045, 24266, 294, 527, 2657, 11, 426, 15, 11, 426, 16, 11, 51110, 51110, 426, 17, 11, 10088, 1958, 11, 10088, 502, 11, 10088, 568, 13, 51302, 51302, 400, 1184, 295, 552, 307, 516, 281, 312, 364, 5197, 295, 264, 1508, 51426, 51426, 426, 45, 13, 28263, 365, 732, 11602, 11, 264, 4846, 2744, 293, 264, 5598, 2744, 13, 51642, 51642, 407, 264, 700, 10088, 575, 4846, 2744, 413, 15, 11, 5598, 2744, 413, 16, 11, 51792, 51792, 1030, 11458, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.19253167046440972, "compression_ratio": 1.7674418604651163, "no_speech_prob": 3.0240475098253228e-05}, {"id": 1104, "seek": 314516, "start": 3163.92, "end": 3166.3999999999996, "text": " And each of them is going to be an instance of the class", "tokens": [50364, 492, 818, 264, 2596, 1508, 5883, 6545, 13, 50596, 50596, 400, 550, 321, 445, 1884, 1045, 16679, 50712, 50712, 300, 366, 439, 8213, 16679, 13, 50800, 50800, 400, 321, 643, 281, 3531, 552, 4079, 50882, 50882, 570, 436, 362, 6920, 9834, 13, 50972, 50972, 407, 321, 434, 516, 281, 362, 1045, 24266, 294, 527, 2657, 11, 426, 15, 11, 426, 16, 11, 51110, 51110, 426, 17, 11, 10088, 1958, 11, 10088, 502, 11, 10088, 568, 13, 51302, 51302, 400, 1184, 295, 552, 307, 516, 281, 312, 364, 5197, 295, 264, 1508, 51426, 51426, 426, 45, 13, 28263, 365, 732, 11602, 11, 264, 4846, 2744, 293, 264, 5598, 2744, 13, 51642, 51642, 407, 264, 700, 10088, 575, 4846, 2744, 413, 15, 11, 5598, 2744, 413, 16, 11, 51792, 51792, 1030, 11458, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.19253167046440972, "compression_ratio": 1.7674418604651163, "no_speech_prob": 3.0240475098253228e-05}, {"id": 1105, "seek": 314516, "start": 3166.3999999999996, "end": 3170.72, "text": " NN.linear with two sizes, the input size and the output size.", "tokens": [50364, 492, 818, 264, 2596, 1508, 5883, 6545, 13, 50596, 50596, 400, 550, 321, 445, 1884, 1045, 16679, 50712, 50712, 300, 366, 439, 8213, 16679, 13, 50800, 50800, 400, 321, 643, 281, 3531, 552, 4079, 50882, 50882, 570, 436, 362, 6920, 9834, 13, 50972, 50972, 407, 321, 434, 516, 281, 362, 1045, 24266, 294, 527, 2657, 11, 426, 15, 11, 426, 16, 11, 51110, 51110, 426, 17, 11, 10088, 1958, 11, 10088, 502, 11, 10088, 568, 13, 51302, 51302, 400, 1184, 295, 552, 307, 516, 281, 312, 364, 5197, 295, 264, 1508, 51426, 51426, 426, 45, 13, 28263, 365, 732, 11602, 11, 264, 4846, 2744, 293, 264, 5598, 2744, 13, 51642, 51642, 407, 264, 700, 10088, 575, 4846, 2744, 413, 15, 11, 5598, 2744, 413, 16, 11, 51792, 51792, 1030, 11458, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.19253167046440972, "compression_ratio": 1.7674418604651163, "no_speech_prob": 3.0240475098253228e-05}, {"id": 1106, "seek": 314516, "start": 3170.72, "end": 3173.72, "text": " So the first module has input size D0, output size D1,", "tokens": [50364, 492, 818, 264, 2596, 1508, 5883, 6545, 13, 50596, 50596, 400, 550, 321, 445, 1884, 1045, 16679, 50712, 50712, 300, 366, 439, 8213, 16679, 13, 50800, 50800, 400, 321, 643, 281, 3531, 552, 4079, 50882, 50882, 570, 436, 362, 6920, 9834, 13, 50972, 50972, 407, 321, 434, 516, 281, 362, 1045, 24266, 294, 527, 2657, 11, 426, 15, 11, 426, 16, 11, 51110, 51110, 426, 17, 11, 10088, 1958, 11, 10088, 502, 11, 10088, 568, 13, 51302, 51302, 400, 1184, 295, 552, 307, 516, 281, 312, 364, 5197, 295, 264, 1508, 51426, 51426, 426, 45, 13, 28263, 365, 732, 11602, 11, 264, 4846, 2744, 293, 264, 5598, 2744, 13, 51642, 51642, 407, 264, 700, 10088, 575, 4846, 2744, 413, 15, 11, 5598, 2744, 413, 16, 11, 51792, 51792, 1030, 11458, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.19253167046440972, "compression_ratio": 1.7674418604651163, "no_speech_prob": 3.0240475098253228e-05}, {"id": 1107, "seek": 314516, "start": 3173.72, "end": 3174.8799999999997, "text": " et cetera.", "tokens": [50364, 492, 818, 264, 2596, 1508, 5883, 6545, 13, 50596, 50596, 400, 550, 321, 445, 1884, 1045, 16679, 50712, 50712, 300, 366, 439, 8213, 16679, 13, 50800, 50800, 400, 321, 643, 281, 3531, 552, 4079, 50882, 50882, 570, 436, 362, 6920, 9834, 13, 50972, 50972, 407, 321, 434, 516, 281, 362, 1045, 24266, 294, 527, 2657, 11, 426, 15, 11, 426, 16, 11, 51110, 51110, 426, 17, 11, 10088, 1958, 11, 10088, 502, 11, 10088, 568, 13, 51302, 51302, 400, 1184, 295, 552, 307, 516, 281, 312, 364, 5197, 295, 264, 1508, 51426, 51426, 426, 45, 13, 28263, 365, 732, 11602, 11, 264, 4846, 2744, 293, 264, 5598, 2744, 13, 51642, 51642, 407, 264, 700, 10088, 575, 4846, 2744, 413, 15, 11, 5598, 2744, 413, 16, 11, 51792, 51792, 1030, 11458, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.19253167046440972, "compression_ratio": 1.7674418604651163, "no_speech_prob": 3.0240475098253228e-05}, {"id": 1108, "seek": 317488, "start": 3174.88, "end": 3177.56, "text": " And those classes are, since there is a capital L,", "tokens": [50364, 400, 729, 5359, 366, 11, 1670, 456, 307, 257, 4238, 441, 11, 50498, 50498, 1355, 309, 311, 364, 2657, 13, 50608, 50608, 400, 1854, 456, 366, 9834, 1854, 300, 3174, 456, 13, 50768, 50768, 1779, 13, 50893, 50893, 1779, 11, 370, 337, 1365, 11, 264, 1039, 84, 1177, 380, 362, 257, 4238, 51004, 51004, 570, 309, 1177, 380, 362, 6920, 9834, 13, 51078, 51078, 467, 311, 406, 257, 3847, 712, 10088, 13, 51154, 51154, 467, 311, 445, 257, 2445, 13, 51242, 51242, 13813, 729, 721, 365, 1410, 11118, 11, 51330, 51330, 436, 362, 6920, 9834, 11, 264, 3364, 32284, 51468, 51468, 1854, 295, 552, 13, 51616, 51616, 407, 586, 321, 6964, 257, 2128, 2445, 11, 51698, 51698, 597, 1936, 715, 1819, 264, 5598, 490, 264, 4846, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1748563751919579, "compression_ratio": 1.8037735849056604, "no_speech_prob": 4.678924597101286e-05}, {"id": 1109, "seek": 317488, "start": 3177.56, "end": 3179.76, "text": " means it's an object.", "tokens": [50364, 400, 729, 5359, 366, 11, 1670, 456, 307, 257, 4238, 441, 11, 50498, 50498, 1355, 309, 311, 364, 2657, 13, 50608, 50608, 400, 1854, 456, 366, 9834, 1854, 300, 3174, 456, 13, 50768, 50768, 1779, 13, 50893, 50893, 1779, 11, 370, 337, 1365, 11, 264, 1039, 84, 1177, 380, 362, 257, 4238, 51004, 51004, 570, 309, 1177, 380, 362, 6920, 9834, 13, 51078, 51078, 467, 311, 406, 257, 3847, 712, 10088, 13, 51154, 51154, 467, 311, 445, 257, 2445, 13, 51242, 51242, 13813, 729, 721, 365, 1410, 11118, 11, 51330, 51330, 436, 362, 6920, 9834, 11, 264, 3364, 32284, 51468, 51468, 1854, 295, 552, 13, 51616, 51616, 407, 586, 321, 6964, 257, 2128, 2445, 11, 51698, 51698, 597, 1936, 715, 1819, 264, 5598, 490, 264, 4846, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1748563751919579, "compression_ratio": 1.8037735849056604, "no_speech_prob": 4.678924597101286e-05}, {"id": 1110, "seek": 317488, "start": 3179.76, "end": 3182.96, "text": " And inside there are parameters inside that item there.", "tokens": [50364, 400, 729, 5359, 366, 11, 1670, 456, 307, 257, 4238, 441, 11, 50498, 50498, 1355, 309, 311, 364, 2657, 13, 50608, 50608, 400, 1854, 456, 366, 9834, 1854, 300, 3174, 456, 13, 50768, 50768, 1779, 13, 50893, 50893, 1779, 11, 370, 337, 1365, 11, 264, 1039, 84, 1177, 380, 362, 257, 4238, 51004, 51004, 570, 309, 1177, 380, 362, 6920, 9834, 13, 51078, 51078, 467, 311, 406, 257, 3847, 712, 10088, 13, 51154, 51154, 467, 311, 445, 257, 2445, 13, 51242, 51242, 13813, 729, 721, 365, 1410, 11118, 11, 51330, 51330, 436, 362, 6920, 9834, 11, 264, 3364, 32284, 51468, 51468, 1854, 295, 552, 13, 51616, 51616, 407, 586, 321, 6964, 257, 2128, 2445, 11, 51698, 51698, 597, 1936, 715, 1819, 264, 5598, 490, 264, 4846, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1748563751919579, "compression_ratio": 1.8037735849056604, "no_speech_prob": 4.678924597101286e-05}, {"id": 1111, "seek": 317488, "start": 3182.96, "end": 3185.46, "text": " Right.", "tokens": [50364, 400, 729, 5359, 366, 11, 1670, 456, 307, 257, 4238, 441, 11, 50498, 50498, 1355, 309, 311, 364, 2657, 13, 50608, 50608, 400, 1854, 456, 366, 9834, 1854, 300, 3174, 456, 13, 50768, 50768, 1779, 13, 50893, 50893, 1779, 11, 370, 337, 1365, 11, 264, 1039, 84, 1177, 380, 362, 257, 4238, 51004, 51004, 570, 309, 1177, 380, 362, 6920, 9834, 13, 51078, 51078, 467, 311, 406, 257, 3847, 712, 10088, 13, 51154, 51154, 467, 311, 445, 257, 2445, 13, 51242, 51242, 13813, 729, 721, 365, 1410, 11118, 11, 51330, 51330, 436, 362, 6920, 9834, 11, 264, 3364, 32284, 51468, 51468, 1854, 295, 552, 13, 51616, 51616, 407, 586, 321, 6964, 257, 2128, 2445, 11, 51698, 51698, 597, 1936, 715, 1819, 264, 5598, 490, 264, 4846, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1748563751919579, "compression_ratio": 1.8037735849056604, "no_speech_prob": 4.678924597101286e-05}, {"id": 1112, "seek": 317488, "start": 3185.46, "end": 3187.6800000000003, "text": " Right, so for example, the relu doesn't have a capital", "tokens": [50364, 400, 729, 5359, 366, 11, 1670, 456, 307, 257, 4238, 441, 11, 50498, 50498, 1355, 309, 311, 364, 2657, 13, 50608, 50608, 400, 1854, 456, 366, 9834, 1854, 300, 3174, 456, 13, 50768, 50768, 1779, 13, 50893, 50893, 1779, 11, 370, 337, 1365, 11, 264, 1039, 84, 1177, 380, 362, 257, 4238, 51004, 51004, 570, 309, 1177, 380, 362, 6920, 9834, 13, 51078, 51078, 467, 311, 406, 257, 3847, 712, 10088, 13, 51154, 51154, 467, 311, 445, 257, 2445, 13, 51242, 51242, 13813, 729, 721, 365, 1410, 11118, 11, 51330, 51330, 436, 362, 6920, 9834, 11, 264, 3364, 32284, 51468, 51468, 1854, 295, 552, 13, 51616, 51616, 407, 586, 321, 6964, 257, 2128, 2445, 11, 51698, 51698, 597, 1936, 715, 1819, 264, 5598, 490, 264, 4846, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1748563751919579, "compression_ratio": 1.8037735849056604, "no_speech_prob": 4.678924597101286e-05}, {"id": 1113, "seek": 317488, "start": 3187.6800000000003, "end": 3189.1600000000003, "text": " because it doesn't have internal parameters.", "tokens": [50364, 400, 729, 5359, 366, 11, 1670, 456, 307, 257, 4238, 441, 11, 50498, 50498, 1355, 309, 311, 364, 2657, 13, 50608, 50608, 400, 1854, 456, 366, 9834, 1854, 300, 3174, 456, 13, 50768, 50768, 1779, 13, 50893, 50893, 1779, 11, 370, 337, 1365, 11, 264, 1039, 84, 1177, 380, 362, 257, 4238, 51004, 51004, 570, 309, 1177, 380, 362, 6920, 9834, 13, 51078, 51078, 467, 311, 406, 257, 3847, 712, 10088, 13, 51154, 51154, 467, 311, 445, 257, 2445, 13, 51242, 51242, 13813, 729, 721, 365, 1410, 11118, 11, 51330, 51330, 436, 362, 6920, 9834, 11, 264, 3364, 32284, 51468, 51468, 1854, 295, 552, 13, 51616, 51616, 407, 586, 321, 6964, 257, 2128, 2445, 11, 51698, 51698, 597, 1936, 715, 1819, 264, 5598, 490, 264, 4846, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1748563751919579, "compression_ratio": 1.8037735849056604, "no_speech_prob": 4.678924597101286e-05}, {"id": 1114, "seek": 317488, "start": 3189.1600000000003, "end": 3190.6800000000003, "text": " It's not a trainable module.", "tokens": [50364, 400, 729, 5359, 366, 11, 1670, 456, 307, 257, 4238, 441, 11, 50498, 50498, 1355, 309, 311, 364, 2657, 13, 50608, 50608, 400, 1854, 456, 366, 9834, 1854, 300, 3174, 456, 13, 50768, 50768, 1779, 13, 50893, 50893, 1779, 11, 370, 337, 1365, 11, 264, 1039, 84, 1177, 380, 362, 257, 4238, 51004, 51004, 570, 309, 1177, 380, 362, 6920, 9834, 13, 51078, 51078, 467, 311, 406, 257, 3847, 712, 10088, 13, 51154, 51154, 467, 311, 445, 257, 2445, 13, 51242, 51242, 13813, 729, 721, 365, 1410, 11118, 11, 51330, 51330, 436, 362, 6920, 9834, 11, 264, 3364, 32284, 51468, 51468, 1854, 295, 552, 13, 51616, 51616, 407, 586, 321, 6964, 257, 2128, 2445, 11, 51698, 51698, 597, 1936, 715, 1819, 264, 5598, 490, 264, 4846, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1748563751919579, "compression_ratio": 1.8037735849056604, "no_speech_prob": 4.678924597101286e-05}, {"id": 1115, "seek": 317488, "start": 3190.6800000000003, "end": 3192.44, "text": " It's just a function.", "tokens": [50364, 400, 729, 5359, 366, 11, 1670, 456, 307, 257, 4238, 441, 11, 50498, 50498, 1355, 309, 311, 364, 2657, 13, 50608, 50608, 400, 1854, 456, 366, 9834, 1854, 300, 3174, 456, 13, 50768, 50768, 1779, 13, 50893, 50893, 1779, 11, 370, 337, 1365, 11, 264, 1039, 84, 1177, 380, 362, 257, 4238, 51004, 51004, 570, 309, 1177, 380, 362, 6920, 9834, 13, 51078, 51078, 467, 311, 406, 257, 3847, 712, 10088, 13, 51154, 51154, 467, 311, 445, 257, 2445, 13, 51242, 51242, 13813, 729, 721, 365, 1410, 11118, 11, 51330, 51330, 436, 362, 6920, 9834, 11, 264, 3364, 32284, 51468, 51468, 1854, 295, 552, 13, 51616, 51616, 407, 586, 321, 6964, 257, 2128, 2445, 11, 51698, 51698, 597, 1936, 715, 1819, 264, 5598, 490, 264, 4846, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1748563751919579, "compression_ratio": 1.8037735849056604, "no_speech_prob": 4.678924597101286e-05}, {"id": 1116, "seek": 317488, "start": 3192.44, "end": 3194.2000000000003, "text": " Whereas those things with capitals,", "tokens": [50364, 400, 729, 5359, 366, 11, 1670, 456, 307, 257, 4238, 441, 11, 50498, 50498, 1355, 309, 311, 364, 2657, 13, 50608, 50608, 400, 1854, 456, 366, 9834, 1854, 300, 3174, 456, 13, 50768, 50768, 1779, 13, 50893, 50893, 1779, 11, 370, 337, 1365, 11, 264, 1039, 84, 1177, 380, 362, 257, 4238, 51004, 51004, 570, 309, 1177, 380, 362, 6920, 9834, 13, 51078, 51078, 467, 311, 406, 257, 3847, 712, 10088, 13, 51154, 51154, 467, 311, 445, 257, 2445, 13, 51242, 51242, 13813, 729, 721, 365, 1410, 11118, 11, 51330, 51330, 436, 362, 6920, 9834, 11, 264, 3364, 32284, 51468, 51468, 1854, 295, 552, 13, 51616, 51616, 407, 586, 321, 6964, 257, 2128, 2445, 11, 51698, 51698, 597, 1936, 715, 1819, 264, 5598, 490, 264, 4846, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1748563751919579, "compression_ratio": 1.8037735849056604, "no_speech_prob": 4.678924597101286e-05}, {"id": 1117, "seek": 317488, "start": 3194.2000000000003, "end": 3196.96, "text": " they have internal parameters, the weight matrices", "tokens": [50364, 400, 729, 5359, 366, 11, 1670, 456, 307, 257, 4238, 441, 11, 50498, 50498, 1355, 309, 311, 364, 2657, 13, 50608, 50608, 400, 1854, 456, 366, 9834, 1854, 300, 3174, 456, 13, 50768, 50768, 1779, 13, 50893, 50893, 1779, 11, 370, 337, 1365, 11, 264, 1039, 84, 1177, 380, 362, 257, 4238, 51004, 51004, 570, 309, 1177, 380, 362, 6920, 9834, 13, 51078, 51078, 467, 311, 406, 257, 3847, 712, 10088, 13, 51154, 51154, 467, 311, 445, 257, 2445, 13, 51242, 51242, 13813, 729, 721, 365, 1410, 11118, 11, 51330, 51330, 436, 362, 6920, 9834, 11, 264, 3364, 32284, 51468, 51468, 1854, 295, 552, 13, 51616, 51616, 407, 586, 321, 6964, 257, 2128, 2445, 11, 51698, 51698, 597, 1936, 715, 1819, 264, 5598, 490, 264, 4846, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1748563751919579, "compression_ratio": 1.8037735849056604, "no_speech_prob": 4.678924597101286e-05}, {"id": 1118, "seek": 317488, "start": 3196.96, "end": 3199.92, "text": " inside of them.", "tokens": [50364, 400, 729, 5359, 366, 11, 1670, 456, 307, 257, 4238, 441, 11, 50498, 50498, 1355, 309, 311, 364, 2657, 13, 50608, 50608, 400, 1854, 456, 366, 9834, 1854, 300, 3174, 456, 13, 50768, 50768, 1779, 13, 50893, 50893, 1779, 11, 370, 337, 1365, 11, 264, 1039, 84, 1177, 380, 362, 257, 4238, 51004, 51004, 570, 309, 1177, 380, 362, 6920, 9834, 13, 51078, 51078, 467, 311, 406, 257, 3847, 712, 10088, 13, 51154, 51154, 467, 311, 445, 257, 2445, 13, 51242, 51242, 13813, 729, 721, 365, 1410, 11118, 11, 51330, 51330, 436, 362, 6920, 9834, 11, 264, 3364, 32284, 51468, 51468, 1854, 295, 552, 13, 51616, 51616, 407, 586, 321, 6964, 257, 2128, 2445, 11, 51698, 51698, 597, 1936, 715, 1819, 264, 5598, 490, 264, 4846, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1748563751919579, "compression_ratio": 1.8037735849056604, "no_speech_prob": 4.678924597101286e-05}, {"id": 1119, "seek": 317488, "start": 3199.92, "end": 3201.56, "text": " So now we define a forward function,", "tokens": [50364, 400, 729, 5359, 366, 11, 1670, 456, 307, 257, 4238, 441, 11, 50498, 50498, 1355, 309, 311, 364, 2657, 13, 50608, 50608, 400, 1854, 456, 366, 9834, 1854, 300, 3174, 456, 13, 50768, 50768, 1779, 13, 50893, 50893, 1779, 11, 370, 337, 1365, 11, 264, 1039, 84, 1177, 380, 362, 257, 4238, 51004, 51004, 570, 309, 1177, 380, 362, 6920, 9834, 13, 51078, 51078, 467, 311, 406, 257, 3847, 712, 10088, 13, 51154, 51154, 467, 311, 445, 257, 2445, 13, 51242, 51242, 13813, 729, 721, 365, 1410, 11118, 11, 51330, 51330, 436, 362, 6920, 9834, 11, 264, 3364, 32284, 51468, 51468, 1854, 295, 552, 13, 51616, 51616, 407, 586, 321, 6964, 257, 2128, 2445, 11, 51698, 51698, 597, 1936, 715, 1819, 264, 5598, 490, 264, 4846, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1748563751919579, "compression_ratio": 1.8037735849056604, "no_speech_prob": 4.678924597101286e-05}, {"id": 1120, "seek": 317488, "start": 3201.56, "end": 3204.6400000000003, "text": " which basically computes the output from the input.", "tokens": [50364, 400, 729, 5359, 366, 11, 1670, 456, 307, 257, 4238, 441, 11, 50498, 50498, 1355, 309, 311, 364, 2657, 13, 50608, 50608, 400, 1854, 456, 366, 9834, 1854, 300, 3174, 456, 13, 50768, 50768, 1779, 13, 50893, 50893, 1779, 11, 370, 337, 1365, 11, 264, 1039, 84, 1177, 380, 362, 257, 4238, 51004, 51004, 570, 309, 1177, 380, 362, 6920, 9834, 13, 51078, 51078, 467, 311, 406, 257, 3847, 712, 10088, 13, 51154, 51154, 467, 311, 445, 257, 2445, 13, 51242, 51242, 13813, 729, 721, 365, 1410, 11118, 11, 51330, 51330, 436, 362, 6920, 9834, 11, 264, 3364, 32284, 51468, 51468, 1854, 295, 552, 13, 51616, 51616, 407, 586, 321, 6964, 257, 2128, 2445, 11, 51698, 51698, 597, 1936, 715, 1819, 264, 5598, 490, 264, 4846, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.1748563751919579, "compression_ratio": 1.8037735849056604, "no_speech_prob": 4.678924597101286e-05}, {"id": 1121, "seek": 320464, "start": 3204.64, "end": 3209.68, "text": " And the first thing we do is we take the input thing, which", "tokens": [50364, 400, 264, 700, 551, 321, 360, 307, 321, 747, 264, 4846, 551, 11, 597, 50616, 50616, 815, 312, 257, 2120, 327, 332, 11075, 10225, 11, 293, 321, 24183, 309, 13, 50738, 50738, 492, 24183, 309, 1228, 341, 18014, 13143, 6114, 510, 50996, 50996, 294, 9953, 51, 284, 339, 13, 51136, 51136, 400, 550, 321, 3079, 264, 700, 10088, 281, 2031, 13, 51262, 51262, 492, 829, 264, 1874, 294, 262, 16, 11, 597, 307, 257, 13413, 7006, 11, 51558, 51558, 2654, 7006, 13, 51590, 51590, 1396, 321, 3079, 264, 1039, 84, 281, 262, 16, 11, 829, 264, 1874, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15079254679160542, "compression_ratio": 1.711340206185567, "no_speech_prob": 6.747592578904005e-06}, {"id": 1122, "seek": 320464, "start": 3209.68, "end": 3212.12, "text": " may be a multidimensional array, and we flatten it.", "tokens": [50364, 400, 264, 700, 551, 321, 360, 307, 321, 747, 264, 4846, 551, 11, 597, 50616, 50616, 815, 312, 257, 2120, 327, 332, 11075, 10225, 11, 293, 321, 24183, 309, 13, 50738, 50738, 492, 24183, 309, 1228, 341, 18014, 13143, 6114, 510, 50996, 50996, 294, 9953, 51, 284, 339, 13, 51136, 51136, 400, 550, 321, 3079, 264, 700, 10088, 281, 2031, 13, 51262, 51262, 492, 829, 264, 1874, 294, 262, 16, 11, 597, 307, 257, 13413, 7006, 11, 51558, 51558, 2654, 7006, 13, 51590, 51590, 1396, 321, 3079, 264, 1039, 84, 281, 262, 16, 11, 829, 264, 1874, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15079254679160542, "compression_ratio": 1.711340206185567, "no_speech_prob": 6.747592578904005e-06}, {"id": 1123, "seek": 320464, "start": 3212.12, "end": 3217.2799999999997, "text": " We flatten it using this idiomatic expression here", "tokens": [50364, 400, 264, 700, 551, 321, 360, 307, 321, 747, 264, 4846, 551, 11, 597, 50616, 50616, 815, 312, 257, 2120, 327, 332, 11075, 10225, 11, 293, 321, 24183, 309, 13, 50738, 50738, 492, 24183, 309, 1228, 341, 18014, 13143, 6114, 510, 50996, 50996, 294, 9953, 51, 284, 339, 13, 51136, 51136, 400, 550, 321, 3079, 264, 700, 10088, 281, 2031, 13, 51262, 51262, 492, 829, 264, 1874, 294, 262, 16, 11, 597, 307, 257, 13413, 7006, 11, 51558, 51558, 2654, 7006, 13, 51590, 51590, 1396, 321, 3079, 264, 1039, 84, 281, 262, 16, 11, 829, 264, 1874, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15079254679160542, "compression_ratio": 1.711340206185567, "no_speech_prob": 6.747592578904005e-06}, {"id": 1124, "seek": 320464, "start": 3217.2799999999997, "end": 3220.08, "text": " in PyTorch.", "tokens": [50364, 400, 264, 700, 551, 321, 360, 307, 321, 747, 264, 4846, 551, 11, 597, 50616, 50616, 815, 312, 257, 2120, 327, 332, 11075, 10225, 11, 293, 321, 24183, 309, 13, 50738, 50738, 492, 24183, 309, 1228, 341, 18014, 13143, 6114, 510, 50996, 50996, 294, 9953, 51, 284, 339, 13, 51136, 51136, 400, 550, 321, 3079, 264, 700, 10088, 281, 2031, 13, 51262, 51262, 492, 829, 264, 1874, 294, 262, 16, 11, 597, 307, 257, 13413, 7006, 11, 51558, 51558, 2654, 7006, 13, 51590, 51590, 1396, 321, 3079, 264, 1039, 84, 281, 262, 16, 11, 829, 264, 1874, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15079254679160542, "compression_ratio": 1.711340206185567, "no_speech_prob": 6.747592578904005e-06}, {"id": 1125, "seek": 320464, "start": 3220.08, "end": 3222.6, "text": " And then we apply the first module to x.", "tokens": [50364, 400, 264, 700, 551, 321, 360, 307, 321, 747, 264, 4846, 551, 11, 597, 50616, 50616, 815, 312, 257, 2120, 327, 332, 11075, 10225, 11, 293, 321, 24183, 309, 13, 50738, 50738, 492, 24183, 309, 1228, 341, 18014, 13143, 6114, 510, 50996, 50996, 294, 9953, 51, 284, 339, 13, 51136, 51136, 400, 550, 321, 3079, 264, 700, 10088, 281, 2031, 13, 51262, 51262, 492, 829, 264, 1874, 294, 262, 16, 11, 597, 307, 257, 13413, 7006, 11, 51558, 51558, 2654, 7006, 13, 51590, 51590, 1396, 321, 3079, 264, 1039, 84, 281, 262, 16, 11, 829, 264, 1874, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15079254679160542, "compression_ratio": 1.711340206185567, "no_speech_prob": 6.747592578904005e-06}, {"id": 1126, "seek": 320464, "start": 3222.6, "end": 3228.52, "text": " We put the result in s1, which is a temporary variable,", "tokens": [50364, 400, 264, 700, 551, 321, 360, 307, 321, 747, 264, 4846, 551, 11, 597, 50616, 50616, 815, 312, 257, 2120, 327, 332, 11075, 10225, 11, 293, 321, 24183, 309, 13, 50738, 50738, 492, 24183, 309, 1228, 341, 18014, 13143, 6114, 510, 50996, 50996, 294, 9953, 51, 284, 339, 13, 51136, 51136, 400, 550, 321, 3079, 264, 700, 10088, 281, 2031, 13, 51262, 51262, 492, 829, 264, 1874, 294, 262, 16, 11, 597, 307, 257, 13413, 7006, 11, 51558, 51558, 2654, 7006, 13, 51590, 51590, 1396, 321, 3079, 264, 1039, 84, 281, 262, 16, 11, 829, 264, 1874, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15079254679160542, "compression_ratio": 1.711340206185567, "no_speech_prob": 6.747592578904005e-06}, {"id": 1127, "seek": 320464, "start": 3228.52, "end": 3229.16, "text": " local variable.", "tokens": [50364, 400, 264, 700, 551, 321, 360, 307, 321, 747, 264, 4846, 551, 11, 597, 50616, 50616, 815, 312, 257, 2120, 327, 332, 11075, 10225, 11, 293, 321, 24183, 309, 13, 50738, 50738, 492, 24183, 309, 1228, 341, 18014, 13143, 6114, 510, 50996, 50996, 294, 9953, 51, 284, 339, 13, 51136, 51136, 400, 550, 321, 3079, 264, 700, 10088, 281, 2031, 13, 51262, 51262, 492, 829, 264, 1874, 294, 262, 16, 11, 597, 307, 257, 13413, 7006, 11, 51558, 51558, 2654, 7006, 13, 51590, 51590, 1396, 321, 3079, 264, 1039, 84, 281, 262, 16, 11, 829, 264, 1874, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15079254679160542, "compression_ratio": 1.711340206185567, "no_speech_prob": 6.747592578904005e-06}, {"id": 1128, "seek": 320464, "start": 3229.16, "end": 3234.6, "text": " Then we apply the relu to s1, put the result", "tokens": [50364, 400, 264, 700, 551, 321, 360, 307, 321, 747, 264, 4846, 551, 11, 597, 50616, 50616, 815, 312, 257, 2120, 327, 332, 11075, 10225, 11, 293, 321, 24183, 309, 13, 50738, 50738, 492, 24183, 309, 1228, 341, 18014, 13143, 6114, 510, 50996, 50996, 294, 9953, 51, 284, 339, 13, 51136, 51136, 400, 550, 321, 3079, 264, 700, 10088, 281, 2031, 13, 51262, 51262, 492, 829, 264, 1874, 294, 262, 16, 11, 597, 307, 257, 13413, 7006, 11, 51558, 51558, 2654, 7006, 13, 51590, 51590, 1396, 321, 3079, 264, 1039, 84, 281, 262, 16, 11, 829, 264, 1874, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15079254679160542, "compression_ratio": 1.711340206185567, "no_speech_prob": 6.747592578904005e-06}, {"id": 1129, "seek": 323460, "start": 3234.6, "end": 3238.7599999999998, "text": " in z, then apply the second layer, put the result in s2.", "tokens": [50364, 294, 710, 11, 550, 3079, 264, 1150, 4583, 11, 829, 264, 1874, 294, 262, 17, 13, 50572, 50572, 25264, 264, 1039, 84, 797, 11, 829, 264, 1874, 294, 262, 18, 11, 50668, 50668, 293, 550, 264, 1036, 8213, 4583, 11, 829, 264, 1874, 294, 262, 18, 11, 50792, 50792, 293, 2736, 262, 18, 13, 50860, 50860, 400, 456, 307, 257, 2125, 78, 13, 50906, 50906, 407, 264, 1150, 1622, 820, 362, 668, 262, 16, 13, 51026, 51026, 467, 311, 264, 2698, 13, 76, 15, 295, 710, 15, 11, 558, 30, 51188, 51188, 583, 710, 15, 510, 13, 51354, 51354, 1079, 11, 3006, 13, 51400, 51400, 865, 11, 1338, 11, 1338, 13, 51474, 51474, 286, 458, 13, 51608, 51608, 865, 11, 341, 307, 746, 300, 390, 516, 281, 312, 6806, 11, 558, 30, 51808, 51808, 3013, 286, 994, 380, 3191, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.244100464714898, "compression_ratio": 1.7544642857142858, "no_speech_prob": 0.0001627717720111832}, {"id": 1130, "seek": 323460, "start": 3238.7599999999998, "end": 3240.68, "text": " Apply the relu again, put the result in s3,", "tokens": [50364, 294, 710, 11, 550, 3079, 264, 1150, 4583, 11, 829, 264, 1874, 294, 262, 17, 13, 50572, 50572, 25264, 264, 1039, 84, 797, 11, 829, 264, 1874, 294, 262, 18, 11, 50668, 50668, 293, 550, 264, 1036, 8213, 4583, 11, 829, 264, 1874, 294, 262, 18, 11, 50792, 50792, 293, 2736, 262, 18, 13, 50860, 50860, 400, 456, 307, 257, 2125, 78, 13, 50906, 50906, 407, 264, 1150, 1622, 820, 362, 668, 262, 16, 13, 51026, 51026, 467, 311, 264, 2698, 13, 76, 15, 295, 710, 15, 11, 558, 30, 51188, 51188, 583, 710, 15, 510, 13, 51354, 51354, 1079, 11, 3006, 13, 51400, 51400, 865, 11, 1338, 11, 1338, 13, 51474, 51474, 286, 458, 13, 51608, 51608, 865, 11, 341, 307, 746, 300, 390, 516, 281, 312, 6806, 11, 558, 30, 51808, 51808, 3013, 286, 994, 380, 3191, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.244100464714898, "compression_ratio": 1.7544642857142858, "no_speech_prob": 0.0001627717720111832}, {"id": 1131, "seek": 323460, "start": 3240.68, "end": 3243.16, "text": " and then the last linear layer, put the result in s3,", "tokens": [50364, 294, 710, 11, 550, 3079, 264, 1150, 4583, 11, 829, 264, 1874, 294, 262, 17, 13, 50572, 50572, 25264, 264, 1039, 84, 797, 11, 829, 264, 1874, 294, 262, 18, 11, 50668, 50668, 293, 550, 264, 1036, 8213, 4583, 11, 829, 264, 1874, 294, 262, 18, 11, 50792, 50792, 293, 2736, 262, 18, 13, 50860, 50860, 400, 456, 307, 257, 2125, 78, 13, 50906, 50906, 407, 264, 1150, 1622, 820, 362, 668, 262, 16, 13, 51026, 51026, 467, 311, 264, 2698, 13, 76, 15, 295, 710, 15, 11, 558, 30, 51188, 51188, 583, 710, 15, 510, 13, 51354, 51354, 1079, 11, 3006, 13, 51400, 51400, 865, 11, 1338, 11, 1338, 13, 51474, 51474, 286, 458, 13, 51608, 51608, 865, 11, 341, 307, 746, 300, 390, 516, 281, 312, 6806, 11, 558, 30, 51808, 51808, 3013, 286, 994, 380, 3191, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.244100464714898, "compression_ratio": 1.7544642857142858, "no_speech_prob": 0.0001627717720111832}, {"id": 1132, "seek": 323460, "start": 3243.16, "end": 3244.52, "text": " and return s3.", "tokens": [50364, 294, 710, 11, 550, 3079, 264, 1150, 4583, 11, 829, 264, 1874, 294, 262, 17, 13, 50572, 50572, 25264, 264, 1039, 84, 797, 11, 829, 264, 1874, 294, 262, 18, 11, 50668, 50668, 293, 550, 264, 1036, 8213, 4583, 11, 829, 264, 1874, 294, 262, 18, 11, 50792, 50792, 293, 2736, 262, 18, 13, 50860, 50860, 400, 456, 307, 257, 2125, 78, 13, 50906, 50906, 407, 264, 1150, 1622, 820, 362, 668, 262, 16, 13, 51026, 51026, 467, 311, 264, 2698, 13, 76, 15, 295, 710, 15, 11, 558, 30, 51188, 51188, 583, 710, 15, 510, 13, 51354, 51354, 1079, 11, 3006, 13, 51400, 51400, 865, 11, 1338, 11, 1338, 13, 51474, 51474, 286, 458, 13, 51608, 51608, 865, 11, 341, 307, 746, 300, 390, 516, 281, 312, 6806, 11, 558, 30, 51808, 51808, 3013, 286, 994, 380, 3191, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.244100464714898, "compression_ratio": 1.7544642857142858, "no_speech_prob": 0.0001627717720111832}, {"id": 1133, "seek": 323460, "start": 3244.52, "end": 3245.44, "text": " And there is a typo.", "tokens": [50364, 294, 710, 11, 550, 3079, 264, 1150, 4583, 11, 829, 264, 1874, 294, 262, 17, 13, 50572, 50572, 25264, 264, 1039, 84, 797, 11, 829, 264, 1874, 294, 262, 18, 11, 50668, 50668, 293, 550, 264, 1036, 8213, 4583, 11, 829, 264, 1874, 294, 262, 18, 11, 50792, 50792, 293, 2736, 262, 18, 13, 50860, 50860, 400, 456, 307, 257, 2125, 78, 13, 50906, 50906, 407, 264, 1150, 1622, 820, 362, 668, 262, 16, 13, 51026, 51026, 467, 311, 264, 2698, 13, 76, 15, 295, 710, 15, 11, 558, 30, 51188, 51188, 583, 710, 15, 510, 13, 51354, 51354, 1079, 11, 3006, 13, 51400, 51400, 865, 11, 1338, 11, 1338, 13, 51474, 51474, 286, 458, 13, 51608, 51608, 865, 11, 341, 307, 746, 300, 390, 516, 281, 312, 6806, 11, 558, 30, 51808, 51808, 3013, 286, 994, 380, 3191, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.244100464714898, "compression_ratio": 1.7544642857142858, "no_speech_prob": 0.0001627717720111832}, {"id": 1134, "seek": 323460, "start": 3245.44, "end": 3247.8399999999997, "text": " So the second line should have been s1.", "tokens": [50364, 294, 710, 11, 550, 3079, 264, 1150, 4583, 11, 829, 264, 1874, 294, 262, 17, 13, 50572, 50572, 25264, 264, 1039, 84, 797, 11, 829, 264, 1874, 294, 262, 18, 11, 50668, 50668, 293, 550, 264, 1036, 8213, 4583, 11, 829, 264, 1874, 294, 262, 18, 11, 50792, 50792, 293, 2736, 262, 18, 13, 50860, 50860, 400, 456, 307, 257, 2125, 78, 13, 50906, 50906, 407, 264, 1150, 1622, 820, 362, 668, 262, 16, 13, 51026, 51026, 467, 311, 264, 2698, 13, 76, 15, 295, 710, 15, 11, 558, 30, 51188, 51188, 583, 710, 15, 510, 13, 51354, 51354, 1079, 11, 3006, 13, 51400, 51400, 865, 11, 1338, 11, 1338, 13, 51474, 51474, 286, 458, 13, 51608, 51608, 865, 11, 341, 307, 746, 300, 390, 516, 281, 312, 6806, 11, 558, 30, 51808, 51808, 3013, 286, 994, 380, 3191, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.244100464714898, "compression_ratio": 1.7544642857142858, "no_speech_prob": 0.0001627717720111832}, {"id": 1135, "seek": 323460, "start": 3247.8399999999997, "end": 3251.08, "text": " It's the self.m0 of z0, right?", "tokens": [50364, 294, 710, 11, 550, 3079, 264, 1150, 4583, 11, 829, 264, 1874, 294, 262, 17, 13, 50572, 50572, 25264, 264, 1039, 84, 797, 11, 829, 264, 1874, 294, 262, 18, 11, 50668, 50668, 293, 550, 264, 1036, 8213, 4583, 11, 829, 264, 1874, 294, 262, 18, 11, 50792, 50792, 293, 2736, 262, 18, 13, 50860, 50860, 400, 456, 307, 257, 2125, 78, 13, 50906, 50906, 407, 264, 1150, 1622, 820, 362, 668, 262, 16, 13, 51026, 51026, 467, 311, 264, 2698, 13, 76, 15, 295, 710, 15, 11, 558, 30, 51188, 51188, 583, 710, 15, 510, 13, 51354, 51354, 1079, 11, 3006, 13, 51400, 51400, 865, 11, 1338, 11, 1338, 13, 51474, 51474, 286, 458, 13, 51608, 51608, 865, 11, 341, 307, 746, 300, 390, 516, 281, 312, 6806, 11, 558, 30, 51808, 51808, 3013, 286, 994, 380, 3191, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.244100464714898, "compression_ratio": 1.7544642857142858, "no_speech_prob": 0.0001627717720111832}, {"id": 1136, "seek": 323460, "start": 3251.08, "end": 3254.4, "text": " But z0 here.", "tokens": [50364, 294, 710, 11, 550, 3079, 264, 1150, 4583, 11, 829, 264, 1874, 294, 262, 17, 13, 50572, 50572, 25264, 264, 1039, 84, 797, 11, 829, 264, 1874, 294, 262, 18, 11, 50668, 50668, 293, 550, 264, 1036, 8213, 4583, 11, 829, 264, 1874, 294, 262, 18, 11, 50792, 50792, 293, 2736, 262, 18, 13, 50860, 50860, 400, 456, 307, 257, 2125, 78, 13, 50906, 50906, 407, 264, 1150, 1622, 820, 362, 668, 262, 16, 13, 51026, 51026, 467, 311, 264, 2698, 13, 76, 15, 295, 710, 15, 11, 558, 30, 51188, 51188, 583, 710, 15, 510, 13, 51354, 51354, 1079, 11, 3006, 13, 51400, 51400, 865, 11, 1338, 11, 1338, 13, 51474, 51474, 286, 458, 13, 51608, 51608, 865, 11, 341, 307, 746, 300, 390, 516, 281, 312, 6806, 11, 558, 30, 51808, 51808, 3013, 286, 994, 380, 3191, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.244100464714898, "compression_ratio": 1.7544642857142858, "no_speech_prob": 0.0001627717720111832}, {"id": 1137, "seek": 323460, "start": 3254.4, "end": 3255.3199999999997, "text": " Yes, correct.", "tokens": [50364, 294, 710, 11, 550, 3079, 264, 1150, 4583, 11, 829, 264, 1874, 294, 262, 17, 13, 50572, 50572, 25264, 264, 1039, 84, 797, 11, 829, 264, 1874, 294, 262, 18, 11, 50668, 50668, 293, 550, 264, 1036, 8213, 4583, 11, 829, 264, 1874, 294, 262, 18, 11, 50792, 50792, 293, 2736, 262, 18, 13, 50860, 50860, 400, 456, 307, 257, 2125, 78, 13, 50906, 50906, 407, 264, 1150, 1622, 820, 362, 668, 262, 16, 13, 51026, 51026, 467, 311, 264, 2698, 13, 76, 15, 295, 710, 15, 11, 558, 30, 51188, 51188, 583, 710, 15, 510, 13, 51354, 51354, 1079, 11, 3006, 13, 51400, 51400, 865, 11, 1338, 11, 1338, 13, 51474, 51474, 286, 458, 13, 51608, 51608, 865, 11, 341, 307, 746, 300, 390, 516, 281, 312, 6806, 11, 558, 30, 51808, 51808, 3013, 286, 994, 380, 3191, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.244100464714898, "compression_ratio": 1.7544642857142858, "no_speech_prob": 0.0001627717720111832}, {"id": 1138, "seek": 323460, "start": 3255.3199999999997, "end": 3256.7999999999997, "text": " Yeah, yeah, yeah.", "tokens": [50364, 294, 710, 11, 550, 3079, 264, 1150, 4583, 11, 829, 264, 1874, 294, 262, 17, 13, 50572, 50572, 25264, 264, 1039, 84, 797, 11, 829, 264, 1874, 294, 262, 18, 11, 50668, 50668, 293, 550, 264, 1036, 8213, 4583, 11, 829, 264, 1874, 294, 262, 18, 11, 50792, 50792, 293, 2736, 262, 18, 13, 50860, 50860, 400, 456, 307, 257, 2125, 78, 13, 50906, 50906, 407, 264, 1150, 1622, 820, 362, 668, 262, 16, 13, 51026, 51026, 467, 311, 264, 2698, 13, 76, 15, 295, 710, 15, 11, 558, 30, 51188, 51188, 583, 710, 15, 510, 13, 51354, 51354, 1079, 11, 3006, 13, 51400, 51400, 865, 11, 1338, 11, 1338, 13, 51474, 51474, 286, 458, 13, 51608, 51608, 865, 11, 341, 307, 746, 300, 390, 516, 281, 312, 6806, 11, 558, 30, 51808, 51808, 3013, 286, 994, 380, 3191, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.244100464714898, "compression_ratio": 1.7544642857142858, "no_speech_prob": 0.0001627717720111832}, {"id": 1139, "seek": 323460, "start": 3256.7999999999997, "end": 3259.48, "text": " I know.", "tokens": [50364, 294, 710, 11, 550, 3079, 264, 1150, 4583, 11, 829, 264, 1874, 294, 262, 17, 13, 50572, 50572, 25264, 264, 1039, 84, 797, 11, 829, 264, 1874, 294, 262, 18, 11, 50668, 50668, 293, 550, 264, 1036, 8213, 4583, 11, 829, 264, 1874, 294, 262, 18, 11, 50792, 50792, 293, 2736, 262, 18, 13, 50860, 50860, 400, 456, 307, 257, 2125, 78, 13, 50906, 50906, 407, 264, 1150, 1622, 820, 362, 668, 262, 16, 13, 51026, 51026, 467, 311, 264, 2698, 13, 76, 15, 295, 710, 15, 11, 558, 30, 51188, 51188, 583, 710, 15, 510, 13, 51354, 51354, 1079, 11, 3006, 13, 51400, 51400, 865, 11, 1338, 11, 1338, 13, 51474, 51474, 286, 458, 13, 51608, 51608, 865, 11, 341, 307, 746, 300, 390, 516, 281, 312, 6806, 11, 558, 30, 51808, 51808, 3013, 286, 994, 380, 3191, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.244100464714898, "compression_ratio": 1.7544642857142858, "no_speech_prob": 0.0001627717720111832}, {"id": 1140, "seek": 323460, "start": 3259.48, "end": 3263.48, "text": " Yeah, this is something that was going to be fixed, right?", "tokens": [50364, 294, 710, 11, 550, 3079, 264, 1150, 4583, 11, 829, 264, 1874, 294, 262, 17, 13, 50572, 50572, 25264, 264, 1039, 84, 797, 11, 829, 264, 1874, 294, 262, 18, 11, 50668, 50668, 293, 550, 264, 1036, 8213, 4583, 11, 829, 264, 1874, 294, 262, 18, 11, 50792, 50792, 293, 2736, 262, 18, 13, 50860, 50860, 400, 456, 307, 257, 2125, 78, 13, 50906, 50906, 407, 264, 1150, 1622, 820, 362, 668, 262, 16, 13, 51026, 51026, 467, 311, 264, 2698, 13, 76, 15, 295, 710, 15, 11, 558, 30, 51188, 51188, 583, 710, 15, 510, 13, 51354, 51354, 1079, 11, 3006, 13, 51400, 51400, 865, 11, 1338, 11, 1338, 13, 51474, 51474, 286, 458, 13, 51608, 51608, 865, 11, 341, 307, 746, 300, 390, 516, 281, 312, 6806, 11, 558, 30, 51808, 51808, 3013, 286, 994, 380, 3191, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.244100464714898, "compression_ratio": 1.7544642857142858, "no_speech_prob": 0.0001627717720111832}, {"id": 1141, "seek": 323460, "start": 3263.48, "end": 3264.3199999999997, "text": " Which I didn't fix.", "tokens": [50364, 294, 710, 11, 550, 3079, 264, 1150, 4583, 11, 829, 264, 1874, 294, 262, 17, 13, 50572, 50572, 25264, 264, 1039, 84, 797, 11, 829, 264, 1874, 294, 262, 18, 11, 50668, 50668, 293, 550, 264, 1036, 8213, 4583, 11, 829, 264, 1874, 294, 262, 18, 11, 50792, 50792, 293, 2736, 262, 18, 13, 50860, 50860, 400, 456, 307, 257, 2125, 78, 13, 50906, 50906, 407, 264, 1150, 1622, 820, 362, 668, 262, 16, 13, 51026, 51026, 467, 311, 264, 2698, 13, 76, 15, 295, 710, 15, 11, 558, 30, 51188, 51188, 583, 710, 15, 510, 13, 51354, 51354, 1079, 11, 3006, 13, 51400, 51400, 865, 11, 1338, 11, 1338, 13, 51474, 51474, 286, 458, 13, 51608, 51608, 865, 11, 341, 307, 746, 300, 390, 516, 281, 312, 6806, 11, 558, 30, 51808, 51808, 3013, 286, 994, 380, 3191, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.244100464714898, "compression_ratio": 1.7544642857142858, "no_speech_prob": 0.0001627717720111832}, {"id": 1142, "seek": 326432, "start": 3264.32, "end": 3264.82, "text": " I know.", "tokens": [50364, 286, 458, 13, 50389, 50389, 865, 11, 341, 307, 710, 15, 13, 50480, 50480, 2561, 337, 27639, 385, 295, 341, 13, 50544, 50680, 2264, 11, 457, 291, 603, 536, 5110, 13, 50772, 50772, 286, 914, 11, 286, 603, 1391, 855, 291, 3539, 5110, 295, 341, 11, 50904, 50904, 293, 291, 603, 312, 1075, 281, 1190, 552, 1803, 13, 50998, 50998, 663, 311, 439, 291, 643, 281, 360, 13, 51062, 51062, 509, 500, 380, 643, 281, 2464, 577, 291, 14722, 264, 646, 2365, 11, 577, 51346, 51346, 291, 48256, 264, 2771, 2448, 13, 51424, 51424, 509, 727, 2464, 309, 11, 293, 309, 576, 312, 382, 2199, 382, 2128, 13, 51536, 51536, 509, 727, 2464, 257, 23897, 2445, 11, 51610, 51610, 293, 309, 576, 1936, 12972, 538, 264, 32284, 516, 51762, 51762, 12204, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.23489177928251379, "compression_ratio": 1.7790697674418605, "no_speech_prob": 6.920393207110465e-05}, {"id": 1143, "seek": 326432, "start": 3264.82, "end": 3266.6400000000003, "text": " Yeah, this is z0.", "tokens": [50364, 286, 458, 13, 50389, 50389, 865, 11, 341, 307, 710, 15, 13, 50480, 50480, 2561, 337, 27639, 385, 295, 341, 13, 50544, 50680, 2264, 11, 457, 291, 603, 536, 5110, 13, 50772, 50772, 286, 914, 11, 286, 603, 1391, 855, 291, 3539, 5110, 295, 341, 11, 50904, 50904, 293, 291, 603, 312, 1075, 281, 1190, 552, 1803, 13, 50998, 50998, 663, 311, 439, 291, 643, 281, 360, 13, 51062, 51062, 509, 500, 380, 643, 281, 2464, 577, 291, 14722, 264, 646, 2365, 11, 577, 51346, 51346, 291, 48256, 264, 2771, 2448, 13, 51424, 51424, 509, 727, 2464, 309, 11, 293, 309, 576, 312, 382, 2199, 382, 2128, 13, 51536, 51536, 509, 727, 2464, 257, 23897, 2445, 11, 51610, 51610, 293, 309, 576, 1936, 12972, 538, 264, 32284, 516, 51762, 51762, 12204, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.23489177928251379, "compression_ratio": 1.7790697674418605, "no_speech_prob": 6.920393207110465e-05}, {"id": 1144, "seek": 326432, "start": 3266.6400000000003, "end": 3267.92, "text": " Thanks for reminding me of this.", "tokens": [50364, 286, 458, 13, 50389, 50389, 865, 11, 341, 307, 710, 15, 13, 50480, 50480, 2561, 337, 27639, 385, 295, 341, 13, 50544, 50680, 2264, 11, 457, 291, 603, 536, 5110, 13, 50772, 50772, 286, 914, 11, 286, 603, 1391, 855, 291, 3539, 5110, 295, 341, 11, 50904, 50904, 293, 291, 603, 312, 1075, 281, 1190, 552, 1803, 13, 50998, 50998, 663, 311, 439, 291, 643, 281, 360, 13, 51062, 51062, 509, 500, 380, 643, 281, 2464, 577, 291, 14722, 264, 646, 2365, 11, 577, 51346, 51346, 291, 48256, 264, 2771, 2448, 13, 51424, 51424, 509, 727, 2464, 309, 11, 293, 309, 576, 312, 382, 2199, 382, 2128, 13, 51536, 51536, 509, 727, 2464, 257, 23897, 2445, 11, 51610, 51610, 293, 309, 576, 1936, 12972, 538, 264, 32284, 516, 51762, 51762, 12204, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.23489177928251379, "compression_ratio": 1.7790697674418605, "no_speech_prob": 6.920393207110465e-05}, {"id": 1145, "seek": 326432, "start": 3270.6400000000003, "end": 3272.48, "text": " OK, but you'll see examples.", "tokens": [50364, 286, 458, 13, 50389, 50389, 865, 11, 341, 307, 710, 15, 13, 50480, 50480, 2561, 337, 27639, 385, 295, 341, 13, 50544, 50680, 2264, 11, 457, 291, 603, 536, 5110, 13, 50772, 50772, 286, 914, 11, 286, 603, 1391, 855, 291, 3539, 5110, 295, 341, 11, 50904, 50904, 293, 291, 603, 312, 1075, 281, 1190, 552, 1803, 13, 50998, 50998, 663, 311, 439, 291, 643, 281, 360, 13, 51062, 51062, 509, 500, 380, 643, 281, 2464, 577, 291, 14722, 264, 646, 2365, 11, 577, 51346, 51346, 291, 48256, 264, 2771, 2448, 13, 51424, 51424, 509, 727, 2464, 309, 11, 293, 309, 576, 312, 382, 2199, 382, 2128, 13, 51536, 51536, 509, 727, 2464, 257, 23897, 2445, 11, 51610, 51610, 293, 309, 576, 1936, 12972, 538, 264, 32284, 516, 51762, 51762, 12204, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.23489177928251379, "compression_ratio": 1.7790697674418605, "no_speech_prob": 6.920393207110465e-05}, {"id": 1146, "seek": 326432, "start": 3272.48, "end": 3275.1200000000003, "text": " I mean, I'll probably show you actual examples of this,", "tokens": [50364, 286, 458, 13, 50389, 50389, 865, 11, 341, 307, 710, 15, 13, 50480, 50480, 2561, 337, 27639, 385, 295, 341, 13, 50544, 50680, 2264, 11, 457, 291, 603, 536, 5110, 13, 50772, 50772, 286, 914, 11, 286, 603, 1391, 855, 291, 3539, 5110, 295, 341, 11, 50904, 50904, 293, 291, 603, 312, 1075, 281, 1190, 552, 1803, 13, 50998, 50998, 663, 311, 439, 291, 643, 281, 360, 13, 51062, 51062, 509, 500, 380, 643, 281, 2464, 577, 291, 14722, 264, 646, 2365, 11, 577, 51346, 51346, 291, 48256, 264, 2771, 2448, 13, 51424, 51424, 509, 727, 2464, 309, 11, 293, 309, 576, 312, 382, 2199, 382, 2128, 13, 51536, 51536, 509, 727, 2464, 257, 23897, 2445, 11, 51610, 51610, 293, 309, 576, 1936, 12972, 538, 264, 32284, 516, 51762, 51762, 12204, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.23489177928251379, "compression_ratio": 1.7790697674418605, "no_speech_prob": 6.920393207110465e-05}, {"id": 1147, "seek": 326432, "start": 3275.1200000000003, "end": 3277.0, "text": " and you'll be able to run them yourself.", "tokens": [50364, 286, 458, 13, 50389, 50389, 865, 11, 341, 307, 710, 15, 13, 50480, 50480, 2561, 337, 27639, 385, 295, 341, 13, 50544, 50680, 2264, 11, 457, 291, 603, 536, 5110, 13, 50772, 50772, 286, 914, 11, 286, 603, 1391, 855, 291, 3539, 5110, 295, 341, 11, 50904, 50904, 293, 291, 603, 312, 1075, 281, 1190, 552, 1803, 13, 50998, 50998, 663, 311, 439, 291, 643, 281, 360, 13, 51062, 51062, 509, 500, 380, 643, 281, 2464, 577, 291, 14722, 264, 646, 2365, 11, 577, 51346, 51346, 291, 48256, 264, 2771, 2448, 13, 51424, 51424, 509, 727, 2464, 309, 11, 293, 309, 576, 312, 382, 2199, 382, 2128, 13, 51536, 51536, 509, 727, 2464, 257, 23897, 2445, 11, 51610, 51610, 293, 309, 576, 1936, 12972, 538, 264, 32284, 516, 51762, 51762, 12204, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.23489177928251379, "compression_ratio": 1.7790697674418605, "no_speech_prob": 6.920393207110465e-05}, {"id": 1148, "seek": 326432, "start": 3277.0, "end": 3278.28, "text": " That's all you need to do.", "tokens": [50364, 286, 458, 13, 50389, 50389, 865, 11, 341, 307, 710, 15, 13, 50480, 50480, 2561, 337, 27639, 385, 295, 341, 13, 50544, 50680, 2264, 11, 457, 291, 603, 536, 5110, 13, 50772, 50772, 286, 914, 11, 286, 603, 1391, 855, 291, 3539, 5110, 295, 341, 11, 50904, 50904, 293, 291, 603, 312, 1075, 281, 1190, 552, 1803, 13, 50998, 50998, 663, 311, 439, 291, 643, 281, 360, 13, 51062, 51062, 509, 500, 380, 643, 281, 2464, 577, 291, 14722, 264, 646, 2365, 11, 577, 51346, 51346, 291, 48256, 264, 2771, 2448, 13, 51424, 51424, 509, 727, 2464, 309, 11, 293, 309, 576, 312, 382, 2199, 382, 2128, 13, 51536, 51536, 509, 727, 2464, 257, 23897, 2445, 11, 51610, 51610, 293, 309, 576, 1936, 12972, 538, 264, 32284, 516, 51762, 51762, 12204, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.23489177928251379, "compression_ratio": 1.7790697674418605, "no_speech_prob": 6.920393207110465e-05}, {"id": 1149, "seek": 326432, "start": 3278.28, "end": 3283.96, "text": " You don't need to write how you compute the back prop, how", "tokens": [50364, 286, 458, 13, 50389, 50389, 865, 11, 341, 307, 710, 15, 13, 50480, 50480, 2561, 337, 27639, 385, 295, 341, 13, 50544, 50680, 2264, 11, 457, 291, 603, 536, 5110, 13, 50772, 50772, 286, 914, 11, 286, 603, 1391, 855, 291, 3539, 5110, 295, 341, 11, 50904, 50904, 293, 291, 603, 312, 1075, 281, 1190, 552, 1803, 13, 50998, 50998, 663, 311, 439, 291, 643, 281, 360, 13, 51062, 51062, 509, 500, 380, 643, 281, 2464, 577, 291, 14722, 264, 646, 2365, 11, 577, 51346, 51346, 291, 48256, 264, 2771, 2448, 13, 51424, 51424, 509, 727, 2464, 309, 11, 293, 309, 576, 312, 382, 2199, 382, 2128, 13, 51536, 51536, 509, 727, 2464, 257, 23897, 2445, 11, 51610, 51610, 293, 309, 576, 1936, 12972, 538, 264, 32284, 516, 51762, 51762, 12204, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.23489177928251379, "compression_ratio": 1.7790697674418605, "no_speech_prob": 6.920393207110465e-05}, {"id": 1150, "seek": 326432, "start": 3283.96, "end": 3285.52, "text": " you propagate the gradients.", "tokens": [50364, 286, 458, 13, 50389, 50389, 865, 11, 341, 307, 710, 15, 13, 50480, 50480, 2561, 337, 27639, 385, 295, 341, 13, 50544, 50680, 2264, 11, 457, 291, 603, 536, 5110, 13, 50772, 50772, 286, 914, 11, 286, 603, 1391, 855, 291, 3539, 5110, 295, 341, 11, 50904, 50904, 293, 291, 603, 312, 1075, 281, 1190, 552, 1803, 13, 50998, 50998, 663, 311, 439, 291, 643, 281, 360, 13, 51062, 51062, 509, 500, 380, 643, 281, 2464, 577, 291, 14722, 264, 646, 2365, 11, 577, 51346, 51346, 291, 48256, 264, 2771, 2448, 13, 51424, 51424, 509, 727, 2464, 309, 11, 293, 309, 576, 312, 382, 2199, 382, 2128, 13, 51536, 51536, 509, 727, 2464, 257, 23897, 2445, 11, 51610, 51610, 293, 309, 576, 1936, 12972, 538, 264, 32284, 516, 51762, 51762, 12204, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.23489177928251379, "compression_ratio": 1.7790697674418605, "no_speech_prob": 6.920393207110465e-05}, {"id": 1151, "seek": 326432, "start": 3285.52, "end": 3287.76, "text": " You could write it, and it would be as simple as forward.", "tokens": [50364, 286, 458, 13, 50389, 50389, 865, 11, 341, 307, 710, 15, 13, 50480, 50480, 2561, 337, 27639, 385, 295, 341, 13, 50544, 50680, 2264, 11, 457, 291, 603, 536, 5110, 13, 50772, 50772, 286, 914, 11, 286, 603, 1391, 855, 291, 3539, 5110, 295, 341, 11, 50904, 50904, 293, 291, 603, 312, 1075, 281, 1190, 552, 1803, 13, 50998, 50998, 663, 311, 439, 291, 643, 281, 360, 13, 51062, 51062, 509, 500, 380, 643, 281, 2464, 577, 291, 14722, 264, 646, 2365, 11, 577, 51346, 51346, 291, 48256, 264, 2771, 2448, 13, 51424, 51424, 509, 727, 2464, 309, 11, 293, 309, 576, 312, 382, 2199, 382, 2128, 13, 51536, 51536, 509, 727, 2464, 257, 23897, 2445, 11, 51610, 51610, 293, 309, 576, 1936, 12972, 538, 264, 32284, 516, 51762, 51762, 12204, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.23489177928251379, "compression_ratio": 1.7790697674418605, "no_speech_prob": 6.920393207110465e-05}, {"id": 1152, "seek": 326432, "start": 3287.76, "end": 3289.2400000000002, "text": " You could write a backward function,", "tokens": [50364, 286, 458, 13, 50389, 50389, 865, 11, 341, 307, 710, 15, 13, 50480, 50480, 2561, 337, 27639, 385, 295, 341, 13, 50544, 50680, 2264, 11, 457, 291, 603, 536, 5110, 13, 50772, 50772, 286, 914, 11, 286, 603, 1391, 855, 291, 3539, 5110, 295, 341, 11, 50904, 50904, 293, 291, 603, 312, 1075, 281, 1190, 552, 1803, 13, 50998, 50998, 663, 311, 439, 291, 643, 281, 360, 13, 51062, 51062, 509, 500, 380, 643, 281, 2464, 577, 291, 14722, 264, 646, 2365, 11, 577, 51346, 51346, 291, 48256, 264, 2771, 2448, 13, 51424, 51424, 509, 727, 2464, 309, 11, 293, 309, 576, 312, 382, 2199, 382, 2128, 13, 51536, 51536, 509, 727, 2464, 257, 23897, 2445, 11, 51610, 51610, 293, 309, 576, 1936, 12972, 538, 264, 32284, 516, 51762, 51762, 12204, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.23489177928251379, "compression_ratio": 1.7790697674418605, "no_speech_prob": 6.920393207110465e-05}, {"id": 1153, "seek": 326432, "start": 3289.2400000000002, "end": 3292.28, "text": " and it would basically multiply by the matrices going", "tokens": [50364, 286, 458, 13, 50389, 50389, 865, 11, 341, 307, 710, 15, 13, 50480, 50480, 2561, 337, 27639, 385, 295, 341, 13, 50544, 50680, 2264, 11, 457, 291, 603, 536, 5110, 13, 50772, 50772, 286, 914, 11, 286, 603, 1391, 855, 291, 3539, 5110, 295, 341, 11, 50904, 50904, 293, 291, 603, 312, 1075, 281, 1190, 552, 1803, 13, 50998, 50998, 663, 311, 439, 291, 643, 281, 360, 13, 51062, 51062, 509, 500, 380, 643, 281, 2464, 577, 291, 14722, 264, 646, 2365, 11, 577, 51346, 51346, 291, 48256, 264, 2771, 2448, 13, 51424, 51424, 509, 727, 2464, 309, 11, 293, 309, 576, 312, 382, 2199, 382, 2128, 13, 51536, 51536, 509, 727, 2464, 257, 23897, 2445, 11, 51610, 51610, 293, 309, 576, 1936, 12972, 538, 264, 32284, 516, 51762, 51762, 12204, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.23489177928251379, "compression_ratio": 1.7790697674418605, "no_speech_prob": 6.920393207110465e-05}, {"id": 1154, "seek": 326432, "start": 3292.28, "end": 3292.88, "text": " backwards.", "tokens": [50364, 286, 458, 13, 50389, 50389, 865, 11, 341, 307, 710, 15, 13, 50480, 50480, 2561, 337, 27639, 385, 295, 341, 13, 50544, 50680, 2264, 11, 457, 291, 603, 536, 5110, 13, 50772, 50772, 286, 914, 11, 286, 603, 1391, 855, 291, 3539, 5110, 295, 341, 11, 50904, 50904, 293, 291, 603, 312, 1075, 281, 1190, 552, 1803, 13, 50998, 50998, 663, 311, 439, 291, 643, 281, 360, 13, 51062, 51062, 509, 500, 380, 643, 281, 2464, 577, 291, 14722, 264, 646, 2365, 11, 577, 51346, 51346, 291, 48256, 264, 2771, 2448, 13, 51424, 51424, 509, 727, 2464, 309, 11, 293, 309, 576, 312, 382, 2199, 382, 2128, 13, 51536, 51536, 509, 727, 2464, 257, 23897, 2445, 11, 51610, 51610, 293, 309, 576, 1936, 12972, 538, 264, 32284, 516, 51762, 51762, 12204, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.23489177928251379, "compression_ratio": 1.7790697674418605, "no_speech_prob": 6.920393207110465e-05}, {"id": 1155, "seek": 329288, "start": 3292.88, "end": 3295.04, "text": " But you don't need to do this, because PyTorch does this", "tokens": [50364, 583, 291, 500, 380, 643, 281, 360, 341, 11, 570, 9953, 51, 284, 339, 775, 341, 50472, 50472, 6772, 337, 291, 13, 50524, 50524, 1133, 291, 6964, 264, 2128, 2445, 11, 50596, 50596, 309, 3255, 437, 16679, 291, 600, 1219, 294, 437, 1668, 11, 50798, 50798, 437, 366, 264, 36606, 1296, 264, 9102, 11, 50880, 50880, 293, 309, 486, 458, 577, 281, 8460, 264, 6828, 300, 50992, 50992, 14722, 264, 16235, 12204, 13, 51114, 51114, 407, 291, 500, 380, 643, 281, 3292, 466, 309, 13, 51234, 51234, 663, 311, 264, 5585, 295, 9953, 51, 284, 339, 11, 498, 291, 528, 13, 51352, 51352, 663, 311, 257, 857, 264, 5585, 295, 2452, 2539, 11, 534, 13, 51486, 51486, 663, 311, 1219, 12509, 38902, 13, 51664, 51664, 400, 341, 307, 257, 1729, 1254, 295, 12509, 38902, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.15875277073263264, "compression_ratio": 1.8275862068965518, "no_speech_prob": 2.586421396699734e-05}, {"id": 1156, "seek": 329288, "start": 3295.04, "end": 3296.08, "text": " automatically for you.", "tokens": [50364, 583, 291, 500, 380, 643, 281, 360, 341, 11, 570, 9953, 51, 284, 339, 775, 341, 50472, 50472, 6772, 337, 291, 13, 50524, 50524, 1133, 291, 6964, 264, 2128, 2445, 11, 50596, 50596, 309, 3255, 437, 16679, 291, 600, 1219, 294, 437, 1668, 11, 50798, 50798, 437, 366, 264, 36606, 1296, 264, 9102, 11, 50880, 50880, 293, 309, 486, 458, 577, 281, 8460, 264, 6828, 300, 50992, 50992, 14722, 264, 16235, 12204, 13, 51114, 51114, 407, 291, 500, 380, 643, 281, 3292, 466, 309, 13, 51234, 51234, 663, 311, 264, 5585, 295, 9953, 51, 284, 339, 11, 498, 291, 528, 13, 51352, 51352, 663, 311, 257, 857, 264, 5585, 295, 2452, 2539, 11, 534, 13, 51486, 51486, 663, 311, 1219, 12509, 38902, 13, 51664, 51664, 400, 341, 307, 257, 1729, 1254, 295, 12509, 38902, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.15875277073263264, "compression_ratio": 1.8275862068965518, "no_speech_prob": 2.586421396699734e-05}, {"id": 1157, "seek": 329288, "start": 3296.08, "end": 3297.52, "text": " When you define the forward function,", "tokens": [50364, 583, 291, 500, 380, 643, 281, 360, 341, 11, 570, 9953, 51, 284, 339, 775, 341, 50472, 50472, 6772, 337, 291, 13, 50524, 50524, 1133, 291, 6964, 264, 2128, 2445, 11, 50596, 50596, 309, 3255, 437, 16679, 291, 600, 1219, 294, 437, 1668, 11, 50798, 50798, 437, 366, 264, 36606, 1296, 264, 9102, 11, 50880, 50880, 293, 309, 486, 458, 577, 281, 8460, 264, 6828, 300, 50992, 50992, 14722, 264, 16235, 12204, 13, 51114, 51114, 407, 291, 500, 380, 643, 281, 3292, 466, 309, 13, 51234, 51234, 663, 311, 264, 5585, 295, 9953, 51, 284, 339, 11, 498, 291, 528, 13, 51352, 51352, 663, 311, 257, 857, 264, 5585, 295, 2452, 2539, 11, 534, 13, 51486, 51486, 663, 311, 1219, 12509, 38902, 13, 51664, 51664, 400, 341, 307, 257, 1729, 1254, 295, 12509, 38902, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.15875277073263264, "compression_ratio": 1.8275862068965518, "no_speech_prob": 2.586421396699734e-05}, {"id": 1158, "seek": 329288, "start": 3297.52, "end": 3301.56, "text": " it knows what modules you've called in what order,", "tokens": [50364, 583, 291, 500, 380, 643, 281, 360, 341, 11, 570, 9953, 51, 284, 339, 775, 341, 50472, 50472, 6772, 337, 291, 13, 50524, 50524, 1133, 291, 6964, 264, 2128, 2445, 11, 50596, 50596, 309, 3255, 437, 16679, 291, 600, 1219, 294, 437, 1668, 11, 50798, 50798, 437, 366, 264, 36606, 1296, 264, 9102, 11, 50880, 50880, 293, 309, 486, 458, 577, 281, 8460, 264, 6828, 300, 50992, 50992, 14722, 264, 16235, 12204, 13, 51114, 51114, 407, 291, 500, 380, 643, 281, 3292, 466, 309, 13, 51234, 51234, 663, 311, 264, 5585, 295, 9953, 51, 284, 339, 11, 498, 291, 528, 13, 51352, 51352, 663, 311, 257, 857, 264, 5585, 295, 2452, 2539, 11, 534, 13, 51486, 51486, 663, 311, 1219, 12509, 38902, 13, 51664, 51664, 400, 341, 307, 257, 1729, 1254, 295, 12509, 38902, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.15875277073263264, "compression_ratio": 1.8275862068965518, "no_speech_prob": 2.586421396699734e-05}, {"id": 1159, "seek": 329288, "start": 3301.56, "end": 3303.2000000000003, "text": " what are the dependencies between the variables,", "tokens": [50364, 583, 291, 500, 380, 643, 281, 360, 341, 11, 570, 9953, 51, 284, 339, 775, 341, 50472, 50472, 6772, 337, 291, 13, 50524, 50524, 1133, 291, 6964, 264, 2128, 2445, 11, 50596, 50596, 309, 3255, 437, 16679, 291, 600, 1219, 294, 437, 1668, 11, 50798, 50798, 437, 366, 264, 36606, 1296, 264, 9102, 11, 50880, 50880, 293, 309, 486, 458, 577, 281, 8460, 264, 6828, 300, 50992, 50992, 14722, 264, 16235, 12204, 13, 51114, 51114, 407, 291, 500, 380, 643, 281, 3292, 466, 309, 13, 51234, 51234, 663, 311, 264, 5585, 295, 9953, 51, 284, 339, 11, 498, 291, 528, 13, 51352, 51352, 663, 311, 257, 857, 264, 5585, 295, 2452, 2539, 11, 534, 13, 51486, 51486, 663, 311, 1219, 12509, 38902, 13, 51664, 51664, 400, 341, 307, 257, 1729, 1254, 295, 12509, 38902, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.15875277073263264, "compression_ratio": 1.8275862068965518, "no_speech_prob": 2.586421396699734e-05}, {"id": 1160, "seek": 329288, "start": 3303.2000000000003, "end": 3305.44, "text": " and it will know how to generate the functions that", "tokens": [50364, 583, 291, 500, 380, 643, 281, 360, 341, 11, 570, 9953, 51, 284, 339, 775, 341, 50472, 50472, 6772, 337, 291, 13, 50524, 50524, 1133, 291, 6964, 264, 2128, 2445, 11, 50596, 50596, 309, 3255, 437, 16679, 291, 600, 1219, 294, 437, 1668, 11, 50798, 50798, 437, 366, 264, 36606, 1296, 264, 9102, 11, 50880, 50880, 293, 309, 486, 458, 577, 281, 8460, 264, 6828, 300, 50992, 50992, 14722, 264, 16235, 12204, 13, 51114, 51114, 407, 291, 500, 380, 643, 281, 3292, 466, 309, 13, 51234, 51234, 663, 311, 264, 5585, 295, 9953, 51, 284, 339, 11, 498, 291, 528, 13, 51352, 51352, 663, 311, 257, 857, 264, 5585, 295, 2452, 2539, 11, 534, 13, 51486, 51486, 663, 311, 1219, 12509, 38902, 13, 51664, 51664, 400, 341, 307, 257, 1729, 1254, 295, 12509, 38902, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.15875277073263264, "compression_ratio": 1.8275862068965518, "no_speech_prob": 2.586421396699734e-05}, {"id": 1161, "seek": 329288, "start": 3305.44, "end": 3307.88, "text": " compute the gradient backwards.", "tokens": [50364, 583, 291, 500, 380, 643, 281, 360, 341, 11, 570, 9953, 51, 284, 339, 775, 341, 50472, 50472, 6772, 337, 291, 13, 50524, 50524, 1133, 291, 6964, 264, 2128, 2445, 11, 50596, 50596, 309, 3255, 437, 16679, 291, 600, 1219, 294, 437, 1668, 11, 50798, 50798, 437, 366, 264, 36606, 1296, 264, 9102, 11, 50880, 50880, 293, 309, 486, 458, 577, 281, 8460, 264, 6828, 300, 50992, 50992, 14722, 264, 16235, 12204, 13, 51114, 51114, 407, 291, 500, 380, 643, 281, 3292, 466, 309, 13, 51234, 51234, 663, 311, 264, 5585, 295, 9953, 51, 284, 339, 11, 498, 291, 528, 13, 51352, 51352, 663, 311, 257, 857, 264, 5585, 295, 2452, 2539, 11, 534, 13, 51486, 51486, 663, 311, 1219, 12509, 38902, 13, 51664, 51664, 400, 341, 307, 257, 1729, 1254, 295, 12509, 38902, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.15875277073263264, "compression_ratio": 1.8275862068965518, "no_speech_prob": 2.586421396699734e-05}, {"id": 1162, "seek": 329288, "start": 3307.88, "end": 3310.28, "text": " So you don't need to worry about it.", "tokens": [50364, 583, 291, 500, 380, 643, 281, 360, 341, 11, 570, 9953, 51, 284, 339, 775, 341, 50472, 50472, 6772, 337, 291, 13, 50524, 50524, 1133, 291, 6964, 264, 2128, 2445, 11, 50596, 50596, 309, 3255, 437, 16679, 291, 600, 1219, 294, 437, 1668, 11, 50798, 50798, 437, 366, 264, 36606, 1296, 264, 9102, 11, 50880, 50880, 293, 309, 486, 458, 577, 281, 8460, 264, 6828, 300, 50992, 50992, 14722, 264, 16235, 12204, 13, 51114, 51114, 407, 291, 500, 380, 643, 281, 3292, 466, 309, 13, 51234, 51234, 663, 311, 264, 5585, 295, 9953, 51, 284, 339, 11, 498, 291, 528, 13, 51352, 51352, 663, 311, 257, 857, 264, 5585, 295, 2452, 2539, 11, 534, 13, 51486, 51486, 663, 311, 1219, 12509, 38902, 13, 51664, 51664, 400, 341, 307, 257, 1729, 1254, 295, 12509, 38902, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.15875277073263264, "compression_ratio": 1.8275862068965518, "no_speech_prob": 2.586421396699734e-05}, {"id": 1163, "seek": 329288, "start": 3310.28, "end": 3312.6400000000003, "text": " That's the magic of PyTorch, if you want.", "tokens": [50364, 583, 291, 500, 380, 643, 281, 360, 341, 11, 570, 9953, 51, 284, 339, 775, 341, 50472, 50472, 6772, 337, 291, 13, 50524, 50524, 1133, 291, 6964, 264, 2128, 2445, 11, 50596, 50596, 309, 3255, 437, 16679, 291, 600, 1219, 294, 437, 1668, 11, 50798, 50798, 437, 366, 264, 36606, 1296, 264, 9102, 11, 50880, 50880, 293, 309, 486, 458, 577, 281, 8460, 264, 6828, 300, 50992, 50992, 14722, 264, 16235, 12204, 13, 51114, 51114, 407, 291, 500, 380, 643, 281, 3292, 466, 309, 13, 51234, 51234, 663, 311, 264, 5585, 295, 9953, 51, 284, 339, 11, 498, 291, 528, 13, 51352, 51352, 663, 311, 257, 857, 264, 5585, 295, 2452, 2539, 11, 534, 13, 51486, 51486, 663, 311, 1219, 12509, 38902, 13, 51664, 51664, 400, 341, 307, 257, 1729, 1254, 295, 12509, 38902, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.15875277073263264, "compression_ratio": 1.8275862068965518, "no_speech_prob": 2.586421396699734e-05}, {"id": 1164, "seek": 329288, "start": 3312.6400000000003, "end": 3315.32, "text": " That's a bit the magic of deep learning, really.", "tokens": [50364, 583, 291, 500, 380, 643, 281, 360, 341, 11, 570, 9953, 51, 284, 339, 775, 341, 50472, 50472, 6772, 337, 291, 13, 50524, 50524, 1133, 291, 6964, 264, 2128, 2445, 11, 50596, 50596, 309, 3255, 437, 16679, 291, 600, 1219, 294, 437, 1668, 11, 50798, 50798, 437, 366, 264, 36606, 1296, 264, 9102, 11, 50880, 50880, 293, 309, 486, 458, 577, 281, 8460, 264, 6828, 300, 50992, 50992, 14722, 264, 16235, 12204, 13, 51114, 51114, 407, 291, 500, 380, 643, 281, 3292, 466, 309, 13, 51234, 51234, 663, 311, 264, 5585, 295, 9953, 51, 284, 339, 11, 498, 291, 528, 13, 51352, 51352, 663, 311, 257, 857, 264, 5585, 295, 2452, 2539, 11, 534, 13, 51486, 51486, 663, 311, 1219, 12509, 38902, 13, 51664, 51664, 400, 341, 307, 257, 1729, 1254, 295, 12509, 38902, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.15875277073263264, "compression_ratio": 1.8275862068965518, "no_speech_prob": 2.586421396699734e-05}, {"id": 1165, "seek": 329288, "start": 3315.32, "end": 3318.88, "text": " That's called automatic differentiation.", "tokens": [50364, 583, 291, 500, 380, 643, 281, 360, 341, 11, 570, 9953, 51, 284, 339, 775, 341, 50472, 50472, 6772, 337, 291, 13, 50524, 50524, 1133, 291, 6964, 264, 2128, 2445, 11, 50596, 50596, 309, 3255, 437, 16679, 291, 600, 1219, 294, 437, 1668, 11, 50798, 50798, 437, 366, 264, 36606, 1296, 264, 9102, 11, 50880, 50880, 293, 309, 486, 458, 577, 281, 8460, 264, 6828, 300, 50992, 50992, 14722, 264, 16235, 12204, 13, 51114, 51114, 407, 291, 500, 380, 643, 281, 3292, 466, 309, 13, 51234, 51234, 663, 311, 264, 5585, 295, 9953, 51, 284, 339, 11, 498, 291, 528, 13, 51352, 51352, 663, 311, 257, 857, 264, 5585, 295, 2452, 2539, 11, 534, 13, 51486, 51486, 663, 311, 1219, 12509, 38902, 13, 51664, 51664, 400, 341, 307, 257, 1729, 1254, 295, 12509, 38902, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.15875277073263264, "compression_ratio": 1.8275862068965518, "no_speech_prob": 2.586421396699734e-05}, {"id": 1166, "seek": 329288, "start": 3318.88, "end": 3322.1600000000003, "text": " And this is a particular form of automatic differentiation.", "tokens": [50364, 583, 291, 500, 380, 643, 281, 360, 341, 11, 570, 9953, 51, 284, 339, 775, 341, 50472, 50472, 6772, 337, 291, 13, 50524, 50524, 1133, 291, 6964, 264, 2128, 2445, 11, 50596, 50596, 309, 3255, 437, 16679, 291, 600, 1219, 294, 437, 1668, 11, 50798, 50798, 437, 366, 264, 36606, 1296, 264, 9102, 11, 50880, 50880, 293, 309, 486, 458, 577, 281, 8460, 264, 6828, 300, 50992, 50992, 14722, 264, 16235, 12204, 13, 51114, 51114, 407, 291, 500, 380, 643, 281, 3292, 466, 309, 13, 51234, 51234, 663, 311, 264, 5585, 295, 9953, 51, 284, 339, 11, 498, 291, 528, 13, 51352, 51352, 663, 311, 257, 857, 264, 5585, 295, 2452, 2539, 11, 534, 13, 51486, 51486, 663, 311, 1219, 12509, 38902, 13, 51664, 51664, 400, 341, 307, 257, 1729, 1254, 295, 12509, 38902, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.15875277073263264, "compression_ratio": 1.8275862068965518, "no_speech_prob": 2.586421396699734e-05}, {"id": 1167, "seek": 332216, "start": 3322.16, "end": 3324.7999999999997, "text": " There's another way to write functions in PyTorch", "tokens": [50364, 821, 311, 1071, 636, 281, 2464, 6828, 294, 9953, 51, 284, 339, 50496, 50496, 300, 366, 733, 295, 544, 11745, 13, 50584, 50584, 407, 291, 434, 406, 1228, 16679, 365, 6920, 9834, 13, 50718, 50718, 509, 434, 445, 5141, 6828, 472, 934, 264, 661, 13, 50828, 50828, 400, 9953, 51, 284, 339, 575, 257, 7513, 538, 597, 309, 393, 6772, 50956, 50956, 14722, 264, 16235, 295, 604, 2445, 51086, 51086, 291, 6964, 365, 3104, 281, 2035, 9834, 291, 528, 13, 51240, 51240, 5135, 11, 613, 955, 1074, 365, 264, 4238, 441, 11, 51378, 51378, 411, 264, 297, 77, 13, 9485, 1686, 8213, 1854, 11, 51534, 51534, 307, 516, 281, 362, 257, 3126, 9765, 8213, 11, 597, 51648, 51648, 307, 264, 11745, 644, 11, 597, 307, 10205, 264, 8141, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.15822046453302557, "compression_ratio": 1.7559322033898306, "no_speech_prob": 5.091777893539984e-06}, {"id": 1168, "seek": 332216, "start": 3324.7999999999997, "end": 3326.56, "text": " that are kind of more functional.", "tokens": [50364, 821, 311, 1071, 636, 281, 2464, 6828, 294, 9953, 51, 284, 339, 50496, 50496, 300, 366, 733, 295, 544, 11745, 13, 50584, 50584, 407, 291, 434, 406, 1228, 16679, 365, 6920, 9834, 13, 50718, 50718, 509, 434, 445, 5141, 6828, 472, 934, 264, 661, 13, 50828, 50828, 400, 9953, 51, 284, 339, 575, 257, 7513, 538, 597, 309, 393, 6772, 50956, 50956, 14722, 264, 16235, 295, 604, 2445, 51086, 51086, 291, 6964, 365, 3104, 281, 2035, 9834, 291, 528, 13, 51240, 51240, 5135, 11, 613, 955, 1074, 365, 264, 4238, 441, 11, 51378, 51378, 411, 264, 297, 77, 13, 9485, 1686, 8213, 1854, 11, 51534, 51534, 307, 516, 281, 362, 257, 3126, 9765, 8213, 11, 597, 51648, 51648, 307, 264, 11745, 644, 11, 597, 307, 10205, 264, 8141, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.15822046453302557, "compression_ratio": 1.7559322033898306, "no_speech_prob": 5.091777893539984e-06}, {"id": 1169, "seek": 332216, "start": 3326.56, "end": 3329.24, "text": " So you're not using modules with internal parameters.", "tokens": [50364, 821, 311, 1071, 636, 281, 2464, 6828, 294, 9953, 51, 284, 339, 50496, 50496, 300, 366, 733, 295, 544, 11745, 13, 50584, 50584, 407, 291, 434, 406, 1228, 16679, 365, 6920, 9834, 13, 50718, 50718, 509, 434, 445, 5141, 6828, 472, 934, 264, 661, 13, 50828, 50828, 400, 9953, 51, 284, 339, 575, 257, 7513, 538, 597, 309, 393, 6772, 50956, 50956, 14722, 264, 16235, 295, 604, 2445, 51086, 51086, 291, 6964, 365, 3104, 281, 2035, 9834, 291, 528, 13, 51240, 51240, 5135, 11, 613, 955, 1074, 365, 264, 4238, 441, 11, 51378, 51378, 411, 264, 297, 77, 13, 9485, 1686, 8213, 1854, 11, 51534, 51534, 307, 516, 281, 362, 257, 3126, 9765, 8213, 11, 597, 51648, 51648, 307, 264, 11745, 644, 11, 597, 307, 10205, 264, 8141, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.15822046453302557, "compression_ratio": 1.7559322033898306, "no_speech_prob": 5.091777893539984e-06}, {"id": 1170, "seek": 332216, "start": 3329.24, "end": 3331.44, "text": " You're just calling functions one after the other.", "tokens": [50364, 821, 311, 1071, 636, 281, 2464, 6828, 294, 9953, 51, 284, 339, 50496, 50496, 300, 366, 733, 295, 544, 11745, 13, 50584, 50584, 407, 291, 434, 406, 1228, 16679, 365, 6920, 9834, 13, 50718, 50718, 509, 434, 445, 5141, 6828, 472, 934, 264, 661, 13, 50828, 50828, 400, 9953, 51, 284, 339, 575, 257, 7513, 538, 597, 309, 393, 6772, 50956, 50956, 14722, 264, 16235, 295, 604, 2445, 51086, 51086, 291, 6964, 365, 3104, 281, 2035, 9834, 291, 528, 13, 51240, 51240, 5135, 11, 613, 955, 1074, 365, 264, 4238, 441, 11, 51378, 51378, 411, 264, 297, 77, 13, 9485, 1686, 8213, 1854, 11, 51534, 51534, 307, 516, 281, 362, 257, 3126, 9765, 8213, 11, 597, 51648, 51648, 307, 264, 11745, 644, 11, 597, 307, 10205, 264, 8141, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.15822046453302557, "compression_ratio": 1.7559322033898306, "no_speech_prob": 5.091777893539984e-06}, {"id": 1171, "seek": 332216, "start": 3331.44, "end": 3334.0, "text": " And PyTorch has a mechanism by which it can automatically", "tokens": [50364, 821, 311, 1071, 636, 281, 2464, 6828, 294, 9953, 51, 284, 339, 50496, 50496, 300, 366, 733, 295, 544, 11745, 13, 50584, 50584, 407, 291, 434, 406, 1228, 16679, 365, 6920, 9834, 13, 50718, 50718, 509, 434, 445, 5141, 6828, 472, 934, 264, 661, 13, 50828, 50828, 400, 9953, 51, 284, 339, 575, 257, 7513, 538, 597, 309, 393, 6772, 50956, 50956, 14722, 264, 16235, 295, 604, 2445, 51086, 51086, 291, 6964, 365, 3104, 281, 2035, 9834, 291, 528, 13, 51240, 51240, 5135, 11, 613, 955, 1074, 365, 264, 4238, 441, 11, 51378, 51378, 411, 264, 297, 77, 13, 9485, 1686, 8213, 1854, 11, 51534, 51534, 307, 516, 281, 362, 257, 3126, 9765, 8213, 11, 597, 51648, 51648, 307, 264, 11745, 644, 11, 597, 307, 10205, 264, 8141, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.15822046453302557, "compression_ratio": 1.7559322033898306, "no_speech_prob": 5.091777893539984e-06}, {"id": 1172, "seek": 332216, "start": 3334.0, "end": 3336.6, "text": " compute the gradient of any function", "tokens": [50364, 821, 311, 1071, 636, 281, 2464, 6828, 294, 9953, 51, 284, 339, 50496, 50496, 300, 366, 733, 295, 544, 11745, 13, 50584, 50584, 407, 291, 434, 406, 1228, 16679, 365, 6920, 9834, 13, 50718, 50718, 509, 434, 445, 5141, 6828, 472, 934, 264, 661, 13, 50828, 50828, 400, 9953, 51, 284, 339, 575, 257, 7513, 538, 597, 309, 393, 6772, 50956, 50956, 14722, 264, 16235, 295, 604, 2445, 51086, 51086, 291, 6964, 365, 3104, 281, 2035, 9834, 291, 528, 13, 51240, 51240, 5135, 11, 613, 955, 1074, 365, 264, 4238, 441, 11, 51378, 51378, 411, 264, 297, 77, 13, 9485, 1686, 8213, 1854, 11, 51534, 51534, 307, 516, 281, 362, 257, 3126, 9765, 8213, 11, 597, 51648, 51648, 307, 264, 11745, 644, 11, 597, 307, 10205, 264, 8141, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.15822046453302557, "compression_ratio": 1.7559322033898306, "no_speech_prob": 5.091777893539984e-06}, {"id": 1173, "seek": 332216, "start": 3336.6, "end": 3339.68, "text": " you define with respect to whatever parameters you want.", "tokens": [50364, 821, 311, 1071, 636, 281, 2464, 6828, 294, 9953, 51, 284, 339, 50496, 50496, 300, 366, 733, 295, 544, 11745, 13, 50584, 50584, 407, 291, 434, 406, 1228, 16679, 365, 6920, 9834, 13, 50718, 50718, 509, 434, 445, 5141, 6828, 472, 934, 264, 661, 13, 50828, 50828, 400, 9953, 51, 284, 339, 575, 257, 7513, 538, 597, 309, 393, 6772, 50956, 50956, 14722, 264, 16235, 295, 604, 2445, 51086, 51086, 291, 6964, 365, 3104, 281, 2035, 9834, 291, 528, 13, 51240, 51240, 5135, 11, 613, 955, 1074, 365, 264, 4238, 441, 11, 51378, 51378, 411, 264, 297, 77, 13, 9485, 1686, 8213, 1854, 11, 51534, 51534, 307, 516, 281, 362, 257, 3126, 9765, 8213, 11, 597, 51648, 51648, 307, 264, 11745, 644, 11, 597, 307, 10205, 264, 8141, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.15822046453302557, "compression_ratio": 1.7559322033898306, "no_speech_prob": 5.091777893539984e-06}, {"id": 1174, "seek": 332216, "start": 3339.68, "end": 3342.44, "text": " Actually, these big guys with the capital L,", "tokens": [50364, 821, 311, 1071, 636, 281, 2464, 6828, 294, 9953, 51, 284, 339, 50496, 50496, 300, 366, 733, 295, 544, 11745, 13, 50584, 50584, 407, 291, 434, 406, 1228, 16679, 365, 6920, 9834, 13, 50718, 50718, 509, 434, 445, 5141, 6828, 472, 934, 264, 661, 13, 50828, 50828, 400, 9953, 51, 284, 339, 575, 257, 7513, 538, 597, 309, 393, 6772, 50956, 50956, 14722, 264, 16235, 295, 604, 2445, 51086, 51086, 291, 6964, 365, 3104, 281, 2035, 9834, 291, 528, 13, 51240, 51240, 5135, 11, 613, 955, 1074, 365, 264, 4238, 441, 11, 51378, 51378, 411, 264, 297, 77, 13, 9485, 1686, 8213, 1854, 11, 51534, 51534, 307, 516, 281, 362, 257, 3126, 9765, 8213, 11, 597, 51648, 51648, 307, 264, 11745, 644, 11, 597, 307, 10205, 264, 8141, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.15822046453302557, "compression_ratio": 1.7559322033898306, "no_speech_prob": 5.091777893539984e-06}, {"id": 1175, "seek": 332216, "start": 3342.44, "end": 3345.56, "text": " like the nn.capital linear inside,", "tokens": [50364, 821, 311, 1071, 636, 281, 2464, 6828, 294, 9953, 51, 284, 339, 50496, 50496, 300, 366, 733, 295, 544, 11745, 13, 50584, 50584, 407, 291, 434, 406, 1228, 16679, 365, 6920, 9834, 13, 50718, 50718, 509, 434, 445, 5141, 6828, 472, 934, 264, 661, 13, 50828, 50828, 400, 9953, 51, 284, 339, 575, 257, 7513, 538, 597, 309, 393, 6772, 50956, 50956, 14722, 264, 16235, 295, 604, 2445, 51086, 51086, 291, 6964, 365, 3104, 281, 2035, 9834, 291, 528, 13, 51240, 51240, 5135, 11, 613, 955, 1074, 365, 264, 4238, 441, 11, 51378, 51378, 411, 264, 297, 77, 13, 9485, 1686, 8213, 1854, 11, 51534, 51534, 307, 516, 281, 362, 257, 3126, 9765, 8213, 11, 597, 51648, 51648, 307, 264, 11745, 644, 11, 597, 307, 10205, 264, 8141, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.15822046453302557, "compression_ratio": 1.7559322033898306, "no_speech_prob": 5.091777893539984e-06}, {"id": 1176, "seek": 332216, "start": 3345.56, "end": 3347.8399999999997, "text": " is going to have a lowercase linear, which", "tokens": [50364, 821, 311, 1071, 636, 281, 2464, 6828, 294, 9953, 51, 284, 339, 50496, 50496, 300, 366, 733, 295, 544, 11745, 13, 50584, 50584, 407, 291, 434, 406, 1228, 16679, 365, 6920, 9834, 13, 50718, 50718, 509, 434, 445, 5141, 6828, 472, 934, 264, 661, 13, 50828, 50828, 400, 9953, 51, 284, 339, 575, 257, 7513, 538, 597, 309, 393, 6772, 50956, 50956, 14722, 264, 16235, 295, 604, 2445, 51086, 51086, 291, 6964, 365, 3104, 281, 2035, 9834, 291, 528, 13, 51240, 51240, 5135, 11, 613, 955, 1074, 365, 264, 4238, 441, 11, 51378, 51378, 411, 264, 297, 77, 13, 9485, 1686, 8213, 1854, 11, 51534, 51534, 307, 516, 281, 362, 257, 3126, 9765, 8213, 11, 597, 51648, 51648, 307, 264, 11745, 644, 11, 597, 307, 10205, 264, 8141, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.15822046453302557, "compression_ratio": 1.7559322033898306, "no_speech_prob": 5.091777893539984e-06}, {"id": 1177, "seek": 332216, "start": 3347.8399999999997, "end": 3351.2, "text": " is the functional part, which is performing the matrix", "tokens": [50364, 821, 311, 1071, 636, 281, 2464, 6828, 294, 9953, 51, 284, 339, 50496, 50496, 300, 366, 733, 295, 544, 11745, 13, 50584, 50584, 407, 291, 434, 406, 1228, 16679, 365, 6920, 9834, 13, 50718, 50718, 509, 434, 445, 5141, 6828, 472, 934, 264, 661, 13, 50828, 50828, 400, 9953, 51, 284, 339, 575, 257, 7513, 538, 597, 309, 393, 6772, 50956, 50956, 14722, 264, 16235, 295, 604, 2445, 51086, 51086, 291, 6964, 365, 3104, 281, 2035, 9834, 291, 528, 13, 51240, 51240, 5135, 11, 613, 955, 1074, 365, 264, 4238, 441, 11, 51378, 51378, 411, 264, 297, 77, 13, 9485, 1686, 8213, 1854, 11, 51534, 51534, 307, 516, 281, 362, 257, 3126, 9765, 8213, 11, 597, 51648, 51648, 307, 264, 11745, 644, 11, 597, 307, 10205, 264, 8141, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.15822046453302557, "compression_ratio": 1.7559322033898306, "no_speech_prob": 5.091777893539984e-06}, {"id": 1178, "seek": 335120, "start": 3351.2, "end": 3355.2799999999997, "text": " multiplication between the weight stored inside the object", "tokens": [50364, 27290, 1296, 264, 3364, 12187, 1854, 264, 2657, 50568, 50568, 365, 257, 4238, 441, 293, 550, 264, 4846, 13, 50700, 50700, 407, 633, 4238, 5063, 2657, 486, 1854, 50900, 50900, 362, 264, 11745, 3364, 13, 50966, 50966, 407, 472, 393, 4536, 281, 764, 2139, 264, 11745, 1254, 538, 7576, 51200, 51200, 420, 764, 341, 38745, 6987, 3037, 11, 597, 51356, 51356, 366, 544, 10851, 281, 445, 764, 13, 51532, 51532, 1779, 13, 51574, 51574, 407, 294, 264, 917, 11, 291, 393, 1884, 364, 5197, 295, 341, 1508, 13, 51738, 51738, 509, 393, 1884, 3866, 14519, 11, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.17206550598144532, "compression_ratio": 1.7901785714285714, "no_speech_prob": 0.0002124691818607971}, {"id": 1179, "seek": 335120, "start": 3355.2799999999997, "end": 3357.9199999999996, "text": " with a capital L and then the input.", "tokens": [50364, 27290, 1296, 264, 3364, 12187, 1854, 264, 2657, 50568, 50568, 365, 257, 4238, 441, 293, 550, 264, 4846, 13, 50700, 50700, 407, 633, 4238, 5063, 2657, 486, 1854, 50900, 50900, 362, 264, 11745, 3364, 13, 50966, 50966, 407, 472, 393, 4536, 281, 764, 2139, 264, 11745, 1254, 538, 7576, 51200, 51200, 420, 764, 341, 38745, 6987, 3037, 11, 597, 51356, 51356, 366, 544, 10851, 281, 445, 764, 13, 51532, 51532, 1779, 13, 51574, 51574, 407, 294, 264, 917, 11, 291, 393, 1884, 364, 5197, 295, 341, 1508, 13, 51738, 51738, 509, 393, 1884, 3866, 14519, 11, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.17206550598144532, "compression_ratio": 1.7901785714285714, "no_speech_prob": 0.0002124691818607971}, {"id": 1180, "seek": 335120, "start": 3357.9199999999996, "end": 3361.9199999999996, "text": " So every capital letter object will inside", "tokens": [50364, 27290, 1296, 264, 3364, 12187, 1854, 264, 2657, 50568, 50568, 365, 257, 4238, 441, 293, 550, 264, 4846, 13, 50700, 50700, 407, 633, 4238, 5063, 2657, 486, 1854, 50900, 50900, 362, 264, 11745, 3364, 13, 50966, 50966, 407, 472, 393, 4536, 281, 764, 2139, 264, 11745, 1254, 538, 7576, 51200, 51200, 420, 764, 341, 38745, 6987, 3037, 11, 597, 51356, 51356, 366, 544, 10851, 281, 445, 764, 13, 51532, 51532, 1779, 13, 51574, 51574, 407, 294, 264, 917, 11, 291, 393, 1884, 364, 5197, 295, 341, 1508, 13, 51738, 51738, 509, 393, 1884, 3866, 14519, 11, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.17206550598144532, "compression_ratio": 1.7901785714285714, "no_speech_prob": 0.0002124691818607971}, {"id": 1181, "seek": 335120, "start": 3361.9199999999996, "end": 3363.24, "text": " have the functional weight.", "tokens": [50364, 27290, 1296, 264, 3364, 12187, 1854, 264, 2657, 50568, 50568, 365, 257, 4238, 441, 293, 550, 264, 4846, 13, 50700, 50700, 407, 633, 4238, 5063, 2657, 486, 1854, 50900, 50900, 362, 264, 11745, 3364, 13, 50966, 50966, 407, 472, 393, 4536, 281, 764, 2139, 264, 11745, 1254, 538, 7576, 51200, 51200, 420, 764, 341, 38745, 6987, 3037, 11, 597, 51356, 51356, 366, 544, 10851, 281, 445, 764, 13, 51532, 51532, 1779, 13, 51574, 51574, 407, 294, 264, 917, 11, 291, 393, 1884, 364, 5197, 295, 341, 1508, 13, 51738, 51738, 509, 393, 1884, 3866, 14519, 11, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.17206550598144532, "compression_ratio": 1.7901785714285714, "no_speech_prob": 0.0002124691818607971}, {"id": 1182, "seek": 335120, "start": 3363.24, "end": 3367.9199999999996, "text": " So one can decide to use either the functional form by default", "tokens": [50364, 27290, 1296, 264, 3364, 12187, 1854, 264, 2657, 50568, 50568, 365, 257, 4238, 441, 293, 550, 264, 4846, 13, 50700, 50700, 407, 633, 4238, 5063, 2657, 486, 1854, 50900, 50900, 362, 264, 11745, 3364, 13, 50966, 50966, 407, 472, 393, 4536, 281, 764, 2139, 264, 11745, 1254, 538, 7576, 51200, 51200, 420, 764, 341, 38745, 6987, 3037, 11, 597, 51356, 51356, 366, 544, 10851, 281, 445, 764, 13, 51532, 51532, 1779, 13, 51574, 51574, 407, 294, 264, 917, 11, 291, 393, 1884, 364, 5197, 295, 341, 1508, 13, 51738, 51738, 509, 393, 1884, 3866, 14519, 11, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.17206550598144532, "compression_ratio": 1.7901785714285714, "no_speech_prob": 0.0002124691818607971}, {"id": 1183, "seek": 335120, "start": 3367.9199999999996, "end": 3371.04, "text": " or use this encapsulated version, which", "tokens": [50364, 27290, 1296, 264, 3364, 12187, 1854, 264, 2657, 50568, 50568, 365, 257, 4238, 441, 293, 550, 264, 4846, 13, 50700, 50700, 407, 633, 4238, 5063, 2657, 486, 1854, 50900, 50900, 362, 264, 11745, 3364, 13, 50966, 50966, 407, 472, 393, 4536, 281, 764, 2139, 264, 11745, 1254, 538, 7576, 51200, 51200, 420, 764, 341, 38745, 6987, 3037, 11, 597, 51356, 51356, 366, 544, 10851, 281, 445, 764, 13, 51532, 51532, 1779, 13, 51574, 51574, 407, 294, 264, 917, 11, 291, 393, 1884, 364, 5197, 295, 341, 1508, 13, 51738, 51738, 509, 393, 1884, 3866, 14519, 11, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.17206550598144532, "compression_ratio": 1.7901785714285714, "no_speech_prob": 0.0002124691818607971}, {"id": 1184, "seek": 335120, "start": 3371.04, "end": 3374.56, "text": " are more convenient to just use.", "tokens": [50364, 27290, 1296, 264, 3364, 12187, 1854, 264, 2657, 50568, 50568, 365, 257, 4238, 441, 293, 550, 264, 4846, 13, 50700, 50700, 407, 633, 4238, 5063, 2657, 486, 1854, 50900, 50900, 362, 264, 11745, 3364, 13, 50966, 50966, 407, 472, 393, 4536, 281, 764, 2139, 264, 11745, 1254, 538, 7576, 51200, 51200, 420, 764, 341, 38745, 6987, 3037, 11, 597, 51356, 51356, 366, 544, 10851, 281, 445, 764, 13, 51532, 51532, 1779, 13, 51574, 51574, 407, 294, 264, 917, 11, 291, 393, 1884, 364, 5197, 295, 341, 1508, 13, 51738, 51738, 509, 393, 1884, 3866, 14519, 11, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.17206550598144532, "compression_ratio": 1.7901785714285714, "no_speech_prob": 0.0002124691818607971}, {"id": 1185, "seek": 335120, "start": 3374.56, "end": 3375.3999999999996, "text": " Right.", "tokens": [50364, 27290, 1296, 264, 3364, 12187, 1854, 264, 2657, 50568, 50568, 365, 257, 4238, 441, 293, 550, 264, 4846, 13, 50700, 50700, 407, 633, 4238, 5063, 2657, 486, 1854, 50900, 50900, 362, 264, 11745, 3364, 13, 50966, 50966, 407, 472, 393, 4536, 281, 764, 2139, 264, 11745, 1254, 538, 7576, 51200, 51200, 420, 764, 341, 38745, 6987, 3037, 11, 597, 51356, 51356, 366, 544, 10851, 281, 445, 764, 13, 51532, 51532, 1779, 13, 51574, 51574, 407, 294, 264, 917, 11, 291, 393, 1884, 364, 5197, 295, 341, 1508, 13, 51738, 51738, 509, 393, 1884, 3866, 14519, 11, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.17206550598144532, "compression_ratio": 1.7901785714285714, "no_speech_prob": 0.0002124691818607971}, {"id": 1186, "seek": 335120, "start": 3375.3999999999996, "end": 3378.68, "text": " So in the end, you can create an instance of this class.", "tokens": [50364, 27290, 1296, 264, 3364, 12187, 1854, 264, 2657, 50568, 50568, 365, 257, 4238, 441, 293, 550, 264, 4846, 13, 50700, 50700, 407, 633, 4238, 5063, 2657, 486, 1854, 50900, 50900, 362, 264, 11745, 3364, 13, 50966, 50966, 407, 472, 393, 4536, 281, 764, 2139, 264, 11745, 1254, 538, 7576, 51200, 51200, 420, 764, 341, 38745, 6987, 3037, 11, 597, 51356, 51356, 366, 544, 10851, 281, 445, 764, 13, 51532, 51532, 1779, 13, 51574, 51574, 407, 294, 264, 917, 11, 291, 393, 1884, 364, 5197, 295, 341, 1508, 13, 51738, 51738, 509, 393, 1884, 3866, 14519, 11, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.17206550598144532, "compression_ratio": 1.7901785714285714, "no_speech_prob": 0.0002124691818607971}, {"id": 1187, "seek": 335120, "start": 3378.68, "end": 3380.16, "text": " You can create multiple instances,", "tokens": [50364, 27290, 1296, 264, 3364, 12187, 1854, 264, 2657, 50568, 50568, 365, 257, 4238, 441, 293, 550, 264, 4846, 13, 50700, 50700, 407, 633, 4238, 5063, 2657, 486, 1854, 50900, 50900, 362, 264, 11745, 3364, 13, 50966, 50966, 407, 472, 393, 4536, 281, 764, 2139, 264, 11745, 1254, 538, 7576, 51200, 51200, 420, 764, 341, 38745, 6987, 3037, 11, 597, 51356, 51356, 366, 544, 10851, 281, 445, 764, 13, 51532, 51532, 1779, 13, 51574, 51574, 407, 294, 264, 917, 11, 291, 393, 1884, 364, 5197, 295, 341, 1508, 13, 51738, 51738, 509, 393, 1884, 3866, 14519, 11, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.17206550598144532, "compression_ratio": 1.7901785714285714, "no_speech_prob": 0.0002124691818607971}, {"id": 1188, "seek": 338016, "start": 3380.16, "end": 3382.2, "text": " so you can create one here.", "tokens": [50364, 370, 291, 393, 1884, 472, 510, 13, 50466, 50466, 1449, 818, 452, 7129, 293, 976, 309, 264, 2744, 382, 291, 528, 13, 50632, 50632, 400, 550, 281, 3079, 341, 281, 257, 1729, 3256, 11, 50752, 50752, 291, 445, 360, 577, 281, 2681, 2316, 295, 3256, 13, 50918, 50918, 663, 311, 382, 2199, 382, 300, 13, 51020, 51020, 407, 341, 307, 428, 700, 18161, 2533, 13, 51134, 51134, 400, 309, 775, 439, 264, 646, 2365, 6772, 13, 51338, 51338, 583, 291, 643, 281, 1223, 577, 646, 79, 1513, 1985, 13, 51480, 51480, 467, 311, 406, 570, 9953, 51, 284, 339, 775, 309, 337, 291, 51632, 51632, 300, 291, 393, 1333, 295, 2870, 466, 577, 291, 767, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.17692529053247275, "compression_ratio": 1.632, "no_speech_prob": 3.0415505989367375e-06}, {"id": 1189, "seek": 338016, "start": 3382.2, "end": 3385.52, "text": " Just call mynet and give it the size as you want.", "tokens": [50364, 370, 291, 393, 1884, 472, 510, 13, 50466, 50466, 1449, 818, 452, 7129, 293, 976, 309, 264, 2744, 382, 291, 528, 13, 50632, 50632, 400, 550, 281, 3079, 341, 281, 257, 1729, 3256, 11, 50752, 50752, 291, 445, 360, 577, 281, 2681, 2316, 295, 3256, 13, 50918, 50918, 663, 311, 382, 2199, 382, 300, 13, 51020, 51020, 407, 341, 307, 428, 700, 18161, 2533, 13, 51134, 51134, 400, 309, 775, 439, 264, 646, 2365, 6772, 13, 51338, 51338, 583, 291, 643, 281, 1223, 577, 646, 79, 1513, 1985, 13, 51480, 51480, 467, 311, 406, 570, 9953, 51, 284, 339, 775, 309, 337, 291, 51632, 51632, 300, 291, 393, 1333, 295, 2870, 466, 577, 291, 767, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.17692529053247275, "compression_ratio": 1.632, "no_speech_prob": 3.0415505989367375e-06}, {"id": 1190, "seek": 338016, "start": 3385.52, "end": 3387.92, "text": " And then to apply this to a particular image,", "tokens": [50364, 370, 291, 393, 1884, 472, 510, 13, 50466, 50466, 1449, 818, 452, 7129, 293, 976, 309, 264, 2744, 382, 291, 528, 13, 50632, 50632, 400, 550, 281, 3079, 341, 281, 257, 1729, 3256, 11, 50752, 50752, 291, 445, 360, 577, 281, 2681, 2316, 295, 3256, 13, 50918, 50918, 663, 311, 382, 2199, 382, 300, 13, 51020, 51020, 407, 341, 307, 428, 700, 18161, 2533, 13, 51134, 51134, 400, 309, 775, 439, 264, 646, 2365, 6772, 13, 51338, 51338, 583, 291, 643, 281, 1223, 577, 646, 79, 1513, 1985, 13, 51480, 51480, 467, 311, 406, 570, 9953, 51, 284, 339, 775, 309, 337, 291, 51632, 51632, 300, 291, 393, 1333, 295, 2870, 466, 577, 291, 767, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.17692529053247275, "compression_ratio": 1.632, "no_speech_prob": 3.0415505989367375e-06}, {"id": 1191, "seek": 338016, "start": 3387.92, "end": 3391.24, "text": " you just do how to equal model of image.", "tokens": [50364, 370, 291, 393, 1884, 472, 510, 13, 50466, 50466, 1449, 818, 452, 7129, 293, 976, 309, 264, 2744, 382, 291, 528, 13, 50632, 50632, 400, 550, 281, 3079, 341, 281, 257, 1729, 3256, 11, 50752, 50752, 291, 445, 360, 577, 281, 2681, 2316, 295, 3256, 13, 50918, 50918, 663, 311, 382, 2199, 382, 300, 13, 51020, 51020, 407, 341, 307, 428, 700, 18161, 2533, 13, 51134, 51134, 400, 309, 775, 439, 264, 646, 2365, 6772, 13, 51338, 51338, 583, 291, 643, 281, 1223, 577, 646, 79, 1513, 1985, 13, 51480, 51480, 467, 311, 406, 570, 9953, 51, 284, 339, 775, 309, 337, 291, 51632, 51632, 300, 291, 393, 1333, 295, 2870, 466, 577, 291, 767, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.17692529053247275, "compression_ratio": 1.632, "no_speech_prob": 3.0415505989367375e-06}, {"id": 1192, "seek": 338016, "start": 3391.24, "end": 3393.2799999999997, "text": " That's as simple as that.", "tokens": [50364, 370, 291, 393, 1884, 472, 510, 13, 50466, 50466, 1449, 818, 452, 7129, 293, 976, 309, 264, 2744, 382, 291, 528, 13, 50632, 50632, 400, 550, 281, 3079, 341, 281, 257, 1729, 3256, 11, 50752, 50752, 291, 445, 360, 577, 281, 2681, 2316, 295, 3256, 13, 50918, 50918, 663, 311, 382, 2199, 382, 300, 13, 51020, 51020, 407, 341, 307, 428, 700, 18161, 2533, 13, 51134, 51134, 400, 309, 775, 439, 264, 646, 2365, 6772, 13, 51338, 51338, 583, 291, 643, 281, 1223, 577, 646, 79, 1513, 1985, 13, 51480, 51480, 467, 311, 406, 570, 9953, 51, 284, 339, 775, 309, 337, 291, 51632, 51632, 300, 291, 393, 1333, 295, 2870, 466, 577, 291, 767, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.17692529053247275, "compression_ratio": 1.632, "no_speech_prob": 3.0415505989367375e-06}, {"id": 1193, "seek": 338016, "start": 3393.2799999999997, "end": 3395.56, "text": " So this is your first neural net.", "tokens": [50364, 370, 291, 393, 1884, 472, 510, 13, 50466, 50466, 1449, 818, 452, 7129, 293, 976, 309, 264, 2744, 382, 291, 528, 13, 50632, 50632, 400, 550, 281, 3079, 341, 281, 257, 1729, 3256, 11, 50752, 50752, 291, 445, 360, 577, 281, 2681, 2316, 295, 3256, 13, 50918, 50918, 663, 311, 382, 2199, 382, 300, 13, 51020, 51020, 407, 341, 307, 428, 700, 18161, 2533, 13, 51134, 51134, 400, 309, 775, 439, 264, 646, 2365, 6772, 13, 51338, 51338, 583, 291, 643, 281, 1223, 577, 646, 79, 1513, 1985, 13, 51480, 51480, 467, 311, 406, 570, 9953, 51, 284, 339, 775, 309, 337, 291, 51632, 51632, 300, 291, 393, 1333, 295, 2870, 466, 577, 291, 767, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.17692529053247275, "compression_ratio": 1.632, "no_speech_prob": 3.0415505989367375e-06}, {"id": 1194, "seek": 338016, "start": 3395.56, "end": 3399.64, "text": " And it does all the back prop automatically.", "tokens": [50364, 370, 291, 393, 1884, 472, 510, 13, 50466, 50466, 1449, 818, 452, 7129, 293, 976, 309, 264, 2744, 382, 291, 528, 13, 50632, 50632, 400, 550, 281, 3079, 341, 281, 257, 1729, 3256, 11, 50752, 50752, 291, 445, 360, 577, 281, 2681, 2316, 295, 3256, 13, 50918, 50918, 663, 311, 382, 2199, 382, 300, 13, 51020, 51020, 407, 341, 307, 428, 700, 18161, 2533, 13, 51134, 51134, 400, 309, 775, 439, 264, 646, 2365, 6772, 13, 51338, 51338, 583, 291, 643, 281, 1223, 577, 646, 79, 1513, 1985, 13, 51480, 51480, 467, 311, 406, 570, 9953, 51, 284, 339, 775, 309, 337, 291, 51632, 51632, 300, 291, 393, 1333, 295, 2870, 466, 577, 291, 767, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.17692529053247275, "compression_ratio": 1.632, "no_speech_prob": 3.0415505989367375e-06}, {"id": 1195, "seek": 338016, "start": 3399.64, "end": 3402.48, "text": " But you need to understand how backprop works.", "tokens": [50364, 370, 291, 393, 1884, 472, 510, 13, 50466, 50466, 1449, 818, 452, 7129, 293, 976, 309, 264, 2744, 382, 291, 528, 13, 50632, 50632, 400, 550, 281, 3079, 341, 281, 257, 1729, 3256, 11, 50752, 50752, 291, 445, 360, 577, 281, 2681, 2316, 295, 3256, 13, 50918, 50918, 663, 311, 382, 2199, 382, 300, 13, 51020, 51020, 407, 341, 307, 428, 700, 18161, 2533, 13, 51134, 51134, 400, 309, 775, 439, 264, 646, 2365, 6772, 13, 51338, 51338, 583, 291, 643, 281, 1223, 577, 646, 79, 1513, 1985, 13, 51480, 51480, 467, 311, 406, 570, 9953, 51, 284, 339, 775, 309, 337, 291, 51632, 51632, 300, 291, 393, 1333, 295, 2870, 466, 577, 291, 767, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.17692529053247275, "compression_ratio": 1.632, "no_speech_prob": 3.0415505989367375e-06}, {"id": 1196, "seek": 338016, "start": 3402.48, "end": 3405.52, "text": " It's not because PyTorch does it for you", "tokens": [50364, 370, 291, 393, 1884, 472, 510, 13, 50466, 50466, 1449, 818, 452, 7129, 293, 976, 309, 264, 2744, 382, 291, 528, 13, 50632, 50632, 400, 550, 281, 3079, 341, 281, 257, 1729, 3256, 11, 50752, 50752, 291, 445, 360, 577, 281, 2681, 2316, 295, 3256, 13, 50918, 50918, 663, 311, 382, 2199, 382, 300, 13, 51020, 51020, 407, 341, 307, 428, 700, 18161, 2533, 13, 51134, 51134, 400, 309, 775, 439, 264, 646, 2365, 6772, 13, 51338, 51338, 583, 291, 643, 281, 1223, 577, 646, 79, 1513, 1985, 13, 51480, 51480, 467, 311, 406, 570, 9953, 51, 284, 339, 775, 309, 337, 291, 51632, 51632, 300, 291, 393, 1333, 295, 2870, 466, 577, 291, 767, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.17692529053247275, "compression_ratio": 1.632, "no_speech_prob": 3.0415505989367375e-06}, {"id": 1197, "seek": 338016, "start": 3405.52, "end": 3409.3199999999997, "text": " that you can sort of forget about how you actually", "tokens": [50364, 370, 291, 393, 1884, 472, 510, 13, 50466, 50466, 1449, 818, 452, 7129, 293, 976, 309, 264, 2744, 382, 291, 528, 13, 50632, 50632, 400, 550, 281, 3079, 341, 281, 257, 1729, 3256, 11, 50752, 50752, 291, 445, 360, 577, 281, 2681, 2316, 295, 3256, 13, 50918, 50918, 663, 311, 382, 2199, 382, 300, 13, 51020, 51020, 407, 341, 307, 428, 700, 18161, 2533, 13, 51134, 51134, 400, 309, 775, 439, 264, 646, 2365, 6772, 13, 51338, 51338, 583, 291, 643, 281, 1223, 577, 646, 79, 1513, 1985, 13, 51480, 51480, 467, 311, 406, 570, 9953, 51, 284, 339, 775, 309, 337, 291, 51632, 51632, 300, 291, 393, 1333, 295, 2870, 466, 577, 291, 767, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.17692529053247275, "compression_ratio": 1.632, "no_speech_prob": 3.0415505989367375e-06}, {"id": 1198, "seek": 340932, "start": 3409.32, "end": 3411.6000000000004, "text": " compute the gradient of a function,", "tokens": [50364, 14722, 264, 16235, 295, 257, 2445, 11, 50478, 50478, 570, 309, 311, 21451, 300, 412, 512, 935, 11, 291, 434, 50598, 50598, 516, 281, 528, 281, 767, 22364, 257, 18161, 2533, 50712, 50712, 365, 257, 10088, 300, 775, 406, 659, 12, 18217, 11, 50794, 50794, 293, 291, 434, 516, 281, 362, 281, 2464, 428, 1065, 646, 79, 1513, 50906, 50906, 2445, 13, 50966, 50966, 407, 281, 360, 341, 11, 291, 1936, 362, 11, 51052, 51052, 498, 291, 528, 281, 1884, 257, 777, 10088, 365, 512, 3997, 51230, 51230, 6916, 300, 775, 406, 659, 12, 18217, 294, 9953, 51, 284, 339, 11, 51384, 51384, 550, 291, 360, 746, 411, 341, 13, 51516, 51516, 509, 6964, 257, 1508, 11, 457, 291, 2464, 428, 1065, 23897, 51706, 51706, 2445, 11, 1936, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.17260306222098215, "compression_ratio": 1.8269230769230769, "no_speech_prob": 3.943531191907823e-05}, {"id": 1199, "seek": 340932, "start": 3411.6000000000004, "end": 3414.0, "text": " because it's inevitable that at some point, you're", "tokens": [50364, 14722, 264, 16235, 295, 257, 2445, 11, 50478, 50478, 570, 309, 311, 21451, 300, 412, 512, 935, 11, 291, 434, 50598, 50598, 516, 281, 528, 281, 767, 22364, 257, 18161, 2533, 50712, 50712, 365, 257, 10088, 300, 775, 406, 659, 12, 18217, 11, 50794, 50794, 293, 291, 434, 516, 281, 362, 281, 2464, 428, 1065, 646, 79, 1513, 50906, 50906, 2445, 13, 50966, 50966, 407, 281, 360, 341, 11, 291, 1936, 362, 11, 51052, 51052, 498, 291, 528, 281, 1884, 257, 777, 10088, 365, 512, 3997, 51230, 51230, 6916, 300, 775, 406, 659, 12, 18217, 294, 9953, 51, 284, 339, 11, 51384, 51384, 550, 291, 360, 746, 411, 341, 13, 51516, 51516, 509, 6964, 257, 1508, 11, 457, 291, 2464, 428, 1065, 23897, 51706, 51706, 2445, 11, 1936, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.17260306222098215, "compression_ratio": 1.8269230769230769, "no_speech_prob": 3.943531191907823e-05}, {"id": 1200, "seek": 340932, "start": 3414.0, "end": 3416.28, "text": " going to want to actually assemble a neural net", "tokens": [50364, 14722, 264, 16235, 295, 257, 2445, 11, 50478, 50478, 570, 309, 311, 21451, 300, 412, 512, 935, 11, 291, 434, 50598, 50598, 516, 281, 528, 281, 767, 22364, 257, 18161, 2533, 50712, 50712, 365, 257, 10088, 300, 775, 406, 659, 12, 18217, 11, 50794, 50794, 293, 291, 434, 516, 281, 362, 281, 2464, 428, 1065, 646, 79, 1513, 50906, 50906, 2445, 13, 50966, 50966, 407, 281, 360, 341, 11, 291, 1936, 362, 11, 51052, 51052, 498, 291, 528, 281, 1884, 257, 777, 10088, 365, 512, 3997, 51230, 51230, 6916, 300, 775, 406, 659, 12, 18217, 294, 9953, 51, 284, 339, 11, 51384, 51384, 550, 291, 360, 746, 411, 341, 13, 51516, 51516, 509, 6964, 257, 1508, 11, 457, 291, 2464, 428, 1065, 23897, 51706, 51706, 2445, 11, 1936, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.17260306222098215, "compression_ratio": 1.8269230769230769, "no_speech_prob": 3.943531191907823e-05}, {"id": 1201, "seek": 340932, "start": 3416.28, "end": 3417.92, "text": " with a module that does not pre-exist,", "tokens": [50364, 14722, 264, 16235, 295, 257, 2445, 11, 50478, 50478, 570, 309, 311, 21451, 300, 412, 512, 935, 11, 291, 434, 50598, 50598, 516, 281, 528, 281, 767, 22364, 257, 18161, 2533, 50712, 50712, 365, 257, 10088, 300, 775, 406, 659, 12, 18217, 11, 50794, 50794, 293, 291, 434, 516, 281, 362, 281, 2464, 428, 1065, 646, 79, 1513, 50906, 50906, 2445, 13, 50966, 50966, 407, 281, 360, 341, 11, 291, 1936, 362, 11, 51052, 51052, 498, 291, 528, 281, 1884, 257, 777, 10088, 365, 512, 3997, 51230, 51230, 6916, 300, 775, 406, 659, 12, 18217, 294, 9953, 51, 284, 339, 11, 51384, 51384, 550, 291, 360, 746, 411, 341, 13, 51516, 51516, 509, 6964, 257, 1508, 11, 457, 291, 2464, 428, 1065, 23897, 51706, 51706, 2445, 11, 1936, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.17260306222098215, "compression_ratio": 1.8269230769230769, "no_speech_prob": 3.943531191907823e-05}, {"id": 1202, "seek": 340932, "start": 3417.92, "end": 3420.1600000000003, "text": " and you're going to have to write your own backprop", "tokens": [50364, 14722, 264, 16235, 295, 257, 2445, 11, 50478, 50478, 570, 309, 311, 21451, 300, 412, 512, 935, 11, 291, 434, 50598, 50598, 516, 281, 528, 281, 767, 22364, 257, 18161, 2533, 50712, 50712, 365, 257, 10088, 300, 775, 406, 659, 12, 18217, 11, 50794, 50794, 293, 291, 434, 516, 281, 362, 281, 2464, 428, 1065, 646, 79, 1513, 50906, 50906, 2445, 13, 50966, 50966, 407, 281, 360, 341, 11, 291, 1936, 362, 11, 51052, 51052, 498, 291, 528, 281, 1884, 257, 777, 10088, 365, 512, 3997, 51230, 51230, 6916, 300, 775, 406, 659, 12, 18217, 294, 9953, 51, 284, 339, 11, 51384, 51384, 550, 291, 360, 746, 411, 341, 13, 51516, 51516, 509, 6964, 257, 1508, 11, 457, 291, 2464, 428, 1065, 23897, 51706, 51706, 2445, 11, 1936, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.17260306222098215, "compression_ratio": 1.8269230769230769, "no_speech_prob": 3.943531191907823e-05}, {"id": 1203, "seek": 340932, "start": 3420.1600000000003, "end": 3421.36, "text": " function.", "tokens": [50364, 14722, 264, 16235, 295, 257, 2445, 11, 50478, 50478, 570, 309, 311, 21451, 300, 412, 512, 935, 11, 291, 434, 50598, 50598, 516, 281, 528, 281, 767, 22364, 257, 18161, 2533, 50712, 50712, 365, 257, 10088, 300, 775, 406, 659, 12, 18217, 11, 50794, 50794, 293, 291, 434, 516, 281, 362, 281, 2464, 428, 1065, 646, 79, 1513, 50906, 50906, 2445, 13, 50966, 50966, 407, 281, 360, 341, 11, 291, 1936, 362, 11, 51052, 51052, 498, 291, 528, 281, 1884, 257, 777, 10088, 365, 512, 3997, 51230, 51230, 6916, 300, 775, 406, 659, 12, 18217, 294, 9953, 51, 284, 339, 11, 51384, 51384, 550, 291, 360, 746, 411, 341, 13, 51516, 51516, 509, 6964, 257, 1508, 11, 457, 291, 2464, 428, 1065, 23897, 51706, 51706, 2445, 11, 1936, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.17260306222098215, "compression_ratio": 1.8269230769230769, "no_speech_prob": 3.943531191907823e-05}, {"id": 1204, "seek": 340932, "start": 3421.36, "end": 3423.0800000000004, "text": " So to do this, you basically have,", "tokens": [50364, 14722, 264, 16235, 295, 257, 2445, 11, 50478, 50478, 570, 309, 311, 21451, 300, 412, 512, 935, 11, 291, 434, 50598, 50598, 516, 281, 528, 281, 767, 22364, 257, 18161, 2533, 50712, 50712, 365, 257, 10088, 300, 775, 406, 659, 12, 18217, 11, 50794, 50794, 293, 291, 434, 516, 281, 362, 281, 2464, 428, 1065, 646, 79, 1513, 50906, 50906, 2445, 13, 50966, 50966, 407, 281, 360, 341, 11, 291, 1936, 362, 11, 51052, 51052, 498, 291, 528, 281, 1884, 257, 777, 10088, 365, 512, 3997, 51230, 51230, 6916, 300, 775, 406, 659, 12, 18217, 294, 9953, 51, 284, 339, 11, 51384, 51384, 550, 291, 360, 746, 411, 341, 13, 51516, 51516, 509, 6964, 257, 1508, 11, 457, 291, 2464, 428, 1065, 23897, 51706, 51706, 2445, 11, 1936, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.17260306222098215, "compression_ratio": 1.8269230769230769, "no_speech_prob": 3.943531191907823e-05}, {"id": 1205, "seek": 340932, "start": 3423.0800000000004, "end": 3426.6400000000003, "text": " if you want to create a new module with some complex", "tokens": [50364, 14722, 264, 16235, 295, 257, 2445, 11, 50478, 50478, 570, 309, 311, 21451, 300, 412, 512, 935, 11, 291, 434, 50598, 50598, 516, 281, 528, 281, 767, 22364, 257, 18161, 2533, 50712, 50712, 365, 257, 10088, 300, 775, 406, 659, 12, 18217, 11, 50794, 50794, 293, 291, 434, 516, 281, 362, 281, 2464, 428, 1065, 646, 79, 1513, 50906, 50906, 2445, 13, 50966, 50966, 407, 281, 360, 341, 11, 291, 1936, 362, 11, 51052, 51052, 498, 291, 528, 281, 1884, 257, 777, 10088, 365, 512, 3997, 51230, 51230, 6916, 300, 775, 406, 659, 12, 18217, 294, 9953, 51, 284, 339, 11, 51384, 51384, 550, 291, 360, 746, 411, 341, 13, 51516, 51516, 509, 6964, 257, 1508, 11, 457, 291, 2464, 428, 1065, 23897, 51706, 51706, 2445, 11, 1936, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.17260306222098215, "compression_ratio": 1.8269230769230769, "no_speech_prob": 3.943531191907823e-05}, {"id": 1206, "seek": 340932, "start": 3426.6400000000003, "end": 3429.7200000000003, "text": " operation that does not pre-exist in PyTorch,", "tokens": [50364, 14722, 264, 16235, 295, 257, 2445, 11, 50478, 50478, 570, 309, 311, 21451, 300, 412, 512, 935, 11, 291, 434, 50598, 50598, 516, 281, 528, 281, 767, 22364, 257, 18161, 2533, 50712, 50712, 365, 257, 10088, 300, 775, 406, 659, 12, 18217, 11, 50794, 50794, 293, 291, 434, 516, 281, 362, 281, 2464, 428, 1065, 646, 79, 1513, 50906, 50906, 2445, 13, 50966, 50966, 407, 281, 360, 341, 11, 291, 1936, 362, 11, 51052, 51052, 498, 291, 528, 281, 1884, 257, 777, 10088, 365, 512, 3997, 51230, 51230, 6916, 300, 775, 406, 659, 12, 18217, 294, 9953, 51, 284, 339, 11, 51384, 51384, 550, 291, 360, 746, 411, 341, 13, 51516, 51516, 509, 6964, 257, 1508, 11, 457, 291, 2464, 428, 1065, 23897, 51706, 51706, 2445, 11, 1936, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.17260306222098215, "compression_ratio": 1.8269230769230769, "no_speech_prob": 3.943531191907823e-05}, {"id": 1207, "seek": 340932, "start": 3429.7200000000003, "end": 3432.36, "text": " then you do something like this.", "tokens": [50364, 14722, 264, 16235, 295, 257, 2445, 11, 50478, 50478, 570, 309, 311, 21451, 300, 412, 512, 935, 11, 291, 434, 50598, 50598, 516, 281, 528, 281, 767, 22364, 257, 18161, 2533, 50712, 50712, 365, 257, 10088, 300, 775, 406, 659, 12, 18217, 11, 50794, 50794, 293, 291, 434, 516, 281, 362, 281, 2464, 428, 1065, 646, 79, 1513, 50906, 50906, 2445, 13, 50966, 50966, 407, 281, 360, 341, 11, 291, 1936, 362, 11, 51052, 51052, 498, 291, 528, 281, 1884, 257, 777, 10088, 365, 512, 3997, 51230, 51230, 6916, 300, 775, 406, 659, 12, 18217, 294, 9953, 51, 284, 339, 11, 51384, 51384, 550, 291, 360, 746, 411, 341, 13, 51516, 51516, 509, 6964, 257, 1508, 11, 457, 291, 2464, 428, 1065, 23897, 51706, 51706, 2445, 11, 1936, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.17260306222098215, "compression_ratio": 1.8269230769230769, "no_speech_prob": 3.943531191907823e-05}, {"id": 1208, "seek": 340932, "start": 3432.36, "end": 3436.1600000000003, "text": " You define a class, but you write your own backward", "tokens": [50364, 14722, 264, 16235, 295, 257, 2445, 11, 50478, 50478, 570, 309, 311, 21451, 300, 412, 512, 935, 11, 291, 434, 50598, 50598, 516, 281, 528, 281, 767, 22364, 257, 18161, 2533, 50712, 50712, 365, 257, 10088, 300, 775, 406, 659, 12, 18217, 11, 50794, 50794, 293, 291, 434, 516, 281, 362, 281, 2464, 428, 1065, 646, 79, 1513, 50906, 50906, 2445, 13, 50966, 50966, 407, 281, 360, 341, 11, 291, 1936, 362, 11, 51052, 51052, 498, 291, 528, 281, 1884, 257, 777, 10088, 365, 512, 3997, 51230, 51230, 6916, 300, 775, 406, 659, 12, 18217, 294, 9953, 51, 284, 339, 11, 51384, 51384, 550, 291, 360, 746, 411, 341, 13, 51516, 51516, 509, 6964, 257, 1508, 11, 457, 291, 2464, 428, 1065, 23897, 51706, 51706, 2445, 11, 1936, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.17260306222098215, "compression_ratio": 1.8269230769230769, "no_speech_prob": 3.943531191907823e-05}, {"id": 1209, "seek": 340932, "start": 3436.1600000000003, "end": 3439.1600000000003, "text": " function, basically.", "tokens": [50364, 14722, 264, 16235, 295, 257, 2445, 11, 50478, 50478, 570, 309, 311, 21451, 300, 412, 512, 935, 11, 291, 434, 50598, 50598, 516, 281, 528, 281, 767, 22364, 257, 18161, 2533, 50712, 50712, 365, 257, 10088, 300, 775, 406, 659, 12, 18217, 11, 50794, 50794, 293, 291, 434, 516, 281, 362, 281, 2464, 428, 1065, 646, 79, 1513, 50906, 50906, 2445, 13, 50966, 50966, 407, 281, 360, 341, 11, 291, 1936, 362, 11, 51052, 51052, 498, 291, 528, 281, 1884, 257, 777, 10088, 365, 512, 3997, 51230, 51230, 6916, 300, 775, 406, 659, 12, 18217, 294, 9953, 51, 284, 339, 11, 51384, 51384, 550, 291, 360, 746, 411, 341, 13, 51516, 51516, 509, 6964, 257, 1508, 11, 457, 291, 2464, 428, 1065, 23897, 51706, 51706, 2445, 11, 1936, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.17260306222098215, "compression_ratio": 1.8269230769230769, "no_speech_prob": 3.943531191907823e-05}, {"id": 1210, "seek": 343916, "start": 3439.16, "end": 3445.44, "text": " OK, so let's get one step up in terms of abstraction", "tokens": [50364, 2264, 11, 370, 718, 311, 483, 472, 1823, 493, 294, 2115, 295, 37765, 50678, 50678, 293, 2464, 341, 294, 1333, 295, 4748, 544, 50968, 50968, 19577, 1254, 11, 18894, 1254, 11, 498, 291, 528, 13, 51138, 51138, 407, 718, 311, 584, 321, 362, 257, 2063, 2445, 510, 11, 51364, 51364, 293, 321, 528, 281, 14722, 264, 16235, 295, 341, 2063, 2445, 51572, 51572, 365, 3104, 281, 257, 1729, 8062, 294, 264, 1185, 11, 710, 69, 13, 51710, 51710, 467, 727, 312, 257, 13075, 13, 51762, 51762, 467, 727, 312, 257, 1785, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1996136705080668, "compression_ratio": 1.6267942583732058, "no_speech_prob": 6.5402100517530926e-06}, {"id": 1211, "seek": 343916, "start": 3445.44, "end": 3451.24, "text": " and write this in sort of slightly more", "tokens": [50364, 2264, 11, 370, 718, 311, 483, 472, 1823, 493, 294, 2115, 295, 37765, 50678, 50678, 293, 2464, 341, 294, 1333, 295, 4748, 544, 50968, 50968, 19577, 1254, 11, 18894, 1254, 11, 498, 291, 528, 13, 51138, 51138, 407, 718, 311, 584, 321, 362, 257, 2063, 2445, 510, 11, 51364, 51364, 293, 321, 528, 281, 14722, 264, 16235, 295, 341, 2063, 2445, 51572, 51572, 365, 3104, 281, 257, 1729, 8062, 294, 264, 1185, 11, 710, 69, 13, 51710, 51710, 467, 727, 312, 257, 13075, 13, 51762, 51762, 467, 727, 312, 257, 1785, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1996136705080668, "compression_ratio": 1.6267942583732058, "no_speech_prob": 6.5402100517530926e-06}, {"id": 1212, "seek": 343916, "start": 3451.24, "end": 3454.64, "text": " generic form, mathematical form, if you want.", "tokens": [50364, 2264, 11, 370, 718, 311, 483, 472, 1823, 493, 294, 2115, 295, 37765, 50678, 50678, 293, 2464, 341, 294, 1333, 295, 4748, 544, 50968, 50968, 19577, 1254, 11, 18894, 1254, 11, 498, 291, 528, 13, 51138, 51138, 407, 718, 311, 584, 321, 362, 257, 2063, 2445, 510, 11, 51364, 51364, 293, 321, 528, 281, 14722, 264, 16235, 295, 341, 2063, 2445, 51572, 51572, 365, 3104, 281, 257, 1729, 8062, 294, 264, 1185, 11, 710, 69, 13, 51710, 51710, 467, 727, 312, 257, 13075, 13, 51762, 51762, 467, 727, 312, 257, 1785, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1996136705080668, "compression_ratio": 1.6267942583732058, "no_speech_prob": 6.5402100517530926e-06}, {"id": 1213, "seek": 343916, "start": 3454.64, "end": 3459.16, "text": " So let's say we have a cost function here,", "tokens": [50364, 2264, 11, 370, 718, 311, 483, 472, 1823, 493, 294, 2115, 295, 37765, 50678, 50678, 293, 2464, 341, 294, 1333, 295, 4748, 544, 50968, 50968, 19577, 1254, 11, 18894, 1254, 11, 498, 291, 528, 13, 51138, 51138, 407, 718, 311, 584, 321, 362, 257, 2063, 2445, 510, 11, 51364, 51364, 293, 321, 528, 281, 14722, 264, 16235, 295, 341, 2063, 2445, 51572, 51572, 365, 3104, 281, 257, 1729, 8062, 294, 264, 1185, 11, 710, 69, 13, 51710, 51710, 467, 727, 312, 257, 13075, 13, 51762, 51762, 467, 727, 312, 257, 1785, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1996136705080668, "compression_ratio": 1.6267942583732058, "no_speech_prob": 6.5402100517530926e-06}, {"id": 1214, "seek": 343916, "start": 3459.16, "end": 3463.3199999999997, "text": " and we want to compute the gradient of this cost function", "tokens": [50364, 2264, 11, 370, 718, 311, 483, 472, 1823, 493, 294, 2115, 295, 37765, 50678, 50678, 293, 2464, 341, 294, 1333, 295, 4748, 544, 50968, 50968, 19577, 1254, 11, 18894, 1254, 11, 498, 291, 528, 13, 51138, 51138, 407, 718, 311, 584, 321, 362, 257, 2063, 2445, 510, 11, 51364, 51364, 293, 321, 528, 281, 14722, 264, 16235, 295, 341, 2063, 2445, 51572, 51572, 365, 3104, 281, 257, 1729, 8062, 294, 264, 1185, 11, 710, 69, 13, 51710, 51710, 467, 727, 312, 257, 13075, 13, 51762, 51762, 467, 727, 312, 257, 1785, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1996136705080668, "compression_ratio": 1.6267942583732058, "no_speech_prob": 6.5402100517530926e-06}, {"id": 1215, "seek": 343916, "start": 3463.3199999999997, "end": 3466.08, "text": " with respect to a particular vector in the system, zf.", "tokens": [50364, 2264, 11, 370, 718, 311, 483, 472, 1823, 493, 294, 2115, 295, 37765, 50678, 50678, 293, 2464, 341, 294, 1333, 295, 4748, 544, 50968, 50968, 19577, 1254, 11, 18894, 1254, 11, 498, 291, 528, 13, 51138, 51138, 407, 718, 311, 584, 321, 362, 257, 2063, 2445, 510, 11, 51364, 51364, 293, 321, 528, 281, 14722, 264, 16235, 295, 341, 2063, 2445, 51572, 51572, 365, 3104, 281, 257, 1729, 8062, 294, 264, 1185, 11, 710, 69, 13, 51710, 51710, 467, 727, 312, 257, 13075, 13, 51762, 51762, 467, 727, 312, 257, 1785, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1996136705080668, "compression_ratio": 1.6267942583732058, "no_speech_prob": 6.5402100517530926e-06}, {"id": 1216, "seek": 343916, "start": 3466.08, "end": 3467.12, "text": " It could be a parameter.", "tokens": [50364, 2264, 11, 370, 718, 311, 483, 472, 1823, 493, 294, 2115, 295, 37765, 50678, 50678, 293, 2464, 341, 294, 1333, 295, 4748, 544, 50968, 50968, 19577, 1254, 11, 18894, 1254, 11, 498, 291, 528, 13, 51138, 51138, 407, 718, 311, 584, 321, 362, 257, 2063, 2445, 510, 11, 51364, 51364, 293, 321, 528, 281, 14722, 264, 16235, 295, 341, 2063, 2445, 51572, 51572, 365, 3104, 281, 257, 1729, 8062, 294, 264, 1185, 11, 710, 69, 13, 51710, 51710, 467, 727, 312, 257, 13075, 13, 51762, 51762, 467, 727, 312, 257, 1785, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1996136705080668, "compression_ratio": 1.6267942583732058, "no_speech_prob": 6.5402100517530926e-06}, {"id": 1217, "seek": 343916, "start": 3467.12, "end": 3467.92, "text": " It could be a state.", "tokens": [50364, 2264, 11, 370, 718, 311, 483, 472, 1823, 493, 294, 2115, 295, 37765, 50678, 50678, 293, 2464, 341, 294, 1333, 295, 4748, 544, 50968, 50968, 19577, 1254, 11, 18894, 1254, 11, 498, 291, 528, 13, 51138, 51138, 407, 718, 311, 584, 321, 362, 257, 2063, 2445, 510, 11, 51364, 51364, 293, 321, 528, 281, 14722, 264, 16235, 295, 341, 2063, 2445, 51572, 51572, 365, 3104, 281, 257, 1729, 8062, 294, 264, 1185, 11, 710, 69, 13, 51710, 51710, 467, 727, 312, 257, 13075, 13, 51762, 51762, 467, 727, 312, 257, 1785, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1996136705080668, "compression_ratio": 1.6267942583732058, "no_speech_prob": 6.5402100517530926e-06}, {"id": 1218, "seek": 346792, "start": 3467.92, "end": 3469.76, "text": " It doesn't matter.", "tokens": [50364, 467, 1177, 380, 1871, 13, 50456, 50456, 2188, 4368, 1854, 13, 50656, 50656, 400, 321, 362, 5021, 4978, 13, 50704, 50704, 400, 5021, 4978, 307, 1825, 544, 813, 341, 50792, 50792, 300, 286, 8825, 3071, 13, 50902, 50902, 274, 66, 670, 9758, 69, 307, 2681, 281, 274, 66, 670, 9758, 70, 11, 9758, 70, 670, 9758, 69, 13, 51098, 51098, 1018, 938, 382, 269, 307, 787, 15269, 538, 710, 69, 807, 710, 70, 11, 51498, 51498, 456, 307, 572, 661, 636, 337, 710, 69, 281, 6503, 269, 813, 281, 352, 51668, 51668, 807, 710, 70, 11, 550, 341, 8513, 307, 3006, 13, 51768], "temperature": 0.0, "avg_logprob": -0.16275322323753721, "compression_ratio": 1.703125, "no_speech_prob": 7.182686658779858e-06}, {"id": 1219, "seek": 346792, "start": 3469.76, "end": 3473.76, "text": " Some states inside.", "tokens": [50364, 467, 1177, 380, 1871, 13, 50456, 50456, 2188, 4368, 1854, 13, 50656, 50656, 400, 321, 362, 5021, 4978, 13, 50704, 50704, 400, 5021, 4978, 307, 1825, 544, 813, 341, 50792, 50792, 300, 286, 8825, 3071, 13, 50902, 50902, 274, 66, 670, 9758, 69, 307, 2681, 281, 274, 66, 670, 9758, 70, 11, 9758, 70, 670, 9758, 69, 13, 51098, 51098, 1018, 938, 382, 269, 307, 787, 15269, 538, 710, 69, 807, 710, 70, 11, 51498, 51498, 456, 307, 572, 661, 636, 337, 710, 69, 281, 6503, 269, 813, 281, 352, 51668, 51668, 807, 710, 70, 11, 550, 341, 8513, 307, 3006, 13, 51768], "temperature": 0.0, "avg_logprob": -0.16275322323753721, "compression_ratio": 1.703125, "no_speech_prob": 7.182686658779858e-06}, {"id": 1220, "seek": 346792, "start": 3473.76, "end": 3474.7200000000003, "text": " And we have chain rule.", "tokens": [50364, 467, 1177, 380, 1871, 13, 50456, 50456, 2188, 4368, 1854, 13, 50656, 50656, 400, 321, 362, 5021, 4978, 13, 50704, 50704, 400, 5021, 4978, 307, 1825, 544, 813, 341, 50792, 50792, 300, 286, 8825, 3071, 13, 50902, 50902, 274, 66, 670, 9758, 69, 307, 2681, 281, 274, 66, 670, 9758, 70, 11, 9758, 70, 670, 9758, 69, 13, 51098, 51098, 1018, 938, 382, 269, 307, 787, 15269, 538, 710, 69, 807, 710, 70, 11, 51498, 51498, 456, 307, 572, 661, 636, 337, 710, 69, 281, 6503, 269, 813, 281, 352, 51668, 51668, 807, 710, 70, 11, 550, 341, 8513, 307, 3006, 13, 51768], "temperature": 0.0, "avg_logprob": -0.16275322323753721, "compression_ratio": 1.703125, "no_speech_prob": 7.182686658779858e-06}, {"id": 1221, "seek": 346792, "start": 3474.7200000000003, "end": 3476.48, "text": " And chain rule is nothing more than this", "tokens": [50364, 467, 1177, 380, 1871, 13, 50456, 50456, 2188, 4368, 1854, 13, 50656, 50656, 400, 321, 362, 5021, 4978, 13, 50704, 50704, 400, 5021, 4978, 307, 1825, 544, 813, 341, 50792, 50792, 300, 286, 8825, 3071, 13, 50902, 50902, 274, 66, 670, 9758, 69, 307, 2681, 281, 274, 66, 670, 9758, 70, 11, 9758, 70, 670, 9758, 69, 13, 51098, 51098, 1018, 938, 382, 269, 307, 787, 15269, 538, 710, 69, 807, 710, 70, 11, 51498, 51498, 456, 307, 572, 661, 636, 337, 710, 69, 281, 6503, 269, 813, 281, 352, 51668, 51668, 807, 710, 70, 11, 550, 341, 8513, 307, 3006, 13, 51768], "temperature": 0.0, "avg_logprob": -0.16275322323753721, "compression_ratio": 1.703125, "no_speech_prob": 7.182686658779858e-06}, {"id": 1222, "seek": 346792, "start": 3476.48, "end": 3478.6800000000003, "text": " that I explained earlier.", "tokens": [50364, 467, 1177, 380, 1871, 13, 50456, 50456, 2188, 4368, 1854, 13, 50656, 50656, 400, 321, 362, 5021, 4978, 13, 50704, 50704, 400, 5021, 4978, 307, 1825, 544, 813, 341, 50792, 50792, 300, 286, 8825, 3071, 13, 50902, 50902, 274, 66, 670, 9758, 69, 307, 2681, 281, 274, 66, 670, 9758, 70, 11, 9758, 70, 670, 9758, 69, 13, 51098, 51098, 1018, 938, 382, 269, 307, 787, 15269, 538, 710, 69, 807, 710, 70, 11, 51498, 51498, 456, 307, 572, 661, 636, 337, 710, 69, 281, 6503, 269, 813, 281, 352, 51668, 51668, 807, 710, 70, 11, 550, 341, 8513, 307, 3006, 13, 51768], "temperature": 0.0, "avg_logprob": -0.16275322323753721, "compression_ratio": 1.703125, "no_speech_prob": 7.182686658779858e-06}, {"id": 1223, "seek": 346792, "start": 3478.6800000000003, "end": 3482.6, "text": " dc over dzf is equal to dc over dzg, dzg over dzf.", "tokens": [50364, 467, 1177, 380, 1871, 13, 50456, 50456, 2188, 4368, 1854, 13, 50656, 50656, 400, 321, 362, 5021, 4978, 13, 50704, 50704, 400, 5021, 4978, 307, 1825, 544, 813, 341, 50792, 50792, 300, 286, 8825, 3071, 13, 50902, 50902, 274, 66, 670, 9758, 69, 307, 2681, 281, 274, 66, 670, 9758, 70, 11, 9758, 70, 670, 9758, 69, 13, 51098, 51098, 1018, 938, 382, 269, 307, 787, 15269, 538, 710, 69, 807, 710, 70, 11, 51498, 51498, 456, 307, 572, 661, 636, 337, 710, 69, 281, 6503, 269, 813, 281, 352, 51668, 51668, 807, 710, 70, 11, 550, 341, 8513, 307, 3006, 13, 51768], "temperature": 0.0, "avg_logprob": -0.16275322323753721, "compression_ratio": 1.703125, "no_speech_prob": 7.182686658779858e-06}, {"id": 1224, "seek": 346792, "start": 3482.6, "end": 3490.6, "text": " As long as c is only influenced by zf through zg,", "tokens": [50364, 467, 1177, 380, 1871, 13, 50456, 50456, 2188, 4368, 1854, 13, 50656, 50656, 400, 321, 362, 5021, 4978, 13, 50704, 50704, 400, 5021, 4978, 307, 1825, 544, 813, 341, 50792, 50792, 300, 286, 8825, 3071, 13, 50902, 50902, 274, 66, 670, 9758, 69, 307, 2681, 281, 274, 66, 670, 9758, 70, 11, 9758, 70, 670, 9758, 69, 13, 51098, 51098, 1018, 938, 382, 269, 307, 787, 15269, 538, 710, 69, 807, 710, 70, 11, 51498, 51498, 456, 307, 572, 661, 636, 337, 710, 69, 281, 6503, 269, 813, 281, 352, 51668, 51668, 807, 710, 70, 11, 550, 341, 8513, 307, 3006, 13, 51768], "temperature": 0.0, "avg_logprob": -0.16275322323753721, "compression_ratio": 1.703125, "no_speech_prob": 7.182686658779858e-06}, {"id": 1225, "seek": 346792, "start": 3490.6, "end": 3494.0, "text": " there is no other way for zf to influence c than to go", "tokens": [50364, 467, 1177, 380, 1871, 13, 50456, 50456, 2188, 4368, 1854, 13, 50656, 50656, 400, 321, 362, 5021, 4978, 13, 50704, 50704, 400, 5021, 4978, 307, 1825, 544, 813, 341, 50792, 50792, 300, 286, 8825, 3071, 13, 50902, 50902, 274, 66, 670, 9758, 69, 307, 2681, 281, 274, 66, 670, 9758, 70, 11, 9758, 70, 670, 9758, 69, 13, 51098, 51098, 1018, 938, 382, 269, 307, 787, 15269, 538, 710, 69, 807, 710, 70, 11, 51498, 51498, 456, 307, 572, 661, 636, 337, 710, 69, 281, 6503, 269, 813, 281, 352, 51668, 51668, 807, 710, 70, 11, 550, 341, 8513, 307, 3006, 13, 51768], "temperature": 0.0, "avg_logprob": -0.16275322323753721, "compression_ratio": 1.703125, "no_speech_prob": 7.182686658779858e-06}, {"id": 1226, "seek": 349400, "start": 3494.0, "end": 3498.48, "text": " through zg, then this formula is correct.", "tokens": [50364, 807, 710, 70, 11, 550, 341, 8513, 307, 3006, 13, 50588, 50588, 400, 295, 1164, 11, 264, 6575, 307, 26703, 50682, 50682, 570, 309, 311, 445, 257, 6883, 3774, 50746, 50746, 538, 341, 7193, 3324, 10650, 8062, 11275, 9758, 70, 13, 51154, 51154, 407, 718, 311, 584, 710, 70, 307, 257, 8062, 295, 2744, 274, 70, 538, 502, 13, 51376, 51376, 407, 341, 1355, 257, 7738, 8062, 13, 51510, 51510], "temperature": 0.0, "avg_logprob": -0.1172406276067098, "compression_ratio": 1.4444444444444444, "no_speech_prob": 3.7851930301258108e-06}, {"id": 1227, "seek": 349400, "start": 3498.48, "end": 3500.36, "text": " And of course, the identity is trivial", "tokens": [50364, 807, 710, 70, 11, 550, 341, 8513, 307, 3006, 13, 50588, 50588, 400, 295, 1164, 11, 264, 6575, 307, 26703, 50682, 50682, 570, 309, 311, 445, 257, 6883, 3774, 50746, 50746, 538, 341, 7193, 3324, 10650, 8062, 11275, 9758, 70, 13, 51154, 51154, 407, 718, 311, 584, 710, 70, 307, 257, 8062, 295, 2744, 274, 70, 538, 502, 13, 51376, 51376, 407, 341, 1355, 257, 7738, 8062, 13, 51510, 51510], "temperature": 0.0, "avg_logprob": -0.1172406276067098, "compression_ratio": 1.4444444444444444, "no_speech_prob": 3.7851930301258108e-06}, {"id": 1228, "seek": 349400, "start": 3500.36, "end": 3501.64, "text": " because it's just a simplification", "tokens": [50364, 807, 710, 70, 11, 550, 341, 8513, 307, 3006, 13, 50588, 50588, 400, 295, 1164, 11, 264, 6575, 307, 26703, 50682, 50682, 570, 309, 311, 445, 257, 6883, 3774, 50746, 50746, 538, 341, 7193, 3324, 10650, 8062, 11275, 9758, 70, 13, 51154, 51154, 407, 718, 311, 584, 710, 70, 307, 257, 8062, 295, 2744, 274, 70, 538, 502, 13, 51376, 51376, 407, 341, 1355, 257, 7738, 8062, 13, 51510, 51510], "temperature": 0.0, "avg_logprob": -0.1172406276067098, "compression_ratio": 1.4444444444444444, "no_speech_prob": 3.7851930301258108e-06}, {"id": 1229, "seek": 349400, "start": 3501.64, "end": 3509.8, "text": " by this infinitesimal vector quantity dzg.", "tokens": [50364, 807, 710, 70, 11, 550, 341, 8513, 307, 3006, 13, 50588, 50588, 400, 295, 1164, 11, 264, 6575, 307, 26703, 50682, 50682, 570, 309, 311, 445, 257, 6883, 3774, 50746, 50746, 538, 341, 7193, 3324, 10650, 8062, 11275, 9758, 70, 13, 51154, 51154, 407, 718, 311, 584, 710, 70, 307, 257, 8062, 295, 2744, 274, 70, 538, 502, 13, 51376, 51376, 407, 341, 1355, 257, 7738, 8062, 13, 51510, 51510], "temperature": 0.0, "avg_logprob": -0.1172406276067098, "compression_ratio": 1.4444444444444444, "no_speech_prob": 3.7851930301258108e-06}, {"id": 1230, "seek": 349400, "start": 3509.8, "end": 3514.24, "text": " So let's say zg is a vector of size dg by 1.", "tokens": [50364, 807, 710, 70, 11, 550, 341, 8513, 307, 3006, 13, 50588, 50588, 400, 295, 1164, 11, 264, 6575, 307, 26703, 50682, 50682, 570, 309, 311, 445, 257, 6883, 3774, 50746, 50746, 538, 341, 7193, 3324, 10650, 8062, 11275, 9758, 70, 13, 51154, 51154, 407, 718, 311, 584, 710, 70, 307, 257, 8062, 295, 2744, 274, 70, 538, 502, 13, 51376, 51376, 407, 341, 1355, 257, 7738, 8062, 13, 51510, 51510], "temperature": 0.0, "avg_logprob": -0.1172406276067098, "compression_ratio": 1.4444444444444444, "no_speech_prob": 3.7851930301258108e-06}, {"id": 1231, "seek": 349400, "start": 3514.24, "end": 3516.92, "text": " So this means a column vector.", "tokens": [50364, 807, 710, 70, 11, 550, 341, 8513, 307, 3006, 13, 50588, 50588, 400, 295, 1164, 11, 264, 6575, 307, 26703, 50682, 50682, 570, 309, 311, 445, 257, 6883, 3774, 50746, 50746, 538, 341, 7193, 3324, 10650, 8062, 11275, 9758, 70, 13, 51154, 51154, 407, 718, 311, 584, 710, 70, 307, 257, 8062, 295, 2744, 274, 70, 538, 502, 13, 51376, 51376, 407, 341, 1355, 257, 7738, 8062, 13, 51510, 51510], "temperature": 0.0, "avg_logprob": -0.1172406276067098, "compression_ratio": 1.4444444444444444, "no_speech_prob": 3.7851930301258108e-06}, {"id": 1232, "seek": 351692, "start": 3516.92, "end": 3525.7200000000003, "text": " And zf is a column vector of size df.", "tokens": [50364, 400, 710, 69, 307, 257, 7738, 8062, 295, 2744, 274, 69, 13, 50804, 50804, 639, 307, 11, 498, 321, 528, 281, 2464, 264, 3006, 12819, 295, 341, 11, 51172, 51172, 321, 483, 746, 257, 707, 6179, 13, 51280, 51280, 407, 700, 295, 439, 11, 341, 2657, 510, 11, 9758, 670, 9758, 70, 670, 9758, 69, 13, 51630, 51630, 1042, 11, 718, 385, 722, 365, 341, 472, 13, 51702, 51702, 639, 472, 11, 274, 66, 670, 9758, 70, 11, 300, 311, 257, 16235, 8062, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1618108315901323, "compression_ratio": 1.547486033519553, "no_speech_prob": 2.4059963834588416e-06}, {"id": 1233, "seek": 351692, "start": 3525.7200000000003, "end": 3533.08, "text": " This is, if we want to write the correct dimensions of this,", "tokens": [50364, 400, 710, 69, 307, 257, 7738, 8062, 295, 2744, 274, 69, 13, 50804, 50804, 639, 307, 11, 498, 321, 528, 281, 2464, 264, 3006, 12819, 295, 341, 11, 51172, 51172, 321, 483, 746, 257, 707, 6179, 13, 51280, 51280, 407, 700, 295, 439, 11, 341, 2657, 510, 11, 9758, 670, 9758, 70, 670, 9758, 69, 13, 51630, 51630, 1042, 11, 718, 385, 722, 365, 341, 472, 13, 51702, 51702, 639, 472, 11, 274, 66, 670, 9758, 70, 11, 300, 311, 257, 16235, 8062, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1618108315901323, "compression_ratio": 1.547486033519553, "no_speech_prob": 2.4059963834588416e-06}, {"id": 1234, "seek": 351692, "start": 3533.08, "end": 3535.2400000000002, "text": " we get something a little complicated.", "tokens": [50364, 400, 710, 69, 307, 257, 7738, 8062, 295, 2744, 274, 69, 13, 50804, 50804, 639, 307, 11, 498, 321, 528, 281, 2464, 264, 3006, 12819, 295, 341, 11, 51172, 51172, 321, 483, 746, 257, 707, 6179, 13, 51280, 51280, 407, 700, 295, 439, 11, 341, 2657, 510, 11, 9758, 670, 9758, 70, 670, 9758, 69, 13, 51630, 51630, 1042, 11, 718, 385, 722, 365, 341, 472, 13, 51702, 51702, 639, 472, 11, 274, 66, 670, 9758, 70, 11, 300, 311, 257, 16235, 8062, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1618108315901323, "compression_ratio": 1.547486033519553, "no_speech_prob": 2.4059963834588416e-06}, {"id": 1235, "seek": 351692, "start": 3535.2400000000002, "end": 3542.2400000000002, "text": " So first of all, this object here, dz over dzg over dzf.", "tokens": [50364, 400, 710, 69, 307, 257, 7738, 8062, 295, 2744, 274, 69, 13, 50804, 50804, 639, 307, 11, 498, 321, 528, 281, 2464, 264, 3006, 12819, 295, 341, 11, 51172, 51172, 321, 483, 746, 257, 707, 6179, 13, 51280, 51280, 407, 700, 295, 439, 11, 341, 2657, 510, 11, 9758, 670, 9758, 70, 670, 9758, 69, 13, 51630, 51630, 1042, 11, 718, 385, 722, 365, 341, 472, 13, 51702, 51702, 639, 472, 11, 274, 66, 670, 9758, 70, 11, 300, 311, 257, 16235, 8062, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1618108315901323, "compression_ratio": 1.547486033519553, "no_speech_prob": 2.4059963834588416e-06}, {"id": 1236, "seek": 351692, "start": 3542.2400000000002, "end": 3543.6800000000003, "text": " Well, let me start with this one.", "tokens": [50364, 400, 710, 69, 307, 257, 7738, 8062, 295, 2744, 274, 69, 13, 50804, 50804, 639, 307, 11, 498, 321, 528, 281, 2464, 264, 3006, 12819, 295, 341, 11, 51172, 51172, 321, 483, 746, 257, 707, 6179, 13, 51280, 51280, 407, 700, 295, 439, 11, 341, 2657, 510, 11, 9758, 670, 9758, 70, 670, 9758, 69, 13, 51630, 51630, 1042, 11, 718, 385, 722, 365, 341, 472, 13, 51702, 51702, 639, 472, 11, 274, 66, 670, 9758, 70, 11, 300, 311, 257, 16235, 8062, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1618108315901323, "compression_ratio": 1.547486033519553, "no_speech_prob": 2.4059963834588416e-06}, {"id": 1237, "seek": 351692, "start": 3543.6800000000003, "end": 3546.4, "text": " This one, dc over dzg, that's a gradient vector.", "tokens": [50364, 400, 710, 69, 307, 257, 7738, 8062, 295, 2744, 274, 69, 13, 50804, 50804, 639, 307, 11, 498, 321, 528, 281, 2464, 264, 3006, 12819, 295, 341, 11, 51172, 51172, 321, 483, 746, 257, 707, 6179, 13, 51280, 51280, 407, 700, 295, 439, 11, 341, 2657, 510, 11, 9758, 670, 9758, 70, 670, 9758, 69, 13, 51630, 51630, 1042, 11, 718, 385, 722, 365, 341, 472, 13, 51702, 51702, 639, 472, 11, 274, 66, 670, 9758, 70, 11, 300, 311, 257, 16235, 8062, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1618108315901323, "compression_ratio": 1.547486033519553, "no_speech_prob": 2.4059963834588416e-06}, {"id": 1238, "seek": 354640, "start": 3546.4, "end": 3547.4, "text": " dzg is a vector.", "tokens": [50364, 9758, 70, 307, 257, 8062, 13, 50414, 50414, 274, 66, 670, 9758, 70, 307, 257, 16235, 8062, 13, 50598, 50598, 400, 309, 311, 264, 912, 2744, 382, 9758, 70, 13, 50684, 50684, 583, 538, 10286, 11, 321, 767, 2464, 309, 50836, 50836, 382, 257, 5386, 8062, 13, 50996, 50996, 407, 341, 551, 510, 307, 516, 281, 312, 257, 5386, 8062, 6104, 2744, 51168, 51168, 307, 264, 912, 2744, 382, 9758, 70, 11, 457, 309, 311, 51332, 51332, 516, 281, 312, 12750, 2602, 295, 9429, 13, 51432, 51574, 639, 2657, 510, 307, 746, 544, 6179, 13, 51686, 51686, 467, 311, 767, 257, 8141, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17146739781459916, "compression_ratio": 1.73, "no_speech_prob": 2.726433876887313e-06}, {"id": 1239, "seek": 354640, "start": 3547.4, "end": 3551.08, "text": " dc over dzg is a gradient vector.", "tokens": [50364, 9758, 70, 307, 257, 8062, 13, 50414, 50414, 274, 66, 670, 9758, 70, 307, 257, 16235, 8062, 13, 50598, 50598, 400, 309, 311, 264, 912, 2744, 382, 9758, 70, 13, 50684, 50684, 583, 538, 10286, 11, 321, 767, 2464, 309, 50836, 50836, 382, 257, 5386, 8062, 13, 50996, 50996, 407, 341, 551, 510, 307, 516, 281, 312, 257, 5386, 8062, 6104, 2744, 51168, 51168, 307, 264, 912, 2744, 382, 9758, 70, 11, 457, 309, 311, 51332, 51332, 516, 281, 312, 12750, 2602, 295, 9429, 13, 51432, 51574, 639, 2657, 510, 307, 746, 544, 6179, 13, 51686, 51686, 467, 311, 767, 257, 8141, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17146739781459916, "compression_ratio": 1.73, "no_speech_prob": 2.726433876887313e-06}, {"id": 1240, "seek": 354640, "start": 3551.08, "end": 3552.8, "text": " And it's the same size as dzg.", "tokens": [50364, 9758, 70, 307, 257, 8062, 13, 50414, 50414, 274, 66, 670, 9758, 70, 307, 257, 16235, 8062, 13, 50598, 50598, 400, 309, 311, 264, 912, 2744, 382, 9758, 70, 13, 50684, 50684, 583, 538, 10286, 11, 321, 767, 2464, 309, 50836, 50836, 382, 257, 5386, 8062, 13, 50996, 50996, 407, 341, 551, 510, 307, 516, 281, 312, 257, 5386, 8062, 6104, 2744, 51168, 51168, 307, 264, 912, 2744, 382, 9758, 70, 11, 457, 309, 311, 51332, 51332, 516, 281, 312, 12750, 2602, 295, 9429, 13, 51432, 51574, 639, 2657, 510, 307, 746, 544, 6179, 13, 51686, 51686, 467, 311, 767, 257, 8141, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17146739781459916, "compression_ratio": 1.73, "no_speech_prob": 2.726433876887313e-06}, {"id": 1241, "seek": 354640, "start": 3552.8, "end": 3555.84, "text": " But by convention, we actually write it", "tokens": [50364, 9758, 70, 307, 257, 8062, 13, 50414, 50414, 274, 66, 670, 9758, 70, 307, 257, 16235, 8062, 13, 50598, 50598, 400, 309, 311, 264, 912, 2744, 382, 9758, 70, 13, 50684, 50684, 583, 538, 10286, 11, 321, 767, 2464, 309, 50836, 50836, 382, 257, 5386, 8062, 13, 50996, 50996, 407, 341, 551, 510, 307, 516, 281, 312, 257, 5386, 8062, 6104, 2744, 51168, 51168, 307, 264, 912, 2744, 382, 9758, 70, 11, 457, 309, 311, 51332, 51332, 516, 281, 312, 12750, 2602, 295, 9429, 13, 51432, 51574, 639, 2657, 510, 307, 746, 544, 6179, 13, 51686, 51686, 467, 311, 767, 257, 8141, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17146739781459916, "compression_ratio": 1.73, "no_speech_prob": 2.726433876887313e-06}, {"id": 1242, "seek": 354640, "start": 3555.84, "end": 3559.04, "text": " as a row vector.", "tokens": [50364, 9758, 70, 307, 257, 8062, 13, 50414, 50414, 274, 66, 670, 9758, 70, 307, 257, 16235, 8062, 13, 50598, 50598, 400, 309, 311, 264, 912, 2744, 382, 9758, 70, 13, 50684, 50684, 583, 538, 10286, 11, 321, 767, 2464, 309, 50836, 50836, 382, 257, 5386, 8062, 13, 50996, 50996, 407, 341, 551, 510, 307, 516, 281, 312, 257, 5386, 8062, 6104, 2744, 51168, 51168, 307, 264, 912, 2744, 382, 9758, 70, 11, 457, 309, 311, 51332, 51332, 516, 281, 312, 12750, 2602, 295, 9429, 13, 51432, 51574, 639, 2657, 510, 307, 746, 544, 6179, 13, 51686, 51686, 467, 311, 767, 257, 8141, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17146739781459916, "compression_ratio": 1.73, "no_speech_prob": 2.726433876887313e-06}, {"id": 1243, "seek": 354640, "start": 3559.04, "end": 3562.48, "text": " So this thing here is going to be a row vector whose size", "tokens": [50364, 9758, 70, 307, 257, 8062, 13, 50414, 50414, 274, 66, 670, 9758, 70, 307, 257, 16235, 8062, 13, 50598, 50598, 400, 309, 311, 264, 912, 2744, 382, 9758, 70, 13, 50684, 50684, 583, 538, 10286, 11, 321, 767, 2464, 309, 50836, 50836, 382, 257, 5386, 8062, 13, 50996, 50996, 407, 341, 551, 510, 307, 516, 281, 312, 257, 5386, 8062, 6104, 2744, 51168, 51168, 307, 264, 912, 2744, 382, 9758, 70, 11, 457, 309, 311, 51332, 51332, 516, 281, 312, 12750, 2602, 295, 9429, 13, 51432, 51574, 639, 2657, 510, 307, 746, 544, 6179, 13, 51686, 51686, 467, 311, 767, 257, 8141, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17146739781459916, "compression_ratio": 1.73, "no_speech_prob": 2.726433876887313e-06}, {"id": 1244, "seek": 354640, "start": 3562.48, "end": 3565.76, "text": " is the same size as dzg, but it's", "tokens": [50364, 9758, 70, 307, 257, 8062, 13, 50414, 50414, 274, 66, 670, 9758, 70, 307, 257, 16235, 8062, 13, 50598, 50598, 400, 309, 311, 264, 912, 2744, 382, 9758, 70, 13, 50684, 50684, 583, 538, 10286, 11, 321, 767, 2464, 309, 50836, 50836, 382, 257, 5386, 8062, 13, 50996, 50996, 407, 341, 551, 510, 307, 516, 281, 312, 257, 5386, 8062, 6104, 2744, 51168, 51168, 307, 264, 912, 2744, 382, 9758, 70, 11, 457, 309, 311, 51332, 51332, 516, 281, 312, 12750, 2602, 295, 9429, 13, 51432, 51574, 639, 2657, 510, 307, 746, 544, 6179, 13, 51686, 51686, 467, 311, 767, 257, 8141, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17146739781459916, "compression_ratio": 1.73, "no_speech_prob": 2.726433876887313e-06}, {"id": 1245, "seek": 354640, "start": 3565.76, "end": 3567.76, "text": " going to be horizontal instead of vertical.", "tokens": [50364, 9758, 70, 307, 257, 8062, 13, 50414, 50414, 274, 66, 670, 9758, 70, 307, 257, 16235, 8062, 13, 50598, 50598, 400, 309, 311, 264, 912, 2744, 382, 9758, 70, 13, 50684, 50684, 583, 538, 10286, 11, 321, 767, 2464, 309, 50836, 50836, 382, 257, 5386, 8062, 13, 50996, 50996, 407, 341, 551, 510, 307, 516, 281, 312, 257, 5386, 8062, 6104, 2744, 51168, 51168, 307, 264, 912, 2744, 382, 9758, 70, 11, 457, 309, 311, 51332, 51332, 516, 281, 312, 12750, 2602, 295, 9429, 13, 51432, 51574, 639, 2657, 510, 307, 746, 544, 6179, 13, 51686, 51686, 467, 311, 767, 257, 8141, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17146739781459916, "compression_ratio": 1.73, "no_speech_prob": 2.726433876887313e-06}, {"id": 1246, "seek": 354640, "start": 3570.6, "end": 3572.84, "text": " This object here is something more complicated.", "tokens": [50364, 9758, 70, 307, 257, 8062, 13, 50414, 50414, 274, 66, 670, 9758, 70, 307, 257, 16235, 8062, 13, 50598, 50598, 400, 309, 311, 264, 912, 2744, 382, 9758, 70, 13, 50684, 50684, 583, 538, 10286, 11, 321, 767, 2464, 309, 50836, 50836, 382, 257, 5386, 8062, 13, 50996, 50996, 407, 341, 551, 510, 307, 516, 281, 312, 257, 5386, 8062, 6104, 2744, 51168, 51168, 307, 264, 912, 2744, 382, 9758, 70, 11, 457, 309, 311, 51332, 51332, 516, 281, 312, 12750, 2602, 295, 9429, 13, 51432, 51574, 639, 2657, 510, 307, 746, 544, 6179, 13, 51686, 51686, 467, 311, 767, 257, 8141, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17146739781459916, "compression_ratio": 1.73, "no_speech_prob": 2.726433876887313e-06}, {"id": 1247, "seek": 354640, "start": 3572.84, "end": 3574.88, "text": " It's actually a matrix.", "tokens": [50364, 9758, 70, 307, 257, 8062, 13, 50414, 50414, 274, 66, 670, 9758, 70, 307, 257, 16235, 8062, 13, 50598, 50598, 400, 309, 311, 264, 912, 2744, 382, 9758, 70, 13, 50684, 50684, 583, 538, 10286, 11, 321, 767, 2464, 309, 50836, 50836, 382, 257, 5386, 8062, 13, 50996, 50996, 407, 341, 551, 510, 307, 516, 281, 312, 257, 5386, 8062, 6104, 2744, 51168, 51168, 307, 264, 912, 2744, 382, 9758, 70, 11, 457, 309, 311, 51332, 51332, 516, 281, 312, 12750, 2602, 295, 9429, 13, 51432, 51574, 639, 2657, 510, 307, 746, 544, 6179, 13, 51686, 51686, 467, 311, 767, 257, 8141, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.17146739781459916, "compression_ratio": 1.73, "no_speech_prob": 2.726433876887313e-06}, {"id": 1248, "seek": 357488, "start": 3574.88, "end": 3576.6400000000003, "text": " Why is it a matrix?", "tokens": [50364, 1545, 307, 309, 257, 8141, 30, 50452, 50452, 467, 311, 570, 309, 311, 264, 13760, 295, 257, 8062, 365, 3104, 50598, 50598, 281, 1071, 8062, 13, 50692, 50692, 407, 718, 311, 574, 412, 341, 10686, 510, 322, 264, 558, 13, 50790, 50790, 492, 362, 257, 2445, 290, 13, 50894, 50894, 467, 2516, 710, 69, 382, 364, 4846, 11, 293, 309, 14725, 710, 70, 382, 364, 5598, 13, 51158, 51158, 400, 498, 321, 528, 281, 7983, 264, 1589, 51248, 51248, 466, 264, 13760, 295, 300, 10088, 11, 597, 307, 341, 11275, 51484, 51484, 510, 11, 9758, 70, 670, 9758, 69, 11, 456, 311, 257, 688, 295, 2115, 51640, 51640, 281, 7983, 570, 456, 307, 257, 688, 295, 2098, 294, 597, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1379004222590749, "compression_ratio": 1.6772908366533865, "no_speech_prob": 2.726303591771284e-06}, {"id": 1249, "seek": 357488, "start": 3576.6400000000003, "end": 3579.56, "text": " It's because it's the derivative of a vector with respect", "tokens": [50364, 1545, 307, 309, 257, 8141, 30, 50452, 50452, 467, 311, 570, 309, 311, 264, 13760, 295, 257, 8062, 365, 3104, 50598, 50598, 281, 1071, 8062, 13, 50692, 50692, 407, 718, 311, 574, 412, 341, 10686, 510, 322, 264, 558, 13, 50790, 50790, 492, 362, 257, 2445, 290, 13, 50894, 50894, 467, 2516, 710, 69, 382, 364, 4846, 11, 293, 309, 14725, 710, 70, 382, 364, 5598, 13, 51158, 51158, 400, 498, 321, 528, 281, 7983, 264, 1589, 51248, 51248, 466, 264, 13760, 295, 300, 10088, 11, 597, 307, 341, 11275, 51484, 51484, 510, 11, 9758, 70, 670, 9758, 69, 11, 456, 311, 257, 688, 295, 2115, 51640, 51640, 281, 7983, 570, 456, 307, 257, 688, 295, 2098, 294, 597, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1379004222590749, "compression_ratio": 1.6772908366533865, "no_speech_prob": 2.726303591771284e-06}, {"id": 1250, "seek": 357488, "start": 3579.56, "end": 3581.44, "text": " to another vector.", "tokens": [50364, 1545, 307, 309, 257, 8141, 30, 50452, 50452, 467, 311, 570, 309, 311, 264, 13760, 295, 257, 8062, 365, 3104, 50598, 50598, 281, 1071, 8062, 13, 50692, 50692, 407, 718, 311, 574, 412, 341, 10686, 510, 322, 264, 558, 13, 50790, 50790, 492, 362, 257, 2445, 290, 13, 50894, 50894, 467, 2516, 710, 69, 382, 364, 4846, 11, 293, 309, 14725, 710, 70, 382, 364, 5598, 13, 51158, 51158, 400, 498, 321, 528, 281, 7983, 264, 1589, 51248, 51248, 466, 264, 13760, 295, 300, 10088, 11, 597, 307, 341, 11275, 51484, 51484, 510, 11, 9758, 70, 670, 9758, 69, 11, 456, 311, 257, 688, 295, 2115, 51640, 51640, 281, 7983, 570, 456, 307, 257, 688, 295, 2098, 294, 597, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1379004222590749, "compression_ratio": 1.6772908366533865, "no_speech_prob": 2.726303591771284e-06}, {"id": 1251, "seek": 357488, "start": 3581.44, "end": 3583.4, "text": " So let's look at this diagram here on the right.", "tokens": [50364, 1545, 307, 309, 257, 8141, 30, 50452, 50452, 467, 311, 570, 309, 311, 264, 13760, 295, 257, 8062, 365, 3104, 50598, 50598, 281, 1071, 8062, 13, 50692, 50692, 407, 718, 311, 574, 412, 341, 10686, 510, 322, 264, 558, 13, 50790, 50790, 492, 362, 257, 2445, 290, 13, 50894, 50894, 467, 2516, 710, 69, 382, 364, 4846, 11, 293, 309, 14725, 710, 70, 382, 364, 5598, 13, 51158, 51158, 400, 498, 321, 528, 281, 7983, 264, 1589, 51248, 51248, 466, 264, 13760, 295, 300, 10088, 11, 597, 307, 341, 11275, 51484, 51484, 510, 11, 9758, 70, 670, 9758, 69, 11, 456, 311, 257, 688, 295, 2115, 51640, 51640, 281, 7983, 570, 456, 307, 257, 688, 295, 2098, 294, 597, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1379004222590749, "compression_ratio": 1.6772908366533865, "no_speech_prob": 2.726303591771284e-06}, {"id": 1252, "seek": 357488, "start": 3583.4, "end": 3585.48, "text": " We have a function g.", "tokens": [50364, 1545, 307, 309, 257, 8141, 30, 50452, 50452, 467, 311, 570, 309, 311, 264, 13760, 295, 257, 8062, 365, 3104, 50598, 50598, 281, 1071, 8062, 13, 50692, 50692, 407, 718, 311, 574, 412, 341, 10686, 510, 322, 264, 558, 13, 50790, 50790, 492, 362, 257, 2445, 290, 13, 50894, 50894, 467, 2516, 710, 69, 382, 364, 4846, 11, 293, 309, 14725, 710, 70, 382, 364, 5598, 13, 51158, 51158, 400, 498, 321, 528, 281, 7983, 264, 1589, 51248, 51248, 466, 264, 13760, 295, 300, 10088, 11, 597, 307, 341, 11275, 51484, 51484, 510, 11, 9758, 70, 670, 9758, 69, 11, 456, 311, 257, 688, 295, 2115, 51640, 51640, 281, 7983, 570, 456, 307, 257, 688, 295, 2098, 294, 597, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1379004222590749, "compression_ratio": 1.6772908366533865, "no_speech_prob": 2.726303591771284e-06}, {"id": 1253, "seek": 357488, "start": 3585.48, "end": 3590.76, "text": " It takes zf as an input, and it produces zg as an output.", "tokens": [50364, 1545, 307, 309, 257, 8141, 30, 50452, 50452, 467, 311, 570, 309, 311, 264, 13760, 295, 257, 8062, 365, 3104, 50598, 50598, 281, 1071, 8062, 13, 50692, 50692, 407, 718, 311, 574, 412, 341, 10686, 510, 322, 264, 558, 13, 50790, 50790, 492, 362, 257, 2445, 290, 13, 50894, 50894, 467, 2516, 710, 69, 382, 364, 4846, 11, 293, 309, 14725, 710, 70, 382, 364, 5598, 13, 51158, 51158, 400, 498, 321, 528, 281, 7983, 264, 1589, 51248, 51248, 466, 264, 13760, 295, 300, 10088, 11, 597, 307, 341, 11275, 51484, 51484, 510, 11, 9758, 70, 670, 9758, 69, 11, 456, 311, 257, 688, 295, 2115, 51640, 51640, 281, 7983, 570, 456, 307, 257, 688, 295, 2098, 294, 597, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1379004222590749, "compression_ratio": 1.6772908366533865, "no_speech_prob": 2.726303591771284e-06}, {"id": 1254, "seek": 357488, "start": 3590.76, "end": 3592.56, "text": " And if we want to capture the information", "tokens": [50364, 1545, 307, 309, 257, 8141, 30, 50452, 50452, 467, 311, 570, 309, 311, 264, 13760, 295, 257, 8062, 365, 3104, 50598, 50598, 281, 1071, 8062, 13, 50692, 50692, 407, 718, 311, 574, 412, 341, 10686, 510, 322, 264, 558, 13, 50790, 50790, 492, 362, 257, 2445, 290, 13, 50894, 50894, 467, 2516, 710, 69, 382, 364, 4846, 11, 293, 309, 14725, 710, 70, 382, 364, 5598, 13, 51158, 51158, 400, 498, 321, 528, 281, 7983, 264, 1589, 51248, 51248, 466, 264, 13760, 295, 300, 10088, 11, 597, 307, 341, 11275, 51484, 51484, 510, 11, 9758, 70, 670, 9758, 69, 11, 456, 311, 257, 688, 295, 2115, 51640, 51640, 281, 7983, 570, 456, 307, 257, 688, 295, 2098, 294, 597, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1379004222590749, "compression_ratio": 1.6772908366533865, "no_speech_prob": 2.726303591771284e-06}, {"id": 1255, "seek": 357488, "start": 3592.56, "end": 3597.28, "text": " about the derivative of that module, which is this quantity", "tokens": [50364, 1545, 307, 309, 257, 8141, 30, 50452, 50452, 467, 311, 570, 309, 311, 264, 13760, 295, 257, 8062, 365, 3104, 50598, 50598, 281, 1071, 8062, 13, 50692, 50692, 407, 718, 311, 574, 412, 341, 10686, 510, 322, 264, 558, 13, 50790, 50790, 492, 362, 257, 2445, 290, 13, 50894, 50894, 467, 2516, 710, 69, 382, 364, 4846, 11, 293, 309, 14725, 710, 70, 382, 364, 5598, 13, 51158, 51158, 400, 498, 321, 528, 281, 7983, 264, 1589, 51248, 51248, 466, 264, 13760, 295, 300, 10088, 11, 597, 307, 341, 11275, 51484, 51484, 510, 11, 9758, 70, 670, 9758, 69, 11, 456, 311, 257, 688, 295, 2115, 51640, 51640, 281, 7983, 570, 456, 307, 257, 688, 295, 2098, 294, 597, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1379004222590749, "compression_ratio": 1.6772908366533865, "no_speech_prob": 2.726303591771284e-06}, {"id": 1256, "seek": 357488, "start": 3597.28, "end": 3600.4, "text": " here, dzg over dzf, there's a lot of terms", "tokens": [50364, 1545, 307, 309, 257, 8141, 30, 50452, 50452, 467, 311, 570, 309, 311, 264, 13760, 295, 257, 8062, 365, 3104, 50598, 50598, 281, 1071, 8062, 13, 50692, 50692, 407, 718, 311, 574, 412, 341, 10686, 510, 322, 264, 558, 13, 50790, 50790, 492, 362, 257, 2445, 290, 13, 50894, 50894, 467, 2516, 710, 69, 382, 364, 4846, 11, 293, 309, 14725, 710, 70, 382, 364, 5598, 13, 51158, 51158, 400, 498, 321, 528, 281, 7983, 264, 1589, 51248, 51248, 466, 264, 13760, 295, 300, 10088, 11, 597, 307, 341, 11275, 51484, 51484, 510, 11, 9758, 70, 670, 9758, 69, 11, 456, 311, 257, 688, 295, 2115, 51640, 51640, 281, 7983, 570, 456, 307, 257, 688, 295, 2098, 294, 597, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1379004222590749, "compression_ratio": 1.6772908366533865, "no_speech_prob": 2.726303591771284e-06}, {"id": 1257, "seek": 357488, "start": 3600.4, "end": 3603.2400000000002, "text": " to capture because there is a lot of ways in which", "tokens": [50364, 1545, 307, 309, 257, 8141, 30, 50452, 50452, 467, 311, 570, 309, 311, 264, 13760, 295, 257, 8062, 365, 3104, 50598, 50598, 281, 1071, 8062, 13, 50692, 50692, 407, 718, 311, 574, 412, 341, 10686, 510, 322, 264, 558, 13, 50790, 50790, 492, 362, 257, 2445, 290, 13, 50894, 50894, 467, 2516, 710, 69, 382, 364, 4846, 11, 293, 309, 14725, 710, 70, 382, 364, 5598, 13, 51158, 51158, 400, 498, 321, 528, 281, 7983, 264, 1589, 51248, 51248, 466, 264, 13760, 295, 300, 10088, 11, 597, 307, 341, 11275, 51484, 51484, 510, 11, 9758, 70, 670, 9758, 69, 11, 456, 311, 257, 688, 295, 2115, 51640, 51640, 281, 7983, 570, 456, 307, 257, 688, 295, 2098, 294, 597, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1379004222590749, "compression_ratio": 1.6772908366533865, "no_speech_prob": 2.726303591771284e-06}, {"id": 1258, "seek": 360324, "start": 3603.24, "end": 3606.16, "text": " every single output, every component of dzg", "tokens": [50364, 633, 2167, 5598, 11, 633, 6542, 295, 9758, 70, 50510, 50510, 393, 312, 15269, 538, 633, 6542, 295, 710, 69, 13, 50644, 50644, 407, 337, 633, 6119, 295, 6677, 11, 9758, 70, 293, 710, 69, 11, 50826, 50826, 456, 307, 257, 13760, 1433, 597, 16203, 538, 577, 709, 9758, 70, 576, 51084, 51084, 312, 13269, 374, 2883, 498, 286, 13269, 374, 2883, 710, 69, 538, 257, 1359, 7193, 3324, 10650, 51242, 51242, 11275, 13, 51382, 51382, 492, 362, 300, 337, 633, 6119, 295, 6677, 295, 9758, 70, 293, 710, 69, 13, 51608, 51608, 1018, 257, 1874, 11, 341, 307, 257, 8141, 6104, 10139, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.0889530449270088, "compression_ratio": 1.7345971563981042, "no_speech_prob": 5.173572844796581e-06}, {"id": 1259, "seek": 360324, "start": 3606.16, "end": 3608.8399999999997, "text": " can be influenced by every component of zf.", "tokens": [50364, 633, 2167, 5598, 11, 633, 6542, 295, 9758, 70, 50510, 50510, 393, 312, 15269, 538, 633, 6542, 295, 710, 69, 13, 50644, 50644, 407, 337, 633, 6119, 295, 6677, 11, 9758, 70, 293, 710, 69, 11, 50826, 50826, 456, 307, 257, 13760, 1433, 597, 16203, 538, 577, 709, 9758, 70, 576, 51084, 51084, 312, 13269, 374, 2883, 498, 286, 13269, 374, 2883, 710, 69, 538, 257, 1359, 7193, 3324, 10650, 51242, 51242, 11275, 13, 51382, 51382, 492, 362, 300, 337, 633, 6119, 295, 6677, 295, 9758, 70, 293, 710, 69, 13, 51608, 51608, 1018, 257, 1874, 11, 341, 307, 257, 8141, 6104, 10139, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.0889530449270088, "compression_ratio": 1.7345971563981042, "no_speech_prob": 5.173572844796581e-06}, {"id": 1260, "seek": 360324, "start": 3608.8399999999997, "end": 3612.4799999999996, "text": " So for every pair of components, dzg and zf,", "tokens": [50364, 633, 2167, 5598, 11, 633, 6542, 295, 9758, 70, 50510, 50510, 393, 312, 15269, 538, 633, 6542, 295, 710, 69, 13, 50644, 50644, 407, 337, 633, 6119, 295, 6677, 11, 9758, 70, 293, 710, 69, 11, 50826, 50826, 456, 307, 257, 13760, 1433, 597, 16203, 538, 577, 709, 9758, 70, 576, 51084, 51084, 312, 13269, 374, 2883, 498, 286, 13269, 374, 2883, 710, 69, 538, 257, 1359, 7193, 3324, 10650, 51242, 51242, 11275, 13, 51382, 51382, 492, 362, 300, 337, 633, 6119, 295, 6677, 295, 9758, 70, 293, 710, 69, 13, 51608, 51608, 1018, 257, 1874, 11, 341, 307, 257, 8141, 6104, 10139, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.0889530449270088, "compression_ratio": 1.7345971563981042, "no_speech_prob": 5.173572844796581e-06}, {"id": 1261, "seek": 360324, "start": 3612.4799999999996, "end": 3617.64, "text": " there is a derivative term which indicates by how much dzg would", "tokens": [50364, 633, 2167, 5598, 11, 633, 6542, 295, 9758, 70, 50510, 50510, 393, 312, 15269, 538, 633, 6542, 295, 710, 69, 13, 50644, 50644, 407, 337, 633, 6119, 295, 6677, 11, 9758, 70, 293, 710, 69, 11, 50826, 50826, 456, 307, 257, 13760, 1433, 597, 16203, 538, 577, 709, 9758, 70, 576, 51084, 51084, 312, 13269, 374, 2883, 498, 286, 13269, 374, 2883, 710, 69, 538, 257, 1359, 7193, 3324, 10650, 51242, 51242, 11275, 13, 51382, 51382, 492, 362, 300, 337, 633, 6119, 295, 6677, 295, 9758, 70, 293, 710, 69, 13, 51608, 51608, 1018, 257, 1874, 11, 341, 307, 257, 8141, 6104, 10139, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.0889530449270088, "compression_ratio": 1.7345971563981042, "no_speech_prob": 5.173572844796581e-06}, {"id": 1262, "seek": 360324, "start": 3617.64, "end": 3620.7999999999997, "text": " be perturbed if I perturbed zf by a small infinitesimal", "tokens": [50364, 633, 2167, 5598, 11, 633, 6542, 295, 9758, 70, 50510, 50510, 393, 312, 15269, 538, 633, 6542, 295, 710, 69, 13, 50644, 50644, 407, 337, 633, 6119, 295, 6677, 11, 9758, 70, 293, 710, 69, 11, 50826, 50826, 456, 307, 257, 13760, 1433, 597, 16203, 538, 577, 709, 9758, 70, 576, 51084, 51084, 312, 13269, 374, 2883, 498, 286, 13269, 374, 2883, 710, 69, 538, 257, 1359, 7193, 3324, 10650, 51242, 51242, 11275, 13, 51382, 51382, 492, 362, 300, 337, 633, 6119, 295, 6677, 295, 9758, 70, 293, 710, 69, 13, 51608, 51608, 1018, 257, 1874, 11, 341, 307, 257, 8141, 6104, 10139, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.0889530449270088, "compression_ratio": 1.7345971563981042, "no_speech_prob": 5.173572844796581e-06}, {"id": 1263, "seek": 360324, "start": 3620.7999999999997, "end": 3623.6, "text": " quantity.", "tokens": [50364, 633, 2167, 5598, 11, 633, 6542, 295, 9758, 70, 50510, 50510, 393, 312, 15269, 538, 633, 6542, 295, 710, 69, 13, 50644, 50644, 407, 337, 633, 6119, 295, 6677, 11, 9758, 70, 293, 710, 69, 11, 50826, 50826, 456, 307, 257, 13760, 1433, 597, 16203, 538, 577, 709, 9758, 70, 576, 51084, 51084, 312, 13269, 374, 2883, 498, 286, 13269, 374, 2883, 710, 69, 538, 257, 1359, 7193, 3324, 10650, 51242, 51242, 11275, 13, 51382, 51382, 492, 362, 300, 337, 633, 6119, 295, 6677, 295, 9758, 70, 293, 710, 69, 13, 51608, 51608, 1018, 257, 1874, 11, 341, 307, 257, 8141, 6104, 10139, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.0889530449270088, "compression_ratio": 1.7345971563981042, "no_speech_prob": 5.173572844796581e-06}, {"id": 1264, "seek": 360324, "start": 3623.6, "end": 3628.12, "text": " We have that for every pair of components of dzg and zf.", "tokens": [50364, 633, 2167, 5598, 11, 633, 6542, 295, 9758, 70, 50510, 50510, 393, 312, 15269, 538, 633, 6542, 295, 710, 69, 13, 50644, 50644, 407, 337, 633, 6119, 295, 6677, 11, 9758, 70, 293, 710, 69, 11, 50826, 50826, 456, 307, 257, 13760, 1433, 597, 16203, 538, 577, 709, 9758, 70, 576, 51084, 51084, 312, 13269, 374, 2883, 498, 286, 13269, 374, 2883, 710, 69, 538, 257, 1359, 7193, 3324, 10650, 51242, 51242, 11275, 13, 51382, 51382, 492, 362, 300, 337, 633, 6119, 295, 6677, 295, 9758, 70, 293, 710, 69, 13, 51608, 51608, 1018, 257, 1874, 11, 341, 307, 257, 8141, 6104, 10139, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.0889530449270088, "compression_ratio": 1.7345971563981042, "no_speech_prob": 5.173572844796581e-06}, {"id": 1265, "seek": 360324, "start": 3628.12, "end": 3631.3999999999996, "text": " As a result, this is a matrix whose dimension", "tokens": [50364, 633, 2167, 5598, 11, 633, 6542, 295, 9758, 70, 50510, 50510, 393, 312, 15269, 538, 633, 6542, 295, 710, 69, 13, 50644, 50644, 407, 337, 633, 6119, 295, 6677, 11, 9758, 70, 293, 710, 69, 11, 50826, 50826, 456, 307, 257, 13760, 1433, 597, 16203, 538, 577, 709, 9758, 70, 576, 51084, 51084, 312, 13269, 374, 2883, 498, 286, 13269, 374, 2883, 710, 69, 538, 257, 1359, 7193, 3324, 10650, 51242, 51242, 11275, 13, 51382, 51382, 492, 362, 300, 337, 633, 6119, 295, 6677, 295, 9758, 70, 293, 710, 69, 13, 51608, 51608, 1018, 257, 1874, 11, 341, 307, 257, 8141, 6104, 10139, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.0889530449270088, "compression_ratio": 1.7345971563981042, "no_speech_prob": 5.173572844796581e-06}, {"id": 1266, "seek": 363140, "start": 3631.4, "end": 3635.76, "text": " is the number of rows is the size of dzg,", "tokens": [50364, 307, 264, 1230, 295, 13241, 307, 264, 2744, 295, 9758, 70, 11, 50582, 50582, 293, 264, 1230, 295, 13766, 307, 264, 2744, 295, 710, 69, 13, 50744, 50932, 400, 1184, 1433, 294, 341, 8141, 307, 472, 14641, 13760, 1433, 13, 51116, 51116, 407, 341, 1379, 8141, 510, 11, 498, 286, 747, 264, 6542, 741, 73, 11, 51360, 51360, 309, 311, 264, 14641, 13760, 295, 264, 309, 71, 5598, 295, 300, 10088, 11, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.13770528843528346, "compression_ratio": 1.6923076923076923, "no_speech_prob": 1.095133939088555e-05}, {"id": 1267, "seek": 363140, "start": 3635.76, "end": 3639.0, "text": " and the number of columns is the size of zf.", "tokens": [50364, 307, 264, 1230, 295, 13241, 307, 264, 2744, 295, 9758, 70, 11, 50582, 50582, 293, 264, 1230, 295, 13766, 307, 264, 2744, 295, 710, 69, 13, 50744, 50932, 400, 1184, 1433, 294, 341, 8141, 307, 472, 14641, 13760, 1433, 13, 51116, 51116, 407, 341, 1379, 8141, 510, 11, 498, 286, 747, 264, 6542, 741, 73, 11, 51360, 51360, 309, 311, 264, 14641, 13760, 295, 264, 309, 71, 5598, 295, 300, 10088, 11, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.13770528843528346, "compression_ratio": 1.6923076923076923, "no_speech_prob": 1.095133939088555e-05}, {"id": 1268, "seek": 363140, "start": 3642.76, "end": 3646.44, "text": " And each term in this matrix is one partial derivative term.", "tokens": [50364, 307, 264, 1230, 295, 13241, 307, 264, 2744, 295, 9758, 70, 11, 50582, 50582, 293, 264, 1230, 295, 13766, 307, 264, 2744, 295, 710, 69, 13, 50744, 50932, 400, 1184, 1433, 294, 341, 8141, 307, 472, 14641, 13760, 1433, 13, 51116, 51116, 407, 341, 1379, 8141, 510, 11, 498, 286, 747, 264, 6542, 741, 73, 11, 51360, 51360, 309, 311, 264, 14641, 13760, 295, 264, 309, 71, 5598, 295, 300, 10088, 11, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.13770528843528346, "compression_ratio": 1.6923076923076923, "no_speech_prob": 1.095133939088555e-05}, {"id": 1269, "seek": 363140, "start": 3646.44, "end": 3651.32, "text": " So this whole matrix here, if I take the component ij,", "tokens": [50364, 307, 264, 1230, 295, 13241, 307, 264, 2744, 295, 9758, 70, 11, 50582, 50582, 293, 264, 1230, 295, 13766, 307, 264, 2744, 295, 710, 69, 13, 50744, 50932, 400, 1184, 1433, 294, 341, 8141, 307, 472, 14641, 13760, 1433, 13, 51116, 51116, 407, 341, 1379, 8141, 510, 11, 498, 286, 747, 264, 6542, 741, 73, 11, 51360, 51360, 309, 311, 264, 14641, 13760, 295, 264, 309, 71, 5598, 295, 300, 10088, 11, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.13770528843528346, "compression_ratio": 1.6923076923076923, "no_speech_prob": 1.095133939088555e-05}, {"id": 1270, "seek": 363140, "start": 3651.32, "end": 3656.8, "text": " it's the partial derivative of the ith output of that module,", "tokens": [50364, 307, 264, 1230, 295, 13241, 307, 264, 2744, 295, 9758, 70, 11, 50582, 50582, 293, 264, 1230, 295, 13766, 307, 264, 2744, 295, 710, 69, 13, 50744, 50932, 400, 1184, 1433, 294, 341, 8141, 307, 472, 14641, 13760, 1433, 13, 51116, 51116, 407, 341, 1379, 8141, 510, 11, 498, 286, 747, 264, 6542, 741, 73, 11, 51360, 51360, 309, 311, 264, 14641, 13760, 295, 264, 309, 71, 5598, 295, 300, 10088, 11, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.13770528843528346, "compression_ratio": 1.6923076923076923, "no_speech_prob": 1.095133939088555e-05}, {"id": 1271, "seek": 365680, "start": 3656.8, "end": 3662.2400000000002, "text": " the ith component of dzg with respect to the jth component", "tokens": [50364, 264, 309, 71, 6542, 295, 9758, 70, 365, 3104, 281, 264, 361, 392, 6542, 50636, 50636, 295, 710, 69, 13, 50661, 50864, 407, 437, 321, 483, 510, 307, 257, 5386, 8062, 50976, 50976, 307, 2681, 281, 257, 5386, 8062, 17207, 538, 257, 8141, 11, 51130, 51130, 293, 264, 11602, 733, 295, 589, 484, 370, 300, 436, 434, 51428, 51428, 18218, 365, 1184, 661, 13, 51550, 51550, 407, 437, 307, 646, 79, 1513, 559, 399, 586, 30, 51634, 51634, 5833, 79, 1513, 559, 399, 307, 341, 8513, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1249394993205647, "compression_ratio": 1.6022099447513811, "no_speech_prob": 2.4439618755423e-06}, {"id": 1272, "seek": 365680, "start": 3662.2400000000002, "end": 3662.7400000000002, "text": " of zf.", "tokens": [50364, 264, 309, 71, 6542, 295, 9758, 70, 365, 3104, 281, 264, 361, 392, 6542, 50636, 50636, 295, 710, 69, 13, 50661, 50864, 407, 437, 321, 483, 510, 307, 257, 5386, 8062, 50976, 50976, 307, 2681, 281, 257, 5386, 8062, 17207, 538, 257, 8141, 11, 51130, 51130, 293, 264, 11602, 733, 295, 589, 484, 370, 300, 436, 434, 51428, 51428, 18218, 365, 1184, 661, 13, 51550, 51550, 407, 437, 307, 646, 79, 1513, 559, 399, 586, 30, 51634, 51634, 5833, 79, 1513, 559, 399, 307, 341, 8513, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1249394993205647, "compression_ratio": 1.6022099447513811, "no_speech_prob": 2.4439618755423e-06}, {"id": 1273, "seek": 365680, "start": 3666.8, "end": 3669.04, "text": " So what we get here is a row vector", "tokens": [50364, 264, 309, 71, 6542, 295, 9758, 70, 365, 3104, 281, 264, 361, 392, 6542, 50636, 50636, 295, 710, 69, 13, 50661, 50864, 407, 437, 321, 483, 510, 307, 257, 5386, 8062, 50976, 50976, 307, 2681, 281, 257, 5386, 8062, 17207, 538, 257, 8141, 11, 51130, 51130, 293, 264, 11602, 733, 295, 589, 484, 370, 300, 436, 434, 51428, 51428, 18218, 365, 1184, 661, 13, 51550, 51550, 407, 437, 307, 646, 79, 1513, 559, 399, 586, 30, 51634, 51634, 5833, 79, 1513, 559, 399, 307, 341, 8513, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1249394993205647, "compression_ratio": 1.6022099447513811, "no_speech_prob": 2.4439618755423e-06}, {"id": 1274, "seek": 365680, "start": 3669.04, "end": 3672.1200000000003, "text": " is equal to a row vector multiplied by a matrix,", "tokens": [50364, 264, 309, 71, 6542, 295, 9758, 70, 365, 3104, 281, 264, 361, 392, 6542, 50636, 50636, 295, 710, 69, 13, 50661, 50864, 407, 437, 321, 483, 510, 307, 257, 5386, 8062, 50976, 50976, 307, 2681, 281, 257, 5386, 8062, 17207, 538, 257, 8141, 11, 51130, 51130, 293, 264, 11602, 733, 295, 589, 484, 370, 300, 436, 434, 51428, 51428, 18218, 365, 1184, 661, 13, 51550, 51550, 407, 437, 307, 646, 79, 1513, 559, 399, 586, 30, 51634, 51634, 5833, 79, 1513, 559, 399, 307, 341, 8513, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1249394993205647, "compression_ratio": 1.6022099447513811, "no_speech_prob": 2.4439618755423e-06}, {"id": 1275, "seek": 365680, "start": 3672.1200000000003, "end": 3678.0800000000004, "text": " and the sizes kind of work out so that they're", "tokens": [50364, 264, 309, 71, 6542, 295, 9758, 70, 365, 3104, 281, 264, 361, 392, 6542, 50636, 50636, 295, 710, 69, 13, 50661, 50864, 407, 437, 321, 483, 510, 307, 257, 5386, 8062, 50976, 50976, 307, 2681, 281, 257, 5386, 8062, 17207, 538, 257, 8141, 11, 51130, 51130, 293, 264, 11602, 733, 295, 589, 484, 370, 300, 436, 434, 51428, 51428, 18218, 365, 1184, 661, 13, 51550, 51550, 407, 437, 307, 646, 79, 1513, 559, 399, 586, 30, 51634, 51634, 5833, 79, 1513, 559, 399, 307, 341, 8513, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1249394993205647, "compression_ratio": 1.6022099447513811, "no_speech_prob": 2.4439618755423e-06}, {"id": 1276, "seek": 365680, "start": 3678.0800000000004, "end": 3680.52, "text": " compatible with each other.", "tokens": [50364, 264, 309, 71, 6542, 295, 9758, 70, 365, 3104, 281, 264, 361, 392, 6542, 50636, 50636, 295, 710, 69, 13, 50661, 50864, 407, 437, 321, 483, 510, 307, 257, 5386, 8062, 50976, 50976, 307, 2681, 281, 257, 5386, 8062, 17207, 538, 257, 8141, 11, 51130, 51130, 293, 264, 11602, 733, 295, 589, 484, 370, 300, 436, 434, 51428, 51428, 18218, 365, 1184, 661, 13, 51550, 51550, 407, 437, 307, 646, 79, 1513, 559, 399, 586, 30, 51634, 51634, 5833, 79, 1513, 559, 399, 307, 341, 8513, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1249394993205647, "compression_ratio": 1.6022099447513811, "no_speech_prob": 2.4439618755423e-06}, {"id": 1277, "seek": 365680, "start": 3680.52, "end": 3682.2000000000003, "text": " So what is backpropagation now?", "tokens": [50364, 264, 309, 71, 6542, 295, 9758, 70, 365, 3104, 281, 264, 361, 392, 6542, 50636, 50636, 295, 710, 69, 13, 50661, 50864, 407, 437, 321, 483, 510, 307, 257, 5386, 8062, 50976, 50976, 307, 2681, 281, 257, 5386, 8062, 17207, 538, 257, 8141, 11, 51130, 51130, 293, 264, 11602, 733, 295, 589, 484, 370, 300, 436, 434, 51428, 51428, 18218, 365, 1184, 661, 13, 51550, 51550, 407, 437, 307, 646, 79, 1513, 559, 399, 586, 30, 51634, 51634, 5833, 79, 1513, 559, 399, 307, 341, 8513, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1249394993205647, "compression_ratio": 1.6022099447513811, "no_speech_prob": 2.4439618755423e-06}, {"id": 1278, "seek": 365680, "start": 3682.2000000000003, "end": 3685.2400000000002, "text": " Backpropagation is this formula.", "tokens": [50364, 264, 309, 71, 6542, 295, 9758, 70, 365, 3104, 281, 264, 361, 392, 6542, 50636, 50636, 295, 710, 69, 13, 50661, 50864, 407, 437, 321, 483, 510, 307, 257, 5386, 8062, 50976, 50976, 307, 2681, 281, 257, 5386, 8062, 17207, 538, 257, 8141, 11, 51130, 51130, 293, 264, 11602, 733, 295, 589, 484, 370, 300, 436, 434, 51428, 51428, 18218, 365, 1184, 661, 13, 51550, 51550, 407, 437, 307, 646, 79, 1513, 559, 399, 586, 30, 51634, 51634, 5833, 79, 1513, 559, 399, 307, 341, 8513, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1249394993205647, "compression_ratio": 1.6022099447513811, "no_speech_prob": 2.4439618755423e-06}, {"id": 1279, "seek": 368524, "start": 3685.24, "end": 3687.52, "text": " It says if you have the gradient of some cost function", "tokens": [50364, 467, 1619, 498, 291, 362, 264, 16235, 295, 512, 2063, 2445, 50478, 50478, 365, 3104, 281, 512, 7006, 11, 293, 291, 50586, 50586, 458, 264, 33621, 295, 341, 7006, 365, 3104, 50692, 50692, 281, 1071, 7006, 11, 291, 12972, 341, 16235, 8062, 50824, 50824, 538, 300, 14117, 952, 8141, 11, 293, 291, 483, 264, 16235, 8062, 50972, 50972, 365, 3104, 281, 300, 1150, 7006, 13, 51052, 51052, 407, 4295, 984, 510, 322, 264, 558, 11, 51234, 51234, 498, 286, 362, 264, 16235, 295, 264, 2063, 365, 3104, 51374, 51374, 281, 9758, 70, 11, 597, 307, 274, 66, 670, 9758, 70, 11, 293, 286, 51562, 51562, 528, 281, 14722, 264, 16235, 295, 269, 365, 3104, 281, 710, 69, 11, 597, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.149472911183427, "compression_ratio": 2.0748898678414096, "no_speech_prob": 5.337490620149765e-06}, {"id": 1280, "seek": 368524, "start": 3687.52, "end": 3689.68, "text": " with respect to some variable, and you", "tokens": [50364, 467, 1619, 498, 291, 362, 264, 16235, 295, 512, 2063, 2445, 50478, 50478, 365, 3104, 281, 512, 7006, 11, 293, 291, 50586, 50586, 458, 264, 33621, 295, 341, 7006, 365, 3104, 50692, 50692, 281, 1071, 7006, 11, 291, 12972, 341, 16235, 8062, 50824, 50824, 538, 300, 14117, 952, 8141, 11, 293, 291, 483, 264, 16235, 8062, 50972, 50972, 365, 3104, 281, 300, 1150, 7006, 13, 51052, 51052, 407, 4295, 984, 510, 322, 264, 558, 11, 51234, 51234, 498, 286, 362, 264, 16235, 295, 264, 2063, 365, 3104, 51374, 51374, 281, 9758, 70, 11, 597, 307, 274, 66, 670, 9758, 70, 11, 293, 286, 51562, 51562, 528, 281, 14722, 264, 16235, 295, 269, 365, 3104, 281, 710, 69, 11, 597, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.149472911183427, "compression_ratio": 2.0748898678414096, "no_speech_prob": 5.337490620149765e-06}, {"id": 1281, "seek": 368524, "start": 3689.68, "end": 3691.7999999999997, "text": " know the dependency of this variable with respect", "tokens": [50364, 467, 1619, 498, 291, 362, 264, 16235, 295, 512, 2063, 2445, 50478, 50478, 365, 3104, 281, 512, 7006, 11, 293, 291, 50586, 50586, 458, 264, 33621, 295, 341, 7006, 365, 3104, 50692, 50692, 281, 1071, 7006, 11, 291, 12972, 341, 16235, 8062, 50824, 50824, 538, 300, 14117, 952, 8141, 11, 293, 291, 483, 264, 16235, 8062, 50972, 50972, 365, 3104, 281, 300, 1150, 7006, 13, 51052, 51052, 407, 4295, 984, 510, 322, 264, 558, 11, 51234, 51234, 498, 286, 362, 264, 16235, 295, 264, 2063, 365, 3104, 51374, 51374, 281, 9758, 70, 11, 597, 307, 274, 66, 670, 9758, 70, 11, 293, 286, 51562, 51562, 528, 281, 14722, 264, 16235, 295, 269, 365, 3104, 281, 710, 69, 11, 597, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.149472911183427, "compression_ratio": 2.0748898678414096, "no_speech_prob": 5.337490620149765e-06}, {"id": 1282, "seek": 368524, "start": 3691.7999999999997, "end": 3694.4399999999996, "text": " to another variable, you multiply this gradient vector", "tokens": [50364, 467, 1619, 498, 291, 362, 264, 16235, 295, 512, 2063, 2445, 50478, 50478, 365, 3104, 281, 512, 7006, 11, 293, 291, 50586, 50586, 458, 264, 33621, 295, 341, 7006, 365, 3104, 50692, 50692, 281, 1071, 7006, 11, 291, 12972, 341, 16235, 8062, 50824, 50824, 538, 300, 14117, 952, 8141, 11, 293, 291, 483, 264, 16235, 8062, 50972, 50972, 365, 3104, 281, 300, 1150, 7006, 13, 51052, 51052, 407, 4295, 984, 510, 322, 264, 558, 11, 51234, 51234, 498, 286, 362, 264, 16235, 295, 264, 2063, 365, 3104, 51374, 51374, 281, 9758, 70, 11, 597, 307, 274, 66, 670, 9758, 70, 11, 293, 286, 51562, 51562, 528, 281, 14722, 264, 16235, 295, 269, 365, 3104, 281, 710, 69, 11, 597, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.149472911183427, "compression_ratio": 2.0748898678414096, "no_speech_prob": 5.337490620149765e-06}, {"id": 1283, "seek": 368524, "start": 3694.4399999999996, "end": 3697.3999999999996, "text": " by that Jacobian matrix, and you get the gradient vector", "tokens": [50364, 467, 1619, 498, 291, 362, 264, 16235, 295, 512, 2063, 2445, 50478, 50478, 365, 3104, 281, 512, 7006, 11, 293, 291, 50586, 50586, 458, 264, 33621, 295, 341, 7006, 365, 3104, 50692, 50692, 281, 1071, 7006, 11, 291, 12972, 341, 16235, 8062, 50824, 50824, 538, 300, 14117, 952, 8141, 11, 293, 291, 483, 264, 16235, 8062, 50972, 50972, 365, 3104, 281, 300, 1150, 7006, 13, 51052, 51052, 407, 4295, 984, 510, 322, 264, 558, 11, 51234, 51234, 498, 286, 362, 264, 16235, 295, 264, 2063, 365, 3104, 51374, 51374, 281, 9758, 70, 11, 597, 307, 274, 66, 670, 9758, 70, 11, 293, 286, 51562, 51562, 528, 281, 14722, 264, 16235, 295, 269, 365, 3104, 281, 710, 69, 11, 597, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.149472911183427, "compression_ratio": 2.0748898678414096, "no_speech_prob": 5.337490620149765e-06}, {"id": 1284, "seek": 368524, "start": 3697.3999999999996, "end": 3699.0, "text": " with respect to that second variable.", "tokens": [50364, 467, 1619, 498, 291, 362, 264, 16235, 295, 512, 2063, 2445, 50478, 50478, 365, 3104, 281, 512, 7006, 11, 293, 291, 50586, 50586, 458, 264, 33621, 295, 341, 7006, 365, 3104, 50692, 50692, 281, 1071, 7006, 11, 291, 12972, 341, 16235, 8062, 50824, 50824, 538, 300, 14117, 952, 8141, 11, 293, 291, 483, 264, 16235, 8062, 50972, 50972, 365, 3104, 281, 300, 1150, 7006, 13, 51052, 51052, 407, 4295, 984, 510, 322, 264, 558, 11, 51234, 51234, 498, 286, 362, 264, 16235, 295, 264, 2063, 365, 3104, 51374, 51374, 281, 9758, 70, 11, 597, 307, 274, 66, 670, 9758, 70, 11, 293, 286, 51562, 51562, 528, 281, 14722, 264, 16235, 295, 269, 365, 3104, 281, 710, 69, 11, 597, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.149472911183427, "compression_ratio": 2.0748898678414096, "no_speech_prob": 5.337490620149765e-06}, {"id": 1285, "seek": 368524, "start": 3699.0, "end": 3702.64, "text": " So graphically here on the right,", "tokens": [50364, 467, 1619, 498, 291, 362, 264, 16235, 295, 512, 2063, 2445, 50478, 50478, 365, 3104, 281, 512, 7006, 11, 293, 291, 50586, 50586, 458, 264, 33621, 295, 341, 7006, 365, 3104, 50692, 50692, 281, 1071, 7006, 11, 291, 12972, 341, 16235, 8062, 50824, 50824, 538, 300, 14117, 952, 8141, 11, 293, 291, 483, 264, 16235, 8062, 50972, 50972, 365, 3104, 281, 300, 1150, 7006, 13, 51052, 51052, 407, 4295, 984, 510, 322, 264, 558, 11, 51234, 51234, 498, 286, 362, 264, 16235, 295, 264, 2063, 365, 3104, 51374, 51374, 281, 9758, 70, 11, 597, 307, 274, 66, 670, 9758, 70, 11, 293, 286, 51562, 51562, 528, 281, 14722, 264, 16235, 295, 269, 365, 3104, 281, 710, 69, 11, 597, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.149472911183427, "compression_ratio": 2.0748898678414096, "no_speech_prob": 5.337490620149765e-06}, {"id": 1286, "seek": 368524, "start": 3702.64, "end": 3705.4399999999996, "text": " if I have the gradient of the cost with respect", "tokens": [50364, 467, 1619, 498, 291, 362, 264, 16235, 295, 512, 2063, 2445, 50478, 50478, 365, 3104, 281, 512, 7006, 11, 293, 291, 50586, 50586, 458, 264, 33621, 295, 341, 7006, 365, 3104, 50692, 50692, 281, 1071, 7006, 11, 291, 12972, 341, 16235, 8062, 50824, 50824, 538, 300, 14117, 952, 8141, 11, 293, 291, 483, 264, 16235, 8062, 50972, 50972, 365, 3104, 281, 300, 1150, 7006, 13, 51052, 51052, 407, 4295, 984, 510, 322, 264, 558, 11, 51234, 51234, 498, 286, 362, 264, 16235, 295, 264, 2063, 365, 3104, 51374, 51374, 281, 9758, 70, 11, 597, 307, 274, 66, 670, 9758, 70, 11, 293, 286, 51562, 51562, 528, 281, 14722, 264, 16235, 295, 269, 365, 3104, 281, 710, 69, 11, 597, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.149472911183427, "compression_ratio": 2.0748898678414096, "no_speech_prob": 5.337490620149765e-06}, {"id": 1287, "seek": 368524, "start": 3705.4399999999996, "end": 3709.2, "text": " to dzg, which is dc over dzg, and I", "tokens": [50364, 467, 1619, 498, 291, 362, 264, 16235, 295, 512, 2063, 2445, 50478, 50478, 365, 3104, 281, 512, 7006, 11, 293, 291, 50586, 50586, 458, 264, 33621, 295, 341, 7006, 365, 3104, 50692, 50692, 281, 1071, 7006, 11, 291, 12972, 341, 16235, 8062, 50824, 50824, 538, 300, 14117, 952, 8141, 11, 293, 291, 483, 264, 16235, 8062, 50972, 50972, 365, 3104, 281, 300, 1150, 7006, 13, 51052, 51052, 407, 4295, 984, 510, 322, 264, 558, 11, 51234, 51234, 498, 286, 362, 264, 16235, 295, 264, 2063, 365, 3104, 51374, 51374, 281, 9758, 70, 11, 597, 307, 274, 66, 670, 9758, 70, 11, 293, 286, 51562, 51562, 528, 281, 14722, 264, 16235, 295, 269, 365, 3104, 281, 710, 69, 11, 597, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.149472911183427, "compression_ratio": 2.0748898678414096, "no_speech_prob": 5.337490620149765e-06}, {"id": 1288, "seek": 368524, "start": 3709.2, "end": 3711.9599999999996, "text": " want to compute the gradient of c with respect to zf, which", "tokens": [50364, 467, 1619, 498, 291, 362, 264, 16235, 295, 512, 2063, 2445, 50478, 50478, 365, 3104, 281, 512, 7006, 11, 293, 291, 50586, 50586, 458, 264, 33621, 295, 341, 7006, 365, 3104, 50692, 50692, 281, 1071, 7006, 11, 291, 12972, 341, 16235, 8062, 50824, 50824, 538, 300, 14117, 952, 8141, 11, 293, 291, 483, 264, 16235, 8062, 50972, 50972, 365, 3104, 281, 300, 1150, 7006, 13, 51052, 51052, 407, 4295, 984, 510, 322, 264, 558, 11, 51234, 51234, 498, 286, 362, 264, 16235, 295, 264, 2063, 365, 3104, 51374, 51374, 281, 9758, 70, 11, 597, 307, 274, 66, 670, 9758, 70, 11, 293, 286, 51562, 51562, 528, 281, 14722, 264, 16235, 295, 269, 365, 3104, 281, 710, 69, 11, 597, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.149472911183427, "compression_ratio": 2.0748898678414096, "no_speech_prob": 5.337490620149765e-06}, {"id": 1289, "seek": 371196, "start": 3711.96, "end": 3716.4, "text": " is dc over dzf, I only need to take that vector, which", "tokens": [50364, 307, 274, 66, 670, 9758, 69, 11, 286, 787, 643, 281, 747, 300, 8062, 11, 597, 50586, 50586, 307, 257, 5386, 8062, 11, 12972, 309, 538, 264, 14117, 952, 8141, 11, 50724, 50724, 274, 70, 670, 9758, 69, 11, 420, 9758, 70, 670, 9758, 69, 11, 293, 286, 483, 274, 66, 670, 9758, 69, 13, 51060, 51060, 2264, 30, 51104, 51104, 467, 311, 341, 8513, 13, 51150, 51150, 8734, 307, 257, 857, 2657, 278, 510, 13, 51268, 51268, 6998, 380, 257, 28811, 5361, 510, 30, 51424, 51424, 3013, 28811, 30, 51510, 51510, 316, 28811, 295, 439, 264, 6677, 51596, 51596, 295, 613, 14641, 17596, 763, 13, 51764, 51764, 1692, 30, 51802, 51802, 865, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17612269773321637, "compression_ratio": 1.619718309859155, "no_speech_prob": 2.8854385163867846e-05}, {"id": 1290, "seek": 371196, "start": 3716.4, "end": 3719.16, "text": " is a row vector, multiply it by the Jacobian matrix,", "tokens": [50364, 307, 274, 66, 670, 9758, 69, 11, 286, 787, 643, 281, 747, 300, 8062, 11, 597, 50586, 50586, 307, 257, 5386, 8062, 11, 12972, 309, 538, 264, 14117, 952, 8141, 11, 50724, 50724, 274, 70, 670, 9758, 69, 11, 420, 9758, 70, 670, 9758, 69, 11, 293, 286, 483, 274, 66, 670, 9758, 69, 13, 51060, 51060, 2264, 30, 51104, 51104, 467, 311, 341, 8513, 13, 51150, 51150, 8734, 307, 257, 857, 2657, 278, 510, 13, 51268, 51268, 6998, 380, 257, 28811, 5361, 510, 30, 51424, 51424, 3013, 28811, 30, 51510, 51510, 316, 28811, 295, 439, 264, 6677, 51596, 51596, 295, 613, 14641, 17596, 763, 13, 51764, 51764, 1692, 30, 51802, 51802, 865, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17612269773321637, "compression_ratio": 1.619718309859155, "no_speech_prob": 2.8854385163867846e-05}, {"id": 1291, "seek": 371196, "start": 3719.16, "end": 3725.88, "text": " dg over dzf, or dzg over dzf, and I get dc over dzf.", "tokens": [50364, 307, 274, 66, 670, 9758, 69, 11, 286, 787, 643, 281, 747, 300, 8062, 11, 597, 50586, 50586, 307, 257, 5386, 8062, 11, 12972, 309, 538, 264, 14117, 952, 8141, 11, 50724, 50724, 274, 70, 670, 9758, 69, 11, 420, 9758, 70, 670, 9758, 69, 11, 293, 286, 483, 274, 66, 670, 9758, 69, 13, 51060, 51060, 2264, 30, 51104, 51104, 467, 311, 341, 8513, 13, 51150, 51150, 8734, 307, 257, 857, 2657, 278, 510, 13, 51268, 51268, 6998, 380, 257, 28811, 5361, 510, 30, 51424, 51424, 3013, 28811, 30, 51510, 51510, 316, 28811, 295, 439, 264, 6677, 51596, 51596, 295, 613, 14641, 17596, 763, 13, 51764, 51764, 1692, 30, 51802, 51802, 865, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17612269773321637, "compression_ratio": 1.619718309859155, "no_speech_prob": 2.8854385163867846e-05}, {"id": 1292, "seek": 371196, "start": 3725.88, "end": 3726.76, "text": " OK?", "tokens": [50364, 307, 274, 66, 670, 9758, 69, 11, 286, 787, 643, 281, 747, 300, 8062, 11, 597, 50586, 50586, 307, 257, 5386, 8062, 11, 12972, 309, 538, 264, 14117, 952, 8141, 11, 50724, 50724, 274, 70, 670, 9758, 69, 11, 420, 9758, 70, 670, 9758, 69, 11, 293, 286, 483, 274, 66, 670, 9758, 69, 13, 51060, 51060, 2264, 30, 51104, 51104, 467, 311, 341, 8513, 13, 51150, 51150, 8734, 307, 257, 857, 2657, 278, 510, 13, 51268, 51268, 6998, 380, 257, 28811, 5361, 510, 30, 51424, 51424, 3013, 28811, 30, 51510, 51510, 316, 28811, 295, 439, 264, 6677, 51596, 51596, 295, 613, 14641, 17596, 763, 13, 51764, 51764, 1692, 30, 51802, 51802, 865, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17612269773321637, "compression_ratio": 1.619718309859155, "no_speech_prob": 2.8854385163867846e-05}, {"id": 1293, "seek": 371196, "start": 3726.76, "end": 3727.68, "text": " It's this formula.", "tokens": [50364, 307, 274, 66, 670, 9758, 69, 11, 286, 787, 643, 281, 747, 300, 8062, 11, 597, 50586, 50586, 307, 257, 5386, 8062, 11, 12972, 309, 538, 264, 14117, 952, 8141, 11, 50724, 50724, 274, 70, 670, 9758, 69, 11, 420, 9758, 70, 670, 9758, 69, 11, 293, 286, 483, 274, 66, 670, 9758, 69, 13, 51060, 51060, 2264, 30, 51104, 51104, 467, 311, 341, 8513, 13, 51150, 51150, 8734, 307, 257, 857, 2657, 278, 510, 13, 51268, 51268, 6998, 380, 257, 28811, 5361, 510, 30, 51424, 51424, 3013, 28811, 30, 51510, 51510, 316, 28811, 295, 439, 264, 6677, 51596, 51596, 295, 613, 14641, 17596, 763, 13, 51764, 51764, 1692, 30, 51802, 51802, 865, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17612269773321637, "compression_ratio": 1.619718309859155, "no_speech_prob": 2.8854385163867846e-05}, {"id": 1294, "seek": 371196, "start": 3727.68, "end": 3730.04, "text": " Someone is a bit objecting here.", "tokens": [50364, 307, 274, 66, 670, 9758, 69, 11, 286, 787, 643, 281, 747, 300, 8062, 11, 597, 50586, 50586, 307, 257, 5386, 8062, 11, 12972, 309, 538, 264, 14117, 952, 8141, 11, 50724, 50724, 274, 70, 670, 9758, 69, 11, 420, 9758, 70, 670, 9758, 69, 11, 293, 286, 483, 274, 66, 670, 9758, 69, 13, 51060, 51060, 2264, 30, 51104, 51104, 467, 311, 341, 8513, 13, 51150, 51150, 8734, 307, 257, 857, 2657, 278, 510, 13, 51268, 51268, 6998, 380, 257, 28811, 5361, 510, 30, 51424, 51424, 3013, 28811, 30, 51510, 51510, 316, 28811, 295, 439, 264, 6677, 51596, 51596, 295, 613, 14641, 17596, 763, 13, 51764, 51764, 1692, 30, 51802, 51802, 865, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17612269773321637, "compression_ratio": 1.619718309859155, "no_speech_prob": 2.8854385163867846e-05}, {"id": 1295, "seek": 371196, "start": 3730.04, "end": 3733.16, "text": " Isn't a summation missing here?", "tokens": [50364, 307, 274, 66, 670, 9758, 69, 11, 286, 787, 643, 281, 747, 300, 8062, 11, 597, 50586, 50586, 307, 257, 5386, 8062, 11, 12972, 309, 538, 264, 14117, 952, 8141, 11, 50724, 50724, 274, 70, 670, 9758, 69, 11, 420, 9758, 70, 670, 9758, 69, 11, 293, 286, 483, 274, 66, 670, 9758, 69, 13, 51060, 51060, 2264, 30, 51104, 51104, 467, 311, 341, 8513, 13, 51150, 51150, 8734, 307, 257, 857, 2657, 278, 510, 13, 51268, 51268, 6998, 380, 257, 28811, 5361, 510, 30, 51424, 51424, 3013, 28811, 30, 51510, 51510, 316, 28811, 295, 439, 264, 6677, 51596, 51596, 295, 613, 14641, 17596, 763, 13, 51764, 51764, 1692, 30, 51802, 51802, 865, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17612269773321637, "compression_ratio": 1.619718309859155, "no_speech_prob": 2.8854385163867846e-05}, {"id": 1296, "seek": 371196, "start": 3733.16, "end": 3734.88, "text": " Which summation?", "tokens": [50364, 307, 274, 66, 670, 9758, 69, 11, 286, 787, 643, 281, 747, 300, 8062, 11, 597, 50586, 50586, 307, 257, 5386, 8062, 11, 12972, 309, 538, 264, 14117, 952, 8141, 11, 50724, 50724, 274, 70, 670, 9758, 69, 11, 420, 9758, 70, 670, 9758, 69, 11, 293, 286, 483, 274, 66, 670, 9758, 69, 13, 51060, 51060, 2264, 30, 51104, 51104, 467, 311, 341, 8513, 13, 51150, 51150, 8734, 307, 257, 857, 2657, 278, 510, 13, 51268, 51268, 6998, 380, 257, 28811, 5361, 510, 30, 51424, 51424, 3013, 28811, 30, 51510, 51510, 316, 28811, 295, 439, 264, 6677, 51596, 51596, 295, 613, 14641, 17596, 763, 13, 51764, 51764, 1692, 30, 51802, 51802, 865, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17612269773321637, "compression_ratio": 1.619718309859155, "no_speech_prob": 2.8854385163867846e-05}, {"id": 1297, "seek": 371196, "start": 3734.88, "end": 3736.6, "text": " A summation of all the components", "tokens": [50364, 307, 274, 66, 670, 9758, 69, 11, 286, 787, 643, 281, 747, 300, 8062, 11, 597, 50586, 50586, 307, 257, 5386, 8062, 11, 12972, 309, 538, 264, 14117, 952, 8141, 11, 50724, 50724, 274, 70, 670, 9758, 69, 11, 420, 9758, 70, 670, 9758, 69, 11, 293, 286, 483, 274, 66, 670, 9758, 69, 13, 51060, 51060, 2264, 30, 51104, 51104, 467, 311, 341, 8513, 13, 51150, 51150, 8734, 307, 257, 857, 2657, 278, 510, 13, 51268, 51268, 6998, 380, 257, 28811, 5361, 510, 30, 51424, 51424, 3013, 28811, 30, 51510, 51510, 316, 28811, 295, 439, 264, 6677, 51596, 51596, 295, 613, 14641, 17596, 763, 13, 51764, 51764, 1692, 30, 51802, 51802, 865, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17612269773321637, "compression_ratio": 1.619718309859155, "no_speech_prob": 2.8854385163867846e-05}, {"id": 1298, "seek": 371196, "start": 3736.6, "end": 3739.96, "text": " of these partial multiplications.", "tokens": [50364, 307, 274, 66, 670, 9758, 69, 11, 286, 787, 643, 281, 747, 300, 8062, 11, 597, 50586, 50586, 307, 257, 5386, 8062, 11, 12972, 309, 538, 264, 14117, 952, 8141, 11, 50724, 50724, 274, 70, 670, 9758, 69, 11, 420, 9758, 70, 670, 9758, 69, 11, 293, 286, 483, 274, 66, 670, 9758, 69, 13, 51060, 51060, 2264, 30, 51104, 51104, 467, 311, 341, 8513, 13, 51150, 51150, 8734, 307, 257, 857, 2657, 278, 510, 13, 51268, 51268, 6998, 380, 257, 28811, 5361, 510, 30, 51424, 51424, 3013, 28811, 30, 51510, 51510, 316, 28811, 295, 439, 264, 6677, 51596, 51596, 295, 613, 14641, 17596, 763, 13, 51764, 51764, 1692, 30, 51802, 51802, 865, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17612269773321637, "compression_ratio": 1.619718309859155, "no_speech_prob": 2.8854385163867846e-05}, {"id": 1299, "seek": 371196, "start": 3739.96, "end": 3740.7200000000003, "text": " Here?", "tokens": [50364, 307, 274, 66, 670, 9758, 69, 11, 286, 787, 643, 281, 747, 300, 8062, 11, 597, 50586, 50586, 307, 257, 5386, 8062, 11, 12972, 309, 538, 264, 14117, 952, 8141, 11, 50724, 50724, 274, 70, 670, 9758, 69, 11, 420, 9758, 70, 670, 9758, 69, 11, 293, 286, 483, 274, 66, 670, 9758, 69, 13, 51060, 51060, 2264, 30, 51104, 51104, 467, 311, 341, 8513, 13, 51150, 51150, 8734, 307, 257, 857, 2657, 278, 510, 13, 51268, 51268, 6998, 380, 257, 28811, 5361, 510, 30, 51424, 51424, 3013, 28811, 30, 51510, 51510, 316, 28811, 295, 439, 264, 6677, 51596, 51596, 295, 613, 14641, 17596, 763, 13, 51764, 51764, 1692, 30, 51802, 51802, 865, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17612269773321637, "compression_ratio": 1.619718309859155, "no_speech_prob": 2.8854385163867846e-05}, {"id": 1300, "seek": 371196, "start": 3740.7200000000003, "end": 3741.76, "text": " Yeah.", "tokens": [50364, 307, 274, 66, 670, 9758, 69, 11, 286, 787, 643, 281, 747, 300, 8062, 11, 597, 50586, 50586, 307, 257, 5386, 8062, 11, 12972, 309, 538, 264, 14117, 952, 8141, 11, 50724, 50724, 274, 70, 670, 9758, 69, 11, 420, 9758, 70, 670, 9758, 69, 11, 293, 286, 483, 274, 66, 670, 9758, 69, 13, 51060, 51060, 2264, 30, 51104, 51104, 467, 311, 341, 8513, 13, 51150, 51150, 8734, 307, 257, 857, 2657, 278, 510, 13, 51268, 51268, 6998, 380, 257, 28811, 5361, 510, 30, 51424, 51424, 3013, 28811, 30, 51510, 51510, 316, 28811, 295, 439, 264, 6677, 51596, 51596, 295, 613, 14641, 17596, 763, 13, 51764, 51764, 1692, 30, 51802, 51802, 865, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.17612269773321637, "compression_ratio": 1.619718309859155, "no_speech_prob": 2.8854385163867846e-05}, {"id": 1301, "seek": 374176, "start": 3741.76, "end": 3742.76, "text": " Well, this is a vector.", "tokens": [50364, 1042, 11, 341, 307, 257, 8062, 13, 50414, 50414, 639, 307, 257, 8062, 13, 50448, 50448, 639, 307, 257, 8141, 13, 50484, 50484, 821, 307, 257, 688, 295, 34499, 516, 322, 510, 11, 50546, 50546, 570, 562, 291, 14722, 264, 1674, 295, 341, 8062, 50642, 50642, 365, 1080, 8141, 11, 291, 434, 516, 281, 362, 257, 688, 295, 34499, 11, 558, 30, 50756, 50756, 7010, 13, 50782, 50782, 407, 309, 311, 7633, 11, 558, 30, 50870, 50870, 865, 11, 264, 34499, 366, 7633, 1854, 295, 341, 8062, 8141, 1674, 13, 51060, 51304, 509, 393, 747, 257, 2685, 1365, 13, 51382, 51382, 961, 311, 3811, 300, 341, 290, 2445, 307, 445, 51480, 51480, 257, 8141, 27290, 13, 51558, 51558, 492, 445, 12972, 538, 710, 69, 538, 8141, 261, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16491067770755652, "compression_ratio": 1.8174273858921162, "no_speech_prob": 5.093475920148194e-06}, {"id": 1302, "seek": 374176, "start": 3742.76, "end": 3743.44, "text": " This is a vector.", "tokens": [50364, 1042, 11, 341, 307, 257, 8062, 13, 50414, 50414, 639, 307, 257, 8062, 13, 50448, 50448, 639, 307, 257, 8141, 13, 50484, 50484, 821, 307, 257, 688, 295, 34499, 516, 322, 510, 11, 50546, 50546, 570, 562, 291, 14722, 264, 1674, 295, 341, 8062, 50642, 50642, 365, 1080, 8141, 11, 291, 434, 516, 281, 362, 257, 688, 295, 34499, 11, 558, 30, 50756, 50756, 7010, 13, 50782, 50782, 407, 309, 311, 7633, 11, 558, 30, 50870, 50870, 865, 11, 264, 34499, 366, 7633, 1854, 295, 341, 8062, 8141, 1674, 13, 51060, 51304, 509, 393, 747, 257, 2685, 1365, 13, 51382, 51382, 961, 311, 3811, 300, 341, 290, 2445, 307, 445, 51480, 51480, 257, 8141, 27290, 13, 51558, 51558, 492, 445, 12972, 538, 710, 69, 538, 8141, 261, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16491067770755652, "compression_ratio": 1.8174273858921162, "no_speech_prob": 5.093475920148194e-06}, {"id": 1303, "seek": 374176, "start": 3743.44, "end": 3744.1600000000003, "text": " This is a matrix.", "tokens": [50364, 1042, 11, 341, 307, 257, 8062, 13, 50414, 50414, 639, 307, 257, 8062, 13, 50448, 50448, 639, 307, 257, 8141, 13, 50484, 50484, 821, 307, 257, 688, 295, 34499, 516, 322, 510, 11, 50546, 50546, 570, 562, 291, 14722, 264, 1674, 295, 341, 8062, 50642, 50642, 365, 1080, 8141, 11, 291, 434, 516, 281, 362, 257, 688, 295, 34499, 11, 558, 30, 50756, 50756, 7010, 13, 50782, 50782, 407, 309, 311, 7633, 11, 558, 30, 50870, 50870, 865, 11, 264, 34499, 366, 7633, 1854, 295, 341, 8062, 8141, 1674, 13, 51060, 51304, 509, 393, 747, 257, 2685, 1365, 13, 51382, 51382, 961, 311, 3811, 300, 341, 290, 2445, 307, 445, 51480, 51480, 257, 8141, 27290, 13, 51558, 51558, 492, 445, 12972, 538, 710, 69, 538, 8141, 261, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16491067770755652, "compression_ratio": 1.8174273858921162, "no_speech_prob": 5.093475920148194e-06}, {"id": 1304, "seek": 374176, "start": 3744.1600000000003, "end": 3745.4, "text": " There is a lot of sums going on here,", "tokens": [50364, 1042, 11, 341, 307, 257, 8062, 13, 50414, 50414, 639, 307, 257, 8062, 13, 50448, 50448, 639, 307, 257, 8141, 13, 50484, 50484, 821, 307, 257, 688, 295, 34499, 516, 322, 510, 11, 50546, 50546, 570, 562, 291, 14722, 264, 1674, 295, 341, 8062, 50642, 50642, 365, 1080, 8141, 11, 291, 434, 516, 281, 362, 257, 688, 295, 34499, 11, 558, 30, 50756, 50756, 7010, 13, 50782, 50782, 407, 309, 311, 7633, 11, 558, 30, 50870, 50870, 865, 11, 264, 34499, 366, 7633, 1854, 295, 341, 8062, 8141, 1674, 13, 51060, 51304, 509, 393, 747, 257, 2685, 1365, 13, 51382, 51382, 961, 311, 3811, 300, 341, 290, 2445, 307, 445, 51480, 51480, 257, 8141, 27290, 13, 51558, 51558, 492, 445, 12972, 538, 710, 69, 538, 8141, 261, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16491067770755652, "compression_ratio": 1.8174273858921162, "no_speech_prob": 5.093475920148194e-06}, {"id": 1305, "seek": 374176, "start": 3745.4, "end": 3747.32, "text": " because when you compute the product of this vector", "tokens": [50364, 1042, 11, 341, 307, 257, 8062, 13, 50414, 50414, 639, 307, 257, 8062, 13, 50448, 50448, 639, 307, 257, 8141, 13, 50484, 50484, 821, 307, 257, 688, 295, 34499, 516, 322, 510, 11, 50546, 50546, 570, 562, 291, 14722, 264, 1674, 295, 341, 8062, 50642, 50642, 365, 1080, 8141, 11, 291, 434, 516, 281, 362, 257, 688, 295, 34499, 11, 558, 30, 50756, 50756, 7010, 13, 50782, 50782, 407, 309, 311, 7633, 11, 558, 30, 50870, 50870, 865, 11, 264, 34499, 366, 7633, 1854, 295, 341, 8062, 8141, 1674, 13, 51060, 51304, 509, 393, 747, 257, 2685, 1365, 13, 51382, 51382, 961, 311, 3811, 300, 341, 290, 2445, 307, 445, 51480, 51480, 257, 8141, 27290, 13, 51558, 51558, 492, 445, 12972, 538, 710, 69, 538, 8141, 261, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16491067770755652, "compression_ratio": 1.8174273858921162, "no_speech_prob": 5.093475920148194e-06}, {"id": 1306, "seek": 374176, "start": 3747.32, "end": 3749.6000000000004, "text": " with its matrix, you're going to have a lot of sums, right?", "tokens": [50364, 1042, 11, 341, 307, 257, 8062, 13, 50414, 50414, 639, 307, 257, 8062, 13, 50448, 50448, 639, 307, 257, 8141, 13, 50484, 50484, 821, 307, 257, 688, 295, 34499, 516, 322, 510, 11, 50546, 50546, 570, 562, 291, 14722, 264, 1674, 295, 341, 8062, 50642, 50642, 365, 1080, 8141, 11, 291, 434, 516, 281, 362, 257, 688, 295, 34499, 11, 558, 30, 50756, 50756, 7010, 13, 50782, 50782, 407, 309, 311, 7633, 11, 558, 30, 50870, 50870, 865, 11, 264, 34499, 366, 7633, 1854, 295, 341, 8062, 8141, 1674, 13, 51060, 51304, 509, 393, 747, 257, 2685, 1365, 13, 51382, 51382, 961, 311, 3811, 300, 341, 290, 2445, 307, 445, 51480, 51480, 257, 8141, 27290, 13, 51558, 51558, 492, 445, 12972, 538, 710, 69, 538, 8141, 261, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16491067770755652, "compression_ratio": 1.8174273858921162, "no_speech_prob": 5.093475920148194e-06}, {"id": 1307, "seek": 374176, "start": 3749.6000000000004, "end": 3750.1200000000003, "text": " Yep.", "tokens": [50364, 1042, 11, 341, 307, 257, 8062, 13, 50414, 50414, 639, 307, 257, 8062, 13, 50448, 50448, 639, 307, 257, 8141, 13, 50484, 50484, 821, 307, 257, 688, 295, 34499, 516, 322, 510, 11, 50546, 50546, 570, 562, 291, 14722, 264, 1674, 295, 341, 8062, 50642, 50642, 365, 1080, 8141, 11, 291, 434, 516, 281, 362, 257, 688, 295, 34499, 11, 558, 30, 50756, 50756, 7010, 13, 50782, 50782, 407, 309, 311, 7633, 11, 558, 30, 50870, 50870, 865, 11, 264, 34499, 366, 7633, 1854, 295, 341, 8062, 8141, 1674, 13, 51060, 51304, 509, 393, 747, 257, 2685, 1365, 13, 51382, 51382, 961, 311, 3811, 300, 341, 290, 2445, 307, 445, 51480, 51480, 257, 8141, 27290, 13, 51558, 51558, 492, 445, 12972, 538, 710, 69, 538, 8141, 261, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16491067770755652, "compression_ratio": 1.8174273858921162, "no_speech_prob": 5.093475920148194e-06}, {"id": 1308, "seek": 374176, "start": 3750.1200000000003, "end": 3751.88, "text": " So it's hidden, right?", "tokens": [50364, 1042, 11, 341, 307, 257, 8062, 13, 50414, 50414, 639, 307, 257, 8062, 13, 50448, 50448, 639, 307, 257, 8141, 13, 50484, 50484, 821, 307, 257, 688, 295, 34499, 516, 322, 510, 11, 50546, 50546, 570, 562, 291, 14722, 264, 1674, 295, 341, 8062, 50642, 50642, 365, 1080, 8141, 11, 291, 434, 516, 281, 362, 257, 688, 295, 34499, 11, 558, 30, 50756, 50756, 7010, 13, 50782, 50782, 407, 309, 311, 7633, 11, 558, 30, 50870, 50870, 865, 11, 264, 34499, 366, 7633, 1854, 295, 341, 8062, 8141, 1674, 13, 51060, 51304, 509, 393, 747, 257, 2685, 1365, 13, 51382, 51382, 961, 311, 3811, 300, 341, 290, 2445, 307, 445, 51480, 51480, 257, 8141, 27290, 13, 51558, 51558, 492, 445, 12972, 538, 710, 69, 538, 8141, 261, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16491067770755652, "compression_ratio": 1.8174273858921162, "no_speech_prob": 5.093475920148194e-06}, {"id": 1309, "seek": 374176, "start": 3751.88, "end": 3755.6800000000003, "text": " Yeah, the sums are hidden inside of this vector matrix product.", "tokens": [50364, 1042, 11, 341, 307, 257, 8062, 13, 50414, 50414, 639, 307, 257, 8062, 13, 50448, 50448, 639, 307, 257, 8141, 13, 50484, 50484, 821, 307, 257, 688, 295, 34499, 516, 322, 510, 11, 50546, 50546, 570, 562, 291, 14722, 264, 1674, 295, 341, 8062, 50642, 50642, 365, 1080, 8141, 11, 291, 434, 516, 281, 362, 257, 688, 295, 34499, 11, 558, 30, 50756, 50756, 7010, 13, 50782, 50782, 407, 309, 311, 7633, 11, 558, 30, 50870, 50870, 865, 11, 264, 34499, 366, 7633, 1854, 295, 341, 8062, 8141, 1674, 13, 51060, 51304, 509, 393, 747, 257, 2685, 1365, 13, 51382, 51382, 961, 311, 3811, 300, 341, 290, 2445, 307, 445, 51480, 51480, 257, 8141, 27290, 13, 51558, 51558, 492, 445, 12972, 538, 710, 69, 538, 8141, 261, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16491067770755652, "compression_ratio": 1.8174273858921162, "no_speech_prob": 5.093475920148194e-06}, {"id": 1310, "seek": 374176, "start": 3760.5600000000004, "end": 3762.1200000000003, "text": " You can take a specific example.", "tokens": [50364, 1042, 11, 341, 307, 257, 8062, 13, 50414, 50414, 639, 307, 257, 8062, 13, 50448, 50448, 639, 307, 257, 8141, 13, 50484, 50484, 821, 307, 257, 688, 295, 34499, 516, 322, 510, 11, 50546, 50546, 570, 562, 291, 14722, 264, 1674, 295, 341, 8062, 50642, 50642, 365, 1080, 8141, 11, 291, 434, 516, 281, 362, 257, 688, 295, 34499, 11, 558, 30, 50756, 50756, 7010, 13, 50782, 50782, 407, 309, 311, 7633, 11, 558, 30, 50870, 50870, 865, 11, 264, 34499, 366, 7633, 1854, 295, 341, 8062, 8141, 1674, 13, 51060, 51304, 509, 393, 747, 257, 2685, 1365, 13, 51382, 51382, 961, 311, 3811, 300, 341, 290, 2445, 307, 445, 51480, 51480, 257, 8141, 27290, 13, 51558, 51558, 492, 445, 12972, 538, 710, 69, 538, 8141, 261, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16491067770755652, "compression_ratio": 1.8174273858921162, "no_speech_prob": 5.093475920148194e-06}, {"id": 1311, "seek": 374176, "start": 3762.1200000000003, "end": 3764.0800000000004, "text": " Let's imagine that this g function is just", "tokens": [50364, 1042, 11, 341, 307, 257, 8062, 13, 50414, 50414, 639, 307, 257, 8062, 13, 50448, 50448, 639, 307, 257, 8141, 13, 50484, 50484, 821, 307, 257, 688, 295, 34499, 516, 322, 510, 11, 50546, 50546, 570, 562, 291, 14722, 264, 1674, 295, 341, 8062, 50642, 50642, 365, 1080, 8141, 11, 291, 434, 516, 281, 362, 257, 688, 295, 34499, 11, 558, 30, 50756, 50756, 7010, 13, 50782, 50782, 407, 309, 311, 7633, 11, 558, 30, 50870, 50870, 865, 11, 264, 34499, 366, 7633, 1854, 295, 341, 8062, 8141, 1674, 13, 51060, 51304, 509, 393, 747, 257, 2685, 1365, 13, 51382, 51382, 961, 311, 3811, 300, 341, 290, 2445, 307, 445, 51480, 51480, 257, 8141, 27290, 13, 51558, 51558, 492, 445, 12972, 538, 710, 69, 538, 8141, 261, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16491067770755652, "compression_ratio": 1.8174273858921162, "no_speech_prob": 5.093475920148194e-06}, {"id": 1312, "seek": 374176, "start": 3764.0800000000004, "end": 3765.6400000000003, "text": " a matrix multiplication.", "tokens": [50364, 1042, 11, 341, 307, 257, 8062, 13, 50414, 50414, 639, 307, 257, 8062, 13, 50448, 50448, 639, 307, 257, 8141, 13, 50484, 50484, 821, 307, 257, 688, 295, 34499, 516, 322, 510, 11, 50546, 50546, 570, 562, 291, 14722, 264, 1674, 295, 341, 8062, 50642, 50642, 365, 1080, 8141, 11, 291, 434, 516, 281, 362, 257, 688, 295, 34499, 11, 558, 30, 50756, 50756, 7010, 13, 50782, 50782, 407, 309, 311, 7633, 11, 558, 30, 50870, 50870, 865, 11, 264, 34499, 366, 7633, 1854, 295, 341, 8062, 8141, 1674, 13, 51060, 51304, 509, 393, 747, 257, 2685, 1365, 13, 51382, 51382, 961, 311, 3811, 300, 341, 290, 2445, 307, 445, 51480, 51480, 257, 8141, 27290, 13, 51558, 51558, 492, 445, 12972, 538, 710, 69, 538, 8141, 261, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16491067770755652, "compression_ratio": 1.8174273858921162, "no_speech_prob": 5.093475920148194e-06}, {"id": 1313, "seek": 374176, "start": 3765.6400000000003, "end": 3770.28, "text": " We just multiply by zf by matrix w.", "tokens": [50364, 1042, 11, 341, 307, 257, 8062, 13, 50414, 50414, 639, 307, 257, 8062, 13, 50448, 50448, 639, 307, 257, 8141, 13, 50484, 50484, 821, 307, 257, 688, 295, 34499, 516, 322, 510, 11, 50546, 50546, 570, 562, 291, 14722, 264, 1674, 295, 341, 8062, 50642, 50642, 365, 1080, 8141, 11, 291, 434, 516, 281, 362, 257, 688, 295, 34499, 11, 558, 30, 50756, 50756, 7010, 13, 50782, 50782, 407, 309, 311, 7633, 11, 558, 30, 50870, 50870, 865, 11, 264, 34499, 366, 7633, 1854, 295, 341, 8062, 8141, 1674, 13, 51060, 51304, 509, 393, 747, 257, 2685, 1365, 13, 51382, 51382, 961, 311, 3811, 300, 341, 290, 2445, 307, 445, 51480, 51480, 257, 8141, 27290, 13, 51558, 51558, 492, 445, 12972, 538, 710, 69, 538, 8141, 261, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.16491067770755652, "compression_ratio": 1.8174273858921162, "no_speech_prob": 5.093475920148194e-06}, {"id": 1314, "seek": 377028, "start": 3770.28, "end": 3771.7200000000003, "text": " So we have a linear operation.", "tokens": [50364, 407, 321, 362, 257, 8213, 6916, 13, 50436, 50436, 440, 13760, 295, 264, 14117, 952, 8141, 50586, 50586, 295, 264, 27290, 538, 8141, 307, 50738, 50738, 264, 25167, 295, 300, 8141, 13, 50808, 50808, 407, 437, 321, 434, 516, 281, 360, 510, 307, 747, 341, 8062, 11, 50940, 50940, 12972, 309, 538, 264, 25167, 295, 264, 261, 8141, 11, 51096, 51096, 293, 437, 321, 483, 307, 300, 8062, 13, 51302, 51302, 2264, 30, 51376, 51376, 400, 309, 439, 1669, 2020, 11, 558, 30, 51454, 51454, 440, 11602, 652, 2020, 13, 51542, 51542, 639, 8141, 510, 307, 264, 25167, 295, 264, 3364, 8141, 11, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12026543483555874, "compression_ratio": 1.8341463414634147, "no_speech_prob": 7.888894288043957e-06}, {"id": 1315, "seek": 377028, "start": 3771.7200000000003, "end": 3774.7200000000003, "text": " The derivative of the Jacobian matrix", "tokens": [50364, 407, 321, 362, 257, 8213, 6916, 13, 50436, 50436, 440, 13760, 295, 264, 14117, 952, 8141, 50586, 50586, 295, 264, 27290, 538, 8141, 307, 50738, 50738, 264, 25167, 295, 300, 8141, 13, 50808, 50808, 407, 437, 321, 434, 516, 281, 360, 510, 307, 747, 341, 8062, 11, 50940, 50940, 12972, 309, 538, 264, 25167, 295, 264, 261, 8141, 11, 51096, 51096, 293, 437, 321, 483, 307, 300, 8062, 13, 51302, 51302, 2264, 30, 51376, 51376, 400, 309, 439, 1669, 2020, 11, 558, 30, 51454, 51454, 440, 11602, 652, 2020, 13, 51542, 51542, 639, 8141, 510, 307, 264, 25167, 295, 264, 3364, 8141, 11, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12026543483555874, "compression_ratio": 1.8341463414634147, "no_speech_prob": 7.888894288043957e-06}, {"id": 1316, "seek": 377028, "start": 3774.7200000000003, "end": 3777.76, "text": " of the multiplication by matrix is", "tokens": [50364, 407, 321, 362, 257, 8213, 6916, 13, 50436, 50436, 440, 13760, 295, 264, 14117, 952, 8141, 50586, 50586, 295, 264, 27290, 538, 8141, 307, 50738, 50738, 264, 25167, 295, 300, 8141, 13, 50808, 50808, 407, 437, 321, 434, 516, 281, 360, 510, 307, 747, 341, 8062, 11, 50940, 50940, 12972, 309, 538, 264, 25167, 295, 264, 261, 8141, 11, 51096, 51096, 293, 437, 321, 483, 307, 300, 8062, 13, 51302, 51302, 2264, 30, 51376, 51376, 400, 309, 439, 1669, 2020, 11, 558, 30, 51454, 51454, 440, 11602, 652, 2020, 13, 51542, 51542, 639, 8141, 510, 307, 264, 25167, 295, 264, 3364, 8141, 11, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12026543483555874, "compression_ratio": 1.8341463414634147, "no_speech_prob": 7.888894288043957e-06}, {"id": 1317, "seek": 377028, "start": 3777.76, "end": 3779.1600000000003, "text": " the transpose of that matrix.", "tokens": [50364, 407, 321, 362, 257, 8213, 6916, 13, 50436, 50436, 440, 13760, 295, 264, 14117, 952, 8141, 50586, 50586, 295, 264, 27290, 538, 8141, 307, 50738, 50738, 264, 25167, 295, 300, 8141, 13, 50808, 50808, 407, 437, 321, 434, 516, 281, 360, 510, 307, 747, 341, 8062, 11, 50940, 50940, 12972, 309, 538, 264, 25167, 295, 264, 261, 8141, 11, 51096, 51096, 293, 437, 321, 483, 307, 300, 8062, 13, 51302, 51302, 2264, 30, 51376, 51376, 400, 309, 439, 1669, 2020, 11, 558, 30, 51454, 51454, 440, 11602, 652, 2020, 13, 51542, 51542, 639, 8141, 510, 307, 264, 25167, 295, 264, 3364, 8141, 11, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12026543483555874, "compression_ratio": 1.8341463414634147, "no_speech_prob": 7.888894288043957e-06}, {"id": 1318, "seek": 377028, "start": 3779.1600000000003, "end": 3781.8, "text": " So what we're going to do here is take this vector,", "tokens": [50364, 407, 321, 362, 257, 8213, 6916, 13, 50436, 50436, 440, 13760, 295, 264, 14117, 952, 8141, 50586, 50586, 295, 264, 27290, 538, 8141, 307, 50738, 50738, 264, 25167, 295, 300, 8141, 13, 50808, 50808, 407, 437, 321, 434, 516, 281, 360, 510, 307, 747, 341, 8062, 11, 50940, 50940, 12972, 309, 538, 264, 25167, 295, 264, 261, 8141, 11, 51096, 51096, 293, 437, 321, 483, 307, 300, 8062, 13, 51302, 51302, 2264, 30, 51376, 51376, 400, 309, 439, 1669, 2020, 11, 558, 30, 51454, 51454, 440, 11602, 652, 2020, 13, 51542, 51542, 639, 8141, 510, 307, 264, 25167, 295, 264, 3364, 8141, 11, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12026543483555874, "compression_ratio": 1.8341463414634147, "no_speech_prob": 7.888894288043957e-06}, {"id": 1319, "seek": 377028, "start": 3781.8, "end": 3784.92, "text": " multiply it by the transpose of the w matrix,", "tokens": [50364, 407, 321, 362, 257, 8213, 6916, 13, 50436, 50436, 440, 13760, 295, 264, 14117, 952, 8141, 50586, 50586, 295, 264, 27290, 538, 8141, 307, 50738, 50738, 264, 25167, 295, 300, 8141, 13, 50808, 50808, 407, 437, 321, 434, 516, 281, 360, 510, 307, 747, 341, 8062, 11, 50940, 50940, 12972, 309, 538, 264, 25167, 295, 264, 261, 8141, 11, 51096, 51096, 293, 437, 321, 483, 307, 300, 8062, 13, 51302, 51302, 2264, 30, 51376, 51376, 400, 309, 439, 1669, 2020, 11, 558, 30, 51454, 51454, 440, 11602, 652, 2020, 13, 51542, 51542, 639, 8141, 510, 307, 264, 25167, 295, 264, 3364, 8141, 11, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12026543483555874, "compression_ratio": 1.8341463414634147, "no_speech_prob": 7.888894288043957e-06}, {"id": 1320, "seek": 377028, "start": 3784.92, "end": 3789.0400000000004, "text": " and what we get is that vector.", "tokens": [50364, 407, 321, 362, 257, 8213, 6916, 13, 50436, 50436, 440, 13760, 295, 264, 14117, 952, 8141, 50586, 50586, 295, 264, 27290, 538, 8141, 307, 50738, 50738, 264, 25167, 295, 300, 8141, 13, 50808, 50808, 407, 437, 321, 434, 516, 281, 360, 510, 307, 747, 341, 8062, 11, 50940, 50940, 12972, 309, 538, 264, 25167, 295, 264, 261, 8141, 11, 51096, 51096, 293, 437, 321, 483, 307, 300, 8062, 13, 51302, 51302, 2264, 30, 51376, 51376, 400, 309, 439, 1669, 2020, 11, 558, 30, 51454, 51454, 440, 11602, 652, 2020, 13, 51542, 51542, 639, 8141, 510, 307, 264, 25167, 295, 264, 3364, 8141, 11, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12026543483555874, "compression_ratio": 1.8341463414634147, "no_speech_prob": 7.888894288043957e-06}, {"id": 1321, "seek": 377028, "start": 3789.0400000000004, "end": 3790.52, "text": " OK?", "tokens": [50364, 407, 321, 362, 257, 8213, 6916, 13, 50436, 50436, 440, 13760, 295, 264, 14117, 952, 8141, 50586, 50586, 295, 264, 27290, 538, 8141, 307, 50738, 50738, 264, 25167, 295, 300, 8141, 13, 50808, 50808, 407, 437, 321, 434, 516, 281, 360, 510, 307, 747, 341, 8062, 11, 50940, 50940, 12972, 309, 538, 264, 25167, 295, 264, 261, 8141, 11, 51096, 51096, 293, 437, 321, 483, 307, 300, 8062, 13, 51302, 51302, 2264, 30, 51376, 51376, 400, 309, 439, 1669, 2020, 11, 558, 30, 51454, 51454, 440, 11602, 652, 2020, 13, 51542, 51542, 639, 8141, 510, 307, 264, 25167, 295, 264, 3364, 8141, 11, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12026543483555874, "compression_ratio": 1.8341463414634147, "no_speech_prob": 7.888894288043957e-06}, {"id": 1322, "seek": 377028, "start": 3790.52, "end": 3792.0800000000004, "text": " And it all makes sense, right?", "tokens": [50364, 407, 321, 362, 257, 8213, 6916, 13, 50436, 50436, 440, 13760, 295, 264, 14117, 952, 8141, 50586, 50586, 295, 264, 27290, 538, 8141, 307, 50738, 50738, 264, 25167, 295, 300, 8141, 13, 50808, 50808, 407, 437, 321, 434, 516, 281, 360, 510, 307, 747, 341, 8062, 11, 50940, 50940, 12972, 309, 538, 264, 25167, 295, 264, 261, 8141, 11, 51096, 51096, 293, 437, 321, 483, 307, 300, 8062, 13, 51302, 51302, 2264, 30, 51376, 51376, 400, 309, 439, 1669, 2020, 11, 558, 30, 51454, 51454, 440, 11602, 652, 2020, 13, 51542, 51542, 639, 8141, 510, 307, 264, 25167, 295, 264, 3364, 8141, 11, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12026543483555874, "compression_ratio": 1.8341463414634147, "no_speech_prob": 7.888894288043957e-06}, {"id": 1323, "seek": 377028, "start": 3792.0800000000004, "end": 3793.84, "text": " The sizes make sense.", "tokens": [50364, 407, 321, 362, 257, 8213, 6916, 13, 50436, 50436, 440, 13760, 295, 264, 14117, 952, 8141, 50586, 50586, 295, 264, 27290, 538, 8141, 307, 50738, 50738, 264, 25167, 295, 300, 8141, 13, 50808, 50808, 407, 437, 321, 434, 516, 281, 360, 510, 307, 747, 341, 8062, 11, 50940, 50940, 12972, 309, 538, 264, 25167, 295, 264, 261, 8141, 11, 51096, 51096, 293, 437, 321, 483, 307, 300, 8062, 13, 51302, 51302, 2264, 30, 51376, 51376, 400, 309, 439, 1669, 2020, 11, 558, 30, 51454, 51454, 440, 11602, 652, 2020, 13, 51542, 51542, 639, 8141, 510, 307, 264, 25167, 295, 264, 3364, 8141, 11, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12026543483555874, "compression_ratio": 1.8341463414634147, "no_speech_prob": 7.888894288043957e-06}, {"id": 1324, "seek": 377028, "start": 3793.84, "end": 3796.32, "text": " This matrix here is the transpose of the weight matrix,", "tokens": [50364, 407, 321, 362, 257, 8213, 6916, 13, 50436, 50436, 440, 13760, 295, 264, 14117, 952, 8141, 50586, 50586, 295, 264, 27290, 538, 8141, 307, 50738, 50738, 264, 25167, 295, 300, 8141, 13, 50808, 50808, 407, 437, 321, 434, 516, 281, 360, 510, 307, 747, 341, 8062, 11, 50940, 50940, 12972, 309, 538, 264, 25167, 295, 264, 261, 8141, 11, 51096, 51096, 293, 437, 321, 483, 307, 300, 8062, 13, 51302, 51302, 2264, 30, 51376, 51376, 400, 309, 439, 1669, 2020, 11, 558, 30, 51454, 51454, 440, 11602, 652, 2020, 13, 51542, 51542, 639, 8141, 510, 307, 264, 25167, 295, 264, 3364, 8141, 11, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12026543483555874, "compression_ratio": 1.8341463414634147, "no_speech_prob": 7.888894288043957e-06}, {"id": 1325, "seek": 379632, "start": 3796.32, "end": 3800.88, "text": " which, of course, had the reverse size.", "tokens": [50364, 597, 11, 295, 1164, 11, 632, 264, 9943, 2744, 13, 50592, 50592, 492, 659, 12, 76, 723, 647, 356, 309, 538, 264, 5386, 8062, 295, 264, 16235, 50748, 50748, 490, 264, 4583, 3673, 11, 293, 321, 483, 264, 16235, 50916, 50916, 365, 3104, 281, 264, 4583, 2507, 13, 51090, 51090, 2264, 30, 51114, 51114, 407, 646, 79, 1513, 559, 990, 807, 257, 8213, 10088, 51206, 51206, 445, 1355, 30955, 264, 25167, 295, 264, 8141, 51418, 51418, 1143, 538, 300, 10088, 13, 51516, 51516, 400, 309, 311, 445, 257, 44498, 1254, 295, 437, 286, 8825, 3071, 11, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1743885612487793, "compression_ratio": 1.5644444444444445, "no_speech_prob": 5.173730642127339e-06}, {"id": 1326, "seek": 379632, "start": 3800.88, "end": 3804.0, "text": " We pre-multiply it by the row vector of the gradient", "tokens": [50364, 597, 11, 295, 1164, 11, 632, 264, 9943, 2744, 13, 50592, 50592, 492, 659, 12, 76, 723, 647, 356, 309, 538, 264, 5386, 8062, 295, 264, 16235, 50748, 50748, 490, 264, 4583, 3673, 11, 293, 321, 483, 264, 16235, 50916, 50916, 365, 3104, 281, 264, 4583, 2507, 13, 51090, 51090, 2264, 30, 51114, 51114, 407, 646, 79, 1513, 559, 990, 807, 257, 8213, 10088, 51206, 51206, 445, 1355, 30955, 264, 25167, 295, 264, 8141, 51418, 51418, 1143, 538, 300, 10088, 13, 51516, 51516, 400, 309, 311, 445, 257, 44498, 1254, 295, 437, 286, 8825, 3071, 11, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1743885612487793, "compression_ratio": 1.5644444444444445, "no_speech_prob": 5.173730642127339e-06}, {"id": 1327, "seek": 379632, "start": 3804.0, "end": 3807.36, "text": " from the layer above, and we get the gradient", "tokens": [50364, 597, 11, 295, 1164, 11, 632, 264, 9943, 2744, 13, 50592, 50592, 492, 659, 12, 76, 723, 647, 356, 309, 538, 264, 5386, 8062, 295, 264, 16235, 50748, 50748, 490, 264, 4583, 3673, 11, 293, 321, 483, 264, 16235, 50916, 50916, 365, 3104, 281, 264, 4583, 2507, 13, 51090, 51090, 2264, 30, 51114, 51114, 407, 646, 79, 1513, 559, 990, 807, 257, 8213, 10088, 51206, 51206, 445, 1355, 30955, 264, 25167, 295, 264, 8141, 51418, 51418, 1143, 538, 300, 10088, 13, 51516, 51516, 400, 309, 311, 445, 257, 44498, 1254, 295, 437, 286, 8825, 3071, 11, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1743885612487793, "compression_ratio": 1.5644444444444445, "no_speech_prob": 5.173730642127339e-06}, {"id": 1328, "seek": 379632, "start": 3807.36, "end": 3810.84, "text": " with respect to the layer below.", "tokens": [50364, 597, 11, 295, 1164, 11, 632, 264, 9943, 2744, 13, 50592, 50592, 492, 659, 12, 76, 723, 647, 356, 309, 538, 264, 5386, 8062, 295, 264, 16235, 50748, 50748, 490, 264, 4583, 3673, 11, 293, 321, 483, 264, 16235, 50916, 50916, 365, 3104, 281, 264, 4583, 2507, 13, 51090, 51090, 2264, 30, 51114, 51114, 407, 646, 79, 1513, 559, 990, 807, 257, 8213, 10088, 51206, 51206, 445, 1355, 30955, 264, 25167, 295, 264, 8141, 51418, 51418, 1143, 538, 300, 10088, 13, 51516, 51516, 400, 309, 311, 445, 257, 44498, 1254, 295, 437, 286, 8825, 3071, 11, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1743885612487793, "compression_ratio": 1.5644444444444445, "no_speech_prob": 5.173730642127339e-06}, {"id": 1329, "seek": 379632, "start": 3810.84, "end": 3811.32, "text": " OK?", "tokens": [50364, 597, 11, 295, 1164, 11, 632, 264, 9943, 2744, 13, 50592, 50592, 492, 659, 12, 76, 723, 647, 356, 309, 538, 264, 5386, 8062, 295, 264, 16235, 50748, 50748, 490, 264, 4583, 3673, 11, 293, 321, 483, 264, 16235, 50916, 50916, 365, 3104, 281, 264, 4583, 2507, 13, 51090, 51090, 2264, 30, 51114, 51114, 407, 646, 79, 1513, 559, 990, 807, 257, 8213, 10088, 51206, 51206, 445, 1355, 30955, 264, 25167, 295, 264, 8141, 51418, 51418, 1143, 538, 300, 10088, 13, 51516, 51516, 400, 309, 311, 445, 257, 44498, 1254, 295, 437, 286, 8825, 3071, 11, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1743885612487793, "compression_ratio": 1.5644444444444445, "no_speech_prob": 5.173730642127339e-06}, {"id": 1330, "seek": 379632, "start": 3811.32, "end": 3813.1600000000003, "text": " So backpropagating through a linear module", "tokens": [50364, 597, 11, 295, 1164, 11, 632, 264, 9943, 2744, 13, 50592, 50592, 492, 659, 12, 76, 723, 647, 356, 309, 538, 264, 5386, 8062, 295, 264, 16235, 50748, 50748, 490, 264, 4583, 3673, 11, 293, 321, 483, 264, 16235, 50916, 50916, 365, 3104, 281, 264, 4583, 2507, 13, 51090, 51090, 2264, 30, 51114, 51114, 407, 646, 79, 1513, 559, 990, 807, 257, 8213, 10088, 51206, 51206, 445, 1355, 30955, 264, 25167, 295, 264, 8141, 51418, 51418, 1143, 538, 300, 10088, 13, 51516, 51516, 400, 309, 311, 445, 257, 44498, 1254, 295, 437, 286, 8825, 3071, 11, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1743885612487793, "compression_ratio": 1.5644444444444445, "no_speech_prob": 5.173730642127339e-06}, {"id": 1331, "seek": 379632, "start": 3813.1600000000003, "end": 3817.4, "text": " just means multiplying the transpose of the matrix", "tokens": [50364, 597, 11, 295, 1164, 11, 632, 264, 9943, 2744, 13, 50592, 50592, 492, 659, 12, 76, 723, 647, 356, 309, 538, 264, 5386, 8062, 295, 264, 16235, 50748, 50748, 490, 264, 4583, 3673, 11, 293, 321, 483, 264, 16235, 50916, 50916, 365, 3104, 281, 264, 4583, 2507, 13, 51090, 51090, 2264, 30, 51114, 51114, 407, 646, 79, 1513, 559, 990, 807, 257, 8213, 10088, 51206, 51206, 445, 1355, 30955, 264, 25167, 295, 264, 8141, 51418, 51418, 1143, 538, 300, 10088, 13, 51516, 51516, 400, 309, 311, 445, 257, 44498, 1254, 295, 437, 286, 8825, 3071, 11, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1743885612487793, "compression_ratio": 1.5644444444444445, "no_speech_prob": 5.173730642127339e-06}, {"id": 1332, "seek": 379632, "start": 3817.4, "end": 3819.36, "text": " used by that module.", "tokens": [50364, 597, 11, 295, 1164, 11, 632, 264, 9943, 2744, 13, 50592, 50592, 492, 659, 12, 76, 723, 647, 356, 309, 538, 264, 5386, 8062, 295, 264, 16235, 50748, 50748, 490, 264, 4583, 3673, 11, 293, 321, 483, 264, 16235, 50916, 50916, 365, 3104, 281, 264, 4583, 2507, 13, 51090, 51090, 2264, 30, 51114, 51114, 407, 646, 79, 1513, 559, 990, 807, 257, 8213, 10088, 51206, 51206, 445, 1355, 30955, 264, 25167, 295, 264, 8141, 51418, 51418, 1143, 538, 300, 10088, 13, 51516, 51516, 400, 309, 311, 445, 257, 44498, 1254, 295, 437, 286, 8825, 3071, 11, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1743885612487793, "compression_ratio": 1.5644444444444445, "no_speech_prob": 5.173730642127339e-06}, {"id": 1333, "seek": 379632, "start": 3819.36, "end": 3823.0800000000004, "text": " And it's just a generalized form of what I explained earlier,", "tokens": [50364, 597, 11, 295, 1164, 11, 632, 264, 9943, 2744, 13, 50592, 50592, 492, 659, 12, 76, 723, 647, 356, 309, 538, 264, 5386, 8062, 295, 264, 16235, 50748, 50748, 490, 264, 4583, 3673, 11, 293, 321, 483, 264, 16235, 50916, 50916, 365, 3104, 281, 264, 4583, 2507, 13, 51090, 51090, 2264, 30, 51114, 51114, 407, 646, 79, 1513, 559, 990, 807, 257, 8213, 10088, 51206, 51206, 445, 1355, 30955, 264, 25167, 295, 264, 8141, 51418, 51418, 1143, 538, 300, 10088, 13, 51516, 51516, 400, 309, 311, 445, 257, 44498, 1254, 295, 437, 286, 8825, 3071, 11, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1743885612487793, "compression_ratio": 1.5644444444444445, "no_speech_prob": 5.173730642127339e-06}, {"id": 1334, "seek": 382308, "start": 3823.08, "end": 3827.12, "text": " of propagating through the weights of a linear system.", "tokens": [50364, 295, 12425, 990, 807, 264, 17443, 295, 257, 8213, 1185, 13, 50566, 50566, 583, 309, 311, 1570, 21769, 11, 558, 30, 50726, 50726, 2264, 11, 370, 321, 434, 516, 281, 312, 1075, 281, 360, 646, 79, 1513, 559, 399, 50836, 50836, 538, 15866, 2771, 2448, 439, 264, 636, 807, 50922, 50922, 538, 12425, 990, 12204, 13, 50988, 50988, 583, 341, 10088, 534, 575, 732, 15743, 13, 51182, 51182, 467, 575, 364, 4846, 11, 597, 307, 710, 69, 11, 293, 264, 661, 472, 51352, 51352, 307, 261, 70, 11, 264, 3364, 8141, 11, 264, 13075, 8062, 300, 51670, 51670, 307, 1143, 1854, 295, 341, 10088, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12412248838932143, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.760305622156011e-06}, {"id": 1335, "seek": 382308, "start": 3827.12, "end": 3830.3199999999997, "text": " But it's less intuitive, right?", "tokens": [50364, 295, 12425, 990, 807, 264, 17443, 295, 257, 8213, 1185, 13, 50566, 50566, 583, 309, 311, 1570, 21769, 11, 558, 30, 50726, 50726, 2264, 11, 370, 321, 434, 516, 281, 312, 1075, 281, 360, 646, 79, 1513, 559, 399, 50836, 50836, 538, 15866, 2771, 2448, 439, 264, 636, 807, 50922, 50922, 538, 12425, 990, 12204, 13, 50988, 50988, 583, 341, 10088, 534, 575, 732, 15743, 13, 51182, 51182, 467, 575, 364, 4846, 11, 597, 307, 710, 69, 11, 293, 264, 661, 472, 51352, 51352, 307, 261, 70, 11, 264, 3364, 8141, 11, 264, 13075, 8062, 300, 51670, 51670, 307, 1143, 1854, 295, 341, 10088, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12412248838932143, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.760305622156011e-06}, {"id": 1336, "seek": 382308, "start": 3830.3199999999997, "end": 3832.52, "text": " OK, so we're going to be able to do backpropagation", "tokens": [50364, 295, 12425, 990, 807, 264, 17443, 295, 257, 8213, 1185, 13, 50566, 50566, 583, 309, 311, 1570, 21769, 11, 558, 30, 50726, 50726, 2264, 11, 370, 321, 434, 516, 281, 312, 1075, 281, 360, 646, 79, 1513, 559, 399, 50836, 50836, 538, 15866, 2771, 2448, 439, 264, 636, 807, 50922, 50922, 538, 12425, 990, 12204, 13, 50988, 50988, 583, 341, 10088, 534, 575, 732, 15743, 13, 51182, 51182, 467, 575, 364, 4846, 11, 597, 307, 710, 69, 11, 293, 264, 661, 472, 51352, 51352, 307, 261, 70, 11, 264, 3364, 8141, 11, 264, 13075, 8062, 300, 51670, 51670, 307, 1143, 1854, 295, 341, 10088, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12412248838932143, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.760305622156011e-06}, {"id": 1337, "seek": 382308, "start": 3832.52, "end": 3834.24, "text": " by computing gradients all the way through", "tokens": [50364, 295, 12425, 990, 807, 264, 17443, 295, 257, 8213, 1185, 13, 50566, 50566, 583, 309, 311, 1570, 21769, 11, 558, 30, 50726, 50726, 2264, 11, 370, 321, 434, 516, 281, 312, 1075, 281, 360, 646, 79, 1513, 559, 399, 50836, 50836, 538, 15866, 2771, 2448, 439, 264, 636, 807, 50922, 50922, 538, 12425, 990, 12204, 13, 50988, 50988, 583, 341, 10088, 534, 575, 732, 15743, 13, 51182, 51182, 467, 575, 364, 4846, 11, 597, 307, 710, 69, 11, 293, 264, 661, 472, 51352, 51352, 307, 261, 70, 11, 264, 3364, 8141, 11, 264, 13075, 8062, 300, 51670, 51670, 307, 1143, 1854, 295, 341, 10088, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12412248838932143, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.760305622156011e-06}, {"id": 1338, "seek": 382308, "start": 3834.24, "end": 3835.56, "text": " by propagating backwards.", "tokens": [50364, 295, 12425, 990, 807, 264, 17443, 295, 257, 8213, 1185, 13, 50566, 50566, 583, 309, 311, 1570, 21769, 11, 558, 30, 50726, 50726, 2264, 11, 370, 321, 434, 516, 281, 312, 1075, 281, 360, 646, 79, 1513, 559, 399, 50836, 50836, 538, 15866, 2771, 2448, 439, 264, 636, 807, 50922, 50922, 538, 12425, 990, 12204, 13, 50988, 50988, 583, 341, 10088, 534, 575, 732, 15743, 13, 51182, 51182, 467, 575, 364, 4846, 11, 597, 307, 710, 69, 11, 293, 264, 661, 472, 51352, 51352, 307, 261, 70, 11, 264, 3364, 8141, 11, 264, 13075, 8062, 300, 51670, 51670, 307, 1143, 1854, 295, 341, 10088, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12412248838932143, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.760305622156011e-06}, {"id": 1339, "seek": 382308, "start": 3835.56, "end": 3839.44, "text": " But this module really has two inputs.", "tokens": [50364, 295, 12425, 990, 807, 264, 17443, 295, 257, 8213, 1185, 13, 50566, 50566, 583, 309, 311, 1570, 21769, 11, 558, 30, 50726, 50726, 2264, 11, 370, 321, 434, 516, 281, 312, 1075, 281, 360, 646, 79, 1513, 559, 399, 50836, 50836, 538, 15866, 2771, 2448, 439, 264, 636, 807, 50922, 50922, 538, 12425, 990, 12204, 13, 50988, 50988, 583, 341, 10088, 534, 575, 732, 15743, 13, 51182, 51182, 467, 575, 364, 4846, 11, 597, 307, 710, 69, 11, 293, 264, 661, 472, 51352, 51352, 307, 261, 70, 11, 264, 3364, 8141, 11, 264, 13075, 8062, 300, 51670, 51670, 307, 1143, 1854, 295, 341, 10088, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12412248838932143, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.760305622156011e-06}, {"id": 1340, "seek": 382308, "start": 3839.44, "end": 3842.84, "text": " It has an input, which is zf, and the other one", "tokens": [50364, 295, 12425, 990, 807, 264, 17443, 295, 257, 8213, 1185, 13, 50566, 50566, 583, 309, 311, 1570, 21769, 11, 558, 30, 50726, 50726, 2264, 11, 370, 321, 434, 516, 281, 312, 1075, 281, 360, 646, 79, 1513, 559, 399, 50836, 50836, 538, 15866, 2771, 2448, 439, 264, 636, 807, 50922, 50922, 538, 12425, 990, 12204, 13, 50988, 50988, 583, 341, 10088, 534, 575, 732, 15743, 13, 51182, 51182, 467, 575, 364, 4846, 11, 597, 307, 710, 69, 11, 293, 264, 661, 472, 51352, 51352, 307, 261, 70, 11, 264, 3364, 8141, 11, 264, 13075, 8062, 300, 51670, 51670, 307, 1143, 1854, 295, 341, 10088, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12412248838932143, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.760305622156011e-06}, {"id": 1341, "seek": 382308, "start": 3842.84, "end": 3849.2, "text": " is wg, the weight matrix, the parameter vector that", "tokens": [50364, 295, 12425, 990, 807, 264, 17443, 295, 257, 8213, 1185, 13, 50566, 50566, 583, 309, 311, 1570, 21769, 11, 558, 30, 50726, 50726, 2264, 11, 370, 321, 434, 516, 281, 312, 1075, 281, 360, 646, 79, 1513, 559, 399, 50836, 50836, 538, 15866, 2771, 2448, 439, 264, 636, 807, 50922, 50922, 538, 12425, 990, 12204, 13, 50988, 50988, 583, 341, 10088, 534, 575, 732, 15743, 13, 51182, 51182, 467, 575, 364, 4846, 11, 597, 307, 710, 69, 11, 293, 264, 661, 472, 51352, 51352, 307, 261, 70, 11, 264, 3364, 8141, 11, 264, 13075, 8062, 300, 51670, 51670, 307, 1143, 1854, 295, 341, 10088, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12412248838932143, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.760305622156011e-06}, {"id": 1342, "seek": 382308, "start": 3849.2, "end": 3853.04, "text": " is used inside of this module.", "tokens": [50364, 295, 12425, 990, 807, 264, 17443, 295, 257, 8213, 1185, 13, 50566, 50566, 583, 309, 311, 1570, 21769, 11, 558, 30, 50726, 50726, 2264, 11, 370, 321, 434, 516, 281, 312, 1075, 281, 360, 646, 79, 1513, 559, 399, 50836, 50836, 538, 15866, 2771, 2448, 439, 264, 636, 807, 50922, 50922, 538, 12425, 990, 12204, 13, 50988, 50988, 583, 341, 10088, 534, 575, 732, 15743, 13, 51182, 51182, 467, 575, 364, 4846, 11, 597, 307, 710, 69, 11, 293, 264, 661, 472, 51352, 51352, 307, 261, 70, 11, 264, 3364, 8141, 11, 264, 13075, 8062, 300, 51670, 51670, 307, 1143, 1854, 295, 341, 10088, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.12412248838932143, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.760305622156011e-06}, {"id": 1343, "seek": 385304, "start": 3853.04, "end": 3854.52, "text": " So there is a second Jacobian matrix,", "tokens": [50364, 407, 456, 307, 257, 1150, 14117, 952, 8141, 11, 50438, 50438, 597, 307, 257, 14117, 952, 8141, 295, 710, 70, 365, 3104, 50600, 50600, 281, 264, 2115, 295, 341, 3364, 13075, 13, 50792, 50792, 2264, 30, 50838, 50838, 400, 281, 14722, 264, 16235, 295, 264, 2063, 2445, 50982, 50982, 365, 3104, 281, 729, 3364, 13075, 11, 51152, 51152, 286, 643, 281, 12972, 341, 16235, 8062, 51246, 51246, 538, 264, 14117, 952, 8141, 295, 300, 3461, 365, 3104, 281, 1080, 3364, 13, 51488, 51488, 400, 309, 311, 406, 264, 912, 382, 264, 14117, 952, 8141, 51586, 51586, 365, 3104, 281, 264, 4846, 13, 51686, 51686, 467, 311, 257, 819, 14117, 952, 8141, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1459810816008469, "compression_ratio": 2.0285714285714285, "no_speech_prob": 4.860170520259999e-06}, {"id": 1344, "seek": 385304, "start": 3854.52, "end": 3857.7599999999998, "text": " which is a Jacobian matrix of zg with respect", "tokens": [50364, 407, 456, 307, 257, 1150, 14117, 952, 8141, 11, 50438, 50438, 597, 307, 257, 14117, 952, 8141, 295, 710, 70, 365, 3104, 50600, 50600, 281, 264, 2115, 295, 341, 3364, 13075, 13, 50792, 50792, 2264, 30, 50838, 50838, 400, 281, 14722, 264, 16235, 295, 264, 2063, 2445, 50982, 50982, 365, 3104, 281, 729, 3364, 13075, 11, 51152, 51152, 286, 643, 281, 12972, 341, 16235, 8062, 51246, 51246, 538, 264, 14117, 952, 8141, 295, 300, 3461, 365, 3104, 281, 1080, 3364, 13, 51488, 51488, 400, 309, 311, 406, 264, 912, 382, 264, 14117, 952, 8141, 51586, 51586, 365, 3104, 281, 264, 4846, 13, 51686, 51686, 467, 311, 257, 819, 14117, 952, 8141, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1459810816008469, "compression_ratio": 2.0285714285714285, "no_speech_prob": 4.860170520259999e-06}, {"id": 1345, "seek": 385304, "start": 3857.7599999999998, "end": 3861.6, "text": " to the terms of this weight parameter.", "tokens": [50364, 407, 456, 307, 257, 1150, 14117, 952, 8141, 11, 50438, 50438, 597, 307, 257, 14117, 952, 8141, 295, 710, 70, 365, 3104, 50600, 50600, 281, 264, 2115, 295, 341, 3364, 13075, 13, 50792, 50792, 2264, 30, 50838, 50838, 400, 281, 14722, 264, 16235, 295, 264, 2063, 2445, 50982, 50982, 365, 3104, 281, 729, 3364, 13075, 11, 51152, 51152, 286, 643, 281, 12972, 341, 16235, 8062, 51246, 51246, 538, 264, 14117, 952, 8141, 295, 300, 3461, 365, 3104, 281, 1080, 3364, 13, 51488, 51488, 400, 309, 311, 406, 264, 912, 382, 264, 14117, 952, 8141, 51586, 51586, 365, 3104, 281, 264, 4846, 13, 51686, 51686, 467, 311, 257, 819, 14117, 952, 8141, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1459810816008469, "compression_ratio": 2.0285714285714285, "no_speech_prob": 4.860170520259999e-06}, {"id": 1346, "seek": 385304, "start": 3861.6, "end": 3862.52, "text": " OK?", "tokens": [50364, 407, 456, 307, 257, 1150, 14117, 952, 8141, 11, 50438, 50438, 597, 307, 257, 14117, 952, 8141, 295, 710, 70, 365, 3104, 50600, 50600, 281, 264, 2115, 295, 341, 3364, 13075, 13, 50792, 50792, 2264, 30, 50838, 50838, 400, 281, 14722, 264, 16235, 295, 264, 2063, 2445, 50982, 50982, 365, 3104, 281, 729, 3364, 13075, 11, 51152, 51152, 286, 643, 281, 12972, 341, 16235, 8062, 51246, 51246, 538, 264, 14117, 952, 8141, 295, 300, 3461, 365, 3104, 281, 1080, 3364, 13, 51488, 51488, 400, 309, 311, 406, 264, 912, 382, 264, 14117, 952, 8141, 51586, 51586, 365, 3104, 281, 264, 4846, 13, 51686, 51686, 467, 311, 257, 819, 14117, 952, 8141, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1459810816008469, "compression_ratio": 2.0285714285714285, "no_speech_prob": 4.860170520259999e-06}, {"id": 1347, "seek": 385304, "start": 3862.52, "end": 3865.4, "text": " And to compute the gradient of the cost function", "tokens": [50364, 407, 456, 307, 257, 1150, 14117, 952, 8141, 11, 50438, 50438, 597, 307, 257, 14117, 952, 8141, 295, 710, 70, 365, 3104, 50600, 50600, 281, 264, 2115, 295, 341, 3364, 13075, 13, 50792, 50792, 2264, 30, 50838, 50838, 400, 281, 14722, 264, 16235, 295, 264, 2063, 2445, 50982, 50982, 365, 3104, 281, 729, 3364, 13075, 11, 51152, 51152, 286, 643, 281, 12972, 341, 16235, 8062, 51246, 51246, 538, 264, 14117, 952, 8141, 295, 300, 3461, 365, 3104, 281, 1080, 3364, 13, 51488, 51488, 400, 309, 311, 406, 264, 912, 382, 264, 14117, 952, 8141, 51586, 51586, 365, 3104, 281, 264, 4846, 13, 51686, 51686, 467, 311, 257, 819, 14117, 952, 8141, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1459810816008469, "compression_ratio": 2.0285714285714285, "no_speech_prob": 4.860170520259999e-06}, {"id": 1348, "seek": 385304, "start": 3865.4, "end": 3868.8, "text": " with respect to those weight parameter,", "tokens": [50364, 407, 456, 307, 257, 1150, 14117, 952, 8141, 11, 50438, 50438, 597, 307, 257, 14117, 952, 8141, 295, 710, 70, 365, 3104, 50600, 50600, 281, 264, 2115, 295, 341, 3364, 13075, 13, 50792, 50792, 2264, 30, 50838, 50838, 400, 281, 14722, 264, 16235, 295, 264, 2063, 2445, 50982, 50982, 365, 3104, 281, 729, 3364, 13075, 11, 51152, 51152, 286, 643, 281, 12972, 341, 16235, 8062, 51246, 51246, 538, 264, 14117, 952, 8141, 295, 300, 3461, 365, 3104, 281, 1080, 3364, 13, 51488, 51488, 400, 309, 311, 406, 264, 912, 382, 264, 14117, 952, 8141, 51586, 51586, 365, 3104, 281, 264, 4846, 13, 51686, 51686, 467, 311, 257, 819, 14117, 952, 8141, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1459810816008469, "compression_ratio": 2.0285714285714285, "no_speech_prob": 4.860170520259999e-06}, {"id": 1349, "seek": 385304, "start": 3868.8, "end": 3870.68, "text": " I need to multiply this gradient vector", "tokens": [50364, 407, 456, 307, 257, 1150, 14117, 952, 8141, 11, 50438, 50438, 597, 307, 257, 14117, 952, 8141, 295, 710, 70, 365, 3104, 50600, 50600, 281, 264, 2115, 295, 341, 3364, 13075, 13, 50792, 50792, 2264, 30, 50838, 50838, 400, 281, 14722, 264, 16235, 295, 264, 2063, 2445, 50982, 50982, 365, 3104, 281, 729, 3364, 13075, 11, 51152, 51152, 286, 643, 281, 12972, 341, 16235, 8062, 51246, 51246, 538, 264, 14117, 952, 8141, 295, 300, 3461, 365, 3104, 281, 1080, 3364, 13, 51488, 51488, 400, 309, 311, 406, 264, 912, 382, 264, 14117, 952, 8141, 51586, 51586, 365, 3104, 281, 264, 4846, 13, 51686, 51686, 467, 311, 257, 819, 14117, 952, 8141, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1459810816008469, "compression_ratio": 2.0285714285714285, "no_speech_prob": 4.860170520259999e-06}, {"id": 1350, "seek": 385304, "start": 3870.68, "end": 3875.52, "text": " by the Jacobian matrix of that block with respect to its weight.", "tokens": [50364, 407, 456, 307, 257, 1150, 14117, 952, 8141, 11, 50438, 50438, 597, 307, 257, 14117, 952, 8141, 295, 710, 70, 365, 3104, 50600, 50600, 281, 264, 2115, 295, 341, 3364, 13075, 13, 50792, 50792, 2264, 30, 50838, 50838, 400, 281, 14722, 264, 16235, 295, 264, 2063, 2445, 50982, 50982, 365, 3104, 281, 729, 3364, 13075, 11, 51152, 51152, 286, 643, 281, 12972, 341, 16235, 8062, 51246, 51246, 538, 264, 14117, 952, 8141, 295, 300, 3461, 365, 3104, 281, 1080, 3364, 13, 51488, 51488, 400, 309, 311, 406, 264, 912, 382, 264, 14117, 952, 8141, 51586, 51586, 365, 3104, 281, 264, 4846, 13, 51686, 51686, 467, 311, 257, 819, 14117, 952, 8141, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1459810816008469, "compression_ratio": 2.0285714285714285, "no_speech_prob": 4.860170520259999e-06}, {"id": 1351, "seek": 385304, "start": 3875.52, "end": 3877.48, "text": " And it's not the same as the Jacobian matrix", "tokens": [50364, 407, 456, 307, 257, 1150, 14117, 952, 8141, 11, 50438, 50438, 597, 307, 257, 14117, 952, 8141, 295, 710, 70, 365, 3104, 50600, 50600, 281, 264, 2115, 295, 341, 3364, 13075, 13, 50792, 50792, 2264, 30, 50838, 50838, 400, 281, 14722, 264, 16235, 295, 264, 2063, 2445, 50982, 50982, 365, 3104, 281, 729, 3364, 13075, 11, 51152, 51152, 286, 643, 281, 12972, 341, 16235, 8062, 51246, 51246, 538, 264, 14117, 952, 8141, 295, 300, 3461, 365, 3104, 281, 1080, 3364, 13, 51488, 51488, 400, 309, 311, 406, 264, 912, 382, 264, 14117, 952, 8141, 51586, 51586, 365, 3104, 281, 264, 4846, 13, 51686, 51686, 467, 311, 257, 819, 14117, 952, 8141, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1459810816008469, "compression_ratio": 2.0285714285714285, "no_speech_prob": 4.860170520259999e-06}, {"id": 1352, "seek": 385304, "start": 3877.48, "end": 3879.48, "text": " with respect to the input.", "tokens": [50364, 407, 456, 307, 257, 1150, 14117, 952, 8141, 11, 50438, 50438, 597, 307, 257, 14117, 952, 8141, 295, 710, 70, 365, 3104, 50600, 50600, 281, 264, 2115, 295, 341, 3364, 13075, 13, 50792, 50792, 2264, 30, 50838, 50838, 400, 281, 14722, 264, 16235, 295, 264, 2063, 2445, 50982, 50982, 365, 3104, 281, 729, 3364, 13075, 11, 51152, 51152, 286, 643, 281, 12972, 341, 16235, 8062, 51246, 51246, 538, 264, 14117, 952, 8141, 295, 300, 3461, 365, 3104, 281, 1080, 3364, 13, 51488, 51488, 400, 309, 311, 406, 264, 912, 382, 264, 14117, 952, 8141, 51586, 51586, 365, 3104, 281, 264, 4846, 13, 51686, 51686, 467, 311, 257, 819, 14117, 952, 8141, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1459810816008469, "compression_ratio": 2.0285714285714285, "no_speech_prob": 4.860170520259999e-06}, {"id": 1353, "seek": 385304, "start": 3879.48, "end": 3882.88, "text": " It's a different Jacobian matrix.", "tokens": [50364, 407, 456, 307, 257, 1150, 14117, 952, 8141, 11, 50438, 50438, 597, 307, 257, 14117, 952, 8141, 295, 710, 70, 365, 3104, 50600, 50600, 281, 264, 2115, 295, 341, 3364, 13075, 13, 50792, 50792, 2264, 30, 50838, 50838, 400, 281, 14722, 264, 16235, 295, 264, 2063, 2445, 50982, 50982, 365, 3104, 281, 729, 3364, 13075, 11, 51152, 51152, 286, 643, 281, 12972, 341, 16235, 8062, 51246, 51246, 538, 264, 14117, 952, 8141, 295, 300, 3461, 365, 3104, 281, 1080, 3364, 13, 51488, 51488, 400, 309, 311, 406, 264, 912, 382, 264, 14117, 952, 8141, 51586, 51586, 365, 3104, 281, 264, 4846, 13, 51686, 51686, 467, 311, 257, 819, 14117, 952, 8141, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1459810816008469, "compression_ratio": 2.0285714285714285, "no_speech_prob": 4.860170520259999e-06}, {"id": 1354, "seek": 388288, "start": 3882.88, "end": 3885.1600000000003, "text": " I'll come back to this in a second.", "tokens": [50364, 286, 603, 808, 646, 281, 341, 294, 257, 1150, 13, 50478, 50478, 407, 281, 360, 646, 79, 1513, 11, 797, 11, 498, 321, 362, 50732, 50732, 257, 8062, 295, 2771, 2448, 295, 512, 2063, 365, 3104, 281, 257, 1785, 11, 51020, 51020, 293, 321, 362, 257, 2445, 300, 307, 257, 2445, 295, 472, 51120, 51120, 420, 2940, 9102, 11, 321, 12972, 341, 16235, 51240, 51240, 538, 264, 14117, 952, 8141, 295, 341, 3461, 365, 3104, 51442, 51442, 281, 1184, 295, 613, 15743, 13, 51500, 51500, 400, 300, 2709, 505, 264, 16235, 365, 3104, 51590, 51590, 281, 1184, 295, 264, 15743, 13, 51680, 51680, 400, 300, 311, 516, 281, 312, 12675, 510, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1105480851798222, "compression_ratio": 1.8141592920353982, "no_speech_prob": 7.76642445998732e-06}, {"id": 1355, "seek": 388288, "start": 3885.1600000000003, "end": 3890.2400000000002, "text": " So to do backprop, again, if we have", "tokens": [50364, 286, 603, 808, 646, 281, 341, 294, 257, 1150, 13, 50478, 50478, 407, 281, 360, 646, 79, 1513, 11, 797, 11, 498, 321, 362, 50732, 50732, 257, 8062, 295, 2771, 2448, 295, 512, 2063, 365, 3104, 281, 257, 1785, 11, 51020, 51020, 293, 321, 362, 257, 2445, 300, 307, 257, 2445, 295, 472, 51120, 51120, 420, 2940, 9102, 11, 321, 12972, 341, 16235, 51240, 51240, 538, 264, 14117, 952, 8141, 295, 341, 3461, 365, 3104, 51442, 51442, 281, 1184, 295, 613, 15743, 13, 51500, 51500, 400, 300, 2709, 505, 264, 16235, 365, 3104, 51590, 51590, 281, 1184, 295, 264, 15743, 13, 51680, 51680, 400, 300, 311, 516, 281, 312, 12675, 510, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1105480851798222, "compression_ratio": 1.8141592920353982, "no_speech_prob": 7.76642445998732e-06}, {"id": 1356, "seek": 388288, "start": 3890.2400000000002, "end": 3896.0, "text": " a vector of gradients of some cost with respect to a state,", "tokens": [50364, 286, 603, 808, 646, 281, 341, 294, 257, 1150, 13, 50478, 50478, 407, 281, 360, 646, 79, 1513, 11, 797, 11, 498, 321, 362, 50732, 50732, 257, 8062, 295, 2771, 2448, 295, 512, 2063, 365, 3104, 281, 257, 1785, 11, 51020, 51020, 293, 321, 362, 257, 2445, 300, 307, 257, 2445, 295, 472, 51120, 51120, 420, 2940, 9102, 11, 321, 12972, 341, 16235, 51240, 51240, 538, 264, 14117, 952, 8141, 295, 341, 3461, 365, 3104, 51442, 51442, 281, 1184, 295, 613, 15743, 13, 51500, 51500, 400, 300, 2709, 505, 264, 16235, 365, 3104, 51590, 51590, 281, 1184, 295, 264, 15743, 13, 51680, 51680, 400, 300, 311, 516, 281, 312, 12675, 510, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1105480851798222, "compression_ratio": 1.8141592920353982, "no_speech_prob": 7.76642445998732e-06}, {"id": 1357, "seek": 388288, "start": 3896.0, "end": 3898.0, "text": " and we have a function that is a function of one", "tokens": [50364, 286, 603, 808, 646, 281, 341, 294, 257, 1150, 13, 50478, 50478, 407, 281, 360, 646, 79, 1513, 11, 797, 11, 498, 321, 362, 50732, 50732, 257, 8062, 295, 2771, 2448, 295, 512, 2063, 365, 3104, 281, 257, 1785, 11, 51020, 51020, 293, 321, 362, 257, 2445, 300, 307, 257, 2445, 295, 472, 51120, 51120, 420, 2940, 9102, 11, 321, 12972, 341, 16235, 51240, 51240, 538, 264, 14117, 952, 8141, 295, 341, 3461, 365, 3104, 51442, 51442, 281, 1184, 295, 613, 15743, 13, 51500, 51500, 400, 300, 2709, 505, 264, 16235, 365, 3104, 51590, 51590, 281, 1184, 295, 264, 15743, 13, 51680, 51680, 400, 300, 311, 516, 281, 312, 12675, 510, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1105480851798222, "compression_ratio": 1.8141592920353982, "no_speech_prob": 7.76642445998732e-06}, {"id": 1358, "seek": 388288, "start": 3898.0, "end": 3900.4, "text": " or several variables, we multiply this gradient", "tokens": [50364, 286, 603, 808, 646, 281, 341, 294, 257, 1150, 13, 50478, 50478, 407, 281, 360, 646, 79, 1513, 11, 797, 11, 498, 321, 362, 50732, 50732, 257, 8062, 295, 2771, 2448, 295, 512, 2063, 365, 3104, 281, 257, 1785, 11, 51020, 51020, 293, 321, 362, 257, 2445, 300, 307, 257, 2445, 295, 472, 51120, 51120, 420, 2940, 9102, 11, 321, 12972, 341, 16235, 51240, 51240, 538, 264, 14117, 952, 8141, 295, 341, 3461, 365, 3104, 51442, 51442, 281, 1184, 295, 613, 15743, 13, 51500, 51500, 400, 300, 2709, 505, 264, 16235, 365, 3104, 51590, 51590, 281, 1184, 295, 264, 15743, 13, 51680, 51680, 400, 300, 311, 516, 281, 312, 12675, 510, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1105480851798222, "compression_ratio": 1.8141592920353982, "no_speech_prob": 7.76642445998732e-06}, {"id": 1359, "seek": 388288, "start": 3900.4, "end": 3904.44, "text": " by the Jacobian matrix of this block with respect", "tokens": [50364, 286, 603, 808, 646, 281, 341, 294, 257, 1150, 13, 50478, 50478, 407, 281, 360, 646, 79, 1513, 11, 797, 11, 498, 321, 362, 50732, 50732, 257, 8062, 295, 2771, 2448, 295, 512, 2063, 365, 3104, 281, 257, 1785, 11, 51020, 51020, 293, 321, 362, 257, 2445, 300, 307, 257, 2445, 295, 472, 51120, 51120, 420, 2940, 9102, 11, 321, 12972, 341, 16235, 51240, 51240, 538, 264, 14117, 952, 8141, 295, 341, 3461, 365, 3104, 51442, 51442, 281, 1184, 295, 613, 15743, 13, 51500, 51500, 400, 300, 2709, 505, 264, 16235, 365, 3104, 51590, 51590, 281, 1184, 295, 264, 15743, 13, 51680, 51680, 400, 300, 311, 516, 281, 312, 12675, 510, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1105480851798222, "compression_ratio": 1.8141592920353982, "no_speech_prob": 7.76642445998732e-06}, {"id": 1360, "seek": 388288, "start": 3904.44, "end": 3905.6, "text": " to each of these inputs.", "tokens": [50364, 286, 603, 808, 646, 281, 341, 294, 257, 1150, 13, 50478, 50478, 407, 281, 360, 646, 79, 1513, 11, 797, 11, 498, 321, 362, 50732, 50732, 257, 8062, 295, 2771, 2448, 295, 512, 2063, 365, 3104, 281, 257, 1785, 11, 51020, 51020, 293, 321, 362, 257, 2445, 300, 307, 257, 2445, 295, 472, 51120, 51120, 420, 2940, 9102, 11, 321, 12972, 341, 16235, 51240, 51240, 538, 264, 14117, 952, 8141, 295, 341, 3461, 365, 3104, 51442, 51442, 281, 1184, 295, 613, 15743, 13, 51500, 51500, 400, 300, 2709, 505, 264, 16235, 365, 3104, 51590, 51590, 281, 1184, 295, 264, 15743, 13, 51680, 51680, 400, 300, 311, 516, 281, 312, 12675, 510, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1105480851798222, "compression_ratio": 1.8141592920353982, "no_speech_prob": 7.76642445998732e-06}, {"id": 1361, "seek": 388288, "start": 3905.6, "end": 3907.4, "text": " And that gives us the gradient with respect", "tokens": [50364, 286, 603, 808, 646, 281, 341, 294, 257, 1150, 13, 50478, 50478, 407, 281, 360, 646, 79, 1513, 11, 797, 11, 498, 321, 362, 50732, 50732, 257, 8062, 295, 2771, 2448, 295, 512, 2063, 365, 3104, 281, 257, 1785, 11, 51020, 51020, 293, 321, 362, 257, 2445, 300, 307, 257, 2445, 295, 472, 51120, 51120, 420, 2940, 9102, 11, 321, 12972, 341, 16235, 51240, 51240, 538, 264, 14117, 952, 8141, 295, 341, 3461, 365, 3104, 51442, 51442, 281, 1184, 295, 613, 15743, 13, 51500, 51500, 400, 300, 2709, 505, 264, 16235, 365, 3104, 51590, 51590, 281, 1184, 295, 264, 15743, 13, 51680, 51680, 400, 300, 311, 516, 281, 312, 12675, 510, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1105480851798222, "compression_ratio": 1.8141592920353982, "no_speech_prob": 7.76642445998732e-06}, {"id": 1362, "seek": 388288, "start": 3907.4, "end": 3909.2000000000003, "text": " to each of the inputs.", "tokens": [50364, 286, 603, 808, 646, 281, 341, 294, 257, 1150, 13, 50478, 50478, 407, 281, 360, 646, 79, 1513, 11, 797, 11, 498, 321, 362, 50732, 50732, 257, 8062, 295, 2771, 2448, 295, 512, 2063, 365, 3104, 281, 257, 1785, 11, 51020, 51020, 293, 321, 362, 257, 2445, 300, 307, 257, 2445, 295, 472, 51120, 51120, 420, 2940, 9102, 11, 321, 12972, 341, 16235, 51240, 51240, 538, 264, 14117, 952, 8141, 295, 341, 3461, 365, 3104, 51442, 51442, 281, 1184, 295, 613, 15743, 13, 51500, 51500, 400, 300, 2709, 505, 264, 16235, 365, 3104, 51590, 51590, 281, 1184, 295, 264, 15743, 13, 51680, 51680, 400, 300, 311, 516, 281, 312, 12675, 510, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1105480851798222, "compression_ratio": 1.8141592920353982, "no_speech_prob": 7.76642445998732e-06}, {"id": 1363, "seek": 388288, "start": 3909.2000000000003, "end": 3911.36, "text": " And that's going to be expressed here.", "tokens": [50364, 286, 603, 808, 646, 281, 341, 294, 257, 1150, 13, 50478, 50478, 407, 281, 360, 646, 79, 1513, 11, 797, 11, 498, 321, 362, 50732, 50732, 257, 8062, 295, 2771, 2448, 295, 512, 2063, 365, 3104, 281, 257, 1785, 11, 51020, 51020, 293, 321, 362, 257, 2445, 300, 307, 257, 2445, 295, 472, 51120, 51120, 420, 2940, 9102, 11, 321, 12972, 341, 16235, 51240, 51240, 538, 264, 14117, 952, 8141, 295, 341, 3461, 365, 3104, 51442, 51442, 281, 1184, 295, 613, 15743, 13, 51500, 51500, 400, 300, 2709, 505, 264, 16235, 365, 3104, 51590, 51590, 281, 1184, 295, 264, 15743, 13, 51680, 51680, 400, 300, 311, 516, 281, 312, 12675, 510, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1105480851798222, "compression_ratio": 1.8141592920353982, "no_speech_prob": 7.76642445998732e-06}, {"id": 1364, "seek": 391136, "start": 3911.36, "end": 3914.04, "text": " So this is the backpropagation of states", "tokens": [50364, 407, 341, 307, 264, 646, 79, 1513, 559, 399, 295, 4368, 50498, 50498, 294, 257, 4583, 3711, 13735, 2010, 18161, 2533, 13, 50802, 50802, 274, 66, 670, 9758, 74, 11, 597, 307, 264, 1785, 295, 4583, 350, 11, 50998, 50998, 307, 274, 66, 670, 710, 74, 1804, 502, 11, 597, 307, 264, 16235, 295, 264, 2063, 51158, 51158, 365, 3104, 281, 264, 4583, 3673, 11, 1413, 264, 14117, 952, 8141, 51382, 51382, 295, 264, 1785, 295, 4583, 350, 1804, 502, 365, 3104, 51558, 51558, 281, 264, 1785, 295, 4583, 350, 13, 51644, 51644, 1779, 30, 51716, 51716, 823, 321, 6552, 274, 66, 670, 9758, 74, 1804, 502, 307, 2570, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11477252893280565, "compression_ratio": 1.8090452261306533, "no_speech_prob": 7.645773621334229e-06}, {"id": 1365, "seek": 391136, "start": 3914.04, "end": 3920.1200000000003, "text": " in a layerwise classical type neural net.", "tokens": [50364, 407, 341, 307, 264, 646, 79, 1513, 559, 399, 295, 4368, 50498, 50498, 294, 257, 4583, 3711, 13735, 2010, 18161, 2533, 13, 50802, 50802, 274, 66, 670, 9758, 74, 11, 597, 307, 264, 1785, 295, 4583, 350, 11, 50998, 50998, 307, 274, 66, 670, 710, 74, 1804, 502, 11, 597, 307, 264, 16235, 295, 264, 2063, 51158, 51158, 365, 3104, 281, 264, 4583, 3673, 11, 1413, 264, 14117, 952, 8141, 51382, 51382, 295, 264, 1785, 295, 4583, 350, 1804, 502, 365, 3104, 51558, 51558, 281, 264, 1785, 295, 4583, 350, 13, 51644, 51644, 1779, 30, 51716, 51716, 823, 321, 6552, 274, 66, 670, 9758, 74, 1804, 502, 307, 2570, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11477252893280565, "compression_ratio": 1.8090452261306533, "no_speech_prob": 7.645773621334229e-06}, {"id": 1366, "seek": 391136, "start": 3920.1200000000003, "end": 3924.04, "text": " dc over dzk, which is the state of layer k,", "tokens": [50364, 407, 341, 307, 264, 646, 79, 1513, 559, 399, 295, 4368, 50498, 50498, 294, 257, 4583, 3711, 13735, 2010, 18161, 2533, 13, 50802, 50802, 274, 66, 670, 9758, 74, 11, 597, 307, 264, 1785, 295, 4583, 350, 11, 50998, 50998, 307, 274, 66, 670, 710, 74, 1804, 502, 11, 597, 307, 264, 16235, 295, 264, 2063, 51158, 51158, 365, 3104, 281, 264, 4583, 3673, 11, 1413, 264, 14117, 952, 8141, 51382, 51382, 295, 264, 1785, 295, 4583, 350, 1804, 502, 365, 3104, 51558, 51558, 281, 264, 1785, 295, 4583, 350, 13, 51644, 51644, 1779, 30, 51716, 51716, 823, 321, 6552, 274, 66, 670, 9758, 74, 1804, 502, 307, 2570, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11477252893280565, "compression_ratio": 1.8090452261306533, "no_speech_prob": 7.645773621334229e-06}, {"id": 1367, "seek": 391136, "start": 3924.04, "end": 3927.2400000000002, "text": " is dc over zk plus 1, which is the gradient of the cost", "tokens": [50364, 407, 341, 307, 264, 646, 79, 1513, 559, 399, 295, 4368, 50498, 50498, 294, 257, 4583, 3711, 13735, 2010, 18161, 2533, 13, 50802, 50802, 274, 66, 670, 9758, 74, 11, 597, 307, 264, 1785, 295, 4583, 350, 11, 50998, 50998, 307, 274, 66, 670, 710, 74, 1804, 502, 11, 597, 307, 264, 16235, 295, 264, 2063, 51158, 51158, 365, 3104, 281, 264, 4583, 3673, 11, 1413, 264, 14117, 952, 8141, 51382, 51382, 295, 264, 1785, 295, 4583, 350, 1804, 502, 365, 3104, 51558, 51558, 281, 264, 1785, 295, 4583, 350, 13, 51644, 51644, 1779, 30, 51716, 51716, 823, 321, 6552, 274, 66, 670, 9758, 74, 1804, 502, 307, 2570, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11477252893280565, "compression_ratio": 1.8090452261306533, "no_speech_prob": 7.645773621334229e-06}, {"id": 1368, "seek": 391136, "start": 3927.2400000000002, "end": 3931.7200000000003, "text": " with respect to the layer above, times the Jacobian matrix", "tokens": [50364, 407, 341, 307, 264, 646, 79, 1513, 559, 399, 295, 4368, 50498, 50498, 294, 257, 4583, 3711, 13735, 2010, 18161, 2533, 13, 50802, 50802, 274, 66, 670, 9758, 74, 11, 597, 307, 264, 1785, 295, 4583, 350, 11, 50998, 50998, 307, 274, 66, 670, 710, 74, 1804, 502, 11, 597, 307, 264, 16235, 295, 264, 2063, 51158, 51158, 365, 3104, 281, 264, 4583, 3673, 11, 1413, 264, 14117, 952, 8141, 51382, 51382, 295, 264, 1785, 295, 4583, 350, 1804, 502, 365, 3104, 51558, 51558, 281, 264, 1785, 295, 4583, 350, 13, 51644, 51644, 1779, 30, 51716, 51716, 823, 321, 6552, 274, 66, 670, 9758, 74, 1804, 502, 307, 2570, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11477252893280565, "compression_ratio": 1.8090452261306533, "no_speech_prob": 7.645773621334229e-06}, {"id": 1369, "seek": 391136, "start": 3931.7200000000003, "end": 3935.2400000000002, "text": " of the state of layer k plus 1 with respect", "tokens": [50364, 407, 341, 307, 264, 646, 79, 1513, 559, 399, 295, 4368, 50498, 50498, 294, 257, 4583, 3711, 13735, 2010, 18161, 2533, 13, 50802, 50802, 274, 66, 670, 9758, 74, 11, 597, 307, 264, 1785, 295, 4583, 350, 11, 50998, 50998, 307, 274, 66, 670, 710, 74, 1804, 502, 11, 597, 307, 264, 16235, 295, 264, 2063, 51158, 51158, 365, 3104, 281, 264, 4583, 3673, 11, 1413, 264, 14117, 952, 8141, 51382, 51382, 295, 264, 1785, 295, 4583, 350, 1804, 502, 365, 3104, 51558, 51558, 281, 264, 1785, 295, 4583, 350, 13, 51644, 51644, 1779, 30, 51716, 51716, 823, 321, 6552, 274, 66, 670, 9758, 74, 1804, 502, 307, 2570, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11477252893280565, "compression_ratio": 1.8090452261306533, "no_speech_prob": 7.645773621334229e-06}, {"id": 1370, "seek": 391136, "start": 3935.2400000000002, "end": 3936.96, "text": " to the state of layer k.", "tokens": [50364, 407, 341, 307, 264, 646, 79, 1513, 559, 399, 295, 4368, 50498, 50498, 294, 257, 4583, 3711, 13735, 2010, 18161, 2533, 13, 50802, 50802, 274, 66, 670, 9758, 74, 11, 597, 307, 264, 1785, 295, 4583, 350, 11, 50998, 50998, 307, 274, 66, 670, 710, 74, 1804, 502, 11, 597, 307, 264, 16235, 295, 264, 2063, 51158, 51158, 365, 3104, 281, 264, 4583, 3673, 11, 1413, 264, 14117, 952, 8141, 51382, 51382, 295, 264, 1785, 295, 4583, 350, 1804, 502, 365, 3104, 51558, 51558, 281, 264, 1785, 295, 4583, 350, 13, 51644, 51644, 1779, 30, 51716, 51716, 823, 321, 6552, 274, 66, 670, 9758, 74, 1804, 502, 307, 2570, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11477252893280565, "compression_ratio": 1.8090452261306533, "no_speech_prob": 7.645773621334229e-06}, {"id": 1371, "seek": 391136, "start": 3936.96, "end": 3938.4, "text": " Right?", "tokens": [50364, 407, 341, 307, 264, 646, 79, 1513, 559, 399, 295, 4368, 50498, 50498, 294, 257, 4583, 3711, 13735, 2010, 18161, 2533, 13, 50802, 50802, 274, 66, 670, 9758, 74, 11, 597, 307, 264, 1785, 295, 4583, 350, 11, 50998, 50998, 307, 274, 66, 670, 710, 74, 1804, 502, 11, 597, 307, 264, 16235, 295, 264, 2063, 51158, 51158, 365, 3104, 281, 264, 4583, 3673, 11, 1413, 264, 14117, 952, 8141, 51382, 51382, 295, 264, 1785, 295, 4583, 350, 1804, 502, 365, 3104, 51558, 51558, 281, 264, 1785, 295, 4583, 350, 13, 51644, 51644, 1779, 30, 51716, 51716, 823, 321, 6552, 274, 66, 670, 9758, 74, 1804, 502, 307, 2570, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11477252893280565, "compression_ratio": 1.8090452261306533, "no_speech_prob": 7.645773621334229e-06}, {"id": 1372, "seek": 391136, "start": 3938.4, "end": 3941.08, "text": " Now we assume dc over dzk plus 1 is known.", "tokens": [50364, 407, 341, 307, 264, 646, 79, 1513, 559, 399, 295, 4368, 50498, 50498, 294, 257, 4583, 3711, 13735, 2010, 18161, 2533, 13, 50802, 50802, 274, 66, 670, 9758, 74, 11, 597, 307, 264, 1785, 295, 4583, 350, 11, 50998, 50998, 307, 274, 66, 670, 710, 74, 1804, 502, 11, 597, 307, 264, 16235, 295, 264, 2063, 51158, 51158, 365, 3104, 281, 264, 4583, 3673, 11, 1413, 264, 14117, 952, 8141, 51382, 51382, 295, 264, 1785, 295, 4583, 350, 1804, 502, 365, 3104, 51558, 51558, 281, 264, 1785, 295, 4583, 350, 13, 51644, 51644, 1779, 30, 51716, 51716, 823, 321, 6552, 274, 66, 670, 9758, 74, 1804, 502, 307, 2570, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11477252893280565, "compression_ratio": 1.8090452261306533, "no_speech_prob": 7.645773621334229e-06}, {"id": 1373, "seek": 394108, "start": 3941.08, "end": 3943.16, "text": " And we just need to multiply the Jacobian matrix", "tokens": [50364, 400, 321, 445, 643, 281, 12972, 264, 14117, 952, 8141, 50468, 50468, 295, 264, 2445, 300, 6123, 710, 74, 281, 710, 74, 1804, 502, 13, 50606, 50606, 440, 2445, 307, 1143, 281, 14722, 710, 74, 1804, 502, 490, 710, 74, 13, 50748, 50748, 400, 341, 815, 312, 257, 2445, 611, 295, 512, 9834, 1854, 13, 50884, 50884, 583, 510, 11, 300, 311, 264, 8141, 295, 14641, 33733, 51036, 51036, 295, 283, 11, 597, 307, 365, 5598, 710, 74, 1804, 502, 365, 3104, 51210, 51210, 281, 1184, 295, 264, 6677, 295, 710, 74, 13, 51368, 51368, 407, 300, 311, 264, 700, 4978, 295, 646, 79, 1513, 559, 399, 13, 51560, 51560, 400, 309, 311, 257, 20560, 488, 4978, 13, 51612, 51612, 407, 291, 393, 722, 490, 264, 1192, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12842679746223218, "compression_ratio": 1.71484375, "no_speech_prob": 1.5445026292582043e-05}, {"id": 1374, "seek": 394108, "start": 3943.16, "end": 3945.92, "text": " of the function that links zk to zk plus 1.", "tokens": [50364, 400, 321, 445, 643, 281, 12972, 264, 14117, 952, 8141, 50468, 50468, 295, 264, 2445, 300, 6123, 710, 74, 281, 710, 74, 1804, 502, 13, 50606, 50606, 440, 2445, 307, 1143, 281, 14722, 710, 74, 1804, 502, 490, 710, 74, 13, 50748, 50748, 400, 341, 815, 312, 257, 2445, 611, 295, 512, 9834, 1854, 13, 50884, 50884, 583, 510, 11, 300, 311, 264, 8141, 295, 14641, 33733, 51036, 51036, 295, 283, 11, 597, 307, 365, 5598, 710, 74, 1804, 502, 365, 3104, 51210, 51210, 281, 1184, 295, 264, 6677, 295, 710, 74, 13, 51368, 51368, 407, 300, 311, 264, 700, 4978, 295, 646, 79, 1513, 559, 399, 13, 51560, 51560, 400, 309, 311, 257, 20560, 488, 4978, 13, 51612, 51612, 407, 291, 393, 722, 490, 264, 1192, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12842679746223218, "compression_ratio": 1.71484375, "no_speech_prob": 1.5445026292582043e-05}, {"id": 1375, "seek": 394108, "start": 3945.92, "end": 3948.7599999999998, "text": " The function is used to compute zk plus 1 from zk.", "tokens": [50364, 400, 321, 445, 643, 281, 12972, 264, 14117, 952, 8141, 50468, 50468, 295, 264, 2445, 300, 6123, 710, 74, 281, 710, 74, 1804, 502, 13, 50606, 50606, 440, 2445, 307, 1143, 281, 14722, 710, 74, 1804, 502, 490, 710, 74, 13, 50748, 50748, 400, 341, 815, 312, 257, 2445, 611, 295, 512, 9834, 1854, 13, 50884, 50884, 583, 510, 11, 300, 311, 264, 8141, 295, 14641, 33733, 51036, 51036, 295, 283, 11, 597, 307, 365, 5598, 710, 74, 1804, 502, 365, 3104, 51210, 51210, 281, 1184, 295, 264, 6677, 295, 710, 74, 13, 51368, 51368, 407, 300, 311, 264, 700, 4978, 295, 646, 79, 1513, 559, 399, 13, 51560, 51560, 400, 309, 311, 257, 20560, 488, 4978, 13, 51612, 51612, 407, 291, 393, 722, 490, 264, 1192, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12842679746223218, "compression_ratio": 1.71484375, "no_speech_prob": 1.5445026292582043e-05}, {"id": 1376, "seek": 394108, "start": 3948.7599999999998, "end": 3951.48, "text": " And this may be a function also of some parameters inside.", "tokens": [50364, 400, 321, 445, 643, 281, 12972, 264, 14117, 952, 8141, 50468, 50468, 295, 264, 2445, 300, 6123, 710, 74, 281, 710, 74, 1804, 502, 13, 50606, 50606, 440, 2445, 307, 1143, 281, 14722, 710, 74, 1804, 502, 490, 710, 74, 13, 50748, 50748, 400, 341, 815, 312, 257, 2445, 611, 295, 512, 9834, 1854, 13, 50884, 50884, 583, 510, 11, 300, 311, 264, 8141, 295, 14641, 33733, 51036, 51036, 295, 283, 11, 597, 307, 365, 5598, 710, 74, 1804, 502, 365, 3104, 51210, 51210, 281, 1184, 295, 264, 6677, 295, 710, 74, 13, 51368, 51368, 407, 300, 311, 264, 700, 4978, 295, 646, 79, 1513, 559, 399, 13, 51560, 51560, 400, 309, 311, 257, 20560, 488, 4978, 13, 51612, 51612, 407, 291, 393, 722, 490, 264, 1192, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12842679746223218, "compression_ratio": 1.71484375, "no_speech_prob": 1.5445026292582043e-05}, {"id": 1377, "seek": 394108, "start": 3951.48, "end": 3954.52, "text": " But here, that's the matrix of partial derivatives", "tokens": [50364, 400, 321, 445, 643, 281, 12972, 264, 14117, 952, 8141, 50468, 50468, 295, 264, 2445, 300, 6123, 710, 74, 281, 710, 74, 1804, 502, 13, 50606, 50606, 440, 2445, 307, 1143, 281, 14722, 710, 74, 1804, 502, 490, 710, 74, 13, 50748, 50748, 400, 341, 815, 312, 257, 2445, 611, 295, 512, 9834, 1854, 13, 50884, 50884, 583, 510, 11, 300, 311, 264, 8141, 295, 14641, 33733, 51036, 51036, 295, 283, 11, 597, 307, 365, 5598, 710, 74, 1804, 502, 365, 3104, 51210, 51210, 281, 1184, 295, 264, 6677, 295, 710, 74, 13, 51368, 51368, 407, 300, 311, 264, 700, 4978, 295, 646, 79, 1513, 559, 399, 13, 51560, 51560, 400, 309, 311, 257, 20560, 488, 4978, 13, 51612, 51612, 407, 291, 393, 722, 490, 264, 1192, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12842679746223218, "compression_ratio": 1.71484375, "no_speech_prob": 1.5445026292582043e-05}, {"id": 1378, "seek": 394108, "start": 3954.52, "end": 3958.0, "text": " of f, which is with output zk plus 1 with respect", "tokens": [50364, 400, 321, 445, 643, 281, 12972, 264, 14117, 952, 8141, 50468, 50468, 295, 264, 2445, 300, 6123, 710, 74, 281, 710, 74, 1804, 502, 13, 50606, 50606, 440, 2445, 307, 1143, 281, 14722, 710, 74, 1804, 502, 490, 710, 74, 13, 50748, 50748, 400, 341, 815, 312, 257, 2445, 611, 295, 512, 9834, 1854, 13, 50884, 50884, 583, 510, 11, 300, 311, 264, 8141, 295, 14641, 33733, 51036, 51036, 295, 283, 11, 597, 307, 365, 5598, 710, 74, 1804, 502, 365, 3104, 51210, 51210, 281, 1184, 295, 264, 6677, 295, 710, 74, 13, 51368, 51368, 407, 300, 311, 264, 700, 4978, 295, 646, 79, 1513, 559, 399, 13, 51560, 51560, 400, 309, 311, 257, 20560, 488, 4978, 13, 51612, 51612, 407, 291, 393, 722, 490, 264, 1192, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12842679746223218, "compression_ratio": 1.71484375, "no_speech_prob": 1.5445026292582043e-05}, {"id": 1379, "seek": 394108, "start": 3958.0, "end": 3961.16, "text": " to each of the components of zk.", "tokens": [50364, 400, 321, 445, 643, 281, 12972, 264, 14117, 952, 8141, 50468, 50468, 295, 264, 2445, 300, 6123, 710, 74, 281, 710, 74, 1804, 502, 13, 50606, 50606, 440, 2445, 307, 1143, 281, 14722, 710, 74, 1804, 502, 490, 710, 74, 13, 50748, 50748, 400, 341, 815, 312, 257, 2445, 611, 295, 512, 9834, 1854, 13, 50884, 50884, 583, 510, 11, 300, 311, 264, 8141, 295, 14641, 33733, 51036, 51036, 295, 283, 11, 597, 307, 365, 5598, 710, 74, 1804, 502, 365, 3104, 51210, 51210, 281, 1184, 295, 264, 6677, 295, 710, 74, 13, 51368, 51368, 407, 300, 311, 264, 700, 4978, 295, 646, 79, 1513, 559, 399, 13, 51560, 51560, 400, 309, 311, 257, 20560, 488, 4978, 13, 51612, 51612, 407, 291, 393, 722, 490, 264, 1192, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12842679746223218, "compression_ratio": 1.71484375, "no_speech_prob": 1.5445026292582043e-05}, {"id": 1380, "seek": 394108, "start": 3961.16, "end": 3965.0, "text": " So that's the first rule of backpropagation.", "tokens": [50364, 400, 321, 445, 643, 281, 12972, 264, 14117, 952, 8141, 50468, 50468, 295, 264, 2445, 300, 6123, 710, 74, 281, 710, 74, 1804, 502, 13, 50606, 50606, 440, 2445, 307, 1143, 281, 14722, 710, 74, 1804, 502, 490, 710, 74, 13, 50748, 50748, 400, 341, 815, 312, 257, 2445, 611, 295, 512, 9834, 1854, 13, 50884, 50884, 583, 510, 11, 300, 311, 264, 8141, 295, 14641, 33733, 51036, 51036, 295, 283, 11, 597, 307, 365, 5598, 710, 74, 1804, 502, 365, 3104, 51210, 51210, 281, 1184, 295, 264, 6677, 295, 710, 74, 13, 51368, 51368, 407, 300, 311, 264, 700, 4978, 295, 646, 79, 1513, 559, 399, 13, 51560, 51560, 400, 309, 311, 257, 20560, 488, 4978, 13, 51612, 51612, 407, 291, 393, 722, 490, 264, 1192, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12842679746223218, "compression_ratio": 1.71484375, "no_speech_prob": 1.5445026292582043e-05}, {"id": 1381, "seek": 394108, "start": 3965.0, "end": 3966.04, "text": " And it's a recursive rule.", "tokens": [50364, 400, 321, 445, 643, 281, 12972, 264, 14117, 952, 8141, 50468, 50468, 295, 264, 2445, 300, 6123, 710, 74, 281, 710, 74, 1804, 502, 13, 50606, 50606, 440, 2445, 307, 1143, 281, 14722, 710, 74, 1804, 502, 490, 710, 74, 13, 50748, 50748, 400, 341, 815, 312, 257, 2445, 611, 295, 512, 9834, 1854, 13, 50884, 50884, 583, 510, 11, 300, 311, 264, 8141, 295, 14641, 33733, 51036, 51036, 295, 283, 11, 597, 307, 365, 5598, 710, 74, 1804, 502, 365, 3104, 51210, 51210, 281, 1184, 295, 264, 6677, 295, 710, 74, 13, 51368, 51368, 407, 300, 311, 264, 700, 4978, 295, 646, 79, 1513, 559, 399, 13, 51560, 51560, 400, 309, 311, 257, 20560, 488, 4978, 13, 51612, 51612, 407, 291, 393, 722, 490, 264, 1192, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12842679746223218, "compression_ratio": 1.71484375, "no_speech_prob": 1.5445026292582043e-05}, {"id": 1382, "seek": 394108, "start": 3966.04, "end": 3967.7599999999998, "text": " So you can start from the top.", "tokens": [50364, 400, 321, 445, 643, 281, 12972, 264, 14117, 952, 8141, 50468, 50468, 295, 264, 2445, 300, 6123, 710, 74, 281, 710, 74, 1804, 502, 13, 50606, 50606, 440, 2445, 307, 1143, 281, 14722, 710, 74, 1804, 502, 490, 710, 74, 13, 50748, 50748, 400, 341, 815, 312, 257, 2445, 611, 295, 512, 9834, 1854, 13, 50884, 50884, 583, 510, 11, 300, 311, 264, 8141, 295, 14641, 33733, 51036, 51036, 295, 283, 11, 597, 307, 365, 5598, 710, 74, 1804, 502, 365, 3104, 51210, 51210, 281, 1184, 295, 264, 6677, 295, 710, 74, 13, 51368, 51368, 407, 300, 311, 264, 700, 4978, 295, 646, 79, 1513, 559, 399, 13, 51560, 51560, 400, 309, 311, 257, 20560, 488, 4978, 13, 51612, 51612, 407, 291, 393, 722, 490, 264, 1192, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12842679746223218, "compression_ratio": 1.71484375, "no_speech_prob": 1.5445026292582043e-05}, {"id": 1383, "seek": 396776, "start": 3967.76, "end": 3971.4, "text": " You start initially with dc over dc, which is 1, which is why", "tokens": [50364, 509, 722, 9105, 365, 274, 66, 670, 274, 66, 11, 597, 307, 502, 11, 597, 307, 983, 50546, 50546, 286, 362, 341, 502, 510, 322, 1192, 13, 50728, 50728, 400, 550, 291, 445, 1066, 30955, 50804, 50804, 538, 264, 14117, 952, 8141, 439, 264, 636, 760, 13, 51008, 51008, 400, 300, 646, 79, 1513, 559, 1024, 2771, 2448, 13, 51108, 51108, 400, 586, 291, 483, 2771, 2448, 365, 3104, 281, 439, 264, 4368, 13, 51232, 51232, 509, 611, 528, 264, 2771, 2448, 365, 3104, 281, 264, 17443, 11, 51348, 51348, 570, 300, 311, 437, 291, 643, 281, 360, 2539, 13, 51440, 51440, 407, 437, 291, 393, 2464, 307, 264, 912, 5021, 4978, 13, 51596, 51596, 274, 66, 670, 27379, 74, 307, 2681, 281, 274, 66, 670, 9758, 74, 1804, 502, 11, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1344471119068287, "compression_ratio": 1.75390625, "no_speech_prob": 2.1108793589519337e-05}, {"id": 1384, "seek": 396776, "start": 3971.4, "end": 3975.0400000000004, "text": " I have this 1 here on top.", "tokens": [50364, 509, 722, 9105, 365, 274, 66, 670, 274, 66, 11, 597, 307, 502, 11, 597, 307, 983, 50546, 50546, 286, 362, 341, 502, 510, 322, 1192, 13, 50728, 50728, 400, 550, 291, 445, 1066, 30955, 50804, 50804, 538, 264, 14117, 952, 8141, 439, 264, 636, 760, 13, 51008, 51008, 400, 300, 646, 79, 1513, 559, 1024, 2771, 2448, 13, 51108, 51108, 400, 586, 291, 483, 2771, 2448, 365, 3104, 281, 439, 264, 4368, 13, 51232, 51232, 509, 611, 528, 264, 2771, 2448, 365, 3104, 281, 264, 17443, 11, 51348, 51348, 570, 300, 311, 437, 291, 643, 281, 360, 2539, 13, 51440, 51440, 407, 437, 291, 393, 2464, 307, 264, 912, 5021, 4978, 13, 51596, 51596, 274, 66, 670, 27379, 74, 307, 2681, 281, 274, 66, 670, 9758, 74, 1804, 502, 11, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1344471119068287, "compression_ratio": 1.75390625, "no_speech_prob": 2.1108793589519337e-05}, {"id": 1385, "seek": 396776, "start": 3975.0400000000004, "end": 3976.5600000000004, "text": " And then you just keep multiplying", "tokens": [50364, 509, 722, 9105, 365, 274, 66, 670, 274, 66, 11, 597, 307, 502, 11, 597, 307, 983, 50546, 50546, 286, 362, 341, 502, 510, 322, 1192, 13, 50728, 50728, 400, 550, 291, 445, 1066, 30955, 50804, 50804, 538, 264, 14117, 952, 8141, 439, 264, 636, 760, 13, 51008, 51008, 400, 300, 646, 79, 1513, 559, 1024, 2771, 2448, 13, 51108, 51108, 400, 586, 291, 483, 2771, 2448, 365, 3104, 281, 439, 264, 4368, 13, 51232, 51232, 509, 611, 528, 264, 2771, 2448, 365, 3104, 281, 264, 17443, 11, 51348, 51348, 570, 300, 311, 437, 291, 643, 281, 360, 2539, 13, 51440, 51440, 407, 437, 291, 393, 2464, 307, 264, 912, 5021, 4978, 13, 51596, 51596, 274, 66, 670, 27379, 74, 307, 2681, 281, 274, 66, 670, 9758, 74, 1804, 502, 11, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1344471119068287, "compression_ratio": 1.75390625, "no_speech_prob": 2.1108793589519337e-05}, {"id": 1386, "seek": 396776, "start": 3976.5600000000004, "end": 3980.6400000000003, "text": " by the Jacobian matrix all the way down.", "tokens": [50364, 509, 722, 9105, 365, 274, 66, 670, 274, 66, 11, 597, 307, 502, 11, 597, 307, 983, 50546, 50546, 286, 362, 341, 502, 510, 322, 1192, 13, 50728, 50728, 400, 550, 291, 445, 1066, 30955, 50804, 50804, 538, 264, 14117, 952, 8141, 439, 264, 636, 760, 13, 51008, 51008, 400, 300, 646, 79, 1513, 559, 1024, 2771, 2448, 13, 51108, 51108, 400, 586, 291, 483, 2771, 2448, 365, 3104, 281, 439, 264, 4368, 13, 51232, 51232, 509, 611, 528, 264, 2771, 2448, 365, 3104, 281, 264, 17443, 11, 51348, 51348, 570, 300, 311, 437, 291, 643, 281, 360, 2539, 13, 51440, 51440, 407, 437, 291, 393, 2464, 307, 264, 912, 5021, 4978, 13, 51596, 51596, 274, 66, 670, 27379, 74, 307, 2681, 281, 274, 66, 670, 9758, 74, 1804, 502, 11, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1344471119068287, "compression_ratio": 1.75390625, "no_speech_prob": 2.1108793589519337e-05}, {"id": 1387, "seek": 396776, "start": 3980.6400000000003, "end": 3982.6400000000003, "text": " And that backpropagates gradients.", "tokens": [50364, 509, 722, 9105, 365, 274, 66, 670, 274, 66, 11, 597, 307, 502, 11, 597, 307, 983, 50546, 50546, 286, 362, 341, 502, 510, 322, 1192, 13, 50728, 50728, 400, 550, 291, 445, 1066, 30955, 50804, 50804, 538, 264, 14117, 952, 8141, 439, 264, 636, 760, 13, 51008, 51008, 400, 300, 646, 79, 1513, 559, 1024, 2771, 2448, 13, 51108, 51108, 400, 586, 291, 483, 2771, 2448, 365, 3104, 281, 439, 264, 4368, 13, 51232, 51232, 509, 611, 528, 264, 2771, 2448, 365, 3104, 281, 264, 17443, 11, 51348, 51348, 570, 300, 311, 437, 291, 643, 281, 360, 2539, 13, 51440, 51440, 407, 437, 291, 393, 2464, 307, 264, 912, 5021, 4978, 13, 51596, 51596, 274, 66, 670, 27379, 74, 307, 2681, 281, 274, 66, 670, 9758, 74, 1804, 502, 11, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1344471119068287, "compression_ratio": 1.75390625, "no_speech_prob": 2.1108793589519337e-05}, {"id": 1388, "seek": 396776, "start": 3982.6400000000003, "end": 3985.1200000000003, "text": " And now you get gradients with respect to all the states.", "tokens": [50364, 509, 722, 9105, 365, 274, 66, 670, 274, 66, 11, 597, 307, 502, 11, 597, 307, 983, 50546, 50546, 286, 362, 341, 502, 510, 322, 1192, 13, 50728, 50728, 400, 550, 291, 445, 1066, 30955, 50804, 50804, 538, 264, 14117, 952, 8141, 439, 264, 636, 760, 13, 51008, 51008, 400, 300, 646, 79, 1513, 559, 1024, 2771, 2448, 13, 51108, 51108, 400, 586, 291, 483, 2771, 2448, 365, 3104, 281, 439, 264, 4368, 13, 51232, 51232, 509, 611, 528, 264, 2771, 2448, 365, 3104, 281, 264, 17443, 11, 51348, 51348, 570, 300, 311, 437, 291, 643, 281, 360, 2539, 13, 51440, 51440, 407, 437, 291, 393, 2464, 307, 264, 912, 5021, 4978, 13, 51596, 51596, 274, 66, 670, 27379, 74, 307, 2681, 281, 274, 66, 670, 9758, 74, 1804, 502, 11, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1344471119068287, "compression_ratio": 1.75390625, "no_speech_prob": 2.1108793589519337e-05}, {"id": 1389, "seek": 396776, "start": 3985.1200000000003, "end": 3987.44, "text": " You also want the gradients with respect to the weights,", "tokens": [50364, 509, 722, 9105, 365, 274, 66, 670, 274, 66, 11, 597, 307, 502, 11, 597, 307, 983, 50546, 50546, 286, 362, 341, 502, 510, 322, 1192, 13, 50728, 50728, 400, 550, 291, 445, 1066, 30955, 50804, 50804, 538, 264, 14117, 952, 8141, 439, 264, 636, 760, 13, 51008, 51008, 400, 300, 646, 79, 1513, 559, 1024, 2771, 2448, 13, 51108, 51108, 400, 586, 291, 483, 2771, 2448, 365, 3104, 281, 439, 264, 4368, 13, 51232, 51232, 509, 611, 528, 264, 2771, 2448, 365, 3104, 281, 264, 17443, 11, 51348, 51348, 570, 300, 311, 437, 291, 643, 281, 360, 2539, 13, 51440, 51440, 407, 437, 291, 393, 2464, 307, 264, 912, 5021, 4978, 13, 51596, 51596, 274, 66, 670, 27379, 74, 307, 2681, 281, 274, 66, 670, 9758, 74, 1804, 502, 11, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1344471119068287, "compression_ratio": 1.75390625, "no_speech_prob": 2.1108793589519337e-05}, {"id": 1390, "seek": 396776, "start": 3987.44, "end": 3989.28, "text": " because that's what you need to do learning.", "tokens": [50364, 509, 722, 9105, 365, 274, 66, 670, 274, 66, 11, 597, 307, 502, 11, 597, 307, 983, 50546, 50546, 286, 362, 341, 502, 510, 322, 1192, 13, 50728, 50728, 400, 550, 291, 445, 1066, 30955, 50804, 50804, 538, 264, 14117, 952, 8141, 439, 264, 636, 760, 13, 51008, 51008, 400, 300, 646, 79, 1513, 559, 1024, 2771, 2448, 13, 51108, 51108, 400, 586, 291, 483, 2771, 2448, 365, 3104, 281, 439, 264, 4368, 13, 51232, 51232, 509, 611, 528, 264, 2771, 2448, 365, 3104, 281, 264, 17443, 11, 51348, 51348, 570, 300, 311, 437, 291, 643, 281, 360, 2539, 13, 51440, 51440, 407, 437, 291, 393, 2464, 307, 264, 912, 5021, 4978, 13, 51596, 51596, 274, 66, 670, 27379, 74, 307, 2681, 281, 274, 66, 670, 9758, 74, 1804, 502, 11, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1344471119068287, "compression_ratio": 1.75390625, "no_speech_prob": 2.1108793589519337e-05}, {"id": 1391, "seek": 396776, "start": 3989.28, "end": 3992.4, "text": " So what you can write is the same chain rule.", "tokens": [50364, 509, 722, 9105, 365, 274, 66, 670, 274, 66, 11, 597, 307, 502, 11, 597, 307, 983, 50546, 50546, 286, 362, 341, 502, 510, 322, 1192, 13, 50728, 50728, 400, 550, 291, 445, 1066, 30955, 50804, 50804, 538, 264, 14117, 952, 8141, 439, 264, 636, 760, 13, 51008, 51008, 400, 300, 646, 79, 1513, 559, 1024, 2771, 2448, 13, 51108, 51108, 400, 586, 291, 483, 2771, 2448, 365, 3104, 281, 439, 264, 4368, 13, 51232, 51232, 509, 611, 528, 264, 2771, 2448, 365, 3104, 281, 264, 17443, 11, 51348, 51348, 570, 300, 311, 437, 291, 643, 281, 360, 2539, 13, 51440, 51440, 407, 437, 291, 393, 2464, 307, 264, 912, 5021, 4978, 13, 51596, 51596, 274, 66, 670, 27379, 74, 307, 2681, 281, 274, 66, 670, 9758, 74, 1804, 502, 11, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1344471119068287, "compression_ratio": 1.75390625, "no_speech_prob": 2.1108793589519337e-05}, {"id": 1392, "seek": 396776, "start": 3992.4, "end": 3996.44, "text": " dc over dwk is equal to dc over dzk plus 1,", "tokens": [50364, 509, 722, 9105, 365, 274, 66, 670, 274, 66, 11, 597, 307, 502, 11, 597, 307, 983, 50546, 50546, 286, 362, 341, 502, 510, 322, 1192, 13, 50728, 50728, 400, 550, 291, 445, 1066, 30955, 50804, 50804, 538, 264, 14117, 952, 8141, 439, 264, 636, 760, 13, 51008, 51008, 400, 300, 646, 79, 1513, 559, 1024, 2771, 2448, 13, 51108, 51108, 400, 586, 291, 483, 2771, 2448, 365, 3104, 281, 439, 264, 4368, 13, 51232, 51232, 509, 611, 528, 264, 2771, 2448, 365, 3104, 281, 264, 17443, 11, 51348, 51348, 570, 300, 311, 437, 291, 643, 281, 360, 2539, 13, 51440, 51440, 407, 437, 291, 393, 2464, 307, 264, 912, 5021, 4978, 13, 51596, 51596, 274, 66, 670, 27379, 74, 307, 2681, 281, 274, 66, 670, 9758, 74, 1804, 502, 11, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1344471119068287, "compression_ratio": 1.75390625, "no_speech_prob": 2.1108793589519337e-05}, {"id": 1393, "seek": 399644, "start": 3996.44, "end": 4000.6, "text": " which we assume is known, times dzk plus 1 over dwk.", "tokens": [50364, 597, 321, 6552, 307, 2570, 11, 1413, 9758, 74, 1804, 502, 670, 27379, 74, 13, 50572, 50572, 400, 291, 393, 2464, 341, 382, 274, 66, 670, 274, 74, 1804, 502, 13, 50724, 50724, 400, 264, 33621, 1296, 710, 74, 1804, 502, 293, 261, 74, 50828, 50828, 307, 264, 2445, 710, 74, 6456, 281, 261, 74, 13, 50962, 50962, 407, 291, 393, 23203, 264, 5598, 295, 264, 2445, 710, 74, 51222, 51222, 365, 3104, 281, 261, 74, 13, 51276, 51276, 400, 300, 2709, 291, 1071, 14117, 952, 8141, 13, 51376, 51376, 400, 370, 365, 729, 732, 30546, 11, 291, 51446, 51446, 393, 360, 646, 79, 1513, 559, 399, 365, 445, 466, 1340, 13, 51554, 51554, 4083, 437, 1709, 322, 1854, 9953, 51, 284, 339, 51718, 51718, 293, 1854, 881, 295, 729, 29834, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12430608973783605, "compression_ratio": 1.7083333333333333, "no_speech_prob": 6.747875886503607e-06}, {"id": 1394, "seek": 399644, "start": 4000.6, "end": 4003.64, "text": " And you can write this as dc over dk plus 1.", "tokens": [50364, 597, 321, 6552, 307, 2570, 11, 1413, 9758, 74, 1804, 502, 670, 27379, 74, 13, 50572, 50572, 400, 291, 393, 2464, 341, 382, 274, 66, 670, 274, 74, 1804, 502, 13, 50724, 50724, 400, 264, 33621, 1296, 710, 74, 1804, 502, 293, 261, 74, 50828, 50828, 307, 264, 2445, 710, 74, 6456, 281, 261, 74, 13, 50962, 50962, 407, 291, 393, 23203, 264, 5598, 295, 264, 2445, 710, 74, 51222, 51222, 365, 3104, 281, 261, 74, 13, 51276, 51276, 400, 300, 2709, 291, 1071, 14117, 952, 8141, 13, 51376, 51376, 400, 370, 365, 729, 732, 30546, 11, 291, 51446, 51446, 393, 360, 646, 79, 1513, 559, 399, 365, 445, 466, 1340, 13, 51554, 51554, 4083, 437, 1709, 322, 1854, 9953, 51, 284, 339, 51718, 51718, 293, 1854, 881, 295, 729, 29834, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12430608973783605, "compression_ratio": 1.7083333333333333, "no_speech_prob": 6.747875886503607e-06}, {"id": 1395, "seek": 399644, "start": 4003.64, "end": 4005.7200000000003, "text": " And the dependency between zk plus 1 and wk", "tokens": [50364, 597, 321, 6552, 307, 2570, 11, 1413, 9758, 74, 1804, 502, 670, 27379, 74, 13, 50572, 50572, 400, 291, 393, 2464, 341, 382, 274, 66, 670, 274, 74, 1804, 502, 13, 50724, 50724, 400, 264, 33621, 1296, 710, 74, 1804, 502, 293, 261, 74, 50828, 50828, 307, 264, 2445, 710, 74, 6456, 281, 261, 74, 13, 50962, 50962, 407, 291, 393, 23203, 264, 5598, 295, 264, 2445, 710, 74, 51222, 51222, 365, 3104, 281, 261, 74, 13, 51276, 51276, 400, 300, 2709, 291, 1071, 14117, 952, 8141, 13, 51376, 51376, 400, 370, 365, 729, 732, 30546, 11, 291, 51446, 51446, 393, 360, 646, 79, 1513, 559, 399, 365, 445, 466, 1340, 13, 51554, 51554, 4083, 437, 1709, 322, 1854, 9953, 51, 284, 339, 51718, 51718, 293, 1854, 881, 295, 729, 29834, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12430608973783605, "compression_ratio": 1.7083333333333333, "no_speech_prob": 6.747875886503607e-06}, {"id": 1396, "seek": 399644, "start": 4005.7200000000003, "end": 4008.4, "text": " is the function zk applied to wk.", "tokens": [50364, 597, 321, 6552, 307, 2570, 11, 1413, 9758, 74, 1804, 502, 670, 27379, 74, 13, 50572, 50572, 400, 291, 393, 2464, 341, 382, 274, 66, 670, 274, 74, 1804, 502, 13, 50724, 50724, 400, 264, 33621, 1296, 710, 74, 1804, 502, 293, 261, 74, 50828, 50828, 307, 264, 2445, 710, 74, 6456, 281, 261, 74, 13, 50962, 50962, 407, 291, 393, 23203, 264, 5598, 295, 264, 2445, 710, 74, 51222, 51222, 365, 3104, 281, 261, 74, 13, 51276, 51276, 400, 300, 2709, 291, 1071, 14117, 952, 8141, 13, 51376, 51376, 400, 370, 365, 729, 732, 30546, 11, 291, 51446, 51446, 393, 360, 646, 79, 1513, 559, 399, 365, 445, 466, 1340, 13, 51554, 51554, 4083, 437, 1709, 322, 1854, 9953, 51, 284, 339, 51718, 51718, 293, 1854, 881, 295, 729, 29834, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12430608973783605, "compression_ratio": 1.7083333333333333, "no_speech_prob": 6.747875886503607e-06}, {"id": 1397, "seek": 399644, "start": 4008.4, "end": 4013.6, "text": " So you can differentiate the output of the function zk", "tokens": [50364, 597, 321, 6552, 307, 2570, 11, 1413, 9758, 74, 1804, 502, 670, 27379, 74, 13, 50572, 50572, 400, 291, 393, 2464, 341, 382, 274, 66, 670, 274, 74, 1804, 502, 13, 50724, 50724, 400, 264, 33621, 1296, 710, 74, 1804, 502, 293, 261, 74, 50828, 50828, 307, 264, 2445, 710, 74, 6456, 281, 261, 74, 13, 50962, 50962, 407, 291, 393, 23203, 264, 5598, 295, 264, 2445, 710, 74, 51222, 51222, 365, 3104, 281, 261, 74, 13, 51276, 51276, 400, 300, 2709, 291, 1071, 14117, 952, 8141, 13, 51376, 51376, 400, 370, 365, 729, 732, 30546, 11, 291, 51446, 51446, 393, 360, 646, 79, 1513, 559, 399, 365, 445, 466, 1340, 13, 51554, 51554, 4083, 437, 1709, 322, 1854, 9953, 51, 284, 339, 51718, 51718, 293, 1854, 881, 295, 729, 29834, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12430608973783605, "compression_ratio": 1.7083333333333333, "no_speech_prob": 6.747875886503607e-06}, {"id": 1398, "seek": 399644, "start": 4013.6, "end": 4014.68, "text": " with respect to wk.", "tokens": [50364, 597, 321, 6552, 307, 2570, 11, 1413, 9758, 74, 1804, 502, 670, 27379, 74, 13, 50572, 50572, 400, 291, 393, 2464, 341, 382, 274, 66, 670, 274, 74, 1804, 502, 13, 50724, 50724, 400, 264, 33621, 1296, 710, 74, 1804, 502, 293, 261, 74, 50828, 50828, 307, 264, 2445, 710, 74, 6456, 281, 261, 74, 13, 50962, 50962, 407, 291, 393, 23203, 264, 5598, 295, 264, 2445, 710, 74, 51222, 51222, 365, 3104, 281, 261, 74, 13, 51276, 51276, 400, 300, 2709, 291, 1071, 14117, 952, 8141, 13, 51376, 51376, 400, 370, 365, 729, 732, 30546, 11, 291, 51446, 51446, 393, 360, 646, 79, 1513, 559, 399, 365, 445, 466, 1340, 13, 51554, 51554, 4083, 437, 1709, 322, 1854, 9953, 51, 284, 339, 51718, 51718, 293, 1854, 881, 295, 729, 29834, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12430608973783605, "compression_ratio": 1.7083333333333333, "no_speech_prob": 6.747875886503607e-06}, {"id": 1399, "seek": 399644, "start": 4014.68, "end": 4016.68, "text": " And that gives you another Jacobian matrix.", "tokens": [50364, 597, 321, 6552, 307, 2570, 11, 1413, 9758, 74, 1804, 502, 670, 27379, 74, 13, 50572, 50572, 400, 291, 393, 2464, 341, 382, 274, 66, 670, 274, 74, 1804, 502, 13, 50724, 50724, 400, 264, 33621, 1296, 710, 74, 1804, 502, 293, 261, 74, 50828, 50828, 307, 264, 2445, 710, 74, 6456, 281, 261, 74, 13, 50962, 50962, 407, 291, 393, 23203, 264, 5598, 295, 264, 2445, 710, 74, 51222, 51222, 365, 3104, 281, 261, 74, 13, 51276, 51276, 400, 300, 2709, 291, 1071, 14117, 952, 8141, 13, 51376, 51376, 400, 370, 365, 729, 732, 30546, 11, 291, 51446, 51446, 393, 360, 646, 79, 1513, 559, 399, 365, 445, 466, 1340, 13, 51554, 51554, 4083, 437, 1709, 322, 1854, 9953, 51, 284, 339, 51718, 51718, 293, 1854, 881, 295, 729, 29834, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12430608973783605, "compression_ratio": 1.7083333333333333, "no_speech_prob": 6.747875886503607e-06}, {"id": 1400, "seek": 399644, "start": 4016.68, "end": 4018.08, "text": " And so with those two formulas, you", "tokens": [50364, 597, 321, 6552, 307, 2570, 11, 1413, 9758, 74, 1804, 502, 670, 27379, 74, 13, 50572, 50572, 400, 291, 393, 2464, 341, 382, 274, 66, 670, 274, 74, 1804, 502, 13, 50724, 50724, 400, 264, 33621, 1296, 710, 74, 1804, 502, 293, 261, 74, 50828, 50828, 307, 264, 2445, 710, 74, 6456, 281, 261, 74, 13, 50962, 50962, 407, 291, 393, 23203, 264, 5598, 295, 264, 2445, 710, 74, 51222, 51222, 365, 3104, 281, 261, 74, 13, 51276, 51276, 400, 300, 2709, 291, 1071, 14117, 952, 8141, 13, 51376, 51376, 400, 370, 365, 729, 732, 30546, 11, 291, 51446, 51446, 393, 360, 646, 79, 1513, 559, 399, 365, 445, 466, 1340, 13, 51554, 51554, 4083, 437, 1709, 322, 1854, 9953, 51, 284, 339, 51718, 51718, 293, 1854, 881, 295, 729, 29834, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12430608973783605, "compression_ratio": 1.7083333333333333, "no_speech_prob": 6.747875886503607e-06}, {"id": 1401, "seek": 399644, "start": 4018.08, "end": 4020.2400000000002, "text": " can do backpropagation with just about anything.", "tokens": [50364, 597, 321, 6552, 307, 2570, 11, 1413, 9758, 74, 1804, 502, 670, 27379, 74, 13, 50572, 50572, 400, 291, 393, 2464, 341, 382, 274, 66, 670, 274, 74, 1804, 502, 13, 50724, 50724, 400, 264, 33621, 1296, 710, 74, 1804, 502, 293, 261, 74, 50828, 50828, 307, 264, 2445, 710, 74, 6456, 281, 261, 74, 13, 50962, 50962, 407, 291, 393, 23203, 264, 5598, 295, 264, 2445, 710, 74, 51222, 51222, 365, 3104, 281, 261, 74, 13, 51276, 51276, 400, 300, 2709, 291, 1071, 14117, 952, 8141, 13, 51376, 51376, 400, 370, 365, 729, 732, 30546, 11, 291, 51446, 51446, 393, 360, 646, 79, 1513, 559, 399, 365, 445, 466, 1340, 13, 51554, 51554, 4083, 437, 1709, 322, 1854, 9953, 51, 284, 339, 51718, 51718, 293, 1854, 881, 295, 729, 29834, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12430608973783605, "compression_ratio": 1.7083333333333333, "no_speech_prob": 6.747875886503607e-06}, {"id": 1402, "seek": 399644, "start": 4020.2400000000002, "end": 4023.52, "text": " Really what goes on inside PyTorch", "tokens": [50364, 597, 321, 6552, 307, 2570, 11, 1413, 9758, 74, 1804, 502, 670, 27379, 74, 13, 50572, 50572, 400, 291, 393, 2464, 341, 382, 274, 66, 670, 274, 74, 1804, 502, 13, 50724, 50724, 400, 264, 33621, 1296, 710, 74, 1804, 502, 293, 261, 74, 50828, 50828, 307, 264, 2445, 710, 74, 6456, 281, 261, 74, 13, 50962, 50962, 407, 291, 393, 23203, 264, 5598, 295, 264, 2445, 710, 74, 51222, 51222, 365, 3104, 281, 261, 74, 13, 51276, 51276, 400, 300, 2709, 291, 1071, 14117, 952, 8141, 13, 51376, 51376, 400, 370, 365, 729, 732, 30546, 11, 291, 51446, 51446, 393, 360, 646, 79, 1513, 559, 399, 365, 445, 466, 1340, 13, 51554, 51554, 4083, 437, 1709, 322, 1854, 9953, 51, 284, 339, 51718, 51718, 293, 1854, 881, 295, 729, 29834, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12430608973783605, "compression_ratio": 1.7083333333333333, "no_speech_prob": 6.747875886503607e-06}, {"id": 1403, "seek": 399644, "start": 4023.52, "end": 4025.36, "text": " and inside most of those frameworks,", "tokens": [50364, 597, 321, 6552, 307, 2570, 11, 1413, 9758, 74, 1804, 502, 670, 27379, 74, 13, 50572, 50572, 400, 291, 393, 2464, 341, 382, 274, 66, 670, 274, 74, 1804, 502, 13, 50724, 50724, 400, 264, 33621, 1296, 710, 74, 1804, 502, 293, 261, 74, 50828, 50828, 307, 264, 2445, 710, 74, 6456, 281, 261, 74, 13, 50962, 50962, 407, 291, 393, 23203, 264, 5598, 295, 264, 2445, 710, 74, 51222, 51222, 365, 3104, 281, 261, 74, 13, 51276, 51276, 400, 300, 2709, 291, 1071, 14117, 952, 8141, 13, 51376, 51376, 400, 370, 365, 729, 732, 30546, 11, 291, 51446, 51446, 393, 360, 646, 79, 1513, 559, 399, 365, 445, 466, 1340, 13, 51554, 51554, 4083, 437, 1709, 322, 1854, 9953, 51, 284, 339, 51718, 51718, 293, 1854, 881, 295, 729, 29834, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.12430608973783605, "compression_ratio": 1.7083333333333333, "no_speech_prob": 6.747875886503607e-06}, {"id": 1404, "seek": 402536, "start": 4025.36, "end": 4028.0, "text": " TensorFlow and Jackson, whatever,", "tokens": [50364, 37624, 293, 10647, 11, 2035, 11, 50496, 50496, 307, 746, 411, 341, 11, 689, 291, 362, 11, 50628, 50628, 370, 718, 311, 747, 257, 588, 2199, 10686, 510, 11, 50740, 50740, 689, 291, 362, 364, 4846, 11, 13075, 1602, 2445, 300, 50882, 50882, 715, 1819, 364, 5598, 300, 1709, 281, 257, 2063, 2445, 13, 51022, 51022, 400, 300, 2063, 2445, 8000, 264, 2983, 265, 6040, 1344, 51122, 51122, 1296, 264, 5598, 295, 264, 1185, 293, 264, 14721, 5598, 13, 51328, 51328, 407, 291, 393, 2464, 341, 2445, 382, 269, 295, 290, 295, 261, 13, 51540, 51540, 286, 994, 380, 829, 264, 2031, 510, 11, 457, 445, 337, 16992, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1540095574032944, "compression_ratio": 1.7049180327868851, "no_speech_prob": 9.223190318152774e-06}, {"id": 1405, "seek": 402536, "start": 4028.0, "end": 4030.6400000000003, "text": " is something like this, where you have,", "tokens": [50364, 37624, 293, 10647, 11, 2035, 11, 50496, 50496, 307, 746, 411, 341, 11, 689, 291, 362, 11, 50628, 50628, 370, 718, 311, 747, 257, 588, 2199, 10686, 510, 11, 50740, 50740, 689, 291, 362, 364, 4846, 11, 13075, 1602, 2445, 300, 50882, 50882, 715, 1819, 364, 5598, 300, 1709, 281, 257, 2063, 2445, 13, 51022, 51022, 400, 300, 2063, 2445, 8000, 264, 2983, 265, 6040, 1344, 51122, 51122, 1296, 264, 5598, 295, 264, 1185, 293, 264, 14721, 5598, 13, 51328, 51328, 407, 291, 393, 2464, 341, 2445, 382, 269, 295, 290, 295, 261, 13, 51540, 51540, 286, 994, 380, 829, 264, 2031, 510, 11, 457, 445, 337, 16992, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1540095574032944, "compression_ratio": 1.7049180327868851, "no_speech_prob": 9.223190318152774e-06}, {"id": 1406, "seek": 402536, "start": 4030.6400000000003, "end": 4032.88, "text": " so let's take a very simple diagram here,", "tokens": [50364, 37624, 293, 10647, 11, 2035, 11, 50496, 50496, 307, 746, 411, 341, 11, 689, 291, 362, 11, 50628, 50628, 370, 718, 311, 747, 257, 588, 2199, 10686, 510, 11, 50740, 50740, 689, 291, 362, 364, 4846, 11, 13075, 1602, 2445, 300, 50882, 50882, 715, 1819, 364, 5598, 300, 1709, 281, 257, 2063, 2445, 13, 51022, 51022, 400, 300, 2063, 2445, 8000, 264, 2983, 265, 6040, 1344, 51122, 51122, 1296, 264, 5598, 295, 264, 1185, 293, 264, 14721, 5598, 13, 51328, 51328, 407, 291, 393, 2464, 341, 2445, 382, 269, 295, 290, 295, 261, 13, 51540, 51540, 286, 994, 380, 829, 264, 2031, 510, 11, 457, 445, 337, 16992, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1540095574032944, "compression_ratio": 1.7049180327868851, "no_speech_prob": 9.223190318152774e-06}, {"id": 1407, "seek": 402536, "start": 4032.88, "end": 4035.7200000000003, "text": " where you have an input, parameterized function that", "tokens": [50364, 37624, 293, 10647, 11, 2035, 11, 50496, 50496, 307, 746, 411, 341, 11, 689, 291, 362, 11, 50628, 50628, 370, 718, 311, 747, 257, 588, 2199, 10686, 510, 11, 50740, 50740, 689, 291, 362, 364, 4846, 11, 13075, 1602, 2445, 300, 50882, 50882, 715, 1819, 364, 5598, 300, 1709, 281, 257, 2063, 2445, 13, 51022, 51022, 400, 300, 2063, 2445, 8000, 264, 2983, 265, 6040, 1344, 51122, 51122, 1296, 264, 5598, 295, 264, 1185, 293, 264, 14721, 5598, 13, 51328, 51328, 407, 291, 393, 2464, 341, 2445, 382, 269, 295, 290, 295, 261, 13, 51540, 51540, 286, 994, 380, 829, 264, 2031, 510, 11, 457, 445, 337, 16992, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1540095574032944, "compression_ratio": 1.7049180327868851, "no_speech_prob": 9.223190318152774e-06}, {"id": 1408, "seek": 402536, "start": 4035.7200000000003, "end": 4038.52, "text": " computes an output that goes to a cost function.", "tokens": [50364, 37624, 293, 10647, 11, 2035, 11, 50496, 50496, 307, 746, 411, 341, 11, 689, 291, 362, 11, 50628, 50628, 370, 718, 311, 747, 257, 588, 2199, 10686, 510, 11, 50740, 50740, 689, 291, 362, 364, 4846, 11, 13075, 1602, 2445, 300, 50882, 50882, 715, 1819, 364, 5598, 300, 1709, 281, 257, 2063, 2445, 13, 51022, 51022, 400, 300, 2063, 2445, 8000, 264, 2983, 265, 6040, 1344, 51122, 51122, 1296, 264, 5598, 295, 264, 1185, 293, 264, 14721, 5598, 13, 51328, 51328, 407, 291, 393, 2464, 341, 2445, 382, 269, 295, 290, 295, 261, 13, 51540, 51540, 286, 994, 380, 829, 264, 2031, 510, 11, 457, 445, 337, 16992, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1540095574032944, "compression_ratio": 1.7049180327868851, "no_speech_prob": 9.223190318152774e-06}, {"id": 1409, "seek": 402536, "start": 4038.52, "end": 4040.52, "text": " And that cost function measures the discrepancy", "tokens": [50364, 37624, 293, 10647, 11, 2035, 11, 50496, 50496, 307, 746, 411, 341, 11, 689, 291, 362, 11, 50628, 50628, 370, 718, 311, 747, 257, 588, 2199, 10686, 510, 11, 50740, 50740, 689, 291, 362, 364, 4846, 11, 13075, 1602, 2445, 300, 50882, 50882, 715, 1819, 364, 5598, 300, 1709, 281, 257, 2063, 2445, 13, 51022, 51022, 400, 300, 2063, 2445, 8000, 264, 2983, 265, 6040, 1344, 51122, 51122, 1296, 264, 5598, 295, 264, 1185, 293, 264, 14721, 5598, 13, 51328, 51328, 407, 291, 393, 2464, 341, 2445, 382, 269, 295, 290, 295, 261, 13, 51540, 51540, 286, 994, 380, 829, 264, 2031, 510, 11, 457, 445, 337, 16992, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1540095574032944, "compression_ratio": 1.7049180327868851, "no_speech_prob": 9.223190318152774e-06}, {"id": 1410, "seek": 402536, "start": 4040.52, "end": 4044.6400000000003, "text": " between the output of the system and the desired output.", "tokens": [50364, 37624, 293, 10647, 11, 2035, 11, 50496, 50496, 307, 746, 411, 341, 11, 689, 291, 362, 11, 50628, 50628, 370, 718, 311, 747, 257, 588, 2199, 10686, 510, 11, 50740, 50740, 689, 291, 362, 364, 4846, 11, 13075, 1602, 2445, 300, 50882, 50882, 715, 1819, 364, 5598, 300, 1709, 281, 257, 2063, 2445, 13, 51022, 51022, 400, 300, 2063, 2445, 8000, 264, 2983, 265, 6040, 1344, 51122, 51122, 1296, 264, 5598, 295, 264, 1185, 293, 264, 14721, 5598, 13, 51328, 51328, 407, 291, 393, 2464, 341, 2445, 382, 269, 295, 290, 295, 261, 13, 51540, 51540, 286, 994, 380, 829, 264, 2031, 510, 11, 457, 445, 337, 16992, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1540095574032944, "compression_ratio": 1.7049180327868851, "no_speech_prob": 9.223190318152774e-06}, {"id": 1411, "seek": 402536, "start": 4044.6400000000003, "end": 4048.88, "text": " So you can write this function as c of g of w.", "tokens": [50364, 37624, 293, 10647, 11, 2035, 11, 50496, 50496, 307, 746, 411, 341, 11, 689, 291, 362, 11, 50628, 50628, 370, 718, 311, 747, 257, 588, 2199, 10686, 510, 11, 50740, 50740, 689, 291, 362, 364, 4846, 11, 13075, 1602, 2445, 300, 50882, 50882, 715, 1819, 364, 5598, 300, 1709, 281, 257, 2063, 2445, 13, 51022, 51022, 400, 300, 2063, 2445, 8000, 264, 2983, 265, 6040, 1344, 51122, 51122, 1296, 264, 5598, 295, 264, 1185, 293, 264, 14721, 5598, 13, 51328, 51328, 407, 291, 393, 2464, 341, 2445, 382, 269, 295, 290, 295, 261, 13, 51540, 51540, 286, 994, 380, 829, 264, 2031, 510, 11, 457, 445, 337, 16992, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1540095574032944, "compression_ratio": 1.7049180327868851, "no_speech_prob": 9.223190318152774e-06}, {"id": 1412, "seek": 402536, "start": 4048.88, "end": 4054.48, "text": " I didn't put the x here, but just for clarity.", "tokens": [50364, 37624, 293, 10647, 11, 2035, 11, 50496, 50496, 307, 746, 411, 341, 11, 689, 291, 362, 11, 50628, 50628, 370, 718, 311, 747, 257, 588, 2199, 10686, 510, 11, 50740, 50740, 689, 291, 362, 364, 4846, 11, 13075, 1602, 2445, 300, 50882, 50882, 715, 1819, 364, 5598, 300, 1709, 281, 257, 2063, 2445, 13, 51022, 51022, 400, 300, 2063, 2445, 8000, 264, 2983, 265, 6040, 1344, 51122, 51122, 1296, 264, 5598, 295, 264, 1185, 293, 264, 14721, 5598, 13, 51328, 51328, 407, 291, 393, 2464, 341, 2445, 382, 269, 295, 290, 295, 261, 13, 51540, 51540, 286, 994, 380, 829, 264, 2031, 510, 11, 457, 445, 337, 16992, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1540095574032944, "compression_ratio": 1.7049180327868851, "no_speech_prob": 9.223190318152774e-06}, {"id": 1413, "seek": 405448, "start": 4054.48, "end": 4057.56, "text": " And the derivative of this is, again, you apply chain rule,", "tokens": [50364, 400, 264, 13760, 295, 341, 307, 11, 797, 11, 291, 3079, 5021, 4978, 11, 50518, 50518, 420, 291, 393, 2464, 309, 365, 14641, 33733, 341, 636, 13, 50764, 50764, 400, 912, 337, 5268, 264, 33621, 295, 264, 5598, 51232, 51232, 365, 3104, 281, 264, 9834, 382, 264, 14117, 952, 8141, 295, 290, 51378, 51378, 365, 3104, 281, 261, 13, 51502, 51502, 759, 261, 307, 257, 39684, 11, 550, 341, 307, 445, 257, 13760, 11, 51654, 51654, 14641, 13760, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.1390502883727292, "compression_ratio": 1.718232044198895, "no_speech_prob": 6.962088264117483e-06}, {"id": 1414, "seek": 405448, "start": 4057.56, "end": 4062.48, "text": " or you can write it with partial derivatives this way.", "tokens": [50364, 400, 264, 13760, 295, 341, 307, 11, 797, 11, 291, 3079, 5021, 4978, 11, 50518, 50518, 420, 291, 393, 2464, 309, 365, 14641, 33733, 341, 636, 13, 50764, 50764, 400, 912, 337, 5268, 264, 33621, 295, 264, 5598, 51232, 51232, 365, 3104, 281, 264, 9834, 382, 264, 14117, 952, 8141, 295, 290, 51378, 51378, 365, 3104, 281, 261, 13, 51502, 51502, 759, 261, 307, 257, 39684, 11, 550, 341, 307, 445, 257, 13760, 11, 51654, 51654, 14641, 13760, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.1390502883727292, "compression_ratio": 1.718232044198895, "no_speech_prob": 6.962088264117483e-06}, {"id": 1415, "seek": 405448, "start": 4062.48, "end": 4071.84, "text": " And same for expand the dependency of the output", "tokens": [50364, 400, 264, 13760, 295, 341, 307, 11, 797, 11, 291, 3079, 5021, 4978, 11, 50518, 50518, 420, 291, 393, 2464, 309, 365, 14641, 33733, 341, 636, 13, 50764, 50764, 400, 912, 337, 5268, 264, 33621, 295, 264, 5598, 51232, 51232, 365, 3104, 281, 264, 9834, 382, 264, 14117, 952, 8141, 295, 290, 51378, 51378, 365, 3104, 281, 261, 13, 51502, 51502, 759, 261, 307, 257, 39684, 11, 550, 341, 307, 445, 257, 13760, 11, 51654, 51654, 14641, 13760, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.1390502883727292, "compression_ratio": 1.718232044198895, "no_speech_prob": 6.962088264117483e-06}, {"id": 1416, "seek": 405448, "start": 4071.84, "end": 4074.76, "text": " with respect to the parameters as the Jacobian matrix of g", "tokens": [50364, 400, 264, 13760, 295, 341, 307, 11, 797, 11, 291, 3079, 5021, 4978, 11, 50518, 50518, 420, 291, 393, 2464, 309, 365, 14641, 33733, 341, 636, 13, 50764, 50764, 400, 912, 337, 5268, 264, 33621, 295, 264, 5598, 51232, 51232, 365, 3104, 281, 264, 9834, 382, 264, 14117, 952, 8141, 295, 290, 51378, 51378, 365, 3104, 281, 261, 13, 51502, 51502, 759, 261, 307, 257, 39684, 11, 550, 341, 307, 445, 257, 13760, 11, 51654, 51654, 14641, 13760, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.1390502883727292, "compression_ratio": 1.718232044198895, "no_speech_prob": 6.962088264117483e-06}, {"id": 1417, "seek": 405448, "start": 4074.76, "end": 4077.2400000000002, "text": " with respect to w.", "tokens": [50364, 400, 264, 13760, 295, 341, 307, 11, 797, 11, 291, 3079, 5021, 4978, 11, 50518, 50518, 420, 291, 393, 2464, 309, 365, 14641, 33733, 341, 636, 13, 50764, 50764, 400, 912, 337, 5268, 264, 33621, 295, 264, 5598, 51232, 51232, 365, 3104, 281, 264, 9834, 382, 264, 14117, 952, 8141, 295, 290, 51378, 51378, 365, 3104, 281, 261, 13, 51502, 51502, 759, 261, 307, 257, 39684, 11, 550, 341, 307, 445, 257, 13760, 11, 51654, 51654, 14641, 13760, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.1390502883727292, "compression_ratio": 1.718232044198895, "no_speech_prob": 6.962088264117483e-06}, {"id": 1418, "seek": 405448, "start": 4077.2400000000002, "end": 4080.28, "text": " If w is a scalar, then this is just a derivative,", "tokens": [50364, 400, 264, 13760, 295, 341, 307, 11, 797, 11, 291, 3079, 5021, 4978, 11, 50518, 50518, 420, 291, 393, 2464, 309, 365, 14641, 33733, 341, 636, 13, 50764, 50764, 400, 912, 337, 5268, 264, 33621, 295, 264, 5598, 51232, 51232, 365, 3104, 281, 264, 9834, 382, 264, 14117, 952, 8141, 295, 290, 51378, 51378, 365, 3104, 281, 261, 13, 51502, 51502, 759, 261, 307, 257, 39684, 11, 550, 341, 307, 445, 257, 13760, 11, 51654, 51654, 14641, 13760, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.1390502883727292, "compression_ratio": 1.718232044198895, "no_speech_prob": 6.962088264117483e-06}, {"id": 1419, "seek": 405448, "start": 4080.28, "end": 4082.44, "text": " partial derivative.", "tokens": [50364, 400, 264, 13760, 295, 341, 307, 11, 797, 11, 291, 3079, 5021, 4978, 11, 50518, 50518, 420, 291, 393, 2464, 309, 365, 14641, 33733, 341, 636, 13, 50764, 50764, 400, 912, 337, 5268, 264, 33621, 295, 264, 5598, 51232, 51232, 365, 3104, 281, 264, 9834, 382, 264, 14117, 952, 8141, 295, 290, 51378, 51378, 365, 3104, 281, 261, 13, 51502, 51502, 759, 261, 307, 257, 39684, 11, 550, 341, 307, 445, 257, 13760, 11, 51654, 51654, 14641, 13760, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.1390502883727292, "compression_ratio": 1.718232044198895, "no_speech_prob": 6.962088264117483e-06}, {"id": 1420, "seek": 408244, "start": 4082.44, "end": 4086.4, "text": " Now, you can express this as a compute graph.", "tokens": [50364, 823, 11, 291, 393, 5109, 341, 382, 257, 14722, 4295, 13, 50562, 50562, 407, 291, 393, 584, 11, 577, 669, 286, 516, 281, 14722, 274, 66, 670, 27379, 30, 50762, 50762, 708, 286, 478, 516, 281, 362, 281, 360, 307, 747, 264, 2158, 502, 11, 50878, 50878, 597, 307, 264, 13760, 295, 269, 365, 3104, 281, 2564, 11, 51012, 51012, 1936, 11, 264, 4470, 365, 3104, 281, 2564, 13, 51118, 51118, 286, 478, 516, 281, 12972, 341, 538, 264, 13760, 295, 264, 2063, 51300, 51300, 365, 3104, 281, 288, 2159, 13, 51386, 51540, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 264, 288, 2159, 11, 2745, 13, 51802], "temperature": 0.0, "avg_logprob": -0.14436866555895125, "compression_ratio": 1.794392523364486, "no_speech_prob": 8.939467079471797e-06}, {"id": 1421, "seek": 408244, "start": 4086.4, "end": 4090.4, "text": " So you can say, how am I going to compute dc over dw?", "tokens": [50364, 823, 11, 291, 393, 5109, 341, 382, 257, 14722, 4295, 13, 50562, 50562, 407, 291, 393, 584, 11, 577, 669, 286, 516, 281, 14722, 274, 66, 670, 27379, 30, 50762, 50762, 708, 286, 478, 516, 281, 362, 281, 360, 307, 747, 264, 2158, 502, 11, 50878, 50878, 597, 307, 264, 13760, 295, 269, 365, 3104, 281, 2564, 11, 51012, 51012, 1936, 11, 264, 4470, 365, 3104, 281, 2564, 13, 51118, 51118, 286, 478, 516, 281, 12972, 341, 538, 264, 13760, 295, 264, 2063, 51300, 51300, 365, 3104, 281, 288, 2159, 13, 51386, 51540, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 264, 288, 2159, 11, 2745, 13, 51802], "temperature": 0.0, "avg_logprob": -0.14436866555895125, "compression_ratio": 1.794392523364486, "no_speech_prob": 8.939467079471797e-06}, {"id": 1422, "seek": 408244, "start": 4090.4, "end": 4092.7200000000003, "text": " What I'm going to have to do is take the value 1,", "tokens": [50364, 823, 11, 291, 393, 5109, 341, 382, 257, 14722, 4295, 13, 50562, 50562, 407, 291, 393, 584, 11, 577, 669, 286, 516, 281, 14722, 274, 66, 670, 27379, 30, 50762, 50762, 708, 286, 478, 516, 281, 362, 281, 360, 307, 747, 264, 2158, 502, 11, 50878, 50878, 597, 307, 264, 13760, 295, 269, 365, 3104, 281, 2564, 11, 51012, 51012, 1936, 11, 264, 4470, 365, 3104, 281, 2564, 13, 51118, 51118, 286, 478, 516, 281, 12972, 341, 538, 264, 13760, 295, 264, 2063, 51300, 51300, 365, 3104, 281, 288, 2159, 13, 51386, 51540, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 264, 288, 2159, 11, 2745, 13, 51802], "temperature": 0.0, "avg_logprob": -0.14436866555895125, "compression_ratio": 1.794392523364486, "no_speech_prob": 8.939467079471797e-06}, {"id": 1423, "seek": 408244, "start": 4092.7200000000003, "end": 4095.4, "text": " which is the derivative of c with respect to itself,", "tokens": [50364, 823, 11, 291, 393, 5109, 341, 382, 257, 14722, 4295, 13, 50562, 50562, 407, 291, 393, 584, 11, 577, 669, 286, 516, 281, 14722, 274, 66, 670, 27379, 30, 50762, 50762, 708, 286, 478, 516, 281, 362, 281, 360, 307, 747, 264, 2158, 502, 11, 50878, 50878, 597, 307, 264, 13760, 295, 269, 365, 3104, 281, 2564, 11, 51012, 51012, 1936, 11, 264, 4470, 365, 3104, 281, 2564, 13, 51118, 51118, 286, 478, 516, 281, 12972, 341, 538, 264, 13760, 295, 264, 2063, 51300, 51300, 365, 3104, 281, 288, 2159, 13, 51386, 51540, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 264, 288, 2159, 11, 2745, 13, 51802], "temperature": 0.0, "avg_logprob": -0.14436866555895125, "compression_ratio": 1.794392523364486, "no_speech_prob": 8.939467079471797e-06}, {"id": 1424, "seek": 408244, "start": 4095.4, "end": 4097.52, "text": " basically, the loss with respect to itself.", "tokens": [50364, 823, 11, 291, 393, 5109, 341, 382, 257, 14722, 4295, 13, 50562, 50562, 407, 291, 393, 584, 11, 577, 669, 286, 516, 281, 14722, 274, 66, 670, 27379, 30, 50762, 50762, 708, 286, 478, 516, 281, 362, 281, 360, 307, 747, 264, 2158, 502, 11, 50878, 50878, 597, 307, 264, 13760, 295, 269, 365, 3104, 281, 2564, 11, 51012, 51012, 1936, 11, 264, 4470, 365, 3104, 281, 2564, 13, 51118, 51118, 286, 478, 516, 281, 12972, 341, 538, 264, 13760, 295, 264, 2063, 51300, 51300, 365, 3104, 281, 288, 2159, 13, 51386, 51540, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 264, 288, 2159, 11, 2745, 13, 51802], "temperature": 0.0, "avg_logprob": -0.14436866555895125, "compression_ratio": 1.794392523364486, "no_speech_prob": 8.939467079471797e-06}, {"id": 1425, "seek": 408244, "start": 4097.52, "end": 4101.16, "text": " I'm going to multiply this by the derivative of the cost", "tokens": [50364, 823, 11, 291, 393, 5109, 341, 382, 257, 14722, 4295, 13, 50562, 50562, 407, 291, 393, 584, 11, 577, 669, 286, 516, 281, 14722, 274, 66, 670, 27379, 30, 50762, 50762, 708, 286, 478, 516, 281, 362, 281, 360, 307, 747, 264, 2158, 502, 11, 50878, 50878, 597, 307, 264, 13760, 295, 269, 365, 3104, 281, 2564, 11, 51012, 51012, 1936, 11, 264, 4470, 365, 3104, 281, 2564, 13, 51118, 51118, 286, 478, 516, 281, 12972, 341, 538, 264, 13760, 295, 264, 2063, 51300, 51300, 365, 3104, 281, 288, 2159, 13, 51386, 51540, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 264, 288, 2159, 11, 2745, 13, 51802], "temperature": 0.0, "avg_logprob": -0.14436866555895125, "compression_ratio": 1.794392523364486, "no_speech_prob": 8.939467079471797e-06}, {"id": 1426, "seek": 408244, "start": 4101.16, "end": 4102.88, "text": " with respect to y bar.", "tokens": [50364, 823, 11, 291, 393, 5109, 341, 382, 257, 14722, 4295, 13, 50562, 50562, 407, 291, 393, 584, 11, 577, 669, 286, 516, 281, 14722, 274, 66, 670, 27379, 30, 50762, 50762, 708, 286, 478, 516, 281, 362, 281, 360, 307, 747, 264, 2158, 502, 11, 50878, 50878, 597, 307, 264, 13760, 295, 269, 365, 3104, 281, 2564, 11, 51012, 51012, 1936, 11, 264, 4470, 365, 3104, 281, 2564, 13, 51118, 51118, 286, 478, 516, 281, 12972, 341, 538, 264, 13760, 295, 264, 2063, 51300, 51300, 365, 3104, 281, 288, 2159, 13, 51386, 51540, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 264, 288, 2159, 11, 2745, 13, 51802], "temperature": 0.0, "avg_logprob": -0.14436866555895125, "compression_ratio": 1.794392523364486, "no_speech_prob": 8.939467079471797e-06}, {"id": 1427, "seek": 410288, "start": 4102.88, "end": 4109.56, "text": " And that's going to give me dc over dy bar, obviously.", "tokens": [50364, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 14584, 2159, 11, 2745, 13, 50698, 50698, 639, 307, 264, 912, 382, 341, 11, 570, 286, 600, 445, 50770, 50770, 17207, 538, 502, 13, 50844, 50844, 1396, 12972, 341, 538, 264, 14117, 952, 8141, 295, 290, 50970, 50970, 365, 3104, 281, 261, 11, 597, 307, 257, 13760, 498, 261, 307, 257, 39684, 13, 51194, 51194, 663, 5598, 5946, 322, 2031, 13, 51332, 51332, 400, 286, 483, 274, 66, 670, 27379, 13, 51420, 51420, 407, 341, 307, 257, 370, 12, 11880, 14722, 4295, 13, 51566, 51566, 639, 307, 257, 636, 295, 17608, 7705, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2608645786748868, "compression_ratio": 1.5219298245614035, "no_speech_prob": 6.276634962887329e-07}, {"id": 1428, "seek": 410288, "start": 4109.56, "end": 4111.0, "text": " This is the same as this, because I've just", "tokens": [50364, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 14584, 2159, 11, 2745, 13, 50698, 50698, 639, 307, 264, 912, 382, 341, 11, 570, 286, 600, 445, 50770, 50770, 17207, 538, 502, 13, 50844, 50844, 1396, 12972, 341, 538, 264, 14117, 952, 8141, 295, 290, 50970, 50970, 365, 3104, 281, 261, 11, 597, 307, 257, 13760, 498, 261, 307, 257, 39684, 13, 51194, 51194, 663, 5598, 5946, 322, 2031, 13, 51332, 51332, 400, 286, 483, 274, 66, 670, 27379, 13, 51420, 51420, 407, 341, 307, 257, 370, 12, 11880, 14722, 4295, 13, 51566, 51566, 639, 307, 257, 636, 295, 17608, 7705, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2608645786748868, "compression_ratio": 1.5219298245614035, "no_speech_prob": 6.276634962887329e-07}, {"id": 1429, "seek": 410288, "start": 4111.0, "end": 4112.4800000000005, "text": " multiplied by 1.", "tokens": [50364, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 14584, 2159, 11, 2745, 13, 50698, 50698, 639, 307, 264, 912, 382, 341, 11, 570, 286, 600, 445, 50770, 50770, 17207, 538, 502, 13, 50844, 50844, 1396, 12972, 341, 538, 264, 14117, 952, 8141, 295, 290, 50970, 50970, 365, 3104, 281, 261, 11, 597, 307, 257, 13760, 498, 261, 307, 257, 39684, 13, 51194, 51194, 663, 5598, 5946, 322, 2031, 13, 51332, 51332, 400, 286, 483, 274, 66, 670, 27379, 13, 51420, 51420, 407, 341, 307, 257, 370, 12, 11880, 14722, 4295, 13, 51566, 51566, 639, 307, 257, 636, 295, 17608, 7705, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2608645786748868, "compression_ratio": 1.5219298245614035, "no_speech_prob": 6.276634962887329e-07}, {"id": 1430, "seek": 410288, "start": 4112.4800000000005, "end": 4115.0, "text": " Then multiply this by the Jacobian matrix of g", "tokens": [50364, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 14584, 2159, 11, 2745, 13, 50698, 50698, 639, 307, 264, 912, 382, 341, 11, 570, 286, 600, 445, 50770, 50770, 17207, 538, 502, 13, 50844, 50844, 1396, 12972, 341, 538, 264, 14117, 952, 8141, 295, 290, 50970, 50970, 365, 3104, 281, 261, 11, 597, 307, 257, 13760, 498, 261, 307, 257, 39684, 13, 51194, 51194, 663, 5598, 5946, 322, 2031, 13, 51332, 51332, 400, 286, 483, 274, 66, 670, 27379, 13, 51420, 51420, 407, 341, 307, 257, 370, 12, 11880, 14722, 4295, 13, 51566, 51566, 639, 307, 257, 636, 295, 17608, 7705, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2608645786748868, "compression_ratio": 1.5219298245614035, "no_speech_prob": 6.276634962887329e-07}, {"id": 1431, "seek": 410288, "start": 4115.0, "end": 4119.4800000000005, "text": " with respect to w, which is a derivative if w is a scalar.", "tokens": [50364, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 14584, 2159, 11, 2745, 13, 50698, 50698, 639, 307, 264, 912, 382, 341, 11, 570, 286, 600, 445, 50770, 50770, 17207, 538, 502, 13, 50844, 50844, 1396, 12972, 341, 538, 264, 14117, 952, 8141, 295, 290, 50970, 50970, 365, 3104, 281, 261, 11, 597, 307, 257, 13760, 498, 261, 307, 257, 39684, 13, 51194, 51194, 663, 5598, 5946, 322, 2031, 13, 51332, 51332, 400, 286, 483, 274, 66, 670, 27379, 13, 51420, 51420, 407, 341, 307, 257, 370, 12, 11880, 14722, 4295, 13, 51566, 51566, 639, 307, 257, 636, 295, 17608, 7705, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2608645786748868, "compression_ratio": 1.5219298245614035, "no_speech_prob": 6.276634962887329e-07}, {"id": 1432, "seek": 410288, "start": 4119.4800000000005, "end": 4122.24, "text": " That output depends on x.", "tokens": [50364, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 14584, 2159, 11, 2745, 13, 50698, 50698, 639, 307, 264, 912, 382, 341, 11, 570, 286, 600, 445, 50770, 50770, 17207, 538, 502, 13, 50844, 50844, 1396, 12972, 341, 538, 264, 14117, 952, 8141, 295, 290, 50970, 50970, 365, 3104, 281, 261, 11, 597, 307, 257, 13760, 498, 261, 307, 257, 39684, 13, 51194, 51194, 663, 5598, 5946, 322, 2031, 13, 51332, 51332, 400, 286, 483, 274, 66, 670, 27379, 13, 51420, 51420, 407, 341, 307, 257, 370, 12, 11880, 14722, 4295, 13, 51566, 51566, 639, 307, 257, 636, 295, 17608, 7705, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2608645786748868, "compression_ratio": 1.5219298245614035, "no_speech_prob": 6.276634962887329e-07}, {"id": 1433, "seek": 410288, "start": 4122.24, "end": 4124.0, "text": " And I get dc over dw.", "tokens": [50364, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 14584, 2159, 11, 2745, 13, 50698, 50698, 639, 307, 264, 912, 382, 341, 11, 570, 286, 600, 445, 50770, 50770, 17207, 538, 502, 13, 50844, 50844, 1396, 12972, 341, 538, 264, 14117, 952, 8141, 295, 290, 50970, 50970, 365, 3104, 281, 261, 11, 597, 307, 257, 13760, 498, 261, 307, 257, 39684, 13, 51194, 51194, 663, 5598, 5946, 322, 2031, 13, 51332, 51332, 400, 286, 483, 274, 66, 670, 27379, 13, 51420, 51420, 407, 341, 307, 257, 370, 12, 11880, 14722, 4295, 13, 51566, 51566, 639, 307, 257, 636, 295, 17608, 7705, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2608645786748868, "compression_ratio": 1.5219298245614035, "no_speech_prob": 6.276634962887329e-07}, {"id": 1434, "seek": 410288, "start": 4124.0, "end": 4126.92, "text": " So this is a so-called compute graph.", "tokens": [50364, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 14584, 2159, 11, 2745, 13, 50698, 50698, 639, 307, 264, 912, 382, 341, 11, 570, 286, 600, 445, 50770, 50770, 17207, 538, 502, 13, 50844, 50844, 1396, 12972, 341, 538, 264, 14117, 952, 8141, 295, 290, 50970, 50970, 365, 3104, 281, 261, 11, 597, 307, 257, 13760, 498, 261, 307, 257, 39684, 13, 51194, 51194, 663, 5598, 5946, 322, 2031, 13, 51332, 51332, 400, 286, 483, 274, 66, 670, 27379, 13, 51420, 51420, 407, 341, 307, 257, 370, 12, 11880, 14722, 4295, 13, 51566, 51566, 639, 307, 257, 636, 295, 17608, 7705, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2608645786748868, "compression_ratio": 1.5219298245614035, "no_speech_prob": 6.276634962887329e-07}, {"id": 1435, "seek": 410288, "start": 4126.92, "end": 4130.08, "text": " This is a way of organizing operations.", "tokens": [50364, 400, 300, 311, 516, 281, 976, 385, 274, 66, 670, 14584, 2159, 11, 2745, 13, 50698, 50698, 639, 307, 264, 912, 382, 341, 11, 570, 286, 600, 445, 50770, 50770, 17207, 538, 502, 13, 50844, 50844, 1396, 12972, 341, 538, 264, 14117, 952, 8141, 295, 290, 50970, 50970, 365, 3104, 281, 261, 11, 597, 307, 257, 13760, 498, 261, 307, 257, 39684, 13, 51194, 51194, 663, 5598, 5946, 322, 2031, 13, 51332, 51332, 400, 286, 483, 274, 66, 670, 27379, 13, 51420, 51420, 407, 341, 307, 257, 370, 12, 11880, 14722, 4295, 13, 51566, 51566, 639, 307, 257, 636, 295, 17608, 7705, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2608645786748868, "compression_ratio": 1.5219298245614035, "no_speech_prob": 6.276634962887329e-07}, {"id": 1436, "seek": 413008, "start": 4130.08, "end": 4133.5599999999995, "text": " This is a way of organizing operations", "tokens": [50364, 639, 307, 257, 636, 295, 17608, 7705, 50538, 50538, 281, 14722, 264, 16235, 13, 50638, 50638, 400, 456, 307, 4476, 364, 12509, 636, 50736, 50736, 295, 27210, 257, 14722, 4295, 295, 341, 2010, 50974, 50974, 666, 257, 14722, 4295, 295, 341, 2010, 300, 715, 1819, 51062, 51062, 264, 16235, 6772, 13, 51146, 51146, 400, 341, 307, 264, 5585, 300, 2314, 51266, 51266, 294, 264, 12509, 38902, 1854, 9953, 51, 284, 339, 293, 37624, 51488, 51488, 293, 661, 3652, 13, 51626, 51626, 2188, 3652, 366, 1238, 4069, 466, 341, 294, 257, 2020, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14321273000616777, "compression_ratio": 1.811926605504587, "no_speech_prob": 1.497005268902285e-05}, {"id": 1437, "seek": 413008, "start": 4133.5599999999995, "end": 4135.5599999999995, "text": " to compute the gradient.", "tokens": [50364, 639, 307, 257, 636, 295, 17608, 7705, 50538, 50538, 281, 14722, 264, 16235, 13, 50638, 50638, 400, 456, 307, 4476, 364, 12509, 636, 50736, 50736, 295, 27210, 257, 14722, 4295, 295, 341, 2010, 50974, 50974, 666, 257, 14722, 4295, 295, 341, 2010, 300, 715, 1819, 51062, 51062, 264, 16235, 6772, 13, 51146, 51146, 400, 341, 307, 264, 5585, 300, 2314, 51266, 51266, 294, 264, 12509, 38902, 1854, 9953, 51, 284, 339, 293, 37624, 51488, 51488, 293, 661, 3652, 13, 51626, 51626, 2188, 3652, 366, 1238, 4069, 466, 341, 294, 257, 2020, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14321273000616777, "compression_ratio": 1.811926605504587, "no_speech_prob": 1.497005268902285e-05}, {"id": 1438, "seek": 413008, "start": 4135.5599999999995, "end": 4137.5199999999995, "text": " And there is essentially an automatic way", "tokens": [50364, 639, 307, 257, 636, 295, 17608, 7705, 50538, 50538, 281, 14722, 264, 16235, 13, 50638, 50638, 400, 456, 307, 4476, 364, 12509, 636, 50736, 50736, 295, 27210, 257, 14722, 4295, 295, 341, 2010, 50974, 50974, 666, 257, 14722, 4295, 295, 341, 2010, 300, 715, 1819, 51062, 51062, 264, 16235, 6772, 13, 51146, 51146, 400, 341, 307, 264, 5585, 300, 2314, 51266, 51266, 294, 264, 12509, 38902, 1854, 9953, 51, 284, 339, 293, 37624, 51488, 51488, 293, 661, 3652, 13, 51626, 51626, 2188, 3652, 366, 1238, 4069, 466, 341, 294, 257, 2020, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14321273000616777, "compression_ratio": 1.811926605504587, "no_speech_prob": 1.497005268902285e-05}, {"id": 1439, "seek": 413008, "start": 4137.5199999999995, "end": 4142.28, "text": " of transforming a compute graph of this type", "tokens": [50364, 639, 307, 257, 636, 295, 17608, 7705, 50538, 50538, 281, 14722, 264, 16235, 13, 50638, 50638, 400, 456, 307, 4476, 364, 12509, 636, 50736, 50736, 295, 27210, 257, 14722, 4295, 295, 341, 2010, 50974, 50974, 666, 257, 14722, 4295, 295, 341, 2010, 300, 715, 1819, 51062, 51062, 264, 16235, 6772, 13, 51146, 51146, 400, 341, 307, 264, 5585, 300, 2314, 51266, 51266, 294, 264, 12509, 38902, 1854, 9953, 51, 284, 339, 293, 37624, 51488, 51488, 293, 661, 3652, 13, 51626, 51626, 2188, 3652, 366, 1238, 4069, 466, 341, 294, 257, 2020, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14321273000616777, "compression_ratio": 1.811926605504587, "no_speech_prob": 1.497005268902285e-05}, {"id": 1440, "seek": 413008, "start": 4142.28, "end": 4144.04, "text": " into a compute graph of this type that computes", "tokens": [50364, 639, 307, 257, 636, 295, 17608, 7705, 50538, 50538, 281, 14722, 264, 16235, 13, 50638, 50638, 400, 456, 307, 4476, 364, 12509, 636, 50736, 50736, 295, 27210, 257, 14722, 4295, 295, 341, 2010, 50974, 50974, 666, 257, 14722, 4295, 295, 341, 2010, 300, 715, 1819, 51062, 51062, 264, 16235, 6772, 13, 51146, 51146, 400, 341, 307, 264, 5585, 300, 2314, 51266, 51266, 294, 264, 12509, 38902, 1854, 9953, 51, 284, 339, 293, 37624, 51488, 51488, 293, 661, 3652, 13, 51626, 51626, 2188, 3652, 366, 1238, 4069, 466, 341, 294, 257, 2020, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14321273000616777, "compression_ratio": 1.811926605504587, "no_speech_prob": 1.497005268902285e-05}, {"id": 1441, "seek": 413008, "start": 4144.04, "end": 4145.72, "text": " the gradient automatically.", "tokens": [50364, 639, 307, 257, 636, 295, 17608, 7705, 50538, 50538, 281, 14722, 264, 16235, 13, 50638, 50638, 400, 456, 307, 4476, 364, 12509, 636, 50736, 50736, 295, 27210, 257, 14722, 4295, 295, 341, 2010, 50974, 50974, 666, 257, 14722, 4295, 295, 341, 2010, 300, 715, 1819, 51062, 51062, 264, 16235, 6772, 13, 51146, 51146, 400, 341, 307, 264, 5585, 300, 2314, 51266, 51266, 294, 264, 12509, 38902, 1854, 9953, 51, 284, 339, 293, 37624, 51488, 51488, 293, 661, 3652, 13, 51626, 51626, 2188, 3652, 366, 1238, 4069, 466, 341, 294, 257, 2020, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14321273000616777, "compression_ratio": 1.811926605504587, "no_speech_prob": 1.497005268902285e-05}, {"id": 1442, "seek": 413008, "start": 4145.72, "end": 4148.12, "text": " And this is the magic that happens", "tokens": [50364, 639, 307, 257, 636, 295, 17608, 7705, 50538, 50538, 281, 14722, 264, 16235, 13, 50638, 50638, 400, 456, 307, 4476, 364, 12509, 636, 50736, 50736, 295, 27210, 257, 14722, 4295, 295, 341, 2010, 50974, 50974, 666, 257, 14722, 4295, 295, 341, 2010, 300, 715, 1819, 51062, 51062, 264, 16235, 6772, 13, 51146, 51146, 400, 341, 307, 264, 5585, 300, 2314, 51266, 51266, 294, 264, 12509, 38902, 1854, 9953, 51, 284, 339, 293, 37624, 51488, 51488, 293, 661, 3652, 13, 51626, 51626, 2188, 3652, 366, 1238, 4069, 466, 341, 294, 257, 2020, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14321273000616777, "compression_ratio": 1.811926605504587, "no_speech_prob": 1.497005268902285e-05}, {"id": 1443, "seek": 413008, "start": 4148.12, "end": 4152.5599999999995, "text": " in the automatic differentiation inside PyTorch and TensorFlow", "tokens": [50364, 639, 307, 257, 636, 295, 17608, 7705, 50538, 50538, 281, 14722, 264, 16235, 13, 50638, 50638, 400, 456, 307, 4476, 364, 12509, 636, 50736, 50736, 295, 27210, 257, 14722, 4295, 295, 341, 2010, 50974, 50974, 666, 257, 14722, 4295, 295, 341, 2010, 300, 715, 1819, 51062, 51062, 264, 16235, 6772, 13, 51146, 51146, 400, 341, 307, 264, 5585, 300, 2314, 51266, 51266, 294, 264, 12509, 38902, 1854, 9953, 51, 284, 339, 293, 37624, 51488, 51488, 293, 661, 3652, 13, 51626, 51626, 2188, 3652, 366, 1238, 4069, 466, 341, 294, 257, 2020, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14321273000616777, "compression_ratio": 1.811926605504587, "no_speech_prob": 1.497005268902285e-05}, {"id": 1444, "seek": 413008, "start": 4152.5599999999995, "end": 4155.32, "text": " and other systems.", "tokens": [50364, 639, 307, 257, 636, 295, 17608, 7705, 50538, 50538, 281, 14722, 264, 16235, 13, 50638, 50638, 400, 456, 307, 4476, 364, 12509, 636, 50736, 50736, 295, 27210, 257, 14722, 4295, 295, 341, 2010, 50974, 50974, 666, 257, 14722, 4295, 295, 341, 2010, 300, 715, 1819, 51062, 51062, 264, 16235, 6772, 13, 51146, 51146, 400, 341, 307, 264, 5585, 300, 2314, 51266, 51266, 294, 264, 12509, 38902, 1854, 9953, 51, 284, 339, 293, 37624, 51488, 51488, 293, 661, 3652, 13, 51626, 51626, 2188, 3652, 366, 1238, 4069, 466, 341, 294, 257, 2020, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14321273000616777, "compression_ratio": 1.811926605504587, "no_speech_prob": 1.497005268902285e-05}, {"id": 1445, "seek": 413008, "start": 4155.32, "end": 4157.8, "text": " Some systems are pretty smart about this in a sense", "tokens": [50364, 639, 307, 257, 636, 295, 17608, 7705, 50538, 50538, 281, 14722, 264, 16235, 13, 50638, 50638, 400, 456, 307, 4476, 364, 12509, 636, 50736, 50736, 295, 27210, 257, 14722, 4295, 295, 341, 2010, 50974, 50974, 666, 257, 14722, 4295, 295, 341, 2010, 300, 715, 1819, 51062, 51062, 264, 16235, 6772, 13, 51146, 51146, 400, 341, 307, 264, 5585, 300, 2314, 51266, 51266, 294, 264, 12509, 38902, 1854, 9953, 51, 284, 339, 293, 37624, 51488, 51488, 293, 661, 3652, 13, 51626, 51626, 2188, 3652, 366, 1238, 4069, 466, 341, 294, 257, 2020, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14321273000616777, "compression_ratio": 1.811926605504587, "no_speech_prob": 1.497005268902285e-05}, {"id": 1446, "seek": 415780, "start": 4157.8, "end": 4160.68, "text": " that those functions can be fairly complicated.", "tokens": [50364, 300, 729, 6828, 393, 312, 6457, 6179, 13, 50508, 50508, 814, 393, 9494, 2969, 15866, 33733, 293, 1507, 13, 50726, 50726, 400, 436, 393, 9494, 8546, 24903, 11, 50884, 50884, 689, 264, 4295, 295, 24903, 5946, 322, 264, 1412, 13, 51038, 51038, 400, 767, 11, 9953, 51, 284, 339, 3255, 341, 6108, 13, 51160, 51160, 286, 478, 406, 516, 281, 352, 807, 439, 264, 4365, 295, 341, 11, 51272, 51272, 457, 341, 307, 733, 295, 257, 636, 295, 27639, 291, 51386, 51386, 437, 264, 12819, 295, 439, 729, 721, 366, 13, 51522, 51522, 407, 498, 288, 307, 257, 7738, 8062, 2744, 297, 11, 51700, 51700, 261, 307, 257, 7738, 8062, 2744, 297, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14487561608991054, "compression_ratio": 1.7241379310344827, "no_speech_prob": 1.0129349902854301e-05}, {"id": 1447, "seek": 415780, "start": 4160.68, "end": 4165.04, "text": " They can involve themselves computing derivatives and stuff.", "tokens": [50364, 300, 729, 6828, 393, 312, 6457, 6179, 13, 50508, 50508, 814, 393, 9494, 2969, 15866, 33733, 293, 1507, 13, 50726, 50726, 400, 436, 393, 9494, 8546, 24903, 11, 50884, 50884, 689, 264, 4295, 295, 24903, 5946, 322, 264, 1412, 13, 51038, 51038, 400, 767, 11, 9953, 51, 284, 339, 3255, 341, 6108, 13, 51160, 51160, 286, 478, 406, 516, 281, 352, 807, 439, 264, 4365, 295, 341, 11, 51272, 51272, 457, 341, 307, 733, 295, 257, 636, 295, 27639, 291, 51386, 51386, 437, 264, 12819, 295, 439, 729, 721, 366, 13, 51522, 51522, 407, 498, 288, 307, 257, 7738, 8062, 2744, 297, 11, 51700, 51700, 261, 307, 257, 7738, 8062, 2744, 297, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14487561608991054, "compression_ratio": 1.7241379310344827, "no_speech_prob": 1.0129349902854301e-05}, {"id": 1448, "seek": 415780, "start": 4165.04, "end": 4168.2, "text": " And they can involve dynamic computation,", "tokens": [50364, 300, 729, 6828, 393, 312, 6457, 6179, 13, 50508, 50508, 814, 393, 9494, 2969, 15866, 33733, 293, 1507, 13, 50726, 50726, 400, 436, 393, 9494, 8546, 24903, 11, 50884, 50884, 689, 264, 4295, 295, 24903, 5946, 322, 264, 1412, 13, 51038, 51038, 400, 767, 11, 9953, 51, 284, 339, 3255, 341, 6108, 13, 51160, 51160, 286, 478, 406, 516, 281, 352, 807, 439, 264, 4365, 295, 341, 11, 51272, 51272, 457, 341, 307, 733, 295, 257, 636, 295, 27639, 291, 51386, 51386, 437, 264, 12819, 295, 439, 729, 721, 366, 13, 51522, 51522, 407, 498, 288, 307, 257, 7738, 8062, 2744, 297, 11, 51700, 51700, 261, 307, 257, 7738, 8062, 2744, 297, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14487561608991054, "compression_ratio": 1.7241379310344827, "no_speech_prob": 1.0129349902854301e-05}, {"id": 1449, "seek": 415780, "start": 4168.2, "end": 4171.28, "text": " where the graph of computation depends on the data.", "tokens": [50364, 300, 729, 6828, 393, 312, 6457, 6179, 13, 50508, 50508, 814, 393, 9494, 2969, 15866, 33733, 293, 1507, 13, 50726, 50726, 400, 436, 393, 9494, 8546, 24903, 11, 50884, 50884, 689, 264, 4295, 295, 24903, 5946, 322, 264, 1412, 13, 51038, 51038, 400, 767, 11, 9953, 51, 284, 339, 3255, 341, 6108, 13, 51160, 51160, 286, 478, 406, 516, 281, 352, 807, 439, 264, 4365, 295, 341, 11, 51272, 51272, 457, 341, 307, 733, 295, 257, 636, 295, 27639, 291, 51386, 51386, 437, 264, 12819, 295, 439, 729, 721, 366, 13, 51522, 51522, 407, 498, 288, 307, 257, 7738, 8062, 2744, 297, 11, 51700, 51700, 261, 307, 257, 7738, 8062, 2744, 297, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14487561608991054, "compression_ratio": 1.7241379310344827, "no_speech_prob": 1.0129349902854301e-05}, {"id": 1450, "seek": 415780, "start": 4171.28, "end": 4173.72, "text": " And actually, PyTorch knows this properly.", "tokens": [50364, 300, 729, 6828, 393, 312, 6457, 6179, 13, 50508, 50508, 814, 393, 9494, 2969, 15866, 33733, 293, 1507, 13, 50726, 50726, 400, 436, 393, 9494, 8546, 24903, 11, 50884, 50884, 689, 264, 4295, 295, 24903, 5946, 322, 264, 1412, 13, 51038, 51038, 400, 767, 11, 9953, 51, 284, 339, 3255, 341, 6108, 13, 51160, 51160, 286, 478, 406, 516, 281, 352, 807, 439, 264, 4365, 295, 341, 11, 51272, 51272, 457, 341, 307, 733, 295, 257, 636, 295, 27639, 291, 51386, 51386, 437, 264, 12819, 295, 439, 729, 721, 366, 13, 51522, 51522, 407, 498, 288, 307, 257, 7738, 8062, 2744, 297, 11, 51700, 51700, 261, 307, 257, 7738, 8062, 2744, 297, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14487561608991054, "compression_ratio": 1.7241379310344827, "no_speech_prob": 1.0129349902854301e-05}, {"id": 1451, "seek": 415780, "start": 4173.72, "end": 4175.96, "text": " I'm not going to go through all the details of this,", "tokens": [50364, 300, 729, 6828, 393, 312, 6457, 6179, 13, 50508, 50508, 814, 393, 9494, 2969, 15866, 33733, 293, 1507, 13, 50726, 50726, 400, 436, 393, 9494, 8546, 24903, 11, 50884, 50884, 689, 264, 4295, 295, 24903, 5946, 322, 264, 1412, 13, 51038, 51038, 400, 767, 11, 9953, 51, 284, 339, 3255, 341, 6108, 13, 51160, 51160, 286, 478, 406, 516, 281, 352, 807, 439, 264, 4365, 295, 341, 11, 51272, 51272, 457, 341, 307, 733, 295, 257, 636, 295, 27639, 291, 51386, 51386, 437, 264, 12819, 295, 439, 729, 721, 366, 13, 51522, 51522, 407, 498, 288, 307, 257, 7738, 8062, 2744, 297, 11, 51700, 51700, 261, 307, 257, 7738, 8062, 2744, 297, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14487561608991054, "compression_ratio": 1.7241379310344827, "no_speech_prob": 1.0129349902854301e-05}, {"id": 1452, "seek": 415780, "start": 4175.96, "end": 4178.24, "text": " but this is kind of a way of reminding you", "tokens": [50364, 300, 729, 6828, 393, 312, 6457, 6179, 13, 50508, 50508, 814, 393, 9494, 2969, 15866, 33733, 293, 1507, 13, 50726, 50726, 400, 436, 393, 9494, 8546, 24903, 11, 50884, 50884, 689, 264, 4295, 295, 24903, 5946, 322, 264, 1412, 13, 51038, 51038, 400, 767, 11, 9953, 51, 284, 339, 3255, 341, 6108, 13, 51160, 51160, 286, 478, 406, 516, 281, 352, 807, 439, 264, 4365, 295, 341, 11, 51272, 51272, 457, 341, 307, 733, 295, 257, 636, 295, 27639, 291, 51386, 51386, 437, 264, 12819, 295, 439, 729, 721, 366, 13, 51522, 51522, 407, 498, 288, 307, 257, 7738, 8062, 2744, 297, 11, 51700, 51700, 261, 307, 257, 7738, 8062, 2744, 297, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14487561608991054, "compression_ratio": 1.7241379310344827, "no_speech_prob": 1.0129349902854301e-05}, {"id": 1453, "seek": 415780, "start": 4178.24, "end": 4180.96, "text": " what the dimensions of all those things are.", "tokens": [50364, 300, 729, 6828, 393, 312, 6457, 6179, 13, 50508, 50508, 814, 393, 9494, 2969, 15866, 33733, 293, 1507, 13, 50726, 50726, 400, 436, 393, 9494, 8546, 24903, 11, 50884, 50884, 689, 264, 4295, 295, 24903, 5946, 322, 264, 1412, 13, 51038, 51038, 400, 767, 11, 9953, 51, 284, 339, 3255, 341, 6108, 13, 51160, 51160, 286, 478, 406, 516, 281, 352, 807, 439, 264, 4365, 295, 341, 11, 51272, 51272, 457, 341, 307, 733, 295, 257, 636, 295, 27639, 291, 51386, 51386, 437, 264, 12819, 295, 439, 729, 721, 366, 13, 51522, 51522, 407, 498, 288, 307, 257, 7738, 8062, 2744, 297, 11, 51700, 51700, 261, 307, 257, 7738, 8062, 2744, 297, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14487561608991054, "compression_ratio": 1.7241379310344827, "no_speech_prob": 1.0129349902854301e-05}, {"id": 1454, "seek": 415780, "start": 4180.96, "end": 4184.52, "text": " So if y is a column vector size n,", "tokens": [50364, 300, 729, 6828, 393, 312, 6457, 6179, 13, 50508, 50508, 814, 393, 9494, 2969, 15866, 33733, 293, 1507, 13, 50726, 50726, 400, 436, 393, 9494, 8546, 24903, 11, 50884, 50884, 689, 264, 4295, 295, 24903, 5946, 322, 264, 1412, 13, 51038, 51038, 400, 767, 11, 9953, 51, 284, 339, 3255, 341, 6108, 13, 51160, 51160, 286, 478, 406, 516, 281, 352, 807, 439, 264, 4365, 295, 341, 11, 51272, 51272, 457, 341, 307, 733, 295, 257, 636, 295, 27639, 291, 51386, 51386, 437, 264, 12819, 295, 439, 729, 721, 366, 13, 51522, 51522, 407, 498, 288, 307, 257, 7738, 8062, 2744, 297, 11, 51700, 51700, 261, 307, 257, 7738, 8062, 2744, 297, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14487561608991054, "compression_ratio": 1.7241379310344827, "no_speech_prob": 1.0129349902854301e-05}, {"id": 1455, "seek": 415780, "start": 4184.52, "end": 4187.64, "text": " w is a column vector size n.", "tokens": [50364, 300, 729, 6828, 393, 312, 6457, 6179, 13, 50508, 50508, 814, 393, 9494, 2969, 15866, 33733, 293, 1507, 13, 50726, 50726, 400, 436, 393, 9494, 8546, 24903, 11, 50884, 50884, 689, 264, 4295, 295, 24903, 5946, 322, 264, 1412, 13, 51038, 51038, 400, 767, 11, 9953, 51, 284, 339, 3255, 341, 6108, 13, 51160, 51160, 286, 478, 406, 516, 281, 352, 807, 439, 264, 4365, 295, 341, 11, 51272, 51272, 457, 341, 307, 733, 295, 257, 636, 295, 27639, 291, 51386, 51386, 437, 264, 12819, 295, 439, 729, 721, 366, 13, 51522, 51522, 407, 498, 288, 307, 257, 7738, 8062, 2744, 297, 11, 51700, 51700, 261, 307, 257, 7738, 8062, 2744, 297, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14487561608991054, "compression_ratio": 1.7241379310344827, "no_speech_prob": 1.0129349902854301e-05}, {"id": 1456, "seek": 418764, "start": 4187.64, "end": 4189.68, "text": " Then this is a row vector size n.", "tokens": [50364, 1396, 341, 307, 257, 5386, 8062, 2744, 297, 13, 50466, 50466, 639, 307, 257, 5386, 8062, 2744, 275, 13, 50554, 50554, 400, 341, 307, 257, 1519, 905, 1204, 409, 299, 8141, 295, 2744, 297, 538, 297, 13, 50780, 50780, 400, 439, 295, 341, 1985, 484, 13, 50866, 51072, 2264, 11, 370, 264, 636, 321, 434, 516, 281, 1322, 18161, 36170, 11, 51216, 51216, 293, 286, 603, 808, 646, 281, 341, 294, 257, 19962, 7991, 11, 51378, 51378, 307, 300, 321, 366, 516, 281, 362, 412, 527, 26400, 51610, 51610, 257, 2416, 5765, 295, 3875, 16679, 11, 597, 321, 434, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.20316399879825925, "compression_ratio": 1.608695652173913, "no_speech_prob": 2.144379322999157e-05}, {"id": 1457, "seek": 418764, "start": 4189.68, "end": 4191.4400000000005, "text": " This is a row vector size m.", "tokens": [50364, 1396, 341, 307, 257, 5386, 8062, 2744, 297, 13, 50466, 50466, 639, 307, 257, 5386, 8062, 2744, 275, 13, 50554, 50554, 400, 341, 307, 257, 1519, 905, 1204, 409, 299, 8141, 295, 2744, 297, 538, 297, 13, 50780, 50780, 400, 439, 295, 341, 1985, 484, 13, 50866, 51072, 2264, 11, 370, 264, 636, 321, 434, 516, 281, 1322, 18161, 36170, 11, 51216, 51216, 293, 286, 603, 808, 646, 281, 341, 294, 257, 19962, 7991, 11, 51378, 51378, 307, 300, 321, 366, 516, 281, 362, 412, 527, 26400, 51610, 51610, 257, 2416, 5765, 295, 3875, 16679, 11, 597, 321, 434, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.20316399879825925, "compression_ratio": 1.608695652173913, "no_speech_prob": 2.144379322999157e-05}, {"id": 1458, "seek": 418764, "start": 4191.4400000000005, "end": 4195.96, "text": " And this is a geocommunic matrix of size n by n.", "tokens": [50364, 1396, 341, 307, 257, 5386, 8062, 2744, 297, 13, 50466, 50466, 639, 307, 257, 5386, 8062, 2744, 275, 13, 50554, 50554, 400, 341, 307, 257, 1519, 905, 1204, 409, 299, 8141, 295, 2744, 297, 538, 297, 13, 50780, 50780, 400, 439, 295, 341, 1985, 484, 13, 50866, 51072, 2264, 11, 370, 264, 636, 321, 434, 516, 281, 1322, 18161, 36170, 11, 51216, 51216, 293, 286, 603, 808, 646, 281, 341, 294, 257, 19962, 7991, 11, 51378, 51378, 307, 300, 321, 366, 516, 281, 362, 412, 527, 26400, 51610, 51610, 257, 2416, 5765, 295, 3875, 16679, 11, 597, 321, 434, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.20316399879825925, "compression_ratio": 1.608695652173913, "no_speech_prob": 2.144379322999157e-05}, {"id": 1459, "seek": 418764, "start": 4195.96, "end": 4197.68, "text": " And all of this works out.", "tokens": [50364, 1396, 341, 307, 257, 5386, 8062, 2744, 297, 13, 50466, 50466, 639, 307, 257, 5386, 8062, 2744, 275, 13, 50554, 50554, 400, 341, 307, 257, 1519, 905, 1204, 409, 299, 8141, 295, 2744, 297, 538, 297, 13, 50780, 50780, 400, 439, 295, 341, 1985, 484, 13, 50866, 51072, 2264, 11, 370, 264, 636, 321, 434, 516, 281, 1322, 18161, 36170, 11, 51216, 51216, 293, 286, 603, 808, 646, 281, 341, 294, 257, 19962, 7991, 11, 51378, 51378, 307, 300, 321, 366, 516, 281, 362, 412, 527, 26400, 51610, 51610, 257, 2416, 5765, 295, 3875, 16679, 11, 597, 321, 434, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.20316399879825925, "compression_ratio": 1.608695652173913, "no_speech_prob": 2.144379322999157e-05}, {"id": 1460, "seek": 418764, "start": 4201.8, "end": 4204.68, "text": " OK, so the way we're going to build neural nets,", "tokens": [50364, 1396, 341, 307, 257, 5386, 8062, 2744, 297, 13, 50466, 50466, 639, 307, 257, 5386, 8062, 2744, 275, 13, 50554, 50554, 400, 341, 307, 257, 1519, 905, 1204, 409, 299, 8141, 295, 2744, 297, 538, 297, 13, 50780, 50780, 400, 439, 295, 341, 1985, 484, 13, 50866, 51072, 2264, 11, 370, 264, 636, 321, 434, 516, 281, 1322, 18161, 36170, 11, 51216, 51216, 293, 286, 603, 808, 646, 281, 341, 294, 257, 19962, 7991, 11, 51378, 51378, 307, 300, 321, 366, 516, 281, 362, 412, 527, 26400, 51610, 51610, 257, 2416, 5765, 295, 3875, 16679, 11, 597, 321, 434, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.20316399879825925, "compression_ratio": 1.608695652173913, "no_speech_prob": 2.144379322999157e-05}, {"id": 1461, "seek": 418764, "start": 4204.68, "end": 4207.92, "text": " and I'll come back to this in a subsequent lecture,", "tokens": [50364, 1396, 341, 307, 257, 5386, 8062, 2744, 297, 13, 50466, 50466, 639, 307, 257, 5386, 8062, 2744, 275, 13, 50554, 50554, 400, 341, 307, 257, 1519, 905, 1204, 409, 299, 8141, 295, 2744, 297, 538, 297, 13, 50780, 50780, 400, 439, 295, 341, 1985, 484, 13, 50866, 51072, 2264, 11, 370, 264, 636, 321, 434, 516, 281, 1322, 18161, 36170, 11, 51216, 51216, 293, 286, 603, 808, 646, 281, 341, 294, 257, 19962, 7991, 11, 51378, 51378, 307, 300, 321, 366, 516, 281, 362, 412, 527, 26400, 51610, 51610, 257, 2416, 5765, 295, 3875, 16679, 11, 597, 321, 434, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.20316399879825925, "compression_ratio": 1.608695652173913, "no_speech_prob": 2.144379322999157e-05}, {"id": 1462, "seek": 418764, "start": 4207.92, "end": 4212.56, "text": " is that we are going to have at our disposal", "tokens": [50364, 1396, 341, 307, 257, 5386, 8062, 2744, 297, 13, 50466, 50466, 639, 307, 257, 5386, 8062, 2744, 275, 13, 50554, 50554, 400, 341, 307, 257, 1519, 905, 1204, 409, 299, 8141, 295, 2744, 297, 538, 297, 13, 50780, 50780, 400, 439, 295, 341, 1985, 484, 13, 50866, 51072, 2264, 11, 370, 264, 636, 321, 434, 516, 281, 1322, 18161, 36170, 11, 51216, 51216, 293, 286, 603, 808, 646, 281, 341, 294, 257, 19962, 7991, 11, 51378, 51378, 307, 300, 321, 366, 516, 281, 362, 412, 527, 26400, 51610, 51610, 257, 2416, 5765, 295, 3875, 16679, 11, 597, 321, 434, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.20316399879825925, "compression_ratio": 1.608695652173913, "no_speech_prob": 2.144379322999157e-05}, {"id": 1463, "seek": 418764, "start": 4212.56, "end": 4215.76, "text": " a large collection of basic modules, which we're", "tokens": [50364, 1396, 341, 307, 257, 5386, 8062, 2744, 297, 13, 50466, 50466, 639, 307, 257, 5386, 8062, 2744, 275, 13, 50554, 50554, 400, 341, 307, 257, 1519, 905, 1204, 409, 299, 8141, 295, 2744, 297, 538, 297, 13, 50780, 50780, 400, 439, 295, 341, 1985, 484, 13, 50866, 51072, 2264, 11, 370, 264, 636, 321, 434, 516, 281, 1322, 18161, 36170, 11, 51216, 51216, 293, 286, 603, 808, 646, 281, 341, 294, 257, 19962, 7991, 11, 51378, 51378, 307, 300, 321, 366, 516, 281, 362, 412, 527, 26400, 51610, 51610, 257, 2416, 5765, 295, 3875, 16679, 11, 597, 321, 434, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.20316399879825925, "compression_ratio": 1.608695652173913, "no_speech_prob": 2.144379322999157e-05}, {"id": 1464, "seek": 421576, "start": 4215.76, "end": 4222.4400000000005, "text": " going to be able to arrange in more or less complex graphs", "tokens": [50364, 516, 281, 312, 1075, 281, 9424, 294, 544, 420, 1570, 3997, 24877, 50698, 50698, 382, 257, 636, 281, 1322, 264, 9482, 295, 257, 2539, 50952, 50952, 1185, 13, 51042, 51042, 407, 2139, 321, 434, 516, 281, 2464, 257, 1508, 11, 51118, 51118, 420, 321, 434, 516, 281, 2464, 257, 1461, 300, 6676, 264, 2128, 51276, 51276, 1320, 13, 51326, 51326, 400, 341, 1461, 307, 516, 281, 312, 18204, 51480, 51480, 295, 3875, 18894, 7705, 11, 4500, 11, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13006226810408228, "compression_ratio": 1.6324324324324324, "no_speech_prob": 4.356468252808554e-06}, {"id": 1465, "seek": 421576, "start": 4222.4400000000005, "end": 4227.52, "text": " as a way to build the architecture of a learning", "tokens": [50364, 516, 281, 312, 1075, 281, 9424, 294, 544, 420, 1570, 3997, 24877, 50698, 50698, 382, 257, 636, 281, 1322, 264, 9482, 295, 257, 2539, 50952, 50952, 1185, 13, 51042, 51042, 407, 2139, 321, 434, 516, 281, 2464, 257, 1508, 11, 51118, 51118, 420, 321, 434, 516, 281, 2464, 257, 1461, 300, 6676, 264, 2128, 51276, 51276, 1320, 13, 51326, 51326, 400, 341, 1461, 307, 516, 281, 312, 18204, 51480, 51480, 295, 3875, 18894, 7705, 11, 4500, 11, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13006226810408228, "compression_ratio": 1.6324324324324324, "no_speech_prob": 4.356468252808554e-06}, {"id": 1466, "seek": 421576, "start": 4227.52, "end": 4229.320000000001, "text": " system.", "tokens": [50364, 516, 281, 312, 1075, 281, 9424, 294, 544, 420, 1570, 3997, 24877, 50698, 50698, 382, 257, 636, 281, 1322, 264, 9482, 295, 257, 2539, 50952, 50952, 1185, 13, 51042, 51042, 407, 2139, 321, 434, 516, 281, 2464, 257, 1508, 11, 51118, 51118, 420, 321, 434, 516, 281, 2464, 257, 1461, 300, 6676, 264, 2128, 51276, 51276, 1320, 13, 51326, 51326, 400, 341, 1461, 307, 516, 281, 312, 18204, 51480, 51480, 295, 3875, 18894, 7705, 11, 4500, 11, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13006226810408228, "compression_ratio": 1.6324324324324324, "no_speech_prob": 4.356468252808554e-06}, {"id": 1467, "seek": 421576, "start": 4229.320000000001, "end": 4230.84, "text": " So either we're going to write a class,", "tokens": [50364, 516, 281, 312, 1075, 281, 9424, 294, 544, 420, 1570, 3997, 24877, 50698, 50698, 382, 257, 636, 281, 1322, 264, 9482, 295, 257, 2539, 50952, 50952, 1185, 13, 51042, 51042, 407, 2139, 321, 434, 516, 281, 2464, 257, 1508, 11, 51118, 51118, 420, 321, 434, 516, 281, 2464, 257, 1461, 300, 6676, 264, 2128, 51276, 51276, 1320, 13, 51326, 51326, 400, 341, 1461, 307, 516, 281, 312, 18204, 51480, 51480, 295, 3875, 18894, 7705, 11, 4500, 11, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13006226810408228, "compression_ratio": 1.6324324324324324, "no_speech_prob": 4.356468252808554e-06}, {"id": 1468, "seek": 421576, "start": 4230.84, "end": 4234.0, "text": " or we're going to write a program that runs the forward", "tokens": [50364, 516, 281, 312, 1075, 281, 9424, 294, 544, 420, 1570, 3997, 24877, 50698, 50698, 382, 257, 636, 281, 1322, 264, 9482, 295, 257, 2539, 50952, 50952, 1185, 13, 51042, 51042, 407, 2139, 321, 434, 516, 281, 2464, 257, 1508, 11, 51118, 51118, 420, 321, 434, 516, 281, 2464, 257, 1461, 300, 6676, 264, 2128, 51276, 51276, 1320, 13, 51326, 51326, 400, 341, 1461, 307, 516, 281, 312, 18204, 51480, 51480, 295, 3875, 18894, 7705, 11, 4500, 11, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13006226810408228, "compression_ratio": 1.6324324324324324, "no_speech_prob": 4.356468252808554e-06}, {"id": 1469, "seek": 421576, "start": 4234.0, "end": 4235.0, "text": " pass.", "tokens": [50364, 516, 281, 312, 1075, 281, 9424, 294, 544, 420, 1570, 3997, 24877, 50698, 50698, 382, 257, 636, 281, 1322, 264, 9482, 295, 257, 2539, 50952, 50952, 1185, 13, 51042, 51042, 407, 2139, 321, 434, 516, 281, 2464, 257, 1508, 11, 51118, 51118, 420, 321, 434, 516, 281, 2464, 257, 1461, 300, 6676, 264, 2128, 51276, 51276, 1320, 13, 51326, 51326, 400, 341, 1461, 307, 516, 281, 312, 18204, 51480, 51480, 295, 3875, 18894, 7705, 11, 4500, 11, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13006226810408228, "compression_ratio": 1.6324324324324324, "no_speech_prob": 4.356468252808554e-06}, {"id": 1470, "seek": 421576, "start": 4235.0, "end": 4238.08, "text": " And this program is going to be composed", "tokens": [50364, 516, 281, 312, 1075, 281, 9424, 294, 544, 420, 1570, 3997, 24877, 50698, 50698, 382, 257, 636, 281, 1322, 264, 9482, 295, 257, 2539, 50952, 50952, 1185, 13, 51042, 51042, 407, 2139, 321, 434, 516, 281, 2464, 257, 1508, 11, 51118, 51118, 420, 321, 434, 516, 281, 2464, 257, 1461, 300, 6676, 264, 2128, 51276, 51276, 1320, 13, 51326, 51326, 400, 341, 1461, 307, 516, 281, 312, 18204, 51480, 51480, 295, 3875, 18894, 7705, 11, 4500, 11, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13006226810408228, "compression_ratio": 1.6324324324324324, "no_speech_prob": 4.356468252808554e-06}, {"id": 1471, "seek": 421576, "start": 4238.08, "end": 4240.88, "text": " of basic mathematical operations, addition,", "tokens": [50364, 516, 281, 312, 1075, 281, 9424, 294, 544, 420, 1570, 3997, 24877, 50698, 50698, 382, 257, 636, 281, 1322, 264, 9482, 295, 257, 2539, 50952, 50952, 1185, 13, 51042, 51042, 407, 2139, 321, 434, 516, 281, 2464, 257, 1508, 11, 51118, 51118, 420, 321, 434, 516, 281, 2464, 257, 1461, 300, 6676, 264, 2128, 51276, 51276, 1320, 13, 51326, 51326, 400, 341, 1461, 307, 516, 281, 312, 18204, 51480, 51480, 295, 3875, 18894, 7705, 11, 4500, 11, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13006226810408228, "compression_ratio": 1.6324324324324324, "no_speech_prob": 4.356468252808554e-06}, {"id": 1472, "seek": 424088, "start": 4240.88, "end": 4245.96, "text": " subtraction of tensors or multi-dimensional arrays,", "tokens": [50364, 16390, 313, 295, 10688, 830, 420, 4825, 12, 18759, 41011, 11, 50618, 50618, 661, 3467, 295, 39684, 7705, 11, 50716, 50716, 420, 264, 3861, 295, 472, 295, 264, 659, 37716, 3997, 50936, 50936, 13075, 1602, 6828, 11, 411, 257, 8213, 10088, 11, 257, 1300, 43, 52, 11, 51162, 51162, 420, 721, 411, 300, 13, 51214, 51338, 400, 321, 362, 412, 527, 26400, 257, 2416, 6405, 51586, 51586, 295, 1270, 16679, 11, 597, 366, 721, 300, 561, 362, 808, 493, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.12231294792818737, "compression_ratio": 1.5643564356435644, "no_speech_prob": 1.1299242942186538e-05}, {"id": 1473, "seek": 424088, "start": 4245.96, "end": 4247.92, "text": " other types of scalar operations,", "tokens": [50364, 16390, 313, 295, 10688, 830, 420, 4825, 12, 18759, 41011, 11, 50618, 50618, 661, 3467, 295, 39684, 7705, 11, 50716, 50716, 420, 264, 3861, 295, 472, 295, 264, 659, 37716, 3997, 50936, 50936, 13075, 1602, 6828, 11, 411, 257, 8213, 10088, 11, 257, 1300, 43, 52, 11, 51162, 51162, 420, 721, 411, 300, 13, 51214, 51338, 400, 321, 362, 412, 527, 26400, 257, 2416, 6405, 51586, 51586, 295, 1270, 16679, 11, 597, 366, 721, 300, 561, 362, 808, 493, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.12231294792818737, "compression_ratio": 1.5643564356435644, "no_speech_prob": 1.1299242942186538e-05}, {"id": 1474, "seek": 424088, "start": 4247.92, "end": 4252.32, "text": " or the application of one of the predefined complex", "tokens": [50364, 16390, 313, 295, 10688, 830, 420, 4825, 12, 18759, 41011, 11, 50618, 50618, 661, 3467, 295, 39684, 7705, 11, 50716, 50716, 420, 264, 3861, 295, 472, 295, 264, 659, 37716, 3997, 50936, 50936, 13075, 1602, 6828, 11, 411, 257, 8213, 10088, 11, 257, 1300, 43, 52, 11, 51162, 51162, 420, 721, 411, 300, 13, 51214, 51338, 400, 321, 362, 412, 527, 26400, 257, 2416, 6405, 51586, 51586, 295, 1270, 16679, 11, 597, 366, 721, 300, 561, 362, 808, 493, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.12231294792818737, "compression_ratio": 1.5643564356435644, "no_speech_prob": 1.1299242942186538e-05}, {"id": 1475, "seek": 424088, "start": 4252.32, "end": 4256.84, "text": " parameterized functions, like a linear module, a ReLU,", "tokens": [50364, 16390, 313, 295, 10688, 830, 420, 4825, 12, 18759, 41011, 11, 50618, 50618, 661, 3467, 295, 39684, 7705, 11, 50716, 50716, 420, 264, 3861, 295, 472, 295, 264, 659, 37716, 3997, 50936, 50936, 13075, 1602, 6828, 11, 411, 257, 8213, 10088, 11, 257, 1300, 43, 52, 11, 51162, 51162, 420, 721, 411, 300, 13, 51214, 51338, 400, 321, 362, 412, 527, 26400, 257, 2416, 6405, 51586, 51586, 295, 1270, 16679, 11, 597, 366, 721, 300, 561, 362, 808, 493, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.12231294792818737, "compression_ratio": 1.5643564356435644, "no_speech_prob": 1.1299242942186538e-05}, {"id": 1476, "seek": 424088, "start": 4256.84, "end": 4257.88, "text": " or things like that.", "tokens": [50364, 16390, 313, 295, 10688, 830, 420, 4825, 12, 18759, 41011, 11, 50618, 50618, 661, 3467, 295, 39684, 7705, 11, 50716, 50716, 420, 264, 3861, 295, 472, 295, 264, 659, 37716, 3997, 50936, 50936, 13075, 1602, 6828, 11, 411, 257, 8213, 10088, 11, 257, 1300, 43, 52, 11, 51162, 51162, 420, 721, 411, 300, 13, 51214, 51338, 400, 321, 362, 412, 527, 26400, 257, 2416, 6405, 51586, 51586, 295, 1270, 16679, 11, 597, 366, 721, 300, 561, 362, 808, 493, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.12231294792818737, "compression_ratio": 1.5643564356435644, "no_speech_prob": 1.1299242942186538e-05}, {"id": 1477, "seek": 424088, "start": 4260.36, "end": 4265.32, "text": " And we have at our disposal a large library", "tokens": [50364, 16390, 313, 295, 10688, 830, 420, 4825, 12, 18759, 41011, 11, 50618, 50618, 661, 3467, 295, 39684, 7705, 11, 50716, 50716, 420, 264, 3861, 295, 472, 295, 264, 659, 37716, 3997, 50936, 50936, 13075, 1602, 6828, 11, 411, 257, 8213, 10088, 11, 257, 1300, 43, 52, 11, 51162, 51162, 420, 721, 411, 300, 13, 51214, 51338, 400, 321, 362, 412, 527, 26400, 257, 2416, 6405, 51586, 51586, 295, 1270, 16679, 11, 597, 366, 721, 300, 561, 362, 808, 493, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.12231294792818737, "compression_ratio": 1.5643564356435644, "no_speech_prob": 1.1299242942186538e-05}, {"id": 1478, "seek": 424088, "start": 4265.32, "end": 4268.52, "text": " of such modules, which are things that people have come up", "tokens": [50364, 16390, 313, 295, 10688, 830, 420, 4825, 12, 18759, 41011, 11, 50618, 50618, 661, 3467, 295, 39684, 7705, 11, 50716, 50716, 420, 264, 3861, 295, 472, 295, 264, 659, 37716, 3997, 50936, 50936, 13075, 1602, 6828, 11, 411, 257, 8213, 10088, 11, 257, 1300, 43, 52, 11, 51162, 51162, 420, 721, 411, 300, 13, 51214, 51338, 400, 321, 362, 412, 527, 26400, 257, 2416, 6405, 51586, 51586, 295, 1270, 16679, 11, 597, 366, 721, 300, 561, 362, 808, 493, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.12231294792818737, "compression_ratio": 1.5643564356435644, "no_speech_prob": 1.1299242942186538e-05}, {"id": 1479, "seek": 426852, "start": 4268.52, "end": 4272.200000000001, "text": " with over the years that are basic modules that are", "tokens": [50364, 365, 670, 264, 924, 300, 366, 3875, 16679, 300, 366, 50548, 50548, 1143, 294, 257, 688, 295, 5821, 13, 50722, 50722, 407, 264, 3875, 721, 300, 321, 600, 1612, 370, 1400, 11, 50822, 50822, 286, 519, 11, 411, 1300, 43, 29211, 11, 456, 311, 661, 2107, 28263, 6828, 11, 50950, 50950, 411, 4556, 3280, 3742, 293, 17840, 295, 341, 13, 51072, 51072, 821, 311, 257, 2416, 5765, 295, 552, 13, 51194, 51194, 400, 550, 321, 362, 2063, 6828, 11, 411, 8889, 6713, 11, 51296, 51296, 3278, 30867, 11, 28822, 4470, 11, 17833, 4470, 11, 293, 12288, 11, 12288, 11, 51408, 51408, 12288, 11, 597, 286, 478, 406, 516, 281, 352, 807, 586, 11, 51496, 51496, 457, 321, 603, 751, 466, 341, 1780, 13, 51562, 51722], "temperature": 0.0, "avg_logprob": -0.17439439728504091, "compression_ratio": 1.6946564885496183, "no_speech_prob": 8.39710992295295e-06}, {"id": 1480, "seek": 426852, "start": 4272.200000000001, "end": 4275.68, "text": " used in a lot of applications.", "tokens": [50364, 365, 670, 264, 924, 300, 366, 3875, 16679, 300, 366, 50548, 50548, 1143, 294, 257, 688, 295, 5821, 13, 50722, 50722, 407, 264, 3875, 721, 300, 321, 600, 1612, 370, 1400, 11, 50822, 50822, 286, 519, 11, 411, 1300, 43, 29211, 11, 456, 311, 661, 2107, 28263, 6828, 11, 50950, 50950, 411, 4556, 3280, 3742, 293, 17840, 295, 341, 13, 51072, 51072, 821, 311, 257, 2416, 5765, 295, 552, 13, 51194, 51194, 400, 550, 321, 362, 2063, 6828, 11, 411, 8889, 6713, 11, 51296, 51296, 3278, 30867, 11, 28822, 4470, 11, 17833, 4470, 11, 293, 12288, 11, 12288, 11, 51408, 51408, 12288, 11, 597, 286, 478, 406, 516, 281, 352, 807, 586, 11, 51496, 51496, 457, 321, 603, 751, 466, 341, 1780, 13, 51562, 51722], "temperature": 0.0, "avg_logprob": -0.17439439728504091, "compression_ratio": 1.6946564885496183, "no_speech_prob": 8.39710992295295e-06}, {"id": 1481, "seek": 426852, "start": 4275.68, "end": 4277.68, "text": " So the basic things that we've seen so far,", "tokens": [50364, 365, 670, 264, 924, 300, 366, 3875, 16679, 300, 366, 50548, 50548, 1143, 294, 257, 688, 295, 5821, 13, 50722, 50722, 407, 264, 3875, 721, 300, 321, 600, 1612, 370, 1400, 11, 50822, 50822, 286, 519, 11, 411, 1300, 43, 29211, 11, 456, 311, 661, 2107, 28263, 6828, 11, 50950, 50950, 411, 4556, 3280, 3742, 293, 17840, 295, 341, 13, 51072, 51072, 821, 311, 257, 2416, 5765, 295, 552, 13, 51194, 51194, 400, 550, 321, 362, 2063, 6828, 11, 411, 8889, 6713, 11, 51296, 51296, 3278, 30867, 11, 28822, 4470, 11, 17833, 4470, 11, 293, 12288, 11, 12288, 11, 51408, 51408, 12288, 11, 597, 286, 478, 406, 516, 281, 352, 807, 586, 11, 51496, 51496, 457, 321, 603, 751, 466, 341, 1780, 13, 51562, 51722], "temperature": 0.0, "avg_logprob": -0.17439439728504091, "compression_ratio": 1.6946564885496183, "no_speech_prob": 8.39710992295295e-06}, {"id": 1482, "seek": 426852, "start": 4277.68, "end": 4280.240000000001, "text": " I think, like ReLUs, there's other nonlinear functions,", "tokens": [50364, 365, 670, 264, 924, 300, 366, 3875, 16679, 300, 366, 50548, 50548, 1143, 294, 257, 688, 295, 5821, 13, 50722, 50722, 407, 264, 3875, 721, 300, 321, 600, 1612, 370, 1400, 11, 50822, 50822, 286, 519, 11, 411, 1300, 43, 29211, 11, 456, 311, 661, 2107, 28263, 6828, 11, 50950, 50950, 411, 4556, 3280, 3742, 293, 17840, 295, 341, 13, 51072, 51072, 821, 311, 257, 2416, 5765, 295, 552, 13, 51194, 51194, 400, 550, 321, 362, 2063, 6828, 11, 411, 8889, 6713, 11, 51296, 51296, 3278, 30867, 11, 28822, 4470, 11, 17833, 4470, 11, 293, 12288, 11, 12288, 11, 51408, 51408, 12288, 11, 597, 286, 478, 406, 516, 281, 352, 807, 586, 11, 51496, 51496, 457, 321, 603, 751, 466, 341, 1780, 13, 51562, 51722], "temperature": 0.0, "avg_logprob": -0.17439439728504091, "compression_ratio": 1.6946564885496183, "no_speech_prob": 8.39710992295295e-06}, {"id": 1483, "seek": 426852, "start": 4280.240000000001, "end": 4282.68, "text": " like sigmoids and variations of this.", "tokens": [50364, 365, 670, 264, 924, 300, 366, 3875, 16679, 300, 366, 50548, 50548, 1143, 294, 257, 688, 295, 5821, 13, 50722, 50722, 407, 264, 3875, 721, 300, 321, 600, 1612, 370, 1400, 11, 50822, 50822, 286, 519, 11, 411, 1300, 43, 29211, 11, 456, 311, 661, 2107, 28263, 6828, 11, 50950, 50950, 411, 4556, 3280, 3742, 293, 17840, 295, 341, 13, 51072, 51072, 821, 311, 257, 2416, 5765, 295, 552, 13, 51194, 51194, 400, 550, 321, 362, 2063, 6828, 11, 411, 8889, 6713, 11, 51296, 51296, 3278, 30867, 11, 28822, 4470, 11, 17833, 4470, 11, 293, 12288, 11, 12288, 11, 51408, 51408, 12288, 11, 597, 286, 478, 406, 516, 281, 352, 807, 586, 11, 51496, 51496, 457, 321, 603, 751, 466, 341, 1780, 13, 51562, 51722], "temperature": 0.0, "avg_logprob": -0.17439439728504091, "compression_ratio": 1.6946564885496183, "no_speech_prob": 8.39710992295295e-06}, {"id": 1484, "seek": 426852, "start": 4282.68, "end": 4285.120000000001, "text": " There's a large collection of them.", "tokens": [50364, 365, 670, 264, 924, 300, 366, 3875, 16679, 300, 366, 50548, 50548, 1143, 294, 257, 688, 295, 5821, 13, 50722, 50722, 407, 264, 3875, 721, 300, 321, 600, 1612, 370, 1400, 11, 50822, 50822, 286, 519, 11, 411, 1300, 43, 29211, 11, 456, 311, 661, 2107, 28263, 6828, 11, 50950, 50950, 411, 4556, 3280, 3742, 293, 17840, 295, 341, 13, 51072, 51072, 821, 311, 257, 2416, 5765, 295, 552, 13, 51194, 51194, 400, 550, 321, 362, 2063, 6828, 11, 411, 8889, 6713, 11, 51296, 51296, 3278, 30867, 11, 28822, 4470, 11, 17833, 4470, 11, 293, 12288, 11, 12288, 11, 51408, 51408, 12288, 11, 597, 286, 478, 406, 516, 281, 352, 807, 586, 11, 51496, 51496, 457, 321, 603, 751, 466, 341, 1780, 13, 51562, 51722], "temperature": 0.0, "avg_logprob": -0.17439439728504091, "compression_ratio": 1.6946564885496183, "no_speech_prob": 8.39710992295295e-06}, {"id": 1485, "seek": 426852, "start": 4285.120000000001, "end": 4287.160000000001, "text": " And then we have cost functions, like squared error,", "tokens": [50364, 365, 670, 264, 924, 300, 366, 3875, 16679, 300, 366, 50548, 50548, 1143, 294, 257, 688, 295, 5821, 13, 50722, 50722, 407, 264, 3875, 721, 300, 321, 600, 1612, 370, 1400, 11, 50822, 50822, 286, 519, 11, 411, 1300, 43, 29211, 11, 456, 311, 661, 2107, 28263, 6828, 11, 50950, 50950, 411, 4556, 3280, 3742, 293, 17840, 295, 341, 13, 51072, 51072, 821, 311, 257, 2416, 5765, 295, 552, 13, 51194, 51194, 400, 550, 321, 362, 2063, 6828, 11, 411, 8889, 6713, 11, 51296, 51296, 3278, 30867, 11, 28822, 4470, 11, 17833, 4470, 11, 293, 12288, 11, 12288, 11, 51408, 51408, 12288, 11, 597, 286, 478, 406, 516, 281, 352, 807, 586, 11, 51496, 51496, 457, 321, 603, 751, 466, 341, 1780, 13, 51562, 51722], "temperature": 0.0, "avg_logprob": -0.17439439728504091, "compression_ratio": 1.6946564885496183, "no_speech_prob": 8.39710992295295e-06}, {"id": 1486, "seek": 426852, "start": 4287.160000000001, "end": 4289.400000000001, "text": " cross entropy, hinge loss, ranking loss, and blah, blah,", "tokens": [50364, 365, 670, 264, 924, 300, 366, 3875, 16679, 300, 366, 50548, 50548, 1143, 294, 257, 688, 295, 5821, 13, 50722, 50722, 407, 264, 3875, 721, 300, 321, 600, 1612, 370, 1400, 11, 50822, 50822, 286, 519, 11, 411, 1300, 43, 29211, 11, 456, 311, 661, 2107, 28263, 6828, 11, 50950, 50950, 411, 4556, 3280, 3742, 293, 17840, 295, 341, 13, 51072, 51072, 821, 311, 257, 2416, 5765, 295, 552, 13, 51194, 51194, 400, 550, 321, 362, 2063, 6828, 11, 411, 8889, 6713, 11, 51296, 51296, 3278, 30867, 11, 28822, 4470, 11, 17833, 4470, 11, 293, 12288, 11, 12288, 11, 51408, 51408, 12288, 11, 597, 286, 478, 406, 516, 281, 352, 807, 586, 11, 51496, 51496, 457, 321, 603, 751, 466, 341, 1780, 13, 51562, 51722], "temperature": 0.0, "avg_logprob": -0.17439439728504091, "compression_ratio": 1.6946564885496183, "no_speech_prob": 8.39710992295295e-06}, {"id": 1487, "seek": 426852, "start": 4289.400000000001, "end": 4291.160000000001, "text": " blah, which I'm not going to go through now,", "tokens": [50364, 365, 670, 264, 924, 300, 366, 3875, 16679, 300, 366, 50548, 50548, 1143, 294, 257, 688, 295, 5821, 13, 50722, 50722, 407, 264, 3875, 721, 300, 321, 600, 1612, 370, 1400, 11, 50822, 50822, 286, 519, 11, 411, 1300, 43, 29211, 11, 456, 311, 661, 2107, 28263, 6828, 11, 50950, 50950, 411, 4556, 3280, 3742, 293, 17840, 295, 341, 13, 51072, 51072, 821, 311, 257, 2416, 5765, 295, 552, 13, 51194, 51194, 400, 550, 321, 362, 2063, 6828, 11, 411, 8889, 6713, 11, 51296, 51296, 3278, 30867, 11, 28822, 4470, 11, 17833, 4470, 11, 293, 12288, 11, 12288, 11, 51408, 51408, 12288, 11, 597, 286, 478, 406, 516, 281, 352, 807, 586, 11, 51496, 51496, 457, 321, 603, 751, 466, 341, 1780, 13, 51562, 51722], "temperature": 0.0, "avg_logprob": -0.17439439728504091, "compression_ratio": 1.6946564885496183, "no_speech_prob": 8.39710992295295e-06}, {"id": 1488, "seek": 426852, "start": 4291.160000000001, "end": 4292.4800000000005, "text": " but we'll talk about this later.", "tokens": [50364, 365, 670, 264, 924, 300, 366, 3875, 16679, 300, 366, 50548, 50548, 1143, 294, 257, 688, 295, 5821, 13, 50722, 50722, 407, 264, 3875, 721, 300, 321, 600, 1612, 370, 1400, 11, 50822, 50822, 286, 519, 11, 411, 1300, 43, 29211, 11, 456, 311, 661, 2107, 28263, 6828, 11, 50950, 50950, 411, 4556, 3280, 3742, 293, 17840, 295, 341, 13, 51072, 51072, 821, 311, 257, 2416, 5765, 295, 552, 13, 51194, 51194, 400, 550, 321, 362, 2063, 6828, 11, 411, 8889, 6713, 11, 51296, 51296, 3278, 30867, 11, 28822, 4470, 11, 17833, 4470, 11, 293, 12288, 11, 12288, 11, 51408, 51408, 12288, 11, 597, 286, 478, 406, 516, 281, 352, 807, 586, 11, 51496, 51496, 457, 321, 603, 751, 466, 341, 1780, 13, 51562, 51722], "temperature": 0.0, "avg_logprob": -0.17439439728504091, "compression_ratio": 1.6946564885496183, "no_speech_prob": 8.39710992295295e-06}, {"id": 1489, "seek": 429248, "start": 4292.48, "end": 4296.919999999999, "text": " The nice thing about this formalism is that, as I said", "tokens": [50364, 440, 1481, 551, 466, 341, 9860, 1434, 307, 300, 11, 382, 286, 848, 50586, 50586, 949, 11, 291, 393, 1333, 295, 14722, 24877, 13, 50832, 50832, 509, 393, 7690, 257, 2452, 2539, 1185, 51112, 51112, 538, 43867, 729, 16679, 294, 604, 733, 295, 17620, 51244, 51244, 291, 528, 11, 382, 938, 382, 456, 307, 572, 16121, 294, 264, 4984, 4295, 13, 51524, 51524, 407, 382, 938, 382, 291, 393, 808, 493, 365, 257, 14641, 1668, 51650, 51650, 294, 729, 16679, 11, 300, 311, 257, 665, 551, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.31695309314098985, "compression_ratio": 1.6303317535545023, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1490, "seek": 429248, "start": 4296.919999999999, "end": 4301.839999999999, "text": " before, you can sort of compute graphs.", "tokens": [50364, 440, 1481, 551, 466, 341, 9860, 1434, 307, 300, 11, 382, 286, 848, 50586, 50586, 949, 11, 291, 393, 1333, 295, 14722, 24877, 13, 50832, 50832, 509, 393, 7690, 257, 2452, 2539, 1185, 51112, 51112, 538, 43867, 729, 16679, 294, 604, 733, 295, 17620, 51244, 51244, 291, 528, 11, 382, 938, 382, 456, 307, 572, 16121, 294, 264, 4984, 4295, 13, 51524, 51524, 407, 382, 938, 382, 291, 393, 808, 493, 365, 257, 14641, 1668, 51650, 51650, 294, 729, 16679, 11, 300, 311, 257, 665, 551, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.31695309314098985, "compression_ratio": 1.6303317535545023, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1491, "seek": 429248, "start": 4301.839999999999, "end": 4307.44, "text": " You can construct a deep learning system", "tokens": [50364, 440, 1481, 551, 466, 341, 9860, 1434, 307, 300, 11, 382, 286, 848, 50586, 50586, 949, 11, 291, 393, 1333, 295, 14722, 24877, 13, 50832, 50832, 509, 393, 7690, 257, 2452, 2539, 1185, 51112, 51112, 538, 43867, 729, 16679, 294, 604, 733, 295, 17620, 51244, 51244, 291, 528, 11, 382, 938, 382, 456, 307, 572, 16121, 294, 264, 4984, 4295, 13, 51524, 51524, 407, 382, 938, 382, 291, 393, 808, 493, 365, 257, 14641, 1668, 51650, 51650, 294, 729, 16679, 11, 300, 311, 257, 665, 551, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.31695309314098985, "compression_ratio": 1.6303317535545023, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1492, "seek": 429248, "start": 4307.44, "end": 4310.08, "text": " by assembling those modules in any kind of arrangement", "tokens": [50364, 440, 1481, 551, 466, 341, 9860, 1434, 307, 300, 11, 382, 286, 848, 50586, 50586, 949, 11, 291, 393, 1333, 295, 14722, 24877, 13, 50832, 50832, 509, 393, 7690, 257, 2452, 2539, 1185, 51112, 51112, 538, 43867, 729, 16679, 294, 604, 733, 295, 17620, 51244, 51244, 291, 528, 11, 382, 938, 382, 456, 307, 572, 16121, 294, 264, 4984, 4295, 13, 51524, 51524, 407, 382, 938, 382, 291, 393, 808, 493, 365, 257, 14641, 1668, 51650, 51650, 294, 729, 16679, 11, 300, 311, 257, 665, 551, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.31695309314098985, "compression_ratio": 1.6303317535545023, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1493, "seek": 429248, "start": 4310.08, "end": 4315.679999999999, "text": " you want, as long as there is no loops in the connection graph.", "tokens": [50364, 440, 1481, 551, 466, 341, 9860, 1434, 307, 300, 11, 382, 286, 848, 50586, 50586, 949, 11, 291, 393, 1333, 295, 14722, 24877, 13, 50832, 50832, 509, 393, 7690, 257, 2452, 2539, 1185, 51112, 51112, 538, 43867, 729, 16679, 294, 604, 733, 295, 17620, 51244, 51244, 291, 528, 11, 382, 938, 382, 456, 307, 572, 16121, 294, 264, 4984, 4295, 13, 51524, 51524, 407, 382, 938, 382, 291, 393, 808, 493, 365, 257, 14641, 1668, 51650, 51650, 294, 729, 16679, 11, 300, 311, 257, 665, 551, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.31695309314098985, "compression_ratio": 1.6303317535545023, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1494, "seek": 429248, "start": 4315.679999999999, "end": 4318.2, "text": " So as long as you can come up with a partial order", "tokens": [50364, 440, 1481, 551, 466, 341, 9860, 1434, 307, 300, 11, 382, 286, 848, 50586, 50586, 949, 11, 291, 393, 1333, 295, 14722, 24877, 13, 50832, 50832, 509, 393, 7690, 257, 2452, 2539, 1185, 51112, 51112, 538, 43867, 729, 16679, 294, 604, 733, 295, 17620, 51244, 51244, 291, 528, 11, 382, 938, 382, 456, 307, 572, 16121, 294, 264, 4984, 4295, 13, 51524, 51524, 407, 382, 938, 382, 291, 393, 808, 493, 365, 257, 14641, 1668, 51650, 51650, 294, 729, 16679, 11, 300, 311, 257, 665, 551, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.31695309314098985, "compression_ratio": 1.6303317535545023, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1495, "seek": 429248, "start": 4318.2, "end": 4320.4, "text": " in those modules, that's a good thing.", "tokens": [50364, 440, 1481, 551, 466, 341, 9860, 1434, 307, 300, 11, 382, 286, 848, 50586, 50586, 949, 11, 291, 393, 1333, 295, 14722, 24877, 13, 50832, 50832, 509, 393, 7690, 257, 2452, 2539, 1185, 51112, 51112, 538, 43867, 729, 16679, 294, 604, 733, 295, 17620, 51244, 51244, 291, 528, 11, 382, 938, 382, 456, 307, 572, 16121, 294, 264, 4984, 4295, 13, 51524, 51524, 407, 382, 938, 382, 291, 393, 808, 493, 365, 257, 14641, 1668, 51650, 51650, 294, 729, 16679, 11, 300, 311, 257, 665, 551, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.31695309314098985, "compression_ratio": 1.6303317535545023, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1496, "seek": 432040, "start": 4320.4, "end": 4322.639999999999, "text": " You can come up with a partial order in those modules", "tokens": [50364, 509, 393, 808, 493, 365, 257, 14641, 1668, 294, 729, 16679, 50476, 50476, 300, 486, 5586, 300, 436, 366, 40610, 294, 264, 2296, 636, 13, 50740, 50740, 583, 456, 307, 257, 636, 281, 4813, 16121, 11, 50868, 50868, 293, 300, 311, 1219, 18680, 1753, 36170, 13, 50930, 50930, 492, 603, 751, 466, 341, 1780, 13, 51012, 51184, 407, 510, 311, 257, 1326, 8496, 11733, 498, 291, 51270, 51270, 528, 281, 862, 365, 18161, 36170, 13, 51332, 51332, 400, 291, 434, 516, 281, 360, 300, 2321, 1547, 11, 4317, 754, 4153, 13, 51534, 51804], "temperature": 0.0, "avg_logprob": -0.2138858995939556, "compression_ratio": 1.5585585585585586, "no_speech_prob": 3.023447425221093e-05}, {"id": 1497, "seek": 432040, "start": 4322.639999999999, "end": 4327.92, "text": " that will ensure that they are computed in the proper way.", "tokens": [50364, 509, 393, 808, 493, 365, 257, 14641, 1668, 294, 729, 16679, 50476, 50476, 300, 486, 5586, 300, 436, 366, 40610, 294, 264, 2296, 636, 13, 50740, 50740, 583, 456, 307, 257, 636, 281, 4813, 16121, 11, 50868, 50868, 293, 300, 311, 1219, 18680, 1753, 36170, 13, 50930, 50930, 492, 603, 751, 466, 341, 1780, 13, 51012, 51184, 407, 510, 311, 257, 1326, 8496, 11733, 498, 291, 51270, 51270, 528, 281, 862, 365, 18161, 36170, 13, 51332, 51332, 400, 291, 434, 516, 281, 360, 300, 2321, 1547, 11, 4317, 754, 4153, 13, 51534, 51804], "temperature": 0.0, "avg_logprob": -0.2138858995939556, "compression_ratio": 1.5585585585585586, "no_speech_prob": 3.023447425221093e-05}, {"id": 1498, "seek": 432040, "start": 4327.92, "end": 4330.48, "text": " But there is a way to handle loops,", "tokens": [50364, 509, 393, 808, 493, 365, 257, 14641, 1668, 294, 729, 16679, 50476, 50476, 300, 486, 5586, 300, 436, 366, 40610, 294, 264, 2296, 636, 13, 50740, 50740, 583, 456, 307, 257, 636, 281, 4813, 16121, 11, 50868, 50868, 293, 300, 311, 1219, 18680, 1753, 36170, 13, 50930, 50930, 492, 603, 751, 466, 341, 1780, 13, 51012, 51184, 407, 510, 311, 257, 1326, 8496, 11733, 498, 291, 51270, 51270, 528, 281, 862, 365, 18161, 36170, 13, 51332, 51332, 400, 291, 434, 516, 281, 360, 300, 2321, 1547, 11, 4317, 754, 4153, 13, 51534, 51804], "temperature": 0.0, "avg_logprob": -0.2138858995939556, "compression_ratio": 1.5585585585585586, "no_speech_prob": 3.023447425221093e-05}, {"id": 1499, "seek": 432040, "start": 4330.48, "end": 4331.719999999999, "text": " and that's called recurrent nets.", "tokens": [50364, 509, 393, 808, 493, 365, 257, 14641, 1668, 294, 729, 16679, 50476, 50476, 300, 486, 5586, 300, 436, 366, 40610, 294, 264, 2296, 636, 13, 50740, 50740, 583, 456, 307, 257, 636, 281, 4813, 16121, 11, 50868, 50868, 293, 300, 311, 1219, 18680, 1753, 36170, 13, 50930, 50930, 492, 603, 751, 466, 341, 1780, 13, 51012, 51184, 407, 510, 311, 257, 1326, 8496, 11733, 498, 291, 51270, 51270, 528, 281, 862, 365, 18161, 36170, 13, 51332, 51332, 400, 291, 434, 516, 281, 360, 300, 2321, 1547, 11, 4317, 754, 4153, 13, 51534, 51804], "temperature": 0.0, "avg_logprob": -0.2138858995939556, "compression_ratio": 1.5585585585585586, "no_speech_prob": 3.023447425221093e-05}, {"id": 1500, "seek": 432040, "start": 4331.719999999999, "end": 4333.36, "text": " We'll talk about this later.", "tokens": [50364, 509, 393, 808, 493, 365, 257, 14641, 1668, 294, 729, 16679, 50476, 50476, 300, 486, 5586, 300, 436, 366, 40610, 294, 264, 2296, 636, 13, 50740, 50740, 583, 456, 307, 257, 636, 281, 4813, 16121, 11, 50868, 50868, 293, 300, 311, 1219, 18680, 1753, 36170, 13, 50930, 50930, 492, 603, 751, 466, 341, 1780, 13, 51012, 51184, 407, 510, 311, 257, 1326, 8496, 11733, 498, 291, 51270, 51270, 528, 281, 862, 365, 18161, 36170, 13, 51332, 51332, 400, 291, 434, 516, 281, 360, 300, 2321, 1547, 11, 4317, 754, 4153, 13, 51534, 51804], "temperature": 0.0, "avg_logprob": -0.2138858995939556, "compression_ratio": 1.5585585585585586, "no_speech_prob": 3.023447425221093e-05}, {"id": 1501, "seek": 432040, "start": 4336.799999999999, "end": 4338.5199999999995, "text": " So here's a few practical tricks if you", "tokens": [50364, 509, 393, 808, 493, 365, 257, 14641, 1668, 294, 729, 16679, 50476, 50476, 300, 486, 5586, 300, 436, 366, 40610, 294, 264, 2296, 636, 13, 50740, 50740, 583, 456, 307, 257, 636, 281, 4813, 16121, 11, 50868, 50868, 293, 300, 311, 1219, 18680, 1753, 36170, 13, 50930, 50930, 492, 603, 751, 466, 341, 1780, 13, 51012, 51184, 407, 510, 311, 257, 1326, 8496, 11733, 498, 291, 51270, 51270, 528, 281, 862, 365, 18161, 36170, 13, 51332, 51332, 400, 291, 434, 516, 281, 360, 300, 2321, 1547, 11, 4317, 754, 4153, 13, 51534, 51804], "temperature": 0.0, "avg_logprob": -0.2138858995939556, "compression_ratio": 1.5585585585585586, "no_speech_prob": 3.023447425221093e-05}, {"id": 1502, "seek": 432040, "start": 4338.5199999999995, "end": 4339.759999999999, "text": " want to play with neural nets.", "tokens": [50364, 509, 393, 808, 493, 365, 257, 14641, 1668, 294, 729, 16679, 50476, 50476, 300, 486, 5586, 300, 436, 366, 40610, 294, 264, 2296, 636, 13, 50740, 50740, 583, 456, 307, 257, 636, 281, 4813, 16121, 11, 50868, 50868, 293, 300, 311, 1219, 18680, 1753, 36170, 13, 50930, 50930, 492, 603, 751, 466, 341, 1780, 13, 51012, 51184, 407, 510, 311, 257, 1326, 8496, 11733, 498, 291, 51270, 51270, 528, 281, 862, 365, 18161, 36170, 13, 51332, 51332, 400, 291, 434, 516, 281, 360, 300, 2321, 1547, 11, 4317, 754, 4153, 13, 51534, 51804], "temperature": 0.0, "avg_logprob": -0.2138858995939556, "compression_ratio": 1.5585585585585586, "no_speech_prob": 3.023447425221093e-05}, {"id": 1503, "seek": 432040, "start": 4339.759999999999, "end": 4343.799999999999, "text": " And you're going to do that soon enough, perhaps even tomorrow.", "tokens": [50364, 509, 393, 808, 493, 365, 257, 14641, 1668, 294, 729, 16679, 50476, 50476, 300, 486, 5586, 300, 436, 366, 40610, 294, 264, 2296, 636, 13, 50740, 50740, 583, 456, 307, 257, 636, 281, 4813, 16121, 11, 50868, 50868, 293, 300, 311, 1219, 18680, 1753, 36170, 13, 50930, 50930, 492, 603, 751, 466, 341, 1780, 13, 51012, 51184, 407, 510, 311, 257, 1326, 8496, 11733, 498, 291, 51270, 51270, 528, 281, 862, 365, 18161, 36170, 13, 51332, 51332, 400, 291, 434, 516, 281, 360, 300, 2321, 1547, 11, 4317, 754, 4153, 13, 51534, 51804], "temperature": 0.0, "avg_logprob": -0.2138858995939556, "compression_ratio": 1.5585585585585586, "no_speech_prob": 3.023447425221093e-05}, {"id": 1504, "seek": 434380, "start": 4343.8, "end": 4347.8, "text": " So these are a bit of the black art of deep learning, which", "tokens": [50364, 407, 613, 366, 257, 857, 295, 264, 2211, 1523, 295, 2452, 2539, 11, 597, 50564, 50564, 307, 1333, 295, 257, 688, 295, 309, 307, 12270, 1217, 50654, 50654, 294, 721, 411, 9953, 51, 284, 339, 498, 291, 764, 3832, 3873, 13, 50754, 50754, 583, 512, 295, 309, 307, 733, 295, 544, 295, 264, 1333, 295, 19338, 3713, 11, 50918, 50918, 498, 291, 528, 11, 295, 264, 2452, 2539, 1768, 13, 51028, 51028, 509, 393, 915, 341, 294, 10577, 11, 457, 309, 311, 51118, 51118, 257, 707, 2252, 281, 915, 2171, 13, 51190, 51190, 407, 881, 18161, 36170, 764, 11, 321, 603, 764, 382, 264, 2135, 2107, 12, 1889, 17409, 11, 51504, 51504, 370, 341, 1333, 295, 1922, 12, 35461, 11048, 9902, 13, 51582, 51732], "temperature": 0.0, "avg_logprob": -0.34824619595966644, "compression_ratio": 1.6795366795366795, "no_speech_prob": 1.8606579033075832e-05}, {"id": 1505, "seek": 434380, "start": 4347.8, "end": 4349.6, "text": " is sort of a lot of it is implemented already", "tokens": [50364, 407, 613, 366, 257, 857, 295, 264, 2211, 1523, 295, 2452, 2539, 11, 597, 50564, 50564, 307, 1333, 295, 257, 688, 295, 309, 307, 12270, 1217, 50654, 50654, 294, 721, 411, 9953, 51, 284, 339, 498, 291, 764, 3832, 3873, 13, 50754, 50754, 583, 512, 295, 309, 307, 733, 295, 544, 295, 264, 1333, 295, 19338, 3713, 11, 50918, 50918, 498, 291, 528, 11, 295, 264, 2452, 2539, 1768, 13, 51028, 51028, 509, 393, 915, 341, 294, 10577, 11, 457, 309, 311, 51118, 51118, 257, 707, 2252, 281, 915, 2171, 13, 51190, 51190, 407, 881, 18161, 36170, 764, 11, 321, 603, 764, 382, 264, 2135, 2107, 12, 1889, 17409, 11, 51504, 51504, 370, 341, 1333, 295, 1922, 12, 35461, 11048, 9902, 13, 51582, 51732], "temperature": 0.0, "avg_logprob": -0.34824619595966644, "compression_ratio": 1.6795366795366795, "no_speech_prob": 1.8606579033075832e-05}, {"id": 1506, "seek": 434380, "start": 4349.6, "end": 4351.6, "text": " in things like PyTorch if you use standard tools.", "tokens": [50364, 407, 613, 366, 257, 857, 295, 264, 2211, 1523, 295, 2452, 2539, 11, 597, 50564, 50564, 307, 1333, 295, 257, 688, 295, 309, 307, 12270, 1217, 50654, 50654, 294, 721, 411, 9953, 51, 284, 339, 498, 291, 764, 3832, 3873, 13, 50754, 50754, 583, 512, 295, 309, 307, 733, 295, 544, 295, 264, 1333, 295, 19338, 3713, 11, 50918, 50918, 498, 291, 528, 11, 295, 264, 2452, 2539, 1768, 13, 51028, 51028, 509, 393, 915, 341, 294, 10577, 11, 457, 309, 311, 51118, 51118, 257, 707, 2252, 281, 915, 2171, 13, 51190, 51190, 407, 881, 18161, 36170, 764, 11, 321, 603, 764, 382, 264, 2135, 2107, 12, 1889, 17409, 11, 51504, 51504, 370, 341, 1333, 295, 1922, 12, 35461, 11048, 9902, 13, 51582, 51732], "temperature": 0.0, "avg_logprob": -0.34824619595966644, "compression_ratio": 1.6795366795366795, "no_speech_prob": 1.8606579033075832e-05}, {"id": 1507, "seek": 434380, "start": 4351.6, "end": 4354.88, "text": " But some of it is kind of more of the sort of oral culture,", "tokens": [50364, 407, 613, 366, 257, 857, 295, 264, 2211, 1523, 295, 2452, 2539, 11, 597, 50564, 50564, 307, 1333, 295, 257, 688, 295, 309, 307, 12270, 1217, 50654, 50654, 294, 721, 411, 9953, 51, 284, 339, 498, 291, 764, 3832, 3873, 13, 50754, 50754, 583, 512, 295, 309, 307, 733, 295, 544, 295, 264, 1333, 295, 19338, 3713, 11, 50918, 50918, 498, 291, 528, 11, 295, 264, 2452, 2539, 1768, 13, 51028, 51028, 509, 393, 915, 341, 294, 10577, 11, 457, 309, 311, 51118, 51118, 257, 707, 2252, 281, 915, 2171, 13, 51190, 51190, 407, 881, 18161, 36170, 764, 11, 321, 603, 764, 382, 264, 2135, 2107, 12, 1889, 17409, 11, 51504, 51504, 370, 341, 1333, 295, 1922, 12, 35461, 11048, 9902, 13, 51582, 51732], "temperature": 0.0, "avg_logprob": -0.34824619595966644, "compression_ratio": 1.6795366795366795, "no_speech_prob": 1.8606579033075832e-05}, {"id": 1508, "seek": 434380, "start": 4354.88, "end": 4357.08, "text": " if you want, of the deep learning community.", "tokens": [50364, 407, 613, 366, 257, 857, 295, 264, 2211, 1523, 295, 2452, 2539, 11, 597, 50564, 50564, 307, 1333, 295, 257, 688, 295, 309, 307, 12270, 1217, 50654, 50654, 294, 721, 411, 9953, 51, 284, 339, 498, 291, 764, 3832, 3873, 13, 50754, 50754, 583, 512, 295, 309, 307, 733, 295, 544, 295, 264, 1333, 295, 19338, 3713, 11, 50918, 50918, 498, 291, 528, 11, 295, 264, 2452, 2539, 1768, 13, 51028, 51028, 509, 393, 915, 341, 294, 10577, 11, 457, 309, 311, 51118, 51118, 257, 707, 2252, 281, 915, 2171, 13, 51190, 51190, 407, 881, 18161, 36170, 764, 11, 321, 603, 764, 382, 264, 2135, 2107, 12, 1889, 17409, 11, 51504, 51504, 370, 341, 1333, 295, 1922, 12, 35461, 11048, 9902, 13, 51582, 51732], "temperature": 0.0, "avg_logprob": -0.34824619595966644, "compression_ratio": 1.6795366795366795, "no_speech_prob": 1.8606579033075832e-05}, {"id": 1509, "seek": 434380, "start": 4357.08, "end": 4358.88, "text": " You can find this in papers, but it's", "tokens": [50364, 407, 613, 366, 257, 857, 295, 264, 2211, 1523, 295, 2452, 2539, 11, 597, 50564, 50564, 307, 1333, 295, 257, 688, 295, 309, 307, 12270, 1217, 50654, 50654, 294, 721, 411, 9953, 51, 284, 339, 498, 291, 764, 3832, 3873, 13, 50754, 50754, 583, 512, 295, 309, 307, 733, 295, 544, 295, 264, 1333, 295, 19338, 3713, 11, 50918, 50918, 498, 291, 528, 11, 295, 264, 2452, 2539, 1768, 13, 51028, 51028, 509, 393, 915, 341, 294, 10577, 11, 457, 309, 311, 51118, 51118, 257, 707, 2252, 281, 915, 2171, 13, 51190, 51190, 407, 881, 18161, 36170, 764, 11, 321, 603, 764, 382, 264, 2135, 2107, 12, 1889, 17409, 11, 51504, 51504, 370, 341, 1333, 295, 1922, 12, 35461, 11048, 9902, 13, 51582, 51732], "temperature": 0.0, "avg_logprob": -0.34824619595966644, "compression_ratio": 1.6795366795366795, "no_speech_prob": 1.8606579033075832e-05}, {"id": 1510, "seek": 434380, "start": 4358.88, "end": 4360.320000000001, "text": " a little difficult to find sometimes.", "tokens": [50364, 407, 613, 366, 257, 857, 295, 264, 2211, 1523, 295, 2452, 2539, 11, 597, 50564, 50564, 307, 1333, 295, 257, 688, 295, 309, 307, 12270, 1217, 50654, 50654, 294, 721, 411, 9953, 51, 284, 339, 498, 291, 764, 3832, 3873, 13, 50754, 50754, 583, 512, 295, 309, 307, 733, 295, 544, 295, 264, 1333, 295, 19338, 3713, 11, 50918, 50918, 498, 291, 528, 11, 295, 264, 2452, 2539, 1768, 13, 51028, 51028, 509, 393, 915, 341, 294, 10577, 11, 457, 309, 311, 51118, 51118, 257, 707, 2252, 281, 915, 2171, 13, 51190, 51190, 407, 881, 18161, 36170, 764, 11, 321, 603, 764, 382, 264, 2135, 2107, 12, 1889, 17409, 11, 51504, 51504, 370, 341, 1333, 295, 1922, 12, 35461, 11048, 9902, 13, 51582, 51732], "temperature": 0.0, "avg_logprob": -0.34824619595966644, "compression_ratio": 1.6795366795366795, "no_speech_prob": 1.8606579033075832e-05}, {"id": 1511, "seek": 434380, "start": 4360.320000000001, "end": 4366.6, "text": " So most neural nets use, we'll use as the main non-linearity,", "tokens": [50364, 407, 613, 366, 257, 857, 295, 264, 2211, 1523, 295, 2452, 2539, 11, 597, 50564, 50564, 307, 1333, 295, 257, 688, 295, 309, 307, 12270, 1217, 50654, 50654, 294, 721, 411, 9953, 51, 284, 339, 498, 291, 764, 3832, 3873, 13, 50754, 50754, 583, 512, 295, 309, 307, 733, 295, 544, 295, 264, 1333, 295, 19338, 3713, 11, 50918, 50918, 498, 291, 528, 11, 295, 264, 2452, 2539, 1768, 13, 51028, 51028, 509, 393, 915, 341, 294, 10577, 11, 457, 309, 311, 51118, 51118, 257, 707, 2252, 281, 915, 2171, 13, 51190, 51190, 407, 881, 18161, 36170, 764, 11, 321, 603, 764, 382, 264, 2135, 2107, 12, 1889, 17409, 11, 51504, 51504, 370, 341, 1333, 295, 1922, 12, 35461, 11048, 9902, 13, 51582, 51732], "temperature": 0.0, "avg_logprob": -0.34824619595966644, "compression_ratio": 1.6795366795366795, "no_speech_prob": 1.8606579033075832e-05}, {"id": 1512, "seek": 434380, "start": 4366.6, "end": 4368.16, "text": " so this sort of half-wave rectifier.", "tokens": [50364, 407, 613, 366, 257, 857, 295, 264, 2211, 1523, 295, 2452, 2539, 11, 597, 50564, 50564, 307, 1333, 295, 257, 688, 295, 309, 307, 12270, 1217, 50654, 50654, 294, 721, 411, 9953, 51, 284, 339, 498, 291, 764, 3832, 3873, 13, 50754, 50754, 583, 512, 295, 309, 307, 733, 295, 544, 295, 264, 1333, 295, 19338, 3713, 11, 50918, 50918, 498, 291, 528, 11, 295, 264, 2452, 2539, 1768, 13, 51028, 51028, 509, 393, 915, 341, 294, 10577, 11, 457, 309, 311, 51118, 51118, 257, 707, 2252, 281, 915, 2171, 13, 51190, 51190, 407, 881, 18161, 36170, 764, 11, 321, 603, 764, 382, 264, 2135, 2107, 12, 1889, 17409, 11, 51504, 51504, 370, 341, 1333, 295, 1922, 12, 35461, 11048, 9902, 13, 51582, 51732], "temperature": 0.0, "avg_logprob": -0.34824619595966644, "compression_ratio": 1.6795366795366795, "no_speech_prob": 1.8606579033075832e-05}, {"id": 1513, "seek": 436816, "start": 4368.16, "end": 4370.96, "text": " Hyperbolic tangent, which is a similar function, and logistic", "tokens": [50364, 29592, 65, 7940, 27747, 11, 597, 307, 257, 2531, 2445, 11, 293, 3565, 3142, 50504, 50504, 2445, 11, 597, 307, 611, 257, 2531, 2445, 11, 366, 1143, 11, 50646, 50646, 457, 406, 382, 709, 11, 406, 6217, 382, 709, 13, 50786, 50786, 509, 643, 281, 5883, 1125, 264, 17443, 6108, 13, 50870, 50870, 407, 498, 291, 362, 257, 18161, 2533, 293, 291, 5883, 1125, 264, 17443, 50984, 50984, 281, 4018, 11, 309, 1128, 2516, 766, 13, 51120, 51120, 467, 486, 1128, 1466, 13, 51172, 51172, 440, 2771, 2448, 486, 1009, 312, 4018, 439, 264, 565, 13, 51348, 51348, 400, 264, 1778, 307, 570, 562, 291, 646, 48256, 264, 16235, 11, 51544, 51544, 291, 393, 767, 536, 264, 2771, 2448, 13, 51674, 51674, 407, 291, 393, 536, 300, 264, 2771, 2448, 366, 1009, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.44579214208266316, "compression_ratio": 1.8901515151515151, "no_speech_prob": 1.6438370948890224e-05}, {"id": 1514, "seek": 436816, "start": 4370.96, "end": 4373.8, "text": " function, which is also a similar function, are used,", "tokens": [50364, 29592, 65, 7940, 27747, 11, 597, 307, 257, 2531, 2445, 11, 293, 3565, 3142, 50504, 50504, 2445, 11, 597, 307, 611, 257, 2531, 2445, 11, 366, 1143, 11, 50646, 50646, 457, 406, 382, 709, 11, 406, 6217, 382, 709, 13, 50786, 50786, 509, 643, 281, 5883, 1125, 264, 17443, 6108, 13, 50870, 50870, 407, 498, 291, 362, 257, 18161, 2533, 293, 291, 5883, 1125, 264, 17443, 50984, 50984, 281, 4018, 11, 309, 1128, 2516, 766, 13, 51120, 51120, 467, 486, 1128, 1466, 13, 51172, 51172, 440, 2771, 2448, 486, 1009, 312, 4018, 439, 264, 565, 13, 51348, 51348, 400, 264, 1778, 307, 570, 562, 291, 646, 48256, 264, 16235, 11, 51544, 51544, 291, 393, 767, 536, 264, 2771, 2448, 13, 51674, 51674, 407, 291, 393, 536, 300, 264, 2771, 2448, 366, 1009, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.44579214208266316, "compression_ratio": 1.8901515151515151, "no_speech_prob": 1.6438370948890224e-05}, {"id": 1515, "seek": 436816, "start": 4373.8, "end": 4376.599999999999, "text": " but not as much, not nearly as much.", "tokens": [50364, 29592, 65, 7940, 27747, 11, 597, 307, 257, 2531, 2445, 11, 293, 3565, 3142, 50504, 50504, 2445, 11, 597, 307, 611, 257, 2531, 2445, 11, 366, 1143, 11, 50646, 50646, 457, 406, 382, 709, 11, 406, 6217, 382, 709, 13, 50786, 50786, 509, 643, 281, 5883, 1125, 264, 17443, 6108, 13, 50870, 50870, 407, 498, 291, 362, 257, 18161, 2533, 293, 291, 5883, 1125, 264, 17443, 50984, 50984, 281, 4018, 11, 309, 1128, 2516, 766, 13, 51120, 51120, 467, 486, 1128, 1466, 13, 51172, 51172, 440, 2771, 2448, 486, 1009, 312, 4018, 439, 264, 565, 13, 51348, 51348, 400, 264, 1778, 307, 570, 562, 291, 646, 48256, 264, 16235, 11, 51544, 51544, 291, 393, 767, 536, 264, 2771, 2448, 13, 51674, 51674, 407, 291, 393, 536, 300, 264, 2771, 2448, 366, 1009, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.44579214208266316, "compression_ratio": 1.8901515151515151, "no_speech_prob": 1.6438370948890224e-05}, {"id": 1516, "seek": 436816, "start": 4376.599999999999, "end": 4378.28, "text": " You need to initialize the weights properly.", "tokens": [50364, 29592, 65, 7940, 27747, 11, 597, 307, 257, 2531, 2445, 11, 293, 3565, 3142, 50504, 50504, 2445, 11, 597, 307, 611, 257, 2531, 2445, 11, 366, 1143, 11, 50646, 50646, 457, 406, 382, 709, 11, 406, 6217, 382, 709, 13, 50786, 50786, 509, 643, 281, 5883, 1125, 264, 17443, 6108, 13, 50870, 50870, 407, 498, 291, 362, 257, 18161, 2533, 293, 291, 5883, 1125, 264, 17443, 50984, 50984, 281, 4018, 11, 309, 1128, 2516, 766, 13, 51120, 51120, 467, 486, 1128, 1466, 13, 51172, 51172, 440, 2771, 2448, 486, 1009, 312, 4018, 439, 264, 565, 13, 51348, 51348, 400, 264, 1778, 307, 570, 562, 291, 646, 48256, 264, 16235, 11, 51544, 51544, 291, 393, 767, 536, 264, 2771, 2448, 13, 51674, 51674, 407, 291, 393, 536, 300, 264, 2771, 2448, 366, 1009, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.44579214208266316, "compression_ratio": 1.8901515151515151, "no_speech_prob": 1.6438370948890224e-05}, {"id": 1517, "seek": 436816, "start": 4378.28, "end": 4380.5599999999995, "text": " So if you have a neural net and you initialize the weights", "tokens": [50364, 29592, 65, 7940, 27747, 11, 597, 307, 257, 2531, 2445, 11, 293, 3565, 3142, 50504, 50504, 2445, 11, 597, 307, 611, 257, 2531, 2445, 11, 366, 1143, 11, 50646, 50646, 457, 406, 382, 709, 11, 406, 6217, 382, 709, 13, 50786, 50786, 509, 643, 281, 5883, 1125, 264, 17443, 6108, 13, 50870, 50870, 407, 498, 291, 362, 257, 18161, 2533, 293, 291, 5883, 1125, 264, 17443, 50984, 50984, 281, 4018, 11, 309, 1128, 2516, 766, 13, 51120, 51120, 467, 486, 1128, 1466, 13, 51172, 51172, 440, 2771, 2448, 486, 1009, 312, 4018, 439, 264, 565, 13, 51348, 51348, 400, 264, 1778, 307, 570, 562, 291, 646, 48256, 264, 16235, 11, 51544, 51544, 291, 393, 767, 536, 264, 2771, 2448, 13, 51674, 51674, 407, 291, 393, 536, 300, 264, 2771, 2448, 366, 1009, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.44579214208266316, "compression_ratio": 1.8901515151515151, "no_speech_prob": 1.6438370948890224e-05}, {"id": 1518, "seek": 436816, "start": 4380.5599999999995, "end": 4383.28, "text": " to zero, it never takes off.", "tokens": [50364, 29592, 65, 7940, 27747, 11, 597, 307, 257, 2531, 2445, 11, 293, 3565, 3142, 50504, 50504, 2445, 11, 597, 307, 611, 257, 2531, 2445, 11, 366, 1143, 11, 50646, 50646, 457, 406, 382, 709, 11, 406, 6217, 382, 709, 13, 50786, 50786, 509, 643, 281, 5883, 1125, 264, 17443, 6108, 13, 50870, 50870, 407, 498, 291, 362, 257, 18161, 2533, 293, 291, 5883, 1125, 264, 17443, 50984, 50984, 281, 4018, 11, 309, 1128, 2516, 766, 13, 51120, 51120, 467, 486, 1128, 1466, 13, 51172, 51172, 440, 2771, 2448, 486, 1009, 312, 4018, 439, 264, 565, 13, 51348, 51348, 400, 264, 1778, 307, 570, 562, 291, 646, 48256, 264, 16235, 11, 51544, 51544, 291, 393, 767, 536, 264, 2771, 2448, 13, 51674, 51674, 407, 291, 393, 536, 300, 264, 2771, 2448, 366, 1009, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.44579214208266316, "compression_ratio": 1.8901515151515151, "no_speech_prob": 1.6438370948890224e-05}, {"id": 1519, "seek": 436816, "start": 4383.28, "end": 4384.32, "text": " It will never learn.", "tokens": [50364, 29592, 65, 7940, 27747, 11, 597, 307, 257, 2531, 2445, 11, 293, 3565, 3142, 50504, 50504, 2445, 11, 597, 307, 611, 257, 2531, 2445, 11, 366, 1143, 11, 50646, 50646, 457, 406, 382, 709, 11, 406, 6217, 382, 709, 13, 50786, 50786, 509, 643, 281, 5883, 1125, 264, 17443, 6108, 13, 50870, 50870, 407, 498, 291, 362, 257, 18161, 2533, 293, 291, 5883, 1125, 264, 17443, 50984, 50984, 281, 4018, 11, 309, 1128, 2516, 766, 13, 51120, 51120, 467, 486, 1128, 1466, 13, 51172, 51172, 440, 2771, 2448, 486, 1009, 312, 4018, 439, 264, 565, 13, 51348, 51348, 400, 264, 1778, 307, 570, 562, 291, 646, 48256, 264, 16235, 11, 51544, 51544, 291, 393, 767, 536, 264, 2771, 2448, 13, 51674, 51674, 407, 291, 393, 536, 300, 264, 2771, 2448, 366, 1009, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.44579214208266316, "compression_ratio": 1.8901515151515151, "no_speech_prob": 1.6438370948890224e-05}, {"id": 1520, "seek": 436816, "start": 4384.32, "end": 4387.84, "text": " The gradients will always be zero all the time.", "tokens": [50364, 29592, 65, 7940, 27747, 11, 597, 307, 257, 2531, 2445, 11, 293, 3565, 3142, 50504, 50504, 2445, 11, 597, 307, 611, 257, 2531, 2445, 11, 366, 1143, 11, 50646, 50646, 457, 406, 382, 709, 11, 406, 6217, 382, 709, 13, 50786, 50786, 509, 643, 281, 5883, 1125, 264, 17443, 6108, 13, 50870, 50870, 407, 498, 291, 362, 257, 18161, 2533, 293, 291, 5883, 1125, 264, 17443, 50984, 50984, 281, 4018, 11, 309, 1128, 2516, 766, 13, 51120, 51120, 467, 486, 1128, 1466, 13, 51172, 51172, 440, 2771, 2448, 486, 1009, 312, 4018, 439, 264, 565, 13, 51348, 51348, 400, 264, 1778, 307, 570, 562, 291, 646, 48256, 264, 16235, 11, 51544, 51544, 291, 393, 767, 536, 264, 2771, 2448, 13, 51674, 51674, 407, 291, 393, 536, 300, 264, 2771, 2448, 366, 1009, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.44579214208266316, "compression_ratio": 1.8901515151515151, "no_speech_prob": 1.6438370948890224e-05}, {"id": 1521, "seek": 436816, "start": 4387.84, "end": 4391.76, "text": " And the reason is because when you back propagate the gradient,", "tokens": [50364, 29592, 65, 7940, 27747, 11, 597, 307, 257, 2531, 2445, 11, 293, 3565, 3142, 50504, 50504, 2445, 11, 597, 307, 611, 257, 2531, 2445, 11, 366, 1143, 11, 50646, 50646, 457, 406, 382, 709, 11, 406, 6217, 382, 709, 13, 50786, 50786, 509, 643, 281, 5883, 1125, 264, 17443, 6108, 13, 50870, 50870, 407, 498, 291, 362, 257, 18161, 2533, 293, 291, 5883, 1125, 264, 17443, 50984, 50984, 281, 4018, 11, 309, 1128, 2516, 766, 13, 51120, 51120, 467, 486, 1128, 1466, 13, 51172, 51172, 440, 2771, 2448, 486, 1009, 312, 4018, 439, 264, 565, 13, 51348, 51348, 400, 264, 1778, 307, 570, 562, 291, 646, 48256, 264, 16235, 11, 51544, 51544, 291, 393, 767, 536, 264, 2771, 2448, 13, 51674, 51674, 407, 291, 393, 536, 300, 264, 2771, 2448, 366, 1009, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.44579214208266316, "compression_ratio": 1.8901515151515151, "no_speech_prob": 1.6438370948890224e-05}, {"id": 1522, "seek": 436816, "start": 4391.76, "end": 4394.36, "text": " you can actually see the gradients.", "tokens": [50364, 29592, 65, 7940, 27747, 11, 597, 307, 257, 2531, 2445, 11, 293, 3565, 3142, 50504, 50504, 2445, 11, 597, 307, 611, 257, 2531, 2445, 11, 366, 1143, 11, 50646, 50646, 457, 406, 382, 709, 11, 406, 6217, 382, 709, 13, 50786, 50786, 509, 643, 281, 5883, 1125, 264, 17443, 6108, 13, 50870, 50870, 407, 498, 291, 362, 257, 18161, 2533, 293, 291, 5883, 1125, 264, 17443, 50984, 50984, 281, 4018, 11, 309, 1128, 2516, 766, 13, 51120, 51120, 467, 486, 1128, 1466, 13, 51172, 51172, 440, 2771, 2448, 486, 1009, 312, 4018, 439, 264, 565, 13, 51348, 51348, 400, 264, 1778, 307, 570, 562, 291, 646, 48256, 264, 16235, 11, 51544, 51544, 291, 393, 767, 536, 264, 2771, 2448, 13, 51674, 51674, 407, 291, 393, 536, 300, 264, 2771, 2448, 366, 1009, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.44579214208266316, "compression_ratio": 1.8901515151515151, "no_speech_prob": 1.6438370948890224e-05}, {"id": 1523, "seek": 436816, "start": 4394.36, "end": 4396.28, "text": " So you can see that the gradients are always", "tokens": [50364, 29592, 65, 7940, 27747, 11, 597, 307, 257, 2531, 2445, 11, 293, 3565, 3142, 50504, 50504, 2445, 11, 597, 307, 611, 257, 2531, 2445, 11, 366, 1143, 11, 50646, 50646, 457, 406, 382, 709, 11, 406, 6217, 382, 709, 13, 50786, 50786, 509, 643, 281, 5883, 1125, 264, 17443, 6108, 13, 50870, 50870, 407, 498, 291, 362, 257, 18161, 2533, 293, 291, 5883, 1125, 264, 17443, 50984, 50984, 281, 4018, 11, 309, 1128, 2516, 766, 13, 51120, 51120, 467, 486, 1128, 1466, 13, 51172, 51172, 440, 2771, 2448, 486, 1009, 312, 4018, 439, 264, 565, 13, 51348, 51348, 400, 264, 1778, 307, 570, 562, 291, 646, 48256, 264, 16235, 11, 51544, 51544, 291, 393, 767, 536, 264, 2771, 2448, 13, 51674, 51674, 407, 291, 393, 536, 300, 264, 2771, 2448, 366, 1009, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.44579214208266316, "compression_ratio": 1.8901515151515151, "no_speech_prob": 1.6438370948890224e-05}, {"id": 1524, "seek": 439628, "start": 4396.28, "end": 4398.4, "text": " zero, but when you back propagate the gradient,", "tokens": [50364, 4018, 11, 457, 562, 291, 646, 48256, 264, 16235, 11, 50470, 50470, 291, 12972, 538, 264, 25167, 295, 264, 3364, 8141, 13, 50598, 50598, 759, 300, 3364, 8141, 307, 4018, 11, 428, 16235, 307, 4018, 13, 50748, 50748, 407, 498, 291, 722, 365, 439, 264, 17443, 2681, 281, 4018, 11, 50858, 50858, 291, 1128, 747, 766, 13, 50928, 50928, 400, 1580, 2351, 257, 1168, 466, 30459, 2793, 949, 13, 51098, 51098, 17182, 307, 257, 30459, 935, 13, 51236, 51236, 400, 370, 498, 291, 722, 412, 341, 30459, 935, 11, 51354, 51354, 291, 1128, 483, 484, 295, 309, 13, 51466, 51466, 407, 291, 362, 281, 1821, 264, 25440, 294, 264, 1185, 13, 51576, 51576, 509, 362, 281, 5883, 1125, 264, 17443, 51650, 51650, 281, 1359, 4974, 4190, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2311748912316242, "compression_ratio": 1.8937007874015748, "no_speech_prob": 2.2826374333817512e-05}, {"id": 1525, "seek": 439628, "start": 4398.4, "end": 4400.96, "text": " you multiply by the transpose of the weight matrix.", "tokens": [50364, 4018, 11, 457, 562, 291, 646, 48256, 264, 16235, 11, 50470, 50470, 291, 12972, 538, 264, 25167, 295, 264, 3364, 8141, 13, 50598, 50598, 759, 300, 3364, 8141, 307, 4018, 11, 428, 16235, 307, 4018, 13, 50748, 50748, 407, 498, 291, 722, 365, 439, 264, 17443, 2681, 281, 4018, 11, 50858, 50858, 291, 1128, 747, 766, 13, 50928, 50928, 400, 1580, 2351, 257, 1168, 466, 30459, 2793, 949, 13, 51098, 51098, 17182, 307, 257, 30459, 935, 13, 51236, 51236, 400, 370, 498, 291, 722, 412, 341, 30459, 935, 11, 51354, 51354, 291, 1128, 483, 484, 295, 309, 13, 51466, 51466, 407, 291, 362, 281, 1821, 264, 25440, 294, 264, 1185, 13, 51576, 51576, 509, 362, 281, 5883, 1125, 264, 17443, 51650, 51650, 281, 1359, 4974, 4190, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2311748912316242, "compression_ratio": 1.8937007874015748, "no_speech_prob": 2.2826374333817512e-05}, {"id": 1526, "seek": 439628, "start": 4400.96, "end": 4403.96, "text": " If that weight matrix is zero, your gradient is zero.", "tokens": [50364, 4018, 11, 457, 562, 291, 646, 48256, 264, 16235, 11, 50470, 50470, 291, 12972, 538, 264, 25167, 295, 264, 3364, 8141, 13, 50598, 50598, 759, 300, 3364, 8141, 307, 4018, 11, 428, 16235, 307, 4018, 13, 50748, 50748, 407, 498, 291, 722, 365, 439, 264, 17443, 2681, 281, 4018, 11, 50858, 50858, 291, 1128, 747, 766, 13, 50928, 50928, 400, 1580, 2351, 257, 1168, 466, 30459, 2793, 949, 13, 51098, 51098, 17182, 307, 257, 30459, 935, 13, 51236, 51236, 400, 370, 498, 291, 722, 412, 341, 30459, 935, 11, 51354, 51354, 291, 1128, 483, 484, 295, 309, 13, 51466, 51466, 407, 291, 362, 281, 1821, 264, 25440, 294, 264, 1185, 13, 51576, 51576, 509, 362, 281, 5883, 1125, 264, 17443, 51650, 51650, 281, 1359, 4974, 4190, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2311748912316242, "compression_ratio": 1.8937007874015748, "no_speech_prob": 2.2826374333817512e-05}, {"id": 1527, "seek": 439628, "start": 4403.96, "end": 4406.16, "text": " So if you start with all the weights equal to zero,", "tokens": [50364, 4018, 11, 457, 562, 291, 646, 48256, 264, 16235, 11, 50470, 50470, 291, 12972, 538, 264, 25167, 295, 264, 3364, 8141, 13, 50598, 50598, 759, 300, 3364, 8141, 307, 4018, 11, 428, 16235, 307, 4018, 13, 50748, 50748, 407, 498, 291, 722, 365, 439, 264, 17443, 2681, 281, 4018, 11, 50858, 50858, 291, 1128, 747, 766, 13, 50928, 50928, 400, 1580, 2351, 257, 1168, 466, 30459, 2793, 949, 13, 51098, 51098, 17182, 307, 257, 30459, 935, 13, 51236, 51236, 400, 370, 498, 291, 722, 412, 341, 30459, 935, 11, 51354, 51354, 291, 1128, 483, 484, 295, 309, 13, 51466, 51466, 407, 291, 362, 281, 1821, 264, 25440, 294, 264, 1185, 13, 51576, 51576, 509, 362, 281, 5883, 1125, 264, 17443, 51650, 51650, 281, 1359, 4974, 4190, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2311748912316242, "compression_ratio": 1.8937007874015748, "no_speech_prob": 2.2826374333817512e-05}, {"id": 1528, "seek": 439628, "start": 4406.16, "end": 4407.5599999999995, "text": " you never take off.", "tokens": [50364, 4018, 11, 457, 562, 291, 646, 48256, 264, 16235, 11, 50470, 50470, 291, 12972, 538, 264, 25167, 295, 264, 3364, 8141, 13, 50598, 50598, 759, 300, 3364, 8141, 307, 4018, 11, 428, 16235, 307, 4018, 13, 50748, 50748, 407, 498, 291, 722, 365, 439, 264, 17443, 2681, 281, 4018, 11, 50858, 50858, 291, 1128, 747, 766, 13, 50928, 50928, 400, 1580, 2351, 257, 1168, 466, 30459, 2793, 949, 13, 51098, 51098, 17182, 307, 257, 30459, 935, 13, 51236, 51236, 400, 370, 498, 291, 722, 412, 341, 30459, 935, 11, 51354, 51354, 291, 1128, 483, 484, 295, 309, 13, 51466, 51466, 407, 291, 362, 281, 1821, 264, 25440, 294, 264, 1185, 13, 51576, 51576, 509, 362, 281, 5883, 1125, 264, 17443, 51650, 51650, 281, 1359, 4974, 4190, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2311748912316242, "compression_ratio": 1.8937007874015748, "no_speech_prob": 2.2826374333817512e-05}, {"id": 1529, "seek": 439628, "start": 4407.5599999999995, "end": 4410.96, "text": " And someone asked a question about saddle points before.", "tokens": [50364, 4018, 11, 457, 562, 291, 646, 48256, 264, 16235, 11, 50470, 50470, 291, 12972, 538, 264, 25167, 295, 264, 3364, 8141, 13, 50598, 50598, 759, 300, 3364, 8141, 307, 4018, 11, 428, 16235, 307, 4018, 13, 50748, 50748, 407, 498, 291, 722, 365, 439, 264, 17443, 2681, 281, 4018, 11, 50858, 50858, 291, 1128, 747, 766, 13, 50928, 50928, 400, 1580, 2351, 257, 1168, 466, 30459, 2793, 949, 13, 51098, 51098, 17182, 307, 257, 30459, 935, 13, 51236, 51236, 400, 370, 498, 291, 722, 412, 341, 30459, 935, 11, 51354, 51354, 291, 1128, 483, 484, 295, 309, 13, 51466, 51466, 407, 291, 362, 281, 1821, 264, 25440, 294, 264, 1185, 13, 51576, 51576, 509, 362, 281, 5883, 1125, 264, 17443, 51650, 51650, 281, 1359, 4974, 4190, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2311748912316242, "compression_ratio": 1.8937007874015748, "no_speech_prob": 2.2826374333817512e-05}, {"id": 1530, "seek": 439628, "start": 4410.96, "end": 4413.719999999999, "text": " Zero is a saddle point.", "tokens": [50364, 4018, 11, 457, 562, 291, 646, 48256, 264, 16235, 11, 50470, 50470, 291, 12972, 538, 264, 25167, 295, 264, 3364, 8141, 13, 50598, 50598, 759, 300, 3364, 8141, 307, 4018, 11, 428, 16235, 307, 4018, 13, 50748, 50748, 407, 498, 291, 722, 365, 439, 264, 17443, 2681, 281, 4018, 11, 50858, 50858, 291, 1128, 747, 766, 13, 50928, 50928, 400, 1580, 2351, 257, 1168, 466, 30459, 2793, 949, 13, 51098, 51098, 17182, 307, 257, 30459, 935, 13, 51236, 51236, 400, 370, 498, 291, 722, 412, 341, 30459, 935, 11, 51354, 51354, 291, 1128, 483, 484, 295, 309, 13, 51466, 51466, 407, 291, 362, 281, 1821, 264, 25440, 294, 264, 1185, 13, 51576, 51576, 509, 362, 281, 5883, 1125, 264, 17443, 51650, 51650, 281, 1359, 4974, 4190, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2311748912316242, "compression_ratio": 1.8937007874015748, "no_speech_prob": 2.2826374333817512e-05}, {"id": 1531, "seek": 439628, "start": 4413.719999999999, "end": 4416.08, "text": " And so if you start at this saddle point,", "tokens": [50364, 4018, 11, 457, 562, 291, 646, 48256, 264, 16235, 11, 50470, 50470, 291, 12972, 538, 264, 25167, 295, 264, 3364, 8141, 13, 50598, 50598, 759, 300, 3364, 8141, 307, 4018, 11, 428, 16235, 307, 4018, 13, 50748, 50748, 407, 498, 291, 722, 365, 439, 264, 17443, 2681, 281, 4018, 11, 50858, 50858, 291, 1128, 747, 766, 13, 50928, 50928, 400, 1580, 2351, 257, 1168, 466, 30459, 2793, 949, 13, 51098, 51098, 17182, 307, 257, 30459, 935, 13, 51236, 51236, 400, 370, 498, 291, 722, 412, 341, 30459, 935, 11, 51354, 51354, 291, 1128, 483, 484, 295, 309, 13, 51466, 51466, 407, 291, 362, 281, 1821, 264, 25440, 294, 264, 1185, 13, 51576, 51576, 509, 362, 281, 5883, 1125, 264, 17443, 51650, 51650, 281, 1359, 4974, 4190, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2311748912316242, "compression_ratio": 1.8937007874015748, "no_speech_prob": 2.2826374333817512e-05}, {"id": 1532, "seek": 439628, "start": 4416.08, "end": 4418.32, "text": " you never get out of it.", "tokens": [50364, 4018, 11, 457, 562, 291, 646, 48256, 264, 16235, 11, 50470, 50470, 291, 12972, 538, 264, 25167, 295, 264, 3364, 8141, 13, 50598, 50598, 759, 300, 3364, 8141, 307, 4018, 11, 428, 16235, 307, 4018, 13, 50748, 50748, 407, 498, 291, 722, 365, 439, 264, 17443, 2681, 281, 4018, 11, 50858, 50858, 291, 1128, 747, 766, 13, 50928, 50928, 400, 1580, 2351, 257, 1168, 466, 30459, 2793, 949, 13, 51098, 51098, 17182, 307, 257, 30459, 935, 13, 51236, 51236, 400, 370, 498, 291, 722, 412, 341, 30459, 935, 11, 51354, 51354, 291, 1128, 483, 484, 295, 309, 13, 51466, 51466, 407, 291, 362, 281, 1821, 264, 25440, 294, 264, 1185, 13, 51576, 51576, 509, 362, 281, 5883, 1125, 264, 17443, 51650, 51650, 281, 1359, 4974, 4190, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2311748912316242, "compression_ratio": 1.8937007874015748, "no_speech_prob": 2.2826374333817512e-05}, {"id": 1533, "seek": 439628, "start": 4418.32, "end": 4420.5199999999995, "text": " So you have to break the symmetry in the system.", "tokens": [50364, 4018, 11, 457, 562, 291, 646, 48256, 264, 16235, 11, 50470, 50470, 291, 12972, 538, 264, 25167, 295, 264, 3364, 8141, 13, 50598, 50598, 759, 300, 3364, 8141, 307, 4018, 11, 428, 16235, 307, 4018, 13, 50748, 50748, 407, 498, 291, 722, 365, 439, 264, 17443, 2681, 281, 4018, 11, 50858, 50858, 291, 1128, 747, 766, 13, 50928, 50928, 400, 1580, 2351, 257, 1168, 466, 30459, 2793, 949, 13, 51098, 51098, 17182, 307, 257, 30459, 935, 13, 51236, 51236, 400, 370, 498, 291, 722, 412, 341, 30459, 935, 11, 51354, 51354, 291, 1128, 483, 484, 295, 309, 13, 51466, 51466, 407, 291, 362, 281, 1821, 264, 25440, 294, 264, 1185, 13, 51576, 51576, 509, 362, 281, 5883, 1125, 264, 17443, 51650, 51650, 281, 1359, 4974, 4190, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2311748912316242, "compression_ratio": 1.8937007874015748, "no_speech_prob": 2.2826374333817512e-05}, {"id": 1534, "seek": 439628, "start": 4420.5199999999995, "end": 4422.0, "text": " You have to initialize the weights", "tokens": [50364, 4018, 11, 457, 562, 291, 646, 48256, 264, 16235, 11, 50470, 50470, 291, 12972, 538, 264, 25167, 295, 264, 3364, 8141, 13, 50598, 50598, 759, 300, 3364, 8141, 307, 4018, 11, 428, 16235, 307, 4018, 13, 50748, 50748, 407, 498, 291, 722, 365, 439, 264, 17443, 2681, 281, 4018, 11, 50858, 50858, 291, 1128, 747, 766, 13, 50928, 50928, 400, 1580, 2351, 257, 1168, 466, 30459, 2793, 949, 13, 51098, 51098, 17182, 307, 257, 30459, 935, 13, 51236, 51236, 400, 370, 498, 291, 722, 412, 341, 30459, 935, 11, 51354, 51354, 291, 1128, 483, 484, 295, 309, 13, 51466, 51466, 407, 291, 362, 281, 1821, 264, 25440, 294, 264, 1185, 13, 51576, 51576, 509, 362, 281, 5883, 1125, 264, 17443, 51650, 51650, 281, 1359, 4974, 4190, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2311748912316242, "compression_ratio": 1.8937007874015748, "no_speech_prob": 2.2826374333817512e-05}, {"id": 1535, "seek": 439628, "start": 4422.0, "end": 4425.48, "text": " to small random values.", "tokens": [50364, 4018, 11, 457, 562, 291, 646, 48256, 264, 16235, 11, 50470, 50470, 291, 12972, 538, 264, 25167, 295, 264, 3364, 8141, 13, 50598, 50598, 759, 300, 3364, 8141, 307, 4018, 11, 428, 16235, 307, 4018, 13, 50748, 50748, 407, 498, 291, 722, 365, 439, 264, 17443, 2681, 281, 4018, 11, 50858, 50858, 291, 1128, 747, 766, 13, 50928, 50928, 400, 1580, 2351, 257, 1168, 466, 30459, 2793, 949, 13, 51098, 51098, 17182, 307, 257, 30459, 935, 13, 51236, 51236, 400, 370, 498, 291, 722, 412, 341, 30459, 935, 11, 51354, 51354, 291, 1128, 483, 484, 295, 309, 13, 51466, 51466, 407, 291, 362, 281, 1821, 264, 25440, 294, 264, 1185, 13, 51576, 51576, 509, 362, 281, 5883, 1125, 264, 17443, 51650, 51650, 281, 1359, 4974, 4190, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2311748912316242, "compression_ratio": 1.8937007874015748, "no_speech_prob": 2.2826374333817512e-05}, {"id": 1536, "seek": 442548, "start": 4425.48, "end": 4427.879999999999, "text": " So you can initialize them, but it works fine", "tokens": [50364, 407, 291, 393, 5883, 1125, 552, 11, 457, 309, 1985, 2489, 50484, 50484, 498, 436, 434, 4974, 13, 50624, 50624, 400, 264, 636, 291, 5883, 1125, 307, 767, 1596, 1021, 13, 50814, 50814, 407, 456, 311, 439, 3685, 295, 11733, 281, 5883, 1125, 721, 6108, 13, 51000, 51000, 1485, 295, 264, 11733, 390, 14479, 538, 452, 1277, 11, 1456, 556, 3286, 12, 51, 84, 11, 51136, 51136, 466, 2217, 924, 2057, 11, 754, 544, 813, 300, 11, 767, 11, 51244, 51244, 12790, 924, 2057, 1920, 13, 51378, 51378, 8590, 586, 11, 309, 311, 1219, 7614, 13, 51460, 51460, 467, 311, 1219, 264, 591, 5184, 4282, 11, 457, 309, 311, 264, 912, 13, 51662, 51662, 400, 309, 14689, 294, 5883, 3319, 264, 17443, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.39039060804578996, "compression_ratio": 1.6446886446886446, "no_speech_prob": 1.568853076605592e-05}, {"id": 1537, "seek": 442548, "start": 4427.879999999999, "end": 4430.679999999999, "text": " if they're random.", "tokens": [50364, 407, 291, 393, 5883, 1125, 552, 11, 457, 309, 1985, 2489, 50484, 50484, 498, 436, 434, 4974, 13, 50624, 50624, 400, 264, 636, 291, 5883, 1125, 307, 767, 1596, 1021, 13, 50814, 50814, 407, 456, 311, 439, 3685, 295, 11733, 281, 5883, 1125, 721, 6108, 13, 51000, 51000, 1485, 295, 264, 11733, 390, 14479, 538, 452, 1277, 11, 1456, 556, 3286, 12, 51, 84, 11, 51136, 51136, 466, 2217, 924, 2057, 11, 754, 544, 813, 300, 11, 767, 11, 51244, 51244, 12790, 924, 2057, 1920, 13, 51378, 51378, 8590, 586, 11, 309, 311, 1219, 7614, 13, 51460, 51460, 467, 311, 1219, 264, 591, 5184, 4282, 11, 457, 309, 311, 264, 912, 13, 51662, 51662, 400, 309, 14689, 294, 5883, 3319, 264, 17443, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.39039060804578996, "compression_ratio": 1.6446886446886446, "no_speech_prob": 1.568853076605592e-05}, {"id": 1538, "seek": 442548, "start": 4430.679999999999, "end": 4434.48, "text": " And the way you initialize is actually quite important.", "tokens": [50364, 407, 291, 393, 5883, 1125, 552, 11, 457, 309, 1985, 2489, 50484, 50484, 498, 436, 434, 4974, 13, 50624, 50624, 400, 264, 636, 291, 5883, 1125, 307, 767, 1596, 1021, 13, 50814, 50814, 407, 456, 311, 439, 3685, 295, 11733, 281, 5883, 1125, 721, 6108, 13, 51000, 51000, 1485, 295, 264, 11733, 390, 14479, 538, 452, 1277, 11, 1456, 556, 3286, 12, 51, 84, 11, 51136, 51136, 466, 2217, 924, 2057, 11, 754, 544, 813, 300, 11, 767, 11, 51244, 51244, 12790, 924, 2057, 1920, 13, 51378, 51378, 8590, 586, 11, 309, 311, 1219, 7614, 13, 51460, 51460, 467, 311, 1219, 264, 591, 5184, 4282, 11, 457, 309, 311, 264, 912, 13, 51662, 51662, 400, 309, 14689, 294, 5883, 3319, 264, 17443, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.39039060804578996, "compression_ratio": 1.6446886446886446, "no_speech_prob": 1.568853076605592e-05}, {"id": 1539, "seek": 442548, "start": 4434.48, "end": 4438.2, "text": " So there's all kinds of tricks to initialize things properly.", "tokens": [50364, 407, 291, 393, 5883, 1125, 552, 11, 457, 309, 1985, 2489, 50484, 50484, 498, 436, 434, 4974, 13, 50624, 50624, 400, 264, 636, 291, 5883, 1125, 307, 767, 1596, 1021, 13, 50814, 50814, 407, 456, 311, 439, 3685, 295, 11733, 281, 5883, 1125, 721, 6108, 13, 51000, 51000, 1485, 295, 264, 11733, 390, 14479, 538, 452, 1277, 11, 1456, 556, 3286, 12, 51, 84, 11, 51136, 51136, 466, 2217, 924, 2057, 11, 754, 544, 813, 300, 11, 767, 11, 51244, 51244, 12790, 924, 2057, 1920, 13, 51378, 51378, 8590, 586, 11, 309, 311, 1219, 7614, 13, 51460, 51460, 467, 311, 1219, 264, 591, 5184, 4282, 11, 457, 309, 311, 264, 912, 13, 51662, 51662, 400, 309, 14689, 294, 5883, 3319, 264, 17443, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.39039060804578996, "compression_ratio": 1.6446886446886446, "no_speech_prob": 1.568853076605592e-05}, {"id": 1540, "seek": 442548, "start": 4438.2, "end": 4440.919999999999, "text": " One of the tricks was invented by my friend, Leong Bo-Tu,", "tokens": [50364, 407, 291, 393, 5883, 1125, 552, 11, 457, 309, 1985, 2489, 50484, 50484, 498, 436, 434, 4974, 13, 50624, 50624, 400, 264, 636, 291, 5883, 1125, 307, 767, 1596, 1021, 13, 50814, 50814, 407, 456, 311, 439, 3685, 295, 11733, 281, 5883, 1125, 721, 6108, 13, 51000, 51000, 1485, 295, 264, 11733, 390, 14479, 538, 452, 1277, 11, 1456, 556, 3286, 12, 51, 84, 11, 51136, 51136, 466, 2217, 924, 2057, 11, 754, 544, 813, 300, 11, 767, 11, 51244, 51244, 12790, 924, 2057, 1920, 13, 51378, 51378, 8590, 586, 11, 309, 311, 1219, 7614, 13, 51460, 51460, 467, 311, 1219, 264, 591, 5184, 4282, 11, 457, 309, 311, 264, 912, 13, 51662, 51662, 400, 309, 14689, 294, 5883, 3319, 264, 17443, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.39039060804578996, "compression_ratio": 1.6446886446886446, "no_speech_prob": 1.568853076605592e-05}, {"id": 1541, "seek": 442548, "start": 4440.919999999999, "end": 4443.08, "text": " about 30 years ago, even more than that, actually,", "tokens": [50364, 407, 291, 393, 5883, 1125, 552, 11, 457, 309, 1985, 2489, 50484, 50484, 498, 436, 434, 4974, 13, 50624, 50624, 400, 264, 636, 291, 5883, 1125, 307, 767, 1596, 1021, 13, 50814, 50814, 407, 456, 311, 439, 3685, 295, 11733, 281, 5883, 1125, 721, 6108, 13, 51000, 51000, 1485, 295, 264, 11733, 390, 14479, 538, 452, 1277, 11, 1456, 556, 3286, 12, 51, 84, 11, 51136, 51136, 466, 2217, 924, 2057, 11, 754, 544, 813, 300, 11, 767, 11, 51244, 51244, 12790, 924, 2057, 1920, 13, 51378, 51378, 8590, 586, 11, 309, 311, 1219, 7614, 13, 51460, 51460, 467, 311, 1219, 264, 591, 5184, 4282, 11, 457, 309, 311, 264, 912, 13, 51662, 51662, 400, 309, 14689, 294, 5883, 3319, 264, 17443, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.39039060804578996, "compression_ratio": 1.6446886446886446, "no_speech_prob": 1.568853076605592e-05}, {"id": 1542, "seek": 442548, "start": 4443.08, "end": 4445.759999999999, "text": " 34 years ago almost.", "tokens": [50364, 407, 291, 393, 5883, 1125, 552, 11, 457, 309, 1985, 2489, 50484, 50484, 498, 436, 434, 4974, 13, 50624, 50624, 400, 264, 636, 291, 5883, 1125, 307, 767, 1596, 1021, 13, 50814, 50814, 407, 456, 311, 439, 3685, 295, 11733, 281, 5883, 1125, 721, 6108, 13, 51000, 51000, 1485, 295, 264, 11733, 390, 14479, 538, 452, 1277, 11, 1456, 556, 3286, 12, 51, 84, 11, 51136, 51136, 466, 2217, 924, 2057, 11, 754, 544, 813, 300, 11, 767, 11, 51244, 51244, 12790, 924, 2057, 1920, 13, 51378, 51378, 8590, 586, 11, 309, 311, 1219, 7614, 13, 51460, 51460, 467, 311, 1219, 264, 591, 5184, 4282, 11, 457, 309, 311, 264, 912, 13, 51662, 51662, 400, 309, 14689, 294, 5883, 3319, 264, 17443, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.39039060804578996, "compression_ratio": 1.6446886446886446, "no_speech_prob": 1.568853076605592e-05}, {"id": 1543, "seek": 442548, "start": 4445.759999999999, "end": 4447.4, "text": " Unfortunately now, it's called differently.", "tokens": [50364, 407, 291, 393, 5883, 1125, 552, 11, 457, 309, 1985, 2489, 50484, 50484, 498, 436, 434, 4974, 13, 50624, 50624, 400, 264, 636, 291, 5883, 1125, 307, 767, 1596, 1021, 13, 50814, 50814, 407, 456, 311, 439, 3685, 295, 11733, 281, 5883, 1125, 721, 6108, 13, 51000, 51000, 1485, 295, 264, 11733, 390, 14479, 538, 452, 1277, 11, 1456, 556, 3286, 12, 51, 84, 11, 51136, 51136, 466, 2217, 924, 2057, 11, 754, 544, 813, 300, 11, 767, 11, 51244, 51244, 12790, 924, 2057, 1920, 13, 51378, 51378, 8590, 586, 11, 309, 311, 1219, 7614, 13, 51460, 51460, 467, 311, 1219, 264, 591, 5184, 4282, 11, 457, 309, 311, 264, 912, 13, 51662, 51662, 400, 309, 14689, 294, 5883, 3319, 264, 17443, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.39039060804578996, "compression_ratio": 1.6446886446886446, "no_speech_prob": 1.568853076605592e-05}, {"id": 1544, "seek": 442548, "start": 4447.4, "end": 4451.44, "text": " It's called the Kaming trick, but it's the same.", "tokens": [50364, 407, 291, 393, 5883, 1125, 552, 11, 457, 309, 1985, 2489, 50484, 50484, 498, 436, 434, 4974, 13, 50624, 50624, 400, 264, 636, 291, 5883, 1125, 307, 767, 1596, 1021, 13, 50814, 50814, 407, 456, 311, 439, 3685, 295, 11733, 281, 5883, 1125, 721, 6108, 13, 51000, 51000, 1485, 295, 264, 11733, 390, 14479, 538, 452, 1277, 11, 1456, 556, 3286, 12, 51, 84, 11, 51136, 51136, 466, 2217, 924, 2057, 11, 754, 544, 813, 300, 11, 767, 11, 51244, 51244, 12790, 924, 2057, 1920, 13, 51378, 51378, 8590, 586, 11, 309, 311, 1219, 7614, 13, 51460, 51460, 467, 311, 1219, 264, 591, 5184, 4282, 11, 457, 309, 311, 264, 912, 13, 51662, 51662, 400, 309, 14689, 294, 5883, 3319, 264, 17443, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.39039060804578996, "compression_ratio": 1.6446886446886446, "no_speech_prob": 1.568853076605592e-05}, {"id": 1545, "seek": 442548, "start": 4451.44, "end": 4454.24, "text": " And it consists in initializing the weights", "tokens": [50364, 407, 291, 393, 5883, 1125, 552, 11, 457, 309, 1985, 2489, 50484, 50484, 498, 436, 434, 4974, 13, 50624, 50624, 400, 264, 636, 291, 5883, 1125, 307, 767, 1596, 1021, 13, 50814, 50814, 407, 456, 311, 439, 3685, 295, 11733, 281, 5883, 1125, 721, 6108, 13, 51000, 51000, 1485, 295, 264, 11733, 390, 14479, 538, 452, 1277, 11, 1456, 556, 3286, 12, 51, 84, 11, 51136, 51136, 466, 2217, 924, 2057, 11, 754, 544, 813, 300, 11, 767, 11, 51244, 51244, 12790, 924, 2057, 1920, 13, 51378, 51378, 8590, 586, 11, 309, 311, 1219, 7614, 13, 51460, 51460, 467, 311, 1219, 264, 591, 5184, 4282, 11, 457, 309, 311, 264, 912, 13, 51662, 51662, 400, 309, 14689, 294, 5883, 3319, 264, 17443, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.39039060804578996, "compression_ratio": 1.6446886446886446, "no_speech_prob": 1.568853076605592e-05}, {"id": 1546, "seek": 445424, "start": 4454.24, "end": 4457.04, "text": " in such a way that if a unit has many inputs,", "tokens": [50364, 294, 1270, 257, 636, 300, 498, 257, 4985, 575, 867, 15743, 11, 50504, 50504, 264, 17443, 366, 4356, 813, 498, 309, 575, 1326, 15743, 13, 50678, 50678, 400, 264, 1778, 337, 341, 307, 300, 291, 50768, 50768, 528, 264, 32807, 2408, 281, 9810, 362, 512, 10585, 2158, 13, 51044, 51044, 759, 264, 4846, 9102, 362, 512, 10585, 2158, 11, 51160, 51160, 718, 311, 584, 21977, 502, 420, 746, 411, 341, 11, 51354, 51354, 293, 291, 434, 15866, 257, 32807, 2408, 295, 552, 11, 51502, 51502, 264, 2744, 295, 264, 32807, 2408, 307, 516, 281, 1852, 411, 264, 3732, 51726, 51726, 5593, 295, 264, 1230, 295, 15743, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11982015661291175, "compression_ratio": 1.8602620087336244, "no_speech_prob": 7.36116708139889e-05}, {"id": 1547, "seek": 445424, "start": 4457.04, "end": 4460.5199999999995, "text": " the weights are smaller than if it has few inputs.", "tokens": [50364, 294, 1270, 257, 636, 300, 498, 257, 4985, 575, 867, 15743, 11, 50504, 50504, 264, 17443, 366, 4356, 813, 498, 309, 575, 1326, 15743, 13, 50678, 50678, 400, 264, 1778, 337, 341, 307, 300, 291, 50768, 50768, 528, 264, 32807, 2408, 281, 9810, 362, 512, 10585, 2158, 13, 51044, 51044, 759, 264, 4846, 9102, 362, 512, 10585, 2158, 11, 51160, 51160, 718, 311, 584, 21977, 502, 420, 746, 411, 341, 11, 51354, 51354, 293, 291, 434, 15866, 257, 32807, 2408, 295, 552, 11, 51502, 51502, 264, 2744, 295, 264, 32807, 2408, 307, 516, 281, 1852, 411, 264, 3732, 51726, 51726, 5593, 295, 264, 1230, 295, 15743, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11982015661291175, "compression_ratio": 1.8602620087336244, "no_speech_prob": 7.36116708139889e-05}, {"id": 1548, "seek": 445424, "start": 4460.5199999999995, "end": 4462.32, "text": " And the reason for this is that you", "tokens": [50364, 294, 1270, 257, 636, 300, 498, 257, 4985, 575, 867, 15743, 11, 50504, 50504, 264, 17443, 366, 4356, 813, 498, 309, 575, 1326, 15743, 13, 50678, 50678, 400, 264, 1778, 337, 341, 307, 300, 291, 50768, 50768, 528, 264, 32807, 2408, 281, 9810, 362, 512, 10585, 2158, 13, 51044, 51044, 759, 264, 4846, 9102, 362, 512, 10585, 2158, 11, 51160, 51160, 718, 311, 584, 21977, 502, 420, 746, 411, 341, 11, 51354, 51354, 293, 291, 434, 15866, 257, 32807, 2408, 295, 552, 11, 51502, 51502, 264, 2744, 295, 264, 32807, 2408, 307, 516, 281, 1852, 411, 264, 3732, 51726, 51726, 5593, 295, 264, 1230, 295, 15743, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11982015661291175, "compression_ratio": 1.8602620087336244, "no_speech_prob": 7.36116708139889e-05}, {"id": 1549, "seek": 445424, "start": 4462.32, "end": 4467.84, "text": " want the weighted sum to roughly have some reasonable value.", "tokens": [50364, 294, 1270, 257, 636, 300, 498, 257, 4985, 575, 867, 15743, 11, 50504, 50504, 264, 17443, 366, 4356, 813, 498, 309, 575, 1326, 15743, 13, 50678, 50678, 400, 264, 1778, 337, 341, 307, 300, 291, 50768, 50768, 528, 264, 32807, 2408, 281, 9810, 362, 512, 10585, 2158, 13, 51044, 51044, 759, 264, 4846, 9102, 362, 512, 10585, 2158, 11, 51160, 51160, 718, 311, 584, 21977, 502, 420, 746, 411, 341, 11, 51354, 51354, 293, 291, 434, 15866, 257, 32807, 2408, 295, 552, 11, 51502, 51502, 264, 2744, 295, 264, 32807, 2408, 307, 516, 281, 1852, 411, 264, 3732, 51726, 51726, 5593, 295, 264, 1230, 295, 15743, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11982015661291175, "compression_ratio": 1.8602620087336244, "no_speech_prob": 7.36116708139889e-05}, {"id": 1550, "seek": 445424, "start": 4467.84, "end": 4470.16, "text": " If the input variables have some reasonable value,", "tokens": [50364, 294, 1270, 257, 636, 300, 498, 257, 4985, 575, 867, 15743, 11, 50504, 50504, 264, 17443, 366, 4356, 813, 498, 309, 575, 1326, 15743, 13, 50678, 50678, 400, 264, 1778, 337, 341, 307, 300, 291, 50768, 50768, 528, 264, 32807, 2408, 281, 9810, 362, 512, 10585, 2158, 13, 51044, 51044, 759, 264, 4846, 9102, 362, 512, 10585, 2158, 11, 51160, 51160, 718, 311, 584, 21977, 502, 420, 746, 411, 341, 11, 51354, 51354, 293, 291, 434, 15866, 257, 32807, 2408, 295, 552, 11, 51502, 51502, 264, 2744, 295, 264, 32807, 2408, 307, 516, 281, 1852, 411, 264, 3732, 51726, 51726, 5593, 295, 264, 1230, 295, 15743, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11982015661291175, "compression_ratio": 1.8602620087336244, "no_speech_prob": 7.36116708139889e-05}, {"id": 1551, "seek": 445424, "start": 4470.16, "end": 4474.04, "text": " let's say variance 1 or something like this,", "tokens": [50364, 294, 1270, 257, 636, 300, 498, 257, 4985, 575, 867, 15743, 11, 50504, 50504, 264, 17443, 366, 4356, 813, 498, 309, 575, 1326, 15743, 13, 50678, 50678, 400, 264, 1778, 337, 341, 307, 300, 291, 50768, 50768, 528, 264, 32807, 2408, 281, 9810, 362, 512, 10585, 2158, 13, 51044, 51044, 759, 264, 4846, 9102, 362, 512, 10585, 2158, 11, 51160, 51160, 718, 311, 584, 21977, 502, 420, 746, 411, 341, 11, 51354, 51354, 293, 291, 434, 15866, 257, 32807, 2408, 295, 552, 11, 51502, 51502, 264, 2744, 295, 264, 32807, 2408, 307, 516, 281, 1852, 411, 264, 3732, 51726, 51726, 5593, 295, 264, 1230, 295, 15743, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11982015661291175, "compression_ratio": 1.8602620087336244, "no_speech_prob": 7.36116708139889e-05}, {"id": 1552, "seek": 445424, "start": 4474.04, "end": 4477.0, "text": " and you're computing a weighted sum of them,", "tokens": [50364, 294, 1270, 257, 636, 300, 498, 257, 4985, 575, 867, 15743, 11, 50504, 50504, 264, 17443, 366, 4356, 813, 498, 309, 575, 1326, 15743, 13, 50678, 50678, 400, 264, 1778, 337, 341, 307, 300, 291, 50768, 50768, 528, 264, 32807, 2408, 281, 9810, 362, 512, 10585, 2158, 13, 51044, 51044, 759, 264, 4846, 9102, 362, 512, 10585, 2158, 11, 51160, 51160, 718, 311, 584, 21977, 502, 420, 746, 411, 341, 11, 51354, 51354, 293, 291, 434, 15866, 257, 32807, 2408, 295, 552, 11, 51502, 51502, 264, 2744, 295, 264, 32807, 2408, 307, 516, 281, 1852, 411, 264, 3732, 51726, 51726, 5593, 295, 264, 1230, 295, 15743, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11982015661291175, "compression_ratio": 1.8602620087336244, "no_speech_prob": 7.36116708139889e-05}, {"id": 1553, "seek": 445424, "start": 4477.0, "end": 4481.48, "text": " the size of the weighted sum is going to grow like the square", "tokens": [50364, 294, 1270, 257, 636, 300, 498, 257, 4985, 575, 867, 15743, 11, 50504, 50504, 264, 17443, 366, 4356, 813, 498, 309, 575, 1326, 15743, 13, 50678, 50678, 400, 264, 1778, 337, 341, 307, 300, 291, 50768, 50768, 528, 264, 32807, 2408, 281, 9810, 362, 512, 10585, 2158, 13, 51044, 51044, 759, 264, 4846, 9102, 362, 512, 10585, 2158, 11, 51160, 51160, 718, 311, 584, 21977, 502, 420, 746, 411, 341, 11, 51354, 51354, 293, 291, 434, 15866, 257, 32807, 2408, 295, 552, 11, 51502, 51502, 264, 2744, 295, 264, 32807, 2408, 307, 516, 281, 1852, 411, 264, 3732, 51726, 51726, 5593, 295, 264, 1230, 295, 15743, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11982015661291175, "compression_ratio": 1.8602620087336244, "no_speech_prob": 7.36116708139889e-05}, {"id": 1554, "seek": 445424, "start": 4481.48, "end": 4482.84, "text": " root of the number of inputs.", "tokens": [50364, 294, 1270, 257, 636, 300, 498, 257, 4985, 575, 867, 15743, 11, 50504, 50504, 264, 17443, 366, 4356, 813, 498, 309, 575, 1326, 15743, 13, 50678, 50678, 400, 264, 1778, 337, 341, 307, 300, 291, 50768, 50768, 528, 264, 32807, 2408, 281, 9810, 362, 512, 10585, 2158, 13, 51044, 51044, 759, 264, 4846, 9102, 362, 512, 10585, 2158, 11, 51160, 51160, 718, 311, 584, 21977, 502, 420, 746, 411, 341, 11, 51354, 51354, 293, 291, 434, 15866, 257, 32807, 2408, 295, 552, 11, 51502, 51502, 264, 2744, 295, 264, 32807, 2408, 307, 516, 281, 1852, 411, 264, 3732, 51726, 51726, 5593, 295, 264, 1230, 295, 15743, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.11982015661291175, "compression_ratio": 1.8602620087336244, "no_speech_prob": 7.36116708139889e-05}, {"id": 1555, "seek": 448284, "start": 4482.84, "end": 4485.28, "text": " And so you want to set the weights to something", "tokens": [50364, 400, 370, 291, 528, 281, 992, 264, 17443, 281, 746, 50486, 50486, 411, 264, 17340, 3732, 5593, 498, 291, 528, 264, 32807, 2408, 50600, 50600, 281, 312, 466, 264, 912, 2744, 382, 1184, 295, 264, 15743, 13, 50838, 50838, 407, 300, 311, 3094, 666, 9953, 51, 284, 339, 13, 50960, 50960, 509, 393, 818, 341, 5883, 2144, 10747, 13, 51160, 51160, 708, 311, 264, 1900, 1315, 295, 309, 11, 28327, 78, 30, 51229, 51229, 286, 393, 380, 1604, 13, 51294, 51294, 440, 472, 300, 307, 30, 51358, 51358, 440, 591, 5184, 11, 591, 5184, 11, 591, 5184, 675, 13, 51436, 51436, 1396, 456, 307, 264, 44653, 11, 293, 550, 456, 307, 611, 6342, 51568, 51568, 321, 362, 294, 9953, 51, 284, 339, 13, 51636, 51636, 865, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.24907728005911559, "compression_ratio": 1.6546184738955823, "no_speech_prob": 1.4737643141415901e-05}, {"id": 1556, "seek": 448284, "start": 4485.28, "end": 4487.56, "text": " like the inverse square root if you want the weighted sum", "tokens": [50364, 400, 370, 291, 528, 281, 992, 264, 17443, 281, 746, 50486, 50486, 411, 264, 17340, 3732, 5593, 498, 291, 528, 264, 32807, 2408, 50600, 50600, 281, 312, 466, 264, 912, 2744, 382, 1184, 295, 264, 15743, 13, 50838, 50838, 407, 300, 311, 3094, 666, 9953, 51, 284, 339, 13, 50960, 50960, 509, 393, 818, 341, 5883, 2144, 10747, 13, 51160, 51160, 708, 311, 264, 1900, 1315, 295, 309, 11, 28327, 78, 30, 51229, 51229, 286, 393, 380, 1604, 13, 51294, 51294, 440, 472, 300, 307, 30, 51358, 51358, 440, 591, 5184, 11, 591, 5184, 11, 591, 5184, 675, 13, 51436, 51436, 1396, 456, 307, 264, 44653, 11, 293, 550, 456, 307, 611, 6342, 51568, 51568, 321, 362, 294, 9953, 51, 284, 339, 13, 51636, 51636, 865, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.24907728005911559, "compression_ratio": 1.6546184738955823, "no_speech_prob": 1.4737643141415901e-05}, {"id": 1557, "seek": 448284, "start": 4487.56, "end": 4492.32, "text": " to be about the same size as each of the inputs.", "tokens": [50364, 400, 370, 291, 528, 281, 992, 264, 17443, 281, 746, 50486, 50486, 411, 264, 17340, 3732, 5593, 498, 291, 528, 264, 32807, 2408, 50600, 50600, 281, 312, 466, 264, 912, 2744, 382, 1184, 295, 264, 15743, 13, 50838, 50838, 407, 300, 311, 3094, 666, 9953, 51, 284, 339, 13, 50960, 50960, 509, 393, 818, 341, 5883, 2144, 10747, 13, 51160, 51160, 708, 311, 264, 1900, 1315, 295, 309, 11, 28327, 78, 30, 51229, 51229, 286, 393, 380, 1604, 13, 51294, 51294, 440, 472, 300, 307, 30, 51358, 51358, 440, 591, 5184, 11, 591, 5184, 11, 591, 5184, 675, 13, 51436, 51436, 1396, 456, 307, 264, 44653, 11, 293, 550, 456, 307, 611, 6342, 51568, 51568, 321, 362, 294, 9953, 51, 284, 339, 13, 51636, 51636, 865, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.24907728005911559, "compression_ratio": 1.6546184738955823, "no_speech_prob": 1.4737643141415901e-05}, {"id": 1558, "seek": 448284, "start": 4492.32, "end": 4494.76, "text": " So that's built into PyTorch.", "tokens": [50364, 400, 370, 291, 528, 281, 992, 264, 17443, 281, 746, 50486, 50486, 411, 264, 17340, 3732, 5593, 498, 291, 528, 264, 32807, 2408, 50600, 50600, 281, 312, 466, 264, 912, 2744, 382, 1184, 295, 264, 15743, 13, 50838, 50838, 407, 300, 311, 3094, 666, 9953, 51, 284, 339, 13, 50960, 50960, 509, 393, 818, 341, 5883, 2144, 10747, 13, 51160, 51160, 708, 311, 264, 1900, 1315, 295, 309, 11, 28327, 78, 30, 51229, 51229, 286, 393, 380, 1604, 13, 51294, 51294, 440, 472, 300, 307, 30, 51358, 51358, 440, 591, 5184, 11, 591, 5184, 11, 591, 5184, 675, 13, 51436, 51436, 1396, 456, 307, 264, 44653, 11, 293, 550, 456, 307, 611, 6342, 51568, 51568, 321, 362, 294, 9953, 51, 284, 339, 13, 51636, 51636, 865, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.24907728005911559, "compression_ratio": 1.6546184738955823, "no_speech_prob": 1.4737643141415901e-05}, {"id": 1559, "seek": 448284, "start": 4494.76, "end": 4498.76, "text": " You can call this initialization procedure.", "tokens": [50364, 400, 370, 291, 528, 281, 992, 264, 17443, 281, 746, 50486, 50486, 411, 264, 17340, 3732, 5593, 498, 291, 528, 264, 32807, 2408, 50600, 50600, 281, 312, 466, 264, 912, 2744, 382, 1184, 295, 264, 15743, 13, 50838, 50838, 407, 300, 311, 3094, 666, 9953, 51, 284, 339, 13, 50960, 50960, 509, 393, 818, 341, 5883, 2144, 10747, 13, 51160, 51160, 708, 311, 264, 1900, 1315, 295, 309, 11, 28327, 78, 30, 51229, 51229, 286, 393, 380, 1604, 13, 51294, 51294, 440, 472, 300, 307, 30, 51358, 51358, 440, 591, 5184, 11, 591, 5184, 11, 591, 5184, 675, 13, 51436, 51436, 1396, 456, 307, 264, 44653, 11, 293, 550, 456, 307, 611, 6342, 51568, 51568, 321, 362, 294, 9953, 51, 284, 339, 13, 51636, 51636, 865, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.24907728005911559, "compression_ratio": 1.6546184738955823, "no_speech_prob": 1.4737643141415901e-05}, {"id": 1560, "seek": 448284, "start": 4498.76, "end": 4500.14, "text": " What's the exact name of it, Alfredo?", "tokens": [50364, 400, 370, 291, 528, 281, 992, 264, 17443, 281, 746, 50486, 50486, 411, 264, 17340, 3732, 5593, 498, 291, 528, 264, 32807, 2408, 50600, 50600, 281, 312, 466, 264, 912, 2744, 382, 1184, 295, 264, 15743, 13, 50838, 50838, 407, 300, 311, 3094, 666, 9953, 51, 284, 339, 13, 50960, 50960, 509, 393, 818, 341, 5883, 2144, 10747, 13, 51160, 51160, 708, 311, 264, 1900, 1315, 295, 309, 11, 28327, 78, 30, 51229, 51229, 286, 393, 380, 1604, 13, 51294, 51294, 440, 472, 300, 307, 30, 51358, 51358, 440, 591, 5184, 11, 591, 5184, 11, 591, 5184, 675, 13, 51436, 51436, 1396, 456, 307, 264, 44653, 11, 293, 550, 456, 307, 611, 6342, 51568, 51568, 321, 362, 294, 9953, 51, 284, 339, 13, 51636, 51636, 865, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.24907728005911559, "compression_ratio": 1.6546184738955823, "no_speech_prob": 1.4737643141415901e-05}, {"id": 1561, "seek": 448284, "start": 4500.14, "end": 4501.4400000000005, "text": " I can't remember.", "tokens": [50364, 400, 370, 291, 528, 281, 992, 264, 17443, 281, 746, 50486, 50486, 411, 264, 17340, 3732, 5593, 498, 291, 528, 264, 32807, 2408, 50600, 50600, 281, 312, 466, 264, 912, 2744, 382, 1184, 295, 264, 15743, 13, 50838, 50838, 407, 300, 311, 3094, 666, 9953, 51, 284, 339, 13, 50960, 50960, 509, 393, 818, 341, 5883, 2144, 10747, 13, 51160, 51160, 708, 311, 264, 1900, 1315, 295, 309, 11, 28327, 78, 30, 51229, 51229, 286, 393, 380, 1604, 13, 51294, 51294, 440, 472, 300, 307, 30, 51358, 51358, 440, 591, 5184, 11, 591, 5184, 11, 591, 5184, 675, 13, 51436, 51436, 1396, 456, 307, 264, 44653, 11, 293, 550, 456, 307, 611, 6342, 51568, 51568, 321, 362, 294, 9953, 51, 284, 339, 13, 51636, 51636, 865, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.24907728005911559, "compression_ratio": 1.6546184738955823, "no_speech_prob": 1.4737643141415901e-05}, {"id": 1562, "seek": 448284, "start": 4501.4400000000005, "end": 4502.72, "text": " The one that is?", "tokens": [50364, 400, 370, 291, 528, 281, 992, 264, 17443, 281, 746, 50486, 50486, 411, 264, 17340, 3732, 5593, 498, 291, 528, 264, 32807, 2408, 50600, 50600, 281, 312, 466, 264, 912, 2744, 382, 1184, 295, 264, 15743, 13, 50838, 50838, 407, 300, 311, 3094, 666, 9953, 51, 284, 339, 13, 50960, 50960, 509, 393, 818, 341, 5883, 2144, 10747, 13, 51160, 51160, 708, 311, 264, 1900, 1315, 295, 309, 11, 28327, 78, 30, 51229, 51229, 286, 393, 380, 1604, 13, 51294, 51294, 440, 472, 300, 307, 30, 51358, 51358, 440, 591, 5184, 11, 591, 5184, 11, 591, 5184, 675, 13, 51436, 51436, 1396, 456, 307, 264, 44653, 11, 293, 550, 456, 307, 611, 6342, 51568, 51568, 321, 362, 294, 9953, 51, 284, 339, 13, 51636, 51636, 865, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.24907728005911559, "compression_ratio": 1.6546184738955823, "no_speech_prob": 1.4737643141415901e-05}, {"id": 1563, "seek": 448284, "start": 4502.72, "end": 4504.28, "text": " The Kaming, Kaming, Kaminghe.", "tokens": [50364, 400, 370, 291, 528, 281, 992, 264, 17443, 281, 746, 50486, 50486, 411, 264, 17340, 3732, 5593, 498, 291, 528, 264, 32807, 2408, 50600, 50600, 281, 312, 466, 264, 912, 2744, 382, 1184, 295, 264, 15743, 13, 50838, 50838, 407, 300, 311, 3094, 666, 9953, 51, 284, 339, 13, 50960, 50960, 509, 393, 818, 341, 5883, 2144, 10747, 13, 51160, 51160, 708, 311, 264, 1900, 1315, 295, 309, 11, 28327, 78, 30, 51229, 51229, 286, 393, 380, 1604, 13, 51294, 51294, 440, 472, 300, 307, 30, 51358, 51358, 440, 591, 5184, 11, 591, 5184, 11, 591, 5184, 675, 13, 51436, 51436, 1396, 456, 307, 264, 44653, 11, 293, 550, 456, 307, 611, 6342, 51568, 51568, 321, 362, 294, 9953, 51, 284, 339, 13, 51636, 51636, 865, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.24907728005911559, "compression_ratio": 1.6546184738955823, "no_speech_prob": 1.4737643141415901e-05}, {"id": 1564, "seek": 448284, "start": 4504.28, "end": 4506.92, "text": " Then there is the Xavier, and then there is also yours", "tokens": [50364, 400, 370, 291, 528, 281, 992, 264, 17443, 281, 746, 50486, 50486, 411, 264, 17340, 3732, 5593, 498, 291, 528, 264, 32807, 2408, 50600, 50600, 281, 312, 466, 264, 912, 2744, 382, 1184, 295, 264, 15743, 13, 50838, 50838, 407, 300, 311, 3094, 666, 9953, 51, 284, 339, 13, 50960, 50960, 509, 393, 818, 341, 5883, 2144, 10747, 13, 51160, 51160, 708, 311, 264, 1900, 1315, 295, 309, 11, 28327, 78, 30, 51229, 51229, 286, 393, 380, 1604, 13, 51294, 51294, 440, 472, 300, 307, 30, 51358, 51358, 440, 591, 5184, 11, 591, 5184, 11, 591, 5184, 675, 13, 51436, 51436, 1396, 456, 307, 264, 44653, 11, 293, 550, 456, 307, 611, 6342, 51568, 51568, 321, 362, 294, 9953, 51, 284, 339, 13, 51636, 51636, 865, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.24907728005911559, "compression_ratio": 1.6546184738955823, "no_speech_prob": 1.4737643141415901e-05}, {"id": 1565, "seek": 448284, "start": 4506.92, "end": 4508.28, "text": " we have in PyTorch.", "tokens": [50364, 400, 370, 291, 528, 281, 992, 264, 17443, 281, 746, 50486, 50486, 411, 264, 17340, 3732, 5593, 498, 291, 528, 264, 32807, 2408, 50600, 50600, 281, 312, 466, 264, 912, 2744, 382, 1184, 295, 264, 15743, 13, 50838, 50838, 407, 300, 311, 3094, 666, 9953, 51, 284, 339, 13, 50960, 50960, 509, 393, 818, 341, 5883, 2144, 10747, 13, 51160, 51160, 708, 311, 264, 1900, 1315, 295, 309, 11, 28327, 78, 30, 51229, 51229, 286, 393, 380, 1604, 13, 51294, 51294, 440, 472, 300, 307, 30, 51358, 51358, 440, 591, 5184, 11, 591, 5184, 11, 591, 5184, 675, 13, 51436, 51436, 1396, 456, 307, 264, 44653, 11, 293, 550, 456, 307, 611, 6342, 51568, 51568, 321, 362, 294, 9953, 51, 284, 339, 13, 51636, 51636, 865, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.24907728005911559, "compression_ratio": 1.6546184738955823, "no_speech_prob": 1.4737643141415901e-05}, {"id": 1566, "seek": 448284, "start": 4508.28, "end": 4509.2, "text": " Yeah.", "tokens": [50364, 400, 370, 291, 528, 281, 992, 264, 17443, 281, 746, 50486, 50486, 411, 264, 17340, 3732, 5593, 498, 291, 528, 264, 32807, 2408, 50600, 50600, 281, 312, 466, 264, 912, 2744, 382, 1184, 295, 264, 15743, 13, 50838, 50838, 407, 300, 311, 3094, 666, 9953, 51, 284, 339, 13, 50960, 50960, 509, 393, 818, 341, 5883, 2144, 10747, 13, 51160, 51160, 708, 311, 264, 1900, 1315, 295, 309, 11, 28327, 78, 30, 51229, 51229, 286, 393, 380, 1604, 13, 51294, 51294, 440, 472, 300, 307, 30, 51358, 51358, 440, 591, 5184, 11, 591, 5184, 11, 591, 5184, 675, 13, 51436, 51436, 1396, 456, 307, 264, 44653, 11, 293, 550, 456, 307, 611, 6342, 51568, 51568, 321, 362, 294, 9953, 51, 284, 339, 13, 51636, 51636, 865, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.24907728005911559, "compression_ratio": 1.6546184738955823, "no_speech_prob": 1.4737643141415901e-05}, {"id": 1567, "seek": 450920, "start": 4509.2, "end": 4513.12, "text": " They're slightly different, but they kind of do the same more", "tokens": [50364, 814, 434, 4748, 819, 11, 457, 436, 733, 295, 360, 264, 912, 544, 50560, 50560, 420, 1570, 13, 50596, 50596, 865, 11, 264, 44653, 12, 38, 752, 621, 1459, 3037, 13, 50676, 50676, 865, 13, 50708, 50708, 865, 13, 50744, 50744, 865, 11, 341, 472, 41347, 538, 264, 18564, 259, 293, 18564, 259, 13, 50960, 50960, 821, 311, 3683, 4470, 6828, 13, 51020, 51020, 407, 286, 2378, 380, 2825, 1939, 466, 437, 264, 3278, 30867, 4470, 307, 13, 51184, 51184, 583, 3278, 30867, 4470, 307, 257, 1729, 2063, 51296, 51296, 300, 311, 1143, 337, 21538, 13, 51370, 51370, 286, 603, 1391, 751, 466, 341, 958, 1243, 11, 51464, 51464, 293, 286, 603, 362, 512, 565, 412, 264, 917, 295, 341, 7991, 13, 51668, 51668, 639, 307, 337, 21538, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.25608464291221217, "compression_ratio": 1.7234848484848484, "no_speech_prob": 3.321167241665535e-05}, {"id": 1568, "seek": 450920, "start": 4513.12, "end": 4513.84, "text": " or less.", "tokens": [50364, 814, 434, 4748, 819, 11, 457, 436, 733, 295, 360, 264, 912, 544, 50560, 50560, 420, 1570, 13, 50596, 50596, 865, 11, 264, 44653, 12, 38, 752, 621, 1459, 3037, 13, 50676, 50676, 865, 13, 50708, 50708, 865, 13, 50744, 50744, 865, 11, 341, 472, 41347, 538, 264, 18564, 259, 293, 18564, 259, 13, 50960, 50960, 821, 311, 3683, 4470, 6828, 13, 51020, 51020, 407, 286, 2378, 380, 2825, 1939, 466, 437, 264, 3278, 30867, 4470, 307, 13, 51184, 51184, 583, 3278, 30867, 4470, 307, 257, 1729, 2063, 51296, 51296, 300, 311, 1143, 337, 21538, 13, 51370, 51370, 286, 603, 1391, 751, 466, 341, 958, 1243, 11, 51464, 51464, 293, 286, 603, 362, 512, 565, 412, 264, 917, 295, 341, 7991, 13, 51668, 51668, 639, 307, 337, 21538, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.25608464291221217, "compression_ratio": 1.7234848484848484, "no_speech_prob": 3.321167241665535e-05}, {"id": 1569, "seek": 450920, "start": 4513.84, "end": 4515.44, "text": " Yeah, the Xavier-Gloireau version.", "tokens": [50364, 814, 434, 4748, 819, 11, 457, 436, 733, 295, 360, 264, 912, 544, 50560, 50560, 420, 1570, 13, 50596, 50596, 865, 11, 264, 44653, 12, 38, 752, 621, 1459, 3037, 13, 50676, 50676, 865, 13, 50708, 50708, 865, 13, 50744, 50744, 865, 11, 341, 472, 41347, 538, 264, 18564, 259, 293, 18564, 259, 13, 50960, 50960, 821, 311, 3683, 4470, 6828, 13, 51020, 51020, 407, 286, 2378, 380, 2825, 1939, 466, 437, 264, 3278, 30867, 4470, 307, 13, 51184, 51184, 583, 3278, 30867, 4470, 307, 257, 1729, 2063, 51296, 51296, 300, 311, 1143, 337, 21538, 13, 51370, 51370, 286, 603, 1391, 751, 466, 341, 958, 1243, 11, 51464, 51464, 293, 286, 603, 362, 512, 565, 412, 264, 917, 295, 341, 7991, 13, 51668, 51668, 639, 307, 337, 21538, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.25608464291221217, "compression_ratio": 1.7234848484848484, "no_speech_prob": 3.321167241665535e-05}, {"id": 1570, "seek": 450920, "start": 4515.44, "end": 4516.08, "text": " Yeah.", "tokens": [50364, 814, 434, 4748, 819, 11, 457, 436, 733, 295, 360, 264, 912, 544, 50560, 50560, 420, 1570, 13, 50596, 50596, 865, 11, 264, 44653, 12, 38, 752, 621, 1459, 3037, 13, 50676, 50676, 865, 13, 50708, 50708, 865, 13, 50744, 50744, 865, 11, 341, 472, 41347, 538, 264, 18564, 259, 293, 18564, 259, 13, 50960, 50960, 821, 311, 3683, 4470, 6828, 13, 51020, 51020, 407, 286, 2378, 380, 2825, 1939, 466, 437, 264, 3278, 30867, 4470, 307, 13, 51184, 51184, 583, 3278, 30867, 4470, 307, 257, 1729, 2063, 51296, 51296, 300, 311, 1143, 337, 21538, 13, 51370, 51370, 286, 603, 1391, 751, 466, 341, 958, 1243, 11, 51464, 51464, 293, 286, 603, 362, 512, 565, 412, 264, 917, 295, 341, 7991, 13, 51668, 51668, 639, 307, 337, 21538, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.25608464291221217, "compression_ratio": 1.7234848484848484, "no_speech_prob": 3.321167241665535e-05}, {"id": 1571, "seek": 450920, "start": 4516.08, "end": 4516.8, "text": " Yeah.", "tokens": [50364, 814, 434, 4748, 819, 11, 457, 436, 733, 295, 360, 264, 912, 544, 50560, 50560, 420, 1570, 13, 50596, 50596, 865, 11, 264, 44653, 12, 38, 752, 621, 1459, 3037, 13, 50676, 50676, 865, 13, 50708, 50708, 865, 13, 50744, 50744, 865, 11, 341, 472, 41347, 538, 264, 18564, 259, 293, 18564, 259, 13, 50960, 50960, 821, 311, 3683, 4470, 6828, 13, 51020, 51020, 407, 286, 2378, 380, 2825, 1939, 466, 437, 264, 3278, 30867, 4470, 307, 13, 51184, 51184, 583, 3278, 30867, 4470, 307, 257, 1729, 2063, 51296, 51296, 300, 311, 1143, 337, 21538, 13, 51370, 51370, 286, 603, 1391, 751, 466, 341, 958, 1243, 11, 51464, 51464, 293, 286, 603, 362, 512, 565, 412, 264, 917, 295, 341, 7991, 13, 51668, 51668, 639, 307, 337, 21538, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.25608464291221217, "compression_ratio": 1.7234848484848484, "no_speech_prob": 3.321167241665535e-05}, {"id": 1572, "seek": 450920, "start": 4516.8, "end": 4521.12, "text": " Yeah, this one divides by the Fanin and Fanin.", "tokens": [50364, 814, 434, 4748, 819, 11, 457, 436, 733, 295, 360, 264, 912, 544, 50560, 50560, 420, 1570, 13, 50596, 50596, 865, 11, 264, 44653, 12, 38, 752, 621, 1459, 3037, 13, 50676, 50676, 865, 13, 50708, 50708, 865, 13, 50744, 50744, 865, 11, 341, 472, 41347, 538, 264, 18564, 259, 293, 18564, 259, 13, 50960, 50960, 821, 311, 3683, 4470, 6828, 13, 51020, 51020, 407, 286, 2378, 380, 2825, 1939, 466, 437, 264, 3278, 30867, 4470, 307, 13, 51184, 51184, 583, 3278, 30867, 4470, 307, 257, 1729, 2063, 51296, 51296, 300, 311, 1143, 337, 21538, 13, 51370, 51370, 286, 603, 1391, 751, 466, 341, 958, 1243, 11, 51464, 51464, 293, 286, 603, 362, 512, 565, 412, 264, 917, 295, 341, 7991, 13, 51668, 51668, 639, 307, 337, 21538, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.25608464291221217, "compression_ratio": 1.7234848484848484, "no_speech_prob": 3.321167241665535e-05}, {"id": 1573, "seek": 450920, "start": 4521.12, "end": 4522.32, "text": " There's various loss functions.", "tokens": [50364, 814, 434, 4748, 819, 11, 457, 436, 733, 295, 360, 264, 912, 544, 50560, 50560, 420, 1570, 13, 50596, 50596, 865, 11, 264, 44653, 12, 38, 752, 621, 1459, 3037, 13, 50676, 50676, 865, 13, 50708, 50708, 865, 13, 50744, 50744, 865, 11, 341, 472, 41347, 538, 264, 18564, 259, 293, 18564, 259, 13, 50960, 50960, 821, 311, 3683, 4470, 6828, 13, 51020, 51020, 407, 286, 2378, 380, 2825, 1939, 466, 437, 264, 3278, 30867, 4470, 307, 13, 51184, 51184, 583, 3278, 30867, 4470, 307, 257, 1729, 2063, 51296, 51296, 300, 311, 1143, 337, 21538, 13, 51370, 51370, 286, 603, 1391, 751, 466, 341, 958, 1243, 11, 51464, 51464, 293, 286, 603, 362, 512, 565, 412, 264, 917, 295, 341, 7991, 13, 51668, 51668, 639, 307, 337, 21538, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.25608464291221217, "compression_ratio": 1.7234848484848484, "no_speech_prob": 3.321167241665535e-05}, {"id": 1574, "seek": 450920, "start": 4522.32, "end": 4525.599999999999, "text": " So I haven't talked yet about what the cross entropy loss is.", "tokens": [50364, 814, 434, 4748, 819, 11, 457, 436, 733, 295, 360, 264, 912, 544, 50560, 50560, 420, 1570, 13, 50596, 50596, 865, 11, 264, 44653, 12, 38, 752, 621, 1459, 3037, 13, 50676, 50676, 865, 13, 50708, 50708, 865, 13, 50744, 50744, 865, 11, 341, 472, 41347, 538, 264, 18564, 259, 293, 18564, 259, 13, 50960, 50960, 821, 311, 3683, 4470, 6828, 13, 51020, 51020, 407, 286, 2378, 380, 2825, 1939, 466, 437, 264, 3278, 30867, 4470, 307, 13, 51184, 51184, 583, 3278, 30867, 4470, 307, 257, 1729, 2063, 51296, 51296, 300, 311, 1143, 337, 21538, 13, 51370, 51370, 286, 603, 1391, 751, 466, 341, 958, 1243, 11, 51464, 51464, 293, 286, 603, 362, 512, 565, 412, 264, 917, 295, 341, 7991, 13, 51668, 51668, 639, 307, 337, 21538, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.25608464291221217, "compression_ratio": 1.7234848484848484, "no_speech_prob": 3.321167241665535e-05}, {"id": 1575, "seek": 450920, "start": 4525.599999999999, "end": 4527.84, "text": " But cross entropy loss is a particular cost", "tokens": [50364, 814, 434, 4748, 819, 11, 457, 436, 733, 295, 360, 264, 912, 544, 50560, 50560, 420, 1570, 13, 50596, 50596, 865, 11, 264, 44653, 12, 38, 752, 621, 1459, 3037, 13, 50676, 50676, 865, 13, 50708, 50708, 865, 13, 50744, 50744, 865, 11, 341, 472, 41347, 538, 264, 18564, 259, 293, 18564, 259, 13, 50960, 50960, 821, 311, 3683, 4470, 6828, 13, 51020, 51020, 407, 286, 2378, 380, 2825, 1939, 466, 437, 264, 3278, 30867, 4470, 307, 13, 51184, 51184, 583, 3278, 30867, 4470, 307, 257, 1729, 2063, 51296, 51296, 300, 311, 1143, 337, 21538, 13, 51370, 51370, 286, 603, 1391, 751, 466, 341, 958, 1243, 11, 51464, 51464, 293, 286, 603, 362, 512, 565, 412, 264, 917, 295, 341, 7991, 13, 51668, 51668, 639, 307, 337, 21538, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.25608464291221217, "compression_ratio": 1.7234848484848484, "no_speech_prob": 3.321167241665535e-05}, {"id": 1576, "seek": 450920, "start": 4527.84, "end": 4529.32, "text": " that's used for classification.", "tokens": [50364, 814, 434, 4748, 819, 11, 457, 436, 733, 295, 360, 264, 912, 544, 50560, 50560, 420, 1570, 13, 50596, 50596, 865, 11, 264, 44653, 12, 38, 752, 621, 1459, 3037, 13, 50676, 50676, 865, 13, 50708, 50708, 865, 13, 50744, 50744, 865, 11, 341, 472, 41347, 538, 264, 18564, 259, 293, 18564, 259, 13, 50960, 50960, 821, 311, 3683, 4470, 6828, 13, 51020, 51020, 407, 286, 2378, 380, 2825, 1939, 466, 437, 264, 3278, 30867, 4470, 307, 13, 51184, 51184, 583, 3278, 30867, 4470, 307, 257, 1729, 2063, 51296, 51296, 300, 311, 1143, 337, 21538, 13, 51370, 51370, 286, 603, 1391, 751, 466, 341, 958, 1243, 11, 51464, 51464, 293, 286, 603, 362, 512, 565, 412, 264, 917, 295, 341, 7991, 13, 51668, 51668, 639, 307, 337, 21538, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.25608464291221217, "compression_ratio": 1.7234848484848484, "no_speech_prob": 3.321167241665535e-05}, {"id": 1577, "seek": 450920, "start": 4529.32, "end": 4531.2, "text": " I'll probably talk about this next week,", "tokens": [50364, 814, 434, 4748, 819, 11, 457, 436, 733, 295, 360, 264, 912, 544, 50560, 50560, 420, 1570, 13, 50596, 50596, 865, 11, 264, 44653, 12, 38, 752, 621, 1459, 3037, 13, 50676, 50676, 865, 13, 50708, 50708, 865, 13, 50744, 50744, 865, 11, 341, 472, 41347, 538, 264, 18564, 259, 293, 18564, 259, 13, 50960, 50960, 821, 311, 3683, 4470, 6828, 13, 51020, 51020, 407, 286, 2378, 380, 2825, 1939, 466, 437, 264, 3278, 30867, 4470, 307, 13, 51184, 51184, 583, 3278, 30867, 4470, 307, 257, 1729, 2063, 51296, 51296, 300, 311, 1143, 337, 21538, 13, 51370, 51370, 286, 603, 1391, 751, 466, 341, 958, 1243, 11, 51464, 51464, 293, 286, 603, 362, 512, 565, 412, 264, 917, 295, 341, 7991, 13, 51668, 51668, 639, 307, 337, 21538, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.25608464291221217, "compression_ratio": 1.7234848484848484, "no_speech_prob": 3.321167241665535e-05}, {"id": 1578, "seek": 450920, "start": 4531.2, "end": 4535.28, "text": " and I'll have some time at the end of this lecture.", "tokens": [50364, 814, 434, 4748, 819, 11, 457, 436, 733, 295, 360, 264, 912, 544, 50560, 50560, 420, 1570, 13, 50596, 50596, 865, 11, 264, 44653, 12, 38, 752, 621, 1459, 3037, 13, 50676, 50676, 865, 13, 50708, 50708, 865, 13, 50744, 50744, 865, 11, 341, 472, 41347, 538, 264, 18564, 259, 293, 18564, 259, 13, 50960, 50960, 821, 311, 3683, 4470, 6828, 13, 51020, 51020, 407, 286, 2378, 380, 2825, 1939, 466, 437, 264, 3278, 30867, 4470, 307, 13, 51184, 51184, 583, 3278, 30867, 4470, 307, 257, 1729, 2063, 51296, 51296, 300, 311, 1143, 337, 21538, 13, 51370, 51370, 286, 603, 1391, 751, 466, 341, 958, 1243, 11, 51464, 51464, 293, 286, 603, 362, 512, 565, 412, 264, 917, 295, 341, 7991, 13, 51668, 51668, 639, 307, 337, 21538, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.25608464291221217, "compression_ratio": 1.7234848484848484, "no_speech_prob": 3.321167241665535e-05}, {"id": 1579, "seek": 450920, "start": 4535.28, "end": 4538.08, "text": " This is for classification.", "tokens": [50364, 814, 434, 4748, 819, 11, 457, 436, 733, 295, 360, 264, 912, 544, 50560, 50560, 420, 1570, 13, 50596, 50596, 865, 11, 264, 44653, 12, 38, 752, 621, 1459, 3037, 13, 50676, 50676, 865, 13, 50708, 50708, 865, 13, 50744, 50744, 865, 11, 341, 472, 41347, 538, 264, 18564, 259, 293, 18564, 259, 13, 50960, 50960, 821, 311, 3683, 4470, 6828, 13, 51020, 51020, 407, 286, 2378, 380, 2825, 1939, 466, 437, 264, 3278, 30867, 4470, 307, 13, 51184, 51184, 583, 3278, 30867, 4470, 307, 257, 1729, 2063, 51296, 51296, 300, 311, 1143, 337, 21538, 13, 51370, 51370, 286, 603, 1391, 751, 466, 341, 958, 1243, 11, 51464, 51464, 293, 286, 603, 362, 512, 565, 412, 264, 917, 295, 341, 7991, 13, 51668, 51668, 639, 307, 337, 21538, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.25608464291221217, "compression_ratio": 1.7234848484848484, "no_speech_prob": 3.321167241665535e-05}, {"id": 1580, "seek": 453808, "start": 4538.08, "end": 4540.4, "text": " As I said, we use stochastic gradient descent", "tokens": [50364, 1018, 286, 848, 11, 321, 764, 342, 8997, 2750, 16235, 23475, 50480, 50480, 322, 8382, 12, 65, 852, 279, 13, 50520, 50520, 400, 8382, 12, 65, 852, 279, 11, 787, 570, 264, 8837, 300, 321, 362, 50646, 50646, 2203, 8382, 12, 65, 852, 279, 281, 2042, 6108, 13, 50784, 50784, 759, 321, 632, 819, 8837, 11, 321, 576, 764, 8382, 12, 65, 852, 2744, 502, 13, 50986, 50986, 1018, 286, 848, 949, 11, 321, 643, 281, 39426, 264, 3097, 10938, 13, 51172, 51172, 407, 498, 1580, 2709, 291, 257, 3097, 992, 51312, 51312, 293, 8137, 439, 264, 5110, 295, 7719, 502, 11, 51420, 51420, 550, 439, 264, 5110, 295, 7719, 568, 11, 439, 264, 5110, 51532, 51532, 295, 7719, 805, 11, 1030, 11458, 11, 498, 291, 764, 342, 8997, 2750, 16235, 51674, 51674, 538, 5145, 341, 1668, 11, 309, 307, 406, 516, 281, 589, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1297629695610712, "compression_ratio": 1.9511278195488722, "no_speech_prob": 0.0001005635058390908}, {"id": 1581, "seek": 453808, "start": 4540.4, "end": 4541.2, "text": " on mini-batches.", "tokens": [50364, 1018, 286, 848, 11, 321, 764, 342, 8997, 2750, 16235, 23475, 50480, 50480, 322, 8382, 12, 65, 852, 279, 13, 50520, 50520, 400, 8382, 12, 65, 852, 279, 11, 787, 570, 264, 8837, 300, 321, 362, 50646, 50646, 2203, 8382, 12, 65, 852, 279, 281, 2042, 6108, 13, 50784, 50784, 759, 321, 632, 819, 8837, 11, 321, 576, 764, 8382, 12, 65, 852, 2744, 502, 13, 50986, 50986, 1018, 286, 848, 949, 11, 321, 643, 281, 39426, 264, 3097, 10938, 13, 51172, 51172, 407, 498, 1580, 2709, 291, 257, 3097, 992, 51312, 51312, 293, 8137, 439, 264, 5110, 295, 7719, 502, 11, 51420, 51420, 550, 439, 264, 5110, 295, 7719, 568, 11, 439, 264, 5110, 51532, 51532, 295, 7719, 805, 11, 1030, 11458, 11, 498, 291, 764, 342, 8997, 2750, 16235, 51674, 51674, 538, 5145, 341, 1668, 11, 309, 307, 406, 516, 281, 589, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1297629695610712, "compression_ratio": 1.9511278195488722, "no_speech_prob": 0.0001005635058390908}, {"id": 1582, "seek": 453808, "start": 4541.2, "end": 4543.72, "text": " And mini-batches, only because the hardware that we have", "tokens": [50364, 1018, 286, 848, 11, 321, 764, 342, 8997, 2750, 16235, 23475, 50480, 50480, 322, 8382, 12, 65, 852, 279, 13, 50520, 50520, 400, 8382, 12, 65, 852, 279, 11, 787, 570, 264, 8837, 300, 321, 362, 50646, 50646, 2203, 8382, 12, 65, 852, 279, 281, 2042, 6108, 13, 50784, 50784, 759, 321, 632, 819, 8837, 11, 321, 576, 764, 8382, 12, 65, 852, 2744, 502, 13, 50986, 50986, 1018, 286, 848, 949, 11, 321, 643, 281, 39426, 264, 3097, 10938, 13, 51172, 51172, 407, 498, 1580, 2709, 291, 257, 3097, 992, 51312, 51312, 293, 8137, 439, 264, 5110, 295, 7719, 502, 11, 51420, 51420, 550, 439, 264, 5110, 295, 7719, 568, 11, 439, 264, 5110, 51532, 51532, 295, 7719, 805, 11, 1030, 11458, 11, 498, 291, 764, 342, 8997, 2750, 16235, 51674, 51674, 538, 5145, 341, 1668, 11, 309, 307, 406, 516, 281, 589, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1297629695610712, "compression_ratio": 1.9511278195488722, "no_speech_prob": 0.0001005635058390908}, {"id": 1583, "seek": 453808, "start": 4543.72, "end": 4546.48, "text": " needs mini-batches to perform properly.", "tokens": [50364, 1018, 286, 848, 11, 321, 764, 342, 8997, 2750, 16235, 23475, 50480, 50480, 322, 8382, 12, 65, 852, 279, 13, 50520, 50520, 400, 8382, 12, 65, 852, 279, 11, 787, 570, 264, 8837, 300, 321, 362, 50646, 50646, 2203, 8382, 12, 65, 852, 279, 281, 2042, 6108, 13, 50784, 50784, 759, 321, 632, 819, 8837, 11, 321, 576, 764, 8382, 12, 65, 852, 2744, 502, 13, 50986, 50986, 1018, 286, 848, 949, 11, 321, 643, 281, 39426, 264, 3097, 10938, 13, 51172, 51172, 407, 498, 1580, 2709, 291, 257, 3097, 992, 51312, 51312, 293, 8137, 439, 264, 5110, 295, 7719, 502, 11, 51420, 51420, 550, 439, 264, 5110, 295, 7719, 568, 11, 439, 264, 5110, 51532, 51532, 295, 7719, 805, 11, 1030, 11458, 11, 498, 291, 764, 342, 8997, 2750, 16235, 51674, 51674, 538, 5145, 341, 1668, 11, 309, 307, 406, 516, 281, 589, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1297629695610712, "compression_ratio": 1.9511278195488722, "no_speech_prob": 0.0001005635058390908}, {"id": 1584, "seek": 453808, "start": 4546.48, "end": 4550.5199999999995, "text": " If we had different hardware, we would use mini-batch size 1.", "tokens": [50364, 1018, 286, 848, 11, 321, 764, 342, 8997, 2750, 16235, 23475, 50480, 50480, 322, 8382, 12, 65, 852, 279, 13, 50520, 50520, 400, 8382, 12, 65, 852, 279, 11, 787, 570, 264, 8837, 300, 321, 362, 50646, 50646, 2203, 8382, 12, 65, 852, 279, 281, 2042, 6108, 13, 50784, 50784, 759, 321, 632, 819, 8837, 11, 321, 576, 764, 8382, 12, 65, 852, 2744, 502, 13, 50986, 50986, 1018, 286, 848, 949, 11, 321, 643, 281, 39426, 264, 3097, 10938, 13, 51172, 51172, 407, 498, 1580, 2709, 291, 257, 3097, 992, 51312, 51312, 293, 8137, 439, 264, 5110, 295, 7719, 502, 11, 51420, 51420, 550, 439, 264, 5110, 295, 7719, 568, 11, 439, 264, 5110, 51532, 51532, 295, 7719, 805, 11, 1030, 11458, 11, 498, 291, 764, 342, 8997, 2750, 16235, 51674, 51674, 538, 5145, 341, 1668, 11, 309, 307, 406, 516, 281, 589, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1297629695610712, "compression_ratio": 1.9511278195488722, "no_speech_prob": 0.0001005635058390908}, {"id": 1585, "seek": 453808, "start": 4550.5199999999995, "end": 4554.24, "text": " As I said before, we need to shuffle the training samples.", "tokens": [50364, 1018, 286, 848, 11, 321, 764, 342, 8997, 2750, 16235, 23475, 50480, 50480, 322, 8382, 12, 65, 852, 279, 13, 50520, 50520, 400, 8382, 12, 65, 852, 279, 11, 787, 570, 264, 8837, 300, 321, 362, 50646, 50646, 2203, 8382, 12, 65, 852, 279, 281, 2042, 6108, 13, 50784, 50784, 759, 321, 632, 819, 8837, 11, 321, 576, 764, 8382, 12, 65, 852, 2744, 502, 13, 50986, 50986, 1018, 286, 848, 949, 11, 321, 643, 281, 39426, 264, 3097, 10938, 13, 51172, 51172, 407, 498, 1580, 2709, 291, 257, 3097, 992, 51312, 51312, 293, 8137, 439, 264, 5110, 295, 7719, 502, 11, 51420, 51420, 550, 439, 264, 5110, 295, 7719, 568, 11, 439, 264, 5110, 51532, 51532, 295, 7719, 805, 11, 1030, 11458, 11, 498, 291, 764, 342, 8997, 2750, 16235, 51674, 51674, 538, 5145, 341, 1668, 11, 309, 307, 406, 516, 281, 589, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1297629695610712, "compression_ratio": 1.9511278195488722, "no_speech_prob": 0.0001005635058390908}, {"id": 1586, "seek": 453808, "start": 4554.24, "end": 4557.04, "text": " So if someone gives you a training set", "tokens": [50364, 1018, 286, 848, 11, 321, 764, 342, 8997, 2750, 16235, 23475, 50480, 50480, 322, 8382, 12, 65, 852, 279, 13, 50520, 50520, 400, 8382, 12, 65, 852, 279, 11, 787, 570, 264, 8837, 300, 321, 362, 50646, 50646, 2203, 8382, 12, 65, 852, 279, 281, 2042, 6108, 13, 50784, 50784, 759, 321, 632, 819, 8837, 11, 321, 576, 764, 8382, 12, 65, 852, 2744, 502, 13, 50986, 50986, 1018, 286, 848, 949, 11, 321, 643, 281, 39426, 264, 3097, 10938, 13, 51172, 51172, 407, 498, 1580, 2709, 291, 257, 3097, 992, 51312, 51312, 293, 8137, 439, 264, 5110, 295, 7719, 502, 11, 51420, 51420, 550, 439, 264, 5110, 295, 7719, 568, 11, 439, 264, 5110, 51532, 51532, 295, 7719, 805, 11, 1030, 11458, 11, 498, 291, 764, 342, 8997, 2750, 16235, 51674, 51674, 538, 5145, 341, 1668, 11, 309, 307, 406, 516, 281, 589, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1297629695610712, "compression_ratio": 1.9511278195488722, "no_speech_prob": 0.0001005635058390908}, {"id": 1587, "seek": 453808, "start": 4557.04, "end": 4559.2, "text": " and puts all the examples of category 1,", "tokens": [50364, 1018, 286, 848, 11, 321, 764, 342, 8997, 2750, 16235, 23475, 50480, 50480, 322, 8382, 12, 65, 852, 279, 13, 50520, 50520, 400, 8382, 12, 65, 852, 279, 11, 787, 570, 264, 8837, 300, 321, 362, 50646, 50646, 2203, 8382, 12, 65, 852, 279, 281, 2042, 6108, 13, 50784, 50784, 759, 321, 632, 819, 8837, 11, 321, 576, 764, 8382, 12, 65, 852, 2744, 502, 13, 50986, 50986, 1018, 286, 848, 949, 11, 321, 643, 281, 39426, 264, 3097, 10938, 13, 51172, 51172, 407, 498, 1580, 2709, 291, 257, 3097, 992, 51312, 51312, 293, 8137, 439, 264, 5110, 295, 7719, 502, 11, 51420, 51420, 550, 439, 264, 5110, 295, 7719, 568, 11, 439, 264, 5110, 51532, 51532, 295, 7719, 805, 11, 1030, 11458, 11, 498, 291, 764, 342, 8997, 2750, 16235, 51674, 51674, 538, 5145, 341, 1668, 11, 309, 307, 406, 516, 281, 589, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1297629695610712, "compression_ratio": 1.9511278195488722, "no_speech_prob": 0.0001005635058390908}, {"id": 1588, "seek": 453808, "start": 4559.2, "end": 4561.44, "text": " then all the examples of category 2, all the examples", "tokens": [50364, 1018, 286, 848, 11, 321, 764, 342, 8997, 2750, 16235, 23475, 50480, 50480, 322, 8382, 12, 65, 852, 279, 13, 50520, 50520, 400, 8382, 12, 65, 852, 279, 11, 787, 570, 264, 8837, 300, 321, 362, 50646, 50646, 2203, 8382, 12, 65, 852, 279, 281, 2042, 6108, 13, 50784, 50784, 759, 321, 632, 819, 8837, 11, 321, 576, 764, 8382, 12, 65, 852, 2744, 502, 13, 50986, 50986, 1018, 286, 848, 949, 11, 321, 643, 281, 39426, 264, 3097, 10938, 13, 51172, 51172, 407, 498, 1580, 2709, 291, 257, 3097, 992, 51312, 51312, 293, 8137, 439, 264, 5110, 295, 7719, 502, 11, 51420, 51420, 550, 439, 264, 5110, 295, 7719, 568, 11, 439, 264, 5110, 51532, 51532, 295, 7719, 805, 11, 1030, 11458, 11, 498, 291, 764, 342, 8997, 2750, 16235, 51674, 51674, 538, 5145, 341, 1668, 11, 309, 307, 406, 516, 281, 589, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1297629695610712, "compression_ratio": 1.9511278195488722, "no_speech_prob": 0.0001005635058390908}, {"id": 1589, "seek": 453808, "start": 4561.44, "end": 4564.28, "text": " of category 3, et cetera, if you use stochastic gradient", "tokens": [50364, 1018, 286, 848, 11, 321, 764, 342, 8997, 2750, 16235, 23475, 50480, 50480, 322, 8382, 12, 65, 852, 279, 13, 50520, 50520, 400, 8382, 12, 65, 852, 279, 11, 787, 570, 264, 8837, 300, 321, 362, 50646, 50646, 2203, 8382, 12, 65, 852, 279, 281, 2042, 6108, 13, 50784, 50784, 759, 321, 632, 819, 8837, 11, 321, 576, 764, 8382, 12, 65, 852, 2744, 502, 13, 50986, 50986, 1018, 286, 848, 949, 11, 321, 643, 281, 39426, 264, 3097, 10938, 13, 51172, 51172, 407, 498, 1580, 2709, 291, 257, 3097, 992, 51312, 51312, 293, 8137, 439, 264, 5110, 295, 7719, 502, 11, 51420, 51420, 550, 439, 264, 5110, 295, 7719, 568, 11, 439, 264, 5110, 51532, 51532, 295, 7719, 805, 11, 1030, 11458, 11, 498, 291, 764, 342, 8997, 2750, 16235, 51674, 51674, 538, 5145, 341, 1668, 11, 309, 307, 406, 516, 281, 589, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1297629695610712, "compression_ratio": 1.9511278195488722, "no_speech_prob": 0.0001005635058390908}, {"id": 1590, "seek": 453808, "start": 4564.28, "end": 4567.4, "text": " by keeping this order, it is not going to work.", "tokens": [50364, 1018, 286, 848, 11, 321, 764, 342, 8997, 2750, 16235, 23475, 50480, 50480, 322, 8382, 12, 65, 852, 279, 13, 50520, 50520, 400, 8382, 12, 65, 852, 279, 11, 787, 570, 264, 8837, 300, 321, 362, 50646, 50646, 2203, 8382, 12, 65, 852, 279, 281, 2042, 6108, 13, 50784, 50784, 759, 321, 632, 819, 8837, 11, 321, 576, 764, 8382, 12, 65, 852, 2744, 502, 13, 50986, 50986, 1018, 286, 848, 949, 11, 321, 643, 281, 39426, 264, 3097, 10938, 13, 51172, 51172, 407, 498, 1580, 2709, 291, 257, 3097, 992, 51312, 51312, 293, 8137, 439, 264, 5110, 295, 7719, 502, 11, 51420, 51420, 550, 439, 264, 5110, 295, 7719, 568, 11, 439, 264, 5110, 51532, 51532, 295, 7719, 805, 11, 1030, 11458, 11, 498, 291, 764, 342, 8997, 2750, 16235, 51674, 51674, 538, 5145, 341, 1668, 11, 309, 307, 406, 516, 281, 589, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1297629695610712, "compression_ratio": 1.9511278195488722, "no_speech_prob": 0.0001005635058390908}, {"id": 1591, "seek": 456740, "start": 4567.4, "end": 4572.4, "text": " You have to shuffle the samples so that you basically", "tokens": [50364, 509, 362, 281, 39426, 264, 10938, 370, 300, 291, 1936, 50614, 50614, 483, 10938, 490, 439, 264, 10479, 50740, 50740, 1951, 257, 1359, 25993, 11, 498, 291, 528, 13, 50992, 50992, 821, 307, 364, 35756, 510, 337, 264, 342, 8997, 2750, 16235, 13, 51162, 51162, 6998, 380, 7938, 1101, 30, 51306, 51306, 1057, 558, 11, 2264, 13, 51456, 51456, 821, 307, 257, 688, 295, 21977, 295, 342, 8997, 2750, 16235, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.15933756510416666, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0450825357111171e-05}, {"id": 1592, "seek": 456740, "start": 4572.4, "end": 4574.92, "text": " get samples from all the categories", "tokens": [50364, 509, 362, 281, 39426, 264, 10938, 370, 300, 291, 1936, 50614, 50614, 483, 10938, 490, 439, 264, 10479, 50740, 50740, 1951, 257, 1359, 25993, 11, 498, 291, 528, 13, 50992, 50992, 821, 307, 364, 35756, 510, 337, 264, 342, 8997, 2750, 16235, 13, 51162, 51162, 6998, 380, 7938, 1101, 30, 51306, 51306, 1057, 558, 11, 2264, 13, 51456, 51456, 821, 307, 257, 688, 295, 21977, 295, 342, 8997, 2750, 16235, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.15933756510416666, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0450825357111171e-05}, {"id": 1593, "seek": 456740, "start": 4574.92, "end": 4579.96, "text": " within a small subset, if you want.", "tokens": [50364, 509, 362, 281, 39426, 264, 10938, 370, 300, 291, 1936, 50614, 50614, 483, 10938, 490, 439, 264, 10479, 50740, 50740, 1951, 257, 1359, 25993, 11, 498, 291, 528, 13, 50992, 50992, 821, 307, 364, 35756, 510, 337, 264, 342, 8997, 2750, 16235, 13, 51162, 51162, 6998, 380, 7938, 1101, 30, 51306, 51306, 1057, 558, 11, 2264, 13, 51456, 51456, 821, 307, 257, 688, 295, 21977, 295, 342, 8997, 2750, 16235, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.15933756510416666, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0450825357111171e-05}, {"id": 1594, "seek": 456740, "start": 4579.96, "end": 4583.36, "text": " There is an objection here for the stochastic gradient.", "tokens": [50364, 509, 362, 281, 39426, 264, 10938, 370, 300, 291, 1936, 50614, 50614, 483, 10938, 490, 439, 264, 10479, 50740, 50740, 1951, 257, 1359, 25993, 11, 498, 291, 528, 13, 50992, 50992, 821, 307, 364, 35756, 510, 337, 264, 342, 8997, 2750, 16235, 13, 51162, 51162, 6998, 380, 7938, 1101, 30, 51306, 51306, 1057, 558, 11, 2264, 13, 51456, 51456, 821, 307, 257, 688, 295, 21977, 295, 342, 8997, 2750, 16235, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.15933756510416666, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0450825357111171e-05}, {"id": 1595, "seek": 456740, "start": 4583.36, "end": 4586.24, "text": " Isn't Adam better?", "tokens": [50364, 509, 362, 281, 39426, 264, 10938, 370, 300, 291, 1936, 50614, 50614, 483, 10938, 490, 439, 264, 10479, 50740, 50740, 1951, 257, 1359, 25993, 11, 498, 291, 528, 13, 50992, 50992, 821, 307, 364, 35756, 510, 337, 264, 342, 8997, 2750, 16235, 13, 51162, 51162, 6998, 380, 7938, 1101, 30, 51306, 51306, 1057, 558, 11, 2264, 13, 51456, 51456, 821, 307, 257, 688, 295, 21977, 295, 342, 8997, 2750, 16235, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.15933756510416666, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0450825357111171e-05}, {"id": 1596, "seek": 456740, "start": 4586.24, "end": 4589.24, "text": " All right, OK.", "tokens": [50364, 509, 362, 281, 39426, 264, 10938, 370, 300, 291, 1936, 50614, 50614, 483, 10938, 490, 439, 264, 10479, 50740, 50740, 1951, 257, 1359, 25993, 11, 498, 291, 528, 13, 50992, 50992, 821, 307, 364, 35756, 510, 337, 264, 342, 8997, 2750, 16235, 13, 51162, 51162, 6998, 380, 7938, 1101, 30, 51306, 51306, 1057, 558, 11, 2264, 13, 51456, 51456, 821, 307, 257, 688, 295, 21977, 295, 342, 8997, 2750, 16235, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.15933756510416666, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0450825357111171e-05}, {"id": 1597, "seek": 456740, "start": 4589.24, "end": 4595.2, "text": " There is a lot of variance of stochastic gradient.", "tokens": [50364, 509, 362, 281, 39426, 264, 10938, 370, 300, 291, 1936, 50614, 50614, 483, 10938, 490, 439, 264, 10479, 50740, 50740, 1951, 257, 1359, 25993, 11, 498, 291, 528, 13, 50992, 50992, 821, 307, 364, 35756, 510, 337, 264, 342, 8997, 2750, 16235, 13, 51162, 51162, 6998, 380, 7938, 1101, 30, 51306, 51306, 1057, 558, 11, 2264, 13, 51456, 51456, 821, 307, 257, 688, 295, 21977, 295, 342, 8997, 2750, 16235, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.15933756510416666, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0450825357111171e-05}, {"id": 1598, "seek": 459520, "start": 4595.2, "end": 4598.76, "text": " There are all stochastic gradient methods.", "tokens": [50364, 821, 366, 439, 342, 8997, 2750, 16235, 7150, 13, 50542, 50542, 682, 1186, 11, 561, 294, 19618, 848, 50636, 50636, 341, 820, 406, 312, 1219, 342, 8997, 2750, 16235, 23475, 50742, 50742, 570, 309, 311, 406, 257, 23475, 9284, 11, 50818, 50818, 570, 342, 8997, 2750, 16235, 2171, 50932, 50932, 1709, 39132, 570, 295, 264, 5658, 13, 51050, 51050, 407, 561, 567, 528, 281, 534, 312, 3006, 466, 341, 51354, 51354, 584, 309, 311, 342, 8997, 2750, 16235, 19618, 11, 51440, 51440, 457, 406, 342, 8997, 2750, 16235, 23475, 13, 51516, 51516, 663, 311, 264, 700, 551, 13, 51592, 51592, 745, 8997, 2750, 16235, 19618, 420, 342, 8997, 2750, 16235, 23475, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.18837300662336678, "compression_ratio": 2.1737089201877935, "no_speech_prob": 8.800244359008502e-06}, {"id": 1599, "seek": 459520, "start": 4598.76, "end": 4600.639999999999, "text": " In fact, people in optimization said", "tokens": [50364, 821, 366, 439, 342, 8997, 2750, 16235, 7150, 13, 50542, 50542, 682, 1186, 11, 561, 294, 19618, 848, 50636, 50636, 341, 820, 406, 312, 1219, 342, 8997, 2750, 16235, 23475, 50742, 50742, 570, 309, 311, 406, 257, 23475, 9284, 11, 50818, 50818, 570, 342, 8997, 2750, 16235, 2171, 50932, 50932, 1709, 39132, 570, 295, 264, 5658, 13, 51050, 51050, 407, 561, 567, 528, 281, 534, 312, 3006, 466, 341, 51354, 51354, 584, 309, 311, 342, 8997, 2750, 16235, 19618, 11, 51440, 51440, 457, 406, 342, 8997, 2750, 16235, 23475, 13, 51516, 51516, 663, 311, 264, 700, 551, 13, 51592, 51592, 745, 8997, 2750, 16235, 19618, 420, 342, 8997, 2750, 16235, 23475, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.18837300662336678, "compression_ratio": 2.1737089201877935, "no_speech_prob": 8.800244359008502e-06}, {"id": 1600, "seek": 459520, "start": 4600.639999999999, "end": 4602.76, "text": " this should not be called stochastic gradient descent", "tokens": [50364, 821, 366, 439, 342, 8997, 2750, 16235, 7150, 13, 50542, 50542, 682, 1186, 11, 561, 294, 19618, 848, 50636, 50636, 341, 820, 406, 312, 1219, 342, 8997, 2750, 16235, 23475, 50742, 50742, 570, 309, 311, 406, 257, 23475, 9284, 11, 50818, 50818, 570, 342, 8997, 2750, 16235, 2171, 50932, 50932, 1709, 39132, 570, 295, 264, 5658, 13, 51050, 51050, 407, 561, 567, 528, 281, 534, 312, 3006, 466, 341, 51354, 51354, 584, 309, 311, 342, 8997, 2750, 16235, 19618, 11, 51440, 51440, 457, 406, 342, 8997, 2750, 16235, 23475, 13, 51516, 51516, 663, 311, 264, 700, 551, 13, 51592, 51592, 745, 8997, 2750, 16235, 19618, 420, 342, 8997, 2750, 16235, 23475, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.18837300662336678, "compression_ratio": 2.1737089201877935, "no_speech_prob": 8.800244359008502e-06}, {"id": 1601, "seek": 459520, "start": 4602.76, "end": 4604.28, "text": " because it's not a descent algorithm,", "tokens": [50364, 821, 366, 439, 342, 8997, 2750, 16235, 7150, 13, 50542, 50542, 682, 1186, 11, 561, 294, 19618, 848, 50636, 50636, 341, 820, 406, 312, 1219, 342, 8997, 2750, 16235, 23475, 50742, 50742, 570, 309, 311, 406, 257, 23475, 9284, 11, 50818, 50818, 570, 342, 8997, 2750, 16235, 2171, 50932, 50932, 1709, 39132, 570, 295, 264, 5658, 13, 51050, 51050, 407, 561, 567, 528, 281, 534, 312, 3006, 466, 341, 51354, 51354, 584, 309, 311, 342, 8997, 2750, 16235, 19618, 11, 51440, 51440, 457, 406, 342, 8997, 2750, 16235, 23475, 13, 51516, 51516, 663, 311, 264, 700, 551, 13, 51592, 51592, 745, 8997, 2750, 16235, 19618, 420, 342, 8997, 2750, 16235, 23475, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.18837300662336678, "compression_ratio": 2.1737089201877935, "no_speech_prob": 8.800244359008502e-06}, {"id": 1602, "seek": 459520, "start": 4604.28, "end": 4606.5599999999995, "text": " because stochastic gradient sometimes", "tokens": [50364, 821, 366, 439, 342, 8997, 2750, 16235, 7150, 13, 50542, 50542, 682, 1186, 11, 561, 294, 19618, 848, 50636, 50636, 341, 820, 406, 312, 1219, 342, 8997, 2750, 16235, 23475, 50742, 50742, 570, 309, 311, 406, 257, 23475, 9284, 11, 50818, 50818, 570, 342, 8997, 2750, 16235, 2171, 50932, 50932, 1709, 39132, 570, 295, 264, 5658, 13, 51050, 51050, 407, 561, 567, 528, 281, 534, 312, 3006, 466, 341, 51354, 51354, 584, 309, 311, 342, 8997, 2750, 16235, 19618, 11, 51440, 51440, 457, 406, 342, 8997, 2750, 16235, 23475, 13, 51516, 51516, 663, 311, 264, 700, 551, 13, 51592, 51592, 745, 8997, 2750, 16235, 19618, 420, 342, 8997, 2750, 16235, 23475, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.18837300662336678, "compression_ratio": 2.1737089201877935, "no_speech_prob": 8.800244359008502e-06}, {"id": 1603, "seek": 459520, "start": 4606.5599999999995, "end": 4608.92, "text": " goes uphill because of the noise.", "tokens": [50364, 821, 366, 439, 342, 8997, 2750, 16235, 7150, 13, 50542, 50542, 682, 1186, 11, 561, 294, 19618, 848, 50636, 50636, 341, 820, 406, 312, 1219, 342, 8997, 2750, 16235, 23475, 50742, 50742, 570, 309, 311, 406, 257, 23475, 9284, 11, 50818, 50818, 570, 342, 8997, 2750, 16235, 2171, 50932, 50932, 1709, 39132, 570, 295, 264, 5658, 13, 51050, 51050, 407, 561, 567, 528, 281, 534, 312, 3006, 466, 341, 51354, 51354, 584, 309, 311, 342, 8997, 2750, 16235, 19618, 11, 51440, 51440, 457, 406, 342, 8997, 2750, 16235, 23475, 13, 51516, 51516, 663, 311, 264, 700, 551, 13, 51592, 51592, 745, 8997, 2750, 16235, 19618, 420, 342, 8997, 2750, 16235, 23475, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.18837300662336678, "compression_ratio": 2.1737089201877935, "no_speech_prob": 8.800244359008502e-06}, {"id": 1604, "seek": 459520, "start": 4608.92, "end": 4615.0, "text": " So people who want to really be correct about this", "tokens": [50364, 821, 366, 439, 342, 8997, 2750, 16235, 7150, 13, 50542, 50542, 682, 1186, 11, 561, 294, 19618, 848, 50636, 50636, 341, 820, 406, 312, 1219, 342, 8997, 2750, 16235, 23475, 50742, 50742, 570, 309, 311, 406, 257, 23475, 9284, 11, 50818, 50818, 570, 342, 8997, 2750, 16235, 2171, 50932, 50932, 1709, 39132, 570, 295, 264, 5658, 13, 51050, 51050, 407, 561, 567, 528, 281, 534, 312, 3006, 466, 341, 51354, 51354, 584, 309, 311, 342, 8997, 2750, 16235, 19618, 11, 51440, 51440, 457, 406, 342, 8997, 2750, 16235, 23475, 13, 51516, 51516, 663, 311, 264, 700, 551, 13, 51592, 51592, 745, 8997, 2750, 16235, 19618, 420, 342, 8997, 2750, 16235, 23475, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.18837300662336678, "compression_ratio": 2.1737089201877935, "no_speech_prob": 8.800244359008502e-06}, {"id": 1605, "seek": 459520, "start": 4615.0, "end": 4616.72, "text": " say it's stochastic gradient optimization,", "tokens": [50364, 821, 366, 439, 342, 8997, 2750, 16235, 7150, 13, 50542, 50542, 682, 1186, 11, 561, 294, 19618, 848, 50636, 50636, 341, 820, 406, 312, 1219, 342, 8997, 2750, 16235, 23475, 50742, 50742, 570, 309, 311, 406, 257, 23475, 9284, 11, 50818, 50818, 570, 342, 8997, 2750, 16235, 2171, 50932, 50932, 1709, 39132, 570, 295, 264, 5658, 13, 51050, 51050, 407, 561, 567, 528, 281, 534, 312, 3006, 466, 341, 51354, 51354, 584, 309, 311, 342, 8997, 2750, 16235, 19618, 11, 51440, 51440, 457, 406, 342, 8997, 2750, 16235, 23475, 13, 51516, 51516, 663, 311, 264, 700, 551, 13, 51592, 51592, 745, 8997, 2750, 16235, 19618, 420, 342, 8997, 2750, 16235, 23475, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.18837300662336678, "compression_ratio": 2.1737089201877935, "no_speech_prob": 8.800244359008502e-06}, {"id": 1606, "seek": 459520, "start": 4616.72, "end": 4618.24, "text": " but not stochastic gradient descent.", "tokens": [50364, 821, 366, 439, 342, 8997, 2750, 16235, 7150, 13, 50542, 50542, 682, 1186, 11, 561, 294, 19618, 848, 50636, 50636, 341, 820, 406, 312, 1219, 342, 8997, 2750, 16235, 23475, 50742, 50742, 570, 309, 311, 406, 257, 23475, 9284, 11, 50818, 50818, 570, 342, 8997, 2750, 16235, 2171, 50932, 50932, 1709, 39132, 570, 295, 264, 5658, 13, 51050, 51050, 407, 561, 567, 528, 281, 534, 312, 3006, 466, 341, 51354, 51354, 584, 309, 311, 342, 8997, 2750, 16235, 19618, 11, 51440, 51440, 457, 406, 342, 8997, 2750, 16235, 23475, 13, 51516, 51516, 663, 311, 264, 700, 551, 13, 51592, 51592, 745, 8997, 2750, 16235, 19618, 420, 342, 8997, 2750, 16235, 23475, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.18837300662336678, "compression_ratio": 2.1737089201877935, "no_speech_prob": 8.800244359008502e-06}, {"id": 1607, "seek": 459520, "start": 4618.24, "end": 4619.76, "text": " That's the first thing.", "tokens": [50364, 821, 366, 439, 342, 8997, 2750, 16235, 7150, 13, 50542, 50542, 682, 1186, 11, 561, 294, 19618, 848, 50636, 50636, 341, 820, 406, 312, 1219, 342, 8997, 2750, 16235, 23475, 50742, 50742, 570, 309, 311, 406, 257, 23475, 9284, 11, 50818, 50818, 570, 342, 8997, 2750, 16235, 2171, 50932, 50932, 1709, 39132, 570, 295, 264, 5658, 13, 51050, 51050, 407, 561, 567, 528, 281, 534, 312, 3006, 466, 341, 51354, 51354, 584, 309, 311, 342, 8997, 2750, 16235, 19618, 11, 51440, 51440, 457, 406, 342, 8997, 2750, 16235, 23475, 13, 51516, 51516, 663, 311, 264, 700, 551, 13, 51592, 51592, 745, 8997, 2750, 16235, 19618, 420, 342, 8997, 2750, 16235, 23475, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.18837300662336678, "compression_ratio": 2.1737089201877935, "no_speech_prob": 8.800244359008502e-06}, {"id": 1608, "seek": 459520, "start": 4619.76, "end": 4622.32, "text": " Stochastic gradient optimization or stochastic gradient descent,", "tokens": [50364, 821, 366, 439, 342, 8997, 2750, 16235, 7150, 13, 50542, 50542, 682, 1186, 11, 561, 294, 19618, 848, 50636, 50636, 341, 820, 406, 312, 1219, 342, 8997, 2750, 16235, 23475, 50742, 50742, 570, 309, 311, 406, 257, 23475, 9284, 11, 50818, 50818, 570, 342, 8997, 2750, 16235, 2171, 50932, 50932, 1709, 39132, 570, 295, 264, 5658, 13, 51050, 51050, 407, 561, 567, 528, 281, 534, 312, 3006, 466, 341, 51354, 51354, 584, 309, 311, 342, 8997, 2750, 16235, 19618, 11, 51440, 51440, 457, 406, 342, 8997, 2750, 16235, 23475, 13, 51516, 51516, 663, 311, 264, 700, 551, 13, 51592, 51592, 745, 8997, 2750, 16235, 19618, 420, 342, 8997, 2750, 16235, 23475, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.18837300662336678, "compression_ratio": 2.1737089201877935, "no_speech_prob": 8.800244359008502e-06}, {"id": 1609, "seek": 462232, "start": 4622.32, "end": 4627.96, "text": " SGD, is a special case of gradient-based optimization.", "tokens": [50364, 34520, 35, 11, 307, 257, 2121, 1389, 295, 16235, 12, 6032, 19618, 13, 50646, 50646, 400, 264, 31256, 295, 309, 1619, 291, 362, 281, 362, 257, 1823, 2744, 50906, 50906, 32415, 11, 457, 5079, 5112, 291, 577, 291, 848, 264, 1823, 2744, 32415, 13, 51090, 51090, 400, 5079, 5112, 291, 300, 341, 1823, 2744, 51174, 51174, 307, 257, 39684, 420, 257, 21539, 8141, 420, 257, 1577, 8141, 13, 51418, 51418, 407, 456, 366, 17840, 295, 34520, 35, 294, 597, 32415, 307, 3105, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.1484152217243993, "compression_ratio": 1.6632124352331605, "no_speech_prob": 9.079752999241464e-06}, {"id": 1610, "seek": 462232, "start": 4627.96, "end": 4633.16, "text": " And the specification of it says you have to have a step size", "tokens": [50364, 34520, 35, 11, 307, 257, 2121, 1389, 295, 16235, 12, 6032, 19618, 13, 50646, 50646, 400, 264, 31256, 295, 309, 1619, 291, 362, 281, 362, 257, 1823, 2744, 50906, 50906, 32415, 11, 457, 5079, 5112, 291, 577, 291, 848, 264, 1823, 2744, 32415, 13, 51090, 51090, 400, 5079, 5112, 291, 300, 341, 1823, 2744, 51174, 51174, 307, 257, 39684, 420, 257, 21539, 8141, 420, 257, 1577, 8141, 13, 51418, 51418, 407, 456, 366, 17840, 295, 34520, 35, 294, 597, 32415, 307, 3105, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.1484152217243993, "compression_ratio": 1.6632124352331605, "no_speech_prob": 9.079752999241464e-06}, {"id": 1611, "seek": 462232, "start": 4633.16, "end": 4636.84, "text": " eta, but nobody tells you how you said the step size eta.", "tokens": [50364, 34520, 35, 11, 307, 257, 2121, 1389, 295, 16235, 12, 6032, 19618, 13, 50646, 50646, 400, 264, 31256, 295, 309, 1619, 291, 362, 281, 362, 257, 1823, 2744, 50906, 50906, 32415, 11, 457, 5079, 5112, 291, 577, 291, 848, 264, 1823, 2744, 32415, 13, 51090, 51090, 400, 5079, 5112, 291, 300, 341, 1823, 2744, 51174, 51174, 307, 257, 39684, 420, 257, 21539, 8141, 420, 257, 1577, 8141, 13, 51418, 51418, 407, 456, 366, 17840, 295, 34520, 35, 294, 597, 32415, 307, 3105, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.1484152217243993, "compression_ratio": 1.6632124352331605, "no_speech_prob": 9.079752999241464e-06}, {"id": 1612, "seek": 462232, "start": 4636.84, "end": 4638.5199999999995, "text": " And nobody tells you that this step size", "tokens": [50364, 34520, 35, 11, 307, 257, 2121, 1389, 295, 16235, 12, 6032, 19618, 13, 50646, 50646, 400, 264, 31256, 295, 309, 1619, 291, 362, 281, 362, 257, 1823, 2744, 50906, 50906, 32415, 11, 457, 5079, 5112, 291, 577, 291, 848, 264, 1823, 2744, 32415, 13, 51090, 51090, 400, 5079, 5112, 291, 300, 341, 1823, 2744, 51174, 51174, 307, 257, 39684, 420, 257, 21539, 8141, 420, 257, 1577, 8141, 13, 51418, 51418, 407, 456, 366, 17840, 295, 34520, 35, 294, 597, 32415, 307, 3105, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.1484152217243993, "compression_ratio": 1.6632124352331605, "no_speech_prob": 9.079752999241464e-06}, {"id": 1613, "seek": 462232, "start": 4638.5199999999995, "end": 4643.4, "text": " is a scalar or a diagonal matrix or a full matrix.", "tokens": [50364, 34520, 35, 11, 307, 257, 2121, 1389, 295, 16235, 12, 6032, 19618, 13, 50646, 50646, 400, 264, 31256, 295, 309, 1619, 291, 362, 281, 362, 257, 1823, 2744, 50906, 50906, 32415, 11, 457, 5079, 5112, 291, 577, 291, 848, 264, 1823, 2744, 32415, 13, 51090, 51090, 400, 5079, 5112, 291, 300, 341, 1823, 2744, 51174, 51174, 307, 257, 39684, 420, 257, 21539, 8141, 420, 257, 1577, 8141, 13, 51418, 51418, 407, 456, 366, 17840, 295, 34520, 35, 294, 597, 32415, 307, 3105, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.1484152217243993, "compression_ratio": 1.6632124352331605, "no_speech_prob": 9.079752999241464e-06}, {"id": 1614, "seek": 462232, "start": 4643.4, "end": 4649.639999999999, "text": " So there are variations of SGD in which eta is changed", "tokens": [50364, 34520, 35, 11, 307, 257, 2121, 1389, 295, 16235, 12, 6032, 19618, 13, 50646, 50646, 400, 264, 31256, 295, 309, 1619, 291, 362, 281, 362, 257, 1823, 2744, 50906, 50906, 32415, 11, 457, 5079, 5112, 291, 577, 291, 848, 264, 1823, 2744, 32415, 13, 51090, 51090, 400, 5079, 5112, 291, 300, 341, 1823, 2744, 51174, 51174, 307, 257, 39684, 420, 257, 21539, 8141, 420, 257, 1577, 8141, 13, 51418, 51418, 407, 456, 366, 17840, 295, 34520, 35, 294, 597, 32415, 307, 3105, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.1484152217243993, "compression_ratio": 1.6632124352331605, "no_speech_prob": 9.079752999241464e-06}, {"id": 1615, "seek": 464964, "start": 4649.64, "end": 4654.8, "text": " all the time for every sample or every batch.", "tokens": [50364, 439, 264, 565, 337, 633, 6889, 420, 633, 15245, 13, 50622, 50622, 682, 34520, 35, 11, 881, 295, 264, 565, 11, 341, 32415, 50718, 50718, 307, 24436, 4650, 281, 257, 7567, 13, 50818, 50818, 400, 456, 366, 257, 3840, 295, 3832, 28078, 294, 9953, 51, 284, 339, 50932, 50932, 300, 366, 12270, 13, 51038, 51038, 682, 7512, 411, 1711, 298, 11, 32415, 307, 767, 257, 21539, 8141, 13, 51332, 51332, 400, 300, 21539, 8141, 11, 264, 1433, 51424, 51424, 294, 264, 21539, 8141, 366, 3105, 439, 264, 565, 13, 51520, 51520, 814, 434, 40610, 2361, 322, 512, 12539, 295, 264, 37638, 51718, 51718, 295, 264, 2063, 2445, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.16179301057543075, "compression_ratio": 1.7272727272727273, "no_speech_prob": 1.0450140507600736e-05}, {"id": 1616, "seek": 464964, "start": 4654.8, "end": 4656.72, "text": " In SGD, most of the time, this eta", "tokens": [50364, 439, 264, 565, 337, 633, 6889, 420, 633, 15245, 13, 50622, 50622, 682, 34520, 35, 11, 881, 295, 264, 565, 11, 341, 32415, 50718, 50718, 307, 24436, 4650, 281, 257, 7567, 13, 50818, 50818, 400, 456, 366, 257, 3840, 295, 3832, 28078, 294, 9953, 51, 284, 339, 50932, 50932, 300, 366, 12270, 13, 51038, 51038, 682, 7512, 411, 1711, 298, 11, 32415, 307, 767, 257, 21539, 8141, 13, 51332, 51332, 400, 300, 21539, 8141, 11, 264, 1433, 51424, 51424, 294, 264, 21539, 8141, 366, 3105, 439, 264, 565, 13, 51520, 51520, 814, 434, 40610, 2361, 322, 512, 12539, 295, 264, 37638, 51718, 51718, 295, 264, 2063, 2445, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.16179301057543075, "compression_ratio": 1.7272727272727273, "no_speech_prob": 1.0450140507600736e-05}, {"id": 1617, "seek": 464964, "start": 4656.72, "end": 4658.72, "text": " is decreased according to a schedule.", "tokens": [50364, 439, 264, 565, 337, 633, 6889, 420, 633, 15245, 13, 50622, 50622, 682, 34520, 35, 11, 881, 295, 264, 565, 11, 341, 32415, 50718, 50718, 307, 24436, 4650, 281, 257, 7567, 13, 50818, 50818, 400, 456, 366, 257, 3840, 295, 3832, 28078, 294, 9953, 51, 284, 339, 50932, 50932, 300, 366, 12270, 13, 51038, 51038, 682, 7512, 411, 1711, 298, 11, 32415, 307, 767, 257, 21539, 8141, 13, 51332, 51332, 400, 300, 21539, 8141, 11, 264, 1433, 51424, 51424, 294, 264, 21539, 8141, 366, 3105, 439, 264, 565, 13, 51520, 51520, 814, 434, 40610, 2361, 322, 512, 12539, 295, 264, 37638, 51718, 51718, 295, 264, 2063, 2445, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.16179301057543075, "compression_ratio": 1.7272727272727273, "no_speech_prob": 1.0450140507600736e-05}, {"id": 1618, "seek": 464964, "start": 4658.72, "end": 4661.0, "text": " And there are a bunch of standard schedules in PyTorch", "tokens": [50364, 439, 264, 565, 337, 633, 6889, 420, 633, 15245, 13, 50622, 50622, 682, 34520, 35, 11, 881, 295, 264, 565, 11, 341, 32415, 50718, 50718, 307, 24436, 4650, 281, 257, 7567, 13, 50818, 50818, 400, 456, 366, 257, 3840, 295, 3832, 28078, 294, 9953, 51, 284, 339, 50932, 50932, 300, 366, 12270, 13, 51038, 51038, 682, 7512, 411, 1711, 298, 11, 32415, 307, 767, 257, 21539, 8141, 13, 51332, 51332, 400, 300, 21539, 8141, 11, 264, 1433, 51424, 51424, 294, 264, 21539, 8141, 366, 3105, 439, 264, 565, 13, 51520, 51520, 814, 434, 40610, 2361, 322, 512, 12539, 295, 264, 37638, 51718, 51718, 295, 264, 2063, 2445, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.16179301057543075, "compression_ratio": 1.7272727272727273, "no_speech_prob": 1.0450140507600736e-05}, {"id": 1619, "seek": 464964, "start": 4661.0, "end": 4663.12, "text": " that are implemented.", "tokens": [50364, 439, 264, 565, 337, 633, 6889, 420, 633, 15245, 13, 50622, 50622, 682, 34520, 35, 11, 881, 295, 264, 565, 11, 341, 32415, 50718, 50718, 307, 24436, 4650, 281, 257, 7567, 13, 50818, 50818, 400, 456, 366, 257, 3840, 295, 3832, 28078, 294, 9953, 51, 284, 339, 50932, 50932, 300, 366, 12270, 13, 51038, 51038, 682, 7512, 411, 1711, 298, 11, 32415, 307, 767, 257, 21539, 8141, 13, 51332, 51332, 400, 300, 21539, 8141, 11, 264, 1433, 51424, 51424, 294, 264, 21539, 8141, 366, 3105, 439, 264, 565, 13, 51520, 51520, 814, 434, 40610, 2361, 322, 512, 12539, 295, 264, 37638, 51718, 51718, 295, 264, 2063, 2445, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.16179301057543075, "compression_ratio": 1.7272727272727273, "no_speech_prob": 1.0450140507600736e-05}, {"id": 1620, "seek": 464964, "start": 4663.12, "end": 4669.0, "text": " In techniques like Atom, eta is actually a diagonal matrix.", "tokens": [50364, 439, 264, 565, 337, 633, 6889, 420, 633, 15245, 13, 50622, 50622, 682, 34520, 35, 11, 881, 295, 264, 565, 11, 341, 32415, 50718, 50718, 307, 24436, 4650, 281, 257, 7567, 13, 50818, 50818, 400, 456, 366, 257, 3840, 295, 3832, 28078, 294, 9953, 51, 284, 339, 50932, 50932, 300, 366, 12270, 13, 51038, 51038, 682, 7512, 411, 1711, 298, 11, 32415, 307, 767, 257, 21539, 8141, 13, 51332, 51332, 400, 300, 21539, 8141, 11, 264, 1433, 51424, 51424, 294, 264, 21539, 8141, 366, 3105, 439, 264, 565, 13, 51520, 51520, 814, 434, 40610, 2361, 322, 512, 12539, 295, 264, 37638, 51718, 51718, 295, 264, 2063, 2445, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.16179301057543075, "compression_ratio": 1.7272727272727273, "no_speech_prob": 1.0450140507600736e-05}, {"id": 1621, "seek": 464964, "start": 4669.0, "end": 4670.84, "text": " And that diagonal matrix, the term", "tokens": [50364, 439, 264, 565, 337, 633, 6889, 420, 633, 15245, 13, 50622, 50622, 682, 34520, 35, 11, 881, 295, 264, 565, 11, 341, 32415, 50718, 50718, 307, 24436, 4650, 281, 257, 7567, 13, 50818, 50818, 400, 456, 366, 257, 3840, 295, 3832, 28078, 294, 9953, 51, 284, 339, 50932, 50932, 300, 366, 12270, 13, 51038, 51038, 682, 7512, 411, 1711, 298, 11, 32415, 307, 767, 257, 21539, 8141, 13, 51332, 51332, 400, 300, 21539, 8141, 11, 264, 1433, 51424, 51424, 294, 264, 21539, 8141, 366, 3105, 439, 264, 565, 13, 51520, 51520, 814, 434, 40610, 2361, 322, 512, 12539, 295, 264, 37638, 51718, 51718, 295, 264, 2063, 2445, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.16179301057543075, "compression_ratio": 1.7272727272727273, "no_speech_prob": 1.0450140507600736e-05}, {"id": 1622, "seek": 464964, "start": 4670.84, "end": 4672.76, "text": " in the diagonal matrix are changed all the time.", "tokens": [50364, 439, 264, 565, 337, 633, 6889, 420, 633, 15245, 13, 50622, 50622, 682, 34520, 35, 11, 881, 295, 264, 565, 11, 341, 32415, 50718, 50718, 307, 24436, 4650, 281, 257, 7567, 13, 50818, 50818, 400, 456, 366, 257, 3840, 295, 3832, 28078, 294, 9953, 51, 284, 339, 50932, 50932, 300, 366, 12270, 13, 51038, 51038, 682, 7512, 411, 1711, 298, 11, 32415, 307, 767, 257, 21539, 8141, 13, 51332, 51332, 400, 300, 21539, 8141, 11, 264, 1433, 51424, 51424, 294, 264, 21539, 8141, 366, 3105, 439, 264, 565, 13, 51520, 51520, 814, 434, 40610, 2361, 322, 512, 12539, 295, 264, 37638, 51718, 51718, 295, 264, 2063, 2445, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.16179301057543075, "compression_ratio": 1.7272727272727273, "no_speech_prob": 1.0450140507600736e-05}, {"id": 1623, "seek": 464964, "start": 4672.76, "end": 4676.72, "text": " They're computed based on some estimate of the curvature", "tokens": [50364, 439, 264, 565, 337, 633, 6889, 420, 633, 15245, 13, 50622, 50622, 682, 34520, 35, 11, 881, 295, 264, 565, 11, 341, 32415, 50718, 50718, 307, 24436, 4650, 281, 257, 7567, 13, 50818, 50818, 400, 456, 366, 257, 3840, 295, 3832, 28078, 294, 9953, 51, 284, 339, 50932, 50932, 300, 366, 12270, 13, 51038, 51038, 682, 7512, 411, 1711, 298, 11, 32415, 307, 767, 257, 21539, 8141, 13, 51332, 51332, 400, 300, 21539, 8141, 11, 264, 1433, 51424, 51424, 294, 264, 21539, 8141, 366, 3105, 439, 264, 565, 13, 51520, 51520, 814, 434, 40610, 2361, 322, 512, 12539, 295, 264, 37638, 51718, 51718, 295, 264, 2063, 2445, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.16179301057543075, "compression_ratio": 1.7272727272727273, "no_speech_prob": 1.0450140507600736e-05}, {"id": 1624, "seek": 464964, "start": 4676.72, "end": 4678.400000000001, "text": " of the cost function.", "tokens": [50364, 439, 264, 565, 337, 633, 6889, 420, 633, 15245, 13, 50622, 50622, 682, 34520, 35, 11, 881, 295, 264, 565, 11, 341, 32415, 50718, 50718, 307, 24436, 4650, 281, 257, 7567, 13, 50818, 50818, 400, 456, 366, 257, 3840, 295, 3832, 28078, 294, 9953, 51, 284, 339, 50932, 50932, 300, 366, 12270, 13, 51038, 51038, 682, 7512, 411, 1711, 298, 11, 32415, 307, 767, 257, 21539, 8141, 13, 51332, 51332, 400, 300, 21539, 8141, 11, 264, 1433, 51424, 51424, 294, 264, 21539, 8141, 366, 3105, 439, 264, 565, 13, 51520, 51520, 814, 434, 40610, 2361, 322, 512, 12539, 295, 264, 37638, 51718, 51718, 295, 264, 2063, 2445, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.16179301057543075, "compression_ratio": 1.7272727272727273, "no_speech_prob": 1.0450140507600736e-05}, {"id": 1625, "seek": 467840, "start": 4678.4, "end": 4680.759999999999, "text": " There's a lot of methods to do this.", "tokens": [50364, 821, 311, 257, 688, 295, 7150, 281, 360, 341, 13, 50482, 50482, 814, 434, 439, 34520, 35, 12, 20467, 7150, 13, 50668, 50668, 1711, 298, 307, 364, 34520, 35, 3170, 365, 257, 2121, 2010, 295, 32415, 13, 50828, 50998, 407, 1338, 11, 294, 264, 21455, 259, 7372, 294, 7160, 339, 11, 51198, 51198, 456, 311, 257, 1379, 3840, 295, 729, 7150, 13, 51272, 51398, 821, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 11, 51482, 51482, 370, 500, 380, 3292, 466, 309, 11, 466, 19618, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.21448393182440117, "compression_ratio": 1.5212765957446808, "no_speech_prob": 1.0952376214845572e-05}, {"id": 1626, "seek": 467840, "start": 4680.759999999999, "end": 4684.48, "text": " They're all SGD-type methods.", "tokens": [50364, 821, 311, 257, 688, 295, 7150, 281, 360, 341, 13, 50482, 50482, 814, 434, 439, 34520, 35, 12, 20467, 7150, 13, 50668, 50668, 1711, 298, 307, 364, 34520, 35, 3170, 365, 257, 2121, 2010, 295, 32415, 13, 50828, 50998, 407, 1338, 11, 294, 264, 21455, 259, 7372, 294, 7160, 339, 11, 51198, 51198, 456, 311, 257, 1379, 3840, 295, 729, 7150, 13, 51272, 51398, 821, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 11, 51482, 51482, 370, 500, 380, 3292, 466, 309, 11, 466, 19618, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.21448393182440117, "compression_ratio": 1.5212765957446808, "no_speech_prob": 1.0952376214845572e-05}, {"id": 1627, "seek": 467840, "start": 4684.48, "end": 4687.679999999999, "text": " Atom is an SGD method with a special type of eta.", "tokens": [50364, 821, 311, 257, 688, 295, 7150, 281, 360, 341, 13, 50482, 50482, 814, 434, 439, 34520, 35, 12, 20467, 7150, 13, 50668, 50668, 1711, 298, 307, 364, 34520, 35, 3170, 365, 257, 2121, 2010, 295, 32415, 13, 50828, 50998, 407, 1338, 11, 294, 264, 21455, 259, 7372, 294, 7160, 339, 11, 51198, 51198, 456, 311, 257, 1379, 3840, 295, 729, 7150, 13, 51272, 51398, 821, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 11, 51482, 51482, 370, 500, 380, 3292, 466, 309, 11, 466, 19618, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.21448393182440117, "compression_ratio": 1.5212765957446808, "no_speech_prob": 1.0952376214845572e-05}, {"id": 1628, "seek": 467840, "start": 4691.08, "end": 4695.08, "text": " So yeah, in the Optin package in Torch,", "tokens": [50364, 821, 311, 257, 688, 295, 7150, 281, 360, 341, 13, 50482, 50482, 814, 434, 439, 34520, 35, 12, 20467, 7150, 13, 50668, 50668, 1711, 298, 307, 364, 34520, 35, 3170, 365, 257, 2121, 2010, 295, 32415, 13, 50828, 50998, 407, 1338, 11, 294, 264, 21455, 259, 7372, 294, 7160, 339, 11, 51198, 51198, 456, 311, 257, 1379, 3840, 295, 729, 7150, 13, 51272, 51398, 821, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 11, 51482, 51482, 370, 500, 380, 3292, 466, 309, 11, 466, 19618, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.21448393182440117, "compression_ratio": 1.5212765957446808, "no_speech_prob": 1.0952376214845572e-05}, {"id": 1629, "seek": 467840, "start": 4695.08, "end": 4696.5599999999995, "text": " there's a whole bunch of those methods.", "tokens": [50364, 821, 311, 257, 688, 295, 7150, 281, 360, 341, 13, 50482, 50482, 814, 434, 439, 34520, 35, 12, 20467, 7150, 13, 50668, 50668, 1711, 298, 307, 364, 34520, 35, 3170, 365, 257, 2121, 2010, 295, 32415, 13, 50828, 50998, 407, 1338, 11, 294, 264, 21455, 259, 7372, 294, 7160, 339, 11, 51198, 51198, 456, 311, 257, 1379, 3840, 295, 729, 7150, 13, 51272, 51398, 821, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 11, 51482, 51482, 370, 500, 380, 3292, 466, 309, 11, 466, 19618, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.21448393182440117, "compression_ratio": 1.5212765957446808, "no_speech_prob": 1.0952376214845572e-05}, {"id": 1630, "seek": 467840, "start": 4699.08, "end": 4700.759999999999, "text": " There's going to be a whole lecture on this,", "tokens": [50364, 821, 311, 257, 688, 295, 7150, 281, 360, 341, 13, 50482, 50482, 814, 434, 439, 34520, 35, 12, 20467, 7150, 13, 50668, 50668, 1711, 298, 307, 364, 34520, 35, 3170, 365, 257, 2121, 2010, 295, 32415, 13, 50828, 50998, 407, 1338, 11, 294, 264, 21455, 259, 7372, 294, 7160, 339, 11, 51198, 51198, 456, 311, 257, 1379, 3840, 295, 729, 7150, 13, 51272, 51398, 821, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 11, 51482, 51482, 370, 500, 380, 3292, 466, 309, 11, 466, 19618, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.21448393182440117, "compression_ratio": 1.5212765957446808, "no_speech_prob": 1.0952376214845572e-05}, {"id": 1631, "seek": 467840, "start": 4700.759999999999, "end": 4705.679999999999, "text": " so don't worry about it, about optimization.", "tokens": [50364, 821, 311, 257, 688, 295, 7150, 281, 360, 341, 13, 50482, 50482, 814, 434, 439, 34520, 35, 12, 20467, 7150, 13, 50668, 50668, 1711, 298, 307, 364, 34520, 35, 3170, 365, 257, 2121, 2010, 295, 32415, 13, 50828, 50998, 407, 1338, 11, 294, 264, 21455, 259, 7372, 294, 7160, 339, 11, 51198, 51198, 456, 311, 257, 1379, 3840, 295, 729, 7150, 13, 51272, 51398, 821, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 11, 51482, 51482, 370, 500, 380, 3292, 466, 309, 11, 466, 19618, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.21448393182440117, "compression_ratio": 1.5212765957446808, "no_speech_prob": 1.0952376214845572e-05}, {"id": 1632, "seek": 470568, "start": 4705.68, "end": 4708.76, "text": " Normalized input variables to zero mean and unit variance.", "tokens": [50364, 21277, 1602, 4846, 9102, 281, 4018, 914, 293, 4985, 21977, 13, 50518, 50518, 407, 341, 307, 257, 588, 1021, 935, 50664, 50664, 300, 341, 2010, 295, 19618, 3170, 11, 16235, 12, 6032, 50966, 50966, 19618, 7150, 11, 562, 291, 362, 32807, 34499, 11, 51132, 51132, 8213, 7705, 11, 12258, 281, 312, 588, 9477, 281, 577, 51358, 51358, 264, 1412, 307, 4927, 13, 51460, 51460, 407, 498, 291, 362, 732, 9102, 300, 362, 588, 13371, 51584, 51584, 819, 1374, 21518, 11, 472, 295, 552, 21716, 1296, 11, 718, 311, 584, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.14726673288548248, "compression_ratio": 1.6946902654867257, "no_speech_prob": 2.857146228052443e-06}, {"id": 1633, "seek": 470568, "start": 4708.76, "end": 4711.68, "text": " So this is a very important point", "tokens": [50364, 21277, 1602, 4846, 9102, 281, 4018, 914, 293, 4985, 21977, 13, 50518, 50518, 407, 341, 307, 257, 588, 1021, 935, 50664, 50664, 300, 341, 2010, 295, 19618, 3170, 11, 16235, 12, 6032, 50966, 50966, 19618, 7150, 11, 562, 291, 362, 32807, 34499, 11, 51132, 51132, 8213, 7705, 11, 12258, 281, 312, 588, 9477, 281, 577, 51358, 51358, 264, 1412, 307, 4927, 13, 51460, 51460, 407, 498, 291, 362, 732, 9102, 300, 362, 588, 13371, 51584, 51584, 819, 1374, 21518, 11, 472, 295, 552, 21716, 1296, 11, 718, 311, 584, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.14726673288548248, "compression_ratio": 1.6946902654867257, "no_speech_prob": 2.857146228052443e-06}, {"id": 1634, "seek": 470568, "start": 4711.68, "end": 4717.72, "text": " that this type of optimization method, gradient-based", "tokens": [50364, 21277, 1602, 4846, 9102, 281, 4018, 914, 293, 4985, 21977, 13, 50518, 50518, 407, 341, 307, 257, 588, 1021, 935, 50664, 50664, 300, 341, 2010, 295, 19618, 3170, 11, 16235, 12, 6032, 50966, 50966, 19618, 7150, 11, 562, 291, 362, 32807, 34499, 11, 51132, 51132, 8213, 7705, 11, 12258, 281, 312, 588, 9477, 281, 577, 51358, 51358, 264, 1412, 307, 4927, 13, 51460, 51460, 407, 498, 291, 362, 732, 9102, 300, 362, 588, 13371, 51584, 51584, 819, 1374, 21518, 11, 472, 295, 552, 21716, 1296, 11, 718, 311, 584, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.14726673288548248, "compression_ratio": 1.6946902654867257, "no_speech_prob": 2.857146228052443e-06}, {"id": 1635, "seek": 470568, "start": 4717.72, "end": 4721.04, "text": " optimization methods, when you have weighted sums,", "tokens": [50364, 21277, 1602, 4846, 9102, 281, 4018, 914, 293, 4985, 21977, 13, 50518, 50518, 407, 341, 307, 257, 588, 1021, 935, 50664, 50664, 300, 341, 2010, 295, 19618, 3170, 11, 16235, 12, 6032, 50966, 50966, 19618, 7150, 11, 562, 291, 362, 32807, 34499, 11, 51132, 51132, 8213, 7705, 11, 12258, 281, 312, 588, 9477, 281, 577, 51358, 51358, 264, 1412, 307, 4927, 13, 51460, 51460, 407, 498, 291, 362, 732, 9102, 300, 362, 588, 13371, 51584, 51584, 819, 1374, 21518, 11, 472, 295, 552, 21716, 1296, 11, 718, 311, 584, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.14726673288548248, "compression_ratio": 1.6946902654867257, "no_speech_prob": 2.857146228052443e-06}, {"id": 1636, "seek": 470568, "start": 4721.04, "end": 4725.56, "text": " linear operations, tends to be very sensitive to how", "tokens": [50364, 21277, 1602, 4846, 9102, 281, 4018, 914, 293, 4985, 21977, 13, 50518, 50518, 407, 341, 307, 257, 588, 1021, 935, 50664, 50664, 300, 341, 2010, 295, 19618, 3170, 11, 16235, 12, 6032, 50966, 50966, 19618, 7150, 11, 562, 291, 362, 32807, 34499, 11, 51132, 51132, 8213, 7705, 11, 12258, 281, 312, 588, 9477, 281, 577, 51358, 51358, 264, 1412, 307, 4927, 13, 51460, 51460, 407, 498, 291, 362, 732, 9102, 300, 362, 588, 13371, 51584, 51584, 819, 1374, 21518, 11, 472, 295, 552, 21716, 1296, 11, 718, 311, 584, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.14726673288548248, "compression_ratio": 1.6946902654867257, "no_speech_prob": 2.857146228052443e-06}, {"id": 1637, "seek": 470568, "start": 4725.56, "end": 4727.6, "text": " the data is prepared.", "tokens": [50364, 21277, 1602, 4846, 9102, 281, 4018, 914, 293, 4985, 21977, 13, 50518, 50518, 407, 341, 307, 257, 588, 1021, 935, 50664, 50664, 300, 341, 2010, 295, 19618, 3170, 11, 16235, 12, 6032, 50966, 50966, 19618, 7150, 11, 562, 291, 362, 32807, 34499, 11, 51132, 51132, 8213, 7705, 11, 12258, 281, 312, 588, 9477, 281, 577, 51358, 51358, 264, 1412, 307, 4927, 13, 51460, 51460, 407, 498, 291, 362, 732, 9102, 300, 362, 588, 13371, 51584, 51584, 819, 1374, 21518, 11, 472, 295, 552, 21716, 1296, 11, 718, 311, 584, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.14726673288548248, "compression_ratio": 1.6946902654867257, "no_speech_prob": 2.857146228052443e-06}, {"id": 1638, "seek": 470568, "start": 4727.6, "end": 4730.08, "text": " So if you have two variables that have very widely", "tokens": [50364, 21277, 1602, 4846, 9102, 281, 4018, 914, 293, 4985, 21977, 13, 50518, 50518, 407, 341, 307, 257, 588, 1021, 935, 50664, 50664, 300, 341, 2010, 295, 19618, 3170, 11, 16235, 12, 6032, 50966, 50966, 19618, 7150, 11, 562, 291, 362, 32807, 34499, 11, 51132, 51132, 8213, 7705, 11, 12258, 281, 312, 588, 9477, 281, 577, 51358, 51358, 264, 1412, 307, 4927, 13, 51460, 51460, 407, 498, 291, 362, 732, 9102, 300, 362, 588, 13371, 51584, 51584, 819, 1374, 21518, 11, 472, 295, 552, 21716, 1296, 11, 718, 311, 584, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.14726673288548248, "compression_ratio": 1.6946902654867257, "no_speech_prob": 2.857146228052443e-06}, {"id": 1639, "seek": 470568, "start": 4730.08, "end": 4735.400000000001, "text": " different variances, one of them varies between, let's say,", "tokens": [50364, 21277, 1602, 4846, 9102, 281, 4018, 914, 293, 4985, 21977, 13, 50518, 50518, 407, 341, 307, 257, 588, 1021, 935, 50664, 50664, 300, 341, 2010, 295, 19618, 3170, 11, 16235, 12, 6032, 50966, 50966, 19618, 7150, 11, 562, 291, 362, 32807, 34499, 11, 51132, 51132, 8213, 7705, 11, 12258, 281, 312, 588, 9477, 281, 577, 51358, 51358, 264, 1412, 307, 4927, 13, 51460, 51460, 407, 498, 291, 362, 732, 9102, 300, 362, 588, 13371, 51584, 51584, 819, 1374, 21518, 11, 472, 295, 552, 21716, 1296, 11, 718, 311, 584, 11, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.14726673288548248, "compression_ratio": 1.6946902654867257, "no_speech_prob": 2.857146228052443e-06}, {"id": 1640, "seek": 473540, "start": 4735.4, "end": 4736.28, "text": " minus 1 and plus 1.", "tokens": [50364, 3175, 502, 293, 1804, 502, 13, 50408, 50408, 440, 661, 472, 21716, 1296, 3175, 2319, 293, 1804, 2319, 13, 50620, 50620, 440, 1185, 486, 1936, 406, 1689, 3202, 50718, 50718, 281, 264, 472, 300, 21716, 1296, 1804, 502, 293, 3175, 502, 13, 50848, 50848, 492, 603, 787, 1689, 3202, 281, 264, 955, 472, 13, 50972, 50972, 400, 341, 815, 312, 665, 420, 341, 815, 312, 1578, 13, 51120, 51120, 23999, 11, 264, 2539, 3314, 11, 291, 434, 51200, 51200, 516, 281, 362, 281, 764, 264, 32415, 13075, 11, 264, 992, 2744, 11, 51352, 51352, 307, 516, 281, 362, 281, 312, 992, 281, 257, 7226, 1359, 2158, 51470, 51470, 281, 4871, 264, 17443, 300, 574, 412, 341, 5405, 7006, 4846, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1138548812245935, "compression_ratio": 1.8253968253968254, "no_speech_prob": 3.8446069083875045e-06}, {"id": 1641, "seek": 473540, "start": 4736.28, "end": 4740.5199999999995, "text": " The other one varies between minus 100 and plus 100.", "tokens": [50364, 3175, 502, 293, 1804, 502, 13, 50408, 50408, 440, 661, 472, 21716, 1296, 3175, 2319, 293, 1804, 2319, 13, 50620, 50620, 440, 1185, 486, 1936, 406, 1689, 3202, 50718, 50718, 281, 264, 472, 300, 21716, 1296, 1804, 502, 293, 3175, 502, 13, 50848, 50848, 492, 603, 787, 1689, 3202, 281, 264, 955, 472, 13, 50972, 50972, 400, 341, 815, 312, 665, 420, 341, 815, 312, 1578, 13, 51120, 51120, 23999, 11, 264, 2539, 3314, 11, 291, 434, 51200, 51200, 516, 281, 362, 281, 764, 264, 32415, 13075, 11, 264, 992, 2744, 11, 51352, 51352, 307, 516, 281, 362, 281, 312, 992, 281, 257, 7226, 1359, 2158, 51470, 51470, 281, 4871, 264, 17443, 300, 574, 412, 341, 5405, 7006, 4846, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1138548812245935, "compression_ratio": 1.8253968253968254, "no_speech_prob": 3.8446069083875045e-06}, {"id": 1642, "seek": 473540, "start": 4740.5199999999995, "end": 4742.48, "text": " The system will basically not pay attention", "tokens": [50364, 3175, 502, 293, 1804, 502, 13, 50408, 50408, 440, 661, 472, 21716, 1296, 3175, 2319, 293, 1804, 2319, 13, 50620, 50620, 440, 1185, 486, 1936, 406, 1689, 3202, 50718, 50718, 281, 264, 472, 300, 21716, 1296, 1804, 502, 293, 3175, 502, 13, 50848, 50848, 492, 603, 787, 1689, 3202, 281, 264, 955, 472, 13, 50972, 50972, 400, 341, 815, 312, 665, 420, 341, 815, 312, 1578, 13, 51120, 51120, 23999, 11, 264, 2539, 3314, 11, 291, 434, 51200, 51200, 516, 281, 362, 281, 764, 264, 32415, 13075, 11, 264, 992, 2744, 11, 51352, 51352, 307, 516, 281, 362, 281, 312, 992, 281, 257, 7226, 1359, 2158, 51470, 51470, 281, 4871, 264, 17443, 300, 574, 412, 341, 5405, 7006, 4846, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1138548812245935, "compression_ratio": 1.8253968253968254, "no_speech_prob": 3.8446069083875045e-06}, {"id": 1643, "seek": 473540, "start": 4742.48, "end": 4745.08, "text": " to the one that varies between plus 1 and minus 1.", "tokens": [50364, 3175, 502, 293, 1804, 502, 13, 50408, 50408, 440, 661, 472, 21716, 1296, 3175, 2319, 293, 1804, 2319, 13, 50620, 50620, 440, 1185, 486, 1936, 406, 1689, 3202, 50718, 50718, 281, 264, 472, 300, 21716, 1296, 1804, 502, 293, 3175, 502, 13, 50848, 50848, 492, 603, 787, 1689, 3202, 281, 264, 955, 472, 13, 50972, 50972, 400, 341, 815, 312, 665, 420, 341, 815, 312, 1578, 13, 51120, 51120, 23999, 11, 264, 2539, 3314, 11, 291, 434, 51200, 51200, 516, 281, 362, 281, 764, 264, 32415, 13075, 11, 264, 992, 2744, 11, 51352, 51352, 307, 516, 281, 362, 281, 312, 992, 281, 257, 7226, 1359, 2158, 51470, 51470, 281, 4871, 264, 17443, 300, 574, 412, 341, 5405, 7006, 4846, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1138548812245935, "compression_ratio": 1.8253968253968254, "no_speech_prob": 3.8446069083875045e-06}, {"id": 1644, "seek": 473540, "start": 4745.08, "end": 4747.5599999999995, "text": " We'll only pay attention to the big one.", "tokens": [50364, 3175, 502, 293, 1804, 502, 13, 50408, 50408, 440, 661, 472, 21716, 1296, 3175, 2319, 293, 1804, 2319, 13, 50620, 50620, 440, 1185, 486, 1936, 406, 1689, 3202, 50718, 50718, 281, 264, 472, 300, 21716, 1296, 1804, 502, 293, 3175, 502, 13, 50848, 50848, 492, 603, 787, 1689, 3202, 281, 264, 955, 472, 13, 50972, 50972, 400, 341, 815, 312, 665, 420, 341, 815, 312, 1578, 13, 51120, 51120, 23999, 11, 264, 2539, 3314, 11, 291, 434, 51200, 51200, 516, 281, 362, 281, 764, 264, 32415, 13075, 11, 264, 992, 2744, 11, 51352, 51352, 307, 516, 281, 362, 281, 312, 992, 281, 257, 7226, 1359, 2158, 51470, 51470, 281, 4871, 264, 17443, 300, 574, 412, 341, 5405, 7006, 4846, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1138548812245935, "compression_ratio": 1.8253968253968254, "no_speech_prob": 3.8446069083875045e-06}, {"id": 1645, "seek": 473540, "start": 4747.5599999999995, "end": 4750.5199999999995, "text": " And this may be good or this may be bad.", "tokens": [50364, 3175, 502, 293, 1804, 502, 13, 50408, 50408, 440, 661, 472, 21716, 1296, 3175, 2319, 293, 1804, 2319, 13, 50620, 50620, 440, 1185, 486, 1936, 406, 1689, 3202, 50718, 50718, 281, 264, 472, 300, 21716, 1296, 1804, 502, 293, 3175, 502, 13, 50848, 50848, 492, 603, 787, 1689, 3202, 281, 264, 955, 472, 13, 50972, 50972, 400, 341, 815, 312, 665, 420, 341, 815, 312, 1578, 13, 51120, 51120, 23999, 11, 264, 2539, 3314, 11, 291, 434, 51200, 51200, 516, 281, 362, 281, 764, 264, 32415, 13075, 11, 264, 992, 2744, 11, 51352, 51352, 307, 516, 281, 362, 281, 312, 992, 281, 257, 7226, 1359, 2158, 51470, 51470, 281, 4871, 264, 17443, 300, 574, 412, 341, 5405, 7006, 4846, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1138548812245935, "compression_ratio": 1.8253968253968254, "no_speech_prob": 3.8446069083875045e-06}, {"id": 1646, "seek": 473540, "start": 4750.5199999999995, "end": 4752.12, "text": " Furthermore, the learning rate, you're", "tokens": [50364, 3175, 502, 293, 1804, 502, 13, 50408, 50408, 440, 661, 472, 21716, 1296, 3175, 2319, 293, 1804, 2319, 13, 50620, 50620, 440, 1185, 486, 1936, 406, 1689, 3202, 50718, 50718, 281, 264, 472, 300, 21716, 1296, 1804, 502, 293, 3175, 502, 13, 50848, 50848, 492, 603, 787, 1689, 3202, 281, 264, 955, 472, 13, 50972, 50972, 400, 341, 815, 312, 665, 420, 341, 815, 312, 1578, 13, 51120, 51120, 23999, 11, 264, 2539, 3314, 11, 291, 434, 51200, 51200, 516, 281, 362, 281, 764, 264, 32415, 13075, 11, 264, 992, 2744, 11, 51352, 51352, 307, 516, 281, 362, 281, 312, 992, 281, 257, 7226, 1359, 2158, 51470, 51470, 281, 4871, 264, 17443, 300, 574, 412, 341, 5405, 7006, 4846, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1138548812245935, "compression_ratio": 1.8253968253968254, "no_speech_prob": 3.8446069083875045e-06}, {"id": 1647, "seek": 473540, "start": 4752.12, "end": 4755.16, "text": " going to have to use the eta parameter, the set size,", "tokens": [50364, 3175, 502, 293, 1804, 502, 13, 50408, 50408, 440, 661, 472, 21716, 1296, 3175, 2319, 293, 1804, 2319, 13, 50620, 50620, 440, 1185, 486, 1936, 406, 1689, 3202, 50718, 50718, 281, 264, 472, 300, 21716, 1296, 1804, 502, 293, 3175, 502, 13, 50848, 50848, 492, 603, 787, 1689, 3202, 281, 264, 955, 472, 13, 50972, 50972, 400, 341, 815, 312, 665, 420, 341, 815, 312, 1578, 13, 51120, 51120, 23999, 11, 264, 2539, 3314, 11, 291, 434, 51200, 51200, 516, 281, 362, 281, 764, 264, 32415, 13075, 11, 264, 992, 2744, 11, 51352, 51352, 307, 516, 281, 362, 281, 312, 992, 281, 257, 7226, 1359, 2158, 51470, 51470, 281, 4871, 264, 17443, 300, 574, 412, 341, 5405, 7006, 4846, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1138548812245935, "compression_ratio": 1.8253968253968254, "no_speech_prob": 3.8446069083875045e-06}, {"id": 1648, "seek": 473540, "start": 4755.16, "end": 4757.5199999999995, "text": " is going to have to be set to a relatively small value", "tokens": [50364, 3175, 502, 293, 1804, 502, 13, 50408, 50408, 440, 661, 472, 21716, 1296, 3175, 2319, 293, 1804, 2319, 13, 50620, 50620, 440, 1185, 486, 1936, 406, 1689, 3202, 50718, 50718, 281, 264, 472, 300, 21716, 1296, 1804, 502, 293, 3175, 502, 13, 50848, 50848, 492, 603, 787, 1689, 3202, 281, 264, 955, 472, 13, 50972, 50972, 400, 341, 815, 312, 665, 420, 341, 815, 312, 1578, 13, 51120, 51120, 23999, 11, 264, 2539, 3314, 11, 291, 434, 51200, 51200, 516, 281, 362, 281, 764, 264, 32415, 13075, 11, 264, 992, 2744, 11, 51352, 51352, 307, 516, 281, 362, 281, 312, 992, 281, 257, 7226, 1359, 2158, 51470, 51470, 281, 4871, 264, 17443, 300, 574, 412, 341, 5405, 7006, 4846, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1138548812245935, "compression_ratio": 1.8253968253968254, "no_speech_prob": 3.8446069083875045e-06}, {"id": 1649, "seek": 473540, "start": 4757.5199999999995, "end": 4763.96, "text": " to prevent the weights that look at this highly variable input", "tokens": [50364, 3175, 502, 293, 1804, 502, 13, 50408, 50408, 440, 661, 472, 21716, 1296, 3175, 2319, 293, 1804, 2319, 13, 50620, 50620, 440, 1185, 486, 1936, 406, 1689, 3202, 50718, 50718, 281, 264, 472, 300, 21716, 1296, 1804, 502, 293, 3175, 502, 13, 50848, 50848, 492, 603, 787, 1689, 3202, 281, 264, 955, 472, 13, 50972, 50972, 400, 341, 815, 312, 665, 420, 341, 815, 312, 1578, 13, 51120, 51120, 23999, 11, 264, 2539, 3314, 11, 291, 434, 51200, 51200, 516, 281, 362, 281, 764, 264, 32415, 13075, 11, 264, 992, 2744, 11, 51352, 51352, 307, 516, 281, 362, 281, 312, 992, 281, 257, 7226, 1359, 2158, 51470, 51470, 281, 4871, 264, 17443, 300, 574, 412, 341, 5405, 7006, 4846, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1138548812245935, "compression_ratio": 1.8253968253968254, "no_speech_prob": 3.8446069083875045e-06}, {"id": 1650, "seek": 476396, "start": 4763.96, "end": 4766.12, "text": " from diverging.", "tokens": [50364, 490, 18558, 3249, 13, 50472, 50472, 440, 2771, 2448, 366, 516, 281, 312, 588, 2416, 11, 50560, 50560, 570, 264, 2771, 2448, 1936, 366, 24969, 281, 264, 2744, 50670, 50670, 295, 264, 4846, 11, 420, 754, 281, 264, 21977, 295, 264, 4846, 13, 50804, 50804, 407, 498, 291, 500, 380, 528, 428, 1185, 281, 18558, 432, 11, 50952, 50952, 291, 434, 516, 281, 362, 281, 10864, 760, 264, 2539, 3314, 498, 264, 4846, 51104, 51104, 21977, 307, 2416, 13, 51226, 51226, 759, 264, 4846, 9102, 366, 439, 18892, 11, 51350, 51350, 436, 434, 439, 1296, 11, 718, 311, 584, 11, 11803, 293, 21055, 51590, 51590, 2602, 295, 3175, 502, 293, 502, 11, 550, 797, 11, 309, 311, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14051319153840877, "compression_ratio": 1.7932489451476794, "no_speech_prob": 7.295954219443956e-06}, {"id": 1651, "seek": 476396, "start": 4766.12, "end": 4767.88, "text": " The gradients are going to be very large,", "tokens": [50364, 490, 18558, 3249, 13, 50472, 50472, 440, 2771, 2448, 366, 516, 281, 312, 588, 2416, 11, 50560, 50560, 570, 264, 2771, 2448, 1936, 366, 24969, 281, 264, 2744, 50670, 50670, 295, 264, 4846, 11, 420, 754, 281, 264, 21977, 295, 264, 4846, 13, 50804, 50804, 407, 498, 291, 500, 380, 528, 428, 1185, 281, 18558, 432, 11, 50952, 50952, 291, 434, 516, 281, 362, 281, 10864, 760, 264, 2539, 3314, 498, 264, 4846, 51104, 51104, 21977, 307, 2416, 13, 51226, 51226, 759, 264, 4846, 9102, 366, 439, 18892, 11, 51350, 51350, 436, 434, 439, 1296, 11, 718, 311, 584, 11, 11803, 293, 21055, 51590, 51590, 2602, 295, 3175, 502, 293, 502, 11, 550, 797, 11, 309, 311, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14051319153840877, "compression_ratio": 1.7932489451476794, "no_speech_prob": 7.295954219443956e-06}, {"id": 1652, "seek": 476396, "start": 4767.88, "end": 4770.08, "text": " because the gradients basically are proportional to the size", "tokens": [50364, 490, 18558, 3249, 13, 50472, 50472, 440, 2771, 2448, 366, 516, 281, 312, 588, 2416, 11, 50560, 50560, 570, 264, 2771, 2448, 1936, 366, 24969, 281, 264, 2744, 50670, 50670, 295, 264, 4846, 11, 420, 754, 281, 264, 21977, 295, 264, 4846, 13, 50804, 50804, 407, 498, 291, 500, 380, 528, 428, 1185, 281, 18558, 432, 11, 50952, 50952, 291, 434, 516, 281, 362, 281, 10864, 760, 264, 2539, 3314, 498, 264, 4846, 51104, 51104, 21977, 307, 2416, 13, 51226, 51226, 759, 264, 4846, 9102, 366, 439, 18892, 11, 51350, 51350, 436, 434, 439, 1296, 11, 718, 311, 584, 11, 11803, 293, 21055, 51590, 51590, 2602, 295, 3175, 502, 293, 502, 11, 550, 797, 11, 309, 311, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14051319153840877, "compression_ratio": 1.7932489451476794, "no_speech_prob": 7.295954219443956e-06}, {"id": 1653, "seek": 476396, "start": 4770.08, "end": 4772.76, "text": " of the input, or even to the variance of the input.", "tokens": [50364, 490, 18558, 3249, 13, 50472, 50472, 440, 2771, 2448, 366, 516, 281, 312, 588, 2416, 11, 50560, 50560, 570, 264, 2771, 2448, 1936, 366, 24969, 281, 264, 2744, 50670, 50670, 295, 264, 4846, 11, 420, 754, 281, 264, 21977, 295, 264, 4846, 13, 50804, 50804, 407, 498, 291, 500, 380, 528, 428, 1185, 281, 18558, 432, 11, 50952, 50952, 291, 434, 516, 281, 362, 281, 10864, 760, 264, 2539, 3314, 498, 264, 4846, 51104, 51104, 21977, 307, 2416, 13, 51226, 51226, 759, 264, 4846, 9102, 366, 439, 18892, 11, 51350, 51350, 436, 434, 439, 1296, 11, 718, 311, 584, 11, 11803, 293, 21055, 51590, 51590, 2602, 295, 3175, 502, 293, 502, 11, 550, 797, 11, 309, 311, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14051319153840877, "compression_ratio": 1.7932489451476794, "no_speech_prob": 7.295954219443956e-06}, {"id": 1654, "seek": 476396, "start": 4772.76, "end": 4775.72, "text": " So if you don't want your system to diverge,", "tokens": [50364, 490, 18558, 3249, 13, 50472, 50472, 440, 2771, 2448, 366, 516, 281, 312, 588, 2416, 11, 50560, 50560, 570, 264, 2771, 2448, 1936, 366, 24969, 281, 264, 2744, 50670, 50670, 295, 264, 4846, 11, 420, 754, 281, 264, 21977, 295, 264, 4846, 13, 50804, 50804, 407, 498, 291, 500, 380, 528, 428, 1185, 281, 18558, 432, 11, 50952, 50952, 291, 434, 516, 281, 362, 281, 10864, 760, 264, 2539, 3314, 498, 264, 4846, 51104, 51104, 21977, 307, 2416, 13, 51226, 51226, 759, 264, 4846, 9102, 366, 439, 18892, 11, 51350, 51350, 436, 434, 439, 1296, 11, 718, 311, 584, 11, 11803, 293, 21055, 51590, 51590, 2602, 295, 3175, 502, 293, 502, 11, 550, 797, 11, 309, 311, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14051319153840877, "compression_ratio": 1.7932489451476794, "no_speech_prob": 7.295954219443956e-06}, {"id": 1655, "seek": 476396, "start": 4775.72, "end": 4778.76, "text": " you're going to have to tune down the learning rate if the input", "tokens": [50364, 490, 18558, 3249, 13, 50472, 50472, 440, 2771, 2448, 366, 516, 281, 312, 588, 2416, 11, 50560, 50560, 570, 264, 2771, 2448, 1936, 366, 24969, 281, 264, 2744, 50670, 50670, 295, 264, 4846, 11, 420, 754, 281, 264, 21977, 295, 264, 4846, 13, 50804, 50804, 407, 498, 291, 500, 380, 528, 428, 1185, 281, 18558, 432, 11, 50952, 50952, 291, 434, 516, 281, 362, 281, 10864, 760, 264, 2539, 3314, 498, 264, 4846, 51104, 51104, 21977, 307, 2416, 13, 51226, 51226, 759, 264, 4846, 9102, 366, 439, 18892, 11, 51350, 51350, 436, 434, 439, 1296, 11, 718, 311, 584, 11, 11803, 293, 21055, 51590, 51590, 2602, 295, 3175, 502, 293, 502, 11, 550, 797, 11, 309, 311, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14051319153840877, "compression_ratio": 1.7932489451476794, "no_speech_prob": 7.295954219443956e-06}, {"id": 1656, "seek": 476396, "start": 4778.76, "end": 4781.2, "text": " variance is large.", "tokens": [50364, 490, 18558, 3249, 13, 50472, 50472, 440, 2771, 2448, 366, 516, 281, 312, 588, 2416, 11, 50560, 50560, 570, 264, 2771, 2448, 1936, 366, 24969, 281, 264, 2744, 50670, 50670, 295, 264, 4846, 11, 420, 754, 281, 264, 21977, 295, 264, 4846, 13, 50804, 50804, 407, 498, 291, 500, 380, 528, 428, 1185, 281, 18558, 432, 11, 50952, 50952, 291, 434, 516, 281, 362, 281, 10864, 760, 264, 2539, 3314, 498, 264, 4846, 51104, 51104, 21977, 307, 2416, 13, 51226, 51226, 759, 264, 4846, 9102, 366, 439, 18892, 11, 51350, 51350, 436, 434, 439, 1296, 11, 718, 311, 584, 11, 11803, 293, 21055, 51590, 51590, 2602, 295, 3175, 502, 293, 502, 11, 550, 797, 11, 309, 311, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14051319153840877, "compression_ratio": 1.7932489451476794, "no_speech_prob": 7.295954219443956e-06}, {"id": 1657, "seek": 476396, "start": 4781.2, "end": 4783.68, "text": " If the input variables are all shifted,", "tokens": [50364, 490, 18558, 3249, 13, 50472, 50472, 440, 2771, 2448, 366, 516, 281, 312, 588, 2416, 11, 50560, 50560, 570, 264, 2771, 2448, 1936, 366, 24969, 281, 264, 2744, 50670, 50670, 295, 264, 4846, 11, 420, 754, 281, 264, 21977, 295, 264, 4846, 13, 50804, 50804, 407, 498, 291, 500, 380, 528, 428, 1185, 281, 18558, 432, 11, 50952, 50952, 291, 434, 516, 281, 362, 281, 10864, 760, 264, 2539, 3314, 498, 264, 4846, 51104, 51104, 21977, 307, 2416, 13, 51226, 51226, 759, 264, 4846, 9102, 366, 439, 18892, 11, 51350, 51350, 436, 434, 439, 1296, 11, 718, 311, 584, 11, 11803, 293, 21055, 51590, 51590, 2602, 295, 3175, 502, 293, 502, 11, 550, 797, 11, 309, 311, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14051319153840877, "compression_ratio": 1.7932489451476794, "no_speech_prob": 7.295954219443956e-06}, {"id": 1658, "seek": 476396, "start": 4783.68, "end": 4788.4800000000005, "text": " they're all between, let's say, 99 and 101", "tokens": [50364, 490, 18558, 3249, 13, 50472, 50472, 440, 2771, 2448, 366, 516, 281, 312, 588, 2416, 11, 50560, 50560, 570, 264, 2771, 2448, 1936, 366, 24969, 281, 264, 2744, 50670, 50670, 295, 264, 4846, 11, 420, 754, 281, 264, 21977, 295, 264, 4846, 13, 50804, 50804, 407, 498, 291, 500, 380, 528, 428, 1185, 281, 18558, 432, 11, 50952, 50952, 291, 434, 516, 281, 362, 281, 10864, 760, 264, 2539, 3314, 498, 264, 4846, 51104, 51104, 21977, 307, 2416, 13, 51226, 51226, 759, 264, 4846, 9102, 366, 439, 18892, 11, 51350, 51350, 436, 434, 439, 1296, 11, 718, 311, 584, 11, 11803, 293, 21055, 51590, 51590, 2602, 295, 3175, 502, 293, 502, 11, 550, 797, 11, 309, 311, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14051319153840877, "compression_ratio": 1.7932489451476794, "no_speech_prob": 7.295954219443956e-06}, {"id": 1659, "seek": 476396, "start": 4788.4800000000005, "end": 4790.96, "text": " instead of minus 1 and 1, then again, it's", "tokens": [50364, 490, 18558, 3249, 13, 50472, 50472, 440, 2771, 2448, 366, 516, 281, 312, 588, 2416, 11, 50560, 50560, 570, 264, 2771, 2448, 1936, 366, 24969, 281, 264, 2744, 50670, 50670, 295, 264, 4846, 11, 420, 754, 281, 264, 21977, 295, 264, 4846, 13, 50804, 50804, 407, 498, 291, 500, 380, 528, 428, 1185, 281, 18558, 432, 11, 50952, 50952, 291, 434, 516, 281, 362, 281, 10864, 760, 264, 2539, 3314, 498, 264, 4846, 51104, 51104, 21977, 307, 2416, 13, 51226, 51226, 759, 264, 4846, 9102, 366, 439, 18892, 11, 51350, 51350, 436, 434, 439, 1296, 11, 718, 311, 584, 11, 11803, 293, 21055, 51590, 51590, 2602, 295, 3175, 502, 293, 502, 11, 550, 797, 11, 309, 311, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14051319153840877, "compression_ratio": 1.7932489451476794, "no_speech_prob": 7.295954219443956e-06}, {"id": 1660, "seek": 479096, "start": 4790.96, "end": 4794.04, "text": " very difficult for a gradient-based algorithm that", "tokens": [50364, 588, 2252, 337, 257, 16235, 12, 6032, 9284, 300, 50518, 50518, 4960, 32807, 34499, 281, 2573, 484, 729, 721, 13, 50744, 50744, 3764, 11, 286, 603, 751, 466, 341, 544, 25983, 1780, 13, 50866, 50866, 1779, 586, 11, 445, 1604, 264, 4282, 51008, 51008, 300, 291, 643, 281, 2710, 1125, 428, 4846, 13, 51094, 51094, 407, 1936, 11, 747, 633, 7006, 295, 428, 4846, 11, 51210, 51210, 16390, 264, 914, 13, 51284, 51284, 509, 14722, 264, 914, 670, 264, 3097, 992, 295, 1184, 7006, 13, 51410, 51410, 407, 718, 311, 584, 428, 3097, 992, 307, 257, 992, 295, 5267, 13, 51520, 51520, 440, 5267, 366, 11, 718, 311, 584, 11, 2319, 538, 2319, 18668, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.1298518942183807, "compression_ratio": 1.6766917293233083, "no_speech_prob": 9.515360034129117e-06}, {"id": 1661, "seek": 479096, "start": 4794.04, "end": 4798.56, "text": " uses weighted sums to figure out those things.", "tokens": [50364, 588, 2252, 337, 257, 16235, 12, 6032, 9284, 300, 50518, 50518, 4960, 32807, 34499, 281, 2573, 484, 729, 721, 13, 50744, 50744, 3764, 11, 286, 603, 751, 466, 341, 544, 25983, 1780, 13, 50866, 50866, 1779, 586, 11, 445, 1604, 264, 4282, 51008, 51008, 300, 291, 643, 281, 2710, 1125, 428, 4846, 13, 51094, 51094, 407, 1936, 11, 747, 633, 7006, 295, 428, 4846, 11, 51210, 51210, 16390, 264, 914, 13, 51284, 51284, 509, 14722, 264, 914, 670, 264, 3097, 992, 295, 1184, 7006, 13, 51410, 51410, 407, 718, 311, 584, 428, 3097, 992, 307, 257, 992, 295, 5267, 13, 51520, 51520, 440, 5267, 366, 11, 718, 311, 584, 11, 2319, 538, 2319, 18668, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.1298518942183807, "compression_ratio": 1.6766917293233083, "no_speech_prob": 9.515360034129117e-06}, {"id": 1662, "seek": 479096, "start": 4798.56, "end": 4801.0, "text": " Again, I'll talk about this more formally later.", "tokens": [50364, 588, 2252, 337, 257, 16235, 12, 6032, 9284, 300, 50518, 50518, 4960, 32807, 34499, 281, 2573, 484, 729, 721, 13, 50744, 50744, 3764, 11, 286, 603, 751, 466, 341, 544, 25983, 1780, 13, 50866, 50866, 1779, 586, 11, 445, 1604, 264, 4282, 51008, 51008, 300, 291, 643, 281, 2710, 1125, 428, 4846, 13, 51094, 51094, 407, 1936, 11, 747, 633, 7006, 295, 428, 4846, 11, 51210, 51210, 16390, 264, 914, 13, 51284, 51284, 509, 14722, 264, 914, 670, 264, 3097, 992, 295, 1184, 7006, 13, 51410, 51410, 407, 718, 311, 584, 428, 3097, 992, 307, 257, 992, 295, 5267, 13, 51520, 51520, 440, 5267, 366, 11, 718, 311, 584, 11, 2319, 538, 2319, 18668, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.1298518942183807, "compression_ratio": 1.6766917293233083, "no_speech_prob": 9.515360034129117e-06}, {"id": 1663, "seek": 479096, "start": 4801.0, "end": 4803.84, "text": " Right now, just remember the trick", "tokens": [50364, 588, 2252, 337, 257, 16235, 12, 6032, 9284, 300, 50518, 50518, 4960, 32807, 34499, 281, 2573, 484, 729, 721, 13, 50744, 50744, 3764, 11, 286, 603, 751, 466, 341, 544, 25983, 1780, 13, 50866, 50866, 1779, 586, 11, 445, 1604, 264, 4282, 51008, 51008, 300, 291, 643, 281, 2710, 1125, 428, 4846, 13, 51094, 51094, 407, 1936, 11, 747, 633, 7006, 295, 428, 4846, 11, 51210, 51210, 16390, 264, 914, 13, 51284, 51284, 509, 14722, 264, 914, 670, 264, 3097, 992, 295, 1184, 7006, 13, 51410, 51410, 407, 718, 311, 584, 428, 3097, 992, 307, 257, 992, 295, 5267, 13, 51520, 51520, 440, 5267, 366, 11, 718, 311, 584, 11, 2319, 538, 2319, 18668, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.1298518942183807, "compression_ratio": 1.6766917293233083, "no_speech_prob": 9.515360034129117e-06}, {"id": 1664, "seek": 479096, "start": 4803.84, "end": 4805.56, "text": " that you need to normalize your input.", "tokens": [50364, 588, 2252, 337, 257, 16235, 12, 6032, 9284, 300, 50518, 50518, 4960, 32807, 34499, 281, 2573, 484, 729, 721, 13, 50744, 50744, 3764, 11, 286, 603, 751, 466, 341, 544, 25983, 1780, 13, 50866, 50866, 1779, 586, 11, 445, 1604, 264, 4282, 51008, 51008, 300, 291, 643, 281, 2710, 1125, 428, 4846, 13, 51094, 51094, 407, 1936, 11, 747, 633, 7006, 295, 428, 4846, 11, 51210, 51210, 16390, 264, 914, 13, 51284, 51284, 509, 14722, 264, 914, 670, 264, 3097, 992, 295, 1184, 7006, 13, 51410, 51410, 407, 718, 311, 584, 428, 3097, 992, 307, 257, 992, 295, 5267, 13, 51520, 51520, 440, 5267, 366, 11, 718, 311, 584, 11, 2319, 538, 2319, 18668, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.1298518942183807, "compression_ratio": 1.6766917293233083, "no_speech_prob": 9.515360034129117e-06}, {"id": 1665, "seek": 479096, "start": 4805.56, "end": 4807.88, "text": " So basically, take every variable of your input,", "tokens": [50364, 588, 2252, 337, 257, 16235, 12, 6032, 9284, 300, 50518, 50518, 4960, 32807, 34499, 281, 2573, 484, 729, 721, 13, 50744, 50744, 3764, 11, 286, 603, 751, 466, 341, 544, 25983, 1780, 13, 50866, 50866, 1779, 586, 11, 445, 1604, 264, 4282, 51008, 51008, 300, 291, 643, 281, 2710, 1125, 428, 4846, 13, 51094, 51094, 407, 1936, 11, 747, 633, 7006, 295, 428, 4846, 11, 51210, 51210, 16390, 264, 914, 13, 51284, 51284, 509, 14722, 264, 914, 670, 264, 3097, 992, 295, 1184, 7006, 13, 51410, 51410, 407, 718, 311, 584, 428, 3097, 992, 307, 257, 992, 295, 5267, 13, 51520, 51520, 440, 5267, 366, 11, 718, 311, 584, 11, 2319, 538, 2319, 18668, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.1298518942183807, "compression_ratio": 1.6766917293233083, "no_speech_prob": 9.515360034129117e-06}, {"id": 1666, "seek": 479096, "start": 4807.88, "end": 4809.36, "text": " subtract the mean.", "tokens": [50364, 588, 2252, 337, 257, 16235, 12, 6032, 9284, 300, 50518, 50518, 4960, 32807, 34499, 281, 2573, 484, 729, 721, 13, 50744, 50744, 3764, 11, 286, 603, 751, 466, 341, 544, 25983, 1780, 13, 50866, 50866, 1779, 586, 11, 445, 1604, 264, 4282, 51008, 51008, 300, 291, 643, 281, 2710, 1125, 428, 4846, 13, 51094, 51094, 407, 1936, 11, 747, 633, 7006, 295, 428, 4846, 11, 51210, 51210, 16390, 264, 914, 13, 51284, 51284, 509, 14722, 264, 914, 670, 264, 3097, 992, 295, 1184, 7006, 13, 51410, 51410, 407, 718, 311, 584, 428, 3097, 992, 307, 257, 992, 295, 5267, 13, 51520, 51520, 440, 5267, 366, 11, 718, 311, 584, 11, 2319, 538, 2319, 18668, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.1298518942183807, "compression_ratio": 1.6766917293233083, "no_speech_prob": 9.515360034129117e-06}, {"id": 1667, "seek": 479096, "start": 4809.36, "end": 4811.88, "text": " You compute the mean over the training set of each variable.", "tokens": [50364, 588, 2252, 337, 257, 16235, 12, 6032, 9284, 300, 50518, 50518, 4960, 32807, 34499, 281, 2573, 484, 729, 721, 13, 50744, 50744, 3764, 11, 286, 603, 751, 466, 341, 544, 25983, 1780, 13, 50866, 50866, 1779, 586, 11, 445, 1604, 264, 4282, 51008, 51008, 300, 291, 643, 281, 2710, 1125, 428, 4846, 13, 51094, 51094, 407, 1936, 11, 747, 633, 7006, 295, 428, 4846, 11, 51210, 51210, 16390, 264, 914, 13, 51284, 51284, 509, 14722, 264, 914, 670, 264, 3097, 992, 295, 1184, 7006, 13, 51410, 51410, 407, 718, 311, 584, 428, 3097, 992, 307, 257, 992, 295, 5267, 13, 51520, 51520, 440, 5267, 366, 11, 718, 311, 584, 11, 2319, 538, 2319, 18668, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.1298518942183807, "compression_ratio": 1.6766917293233083, "no_speech_prob": 9.515360034129117e-06}, {"id": 1668, "seek": 479096, "start": 4811.88, "end": 4814.08, "text": " So let's say your training set is a set of images.", "tokens": [50364, 588, 2252, 337, 257, 16235, 12, 6032, 9284, 300, 50518, 50518, 4960, 32807, 34499, 281, 2573, 484, 729, 721, 13, 50744, 50744, 3764, 11, 286, 603, 751, 466, 341, 544, 25983, 1780, 13, 50866, 50866, 1779, 586, 11, 445, 1604, 264, 4282, 51008, 51008, 300, 291, 643, 281, 2710, 1125, 428, 4846, 13, 51094, 51094, 407, 1936, 11, 747, 633, 7006, 295, 428, 4846, 11, 51210, 51210, 16390, 264, 914, 13, 51284, 51284, 509, 14722, 264, 914, 670, 264, 3097, 992, 295, 1184, 7006, 13, 51410, 51410, 407, 718, 311, 584, 428, 3097, 992, 307, 257, 992, 295, 5267, 13, 51520, 51520, 440, 5267, 366, 11, 718, 311, 584, 11, 2319, 538, 2319, 18668, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.1298518942183807, "compression_ratio": 1.6766917293233083, "no_speech_prob": 9.515360034129117e-06}, {"id": 1669, "seek": 479096, "start": 4814.08, "end": 4818.6, "text": " The images are, let's say, 100 by 100 pixels.", "tokens": [50364, 588, 2252, 337, 257, 16235, 12, 6032, 9284, 300, 50518, 50518, 4960, 32807, 34499, 281, 2573, 484, 729, 721, 13, 50744, 50744, 3764, 11, 286, 603, 751, 466, 341, 544, 25983, 1780, 13, 50866, 50866, 1779, 586, 11, 445, 1604, 264, 4282, 51008, 51008, 300, 291, 643, 281, 2710, 1125, 428, 4846, 13, 51094, 51094, 407, 1936, 11, 747, 633, 7006, 295, 428, 4846, 11, 51210, 51210, 16390, 264, 914, 13, 51284, 51284, 509, 14722, 264, 914, 670, 264, 3097, 992, 295, 1184, 7006, 13, 51410, 51410, 407, 718, 311, 584, 428, 3097, 992, 307, 257, 992, 295, 5267, 13, 51520, 51520, 440, 5267, 366, 11, 718, 311, 584, 11, 2319, 538, 2319, 18668, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.1298518942183807, "compression_ratio": 1.6766917293233083, "no_speech_prob": 9.515360034129117e-06}, {"id": 1670, "seek": 481860, "start": 4818.6, "end": 4821.84, "text": " Let's say they're great scale, so you get 10,000 variables.", "tokens": [50364, 961, 311, 584, 436, 434, 869, 4373, 11, 370, 291, 483, 1266, 11, 1360, 9102, 13, 50526, 50526, 400, 718, 311, 584, 291, 483, 257, 2459, 10938, 13, 50620, 50620, 509, 434, 516, 281, 747, 1184, 295, 729, 1266, 11, 1360, 9102, 11, 50892, 50892, 14722, 264, 914, 295, 309, 670, 264, 3097, 992, 11, 50998, 50998, 14722, 264, 3832, 25163, 295, 309, 51098, 51098, 670, 264, 2302, 3097, 992, 13, 51254, 51254, 400, 264, 10938, 291, 434, 516, 281, 855, 281, 428, 1185, 51370, 51370, 366, 516, 281, 312, 257, 6889, 689, 291, 362, 16390, 292, 264, 914, 51628, 51628, 490, 1184, 295, 264, 1266, 11, 1360, 18668, 293, 6666, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12155946648639182, "compression_ratio": 1.8963963963963963, "no_speech_prob": 7.5274533628544305e-06}, {"id": 1671, "seek": 481860, "start": 4821.84, "end": 4823.72, "text": " And let's say you get a million samples.", "tokens": [50364, 961, 311, 584, 436, 434, 869, 4373, 11, 370, 291, 483, 1266, 11, 1360, 9102, 13, 50526, 50526, 400, 718, 311, 584, 291, 483, 257, 2459, 10938, 13, 50620, 50620, 509, 434, 516, 281, 747, 1184, 295, 729, 1266, 11, 1360, 9102, 11, 50892, 50892, 14722, 264, 914, 295, 309, 670, 264, 3097, 992, 11, 50998, 50998, 14722, 264, 3832, 25163, 295, 309, 51098, 51098, 670, 264, 2302, 3097, 992, 13, 51254, 51254, 400, 264, 10938, 291, 434, 516, 281, 855, 281, 428, 1185, 51370, 51370, 366, 516, 281, 312, 257, 6889, 689, 291, 362, 16390, 292, 264, 914, 51628, 51628, 490, 1184, 295, 264, 1266, 11, 1360, 18668, 293, 6666, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12155946648639182, "compression_ratio": 1.8963963963963963, "no_speech_prob": 7.5274533628544305e-06}, {"id": 1672, "seek": 481860, "start": 4823.72, "end": 4829.160000000001, "text": " You're going to take each of those 10,000 variables,", "tokens": [50364, 961, 311, 584, 436, 434, 869, 4373, 11, 370, 291, 483, 1266, 11, 1360, 9102, 13, 50526, 50526, 400, 718, 311, 584, 291, 483, 257, 2459, 10938, 13, 50620, 50620, 509, 434, 516, 281, 747, 1184, 295, 729, 1266, 11, 1360, 9102, 11, 50892, 50892, 14722, 264, 914, 295, 309, 670, 264, 3097, 992, 11, 50998, 50998, 14722, 264, 3832, 25163, 295, 309, 51098, 51098, 670, 264, 2302, 3097, 992, 13, 51254, 51254, 400, 264, 10938, 291, 434, 516, 281, 855, 281, 428, 1185, 51370, 51370, 366, 516, 281, 312, 257, 6889, 689, 291, 362, 16390, 292, 264, 914, 51628, 51628, 490, 1184, 295, 264, 1266, 11, 1360, 18668, 293, 6666, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12155946648639182, "compression_ratio": 1.8963963963963963, "no_speech_prob": 7.5274533628544305e-06}, {"id": 1673, "seek": 481860, "start": 4829.160000000001, "end": 4831.280000000001, "text": " compute the mean of it over the training set,", "tokens": [50364, 961, 311, 584, 436, 434, 869, 4373, 11, 370, 291, 483, 1266, 11, 1360, 9102, 13, 50526, 50526, 400, 718, 311, 584, 291, 483, 257, 2459, 10938, 13, 50620, 50620, 509, 434, 516, 281, 747, 1184, 295, 729, 1266, 11, 1360, 9102, 11, 50892, 50892, 14722, 264, 914, 295, 309, 670, 264, 3097, 992, 11, 50998, 50998, 14722, 264, 3832, 25163, 295, 309, 51098, 51098, 670, 264, 2302, 3097, 992, 13, 51254, 51254, 400, 264, 10938, 291, 434, 516, 281, 855, 281, 428, 1185, 51370, 51370, 366, 516, 281, 312, 257, 6889, 689, 291, 362, 16390, 292, 264, 914, 51628, 51628, 490, 1184, 295, 264, 1266, 11, 1360, 18668, 293, 6666, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12155946648639182, "compression_ratio": 1.8963963963963963, "no_speech_prob": 7.5274533628544305e-06}, {"id": 1674, "seek": 481860, "start": 4831.280000000001, "end": 4833.280000000001, "text": " compute the standard deviation of it", "tokens": [50364, 961, 311, 584, 436, 434, 869, 4373, 11, 370, 291, 483, 1266, 11, 1360, 9102, 13, 50526, 50526, 400, 718, 311, 584, 291, 483, 257, 2459, 10938, 13, 50620, 50620, 509, 434, 516, 281, 747, 1184, 295, 729, 1266, 11, 1360, 9102, 11, 50892, 50892, 14722, 264, 914, 295, 309, 670, 264, 3097, 992, 11, 50998, 50998, 14722, 264, 3832, 25163, 295, 309, 51098, 51098, 670, 264, 2302, 3097, 992, 13, 51254, 51254, 400, 264, 10938, 291, 434, 516, 281, 855, 281, 428, 1185, 51370, 51370, 366, 516, 281, 312, 257, 6889, 689, 291, 362, 16390, 292, 264, 914, 51628, 51628, 490, 1184, 295, 264, 1266, 11, 1360, 18668, 293, 6666, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12155946648639182, "compression_ratio": 1.8963963963963963, "no_speech_prob": 7.5274533628544305e-06}, {"id": 1675, "seek": 481860, "start": 4833.280000000001, "end": 4836.400000000001, "text": " over the entire training set.", "tokens": [50364, 961, 311, 584, 436, 434, 869, 4373, 11, 370, 291, 483, 1266, 11, 1360, 9102, 13, 50526, 50526, 400, 718, 311, 584, 291, 483, 257, 2459, 10938, 13, 50620, 50620, 509, 434, 516, 281, 747, 1184, 295, 729, 1266, 11, 1360, 9102, 11, 50892, 50892, 14722, 264, 914, 295, 309, 670, 264, 3097, 992, 11, 50998, 50998, 14722, 264, 3832, 25163, 295, 309, 51098, 51098, 670, 264, 2302, 3097, 992, 13, 51254, 51254, 400, 264, 10938, 291, 434, 516, 281, 855, 281, 428, 1185, 51370, 51370, 366, 516, 281, 312, 257, 6889, 689, 291, 362, 16390, 292, 264, 914, 51628, 51628, 490, 1184, 295, 264, 1266, 11, 1360, 18668, 293, 6666, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12155946648639182, "compression_ratio": 1.8963963963963963, "no_speech_prob": 7.5274533628544305e-06}, {"id": 1676, "seek": 481860, "start": 4836.400000000001, "end": 4838.72, "text": " And the samples you're going to show to your system", "tokens": [50364, 961, 311, 584, 436, 434, 869, 4373, 11, 370, 291, 483, 1266, 11, 1360, 9102, 13, 50526, 50526, 400, 718, 311, 584, 291, 483, 257, 2459, 10938, 13, 50620, 50620, 509, 434, 516, 281, 747, 1184, 295, 729, 1266, 11, 1360, 9102, 11, 50892, 50892, 14722, 264, 914, 295, 309, 670, 264, 3097, 992, 11, 50998, 50998, 14722, 264, 3832, 25163, 295, 309, 51098, 51098, 670, 264, 2302, 3097, 992, 13, 51254, 51254, 400, 264, 10938, 291, 434, 516, 281, 855, 281, 428, 1185, 51370, 51370, 366, 516, 281, 312, 257, 6889, 689, 291, 362, 16390, 292, 264, 914, 51628, 51628, 490, 1184, 295, 264, 1266, 11, 1360, 18668, 293, 6666, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12155946648639182, "compression_ratio": 1.8963963963963963, "no_speech_prob": 7.5274533628544305e-06}, {"id": 1677, "seek": 481860, "start": 4838.72, "end": 4843.88, "text": " are going to be a sample where you have subtracted the mean", "tokens": [50364, 961, 311, 584, 436, 434, 869, 4373, 11, 370, 291, 483, 1266, 11, 1360, 9102, 13, 50526, 50526, 400, 718, 311, 584, 291, 483, 257, 2459, 10938, 13, 50620, 50620, 509, 434, 516, 281, 747, 1184, 295, 729, 1266, 11, 1360, 9102, 11, 50892, 50892, 14722, 264, 914, 295, 309, 670, 264, 3097, 992, 11, 50998, 50998, 14722, 264, 3832, 25163, 295, 309, 51098, 51098, 670, 264, 2302, 3097, 992, 13, 51254, 51254, 400, 264, 10938, 291, 434, 516, 281, 855, 281, 428, 1185, 51370, 51370, 366, 516, 281, 312, 257, 6889, 689, 291, 362, 16390, 292, 264, 914, 51628, 51628, 490, 1184, 295, 264, 1266, 11, 1360, 18668, 293, 6666, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12155946648639182, "compression_ratio": 1.8963963963963963, "no_speech_prob": 7.5274533628544305e-06}, {"id": 1678, "seek": 481860, "start": 4843.88, "end": 4847.320000000001, "text": " from each of the 10,000 pixels and divided", "tokens": [50364, 961, 311, 584, 436, 434, 869, 4373, 11, 370, 291, 483, 1266, 11, 1360, 9102, 13, 50526, 50526, 400, 718, 311, 584, 291, 483, 257, 2459, 10938, 13, 50620, 50620, 509, 434, 516, 281, 747, 1184, 295, 729, 1266, 11, 1360, 9102, 11, 50892, 50892, 14722, 264, 914, 295, 309, 670, 264, 3097, 992, 11, 50998, 50998, 14722, 264, 3832, 25163, 295, 309, 51098, 51098, 670, 264, 2302, 3097, 992, 13, 51254, 51254, 400, 264, 10938, 291, 434, 516, 281, 855, 281, 428, 1185, 51370, 51370, 366, 516, 281, 312, 257, 6889, 689, 291, 362, 16390, 292, 264, 914, 51628, 51628, 490, 1184, 295, 264, 1266, 11, 1360, 18668, 293, 6666, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.12155946648639182, "compression_ratio": 1.8963963963963963, "no_speech_prob": 7.5274533628544305e-06}, {"id": 1679, "seek": 484732, "start": 4847.32, "end": 4853.04, "text": " the resulting values by the standard deviation", "tokens": [50364, 264, 16505, 4190, 538, 264, 3832, 25163, 50650, 50650, 300, 291, 40610, 13, 50808, 50808, 407, 586, 437, 291, 362, 307, 257, 3840, 295, 9102, 50896, 50896, 300, 366, 439, 4018, 914, 293, 439, 3832, 25163, 2681, 281, 502, 13, 51206, 51206, 400, 300, 1669, 428, 18161, 2533, 2055, 13, 51368, 51368, 663, 1669, 428, 19618, 9284, 2055, 11, 767, 13, 51552, 51552, 492, 362, 767, 257, 1168, 13, 51644, 51644, 407, 291, 1066, 18617, 34520, 35, 2010, 7150, 11, 16235, 12, 6032, 7150, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16200152407871204, "compression_ratio": 1.639269406392694, "no_speech_prob": 4.424764028954087e-06}, {"id": 1680, "seek": 484732, "start": 4853.04, "end": 4856.2, "text": " that you computed.", "tokens": [50364, 264, 16505, 4190, 538, 264, 3832, 25163, 50650, 50650, 300, 291, 40610, 13, 50808, 50808, 407, 586, 437, 291, 362, 307, 257, 3840, 295, 9102, 50896, 50896, 300, 366, 439, 4018, 914, 293, 439, 3832, 25163, 2681, 281, 502, 13, 51206, 51206, 400, 300, 1669, 428, 18161, 2533, 2055, 13, 51368, 51368, 663, 1669, 428, 19618, 9284, 2055, 11, 767, 13, 51552, 51552, 492, 362, 767, 257, 1168, 13, 51644, 51644, 407, 291, 1066, 18617, 34520, 35, 2010, 7150, 11, 16235, 12, 6032, 7150, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16200152407871204, "compression_ratio": 1.639269406392694, "no_speech_prob": 4.424764028954087e-06}, {"id": 1681, "seek": 484732, "start": 4856.2, "end": 4857.96, "text": " So now what you have is a bunch of variables", "tokens": [50364, 264, 16505, 4190, 538, 264, 3832, 25163, 50650, 50650, 300, 291, 40610, 13, 50808, 50808, 407, 586, 437, 291, 362, 307, 257, 3840, 295, 9102, 50896, 50896, 300, 366, 439, 4018, 914, 293, 439, 3832, 25163, 2681, 281, 502, 13, 51206, 51206, 400, 300, 1669, 428, 18161, 2533, 2055, 13, 51368, 51368, 663, 1669, 428, 19618, 9284, 2055, 11, 767, 13, 51552, 51552, 492, 362, 767, 257, 1168, 13, 51644, 51644, 407, 291, 1066, 18617, 34520, 35, 2010, 7150, 11, 16235, 12, 6032, 7150, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16200152407871204, "compression_ratio": 1.639269406392694, "no_speech_prob": 4.424764028954087e-06}, {"id": 1682, "seek": 484732, "start": 4857.96, "end": 4864.16, "text": " that are all zero mean and all standard deviation equal to 1.", "tokens": [50364, 264, 16505, 4190, 538, 264, 3832, 25163, 50650, 50650, 300, 291, 40610, 13, 50808, 50808, 407, 586, 437, 291, 362, 307, 257, 3840, 295, 9102, 50896, 50896, 300, 366, 439, 4018, 914, 293, 439, 3832, 25163, 2681, 281, 502, 13, 51206, 51206, 400, 300, 1669, 428, 18161, 2533, 2055, 13, 51368, 51368, 663, 1669, 428, 19618, 9284, 2055, 11, 767, 13, 51552, 51552, 492, 362, 767, 257, 1168, 13, 51644, 51644, 407, 291, 1066, 18617, 34520, 35, 2010, 7150, 11, 16235, 12, 6032, 7150, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16200152407871204, "compression_ratio": 1.639269406392694, "no_speech_prob": 4.424764028954087e-06}, {"id": 1683, "seek": 484732, "start": 4864.16, "end": 4867.4, "text": " And that makes your neural net happy.", "tokens": [50364, 264, 16505, 4190, 538, 264, 3832, 25163, 50650, 50650, 300, 291, 40610, 13, 50808, 50808, 407, 586, 437, 291, 362, 307, 257, 3840, 295, 9102, 50896, 50896, 300, 366, 439, 4018, 914, 293, 439, 3832, 25163, 2681, 281, 502, 13, 51206, 51206, 400, 300, 1669, 428, 18161, 2533, 2055, 13, 51368, 51368, 663, 1669, 428, 19618, 9284, 2055, 11, 767, 13, 51552, 51552, 492, 362, 767, 257, 1168, 13, 51644, 51644, 407, 291, 1066, 18617, 34520, 35, 2010, 7150, 11, 16235, 12, 6032, 7150, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16200152407871204, "compression_ratio": 1.639269406392694, "no_speech_prob": 4.424764028954087e-06}, {"id": 1684, "seek": 484732, "start": 4867.4, "end": 4871.08, "text": " That makes your optimization algorithm happy, actually.", "tokens": [50364, 264, 16505, 4190, 538, 264, 3832, 25163, 50650, 50650, 300, 291, 40610, 13, 50808, 50808, 407, 586, 437, 291, 362, 307, 257, 3840, 295, 9102, 50896, 50896, 300, 366, 439, 4018, 914, 293, 439, 3832, 25163, 2681, 281, 502, 13, 51206, 51206, 400, 300, 1669, 428, 18161, 2533, 2055, 13, 51368, 51368, 663, 1669, 428, 19618, 9284, 2055, 11, 767, 13, 51552, 51552, 492, 362, 767, 257, 1168, 13, 51644, 51644, 407, 291, 1066, 18617, 34520, 35, 2010, 7150, 11, 16235, 12, 6032, 7150, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16200152407871204, "compression_ratio": 1.639269406392694, "no_speech_prob": 4.424764028954087e-06}, {"id": 1685, "seek": 484732, "start": 4871.08, "end": 4872.92, "text": " We have actually a question.", "tokens": [50364, 264, 16505, 4190, 538, 264, 3832, 25163, 50650, 50650, 300, 291, 40610, 13, 50808, 50808, 407, 586, 437, 291, 362, 307, 257, 3840, 295, 9102, 50896, 50896, 300, 366, 439, 4018, 914, 293, 439, 3832, 25163, 2681, 281, 502, 13, 51206, 51206, 400, 300, 1669, 428, 18161, 2533, 2055, 13, 51368, 51368, 663, 1669, 428, 19618, 9284, 2055, 11, 767, 13, 51552, 51552, 492, 362, 767, 257, 1168, 13, 51644, 51644, 407, 291, 1066, 18617, 34520, 35, 2010, 7150, 11, 16235, 12, 6032, 7150, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16200152407871204, "compression_ratio": 1.639269406392694, "no_speech_prob": 4.424764028954087e-06}, {"id": 1686, "seek": 484732, "start": 4872.92, "end": 4877.04, "text": " So you keep repeating SGD type methods, gradient-based methods.", "tokens": [50364, 264, 16505, 4190, 538, 264, 3832, 25163, 50650, 50650, 300, 291, 40610, 13, 50808, 50808, 407, 586, 437, 291, 362, 307, 257, 3840, 295, 9102, 50896, 50896, 300, 366, 439, 4018, 914, 293, 439, 3832, 25163, 2681, 281, 502, 13, 51206, 51206, 400, 300, 1669, 428, 18161, 2533, 2055, 13, 51368, 51368, 663, 1669, 428, 19618, 9284, 2055, 11, 767, 13, 51552, 51552, 492, 362, 767, 257, 1168, 13, 51644, 51644, 407, 291, 1066, 18617, 34520, 35, 2010, 7150, 11, 16235, 12, 6032, 7150, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16200152407871204, "compression_ratio": 1.639269406392694, "no_speech_prob": 4.424764028954087e-06}, {"id": 1687, "seek": 487704, "start": 4877.04, "end": 4880.44, "text": " Because there are other types of methods?", "tokens": [50364, 1436, 456, 366, 661, 3467, 295, 7150, 30, 50534, 50534, 1079, 13, 50558, 50558, 2264, 13, 50584, 50584, 407, 456, 307, 16235, 12, 10792, 7150, 13, 50684, 50684, 407, 257, 16235, 12, 10792, 3170, 307, 257, 3170, 50836, 50836, 689, 291, 360, 406, 6552, 300, 264, 2445, 291, 434, 1382, 51016, 51016, 281, 19719, 307, 819, 9364, 420, 754, 10957, 51204, 51204, 365, 3104, 281, 264, 9834, 13, 51266, 51416, 1171, 2940, 4112, 11, 4317, 309, 311, 51488, 51488, 257, 2445, 300, 1542, 411, 257, 12880, 1164, 11, 558, 30, 51614, 51614, 467, 311, 4962, 11, 293, 550, 1310, 309, 311, 658, 4439, 13, 51704, 51704, 400, 309, 311, 2252, 281, 11, 411, 264, 2654, 16235, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1925890604654948, "compression_ratio": 1.6615384615384616, "no_speech_prob": 9.972269253921695e-06}, {"id": 1688, "seek": 487704, "start": 4880.44, "end": 4880.92, "text": " Yes.", "tokens": [50364, 1436, 456, 366, 661, 3467, 295, 7150, 30, 50534, 50534, 1079, 13, 50558, 50558, 2264, 13, 50584, 50584, 407, 456, 307, 16235, 12, 10792, 7150, 13, 50684, 50684, 407, 257, 16235, 12, 10792, 3170, 307, 257, 3170, 50836, 50836, 689, 291, 360, 406, 6552, 300, 264, 2445, 291, 434, 1382, 51016, 51016, 281, 19719, 307, 819, 9364, 420, 754, 10957, 51204, 51204, 365, 3104, 281, 264, 9834, 13, 51266, 51416, 1171, 2940, 4112, 11, 4317, 309, 311, 51488, 51488, 257, 2445, 300, 1542, 411, 257, 12880, 1164, 11, 558, 30, 51614, 51614, 467, 311, 4962, 11, 293, 550, 1310, 309, 311, 658, 4439, 13, 51704, 51704, 400, 309, 311, 2252, 281, 11, 411, 264, 2654, 16235, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1925890604654948, "compression_ratio": 1.6615384615384616, "no_speech_prob": 9.972269253921695e-06}, {"id": 1689, "seek": 487704, "start": 4880.92, "end": 4881.44, "text": " OK.", "tokens": [50364, 1436, 456, 366, 661, 3467, 295, 7150, 30, 50534, 50534, 1079, 13, 50558, 50558, 2264, 13, 50584, 50584, 407, 456, 307, 16235, 12, 10792, 7150, 13, 50684, 50684, 407, 257, 16235, 12, 10792, 3170, 307, 257, 3170, 50836, 50836, 689, 291, 360, 406, 6552, 300, 264, 2445, 291, 434, 1382, 51016, 51016, 281, 19719, 307, 819, 9364, 420, 754, 10957, 51204, 51204, 365, 3104, 281, 264, 9834, 13, 51266, 51416, 1171, 2940, 4112, 11, 4317, 309, 311, 51488, 51488, 257, 2445, 300, 1542, 411, 257, 12880, 1164, 11, 558, 30, 51614, 51614, 467, 311, 4962, 11, 293, 550, 1310, 309, 311, 658, 4439, 13, 51704, 51704, 400, 309, 311, 2252, 281, 11, 411, 264, 2654, 16235, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1925890604654948, "compression_ratio": 1.6615384615384616, "no_speech_prob": 9.972269253921695e-06}, {"id": 1690, "seek": 487704, "start": 4881.44, "end": 4883.44, "text": " So there is gradient-free methods.", "tokens": [50364, 1436, 456, 366, 661, 3467, 295, 7150, 30, 50534, 50534, 1079, 13, 50558, 50558, 2264, 13, 50584, 50584, 407, 456, 307, 16235, 12, 10792, 7150, 13, 50684, 50684, 407, 257, 16235, 12, 10792, 3170, 307, 257, 3170, 50836, 50836, 689, 291, 360, 406, 6552, 300, 264, 2445, 291, 434, 1382, 51016, 51016, 281, 19719, 307, 819, 9364, 420, 754, 10957, 51204, 51204, 365, 3104, 281, 264, 9834, 13, 51266, 51416, 1171, 2940, 4112, 11, 4317, 309, 311, 51488, 51488, 257, 2445, 300, 1542, 411, 257, 12880, 1164, 11, 558, 30, 51614, 51614, 467, 311, 4962, 11, 293, 550, 1310, 309, 311, 658, 4439, 13, 51704, 51704, 400, 309, 311, 2252, 281, 11, 411, 264, 2654, 16235, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1925890604654948, "compression_ratio": 1.6615384615384616, "no_speech_prob": 9.972269253921695e-06}, {"id": 1691, "seek": 487704, "start": 4883.44, "end": 4886.48, "text": " So a gradient-free method is a method", "tokens": [50364, 1436, 456, 366, 661, 3467, 295, 7150, 30, 50534, 50534, 1079, 13, 50558, 50558, 2264, 13, 50584, 50584, 407, 456, 307, 16235, 12, 10792, 7150, 13, 50684, 50684, 407, 257, 16235, 12, 10792, 3170, 307, 257, 3170, 50836, 50836, 689, 291, 360, 406, 6552, 300, 264, 2445, 291, 434, 1382, 51016, 51016, 281, 19719, 307, 819, 9364, 420, 754, 10957, 51204, 51204, 365, 3104, 281, 264, 9834, 13, 51266, 51416, 1171, 2940, 4112, 11, 4317, 309, 311, 51488, 51488, 257, 2445, 300, 1542, 411, 257, 12880, 1164, 11, 558, 30, 51614, 51614, 467, 311, 4962, 11, 293, 550, 1310, 309, 311, 658, 4439, 13, 51704, 51704, 400, 309, 311, 2252, 281, 11, 411, 264, 2654, 16235, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1925890604654948, "compression_ratio": 1.6615384615384616, "no_speech_prob": 9.972269253921695e-06}, {"id": 1692, "seek": 487704, "start": 4886.48, "end": 4890.08, "text": " where you do not assume that the function you're trying", "tokens": [50364, 1436, 456, 366, 661, 3467, 295, 7150, 30, 50534, 50534, 1079, 13, 50558, 50558, 2264, 13, 50584, 50584, 407, 456, 307, 16235, 12, 10792, 7150, 13, 50684, 50684, 407, 257, 16235, 12, 10792, 3170, 307, 257, 3170, 50836, 50836, 689, 291, 360, 406, 6552, 300, 264, 2445, 291, 434, 1382, 51016, 51016, 281, 19719, 307, 819, 9364, 420, 754, 10957, 51204, 51204, 365, 3104, 281, 264, 9834, 13, 51266, 51416, 1171, 2940, 4112, 11, 4317, 309, 311, 51488, 51488, 257, 2445, 300, 1542, 411, 257, 12880, 1164, 11, 558, 30, 51614, 51614, 467, 311, 4962, 11, 293, 550, 1310, 309, 311, 658, 4439, 13, 51704, 51704, 400, 309, 311, 2252, 281, 11, 411, 264, 2654, 16235, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1925890604654948, "compression_ratio": 1.6615384615384616, "no_speech_prob": 9.972269253921695e-06}, {"id": 1693, "seek": 487704, "start": 4890.08, "end": 4893.84, "text": " to optimize is differentiable or even continuous", "tokens": [50364, 1436, 456, 366, 661, 3467, 295, 7150, 30, 50534, 50534, 1079, 13, 50558, 50558, 2264, 13, 50584, 50584, 407, 456, 307, 16235, 12, 10792, 7150, 13, 50684, 50684, 407, 257, 16235, 12, 10792, 3170, 307, 257, 3170, 50836, 50836, 689, 291, 360, 406, 6552, 300, 264, 2445, 291, 434, 1382, 51016, 51016, 281, 19719, 307, 819, 9364, 420, 754, 10957, 51204, 51204, 365, 3104, 281, 264, 9834, 13, 51266, 51416, 1171, 2940, 4112, 11, 4317, 309, 311, 51488, 51488, 257, 2445, 300, 1542, 411, 257, 12880, 1164, 11, 558, 30, 51614, 51614, 467, 311, 4962, 11, 293, 550, 1310, 309, 311, 658, 4439, 13, 51704, 51704, 400, 309, 311, 2252, 281, 11, 411, 264, 2654, 16235, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1925890604654948, "compression_ratio": 1.6615384615384616, "no_speech_prob": 9.972269253921695e-06}, {"id": 1694, "seek": 487704, "start": 4893.84, "end": 4895.08, "text": " with respect to the parameters.", "tokens": [50364, 1436, 456, 366, 661, 3467, 295, 7150, 30, 50534, 50534, 1079, 13, 50558, 50558, 2264, 13, 50584, 50584, 407, 456, 307, 16235, 12, 10792, 7150, 13, 50684, 50684, 407, 257, 16235, 12, 10792, 3170, 307, 257, 3170, 50836, 50836, 689, 291, 360, 406, 6552, 300, 264, 2445, 291, 434, 1382, 51016, 51016, 281, 19719, 307, 819, 9364, 420, 754, 10957, 51204, 51204, 365, 3104, 281, 264, 9834, 13, 51266, 51416, 1171, 2940, 4112, 11, 4317, 309, 311, 51488, 51488, 257, 2445, 300, 1542, 411, 257, 12880, 1164, 11, 558, 30, 51614, 51614, 467, 311, 4962, 11, 293, 550, 1310, 309, 311, 658, 4439, 13, 51704, 51704, 400, 309, 311, 2252, 281, 11, 411, 264, 2654, 16235, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1925890604654948, "compression_ratio": 1.6615384615384616, "no_speech_prob": 9.972269253921695e-06}, {"id": 1695, "seek": 487704, "start": 4898.08, "end": 4899.5199999999995, "text": " For several reasons, perhaps it's", "tokens": [50364, 1436, 456, 366, 661, 3467, 295, 7150, 30, 50534, 50534, 1079, 13, 50558, 50558, 2264, 13, 50584, 50584, 407, 456, 307, 16235, 12, 10792, 7150, 13, 50684, 50684, 407, 257, 16235, 12, 10792, 3170, 307, 257, 3170, 50836, 50836, 689, 291, 360, 406, 6552, 300, 264, 2445, 291, 434, 1382, 51016, 51016, 281, 19719, 307, 819, 9364, 420, 754, 10957, 51204, 51204, 365, 3104, 281, 264, 9834, 13, 51266, 51416, 1171, 2940, 4112, 11, 4317, 309, 311, 51488, 51488, 257, 2445, 300, 1542, 411, 257, 12880, 1164, 11, 558, 30, 51614, 51614, 467, 311, 4962, 11, 293, 550, 1310, 309, 311, 658, 4439, 13, 51704, 51704, 400, 309, 311, 2252, 281, 11, 411, 264, 2654, 16235, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1925890604654948, "compression_ratio": 1.6615384615384616, "no_speech_prob": 9.972269253921695e-06}, {"id": 1696, "seek": 487704, "start": 4899.5199999999995, "end": 4902.04, "text": " a function that looks like a golf course, right?", "tokens": [50364, 1436, 456, 366, 661, 3467, 295, 7150, 30, 50534, 50534, 1079, 13, 50558, 50558, 2264, 13, 50584, 50584, 407, 456, 307, 16235, 12, 10792, 7150, 13, 50684, 50684, 407, 257, 16235, 12, 10792, 3170, 307, 257, 3170, 50836, 50836, 689, 291, 360, 406, 6552, 300, 264, 2445, 291, 434, 1382, 51016, 51016, 281, 19719, 307, 819, 9364, 420, 754, 10957, 51204, 51204, 365, 3104, 281, 264, 9834, 13, 51266, 51416, 1171, 2940, 4112, 11, 4317, 309, 311, 51488, 51488, 257, 2445, 300, 1542, 411, 257, 12880, 1164, 11, 558, 30, 51614, 51614, 467, 311, 4962, 11, 293, 550, 1310, 309, 311, 658, 4439, 13, 51704, 51704, 400, 309, 311, 2252, 281, 11, 411, 264, 2654, 16235, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1925890604654948, "compression_ratio": 1.6615384615384616, "no_speech_prob": 9.972269253921695e-06}, {"id": 1697, "seek": 487704, "start": 4902.04, "end": 4903.84, "text": " It's flat, and then maybe it's got steps.", "tokens": [50364, 1436, 456, 366, 661, 3467, 295, 7150, 30, 50534, 50534, 1079, 13, 50558, 50558, 2264, 13, 50584, 50584, 407, 456, 307, 16235, 12, 10792, 7150, 13, 50684, 50684, 407, 257, 16235, 12, 10792, 3170, 307, 257, 3170, 50836, 50836, 689, 291, 360, 406, 6552, 300, 264, 2445, 291, 434, 1382, 51016, 51016, 281, 19719, 307, 819, 9364, 420, 754, 10957, 51204, 51204, 365, 3104, 281, 264, 9834, 13, 51266, 51416, 1171, 2940, 4112, 11, 4317, 309, 311, 51488, 51488, 257, 2445, 300, 1542, 411, 257, 12880, 1164, 11, 558, 30, 51614, 51614, 467, 311, 4962, 11, 293, 550, 1310, 309, 311, 658, 4439, 13, 51704, 51704, 400, 309, 311, 2252, 281, 11, 411, 264, 2654, 16235, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1925890604654948, "compression_ratio": 1.6615384615384616, "no_speech_prob": 9.972269253921695e-06}, {"id": 1698, "seek": 487704, "start": 4903.84, "end": 4906.68, "text": " And it's difficult to, like the local gradient", "tokens": [50364, 1436, 456, 366, 661, 3467, 295, 7150, 30, 50534, 50534, 1079, 13, 50558, 50558, 2264, 13, 50584, 50584, 407, 456, 307, 16235, 12, 10792, 7150, 13, 50684, 50684, 407, 257, 16235, 12, 10792, 3170, 307, 257, 3170, 50836, 50836, 689, 291, 360, 406, 6552, 300, 264, 2445, 291, 434, 1382, 51016, 51016, 281, 19719, 307, 819, 9364, 420, 754, 10957, 51204, 51204, 365, 3104, 281, 264, 9834, 13, 51266, 51416, 1171, 2940, 4112, 11, 4317, 309, 311, 51488, 51488, 257, 2445, 300, 1542, 411, 257, 12880, 1164, 11, 558, 30, 51614, 51614, 467, 311, 4962, 11, 293, 550, 1310, 309, 311, 658, 4439, 13, 51704, 51704, 400, 309, 311, 2252, 281, 11, 411, 264, 2654, 16235, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1925890604654948, "compression_ratio": 1.6615384615384616, "no_speech_prob": 9.972269253921695e-06}, {"id": 1699, "seek": 490668, "start": 4906.68, "end": 4909.200000000001, "text": " information, does not give you any information as to where", "tokens": [50364, 1589, 11, 775, 406, 976, 291, 604, 1589, 382, 281, 689, 50490, 50490, 291, 820, 352, 281, 915, 264, 7285, 13, 50704, 50704, 467, 727, 312, 300, 264, 2445, 307, 4476, 27706, 13, 50968, 50968, 467, 311, 406, 257, 2445, 295, 10957, 9102, 13, 51048, 51048, 467, 311, 257, 2445, 295, 27706, 9102, 13, 51134, 51134, 407, 337, 1365, 11, 669, 286, 516, 281, 1942, 341, 24122, 1216, 30, 51438, 51438, 440, 7006, 291, 393, 20459, 307, 264, 2535, 322, 264, 3150, 13, 51566, 51566, 663, 311, 257, 27706, 7006, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.16570797970420437, "compression_ratio": 1.7932692307692308, "no_speech_prob": 3.0239058105507866e-05}, {"id": 1700, "seek": 490668, "start": 4909.200000000001, "end": 4913.4800000000005, "text": " you should go to find the minimum.", "tokens": [50364, 1589, 11, 775, 406, 976, 291, 604, 1589, 382, 281, 689, 50490, 50490, 291, 820, 352, 281, 915, 264, 7285, 13, 50704, 50704, 467, 727, 312, 300, 264, 2445, 307, 4476, 27706, 13, 50968, 50968, 467, 311, 406, 257, 2445, 295, 10957, 9102, 13, 51048, 51048, 467, 311, 257, 2445, 295, 27706, 9102, 13, 51134, 51134, 407, 337, 1365, 11, 669, 286, 516, 281, 1942, 341, 24122, 1216, 30, 51438, 51438, 440, 7006, 291, 393, 20459, 307, 264, 2535, 322, 264, 3150, 13, 51566, 51566, 663, 311, 257, 27706, 7006, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.16570797970420437, "compression_ratio": 1.7932692307692308, "no_speech_prob": 3.0239058105507866e-05}, {"id": 1701, "seek": 490668, "start": 4913.4800000000005, "end": 4918.76, "text": " It could be that the function is essentially discrete.", "tokens": [50364, 1589, 11, 775, 406, 976, 291, 604, 1589, 382, 281, 689, 50490, 50490, 291, 820, 352, 281, 915, 264, 7285, 13, 50704, 50704, 467, 727, 312, 300, 264, 2445, 307, 4476, 27706, 13, 50968, 50968, 467, 311, 406, 257, 2445, 295, 10957, 9102, 13, 51048, 51048, 467, 311, 257, 2445, 295, 27706, 9102, 13, 51134, 51134, 407, 337, 1365, 11, 669, 286, 516, 281, 1942, 341, 24122, 1216, 30, 51438, 51438, 440, 7006, 291, 393, 20459, 307, 264, 2535, 322, 264, 3150, 13, 51566, 51566, 663, 311, 257, 27706, 7006, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.16570797970420437, "compression_ratio": 1.7932692307692308, "no_speech_prob": 3.0239058105507866e-05}, {"id": 1702, "seek": 490668, "start": 4918.76, "end": 4920.360000000001, "text": " It's not a function of continuous variables.", "tokens": [50364, 1589, 11, 775, 406, 976, 291, 604, 1589, 382, 281, 689, 50490, 50490, 291, 820, 352, 281, 915, 264, 7285, 13, 50704, 50704, 467, 727, 312, 300, 264, 2445, 307, 4476, 27706, 13, 50968, 50968, 467, 311, 406, 257, 2445, 295, 10957, 9102, 13, 51048, 51048, 467, 311, 257, 2445, 295, 27706, 9102, 13, 51134, 51134, 407, 337, 1365, 11, 669, 286, 516, 281, 1942, 341, 24122, 1216, 30, 51438, 51438, 440, 7006, 291, 393, 20459, 307, 264, 2535, 322, 264, 3150, 13, 51566, 51566, 663, 311, 257, 27706, 7006, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.16570797970420437, "compression_ratio": 1.7932692307692308, "no_speech_prob": 3.0239058105507866e-05}, {"id": 1703, "seek": 490668, "start": 4920.360000000001, "end": 4922.08, "text": " It's a function of discrete variables.", "tokens": [50364, 1589, 11, 775, 406, 976, 291, 604, 1589, 382, 281, 689, 50490, 50490, 291, 820, 352, 281, 915, 264, 7285, 13, 50704, 50704, 467, 727, 312, 300, 264, 2445, 307, 4476, 27706, 13, 50968, 50968, 467, 311, 406, 257, 2445, 295, 10957, 9102, 13, 51048, 51048, 467, 311, 257, 2445, 295, 27706, 9102, 13, 51134, 51134, 407, 337, 1365, 11, 669, 286, 516, 281, 1942, 341, 24122, 1216, 30, 51438, 51438, 440, 7006, 291, 393, 20459, 307, 264, 2535, 322, 264, 3150, 13, 51566, 51566, 663, 311, 257, 27706, 7006, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.16570797970420437, "compression_ratio": 1.7932692307692308, "no_speech_prob": 3.0239058105507866e-05}, {"id": 1704, "seek": 490668, "start": 4922.08, "end": 4928.16, "text": " So for example, am I going to win this chess game?", "tokens": [50364, 1589, 11, 775, 406, 976, 291, 604, 1589, 382, 281, 689, 50490, 50490, 291, 820, 352, 281, 915, 264, 7285, 13, 50704, 50704, 467, 727, 312, 300, 264, 2445, 307, 4476, 27706, 13, 50968, 50968, 467, 311, 406, 257, 2445, 295, 10957, 9102, 13, 51048, 51048, 467, 311, 257, 2445, 295, 27706, 9102, 13, 51134, 51134, 407, 337, 1365, 11, 669, 286, 516, 281, 1942, 341, 24122, 1216, 30, 51438, 51438, 440, 7006, 291, 393, 20459, 307, 264, 2535, 322, 264, 3150, 13, 51566, 51566, 663, 311, 257, 27706, 7006, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.16570797970420437, "compression_ratio": 1.7932692307692308, "no_speech_prob": 3.0239058105507866e-05}, {"id": 1705, "seek": 490668, "start": 4928.16, "end": 4930.72, "text": " The variable you can manipulate is the position on the board.", "tokens": [50364, 1589, 11, 775, 406, 976, 291, 604, 1589, 382, 281, 689, 50490, 50490, 291, 820, 352, 281, 915, 264, 7285, 13, 50704, 50704, 467, 727, 312, 300, 264, 2445, 307, 4476, 27706, 13, 50968, 50968, 467, 311, 406, 257, 2445, 295, 10957, 9102, 13, 51048, 51048, 467, 311, 257, 2445, 295, 27706, 9102, 13, 51134, 51134, 407, 337, 1365, 11, 669, 286, 516, 281, 1942, 341, 24122, 1216, 30, 51438, 51438, 440, 7006, 291, 393, 20459, 307, 264, 2535, 322, 264, 3150, 13, 51566, 51566, 663, 311, 257, 27706, 7006, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.16570797970420437, "compression_ratio": 1.7932692307692308, "no_speech_prob": 3.0239058105507866e-05}, {"id": 1706, "seek": 490668, "start": 4930.72, "end": 4933.200000000001, "text": " That's a discrete variable.", "tokens": [50364, 1589, 11, 775, 406, 976, 291, 604, 1589, 382, 281, 689, 50490, 50490, 291, 820, 352, 281, 915, 264, 7285, 13, 50704, 50704, 467, 727, 312, 300, 264, 2445, 307, 4476, 27706, 13, 50968, 50968, 467, 311, 406, 257, 2445, 295, 10957, 9102, 13, 51048, 51048, 467, 311, 257, 2445, 295, 27706, 9102, 13, 51134, 51134, 407, 337, 1365, 11, 669, 286, 516, 281, 1942, 341, 24122, 1216, 30, 51438, 51438, 440, 7006, 291, 393, 20459, 307, 264, 2535, 322, 264, 3150, 13, 51566, 51566, 663, 311, 257, 27706, 7006, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.16570797970420437, "compression_ratio": 1.7932692307692308, "no_speech_prob": 3.0239058105507866e-05}, {"id": 1707, "seek": 493320, "start": 4933.2, "end": 4938.679999999999, "text": " So you can't compute a gradient of a score", "tokens": [50364, 407, 291, 393, 380, 14722, 257, 16235, 295, 257, 6175, 50638, 50638, 365, 3104, 281, 257, 2535, 322, 264, 24122, 1216, 13, 50744, 50744, 467, 311, 257, 27706, 7006, 13, 50798, 50972, 3996, 1365, 307, 264, 2063, 2445, 307, 406, 51162, 51162, 746, 291, 393, 14722, 13, 51210, 51210, 509, 500, 380, 767, 458, 264, 2063, 2445, 13, 51336, 51336, 407, 337, 1365, 11, 264, 787, 551, 291, 393, 360, 51486, 51486, 307, 976, 364, 4846, 281, 264, 2063, 2445, 11, 51582, 51582, 293, 309, 5112, 291, 264, 2063, 13, 51706, 51706, 583, 291, 500, 380, 458, 264, 2445, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17045327333303598, "compression_ratio": 1.7826086956521738, "no_speech_prob": 7.527655270678224e-06}, {"id": 1708, "seek": 493320, "start": 4938.679999999999, "end": 4940.8, "text": " with respect to a position on the chess game.", "tokens": [50364, 407, 291, 393, 380, 14722, 257, 16235, 295, 257, 6175, 50638, 50638, 365, 3104, 281, 257, 2535, 322, 264, 24122, 1216, 13, 50744, 50744, 467, 311, 257, 27706, 7006, 13, 50798, 50972, 3996, 1365, 307, 264, 2063, 2445, 307, 406, 51162, 51162, 746, 291, 393, 14722, 13, 51210, 51210, 509, 500, 380, 767, 458, 264, 2063, 2445, 13, 51336, 51336, 407, 337, 1365, 11, 264, 787, 551, 291, 393, 360, 51486, 51486, 307, 976, 364, 4846, 281, 264, 2063, 2445, 11, 51582, 51582, 293, 309, 5112, 291, 264, 2063, 13, 51706, 51706, 583, 291, 500, 380, 458, 264, 2445, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17045327333303598, "compression_ratio": 1.7826086956521738, "no_speech_prob": 7.527655270678224e-06}, {"id": 1709, "seek": 493320, "start": 4940.8, "end": 4941.88, "text": " It's a discrete variable.", "tokens": [50364, 407, 291, 393, 380, 14722, 257, 16235, 295, 257, 6175, 50638, 50638, 365, 3104, 281, 257, 2535, 322, 264, 24122, 1216, 13, 50744, 50744, 467, 311, 257, 27706, 7006, 13, 50798, 50972, 3996, 1365, 307, 264, 2063, 2445, 307, 406, 51162, 51162, 746, 291, 393, 14722, 13, 51210, 51210, 509, 500, 380, 767, 458, 264, 2063, 2445, 13, 51336, 51336, 407, 337, 1365, 11, 264, 787, 551, 291, 393, 360, 51486, 51486, 307, 976, 364, 4846, 281, 264, 2063, 2445, 11, 51582, 51582, 293, 309, 5112, 291, 264, 2063, 13, 51706, 51706, 583, 291, 500, 380, 458, 264, 2445, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17045327333303598, "compression_ratio": 1.7826086956521738, "no_speech_prob": 7.527655270678224e-06}, {"id": 1710, "seek": 493320, "start": 4945.36, "end": 4949.16, "text": " Another example is the cost function is not", "tokens": [50364, 407, 291, 393, 380, 14722, 257, 16235, 295, 257, 6175, 50638, 50638, 365, 3104, 281, 257, 2535, 322, 264, 24122, 1216, 13, 50744, 50744, 467, 311, 257, 27706, 7006, 13, 50798, 50972, 3996, 1365, 307, 264, 2063, 2445, 307, 406, 51162, 51162, 746, 291, 393, 14722, 13, 51210, 51210, 509, 500, 380, 767, 458, 264, 2063, 2445, 13, 51336, 51336, 407, 337, 1365, 11, 264, 787, 551, 291, 393, 360, 51486, 51486, 307, 976, 364, 4846, 281, 264, 2063, 2445, 11, 51582, 51582, 293, 309, 5112, 291, 264, 2063, 13, 51706, 51706, 583, 291, 500, 380, 458, 264, 2445, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17045327333303598, "compression_ratio": 1.7826086956521738, "no_speech_prob": 7.527655270678224e-06}, {"id": 1711, "seek": 493320, "start": 4949.16, "end": 4950.12, "text": " something you can compute.", "tokens": [50364, 407, 291, 393, 380, 14722, 257, 16235, 295, 257, 6175, 50638, 50638, 365, 3104, 281, 257, 2535, 322, 264, 24122, 1216, 13, 50744, 50744, 467, 311, 257, 27706, 7006, 13, 50798, 50972, 3996, 1365, 307, 264, 2063, 2445, 307, 406, 51162, 51162, 746, 291, 393, 14722, 13, 51210, 51210, 509, 500, 380, 767, 458, 264, 2063, 2445, 13, 51336, 51336, 407, 337, 1365, 11, 264, 787, 551, 291, 393, 360, 51486, 51486, 307, 976, 364, 4846, 281, 264, 2063, 2445, 11, 51582, 51582, 293, 309, 5112, 291, 264, 2063, 13, 51706, 51706, 583, 291, 500, 380, 458, 264, 2445, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17045327333303598, "compression_ratio": 1.7826086956521738, "no_speech_prob": 7.527655270678224e-06}, {"id": 1712, "seek": 493320, "start": 4950.12, "end": 4952.639999999999, "text": " You don't actually know the cost function.", "tokens": [50364, 407, 291, 393, 380, 14722, 257, 16235, 295, 257, 6175, 50638, 50638, 365, 3104, 281, 257, 2535, 322, 264, 24122, 1216, 13, 50744, 50744, 467, 311, 257, 27706, 7006, 13, 50798, 50972, 3996, 1365, 307, 264, 2063, 2445, 307, 406, 51162, 51162, 746, 291, 393, 14722, 13, 51210, 51210, 509, 500, 380, 767, 458, 264, 2063, 2445, 13, 51336, 51336, 407, 337, 1365, 11, 264, 787, 551, 291, 393, 360, 51486, 51486, 307, 976, 364, 4846, 281, 264, 2063, 2445, 11, 51582, 51582, 293, 309, 5112, 291, 264, 2063, 13, 51706, 51706, 583, 291, 500, 380, 458, 264, 2445, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17045327333303598, "compression_ratio": 1.7826086956521738, "no_speech_prob": 7.527655270678224e-06}, {"id": 1713, "seek": 493320, "start": 4952.639999999999, "end": 4955.639999999999, "text": " So for example, the only thing you can do", "tokens": [50364, 407, 291, 393, 380, 14722, 257, 16235, 295, 257, 6175, 50638, 50638, 365, 3104, 281, 257, 2535, 322, 264, 24122, 1216, 13, 50744, 50744, 467, 311, 257, 27706, 7006, 13, 50798, 50972, 3996, 1365, 307, 264, 2063, 2445, 307, 406, 51162, 51162, 746, 291, 393, 14722, 13, 51210, 51210, 509, 500, 380, 767, 458, 264, 2063, 2445, 13, 51336, 51336, 407, 337, 1365, 11, 264, 787, 551, 291, 393, 360, 51486, 51486, 307, 976, 364, 4846, 281, 264, 2063, 2445, 11, 51582, 51582, 293, 309, 5112, 291, 264, 2063, 13, 51706, 51706, 583, 291, 500, 380, 458, 264, 2445, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17045327333303598, "compression_ratio": 1.7826086956521738, "no_speech_prob": 7.527655270678224e-06}, {"id": 1714, "seek": 493320, "start": 4955.639999999999, "end": 4957.5599999999995, "text": " is give an input to the cost function,", "tokens": [50364, 407, 291, 393, 380, 14722, 257, 16235, 295, 257, 6175, 50638, 50638, 365, 3104, 281, 257, 2535, 322, 264, 24122, 1216, 13, 50744, 50744, 467, 311, 257, 27706, 7006, 13, 50798, 50972, 3996, 1365, 307, 264, 2063, 2445, 307, 406, 51162, 51162, 746, 291, 393, 14722, 13, 51210, 51210, 509, 500, 380, 767, 458, 264, 2063, 2445, 13, 51336, 51336, 407, 337, 1365, 11, 264, 787, 551, 291, 393, 360, 51486, 51486, 307, 976, 364, 4846, 281, 264, 2063, 2445, 11, 51582, 51582, 293, 309, 5112, 291, 264, 2063, 13, 51706, 51706, 583, 291, 500, 380, 458, 264, 2445, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17045327333303598, "compression_ratio": 1.7826086956521738, "no_speech_prob": 7.527655270678224e-06}, {"id": 1715, "seek": 493320, "start": 4957.5599999999995, "end": 4960.04, "text": " and it tells you the cost.", "tokens": [50364, 407, 291, 393, 380, 14722, 257, 16235, 295, 257, 6175, 50638, 50638, 365, 3104, 281, 257, 2535, 322, 264, 24122, 1216, 13, 50744, 50744, 467, 311, 257, 27706, 7006, 13, 50798, 50972, 3996, 1365, 307, 264, 2063, 2445, 307, 406, 51162, 51162, 746, 291, 393, 14722, 13, 51210, 51210, 509, 500, 380, 767, 458, 264, 2063, 2445, 13, 51336, 51336, 407, 337, 1365, 11, 264, 787, 551, 291, 393, 360, 51486, 51486, 307, 976, 364, 4846, 281, 264, 2063, 2445, 11, 51582, 51582, 293, 309, 5112, 291, 264, 2063, 13, 51706, 51706, 583, 291, 500, 380, 458, 264, 2445, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17045327333303598, "compression_ratio": 1.7826086956521738, "no_speech_prob": 7.527655270678224e-06}, {"id": 1716, "seek": 493320, "start": 4960.04, "end": 4961.639999999999, "text": " But you don't know the function.", "tokens": [50364, 407, 291, 393, 380, 14722, 257, 16235, 295, 257, 6175, 50638, 50638, 365, 3104, 281, 257, 2535, 322, 264, 24122, 1216, 13, 50744, 50744, 467, 311, 257, 27706, 7006, 13, 50798, 50972, 3996, 1365, 307, 264, 2063, 2445, 307, 406, 51162, 51162, 746, 291, 393, 14722, 13, 51210, 51210, 509, 500, 380, 767, 458, 264, 2063, 2445, 13, 51336, 51336, 407, 337, 1365, 11, 264, 787, 551, 291, 393, 360, 51486, 51486, 307, 976, 364, 4846, 281, 264, 2063, 2445, 11, 51582, 51582, 293, 309, 5112, 291, 264, 2063, 13, 51706, 51706, 583, 291, 500, 380, 458, 264, 2445, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17045327333303598, "compression_ratio": 1.7826086956521738, "no_speech_prob": 7.527655270678224e-06}, {"id": 1717, "seek": 496164, "start": 4961.64, "end": 4963.72, "text": " It's not a program on a computer.", "tokens": [50364, 467, 311, 406, 257, 1461, 322, 257, 3820, 13, 50468, 50468, 509, 393, 380, 646, 48256, 16235, 807, 309, 13, 50560, 50560, 316, 665, 1365, 295, 341, 307, 264, 957, 1002, 13, 50690, 50690, 440, 957, 1002, 11, 291, 393, 519, 295, 309, 382, 257, 2063, 2445, 13, 50856, 50856, 509, 1466, 281, 5077, 257, 5656, 11, 293, 291, 5077, 428, 5656, 11, 51044, 51044, 293, 412, 512, 935, 291, 2100, 13, 51098, 51274, 440, 957, 1002, 775, 406, 976, 291, 257, 16235, 51424, 51424, 295, 300, 2063, 2445, 11, 597, 307, 577, 709, 291, 4607, 365, 3104, 51636, 51636, 281, 428, 5909, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17349762386745876, "compression_ratio": 1.7149321266968325, "no_speech_prob": 8.0132649600273e-06}, {"id": 1718, "seek": 496164, "start": 4963.72, "end": 4965.56, "text": " You can't back propagate gradient through it.", "tokens": [50364, 467, 311, 406, 257, 1461, 322, 257, 3820, 13, 50468, 50468, 509, 393, 380, 646, 48256, 16235, 807, 309, 13, 50560, 50560, 316, 665, 1365, 295, 341, 307, 264, 957, 1002, 13, 50690, 50690, 440, 957, 1002, 11, 291, 393, 519, 295, 309, 382, 257, 2063, 2445, 13, 50856, 50856, 509, 1466, 281, 5077, 257, 5656, 11, 293, 291, 5077, 428, 5656, 11, 51044, 51044, 293, 412, 512, 935, 291, 2100, 13, 51098, 51274, 440, 957, 1002, 775, 406, 976, 291, 257, 16235, 51424, 51424, 295, 300, 2063, 2445, 11, 597, 307, 577, 709, 291, 4607, 365, 3104, 51636, 51636, 281, 428, 5909, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17349762386745876, "compression_ratio": 1.7149321266968325, "no_speech_prob": 8.0132649600273e-06}, {"id": 1719, "seek": 496164, "start": 4965.56, "end": 4968.160000000001, "text": " A good example of this is the real world.", "tokens": [50364, 467, 311, 406, 257, 1461, 322, 257, 3820, 13, 50468, 50468, 509, 393, 380, 646, 48256, 16235, 807, 309, 13, 50560, 50560, 316, 665, 1365, 295, 341, 307, 264, 957, 1002, 13, 50690, 50690, 440, 957, 1002, 11, 291, 393, 519, 295, 309, 382, 257, 2063, 2445, 13, 50856, 50856, 509, 1466, 281, 5077, 257, 5656, 11, 293, 291, 5077, 428, 5656, 11, 51044, 51044, 293, 412, 512, 935, 291, 2100, 13, 51098, 51274, 440, 957, 1002, 775, 406, 976, 291, 257, 16235, 51424, 51424, 295, 300, 2063, 2445, 11, 597, 307, 577, 709, 291, 4607, 365, 3104, 51636, 51636, 281, 428, 5909, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17349762386745876, "compression_ratio": 1.7149321266968325, "no_speech_prob": 8.0132649600273e-06}, {"id": 1720, "seek": 496164, "start": 4968.160000000001, "end": 4971.4800000000005, "text": " The real world, you can think of it as a cost function.", "tokens": [50364, 467, 311, 406, 257, 1461, 322, 257, 3820, 13, 50468, 50468, 509, 393, 380, 646, 48256, 16235, 807, 309, 13, 50560, 50560, 316, 665, 1365, 295, 341, 307, 264, 957, 1002, 13, 50690, 50690, 440, 957, 1002, 11, 291, 393, 519, 295, 309, 382, 257, 2063, 2445, 13, 50856, 50856, 509, 1466, 281, 5077, 257, 5656, 11, 293, 291, 5077, 428, 5656, 11, 51044, 51044, 293, 412, 512, 935, 291, 2100, 13, 51098, 51274, 440, 957, 1002, 775, 406, 976, 291, 257, 16235, 51424, 51424, 295, 300, 2063, 2445, 11, 597, 307, 577, 709, 291, 4607, 365, 3104, 51636, 51636, 281, 428, 5909, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17349762386745876, "compression_ratio": 1.7149321266968325, "no_speech_prob": 8.0132649600273e-06}, {"id": 1721, "seek": 496164, "start": 4971.4800000000005, "end": 4975.240000000001, "text": " You learn to ride a bike, and you ride your bike,", "tokens": [50364, 467, 311, 406, 257, 1461, 322, 257, 3820, 13, 50468, 50468, 509, 393, 380, 646, 48256, 16235, 807, 309, 13, 50560, 50560, 316, 665, 1365, 295, 341, 307, 264, 957, 1002, 13, 50690, 50690, 440, 957, 1002, 11, 291, 393, 519, 295, 309, 382, 257, 2063, 2445, 13, 50856, 50856, 509, 1466, 281, 5077, 257, 5656, 11, 293, 291, 5077, 428, 5656, 11, 51044, 51044, 293, 412, 512, 935, 291, 2100, 13, 51098, 51274, 440, 957, 1002, 775, 406, 976, 291, 257, 16235, 51424, 51424, 295, 300, 2063, 2445, 11, 597, 307, 577, 709, 291, 4607, 365, 3104, 51636, 51636, 281, 428, 5909, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17349762386745876, "compression_ratio": 1.7149321266968325, "no_speech_prob": 8.0132649600273e-06}, {"id": 1722, "seek": 496164, "start": 4975.240000000001, "end": 4976.320000000001, "text": " and at some point you fall.", "tokens": [50364, 467, 311, 406, 257, 1461, 322, 257, 3820, 13, 50468, 50468, 509, 393, 380, 646, 48256, 16235, 807, 309, 13, 50560, 50560, 316, 665, 1365, 295, 341, 307, 264, 957, 1002, 13, 50690, 50690, 440, 957, 1002, 11, 291, 393, 519, 295, 309, 382, 257, 2063, 2445, 13, 50856, 50856, 509, 1466, 281, 5077, 257, 5656, 11, 293, 291, 5077, 428, 5656, 11, 51044, 51044, 293, 412, 512, 935, 291, 2100, 13, 51098, 51274, 440, 957, 1002, 775, 406, 976, 291, 257, 16235, 51424, 51424, 295, 300, 2063, 2445, 11, 597, 307, 577, 709, 291, 4607, 365, 3104, 51636, 51636, 281, 428, 5909, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17349762386745876, "compression_ratio": 1.7149321266968325, "no_speech_prob": 8.0132649600273e-06}, {"id": 1723, "seek": 496164, "start": 4979.84, "end": 4982.84, "text": " The real world does not give you a gradient", "tokens": [50364, 467, 311, 406, 257, 1461, 322, 257, 3820, 13, 50468, 50468, 509, 393, 380, 646, 48256, 16235, 807, 309, 13, 50560, 50560, 316, 665, 1365, 295, 341, 307, 264, 957, 1002, 13, 50690, 50690, 440, 957, 1002, 11, 291, 393, 519, 295, 309, 382, 257, 2063, 2445, 13, 50856, 50856, 509, 1466, 281, 5077, 257, 5656, 11, 293, 291, 5077, 428, 5656, 11, 51044, 51044, 293, 412, 512, 935, 291, 2100, 13, 51098, 51274, 440, 957, 1002, 775, 406, 976, 291, 257, 16235, 51424, 51424, 295, 300, 2063, 2445, 11, 597, 307, 577, 709, 291, 4607, 365, 3104, 51636, 51636, 281, 428, 5909, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17349762386745876, "compression_ratio": 1.7149321266968325, "no_speech_prob": 8.0132649600273e-06}, {"id": 1724, "seek": 496164, "start": 4982.84, "end": 4987.08, "text": " of that cost function, which is how much you hurt with respect", "tokens": [50364, 467, 311, 406, 257, 1461, 322, 257, 3820, 13, 50468, 50468, 509, 393, 380, 646, 48256, 16235, 807, 309, 13, 50560, 50560, 316, 665, 1365, 295, 341, 307, 264, 957, 1002, 13, 50690, 50690, 440, 957, 1002, 11, 291, 393, 519, 295, 309, 382, 257, 2063, 2445, 13, 50856, 50856, 509, 1466, 281, 5077, 257, 5656, 11, 293, 291, 5077, 428, 5656, 11, 51044, 51044, 293, 412, 512, 935, 291, 2100, 13, 51098, 51274, 440, 957, 1002, 775, 406, 976, 291, 257, 16235, 51424, 51424, 295, 300, 2063, 2445, 11, 597, 307, 577, 709, 291, 4607, 365, 3104, 51636, 51636, 281, 428, 5909, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17349762386745876, "compression_ratio": 1.7149321266968325, "no_speech_prob": 8.0132649600273e-06}, {"id": 1725, "seek": 496164, "start": 4987.08, "end": 4989.360000000001, "text": " to your actions.", "tokens": [50364, 467, 311, 406, 257, 1461, 322, 257, 3820, 13, 50468, 50468, 509, 393, 380, 646, 48256, 16235, 807, 309, 13, 50560, 50560, 316, 665, 1365, 295, 341, 307, 264, 957, 1002, 13, 50690, 50690, 440, 957, 1002, 11, 291, 393, 519, 295, 309, 382, 257, 2063, 2445, 13, 50856, 50856, 509, 1466, 281, 5077, 257, 5656, 11, 293, 291, 5077, 428, 5656, 11, 51044, 51044, 293, 412, 512, 935, 291, 2100, 13, 51098, 51274, 440, 957, 1002, 775, 406, 976, 291, 257, 16235, 51424, 51424, 295, 300, 2063, 2445, 11, 597, 307, 577, 709, 291, 4607, 365, 3104, 51636, 51636, 281, 428, 5909, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17349762386745876, "compression_ratio": 1.7149321266968325, "no_speech_prob": 8.0132649600273e-06}, {"id": 1726, "seek": 498936, "start": 4989.36, "end": 4991.719999999999, "text": " The only thing you can do is try something else", "tokens": [50364, 440, 787, 551, 291, 393, 360, 307, 853, 746, 1646, 50482, 50482, 293, 536, 498, 291, 483, 264, 912, 1874, 420, 406, 13, 50642, 50642, 407, 437, 360, 291, 360, 294, 300, 1389, 30, 50706, 50706, 407, 1936, 586, 428, 2063, 2445, 307, 257, 2211, 2424, 13, 50882, 50882, 407, 586, 291, 2644, 48256, 16235, 281, 341, 2211, 2424, 13, 50996, 50996, 708, 291, 362, 281, 360, 307, 12539, 264, 16235, 51084, 51084, 538, 13269, 374, 4324, 437, 291, 3154, 281, 300, 2211, 2424, 13, 51294, 51294, 407, 291, 853, 746, 11, 293, 300, 746, 51576, 51576, 576, 312, 257, 40468, 399, 295, 428, 4846, 281, 341, 2211, 2424, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12478538981655188, "compression_ratio": 1.8918918918918919, "no_speech_prob": 8.800569958111737e-06}, {"id": 1727, "seek": 498936, "start": 4991.719999999999, "end": 4994.92, "text": " and see if you get the same result or not.", "tokens": [50364, 440, 787, 551, 291, 393, 360, 307, 853, 746, 1646, 50482, 50482, 293, 536, 498, 291, 483, 264, 912, 1874, 420, 406, 13, 50642, 50642, 407, 437, 360, 291, 360, 294, 300, 1389, 30, 50706, 50706, 407, 1936, 586, 428, 2063, 2445, 307, 257, 2211, 2424, 13, 50882, 50882, 407, 586, 291, 2644, 48256, 16235, 281, 341, 2211, 2424, 13, 50996, 50996, 708, 291, 362, 281, 360, 307, 12539, 264, 16235, 51084, 51084, 538, 13269, 374, 4324, 437, 291, 3154, 281, 300, 2211, 2424, 13, 51294, 51294, 407, 291, 853, 746, 11, 293, 300, 746, 51576, 51576, 576, 312, 257, 40468, 399, 295, 428, 4846, 281, 341, 2211, 2424, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12478538981655188, "compression_ratio": 1.8918918918918919, "no_speech_prob": 8.800569958111737e-06}, {"id": 1728, "seek": 498936, "start": 4994.92, "end": 4996.2, "text": " So what do you do in that case?", "tokens": [50364, 440, 787, 551, 291, 393, 360, 307, 853, 746, 1646, 50482, 50482, 293, 536, 498, 291, 483, 264, 912, 1874, 420, 406, 13, 50642, 50642, 407, 437, 360, 291, 360, 294, 300, 1389, 30, 50706, 50706, 407, 1936, 586, 428, 2063, 2445, 307, 257, 2211, 2424, 13, 50882, 50882, 407, 586, 291, 2644, 48256, 16235, 281, 341, 2211, 2424, 13, 50996, 50996, 708, 291, 362, 281, 360, 307, 12539, 264, 16235, 51084, 51084, 538, 13269, 374, 4324, 437, 291, 3154, 281, 300, 2211, 2424, 13, 51294, 51294, 407, 291, 853, 746, 11, 293, 300, 746, 51576, 51576, 576, 312, 257, 40468, 399, 295, 428, 4846, 281, 341, 2211, 2424, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12478538981655188, "compression_ratio": 1.8918918918918919, "no_speech_prob": 8.800569958111737e-06}, {"id": 1729, "seek": 498936, "start": 4996.2, "end": 4999.719999999999, "text": " So basically now your cost function is a black box.", "tokens": [50364, 440, 787, 551, 291, 393, 360, 307, 853, 746, 1646, 50482, 50482, 293, 536, 498, 291, 483, 264, 912, 1874, 420, 406, 13, 50642, 50642, 407, 437, 360, 291, 360, 294, 300, 1389, 30, 50706, 50706, 407, 1936, 586, 428, 2063, 2445, 307, 257, 2211, 2424, 13, 50882, 50882, 407, 586, 291, 2644, 48256, 16235, 281, 341, 2211, 2424, 13, 50996, 50996, 708, 291, 362, 281, 360, 307, 12539, 264, 16235, 51084, 51084, 538, 13269, 374, 4324, 437, 291, 3154, 281, 300, 2211, 2424, 13, 51294, 51294, 407, 291, 853, 746, 11, 293, 300, 746, 51576, 51576, 576, 312, 257, 40468, 399, 295, 428, 4846, 281, 341, 2211, 2424, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12478538981655188, "compression_ratio": 1.8918918918918919, "no_speech_prob": 8.800569958111737e-06}, {"id": 1730, "seek": 498936, "start": 4999.719999999999, "end": 5002.0, "text": " So now you cannot propagate gradient to this black box.", "tokens": [50364, 440, 787, 551, 291, 393, 360, 307, 853, 746, 1646, 50482, 50482, 293, 536, 498, 291, 483, 264, 912, 1874, 420, 406, 13, 50642, 50642, 407, 437, 360, 291, 360, 294, 300, 1389, 30, 50706, 50706, 407, 1936, 586, 428, 2063, 2445, 307, 257, 2211, 2424, 13, 50882, 50882, 407, 586, 291, 2644, 48256, 16235, 281, 341, 2211, 2424, 13, 50996, 50996, 708, 291, 362, 281, 360, 307, 12539, 264, 16235, 51084, 51084, 538, 13269, 374, 4324, 437, 291, 3154, 281, 300, 2211, 2424, 13, 51294, 51294, 407, 291, 853, 746, 11, 293, 300, 746, 51576, 51576, 576, 312, 257, 40468, 399, 295, 428, 4846, 281, 341, 2211, 2424, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12478538981655188, "compression_ratio": 1.8918918918918919, "no_speech_prob": 8.800569958111737e-06}, {"id": 1731, "seek": 498936, "start": 5002.0, "end": 5003.759999999999, "text": " What you have to do is estimate the gradient", "tokens": [50364, 440, 787, 551, 291, 393, 360, 307, 853, 746, 1646, 50482, 50482, 293, 536, 498, 291, 483, 264, 912, 1874, 420, 406, 13, 50642, 50642, 407, 437, 360, 291, 360, 294, 300, 1389, 30, 50706, 50706, 407, 1936, 586, 428, 2063, 2445, 307, 257, 2211, 2424, 13, 50882, 50882, 407, 586, 291, 2644, 48256, 16235, 281, 341, 2211, 2424, 13, 50996, 50996, 708, 291, 362, 281, 360, 307, 12539, 264, 16235, 51084, 51084, 538, 13269, 374, 4324, 437, 291, 3154, 281, 300, 2211, 2424, 13, 51294, 51294, 407, 291, 853, 746, 11, 293, 300, 746, 51576, 51576, 576, 312, 257, 40468, 399, 295, 428, 4846, 281, 341, 2211, 2424, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12478538981655188, "compression_ratio": 1.8918918918918919, "no_speech_prob": 8.800569958111737e-06}, {"id": 1732, "seek": 498936, "start": 5003.759999999999, "end": 5007.96, "text": " by perturbing what you feed to that black box.", "tokens": [50364, 440, 787, 551, 291, 393, 360, 307, 853, 746, 1646, 50482, 50482, 293, 536, 498, 291, 483, 264, 912, 1874, 420, 406, 13, 50642, 50642, 407, 437, 360, 291, 360, 294, 300, 1389, 30, 50706, 50706, 407, 1936, 586, 428, 2063, 2445, 307, 257, 2211, 2424, 13, 50882, 50882, 407, 586, 291, 2644, 48256, 16235, 281, 341, 2211, 2424, 13, 50996, 50996, 708, 291, 362, 281, 360, 307, 12539, 264, 16235, 51084, 51084, 538, 13269, 374, 4324, 437, 291, 3154, 281, 300, 2211, 2424, 13, 51294, 51294, 407, 291, 853, 746, 11, 293, 300, 746, 51576, 51576, 576, 312, 257, 40468, 399, 295, 428, 4846, 281, 341, 2211, 2424, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12478538981655188, "compression_ratio": 1.8918918918918919, "no_speech_prob": 8.800569958111737e-06}, {"id": 1733, "seek": 498936, "start": 5007.96, "end": 5013.599999999999, "text": " So you try something, and that something", "tokens": [50364, 440, 787, 551, 291, 393, 360, 307, 853, 746, 1646, 50482, 50482, 293, 536, 498, 291, 483, 264, 912, 1874, 420, 406, 13, 50642, 50642, 407, 437, 360, 291, 360, 294, 300, 1389, 30, 50706, 50706, 407, 1936, 586, 428, 2063, 2445, 307, 257, 2211, 2424, 13, 50882, 50882, 407, 586, 291, 2644, 48256, 16235, 281, 341, 2211, 2424, 13, 50996, 50996, 708, 291, 362, 281, 360, 307, 12539, 264, 16235, 51084, 51084, 538, 13269, 374, 4324, 437, 291, 3154, 281, 300, 2211, 2424, 13, 51294, 51294, 407, 291, 853, 746, 11, 293, 300, 746, 51576, 51576, 576, 312, 257, 40468, 399, 295, 428, 4846, 281, 341, 2211, 2424, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12478538981655188, "compression_ratio": 1.8918918918918919, "no_speech_prob": 8.800569958111737e-06}, {"id": 1734, "seek": 498936, "start": 5013.599999999999, "end": 5017.679999999999, "text": " would be a perturbation of your input to this black box.", "tokens": [50364, 440, 787, 551, 291, 393, 360, 307, 853, 746, 1646, 50482, 50482, 293, 536, 498, 291, 483, 264, 912, 1874, 420, 406, 13, 50642, 50642, 407, 437, 360, 291, 360, 294, 300, 1389, 30, 50706, 50706, 407, 1936, 586, 428, 2063, 2445, 307, 257, 2211, 2424, 13, 50882, 50882, 407, 586, 291, 2644, 48256, 16235, 281, 341, 2211, 2424, 13, 50996, 50996, 708, 291, 362, 281, 360, 307, 12539, 264, 16235, 51084, 51084, 538, 13269, 374, 4324, 437, 291, 3154, 281, 300, 2211, 2424, 13, 51294, 51294, 407, 291, 853, 746, 11, 293, 300, 746, 51576, 51576, 576, 312, 257, 40468, 399, 295, 428, 4846, 281, 341, 2211, 2424, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12478538981655188, "compression_ratio": 1.8918918918918919, "no_speech_prob": 8.800569958111737e-06}, {"id": 1735, "seek": 501768, "start": 5017.68, "end": 5021.84, "text": " And you see what resulting perturbation", "tokens": [50364, 400, 291, 536, 437, 16505, 40468, 399, 50572, 50572, 11843, 322, 264, 5598, 295, 264, 2211, 2424, 11, 264, 2063, 13, 50780, 50780, 400, 586, 291, 393, 12539, 1968, 341, 26747, 9689, 51112, 51112, 420, 1027, 264, 1874, 5324, 13, 51260, 51260, 407, 4476, 341, 307, 411, 341, 19618, 1154, 51420, 51420, 286, 390, 3585, 291, 466, 3071, 13, 51530, 51530, 440, 16235, 12, 6032, 9284, 307, 411, 291, 366, 294, 264, 6937, 11, 51670, 51670, 2731, 294, 264, 6937, 294, 257, 13648, 13, 51768, 51768, 509, 393, 380, 536, 1340, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.11979355414708455, "compression_ratio": 1.6153846153846154, "no_speech_prob": 5.8625505516829435e-06}, {"id": 1736, "seek": 501768, "start": 5021.84, "end": 5026.0, "text": " occurs on the output of the black box, the cost.", "tokens": [50364, 400, 291, 536, 437, 16505, 40468, 399, 50572, 50572, 11843, 322, 264, 5598, 295, 264, 2211, 2424, 11, 264, 2063, 13, 50780, 50780, 400, 586, 291, 393, 12539, 1968, 341, 26747, 9689, 51112, 51112, 420, 1027, 264, 1874, 5324, 13, 51260, 51260, 407, 4476, 341, 307, 411, 341, 19618, 1154, 51420, 51420, 286, 390, 3585, 291, 466, 3071, 13, 51530, 51530, 440, 16235, 12, 6032, 9284, 307, 411, 291, 366, 294, 264, 6937, 11, 51670, 51670, 2731, 294, 264, 6937, 294, 257, 13648, 13, 51768, 51768, 509, 393, 380, 536, 1340, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.11979355414708455, "compression_ratio": 1.6153846153846154, "no_speech_prob": 5.8625505516829435e-06}, {"id": 1737, "seek": 501768, "start": 5026.0, "end": 5032.64, "text": " And now you can estimate whether this modification improved", "tokens": [50364, 400, 291, 536, 437, 16505, 40468, 399, 50572, 50572, 11843, 322, 264, 5598, 295, 264, 2211, 2424, 11, 264, 2063, 13, 50780, 50780, 400, 586, 291, 393, 12539, 1968, 341, 26747, 9689, 51112, 51112, 420, 1027, 264, 1874, 5324, 13, 51260, 51260, 407, 4476, 341, 307, 411, 341, 19618, 1154, 51420, 51420, 286, 390, 3585, 291, 466, 3071, 13, 51530, 51530, 440, 16235, 12, 6032, 9284, 307, 411, 291, 366, 294, 264, 6937, 11, 51670, 51670, 2731, 294, 264, 6937, 294, 257, 13648, 13, 51768, 51768, 509, 393, 380, 536, 1340, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.11979355414708455, "compression_ratio": 1.6153846153846154, "no_speech_prob": 5.8625505516829435e-06}, {"id": 1738, "seek": 501768, "start": 5032.64, "end": 5035.6, "text": " or made the result worse.", "tokens": [50364, 400, 291, 536, 437, 16505, 40468, 399, 50572, 50572, 11843, 322, 264, 5598, 295, 264, 2211, 2424, 11, 264, 2063, 13, 50780, 50780, 400, 586, 291, 393, 12539, 1968, 341, 26747, 9689, 51112, 51112, 420, 1027, 264, 1874, 5324, 13, 51260, 51260, 407, 4476, 341, 307, 411, 341, 19618, 1154, 51420, 51420, 286, 390, 3585, 291, 466, 3071, 13, 51530, 51530, 440, 16235, 12, 6032, 9284, 307, 411, 291, 366, 294, 264, 6937, 11, 51670, 51670, 2731, 294, 264, 6937, 294, 257, 13648, 13, 51768, 51768, 509, 393, 380, 536, 1340, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.11979355414708455, "compression_ratio": 1.6153846153846154, "no_speech_prob": 5.8625505516829435e-06}, {"id": 1739, "seek": 501768, "start": 5035.6, "end": 5038.8, "text": " So essentially this is like this optimization problem", "tokens": [50364, 400, 291, 536, 437, 16505, 40468, 399, 50572, 50572, 11843, 322, 264, 5598, 295, 264, 2211, 2424, 11, 264, 2063, 13, 50780, 50780, 400, 586, 291, 393, 12539, 1968, 341, 26747, 9689, 51112, 51112, 420, 1027, 264, 1874, 5324, 13, 51260, 51260, 407, 4476, 341, 307, 411, 341, 19618, 1154, 51420, 51420, 286, 390, 3585, 291, 466, 3071, 13, 51530, 51530, 440, 16235, 12, 6032, 9284, 307, 411, 291, 366, 294, 264, 6937, 11, 51670, 51670, 2731, 294, 264, 6937, 294, 257, 13648, 13, 51768, 51768, 509, 393, 380, 536, 1340, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.11979355414708455, "compression_ratio": 1.6153846153846154, "no_speech_prob": 5.8625505516829435e-06}, {"id": 1740, "seek": 501768, "start": 5038.8, "end": 5041.0, "text": " I was telling you about earlier.", "tokens": [50364, 400, 291, 536, 437, 16505, 40468, 399, 50572, 50572, 11843, 322, 264, 5598, 295, 264, 2211, 2424, 11, 264, 2063, 13, 50780, 50780, 400, 586, 291, 393, 12539, 1968, 341, 26747, 9689, 51112, 51112, 420, 1027, 264, 1874, 5324, 13, 51260, 51260, 407, 4476, 341, 307, 411, 341, 19618, 1154, 51420, 51420, 286, 390, 3585, 291, 466, 3071, 13, 51530, 51530, 440, 16235, 12, 6032, 9284, 307, 411, 291, 366, 294, 264, 6937, 11, 51670, 51670, 2731, 294, 264, 6937, 294, 257, 13648, 13, 51768, 51768, 509, 393, 380, 536, 1340, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.11979355414708455, "compression_ratio": 1.6153846153846154, "no_speech_prob": 5.8625505516829435e-06}, {"id": 1741, "seek": 501768, "start": 5041.0, "end": 5043.8, "text": " The gradient-based algorithm is like you are in the mountain,", "tokens": [50364, 400, 291, 536, 437, 16505, 40468, 399, 50572, 50572, 11843, 322, 264, 5598, 295, 264, 2211, 2424, 11, 264, 2063, 13, 50780, 50780, 400, 586, 291, 393, 12539, 1968, 341, 26747, 9689, 51112, 51112, 420, 1027, 264, 1874, 5324, 13, 51260, 51260, 407, 4476, 341, 307, 411, 341, 19618, 1154, 51420, 51420, 286, 390, 3585, 291, 466, 3071, 13, 51530, 51530, 440, 16235, 12, 6032, 9284, 307, 411, 291, 366, 294, 264, 6937, 11, 51670, 51670, 2731, 294, 264, 6937, 294, 257, 13648, 13, 51768, 51768, 509, 393, 380, 536, 1340, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.11979355414708455, "compression_ratio": 1.6153846153846154, "no_speech_prob": 5.8625505516829435e-06}, {"id": 1742, "seek": 501768, "start": 5043.8, "end": 5045.76, "text": " lost in the mountain in a fog.", "tokens": [50364, 400, 291, 536, 437, 16505, 40468, 399, 50572, 50572, 11843, 322, 264, 5598, 295, 264, 2211, 2424, 11, 264, 2063, 13, 50780, 50780, 400, 586, 291, 393, 12539, 1968, 341, 26747, 9689, 51112, 51112, 420, 1027, 264, 1874, 5324, 13, 51260, 51260, 407, 4476, 341, 307, 411, 341, 19618, 1154, 51420, 51420, 286, 390, 3585, 291, 466, 3071, 13, 51530, 51530, 440, 16235, 12, 6032, 9284, 307, 411, 291, 366, 294, 264, 6937, 11, 51670, 51670, 2731, 294, 264, 6937, 294, 257, 13648, 13, 51768, 51768, 509, 393, 380, 536, 1340, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.11979355414708455, "compression_ratio": 1.6153846153846154, "no_speech_prob": 5.8625505516829435e-06}, {"id": 1743, "seek": 501768, "start": 5045.76, "end": 5047.52, "text": " You can't see anything.", "tokens": [50364, 400, 291, 536, 437, 16505, 40468, 399, 50572, 50572, 11843, 322, 264, 5598, 295, 264, 2211, 2424, 11, 264, 2063, 13, 50780, 50780, 400, 586, 291, 393, 12539, 1968, 341, 26747, 9689, 51112, 51112, 420, 1027, 264, 1874, 5324, 13, 51260, 51260, 407, 4476, 341, 307, 411, 341, 19618, 1154, 51420, 51420, 286, 390, 3585, 291, 466, 3071, 13, 51530, 51530, 440, 16235, 12, 6032, 9284, 307, 411, 291, 366, 294, 264, 6937, 11, 51670, 51670, 2731, 294, 264, 6937, 294, 257, 13648, 13, 51768, 51768, 509, 393, 380, 536, 1340, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.11979355414708455, "compression_ratio": 1.6153846153846154, "no_speech_prob": 5.8625505516829435e-06}, {"id": 1744, "seek": 504752, "start": 5047.52, "end": 5050.84, "text": " But you can estimate the direction of steepest descent.", "tokens": [50364, 583, 291, 393, 12539, 264, 3513, 295, 16841, 377, 23475, 13, 50530, 50530, 509, 393, 445, 574, 926, 11, 293, 291, 50598, 50598, 393, 980, 597, 307, 264, 3513, 295, 16841, 377, 23475, 13, 50712, 50712, 509, 445, 747, 257, 1823, 294, 300, 3513, 13, 50894, 50894, 708, 498, 291, 393, 380, 536, 30, 51070, 51070, 407, 1936, 281, 12539, 294, 597, 3513, 51174, 51174, 264, 2445, 1709, 760, 11, 291, 362, 281, 767, 747, 257, 1823, 13, 51382, 51382, 407, 291, 747, 257, 1823, 294, 472, 3513, 13, 51504, 51504, 1396, 291, 808, 646, 13, 51550, 51550, 1396, 291, 747, 257, 1823, 294, 264, 661, 3513, 11, 808, 646, 13, 51652, 51652, 400, 550, 1310, 291, 483, 364, 12539, 51712, 51712, 337, 689, 264, 16841, 377, 23475, 307, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1650263800549863, "compression_ratio": 2.130434782608696, "no_speech_prob": 3.882673991029151e-05}, {"id": 1745, "seek": 504752, "start": 5050.84, "end": 5052.200000000001, "text": " You can just look around, and you", "tokens": [50364, 583, 291, 393, 12539, 264, 3513, 295, 16841, 377, 23475, 13, 50530, 50530, 509, 393, 445, 574, 926, 11, 293, 291, 50598, 50598, 393, 980, 597, 307, 264, 3513, 295, 16841, 377, 23475, 13, 50712, 50712, 509, 445, 747, 257, 1823, 294, 300, 3513, 13, 50894, 50894, 708, 498, 291, 393, 380, 536, 30, 51070, 51070, 407, 1936, 281, 12539, 294, 597, 3513, 51174, 51174, 264, 2445, 1709, 760, 11, 291, 362, 281, 767, 747, 257, 1823, 13, 51382, 51382, 407, 291, 747, 257, 1823, 294, 472, 3513, 13, 51504, 51504, 1396, 291, 808, 646, 13, 51550, 51550, 1396, 291, 747, 257, 1823, 294, 264, 661, 3513, 11, 808, 646, 13, 51652, 51652, 400, 550, 1310, 291, 483, 364, 12539, 51712, 51712, 337, 689, 264, 16841, 377, 23475, 307, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1650263800549863, "compression_ratio": 2.130434782608696, "no_speech_prob": 3.882673991029151e-05}, {"id": 1746, "seek": 504752, "start": 5052.200000000001, "end": 5054.4800000000005, "text": " can tell which is the direction of steepest descent.", "tokens": [50364, 583, 291, 393, 12539, 264, 3513, 295, 16841, 377, 23475, 13, 50530, 50530, 509, 393, 445, 574, 926, 11, 293, 291, 50598, 50598, 393, 980, 597, 307, 264, 3513, 295, 16841, 377, 23475, 13, 50712, 50712, 509, 445, 747, 257, 1823, 294, 300, 3513, 13, 50894, 50894, 708, 498, 291, 393, 380, 536, 30, 51070, 51070, 407, 1936, 281, 12539, 294, 597, 3513, 51174, 51174, 264, 2445, 1709, 760, 11, 291, 362, 281, 767, 747, 257, 1823, 13, 51382, 51382, 407, 291, 747, 257, 1823, 294, 472, 3513, 13, 51504, 51504, 1396, 291, 808, 646, 13, 51550, 51550, 1396, 291, 747, 257, 1823, 294, 264, 661, 3513, 11, 808, 646, 13, 51652, 51652, 400, 550, 1310, 291, 483, 364, 12539, 51712, 51712, 337, 689, 264, 16841, 377, 23475, 307, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1650263800549863, "compression_ratio": 2.130434782608696, "no_speech_prob": 3.882673991029151e-05}, {"id": 1747, "seek": 504752, "start": 5054.4800000000005, "end": 5058.120000000001, "text": " You just take a step in that direction.", "tokens": [50364, 583, 291, 393, 12539, 264, 3513, 295, 16841, 377, 23475, 13, 50530, 50530, 509, 393, 445, 574, 926, 11, 293, 291, 50598, 50598, 393, 980, 597, 307, 264, 3513, 295, 16841, 377, 23475, 13, 50712, 50712, 509, 445, 747, 257, 1823, 294, 300, 3513, 13, 50894, 50894, 708, 498, 291, 393, 380, 536, 30, 51070, 51070, 407, 1936, 281, 12539, 294, 597, 3513, 51174, 51174, 264, 2445, 1709, 760, 11, 291, 362, 281, 767, 747, 257, 1823, 13, 51382, 51382, 407, 291, 747, 257, 1823, 294, 472, 3513, 13, 51504, 51504, 1396, 291, 808, 646, 13, 51550, 51550, 1396, 291, 747, 257, 1823, 294, 264, 661, 3513, 11, 808, 646, 13, 51652, 51652, 400, 550, 1310, 291, 483, 364, 12539, 51712, 51712, 337, 689, 264, 16841, 377, 23475, 307, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1650263800549863, "compression_ratio": 2.130434782608696, "no_speech_prob": 3.882673991029151e-05}, {"id": 1748, "seek": 504752, "start": 5058.120000000001, "end": 5061.64, "text": " What if you can't see?", "tokens": [50364, 583, 291, 393, 12539, 264, 3513, 295, 16841, 377, 23475, 13, 50530, 50530, 509, 393, 445, 574, 926, 11, 293, 291, 50598, 50598, 393, 980, 597, 307, 264, 3513, 295, 16841, 377, 23475, 13, 50712, 50712, 509, 445, 747, 257, 1823, 294, 300, 3513, 13, 50894, 50894, 708, 498, 291, 393, 380, 536, 30, 51070, 51070, 407, 1936, 281, 12539, 294, 597, 3513, 51174, 51174, 264, 2445, 1709, 760, 11, 291, 362, 281, 767, 747, 257, 1823, 13, 51382, 51382, 407, 291, 747, 257, 1823, 294, 472, 3513, 13, 51504, 51504, 1396, 291, 808, 646, 13, 51550, 51550, 1396, 291, 747, 257, 1823, 294, 264, 661, 3513, 11, 808, 646, 13, 51652, 51652, 400, 550, 1310, 291, 483, 364, 12539, 51712, 51712, 337, 689, 264, 16841, 377, 23475, 307, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1650263800549863, "compression_ratio": 2.130434782608696, "no_speech_prob": 3.882673991029151e-05}, {"id": 1749, "seek": 504752, "start": 5061.64, "end": 5063.72, "text": " So basically to estimate in which direction", "tokens": [50364, 583, 291, 393, 12539, 264, 3513, 295, 16841, 377, 23475, 13, 50530, 50530, 509, 393, 445, 574, 926, 11, 293, 291, 50598, 50598, 393, 980, 597, 307, 264, 3513, 295, 16841, 377, 23475, 13, 50712, 50712, 509, 445, 747, 257, 1823, 294, 300, 3513, 13, 50894, 50894, 708, 498, 291, 393, 380, 536, 30, 51070, 51070, 407, 1936, 281, 12539, 294, 597, 3513, 51174, 51174, 264, 2445, 1709, 760, 11, 291, 362, 281, 767, 747, 257, 1823, 13, 51382, 51382, 407, 291, 747, 257, 1823, 294, 472, 3513, 13, 51504, 51504, 1396, 291, 808, 646, 13, 51550, 51550, 1396, 291, 747, 257, 1823, 294, 264, 661, 3513, 11, 808, 646, 13, 51652, 51652, 400, 550, 1310, 291, 483, 364, 12539, 51712, 51712, 337, 689, 264, 16841, 377, 23475, 307, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1650263800549863, "compression_ratio": 2.130434782608696, "no_speech_prob": 3.882673991029151e-05}, {"id": 1750, "seek": 504752, "start": 5063.72, "end": 5067.88, "text": " the function goes down, you have to actually take a step.", "tokens": [50364, 583, 291, 393, 12539, 264, 3513, 295, 16841, 377, 23475, 13, 50530, 50530, 509, 393, 445, 574, 926, 11, 293, 291, 50598, 50598, 393, 980, 597, 307, 264, 3513, 295, 16841, 377, 23475, 13, 50712, 50712, 509, 445, 747, 257, 1823, 294, 300, 3513, 13, 50894, 50894, 708, 498, 291, 393, 380, 536, 30, 51070, 51070, 407, 1936, 281, 12539, 294, 597, 3513, 51174, 51174, 264, 2445, 1709, 760, 11, 291, 362, 281, 767, 747, 257, 1823, 13, 51382, 51382, 407, 291, 747, 257, 1823, 294, 472, 3513, 13, 51504, 51504, 1396, 291, 808, 646, 13, 51550, 51550, 1396, 291, 747, 257, 1823, 294, 264, 661, 3513, 11, 808, 646, 13, 51652, 51652, 400, 550, 1310, 291, 483, 364, 12539, 51712, 51712, 337, 689, 264, 16841, 377, 23475, 307, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1650263800549863, "compression_ratio": 2.130434782608696, "no_speech_prob": 3.882673991029151e-05}, {"id": 1751, "seek": 504752, "start": 5067.88, "end": 5070.320000000001, "text": " So you take a step in one direction.", "tokens": [50364, 583, 291, 393, 12539, 264, 3513, 295, 16841, 377, 23475, 13, 50530, 50530, 509, 393, 445, 574, 926, 11, 293, 291, 50598, 50598, 393, 980, 597, 307, 264, 3513, 295, 16841, 377, 23475, 13, 50712, 50712, 509, 445, 747, 257, 1823, 294, 300, 3513, 13, 50894, 50894, 708, 498, 291, 393, 380, 536, 30, 51070, 51070, 407, 1936, 281, 12539, 294, 597, 3513, 51174, 51174, 264, 2445, 1709, 760, 11, 291, 362, 281, 767, 747, 257, 1823, 13, 51382, 51382, 407, 291, 747, 257, 1823, 294, 472, 3513, 13, 51504, 51504, 1396, 291, 808, 646, 13, 51550, 51550, 1396, 291, 747, 257, 1823, 294, 264, 661, 3513, 11, 808, 646, 13, 51652, 51652, 400, 550, 1310, 291, 483, 364, 12539, 51712, 51712, 337, 689, 264, 16841, 377, 23475, 307, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1650263800549863, "compression_ratio": 2.130434782608696, "no_speech_prob": 3.882673991029151e-05}, {"id": 1752, "seek": 504752, "start": 5070.320000000001, "end": 5071.240000000001, "text": " Then you come back.", "tokens": [50364, 583, 291, 393, 12539, 264, 3513, 295, 16841, 377, 23475, 13, 50530, 50530, 509, 393, 445, 574, 926, 11, 293, 291, 50598, 50598, 393, 980, 597, 307, 264, 3513, 295, 16841, 377, 23475, 13, 50712, 50712, 509, 445, 747, 257, 1823, 294, 300, 3513, 13, 50894, 50894, 708, 498, 291, 393, 380, 536, 30, 51070, 51070, 407, 1936, 281, 12539, 294, 597, 3513, 51174, 51174, 264, 2445, 1709, 760, 11, 291, 362, 281, 767, 747, 257, 1823, 13, 51382, 51382, 407, 291, 747, 257, 1823, 294, 472, 3513, 13, 51504, 51504, 1396, 291, 808, 646, 13, 51550, 51550, 1396, 291, 747, 257, 1823, 294, 264, 661, 3513, 11, 808, 646, 13, 51652, 51652, 400, 550, 1310, 291, 483, 364, 12539, 51712, 51712, 337, 689, 264, 16841, 377, 23475, 307, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1650263800549863, "compression_ratio": 2.130434782608696, "no_speech_prob": 3.882673991029151e-05}, {"id": 1753, "seek": 504752, "start": 5071.240000000001, "end": 5073.280000000001, "text": " Then you take a step in the other direction, come back.", "tokens": [50364, 583, 291, 393, 12539, 264, 3513, 295, 16841, 377, 23475, 13, 50530, 50530, 509, 393, 445, 574, 926, 11, 293, 291, 50598, 50598, 393, 980, 597, 307, 264, 3513, 295, 16841, 377, 23475, 13, 50712, 50712, 509, 445, 747, 257, 1823, 294, 300, 3513, 13, 50894, 50894, 708, 498, 291, 393, 380, 536, 30, 51070, 51070, 407, 1936, 281, 12539, 294, 597, 3513, 51174, 51174, 264, 2445, 1709, 760, 11, 291, 362, 281, 767, 747, 257, 1823, 13, 51382, 51382, 407, 291, 747, 257, 1823, 294, 472, 3513, 13, 51504, 51504, 1396, 291, 808, 646, 13, 51550, 51550, 1396, 291, 747, 257, 1823, 294, 264, 661, 3513, 11, 808, 646, 13, 51652, 51652, 400, 550, 1310, 291, 483, 364, 12539, 51712, 51712, 337, 689, 264, 16841, 377, 23475, 307, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1650263800549863, "compression_ratio": 2.130434782608696, "no_speech_prob": 3.882673991029151e-05}, {"id": 1754, "seek": 504752, "start": 5073.280000000001, "end": 5074.4800000000005, "text": " And then maybe you get an estimate", "tokens": [50364, 583, 291, 393, 12539, 264, 3513, 295, 16841, 377, 23475, 13, 50530, 50530, 509, 393, 445, 574, 926, 11, 293, 291, 50598, 50598, 393, 980, 597, 307, 264, 3513, 295, 16841, 377, 23475, 13, 50712, 50712, 509, 445, 747, 257, 1823, 294, 300, 3513, 13, 50894, 50894, 708, 498, 291, 393, 380, 536, 30, 51070, 51070, 407, 1936, 281, 12539, 294, 597, 3513, 51174, 51174, 264, 2445, 1709, 760, 11, 291, 362, 281, 767, 747, 257, 1823, 13, 51382, 51382, 407, 291, 747, 257, 1823, 294, 472, 3513, 13, 51504, 51504, 1396, 291, 808, 646, 13, 51550, 51550, 1396, 291, 747, 257, 1823, 294, 264, 661, 3513, 11, 808, 646, 13, 51652, 51652, 400, 550, 1310, 291, 483, 364, 12539, 51712, 51712, 337, 689, 264, 16841, 377, 23475, 307, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1650263800549863, "compression_ratio": 2.130434782608696, "no_speech_prob": 3.882673991029151e-05}, {"id": 1755, "seek": 504752, "start": 5074.4800000000005, "end": 5076.320000000001, "text": " for where the steepest descent is.", "tokens": [50364, 583, 291, 393, 12539, 264, 3513, 295, 16841, 377, 23475, 13, 50530, 50530, 509, 393, 445, 574, 926, 11, 293, 291, 50598, 50598, 393, 980, 597, 307, 264, 3513, 295, 16841, 377, 23475, 13, 50712, 50712, 509, 445, 747, 257, 1823, 294, 300, 3513, 13, 50894, 50894, 708, 498, 291, 393, 380, 536, 30, 51070, 51070, 407, 1936, 281, 12539, 294, 597, 3513, 51174, 51174, 264, 2445, 1709, 760, 11, 291, 362, 281, 767, 747, 257, 1823, 13, 51382, 51382, 407, 291, 747, 257, 1823, 294, 472, 3513, 13, 51504, 51504, 1396, 291, 808, 646, 13, 51550, 51550, 1396, 291, 747, 257, 1823, 294, 264, 661, 3513, 11, 808, 646, 13, 51652, 51652, 400, 550, 1310, 291, 483, 364, 12539, 51712, 51712, 337, 689, 264, 16841, 377, 23475, 307, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1650263800549863, "compression_ratio": 2.130434782608696, "no_speech_prob": 3.882673991029151e-05}, {"id": 1756, "seek": 507632, "start": 5076.32, "end": 5078.36, "text": " So you can take a step for steepest descent.", "tokens": [50364, 407, 291, 393, 747, 257, 1823, 337, 16841, 377, 23475, 13, 50466, 50466, 407, 341, 307, 8017, 990, 264, 16235, 538, 40468, 399, 50608, 50608, 2602, 295, 538, 40358, 1355, 295, 646, 79, 1513, 559, 990, 2771, 2448, 11, 50810, 50810, 15866, 14117, 2567, 420, 2035, 11, 14641, 33733, 13, 51052, 51052, 400, 550, 456, 307, 264, 1150, 1823, 295, 14024, 13, 51156, 51156, 961, 311, 3811, 300, 264, 9661, 291, 434, 294, 51326, 51326, 307, 1936, 4962, 5315, 11, 3993, 1564, 294, 257, 1339, 11, 51488, 51488, 456, 307, 257, 1823, 13, 51572, 51572, 407, 1940, 257, 1359, 1823, 294, 472, 3513, 51678, 51678, 486, 406, 976, 291, 604, 1589, 466, 597, 51780, 51780, 3513, 291, 362, 281, 352, 281, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11866045755053324, "compression_ratio": 1.6875, "no_speech_prob": 1.4284563803812489e-05}, {"id": 1757, "seek": 507632, "start": 5078.36, "end": 5081.2, "text": " So this is estimating the gradient by perturbation", "tokens": [50364, 407, 291, 393, 747, 257, 1823, 337, 16841, 377, 23475, 13, 50466, 50466, 407, 341, 307, 8017, 990, 264, 16235, 538, 40468, 399, 50608, 50608, 2602, 295, 538, 40358, 1355, 295, 646, 79, 1513, 559, 990, 2771, 2448, 11, 50810, 50810, 15866, 14117, 2567, 420, 2035, 11, 14641, 33733, 13, 51052, 51052, 400, 550, 456, 307, 264, 1150, 1823, 295, 14024, 13, 51156, 51156, 961, 311, 3811, 300, 264, 9661, 291, 434, 294, 51326, 51326, 307, 1936, 4962, 5315, 11, 3993, 1564, 294, 257, 1339, 11, 51488, 51488, 456, 307, 257, 1823, 13, 51572, 51572, 407, 1940, 257, 1359, 1823, 294, 472, 3513, 51678, 51678, 486, 406, 976, 291, 604, 1589, 466, 597, 51780, 51780, 3513, 291, 362, 281, 352, 281, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11866045755053324, "compression_ratio": 1.6875, "no_speech_prob": 1.4284563803812489e-05}, {"id": 1758, "seek": 507632, "start": 5081.2, "end": 5085.24, "text": " instead of by analytic means of backpropagating gradients,", "tokens": [50364, 407, 291, 393, 747, 257, 1823, 337, 16841, 377, 23475, 13, 50466, 50466, 407, 341, 307, 8017, 990, 264, 16235, 538, 40468, 399, 50608, 50608, 2602, 295, 538, 40358, 1355, 295, 646, 79, 1513, 559, 990, 2771, 2448, 11, 50810, 50810, 15866, 14117, 2567, 420, 2035, 11, 14641, 33733, 13, 51052, 51052, 400, 550, 456, 307, 264, 1150, 1823, 295, 14024, 13, 51156, 51156, 961, 311, 3811, 300, 264, 9661, 291, 434, 294, 51326, 51326, 307, 1936, 4962, 5315, 11, 3993, 1564, 294, 257, 1339, 11, 51488, 51488, 456, 307, 257, 1823, 13, 51572, 51572, 407, 1940, 257, 1359, 1823, 294, 472, 3513, 51678, 51678, 486, 406, 976, 291, 604, 1589, 466, 597, 51780, 51780, 3513, 291, 362, 281, 352, 281, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11866045755053324, "compression_ratio": 1.6875, "no_speech_prob": 1.4284563803812489e-05}, {"id": 1759, "seek": 507632, "start": 5085.24, "end": 5090.08, "text": " computing Jacobians or whatever, partial derivatives.", "tokens": [50364, 407, 291, 393, 747, 257, 1823, 337, 16841, 377, 23475, 13, 50466, 50466, 407, 341, 307, 8017, 990, 264, 16235, 538, 40468, 399, 50608, 50608, 2602, 295, 538, 40358, 1355, 295, 646, 79, 1513, 559, 990, 2771, 2448, 11, 50810, 50810, 15866, 14117, 2567, 420, 2035, 11, 14641, 33733, 13, 51052, 51052, 400, 550, 456, 307, 264, 1150, 1823, 295, 14024, 13, 51156, 51156, 961, 311, 3811, 300, 264, 9661, 291, 434, 294, 51326, 51326, 307, 1936, 4962, 5315, 11, 3993, 1564, 294, 257, 1339, 11, 51488, 51488, 456, 307, 257, 1823, 13, 51572, 51572, 407, 1940, 257, 1359, 1823, 294, 472, 3513, 51678, 51678, 486, 406, 976, 291, 604, 1589, 466, 597, 51780, 51780, 3513, 291, 362, 281, 352, 281, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11866045755053324, "compression_ratio": 1.6875, "no_speech_prob": 1.4284563803812489e-05}, {"id": 1760, "seek": 507632, "start": 5090.08, "end": 5092.16, "text": " And then there is the second step of complexity.", "tokens": [50364, 407, 291, 393, 747, 257, 1823, 337, 16841, 377, 23475, 13, 50466, 50466, 407, 341, 307, 8017, 990, 264, 16235, 538, 40468, 399, 50608, 50608, 2602, 295, 538, 40358, 1355, 295, 646, 79, 1513, 559, 990, 2771, 2448, 11, 50810, 50810, 15866, 14117, 2567, 420, 2035, 11, 14641, 33733, 13, 51052, 51052, 400, 550, 456, 307, 264, 1150, 1823, 295, 14024, 13, 51156, 51156, 961, 311, 3811, 300, 264, 9661, 291, 434, 294, 51326, 51326, 307, 1936, 4962, 5315, 11, 3993, 1564, 294, 257, 1339, 11, 51488, 51488, 456, 307, 257, 1823, 13, 51572, 51572, 407, 1940, 257, 1359, 1823, 294, 472, 3513, 51678, 51678, 486, 406, 976, 291, 604, 1589, 466, 597, 51780, 51780, 3513, 291, 362, 281, 352, 281, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11866045755053324, "compression_ratio": 1.6875, "no_speech_prob": 1.4284563803812489e-05}, {"id": 1761, "seek": 507632, "start": 5092.16, "end": 5095.5599999999995, "text": " Let's imagine that the landscape you're in", "tokens": [50364, 407, 291, 393, 747, 257, 1823, 337, 16841, 377, 23475, 13, 50466, 50466, 407, 341, 307, 8017, 990, 264, 16235, 538, 40468, 399, 50608, 50608, 2602, 295, 538, 40358, 1355, 295, 646, 79, 1513, 559, 990, 2771, 2448, 11, 50810, 50810, 15866, 14117, 2567, 420, 2035, 11, 14641, 33733, 13, 51052, 51052, 400, 550, 456, 307, 264, 1150, 1823, 295, 14024, 13, 51156, 51156, 961, 311, 3811, 300, 264, 9661, 291, 434, 294, 51326, 51326, 307, 1936, 4962, 5315, 11, 3993, 1564, 294, 257, 1339, 11, 51488, 51488, 456, 307, 257, 1823, 13, 51572, 51572, 407, 1940, 257, 1359, 1823, 294, 472, 3513, 51678, 51678, 486, 406, 976, 291, 604, 1589, 466, 597, 51780, 51780, 3513, 291, 362, 281, 352, 281, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11866045755053324, "compression_ratio": 1.6875, "no_speech_prob": 1.4284563803812489e-05}, {"id": 1762, "seek": 507632, "start": 5095.5599999999995, "end": 5098.799999999999, "text": " is basically flat everywhere, except once in a while,", "tokens": [50364, 407, 291, 393, 747, 257, 1823, 337, 16841, 377, 23475, 13, 50466, 50466, 407, 341, 307, 8017, 990, 264, 16235, 538, 40468, 399, 50608, 50608, 2602, 295, 538, 40358, 1355, 295, 646, 79, 1513, 559, 990, 2771, 2448, 11, 50810, 50810, 15866, 14117, 2567, 420, 2035, 11, 14641, 33733, 13, 51052, 51052, 400, 550, 456, 307, 264, 1150, 1823, 295, 14024, 13, 51156, 51156, 961, 311, 3811, 300, 264, 9661, 291, 434, 294, 51326, 51326, 307, 1936, 4962, 5315, 11, 3993, 1564, 294, 257, 1339, 11, 51488, 51488, 456, 307, 257, 1823, 13, 51572, 51572, 407, 1940, 257, 1359, 1823, 294, 472, 3513, 51678, 51678, 486, 406, 976, 291, 604, 1589, 466, 597, 51780, 51780, 3513, 291, 362, 281, 352, 281, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11866045755053324, "compression_ratio": 1.6875, "no_speech_prob": 1.4284563803812489e-05}, {"id": 1763, "seek": 507632, "start": 5098.799999999999, "end": 5100.48, "text": " there is a step.", "tokens": [50364, 407, 291, 393, 747, 257, 1823, 337, 16841, 377, 23475, 13, 50466, 50466, 407, 341, 307, 8017, 990, 264, 16235, 538, 40468, 399, 50608, 50608, 2602, 295, 538, 40358, 1355, 295, 646, 79, 1513, 559, 990, 2771, 2448, 11, 50810, 50810, 15866, 14117, 2567, 420, 2035, 11, 14641, 33733, 13, 51052, 51052, 400, 550, 456, 307, 264, 1150, 1823, 295, 14024, 13, 51156, 51156, 961, 311, 3811, 300, 264, 9661, 291, 434, 294, 51326, 51326, 307, 1936, 4962, 5315, 11, 3993, 1564, 294, 257, 1339, 11, 51488, 51488, 456, 307, 257, 1823, 13, 51572, 51572, 407, 1940, 257, 1359, 1823, 294, 472, 3513, 51678, 51678, 486, 406, 976, 291, 604, 1589, 466, 597, 51780, 51780, 3513, 291, 362, 281, 352, 281, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11866045755053324, "compression_ratio": 1.6875, "no_speech_prob": 1.4284563803812489e-05}, {"id": 1764, "seek": 507632, "start": 5100.48, "end": 5102.599999999999, "text": " So taking a small step in one direction", "tokens": [50364, 407, 291, 393, 747, 257, 1823, 337, 16841, 377, 23475, 13, 50466, 50466, 407, 341, 307, 8017, 990, 264, 16235, 538, 40468, 399, 50608, 50608, 2602, 295, 538, 40358, 1355, 295, 646, 79, 1513, 559, 990, 2771, 2448, 11, 50810, 50810, 15866, 14117, 2567, 420, 2035, 11, 14641, 33733, 13, 51052, 51052, 400, 550, 456, 307, 264, 1150, 1823, 295, 14024, 13, 51156, 51156, 961, 311, 3811, 300, 264, 9661, 291, 434, 294, 51326, 51326, 307, 1936, 4962, 5315, 11, 3993, 1564, 294, 257, 1339, 11, 51488, 51488, 456, 307, 257, 1823, 13, 51572, 51572, 407, 1940, 257, 1359, 1823, 294, 472, 3513, 51678, 51678, 486, 406, 976, 291, 604, 1589, 466, 597, 51780, 51780, 3513, 291, 362, 281, 352, 281, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11866045755053324, "compression_ratio": 1.6875, "no_speech_prob": 1.4284563803812489e-05}, {"id": 1765, "seek": 507632, "start": 5102.599999999999, "end": 5104.639999999999, "text": " will not give you any information about which", "tokens": [50364, 407, 291, 393, 747, 257, 1823, 337, 16841, 377, 23475, 13, 50466, 50466, 407, 341, 307, 8017, 990, 264, 16235, 538, 40468, 399, 50608, 50608, 2602, 295, 538, 40358, 1355, 295, 646, 79, 1513, 559, 990, 2771, 2448, 11, 50810, 50810, 15866, 14117, 2567, 420, 2035, 11, 14641, 33733, 13, 51052, 51052, 400, 550, 456, 307, 264, 1150, 1823, 295, 14024, 13, 51156, 51156, 961, 311, 3811, 300, 264, 9661, 291, 434, 294, 51326, 51326, 307, 1936, 4962, 5315, 11, 3993, 1564, 294, 257, 1339, 11, 51488, 51488, 456, 307, 257, 1823, 13, 51572, 51572, 407, 1940, 257, 1359, 1823, 294, 472, 3513, 51678, 51678, 486, 406, 976, 291, 604, 1589, 466, 597, 51780, 51780, 3513, 291, 362, 281, 352, 281, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11866045755053324, "compression_ratio": 1.6875, "no_speech_prob": 1.4284563803812489e-05}, {"id": 1766, "seek": 507632, "start": 5104.639999999999, "end": 5106.12, "text": " direction you have to go to.", "tokens": [50364, 407, 291, 393, 747, 257, 1823, 337, 16841, 377, 23475, 13, 50466, 50466, 407, 341, 307, 8017, 990, 264, 16235, 538, 40468, 399, 50608, 50608, 2602, 295, 538, 40358, 1355, 295, 646, 79, 1513, 559, 990, 2771, 2448, 11, 50810, 50810, 15866, 14117, 2567, 420, 2035, 11, 14641, 33733, 13, 51052, 51052, 400, 550, 456, 307, 264, 1150, 1823, 295, 14024, 13, 51156, 51156, 961, 311, 3811, 300, 264, 9661, 291, 434, 294, 51326, 51326, 307, 1936, 4962, 5315, 11, 3993, 1564, 294, 257, 1339, 11, 51488, 51488, 456, 307, 257, 1823, 13, 51572, 51572, 407, 1940, 257, 1359, 1823, 294, 472, 3513, 51678, 51678, 486, 406, 976, 291, 604, 1589, 466, 597, 51780, 51780, 3513, 291, 362, 281, 352, 281, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.11866045755053324, "compression_ratio": 1.6875, "no_speech_prob": 1.4284563803812489e-05}, {"id": 1767, "seek": 510612, "start": 5106.12, "end": 5108.32, "text": " So there you have to use other techniques.", "tokens": [50364, 407, 456, 291, 362, 281, 764, 661, 7512, 13, 50474, 50474, 17837, 3801, 4439, 11, 1364, 337, 257, 1339, 11, 50626, 50626, 293, 2577, 498, 291, 2100, 760, 257, 1823, 420, 406, 420, 352, 493, 257, 1823, 11, 50932, 50932, 1310, 291, 393, 12972, 1803, 294, 1266, 11, 1360, 14341, 295, 1803, 51114, 51114, 293, 550, 6839, 264, 25314, 13, 51246, 51246, 400, 550, 5699, 1580, 1619, 11, 1954, 11, 286, 915, 257, 5458, 11, 51418, 51418, 5498, 1518, 281, 808, 456, 13, 51536, 51536, 407, 439, 729, 7150, 366, 1219, 16235, 12, 10792, 19618, 51712, 51712, 14642, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.13512382692503697, "compression_ratio": 1.570281124497992, "no_speech_prob": 1.5206102943920996e-05}, {"id": 1768, "seek": 510612, "start": 5108.32, "end": 5111.36, "text": " Taking bigger steps, working for a while,", "tokens": [50364, 407, 456, 291, 362, 281, 764, 661, 7512, 13, 50474, 50474, 17837, 3801, 4439, 11, 1364, 337, 257, 1339, 11, 50626, 50626, 293, 2577, 498, 291, 2100, 760, 257, 1823, 420, 406, 420, 352, 493, 257, 1823, 11, 50932, 50932, 1310, 291, 393, 12972, 1803, 294, 1266, 11, 1360, 14341, 295, 1803, 51114, 51114, 293, 550, 6839, 264, 25314, 13, 51246, 51246, 400, 550, 5699, 1580, 1619, 11, 1954, 11, 286, 915, 257, 5458, 11, 51418, 51418, 5498, 1518, 281, 808, 456, 13, 51536, 51536, 407, 439, 729, 7150, 366, 1219, 16235, 12, 10792, 19618, 51712, 51712, 14642, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.13512382692503697, "compression_ratio": 1.570281124497992, "no_speech_prob": 1.5206102943920996e-05}, {"id": 1769, "seek": 510612, "start": 5111.36, "end": 5117.48, "text": " and seeing if you fall down a step or not or go up a step,", "tokens": [50364, 407, 456, 291, 362, 281, 764, 661, 7512, 13, 50474, 50474, 17837, 3801, 4439, 11, 1364, 337, 257, 1339, 11, 50626, 50626, 293, 2577, 498, 291, 2100, 760, 257, 1823, 420, 406, 420, 352, 493, 257, 1823, 11, 50932, 50932, 1310, 291, 393, 12972, 1803, 294, 1266, 11, 1360, 14341, 295, 1803, 51114, 51114, 293, 550, 6839, 264, 25314, 13, 51246, 51246, 400, 550, 5699, 1580, 1619, 11, 1954, 11, 286, 915, 257, 5458, 11, 51418, 51418, 5498, 1518, 281, 808, 456, 13, 51536, 51536, 407, 439, 729, 7150, 366, 1219, 16235, 12, 10792, 19618, 51712, 51712, 14642, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.13512382692503697, "compression_ratio": 1.570281124497992, "no_speech_prob": 1.5206102943920996e-05}, {"id": 1770, "seek": 510612, "start": 5117.48, "end": 5121.12, "text": " maybe you can multiply yourself in 10,000 copies of yourself", "tokens": [50364, 407, 456, 291, 362, 281, 764, 661, 7512, 13, 50474, 50474, 17837, 3801, 4439, 11, 1364, 337, 257, 1339, 11, 50626, 50626, 293, 2577, 498, 291, 2100, 760, 257, 1823, 420, 406, 420, 352, 493, 257, 1823, 11, 50932, 50932, 1310, 291, 393, 12972, 1803, 294, 1266, 11, 1360, 14341, 295, 1803, 51114, 51114, 293, 550, 6839, 264, 25314, 13, 51246, 51246, 400, 550, 5699, 1580, 1619, 11, 1954, 11, 286, 915, 257, 5458, 11, 51418, 51418, 5498, 1518, 281, 808, 456, 13, 51536, 51536, 407, 439, 729, 7150, 366, 1219, 16235, 12, 10792, 19618, 51712, 51712, 14642, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.13512382692503697, "compression_ratio": 1.570281124497992, "no_speech_prob": 1.5206102943920996e-05}, {"id": 1771, "seek": 510612, "start": 5121.12, "end": 5123.76, "text": " and then explore the surroundings.", "tokens": [50364, 407, 456, 291, 362, 281, 764, 661, 7512, 13, 50474, 50474, 17837, 3801, 4439, 11, 1364, 337, 257, 1339, 11, 50626, 50626, 293, 2577, 498, 291, 2100, 760, 257, 1823, 420, 406, 420, 352, 493, 257, 1823, 11, 50932, 50932, 1310, 291, 393, 12972, 1803, 294, 1266, 11, 1360, 14341, 295, 1803, 51114, 51114, 293, 550, 6839, 264, 25314, 13, 51246, 51246, 400, 550, 5699, 1580, 1619, 11, 1954, 11, 286, 915, 257, 5458, 11, 51418, 51418, 5498, 1518, 281, 808, 456, 13, 51536, 51536, 407, 439, 729, 7150, 366, 1219, 16235, 12, 10792, 19618, 51712, 51712, 14642, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.13512382692503697, "compression_ratio": 1.570281124497992, "no_speech_prob": 1.5206102943920996e-05}, {"id": 1772, "seek": 510612, "start": 5123.76, "end": 5127.2, "text": " And then whenever someone says, oh, I find a hole,", "tokens": [50364, 407, 456, 291, 362, 281, 764, 661, 7512, 13, 50474, 50474, 17837, 3801, 4439, 11, 1364, 337, 257, 1339, 11, 50626, 50626, 293, 2577, 498, 291, 2100, 760, 257, 1823, 420, 406, 420, 352, 493, 257, 1823, 11, 50932, 50932, 1310, 291, 393, 12972, 1803, 294, 1266, 11, 1360, 14341, 295, 1803, 51114, 51114, 293, 550, 6839, 264, 25314, 13, 51246, 51246, 400, 550, 5699, 1580, 1619, 11, 1954, 11, 286, 915, 257, 5458, 11, 51418, 51418, 5498, 1518, 281, 808, 456, 13, 51536, 51536, 407, 439, 729, 7150, 366, 1219, 16235, 12, 10792, 19618, 51712, 51712, 14642, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.13512382692503697, "compression_ratio": 1.570281124497992, "no_speech_prob": 1.5206102943920996e-05}, {"id": 1773, "seek": 510612, "start": 5127.2, "end": 5129.5599999999995, "text": " calls everyone to come there.", "tokens": [50364, 407, 456, 291, 362, 281, 764, 661, 7512, 13, 50474, 50474, 17837, 3801, 4439, 11, 1364, 337, 257, 1339, 11, 50626, 50626, 293, 2577, 498, 291, 2100, 760, 257, 1823, 420, 406, 420, 352, 493, 257, 1823, 11, 50932, 50932, 1310, 291, 393, 12972, 1803, 294, 1266, 11, 1360, 14341, 295, 1803, 51114, 51114, 293, 550, 6839, 264, 25314, 13, 51246, 51246, 400, 550, 5699, 1580, 1619, 11, 1954, 11, 286, 915, 257, 5458, 11, 51418, 51418, 5498, 1518, 281, 808, 456, 13, 51536, 51536, 407, 439, 729, 7150, 366, 1219, 16235, 12, 10792, 19618, 51712, 51712, 14642, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.13512382692503697, "compression_ratio": 1.570281124497992, "no_speech_prob": 1.5206102943920996e-05}, {"id": 1774, "seek": 510612, "start": 5129.5599999999995, "end": 5133.08, "text": " So all those methods are called gradient-free optimization", "tokens": [50364, 407, 456, 291, 362, 281, 764, 661, 7512, 13, 50474, 50474, 17837, 3801, 4439, 11, 1364, 337, 257, 1339, 11, 50626, 50626, 293, 2577, 498, 291, 2100, 760, 257, 1823, 420, 406, 420, 352, 493, 257, 1823, 11, 50932, 50932, 1310, 291, 393, 12972, 1803, 294, 1266, 11, 1360, 14341, 295, 1803, 51114, 51114, 293, 550, 6839, 264, 25314, 13, 51246, 51246, 400, 550, 5699, 1580, 1619, 11, 1954, 11, 286, 915, 257, 5458, 11, 51418, 51418, 5498, 1518, 281, 808, 456, 13, 51536, 51536, 407, 439, 729, 7150, 366, 1219, 16235, 12, 10792, 19618, 51712, 51712, 14642, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.13512382692503697, "compression_ratio": 1.570281124497992, "no_speech_prob": 1.5206102943920996e-05}, {"id": 1775, "seek": 510612, "start": 5133.08, "end": 5133.84, "text": " algorithms.", "tokens": [50364, 407, 456, 291, 362, 281, 764, 661, 7512, 13, 50474, 50474, 17837, 3801, 4439, 11, 1364, 337, 257, 1339, 11, 50626, 50626, 293, 2577, 498, 291, 2100, 760, 257, 1823, 420, 406, 420, 352, 493, 257, 1823, 11, 50932, 50932, 1310, 291, 393, 12972, 1803, 294, 1266, 11, 1360, 14341, 295, 1803, 51114, 51114, 293, 550, 6839, 264, 25314, 13, 51246, 51246, 400, 550, 5699, 1580, 1619, 11, 1954, 11, 286, 915, 257, 5458, 11, 51418, 51418, 5498, 1518, 281, 808, 456, 13, 51536, 51536, 407, 439, 729, 7150, 366, 1219, 16235, 12, 10792, 19618, 51712, 51712, 14642, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.13512382692503697, "compression_ratio": 1.570281124497992, "no_speech_prob": 1.5206102943920996e-05}, {"id": 1776, "seek": 513384, "start": 5133.84, "end": 5137.0, "text": " Sometimes they're called 0th order method.", "tokens": [50364, 4803, 436, 434, 1219, 1958, 392, 1668, 3170, 13, 50522, 50522, 1545, 1958, 392, 1668, 30, 50564, 50564, 1436, 700, 1668, 307, 562, 291, 393, 14722, 264, 13760, 13, 50696, 50696, 1958, 392, 1668, 307, 562, 291, 2644, 14722, 264, 13760, 13, 50798, 50798, 509, 393, 787, 14722, 264, 2445, 50866, 50866, 420, 483, 257, 2158, 337, 264, 2445, 13, 50962, 50962, 400, 550, 291, 362, 1150, 1668, 7150, 51041, 51041, 300, 14722, 406, 445, 264, 700, 13760, 11, 51124, 51124, 457, 611, 264, 1150, 13760, 13, 51212, 51212, 400, 436, 434, 611, 16235, 12, 6032, 570, 436, 51346, 51346, 643, 264, 700, 13760, 382, 731, 13, 51438, 51438, 583, 436, 393, 21341, 264, 1399, 538, 611, 15866, 51542, 51542, 264, 1150, 13760, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.2193671613931656, "compression_ratio": 2.1297071129707112, "no_speech_prob": 1.952436832652893e-05}, {"id": 1777, "seek": 513384, "start": 5137.0, "end": 5137.84, "text": " Why 0th order?", "tokens": [50364, 4803, 436, 434, 1219, 1958, 392, 1668, 3170, 13, 50522, 50522, 1545, 1958, 392, 1668, 30, 50564, 50564, 1436, 700, 1668, 307, 562, 291, 393, 14722, 264, 13760, 13, 50696, 50696, 1958, 392, 1668, 307, 562, 291, 2644, 14722, 264, 13760, 13, 50798, 50798, 509, 393, 787, 14722, 264, 2445, 50866, 50866, 420, 483, 257, 2158, 337, 264, 2445, 13, 50962, 50962, 400, 550, 291, 362, 1150, 1668, 7150, 51041, 51041, 300, 14722, 406, 445, 264, 700, 13760, 11, 51124, 51124, 457, 611, 264, 1150, 13760, 13, 51212, 51212, 400, 436, 434, 611, 16235, 12, 6032, 570, 436, 51346, 51346, 643, 264, 700, 13760, 382, 731, 13, 51438, 51438, 583, 436, 393, 21341, 264, 1399, 538, 611, 15866, 51542, 51542, 264, 1150, 13760, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.2193671613931656, "compression_ratio": 2.1297071129707112, "no_speech_prob": 1.952436832652893e-05}, {"id": 1778, "seek": 513384, "start": 5137.84, "end": 5140.4800000000005, "text": " Because first order is when you can compute the derivative.", "tokens": [50364, 4803, 436, 434, 1219, 1958, 392, 1668, 3170, 13, 50522, 50522, 1545, 1958, 392, 1668, 30, 50564, 50564, 1436, 700, 1668, 307, 562, 291, 393, 14722, 264, 13760, 13, 50696, 50696, 1958, 392, 1668, 307, 562, 291, 2644, 14722, 264, 13760, 13, 50798, 50798, 509, 393, 787, 14722, 264, 2445, 50866, 50866, 420, 483, 257, 2158, 337, 264, 2445, 13, 50962, 50962, 400, 550, 291, 362, 1150, 1668, 7150, 51041, 51041, 300, 14722, 406, 445, 264, 700, 13760, 11, 51124, 51124, 457, 611, 264, 1150, 13760, 13, 51212, 51212, 400, 436, 434, 611, 16235, 12, 6032, 570, 436, 51346, 51346, 643, 264, 700, 13760, 382, 731, 13, 51438, 51438, 583, 436, 393, 21341, 264, 1399, 538, 611, 15866, 51542, 51542, 264, 1150, 13760, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.2193671613931656, "compression_ratio": 2.1297071129707112, "no_speech_prob": 1.952436832652893e-05}, {"id": 1779, "seek": 513384, "start": 5140.4800000000005, "end": 5142.52, "text": " 0th order is when you cannot compute the derivative.", "tokens": [50364, 4803, 436, 434, 1219, 1958, 392, 1668, 3170, 13, 50522, 50522, 1545, 1958, 392, 1668, 30, 50564, 50564, 1436, 700, 1668, 307, 562, 291, 393, 14722, 264, 13760, 13, 50696, 50696, 1958, 392, 1668, 307, 562, 291, 2644, 14722, 264, 13760, 13, 50798, 50798, 509, 393, 787, 14722, 264, 2445, 50866, 50866, 420, 483, 257, 2158, 337, 264, 2445, 13, 50962, 50962, 400, 550, 291, 362, 1150, 1668, 7150, 51041, 51041, 300, 14722, 406, 445, 264, 700, 13760, 11, 51124, 51124, 457, 611, 264, 1150, 13760, 13, 51212, 51212, 400, 436, 434, 611, 16235, 12, 6032, 570, 436, 51346, 51346, 643, 264, 700, 13760, 382, 731, 13, 51438, 51438, 583, 436, 393, 21341, 264, 1399, 538, 611, 15866, 51542, 51542, 264, 1150, 13760, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.2193671613931656, "compression_ratio": 2.1297071129707112, "no_speech_prob": 1.952436832652893e-05}, {"id": 1780, "seek": 513384, "start": 5142.52, "end": 5143.88, "text": " You can only compute the function", "tokens": [50364, 4803, 436, 434, 1219, 1958, 392, 1668, 3170, 13, 50522, 50522, 1545, 1958, 392, 1668, 30, 50564, 50564, 1436, 700, 1668, 307, 562, 291, 393, 14722, 264, 13760, 13, 50696, 50696, 1958, 392, 1668, 307, 562, 291, 2644, 14722, 264, 13760, 13, 50798, 50798, 509, 393, 787, 14722, 264, 2445, 50866, 50866, 420, 483, 257, 2158, 337, 264, 2445, 13, 50962, 50962, 400, 550, 291, 362, 1150, 1668, 7150, 51041, 51041, 300, 14722, 406, 445, 264, 700, 13760, 11, 51124, 51124, 457, 611, 264, 1150, 13760, 13, 51212, 51212, 400, 436, 434, 611, 16235, 12, 6032, 570, 436, 51346, 51346, 643, 264, 700, 13760, 382, 731, 13, 51438, 51438, 583, 436, 393, 21341, 264, 1399, 538, 611, 15866, 51542, 51542, 264, 1150, 13760, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.2193671613931656, "compression_ratio": 2.1297071129707112, "no_speech_prob": 1.952436832652893e-05}, {"id": 1781, "seek": 513384, "start": 5143.88, "end": 5145.8, "text": " or get a value for the function.", "tokens": [50364, 4803, 436, 434, 1219, 1958, 392, 1668, 3170, 13, 50522, 50522, 1545, 1958, 392, 1668, 30, 50564, 50564, 1436, 700, 1668, 307, 562, 291, 393, 14722, 264, 13760, 13, 50696, 50696, 1958, 392, 1668, 307, 562, 291, 2644, 14722, 264, 13760, 13, 50798, 50798, 509, 393, 787, 14722, 264, 2445, 50866, 50866, 420, 483, 257, 2158, 337, 264, 2445, 13, 50962, 50962, 400, 550, 291, 362, 1150, 1668, 7150, 51041, 51041, 300, 14722, 406, 445, 264, 700, 13760, 11, 51124, 51124, 457, 611, 264, 1150, 13760, 13, 51212, 51212, 400, 436, 434, 611, 16235, 12, 6032, 570, 436, 51346, 51346, 643, 264, 700, 13760, 382, 731, 13, 51438, 51438, 583, 436, 393, 21341, 264, 1399, 538, 611, 15866, 51542, 51542, 264, 1150, 13760, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.2193671613931656, "compression_ratio": 2.1297071129707112, "no_speech_prob": 1.952436832652893e-05}, {"id": 1782, "seek": 513384, "start": 5145.8, "end": 5147.38, "text": " And then you have second order methods", "tokens": [50364, 4803, 436, 434, 1219, 1958, 392, 1668, 3170, 13, 50522, 50522, 1545, 1958, 392, 1668, 30, 50564, 50564, 1436, 700, 1668, 307, 562, 291, 393, 14722, 264, 13760, 13, 50696, 50696, 1958, 392, 1668, 307, 562, 291, 2644, 14722, 264, 13760, 13, 50798, 50798, 509, 393, 787, 14722, 264, 2445, 50866, 50866, 420, 483, 257, 2158, 337, 264, 2445, 13, 50962, 50962, 400, 550, 291, 362, 1150, 1668, 7150, 51041, 51041, 300, 14722, 406, 445, 264, 700, 13760, 11, 51124, 51124, 457, 611, 264, 1150, 13760, 13, 51212, 51212, 400, 436, 434, 611, 16235, 12, 6032, 570, 436, 51346, 51346, 643, 264, 700, 13760, 382, 731, 13, 51438, 51438, 583, 436, 393, 21341, 264, 1399, 538, 611, 15866, 51542, 51542, 264, 1150, 13760, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.2193671613931656, "compression_ratio": 2.1297071129707112, "no_speech_prob": 1.952436832652893e-05}, {"id": 1783, "seek": 513384, "start": 5147.38, "end": 5149.04, "text": " that compute not just the first derivative,", "tokens": [50364, 4803, 436, 434, 1219, 1958, 392, 1668, 3170, 13, 50522, 50522, 1545, 1958, 392, 1668, 30, 50564, 50564, 1436, 700, 1668, 307, 562, 291, 393, 14722, 264, 13760, 13, 50696, 50696, 1958, 392, 1668, 307, 562, 291, 2644, 14722, 264, 13760, 13, 50798, 50798, 509, 393, 787, 14722, 264, 2445, 50866, 50866, 420, 483, 257, 2158, 337, 264, 2445, 13, 50962, 50962, 400, 550, 291, 362, 1150, 1668, 7150, 51041, 51041, 300, 14722, 406, 445, 264, 700, 13760, 11, 51124, 51124, 457, 611, 264, 1150, 13760, 13, 51212, 51212, 400, 436, 434, 611, 16235, 12, 6032, 570, 436, 51346, 51346, 643, 264, 700, 13760, 382, 731, 13, 51438, 51438, 583, 436, 393, 21341, 264, 1399, 538, 611, 15866, 51542, 51542, 264, 1150, 13760, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.2193671613931656, "compression_ratio": 2.1297071129707112, "no_speech_prob": 1.952436832652893e-05}, {"id": 1784, "seek": 513384, "start": 5149.04, "end": 5150.8, "text": " but also the second derivative.", "tokens": [50364, 4803, 436, 434, 1219, 1958, 392, 1668, 3170, 13, 50522, 50522, 1545, 1958, 392, 1668, 30, 50564, 50564, 1436, 700, 1668, 307, 562, 291, 393, 14722, 264, 13760, 13, 50696, 50696, 1958, 392, 1668, 307, 562, 291, 2644, 14722, 264, 13760, 13, 50798, 50798, 509, 393, 787, 14722, 264, 2445, 50866, 50866, 420, 483, 257, 2158, 337, 264, 2445, 13, 50962, 50962, 400, 550, 291, 362, 1150, 1668, 7150, 51041, 51041, 300, 14722, 406, 445, 264, 700, 13760, 11, 51124, 51124, 457, 611, 264, 1150, 13760, 13, 51212, 51212, 400, 436, 434, 611, 16235, 12, 6032, 570, 436, 51346, 51346, 643, 264, 700, 13760, 382, 731, 13, 51438, 51438, 583, 436, 393, 21341, 264, 1399, 538, 611, 15866, 51542, 51542, 264, 1150, 13760, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.2193671613931656, "compression_ratio": 2.1297071129707112, "no_speech_prob": 1.952436832652893e-05}, {"id": 1785, "seek": 513384, "start": 5150.8, "end": 5153.4800000000005, "text": " And they're also gradient-based because they", "tokens": [50364, 4803, 436, 434, 1219, 1958, 392, 1668, 3170, 13, 50522, 50522, 1545, 1958, 392, 1668, 30, 50564, 50564, 1436, 700, 1668, 307, 562, 291, 393, 14722, 264, 13760, 13, 50696, 50696, 1958, 392, 1668, 307, 562, 291, 2644, 14722, 264, 13760, 13, 50798, 50798, 509, 393, 787, 14722, 264, 2445, 50866, 50866, 420, 483, 257, 2158, 337, 264, 2445, 13, 50962, 50962, 400, 550, 291, 362, 1150, 1668, 7150, 51041, 51041, 300, 14722, 406, 445, 264, 700, 13760, 11, 51124, 51124, 457, 611, 264, 1150, 13760, 13, 51212, 51212, 400, 436, 434, 611, 16235, 12, 6032, 570, 436, 51346, 51346, 643, 264, 700, 13760, 382, 731, 13, 51438, 51438, 583, 436, 393, 21341, 264, 1399, 538, 611, 15866, 51542, 51542, 264, 1150, 13760, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.2193671613931656, "compression_ratio": 2.1297071129707112, "no_speech_prob": 1.952436832652893e-05}, {"id": 1786, "seek": 513384, "start": 5153.4800000000005, "end": 5155.32, "text": " need the first derivative as well.", "tokens": [50364, 4803, 436, 434, 1219, 1958, 392, 1668, 3170, 13, 50522, 50522, 1545, 1958, 392, 1668, 30, 50564, 50564, 1436, 700, 1668, 307, 562, 291, 393, 14722, 264, 13760, 13, 50696, 50696, 1958, 392, 1668, 307, 562, 291, 2644, 14722, 264, 13760, 13, 50798, 50798, 509, 393, 787, 14722, 264, 2445, 50866, 50866, 420, 483, 257, 2158, 337, 264, 2445, 13, 50962, 50962, 400, 550, 291, 362, 1150, 1668, 7150, 51041, 51041, 300, 14722, 406, 445, 264, 700, 13760, 11, 51124, 51124, 457, 611, 264, 1150, 13760, 13, 51212, 51212, 400, 436, 434, 611, 16235, 12, 6032, 570, 436, 51346, 51346, 643, 264, 700, 13760, 382, 731, 13, 51438, 51438, 583, 436, 393, 21341, 264, 1399, 538, 611, 15866, 51542, 51542, 264, 1150, 13760, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.2193671613931656, "compression_ratio": 2.1297071129707112, "no_speech_prob": 1.952436832652893e-05}, {"id": 1787, "seek": 513384, "start": 5155.32, "end": 5157.400000000001, "text": " But they can accelerate the process by also computing", "tokens": [50364, 4803, 436, 434, 1219, 1958, 392, 1668, 3170, 13, 50522, 50522, 1545, 1958, 392, 1668, 30, 50564, 50564, 1436, 700, 1668, 307, 562, 291, 393, 14722, 264, 13760, 13, 50696, 50696, 1958, 392, 1668, 307, 562, 291, 2644, 14722, 264, 13760, 13, 50798, 50798, 509, 393, 787, 14722, 264, 2445, 50866, 50866, 420, 483, 257, 2158, 337, 264, 2445, 13, 50962, 50962, 400, 550, 291, 362, 1150, 1668, 7150, 51041, 51041, 300, 14722, 406, 445, 264, 700, 13760, 11, 51124, 51124, 457, 611, 264, 1150, 13760, 13, 51212, 51212, 400, 436, 434, 611, 16235, 12, 6032, 570, 436, 51346, 51346, 643, 264, 700, 13760, 382, 731, 13, 51438, 51438, 583, 436, 393, 21341, 264, 1399, 538, 611, 15866, 51542, 51542, 264, 1150, 13760, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.2193671613931656, "compression_ratio": 2.1297071129707112, "no_speech_prob": 1.952436832652893e-05}, {"id": 1788, "seek": 513384, "start": 5157.400000000001, "end": 5158.4800000000005, "text": " the second derivative.", "tokens": [50364, 4803, 436, 434, 1219, 1958, 392, 1668, 3170, 13, 50522, 50522, 1545, 1958, 392, 1668, 30, 50564, 50564, 1436, 700, 1668, 307, 562, 291, 393, 14722, 264, 13760, 13, 50696, 50696, 1958, 392, 1668, 307, 562, 291, 2644, 14722, 264, 13760, 13, 50798, 50798, 509, 393, 787, 14722, 264, 2445, 50866, 50866, 420, 483, 257, 2158, 337, 264, 2445, 13, 50962, 50962, 400, 550, 291, 362, 1150, 1668, 7150, 51041, 51041, 300, 14722, 406, 445, 264, 700, 13760, 11, 51124, 51124, 457, 611, 264, 1150, 13760, 13, 51212, 51212, 400, 436, 434, 611, 16235, 12, 6032, 570, 436, 51346, 51346, 643, 264, 700, 13760, 382, 731, 13, 51438, 51438, 583, 436, 393, 21341, 264, 1399, 538, 611, 15866, 51542, 51542, 264, 1150, 13760, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.2193671613931656, "compression_ratio": 2.1297071129707112, "no_speech_prob": 1.952436832652893e-05}, {"id": 1789, "seek": 515848, "start": 5158.48, "end": 5164.839999999999, "text": " And Adam is a very simplified form of second order method.", "tokens": [50364, 400, 7938, 307, 257, 588, 26335, 1254, 295, 1150, 1668, 3170, 13, 50682, 50682, 467, 311, 406, 257, 1150, 1668, 3170, 11, 457, 309, 50784, 50784, 575, 257, 12075, 295, 1150, 1668, 13, 50886, 50886, 3996, 12075, 295, 1150, 1668, 3170, 50956, 50956, 307, 437, 311, 1219, 45064, 16235, 13, 51106, 51106, 821, 311, 1071, 1508, 295, 3170, 1219, 20954, 12, 18278, 1756, 7150, 11, 51228, 51228, 597, 366, 611, 1228, 37638, 1589, 11, 51394, 51394, 498, 291, 528, 11, 281, 21341, 13, 51512, 51512, 5126, 295, 729, 366, 406, 767, 8496, 337, 18161, 2533, 51656, 51656, 3097, 11, 457, 456, 366, 512, 6422, 300, 366, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18893731606973185, "compression_ratio": 1.763265306122449, "no_speech_prob": 9.817775207920931e-06}, {"id": 1790, "seek": 515848, "start": 5164.839999999999, "end": 5166.879999999999, "text": " It's not a second order method, but it", "tokens": [50364, 400, 7938, 307, 257, 588, 26335, 1254, 295, 1150, 1668, 3170, 13, 50682, 50682, 467, 311, 406, 257, 1150, 1668, 3170, 11, 457, 309, 50784, 50784, 575, 257, 12075, 295, 1150, 1668, 13, 50886, 50886, 3996, 12075, 295, 1150, 1668, 3170, 50956, 50956, 307, 437, 311, 1219, 45064, 16235, 13, 51106, 51106, 821, 311, 1071, 1508, 295, 3170, 1219, 20954, 12, 18278, 1756, 7150, 11, 51228, 51228, 597, 366, 611, 1228, 37638, 1589, 11, 51394, 51394, 498, 291, 528, 11, 281, 21341, 13, 51512, 51512, 5126, 295, 729, 366, 406, 767, 8496, 337, 18161, 2533, 51656, 51656, 3097, 11, 457, 456, 366, 512, 6422, 300, 366, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18893731606973185, "compression_ratio": 1.763265306122449, "no_speech_prob": 9.817775207920931e-06}, {"id": 1791, "seek": 515848, "start": 5166.879999999999, "end": 5168.919999999999, "text": " has a hint of second order.", "tokens": [50364, 400, 7938, 307, 257, 588, 26335, 1254, 295, 1150, 1668, 3170, 13, 50682, 50682, 467, 311, 406, 257, 1150, 1668, 3170, 11, 457, 309, 50784, 50784, 575, 257, 12075, 295, 1150, 1668, 13, 50886, 50886, 3996, 12075, 295, 1150, 1668, 3170, 50956, 50956, 307, 437, 311, 1219, 45064, 16235, 13, 51106, 51106, 821, 311, 1071, 1508, 295, 3170, 1219, 20954, 12, 18278, 1756, 7150, 11, 51228, 51228, 597, 366, 611, 1228, 37638, 1589, 11, 51394, 51394, 498, 291, 528, 11, 281, 21341, 13, 51512, 51512, 5126, 295, 729, 366, 406, 767, 8496, 337, 18161, 2533, 51656, 51656, 3097, 11, 457, 456, 366, 512, 6422, 300, 366, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18893731606973185, "compression_ratio": 1.763265306122449, "no_speech_prob": 9.817775207920931e-06}, {"id": 1792, "seek": 515848, "start": 5168.919999999999, "end": 5170.32, "text": " Another hint of second order method", "tokens": [50364, 400, 7938, 307, 257, 588, 26335, 1254, 295, 1150, 1668, 3170, 13, 50682, 50682, 467, 311, 406, 257, 1150, 1668, 3170, 11, 457, 309, 50784, 50784, 575, 257, 12075, 295, 1150, 1668, 13, 50886, 50886, 3996, 12075, 295, 1150, 1668, 3170, 50956, 50956, 307, 437, 311, 1219, 45064, 16235, 13, 51106, 51106, 821, 311, 1071, 1508, 295, 3170, 1219, 20954, 12, 18278, 1756, 7150, 11, 51228, 51228, 597, 366, 611, 1228, 37638, 1589, 11, 51394, 51394, 498, 291, 528, 11, 281, 21341, 13, 51512, 51512, 5126, 295, 729, 366, 406, 767, 8496, 337, 18161, 2533, 51656, 51656, 3097, 11, 457, 456, 366, 512, 6422, 300, 366, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18893731606973185, "compression_ratio": 1.763265306122449, "no_speech_prob": 9.817775207920931e-06}, {"id": 1793, "seek": 515848, "start": 5170.32, "end": 5173.32, "text": " is what's called conjugate gradient.", "tokens": [50364, 400, 7938, 307, 257, 588, 26335, 1254, 295, 1150, 1668, 3170, 13, 50682, 50682, 467, 311, 406, 257, 1150, 1668, 3170, 11, 457, 309, 50784, 50784, 575, 257, 12075, 295, 1150, 1668, 13, 50886, 50886, 3996, 12075, 295, 1150, 1668, 3170, 50956, 50956, 307, 437, 311, 1219, 45064, 16235, 13, 51106, 51106, 821, 311, 1071, 1508, 295, 3170, 1219, 20954, 12, 18278, 1756, 7150, 11, 51228, 51228, 597, 366, 611, 1228, 37638, 1589, 11, 51394, 51394, 498, 291, 528, 11, 281, 21341, 13, 51512, 51512, 5126, 295, 729, 366, 406, 767, 8496, 337, 18161, 2533, 51656, 51656, 3097, 11, 457, 456, 366, 512, 6422, 300, 366, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18893731606973185, "compression_ratio": 1.763265306122449, "no_speech_prob": 9.817775207920931e-06}, {"id": 1794, "seek": 515848, "start": 5173.32, "end": 5175.759999999999, "text": " There's another class of method called quasi-Newton methods,", "tokens": [50364, 400, 7938, 307, 257, 588, 26335, 1254, 295, 1150, 1668, 3170, 13, 50682, 50682, 467, 311, 406, 257, 1150, 1668, 3170, 11, 457, 309, 50784, 50784, 575, 257, 12075, 295, 1150, 1668, 13, 50886, 50886, 3996, 12075, 295, 1150, 1668, 3170, 50956, 50956, 307, 437, 311, 1219, 45064, 16235, 13, 51106, 51106, 821, 311, 1071, 1508, 295, 3170, 1219, 20954, 12, 18278, 1756, 7150, 11, 51228, 51228, 597, 366, 611, 1228, 37638, 1589, 11, 51394, 51394, 498, 291, 528, 11, 281, 21341, 13, 51512, 51512, 5126, 295, 729, 366, 406, 767, 8496, 337, 18161, 2533, 51656, 51656, 3097, 11, 457, 456, 366, 512, 6422, 300, 366, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18893731606973185, "compression_ratio": 1.763265306122449, "no_speech_prob": 9.817775207920931e-06}, {"id": 1795, "seek": 515848, "start": 5175.759999999999, "end": 5179.08, "text": " which are also using curvature information,", "tokens": [50364, 400, 7938, 307, 257, 588, 26335, 1254, 295, 1150, 1668, 3170, 13, 50682, 50682, 467, 311, 406, 257, 1150, 1668, 3170, 11, 457, 309, 50784, 50784, 575, 257, 12075, 295, 1150, 1668, 13, 50886, 50886, 3996, 12075, 295, 1150, 1668, 3170, 50956, 50956, 307, 437, 311, 1219, 45064, 16235, 13, 51106, 51106, 821, 311, 1071, 1508, 295, 3170, 1219, 20954, 12, 18278, 1756, 7150, 11, 51228, 51228, 597, 366, 611, 1228, 37638, 1589, 11, 51394, 51394, 498, 291, 528, 11, 281, 21341, 13, 51512, 51512, 5126, 295, 729, 366, 406, 767, 8496, 337, 18161, 2533, 51656, 51656, 3097, 11, 457, 456, 366, 512, 6422, 300, 366, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18893731606973185, "compression_ratio": 1.763265306122449, "no_speech_prob": 9.817775207920931e-06}, {"id": 1796, "seek": 515848, "start": 5179.08, "end": 5181.44, "text": " if you want, to accelerate.", "tokens": [50364, 400, 7938, 307, 257, 588, 26335, 1254, 295, 1150, 1668, 3170, 13, 50682, 50682, 467, 311, 406, 257, 1150, 1668, 3170, 11, 457, 309, 50784, 50784, 575, 257, 12075, 295, 1150, 1668, 13, 50886, 50886, 3996, 12075, 295, 1150, 1668, 3170, 50956, 50956, 307, 437, 311, 1219, 45064, 16235, 13, 51106, 51106, 821, 311, 1071, 1508, 295, 3170, 1219, 20954, 12, 18278, 1756, 7150, 11, 51228, 51228, 597, 366, 611, 1228, 37638, 1589, 11, 51394, 51394, 498, 291, 528, 11, 281, 21341, 13, 51512, 51512, 5126, 295, 729, 366, 406, 767, 8496, 337, 18161, 2533, 51656, 51656, 3097, 11, 457, 456, 366, 512, 6422, 300, 366, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18893731606973185, "compression_ratio": 1.763265306122449, "no_speech_prob": 9.817775207920931e-06}, {"id": 1797, "seek": 515848, "start": 5181.44, "end": 5184.32, "text": " Many of those are not actually practical for neural net", "tokens": [50364, 400, 7938, 307, 257, 588, 26335, 1254, 295, 1150, 1668, 3170, 13, 50682, 50682, 467, 311, 406, 257, 1150, 1668, 3170, 11, 457, 309, 50784, 50784, 575, 257, 12075, 295, 1150, 1668, 13, 50886, 50886, 3996, 12075, 295, 1150, 1668, 3170, 50956, 50956, 307, 437, 311, 1219, 45064, 16235, 13, 51106, 51106, 821, 311, 1071, 1508, 295, 3170, 1219, 20954, 12, 18278, 1756, 7150, 11, 51228, 51228, 597, 366, 611, 1228, 37638, 1589, 11, 51394, 51394, 498, 291, 528, 11, 281, 21341, 13, 51512, 51512, 5126, 295, 729, 366, 406, 767, 8496, 337, 18161, 2533, 51656, 51656, 3097, 11, 457, 456, 366, 512, 6422, 300, 366, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18893731606973185, "compression_ratio": 1.763265306122449, "no_speech_prob": 9.817775207920931e-06}, {"id": 1798, "seek": 515848, "start": 5184.32, "end": 5188.2, "text": " training, but there are some forms that are.", "tokens": [50364, 400, 7938, 307, 257, 588, 26335, 1254, 295, 1150, 1668, 3170, 13, 50682, 50682, 467, 311, 406, 257, 1150, 1668, 3170, 11, 457, 309, 50784, 50784, 575, 257, 12075, 295, 1150, 1668, 13, 50886, 50886, 3996, 12075, 295, 1150, 1668, 3170, 50956, 50956, 307, 437, 311, 1219, 45064, 16235, 13, 51106, 51106, 821, 311, 1071, 1508, 295, 3170, 1219, 20954, 12, 18278, 1756, 7150, 11, 51228, 51228, 597, 366, 611, 1228, 37638, 1589, 11, 51394, 51394, 498, 291, 528, 11, 281, 21341, 13, 51512, 51512, 5126, 295, 729, 366, 406, 767, 8496, 337, 18161, 2533, 51656, 51656, 3097, 11, 457, 456, 366, 512, 6422, 300, 366, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.18893731606973185, "compression_ratio": 1.763265306122449, "no_speech_prob": 9.817775207920931e-06}, {"id": 1799, "seek": 518820, "start": 5188.2, "end": 5192.04, "text": " If you are interested in 0th order optimization,", "tokens": [50364, 759, 291, 366, 3102, 294, 1958, 392, 1668, 19618, 11, 50556, 50556, 456, 307, 257, 6405, 300, 307, 767, 7126, 538, 11, 50738, 50738, 309, 311, 364, 1269, 4009, 6405, 11, 597, 31129, 412, 4384, 50890, 50890, 5774, 10303, 294, 8380, 538, 364, 3793, 1219, 48075, 314, 3498, 1459, 13, 51080, 51080, 583, 309, 311, 534, 257, 1768, 4630, 13, 51164, 51164, 821, 311, 257, 688, 295, 45627, 281, 309, 13, 51239, 51239, 467, 311, 1219, 7344, 38, 6206, 13, 51312, 51312, 400, 309, 704, 17988, 257, 588, 2416, 1230, 51410, 51410, 295, 819, 19618, 14642, 51504, 51504, 300, 360, 406, 6552, 300, 291, 362, 2105, 281, 264, 16235, 13, 51726, 51726, 821, 366, 12462, 14642, 420, 27567, 7150, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15990148714887417, "compression_ratio": 1.6143790849673203, "no_speech_prob": 3.168474722770043e-05}, {"id": 1800, "seek": 518820, "start": 5192.04, "end": 5195.679999999999, "text": " there is a library that is actually produced by,", "tokens": [50364, 759, 291, 366, 3102, 294, 1958, 392, 1668, 19618, 11, 50556, 50556, 456, 307, 257, 6405, 300, 307, 767, 7126, 538, 11, 50738, 50738, 309, 311, 364, 1269, 4009, 6405, 11, 597, 31129, 412, 4384, 50890, 50890, 5774, 10303, 294, 8380, 538, 364, 3793, 1219, 48075, 314, 3498, 1459, 13, 51080, 51080, 583, 309, 311, 534, 257, 1768, 4630, 13, 51164, 51164, 821, 311, 257, 688, 295, 45627, 281, 309, 13, 51239, 51239, 467, 311, 1219, 7344, 38, 6206, 13, 51312, 51312, 400, 309, 704, 17988, 257, 588, 2416, 1230, 51410, 51410, 295, 819, 19618, 14642, 51504, 51504, 300, 360, 406, 6552, 300, 291, 362, 2105, 281, 264, 16235, 13, 51726, 51726, 821, 366, 12462, 14642, 420, 27567, 7150, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15990148714887417, "compression_ratio": 1.6143790849673203, "no_speech_prob": 3.168474722770043e-05}, {"id": 1801, "seek": 518820, "start": 5195.679999999999, "end": 5198.72, "text": " it's an open source library, which originated at Facebook", "tokens": [50364, 759, 291, 366, 3102, 294, 1958, 392, 1668, 19618, 11, 50556, 50556, 456, 307, 257, 6405, 300, 307, 767, 7126, 538, 11, 50738, 50738, 309, 311, 364, 1269, 4009, 6405, 11, 597, 31129, 412, 4384, 50890, 50890, 5774, 10303, 294, 8380, 538, 364, 3793, 1219, 48075, 314, 3498, 1459, 13, 51080, 51080, 583, 309, 311, 534, 257, 1768, 4630, 13, 51164, 51164, 821, 311, 257, 688, 295, 45627, 281, 309, 13, 51239, 51239, 467, 311, 1219, 7344, 38, 6206, 13, 51312, 51312, 400, 309, 704, 17988, 257, 588, 2416, 1230, 51410, 51410, 295, 819, 19618, 14642, 51504, 51504, 300, 360, 406, 6552, 300, 291, 362, 2105, 281, 264, 16235, 13, 51726, 51726, 821, 366, 12462, 14642, 420, 27567, 7150, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15990148714887417, "compression_ratio": 1.6143790849673203, "no_speech_prob": 3.168474722770043e-05}, {"id": 1802, "seek": 518820, "start": 5198.72, "end": 5202.5199999999995, "text": " Air Research in Paris by an author called Olivier Teteau.", "tokens": [50364, 759, 291, 366, 3102, 294, 1958, 392, 1668, 19618, 11, 50556, 50556, 456, 307, 257, 6405, 300, 307, 767, 7126, 538, 11, 50738, 50738, 309, 311, 364, 1269, 4009, 6405, 11, 597, 31129, 412, 4384, 50890, 50890, 5774, 10303, 294, 8380, 538, 364, 3793, 1219, 48075, 314, 3498, 1459, 13, 51080, 51080, 583, 309, 311, 534, 257, 1768, 4630, 13, 51164, 51164, 821, 311, 257, 688, 295, 45627, 281, 309, 13, 51239, 51239, 467, 311, 1219, 7344, 38, 6206, 13, 51312, 51312, 400, 309, 704, 17988, 257, 588, 2416, 1230, 51410, 51410, 295, 819, 19618, 14642, 51504, 51504, 300, 360, 406, 6552, 300, 291, 362, 2105, 281, 264, 16235, 13, 51726, 51726, 821, 366, 12462, 14642, 420, 27567, 7150, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15990148714887417, "compression_ratio": 1.6143790849673203, "no_speech_prob": 3.168474722770043e-05}, {"id": 1803, "seek": 518820, "start": 5202.5199999999995, "end": 5204.2, "text": " But it's really a community effort.", "tokens": [50364, 759, 291, 366, 3102, 294, 1958, 392, 1668, 19618, 11, 50556, 50556, 456, 307, 257, 6405, 300, 307, 767, 7126, 538, 11, 50738, 50738, 309, 311, 364, 1269, 4009, 6405, 11, 597, 31129, 412, 4384, 50890, 50890, 5774, 10303, 294, 8380, 538, 364, 3793, 1219, 48075, 314, 3498, 1459, 13, 51080, 51080, 583, 309, 311, 534, 257, 1768, 4630, 13, 51164, 51164, 821, 311, 257, 688, 295, 45627, 281, 309, 13, 51239, 51239, 467, 311, 1219, 7344, 38, 6206, 13, 51312, 51312, 400, 309, 704, 17988, 257, 588, 2416, 1230, 51410, 51410, 295, 819, 19618, 14642, 51504, 51504, 300, 360, 406, 6552, 300, 291, 362, 2105, 281, 264, 16235, 13, 51726, 51726, 821, 366, 12462, 14642, 420, 27567, 7150, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15990148714887417, "compression_ratio": 1.6143790849673203, "no_speech_prob": 3.168474722770043e-05}, {"id": 1804, "seek": 518820, "start": 5204.2, "end": 5205.7, "text": " There's a lot of contributors to it.", "tokens": [50364, 759, 291, 366, 3102, 294, 1958, 392, 1668, 19618, 11, 50556, 50556, 456, 307, 257, 6405, 300, 307, 767, 7126, 538, 11, 50738, 50738, 309, 311, 364, 1269, 4009, 6405, 11, 597, 31129, 412, 4384, 50890, 50890, 5774, 10303, 294, 8380, 538, 364, 3793, 1219, 48075, 314, 3498, 1459, 13, 51080, 51080, 583, 309, 311, 534, 257, 1768, 4630, 13, 51164, 51164, 821, 311, 257, 688, 295, 45627, 281, 309, 13, 51239, 51239, 467, 311, 1219, 7344, 38, 6206, 13, 51312, 51312, 400, 309, 704, 17988, 257, 588, 2416, 1230, 51410, 51410, 295, 819, 19618, 14642, 51504, 51504, 300, 360, 406, 6552, 300, 291, 362, 2105, 281, 264, 16235, 13, 51726, 51726, 821, 366, 12462, 14642, 420, 27567, 7150, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15990148714887417, "compression_ratio": 1.6143790849673203, "no_speech_prob": 3.168474722770043e-05}, {"id": 1805, "seek": 518820, "start": 5205.7, "end": 5207.16, "text": " It's called NeverGrad.", "tokens": [50364, 759, 291, 366, 3102, 294, 1958, 392, 1668, 19618, 11, 50556, 50556, 456, 307, 257, 6405, 300, 307, 767, 7126, 538, 11, 50738, 50738, 309, 311, 364, 1269, 4009, 6405, 11, 597, 31129, 412, 4384, 50890, 50890, 5774, 10303, 294, 8380, 538, 364, 3793, 1219, 48075, 314, 3498, 1459, 13, 51080, 51080, 583, 309, 311, 534, 257, 1768, 4630, 13, 51164, 51164, 821, 311, 257, 688, 295, 45627, 281, 309, 13, 51239, 51239, 467, 311, 1219, 7344, 38, 6206, 13, 51312, 51312, 400, 309, 704, 17988, 257, 588, 2416, 1230, 51410, 51410, 295, 819, 19618, 14642, 51504, 51504, 300, 360, 406, 6552, 300, 291, 362, 2105, 281, 264, 16235, 13, 51726, 51726, 821, 366, 12462, 14642, 420, 27567, 7150, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15990148714887417, "compression_ratio": 1.6143790849673203, "no_speech_prob": 3.168474722770043e-05}, {"id": 1806, "seek": 518820, "start": 5207.16, "end": 5209.12, "text": " And it implements a very large number", "tokens": [50364, 759, 291, 366, 3102, 294, 1958, 392, 1668, 19618, 11, 50556, 50556, 456, 307, 257, 6405, 300, 307, 767, 7126, 538, 11, 50738, 50738, 309, 311, 364, 1269, 4009, 6405, 11, 597, 31129, 412, 4384, 50890, 50890, 5774, 10303, 294, 8380, 538, 364, 3793, 1219, 48075, 314, 3498, 1459, 13, 51080, 51080, 583, 309, 311, 534, 257, 1768, 4630, 13, 51164, 51164, 821, 311, 257, 688, 295, 45627, 281, 309, 13, 51239, 51239, 467, 311, 1219, 7344, 38, 6206, 13, 51312, 51312, 400, 309, 704, 17988, 257, 588, 2416, 1230, 51410, 51410, 295, 819, 19618, 14642, 51504, 51504, 300, 360, 406, 6552, 300, 291, 362, 2105, 281, 264, 16235, 13, 51726, 51726, 821, 366, 12462, 14642, 420, 27567, 7150, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15990148714887417, "compression_ratio": 1.6143790849673203, "no_speech_prob": 3.168474722770043e-05}, {"id": 1807, "seek": 518820, "start": 5209.12, "end": 5211.0, "text": " of different optimization algorithms", "tokens": [50364, 759, 291, 366, 3102, 294, 1958, 392, 1668, 19618, 11, 50556, 50556, 456, 307, 257, 6405, 300, 307, 767, 7126, 538, 11, 50738, 50738, 309, 311, 364, 1269, 4009, 6405, 11, 597, 31129, 412, 4384, 50890, 50890, 5774, 10303, 294, 8380, 538, 364, 3793, 1219, 48075, 314, 3498, 1459, 13, 51080, 51080, 583, 309, 311, 534, 257, 1768, 4630, 13, 51164, 51164, 821, 311, 257, 688, 295, 45627, 281, 309, 13, 51239, 51239, 467, 311, 1219, 7344, 38, 6206, 13, 51312, 51312, 400, 309, 704, 17988, 257, 588, 2416, 1230, 51410, 51410, 295, 819, 19618, 14642, 51504, 51504, 300, 360, 406, 6552, 300, 291, 362, 2105, 281, 264, 16235, 13, 51726, 51726, 821, 366, 12462, 14642, 420, 27567, 7150, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15990148714887417, "compression_ratio": 1.6143790849673203, "no_speech_prob": 3.168474722770043e-05}, {"id": 1808, "seek": 518820, "start": 5211.0, "end": 5215.44, "text": " that do not assume that you have access to the gradient.", "tokens": [50364, 759, 291, 366, 3102, 294, 1958, 392, 1668, 19618, 11, 50556, 50556, 456, 307, 257, 6405, 300, 307, 767, 7126, 538, 11, 50738, 50738, 309, 311, 364, 1269, 4009, 6405, 11, 597, 31129, 412, 4384, 50890, 50890, 5774, 10303, 294, 8380, 538, 364, 3793, 1219, 48075, 314, 3498, 1459, 13, 51080, 51080, 583, 309, 311, 534, 257, 1768, 4630, 13, 51164, 51164, 821, 311, 257, 688, 295, 45627, 281, 309, 13, 51239, 51239, 467, 311, 1219, 7344, 38, 6206, 13, 51312, 51312, 400, 309, 704, 17988, 257, 588, 2416, 1230, 51410, 51410, 295, 819, 19618, 14642, 51504, 51504, 300, 360, 406, 6552, 300, 291, 362, 2105, 281, 264, 16235, 13, 51726, 51726, 821, 366, 12462, 14642, 420, 27567, 7150, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15990148714887417, "compression_ratio": 1.6143790849673203, "no_speech_prob": 3.168474722770043e-05}, {"id": 1809, "seek": 518820, "start": 5215.44, "end": 5218.16, "text": " There are genetic algorithms or evolutionary methods", "tokens": [50364, 759, 291, 366, 3102, 294, 1958, 392, 1668, 19618, 11, 50556, 50556, 456, 307, 257, 6405, 300, 307, 767, 7126, 538, 11, 50738, 50738, 309, 311, 364, 1269, 4009, 6405, 11, 597, 31129, 412, 4384, 50890, 50890, 5774, 10303, 294, 8380, 538, 364, 3793, 1219, 48075, 314, 3498, 1459, 13, 51080, 51080, 583, 309, 311, 534, 257, 1768, 4630, 13, 51164, 51164, 821, 311, 257, 688, 295, 45627, 281, 309, 13, 51239, 51239, 467, 311, 1219, 7344, 38, 6206, 13, 51312, 51312, 400, 309, 704, 17988, 257, 588, 2416, 1230, 51410, 51410, 295, 819, 19618, 14642, 51504, 51504, 300, 360, 406, 6552, 300, 291, 362, 2105, 281, 264, 16235, 13, 51726, 51726, 821, 366, 12462, 14642, 420, 27567, 7150, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15990148714887417, "compression_ratio": 1.6143790849673203, "no_speech_prob": 3.168474722770043e-05}, {"id": 1810, "seek": 521816, "start": 5218.16, "end": 5221.4, "text": " that are particle swarm optimization.", "tokens": [50364, 300, 366, 12359, 49839, 19618, 13, 50526, 50526, 821, 366, 40468, 399, 7150, 13, 50652, 50652, 821, 311, 439, 3685, 295, 11733, 13, 50720, 50720, 286, 914, 11, 456, 311, 257, 1379, 19746, 295, 729, 721, 13, 50830, 50830, 400, 729, 2171, 366, 36541, 17079, 712, 13, 50924, 50924, 509, 362, 281, 764, 552, 570, 291, 500, 380, 458, 264, 2063, 2445, 13, 51090, 51090, 407, 257, 588, 2689, 2590, 689, 291, 362, 281, 764, 729, 721, 51248, 51248, 307, 29280, 2539, 13, 51318, 51318, 407, 29280, 2539, 307, 1936, 51470, 51470, 257, 2590, 689, 291, 980, 264, 1185, 11, 51646, 51646, 291, 500, 380, 980, 264, 1185, 264, 3006, 1867, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.18171147642464475, "compression_ratio": 1.8473895582329318, "no_speech_prob": 1.0952358934446238e-05}, {"id": 1811, "seek": 521816, "start": 5221.4, "end": 5223.92, "text": " There are perturbation methods.", "tokens": [50364, 300, 366, 12359, 49839, 19618, 13, 50526, 50526, 821, 366, 40468, 399, 7150, 13, 50652, 50652, 821, 311, 439, 3685, 295, 11733, 13, 50720, 50720, 286, 914, 11, 456, 311, 257, 1379, 19746, 295, 729, 721, 13, 50830, 50830, 400, 729, 2171, 366, 36541, 17079, 712, 13, 50924, 50924, 509, 362, 281, 764, 552, 570, 291, 500, 380, 458, 264, 2063, 2445, 13, 51090, 51090, 407, 257, 588, 2689, 2590, 689, 291, 362, 281, 764, 729, 721, 51248, 51248, 307, 29280, 2539, 13, 51318, 51318, 407, 29280, 2539, 307, 1936, 51470, 51470, 257, 2590, 689, 291, 980, 264, 1185, 11, 51646, 51646, 291, 500, 380, 980, 264, 1185, 264, 3006, 1867, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.18171147642464475, "compression_ratio": 1.8473895582329318, "no_speech_prob": 1.0952358934446238e-05}, {"id": 1812, "seek": 521816, "start": 5223.92, "end": 5225.28, "text": " There's all kinds of tricks.", "tokens": [50364, 300, 366, 12359, 49839, 19618, 13, 50526, 50526, 821, 366, 40468, 399, 7150, 13, 50652, 50652, 821, 311, 439, 3685, 295, 11733, 13, 50720, 50720, 286, 914, 11, 456, 311, 257, 1379, 19746, 295, 729, 721, 13, 50830, 50830, 400, 729, 2171, 366, 36541, 17079, 712, 13, 50924, 50924, 509, 362, 281, 764, 552, 570, 291, 500, 380, 458, 264, 2063, 2445, 13, 51090, 51090, 407, 257, 588, 2689, 2590, 689, 291, 362, 281, 764, 729, 721, 51248, 51248, 307, 29280, 2539, 13, 51318, 51318, 407, 29280, 2539, 307, 1936, 51470, 51470, 257, 2590, 689, 291, 980, 264, 1185, 11, 51646, 51646, 291, 500, 380, 980, 264, 1185, 264, 3006, 1867, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.18171147642464475, "compression_ratio": 1.8473895582329318, "no_speech_prob": 1.0952358934446238e-05}, {"id": 1813, "seek": 521816, "start": 5225.28, "end": 5227.48, "text": " I mean, there's a whole catalog of those things.", "tokens": [50364, 300, 366, 12359, 49839, 19618, 13, 50526, 50526, 821, 366, 40468, 399, 7150, 13, 50652, 50652, 821, 311, 439, 3685, 295, 11733, 13, 50720, 50720, 286, 914, 11, 456, 311, 257, 1379, 19746, 295, 729, 721, 13, 50830, 50830, 400, 729, 2171, 366, 36541, 17079, 712, 13, 50924, 50924, 509, 362, 281, 764, 552, 570, 291, 500, 380, 458, 264, 2063, 2445, 13, 51090, 51090, 407, 257, 588, 2689, 2590, 689, 291, 362, 281, 764, 729, 721, 51248, 51248, 307, 29280, 2539, 13, 51318, 51318, 407, 29280, 2539, 307, 1936, 51470, 51470, 257, 2590, 689, 291, 980, 264, 1185, 11, 51646, 51646, 291, 500, 380, 980, 264, 1185, 264, 3006, 1867, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.18171147642464475, "compression_ratio": 1.8473895582329318, "no_speech_prob": 1.0952358934446238e-05}, {"id": 1814, "seek": 521816, "start": 5227.48, "end": 5229.36, "text": " And those sometimes are unavoidable.", "tokens": [50364, 300, 366, 12359, 49839, 19618, 13, 50526, 50526, 821, 366, 40468, 399, 7150, 13, 50652, 50652, 821, 311, 439, 3685, 295, 11733, 13, 50720, 50720, 286, 914, 11, 456, 311, 257, 1379, 19746, 295, 729, 721, 13, 50830, 50830, 400, 729, 2171, 366, 36541, 17079, 712, 13, 50924, 50924, 509, 362, 281, 764, 552, 570, 291, 500, 380, 458, 264, 2063, 2445, 13, 51090, 51090, 407, 257, 588, 2689, 2590, 689, 291, 362, 281, 764, 729, 721, 51248, 51248, 307, 29280, 2539, 13, 51318, 51318, 407, 29280, 2539, 307, 1936, 51470, 51470, 257, 2590, 689, 291, 980, 264, 1185, 11, 51646, 51646, 291, 500, 380, 980, 264, 1185, 264, 3006, 1867, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.18171147642464475, "compression_ratio": 1.8473895582329318, "no_speech_prob": 1.0952358934446238e-05}, {"id": 1815, "seek": 521816, "start": 5229.36, "end": 5232.68, "text": " You have to use them because you don't know the cost function.", "tokens": [50364, 300, 366, 12359, 49839, 19618, 13, 50526, 50526, 821, 366, 40468, 399, 7150, 13, 50652, 50652, 821, 311, 439, 3685, 295, 11733, 13, 50720, 50720, 286, 914, 11, 456, 311, 257, 1379, 19746, 295, 729, 721, 13, 50830, 50830, 400, 729, 2171, 366, 36541, 17079, 712, 13, 50924, 50924, 509, 362, 281, 764, 552, 570, 291, 500, 380, 458, 264, 2063, 2445, 13, 51090, 51090, 407, 257, 588, 2689, 2590, 689, 291, 362, 281, 764, 729, 721, 51248, 51248, 307, 29280, 2539, 13, 51318, 51318, 407, 29280, 2539, 307, 1936, 51470, 51470, 257, 2590, 689, 291, 980, 264, 1185, 11, 51646, 51646, 291, 500, 380, 980, 264, 1185, 264, 3006, 1867, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.18171147642464475, "compression_ratio": 1.8473895582329318, "no_speech_prob": 1.0952358934446238e-05}, {"id": 1816, "seek": 521816, "start": 5232.68, "end": 5235.84, "text": " So a very common situation where you have to use those things", "tokens": [50364, 300, 366, 12359, 49839, 19618, 13, 50526, 50526, 821, 366, 40468, 399, 7150, 13, 50652, 50652, 821, 311, 439, 3685, 295, 11733, 13, 50720, 50720, 286, 914, 11, 456, 311, 257, 1379, 19746, 295, 729, 721, 13, 50830, 50830, 400, 729, 2171, 366, 36541, 17079, 712, 13, 50924, 50924, 509, 362, 281, 764, 552, 570, 291, 500, 380, 458, 264, 2063, 2445, 13, 51090, 51090, 407, 257, 588, 2689, 2590, 689, 291, 362, 281, 764, 729, 721, 51248, 51248, 307, 29280, 2539, 13, 51318, 51318, 407, 29280, 2539, 307, 1936, 51470, 51470, 257, 2590, 689, 291, 980, 264, 1185, 11, 51646, 51646, 291, 500, 380, 980, 264, 1185, 264, 3006, 1867, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.18171147642464475, "compression_ratio": 1.8473895582329318, "no_speech_prob": 1.0952358934446238e-05}, {"id": 1817, "seek": 521816, "start": 5235.84, "end": 5237.24, "text": " is reinforcement learning.", "tokens": [50364, 300, 366, 12359, 49839, 19618, 13, 50526, 50526, 821, 366, 40468, 399, 7150, 13, 50652, 50652, 821, 311, 439, 3685, 295, 11733, 13, 50720, 50720, 286, 914, 11, 456, 311, 257, 1379, 19746, 295, 729, 721, 13, 50830, 50830, 400, 729, 2171, 366, 36541, 17079, 712, 13, 50924, 50924, 509, 362, 281, 764, 552, 570, 291, 500, 380, 458, 264, 2063, 2445, 13, 51090, 51090, 407, 257, 588, 2689, 2590, 689, 291, 362, 281, 764, 729, 721, 51248, 51248, 307, 29280, 2539, 13, 51318, 51318, 407, 29280, 2539, 307, 1936, 51470, 51470, 257, 2590, 689, 291, 980, 264, 1185, 11, 51646, 51646, 291, 500, 380, 980, 264, 1185, 264, 3006, 1867, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.18171147642464475, "compression_ratio": 1.8473895582329318, "no_speech_prob": 1.0952358934446238e-05}, {"id": 1818, "seek": 521816, "start": 5237.24, "end": 5240.28, "text": " So reinforcement learning is basically", "tokens": [50364, 300, 366, 12359, 49839, 19618, 13, 50526, 50526, 821, 366, 40468, 399, 7150, 13, 50652, 50652, 821, 311, 439, 3685, 295, 11733, 13, 50720, 50720, 286, 914, 11, 456, 311, 257, 1379, 19746, 295, 729, 721, 13, 50830, 50830, 400, 729, 2171, 366, 36541, 17079, 712, 13, 50924, 50924, 509, 362, 281, 764, 552, 570, 291, 500, 380, 458, 264, 2063, 2445, 13, 51090, 51090, 407, 257, 588, 2689, 2590, 689, 291, 362, 281, 764, 729, 721, 51248, 51248, 307, 29280, 2539, 13, 51318, 51318, 407, 29280, 2539, 307, 1936, 51470, 51470, 257, 2590, 689, 291, 980, 264, 1185, 11, 51646, 51646, 291, 500, 380, 980, 264, 1185, 264, 3006, 1867, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.18171147642464475, "compression_ratio": 1.8473895582329318, "no_speech_prob": 1.0952358934446238e-05}, {"id": 1819, "seek": 521816, "start": 5240.28, "end": 5243.8, "text": " a situation where you tell the system,", "tokens": [50364, 300, 366, 12359, 49839, 19618, 13, 50526, 50526, 821, 366, 40468, 399, 7150, 13, 50652, 50652, 821, 311, 439, 3685, 295, 11733, 13, 50720, 50720, 286, 914, 11, 456, 311, 257, 1379, 19746, 295, 729, 721, 13, 50830, 50830, 400, 729, 2171, 366, 36541, 17079, 712, 13, 50924, 50924, 509, 362, 281, 764, 552, 570, 291, 500, 380, 458, 264, 2063, 2445, 13, 51090, 51090, 407, 257, 588, 2689, 2590, 689, 291, 362, 281, 764, 729, 721, 51248, 51248, 307, 29280, 2539, 13, 51318, 51318, 407, 29280, 2539, 307, 1936, 51470, 51470, 257, 2590, 689, 291, 980, 264, 1185, 11, 51646, 51646, 291, 500, 380, 980, 264, 1185, 264, 3006, 1867, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.18171147642464475, "compression_ratio": 1.8473895582329318, "no_speech_prob": 1.0952358934446238e-05}, {"id": 1820, "seek": 521816, "start": 5243.8, "end": 5246.0, "text": " you don't tell the system the correct answer.", "tokens": [50364, 300, 366, 12359, 49839, 19618, 13, 50526, 50526, 821, 366, 40468, 399, 7150, 13, 50652, 50652, 821, 311, 439, 3685, 295, 11733, 13, 50720, 50720, 286, 914, 11, 456, 311, 257, 1379, 19746, 295, 729, 721, 13, 50830, 50830, 400, 729, 2171, 366, 36541, 17079, 712, 13, 50924, 50924, 509, 362, 281, 764, 552, 570, 291, 500, 380, 458, 264, 2063, 2445, 13, 51090, 51090, 407, 257, 588, 2689, 2590, 689, 291, 362, 281, 764, 729, 721, 51248, 51248, 307, 29280, 2539, 13, 51318, 51318, 407, 29280, 2539, 307, 1936, 51470, 51470, 257, 2590, 689, 291, 980, 264, 1185, 11, 51646, 51646, 291, 500, 380, 980, 264, 1185, 264, 3006, 1867, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.18171147642464475, "compression_ratio": 1.8473895582329318, "no_speech_prob": 1.0952358934446238e-05}, {"id": 1821, "seek": 524600, "start": 5246.0, "end": 5248.56, "text": " You only tell the system whether the answer was good or bad.", "tokens": [50364, 509, 787, 980, 264, 1185, 1968, 264, 1867, 390, 665, 420, 1578, 13, 50492, 50492, 8537, 11, 291, 976, 264, 2158, 295, 264, 2063, 11, 50606, 50606, 457, 291, 500, 380, 980, 264, 3479, 437, 264, 2063, 307, 13, 50702, 50702, 407, 264, 3479, 1177, 380, 458, 437, 264, 2063, 2445, 307, 13, 50818, 50936, 400, 370, 264, 3479, 2644, 767, 51030, 51030, 14722, 264, 16235, 295, 264, 2063, 13, 51094, 51094, 400, 370, 309, 575, 281, 764, 746, 411, 257, 4018, 12, 43135, 3170, 13, 51288, 51288, 407, 437, 291, 393, 360, 307, 291, 393, 14722, 51432, 51432, 257, 16235, 365, 3104, 281, 264, 9834, 51548, 51548, 295, 264, 4787, 2063, 2445, 538, 13269, 374, 4324, 264, 9834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19191754248834425, "compression_ratio": 1.9112903225806452, "no_speech_prob": 6.338268576655537e-06}, {"id": 1822, "seek": 524600, "start": 5248.56, "end": 5250.84, "text": " Basically, you give the value of the cost,", "tokens": [50364, 509, 787, 980, 264, 1185, 1968, 264, 1867, 390, 665, 420, 1578, 13, 50492, 50492, 8537, 11, 291, 976, 264, 2158, 295, 264, 2063, 11, 50606, 50606, 457, 291, 500, 380, 980, 264, 3479, 437, 264, 2063, 307, 13, 50702, 50702, 407, 264, 3479, 1177, 380, 458, 437, 264, 2063, 2445, 307, 13, 50818, 50936, 400, 370, 264, 3479, 2644, 767, 51030, 51030, 14722, 264, 16235, 295, 264, 2063, 13, 51094, 51094, 400, 370, 309, 575, 281, 764, 746, 411, 257, 4018, 12, 43135, 3170, 13, 51288, 51288, 407, 437, 291, 393, 360, 307, 291, 393, 14722, 51432, 51432, 257, 16235, 365, 3104, 281, 264, 9834, 51548, 51548, 295, 264, 4787, 2063, 2445, 538, 13269, 374, 4324, 264, 9834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19191754248834425, "compression_ratio": 1.9112903225806452, "no_speech_prob": 6.338268576655537e-06}, {"id": 1823, "seek": 524600, "start": 5250.84, "end": 5252.76, "text": " but you don't tell the machine what the cost is.", "tokens": [50364, 509, 787, 980, 264, 1185, 1968, 264, 1867, 390, 665, 420, 1578, 13, 50492, 50492, 8537, 11, 291, 976, 264, 2158, 295, 264, 2063, 11, 50606, 50606, 457, 291, 500, 380, 980, 264, 3479, 437, 264, 2063, 307, 13, 50702, 50702, 407, 264, 3479, 1177, 380, 458, 437, 264, 2063, 2445, 307, 13, 50818, 50936, 400, 370, 264, 3479, 2644, 767, 51030, 51030, 14722, 264, 16235, 295, 264, 2063, 13, 51094, 51094, 400, 370, 309, 575, 281, 764, 746, 411, 257, 4018, 12, 43135, 3170, 13, 51288, 51288, 407, 437, 291, 393, 360, 307, 291, 393, 14722, 51432, 51432, 257, 16235, 365, 3104, 281, 264, 9834, 51548, 51548, 295, 264, 4787, 2063, 2445, 538, 13269, 374, 4324, 264, 9834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19191754248834425, "compression_ratio": 1.9112903225806452, "no_speech_prob": 6.338268576655537e-06}, {"id": 1824, "seek": 524600, "start": 5252.76, "end": 5255.08, "text": " So the machine doesn't know what the cost function is.", "tokens": [50364, 509, 787, 980, 264, 1185, 1968, 264, 1867, 390, 665, 420, 1578, 13, 50492, 50492, 8537, 11, 291, 976, 264, 2158, 295, 264, 2063, 11, 50606, 50606, 457, 291, 500, 380, 980, 264, 3479, 437, 264, 2063, 307, 13, 50702, 50702, 407, 264, 3479, 1177, 380, 458, 437, 264, 2063, 2445, 307, 13, 50818, 50936, 400, 370, 264, 3479, 2644, 767, 51030, 51030, 14722, 264, 16235, 295, 264, 2063, 13, 51094, 51094, 400, 370, 309, 575, 281, 764, 746, 411, 257, 4018, 12, 43135, 3170, 13, 51288, 51288, 407, 437, 291, 393, 360, 307, 291, 393, 14722, 51432, 51432, 257, 16235, 365, 3104, 281, 264, 9834, 51548, 51548, 295, 264, 4787, 2063, 2445, 538, 13269, 374, 4324, 264, 9834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19191754248834425, "compression_ratio": 1.9112903225806452, "no_speech_prob": 6.338268576655537e-06}, {"id": 1825, "seek": 524600, "start": 5257.44, "end": 5259.32, "text": " And so the machine cannot actually", "tokens": [50364, 509, 787, 980, 264, 1185, 1968, 264, 1867, 390, 665, 420, 1578, 13, 50492, 50492, 8537, 11, 291, 976, 264, 2158, 295, 264, 2063, 11, 50606, 50606, 457, 291, 500, 380, 980, 264, 3479, 437, 264, 2063, 307, 13, 50702, 50702, 407, 264, 3479, 1177, 380, 458, 437, 264, 2063, 2445, 307, 13, 50818, 50936, 400, 370, 264, 3479, 2644, 767, 51030, 51030, 14722, 264, 16235, 295, 264, 2063, 13, 51094, 51094, 400, 370, 309, 575, 281, 764, 746, 411, 257, 4018, 12, 43135, 3170, 13, 51288, 51288, 407, 437, 291, 393, 360, 307, 291, 393, 14722, 51432, 51432, 257, 16235, 365, 3104, 281, 264, 9834, 51548, 51548, 295, 264, 4787, 2063, 2445, 538, 13269, 374, 4324, 264, 9834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19191754248834425, "compression_ratio": 1.9112903225806452, "no_speech_prob": 6.338268576655537e-06}, {"id": 1826, "seek": 524600, "start": 5259.32, "end": 5260.6, "text": " compute the gradient of the cost.", "tokens": [50364, 509, 787, 980, 264, 1185, 1968, 264, 1867, 390, 665, 420, 1578, 13, 50492, 50492, 8537, 11, 291, 976, 264, 2158, 295, 264, 2063, 11, 50606, 50606, 457, 291, 500, 380, 980, 264, 3479, 437, 264, 2063, 307, 13, 50702, 50702, 407, 264, 3479, 1177, 380, 458, 437, 264, 2063, 2445, 307, 13, 50818, 50936, 400, 370, 264, 3479, 2644, 767, 51030, 51030, 14722, 264, 16235, 295, 264, 2063, 13, 51094, 51094, 400, 370, 309, 575, 281, 764, 746, 411, 257, 4018, 12, 43135, 3170, 13, 51288, 51288, 407, 437, 291, 393, 360, 307, 291, 393, 14722, 51432, 51432, 257, 16235, 365, 3104, 281, 264, 9834, 51548, 51548, 295, 264, 4787, 2063, 2445, 538, 13269, 374, 4324, 264, 9834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19191754248834425, "compression_ratio": 1.9112903225806452, "no_speech_prob": 6.338268576655537e-06}, {"id": 1827, "seek": 524600, "start": 5260.6, "end": 5264.48, "text": " And so it has to use something like a zero-thought method.", "tokens": [50364, 509, 787, 980, 264, 1185, 1968, 264, 1867, 390, 665, 420, 1578, 13, 50492, 50492, 8537, 11, 291, 976, 264, 2158, 295, 264, 2063, 11, 50606, 50606, 457, 291, 500, 380, 980, 264, 3479, 437, 264, 2063, 307, 13, 50702, 50702, 407, 264, 3479, 1177, 380, 458, 437, 264, 2063, 2445, 307, 13, 50818, 50936, 400, 370, 264, 3479, 2644, 767, 51030, 51030, 14722, 264, 16235, 295, 264, 2063, 13, 51094, 51094, 400, 370, 309, 575, 281, 764, 746, 411, 257, 4018, 12, 43135, 3170, 13, 51288, 51288, 407, 437, 291, 393, 360, 307, 291, 393, 14722, 51432, 51432, 257, 16235, 365, 3104, 281, 264, 9834, 51548, 51548, 295, 264, 4787, 2063, 2445, 538, 13269, 374, 4324, 264, 9834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19191754248834425, "compression_ratio": 1.9112903225806452, "no_speech_prob": 6.338268576655537e-06}, {"id": 1828, "seek": 524600, "start": 5264.48, "end": 5267.36, "text": " So what you can do is you can compute", "tokens": [50364, 509, 787, 980, 264, 1185, 1968, 264, 1867, 390, 665, 420, 1578, 13, 50492, 50492, 8537, 11, 291, 976, 264, 2158, 295, 264, 2063, 11, 50606, 50606, 457, 291, 500, 380, 980, 264, 3479, 437, 264, 2063, 307, 13, 50702, 50702, 407, 264, 3479, 1177, 380, 458, 437, 264, 2063, 2445, 307, 13, 50818, 50936, 400, 370, 264, 3479, 2644, 767, 51030, 51030, 14722, 264, 16235, 295, 264, 2063, 13, 51094, 51094, 400, 370, 309, 575, 281, 764, 746, 411, 257, 4018, 12, 43135, 3170, 13, 51288, 51288, 407, 437, 291, 393, 360, 307, 291, 393, 14722, 51432, 51432, 257, 16235, 365, 3104, 281, 264, 9834, 51548, 51548, 295, 264, 4787, 2063, 2445, 538, 13269, 374, 4324, 264, 9834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19191754248834425, "compression_ratio": 1.9112903225806452, "no_speech_prob": 6.338268576655537e-06}, {"id": 1829, "seek": 524600, "start": 5267.36, "end": 5269.68, "text": " a gradient with respect to the parameters", "tokens": [50364, 509, 787, 980, 264, 1185, 1968, 264, 1867, 390, 665, 420, 1578, 13, 50492, 50492, 8537, 11, 291, 976, 264, 2158, 295, 264, 2063, 11, 50606, 50606, 457, 291, 500, 380, 980, 264, 3479, 437, 264, 2063, 307, 13, 50702, 50702, 407, 264, 3479, 1177, 380, 458, 437, 264, 2063, 2445, 307, 13, 50818, 50936, 400, 370, 264, 3479, 2644, 767, 51030, 51030, 14722, 264, 16235, 295, 264, 2063, 13, 51094, 51094, 400, 370, 309, 575, 281, 764, 746, 411, 257, 4018, 12, 43135, 3170, 13, 51288, 51288, 407, 437, 291, 393, 360, 307, 291, 393, 14722, 51432, 51432, 257, 16235, 365, 3104, 281, 264, 9834, 51548, 51548, 295, 264, 4787, 2063, 2445, 538, 13269, 374, 4324, 264, 9834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19191754248834425, "compression_ratio": 1.9112903225806452, "no_speech_prob": 6.338268576655537e-06}, {"id": 1830, "seek": 524600, "start": 5269.68, "end": 5274.72, "text": " of the overall cost function by perturbing the parameters.", "tokens": [50364, 509, 787, 980, 264, 1185, 1968, 264, 1867, 390, 665, 420, 1578, 13, 50492, 50492, 8537, 11, 291, 976, 264, 2158, 295, 264, 2063, 11, 50606, 50606, 457, 291, 500, 380, 980, 264, 3479, 437, 264, 2063, 307, 13, 50702, 50702, 407, 264, 3479, 1177, 380, 458, 437, 264, 2063, 2445, 307, 13, 50818, 50936, 400, 370, 264, 3479, 2644, 767, 51030, 51030, 14722, 264, 16235, 295, 264, 2063, 13, 51094, 51094, 400, 370, 309, 575, 281, 764, 746, 411, 257, 4018, 12, 43135, 3170, 13, 51288, 51288, 407, 437, 291, 393, 360, 307, 291, 393, 14722, 51432, 51432, 257, 16235, 365, 3104, 281, 264, 9834, 51548, 51548, 295, 264, 4787, 2063, 2445, 538, 13269, 374, 4324, 264, 9834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19191754248834425, "compression_ratio": 1.9112903225806452, "no_speech_prob": 6.338268576655537e-06}, {"id": 1831, "seek": 527472, "start": 5274.72, "end": 5277.280000000001, "text": " Or what you can do is compute the gradient", "tokens": [50364, 1610, 437, 291, 393, 360, 307, 14722, 264, 16235, 50492, 50492, 295, 264, 2063, 2445, 365, 3104, 281, 264, 5598, 50590, 50590, 295, 428, 18161, 2533, 1228, 40468, 399, 13, 50796, 50796, 400, 1564, 291, 362, 341, 12539, 11, 550, 291, 50876, 50876, 646, 79, 1513, 559, 473, 264, 16235, 807, 428, 3209, 50968, 50968, 1228, 3890, 646, 79, 1513, 13, 51038, 51038, 407, 300, 311, 257, 6562, 295, 8017, 990, 51148, 51148, 264, 16235, 807, 40468, 399, 51216, 51216, 337, 264, 2063, 2445, 570, 291, 500, 380, 458, 309, 51308, 51308, 293, 550, 646, 79, 1513, 559, 990, 490, 456, 13, 51438, 51438, 639, 307, 1936, 264, 6532, 300, 51510, 51510, 390, 1143, 538, 264, 2452, 1575, 561, 294, 264, 700, 2452, 1249, 2539, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16316887020140655, "compression_ratio": 1.8619402985074627, "no_speech_prob": 1.643820905883331e-05}, {"id": 1832, "seek": 527472, "start": 5277.280000000001, "end": 5279.240000000001, "text": " of the cost function with respect to the output", "tokens": [50364, 1610, 437, 291, 393, 360, 307, 14722, 264, 16235, 50492, 50492, 295, 264, 2063, 2445, 365, 3104, 281, 264, 5598, 50590, 50590, 295, 428, 18161, 2533, 1228, 40468, 399, 13, 50796, 50796, 400, 1564, 291, 362, 341, 12539, 11, 550, 291, 50876, 50876, 646, 79, 1513, 559, 473, 264, 16235, 807, 428, 3209, 50968, 50968, 1228, 3890, 646, 79, 1513, 13, 51038, 51038, 407, 300, 311, 257, 6562, 295, 8017, 990, 51148, 51148, 264, 16235, 807, 40468, 399, 51216, 51216, 337, 264, 2063, 2445, 570, 291, 500, 380, 458, 309, 51308, 51308, 293, 550, 646, 79, 1513, 559, 990, 490, 456, 13, 51438, 51438, 639, 307, 1936, 264, 6532, 300, 51510, 51510, 390, 1143, 538, 264, 2452, 1575, 561, 294, 264, 700, 2452, 1249, 2539, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16316887020140655, "compression_ratio": 1.8619402985074627, "no_speech_prob": 1.643820905883331e-05}, {"id": 1833, "seek": 527472, "start": 5279.240000000001, "end": 5283.360000000001, "text": " of your neural net using perturbation.", "tokens": [50364, 1610, 437, 291, 393, 360, 307, 14722, 264, 16235, 50492, 50492, 295, 264, 2063, 2445, 365, 3104, 281, 264, 5598, 50590, 50590, 295, 428, 18161, 2533, 1228, 40468, 399, 13, 50796, 50796, 400, 1564, 291, 362, 341, 12539, 11, 550, 291, 50876, 50876, 646, 79, 1513, 559, 473, 264, 16235, 807, 428, 3209, 50968, 50968, 1228, 3890, 646, 79, 1513, 13, 51038, 51038, 407, 300, 311, 257, 6562, 295, 8017, 990, 51148, 51148, 264, 16235, 807, 40468, 399, 51216, 51216, 337, 264, 2063, 2445, 570, 291, 500, 380, 458, 309, 51308, 51308, 293, 550, 646, 79, 1513, 559, 990, 490, 456, 13, 51438, 51438, 639, 307, 1936, 264, 6532, 300, 51510, 51510, 390, 1143, 538, 264, 2452, 1575, 561, 294, 264, 700, 2452, 1249, 2539, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16316887020140655, "compression_ratio": 1.8619402985074627, "no_speech_prob": 1.643820905883331e-05}, {"id": 1834, "seek": 527472, "start": 5283.360000000001, "end": 5284.96, "text": " And once you have this estimate, then you", "tokens": [50364, 1610, 437, 291, 393, 360, 307, 14722, 264, 16235, 50492, 50492, 295, 264, 2063, 2445, 365, 3104, 281, 264, 5598, 50590, 50590, 295, 428, 18161, 2533, 1228, 40468, 399, 13, 50796, 50796, 400, 1564, 291, 362, 341, 12539, 11, 550, 291, 50876, 50876, 646, 79, 1513, 559, 473, 264, 16235, 807, 428, 3209, 50968, 50968, 1228, 3890, 646, 79, 1513, 13, 51038, 51038, 407, 300, 311, 257, 6562, 295, 8017, 990, 51148, 51148, 264, 16235, 807, 40468, 399, 51216, 51216, 337, 264, 2063, 2445, 570, 291, 500, 380, 458, 309, 51308, 51308, 293, 550, 646, 79, 1513, 559, 990, 490, 456, 13, 51438, 51438, 639, 307, 1936, 264, 6532, 300, 51510, 51510, 390, 1143, 538, 264, 2452, 1575, 561, 294, 264, 700, 2452, 1249, 2539, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16316887020140655, "compression_ratio": 1.8619402985074627, "no_speech_prob": 1.643820905883331e-05}, {"id": 1835, "seek": 527472, "start": 5284.96, "end": 5286.8, "text": " backpropagate the gradient through your network", "tokens": [50364, 1610, 437, 291, 393, 360, 307, 14722, 264, 16235, 50492, 50492, 295, 264, 2063, 2445, 365, 3104, 281, 264, 5598, 50590, 50590, 295, 428, 18161, 2533, 1228, 40468, 399, 13, 50796, 50796, 400, 1564, 291, 362, 341, 12539, 11, 550, 291, 50876, 50876, 646, 79, 1513, 559, 473, 264, 16235, 807, 428, 3209, 50968, 50968, 1228, 3890, 646, 79, 1513, 13, 51038, 51038, 407, 300, 311, 257, 6562, 295, 8017, 990, 51148, 51148, 264, 16235, 807, 40468, 399, 51216, 51216, 337, 264, 2063, 2445, 570, 291, 500, 380, 458, 309, 51308, 51308, 293, 550, 646, 79, 1513, 559, 990, 490, 456, 13, 51438, 51438, 639, 307, 1936, 264, 6532, 300, 51510, 51510, 390, 1143, 538, 264, 2452, 1575, 561, 294, 264, 700, 2452, 1249, 2539, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16316887020140655, "compression_ratio": 1.8619402985074627, "no_speech_prob": 1.643820905883331e-05}, {"id": 1836, "seek": 527472, "start": 5286.8, "end": 5288.2, "text": " using regular backprop.", "tokens": [50364, 1610, 437, 291, 393, 360, 307, 14722, 264, 16235, 50492, 50492, 295, 264, 2063, 2445, 365, 3104, 281, 264, 5598, 50590, 50590, 295, 428, 18161, 2533, 1228, 40468, 399, 13, 50796, 50796, 400, 1564, 291, 362, 341, 12539, 11, 550, 291, 50876, 50876, 646, 79, 1513, 559, 473, 264, 16235, 807, 428, 3209, 50968, 50968, 1228, 3890, 646, 79, 1513, 13, 51038, 51038, 407, 300, 311, 257, 6562, 295, 8017, 990, 51148, 51148, 264, 16235, 807, 40468, 399, 51216, 51216, 337, 264, 2063, 2445, 570, 291, 500, 380, 458, 309, 51308, 51308, 293, 550, 646, 79, 1513, 559, 990, 490, 456, 13, 51438, 51438, 639, 307, 1936, 264, 6532, 300, 51510, 51510, 390, 1143, 538, 264, 2452, 1575, 561, 294, 264, 700, 2452, 1249, 2539, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16316887020140655, "compression_ratio": 1.8619402985074627, "no_speech_prob": 1.643820905883331e-05}, {"id": 1837, "seek": 527472, "start": 5288.2, "end": 5290.400000000001, "text": " So that's a combination of estimating", "tokens": [50364, 1610, 437, 291, 393, 360, 307, 14722, 264, 16235, 50492, 50492, 295, 264, 2063, 2445, 365, 3104, 281, 264, 5598, 50590, 50590, 295, 428, 18161, 2533, 1228, 40468, 399, 13, 50796, 50796, 400, 1564, 291, 362, 341, 12539, 11, 550, 291, 50876, 50876, 646, 79, 1513, 559, 473, 264, 16235, 807, 428, 3209, 50968, 50968, 1228, 3890, 646, 79, 1513, 13, 51038, 51038, 407, 300, 311, 257, 6562, 295, 8017, 990, 51148, 51148, 264, 16235, 807, 40468, 399, 51216, 51216, 337, 264, 2063, 2445, 570, 291, 500, 380, 458, 309, 51308, 51308, 293, 550, 646, 79, 1513, 559, 990, 490, 456, 13, 51438, 51438, 639, 307, 1936, 264, 6532, 300, 51510, 51510, 390, 1143, 538, 264, 2452, 1575, 561, 294, 264, 700, 2452, 1249, 2539, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16316887020140655, "compression_ratio": 1.8619402985074627, "no_speech_prob": 1.643820905883331e-05}, {"id": 1838, "seek": 527472, "start": 5290.400000000001, "end": 5291.76, "text": " the gradient through perturbation", "tokens": [50364, 1610, 437, 291, 393, 360, 307, 14722, 264, 16235, 50492, 50492, 295, 264, 2063, 2445, 365, 3104, 281, 264, 5598, 50590, 50590, 295, 428, 18161, 2533, 1228, 40468, 399, 13, 50796, 50796, 400, 1564, 291, 362, 341, 12539, 11, 550, 291, 50876, 50876, 646, 79, 1513, 559, 473, 264, 16235, 807, 428, 3209, 50968, 50968, 1228, 3890, 646, 79, 1513, 13, 51038, 51038, 407, 300, 311, 257, 6562, 295, 8017, 990, 51148, 51148, 264, 16235, 807, 40468, 399, 51216, 51216, 337, 264, 2063, 2445, 570, 291, 500, 380, 458, 309, 51308, 51308, 293, 550, 646, 79, 1513, 559, 990, 490, 456, 13, 51438, 51438, 639, 307, 1936, 264, 6532, 300, 51510, 51510, 390, 1143, 538, 264, 2452, 1575, 561, 294, 264, 700, 2452, 1249, 2539, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16316887020140655, "compression_ratio": 1.8619402985074627, "no_speech_prob": 1.643820905883331e-05}, {"id": 1839, "seek": 527472, "start": 5291.76, "end": 5293.6, "text": " for the cost function because you don't know it", "tokens": [50364, 1610, 437, 291, 393, 360, 307, 14722, 264, 16235, 50492, 50492, 295, 264, 2063, 2445, 365, 3104, 281, 264, 5598, 50590, 50590, 295, 428, 18161, 2533, 1228, 40468, 399, 13, 50796, 50796, 400, 1564, 291, 362, 341, 12539, 11, 550, 291, 50876, 50876, 646, 79, 1513, 559, 473, 264, 16235, 807, 428, 3209, 50968, 50968, 1228, 3890, 646, 79, 1513, 13, 51038, 51038, 407, 300, 311, 257, 6562, 295, 8017, 990, 51148, 51148, 264, 16235, 807, 40468, 399, 51216, 51216, 337, 264, 2063, 2445, 570, 291, 500, 380, 458, 309, 51308, 51308, 293, 550, 646, 79, 1513, 559, 990, 490, 456, 13, 51438, 51438, 639, 307, 1936, 264, 6532, 300, 51510, 51510, 390, 1143, 538, 264, 2452, 1575, 561, 294, 264, 700, 2452, 1249, 2539, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16316887020140655, "compression_ratio": 1.8619402985074627, "no_speech_prob": 1.643820905883331e-05}, {"id": 1840, "seek": 527472, "start": 5293.6, "end": 5296.2, "text": " and then backpropagating from there.", "tokens": [50364, 1610, 437, 291, 393, 360, 307, 14722, 264, 16235, 50492, 50492, 295, 264, 2063, 2445, 365, 3104, 281, 264, 5598, 50590, 50590, 295, 428, 18161, 2533, 1228, 40468, 399, 13, 50796, 50796, 400, 1564, 291, 362, 341, 12539, 11, 550, 291, 50876, 50876, 646, 79, 1513, 559, 473, 264, 16235, 807, 428, 3209, 50968, 50968, 1228, 3890, 646, 79, 1513, 13, 51038, 51038, 407, 300, 311, 257, 6562, 295, 8017, 990, 51148, 51148, 264, 16235, 807, 40468, 399, 51216, 51216, 337, 264, 2063, 2445, 570, 291, 500, 380, 458, 309, 51308, 51308, 293, 550, 646, 79, 1513, 559, 990, 490, 456, 13, 51438, 51438, 639, 307, 1936, 264, 6532, 300, 51510, 51510, 390, 1143, 538, 264, 2452, 1575, 561, 294, 264, 700, 2452, 1249, 2539, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16316887020140655, "compression_ratio": 1.8619402985074627, "no_speech_prob": 1.643820905883331e-05}, {"id": 1841, "seek": 527472, "start": 5296.2, "end": 5297.64, "text": " This is basically the technique that", "tokens": [50364, 1610, 437, 291, 393, 360, 307, 14722, 264, 16235, 50492, 50492, 295, 264, 2063, 2445, 365, 3104, 281, 264, 5598, 50590, 50590, 295, 428, 18161, 2533, 1228, 40468, 399, 13, 50796, 50796, 400, 1564, 291, 362, 341, 12539, 11, 550, 291, 50876, 50876, 646, 79, 1513, 559, 473, 264, 16235, 807, 428, 3209, 50968, 50968, 1228, 3890, 646, 79, 1513, 13, 51038, 51038, 407, 300, 311, 257, 6562, 295, 8017, 990, 51148, 51148, 264, 16235, 807, 40468, 399, 51216, 51216, 337, 264, 2063, 2445, 570, 291, 500, 380, 458, 309, 51308, 51308, 293, 550, 646, 79, 1513, 559, 990, 490, 456, 13, 51438, 51438, 639, 307, 1936, 264, 6532, 300, 51510, 51510, 390, 1143, 538, 264, 2452, 1575, 561, 294, 264, 700, 2452, 1249, 2539, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16316887020140655, "compression_ratio": 1.8619402985074627, "no_speech_prob": 1.643820905883331e-05}, {"id": 1842, "seek": 527472, "start": 5297.64, "end": 5303.92, "text": " was used by the deep mind people in the first deep Q learning", "tokens": [50364, 1610, 437, 291, 393, 360, 307, 14722, 264, 16235, 50492, 50492, 295, 264, 2063, 2445, 365, 3104, 281, 264, 5598, 50590, 50590, 295, 428, 18161, 2533, 1228, 40468, 399, 13, 50796, 50796, 400, 1564, 291, 362, 341, 12539, 11, 550, 291, 50876, 50876, 646, 79, 1513, 559, 473, 264, 16235, 807, 428, 3209, 50968, 50968, 1228, 3890, 646, 79, 1513, 13, 51038, 51038, 407, 300, 311, 257, 6562, 295, 8017, 990, 51148, 51148, 264, 16235, 807, 40468, 399, 51216, 51216, 337, 264, 2063, 2445, 570, 291, 500, 380, 458, 309, 51308, 51308, 293, 550, 646, 79, 1513, 559, 990, 490, 456, 13, 51438, 51438, 639, 307, 1936, 264, 6532, 300, 51510, 51510, 390, 1143, 538, 264, 2452, 1575, 561, 294, 264, 700, 2452, 1249, 2539, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16316887020140655, "compression_ratio": 1.8619402985074627, "no_speech_prob": 1.643820905883331e-05}, {"id": 1843, "seek": 530392, "start": 5303.92, "end": 5306.64, "text": " type methods.", "tokens": [50364, 2010, 7150, 13, 50500, 50500, 5833, 281, 264, 2710, 2144, 11, 360, 321, 2710, 1125, 264, 2302, 1412, 50680, 50680, 992, 420, 1184, 15245, 30, 50758, 50886, 467, 311, 10344, 13, 50974, 50974, 407, 291, 2710, 1125, 1184, 6889, 13, 51144, 51144, 440, 7006, 291, 434, 15866, 307, 322, 264, 2302, 3097, 992, 13, 51338, 51338, 407, 291, 434, 15866, 264, 3832, 25163, 293, 264, 914, 51530, 51530, 670, 264, 2302, 3097, 992, 13, 51628, 51628, 682, 1186, 11, 881, 295, 264, 565, 11, 291, 500, 380, 754, 51716, 51716, 643, 281, 360, 309, 670, 264, 2302, 3097, 992, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1657687252007642, "compression_ratio": 1.8407960199004976, "no_speech_prob": 1.1448005352576729e-05}, {"id": 1844, "seek": 530392, "start": 5306.64, "end": 5310.24, "text": " Back to the normalization, do we normalize the entire data", "tokens": [50364, 2010, 7150, 13, 50500, 50500, 5833, 281, 264, 2710, 2144, 11, 360, 321, 2710, 1125, 264, 2302, 1412, 50680, 50680, 992, 420, 1184, 15245, 30, 50758, 50886, 467, 311, 10344, 13, 50974, 50974, 407, 291, 2710, 1125, 1184, 6889, 13, 51144, 51144, 440, 7006, 291, 434, 15866, 307, 322, 264, 2302, 3097, 992, 13, 51338, 51338, 407, 291, 434, 15866, 264, 3832, 25163, 293, 264, 914, 51530, 51530, 670, 264, 2302, 3097, 992, 13, 51628, 51628, 682, 1186, 11, 881, 295, 264, 565, 11, 291, 500, 380, 754, 51716, 51716, 643, 281, 360, 309, 670, 264, 2302, 3097, 992, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1657687252007642, "compression_ratio": 1.8407960199004976, "no_speech_prob": 1.1448005352576729e-05}, {"id": 1845, "seek": 530392, "start": 5310.24, "end": 5311.8, "text": " set or each batch?", "tokens": [50364, 2010, 7150, 13, 50500, 50500, 5833, 281, 264, 2710, 2144, 11, 360, 321, 2710, 1125, 264, 2302, 1412, 50680, 50680, 992, 420, 1184, 15245, 30, 50758, 50886, 467, 311, 10344, 13, 50974, 50974, 407, 291, 2710, 1125, 1184, 6889, 13, 51144, 51144, 440, 7006, 291, 434, 15866, 307, 322, 264, 2302, 3097, 992, 13, 51338, 51338, 407, 291, 434, 15866, 264, 3832, 25163, 293, 264, 914, 51530, 51530, 670, 264, 2302, 3097, 992, 13, 51628, 51628, 682, 1186, 11, 881, 295, 264, 565, 11, 291, 500, 380, 754, 51716, 51716, 643, 281, 360, 309, 670, 264, 2302, 3097, 992, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1657687252007642, "compression_ratio": 1.8407960199004976, "no_speech_prob": 1.1448005352576729e-05}, {"id": 1846, "seek": 530392, "start": 5314.36, "end": 5316.12, "text": " It's equivalent.", "tokens": [50364, 2010, 7150, 13, 50500, 50500, 5833, 281, 264, 2710, 2144, 11, 360, 321, 2710, 1125, 264, 2302, 1412, 50680, 50680, 992, 420, 1184, 15245, 30, 50758, 50886, 467, 311, 10344, 13, 50974, 50974, 407, 291, 2710, 1125, 1184, 6889, 13, 51144, 51144, 440, 7006, 291, 434, 15866, 307, 322, 264, 2302, 3097, 992, 13, 51338, 51338, 407, 291, 434, 15866, 264, 3832, 25163, 293, 264, 914, 51530, 51530, 670, 264, 2302, 3097, 992, 13, 51628, 51628, 682, 1186, 11, 881, 295, 264, 565, 11, 291, 500, 380, 754, 51716, 51716, 643, 281, 360, 309, 670, 264, 2302, 3097, 992, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1657687252007642, "compression_ratio": 1.8407960199004976, "no_speech_prob": 1.1448005352576729e-05}, {"id": 1847, "seek": 530392, "start": 5316.12, "end": 5319.52, "text": " So you normalize each sample.", "tokens": [50364, 2010, 7150, 13, 50500, 50500, 5833, 281, 264, 2710, 2144, 11, 360, 321, 2710, 1125, 264, 2302, 1412, 50680, 50680, 992, 420, 1184, 15245, 30, 50758, 50886, 467, 311, 10344, 13, 50974, 50974, 407, 291, 2710, 1125, 1184, 6889, 13, 51144, 51144, 440, 7006, 291, 434, 15866, 307, 322, 264, 2302, 3097, 992, 13, 51338, 51338, 407, 291, 434, 15866, 264, 3832, 25163, 293, 264, 914, 51530, 51530, 670, 264, 2302, 3097, 992, 13, 51628, 51628, 682, 1186, 11, 881, 295, 264, 565, 11, 291, 500, 380, 754, 51716, 51716, 643, 281, 360, 309, 670, 264, 2302, 3097, 992, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1657687252007642, "compression_ratio": 1.8407960199004976, "no_speech_prob": 1.1448005352576729e-05}, {"id": 1848, "seek": 530392, "start": 5319.52, "end": 5323.4, "text": " The variable you're computing is on the entire training set.", "tokens": [50364, 2010, 7150, 13, 50500, 50500, 5833, 281, 264, 2710, 2144, 11, 360, 321, 2710, 1125, 264, 2302, 1412, 50680, 50680, 992, 420, 1184, 15245, 30, 50758, 50886, 467, 311, 10344, 13, 50974, 50974, 407, 291, 2710, 1125, 1184, 6889, 13, 51144, 51144, 440, 7006, 291, 434, 15866, 307, 322, 264, 2302, 3097, 992, 13, 51338, 51338, 407, 291, 434, 15866, 264, 3832, 25163, 293, 264, 914, 51530, 51530, 670, 264, 2302, 3097, 992, 13, 51628, 51628, 682, 1186, 11, 881, 295, 264, 565, 11, 291, 500, 380, 754, 51716, 51716, 643, 281, 360, 309, 670, 264, 2302, 3097, 992, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1657687252007642, "compression_ratio": 1.8407960199004976, "no_speech_prob": 1.1448005352576729e-05}, {"id": 1849, "seek": 530392, "start": 5323.4, "end": 5327.24, "text": " So you're computing the standard deviation and the mean", "tokens": [50364, 2010, 7150, 13, 50500, 50500, 5833, 281, 264, 2710, 2144, 11, 360, 321, 2710, 1125, 264, 2302, 1412, 50680, 50680, 992, 420, 1184, 15245, 30, 50758, 50886, 467, 311, 10344, 13, 50974, 50974, 407, 291, 2710, 1125, 1184, 6889, 13, 51144, 51144, 440, 7006, 291, 434, 15866, 307, 322, 264, 2302, 3097, 992, 13, 51338, 51338, 407, 291, 434, 15866, 264, 3832, 25163, 293, 264, 914, 51530, 51530, 670, 264, 2302, 3097, 992, 13, 51628, 51628, 682, 1186, 11, 881, 295, 264, 565, 11, 291, 500, 380, 754, 51716, 51716, 643, 281, 360, 309, 670, 264, 2302, 3097, 992, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1657687252007642, "compression_ratio": 1.8407960199004976, "no_speech_prob": 1.1448005352576729e-05}, {"id": 1850, "seek": 530392, "start": 5327.24, "end": 5329.2, "text": " over the entire training set.", "tokens": [50364, 2010, 7150, 13, 50500, 50500, 5833, 281, 264, 2710, 2144, 11, 360, 321, 2710, 1125, 264, 2302, 1412, 50680, 50680, 992, 420, 1184, 15245, 30, 50758, 50886, 467, 311, 10344, 13, 50974, 50974, 407, 291, 2710, 1125, 1184, 6889, 13, 51144, 51144, 440, 7006, 291, 434, 15866, 307, 322, 264, 2302, 3097, 992, 13, 51338, 51338, 407, 291, 434, 15866, 264, 3832, 25163, 293, 264, 914, 51530, 51530, 670, 264, 2302, 3097, 992, 13, 51628, 51628, 682, 1186, 11, 881, 295, 264, 565, 11, 291, 500, 380, 754, 51716, 51716, 643, 281, 360, 309, 670, 264, 2302, 3097, 992, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1657687252007642, "compression_ratio": 1.8407960199004976, "no_speech_prob": 1.1448005352576729e-05}, {"id": 1851, "seek": 530392, "start": 5329.2, "end": 5330.96, "text": " In fact, most of the time, you don't even", "tokens": [50364, 2010, 7150, 13, 50500, 50500, 5833, 281, 264, 2710, 2144, 11, 360, 321, 2710, 1125, 264, 2302, 1412, 50680, 50680, 992, 420, 1184, 15245, 30, 50758, 50886, 467, 311, 10344, 13, 50974, 50974, 407, 291, 2710, 1125, 1184, 6889, 13, 51144, 51144, 440, 7006, 291, 434, 15866, 307, 322, 264, 2302, 3097, 992, 13, 51338, 51338, 407, 291, 434, 15866, 264, 3832, 25163, 293, 264, 914, 51530, 51530, 670, 264, 2302, 3097, 992, 13, 51628, 51628, 682, 1186, 11, 881, 295, 264, 565, 11, 291, 500, 380, 754, 51716, 51716, 643, 281, 360, 309, 670, 264, 2302, 3097, 992, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1657687252007642, "compression_ratio": 1.8407960199004976, "no_speech_prob": 1.1448005352576729e-05}, {"id": 1852, "seek": 530392, "start": 5330.96, "end": 5332.32, "text": " need to do it over the entire training set", "tokens": [50364, 2010, 7150, 13, 50500, 50500, 5833, 281, 264, 2710, 2144, 11, 360, 321, 2710, 1125, 264, 2302, 1412, 50680, 50680, 992, 420, 1184, 15245, 30, 50758, 50886, 467, 311, 10344, 13, 50974, 50974, 407, 291, 2710, 1125, 1184, 6889, 13, 51144, 51144, 440, 7006, 291, 434, 15866, 307, 322, 264, 2302, 3097, 992, 13, 51338, 51338, 407, 291, 434, 15866, 264, 3832, 25163, 293, 264, 914, 51530, 51530, 670, 264, 2302, 3097, 992, 13, 51628, 51628, 682, 1186, 11, 881, 295, 264, 565, 11, 291, 500, 380, 754, 51716, 51716, 643, 281, 360, 309, 670, 264, 2302, 3097, 992, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1657687252007642, "compression_ratio": 1.8407960199004976, "no_speech_prob": 1.1448005352576729e-05}, {"id": 1853, "seek": 533232, "start": 5332.32, "end": 5334.16, "text": " because mean and standard deviation", "tokens": [50364, 570, 914, 293, 3832, 25163, 50456, 50456, 9652, 2880, 1238, 2370, 13, 50502, 50634, 583, 291, 360, 309, 670, 264, 2302, 3097, 992, 13, 50726, 50726, 400, 437, 291, 483, 307, 257, 5754, 1230, 11, 732, 5754, 3547, 11, 50936, 50936, 257, 1230, 300, 291, 16390, 293, 257, 1230, 51024, 51024, 300, 291, 820, 9845, 337, 1184, 6542, 295, 428, 4846, 13, 51268, 51268, 467, 311, 257, 6806, 2666, 340, 780, 278, 13, 51328, 51328, 1171, 257, 2212, 3097, 992, 11, 291, 603, 362, 257, 6806, 914, 51658, 51658, 293, 3832, 25163, 8062, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1583916119166783, "compression_ratio": 1.7535545023696681, "no_speech_prob": 8.939274266595021e-06}, {"id": 1854, "seek": 533232, "start": 5334.16, "end": 5335.08, "text": " converges pretty fast.", "tokens": [50364, 570, 914, 293, 3832, 25163, 50456, 50456, 9652, 2880, 1238, 2370, 13, 50502, 50634, 583, 291, 360, 309, 670, 264, 2302, 3097, 992, 13, 50726, 50726, 400, 437, 291, 483, 307, 257, 5754, 1230, 11, 732, 5754, 3547, 11, 50936, 50936, 257, 1230, 300, 291, 16390, 293, 257, 1230, 51024, 51024, 300, 291, 820, 9845, 337, 1184, 6542, 295, 428, 4846, 13, 51268, 51268, 467, 311, 257, 6806, 2666, 340, 780, 278, 13, 51328, 51328, 1171, 257, 2212, 3097, 992, 11, 291, 603, 362, 257, 6806, 914, 51658, 51658, 293, 3832, 25163, 8062, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1583916119166783, "compression_ratio": 1.7535545023696681, "no_speech_prob": 8.939274266595021e-06}, {"id": 1855, "seek": 533232, "start": 5337.719999999999, "end": 5339.5599999999995, "text": " But you do it over the entire training set.", "tokens": [50364, 570, 914, 293, 3832, 25163, 50456, 50456, 9652, 2880, 1238, 2370, 13, 50502, 50634, 583, 291, 360, 309, 670, 264, 2302, 3097, 992, 13, 50726, 50726, 400, 437, 291, 483, 307, 257, 5754, 1230, 11, 732, 5754, 3547, 11, 50936, 50936, 257, 1230, 300, 291, 16390, 293, 257, 1230, 51024, 51024, 300, 291, 820, 9845, 337, 1184, 6542, 295, 428, 4846, 13, 51268, 51268, 467, 311, 257, 6806, 2666, 340, 780, 278, 13, 51328, 51328, 1171, 257, 2212, 3097, 992, 11, 291, 603, 362, 257, 6806, 914, 51658, 51658, 293, 3832, 25163, 8062, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1583916119166783, "compression_ratio": 1.7535545023696681, "no_speech_prob": 8.939274266595021e-06}, {"id": 1856, "seek": 533232, "start": 5339.5599999999995, "end": 5343.759999999999, "text": " And what you get is a constant number, two constant numbers,", "tokens": [50364, 570, 914, 293, 3832, 25163, 50456, 50456, 9652, 2880, 1238, 2370, 13, 50502, 50634, 583, 291, 360, 309, 670, 264, 2302, 3097, 992, 13, 50726, 50726, 400, 437, 291, 483, 307, 257, 5754, 1230, 11, 732, 5754, 3547, 11, 50936, 50936, 257, 1230, 300, 291, 16390, 293, 257, 1230, 51024, 51024, 300, 291, 820, 9845, 337, 1184, 6542, 295, 428, 4846, 13, 51268, 51268, 467, 311, 257, 6806, 2666, 340, 780, 278, 13, 51328, 51328, 1171, 257, 2212, 3097, 992, 11, 291, 603, 362, 257, 6806, 914, 51658, 51658, 293, 3832, 25163, 8062, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1583916119166783, "compression_ratio": 1.7535545023696681, "no_speech_prob": 8.939274266595021e-06}, {"id": 1857, "seek": 533232, "start": 5343.759999999999, "end": 5345.5199999999995, "text": " a number that you subtract and a number", "tokens": [50364, 570, 914, 293, 3832, 25163, 50456, 50456, 9652, 2880, 1238, 2370, 13, 50502, 50634, 583, 291, 360, 309, 670, 264, 2302, 3097, 992, 13, 50726, 50726, 400, 437, 291, 483, 307, 257, 5754, 1230, 11, 732, 5754, 3547, 11, 50936, 50936, 257, 1230, 300, 291, 16390, 293, 257, 1230, 51024, 51024, 300, 291, 820, 9845, 337, 1184, 6542, 295, 428, 4846, 13, 51268, 51268, 467, 311, 257, 6806, 2666, 340, 780, 278, 13, 51328, 51328, 1171, 257, 2212, 3097, 992, 11, 291, 603, 362, 257, 6806, 914, 51658, 51658, 293, 3832, 25163, 8062, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1583916119166783, "compression_ratio": 1.7535545023696681, "no_speech_prob": 8.939274266595021e-06}, {"id": 1858, "seek": 533232, "start": 5345.5199999999995, "end": 5350.4, "text": " that you should divide for each component of your input.", "tokens": [50364, 570, 914, 293, 3832, 25163, 50456, 50456, 9652, 2880, 1238, 2370, 13, 50502, 50634, 583, 291, 360, 309, 670, 264, 2302, 3097, 992, 13, 50726, 50726, 400, 437, 291, 483, 307, 257, 5754, 1230, 11, 732, 5754, 3547, 11, 50936, 50936, 257, 1230, 300, 291, 16390, 293, 257, 1230, 51024, 51024, 300, 291, 820, 9845, 337, 1184, 6542, 295, 428, 4846, 13, 51268, 51268, 467, 311, 257, 6806, 2666, 340, 780, 278, 13, 51328, 51328, 1171, 257, 2212, 3097, 992, 11, 291, 603, 362, 257, 6806, 914, 51658, 51658, 293, 3832, 25163, 8062, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1583916119166783, "compression_ratio": 1.7535545023696681, "no_speech_prob": 8.939274266595021e-06}, {"id": 1859, "seek": 533232, "start": 5350.4, "end": 5351.599999999999, "text": " It's a fixed preprocessing.", "tokens": [50364, 570, 914, 293, 3832, 25163, 50456, 50456, 9652, 2880, 1238, 2370, 13, 50502, 50634, 583, 291, 360, 309, 670, 264, 2302, 3097, 992, 13, 50726, 50726, 400, 437, 291, 483, 307, 257, 5754, 1230, 11, 732, 5754, 3547, 11, 50936, 50936, 257, 1230, 300, 291, 16390, 293, 257, 1230, 51024, 51024, 300, 291, 820, 9845, 337, 1184, 6542, 295, 428, 4846, 13, 51268, 51268, 467, 311, 257, 6806, 2666, 340, 780, 278, 13, 51328, 51328, 1171, 257, 2212, 3097, 992, 11, 291, 603, 362, 257, 6806, 914, 51658, 51658, 293, 3832, 25163, 8062, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1583916119166783, "compression_ratio": 1.7535545023696681, "no_speech_prob": 8.939274266595021e-06}, {"id": 1860, "seek": 533232, "start": 5351.599999999999, "end": 5358.2, "text": " For a given training set, you'll have a fixed mean", "tokens": [50364, 570, 914, 293, 3832, 25163, 50456, 50456, 9652, 2880, 1238, 2370, 13, 50502, 50634, 583, 291, 360, 309, 670, 264, 2302, 3097, 992, 13, 50726, 50726, 400, 437, 291, 483, 307, 257, 5754, 1230, 11, 732, 5754, 3547, 11, 50936, 50936, 257, 1230, 300, 291, 16390, 293, 257, 1230, 51024, 51024, 300, 291, 820, 9845, 337, 1184, 6542, 295, 428, 4846, 13, 51268, 51268, 467, 311, 257, 6806, 2666, 340, 780, 278, 13, 51328, 51328, 1171, 257, 2212, 3097, 992, 11, 291, 603, 362, 257, 6806, 914, 51658, 51658, 293, 3832, 25163, 8062, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1583916119166783, "compression_ratio": 1.7535545023696681, "no_speech_prob": 8.939274266595021e-06}, {"id": 1861, "seek": 533232, "start": 5358.2, "end": 5361.24, "text": " and standard deviation vector.", "tokens": [50364, 570, 914, 293, 3832, 25163, 50456, 50456, 9652, 2880, 1238, 2370, 13, 50502, 50634, 583, 291, 360, 309, 670, 264, 2302, 3097, 992, 13, 50726, 50726, 400, 437, 291, 483, 307, 257, 5754, 1230, 11, 732, 5754, 3547, 11, 50936, 50936, 257, 1230, 300, 291, 16390, 293, 257, 1230, 51024, 51024, 300, 291, 820, 9845, 337, 1184, 6542, 295, 428, 4846, 13, 51268, 51268, 467, 311, 257, 6806, 2666, 340, 780, 278, 13, 51328, 51328, 1171, 257, 2212, 3097, 992, 11, 291, 603, 362, 257, 6806, 914, 51658, 51658, 293, 3832, 25163, 8062, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1583916119166783, "compression_ratio": 1.7535545023696681, "no_speech_prob": 8.939274266595021e-06}, {"id": 1862, "seek": 536124, "start": 5361.24, "end": 5365.5599999999995, "text": " But maybe we can connect to the other tool, the other module,", "tokens": [50364, 583, 1310, 321, 393, 1745, 281, 264, 661, 2290, 11, 264, 661, 10088, 11, 50580, 50580, 264, 15245, 2710, 2144, 13, 50698, 50698, 2264, 11, 321, 2378, 380, 2825, 466, 300, 1939, 13, 50788, 50788, 286, 478, 1566, 300, 321, 393, 4317, 10101, 341, 2710, 2144, 857, 51018, 51018, 281, 264, 1293, 4881, 11, 264, 1379, 1412, 992, 293, 264, 15245, 2564, 13, 51212, 51212, 2264, 11, 2086, 11, 2086, 13, 51266, 51266, 407, 797, 11, 456, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 13, 51464, 51464, 583, 337, 264, 912, 1778, 11, 309, 311, 665, 281, 362, 9102, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18464808194142468, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.982843423320446e-05}, {"id": 1863, "seek": 536124, "start": 5365.5599999999995, "end": 5367.92, "text": " the batch normalization.", "tokens": [50364, 583, 1310, 321, 393, 1745, 281, 264, 661, 2290, 11, 264, 661, 10088, 11, 50580, 50580, 264, 15245, 2710, 2144, 13, 50698, 50698, 2264, 11, 321, 2378, 380, 2825, 466, 300, 1939, 13, 50788, 50788, 286, 478, 1566, 300, 321, 393, 4317, 10101, 341, 2710, 2144, 857, 51018, 51018, 281, 264, 1293, 4881, 11, 264, 1379, 1412, 992, 293, 264, 15245, 2564, 13, 51212, 51212, 2264, 11, 2086, 11, 2086, 13, 51266, 51266, 407, 797, 11, 456, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 13, 51464, 51464, 583, 337, 264, 912, 1778, 11, 309, 311, 665, 281, 362, 9102, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18464808194142468, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.982843423320446e-05}, {"id": 1864, "seek": 536124, "start": 5367.92, "end": 5369.719999999999, "text": " OK, we haven't talked about that yet.", "tokens": [50364, 583, 1310, 321, 393, 1745, 281, 264, 661, 2290, 11, 264, 661, 10088, 11, 50580, 50580, 264, 15245, 2710, 2144, 13, 50698, 50698, 2264, 11, 321, 2378, 380, 2825, 466, 300, 1939, 13, 50788, 50788, 286, 478, 1566, 300, 321, 393, 4317, 10101, 341, 2710, 2144, 857, 51018, 51018, 281, 264, 1293, 4881, 11, 264, 1379, 1412, 992, 293, 264, 15245, 2564, 13, 51212, 51212, 2264, 11, 2086, 11, 2086, 13, 51266, 51266, 407, 797, 11, 456, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 13, 51464, 51464, 583, 337, 264, 912, 1778, 11, 309, 311, 665, 281, 362, 9102, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18464808194142468, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.982843423320446e-05}, {"id": 1865, "seek": 536124, "start": 5369.719999999999, "end": 5374.32, "text": " I'm saying that we can perhaps extend this normalization bit", "tokens": [50364, 583, 1310, 321, 393, 1745, 281, 264, 661, 2290, 11, 264, 661, 10088, 11, 50580, 50580, 264, 15245, 2710, 2144, 13, 50698, 50698, 2264, 11, 321, 2378, 380, 2825, 466, 300, 1939, 13, 50788, 50788, 286, 478, 1566, 300, 321, 393, 4317, 10101, 341, 2710, 2144, 857, 51018, 51018, 281, 264, 1293, 4881, 11, 264, 1379, 1412, 992, 293, 264, 15245, 2564, 13, 51212, 51212, 2264, 11, 2086, 11, 2086, 13, 51266, 51266, 407, 797, 11, 456, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 13, 51464, 51464, 583, 337, 264, 912, 1778, 11, 309, 311, 665, 281, 362, 9102, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18464808194142468, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.982843423320446e-05}, {"id": 1866, "seek": 536124, "start": 5374.32, "end": 5378.2, "text": " to the both sides, the whole data set and the batch itself.", "tokens": [50364, 583, 1310, 321, 393, 1745, 281, 264, 661, 2290, 11, 264, 661, 10088, 11, 50580, 50580, 264, 15245, 2710, 2144, 13, 50698, 50698, 2264, 11, 321, 2378, 380, 2825, 466, 300, 1939, 13, 50788, 50788, 286, 478, 1566, 300, 321, 393, 4317, 10101, 341, 2710, 2144, 857, 51018, 51018, 281, 264, 1293, 4881, 11, 264, 1379, 1412, 992, 293, 264, 15245, 2564, 13, 51212, 51212, 2264, 11, 2086, 11, 2086, 13, 51266, 51266, 407, 797, 11, 456, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 13, 51464, 51464, 583, 337, 264, 912, 1778, 11, 309, 311, 665, 281, 362, 9102, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18464808194142468, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.982843423320446e-05}, {"id": 1867, "seek": 536124, "start": 5378.2, "end": 5379.28, "text": " OK, yes, yes.", "tokens": [50364, 583, 1310, 321, 393, 1745, 281, 264, 661, 2290, 11, 264, 661, 10088, 11, 50580, 50580, 264, 15245, 2710, 2144, 13, 50698, 50698, 2264, 11, 321, 2378, 380, 2825, 466, 300, 1939, 13, 50788, 50788, 286, 478, 1566, 300, 321, 393, 4317, 10101, 341, 2710, 2144, 857, 51018, 51018, 281, 264, 1293, 4881, 11, 264, 1379, 1412, 992, 293, 264, 15245, 2564, 13, 51212, 51212, 2264, 11, 2086, 11, 2086, 13, 51266, 51266, 407, 797, 11, 456, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 13, 51464, 51464, 583, 337, 264, 912, 1778, 11, 309, 311, 665, 281, 362, 9102, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18464808194142468, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.982843423320446e-05}, {"id": 1868, "seek": 536124, "start": 5379.28, "end": 5383.24, "text": " So again, there's going to be a whole lecture on this.", "tokens": [50364, 583, 1310, 321, 393, 1745, 281, 264, 661, 2290, 11, 264, 661, 10088, 11, 50580, 50580, 264, 15245, 2710, 2144, 13, 50698, 50698, 2264, 11, 321, 2378, 380, 2825, 466, 300, 1939, 13, 50788, 50788, 286, 478, 1566, 300, 321, 393, 4317, 10101, 341, 2710, 2144, 857, 51018, 51018, 281, 264, 1293, 4881, 11, 264, 1379, 1412, 992, 293, 264, 15245, 2564, 13, 51212, 51212, 2264, 11, 2086, 11, 2086, 13, 51266, 51266, 407, 797, 11, 456, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 13, 51464, 51464, 583, 337, 264, 912, 1778, 11, 309, 311, 665, 281, 362, 9102, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18464808194142468, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.982843423320446e-05}, {"id": 1869, "seek": 536124, "start": 5383.24, "end": 5390.32, "text": " But for the same reason, it's good to have variables,", "tokens": [50364, 583, 1310, 321, 393, 1745, 281, 264, 661, 2290, 11, 264, 661, 10088, 11, 50580, 50580, 264, 15245, 2710, 2144, 13, 50698, 50698, 2264, 11, 321, 2378, 380, 2825, 466, 300, 1939, 13, 50788, 50788, 286, 478, 1566, 300, 321, 393, 4317, 10101, 341, 2710, 2144, 857, 51018, 51018, 281, 264, 1293, 4881, 11, 264, 1379, 1412, 992, 293, 264, 15245, 2564, 13, 51212, 51212, 2264, 11, 2086, 11, 2086, 13, 51266, 51266, 407, 797, 11, 456, 311, 516, 281, 312, 257, 1379, 7991, 322, 341, 13, 51464, 51464, 583, 337, 264, 912, 1778, 11, 309, 311, 665, 281, 362, 9102, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18464808194142468, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.982843423320446e-05}, {"id": 1870, "seek": 539032, "start": 5390.32, "end": 5392.24, "text": " the input that are zero mean and unit variance.", "tokens": [50364, 264, 4846, 300, 366, 4018, 914, 293, 4985, 21977, 13, 50460, 50460, 467, 311, 611, 665, 337, 264, 1785, 9102, 1854, 264, 3209, 50606, 50606, 281, 1936, 362, 4018, 914, 293, 4985, 21977, 13, 50732, 50732, 400, 370, 561, 362, 808, 493, 365, 3683, 2098, 50820, 50820, 295, 884, 2710, 2144, 295, 264, 9102, 1854, 264, 3209, 50994, 50994, 370, 300, 436, 3109, 4018, 914, 293, 4985, 21977, 13, 51338, 51338, 400, 456, 366, 867, 2098, 281, 360, 341, 13, 51418, 51418, 814, 362, 4052, 5288, 411, 15245, 2710, 2144, 11, 51576, 51576, 411, 4583, 2710, 2144, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13225754569558537, "compression_ratio": 2.0, "no_speech_prob": 3.905049652530579e-06}, {"id": 1871, "seek": 539032, "start": 5392.24, "end": 5395.16, "text": " It's also good for the state variables inside the network", "tokens": [50364, 264, 4846, 300, 366, 4018, 914, 293, 4985, 21977, 13, 50460, 50460, 467, 311, 611, 665, 337, 264, 1785, 9102, 1854, 264, 3209, 50606, 50606, 281, 1936, 362, 4018, 914, 293, 4985, 21977, 13, 50732, 50732, 400, 370, 561, 362, 808, 493, 365, 3683, 2098, 50820, 50820, 295, 884, 2710, 2144, 295, 264, 9102, 1854, 264, 3209, 50994, 50994, 370, 300, 436, 3109, 4018, 914, 293, 4985, 21977, 13, 51338, 51338, 400, 456, 366, 867, 2098, 281, 360, 341, 13, 51418, 51418, 814, 362, 4052, 5288, 411, 15245, 2710, 2144, 11, 51576, 51576, 411, 4583, 2710, 2144, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13225754569558537, "compression_ratio": 2.0, "no_speech_prob": 3.905049652530579e-06}, {"id": 1872, "seek": 539032, "start": 5395.16, "end": 5397.679999999999, "text": " to basically have zero mean and unit variance.", "tokens": [50364, 264, 4846, 300, 366, 4018, 914, 293, 4985, 21977, 13, 50460, 50460, 467, 311, 611, 665, 337, 264, 1785, 9102, 1854, 264, 3209, 50606, 50606, 281, 1936, 362, 4018, 914, 293, 4985, 21977, 13, 50732, 50732, 400, 370, 561, 362, 808, 493, 365, 3683, 2098, 50820, 50820, 295, 884, 2710, 2144, 295, 264, 9102, 1854, 264, 3209, 50994, 50994, 370, 300, 436, 3109, 4018, 914, 293, 4985, 21977, 13, 51338, 51338, 400, 456, 366, 867, 2098, 281, 360, 341, 13, 51418, 51418, 814, 362, 4052, 5288, 411, 15245, 2710, 2144, 11, 51576, 51576, 411, 4583, 2710, 2144, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13225754569558537, "compression_ratio": 2.0, "no_speech_prob": 3.905049652530579e-06}, {"id": 1873, "seek": 539032, "start": 5397.679999999999, "end": 5399.44, "text": " And so people have come up with various ways", "tokens": [50364, 264, 4846, 300, 366, 4018, 914, 293, 4985, 21977, 13, 50460, 50460, 467, 311, 611, 665, 337, 264, 1785, 9102, 1854, 264, 3209, 50606, 50606, 281, 1936, 362, 4018, 914, 293, 4985, 21977, 13, 50732, 50732, 400, 370, 561, 362, 808, 493, 365, 3683, 2098, 50820, 50820, 295, 884, 2710, 2144, 295, 264, 9102, 1854, 264, 3209, 50994, 50994, 370, 300, 436, 3109, 4018, 914, 293, 4985, 21977, 13, 51338, 51338, 400, 456, 366, 867, 2098, 281, 360, 341, 13, 51418, 51418, 814, 362, 4052, 5288, 411, 15245, 2710, 2144, 11, 51576, 51576, 411, 4583, 2710, 2144, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13225754569558537, "compression_ratio": 2.0, "no_speech_prob": 3.905049652530579e-06}, {"id": 1874, "seek": 539032, "start": 5399.44, "end": 5402.92, "text": " of doing normalization of the variables inside the network", "tokens": [50364, 264, 4846, 300, 366, 4018, 914, 293, 4985, 21977, 13, 50460, 50460, 467, 311, 611, 665, 337, 264, 1785, 9102, 1854, 264, 3209, 50606, 50606, 281, 1936, 362, 4018, 914, 293, 4985, 21977, 13, 50732, 50732, 400, 370, 561, 362, 808, 493, 365, 3683, 2098, 50820, 50820, 295, 884, 2710, 2144, 295, 264, 9102, 1854, 264, 3209, 50994, 50994, 370, 300, 436, 3109, 4018, 914, 293, 4985, 21977, 13, 51338, 51338, 400, 456, 366, 867, 2098, 281, 360, 341, 13, 51418, 51418, 814, 362, 4052, 5288, 411, 15245, 2710, 2144, 11, 51576, 51576, 411, 4583, 2710, 2144, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13225754569558537, "compression_ratio": 2.0, "no_speech_prob": 3.905049652530579e-06}, {"id": 1875, "seek": 539032, "start": 5402.92, "end": 5409.799999999999, "text": " so that they approach zero mean and unit variance.", "tokens": [50364, 264, 4846, 300, 366, 4018, 914, 293, 4985, 21977, 13, 50460, 50460, 467, 311, 611, 665, 337, 264, 1785, 9102, 1854, 264, 3209, 50606, 50606, 281, 1936, 362, 4018, 914, 293, 4985, 21977, 13, 50732, 50732, 400, 370, 561, 362, 808, 493, 365, 3683, 2098, 50820, 50820, 295, 884, 2710, 2144, 295, 264, 9102, 1854, 264, 3209, 50994, 50994, 370, 300, 436, 3109, 4018, 914, 293, 4985, 21977, 13, 51338, 51338, 400, 456, 366, 867, 2098, 281, 360, 341, 13, 51418, 51418, 814, 362, 4052, 5288, 411, 15245, 2710, 2144, 11, 51576, 51576, 411, 4583, 2710, 2144, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13225754569558537, "compression_ratio": 2.0, "no_speech_prob": 3.905049652530579e-06}, {"id": 1876, "seek": 539032, "start": 5409.799999999999, "end": 5411.4, "text": " And there are many ways to do this.", "tokens": [50364, 264, 4846, 300, 366, 4018, 914, 293, 4985, 21977, 13, 50460, 50460, 467, 311, 611, 665, 337, 264, 1785, 9102, 1854, 264, 3209, 50606, 50606, 281, 1936, 362, 4018, 914, 293, 4985, 21977, 13, 50732, 50732, 400, 370, 561, 362, 808, 493, 365, 3683, 2098, 50820, 50820, 295, 884, 2710, 2144, 295, 264, 9102, 1854, 264, 3209, 50994, 50994, 370, 300, 436, 3109, 4018, 914, 293, 4985, 21977, 13, 51338, 51338, 400, 456, 366, 867, 2098, 281, 360, 341, 13, 51418, 51418, 814, 362, 4052, 5288, 411, 15245, 2710, 2144, 11, 51576, 51576, 411, 4583, 2710, 2144, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13225754569558537, "compression_ratio": 2.0, "no_speech_prob": 3.905049652530579e-06}, {"id": 1877, "seek": 539032, "start": 5411.4, "end": 5414.5599999999995, "text": " They have cute names like batch normalization,", "tokens": [50364, 264, 4846, 300, 366, 4018, 914, 293, 4985, 21977, 13, 50460, 50460, 467, 311, 611, 665, 337, 264, 1785, 9102, 1854, 264, 3209, 50606, 50606, 281, 1936, 362, 4018, 914, 293, 4985, 21977, 13, 50732, 50732, 400, 370, 561, 362, 808, 493, 365, 3683, 2098, 50820, 50820, 295, 884, 2710, 2144, 295, 264, 9102, 1854, 264, 3209, 50994, 50994, 370, 300, 436, 3109, 4018, 914, 293, 4985, 21977, 13, 51338, 51338, 400, 456, 366, 867, 2098, 281, 360, 341, 13, 51418, 51418, 814, 362, 4052, 5288, 411, 15245, 2710, 2144, 11, 51576, 51576, 411, 4583, 2710, 2144, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13225754569558537, "compression_ratio": 2.0, "no_speech_prob": 3.905049652530579e-06}, {"id": 1878, "seek": 539032, "start": 5414.5599999999995, "end": 5419.08, "text": " like layer normalization.", "tokens": [50364, 264, 4846, 300, 366, 4018, 914, 293, 4985, 21977, 13, 50460, 50460, 467, 311, 611, 665, 337, 264, 1785, 9102, 1854, 264, 3209, 50606, 50606, 281, 1936, 362, 4018, 914, 293, 4985, 21977, 13, 50732, 50732, 400, 370, 561, 362, 808, 493, 365, 3683, 2098, 50820, 50820, 295, 884, 2710, 2144, 295, 264, 9102, 1854, 264, 3209, 50994, 50994, 370, 300, 436, 3109, 4018, 914, 293, 4985, 21977, 13, 51338, 51338, 400, 456, 366, 867, 2098, 281, 360, 341, 13, 51418, 51418, 814, 362, 4052, 5288, 411, 15245, 2710, 2144, 11, 51576, 51576, 411, 4583, 2710, 2144, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13225754569558537, "compression_ratio": 2.0, "no_speech_prob": 3.905049652530579e-06}, {"id": 1879, "seek": 541908, "start": 5419.08, "end": 5421.76, "text": " And the idea goes back a very long time.", "tokens": [50364, 400, 264, 1558, 1709, 646, 257, 588, 938, 565, 13, 50498, 50498, 363, 852, 2026, 307, 733, 295, 257, 544, 5162, 49988, 295, 309, 13, 50678, 50678, 961, 311, 536, 11, 437, 390, 286, 30, 50788, 50788, 44926, 45893, 281, 11514, 264, 2539, 3314, 13, 50932, 50932, 865, 11, 382, 309, 4523, 484, 11, 337, 4112, 300, 366, 920, 406, 51078, 51078, 2584, 4498, 7320, 11, 291, 643, 281, 1466, 2370, 13, 51380, 51380, 29446, 11, 291, 643, 257, 2539, 3314, 295, 257, 1729, 2744, 13, 51550, 51550, 583, 281, 483, 665, 3542, 294, 264, 917, 11, 51624, 51624, 291, 643, 281, 11514, 264, 2539, 3314, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.1641977830366655, "compression_ratio": 1.6835443037974684, "no_speech_prob": 1.45078738569282e-05}, {"id": 1880, "seek": 541908, "start": 5421.76, "end": 5425.36, "text": " Batch norm is kind of a more recent incarnation of it.", "tokens": [50364, 400, 264, 1558, 1709, 646, 257, 588, 938, 565, 13, 50498, 50498, 363, 852, 2026, 307, 733, 295, 257, 544, 5162, 49988, 295, 309, 13, 50678, 50678, 961, 311, 536, 11, 437, 390, 286, 30, 50788, 50788, 44926, 45893, 281, 11514, 264, 2539, 3314, 13, 50932, 50932, 865, 11, 382, 309, 4523, 484, 11, 337, 4112, 300, 366, 920, 406, 51078, 51078, 2584, 4498, 7320, 11, 291, 643, 281, 1466, 2370, 13, 51380, 51380, 29446, 11, 291, 643, 257, 2539, 3314, 295, 257, 1729, 2744, 13, 51550, 51550, 583, 281, 483, 665, 3542, 294, 264, 917, 11, 51624, 51624, 291, 643, 281, 11514, 264, 2539, 3314, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.1641977830366655, "compression_ratio": 1.6835443037974684, "no_speech_prob": 1.45078738569282e-05}, {"id": 1881, "seek": 541908, "start": 5425.36, "end": 5427.5599999999995, "text": " Let's see, what was I?", "tokens": [50364, 400, 264, 1558, 1709, 646, 257, 588, 938, 565, 13, 50498, 50498, 363, 852, 2026, 307, 733, 295, 257, 544, 5162, 49988, 295, 309, 13, 50678, 50678, 961, 311, 536, 11, 437, 390, 286, 30, 50788, 50788, 44926, 45893, 281, 11514, 264, 2539, 3314, 13, 50932, 50932, 865, 11, 382, 309, 4523, 484, 11, 337, 4112, 300, 366, 920, 406, 51078, 51078, 2584, 4498, 7320, 11, 291, 643, 281, 1466, 2370, 13, 51380, 51380, 29446, 11, 291, 643, 257, 2539, 3314, 295, 257, 1729, 2744, 13, 51550, 51550, 583, 281, 483, 665, 3542, 294, 264, 917, 11, 51624, 51624, 291, 643, 281, 11514, 264, 2539, 3314, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.1641977830366655, "compression_ratio": 1.6835443037974684, "no_speech_prob": 1.45078738569282e-05}, {"id": 1882, "seek": 541908, "start": 5427.5599999999995, "end": 5430.44, "text": " Scheduled to decrease the learning rate.", "tokens": [50364, 400, 264, 1558, 1709, 646, 257, 588, 938, 565, 13, 50498, 50498, 363, 852, 2026, 307, 733, 295, 257, 544, 5162, 49988, 295, 309, 13, 50678, 50678, 961, 311, 536, 11, 437, 390, 286, 30, 50788, 50788, 44926, 45893, 281, 11514, 264, 2539, 3314, 13, 50932, 50932, 865, 11, 382, 309, 4523, 484, 11, 337, 4112, 300, 366, 920, 406, 51078, 51078, 2584, 4498, 7320, 11, 291, 643, 281, 1466, 2370, 13, 51380, 51380, 29446, 11, 291, 643, 257, 2539, 3314, 295, 257, 1729, 2744, 13, 51550, 51550, 583, 281, 483, 665, 3542, 294, 264, 917, 11, 51624, 51624, 291, 643, 281, 11514, 264, 2539, 3314, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.1641977830366655, "compression_ratio": 1.6835443037974684, "no_speech_prob": 1.45078738569282e-05}, {"id": 1883, "seek": 541908, "start": 5430.44, "end": 5433.36, "text": " Yeah, as it turns out, for reasons that are still not", "tokens": [50364, 400, 264, 1558, 1709, 646, 257, 588, 938, 565, 13, 50498, 50498, 363, 852, 2026, 307, 733, 295, 257, 544, 5162, 49988, 295, 309, 13, 50678, 50678, 961, 311, 536, 11, 437, 390, 286, 30, 50788, 50788, 44926, 45893, 281, 11514, 264, 2539, 3314, 13, 50932, 50932, 865, 11, 382, 309, 4523, 484, 11, 337, 4112, 300, 366, 920, 406, 51078, 51078, 2584, 4498, 7320, 11, 291, 643, 281, 1466, 2370, 13, 51380, 51380, 29446, 11, 291, 643, 257, 2539, 3314, 295, 257, 1729, 2744, 13, 51550, 51550, 583, 281, 483, 665, 3542, 294, 264, 917, 11, 51624, 51624, 291, 643, 281, 11514, 264, 2539, 3314, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.1641977830366655, "compression_ratio": 1.6835443037974684, "no_speech_prob": 1.45078738569282e-05}, {"id": 1884, "seek": 541908, "start": 5433.36, "end": 5439.4, "text": " completely fully understood, you need to learn fast.", "tokens": [50364, 400, 264, 1558, 1709, 646, 257, 588, 938, 565, 13, 50498, 50498, 363, 852, 2026, 307, 733, 295, 257, 544, 5162, 49988, 295, 309, 13, 50678, 50678, 961, 311, 536, 11, 437, 390, 286, 30, 50788, 50788, 44926, 45893, 281, 11514, 264, 2539, 3314, 13, 50932, 50932, 865, 11, 382, 309, 4523, 484, 11, 337, 4112, 300, 366, 920, 406, 51078, 51078, 2584, 4498, 7320, 11, 291, 643, 281, 1466, 2370, 13, 51380, 51380, 29446, 11, 291, 643, 257, 2539, 3314, 295, 257, 1729, 2744, 13, 51550, 51550, 583, 281, 483, 665, 3542, 294, 264, 917, 11, 51624, 51624, 291, 643, 281, 11514, 264, 2539, 3314, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.1641977830366655, "compression_ratio": 1.6835443037974684, "no_speech_prob": 1.45078738569282e-05}, {"id": 1885, "seek": 541908, "start": 5439.4, "end": 5442.8, "text": " Initially, you need a learning rate of a particular size.", "tokens": [50364, 400, 264, 1558, 1709, 646, 257, 588, 938, 565, 13, 50498, 50498, 363, 852, 2026, 307, 733, 295, 257, 544, 5162, 49988, 295, 309, 13, 50678, 50678, 961, 311, 536, 11, 437, 390, 286, 30, 50788, 50788, 44926, 45893, 281, 11514, 264, 2539, 3314, 13, 50932, 50932, 865, 11, 382, 309, 4523, 484, 11, 337, 4112, 300, 366, 920, 406, 51078, 51078, 2584, 4498, 7320, 11, 291, 643, 281, 1466, 2370, 13, 51380, 51380, 29446, 11, 291, 643, 257, 2539, 3314, 295, 257, 1729, 2744, 13, 51550, 51550, 583, 281, 483, 665, 3542, 294, 264, 917, 11, 51624, 51624, 291, 643, 281, 11514, 264, 2539, 3314, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.1641977830366655, "compression_ratio": 1.6835443037974684, "no_speech_prob": 1.45078738569282e-05}, {"id": 1886, "seek": 541908, "start": 5442.8, "end": 5444.28, "text": " But to get good results in the end,", "tokens": [50364, 400, 264, 1558, 1709, 646, 257, 588, 938, 565, 13, 50498, 50498, 363, 852, 2026, 307, 733, 295, 257, 544, 5162, 49988, 295, 309, 13, 50678, 50678, 961, 311, 536, 11, 437, 390, 286, 30, 50788, 50788, 44926, 45893, 281, 11514, 264, 2539, 3314, 13, 50932, 50932, 865, 11, 382, 309, 4523, 484, 11, 337, 4112, 300, 366, 920, 406, 51078, 51078, 2584, 4498, 7320, 11, 291, 643, 281, 1466, 2370, 13, 51380, 51380, 29446, 11, 291, 643, 257, 2539, 3314, 295, 257, 1729, 2744, 13, 51550, 51550, 583, 281, 483, 665, 3542, 294, 264, 917, 11, 51624, 51624, 291, 643, 281, 11514, 264, 2539, 3314, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.1641977830366655, "compression_ratio": 1.6835443037974684, "no_speech_prob": 1.45078738569282e-05}, {"id": 1887, "seek": 541908, "start": 5444.28, "end": 5446.0, "text": " you need to decrease the learning rate", "tokens": [50364, 400, 264, 1558, 1709, 646, 257, 588, 938, 565, 13, 50498, 50498, 363, 852, 2026, 307, 733, 295, 257, 544, 5162, 49988, 295, 309, 13, 50678, 50678, 961, 311, 536, 11, 437, 390, 286, 30, 50788, 50788, 44926, 45893, 281, 11514, 264, 2539, 3314, 13, 50932, 50932, 865, 11, 382, 309, 4523, 484, 11, 337, 4112, 300, 366, 920, 406, 51078, 51078, 2584, 4498, 7320, 11, 291, 643, 281, 1466, 2370, 13, 51380, 51380, 29446, 11, 291, 643, 257, 2539, 3314, 295, 257, 1729, 2744, 13, 51550, 51550, 583, 281, 483, 665, 3542, 294, 264, 917, 11, 51624, 51624, 291, 643, 281, 11514, 264, 2539, 3314, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.1641977830366655, "compression_ratio": 1.6835443037974684, "no_speech_prob": 1.45078738569282e-05}, {"id": 1888, "seek": 544600, "start": 5446.0, "end": 5450.24, "text": " and let the system settle inside of minima.", "tokens": [50364, 293, 718, 264, 1185, 11852, 1854, 295, 4464, 64, 13, 50576, 50576, 400, 300, 7029, 23223, 264, 2539, 3314, 13, 50796, 50796, 821, 311, 3683, 12909, 12, 3337, 327, 20864, 10835, 50984, 50984, 337, 341, 13, 51010, 51010, 583, 5120, 379, 11, 309, 311, 1850, 291, 643, 281, 360, 300, 13, 51164, 51164, 400, 797, 11, 456, 366, 28078, 300, 366, 659, 12, 32726, 1912, 51274, 51274, 294, 9953, 51, 284, 339, 337, 341, 13, 51318, 51464, 8278, 257, 857, 295, 441, 16, 420, 441, 17, 3890, 2144, 51554, 51554, 322, 264, 17443, 420, 6562, 13, 51672, 51672, 865, 11, 934, 291, 600, 8895, 428, 1185, 337, 257, 1326, 30992, 28346, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18899717002079405, "compression_ratio": 1.5399239543726235, "no_speech_prob": 9.664802746556234e-06}, {"id": 1889, "seek": 544600, "start": 5450.24, "end": 5454.64, "text": " And that requires decreasing the learning rate.", "tokens": [50364, 293, 718, 264, 1185, 11852, 1854, 295, 4464, 64, 13, 50576, 50576, 400, 300, 7029, 23223, 264, 2539, 3314, 13, 50796, 50796, 821, 311, 3683, 12909, 12, 3337, 327, 20864, 10835, 50984, 50984, 337, 341, 13, 51010, 51010, 583, 5120, 379, 11, 309, 311, 1850, 291, 643, 281, 360, 300, 13, 51164, 51164, 400, 797, 11, 456, 366, 28078, 300, 366, 659, 12, 32726, 1912, 51274, 51274, 294, 9953, 51, 284, 339, 337, 341, 13, 51318, 51464, 8278, 257, 857, 295, 441, 16, 420, 441, 17, 3890, 2144, 51554, 51554, 322, 264, 17443, 420, 6562, 13, 51672, 51672, 865, 11, 934, 291, 600, 8895, 428, 1185, 337, 257, 1326, 30992, 28346, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18899717002079405, "compression_ratio": 1.5399239543726235, "no_speech_prob": 9.664802746556234e-06}, {"id": 1890, "seek": 544600, "start": 5454.64, "end": 5458.4, "text": " There's various semi-valid theoretical explanation", "tokens": [50364, 293, 718, 264, 1185, 11852, 1854, 295, 4464, 64, 13, 50576, 50576, 400, 300, 7029, 23223, 264, 2539, 3314, 13, 50796, 50796, 821, 311, 3683, 12909, 12, 3337, 327, 20864, 10835, 50984, 50984, 337, 341, 13, 51010, 51010, 583, 5120, 379, 11, 309, 311, 1850, 291, 643, 281, 360, 300, 13, 51164, 51164, 400, 797, 11, 456, 366, 28078, 300, 366, 659, 12, 32726, 1912, 51274, 51274, 294, 9953, 51, 284, 339, 337, 341, 13, 51318, 51464, 8278, 257, 857, 295, 441, 16, 420, 441, 17, 3890, 2144, 51554, 51554, 322, 264, 17443, 420, 6562, 13, 51672, 51672, 865, 11, 934, 291, 600, 8895, 428, 1185, 337, 257, 1326, 30992, 28346, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18899717002079405, "compression_ratio": 1.5399239543726235, "no_speech_prob": 9.664802746556234e-06}, {"id": 1891, "seek": 544600, "start": 5458.4, "end": 5458.92, "text": " for this.", "tokens": [50364, 293, 718, 264, 1185, 11852, 1854, 295, 4464, 64, 13, 50576, 50576, 400, 300, 7029, 23223, 264, 2539, 3314, 13, 50796, 50796, 821, 311, 3683, 12909, 12, 3337, 327, 20864, 10835, 50984, 50984, 337, 341, 13, 51010, 51010, 583, 5120, 379, 11, 309, 311, 1850, 291, 643, 281, 360, 300, 13, 51164, 51164, 400, 797, 11, 456, 366, 28078, 300, 366, 659, 12, 32726, 1912, 51274, 51274, 294, 9953, 51, 284, 339, 337, 341, 13, 51318, 51464, 8278, 257, 857, 295, 441, 16, 420, 441, 17, 3890, 2144, 51554, 51554, 322, 264, 17443, 420, 6562, 13, 51672, 51672, 865, 11, 934, 291, 600, 8895, 428, 1185, 337, 257, 1326, 30992, 28346, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18899717002079405, "compression_ratio": 1.5399239543726235, "no_speech_prob": 9.664802746556234e-06}, {"id": 1892, "seek": 544600, "start": 5458.92, "end": 5462.0, "text": " But experimentally, it's clear you need to do that.", "tokens": [50364, 293, 718, 264, 1185, 11852, 1854, 295, 4464, 64, 13, 50576, 50576, 400, 300, 7029, 23223, 264, 2539, 3314, 13, 50796, 50796, 821, 311, 3683, 12909, 12, 3337, 327, 20864, 10835, 50984, 50984, 337, 341, 13, 51010, 51010, 583, 5120, 379, 11, 309, 311, 1850, 291, 643, 281, 360, 300, 13, 51164, 51164, 400, 797, 11, 456, 366, 28078, 300, 366, 659, 12, 32726, 1912, 51274, 51274, 294, 9953, 51, 284, 339, 337, 341, 13, 51318, 51464, 8278, 257, 857, 295, 441, 16, 420, 441, 17, 3890, 2144, 51554, 51554, 322, 264, 17443, 420, 6562, 13, 51672, 51672, 865, 11, 934, 291, 600, 8895, 428, 1185, 337, 257, 1326, 30992, 28346, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18899717002079405, "compression_ratio": 1.5399239543726235, "no_speech_prob": 9.664802746556234e-06}, {"id": 1893, "seek": 544600, "start": 5462.0, "end": 5464.2, "text": " And again, there are schedules that are pre-programmed", "tokens": [50364, 293, 718, 264, 1185, 11852, 1854, 295, 4464, 64, 13, 50576, 50576, 400, 300, 7029, 23223, 264, 2539, 3314, 13, 50796, 50796, 821, 311, 3683, 12909, 12, 3337, 327, 20864, 10835, 50984, 50984, 337, 341, 13, 51010, 51010, 583, 5120, 379, 11, 309, 311, 1850, 291, 643, 281, 360, 300, 13, 51164, 51164, 400, 797, 11, 456, 366, 28078, 300, 366, 659, 12, 32726, 1912, 51274, 51274, 294, 9953, 51, 284, 339, 337, 341, 13, 51318, 51464, 8278, 257, 857, 295, 441, 16, 420, 441, 17, 3890, 2144, 51554, 51554, 322, 264, 17443, 420, 6562, 13, 51672, 51672, 865, 11, 934, 291, 600, 8895, 428, 1185, 337, 257, 1326, 30992, 28346, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18899717002079405, "compression_ratio": 1.5399239543726235, "no_speech_prob": 9.664802746556234e-06}, {"id": 1894, "seek": 544600, "start": 5464.2, "end": 5465.08, "text": " in PyTorch for this.", "tokens": [50364, 293, 718, 264, 1185, 11852, 1854, 295, 4464, 64, 13, 50576, 50576, 400, 300, 7029, 23223, 264, 2539, 3314, 13, 50796, 50796, 821, 311, 3683, 12909, 12, 3337, 327, 20864, 10835, 50984, 50984, 337, 341, 13, 51010, 51010, 583, 5120, 379, 11, 309, 311, 1850, 291, 643, 281, 360, 300, 13, 51164, 51164, 400, 797, 11, 456, 366, 28078, 300, 366, 659, 12, 32726, 1912, 51274, 51274, 294, 9953, 51, 284, 339, 337, 341, 13, 51318, 51464, 8278, 257, 857, 295, 441, 16, 420, 441, 17, 3890, 2144, 51554, 51554, 322, 264, 17443, 420, 6562, 13, 51672, 51672, 865, 11, 934, 291, 600, 8895, 428, 1185, 337, 257, 1326, 30992, 28346, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18899717002079405, "compression_ratio": 1.5399239543726235, "no_speech_prob": 9.664802746556234e-06}, {"id": 1895, "seek": 544600, "start": 5468.0, "end": 5469.8, "text": " Use a bit of L1 or L2 regularization", "tokens": [50364, 293, 718, 264, 1185, 11852, 1854, 295, 4464, 64, 13, 50576, 50576, 400, 300, 7029, 23223, 264, 2539, 3314, 13, 50796, 50796, 821, 311, 3683, 12909, 12, 3337, 327, 20864, 10835, 50984, 50984, 337, 341, 13, 51010, 51010, 583, 5120, 379, 11, 309, 311, 1850, 291, 643, 281, 360, 300, 13, 51164, 51164, 400, 797, 11, 456, 366, 28078, 300, 366, 659, 12, 32726, 1912, 51274, 51274, 294, 9953, 51, 284, 339, 337, 341, 13, 51318, 51464, 8278, 257, 857, 295, 441, 16, 420, 441, 17, 3890, 2144, 51554, 51554, 322, 264, 17443, 420, 6562, 13, 51672, 51672, 865, 11, 934, 291, 600, 8895, 428, 1185, 337, 257, 1326, 30992, 28346, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18899717002079405, "compression_ratio": 1.5399239543726235, "no_speech_prob": 9.664802746556234e-06}, {"id": 1896, "seek": 544600, "start": 5469.8, "end": 5472.16, "text": " on the weights or combination.", "tokens": [50364, 293, 718, 264, 1185, 11852, 1854, 295, 4464, 64, 13, 50576, 50576, 400, 300, 7029, 23223, 264, 2539, 3314, 13, 50796, 50796, 821, 311, 3683, 12909, 12, 3337, 327, 20864, 10835, 50984, 50984, 337, 341, 13, 51010, 51010, 583, 5120, 379, 11, 309, 311, 1850, 291, 643, 281, 360, 300, 13, 51164, 51164, 400, 797, 11, 456, 366, 28078, 300, 366, 659, 12, 32726, 1912, 51274, 51274, 294, 9953, 51, 284, 339, 337, 341, 13, 51318, 51464, 8278, 257, 857, 295, 441, 16, 420, 441, 17, 3890, 2144, 51554, 51554, 322, 264, 17443, 420, 6562, 13, 51672, 51672, 865, 11, 934, 291, 600, 8895, 428, 1185, 337, 257, 1326, 30992, 28346, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18899717002079405, "compression_ratio": 1.5399239543726235, "no_speech_prob": 9.664802746556234e-06}, {"id": 1897, "seek": 544600, "start": 5472.16, "end": 5475.08, "text": " Yeah, after you've trained your system for a few epochs,", "tokens": [50364, 293, 718, 264, 1185, 11852, 1854, 295, 4464, 64, 13, 50576, 50576, 400, 300, 7029, 23223, 264, 2539, 3314, 13, 50796, 50796, 821, 311, 3683, 12909, 12, 3337, 327, 20864, 10835, 50984, 50984, 337, 341, 13, 51010, 51010, 583, 5120, 379, 11, 309, 311, 1850, 291, 643, 281, 360, 300, 13, 51164, 51164, 400, 797, 11, 456, 366, 28078, 300, 366, 659, 12, 32726, 1912, 51274, 51274, 294, 9953, 51, 284, 339, 337, 341, 13, 51318, 51464, 8278, 257, 857, 295, 441, 16, 420, 441, 17, 3890, 2144, 51554, 51554, 322, 264, 17443, 420, 6562, 13, 51672, 51672, 865, 11, 934, 291, 600, 8895, 428, 1185, 337, 257, 1326, 30992, 28346, 11, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18899717002079405, "compression_ratio": 1.5399239543726235, "no_speech_prob": 9.664802746556234e-06}, {"id": 1898, "seek": 547508, "start": 5475.08, "end": 5477.6, "text": " you might want to kind of prune it,", "tokens": [50364, 291, 1062, 528, 281, 733, 295, 582, 2613, 309, 11, 50490, 50490, 13819, 264, 17443, 300, 366, 14115, 11, 50606, 50606, 652, 988, 300, 264, 17443, 362, 641, 733, 295, 7285, 2744, 13, 50758, 50758, 400, 437, 291, 360, 307, 291, 909, 257, 1433, 294, 264, 2063, 2445, 50884, 50884, 300, 1936, 9884, 16431, 264, 17443, 412, 633, 24784, 13, 51092, 51092, 509, 1062, 458, 437, 441, 17, 293, 441, 16, 3890, 2144, 1355, 51232, 51232, 498, 291, 600, 2726, 257, 1508, 294, 3479, 2539, 337, 2416, 51356, 51356, 979, 556, 2775, 293, 1507, 411, 300, 13, 51422, 51422, 467, 311, 588, 2689, 13, 51478, 51478, 583, 441, 17, 2171, 307, 1219, 3364, 21039, 13, 51632, 51782], "temperature": 0.0, "avg_logprob": -0.19977638501079142, "compression_ratio": 1.6629213483146068, "no_speech_prob": 1.0951578587992117e-05}, {"id": 1899, "seek": 547508, "start": 5477.6, "end": 5479.92, "text": " eliminate the weights that are useless,", "tokens": [50364, 291, 1062, 528, 281, 733, 295, 582, 2613, 309, 11, 50490, 50490, 13819, 264, 17443, 300, 366, 14115, 11, 50606, 50606, 652, 988, 300, 264, 17443, 362, 641, 733, 295, 7285, 2744, 13, 50758, 50758, 400, 437, 291, 360, 307, 291, 909, 257, 1433, 294, 264, 2063, 2445, 50884, 50884, 300, 1936, 9884, 16431, 264, 17443, 412, 633, 24784, 13, 51092, 51092, 509, 1062, 458, 437, 441, 17, 293, 441, 16, 3890, 2144, 1355, 51232, 51232, 498, 291, 600, 2726, 257, 1508, 294, 3479, 2539, 337, 2416, 51356, 51356, 979, 556, 2775, 293, 1507, 411, 300, 13, 51422, 51422, 467, 311, 588, 2689, 13, 51478, 51478, 583, 441, 17, 2171, 307, 1219, 3364, 21039, 13, 51632, 51782], "temperature": 0.0, "avg_logprob": -0.19977638501079142, "compression_ratio": 1.6629213483146068, "no_speech_prob": 1.0951578587992117e-05}, {"id": 1900, "seek": 547508, "start": 5479.92, "end": 5482.96, "text": " make sure that the weights have their kind of minimum size.", "tokens": [50364, 291, 1062, 528, 281, 733, 295, 582, 2613, 309, 11, 50490, 50490, 13819, 264, 17443, 300, 366, 14115, 11, 50606, 50606, 652, 988, 300, 264, 17443, 362, 641, 733, 295, 7285, 2744, 13, 50758, 50758, 400, 437, 291, 360, 307, 291, 909, 257, 1433, 294, 264, 2063, 2445, 50884, 50884, 300, 1936, 9884, 16431, 264, 17443, 412, 633, 24784, 13, 51092, 51092, 509, 1062, 458, 437, 441, 17, 293, 441, 16, 3890, 2144, 1355, 51232, 51232, 498, 291, 600, 2726, 257, 1508, 294, 3479, 2539, 337, 2416, 51356, 51356, 979, 556, 2775, 293, 1507, 411, 300, 13, 51422, 51422, 467, 311, 588, 2689, 13, 51478, 51478, 583, 441, 17, 2171, 307, 1219, 3364, 21039, 13, 51632, 51782], "temperature": 0.0, "avg_logprob": -0.19977638501079142, "compression_ratio": 1.6629213483146068, "no_speech_prob": 1.0951578587992117e-05}, {"id": 1901, "seek": 547508, "start": 5482.96, "end": 5485.48, "text": " And what you do is you add a term in the cost function", "tokens": [50364, 291, 1062, 528, 281, 733, 295, 582, 2613, 309, 11, 50490, 50490, 13819, 264, 17443, 300, 366, 14115, 11, 50606, 50606, 652, 988, 300, 264, 17443, 362, 641, 733, 295, 7285, 2744, 13, 50758, 50758, 400, 437, 291, 360, 307, 291, 909, 257, 1433, 294, 264, 2063, 2445, 50884, 50884, 300, 1936, 9884, 16431, 264, 17443, 412, 633, 24784, 13, 51092, 51092, 509, 1062, 458, 437, 441, 17, 293, 441, 16, 3890, 2144, 1355, 51232, 51232, 498, 291, 600, 2726, 257, 1508, 294, 3479, 2539, 337, 2416, 51356, 51356, 979, 556, 2775, 293, 1507, 411, 300, 13, 51422, 51422, 467, 311, 588, 2689, 13, 51478, 51478, 583, 441, 17, 2171, 307, 1219, 3364, 21039, 13, 51632, 51782], "temperature": 0.0, "avg_logprob": -0.19977638501079142, "compression_ratio": 1.6629213483146068, "no_speech_prob": 1.0951578587992117e-05}, {"id": 1902, "seek": 547508, "start": 5485.48, "end": 5489.64, "text": " that basically shrinks the weights at every iteration.", "tokens": [50364, 291, 1062, 528, 281, 733, 295, 582, 2613, 309, 11, 50490, 50490, 13819, 264, 17443, 300, 366, 14115, 11, 50606, 50606, 652, 988, 300, 264, 17443, 362, 641, 733, 295, 7285, 2744, 13, 50758, 50758, 400, 437, 291, 360, 307, 291, 909, 257, 1433, 294, 264, 2063, 2445, 50884, 50884, 300, 1936, 9884, 16431, 264, 17443, 412, 633, 24784, 13, 51092, 51092, 509, 1062, 458, 437, 441, 17, 293, 441, 16, 3890, 2144, 1355, 51232, 51232, 498, 291, 600, 2726, 257, 1508, 294, 3479, 2539, 337, 2416, 51356, 51356, 979, 556, 2775, 293, 1507, 411, 300, 13, 51422, 51422, 467, 311, 588, 2689, 13, 51478, 51478, 583, 441, 17, 2171, 307, 1219, 3364, 21039, 13, 51632, 51782], "temperature": 0.0, "avg_logprob": -0.19977638501079142, "compression_ratio": 1.6629213483146068, "no_speech_prob": 1.0951578587992117e-05}, {"id": 1903, "seek": 547508, "start": 5489.64, "end": 5492.44, "text": " You might know what L2 and L1 regularization means", "tokens": [50364, 291, 1062, 528, 281, 733, 295, 582, 2613, 309, 11, 50490, 50490, 13819, 264, 17443, 300, 366, 14115, 11, 50606, 50606, 652, 988, 300, 264, 17443, 362, 641, 733, 295, 7285, 2744, 13, 50758, 50758, 400, 437, 291, 360, 307, 291, 909, 257, 1433, 294, 264, 2063, 2445, 50884, 50884, 300, 1936, 9884, 16431, 264, 17443, 412, 633, 24784, 13, 51092, 51092, 509, 1062, 458, 437, 441, 17, 293, 441, 16, 3890, 2144, 1355, 51232, 51232, 498, 291, 600, 2726, 257, 1508, 294, 3479, 2539, 337, 2416, 51356, 51356, 979, 556, 2775, 293, 1507, 411, 300, 13, 51422, 51422, 467, 311, 588, 2689, 13, 51478, 51478, 583, 441, 17, 2171, 307, 1219, 3364, 21039, 13, 51632, 51782], "temperature": 0.0, "avg_logprob": -0.19977638501079142, "compression_ratio": 1.6629213483146068, "no_speech_prob": 1.0951578587992117e-05}, {"id": 1904, "seek": 547508, "start": 5492.44, "end": 5494.92, "text": " if you've taken a class in machine learning for large", "tokens": [50364, 291, 1062, 528, 281, 733, 295, 582, 2613, 309, 11, 50490, 50490, 13819, 264, 17443, 300, 366, 14115, 11, 50606, 50606, 652, 988, 300, 264, 17443, 362, 641, 733, 295, 7285, 2744, 13, 50758, 50758, 400, 437, 291, 360, 307, 291, 909, 257, 1433, 294, 264, 2063, 2445, 50884, 50884, 300, 1936, 9884, 16431, 264, 17443, 412, 633, 24784, 13, 51092, 51092, 509, 1062, 458, 437, 441, 17, 293, 441, 16, 3890, 2144, 1355, 51232, 51232, 498, 291, 600, 2726, 257, 1508, 294, 3479, 2539, 337, 2416, 51356, 51356, 979, 556, 2775, 293, 1507, 411, 300, 13, 51422, 51422, 467, 311, 588, 2689, 13, 51478, 51478, 583, 441, 17, 2171, 307, 1219, 3364, 21039, 13, 51632, 51782], "temperature": 0.0, "avg_logprob": -0.19977638501079142, "compression_ratio": 1.6629213483146068, "no_speech_prob": 1.0951578587992117e-05}, {"id": 1905, "seek": 547508, "start": 5494.92, "end": 5496.24, "text": " decongression and stuff like that.", "tokens": [50364, 291, 1062, 528, 281, 733, 295, 582, 2613, 309, 11, 50490, 50490, 13819, 264, 17443, 300, 366, 14115, 11, 50606, 50606, 652, 988, 300, 264, 17443, 362, 641, 733, 295, 7285, 2744, 13, 50758, 50758, 400, 437, 291, 360, 307, 291, 909, 257, 1433, 294, 264, 2063, 2445, 50884, 50884, 300, 1936, 9884, 16431, 264, 17443, 412, 633, 24784, 13, 51092, 51092, 509, 1062, 458, 437, 441, 17, 293, 441, 16, 3890, 2144, 1355, 51232, 51232, 498, 291, 600, 2726, 257, 1508, 294, 3479, 2539, 337, 2416, 51356, 51356, 979, 556, 2775, 293, 1507, 411, 300, 13, 51422, 51422, 467, 311, 588, 2689, 13, 51478, 51478, 583, 441, 17, 2171, 307, 1219, 3364, 21039, 13, 51632, 51782], "temperature": 0.0, "avg_logprob": -0.19977638501079142, "compression_ratio": 1.6629213483146068, "no_speech_prob": 1.0951578587992117e-05}, {"id": 1906, "seek": 547508, "start": 5496.24, "end": 5497.36, "text": " It's very common.", "tokens": [50364, 291, 1062, 528, 281, 733, 295, 582, 2613, 309, 11, 50490, 50490, 13819, 264, 17443, 300, 366, 14115, 11, 50606, 50606, 652, 988, 300, 264, 17443, 362, 641, 733, 295, 7285, 2744, 13, 50758, 50758, 400, 437, 291, 360, 307, 291, 909, 257, 1433, 294, 264, 2063, 2445, 50884, 50884, 300, 1936, 9884, 16431, 264, 17443, 412, 633, 24784, 13, 51092, 51092, 509, 1062, 458, 437, 441, 17, 293, 441, 16, 3890, 2144, 1355, 51232, 51232, 498, 291, 600, 2726, 257, 1508, 294, 3479, 2539, 337, 2416, 51356, 51356, 979, 556, 2775, 293, 1507, 411, 300, 13, 51422, 51422, 467, 311, 588, 2689, 13, 51478, 51478, 583, 441, 17, 2171, 307, 1219, 3364, 21039, 13, 51632, 51782], "temperature": 0.0, "avg_logprob": -0.19977638501079142, "compression_ratio": 1.6629213483146068, "no_speech_prob": 1.0951578587992117e-05}, {"id": 1907, "seek": 547508, "start": 5497.36, "end": 5500.44, "text": " But L2 sometimes is called weight decay.", "tokens": [50364, 291, 1062, 528, 281, 733, 295, 582, 2613, 309, 11, 50490, 50490, 13819, 264, 17443, 300, 366, 14115, 11, 50606, 50606, 652, 988, 300, 264, 17443, 362, 641, 733, 295, 7285, 2744, 13, 50758, 50758, 400, 437, 291, 360, 307, 291, 909, 257, 1433, 294, 264, 2063, 2445, 50884, 50884, 300, 1936, 9884, 16431, 264, 17443, 412, 633, 24784, 13, 51092, 51092, 509, 1062, 458, 437, 441, 17, 293, 441, 16, 3890, 2144, 1355, 51232, 51232, 498, 291, 600, 2726, 257, 1508, 294, 3479, 2539, 337, 2416, 51356, 51356, 979, 556, 2775, 293, 1507, 411, 300, 13, 51422, 51422, 467, 311, 588, 2689, 13, 51478, 51478, 583, 441, 17, 2171, 307, 1219, 3364, 21039, 13, 51632, 51782], "temperature": 0.0, "avg_logprob": -0.19977638501079142, "compression_ratio": 1.6629213483146068, "no_speech_prob": 1.0951578587992117e-05}, {"id": 1908, "seek": 550044, "start": 5500.44, "end": 5507.44, "text": " So this, again, are pre-programmed in PyTorch.", "tokens": [50364, 407, 341, 11, 797, 11, 366, 659, 12, 32726, 1912, 294, 9953, 51, 284, 339, 13, 50714, 50714, 316, 4282, 300, 257, 688, 295, 561, 764, 337, 2416, 18161, 36170, 50834, 50834, 307, 257, 4282, 1219, 3270, 346, 13, 50982, 50982, 17675, 346, 307, 12270, 382, 733, 295, 257, 4583, 294, 9953, 51, 284, 339, 13, 51170, 51170, 400, 437, 341, 4583, 775, 307, 300, 309, 2516, 264, 1785, 295, 257, 4583, 51426, 51426, 293, 309, 16979, 16137, 257, 1629, 16068, 295, 264, 6815, 51648, 51648, 293, 1936, 6352, 552, 281, 4018, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.12349211309373993, "compression_ratio": 1.6057692307692308, "no_speech_prob": 1.5205772797344252e-05}, {"id": 1909, "seek": 550044, "start": 5507.44, "end": 5509.839999999999, "text": " A trick that a lot of people use for large neural nets", "tokens": [50364, 407, 341, 11, 797, 11, 366, 659, 12, 32726, 1912, 294, 9953, 51, 284, 339, 13, 50714, 50714, 316, 4282, 300, 257, 688, 295, 561, 764, 337, 2416, 18161, 36170, 50834, 50834, 307, 257, 4282, 1219, 3270, 346, 13, 50982, 50982, 17675, 346, 307, 12270, 382, 733, 295, 257, 4583, 294, 9953, 51, 284, 339, 13, 51170, 51170, 400, 437, 341, 4583, 775, 307, 300, 309, 2516, 264, 1785, 295, 257, 4583, 51426, 51426, 293, 309, 16979, 16137, 257, 1629, 16068, 295, 264, 6815, 51648, 51648, 293, 1936, 6352, 552, 281, 4018, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.12349211309373993, "compression_ratio": 1.6057692307692308, "no_speech_prob": 1.5205772797344252e-05}, {"id": 1910, "seek": 550044, "start": 5509.839999999999, "end": 5512.799999999999, "text": " is a trick called dropout.", "tokens": [50364, 407, 341, 11, 797, 11, 366, 659, 12, 32726, 1912, 294, 9953, 51, 284, 339, 13, 50714, 50714, 316, 4282, 300, 257, 688, 295, 561, 764, 337, 2416, 18161, 36170, 50834, 50834, 307, 257, 4282, 1219, 3270, 346, 13, 50982, 50982, 17675, 346, 307, 12270, 382, 733, 295, 257, 4583, 294, 9953, 51, 284, 339, 13, 51170, 51170, 400, 437, 341, 4583, 775, 307, 300, 309, 2516, 264, 1785, 295, 257, 4583, 51426, 51426, 293, 309, 16979, 16137, 257, 1629, 16068, 295, 264, 6815, 51648, 51648, 293, 1936, 6352, 552, 281, 4018, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.12349211309373993, "compression_ratio": 1.6057692307692308, "no_speech_prob": 1.5205772797344252e-05}, {"id": 1911, "seek": 550044, "start": 5512.799999999999, "end": 5516.5599999999995, "text": " Dropout is implemented as kind of a layer in PyTorch.", "tokens": [50364, 407, 341, 11, 797, 11, 366, 659, 12, 32726, 1912, 294, 9953, 51, 284, 339, 13, 50714, 50714, 316, 4282, 300, 257, 688, 295, 561, 764, 337, 2416, 18161, 36170, 50834, 50834, 307, 257, 4282, 1219, 3270, 346, 13, 50982, 50982, 17675, 346, 307, 12270, 382, 733, 295, 257, 4583, 294, 9953, 51, 284, 339, 13, 51170, 51170, 400, 437, 341, 4583, 775, 307, 300, 309, 2516, 264, 1785, 295, 257, 4583, 51426, 51426, 293, 309, 16979, 16137, 257, 1629, 16068, 295, 264, 6815, 51648, 51648, 293, 1936, 6352, 552, 281, 4018, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.12349211309373993, "compression_ratio": 1.6057692307692308, "no_speech_prob": 1.5205772797344252e-05}, {"id": 1912, "seek": 550044, "start": 5516.5599999999995, "end": 5521.679999999999, "text": " And what this layer does is that it takes the state of a layer", "tokens": [50364, 407, 341, 11, 797, 11, 366, 659, 12, 32726, 1912, 294, 9953, 51, 284, 339, 13, 50714, 50714, 316, 4282, 300, 257, 688, 295, 561, 764, 337, 2416, 18161, 36170, 50834, 50834, 307, 257, 4282, 1219, 3270, 346, 13, 50982, 50982, 17675, 346, 307, 12270, 382, 733, 295, 257, 4583, 294, 9953, 51, 284, 339, 13, 51170, 51170, 400, 437, 341, 4583, 775, 307, 300, 309, 2516, 264, 1785, 295, 257, 4583, 51426, 51426, 293, 309, 16979, 16137, 257, 1629, 16068, 295, 264, 6815, 51648, 51648, 293, 1936, 6352, 552, 281, 4018, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.12349211309373993, "compression_ratio": 1.6057692307692308, "no_speech_prob": 1.5205772797344252e-05}, {"id": 1913, "seek": 550044, "start": 5521.679999999999, "end": 5526.12, "text": " and it randomly picks a certain proportion of the units", "tokens": [50364, 407, 341, 11, 797, 11, 366, 659, 12, 32726, 1912, 294, 9953, 51, 284, 339, 13, 50714, 50714, 316, 4282, 300, 257, 688, 295, 561, 764, 337, 2416, 18161, 36170, 50834, 50834, 307, 257, 4282, 1219, 3270, 346, 13, 50982, 50982, 17675, 346, 307, 12270, 382, 733, 295, 257, 4583, 294, 9953, 51, 284, 339, 13, 51170, 51170, 400, 437, 341, 4583, 775, 307, 300, 309, 2516, 264, 1785, 295, 257, 4583, 51426, 51426, 293, 309, 16979, 16137, 257, 1629, 16068, 295, 264, 6815, 51648, 51648, 293, 1936, 6352, 552, 281, 4018, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.12349211309373993, "compression_ratio": 1.6057692307692308, "no_speech_prob": 1.5205772797344252e-05}, {"id": 1914, "seek": 550044, "start": 5526.12, "end": 5529.04, "text": " and basically sets them to zero.", "tokens": [50364, 407, 341, 11, 797, 11, 366, 659, 12, 32726, 1912, 294, 9953, 51, 284, 339, 13, 50714, 50714, 316, 4282, 300, 257, 688, 295, 561, 764, 337, 2416, 18161, 36170, 50834, 50834, 307, 257, 4282, 1219, 3270, 346, 13, 50982, 50982, 17675, 346, 307, 12270, 382, 733, 295, 257, 4583, 294, 9953, 51, 284, 339, 13, 51170, 51170, 400, 437, 341, 4583, 775, 307, 300, 309, 2516, 264, 1785, 295, 257, 4583, 51426, 51426, 293, 309, 16979, 16137, 257, 1629, 16068, 295, 264, 6815, 51648, 51648, 293, 1936, 6352, 552, 281, 4018, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.12349211309373993, "compression_ratio": 1.6057692307692308, "no_speech_prob": 1.5205772797344252e-05}, {"id": 1915, "seek": 552904, "start": 5529.04, "end": 5533.36, "text": " So you can think of it as a mask, a layer that applies", "tokens": [50364, 407, 291, 393, 519, 295, 309, 382, 257, 6094, 11, 257, 4583, 300, 13165, 50580, 50580, 257, 6094, 281, 364, 4846, 13, 50670, 50670, 400, 264, 6094, 307, 16979, 6183, 412, 633, 6889, 13, 50840, 50840, 400, 512, 16068, 295, 264, 6094, 366, 992, 11, 51024, 51024, 264, 2158, 294, 264, 6094, 366, 992, 281, 4018, 11, 512, 366, 992, 281, 472, 11, 51160, 51160, 293, 291, 12972, 264, 4846, 538, 264, 6094, 13, 51252, 51252, 407, 787, 257, 25993, 295, 264, 6815, 366, 4350, 281, 1710, 51422, 51422, 281, 264, 958, 4583, 11, 4476, 13, 51522, 51522, 663, 311, 1219, 3270, 346, 13, 51598, 51598, 400, 264, 1778, 337, 884, 341, 307, 300, 309, 5874, 264, 4985, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11378809663115955, "compression_ratio": 1.7791666666666666, "no_speech_prob": 2.391679117863532e-05}, {"id": 1916, "seek": 552904, "start": 5533.36, "end": 5535.16, "text": " a mask to an input.", "tokens": [50364, 407, 291, 393, 519, 295, 309, 382, 257, 6094, 11, 257, 4583, 300, 13165, 50580, 50580, 257, 6094, 281, 364, 4846, 13, 50670, 50670, 400, 264, 6094, 307, 16979, 6183, 412, 633, 6889, 13, 50840, 50840, 400, 512, 16068, 295, 264, 6094, 366, 992, 11, 51024, 51024, 264, 2158, 294, 264, 6094, 366, 992, 281, 4018, 11, 512, 366, 992, 281, 472, 11, 51160, 51160, 293, 291, 12972, 264, 4846, 538, 264, 6094, 13, 51252, 51252, 407, 787, 257, 25993, 295, 264, 6815, 366, 4350, 281, 1710, 51422, 51422, 281, 264, 958, 4583, 11, 4476, 13, 51522, 51522, 663, 311, 1219, 3270, 346, 13, 51598, 51598, 400, 264, 1778, 337, 884, 341, 307, 300, 309, 5874, 264, 4985, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11378809663115955, "compression_ratio": 1.7791666666666666, "no_speech_prob": 2.391679117863532e-05}, {"id": 1917, "seek": 552904, "start": 5535.16, "end": 5538.56, "text": " And the mask is randomly picked at every sample.", "tokens": [50364, 407, 291, 393, 519, 295, 309, 382, 257, 6094, 11, 257, 4583, 300, 13165, 50580, 50580, 257, 6094, 281, 364, 4846, 13, 50670, 50670, 400, 264, 6094, 307, 16979, 6183, 412, 633, 6889, 13, 50840, 50840, 400, 512, 16068, 295, 264, 6094, 366, 992, 11, 51024, 51024, 264, 2158, 294, 264, 6094, 366, 992, 281, 4018, 11, 512, 366, 992, 281, 472, 11, 51160, 51160, 293, 291, 12972, 264, 4846, 538, 264, 6094, 13, 51252, 51252, 407, 787, 257, 25993, 295, 264, 6815, 366, 4350, 281, 1710, 51422, 51422, 281, 264, 958, 4583, 11, 4476, 13, 51522, 51522, 663, 311, 1219, 3270, 346, 13, 51598, 51598, 400, 264, 1778, 337, 884, 341, 307, 300, 309, 5874, 264, 4985, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11378809663115955, "compression_ratio": 1.7791666666666666, "no_speech_prob": 2.391679117863532e-05}, {"id": 1918, "seek": 552904, "start": 5538.56, "end": 5542.24, "text": " And some proportion of the mask are set,", "tokens": [50364, 407, 291, 393, 519, 295, 309, 382, 257, 6094, 11, 257, 4583, 300, 13165, 50580, 50580, 257, 6094, 281, 364, 4846, 13, 50670, 50670, 400, 264, 6094, 307, 16979, 6183, 412, 633, 6889, 13, 50840, 50840, 400, 512, 16068, 295, 264, 6094, 366, 992, 11, 51024, 51024, 264, 2158, 294, 264, 6094, 366, 992, 281, 4018, 11, 512, 366, 992, 281, 472, 11, 51160, 51160, 293, 291, 12972, 264, 4846, 538, 264, 6094, 13, 51252, 51252, 407, 787, 257, 25993, 295, 264, 6815, 366, 4350, 281, 1710, 51422, 51422, 281, 264, 958, 4583, 11, 4476, 13, 51522, 51522, 663, 311, 1219, 3270, 346, 13, 51598, 51598, 400, 264, 1778, 337, 884, 341, 307, 300, 309, 5874, 264, 4985, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11378809663115955, "compression_ratio": 1.7791666666666666, "no_speech_prob": 2.391679117863532e-05}, {"id": 1919, "seek": 552904, "start": 5542.24, "end": 5544.96, "text": " the value in the mask are set to zero, some are set to one,", "tokens": [50364, 407, 291, 393, 519, 295, 309, 382, 257, 6094, 11, 257, 4583, 300, 13165, 50580, 50580, 257, 6094, 281, 364, 4846, 13, 50670, 50670, 400, 264, 6094, 307, 16979, 6183, 412, 633, 6889, 13, 50840, 50840, 400, 512, 16068, 295, 264, 6094, 366, 992, 11, 51024, 51024, 264, 2158, 294, 264, 6094, 366, 992, 281, 4018, 11, 512, 366, 992, 281, 472, 11, 51160, 51160, 293, 291, 12972, 264, 4846, 538, 264, 6094, 13, 51252, 51252, 407, 787, 257, 25993, 295, 264, 6815, 366, 4350, 281, 1710, 51422, 51422, 281, 264, 958, 4583, 11, 4476, 13, 51522, 51522, 663, 311, 1219, 3270, 346, 13, 51598, 51598, 400, 264, 1778, 337, 884, 341, 307, 300, 309, 5874, 264, 4985, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11378809663115955, "compression_ratio": 1.7791666666666666, "no_speech_prob": 2.391679117863532e-05}, {"id": 1920, "seek": 552904, "start": 5544.96, "end": 5546.8, "text": " and you multiply the input by the mask.", "tokens": [50364, 407, 291, 393, 519, 295, 309, 382, 257, 6094, 11, 257, 4583, 300, 13165, 50580, 50580, 257, 6094, 281, 364, 4846, 13, 50670, 50670, 400, 264, 6094, 307, 16979, 6183, 412, 633, 6889, 13, 50840, 50840, 400, 512, 16068, 295, 264, 6094, 366, 992, 11, 51024, 51024, 264, 2158, 294, 264, 6094, 366, 992, 281, 4018, 11, 512, 366, 992, 281, 472, 11, 51160, 51160, 293, 291, 12972, 264, 4846, 538, 264, 6094, 13, 51252, 51252, 407, 787, 257, 25993, 295, 264, 6815, 366, 4350, 281, 1710, 51422, 51422, 281, 264, 958, 4583, 11, 4476, 13, 51522, 51522, 663, 311, 1219, 3270, 346, 13, 51598, 51598, 400, 264, 1778, 337, 884, 341, 307, 300, 309, 5874, 264, 4985, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11378809663115955, "compression_ratio": 1.7791666666666666, "no_speech_prob": 2.391679117863532e-05}, {"id": 1921, "seek": 552904, "start": 5546.8, "end": 5550.2, "text": " So only a subset of the units are allowed to speak", "tokens": [50364, 407, 291, 393, 519, 295, 309, 382, 257, 6094, 11, 257, 4583, 300, 13165, 50580, 50580, 257, 6094, 281, 364, 4846, 13, 50670, 50670, 400, 264, 6094, 307, 16979, 6183, 412, 633, 6889, 13, 50840, 50840, 400, 512, 16068, 295, 264, 6094, 366, 992, 11, 51024, 51024, 264, 2158, 294, 264, 6094, 366, 992, 281, 4018, 11, 512, 366, 992, 281, 472, 11, 51160, 51160, 293, 291, 12972, 264, 4846, 538, 264, 6094, 13, 51252, 51252, 407, 787, 257, 25993, 295, 264, 6815, 366, 4350, 281, 1710, 51422, 51422, 281, 264, 958, 4583, 11, 4476, 13, 51522, 51522, 663, 311, 1219, 3270, 346, 13, 51598, 51598, 400, 264, 1778, 337, 884, 341, 307, 300, 309, 5874, 264, 4985, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11378809663115955, "compression_ratio": 1.7791666666666666, "no_speech_prob": 2.391679117863532e-05}, {"id": 1922, "seek": 552904, "start": 5550.2, "end": 5552.2, "text": " to the next layer, essentially.", "tokens": [50364, 407, 291, 393, 519, 295, 309, 382, 257, 6094, 11, 257, 4583, 300, 13165, 50580, 50580, 257, 6094, 281, 364, 4846, 13, 50670, 50670, 400, 264, 6094, 307, 16979, 6183, 412, 633, 6889, 13, 50840, 50840, 400, 512, 16068, 295, 264, 6094, 366, 992, 11, 51024, 51024, 264, 2158, 294, 264, 6094, 366, 992, 281, 4018, 11, 512, 366, 992, 281, 472, 11, 51160, 51160, 293, 291, 12972, 264, 4846, 538, 264, 6094, 13, 51252, 51252, 407, 787, 257, 25993, 295, 264, 6815, 366, 4350, 281, 1710, 51422, 51422, 281, 264, 958, 4583, 11, 4476, 13, 51522, 51522, 663, 311, 1219, 3270, 346, 13, 51598, 51598, 400, 264, 1778, 337, 884, 341, 307, 300, 309, 5874, 264, 4985, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11378809663115955, "compression_ratio": 1.7791666666666666, "no_speech_prob": 2.391679117863532e-05}, {"id": 1923, "seek": 552904, "start": 5552.2, "end": 5553.72, "text": " That's called dropout.", "tokens": [50364, 407, 291, 393, 519, 295, 309, 382, 257, 6094, 11, 257, 4583, 300, 13165, 50580, 50580, 257, 6094, 281, 364, 4846, 13, 50670, 50670, 400, 264, 6094, 307, 16979, 6183, 412, 633, 6889, 13, 50840, 50840, 400, 512, 16068, 295, 264, 6094, 366, 992, 11, 51024, 51024, 264, 2158, 294, 264, 6094, 366, 992, 281, 4018, 11, 512, 366, 992, 281, 472, 11, 51160, 51160, 293, 291, 12972, 264, 4846, 538, 264, 6094, 13, 51252, 51252, 407, 787, 257, 25993, 295, 264, 6815, 366, 4350, 281, 1710, 51422, 51422, 281, 264, 958, 4583, 11, 4476, 13, 51522, 51522, 663, 311, 1219, 3270, 346, 13, 51598, 51598, 400, 264, 1778, 337, 884, 341, 307, 300, 309, 5874, 264, 4985, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11378809663115955, "compression_ratio": 1.7791666666666666, "no_speech_prob": 2.391679117863532e-05}, {"id": 1924, "seek": 552904, "start": 5553.72, "end": 5557.24, "text": " And the reason for doing this is that it forces the unit", "tokens": [50364, 407, 291, 393, 519, 295, 309, 382, 257, 6094, 11, 257, 4583, 300, 13165, 50580, 50580, 257, 6094, 281, 364, 4846, 13, 50670, 50670, 400, 264, 6094, 307, 16979, 6183, 412, 633, 6889, 13, 50840, 50840, 400, 512, 16068, 295, 264, 6094, 366, 992, 11, 51024, 51024, 264, 2158, 294, 264, 6094, 366, 992, 281, 4018, 11, 512, 366, 992, 281, 472, 11, 51160, 51160, 293, 291, 12972, 264, 4846, 538, 264, 6094, 13, 51252, 51252, 407, 787, 257, 25993, 295, 264, 6815, 366, 4350, 281, 1710, 51422, 51422, 281, 264, 958, 4583, 11, 4476, 13, 51522, 51522, 663, 311, 1219, 3270, 346, 13, 51598, 51598, 400, 264, 1778, 337, 884, 341, 307, 300, 309, 5874, 264, 4985, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11378809663115955, "compression_ratio": 1.7791666666666666, "no_speech_prob": 2.391679117863532e-05}, {"id": 1925, "seek": 555724, "start": 5557.24, "end": 5559.48, "text": " to distribute the information about the input", "tokens": [50364, 281, 20594, 264, 1589, 466, 264, 4846, 50476, 50476, 670, 3866, 6815, 2602, 295, 733, 295, 36645, 1203, 50726, 50726, 666, 257, 1359, 1230, 13, 50846, 50846, 400, 309, 1669, 264, 1185, 544, 13956, 13, 50966, 50966, 821, 311, 512, 20864, 12869, 337, 983, 309, 775, 300, 13, 51156, 51156, 37933, 379, 11, 498, 291, 909, 341, 281, 257, 2416, 3209, 11, 51320, 51320, 291, 483, 1101, 2674, 2144, 6713, 13, 51462, 51462, 509, 483, 1101, 3389, 322, 264, 1500, 992, 13, 51614, 51614, 467, 311, 406, 1009, 4818, 11, 457, 309, 3665, 13, 51714, 51850], "temperature": 0.0, "avg_logprob": -0.12888105548157983, "compression_ratio": 1.576, "no_speech_prob": 3.785050012083957e-06}, {"id": 1926, "seek": 555724, "start": 5559.48, "end": 5564.48, "text": " over multiple units instead of kind of squeezing everything", "tokens": [50364, 281, 20594, 264, 1589, 466, 264, 4846, 50476, 50476, 670, 3866, 6815, 2602, 295, 733, 295, 36645, 1203, 50726, 50726, 666, 257, 1359, 1230, 13, 50846, 50846, 400, 309, 1669, 264, 1185, 544, 13956, 13, 50966, 50966, 821, 311, 512, 20864, 12869, 337, 983, 309, 775, 300, 13, 51156, 51156, 37933, 379, 11, 498, 291, 909, 341, 281, 257, 2416, 3209, 11, 51320, 51320, 291, 483, 1101, 2674, 2144, 6713, 13, 51462, 51462, 509, 483, 1101, 3389, 322, 264, 1500, 992, 13, 51614, 51614, 467, 311, 406, 1009, 4818, 11, 457, 309, 3665, 13, 51714, 51850], "temperature": 0.0, "avg_logprob": -0.12888105548157983, "compression_ratio": 1.576, "no_speech_prob": 3.785050012083957e-06}, {"id": 1927, "seek": 555724, "start": 5564.48, "end": 5566.88, "text": " into a small number.", "tokens": [50364, 281, 20594, 264, 1589, 466, 264, 4846, 50476, 50476, 670, 3866, 6815, 2602, 295, 733, 295, 36645, 1203, 50726, 50726, 666, 257, 1359, 1230, 13, 50846, 50846, 400, 309, 1669, 264, 1185, 544, 13956, 13, 50966, 50966, 821, 311, 512, 20864, 12869, 337, 983, 309, 775, 300, 13, 51156, 51156, 37933, 379, 11, 498, 291, 909, 341, 281, 257, 2416, 3209, 11, 51320, 51320, 291, 483, 1101, 2674, 2144, 6713, 13, 51462, 51462, 509, 483, 1101, 3389, 322, 264, 1500, 992, 13, 51614, 51614, 467, 311, 406, 1009, 4818, 11, 457, 309, 3665, 13, 51714, 51850], "temperature": 0.0, "avg_logprob": -0.12888105548157983, "compression_ratio": 1.576, "no_speech_prob": 3.785050012083957e-06}, {"id": 1928, "seek": 555724, "start": 5566.88, "end": 5569.28, "text": " And it makes the system more robust.", "tokens": [50364, 281, 20594, 264, 1589, 466, 264, 4846, 50476, 50476, 670, 3866, 6815, 2602, 295, 733, 295, 36645, 1203, 50726, 50726, 666, 257, 1359, 1230, 13, 50846, 50846, 400, 309, 1669, 264, 1185, 544, 13956, 13, 50966, 50966, 821, 311, 512, 20864, 12869, 337, 983, 309, 775, 300, 13, 51156, 51156, 37933, 379, 11, 498, 291, 909, 341, 281, 257, 2416, 3209, 11, 51320, 51320, 291, 483, 1101, 2674, 2144, 6713, 13, 51462, 51462, 509, 483, 1101, 3389, 322, 264, 1500, 992, 13, 51614, 51614, 467, 311, 406, 1009, 4818, 11, 457, 309, 3665, 13, 51714, 51850], "temperature": 0.0, "avg_logprob": -0.12888105548157983, "compression_ratio": 1.576, "no_speech_prob": 3.785050012083957e-06}, {"id": 1929, "seek": 555724, "start": 5569.28, "end": 5573.08, "text": " There's some theoretical arguments for why it does that.", "tokens": [50364, 281, 20594, 264, 1589, 466, 264, 4846, 50476, 50476, 670, 3866, 6815, 2602, 295, 733, 295, 36645, 1203, 50726, 50726, 666, 257, 1359, 1230, 13, 50846, 50846, 400, 309, 1669, 264, 1185, 544, 13956, 13, 50966, 50966, 821, 311, 512, 20864, 12869, 337, 983, 309, 775, 300, 13, 51156, 51156, 37933, 379, 11, 498, 291, 909, 341, 281, 257, 2416, 3209, 11, 51320, 51320, 291, 483, 1101, 2674, 2144, 6713, 13, 51462, 51462, 509, 483, 1101, 3389, 322, 264, 1500, 992, 13, 51614, 51614, 467, 311, 406, 1009, 4818, 11, 457, 309, 3665, 13, 51714, 51850], "temperature": 0.0, "avg_logprob": -0.12888105548157983, "compression_ratio": 1.576, "no_speech_prob": 3.785050012083957e-06}, {"id": 1930, "seek": 555724, "start": 5573.08, "end": 5576.36, "text": " Experimentally, if you add this to a large network,", "tokens": [50364, 281, 20594, 264, 1589, 466, 264, 4846, 50476, 50476, 670, 3866, 6815, 2602, 295, 733, 295, 36645, 1203, 50726, 50726, 666, 257, 1359, 1230, 13, 50846, 50846, 400, 309, 1669, 264, 1185, 544, 13956, 13, 50966, 50966, 821, 311, 512, 20864, 12869, 337, 983, 309, 775, 300, 13, 51156, 51156, 37933, 379, 11, 498, 291, 909, 341, 281, 257, 2416, 3209, 11, 51320, 51320, 291, 483, 1101, 2674, 2144, 6713, 13, 51462, 51462, 509, 483, 1101, 3389, 322, 264, 1500, 992, 13, 51614, 51614, 467, 311, 406, 1009, 4818, 11, 457, 309, 3665, 13, 51714, 51850], "temperature": 0.0, "avg_logprob": -0.12888105548157983, "compression_ratio": 1.576, "no_speech_prob": 3.785050012083957e-06}, {"id": 1931, "seek": 555724, "start": 5576.36, "end": 5579.2, "text": " you get better generalization error.", "tokens": [50364, 281, 20594, 264, 1589, 466, 264, 4846, 50476, 50476, 670, 3866, 6815, 2602, 295, 733, 295, 36645, 1203, 50726, 50726, 666, 257, 1359, 1230, 13, 50846, 50846, 400, 309, 1669, 264, 1185, 544, 13956, 13, 50966, 50966, 821, 311, 512, 20864, 12869, 337, 983, 309, 775, 300, 13, 51156, 51156, 37933, 379, 11, 498, 291, 909, 341, 281, 257, 2416, 3209, 11, 51320, 51320, 291, 483, 1101, 2674, 2144, 6713, 13, 51462, 51462, 509, 483, 1101, 3389, 322, 264, 1500, 992, 13, 51614, 51614, 467, 311, 406, 1009, 4818, 11, 457, 309, 3665, 13, 51714, 51850], "temperature": 0.0, "avg_logprob": -0.12888105548157983, "compression_ratio": 1.576, "no_speech_prob": 3.785050012083957e-06}, {"id": 1932, "seek": 555724, "start": 5579.2, "end": 5582.24, "text": " You get better performance on the test set.", "tokens": [50364, 281, 20594, 264, 1589, 466, 264, 4846, 50476, 50476, 670, 3866, 6815, 2602, 295, 733, 295, 36645, 1203, 50726, 50726, 666, 257, 1359, 1230, 13, 50846, 50846, 400, 309, 1669, 264, 1185, 544, 13956, 13, 50966, 50966, 821, 311, 512, 20864, 12869, 337, 983, 309, 775, 300, 13, 51156, 51156, 37933, 379, 11, 498, 291, 909, 341, 281, 257, 2416, 3209, 11, 51320, 51320, 291, 483, 1101, 2674, 2144, 6713, 13, 51462, 51462, 509, 483, 1101, 3389, 322, 264, 1500, 992, 13, 51614, 51614, 467, 311, 406, 1009, 4818, 11, 457, 309, 3665, 13, 51714, 51850], "temperature": 0.0, "avg_logprob": -0.12888105548157983, "compression_ratio": 1.576, "no_speech_prob": 3.785050012083957e-06}, {"id": 1933, "seek": 555724, "start": 5582.24, "end": 5584.24, "text": " It's not always necessary, but it helps.", "tokens": [50364, 281, 20594, 264, 1589, 466, 264, 4846, 50476, 50476, 670, 3866, 6815, 2602, 295, 733, 295, 36645, 1203, 50726, 50726, 666, 257, 1359, 1230, 13, 50846, 50846, 400, 309, 1669, 264, 1185, 544, 13956, 13, 50966, 50966, 821, 311, 512, 20864, 12869, 337, 983, 309, 775, 300, 13, 51156, 51156, 37933, 379, 11, 498, 291, 909, 341, 281, 257, 2416, 3209, 11, 51320, 51320, 291, 483, 1101, 2674, 2144, 6713, 13, 51462, 51462, 509, 483, 1101, 3389, 322, 264, 1500, 992, 13, 51614, 51614, 467, 311, 406, 1009, 4818, 11, 457, 309, 3665, 13, 51714, 51850], "temperature": 0.0, "avg_logprob": -0.12888105548157983, "compression_ratio": 1.576, "no_speech_prob": 3.785050012083957e-06}, {"id": 1934, "seek": 558424, "start": 5584.24, "end": 5586.92, "text": " OK, there's lots of tricks, and I'll devote a lecture on this.", "tokens": [50364, 2264, 11, 456, 311, 3195, 295, 11733, 11, 293, 286, 603, 23184, 257, 7991, 322, 341, 13, 50498, 50498, 407, 286, 478, 406, 516, 281, 352, 807, 439, 295, 552, 558, 586, 13, 50682, 50682, 663, 7029, 13468, 257, 857, 544, 466, 5028, 14455, 13, 50818, 50818, 407, 534, 11, 437, 2452, 2539, 307, 466, 13, 50918, 50918, 1743, 11, 286, 1907, 291, 1203, 466, 2452, 2539, 11, 51010, 51010, 411, 264, 14688, 295, 2452, 2539, 13, 51096, 51096, 708, 286, 2378, 380, 1907, 291, 307, 983, 321, 764, 2452, 2539, 13, 51250, 51250, 2264, 11, 293, 300, 311, 1936, 437, 286, 478, 51360, 51360, 516, 281, 980, 291, 466, 586, 11, 264, 12335, 337, 983, 307, 309, 51504, 51504, 300, 321, 643, 1936, 4825, 12, 8376, 260, 18161, 36170, 51618, 51618, 420, 721, 295, 341, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.2651356710514552, "compression_ratio": 1.7594501718213058, "no_speech_prob": 5.1735155466303695e-06}, {"id": 1935, "seek": 558424, "start": 5586.92, "end": 5590.599999999999, "text": " So I'm not going to go through all of them right now.", "tokens": [50364, 2264, 11, 456, 311, 3195, 295, 11733, 11, 293, 286, 603, 23184, 257, 7991, 322, 341, 13, 50498, 50498, 407, 286, 478, 406, 516, 281, 352, 807, 439, 295, 552, 558, 586, 13, 50682, 50682, 663, 7029, 13468, 257, 857, 544, 466, 5028, 14455, 13, 50818, 50818, 407, 534, 11, 437, 2452, 2539, 307, 466, 13, 50918, 50918, 1743, 11, 286, 1907, 291, 1203, 466, 2452, 2539, 11, 51010, 51010, 411, 264, 14688, 295, 2452, 2539, 13, 51096, 51096, 708, 286, 2378, 380, 1907, 291, 307, 983, 321, 764, 2452, 2539, 13, 51250, 51250, 2264, 11, 293, 300, 311, 1936, 437, 286, 478, 51360, 51360, 516, 281, 980, 291, 466, 586, 11, 264, 12335, 337, 983, 307, 309, 51504, 51504, 300, 321, 643, 1936, 4825, 12, 8376, 260, 18161, 36170, 51618, 51618, 420, 721, 295, 341, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.2651356710514552, "compression_ratio": 1.7594501718213058, "no_speech_prob": 5.1735155466303695e-06}, {"id": 1936, "seek": 558424, "start": 5590.599999999999, "end": 5593.32, "text": " That requires explaining a bit more about optimizations.", "tokens": [50364, 2264, 11, 456, 311, 3195, 295, 11733, 11, 293, 286, 603, 23184, 257, 7991, 322, 341, 13, 50498, 50498, 407, 286, 478, 406, 516, 281, 352, 807, 439, 295, 552, 558, 586, 13, 50682, 50682, 663, 7029, 13468, 257, 857, 544, 466, 5028, 14455, 13, 50818, 50818, 407, 534, 11, 437, 2452, 2539, 307, 466, 13, 50918, 50918, 1743, 11, 286, 1907, 291, 1203, 466, 2452, 2539, 11, 51010, 51010, 411, 264, 14688, 295, 2452, 2539, 13, 51096, 51096, 708, 286, 2378, 380, 1907, 291, 307, 983, 321, 764, 2452, 2539, 13, 51250, 51250, 2264, 11, 293, 300, 311, 1936, 437, 286, 478, 51360, 51360, 516, 281, 980, 291, 466, 586, 11, 264, 12335, 337, 983, 307, 309, 51504, 51504, 300, 321, 643, 1936, 4825, 12, 8376, 260, 18161, 36170, 51618, 51618, 420, 721, 295, 341, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.2651356710514552, "compression_ratio": 1.7594501718213058, "no_speech_prob": 5.1735155466303695e-06}, {"id": 1937, "seek": 558424, "start": 5593.32, "end": 5595.32, "text": " So really, what deep learning is about.", "tokens": [50364, 2264, 11, 456, 311, 3195, 295, 11733, 11, 293, 286, 603, 23184, 257, 7991, 322, 341, 13, 50498, 50498, 407, 286, 478, 406, 516, 281, 352, 807, 439, 295, 552, 558, 586, 13, 50682, 50682, 663, 7029, 13468, 257, 857, 544, 466, 5028, 14455, 13, 50818, 50818, 407, 534, 11, 437, 2452, 2539, 307, 466, 13, 50918, 50918, 1743, 11, 286, 1907, 291, 1203, 466, 2452, 2539, 11, 51010, 51010, 411, 264, 14688, 295, 2452, 2539, 13, 51096, 51096, 708, 286, 2378, 380, 1907, 291, 307, 983, 321, 764, 2452, 2539, 13, 51250, 51250, 2264, 11, 293, 300, 311, 1936, 437, 286, 478, 51360, 51360, 516, 281, 980, 291, 466, 586, 11, 264, 12335, 337, 983, 307, 309, 51504, 51504, 300, 321, 643, 1936, 4825, 12, 8376, 260, 18161, 36170, 51618, 51618, 420, 721, 295, 341, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.2651356710514552, "compression_ratio": 1.7594501718213058, "no_speech_prob": 5.1735155466303695e-06}, {"id": 1938, "seek": 558424, "start": 5595.32, "end": 5597.16, "text": " Like, I told you everything about deep learning,", "tokens": [50364, 2264, 11, 456, 311, 3195, 295, 11733, 11, 293, 286, 603, 23184, 257, 7991, 322, 341, 13, 50498, 50498, 407, 286, 478, 406, 516, 281, 352, 807, 439, 295, 552, 558, 586, 13, 50682, 50682, 663, 7029, 13468, 257, 857, 544, 466, 5028, 14455, 13, 50818, 50818, 407, 534, 11, 437, 2452, 2539, 307, 466, 13, 50918, 50918, 1743, 11, 286, 1907, 291, 1203, 466, 2452, 2539, 11, 51010, 51010, 411, 264, 14688, 295, 2452, 2539, 13, 51096, 51096, 708, 286, 2378, 380, 1907, 291, 307, 983, 321, 764, 2452, 2539, 13, 51250, 51250, 2264, 11, 293, 300, 311, 1936, 437, 286, 478, 51360, 51360, 516, 281, 980, 291, 466, 586, 11, 264, 12335, 337, 983, 307, 309, 51504, 51504, 300, 321, 643, 1936, 4825, 12, 8376, 260, 18161, 36170, 51618, 51618, 420, 721, 295, 341, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.2651356710514552, "compression_ratio": 1.7594501718213058, "no_speech_prob": 5.1735155466303695e-06}, {"id": 1939, "seek": 558424, "start": 5597.16, "end": 5598.88, "text": " like the basics of deep learning.", "tokens": [50364, 2264, 11, 456, 311, 3195, 295, 11733, 11, 293, 286, 603, 23184, 257, 7991, 322, 341, 13, 50498, 50498, 407, 286, 478, 406, 516, 281, 352, 807, 439, 295, 552, 558, 586, 13, 50682, 50682, 663, 7029, 13468, 257, 857, 544, 466, 5028, 14455, 13, 50818, 50818, 407, 534, 11, 437, 2452, 2539, 307, 466, 13, 50918, 50918, 1743, 11, 286, 1907, 291, 1203, 466, 2452, 2539, 11, 51010, 51010, 411, 264, 14688, 295, 2452, 2539, 13, 51096, 51096, 708, 286, 2378, 380, 1907, 291, 307, 983, 321, 764, 2452, 2539, 13, 51250, 51250, 2264, 11, 293, 300, 311, 1936, 437, 286, 478, 51360, 51360, 516, 281, 980, 291, 466, 586, 11, 264, 12335, 337, 983, 307, 309, 51504, 51504, 300, 321, 643, 1936, 4825, 12, 8376, 260, 18161, 36170, 51618, 51618, 420, 721, 295, 341, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.2651356710514552, "compression_ratio": 1.7594501718213058, "no_speech_prob": 5.1735155466303695e-06}, {"id": 1940, "seek": 558424, "start": 5598.88, "end": 5601.96, "text": " What I haven't told you is why we use deep learning.", "tokens": [50364, 2264, 11, 456, 311, 3195, 295, 11733, 11, 293, 286, 603, 23184, 257, 7991, 322, 341, 13, 50498, 50498, 407, 286, 478, 406, 516, 281, 352, 807, 439, 295, 552, 558, 586, 13, 50682, 50682, 663, 7029, 13468, 257, 857, 544, 466, 5028, 14455, 13, 50818, 50818, 407, 534, 11, 437, 2452, 2539, 307, 466, 13, 50918, 50918, 1743, 11, 286, 1907, 291, 1203, 466, 2452, 2539, 11, 51010, 51010, 411, 264, 14688, 295, 2452, 2539, 13, 51096, 51096, 708, 286, 2378, 380, 1907, 291, 307, 983, 321, 764, 2452, 2539, 13, 51250, 51250, 2264, 11, 293, 300, 311, 1936, 437, 286, 478, 51360, 51360, 516, 281, 980, 291, 466, 586, 11, 264, 12335, 337, 983, 307, 309, 51504, 51504, 300, 321, 643, 1936, 4825, 12, 8376, 260, 18161, 36170, 51618, 51618, 420, 721, 295, 341, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.2651356710514552, "compression_ratio": 1.7594501718213058, "no_speech_prob": 5.1735155466303695e-06}, {"id": 1941, "seek": 558424, "start": 5601.96, "end": 5604.16, "text": " OK, and that's basically what I'm", "tokens": [50364, 2264, 11, 456, 311, 3195, 295, 11733, 11, 293, 286, 603, 23184, 257, 7991, 322, 341, 13, 50498, 50498, 407, 286, 478, 406, 516, 281, 352, 807, 439, 295, 552, 558, 586, 13, 50682, 50682, 663, 7029, 13468, 257, 857, 544, 466, 5028, 14455, 13, 50818, 50818, 407, 534, 11, 437, 2452, 2539, 307, 466, 13, 50918, 50918, 1743, 11, 286, 1907, 291, 1203, 466, 2452, 2539, 11, 51010, 51010, 411, 264, 14688, 295, 2452, 2539, 13, 51096, 51096, 708, 286, 2378, 380, 1907, 291, 307, 983, 321, 764, 2452, 2539, 13, 51250, 51250, 2264, 11, 293, 300, 311, 1936, 437, 286, 478, 51360, 51360, 516, 281, 980, 291, 466, 586, 11, 264, 12335, 337, 983, 307, 309, 51504, 51504, 300, 321, 643, 1936, 4825, 12, 8376, 260, 18161, 36170, 51618, 51618, 420, 721, 295, 341, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.2651356710514552, "compression_ratio": 1.7594501718213058, "no_speech_prob": 5.1735155466303695e-06}, {"id": 1942, "seek": 558424, "start": 5604.16, "end": 5607.04, "text": " going to tell you about now, the motivation for why is it", "tokens": [50364, 2264, 11, 456, 311, 3195, 295, 11733, 11, 293, 286, 603, 23184, 257, 7991, 322, 341, 13, 50498, 50498, 407, 286, 478, 406, 516, 281, 352, 807, 439, 295, 552, 558, 586, 13, 50682, 50682, 663, 7029, 13468, 257, 857, 544, 466, 5028, 14455, 13, 50818, 50818, 407, 534, 11, 437, 2452, 2539, 307, 466, 13, 50918, 50918, 1743, 11, 286, 1907, 291, 1203, 466, 2452, 2539, 11, 51010, 51010, 411, 264, 14688, 295, 2452, 2539, 13, 51096, 51096, 708, 286, 2378, 380, 1907, 291, 307, 983, 321, 764, 2452, 2539, 13, 51250, 51250, 2264, 11, 293, 300, 311, 1936, 437, 286, 478, 51360, 51360, 516, 281, 980, 291, 466, 586, 11, 264, 12335, 337, 983, 307, 309, 51504, 51504, 300, 321, 643, 1936, 4825, 12, 8376, 260, 18161, 36170, 51618, 51618, 420, 721, 295, 341, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.2651356710514552, "compression_ratio": 1.7594501718213058, "no_speech_prob": 5.1735155466303695e-06}, {"id": 1943, "seek": 558424, "start": 5607.04, "end": 5609.32, "text": " that we need basically multi-layer neural nets", "tokens": [50364, 2264, 11, 456, 311, 3195, 295, 11733, 11, 293, 286, 603, 23184, 257, 7991, 322, 341, 13, 50498, 50498, 407, 286, 478, 406, 516, 281, 352, 807, 439, 295, 552, 558, 586, 13, 50682, 50682, 663, 7029, 13468, 257, 857, 544, 466, 5028, 14455, 13, 50818, 50818, 407, 534, 11, 437, 2452, 2539, 307, 466, 13, 50918, 50918, 1743, 11, 286, 1907, 291, 1203, 466, 2452, 2539, 11, 51010, 51010, 411, 264, 14688, 295, 2452, 2539, 13, 51096, 51096, 708, 286, 2378, 380, 1907, 291, 307, 983, 321, 764, 2452, 2539, 13, 51250, 51250, 2264, 11, 293, 300, 311, 1936, 437, 286, 478, 51360, 51360, 516, 281, 980, 291, 466, 586, 11, 264, 12335, 337, 983, 307, 309, 51504, 51504, 300, 321, 643, 1936, 4825, 12, 8376, 260, 18161, 36170, 51618, 51618, 420, 721, 295, 341, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.2651356710514552, "compression_ratio": 1.7594501718213058, "no_speech_prob": 5.1735155466303695e-06}, {"id": 1944, "seek": 558424, "start": 5609.32, "end": 5611.24, "text": " or things of this type.", "tokens": [50364, 2264, 11, 456, 311, 3195, 295, 11733, 11, 293, 286, 603, 23184, 257, 7991, 322, 341, 13, 50498, 50498, 407, 286, 478, 406, 516, 281, 352, 807, 439, 295, 552, 558, 586, 13, 50682, 50682, 663, 7029, 13468, 257, 857, 544, 466, 5028, 14455, 13, 50818, 50818, 407, 534, 11, 437, 2452, 2539, 307, 466, 13, 50918, 50918, 1743, 11, 286, 1907, 291, 1203, 466, 2452, 2539, 11, 51010, 51010, 411, 264, 14688, 295, 2452, 2539, 13, 51096, 51096, 708, 286, 2378, 380, 1907, 291, 307, 983, 321, 764, 2452, 2539, 13, 51250, 51250, 2264, 11, 293, 300, 311, 1936, 437, 286, 478, 51360, 51360, 516, 281, 980, 291, 466, 586, 11, 264, 12335, 337, 983, 307, 309, 51504, 51504, 300, 321, 643, 1936, 4825, 12, 8376, 260, 18161, 36170, 51618, 51618, 420, 721, 295, 341, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.2651356710514552, "compression_ratio": 1.7594501718213058, "no_speech_prob": 5.1735155466303695e-06}, {"id": 1945, "seek": 561124, "start": 5611.24, "end": 5614.96, "text": " OK, so the traditional prototypical model", "tokens": [50364, 2264, 11, 370, 264, 5164, 46219, 34061, 2316, 50550, 50550, 295, 46533, 2539, 337, 257, 588, 938, 565, 50738, 50738, 307, 1936, 257, 8213, 1508, 9902, 13, 50818, 50818, 14670, 289, 1508, 9902, 337, 257, 732, 12, 11665, 1154, 51060, 51060, 307, 1936, 257, 2167, 4985, 295, 264, 2531, 2010, 51190, 51190, 300, 321, 2825, 466, 3071, 13, 51256, 51256, 509, 14722, 257, 32807, 2408, 295, 15743, 11, 909, 257, 12577, 11, 51430, 51430, 293, 291, 393, 519, 295, 264, 12577, 382, 445, 1071, 3847, 712, 3364, 13, 51650, 51650, 407, 291, 393, 519, 295, 309, 382, 257, 2167, 4985, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.35818947278536284, "compression_ratio": 1.7422222222222221, "no_speech_prob": 5.507177775143646e-06}, {"id": 1946, "seek": 561124, "start": 5614.96, "end": 5618.719999999999, "text": " of supervised learning for a very long time", "tokens": [50364, 2264, 11, 370, 264, 5164, 46219, 34061, 2316, 50550, 50550, 295, 46533, 2539, 337, 257, 588, 938, 565, 50738, 50738, 307, 1936, 257, 8213, 1508, 9902, 13, 50818, 50818, 14670, 289, 1508, 9902, 337, 257, 732, 12, 11665, 1154, 51060, 51060, 307, 1936, 257, 2167, 4985, 295, 264, 2531, 2010, 51190, 51190, 300, 321, 2825, 466, 3071, 13, 51256, 51256, 509, 14722, 257, 32807, 2408, 295, 15743, 11, 909, 257, 12577, 11, 51430, 51430, 293, 291, 393, 519, 295, 264, 12577, 382, 445, 1071, 3847, 712, 3364, 13, 51650, 51650, 407, 291, 393, 519, 295, 309, 382, 257, 2167, 4985, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.35818947278536284, "compression_ratio": 1.7422222222222221, "no_speech_prob": 5.507177775143646e-06}, {"id": 1947, "seek": 561124, "start": 5618.719999999999, "end": 5620.32, "text": " is basically a linear classifier.", "tokens": [50364, 2264, 11, 370, 264, 5164, 46219, 34061, 2316, 50550, 50550, 295, 46533, 2539, 337, 257, 588, 938, 565, 50738, 50738, 307, 1936, 257, 8213, 1508, 9902, 13, 50818, 50818, 14670, 289, 1508, 9902, 337, 257, 732, 12, 11665, 1154, 51060, 51060, 307, 1936, 257, 2167, 4985, 295, 264, 2531, 2010, 51190, 51190, 300, 321, 2825, 466, 3071, 13, 51256, 51256, 509, 14722, 257, 32807, 2408, 295, 15743, 11, 909, 257, 12577, 11, 51430, 51430, 293, 291, 393, 519, 295, 264, 12577, 382, 445, 1071, 3847, 712, 3364, 13, 51650, 51650, 407, 291, 393, 519, 295, 309, 382, 257, 2167, 4985, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.35818947278536284, "compression_ratio": 1.7422222222222221, "no_speech_prob": 5.507177775143646e-06}, {"id": 1948, "seek": 561124, "start": 5620.32, "end": 5625.16, "text": " Linear classifier for a two-class problem", "tokens": [50364, 2264, 11, 370, 264, 5164, 46219, 34061, 2316, 50550, 50550, 295, 46533, 2539, 337, 257, 588, 938, 565, 50738, 50738, 307, 1936, 257, 8213, 1508, 9902, 13, 50818, 50818, 14670, 289, 1508, 9902, 337, 257, 732, 12, 11665, 1154, 51060, 51060, 307, 1936, 257, 2167, 4985, 295, 264, 2531, 2010, 51190, 51190, 300, 321, 2825, 466, 3071, 13, 51256, 51256, 509, 14722, 257, 32807, 2408, 295, 15743, 11, 909, 257, 12577, 11, 51430, 51430, 293, 291, 393, 519, 295, 264, 12577, 382, 445, 1071, 3847, 712, 3364, 13, 51650, 51650, 407, 291, 393, 519, 295, 309, 382, 257, 2167, 4985, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.35818947278536284, "compression_ratio": 1.7422222222222221, "no_speech_prob": 5.507177775143646e-06}, {"id": 1949, "seek": 561124, "start": 5625.16, "end": 5627.76, "text": " is basically a single unit of the similar type", "tokens": [50364, 2264, 11, 370, 264, 5164, 46219, 34061, 2316, 50550, 50550, 295, 46533, 2539, 337, 257, 588, 938, 565, 50738, 50738, 307, 1936, 257, 8213, 1508, 9902, 13, 50818, 50818, 14670, 289, 1508, 9902, 337, 257, 732, 12, 11665, 1154, 51060, 51060, 307, 1936, 257, 2167, 4985, 295, 264, 2531, 2010, 51190, 51190, 300, 321, 2825, 466, 3071, 13, 51256, 51256, 509, 14722, 257, 32807, 2408, 295, 15743, 11, 909, 257, 12577, 11, 51430, 51430, 293, 291, 393, 519, 295, 264, 12577, 382, 445, 1071, 3847, 712, 3364, 13, 51650, 51650, 407, 291, 393, 519, 295, 309, 382, 257, 2167, 4985, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.35818947278536284, "compression_ratio": 1.7422222222222221, "no_speech_prob": 5.507177775143646e-06}, {"id": 1950, "seek": 561124, "start": 5627.76, "end": 5629.08, "text": " that we talked about earlier.", "tokens": [50364, 2264, 11, 370, 264, 5164, 46219, 34061, 2316, 50550, 50550, 295, 46533, 2539, 337, 257, 588, 938, 565, 50738, 50738, 307, 1936, 257, 8213, 1508, 9902, 13, 50818, 50818, 14670, 289, 1508, 9902, 337, 257, 732, 12, 11665, 1154, 51060, 51060, 307, 1936, 257, 2167, 4985, 295, 264, 2531, 2010, 51190, 51190, 300, 321, 2825, 466, 3071, 13, 51256, 51256, 509, 14722, 257, 32807, 2408, 295, 15743, 11, 909, 257, 12577, 11, 51430, 51430, 293, 291, 393, 519, 295, 264, 12577, 382, 445, 1071, 3847, 712, 3364, 13, 51650, 51650, 407, 291, 393, 519, 295, 309, 382, 257, 2167, 4985, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.35818947278536284, "compression_ratio": 1.7422222222222221, "no_speech_prob": 5.507177775143646e-06}, {"id": 1951, "seek": 561124, "start": 5629.08, "end": 5632.5599999999995, "text": " You compute a weighted sum of inputs, add a bias,", "tokens": [50364, 2264, 11, 370, 264, 5164, 46219, 34061, 2316, 50550, 50550, 295, 46533, 2539, 337, 257, 588, 938, 565, 50738, 50738, 307, 1936, 257, 8213, 1508, 9902, 13, 50818, 50818, 14670, 289, 1508, 9902, 337, 257, 732, 12, 11665, 1154, 51060, 51060, 307, 1936, 257, 2167, 4985, 295, 264, 2531, 2010, 51190, 51190, 300, 321, 2825, 466, 3071, 13, 51256, 51256, 509, 14722, 257, 32807, 2408, 295, 15743, 11, 909, 257, 12577, 11, 51430, 51430, 293, 291, 393, 519, 295, 264, 12577, 382, 445, 1071, 3847, 712, 3364, 13, 51650, 51650, 407, 291, 393, 519, 295, 309, 382, 257, 2167, 4985, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.35818947278536284, "compression_ratio": 1.7422222222222221, "no_speech_prob": 5.507177775143646e-06}, {"id": 1952, "seek": 561124, "start": 5632.5599999999995, "end": 5636.96, "text": " and you can think of the bias as just another trainable weight.", "tokens": [50364, 2264, 11, 370, 264, 5164, 46219, 34061, 2316, 50550, 50550, 295, 46533, 2539, 337, 257, 588, 938, 565, 50738, 50738, 307, 1936, 257, 8213, 1508, 9902, 13, 50818, 50818, 14670, 289, 1508, 9902, 337, 257, 732, 12, 11665, 1154, 51060, 51060, 307, 1936, 257, 2167, 4985, 295, 264, 2531, 2010, 51190, 51190, 300, 321, 2825, 466, 3071, 13, 51256, 51256, 509, 14722, 257, 32807, 2408, 295, 15743, 11, 909, 257, 12577, 11, 51430, 51430, 293, 291, 393, 519, 295, 264, 12577, 382, 445, 1071, 3847, 712, 3364, 13, 51650, 51650, 407, 291, 393, 519, 295, 309, 382, 257, 2167, 4985, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.35818947278536284, "compression_ratio": 1.7422222222222221, "no_speech_prob": 5.507177775143646e-06}, {"id": 1953, "seek": 561124, "start": 5636.96, "end": 5639.5599999999995, "text": " So you can think of it as a single unit", "tokens": [50364, 2264, 11, 370, 264, 5164, 46219, 34061, 2316, 50550, 50550, 295, 46533, 2539, 337, 257, 588, 938, 565, 50738, 50738, 307, 1936, 257, 8213, 1508, 9902, 13, 50818, 50818, 14670, 289, 1508, 9902, 337, 257, 732, 12, 11665, 1154, 51060, 51060, 307, 1936, 257, 2167, 4985, 295, 264, 2531, 2010, 51190, 51190, 300, 321, 2825, 466, 3071, 13, 51256, 51256, 509, 14722, 257, 32807, 2408, 295, 15743, 11, 909, 257, 12577, 11, 51430, 51430, 293, 291, 393, 519, 295, 264, 12577, 382, 445, 1071, 3847, 712, 3364, 13, 51650, 51650, 407, 291, 393, 519, 295, 309, 382, 257, 2167, 4985, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.35818947278536284, "compression_ratio": 1.7422222222222221, "no_speech_prob": 5.507177775143646e-06}, {"id": 1954, "seek": 563956, "start": 5639.56, "end": 5642.52, "text": " just another trainable weight whose corresponding input is", "tokens": [50364, 445, 1071, 3847, 712, 3364, 6104, 11760, 4846, 307, 50512, 50512, 2681, 281, 502, 11, 498, 291, 528, 13, 50604, 50604, 400, 550, 291, 1320, 300, 807, 257, 14678, 2445, 11, 50764, 50764, 264, 18609, 2445, 11, 300, 23930, 3175, 502, 50894, 50894, 498, 264, 32807, 2408, 307, 2507, 1958, 293, 1804, 502, 498, 309, 311, 3673, 1958, 13, 51064, 51064, 2264, 11, 370, 341, 3875, 8213, 1508, 9902, 1936, 51294, 51294, 644, 2451, 264, 1901, 11, 264, 4846, 1901, 295, 2031, 311, 11, 51438, 51438, 666, 732, 1922, 7673, 12005, 538, 257, 9848, 36390, 13, 51594, 51594, 407, 264, 5367, 11, 2408, 295, 286, 54, 40, 2031, 40, 1804, 691, 6915, 1958, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17903570843558025, "compression_ratio": 1.5984848484848484, "no_speech_prob": 1.696313665888738e-05}, {"id": 1955, "seek": 563956, "start": 5642.52, "end": 5644.360000000001, "text": " equal to 1, if you want.", "tokens": [50364, 445, 1071, 3847, 712, 3364, 6104, 11760, 4846, 307, 50512, 50512, 2681, 281, 502, 11, 498, 291, 528, 13, 50604, 50604, 400, 550, 291, 1320, 300, 807, 257, 14678, 2445, 11, 50764, 50764, 264, 18609, 2445, 11, 300, 23930, 3175, 502, 50894, 50894, 498, 264, 32807, 2408, 307, 2507, 1958, 293, 1804, 502, 498, 309, 311, 3673, 1958, 13, 51064, 51064, 2264, 11, 370, 341, 3875, 8213, 1508, 9902, 1936, 51294, 51294, 644, 2451, 264, 1901, 11, 264, 4846, 1901, 295, 2031, 311, 11, 51438, 51438, 666, 732, 1922, 7673, 12005, 538, 257, 9848, 36390, 13, 51594, 51594, 407, 264, 5367, 11, 2408, 295, 286, 54, 40, 2031, 40, 1804, 691, 6915, 1958, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17903570843558025, "compression_ratio": 1.5984848484848484, "no_speech_prob": 1.696313665888738e-05}, {"id": 1956, "seek": 563956, "start": 5644.360000000001, "end": 5647.56, "text": " And then you pass that through a threshold function,", "tokens": [50364, 445, 1071, 3847, 712, 3364, 6104, 11760, 4846, 307, 50512, 50512, 2681, 281, 502, 11, 498, 291, 528, 13, 50604, 50604, 400, 550, 291, 1320, 300, 807, 257, 14678, 2445, 11, 50764, 50764, 264, 18609, 2445, 11, 300, 23930, 3175, 502, 50894, 50894, 498, 264, 32807, 2408, 307, 2507, 1958, 293, 1804, 502, 498, 309, 311, 3673, 1958, 13, 51064, 51064, 2264, 11, 370, 341, 3875, 8213, 1508, 9902, 1936, 51294, 51294, 644, 2451, 264, 1901, 11, 264, 4846, 1901, 295, 2031, 311, 11, 51438, 51438, 666, 732, 1922, 7673, 12005, 538, 257, 9848, 36390, 13, 51594, 51594, 407, 264, 5367, 11, 2408, 295, 286, 54, 40, 2031, 40, 1804, 691, 6915, 1958, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17903570843558025, "compression_ratio": 1.5984848484848484, "no_speech_prob": 1.696313665888738e-05}, {"id": 1957, "seek": 563956, "start": 5647.56, "end": 5650.160000000001, "text": " the sine function, that outputs minus 1", "tokens": [50364, 445, 1071, 3847, 712, 3364, 6104, 11760, 4846, 307, 50512, 50512, 2681, 281, 502, 11, 498, 291, 528, 13, 50604, 50604, 400, 550, 291, 1320, 300, 807, 257, 14678, 2445, 11, 50764, 50764, 264, 18609, 2445, 11, 300, 23930, 3175, 502, 50894, 50894, 498, 264, 32807, 2408, 307, 2507, 1958, 293, 1804, 502, 498, 309, 311, 3673, 1958, 13, 51064, 51064, 2264, 11, 370, 341, 3875, 8213, 1508, 9902, 1936, 51294, 51294, 644, 2451, 264, 1901, 11, 264, 4846, 1901, 295, 2031, 311, 11, 51438, 51438, 666, 732, 1922, 7673, 12005, 538, 257, 9848, 36390, 13, 51594, 51594, 407, 264, 5367, 11, 2408, 295, 286, 54, 40, 2031, 40, 1804, 691, 6915, 1958, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17903570843558025, "compression_ratio": 1.5984848484848484, "no_speech_prob": 1.696313665888738e-05}, {"id": 1958, "seek": 563956, "start": 5650.160000000001, "end": 5653.56, "text": " if the weighted sum is below 0 and plus 1 if it's above 0.", "tokens": [50364, 445, 1071, 3847, 712, 3364, 6104, 11760, 4846, 307, 50512, 50512, 2681, 281, 502, 11, 498, 291, 528, 13, 50604, 50604, 400, 550, 291, 1320, 300, 807, 257, 14678, 2445, 11, 50764, 50764, 264, 18609, 2445, 11, 300, 23930, 3175, 502, 50894, 50894, 498, 264, 32807, 2408, 307, 2507, 1958, 293, 1804, 502, 498, 309, 311, 3673, 1958, 13, 51064, 51064, 2264, 11, 370, 341, 3875, 8213, 1508, 9902, 1936, 51294, 51294, 644, 2451, 264, 1901, 11, 264, 4846, 1901, 295, 2031, 311, 11, 51438, 51438, 666, 732, 1922, 7673, 12005, 538, 257, 9848, 36390, 13, 51594, 51594, 407, 264, 5367, 11, 2408, 295, 286, 54, 40, 2031, 40, 1804, 691, 6915, 1958, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17903570843558025, "compression_ratio": 1.5984848484848484, "no_speech_prob": 1.696313665888738e-05}, {"id": 1959, "seek": 563956, "start": 5653.56, "end": 5658.160000000001, "text": " OK, so this basic linear classifier basically", "tokens": [50364, 445, 1071, 3847, 712, 3364, 6104, 11760, 4846, 307, 50512, 50512, 2681, 281, 502, 11, 498, 291, 528, 13, 50604, 50604, 400, 550, 291, 1320, 300, 807, 257, 14678, 2445, 11, 50764, 50764, 264, 18609, 2445, 11, 300, 23930, 3175, 502, 50894, 50894, 498, 264, 32807, 2408, 307, 2507, 1958, 293, 1804, 502, 498, 309, 311, 3673, 1958, 13, 51064, 51064, 2264, 11, 370, 341, 3875, 8213, 1508, 9902, 1936, 51294, 51294, 644, 2451, 264, 1901, 11, 264, 4846, 1901, 295, 2031, 311, 11, 51438, 51438, 666, 732, 1922, 7673, 12005, 538, 257, 9848, 36390, 13, 51594, 51594, 407, 264, 5367, 11, 2408, 295, 286, 54, 40, 2031, 40, 1804, 691, 6915, 1958, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17903570843558025, "compression_ratio": 1.5984848484848484, "no_speech_prob": 1.696313665888738e-05}, {"id": 1960, "seek": 563956, "start": 5658.160000000001, "end": 5661.04, "text": " partitions the space, the input space of x's,", "tokens": [50364, 445, 1071, 3847, 712, 3364, 6104, 11760, 4846, 307, 50512, 50512, 2681, 281, 502, 11, 498, 291, 528, 13, 50604, 50604, 400, 550, 291, 1320, 300, 807, 257, 14678, 2445, 11, 50764, 50764, 264, 18609, 2445, 11, 300, 23930, 3175, 502, 50894, 50894, 498, 264, 32807, 2408, 307, 2507, 1958, 293, 1804, 502, 498, 309, 311, 3673, 1958, 13, 51064, 51064, 2264, 11, 370, 341, 3875, 8213, 1508, 9902, 1936, 51294, 51294, 644, 2451, 264, 1901, 11, 264, 4846, 1901, 295, 2031, 311, 11, 51438, 51438, 666, 732, 1922, 7673, 12005, 538, 257, 9848, 36390, 13, 51594, 51594, 407, 264, 5367, 11, 2408, 295, 286, 54, 40, 2031, 40, 1804, 691, 6915, 1958, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17903570843558025, "compression_ratio": 1.5984848484848484, "no_speech_prob": 1.696313665888738e-05}, {"id": 1961, "seek": 563956, "start": 5661.04, "end": 5664.160000000001, "text": " into two half spaces separated by a hyperplane.", "tokens": [50364, 445, 1071, 3847, 712, 3364, 6104, 11760, 4846, 307, 50512, 50512, 2681, 281, 502, 11, 498, 291, 528, 13, 50604, 50604, 400, 550, 291, 1320, 300, 807, 257, 14678, 2445, 11, 50764, 50764, 264, 18609, 2445, 11, 300, 23930, 3175, 502, 50894, 50894, 498, 264, 32807, 2408, 307, 2507, 1958, 293, 1804, 502, 498, 309, 311, 3673, 1958, 13, 51064, 51064, 2264, 11, 370, 341, 3875, 8213, 1508, 9902, 1936, 51294, 51294, 644, 2451, 264, 1901, 11, 264, 4846, 1901, 295, 2031, 311, 11, 51438, 51438, 666, 732, 1922, 7673, 12005, 538, 257, 9848, 36390, 13, 51594, 51594, 407, 264, 5367, 11, 2408, 295, 286, 54, 40, 2031, 40, 1804, 691, 6915, 1958, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17903570843558025, "compression_ratio": 1.5984848484848484, "no_speech_prob": 1.696313665888738e-05}, {"id": 1962, "seek": 563956, "start": 5664.160000000001, "end": 5668.4400000000005, "text": " So the equation, sum of IWI xI plus V equals 0", "tokens": [50364, 445, 1071, 3847, 712, 3364, 6104, 11760, 4846, 307, 50512, 50512, 2681, 281, 502, 11, 498, 291, 528, 13, 50604, 50604, 400, 550, 291, 1320, 300, 807, 257, 14678, 2445, 11, 50764, 50764, 264, 18609, 2445, 11, 300, 23930, 3175, 502, 50894, 50894, 498, 264, 32807, 2408, 307, 2507, 1958, 293, 1804, 502, 498, 309, 311, 3673, 1958, 13, 51064, 51064, 2264, 11, 370, 341, 3875, 8213, 1508, 9902, 1936, 51294, 51294, 644, 2451, 264, 1901, 11, 264, 4846, 1901, 295, 2031, 311, 11, 51438, 51438, 666, 732, 1922, 7673, 12005, 538, 257, 9848, 36390, 13, 51594, 51594, 407, 264, 5367, 11, 2408, 295, 286, 54, 40, 2031, 40, 1804, 691, 6915, 1958, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17903570843558025, "compression_ratio": 1.5984848484848484, "no_speech_prob": 1.696313665888738e-05}, {"id": 1963, "seek": 566844, "start": 5668.44, "end": 5672.04, "text": " is the surface that separates the category I that", "tokens": [50364, 307, 264, 3753, 300, 34149, 264, 7719, 286, 300, 50544, 50544, 307, 516, 281, 5258, 288, 2159, 2681, 1804, 502, 490, 7719, 6351, 50684, 50684, 689, 288, 2159, 6915, 3175, 502, 13, 50810, 50810, 1545, 775, 309, 9845, 264, 1901, 666, 732, 38490, 30, 51004, 51004, 467, 311, 570, 291, 434, 15866, 264, 5893, 1674, 295, 364, 4846, 51164, 51164, 8062, 365, 257, 3364, 8062, 13, 51240, 51240, 759, 729, 732, 18875, 366, 41488, 11, 51428, 51428, 550, 264, 5893, 1674, 307, 1958, 13, 51508, 51508, 2264, 11, 272, 307, 445, 364, 18687, 13, 51618, 51618, 407, 264, 992, 295, 2793, 294, 2031, 1901, 689, 341, 5893, 1674, 307, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13242219401671823, "compression_ratio": 1.699588477366255, "no_speech_prob": 1.0952706361422315e-05}, {"id": 1964, "seek": 566844, "start": 5672.04, "end": 5674.839999999999, "text": " is going to produce y bar equal plus 1 from category II", "tokens": [50364, 307, 264, 3753, 300, 34149, 264, 7719, 286, 300, 50544, 50544, 307, 516, 281, 5258, 288, 2159, 2681, 1804, 502, 490, 7719, 6351, 50684, 50684, 689, 288, 2159, 6915, 3175, 502, 13, 50810, 50810, 1545, 775, 309, 9845, 264, 1901, 666, 732, 38490, 30, 51004, 51004, 467, 311, 570, 291, 434, 15866, 264, 5893, 1674, 295, 364, 4846, 51164, 51164, 8062, 365, 257, 3364, 8062, 13, 51240, 51240, 759, 729, 732, 18875, 366, 41488, 11, 51428, 51428, 550, 264, 5893, 1674, 307, 1958, 13, 51508, 51508, 2264, 11, 272, 307, 445, 364, 18687, 13, 51618, 51618, 407, 264, 992, 295, 2793, 294, 2031, 1901, 689, 341, 5893, 1674, 307, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13242219401671823, "compression_ratio": 1.699588477366255, "no_speech_prob": 1.0952706361422315e-05}, {"id": 1965, "seek": 566844, "start": 5674.839999999999, "end": 5677.36, "text": " where y bar equals minus 1.", "tokens": [50364, 307, 264, 3753, 300, 34149, 264, 7719, 286, 300, 50544, 50544, 307, 516, 281, 5258, 288, 2159, 2681, 1804, 502, 490, 7719, 6351, 50684, 50684, 689, 288, 2159, 6915, 3175, 502, 13, 50810, 50810, 1545, 775, 309, 9845, 264, 1901, 666, 732, 38490, 30, 51004, 51004, 467, 311, 570, 291, 434, 15866, 264, 5893, 1674, 295, 364, 4846, 51164, 51164, 8062, 365, 257, 3364, 8062, 13, 51240, 51240, 759, 729, 732, 18875, 366, 41488, 11, 51428, 51428, 550, 264, 5893, 1674, 307, 1958, 13, 51508, 51508, 2264, 11, 272, 307, 445, 364, 18687, 13, 51618, 51618, 407, 264, 992, 295, 2793, 294, 2031, 1901, 689, 341, 5893, 1674, 307, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13242219401671823, "compression_ratio": 1.699588477366255, "no_speech_prob": 1.0952706361422315e-05}, {"id": 1966, "seek": 566844, "start": 5677.36, "end": 5681.24, "text": " Why does it divide the space into two halves?", "tokens": [50364, 307, 264, 3753, 300, 34149, 264, 7719, 286, 300, 50544, 50544, 307, 516, 281, 5258, 288, 2159, 2681, 1804, 502, 490, 7719, 6351, 50684, 50684, 689, 288, 2159, 6915, 3175, 502, 13, 50810, 50810, 1545, 775, 309, 9845, 264, 1901, 666, 732, 38490, 30, 51004, 51004, 467, 311, 570, 291, 434, 15866, 264, 5893, 1674, 295, 364, 4846, 51164, 51164, 8062, 365, 257, 3364, 8062, 13, 51240, 51240, 759, 729, 732, 18875, 366, 41488, 11, 51428, 51428, 550, 264, 5893, 1674, 307, 1958, 13, 51508, 51508, 2264, 11, 272, 307, 445, 364, 18687, 13, 51618, 51618, 407, 264, 992, 295, 2793, 294, 2031, 1901, 689, 341, 5893, 1674, 307, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13242219401671823, "compression_ratio": 1.699588477366255, "no_speech_prob": 1.0952706361422315e-05}, {"id": 1967, "seek": 566844, "start": 5681.24, "end": 5684.44, "text": " It's because you're computing the dot product of an input", "tokens": [50364, 307, 264, 3753, 300, 34149, 264, 7719, 286, 300, 50544, 50544, 307, 516, 281, 5258, 288, 2159, 2681, 1804, 502, 490, 7719, 6351, 50684, 50684, 689, 288, 2159, 6915, 3175, 502, 13, 50810, 50810, 1545, 775, 309, 9845, 264, 1901, 666, 732, 38490, 30, 51004, 51004, 467, 311, 570, 291, 434, 15866, 264, 5893, 1674, 295, 364, 4846, 51164, 51164, 8062, 365, 257, 3364, 8062, 13, 51240, 51240, 759, 729, 732, 18875, 366, 41488, 11, 51428, 51428, 550, 264, 5893, 1674, 307, 1958, 13, 51508, 51508, 2264, 11, 272, 307, 445, 364, 18687, 13, 51618, 51618, 407, 264, 992, 295, 2793, 294, 2031, 1901, 689, 341, 5893, 1674, 307, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13242219401671823, "compression_ratio": 1.699588477366255, "no_speech_prob": 1.0952706361422315e-05}, {"id": 1968, "seek": 566844, "start": 5684.44, "end": 5685.96, "text": " vector with a weight vector.", "tokens": [50364, 307, 264, 3753, 300, 34149, 264, 7719, 286, 300, 50544, 50544, 307, 516, 281, 5258, 288, 2159, 2681, 1804, 502, 490, 7719, 6351, 50684, 50684, 689, 288, 2159, 6915, 3175, 502, 13, 50810, 50810, 1545, 775, 309, 9845, 264, 1901, 666, 732, 38490, 30, 51004, 51004, 467, 311, 570, 291, 434, 15866, 264, 5893, 1674, 295, 364, 4846, 51164, 51164, 8062, 365, 257, 3364, 8062, 13, 51240, 51240, 759, 729, 732, 18875, 366, 41488, 11, 51428, 51428, 550, 264, 5893, 1674, 307, 1958, 13, 51508, 51508, 2264, 11, 272, 307, 445, 364, 18687, 13, 51618, 51618, 407, 264, 992, 295, 2793, 294, 2031, 1901, 689, 341, 5893, 1674, 307, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13242219401671823, "compression_ratio": 1.699588477366255, "no_speech_prob": 1.0952706361422315e-05}, {"id": 1969, "seek": 566844, "start": 5685.96, "end": 5689.719999999999, "text": " If those two vectors are orthogonal,", "tokens": [50364, 307, 264, 3753, 300, 34149, 264, 7719, 286, 300, 50544, 50544, 307, 516, 281, 5258, 288, 2159, 2681, 1804, 502, 490, 7719, 6351, 50684, 50684, 689, 288, 2159, 6915, 3175, 502, 13, 50810, 50810, 1545, 775, 309, 9845, 264, 1901, 666, 732, 38490, 30, 51004, 51004, 467, 311, 570, 291, 434, 15866, 264, 5893, 1674, 295, 364, 4846, 51164, 51164, 8062, 365, 257, 3364, 8062, 13, 51240, 51240, 759, 729, 732, 18875, 366, 41488, 11, 51428, 51428, 550, 264, 5893, 1674, 307, 1958, 13, 51508, 51508, 2264, 11, 272, 307, 445, 364, 18687, 13, 51618, 51618, 407, 264, 992, 295, 2793, 294, 2031, 1901, 689, 341, 5893, 1674, 307, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13242219401671823, "compression_ratio": 1.699588477366255, "no_speech_prob": 1.0952706361422315e-05}, {"id": 1970, "seek": 566844, "start": 5689.719999999999, "end": 5691.32, "text": " then the dot product is 0.", "tokens": [50364, 307, 264, 3753, 300, 34149, 264, 7719, 286, 300, 50544, 50544, 307, 516, 281, 5258, 288, 2159, 2681, 1804, 502, 490, 7719, 6351, 50684, 50684, 689, 288, 2159, 6915, 3175, 502, 13, 50810, 50810, 1545, 775, 309, 9845, 264, 1901, 666, 732, 38490, 30, 51004, 51004, 467, 311, 570, 291, 434, 15866, 264, 5893, 1674, 295, 364, 4846, 51164, 51164, 8062, 365, 257, 3364, 8062, 13, 51240, 51240, 759, 729, 732, 18875, 366, 41488, 11, 51428, 51428, 550, 264, 5893, 1674, 307, 1958, 13, 51508, 51508, 2264, 11, 272, 307, 445, 364, 18687, 13, 51618, 51618, 407, 264, 992, 295, 2793, 294, 2031, 1901, 689, 341, 5893, 1674, 307, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13242219401671823, "compression_ratio": 1.699588477366255, "no_speech_prob": 1.0952706361422315e-05}, {"id": 1971, "seek": 566844, "start": 5691.32, "end": 5693.5199999999995, "text": " OK, b is just an offset.", "tokens": [50364, 307, 264, 3753, 300, 34149, 264, 7719, 286, 300, 50544, 50544, 307, 516, 281, 5258, 288, 2159, 2681, 1804, 502, 490, 7719, 6351, 50684, 50684, 689, 288, 2159, 6915, 3175, 502, 13, 50810, 50810, 1545, 775, 309, 9845, 264, 1901, 666, 732, 38490, 30, 51004, 51004, 467, 311, 570, 291, 434, 15866, 264, 5893, 1674, 295, 364, 4846, 51164, 51164, 8062, 365, 257, 3364, 8062, 13, 51240, 51240, 759, 729, 732, 18875, 366, 41488, 11, 51428, 51428, 550, 264, 5893, 1674, 307, 1958, 13, 51508, 51508, 2264, 11, 272, 307, 445, 364, 18687, 13, 51618, 51618, 407, 264, 992, 295, 2793, 294, 2031, 1901, 689, 341, 5893, 1674, 307, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13242219401671823, "compression_ratio": 1.699588477366255, "no_speech_prob": 1.0952706361422315e-05}, {"id": 1972, "seek": 566844, "start": 5693.5199999999995, "end": 5698.24, "text": " So the set of points in x space where this dot product is", "tokens": [50364, 307, 264, 3753, 300, 34149, 264, 7719, 286, 300, 50544, 50544, 307, 516, 281, 5258, 288, 2159, 2681, 1804, 502, 490, 7719, 6351, 50684, 50684, 689, 288, 2159, 6915, 3175, 502, 13, 50810, 50810, 1545, 775, 309, 9845, 264, 1901, 666, 732, 38490, 30, 51004, 51004, 467, 311, 570, 291, 434, 15866, 264, 5893, 1674, 295, 364, 4846, 51164, 51164, 8062, 365, 257, 3364, 8062, 13, 51240, 51240, 759, 729, 732, 18875, 366, 41488, 11, 51428, 51428, 550, 264, 5893, 1674, 307, 1958, 13, 51508, 51508, 2264, 11, 272, 307, 445, 364, 18687, 13, 51618, 51618, 407, 264, 992, 295, 2793, 294, 2031, 1901, 689, 341, 5893, 1674, 307, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13242219401671823, "compression_ratio": 1.699588477366255, "no_speech_prob": 1.0952706361422315e-05}, {"id": 1973, "seek": 569824, "start": 5698.24, "end": 5702.16, "text": " 0 is the set of points that are orthogonal to the vector w.", "tokens": [50364, 1958, 307, 264, 992, 295, 2793, 300, 366, 41488, 281, 264, 8062, 261, 13, 50560, 50560, 407, 294, 257, 297, 12, 18759, 1901, 11, 428, 8062, 261, 307, 257, 8062, 13, 50880, 50880, 400, 264, 992, 295, 2031, 6104, 5893, 1674, 365, 261, 307, 1958, 51058, 51058, 307, 257, 9848, 36390, 13, 51148, 51148, 407, 309, 311, 257, 8213, 2090, 17940, 295, 10139, 297, 3175, 502, 13, 51376, 51376, 400, 300, 9848, 36390, 41347, 264, 1901, 295, 10139, 297, 51534, 51534, 666, 38490, 13, 51622, 51622, 407, 510, 307, 264, 2590, 294, 732, 12819, 13, 51758, 51758, 509, 362, 732, 12819, 11, 2031, 16, 11, 2031, 17, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11292403936386108, "compression_ratio": 1.8058252427184467, "no_speech_prob": 5.771823907707585e-06}, {"id": 1974, "seek": 569824, "start": 5702.16, "end": 5708.5599999999995, "text": " So in a n-dimensional space, your vector w is a vector.", "tokens": [50364, 1958, 307, 264, 992, 295, 2793, 300, 366, 41488, 281, 264, 8062, 261, 13, 50560, 50560, 407, 294, 257, 297, 12, 18759, 1901, 11, 428, 8062, 261, 307, 257, 8062, 13, 50880, 50880, 400, 264, 992, 295, 2031, 6104, 5893, 1674, 365, 261, 307, 1958, 51058, 51058, 307, 257, 9848, 36390, 13, 51148, 51148, 407, 309, 311, 257, 8213, 2090, 17940, 295, 10139, 297, 3175, 502, 13, 51376, 51376, 400, 300, 9848, 36390, 41347, 264, 1901, 295, 10139, 297, 51534, 51534, 666, 38490, 13, 51622, 51622, 407, 510, 307, 264, 2590, 294, 732, 12819, 13, 51758, 51758, 509, 362, 732, 12819, 11, 2031, 16, 11, 2031, 17, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11292403936386108, "compression_ratio": 1.8058252427184467, "no_speech_prob": 5.771823907707585e-06}, {"id": 1975, "seek": 569824, "start": 5708.5599999999995, "end": 5712.12, "text": " And the set of x whose dot product with w is 0", "tokens": [50364, 1958, 307, 264, 992, 295, 2793, 300, 366, 41488, 281, 264, 8062, 261, 13, 50560, 50560, 407, 294, 257, 297, 12, 18759, 1901, 11, 428, 8062, 261, 307, 257, 8062, 13, 50880, 50880, 400, 264, 992, 295, 2031, 6104, 5893, 1674, 365, 261, 307, 1958, 51058, 51058, 307, 257, 9848, 36390, 13, 51148, 51148, 407, 309, 311, 257, 8213, 2090, 17940, 295, 10139, 297, 3175, 502, 13, 51376, 51376, 400, 300, 9848, 36390, 41347, 264, 1901, 295, 10139, 297, 51534, 51534, 666, 38490, 13, 51622, 51622, 407, 510, 307, 264, 2590, 294, 732, 12819, 13, 51758, 51758, 509, 362, 732, 12819, 11, 2031, 16, 11, 2031, 17, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11292403936386108, "compression_ratio": 1.8058252427184467, "no_speech_prob": 5.771823907707585e-06}, {"id": 1976, "seek": 569824, "start": 5712.12, "end": 5713.92, "text": " is a hyperplane.", "tokens": [50364, 1958, 307, 264, 992, 295, 2793, 300, 366, 41488, 281, 264, 8062, 261, 13, 50560, 50560, 407, 294, 257, 297, 12, 18759, 1901, 11, 428, 8062, 261, 307, 257, 8062, 13, 50880, 50880, 400, 264, 992, 295, 2031, 6104, 5893, 1674, 365, 261, 307, 1958, 51058, 51058, 307, 257, 9848, 36390, 13, 51148, 51148, 407, 309, 311, 257, 8213, 2090, 17940, 295, 10139, 297, 3175, 502, 13, 51376, 51376, 400, 300, 9848, 36390, 41347, 264, 1901, 295, 10139, 297, 51534, 51534, 666, 38490, 13, 51622, 51622, 407, 510, 307, 264, 2590, 294, 732, 12819, 13, 51758, 51758, 509, 362, 732, 12819, 11, 2031, 16, 11, 2031, 17, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11292403936386108, "compression_ratio": 1.8058252427184467, "no_speech_prob": 5.771823907707585e-06}, {"id": 1977, "seek": 569824, "start": 5713.92, "end": 5718.48, "text": " So it's a linear subspace of dimension n minus 1.", "tokens": [50364, 1958, 307, 264, 992, 295, 2793, 300, 366, 41488, 281, 264, 8062, 261, 13, 50560, 50560, 407, 294, 257, 297, 12, 18759, 1901, 11, 428, 8062, 261, 307, 257, 8062, 13, 50880, 50880, 400, 264, 992, 295, 2031, 6104, 5893, 1674, 365, 261, 307, 1958, 51058, 51058, 307, 257, 9848, 36390, 13, 51148, 51148, 407, 309, 311, 257, 8213, 2090, 17940, 295, 10139, 297, 3175, 502, 13, 51376, 51376, 400, 300, 9848, 36390, 41347, 264, 1901, 295, 10139, 297, 51534, 51534, 666, 38490, 13, 51622, 51622, 407, 510, 307, 264, 2590, 294, 732, 12819, 13, 51758, 51758, 509, 362, 732, 12819, 11, 2031, 16, 11, 2031, 17, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11292403936386108, "compression_ratio": 1.8058252427184467, "no_speech_prob": 5.771823907707585e-06}, {"id": 1978, "seek": 569824, "start": 5718.48, "end": 5721.639999999999, "text": " And that hyperplane divides the space of dimension n", "tokens": [50364, 1958, 307, 264, 992, 295, 2793, 300, 366, 41488, 281, 264, 8062, 261, 13, 50560, 50560, 407, 294, 257, 297, 12, 18759, 1901, 11, 428, 8062, 261, 307, 257, 8062, 13, 50880, 50880, 400, 264, 992, 295, 2031, 6104, 5893, 1674, 365, 261, 307, 1958, 51058, 51058, 307, 257, 9848, 36390, 13, 51148, 51148, 407, 309, 311, 257, 8213, 2090, 17940, 295, 10139, 297, 3175, 502, 13, 51376, 51376, 400, 300, 9848, 36390, 41347, 264, 1901, 295, 10139, 297, 51534, 51534, 666, 38490, 13, 51622, 51622, 407, 510, 307, 264, 2590, 294, 732, 12819, 13, 51758, 51758, 509, 362, 732, 12819, 11, 2031, 16, 11, 2031, 17, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11292403936386108, "compression_ratio": 1.8058252427184467, "no_speech_prob": 5.771823907707585e-06}, {"id": 1979, "seek": 569824, "start": 5721.639999999999, "end": 5723.4, "text": " into halves.", "tokens": [50364, 1958, 307, 264, 992, 295, 2793, 300, 366, 41488, 281, 264, 8062, 261, 13, 50560, 50560, 407, 294, 257, 297, 12, 18759, 1901, 11, 428, 8062, 261, 307, 257, 8062, 13, 50880, 50880, 400, 264, 992, 295, 2031, 6104, 5893, 1674, 365, 261, 307, 1958, 51058, 51058, 307, 257, 9848, 36390, 13, 51148, 51148, 407, 309, 311, 257, 8213, 2090, 17940, 295, 10139, 297, 3175, 502, 13, 51376, 51376, 400, 300, 9848, 36390, 41347, 264, 1901, 295, 10139, 297, 51534, 51534, 666, 38490, 13, 51622, 51622, 407, 510, 307, 264, 2590, 294, 732, 12819, 13, 51758, 51758, 509, 362, 732, 12819, 11, 2031, 16, 11, 2031, 17, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11292403936386108, "compression_ratio": 1.8058252427184467, "no_speech_prob": 5.771823907707585e-06}, {"id": 1980, "seek": 569824, "start": 5723.4, "end": 5726.12, "text": " So here is the situation in two dimensions.", "tokens": [50364, 1958, 307, 264, 992, 295, 2793, 300, 366, 41488, 281, 264, 8062, 261, 13, 50560, 50560, 407, 294, 257, 297, 12, 18759, 1901, 11, 428, 8062, 261, 307, 257, 8062, 13, 50880, 50880, 400, 264, 992, 295, 2031, 6104, 5893, 1674, 365, 261, 307, 1958, 51058, 51058, 307, 257, 9848, 36390, 13, 51148, 51148, 407, 309, 311, 257, 8213, 2090, 17940, 295, 10139, 297, 3175, 502, 13, 51376, 51376, 400, 300, 9848, 36390, 41347, 264, 1901, 295, 10139, 297, 51534, 51534, 666, 38490, 13, 51622, 51622, 407, 510, 307, 264, 2590, 294, 732, 12819, 13, 51758, 51758, 509, 362, 732, 12819, 11, 2031, 16, 11, 2031, 17, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11292403936386108, "compression_ratio": 1.8058252427184467, "no_speech_prob": 5.771823907707585e-06}, {"id": 1981, "seek": 569824, "start": 5726.12, "end": 5727.96, "text": " You have two dimensions, x1, x2.", "tokens": [50364, 1958, 307, 264, 992, 295, 2793, 300, 366, 41488, 281, 264, 8062, 261, 13, 50560, 50560, 407, 294, 257, 297, 12, 18759, 1901, 11, 428, 8062, 261, 307, 257, 8062, 13, 50880, 50880, 400, 264, 992, 295, 2031, 6104, 5893, 1674, 365, 261, 307, 1958, 51058, 51058, 307, 257, 9848, 36390, 13, 51148, 51148, 407, 309, 311, 257, 8213, 2090, 17940, 295, 10139, 297, 3175, 502, 13, 51376, 51376, 400, 300, 9848, 36390, 41347, 264, 1901, 295, 10139, 297, 51534, 51534, 666, 38490, 13, 51622, 51622, 407, 510, 307, 264, 2590, 294, 732, 12819, 13, 51758, 51758, 509, 362, 732, 12819, 11, 2031, 16, 11, 2031, 17, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11292403936386108, "compression_ratio": 1.8058252427184467, "no_speech_prob": 5.771823907707585e-06}, {"id": 1982, "seek": 572796, "start": 5727.96, "end": 5730.2, "text": " You have data points here, the red category", "tokens": [50364, 509, 362, 1412, 2793, 510, 11, 264, 2182, 7719, 50476, 50476, 293, 264, 3344, 7719, 13, 50534, 50534, 400, 456, 307, 257, 3364, 8062, 1804, 257, 12577, 50742, 50742, 689, 264, 24700, 510, 295, 341, 3092, 29279, 1622, 365, 2031, 16, 51062, 51062, 307, 3175, 272, 1413, 6666, 538, 261, 16, 13, 51224, 51224, 407, 300, 2709, 291, 364, 1558, 337, 437, 261, 820, 312, 13, 51346, 51346, 400, 264, 261, 8062, 307, 41488, 281, 300, 29279, 3753, 13, 51666, 51666, 407, 4473, 272, 486, 1319, 264, 2535, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09009143870363953, "compression_ratio": 1.6308411214953271, "no_speech_prob": 9.223106644640211e-06}, {"id": 1983, "seek": 572796, "start": 5730.2, "end": 5731.36, "text": " and the blue category.", "tokens": [50364, 509, 362, 1412, 2793, 510, 11, 264, 2182, 7719, 50476, 50476, 293, 264, 3344, 7719, 13, 50534, 50534, 400, 456, 307, 257, 3364, 8062, 1804, 257, 12577, 50742, 50742, 689, 264, 24700, 510, 295, 341, 3092, 29279, 1622, 365, 2031, 16, 51062, 51062, 307, 3175, 272, 1413, 6666, 538, 261, 16, 13, 51224, 51224, 407, 300, 2709, 291, 364, 1558, 337, 437, 261, 820, 312, 13, 51346, 51346, 400, 264, 261, 8062, 307, 41488, 281, 300, 29279, 3753, 13, 51666, 51666, 407, 4473, 272, 486, 1319, 264, 2535, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09009143870363953, "compression_ratio": 1.6308411214953271, "no_speech_prob": 9.223106644640211e-06}, {"id": 1984, "seek": 572796, "start": 5731.36, "end": 5735.52, "text": " And there is a weight vector plus a bias", "tokens": [50364, 509, 362, 1412, 2793, 510, 11, 264, 2182, 7719, 50476, 50476, 293, 264, 3344, 7719, 13, 50534, 50534, 400, 456, 307, 257, 3364, 8062, 1804, 257, 12577, 50742, 50742, 689, 264, 24700, 510, 295, 341, 3092, 29279, 1622, 365, 2031, 16, 51062, 51062, 307, 3175, 272, 1413, 6666, 538, 261, 16, 13, 51224, 51224, 407, 300, 2709, 291, 364, 1558, 337, 437, 261, 820, 312, 13, 51346, 51346, 400, 264, 261, 8062, 307, 41488, 281, 300, 29279, 3753, 13, 51666, 51666, 407, 4473, 272, 486, 1319, 264, 2535, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09009143870363953, "compression_ratio": 1.6308411214953271, "no_speech_prob": 9.223106644640211e-06}, {"id": 1985, "seek": 572796, "start": 5735.52, "end": 5741.92, "text": " where the intercept here of this green separating line with x1", "tokens": [50364, 509, 362, 1412, 2793, 510, 11, 264, 2182, 7719, 50476, 50476, 293, 264, 3344, 7719, 13, 50534, 50534, 400, 456, 307, 257, 3364, 8062, 1804, 257, 12577, 50742, 50742, 689, 264, 24700, 510, 295, 341, 3092, 29279, 1622, 365, 2031, 16, 51062, 51062, 307, 3175, 272, 1413, 6666, 538, 261, 16, 13, 51224, 51224, 407, 300, 2709, 291, 364, 1558, 337, 437, 261, 820, 312, 13, 51346, 51346, 400, 264, 261, 8062, 307, 41488, 281, 300, 29279, 3753, 13, 51666, 51666, 407, 4473, 272, 486, 1319, 264, 2535, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09009143870363953, "compression_ratio": 1.6308411214953271, "no_speech_prob": 9.223106644640211e-06}, {"id": 1986, "seek": 572796, "start": 5741.92, "end": 5745.16, "text": " is minus b times divided by w1.", "tokens": [50364, 509, 362, 1412, 2793, 510, 11, 264, 2182, 7719, 50476, 50476, 293, 264, 3344, 7719, 13, 50534, 50534, 400, 456, 307, 257, 3364, 8062, 1804, 257, 12577, 50742, 50742, 689, 264, 24700, 510, 295, 341, 3092, 29279, 1622, 365, 2031, 16, 51062, 51062, 307, 3175, 272, 1413, 6666, 538, 261, 16, 13, 51224, 51224, 407, 300, 2709, 291, 364, 1558, 337, 437, 261, 820, 312, 13, 51346, 51346, 400, 264, 261, 8062, 307, 41488, 281, 300, 29279, 3753, 13, 51666, 51666, 407, 4473, 272, 486, 1319, 264, 2535, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09009143870363953, "compression_ratio": 1.6308411214953271, "no_speech_prob": 9.223106644640211e-06}, {"id": 1987, "seek": 572796, "start": 5745.16, "end": 5747.6, "text": " So that gives you an idea for what w should be.", "tokens": [50364, 509, 362, 1412, 2793, 510, 11, 264, 2182, 7719, 50476, 50476, 293, 264, 3344, 7719, 13, 50534, 50534, 400, 456, 307, 257, 3364, 8062, 1804, 257, 12577, 50742, 50742, 689, 264, 24700, 510, 295, 341, 3092, 29279, 1622, 365, 2031, 16, 51062, 51062, 307, 3175, 272, 1413, 6666, 538, 261, 16, 13, 51224, 51224, 407, 300, 2709, 291, 364, 1558, 337, 437, 261, 820, 312, 13, 51346, 51346, 400, 264, 261, 8062, 307, 41488, 281, 300, 29279, 3753, 13, 51666, 51666, 407, 4473, 272, 486, 1319, 264, 2535, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09009143870363953, "compression_ratio": 1.6308411214953271, "no_speech_prob": 9.223106644640211e-06}, {"id": 1988, "seek": 572796, "start": 5747.6, "end": 5754.0, "text": " And the w vector is orthogonal to that separating surface.", "tokens": [50364, 509, 362, 1412, 2793, 510, 11, 264, 2182, 7719, 50476, 50476, 293, 264, 3344, 7719, 13, 50534, 50534, 400, 456, 307, 257, 3364, 8062, 1804, 257, 12577, 50742, 50742, 689, 264, 24700, 510, 295, 341, 3092, 29279, 1622, 365, 2031, 16, 51062, 51062, 307, 3175, 272, 1413, 6666, 538, 261, 16, 13, 51224, 51224, 407, 300, 2709, 291, 364, 1558, 337, 437, 261, 820, 312, 13, 51346, 51346, 400, 264, 261, 8062, 307, 41488, 281, 300, 29279, 3753, 13, 51666, 51666, 407, 4473, 272, 486, 1319, 264, 2535, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09009143870363953, "compression_ratio": 1.6308411214953271, "no_speech_prob": 9.223106644640211e-06}, {"id": 1989, "seek": 572796, "start": 5754.0, "end": 5756.0, "text": " So changing b will change the position.", "tokens": [50364, 509, 362, 1412, 2793, 510, 11, 264, 2182, 7719, 50476, 50476, 293, 264, 3344, 7719, 13, 50534, 50534, 400, 456, 307, 257, 3364, 8062, 1804, 257, 12577, 50742, 50742, 689, 264, 24700, 510, 295, 341, 3092, 29279, 1622, 365, 2031, 16, 51062, 51062, 307, 3175, 272, 1413, 6666, 538, 261, 16, 13, 51224, 51224, 407, 300, 2709, 291, 364, 1558, 337, 437, 261, 820, 312, 13, 51346, 51346, 400, 264, 261, 8062, 307, 41488, 281, 300, 29279, 3753, 13, 51666, 51666, 407, 4473, 272, 486, 1319, 264, 2535, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09009143870363953, "compression_ratio": 1.6308411214953271, "no_speech_prob": 9.223106644640211e-06}, {"id": 1990, "seek": 575600, "start": 5756.0, "end": 5761.32, "text": " And then changing w will change the orientation, basically.", "tokens": [50364, 400, 550, 4473, 261, 486, 1319, 264, 14764, 11, 1936, 13, 50630, 50630, 823, 11, 437, 466, 6851, 411, 341, 50714, 50714, 689, 264, 2793, 366, 264, 2182, 293, 3344, 2793, 366, 406, 50910, 50910, 3128, 712, 538, 257, 9848, 36390, 30, 51038, 51038, 663, 311, 1219, 257, 2107, 12, 28263, 356, 3128, 712, 1389, 13, 51200, 51200, 407, 456, 11, 291, 393, 380, 764, 257, 8213, 1508, 9902, 281, 4994, 729, 13, 51368, 51368, 708, 366, 321, 516, 281, 360, 30, 51408, 51560, 682, 1186, 11, 456, 307, 257, 20904, 300, 1709, 646, 281, 39157, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13298004150390624, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129663860454457e-06}, {"id": 1991, "seek": 575600, "start": 5761.32, "end": 5763.0, "text": " Now, what about situations like this", "tokens": [50364, 400, 550, 4473, 261, 486, 1319, 264, 14764, 11, 1936, 13, 50630, 50630, 823, 11, 437, 466, 6851, 411, 341, 50714, 50714, 689, 264, 2793, 366, 264, 2182, 293, 3344, 2793, 366, 406, 50910, 50910, 3128, 712, 538, 257, 9848, 36390, 30, 51038, 51038, 663, 311, 1219, 257, 2107, 12, 28263, 356, 3128, 712, 1389, 13, 51200, 51200, 407, 456, 11, 291, 393, 380, 764, 257, 8213, 1508, 9902, 281, 4994, 729, 13, 51368, 51368, 708, 366, 321, 516, 281, 360, 30, 51408, 51560, 682, 1186, 11, 456, 307, 257, 20904, 300, 1709, 646, 281, 39157, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13298004150390624, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129663860454457e-06}, {"id": 1992, "seek": 575600, "start": 5763.0, "end": 5766.92, "text": " where the points are the red and blue points are not", "tokens": [50364, 400, 550, 4473, 261, 486, 1319, 264, 14764, 11, 1936, 13, 50630, 50630, 823, 11, 437, 466, 6851, 411, 341, 50714, 50714, 689, 264, 2793, 366, 264, 2182, 293, 3344, 2793, 366, 406, 50910, 50910, 3128, 712, 538, 257, 9848, 36390, 30, 51038, 51038, 663, 311, 1219, 257, 2107, 12, 28263, 356, 3128, 712, 1389, 13, 51200, 51200, 407, 456, 11, 291, 393, 380, 764, 257, 8213, 1508, 9902, 281, 4994, 729, 13, 51368, 51368, 708, 366, 321, 516, 281, 360, 30, 51408, 51560, 682, 1186, 11, 456, 307, 257, 20904, 300, 1709, 646, 281, 39157, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13298004150390624, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129663860454457e-06}, {"id": 1993, "seek": 575600, "start": 5766.92, "end": 5769.48, "text": " separable by a hyperplane?", "tokens": [50364, 400, 550, 4473, 261, 486, 1319, 264, 14764, 11, 1936, 13, 50630, 50630, 823, 11, 437, 466, 6851, 411, 341, 50714, 50714, 689, 264, 2793, 366, 264, 2182, 293, 3344, 2793, 366, 406, 50910, 50910, 3128, 712, 538, 257, 9848, 36390, 30, 51038, 51038, 663, 311, 1219, 257, 2107, 12, 28263, 356, 3128, 712, 1389, 13, 51200, 51200, 407, 456, 11, 291, 393, 380, 764, 257, 8213, 1508, 9902, 281, 4994, 729, 13, 51368, 51368, 708, 366, 321, 516, 281, 360, 30, 51408, 51560, 682, 1186, 11, 456, 307, 257, 20904, 300, 1709, 646, 281, 39157, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13298004150390624, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129663860454457e-06}, {"id": 1994, "seek": 575600, "start": 5769.48, "end": 5772.72, "text": " That's called a non-linearly separable case.", "tokens": [50364, 400, 550, 4473, 261, 486, 1319, 264, 14764, 11, 1936, 13, 50630, 50630, 823, 11, 437, 466, 6851, 411, 341, 50714, 50714, 689, 264, 2793, 366, 264, 2182, 293, 3344, 2793, 366, 406, 50910, 50910, 3128, 712, 538, 257, 9848, 36390, 30, 51038, 51038, 663, 311, 1219, 257, 2107, 12, 28263, 356, 3128, 712, 1389, 13, 51200, 51200, 407, 456, 11, 291, 393, 380, 764, 257, 8213, 1508, 9902, 281, 4994, 729, 13, 51368, 51368, 708, 366, 321, 516, 281, 360, 30, 51408, 51560, 682, 1186, 11, 456, 307, 257, 20904, 300, 1709, 646, 281, 39157, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13298004150390624, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129663860454457e-06}, {"id": 1995, "seek": 575600, "start": 5772.72, "end": 5776.08, "text": " So there, you can't use a linear classifier to separate those.", "tokens": [50364, 400, 550, 4473, 261, 486, 1319, 264, 14764, 11, 1936, 13, 50630, 50630, 823, 11, 437, 466, 6851, 411, 341, 50714, 50714, 689, 264, 2793, 366, 264, 2182, 293, 3344, 2793, 366, 406, 50910, 50910, 3128, 712, 538, 257, 9848, 36390, 30, 51038, 51038, 663, 311, 1219, 257, 2107, 12, 28263, 356, 3128, 712, 1389, 13, 51200, 51200, 407, 456, 11, 291, 393, 380, 764, 257, 8213, 1508, 9902, 281, 4994, 729, 13, 51368, 51368, 708, 366, 321, 516, 281, 360, 30, 51408, 51560, 682, 1186, 11, 456, 307, 257, 20904, 300, 1709, 646, 281, 39157, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13298004150390624, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129663860454457e-06}, {"id": 1996, "seek": 575600, "start": 5776.08, "end": 5776.88, "text": " What are we going to do?", "tokens": [50364, 400, 550, 4473, 261, 486, 1319, 264, 14764, 11, 1936, 13, 50630, 50630, 823, 11, 437, 466, 6851, 411, 341, 50714, 50714, 689, 264, 2793, 366, 264, 2182, 293, 3344, 2793, 366, 406, 50910, 50910, 3128, 712, 538, 257, 9848, 36390, 30, 51038, 51038, 663, 311, 1219, 257, 2107, 12, 28263, 356, 3128, 712, 1389, 13, 51200, 51200, 407, 456, 11, 291, 393, 380, 764, 257, 8213, 1508, 9902, 281, 4994, 729, 13, 51368, 51368, 708, 366, 321, 516, 281, 360, 30, 51408, 51560, 682, 1186, 11, 456, 307, 257, 20904, 300, 1709, 646, 281, 39157, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13298004150390624, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129663860454457e-06}, {"id": 1997, "seek": 575600, "start": 5779.92, "end": 5783.4, "text": " In fact, there is a theorem that goes back to 1966", "tokens": [50364, 400, 550, 4473, 261, 486, 1319, 264, 14764, 11, 1936, 13, 50630, 50630, 823, 11, 437, 466, 6851, 411, 341, 50714, 50714, 689, 264, 2793, 366, 264, 2182, 293, 3344, 2793, 366, 406, 50910, 50910, 3128, 712, 538, 257, 9848, 36390, 30, 51038, 51038, 663, 311, 1219, 257, 2107, 12, 28263, 356, 3128, 712, 1389, 13, 51200, 51200, 407, 456, 11, 291, 393, 380, 764, 257, 8213, 1508, 9902, 281, 4994, 729, 13, 51368, 51368, 708, 366, 321, 516, 281, 360, 30, 51408, 51560, 682, 1186, 11, 456, 307, 257, 20904, 300, 1709, 646, 281, 39157, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13298004150390624, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129663860454457e-06}, {"id": 1998, "seek": 578340, "start": 5783.4, "end": 5786.32, "text": " by Tom Cover, who died recently, actually.", "tokens": [50364, 538, 5041, 19106, 11, 567, 4539, 3938, 11, 767, 13, 50510, 50510, 467, 390, 412, 20374, 11, 300, 1619, 264, 8482, 50640, 50640, 300, 257, 1729, 14634, 295, 280, 2793, 50798, 50798, 307, 43586, 3128, 712, 294, 297, 10139, 50946, 50946, 307, 1998, 281, 502, 562, 280, 307, 4356, 813, 297, 11, 51052, 51052, 457, 307, 1998, 281, 1958, 562, 280, 307, 4833, 813, 297, 13, 51206, 51206, 682, 661, 2283, 11, 498, 291, 747, 364, 297, 12, 18759, 1901, 11, 51386, 51386, 291, 3507, 280, 4974, 2793, 294, 300, 297, 12, 18759, 1901, 11, 51544, 51544, 1412, 2793, 11, 293, 291, 16979, 7645, 552, 3344, 293, 2182, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13756750326241013, "compression_ratio": 1.7341772151898733, "no_speech_prob": 5.173715180717409e-06}, {"id": 1999, "seek": 578340, "start": 5786.32, "end": 5788.92, "text": " It was at Stanford, that says the probability", "tokens": [50364, 538, 5041, 19106, 11, 567, 4539, 3938, 11, 767, 13, 50510, 50510, 467, 390, 412, 20374, 11, 300, 1619, 264, 8482, 50640, 50640, 300, 257, 1729, 14634, 295, 280, 2793, 50798, 50798, 307, 43586, 3128, 712, 294, 297, 10139, 50946, 50946, 307, 1998, 281, 502, 562, 280, 307, 4356, 813, 297, 11, 51052, 51052, 457, 307, 1998, 281, 1958, 562, 280, 307, 4833, 813, 297, 13, 51206, 51206, 682, 661, 2283, 11, 498, 291, 747, 364, 297, 12, 18759, 1901, 11, 51386, 51386, 291, 3507, 280, 4974, 2793, 294, 300, 297, 12, 18759, 1901, 11, 51544, 51544, 1412, 2793, 11, 293, 291, 16979, 7645, 552, 3344, 293, 2182, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13756750326241013, "compression_ratio": 1.7341772151898733, "no_speech_prob": 5.173715180717409e-06}, {"id": 2000, "seek": 578340, "start": 5788.92, "end": 5792.08, "text": " that a particular separation of p points", "tokens": [50364, 538, 5041, 19106, 11, 567, 4539, 3938, 11, 767, 13, 50510, 50510, 467, 390, 412, 20374, 11, 300, 1619, 264, 8482, 50640, 50640, 300, 257, 1729, 14634, 295, 280, 2793, 50798, 50798, 307, 43586, 3128, 712, 294, 297, 10139, 50946, 50946, 307, 1998, 281, 502, 562, 280, 307, 4356, 813, 297, 11, 51052, 51052, 457, 307, 1998, 281, 1958, 562, 280, 307, 4833, 813, 297, 13, 51206, 51206, 682, 661, 2283, 11, 498, 291, 747, 364, 297, 12, 18759, 1901, 11, 51386, 51386, 291, 3507, 280, 4974, 2793, 294, 300, 297, 12, 18759, 1901, 11, 51544, 51544, 1412, 2793, 11, 293, 291, 16979, 7645, 552, 3344, 293, 2182, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13756750326241013, "compression_ratio": 1.7341772151898733, "no_speech_prob": 5.173715180717409e-06}, {"id": 2001, "seek": 578340, "start": 5792.08, "end": 5795.04, "text": " is linearly separable in n dimension", "tokens": [50364, 538, 5041, 19106, 11, 567, 4539, 3938, 11, 767, 13, 50510, 50510, 467, 390, 412, 20374, 11, 300, 1619, 264, 8482, 50640, 50640, 300, 257, 1729, 14634, 295, 280, 2793, 50798, 50798, 307, 43586, 3128, 712, 294, 297, 10139, 50946, 50946, 307, 1998, 281, 502, 562, 280, 307, 4356, 813, 297, 11, 51052, 51052, 457, 307, 1998, 281, 1958, 562, 280, 307, 4833, 813, 297, 13, 51206, 51206, 682, 661, 2283, 11, 498, 291, 747, 364, 297, 12, 18759, 1901, 11, 51386, 51386, 291, 3507, 280, 4974, 2793, 294, 300, 297, 12, 18759, 1901, 11, 51544, 51544, 1412, 2793, 11, 293, 291, 16979, 7645, 552, 3344, 293, 2182, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13756750326241013, "compression_ratio": 1.7341772151898733, "no_speech_prob": 5.173715180717409e-06}, {"id": 2002, "seek": 578340, "start": 5795.04, "end": 5797.16, "text": " is close to 1 when p is smaller than n,", "tokens": [50364, 538, 5041, 19106, 11, 567, 4539, 3938, 11, 767, 13, 50510, 50510, 467, 390, 412, 20374, 11, 300, 1619, 264, 8482, 50640, 50640, 300, 257, 1729, 14634, 295, 280, 2793, 50798, 50798, 307, 43586, 3128, 712, 294, 297, 10139, 50946, 50946, 307, 1998, 281, 502, 562, 280, 307, 4356, 813, 297, 11, 51052, 51052, 457, 307, 1998, 281, 1958, 562, 280, 307, 4833, 813, 297, 13, 51206, 51206, 682, 661, 2283, 11, 498, 291, 747, 364, 297, 12, 18759, 1901, 11, 51386, 51386, 291, 3507, 280, 4974, 2793, 294, 300, 297, 12, 18759, 1901, 11, 51544, 51544, 1412, 2793, 11, 293, 291, 16979, 7645, 552, 3344, 293, 2182, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13756750326241013, "compression_ratio": 1.7341772151898733, "no_speech_prob": 5.173715180717409e-06}, {"id": 2003, "seek": 578340, "start": 5797.16, "end": 5800.24, "text": " but is close to 0 when p is larger than n.", "tokens": [50364, 538, 5041, 19106, 11, 567, 4539, 3938, 11, 767, 13, 50510, 50510, 467, 390, 412, 20374, 11, 300, 1619, 264, 8482, 50640, 50640, 300, 257, 1729, 14634, 295, 280, 2793, 50798, 50798, 307, 43586, 3128, 712, 294, 297, 10139, 50946, 50946, 307, 1998, 281, 502, 562, 280, 307, 4356, 813, 297, 11, 51052, 51052, 457, 307, 1998, 281, 1958, 562, 280, 307, 4833, 813, 297, 13, 51206, 51206, 682, 661, 2283, 11, 498, 291, 747, 364, 297, 12, 18759, 1901, 11, 51386, 51386, 291, 3507, 280, 4974, 2793, 294, 300, 297, 12, 18759, 1901, 11, 51544, 51544, 1412, 2793, 11, 293, 291, 16979, 7645, 552, 3344, 293, 2182, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13756750326241013, "compression_ratio": 1.7341772151898733, "no_speech_prob": 5.173715180717409e-06}, {"id": 2004, "seek": 578340, "start": 5800.24, "end": 5803.839999999999, "text": " In other words, if you take an n-dimensional space,", "tokens": [50364, 538, 5041, 19106, 11, 567, 4539, 3938, 11, 767, 13, 50510, 50510, 467, 390, 412, 20374, 11, 300, 1619, 264, 8482, 50640, 50640, 300, 257, 1729, 14634, 295, 280, 2793, 50798, 50798, 307, 43586, 3128, 712, 294, 297, 10139, 50946, 50946, 307, 1998, 281, 502, 562, 280, 307, 4356, 813, 297, 11, 51052, 51052, 457, 307, 1998, 281, 1958, 562, 280, 307, 4833, 813, 297, 13, 51206, 51206, 682, 661, 2283, 11, 498, 291, 747, 364, 297, 12, 18759, 1901, 11, 51386, 51386, 291, 3507, 280, 4974, 2793, 294, 300, 297, 12, 18759, 1901, 11, 51544, 51544, 1412, 2793, 11, 293, 291, 16979, 7645, 552, 3344, 293, 2182, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13756750326241013, "compression_ratio": 1.7341772151898733, "no_speech_prob": 5.173715180717409e-06}, {"id": 2005, "seek": 578340, "start": 5803.839999999999, "end": 5807.0, "text": " you throw p random points in that n-dimensional space,", "tokens": [50364, 538, 5041, 19106, 11, 567, 4539, 3938, 11, 767, 13, 50510, 50510, 467, 390, 412, 20374, 11, 300, 1619, 264, 8482, 50640, 50640, 300, 257, 1729, 14634, 295, 280, 2793, 50798, 50798, 307, 43586, 3128, 712, 294, 297, 10139, 50946, 50946, 307, 1998, 281, 502, 562, 280, 307, 4356, 813, 297, 11, 51052, 51052, 457, 307, 1998, 281, 1958, 562, 280, 307, 4833, 813, 297, 13, 51206, 51206, 682, 661, 2283, 11, 498, 291, 747, 364, 297, 12, 18759, 1901, 11, 51386, 51386, 291, 3507, 280, 4974, 2793, 294, 300, 297, 12, 18759, 1901, 11, 51544, 51544, 1412, 2793, 11, 293, 291, 16979, 7645, 552, 3344, 293, 2182, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13756750326241013, "compression_ratio": 1.7341772151898733, "no_speech_prob": 5.173715180717409e-06}, {"id": 2006, "seek": 578340, "start": 5807.0, "end": 5813.36, "text": " data points, and you randomly label them blue and red.", "tokens": [50364, 538, 5041, 19106, 11, 567, 4539, 3938, 11, 767, 13, 50510, 50510, 467, 390, 412, 20374, 11, 300, 1619, 264, 8482, 50640, 50640, 300, 257, 1729, 14634, 295, 280, 2793, 50798, 50798, 307, 43586, 3128, 712, 294, 297, 10139, 50946, 50946, 307, 1998, 281, 502, 562, 280, 307, 4356, 813, 297, 11, 51052, 51052, 457, 307, 1998, 281, 1958, 562, 280, 307, 4833, 813, 297, 13, 51206, 51206, 682, 661, 2283, 11, 498, 291, 747, 364, 297, 12, 18759, 1901, 11, 51386, 51386, 291, 3507, 280, 4974, 2793, 294, 300, 297, 12, 18759, 1901, 11, 51544, 51544, 1412, 2793, 11, 293, 291, 16979, 7645, 552, 3344, 293, 2182, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13756750326241013, "compression_ratio": 1.7341772151898733, "no_speech_prob": 5.173715180717409e-06}, {"id": 2007, "seek": 581336, "start": 5813.36, "end": 5815.799999999999, "text": " You ask the question, what is the probability", "tokens": [50364, 509, 1029, 264, 1168, 11, 437, 307, 264, 8482, 50486, 50486, 300, 300, 1729, 10390, 310, 8488, 307, 43586, 3128, 712, 30, 50682, 50682, 286, 393, 4994, 264, 3344, 2793, 490, 264, 2182, 2793, 50796, 50796, 365, 257, 9848, 36390, 13, 50914, 50914, 400, 264, 1867, 307, 11, 498, 280, 307, 1570, 813, 297, 11, 51034, 51034, 291, 362, 257, 665, 2931, 300, 436, 486, 312, 3128, 712, 13, 51152, 51152, 759, 280, 307, 4833, 813, 297, 11, 291, 1936, 51228, 51228, 362, 572, 2931, 300, 436, 486, 13, 51306, 51306, 407, 498, 291, 362, 3256, 21538, 1154, 11, 51474, 51474, 718, 311, 584, 11, 293, 291, 362, 9131, 295, 5110, 11, 636, 3801, 13, 51772, 51772, 407, 718, 311, 584, 291, 360, 297, 12, 77, 468, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12545175263375946, "compression_ratio": 1.7674418604651163, "no_speech_prob": 1.9221281036152504e-05}, {"id": 2008, "seek": 581336, "start": 5815.799999999999, "end": 5819.719999999999, "text": " that that particular dichotomy is linearly separable?", "tokens": [50364, 509, 1029, 264, 1168, 11, 437, 307, 264, 8482, 50486, 50486, 300, 300, 1729, 10390, 310, 8488, 307, 43586, 3128, 712, 30, 50682, 50682, 286, 393, 4994, 264, 3344, 2793, 490, 264, 2182, 2793, 50796, 50796, 365, 257, 9848, 36390, 13, 50914, 50914, 400, 264, 1867, 307, 11, 498, 280, 307, 1570, 813, 297, 11, 51034, 51034, 291, 362, 257, 665, 2931, 300, 436, 486, 312, 3128, 712, 13, 51152, 51152, 759, 280, 307, 4833, 813, 297, 11, 291, 1936, 51228, 51228, 362, 572, 2931, 300, 436, 486, 13, 51306, 51306, 407, 498, 291, 362, 3256, 21538, 1154, 11, 51474, 51474, 718, 311, 584, 11, 293, 291, 362, 9131, 295, 5110, 11, 636, 3801, 13, 51772, 51772, 407, 718, 311, 584, 291, 360, 297, 12, 77, 468, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12545175263375946, "compression_ratio": 1.7674418604651163, "no_speech_prob": 1.9221281036152504e-05}, {"id": 2009, "seek": 581336, "start": 5819.719999999999, "end": 5822.0, "text": " I can separate the blue points from the red points", "tokens": [50364, 509, 1029, 264, 1168, 11, 437, 307, 264, 8482, 50486, 50486, 300, 300, 1729, 10390, 310, 8488, 307, 43586, 3128, 712, 30, 50682, 50682, 286, 393, 4994, 264, 3344, 2793, 490, 264, 2182, 2793, 50796, 50796, 365, 257, 9848, 36390, 13, 50914, 50914, 400, 264, 1867, 307, 11, 498, 280, 307, 1570, 813, 297, 11, 51034, 51034, 291, 362, 257, 665, 2931, 300, 436, 486, 312, 3128, 712, 13, 51152, 51152, 759, 280, 307, 4833, 813, 297, 11, 291, 1936, 51228, 51228, 362, 572, 2931, 300, 436, 486, 13, 51306, 51306, 407, 498, 291, 362, 3256, 21538, 1154, 11, 51474, 51474, 718, 311, 584, 11, 293, 291, 362, 9131, 295, 5110, 11, 636, 3801, 13, 51772, 51772, 407, 718, 311, 584, 291, 360, 297, 12, 77, 468, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12545175263375946, "compression_ratio": 1.7674418604651163, "no_speech_prob": 1.9221281036152504e-05}, {"id": 2010, "seek": 581336, "start": 5822.0, "end": 5824.36, "text": " with a hyperplane.", "tokens": [50364, 509, 1029, 264, 1168, 11, 437, 307, 264, 8482, 50486, 50486, 300, 300, 1729, 10390, 310, 8488, 307, 43586, 3128, 712, 30, 50682, 50682, 286, 393, 4994, 264, 3344, 2793, 490, 264, 2182, 2793, 50796, 50796, 365, 257, 9848, 36390, 13, 50914, 50914, 400, 264, 1867, 307, 11, 498, 280, 307, 1570, 813, 297, 11, 51034, 51034, 291, 362, 257, 665, 2931, 300, 436, 486, 312, 3128, 712, 13, 51152, 51152, 759, 280, 307, 4833, 813, 297, 11, 291, 1936, 51228, 51228, 362, 572, 2931, 300, 436, 486, 13, 51306, 51306, 407, 498, 291, 362, 3256, 21538, 1154, 11, 51474, 51474, 718, 311, 584, 11, 293, 291, 362, 9131, 295, 5110, 11, 636, 3801, 13, 51772, 51772, 407, 718, 311, 584, 291, 360, 297, 12, 77, 468, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12545175263375946, "compression_ratio": 1.7674418604651163, "no_speech_prob": 1.9221281036152504e-05}, {"id": 2011, "seek": 581336, "start": 5824.36, "end": 5826.759999999999, "text": " And the answer is, if p is less than n,", "tokens": [50364, 509, 1029, 264, 1168, 11, 437, 307, 264, 8482, 50486, 50486, 300, 300, 1729, 10390, 310, 8488, 307, 43586, 3128, 712, 30, 50682, 50682, 286, 393, 4994, 264, 3344, 2793, 490, 264, 2182, 2793, 50796, 50796, 365, 257, 9848, 36390, 13, 50914, 50914, 400, 264, 1867, 307, 11, 498, 280, 307, 1570, 813, 297, 11, 51034, 51034, 291, 362, 257, 665, 2931, 300, 436, 486, 312, 3128, 712, 13, 51152, 51152, 759, 280, 307, 4833, 813, 297, 11, 291, 1936, 51228, 51228, 362, 572, 2931, 300, 436, 486, 13, 51306, 51306, 407, 498, 291, 362, 3256, 21538, 1154, 11, 51474, 51474, 718, 311, 584, 11, 293, 291, 362, 9131, 295, 5110, 11, 636, 3801, 13, 51772, 51772, 407, 718, 311, 584, 291, 360, 297, 12, 77, 468, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12545175263375946, "compression_ratio": 1.7674418604651163, "no_speech_prob": 1.9221281036152504e-05}, {"id": 2012, "seek": 581336, "start": 5826.759999999999, "end": 5829.12, "text": " you have a good chance that they will be separable.", "tokens": [50364, 509, 1029, 264, 1168, 11, 437, 307, 264, 8482, 50486, 50486, 300, 300, 1729, 10390, 310, 8488, 307, 43586, 3128, 712, 30, 50682, 50682, 286, 393, 4994, 264, 3344, 2793, 490, 264, 2182, 2793, 50796, 50796, 365, 257, 9848, 36390, 13, 50914, 50914, 400, 264, 1867, 307, 11, 498, 280, 307, 1570, 813, 297, 11, 51034, 51034, 291, 362, 257, 665, 2931, 300, 436, 486, 312, 3128, 712, 13, 51152, 51152, 759, 280, 307, 4833, 813, 297, 11, 291, 1936, 51228, 51228, 362, 572, 2931, 300, 436, 486, 13, 51306, 51306, 407, 498, 291, 362, 3256, 21538, 1154, 11, 51474, 51474, 718, 311, 584, 11, 293, 291, 362, 9131, 295, 5110, 11, 636, 3801, 13, 51772, 51772, 407, 718, 311, 584, 291, 360, 297, 12, 77, 468, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12545175263375946, "compression_ratio": 1.7674418604651163, "no_speech_prob": 1.9221281036152504e-05}, {"id": 2013, "seek": 581336, "start": 5829.12, "end": 5830.639999999999, "text": " If p is larger than n, you basically", "tokens": [50364, 509, 1029, 264, 1168, 11, 437, 307, 264, 8482, 50486, 50486, 300, 300, 1729, 10390, 310, 8488, 307, 43586, 3128, 712, 30, 50682, 50682, 286, 393, 4994, 264, 3344, 2793, 490, 264, 2182, 2793, 50796, 50796, 365, 257, 9848, 36390, 13, 50914, 50914, 400, 264, 1867, 307, 11, 498, 280, 307, 1570, 813, 297, 11, 51034, 51034, 291, 362, 257, 665, 2931, 300, 436, 486, 312, 3128, 712, 13, 51152, 51152, 759, 280, 307, 4833, 813, 297, 11, 291, 1936, 51228, 51228, 362, 572, 2931, 300, 436, 486, 13, 51306, 51306, 407, 498, 291, 362, 3256, 21538, 1154, 11, 51474, 51474, 718, 311, 584, 11, 293, 291, 362, 9131, 295, 5110, 11, 636, 3801, 13, 51772, 51772, 407, 718, 311, 584, 291, 360, 297, 12, 77, 468, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12545175263375946, "compression_ratio": 1.7674418604651163, "no_speech_prob": 1.9221281036152504e-05}, {"id": 2014, "seek": 581336, "start": 5830.639999999999, "end": 5832.2, "text": " have no chance that they will.", "tokens": [50364, 509, 1029, 264, 1168, 11, 437, 307, 264, 8482, 50486, 50486, 300, 300, 1729, 10390, 310, 8488, 307, 43586, 3128, 712, 30, 50682, 50682, 286, 393, 4994, 264, 3344, 2793, 490, 264, 2182, 2793, 50796, 50796, 365, 257, 9848, 36390, 13, 50914, 50914, 400, 264, 1867, 307, 11, 498, 280, 307, 1570, 813, 297, 11, 51034, 51034, 291, 362, 257, 665, 2931, 300, 436, 486, 312, 3128, 712, 13, 51152, 51152, 759, 280, 307, 4833, 813, 297, 11, 291, 1936, 51228, 51228, 362, 572, 2931, 300, 436, 486, 13, 51306, 51306, 407, 498, 291, 362, 3256, 21538, 1154, 11, 51474, 51474, 718, 311, 584, 11, 293, 291, 362, 9131, 295, 5110, 11, 636, 3801, 13, 51772, 51772, 407, 718, 311, 584, 291, 360, 297, 12, 77, 468, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12545175263375946, "compression_ratio": 1.7674418604651163, "no_speech_prob": 1.9221281036152504e-05}, {"id": 2015, "seek": 581336, "start": 5832.2, "end": 5835.5599999999995, "text": " So if you have image classification problem,", "tokens": [50364, 509, 1029, 264, 1168, 11, 437, 307, 264, 8482, 50486, 50486, 300, 300, 1729, 10390, 310, 8488, 307, 43586, 3128, 712, 30, 50682, 50682, 286, 393, 4994, 264, 3344, 2793, 490, 264, 2182, 2793, 50796, 50796, 365, 257, 9848, 36390, 13, 50914, 50914, 400, 264, 1867, 307, 11, 498, 280, 307, 1570, 813, 297, 11, 51034, 51034, 291, 362, 257, 665, 2931, 300, 436, 486, 312, 3128, 712, 13, 51152, 51152, 759, 280, 307, 4833, 813, 297, 11, 291, 1936, 51228, 51228, 362, 572, 2931, 300, 436, 486, 13, 51306, 51306, 407, 498, 291, 362, 3256, 21538, 1154, 11, 51474, 51474, 718, 311, 584, 11, 293, 291, 362, 9131, 295, 5110, 11, 636, 3801, 13, 51772, 51772, 407, 718, 311, 584, 291, 360, 297, 12, 77, 468, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12545175263375946, "compression_ratio": 1.7674418604651163, "no_speech_prob": 1.9221281036152504e-05}, {"id": 2016, "seek": 581336, "start": 5835.5599999999995, "end": 5841.5199999999995, "text": " let's say, and you have tons of examples, way bigger.", "tokens": [50364, 509, 1029, 264, 1168, 11, 437, 307, 264, 8482, 50486, 50486, 300, 300, 1729, 10390, 310, 8488, 307, 43586, 3128, 712, 30, 50682, 50682, 286, 393, 4994, 264, 3344, 2793, 490, 264, 2182, 2793, 50796, 50796, 365, 257, 9848, 36390, 13, 50914, 50914, 400, 264, 1867, 307, 11, 498, 280, 307, 1570, 813, 297, 11, 51034, 51034, 291, 362, 257, 665, 2931, 300, 436, 486, 312, 3128, 712, 13, 51152, 51152, 759, 280, 307, 4833, 813, 297, 11, 291, 1936, 51228, 51228, 362, 572, 2931, 300, 436, 486, 13, 51306, 51306, 407, 498, 291, 362, 3256, 21538, 1154, 11, 51474, 51474, 718, 311, 584, 11, 293, 291, 362, 9131, 295, 5110, 11, 636, 3801, 13, 51772, 51772, 407, 718, 311, 584, 291, 360, 297, 12, 77, 468, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12545175263375946, "compression_ratio": 1.7674418604651163, "no_speech_prob": 1.9221281036152504e-05}, {"id": 2017, "seek": 581336, "start": 5841.5199999999995, "end": 5842.839999999999, "text": " So let's say you do n-nist.", "tokens": [50364, 509, 1029, 264, 1168, 11, 437, 307, 264, 8482, 50486, 50486, 300, 300, 1729, 10390, 310, 8488, 307, 43586, 3128, 712, 30, 50682, 50682, 286, 393, 4994, 264, 3344, 2793, 490, 264, 2182, 2793, 50796, 50796, 365, 257, 9848, 36390, 13, 50914, 50914, 400, 264, 1867, 307, 11, 498, 280, 307, 1570, 813, 297, 11, 51034, 51034, 291, 362, 257, 665, 2931, 300, 436, 486, 312, 3128, 712, 13, 51152, 51152, 759, 280, 307, 4833, 813, 297, 11, 291, 1936, 51228, 51228, 362, 572, 2931, 300, 436, 486, 13, 51306, 51306, 407, 498, 291, 362, 3256, 21538, 1154, 11, 51474, 51474, 718, 311, 584, 11, 293, 291, 362, 9131, 295, 5110, 11, 636, 3801, 13, 51772, 51772, 407, 718, 311, 584, 291, 360, 297, 12, 77, 468, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12545175263375946, "compression_ratio": 1.7674418604651163, "no_speech_prob": 1.9221281036152504e-05}, {"id": 2018, "seek": 584284, "start": 5842.84, "end": 5845.88, "text": " So n-nist is a data set of handwritten digits.", "tokens": [50364, 407, 297, 12, 77, 468, 307, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50516, 50516, 440, 5267, 366, 322, 7562, 538, 7562, 18668, 13, 50616, 50616, 682, 1186, 11, 264, 35698, 10139, 307, 4356, 50708, 50708, 570, 512, 18668, 366, 1009, 1958, 13, 50876, 50876, 400, 291, 362, 4060, 11, 1360, 10938, 13, 50992, 50992, 440, 8482, 300, 729, 4060, 11, 1360, 10938, 295, 11, 718, 311, 584, 11, 51160, 51160, 1958, 82, 490, 1203, 1646, 420, 502, 82, 490, 1203, 1646, 51284, 51284, 307, 43586, 3128, 712, 307, 1936, 1958, 13, 51424, 51620, 3013, 307, 983, 561, 14479, 264, 13735, 2316, 295, 5102, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15344506010003045, "compression_ratio": 1.5951417004048583, "no_speech_prob": 1.4060852663533296e-05}, {"id": 2019, "seek": 584284, "start": 5845.88, "end": 5847.88, "text": " The images are on 28 by 28 pixels.", "tokens": [50364, 407, 297, 12, 77, 468, 307, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50516, 50516, 440, 5267, 366, 322, 7562, 538, 7562, 18668, 13, 50616, 50616, 682, 1186, 11, 264, 35698, 10139, 307, 4356, 50708, 50708, 570, 512, 18668, 366, 1009, 1958, 13, 50876, 50876, 400, 291, 362, 4060, 11, 1360, 10938, 13, 50992, 50992, 440, 8482, 300, 729, 4060, 11, 1360, 10938, 295, 11, 718, 311, 584, 11, 51160, 51160, 1958, 82, 490, 1203, 1646, 420, 502, 82, 490, 1203, 1646, 51284, 51284, 307, 43586, 3128, 712, 307, 1936, 1958, 13, 51424, 51620, 3013, 307, 983, 561, 14479, 264, 13735, 2316, 295, 5102, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15344506010003045, "compression_ratio": 1.5951417004048583, "no_speech_prob": 1.4060852663533296e-05}, {"id": 2020, "seek": 584284, "start": 5847.88, "end": 5849.72, "text": " In fact, the intrinsic dimension is smaller", "tokens": [50364, 407, 297, 12, 77, 468, 307, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50516, 50516, 440, 5267, 366, 322, 7562, 538, 7562, 18668, 13, 50616, 50616, 682, 1186, 11, 264, 35698, 10139, 307, 4356, 50708, 50708, 570, 512, 18668, 366, 1009, 1958, 13, 50876, 50876, 400, 291, 362, 4060, 11, 1360, 10938, 13, 50992, 50992, 440, 8482, 300, 729, 4060, 11, 1360, 10938, 295, 11, 718, 311, 584, 11, 51160, 51160, 1958, 82, 490, 1203, 1646, 420, 502, 82, 490, 1203, 1646, 51284, 51284, 307, 43586, 3128, 712, 307, 1936, 1958, 13, 51424, 51620, 3013, 307, 983, 561, 14479, 264, 13735, 2316, 295, 5102, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15344506010003045, "compression_ratio": 1.5951417004048583, "no_speech_prob": 1.4060852663533296e-05}, {"id": 2021, "seek": 584284, "start": 5849.72, "end": 5853.08, "text": " because some pixels are always 0.", "tokens": [50364, 407, 297, 12, 77, 468, 307, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50516, 50516, 440, 5267, 366, 322, 7562, 538, 7562, 18668, 13, 50616, 50616, 682, 1186, 11, 264, 35698, 10139, 307, 4356, 50708, 50708, 570, 512, 18668, 366, 1009, 1958, 13, 50876, 50876, 400, 291, 362, 4060, 11, 1360, 10938, 13, 50992, 50992, 440, 8482, 300, 729, 4060, 11, 1360, 10938, 295, 11, 718, 311, 584, 11, 51160, 51160, 1958, 82, 490, 1203, 1646, 420, 502, 82, 490, 1203, 1646, 51284, 51284, 307, 43586, 3128, 712, 307, 1936, 1958, 13, 51424, 51620, 3013, 307, 983, 561, 14479, 264, 13735, 2316, 295, 5102, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15344506010003045, "compression_ratio": 1.5951417004048583, "no_speech_prob": 1.4060852663533296e-05}, {"id": 2022, "seek": 584284, "start": 5853.08, "end": 5855.400000000001, "text": " And you have 60,000 samples.", "tokens": [50364, 407, 297, 12, 77, 468, 307, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50516, 50516, 440, 5267, 366, 322, 7562, 538, 7562, 18668, 13, 50616, 50616, 682, 1186, 11, 264, 35698, 10139, 307, 4356, 50708, 50708, 570, 512, 18668, 366, 1009, 1958, 13, 50876, 50876, 400, 291, 362, 4060, 11, 1360, 10938, 13, 50992, 50992, 440, 8482, 300, 729, 4060, 11, 1360, 10938, 295, 11, 718, 311, 584, 11, 51160, 51160, 1958, 82, 490, 1203, 1646, 420, 502, 82, 490, 1203, 1646, 51284, 51284, 307, 43586, 3128, 712, 307, 1936, 1958, 13, 51424, 51620, 3013, 307, 983, 561, 14479, 264, 13735, 2316, 295, 5102, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15344506010003045, "compression_ratio": 1.5951417004048583, "no_speech_prob": 1.4060852663533296e-05}, {"id": 2023, "seek": 584284, "start": 5855.400000000001, "end": 5858.76, "text": " The probability that those 60,000 samples of, let's say,", "tokens": [50364, 407, 297, 12, 77, 468, 307, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50516, 50516, 440, 5267, 366, 322, 7562, 538, 7562, 18668, 13, 50616, 50616, 682, 1186, 11, 264, 35698, 10139, 307, 4356, 50708, 50708, 570, 512, 18668, 366, 1009, 1958, 13, 50876, 50876, 400, 291, 362, 4060, 11, 1360, 10938, 13, 50992, 50992, 440, 8482, 300, 729, 4060, 11, 1360, 10938, 295, 11, 718, 311, 584, 11, 51160, 51160, 1958, 82, 490, 1203, 1646, 420, 502, 82, 490, 1203, 1646, 51284, 51284, 307, 43586, 3128, 712, 307, 1936, 1958, 13, 51424, 51620, 3013, 307, 983, 561, 14479, 264, 13735, 2316, 295, 5102, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15344506010003045, "compression_ratio": 1.5951417004048583, "no_speech_prob": 1.4060852663533296e-05}, {"id": 2024, "seek": 584284, "start": 5858.76, "end": 5861.24, "text": " 0s from everything else or 1s from everything else", "tokens": [50364, 407, 297, 12, 77, 468, 307, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50516, 50516, 440, 5267, 366, 322, 7562, 538, 7562, 18668, 13, 50616, 50616, 682, 1186, 11, 264, 35698, 10139, 307, 4356, 50708, 50708, 570, 512, 18668, 366, 1009, 1958, 13, 50876, 50876, 400, 291, 362, 4060, 11, 1360, 10938, 13, 50992, 50992, 440, 8482, 300, 729, 4060, 11, 1360, 10938, 295, 11, 718, 311, 584, 11, 51160, 51160, 1958, 82, 490, 1203, 1646, 420, 502, 82, 490, 1203, 1646, 51284, 51284, 307, 43586, 3128, 712, 307, 1936, 1958, 13, 51424, 51620, 3013, 307, 983, 561, 14479, 264, 13735, 2316, 295, 5102, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15344506010003045, "compression_ratio": 1.5951417004048583, "no_speech_prob": 1.4060852663533296e-05}, {"id": 2025, "seek": 584284, "start": 5861.24, "end": 5864.04, "text": " is linearly separable is basically 0.", "tokens": [50364, 407, 297, 12, 77, 468, 307, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50516, 50516, 440, 5267, 366, 322, 7562, 538, 7562, 18668, 13, 50616, 50616, 682, 1186, 11, 264, 35698, 10139, 307, 4356, 50708, 50708, 570, 512, 18668, 366, 1009, 1958, 13, 50876, 50876, 400, 291, 362, 4060, 11, 1360, 10938, 13, 50992, 50992, 440, 8482, 300, 729, 4060, 11, 1360, 10938, 295, 11, 718, 311, 584, 11, 51160, 51160, 1958, 82, 490, 1203, 1646, 420, 502, 82, 490, 1203, 1646, 51284, 51284, 307, 43586, 3128, 712, 307, 1936, 1958, 13, 51424, 51620, 3013, 307, 983, 561, 14479, 264, 13735, 2316, 295, 5102, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15344506010003045, "compression_ratio": 1.5951417004048583, "no_speech_prob": 1.4060852663533296e-05}, {"id": 2026, "seek": 584284, "start": 5867.96, "end": 5871.64, "text": " Which is why people invented the classical model of pattern", "tokens": [50364, 407, 297, 12, 77, 468, 307, 257, 1412, 992, 295, 1011, 26859, 27011, 13, 50516, 50516, 440, 5267, 366, 322, 7562, 538, 7562, 18668, 13, 50616, 50616, 682, 1186, 11, 264, 35698, 10139, 307, 4356, 50708, 50708, 570, 512, 18668, 366, 1009, 1958, 13, 50876, 50876, 400, 291, 362, 4060, 11, 1360, 10938, 13, 50992, 50992, 440, 8482, 300, 729, 4060, 11, 1360, 10938, 295, 11, 718, 311, 584, 11, 51160, 51160, 1958, 82, 490, 1203, 1646, 420, 502, 82, 490, 1203, 1646, 51284, 51284, 307, 43586, 3128, 712, 307, 1936, 1958, 13, 51424, 51620, 3013, 307, 983, 561, 14479, 264, 13735, 2316, 295, 5102, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.15344506010003045, "compression_ratio": 1.5951417004048583, "no_speech_prob": 1.4060852663533296e-05}, {"id": 2027, "seek": 587164, "start": 5871.64, "end": 5875.88, "text": " recognition, which consists in taking an input,", "tokens": [50364, 11150, 11, 597, 14689, 294, 1940, 364, 4846, 11, 50576, 50576, 7043, 257, 4111, 8947, 284, 281, 5258, 257, 10290, 50750, 50750, 294, 1270, 257, 636, 300, 294, 300, 1901, 586, 11, 428, 1154, 3643, 11, 50920, 50920, 718, 311, 584, 11, 43586, 3128, 712, 498, 291, 764, 257, 8213, 1508, 9902, 51048, 51048, 420, 512, 661, 3128, 2310, 498, 291, 764, 1071, 2010, 295, 1508, 9902, 13, 51310, 51310, 823, 11, 4725, 11, 341, 4111, 30197, 51452, 51452, 1633, 312, 2107, 28263, 2564, 498, 264, 787, 551, 309, 775, 51600, 51600, 307, 512, 2096, 533, 9887, 295, 264, 4846, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.13729696727934337, "compression_ratio": 1.7663934426229508, "no_speech_prob": 8.1389989645686e-06}, {"id": 2028, "seek": 587164, "start": 5875.88, "end": 5879.360000000001, "text": " engineering a feature extractor to produce a representation", "tokens": [50364, 11150, 11, 597, 14689, 294, 1940, 364, 4846, 11, 50576, 50576, 7043, 257, 4111, 8947, 284, 281, 5258, 257, 10290, 50750, 50750, 294, 1270, 257, 636, 300, 294, 300, 1901, 586, 11, 428, 1154, 3643, 11, 50920, 50920, 718, 311, 584, 11, 43586, 3128, 712, 498, 291, 764, 257, 8213, 1508, 9902, 51048, 51048, 420, 512, 661, 3128, 2310, 498, 291, 764, 1071, 2010, 295, 1508, 9902, 13, 51310, 51310, 823, 11, 4725, 11, 341, 4111, 30197, 51452, 51452, 1633, 312, 2107, 28263, 2564, 498, 264, 787, 551, 309, 775, 51600, 51600, 307, 512, 2096, 533, 9887, 295, 264, 4846, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.13729696727934337, "compression_ratio": 1.7663934426229508, "no_speech_prob": 8.1389989645686e-06}, {"id": 2029, "seek": 587164, "start": 5879.360000000001, "end": 5882.76, "text": " in such a way that in that space now, your problem becomes,", "tokens": [50364, 11150, 11, 597, 14689, 294, 1940, 364, 4846, 11, 50576, 50576, 7043, 257, 4111, 8947, 284, 281, 5258, 257, 10290, 50750, 50750, 294, 1270, 257, 636, 300, 294, 300, 1901, 586, 11, 428, 1154, 3643, 11, 50920, 50920, 718, 311, 584, 11, 43586, 3128, 712, 498, 291, 764, 257, 8213, 1508, 9902, 51048, 51048, 420, 512, 661, 3128, 2310, 498, 291, 764, 1071, 2010, 295, 1508, 9902, 13, 51310, 51310, 823, 11, 4725, 11, 341, 4111, 30197, 51452, 51452, 1633, 312, 2107, 28263, 2564, 498, 264, 787, 551, 309, 775, 51600, 51600, 307, 512, 2096, 533, 9887, 295, 264, 4846, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.13729696727934337, "compression_ratio": 1.7663934426229508, "no_speech_prob": 8.1389989645686e-06}, {"id": 2030, "seek": 587164, "start": 5882.76, "end": 5885.320000000001, "text": " let's say, linearly separable if you use a linear classifier", "tokens": [50364, 11150, 11, 597, 14689, 294, 1940, 364, 4846, 11, 50576, 50576, 7043, 257, 4111, 8947, 284, 281, 5258, 257, 10290, 50750, 50750, 294, 1270, 257, 636, 300, 294, 300, 1901, 586, 11, 428, 1154, 3643, 11, 50920, 50920, 718, 311, 584, 11, 43586, 3128, 712, 498, 291, 764, 257, 8213, 1508, 9902, 51048, 51048, 420, 512, 661, 3128, 2310, 498, 291, 764, 1071, 2010, 295, 1508, 9902, 13, 51310, 51310, 823, 11, 4725, 11, 341, 4111, 30197, 51452, 51452, 1633, 312, 2107, 28263, 2564, 498, 264, 787, 551, 309, 775, 51600, 51600, 307, 512, 2096, 533, 9887, 295, 264, 4846, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.13729696727934337, "compression_ratio": 1.7663934426229508, "no_speech_prob": 8.1389989645686e-06}, {"id": 2031, "seek": 587164, "start": 5885.320000000001, "end": 5890.56, "text": " or some other separability if you use another type of classifier.", "tokens": [50364, 11150, 11, 597, 14689, 294, 1940, 364, 4846, 11, 50576, 50576, 7043, 257, 4111, 8947, 284, 281, 5258, 257, 10290, 50750, 50750, 294, 1270, 257, 636, 300, 294, 300, 1901, 586, 11, 428, 1154, 3643, 11, 50920, 50920, 718, 311, 584, 11, 43586, 3128, 712, 498, 291, 764, 257, 8213, 1508, 9902, 51048, 51048, 420, 512, 661, 3128, 2310, 498, 291, 764, 1071, 2010, 295, 1508, 9902, 13, 51310, 51310, 823, 11, 4725, 11, 341, 4111, 30197, 51452, 51452, 1633, 312, 2107, 28263, 2564, 498, 264, 787, 551, 309, 775, 51600, 51600, 307, 512, 2096, 533, 9887, 295, 264, 4846, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.13729696727934337, "compression_ratio": 1.7663934426229508, "no_speech_prob": 8.1389989645686e-06}, {"id": 2032, "seek": 587164, "start": 5890.56, "end": 5893.400000000001, "text": " Now, necessarily, this feature extraction", "tokens": [50364, 11150, 11, 597, 14689, 294, 1940, 364, 4846, 11, 50576, 50576, 7043, 257, 4111, 8947, 284, 281, 5258, 257, 10290, 50750, 50750, 294, 1270, 257, 636, 300, 294, 300, 1901, 586, 11, 428, 1154, 3643, 11, 50920, 50920, 718, 311, 584, 11, 43586, 3128, 712, 498, 291, 764, 257, 8213, 1508, 9902, 51048, 51048, 420, 512, 661, 3128, 2310, 498, 291, 764, 1071, 2010, 295, 1508, 9902, 13, 51310, 51310, 823, 11, 4725, 11, 341, 4111, 30197, 51452, 51452, 1633, 312, 2107, 28263, 2564, 498, 264, 787, 551, 309, 775, 51600, 51600, 307, 512, 2096, 533, 9887, 295, 264, 4846, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.13729696727934337, "compression_ratio": 1.7663934426229508, "no_speech_prob": 8.1389989645686e-06}, {"id": 2033, "seek": 587164, "start": 5893.400000000001, "end": 5896.360000000001, "text": " must be nonlinear itself if the only thing it does", "tokens": [50364, 11150, 11, 597, 14689, 294, 1940, 364, 4846, 11, 50576, 50576, 7043, 257, 4111, 8947, 284, 281, 5258, 257, 10290, 50750, 50750, 294, 1270, 257, 636, 300, 294, 300, 1901, 586, 11, 428, 1154, 3643, 11, 50920, 50920, 718, 311, 584, 11, 43586, 3128, 712, 498, 291, 764, 257, 8213, 1508, 9902, 51048, 51048, 420, 512, 661, 3128, 2310, 498, 291, 764, 1071, 2010, 295, 1508, 9902, 13, 51310, 51310, 823, 11, 4725, 11, 341, 4111, 30197, 51452, 51452, 1633, 312, 2107, 28263, 2564, 498, 264, 787, 551, 309, 775, 51600, 51600, 307, 512, 2096, 533, 9887, 295, 264, 4846, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.13729696727934337, "compression_ratio": 1.7663934426229508, "no_speech_prob": 8.1389989645686e-06}, {"id": 2034, "seek": 587164, "start": 5896.360000000001, "end": 5898.360000000001, "text": " is some affine transformation of the input.", "tokens": [50364, 11150, 11, 597, 14689, 294, 1940, 364, 4846, 11, 50576, 50576, 7043, 257, 4111, 8947, 284, 281, 5258, 257, 10290, 50750, 50750, 294, 1270, 257, 636, 300, 294, 300, 1901, 586, 11, 428, 1154, 3643, 11, 50920, 50920, 718, 311, 584, 11, 43586, 3128, 712, 498, 291, 764, 257, 8213, 1508, 9902, 51048, 51048, 420, 512, 661, 3128, 2310, 498, 291, 764, 1071, 2010, 295, 1508, 9902, 13, 51310, 51310, 823, 11, 4725, 11, 341, 4111, 30197, 51452, 51452, 1633, 312, 2107, 28263, 2564, 498, 264, 787, 551, 309, 775, 51600, 51600, 307, 512, 2096, 533, 9887, 295, 264, 4846, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.13729696727934337, "compression_ratio": 1.7663934426229508, "no_speech_prob": 8.1389989645686e-06}, {"id": 2035, "seek": 589836, "start": 5898.36, "end": 5901.88, "text": " It's not going to make a nonlinearly separable problem", "tokens": [50364, 467, 311, 406, 516, 281, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 50540, 50540, 666, 257, 8213, 3128, 712, 472, 13, 50650, 50650, 407, 4725, 11, 341, 4111, 8947, 284, 575, 281, 312, 2107, 28263, 13, 50854, 50854, 639, 307, 588, 1021, 281, 1604, 13, 50966, 50966, 316, 8213, 659, 12, 41075, 278, 1177, 380, 360, 1340, 337, 291, 11, 51086, 51086, 4476, 13, 51146, 51146, 407, 561, 4418, 7878, 294, 3820, 5201, 11, 337, 1365, 11, 51304, 51304, 382, 6218, 11150, 11, 1905, 3436, 665, 4111, 8947, 830, 51456, 51456, 337, 1729, 2740, 13, 51570, 51570, 708, 4122, 366, 665, 281, 360, 1851, 11150, 11, 337, 1365, 30, 51726, 51726, 1664, 286, 360, 721, 411, 5531, 264, 2575, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13674457611576205, "compression_ratio": 1.7328519855595668, "no_speech_prob": 1.1477151019789744e-05}, {"id": 2036, "seek": 589836, "start": 5901.88, "end": 5904.08, "text": " into a linear separable one.", "tokens": [50364, 467, 311, 406, 516, 281, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 50540, 50540, 666, 257, 8213, 3128, 712, 472, 13, 50650, 50650, 407, 4725, 11, 341, 4111, 8947, 284, 575, 281, 312, 2107, 28263, 13, 50854, 50854, 639, 307, 588, 1021, 281, 1604, 13, 50966, 50966, 316, 8213, 659, 12, 41075, 278, 1177, 380, 360, 1340, 337, 291, 11, 51086, 51086, 4476, 13, 51146, 51146, 407, 561, 4418, 7878, 294, 3820, 5201, 11, 337, 1365, 11, 51304, 51304, 382, 6218, 11150, 11, 1905, 3436, 665, 4111, 8947, 830, 51456, 51456, 337, 1729, 2740, 13, 51570, 51570, 708, 4122, 366, 665, 281, 360, 1851, 11150, 11, 337, 1365, 30, 51726, 51726, 1664, 286, 360, 721, 411, 5531, 264, 2575, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13674457611576205, "compression_ratio": 1.7328519855595668, "no_speech_prob": 1.1477151019789744e-05}, {"id": 2037, "seek": 589836, "start": 5904.08, "end": 5908.16, "text": " So necessarily, this feature extractor has to be nonlinear.", "tokens": [50364, 467, 311, 406, 516, 281, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 50540, 50540, 666, 257, 8213, 3128, 712, 472, 13, 50650, 50650, 407, 4725, 11, 341, 4111, 8947, 284, 575, 281, 312, 2107, 28263, 13, 50854, 50854, 639, 307, 588, 1021, 281, 1604, 13, 50966, 50966, 316, 8213, 659, 12, 41075, 278, 1177, 380, 360, 1340, 337, 291, 11, 51086, 51086, 4476, 13, 51146, 51146, 407, 561, 4418, 7878, 294, 3820, 5201, 11, 337, 1365, 11, 51304, 51304, 382, 6218, 11150, 11, 1905, 3436, 665, 4111, 8947, 830, 51456, 51456, 337, 1729, 2740, 13, 51570, 51570, 708, 4122, 366, 665, 281, 360, 1851, 11150, 11, 337, 1365, 30, 51726, 51726, 1664, 286, 360, 721, 411, 5531, 264, 2575, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13674457611576205, "compression_ratio": 1.7328519855595668, "no_speech_prob": 1.1477151019789744e-05}, {"id": 2038, "seek": 589836, "start": 5908.16, "end": 5910.4, "text": " This is very important to remember.", "tokens": [50364, 467, 311, 406, 516, 281, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 50540, 50540, 666, 257, 8213, 3128, 712, 472, 13, 50650, 50650, 407, 4725, 11, 341, 4111, 8947, 284, 575, 281, 312, 2107, 28263, 13, 50854, 50854, 639, 307, 588, 1021, 281, 1604, 13, 50966, 50966, 316, 8213, 659, 12, 41075, 278, 1177, 380, 360, 1340, 337, 291, 11, 51086, 51086, 4476, 13, 51146, 51146, 407, 561, 4418, 7878, 294, 3820, 5201, 11, 337, 1365, 11, 51304, 51304, 382, 6218, 11150, 11, 1905, 3436, 665, 4111, 8947, 830, 51456, 51456, 337, 1729, 2740, 13, 51570, 51570, 708, 4122, 366, 665, 281, 360, 1851, 11150, 11, 337, 1365, 30, 51726, 51726, 1664, 286, 360, 721, 411, 5531, 264, 2575, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13674457611576205, "compression_ratio": 1.7328519855595668, "no_speech_prob": 1.1477151019789744e-05}, {"id": 2039, "seek": 589836, "start": 5910.4, "end": 5912.799999999999, "text": " A linear pre-processing doesn't do anything for you,", "tokens": [50364, 467, 311, 406, 516, 281, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 50540, 50540, 666, 257, 8213, 3128, 712, 472, 13, 50650, 50650, 407, 4725, 11, 341, 4111, 8947, 284, 575, 281, 312, 2107, 28263, 13, 50854, 50854, 639, 307, 588, 1021, 281, 1604, 13, 50966, 50966, 316, 8213, 659, 12, 41075, 278, 1177, 380, 360, 1340, 337, 291, 11, 51086, 51086, 4476, 13, 51146, 51146, 407, 561, 4418, 7878, 294, 3820, 5201, 11, 337, 1365, 11, 51304, 51304, 382, 6218, 11150, 11, 1905, 3436, 665, 4111, 8947, 830, 51456, 51456, 337, 1729, 2740, 13, 51570, 51570, 708, 4122, 366, 665, 281, 360, 1851, 11150, 11, 337, 1365, 30, 51726, 51726, 1664, 286, 360, 721, 411, 5531, 264, 2575, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13674457611576205, "compression_ratio": 1.7328519855595668, "no_speech_prob": 1.1477151019789744e-05}, {"id": 2040, "seek": 589836, "start": 5912.799999999999, "end": 5914.0, "text": " essentially.", "tokens": [50364, 467, 311, 406, 516, 281, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 50540, 50540, 666, 257, 8213, 3128, 712, 472, 13, 50650, 50650, 407, 4725, 11, 341, 4111, 8947, 284, 575, 281, 312, 2107, 28263, 13, 50854, 50854, 639, 307, 588, 1021, 281, 1604, 13, 50966, 50966, 316, 8213, 659, 12, 41075, 278, 1177, 380, 360, 1340, 337, 291, 11, 51086, 51086, 4476, 13, 51146, 51146, 407, 561, 4418, 7878, 294, 3820, 5201, 11, 337, 1365, 11, 51304, 51304, 382, 6218, 11150, 11, 1905, 3436, 665, 4111, 8947, 830, 51456, 51456, 337, 1729, 2740, 13, 51570, 51570, 708, 4122, 366, 665, 281, 360, 1851, 11150, 11, 337, 1365, 30, 51726, 51726, 1664, 286, 360, 721, 411, 5531, 264, 2575, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13674457611576205, "compression_ratio": 1.7328519855595668, "no_speech_prob": 1.1477151019789744e-05}, {"id": 2041, "seek": 589836, "start": 5914.0, "end": 5917.16, "text": " So people spent decades in computer vision, for example,", "tokens": [50364, 467, 311, 406, 516, 281, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 50540, 50540, 666, 257, 8213, 3128, 712, 472, 13, 50650, 50650, 407, 4725, 11, 341, 4111, 8947, 284, 575, 281, 312, 2107, 28263, 13, 50854, 50854, 639, 307, 588, 1021, 281, 1604, 13, 50966, 50966, 316, 8213, 659, 12, 41075, 278, 1177, 380, 360, 1340, 337, 291, 11, 51086, 51086, 4476, 13, 51146, 51146, 407, 561, 4418, 7878, 294, 3820, 5201, 11, 337, 1365, 11, 51304, 51304, 382, 6218, 11150, 11, 1905, 3436, 665, 4111, 8947, 830, 51456, 51456, 337, 1729, 2740, 13, 51570, 51570, 708, 4122, 366, 665, 281, 360, 1851, 11150, 11, 337, 1365, 30, 51726, 51726, 1664, 286, 360, 721, 411, 5531, 264, 2575, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13674457611576205, "compression_ratio": 1.7328519855595668, "no_speech_prob": 1.1477151019789744e-05}, {"id": 2042, "seek": 589836, "start": 5917.16, "end": 5920.2, "text": " as speech recognition, devising good feature extractors", "tokens": [50364, 467, 311, 406, 516, 281, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 50540, 50540, 666, 257, 8213, 3128, 712, 472, 13, 50650, 50650, 407, 4725, 11, 341, 4111, 8947, 284, 575, 281, 312, 2107, 28263, 13, 50854, 50854, 639, 307, 588, 1021, 281, 1604, 13, 50966, 50966, 316, 8213, 659, 12, 41075, 278, 1177, 380, 360, 1340, 337, 291, 11, 51086, 51086, 4476, 13, 51146, 51146, 407, 561, 4418, 7878, 294, 3820, 5201, 11, 337, 1365, 11, 51304, 51304, 382, 6218, 11150, 11, 1905, 3436, 665, 4111, 8947, 830, 51456, 51456, 337, 1729, 2740, 13, 51570, 51570, 708, 4122, 366, 665, 281, 360, 1851, 11150, 11, 337, 1365, 30, 51726, 51726, 1664, 286, 360, 721, 411, 5531, 264, 2575, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13674457611576205, "compression_ratio": 1.7328519855595668, "no_speech_prob": 1.1477151019789744e-05}, {"id": 2043, "seek": 589836, "start": 5920.2, "end": 5922.48, "text": " for particular problems.", "tokens": [50364, 467, 311, 406, 516, 281, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 50540, 50540, 666, 257, 8213, 3128, 712, 472, 13, 50650, 50650, 407, 4725, 11, 341, 4111, 8947, 284, 575, 281, 312, 2107, 28263, 13, 50854, 50854, 639, 307, 588, 1021, 281, 1604, 13, 50966, 50966, 316, 8213, 659, 12, 41075, 278, 1177, 380, 360, 1340, 337, 291, 11, 51086, 51086, 4476, 13, 51146, 51146, 407, 561, 4418, 7878, 294, 3820, 5201, 11, 337, 1365, 11, 51304, 51304, 382, 6218, 11150, 11, 1905, 3436, 665, 4111, 8947, 830, 51456, 51456, 337, 1729, 2740, 13, 51570, 51570, 708, 4122, 366, 665, 281, 360, 1851, 11150, 11, 337, 1365, 30, 51726, 51726, 1664, 286, 360, 721, 411, 5531, 264, 2575, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13674457611576205, "compression_ratio": 1.7328519855595668, "no_speech_prob": 1.1477151019789744e-05}, {"id": 2044, "seek": 589836, "start": 5922.48, "end": 5925.599999999999, "text": " What features are good to do face recognition, for example?", "tokens": [50364, 467, 311, 406, 516, 281, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 50540, 50540, 666, 257, 8213, 3128, 712, 472, 13, 50650, 50650, 407, 4725, 11, 341, 4111, 8947, 284, 575, 281, 312, 2107, 28263, 13, 50854, 50854, 639, 307, 588, 1021, 281, 1604, 13, 50966, 50966, 316, 8213, 659, 12, 41075, 278, 1177, 380, 360, 1340, 337, 291, 11, 51086, 51086, 4476, 13, 51146, 51146, 407, 561, 4418, 7878, 294, 3820, 5201, 11, 337, 1365, 11, 51304, 51304, 382, 6218, 11150, 11, 1905, 3436, 665, 4111, 8947, 830, 51456, 51456, 337, 1729, 2740, 13, 51570, 51570, 708, 4122, 366, 665, 281, 360, 1851, 11150, 11, 337, 1365, 30, 51726, 51726, 1664, 286, 360, 721, 411, 5531, 264, 2575, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13674457611576205, "compression_ratio": 1.7328519855595668, "no_speech_prob": 1.1477151019789744e-05}, {"id": 2045, "seek": 589836, "start": 5925.599999999999, "end": 5927.32, "text": " Can I do things like detect the eyes", "tokens": [50364, 467, 311, 406, 516, 281, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 50540, 50540, 666, 257, 8213, 3128, 712, 472, 13, 50650, 50650, 407, 4725, 11, 341, 4111, 8947, 284, 575, 281, 312, 2107, 28263, 13, 50854, 50854, 639, 307, 588, 1021, 281, 1604, 13, 50966, 50966, 316, 8213, 659, 12, 41075, 278, 1177, 380, 360, 1340, 337, 291, 11, 51086, 51086, 4476, 13, 51146, 51146, 407, 561, 4418, 7878, 294, 3820, 5201, 11, 337, 1365, 11, 51304, 51304, 382, 6218, 11150, 11, 1905, 3436, 665, 4111, 8947, 830, 51456, 51456, 337, 1729, 2740, 13, 51570, 51570, 708, 4122, 366, 665, 281, 360, 1851, 11150, 11, 337, 1365, 30, 51726, 51726, 1664, 286, 360, 721, 411, 5531, 264, 2575, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13674457611576205, "compression_ratio": 1.7328519855595668, "no_speech_prob": 1.1477151019789744e-05}, {"id": 2046, "seek": 592732, "start": 5927.32, "end": 5929.679999999999, "text": " and then measure the ratio between the separation", "tokens": [50364, 293, 550, 3481, 264, 8509, 1296, 264, 14634, 50482, 50482, 295, 264, 2575, 365, 264, 14634, 490, 264, 4525, 50590, 50590, 293, 550, 14722, 4111, 411, 341, 50712, 50712, 293, 550, 3154, 300, 281, 257, 1508, 9902, 50792, 50792, 293, 2573, 484, 567, 264, 954, 307, 30, 50868, 50868, 407, 881, 10577, 1296, 11, 718, 311, 584, 11, 264, 16157, 82, 420, 5285, 82, 51142, 51142, 293, 264, 3469, 8132, 82, 420, 2440, 9657, 82, 294, 3820, 5201, 51428, 51428, 645, 4476, 466, 300, 11, 577, 291, 2906, 5267, 6108, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.12122914163689864, "compression_ratio": 1.6772727272727272, "no_speech_prob": 6.747434326825896e-06}, {"id": 2047, "seek": 592732, "start": 5929.679999999999, "end": 5931.84, "text": " of the eyes with the separation from the mouth", "tokens": [50364, 293, 550, 3481, 264, 8509, 1296, 264, 14634, 50482, 50482, 295, 264, 2575, 365, 264, 14634, 490, 264, 4525, 50590, 50590, 293, 550, 14722, 4111, 411, 341, 50712, 50712, 293, 550, 3154, 300, 281, 257, 1508, 9902, 50792, 50792, 293, 2573, 484, 567, 264, 954, 307, 30, 50868, 50868, 407, 881, 10577, 1296, 11, 718, 311, 584, 11, 264, 16157, 82, 420, 5285, 82, 51142, 51142, 293, 264, 3469, 8132, 82, 420, 2440, 9657, 82, 294, 3820, 5201, 51428, 51428, 645, 4476, 466, 300, 11, 577, 291, 2906, 5267, 6108, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.12122914163689864, "compression_ratio": 1.6772727272727272, "no_speech_prob": 6.747434326825896e-06}, {"id": 2048, "seek": 592732, "start": 5931.84, "end": 5934.28, "text": " and then compute feature like this", "tokens": [50364, 293, 550, 3481, 264, 8509, 1296, 264, 14634, 50482, 50482, 295, 264, 2575, 365, 264, 14634, 490, 264, 4525, 50590, 50590, 293, 550, 14722, 4111, 411, 341, 50712, 50712, 293, 550, 3154, 300, 281, 257, 1508, 9902, 50792, 50792, 293, 2573, 484, 567, 264, 954, 307, 30, 50868, 50868, 407, 881, 10577, 1296, 11, 718, 311, 584, 11, 264, 16157, 82, 420, 5285, 82, 51142, 51142, 293, 264, 3469, 8132, 82, 420, 2440, 9657, 82, 294, 3820, 5201, 51428, 51428, 645, 4476, 466, 300, 11, 577, 291, 2906, 5267, 6108, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.12122914163689864, "compression_ratio": 1.6772727272727272, "no_speech_prob": 6.747434326825896e-06}, {"id": 2049, "seek": 592732, "start": 5934.28, "end": 5935.88, "text": " and then feed that to a classifier", "tokens": [50364, 293, 550, 3481, 264, 8509, 1296, 264, 14634, 50482, 50482, 295, 264, 2575, 365, 264, 14634, 490, 264, 4525, 50590, 50590, 293, 550, 14722, 4111, 411, 341, 50712, 50712, 293, 550, 3154, 300, 281, 257, 1508, 9902, 50792, 50792, 293, 2573, 484, 567, 264, 954, 307, 30, 50868, 50868, 407, 881, 10577, 1296, 11, 718, 311, 584, 11, 264, 16157, 82, 420, 5285, 82, 51142, 51142, 293, 264, 3469, 8132, 82, 420, 2440, 9657, 82, 294, 3820, 5201, 51428, 51428, 645, 4476, 466, 300, 11, 577, 291, 2906, 5267, 6108, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.12122914163689864, "compression_ratio": 1.6772727272727272, "no_speech_prob": 6.747434326825896e-06}, {"id": 2050, "seek": 592732, "start": 5935.88, "end": 5937.4, "text": " and figure out who the person is?", "tokens": [50364, 293, 550, 3481, 264, 8509, 1296, 264, 14634, 50482, 50482, 295, 264, 2575, 365, 264, 14634, 490, 264, 4525, 50590, 50590, 293, 550, 14722, 4111, 411, 341, 50712, 50712, 293, 550, 3154, 300, 281, 257, 1508, 9902, 50792, 50792, 293, 2573, 484, 567, 264, 954, 307, 30, 50868, 50868, 407, 881, 10577, 1296, 11, 718, 311, 584, 11, 264, 16157, 82, 420, 5285, 82, 51142, 51142, 293, 264, 3469, 8132, 82, 420, 2440, 9657, 82, 294, 3820, 5201, 51428, 51428, 645, 4476, 466, 300, 11, 577, 291, 2906, 5267, 6108, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.12122914163689864, "compression_ratio": 1.6772727272727272, "no_speech_prob": 6.747434326825896e-06}, {"id": 2051, "seek": 592732, "start": 5937.4, "end": 5942.88, "text": " So most papers between, let's say, the 1960s or 70s", "tokens": [50364, 293, 550, 3481, 264, 8509, 1296, 264, 14634, 50482, 50482, 295, 264, 2575, 365, 264, 14634, 490, 264, 4525, 50590, 50590, 293, 550, 14722, 4111, 411, 341, 50712, 50712, 293, 550, 3154, 300, 281, 257, 1508, 9902, 50792, 50792, 293, 2573, 484, 567, 264, 954, 307, 30, 50868, 50868, 407, 881, 10577, 1296, 11, 718, 311, 584, 11, 264, 16157, 82, 420, 5285, 82, 51142, 51142, 293, 264, 3469, 8132, 82, 420, 2440, 9657, 82, 294, 3820, 5201, 51428, 51428, 645, 4476, 466, 300, 11, 577, 291, 2906, 5267, 6108, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.12122914163689864, "compression_ratio": 1.6772727272727272, "no_speech_prob": 6.747434326825896e-06}, {"id": 2052, "seek": 592732, "start": 5942.88, "end": 5948.599999999999, "text": " and the late 2000s or early 2010s in computer vision", "tokens": [50364, 293, 550, 3481, 264, 8509, 1296, 264, 14634, 50482, 50482, 295, 264, 2575, 365, 264, 14634, 490, 264, 4525, 50590, 50590, 293, 550, 14722, 4111, 411, 341, 50712, 50712, 293, 550, 3154, 300, 281, 257, 1508, 9902, 50792, 50792, 293, 2573, 484, 567, 264, 954, 307, 30, 50868, 50868, 407, 881, 10577, 1296, 11, 718, 311, 584, 11, 264, 16157, 82, 420, 5285, 82, 51142, 51142, 293, 264, 3469, 8132, 82, 420, 2440, 9657, 82, 294, 3820, 5201, 51428, 51428, 645, 4476, 466, 300, 11, 577, 291, 2906, 5267, 6108, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.12122914163689864, "compression_ratio": 1.6772727272727272, "no_speech_prob": 6.747434326825896e-06}, {"id": 2053, "seek": 592732, "start": 5948.599999999999, "end": 5953.96, "text": " were essentially about that, how you represent images properly.", "tokens": [50364, 293, 550, 3481, 264, 8509, 1296, 264, 14634, 50482, 50482, 295, 264, 2575, 365, 264, 14634, 490, 264, 4525, 50590, 50590, 293, 550, 14722, 4111, 411, 341, 50712, 50712, 293, 550, 3154, 300, 281, 257, 1508, 9902, 50792, 50792, 293, 2573, 484, 567, 264, 954, 307, 30, 50868, 50868, 407, 881, 10577, 1296, 11, 718, 311, 584, 11, 264, 16157, 82, 420, 5285, 82, 51142, 51142, 293, 264, 3469, 8132, 82, 420, 2440, 9657, 82, 294, 3820, 5201, 51428, 51428, 645, 4476, 466, 300, 11, 577, 291, 2906, 5267, 6108, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.12122914163689864, "compression_ratio": 1.6772727272727272, "no_speech_prob": 6.747434326825896e-06}, {"id": 2054, "seek": 595396, "start": 5953.96, "end": 5958.36, "text": " Not all of them, but a lot of them for recognition.", "tokens": [50364, 1726, 439, 295, 552, 11, 457, 257, 688, 295, 552, 337, 11150, 13, 50584, 50584, 400, 257, 688, 295, 561, 1905, 908, 588, 19577, 2098, 50756, 50756, 295, 1905, 3436, 4111, 8947, 830, 13, 50966, 50966, 440, 3875, 1558, 307, 291, 445, 5268, 51044, 51044, 264, 10139, 295, 264, 10290, 51126, 51126, 294, 257, 2107, 28263, 636, 370, 300, 586, 428, 1230, 295, 12819, 51304, 51304, 307, 4833, 813, 264, 1230, 295, 10938, 13, 51398, 51398, 400, 586, 428, 1154, 575, 257, 2931, 51464, 51464, 295, 5617, 43586, 3128, 712, 13, 51586, 51586, 407, 264, 1558, 307, 300, 286, 478, 406, 516, 51654, 51654, 281, 352, 807, 1901, 27944, 11, 4974, 22743, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13415624341394147, "compression_ratio": 1.683206106870229, "no_speech_prob": 3.187338052157429e-06}, {"id": 2055, "seek": 595396, "start": 5958.36, "end": 5961.8, "text": " And a lot of people devise very generic ways", "tokens": [50364, 1726, 439, 295, 552, 11, 457, 257, 688, 295, 552, 337, 11150, 13, 50584, 50584, 400, 257, 688, 295, 561, 1905, 908, 588, 19577, 2098, 50756, 50756, 295, 1905, 3436, 4111, 8947, 830, 13, 50966, 50966, 440, 3875, 1558, 307, 291, 445, 5268, 51044, 51044, 264, 10139, 295, 264, 10290, 51126, 51126, 294, 257, 2107, 28263, 636, 370, 300, 586, 428, 1230, 295, 12819, 51304, 51304, 307, 4833, 813, 264, 1230, 295, 10938, 13, 51398, 51398, 400, 586, 428, 1154, 575, 257, 2931, 51464, 51464, 295, 5617, 43586, 3128, 712, 13, 51586, 51586, 407, 264, 1558, 307, 300, 286, 478, 406, 516, 51654, 51654, 281, 352, 807, 1901, 27944, 11, 4974, 22743, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13415624341394147, "compression_ratio": 1.683206106870229, "no_speech_prob": 3.187338052157429e-06}, {"id": 2056, "seek": 595396, "start": 5961.8, "end": 5966.0, "text": " of devising feature extractors.", "tokens": [50364, 1726, 439, 295, 552, 11, 457, 257, 688, 295, 552, 337, 11150, 13, 50584, 50584, 400, 257, 688, 295, 561, 1905, 908, 588, 19577, 2098, 50756, 50756, 295, 1905, 3436, 4111, 8947, 830, 13, 50966, 50966, 440, 3875, 1558, 307, 291, 445, 5268, 51044, 51044, 264, 10139, 295, 264, 10290, 51126, 51126, 294, 257, 2107, 28263, 636, 370, 300, 586, 428, 1230, 295, 12819, 51304, 51304, 307, 4833, 813, 264, 1230, 295, 10938, 13, 51398, 51398, 400, 586, 428, 1154, 575, 257, 2931, 51464, 51464, 295, 5617, 43586, 3128, 712, 13, 51586, 51586, 407, 264, 1558, 307, 300, 286, 478, 406, 516, 51654, 51654, 281, 352, 807, 1901, 27944, 11, 4974, 22743, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13415624341394147, "compression_ratio": 1.683206106870229, "no_speech_prob": 3.187338052157429e-06}, {"id": 2057, "seek": 595396, "start": 5966.0, "end": 5967.56, "text": " The basic idea is you just expand", "tokens": [50364, 1726, 439, 295, 552, 11, 457, 257, 688, 295, 552, 337, 11150, 13, 50584, 50584, 400, 257, 688, 295, 561, 1905, 908, 588, 19577, 2098, 50756, 50756, 295, 1905, 3436, 4111, 8947, 830, 13, 50966, 50966, 440, 3875, 1558, 307, 291, 445, 5268, 51044, 51044, 264, 10139, 295, 264, 10290, 51126, 51126, 294, 257, 2107, 28263, 636, 370, 300, 586, 428, 1230, 295, 12819, 51304, 51304, 307, 4833, 813, 264, 1230, 295, 10938, 13, 51398, 51398, 400, 586, 428, 1154, 575, 257, 2931, 51464, 51464, 295, 5617, 43586, 3128, 712, 13, 51586, 51586, 407, 264, 1558, 307, 300, 286, 478, 406, 516, 51654, 51654, 281, 352, 807, 1901, 27944, 11, 4974, 22743, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13415624341394147, "compression_ratio": 1.683206106870229, "no_speech_prob": 3.187338052157429e-06}, {"id": 2058, "seek": 595396, "start": 5967.56, "end": 5969.2, "text": " the dimension of the representation", "tokens": [50364, 1726, 439, 295, 552, 11, 457, 257, 688, 295, 552, 337, 11150, 13, 50584, 50584, 400, 257, 688, 295, 561, 1905, 908, 588, 19577, 2098, 50756, 50756, 295, 1905, 3436, 4111, 8947, 830, 13, 50966, 50966, 440, 3875, 1558, 307, 291, 445, 5268, 51044, 51044, 264, 10139, 295, 264, 10290, 51126, 51126, 294, 257, 2107, 28263, 636, 370, 300, 586, 428, 1230, 295, 12819, 51304, 51304, 307, 4833, 813, 264, 1230, 295, 10938, 13, 51398, 51398, 400, 586, 428, 1154, 575, 257, 2931, 51464, 51464, 295, 5617, 43586, 3128, 712, 13, 51586, 51586, 407, 264, 1558, 307, 300, 286, 478, 406, 516, 51654, 51654, 281, 352, 807, 1901, 27944, 11, 4974, 22743, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13415624341394147, "compression_ratio": 1.683206106870229, "no_speech_prob": 3.187338052157429e-06}, {"id": 2059, "seek": 595396, "start": 5969.2, "end": 5972.76, "text": " in a nonlinear way so that now your number of dimensions", "tokens": [50364, 1726, 439, 295, 552, 11, 457, 257, 688, 295, 552, 337, 11150, 13, 50584, 50584, 400, 257, 688, 295, 561, 1905, 908, 588, 19577, 2098, 50756, 50756, 295, 1905, 3436, 4111, 8947, 830, 13, 50966, 50966, 440, 3875, 1558, 307, 291, 445, 5268, 51044, 51044, 264, 10139, 295, 264, 10290, 51126, 51126, 294, 257, 2107, 28263, 636, 370, 300, 586, 428, 1230, 295, 12819, 51304, 51304, 307, 4833, 813, 264, 1230, 295, 10938, 13, 51398, 51398, 400, 586, 428, 1154, 575, 257, 2931, 51464, 51464, 295, 5617, 43586, 3128, 712, 13, 51586, 51586, 407, 264, 1558, 307, 300, 286, 478, 406, 516, 51654, 51654, 281, 352, 807, 1901, 27944, 11, 4974, 22743, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13415624341394147, "compression_ratio": 1.683206106870229, "no_speech_prob": 3.187338052157429e-06}, {"id": 2060, "seek": 595396, "start": 5972.76, "end": 5974.64, "text": " is larger than the number of samples.", "tokens": [50364, 1726, 439, 295, 552, 11, 457, 257, 688, 295, 552, 337, 11150, 13, 50584, 50584, 400, 257, 688, 295, 561, 1905, 908, 588, 19577, 2098, 50756, 50756, 295, 1905, 3436, 4111, 8947, 830, 13, 50966, 50966, 440, 3875, 1558, 307, 291, 445, 5268, 51044, 51044, 264, 10139, 295, 264, 10290, 51126, 51126, 294, 257, 2107, 28263, 636, 370, 300, 586, 428, 1230, 295, 12819, 51304, 51304, 307, 4833, 813, 264, 1230, 295, 10938, 13, 51398, 51398, 400, 586, 428, 1154, 575, 257, 2931, 51464, 51464, 295, 5617, 43586, 3128, 712, 13, 51586, 51586, 407, 264, 1558, 307, 300, 286, 478, 406, 516, 51654, 51654, 281, 352, 807, 1901, 27944, 11, 4974, 22743, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13415624341394147, "compression_ratio": 1.683206106870229, "no_speech_prob": 3.187338052157429e-06}, {"id": 2061, "seek": 595396, "start": 5974.64, "end": 5975.96, "text": " And now your problem has a chance", "tokens": [50364, 1726, 439, 295, 552, 11, 457, 257, 688, 295, 552, 337, 11150, 13, 50584, 50584, 400, 257, 688, 295, 561, 1905, 908, 588, 19577, 2098, 50756, 50756, 295, 1905, 3436, 4111, 8947, 830, 13, 50966, 50966, 440, 3875, 1558, 307, 291, 445, 5268, 51044, 51044, 264, 10139, 295, 264, 10290, 51126, 51126, 294, 257, 2107, 28263, 636, 370, 300, 586, 428, 1230, 295, 12819, 51304, 51304, 307, 4833, 813, 264, 1230, 295, 10938, 13, 51398, 51398, 400, 586, 428, 1154, 575, 257, 2931, 51464, 51464, 295, 5617, 43586, 3128, 712, 13, 51586, 51586, 407, 264, 1558, 307, 300, 286, 478, 406, 516, 51654, 51654, 281, 352, 807, 1901, 27944, 11, 4974, 22743, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13415624341394147, "compression_ratio": 1.683206106870229, "no_speech_prob": 3.187338052157429e-06}, {"id": 2062, "seek": 595396, "start": 5975.96, "end": 5978.4, "text": " of becoming linearly separable.", "tokens": [50364, 1726, 439, 295, 552, 11, 457, 257, 688, 295, 552, 337, 11150, 13, 50584, 50584, 400, 257, 688, 295, 561, 1905, 908, 588, 19577, 2098, 50756, 50756, 295, 1905, 3436, 4111, 8947, 830, 13, 50966, 50966, 440, 3875, 1558, 307, 291, 445, 5268, 51044, 51044, 264, 10139, 295, 264, 10290, 51126, 51126, 294, 257, 2107, 28263, 636, 370, 300, 586, 428, 1230, 295, 12819, 51304, 51304, 307, 4833, 813, 264, 1230, 295, 10938, 13, 51398, 51398, 400, 586, 428, 1154, 575, 257, 2931, 51464, 51464, 295, 5617, 43586, 3128, 712, 13, 51586, 51586, 407, 264, 1558, 307, 300, 286, 478, 406, 516, 51654, 51654, 281, 352, 807, 1901, 27944, 11, 4974, 22743, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13415624341394147, "compression_ratio": 1.683206106870229, "no_speech_prob": 3.187338052157429e-06}, {"id": 2063, "seek": 595396, "start": 5978.4, "end": 5979.76, "text": " So the idea is that I'm not going", "tokens": [50364, 1726, 439, 295, 552, 11, 457, 257, 688, 295, 552, 337, 11150, 13, 50584, 50584, 400, 257, 688, 295, 561, 1905, 908, 588, 19577, 2098, 50756, 50756, 295, 1905, 3436, 4111, 8947, 830, 13, 50966, 50966, 440, 3875, 1558, 307, 291, 445, 5268, 51044, 51044, 264, 10139, 295, 264, 10290, 51126, 51126, 294, 257, 2107, 28263, 636, 370, 300, 586, 428, 1230, 295, 12819, 51304, 51304, 307, 4833, 813, 264, 1230, 295, 10938, 13, 51398, 51398, 400, 586, 428, 1154, 575, 257, 2931, 51464, 51464, 295, 5617, 43586, 3128, 712, 13, 51586, 51586, 407, 264, 1558, 307, 300, 286, 478, 406, 516, 51654, 51654, 281, 352, 807, 1901, 27944, 11, 4974, 22743, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13415624341394147, "compression_ratio": 1.683206106870229, "no_speech_prob": 3.187338052157429e-06}, {"id": 2064, "seek": 595396, "start": 5979.76, "end": 5981.8, "text": " to go through space styling, random projection.", "tokens": [50364, 1726, 439, 295, 552, 11, 457, 257, 688, 295, 552, 337, 11150, 13, 50584, 50584, 400, 257, 688, 295, 561, 1905, 908, 588, 19577, 2098, 50756, 50756, 295, 1905, 3436, 4111, 8947, 830, 13, 50966, 50966, 440, 3875, 1558, 307, 291, 445, 5268, 51044, 51044, 264, 10139, 295, 264, 10290, 51126, 51126, 294, 257, 2107, 28263, 636, 370, 300, 586, 428, 1230, 295, 12819, 51304, 51304, 307, 4833, 813, 264, 1230, 295, 10938, 13, 51398, 51398, 400, 586, 428, 1154, 575, 257, 2931, 51464, 51464, 295, 5617, 43586, 3128, 712, 13, 51586, 51586, 407, 264, 1558, 307, 300, 286, 478, 406, 516, 51654, 51654, 281, 352, 807, 1901, 27944, 11, 4974, 22743, 13, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.13415624341394147, "compression_ratio": 1.683206106870229, "no_speech_prob": 3.187338052157429e-06}, {"id": 2065, "seek": 598180, "start": 5981.8, "end": 5984.12, "text": " So random projection basically is a very simple idea.", "tokens": [50364, 407, 4974, 22743, 1936, 307, 257, 588, 2199, 1558, 13, 50480, 50480, 509, 747, 428, 4846, 18875, 11, 291, 12972, 552, 50646, 50646, 538, 257, 4974, 8141, 11, 293, 550, 291, 1320, 264, 1874, 50956, 50956, 807, 512, 2107, 28263, 6916, 13, 51176, 51176, 663, 311, 1219, 4974, 22743, 13, 51288, 51288, 400, 498, 264, 10139, 295, 264, 5598, 51456, 51456, 307, 4833, 813, 264, 10139, 295, 264, 4846, 11, 51538, 51538, 309, 1062, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 51656, 51656, 43586, 3128, 712, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11551200825235118, "compression_ratio": 1.7391304347826086, "no_speech_prob": 9.817807949730195e-06}, {"id": 2066, "seek": 598180, "start": 5984.12, "end": 5987.4400000000005, "text": " You take your input vectors, you multiply them", "tokens": [50364, 407, 4974, 22743, 1936, 307, 257, 588, 2199, 1558, 13, 50480, 50480, 509, 747, 428, 4846, 18875, 11, 291, 12972, 552, 50646, 50646, 538, 257, 4974, 8141, 11, 293, 550, 291, 1320, 264, 1874, 50956, 50956, 807, 512, 2107, 28263, 6916, 13, 51176, 51176, 663, 311, 1219, 4974, 22743, 13, 51288, 51288, 400, 498, 264, 10139, 295, 264, 5598, 51456, 51456, 307, 4833, 813, 264, 10139, 295, 264, 4846, 11, 51538, 51538, 309, 1062, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 51656, 51656, 43586, 3128, 712, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11551200825235118, "compression_ratio": 1.7391304347826086, "no_speech_prob": 9.817807949730195e-06}, {"id": 2067, "seek": 598180, "start": 5987.4400000000005, "end": 5993.64, "text": " by a random matrix, and then you pass the result", "tokens": [50364, 407, 4974, 22743, 1936, 307, 257, 588, 2199, 1558, 13, 50480, 50480, 509, 747, 428, 4846, 18875, 11, 291, 12972, 552, 50646, 50646, 538, 257, 4974, 8141, 11, 293, 550, 291, 1320, 264, 1874, 50956, 50956, 807, 512, 2107, 28263, 6916, 13, 51176, 51176, 663, 311, 1219, 4974, 22743, 13, 51288, 51288, 400, 498, 264, 10139, 295, 264, 5598, 51456, 51456, 307, 4833, 813, 264, 10139, 295, 264, 4846, 11, 51538, 51538, 309, 1062, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 51656, 51656, 43586, 3128, 712, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11551200825235118, "compression_ratio": 1.7391304347826086, "no_speech_prob": 9.817807949730195e-06}, {"id": 2068, "seek": 598180, "start": 5993.64, "end": 5998.04, "text": " through some nonlinear operation.", "tokens": [50364, 407, 4974, 22743, 1936, 307, 257, 588, 2199, 1558, 13, 50480, 50480, 509, 747, 428, 4846, 18875, 11, 291, 12972, 552, 50646, 50646, 538, 257, 4974, 8141, 11, 293, 550, 291, 1320, 264, 1874, 50956, 50956, 807, 512, 2107, 28263, 6916, 13, 51176, 51176, 663, 311, 1219, 4974, 22743, 13, 51288, 51288, 400, 498, 264, 10139, 295, 264, 5598, 51456, 51456, 307, 4833, 813, 264, 10139, 295, 264, 4846, 11, 51538, 51538, 309, 1062, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 51656, 51656, 43586, 3128, 712, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11551200825235118, "compression_ratio": 1.7391304347826086, "no_speech_prob": 9.817807949730195e-06}, {"id": 2069, "seek": 598180, "start": 5998.04, "end": 6000.28, "text": " That's called random projection.", "tokens": [50364, 407, 4974, 22743, 1936, 307, 257, 588, 2199, 1558, 13, 50480, 50480, 509, 747, 428, 4846, 18875, 11, 291, 12972, 552, 50646, 50646, 538, 257, 4974, 8141, 11, 293, 550, 291, 1320, 264, 1874, 50956, 50956, 807, 512, 2107, 28263, 6916, 13, 51176, 51176, 663, 311, 1219, 4974, 22743, 13, 51288, 51288, 400, 498, 264, 10139, 295, 264, 5598, 51456, 51456, 307, 4833, 813, 264, 10139, 295, 264, 4846, 11, 51538, 51538, 309, 1062, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 51656, 51656, 43586, 3128, 712, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11551200825235118, "compression_ratio": 1.7391304347826086, "no_speech_prob": 9.817807949730195e-06}, {"id": 2070, "seek": 598180, "start": 6000.28, "end": 6003.64, "text": " And if the dimension of the output", "tokens": [50364, 407, 4974, 22743, 1936, 307, 257, 588, 2199, 1558, 13, 50480, 50480, 509, 747, 428, 4846, 18875, 11, 291, 12972, 552, 50646, 50646, 538, 257, 4974, 8141, 11, 293, 550, 291, 1320, 264, 1874, 50956, 50956, 807, 512, 2107, 28263, 6916, 13, 51176, 51176, 663, 311, 1219, 4974, 22743, 13, 51288, 51288, 400, 498, 264, 10139, 295, 264, 5598, 51456, 51456, 307, 4833, 813, 264, 10139, 295, 264, 4846, 11, 51538, 51538, 309, 1062, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 51656, 51656, 43586, 3128, 712, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11551200825235118, "compression_ratio": 1.7391304347826086, "no_speech_prob": 9.817807949730195e-06}, {"id": 2071, "seek": 598180, "start": 6003.64, "end": 6005.28, "text": " is larger than the dimension of the input,", "tokens": [50364, 407, 4974, 22743, 1936, 307, 257, 588, 2199, 1558, 13, 50480, 50480, 509, 747, 428, 4846, 18875, 11, 291, 12972, 552, 50646, 50646, 538, 257, 4974, 8141, 11, 293, 550, 291, 1320, 264, 1874, 50956, 50956, 807, 512, 2107, 28263, 6916, 13, 51176, 51176, 663, 311, 1219, 4974, 22743, 13, 51288, 51288, 400, 498, 264, 10139, 295, 264, 5598, 51456, 51456, 307, 4833, 813, 264, 10139, 295, 264, 4846, 11, 51538, 51538, 309, 1062, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 51656, 51656, 43586, 3128, 712, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11551200825235118, "compression_ratio": 1.7391304347826086, "no_speech_prob": 9.817807949730195e-06}, {"id": 2072, "seek": 598180, "start": 6005.28, "end": 6007.64, "text": " it might make a nonlinearly separable problem", "tokens": [50364, 407, 4974, 22743, 1936, 307, 257, 588, 2199, 1558, 13, 50480, 50480, 509, 747, 428, 4846, 18875, 11, 291, 12972, 552, 50646, 50646, 538, 257, 4974, 8141, 11, 293, 550, 291, 1320, 264, 1874, 50956, 50956, 807, 512, 2107, 28263, 6916, 13, 51176, 51176, 663, 311, 1219, 4974, 22743, 13, 51288, 51288, 400, 498, 264, 10139, 295, 264, 5598, 51456, 51456, 307, 4833, 813, 264, 10139, 295, 264, 4846, 11, 51538, 51538, 309, 1062, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 51656, 51656, 43586, 3128, 712, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11551200825235118, "compression_ratio": 1.7391304347826086, "no_speech_prob": 9.817807949730195e-06}, {"id": 2073, "seek": 598180, "start": 6007.64, "end": 6008.88, "text": " linearly separable.", "tokens": [50364, 407, 4974, 22743, 1936, 307, 257, 588, 2199, 1558, 13, 50480, 50480, 509, 747, 428, 4846, 18875, 11, 291, 12972, 552, 50646, 50646, 538, 257, 4974, 8141, 11, 293, 550, 291, 1320, 264, 1874, 50956, 50956, 807, 512, 2107, 28263, 6916, 13, 51176, 51176, 663, 311, 1219, 4974, 22743, 13, 51288, 51288, 400, 498, 264, 10139, 295, 264, 5598, 51456, 51456, 307, 4833, 813, 264, 10139, 295, 264, 4846, 11, 51538, 51538, 309, 1062, 652, 257, 2107, 28263, 356, 3128, 712, 1154, 51656, 51656, 43586, 3128, 712, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11551200825235118, "compression_ratio": 1.7391304347826086, "no_speech_prob": 9.817807949730195e-06}, {"id": 2074, "seek": 600888, "start": 6008.88, "end": 6012.4800000000005, "text": " It's very inefficient because you", "tokens": [50364, 467, 311, 588, 43495, 570, 291, 50544, 50544, 1062, 643, 257, 588, 2416, 1230, 295, 341, 10139, 50684, 50684, 281, 312, 1075, 281, 360, 257, 665, 1691, 13, 50816, 50816, 583, 309, 1985, 294, 1629, 3331, 13, 50890, 50890, 400, 291, 500, 380, 362, 281, 3847, 264, 700, 4583, 13, 50980, 50980, 509, 1936, 1888, 309, 16979, 13, 51050, 51050, 400, 370, 264, 787, 551, 291, 643, 281, 3847, 51130, 51130, 307, 257, 8213, 1508, 9902, 322, 1192, 13, 51238, 51238, 1981, 26110, 1508, 23463, 11, 597, 286, 603, 751, 466, 294, 257, 3456, 11, 51394, 51394, 1401, 428, 5143, 6828, 293, 28256, 8379, 13, 51484, 51484, 407, 729, 366, 1936, 7512, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.20542887983650998, "compression_ratio": 1.614814814814815, "no_speech_prob": 1.0450859008415136e-05}, {"id": 2075, "seek": 600888, "start": 6012.4800000000005, "end": 6015.28, "text": " might need a very large number of this dimension", "tokens": [50364, 467, 311, 588, 43495, 570, 291, 50544, 50544, 1062, 643, 257, 588, 2416, 1230, 295, 341, 10139, 50684, 50684, 281, 312, 1075, 281, 360, 257, 665, 1691, 13, 50816, 50816, 583, 309, 1985, 294, 1629, 3331, 13, 50890, 50890, 400, 291, 500, 380, 362, 281, 3847, 264, 700, 4583, 13, 50980, 50980, 509, 1936, 1888, 309, 16979, 13, 51050, 51050, 400, 370, 264, 787, 551, 291, 643, 281, 3847, 51130, 51130, 307, 257, 8213, 1508, 9902, 322, 1192, 13, 51238, 51238, 1981, 26110, 1508, 23463, 11, 597, 286, 603, 751, 466, 294, 257, 3456, 11, 51394, 51394, 1401, 428, 5143, 6828, 293, 28256, 8379, 13, 51484, 51484, 407, 729, 366, 1936, 7512, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.20542887983650998, "compression_ratio": 1.614814814814815, "no_speech_prob": 1.0450859008415136e-05}, {"id": 2076, "seek": 600888, "start": 6015.28, "end": 6017.92, "text": " to be able to do a good job.", "tokens": [50364, 467, 311, 588, 43495, 570, 291, 50544, 50544, 1062, 643, 257, 588, 2416, 1230, 295, 341, 10139, 50684, 50684, 281, 312, 1075, 281, 360, 257, 665, 1691, 13, 50816, 50816, 583, 309, 1985, 294, 1629, 3331, 13, 50890, 50890, 400, 291, 500, 380, 362, 281, 3847, 264, 700, 4583, 13, 50980, 50980, 509, 1936, 1888, 309, 16979, 13, 51050, 51050, 400, 370, 264, 787, 551, 291, 643, 281, 3847, 51130, 51130, 307, 257, 8213, 1508, 9902, 322, 1192, 13, 51238, 51238, 1981, 26110, 1508, 23463, 11, 597, 286, 603, 751, 466, 294, 257, 3456, 11, 51394, 51394, 1401, 428, 5143, 6828, 293, 28256, 8379, 13, 51484, 51484, 407, 729, 366, 1936, 7512, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.20542887983650998, "compression_ratio": 1.614814814814815, "no_speech_prob": 1.0450859008415136e-05}, {"id": 2077, "seek": 600888, "start": 6017.92, "end": 6019.400000000001, "text": " But it works in certain cases.", "tokens": [50364, 467, 311, 588, 43495, 570, 291, 50544, 50544, 1062, 643, 257, 588, 2416, 1230, 295, 341, 10139, 50684, 50684, 281, 312, 1075, 281, 360, 257, 665, 1691, 13, 50816, 50816, 583, 309, 1985, 294, 1629, 3331, 13, 50890, 50890, 400, 291, 500, 380, 362, 281, 3847, 264, 700, 4583, 13, 50980, 50980, 509, 1936, 1888, 309, 16979, 13, 51050, 51050, 400, 370, 264, 787, 551, 291, 643, 281, 3847, 51130, 51130, 307, 257, 8213, 1508, 9902, 322, 1192, 13, 51238, 51238, 1981, 26110, 1508, 23463, 11, 597, 286, 603, 751, 466, 294, 257, 3456, 11, 51394, 51394, 1401, 428, 5143, 6828, 293, 28256, 8379, 13, 51484, 51484, 407, 729, 366, 1936, 7512, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.20542887983650998, "compression_ratio": 1.614814814814815, "no_speech_prob": 1.0450859008415136e-05}, {"id": 2078, "seek": 600888, "start": 6019.400000000001, "end": 6021.2, "text": " And you don't have to train the first layer.", "tokens": [50364, 467, 311, 588, 43495, 570, 291, 50544, 50544, 1062, 643, 257, 588, 2416, 1230, 295, 341, 10139, 50684, 50684, 281, 312, 1075, 281, 360, 257, 665, 1691, 13, 50816, 50816, 583, 309, 1985, 294, 1629, 3331, 13, 50890, 50890, 400, 291, 500, 380, 362, 281, 3847, 264, 700, 4583, 13, 50980, 50980, 509, 1936, 1888, 309, 16979, 13, 51050, 51050, 400, 370, 264, 787, 551, 291, 643, 281, 3847, 51130, 51130, 307, 257, 8213, 1508, 9902, 322, 1192, 13, 51238, 51238, 1981, 26110, 1508, 23463, 11, 597, 286, 603, 751, 466, 294, 257, 3456, 11, 51394, 51394, 1401, 428, 5143, 6828, 293, 28256, 8379, 13, 51484, 51484, 407, 729, 366, 1936, 7512, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.20542887983650998, "compression_ratio": 1.614814814814815, "no_speech_prob": 1.0450859008415136e-05}, {"id": 2079, "seek": 600888, "start": 6021.2, "end": 6022.6, "text": " You basically pick it randomly.", "tokens": [50364, 467, 311, 588, 43495, 570, 291, 50544, 50544, 1062, 643, 257, 588, 2416, 1230, 295, 341, 10139, 50684, 50684, 281, 312, 1075, 281, 360, 257, 665, 1691, 13, 50816, 50816, 583, 309, 1985, 294, 1629, 3331, 13, 50890, 50890, 400, 291, 500, 380, 362, 281, 3847, 264, 700, 4583, 13, 50980, 50980, 509, 1936, 1888, 309, 16979, 13, 51050, 51050, 400, 370, 264, 787, 551, 291, 643, 281, 3847, 51130, 51130, 307, 257, 8213, 1508, 9902, 322, 1192, 13, 51238, 51238, 1981, 26110, 1508, 23463, 11, 597, 286, 603, 751, 466, 294, 257, 3456, 11, 51394, 51394, 1401, 428, 5143, 6828, 293, 28256, 8379, 13, 51484, 51484, 407, 729, 366, 1936, 7512, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.20542887983650998, "compression_ratio": 1.614814814814815, "no_speech_prob": 1.0450859008415136e-05}, {"id": 2080, "seek": 600888, "start": 6022.6, "end": 6024.2, "text": " And so the only thing you need to train", "tokens": [50364, 467, 311, 588, 43495, 570, 291, 50544, 50544, 1062, 643, 257, 588, 2416, 1230, 295, 341, 10139, 50684, 50684, 281, 312, 1075, 281, 360, 257, 665, 1691, 13, 50816, 50816, 583, 309, 1985, 294, 1629, 3331, 13, 50890, 50890, 400, 291, 500, 380, 362, 281, 3847, 264, 700, 4583, 13, 50980, 50980, 509, 1936, 1888, 309, 16979, 13, 51050, 51050, 400, 370, 264, 787, 551, 291, 643, 281, 3847, 51130, 51130, 307, 257, 8213, 1508, 9902, 322, 1192, 13, 51238, 51238, 1981, 26110, 1508, 23463, 11, 597, 286, 603, 751, 466, 294, 257, 3456, 11, 51394, 51394, 1401, 428, 5143, 6828, 293, 28256, 8379, 13, 51484, 51484, 407, 729, 366, 1936, 7512, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.20542887983650998, "compression_ratio": 1.614814814814815, "no_speech_prob": 1.0450859008415136e-05}, {"id": 2081, "seek": 600888, "start": 6024.2, "end": 6026.36, "text": " is a linear classifier on top.", "tokens": [50364, 467, 311, 588, 43495, 570, 291, 50544, 50544, 1062, 643, 257, 588, 2416, 1230, 295, 341, 10139, 50684, 50684, 281, 312, 1075, 281, 360, 257, 665, 1691, 13, 50816, 50816, 583, 309, 1985, 294, 1629, 3331, 13, 50890, 50890, 400, 291, 500, 380, 362, 281, 3847, 264, 700, 4583, 13, 50980, 50980, 509, 1936, 1888, 309, 16979, 13, 51050, 51050, 400, 370, 264, 787, 551, 291, 643, 281, 3847, 51130, 51130, 307, 257, 8213, 1508, 9902, 322, 1192, 13, 51238, 51238, 1981, 26110, 1508, 23463, 11, 597, 286, 603, 751, 466, 294, 257, 3456, 11, 51394, 51394, 1401, 428, 5143, 6828, 293, 28256, 8379, 13, 51484, 51484, 407, 729, 366, 1936, 7512, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.20542887983650998, "compression_ratio": 1.614814814814815, "no_speech_prob": 1.0450859008415136e-05}, {"id": 2082, "seek": 600888, "start": 6026.36, "end": 6029.4800000000005, "text": " These polynomial classifiers, which I'll talk about in a minute,", "tokens": [50364, 467, 311, 588, 43495, 570, 291, 50544, 50544, 1062, 643, 257, 588, 2416, 1230, 295, 341, 10139, 50684, 50684, 281, 312, 1075, 281, 360, 257, 665, 1691, 13, 50816, 50816, 583, 309, 1985, 294, 1629, 3331, 13, 50890, 50890, 400, 291, 500, 380, 362, 281, 3847, 264, 700, 4583, 13, 50980, 50980, 509, 1936, 1888, 309, 16979, 13, 51050, 51050, 400, 370, 264, 787, 551, 291, 643, 281, 3847, 51130, 51130, 307, 257, 8213, 1508, 9902, 322, 1192, 13, 51238, 51238, 1981, 26110, 1508, 23463, 11, 597, 286, 603, 751, 466, 294, 257, 3456, 11, 51394, 51394, 1401, 428, 5143, 6828, 293, 28256, 8379, 13, 51484, 51484, 407, 729, 366, 1936, 7512, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.20542887983650998, "compression_ratio": 1.614814814814815, "no_speech_prob": 1.0450859008415136e-05}, {"id": 2083, "seek": 600888, "start": 6029.4800000000005, "end": 6031.28, "text": " read your basis functions and kernel machines.", "tokens": [50364, 467, 311, 588, 43495, 570, 291, 50544, 50544, 1062, 643, 257, 588, 2416, 1230, 295, 341, 10139, 50684, 50684, 281, 312, 1075, 281, 360, 257, 665, 1691, 13, 50816, 50816, 583, 309, 1985, 294, 1629, 3331, 13, 50890, 50890, 400, 291, 500, 380, 362, 281, 3847, 264, 700, 4583, 13, 50980, 50980, 509, 1936, 1888, 309, 16979, 13, 51050, 51050, 400, 370, 264, 787, 551, 291, 643, 281, 3847, 51130, 51130, 307, 257, 8213, 1508, 9902, 322, 1192, 13, 51238, 51238, 1981, 26110, 1508, 23463, 11, 597, 286, 603, 751, 466, 294, 257, 3456, 11, 51394, 51394, 1401, 428, 5143, 6828, 293, 28256, 8379, 13, 51484, 51484, 407, 729, 366, 1936, 7512, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.20542887983650998, "compression_ratio": 1.614814814814815, "no_speech_prob": 1.0450859008415136e-05}, {"id": 2084, "seek": 600888, "start": 6031.28, "end": 6034.52, "text": " So those are basically techniques", "tokens": [50364, 467, 311, 588, 43495, 570, 291, 50544, 50544, 1062, 643, 257, 588, 2416, 1230, 295, 341, 10139, 50684, 50684, 281, 312, 1075, 281, 360, 257, 665, 1691, 13, 50816, 50816, 583, 309, 1985, 294, 1629, 3331, 13, 50890, 50890, 400, 291, 500, 380, 362, 281, 3847, 264, 700, 4583, 13, 50980, 50980, 509, 1936, 1888, 309, 16979, 13, 51050, 51050, 400, 370, 264, 787, 551, 291, 643, 281, 3847, 51130, 51130, 307, 257, 8213, 1508, 9902, 322, 1192, 13, 51238, 51238, 1981, 26110, 1508, 23463, 11, 597, 286, 603, 751, 466, 294, 257, 3456, 11, 51394, 51394, 1401, 428, 5143, 6828, 293, 28256, 8379, 13, 51484, 51484, 407, 729, 366, 1936, 7512, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.20542887983650998, "compression_ratio": 1.614814814814815, "no_speech_prob": 1.0450859008415136e-05}, {"id": 2085, "seek": 603452, "start": 6034.52, "end": 6040.64, "text": " to turn an input into a representation that then", "tokens": [50364, 281, 1261, 364, 4846, 666, 257, 10290, 300, 550, 50670, 50670, 486, 312, 4476, 1508, 30876, 538, 257, 2199, 1508, 9902, 50900, 50900, 411, 257, 8213, 1508, 9902, 13, 51062, 51062, 407, 437, 311, 257, 26110, 1508, 9902, 30, 51154, 51154, 316, 26110, 1508, 9902, 11, 1936, 11, 51230, 51230, 3811, 300, 428, 4846, 8062, 575, 732, 12819, 13, 51360, 51360, 440, 636, 291, 3488, 264, 10139, 1860, 51452, 51452, 295, 264, 10290, 307, 300, 291, 747, 1184, 295, 264, 4846, 51608, 51608, 9102, 11, 457, 291, 611, 747, 633, 1674, 51744, 51744, 295, 15494, 295, 4846, 9102, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11435883716472144, "compression_ratio": 1.8711111111111112, "no_speech_prob": 4.425238785188412e-06}, {"id": 2086, "seek": 603452, "start": 6040.64, "end": 6045.240000000001, "text": " will be essentially classifiable by a simple classifier", "tokens": [50364, 281, 1261, 364, 4846, 666, 257, 10290, 300, 550, 50670, 50670, 486, 312, 4476, 1508, 30876, 538, 257, 2199, 1508, 9902, 50900, 50900, 411, 257, 8213, 1508, 9902, 13, 51062, 51062, 407, 437, 311, 257, 26110, 1508, 9902, 30, 51154, 51154, 316, 26110, 1508, 9902, 11, 1936, 11, 51230, 51230, 3811, 300, 428, 4846, 8062, 575, 732, 12819, 13, 51360, 51360, 440, 636, 291, 3488, 264, 10139, 1860, 51452, 51452, 295, 264, 10290, 307, 300, 291, 747, 1184, 295, 264, 4846, 51608, 51608, 9102, 11, 457, 291, 611, 747, 633, 1674, 51744, 51744, 295, 15494, 295, 4846, 9102, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11435883716472144, "compression_ratio": 1.8711111111111112, "no_speech_prob": 4.425238785188412e-06}, {"id": 2087, "seek": 603452, "start": 6045.240000000001, "end": 6048.4800000000005, "text": " like a linear classifier.", "tokens": [50364, 281, 1261, 364, 4846, 666, 257, 10290, 300, 550, 50670, 50670, 486, 312, 4476, 1508, 30876, 538, 257, 2199, 1508, 9902, 50900, 50900, 411, 257, 8213, 1508, 9902, 13, 51062, 51062, 407, 437, 311, 257, 26110, 1508, 9902, 30, 51154, 51154, 316, 26110, 1508, 9902, 11, 1936, 11, 51230, 51230, 3811, 300, 428, 4846, 8062, 575, 732, 12819, 13, 51360, 51360, 440, 636, 291, 3488, 264, 10139, 1860, 51452, 51452, 295, 264, 10290, 307, 300, 291, 747, 1184, 295, 264, 4846, 51608, 51608, 9102, 11, 457, 291, 611, 747, 633, 1674, 51744, 51744, 295, 15494, 295, 4846, 9102, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11435883716472144, "compression_ratio": 1.8711111111111112, "no_speech_prob": 4.425238785188412e-06}, {"id": 2088, "seek": 603452, "start": 6048.4800000000005, "end": 6050.320000000001, "text": " So what's a polynomial classifier?", "tokens": [50364, 281, 1261, 364, 4846, 666, 257, 10290, 300, 550, 50670, 50670, 486, 312, 4476, 1508, 30876, 538, 257, 2199, 1508, 9902, 50900, 50900, 411, 257, 8213, 1508, 9902, 13, 51062, 51062, 407, 437, 311, 257, 26110, 1508, 9902, 30, 51154, 51154, 316, 26110, 1508, 9902, 11, 1936, 11, 51230, 51230, 3811, 300, 428, 4846, 8062, 575, 732, 12819, 13, 51360, 51360, 440, 636, 291, 3488, 264, 10139, 1860, 51452, 51452, 295, 264, 10290, 307, 300, 291, 747, 1184, 295, 264, 4846, 51608, 51608, 9102, 11, 457, 291, 611, 747, 633, 1674, 51744, 51744, 295, 15494, 295, 4846, 9102, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11435883716472144, "compression_ratio": 1.8711111111111112, "no_speech_prob": 4.425238785188412e-06}, {"id": 2089, "seek": 603452, "start": 6050.320000000001, "end": 6051.84, "text": " A polynomial classifier, basically,", "tokens": [50364, 281, 1261, 364, 4846, 666, 257, 10290, 300, 550, 50670, 50670, 486, 312, 4476, 1508, 30876, 538, 257, 2199, 1508, 9902, 50900, 50900, 411, 257, 8213, 1508, 9902, 13, 51062, 51062, 407, 437, 311, 257, 26110, 1508, 9902, 30, 51154, 51154, 316, 26110, 1508, 9902, 11, 1936, 11, 51230, 51230, 3811, 300, 428, 4846, 8062, 575, 732, 12819, 13, 51360, 51360, 440, 636, 291, 3488, 264, 10139, 1860, 51452, 51452, 295, 264, 10290, 307, 300, 291, 747, 1184, 295, 264, 4846, 51608, 51608, 9102, 11, 457, 291, 611, 747, 633, 1674, 51744, 51744, 295, 15494, 295, 4846, 9102, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11435883716472144, "compression_ratio": 1.8711111111111112, "no_speech_prob": 4.425238785188412e-06}, {"id": 2090, "seek": 603452, "start": 6051.84, "end": 6054.4400000000005, "text": " imagine that your input vector has two dimensions.", "tokens": [50364, 281, 1261, 364, 4846, 666, 257, 10290, 300, 550, 50670, 50670, 486, 312, 4476, 1508, 30876, 538, 257, 2199, 1508, 9902, 50900, 50900, 411, 257, 8213, 1508, 9902, 13, 51062, 51062, 407, 437, 311, 257, 26110, 1508, 9902, 30, 51154, 51154, 316, 26110, 1508, 9902, 11, 1936, 11, 51230, 51230, 3811, 300, 428, 4846, 8062, 575, 732, 12819, 13, 51360, 51360, 440, 636, 291, 3488, 264, 10139, 1860, 51452, 51452, 295, 264, 10290, 307, 300, 291, 747, 1184, 295, 264, 4846, 51608, 51608, 9102, 11, 457, 291, 611, 747, 633, 1674, 51744, 51744, 295, 15494, 295, 4846, 9102, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11435883716472144, "compression_ratio": 1.8711111111111112, "no_speech_prob": 4.425238785188412e-06}, {"id": 2091, "seek": 603452, "start": 6054.4400000000005, "end": 6056.280000000001, "text": " The way you increase the dimensionality", "tokens": [50364, 281, 1261, 364, 4846, 666, 257, 10290, 300, 550, 50670, 50670, 486, 312, 4476, 1508, 30876, 538, 257, 2199, 1508, 9902, 50900, 50900, 411, 257, 8213, 1508, 9902, 13, 51062, 51062, 407, 437, 311, 257, 26110, 1508, 9902, 30, 51154, 51154, 316, 26110, 1508, 9902, 11, 1936, 11, 51230, 51230, 3811, 300, 428, 4846, 8062, 575, 732, 12819, 13, 51360, 51360, 440, 636, 291, 3488, 264, 10139, 1860, 51452, 51452, 295, 264, 10290, 307, 300, 291, 747, 1184, 295, 264, 4846, 51608, 51608, 9102, 11, 457, 291, 611, 747, 633, 1674, 51744, 51744, 295, 15494, 295, 4846, 9102, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11435883716472144, "compression_ratio": 1.8711111111111112, "no_speech_prob": 4.425238785188412e-06}, {"id": 2092, "seek": 603452, "start": 6056.280000000001, "end": 6059.400000000001, "text": " of the representation is that you take each of the input", "tokens": [50364, 281, 1261, 364, 4846, 666, 257, 10290, 300, 550, 50670, 50670, 486, 312, 4476, 1508, 30876, 538, 257, 2199, 1508, 9902, 50900, 50900, 411, 257, 8213, 1508, 9902, 13, 51062, 51062, 407, 437, 311, 257, 26110, 1508, 9902, 30, 51154, 51154, 316, 26110, 1508, 9902, 11, 1936, 11, 51230, 51230, 3811, 300, 428, 4846, 8062, 575, 732, 12819, 13, 51360, 51360, 440, 636, 291, 3488, 264, 10139, 1860, 51452, 51452, 295, 264, 10290, 307, 300, 291, 747, 1184, 295, 264, 4846, 51608, 51608, 9102, 11, 457, 291, 611, 747, 633, 1674, 51744, 51744, 295, 15494, 295, 4846, 9102, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11435883716472144, "compression_ratio": 1.8711111111111112, "no_speech_prob": 4.425238785188412e-06}, {"id": 2093, "seek": 603452, "start": 6059.400000000001, "end": 6062.120000000001, "text": " variables, but you also take every product", "tokens": [50364, 281, 1261, 364, 4846, 666, 257, 10290, 300, 550, 50670, 50670, 486, 312, 4476, 1508, 30876, 538, 257, 2199, 1508, 9902, 50900, 50900, 411, 257, 8213, 1508, 9902, 13, 51062, 51062, 407, 437, 311, 257, 26110, 1508, 9902, 30, 51154, 51154, 316, 26110, 1508, 9902, 11, 1936, 11, 51230, 51230, 3811, 300, 428, 4846, 8062, 575, 732, 12819, 13, 51360, 51360, 440, 636, 291, 3488, 264, 10139, 1860, 51452, 51452, 295, 264, 10290, 307, 300, 291, 747, 1184, 295, 264, 4846, 51608, 51608, 9102, 11, 457, 291, 611, 747, 633, 1674, 51744, 51744, 295, 15494, 295, 4846, 9102, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11435883716472144, "compression_ratio": 1.8711111111111112, "no_speech_prob": 4.425238785188412e-06}, {"id": 2094, "seek": 603452, "start": 6062.120000000001, "end": 6063.6, "text": " of pairs of input variables.", "tokens": [50364, 281, 1261, 364, 4846, 666, 257, 10290, 300, 550, 50670, 50670, 486, 312, 4476, 1508, 30876, 538, 257, 2199, 1508, 9902, 50900, 50900, 411, 257, 8213, 1508, 9902, 13, 51062, 51062, 407, 437, 311, 257, 26110, 1508, 9902, 30, 51154, 51154, 316, 26110, 1508, 9902, 11, 1936, 11, 51230, 51230, 3811, 300, 428, 4846, 8062, 575, 732, 12819, 13, 51360, 51360, 440, 636, 291, 3488, 264, 10139, 1860, 51452, 51452, 295, 264, 10290, 307, 300, 291, 747, 1184, 295, 264, 4846, 51608, 51608, 9102, 11, 457, 291, 611, 747, 633, 1674, 51744, 51744, 295, 15494, 295, 4846, 9102, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11435883716472144, "compression_ratio": 1.8711111111111112, "no_speech_prob": 4.425238785188412e-06}, {"id": 2095, "seek": 606360, "start": 6063.6, "end": 6066.04, "text": " So now you have a new feature vector,", "tokens": [50364, 407, 586, 291, 362, 257, 777, 4111, 8062, 11, 50486, 50486, 597, 307, 18204, 295, 2031, 16, 11, 2031, 17, 13, 50590, 50590, 509, 909, 502, 337, 264, 12577, 13, 50660, 50660, 400, 550, 611, 2031, 16, 1413, 2031, 17, 11, 2031, 16, 8889, 11, 293, 2031, 17, 8889, 13, 50852, 50852, 407, 562, 291, 360, 257, 8213, 21538, 294, 300, 1901, 11, 51084, 51084, 437, 291, 434, 884, 534, 307, 257, 37262, 21538, 51292, 51292, 294, 264, 3380, 1901, 13, 51386, 51386, 440, 3753, 11, 264, 29279, 3753, 294, 264, 3380, 1901, 51516, 51516, 586, 307, 257, 37262, 7605, 294, 732, 12819, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12079185026663321, "compression_ratio": 1.7149321266968325, "no_speech_prob": 2.110949753841851e-05}, {"id": 2096, "seek": 606360, "start": 6066.04, "end": 6068.120000000001, "text": " which is composed of x1, x2.", "tokens": [50364, 407, 586, 291, 362, 257, 777, 4111, 8062, 11, 50486, 50486, 597, 307, 18204, 295, 2031, 16, 11, 2031, 17, 13, 50590, 50590, 509, 909, 502, 337, 264, 12577, 13, 50660, 50660, 400, 550, 611, 2031, 16, 1413, 2031, 17, 11, 2031, 16, 8889, 11, 293, 2031, 17, 8889, 13, 50852, 50852, 407, 562, 291, 360, 257, 8213, 21538, 294, 300, 1901, 11, 51084, 51084, 437, 291, 434, 884, 534, 307, 257, 37262, 21538, 51292, 51292, 294, 264, 3380, 1901, 13, 51386, 51386, 440, 3753, 11, 264, 29279, 3753, 294, 264, 3380, 1901, 51516, 51516, 586, 307, 257, 37262, 7605, 294, 732, 12819, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12079185026663321, "compression_ratio": 1.7149321266968325, "no_speech_prob": 2.110949753841851e-05}, {"id": 2097, "seek": 606360, "start": 6068.120000000001, "end": 6069.52, "text": " You add 1 for the bias.", "tokens": [50364, 407, 586, 291, 362, 257, 777, 4111, 8062, 11, 50486, 50486, 597, 307, 18204, 295, 2031, 16, 11, 2031, 17, 13, 50590, 50590, 509, 909, 502, 337, 264, 12577, 13, 50660, 50660, 400, 550, 611, 2031, 16, 1413, 2031, 17, 11, 2031, 16, 8889, 11, 293, 2031, 17, 8889, 13, 50852, 50852, 407, 562, 291, 360, 257, 8213, 21538, 294, 300, 1901, 11, 51084, 51084, 437, 291, 434, 884, 534, 307, 257, 37262, 21538, 51292, 51292, 294, 264, 3380, 1901, 13, 51386, 51386, 440, 3753, 11, 264, 29279, 3753, 294, 264, 3380, 1901, 51516, 51516, 586, 307, 257, 37262, 7605, 294, 732, 12819, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12079185026663321, "compression_ratio": 1.7149321266968325, "no_speech_prob": 2.110949753841851e-05}, {"id": 2098, "seek": 606360, "start": 6069.52, "end": 6073.360000000001, "text": " And then also x1 times x2, x1 squared, and x2 squared.", "tokens": [50364, 407, 586, 291, 362, 257, 777, 4111, 8062, 11, 50486, 50486, 597, 307, 18204, 295, 2031, 16, 11, 2031, 17, 13, 50590, 50590, 509, 909, 502, 337, 264, 12577, 13, 50660, 50660, 400, 550, 611, 2031, 16, 1413, 2031, 17, 11, 2031, 16, 8889, 11, 293, 2031, 17, 8889, 13, 50852, 50852, 407, 562, 291, 360, 257, 8213, 21538, 294, 300, 1901, 11, 51084, 51084, 437, 291, 434, 884, 534, 307, 257, 37262, 21538, 51292, 51292, 294, 264, 3380, 1901, 13, 51386, 51386, 440, 3753, 11, 264, 29279, 3753, 294, 264, 3380, 1901, 51516, 51516, 586, 307, 257, 37262, 7605, 294, 732, 12819, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12079185026663321, "compression_ratio": 1.7149321266968325, "no_speech_prob": 2.110949753841851e-05}, {"id": 2099, "seek": 606360, "start": 6073.360000000001, "end": 6078.0, "text": " So when you do a linear classification in that space,", "tokens": [50364, 407, 586, 291, 362, 257, 777, 4111, 8062, 11, 50486, 50486, 597, 307, 18204, 295, 2031, 16, 11, 2031, 17, 13, 50590, 50590, 509, 909, 502, 337, 264, 12577, 13, 50660, 50660, 400, 550, 611, 2031, 16, 1413, 2031, 17, 11, 2031, 16, 8889, 11, 293, 2031, 17, 8889, 13, 50852, 50852, 407, 562, 291, 360, 257, 8213, 21538, 294, 300, 1901, 11, 51084, 51084, 437, 291, 434, 884, 534, 307, 257, 37262, 21538, 51292, 51292, 294, 264, 3380, 1901, 13, 51386, 51386, 440, 3753, 11, 264, 29279, 3753, 294, 264, 3380, 1901, 51516, 51516, 586, 307, 257, 37262, 7605, 294, 732, 12819, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12079185026663321, "compression_ratio": 1.7149321266968325, "no_speech_prob": 2.110949753841851e-05}, {"id": 2100, "seek": 606360, "start": 6078.0, "end": 6082.160000000001, "text": " what you're doing really is a quadratic classification", "tokens": [50364, 407, 586, 291, 362, 257, 777, 4111, 8062, 11, 50486, 50486, 597, 307, 18204, 295, 2031, 16, 11, 2031, 17, 13, 50590, 50590, 509, 909, 502, 337, 264, 12577, 13, 50660, 50660, 400, 550, 611, 2031, 16, 1413, 2031, 17, 11, 2031, 16, 8889, 11, 293, 2031, 17, 8889, 13, 50852, 50852, 407, 562, 291, 360, 257, 8213, 21538, 294, 300, 1901, 11, 51084, 51084, 437, 291, 434, 884, 534, 307, 257, 37262, 21538, 51292, 51292, 294, 264, 3380, 1901, 13, 51386, 51386, 440, 3753, 11, 264, 29279, 3753, 294, 264, 3380, 1901, 51516, 51516, 586, 307, 257, 37262, 7605, 294, 732, 12819, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12079185026663321, "compression_ratio": 1.7149321266968325, "no_speech_prob": 2.110949753841851e-05}, {"id": 2101, "seek": 606360, "start": 6082.160000000001, "end": 6084.04, "text": " in the original space.", "tokens": [50364, 407, 586, 291, 362, 257, 777, 4111, 8062, 11, 50486, 50486, 597, 307, 18204, 295, 2031, 16, 11, 2031, 17, 13, 50590, 50590, 509, 909, 502, 337, 264, 12577, 13, 50660, 50660, 400, 550, 611, 2031, 16, 1413, 2031, 17, 11, 2031, 16, 8889, 11, 293, 2031, 17, 8889, 13, 50852, 50852, 407, 562, 291, 360, 257, 8213, 21538, 294, 300, 1901, 11, 51084, 51084, 437, 291, 434, 884, 534, 307, 257, 37262, 21538, 51292, 51292, 294, 264, 3380, 1901, 13, 51386, 51386, 440, 3753, 11, 264, 29279, 3753, 294, 264, 3380, 1901, 51516, 51516, 586, 307, 257, 37262, 7605, 294, 732, 12819, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12079185026663321, "compression_ratio": 1.7149321266968325, "no_speech_prob": 2.110949753841851e-05}, {"id": 2102, "seek": 606360, "start": 6084.04, "end": 6086.64, "text": " The surface, the separating surface in the original space", "tokens": [50364, 407, 586, 291, 362, 257, 777, 4111, 8062, 11, 50486, 50486, 597, 307, 18204, 295, 2031, 16, 11, 2031, 17, 13, 50590, 50590, 509, 909, 502, 337, 264, 12577, 13, 50660, 50660, 400, 550, 611, 2031, 16, 1413, 2031, 17, 11, 2031, 16, 8889, 11, 293, 2031, 17, 8889, 13, 50852, 50852, 407, 562, 291, 360, 257, 8213, 21538, 294, 300, 1901, 11, 51084, 51084, 437, 291, 434, 884, 534, 307, 257, 37262, 21538, 51292, 51292, 294, 264, 3380, 1901, 13, 51386, 51386, 440, 3753, 11, 264, 29279, 3753, 294, 264, 3380, 1901, 51516, 51516, 586, 307, 257, 37262, 7605, 294, 732, 12819, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12079185026663321, "compression_ratio": 1.7149321266968325, "no_speech_prob": 2.110949753841851e-05}, {"id": 2103, "seek": 606360, "start": 6086.64, "end": 6091.84, "text": " now is a quadratic curve in two dimensions.", "tokens": [50364, 407, 586, 291, 362, 257, 777, 4111, 8062, 11, 50486, 50486, 597, 307, 18204, 295, 2031, 16, 11, 2031, 17, 13, 50590, 50590, 509, 909, 502, 337, 264, 12577, 13, 50660, 50660, 400, 550, 611, 2031, 16, 1413, 2031, 17, 11, 2031, 16, 8889, 11, 293, 2031, 17, 8889, 13, 50852, 50852, 407, 562, 291, 360, 257, 8213, 21538, 294, 300, 1901, 11, 51084, 51084, 437, 291, 434, 884, 534, 307, 257, 37262, 21538, 51292, 51292, 294, 264, 3380, 1901, 13, 51386, 51386, 440, 3753, 11, 264, 29279, 3753, 294, 264, 3380, 1901, 51516, 51516, 586, 307, 257, 37262, 7605, 294, 732, 12819, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12079185026663321, "compression_ratio": 1.7149321266968325, "no_speech_prob": 2.110949753841851e-05}, {"id": 2104, "seek": 609184, "start": 6091.84, "end": 6095.84, "text": " In n dimension, it's a quadratic hypersurface, basically.", "tokens": [50364, 682, 297, 10139, 11, 309, 311, 257, 37262, 7420, 433, 374, 2868, 11, 1936, 13, 50564, 50564, 407, 309, 727, 312, 257, 45729, 4711, 11, 420, 364, 8284, 48041, 11, 420, 257, 9848, 65, 4711, 11, 50860, 50860, 5413, 322, 264, 31994, 13, 50988, 50988, 823, 11, 264, 1154, 365, 341, 307, 300, 309, 1177, 380, 589, 588, 731, 51088, 51088, 294, 1090, 10139, 570, 264, 1230, 295, 4122, 51184, 51184, 13156, 365, 257, 3732, 295, 264, 1230, 295, 15743, 13, 51324, 51324, 407, 498, 291, 528, 281, 3079, 341, 281, 11, 718, 311, 584, 11, 364, 29903, 31890, 2010, 51480, 51480, 3256, 11, 264, 8669, 307, 38882, 538, 38882, 538, 805, 51660, 51660, 570, 291, 362, 2017, 9235, 13, 51736, 51736, 663, 311, 1217, 257, 1090, 10139, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16372611827420114, "compression_ratio": 1.6631205673758864, "no_speech_prob": 1.5443974916706793e-05}, {"id": 2105, "seek": 609184, "start": 6095.84, "end": 6101.76, "text": " So it could be a parabola, or an ellipse, or a hyperbola,", "tokens": [50364, 682, 297, 10139, 11, 309, 311, 257, 37262, 7420, 433, 374, 2868, 11, 1936, 13, 50564, 50564, 407, 309, 727, 312, 257, 45729, 4711, 11, 420, 364, 8284, 48041, 11, 420, 257, 9848, 65, 4711, 11, 50860, 50860, 5413, 322, 264, 31994, 13, 50988, 50988, 823, 11, 264, 1154, 365, 341, 307, 300, 309, 1177, 380, 589, 588, 731, 51088, 51088, 294, 1090, 10139, 570, 264, 1230, 295, 4122, 51184, 51184, 13156, 365, 257, 3732, 295, 264, 1230, 295, 15743, 13, 51324, 51324, 407, 498, 291, 528, 281, 3079, 341, 281, 11, 718, 311, 584, 11, 364, 29903, 31890, 2010, 51480, 51480, 3256, 11, 264, 8669, 307, 38882, 538, 38882, 538, 805, 51660, 51660, 570, 291, 362, 2017, 9235, 13, 51736, 51736, 663, 311, 1217, 257, 1090, 10139, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16372611827420114, "compression_ratio": 1.6631205673758864, "no_speech_prob": 1.5443974916706793e-05}, {"id": 2106, "seek": 609184, "start": 6101.76, "end": 6104.32, "text": " depending on the coefficients.", "tokens": [50364, 682, 297, 10139, 11, 309, 311, 257, 37262, 7420, 433, 374, 2868, 11, 1936, 13, 50564, 50564, 407, 309, 727, 312, 257, 45729, 4711, 11, 420, 364, 8284, 48041, 11, 420, 257, 9848, 65, 4711, 11, 50860, 50860, 5413, 322, 264, 31994, 13, 50988, 50988, 823, 11, 264, 1154, 365, 341, 307, 300, 309, 1177, 380, 589, 588, 731, 51088, 51088, 294, 1090, 10139, 570, 264, 1230, 295, 4122, 51184, 51184, 13156, 365, 257, 3732, 295, 264, 1230, 295, 15743, 13, 51324, 51324, 407, 498, 291, 528, 281, 3079, 341, 281, 11, 718, 311, 584, 11, 364, 29903, 31890, 2010, 51480, 51480, 3256, 11, 264, 8669, 307, 38882, 538, 38882, 538, 805, 51660, 51660, 570, 291, 362, 2017, 9235, 13, 51736, 51736, 663, 311, 1217, 257, 1090, 10139, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16372611827420114, "compression_ratio": 1.6631205673758864, "no_speech_prob": 1.5443974916706793e-05}, {"id": 2107, "seek": 609184, "start": 6104.32, "end": 6106.32, "text": " Now, the problem with this is that it doesn't work very well", "tokens": [50364, 682, 297, 10139, 11, 309, 311, 257, 37262, 7420, 433, 374, 2868, 11, 1936, 13, 50564, 50564, 407, 309, 727, 312, 257, 45729, 4711, 11, 420, 364, 8284, 48041, 11, 420, 257, 9848, 65, 4711, 11, 50860, 50860, 5413, 322, 264, 31994, 13, 50988, 50988, 823, 11, 264, 1154, 365, 341, 307, 300, 309, 1177, 380, 589, 588, 731, 51088, 51088, 294, 1090, 10139, 570, 264, 1230, 295, 4122, 51184, 51184, 13156, 365, 257, 3732, 295, 264, 1230, 295, 15743, 13, 51324, 51324, 407, 498, 291, 528, 281, 3079, 341, 281, 11, 718, 311, 584, 11, 364, 29903, 31890, 2010, 51480, 51480, 3256, 11, 264, 8669, 307, 38882, 538, 38882, 538, 805, 51660, 51660, 570, 291, 362, 2017, 9235, 13, 51736, 51736, 663, 311, 1217, 257, 1090, 10139, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16372611827420114, "compression_ratio": 1.6631205673758864, "no_speech_prob": 1.5443974916706793e-05}, {"id": 2108, "seek": 609184, "start": 6106.32, "end": 6108.24, "text": " in high dimension because the number of features", "tokens": [50364, 682, 297, 10139, 11, 309, 311, 257, 37262, 7420, 433, 374, 2868, 11, 1936, 13, 50564, 50564, 407, 309, 727, 312, 257, 45729, 4711, 11, 420, 364, 8284, 48041, 11, 420, 257, 9848, 65, 4711, 11, 50860, 50860, 5413, 322, 264, 31994, 13, 50988, 50988, 823, 11, 264, 1154, 365, 341, 307, 300, 309, 1177, 380, 589, 588, 731, 51088, 51088, 294, 1090, 10139, 570, 264, 1230, 295, 4122, 51184, 51184, 13156, 365, 257, 3732, 295, 264, 1230, 295, 15743, 13, 51324, 51324, 407, 498, 291, 528, 281, 3079, 341, 281, 11, 718, 311, 584, 11, 364, 29903, 31890, 2010, 51480, 51480, 3256, 11, 264, 8669, 307, 38882, 538, 38882, 538, 805, 51660, 51660, 570, 291, 362, 2017, 9235, 13, 51736, 51736, 663, 311, 1217, 257, 1090, 10139, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16372611827420114, "compression_ratio": 1.6631205673758864, "no_speech_prob": 1.5443974916706793e-05}, {"id": 2109, "seek": 609184, "start": 6108.24, "end": 6111.04, "text": " grows with a square of the number of inputs.", "tokens": [50364, 682, 297, 10139, 11, 309, 311, 257, 37262, 7420, 433, 374, 2868, 11, 1936, 13, 50564, 50564, 407, 309, 727, 312, 257, 45729, 4711, 11, 420, 364, 8284, 48041, 11, 420, 257, 9848, 65, 4711, 11, 50860, 50860, 5413, 322, 264, 31994, 13, 50988, 50988, 823, 11, 264, 1154, 365, 341, 307, 300, 309, 1177, 380, 589, 588, 731, 51088, 51088, 294, 1090, 10139, 570, 264, 1230, 295, 4122, 51184, 51184, 13156, 365, 257, 3732, 295, 264, 1230, 295, 15743, 13, 51324, 51324, 407, 498, 291, 528, 281, 3079, 341, 281, 11, 718, 311, 584, 11, 364, 29903, 31890, 2010, 51480, 51480, 3256, 11, 264, 8669, 307, 38882, 538, 38882, 538, 805, 51660, 51660, 570, 291, 362, 2017, 9235, 13, 51736, 51736, 663, 311, 1217, 257, 1090, 10139, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16372611827420114, "compression_ratio": 1.6631205673758864, "no_speech_prob": 1.5443974916706793e-05}, {"id": 2110, "seek": 609184, "start": 6111.04, "end": 6114.16, "text": " So if you want to apply this to, let's say, an ImageNet type", "tokens": [50364, 682, 297, 10139, 11, 309, 311, 257, 37262, 7420, 433, 374, 2868, 11, 1936, 13, 50564, 50564, 407, 309, 727, 312, 257, 45729, 4711, 11, 420, 364, 8284, 48041, 11, 420, 257, 9848, 65, 4711, 11, 50860, 50860, 5413, 322, 264, 31994, 13, 50988, 50988, 823, 11, 264, 1154, 365, 341, 307, 300, 309, 1177, 380, 589, 588, 731, 51088, 51088, 294, 1090, 10139, 570, 264, 1230, 295, 4122, 51184, 51184, 13156, 365, 257, 3732, 295, 264, 1230, 295, 15743, 13, 51324, 51324, 407, 498, 291, 528, 281, 3079, 341, 281, 11, 718, 311, 584, 11, 364, 29903, 31890, 2010, 51480, 51480, 3256, 11, 264, 8669, 307, 38882, 538, 38882, 538, 805, 51660, 51660, 570, 291, 362, 2017, 9235, 13, 51736, 51736, 663, 311, 1217, 257, 1090, 10139, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16372611827420114, "compression_ratio": 1.6631205673758864, "no_speech_prob": 1.5443974916706793e-05}, {"id": 2111, "seek": 609184, "start": 6114.16, "end": 6117.76, "text": " image, the resolution is 256 by 256 by 3", "tokens": [50364, 682, 297, 10139, 11, 309, 311, 257, 37262, 7420, 433, 374, 2868, 11, 1936, 13, 50564, 50564, 407, 309, 727, 312, 257, 45729, 4711, 11, 420, 364, 8284, 48041, 11, 420, 257, 9848, 65, 4711, 11, 50860, 50860, 5413, 322, 264, 31994, 13, 50988, 50988, 823, 11, 264, 1154, 365, 341, 307, 300, 309, 1177, 380, 589, 588, 731, 51088, 51088, 294, 1090, 10139, 570, 264, 1230, 295, 4122, 51184, 51184, 13156, 365, 257, 3732, 295, 264, 1230, 295, 15743, 13, 51324, 51324, 407, 498, 291, 528, 281, 3079, 341, 281, 11, 718, 311, 584, 11, 364, 29903, 31890, 2010, 51480, 51480, 3256, 11, 264, 8669, 307, 38882, 538, 38882, 538, 805, 51660, 51660, 570, 291, 362, 2017, 9235, 13, 51736, 51736, 663, 311, 1217, 257, 1090, 10139, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16372611827420114, "compression_ratio": 1.6631205673758864, "no_speech_prob": 1.5443974916706793e-05}, {"id": 2112, "seek": 609184, "start": 6117.76, "end": 6119.28, "text": " because you have color channels.", "tokens": [50364, 682, 297, 10139, 11, 309, 311, 257, 37262, 7420, 433, 374, 2868, 11, 1936, 13, 50564, 50564, 407, 309, 727, 312, 257, 45729, 4711, 11, 420, 364, 8284, 48041, 11, 420, 257, 9848, 65, 4711, 11, 50860, 50860, 5413, 322, 264, 31994, 13, 50988, 50988, 823, 11, 264, 1154, 365, 341, 307, 300, 309, 1177, 380, 589, 588, 731, 51088, 51088, 294, 1090, 10139, 570, 264, 1230, 295, 4122, 51184, 51184, 13156, 365, 257, 3732, 295, 264, 1230, 295, 15743, 13, 51324, 51324, 407, 498, 291, 528, 281, 3079, 341, 281, 11, 718, 311, 584, 11, 364, 29903, 31890, 2010, 51480, 51480, 3256, 11, 264, 8669, 307, 38882, 538, 38882, 538, 805, 51660, 51660, 570, 291, 362, 2017, 9235, 13, 51736, 51736, 663, 311, 1217, 257, 1090, 10139, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16372611827420114, "compression_ratio": 1.6631205673758864, "no_speech_prob": 1.5443974916706793e-05}, {"id": 2113, "seek": 609184, "start": 6119.28, "end": 6121.56, "text": " That's already a high dimension.", "tokens": [50364, 682, 297, 10139, 11, 309, 311, 257, 37262, 7420, 433, 374, 2868, 11, 1936, 13, 50564, 50564, 407, 309, 727, 312, 257, 45729, 4711, 11, 420, 364, 8284, 48041, 11, 420, 257, 9848, 65, 4711, 11, 50860, 50860, 5413, 322, 264, 31994, 13, 50988, 50988, 823, 11, 264, 1154, 365, 341, 307, 300, 309, 1177, 380, 589, 588, 731, 51088, 51088, 294, 1090, 10139, 570, 264, 1230, 295, 4122, 51184, 51184, 13156, 365, 257, 3732, 295, 264, 1230, 295, 15743, 13, 51324, 51324, 407, 498, 291, 528, 281, 3079, 341, 281, 11, 718, 311, 584, 11, 364, 29903, 31890, 2010, 51480, 51480, 3256, 11, 264, 8669, 307, 38882, 538, 38882, 538, 805, 51660, 51660, 570, 291, 362, 2017, 9235, 13, 51736, 51736, 663, 311, 1217, 257, 1090, 10139, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.16372611827420114, "compression_ratio": 1.6631205673758864, "no_speech_prob": 1.5443974916706793e-05}, {"id": 2114, "seek": 612156, "start": 6121.56, "end": 6125.04, "text": " If you take the cross product of all of those variables,", "tokens": [50364, 759, 291, 747, 264, 3278, 1674, 295, 439, 295, 729, 9102, 11, 50538, 50538, 300, 311, 636, 886, 2416, 13, 50628, 50812, 407, 309, 311, 406, 534, 8496, 337, 1090, 18795, 2740, 11, 50956, 50956, 457, 309, 311, 257, 4282, 13, 51092, 51092, 407, 1687, 8062, 8379, 366, 1936, 732, 4583, 9590, 11, 51314, 51314, 420, 28256, 8379, 544, 5101, 11, 51414, 51414, 366, 732, 4583, 3652, 294, 597, 264, 700, 4583, 575, 51638, 51638, 382, 867, 12819, 382, 291, 362, 3097, 10938, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.15152533487840134, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.3419243259704672e-05}, {"id": 2115, "seek": 612156, "start": 6125.04, "end": 6126.84, "text": " that's way too large.", "tokens": [50364, 759, 291, 747, 264, 3278, 1674, 295, 439, 295, 729, 9102, 11, 50538, 50538, 300, 311, 636, 886, 2416, 13, 50628, 50812, 407, 309, 311, 406, 534, 8496, 337, 1090, 18795, 2740, 11, 50956, 50956, 457, 309, 311, 257, 4282, 13, 51092, 51092, 407, 1687, 8062, 8379, 366, 1936, 732, 4583, 9590, 11, 51314, 51314, 420, 28256, 8379, 544, 5101, 11, 51414, 51414, 366, 732, 4583, 3652, 294, 597, 264, 700, 4583, 575, 51638, 51638, 382, 867, 12819, 382, 291, 362, 3097, 10938, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.15152533487840134, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.3419243259704672e-05}, {"id": 2116, "seek": 612156, "start": 6130.52, "end": 6133.400000000001, "text": " So it's not really practical for high dimensional problems,", "tokens": [50364, 759, 291, 747, 264, 3278, 1674, 295, 439, 295, 729, 9102, 11, 50538, 50538, 300, 311, 636, 886, 2416, 13, 50628, 50812, 407, 309, 311, 406, 534, 8496, 337, 1090, 18795, 2740, 11, 50956, 50956, 457, 309, 311, 257, 4282, 13, 51092, 51092, 407, 1687, 8062, 8379, 366, 1936, 732, 4583, 9590, 11, 51314, 51314, 420, 28256, 8379, 544, 5101, 11, 51414, 51414, 366, 732, 4583, 3652, 294, 597, 264, 700, 4583, 575, 51638, 51638, 382, 867, 12819, 382, 291, 362, 3097, 10938, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.15152533487840134, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.3419243259704672e-05}, {"id": 2117, "seek": 612156, "start": 6133.400000000001, "end": 6136.120000000001, "text": " but it's a trick.", "tokens": [50364, 759, 291, 747, 264, 3278, 1674, 295, 439, 295, 729, 9102, 11, 50538, 50538, 300, 311, 636, 886, 2416, 13, 50628, 50812, 407, 309, 311, 406, 534, 8496, 337, 1090, 18795, 2740, 11, 50956, 50956, 457, 309, 311, 257, 4282, 13, 51092, 51092, 407, 1687, 8062, 8379, 366, 1936, 732, 4583, 9590, 11, 51314, 51314, 420, 28256, 8379, 544, 5101, 11, 51414, 51414, 366, 732, 4583, 3652, 294, 597, 264, 700, 4583, 575, 51638, 51638, 382, 867, 12819, 382, 291, 362, 3097, 10938, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.15152533487840134, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.3419243259704672e-05}, {"id": 2118, "seek": 612156, "start": 6136.120000000001, "end": 6140.56, "text": " So super vector machines are basically two layer networks,", "tokens": [50364, 759, 291, 747, 264, 3278, 1674, 295, 439, 295, 729, 9102, 11, 50538, 50538, 300, 311, 636, 886, 2416, 13, 50628, 50812, 407, 309, 311, 406, 534, 8496, 337, 1090, 18795, 2740, 11, 50956, 50956, 457, 309, 311, 257, 4282, 13, 51092, 51092, 407, 1687, 8062, 8379, 366, 1936, 732, 4583, 9590, 11, 51314, 51314, 420, 28256, 8379, 544, 5101, 11, 51414, 51414, 366, 732, 4583, 3652, 294, 597, 264, 700, 4583, 575, 51638, 51638, 382, 867, 12819, 382, 291, 362, 3097, 10938, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.15152533487840134, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.3419243259704672e-05}, {"id": 2119, "seek": 612156, "start": 6140.56, "end": 6142.56, "text": " or kernel machines more generally,", "tokens": [50364, 759, 291, 747, 264, 3278, 1674, 295, 439, 295, 729, 9102, 11, 50538, 50538, 300, 311, 636, 886, 2416, 13, 50628, 50812, 407, 309, 311, 406, 534, 8496, 337, 1090, 18795, 2740, 11, 50956, 50956, 457, 309, 311, 257, 4282, 13, 51092, 51092, 407, 1687, 8062, 8379, 366, 1936, 732, 4583, 9590, 11, 51314, 51314, 420, 28256, 8379, 544, 5101, 11, 51414, 51414, 366, 732, 4583, 3652, 294, 597, 264, 700, 4583, 575, 51638, 51638, 382, 867, 12819, 382, 291, 362, 3097, 10938, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.15152533487840134, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.3419243259704672e-05}, {"id": 2120, "seek": 612156, "start": 6142.56, "end": 6147.04, "text": " are two layer systems in which the first layer has", "tokens": [50364, 759, 291, 747, 264, 3278, 1674, 295, 439, 295, 729, 9102, 11, 50538, 50538, 300, 311, 636, 886, 2416, 13, 50628, 50812, 407, 309, 311, 406, 534, 8496, 337, 1090, 18795, 2740, 11, 50956, 50956, 457, 309, 311, 257, 4282, 13, 51092, 51092, 407, 1687, 8062, 8379, 366, 1936, 732, 4583, 9590, 11, 51314, 51314, 420, 28256, 8379, 544, 5101, 11, 51414, 51414, 366, 732, 4583, 3652, 294, 597, 264, 700, 4583, 575, 51638, 51638, 382, 867, 12819, 382, 291, 362, 3097, 10938, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.15152533487840134, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.3419243259704672e-05}, {"id": 2121, "seek": 612156, "start": 6147.04, "end": 6150.4800000000005, "text": " as many dimensions as you have training samples.", "tokens": [50364, 759, 291, 747, 264, 3278, 1674, 295, 439, 295, 729, 9102, 11, 50538, 50538, 300, 311, 636, 886, 2416, 13, 50628, 50812, 407, 309, 311, 406, 534, 8496, 337, 1090, 18795, 2740, 11, 50956, 50956, 457, 309, 311, 257, 4282, 13, 51092, 51092, 407, 1687, 8062, 8379, 366, 1936, 732, 4583, 9590, 11, 51314, 51314, 420, 28256, 8379, 544, 5101, 11, 51414, 51414, 366, 732, 4583, 3652, 294, 597, 264, 700, 4583, 575, 51638, 51638, 382, 867, 12819, 382, 291, 362, 3097, 10938, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.15152533487840134, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.3419243259704672e-05}, {"id": 2122, "seek": 615048, "start": 6150.48, "end": 6154.32, "text": " So for each training sample, you create a neuron, a unit,", "tokens": [50364, 407, 337, 1184, 3097, 6889, 11, 291, 1884, 257, 34090, 11, 257, 4985, 11, 50556, 50556, 498, 291, 528, 13, 50626, 50626, 400, 264, 3090, 295, 341, 4985, 307, 281, 5258, 257, 2416, 5598, 50788, 50788, 498, 264, 4846, 8062, 10676, 472, 295, 264, 3097, 10938, 50964, 50964, 293, 257, 1359, 5598, 498, 309, 1177, 380, 11, 51114, 51114, 420, 264, 661, 636, 926, 13, 51162, 51162, 316, 1359, 5598, 498, 309, 10676, 11, 257, 2416, 5598, 498, 309, 1177, 380, 13, 51292, 51292, 2264, 11, 1177, 380, 534, 1871, 13, 51354, 51354, 583, 309, 575, 281, 312, 2107, 28263, 13, 51438, 51438, 407, 746, 411, 14722, 264, 5893, 1674, 295, 264, 4846, 51566, 51566, 538, 472, 295, 264, 3097, 10938, 293, 1320, 309, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13820067048072815, "compression_ratio": 1.9276595744680851, "no_speech_prob": 7.76655815570848e-06}, {"id": 2123, "seek": 615048, "start": 6154.32, "end": 6155.719999999999, "text": " if you want.", "tokens": [50364, 407, 337, 1184, 3097, 6889, 11, 291, 1884, 257, 34090, 11, 257, 4985, 11, 50556, 50556, 498, 291, 528, 13, 50626, 50626, 400, 264, 3090, 295, 341, 4985, 307, 281, 5258, 257, 2416, 5598, 50788, 50788, 498, 264, 4846, 8062, 10676, 472, 295, 264, 3097, 10938, 50964, 50964, 293, 257, 1359, 5598, 498, 309, 1177, 380, 11, 51114, 51114, 420, 264, 661, 636, 926, 13, 51162, 51162, 316, 1359, 5598, 498, 309, 10676, 11, 257, 2416, 5598, 498, 309, 1177, 380, 13, 51292, 51292, 2264, 11, 1177, 380, 534, 1871, 13, 51354, 51354, 583, 309, 575, 281, 312, 2107, 28263, 13, 51438, 51438, 407, 746, 411, 14722, 264, 5893, 1674, 295, 264, 4846, 51566, 51566, 538, 472, 295, 264, 3097, 10938, 293, 1320, 309, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13820067048072815, "compression_ratio": 1.9276595744680851, "no_speech_prob": 7.76655815570848e-06}, {"id": 2124, "seek": 615048, "start": 6155.719999999999, "end": 6158.959999999999, "text": " And the role of this unit is to produce a large output", "tokens": [50364, 407, 337, 1184, 3097, 6889, 11, 291, 1884, 257, 34090, 11, 257, 4985, 11, 50556, 50556, 498, 291, 528, 13, 50626, 50626, 400, 264, 3090, 295, 341, 4985, 307, 281, 5258, 257, 2416, 5598, 50788, 50788, 498, 264, 4846, 8062, 10676, 472, 295, 264, 3097, 10938, 50964, 50964, 293, 257, 1359, 5598, 498, 309, 1177, 380, 11, 51114, 51114, 420, 264, 661, 636, 926, 13, 51162, 51162, 316, 1359, 5598, 498, 309, 10676, 11, 257, 2416, 5598, 498, 309, 1177, 380, 13, 51292, 51292, 2264, 11, 1177, 380, 534, 1871, 13, 51354, 51354, 583, 309, 575, 281, 312, 2107, 28263, 13, 51438, 51438, 407, 746, 411, 14722, 264, 5893, 1674, 295, 264, 4846, 51566, 51566, 538, 472, 295, 264, 3097, 10938, 293, 1320, 309, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13820067048072815, "compression_ratio": 1.9276595744680851, "no_speech_prob": 7.76655815570848e-06}, {"id": 2125, "seek": 615048, "start": 6158.959999999999, "end": 6162.48, "text": " if the input vector matches one of the training samples", "tokens": [50364, 407, 337, 1184, 3097, 6889, 11, 291, 1884, 257, 34090, 11, 257, 4985, 11, 50556, 50556, 498, 291, 528, 13, 50626, 50626, 400, 264, 3090, 295, 341, 4985, 307, 281, 5258, 257, 2416, 5598, 50788, 50788, 498, 264, 4846, 8062, 10676, 472, 295, 264, 3097, 10938, 50964, 50964, 293, 257, 1359, 5598, 498, 309, 1177, 380, 11, 51114, 51114, 420, 264, 661, 636, 926, 13, 51162, 51162, 316, 1359, 5598, 498, 309, 10676, 11, 257, 2416, 5598, 498, 309, 1177, 380, 13, 51292, 51292, 2264, 11, 1177, 380, 534, 1871, 13, 51354, 51354, 583, 309, 575, 281, 312, 2107, 28263, 13, 51438, 51438, 407, 746, 411, 14722, 264, 5893, 1674, 295, 264, 4846, 51566, 51566, 538, 472, 295, 264, 3097, 10938, 293, 1320, 309, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13820067048072815, "compression_ratio": 1.9276595744680851, "no_speech_prob": 7.76655815570848e-06}, {"id": 2126, "seek": 615048, "start": 6162.48, "end": 6165.48, "text": " and a small output if it doesn't,", "tokens": [50364, 407, 337, 1184, 3097, 6889, 11, 291, 1884, 257, 34090, 11, 257, 4985, 11, 50556, 50556, 498, 291, 528, 13, 50626, 50626, 400, 264, 3090, 295, 341, 4985, 307, 281, 5258, 257, 2416, 5598, 50788, 50788, 498, 264, 4846, 8062, 10676, 472, 295, 264, 3097, 10938, 50964, 50964, 293, 257, 1359, 5598, 498, 309, 1177, 380, 11, 51114, 51114, 420, 264, 661, 636, 926, 13, 51162, 51162, 316, 1359, 5598, 498, 309, 10676, 11, 257, 2416, 5598, 498, 309, 1177, 380, 13, 51292, 51292, 2264, 11, 1177, 380, 534, 1871, 13, 51354, 51354, 583, 309, 575, 281, 312, 2107, 28263, 13, 51438, 51438, 407, 746, 411, 14722, 264, 5893, 1674, 295, 264, 4846, 51566, 51566, 538, 472, 295, 264, 3097, 10938, 293, 1320, 309, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13820067048072815, "compression_ratio": 1.9276595744680851, "no_speech_prob": 7.76655815570848e-06}, {"id": 2127, "seek": 615048, "start": 6165.48, "end": 6166.44, "text": " or the other way around.", "tokens": [50364, 407, 337, 1184, 3097, 6889, 11, 291, 1884, 257, 34090, 11, 257, 4985, 11, 50556, 50556, 498, 291, 528, 13, 50626, 50626, 400, 264, 3090, 295, 341, 4985, 307, 281, 5258, 257, 2416, 5598, 50788, 50788, 498, 264, 4846, 8062, 10676, 472, 295, 264, 3097, 10938, 50964, 50964, 293, 257, 1359, 5598, 498, 309, 1177, 380, 11, 51114, 51114, 420, 264, 661, 636, 926, 13, 51162, 51162, 316, 1359, 5598, 498, 309, 10676, 11, 257, 2416, 5598, 498, 309, 1177, 380, 13, 51292, 51292, 2264, 11, 1177, 380, 534, 1871, 13, 51354, 51354, 583, 309, 575, 281, 312, 2107, 28263, 13, 51438, 51438, 407, 746, 411, 14722, 264, 5893, 1674, 295, 264, 4846, 51566, 51566, 538, 472, 295, 264, 3097, 10938, 293, 1320, 309, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13820067048072815, "compression_ratio": 1.9276595744680851, "no_speech_prob": 7.76655815570848e-06}, {"id": 2128, "seek": 615048, "start": 6166.44, "end": 6169.04, "text": " A small output if it matches, a large output if it doesn't.", "tokens": [50364, 407, 337, 1184, 3097, 6889, 11, 291, 1884, 257, 34090, 11, 257, 4985, 11, 50556, 50556, 498, 291, 528, 13, 50626, 50626, 400, 264, 3090, 295, 341, 4985, 307, 281, 5258, 257, 2416, 5598, 50788, 50788, 498, 264, 4846, 8062, 10676, 472, 295, 264, 3097, 10938, 50964, 50964, 293, 257, 1359, 5598, 498, 309, 1177, 380, 11, 51114, 51114, 420, 264, 661, 636, 926, 13, 51162, 51162, 316, 1359, 5598, 498, 309, 10676, 11, 257, 2416, 5598, 498, 309, 1177, 380, 13, 51292, 51292, 2264, 11, 1177, 380, 534, 1871, 13, 51354, 51354, 583, 309, 575, 281, 312, 2107, 28263, 13, 51438, 51438, 407, 746, 411, 14722, 264, 5893, 1674, 295, 264, 4846, 51566, 51566, 538, 472, 295, 264, 3097, 10938, 293, 1320, 309, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13820067048072815, "compression_ratio": 1.9276595744680851, "no_speech_prob": 7.76655815570848e-06}, {"id": 2129, "seek": 615048, "start": 6169.04, "end": 6170.28, "text": " OK, doesn't really matter.", "tokens": [50364, 407, 337, 1184, 3097, 6889, 11, 291, 1884, 257, 34090, 11, 257, 4985, 11, 50556, 50556, 498, 291, 528, 13, 50626, 50626, 400, 264, 3090, 295, 341, 4985, 307, 281, 5258, 257, 2416, 5598, 50788, 50788, 498, 264, 4846, 8062, 10676, 472, 295, 264, 3097, 10938, 50964, 50964, 293, 257, 1359, 5598, 498, 309, 1177, 380, 11, 51114, 51114, 420, 264, 661, 636, 926, 13, 51162, 51162, 316, 1359, 5598, 498, 309, 10676, 11, 257, 2416, 5598, 498, 309, 1177, 380, 13, 51292, 51292, 2264, 11, 1177, 380, 534, 1871, 13, 51354, 51354, 583, 309, 575, 281, 312, 2107, 28263, 13, 51438, 51438, 407, 746, 411, 14722, 264, 5893, 1674, 295, 264, 4846, 51566, 51566, 538, 472, 295, 264, 3097, 10938, 293, 1320, 309, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13820067048072815, "compression_ratio": 1.9276595744680851, "no_speech_prob": 7.76655815570848e-06}, {"id": 2130, "seek": 615048, "start": 6170.28, "end": 6171.959999999999, "text": " But it has to be nonlinear.", "tokens": [50364, 407, 337, 1184, 3097, 6889, 11, 291, 1884, 257, 34090, 11, 257, 4985, 11, 50556, 50556, 498, 291, 528, 13, 50626, 50626, 400, 264, 3090, 295, 341, 4985, 307, 281, 5258, 257, 2416, 5598, 50788, 50788, 498, 264, 4846, 8062, 10676, 472, 295, 264, 3097, 10938, 50964, 50964, 293, 257, 1359, 5598, 498, 309, 1177, 380, 11, 51114, 51114, 420, 264, 661, 636, 926, 13, 51162, 51162, 316, 1359, 5598, 498, 309, 10676, 11, 257, 2416, 5598, 498, 309, 1177, 380, 13, 51292, 51292, 2264, 11, 1177, 380, 534, 1871, 13, 51354, 51354, 583, 309, 575, 281, 312, 2107, 28263, 13, 51438, 51438, 407, 746, 411, 14722, 264, 5893, 1674, 295, 264, 4846, 51566, 51566, 538, 472, 295, 264, 3097, 10938, 293, 1320, 309, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13820067048072815, "compression_ratio": 1.9276595744680851, "no_speech_prob": 7.76655815570848e-06}, {"id": 2131, "seek": 615048, "start": 6171.959999999999, "end": 6174.5199999999995, "text": " So something like compute the dot product of the input", "tokens": [50364, 407, 337, 1184, 3097, 6889, 11, 291, 1884, 257, 34090, 11, 257, 4985, 11, 50556, 50556, 498, 291, 528, 13, 50626, 50626, 400, 264, 3090, 295, 341, 4985, 307, 281, 5258, 257, 2416, 5598, 50788, 50788, 498, 264, 4846, 8062, 10676, 472, 295, 264, 3097, 10938, 50964, 50964, 293, 257, 1359, 5598, 498, 309, 1177, 380, 11, 51114, 51114, 420, 264, 661, 636, 926, 13, 51162, 51162, 316, 1359, 5598, 498, 309, 10676, 11, 257, 2416, 5598, 498, 309, 1177, 380, 13, 51292, 51292, 2264, 11, 1177, 380, 534, 1871, 13, 51354, 51354, 583, 309, 575, 281, 312, 2107, 28263, 13, 51438, 51438, 407, 746, 411, 14722, 264, 5893, 1674, 295, 264, 4846, 51566, 51566, 538, 472, 295, 264, 3097, 10938, 293, 1320, 309, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13820067048072815, "compression_ratio": 1.9276595744680851, "no_speech_prob": 7.76655815570848e-06}, {"id": 2132, "seek": 615048, "start": 6174.5199999999995, "end": 6176.639999999999, "text": " by one of the training samples and pass it", "tokens": [50364, 407, 337, 1184, 3097, 6889, 11, 291, 1884, 257, 34090, 11, 257, 4985, 11, 50556, 50556, 498, 291, 528, 13, 50626, 50626, 400, 264, 3090, 295, 341, 4985, 307, 281, 5258, 257, 2416, 5598, 50788, 50788, 498, 264, 4846, 8062, 10676, 472, 295, 264, 3097, 10938, 50964, 50964, 293, 257, 1359, 5598, 498, 309, 1177, 380, 11, 51114, 51114, 420, 264, 661, 636, 926, 13, 51162, 51162, 316, 1359, 5598, 498, 309, 10676, 11, 257, 2416, 5598, 498, 309, 1177, 380, 13, 51292, 51292, 2264, 11, 1177, 380, 534, 1871, 13, 51354, 51354, 583, 309, 575, 281, 312, 2107, 28263, 13, 51438, 51438, 407, 746, 411, 14722, 264, 5893, 1674, 295, 264, 4846, 51566, 51566, 538, 472, 295, 264, 3097, 10938, 293, 1320, 309, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13820067048072815, "compression_ratio": 1.9276595744680851, "no_speech_prob": 7.76655815570848e-06}, {"id": 2133, "seek": 617664, "start": 6176.64, "end": 6180.96, "text": " through a negative exponential or a square", "tokens": [50364, 807, 257, 3671, 21510, 420, 257, 3732, 50580, 50580, 420, 746, 411, 300, 13, 50692, 50692, 407, 341, 2709, 291, 577, 709, 264, 4846, 8062, 34433, 50910, 50910, 472, 295, 264, 3097, 10938, 13, 50970, 50970, 400, 291, 360, 341, 337, 633, 2167, 3097, 10938, 13, 51164, 51164, 400, 550, 291, 3847, 257, 8213, 1508, 9902, 51252, 51252, 1936, 281, 764, 729, 15743, 382, 4846, 281, 257, 8213, 1508, 9902, 13, 51504, 51504, 509, 14722, 264, 3364, 295, 300, 8213, 1508, 9902, 13, 51636, 51636, 467, 311, 1936, 382, 2199, 382, 300, 13, 51706, 51706, 821, 311, 512, 3890, 2144, 3288, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14796066284179688, "compression_ratio": 1.804255319148936, "no_speech_prob": 3.288677135060425e-06}, {"id": 2134, "seek": 617664, "start": 6180.96, "end": 6183.200000000001, "text": " or something like that.", "tokens": [50364, 807, 257, 3671, 21510, 420, 257, 3732, 50580, 50580, 420, 746, 411, 300, 13, 50692, 50692, 407, 341, 2709, 291, 577, 709, 264, 4846, 8062, 34433, 50910, 50910, 472, 295, 264, 3097, 10938, 13, 50970, 50970, 400, 291, 360, 341, 337, 633, 2167, 3097, 10938, 13, 51164, 51164, 400, 550, 291, 3847, 257, 8213, 1508, 9902, 51252, 51252, 1936, 281, 764, 729, 15743, 382, 4846, 281, 257, 8213, 1508, 9902, 13, 51504, 51504, 509, 14722, 264, 3364, 295, 300, 8213, 1508, 9902, 13, 51636, 51636, 467, 311, 1936, 382, 2199, 382, 300, 13, 51706, 51706, 821, 311, 512, 3890, 2144, 3288, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14796066284179688, "compression_ratio": 1.804255319148936, "no_speech_prob": 3.288677135060425e-06}, {"id": 2135, "seek": 617664, "start": 6183.200000000001, "end": 6187.56, "text": " So this gives you how much the input vector resembles", "tokens": [50364, 807, 257, 3671, 21510, 420, 257, 3732, 50580, 50580, 420, 746, 411, 300, 13, 50692, 50692, 407, 341, 2709, 291, 577, 709, 264, 4846, 8062, 34433, 50910, 50910, 472, 295, 264, 3097, 10938, 13, 50970, 50970, 400, 291, 360, 341, 337, 633, 2167, 3097, 10938, 13, 51164, 51164, 400, 550, 291, 3847, 257, 8213, 1508, 9902, 51252, 51252, 1936, 281, 764, 729, 15743, 382, 4846, 281, 257, 8213, 1508, 9902, 13, 51504, 51504, 509, 14722, 264, 3364, 295, 300, 8213, 1508, 9902, 13, 51636, 51636, 467, 311, 1936, 382, 2199, 382, 300, 13, 51706, 51706, 821, 311, 512, 3890, 2144, 3288, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14796066284179688, "compression_ratio": 1.804255319148936, "no_speech_prob": 3.288677135060425e-06}, {"id": 2136, "seek": 617664, "start": 6187.56, "end": 6188.76, "text": " one of the training samples.", "tokens": [50364, 807, 257, 3671, 21510, 420, 257, 3732, 50580, 50580, 420, 746, 411, 300, 13, 50692, 50692, 407, 341, 2709, 291, 577, 709, 264, 4846, 8062, 34433, 50910, 50910, 472, 295, 264, 3097, 10938, 13, 50970, 50970, 400, 291, 360, 341, 337, 633, 2167, 3097, 10938, 13, 51164, 51164, 400, 550, 291, 3847, 257, 8213, 1508, 9902, 51252, 51252, 1936, 281, 764, 729, 15743, 382, 4846, 281, 257, 8213, 1508, 9902, 13, 51504, 51504, 509, 14722, 264, 3364, 295, 300, 8213, 1508, 9902, 13, 51636, 51636, 467, 311, 1936, 382, 2199, 382, 300, 13, 51706, 51706, 821, 311, 512, 3890, 2144, 3288, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14796066284179688, "compression_ratio": 1.804255319148936, "no_speech_prob": 3.288677135060425e-06}, {"id": 2137, "seek": 617664, "start": 6188.76, "end": 6192.64, "text": " And you do this for every single training samples.", "tokens": [50364, 807, 257, 3671, 21510, 420, 257, 3732, 50580, 50580, 420, 746, 411, 300, 13, 50692, 50692, 407, 341, 2709, 291, 577, 709, 264, 4846, 8062, 34433, 50910, 50910, 472, 295, 264, 3097, 10938, 13, 50970, 50970, 400, 291, 360, 341, 337, 633, 2167, 3097, 10938, 13, 51164, 51164, 400, 550, 291, 3847, 257, 8213, 1508, 9902, 51252, 51252, 1936, 281, 764, 729, 15743, 382, 4846, 281, 257, 8213, 1508, 9902, 13, 51504, 51504, 509, 14722, 264, 3364, 295, 300, 8213, 1508, 9902, 13, 51636, 51636, 467, 311, 1936, 382, 2199, 382, 300, 13, 51706, 51706, 821, 311, 512, 3890, 2144, 3288, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14796066284179688, "compression_ratio": 1.804255319148936, "no_speech_prob": 3.288677135060425e-06}, {"id": 2138, "seek": 617664, "start": 6192.64, "end": 6194.400000000001, "text": " And then you train a linear classifier", "tokens": [50364, 807, 257, 3671, 21510, 420, 257, 3732, 50580, 50580, 420, 746, 411, 300, 13, 50692, 50692, 407, 341, 2709, 291, 577, 709, 264, 4846, 8062, 34433, 50910, 50910, 472, 295, 264, 3097, 10938, 13, 50970, 50970, 400, 291, 360, 341, 337, 633, 2167, 3097, 10938, 13, 51164, 51164, 400, 550, 291, 3847, 257, 8213, 1508, 9902, 51252, 51252, 1936, 281, 764, 729, 15743, 382, 4846, 281, 257, 8213, 1508, 9902, 13, 51504, 51504, 509, 14722, 264, 3364, 295, 300, 8213, 1508, 9902, 13, 51636, 51636, 467, 311, 1936, 382, 2199, 382, 300, 13, 51706, 51706, 821, 311, 512, 3890, 2144, 3288, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14796066284179688, "compression_ratio": 1.804255319148936, "no_speech_prob": 3.288677135060425e-06}, {"id": 2139, "seek": 617664, "start": 6194.400000000001, "end": 6199.4400000000005, "text": " basically to use those inputs as input to a linear classifier.", "tokens": [50364, 807, 257, 3671, 21510, 420, 257, 3732, 50580, 50580, 420, 746, 411, 300, 13, 50692, 50692, 407, 341, 2709, 291, 577, 709, 264, 4846, 8062, 34433, 50910, 50910, 472, 295, 264, 3097, 10938, 13, 50970, 50970, 400, 291, 360, 341, 337, 633, 2167, 3097, 10938, 13, 51164, 51164, 400, 550, 291, 3847, 257, 8213, 1508, 9902, 51252, 51252, 1936, 281, 764, 729, 15743, 382, 4846, 281, 257, 8213, 1508, 9902, 13, 51504, 51504, 509, 14722, 264, 3364, 295, 300, 8213, 1508, 9902, 13, 51636, 51636, 467, 311, 1936, 382, 2199, 382, 300, 13, 51706, 51706, 821, 311, 512, 3890, 2144, 3288, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14796066284179688, "compression_ratio": 1.804255319148936, "no_speech_prob": 3.288677135060425e-06}, {"id": 2140, "seek": 617664, "start": 6199.4400000000005, "end": 6202.08, "text": " You compute the weight of that linear classifier.", "tokens": [50364, 807, 257, 3671, 21510, 420, 257, 3732, 50580, 50580, 420, 746, 411, 300, 13, 50692, 50692, 407, 341, 2709, 291, 577, 709, 264, 4846, 8062, 34433, 50910, 50910, 472, 295, 264, 3097, 10938, 13, 50970, 50970, 400, 291, 360, 341, 337, 633, 2167, 3097, 10938, 13, 51164, 51164, 400, 550, 291, 3847, 257, 8213, 1508, 9902, 51252, 51252, 1936, 281, 764, 729, 15743, 382, 4846, 281, 257, 8213, 1508, 9902, 13, 51504, 51504, 509, 14722, 264, 3364, 295, 300, 8213, 1508, 9902, 13, 51636, 51636, 467, 311, 1936, 382, 2199, 382, 300, 13, 51706, 51706, 821, 311, 512, 3890, 2144, 3288, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14796066284179688, "compression_ratio": 1.804255319148936, "no_speech_prob": 3.288677135060425e-06}, {"id": 2141, "seek": 617664, "start": 6202.08, "end": 6203.4800000000005, "text": " It's basically as simple as that.", "tokens": [50364, 807, 257, 3671, 21510, 420, 257, 3732, 50580, 50580, 420, 746, 411, 300, 13, 50692, 50692, 407, 341, 2709, 291, 577, 709, 264, 4846, 8062, 34433, 50910, 50910, 472, 295, 264, 3097, 10938, 13, 50970, 50970, 400, 291, 360, 341, 337, 633, 2167, 3097, 10938, 13, 51164, 51164, 400, 550, 291, 3847, 257, 8213, 1508, 9902, 51252, 51252, 1936, 281, 764, 729, 15743, 382, 4846, 281, 257, 8213, 1508, 9902, 13, 51504, 51504, 509, 14722, 264, 3364, 295, 300, 8213, 1508, 9902, 13, 51636, 51636, 467, 311, 1936, 382, 2199, 382, 300, 13, 51706, 51706, 821, 311, 512, 3890, 2144, 3288, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14796066284179688, "compression_ratio": 1.804255319148936, "no_speech_prob": 3.288677135060425e-06}, {"id": 2142, "seek": 617664, "start": 6203.4800000000005, "end": 6205.84, "text": " There's some regularization involved.", "tokens": [50364, 807, 257, 3671, 21510, 420, 257, 3732, 50580, 50580, 420, 746, 411, 300, 13, 50692, 50692, 407, 341, 2709, 291, 577, 709, 264, 4846, 8062, 34433, 50910, 50910, 472, 295, 264, 3097, 10938, 13, 50970, 50970, 400, 291, 360, 341, 337, 633, 2167, 3097, 10938, 13, 51164, 51164, 400, 550, 291, 3847, 257, 8213, 1508, 9902, 51252, 51252, 1936, 281, 764, 729, 15743, 382, 4846, 281, 257, 8213, 1508, 9902, 13, 51504, 51504, 509, 14722, 264, 3364, 295, 300, 8213, 1508, 9902, 13, 51636, 51636, 467, 311, 1936, 382, 2199, 382, 300, 13, 51706, 51706, 821, 311, 512, 3890, 2144, 3288, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14796066284179688, "compression_ratio": 1.804255319148936, "no_speech_prob": 3.288677135060425e-06}, {"id": 2143, "seek": 620584, "start": 6205.84, "end": 6207.72, "text": " So essentially, it's kind of a lookup table.", "tokens": [50364, 407, 4476, 11, 309, 311, 733, 295, 257, 574, 1010, 3199, 13, 50458, 50458, 509, 362, 428, 2302, 3097, 992, 50608, 50608, 382, 2793, 294, 428, 22027, 11, 498, 291, 50868, 50868, 528, 11, 420, 6815, 294, 428, 700, 4583, 13, 50950, 50950, 400, 436, 1184, 13330, 577, 1998, 264, 2190, 4846, 51106, 51106, 8062, 307, 281, 552, 13, 51180, 51180, 407, 291, 483, 512, 3036, 295, 689, 264, 4846, 8062, 307, 51318, 51318, 538, 1936, 1419, 264, 4972, 2535, 281, 439, 51434, 51434, 295, 264, 3097, 10938, 13, 51500, 51500, 400, 550, 1228, 257, 2199, 8213, 6916, 11, 51586, 51586, 291, 393, 2573, 484, 437, 311, 264, 3006, 1867, 13, 51728, 51728, 639, 1985, 534, 731, 337, 2295, 18795, 2740, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1319004845997644, "compression_ratio": 1.6933797909407666, "no_speech_prob": 6.7478740675142035e-06}, {"id": 2144, "seek": 620584, "start": 6207.72, "end": 6210.72, "text": " You have your entire training set", "tokens": [50364, 407, 4476, 11, 309, 311, 733, 295, 257, 574, 1010, 3199, 13, 50458, 50458, 509, 362, 428, 2302, 3097, 992, 50608, 50608, 382, 2793, 294, 428, 22027, 11, 498, 291, 50868, 50868, 528, 11, 420, 6815, 294, 428, 700, 4583, 13, 50950, 50950, 400, 436, 1184, 13330, 577, 1998, 264, 2190, 4846, 51106, 51106, 8062, 307, 281, 552, 13, 51180, 51180, 407, 291, 483, 512, 3036, 295, 689, 264, 4846, 8062, 307, 51318, 51318, 538, 1936, 1419, 264, 4972, 2535, 281, 439, 51434, 51434, 295, 264, 3097, 10938, 13, 51500, 51500, 400, 550, 1228, 257, 2199, 8213, 6916, 11, 51586, 51586, 291, 393, 2573, 484, 437, 311, 264, 3006, 1867, 13, 51728, 51728, 639, 1985, 534, 731, 337, 2295, 18795, 2740, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1319004845997644, "compression_ratio": 1.6933797909407666, "no_speech_prob": 6.7478740675142035e-06}, {"id": 2145, "seek": 620584, "start": 6210.72, "end": 6215.92, "text": " as points in your neurons, if you", "tokens": [50364, 407, 4476, 11, 309, 311, 733, 295, 257, 574, 1010, 3199, 13, 50458, 50458, 509, 362, 428, 2302, 3097, 992, 50608, 50608, 382, 2793, 294, 428, 22027, 11, 498, 291, 50868, 50868, 528, 11, 420, 6815, 294, 428, 700, 4583, 13, 50950, 50950, 400, 436, 1184, 13330, 577, 1998, 264, 2190, 4846, 51106, 51106, 8062, 307, 281, 552, 13, 51180, 51180, 407, 291, 483, 512, 3036, 295, 689, 264, 4846, 8062, 307, 51318, 51318, 538, 1936, 1419, 264, 4972, 2535, 281, 439, 51434, 51434, 295, 264, 3097, 10938, 13, 51500, 51500, 400, 550, 1228, 257, 2199, 8213, 6916, 11, 51586, 51586, 291, 393, 2573, 484, 437, 311, 264, 3006, 1867, 13, 51728, 51728, 639, 1985, 534, 731, 337, 2295, 18795, 2740, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1319004845997644, "compression_ratio": 1.6933797909407666, "no_speech_prob": 6.7478740675142035e-06}, {"id": 2146, "seek": 620584, "start": 6215.92, "end": 6217.56, "text": " want, or units in your first layer.", "tokens": [50364, 407, 4476, 11, 309, 311, 733, 295, 257, 574, 1010, 3199, 13, 50458, 50458, 509, 362, 428, 2302, 3097, 992, 50608, 50608, 382, 2793, 294, 428, 22027, 11, 498, 291, 50868, 50868, 528, 11, 420, 6815, 294, 428, 700, 4583, 13, 50950, 50950, 400, 436, 1184, 13330, 577, 1998, 264, 2190, 4846, 51106, 51106, 8062, 307, 281, 552, 13, 51180, 51180, 407, 291, 483, 512, 3036, 295, 689, 264, 4846, 8062, 307, 51318, 51318, 538, 1936, 1419, 264, 4972, 2535, 281, 439, 51434, 51434, 295, 264, 3097, 10938, 13, 51500, 51500, 400, 550, 1228, 257, 2199, 8213, 6916, 11, 51586, 51586, 291, 393, 2573, 484, 437, 311, 264, 3006, 1867, 13, 51728, 51728, 639, 1985, 534, 731, 337, 2295, 18795, 2740, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1319004845997644, "compression_ratio": 1.6933797909407666, "no_speech_prob": 6.7478740675142035e-06}, {"id": 2147, "seek": 620584, "start": 6217.56, "end": 6220.68, "text": " And they each indicate how close the current input", "tokens": [50364, 407, 4476, 11, 309, 311, 733, 295, 257, 574, 1010, 3199, 13, 50458, 50458, 509, 362, 428, 2302, 3097, 992, 50608, 50608, 382, 2793, 294, 428, 22027, 11, 498, 291, 50868, 50868, 528, 11, 420, 6815, 294, 428, 700, 4583, 13, 50950, 50950, 400, 436, 1184, 13330, 577, 1998, 264, 2190, 4846, 51106, 51106, 8062, 307, 281, 552, 13, 51180, 51180, 407, 291, 483, 512, 3036, 295, 689, 264, 4846, 8062, 307, 51318, 51318, 538, 1936, 1419, 264, 4972, 2535, 281, 439, 51434, 51434, 295, 264, 3097, 10938, 13, 51500, 51500, 400, 550, 1228, 257, 2199, 8213, 6916, 11, 51586, 51586, 291, 393, 2573, 484, 437, 311, 264, 3006, 1867, 13, 51728, 51728, 639, 1985, 534, 731, 337, 2295, 18795, 2740, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1319004845997644, "compression_ratio": 1.6933797909407666, "no_speech_prob": 6.7478740675142035e-06}, {"id": 2148, "seek": 620584, "start": 6220.68, "end": 6222.16, "text": " vector is to them.", "tokens": [50364, 407, 4476, 11, 309, 311, 733, 295, 257, 574, 1010, 3199, 13, 50458, 50458, 509, 362, 428, 2302, 3097, 992, 50608, 50608, 382, 2793, 294, 428, 22027, 11, 498, 291, 50868, 50868, 528, 11, 420, 6815, 294, 428, 700, 4583, 13, 50950, 50950, 400, 436, 1184, 13330, 577, 1998, 264, 2190, 4846, 51106, 51106, 8062, 307, 281, 552, 13, 51180, 51180, 407, 291, 483, 512, 3036, 295, 689, 264, 4846, 8062, 307, 51318, 51318, 538, 1936, 1419, 264, 4972, 2535, 281, 439, 51434, 51434, 295, 264, 3097, 10938, 13, 51500, 51500, 400, 550, 1228, 257, 2199, 8213, 6916, 11, 51586, 51586, 291, 393, 2573, 484, 437, 311, 264, 3006, 1867, 13, 51728, 51728, 639, 1985, 534, 731, 337, 2295, 18795, 2740, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1319004845997644, "compression_ratio": 1.6933797909407666, "no_speech_prob": 6.7478740675142035e-06}, {"id": 2149, "seek": 620584, "start": 6222.16, "end": 6224.92, "text": " So you get some picture of where the input vector is", "tokens": [50364, 407, 4476, 11, 309, 311, 733, 295, 257, 574, 1010, 3199, 13, 50458, 50458, 509, 362, 428, 2302, 3097, 992, 50608, 50608, 382, 2793, 294, 428, 22027, 11, 498, 291, 50868, 50868, 528, 11, 420, 6815, 294, 428, 700, 4583, 13, 50950, 50950, 400, 436, 1184, 13330, 577, 1998, 264, 2190, 4846, 51106, 51106, 8062, 307, 281, 552, 13, 51180, 51180, 407, 291, 483, 512, 3036, 295, 689, 264, 4846, 8062, 307, 51318, 51318, 538, 1936, 1419, 264, 4972, 2535, 281, 439, 51434, 51434, 295, 264, 3097, 10938, 13, 51500, 51500, 400, 550, 1228, 257, 2199, 8213, 6916, 11, 51586, 51586, 291, 393, 2573, 484, 437, 311, 264, 3006, 1867, 13, 51728, 51728, 639, 1985, 534, 731, 337, 2295, 18795, 2740, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1319004845997644, "compression_ratio": 1.6933797909407666, "no_speech_prob": 6.7478740675142035e-06}, {"id": 2150, "seek": 620584, "start": 6224.92, "end": 6227.24, "text": " by basically having the relative position to all", "tokens": [50364, 407, 4476, 11, 309, 311, 733, 295, 257, 574, 1010, 3199, 13, 50458, 50458, 509, 362, 428, 2302, 3097, 992, 50608, 50608, 382, 2793, 294, 428, 22027, 11, 498, 291, 50868, 50868, 528, 11, 420, 6815, 294, 428, 700, 4583, 13, 50950, 50950, 400, 436, 1184, 13330, 577, 1998, 264, 2190, 4846, 51106, 51106, 8062, 307, 281, 552, 13, 51180, 51180, 407, 291, 483, 512, 3036, 295, 689, 264, 4846, 8062, 307, 51318, 51318, 538, 1936, 1419, 264, 4972, 2535, 281, 439, 51434, 51434, 295, 264, 3097, 10938, 13, 51500, 51500, 400, 550, 1228, 257, 2199, 8213, 6916, 11, 51586, 51586, 291, 393, 2573, 484, 437, 311, 264, 3006, 1867, 13, 51728, 51728, 639, 1985, 534, 731, 337, 2295, 18795, 2740, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1319004845997644, "compression_ratio": 1.6933797909407666, "no_speech_prob": 6.7478740675142035e-06}, {"id": 2151, "seek": 620584, "start": 6227.24, "end": 6228.56, "text": " of the training samples.", "tokens": [50364, 407, 4476, 11, 309, 311, 733, 295, 257, 574, 1010, 3199, 13, 50458, 50458, 509, 362, 428, 2302, 3097, 992, 50608, 50608, 382, 2793, 294, 428, 22027, 11, 498, 291, 50868, 50868, 528, 11, 420, 6815, 294, 428, 700, 4583, 13, 50950, 50950, 400, 436, 1184, 13330, 577, 1998, 264, 2190, 4846, 51106, 51106, 8062, 307, 281, 552, 13, 51180, 51180, 407, 291, 483, 512, 3036, 295, 689, 264, 4846, 8062, 307, 51318, 51318, 538, 1936, 1419, 264, 4972, 2535, 281, 439, 51434, 51434, 295, 264, 3097, 10938, 13, 51500, 51500, 400, 550, 1228, 257, 2199, 8213, 6916, 11, 51586, 51586, 291, 393, 2573, 484, 437, 311, 264, 3006, 1867, 13, 51728, 51728, 639, 1985, 534, 731, 337, 2295, 18795, 2740, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1319004845997644, "compression_ratio": 1.6933797909407666, "no_speech_prob": 6.7478740675142035e-06}, {"id": 2152, "seek": 620584, "start": 6228.56, "end": 6230.28, "text": " And then using a simple linear operation,", "tokens": [50364, 407, 4476, 11, 309, 311, 733, 295, 257, 574, 1010, 3199, 13, 50458, 50458, 509, 362, 428, 2302, 3097, 992, 50608, 50608, 382, 2793, 294, 428, 22027, 11, 498, 291, 50868, 50868, 528, 11, 420, 6815, 294, 428, 700, 4583, 13, 50950, 50950, 400, 436, 1184, 13330, 577, 1998, 264, 2190, 4846, 51106, 51106, 8062, 307, 281, 552, 13, 51180, 51180, 407, 291, 483, 512, 3036, 295, 689, 264, 4846, 8062, 307, 51318, 51318, 538, 1936, 1419, 264, 4972, 2535, 281, 439, 51434, 51434, 295, 264, 3097, 10938, 13, 51500, 51500, 400, 550, 1228, 257, 2199, 8213, 6916, 11, 51586, 51586, 291, 393, 2573, 484, 437, 311, 264, 3006, 1867, 13, 51728, 51728, 639, 1985, 534, 731, 337, 2295, 18795, 2740, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1319004845997644, "compression_ratio": 1.6933797909407666, "no_speech_prob": 6.7478740675142035e-06}, {"id": 2153, "seek": 620584, "start": 6230.28, "end": 6233.12, "text": " you can figure out what's the correct answer.", "tokens": [50364, 407, 4476, 11, 309, 311, 733, 295, 257, 574, 1010, 3199, 13, 50458, 50458, 509, 362, 428, 2302, 3097, 992, 50608, 50608, 382, 2793, 294, 428, 22027, 11, 498, 291, 50868, 50868, 528, 11, 420, 6815, 294, 428, 700, 4583, 13, 50950, 50950, 400, 436, 1184, 13330, 577, 1998, 264, 2190, 4846, 51106, 51106, 8062, 307, 281, 552, 13, 51180, 51180, 407, 291, 483, 512, 3036, 295, 689, 264, 4846, 8062, 307, 51318, 51318, 538, 1936, 1419, 264, 4972, 2535, 281, 439, 51434, 51434, 295, 264, 3097, 10938, 13, 51500, 51500, 400, 550, 1228, 257, 2199, 8213, 6916, 11, 51586, 51586, 291, 393, 2573, 484, 437, 311, 264, 3006, 1867, 13, 51728, 51728, 639, 1985, 534, 731, 337, 2295, 18795, 2740, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1319004845997644, "compression_ratio": 1.6933797909407666, "no_speech_prob": 6.7478740675142035e-06}, {"id": 2154, "seek": 620584, "start": 6233.12, "end": 6235.68, "text": " This works really well for low dimensional problems,", "tokens": [50364, 407, 4476, 11, 309, 311, 733, 295, 257, 574, 1010, 3199, 13, 50458, 50458, 509, 362, 428, 2302, 3097, 992, 50608, 50608, 382, 2793, 294, 428, 22027, 11, 498, 291, 50868, 50868, 528, 11, 420, 6815, 294, 428, 700, 4583, 13, 50950, 50950, 400, 436, 1184, 13330, 577, 1998, 264, 2190, 4846, 51106, 51106, 8062, 307, 281, 552, 13, 51180, 51180, 407, 291, 483, 512, 3036, 295, 689, 264, 4846, 8062, 307, 51318, 51318, 538, 1936, 1419, 264, 4972, 2535, 281, 439, 51434, 51434, 295, 264, 3097, 10938, 13, 51500, 51500, 400, 550, 1228, 257, 2199, 8213, 6916, 11, 51586, 51586, 291, 393, 2573, 484, 437, 311, 264, 3006, 1867, 13, 51728, 51728, 639, 1985, 534, 731, 337, 2295, 18795, 2740, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1319004845997644, "compression_ratio": 1.6933797909407666, "no_speech_prob": 6.7478740675142035e-06}, {"id": 2155, "seek": 623568, "start": 6235.68, "end": 6237.96, "text": " the small number of training samples.", "tokens": [50364, 264, 1359, 1230, 295, 3097, 10938, 13, 50478, 50478, 583, 291, 434, 406, 516, 281, 360, 3820, 5201, 365, 309, 11, 50580, 50580, 412, 1935, 406, 498, 2031, 311, 366, 18668, 11, 570, 309, 311, 1936, 50850, 50850, 12379, 14324, 13, 50900, 51022, 823, 510, 307, 257, 588, 1880, 1186, 13, 51138, 51138, 467, 311, 264, 1186, 300, 498, 291, 1322, 257, 732, 4583, 18161, 2533, 51336, 51336, 322, 341, 2316, 11, 370, 718, 311, 584, 257, 732, 4583, 18161, 2533, 11, 51490, 51490, 291, 362, 364, 4846, 4583, 11, 257, 7633, 4583, 11, 51634, 51634, 293, 406, 1608, 5489, 264, 2744, 11, 293, 257, 2167, 5598, 4985, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.19151333159050055, "compression_ratio": 1.651639344262295, "no_speech_prob": 1.3006622793909628e-05}, {"id": 2156, "seek": 623568, "start": 6237.96, "end": 6240.0, "text": " But you're not going to do computer vision with it,", "tokens": [50364, 264, 1359, 1230, 295, 3097, 10938, 13, 50478, 50478, 583, 291, 434, 406, 516, 281, 360, 3820, 5201, 365, 309, 11, 50580, 50580, 412, 1935, 406, 498, 2031, 311, 366, 18668, 11, 570, 309, 311, 1936, 50850, 50850, 12379, 14324, 13, 50900, 51022, 823, 510, 307, 257, 588, 1880, 1186, 13, 51138, 51138, 467, 311, 264, 1186, 300, 498, 291, 1322, 257, 732, 4583, 18161, 2533, 51336, 51336, 322, 341, 2316, 11, 370, 718, 311, 584, 257, 732, 4583, 18161, 2533, 11, 51490, 51490, 291, 362, 364, 4846, 4583, 11, 257, 7633, 4583, 11, 51634, 51634, 293, 406, 1608, 5489, 264, 2744, 11, 293, 257, 2167, 5598, 4985, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.19151333159050055, "compression_ratio": 1.651639344262295, "no_speech_prob": 1.3006622793909628e-05}, {"id": 2157, "seek": 623568, "start": 6240.0, "end": 6245.400000000001, "text": " at least not if x's are pixels, because it's basically", "tokens": [50364, 264, 1359, 1230, 295, 3097, 10938, 13, 50478, 50478, 583, 291, 434, 406, 516, 281, 360, 3820, 5201, 365, 309, 11, 50580, 50580, 412, 1935, 406, 498, 2031, 311, 366, 18668, 11, 570, 309, 311, 1936, 50850, 50850, 12379, 14324, 13, 50900, 51022, 823, 510, 307, 257, 588, 1880, 1186, 13, 51138, 51138, 467, 311, 264, 1186, 300, 498, 291, 1322, 257, 732, 4583, 18161, 2533, 51336, 51336, 322, 341, 2316, 11, 370, 718, 311, 584, 257, 732, 4583, 18161, 2533, 11, 51490, 51490, 291, 362, 364, 4846, 4583, 11, 257, 7633, 4583, 11, 51634, 51634, 293, 406, 1608, 5489, 264, 2744, 11, 293, 257, 2167, 5598, 4985, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.19151333159050055, "compression_ratio": 1.651639344262295, "no_speech_prob": 1.3006622793909628e-05}, {"id": 2158, "seek": 623568, "start": 6245.400000000001, "end": 6246.400000000001, "text": " template matching.", "tokens": [50364, 264, 1359, 1230, 295, 3097, 10938, 13, 50478, 50478, 583, 291, 434, 406, 516, 281, 360, 3820, 5201, 365, 309, 11, 50580, 50580, 412, 1935, 406, 498, 2031, 311, 366, 18668, 11, 570, 309, 311, 1936, 50850, 50850, 12379, 14324, 13, 50900, 51022, 823, 510, 307, 257, 588, 1880, 1186, 13, 51138, 51138, 467, 311, 264, 1186, 300, 498, 291, 1322, 257, 732, 4583, 18161, 2533, 51336, 51336, 322, 341, 2316, 11, 370, 718, 311, 584, 257, 732, 4583, 18161, 2533, 11, 51490, 51490, 291, 362, 364, 4846, 4583, 11, 257, 7633, 4583, 11, 51634, 51634, 293, 406, 1608, 5489, 264, 2744, 11, 293, 257, 2167, 5598, 4985, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.19151333159050055, "compression_ratio": 1.651639344262295, "no_speech_prob": 1.3006622793909628e-05}, {"id": 2159, "seek": 623568, "start": 6248.84, "end": 6251.16, "text": " Now here is a very interesting fact.", "tokens": [50364, 264, 1359, 1230, 295, 3097, 10938, 13, 50478, 50478, 583, 291, 434, 406, 516, 281, 360, 3820, 5201, 365, 309, 11, 50580, 50580, 412, 1935, 406, 498, 2031, 311, 366, 18668, 11, 570, 309, 311, 1936, 50850, 50850, 12379, 14324, 13, 50900, 51022, 823, 510, 307, 257, 588, 1880, 1186, 13, 51138, 51138, 467, 311, 264, 1186, 300, 498, 291, 1322, 257, 732, 4583, 18161, 2533, 51336, 51336, 322, 341, 2316, 11, 370, 718, 311, 584, 257, 732, 4583, 18161, 2533, 11, 51490, 51490, 291, 362, 364, 4846, 4583, 11, 257, 7633, 4583, 11, 51634, 51634, 293, 406, 1608, 5489, 264, 2744, 11, 293, 257, 2167, 5598, 4985, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.19151333159050055, "compression_ratio": 1.651639344262295, "no_speech_prob": 1.3006622793909628e-05}, {"id": 2160, "seek": 623568, "start": 6251.16, "end": 6255.12, "text": " It's the fact that if you build a two layer neural net", "tokens": [50364, 264, 1359, 1230, 295, 3097, 10938, 13, 50478, 50478, 583, 291, 434, 406, 516, 281, 360, 3820, 5201, 365, 309, 11, 50580, 50580, 412, 1935, 406, 498, 2031, 311, 366, 18668, 11, 570, 309, 311, 1936, 50850, 50850, 12379, 14324, 13, 50900, 51022, 823, 510, 307, 257, 588, 1880, 1186, 13, 51138, 51138, 467, 311, 264, 1186, 300, 498, 291, 1322, 257, 732, 4583, 18161, 2533, 51336, 51336, 322, 341, 2316, 11, 370, 718, 311, 584, 257, 732, 4583, 18161, 2533, 11, 51490, 51490, 291, 362, 364, 4846, 4583, 11, 257, 7633, 4583, 11, 51634, 51634, 293, 406, 1608, 5489, 264, 2744, 11, 293, 257, 2167, 5598, 4985, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.19151333159050055, "compression_ratio": 1.651639344262295, "no_speech_prob": 1.3006622793909628e-05}, {"id": 2161, "seek": 623568, "start": 6255.12, "end": 6258.200000000001, "text": " on this model, so let's say a two layer neural net,", "tokens": [50364, 264, 1359, 1230, 295, 3097, 10938, 13, 50478, 50478, 583, 291, 434, 406, 516, 281, 360, 3820, 5201, 365, 309, 11, 50580, 50580, 412, 1935, 406, 498, 2031, 311, 366, 18668, 11, 570, 309, 311, 1936, 50850, 50850, 12379, 14324, 13, 50900, 51022, 823, 510, 307, 257, 588, 1880, 1186, 13, 51138, 51138, 467, 311, 264, 1186, 300, 498, 291, 1322, 257, 732, 4583, 18161, 2533, 51336, 51336, 322, 341, 2316, 11, 370, 718, 311, 584, 257, 732, 4583, 18161, 2533, 11, 51490, 51490, 291, 362, 364, 4846, 4583, 11, 257, 7633, 4583, 11, 51634, 51634, 293, 406, 1608, 5489, 264, 2744, 11, 293, 257, 2167, 5598, 4985, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.19151333159050055, "compression_ratio": 1.651639344262295, "no_speech_prob": 1.3006622793909628e-05}, {"id": 2162, "seek": 623568, "start": 6258.200000000001, "end": 6261.08, "text": " you have an input layer, a hidden layer,", "tokens": [50364, 264, 1359, 1230, 295, 3097, 10938, 13, 50478, 50478, 583, 291, 434, 406, 516, 281, 360, 3820, 5201, 365, 309, 11, 50580, 50580, 412, 1935, 406, 498, 2031, 311, 366, 18668, 11, 570, 309, 311, 1936, 50850, 50850, 12379, 14324, 13, 50900, 51022, 823, 510, 307, 257, 588, 1880, 1186, 13, 51138, 51138, 467, 311, 264, 1186, 300, 498, 291, 1322, 257, 732, 4583, 18161, 2533, 51336, 51336, 322, 341, 2316, 11, 370, 718, 311, 584, 257, 732, 4583, 18161, 2533, 11, 51490, 51490, 291, 362, 364, 4846, 4583, 11, 257, 7633, 4583, 11, 51634, 51634, 293, 406, 1608, 5489, 264, 2744, 11, 293, 257, 2167, 5598, 4985, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.19151333159050055, "compression_ratio": 1.651639344262295, "no_speech_prob": 1.3006622793909628e-05}, {"id": 2163, "seek": 623568, "start": 6261.08, "end": 6264.320000000001, "text": " and not specifying the size, and a single output unit.", "tokens": [50364, 264, 1359, 1230, 295, 3097, 10938, 13, 50478, 50478, 583, 291, 434, 406, 516, 281, 360, 3820, 5201, 365, 309, 11, 50580, 50580, 412, 1935, 406, 498, 2031, 311, 366, 18668, 11, 570, 309, 311, 1936, 50850, 50850, 12379, 14324, 13, 50900, 51022, 823, 510, 307, 257, 588, 1880, 1186, 13, 51138, 51138, 467, 311, 264, 1186, 300, 498, 291, 1322, 257, 732, 4583, 18161, 2533, 51336, 51336, 322, 341, 2316, 11, 370, 718, 311, 584, 257, 732, 4583, 18161, 2533, 11, 51490, 51490, 291, 362, 364, 4846, 4583, 11, 257, 7633, 4583, 11, 51634, 51634, 293, 406, 1608, 5489, 264, 2744, 11, 293, 257, 2167, 5598, 4985, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.19151333159050055, "compression_ratio": 1.651639344262295, "no_speech_prob": 1.3006622793909628e-05}, {"id": 2164, "seek": 626432, "start": 6264.32, "end": 6266.759999999999, "text": " And you ask, what functions can I", "tokens": [50364, 400, 291, 1029, 11, 437, 6828, 393, 286, 50486, 50486, 30874, 365, 364, 9482, 295, 341, 2010, 30, 50656, 50656, 440, 1867, 307, 11, 291, 393, 30874, 1238, 709, 50754, 50754, 604, 731, 12, 29437, 12865, 2445, 382, 1998, 382, 291, 528, 11, 50912, 50912, 382, 938, 382, 291, 362, 1547, 295, 729, 6815, 294, 264, 2808, 13, 51068, 51068, 407, 341, 307, 257, 20904, 300, 1619, 300, 732, 4583, 18161, 36170, 51268, 51268, 366, 11455, 8542, 3391, 13, 51350, 51350, 467, 1177, 380, 534, 1871, 437, 2107, 28263, 2445, 51450, 51450, 291, 829, 294, 264, 2808, 13, 51556, 51556, 2639, 2107, 28263, 2445, 486, 360, 13, 51656, 51656, 316, 732, 4583, 18161, 2533, 307, 257, 11455, 8542, 1639, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11979076939244424, "compression_ratio": 1.8774703557312253, "no_speech_prob": 1.5445695680682547e-05}, {"id": 2165, "seek": 626432, "start": 6266.759999999999, "end": 6270.16, "text": " approximate with an architecture of this type?", "tokens": [50364, 400, 291, 1029, 11, 437, 6828, 393, 286, 50486, 50486, 30874, 365, 364, 9482, 295, 341, 2010, 30, 50656, 50656, 440, 1867, 307, 11, 291, 393, 30874, 1238, 709, 50754, 50754, 604, 731, 12, 29437, 12865, 2445, 382, 1998, 382, 291, 528, 11, 50912, 50912, 382, 938, 382, 291, 362, 1547, 295, 729, 6815, 294, 264, 2808, 13, 51068, 51068, 407, 341, 307, 257, 20904, 300, 1619, 300, 732, 4583, 18161, 36170, 51268, 51268, 366, 11455, 8542, 3391, 13, 51350, 51350, 467, 1177, 380, 534, 1871, 437, 2107, 28263, 2445, 51450, 51450, 291, 829, 294, 264, 2808, 13, 51556, 51556, 2639, 2107, 28263, 2445, 486, 360, 13, 51656, 51656, 316, 732, 4583, 18161, 2533, 307, 257, 11455, 8542, 1639, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11979076939244424, "compression_ratio": 1.8774703557312253, "no_speech_prob": 1.5445695680682547e-05}, {"id": 2166, "seek": 626432, "start": 6270.16, "end": 6272.12, "text": " The answer is, you can approximate pretty much", "tokens": [50364, 400, 291, 1029, 11, 437, 6828, 393, 286, 50486, 50486, 30874, 365, 364, 9482, 295, 341, 2010, 30, 50656, 50656, 440, 1867, 307, 11, 291, 393, 30874, 1238, 709, 50754, 50754, 604, 731, 12, 29437, 12865, 2445, 382, 1998, 382, 291, 528, 11, 50912, 50912, 382, 938, 382, 291, 362, 1547, 295, 729, 6815, 294, 264, 2808, 13, 51068, 51068, 407, 341, 307, 257, 20904, 300, 1619, 300, 732, 4583, 18161, 36170, 51268, 51268, 366, 11455, 8542, 3391, 13, 51350, 51350, 467, 1177, 380, 534, 1871, 437, 2107, 28263, 2445, 51450, 51450, 291, 829, 294, 264, 2808, 13, 51556, 51556, 2639, 2107, 28263, 2445, 486, 360, 13, 51656, 51656, 316, 732, 4583, 18161, 2533, 307, 257, 11455, 8542, 1639, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11979076939244424, "compression_ratio": 1.8774703557312253, "no_speech_prob": 1.5445695680682547e-05}, {"id": 2167, "seek": 626432, "start": 6272.12, "end": 6275.28, "text": " any well-behaved function as close as you want,", "tokens": [50364, 400, 291, 1029, 11, 437, 6828, 393, 286, 50486, 50486, 30874, 365, 364, 9482, 295, 341, 2010, 30, 50656, 50656, 440, 1867, 307, 11, 291, 393, 30874, 1238, 709, 50754, 50754, 604, 731, 12, 29437, 12865, 2445, 382, 1998, 382, 291, 528, 11, 50912, 50912, 382, 938, 382, 291, 362, 1547, 295, 729, 6815, 294, 264, 2808, 13, 51068, 51068, 407, 341, 307, 257, 20904, 300, 1619, 300, 732, 4583, 18161, 36170, 51268, 51268, 366, 11455, 8542, 3391, 13, 51350, 51350, 467, 1177, 380, 534, 1871, 437, 2107, 28263, 2445, 51450, 51450, 291, 829, 294, 264, 2808, 13, 51556, 51556, 2639, 2107, 28263, 2445, 486, 360, 13, 51656, 51656, 316, 732, 4583, 18161, 2533, 307, 257, 11455, 8542, 1639, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11979076939244424, "compression_ratio": 1.8774703557312253, "no_speech_prob": 1.5445695680682547e-05}, {"id": 2168, "seek": 626432, "start": 6275.28, "end": 6278.4, "text": " as long as you have enough of those units in the middle.", "tokens": [50364, 400, 291, 1029, 11, 437, 6828, 393, 286, 50486, 50486, 30874, 365, 364, 9482, 295, 341, 2010, 30, 50656, 50656, 440, 1867, 307, 11, 291, 393, 30874, 1238, 709, 50754, 50754, 604, 731, 12, 29437, 12865, 2445, 382, 1998, 382, 291, 528, 11, 50912, 50912, 382, 938, 382, 291, 362, 1547, 295, 729, 6815, 294, 264, 2808, 13, 51068, 51068, 407, 341, 307, 257, 20904, 300, 1619, 300, 732, 4583, 18161, 36170, 51268, 51268, 366, 11455, 8542, 3391, 13, 51350, 51350, 467, 1177, 380, 534, 1871, 437, 2107, 28263, 2445, 51450, 51450, 291, 829, 294, 264, 2808, 13, 51556, 51556, 2639, 2107, 28263, 2445, 486, 360, 13, 51656, 51656, 316, 732, 4583, 18161, 2533, 307, 257, 11455, 8542, 1639, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11979076939244424, "compression_ratio": 1.8774703557312253, "no_speech_prob": 1.5445695680682547e-05}, {"id": 2169, "seek": 626432, "start": 6278.4, "end": 6282.4, "text": " So this is a theorem that says that two layer neural nets", "tokens": [50364, 400, 291, 1029, 11, 437, 6828, 393, 286, 50486, 50486, 30874, 365, 364, 9482, 295, 341, 2010, 30, 50656, 50656, 440, 1867, 307, 11, 291, 393, 30874, 1238, 709, 50754, 50754, 604, 731, 12, 29437, 12865, 2445, 382, 1998, 382, 291, 528, 11, 50912, 50912, 382, 938, 382, 291, 362, 1547, 295, 729, 6815, 294, 264, 2808, 13, 51068, 51068, 407, 341, 307, 257, 20904, 300, 1619, 300, 732, 4583, 18161, 36170, 51268, 51268, 366, 11455, 8542, 3391, 13, 51350, 51350, 467, 1177, 380, 534, 1871, 437, 2107, 28263, 2445, 51450, 51450, 291, 829, 294, 264, 2808, 13, 51556, 51556, 2639, 2107, 28263, 2445, 486, 360, 13, 51656, 51656, 316, 732, 4583, 18161, 2533, 307, 257, 11455, 8542, 1639, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11979076939244424, "compression_ratio": 1.8774703557312253, "no_speech_prob": 1.5445695680682547e-05}, {"id": 2170, "seek": 626432, "start": 6282.4, "end": 6284.04, "text": " are universal approximators.", "tokens": [50364, 400, 291, 1029, 11, 437, 6828, 393, 286, 50486, 50486, 30874, 365, 364, 9482, 295, 341, 2010, 30, 50656, 50656, 440, 1867, 307, 11, 291, 393, 30874, 1238, 709, 50754, 50754, 604, 731, 12, 29437, 12865, 2445, 382, 1998, 382, 291, 528, 11, 50912, 50912, 382, 938, 382, 291, 362, 1547, 295, 729, 6815, 294, 264, 2808, 13, 51068, 51068, 407, 341, 307, 257, 20904, 300, 1619, 300, 732, 4583, 18161, 36170, 51268, 51268, 366, 11455, 8542, 3391, 13, 51350, 51350, 467, 1177, 380, 534, 1871, 437, 2107, 28263, 2445, 51450, 51450, 291, 829, 294, 264, 2808, 13, 51556, 51556, 2639, 2107, 28263, 2445, 486, 360, 13, 51656, 51656, 316, 732, 4583, 18161, 2533, 307, 257, 11455, 8542, 1639, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11979076939244424, "compression_ratio": 1.8774703557312253, "no_speech_prob": 1.5445695680682547e-05}, {"id": 2171, "seek": 626432, "start": 6284.04, "end": 6286.04, "text": " It doesn't really matter what nonlinear function", "tokens": [50364, 400, 291, 1029, 11, 437, 6828, 393, 286, 50486, 50486, 30874, 365, 364, 9482, 295, 341, 2010, 30, 50656, 50656, 440, 1867, 307, 11, 291, 393, 30874, 1238, 709, 50754, 50754, 604, 731, 12, 29437, 12865, 2445, 382, 1998, 382, 291, 528, 11, 50912, 50912, 382, 938, 382, 291, 362, 1547, 295, 729, 6815, 294, 264, 2808, 13, 51068, 51068, 407, 341, 307, 257, 20904, 300, 1619, 300, 732, 4583, 18161, 36170, 51268, 51268, 366, 11455, 8542, 3391, 13, 51350, 51350, 467, 1177, 380, 534, 1871, 437, 2107, 28263, 2445, 51450, 51450, 291, 829, 294, 264, 2808, 13, 51556, 51556, 2639, 2107, 28263, 2445, 486, 360, 13, 51656, 51656, 316, 732, 4583, 18161, 2533, 307, 257, 11455, 8542, 1639, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11979076939244424, "compression_ratio": 1.8774703557312253, "no_speech_prob": 1.5445695680682547e-05}, {"id": 2172, "seek": 626432, "start": 6286.04, "end": 6288.16, "text": " you put in the middle.", "tokens": [50364, 400, 291, 1029, 11, 437, 6828, 393, 286, 50486, 50486, 30874, 365, 364, 9482, 295, 341, 2010, 30, 50656, 50656, 440, 1867, 307, 11, 291, 393, 30874, 1238, 709, 50754, 50754, 604, 731, 12, 29437, 12865, 2445, 382, 1998, 382, 291, 528, 11, 50912, 50912, 382, 938, 382, 291, 362, 1547, 295, 729, 6815, 294, 264, 2808, 13, 51068, 51068, 407, 341, 307, 257, 20904, 300, 1619, 300, 732, 4583, 18161, 36170, 51268, 51268, 366, 11455, 8542, 3391, 13, 51350, 51350, 467, 1177, 380, 534, 1871, 437, 2107, 28263, 2445, 51450, 51450, 291, 829, 294, 264, 2808, 13, 51556, 51556, 2639, 2107, 28263, 2445, 486, 360, 13, 51656, 51656, 316, 732, 4583, 18161, 2533, 307, 257, 11455, 8542, 1639, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11979076939244424, "compression_ratio": 1.8774703557312253, "no_speech_prob": 1.5445695680682547e-05}, {"id": 2173, "seek": 626432, "start": 6288.16, "end": 6290.16, "text": " Any nonlinear function will do.", "tokens": [50364, 400, 291, 1029, 11, 437, 6828, 393, 286, 50486, 50486, 30874, 365, 364, 9482, 295, 341, 2010, 30, 50656, 50656, 440, 1867, 307, 11, 291, 393, 30874, 1238, 709, 50754, 50754, 604, 731, 12, 29437, 12865, 2445, 382, 1998, 382, 291, 528, 11, 50912, 50912, 382, 938, 382, 291, 362, 1547, 295, 729, 6815, 294, 264, 2808, 13, 51068, 51068, 407, 341, 307, 257, 20904, 300, 1619, 300, 732, 4583, 18161, 36170, 51268, 51268, 366, 11455, 8542, 3391, 13, 51350, 51350, 467, 1177, 380, 534, 1871, 437, 2107, 28263, 2445, 51450, 51450, 291, 829, 294, 264, 2808, 13, 51556, 51556, 2639, 2107, 28263, 2445, 486, 360, 13, 51656, 51656, 316, 732, 4583, 18161, 2533, 307, 257, 11455, 8542, 1639, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11979076939244424, "compression_ratio": 1.8774703557312253, "no_speech_prob": 1.5445695680682547e-05}, {"id": 2174, "seek": 626432, "start": 6290.16, "end": 6293.92, "text": " A two layer neural net is a universal approximator.", "tokens": [50364, 400, 291, 1029, 11, 437, 6828, 393, 286, 50486, 50486, 30874, 365, 364, 9482, 295, 341, 2010, 30, 50656, 50656, 440, 1867, 307, 11, 291, 393, 30874, 1238, 709, 50754, 50754, 604, 731, 12, 29437, 12865, 2445, 382, 1998, 382, 291, 528, 11, 50912, 50912, 382, 938, 382, 291, 362, 1547, 295, 729, 6815, 294, 264, 2808, 13, 51068, 51068, 407, 341, 307, 257, 20904, 300, 1619, 300, 732, 4583, 18161, 36170, 51268, 51268, 366, 11455, 8542, 3391, 13, 51350, 51350, 467, 1177, 380, 534, 1871, 437, 2107, 28263, 2445, 51450, 51450, 291, 829, 294, 264, 2808, 13, 51556, 51556, 2639, 2107, 28263, 2445, 486, 360, 13, 51656, 51656, 316, 732, 4583, 18161, 2533, 307, 257, 11455, 8542, 1639, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11979076939244424, "compression_ratio": 1.8774703557312253, "no_speech_prob": 1.5445695680682547e-05}, {"id": 2175, "seek": 629392, "start": 6293.92, "end": 6299.16, "text": " And immediately, you say, well, why do we need multiple layers,", "tokens": [50364, 400, 4258, 11, 291, 584, 11, 731, 11, 983, 360, 321, 643, 3866, 7914, 11, 50626, 50626, 550, 11, 498, 321, 393, 30874, 1340, 365, 732, 7914, 30, 50772, 50772, 400, 264, 1867, 307, 11, 309, 311, 588, 11, 588, 43495, 50920, 50920, 281, 853, 281, 30874, 1203, 365, 787, 732, 7914, 11, 51034, 51034, 570, 867, 11, 867, 11, 867, 1880, 6828, 51180, 51180, 321, 434, 3102, 294, 2539, 2644, 312, 19621, 51298, 51298, 10379, 538, 257, 732, 4583, 1185, 13, 51414, 51414, 814, 393, 6264, 312, 10379, 538, 257, 732, 4583, 1185, 13, 51534, 51534, 583, 264, 1230, 295, 7633, 6815, 309, 576, 3651, 51640, 51640, 576, 312, 370, 41358, 2416, 11, 309, 311, 2584, 704, 1897, 804, 13, 51772], "temperature": 0.0, "avg_logprob": -0.1504774247446368, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.1478110536700115e-05}, {"id": 2176, "seek": 629392, "start": 6299.16, "end": 6302.08, "text": " then, if we can approximate anything with two layers?", "tokens": [50364, 400, 4258, 11, 291, 584, 11, 731, 11, 983, 360, 321, 643, 3866, 7914, 11, 50626, 50626, 550, 11, 498, 321, 393, 30874, 1340, 365, 732, 7914, 30, 50772, 50772, 400, 264, 1867, 307, 11, 309, 311, 588, 11, 588, 43495, 50920, 50920, 281, 853, 281, 30874, 1203, 365, 787, 732, 7914, 11, 51034, 51034, 570, 867, 11, 867, 11, 867, 1880, 6828, 51180, 51180, 321, 434, 3102, 294, 2539, 2644, 312, 19621, 51298, 51298, 10379, 538, 257, 732, 4583, 1185, 13, 51414, 51414, 814, 393, 6264, 312, 10379, 538, 257, 732, 4583, 1185, 13, 51534, 51534, 583, 264, 1230, 295, 7633, 6815, 309, 576, 3651, 51640, 51640, 576, 312, 370, 41358, 2416, 11, 309, 311, 2584, 704, 1897, 804, 13, 51772], "temperature": 0.0, "avg_logprob": -0.1504774247446368, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.1478110536700115e-05}, {"id": 2177, "seek": 629392, "start": 6302.08, "end": 6305.04, "text": " And the answer is, it's very, very inefficient", "tokens": [50364, 400, 4258, 11, 291, 584, 11, 731, 11, 983, 360, 321, 643, 3866, 7914, 11, 50626, 50626, 550, 11, 498, 321, 393, 30874, 1340, 365, 732, 7914, 30, 50772, 50772, 400, 264, 1867, 307, 11, 309, 311, 588, 11, 588, 43495, 50920, 50920, 281, 853, 281, 30874, 1203, 365, 787, 732, 7914, 11, 51034, 51034, 570, 867, 11, 867, 11, 867, 1880, 6828, 51180, 51180, 321, 434, 3102, 294, 2539, 2644, 312, 19621, 51298, 51298, 10379, 538, 257, 732, 4583, 1185, 13, 51414, 51414, 814, 393, 6264, 312, 10379, 538, 257, 732, 4583, 1185, 13, 51534, 51534, 583, 264, 1230, 295, 7633, 6815, 309, 576, 3651, 51640, 51640, 576, 312, 370, 41358, 2416, 11, 309, 311, 2584, 704, 1897, 804, 13, 51772], "temperature": 0.0, "avg_logprob": -0.1504774247446368, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.1478110536700115e-05}, {"id": 2178, "seek": 629392, "start": 6305.04, "end": 6307.32, "text": " to try to approximate everything with only two layers,", "tokens": [50364, 400, 4258, 11, 291, 584, 11, 731, 11, 983, 360, 321, 643, 3866, 7914, 11, 50626, 50626, 550, 11, 498, 321, 393, 30874, 1340, 365, 732, 7914, 30, 50772, 50772, 400, 264, 1867, 307, 11, 309, 311, 588, 11, 588, 43495, 50920, 50920, 281, 853, 281, 30874, 1203, 365, 787, 732, 7914, 11, 51034, 51034, 570, 867, 11, 867, 11, 867, 1880, 6828, 51180, 51180, 321, 434, 3102, 294, 2539, 2644, 312, 19621, 51298, 51298, 10379, 538, 257, 732, 4583, 1185, 13, 51414, 51414, 814, 393, 6264, 312, 10379, 538, 257, 732, 4583, 1185, 13, 51534, 51534, 583, 264, 1230, 295, 7633, 6815, 309, 576, 3651, 51640, 51640, 576, 312, 370, 41358, 2416, 11, 309, 311, 2584, 704, 1897, 804, 13, 51772], "temperature": 0.0, "avg_logprob": -0.1504774247446368, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.1478110536700115e-05}, {"id": 2179, "seek": 629392, "start": 6307.32, "end": 6310.24, "text": " because many, many, many interesting functions", "tokens": [50364, 400, 4258, 11, 291, 584, 11, 731, 11, 983, 360, 321, 643, 3866, 7914, 11, 50626, 50626, 550, 11, 498, 321, 393, 30874, 1340, 365, 732, 7914, 30, 50772, 50772, 400, 264, 1867, 307, 11, 309, 311, 588, 11, 588, 43495, 50920, 50920, 281, 853, 281, 30874, 1203, 365, 787, 732, 7914, 11, 51034, 51034, 570, 867, 11, 867, 11, 867, 1880, 6828, 51180, 51180, 321, 434, 3102, 294, 2539, 2644, 312, 19621, 51298, 51298, 10379, 538, 257, 732, 4583, 1185, 13, 51414, 51414, 814, 393, 6264, 312, 10379, 538, 257, 732, 4583, 1185, 13, 51534, 51534, 583, 264, 1230, 295, 7633, 6815, 309, 576, 3651, 51640, 51640, 576, 312, 370, 41358, 2416, 11, 309, 311, 2584, 704, 1897, 804, 13, 51772], "temperature": 0.0, "avg_logprob": -0.1504774247446368, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.1478110536700115e-05}, {"id": 2180, "seek": 629392, "start": 6310.24, "end": 6312.6, "text": " we're interested in learning cannot be efficiently", "tokens": [50364, 400, 4258, 11, 291, 584, 11, 731, 11, 983, 360, 321, 643, 3866, 7914, 11, 50626, 50626, 550, 11, 498, 321, 393, 30874, 1340, 365, 732, 7914, 30, 50772, 50772, 400, 264, 1867, 307, 11, 309, 311, 588, 11, 588, 43495, 50920, 50920, 281, 853, 281, 30874, 1203, 365, 787, 732, 7914, 11, 51034, 51034, 570, 867, 11, 867, 11, 867, 1880, 6828, 51180, 51180, 321, 434, 3102, 294, 2539, 2644, 312, 19621, 51298, 51298, 10379, 538, 257, 732, 4583, 1185, 13, 51414, 51414, 814, 393, 6264, 312, 10379, 538, 257, 732, 4583, 1185, 13, 51534, 51534, 583, 264, 1230, 295, 7633, 6815, 309, 576, 3651, 51640, 51640, 576, 312, 370, 41358, 2416, 11, 309, 311, 2584, 704, 1897, 804, 13, 51772], "temperature": 0.0, "avg_logprob": -0.1504774247446368, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.1478110536700115e-05}, {"id": 2181, "seek": 629392, "start": 6312.6, "end": 6314.92, "text": " represented by a two layer system.", "tokens": [50364, 400, 4258, 11, 291, 584, 11, 731, 11, 983, 360, 321, 643, 3866, 7914, 11, 50626, 50626, 550, 11, 498, 321, 393, 30874, 1340, 365, 732, 7914, 30, 50772, 50772, 400, 264, 1867, 307, 11, 309, 311, 588, 11, 588, 43495, 50920, 50920, 281, 853, 281, 30874, 1203, 365, 787, 732, 7914, 11, 51034, 51034, 570, 867, 11, 867, 11, 867, 1880, 6828, 51180, 51180, 321, 434, 3102, 294, 2539, 2644, 312, 19621, 51298, 51298, 10379, 538, 257, 732, 4583, 1185, 13, 51414, 51414, 814, 393, 6264, 312, 10379, 538, 257, 732, 4583, 1185, 13, 51534, 51534, 583, 264, 1230, 295, 7633, 6815, 309, 576, 3651, 51640, 51640, 576, 312, 370, 41358, 2416, 11, 309, 311, 2584, 704, 1897, 804, 13, 51772], "temperature": 0.0, "avg_logprob": -0.1504774247446368, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.1478110536700115e-05}, {"id": 2182, "seek": 629392, "start": 6314.92, "end": 6317.32, "text": " They can possibly be represented by a two layer system.", "tokens": [50364, 400, 4258, 11, 291, 584, 11, 731, 11, 983, 360, 321, 643, 3866, 7914, 11, 50626, 50626, 550, 11, 498, 321, 393, 30874, 1340, 365, 732, 7914, 30, 50772, 50772, 400, 264, 1867, 307, 11, 309, 311, 588, 11, 588, 43495, 50920, 50920, 281, 853, 281, 30874, 1203, 365, 787, 732, 7914, 11, 51034, 51034, 570, 867, 11, 867, 11, 867, 1880, 6828, 51180, 51180, 321, 434, 3102, 294, 2539, 2644, 312, 19621, 51298, 51298, 10379, 538, 257, 732, 4583, 1185, 13, 51414, 51414, 814, 393, 6264, 312, 10379, 538, 257, 732, 4583, 1185, 13, 51534, 51534, 583, 264, 1230, 295, 7633, 6815, 309, 576, 3651, 51640, 51640, 576, 312, 370, 41358, 2416, 11, 309, 311, 2584, 704, 1897, 804, 13, 51772], "temperature": 0.0, "avg_logprob": -0.1504774247446368, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.1478110536700115e-05}, {"id": 2183, "seek": 629392, "start": 6317.32, "end": 6319.4400000000005, "text": " But the number of hidden units it would require", "tokens": [50364, 400, 4258, 11, 291, 584, 11, 731, 11, 983, 360, 321, 643, 3866, 7914, 11, 50626, 50626, 550, 11, 498, 321, 393, 30874, 1340, 365, 732, 7914, 30, 50772, 50772, 400, 264, 1867, 307, 11, 309, 311, 588, 11, 588, 43495, 50920, 50920, 281, 853, 281, 30874, 1203, 365, 787, 732, 7914, 11, 51034, 51034, 570, 867, 11, 867, 11, 867, 1880, 6828, 51180, 51180, 321, 434, 3102, 294, 2539, 2644, 312, 19621, 51298, 51298, 10379, 538, 257, 732, 4583, 1185, 13, 51414, 51414, 814, 393, 6264, 312, 10379, 538, 257, 732, 4583, 1185, 13, 51534, 51534, 583, 264, 1230, 295, 7633, 6815, 309, 576, 3651, 51640, 51640, 576, 312, 370, 41358, 2416, 11, 309, 311, 2584, 704, 1897, 804, 13, 51772], "temperature": 0.0, "avg_logprob": -0.1504774247446368, "compression_ratio": 1.8333333333333333, "no_speech_prob": 1.1478110536700115e-05}, {"id": 2184, "seek": 631944, "start": 6319.44, "end": 6325.719999999999, "text": " to be so ridiculously large is completely impractical.", "tokens": [50364, 281, 312, 370, 41358, 2416, 307, 2584, 704, 1897, 804, 13, 50678, 50678, 407, 300, 311, 983, 321, 643, 7914, 13, 50836, 50836, 639, 588, 2199, 935, 307, 746, 50930, 50930, 300, 1890, 1826, 1936, 264, 9657, 82, 337, 264, 3479, 2539, 51268, 51268, 293, 3820, 5201, 4456, 281, 1223, 13, 51358, 51572, 759, 291, 7320, 437, 286, 445, 848, 11, 51646, 51646, 291, 445, 1890, 257, 1326, 3949, 281, 4224, 552, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.22420437305004565, "compression_ratio": 1.5148514851485149, "no_speech_prob": 1.3845145076629706e-05}, {"id": 2185, "seek": 631944, "start": 6325.719999999999, "end": 6328.879999999999, "text": " So that's why we need layers.", "tokens": [50364, 281, 312, 370, 41358, 2416, 307, 2584, 704, 1897, 804, 13, 50678, 50678, 407, 300, 311, 983, 321, 643, 7914, 13, 50836, 50836, 639, 588, 2199, 935, 307, 746, 50930, 50930, 300, 1890, 1826, 1936, 264, 9657, 82, 337, 264, 3479, 2539, 51268, 51268, 293, 3820, 5201, 4456, 281, 1223, 13, 51358, 51572, 759, 291, 7320, 437, 286, 445, 848, 11, 51646, 51646, 291, 445, 1890, 257, 1326, 3949, 281, 4224, 552, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.22420437305004565, "compression_ratio": 1.5148514851485149, "no_speech_prob": 1.3845145076629706e-05}, {"id": 2186, "seek": 631944, "start": 6328.879999999999, "end": 6330.759999999999, "text": " This very simple point is something", "tokens": [50364, 281, 312, 370, 41358, 2416, 307, 2584, 704, 1897, 804, 13, 50678, 50678, 407, 300, 311, 983, 321, 643, 7914, 13, 50836, 50836, 639, 588, 2199, 935, 307, 746, 50930, 50930, 300, 1890, 1826, 1936, 264, 9657, 82, 337, 264, 3479, 2539, 51268, 51268, 293, 3820, 5201, 4456, 281, 1223, 13, 51358, 51572, 759, 291, 7320, 437, 286, 445, 848, 11, 51646, 51646, 291, 445, 1890, 257, 1326, 3949, 281, 4224, 552, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.22420437305004565, "compression_ratio": 1.5148514851485149, "no_speech_prob": 1.3845145076629706e-05}, {"id": 2187, "seek": 631944, "start": 6330.759999999999, "end": 6337.5199999999995, "text": " that took until basically the 2010s for the machine learning", "tokens": [50364, 281, 312, 370, 41358, 2416, 307, 2584, 704, 1897, 804, 13, 50678, 50678, 407, 300, 311, 983, 321, 643, 7914, 13, 50836, 50836, 639, 588, 2199, 935, 307, 746, 50930, 50930, 300, 1890, 1826, 1936, 264, 9657, 82, 337, 264, 3479, 2539, 51268, 51268, 293, 3820, 5201, 4456, 281, 1223, 13, 51358, 51572, 759, 291, 7320, 437, 286, 445, 848, 11, 51646, 51646, 291, 445, 1890, 257, 1326, 3949, 281, 4224, 552, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.22420437305004565, "compression_ratio": 1.5148514851485149, "no_speech_prob": 1.3845145076629706e-05}, {"id": 2188, "seek": 631944, "start": 6337.5199999999995, "end": 6339.32, "text": " and computer vision communities to understand.", "tokens": [50364, 281, 312, 370, 41358, 2416, 307, 2584, 704, 1897, 804, 13, 50678, 50678, 407, 300, 311, 983, 321, 643, 7914, 13, 50836, 50836, 639, 588, 2199, 935, 307, 746, 50930, 50930, 300, 1890, 1826, 1936, 264, 9657, 82, 337, 264, 3479, 2539, 51268, 51268, 293, 3820, 5201, 4456, 281, 1223, 13, 51358, 51572, 759, 291, 7320, 437, 286, 445, 848, 11, 51646, 51646, 291, 445, 1890, 257, 1326, 3949, 281, 4224, 552, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.22420437305004565, "compression_ratio": 1.5148514851485149, "no_speech_prob": 1.3845145076629706e-05}, {"id": 2189, "seek": 631944, "start": 6343.599999999999, "end": 6345.08, "text": " If you understood what I just said,", "tokens": [50364, 281, 312, 370, 41358, 2416, 307, 2584, 704, 1897, 804, 13, 50678, 50678, 407, 300, 311, 983, 321, 643, 7914, 13, 50836, 50836, 639, 588, 2199, 935, 307, 746, 50930, 50930, 300, 1890, 1826, 1936, 264, 9657, 82, 337, 264, 3479, 2539, 51268, 51268, 293, 3820, 5201, 4456, 281, 1223, 13, 51358, 51572, 759, 291, 7320, 437, 286, 445, 848, 11, 51646, 51646, 291, 445, 1890, 257, 1326, 3949, 281, 4224, 552, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.22420437305004565, "compression_ratio": 1.5148514851485149, "no_speech_prob": 1.3845145076629706e-05}, {"id": 2190, "seek": 631944, "start": 6345.08, "end": 6347.879999999999, "text": " you just took a few seconds to beat them.", "tokens": [50364, 281, 312, 370, 41358, 2416, 307, 2584, 704, 1897, 804, 13, 50678, 50678, 407, 300, 311, 983, 321, 643, 7914, 13, 50836, 50836, 639, 588, 2199, 935, 307, 746, 50930, 50930, 300, 1890, 1826, 1936, 264, 9657, 82, 337, 264, 3479, 2539, 51268, 51268, 293, 3820, 5201, 4456, 281, 1223, 13, 51358, 51572, 759, 291, 7320, 437, 286, 445, 848, 11, 51646, 51646, 291, 445, 1890, 257, 1326, 3949, 281, 4224, 552, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.22420437305004565, "compression_ratio": 1.5148514851485149, "no_speech_prob": 1.3845145076629706e-05}, {"id": 2191, "seek": 634788, "start": 6347.88, "end": 6351.32, "text": " There is a last question here before we finish class.", "tokens": [50364, 821, 307, 257, 1036, 1168, 510, 949, 321, 2413, 1508, 13, 50536, 50536, 407, 775, 264, 7161, 295, 264, 3209, 550, 50654, 50654, 362, 1340, 281, 360, 365, 2674, 2144, 30, 50872, 50872, 407, 2674, 2144, 307, 257, 819, 1657, 13, 50996, 50996, 6996, 2144, 307, 588, 2252, 281, 6069, 13, 51166, 51166, 467, 5946, 322, 257, 688, 295, 721, 13, 51228, 51228, 467, 5946, 322, 264, 5745, 7186, 442, 51374, 51374, 295, 264, 9482, 281, 264, 1154, 412, 1011, 13, 51550, 51550, 407, 337, 1365, 11, 561, 764, 45216, 304, 36170, 51660, 51660, 337, 3820, 5201, 11, 436, 764, 4088, 433, 337, 2487, 11, 12288, 11, 51794, 51794, 12288, 11, 12288, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17447564540765223, "compression_ratio": 1.7372549019607844, "no_speech_prob": 7.13835033820942e-05}, {"id": 2192, "seek": 634788, "start": 6351.32, "end": 6353.68, "text": " So does the depth of the network then", "tokens": [50364, 821, 307, 257, 1036, 1168, 510, 949, 321, 2413, 1508, 13, 50536, 50536, 407, 775, 264, 7161, 295, 264, 3209, 550, 50654, 50654, 362, 1340, 281, 360, 365, 2674, 2144, 30, 50872, 50872, 407, 2674, 2144, 307, 257, 819, 1657, 13, 50996, 50996, 6996, 2144, 307, 588, 2252, 281, 6069, 13, 51166, 51166, 467, 5946, 322, 257, 688, 295, 721, 13, 51228, 51228, 467, 5946, 322, 264, 5745, 7186, 442, 51374, 51374, 295, 264, 9482, 281, 264, 1154, 412, 1011, 13, 51550, 51550, 407, 337, 1365, 11, 561, 764, 45216, 304, 36170, 51660, 51660, 337, 3820, 5201, 11, 436, 764, 4088, 433, 337, 2487, 11, 12288, 11, 51794, 51794, 12288, 11, 12288, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17447564540765223, "compression_ratio": 1.7372549019607844, "no_speech_prob": 7.13835033820942e-05}, {"id": 2193, "seek": 634788, "start": 6353.68, "end": 6358.04, "text": " have anything to do with generalization?", "tokens": [50364, 821, 307, 257, 1036, 1168, 510, 949, 321, 2413, 1508, 13, 50536, 50536, 407, 775, 264, 7161, 295, 264, 3209, 550, 50654, 50654, 362, 1340, 281, 360, 365, 2674, 2144, 30, 50872, 50872, 407, 2674, 2144, 307, 257, 819, 1657, 13, 50996, 50996, 6996, 2144, 307, 588, 2252, 281, 6069, 13, 51166, 51166, 467, 5946, 322, 257, 688, 295, 721, 13, 51228, 51228, 467, 5946, 322, 264, 5745, 7186, 442, 51374, 51374, 295, 264, 9482, 281, 264, 1154, 412, 1011, 13, 51550, 51550, 407, 337, 1365, 11, 561, 764, 45216, 304, 36170, 51660, 51660, 337, 3820, 5201, 11, 436, 764, 4088, 433, 337, 2487, 11, 12288, 11, 51794, 51794, 12288, 11, 12288, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17447564540765223, "compression_ratio": 1.7372549019607844, "no_speech_prob": 7.13835033820942e-05}, {"id": 2194, "seek": 634788, "start": 6358.04, "end": 6360.52, "text": " So generalization is a different story.", "tokens": [50364, 821, 307, 257, 1036, 1168, 510, 949, 321, 2413, 1508, 13, 50536, 50536, 407, 775, 264, 7161, 295, 264, 3209, 550, 50654, 50654, 362, 1340, 281, 360, 365, 2674, 2144, 30, 50872, 50872, 407, 2674, 2144, 307, 257, 819, 1657, 13, 50996, 50996, 6996, 2144, 307, 588, 2252, 281, 6069, 13, 51166, 51166, 467, 5946, 322, 257, 688, 295, 721, 13, 51228, 51228, 467, 5946, 322, 264, 5745, 7186, 442, 51374, 51374, 295, 264, 9482, 281, 264, 1154, 412, 1011, 13, 51550, 51550, 407, 337, 1365, 11, 561, 764, 45216, 304, 36170, 51660, 51660, 337, 3820, 5201, 11, 436, 764, 4088, 433, 337, 2487, 11, 12288, 11, 51794, 51794, 12288, 11, 12288, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17447564540765223, "compression_ratio": 1.7372549019607844, "no_speech_prob": 7.13835033820942e-05}, {"id": 2195, "seek": 634788, "start": 6360.52, "end": 6363.92, "text": " Generalization is very difficult to predict.", "tokens": [50364, 821, 307, 257, 1036, 1168, 510, 949, 321, 2413, 1508, 13, 50536, 50536, 407, 775, 264, 7161, 295, 264, 3209, 550, 50654, 50654, 362, 1340, 281, 360, 365, 2674, 2144, 30, 50872, 50872, 407, 2674, 2144, 307, 257, 819, 1657, 13, 50996, 50996, 6996, 2144, 307, 588, 2252, 281, 6069, 13, 51166, 51166, 467, 5946, 322, 257, 688, 295, 721, 13, 51228, 51228, 467, 5946, 322, 264, 5745, 7186, 442, 51374, 51374, 295, 264, 9482, 281, 264, 1154, 412, 1011, 13, 51550, 51550, 407, 337, 1365, 11, 561, 764, 45216, 304, 36170, 51660, 51660, 337, 3820, 5201, 11, 436, 764, 4088, 433, 337, 2487, 11, 12288, 11, 51794, 51794, 12288, 11, 12288, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17447564540765223, "compression_ratio": 1.7372549019607844, "no_speech_prob": 7.13835033820942e-05}, {"id": 2196, "seek": 634788, "start": 6363.92, "end": 6365.16, "text": " It depends on a lot of things.", "tokens": [50364, 821, 307, 257, 1036, 1168, 510, 949, 321, 2413, 1508, 13, 50536, 50536, 407, 775, 264, 7161, 295, 264, 3209, 550, 50654, 50654, 362, 1340, 281, 360, 365, 2674, 2144, 30, 50872, 50872, 407, 2674, 2144, 307, 257, 819, 1657, 13, 50996, 50996, 6996, 2144, 307, 588, 2252, 281, 6069, 13, 51166, 51166, 467, 5946, 322, 257, 688, 295, 721, 13, 51228, 51228, 467, 5946, 322, 264, 5745, 7186, 442, 51374, 51374, 295, 264, 9482, 281, 264, 1154, 412, 1011, 13, 51550, 51550, 407, 337, 1365, 11, 561, 764, 45216, 304, 36170, 51660, 51660, 337, 3820, 5201, 11, 436, 764, 4088, 433, 337, 2487, 11, 12288, 11, 51794, 51794, 12288, 11, 12288, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17447564540765223, "compression_ratio": 1.7372549019607844, "no_speech_prob": 7.13835033820942e-05}, {"id": 2197, "seek": 634788, "start": 6365.16, "end": 6368.08, "text": " It depends on the appropriateness", "tokens": [50364, 821, 307, 257, 1036, 1168, 510, 949, 321, 2413, 1508, 13, 50536, 50536, 407, 775, 264, 7161, 295, 264, 3209, 550, 50654, 50654, 362, 1340, 281, 360, 365, 2674, 2144, 30, 50872, 50872, 407, 2674, 2144, 307, 257, 819, 1657, 13, 50996, 50996, 6996, 2144, 307, 588, 2252, 281, 6069, 13, 51166, 51166, 467, 5946, 322, 257, 688, 295, 721, 13, 51228, 51228, 467, 5946, 322, 264, 5745, 7186, 442, 51374, 51374, 295, 264, 9482, 281, 264, 1154, 412, 1011, 13, 51550, 51550, 407, 337, 1365, 11, 561, 764, 45216, 304, 36170, 51660, 51660, 337, 3820, 5201, 11, 436, 764, 4088, 433, 337, 2487, 11, 12288, 11, 51794, 51794, 12288, 11, 12288, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17447564540765223, "compression_ratio": 1.7372549019607844, "no_speech_prob": 7.13835033820942e-05}, {"id": 2198, "seek": 634788, "start": 6368.08, "end": 6371.6, "text": " of the architecture to the problem at hand.", "tokens": [50364, 821, 307, 257, 1036, 1168, 510, 949, 321, 2413, 1508, 13, 50536, 50536, 407, 775, 264, 7161, 295, 264, 3209, 550, 50654, 50654, 362, 1340, 281, 360, 365, 2674, 2144, 30, 50872, 50872, 407, 2674, 2144, 307, 257, 819, 1657, 13, 50996, 50996, 6996, 2144, 307, 588, 2252, 281, 6069, 13, 51166, 51166, 467, 5946, 322, 257, 688, 295, 721, 13, 51228, 51228, 467, 5946, 322, 264, 5745, 7186, 442, 51374, 51374, 295, 264, 9482, 281, 264, 1154, 412, 1011, 13, 51550, 51550, 407, 337, 1365, 11, 561, 764, 45216, 304, 36170, 51660, 51660, 337, 3820, 5201, 11, 436, 764, 4088, 433, 337, 2487, 11, 12288, 11, 51794, 51794, 12288, 11, 12288, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17447564540765223, "compression_ratio": 1.7372549019607844, "no_speech_prob": 7.13835033820942e-05}, {"id": 2199, "seek": 634788, "start": 6371.6, "end": 6373.8, "text": " So for example, people use convolutional nets", "tokens": [50364, 821, 307, 257, 1036, 1168, 510, 949, 321, 2413, 1508, 13, 50536, 50536, 407, 775, 264, 7161, 295, 264, 3209, 550, 50654, 50654, 362, 1340, 281, 360, 365, 2674, 2144, 30, 50872, 50872, 407, 2674, 2144, 307, 257, 819, 1657, 13, 50996, 50996, 6996, 2144, 307, 588, 2252, 281, 6069, 13, 51166, 51166, 467, 5946, 322, 257, 688, 295, 721, 13, 51228, 51228, 467, 5946, 322, 264, 5745, 7186, 442, 51374, 51374, 295, 264, 9482, 281, 264, 1154, 412, 1011, 13, 51550, 51550, 407, 337, 1365, 11, 561, 764, 45216, 304, 36170, 51660, 51660, 337, 3820, 5201, 11, 436, 764, 4088, 433, 337, 2487, 11, 12288, 11, 51794, 51794, 12288, 11, 12288, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17447564540765223, "compression_ratio": 1.7372549019607844, "no_speech_prob": 7.13835033820942e-05}, {"id": 2200, "seek": 634788, "start": 6373.8, "end": 6376.4800000000005, "text": " for computer vision, they use transformers for text, blah,", "tokens": [50364, 821, 307, 257, 1036, 1168, 510, 949, 321, 2413, 1508, 13, 50536, 50536, 407, 775, 264, 7161, 295, 264, 3209, 550, 50654, 50654, 362, 1340, 281, 360, 365, 2674, 2144, 30, 50872, 50872, 407, 2674, 2144, 307, 257, 819, 1657, 13, 50996, 50996, 6996, 2144, 307, 588, 2252, 281, 6069, 13, 51166, 51166, 467, 5946, 322, 257, 688, 295, 721, 13, 51228, 51228, 467, 5946, 322, 264, 5745, 7186, 442, 51374, 51374, 295, 264, 9482, 281, 264, 1154, 412, 1011, 13, 51550, 51550, 407, 337, 1365, 11, 561, 764, 45216, 304, 36170, 51660, 51660, 337, 3820, 5201, 11, 436, 764, 4088, 433, 337, 2487, 11, 12288, 11, 51794, 51794, 12288, 11, 12288, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17447564540765223, "compression_ratio": 1.7372549019607844, "no_speech_prob": 7.13835033820942e-05}, {"id": 2201, "seek": 634788, "start": 6376.4800000000005, "end": 6377.84, "text": " blah, blah.", "tokens": [50364, 821, 307, 257, 1036, 1168, 510, 949, 321, 2413, 1508, 13, 50536, 50536, 407, 775, 264, 7161, 295, 264, 3209, 550, 50654, 50654, 362, 1340, 281, 360, 365, 2674, 2144, 30, 50872, 50872, 407, 2674, 2144, 307, 257, 819, 1657, 13, 50996, 50996, 6996, 2144, 307, 588, 2252, 281, 6069, 13, 51166, 51166, 467, 5946, 322, 257, 688, 295, 721, 13, 51228, 51228, 467, 5946, 322, 264, 5745, 7186, 442, 51374, 51374, 295, 264, 9482, 281, 264, 1154, 412, 1011, 13, 51550, 51550, 407, 337, 1365, 11, 561, 764, 45216, 304, 36170, 51660, 51660, 337, 3820, 5201, 11, 436, 764, 4088, 433, 337, 2487, 11, 12288, 11, 51794, 51794, 12288, 11, 12288, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.17447564540765223, "compression_ratio": 1.7372549019607844, "no_speech_prob": 7.13835033820942e-05}, {"id": 2202, "seek": 637784, "start": 6377.84, "end": 6380.400000000001, "text": " Certain architectures that work well for certain types of data.", "tokens": [50364, 13407, 6331, 1303, 300, 589, 731, 337, 1629, 3467, 295, 1412, 13, 50492, 50622, 407, 300, 311, 264, 2135, 551, 300, 486, 3470, 2674, 2144, 13, 50798, 50962, 583, 5101, 11, 2086, 11, 3866, 7914, 51110, 51110, 393, 3470, 2674, 2144, 570, 51226, 51226, 337, 257, 1729, 2445, 291, 434, 3102, 294, 2539, 11, 51408, 51408, 15866, 309, 365, 3866, 7914, 51492, 51492, 486, 2089, 291, 281, 5407, 264, 4787, 2744, 295, 264, 1185, 300, 51630, 51630, 486, 360, 257, 665, 1691, 13, 51686, 51686, 400, 370, 538, 12245, 264, 2744, 11, 291, 434, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17515159139827807, "compression_ratio": 1.7359307359307359, "no_speech_prob": 1.0286302313033957e-05}, {"id": 2203, "seek": 637784, "start": 6383.0, "end": 6386.52, "text": " So that's the main thing that will improve generalization.", "tokens": [50364, 13407, 6331, 1303, 300, 589, 731, 337, 1629, 3467, 295, 1412, 13, 50492, 50622, 407, 300, 311, 264, 2135, 551, 300, 486, 3470, 2674, 2144, 13, 50798, 50962, 583, 5101, 11, 2086, 11, 3866, 7914, 51110, 51110, 393, 3470, 2674, 2144, 570, 51226, 51226, 337, 257, 1729, 2445, 291, 434, 3102, 294, 2539, 11, 51408, 51408, 15866, 309, 365, 3866, 7914, 51492, 51492, 486, 2089, 291, 281, 5407, 264, 4787, 2744, 295, 264, 1185, 300, 51630, 51630, 486, 360, 257, 665, 1691, 13, 51686, 51686, 400, 370, 538, 12245, 264, 2744, 11, 291, 434, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17515159139827807, "compression_ratio": 1.7359307359307359, "no_speech_prob": 1.0286302313033957e-05}, {"id": 2204, "seek": 637784, "start": 6389.8, "end": 6392.76, "text": " But generally, yes, multiple layers", "tokens": [50364, 13407, 6331, 1303, 300, 589, 731, 337, 1629, 3467, 295, 1412, 13, 50492, 50622, 407, 300, 311, 264, 2135, 551, 300, 486, 3470, 2674, 2144, 13, 50798, 50962, 583, 5101, 11, 2086, 11, 3866, 7914, 51110, 51110, 393, 3470, 2674, 2144, 570, 51226, 51226, 337, 257, 1729, 2445, 291, 434, 3102, 294, 2539, 11, 51408, 51408, 15866, 309, 365, 3866, 7914, 51492, 51492, 486, 2089, 291, 281, 5407, 264, 4787, 2744, 295, 264, 1185, 300, 51630, 51630, 486, 360, 257, 665, 1691, 13, 51686, 51686, 400, 370, 538, 12245, 264, 2744, 11, 291, 434, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17515159139827807, "compression_ratio": 1.7359307359307359, "no_speech_prob": 1.0286302313033957e-05}, {"id": 2205, "seek": 637784, "start": 6392.76, "end": 6395.08, "text": " can improve generalization because", "tokens": [50364, 13407, 6331, 1303, 300, 589, 731, 337, 1629, 3467, 295, 1412, 13, 50492, 50622, 407, 300, 311, 264, 2135, 551, 300, 486, 3470, 2674, 2144, 13, 50798, 50962, 583, 5101, 11, 2086, 11, 3866, 7914, 51110, 51110, 393, 3470, 2674, 2144, 570, 51226, 51226, 337, 257, 1729, 2445, 291, 434, 3102, 294, 2539, 11, 51408, 51408, 15866, 309, 365, 3866, 7914, 51492, 51492, 486, 2089, 291, 281, 5407, 264, 4787, 2744, 295, 264, 1185, 300, 51630, 51630, 486, 360, 257, 665, 1691, 13, 51686, 51686, 400, 370, 538, 12245, 264, 2744, 11, 291, 434, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17515159139827807, "compression_ratio": 1.7359307359307359, "no_speech_prob": 1.0286302313033957e-05}, {"id": 2206, "seek": 637784, "start": 6395.08, "end": 6398.72, "text": " for a particular function you're interested in learning,", "tokens": [50364, 13407, 6331, 1303, 300, 589, 731, 337, 1629, 3467, 295, 1412, 13, 50492, 50622, 407, 300, 311, 264, 2135, 551, 300, 486, 3470, 2674, 2144, 13, 50798, 50962, 583, 5101, 11, 2086, 11, 3866, 7914, 51110, 51110, 393, 3470, 2674, 2144, 570, 51226, 51226, 337, 257, 1729, 2445, 291, 434, 3102, 294, 2539, 11, 51408, 51408, 15866, 309, 365, 3866, 7914, 51492, 51492, 486, 2089, 291, 281, 5407, 264, 4787, 2744, 295, 264, 1185, 300, 51630, 51630, 486, 360, 257, 665, 1691, 13, 51686, 51686, 400, 370, 538, 12245, 264, 2744, 11, 291, 434, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17515159139827807, "compression_ratio": 1.7359307359307359, "no_speech_prob": 1.0286302313033957e-05}, {"id": 2207, "seek": 637784, "start": 6398.72, "end": 6400.400000000001, "text": " computing it with multiple layers", "tokens": [50364, 13407, 6331, 1303, 300, 589, 731, 337, 1629, 3467, 295, 1412, 13, 50492, 50622, 407, 300, 311, 264, 2135, 551, 300, 486, 3470, 2674, 2144, 13, 50798, 50962, 583, 5101, 11, 2086, 11, 3866, 7914, 51110, 51110, 393, 3470, 2674, 2144, 570, 51226, 51226, 337, 257, 1729, 2445, 291, 434, 3102, 294, 2539, 11, 51408, 51408, 15866, 309, 365, 3866, 7914, 51492, 51492, 486, 2089, 291, 281, 5407, 264, 4787, 2744, 295, 264, 1185, 300, 51630, 51630, 486, 360, 257, 665, 1691, 13, 51686, 51686, 400, 370, 538, 12245, 264, 2744, 11, 291, 434, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17515159139827807, "compression_ratio": 1.7359307359307359, "no_speech_prob": 1.0286302313033957e-05}, {"id": 2208, "seek": 637784, "start": 6400.400000000001, "end": 6403.16, "text": " will allow you to reduce the overall size of the system that", "tokens": [50364, 13407, 6331, 1303, 300, 589, 731, 337, 1629, 3467, 295, 1412, 13, 50492, 50622, 407, 300, 311, 264, 2135, 551, 300, 486, 3470, 2674, 2144, 13, 50798, 50962, 583, 5101, 11, 2086, 11, 3866, 7914, 51110, 51110, 393, 3470, 2674, 2144, 570, 51226, 51226, 337, 257, 1729, 2445, 291, 434, 3102, 294, 2539, 11, 51408, 51408, 15866, 309, 365, 3866, 7914, 51492, 51492, 486, 2089, 291, 281, 5407, 264, 4787, 2744, 295, 264, 1185, 300, 51630, 51630, 486, 360, 257, 665, 1691, 13, 51686, 51686, 400, 370, 538, 12245, 264, 2744, 11, 291, 434, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17515159139827807, "compression_ratio": 1.7359307359307359, "no_speech_prob": 1.0286302313033957e-05}, {"id": 2209, "seek": 637784, "start": 6403.16, "end": 6404.28, "text": " will do a good job.", "tokens": [50364, 13407, 6331, 1303, 300, 589, 731, 337, 1629, 3467, 295, 1412, 13, 50492, 50622, 407, 300, 311, 264, 2135, 551, 300, 486, 3470, 2674, 2144, 13, 50798, 50962, 583, 5101, 11, 2086, 11, 3866, 7914, 51110, 51110, 393, 3470, 2674, 2144, 570, 51226, 51226, 337, 257, 1729, 2445, 291, 434, 3102, 294, 2539, 11, 51408, 51408, 15866, 309, 365, 3866, 7914, 51492, 51492, 486, 2089, 291, 281, 5407, 264, 4787, 2744, 295, 264, 1185, 300, 51630, 51630, 486, 360, 257, 665, 1691, 13, 51686, 51686, 400, 370, 538, 12245, 264, 2744, 11, 291, 434, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17515159139827807, "compression_ratio": 1.7359307359307359, "no_speech_prob": 1.0286302313033957e-05}, {"id": 2210, "seek": 637784, "start": 6404.28, "end": 6405.56, "text": " And so by reducing the size, you're", "tokens": [50364, 13407, 6331, 1303, 300, 589, 731, 337, 1629, 3467, 295, 1412, 13, 50492, 50622, 407, 300, 311, 264, 2135, 551, 300, 486, 3470, 2674, 2144, 13, 50798, 50962, 583, 5101, 11, 2086, 11, 3866, 7914, 51110, 51110, 393, 3470, 2674, 2144, 570, 51226, 51226, 337, 257, 1729, 2445, 291, 434, 3102, 294, 2539, 11, 51408, 51408, 15866, 309, 365, 3866, 7914, 51492, 51492, 486, 2089, 291, 281, 5407, 264, 4787, 2744, 295, 264, 1185, 300, 51630, 51630, 486, 360, 257, 665, 1691, 13, 51686, 51686, 400, 370, 538, 12245, 264, 2744, 11, 291, 434, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.17515159139827807, "compression_ratio": 1.7359307359307359, "no_speech_prob": 1.0286302313033957e-05}, {"id": 2211, "seek": 640556, "start": 6405.56, "end": 6408.160000000001, "text": " basically making it easier for the system to find", "tokens": [50364, 1936, 1455, 309, 3571, 337, 264, 1185, 281, 915, 50494, 50494, 733, 295, 665, 10290, 13, 50588, 50588, 583, 456, 307, 746, 1646, 597, 50640, 50640, 575, 281, 360, 365, 12686, 1860, 13, 50704, 50704, 286, 603, 808, 281, 341, 294, 257, 3456, 498, 286, 362, 565, 13, 50826, 50826, 2743, 264, 7285, 11, 264, 731, 307, 4833, 51052, 51052, 498, 321, 362, 670, 2181, 335, 2398, 1602, 9590, 13, 51198, 51198, 759, 291, 362, 670, 2181, 335, 2398, 1602, 3209, 11, 51275, 51275, 309, 311, 709, 3571, 281, 915, 257, 7285, 51348, 51348, 281, 428, 10024, 2445, 11, 597, 51446, 51446, 307, 983, 18161, 36170, 366, 5101, 670, 2181, 335, 2398, 1602, 13, 51620, 51620, 814, 5101, 362, 257, 709, 4833, 1230, 295, 9834, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.19154779301133268, "compression_ratio": 1.7720588235294117, "no_speech_prob": 3.4262830013176426e-05}, {"id": 2212, "seek": 640556, "start": 6408.160000000001, "end": 6410.04, "text": " kind of good representation.", "tokens": [50364, 1936, 1455, 309, 3571, 337, 264, 1185, 281, 915, 50494, 50494, 733, 295, 665, 10290, 13, 50588, 50588, 583, 456, 307, 746, 1646, 597, 50640, 50640, 575, 281, 360, 365, 12686, 1860, 13, 50704, 50704, 286, 603, 808, 281, 341, 294, 257, 3456, 498, 286, 362, 565, 13, 50826, 50826, 2743, 264, 7285, 11, 264, 731, 307, 4833, 51052, 51052, 498, 321, 362, 670, 2181, 335, 2398, 1602, 9590, 13, 51198, 51198, 759, 291, 362, 670, 2181, 335, 2398, 1602, 3209, 11, 51275, 51275, 309, 311, 709, 3571, 281, 915, 257, 7285, 51348, 51348, 281, 428, 10024, 2445, 11, 597, 51446, 51446, 307, 983, 18161, 36170, 366, 5101, 670, 2181, 335, 2398, 1602, 13, 51620, 51620, 814, 5101, 362, 257, 709, 4833, 1230, 295, 9834, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.19154779301133268, "compression_ratio": 1.7720588235294117, "no_speech_prob": 3.4262830013176426e-05}, {"id": 2213, "seek": 640556, "start": 6410.04, "end": 6411.080000000001, "text": " But there is something else which", "tokens": [50364, 1936, 1455, 309, 3571, 337, 264, 1185, 281, 915, 50494, 50494, 733, 295, 665, 10290, 13, 50588, 50588, 583, 456, 307, 746, 1646, 597, 50640, 50640, 575, 281, 360, 365, 12686, 1860, 13, 50704, 50704, 286, 603, 808, 281, 341, 294, 257, 3456, 498, 286, 362, 565, 13, 50826, 50826, 2743, 264, 7285, 11, 264, 731, 307, 4833, 51052, 51052, 498, 321, 362, 670, 2181, 335, 2398, 1602, 9590, 13, 51198, 51198, 759, 291, 362, 670, 2181, 335, 2398, 1602, 3209, 11, 51275, 51275, 309, 311, 709, 3571, 281, 915, 257, 7285, 51348, 51348, 281, 428, 10024, 2445, 11, 597, 51446, 51446, 307, 983, 18161, 36170, 366, 5101, 670, 2181, 335, 2398, 1602, 13, 51620, 51620, 814, 5101, 362, 257, 709, 4833, 1230, 295, 9834, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.19154779301133268, "compression_ratio": 1.7720588235294117, "no_speech_prob": 3.4262830013176426e-05}, {"id": 2214, "seek": 640556, "start": 6411.080000000001, "end": 6412.360000000001, "text": " has to do with compositionality.", "tokens": [50364, 1936, 1455, 309, 3571, 337, 264, 1185, 281, 915, 50494, 50494, 733, 295, 665, 10290, 13, 50588, 50588, 583, 456, 307, 746, 1646, 597, 50640, 50640, 575, 281, 360, 365, 12686, 1860, 13, 50704, 50704, 286, 603, 808, 281, 341, 294, 257, 3456, 498, 286, 362, 565, 13, 50826, 50826, 2743, 264, 7285, 11, 264, 731, 307, 4833, 51052, 51052, 498, 321, 362, 670, 2181, 335, 2398, 1602, 9590, 13, 51198, 51198, 759, 291, 362, 670, 2181, 335, 2398, 1602, 3209, 11, 51275, 51275, 309, 311, 709, 3571, 281, 915, 257, 7285, 51348, 51348, 281, 428, 10024, 2445, 11, 597, 51446, 51446, 307, 983, 18161, 36170, 366, 5101, 670, 2181, 335, 2398, 1602, 13, 51620, 51620, 814, 5101, 362, 257, 709, 4833, 1230, 295, 9834, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.19154779301133268, "compression_ratio": 1.7720588235294117, "no_speech_prob": 3.4262830013176426e-05}, {"id": 2215, "seek": 640556, "start": 6412.360000000001, "end": 6414.8, "text": " I'll come to this in a minute if I have time.", "tokens": [50364, 1936, 1455, 309, 3571, 337, 264, 1185, 281, 915, 50494, 50494, 733, 295, 665, 10290, 13, 50588, 50588, 583, 456, 307, 746, 1646, 597, 50640, 50640, 575, 281, 360, 365, 12686, 1860, 13, 50704, 50704, 286, 603, 808, 281, 341, 294, 257, 3456, 498, 286, 362, 565, 13, 50826, 50826, 2743, 264, 7285, 11, 264, 731, 307, 4833, 51052, 51052, 498, 321, 362, 670, 2181, 335, 2398, 1602, 9590, 13, 51198, 51198, 759, 291, 362, 670, 2181, 335, 2398, 1602, 3209, 11, 51275, 51275, 309, 311, 709, 3571, 281, 915, 257, 7285, 51348, 51348, 281, 428, 10024, 2445, 11, 597, 51446, 51446, 307, 983, 18161, 36170, 366, 5101, 670, 2181, 335, 2398, 1602, 13, 51620, 51620, 814, 5101, 362, 257, 709, 4833, 1230, 295, 9834, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.19154779301133268, "compression_ratio": 1.7720588235294117, "no_speech_prob": 3.4262830013176426e-05}, {"id": 2216, "seek": 640556, "start": 6414.8, "end": 6419.320000000001, "text": " Also the minimum, the well is larger", "tokens": [50364, 1936, 1455, 309, 3571, 337, 264, 1185, 281, 915, 50494, 50494, 733, 295, 665, 10290, 13, 50588, 50588, 583, 456, 307, 746, 1646, 597, 50640, 50640, 575, 281, 360, 365, 12686, 1860, 13, 50704, 50704, 286, 603, 808, 281, 341, 294, 257, 3456, 498, 286, 362, 565, 13, 50826, 50826, 2743, 264, 7285, 11, 264, 731, 307, 4833, 51052, 51052, 498, 321, 362, 670, 2181, 335, 2398, 1602, 9590, 13, 51198, 51198, 759, 291, 362, 670, 2181, 335, 2398, 1602, 3209, 11, 51275, 51275, 309, 311, 709, 3571, 281, 915, 257, 7285, 51348, 51348, 281, 428, 10024, 2445, 11, 597, 51446, 51446, 307, 983, 18161, 36170, 366, 5101, 670, 2181, 335, 2398, 1602, 13, 51620, 51620, 814, 5101, 362, 257, 709, 4833, 1230, 295, 9834, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.19154779301133268, "compression_ratio": 1.7720588235294117, "no_speech_prob": 3.4262830013176426e-05}, {"id": 2217, "seek": 640556, "start": 6419.320000000001, "end": 6422.240000000001, "text": " if we have overparameterized networks.", "tokens": [50364, 1936, 1455, 309, 3571, 337, 264, 1185, 281, 915, 50494, 50494, 733, 295, 665, 10290, 13, 50588, 50588, 583, 456, 307, 746, 1646, 597, 50640, 50640, 575, 281, 360, 365, 12686, 1860, 13, 50704, 50704, 286, 603, 808, 281, 341, 294, 257, 3456, 498, 286, 362, 565, 13, 50826, 50826, 2743, 264, 7285, 11, 264, 731, 307, 4833, 51052, 51052, 498, 321, 362, 670, 2181, 335, 2398, 1602, 9590, 13, 51198, 51198, 759, 291, 362, 670, 2181, 335, 2398, 1602, 3209, 11, 51275, 51275, 309, 311, 709, 3571, 281, 915, 257, 7285, 51348, 51348, 281, 428, 10024, 2445, 11, 597, 51446, 51446, 307, 983, 18161, 36170, 366, 5101, 670, 2181, 335, 2398, 1602, 13, 51620, 51620, 814, 5101, 362, 257, 709, 4833, 1230, 295, 9834, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.19154779301133268, "compression_ratio": 1.7720588235294117, "no_speech_prob": 3.4262830013176426e-05}, {"id": 2218, "seek": 640556, "start": 6422.240000000001, "end": 6423.780000000001, "text": " If you have overparameterized network,", "tokens": [50364, 1936, 1455, 309, 3571, 337, 264, 1185, 281, 915, 50494, 50494, 733, 295, 665, 10290, 13, 50588, 50588, 583, 456, 307, 746, 1646, 597, 50640, 50640, 575, 281, 360, 365, 12686, 1860, 13, 50704, 50704, 286, 603, 808, 281, 341, 294, 257, 3456, 498, 286, 362, 565, 13, 50826, 50826, 2743, 264, 7285, 11, 264, 731, 307, 4833, 51052, 51052, 498, 321, 362, 670, 2181, 335, 2398, 1602, 9590, 13, 51198, 51198, 759, 291, 362, 670, 2181, 335, 2398, 1602, 3209, 11, 51275, 51275, 309, 311, 709, 3571, 281, 915, 257, 7285, 51348, 51348, 281, 428, 10024, 2445, 11, 597, 51446, 51446, 307, 983, 18161, 36170, 366, 5101, 670, 2181, 335, 2398, 1602, 13, 51620, 51620, 814, 5101, 362, 257, 709, 4833, 1230, 295, 9834, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.19154779301133268, "compression_ratio": 1.7720588235294117, "no_speech_prob": 3.4262830013176426e-05}, {"id": 2219, "seek": 640556, "start": 6423.780000000001, "end": 6425.240000000001, "text": " it's much easier to find a minimum", "tokens": [50364, 1936, 1455, 309, 3571, 337, 264, 1185, 281, 915, 50494, 50494, 733, 295, 665, 10290, 13, 50588, 50588, 583, 456, 307, 746, 1646, 597, 50640, 50640, 575, 281, 360, 365, 12686, 1860, 13, 50704, 50704, 286, 603, 808, 281, 341, 294, 257, 3456, 498, 286, 362, 565, 13, 50826, 50826, 2743, 264, 7285, 11, 264, 731, 307, 4833, 51052, 51052, 498, 321, 362, 670, 2181, 335, 2398, 1602, 9590, 13, 51198, 51198, 759, 291, 362, 670, 2181, 335, 2398, 1602, 3209, 11, 51275, 51275, 309, 311, 709, 3571, 281, 915, 257, 7285, 51348, 51348, 281, 428, 10024, 2445, 11, 597, 51446, 51446, 307, 983, 18161, 36170, 366, 5101, 670, 2181, 335, 2398, 1602, 13, 51620, 51620, 814, 5101, 362, 257, 709, 4833, 1230, 295, 9834, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.19154779301133268, "compression_ratio": 1.7720588235294117, "no_speech_prob": 3.4262830013176426e-05}, {"id": 2220, "seek": 640556, "start": 6425.240000000001, "end": 6427.200000000001, "text": " to your objective function, which", "tokens": [50364, 1936, 1455, 309, 3571, 337, 264, 1185, 281, 915, 50494, 50494, 733, 295, 665, 10290, 13, 50588, 50588, 583, 456, 307, 746, 1646, 597, 50640, 50640, 575, 281, 360, 365, 12686, 1860, 13, 50704, 50704, 286, 603, 808, 281, 341, 294, 257, 3456, 498, 286, 362, 565, 13, 50826, 50826, 2743, 264, 7285, 11, 264, 731, 307, 4833, 51052, 51052, 498, 321, 362, 670, 2181, 335, 2398, 1602, 9590, 13, 51198, 51198, 759, 291, 362, 670, 2181, 335, 2398, 1602, 3209, 11, 51275, 51275, 309, 311, 709, 3571, 281, 915, 257, 7285, 51348, 51348, 281, 428, 10024, 2445, 11, 597, 51446, 51446, 307, 983, 18161, 36170, 366, 5101, 670, 2181, 335, 2398, 1602, 13, 51620, 51620, 814, 5101, 362, 257, 709, 4833, 1230, 295, 9834, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.19154779301133268, "compression_ratio": 1.7720588235294117, "no_speech_prob": 3.4262830013176426e-05}, {"id": 2221, "seek": 640556, "start": 6427.200000000001, "end": 6430.68, "text": " is why neural nets are generally overparameterized.", "tokens": [50364, 1936, 1455, 309, 3571, 337, 264, 1185, 281, 915, 50494, 50494, 733, 295, 665, 10290, 13, 50588, 50588, 583, 456, 307, 746, 1646, 597, 50640, 50640, 575, 281, 360, 365, 12686, 1860, 13, 50704, 50704, 286, 603, 808, 281, 341, 294, 257, 3456, 498, 286, 362, 565, 13, 50826, 50826, 2743, 264, 7285, 11, 264, 731, 307, 4833, 51052, 51052, 498, 321, 362, 670, 2181, 335, 2398, 1602, 9590, 13, 51198, 51198, 759, 291, 362, 670, 2181, 335, 2398, 1602, 3209, 11, 51275, 51275, 309, 311, 709, 3571, 281, 915, 257, 7285, 51348, 51348, 281, 428, 10024, 2445, 11, 597, 51446, 51446, 307, 983, 18161, 36170, 366, 5101, 670, 2181, 335, 2398, 1602, 13, 51620, 51620, 814, 5101, 362, 257, 709, 4833, 1230, 295, 9834, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.19154779301133268, "compression_ratio": 1.7720588235294117, "no_speech_prob": 3.4262830013176426e-05}, {"id": 2222, "seek": 640556, "start": 6430.68, "end": 6433.92, "text": " They generally have a much larger number of parameters", "tokens": [50364, 1936, 1455, 309, 3571, 337, 264, 1185, 281, 915, 50494, 50494, 733, 295, 665, 10290, 13, 50588, 50588, 583, 456, 307, 746, 1646, 597, 50640, 50640, 575, 281, 360, 365, 12686, 1860, 13, 50704, 50704, 286, 603, 808, 281, 341, 294, 257, 3456, 498, 286, 362, 565, 13, 50826, 50826, 2743, 264, 7285, 11, 264, 731, 307, 4833, 51052, 51052, 498, 321, 362, 670, 2181, 335, 2398, 1602, 9590, 13, 51198, 51198, 759, 291, 362, 670, 2181, 335, 2398, 1602, 3209, 11, 51275, 51275, 309, 311, 709, 3571, 281, 915, 257, 7285, 51348, 51348, 281, 428, 10024, 2445, 11, 597, 51446, 51446, 307, 983, 18161, 36170, 366, 5101, 670, 2181, 335, 2398, 1602, 13, 51620, 51620, 814, 5101, 362, 257, 709, 4833, 1230, 295, 9834, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.19154779301133268, "compression_ratio": 1.7720588235294117, "no_speech_prob": 3.4262830013176426e-05}, {"id": 2223, "seek": 643392, "start": 6433.92, "end": 6435.96, "text": " than what you would think is necessary.", "tokens": [50364, 813, 437, 291, 576, 519, 307, 4818, 13, 50466, 50466, 400, 562, 291, 652, 552, 3801, 11, 436, 589, 1101, 2673, 13, 50626, 50626, 467, 311, 406, 1009, 264, 1389, 11, 457, 309, 311, 257, 588, 6369, 14029, 50768, 50768, 466, 341, 13, 50856, 50856, 492, 603, 751, 466, 341, 1780, 13, 50948, 50948, 639, 307, 264, 472, 935, 286, 528, 281, 652, 13, 51028, 51028, 400, 309, 311, 264, 1186, 300, 264, 1778, 983, 7914, 366, 665, 51350, 51350, 307, 300, 264, 1002, 307, 10199, 2628, 13, 51486, 51486, 440, 43276, 901, 1002, 294, 1729, 11, 51574, 51574, 457, 264, 1002, 294, 2674, 11, 264, 6445, 498, 291, 528, 11, 51674, 51674, 307, 10199, 2628, 13, 51720, 51720, 708, 775, 300, 914, 30, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16962619125843048, "compression_ratio": 1.7224334600760456, "no_speech_prob": 3.426336479606107e-05}, {"id": 2224, "seek": 643392, "start": 6435.96, "end": 6439.16, "text": " And when you make them bigger, they work better usually.", "tokens": [50364, 813, 437, 291, 576, 519, 307, 4818, 13, 50466, 50466, 400, 562, 291, 652, 552, 3801, 11, 436, 589, 1101, 2673, 13, 50626, 50626, 467, 311, 406, 1009, 264, 1389, 11, 457, 309, 311, 257, 588, 6369, 14029, 50768, 50768, 466, 341, 13, 50856, 50856, 492, 603, 751, 466, 341, 1780, 13, 50948, 50948, 639, 307, 264, 472, 935, 286, 528, 281, 652, 13, 51028, 51028, 400, 309, 311, 264, 1186, 300, 264, 1778, 983, 7914, 366, 665, 51350, 51350, 307, 300, 264, 1002, 307, 10199, 2628, 13, 51486, 51486, 440, 43276, 901, 1002, 294, 1729, 11, 51574, 51574, 457, 264, 1002, 294, 2674, 11, 264, 6445, 498, 291, 528, 11, 51674, 51674, 307, 10199, 2628, 13, 51720, 51720, 708, 775, 300, 914, 30, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16962619125843048, "compression_ratio": 1.7224334600760456, "no_speech_prob": 3.426336479606107e-05}, {"id": 2225, "seek": 643392, "start": 6439.16, "end": 6442.0, "text": " It's not always the case, but it's a very curious phenomenon", "tokens": [50364, 813, 437, 291, 576, 519, 307, 4818, 13, 50466, 50466, 400, 562, 291, 652, 552, 3801, 11, 436, 589, 1101, 2673, 13, 50626, 50626, 467, 311, 406, 1009, 264, 1389, 11, 457, 309, 311, 257, 588, 6369, 14029, 50768, 50768, 466, 341, 13, 50856, 50856, 492, 603, 751, 466, 341, 1780, 13, 50948, 50948, 639, 307, 264, 472, 935, 286, 528, 281, 652, 13, 51028, 51028, 400, 309, 311, 264, 1186, 300, 264, 1778, 983, 7914, 366, 665, 51350, 51350, 307, 300, 264, 1002, 307, 10199, 2628, 13, 51486, 51486, 440, 43276, 901, 1002, 294, 1729, 11, 51574, 51574, 457, 264, 1002, 294, 2674, 11, 264, 6445, 498, 291, 528, 11, 51674, 51674, 307, 10199, 2628, 13, 51720, 51720, 708, 775, 300, 914, 30, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16962619125843048, "compression_ratio": 1.7224334600760456, "no_speech_prob": 3.426336479606107e-05}, {"id": 2226, "seek": 643392, "start": 6442.0, "end": 6443.76, "text": " about this.", "tokens": [50364, 813, 437, 291, 576, 519, 307, 4818, 13, 50466, 50466, 400, 562, 291, 652, 552, 3801, 11, 436, 589, 1101, 2673, 13, 50626, 50626, 467, 311, 406, 1009, 264, 1389, 11, 457, 309, 311, 257, 588, 6369, 14029, 50768, 50768, 466, 341, 13, 50856, 50856, 492, 603, 751, 466, 341, 1780, 13, 50948, 50948, 639, 307, 264, 472, 935, 286, 528, 281, 652, 13, 51028, 51028, 400, 309, 311, 264, 1186, 300, 264, 1778, 983, 7914, 366, 665, 51350, 51350, 307, 300, 264, 1002, 307, 10199, 2628, 13, 51486, 51486, 440, 43276, 901, 1002, 294, 1729, 11, 51574, 51574, 457, 264, 1002, 294, 2674, 11, 264, 6445, 498, 291, 528, 11, 51674, 51674, 307, 10199, 2628, 13, 51720, 51720, 708, 775, 300, 914, 30, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16962619125843048, "compression_ratio": 1.7224334600760456, "no_speech_prob": 3.426336479606107e-05}, {"id": 2227, "seek": 643392, "start": 6443.76, "end": 6445.6, "text": " We'll talk about this later.", "tokens": [50364, 813, 437, 291, 576, 519, 307, 4818, 13, 50466, 50466, 400, 562, 291, 652, 552, 3801, 11, 436, 589, 1101, 2673, 13, 50626, 50626, 467, 311, 406, 1009, 264, 1389, 11, 457, 309, 311, 257, 588, 6369, 14029, 50768, 50768, 466, 341, 13, 50856, 50856, 492, 603, 751, 466, 341, 1780, 13, 50948, 50948, 639, 307, 264, 472, 935, 286, 528, 281, 652, 13, 51028, 51028, 400, 309, 311, 264, 1186, 300, 264, 1778, 983, 7914, 366, 665, 51350, 51350, 307, 300, 264, 1002, 307, 10199, 2628, 13, 51486, 51486, 440, 43276, 901, 1002, 294, 1729, 11, 51574, 51574, 457, 264, 1002, 294, 2674, 11, 264, 6445, 498, 291, 528, 11, 51674, 51674, 307, 10199, 2628, 13, 51720, 51720, 708, 775, 300, 914, 30, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16962619125843048, "compression_ratio": 1.7224334600760456, "no_speech_prob": 3.426336479606107e-05}, {"id": 2228, "seek": 643392, "start": 6445.6, "end": 6447.2, "text": " This is the one point I want to make.", "tokens": [50364, 813, 437, 291, 576, 519, 307, 4818, 13, 50466, 50466, 400, 562, 291, 652, 552, 3801, 11, 436, 589, 1101, 2673, 13, 50626, 50626, 467, 311, 406, 1009, 264, 1389, 11, 457, 309, 311, 257, 588, 6369, 14029, 50768, 50768, 466, 341, 13, 50856, 50856, 492, 603, 751, 466, 341, 1780, 13, 50948, 50948, 639, 307, 264, 472, 935, 286, 528, 281, 652, 13, 51028, 51028, 400, 309, 311, 264, 1186, 300, 264, 1778, 983, 7914, 366, 665, 51350, 51350, 307, 300, 264, 1002, 307, 10199, 2628, 13, 51486, 51486, 440, 43276, 901, 1002, 294, 1729, 11, 51574, 51574, 457, 264, 1002, 294, 2674, 11, 264, 6445, 498, 291, 528, 11, 51674, 51674, 307, 10199, 2628, 13, 51720, 51720, 708, 775, 300, 914, 30, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16962619125843048, "compression_ratio": 1.7224334600760456, "no_speech_prob": 3.426336479606107e-05}, {"id": 2229, "seek": 643392, "start": 6447.2, "end": 6453.64, "text": " And it's the fact that the reason why layers are good", "tokens": [50364, 813, 437, 291, 576, 519, 307, 4818, 13, 50466, 50466, 400, 562, 291, 652, 552, 3801, 11, 436, 589, 1101, 2673, 13, 50626, 50626, 467, 311, 406, 1009, 264, 1389, 11, 457, 309, 311, 257, 588, 6369, 14029, 50768, 50768, 466, 341, 13, 50856, 50856, 492, 603, 751, 466, 341, 1780, 13, 50948, 50948, 639, 307, 264, 472, 935, 286, 528, 281, 652, 13, 51028, 51028, 400, 309, 311, 264, 1186, 300, 264, 1778, 983, 7914, 366, 665, 51350, 51350, 307, 300, 264, 1002, 307, 10199, 2628, 13, 51486, 51486, 440, 43276, 901, 1002, 294, 1729, 11, 51574, 51574, 457, 264, 1002, 294, 2674, 11, 264, 6445, 498, 291, 528, 11, 51674, 51674, 307, 10199, 2628, 13, 51720, 51720, 708, 775, 300, 914, 30, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16962619125843048, "compression_ratio": 1.7224334600760456, "no_speech_prob": 3.426336479606107e-05}, {"id": 2230, "seek": 643392, "start": 6453.64, "end": 6456.36, "text": " is that the world is compositional.", "tokens": [50364, 813, 437, 291, 576, 519, 307, 4818, 13, 50466, 50466, 400, 562, 291, 652, 552, 3801, 11, 436, 589, 1101, 2673, 13, 50626, 50626, 467, 311, 406, 1009, 264, 1389, 11, 457, 309, 311, 257, 588, 6369, 14029, 50768, 50768, 466, 341, 13, 50856, 50856, 492, 603, 751, 466, 341, 1780, 13, 50948, 50948, 639, 307, 264, 472, 935, 286, 528, 281, 652, 13, 51028, 51028, 400, 309, 311, 264, 1186, 300, 264, 1778, 983, 7914, 366, 665, 51350, 51350, 307, 300, 264, 1002, 307, 10199, 2628, 13, 51486, 51486, 440, 43276, 901, 1002, 294, 1729, 11, 51574, 51574, 457, 264, 1002, 294, 2674, 11, 264, 6445, 498, 291, 528, 11, 51674, 51674, 307, 10199, 2628, 13, 51720, 51720, 708, 775, 300, 914, 30, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16962619125843048, "compression_ratio": 1.7224334600760456, "no_speech_prob": 3.426336479606107e-05}, {"id": 2231, "seek": 643392, "start": 6456.36, "end": 6458.12, "text": " The perceptual world in particular,", "tokens": [50364, 813, 437, 291, 576, 519, 307, 4818, 13, 50466, 50466, 400, 562, 291, 652, 552, 3801, 11, 436, 589, 1101, 2673, 13, 50626, 50626, 467, 311, 406, 1009, 264, 1389, 11, 457, 309, 311, 257, 588, 6369, 14029, 50768, 50768, 466, 341, 13, 50856, 50856, 492, 603, 751, 466, 341, 1780, 13, 50948, 50948, 639, 307, 264, 472, 935, 286, 528, 281, 652, 13, 51028, 51028, 400, 309, 311, 264, 1186, 300, 264, 1778, 983, 7914, 366, 665, 51350, 51350, 307, 300, 264, 1002, 307, 10199, 2628, 13, 51486, 51486, 440, 43276, 901, 1002, 294, 1729, 11, 51574, 51574, 457, 264, 1002, 294, 2674, 11, 264, 6445, 498, 291, 528, 11, 51674, 51674, 307, 10199, 2628, 13, 51720, 51720, 708, 775, 300, 914, 30, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16962619125843048, "compression_ratio": 1.7224334600760456, "no_speech_prob": 3.426336479606107e-05}, {"id": 2232, "seek": 643392, "start": 6458.12, "end": 6460.12, "text": " but the world in general, the universe if you want,", "tokens": [50364, 813, 437, 291, 576, 519, 307, 4818, 13, 50466, 50466, 400, 562, 291, 652, 552, 3801, 11, 436, 589, 1101, 2673, 13, 50626, 50626, 467, 311, 406, 1009, 264, 1389, 11, 457, 309, 311, 257, 588, 6369, 14029, 50768, 50768, 466, 341, 13, 50856, 50856, 492, 603, 751, 466, 341, 1780, 13, 50948, 50948, 639, 307, 264, 472, 935, 286, 528, 281, 652, 13, 51028, 51028, 400, 309, 311, 264, 1186, 300, 264, 1778, 983, 7914, 366, 665, 51350, 51350, 307, 300, 264, 1002, 307, 10199, 2628, 13, 51486, 51486, 440, 43276, 901, 1002, 294, 1729, 11, 51574, 51574, 457, 264, 1002, 294, 2674, 11, 264, 6445, 498, 291, 528, 11, 51674, 51674, 307, 10199, 2628, 13, 51720, 51720, 708, 775, 300, 914, 30, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16962619125843048, "compression_ratio": 1.7224334600760456, "no_speech_prob": 3.426336479606107e-05}, {"id": 2233, "seek": 643392, "start": 6460.12, "end": 6461.04, "text": " is compositional.", "tokens": [50364, 813, 437, 291, 576, 519, 307, 4818, 13, 50466, 50466, 400, 562, 291, 652, 552, 3801, 11, 436, 589, 1101, 2673, 13, 50626, 50626, 467, 311, 406, 1009, 264, 1389, 11, 457, 309, 311, 257, 588, 6369, 14029, 50768, 50768, 466, 341, 13, 50856, 50856, 492, 603, 751, 466, 341, 1780, 13, 50948, 50948, 639, 307, 264, 472, 935, 286, 528, 281, 652, 13, 51028, 51028, 400, 309, 311, 264, 1186, 300, 264, 1778, 983, 7914, 366, 665, 51350, 51350, 307, 300, 264, 1002, 307, 10199, 2628, 13, 51486, 51486, 440, 43276, 901, 1002, 294, 1729, 11, 51574, 51574, 457, 264, 1002, 294, 2674, 11, 264, 6445, 498, 291, 528, 11, 51674, 51674, 307, 10199, 2628, 13, 51720, 51720, 708, 775, 300, 914, 30, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16962619125843048, "compression_ratio": 1.7224334600760456, "no_speech_prob": 3.426336479606107e-05}, {"id": 2234, "seek": 643392, "start": 6461.04, "end": 6461.84, "text": " What does that mean?", "tokens": [50364, 813, 437, 291, 576, 519, 307, 4818, 13, 50466, 50466, 400, 562, 291, 652, 552, 3801, 11, 436, 589, 1101, 2673, 13, 50626, 50626, 467, 311, 406, 1009, 264, 1389, 11, 457, 309, 311, 257, 588, 6369, 14029, 50768, 50768, 466, 341, 13, 50856, 50856, 492, 603, 751, 466, 341, 1780, 13, 50948, 50948, 639, 307, 264, 472, 935, 286, 528, 281, 652, 13, 51028, 51028, 400, 309, 311, 264, 1186, 300, 264, 1778, 983, 7914, 366, 665, 51350, 51350, 307, 300, 264, 1002, 307, 10199, 2628, 13, 51486, 51486, 440, 43276, 901, 1002, 294, 1729, 11, 51574, 51574, 457, 264, 1002, 294, 2674, 11, 264, 6445, 498, 291, 528, 11, 51674, 51674, 307, 10199, 2628, 13, 51720, 51720, 708, 775, 300, 914, 30, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.16962619125843048, "compression_ratio": 1.7224334600760456, "no_speech_prob": 3.426336479606107e-05}, {"id": 2235, "seek": 646184, "start": 6461.84, "end": 6465.32, "text": " It means that at the level of the universe,", "tokens": [50364, 467, 1355, 300, 412, 264, 1496, 295, 264, 6445, 11, 50538, 50538, 321, 362, 16429, 10007, 13, 50638, 50638, 814, 22364, 281, 1254, 1570, 16429, 10007, 13, 50776, 50776, 3950, 22364, 281, 1254, 16871, 13, 50844, 50844, 3950, 22364, 281, 1254, 13093, 13, 50919, 50919, 3950, 22364, 281, 1254, 5319, 13, 51000, 51000, 3950, 22364, 281, 1254, 9227, 11, 6565, 11, 1030, 11458, 11, 51276, 51276, 293, 12388, 11, 8026, 11, 1030, 11458, 13, 51436, 51436, 509, 362, 264, 912, 733, 295, 22333, 337, 5267, 13, 51594, 51594, 509, 362, 18668, 13, 51660, 51660, 814, 22364, 281, 1254, 8819, 293, 2487, 892, 293, 2184, 18290, 11, 3166, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1603058995427312, "compression_ratio": 2.1323529411764706, "no_speech_prob": 4.399363024276681e-05}, {"id": 2236, "seek": 646184, "start": 6465.32, "end": 6467.32, "text": " we have elementary particles.", "tokens": [50364, 467, 1355, 300, 412, 264, 1496, 295, 264, 6445, 11, 50538, 50538, 321, 362, 16429, 10007, 13, 50638, 50638, 814, 22364, 281, 1254, 1570, 16429, 10007, 13, 50776, 50776, 3950, 22364, 281, 1254, 16871, 13, 50844, 50844, 3950, 22364, 281, 1254, 13093, 13, 50919, 50919, 3950, 22364, 281, 1254, 5319, 13, 51000, 51000, 3950, 22364, 281, 1254, 9227, 11, 6565, 11, 1030, 11458, 11, 51276, 51276, 293, 12388, 11, 8026, 11, 1030, 11458, 13, 51436, 51436, 509, 362, 264, 912, 733, 295, 22333, 337, 5267, 13, 51594, 51594, 509, 362, 18668, 13, 51660, 51660, 814, 22364, 281, 1254, 8819, 293, 2487, 892, 293, 2184, 18290, 11, 3166, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1603058995427312, "compression_ratio": 2.1323529411764706, "no_speech_prob": 4.399363024276681e-05}, {"id": 2237, "seek": 646184, "start": 6467.32, "end": 6470.08, "text": " They assemble to form less elementary particles.", "tokens": [50364, 467, 1355, 300, 412, 264, 1496, 295, 264, 6445, 11, 50538, 50538, 321, 362, 16429, 10007, 13, 50638, 50638, 814, 22364, 281, 1254, 1570, 16429, 10007, 13, 50776, 50776, 3950, 22364, 281, 1254, 16871, 13, 50844, 50844, 3950, 22364, 281, 1254, 13093, 13, 50919, 50919, 3950, 22364, 281, 1254, 5319, 13, 51000, 51000, 3950, 22364, 281, 1254, 9227, 11, 6565, 11, 1030, 11458, 11, 51276, 51276, 293, 12388, 11, 8026, 11, 1030, 11458, 13, 51436, 51436, 509, 362, 264, 912, 733, 295, 22333, 337, 5267, 13, 51594, 51594, 509, 362, 18668, 13, 51660, 51660, 814, 22364, 281, 1254, 8819, 293, 2487, 892, 293, 2184, 18290, 11, 3166, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1603058995427312, "compression_ratio": 2.1323529411764706, "no_speech_prob": 4.399363024276681e-05}, {"id": 2238, "seek": 646184, "start": 6470.08, "end": 6471.4400000000005, "text": " Those assemble to form atoms.", "tokens": [50364, 467, 1355, 300, 412, 264, 1496, 295, 264, 6445, 11, 50538, 50538, 321, 362, 16429, 10007, 13, 50638, 50638, 814, 22364, 281, 1254, 1570, 16429, 10007, 13, 50776, 50776, 3950, 22364, 281, 1254, 16871, 13, 50844, 50844, 3950, 22364, 281, 1254, 13093, 13, 50919, 50919, 3950, 22364, 281, 1254, 5319, 13, 51000, 51000, 3950, 22364, 281, 1254, 9227, 11, 6565, 11, 1030, 11458, 11, 51276, 51276, 293, 12388, 11, 8026, 11, 1030, 11458, 13, 51436, 51436, 509, 362, 264, 912, 733, 295, 22333, 337, 5267, 13, 51594, 51594, 509, 362, 18668, 13, 51660, 51660, 814, 22364, 281, 1254, 8819, 293, 2487, 892, 293, 2184, 18290, 11, 3166, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1603058995427312, "compression_ratio": 2.1323529411764706, "no_speech_prob": 4.399363024276681e-05}, {"id": 2239, "seek": 646184, "start": 6471.4400000000005, "end": 6472.9400000000005, "text": " Those assemble to form molecules.", "tokens": [50364, 467, 1355, 300, 412, 264, 1496, 295, 264, 6445, 11, 50538, 50538, 321, 362, 16429, 10007, 13, 50638, 50638, 814, 22364, 281, 1254, 1570, 16429, 10007, 13, 50776, 50776, 3950, 22364, 281, 1254, 16871, 13, 50844, 50844, 3950, 22364, 281, 1254, 13093, 13, 50919, 50919, 3950, 22364, 281, 1254, 5319, 13, 51000, 51000, 3950, 22364, 281, 1254, 9227, 11, 6565, 11, 1030, 11458, 11, 51276, 51276, 293, 12388, 11, 8026, 11, 1030, 11458, 13, 51436, 51436, 509, 362, 264, 912, 733, 295, 22333, 337, 5267, 13, 51594, 51594, 509, 362, 18668, 13, 51660, 51660, 814, 22364, 281, 1254, 8819, 293, 2487, 892, 293, 2184, 18290, 11, 3166, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1603058995427312, "compression_ratio": 2.1323529411764706, "no_speech_prob": 4.399363024276681e-05}, {"id": 2240, "seek": 646184, "start": 6472.9400000000005, "end": 6474.56, "text": " Those assemble to form materials.", "tokens": [50364, 467, 1355, 300, 412, 264, 1496, 295, 264, 6445, 11, 50538, 50538, 321, 362, 16429, 10007, 13, 50638, 50638, 814, 22364, 281, 1254, 1570, 16429, 10007, 13, 50776, 50776, 3950, 22364, 281, 1254, 16871, 13, 50844, 50844, 3950, 22364, 281, 1254, 13093, 13, 50919, 50919, 3950, 22364, 281, 1254, 5319, 13, 51000, 51000, 3950, 22364, 281, 1254, 9227, 11, 6565, 11, 1030, 11458, 11, 51276, 51276, 293, 12388, 11, 8026, 11, 1030, 11458, 13, 51436, 51436, 509, 362, 264, 912, 733, 295, 22333, 337, 5267, 13, 51594, 51594, 509, 362, 18668, 13, 51660, 51660, 814, 22364, 281, 1254, 8819, 293, 2487, 892, 293, 2184, 18290, 11, 3166, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1603058995427312, "compression_ratio": 2.1323529411764706, "no_speech_prob": 4.399363024276681e-05}, {"id": 2241, "seek": 646184, "start": 6474.56, "end": 6480.08, "text": " Those assemble to form structures, objects, et cetera,", "tokens": [50364, 467, 1355, 300, 412, 264, 1496, 295, 264, 6445, 11, 50538, 50538, 321, 362, 16429, 10007, 13, 50638, 50638, 814, 22364, 281, 1254, 1570, 16429, 10007, 13, 50776, 50776, 3950, 22364, 281, 1254, 16871, 13, 50844, 50844, 3950, 22364, 281, 1254, 13093, 13, 50919, 50919, 3950, 22364, 281, 1254, 5319, 13, 51000, 51000, 3950, 22364, 281, 1254, 9227, 11, 6565, 11, 1030, 11458, 11, 51276, 51276, 293, 12388, 11, 8026, 11, 1030, 11458, 13, 51436, 51436, 509, 362, 264, 912, 733, 295, 22333, 337, 5267, 13, 51594, 51594, 509, 362, 18668, 13, 51660, 51660, 814, 22364, 281, 1254, 8819, 293, 2487, 892, 293, 2184, 18290, 11, 3166, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1603058995427312, "compression_ratio": 2.1323529411764706, "no_speech_prob": 4.399363024276681e-05}, {"id": 2242, "seek": 646184, "start": 6480.08, "end": 6483.28, "text": " and environments, scenes, et cetera.", "tokens": [50364, 467, 1355, 300, 412, 264, 1496, 295, 264, 6445, 11, 50538, 50538, 321, 362, 16429, 10007, 13, 50638, 50638, 814, 22364, 281, 1254, 1570, 16429, 10007, 13, 50776, 50776, 3950, 22364, 281, 1254, 16871, 13, 50844, 50844, 3950, 22364, 281, 1254, 13093, 13, 50919, 50919, 3950, 22364, 281, 1254, 5319, 13, 51000, 51000, 3950, 22364, 281, 1254, 9227, 11, 6565, 11, 1030, 11458, 11, 51276, 51276, 293, 12388, 11, 8026, 11, 1030, 11458, 13, 51436, 51436, 509, 362, 264, 912, 733, 295, 22333, 337, 5267, 13, 51594, 51594, 509, 362, 18668, 13, 51660, 51660, 814, 22364, 281, 1254, 8819, 293, 2487, 892, 293, 2184, 18290, 11, 3166, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1603058995427312, "compression_ratio": 2.1323529411764706, "no_speech_prob": 4.399363024276681e-05}, {"id": 2243, "seek": 646184, "start": 6483.28, "end": 6486.4400000000005, "text": " You have the same kind of hierarchy for images.", "tokens": [50364, 467, 1355, 300, 412, 264, 1496, 295, 264, 6445, 11, 50538, 50538, 321, 362, 16429, 10007, 13, 50638, 50638, 814, 22364, 281, 1254, 1570, 16429, 10007, 13, 50776, 50776, 3950, 22364, 281, 1254, 16871, 13, 50844, 50844, 3950, 22364, 281, 1254, 13093, 13, 50919, 50919, 3950, 22364, 281, 1254, 5319, 13, 51000, 51000, 3950, 22364, 281, 1254, 9227, 11, 6565, 11, 1030, 11458, 11, 51276, 51276, 293, 12388, 11, 8026, 11, 1030, 11458, 13, 51436, 51436, 509, 362, 264, 912, 733, 295, 22333, 337, 5267, 13, 51594, 51594, 509, 362, 18668, 13, 51660, 51660, 814, 22364, 281, 1254, 8819, 293, 2487, 892, 293, 2184, 18290, 11, 3166, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1603058995427312, "compression_ratio": 2.1323529411764706, "no_speech_prob": 4.399363024276681e-05}, {"id": 2244, "seek": 646184, "start": 6486.4400000000005, "end": 6487.76, "text": " You have pixels.", "tokens": [50364, 467, 1355, 300, 412, 264, 1496, 295, 264, 6445, 11, 50538, 50538, 321, 362, 16429, 10007, 13, 50638, 50638, 814, 22364, 281, 1254, 1570, 16429, 10007, 13, 50776, 50776, 3950, 22364, 281, 1254, 16871, 13, 50844, 50844, 3950, 22364, 281, 1254, 13093, 13, 50919, 50919, 3950, 22364, 281, 1254, 5319, 13, 51000, 51000, 3950, 22364, 281, 1254, 9227, 11, 6565, 11, 1030, 11458, 11, 51276, 51276, 293, 12388, 11, 8026, 11, 1030, 11458, 13, 51436, 51436, 509, 362, 264, 912, 733, 295, 22333, 337, 5267, 13, 51594, 51594, 509, 362, 18668, 13, 51660, 51660, 814, 22364, 281, 1254, 8819, 293, 2487, 892, 293, 2184, 18290, 11, 3166, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1603058995427312, "compression_ratio": 2.1323529411764706, "no_speech_prob": 4.399363024276681e-05}, {"id": 2245, "seek": 646184, "start": 6487.76, "end": 6491.52, "text": " They assemble to form edges and textons and motifs, parts", "tokens": [50364, 467, 1355, 300, 412, 264, 1496, 295, 264, 6445, 11, 50538, 50538, 321, 362, 16429, 10007, 13, 50638, 50638, 814, 22364, 281, 1254, 1570, 16429, 10007, 13, 50776, 50776, 3950, 22364, 281, 1254, 16871, 13, 50844, 50844, 3950, 22364, 281, 1254, 13093, 13, 50919, 50919, 3950, 22364, 281, 1254, 5319, 13, 51000, 51000, 3950, 22364, 281, 1254, 9227, 11, 6565, 11, 1030, 11458, 11, 51276, 51276, 293, 12388, 11, 8026, 11, 1030, 11458, 13, 51436, 51436, 509, 362, 264, 912, 733, 295, 22333, 337, 5267, 13, 51594, 51594, 509, 362, 18668, 13, 51660, 51660, 814, 22364, 281, 1254, 8819, 293, 2487, 892, 293, 2184, 18290, 11, 3166, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1603058995427312, "compression_ratio": 2.1323529411764706, "no_speech_prob": 4.399363024276681e-05}, {"id": 2246, "seek": 649152, "start": 6491.52, "end": 6492.68, "text": " and objects.", "tokens": [50364, 293, 6565, 13, 50422, 50422, 682, 2487, 11, 291, 362, 4342, 300, 22364, 281, 1254, 2283, 11, 50550, 50550, 1349, 3935, 11, 49072, 11, 16579, 11, 3676, 13, 50642, 50642, 682, 6218, 11, 291, 362, 6218, 10938, 50760, 50760, 300, 22364, 281, 1254, 733, 295, 16429, 3263, 11, 10216, 11, 51052, 51052, 30754, 443, 279, 11, 45364, 11, 2283, 11, 1030, 11458, 13, 51240, 51240, 407, 291, 362, 341, 733, 295, 10199, 2628, 22333, 51332, 51332, 294, 257, 688, 295, 3303, 12354, 13, 51424, 51424, 400, 341, 307, 437, 1669, 264, 1002, 25648, 13, 51544, 51544, 821, 311, 341, 4618, 6513, 538, 20812, 23486, 11, 51674, 51674, 264, 881, 14036, 40128, 30633, 551, 466, 264, 1002, 51770, 51770, 307, 300, 264, 1002, 307, 10753, 30633, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14669642815223108, "compression_ratio": 1.8218181818181818, "no_speech_prob": 2.2118736524134874e-05}, {"id": 2247, "seek": 649152, "start": 6492.68, "end": 6495.240000000001, "text": " In text, you have characters that assemble to form words,", "tokens": [50364, 293, 6565, 13, 50422, 50422, 682, 2487, 11, 291, 362, 4342, 300, 22364, 281, 1254, 2283, 11, 50550, 50550, 1349, 3935, 11, 49072, 11, 16579, 11, 3676, 13, 50642, 50642, 682, 6218, 11, 291, 362, 6218, 10938, 50760, 50760, 300, 22364, 281, 1254, 733, 295, 16429, 3263, 11, 10216, 11, 51052, 51052, 30754, 443, 279, 11, 45364, 11, 2283, 11, 1030, 11458, 13, 51240, 51240, 407, 291, 362, 341, 733, 295, 10199, 2628, 22333, 51332, 51332, 294, 257, 688, 295, 3303, 12354, 13, 51424, 51424, 400, 341, 307, 437, 1669, 264, 1002, 25648, 13, 51544, 51544, 821, 311, 341, 4618, 6513, 538, 20812, 23486, 11, 51674, 51674, 264, 881, 14036, 40128, 30633, 551, 466, 264, 1002, 51770, 51770, 307, 300, 264, 1002, 307, 10753, 30633, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14669642815223108, "compression_ratio": 1.8218181818181818, "no_speech_prob": 2.2118736524134874e-05}, {"id": 2248, "seek": 649152, "start": 6495.240000000001, "end": 6497.080000000001, "text": " word groups, clauses, sentences, stories.", "tokens": [50364, 293, 6565, 13, 50422, 50422, 682, 2487, 11, 291, 362, 4342, 300, 22364, 281, 1254, 2283, 11, 50550, 50550, 1349, 3935, 11, 49072, 11, 16579, 11, 3676, 13, 50642, 50642, 682, 6218, 11, 291, 362, 6218, 10938, 50760, 50760, 300, 22364, 281, 1254, 733, 295, 16429, 3263, 11, 10216, 11, 51052, 51052, 30754, 443, 279, 11, 45364, 11, 2283, 11, 1030, 11458, 13, 51240, 51240, 407, 291, 362, 341, 733, 295, 10199, 2628, 22333, 51332, 51332, 294, 257, 688, 295, 3303, 12354, 13, 51424, 51424, 400, 341, 307, 437, 1669, 264, 1002, 25648, 13, 51544, 51544, 821, 311, 341, 4618, 6513, 538, 20812, 23486, 11, 51674, 51674, 264, 881, 14036, 40128, 30633, 551, 466, 264, 1002, 51770, 51770, 307, 300, 264, 1002, 307, 10753, 30633, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14669642815223108, "compression_ratio": 1.8218181818181818, "no_speech_prob": 2.2118736524134874e-05}, {"id": 2249, "seek": 649152, "start": 6497.080000000001, "end": 6499.4400000000005, "text": " In speech, you have speech samples", "tokens": [50364, 293, 6565, 13, 50422, 50422, 682, 2487, 11, 291, 362, 4342, 300, 22364, 281, 1254, 2283, 11, 50550, 50550, 1349, 3935, 11, 49072, 11, 16579, 11, 3676, 13, 50642, 50642, 682, 6218, 11, 291, 362, 6218, 10938, 50760, 50760, 300, 22364, 281, 1254, 733, 295, 16429, 3263, 11, 10216, 11, 51052, 51052, 30754, 443, 279, 11, 45364, 11, 2283, 11, 1030, 11458, 13, 51240, 51240, 407, 291, 362, 341, 733, 295, 10199, 2628, 22333, 51332, 51332, 294, 257, 688, 295, 3303, 12354, 13, 51424, 51424, 400, 341, 307, 437, 1669, 264, 1002, 25648, 13, 51544, 51544, 821, 311, 341, 4618, 6513, 538, 20812, 23486, 11, 51674, 51674, 264, 881, 14036, 40128, 30633, 551, 466, 264, 1002, 51770, 51770, 307, 300, 264, 1002, 307, 10753, 30633, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14669642815223108, "compression_ratio": 1.8218181818181818, "no_speech_prob": 2.2118736524134874e-05}, {"id": 2250, "seek": 649152, "start": 6499.4400000000005, "end": 6505.280000000001, "text": " that assemble to form kind of elementary sounds, phones,", "tokens": [50364, 293, 6565, 13, 50422, 50422, 682, 2487, 11, 291, 362, 4342, 300, 22364, 281, 1254, 2283, 11, 50550, 50550, 1349, 3935, 11, 49072, 11, 16579, 11, 3676, 13, 50642, 50642, 682, 6218, 11, 291, 362, 6218, 10938, 50760, 50760, 300, 22364, 281, 1254, 733, 295, 16429, 3263, 11, 10216, 11, 51052, 51052, 30754, 443, 279, 11, 45364, 11, 2283, 11, 1030, 11458, 13, 51240, 51240, 407, 291, 362, 341, 733, 295, 10199, 2628, 22333, 51332, 51332, 294, 257, 688, 295, 3303, 12354, 13, 51424, 51424, 400, 341, 307, 437, 1669, 264, 1002, 25648, 13, 51544, 51544, 821, 311, 341, 4618, 6513, 538, 20812, 23486, 11, 51674, 51674, 264, 881, 14036, 40128, 30633, 551, 466, 264, 1002, 51770, 51770, 307, 300, 264, 1002, 307, 10753, 30633, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14669642815223108, "compression_ratio": 1.8218181818181818, "no_speech_prob": 2.2118736524134874e-05}, {"id": 2251, "seek": 649152, "start": 6505.280000000001, "end": 6509.040000000001, "text": " phonemes, syllables, words, et cetera.", "tokens": [50364, 293, 6565, 13, 50422, 50422, 682, 2487, 11, 291, 362, 4342, 300, 22364, 281, 1254, 2283, 11, 50550, 50550, 1349, 3935, 11, 49072, 11, 16579, 11, 3676, 13, 50642, 50642, 682, 6218, 11, 291, 362, 6218, 10938, 50760, 50760, 300, 22364, 281, 1254, 733, 295, 16429, 3263, 11, 10216, 11, 51052, 51052, 30754, 443, 279, 11, 45364, 11, 2283, 11, 1030, 11458, 13, 51240, 51240, 407, 291, 362, 341, 733, 295, 10199, 2628, 22333, 51332, 51332, 294, 257, 688, 295, 3303, 12354, 13, 51424, 51424, 400, 341, 307, 437, 1669, 264, 1002, 25648, 13, 51544, 51544, 821, 311, 341, 4618, 6513, 538, 20812, 23486, 11, 51674, 51674, 264, 881, 14036, 40128, 30633, 551, 466, 264, 1002, 51770, 51770, 307, 300, 264, 1002, 307, 10753, 30633, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14669642815223108, "compression_ratio": 1.8218181818181818, "no_speech_prob": 2.2118736524134874e-05}, {"id": 2252, "seek": 649152, "start": 6509.040000000001, "end": 6510.88, "text": " So you have this kind of compositional hierarchy", "tokens": [50364, 293, 6565, 13, 50422, 50422, 682, 2487, 11, 291, 362, 4342, 300, 22364, 281, 1254, 2283, 11, 50550, 50550, 1349, 3935, 11, 49072, 11, 16579, 11, 3676, 13, 50642, 50642, 682, 6218, 11, 291, 362, 6218, 10938, 50760, 50760, 300, 22364, 281, 1254, 733, 295, 16429, 3263, 11, 10216, 11, 51052, 51052, 30754, 443, 279, 11, 45364, 11, 2283, 11, 1030, 11458, 13, 51240, 51240, 407, 291, 362, 341, 733, 295, 10199, 2628, 22333, 51332, 51332, 294, 257, 688, 295, 3303, 12354, 13, 51424, 51424, 400, 341, 307, 437, 1669, 264, 1002, 25648, 13, 51544, 51544, 821, 311, 341, 4618, 6513, 538, 20812, 23486, 11, 51674, 51674, 264, 881, 14036, 40128, 30633, 551, 466, 264, 1002, 51770, 51770, 307, 300, 264, 1002, 307, 10753, 30633, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14669642815223108, "compression_ratio": 1.8218181818181818, "no_speech_prob": 2.2118736524134874e-05}, {"id": 2253, "seek": 649152, "start": 6510.88, "end": 6512.72, "text": " in a lot of natural signals.", "tokens": [50364, 293, 6565, 13, 50422, 50422, 682, 2487, 11, 291, 362, 4342, 300, 22364, 281, 1254, 2283, 11, 50550, 50550, 1349, 3935, 11, 49072, 11, 16579, 11, 3676, 13, 50642, 50642, 682, 6218, 11, 291, 362, 6218, 10938, 50760, 50760, 300, 22364, 281, 1254, 733, 295, 16429, 3263, 11, 10216, 11, 51052, 51052, 30754, 443, 279, 11, 45364, 11, 2283, 11, 1030, 11458, 13, 51240, 51240, 407, 291, 362, 341, 733, 295, 10199, 2628, 22333, 51332, 51332, 294, 257, 688, 295, 3303, 12354, 13, 51424, 51424, 400, 341, 307, 437, 1669, 264, 1002, 25648, 13, 51544, 51544, 821, 311, 341, 4618, 6513, 538, 20812, 23486, 11, 51674, 51674, 264, 881, 14036, 40128, 30633, 551, 466, 264, 1002, 51770, 51770, 307, 300, 264, 1002, 307, 10753, 30633, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14669642815223108, "compression_ratio": 1.8218181818181818, "no_speech_prob": 2.2118736524134874e-05}, {"id": 2254, "seek": 649152, "start": 6512.72, "end": 6515.120000000001, "text": " And this is what makes the world understandable.", "tokens": [50364, 293, 6565, 13, 50422, 50422, 682, 2487, 11, 291, 362, 4342, 300, 22364, 281, 1254, 2283, 11, 50550, 50550, 1349, 3935, 11, 49072, 11, 16579, 11, 3676, 13, 50642, 50642, 682, 6218, 11, 291, 362, 6218, 10938, 50760, 50760, 300, 22364, 281, 1254, 733, 295, 16429, 3263, 11, 10216, 11, 51052, 51052, 30754, 443, 279, 11, 45364, 11, 2283, 11, 1030, 11458, 13, 51240, 51240, 407, 291, 362, 341, 733, 295, 10199, 2628, 22333, 51332, 51332, 294, 257, 688, 295, 3303, 12354, 13, 51424, 51424, 400, 341, 307, 437, 1669, 264, 1002, 25648, 13, 51544, 51544, 821, 311, 341, 4618, 6513, 538, 20812, 23486, 11, 51674, 51674, 264, 881, 14036, 40128, 30633, 551, 466, 264, 1002, 51770, 51770, 307, 300, 264, 1002, 307, 10753, 30633, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14669642815223108, "compression_ratio": 1.8218181818181818, "no_speech_prob": 2.2118736524134874e-05}, {"id": 2255, "seek": 649152, "start": 6515.120000000001, "end": 6517.72, "text": " There's this famous quote by Albert Einstein,", "tokens": [50364, 293, 6565, 13, 50422, 50422, 682, 2487, 11, 291, 362, 4342, 300, 22364, 281, 1254, 2283, 11, 50550, 50550, 1349, 3935, 11, 49072, 11, 16579, 11, 3676, 13, 50642, 50642, 682, 6218, 11, 291, 362, 6218, 10938, 50760, 50760, 300, 22364, 281, 1254, 733, 295, 16429, 3263, 11, 10216, 11, 51052, 51052, 30754, 443, 279, 11, 45364, 11, 2283, 11, 1030, 11458, 13, 51240, 51240, 407, 291, 362, 341, 733, 295, 10199, 2628, 22333, 51332, 51332, 294, 257, 688, 295, 3303, 12354, 13, 51424, 51424, 400, 341, 307, 437, 1669, 264, 1002, 25648, 13, 51544, 51544, 821, 311, 341, 4618, 6513, 538, 20812, 23486, 11, 51674, 51674, 264, 881, 14036, 40128, 30633, 551, 466, 264, 1002, 51770, 51770, 307, 300, 264, 1002, 307, 10753, 30633, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14669642815223108, "compression_ratio": 1.8218181818181818, "no_speech_prob": 2.2118736524134874e-05}, {"id": 2256, "seek": 649152, "start": 6517.72, "end": 6519.64, "text": " the most incomprehensible thing about the world", "tokens": [50364, 293, 6565, 13, 50422, 50422, 682, 2487, 11, 291, 362, 4342, 300, 22364, 281, 1254, 2283, 11, 50550, 50550, 1349, 3935, 11, 49072, 11, 16579, 11, 3676, 13, 50642, 50642, 682, 6218, 11, 291, 362, 6218, 10938, 50760, 50760, 300, 22364, 281, 1254, 733, 295, 16429, 3263, 11, 10216, 11, 51052, 51052, 30754, 443, 279, 11, 45364, 11, 2283, 11, 1030, 11458, 13, 51240, 51240, 407, 291, 362, 341, 733, 295, 10199, 2628, 22333, 51332, 51332, 294, 257, 688, 295, 3303, 12354, 13, 51424, 51424, 400, 341, 307, 437, 1669, 264, 1002, 25648, 13, 51544, 51544, 821, 311, 341, 4618, 6513, 538, 20812, 23486, 11, 51674, 51674, 264, 881, 14036, 40128, 30633, 551, 466, 264, 1002, 51770, 51770, 307, 300, 264, 1002, 307, 10753, 30633, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14669642815223108, "compression_ratio": 1.8218181818181818, "no_speech_prob": 2.2118736524134874e-05}, {"id": 2257, "seek": 649152, "start": 6519.64, "end": 6521.120000000001, "text": " is that the world is comprehensible.", "tokens": [50364, 293, 6565, 13, 50422, 50422, 682, 2487, 11, 291, 362, 4342, 300, 22364, 281, 1254, 2283, 11, 50550, 50550, 1349, 3935, 11, 49072, 11, 16579, 11, 3676, 13, 50642, 50642, 682, 6218, 11, 291, 362, 6218, 10938, 50760, 50760, 300, 22364, 281, 1254, 733, 295, 16429, 3263, 11, 10216, 11, 51052, 51052, 30754, 443, 279, 11, 45364, 11, 2283, 11, 1030, 11458, 13, 51240, 51240, 407, 291, 362, 341, 733, 295, 10199, 2628, 22333, 51332, 51332, 294, 257, 688, 295, 3303, 12354, 13, 51424, 51424, 400, 341, 307, 437, 1669, 264, 1002, 25648, 13, 51544, 51544, 821, 311, 341, 4618, 6513, 538, 20812, 23486, 11, 51674, 51674, 264, 881, 14036, 40128, 30633, 551, 466, 264, 1002, 51770, 51770, 307, 300, 264, 1002, 307, 10753, 30633, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14669642815223108, "compression_ratio": 1.8218181818181818, "no_speech_prob": 2.2118736524134874e-05}, {"id": 2258, "seek": 652112, "start": 6521.12, "end": 6522.72, "text": " And the reason why the world is comprehensible", "tokens": [50364, 400, 264, 1778, 983, 264, 1002, 307, 10753, 30633, 50444, 50444, 307, 570, 309, 311, 10199, 2628, 11, 570, 1359, 644, 24204, 50610, 50610, 281, 1254, 3801, 644, 13, 50656, 50656, 400, 300, 4045, 291, 281, 362, 257, 3855, 11, 364, 12649, 50760, 50760, 3855, 295, 264, 1002, 294, 2115, 295, 3166, 50964, 50964, 490, 264, 1496, 4258, 2507, 294, 2115, 51123, 51123, 295, 1496, 295, 37765, 13, 51192, 51192, 407, 281, 512, 8396, 11, 264, 34666, 9482, 294, 257, 18161, 2533, 51390, 51390, 18926, 341, 1558, 300, 291, 362, 257, 10199, 2628, 22333, 51632, 51632, 689, 2199, 721, 22364, 281, 1254, 4748, 544, 51786, 51786, 3997, 721, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17400549154366013, "compression_ratio": 1.8244274809160306, "no_speech_prob": 2.7530461011338048e-05}, {"id": 2259, "seek": 652112, "start": 6522.72, "end": 6526.04, "text": " is because it's compositional, because small part assembled", "tokens": [50364, 400, 264, 1778, 983, 264, 1002, 307, 10753, 30633, 50444, 50444, 307, 570, 309, 311, 10199, 2628, 11, 570, 1359, 644, 24204, 50610, 50610, 281, 1254, 3801, 644, 13, 50656, 50656, 400, 300, 4045, 291, 281, 362, 257, 3855, 11, 364, 12649, 50760, 50760, 3855, 295, 264, 1002, 294, 2115, 295, 3166, 50964, 50964, 490, 264, 1496, 4258, 2507, 294, 2115, 51123, 51123, 295, 1496, 295, 37765, 13, 51192, 51192, 407, 281, 512, 8396, 11, 264, 34666, 9482, 294, 257, 18161, 2533, 51390, 51390, 18926, 341, 1558, 300, 291, 362, 257, 10199, 2628, 22333, 51632, 51632, 689, 2199, 721, 22364, 281, 1254, 4748, 544, 51786, 51786, 3997, 721, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17400549154366013, "compression_ratio": 1.8244274809160306, "no_speech_prob": 2.7530461011338048e-05}, {"id": 2260, "seek": 652112, "start": 6526.04, "end": 6526.96, "text": " to form bigger part.", "tokens": [50364, 400, 264, 1778, 983, 264, 1002, 307, 10753, 30633, 50444, 50444, 307, 570, 309, 311, 10199, 2628, 11, 570, 1359, 644, 24204, 50610, 50610, 281, 1254, 3801, 644, 13, 50656, 50656, 400, 300, 4045, 291, 281, 362, 257, 3855, 11, 364, 12649, 50760, 50760, 3855, 295, 264, 1002, 294, 2115, 295, 3166, 50964, 50964, 490, 264, 1496, 4258, 2507, 294, 2115, 51123, 51123, 295, 1496, 295, 37765, 13, 51192, 51192, 407, 281, 512, 8396, 11, 264, 34666, 9482, 294, 257, 18161, 2533, 51390, 51390, 18926, 341, 1558, 300, 291, 362, 257, 10199, 2628, 22333, 51632, 51632, 689, 2199, 721, 22364, 281, 1254, 4748, 544, 51786, 51786, 3997, 721, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17400549154366013, "compression_ratio": 1.8244274809160306, "no_speech_prob": 2.7530461011338048e-05}, {"id": 2261, "seek": 652112, "start": 6526.96, "end": 6529.04, "text": " And that allows you to have a description, an abstract", "tokens": [50364, 400, 264, 1778, 983, 264, 1002, 307, 10753, 30633, 50444, 50444, 307, 570, 309, 311, 10199, 2628, 11, 570, 1359, 644, 24204, 50610, 50610, 281, 1254, 3801, 644, 13, 50656, 50656, 400, 300, 4045, 291, 281, 362, 257, 3855, 11, 364, 12649, 50760, 50760, 3855, 295, 264, 1002, 294, 2115, 295, 3166, 50964, 50964, 490, 264, 1496, 4258, 2507, 294, 2115, 51123, 51123, 295, 1496, 295, 37765, 13, 51192, 51192, 407, 281, 512, 8396, 11, 264, 34666, 9482, 294, 257, 18161, 2533, 51390, 51390, 18926, 341, 1558, 300, 291, 362, 257, 10199, 2628, 22333, 51632, 51632, 689, 2199, 721, 22364, 281, 1254, 4748, 544, 51786, 51786, 3997, 721, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17400549154366013, "compression_ratio": 1.8244274809160306, "no_speech_prob": 2.7530461011338048e-05}, {"id": 2262, "seek": 652112, "start": 6529.04, "end": 6533.12, "text": " description of the world in terms of parts", "tokens": [50364, 400, 264, 1778, 983, 264, 1002, 307, 10753, 30633, 50444, 50444, 307, 570, 309, 311, 10199, 2628, 11, 570, 1359, 644, 24204, 50610, 50610, 281, 1254, 3801, 644, 13, 50656, 50656, 400, 300, 4045, 291, 281, 362, 257, 3855, 11, 364, 12649, 50760, 50760, 3855, 295, 264, 1002, 294, 2115, 295, 3166, 50964, 50964, 490, 264, 1496, 4258, 2507, 294, 2115, 51123, 51123, 295, 1496, 295, 37765, 13, 51192, 51192, 407, 281, 512, 8396, 11, 264, 34666, 9482, 294, 257, 18161, 2533, 51390, 51390, 18926, 341, 1558, 300, 291, 362, 257, 10199, 2628, 22333, 51632, 51632, 689, 2199, 721, 22364, 281, 1254, 4748, 544, 51786, 51786, 3997, 721, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17400549154366013, "compression_ratio": 1.8244274809160306, "no_speech_prob": 2.7530461011338048e-05}, {"id": 2263, "seek": 652112, "start": 6533.12, "end": 6536.3, "text": " from the level immediately below in terms", "tokens": [50364, 400, 264, 1778, 983, 264, 1002, 307, 10753, 30633, 50444, 50444, 307, 570, 309, 311, 10199, 2628, 11, 570, 1359, 644, 24204, 50610, 50610, 281, 1254, 3801, 644, 13, 50656, 50656, 400, 300, 4045, 291, 281, 362, 257, 3855, 11, 364, 12649, 50760, 50760, 3855, 295, 264, 1002, 294, 2115, 295, 3166, 50964, 50964, 490, 264, 1496, 4258, 2507, 294, 2115, 51123, 51123, 295, 1496, 295, 37765, 13, 51192, 51192, 407, 281, 512, 8396, 11, 264, 34666, 9482, 294, 257, 18161, 2533, 51390, 51390, 18926, 341, 1558, 300, 291, 362, 257, 10199, 2628, 22333, 51632, 51632, 689, 2199, 721, 22364, 281, 1254, 4748, 544, 51786, 51786, 3997, 721, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17400549154366013, "compression_ratio": 1.8244274809160306, "no_speech_prob": 2.7530461011338048e-05}, {"id": 2264, "seek": 652112, "start": 6536.3, "end": 6537.68, "text": " of level of abstraction.", "tokens": [50364, 400, 264, 1778, 983, 264, 1002, 307, 10753, 30633, 50444, 50444, 307, 570, 309, 311, 10199, 2628, 11, 570, 1359, 644, 24204, 50610, 50610, 281, 1254, 3801, 644, 13, 50656, 50656, 400, 300, 4045, 291, 281, 362, 257, 3855, 11, 364, 12649, 50760, 50760, 3855, 295, 264, 1002, 294, 2115, 295, 3166, 50964, 50964, 490, 264, 1496, 4258, 2507, 294, 2115, 51123, 51123, 295, 1496, 295, 37765, 13, 51192, 51192, 407, 281, 512, 8396, 11, 264, 34666, 9482, 294, 257, 18161, 2533, 51390, 51390, 18926, 341, 1558, 300, 291, 362, 257, 10199, 2628, 22333, 51632, 51632, 689, 2199, 721, 22364, 281, 1254, 4748, 544, 51786, 51786, 3997, 721, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17400549154366013, "compression_ratio": 1.8244274809160306, "no_speech_prob": 2.7530461011338048e-05}, {"id": 2265, "seek": 652112, "start": 6537.68, "end": 6541.64, "text": " So to some extent, the layered architecture in a neural net", "tokens": [50364, 400, 264, 1778, 983, 264, 1002, 307, 10753, 30633, 50444, 50444, 307, 570, 309, 311, 10199, 2628, 11, 570, 1359, 644, 24204, 50610, 50610, 281, 1254, 3801, 644, 13, 50656, 50656, 400, 300, 4045, 291, 281, 362, 257, 3855, 11, 364, 12649, 50760, 50760, 3855, 295, 264, 1002, 294, 2115, 295, 3166, 50964, 50964, 490, 264, 1496, 4258, 2507, 294, 2115, 51123, 51123, 295, 1496, 295, 37765, 13, 51192, 51192, 407, 281, 512, 8396, 11, 264, 34666, 9482, 294, 257, 18161, 2533, 51390, 51390, 18926, 341, 1558, 300, 291, 362, 257, 10199, 2628, 22333, 51632, 51632, 689, 2199, 721, 22364, 281, 1254, 4748, 544, 51786, 51786, 3997, 721, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17400549154366013, "compression_ratio": 1.8244274809160306, "no_speech_prob": 2.7530461011338048e-05}, {"id": 2266, "seek": 652112, "start": 6541.64, "end": 6546.48, "text": " reflects this idea that you have a compositional hierarchy", "tokens": [50364, 400, 264, 1778, 983, 264, 1002, 307, 10753, 30633, 50444, 50444, 307, 570, 309, 311, 10199, 2628, 11, 570, 1359, 644, 24204, 50610, 50610, 281, 1254, 3801, 644, 13, 50656, 50656, 400, 300, 4045, 291, 281, 362, 257, 3855, 11, 364, 12649, 50760, 50760, 3855, 295, 264, 1002, 294, 2115, 295, 3166, 50964, 50964, 490, 264, 1496, 4258, 2507, 294, 2115, 51123, 51123, 295, 1496, 295, 37765, 13, 51192, 51192, 407, 281, 512, 8396, 11, 264, 34666, 9482, 294, 257, 18161, 2533, 51390, 51390, 18926, 341, 1558, 300, 291, 362, 257, 10199, 2628, 22333, 51632, 51632, 689, 2199, 721, 22364, 281, 1254, 4748, 544, 51786, 51786, 3997, 721, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17400549154366013, "compression_ratio": 1.8244274809160306, "no_speech_prob": 2.7530461011338048e-05}, {"id": 2267, "seek": 652112, "start": 6546.48, "end": 6549.5599999999995, "text": " where simple things assemble to form slightly more", "tokens": [50364, 400, 264, 1778, 983, 264, 1002, 307, 10753, 30633, 50444, 50444, 307, 570, 309, 311, 10199, 2628, 11, 570, 1359, 644, 24204, 50610, 50610, 281, 1254, 3801, 644, 13, 50656, 50656, 400, 300, 4045, 291, 281, 362, 257, 3855, 11, 364, 12649, 50760, 50760, 3855, 295, 264, 1002, 294, 2115, 295, 3166, 50964, 50964, 490, 264, 1496, 4258, 2507, 294, 2115, 51123, 51123, 295, 1496, 295, 37765, 13, 51192, 51192, 407, 281, 512, 8396, 11, 264, 34666, 9482, 294, 257, 18161, 2533, 51390, 51390, 18926, 341, 1558, 300, 291, 362, 257, 10199, 2628, 22333, 51632, 51632, 689, 2199, 721, 22364, 281, 1254, 4748, 544, 51786, 51786, 3997, 721, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17400549154366013, "compression_ratio": 1.8244274809160306, "no_speech_prob": 2.7530461011338048e-05}, {"id": 2268, "seek": 652112, "start": 6549.5599999999995, "end": 6550.5599999999995, "text": " complex things.", "tokens": [50364, 400, 264, 1778, 983, 264, 1002, 307, 10753, 30633, 50444, 50444, 307, 570, 309, 311, 10199, 2628, 11, 570, 1359, 644, 24204, 50610, 50610, 281, 1254, 3801, 644, 13, 50656, 50656, 400, 300, 4045, 291, 281, 362, 257, 3855, 11, 364, 12649, 50760, 50760, 3855, 295, 264, 1002, 294, 2115, 295, 3166, 50964, 50964, 490, 264, 1496, 4258, 2507, 294, 2115, 51123, 51123, 295, 1496, 295, 37765, 13, 51192, 51192, 407, 281, 512, 8396, 11, 264, 34666, 9482, 294, 257, 18161, 2533, 51390, 51390, 18926, 341, 1558, 300, 291, 362, 257, 10199, 2628, 22333, 51632, 51632, 689, 2199, 721, 22364, 281, 1254, 4748, 544, 51786, 51786, 3997, 721, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17400549154366013, "compression_ratio": 1.8244274809160306, "no_speech_prob": 2.7530461011338048e-05}, {"id": 2269, "seek": 655056, "start": 6550.56, "end": 6552.52, "text": " So images, you have pixels formed", "tokens": [50364, 407, 5267, 11, 291, 362, 18668, 8693, 50462, 50462, 281, 1254, 8819, 300, 366, 733, 295, 30207, 510, 13, 50562, 50562, 1981, 366, 767, 4111, 46866, 11, 50664, 50664, 25801, 295, 4111, 46866, 50740, 50740, 538, 257, 1729, 10199, 2628, 2533, 11, 50836, 50836, 597, 307, 257, 1729, 2010, 295, 18161, 2533, 11, 50948, 50948, 2120, 388, 11167, 18161, 2533, 13, 51010, 51010, 407, 412, 264, 2295, 1496, 11, 291, 362, 6815, 51114, 51114, 300, 5531, 21841, 8819, 13, 51214, 51214, 316, 1916, 295, 7914, 493, 11, 291, 362, 721, 51289, 51289, 300, 5531, 2199, 2184, 18290, 11, 13040, 11, 677, 990, 82, 11, 12413, 11, 51458, 51458, 1030, 11458, 13, 51496, 51496, 400, 550, 257, 1326, 7914, 493, 11, 456, 366, 51570, 51570, 721, 411, 3166, 295, 6565, 293, 721, 411, 300, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.20248744798743207, "compression_ratio": 1.8676470588235294, "no_speech_prob": 1.5932993846945465e-05}, {"id": 2270, "seek": 655056, "start": 6552.52, "end": 6554.52, "text": " to form edges that are kind of depicted here.", "tokens": [50364, 407, 5267, 11, 291, 362, 18668, 8693, 50462, 50462, 281, 1254, 8819, 300, 366, 733, 295, 30207, 510, 13, 50562, 50562, 1981, 366, 767, 4111, 46866, 11, 50664, 50664, 25801, 295, 4111, 46866, 50740, 50740, 538, 257, 1729, 10199, 2628, 2533, 11, 50836, 50836, 597, 307, 257, 1729, 2010, 295, 18161, 2533, 11, 50948, 50948, 2120, 388, 11167, 18161, 2533, 13, 51010, 51010, 407, 412, 264, 2295, 1496, 11, 291, 362, 6815, 51114, 51114, 300, 5531, 21841, 8819, 13, 51214, 51214, 316, 1916, 295, 7914, 493, 11, 291, 362, 721, 51289, 51289, 300, 5531, 2199, 2184, 18290, 11, 13040, 11, 677, 990, 82, 11, 12413, 11, 51458, 51458, 1030, 11458, 13, 51496, 51496, 400, 550, 257, 1326, 7914, 493, 11, 456, 366, 51570, 51570, 721, 411, 3166, 295, 6565, 293, 721, 411, 300, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.20248744798743207, "compression_ratio": 1.8676470588235294, "no_speech_prob": 1.5932993846945465e-05}, {"id": 2271, "seek": 655056, "start": 6554.52, "end": 6556.56, "text": " These are actually feature detectors,", "tokens": [50364, 407, 5267, 11, 291, 362, 18668, 8693, 50462, 50462, 281, 1254, 8819, 300, 366, 733, 295, 30207, 510, 13, 50562, 50562, 1981, 366, 767, 4111, 46866, 11, 50664, 50664, 25801, 295, 4111, 46866, 50740, 50740, 538, 257, 1729, 10199, 2628, 2533, 11, 50836, 50836, 597, 307, 257, 1729, 2010, 295, 18161, 2533, 11, 50948, 50948, 2120, 388, 11167, 18161, 2533, 13, 51010, 51010, 407, 412, 264, 2295, 1496, 11, 291, 362, 6815, 51114, 51114, 300, 5531, 21841, 8819, 13, 51214, 51214, 316, 1916, 295, 7914, 493, 11, 291, 362, 721, 51289, 51289, 300, 5531, 2199, 2184, 18290, 11, 13040, 11, 677, 990, 82, 11, 12413, 11, 51458, 51458, 1030, 11458, 13, 51496, 51496, 400, 550, 257, 1326, 7914, 493, 11, 456, 366, 51570, 51570, 721, 411, 3166, 295, 6565, 293, 721, 411, 300, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.20248744798743207, "compression_ratio": 1.8676470588235294, "no_speech_prob": 1.5932993846945465e-05}, {"id": 2272, "seek": 655056, "start": 6556.56, "end": 6558.080000000001, "text": " visualization of feature detectors", "tokens": [50364, 407, 5267, 11, 291, 362, 18668, 8693, 50462, 50462, 281, 1254, 8819, 300, 366, 733, 295, 30207, 510, 13, 50562, 50562, 1981, 366, 767, 4111, 46866, 11, 50664, 50664, 25801, 295, 4111, 46866, 50740, 50740, 538, 257, 1729, 10199, 2628, 2533, 11, 50836, 50836, 597, 307, 257, 1729, 2010, 295, 18161, 2533, 11, 50948, 50948, 2120, 388, 11167, 18161, 2533, 13, 51010, 51010, 407, 412, 264, 2295, 1496, 11, 291, 362, 6815, 51114, 51114, 300, 5531, 21841, 8819, 13, 51214, 51214, 316, 1916, 295, 7914, 493, 11, 291, 362, 721, 51289, 51289, 300, 5531, 2199, 2184, 18290, 11, 13040, 11, 677, 990, 82, 11, 12413, 11, 51458, 51458, 1030, 11458, 13, 51496, 51496, 400, 550, 257, 1326, 7914, 493, 11, 456, 366, 51570, 51570, 721, 411, 3166, 295, 6565, 293, 721, 411, 300, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.20248744798743207, "compression_ratio": 1.8676470588235294, "no_speech_prob": 1.5932993846945465e-05}, {"id": 2273, "seek": 655056, "start": 6558.080000000001, "end": 6560.0, "text": " by a particular compositional net,", "tokens": [50364, 407, 5267, 11, 291, 362, 18668, 8693, 50462, 50462, 281, 1254, 8819, 300, 366, 733, 295, 30207, 510, 13, 50562, 50562, 1981, 366, 767, 4111, 46866, 11, 50664, 50664, 25801, 295, 4111, 46866, 50740, 50740, 538, 257, 1729, 10199, 2628, 2533, 11, 50836, 50836, 597, 307, 257, 1729, 2010, 295, 18161, 2533, 11, 50948, 50948, 2120, 388, 11167, 18161, 2533, 13, 51010, 51010, 407, 412, 264, 2295, 1496, 11, 291, 362, 6815, 51114, 51114, 300, 5531, 21841, 8819, 13, 51214, 51214, 316, 1916, 295, 7914, 493, 11, 291, 362, 721, 51289, 51289, 300, 5531, 2199, 2184, 18290, 11, 13040, 11, 677, 990, 82, 11, 12413, 11, 51458, 51458, 1030, 11458, 13, 51496, 51496, 400, 550, 257, 1326, 7914, 493, 11, 456, 366, 51570, 51570, 721, 411, 3166, 295, 6565, 293, 721, 411, 300, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.20248744798743207, "compression_ratio": 1.8676470588235294, "no_speech_prob": 1.5932993846945465e-05}, {"id": 2274, "seek": 655056, "start": 6560.0, "end": 6562.240000000001, "text": " which is a particular type of neural net,", "tokens": [50364, 407, 5267, 11, 291, 362, 18668, 8693, 50462, 50462, 281, 1254, 8819, 300, 366, 733, 295, 30207, 510, 13, 50562, 50562, 1981, 366, 767, 4111, 46866, 11, 50664, 50664, 25801, 295, 4111, 46866, 50740, 50740, 538, 257, 1729, 10199, 2628, 2533, 11, 50836, 50836, 597, 307, 257, 1729, 2010, 295, 18161, 2533, 11, 50948, 50948, 2120, 388, 11167, 18161, 2533, 13, 51010, 51010, 407, 412, 264, 2295, 1496, 11, 291, 362, 6815, 51114, 51114, 300, 5531, 21841, 8819, 13, 51214, 51214, 316, 1916, 295, 7914, 493, 11, 291, 362, 721, 51289, 51289, 300, 5531, 2199, 2184, 18290, 11, 13040, 11, 677, 990, 82, 11, 12413, 11, 51458, 51458, 1030, 11458, 13, 51496, 51496, 400, 550, 257, 1326, 7914, 493, 11, 456, 366, 51570, 51570, 721, 411, 3166, 295, 6565, 293, 721, 411, 300, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.20248744798743207, "compression_ratio": 1.8676470588235294, "no_speech_prob": 1.5932993846945465e-05}, {"id": 2275, "seek": 655056, "start": 6562.240000000001, "end": 6563.4800000000005, "text": " multilayer neural net.", "tokens": [50364, 407, 5267, 11, 291, 362, 18668, 8693, 50462, 50462, 281, 1254, 8819, 300, 366, 733, 295, 30207, 510, 13, 50562, 50562, 1981, 366, 767, 4111, 46866, 11, 50664, 50664, 25801, 295, 4111, 46866, 50740, 50740, 538, 257, 1729, 10199, 2628, 2533, 11, 50836, 50836, 597, 307, 257, 1729, 2010, 295, 18161, 2533, 11, 50948, 50948, 2120, 388, 11167, 18161, 2533, 13, 51010, 51010, 407, 412, 264, 2295, 1496, 11, 291, 362, 6815, 51114, 51114, 300, 5531, 21841, 8819, 13, 51214, 51214, 316, 1916, 295, 7914, 493, 11, 291, 362, 721, 51289, 51289, 300, 5531, 2199, 2184, 18290, 11, 13040, 11, 677, 990, 82, 11, 12413, 11, 51458, 51458, 1030, 11458, 13, 51496, 51496, 400, 550, 257, 1326, 7914, 493, 11, 456, 366, 51570, 51570, 721, 411, 3166, 295, 6565, 293, 721, 411, 300, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.20248744798743207, "compression_ratio": 1.8676470588235294, "no_speech_prob": 1.5932993846945465e-05}, {"id": 2276, "seek": 655056, "start": 6563.4800000000005, "end": 6565.56, "text": " So at the low level, you have units", "tokens": [50364, 407, 5267, 11, 291, 362, 18668, 8693, 50462, 50462, 281, 1254, 8819, 300, 366, 733, 295, 30207, 510, 13, 50562, 50562, 1981, 366, 767, 4111, 46866, 11, 50664, 50664, 25801, 295, 4111, 46866, 50740, 50740, 538, 257, 1729, 10199, 2628, 2533, 11, 50836, 50836, 597, 307, 257, 1729, 2010, 295, 18161, 2533, 11, 50948, 50948, 2120, 388, 11167, 18161, 2533, 13, 51010, 51010, 407, 412, 264, 2295, 1496, 11, 291, 362, 6815, 51114, 51114, 300, 5531, 21841, 8819, 13, 51214, 51214, 316, 1916, 295, 7914, 493, 11, 291, 362, 721, 51289, 51289, 300, 5531, 2199, 2184, 18290, 11, 13040, 11, 677, 990, 82, 11, 12413, 11, 51458, 51458, 1030, 11458, 13, 51496, 51496, 400, 550, 257, 1326, 7914, 493, 11, 456, 366, 51570, 51570, 721, 411, 3166, 295, 6565, 293, 721, 411, 300, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.20248744798743207, "compression_ratio": 1.8676470588235294, "no_speech_prob": 1.5932993846945465e-05}, {"id": 2277, "seek": 655056, "start": 6565.56, "end": 6567.56, "text": " that detect oriented edges.", "tokens": [50364, 407, 5267, 11, 291, 362, 18668, 8693, 50462, 50462, 281, 1254, 8819, 300, 366, 733, 295, 30207, 510, 13, 50562, 50562, 1981, 366, 767, 4111, 46866, 11, 50664, 50664, 25801, 295, 4111, 46866, 50740, 50740, 538, 257, 1729, 10199, 2628, 2533, 11, 50836, 50836, 597, 307, 257, 1729, 2010, 295, 18161, 2533, 11, 50948, 50948, 2120, 388, 11167, 18161, 2533, 13, 51010, 51010, 407, 412, 264, 2295, 1496, 11, 291, 362, 6815, 51114, 51114, 300, 5531, 21841, 8819, 13, 51214, 51214, 316, 1916, 295, 7914, 493, 11, 291, 362, 721, 51289, 51289, 300, 5531, 2199, 2184, 18290, 11, 13040, 11, 677, 990, 82, 11, 12413, 11, 51458, 51458, 1030, 11458, 13, 51496, 51496, 400, 550, 257, 1326, 7914, 493, 11, 456, 366, 51570, 51570, 721, 411, 3166, 295, 6565, 293, 721, 411, 300, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.20248744798743207, "compression_ratio": 1.8676470588235294, "no_speech_prob": 1.5932993846945465e-05}, {"id": 2278, "seek": 655056, "start": 6567.56, "end": 6569.06, "text": " A couple of layers up, you have things", "tokens": [50364, 407, 5267, 11, 291, 362, 18668, 8693, 50462, 50462, 281, 1254, 8819, 300, 366, 733, 295, 30207, 510, 13, 50562, 50562, 1981, 366, 767, 4111, 46866, 11, 50664, 50664, 25801, 295, 4111, 46866, 50740, 50740, 538, 257, 1729, 10199, 2628, 2533, 11, 50836, 50836, 597, 307, 257, 1729, 2010, 295, 18161, 2533, 11, 50948, 50948, 2120, 388, 11167, 18161, 2533, 13, 51010, 51010, 407, 412, 264, 2295, 1496, 11, 291, 362, 6815, 51114, 51114, 300, 5531, 21841, 8819, 13, 51214, 51214, 316, 1916, 295, 7914, 493, 11, 291, 362, 721, 51289, 51289, 300, 5531, 2199, 2184, 18290, 11, 13040, 11, 677, 990, 82, 11, 12413, 11, 51458, 51458, 1030, 11458, 13, 51496, 51496, 400, 550, 257, 1326, 7914, 493, 11, 456, 366, 51570, 51570, 721, 411, 3166, 295, 6565, 293, 721, 411, 300, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.20248744798743207, "compression_ratio": 1.8676470588235294, "no_speech_prob": 1.5932993846945465e-05}, {"id": 2279, "seek": 655056, "start": 6569.06, "end": 6572.4400000000005, "text": " that detect simple motifs, circles, gratings, corners,", "tokens": [50364, 407, 5267, 11, 291, 362, 18668, 8693, 50462, 50462, 281, 1254, 8819, 300, 366, 733, 295, 30207, 510, 13, 50562, 50562, 1981, 366, 767, 4111, 46866, 11, 50664, 50664, 25801, 295, 4111, 46866, 50740, 50740, 538, 257, 1729, 10199, 2628, 2533, 11, 50836, 50836, 597, 307, 257, 1729, 2010, 295, 18161, 2533, 11, 50948, 50948, 2120, 388, 11167, 18161, 2533, 13, 51010, 51010, 407, 412, 264, 2295, 1496, 11, 291, 362, 6815, 51114, 51114, 300, 5531, 21841, 8819, 13, 51214, 51214, 316, 1916, 295, 7914, 493, 11, 291, 362, 721, 51289, 51289, 300, 5531, 2199, 2184, 18290, 11, 13040, 11, 677, 990, 82, 11, 12413, 11, 51458, 51458, 1030, 11458, 13, 51496, 51496, 400, 550, 257, 1326, 7914, 493, 11, 456, 366, 51570, 51570, 721, 411, 3166, 295, 6565, 293, 721, 411, 300, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.20248744798743207, "compression_ratio": 1.8676470588235294, "no_speech_prob": 1.5932993846945465e-05}, {"id": 2280, "seek": 655056, "start": 6572.4400000000005, "end": 6573.200000000001, "text": " et cetera.", "tokens": [50364, 407, 5267, 11, 291, 362, 18668, 8693, 50462, 50462, 281, 1254, 8819, 300, 366, 733, 295, 30207, 510, 13, 50562, 50562, 1981, 366, 767, 4111, 46866, 11, 50664, 50664, 25801, 295, 4111, 46866, 50740, 50740, 538, 257, 1729, 10199, 2628, 2533, 11, 50836, 50836, 597, 307, 257, 1729, 2010, 295, 18161, 2533, 11, 50948, 50948, 2120, 388, 11167, 18161, 2533, 13, 51010, 51010, 407, 412, 264, 2295, 1496, 11, 291, 362, 6815, 51114, 51114, 300, 5531, 21841, 8819, 13, 51214, 51214, 316, 1916, 295, 7914, 493, 11, 291, 362, 721, 51289, 51289, 300, 5531, 2199, 2184, 18290, 11, 13040, 11, 677, 990, 82, 11, 12413, 11, 51458, 51458, 1030, 11458, 13, 51496, 51496, 400, 550, 257, 1326, 7914, 493, 11, 456, 366, 51570, 51570, 721, 411, 3166, 295, 6565, 293, 721, 411, 300, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.20248744798743207, "compression_ratio": 1.8676470588235294, "no_speech_prob": 1.5932993846945465e-05}, {"id": 2281, "seek": 655056, "start": 6573.200000000001, "end": 6574.68, "text": " And then a few layers up, there are", "tokens": [50364, 407, 5267, 11, 291, 362, 18668, 8693, 50462, 50462, 281, 1254, 8819, 300, 366, 733, 295, 30207, 510, 13, 50562, 50562, 1981, 366, 767, 4111, 46866, 11, 50664, 50664, 25801, 295, 4111, 46866, 50740, 50740, 538, 257, 1729, 10199, 2628, 2533, 11, 50836, 50836, 597, 307, 257, 1729, 2010, 295, 18161, 2533, 11, 50948, 50948, 2120, 388, 11167, 18161, 2533, 13, 51010, 51010, 407, 412, 264, 2295, 1496, 11, 291, 362, 6815, 51114, 51114, 300, 5531, 21841, 8819, 13, 51214, 51214, 316, 1916, 295, 7914, 493, 11, 291, 362, 721, 51289, 51289, 300, 5531, 2199, 2184, 18290, 11, 13040, 11, 677, 990, 82, 11, 12413, 11, 51458, 51458, 1030, 11458, 13, 51496, 51496, 400, 550, 257, 1326, 7914, 493, 11, 456, 366, 51570, 51570, 721, 411, 3166, 295, 6565, 293, 721, 411, 300, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.20248744798743207, "compression_ratio": 1.8676470588235294, "no_speech_prob": 1.5932993846945465e-05}, {"id": 2282, "seek": 655056, "start": 6574.68, "end": 6577.400000000001, "text": " things like parts of objects and things like that.", "tokens": [50364, 407, 5267, 11, 291, 362, 18668, 8693, 50462, 50462, 281, 1254, 8819, 300, 366, 733, 295, 30207, 510, 13, 50562, 50562, 1981, 366, 767, 4111, 46866, 11, 50664, 50664, 25801, 295, 4111, 46866, 50740, 50740, 538, 257, 1729, 10199, 2628, 2533, 11, 50836, 50836, 597, 307, 257, 1729, 2010, 295, 18161, 2533, 11, 50948, 50948, 2120, 388, 11167, 18161, 2533, 13, 51010, 51010, 407, 412, 264, 2295, 1496, 11, 291, 362, 6815, 51114, 51114, 300, 5531, 21841, 8819, 13, 51214, 51214, 316, 1916, 295, 7914, 493, 11, 291, 362, 721, 51289, 51289, 300, 5531, 2199, 2184, 18290, 11, 13040, 11, 677, 990, 82, 11, 12413, 11, 51458, 51458, 1030, 11458, 13, 51496, 51496, 400, 550, 257, 1326, 7914, 493, 11, 456, 366, 51570, 51570, 721, 411, 3166, 295, 6565, 293, 721, 411, 300, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.20248744798743207, "compression_ratio": 1.8676470588235294, "no_speech_prob": 1.5932993846945465e-05}, {"id": 2283, "seek": 657740, "start": 6577.4, "end": 6582.04, "text": " So I think personally that the magic of deep learning,", "tokens": [50364, 407, 286, 519, 5665, 300, 264, 5585, 295, 2452, 2539, 11, 50596, 50596, 264, 1186, 300, 3866, 7914, 854, 11, 50756, 50756, 307, 264, 1186, 300, 264, 43276, 901, 1002, 307, 1936, 50932, 50932, 257, 10199, 2628, 22333, 13, 51040, 51040, 400, 550, 341, 917, 12, 1353, 12, 521, 2539, 294, 2452, 2539, 51158, 51158, 4045, 264, 1185, 281, 1466, 35250, 804, 33358, 51336, 51336, 689, 1184, 4583, 27152, 257, 10290, 300, 51514, 51514, 575, 257, 1496, 295, 37765, 4748, 2946, 51614, 51614, 813, 264, 3894, 472, 13, 51696, 51696, 407, 2295, 1496, 11, 291, 362, 2609, 18668, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11584414324714142, "compression_ratio": 1.7654320987654322, "no_speech_prob": 5.771410087618278e-06}, {"id": 2284, "seek": 657740, "start": 6582.04, "end": 6585.24, "text": " the fact that multiple layers help,", "tokens": [50364, 407, 286, 519, 5665, 300, 264, 5585, 295, 2452, 2539, 11, 50596, 50596, 264, 1186, 300, 3866, 7914, 854, 11, 50756, 50756, 307, 264, 1186, 300, 264, 43276, 901, 1002, 307, 1936, 50932, 50932, 257, 10199, 2628, 22333, 13, 51040, 51040, 400, 550, 341, 917, 12, 1353, 12, 521, 2539, 294, 2452, 2539, 51158, 51158, 4045, 264, 1185, 281, 1466, 35250, 804, 33358, 51336, 51336, 689, 1184, 4583, 27152, 257, 10290, 300, 51514, 51514, 575, 257, 1496, 295, 37765, 4748, 2946, 51614, 51614, 813, 264, 3894, 472, 13, 51696, 51696, 407, 2295, 1496, 11, 291, 362, 2609, 18668, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11584414324714142, "compression_ratio": 1.7654320987654322, "no_speech_prob": 5.771410087618278e-06}, {"id": 2285, "seek": 657740, "start": 6585.24, "end": 6588.759999999999, "text": " is the fact that the perceptual world is basically", "tokens": [50364, 407, 286, 519, 5665, 300, 264, 5585, 295, 2452, 2539, 11, 50596, 50596, 264, 1186, 300, 3866, 7914, 854, 11, 50756, 50756, 307, 264, 1186, 300, 264, 43276, 901, 1002, 307, 1936, 50932, 50932, 257, 10199, 2628, 22333, 13, 51040, 51040, 400, 550, 341, 917, 12, 1353, 12, 521, 2539, 294, 2452, 2539, 51158, 51158, 4045, 264, 1185, 281, 1466, 35250, 804, 33358, 51336, 51336, 689, 1184, 4583, 27152, 257, 10290, 300, 51514, 51514, 575, 257, 1496, 295, 37765, 4748, 2946, 51614, 51614, 813, 264, 3894, 472, 13, 51696, 51696, 407, 2295, 1496, 11, 291, 362, 2609, 18668, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11584414324714142, "compression_ratio": 1.7654320987654322, "no_speech_prob": 5.771410087618278e-06}, {"id": 2286, "seek": 657740, "start": 6588.759999999999, "end": 6590.92, "text": " a compositional hierarchy.", "tokens": [50364, 407, 286, 519, 5665, 300, 264, 5585, 295, 2452, 2539, 11, 50596, 50596, 264, 1186, 300, 3866, 7914, 854, 11, 50756, 50756, 307, 264, 1186, 300, 264, 43276, 901, 1002, 307, 1936, 50932, 50932, 257, 10199, 2628, 22333, 13, 51040, 51040, 400, 550, 341, 917, 12, 1353, 12, 521, 2539, 294, 2452, 2539, 51158, 51158, 4045, 264, 1185, 281, 1466, 35250, 804, 33358, 51336, 51336, 689, 1184, 4583, 27152, 257, 10290, 300, 51514, 51514, 575, 257, 1496, 295, 37765, 4748, 2946, 51614, 51614, 813, 264, 3894, 472, 13, 51696, 51696, 407, 2295, 1496, 11, 291, 362, 2609, 18668, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11584414324714142, "compression_ratio": 1.7654320987654322, "no_speech_prob": 5.771410087618278e-06}, {"id": 2287, "seek": 657740, "start": 6590.92, "end": 6593.28, "text": " And then this end-to-end learning in deep learning", "tokens": [50364, 407, 286, 519, 5665, 300, 264, 5585, 295, 2452, 2539, 11, 50596, 50596, 264, 1186, 300, 3866, 7914, 854, 11, 50756, 50756, 307, 264, 1186, 300, 264, 43276, 901, 1002, 307, 1936, 50932, 50932, 257, 10199, 2628, 22333, 13, 51040, 51040, 400, 550, 341, 917, 12, 1353, 12, 521, 2539, 294, 2452, 2539, 51158, 51158, 4045, 264, 1185, 281, 1466, 35250, 804, 33358, 51336, 51336, 689, 1184, 4583, 27152, 257, 10290, 300, 51514, 51514, 575, 257, 1496, 295, 37765, 4748, 2946, 51614, 51614, 813, 264, 3894, 472, 13, 51696, 51696, 407, 2295, 1496, 11, 291, 362, 2609, 18668, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11584414324714142, "compression_ratio": 1.7654320987654322, "no_speech_prob": 5.771410087618278e-06}, {"id": 2288, "seek": 657740, "start": 6593.28, "end": 6596.839999999999, "text": " allows the system to learn hierarchical representations", "tokens": [50364, 407, 286, 519, 5665, 300, 264, 5585, 295, 2452, 2539, 11, 50596, 50596, 264, 1186, 300, 3866, 7914, 854, 11, 50756, 50756, 307, 264, 1186, 300, 264, 43276, 901, 1002, 307, 1936, 50932, 50932, 257, 10199, 2628, 22333, 13, 51040, 51040, 400, 550, 341, 917, 12, 1353, 12, 521, 2539, 294, 2452, 2539, 51158, 51158, 4045, 264, 1185, 281, 1466, 35250, 804, 33358, 51336, 51336, 689, 1184, 4583, 27152, 257, 10290, 300, 51514, 51514, 575, 257, 1496, 295, 37765, 4748, 2946, 51614, 51614, 813, 264, 3894, 472, 13, 51696, 51696, 407, 2295, 1496, 11, 291, 362, 2609, 18668, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11584414324714142, "compression_ratio": 1.7654320987654322, "no_speech_prob": 5.771410087618278e-06}, {"id": 2289, "seek": 657740, "start": 6596.839999999999, "end": 6600.4, "text": " where each layer learns a representation that", "tokens": [50364, 407, 286, 519, 5665, 300, 264, 5585, 295, 2452, 2539, 11, 50596, 50596, 264, 1186, 300, 3866, 7914, 854, 11, 50756, 50756, 307, 264, 1186, 300, 264, 43276, 901, 1002, 307, 1936, 50932, 50932, 257, 10199, 2628, 22333, 13, 51040, 51040, 400, 550, 341, 917, 12, 1353, 12, 521, 2539, 294, 2452, 2539, 51158, 51158, 4045, 264, 1185, 281, 1466, 35250, 804, 33358, 51336, 51336, 689, 1184, 4583, 27152, 257, 10290, 300, 51514, 51514, 575, 257, 1496, 295, 37765, 4748, 2946, 51614, 51614, 813, 264, 3894, 472, 13, 51696, 51696, 407, 2295, 1496, 11, 291, 362, 2609, 18668, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11584414324714142, "compression_ratio": 1.7654320987654322, "no_speech_prob": 5.771410087618278e-06}, {"id": 2290, "seek": 657740, "start": 6600.4, "end": 6602.4, "text": " has a level of abstraction slightly higher", "tokens": [50364, 407, 286, 519, 5665, 300, 264, 5585, 295, 2452, 2539, 11, 50596, 50596, 264, 1186, 300, 3866, 7914, 854, 11, 50756, 50756, 307, 264, 1186, 300, 264, 43276, 901, 1002, 307, 1936, 50932, 50932, 257, 10199, 2628, 22333, 13, 51040, 51040, 400, 550, 341, 917, 12, 1353, 12, 521, 2539, 294, 2452, 2539, 51158, 51158, 4045, 264, 1185, 281, 1466, 35250, 804, 33358, 51336, 51336, 689, 1184, 4583, 27152, 257, 10290, 300, 51514, 51514, 575, 257, 1496, 295, 37765, 4748, 2946, 51614, 51614, 813, 264, 3894, 472, 13, 51696, 51696, 407, 2295, 1496, 11, 291, 362, 2609, 18668, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11584414324714142, "compression_ratio": 1.7654320987654322, "no_speech_prob": 5.771410087618278e-06}, {"id": 2291, "seek": 657740, "start": 6602.4, "end": 6604.04, "text": " than the previous one.", "tokens": [50364, 407, 286, 519, 5665, 300, 264, 5585, 295, 2452, 2539, 11, 50596, 50596, 264, 1186, 300, 3866, 7914, 854, 11, 50756, 50756, 307, 264, 1186, 300, 264, 43276, 901, 1002, 307, 1936, 50932, 50932, 257, 10199, 2628, 22333, 13, 51040, 51040, 400, 550, 341, 917, 12, 1353, 12, 521, 2539, 294, 2452, 2539, 51158, 51158, 4045, 264, 1185, 281, 1466, 35250, 804, 33358, 51336, 51336, 689, 1184, 4583, 27152, 257, 10290, 300, 51514, 51514, 575, 257, 1496, 295, 37765, 4748, 2946, 51614, 51614, 813, 264, 3894, 472, 13, 51696, 51696, 407, 2295, 1496, 11, 291, 362, 2609, 18668, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11584414324714142, "compression_ratio": 1.7654320987654322, "no_speech_prob": 5.771410087618278e-06}, {"id": 2292, "seek": 657740, "start": 6604.04, "end": 6606.24, "text": " So low level, you have individual pixels.", "tokens": [50364, 407, 286, 519, 5665, 300, 264, 5585, 295, 2452, 2539, 11, 50596, 50596, 264, 1186, 300, 3866, 7914, 854, 11, 50756, 50756, 307, 264, 1186, 300, 264, 43276, 901, 1002, 307, 1936, 50932, 50932, 257, 10199, 2628, 22333, 13, 51040, 51040, 400, 550, 341, 917, 12, 1353, 12, 521, 2539, 294, 2452, 2539, 51158, 51158, 4045, 264, 1185, 281, 1466, 35250, 804, 33358, 51336, 51336, 689, 1184, 4583, 27152, 257, 10290, 300, 51514, 51514, 575, 257, 1496, 295, 37765, 4748, 2946, 51614, 51614, 813, 264, 3894, 472, 13, 51696, 51696, 407, 2295, 1496, 11, 291, 362, 2609, 18668, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.11584414324714142, "compression_ratio": 1.7654320987654322, "no_speech_prob": 5.771410087618278e-06}, {"id": 2293, "seek": 660624, "start": 6606.24, "end": 6608.679999999999, "text": " Then you have the presence or absence of an edge.", "tokens": [50364, 1396, 291, 362, 264, 6814, 420, 17145, 295, 364, 4691, 13, 50486, 50486, 1396, 291, 362, 264, 6814, 420, 17145, 50560, 50560, 295, 257, 644, 295, 364, 2657, 13, 50620, 50620, 400, 550, 291, 362, 264, 6814, 420, 17145, 50702, 50702, 295, 364, 2657, 11, 21761, 295, 264, 2535, 295, 300, 2657, 11, 50906, 50906, 264, 30579, 2486, 11, 264, 2017, 11, 264, 2678, 3063, 626, 11, 264, 3678, 11, 51070, 51070, 721, 411, 300, 13, 51216, 51216, 407, 300, 311, 264, 12335, 11, 264, 1558, 51340, 51340, 983, 2452, 2539, 307, 370, 4406, 51424, 51424, 293, 983, 309, 311, 1936, 2726, 670, 264, 1002, 51596, 51596, 670, 264, 1036, 1266, 924, 420, 370, 13, 51684, 51684, 1057, 558, 13, 51708, 51708, 1044, 291, 337, 428, 3202, 13, 51742, 51742, 663, 311, 869, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.18687385061512823, "compression_ratio": 1.9798387096774193, "no_speech_prob": 2.4679142370587215e-05}, {"id": 2294, "seek": 660624, "start": 6608.679999999999, "end": 6610.16, "text": " Then you have the presence or absence", "tokens": [50364, 1396, 291, 362, 264, 6814, 420, 17145, 295, 364, 4691, 13, 50486, 50486, 1396, 291, 362, 264, 6814, 420, 17145, 50560, 50560, 295, 257, 644, 295, 364, 2657, 13, 50620, 50620, 400, 550, 291, 362, 264, 6814, 420, 17145, 50702, 50702, 295, 364, 2657, 11, 21761, 295, 264, 2535, 295, 300, 2657, 11, 50906, 50906, 264, 30579, 2486, 11, 264, 2017, 11, 264, 2678, 3063, 626, 11, 264, 3678, 11, 51070, 51070, 721, 411, 300, 13, 51216, 51216, 407, 300, 311, 264, 12335, 11, 264, 1558, 51340, 51340, 983, 2452, 2539, 307, 370, 4406, 51424, 51424, 293, 983, 309, 311, 1936, 2726, 670, 264, 1002, 51596, 51596, 670, 264, 1036, 1266, 924, 420, 370, 13, 51684, 51684, 1057, 558, 13, 51708, 51708, 1044, 291, 337, 428, 3202, 13, 51742, 51742, 663, 311, 869, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.18687385061512823, "compression_ratio": 1.9798387096774193, "no_speech_prob": 2.4679142370587215e-05}, {"id": 2295, "seek": 660624, "start": 6610.16, "end": 6611.36, "text": " of a part of an object.", "tokens": [50364, 1396, 291, 362, 264, 6814, 420, 17145, 295, 364, 4691, 13, 50486, 50486, 1396, 291, 362, 264, 6814, 420, 17145, 50560, 50560, 295, 257, 644, 295, 364, 2657, 13, 50620, 50620, 400, 550, 291, 362, 264, 6814, 420, 17145, 50702, 50702, 295, 364, 2657, 11, 21761, 295, 264, 2535, 295, 300, 2657, 11, 50906, 50906, 264, 30579, 2486, 11, 264, 2017, 11, 264, 2678, 3063, 626, 11, 264, 3678, 11, 51070, 51070, 721, 411, 300, 13, 51216, 51216, 407, 300, 311, 264, 12335, 11, 264, 1558, 51340, 51340, 983, 2452, 2539, 307, 370, 4406, 51424, 51424, 293, 983, 309, 311, 1936, 2726, 670, 264, 1002, 51596, 51596, 670, 264, 1036, 1266, 924, 420, 370, 13, 51684, 51684, 1057, 558, 13, 51708, 51708, 1044, 291, 337, 428, 3202, 13, 51742, 51742, 663, 311, 869, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.18687385061512823, "compression_ratio": 1.9798387096774193, "no_speech_prob": 2.4679142370587215e-05}, {"id": 2296, "seek": 660624, "start": 6611.36, "end": 6613.0, "text": " And then you have the presence or absence", "tokens": [50364, 1396, 291, 362, 264, 6814, 420, 17145, 295, 364, 4691, 13, 50486, 50486, 1396, 291, 362, 264, 6814, 420, 17145, 50560, 50560, 295, 257, 644, 295, 364, 2657, 13, 50620, 50620, 400, 550, 291, 362, 264, 6814, 420, 17145, 50702, 50702, 295, 364, 2657, 11, 21761, 295, 264, 2535, 295, 300, 2657, 11, 50906, 50906, 264, 30579, 2486, 11, 264, 2017, 11, 264, 2678, 3063, 626, 11, 264, 3678, 11, 51070, 51070, 721, 411, 300, 13, 51216, 51216, 407, 300, 311, 264, 12335, 11, 264, 1558, 51340, 51340, 983, 2452, 2539, 307, 370, 4406, 51424, 51424, 293, 983, 309, 311, 1936, 2726, 670, 264, 1002, 51596, 51596, 670, 264, 1036, 1266, 924, 420, 370, 13, 51684, 51684, 1057, 558, 13, 51708, 51708, 1044, 291, 337, 428, 3202, 13, 51742, 51742, 663, 311, 869, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.18687385061512823, "compression_ratio": 1.9798387096774193, "no_speech_prob": 2.4679142370587215e-05}, {"id": 2297, "seek": 660624, "start": 6613.0, "end": 6617.08, "text": " of an object, independently of the position of that object,", "tokens": [50364, 1396, 291, 362, 264, 6814, 420, 17145, 295, 364, 4691, 13, 50486, 50486, 1396, 291, 362, 264, 6814, 420, 17145, 50560, 50560, 295, 257, 644, 295, 364, 2657, 13, 50620, 50620, 400, 550, 291, 362, 264, 6814, 420, 17145, 50702, 50702, 295, 364, 2657, 11, 21761, 295, 264, 2535, 295, 300, 2657, 11, 50906, 50906, 264, 30579, 2486, 11, 264, 2017, 11, 264, 2678, 3063, 626, 11, 264, 3678, 11, 51070, 51070, 721, 411, 300, 13, 51216, 51216, 407, 300, 311, 264, 12335, 11, 264, 1558, 51340, 51340, 983, 2452, 2539, 307, 370, 4406, 51424, 51424, 293, 983, 309, 311, 1936, 2726, 670, 264, 1002, 51596, 51596, 670, 264, 1036, 1266, 924, 420, 370, 13, 51684, 51684, 1057, 558, 13, 51708, 51708, 1044, 291, 337, 428, 3202, 13, 51742, 51742, 663, 311, 869, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.18687385061512823, "compression_ratio": 1.9798387096774193, "no_speech_prob": 2.4679142370587215e-05}, {"id": 2298, "seek": 660624, "start": 6617.08, "end": 6620.36, "text": " the illumination, the color, the occlusions, the background,", "tokens": [50364, 1396, 291, 362, 264, 6814, 420, 17145, 295, 364, 4691, 13, 50486, 50486, 1396, 291, 362, 264, 6814, 420, 17145, 50560, 50560, 295, 257, 644, 295, 364, 2657, 13, 50620, 50620, 400, 550, 291, 362, 264, 6814, 420, 17145, 50702, 50702, 295, 364, 2657, 11, 21761, 295, 264, 2535, 295, 300, 2657, 11, 50906, 50906, 264, 30579, 2486, 11, 264, 2017, 11, 264, 2678, 3063, 626, 11, 264, 3678, 11, 51070, 51070, 721, 411, 300, 13, 51216, 51216, 407, 300, 311, 264, 12335, 11, 264, 1558, 51340, 51340, 983, 2452, 2539, 307, 370, 4406, 51424, 51424, 293, 983, 309, 311, 1936, 2726, 670, 264, 1002, 51596, 51596, 670, 264, 1036, 1266, 924, 420, 370, 13, 51684, 51684, 1057, 558, 13, 51708, 51708, 1044, 291, 337, 428, 3202, 13, 51742, 51742, 663, 311, 869, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.18687385061512823, "compression_ratio": 1.9798387096774193, "no_speech_prob": 2.4679142370587215e-05}, {"id": 2299, "seek": 660624, "start": 6620.36, "end": 6623.28, "text": " things like that.", "tokens": [50364, 1396, 291, 362, 264, 6814, 420, 17145, 295, 364, 4691, 13, 50486, 50486, 1396, 291, 362, 264, 6814, 420, 17145, 50560, 50560, 295, 257, 644, 295, 364, 2657, 13, 50620, 50620, 400, 550, 291, 362, 264, 6814, 420, 17145, 50702, 50702, 295, 364, 2657, 11, 21761, 295, 264, 2535, 295, 300, 2657, 11, 50906, 50906, 264, 30579, 2486, 11, 264, 2017, 11, 264, 2678, 3063, 626, 11, 264, 3678, 11, 51070, 51070, 721, 411, 300, 13, 51216, 51216, 407, 300, 311, 264, 12335, 11, 264, 1558, 51340, 51340, 983, 2452, 2539, 307, 370, 4406, 51424, 51424, 293, 983, 309, 311, 1936, 2726, 670, 264, 1002, 51596, 51596, 670, 264, 1036, 1266, 924, 420, 370, 13, 51684, 51684, 1057, 558, 13, 51708, 51708, 1044, 291, 337, 428, 3202, 13, 51742, 51742, 663, 311, 869, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.18687385061512823, "compression_ratio": 1.9798387096774193, "no_speech_prob": 2.4679142370587215e-05}, {"id": 2300, "seek": 660624, "start": 6623.28, "end": 6625.76, "text": " So that's the motivation, the idea", "tokens": [50364, 1396, 291, 362, 264, 6814, 420, 17145, 295, 364, 4691, 13, 50486, 50486, 1396, 291, 362, 264, 6814, 420, 17145, 50560, 50560, 295, 257, 644, 295, 364, 2657, 13, 50620, 50620, 400, 550, 291, 362, 264, 6814, 420, 17145, 50702, 50702, 295, 364, 2657, 11, 21761, 295, 264, 2535, 295, 300, 2657, 11, 50906, 50906, 264, 30579, 2486, 11, 264, 2017, 11, 264, 2678, 3063, 626, 11, 264, 3678, 11, 51070, 51070, 721, 411, 300, 13, 51216, 51216, 407, 300, 311, 264, 12335, 11, 264, 1558, 51340, 51340, 983, 2452, 2539, 307, 370, 4406, 51424, 51424, 293, 983, 309, 311, 1936, 2726, 670, 264, 1002, 51596, 51596, 670, 264, 1036, 1266, 924, 420, 370, 13, 51684, 51684, 1057, 558, 13, 51708, 51708, 1044, 291, 337, 428, 3202, 13, 51742, 51742, 663, 311, 869, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.18687385061512823, "compression_ratio": 1.9798387096774193, "no_speech_prob": 2.4679142370587215e-05}, {"id": 2301, "seek": 660624, "start": 6625.76, "end": 6627.44, "text": " why deep learning is so successful", "tokens": [50364, 1396, 291, 362, 264, 6814, 420, 17145, 295, 364, 4691, 13, 50486, 50486, 1396, 291, 362, 264, 6814, 420, 17145, 50560, 50560, 295, 257, 644, 295, 364, 2657, 13, 50620, 50620, 400, 550, 291, 362, 264, 6814, 420, 17145, 50702, 50702, 295, 364, 2657, 11, 21761, 295, 264, 2535, 295, 300, 2657, 11, 50906, 50906, 264, 30579, 2486, 11, 264, 2017, 11, 264, 2678, 3063, 626, 11, 264, 3678, 11, 51070, 51070, 721, 411, 300, 13, 51216, 51216, 407, 300, 311, 264, 12335, 11, 264, 1558, 51340, 51340, 983, 2452, 2539, 307, 370, 4406, 51424, 51424, 293, 983, 309, 311, 1936, 2726, 670, 264, 1002, 51596, 51596, 670, 264, 1036, 1266, 924, 420, 370, 13, 51684, 51684, 1057, 558, 13, 51708, 51708, 1044, 291, 337, 428, 3202, 13, 51742, 51742, 663, 311, 869, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.18687385061512823, "compression_ratio": 1.9798387096774193, "no_speech_prob": 2.4679142370587215e-05}, {"id": 2302, "seek": 660624, "start": 6627.44, "end": 6630.88, "text": " and why it's basically taken over the world", "tokens": [50364, 1396, 291, 362, 264, 6814, 420, 17145, 295, 364, 4691, 13, 50486, 50486, 1396, 291, 362, 264, 6814, 420, 17145, 50560, 50560, 295, 257, 644, 295, 364, 2657, 13, 50620, 50620, 400, 550, 291, 362, 264, 6814, 420, 17145, 50702, 50702, 295, 364, 2657, 11, 21761, 295, 264, 2535, 295, 300, 2657, 11, 50906, 50906, 264, 30579, 2486, 11, 264, 2017, 11, 264, 2678, 3063, 626, 11, 264, 3678, 11, 51070, 51070, 721, 411, 300, 13, 51216, 51216, 407, 300, 311, 264, 12335, 11, 264, 1558, 51340, 51340, 983, 2452, 2539, 307, 370, 4406, 51424, 51424, 293, 983, 309, 311, 1936, 2726, 670, 264, 1002, 51596, 51596, 670, 264, 1036, 1266, 924, 420, 370, 13, 51684, 51684, 1057, 558, 13, 51708, 51708, 1044, 291, 337, 428, 3202, 13, 51742, 51742, 663, 311, 869, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.18687385061512823, "compression_ratio": 1.9798387096774193, "no_speech_prob": 2.4679142370587215e-05}, {"id": 2303, "seek": 660624, "start": 6630.88, "end": 6632.639999999999, "text": " over the last 10 years or so.", "tokens": [50364, 1396, 291, 362, 264, 6814, 420, 17145, 295, 364, 4691, 13, 50486, 50486, 1396, 291, 362, 264, 6814, 420, 17145, 50560, 50560, 295, 257, 644, 295, 364, 2657, 13, 50620, 50620, 400, 550, 291, 362, 264, 6814, 420, 17145, 50702, 50702, 295, 364, 2657, 11, 21761, 295, 264, 2535, 295, 300, 2657, 11, 50906, 50906, 264, 30579, 2486, 11, 264, 2017, 11, 264, 2678, 3063, 626, 11, 264, 3678, 11, 51070, 51070, 721, 411, 300, 13, 51216, 51216, 407, 300, 311, 264, 12335, 11, 264, 1558, 51340, 51340, 983, 2452, 2539, 307, 370, 4406, 51424, 51424, 293, 983, 309, 311, 1936, 2726, 670, 264, 1002, 51596, 51596, 670, 264, 1036, 1266, 924, 420, 370, 13, 51684, 51684, 1057, 558, 13, 51708, 51708, 1044, 291, 337, 428, 3202, 13, 51742, 51742, 663, 311, 869, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.18687385061512823, "compression_ratio": 1.9798387096774193, "no_speech_prob": 2.4679142370587215e-05}, {"id": 2304, "seek": 660624, "start": 6632.639999999999, "end": 6633.12, "text": " All right.", "tokens": [50364, 1396, 291, 362, 264, 6814, 420, 17145, 295, 364, 4691, 13, 50486, 50486, 1396, 291, 362, 264, 6814, 420, 17145, 50560, 50560, 295, 257, 644, 295, 364, 2657, 13, 50620, 50620, 400, 550, 291, 362, 264, 6814, 420, 17145, 50702, 50702, 295, 364, 2657, 11, 21761, 295, 264, 2535, 295, 300, 2657, 11, 50906, 50906, 264, 30579, 2486, 11, 264, 2017, 11, 264, 2678, 3063, 626, 11, 264, 3678, 11, 51070, 51070, 721, 411, 300, 13, 51216, 51216, 407, 300, 311, 264, 12335, 11, 264, 1558, 51340, 51340, 983, 2452, 2539, 307, 370, 4406, 51424, 51424, 293, 983, 309, 311, 1936, 2726, 670, 264, 1002, 51596, 51596, 670, 264, 1036, 1266, 924, 420, 370, 13, 51684, 51684, 1057, 558, 13, 51708, 51708, 1044, 291, 337, 428, 3202, 13, 51742, 51742, 663, 311, 869, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.18687385061512823, "compression_ratio": 1.9798387096774193, "no_speech_prob": 2.4679142370587215e-05}, {"id": 2305, "seek": 660624, "start": 6633.12, "end": 6633.8, "text": " Thank you for your attention.", "tokens": [50364, 1396, 291, 362, 264, 6814, 420, 17145, 295, 364, 4691, 13, 50486, 50486, 1396, 291, 362, 264, 6814, 420, 17145, 50560, 50560, 295, 257, 644, 295, 364, 2657, 13, 50620, 50620, 400, 550, 291, 362, 264, 6814, 420, 17145, 50702, 50702, 295, 364, 2657, 11, 21761, 295, 264, 2535, 295, 300, 2657, 11, 50906, 50906, 264, 30579, 2486, 11, 264, 2017, 11, 264, 2678, 3063, 626, 11, 264, 3678, 11, 51070, 51070, 721, 411, 300, 13, 51216, 51216, 407, 300, 311, 264, 12335, 11, 264, 1558, 51340, 51340, 983, 2452, 2539, 307, 370, 4406, 51424, 51424, 293, 983, 309, 311, 1936, 2726, 670, 264, 1002, 51596, 51596, 670, 264, 1036, 1266, 924, 420, 370, 13, 51684, 51684, 1057, 558, 13, 51708, 51708, 1044, 291, 337, 428, 3202, 13, 51742, 51742, 663, 311, 869, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.18687385061512823, "compression_ratio": 1.9798387096774193, "no_speech_prob": 2.4679142370587215e-05}, {"id": 2306, "seek": 660624, "start": 6633.8, "end": 6634.5599999999995, "text": " That's great.", "tokens": [50364, 1396, 291, 362, 264, 6814, 420, 17145, 295, 364, 4691, 13, 50486, 50486, 1396, 291, 362, 264, 6814, 420, 17145, 50560, 50560, 295, 257, 644, 295, 364, 2657, 13, 50620, 50620, 400, 550, 291, 362, 264, 6814, 420, 17145, 50702, 50702, 295, 364, 2657, 11, 21761, 295, 264, 2535, 295, 300, 2657, 11, 50906, 50906, 264, 30579, 2486, 11, 264, 2017, 11, 264, 2678, 3063, 626, 11, 264, 3678, 11, 51070, 51070, 721, 411, 300, 13, 51216, 51216, 407, 300, 311, 264, 12335, 11, 264, 1558, 51340, 51340, 983, 2452, 2539, 307, 370, 4406, 51424, 51424, 293, 983, 309, 311, 1936, 2726, 670, 264, 1002, 51596, 51596, 670, 264, 1036, 1266, 924, 420, 370, 13, 51684, 51684, 1057, 558, 13, 51708, 51708, 1044, 291, 337, 428, 3202, 13, 51742, 51742, 663, 311, 869, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.18687385061512823, "compression_ratio": 1.9798387096774193, "no_speech_prob": 2.4679142370587215e-05}, {"id": 2307, "seek": 663456, "start": 6634.56, "end": 6636.240000000001, "text": " So for tomorrow, guys, don't forget", "tokens": [50364, 407, 337, 4153, 11, 1074, 11, 500, 380, 2870, 50448, 50448, 281, 853, 281, 352, 670, 264, 23185, 7073, 11, 50614, 50614, 40863, 11, 2597, 11, 264, 23185, 21060, 300, 321, 362, 322, 264, 3144, 50944, 50944, 1270, 300, 321, 393, 483, 439, 322, 264, 912, 1496, 337, 264, 2306, 51132, 51132, 300, 366, 406, 534, 4963, 365, 22592, 47, 88, 1507, 13, 51336, 51336, 407, 5911, 11, 718, 311, 536, 291, 4153, 2446, 13, 51474, 51474, 400, 362, 257, 1481, 786, 13, 51618, 51618, 3664, 1127, 11, 1518, 13, 51668, 51668, 4621, 6543, 13, 51694], "temperature": 0.0, "avg_logprob": -0.2052740564151686, "compression_ratio": 1.5446009389671362, "no_speech_prob": 0.0003630111750680953}, {"id": 2308, "seek": 663456, "start": 6636.240000000001, "end": 6639.56, "text": " to try to go over the 01 tutorial,", "tokens": [50364, 407, 337, 4153, 11, 1074, 11, 500, 380, 2870, 50448, 50448, 281, 853, 281, 352, 670, 264, 23185, 7073, 11, 50614, 50614, 40863, 11, 2597, 11, 264, 23185, 21060, 300, 321, 362, 322, 264, 3144, 50944, 50944, 1270, 300, 321, 393, 483, 439, 322, 264, 912, 1496, 337, 264, 2306, 51132, 51132, 300, 366, 406, 534, 4963, 365, 22592, 47, 88, 1507, 13, 51336, 51336, 407, 5911, 11, 718, 311, 536, 291, 4153, 2446, 13, 51474, 51474, 400, 362, 257, 1481, 786, 13, 51618, 51618, 3664, 1127, 11, 1518, 13, 51668, 51668, 4621, 6543, 13, 51694], "temperature": 0.0, "avg_logprob": -0.2052740564151686, "compression_ratio": 1.5446009389671362, "no_speech_prob": 0.0003630111750680953}, {"id": 2309, "seek": 663456, "start": 6639.56, "end": 6646.160000000001, "text": " tensor, sorry, the 01 notebook that we have on the website", "tokens": [50364, 407, 337, 4153, 11, 1074, 11, 500, 380, 2870, 50448, 50448, 281, 853, 281, 352, 670, 264, 23185, 7073, 11, 50614, 50614, 40863, 11, 2597, 11, 264, 23185, 21060, 300, 321, 362, 322, 264, 3144, 50944, 50944, 1270, 300, 321, 393, 483, 439, 322, 264, 912, 1496, 337, 264, 2306, 51132, 51132, 300, 366, 406, 534, 4963, 365, 22592, 47, 88, 1507, 13, 51336, 51336, 407, 5911, 11, 718, 311, 536, 291, 4153, 2446, 13, 51474, 51474, 400, 362, 257, 1481, 786, 13, 51618, 51618, 3664, 1127, 11, 1518, 13, 51668, 51668, 4621, 6543, 13, 51694], "temperature": 0.0, "avg_logprob": -0.2052740564151686, "compression_ratio": 1.5446009389671362, "no_speech_prob": 0.0003630111750680953}, {"id": 2310, "seek": 663456, "start": 6646.160000000001, "end": 6649.92, "text": " such that we can get all on the same level for the ones", "tokens": [50364, 407, 337, 4153, 11, 1074, 11, 500, 380, 2870, 50448, 50448, 281, 853, 281, 352, 670, 264, 23185, 7073, 11, 50614, 50614, 40863, 11, 2597, 11, 264, 23185, 21060, 300, 321, 362, 322, 264, 3144, 50944, 50944, 1270, 300, 321, 393, 483, 439, 322, 264, 912, 1496, 337, 264, 2306, 51132, 51132, 300, 366, 406, 534, 4963, 365, 22592, 47, 88, 1507, 13, 51336, 51336, 407, 5911, 11, 718, 311, 536, 291, 4153, 2446, 13, 51474, 51474, 400, 362, 257, 1481, 786, 13, 51618, 51618, 3664, 1127, 11, 1518, 13, 51668, 51668, 4621, 6543, 13, 51694], "temperature": 0.0, "avg_logprob": -0.2052740564151686, "compression_ratio": 1.5446009389671362, "no_speech_prob": 0.0003630111750680953}, {"id": 2311, "seek": 663456, "start": 6649.92, "end": 6654.0, "text": " that are not really familiar with NumPy stuff.", "tokens": [50364, 407, 337, 4153, 11, 1074, 11, 500, 380, 2870, 50448, 50448, 281, 853, 281, 352, 670, 264, 23185, 7073, 11, 50614, 50614, 40863, 11, 2597, 11, 264, 23185, 21060, 300, 321, 362, 322, 264, 3144, 50944, 50944, 1270, 300, 321, 393, 483, 439, 322, 264, 912, 1496, 337, 264, 2306, 51132, 51132, 300, 366, 406, 534, 4963, 365, 22592, 47, 88, 1507, 13, 51336, 51336, 407, 5911, 11, 718, 311, 536, 291, 4153, 2446, 13, 51474, 51474, 400, 362, 257, 1481, 786, 13, 51618, 51618, 3664, 1127, 11, 1518, 13, 51668, 51668, 4621, 6543, 13, 51694], "temperature": 0.0, "avg_logprob": -0.2052740564151686, "compression_ratio": 1.5446009389671362, "no_speech_prob": 0.0003630111750680953}, {"id": 2312, "seek": 663456, "start": 6654.0, "end": 6656.76, "text": " So otherwise, let's see you tomorrow morning.", "tokens": [50364, 407, 337, 4153, 11, 1074, 11, 500, 380, 2870, 50448, 50448, 281, 853, 281, 352, 670, 264, 23185, 7073, 11, 50614, 50614, 40863, 11, 2597, 11, 264, 23185, 21060, 300, 321, 362, 322, 264, 3144, 50944, 50944, 1270, 300, 321, 393, 483, 439, 322, 264, 912, 1496, 337, 264, 2306, 51132, 51132, 300, 366, 406, 534, 4963, 365, 22592, 47, 88, 1507, 13, 51336, 51336, 407, 5911, 11, 718, 311, 536, 291, 4153, 2446, 13, 51474, 51474, 400, 362, 257, 1481, 786, 13, 51618, 51618, 3664, 1127, 11, 1518, 13, 51668, 51668, 4621, 6543, 13, 51694], "temperature": 0.0, "avg_logprob": -0.2052740564151686, "compression_ratio": 1.5446009389671362, "no_speech_prob": 0.0003630111750680953}, {"id": 2313, "seek": 663456, "start": 6656.76, "end": 6659.64, "text": " And have a nice day.", "tokens": [50364, 407, 337, 4153, 11, 1074, 11, 500, 380, 2870, 50448, 50448, 281, 853, 281, 352, 670, 264, 23185, 7073, 11, 50614, 50614, 40863, 11, 2597, 11, 264, 23185, 21060, 300, 321, 362, 322, 264, 3144, 50944, 50944, 1270, 300, 321, 393, 483, 439, 322, 264, 912, 1496, 337, 264, 2306, 51132, 51132, 300, 366, 406, 534, 4963, 365, 22592, 47, 88, 1507, 13, 51336, 51336, 407, 5911, 11, 718, 311, 536, 291, 4153, 2446, 13, 51474, 51474, 400, 362, 257, 1481, 786, 13, 51618, 51618, 3664, 1127, 11, 1518, 13, 51668, 51668, 4621, 6543, 13, 51694], "temperature": 0.0, "avg_logprob": -0.2052740564151686, "compression_ratio": 1.5446009389671362, "no_speech_prob": 0.0003630111750680953}, {"id": 2314, "seek": 663456, "start": 6659.64, "end": 6660.64, "text": " Take care, everyone.", "tokens": [50364, 407, 337, 4153, 11, 1074, 11, 500, 380, 2870, 50448, 50448, 281, 853, 281, 352, 670, 264, 23185, 7073, 11, 50614, 50614, 40863, 11, 2597, 11, 264, 23185, 21060, 300, 321, 362, 322, 264, 3144, 50944, 50944, 1270, 300, 321, 393, 483, 439, 322, 264, 912, 1496, 337, 264, 2306, 51132, 51132, 300, 366, 406, 534, 4963, 365, 22592, 47, 88, 1507, 13, 51336, 51336, 407, 5911, 11, 718, 311, 536, 291, 4153, 2446, 13, 51474, 51474, 400, 362, 257, 1481, 786, 13, 51618, 51618, 3664, 1127, 11, 1518, 13, 51668, 51668, 4621, 6543, 13, 51694], "temperature": 0.0, "avg_logprob": -0.2052740564151686, "compression_ratio": 1.5446009389671362, "no_speech_prob": 0.0003630111750680953}, {"id": 2315, "seek": 666064, "start": 6660.64, "end": 6665.320000000001, "text": " Bye bye.", "tokens": [50364, 4621, 6543, 13, 50598], "temperature": 0.0, "avg_logprob": -0.6005456447601318, "compression_ratio": 0.5, "no_speech_prob": 0.00033440659171901643}], "language": "en", "video_id": "nTlCqaL7fCY", "entity": "Yann LeCun"}}