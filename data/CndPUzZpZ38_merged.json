{"video_id": "CndPUzZpZ38", "title": "6.10 Machine Learning development process | Iterative loop of ML development --[ML | Andrew Ng]", "description": "Second Course:\nAdvanced Learning Algorithms.\n\n\nIf you liked the content please subscribe and put a little blue thumb.\nTake heart!", "author": "Machine Learning", "keywords": [], "channel_url": "https://www.youtube.com/channel/UClG5HEAJJFOavT_UolqYROQ", "length": 462, "views": 74, "publish_date": "11/04/2022", "timestamp": 1661817600, "entity": "ML Specialization, Andrew Ng (2022)", "transcript": {"text": " In the next few videos, I'd like to share with you what it's like to go through the process of developing a machine learning system so that when you are doing so yourself, hopefully you'll be in a position to make great decisions at many stages of the machine learning development process. Let's take a look first at the iterative loop of machine learning development. This is what developing a machine learning model will often feel like. First, you decide on what is the overall architecture of your system. And that means choosing your machine learning model as well as deciding what data to use, maybe picking the hyperparameters and so on. Then, given those decisions, you would implement and train a model. And as I've mentioned before, when you train a model for the first time, it will almost never work as well as you want it to. The next step that I recommend then is to implement or to look at a few diagnostics, such as looking at the bias and variance of your algorithm, as well as something we'll see in the next video called error analysis. And based on the insights from the diagnostics, you can then make decisions like, do you want to make your neural network bigger or change the lambda regularization parameter or maybe add more data or add more features or subtract features. And then you go around this loop again with your new choice of architecture. And it will often take multiple iterations through this loop until you get to the performance that you want. Let's look at an example of building an email spam classifier. I think many of us passionately hate email spam. And this is a problem that I worked on years ago and also was involved in starting an app anti-spam conference once years ago. The example on the left is what a highly spammy email might look like. Day of the week, buy now Rolex watches and spammers will sometimes deliberately misspell words like these watches, medicine, and mortgages in order to try to trip up a spam recognizer. And in contrast, this email on the right is an actual email I once got from my younger brother Alfred about getting together for Christmas. So how do you build a classifier to recognize spam versus non spam emails? One way to do so would be to train a supervised learning algorithm where the input features x will be the features of an email and the output label y will be one or zero depending on whether a spam or not spam. So one way this application is an example of text classification because you're taking a text document that is an email and try to classify it as either spam or non spam. One way to construct the features of the email would be to say, take the top 10,000 words in the English language or in some other dictionary and use them to define features x1 x2 through x 10,000. So for example, given this email on the right, if the list of words we have is a, Andrew, buy, deal, discount, and so on, then given the email on the right, we would set these features to be say zero or one depending on whether or not that word appears. So the word a does not appear. The word Andrew does appear. The word buy does appear. Deal does, discount does not, and so on. And so you can construct 10,000 features of this email. And there are many ways to construct the feature vector. Another way would be to let these numbers not just be one or zero, but actually count the number of times a given word appears in the email. So if buy appears twice, maybe you want to set this to two, but setting it to just one or zero actually works decently well. Given these features, you can then train a classification algorithm such as a logistic regression model or a neural network to predict y given these features x. After you've trained your initial model, if it doesn't work as well as you wish, you will quite likely have multiple ideas for improving the learning algorithm's performance. For example, it's always tempting to collect more data. In fact, I have friends that have worked on very large scale honeypot projects, and these are projects that create a large number of fake email addresses and tries deliberately to get these fake email addresses into the hands of spammers so that when they send spam email to these fake emails, well, we know these are spam messages. And so this is a way to get a lot of spam data. Or you might decide to work on developing more sophisticated features based on the email routing. Email routing refers to the sequence of compute service, sometimes around the world, that the email has gone through on its way to reach you. And emails actually have what's called email header information. That is information that keeps track of how the email has traveled across different servers, across different networks to find its way to you. And sometimes the path that an email has traveled can help tell you if it was sent by a spammer or not. Or you might work on coming up with more sophisticated features from the email body that is the text of the email. So in the features I talked about last time, discounting and discount might be treated as different words, but maybe they should be treated as the same words. Or you might decide to come up with algorithms to detect misspellings or deliberate misspellings like watches, medicine, and mortgage. And this too could help you decide if an email is spammy. So given all of these and possibly even more ideas, how can you decide which of these ideas are more promising to work on? Because choosing the more promising paths forward can speed up your project easily 10 times compared to if you were to somehow choose some of the less promising directions. For example, we've already seen that if your algorithm has high bias rather than high variance, then spending months and months on a honeypot project may not be the most fruitful direction. But if your algorithm has high variance, then collecting more data could help a lot. So during the interlude of machine learning development, you may have many ideas for how to modify the model or the data, and it will be coming up with different diagnostics that could give you a lot of guidance on what choices for the model or data or other parts of the architecture could be most promising to try. In the last several videos, we've already talked about bias and variance. In the next video, I'd like to start describing to you the error analysis process, which is a second key set of ideas for gaining insights about what architecture choices might be fruitful. So that's the iterative loop of machine learning development. And using the example of building a spam classifier, let's take a look at what error analysis looks like. We'll talk about that in the next video.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.0, "text": " In the next few videos, I'd like to share with you what it's like to go through the", "tokens": [50364, 682, 264, 958, 1326, 2145, 11, 286, 1116, 411, 281, 2073, 365, 291, 437, 309, 311, 411, 281, 352, 807, 264, 50714, 50714, 1399, 295, 6416, 257, 3479, 2539, 1185, 370, 300, 562, 291, 366, 884, 370, 1803, 11, 4696, 51004, 51004, 291, 603, 312, 294, 257, 2535, 281, 652, 869, 5327, 412, 867, 10232, 295, 264, 3479, 2539, 3250, 51280, 51280, 1399, 13, 51330, 51330, 961, 311, 747, 257, 574, 700, 412, 264, 17138, 1166, 6367, 295, 3479, 2539, 3250, 13, 51610, 51610, 639, 307, 437, 6416, 257, 3479, 2539, 2316, 486, 2049, 841, 411, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.11906360399605025, "compression_ratio": 1.8368200836820083, "no_speech_prob": 0.018819991499185562}, {"id": 1, "seek": 0, "start": 7.0, "end": 12.8, "text": " process of developing a machine learning system so that when you are doing so yourself, hopefully", "tokens": [50364, 682, 264, 958, 1326, 2145, 11, 286, 1116, 411, 281, 2073, 365, 291, 437, 309, 311, 411, 281, 352, 807, 264, 50714, 50714, 1399, 295, 6416, 257, 3479, 2539, 1185, 370, 300, 562, 291, 366, 884, 370, 1803, 11, 4696, 51004, 51004, 291, 603, 312, 294, 257, 2535, 281, 652, 869, 5327, 412, 867, 10232, 295, 264, 3479, 2539, 3250, 51280, 51280, 1399, 13, 51330, 51330, 961, 311, 747, 257, 574, 700, 412, 264, 17138, 1166, 6367, 295, 3479, 2539, 3250, 13, 51610, 51610, 639, 307, 437, 6416, 257, 3479, 2539, 2316, 486, 2049, 841, 411, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.11906360399605025, "compression_ratio": 1.8368200836820083, "no_speech_prob": 0.018819991499185562}, {"id": 2, "seek": 0, "start": 12.8, "end": 18.32, "text": " you'll be in a position to make great decisions at many stages of the machine learning development", "tokens": [50364, 682, 264, 958, 1326, 2145, 11, 286, 1116, 411, 281, 2073, 365, 291, 437, 309, 311, 411, 281, 352, 807, 264, 50714, 50714, 1399, 295, 6416, 257, 3479, 2539, 1185, 370, 300, 562, 291, 366, 884, 370, 1803, 11, 4696, 51004, 51004, 291, 603, 312, 294, 257, 2535, 281, 652, 869, 5327, 412, 867, 10232, 295, 264, 3479, 2539, 3250, 51280, 51280, 1399, 13, 51330, 51330, 961, 311, 747, 257, 574, 700, 412, 264, 17138, 1166, 6367, 295, 3479, 2539, 3250, 13, 51610, 51610, 639, 307, 437, 6416, 257, 3479, 2539, 2316, 486, 2049, 841, 411, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.11906360399605025, "compression_ratio": 1.8368200836820083, "no_speech_prob": 0.018819991499185562}, {"id": 3, "seek": 0, "start": 18.32, "end": 19.32, "text": " process.", "tokens": [50364, 682, 264, 958, 1326, 2145, 11, 286, 1116, 411, 281, 2073, 365, 291, 437, 309, 311, 411, 281, 352, 807, 264, 50714, 50714, 1399, 295, 6416, 257, 3479, 2539, 1185, 370, 300, 562, 291, 366, 884, 370, 1803, 11, 4696, 51004, 51004, 291, 603, 312, 294, 257, 2535, 281, 652, 869, 5327, 412, 867, 10232, 295, 264, 3479, 2539, 3250, 51280, 51280, 1399, 13, 51330, 51330, 961, 311, 747, 257, 574, 700, 412, 264, 17138, 1166, 6367, 295, 3479, 2539, 3250, 13, 51610, 51610, 639, 307, 437, 6416, 257, 3479, 2539, 2316, 486, 2049, 841, 411, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.11906360399605025, "compression_ratio": 1.8368200836820083, "no_speech_prob": 0.018819991499185562}, {"id": 4, "seek": 0, "start": 19.32, "end": 24.92, "text": " Let's take a look first at the iterative loop of machine learning development.", "tokens": [50364, 682, 264, 958, 1326, 2145, 11, 286, 1116, 411, 281, 2073, 365, 291, 437, 309, 311, 411, 281, 352, 807, 264, 50714, 50714, 1399, 295, 6416, 257, 3479, 2539, 1185, 370, 300, 562, 291, 366, 884, 370, 1803, 11, 4696, 51004, 51004, 291, 603, 312, 294, 257, 2535, 281, 652, 869, 5327, 412, 867, 10232, 295, 264, 3479, 2539, 3250, 51280, 51280, 1399, 13, 51330, 51330, 961, 311, 747, 257, 574, 700, 412, 264, 17138, 1166, 6367, 295, 3479, 2539, 3250, 13, 51610, 51610, 639, 307, 437, 6416, 257, 3479, 2539, 2316, 486, 2049, 841, 411, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.11906360399605025, "compression_ratio": 1.8368200836820083, "no_speech_prob": 0.018819991499185562}, {"id": 5, "seek": 0, "start": 24.92, "end": 28.72, "text": " This is what developing a machine learning model will often feel like.", "tokens": [50364, 682, 264, 958, 1326, 2145, 11, 286, 1116, 411, 281, 2073, 365, 291, 437, 309, 311, 411, 281, 352, 807, 264, 50714, 50714, 1399, 295, 6416, 257, 3479, 2539, 1185, 370, 300, 562, 291, 366, 884, 370, 1803, 11, 4696, 51004, 51004, 291, 603, 312, 294, 257, 2535, 281, 652, 869, 5327, 412, 867, 10232, 295, 264, 3479, 2539, 3250, 51280, 51280, 1399, 13, 51330, 51330, 961, 311, 747, 257, 574, 700, 412, 264, 17138, 1166, 6367, 295, 3479, 2539, 3250, 13, 51610, 51610, 639, 307, 437, 6416, 257, 3479, 2539, 2316, 486, 2049, 841, 411, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.11906360399605025, "compression_ratio": 1.8368200836820083, "no_speech_prob": 0.018819991499185562}, {"id": 6, "seek": 2872, "start": 28.72, "end": 33.72, "text": " First, you decide on what is the overall architecture of your system.", "tokens": [50364, 2386, 11, 291, 4536, 322, 437, 307, 264, 4787, 9482, 295, 428, 1185, 13, 50614, 50614, 400, 300, 1355, 10875, 428, 3479, 2539, 2316, 382, 731, 382, 17990, 437, 1412, 281, 764, 11, 50890, 50890, 1310, 8867, 264, 9848, 2181, 335, 6202, 293, 370, 322, 13, 51046, 51046, 1396, 11, 2212, 729, 5327, 11, 291, 576, 4445, 293, 3847, 257, 2316, 13, 51348, 51348, 400, 382, 286, 600, 2835, 949, 11, 562, 291, 3847, 257, 2316, 337, 264, 700, 565, 11, 309, 486, 1920, 51552, 51552, 1128, 589, 382, 731, 382, 291, 528, 309, 281, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.159729642868042, "compression_ratio": 1.6583333333333334, "no_speech_prob": 1.7230684534297325e-05}, {"id": 7, "seek": 2872, "start": 33.72, "end": 39.239999999999995, "text": " And that means choosing your machine learning model as well as deciding what data to use,", "tokens": [50364, 2386, 11, 291, 4536, 322, 437, 307, 264, 4787, 9482, 295, 428, 1185, 13, 50614, 50614, 400, 300, 1355, 10875, 428, 3479, 2539, 2316, 382, 731, 382, 17990, 437, 1412, 281, 764, 11, 50890, 50890, 1310, 8867, 264, 9848, 2181, 335, 6202, 293, 370, 322, 13, 51046, 51046, 1396, 11, 2212, 729, 5327, 11, 291, 576, 4445, 293, 3847, 257, 2316, 13, 51348, 51348, 400, 382, 286, 600, 2835, 949, 11, 562, 291, 3847, 257, 2316, 337, 264, 700, 565, 11, 309, 486, 1920, 51552, 51552, 1128, 589, 382, 731, 382, 291, 528, 309, 281, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.159729642868042, "compression_ratio": 1.6583333333333334, "no_speech_prob": 1.7230684534297325e-05}, {"id": 8, "seek": 2872, "start": 39.239999999999995, "end": 42.36, "text": " maybe picking the hyperparameters and so on.", "tokens": [50364, 2386, 11, 291, 4536, 322, 437, 307, 264, 4787, 9482, 295, 428, 1185, 13, 50614, 50614, 400, 300, 1355, 10875, 428, 3479, 2539, 2316, 382, 731, 382, 17990, 437, 1412, 281, 764, 11, 50890, 50890, 1310, 8867, 264, 9848, 2181, 335, 6202, 293, 370, 322, 13, 51046, 51046, 1396, 11, 2212, 729, 5327, 11, 291, 576, 4445, 293, 3847, 257, 2316, 13, 51348, 51348, 400, 382, 286, 600, 2835, 949, 11, 562, 291, 3847, 257, 2316, 337, 264, 700, 565, 11, 309, 486, 1920, 51552, 51552, 1128, 589, 382, 731, 382, 291, 528, 309, 281, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.159729642868042, "compression_ratio": 1.6583333333333334, "no_speech_prob": 1.7230684534297325e-05}, {"id": 9, "seek": 2872, "start": 42.36, "end": 48.4, "text": " Then, given those decisions, you would implement and train a model.", "tokens": [50364, 2386, 11, 291, 4536, 322, 437, 307, 264, 4787, 9482, 295, 428, 1185, 13, 50614, 50614, 400, 300, 1355, 10875, 428, 3479, 2539, 2316, 382, 731, 382, 17990, 437, 1412, 281, 764, 11, 50890, 50890, 1310, 8867, 264, 9848, 2181, 335, 6202, 293, 370, 322, 13, 51046, 51046, 1396, 11, 2212, 729, 5327, 11, 291, 576, 4445, 293, 3847, 257, 2316, 13, 51348, 51348, 400, 382, 286, 600, 2835, 949, 11, 562, 291, 3847, 257, 2316, 337, 264, 700, 565, 11, 309, 486, 1920, 51552, 51552, 1128, 589, 382, 731, 382, 291, 528, 309, 281, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.159729642868042, "compression_ratio": 1.6583333333333334, "no_speech_prob": 1.7230684534297325e-05}, {"id": 10, "seek": 2872, "start": 48.4, "end": 52.480000000000004, "text": " And as I've mentioned before, when you train a model for the first time, it will almost", "tokens": [50364, 2386, 11, 291, 4536, 322, 437, 307, 264, 4787, 9482, 295, 428, 1185, 13, 50614, 50614, 400, 300, 1355, 10875, 428, 3479, 2539, 2316, 382, 731, 382, 17990, 437, 1412, 281, 764, 11, 50890, 50890, 1310, 8867, 264, 9848, 2181, 335, 6202, 293, 370, 322, 13, 51046, 51046, 1396, 11, 2212, 729, 5327, 11, 291, 576, 4445, 293, 3847, 257, 2316, 13, 51348, 51348, 400, 382, 286, 600, 2835, 949, 11, 562, 291, 3847, 257, 2316, 337, 264, 700, 565, 11, 309, 486, 1920, 51552, 51552, 1128, 589, 382, 731, 382, 291, 528, 309, 281, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.159729642868042, "compression_ratio": 1.6583333333333334, "no_speech_prob": 1.7230684534297325e-05}, {"id": 11, "seek": 2872, "start": 52.480000000000004, "end": 56.08, "text": " never work as well as you want it to.", "tokens": [50364, 2386, 11, 291, 4536, 322, 437, 307, 264, 4787, 9482, 295, 428, 1185, 13, 50614, 50614, 400, 300, 1355, 10875, 428, 3479, 2539, 2316, 382, 731, 382, 17990, 437, 1412, 281, 764, 11, 50890, 50890, 1310, 8867, 264, 9848, 2181, 335, 6202, 293, 370, 322, 13, 51046, 51046, 1396, 11, 2212, 729, 5327, 11, 291, 576, 4445, 293, 3847, 257, 2316, 13, 51348, 51348, 400, 382, 286, 600, 2835, 949, 11, 562, 291, 3847, 257, 2316, 337, 264, 700, 565, 11, 309, 486, 1920, 51552, 51552, 1128, 589, 382, 731, 382, 291, 528, 309, 281, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.159729642868042, "compression_ratio": 1.6583333333333334, "no_speech_prob": 1.7230684534297325e-05}, {"id": 12, "seek": 5608, "start": 56.08, "end": 62.0, "text": " The next step that I recommend then is to implement or to look at a few diagnostics,", "tokens": [50364, 440, 958, 1823, 300, 286, 2748, 550, 307, 281, 4445, 420, 281, 574, 412, 257, 1326, 43215, 1167, 11, 50660, 50660, 1270, 382, 1237, 412, 264, 12577, 293, 21977, 295, 428, 9284, 11, 382, 731, 382, 746, 321, 603, 50868, 50868, 536, 294, 264, 958, 960, 1219, 6713, 5215, 13, 51058, 51058, 400, 2361, 322, 264, 14310, 490, 264, 43215, 1167, 11, 291, 393, 550, 652, 5327, 411, 11, 360, 291, 528, 51334, 51334, 281, 652, 428, 18161, 3209, 3801, 420, 1319, 264, 13607, 3890, 2144, 13075, 420, 1310, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10690159951486895, "compression_ratio": 1.6194331983805668, "no_speech_prob": 6.962088718864834e-06}, {"id": 13, "seek": 5608, "start": 62.0, "end": 66.16, "text": " such as looking at the bias and variance of your algorithm, as well as something we'll", "tokens": [50364, 440, 958, 1823, 300, 286, 2748, 550, 307, 281, 4445, 420, 281, 574, 412, 257, 1326, 43215, 1167, 11, 50660, 50660, 1270, 382, 1237, 412, 264, 12577, 293, 21977, 295, 428, 9284, 11, 382, 731, 382, 746, 321, 603, 50868, 50868, 536, 294, 264, 958, 960, 1219, 6713, 5215, 13, 51058, 51058, 400, 2361, 322, 264, 14310, 490, 264, 43215, 1167, 11, 291, 393, 550, 652, 5327, 411, 11, 360, 291, 528, 51334, 51334, 281, 652, 428, 18161, 3209, 3801, 420, 1319, 264, 13607, 3890, 2144, 13075, 420, 1310, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10690159951486895, "compression_ratio": 1.6194331983805668, "no_speech_prob": 6.962088718864834e-06}, {"id": 14, "seek": 5608, "start": 66.16, "end": 69.96, "text": " see in the next video called error analysis.", "tokens": [50364, 440, 958, 1823, 300, 286, 2748, 550, 307, 281, 4445, 420, 281, 574, 412, 257, 1326, 43215, 1167, 11, 50660, 50660, 1270, 382, 1237, 412, 264, 12577, 293, 21977, 295, 428, 9284, 11, 382, 731, 382, 746, 321, 603, 50868, 50868, 536, 294, 264, 958, 960, 1219, 6713, 5215, 13, 51058, 51058, 400, 2361, 322, 264, 14310, 490, 264, 43215, 1167, 11, 291, 393, 550, 652, 5327, 411, 11, 360, 291, 528, 51334, 51334, 281, 652, 428, 18161, 3209, 3801, 420, 1319, 264, 13607, 3890, 2144, 13075, 420, 1310, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10690159951486895, "compression_ratio": 1.6194331983805668, "no_speech_prob": 6.962088718864834e-06}, {"id": 15, "seek": 5608, "start": 69.96, "end": 75.48, "text": " And based on the insights from the diagnostics, you can then make decisions like, do you want", "tokens": [50364, 440, 958, 1823, 300, 286, 2748, 550, 307, 281, 4445, 420, 281, 574, 412, 257, 1326, 43215, 1167, 11, 50660, 50660, 1270, 382, 1237, 412, 264, 12577, 293, 21977, 295, 428, 9284, 11, 382, 731, 382, 746, 321, 603, 50868, 50868, 536, 294, 264, 958, 960, 1219, 6713, 5215, 13, 51058, 51058, 400, 2361, 322, 264, 14310, 490, 264, 43215, 1167, 11, 291, 393, 550, 652, 5327, 411, 11, 360, 291, 528, 51334, 51334, 281, 652, 428, 18161, 3209, 3801, 420, 1319, 264, 13607, 3890, 2144, 13075, 420, 1310, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10690159951486895, "compression_ratio": 1.6194331983805668, "no_speech_prob": 6.962088718864834e-06}, {"id": 16, "seek": 5608, "start": 75.48, "end": 82.32, "text": " to make your neural network bigger or change the lambda regularization parameter or maybe", "tokens": [50364, 440, 958, 1823, 300, 286, 2748, 550, 307, 281, 4445, 420, 281, 574, 412, 257, 1326, 43215, 1167, 11, 50660, 50660, 1270, 382, 1237, 412, 264, 12577, 293, 21977, 295, 428, 9284, 11, 382, 731, 382, 746, 321, 603, 50868, 50868, 536, 294, 264, 958, 960, 1219, 6713, 5215, 13, 51058, 51058, 400, 2361, 322, 264, 14310, 490, 264, 43215, 1167, 11, 291, 393, 550, 652, 5327, 411, 11, 360, 291, 528, 51334, 51334, 281, 652, 428, 18161, 3209, 3801, 420, 1319, 264, 13607, 3890, 2144, 13075, 420, 1310, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10690159951486895, "compression_ratio": 1.6194331983805668, "no_speech_prob": 6.962088718864834e-06}, {"id": 17, "seek": 8232, "start": 82.32, "end": 86.6, "text": " add more data or add more features or subtract features.", "tokens": [50364, 909, 544, 1412, 420, 909, 544, 4122, 420, 16390, 4122, 13, 50578, 50578, 400, 550, 291, 352, 926, 341, 6367, 797, 365, 428, 777, 3922, 295, 9482, 13, 50828, 50828, 400, 309, 486, 2049, 747, 3866, 36540, 807, 341, 6367, 1826, 291, 483, 281, 264, 3389, 51063, 51063, 300, 291, 528, 13, 51154, 51154, 961, 311, 574, 412, 364, 1365, 295, 2390, 364, 3796, 24028, 1508, 9902, 13, 51364, 51364, 286, 519, 867, 295, 505, 5418, 1592, 4700, 3796, 24028, 13, 51558, 51558, 400, 341, 307, 257, 1154, 300, 286, 2732, 322, 924, 2057, 293, 611, 390, 3288, 294, 2891, 364, 724, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13739239494755584, "compression_ratio": 1.7209302325581395, "no_speech_prob": 5.01458134749555e-06}, {"id": 18, "seek": 8232, "start": 86.6, "end": 91.6, "text": " And then you go around this loop again with your new choice of architecture.", "tokens": [50364, 909, 544, 1412, 420, 909, 544, 4122, 420, 16390, 4122, 13, 50578, 50578, 400, 550, 291, 352, 926, 341, 6367, 797, 365, 428, 777, 3922, 295, 9482, 13, 50828, 50828, 400, 309, 486, 2049, 747, 3866, 36540, 807, 341, 6367, 1826, 291, 483, 281, 264, 3389, 51063, 51063, 300, 291, 528, 13, 51154, 51154, 961, 311, 574, 412, 364, 1365, 295, 2390, 364, 3796, 24028, 1508, 9902, 13, 51364, 51364, 286, 519, 867, 295, 505, 5418, 1592, 4700, 3796, 24028, 13, 51558, 51558, 400, 341, 307, 257, 1154, 300, 286, 2732, 322, 924, 2057, 293, 611, 390, 3288, 294, 2891, 364, 724, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13739239494755584, "compression_ratio": 1.7209302325581395, "no_speech_prob": 5.01458134749555e-06}, {"id": 19, "seek": 8232, "start": 91.6, "end": 96.3, "text": " And it will often take multiple iterations through this loop until you get to the performance", "tokens": [50364, 909, 544, 1412, 420, 909, 544, 4122, 420, 16390, 4122, 13, 50578, 50578, 400, 550, 291, 352, 926, 341, 6367, 797, 365, 428, 777, 3922, 295, 9482, 13, 50828, 50828, 400, 309, 486, 2049, 747, 3866, 36540, 807, 341, 6367, 1826, 291, 483, 281, 264, 3389, 51063, 51063, 300, 291, 528, 13, 51154, 51154, 961, 311, 574, 412, 364, 1365, 295, 2390, 364, 3796, 24028, 1508, 9902, 13, 51364, 51364, 286, 519, 867, 295, 505, 5418, 1592, 4700, 3796, 24028, 13, 51558, 51558, 400, 341, 307, 257, 1154, 300, 286, 2732, 322, 924, 2057, 293, 611, 390, 3288, 294, 2891, 364, 724, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13739239494755584, "compression_ratio": 1.7209302325581395, "no_speech_prob": 5.01458134749555e-06}, {"id": 20, "seek": 8232, "start": 96.3, "end": 98.11999999999999, "text": " that you want.", "tokens": [50364, 909, 544, 1412, 420, 909, 544, 4122, 420, 16390, 4122, 13, 50578, 50578, 400, 550, 291, 352, 926, 341, 6367, 797, 365, 428, 777, 3922, 295, 9482, 13, 50828, 50828, 400, 309, 486, 2049, 747, 3866, 36540, 807, 341, 6367, 1826, 291, 483, 281, 264, 3389, 51063, 51063, 300, 291, 528, 13, 51154, 51154, 961, 311, 574, 412, 364, 1365, 295, 2390, 364, 3796, 24028, 1508, 9902, 13, 51364, 51364, 286, 519, 867, 295, 505, 5418, 1592, 4700, 3796, 24028, 13, 51558, 51558, 400, 341, 307, 257, 1154, 300, 286, 2732, 322, 924, 2057, 293, 611, 390, 3288, 294, 2891, 364, 724, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13739239494755584, "compression_ratio": 1.7209302325581395, "no_speech_prob": 5.01458134749555e-06}, {"id": 21, "seek": 8232, "start": 98.11999999999999, "end": 102.32, "text": " Let's look at an example of building an email spam classifier.", "tokens": [50364, 909, 544, 1412, 420, 909, 544, 4122, 420, 16390, 4122, 13, 50578, 50578, 400, 550, 291, 352, 926, 341, 6367, 797, 365, 428, 777, 3922, 295, 9482, 13, 50828, 50828, 400, 309, 486, 2049, 747, 3866, 36540, 807, 341, 6367, 1826, 291, 483, 281, 264, 3389, 51063, 51063, 300, 291, 528, 13, 51154, 51154, 961, 311, 574, 412, 364, 1365, 295, 2390, 364, 3796, 24028, 1508, 9902, 13, 51364, 51364, 286, 519, 867, 295, 505, 5418, 1592, 4700, 3796, 24028, 13, 51558, 51558, 400, 341, 307, 257, 1154, 300, 286, 2732, 322, 924, 2057, 293, 611, 390, 3288, 294, 2891, 364, 724, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13739239494755584, "compression_ratio": 1.7209302325581395, "no_speech_prob": 5.01458134749555e-06}, {"id": 22, "seek": 8232, "start": 102.32, "end": 106.19999999999999, "text": " I think many of us passionately hate email spam.", "tokens": [50364, 909, 544, 1412, 420, 909, 544, 4122, 420, 16390, 4122, 13, 50578, 50578, 400, 550, 291, 352, 926, 341, 6367, 797, 365, 428, 777, 3922, 295, 9482, 13, 50828, 50828, 400, 309, 486, 2049, 747, 3866, 36540, 807, 341, 6367, 1826, 291, 483, 281, 264, 3389, 51063, 51063, 300, 291, 528, 13, 51154, 51154, 961, 311, 574, 412, 364, 1365, 295, 2390, 364, 3796, 24028, 1508, 9902, 13, 51364, 51364, 286, 519, 867, 295, 505, 5418, 1592, 4700, 3796, 24028, 13, 51558, 51558, 400, 341, 307, 257, 1154, 300, 286, 2732, 322, 924, 2057, 293, 611, 390, 3288, 294, 2891, 364, 724, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13739239494755584, "compression_ratio": 1.7209302325581395, "no_speech_prob": 5.01458134749555e-06}, {"id": 23, "seek": 8232, "start": 106.19999999999999, "end": 112.28, "text": " And this is a problem that I worked on years ago and also was involved in starting an app", "tokens": [50364, 909, 544, 1412, 420, 909, 544, 4122, 420, 16390, 4122, 13, 50578, 50578, 400, 550, 291, 352, 926, 341, 6367, 797, 365, 428, 777, 3922, 295, 9482, 13, 50828, 50828, 400, 309, 486, 2049, 747, 3866, 36540, 807, 341, 6367, 1826, 291, 483, 281, 264, 3389, 51063, 51063, 300, 291, 528, 13, 51154, 51154, 961, 311, 574, 412, 364, 1365, 295, 2390, 364, 3796, 24028, 1508, 9902, 13, 51364, 51364, 286, 519, 867, 295, 505, 5418, 1592, 4700, 3796, 24028, 13, 51558, 51558, 400, 341, 307, 257, 1154, 300, 286, 2732, 322, 924, 2057, 293, 611, 390, 3288, 294, 2891, 364, 724, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13739239494755584, "compression_ratio": 1.7209302325581395, "no_speech_prob": 5.01458134749555e-06}, {"id": 24, "seek": 11228, "start": 112.28, "end": 115.56, "text": " anti-spam conference once years ago.", "tokens": [50364, 6061, 12, 4952, 335, 7586, 1564, 924, 2057, 13, 50528, 50528, 440, 1365, 322, 264, 1411, 307, 437, 257, 5405, 24028, 2226, 3796, 1062, 574, 411, 13, 50730, 50730, 5226, 295, 264, 1243, 11, 2256, 586, 36234, 17062, 293, 637, 48414, 486, 2171, 23506, 1713, 49241, 51068, 51068, 2283, 411, 613, 17062, 11, 7195, 11, 293, 6599, 70, 1660, 294, 1668, 281, 853, 281, 4931, 493, 257, 24028, 3068, 6545, 13, 51428, 51428, 400, 294, 8712, 11, 341, 3796, 322, 264, 558, 307, 364, 3539, 3796, 286, 1564, 658, 490, 452, 7037, 51664, 51664, 3708, 28327, 466, 1242, 1214, 337, 5272, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15163666347287735, "compression_ratio": 1.6059479553903346, "no_speech_prob": 4.831884507439099e-05}, {"id": 25, "seek": 11228, "start": 115.56, "end": 119.6, "text": " The example on the left is what a highly spammy email might look like.", "tokens": [50364, 6061, 12, 4952, 335, 7586, 1564, 924, 2057, 13, 50528, 50528, 440, 1365, 322, 264, 1411, 307, 437, 257, 5405, 24028, 2226, 3796, 1062, 574, 411, 13, 50730, 50730, 5226, 295, 264, 1243, 11, 2256, 586, 36234, 17062, 293, 637, 48414, 486, 2171, 23506, 1713, 49241, 51068, 51068, 2283, 411, 613, 17062, 11, 7195, 11, 293, 6599, 70, 1660, 294, 1668, 281, 853, 281, 4931, 493, 257, 24028, 3068, 6545, 13, 51428, 51428, 400, 294, 8712, 11, 341, 3796, 322, 264, 558, 307, 364, 3539, 3796, 286, 1564, 658, 490, 452, 7037, 51664, 51664, 3708, 28327, 466, 1242, 1214, 337, 5272, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15163666347287735, "compression_ratio": 1.6059479553903346, "no_speech_prob": 4.831884507439099e-05}, {"id": 26, "seek": 11228, "start": 119.6, "end": 126.36, "text": " Day of the week, buy now Rolex watches and spammers will sometimes deliberately misspell", "tokens": [50364, 6061, 12, 4952, 335, 7586, 1564, 924, 2057, 13, 50528, 50528, 440, 1365, 322, 264, 1411, 307, 437, 257, 5405, 24028, 2226, 3796, 1062, 574, 411, 13, 50730, 50730, 5226, 295, 264, 1243, 11, 2256, 586, 36234, 17062, 293, 637, 48414, 486, 2171, 23506, 1713, 49241, 51068, 51068, 2283, 411, 613, 17062, 11, 7195, 11, 293, 6599, 70, 1660, 294, 1668, 281, 853, 281, 4931, 493, 257, 24028, 3068, 6545, 13, 51428, 51428, 400, 294, 8712, 11, 341, 3796, 322, 264, 558, 307, 364, 3539, 3796, 286, 1564, 658, 490, 452, 7037, 51664, 51664, 3708, 28327, 466, 1242, 1214, 337, 5272, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15163666347287735, "compression_ratio": 1.6059479553903346, "no_speech_prob": 4.831884507439099e-05}, {"id": 27, "seek": 11228, "start": 126.36, "end": 133.56, "text": " words like these watches, medicine, and mortgages in order to try to trip up a spam recognizer.", "tokens": [50364, 6061, 12, 4952, 335, 7586, 1564, 924, 2057, 13, 50528, 50528, 440, 1365, 322, 264, 1411, 307, 437, 257, 5405, 24028, 2226, 3796, 1062, 574, 411, 13, 50730, 50730, 5226, 295, 264, 1243, 11, 2256, 586, 36234, 17062, 293, 637, 48414, 486, 2171, 23506, 1713, 49241, 51068, 51068, 2283, 411, 613, 17062, 11, 7195, 11, 293, 6599, 70, 1660, 294, 1668, 281, 853, 281, 4931, 493, 257, 24028, 3068, 6545, 13, 51428, 51428, 400, 294, 8712, 11, 341, 3796, 322, 264, 558, 307, 364, 3539, 3796, 286, 1564, 658, 490, 452, 7037, 51664, 51664, 3708, 28327, 466, 1242, 1214, 337, 5272, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15163666347287735, "compression_ratio": 1.6059479553903346, "no_speech_prob": 4.831884507439099e-05}, {"id": 28, "seek": 11228, "start": 133.56, "end": 138.28, "text": " And in contrast, this email on the right is an actual email I once got from my younger", "tokens": [50364, 6061, 12, 4952, 335, 7586, 1564, 924, 2057, 13, 50528, 50528, 440, 1365, 322, 264, 1411, 307, 437, 257, 5405, 24028, 2226, 3796, 1062, 574, 411, 13, 50730, 50730, 5226, 295, 264, 1243, 11, 2256, 586, 36234, 17062, 293, 637, 48414, 486, 2171, 23506, 1713, 49241, 51068, 51068, 2283, 411, 613, 17062, 11, 7195, 11, 293, 6599, 70, 1660, 294, 1668, 281, 853, 281, 4931, 493, 257, 24028, 3068, 6545, 13, 51428, 51428, 400, 294, 8712, 11, 341, 3796, 322, 264, 558, 307, 364, 3539, 3796, 286, 1564, 658, 490, 452, 7037, 51664, 51664, 3708, 28327, 466, 1242, 1214, 337, 5272, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15163666347287735, "compression_ratio": 1.6059479553903346, "no_speech_prob": 4.831884507439099e-05}, {"id": 29, "seek": 11228, "start": 138.28, "end": 142.0, "text": " brother Alfred about getting together for Christmas.", "tokens": [50364, 6061, 12, 4952, 335, 7586, 1564, 924, 2057, 13, 50528, 50528, 440, 1365, 322, 264, 1411, 307, 437, 257, 5405, 24028, 2226, 3796, 1062, 574, 411, 13, 50730, 50730, 5226, 295, 264, 1243, 11, 2256, 586, 36234, 17062, 293, 637, 48414, 486, 2171, 23506, 1713, 49241, 51068, 51068, 2283, 411, 613, 17062, 11, 7195, 11, 293, 6599, 70, 1660, 294, 1668, 281, 853, 281, 4931, 493, 257, 24028, 3068, 6545, 13, 51428, 51428, 400, 294, 8712, 11, 341, 3796, 322, 264, 558, 307, 364, 3539, 3796, 286, 1564, 658, 490, 452, 7037, 51664, 51664, 3708, 28327, 466, 1242, 1214, 337, 5272, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.15163666347287735, "compression_ratio": 1.6059479553903346, "no_speech_prob": 4.831884507439099e-05}, {"id": 30, "seek": 14200, "start": 142.0, "end": 150.52, "text": " So how do you build a classifier to recognize spam versus non spam emails?", "tokens": [50364, 407, 577, 360, 291, 1322, 257, 1508, 9902, 281, 5521, 24028, 5717, 2107, 24028, 12524, 30, 50790, 50790, 1485, 636, 281, 360, 370, 576, 312, 281, 3847, 257, 46533, 2539, 9284, 689, 264, 4846, 4122, 51131, 51131, 2031, 486, 312, 264, 4122, 295, 364, 3796, 293, 264, 5598, 7645, 288, 486, 312, 472, 420, 4018, 5413, 51484, 51484, 322, 1968, 257, 24028, 420, 406, 24028, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.10839028358459472, "compression_ratio": 1.548913043478261, "no_speech_prob": 3.288699190306943e-06}, {"id": 31, "seek": 14200, "start": 150.52, "end": 157.34, "text": " One way to do so would be to train a supervised learning algorithm where the input features", "tokens": [50364, 407, 577, 360, 291, 1322, 257, 1508, 9902, 281, 5521, 24028, 5717, 2107, 24028, 12524, 30, 50790, 50790, 1485, 636, 281, 360, 370, 576, 312, 281, 3847, 257, 46533, 2539, 9284, 689, 264, 4846, 4122, 51131, 51131, 2031, 486, 312, 264, 4122, 295, 364, 3796, 293, 264, 5598, 7645, 288, 486, 312, 472, 420, 4018, 5413, 51484, 51484, 322, 1968, 257, 24028, 420, 406, 24028, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.10839028358459472, "compression_ratio": 1.548913043478261, "no_speech_prob": 3.288699190306943e-06}, {"id": 32, "seek": 14200, "start": 157.34, "end": 164.4, "text": " x will be the features of an email and the output label y will be one or zero depending", "tokens": [50364, 407, 577, 360, 291, 1322, 257, 1508, 9902, 281, 5521, 24028, 5717, 2107, 24028, 12524, 30, 50790, 50790, 1485, 636, 281, 360, 370, 576, 312, 281, 3847, 257, 46533, 2539, 9284, 689, 264, 4846, 4122, 51131, 51131, 2031, 486, 312, 264, 4122, 295, 364, 3796, 293, 264, 5598, 7645, 288, 486, 312, 472, 420, 4018, 5413, 51484, 51484, 322, 1968, 257, 24028, 420, 406, 24028, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.10839028358459472, "compression_ratio": 1.548913043478261, "no_speech_prob": 3.288699190306943e-06}, {"id": 33, "seek": 14200, "start": 164.4, "end": 167.48, "text": " on whether a spam or not spam.", "tokens": [50364, 407, 577, 360, 291, 1322, 257, 1508, 9902, 281, 5521, 24028, 5717, 2107, 24028, 12524, 30, 50790, 50790, 1485, 636, 281, 360, 370, 576, 312, 281, 3847, 257, 46533, 2539, 9284, 689, 264, 4846, 4122, 51131, 51131, 2031, 486, 312, 264, 4122, 295, 364, 3796, 293, 264, 5598, 7645, 288, 486, 312, 472, 420, 4018, 5413, 51484, 51484, 322, 1968, 257, 24028, 420, 406, 24028, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.10839028358459472, "compression_ratio": 1.548913043478261, "no_speech_prob": 3.288699190306943e-06}, {"id": 34, "seek": 16748, "start": 167.48, "end": 174.28, "text": " So one way this application is an example of text classification because you're taking", "tokens": [50364, 407, 472, 636, 341, 3861, 307, 364, 1365, 295, 2487, 21538, 570, 291, 434, 1940, 50704, 50704, 257, 2487, 4166, 300, 307, 364, 3796, 293, 853, 281, 33872, 309, 382, 2139, 24028, 420, 2107, 24028, 13, 51016, 51016, 1485, 636, 281, 7690, 264, 4122, 295, 264, 3796, 576, 312, 281, 584, 11, 747, 264, 1192, 1266, 11, 1360, 2283, 51292, 51292, 294, 264, 3669, 2856, 420, 294, 512, 661, 25890, 293, 764, 552, 281, 6964, 4122, 2031, 16, 2031, 17, 807, 51682, 51682, 2031, 1266, 11, 1360, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.12462403463280719, "compression_ratio": 1.6283185840707965, "no_speech_prob": 6.240758011699654e-06}, {"id": 35, "seek": 16748, "start": 174.28, "end": 180.51999999999998, "text": " a text document that is an email and try to classify it as either spam or non spam.", "tokens": [50364, 407, 472, 636, 341, 3861, 307, 364, 1365, 295, 2487, 21538, 570, 291, 434, 1940, 50704, 50704, 257, 2487, 4166, 300, 307, 364, 3796, 293, 853, 281, 33872, 309, 382, 2139, 24028, 420, 2107, 24028, 13, 51016, 51016, 1485, 636, 281, 7690, 264, 4122, 295, 264, 3796, 576, 312, 281, 584, 11, 747, 264, 1192, 1266, 11, 1360, 2283, 51292, 51292, 294, 264, 3669, 2856, 420, 294, 512, 661, 25890, 293, 764, 552, 281, 6964, 4122, 2031, 16, 2031, 17, 807, 51682, 51682, 2031, 1266, 11, 1360, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.12462403463280719, "compression_ratio": 1.6283185840707965, "no_speech_prob": 6.240758011699654e-06}, {"id": 36, "seek": 16748, "start": 180.51999999999998, "end": 186.04, "text": " One way to construct the features of the email would be to say, take the top 10,000 words", "tokens": [50364, 407, 472, 636, 341, 3861, 307, 364, 1365, 295, 2487, 21538, 570, 291, 434, 1940, 50704, 50704, 257, 2487, 4166, 300, 307, 364, 3796, 293, 853, 281, 33872, 309, 382, 2139, 24028, 420, 2107, 24028, 13, 51016, 51016, 1485, 636, 281, 7690, 264, 4122, 295, 264, 3796, 576, 312, 281, 584, 11, 747, 264, 1192, 1266, 11, 1360, 2283, 51292, 51292, 294, 264, 3669, 2856, 420, 294, 512, 661, 25890, 293, 764, 552, 281, 6964, 4122, 2031, 16, 2031, 17, 807, 51682, 51682, 2031, 1266, 11, 1360, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.12462403463280719, "compression_ratio": 1.6283185840707965, "no_speech_prob": 6.240758011699654e-06}, {"id": 37, "seek": 16748, "start": 186.04, "end": 193.83999999999997, "text": " in the English language or in some other dictionary and use them to define features x1 x2 through", "tokens": [50364, 407, 472, 636, 341, 3861, 307, 364, 1365, 295, 2487, 21538, 570, 291, 434, 1940, 50704, 50704, 257, 2487, 4166, 300, 307, 364, 3796, 293, 853, 281, 33872, 309, 382, 2139, 24028, 420, 2107, 24028, 13, 51016, 51016, 1485, 636, 281, 7690, 264, 4122, 295, 264, 3796, 576, 312, 281, 584, 11, 747, 264, 1192, 1266, 11, 1360, 2283, 51292, 51292, 294, 264, 3669, 2856, 420, 294, 512, 661, 25890, 293, 764, 552, 281, 6964, 4122, 2031, 16, 2031, 17, 807, 51682, 51682, 2031, 1266, 11, 1360, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.12462403463280719, "compression_ratio": 1.6283185840707965, "no_speech_prob": 6.240758011699654e-06}, {"id": 38, "seek": 16748, "start": 193.83999999999997, "end": 196.33999999999997, "text": " x 10,000.", "tokens": [50364, 407, 472, 636, 341, 3861, 307, 364, 1365, 295, 2487, 21538, 570, 291, 434, 1940, 50704, 50704, 257, 2487, 4166, 300, 307, 364, 3796, 293, 853, 281, 33872, 309, 382, 2139, 24028, 420, 2107, 24028, 13, 51016, 51016, 1485, 636, 281, 7690, 264, 4122, 295, 264, 3796, 576, 312, 281, 584, 11, 747, 264, 1192, 1266, 11, 1360, 2283, 51292, 51292, 294, 264, 3669, 2856, 420, 294, 512, 661, 25890, 293, 764, 552, 281, 6964, 4122, 2031, 16, 2031, 17, 807, 51682, 51682, 2031, 1266, 11, 1360, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.12462403463280719, "compression_ratio": 1.6283185840707965, "no_speech_prob": 6.240758011699654e-06}, {"id": 39, "seek": 19634, "start": 196.34, "end": 203.96, "text": " So for example, given this email on the right, if the list of words we have is a, Andrew,", "tokens": [50364, 407, 337, 1365, 11, 2212, 341, 3796, 322, 264, 558, 11, 498, 264, 1329, 295, 2283, 321, 362, 307, 257, 11, 10110, 11, 50745, 50745, 2256, 11, 2028, 11, 11635, 11, 293, 370, 322, 11, 550, 2212, 264, 3796, 322, 264, 558, 11, 321, 576, 992, 613, 51254, 51254, 4122, 281, 312, 584, 4018, 420, 472, 5413, 322, 1968, 420, 406, 300, 1349, 7038, 13, 51518, 51518, 407, 264, 1349, 257, 775, 406, 4204, 13, 51629, 51629, 440, 1349, 10110, 775, 4204, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.14155025043706784, "compression_ratio": 1.6737967914438503, "no_speech_prob": 6.240846232685726e-06}, {"id": 40, "seek": 19634, "start": 203.96, "end": 214.14000000000001, "text": " buy, deal, discount, and so on, then given the email on the right, we would set these", "tokens": [50364, 407, 337, 1365, 11, 2212, 341, 3796, 322, 264, 558, 11, 498, 264, 1329, 295, 2283, 321, 362, 307, 257, 11, 10110, 11, 50745, 50745, 2256, 11, 2028, 11, 11635, 11, 293, 370, 322, 11, 550, 2212, 264, 3796, 322, 264, 558, 11, 321, 576, 992, 613, 51254, 51254, 4122, 281, 312, 584, 4018, 420, 472, 5413, 322, 1968, 420, 406, 300, 1349, 7038, 13, 51518, 51518, 407, 264, 1349, 257, 775, 406, 4204, 13, 51629, 51629, 440, 1349, 10110, 775, 4204, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.14155025043706784, "compression_ratio": 1.6737967914438503, "no_speech_prob": 6.240846232685726e-06}, {"id": 41, "seek": 19634, "start": 214.14000000000001, "end": 219.42000000000002, "text": " features to be say zero or one depending on whether or not that word appears.", "tokens": [50364, 407, 337, 1365, 11, 2212, 341, 3796, 322, 264, 558, 11, 498, 264, 1329, 295, 2283, 321, 362, 307, 257, 11, 10110, 11, 50745, 50745, 2256, 11, 2028, 11, 11635, 11, 293, 370, 322, 11, 550, 2212, 264, 3796, 322, 264, 558, 11, 321, 576, 992, 613, 51254, 51254, 4122, 281, 312, 584, 4018, 420, 472, 5413, 322, 1968, 420, 406, 300, 1349, 7038, 13, 51518, 51518, 407, 264, 1349, 257, 775, 406, 4204, 13, 51629, 51629, 440, 1349, 10110, 775, 4204, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.14155025043706784, "compression_ratio": 1.6737967914438503, "no_speech_prob": 6.240846232685726e-06}, {"id": 42, "seek": 19634, "start": 219.42000000000002, "end": 221.64000000000001, "text": " So the word a does not appear.", "tokens": [50364, 407, 337, 1365, 11, 2212, 341, 3796, 322, 264, 558, 11, 498, 264, 1329, 295, 2283, 321, 362, 307, 257, 11, 10110, 11, 50745, 50745, 2256, 11, 2028, 11, 11635, 11, 293, 370, 322, 11, 550, 2212, 264, 3796, 322, 264, 558, 11, 321, 576, 992, 613, 51254, 51254, 4122, 281, 312, 584, 4018, 420, 472, 5413, 322, 1968, 420, 406, 300, 1349, 7038, 13, 51518, 51518, 407, 264, 1349, 257, 775, 406, 4204, 13, 51629, 51629, 440, 1349, 10110, 775, 4204, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.14155025043706784, "compression_ratio": 1.6737967914438503, "no_speech_prob": 6.240846232685726e-06}, {"id": 43, "seek": 19634, "start": 221.64000000000001, "end": 223.8, "text": " The word Andrew does appear.", "tokens": [50364, 407, 337, 1365, 11, 2212, 341, 3796, 322, 264, 558, 11, 498, 264, 1329, 295, 2283, 321, 362, 307, 257, 11, 10110, 11, 50745, 50745, 2256, 11, 2028, 11, 11635, 11, 293, 370, 322, 11, 550, 2212, 264, 3796, 322, 264, 558, 11, 321, 576, 992, 613, 51254, 51254, 4122, 281, 312, 584, 4018, 420, 472, 5413, 322, 1968, 420, 406, 300, 1349, 7038, 13, 51518, 51518, 407, 264, 1349, 257, 775, 406, 4204, 13, 51629, 51629, 440, 1349, 10110, 775, 4204, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.14155025043706784, "compression_ratio": 1.6737967914438503, "no_speech_prob": 6.240846232685726e-06}, {"id": 44, "seek": 22380, "start": 223.8, "end": 227.04000000000002, "text": " The word buy does appear.", "tokens": [50364, 440, 1349, 2256, 775, 4204, 13, 50526, 50526, 27227, 775, 11, 11635, 775, 406, 11, 293, 370, 322, 13, 50685, 50685, 400, 370, 291, 393, 7690, 1266, 11, 1360, 4122, 295, 341, 3796, 13, 50920, 50920, 400, 456, 366, 867, 2098, 281, 7690, 264, 4111, 8062, 13, 51085, 51085, 3996, 636, 576, 312, 281, 718, 613, 3547, 406, 445, 312, 472, 420, 4018, 11, 457, 767, 1207, 51338, 51338, 264, 1230, 295, 1413, 257, 2212, 1349, 7038, 294, 264, 3796, 13, 51508, 51508, 407, 498, 2256, 7038, 6091, 11, 1310, 291, 528, 281, 992, 341, 281, 732, 11, 457, 3287, 309, 281, 445, 472, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12547281053331164, "compression_ratio": 1.7100840336134453, "no_speech_prob": 2.9479847398761194e-06}, {"id": 45, "seek": 22380, "start": 227.04000000000002, "end": 230.22, "text": " Deal does, discount does not, and so on.", "tokens": [50364, 440, 1349, 2256, 775, 4204, 13, 50526, 50526, 27227, 775, 11, 11635, 775, 406, 11, 293, 370, 322, 13, 50685, 50685, 400, 370, 291, 393, 7690, 1266, 11, 1360, 4122, 295, 341, 3796, 13, 50920, 50920, 400, 456, 366, 867, 2098, 281, 7690, 264, 4111, 8062, 13, 51085, 51085, 3996, 636, 576, 312, 281, 718, 613, 3547, 406, 445, 312, 472, 420, 4018, 11, 457, 767, 1207, 51338, 51338, 264, 1230, 295, 1413, 257, 2212, 1349, 7038, 294, 264, 3796, 13, 51508, 51508, 407, 498, 2256, 7038, 6091, 11, 1310, 291, 528, 281, 992, 341, 281, 732, 11, 457, 3287, 309, 281, 445, 472, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12547281053331164, "compression_ratio": 1.7100840336134453, "no_speech_prob": 2.9479847398761194e-06}, {"id": 46, "seek": 22380, "start": 230.22, "end": 234.92000000000002, "text": " And so you can construct 10,000 features of this email.", "tokens": [50364, 440, 1349, 2256, 775, 4204, 13, 50526, 50526, 27227, 775, 11, 11635, 775, 406, 11, 293, 370, 322, 13, 50685, 50685, 400, 370, 291, 393, 7690, 1266, 11, 1360, 4122, 295, 341, 3796, 13, 50920, 50920, 400, 456, 366, 867, 2098, 281, 7690, 264, 4111, 8062, 13, 51085, 51085, 3996, 636, 576, 312, 281, 718, 613, 3547, 406, 445, 312, 472, 420, 4018, 11, 457, 767, 1207, 51338, 51338, 264, 1230, 295, 1413, 257, 2212, 1349, 7038, 294, 264, 3796, 13, 51508, 51508, 407, 498, 2256, 7038, 6091, 11, 1310, 291, 528, 281, 992, 341, 281, 732, 11, 457, 3287, 309, 281, 445, 472, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12547281053331164, "compression_ratio": 1.7100840336134453, "no_speech_prob": 2.9479847398761194e-06}, {"id": 47, "seek": 22380, "start": 234.92000000000002, "end": 238.22, "text": " And there are many ways to construct the feature vector.", "tokens": [50364, 440, 1349, 2256, 775, 4204, 13, 50526, 50526, 27227, 775, 11, 11635, 775, 406, 11, 293, 370, 322, 13, 50685, 50685, 400, 370, 291, 393, 7690, 1266, 11, 1360, 4122, 295, 341, 3796, 13, 50920, 50920, 400, 456, 366, 867, 2098, 281, 7690, 264, 4111, 8062, 13, 51085, 51085, 3996, 636, 576, 312, 281, 718, 613, 3547, 406, 445, 312, 472, 420, 4018, 11, 457, 767, 1207, 51338, 51338, 264, 1230, 295, 1413, 257, 2212, 1349, 7038, 294, 264, 3796, 13, 51508, 51508, 407, 498, 2256, 7038, 6091, 11, 1310, 291, 528, 281, 992, 341, 281, 732, 11, 457, 3287, 309, 281, 445, 472, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12547281053331164, "compression_ratio": 1.7100840336134453, "no_speech_prob": 2.9479847398761194e-06}, {"id": 48, "seek": 22380, "start": 238.22, "end": 243.28, "text": " Another way would be to let these numbers not just be one or zero, but actually count", "tokens": [50364, 440, 1349, 2256, 775, 4204, 13, 50526, 50526, 27227, 775, 11, 11635, 775, 406, 11, 293, 370, 322, 13, 50685, 50685, 400, 370, 291, 393, 7690, 1266, 11, 1360, 4122, 295, 341, 3796, 13, 50920, 50920, 400, 456, 366, 867, 2098, 281, 7690, 264, 4111, 8062, 13, 51085, 51085, 3996, 636, 576, 312, 281, 718, 613, 3547, 406, 445, 312, 472, 420, 4018, 11, 457, 767, 1207, 51338, 51338, 264, 1230, 295, 1413, 257, 2212, 1349, 7038, 294, 264, 3796, 13, 51508, 51508, 407, 498, 2256, 7038, 6091, 11, 1310, 291, 528, 281, 992, 341, 281, 732, 11, 457, 3287, 309, 281, 445, 472, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12547281053331164, "compression_ratio": 1.7100840336134453, "no_speech_prob": 2.9479847398761194e-06}, {"id": 49, "seek": 22380, "start": 243.28, "end": 246.68, "text": " the number of times a given word appears in the email.", "tokens": [50364, 440, 1349, 2256, 775, 4204, 13, 50526, 50526, 27227, 775, 11, 11635, 775, 406, 11, 293, 370, 322, 13, 50685, 50685, 400, 370, 291, 393, 7690, 1266, 11, 1360, 4122, 295, 341, 3796, 13, 50920, 50920, 400, 456, 366, 867, 2098, 281, 7690, 264, 4111, 8062, 13, 51085, 51085, 3996, 636, 576, 312, 281, 718, 613, 3547, 406, 445, 312, 472, 420, 4018, 11, 457, 767, 1207, 51338, 51338, 264, 1230, 295, 1413, 257, 2212, 1349, 7038, 294, 264, 3796, 13, 51508, 51508, 407, 498, 2256, 7038, 6091, 11, 1310, 291, 528, 281, 992, 341, 281, 732, 11, 457, 3287, 309, 281, 445, 472, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12547281053331164, "compression_ratio": 1.7100840336134453, "no_speech_prob": 2.9479847398761194e-06}, {"id": 50, "seek": 22380, "start": 246.68, "end": 252.04000000000002, "text": " So if buy appears twice, maybe you want to set this to two, but setting it to just one", "tokens": [50364, 440, 1349, 2256, 775, 4204, 13, 50526, 50526, 27227, 775, 11, 11635, 775, 406, 11, 293, 370, 322, 13, 50685, 50685, 400, 370, 291, 393, 7690, 1266, 11, 1360, 4122, 295, 341, 3796, 13, 50920, 50920, 400, 456, 366, 867, 2098, 281, 7690, 264, 4111, 8062, 13, 51085, 51085, 3996, 636, 576, 312, 281, 718, 613, 3547, 406, 445, 312, 472, 420, 4018, 11, 457, 767, 1207, 51338, 51338, 264, 1230, 295, 1413, 257, 2212, 1349, 7038, 294, 264, 3796, 13, 51508, 51508, 407, 498, 2256, 7038, 6091, 11, 1310, 291, 528, 281, 992, 341, 281, 732, 11, 457, 3287, 309, 281, 445, 472, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12547281053331164, "compression_ratio": 1.7100840336134453, "no_speech_prob": 2.9479847398761194e-06}, {"id": 51, "seek": 25204, "start": 252.04, "end": 256.0, "text": " or zero actually works decently well.", "tokens": [50364, 420, 4018, 767, 1985, 979, 2276, 731, 13, 50562, 50562, 18600, 613, 4122, 11, 291, 393, 550, 3847, 257, 21538, 9284, 1270, 382, 257, 3565, 3142, 50864, 50864, 24590, 2316, 420, 257, 18161, 3209, 281, 6069, 288, 2212, 613, 4122, 2031, 13, 51228, 51228, 2381, 291, 600, 8895, 428, 5883, 2316, 11, 498, 309, 1177, 380, 589, 382, 731, 382, 291, 3172, 11, 291, 486, 51518, 51518, 1596, 3700, 362, 3866, 3487, 337, 11470, 264, 2539, 9284, 311, 3389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10356332006908599, "compression_ratio": 1.6217391304347826, "no_speech_prob": 1.165911635325756e-05}, {"id": 52, "seek": 25204, "start": 256.0, "end": 262.03999999999996, "text": " Given these features, you can then train a classification algorithm such as a logistic", "tokens": [50364, 420, 4018, 767, 1985, 979, 2276, 731, 13, 50562, 50562, 18600, 613, 4122, 11, 291, 393, 550, 3847, 257, 21538, 9284, 1270, 382, 257, 3565, 3142, 50864, 50864, 24590, 2316, 420, 257, 18161, 3209, 281, 6069, 288, 2212, 613, 4122, 2031, 13, 51228, 51228, 2381, 291, 600, 8895, 428, 5883, 2316, 11, 498, 309, 1177, 380, 589, 382, 731, 382, 291, 3172, 11, 291, 486, 51518, 51518, 1596, 3700, 362, 3866, 3487, 337, 11470, 264, 2539, 9284, 311, 3389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10356332006908599, "compression_ratio": 1.6217391304347826, "no_speech_prob": 1.165911635325756e-05}, {"id": 53, "seek": 25204, "start": 262.03999999999996, "end": 269.32, "text": " regression model or a neural network to predict y given these features x.", "tokens": [50364, 420, 4018, 767, 1985, 979, 2276, 731, 13, 50562, 50562, 18600, 613, 4122, 11, 291, 393, 550, 3847, 257, 21538, 9284, 1270, 382, 257, 3565, 3142, 50864, 50864, 24590, 2316, 420, 257, 18161, 3209, 281, 6069, 288, 2212, 613, 4122, 2031, 13, 51228, 51228, 2381, 291, 600, 8895, 428, 5883, 2316, 11, 498, 309, 1177, 380, 589, 382, 731, 382, 291, 3172, 11, 291, 486, 51518, 51518, 1596, 3700, 362, 3866, 3487, 337, 11470, 264, 2539, 9284, 311, 3389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10356332006908599, "compression_ratio": 1.6217391304347826, "no_speech_prob": 1.165911635325756e-05}, {"id": 54, "seek": 25204, "start": 269.32, "end": 275.12, "text": " After you've trained your initial model, if it doesn't work as well as you wish, you will", "tokens": [50364, 420, 4018, 767, 1985, 979, 2276, 731, 13, 50562, 50562, 18600, 613, 4122, 11, 291, 393, 550, 3847, 257, 21538, 9284, 1270, 382, 257, 3565, 3142, 50864, 50864, 24590, 2316, 420, 257, 18161, 3209, 281, 6069, 288, 2212, 613, 4122, 2031, 13, 51228, 51228, 2381, 291, 600, 8895, 428, 5883, 2316, 11, 498, 309, 1177, 380, 589, 382, 731, 382, 291, 3172, 11, 291, 486, 51518, 51518, 1596, 3700, 362, 3866, 3487, 337, 11470, 264, 2539, 9284, 311, 3389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10356332006908599, "compression_ratio": 1.6217391304347826, "no_speech_prob": 1.165911635325756e-05}, {"id": 55, "seek": 25204, "start": 275.12, "end": 280.03999999999996, "text": " quite likely have multiple ideas for improving the learning algorithm's performance.", "tokens": [50364, 420, 4018, 767, 1985, 979, 2276, 731, 13, 50562, 50562, 18600, 613, 4122, 11, 291, 393, 550, 3847, 257, 21538, 9284, 1270, 382, 257, 3565, 3142, 50864, 50864, 24590, 2316, 420, 257, 18161, 3209, 281, 6069, 288, 2212, 613, 4122, 2031, 13, 51228, 51228, 2381, 291, 600, 8895, 428, 5883, 2316, 11, 498, 309, 1177, 380, 589, 382, 731, 382, 291, 3172, 11, 291, 486, 51518, 51518, 1596, 3700, 362, 3866, 3487, 337, 11470, 264, 2539, 9284, 311, 3389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10356332006908599, "compression_ratio": 1.6217391304347826, "no_speech_prob": 1.165911635325756e-05}, {"id": 56, "seek": 28004, "start": 280.04, "end": 283.64000000000004, "text": " For example, it's always tempting to collect more data.", "tokens": [50364, 1171, 1365, 11, 309, 311, 1009, 37900, 281, 2500, 544, 1412, 13, 50544, 50544, 682, 1186, 11, 286, 362, 1855, 300, 362, 2732, 322, 588, 2416, 4373, 8330, 17698, 4455, 11, 293, 613, 50794, 50794, 366, 4455, 300, 1884, 257, 2416, 1230, 295, 7592, 3796, 16862, 293, 9898, 23506, 51068, 51068, 281, 483, 613, 7592, 3796, 16862, 666, 264, 2377, 295, 637, 48414, 370, 300, 562, 436, 2845, 24028, 51340, 51340, 3796, 281, 613, 7592, 12524, 11, 731, 11, 321, 458, 613, 366, 24028, 7897, 13, 51532, 51532, 400, 370, 341, 307, 257, 636, 281, 483, 257, 688, 295, 24028, 1412, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.14977439844383383, "compression_ratio": 1.779591836734694, "no_speech_prob": 5.896304173802491e-07}, {"id": 57, "seek": 28004, "start": 283.64000000000004, "end": 288.64000000000004, "text": " In fact, I have friends that have worked on very large scale honeypot projects, and these", "tokens": [50364, 1171, 1365, 11, 309, 311, 1009, 37900, 281, 2500, 544, 1412, 13, 50544, 50544, 682, 1186, 11, 286, 362, 1855, 300, 362, 2732, 322, 588, 2416, 4373, 8330, 17698, 4455, 11, 293, 613, 50794, 50794, 366, 4455, 300, 1884, 257, 2416, 1230, 295, 7592, 3796, 16862, 293, 9898, 23506, 51068, 51068, 281, 483, 613, 7592, 3796, 16862, 666, 264, 2377, 295, 637, 48414, 370, 300, 562, 436, 2845, 24028, 51340, 51340, 3796, 281, 613, 7592, 12524, 11, 731, 11, 321, 458, 613, 366, 24028, 7897, 13, 51532, 51532, 400, 370, 341, 307, 257, 636, 281, 483, 257, 688, 295, 24028, 1412, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.14977439844383383, "compression_ratio": 1.779591836734694, "no_speech_prob": 5.896304173802491e-07}, {"id": 58, "seek": 28004, "start": 288.64000000000004, "end": 294.12, "text": " are projects that create a large number of fake email addresses and tries deliberately", "tokens": [50364, 1171, 1365, 11, 309, 311, 1009, 37900, 281, 2500, 544, 1412, 13, 50544, 50544, 682, 1186, 11, 286, 362, 1855, 300, 362, 2732, 322, 588, 2416, 4373, 8330, 17698, 4455, 11, 293, 613, 50794, 50794, 366, 4455, 300, 1884, 257, 2416, 1230, 295, 7592, 3796, 16862, 293, 9898, 23506, 51068, 51068, 281, 483, 613, 7592, 3796, 16862, 666, 264, 2377, 295, 637, 48414, 370, 300, 562, 436, 2845, 24028, 51340, 51340, 3796, 281, 613, 7592, 12524, 11, 731, 11, 321, 458, 613, 366, 24028, 7897, 13, 51532, 51532, 400, 370, 341, 307, 257, 636, 281, 483, 257, 688, 295, 24028, 1412, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.14977439844383383, "compression_ratio": 1.779591836734694, "no_speech_prob": 5.896304173802491e-07}, {"id": 59, "seek": 28004, "start": 294.12, "end": 299.56, "text": " to get these fake email addresses into the hands of spammers so that when they send spam", "tokens": [50364, 1171, 1365, 11, 309, 311, 1009, 37900, 281, 2500, 544, 1412, 13, 50544, 50544, 682, 1186, 11, 286, 362, 1855, 300, 362, 2732, 322, 588, 2416, 4373, 8330, 17698, 4455, 11, 293, 613, 50794, 50794, 366, 4455, 300, 1884, 257, 2416, 1230, 295, 7592, 3796, 16862, 293, 9898, 23506, 51068, 51068, 281, 483, 613, 7592, 3796, 16862, 666, 264, 2377, 295, 637, 48414, 370, 300, 562, 436, 2845, 24028, 51340, 51340, 3796, 281, 613, 7592, 12524, 11, 731, 11, 321, 458, 613, 366, 24028, 7897, 13, 51532, 51532, 400, 370, 341, 307, 257, 636, 281, 483, 257, 688, 295, 24028, 1412, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.14977439844383383, "compression_ratio": 1.779591836734694, "no_speech_prob": 5.896304173802491e-07}, {"id": 60, "seek": 28004, "start": 299.56, "end": 303.40000000000003, "text": " email to these fake emails, well, we know these are spam messages.", "tokens": [50364, 1171, 1365, 11, 309, 311, 1009, 37900, 281, 2500, 544, 1412, 13, 50544, 50544, 682, 1186, 11, 286, 362, 1855, 300, 362, 2732, 322, 588, 2416, 4373, 8330, 17698, 4455, 11, 293, 613, 50794, 50794, 366, 4455, 300, 1884, 257, 2416, 1230, 295, 7592, 3796, 16862, 293, 9898, 23506, 51068, 51068, 281, 483, 613, 7592, 3796, 16862, 666, 264, 2377, 295, 637, 48414, 370, 300, 562, 436, 2845, 24028, 51340, 51340, 3796, 281, 613, 7592, 12524, 11, 731, 11, 321, 458, 613, 366, 24028, 7897, 13, 51532, 51532, 400, 370, 341, 307, 257, 636, 281, 483, 257, 688, 295, 24028, 1412, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.14977439844383383, "compression_ratio": 1.779591836734694, "no_speech_prob": 5.896304173802491e-07}, {"id": 61, "seek": 28004, "start": 303.40000000000003, "end": 307.32000000000005, "text": " And so this is a way to get a lot of spam data.", "tokens": [50364, 1171, 1365, 11, 309, 311, 1009, 37900, 281, 2500, 544, 1412, 13, 50544, 50544, 682, 1186, 11, 286, 362, 1855, 300, 362, 2732, 322, 588, 2416, 4373, 8330, 17698, 4455, 11, 293, 613, 50794, 50794, 366, 4455, 300, 1884, 257, 2416, 1230, 295, 7592, 3796, 16862, 293, 9898, 23506, 51068, 51068, 281, 483, 613, 7592, 3796, 16862, 666, 264, 2377, 295, 637, 48414, 370, 300, 562, 436, 2845, 24028, 51340, 51340, 3796, 281, 613, 7592, 12524, 11, 731, 11, 321, 458, 613, 366, 24028, 7897, 13, 51532, 51532, 400, 370, 341, 307, 257, 636, 281, 483, 257, 688, 295, 24028, 1412, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.14977439844383383, "compression_ratio": 1.779591836734694, "no_speech_prob": 5.896304173802491e-07}, {"id": 62, "seek": 30732, "start": 307.32, "end": 312.4, "text": " Or you might decide to work on developing more sophisticated features based on the email", "tokens": [50364, 1610, 291, 1062, 4536, 281, 589, 322, 6416, 544, 16950, 4122, 2361, 322, 264, 3796, 50618, 50618, 32722, 13, 50668, 50668, 49482, 32722, 14942, 281, 264, 8310, 295, 14722, 2643, 11, 2171, 926, 264, 1002, 11, 300, 51036, 51036, 264, 3796, 575, 2780, 807, 322, 1080, 636, 281, 2524, 291, 13, 51220, 51220, 400, 12524, 767, 362, 437, 311, 1219, 3796, 23117, 1589, 13, 51446, 51446, 663, 307, 1589, 300, 5965, 2837, 295, 577, 264, 3796, 575, 16147, 2108, 819, 15909, 11, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18639349382977152, "compression_ratio": 1.6751054852320675, "no_speech_prob": 2.3320353648159653e-06}, {"id": 63, "seek": 30732, "start": 312.4, "end": 313.4, "text": " routing.", "tokens": [50364, 1610, 291, 1062, 4536, 281, 589, 322, 6416, 544, 16950, 4122, 2361, 322, 264, 3796, 50618, 50618, 32722, 13, 50668, 50668, 49482, 32722, 14942, 281, 264, 8310, 295, 14722, 2643, 11, 2171, 926, 264, 1002, 11, 300, 51036, 51036, 264, 3796, 575, 2780, 807, 322, 1080, 636, 281, 2524, 291, 13, 51220, 51220, 400, 12524, 767, 362, 437, 311, 1219, 3796, 23117, 1589, 13, 51446, 51446, 663, 307, 1589, 300, 5965, 2837, 295, 577, 264, 3796, 575, 16147, 2108, 819, 15909, 11, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18639349382977152, "compression_ratio": 1.6751054852320675, "no_speech_prob": 2.3320353648159653e-06}, {"id": 64, "seek": 30732, "start": 313.4, "end": 320.76, "text": " Email routing refers to the sequence of compute service, sometimes around the world, that", "tokens": [50364, 1610, 291, 1062, 4536, 281, 589, 322, 6416, 544, 16950, 4122, 2361, 322, 264, 3796, 50618, 50618, 32722, 13, 50668, 50668, 49482, 32722, 14942, 281, 264, 8310, 295, 14722, 2643, 11, 2171, 926, 264, 1002, 11, 300, 51036, 51036, 264, 3796, 575, 2780, 807, 322, 1080, 636, 281, 2524, 291, 13, 51220, 51220, 400, 12524, 767, 362, 437, 311, 1219, 3796, 23117, 1589, 13, 51446, 51446, 663, 307, 1589, 300, 5965, 2837, 295, 577, 264, 3796, 575, 16147, 2108, 819, 15909, 11, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18639349382977152, "compression_ratio": 1.6751054852320675, "no_speech_prob": 2.3320353648159653e-06}, {"id": 65, "seek": 30732, "start": 320.76, "end": 324.44, "text": " the email has gone through on its way to reach you.", "tokens": [50364, 1610, 291, 1062, 4536, 281, 589, 322, 6416, 544, 16950, 4122, 2361, 322, 264, 3796, 50618, 50618, 32722, 13, 50668, 50668, 49482, 32722, 14942, 281, 264, 8310, 295, 14722, 2643, 11, 2171, 926, 264, 1002, 11, 300, 51036, 51036, 264, 3796, 575, 2780, 807, 322, 1080, 636, 281, 2524, 291, 13, 51220, 51220, 400, 12524, 767, 362, 437, 311, 1219, 3796, 23117, 1589, 13, 51446, 51446, 663, 307, 1589, 300, 5965, 2837, 295, 577, 264, 3796, 575, 16147, 2108, 819, 15909, 11, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18639349382977152, "compression_ratio": 1.6751054852320675, "no_speech_prob": 2.3320353648159653e-06}, {"id": 66, "seek": 30732, "start": 324.44, "end": 328.96, "text": " And emails actually have what's called email header information.", "tokens": [50364, 1610, 291, 1062, 4536, 281, 589, 322, 6416, 544, 16950, 4122, 2361, 322, 264, 3796, 50618, 50618, 32722, 13, 50668, 50668, 49482, 32722, 14942, 281, 264, 8310, 295, 14722, 2643, 11, 2171, 926, 264, 1002, 11, 300, 51036, 51036, 264, 3796, 575, 2780, 807, 322, 1080, 636, 281, 2524, 291, 13, 51220, 51220, 400, 12524, 767, 362, 437, 311, 1219, 3796, 23117, 1589, 13, 51446, 51446, 663, 307, 1589, 300, 5965, 2837, 295, 577, 264, 3796, 575, 16147, 2108, 819, 15909, 11, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18639349382977152, "compression_ratio": 1.6751054852320675, "no_speech_prob": 2.3320353648159653e-06}, {"id": 67, "seek": 30732, "start": 328.96, "end": 333.76, "text": " That is information that keeps track of how the email has traveled across different servers,", "tokens": [50364, 1610, 291, 1062, 4536, 281, 589, 322, 6416, 544, 16950, 4122, 2361, 322, 264, 3796, 50618, 50618, 32722, 13, 50668, 50668, 49482, 32722, 14942, 281, 264, 8310, 295, 14722, 2643, 11, 2171, 926, 264, 1002, 11, 300, 51036, 51036, 264, 3796, 575, 2780, 807, 322, 1080, 636, 281, 2524, 291, 13, 51220, 51220, 400, 12524, 767, 362, 437, 311, 1219, 3796, 23117, 1589, 13, 51446, 51446, 663, 307, 1589, 300, 5965, 2837, 295, 577, 264, 3796, 575, 16147, 2108, 819, 15909, 11, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18639349382977152, "compression_ratio": 1.6751054852320675, "no_speech_prob": 2.3320353648159653e-06}, {"id": 68, "seek": 33376, "start": 333.76, "end": 337.48, "text": " across different networks to find its way to you.", "tokens": [50364, 2108, 819, 9590, 281, 915, 1080, 636, 281, 291, 13, 50550, 50550, 400, 2171, 264, 3100, 300, 364, 3796, 575, 16147, 393, 854, 980, 291, 498, 309, 390, 2279, 538, 257, 24028, 936, 50842, 50842, 420, 406, 13, 50950, 50950, 1610, 291, 1062, 589, 322, 1348, 493, 365, 544, 16950, 4122, 490, 264, 3796, 1772, 300, 307, 264, 2487, 51234, 51234, 295, 264, 3796, 13, 51305, 51305, 407, 294, 264, 4122, 286, 2825, 466, 1036, 565, 11, 11635, 278, 293, 11635, 1062, 312, 8668, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.13238659772005948, "compression_ratio": 1.6063348416289593, "no_speech_prob": 1.9033502667298308e-06}, {"id": 69, "seek": 33376, "start": 337.48, "end": 343.32, "text": " And sometimes the path that an email has traveled can help tell you if it was sent by a spammer", "tokens": [50364, 2108, 819, 9590, 281, 915, 1080, 636, 281, 291, 13, 50550, 50550, 400, 2171, 264, 3100, 300, 364, 3796, 575, 16147, 393, 854, 980, 291, 498, 309, 390, 2279, 538, 257, 24028, 936, 50842, 50842, 420, 406, 13, 50950, 50950, 1610, 291, 1062, 589, 322, 1348, 493, 365, 544, 16950, 4122, 490, 264, 3796, 1772, 300, 307, 264, 2487, 51234, 51234, 295, 264, 3796, 13, 51305, 51305, 407, 294, 264, 4122, 286, 2825, 466, 1036, 565, 11, 11635, 278, 293, 11635, 1062, 312, 8668, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.13238659772005948, "compression_ratio": 1.6063348416289593, "no_speech_prob": 1.9033502667298308e-06}, {"id": 70, "seek": 33376, "start": 343.32, "end": 345.48, "text": " or not.", "tokens": [50364, 2108, 819, 9590, 281, 915, 1080, 636, 281, 291, 13, 50550, 50550, 400, 2171, 264, 3100, 300, 364, 3796, 575, 16147, 393, 854, 980, 291, 498, 309, 390, 2279, 538, 257, 24028, 936, 50842, 50842, 420, 406, 13, 50950, 50950, 1610, 291, 1062, 589, 322, 1348, 493, 365, 544, 16950, 4122, 490, 264, 3796, 1772, 300, 307, 264, 2487, 51234, 51234, 295, 264, 3796, 13, 51305, 51305, 407, 294, 264, 4122, 286, 2825, 466, 1036, 565, 11, 11635, 278, 293, 11635, 1062, 312, 8668, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.13238659772005948, "compression_ratio": 1.6063348416289593, "no_speech_prob": 1.9033502667298308e-06}, {"id": 71, "seek": 33376, "start": 345.48, "end": 351.15999999999997, "text": " Or you might work on coming up with more sophisticated features from the email body that is the text", "tokens": [50364, 2108, 819, 9590, 281, 915, 1080, 636, 281, 291, 13, 50550, 50550, 400, 2171, 264, 3100, 300, 364, 3796, 575, 16147, 393, 854, 980, 291, 498, 309, 390, 2279, 538, 257, 24028, 936, 50842, 50842, 420, 406, 13, 50950, 50950, 1610, 291, 1062, 589, 322, 1348, 493, 365, 544, 16950, 4122, 490, 264, 3796, 1772, 300, 307, 264, 2487, 51234, 51234, 295, 264, 3796, 13, 51305, 51305, 407, 294, 264, 4122, 286, 2825, 466, 1036, 565, 11, 11635, 278, 293, 11635, 1062, 312, 8668, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.13238659772005948, "compression_ratio": 1.6063348416289593, "no_speech_prob": 1.9033502667298308e-06}, {"id": 72, "seek": 33376, "start": 351.15999999999997, "end": 352.58, "text": " of the email.", "tokens": [50364, 2108, 819, 9590, 281, 915, 1080, 636, 281, 291, 13, 50550, 50550, 400, 2171, 264, 3100, 300, 364, 3796, 575, 16147, 393, 854, 980, 291, 498, 309, 390, 2279, 538, 257, 24028, 936, 50842, 50842, 420, 406, 13, 50950, 50950, 1610, 291, 1062, 589, 322, 1348, 493, 365, 544, 16950, 4122, 490, 264, 3796, 1772, 300, 307, 264, 2487, 51234, 51234, 295, 264, 3796, 13, 51305, 51305, 407, 294, 264, 4122, 286, 2825, 466, 1036, 565, 11, 11635, 278, 293, 11635, 1062, 312, 8668, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.13238659772005948, "compression_ratio": 1.6063348416289593, "no_speech_prob": 1.9033502667298308e-06}, {"id": 73, "seek": 33376, "start": 352.58, "end": 358.4, "text": " So in the features I talked about last time, discounting and discount might be treated", "tokens": [50364, 2108, 819, 9590, 281, 915, 1080, 636, 281, 291, 13, 50550, 50550, 400, 2171, 264, 3100, 300, 364, 3796, 575, 16147, 393, 854, 980, 291, 498, 309, 390, 2279, 538, 257, 24028, 936, 50842, 50842, 420, 406, 13, 50950, 50950, 1610, 291, 1062, 589, 322, 1348, 493, 365, 544, 16950, 4122, 490, 264, 3796, 1772, 300, 307, 264, 2487, 51234, 51234, 295, 264, 3796, 13, 51305, 51305, 407, 294, 264, 4122, 286, 2825, 466, 1036, 565, 11, 11635, 278, 293, 11635, 1062, 312, 8668, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.13238659772005948, "compression_ratio": 1.6063348416289593, "no_speech_prob": 1.9033502667298308e-06}, {"id": 74, "seek": 35840, "start": 358.4, "end": 364.47999999999996, "text": " as different words, but maybe they should be treated as the same words.", "tokens": [50364, 382, 819, 2283, 11, 457, 1310, 436, 820, 312, 8668, 382, 264, 912, 2283, 13, 50668, 50668, 1610, 291, 1062, 4536, 281, 808, 493, 365, 14642, 281, 5531, 1713, 49241, 1109, 420, 30515, 1713, 49241, 1109, 50922, 50922, 411, 17062, 11, 7195, 11, 293, 20236, 13, 51080, 51080, 400, 341, 886, 727, 854, 291, 4536, 498, 364, 3796, 307, 24028, 2226, 13, 51284, 51284, 407, 2212, 439, 295, 613, 293, 6264, 754, 544, 3487, 11, 577, 393, 291, 4536, 597, 295, 613, 3487, 51568, 51568, 366, 544, 20257, 281, 589, 322, 30, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.09491989016532898, "compression_ratio": 1.6538461538461537, "no_speech_prob": 5.71495490930829e-07}, {"id": 75, "seek": 35840, "start": 364.47999999999996, "end": 369.56, "text": " Or you might decide to come up with algorithms to detect misspellings or deliberate misspellings", "tokens": [50364, 382, 819, 2283, 11, 457, 1310, 436, 820, 312, 8668, 382, 264, 912, 2283, 13, 50668, 50668, 1610, 291, 1062, 4536, 281, 808, 493, 365, 14642, 281, 5531, 1713, 49241, 1109, 420, 30515, 1713, 49241, 1109, 50922, 50922, 411, 17062, 11, 7195, 11, 293, 20236, 13, 51080, 51080, 400, 341, 886, 727, 854, 291, 4536, 498, 364, 3796, 307, 24028, 2226, 13, 51284, 51284, 407, 2212, 439, 295, 613, 293, 6264, 754, 544, 3487, 11, 577, 393, 291, 4536, 597, 295, 613, 3487, 51568, 51568, 366, 544, 20257, 281, 589, 322, 30, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.09491989016532898, "compression_ratio": 1.6538461538461537, "no_speech_prob": 5.71495490930829e-07}, {"id": 76, "seek": 35840, "start": 369.56, "end": 372.71999999999997, "text": " like watches, medicine, and mortgage.", "tokens": [50364, 382, 819, 2283, 11, 457, 1310, 436, 820, 312, 8668, 382, 264, 912, 2283, 13, 50668, 50668, 1610, 291, 1062, 4536, 281, 808, 493, 365, 14642, 281, 5531, 1713, 49241, 1109, 420, 30515, 1713, 49241, 1109, 50922, 50922, 411, 17062, 11, 7195, 11, 293, 20236, 13, 51080, 51080, 400, 341, 886, 727, 854, 291, 4536, 498, 364, 3796, 307, 24028, 2226, 13, 51284, 51284, 407, 2212, 439, 295, 613, 293, 6264, 754, 544, 3487, 11, 577, 393, 291, 4536, 597, 295, 613, 3487, 51568, 51568, 366, 544, 20257, 281, 589, 322, 30, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.09491989016532898, "compression_ratio": 1.6538461538461537, "no_speech_prob": 5.71495490930829e-07}, {"id": 77, "seek": 35840, "start": 372.71999999999997, "end": 376.79999999999995, "text": " And this too could help you decide if an email is spammy.", "tokens": [50364, 382, 819, 2283, 11, 457, 1310, 436, 820, 312, 8668, 382, 264, 912, 2283, 13, 50668, 50668, 1610, 291, 1062, 4536, 281, 808, 493, 365, 14642, 281, 5531, 1713, 49241, 1109, 420, 30515, 1713, 49241, 1109, 50922, 50922, 411, 17062, 11, 7195, 11, 293, 20236, 13, 51080, 51080, 400, 341, 886, 727, 854, 291, 4536, 498, 364, 3796, 307, 24028, 2226, 13, 51284, 51284, 407, 2212, 439, 295, 613, 293, 6264, 754, 544, 3487, 11, 577, 393, 291, 4536, 597, 295, 613, 3487, 51568, 51568, 366, 544, 20257, 281, 589, 322, 30, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.09491989016532898, "compression_ratio": 1.6538461538461537, "no_speech_prob": 5.71495490930829e-07}, {"id": 78, "seek": 35840, "start": 376.79999999999995, "end": 382.47999999999996, "text": " So given all of these and possibly even more ideas, how can you decide which of these ideas", "tokens": [50364, 382, 819, 2283, 11, 457, 1310, 436, 820, 312, 8668, 382, 264, 912, 2283, 13, 50668, 50668, 1610, 291, 1062, 4536, 281, 808, 493, 365, 14642, 281, 5531, 1713, 49241, 1109, 420, 30515, 1713, 49241, 1109, 50922, 50922, 411, 17062, 11, 7195, 11, 293, 20236, 13, 51080, 51080, 400, 341, 886, 727, 854, 291, 4536, 498, 364, 3796, 307, 24028, 2226, 13, 51284, 51284, 407, 2212, 439, 295, 613, 293, 6264, 754, 544, 3487, 11, 577, 393, 291, 4536, 597, 295, 613, 3487, 51568, 51568, 366, 544, 20257, 281, 589, 322, 30, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.09491989016532898, "compression_ratio": 1.6538461538461537, "no_speech_prob": 5.71495490930829e-07}, {"id": 79, "seek": 35840, "start": 382.47999999999996, "end": 384.76, "text": " are more promising to work on?", "tokens": [50364, 382, 819, 2283, 11, 457, 1310, 436, 820, 312, 8668, 382, 264, 912, 2283, 13, 50668, 50668, 1610, 291, 1062, 4536, 281, 808, 493, 365, 14642, 281, 5531, 1713, 49241, 1109, 420, 30515, 1713, 49241, 1109, 50922, 50922, 411, 17062, 11, 7195, 11, 293, 20236, 13, 51080, 51080, 400, 341, 886, 727, 854, 291, 4536, 498, 364, 3796, 307, 24028, 2226, 13, 51284, 51284, 407, 2212, 439, 295, 613, 293, 6264, 754, 544, 3487, 11, 577, 393, 291, 4536, 597, 295, 613, 3487, 51568, 51568, 366, 544, 20257, 281, 589, 322, 30, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.09491989016532898, "compression_ratio": 1.6538461538461537, "no_speech_prob": 5.71495490930829e-07}, {"id": 80, "seek": 38476, "start": 384.76, "end": 390.48, "text": " Because choosing the more promising paths forward can speed up your project easily 10", "tokens": [50364, 1436, 10875, 264, 544, 20257, 14518, 2128, 393, 3073, 493, 428, 1716, 3612, 1266, 50650, 50650, 1413, 5347, 281, 498, 291, 645, 281, 6063, 2826, 512, 295, 264, 1570, 20257, 11095, 13, 50916, 50916, 1171, 1365, 11, 321, 600, 1217, 1612, 300, 498, 428, 9284, 575, 1090, 12577, 2831, 813, 1090, 21977, 11, 51198, 51198, 550, 6434, 2493, 293, 2493, 322, 257, 8330, 17698, 1716, 815, 406, 312, 264, 881, 49795, 3513, 13, 51458, 51458, 583, 498, 428, 9284, 575, 1090, 21977, 11, 550, 12510, 544, 1412, 727, 854, 257, 688, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.09310406446456909, "compression_ratio": 1.7951807228915662, "no_speech_prob": 2.0904351458739256e-06}, {"id": 81, "seek": 38476, "start": 390.48, "end": 395.8, "text": " times compared to if you were to somehow choose some of the less promising directions.", "tokens": [50364, 1436, 10875, 264, 544, 20257, 14518, 2128, 393, 3073, 493, 428, 1716, 3612, 1266, 50650, 50650, 1413, 5347, 281, 498, 291, 645, 281, 6063, 2826, 512, 295, 264, 1570, 20257, 11095, 13, 50916, 50916, 1171, 1365, 11, 321, 600, 1217, 1612, 300, 498, 428, 9284, 575, 1090, 12577, 2831, 813, 1090, 21977, 11, 51198, 51198, 550, 6434, 2493, 293, 2493, 322, 257, 8330, 17698, 1716, 815, 406, 312, 264, 881, 49795, 3513, 13, 51458, 51458, 583, 498, 428, 9284, 575, 1090, 21977, 11, 550, 12510, 544, 1412, 727, 854, 257, 688, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.09310406446456909, "compression_ratio": 1.7951807228915662, "no_speech_prob": 2.0904351458739256e-06}, {"id": 82, "seek": 38476, "start": 395.8, "end": 401.44, "text": " For example, we've already seen that if your algorithm has high bias rather than high variance,", "tokens": [50364, 1436, 10875, 264, 544, 20257, 14518, 2128, 393, 3073, 493, 428, 1716, 3612, 1266, 50650, 50650, 1413, 5347, 281, 498, 291, 645, 281, 6063, 2826, 512, 295, 264, 1570, 20257, 11095, 13, 50916, 50916, 1171, 1365, 11, 321, 600, 1217, 1612, 300, 498, 428, 9284, 575, 1090, 12577, 2831, 813, 1090, 21977, 11, 51198, 51198, 550, 6434, 2493, 293, 2493, 322, 257, 8330, 17698, 1716, 815, 406, 312, 264, 881, 49795, 3513, 13, 51458, 51458, 583, 498, 428, 9284, 575, 1090, 21977, 11, 550, 12510, 544, 1412, 727, 854, 257, 688, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.09310406446456909, "compression_ratio": 1.7951807228915662, "no_speech_prob": 2.0904351458739256e-06}, {"id": 83, "seek": 38476, "start": 401.44, "end": 406.64, "text": " then spending months and months on a honeypot project may not be the most fruitful direction.", "tokens": [50364, 1436, 10875, 264, 544, 20257, 14518, 2128, 393, 3073, 493, 428, 1716, 3612, 1266, 50650, 50650, 1413, 5347, 281, 498, 291, 645, 281, 6063, 2826, 512, 295, 264, 1570, 20257, 11095, 13, 50916, 50916, 1171, 1365, 11, 321, 600, 1217, 1612, 300, 498, 428, 9284, 575, 1090, 12577, 2831, 813, 1090, 21977, 11, 51198, 51198, 550, 6434, 2493, 293, 2493, 322, 257, 8330, 17698, 1716, 815, 406, 312, 264, 881, 49795, 3513, 13, 51458, 51458, 583, 498, 428, 9284, 575, 1090, 21977, 11, 550, 12510, 544, 1412, 727, 854, 257, 688, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.09310406446456909, "compression_ratio": 1.7951807228915662, "no_speech_prob": 2.0904351458739256e-06}, {"id": 84, "seek": 38476, "start": 406.64, "end": 410.9, "text": " But if your algorithm has high variance, then collecting more data could help a lot.", "tokens": [50364, 1436, 10875, 264, 544, 20257, 14518, 2128, 393, 3073, 493, 428, 1716, 3612, 1266, 50650, 50650, 1413, 5347, 281, 498, 291, 645, 281, 6063, 2826, 512, 295, 264, 1570, 20257, 11095, 13, 50916, 50916, 1171, 1365, 11, 321, 600, 1217, 1612, 300, 498, 428, 9284, 575, 1090, 12577, 2831, 813, 1090, 21977, 11, 51198, 51198, 550, 6434, 2493, 293, 2493, 322, 257, 8330, 17698, 1716, 815, 406, 312, 264, 881, 49795, 3513, 13, 51458, 51458, 583, 498, 428, 9284, 575, 1090, 21977, 11, 550, 12510, 544, 1412, 727, 854, 257, 688, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.09310406446456909, "compression_ratio": 1.7951807228915662, "no_speech_prob": 2.0904351458739256e-06}, {"id": 85, "seek": 41090, "start": 410.9, "end": 415.64, "text": " So during the interlude of machine learning development, you may have many ideas for how", "tokens": [50364, 407, 1830, 264, 728, 32334, 295, 3479, 2539, 3250, 11, 291, 815, 362, 867, 3487, 337, 577, 50601, 50601, 281, 16927, 264, 2316, 420, 264, 1412, 11, 293, 309, 486, 312, 1348, 493, 365, 819, 43215, 1167, 300, 50895, 50895, 727, 976, 291, 257, 688, 295, 10056, 322, 437, 7994, 337, 264, 2316, 420, 1412, 420, 661, 3166, 295, 264, 51183, 51183, 9482, 727, 312, 881, 20257, 281, 853, 13, 51399, 51399, 682, 264, 1036, 2940, 2145, 11, 321, 600, 1217, 2825, 466, 12577, 293, 21977, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.14171115120688638, "compression_ratio": 1.6182572614107884, "no_speech_prob": 3.966756139561767e-06}, {"id": 86, "seek": 41090, "start": 415.64, "end": 421.52, "text": " to modify the model or the data, and it will be coming up with different diagnostics that", "tokens": [50364, 407, 1830, 264, 728, 32334, 295, 3479, 2539, 3250, 11, 291, 815, 362, 867, 3487, 337, 577, 50601, 50601, 281, 16927, 264, 2316, 420, 264, 1412, 11, 293, 309, 486, 312, 1348, 493, 365, 819, 43215, 1167, 300, 50895, 50895, 727, 976, 291, 257, 688, 295, 10056, 322, 437, 7994, 337, 264, 2316, 420, 1412, 420, 661, 3166, 295, 264, 51183, 51183, 9482, 727, 312, 881, 20257, 281, 853, 13, 51399, 51399, 682, 264, 1036, 2940, 2145, 11, 321, 600, 1217, 2825, 466, 12577, 293, 21977, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.14171115120688638, "compression_ratio": 1.6182572614107884, "no_speech_prob": 3.966756139561767e-06}, {"id": 87, "seek": 41090, "start": 421.52, "end": 427.28, "text": " could give you a lot of guidance on what choices for the model or data or other parts of the", "tokens": [50364, 407, 1830, 264, 728, 32334, 295, 3479, 2539, 3250, 11, 291, 815, 362, 867, 3487, 337, 577, 50601, 50601, 281, 16927, 264, 2316, 420, 264, 1412, 11, 293, 309, 486, 312, 1348, 493, 365, 819, 43215, 1167, 300, 50895, 50895, 727, 976, 291, 257, 688, 295, 10056, 322, 437, 7994, 337, 264, 2316, 420, 1412, 420, 661, 3166, 295, 264, 51183, 51183, 9482, 727, 312, 881, 20257, 281, 853, 13, 51399, 51399, 682, 264, 1036, 2940, 2145, 11, 321, 600, 1217, 2825, 466, 12577, 293, 21977, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.14171115120688638, "compression_ratio": 1.6182572614107884, "no_speech_prob": 3.966756139561767e-06}, {"id": 88, "seek": 41090, "start": 427.28, "end": 431.59999999999997, "text": " architecture could be most promising to try.", "tokens": [50364, 407, 1830, 264, 728, 32334, 295, 3479, 2539, 3250, 11, 291, 815, 362, 867, 3487, 337, 577, 50601, 50601, 281, 16927, 264, 2316, 420, 264, 1412, 11, 293, 309, 486, 312, 1348, 493, 365, 819, 43215, 1167, 300, 50895, 50895, 727, 976, 291, 257, 688, 295, 10056, 322, 437, 7994, 337, 264, 2316, 420, 1412, 420, 661, 3166, 295, 264, 51183, 51183, 9482, 727, 312, 881, 20257, 281, 853, 13, 51399, 51399, 682, 264, 1036, 2940, 2145, 11, 321, 600, 1217, 2825, 466, 12577, 293, 21977, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.14171115120688638, "compression_ratio": 1.6182572614107884, "no_speech_prob": 3.966756139561767e-06}, {"id": 89, "seek": 41090, "start": 431.59999999999997, "end": 436.28, "text": " In the last several videos, we've already talked about bias and variance.", "tokens": [50364, 407, 1830, 264, 728, 32334, 295, 3479, 2539, 3250, 11, 291, 815, 362, 867, 3487, 337, 577, 50601, 50601, 281, 16927, 264, 2316, 420, 264, 1412, 11, 293, 309, 486, 312, 1348, 493, 365, 819, 43215, 1167, 300, 50895, 50895, 727, 976, 291, 257, 688, 295, 10056, 322, 437, 7994, 337, 264, 2316, 420, 1412, 420, 661, 3166, 295, 264, 51183, 51183, 9482, 727, 312, 881, 20257, 281, 853, 13, 51399, 51399, 682, 264, 1036, 2940, 2145, 11, 321, 600, 1217, 2825, 466, 12577, 293, 21977, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.14171115120688638, "compression_ratio": 1.6182572614107884, "no_speech_prob": 3.966756139561767e-06}, {"id": 90, "seek": 43628, "start": 436.28, "end": 442.67999999999995, "text": " In the next video, I'd like to start describing to you the error analysis process, which is", "tokens": [50364, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 722, 16141, 281, 291, 264, 6713, 5215, 1399, 11, 597, 307, 50684, 50684, 257, 1150, 2141, 992, 295, 3487, 337, 19752, 14310, 466, 437, 9482, 7994, 1062, 312, 49795, 13, 51085, 51085, 407, 300, 311, 264, 17138, 1166, 6367, 295, 3479, 2539, 3250, 13, 51292, 51292, 400, 1228, 264, 1365, 295, 2390, 257, 24028, 1508, 9902, 11, 718, 311, 747, 257, 574, 412, 437, 6713, 5215, 1542, 51550, 51550, 411, 13, 51600, 51600, 961, 311, 360, 300, 294, 264, 958, 960, 13, 51650], "temperature": 0.0, "avg_logprob": -0.09956450157977165, "compression_ratio": 1.6455696202531647, "no_speech_prob": 1.4059227396501228e-05}, {"id": 91, "seek": 43628, "start": 442.67999999999995, "end": 450.7, "text": " a second key set of ideas for gaining insights about what architecture choices might be fruitful.", "tokens": [50364, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 722, 16141, 281, 291, 264, 6713, 5215, 1399, 11, 597, 307, 50684, 50684, 257, 1150, 2141, 992, 295, 3487, 337, 19752, 14310, 466, 437, 9482, 7994, 1062, 312, 49795, 13, 51085, 51085, 407, 300, 311, 264, 17138, 1166, 6367, 295, 3479, 2539, 3250, 13, 51292, 51292, 400, 1228, 264, 1365, 295, 2390, 257, 24028, 1508, 9902, 11, 718, 311, 747, 257, 574, 412, 437, 6713, 5215, 1542, 51550, 51550, 411, 13, 51600, 51600, 961, 311, 360, 300, 294, 264, 958, 960, 13, 51650], "temperature": 0.0, "avg_logprob": -0.09956450157977165, "compression_ratio": 1.6455696202531647, "no_speech_prob": 1.4059227396501228e-05}, {"id": 92, "seek": 43628, "start": 450.7, "end": 454.84, "text": " So that's the iterative loop of machine learning development.", "tokens": [50364, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 722, 16141, 281, 291, 264, 6713, 5215, 1399, 11, 597, 307, 50684, 50684, 257, 1150, 2141, 992, 295, 3487, 337, 19752, 14310, 466, 437, 9482, 7994, 1062, 312, 49795, 13, 51085, 51085, 407, 300, 311, 264, 17138, 1166, 6367, 295, 3479, 2539, 3250, 13, 51292, 51292, 400, 1228, 264, 1365, 295, 2390, 257, 24028, 1508, 9902, 11, 718, 311, 747, 257, 574, 412, 437, 6713, 5215, 1542, 51550, 51550, 411, 13, 51600, 51600, 961, 311, 360, 300, 294, 264, 958, 960, 13, 51650], "temperature": 0.0, "avg_logprob": -0.09956450157977165, "compression_ratio": 1.6455696202531647, "no_speech_prob": 1.4059227396501228e-05}, {"id": 93, "seek": 43628, "start": 454.84, "end": 460.0, "text": " And using the example of building a spam classifier, let's take a look at what error analysis looks", "tokens": [50364, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 722, 16141, 281, 291, 264, 6713, 5215, 1399, 11, 597, 307, 50684, 50684, 257, 1150, 2141, 992, 295, 3487, 337, 19752, 14310, 466, 437, 9482, 7994, 1062, 312, 49795, 13, 51085, 51085, 407, 300, 311, 264, 17138, 1166, 6367, 295, 3479, 2539, 3250, 13, 51292, 51292, 400, 1228, 264, 1365, 295, 2390, 257, 24028, 1508, 9902, 11, 718, 311, 747, 257, 574, 412, 437, 6713, 5215, 1542, 51550, 51550, 411, 13, 51600, 51600, 961, 311, 360, 300, 294, 264, 958, 960, 13, 51650], "temperature": 0.0, "avg_logprob": -0.09956450157977165, "compression_ratio": 1.6455696202531647, "no_speech_prob": 1.4059227396501228e-05}, {"id": 94, "seek": 43628, "start": 460.0, "end": 461.0, "text": " like.", "tokens": [50364, 682, 264, 958, 960, 11, 286, 1116, 411, 281, 722, 16141, 281, 291, 264, 6713, 5215, 1399, 11, 597, 307, 50684, 50684, 257, 1150, 2141, 992, 295, 3487, 337, 19752, 14310, 466, 437, 9482, 7994, 1062, 312, 49795, 13, 51085, 51085, 407, 300, 311, 264, 17138, 1166, 6367, 295, 3479, 2539, 3250, 13, 51292, 51292, 400, 1228, 264, 1365, 295, 2390, 257, 24028, 1508, 9902, 11, 718, 311, 747, 257, 574, 412, 437, 6713, 5215, 1542, 51550, 51550, 411, 13, 51600, 51600, 961, 311, 360, 300, 294, 264, 958, 960, 13, 51650], "temperature": 0.0, "avg_logprob": -0.09956450157977165, "compression_ratio": 1.6455696202531647, "no_speech_prob": 1.4059227396501228e-05}, {"id": 95, "seek": 46100, "start": 461.0, "end": 468.0, "text": " We'll talk about that in the next video.", "tokens": [50364, 492, 603, 751, 466, 300, 294, 264, 958, 960, 13, 50714], "temperature": 0.0, "avg_logprob": -0.5132232445936936, "compression_ratio": 0.8695652173913043, "no_speech_prob": 0.0008652451797388494}], "language": "en", "video_id": "CndPUzZpZ38", "entity": "ML Specialization, Andrew Ng (2022)"}}